{"sha": "39bb7d015297586294c6416a4db78b50345d2a46", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzliYjdkMDE1Mjk3NTg2Mjk0YzY0MTZhNGRiNzhiNTAzNDVkMmE0Ng==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2016-10-05T11:38:59Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2016-10-05T11:38:59Z"}, "message": "re PR target/77826 (ICE in decompose, at wide-int.h:928 w/ -m64 -O2 and above)\n\n2016-10-05  Richard Biener  <rguenther@suse.de>\n\n\tPR middle-end/77826\n\t* genmatch.c (dt_operand::gen_match_op): Amend operand_equal_p\n\twith types_match for GIMPLE code gen to handle type mismatched\n\tconstants properly.\n\t(dt_operand::gen): Adjust.\n\t* match.pd ((X /[ex] A) * A -> X): Properly handle converted\n\tand constant A.\n\n\t* gcc.dg/torture/pr77826.c: New testcase.\n\nFrom-SVN: r240776", "tree": {"sha": "3a7a8b7f9c7e9c3afc2ea544f0459e8e8419cdd9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3a7a8b7f9c7e9c3afc2ea544f0459e8e8419cdd9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/39bb7d015297586294c6416a4db78b50345d2a46", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/39bb7d015297586294c6416a4db78b50345d2a46", "html_url": "https://github.com/Rust-GCC/gccrs/commit/39bb7d015297586294c6416a4db78b50345d2a46", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/39bb7d015297586294c6416a4db78b50345d2a46/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "eeb57981e2d639f144ee6264fdc2bf6f23f8508b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eeb57981e2d639f144ee6264fdc2bf6f23f8508b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eeb57981e2d639f144ee6264fdc2bf6f23f8508b"}], "stats": {"total": 53, "additions": 45, "deletions": 8}, "files": [{"sha": "43858919d1256812125010636efdb2a7c71de95d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39bb7d015297586294c6416a4db78b50345d2a46/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39bb7d015297586294c6416a4db78b50345d2a46/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=39bb7d015297586294c6416a4db78b50345d2a46", "patch": "@@ -1,3 +1,13 @@\n+2016-10-05  Richard Biener  <rguenther@suse.de>\n+\n+\tPR middle-end/77826\n+\t* genmatch.c (dt_operand::gen_match_op): Amend operand_equal_p\n+\twith types_match for GIMPLE code gen to handle type mismatched\n+\tconstants properly.\n+\t(dt_operand::gen): Adjust.\n+\t* match.pd ((X /[ex] A) * A -> X): Properly handle converted\n+\tand constant A.\n+\n 2016-10-05  Richard Biener  <rguenther@suse.de>\n \n \t* match.pd (copysign(x, CST) -> [-]abs (x)): New pattern."}, {"sha": "5883ba39420f34f9d6ee36eb3ba5ff5474cd5a0a", "filename": "gcc/genmatch.c", "status": "modified", "additions": 11, "deletions": 5, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39bb7d015297586294c6416a4db78b50345d2a46/gcc%2Fgenmatch.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39bb7d015297586294c6416a4db78b50345d2a46/gcc%2Fgenmatch.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgenmatch.c?ref=39bb7d015297586294c6416a4db78b50345d2a46", "patch": "@@ -1562,7 +1562,7 @@ struct dt_operand : public dt_node\n \n   void gen (FILE *, int, bool);\n   unsigned gen_predicate (FILE *, int, const char *, bool);\n-  unsigned gen_match_op (FILE *, int, const char *);\n+  unsigned gen_match_op (FILE *, int, const char *, bool);\n \n   unsigned gen_gimple_expr (FILE *, int);\n   unsigned gen_generic_expr (FILE *, int, const char *);\n@@ -2589,12 +2589,18 @@ dt_operand::gen_predicate (FILE *f, int indent, const char *opname, bool gimple)\n    a capture-match.  */\n \n unsigned\n-dt_operand::gen_match_op (FILE *f, int indent, const char *opname)\n+dt_operand::gen_match_op (FILE *f, int indent, const char *opname, bool gimple)\n {\n   char match_opname[20];\n   match_dop->get_name (match_opname);\n-  fprintf_indent (f, indent, \"if (%s == %s || operand_equal_p (%s, %s, 0))\\n\",\n-\t\t  opname, match_opname, opname, match_opname);\n+  if (gimple)\n+    fprintf_indent (f, indent, \"if (%s == %s || (operand_equal_p (%s, %s, 0) \"\n+\t\t    \"&& types_match (%s, %s)))\\n\",\n+\t\t    opname, match_opname, opname, match_opname,\n+\t\t    opname, match_opname);\n+  else\n+    fprintf_indent (f, indent, \"if (%s == %s || operand_equal_p (%s, %s, 0))\\n\",\n+\t\t    opname, match_opname, opname, match_opname);\n   fprintf_indent (f, indent + 2, \"{\\n\");\n   return 1;\n }\n@@ -2991,7 +2997,7 @@ dt_operand::gen (FILE *f, int indent, bool gimple)\n   else if (type == DT_TRUE)\n     ;\n   else if (type == DT_MATCH)\n-    n_braces = gen_match_op (f, indent, opname);\n+    n_braces = gen_match_op (f, indent, opname, gimple);\n   else\n     gcc_unreachable ();\n "}, {"sha": "1d80613fdf88104de374dd2409da3ead7a7baab0", "filename": "gcc/match.pd", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39bb7d015297586294c6416a4db78b50345d2a46/gcc%2Fmatch.pd", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39bb7d015297586294c6416a4db78b50345d2a46/gcc%2Fmatch.pd", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmatch.pd?ref=39bb7d015297586294c6416a4db78b50345d2a46", "patch": "@@ -1781,9 +1781,13 @@ DEFINE_INT_AND_FLOAT_ROUND_FN (RINT)\n \n /* (X /[ex] A) * A -> X.  */\n (simplify\n-  (mult (convert? (exact_div @0 @1)) @1)\n-  /* Look through a sign-changing conversion.  */\n-  (convert @0))\n+  (mult (convert1? (exact_div @0 @1)) (convert2? @2))\n+  /* We cannot use matching captures here, since in the case of\n+     constants we don't see the second conversion.  Look through\n+     a sign-changing or widening conversions.  */\n+  (if (operand_equal_p (@1, @2, 0)\n+       && element_precision (@0) <= element_precision (type))\n+   (convert @0)))\n \n /* Canonicalization of binary operations.  */\n "}, {"sha": "fa1f310d694772e7b7ae97f39d9f6ef57bd0d9bb", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39bb7d015297586294c6416a4db78b50345d2a46/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39bb7d015297586294c6416a4db78b50345d2a46/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=39bb7d015297586294c6416a4db78b50345d2a46", "patch": "@@ -1,3 +1,8 @@\n+2016-10-05  Richard Biener  <rguenther@suse.de>\n+\n+\tPR middle-end/77826\n+\t* gcc.dg/torture/pr77826.c: New testcase.\n+\n 2016-10-05  Richard Biener  <rguenther@suse.de>\n \n \t* gcc.dg/fold-copysign-1.c: New testcase."}, {"sha": "13e188f28ff4bc5f863c406fff2df60b66e3aa1e", "filename": "gcc/testsuite/gcc.dg/torture/pr77826.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39bb7d015297586294c6416a4db78b50345d2a46/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr77826.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39bb7d015297586294c6416a4db78b50345d2a46/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr77826.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr77826.c?ref=39bb7d015297586294c6416a4db78b50345d2a46", "patch": "@@ -0,0 +1,12 @@\n+/* { dg-do compile } */\n+\n+void\n+fi(unsigned long int *v0, unsigned int ow, int q2)\n+{\n+  if (ow + q2 != 0)\n+    if (q2 == 1)\n+      {\n+\t*v0 |= q2;\n+\tq2 ^= *v0;\n+      }\n+}"}]}