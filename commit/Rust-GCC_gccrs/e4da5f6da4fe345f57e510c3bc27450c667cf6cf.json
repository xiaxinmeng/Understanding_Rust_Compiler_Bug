{"sha": "e4da5f6da4fe345f57e510c3bc27450c667cf6cf", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTRkYTVmNmRhNGZlMzQ1ZjU3ZTUxMGMzYmMyNzQ1MGM2NjdjZjZjZg==", "commit": {"author": {"name": "Michael Meissner", "email": "meissner@cygnus.com", "date": "1998-06-26T13:09:01Z"}, "committer": {"name": "Michael Meissner", "email": "meissner@gcc.gnu.org", "date": "1998-06-26T13:09:01Z"}, "message": "Add hooks for the machine to override the sorting of the ready list and variable issue rates\n\nFrom-SVN: r20740", "tree": {"sha": "1b84b8ef7b7ac4d7a97eacaeef2694bb53e71b5a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1b84b8ef7b7ac4d7a97eacaeef2694bb53e71b5a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e4da5f6da4fe345f57e510c3bc27450c667cf6cf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e4da5f6da4fe345f57e510c3bc27450c667cf6cf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e4da5f6da4fe345f57e510c3bc27450c667cf6cf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e4da5f6da4fe345f57e510c3bc27450c667cf6cf/comments", "author": null, "committer": null, "parents": [{"sha": "db3d4438e6f87dcc70900327f8db2af291633575", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/db3d4438e6f87dcc70900327f8db2af291633575", "html_url": "https://github.com/Rust-GCC/gccrs/commit/db3d4438e6f87dcc70900327f8db2af291633575"}], "stats": {"total": 53, "additions": 53, "deletions": 0}, "files": [{"sha": "fbfaf6f6fbf2e56cf776ea843d934e99befa3168", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e4da5f6da4fe345f57e510c3bc27450c667cf6cf/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e4da5f6da4fe345f57e510c3bc27450c667cf6cf/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e4da5f6da4fe345f57e510c3bc27450c667cf6cf", "patch": "@@ -1,3 +1,10 @@\n+Fri Jun 26 16:03:15 1998  Michael Meissner  <meissner@cygnus.com>\n+\n+\t* haifa-sched.c (schedule_block): Add hooks for the machine\n+\tdescription to reorder the ready list, and update how many more\n+\tinstructions can be issued this cycle.\n+\t* tm.texi (MD_SCHED_{INIT,REORDER,VARIABLE_ISSUE}): Document.\n+\t\n Fri Jun 26 11:54:11 1998  David S. Miller  <davem@pierdol.cobaltmicro.com>\n \n \t* config/sparc/sparc.h (REGNO_OK_FOR_{INDEX,BASE,FP,CCFP}_P):"}, {"sha": "fff73ca8b1b06ba4031d207f465102d822b9469e", "filename": "gcc/haifa-sched.c", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e4da5f6da4fe345f57e510c3bc27450c667cf6cf/gcc%2Fhaifa-sched.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e4da5f6da4fe345f57e510c3bc27450c667cf6cf/gcc%2Fhaifa-sched.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fhaifa-sched.c?ref=e4da5f6da4fe345f57e510c3bc27450c667cf6cf", "patch": "@@ -6725,11 +6725,18 @@ schedule_block (bb, rgn_n_insns)\n \t  }\n       }\n \n+#ifdef MD_SCHED_INIT\n+  MD_SCHED_INIT (dump, sched_verbose);\n+#endif\n+\n   /* no insns scheduled in this block yet */\n   last_scheduled_insn = 0;\n \n   /* Sort the ready list */\n   SCHED_SORT (ready, n_ready);\n+#ifdef MD_SCHED_REORDER\n+  MD_SCHED_REORDER (dump, sched_verbose, ready, n_ready);\n+#endif\n \n   if (sched_verbose >= 2)\n     {\n@@ -6776,6 +6783,9 @@ schedule_block (bb, rgn_n_insns)\n \n       /* Sort the ready list.  */\n       SCHED_SORT (ready, n_ready);\n+#ifdef MD_SCHED_REORDER\n+      MD_SCHED_REORDER (dump, sched_verbose, ready, n_ready);\n+#endif\n \n       if (sched_verbose)\n \t{\n@@ -6865,7 +6875,11 @@ schedule_block (bb, rgn_n_insns)\n \t      last = move_insn (insn, last);\n \t      sched_n_insns++;\n \n+#ifdef MD_SCHED_VARIABLE_ISSUE\n+\t      MD_SCHED_VARIABLE_ISSUE (dump, sched_verbose, insn, can_issue_more);\n+#else\n \t      can_issue_more--;\n+#endif\n \n \t      n_ready = schedule_insn (insn, ready, n_ready, clock_var);\n "}, {"sha": "6f0d2dd74dfb109ba8663aa4fd20c676fa0bda25", "filename": "gcc/tm.texi", "status": "modified", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e4da5f6da4fe345f57e510c3bc27450c667cf6cf/gcc%2Ftm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e4da5f6da4fe345f57e510c3bc27450c667cf6cf/gcc%2Ftm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftm.texi?ref=e4da5f6da4fe345f57e510c3bc27450c667cf6cf", "patch": "@@ -7417,6 +7417,38 @@ A C expression that returns how many instructions can be issued at the\n same time if the machine is a superscalar machine.  This is only used by\n the @samp{Haifa} scheduler, and not the traditional scheduler.\n \n+@findex MD_SCHED_INIT\n+@item MD_SCHED_INIT (@var{file}, @var{verbose}\n+A C statement which is executed by the @samp{Haifa} scheduler at the\n+beginning of each block of instructions that are to be scheduled.\n+@var{file} is either a null pointer, or a stdio stream to write any\n+debug output to.  @var{verbose} is the verbose level provided by\n+@samp{-fsched-verbose-}@var{n}.\n+\n+@findex MD_SCHED_REORDER\n+@item MD_SCHED_REORDER (@var{file}, @var{verbose}, @var{ready}, @var{n_ready})\n+A C statement which is executed by the @samp{Haifa} scheduler after it\n+has scheduled the ready list to allow the machine description to reorder\n+it (for example to combine two small instructions together on\n+@samp{VLIW} machines).  @var{file} is either a null pointer, or a stdio\n+stream to write any debug output to.  @var{verbose} is the verbose level\n+provided by @samp{-fsched-verbose-}@var{n}.  @var{ready} is a pointer to\n+the ready list of instructions that are ready to be scheduled.\n+@var{n_ready} is the number of elements in the ready list.  The\n+scheduler reads the ready list in reverse order, starting with\n+@var{ready}[@var{n_ready}-1] and going to @var{ready}[0].\n+\n+@findex MD_SCHED_VARIABLE_ISSUE\n+@item MD_SCHED_VARIABLE_ISSUE (@var{file}, @var{verbose}, @var{insn}, @var{more})\n+A C statement which is executed by the @samp{Haifa} scheduler after it\n+has scheduled an insn from the ready list.  @var{file} is either a null\n+pointer, or a stdio stream to write any debug output to.  @var{verbose}\n+is the verbose level provided by @samp{-fsched-verbose-}@var{n}.\n+@var{insn} is the instruction that was scheduled.  @var{more} is the\n+number of instructions that can be issued in the current cycle.  The\n+@samp{MD_SCHED_VARIABLE_ISSUE} macro is responsible for updating the\n+value of @var{more} (typically by @var{more}--).\n+\n @findex MAX_INTEGER_COMPUTATION_MODE\n @item MAX_INTEGER_COMPUTATION_MODE\n Define this to the largest integer machine mode which can be used for"}]}