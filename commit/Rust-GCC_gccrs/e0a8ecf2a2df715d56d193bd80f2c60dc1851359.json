{"sha": "e0a8ecf2a2df715d56d193bd80f2c60dc1851359", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTBhOGVjZjJhMmRmNzE1ZDU2ZDE5M2JkODBmMmM2MGRjMTg1MTM1OQ==", "commit": {"author": {"name": "Andrew MacLeod", "email": "amacleod@redhat.com", "date": "2011-06-21T19:04:33Z"}, "committer": {"name": "Andrew Macleod", "email": "amacleod@gcc.gnu.org", "date": "2011-06-21T19:04:33Z"}, "message": "cosmetic. Add sync_ to all the expand_builtin defines which do not match the actual builtin_sync_ names.\n\n2011-06-21  Andrew MacLeod  <amacleod@redhat.com>\n\n\t* builtins.c: Add sync_ or SYNC__ to builtin names.\n\t* sync-builtins.def: Add sync_ or SYNC__ to builtin names.\n\t* omp-low.c: Add sync_ or SYNC__ to builtin names.\n\t* c-family/c-common.c: Add sync_ or SYNC__ to builtin names.\n\t* c-family/c-omp.c: Add sync_ or SYNC__ to builtin names.\n\t* java/builtins.c: Add sync_ or SYNC__ to builtin names.\n\t* java/expr.c: Add sync_ or SYNC__ to builtin names.\n\t* cp/semantics.c: Add sync_ or SYNC__ to builtin names.\n\t* fortran/trans-openmp.c: Add sync_ or SYNC__ to builtin names.\n\t* fortran/trans-stmt.c: Add sync_ or SYNC__ to builtin names.\n\t* fortran/trans-decl.c: Add sync_ or SYNC__ to builtin names.\n\nFrom-SVN: r175270", "tree": {"sha": "542172a8d8596f3d22965c815b00a724d0f38352", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/542172a8d8596f3d22965c815b00a724d0f38352"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e0a8ecf2a2df715d56d193bd80f2c60dc1851359", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e0a8ecf2a2df715d56d193bd80f2c60dc1851359", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e0a8ecf2a2df715d56d193bd80f2c60dc1851359", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e0a8ecf2a2df715d56d193bd80f2c60dc1851359/comments", "author": null, "committer": null, "parents": [{"sha": "663827d3e5b2ae5fdbcc8b2b6591910b886af3b2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/663827d3e5b2ae5fdbcc8b2b6591910b886af3b2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/663827d3e5b2ae5fdbcc8b2b6591910b886af3b2"}], "stats": {"total": 547, "additions": 291, "deletions": 256}, "files": [{"sha": "5c92d93413579df2b3ea22c9ba74e7c708bcbcc7", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0a8ecf2a2df715d56d193bd80f2c60dc1851359/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0a8ecf2a2df715d56d193bd80f2c60dc1851359/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e0a8ecf2a2df715d56d193bd80f2c60dc1851359", "patch": "@@ -1,3 +1,9 @@\n+2011-06-21  Andrew MacLeod  <amacleod@redhat.com>\n+\n+\t* builtins.c: Add sync_ or SYNC__ to builtin names.\n+\t* sync-builtins.def: Add sync_ or SYNC__ to builtin names.\n+\t* omp-low.c: Add sync_ or SYNC__ to builtin names.\n+\n 2011-06-21  Georg-Johann Lay  <avr@gjlay.de>\n \t\n \tPR target/33049"}, {"sha": "4e8a95f6ab103fadf793d356ddf7ff276810fc06", "filename": "gcc/builtins.c", "status": "modified", "additions": 118, "deletions": 116, "changes": 234, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0a8ecf2a2df715d56d193bd80f2c60dc1851359/gcc%2Fbuiltins.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0a8ecf2a2df715d56d193bd80f2c60dc1851359/gcc%2Fbuiltins.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbuiltins.c?ref=e0a8ecf2a2df715d56d193bd80f2c60dc1851359", "patch": "@@ -5083,30 +5083,30 @@ expand_builtin_sync_operation (enum machine_mode mode, tree exp,\n \n       switch (fcode)\n \t{\n-\tcase BUILT_IN_FETCH_AND_NAND_1:\n-\tcase BUILT_IN_FETCH_AND_NAND_2:\n-\tcase BUILT_IN_FETCH_AND_NAND_4:\n-\tcase BUILT_IN_FETCH_AND_NAND_8:\n-\tcase BUILT_IN_FETCH_AND_NAND_16:\n+\tcase BUILT_IN_SYNC_FETCH_AND_NAND_1:\n+\tcase BUILT_IN_SYNC_FETCH_AND_NAND_2:\n+\tcase BUILT_IN_SYNC_FETCH_AND_NAND_4:\n+\tcase BUILT_IN_SYNC_FETCH_AND_NAND_8:\n+\tcase BUILT_IN_SYNC_FETCH_AND_NAND_16:\n \n \t  if (warned_f_a_n)\n \t    break;\n \n-\t  fndecl = implicit_built_in_decls[BUILT_IN_FETCH_AND_NAND_N];\n+\t  fndecl = implicit_built_in_decls[BUILT_IN_SYNC_FETCH_AND_NAND_N];\n \t  inform (loc, \"%qD changed semantics in GCC 4.4\", fndecl);\n \t  warned_f_a_n = true;\n \t  break;\n \n-\tcase BUILT_IN_NAND_AND_FETCH_1:\n-\tcase BUILT_IN_NAND_AND_FETCH_2:\n-\tcase BUILT_IN_NAND_AND_FETCH_4:\n-\tcase BUILT_IN_NAND_AND_FETCH_8:\n-\tcase BUILT_IN_NAND_AND_FETCH_16:\n+\tcase BUILT_IN_SYNC_NAND_AND_FETCH_1:\n+\tcase BUILT_IN_SYNC_NAND_AND_FETCH_2:\n+\tcase BUILT_IN_SYNC_NAND_AND_FETCH_4:\n+\tcase BUILT_IN_SYNC_NAND_AND_FETCH_8:\n+\tcase BUILT_IN_SYNC_NAND_AND_FETCH_16:\n \n \t  if (warned_n_a_f)\n \t    break;\n \n-\t  fndecl = implicit_built_in_decls[BUILT_IN_NAND_AND_FETCH_N];\n+\t  fndecl = implicit_built_in_decls[BUILT_IN_SYNC_NAND_AND_FETCH_N];\n \t  inform (loc, \"%qD changed semantics in GCC 4.4\", fndecl);\n \t  warned_n_a_f = true;\n \t  break;\n@@ -5180,7 +5180,7 @@ expand_builtin_compare_and_swap (enum machine_mode mode, tree exp,\n    the results.  */\n \n static rtx\n-expand_builtin_lock_test_and_set (enum machine_mode mode, tree exp,\n+expand_builtin_sync_lock_test_and_set (enum machine_mode mode, tree exp,\n \t\t\t\t  rtx target)\n {\n   rtx val, mem;\n@@ -5202,7 +5202,7 @@ expand_builtin_lock_test_and_set (enum machine_mode mode, tree exp,\n /* Expand the __sync_synchronize intrinsic.  */\n \n static void\n-expand_builtin_synchronize (void)\n+expand_builtin_sync_synchronize (void)\n {\n   gimple x;\n   VEC (tree, gc) *v_clobbers;\n@@ -5234,7 +5234,7 @@ expand_builtin_synchronize (void)\n /* Expand the __sync_lock_release intrinsic.  EXP is the CALL_EXPR.  */\n \n static void\n-expand_builtin_lock_release (enum machine_mode mode, tree exp)\n+expand_builtin_sync_lock_release (enum machine_mode mode, tree exp)\n {\n   struct expand_operand ops[2];\n   enum insn_code icode;\n@@ -5255,7 +5255,7 @@ expand_builtin_lock_release (enum machine_mode mode, tree exp)\n \n   /* Otherwise we can implement this operation by emitting a barrier\n      followed by a store of zero.  */\n-  expand_builtin_synchronize ();\n+  expand_builtin_sync_synchronize ();\n   emit_move_insn (mem, const0_rtx);\n }\n \f\n@@ -5844,199 +5844,201 @@ expand_builtin (tree exp, rtx target, rtx subtarget, enum machine_mode mode,\n \treturn target;\n       break;\n \n-    case BUILT_IN_FETCH_AND_ADD_1:\n-    case BUILT_IN_FETCH_AND_ADD_2:\n-    case BUILT_IN_FETCH_AND_ADD_4:\n-    case BUILT_IN_FETCH_AND_ADD_8:\n-    case BUILT_IN_FETCH_AND_ADD_16:\n-      mode = get_builtin_sync_mode (fcode - BUILT_IN_FETCH_AND_ADD_1);\n+    case BUILT_IN_SYNC_FETCH_AND_ADD_1:\n+    case BUILT_IN_SYNC_FETCH_AND_ADD_2:\n+    case BUILT_IN_SYNC_FETCH_AND_ADD_4:\n+    case BUILT_IN_SYNC_FETCH_AND_ADD_8:\n+    case BUILT_IN_SYNC_FETCH_AND_ADD_16:\n+      mode = get_builtin_sync_mode (fcode - BUILT_IN_SYNC_FETCH_AND_ADD_1);\n       target = expand_builtin_sync_operation (mode, exp, PLUS,\n \t\t\t\t\t      false, target, ignore);\n       if (target)\n \treturn target;\n       break;\n \n-    case BUILT_IN_FETCH_AND_SUB_1:\n-    case BUILT_IN_FETCH_AND_SUB_2:\n-    case BUILT_IN_FETCH_AND_SUB_4:\n-    case BUILT_IN_FETCH_AND_SUB_8:\n-    case BUILT_IN_FETCH_AND_SUB_16:\n-      mode = get_builtin_sync_mode (fcode - BUILT_IN_FETCH_AND_SUB_1);\n+    case BUILT_IN_SYNC_FETCH_AND_SUB_1:\n+    case BUILT_IN_SYNC_FETCH_AND_SUB_2:\n+    case BUILT_IN_SYNC_FETCH_AND_SUB_4:\n+    case BUILT_IN_SYNC_FETCH_AND_SUB_8:\n+    case BUILT_IN_SYNC_FETCH_AND_SUB_16:\n+      mode = get_builtin_sync_mode (fcode - BUILT_IN_SYNC_FETCH_AND_SUB_1);\n       target = expand_builtin_sync_operation (mode, exp, MINUS,\n \t\t\t\t\t      false, target, ignore);\n       if (target)\n \treturn target;\n       break;\n \n-    case BUILT_IN_FETCH_AND_OR_1:\n-    case BUILT_IN_FETCH_AND_OR_2:\n-    case BUILT_IN_FETCH_AND_OR_4:\n-    case BUILT_IN_FETCH_AND_OR_8:\n-    case BUILT_IN_FETCH_AND_OR_16:\n-      mode = get_builtin_sync_mode (fcode - BUILT_IN_FETCH_AND_OR_1);\n+    case BUILT_IN_SYNC_FETCH_AND_OR_1:\n+    case BUILT_IN_SYNC_FETCH_AND_OR_2:\n+    case BUILT_IN_SYNC_FETCH_AND_OR_4:\n+    case BUILT_IN_SYNC_FETCH_AND_OR_8:\n+    case BUILT_IN_SYNC_FETCH_AND_OR_16:\n+      mode = get_builtin_sync_mode (fcode - BUILT_IN_SYNC_FETCH_AND_OR_1);\n       target = expand_builtin_sync_operation (mode, exp, IOR,\n \t\t\t\t\t      false, target, ignore);\n       if (target)\n \treturn target;\n       break;\n \n-    case BUILT_IN_FETCH_AND_AND_1:\n-    case BUILT_IN_FETCH_AND_AND_2:\n-    case BUILT_IN_FETCH_AND_AND_4:\n-    case BUILT_IN_FETCH_AND_AND_8:\n-    case BUILT_IN_FETCH_AND_AND_16:\n-      mode = get_builtin_sync_mode (fcode - BUILT_IN_FETCH_AND_AND_1);\n+    case BUILT_IN_SYNC_FETCH_AND_AND_1:\n+    case BUILT_IN_SYNC_FETCH_AND_AND_2:\n+    case BUILT_IN_SYNC_FETCH_AND_AND_4:\n+    case BUILT_IN_SYNC_FETCH_AND_AND_8:\n+    case BUILT_IN_SYNC_FETCH_AND_AND_16:\n+      mode = get_builtin_sync_mode (fcode - BUILT_IN_SYNC_FETCH_AND_AND_1);\n       target = expand_builtin_sync_operation (mode, exp, AND,\n \t\t\t\t\t      false, target, ignore);\n       if (target)\n \treturn target;\n       break;\n \n-    case BUILT_IN_FETCH_AND_XOR_1:\n-    case BUILT_IN_FETCH_AND_XOR_2:\n-    case BUILT_IN_FETCH_AND_XOR_4:\n-    case BUILT_IN_FETCH_AND_XOR_8:\n-    case BUILT_IN_FETCH_AND_XOR_16:\n-      mode = get_builtin_sync_mode (fcode - BUILT_IN_FETCH_AND_XOR_1);\n+    case BUILT_IN_SYNC_FETCH_AND_XOR_1:\n+    case BUILT_IN_SYNC_FETCH_AND_XOR_2:\n+    case BUILT_IN_SYNC_FETCH_AND_XOR_4:\n+    case BUILT_IN_SYNC_FETCH_AND_XOR_8:\n+    case BUILT_IN_SYNC_FETCH_AND_XOR_16:\n+      mode = get_builtin_sync_mode (fcode - BUILT_IN_SYNC_FETCH_AND_XOR_1);\n       target = expand_builtin_sync_operation (mode, exp, XOR,\n \t\t\t\t\t      false, target, ignore);\n       if (target)\n \treturn target;\n       break;\n \n-    case BUILT_IN_FETCH_AND_NAND_1:\n-    case BUILT_IN_FETCH_AND_NAND_2:\n-    case BUILT_IN_FETCH_AND_NAND_4:\n-    case BUILT_IN_FETCH_AND_NAND_8:\n-    case BUILT_IN_FETCH_AND_NAND_16:\n-      mode = get_builtin_sync_mode (fcode - BUILT_IN_FETCH_AND_NAND_1);\n+    case BUILT_IN_SYNC_FETCH_AND_NAND_1:\n+    case BUILT_IN_SYNC_FETCH_AND_NAND_2:\n+    case BUILT_IN_SYNC_FETCH_AND_NAND_4:\n+    case BUILT_IN_SYNC_FETCH_AND_NAND_8:\n+    case BUILT_IN_SYNC_FETCH_AND_NAND_16:\n+      mode = get_builtin_sync_mode (fcode - BUILT_IN_SYNC_FETCH_AND_NAND_1);\n       target = expand_builtin_sync_operation (mode, exp, NOT,\n \t\t\t\t\t      false, target, ignore);\n       if (target)\n \treturn target;\n       break;\n \n-    case BUILT_IN_ADD_AND_FETCH_1:\n-    case BUILT_IN_ADD_AND_FETCH_2:\n-    case BUILT_IN_ADD_AND_FETCH_4:\n-    case BUILT_IN_ADD_AND_FETCH_8:\n-    case BUILT_IN_ADD_AND_FETCH_16:\n-      mode = get_builtin_sync_mode (fcode - BUILT_IN_ADD_AND_FETCH_1);\n+    case BUILT_IN_SYNC_ADD_AND_FETCH_1:\n+    case BUILT_IN_SYNC_ADD_AND_FETCH_2:\n+    case BUILT_IN_SYNC_ADD_AND_FETCH_4:\n+    case BUILT_IN_SYNC_ADD_AND_FETCH_8:\n+    case BUILT_IN_SYNC_ADD_AND_FETCH_16:\n+      mode = get_builtin_sync_mode (fcode - BUILT_IN_SYNC_ADD_AND_FETCH_1);\n       target = expand_builtin_sync_operation (mode, exp, PLUS,\n \t\t\t\t\t      true, target, ignore);\n       if (target)\n \treturn target;\n       break;\n \n-    case BUILT_IN_SUB_AND_FETCH_1:\n-    case BUILT_IN_SUB_AND_FETCH_2:\n-    case BUILT_IN_SUB_AND_FETCH_4:\n-    case BUILT_IN_SUB_AND_FETCH_8:\n-    case BUILT_IN_SUB_AND_FETCH_16:\n-      mode = get_builtin_sync_mode (fcode - BUILT_IN_SUB_AND_FETCH_1);\n+    case BUILT_IN_SYNC_SUB_AND_FETCH_1:\n+    case BUILT_IN_SYNC_SUB_AND_FETCH_2:\n+    case BUILT_IN_SYNC_SUB_AND_FETCH_4:\n+    case BUILT_IN_SYNC_SUB_AND_FETCH_8:\n+    case BUILT_IN_SYNC_SUB_AND_FETCH_16:\n+      mode = get_builtin_sync_mode (fcode - BUILT_IN_SYNC_SUB_AND_FETCH_1);\n       target = expand_builtin_sync_operation (mode, exp, MINUS,\n \t\t\t\t\t      true, target, ignore);\n       if (target)\n \treturn target;\n       break;\n \n-    case BUILT_IN_OR_AND_FETCH_1:\n-    case BUILT_IN_OR_AND_FETCH_2:\n-    case BUILT_IN_OR_AND_FETCH_4:\n-    case BUILT_IN_OR_AND_FETCH_8:\n-    case BUILT_IN_OR_AND_FETCH_16:\n-      mode = get_builtin_sync_mode (fcode - BUILT_IN_OR_AND_FETCH_1);\n+    case BUILT_IN_SYNC_OR_AND_FETCH_1:\n+    case BUILT_IN_SYNC_OR_AND_FETCH_2:\n+    case BUILT_IN_SYNC_OR_AND_FETCH_4:\n+    case BUILT_IN_SYNC_OR_AND_FETCH_8:\n+    case BUILT_IN_SYNC_OR_AND_FETCH_16:\n+      mode = get_builtin_sync_mode (fcode - BUILT_IN_SYNC_OR_AND_FETCH_1);\n       target = expand_builtin_sync_operation (mode, exp, IOR,\n \t\t\t\t\t      true, target, ignore);\n       if (target)\n \treturn target;\n       break;\n \n-    case BUILT_IN_AND_AND_FETCH_1:\n-    case BUILT_IN_AND_AND_FETCH_2:\n-    case BUILT_IN_AND_AND_FETCH_4:\n-    case BUILT_IN_AND_AND_FETCH_8:\n-    case BUILT_IN_AND_AND_FETCH_16:\n-      mode = get_builtin_sync_mode (fcode - BUILT_IN_AND_AND_FETCH_1);\n+    case BUILT_IN_SYNC_AND_AND_FETCH_1:\n+    case BUILT_IN_SYNC_AND_AND_FETCH_2:\n+    case BUILT_IN_SYNC_AND_AND_FETCH_4:\n+    case BUILT_IN_SYNC_AND_AND_FETCH_8:\n+    case BUILT_IN_SYNC_AND_AND_FETCH_16:\n+      mode = get_builtin_sync_mode (fcode - BUILT_IN_SYNC_AND_AND_FETCH_1);\n       target = expand_builtin_sync_operation (mode, exp, AND,\n \t\t\t\t\t      true, target, ignore);\n       if (target)\n \treturn target;\n       break;\n \n-    case BUILT_IN_XOR_AND_FETCH_1:\n-    case BUILT_IN_XOR_AND_FETCH_2:\n-    case BUILT_IN_XOR_AND_FETCH_4:\n-    case BUILT_IN_XOR_AND_FETCH_8:\n-    case BUILT_IN_XOR_AND_FETCH_16:\n-      mode = get_builtin_sync_mode (fcode - BUILT_IN_XOR_AND_FETCH_1);\n+    case BUILT_IN_SYNC_XOR_AND_FETCH_1:\n+    case BUILT_IN_SYNC_XOR_AND_FETCH_2:\n+    case BUILT_IN_SYNC_XOR_AND_FETCH_4:\n+    case BUILT_IN_SYNC_XOR_AND_FETCH_8:\n+    case BUILT_IN_SYNC_XOR_AND_FETCH_16:\n+      mode = get_builtin_sync_mode (fcode - BUILT_IN_SYNC_XOR_AND_FETCH_1);\n       target = expand_builtin_sync_operation (mode, exp, XOR,\n \t\t\t\t\t      true, target, ignore);\n       if (target)\n \treturn target;\n       break;\n \n-    case BUILT_IN_NAND_AND_FETCH_1:\n-    case BUILT_IN_NAND_AND_FETCH_2:\n-    case BUILT_IN_NAND_AND_FETCH_4:\n-    case BUILT_IN_NAND_AND_FETCH_8:\n-    case BUILT_IN_NAND_AND_FETCH_16:\n-      mode = get_builtin_sync_mode (fcode - BUILT_IN_NAND_AND_FETCH_1);\n+    case BUILT_IN_SYNC_NAND_AND_FETCH_1:\n+    case BUILT_IN_SYNC_NAND_AND_FETCH_2:\n+    case BUILT_IN_SYNC_NAND_AND_FETCH_4:\n+    case BUILT_IN_SYNC_NAND_AND_FETCH_8:\n+    case BUILT_IN_SYNC_NAND_AND_FETCH_16:\n+      mode = get_builtin_sync_mode (fcode - BUILT_IN_SYNC_NAND_AND_FETCH_1);\n       target = expand_builtin_sync_operation (mode, exp, NOT,\n \t\t\t\t\t      true, target, ignore);\n       if (target)\n \treturn target;\n       break;\n \n-    case BUILT_IN_BOOL_COMPARE_AND_SWAP_1:\n-    case BUILT_IN_BOOL_COMPARE_AND_SWAP_2:\n-    case BUILT_IN_BOOL_COMPARE_AND_SWAP_4:\n-    case BUILT_IN_BOOL_COMPARE_AND_SWAP_8:\n-    case BUILT_IN_BOOL_COMPARE_AND_SWAP_16:\n+    case BUILT_IN_SYNC_BOOL_COMPARE_AND_SWAP_1:\n+    case BUILT_IN_SYNC_BOOL_COMPARE_AND_SWAP_2:\n+    case BUILT_IN_SYNC_BOOL_COMPARE_AND_SWAP_4:\n+    case BUILT_IN_SYNC_BOOL_COMPARE_AND_SWAP_8:\n+    case BUILT_IN_SYNC_BOOL_COMPARE_AND_SWAP_16:\n       if (mode == VOIDmode)\n \tmode = TYPE_MODE (boolean_type_node);\n       if (!target || !register_operand (target, mode))\n \ttarget = gen_reg_rtx (mode);\n \n-      mode = get_builtin_sync_mode (fcode - BUILT_IN_BOOL_COMPARE_AND_SWAP_1);\n+      mode = get_builtin_sync_mode \n+\t\t\t\t(fcode - BUILT_IN_SYNC_BOOL_COMPARE_AND_SWAP_1);\n       target = expand_builtin_compare_and_swap (mode, exp, true, target);\n       if (target)\n \treturn target;\n       break;\n \n-    case BUILT_IN_VAL_COMPARE_AND_SWAP_1:\n-    case BUILT_IN_VAL_COMPARE_AND_SWAP_2:\n-    case BUILT_IN_VAL_COMPARE_AND_SWAP_4:\n-    case BUILT_IN_VAL_COMPARE_AND_SWAP_8:\n-    case BUILT_IN_VAL_COMPARE_AND_SWAP_16:\n-      mode = get_builtin_sync_mode (fcode - BUILT_IN_VAL_COMPARE_AND_SWAP_1);\n+    case BUILT_IN_SYNC_VAL_COMPARE_AND_SWAP_1:\n+    case BUILT_IN_SYNC_VAL_COMPARE_AND_SWAP_2:\n+    case BUILT_IN_SYNC_VAL_COMPARE_AND_SWAP_4:\n+    case BUILT_IN_SYNC_VAL_COMPARE_AND_SWAP_8:\n+    case BUILT_IN_SYNC_VAL_COMPARE_AND_SWAP_16:\n+      mode = get_builtin_sync_mode \n+\t\t\t\t(fcode - BUILT_IN_SYNC_VAL_COMPARE_AND_SWAP_1);\n       target = expand_builtin_compare_and_swap (mode, exp, false, target);\n       if (target)\n \treturn target;\n       break;\n \n-    case BUILT_IN_LOCK_TEST_AND_SET_1:\n-    case BUILT_IN_LOCK_TEST_AND_SET_2:\n-    case BUILT_IN_LOCK_TEST_AND_SET_4:\n-    case BUILT_IN_LOCK_TEST_AND_SET_8:\n-    case BUILT_IN_LOCK_TEST_AND_SET_16:\n-      mode = get_builtin_sync_mode (fcode - BUILT_IN_LOCK_TEST_AND_SET_1);\n-      target = expand_builtin_lock_test_and_set (mode, exp, target);\n+    case BUILT_IN_SYNC_LOCK_TEST_AND_SET_1:\n+    case BUILT_IN_SYNC_LOCK_TEST_AND_SET_2:\n+    case BUILT_IN_SYNC_LOCK_TEST_AND_SET_4:\n+    case BUILT_IN_SYNC_LOCK_TEST_AND_SET_8:\n+    case BUILT_IN_SYNC_LOCK_TEST_AND_SET_16:\n+      mode = get_builtin_sync_mode (fcode - BUILT_IN_SYNC_LOCK_TEST_AND_SET_1);\n+      target = expand_builtin_sync_lock_test_and_set (mode, exp, target);\n       if (target)\n \treturn target;\n       break;\n \n-    case BUILT_IN_LOCK_RELEASE_1:\n-    case BUILT_IN_LOCK_RELEASE_2:\n-    case BUILT_IN_LOCK_RELEASE_4:\n-    case BUILT_IN_LOCK_RELEASE_8:\n-    case BUILT_IN_LOCK_RELEASE_16:\n-      mode = get_builtin_sync_mode (fcode - BUILT_IN_LOCK_RELEASE_1);\n-      expand_builtin_lock_release (mode, exp);\n+    case BUILT_IN_SYNC_LOCK_RELEASE_1:\n+    case BUILT_IN_SYNC_LOCK_RELEASE_2:\n+    case BUILT_IN_SYNC_LOCK_RELEASE_4:\n+    case BUILT_IN_SYNC_LOCK_RELEASE_8:\n+    case BUILT_IN_SYNC_LOCK_RELEASE_16:\n+      mode = get_builtin_sync_mode (fcode - BUILT_IN_SYNC_LOCK_RELEASE_1);\n+      expand_builtin_sync_lock_release (mode, exp);\n       return const0_rtx;\n \n-    case BUILT_IN_SYNCHRONIZE:\n-      expand_builtin_synchronize ();\n+    case BUILT_IN_SYNC_SYNCHRONIZE:\n+      expand_builtin_sync_synchronize ();\n       return const0_rtx;\n \n     case BUILT_IN_OBJECT_SIZE:"}, {"sha": "29cc71954d770c0ed2281eba424ef0b399f01a58", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0a8ecf2a2df715d56d193bd80f2c60dc1851359/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0a8ecf2a2df715d56d193bd80f2c60dc1851359/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=e0a8ecf2a2df715d56d193bd80f2c60dc1851359", "patch": "@@ -1,3 +1,7 @@\n+2011-06-21  Andrew MacLeod  <amacleod@redhat.com>\n+\n+\t* c-common.c: Add sync_ or SYNC__ to builtin names.\n+\t* c-omp.c: Add sync_ or SYNC__ to builtin names.\n \n 2011-06-20  Pierre Vittet  <piervit@pvittet.com>\n "}, {"sha": "36076946d390722ca7609e9348eb5b849fb3618a", "filename": "gcc/c-family/c-common.c", "status": "modified", "additions": 18, "deletions": 18, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0a8ecf2a2df715d56d193bd80f2c60dc1851359/gcc%2Fc-family%2Fc-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0a8ecf2a2df715d56d193bd80f2c60dc1851359/gcc%2Fc-family%2Fc-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-common.c?ref=e0a8ecf2a2df715d56d193bd80f2c60dc1851359", "patch": "@@ -9044,22 +9044,22 @@ resolve_overloaded_builtin (location_t loc, tree function, VEC(tree,gc) *params)\n   /* Handle BUILT_IN_NORMAL here.  */\n   switch (orig_code)\n     {\n-    case BUILT_IN_FETCH_AND_ADD_N:\n-    case BUILT_IN_FETCH_AND_SUB_N:\n-    case BUILT_IN_FETCH_AND_OR_N:\n-    case BUILT_IN_FETCH_AND_AND_N:\n-    case BUILT_IN_FETCH_AND_XOR_N:\n-    case BUILT_IN_FETCH_AND_NAND_N:\n-    case BUILT_IN_ADD_AND_FETCH_N:\n-    case BUILT_IN_SUB_AND_FETCH_N:\n-    case BUILT_IN_OR_AND_FETCH_N:\n-    case BUILT_IN_AND_AND_FETCH_N:\n-    case BUILT_IN_XOR_AND_FETCH_N:\n-    case BUILT_IN_NAND_AND_FETCH_N:\n-    case BUILT_IN_BOOL_COMPARE_AND_SWAP_N:\n-    case BUILT_IN_VAL_COMPARE_AND_SWAP_N:\n-    case BUILT_IN_LOCK_TEST_AND_SET_N:\n-    case BUILT_IN_LOCK_RELEASE_N:\n+    case BUILT_IN_SYNC_FETCH_AND_ADD_N:\n+    case BUILT_IN_SYNC_FETCH_AND_SUB_N:\n+    case BUILT_IN_SYNC_FETCH_AND_OR_N:\n+    case BUILT_IN_SYNC_FETCH_AND_AND_N:\n+    case BUILT_IN_SYNC_FETCH_AND_XOR_N:\n+    case BUILT_IN_SYNC_FETCH_AND_NAND_N:\n+    case BUILT_IN_SYNC_ADD_AND_FETCH_N:\n+    case BUILT_IN_SYNC_SUB_AND_FETCH_N:\n+    case BUILT_IN_SYNC_OR_AND_FETCH_N:\n+    case BUILT_IN_SYNC_AND_AND_FETCH_N:\n+    case BUILT_IN_SYNC_XOR_AND_FETCH_N:\n+    case BUILT_IN_SYNC_NAND_AND_FETCH_N:\n+    case BUILT_IN_SYNC_BOOL_COMPARE_AND_SWAP_N:\n+    case BUILT_IN_SYNC_VAL_COMPARE_AND_SWAP_N:\n+    case BUILT_IN_SYNC_LOCK_TEST_AND_SET_N:\n+    case BUILT_IN_SYNC_LOCK_RELEASE_N:\n       {\n \tint n = sync_resolve_size (function, params);\n \ttree new_function, first_param, result;\n@@ -9073,8 +9073,8 @@ resolve_overloaded_builtin (location_t loc, tree function, VEC(tree,gc) *params)\n \n \tfirst_param = VEC_index (tree, params, 0);\n \tresult = build_function_call_vec (loc, new_function, params, NULL);\n-\tif (orig_code != BUILT_IN_BOOL_COMPARE_AND_SWAP_N\n-\t    && orig_code != BUILT_IN_LOCK_RELEASE_N)\n+\tif (orig_code != BUILT_IN_SYNC_BOOL_COMPARE_AND_SWAP_N\n+\t    && orig_code != BUILT_IN_SYNC_LOCK_RELEASE_N)\n \t  result = sync_resolve_return (first_param, result);\n \n \treturn result;"}, {"sha": "1ee0bf0f8d59500177ac201caa1ca32912e9a199", "filename": "gcc/c-family/c-omp.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0a8ecf2a2df715d56d193bd80f2c60dc1851359/gcc%2Fc-family%2Fc-omp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0a8ecf2a2df715d56d193bd80f2c60dc1851359/gcc%2Fc-family%2Fc-omp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-omp.c?ref=e0a8ecf2a2df715d56d193bd80f2c60dc1851359", "patch": "@@ -169,7 +169,7 @@ c_finish_omp_flush (location_t loc)\n {\n   tree x;\n \n-  x = built_in_decls[BUILT_IN_SYNCHRONIZE];\n+  x = built_in_decls[BUILT_IN_SYNC_SYNCHRONIZE];\n   x = build_call_expr_loc (loc, x, 0);\n   add_stmt (x);\n }"}, {"sha": "97bead8f0afb4ca7736ab8acd15c92e1e80d7918", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0a8ecf2a2df715d56d193bd80f2c60dc1851359/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0a8ecf2a2df715d56d193bd80f2c60dc1851359/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=e0a8ecf2a2df715d56d193bd80f2c60dc1851359", "patch": "@@ -1,3 +1,7 @@\n+2011-06-21  Andrew MacLeod  <amacleod@redhat.com>\n+\n+\t* semantics.c: Add sync_ or SYNC__ to builtin names.\n+\n 2011-06-20  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/49216"}, {"sha": "1c9d70ab28696394f8102af2091be4eee4d23f9e", "filename": "gcc/cp/semantics.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0a8ecf2a2df715d56d193bd80f2c60dc1851359/gcc%2Fcp%2Fsemantics.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0a8ecf2a2df715d56d193bd80f2c60dc1851359/gcc%2Fcp%2Fsemantics.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsemantics.c?ref=e0a8ecf2a2df715d56d193bd80f2c60dc1851359", "patch": "@@ -4722,7 +4722,7 @@ finish_omp_barrier (void)\n void\n finish_omp_flush (void)\n {\n-  tree fn = built_in_decls[BUILT_IN_SYNCHRONIZE];\n+  tree fn = built_in_decls[BUILT_IN_SYNC_SYNCHRONIZE];\n   VEC(tree,gc) *vec = make_tree_vector ();\n   tree stmt = finish_call_expr (fn, &vec, false, false, tf_warning_or_error);\n   release_tree_vector (vec);"}, {"sha": "b1f48537632198df6846ca5fce71ba7d5412448e", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0a8ecf2a2df715d56d193bd80f2c60dc1851359/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0a8ecf2a2df715d56d193bd80f2c60dc1851359/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=e0a8ecf2a2df715d56d193bd80f2c60dc1851359", "patch": "@@ -1,3 +1,9 @@\n+2011-06-21  Andrew MacLeod  <amacleod@redhat.com>\n+\n+\t* trans-openmp.c: Add sync_ or SYNC__ to builtin names.\n+\t* trans-stmt.c: Add sync_ or SYNC__ to builtin names.\n+\t* trans-decl.c: Add sync_ or SYNC__ to builtin names.\n+\n 2011-06-21  Janus Weil  <janus@gcc.gnu.org>\n \n \tPR fortran/49112"}, {"sha": "cca1beb2ce8cb7f07a801afc8e28a587321977d5", "filename": "gcc/fortran/trans-decl.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0a8ecf2a2df715d56d193bd80f2c60dc1851359/gcc%2Ffortran%2Ftrans-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0a8ecf2a2df715d56d193bd80f2c60dc1851359/gcc%2Ffortran%2Ftrans-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-decl.c?ref=e0a8ecf2a2df715d56d193bd80f2c60dc1851359", "patch": "@@ -4904,7 +4904,7 @@ create_main_function (tree fndecl)\n     { \n       /* Per F2008, 8.5.1 END of the main program implies a\n \t SYNC MEMORY.  */ \n-      tmp = built_in_decls [BUILT_IN_SYNCHRONIZE];\n+      tmp = built_in_decls [BUILT_IN_SYNC_SYNCHRONIZE];\n       tmp = build_call_expr_loc (input_location, tmp, 0);\n       gfc_add_expr_to_block (&body, tmp);\n "}, {"sha": "9677659fd4795faab7da9d2cfb86965503d71ea0", "filename": "gcc/fortran/trans-openmp.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0a8ecf2a2df715d56d193bd80f2c60dc1851359/gcc%2Ffortran%2Ftrans-openmp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0a8ecf2a2df715d56d193bd80f2c60dc1851359/gcc%2Ffortran%2Ftrans-openmp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-openmp.c?ref=e0a8ecf2a2df715d56d193bd80f2c60dc1851359", "patch": "@@ -1430,7 +1430,7 @@ gfc_trans_omp_do (gfc_code *code, stmtblock_t *pblock,\n static tree\n gfc_trans_omp_flush (void)\n {\n-  tree decl = built_in_decls [BUILT_IN_SYNCHRONIZE];\n+  tree decl = built_in_decls [BUILT_IN_SYNC_SYNCHRONIZE];\n   return build_call_expr_loc (input_location, decl, 0);\n }\n "}, {"sha": "f3347a6a238a9b49b68545e0229a74be592a3180", "filename": "gcc/fortran/trans-stmt.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0a8ecf2a2df715d56d193bd80f2c60dc1851359/gcc%2Ffortran%2Ftrans-stmt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0a8ecf2a2df715d56d193bd80f2c60dc1851359/gcc%2Ffortran%2Ftrans-stmt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-stmt.c?ref=e0a8ecf2a2df715d56d193bd80f2c60dc1851359", "patch": "@@ -602,7 +602,7 @@ gfc_trans_stop (gfc_code *code, bool error_stop)\n   if (gfc_option.coarray == GFC_FCOARRAY_LIB && !error_stop)\n     {\n       /* Per F2008, 8.5.1 STOP implies a SYNC MEMORY.  */\n-      tmp = built_in_decls [BUILT_IN_SYNCHRONIZE];\n+      tmp = built_in_decls [BUILT_IN_SYNC_SYNCHRONIZE];\n       tmp = build_call_expr_loc (input_location, tmp, 0);\n       gfc_add_expr_to_block (&se.pre, tmp);\n \n@@ -774,7 +774,7 @@ gfc_trans_sync (gfc_code *code, gfc_exec_op type)\n       image control statements SYNC IMAGES and SYNC ALL.  */\n    if (gfc_option.coarray == GFC_FCOARRAY_LIB)\n      {\n-\ttmp = built_in_decls [BUILT_IN_SYNCHRONIZE];\n+\ttmp = built_in_decls [BUILT_IN_SYNC_SYNCHRONIZE];\n \ttmp = build_call_expr_loc (input_location, tmp, 0);\n \tgfc_add_expr_to_block (&se.pre, tmp);\n      }"}, {"sha": "98dd104b2bbc70dfe0e02f90d1dd90acb9f1318e", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0a8ecf2a2df715d56d193bd80f2c60dc1851359/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0a8ecf2a2df715d56d193bd80f2c60dc1851359/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=e0a8ecf2a2df715d56d193bd80f2c60dc1851359", "patch": "@@ -1,3 +1,8 @@\n+2011-06-21  Andrew MacLeod  <amacleod@redhat.com>\n+\n+\t* builtins.c: Add sync_ or SYNC__ to builtin names.\n+\t* expr.c: Add sync_ or SYNC__ to builtin names.\n+\n 2011-06-07  Richard Guenther  <rguenther@suse.de>\n \n \t* decl.c (java_init_decl_processing): Call build_common_nodes,"}, {"sha": "817f8628c77328e3aadcb63cdd4ecc9630fc1c72", "filename": "gcc/java/builtins.c", "status": "modified", "additions": 13, "deletions": 11, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0a8ecf2a2df715d56d193bd80f2c60dc1851359/gcc%2Fjava%2Fbuiltins.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0a8ecf2a2df715d56d193bd80f2c60dc1851359/gcc%2Fjava%2Fbuiltins.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fbuiltins.c?ref=e0a8ecf2a2df715d56d193bd80f2c60dc1851359", "patch": "@@ -331,8 +331,9 @@ compareAndSwapInt_builtin (tree method_return_type ATTRIBUTE_UNUSED,\n       (void) value_type; /* Avoid set but not used warning.  */\n \n       addr = build_addr_sum (int_type_node, obj_arg, offset_arg);\n-      stmt = build_call_expr (built_in_decls[BUILT_IN_BOOL_COMPARE_AND_SWAP_4],\n-\t\t\t      3, addr, expected_arg, value_arg);\n+      stmt = build_call_expr \n+\t\t\t(built_in_decls[BUILT_IN_SYNC_BOOL_COMPARE_AND_SWAP_4],\n+\t\t\t 3, addr, expected_arg, value_arg);\n \n       return build_check_this (stmt, this_arg);\n     }\n@@ -357,8 +358,9 @@ compareAndSwapLong_builtin (tree method_return_type ATTRIBUTE_UNUSED,\n       (void) value_type; /* Avoid set but not used warning.  */\n \n       addr = build_addr_sum (long_type_node, obj_arg, offset_arg);\n-      stmt = build_call_expr (built_in_decls[BUILT_IN_BOOL_COMPARE_AND_SWAP_8],\n-\t\t\t      3, addr, expected_arg, value_arg);\n+      stmt = build_call_expr \n+\t\t\t(built_in_decls[BUILT_IN_SYNC_BOOL_COMPARE_AND_SWAP_8],\n+\t\t\t 3, addr, expected_arg, value_arg);\n \n       return build_check_this (stmt, this_arg);\n     }\n@@ -378,8 +380,8 @@ compareAndSwapObject_builtin (tree method_return_type ATTRIBUTE_UNUSED,\n \n     UNMARSHAL5 (orig_call);\n     builtin = (POINTER_SIZE == 32 \n-\t       ? BUILT_IN_BOOL_COMPARE_AND_SWAP_4 \n-\t       : BUILT_IN_BOOL_COMPARE_AND_SWAP_8);\n+\t       ? BUILT_IN_SYNC_BOOL_COMPARE_AND_SWAP_4 \n+\t       : BUILT_IN_SYNC_BOOL_COMPARE_AND_SWAP_8);\n \n     addr = build_addr_sum (value_type, obj_arg, offset_arg);\n     stmt = build_call_expr (built_in_decls[builtin],\n@@ -402,7 +404,7 @@ putVolatile_builtin (tree method_return_type ATTRIBUTE_UNUSED,\n     = fold_convert (build_pointer_type (build_type_variant (value_type, 0, 1)),\n \t\t    addr);\n   \n-  stmt = build_call_expr (built_in_decls[BUILT_IN_SYNCHRONIZE], 0);\n+  stmt = build_call_expr (built_in_decls[BUILT_IN_SYNC_SYNCHRONIZE], 0);\n   modify_stmt = fold_build2 (MODIFY_EXPR, value_type,\n \t\t\t     build_java_indirect_ref (value_type, addr,\n \t\t\t\t\t\t      flag_check_references),\n@@ -426,7 +428,7 @@ getVolatile_builtin (tree method_return_type ATTRIBUTE_UNUSED,\n     = fold_convert (build_pointer_type (build_type_variant \n \t\t\t\t\t(method_return_type, 0, 1)), addr);\n   \n-  stmt = build_call_expr (built_in_decls[BUILT_IN_SYNCHRONIZE], 0);\n+  stmt = build_call_expr (built_in_decls[BUILT_IN_SYNC_SYNCHRONIZE], 0);\n   \n   tmp = build_decl (BUILTINS_LOCATION, VAR_DECL, NULL, method_return_type);\n   DECL_IGNORED_P (tmp) = 1;\n@@ -573,21 +575,21 @@ initialize_builtins (void)\n \t\t  boolean_ftype_boolean_boolean,\n \t\t  \"__builtin_expect\",\n \t\t  BUILTIN_CONST | BUILTIN_NOTHROW);\n-  define_builtin (BUILT_IN_BOOL_COMPARE_AND_SWAP_4, \n+  define_builtin (BUILT_IN_SYNC_BOOL_COMPARE_AND_SWAP_4, \n \t\t  \"__sync_bool_compare_and_swap_4\",\n \t\t  build_function_type_list (boolean_type_node,\n \t\t\t\t\t    int_type_node, \n \t\t\t\t\t    build_pointer_type (int_type_node),\n \t\t\t\t\t    int_type_node, NULL_TREE), \n \t\t  \"__sync_bool_compare_and_swap_4\", 0);\n-  define_builtin (BUILT_IN_BOOL_COMPARE_AND_SWAP_8, \n+  define_builtin (BUILT_IN_SYNC_BOOL_COMPARE_AND_SWAP_8, \n \t\t  \"__sync_bool_compare_and_swap_8\",\n \t\t  build_function_type_list (boolean_type_node,\n \t\t\t\t\t    long_type_node, \n \t\t\t\t\t    build_pointer_type (long_type_node),\n \t\t\t\t\t    int_type_node, NULL_TREE), \n \t\t  \"__sync_bool_compare_and_swap_8\", 0);\n-  define_builtin (BUILT_IN_SYNCHRONIZE, \"__sync_synchronize\",\n+  define_builtin (BUILT_IN_SYNC_SYNCHRONIZE, \"__sync_synchronize\",\n \t\t  build_function_type_list (void_type_node, NULL_TREE),\n \t\t  \"__sync_synchronize\", BUILTIN_NOTHROW);\n   "}, {"sha": "3bf983a2bcaaa743a4218aa87f71aff43e4736ad", "filename": "gcc/java/expr.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0a8ecf2a2df715d56d193bd80f2c60dc1851359/gcc%2Fjava%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0a8ecf2a2df715d56d193bd80f2c60dc1851359/gcc%2Fjava%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fexpr.c?ref=e0a8ecf2a2df715d56d193bd80f2c60dc1851359", "patch": "@@ -2940,7 +2940,7 @@ expand_java_field_op (int is_static, int is_putting, int field_ref_index)\n \n       if (TREE_THIS_VOLATILE (field_decl))\n \tjava_add_stmt\n-\t  (build_call_expr (built_in_decls[BUILT_IN_SYNCHRONIZE], 0));\n+\t  (build_call_expr (built_in_decls[BUILT_IN_SYNC_SYNCHRONIZE], 0));\n       \t  \n       java_add_stmt (modify_expr);\n     }\n@@ -2959,7 +2959,7 @@ expand_java_field_op (int is_static, int is_putting, int field_ref_index)\n \n       if (TREE_THIS_VOLATILE (field_decl))\n \tjava_add_stmt \n-\t  (build_call_expr (built_in_decls[BUILT_IN_SYNCHRONIZE], 0));\n+\t  (build_call_expr (built_in_decls[BUILT_IN_SYNC_SYNCHRONIZE], 0));\n \n       push_value (temp);\n     }      "}, {"sha": "944a40bce979a884ff710366e5887bad9c85a28d", "filename": "gcc/omp-low.c", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0a8ecf2a2df715d56d193bd80f2c60dc1851359/gcc%2Fomp-low.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0a8ecf2a2df715d56d193bd80f2c60dc1851359/gcc%2Fomp-low.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fomp-low.c?ref=e0a8ecf2a2df715d56d193bd80f2c60dc1851359", "patch": "@@ -4973,23 +4973,23 @@ expand_omp_atomic_fetch_op (basic_block load_bb,\n     {\n     case PLUS_EXPR:\n     case POINTER_PLUS_EXPR:\n-      base = BUILT_IN_FETCH_AND_ADD_N;\n+      base = BUILT_IN_SYNC_FETCH_AND_ADD_N;\n       optab = sync_add_optab;\n       break;\n     case MINUS_EXPR:\n-      base = BUILT_IN_FETCH_AND_SUB_N;\n+      base = BUILT_IN_SYNC_FETCH_AND_SUB_N;\n       optab = sync_add_optab;\n       break;\n     case BIT_AND_EXPR:\n-      base = BUILT_IN_FETCH_AND_AND_N;\n+      base = BUILT_IN_SYNC_FETCH_AND_AND_N;\n       optab = sync_and_optab;\n       break;\n     case BIT_IOR_EXPR:\n-      base = BUILT_IN_FETCH_AND_OR_N;\n+      base = BUILT_IN_SYNC_FETCH_AND_OR_N;\n       optab = sync_ior_optab;\n       break;\n     case BIT_XOR_EXPR:\n-      base = BUILT_IN_FETCH_AND_XOR_N;\n+      base = BUILT_IN_SYNC_FETCH_AND_XOR_N;\n       optab = sync_xor_optab;\n       break;\n     default:\n@@ -5057,7 +5057,7 @@ expand_omp_atomic_pipeline (basic_block load_bb, basic_block store_bb,\n   gimple phi, stmt;\n   edge e;\n \n-  cmpxchg = built_in_decls[BUILT_IN_VAL_COMPARE_AND_SWAP_N + index + 1];\n+  cmpxchg = built_in_decls[BUILT_IN_SYNC_VAL_COMPARE_AND_SWAP_N + index + 1];\n   if (cmpxchg == NULL_TREE)\n     return false;\n   type = TYPE_MAIN_VARIANT (TREE_TYPE (TREE_TYPE (addr)));"}, {"sha": "731d4a237c293847fcbf94e756aa7778b01d46e1", "filename": "gcc/sync-builtins.def", "status": "modified", "additions": 103, "deletions": 97, "changes": 200, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0a8ecf2a2df715d56d193bd80f2c60dc1851359/gcc%2Fsync-builtins.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0a8ecf2a2df715d56d193bd80f2c60dc1851359/gcc%2Fsync-builtins.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsync-builtins.def?ref=e0a8ecf2a2df715d56d193bd80f2c60dc1851359", "patch": "@@ -28,225 +28,231 @@ along with GCC; see the file COPYING3.  If not see\n    is supposed to be using.  It's overloaded, and is resolved to one of the\n    \"_1\" through \"_16\" versions, plus some extra casts.  */\n \n-DEF_SYNC_BUILTIN (BUILT_IN_FETCH_AND_ADD_N, \"__sync_fetch_and_add\",\n+DEF_SYNC_BUILTIN (BUILT_IN_SYNC_FETCH_AND_ADD_N, \"__sync_fetch_and_add\",\n \t\t  BT_FN_VOID_VAR, ATTR_NOTHROW_LEAF_LIST)\n-DEF_SYNC_BUILTIN (BUILT_IN_FETCH_AND_ADD_1, \"__sync_fetch_and_add_1\",\n+DEF_SYNC_BUILTIN (BUILT_IN_SYNC_FETCH_AND_ADD_1, \"__sync_fetch_and_add_1\",\n \t\t  BT_FN_I1_VPTR_I1, ATTR_NOTHROW_LEAF_LIST)\n-DEF_SYNC_BUILTIN (BUILT_IN_FETCH_AND_ADD_2, \"__sync_fetch_and_add_2\",\n+DEF_SYNC_BUILTIN (BUILT_IN_SYNC_FETCH_AND_ADD_2, \"__sync_fetch_and_add_2\",\n \t\t  BT_FN_I2_VPTR_I2, ATTR_NOTHROW_LEAF_LIST)\n-DEF_SYNC_BUILTIN (BUILT_IN_FETCH_AND_ADD_4, \"__sync_fetch_and_add_4\",\n+DEF_SYNC_BUILTIN (BUILT_IN_SYNC_FETCH_AND_ADD_4, \"__sync_fetch_and_add_4\",\n \t\t  BT_FN_I4_VPTR_I4, ATTR_NOTHROW_LEAF_LIST)\n-DEF_SYNC_BUILTIN (BUILT_IN_FETCH_AND_ADD_8, \"__sync_fetch_and_add_8\",\n+DEF_SYNC_BUILTIN (BUILT_IN_SYNC_FETCH_AND_ADD_8, \"__sync_fetch_and_add_8\",\n \t\t  BT_FN_I8_VPTR_I8, ATTR_NOTHROW_LEAF_LIST)\n-DEF_SYNC_BUILTIN (BUILT_IN_FETCH_AND_ADD_16, \"__sync_fetch_and_add_16\",\n+DEF_SYNC_BUILTIN (BUILT_IN_SYNC_FETCH_AND_ADD_16, \"__sync_fetch_and_add_16\",\n \t\t  BT_FN_I16_VPTR_I16, ATTR_NOTHROW_LEAF_LIST)\n \n-DEF_SYNC_BUILTIN (BUILT_IN_FETCH_AND_SUB_N, \"__sync_fetch_and_sub\",\n+DEF_SYNC_BUILTIN (BUILT_IN_SYNC_FETCH_AND_SUB_N, \"__sync_fetch_and_sub\",\n \t\t  BT_FN_VOID_VAR, ATTR_NOTHROW_LEAF_LIST)\n-DEF_SYNC_BUILTIN (BUILT_IN_FETCH_AND_SUB_1, \"__sync_fetch_and_sub_1\",\n+DEF_SYNC_BUILTIN (BUILT_IN_SYNC_FETCH_AND_SUB_1, \"__sync_fetch_and_sub_1\",\n \t\t  BT_FN_I1_VPTR_I1, ATTR_NOTHROW_LEAF_LIST)\n-DEF_SYNC_BUILTIN (BUILT_IN_FETCH_AND_SUB_2, \"__sync_fetch_and_sub_2\",\n+DEF_SYNC_BUILTIN (BUILT_IN_SYNC_FETCH_AND_SUB_2, \"__sync_fetch_and_sub_2\",\n \t\t  BT_FN_I2_VPTR_I2, ATTR_NOTHROW_LEAF_LIST)\n-DEF_SYNC_BUILTIN (BUILT_IN_FETCH_AND_SUB_4, \"__sync_fetch_and_sub_4\",\n+DEF_SYNC_BUILTIN (BUILT_IN_SYNC_FETCH_AND_SUB_4, \"__sync_fetch_and_sub_4\",\n \t\t  BT_FN_I4_VPTR_I4, ATTR_NOTHROW_LEAF_LIST)\n-DEF_SYNC_BUILTIN (BUILT_IN_FETCH_AND_SUB_8, \"__sync_fetch_and_sub_8\",\n+DEF_SYNC_BUILTIN (BUILT_IN_SYNC_FETCH_AND_SUB_8, \"__sync_fetch_and_sub_8\",\n \t\t  BT_FN_I8_VPTR_I8, ATTR_NOTHROW_LEAF_LIST)\n-DEF_SYNC_BUILTIN (BUILT_IN_FETCH_AND_SUB_16, \"__sync_fetch_and_sub_16\",\n+DEF_SYNC_BUILTIN (BUILT_IN_SYNC_FETCH_AND_SUB_16, \"__sync_fetch_and_sub_16\",\n \t\t  BT_FN_I16_VPTR_I16, ATTR_NOTHROW_LEAF_LIST)\n \n-DEF_SYNC_BUILTIN (BUILT_IN_FETCH_AND_OR_N, \"__sync_fetch_and_or\",\n+DEF_SYNC_BUILTIN (BUILT_IN_SYNC_FETCH_AND_OR_N, \"__sync_fetch_and_or\",\n \t\t  BT_FN_VOID_VAR, ATTR_NOTHROW_LEAF_LIST)\n-DEF_SYNC_BUILTIN (BUILT_IN_FETCH_AND_OR_1, \"__sync_fetch_and_or_1\",\n+DEF_SYNC_BUILTIN (BUILT_IN_SYNC_FETCH_AND_OR_1, \"__sync_fetch_and_or_1\",\n \t\t  BT_FN_I1_VPTR_I1, ATTR_NOTHROW_LEAF_LIST)\n-DEF_SYNC_BUILTIN (BUILT_IN_FETCH_AND_OR_2, \"__sync_fetch_and_or_2\",\n+DEF_SYNC_BUILTIN (BUILT_IN_SYNC_FETCH_AND_OR_2, \"__sync_fetch_and_or_2\",\n \t\t  BT_FN_I2_VPTR_I2, ATTR_NOTHROW_LEAF_LIST)\n-DEF_SYNC_BUILTIN (BUILT_IN_FETCH_AND_OR_4, \"__sync_fetch_and_or_4\",\n+DEF_SYNC_BUILTIN (BUILT_IN_SYNC_FETCH_AND_OR_4, \"__sync_fetch_and_or_4\",\n \t\t  BT_FN_I4_VPTR_I4, ATTR_NOTHROW_LEAF_LIST)\n-DEF_SYNC_BUILTIN (BUILT_IN_FETCH_AND_OR_8, \"__sync_fetch_and_or_8\",\n+DEF_SYNC_BUILTIN (BUILT_IN_SYNC_FETCH_AND_OR_8, \"__sync_fetch_and_or_8\",\n \t\t  BT_FN_I8_VPTR_I8, ATTR_NOTHROW_LEAF_LIST)\n-DEF_SYNC_BUILTIN (BUILT_IN_FETCH_AND_OR_16, \"__sync_fetch_and_or_16\",\n+DEF_SYNC_BUILTIN (BUILT_IN_SYNC_FETCH_AND_OR_16, \"__sync_fetch_and_or_16\",\n \t\t  BT_FN_I16_VPTR_I16, ATTR_NOTHROW_LEAF_LIST)\n \n-DEF_SYNC_BUILTIN (BUILT_IN_FETCH_AND_AND_N, \"__sync_fetch_and_and\",\n+DEF_SYNC_BUILTIN (BUILT_IN_SYNC_FETCH_AND_AND_N, \"__sync_fetch_and_and\",\n \t\t  BT_FN_VOID_VAR, ATTR_NOTHROW_LEAF_LIST)\n-DEF_SYNC_BUILTIN (BUILT_IN_FETCH_AND_AND_1, \"__sync_fetch_and_and_1\",\n+DEF_SYNC_BUILTIN (BUILT_IN_SYNC_FETCH_AND_AND_1, \"__sync_fetch_and_and_1\",\n \t\t  BT_FN_I1_VPTR_I1, ATTR_NOTHROW_LEAF_LIST)\n-DEF_SYNC_BUILTIN (BUILT_IN_FETCH_AND_AND_2, \"__sync_fetch_and_and_2\",\n+DEF_SYNC_BUILTIN (BUILT_IN_SYNC_FETCH_AND_AND_2, \"__sync_fetch_and_and_2\",\n \t\t  BT_FN_I2_VPTR_I2, ATTR_NOTHROW_LEAF_LIST)\n-DEF_SYNC_BUILTIN (BUILT_IN_FETCH_AND_AND_4, \"__sync_fetch_and_and_4\",\n+DEF_SYNC_BUILTIN (BUILT_IN_SYNC_FETCH_AND_AND_4, \"__sync_fetch_and_and_4\",\n \t\t  BT_FN_I4_VPTR_I4, ATTR_NOTHROW_LEAF_LIST)\n-DEF_SYNC_BUILTIN (BUILT_IN_FETCH_AND_AND_8, \"__sync_fetch_and_and_8\",\n+DEF_SYNC_BUILTIN (BUILT_IN_SYNC_FETCH_AND_AND_8, \"__sync_fetch_and_and_8\",\n \t\t  BT_FN_I8_VPTR_I8, ATTR_NOTHROW_LEAF_LIST)\n-DEF_SYNC_BUILTIN (BUILT_IN_FETCH_AND_AND_16, \"__sync_fetch_and_and_16\",\n+DEF_SYNC_BUILTIN (BUILT_IN_SYNC_FETCH_AND_AND_16, \"__sync_fetch_and_and_16\",\n \t\t  BT_FN_I16_VPTR_I16, ATTR_NOTHROW_LEAF_LIST)\n \n-DEF_SYNC_BUILTIN (BUILT_IN_FETCH_AND_XOR_N, \"__sync_fetch_and_xor\",\n+DEF_SYNC_BUILTIN (BUILT_IN_SYNC_FETCH_AND_XOR_N, \"__sync_fetch_and_xor\",\n \t\t  BT_FN_VOID_VAR, ATTR_NOTHROW_LEAF_LIST)\n-DEF_SYNC_BUILTIN (BUILT_IN_FETCH_AND_XOR_1, \"__sync_fetch_and_xor_1\",\n+DEF_SYNC_BUILTIN (BUILT_IN_SYNC_FETCH_AND_XOR_1, \"__sync_fetch_and_xor_1\",\n \t\t  BT_FN_I1_VPTR_I1, ATTR_NOTHROW_LEAF_LIST)\n-DEF_SYNC_BUILTIN (BUILT_IN_FETCH_AND_XOR_2, \"__sync_fetch_and_xor_2\",\n+DEF_SYNC_BUILTIN (BUILT_IN_SYNC_FETCH_AND_XOR_2, \"__sync_fetch_and_xor_2\",\n \t\t  BT_FN_I2_VPTR_I2, ATTR_NOTHROW_LEAF_LIST)\n-DEF_SYNC_BUILTIN (BUILT_IN_FETCH_AND_XOR_4, \"__sync_fetch_and_xor_4\",\n+DEF_SYNC_BUILTIN (BUILT_IN_SYNC_FETCH_AND_XOR_4, \"__sync_fetch_and_xor_4\",\n \t\t  BT_FN_I4_VPTR_I4, ATTR_NOTHROW_LEAF_LIST)\n-DEF_SYNC_BUILTIN (BUILT_IN_FETCH_AND_XOR_8, \"__sync_fetch_and_xor_8\",\n+DEF_SYNC_BUILTIN (BUILT_IN_SYNC_FETCH_AND_XOR_8, \"__sync_fetch_and_xor_8\",\n \t\t  BT_FN_I8_VPTR_I8, ATTR_NOTHROW_LEAF_LIST)\n-DEF_SYNC_BUILTIN (BUILT_IN_FETCH_AND_XOR_16, \"__sync_fetch_and_xor_16\",\n+DEF_SYNC_BUILTIN (BUILT_IN_SYNC_FETCH_AND_XOR_16, \"__sync_fetch_and_xor_16\",\n \t\t  BT_FN_I16_VPTR_I16, ATTR_NOTHROW_LEAF_LIST)\n \n-DEF_SYNC_BUILTIN (BUILT_IN_FETCH_AND_NAND_N, \"__sync_fetch_and_nand\",\n+DEF_SYNC_BUILTIN (BUILT_IN_SYNC_FETCH_AND_NAND_N, \"__sync_fetch_and_nand\",\n \t\t  BT_FN_VOID_VAR, ATTR_NOTHROW_LEAF_LIST)\n-DEF_SYNC_BUILTIN (BUILT_IN_FETCH_AND_NAND_1, \"__sync_fetch_and_nand_1\",\n+DEF_SYNC_BUILTIN (BUILT_IN_SYNC_FETCH_AND_NAND_1, \"__sync_fetch_and_nand_1\",\n \t\t  BT_FN_I1_VPTR_I1, ATTR_NOTHROW_LEAF_LIST)\n-DEF_SYNC_BUILTIN (BUILT_IN_FETCH_AND_NAND_2, \"__sync_fetch_and_nand_2\",\n+DEF_SYNC_BUILTIN (BUILT_IN_SYNC_FETCH_AND_NAND_2, \"__sync_fetch_and_nand_2\",\n \t\t  BT_FN_I2_VPTR_I2, ATTR_NOTHROW_LEAF_LIST)\n-DEF_SYNC_BUILTIN (BUILT_IN_FETCH_AND_NAND_4, \"__sync_fetch_and_nand_4\",\n+DEF_SYNC_BUILTIN (BUILT_IN_SYNC_FETCH_AND_NAND_4, \"__sync_fetch_and_nand_4\",\n \t\t  BT_FN_I4_VPTR_I4, ATTR_NOTHROW_LEAF_LIST)\n-DEF_SYNC_BUILTIN (BUILT_IN_FETCH_AND_NAND_8, \"__sync_fetch_and_nand_8\",\n+DEF_SYNC_BUILTIN (BUILT_IN_SYNC_FETCH_AND_NAND_8, \"__sync_fetch_and_nand_8\",\n \t\t  BT_FN_I8_VPTR_I8, ATTR_NOTHROW_LEAF_LIST)\n-DEF_SYNC_BUILTIN (BUILT_IN_FETCH_AND_NAND_16, \"__sync_fetch_and_nand_16\",\n+DEF_SYNC_BUILTIN (BUILT_IN_SYNC_FETCH_AND_NAND_16, \"__sync_fetch_and_nand_16\",\n \t\t  BT_FN_I16_VPTR_I16, ATTR_NOTHROW_LEAF_LIST)\n \n-DEF_SYNC_BUILTIN (BUILT_IN_ADD_AND_FETCH_N, \"__sync_add_and_fetch\",\n+DEF_SYNC_BUILTIN (BUILT_IN_SYNC_ADD_AND_FETCH_N, \"__sync_add_and_fetch\",\n \t\t  BT_FN_VOID_VAR, ATTR_NOTHROW_LEAF_LIST)\n-DEF_SYNC_BUILTIN (BUILT_IN_ADD_AND_FETCH_1, \"__sync_add_and_fetch_1\",\n+DEF_SYNC_BUILTIN (BUILT_IN_SYNC_ADD_AND_FETCH_1, \"__sync_add_and_fetch_1\",\n \t\t  BT_FN_I1_VPTR_I1, ATTR_NOTHROW_LEAF_LIST)\n-DEF_SYNC_BUILTIN (BUILT_IN_ADD_AND_FETCH_2, \"__sync_add_and_fetch_2\",\n+DEF_SYNC_BUILTIN (BUILT_IN_SYNC_ADD_AND_FETCH_2, \"__sync_add_and_fetch_2\",\n \t\t  BT_FN_I2_VPTR_I2, ATTR_NOTHROW_LEAF_LIST)\n-DEF_SYNC_BUILTIN (BUILT_IN_ADD_AND_FETCH_4, \"__sync_add_and_fetch_4\",\n+DEF_SYNC_BUILTIN (BUILT_IN_SYNC_ADD_AND_FETCH_4, \"__sync_add_and_fetch_4\",\n \t\t  BT_FN_I4_VPTR_I4, ATTR_NOTHROW_LEAF_LIST)\n-DEF_SYNC_BUILTIN (BUILT_IN_ADD_AND_FETCH_8, \"__sync_add_and_fetch_8\",\n+DEF_SYNC_BUILTIN (BUILT_IN_SYNC_ADD_AND_FETCH_8, \"__sync_add_and_fetch_8\",\n \t\t  BT_FN_I8_VPTR_I8, ATTR_NOTHROW_LEAF_LIST)\n-DEF_SYNC_BUILTIN (BUILT_IN_ADD_AND_FETCH_16, \"__sync_add_and_fetch_16\",\n+DEF_SYNC_BUILTIN (BUILT_IN_SYNC_ADD_AND_FETCH_16, \"__sync_add_and_fetch_16\",\n \t\t  BT_FN_I16_VPTR_I16, ATTR_NOTHROW_LEAF_LIST)\n \n-DEF_SYNC_BUILTIN (BUILT_IN_SUB_AND_FETCH_N, \"__sync_sub_and_fetch\",\n+DEF_SYNC_BUILTIN (BUILT_IN_SYNC_SUB_AND_FETCH_N, \"__sync_sub_and_fetch\",\n \t\t  BT_FN_VOID_VAR, ATTR_NOTHROW_LEAF_LIST)\n-DEF_SYNC_BUILTIN (BUILT_IN_SUB_AND_FETCH_1, \"__sync_sub_and_fetch_1\",\n+DEF_SYNC_BUILTIN (BUILT_IN_SYNC_SUB_AND_FETCH_1, \"__sync_sub_and_fetch_1\",\n \t\t  BT_FN_I1_VPTR_I1, ATTR_NOTHROW_LEAF_LIST)\n-DEF_SYNC_BUILTIN (BUILT_IN_SUB_AND_FETCH_2, \"__sync_sub_and_fetch_2\",\n+DEF_SYNC_BUILTIN (BUILT_IN_SYNC_SUB_AND_FETCH_2, \"__sync_sub_and_fetch_2\",\n \t\t  BT_FN_I2_VPTR_I2, ATTR_NOTHROW_LEAF_LIST)\n-DEF_SYNC_BUILTIN (BUILT_IN_SUB_AND_FETCH_4, \"__sync_sub_and_fetch_4\",\n+DEF_SYNC_BUILTIN (BUILT_IN_SYNC_SUB_AND_FETCH_4, \"__sync_sub_and_fetch_4\",\n \t\t  BT_FN_I4_VPTR_I4, ATTR_NOTHROW_LEAF_LIST)\n-DEF_SYNC_BUILTIN (BUILT_IN_SUB_AND_FETCH_8, \"__sync_sub_and_fetch_8\",\n+DEF_SYNC_BUILTIN (BUILT_IN_SYNC_SUB_AND_FETCH_8, \"__sync_sub_and_fetch_8\",\n \t\t  BT_FN_I8_VPTR_I8, ATTR_NOTHROW_LEAF_LIST)\n-DEF_SYNC_BUILTIN (BUILT_IN_SUB_AND_FETCH_16, \"__sync_sub_and_fetch_16\",\n+DEF_SYNC_BUILTIN (BUILT_IN_SYNC_SUB_AND_FETCH_16, \"__sync_sub_and_fetch_16\",\n \t\t  BT_FN_I16_VPTR_I16, ATTR_NOTHROW_LEAF_LIST)\n \n-DEF_SYNC_BUILTIN (BUILT_IN_OR_AND_FETCH_N, \"__sync_or_and_fetch\",\n+DEF_SYNC_BUILTIN (BUILT_IN_SYNC_OR_AND_FETCH_N, \"__sync_or_and_fetch\",\n \t\t  BT_FN_VOID_VAR, ATTR_NOTHROW_LEAF_LIST)\n-DEF_SYNC_BUILTIN (BUILT_IN_OR_AND_FETCH_1, \"__sync_or_and_fetch_1\",\n+DEF_SYNC_BUILTIN (BUILT_IN_SYNC_OR_AND_FETCH_1, \"__sync_or_and_fetch_1\",\n \t\t  BT_FN_I1_VPTR_I1, ATTR_NOTHROW_LEAF_LIST)\n-DEF_SYNC_BUILTIN (BUILT_IN_OR_AND_FETCH_2, \"__sync_or_and_fetch_2\",\n+DEF_SYNC_BUILTIN (BUILT_IN_SYNC_OR_AND_FETCH_2, \"__sync_or_and_fetch_2\",\n \t\t  BT_FN_I2_VPTR_I2, ATTR_NOTHROW_LEAF_LIST)\n-DEF_SYNC_BUILTIN (BUILT_IN_OR_AND_FETCH_4, \"__sync_or_and_fetch_4\",\n+DEF_SYNC_BUILTIN (BUILT_IN_SYNC_OR_AND_FETCH_4, \"__sync_or_and_fetch_4\",\n \t\t  BT_FN_I4_VPTR_I4, ATTR_NOTHROW_LEAF_LIST)\n-DEF_SYNC_BUILTIN (BUILT_IN_OR_AND_FETCH_8, \"__sync_or_and_fetch_8\",\n+DEF_SYNC_BUILTIN (BUILT_IN_SYNC_OR_AND_FETCH_8, \"__sync_or_and_fetch_8\",\n \t\t  BT_FN_I8_VPTR_I8, ATTR_NOTHROW_LEAF_LIST)\n-DEF_SYNC_BUILTIN (BUILT_IN_OR_AND_FETCH_16, \"__sync_or_and_fetch_16\",\n+DEF_SYNC_BUILTIN (BUILT_IN_SYNC_OR_AND_FETCH_16, \"__sync_or_and_fetch_16\",\n \t\t  BT_FN_I16_VPTR_I16, ATTR_NOTHROW_LEAF_LIST)\n \n-DEF_SYNC_BUILTIN (BUILT_IN_AND_AND_FETCH_N, \"__sync_and_and_fetch\",\n+DEF_SYNC_BUILTIN (BUILT_IN_SYNC_AND_AND_FETCH_N, \"__sync_and_and_fetch\",\n \t\t  BT_FN_VOID_VAR, ATTR_NOTHROW_LEAF_LIST)\n-DEF_SYNC_BUILTIN (BUILT_IN_AND_AND_FETCH_1, \"__sync_and_and_fetch_1\",\n+DEF_SYNC_BUILTIN (BUILT_IN_SYNC_AND_AND_FETCH_1, \"__sync_and_and_fetch_1\",\n \t\t  BT_FN_I1_VPTR_I1, ATTR_NOTHROW_LEAF_LIST)\n-DEF_SYNC_BUILTIN (BUILT_IN_AND_AND_FETCH_2, \"__sync_and_and_fetch_2\",\n+DEF_SYNC_BUILTIN (BUILT_IN_SYNC_AND_AND_FETCH_2, \"__sync_and_and_fetch_2\",\n \t\t  BT_FN_I2_VPTR_I2, ATTR_NOTHROW_LEAF_LIST)\n-DEF_SYNC_BUILTIN (BUILT_IN_AND_AND_FETCH_4, \"__sync_and_and_fetch_4\",\n+DEF_SYNC_BUILTIN (BUILT_IN_SYNC_AND_AND_FETCH_4, \"__sync_and_and_fetch_4\",\n \t\t  BT_FN_I4_VPTR_I4, ATTR_NOTHROW_LEAF_LIST)\n-DEF_SYNC_BUILTIN (BUILT_IN_AND_AND_FETCH_8, \"__sync_and_and_fetch_8\",\n+DEF_SYNC_BUILTIN (BUILT_IN_SYNC_AND_AND_FETCH_8, \"__sync_and_and_fetch_8\",\n \t\t  BT_FN_I8_VPTR_I8, ATTR_NOTHROW_LEAF_LIST)\n-DEF_SYNC_BUILTIN (BUILT_IN_AND_AND_FETCH_16, \"__sync_and_and_fetch_16\",\n+DEF_SYNC_BUILTIN (BUILT_IN_SYNC_AND_AND_FETCH_16, \"__sync_and_and_fetch_16\",\n \t\t  BT_FN_I16_VPTR_I16, ATTR_NOTHROW_LEAF_LIST)\n \n-DEF_SYNC_BUILTIN (BUILT_IN_XOR_AND_FETCH_N, \"__sync_xor_and_fetch\",\n+DEF_SYNC_BUILTIN (BUILT_IN_SYNC_XOR_AND_FETCH_N, \"__sync_xor_and_fetch\",\n \t\t  BT_FN_VOID_VAR, ATTR_NOTHROW_LEAF_LIST)\n-DEF_SYNC_BUILTIN (BUILT_IN_XOR_AND_FETCH_1, \"__sync_xor_and_fetch_1\",\n+DEF_SYNC_BUILTIN (BUILT_IN_SYNC_XOR_AND_FETCH_1, \"__sync_xor_and_fetch_1\",\n \t\t  BT_FN_I1_VPTR_I1, ATTR_NOTHROW_LEAF_LIST)\n-DEF_SYNC_BUILTIN (BUILT_IN_XOR_AND_FETCH_2, \"__sync_xor_and_fetch_2\",\n+DEF_SYNC_BUILTIN (BUILT_IN_SYNC_XOR_AND_FETCH_2, \"__sync_xor_and_fetch_2\",\n \t\t  BT_FN_I2_VPTR_I2, ATTR_NOTHROW_LEAF_LIST)\n-DEF_SYNC_BUILTIN (BUILT_IN_XOR_AND_FETCH_4, \"__sync_xor_and_fetch_4\",\n+DEF_SYNC_BUILTIN (BUILT_IN_SYNC_XOR_AND_FETCH_4, \"__sync_xor_and_fetch_4\",\n \t\t  BT_FN_I4_VPTR_I4, ATTR_NOTHROW_LEAF_LIST)\n-DEF_SYNC_BUILTIN (BUILT_IN_XOR_AND_FETCH_8, \"__sync_xor_and_fetch_8\",\n+DEF_SYNC_BUILTIN (BUILT_IN_SYNC_XOR_AND_FETCH_8, \"__sync_xor_and_fetch_8\",\n \t\t  BT_FN_I8_VPTR_I8, ATTR_NOTHROW_LEAF_LIST)\n-DEF_SYNC_BUILTIN (BUILT_IN_XOR_AND_FETCH_16, \"__sync_xor_and_fetch_16\",\n+DEF_SYNC_BUILTIN (BUILT_IN_SYNC_XOR_AND_FETCH_16, \"__sync_xor_and_fetch_16\",\n \t\t  BT_FN_I16_VPTR_I16, ATTR_NOTHROW_LEAF_LIST)\n \n-DEF_SYNC_BUILTIN (BUILT_IN_NAND_AND_FETCH_N, \"__sync_nand_and_fetch\",\n+DEF_SYNC_BUILTIN (BUILT_IN_SYNC_NAND_AND_FETCH_N, \"__sync_nand_and_fetch\",\n \t\t  BT_FN_VOID_VAR, ATTR_NOTHROW_LEAF_LIST)\n-DEF_SYNC_BUILTIN (BUILT_IN_NAND_AND_FETCH_1, \"__sync_nand_and_fetch_1\",\n+DEF_SYNC_BUILTIN (BUILT_IN_SYNC_NAND_AND_FETCH_1, \"__sync_nand_and_fetch_1\",\n \t\t  BT_FN_I1_VPTR_I1, ATTR_NOTHROW_LEAF_LIST)\n-DEF_SYNC_BUILTIN (BUILT_IN_NAND_AND_FETCH_2, \"__sync_nand_and_fetch_2\",\n+DEF_SYNC_BUILTIN (BUILT_IN_SYNC_NAND_AND_FETCH_2, \"__sync_nand_and_fetch_2\",\n \t\t  BT_FN_I2_VPTR_I2, ATTR_NOTHROW_LEAF_LIST)\n-DEF_SYNC_BUILTIN (BUILT_IN_NAND_AND_FETCH_4, \"__sync_nand_and_fetch_4\",\n+DEF_SYNC_BUILTIN (BUILT_IN_SYNC_NAND_AND_FETCH_4, \"__sync_nand_and_fetch_4\",\n \t\t  BT_FN_I4_VPTR_I4, ATTR_NOTHROW_LEAF_LIST)\n-DEF_SYNC_BUILTIN (BUILT_IN_NAND_AND_FETCH_8, \"__sync_nand_and_fetch_8\",\n+DEF_SYNC_BUILTIN (BUILT_IN_SYNC_NAND_AND_FETCH_8, \"__sync_nand_and_fetch_8\",\n \t\t  BT_FN_I8_VPTR_I8, ATTR_NOTHROW_LEAF_LIST)\n-DEF_SYNC_BUILTIN (BUILT_IN_NAND_AND_FETCH_16, \"__sync_nand_and_fetch_16\",\n+DEF_SYNC_BUILTIN (BUILT_IN_SYNC_NAND_AND_FETCH_16, \"__sync_nand_and_fetch_16\",\n \t\t  BT_FN_I16_VPTR_I16, ATTR_NOTHROW_LEAF_LIST)\n \n-DEF_SYNC_BUILTIN (BUILT_IN_BOOL_COMPARE_AND_SWAP_N,\n+DEF_SYNC_BUILTIN (BUILT_IN_SYNC_BOOL_COMPARE_AND_SWAP_N,\n \t\t  \"__sync_bool_compare_and_swap\",\n \t\t  BT_FN_VOID_VAR, ATTR_NOTHROW_LEAF_LIST)\n-DEF_SYNC_BUILTIN (BUILT_IN_BOOL_COMPARE_AND_SWAP_1,\n+DEF_SYNC_BUILTIN (BUILT_IN_SYNC_BOOL_COMPARE_AND_SWAP_1,\n \t\t  \"__sync_bool_compare_and_swap_1\",\n \t\t  BT_FN_BOOL_VPTR_I1_I1, ATTR_NOTHROW_LEAF_LIST)\n-DEF_SYNC_BUILTIN (BUILT_IN_BOOL_COMPARE_AND_SWAP_2,\n+DEF_SYNC_BUILTIN (BUILT_IN_SYNC_BOOL_COMPARE_AND_SWAP_2,\n \t\t  \"__sync_bool_compare_and_swap_2\",\n \t\t  BT_FN_BOOL_VPTR_I2_I2, ATTR_NOTHROW_LEAF_LIST)\n-DEF_SYNC_BUILTIN (BUILT_IN_BOOL_COMPARE_AND_SWAP_4,\n+DEF_SYNC_BUILTIN (BUILT_IN_SYNC_BOOL_COMPARE_AND_SWAP_4,\n \t\t  \"__sync_bool_compare_and_swap_4\",\n \t\t  BT_FN_BOOL_VPTR_I4_I4, ATTR_NOTHROW_LEAF_LIST)\n-DEF_SYNC_BUILTIN (BUILT_IN_BOOL_COMPARE_AND_SWAP_8,\n+DEF_SYNC_BUILTIN (BUILT_IN_SYNC_BOOL_COMPARE_AND_SWAP_8,\n \t\t  \"__sync_bool_compare_and_swap_8\",\n \t\t  BT_FN_BOOL_VPTR_I8_I8, ATTR_NOTHROW_LEAF_LIST)\n-DEF_SYNC_BUILTIN (BUILT_IN_BOOL_COMPARE_AND_SWAP_16,\n+DEF_SYNC_BUILTIN (BUILT_IN_SYNC_BOOL_COMPARE_AND_SWAP_16,\n \t\t  \"__sync_bool_compare_and_swap_16\",\n \t\t  BT_FN_BOOL_VPTR_I16_I16, ATTR_NOTHROW_LEAF_LIST)\n \n-DEF_SYNC_BUILTIN (BUILT_IN_VAL_COMPARE_AND_SWAP_N,\n+DEF_SYNC_BUILTIN (BUILT_IN_SYNC_VAL_COMPARE_AND_SWAP_N,\n \t\t  \"__sync_val_compare_and_swap\",\n \t\t  BT_FN_VOID_VAR, ATTR_NOTHROW_LEAF_LIST)\n-DEF_SYNC_BUILTIN (BUILT_IN_VAL_COMPARE_AND_SWAP_1,\n+DEF_SYNC_BUILTIN (BUILT_IN_SYNC_VAL_COMPARE_AND_SWAP_1,\n \t\t  \"__sync_val_compare_and_swap_1\",\n \t\t  BT_FN_I1_VPTR_I1_I1, ATTR_NOTHROW_LEAF_LIST)\n-DEF_SYNC_BUILTIN (BUILT_IN_VAL_COMPARE_AND_SWAP_2,\n+DEF_SYNC_BUILTIN (BUILT_IN_SYNC_VAL_COMPARE_AND_SWAP_2,\n \t\t  \"__sync_val_compare_and_swap_2\",\n \t\t  BT_FN_I2_VPTR_I2_I2, ATTR_NOTHROW_LEAF_LIST)\n-DEF_SYNC_BUILTIN (BUILT_IN_VAL_COMPARE_AND_SWAP_4,\n+DEF_SYNC_BUILTIN (BUILT_IN_SYNC_VAL_COMPARE_AND_SWAP_4,\n \t\t  \"__sync_val_compare_and_swap_4\",\n \t\t  BT_FN_I4_VPTR_I4_I4, ATTR_NOTHROW_LEAF_LIST)\n-DEF_SYNC_BUILTIN (BUILT_IN_VAL_COMPARE_AND_SWAP_8,\n+DEF_SYNC_BUILTIN (BUILT_IN_SYNC_VAL_COMPARE_AND_SWAP_8,\n \t\t  \"__sync_val_compare_and_swap_8\",\n \t\t  BT_FN_I8_VPTR_I8_I8, ATTR_NOTHROW_LEAF_LIST)\n-DEF_SYNC_BUILTIN (BUILT_IN_VAL_COMPARE_AND_SWAP_16,\n+DEF_SYNC_BUILTIN (BUILT_IN_SYNC_VAL_COMPARE_AND_SWAP_16,\n \t\t  \"__sync_val_compare_and_swap_16\",\n \t\t  BT_FN_I16_VPTR_I16_I16, ATTR_NOTHROW_LEAF_LIST)\n \n-DEF_SYNC_BUILTIN (BUILT_IN_LOCK_TEST_AND_SET_N, \"__sync_lock_test_and_set\",\n+DEF_SYNC_BUILTIN (BUILT_IN_SYNC_LOCK_TEST_AND_SET_N,\n+\t\t  \"__sync_lock_test_and_set\",\n \t\t  BT_FN_VOID_VAR, ATTR_NOTHROW_LEAF_LIST)\n-DEF_SYNC_BUILTIN (BUILT_IN_LOCK_TEST_AND_SET_1, \"__sync_lock_test_and_set_1\",\n+DEF_SYNC_BUILTIN (BUILT_IN_SYNC_LOCK_TEST_AND_SET_1,\n+\t\t  \"__sync_lock_test_and_set_1\",\n \t\t  BT_FN_I1_VPTR_I1, ATTR_NOTHROW_LEAF_LIST)\n-DEF_SYNC_BUILTIN (BUILT_IN_LOCK_TEST_AND_SET_2, \"__sync_lock_test_and_set_2\",\n+DEF_SYNC_BUILTIN (BUILT_IN_SYNC_LOCK_TEST_AND_SET_2,\n+\t\t  \"__sync_lock_test_and_set_2\",\n \t\t  BT_FN_I2_VPTR_I2, ATTR_NOTHROW_LEAF_LIST)\n-DEF_SYNC_BUILTIN (BUILT_IN_LOCK_TEST_AND_SET_4, \"__sync_lock_test_and_set_4\",\n+DEF_SYNC_BUILTIN (BUILT_IN_SYNC_LOCK_TEST_AND_SET_4,\n+\t\t  \"__sync_lock_test_and_set_4\",\n \t\t  BT_FN_I4_VPTR_I4, ATTR_NOTHROW_LEAF_LIST)\n-DEF_SYNC_BUILTIN (BUILT_IN_LOCK_TEST_AND_SET_8, \"__sync_lock_test_and_set_8\",\n+DEF_SYNC_BUILTIN (BUILT_IN_SYNC_LOCK_TEST_AND_SET_8,\n+\t\t  \"__sync_lock_test_and_set_8\",\n \t\t  BT_FN_I8_VPTR_I8, ATTR_NOTHROW_LEAF_LIST)\n-DEF_SYNC_BUILTIN (BUILT_IN_LOCK_TEST_AND_SET_16, \"__sync_lock_test_and_set_16\",\n+DEF_SYNC_BUILTIN (BUILT_IN_SYNC_LOCK_TEST_AND_SET_16,\n+\t\t  \"__sync_lock_test_and_set_16\",\n \t\t  BT_FN_I16_VPTR_I16, ATTR_NOTHROW_LEAF_LIST)\n \n-DEF_SYNC_BUILTIN (BUILT_IN_LOCK_RELEASE_N, \"__sync_lock_release\",\n+DEF_SYNC_BUILTIN (BUILT_IN_SYNC_LOCK_RELEASE_N, \"__sync_lock_release\",\n \t\t  BT_FN_VOID_VAR, ATTR_NOTHROW_LEAF_LIST)\n-DEF_SYNC_BUILTIN (BUILT_IN_LOCK_RELEASE_1, \"__sync_lock_release_1\",\n+DEF_SYNC_BUILTIN (BUILT_IN_SYNC_LOCK_RELEASE_1, \"__sync_lock_release_1\",\n \t\t  BT_FN_VOID_VPTR, ATTR_NOTHROW_LEAF_LIST)\n-DEF_SYNC_BUILTIN (BUILT_IN_LOCK_RELEASE_2, \"__sync_lock_release_2\",\n+DEF_SYNC_BUILTIN (BUILT_IN_SYNC_LOCK_RELEASE_2, \"__sync_lock_release_2\",\n \t\t  BT_FN_VOID_VPTR, ATTR_NOTHROW_LEAF_LIST)\n-DEF_SYNC_BUILTIN (BUILT_IN_LOCK_RELEASE_4, \"__sync_lock_release_4\",\n+DEF_SYNC_BUILTIN (BUILT_IN_SYNC_LOCK_RELEASE_4, \"__sync_lock_release_4\",\n \t\t  BT_FN_VOID_VPTR, ATTR_NOTHROW_LEAF_LIST)\n-DEF_SYNC_BUILTIN (BUILT_IN_LOCK_RELEASE_8, \"__sync_lock_release_8\",\n+DEF_SYNC_BUILTIN (BUILT_IN_SYNC_LOCK_RELEASE_8, \"__sync_lock_release_8\",\n \t\t  BT_FN_VOID_VPTR, ATTR_NOTHROW_LEAF_LIST)\n-DEF_SYNC_BUILTIN (BUILT_IN_LOCK_RELEASE_16, \"__sync_lock_release_16\",\n+DEF_SYNC_BUILTIN (BUILT_IN_SYNC_LOCK_RELEASE_16, \"__sync_lock_release_16\",\n \t\t  BT_FN_VOID_VPTR, ATTR_NOTHROW_LEAF_LIST)\n \n-DEF_SYNC_BUILTIN (BUILT_IN_SYNCHRONIZE, \"__sync_synchronize\",\n+DEF_SYNC_BUILTIN (BUILT_IN_SYNC_SYNCHRONIZE, \"__sync_synchronize\",\n \t\t  BT_FN_VOID, ATTR_NOTHROW_LEAF_LIST)"}]}