{"sha": "b91f986b2d9cd7c80dea854258a9f078d61345a9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjkxZjk4NmIyZDljZDdjODBkZWE4NTQyNThhOWYwNzhkNjEzNDVhOQ==", "commit": {"author": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2017-12-05T12:22:46Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2017-12-05T12:22:46Z"}, "message": "[multiple changes]\n\n2017-12-05  Hristian Kirtchev  <kirtchev@adacore.com>\n\n\t* sem_elab.adb: Update the terminology and switch sections.\n\t(Check_SPARK_Model_In_Effect): New routine.\n\t(Check_SPARK_Scenario): Verify the model in effect for SPARK.\n\t(Process_Conditional_ABE_Call_SPARK): Verify the model in effect for\n\tSPARK.\n\t(Process_Conditional_ABE_Instantiation_SPARK): Verify the model in\n\teffect for SPARK.\n\t(Process_Conditional_ABE_Variable_Assignment_SPARK): Verify the model\n\tin effect for SPARK.\n\n2017-12-05  Nicolas Setton  <setton@adacore.com>\n\n\t* terminals.c (__gnat_setup_child_communication): As documented,\n\t__gnat_setup_child_communication should not terminate - it is intended\n\tto be used as the child process of a call to fork().  However, execvp\n\tmight actually return in some cases, for instance when attempting to\n\trun a 32-bit binary on a 64-bit Linux distribution when the\n\tcompatibility packages are not installed. In these cases, exit the\n\tprogram to conform to the documentation.\n\n2017-12-05  Olivier Hainque  <hainque@adacore.com>\n\n\t* libgnat/s-tsmona.adb: Fix for oversight in the tsmona interface\n\tupdate.\n\n2017-12-05  Gary Dismukes  <dismukes@adacore.com>\n\n\t* doc/gnat_ugn/elaboration_order_handling_in_gnat.rst: Minor typo fix\n\tand reformatting.\n\t* gnat_ugn.texi: Regenerate.\n\n2017-12-05  Olivier Hainque  <hainque@adacore.com>\n\n\t* sem_util.adb (Set_Convention): Always clear Can_Use_Internal_Rep\n\ton access to subprogram types with foreign convention.\n\n2017-12-05  Yannick Moy  <moy@adacore.com>\n\n\t* doc/gnat_ugn/building_executable_programs_with_gnat.rst: Fix User's\n\tGuide description of default settings of warnings.\n\nFrom-SVN: r255413", "tree": {"sha": "8d7dd5ff769f8e661981c6d94ed7cb100dfe48a7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8d7dd5ff769f8e661981c6d94ed7cb100dfe48a7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b91f986b2d9cd7c80dea854258a9f078d61345a9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b91f986b2d9cd7c80dea854258a9f078d61345a9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b91f986b2d9cd7c80dea854258a9f078d61345a9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b91f986b2d9cd7c80dea854258a9f078d61345a9/comments", "author": null, "committer": null, "parents": [{"sha": "967947ed6b3b9e1b3723b2587feccb4dac47715e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/967947ed6b3b9e1b3723b2587feccb4dac47715e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/967947ed6b3b9e1b3723b2587feccb4dac47715e"}], "stats": {"total": 206, "additions": 179, "deletions": 27}, "files": [{"sha": "653d1e9fdc160e43a38eecffcdc3365cd73aee78", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 43, "deletions": 0, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b91f986b2d9cd7c80dea854258a9f078d61345a9/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b91f986b2d9cd7c80dea854258a9f078d61345a9/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=b91f986b2d9cd7c80dea854258a9f078d61345a9", "patch": "@@ -1,3 +1,46 @@\n+2017-12-05  Hristian Kirtchev  <kirtchev@adacore.com>\n+\n+\t* sem_elab.adb: Update the terminology and switch sections.\n+\t(Check_SPARK_Model_In_Effect): New routine.\n+\t(Check_SPARK_Scenario): Verify the model in effect for SPARK.\n+\t(Process_Conditional_ABE_Call_SPARK): Verify the model in effect for\n+\tSPARK.\n+\t(Process_Conditional_ABE_Instantiation_SPARK): Verify the model in\n+\teffect for SPARK.\n+\t(Process_Conditional_ABE_Variable_Assignment_SPARK): Verify the model\n+\tin effect for SPARK.\n+\n+2017-12-05  Nicolas Setton  <setton@adacore.com>\n+\n+\t* terminals.c (__gnat_setup_child_communication): As documented,\n+\t__gnat_setup_child_communication should not terminate - it is intended\n+\tto be used as the child process of a call to fork().  However, execvp\n+\tmight actually return in some cases, for instance when attempting to\n+\trun a 32-bit binary on a 64-bit Linux distribution when the\n+\tcompatibility packages are not installed. In these cases, exit the\n+\tprogram to conform to the documentation.\n+\n+2017-12-05  Olivier Hainque  <hainque@adacore.com>\n+\n+\t* libgnat/s-tsmona.adb: Fix for oversight in the tsmona interface\n+\tupdate.\n+\n+2017-12-05  Gary Dismukes  <dismukes@adacore.com>\n+\n+\t* doc/gnat_ugn/elaboration_order_handling_in_gnat.rst: Minor typo fix\n+\tand reformatting.\n+\t* gnat_ugn.texi: Regenerate.\n+\n+2017-12-05  Olivier Hainque  <hainque@adacore.com>\n+\n+\t* sem_util.adb (Set_Convention): Always clear Can_Use_Internal_Rep\n+\ton access to subprogram types with foreign convention.\n+\n+2017-12-05  Yannick Moy  <moy@adacore.com>\n+\n+\t* doc/gnat_ugn/building_executable_programs_with_gnat.rst: Fix User's\n+\tGuide description of default settings of warnings.\n+\n 2017-12-05  Olivier Hainque  <hainque@adacore.com>\n \n \t* s-dwalin.adb (Read_And_Execute_Isn): Adjust test checking for the end"}, {"sha": "802e905e8f2c6a49b478fe665b85d56a8ba89d55", "filename": "gcc/ada/doc/gnat_ugn/building_executable_programs_with_gnat.rst", "status": "modified", "additions": 21, "deletions": 3, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b91f986b2d9cd7c80dea854258a9f078d61345a9/gcc%2Fada%2Fdoc%2Fgnat_ugn%2Fbuilding_executable_programs_with_gnat.rst", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b91f986b2d9cd7c80dea854258a9f078d61345a9/gcc%2Fada%2Fdoc%2Fgnat_ugn%2Fbuilding_executable_programs_with_gnat.rst", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fdoc%2Fgnat_ugn%2Fbuilding_executable_programs_with_gnat.rst?ref=b91f986b2d9cd7c80dea854258a9f078d61345a9", "patch": "@@ -4075,20 +4075,28 @@ When no switch :switch:`-gnatw` is used, this is equivalent to:\n \n   * :switch:`-gnatwD`\n \n+  * :switch:`-gnatw.D`\n+\n   * :switch:`-gnatwF`\n \n+  * :switch:`-gnatw.F`\n+\n   * :switch:`-gnatwg`\n \n   * :switch:`-gnatwH`\n \n-  * :switch:`-gnatwi`\n+  * :switch:`-gnatw.H`\n \n-  * :switch:`-gnatw.I`\n+  * :switch:`-gnatwi`\n \n   * :switch:`-gnatwJ`\n \n+  * :switch:`-gnatw.J`\n+\n   * :switch:`-gnatwK`\n \n+  * :switch:`-gnatw.K`\n+\n   * :switch:`-gnatwL`\n \n   * :switch:`-gnatw.L`\n@@ -4099,6 +4107,8 @@ When no switch :switch:`-gnatw` is used, this is equivalent to:\n \n   * :switch:`-gnatwn`\n \n+  * :switch:`-gnatw.N`\n+\n   * :switch:`-gnatwo`\n \n   * :switch:`-gnatw.O`\n@@ -4119,12 +4129,16 @@ When no switch :switch:`-gnatw` is used, this is equivalent to:\n \n   * :switch:`-gnatwT`\n \n-  * :switch:`-gnatw.T`\n+  * :switch:`-gnatw.t`\n \n   * :switch:`-gnatwU`\n \n+  * :switch:`-gnatw.U`\n+\n   * :switch:`-gnatwv`\n \n+  * :switch:`-gnatw.v`\n+\n   * :switch:`-gnatww`\n \n   * :switch:`-gnatw.W`\n@@ -4135,8 +4149,12 @@ When no switch :switch:`-gnatw` is used, this is equivalent to:\n \n   * :switch:`-gnatwy`\n \n+  * :switch:`-gnatw.Y`\n+\n   * :switch:`-gnatwz`\n \n+  * :switch:`-gnatw.z`\n+\n .. _Debugging_and_Assertion_Control:\n \n Debugging and Assertion Control"}, {"sha": "a4b8b7fed477ccde06f215d4dd9f2d277280d129", "filename": "gcc/ada/doc/gnat_ugn/elaboration_order_handling_in_gnat.rst", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b91f986b2d9cd7c80dea854258a9f078d61345a9/gcc%2Fada%2Fdoc%2Fgnat_ugn%2Felaboration_order_handling_in_gnat.rst", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b91f986b2d9cd7c80dea854258a9f078d61345a9/gcc%2Fada%2Fdoc%2Fgnat_ugn%2Felaboration_order_handling_in_gnat.rst", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fdoc%2Fgnat_ugn%2Felaboration_order_handling_in_gnat.rst?ref=b91f986b2d9cd7c80dea854258a9f078d61345a9", "patch": "@@ -634,7 +634,7 @@ elaboration order and to diagnose elaboration problems.\n \n * *Legacy elaboration model*\n \n-  In addition to the three elabortaion models outlined above, GNAT provides the\n+  In addition to the three elaboration models outlined above, GNAT provides the\n   elaboration model of pre-18.x versions referred to as `legacy elaboration\n   model`. The legacy elaboration model is enabled with compiler switch\n   :switch:`-gnatH`.\n@@ -1515,7 +1515,7 @@ the elaboration order chosen by the binder.\n :switch:`-gnatJ`\n   Relaxed elaboration checking mode enabled\n \n-  When this switch is in effect, GNAT will not process certain scenarios\n+  When this switch is in effect, GNAT will not process certain scenarios,\n   resulting in a more permissive elaboration model. Note that this may\n   eliminate some diagnostics and run-time checks.\n "}, {"sha": "798743073dd2448761074142a0bfd2860d9ef2c7", "filename": "gcc/ada/gnat_ugn.texi", "status": "modified", "additions": 32, "deletions": 5, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b91f986b2d9cd7c80dea854258a9f078d61345a9/gcc%2Fada%2Fgnat_ugn.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b91f986b2d9cd7c80dea854258a9f078d61345a9/gcc%2Fada%2Fgnat_ugn.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_ugn.texi?ref=b91f986b2d9cd7c80dea854258a9f078d61345a9", "patch": "@@ -12728,27 +12728,39 @@ When no switch @code{-gnatw} is used, this is equivalent to:\n @item \n @code{-gnatwD}\n \n+@item \n+@code{-gnatw.D}\n+\n @item \n @code{-gnatwF}\n \n+@item \n+@code{-gnatw.F}\n+\n @item \n @code{-gnatwg}\n \n @item \n @code{-gnatwH}\n \n @item \n-@code{-gnatwi}\n+@code{-gnatw.H}\n \n @item \n-@code{-gnatw.I}\n+@code{-gnatwi}\n \n @item \n @code{-gnatwJ}\n \n+@item \n+@code{-gnatw.J}\n+\n @item \n @code{-gnatwK}\n \n+@item \n+@code{-gnatw.K}\n+\n @item \n @code{-gnatwL}\n \n@@ -12764,6 +12776,9 @@ When no switch @code{-gnatw} is used, this is equivalent to:\n @item \n @code{-gnatwn}\n \n+@item \n+@code{-gnatw.N}\n+\n @item \n @code{-gnatwo}\n \n@@ -12795,14 +12810,20 @@ When no switch @code{-gnatw} is used, this is equivalent to:\n @code{-gnatwT}\n \n @item \n-@code{-gnatw.T}\n+@code{-gnatw.t}\n \n @item \n @code{-gnatwU}\n \n+@item \n+@code{-gnatw.U}\n+\n @item \n @code{-gnatwv}\n \n+@item \n+@code{-gnatw.v}\n+\n @item \n @code{-gnatww}\n \n@@ -12818,8 +12839,14 @@ When no switch @code{-gnatw} is used, this is equivalent to:\n @item \n @code{-gnatwy}\n \n+@item \n+@code{-gnatw.Y}\n+\n @item \n @code{-gnatwz}\n+\n+@item \n+@code{-gnatw.z}\n @end itemize\n @end quotation\n \n@@ -27841,7 +27868,7 @@ effect.\n @item \n @emph{Legacy elaboration model}\n \n-In addition to the three elabortaion models outlined above, GNAT provides the\n+In addition to the three elaboration models outlined above, GNAT provides the\n elaboration model of pre-18.x versions referred to as @cite{legacy elaboration model}. The legacy elaboration model is enabled with compiler switch\n @code{-gnatH}.\n @end itemize\n@@ -28811,7 +28838,7 @@ model.\n \n Relaxed elaboration checking mode enabled\n \n-When this switch is in effect, GNAT will not process certain scenarios\n+When this switch is in effect, GNAT will not process certain scenarios,\n resulting in a more permissive elaboration model. Note that this may\n eliminate some diagnostics and run-time checks.\n @end table"}, {"sha": "e04652d49076456040628fa265f307ccd04bef6b", "filename": "gcc/ada/libgnat/s-tsmona.adb", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b91f986b2d9cd7c80dea854258a9f078d61345a9/gcc%2Fada%2Flibgnat%2Fs-tsmona.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b91f986b2d9cd7c80dea854258a9f078d61345a9/gcc%2Fada%2Flibgnat%2Fs-tsmona.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fs-tsmona.adb?ref=b91f986b2d9cd7c80dea854258a9f078d61345a9", "patch": "@@ -48,8 +48,12 @@ package body Module_Name is\n    -- Get --\n    ---------\n \n-   function Get (Addr : access System.Address) return String is\n+   function Get (Addr : System.Address;\n+                 Load_Addr : access System.Address)\n+      return String\n+   is\n       pragma Unreferenced (Addr);\n+      pragma Unreferenced (Load_Addr);\n \n    begin\n       return \"\";"}, {"sha": "b2e56e62bd8d792dad0417b445183721ea0493a2", "filename": "gcc/ada/sem_elab.adb", "status": "modified", "additions": 73, "deletions": 2, "changes": 75, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b91f986b2d9cd7c80dea854258a9f078d61345a9/gcc%2Fada%2Fsem_elab.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b91f986b2d9cd7c80dea854258a9f078d61345a9/gcc%2Fada%2Fsem_elab.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_elab.adb?ref=b91f986b2d9cd7c80dea854258a9f078d61345a9", "patch": "@@ -117,6 +117,9 @@ package body Sem_Elab is\n    -- Terminology --\n    -----------------\n \n+   --  * ABE - An attempt to activate, call, or instantiate a scenario which\n+   --    has not been fully elaborated.\n+   --\n    --  * Bridge target - A type of target. A bridge target is a link between\n    --    scenarios. It is usually a byproduct of expansion and does not have\n    --    any direct ABE ramifications.\n@@ -421,6 +424,8 @@ package body Sem_Elab is\n    --           calls to subprograms which verify the run-time semantics of\n    --           the following assertion pragmas:\n    --\n+   --              Default_Initial_Condition\n+   --              Initial_Condition\n    --              Invariant\n    --              Invariant'Class\n    --              Post\n@@ -429,8 +434,8 @@ package body Sem_Elab is\n    --              Type_Invariant\n    --              Type_Invariant_Class\n    --\n-   --           As a result, the assertion expressions of the pragmas will not\n-   --           be processed.\n+   --           As a result, the assertion expressions of the pragmas are not\n+   --           processed.\n    --\n    --  -gnatd.U ignore indirect calls for static elaboration\n    --\n@@ -1044,6 +1049,12 @@ package body Sem_Elab is\n    --  Verify that expanded instance Exp_Inst does not precede the generic body\n    --  it instantiates (SPARK RM 7.7(6)).\n \n+   procedure Check_SPARK_Model_In_Effect (N : Node_Id);\n+   pragma Inline (Check_SPARK_Model_In_Effect);\n+   --  Determine whether a suitable elaboration model is currently in effect\n+   --  for verifying the SPARK rules of scenario N. Emit a warning if this is\n+   --  not the case.\n+\n    procedure Check_SPARK_Scenario (N : Node_Id);\n    pragma Inline (Check_SPARK_Scenario);\n    --  Top-level dispatcher for verifying SPARK scenarios which are not always\n@@ -2696,12 +2707,57 @@ package body Sem_Elab is\n       end if;\n    end Check_SPARK_Instantiation;\n \n+   ---------------------------------\n+   -- Check_SPARK_Model_In_Effect --\n+   ---------------------------------\n+\n+   SPARK_Model_Warning_Posted : Boolean := False;\n+   --  This flag prevents the same SPARK model-related warning from being\n+   --  emitted multiple times.\n+\n+   procedure Check_SPARK_Model_In_Effect (N : Node_Id) is\n+   begin\n+      --  Do not emit the warning multiple times as this creates useless noise\n+\n+      if SPARK_Model_Warning_Posted then\n+         null;\n+\n+      --  SPARK rule verification requires the \"strict\" static model\n+\n+      elsif Static_Elaboration_Checks and not Relaxed_Elaboration_Checks then\n+         null;\n+\n+      --  Any other combination of models does not guarantee the absence of ABE\n+      --  problems for SPARK rule verification purposes. Note that there is no\n+      --  need to check for the legacy ABE mechanism because the legacy code\n+      --  has its own orthogonal processing for SPARK rules.\n+\n+      else\n+         SPARK_Model_Warning_Posted := True;\n+\n+         Error_Msg_N\n+           (\"??SPARK elaboration checks require static elaboration model\", N);\n+\n+         if Dynamic_Elaboration_Checks then\n+            Error_Msg_N (\"\\dynamic elaboration model is in effect\", N);\n+         else\n+            pragma Assert (Relaxed_Elaboration_Checks);\n+            Error_Msg_N (\"\\relaxed elaboration model is in effect\", N);\n+         end if;\n+      end if;\n+   end Check_SPARK_Model_In_Effect;\n+\n    --------------------------\n    -- Check_SPARK_Scenario --\n    --------------------------\n \n    procedure Check_SPARK_Scenario (N : Node_Id) is\n    begin\n+      --  Ensure that a suitable elaboration model is in effect for SPARK rule\n+      --  verification.\n+\n+      Check_SPARK_Model_In_Effect (N);\n+\n       --  Add the current scenario to the stack of active scenarios\n \n       Push_Active_Scenario (N);\n@@ -9211,6 +9267,11 @@ package body Sem_Elab is\n       Region : Node_Id;\n \n    begin\n+      --  Ensure that a suitable elaboration model is in effect for SPARK rule\n+      --  verification.\n+\n+      Check_SPARK_Model_In_Effect (Call);\n+\n       --  The call and the target body are both in the main unit\n \n       if Present (Target_Attrs.Body_Decl)\n@@ -9674,6 +9735,11 @@ package body Sem_Elab is\n       Req_Nam : Name_Id;\n \n    begin\n+      --  Ensure that a suitable elaboration model is in effect for SPARK rule\n+      --  verification.\n+\n+      Check_SPARK_Model_In_Effect (Inst);\n+\n       --  A source instantiation imposes an Elaborate[_All] requirement on the\n       --  context of the main unit. Determine whether the context has a pragma\n       --  strong enough to meet the requirement. The check is orthogonal to the\n@@ -9807,6 +9873,11 @@ package body Sem_Elab is\n       Spec_Id  : constant Entity_Id := Find_Top_Unit (Var_Decl);\n \n    begin\n+      --  Ensure that a suitable elaboration model is in effect for SPARK rule\n+      --  verification.\n+\n+      Check_SPARK_Model_In_Effect (Asmt);\n+\n       --  Emit an error when an initialized variable declared in a package spec\n       --  without pragma Elaborate_Body is further modified by elaboration code\n       --  within the corresponding body."}, {"sha": "43e9ea2b09241b1058f163b21fcd3f74d70b0e39", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 1, "deletions": 11, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b91f986b2d9cd7c80dea854258a9f078d61345a9/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b91f986b2d9cd7c80dea854258a9f078d61345a9/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=b91f986b2d9cd7c80dea854258a9f078d61345a9", "patch": "@@ -23090,17 +23090,7 @@ package body Sem_Util is\n         and then Is_Access_Subprogram_Type (Base_Type (E))\n         and then Has_Foreign_Convention (E)\n       then\n-\n-         --  A pragma Convention in an instance may apply to the subtype\n-         --  created for a formal, in which case we have already verified\n-         --  that conventions of actual and formal match and there is nothing\n-         --  to flag on the subtype.\n-\n-         if In_Instance then\n-            null;\n-         else\n-            Set_Can_Use_Internal_Rep (E, False);\n-         end if;\n+         Set_Can_Use_Internal_Rep (E, False);\n       end if;\n \n       --  If E is an object, including a component, and the type of E is an"}, {"sha": "1e295afe055900741708b9191f90e5608fd3afdb", "filename": "gcc/ada/terminals.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b91f986b2d9cd7c80dea854258a9f078d61345a9/gcc%2Fada%2Fterminals.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b91f986b2d9cd7c80dea854258a9f078d61345a9/gcc%2Fada%2Fterminals.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fterminals.c?ref=b91f986b2d9cd7c80dea854258a9f078d61345a9", "patch": "@@ -1458,7 +1458,7 @@ __gnat_setup_child_communication\n #ifdef TIOCSCTTY\n   /* make the tty the controlling terminal */\n   if ((status = ioctl (desc->slave_fd, TIOCSCTTY, 0)) == -1)\n-    return -1;\n+    _exit (1);\n #endif\n \n   /* adjust tty settings */\n@@ -1480,8 +1480,7 @@ __gnat_setup_child_communication\n   /* launch the program */\n   execvp (new_argv[0], new_argv);\n \n-  /* return the pid */\n-  return pid;\n+  _exit (1);\n }\n \n /* send_signal_via_characters - Send a characters that will trigger a signal"}]}