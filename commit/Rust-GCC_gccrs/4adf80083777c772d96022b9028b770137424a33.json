{"sha": "4adf80083777c772d96022b9028b770137424a33", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGFkZjgwMDgzNzc3Yzc3MmQ5NjAyMmI5MDI4Yjc3MDEzNzQyNGEzMw==", "commit": {"author": {"name": "Peter Bergner", "email": "bergner@vnet.ibm.com", "date": "2008-05-21T18:09:07Z"}, "committer": {"name": "Peter Bergner", "email": "bergner@gcc.gnu.org", "date": "2008-05-21T18:09:07Z"}, "message": "invoke.texi: Add cpu_type's 464 and 464fp.\n\n\t* doc/invoke.texi: Add cpu_type's 464 and 464fp.\n\t(-mmulhw): Add 464 to description.\n\t(-mdlmzb): Likewise.\n\t* config.gcc: Handle --with-cpu=464 and --with-cpu=464fp.\n\t* config/rs6000/rs6000.c (processor_target_table): Add 464 and\n\t464fp entries.\n\t* config/rs6000/rs6000.h (ASM_CPU_SPEC): Add 464 and 464fp support.\n\t* config/rs6000/t-fprules (MULTILIB_MATCHES_FLOAT): Include -mcpu=464.\n\t* config/rs6000/rs6000.md: Update comments for 464.\n\nFrom-SVN: r135730", "tree": {"sha": "3d40d0ffbcebb035a9198eac883604574a1d1e45", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3d40d0ffbcebb035a9198eac883604574a1d1e45"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4adf80083777c772d96022b9028b770137424a33", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4adf80083777c772d96022b9028b770137424a33", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4adf80083777c772d96022b9028b770137424a33", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4adf80083777c772d96022b9028b770137424a33/comments", "author": {"login": "peter-bergner", "id": 17504345, "node_id": "MDQ6VXNlcjE3NTA0MzQ1", "avatar_url": "https://avatars.githubusercontent.com/u/17504345?v=4", "gravatar_id": "", "url": "https://api.github.com/users/peter-bergner", "html_url": "https://github.com/peter-bergner", "followers_url": "https://api.github.com/users/peter-bergner/followers", "following_url": "https://api.github.com/users/peter-bergner/following{/other_user}", "gists_url": "https://api.github.com/users/peter-bergner/gists{/gist_id}", "starred_url": "https://api.github.com/users/peter-bergner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/peter-bergner/subscriptions", "organizations_url": "https://api.github.com/users/peter-bergner/orgs", "repos_url": "https://api.github.com/users/peter-bergner/repos", "events_url": "https://api.github.com/users/peter-bergner/events{/privacy}", "received_events_url": "https://api.github.com/users/peter-bergner/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "00a25a2d39c992235f57f6d891a407144236760c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/00a25a2d39c992235f57f6d891a407144236760c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/00a25a2d39c992235f57f6d891a407144236760c"}], "stats": {"total": 35, "additions": 27, "deletions": 8}, "files": [{"sha": "72915d52ca1dda28150a6592472123941022f0c7", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4adf80083777c772d96022b9028b770137424a33/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4adf80083777c772d96022b9028b770137424a33/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4adf80083777c772d96022b9028b770137424a33", "patch": "@@ -1,3 +1,15 @@\n+2008-05-21  Peter Bergner  <bergner@vnet.ibm.com>\n+\n+\t* doc/invoke.texi: Add cpu_type's 464 and 464fp.\n+\t(-mmulhw): Add 464 to description.\n+\t(-mdlmzb): Likewise.\n+\t* config.gcc: Handle --with-cpu=464 and --with-cpu=464fp.\n+\t* config/rs6000/rs6000.c (processor_target_table): Add 464 and\n+\t464fp entries.\n+\t* config/rs6000/rs6000.h (ASM_CPU_SPEC): Add 464 and 464fp support.\n+\t* config/rs6000/t-fprules (MULTILIB_MATCHES_FLOAT): Include -mcpu=464.\n+\t* config/rs6000/rs6000.md: Update comments for 464.\n+\n 2008-05-21  Janis Johnson  <janis187@us.ibm.com>\n \n \t* doc/sourcebuild.texi (Test Directives): Add dg-xfail-run-if."}, {"sha": "fa73333ac83a23eccc5c7df6035c075d28172357", "filename": "gcc/config.gcc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4adf80083777c772d96022b9028b770137424a33/gcc%2Fconfig.gcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4adf80083777c772d96022b9028b770137424a33/gcc%2Fconfig.gcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.gcc?ref=4adf80083777c772d96022b9028b770137424a33", "patch": "@@ -3154,8 +3154,8 @@ case \"${target}\" in\n \t\t\t\"\" | common \\\n \t\t\t| power | power[23456] | power6x | powerpc | powerpc64 \\\n \t\t\t| rios | rios1 | rios2 | rsc | rsc1 | rs64a \\\n-\t\t\t| 401 | 403 | 405 | 405fp | 440 | 440fp | 505 \\\n-\t\t\t| 601 | 602 | 603 | 603e | ec603e | 604 \\\n+\t\t\t| 401 | 403 | 405 | 405fp | 440 | 440fp | 464 | 464fp \\\n+\t\t\t| 505 | 601 | 602 | 603 | 603e | ec603e | 604 \\\n \t\t\t| 604e | 620 | 630 | 740 | 750 | 7400 | 7450 | e300c[23] \\\n \t\t\t| 854[08] | 801 | 821 | 823 | 860 | 970 | G3 | G4 | G5 | cell)\n \t\t\t\t# OK"}, {"sha": "e90772b03efcffa2cd672dcc20276b251f070b00", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4adf80083777c772d96022b9028b770137424a33/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4adf80083777c772d96022b9028b770137424a33/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=4adf80083777c772d96022b9028b770137424a33", "patch": "@@ -1422,6 +1422,10 @@ rs6000_override_options (const char *default_cpu)\n \t  POWERPC_BASE_MASK | MASK_SOFT_FLOAT | MASK_MULHW | MASK_DLMZB},\n \t {\"440fp\", PROCESSOR_PPC440,\n \t  POWERPC_BASE_MASK | MASK_MULHW | MASK_DLMZB},\n+\t {\"464\", PROCESSOR_PPC440,\n+\t  POWERPC_BASE_MASK | MASK_SOFT_FLOAT | MASK_MULHW | MASK_DLMZB},\n+\t {\"464fp\", PROCESSOR_PPC440,\n+\t  POWERPC_BASE_MASK | MASK_MULHW | MASK_DLMZB},\n \t {\"505\", PROCESSOR_MPCCORE, POWERPC_BASE_MASK},\n \t {\"601\", PROCESSOR_PPC601,\n \t  MASK_POWER | POWERPC_BASE_MASK | MASK_MULTIPLE | MASK_STRING},"}, {"sha": "269a6021c9695cd2e692006cdec300fe33fa2fba", "filename": "gcc/config/rs6000/rs6000.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4adf80083777c772d96022b9028b770137424a33/gcc%2Fconfig%2Frs6000%2Frs6000.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4adf80083777c772d96022b9028b770137424a33/gcc%2Fconfig%2Frs6000%2Frs6000.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.h?ref=4adf80083777c772d96022b9028b770137424a33", "patch": "@@ -105,6 +105,8 @@\n %{mcpu=405fp: -m405} \\\n %{mcpu=440: -m440} \\\n %{mcpu=440fp: -m440} \\\n+%{mcpu=464: -m440} \\\n+%{mcpu=464fp: -m440} \\\n %{mcpu=505: -mppc} \\\n %{mcpu=601: -m601} \\\n %{mcpu=602: -mppc} \\"}, {"sha": "fc65c94f8ca7f8a67e58c14f9001fbb0db1ff130", "filename": "gcc/config/rs6000/rs6000.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4adf80083777c772d96022b9028b770137424a33/gcc%2Fconfig%2Frs6000%2Frs6000.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4adf80083777c772d96022b9028b770137424a33/gcc%2Fconfig%2Frs6000%2Frs6000.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.md?ref=4adf80083777c772d96022b9028b770137424a33", "patch": "@@ -937,7 +937,7 @@\n   [(set_attr \"type\" \"compare\")\n    (set_attr \"length\" \"4,8\")])\n \f\n-;; IBM 405 and 440 half-word multiplication operations.\n+;; IBM 405, 440 and 464 half-word multiplication operations.\n \n (define_insn \"*macchwc\"\n   [(set (match_operand:CC 3 \"cc_reg_operand\" \"=x\")\n@@ -1401,7 +1401,7 @@\n   \"mullhwu %0, %1, %2\"\n   [(set_attr \"type\" \"imul3\")])\n \f\n-;; IBM 405 and 440 string-search dlmzb instruction support.\n+;; IBM 405, 440 and 464 string-search dlmzb instruction support.\n (define_insn \"dlmzb\"\n   [(set (match_operand:CC 3 \"cc_reg_operand\" \"=x\")\n         (unspec:CC [(match_operand:SI 1 \"gpc_reg_operand\" \"r\")"}, {"sha": "9d1f936c4cdc8806f03967542d5e85339eadd213", "filename": "gcc/config/rs6000/t-fprules", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4adf80083777c772d96022b9028b770137424a33/gcc%2Fconfig%2Frs6000%2Ft-fprules", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4adf80083777c772d96022b9028b770137424a33/gcc%2Fconfig%2Frs6000%2Ft-fprules", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Ft-fprules?ref=4adf80083777c772d96022b9028b770137424a33", "patch": "@@ -2,6 +2,7 @@ MULTILIB_MATCHES_FLOAT\t= msoft-float=mcpu?401 \\\n \t\t\t  msoft-float=mcpu?403 \\\n \t\t\t  msoft-float=mcpu?405 \\\n \t\t\t  msoft-float=mcpu?440 \\\n+\t\t\t  msoft-float=mcpu?464 \\\n \t\t\t  msoft-float=mcpu?ec603e \\\n \t\t\t  msoft-float=mcpu?801 \\\n \t\t\t  msoft-float=mcpu?821 \\"}, {"sha": "4c0520349c0a9786d148fd9b721741e2ee5f3bc3", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4adf80083777c772d96022b9028b770137424a33/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4adf80083777c772d96022b9028b770137424a33/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=4adf80083777c772d96022b9028b770137424a33", "patch": "@@ -12990,8 +12990,8 @@ should normally not specify either @option{-mnew-mnemonics} or\n Set architecture type, register usage, choice of mnemonics, and\n instruction scheduling parameters for machine type @var{cpu_type}.\n Supported values for @var{cpu_type} are @samp{401}, @samp{403},\n-@samp{405}, @samp{405fp}, @samp{440}, @samp{440fp}, @samp{505},\n-@samp{601}, @samp{602}, @samp{603}, @samp{603e}, @samp{604},\n+@samp{405}, @samp{405fp}, @samp{440}, @samp{440fp}, @samp{464}, @samp{464fp},\n+@samp{505}, @samp{601}, @samp{602}, @samp{603}, @samp{603e}, @samp{604},\n @samp{604e}, @samp{620}, @samp{630}, @samp{740}, @samp{7400},\n @samp{7450}, @samp{750}, @samp{801}, @samp{821}, @samp{823},\n @samp{860}, @samp{970}, @samp{8540}, @samp{e300c2}, @samp{e300c3},\n@@ -13289,7 +13289,7 @@ hardware floating is used.\n @opindex mmulhw\n @opindex mno-mulhw\n Generate code that uses (does not use) the half-word multiply and\n-multiply-accumulate instructions on the IBM 405 and 440 processors.\n+multiply-accumulate instructions on the IBM 405, 440 and 464 processors.\n These instructions are generated by default when targetting those\n processors.\n \n@@ -13298,7 +13298,7 @@ processors.\n @opindex mdlmzb\n @opindex mno-dlmzb\n Generate code that uses (does not use) the string-search @samp{dlmzb}\n-instruction on the IBM 405 and 440 processors.  This instruction is\n+instruction on the IBM 405, 440 and 464 processors.  This instruction is\n generated by default when targetting those processors.\n \n @item -mno-bit-align"}]}