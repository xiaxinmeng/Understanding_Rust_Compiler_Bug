{"sha": "af31bd57502fd7fef4891658c74cb5fdb3c160e4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWYzMWJkNTc1MDJmZDdmZWY0ODkxNjU4Yzc0Y2I1ZmRiM2MxNjBlNA==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2012-12-05T11:11:28Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2012-12-05T11:11:28Z"}, "message": "[multiple changes]\n\n2012-12-05  Robert Dewar  <dewar@adacore.com>\n\n\t* atree.ads, par-ch4.adb, sem_attr.adb, sem_ch13.adb: Minor\n\treformatting.\n\n2012-12-05  Eric Botcazou  <ebotcazou@adacore.com>\n\n\t* gnat_ugn.texi (Switches for gcc): Document -flto and reorder.\n\n2012-12-05  Ed Schonberg  <schonberg@adacore.com>\n\n\t* par-ch5.adb (P_Condition): Handle properly Ada 2012\n\texpressions that must be parenthesized before checking for\n\tredundant parentheses when that check is enabled.\n\nFrom-SVN: r194210", "tree": {"sha": "c8dd05dbdd00dad1308438f3cbe9bce27eadebaf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c8dd05dbdd00dad1308438f3cbe9bce27eadebaf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/af31bd57502fd7fef4891658c74cb5fdb3c160e4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/af31bd57502fd7fef4891658c74cb5fdb3c160e4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/af31bd57502fd7fef4891658c74cb5fdb3c160e4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/af31bd57502fd7fef4891658c74cb5fdb3c160e4/comments", "author": null, "committer": null, "parents": [{"sha": "7b55fea6d7c6e40c769d04fc4ed42d6c556941df", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7b55fea6d7c6e40c769d04fc4ed42d6c556941df", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7b55fea6d7c6e40c769d04fc4ed42d6c556941df"}], "stats": {"total": 210, "additions": 134, "deletions": 76}, "files": [{"sha": "c0e6d1aa15e61cf545e8dd0ab025c9d967210536", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/af31bd57502fd7fef4891658c74cb5fdb3c160e4/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/af31bd57502fd7fef4891658c74cb5fdb3c160e4/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=af31bd57502fd7fef4891658c74cb5fdb3c160e4", "patch": "@@ -1,3 +1,18 @@\n+2012-12-05  Robert Dewar  <dewar@adacore.com>\n+\n+\t* atree.ads, par-ch4.adb, sem_attr.adb, sem_ch13.adb: Minor\n+\treformatting.\n+\n+2012-12-05  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gnat_ugn.texi (Switches for gcc): Document -flto and reorder.\n+\n+2012-12-05  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* par-ch5.adb (P_Condition): Handle properly Ada 2012\n+\texpressions that must be parenthesized before checking for\n+\tredundant parentheses when that check is enabled.\n+\n 2012-12-05  Ed Schonberg  <schonberg@adacore.com>\n \n \t* par-ch4.adb (P_Allocator): In Ada 2012 (AI05-0104)  an"}, {"sha": "e685ead0049aa1f99cafd9a7fd80c8c5db4c16e0", "filename": "gcc/ada/atree.ads", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/af31bd57502fd7fef4891658c74cb5fdb3c160e4/gcc%2Fada%2Fatree.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/af31bd57502fd7fef4891658c74cb5fdb3c160e4/gcc%2Fada%2Fatree.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fatree.ads?ref=af31bd57502fd7fef4891658c74cb5fdb3c160e4", "patch": "@@ -105,6 +105,11 @@ package Atree is\n    --                 is used to indicate the real value. Set to zero for\n    --                 non-subexpression nodes.\n \n+   --                 Note: the required parentheses surrounding conditional\n+   --                 and quantified expressions count as a level of parens\n+   --                 for this purposes, so e.g. in X := (if A then B else C);\n+   --                 Paren_Count for the right side will be 1.\n+\n    --   Comes_From_Source\n    --                 This flag is present in all nodes. It is set if the\n    --                 node is built by the scanner or parser, and clear if\n@@ -305,7 +310,7 @@ package Atree is\n    Configurable_Run_Time_Violations : Nat := 0;\n    --  Count of configurable run time violations so far. This is used to\n    --  suppress certain cascaded error messages when we know that we may not\n-   --  have fully expanded some items, due to high integrity violations (i.e.\n+   --  have fully expanded some items, due to high integrity violations (e.g.\n    --  the use of constructs not permitted by the library in use, or improper\n    --  constructs in No_Run_Time mode).\n "}, {"sha": "176c01db3b70eb783ee3cdf65d7a6795ed6af332", "filename": "gcc/ada/gnat_ugn.texi", "status": "modified", "additions": 35, "deletions": 13, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/af31bd57502fd7fef4891658c74cb5fdb3c160e4/gcc%2Fada%2Fgnat_ugn.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/af31bd57502fd7fef4891658c74cb5fdb3c160e4/gcc%2Fada%2Fgnat_ugn.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_ugn.texi?ref=af31bd57502fd7fef4891658c74cb5fdb3c160e4", "patch": "@@ -4004,6 +4004,41 @@ cannot use this approach, because the binder must be run\n and @command{gcc} cannot be used to run the GNAT binder.\n @end ifclear\n \n+@item -fcallgraph-info@r{[}=su,da@r{]}\n+@cindex @option{-fcallgraph-info} (@command{gcc})\n+Makes the compiler output callgraph information for the program, on a\n+per-file basis. The information is generated in the VCG format.  It can\n+be decorated with additional, per-node and/or per-edge information, if a\n+list of comma-separated markers is additionally specified. When the\n+@var{su} marker is specified, the callgraph is decorated with stack usage information; it is equivalent to @option{-fstack-usage}. When the @var{da}\n+marker is specified, the callgraph is decorated with information about\n+dynamically allocated objects.\n+\n+@item -fdump-scos\n+@cindex @option{-fdump-scos} (@command{gcc})\n+Generates SCO (Source Coverage Obligation) information in the ALI file.\n+This information is used by advanced coverage tools. See unit @file{SCOs}\n+in the compiler sources for details in files @file{scos.ads} and\n+@file{scos.adb}.\n+\n+@item -flto@r{[}=n@r{]}\n+@cindex @option{-flto} (@command{gcc})\n+Enables Link Time Optimization. This switch must be used in conjunction\n+with the traditional @option{-Ox} switches and instructs the compiler to\n+defer most optimizations until the link stage. The advantage of this\n+approach is that the compiler can do a whole-program analysis and choose\n+the best interprocedural optimization strategy based on a complete view\n+of the program, instead of a fragmentary view with the usual approach.\n+This can also speed up the compilation of huge programs and reduce the\n+size of the final executable, compared with a per-unit compilation with\n+full inlining across modules enabled with the @option{-gnatn2} switch.\n+The drawback of this approach is that it may require much more memory.\n+The switch, as well as the accompanying @option{-Ox} switches, must be\n+specified both for the compilation and the link phases.\n+If the @var{n} parameter is specified, the optimization and final code\n+generation at link time are executed using @var{n} parallel jobs by\n+means of an installed @command{make} program.\n+\n @item -fno-inline\n @cindex @option{-fno-inline} (@command{gcc})\n Suppresses all inlining, even if other optimization or inlining\n@@ -4053,19 +4088,6 @@ See @ref{Stack Overflow Checking} for details.\n Makes the compiler output stack usage information for the program, on a\n per-subprogram basis. See @ref{Static Stack Usage Analysis} for details.\n \n-@item -fcallgraph-info@r{[}=su@r{]}\n-@cindex @option{-fcallgraph-info} (@command{gcc})\n-Makes the compiler output callgraph information for the program, on a\n-per-file basis.  The information is generated in the VCG format.  It can\n-be decorated with stack-usage per-node information.\n-\n-@item -fdump-scos\n-@cindex @option{-fdump-scos} (@command{gcc})\n-Generate SCO (Source Coverage Obligation) information in the ALI file.\n-This information is used by advanced coverage tools. See unit @file{SCOs}\n-in the compiler sources for details in files @file{scos.ads} and\n-@file{scos.adb}.\n-\n @item ^-g^/DEBUG^\n @cindex @option{^-g^/DEBUG^} (@command{gcc})\n Generate debugging information. This information is stored in the object"}, {"sha": "185a07d97c2c5541f49513ccee8fb0c1a500d8d6", "filename": "gcc/ada/par-ch4.adb", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/af31bd57502fd7fef4891658c74cb5fdb3c160e4/gcc%2Fada%2Fpar-ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/af31bd57502fd7fef4891658c74cb5fdb3c160e4/gcc%2Fada%2Fpar-ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-ch4.adb?ref=af31bd57502fd7fef4891658c74cb5fdb3c160e4", "patch": "@@ -2929,16 +2929,14 @@ package body Ch4 is\n            (Alloc_Node,\n             P_Subtype_Indication (Type_Node, Null_Exclusion_Present));\n \n-         --  AI05-0104 :  an explicit null exclusion is not allowed for an\n+         --  AI05-0104: An explicit null exclusion is not allowed for an\n          --  allocator without initialization. In previous versions of the\n          --  language it just raises constraint error.\n \n-         if Ada_Version >= Ada_2012\n-           and then Null_Exclusion_Present\n-         then\n+         if Ada_Version >= Ada_2012 and then Null_Exclusion_Present then\n             Error_Msg_N\n               (\"an allocator with a subtype indication \"\n-                & \"cannot have a null exclusion\", Alloc_Node);\n+               & \"cannot have a null exclusion\", Alloc_Node);\n          end if;\n       end if;\n "}, {"sha": "d6d6b2f276d54e5b74905aad86caf04101868067", "filename": "gcc/ada/par-ch5.adb", "status": "modified", "additions": 14, "deletions": 6, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/af31bd57502fd7fef4891658c74cb5fdb3c160e4/gcc%2Fada%2Fpar-ch5.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/af31bd57502fd7fef4891658c74cb5fdb3c160e4/gcc%2Fada%2Fpar-ch5.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-ch5.adb?ref=af31bd57502fd7fef4891658c74cb5fdb3c160e4", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2011, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2012, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -1276,13 +1276,21 @@ package body Ch5 is\n \n          return Cond;\n \n-      --  Otherwise check for redundant parens\n+      --  Otherwise check for redundant parentheses\n+\n+      --  If the  condition is a conditional or a quantified expression, it is\n+      --  parenthesized in the context of a condition, because of a separate\n+      --  syntax rule.\n \n       else\n-         if Style_Check\n-           and then Paren_Count (Cond) > 0\n-         then\n-            Style.Check_Xtra_Parens (First_Sloc (Cond));\n+         if Style_Check and then Paren_Count (Cond) > 0 then\n+            if not Nkind_In (Cond, N_If_Expression,\n+                                   N_Case_Expression,\n+                                   N_Quantified_Expression)\n+              or else Paren_Count (Cond) > 1\n+            then\n+               Style.Check_Xtra_Parens (First_Sloc (Cond));\n+            end if;\n          end if;\n \n          --  And return the result"}, {"sha": "836c278621e7c9c7aa51648d368ca6c9276147fa", "filename": "gcc/ada/sem_attr.adb", "status": "modified", "additions": 60, "deletions": 48, "changes": 108, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/af31bd57502fd7fef4891658c74cb5fdb3c160e4/gcc%2Fada%2Fsem_attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/af31bd57502fd7fef4891658c74cb5fdb3c160e4/gcc%2Fada%2Fsem_attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_attr.adb?ref=af31bd57502fd7fef4891658c74cb5fdb3c160e4", "patch": "@@ -6859,9 +6859,11 @@ package body Sem_Attr is\n       --------------\n \n       when Attribute_Adjacent =>\n-         Fold_Ureal (N,\n-           Eval_Fat.Adjacent\n-             (P_Base_Type, Expr_Value_R (E1), Expr_Value_R (E2)), Static);\n+         Fold_Ureal\n+           (N,\n+            Eval_Fat.Adjacent\n+              (P_Base_Type, Expr_Value_R (E1), Expr_Value_R (E2)),\n+            Static);\n \n       ---------\n       -- Aft --\n@@ -6946,8 +6948,8 @@ package body Sem_Attr is\n       -------------\n \n       when Attribute_Ceiling =>\n-         Fold_Ureal (N,\n-           Eval_Fat.Ceiling (P_Base_Type, Expr_Value_R (E1)), Static);\n+         Fold_Ureal\n+           (N, Eval_Fat.Ceiling (P_Base_Type, Expr_Value_R (E1)), Static);\n \n       --------------------\n       -- Component_Size --\n@@ -6963,10 +6965,10 @@ package body Sem_Attr is\n       -------------\n \n       when Attribute_Compose =>\n-         Fold_Ureal (N,\n-           Eval_Fat.Compose\n-             (P_Base_Type, Expr_Value_R (E1), Expr_Value (E2)),\n-              Static);\n+         Fold_Ureal\n+           (N,\n+            Eval_Fat.Compose (P_Base_Type, Expr_Value_R (E1), Expr_Value (E2)),\n+            Static);\n \n       -----------------\n       -- Constrained --\n@@ -6983,9 +6985,11 @@ package body Sem_Attr is\n       ---------------\n \n       when Attribute_Copy_Sign =>\n-         Fold_Ureal (N,\n-           Eval_Fat.Copy_Sign\n-             (P_Base_Type, Expr_Value_R (E1), Expr_Value_R (E2)), Static);\n+         Fold_Ureal\n+           (N,\n+            Eval_Fat.Copy_Sign\n+              (P_Base_Type, Expr_Value_R (E1), Expr_Value_R (E2)),\n+            Static);\n \n       --------------\n       -- Definite --\n@@ -7180,8 +7184,8 @@ package body Sem_Attr is\n       -----------\n \n       when Attribute_Floor =>\n-         Fold_Ureal (N,\n-           Eval_Fat.Floor (P_Base_Type, Expr_Value_R (E1)), Static);\n+         Fold_Ureal\n+           (N, Eval_Fat.Floor (P_Base_Type, Expr_Value_R (E1)), Static);\n \n       ----------\n       -- Fore --\n@@ -7197,8 +7201,8 @@ package body Sem_Attr is\n       --------------\n \n       when Attribute_Fraction =>\n-         Fold_Ureal (N,\n-           Eval_Fat.Fraction (P_Base_Type, Expr_Value_R (E1)), Static);\n+         Fold_Ureal\n+           (N, Eval_Fat.Fraction (P_Base_Type, Expr_Value_R (E1)), Static);\n \n       -----------------------\n       -- Has_Access_Values --\n@@ -7334,9 +7338,10 @@ package body Sem_Attr is\n \n             --    T'Emax = 4 * T'Mantissa\n \n-            Fold_Ureal (N,\n-              Ureal_2 ** (4 * Mantissa) * (Ureal_1 - Ureal_2 ** (-Mantissa)),\n-              True);\n+            Fold_Ureal\n+              (N,\n+               Ureal_2 ** (4 * Mantissa) * (Ureal_1 - Ureal_2 ** (-Mantissa)),\n+               True);\n          end if;\n \n       ---------------\n@@ -7416,9 +7421,11 @@ package body Sem_Attr is\n       ------------------\n \n       when Attribute_Leading_Part =>\n-         Fold_Ureal (N,\n-           Eval_Fat.Leading_Part\n-             (P_Base_Type, Expr_Value_R (E1), Expr_Value (E2)), Static);\n+         Fold_Ureal\n+           (N,\n+            Eval_Fat.Leading_Part\n+              (P_Base_Type, Expr_Value_R (E1), Expr_Value (E2)),\n+            Static);\n \n       ------------\n       -- Length --\n@@ -7498,10 +7505,11 @@ package body Sem_Attr is\n       -------------\n \n       when Attribute_Machine =>\n-         Fold_Ureal (N,\n-           Eval_Fat.Machine\n-             (P_Base_Type, Expr_Value_R (E1), Eval_Fat.Round, N),\n-           Static);\n+         Fold_Ureal\n+           (N,\n+            Eval_Fat.Machine\n+              (P_Base_Type, Expr_Value_R (E1), Eval_Fat.Round, N),\n+            Static);\n \n       ------------------\n       -- Machine_Emax --\n@@ -7574,8 +7582,8 @@ package body Sem_Attr is\n       --  though the non-determinism is certainly permitted.\n \n       when Attribute_Machine_Rounding =>\n-         Fold_Ureal (N,\n-           Eval_Fat.Rounding (P_Base_Type, Expr_Value_R (E1)), Static);\n+         Fold_Ureal\n+           (N, Eval_Fat.Rounding (P_Base_Type, Expr_Value_R (E1)), Static);\n \n       --------------------\n       -- Machine_Rounds --\n@@ -7805,8 +7813,8 @@ package body Sem_Attr is\n       -----------\n \n       when Attribute_Model =>\n-         Fold_Ureal (N,\n-           Eval_Fat.Model (P_Base_Type, Expr_Value_R (E1)), Static);\n+         Fold_Ureal\n+           (N, Eval_Fat.Model (P_Base_Type, Expr_Value_R (E1)), Static);\n \n       ----------------\n       -- Model_Emin --\n@@ -7902,14 +7910,14 @@ package body Sem_Attr is\n          --  Floating-point case\n \n          if Is_Floating_Point_Type (P_Type) then\n-            Fold_Ureal (N,\n-              Eval_Fat.Pred (P_Base_Type, Expr_Value_R (E1)), Static);\n+            Fold_Ureal\n+              (N, Eval_Fat.Pred (P_Base_Type, Expr_Value_R (E1)), Static);\n \n          --  Fixed-point case\n \n          elsif Is_Fixed_Point_Type (P_Type) then\n-            Fold_Ureal (N,\n-              Expr_Value_R (E1) - Small_Value (P_Type), True);\n+            Fold_Ureal\n+              (N, Expr_Value_R (E1) - Small_Value (P_Type), True);\n \n          --  Modular integer case (wraps)\n \n@@ -8051,8 +8059,8 @@ package body Sem_Attr is\n       --------------\n \n       when Attribute_Rounding =>\n-         Fold_Ureal (N,\n-           Eval_Fat.Rounding (P_Base_Type, Expr_Value_R (E1)), Static);\n+         Fold_Ureal\n+           (N, Eval_Fat.Rounding (P_Base_Type, Expr_Value_R (E1)), Static);\n \n       ---------------\n       -- Safe_Emax --\n@@ -8125,9 +8133,11 @@ package body Sem_Attr is\n       -------------\n \n       when Attribute_Scaling =>\n-         Fold_Ureal (N,\n-           Eval_Fat.Scaling\n-             (P_Base_Type, Expr_Value_R (E1), Expr_Value (E2)), Static);\n+         Fold_Ureal\n+           (N,\n+            Eval_Fat.Scaling\n+              (P_Base_Type, Expr_Value_R (E1), Expr_Value (E2)),\n+            Static);\n \n       ------------------\n       -- Signed_Zeros --\n@@ -8240,14 +8250,13 @@ package body Sem_Attr is\n          --  Floating-point case\n \n          if Is_Floating_Point_Type (P_Type) then\n-            Fold_Ureal (N,\n-              Eval_Fat.Succ (P_Base_Type, Expr_Value_R (E1)), Static);\n+            Fold_Ureal\n+              (N, Eval_Fat.Succ (P_Base_Type, Expr_Value_R (E1)), Static);\n \n          --  Fixed-point case\n \n          elsif Is_Fixed_Point_Type (P_Type) then\n-            Fold_Ureal (N,\n-              Expr_Value_R (E1) + Small_Value (P_Type), Static);\n+            Fold_Ureal (N, Expr_Value_R (E1) + Small_Value (P_Type), Static);\n \n          --  Modular integer case (wraps)\n \n@@ -8282,8 +8291,10 @@ package body Sem_Attr is\n       ----------------\n \n       when Attribute_Truncation =>\n-         Fold_Ureal (N,\n-           Eval_Fat.Truncation (P_Base_Type, Expr_Value_R (E1)), Static);\n+         Fold_Ureal\n+           (N,\n+            Eval_Fat.Truncation (P_Base_Type, Expr_Value_R (E1)),\n+            Static);\n \n       ----------------\n       -- Type_Class --\n@@ -8347,9 +8358,10 @@ package body Sem_Attr is\n       -----------------------\n \n       when Attribute_Unbiased_Rounding =>\n-         Fold_Ureal (N,\n-           Eval_Fat.Unbiased_Rounding (P_Base_Type, Expr_Value_R (E1)),\n-           Static);\n+         Fold_Ureal\n+           (N,\n+            Eval_Fat.Unbiased_Rounding (P_Base_Type, Expr_Value_R (E1)),\n+            Static);\n \n       -------------------------\n       -- Unconstrained_Array --"}, {"sha": "8bdf27ff18aada3b48b465a22335391ed9c8de66", "filename": "gcc/ada/sem_ch13.adb", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/af31bd57502fd7fef4891658c74cb5fdb3c160e4/gcc%2Fada%2Fsem_ch13.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/af31bd57502fd7fef4891658c74cb5fdb3c160e4/gcc%2Fada%2Fsem_ch13.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch13.adb?ref=af31bd57502fd7fef4891658c74cb5fdb3c160e4", "patch": "@@ -1906,9 +1906,7 @@ package body Sem_Ch13 is\n                --  is mandated by the semantics of the aspect. Verify that\n                --  this a scalar type, to prevent cascaded errors.\n \n-               if A_Id = Aspect_Default_Value\n-                 and then Is_Scalar_Type (E)\n-               then\n+               if A_Id = Aspect_Default_Value and then Is_Scalar_Type (E) then\n                   Set_Has_Delayed_Aspects (Base_Type (E));\n                   Record_Rep_Item (Base_Type (E), Aspect);\n                end if;"}]}