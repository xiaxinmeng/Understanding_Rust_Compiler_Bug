{"sha": "57ab3714b6c436032ca440f9432c5837928de969", "node_id": "C_kwDOANBUbNoAKDU3YWIzNzE0YjZjNDM2MDMyY2E0NDBmOTQzMmM1ODM3OTI4ZGU5Njk", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2022-12-12T22:25:58Z"}, "committer": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2022-12-15T21:48:00Z"}, "message": "c++: rename parameter\n\ngcc/cp/ChangeLog:\n\n\t* init.cc (build_vec_init): Rename \"flags\" to \"cleanup_flags\"\n\tto distinguish from LOOKUP_*.", "tree": {"sha": "93305ec32ffa743eeb8b0b117d07e02e07c55c35", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/93305ec32ffa743eeb8b0b117d07e02e07c55c35"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/57ab3714b6c436032ca440f9432c5837928de969", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/57ab3714b6c436032ca440f9432c5837928de969", "html_url": "https://github.com/Rust-GCC/gccrs/commit/57ab3714b6c436032ca440f9432c5837928de969", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/57ab3714b6c436032ca440f9432c5837928de969/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "52e7ff23ff5967fef52ebe31b6750a56f7103080", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/52e7ff23ff5967fef52ebe31b6750a56f7103080", "html_url": "https://github.com/Rust-GCC/gccrs/commit/52e7ff23ff5967fef52ebe31b6750a56f7103080"}], "stats": {"total": 9, "additions": 5, "deletions": 4}, "files": [{"sha": "73e6547c07653a4b459a7ed72edd9f3e3b280e28", "filename": "gcc/cp/init.cc", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57ab3714b6c436032ca440f9432c5837928de969/gcc%2Fcp%2Finit.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57ab3714b6c436032ca440f9432c5837928de969/gcc%2Fcp%2Finit.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Finit.cc?ref=57ab3714b6c436032ca440f9432c5837928de969", "patch": "@@ -4379,7 +4379,7 @@ build_vec_init (tree base, tree maxindex, tree init,\n \t\tbool explicit_value_init_p,\n \t\tint from_array,\n \t\ttsubst_flags_t complain,\n-\t\tvec<tree, va_gc>** flags /* = nullptr */)\n+\t\tvec<tree, va_gc>** cleanup_flags /* = nullptr */)\n {\n   tree rval;\n   tree base2 = NULL_TREE;\n@@ -4590,8 +4590,8 @@ build_vec_init (tree base, tree maxindex, tree init,\n \t anything for arrays.  But if the array is a subobject, we need to\n \t tell split_nonconstant_init how to turn off this cleanup in favor of\n \t the cleanup for the complete object.  */\n-      if (flags)\n-\tvec_safe_push (*flags, build_tree_list (iterator, maxindex));\n+      if (cleanup_flags)\n+\tvec_safe_push (*cleanup_flags, build_tree_list (iterator, maxindex));\n     }\n \n   /* Should we try to create a constant initializer?  */\n@@ -4650,7 +4650,8 @@ build_vec_init (tree base, tree maxindex, tree init,\n \t  if (digested)\n \t    one_init = cp_build_init_expr (baseref, elt);\n \t  else if (tree vi = get_vec_init_expr (elt))\n-\t    one_init = expand_vec_init_expr (baseref, vi, complain, flags);\n+\t    one_init = expand_vec_init_expr (baseref, vi, complain,\n+\t\t\t\t\t     cleanup_flags);\n \t  else if (MAYBE_CLASS_TYPE_P (type) || TREE_CODE (type) == ARRAY_TYPE)\n \t    one_init = build_aggr_init (baseref, elt, 0, complain);\n \t  else"}]}