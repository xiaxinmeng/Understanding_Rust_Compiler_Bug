{"sha": "04628a1d33dca0c560af130475458313507cf9aa", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDQ2MjhhMWQzM2RjYTBjNTYwYWYxMzA0NzU0NTgzMTM1MDdjZjlhYQ==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2015-07-31T22:16:12Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2015-07-31T22:16:12Z"}, "message": "compiler: Check the type in function declarations.\n\n    \n    Function declarations don't create a block where the variables listed\n    in the parameter list are declared.  Because there are no variables\n    declared, the types of the parameter variables is unchecked, allowing\n    for invalid values to be used as the type.  This patch adds a special\n    case to the check_types pass for function declarations.\n    \n    Fixes golang/go#11567.\n    \n    Reviewed-on: https://go-review.googlesource.com/12662\n\nFrom-SVN: r226456", "tree": {"sha": "8ba8d7038b89a56101535a903784fc22051f9b5d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8ba8d7038b89a56101535a903784fc22051f9b5d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/04628a1d33dca0c560af130475458313507cf9aa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/04628a1d33dca0c560af130475458313507cf9aa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/04628a1d33dca0c560af130475458313507cf9aa", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/04628a1d33dca0c560af130475458313507cf9aa/comments", "author": null, "committer": null, "parents": [{"sha": "3176040661d29d245759c8c686e247c35f305823", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3176040661d29d245759c8c686e247c35f305823", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3176040661d29d245759c8c686e247c35f305823"}], "stats": {"total": 37, "additions": 36, "deletions": 1}, "files": [{"sha": "732b33d36a08c8407d968887bdac242185bc056a", "filename": "gcc/go/gofrontend/MERGE", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/04628a1d33dca0c560af130475458313507cf9aa/gcc%2Fgo%2Fgofrontend%2FMERGE", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/04628a1d33dca0c560af130475458313507cf9aa/gcc%2Fgo%2Fgofrontend%2FMERGE", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2FMERGE?ref=04628a1d33dca0c560af130475458313507cf9aa", "patch": "@@ -1,4 +1,4 @@\n-19f0ec56bf278a9cbb100c6b24ec1a12c95ec41a\n+bc4dda16f8686ab6e7335adfdfd2c6cc81cb2eb5\n \n The first line of this file holds the git revision number of the last\n merge done from the gofrontend repository."}, {"sha": "77b4d52650751599007c6e8a8c38207e8e3619d9", "filename": "gcc/go/gofrontend/gogo.cc", "status": "modified", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/04628a1d33dca0c560af130475458313507cf9aa/gcc%2Fgo%2Fgofrontend%2Fgogo.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/04628a1d33dca0c560af130475458313507cf9aa/gcc%2Fgo%2Fgofrontend%2Fgogo.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2Fgogo.cc?ref=04628a1d33dca0c560af130475458313507cf9aa", "patch": "@@ -3258,6 +3258,17 @@ Gogo::check_types()\n {\n   Check_types_traverse traverse(this);\n   this->traverse(&traverse);\n+\n+  Bindings* bindings = this->current_bindings();\n+  for (Bindings::const_declarations_iterator p = bindings->begin_declarations();\n+       p != bindings->end_declarations();\n+       ++p)\n+    {\n+      // Also check the types in a function declaration's signature.\n+      Named_object* no = p->second;\n+      if (no->is_function_declaration())\n+        no->func_declaration_value()->check_types();\n+    }\n }\n \n // Check the types in a single block.\n@@ -5297,6 +5308,26 @@ Function_declaration::build_backend_descriptor(Gogo* gogo)\n     }\n }\n \n+// Check that the types used in this declaration's signature are defined.\n+// Reports errors for any undefined type.\n+\n+void\n+Function_declaration::check_types() const\n+{\n+  // Calling Type::base will give errors for any undefined types.\n+  Function_type* fntype = this->type();\n+  if (fntype->receiver() != NULL)\n+    fntype->receiver()->type()->base();\n+  if (fntype->parameters() != NULL)\n+    {\n+      const Typed_identifier_list* params = fntype->parameters();\n+      for (Typed_identifier_list::const_iterator p = params->begin();\n+           p != params->end();\n+           ++p)\n+        p->type()->base();\n+    }\n+}\n+\n // Return the function's decl after it has been built.\n \n Bfunction*"}, {"sha": "ece7e0f2e1ce356da26bfb916cd338fa75df6a7b", "filename": "gcc/go/gofrontend/gogo.h", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/04628a1d33dca0c560af130475458313507cf9aa/gcc%2Fgo%2Fgofrontend%2Fgogo.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/04628a1d33dca0c560af130475458313507cf9aa/gcc%2Fgo%2Fgofrontend%2Fgogo.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2Fgogo.h?ref=04628a1d33dca0c560af130475458313507cf9aa", "patch": "@@ -1394,6 +1394,10 @@ class Function_declaration\n   export_func(Export* exp, const std::string& name) const\n   { Function::export_func_with_type(exp, name, this->fntype_); }\n \n+  // Check that the types used in this declaration's signature are defined.\n+  void\n+  check_types() const;\n+\n  private:\n   // The type of the function.\n   Function_type* fntype_;"}]}