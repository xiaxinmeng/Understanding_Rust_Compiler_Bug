{"sha": "afc5e8a6a79510e207d23420417f78bcfb678b4e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWZjNWU4YTZhNzk1MTBlMjA3ZDIzNDIwNDE3Zjc4YmNmYjY3OGI0ZQ==", "commit": {"author": {"name": "Kyrylo Tkachov", "email": "kyrylo.tkachov@arm.com", "date": "2013-07-02T10:21:36Z"}, "committer": {"name": "Kyrylo Tkachov", "email": "ktkachov@gcc.gnu.org", "date": "2013-07-02T10:21:36Z"}, "message": "arm.md (arm_andsi3_insn): Add alternatives for 16-bit encoding.\n\n2013-07-02  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n\n\t* config/arm/arm.md (arm_andsi3_insn): Add alternatives for 16-bit\n\tencoding.\n\t(iorsi3_insn): Likewise.\n\t(arm_xorsi3): Likewise.\n\nFrom-SVN: r200593", "tree": {"sha": "25a10a057b3938017a1d7f43daee9805bc5c6328", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/25a10a057b3938017a1d7f43daee9805bc5c6328"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/afc5e8a6a79510e207d23420417f78bcfb678b4e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/afc5e8a6a79510e207d23420417f78bcfb678b4e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/afc5e8a6a79510e207d23420417f78bcfb678b4e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/afc5e8a6a79510e207d23420417f78bcfb678b4e/comments", "author": {"login": "ktkachov-arm", "id": 74917949, "node_id": "MDQ6VXNlcjc0OTE3OTQ5", "avatar_url": "https://avatars.githubusercontent.com/u/74917949?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ktkachov-arm", "html_url": "https://github.com/ktkachov-arm", "followers_url": "https://api.github.com/users/ktkachov-arm/followers", "following_url": "https://api.github.com/users/ktkachov-arm/following{/other_user}", "gists_url": "https://api.github.com/users/ktkachov-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/ktkachov-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ktkachov-arm/subscriptions", "organizations_url": "https://api.github.com/users/ktkachov-arm/orgs", "repos_url": "https://api.github.com/users/ktkachov-arm/repos", "events_url": "https://api.github.com/users/ktkachov-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/ktkachov-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "4bc21884b4d64d1fadadf41d70147162f927df98", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4bc21884b4d64d1fadadf41d70147162f927df98", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4bc21884b4d64d1fadadf41d70147162f927df98"}], "stats": {"total": 48, "additions": 31, "deletions": 17}, "files": [{"sha": "727b579e9240ed5439fa1cf9de7fa2793769435b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/afc5e8a6a79510e207d23420417f78bcfb678b4e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/afc5e8a6a79510e207d23420417f78bcfb678b4e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=afc5e8a6a79510e207d23420417f78bcfb678b4e", "patch": "@@ -1,3 +1,10 @@\n+2013-07-02  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n+\n+\t* config/arm/arm.md (arm_andsi3_insn): Add alternatives for 16-bit\n+\tencoding.\n+\t(iorsi3_insn): Likewise.\n+\t(arm_xorsi3): Likewise.\n+\n 2013-07-01  Sofiane Naci  <sofiane.naci@arm.com>\n \n \t* arm.md (attribute \"wtype\"): Delete.  Move attribute values from here"}, {"sha": "0fcdeea609c674c3bb5b285e420d0a41a603eb0f", "filename": "gcc/config/arm/arm.md", "status": "modified", "additions": 24, "deletions": 17, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/afc5e8a6a79510e207d23420417f78bcfb678b4e/gcc%2Fconfig%2Farm%2Farm.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/afc5e8a6a79510e207d23420417f78bcfb678b4e/gcc%2Fconfig%2Farm%2Farm.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.md?ref=afc5e8a6a79510e207d23420417f78bcfb678b4e", "patch": "@@ -2564,11 +2564,12 @@\n \n ; ??? Check split length for Thumb-2\n (define_insn_and_split \"*arm_andsi3_insn\"\n-  [(set (match_operand:SI         0 \"s_register_operand\" \"=r,r,r,r\")\n-\t(and:SI (match_operand:SI 1 \"s_register_operand\" \"r,r,r,r\")\n-\t\t(match_operand:SI 2 \"reg_or_int_operand\" \"I,K,r,?n\")))]\n+  [(set (match_operand:SI         0 \"s_register_operand\" \"=r,l,r,r,r\")\n+\t(and:SI (match_operand:SI 1 \"s_register_operand\" \"%r,0,r,r,r\")\n+\t\t(match_operand:SI 2 \"reg_or_int_operand\" \"I,l,K,r,?n\")))]\n   \"TARGET_32BIT\"\n   \"@\n+   and%?\\\\t%0, %1, %2\n    and%?\\\\t%0, %1, %2\n    bic%?\\\\t%0, %1, #%B2\n    and%?\\\\t%0, %1, %2\n@@ -2583,9 +2584,11 @@\n \t               INTVAL (operands[2]), operands[0], operands[1], 0);\n   DONE;\n   \"\n-  [(set_attr \"length\" \"4,4,4,16\")\n+  [(set_attr \"length\" \"4,4,4,4,16\")\n    (set_attr \"predicable\" \"yes\")\n-   (set_attr \"type\" \t\"simple_alu_imm,simple_alu_imm,*,simple_alu_imm\")]\n+   (set_attr \"predicable_short_it\" \"no,yes,no,no,no\")\n+   (set_attr \"type\"\n+     \"simple_alu_imm,simple_alu_imm,*,*,simple_alu_imm\")]\n )\n \n (define_insn \"*thumb1_andsi3_insn\"\n@@ -3338,11 +3341,12 @@\n )\n \n (define_insn_and_split \"*iorsi3_insn\"\n-  [(set (match_operand:SI 0 \"s_register_operand\" \"=r,r,r,r\")\n-\t(ior:SI (match_operand:SI 1 \"s_register_operand\" \"%r,r,r,r\")\n-\t\t(match_operand:SI 2 \"reg_or_int_operand\" \"I,K,r,?n\")))]\n+  [(set (match_operand:SI 0 \"s_register_operand\" \"=r,l,r,r,r\")\n+\t(ior:SI (match_operand:SI 1 \"s_register_operand\" \"%r,0,r,r,r\")\n+\t\t(match_operand:SI 2 \"reg_or_int_operand\" \"I,l,K,r,?n\")))]\n   \"TARGET_32BIT\"\n   \"@\n+   orr%?\\\\t%0, %1, %2\n    orr%?\\\\t%0, %1, %2\n    orn%?\\\\t%0, %1, #%B2\n    orr%?\\\\t%0, %1, %2\n@@ -3353,14 +3357,15 @@\n         || (TARGET_THUMB2 && const_ok_for_arm (~INTVAL (operands[2]))))\"\n   [(clobber (const_int 0))]\n {\n-  arm_split_constant (IOR, SImode, curr_insn, \n+  arm_split_constant (IOR, SImode, curr_insn,\n                       INTVAL (operands[2]), operands[0], operands[1], 0);\n   DONE;\n }\n-  [(set_attr \"length\" \"4,4,4,16\")\n-   (set_attr \"arch\" \"32,t2,32,32\")\n+  [(set_attr \"length\" \"4,4,4,4,16\")\n+   (set_attr \"arch\" \"32,t2,t2,32,32\")\n    (set_attr \"predicable\" \"yes\")\n-   (set_attr \"type\" \"simple_alu_imm,simple_alu_imm,*,*\")]\n+   (set_attr \"predicable_short_it\" \"no,yes,no,no,no\")\n+   (set_attr \"type\" \"simple_alu_imm,*,simple_alu_imm,*,*\")]\n )\n \n (define_insn \"*thumb1_iorsi3_insn\"\n@@ -3512,11 +3517,12 @@\n )\n \n (define_insn_and_split \"*arm_xorsi3\"\n-  [(set (match_operand:SI         0 \"s_register_operand\" \"=r,r,r\")\n-\t(xor:SI (match_operand:SI 1 \"s_register_operand\" \"%r,r,r\")\n-\t\t(match_operand:SI 2 \"reg_or_int_operand\" \"I,r,?n\")))]\n+  [(set (match_operand:SI         0 \"s_register_operand\" \"=r,l,r,r\")\n+\t(xor:SI (match_operand:SI 1 \"s_register_operand\" \"%r,0,r,r\")\n+\t\t(match_operand:SI 2 \"reg_or_int_operand\" \"I,l,r,?n\")))]\n   \"TARGET_32BIT\"\n   \"@\n+   eor%?\\\\t%0, %1, %2\n    eor%?\\\\t%0, %1, %2\n    eor%?\\\\t%0, %1, %2\n    #\"\n@@ -3529,9 +3535,10 @@\n                       INTVAL (operands[2]), operands[0], operands[1], 0);\n   DONE;\n }\n-  [(set_attr \"length\" \"4,4,16\")\n+  [(set_attr \"length\" \"4,4,4,16\")\n    (set_attr \"predicable\" \"yes\")\n-   (set_attr \"type\"  \"simple_alu_imm,*,*\")]\n+   (set_attr \"predicable_short_it\" \"no,yes,no,no\")\n+   (set_attr \"type\"  \"simple_alu_imm,*,*,*\")]\n )\n \n (define_insn \"*thumb1_xorsi3_insn\""}]}