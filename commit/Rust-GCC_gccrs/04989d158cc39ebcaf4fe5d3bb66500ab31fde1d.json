{"sha": "04989d158cc39ebcaf4fe5d3bb66500ab31fde1d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDQ5ODlkMTU4Y2MzOWViY2FmNGZlNWQzYmI2NjUwMGFiMzFmZGUxZA==", "commit": {"author": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2002-11-10T19:59:26Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2002-11-10T19:59:26Z"}, "message": "FOrgot to commit the file itself.  Changelog entry is already at:\n\n\t* reg-stack.c (compensate_edge): Fix sanity check.\n\nFrom-SVN: r58988", "tree": {"sha": "16d43ad70bb84e479c47f08124ac9ecff0a91304", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/16d43ad70bb84e479c47f08124ac9ecff0a91304"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/04989d158cc39ebcaf4fe5d3bb66500ab31fde1d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/04989d158cc39ebcaf4fe5d3bb66500ab31fde1d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/04989d158cc39ebcaf4fe5d3bb66500ab31fde1d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/04989d158cc39ebcaf4fe5d3bb66500ab31fde1d/comments", "author": null, "committer": null, "parents": [{"sha": "d898608275e56af65bf6b6ec6cba9a03a1a095df", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d898608275e56af65bf6b6ec6cba9a03a1a095df", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d898608275e56af65bf6b6ec6cba9a03a1a095df"}], "stats": {"total": 4, "additions": 4, "deletions": 0}, "files": [{"sha": "18bfeca3c752cd5b591555cfd6aa943d64fa13db", "filename": "gcc/reg-stack.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/04989d158cc39ebcaf4fe5d3bb66500ab31fde1d/gcc%2Freg-stack.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/04989d158cc39ebcaf4fe5d3bb66500ab31fde1d/gcc%2Freg-stack.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freg-stack.c?ref=04989d158cc39ebcaf4fe5d3bb66500ab31fde1d", "patch": "@@ -2553,7 +2553,11 @@ compensate_edge (e, file)\n       abort ();\n     eh1:\n \n+      /* We are sure that there is st(0) live, otherwise we won't compensate.\n+\t For complex return values, we may have st(1) live as well.  */\n       SET_HARD_REG_BIT (tmp, FIRST_STACK_REG);\n+      if (TEST_HARD_REG_BIT (regstack.reg_set, FIRST_STACK_REG + 1))\n+        SET_HARD_REG_BIT (tmp, FIRST_STACK_REG + 1);\n       GO_IF_HARD_REG_EQUAL (regstack.reg_set, tmp, eh2);\n       abort ();\n     eh2:"}]}