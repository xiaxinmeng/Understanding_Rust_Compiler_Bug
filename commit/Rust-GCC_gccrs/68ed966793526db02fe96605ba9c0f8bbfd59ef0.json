{"sha": "68ed966793526db02fe96605ba9c0f8bbfd59ef0", "node_id": "C_kwDOANBUbNoAKDY4ZWQ5NjY3OTM1MjZkYjAyZmU5NjYwNWJhOWMwZjhiYmZkNTllZjA", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2022-10-04T11:57:33Z"}, "committer": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2022-10-04T16:42:59Z"}, "message": "libstdc++: Refactor seed sequence constraints in <random>\n\nEvery use of _If_seed_seq in <random> and <ext/random> uses it with\nenable_if. We can just move the enable_if into the helper alias instead\nof repeating it everywhere.\n\nlibstdc++-v3/ChangeLog:\n\n\t* include/bits/random.h (__is_seed_seq): Replace with ...\n\t(_If_seed_seq_for): ... this.\n\t* include/ext/random: Adjust to use _If_seed_seq_for.", "tree": {"sha": "3afd48c912f90330f692e781de3eadc5b7c42a59", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3afd48c912f90330f692e781de3eadc5b7c42a59"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/68ed966793526db02fe96605ba9c0f8bbfd59ef0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/68ed966793526db02fe96605ba9c0f8bbfd59ef0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/68ed966793526db02fe96605ba9c0f8bbfd59ef0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/68ed966793526db02fe96605ba9c0f8bbfd59ef0/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e87879a9f5c2869de177c4dde2172f277e81ef1a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e87879a9f5c2869de177c4dde2172f277e81ef1a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e87879a9f5c2869de177c4dde2172f277e81ef1a"}], "stats": {"total": 45, "additions": 27, "deletions": 18}, "files": [{"sha": "28b37a9e5a51030de3f222cb3a6c813e677ecaa2", "filename": "libstdc++-v3/include/bits/random.h", "status": "modified", "additions": 24, "deletions": 15, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68ed966793526db02fe96605ba9c0f8bbfd59ef0/libstdc%2B%2B-v3%2Finclude%2Fbits%2Frandom.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68ed966793526db02fe96605ba9c0f8bbfd59ef0/libstdc%2B%2B-v3%2Finclude%2Fbits%2Frandom.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Frandom.h?ref=68ed966793526db02fe96605ba9c0f8bbfd59ef0", "patch": "@@ -198,16 +198,19 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \t_Engine& _M_g;\n       };\n \n+    // Detect whether a template argument _Sseq is a valid seed sequence for\n+    // a random number engine _Engine with result type _Res.\n+    // Used to constrain _Engine::_Engine(_Sseq&) and _Engine::seed(_Sseq&)\n+    // as required by [rand.eng.general].\n+\n     template<typename _Sseq>\n       using __seed_seq_generate_t = decltype(\n \t  std::declval<_Sseq&>().generate(std::declval<uint_least32_t*>(),\n \t\t\t\t\t  std::declval<uint_least32_t*>()));\n \n-    // Detect whether _Sseq is a valid seed sequence for\n-    // a random number engine _Engine with result type _Res.\n     template<typename _Sseq, typename _Engine, typename _Res,\n \t     typename _GenerateCheck = __seed_seq_generate_t<_Sseq>>\n-      using __is_seed_seq = __and_<\n+      using _If_seed_seq_for = _Require<\n         __not_<is_same<__remove_cvref_t<_Sseq>, _Engine>>,\n \tis_unsigned<typename _Sseq::result_type>,\n \t__not_<is_convertible<_Sseq, _Res>>\n@@ -263,8 +266,9 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \t\t    \"template argument substituting __m out of bounds\");\n \n       template<typename _Sseq>\n-\tusing _If_seed_seq = typename enable_if<__detail::__is_seed_seq<\n-\t  _Sseq, linear_congruential_engine, _UIntType>::value>::type;\n+\tusing _If_seed_seq\n+\t  = __detail::_If_seed_seq_for<_Sseq, linear_congruential_engine,\n+\t\t\t\t       _UIntType>;\n \n     public:\n       /** The type of the generated random value. */\n@@ -502,8 +506,9 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \t\t    \"template argument substituting __f out of bound\");\n \n       template<typename _Sseq>\n-\tusing _If_seed_seq = typename enable_if<__detail::__is_seed_seq<\n-\t  _Sseq, mersenne_twister_engine, _UIntType>::value>::type;\n+\tusing _If_seed_seq\n+\t  = __detail::_If_seed_seq_for<_Sseq, mersenne_twister_engine,\n+\t\t\t\t       _UIntType>;\n \n     public:\n       /** The type of the generated random value. */\n@@ -702,8 +707,9 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \t\t    \"template argument substituting __w out of bounds\");\n \n       template<typename _Sseq>\n-\tusing _If_seed_seq = typename enable_if<__detail::__is_seed_seq<\n-\t  _Sseq, subtract_with_carry_engine, _UIntType>::value>::type;\n+\tusing _If_seed_seq\n+\t  = __detail::_If_seed_seq_for<_Sseq, subtract_with_carry_engine,\n+\t\t\t\t       _UIntType>;\n \n     public:\n       /** The type of the generated random value. */\n@@ -894,8 +900,9 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       typedef typename _RandomNumberEngine::result_type result_type;\n \n       template<typename _Sseq>\n-\tusing _If_seed_seq = typename enable_if<__detail::__is_seed_seq<\n-\t  _Sseq, discard_block_engine, result_type>::value>::type;\n+\tusing _If_seed_seq\n+\t  = __detail::_If_seed_seq_for<_Sseq, discard_block_engine,\n+\t\t\t\t       result_type>;\n \n       // parameter values\n       static constexpr size_t block_size = __p;\n@@ -1113,8 +1120,9 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \t\t    \"template argument substituting __w out of bounds\");\n \n       template<typename _Sseq>\n-\tusing _If_seed_seq = typename enable_if<__detail::__is_seed_seq<\n-\t  _Sseq, independent_bits_engine, _UIntType>::value>::type;\n+\tusing _If_seed_seq\n+\t  = __detail::_If_seed_seq_for<_Sseq, independent_bits_engine,\n+\t\t\t\t       _UIntType>;\n \n     public:\n       /** The type of the generated random value. */\n@@ -1336,8 +1344,9 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       typedef typename _RandomNumberEngine::result_type result_type;\n \n       template<typename _Sseq>\n-\tusing _If_seed_seq = typename enable_if<__detail::__is_seed_seq<\n-\t  _Sseq, shuffle_order_engine, result_type>::value>::type;\n+\tusing _If_seed_seq\n+\t  = __detail::_If_seed_seq_for<_Sseq, shuffle_order_engine,\n+\t\t\t\t       result_type>;\n \n       static constexpr size_t table_size = __k;\n "}, {"sha": "406b12b5d23417d8d4aa8bd512cad24cd16c66d4", "filename": "libstdc++-v3/include/ext/random", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68ed966793526db02fe96605ba9c0f8bbfd59ef0/libstdc%2B%2B-v3%2Finclude%2Fext%2Frandom", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68ed966793526db02fe96605ba9c0f8bbfd59ef0/libstdc%2B%2B-v3%2Finclude%2Fext%2Frandom", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Frandom?ref=68ed966793526db02fe96605ba9c0f8bbfd59ef0", "patch": "@@ -89,9 +89,9 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n       template<typename _Sseq>\n \tusing _If_seed_seq\n-\t  = typename std::enable_if<std::__detail::__is_seed_seq<\n-\t    _Sseq, simd_fast_mersenne_twister_engine, result_type>::value\n-\t    >::type;\n+\t  = std::__detail::_If_seed_seq_for<_Sseq,\n+\t\t\t\t\t    simd_fast_mersenne_twister_engine,\n+\t\t\t\t\t    result_type>;\n \n     public:\n       static constexpr size_t state_size = _M_nstate * (16"}]}