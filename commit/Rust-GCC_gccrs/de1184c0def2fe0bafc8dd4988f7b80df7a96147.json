{"sha": "de1184c0def2fe0bafc8dd4988f7b80df7a96147", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGUxMTg0YzBkZWYyZmUwYmFmYzhkZDQ5ODhmN2I4MGRmN2E5NjE0Nw==", "commit": {"author": {"name": "Tobias Burnus", "email": "burnus@net-b.de", "date": "2015-01-08T18:09:25Z"}, "committer": {"name": "Tobias Burnus", "email": "burnus@gcc.gnu.org", "date": "2015-01-08T18:09:25Z"}, "message": "trans-decl.c (gfc_build_qualified_array): Fix coarray tokens for module coarrays with -fcoarray=lib.\n\n2015-01-08  Tobias Burnus  <burnus@net-b.de>\n\n        * trans-decl.c (gfc_build_qualified_array): Fix coarray tokens\n        for module coarrays with -fcoarray=lib.\n        (get_proc_pointer_decl): As module variable, make only public\n        when not marked as private.\n\n        * gfortran.dg/coarray/codimension_2b.f90: New file.\n        * gfortran.dg/coarray/codimension_2.f90: Add it to\n        * dg-extra-sources.\n        * gfortran.dg/coarray/codimension_2.f90: Call its subroutine.\n\nFrom-SVN: r219354", "tree": {"sha": "b0a7239b5b08d928b59216b75c02bf6bd6d65bf3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b0a7239b5b08d928b59216b75c02bf6bd6d65bf3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/de1184c0def2fe0bafc8dd4988f7b80df7a96147", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/de1184c0def2fe0bafc8dd4988f7b80df7a96147", "html_url": "https://github.com/Rust-GCC/gccrs/commit/de1184c0def2fe0bafc8dd4988f7b80df7a96147", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/de1184c0def2fe0bafc8dd4988f7b80df7a96147/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ec1240433d694c4662f63ccf6e8f36b7cbdffdf8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ec1240433d694c4662f63ccf6e8f36b7cbdffdf8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ec1240433d694c4662f63ccf6e8f36b7cbdffdf8"}], "stats": {"total": 65, "additions": 57, "deletions": 8}, "files": [{"sha": "3f10004979cbdb2d0019d0f44c9d9367be641bff", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de1184c0def2fe0bafc8dd4988f7b80df7a96147/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de1184c0def2fe0bafc8dd4988f7b80df7a96147/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=de1184c0def2fe0bafc8dd4988f7b80df7a96147", "patch": "@@ -1,3 +1,10 @@\n+2015-01-08  Tobias Burnus  <burnus@net-b.de>\n+\n+\t* trans-decl.c (gfc_build_qualified_array): Fix coarray tokens\n+\tfor module coarrays with -fcoarray=lib.\n+\t(get_proc_pointer_decl): As module variable, make only public\n+\twhen not marked as private.\n+\n 2015-01-05  Thomas Koenig  <tkoenig@gcc.gnu.org>\n \n \tPR fortran/47674"}, {"sha": "43441fe2d715f6e189f131e82d872d07260bdb56", "filename": "gcc/fortran/trans-decl.c", "status": "modified", "additions": 27, "deletions": 7, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de1184c0def2fe0bafc8dd4988f7b80df7a96147/gcc%2Ffortran%2Ftrans-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de1184c0def2fe0bafc8dd4988f7b80df7a96147/gcc%2Ffortran%2Ftrans-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-decl.c?ref=de1184c0def2fe0bafc8dd4988f7b80df7a96147", "patch": "@@ -87,6 +87,8 @@ static gfc_namespace *module_namespace;\n /* The currently processed procedure symbol.  */\n static gfc_symbol* current_procedure_symbol = NULL;\n \n+/* The currently processed module.  */\n+static struct module_htab_entry *cur_module;\n \n /* With -fcoarray=lib: For generating the registering call\n    of static coarrays.  */\n@@ -830,15 +832,33 @@ gfc_build_qualified_array (tree decl, gfc_symbol * sym)\n \t\t\tIDENTIFIER_POINTER (gfc_sym_mangled_identifier (sym))));\n \t  token = build_decl (DECL_SOURCE_LOCATION (decl), VAR_DECL, token_name,\n \t\t\t      token_type);\n-\t  TREE_PUBLIC (token) = 1;\n+\t  if (sym->attr.use_assoc)\n+\t    DECL_EXTERNAL (token) = 1;\n+\t  else\n+\t    TREE_STATIC (token) = 1;\n+\n+\t  if (sym->attr.use_assoc || sym->attr.access != ACCESS_PRIVATE ||\n+\t      sym->attr.public_used)\n+\t    TREE_PUBLIC (token) = 1;\n \t}\n       else\n-\ttoken = gfc_create_var_np (token_type, \"caf_token\");\n+\t{\n+\t  token = gfc_create_var_np (token_type, \"caf_token\");\n+\t  TREE_STATIC (token) = 1;\n+\t}\n \n       GFC_TYPE_ARRAY_CAF_TOKEN (type) = token;\n       DECL_ARTIFICIAL (token) = 1;\n-      TREE_STATIC (token) = 1;\n-      gfc_add_decl_to_function (token);\n+      DECL_NONALIASED (token) = 1;\n+\n+      if (sym->module && !sym->attr.use_assoc)\n+\t{\n+\t  pushdecl (token);\n+\t  DECL_CONTEXT (token) = sym->ns->proc_name->backend_decl;\n+\t  gfc_module_add_decl (cur_module, token);\n+\t}\n+      else\n+\tgfc_add_decl_to_function (token);\n     }\n \n   for (dim = 0; dim < GFC_TYPE_ARRAY_RANK (type); dim++)\n@@ -1664,7 +1684,9 @@ get_proc_pointer_decl (gfc_symbol *sym)\n   else if (sym->module && sym->ns->proc_name->attr.flavor == FL_MODULE)\n     {\n       /* This is the declaration of a module variable.  */\n-      TREE_PUBLIC (decl) = 1;\n+      if (sym->ns->proc_name->attr.flavor == FL_MODULE\n+\t  && (sym->attr.access != ACCESS_PRIVATE || sym->attr.public_used))\n+\tTREE_PUBLIC (decl) = 1;\n       TREE_STATIC (decl) = 1;\n     }\n \n@@ -4326,8 +4348,6 @@ gfc_module_add_decl (struct module_htab_entry *entry, tree decl)\n     *slot = decl;\n }\n \n-static struct module_htab_entry *cur_module;\n-\n \n /* Generate debugging symbols for namelists. This function must come after\n    generate_local_decl to ensure that the variables in the namelist are"}, {"sha": "5812067bc762973ecc602eb195a82257e151abb9", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de1184c0def2fe0bafc8dd4988f7b80df7a96147/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de1184c0def2fe0bafc8dd4988f7b80df7a96147/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=de1184c0def2fe0bafc8dd4988f7b80df7a96147", "patch": "@@ -1,3 +1,9 @@\n+2015-01-08  Tobias Burnus  <burnus@net-b.de>\n+\n+\t* gfortran.dg/coarray/codimension_2b.f90: New file.\n+\t* gfortran.dg/coarray/codimension_2.f90: Add it to dg-extra-sources.\n+\t* gfortran.dg/coarray/codimension_2.f90: Call its subroutine.\n+\n 2015-01-08  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR c++/59004"}, {"sha": "45d3374e606c54902f282bd6db0cfdd2737b7c48", "filename": "gcc/testsuite/gfortran.dg/coarray/codimension_2.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de1184c0def2fe0bafc8dd4988f7b80df7a96147/gcc%2Ftestsuite%2Fgfortran.dg%2Fcoarray%2Fcodimension_2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de1184c0def2fe0bafc8dd4988f7b80df7a96147/gcc%2Ftestsuite%2Fgfortran.dg%2Fcoarray%2Fcodimension_2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fcoarray%2Fcodimension_2.f90?ref=de1184c0def2fe0bafc8dd4988f7b80df7a96147", "patch": "@@ -1,5 +1,5 @@\n ! { dg-do link }\n-! { dg-additional-sources codimension_2a.f90 }\n+! { dg-additional-sources \"codimension_2a.f90 codimension_2b.f90\" }\n !\n ! To be used with codimension_2a.f90\n ! Check that the coarray declared in the module is accessible"}, {"sha": "3dec4aa9f26270fa40bd157c69ca9e22df8fb590", "filename": "gcc/testsuite/gfortran.dg/coarray/codimension_2a.f90", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de1184c0def2fe0bafc8dd4988f7b80df7a96147/gcc%2Ftestsuite%2Fgfortran.dg%2Fcoarray%2Fcodimension_2a.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de1184c0def2fe0bafc8dd4988f7b80df7a96147/gcc%2Ftestsuite%2Fgfortran.dg%2Fcoarray%2Fcodimension_2a.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fcoarray%2Fcodimension_2a.f90?ref=de1184c0def2fe0bafc8dd4988f7b80df7a96147", "patch": "@@ -11,6 +11,7 @@\n program testmod\n   use global_coarrays\n   implicit none\n+  external ttest\n   \n   integer :: me\n \n@@ -21,6 +22,8 @@ program testmod\n   if(me==1) then\n      b(:) = b(:)[2]\n      write(*,*) b\n+  elseif (me == 3) then\n+     call ttest()\n   end if\n \n end program testmod"}, {"sha": "c30d051a701b914d50d9d67391530c5272cff56f", "filename": "gcc/testsuite/gfortran.dg/coarray/codimension_2b.f90", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de1184c0def2fe0bafc8dd4988f7b80df7a96147/gcc%2Ftestsuite%2Fgfortran.dg%2Fcoarray%2Fcodimension_2b.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de1184c0def2fe0bafc8dd4988f7b80df7a96147/gcc%2Ftestsuite%2Fgfortran.dg%2Fcoarray%2Fcodimension_2b.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fcoarray%2Fcodimension_2b.f90?ref=de1184c0def2fe0bafc8dd4988f7b80df7a96147", "patch": "@@ -0,0 +1,13 @@\n+! { dg-do compile { target { ! *-*-* } } }\n+! SKIP THIS FILE\n+!\n+! Used by codimension_2.f90\n+!\n+! Additional file to check that using the module doesn't generate\n+! a token symbol. (The module is also used by codimension_2.f90.)\n+!\n+subroutine ttest\n+  use global_coarrays\n+  implicit none\n+  b(:) = b(:)[2]\n+end"}]}