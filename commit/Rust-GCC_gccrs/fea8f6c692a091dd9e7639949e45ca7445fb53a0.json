{"sha": "fea8f6c692a091dd9e7639949e45ca7445fb53a0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmVhOGY2YzY5MmEwOTFkZDllNzYzOTk0OWU0NWNhNzQ0NWZiNTNhMA==", "commit": {"author": {"name": "Michael Collison", "email": "michael.collison@linaro.org", "date": "2015-08-02T05:15:55Z"}, "committer": {"name": "Michael Collison", "email": "collison@gcc.gnu.org", "date": "2015-08-02T05:15:55Z"}, "message": "arm.md (*arm_smin_cmp): New pattern.\n\n2015-08-01  Michael Collison  <michael.collison@linaro.org\n\t    Ramana Radhakrishnan  <ramana.radhakrishnan@linaro.org>\n\n\t* gcc/config/arm/arm.md (*arm_smin_cmp): New pattern.\n\t(*arm_umin_cmp): Likewise.\n\n\t* gcc.target/arm/mincmp.c: New test.\n\nFrom-SVN: r226476", "tree": {"sha": "3acdd7e5d415a5d8a20bed0467cee4ac44f572aa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3acdd7e5d415a5d8a20bed0467cee4ac44f572aa"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fea8f6c692a091dd9e7639949e45ca7445fb53a0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fea8f6c692a091dd9e7639949e45ca7445fb53a0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fea8f6c692a091dd9e7639949e45ca7445fb53a0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fea8f6c692a091dd9e7639949e45ca7445fb53a0/comments", "author": null, "committer": null, "parents": [{"sha": "b0cca5ecbb2841811a6c6aeaa40a3040289aeba3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b0cca5ecbb2841811a6c6aeaa40a3040289aeba3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b0cca5ecbb2841811a6c6aeaa40a3040289aeba3"}], "stats": {"total": 69, "additions": 69, "deletions": 0}, "files": [{"sha": "c565bfc1b41e8b4a4c9c30fdc9eb1dae15b35b80", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fea8f6c692a091dd9e7639949e45ca7445fb53a0/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fea8f6c692a091dd9e7639949e45ca7445fb53a0/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=fea8f6c692a091dd9e7639949e45ca7445fb53a0", "patch": "@@ -1,3 +1,9 @@\n+2015-08-01  Michael Collison  <michael.collison@linaro.org\n+\t    Ramana Radhakrishnan  <ramana.radhakrishnan@linaro.org>\n+\n+\t* gcc/config/arm/arm.md (*arm_smin_cmp): New pattern.\n+\t(*arm_umin_cmp): Likewise.\n+\n 2015-08-01  Caroline Tice  <cmtice@google.com>\n \n \tPR 66521"}, {"sha": "817860dda028929d4351e348f237f43be804f58a", "filename": "gcc/config/arm/arm.md", "status": "modified", "additions": 38, "deletions": 0, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fea8f6c692a091dd9e7639949e45ca7445fb53a0/gcc%2Fconfig%2Farm%2Farm.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fea8f6c692a091dd9e7639949e45ca7445fb53a0/gcc%2Fconfig%2Farm%2Farm.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.md?ref=fea8f6c692a091dd9e7639949e45ca7445fb53a0", "patch": "@@ -3455,6 +3455,44 @@\n    (set_attr \"type\" \"multiple,multiple\")]\n )\n \n+;; t = (s/u)min (x, y)\n+;; cc = cmp (t, z)\n+;; is the same as\n+;; cmp x, z\n+;; cmpge(u) y, z\n+\n+(define_insn_and_split \"*arm_smin_cmp\"\n+  [(set (reg:CC CC_REGNUM)\n+\t(compare:CC\n+\t (smin:SI (match_operand:SI 0 \"s_register_operand\" \"r\")\n+\t\t  (match_operand:SI 1 \"s_register_operand\" \"r\"))\n+\t (match_operand:SI 2 \"s_register_operand\" \"r\")))]\n+  \"TARGET_32BIT\"\n+  \"#\"\n+  \"&& reload_completed\"\n+  [(set (reg:CC CC_REGNUM)\n+\t(compare:CC (match_dup 0) (match_dup 2)))\n+   (cond_exec (ge:CC (reg:CC CC_REGNUM) (const_int 0))\n+\t      (set (reg:CC CC_REGNUM)\n+\t\t   (compare:CC (match_dup 1) (match_dup 2))))]\n+)\n+\n+(define_insn_and_split \"*arm_umin_cmp\"\n+  [(set (reg:CC CC_REGNUM)\n+\t(compare:CC\n+\t (umin:SI (match_operand:SI 0 \"s_register_operand\" \"r\")\n+\t\t  (match_operand:SI 1 \"s_register_operand\" \"r\"))\n+\t (match_operand:SI 2 \"s_register_operand\" \"r\")))]\n+  \"TARGET_32BIT\"\n+  \"#\"\n+  \"&& reload_completed\"\n+  [(set (reg:CC CC_REGNUM)\n+\t(compare:CC (match_dup 0) (match_dup 2)))\n+   (cond_exec (geu:CC (reg:CC CC_REGNUM) (const_int 0))\n+\t      (set (reg:CC CC_REGNUM)\n+\t\t   (compare:CC (match_dup 1) (match_dup 2))))]\n+)\n+\n (define_expand \"umaxsi3\"\n   [(parallel [\n     (set (match_operand:SI 0 \"s_register_operand\" \"\")"}, {"sha": "c018c14f323e1b5584b4b9374af4878733f4f96a", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fea8f6c692a091dd9e7639949e45ca7445fb53a0/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fea8f6c692a091dd9e7639949e45ca7445fb53a0/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=fea8f6c692a091dd9e7639949e45ca7445fb53a0", "patch": "@@ -1,3 +1,8 @@\n+2015-08-01  Michael Collison  <michael.collison@linaro.org\n+\t    Ramana Radhakrishnan  <ramana.radhakrishnan@linaro.org>\n+\n+\t* gcc.target/arm/mincmp.c: New test.\n+\n 2015-08-01  Paul Thomas  <pault@gcc.gnu.org>\n \n \tPR fortran/67091"}, {"sha": "ade3bd9e149c240fef2c86d431dddb7fec699e1e", "filename": "gcc/testsuite/gcc.target/arm/mincmp.c", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fea8f6c692a091dd9e7639949e45ca7445fb53a0/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmincmp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fea8f6c692a091dd9e7639949e45ca7445fb53a0/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmincmp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmincmp.c?ref=fea8f6c692a091dd9e7639949e45ca7445fb53a0", "patch": "@@ -0,0 +1,20 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2\" } */\n+/* { dg-require-effective-target arm32 } */\n+\n+#define min(x, y) ((x) <= (y)) ? (x) : (y)\n+\n+unsigned int \n+foo (unsigned int i, unsigned int x, unsigned int y)\n+{\n+  return i < (min (x, y));\n+}\n+\n+int \n+bar (int i, int x, int y)\n+{\n+  return i < (min (x, y));\n+}\n+\n+/* { dg-final { scan-assembler \"cmpcs\" } } */\n+/* { dg-final { scan-assembler \"cmpge\" } } */"}]}