{"sha": "6ae533cf8947fe7f6e536adf5431b13e28f844f3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmFlNTMzY2Y4OTQ3ZmU3ZjZlNTM2YWRmNTQzMWIxM2UyOGY4NDRmMw==", "commit": {"author": {"name": "Josef Zlomek", "email": "zlomekj@suse.cz", "date": "2003-12-20T16:31:12Z"}, "committer": {"name": "Josef Zlomek", "email": "zlomek@gcc.gnu.org", "date": "2003-12-20T16:31:12Z"}, "message": "PR optimization/13430, PR optimization/12322\n\n\tPR optimization/13430, PR optimization/12322\n\t* bb-reorder.c (copy_bb_p): Do not allow block with many successors to\n\tbe copied.\n\t(find_traces_1_round): Surround check for fake edges by\n\t#ifdef ENABLE_CHECKING #endif.\n\nFrom-SVN: r74887", "tree": {"sha": "8002125c0b41568a066ba1a96222954da65a4ad6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8002125c0b41568a066ba1a96222954da65a4ad6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6ae533cf8947fe7f6e536adf5431b13e28f844f3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6ae533cf8947fe7f6e536adf5431b13e28f844f3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6ae533cf8947fe7f6e536adf5431b13e28f844f3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6ae533cf8947fe7f6e536adf5431b13e28f844f3/comments", "author": null, "committer": null, "parents": [{"sha": "5d7f899bb3fa4b02a499818563714df1d9c16721", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5d7f899bb3fa4b02a499818563714df1d9c16721", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5d7f899bb3fa4b02a499818563714df1d9c16721"}], "stats": {"total": 21, "additions": 21, "deletions": 0}, "files": [{"sha": "955e05f342abd9d7aa159a2b138c2f9a9b53f3d7", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6ae533cf8947fe7f6e536adf5431b13e28f844f3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6ae533cf8947fe7f6e536adf5431b13e28f844f3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6ae533cf8947fe7f6e536adf5431b13e28f844f3", "patch": "@@ -1,3 +1,11 @@\n+2003-12-20  Josef Zlomek  <zlomekj@suse.cz>\n+\n+\tPR optimization/13430, PR optimization/12322\n+\t* bb-reorder.c (copy_bb_p): Do not allow block with many successors to\n+\tbe copied.\n+\t(find_traces_1_round): Surround check for fake edges by\n+\t#ifdef ENABLE_CHECKING #endif.\n+\n 2003-12-20  Eric Botcazou  <ebotcazou@libertysurf.fr>\n \n \tPR other/7956"}, {"sha": "fc50b6494d3915e09f2493f79c2a81011ee1daf1", "filename": "gcc/bb-reorder.c", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6ae533cf8947fe7f6e536adf5431b13e28f844f3/gcc%2Fbb-reorder.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6ae533cf8947fe7f6e536adf5431b13e28f844f3/gcc%2Fbb-reorder.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbb-reorder.c?ref=6ae533cf8947fe7f6e536adf5431b13e28f844f3", "patch": "@@ -415,8 +415,10 @@ find_traces_1_round (int branch_th, int exec_th, gcov_type count_th,\n \t  /* Select the successor that will be placed after BB.  */\n \t  for (e = bb->succ; e; e = e->succ_next)\n \t    {\n+#ifdef ENABLE_CHECKING\n \t      if (e->flags & EDGE_FAKE)\n \t\tabort ();\n+#endif\n \n \t      if (e->dest == EXIT_BLOCK_PTR)\n \t\tcontinue;\n@@ -1001,6 +1003,8 @@ copy_bb_p (basic_block bb, int code_may_grow)\n   int size = 0;\n   int max_size = uncond_jump_length;\n   rtx insn;\n+  int n_succ;\n+  edge e;\n \n   if (!bb->frequency)\n     return false;\n@@ -1009,6 +1013,15 @@ copy_bb_p (basic_block bb, int code_may_grow)\n   if (!cfg_layout_can_duplicate_bb_p (bb))\n     return false;\n \n+  /* Avoid duplicating blocks which have many successors (PR/13430).  */\n+  n_succ = 0;\n+  for (e = bb->succ; e; e = e->succ_next)\n+    {\n+      n_succ++;\n+      if (n_succ > 8)\n+\treturn false;\n+    }\n+\n   if (code_may_grow && maybe_hot_bb_p (bb))\n     max_size *= 8;\n "}]}