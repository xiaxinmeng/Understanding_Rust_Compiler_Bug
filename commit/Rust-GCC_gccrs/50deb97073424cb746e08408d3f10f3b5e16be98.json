{"sha": "50deb97073424cb746e08408d3f10f3b5e16be98", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTBkZWI5NzA3MzQyNGNiNzQ2ZTA4NDA4ZDNmMTBmM2I1ZTE2YmU5OA==", "commit": {"author": {"name": "Iain Buclaw", "email": "ibuclaw@gcc.gnu.org", "date": "2019-01-18T00:48:51Z"}, "committer": {"name": "Iain Buclaw", "email": "ibuclaw@gcc.gnu.org", "date": "2019-01-18T00:48:51Z"}, "message": "libphobos: Add platform bindings for hppa-linux-gnu.\n\nBackported from upstream druntime 2.084\n\nReviewed-on: https://github.com/dlang/druntime/pull/2402\n\nFrom-SVN: r268055", "tree": {"sha": "8822c3d4041fcaa1a5742bb3b16b823dbedee0a9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8822c3d4041fcaa1a5742bb3b16b823dbedee0a9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/50deb97073424cb746e08408d3f10f3b5e16be98", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/50deb97073424cb746e08408d3f10f3b5e16be98", "html_url": "https://github.com/Rust-GCC/gccrs/commit/50deb97073424cb746e08408d3f10f3b5e16be98", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/50deb97073424cb746e08408d3f10f3b5e16be98/comments", "author": null, "committer": null, "parents": [{"sha": "fa95915e479416f24363136d1c44a4ec401800bb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fa95915e479416f24363136d1c44a4ec401800bb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fa95915e479416f24363136d1c44a4ec401800bb"}], "stats": {"total": 460, "additions": 460, "deletions": 0}, "files": [{"sha": "03c88d79cb8c2bfaef6d2ed24c250e0c463524de", "filename": "libphobos/libdruntime/core/stdc/errno.d", "status": "modified", "additions": 107, "deletions": 0, "changes": 107, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/50deb97073424cb746e08408d3f10f3b5e16be98/libphobos%2Flibdruntime%2Fcore%2Fstdc%2Ferrno.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/50deb97073424cb746e08408d3f10f3b5e16be98/libphobos%2Flibdruntime%2Fcore%2Fstdc%2Ferrno.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2Fcore%2Fstdc%2Ferrno.d?ref=50deb97073424cb746e08408d3f10f3b5e16be98", "patch": "@@ -25,6 +25,7 @@ else version (WatchOS)\n \n version (ARM)     version = ARM_Any;\n version (AArch64) version = ARM_Any;\n+version (HPPA)    version = HPPA_Any;\n version (MIPS32)  version = MIPS_Any;\n version (MIPS64)  version = MIPS_Any;\n version (PPC)     version = PPC_Any;\n@@ -421,6 +422,112 @@ else version (linux)\n         enum ERFKILL            = 132;        ///\n         enum EHWPOISON          = 133;        ///\n     }\n+    else version (HPPA_Any)\n+    {\n+        enum ENOMSG             = 35;         ///\n+        enum EIDRM              = 36;         ///\n+        enum ECHRNG             = 37;         ///\n+        enum EL2NSYNC           = 38;         ///\n+        enum EL3HLT             = 39;         ///\n+        enum EL3RST             = 40;         ///\n+        enum ELNRNG             = 41;         ///\n+        enum EUNATCH            = 42;         ///\n+        enum ENOCSI             = 43;         ///\n+        enum EL2HLT             = 44;         ///\n+        enum EDEADLK            = 45;         ///\n+        enum EDEADLOCK          = EDEADLK;    ///\n+        enum ENOLCK             = 46;         ///\n+        enum EILSEQ             = 47;         ///\n+        enum ENONET             = 50;         ///\n+        enum ENODATA            = 51;         ///\n+        enum ETIME              = 52;         ///\n+        enum ENOSR              = 53;         ///\n+        enum ENOSTR             = 54;         ///\n+        enum ENOPKG             = 55;         ///\n+        enum ENOLINK            = 57;         ///\n+        enum EADV               = 58;         ///\n+        enum ESRMNT             = 59;         ///\n+        enum ECOMM              = 60;         ///\n+        enum EPROTO             = 61;         ///\n+        enum EMULTIHOP          = 64;         ///\n+        enum EDOTDOT            = 66;         ///\n+        enum EBADMSG            = 67;         ///\n+        enum EUSERS             = 68;         ///\n+        enum EDQUOT             = 69;         ///\n+        enum ESTALE             = 70;         ///\n+        enum EREMOTE            = 71;         ///\n+        enum EOVERFLOW          = 72;         ///\n+        enum EBADE              = 160;        ///\n+        enum EBADR              = 161;        ///\n+        enum EXFULL             = 162;        ///\n+        enum ENOANO             = 163;        ///\n+        enum EBADRQC            = 164;        ///\n+        enum EBADSLT            = 165;        ///\n+        enum EBFONT             = 166;        ///\n+        enum ENOTUNIQ           = 167;        ///\n+        enum EBADFD             = 168;        ///\n+        enum EREMCHG            = 169;        ///\n+        enum ELIBACC            = 170;        ///\n+        enum ELIBBAD            = 171;        ///\n+        enum ELIBSCN            = 172;        ///\n+        enum ELIBMAX            = 173;        ///\n+        enum ELIBEXEC           = 174;        ///\n+        enum ERESTART           = 175;        ///\n+        enum ESTRPIPE           = 176;        ///\n+        enum EUCLEAN            = 177;        ///\n+        enum ENOTNAM            = 178;        ///\n+        enum ENAVAIL            = 179;        ///\n+        enum EISNAM             = 180;        ///\n+        enum EREMOTEIO          = 181;        ///\n+        enum ENOMEDIUM          = 182;        ///\n+        enum EMEDIUMTYPE        = 183;        ///\n+        enum ENOKEY             = 184;        ///\n+        enum EKEYEXPIRED        = 185;        ///\n+        enum EKEYREVOKED        = 186;        ///\n+        enum EKEYREJECTED       = 187;        ///\n+        enum ENOSYM             = 215;        ///\n+        enum ENOTSOCK           = 216;        ///\n+        enum EDESTADDRREQ       = 217;        ///\n+        enum EMSGSIZE           = 218;        ///\n+        enum EPROTOTYPE         = 219;        ///\n+        enum ENOPROTOOPT        = 220;        ///\n+        enum EPROTONOSUPPORT    = 221;        ///\n+        enum ESOCKTNOSUPPORT    = 221;        ///\n+        enum EOPNOTSUPP         = 223;        ///\n+        enum EPFNOSUPPORT       = 224;        ///\n+        enum EAFNOSUPPORT       = 225;        ///\n+        enum EADDRINUSE         = 226;        ///\n+        enum EADDRNOTAVAIL      = 227;        ///\n+        enum ENETDOWN           = 228;        ///\n+        enum ENETUNREACH        = 229;        ///\n+        enum ENETRESET          = 230;        ///\n+        enum ECONNABORTED       = 231;        ///\n+        enum ECONNRESET         = 232;        ///\n+        enum ENOBUFS            = 233;        ///\n+        enum EISCONN            = 234;        ///\n+        enum ENOTCONN           = 235;        ///\n+        enum ESHUTDOWN          = 236;        ///\n+        enum ETOOMANYREFS       = 237;        ///\n+        enum ETIMEDOUT          = 238;        ///\n+        enum ECONNREFUSED       = 239;        ///\n+        enum EREFUSED           = ECONNREFUSED; ///\n+        enum EREMOTERELEASE     = 240;        ///\n+        enum EHOSTDOWN          = 241;        ///\n+        enum EHOSTUNREACH       = 242;        ///\n+        enum EALREADY           = 244;        ///\n+        enum EINPROGRESS        = 245;        ///\n+        enum EWOULDBLOCK        = EAGAIN;     ///\n+        enum ENOTEMPTY          = 247;        ///\n+        enum ENAMETOOLONG       = 248;        ///\n+        enum ELOOP              = 249;        ///\n+        enum ENOSYS             = 251;        ///\n+        enum ECANCELLED         = 253;        ///\n+        enum ECANCELED          = ECANCELLED;  ///\n+        enum EOWNERDEAD         = 254;        ///\n+        enum ENOTRECOVERABLE    = 255;        ///\n+        enum ERFKILL            = 256;        ///\n+        enum EHWPOISON          = 257;        ///\n+    }\n     else version (MIPS_Any)\n     {\n         enum ENOMSG             = 35;         ///"}, {"sha": "d4abc12f502c22c7f8408086acaa92bea7876a41", "filename": "libphobos/libdruntime/core/stdc/fenv.d", "status": "modified", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/50deb97073424cb746e08408d3f10f3b5e16be98/libphobos%2Flibdruntime%2Fcore%2Fstdc%2Ffenv.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/50deb97073424cb746e08408d3f10f3b5e16be98/libphobos%2Flibdruntime%2Fcore%2Fstdc%2Ffenv.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2Fcore%2Fstdc%2Ffenv.d?ref=50deb97073424cb746e08408d3f10f3b5e16be98", "patch": "@@ -30,6 +30,7 @@ nothrow:\n \n version (ARM)     version = ARM_Any;\n version (AArch64) version = ARM_Any;\n+version (HPPA)    version = HPPA_Any;\n version (MIPS32)  version = MIPS_Any;\n version (MIPS64)  version = MIPS_Any;\n version (PPC)     version = PPC_Any;\n@@ -93,6 +94,17 @@ version (GNUFP)\n \n         alias fexcept_t = ushort;\n     }\n+    // https://sourceware.org/git/?p=glibc.git;a=blob;f=sysdeps/hppa/bits/fenv.h\n+    else version (HPPA_Any)\n+    {\n+        struct fenv_t\n+        {\n+            uint    __status_word;\n+            uint[7] __exception;\n+        }\n+\n+        alias fexcept_t = uint;\n+    }\n     // https://sourceware.org/git/?p=glibc.git;a=blob;f=sysdeps/mips/bits/fenv.h\n     else version (MIPS_Any)\n     {\n@@ -575,6 +587,28 @@ else\n             FE_TOWARDZERO   = 0xC00000, ///\n         }\n     }\n+    else version (HPPA_Any)\n+    {\n+        // Define bits representing the exception.\n+        enum\n+        {\n+            FE_INEXACT      = 0x01, ///\n+            FE_UNDERFLOW    = 0x02, ///\n+            FE_OVERFLOW     = 0x04, ///\n+            FE_DIVBYZERO    = 0x08, ///\n+            FE_INVALID      = 0x10, ///\n+            FE_ALL_EXCEPT   = 0x1F, ///\n+        }\n+\n+        // The HPPA FPU supports all of the four defined rounding modes.\n+        enum\n+        {\n+            FE_TONEAREST    =   0x0, ///\n+            FE_TOWARDZERO   = 0x200, ///\n+            FE_UPWARD       = 0x400, ///\n+            FE_DOWNWARD     = 0x600, ///\n+        }\n+    }\n     else version (MIPS_Any)\n     {\n         // Define bits representing the exception."}, {"sha": "e93f8533342c5508d0c43bc9a7caed5e2f311acb", "filename": "libphobos/libdruntime/core/stdc/math.d", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/50deb97073424cb746e08408d3f10f3b5e16be98/libphobos%2Flibdruntime%2Fcore%2Fstdc%2Fmath.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/50deb97073424cb746e08408d3f10f3b5e16be98/libphobos%2Flibdruntime%2Fcore%2Fstdc%2Fmath.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2Fcore%2Fstdc%2Fmath.d?ref=50deb97073424cb746e08408d3f10f3b5e16be98", "patch": "@@ -26,6 +26,7 @@ else version (WatchOS)\n \n version (ARM)     version = ARM_Any;\n version (AArch64) version = ARM_Any;\n+version (HPPA)    version = HPPA_Any;\n version (MIPS32)  version = MIPS_Any;\n version (MIPS64)  version = MIPS_Any;\n version (PPC)     version = PPC_Any;\n@@ -147,6 +148,13 @@ else version (CRuntime_Glibc)\n         ///\n         enum int FP_ILOGBNAN      = int.max;\n     }\n+    else version (HPPA_Any)\n+    {\n+        ///\n+        enum int FP_ILOGB0        = -int.max;\n+        ///\n+        enum int FP_ILOGBNAN      = int.max;\n+    }\n     else version (MIPS_Any)\n     {\n         ///"}, {"sha": "f2decc2b3ec5270eb72aaa7a1ad3487d7378157e", "filename": "libphobos/libdruntime/core/sys/linux/dlfcn.d", "status": "modified", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/50deb97073424cb746e08408d3f10f3b5e16be98/libphobos%2Flibdruntime%2Fcore%2Fsys%2Flinux%2Fdlfcn.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/50deb97073424cb746e08408d3f10f3b5e16be98/libphobos%2Flibdruntime%2Fcore%2Fsys%2Flinux%2Fdlfcn.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2Fcore%2Fsys%2Flinux%2Fdlfcn.d?ref=50deb97073424cb746e08408d3f10f3b5e16be98", "patch": "@@ -12,6 +12,7 @@ nothrow:\n \n version (ARM)     version = ARM_Any;\n version (AArch64) version = ARM_Any;\n+version (HPPA)    version = HPPA_Any;\n version (MIPS32)  version = MIPS_Any;\n version (MIPS64)  version = MIPS_Any;\n version (PPC)     version = PPC_Any;\n@@ -53,6 +54,30 @@ version (X86_Any)\n         void _dl_mcount_wrapper_check(void* __selfpc);\n     }\n }\n+else version (HPPA_Any)\n+{\n+    // http://sourceware.org/git/?p=glibc.git;a=blob;f=ports/sysdeps/hppa/bits/dlfcn.h\n+    // enum RTLD_LAZY = 0x0001; // POSIX\n+    // enum RTLD_NOW = 0x0002; // POSIX\n+    enum RTLD_BINDING_MASK = 0x3;\n+    enum RTLD_NOLOAD = 0x00004;\n+    enum RTLD_DEEPBIND = 0x00008;\n+\n+    // enum RTLD_GLOBAL = 0x0004; // POSIX\n+    // enum RTLD_LOCAL = 0; // POSIX\n+    enum RTLD_NODELETE = 0x01000;\n+\n+    static if (__USE_GNU)\n+    {\n+        RT DL_CALL_FCT(RT, Args...)(RT function(Args) fctp, auto ref Args args)\n+        {\n+            _dl_mcount_wrapper_check(cast(void*)fctp);\n+            return fctp(args);\n+        }\n+\n+        void _dl_mcount_wrapper_check(void* __selfpc);\n+    }\n+}\n else version (MIPS_Any)\n {\n     // http://sourceware.org/git/?p=glibc.git;a=blob;f=ports/sysdeps/mips/bits/dlfcn.h"}, {"sha": "5b4431a066c926e3e37b75d92c6cb995b8ada198", "filename": "libphobos/libdruntime/core/sys/linux/epoll.d", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/50deb97073424cb746e08408d3f10f3b5e16be98/libphobos%2Flibdruntime%2Fcore%2Fsys%2Flinux%2Fepoll.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/50deb97073424cb746e08408d3f10f3b5e16be98/libphobos%2Flibdruntime%2Fcore%2Fsys%2Flinux%2Fepoll.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2Fcore%2Fsys%2Flinux%2Fepoll.d?ref=50deb97073424cb746e08408d3f10f3b5e16be98", "patch": "@@ -17,6 +17,7 @@ nothrow:\n \n version (ARM)     version = ARM_Any;\n version (AArch64) version = ARM_Any;\n+version (HPPA)    version = HPPA_Any;\n version (MIPS32)  version = MIPS_Any;\n version (MIPS64)  version = MIPS_Any;\n version (PPC)     version = PPC_Any;\n@@ -86,6 +87,14 @@ else version (PPC_Any)\n         epoll_data_t data;\n     }\n }\n+else version (HPPA_Any)\n+{\n+    struct epoll_event\n+    {\n+        uint events;\n+        epoll_data_t data;\n+    }\n+}\n else version (MIPS_Any)\n {\n     struct epoll_event"}, {"sha": "b57b5e5d00f1f3a7fcc5fc48d95e191c62ac149b", "filename": "libphobos/libdruntime/core/sys/linux/link.d", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/50deb97073424cb746e08408d3f10f3b5e16be98/libphobos%2Flibdruntime%2Fcore%2Fsys%2Flinux%2Flink.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/50deb97073424cb746e08408d3f10f3b5e16be98/libphobos%2Flibdruntime%2Fcore%2Fsys%2Flinux%2Flink.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2Fcore%2Fsys%2Flinux%2Flink.d?ref=50deb97073424cb746e08408d3f10f3b5e16be98", "patch": "@@ -11,6 +11,7 @@ nothrow:\n \n version (ARM)     version = ARM_Any;\n version (AArch64) version = ARM_Any;\n+version (HPPA)    version = HPPA_Any;\n version (MIPS32)  version = MIPS_Any;\n version (MIPS64)  version = MIPS_Any;\n version (PPC)     version = PPC_Any;\n@@ -34,6 +35,12 @@ version (X86_Any)\n     alias __WORDSIZE __ELF_NATIVE_CLASS;\n     alias uint32_t Elf_Symndx;\n }\n+else version (HPPA_Any)\n+{\n+    // http://sourceware.org/git/?p=glibc.git;a=blob;f=bits/elfclass.h\n+    alias __WORDSIZE __ELF_NATIVE_CLASS;\n+    alias uint32_t Elf_Symndx;\n+}\n else version (MIPS_Any)\n {\n     // http://sourceware.org/git/?p=glibc.git;a=blob;f=bits/elfclass.h"}, {"sha": "7fdd693d815084dfac0f1a920841ba38580aedd1", "filename": "libphobos/libdruntime/core/sys/linux/sys/eventfd.d", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/50deb97073424cb746e08408d3f10f3b5e16be98/libphobos%2Flibdruntime%2Fcore%2Fsys%2Flinux%2Fsys%2Feventfd.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/50deb97073424cb746e08408d3f10f3b5e16be98/libphobos%2Flibdruntime%2Fcore%2Fsys%2Flinux%2Fsys%2Feventfd.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2Fcore%2Fsys%2Flinux%2Fsys%2Feventfd.d?ref=50deb97073424cb746e08408d3f10f3b5e16be98", "patch": "@@ -14,6 +14,7 @@ nothrow:\n \n version (ARM)     version = ARM_Any;\n version (AArch64) version = ARM_Any;\n+version (HPPA)    version = HPPA_Any;\n version (MIPS32)  version = MIPS_Any;\n version (MIPS64)  version = MIPS_Any;\n version (PPC)     version = PPC_Any;\n@@ -48,6 +49,12 @@ version (X86_Any)\n     enum EFD_CLOEXEC = 0x80000; // octal!2000000\n     enum EFD_NONBLOCK = 0x800; // octal!4000\n }\n+else version (HPPA_Any)\n+{\n+    enum EFD_SEMAPHORE = 1;\n+    enum EFD_CLOEXEC = 0x200000; // octal!10000000\n+    enum EFD_NONBLOCK = 0x10004; // octal!00200004\n+}\n else version (MIPS_Any)\n {\n     enum EFD_SEMAPHORE = 1;"}, {"sha": "67545a80cd6c2dc0b6b18526906b9c687fde805a", "filename": "libphobos/libdruntime/core/sys/linux/sys/inotify.d", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/50deb97073424cb746e08408d3f10f3b5e16be98/libphobos%2Flibdruntime%2Fcore%2Fsys%2Flinux%2Fsys%2Finotify.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/50deb97073424cb746e08408d3f10f3b5e16be98/libphobos%2Flibdruntime%2Fcore%2Fsys%2Flinux%2Fsys%2Finotify.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2Fcore%2Fsys%2Flinux%2Fsys%2Finotify.d?ref=50deb97073424cb746e08408d3f10f3b5e16be98", "patch": "@@ -13,6 +13,7 @@ nothrow:\n \n version (ARM)     version = ARM_Any;\n version (AArch64) version = ARM_Any;\n+version (HPPA)    version = HPPA_Any;\n version (MIPS32)  version = MIPS_Any;\n version (MIPS64)  version = MIPS_Any;\n version (PPC)     version = PPC_Any;\n@@ -73,6 +74,11 @@ version (X86_Any)\n     enum IN_CLOEXEC = 0x80000; // octal!2000000\n     enum IN_NONBLOCK = 0x800; // octal!4000\n }\n+else version (HPPA_Any)\n+{\n+    enum IN_CLOEXEC = 0x200000; // octal!10000000\n+    enum IN_NONBLOCK = 0x10004; // octal!200004\n+}\n else version (MIPS_Any)\n {\n     enum IN_CLOEXEC = 0x80000; // octal!2000000"}, {"sha": "f36669dd0b33daba18a056424c9350b14a35b90c", "filename": "libphobos/libdruntime/core/sys/posix/dlfcn.d", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/50deb97073424cb746e08408d3f10f3b5e16be98/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fposix%2Fdlfcn.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/50deb97073424cb746e08408d3f10f3b5e16be98/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fposix%2Fdlfcn.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fposix%2Fdlfcn.d?ref=50deb97073424cb746e08408d3f10f3b5e16be98", "patch": "@@ -27,6 +27,7 @@ else version (WatchOS)\n \n version (ARM)     version = ARM_Any;\n version (AArch64) version = ARM_Any;\n+version (HPPA)    version = HPPA_Any;\n version (MIPS32)  version = MIPS_Any;\n version (MIPS64)  version = MIPS_Any;\n version (PPC)     version = PPC_Any;\n@@ -69,6 +70,13 @@ version (CRuntime_Glibc)\n         enum RTLD_GLOBAL    = 0x00100;\n         enum RTLD_LOCAL     = 0x00000;\n     }\n+    else version (HPPA_Any)\n+    {\n+        enum RTLD_LAZY      = 0x0001;\n+        enum RTLD_NOW       = 0x0002;\n+        enum RTLD_GLOBAL    = 0x0100;\n+        enum RTLD_LOCAL     = 0;\n+    }\n     else version (MIPS_Any)\n     {\n         enum RTLD_LAZY      = 0x0001;"}, {"sha": "817790ab7eb9a0eb4d8edad669d54e7ad88dc05e", "filename": "libphobos/libdruntime/core/sys/posix/fcntl.d", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/50deb97073424cb746e08408d3f10f3b5e16be98/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fposix%2Ffcntl.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/50deb97073424cb746e08408d3f10f3b5e16be98/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fposix%2Ffcntl.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fposix%2Ffcntl.d?ref=50deb97073424cb746e08408d3f10f3b5e16be98", "patch": "@@ -30,6 +30,7 @@ else version (WatchOS)\n \n version (ARM)     version = ARM_Any;\n version (AArch64) version = ARM_Any;\n+version (HPPA)    version = HPPA_Any;\n version (MIPS32)  version = MIPS_Any;\n version (MIPS64)  version = MIPS_Any;\n version (PPC)     version = PPC_Any;\n@@ -154,6 +155,19 @@ version (CRuntime_Glibc)\n         enum O_DSYNC        = 0x1000;   // octal   010000\n         enum O_RSYNC        = O_SYNC;\n     }\n+    else version (HPPA_Any)\n+    {\n+        enum O_CREAT        = 0x00100;  // octal    04000\n+        enum O_EXCL         = 0x00400;  // octal     0200\n+        enum O_NOCTTY       = 0x20000;  // octal     0400\n+        enum O_TRUNC        = 0x00200;  // octal    01000\n+\n+        enum O_APPEND       = 0x00008;  // octal      010\n+        enum O_NONBLOCK     = 0x10004;  // octal  0200004\n+        enum O_SYNC         = 0x48000;  // octal 01100000\n+        enum O_DSYNC        = 0x40000;  // octal 01000000\n+        enum O_RSYNC        = 0x80000;  // octal 02000000\n+    }\n     else version (MIPS_Any)\n     {\n         enum O_CREAT        = 0x0100;"}, {"sha": "9028dbc65fc810f19a23dbbb093d1ce6f720c1c0", "filename": "libphobos/libdruntime/core/sys/posix/setjmp.d", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/50deb97073424cb746e08408d3f10f3b5e16be98/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fposix%2Fsetjmp.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/50deb97073424cb746e08408d3f10f3b5e16be98/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fposix%2Fsetjmp.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fposix%2Fsetjmp.d?ref=50deb97073424cb746e08408d3f10f3b5e16be98", "patch": "@@ -77,6 +77,20 @@ version (CRuntime_Glibc)\n     {\n         alias int[64] __jmp_buf;\n     }\n+    else version (HPPA)\n+    {\n+        struct __jmp_buf\n+        {\n+            int __r3;\n+            int[15] __r4_r18;\n+            int __r19;\n+            int __r27;\n+            int __sp;\n+            int __rp;\n+            int __pad1;\n+            double[10] __fr12_fr21;\n+        }\n+    }\n     else version (PPC)\n     {\n         alias int[64 + (12*4)] __jmp_buf;"}, {"sha": "68739dd78920a556fbb71e3310253efa31dc4709", "filename": "libphobos/libdruntime/core/sys/posix/signal.d", "status": "modified", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/50deb97073424cb746e08408d3f10f3b5e16be98/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fposix%2Fsignal.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/50deb97073424cb746e08408d3f10f3b5e16be98/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fposix%2Fsignal.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fposix%2Fsignal.d?ref=50deb97073424cb746e08408d3f10f3b5e16be98", "patch": "@@ -27,6 +27,7 @@ else version (WatchOS)\n \n version (ARM)     version = ARM_Any;\n version (AArch64) version = ARM_Any;\n+version (HPPA)    version = HPPA_Any;\n version (MIPS32)  version = MIPS_Any;\n version (MIPS64)  version = MIPS_Any;\n version (PPC)     version = PPC_Any;\n@@ -258,6 +259,30 @@ version (linux)\n         enum SIGUSR2    = 12;\n         enum SIGURG     = 23;\n     }\n+    else version (HPPA_Any)\n+    {\n+        //SIGABRT (defined in core.stdc.signal)\n+        enum SIGALRM    = 14;\n+        enum SIGBUS     = 10;\n+        enum SIGCHLD    = 18;\n+        enum SIGCONT    = 26;\n+        //SIGFPE (defined in core.stdc.signal)\n+        enum SIGHUP     = 1;\n+        //SIGILL (defined in core.stdc.signal)\n+        //SIGINT (defined in core.stdc.signal)\n+        enum SIGKILL    = 9;\n+        enum SIGPIPE    = 13;\n+        enum SIGQUIT    = 3;\n+        //SIGSEGV (defined in core.stdc.signal)\n+        enum SIGSTOP    = 24;\n+        //SIGTERM (defined in core.stdc.signal)\n+        enum SIGTSTP    = 25;\n+        enum SIGTTIN    = 27;\n+        enum SIGTTOU    = 28;\n+        enum SIGUSR1    = 16;\n+        enum SIGUSR2    = 17;\n+        enum SIGURG     = 29;\n+    }\n     else version (MIPS_Any)\n     {\n         //SIGABRT (defined in core.stdc.signal)\n@@ -2015,6 +2040,16 @@ version (CRuntime_Glibc)\n         enum SIGXCPU        = 24;\n         enum SIGXFSZ        = 25;\n     }\n+    else version (HPPA_Any)\n+    {\n+        enum SIGPOLL    = 22;\n+        enum SIGPROF    = 21;\n+        enum SIGSYS     = 31;\n+        enum SIGTRAP    = 5;\n+        enum SIGVTALRM  = 20;\n+        enum SIGXCPU    = 12;\n+        enum SIGXFSZ    = 30;\n+    }\n     else version (MIPS_Any)\n     {\n         enum SIGPOLL    = 22;"}, {"sha": "6a3f708ed815635bbb060fba0bdd7517f48d5253", "filename": "libphobos/libdruntime/core/sys/posix/sys/socket.d", "status": "modified", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/50deb97073424cb746e08408d3f10f3b5e16be98/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fposix%2Fsys%2Fsocket.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/50deb97073424cb746e08408d3f10f3b5e16be98/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fposix%2Fsys%2Fsocket.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fposix%2Fsys%2Fsocket.d?ref=50deb97073424cb746e08408d3f10f3b5e16be98", "patch": "@@ -29,6 +29,7 @@ else version (WatchOS)\n \n version (ARM)     version = ARM_Any;\n version (AArch64) version = ARM_Any;\n+version (HPPA)    version = HPPA_Any;\n version (MIPS32)  version = MIPS_Any;\n version (MIPS64)  version = MIPS_Any;\n version (PPC)     version = PPC_Any;\n@@ -290,6 +291,40 @@ version (CRuntime_Glibc)\n             SO_TYPE         = 3\n         }\n     }\n+    else version (HPPA_Any)\n+    {\n+        enum\n+        {\n+            SOCK_DGRAM      = 2,\n+            SOCK_SEQPACKET  = 5,\n+            SOCK_STREAM     = 1,\n+        }\n+\n+        enum\n+        {\n+            SOL_SOCKET      = 0xffff\n+        }\n+\n+        enum\n+        {\n+            SO_ACCEPTCONN   = 0x401c,\n+            SO_BROADCAST    = 0x0020,\n+            SO_DEBUG        = 0x0001,\n+            SO_DONTROUTE    = 0x0010,\n+            SO_ERROR        = 0x1007,\n+            SO_KEEPALIVE    = 0x0008,\n+            SO_LINGER       = 0x0080,\n+            SO_OOBINLINE    = 0x0100,\n+            SO_RCVBUF       = 0x1002,\n+            SO_RCVLOWAT     = 0x1004,\n+            SO_RCVTIMEO     = 0x1006,\n+            SO_REUSEADDR    = 0x0004,\n+            SO_SNDBUF       = 0x1001,\n+            SO_SNDLOWAT     = 0x1003,\n+            SO_SNDTIMEO     = 0x1005,\n+            SO_TYPE         = 0x1008,\n+        }\n+    }\n     else version (MIPS_Any)\n     {\n         enum"}, {"sha": "8c78ba677a419b2c92b1ff07af598caadec42958", "filename": "libphobos/libdruntime/core/sys/posix/sys/stat.d", "status": "modified", "additions": 95, "deletions": 0, "changes": 95, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/50deb97073424cb746e08408d3f10f3b5e16be98/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fposix%2Fsys%2Fstat.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/50deb97073424cb746e08408d3f10f3b5e16be98/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fposix%2Fsys%2Fstat.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fposix%2Fsys%2Fstat.d?ref=50deb97073424cb746e08408d3f10f3b5e16be98", "patch": "@@ -186,6 +186,101 @@ version (CRuntime_Glibc)\n             slong_t[3]     __unused;\n         }\n     }\n+    else version (HPPA)\n+    {\n+        private\n+        {\n+            alias __dev_t = ulong;\n+            alias __ino_t = c_ulong;\n+            alias __ino64_t = ulong;\n+            alias __mode_t = uint;\n+            alias __nlink_t = size_t;\n+            alias __uid_t = uint;\n+            alias __gid_t = uint;\n+            alias __off_t = c_long;\n+            alias __off64_t = long;\n+            alias __blksize_t = c_long;\n+            alias __blkcnt_t = c_long;\n+            alias __blkcnt64_t = long;\n+            alias __timespec = timespec;\n+            alias __time_t = time_t;\n+        }\n+        struct stat_t\n+        {\n+            __dev_t st_dev;\n+            ushort __pad1;\n+\n+            static if (!__USE_FILE_OFFSET64)\n+            {\n+                __ino_t st_ino;\n+            }\n+            else\n+            {\n+                __ino_t __st_ino;\n+            }\n+            __mode_t st_mode;\n+            __nlink_t st_nlink;\n+            __uid_t st_uid;\n+            __gid_t st_gid;\n+            __dev_t st_rdev;\n+            ushort __pad2;\n+\n+            static if (!__USE_FILE_OFFSET64)\n+            {\n+                __off_t st_size;\n+            }\n+            else\n+            {\n+                __off64_t st_size;\n+            }\n+            __blksize_t st_blksize;\n+\n+            static if (!__USE_FILE_OFFSET64)\n+            {\n+                __blkcnt_t st_blocks;\n+            }\n+            else\n+            {\n+                __blkcnt64_t st_blocks;\n+            }\n+\n+            static if ( __USE_MISC || __USE_XOPEN2K8)\n+            {\n+                __timespec st_atim;\n+                __timespec st_mtim;\n+                __timespec st_ctim;\n+                extern(D)\n+                {\n+                    @property ref time_t st_atime() { return st_atim.tv_sec; }\n+                    @property ref time_t st_mtime() { return st_mtim.tv_sec; }\n+                    @property ref time_t st_ctime() { return st_ctim.tv_sec; }\n+                }\n+            }\n+            else\n+            {\n+                __time_t st_atime;\n+                c_ulong st_atimensec;\n+                __time_t st_mtime;\n+                c_ulong st_mtimensec;\n+                __time_t st_ctime;\n+                c_ulong st_ctimensec;\n+            }\n+\n+            static if (!__USE_FILE_OFFSET64)\n+            {\n+                c_ulong __unused4;\n+                c_ulong __unused5;\n+            }\n+            else\n+            {\n+                __ino64_t st_ino;\n+            }\n+        }\n+        static if (__USE_FILE_OFFSET64)\n+            static assert(stat_t.sizeof == 104);\n+        else\n+            static assert(stat_t.sizeof == 88);\n+    }\n     else version (MIPS_O32)\n     {\n         struct stat_t"}, {"sha": "53c78735bb71fd8b149004d8f79dcd56950be246", "filename": "libphobos/libdruntime/core/sys/posix/sys/types.d", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/50deb97073424cb746e08408d3f10f3b5e16be98/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fposix%2Fsys%2Ftypes.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/50deb97073424cb746e08408d3f10f3b5e16be98/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fposix%2Fsys%2Ftypes.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fposix%2Fsys%2Ftypes.d?ref=50deb97073424cb746e08408d3f10f3b5e16be98", "patch": "@@ -545,6 +545,18 @@ version (CRuntime_Glibc)\n         enum __SIZEOF_PTHREAD_BARRIER_T = 20;\n         enum __SIZEOF_PTHREAD_BARRIERATTR_T = 4;\n     }\n+    else version (HPPA)\n+    {\n+        enum __SIZEOF_PTHREAD_ATTR_T = 36;\n+        enum __SIZEOF_PTHREAD_MUTEX_T = 48;\n+        enum __SIZEOF_PTHREAD_MUTEXATTR_T = 4;\n+        enum __SIZEOF_PTHREAD_COND_T = 48;\n+        enum __SIZEOF_PTHREAD_CONDATTR_T = 4;\n+        enum __SIZEOF_PTHREAD_RWLOCK_T = 64;\n+        enum __SIZEOF_PTHREAD_RWLOCKATTR_T = 8;\n+        enum __SIZEOF_PTHREAD_BARRIER_T = 48;\n+        enum __SIZEOF_PTHREAD_BARRIERATTR_T = 4;\n+    }\n     else version (IA64)\n     {\n         enum __SIZEOF_PTHREAD_ATTR_T = 56;"}, {"sha": "0a341e50adacf0ad48cd0834d1e68b0701ceaaee", "filename": "libphobos/libdruntime/core/sys/posix/ucontext.d", "status": "modified", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/50deb97073424cb746e08408d3f10f3b5e16be98/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fposix%2Fucontext.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/50deb97073424cb746e08408d3f10f3b5e16be98/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fposix%2Fucontext.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fposix%2Fucontext.d?ref=50deb97073424cb746e08408d3f10f3b5e16be98", "patch": "@@ -197,6 +197,48 @@ version (CRuntime_Glibc)\n             _libc_fpstate   __fpregs_mem;\n         }\n     }\n+    else version (HPPA)\n+    {\n+        private\n+        {\n+            enum NGREG  = 80;\n+            enum NFPREG = 32;\n+\n+            alias c_ulong greg_t;\n+\n+            struct gregset_t\n+            {\n+                greg_t[32] g_regs;\n+                greg_t[8] sr_regs;\n+                greg_t[24] cr_regs;\n+                greg_t[16] g_pad;\n+            }\n+\n+            struct fpregset_t\n+            {\n+                double[32] fpregs;\n+            }\n+        }\n+\n+        struct mcontext_t\n+        {\n+            greg_t sc_flags;\n+            greg_t[32] sc_gr;\n+            fpregset_t sc_fr;\n+            greg_t[2] sc_iasq;\n+            greg_t[2] sc_iaoq;\n+            greg_t sc_sar;\n+        }\n+\n+        struct ucontext_t\n+        {\n+            c_ulong uc_flags;\n+            ucontext_t* uc_link;\n+            stack_t uc_stack;\n+            mcontext_t uc_mcontext;\n+            sigset_t uc_sigmask;\n+        }\n+    }\n     else version (MIPS32)\n     {\n         private"}, {"sha": "3d4d75d025ca6ab06161a9e2467e7de3b5e4e978", "filename": "libphobos/libdruntime/rt/sections_elf_shared.d", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/50deb97073424cb746e08408d3f10f3b5e16be98/libphobos%2Flibdruntime%2Frt%2Fsections_elf_shared.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/50deb97073424cb746e08408d3f10f3b5e16be98/libphobos%2Flibdruntime%2Frt%2Fsections_elf_shared.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2Frt%2Fsections_elf_shared.d?ref=50deb97073424cb746e08408d3f10f3b5e16be98", "patch": "@@ -979,6 +979,8 @@ else version (RISCV32)\n     enum TLS_DTV_OFFSET = 0x800;\n else version (RISCV64)\n     enum TLS_DTV_OFFSET = 0x800;\n+else version (HPPA)\n+    enum TLS_DTV_OFFSET = 0x0;\n else version (SPARC)\n     enum TLS_DTV_OFFSET = 0x0;\n else version (SPARC64)"}]}