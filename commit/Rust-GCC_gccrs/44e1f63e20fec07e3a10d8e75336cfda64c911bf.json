{"sha": "44e1f63e20fec07e3a10d8e75336cfda64c911bf", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDRlMWY2M2UyMGZlYzA3ZTNhMTBkOGU3NTMzNmNmZGE2NGM5MTFiZg==", "commit": {"author": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2020-11-05T23:23:56Z"}, "committer": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2020-11-05T23:24:19Z"}, "message": "c++: Add auto_diagnostic_group to check_handlers_1.\n\nThis was missing.\n\ngcc/cp/ChangeLog:\n\n\t* except.c (check_handlers_1): Add auto_diagnostic_group.", "tree": {"sha": "8d3902db5b5767e3a617443f7f670b9d60427c4b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8d3902db5b5767e3a617443f7f670b9d60427c4b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/44e1f63e20fec07e3a10d8e75336cfda64c911bf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/44e1f63e20fec07e3a10d8e75336cfda64c911bf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/44e1f63e20fec07e3a10d8e75336cfda64c911bf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/44e1f63e20fec07e3a10d8e75336cfda64c911bf/comments", "author": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e6fd02cc6d874c523466250a1cb724e0c7af9d75", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e6fd02cc6d874c523466250a1cb724e0c7af9d75", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e6fd02cc6d874c523466250a1cb724e0c7af9d75"}], "stats": {"total": 1, "additions": 1, "deletions": 0}, "files": [{"sha": "b72a28c1aa943013ee45ed77de36a8dbffbb1a91", "filename": "gcc/cp/except.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/44e1f63e20fec07e3a10d8e75336cfda64c911bf/gcc%2Fcp%2Fexcept.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/44e1f63e20fec07e3a10d8e75336cfda64c911bf/gcc%2Fcp%2Fexcept.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fexcept.c?ref=44e1f63e20fec07e3a10d8e75336cfda64c911bf", "patch": "@@ -975,6 +975,7 @@ check_handlers_1 (tree master, tree_stmt_iterator i)\n       tree handler = tsi_stmt (i);\n       if (TREE_TYPE (handler) && can_convert_eh (type, TREE_TYPE (handler)))\n \t{\n+\t  auto_diagnostic_group d;\n \t  if (warning_at (EXPR_LOCATION (handler), OPT_Wexceptions,\n \t\t\t  \"exception of type %qT will be caught by earlier \"\n \t\t\t  \"handler\", TREE_TYPE (handler)))"}]}