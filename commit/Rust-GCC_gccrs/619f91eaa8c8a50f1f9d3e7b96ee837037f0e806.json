{"sha": "619f91eaa8c8a50f1f9d3e7b96ee837037f0e806", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjE5ZjkxZWFhOGM4YTUwZjFmOWQzZTdiOTZlZTgzNzAzN2YwZTgwNg==", "commit": {"author": {"name": "Martin Jambor", "email": "mjambor@suse.cz", "date": "2020-10-19T17:21:10Z"}, "committer": {"name": "Martin Jambor", "email": "mjambor@suse.cz", "date": "2020-10-19T17:21:10Z"}, "message": "cplxlower: Avoid a transform when looking at a default definition\n\nIn PR 97456, IPA-SRA triggers a bug in tree-complex.c where it\nconverts:\n\n <bb 2>\n   a$_M_value_21 = COMPLEX_EXPR <ISRA.18_10(D), ISRA.18_10(D)>;\n\n(where ISRA.18 is IPA-SRA created PARM_DECL with DECL_IGNORED_P set,\nwhich is why it only happens with IPA-SRA) into:\n\n  <bb 2>\n    a$_M_value_21 = COMPLEX_EXPR <a$_M_value$real_10(D), a$_M_value$real_10(D)>;\n\ni.e. it replaces two uses of the parameter default-def with two\nuninitialized default-defs of a new variable - all in hope to produce\ncode with better debug info.\n\nThis patch fixes it by avoiding the transform when the SSA_NAME to be\nreplaced is a default definition.\n\ngcc/ChangeLog:\n\n2020-10-19  Martin Jambor  <mjambor@suse.cz>\n\n\tPR tree-optimization/97456\n\t* tree-complex.c (set_component_ssa_name): Do not replace ignored decl\n\tdefault definitions with new component vars.  Reorder if conditions.\n\ngcc/testsuite/ChangeLog:\n\n2020-10-19  Martin Jambor  <mjambor@suse.cz>\n\n\tPR tree-optimization/97456\n\t* gcc.dg/tree-ssa/pr97456.c: New test.", "tree": {"sha": "8c28e2be81ab94d7fd0b751250a9c43d4559fc64", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8c28e2be81ab94d7fd0b751250a9c43d4559fc64"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/619f91eaa8c8a50f1f9d3e7b96ee837037f0e806", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/619f91eaa8c8a50f1f9d3e7b96ee837037f0e806", "html_url": "https://github.com/Rust-GCC/gccrs/commit/619f91eaa8c8a50f1f9d3e7b96ee837037f0e806", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/619f91eaa8c8a50f1f9d3e7b96ee837037f0e806/comments", "author": {"login": "jamborm", "id": 2180070, "node_id": "MDQ6VXNlcjIxODAwNzA=", "avatar_url": "https://avatars.githubusercontent.com/u/2180070?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jamborm", "html_url": "https://github.com/jamborm", "followers_url": "https://api.github.com/users/jamborm/followers", "following_url": "https://api.github.com/users/jamborm/following{/other_user}", "gists_url": "https://api.github.com/users/jamborm/gists{/gist_id}", "starred_url": "https://api.github.com/users/jamborm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jamborm/subscriptions", "organizations_url": "https://api.github.com/users/jamborm/orgs", "repos_url": "https://api.github.com/users/jamborm/repos", "events_url": "https://api.github.com/users/jamborm/events{/privacy}", "received_events_url": "https://api.github.com/users/jamborm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jamborm", "id": 2180070, "node_id": "MDQ6VXNlcjIxODAwNzA=", "avatar_url": "https://avatars.githubusercontent.com/u/2180070?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jamborm", "html_url": "https://github.com/jamborm", "followers_url": "https://api.github.com/users/jamborm/followers", "following_url": "https://api.github.com/users/jamborm/following{/other_user}", "gists_url": "https://api.github.com/users/jamborm/gists{/gist_id}", "starred_url": "https://api.github.com/users/jamborm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jamborm/subscriptions", "organizations_url": "https://api.github.com/users/jamborm/orgs", "repos_url": "https://api.github.com/users/jamborm/repos", "events_url": "https://api.github.com/users/jamborm/events{/privacy}", "received_events_url": "https://api.github.com/users/jamborm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fc77484c4a4feb308c64371233cb65b280333953", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fc77484c4a4feb308c64371233cb65b280333953", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fc77484c4a4feb308c64371233cb65b280333953"}], "stats": {"total": 43, "additions": 42, "deletions": 1}, "files": [{"sha": "5171c9b4577ff5ece012c3b464ab1ea9d2010555", "filename": "gcc/testsuite/gcc.dg/tree-ssa/pr97456.c", "status": "added", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/619f91eaa8c8a50f1f9d3e7b96ee837037f0e806/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr97456.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/619f91eaa8c8a50f1f9d3e7b96ee837037f0e806/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr97456.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr97456.c?ref=619f91eaa8c8a50f1f9d3e7b96ee837037f0e806", "patch": "@@ -0,0 +1,40 @@\n+/* { dg-do run } */\n+/* { dg-options \"-O2 -fwhole-program\" } */\n+\n+\n+float val2 = 1.710780f;\n+float val3;\n+volatile float vf;\n+\n+int __attribute__((noipa))\n+get_bool (void)\n+{\n+  return 1;\n+}\n+\n+int __attribute__((noinline))\n+wrong (float *pos)\n+{\n+  _Complex float a;\n+\n+  __real__ a = *pos;\n+  __imag__ a = *pos;\n+\n+  _Complex float b = 0 + 0i;\n+\n+  b = b + a;\n+\n+  if (b == 0.0f)\n+    return 1;\n+\n+  vf = __imag__ b;\n+  return 0;\n+}\n+\n+int main(int argc, char **argv) {\n+  float val = get_bool () == 1 ? val2 : val3;\n+\n+  if ((wrong(&val), wrong(&val)))\n+    __builtin_abort ();\n+  return 0;\n+}"}, {"sha": "f132e0f41c76d19d4c02f811bb048e831d6ee90a", "filename": "gcc/tree-complex.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/619f91eaa8c8a50f1f9d3e7b96ee837037f0e806/gcc%2Ftree-complex.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/619f91eaa8c8a50f1f9d3e7b96ee837037f0e806/gcc%2Ftree-complex.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-complex.c?ref=619f91eaa8c8a50f1f9d3e7b96ee837037f0e806", "patch": "@@ -569,7 +569,8 @@ set_component_ssa_name (tree ssa_name, bool imag_p, tree value)\n     {\n       /* Replace an anonymous base value with the variable from cvc_lookup.\n \t This should result in better debug info.  */\n-      if (SSA_NAME_VAR (ssa_name)\n+      if (!SSA_NAME_IS_DEFAULT_DEF (value)\n+\t  && SSA_NAME_VAR (ssa_name)\n \t  && (!SSA_NAME_VAR (value) || DECL_IGNORED_P (SSA_NAME_VAR (value)))\n \t  && !DECL_IGNORED_P (SSA_NAME_VAR (ssa_name)))\n \t{"}]}