{"sha": "1191c46b4b2c9741e72704fcba5a2b5737155682", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTE5MWM0NmI0YjJjOTc0MWU3MjcwNGZjYmE1YTJiNTczNzE1NTY4Mg==", "commit": {"author": {"name": "Rainer Orth", "email": "ro@CeBiTec.Uni-Bielefeld.DE", "date": "2013-01-08T09:47:55Z"}, "committer": {"name": "Rainer Orth", "email": "ro@gcc.gnu.org", "date": "2013-01-08T09:47:55Z"}, "message": "Restrict -Wa,-nH use to Solaris (PR libstdc++/55594)\n\n\tPR libstdc++/55594\n\t* acinclude.m4 (GLIBCXX_CHECK_ASSEMBLER_HWCAP): Restrict test to\n\tSolaris targets.\n\t* configure: Regenerate.\n\nFrom-SVN: r195009", "tree": {"sha": "24d16339668b1974a11868625c718e98ba882b27", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/24d16339668b1974a11868625c718e98ba882b27"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1191c46b4b2c9741e72704fcba5a2b5737155682", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1191c46b4b2c9741e72704fcba5a2b5737155682", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1191c46b4b2c9741e72704fcba5a2b5737155682", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1191c46b4b2c9741e72704fcba5a2b5737155682/comments", "author": {"login": "rorth", "id": 3930951, "node_id": "MDQ6VXNlcjM5MzA5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/3930951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rorth", "html_url": "https://github.com/rorth", "followers_url": "https://api.github.com/users/rorth/followers", "following_url": "https://api.github.com/users/rorth/following{/other_user}", "gists_url": "https://api.github.com/users/rorth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rorth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rorth/subscriptions", "organizations_url": "https://api.github.com/users/rorth/orgs", "repos_url": "https://api.github.com/users/rorth/repos", "events_url": "https://api.github.com/users/rorth/events{/privacy}", "received_events_url": "https://api.github.com/users/rorth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "3138f2246b22bc25d3204a7b942abadc2a15ad9e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3138f2246b22bc25d3204a7b942abadc2a15ad9e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3138f2246b22bc25d3204a7b942abadc2a15ad9e"}], "stats": {"total": 55, "additions": 37, "deletions": 18}, "files": [{"sha": "9d0a6d7574ab180732f17c55b30eaa65ed0cee7c", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1191c46b4b2c9741e72704fcba5a2b5737155682/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1191c46b4b2c9741e72704fcba5a2b5737155682/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=1191c46b4b2c9741e72704fcba5a2b5737155682", "patch": "@@ -1,3 +1,10 @@\n+2013-01-08  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n+\n+\tPR libstdc++/55594\n+\t* acinclude.m4 (GLIBCXX_CHECK_ASSEMBLER_HWCAP): Restrict test to\n+\tSolaris targets.\n+\t* configure: Regenerate.\n+\n 2013-01-07  Jonathan Wakely  <jwakely.gcc@gmail.com>\n \n \tPR libstdc++/55847"}, {"sha": "528ce8320e69abcd4e5f60b3d97b949589645f18", "filename": "libstdc++-v3/acinclude.m4", "status": "modified", "additions": 15, "deletions": 9, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1191c46b4b2c9741e72704fcba5a2b5737155682/libstdc%2B%2B-v3%2Facinclude.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1191c46b4b2c9741e72704fcba5a2b5737155682/libstdc%2B%2B-v3%2Facinclude.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Facinclude.m4?ref=1191c46b4b2c9741e72704fcba5a2b5737155682", "patch": "@@ -178,17 +178,23 @@ dnl\n AC_DEFUN([GLIBCXX_CHECK_ASSEMBLER_HWCAP], [\n   test -z \"$HWCAP_FLAGS\" && HWCAP_FLAGS=''\n \n-  ac_save_CFLAGS=\"$CFLAGS\"\n-  CFLAGS=\"$CFLAGS -Wa,-nH\"\n+  # Restrict the test to Solaris, other assemblers (e.g. AIX as) have -nH\n+  # with a different meaning.\n+  case ${target_os} in\n+    solaris2*)\n+      ac_save_CFLAGS=\"$CFLAGS\"\n+      CFLAGS=\"$CFLAGS -Wa,-nH\"\n \n-  AC_MSG_CHECKING([for as that supports -Wa,-nH])\n-  AC_TRY_COMPILE([], [return 0;], [ac_hwcap_flags=yes],[ac_hwcap_flags=no])\n-  if test \"$ac_hwcap_flags\" = \"yes\"; then\n-    HWCAP_FLAGS=\"-Wa,-nH $HWCAP_FLAGS\"\n-  fi\n-  AC_MSG_RESULT($ac_hwcap_flags)\n+      AC_MSG_CHECKING([for as that supports -Wa,-nH])\n+      AC_TRY_COMPILE([], [return 0;], [ac_hwcap_flags=yes],[ac_hwcap_flags=no])\n+      if test \"$ac_hwcap_flags\" = \"yes\"; then\n+\tHWCAP_FLAGS=\"-Wa,-nH $HWCAP_FLAGS\"\n+      fi\n+      AC_MSG_RESULT($ac_hwcap_flags)\n \n-  CFLAGS=\"$ac_save_CFLAGS\"\n+      CFLAGS=\"$ac_save_CFLAGS\"\n+      ;;\n+  esac\n \n   AC_SUBST(HWCAP_FLAGS)\n ])"}, {"sha": "a4cf5c9f8cf5703e7479c99bda0495347fabf78a", "filename": "libstdc++-v3/configure", "status": "modified", "additions": 15, "deletions": 9, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1191c46b4b2c9741e72704fcba5a2b5737155682/libstdc%2B%2B-v3%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1191c46b4b2c9741e72704fcba5a2b5737155682/libstdc%2B%2B-v3%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfigure?ref=1191c46b4b2c9741e72704fcba5a2b5737155682", "patch": "@@ -70790,12 +70790,16 @@ esac\n \n   test -z \"$HWCAP_FLAGS\" && HWCAP_FLAGS=''\n \n-  ac_save_CFLAGS=\"$CFLAGS\"\n-  CFLAGS=\"$CFLAGS -Wa,-nH\"\n+  # Restrict the test to Solaris, other assemblers (e.g. AIX as) have -nH\n+  # with a different meaning.\n+  case ${target_os} in\n+    solaris2*)\n+      ac_save_CFLAGS=\"$CFLAGS\"\n+      CFLAGS=\"$CFLAGS -Wa,-nH\"\n \n-  { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for as that supports -Wa,-nH\" >&5\n+      { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for as that supports -Wa,-nH\" >&5\n $as_echo_n \"checking for as that supports -Wa,-nH... \" >&6; }\n-  cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+      cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n /* end confdefs.h.  */\n \n int\n@@ -70812,13 +70816,15 @@ else\n   ac_hwcap_flags=no\n fi\n rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n-  if test \"$ac_hwcap_flags\" = \"yes\"; then\n-    HWCAP_FLAGS=\"-Wa,-nH $HWCAP_FLAGS\"\n-  fi\n-  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_hwcap_flags\" >&5\n+      if test \"$ac_hwcap_flags\" = \"yes\"; then\n+\tHWCAP_FLAGS=\"-Wa,-nH $HWCAP_FLAGS\"\n+      fi\n+      { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_hwcap_flags\" >&5\n $as_echo \"$ac_hwcap_flags\" >&6; }\n \n-  CFLAGS=\"$ac_save_CFLAGS\"\n+      CFLAGS=\"$ac_save_CFLAGS\"\n+      ;;\n+  esac\n \n \n "}]}