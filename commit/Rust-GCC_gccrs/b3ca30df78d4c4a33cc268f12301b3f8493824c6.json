{"sha": "b3ca30df78d4c4a33cc268f12301b3f8493824c6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjNjYTMwZGY3OGQ0YzRhMzNjYzI2OGYxMjMwMWIzZjg0OTM4MjRjNg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2002-01-08T20:10:39Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2002-01-08T20:10:39Z"}, "message": "expr.c (store_expr): Convert VOIDmode constants back to target's mode.\n\n\t* expr.c (store_expr): Convert VOIDmode constants back to target's\n\tmode.\n\n\t* gcc.dg/20020108-1.c: New test.\n\nFrom-SVN: r48658", "tree": {"sha": "bf54c07842103da5e917c623c1710747425f3ef1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bf54c07842103da5e917c623c1710747425f3ef1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b3ca30df78d4c4a33cc268f12301b3f8493824c6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b3ca30df78d4c4a33cc268f12301b3f8493824c6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b3ca30df78d4c4a33cc268f12301b3f8493824c6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b3ca30df78d4c4a33cc268f12301b3f8493824c6/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "66839ef65ef900d409a19b269f60731224f55275", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/66839ef65ef900d409a19b269f60731224f55275", "html_url": "https://github.com/Rust-GCC/gccrs/commit/66839ef65ef900d409a19b269f60731224f55275"}], "stats": {"total": 43, "additions": 37, "deletions": 6}, "files": [{"sha": "1b95cfe60c3fc268d3573b15586e94817817d07b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3ca30df78d4c4a33cc268f12301b3f8493824c6/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3ca30df78d4c4a33cc268f12301b3f8493824c6/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b3ca30df78d4c4a33cc268f12301b3f8493824c6", "patch": "@@ -1,3 +1,8 @@\n+2002-01-08  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* expr.c (store_expr): Convert VOIDmode constants back to target's\n+\tmode.\n+\n 2002-01-08  Gerald Pfeifer  <pfeifer@dbai.tuwien.ac.at>\n \n \t* doc/invoke.texi: Markup gcc as @command.  Refer to"}, {"sha": "d11df993c51bdf8d3907476cbc60f880620ccf15", "filename": "gcc/expr.c", "status": "modified", "additions": 12, "deletions": 6, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3ca30df78d4c4a33cc268f12301b3f8493824c6/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3ca30df78d4c4a33cc268f12301b3f8493824c6/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=b3ca30df78d4c4a33cc268f12301b3f8493824c6", "patch": "@@ -4041,13 +4041,19 @@ store_expr (exp, target, want_value)\n \t target.  Otherwise, the caller might get confused by a result whose\n \t mode is larger than expected.  */\n \n-      if (want_value && GET_MODE (temp) != GET_MODE (target)\n-\t  && GET_MODE (temp) != VOIDmode)\n+      if (want_value && GET_MODE (temp) != GET_MODE (target))\n \t{\n-\t  temp = gen_lowpart_SUBREG (GET_MODE (target), temp);\n-\t  SUBREG_PROMOTED_VAR_P (temp) = 1;\n-\t  SUBREG_PROMOTED_UNSIGNED_P (temp)\n-\t    = SUBREG_PROMOTED_UNSIGNED_P (target);\n+\t  if (GET_MODE (temp) != VOIDmode)\n+\t    {\n+\t      temp = gen_lowpart_SUBREG (GET_MODE (target), temp);\n+\t      SUBREG_PROMOTED_VAR_P (temp) = 1;\n+\t      SUBREG_PROMOTED_UNSIGNED_P (temp)\n+\t\t= SUBREG_PROMOTED_UNSIGNED_P (target);\n+\t    }\n+\t  else\n+\t    temp = convert_modes (GET_MODE (target),\n+\t\t\t\t  GET_MODE (SUBREG_REG (target)),\n+\t\t\t\t  temp, SUBREG_PROMOTED_UNSIGNED_P (target));\n \t}\n \n       return want_value ? temp : NULL_RTX;"}, {"sha": "d4f4a3ee075e60f8de4e6ae95259ad328e7e63f0", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3ca30df78d4c4a33cc268f12301b3f8493824c6/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3ca30df78d4c4a33cc268f12301b3f8493824c6/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=b3ca30df78d4c4a33cc268f12301b3f8493824c6", "patch": "@@ -1,3 +1,7 @@\n+2002-01-08  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* gcc.dg/20020108-1.c: New test.\n+\n 2002-01-08  H.J. Lu <hjl@gnu.org>\n \n \t* objc.dg/special/special.exp: Add -I${srcdir}/../../libobjc"}, {"sha": "b91022dc583150847e8402765015ea928ef78acb", "filename": "gcc/testsuite/gcc.dg/20020108-1.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3ca30df78d4c4a33cc268f12301b3f8493824c6/gcc%2Ftestsuite%2Fgcc.dg%2F20020108-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3ca30df78d4c4a33cc268f12301b3f8493824c6/gcc%2Ftestsuite%2Fgcc.dg%2F20020108-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2F20020108-1.c?ref=b3ca30df78d4c4a33cc268f12301b3f8493824c6", "patch": "@@ -0,0 +1,16 @@\n+/* This testcase failed on i686 because (const_int -1) was changed into\n+   (const_int 0xffff) when storing it into SImode pseudo, but was not\n+   converted back to (const_int -1) when returning from store_expr,\n+   eventhough target was (subreg:HI (reg/v:SI indx)).  But (const_int 0xffff)\n+   is not valid general_operand in HImode.  */\n+/* { dg-do compile } */\n+/* { dg-options \"-O2\" } */\n+/* { dg-options \"-O2 -mcpu=i686\" { target i?86-*-* } } */\n+\n+void\n+foo (unsigned short *cp)\n+{\n+  unsigned short indx;\n+\n+  *cp = indx = 0xFFFF;\n+}"}]}