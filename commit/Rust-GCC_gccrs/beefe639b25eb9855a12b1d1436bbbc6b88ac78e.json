{"sha": "beefe639b25eb9855a12b1d1436bbbc6b88ac78e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmVlZmU2MzliMjVlYjk4NTVhMTJiMWQxNDM2YmJiYzZiODhhYzc4ZQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2019-12-06T23:43:45Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2019-12-06T23:43:45Z"}, "message": "re PR c++/92831 (CWG1299 extend_ref_init_temps_1 punts on COND_EXPRs)\n\n\tPR c++/92831\n\t* call.c (build_conditional_expr_1): For ?: with omitted middle\n\toperand use cp_stabilize_reference if arg1 is glvalue_p rather than\n\tjust if it is lvalue_p.\n\n\t* g++.dg/ext/temp-extend1.C: New test.\n\nFrom-SVN: r279069", "tree": {"sha": "b5b39b907c3380d8566db4059d20e12d8d43ca0d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b5b39b907c3380d8566db4059d20e12d8d43ca0d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/beefe639b25eb9855a12b1d1436bbbc6b88ac78e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/beefe639b25eb9855a12b1d1436bbbc6b88ac78e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/beefe639b25eb9855a12b1d1436bbbc6b88ac78e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/beefe639b25eb9855a12b1d1436bbbc6b88ac78e/comments", "author": null, "committer": null, "parents": [{"sha": "1cd4fe3d4302f0db3dd38c720c69f0c51137ff13", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1cd4fe3d4302f0db3dd38c720c69f0c51137ff13", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1cd4fe3d4302f0db3dd38c720c69f0c51137ff13"}], "stats": {"total": 58, "additions": 57, "deletions": 1}, "files": [{"sha": "5cb63da5a882181e6f1671b0f187325c9f9297e9", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/beefe639b25eb9855a12b1d1436bbbc6b88ac78e/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/beefe639b25eb9855a12b1d1436bbbc6b88ac78e/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=beefe639b25eb9855a12b1d1436bbbc6b88ac78e", "patch": "@@ -1,3 +1,11 @@\n+2019-12-07  Jason Merrill  <jason@redhat.com>\n+\t    Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/92831\n+\t* call.c (build_conditional_expr_1): For ?: with omitted middle\n+\toperand use cp_stabilize_reference if arg1 is glvalue_p rather than\n+\tjust if it is lvalue_p.\n+\n 2019-12-06  Jakub Jelinek  <jakub@redhat.com>\n \n \t* parser.c (cp_parser_diagnose_invalid_type_name): Mention"}, {"sha": "ce942977f45e350e12418edba44739b75e2265b5", "filename": "gcc/cp/call.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/beefe639b25eb9855a12b1d1436bbbc6b88ac78e/gcc%2Fcp%2Fcall.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/beefe639b25eb9855a12b1d1436bbbc6b88ac78e/gcc%2Fcp%2Fcall.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcall.c?ref=beefe639b25eb9855a12b1d1436bbbc6b88ac78e", "patch": "@@ -5077,7 +5077,7 @@ build_conditional_expr_1 (const op_location_t &loc,\n \twarn_for_omitted_condop (loc, arg1);\n \n       /* Make sure that lvalues remain lvalues.  See g++.oliva/ext1.C.  */\n-      if (lvalue_p (arg1))\n+      if (glvalue_p (arg1))\n \targ2 = arg1 = cp_stabilize_reference (arg1);\n       else\n \targ2 = arg1 = cp_save_expr (arg1);"}, {"sha": "460cff00dd15a47bac54d37c8b9aeb8829bdf0da", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/beefe639b25eb9855a12b1d1436bbbc6b88ac78e/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/beefe639b25eb9855a12b1d1436bbbc6b88ac78e/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=beefe639b25eb9855a12b1d1436bbbc6b88ac78e", "patch": "@@ -1,3 +1,8 @@\n+2019-12-07  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/92831\n+\t* g++.dg/ext/temp-extend1.C: New test.\n+\n 2019-12-06  Marek Polacek  <polacek@redhat.com>\n \n \tPR c++/92451"}, {"sha": "7df9ca516817621e04e2950d072cde42c0e316f1", "filename": "gcc/testsuite/g++.dg/ext/temp-extend1.C", "status": "added", "additions": 43, "deletions": 0, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/beefe639b25eb9855a12b1d1436bbbc6b88ac78e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Ftemp-extend1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/beefe639b25eb9855a12b1d1436bbbc6b88ac78e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Ftemp-extend1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Ftemp-extend1.C?ref=beefe639b25eb9855a12b1d1436bbbc6b88ac78e", "patch": "@@ -0,0 +1,43 @@\n+// PR c++/92831\n+// { dg-do run { target c++11 } }\n+// { dg-options \"\" }\n+\n+template<typename T> using id = T;\n+struct S { S () : s (false) { ++c; } S (bool x) : s (x) { ++c; } ~S () { --c; }; bool s; static int c; };\n+int S::c = 0;\n+\n+void\n+foo (int i)\n+{\n+  const bool&& a\n+    = id<S[3]>{false, true, false}[i].s\n+      ? id<S[2]>{true, false}[i].s : id<S[4]>{true, false, true, false}[i].s;\n+  if (S::c != (i ? 2 : 4))\n+    __builtin_abort ();\n+}\n+\n+void\n+baz (int i)\n+{\n+  const bool&& a = id<S[3]>{false, true, false}[i].s\n+\t\t   ? : id<S[4]>{true, false, true, false}[i].s;\n+  if (S::c != (i ? 3 : 4))\n+    __builtin_abort ();\n+}\n+\n+int\n+main ()\n+{\n+  foo (0);\n+  if (S::c != 0)\n+    __builtin_abort ();\n+  foo (1);\n+  if (S::c != 0)\n+    __builtin_abort ();\n+  baz (0);\n+  if (S::c != 0)\n+    __builtin_abort ();\n+  baz (1);\n+  if (S::c != 0)\n+    __builtin_abort ();\n+}"}]}