{"sha": "f0da1c0cb7661ee9111bc475efddae80a026de34", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjBkYTFjMGNiNzY2MWVlOTExMWJjNDc1ZWZkZGFlODBhMDI2ZGUzNA==", "commit": {"author": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2021-02-11T03:51:30Z"}, "committer": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2021-02-11T16:12:49Z"}, "message": "c++: ICE with unexpanded pack in do-while [PR99063]\n\nHere an unexpanded parameter pack snuck into prep_operand which doesn't\nexpect to see an operand without a type, and since r247842\nNONTYPE_ARGUMENT_PACK doesn't have a type anymore.\n\nThis only happens with the do-while loop whose condition may not\ncontain a declaration so we never called finish_cond which checks\nfor unexpanded parameter packs.  So use check_for_bare_parameter_packs\nto remedy that.\n\ngcc/cp/ChangeLog:\n\n\tPR c++/99063\n\t* semantics.c (finish_do_stmt): Check for unexpanded parameter packs.\n\ngcc/testsuite/ChangeLog:\n\n\tPR c++/99063\n\t* g++.dg/cpp0x/variadic-crash6.C: New test.", "tree": {"sha": "7920ddc5775bb5acdb6ec0552845ca8032c3d56a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7920ddc5775bb5acdb6ec0552845ca8032c3d56a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f0da1c0cb7661ee9111bc475efddae80a026de34", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f0da1c0cb7661ee9111bc475efddae80a026de34", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f0da1c0cb7661ee9111bc475efddae80a026de34", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f0da1c0cb7661ee9111bc475efddae80a026de34/comments", "author": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cb168f779c87c1e0c37d22ea82dfb93ff8c873bc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cb168f779c87c1e0c37d22ea82dfb93ff8c873bc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cb168f779c87c1e0c37d22ea82dfb93ff8c873bc"}], "stats": {"total": 21, "additions": 21, "deletions": 0}, "files": [{"sha": "30dd206c89926e1eec76b3c68b94396ca89efb74", "filename": "gcc/cp/semantics.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f0da1c0cb7661ee9111bc475efddae80a026de34/gcc%2Fcp%2Fsemantics.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f0da1c0cb7661ee9111bc475efddae80a026de34/gcc%2Fcp%2Fsemantics.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsemantics.c?ref=f0da1c0cb7661ee9111bc475efddae80a026de34", "patch": "@@ -1028,6 +1028,11 @@ finish_do_stmt (tree cond, tree do_stmt, bool ivdep, unsigned short unroll)\n {\n   cond = maybe_convert_cond (cond);\n   end_maybe_infinite_loop (cond);\n+  /* Unlike other iteration statements, the condition may not contain\n+     a declaration, so we don't call finish_cond which checks for\n+     unexpanded parameter packs.  */\n+  if (check_for_bare_parameter_packs (cond))\n+    cond = error_mark_node;\n   if (ivdep && cond != error_mark_node)\n     cond = build3 (ANNOTATE_EXPR, TREE_TYPE (cond), cond,\n \t\t   build_int_cst (integer_type_node, annot_expr_ivdep_kind),"}, {"sha": "88009b765c21b4e5868c73035c5f22963cb2baf7", "filename": "gcc/testsuite/g++.dg/cpp0x/variadic-crash6.C", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f0da1c0cb7661ee9111bc475efddae80a026de34/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fvariadic-crash6.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f0da1c0cb7661ee9111bc475efddae80a026de34/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fvariadic-crash6.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fvariadic-crash6.C?ref=f0da1c0cb7661ee9111bc475efddae80a026de34", "patch": "@@ -0,0 +1,16 @@\n+// PR c++/99063\n+// { dg-do compile { target c++11 } }\n+\n+template <typename... T>\n+void f (T... n)\n+{\n+  do\n+    {\n+    }\n+  while (--n); // { dg-error \"parameter packs not expanded with '...'\" }\n+}\n+\n+void g ()\n+{\n+  f(3);\n+}"}]}