{"sha": "e1b1511329ba3b9cdbc10aa3bd5ce93ed86adf3e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTFiMTUxMTMyOWJhM2I5Y2RiYzEwYWEzYmQ1Y2U5M2VkODZhZGYzZQ==", "commit": {"author": {"name": "Anthony Green", "email": "green@cygnus.com", "date": "2000-02-26T21:12:54Z"}, "committer": {"name": "Anthony Green", "email": "green@gcc.gnu.org", "date": "2000-02-26T21:12:54Z"}, "message": "Minor clean up and bug fix.\n\nFrom-SVN: r32196", "tree": {"sha": "9fe78cae5f76c6dd6ff0b305f3340300023071b2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9fe78cae5f76c6dd6ff0b305f3340300023071b2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e1b1511329ba3b9cdbc10aa3bd5ce93ed86adf3e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e1b1511329ba3b9cdbc10aa3bd5ce93ed86adf3e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e1b1511329ba3b9cdbc10aa3bd5ce93ed86adf3e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e1b1511329ba3b9cdbc10aa3bd5ce93ed86adf3e/comments", "author": null, "committer": null, "parents": [{"sha": "701a26019cfef319e5df934eb8f85d4cab94c1b4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/701a26019cfef319e5df934eb8f85d4cab94c1b4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/701a26019cfef319e5df934eb8f85d4cab94c1b4"}], "stats": {"total": 18, "additions": 13, "deletions": 5}, "files": [{"sha": "ccf334665d1f3df23fc58f502183a4315ff26103", "filename": "libjava/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e1b1511329ba3b9cdbc10aa3bd5ce93ed86adf3e/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e1b1511329ba3b9cdbc10aa3bd5ce93ed86adf3e/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=e1b1511329ba3b9cdbc10aa3bd5ce93ed86adf3e", "patch": "@@ -1,3 +1,12 @@\n+2000-02-26  Anthony Green  <green@cygnus.com>\n+\n+\t* gnu/gcj/io/MimeTypes.java: Test for null.\n+\n+\t* jni.cc (_Jv_JNI_AttachCurrentThread): Minor cleanup.\n+\t(JNI_GetCreatedJavaVMs): Remove compiler warning.\n+\n+\t* java/net/URLConnection.java: Update copyright notice.\n+\n 2000-02-25  Tom Tromey  <tromey@cygnus.com>\n \n \t* jni.cc (_Jv_JNI_RegisterNatives): Conditionalize body on"}, {"sha": "f4a114bf9e89222f10cb1fc343fc5f25e117f303", "filename": "libjava/gnu/gcj/io/MimeTypes.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e1b1511329ba3b9cdbc10aa3bd5ce93ed86adf3e/libjava%2Fgnu%2Fgcj%2Fio%2FMimeTypes.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e1b1511329ba3b9cdbc10aa3bd5ce93ed86adf3e/libjava%2Fgnu%2Fgcj%2Fio%2FMimeTypes.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fgcj%2Fio%2FMimeTypes.java?ref=e1b1511329ba3b9cdbc10aa3bd5ce93ed86adf3e", "patch": "@@ -36,7 +36,7 @@ public static void fillFromFile (Hashtable table, String fname)\n \t\t  {\n \t\t    // Read the next extension\n \t\t    String e = tokenizer.nextToken ();\n-\t\t    if (! e.startsWith (\"#\"))\n+\t\t    if ((e != null) && (! e.startsWith (\"#\")))\n \t\t      table.put (e, t);\n \t\t    else\n \t\t      break;"}, {"sha": "8ba61d1afcda7679293a5629e4e18b4d3aadbad0", "filename": "libjava/java/net/URLConnection.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e1b1511329ba3b9cdbc10aa3bd5ce93ed86adf3e/libjava%2Fjava%2Fnet%2FURLConnection.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e1b1511329ba3b9cdbc10aa3bd5ce93ed86adf3e/libjava%2Fjava%2Fnet%2FURLConnection.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fnet%2FURLConnection.java?ref=e1b1511329ba3b9cdbc10aa3bd5ce93ed86adf3e", "patch": "@@ -1,7 +1,7 @@\n // URLConnection.java - Superclass of all communications links between\n //\t\t\tan application and a URL.\n \n-/* Copyright (C) 1999  Red Hat, Inc.\n+/* Copyright (C) 1999, 2000  Red Hat, Inc.\n \n    This file is part of libgcj.\n "}, {"sha": "3eca405757e200917dca45546474ce7c29b847e5", "filename": "libjava/jni.cc", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e1b1511329ba3b9cdbc10aa3bd5ce93ed86adf3e/libjava%2Fjni.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e1b1511329ba3b9cdbc10aa3bd5ce93ed86adf3e/libjava%2Fjni.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjni.cc?ref=e1b1511329ba3b9cdbc10aa3bd5ce93ed86adf3e", "patch": "@@ -1545,8 +1545,7 @@ _Jv_JNI_AttachCurrentThread (JavaVM *, jstring name, void **penv, void *args)\n   // have been called simply to set the new JNIEnv.\n   if (_Jv_ThreadCurrent () == NULL)\n     {\n-      java::lang::Thread *t = new gnu::gcj::jni::NativeThread (group, name);\n-      t = t;\t\t\t// Avoid compiler warning.  Eww.\n+      (void) new gnu::gcj::jni::NativeThread (group, name);\n     }\n   _Jv_SetCurrentJNIEnv (env);\n \n@@ -1707,7 +1706,7 @@ JNI_CreateJavaVM (JavaVM **vm, void **penv, void *args)\n }\n \n jint\n-JNI_GetCreatedJavaVMs (JavaVM **vm_buffer, jsize buf_len, jsize *n_vms)\n+JNI_GetCreatedJavaVMs (JavaVM **vm_buffer, jsize /* buf_len */, jsize *n_vms)\n {\n   JvAssert (buf_len > 0);\n   // We only support a single VM."}]}