{"sha": "d048f8c33952f2581296deaf32b3db6a210996a8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDA0OGY4YzMzOTUyZjI1ODEyOTZkZWFmMzJiM2RiNmEyMTA5OTZhOA==", "commit": {"author": {"name": "Christophe Lyon", "email": "christophe.lyon@linaro.org", "date": "2015-01-21T11:14:57Z"}, "committer": {"name": "Christophe Lyon", "email": "clyon@gcc.gnu.org", "date": "2015-01-21T11:14:57Z"}, "message": "[ARM/AArch64][testsuite] Add vmovn tests.\n\n2015-01-21  Christophe Lyon  <christophe.lyon@linaro.org>\n\n\t* gcc.target/aarch64/advsimd-intrinsics/vmovn.c: New file.\n\nFrom-SVN: r219939", "tree": {"sha": "5deefa44b5a24a01aefa0bf4581d4b0b3b604066", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5deefa44b5a24a01aefa0bf4581d4b0b3b604066"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d048f8c33952f2581296deaf32b3db6a210996a8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d048f8c33952f2581296deaf32b3db6a210996a8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d048f8c33952f2581296deaf32b3db6a210996a8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d048f8c33952f2581296deaf32b3db6a210996a8/comments", "author": null, "committer": null, "parents": [{"sha": "84722ccab11fac59290afa94e90b9f00e254cb48", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/84722ccab11fac59290afa94e90b9f00e254cb48", "html_url": "https://github.com/Rust-GCC/gccrs/commit/84722ccab11fac59290afa94e90b9f00e254cb48"}], "stats": {"total": 54, "additions": 54, "deletions": 0}, "files": [{"sha": "fd74430fd32603301337967e61eee1bf519ffff4", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d048f8c33952f2581296deaf32b3db6a210996a8/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d048f8c33952f2581296deaf32b3db6a210996a8/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=d048f8c33952f2581296deaf32b3db6a210996a8", "patch": "@@ -1,3 +1,7 @@\n+2015-01-21  Christophe Lyon  <christophe.lyon@linaro.org>\n+\n+\t* gcc.target/aarch64/advsimd-intrinsics/vmovn.c: New file.\n+\n 2015-01-21  Christophe Lyon  <christophe.lyon@linaro.org>\n \n \t* gcc.target/aarch64/advsimd-intrinsics/vXXXw.inc: New file."}, {"sha": "bc2c2ca93602f3bec42b35fce4aeacdbca02db90", "filename": "gcc/testsuite/gcc.target/aarch64/advsimd-intrinsics/vmovn.c", "status": "added", "additions": 50, "deletions": 0, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d048f8c33952f2581296deaf32b3db6a210996a8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvmovn.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d048f8c33952f2581296deaf32b3db6a210996a8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvmovn.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvmovn.c?ref=d048f8c33952f2581296deaf32b3db6a210996a8", "patch": "@@ -0,0 +1,50 @@\n+#include <arm_neon.h>\n+#include \"arm-neon-ref.h\"\n+#include \"compute-ref-data.h\"\n+\n+/* Expected results.  */\n+VECT_VAR_DECL(expected,int,8,8) [] = { 0xf0, 0xf1, 0xf2, 0xf3,\n+\t\t\t\t       0xf4, 0xf5, 0xf6, 0xf7 };\n+VECT_VAR_DECL(expected,int,16,4) [] = { 0xfff0, 0xfff1, 0xfff2, 0xfff3 };\n+VECT_VAR_DECL(expected,int,32,2) [] = { 0xfffffff0, 0xfffffff1 };\n+VECT_VAR_DECL(expected,uint,8,8) [] = { 0xf0, 0xf1, 0xf2, 0xf3,\n+\t\t\t\t\t0xf4, 0xf5, 0xf6, 0xf7 };\n+VECT_VAR_DECL(expected,uint,16,4) [] = { 0xfff0, 0xfff1, 0xfff2, 0xfff3 };\n+VECT_VAR_DECL(expected,uint,32,2) [] = { 0xfffffff0, 0xfffffff1 };\n+\n+#define TEST_MSG \"VMOVN\"\n+void exec_vmovn (void)\n+{\n+  /* Basic test: vec64=vmovn(vec128), then store the result.  */\n+#define TEST_VMOVN(T1, T2, W, W2, N)\t\t\t\t\t\\\n+  VECT_VAR(vector64, T1, W2, N) =\t\t\t\t\t\\\n+    vmovn_##T2##W(VECT_VAR(vector128, T1, W, N));\t\t\t\\\n+  vst1_##T2##W2(VECT_VAR(result, T1, W2, N), VECT_VAR(vector64, T1, W2, N))\n+\n+  DECL_VARIABLE_64BITS_VARIANTS(vector64);\n+  DECL_VARIABLE_128BITS_VARIANTS(vector128);\n+\n+  TEST_MACRO_128BITS_VARIANTS_2_5(VLOAD, vector128, buffer);\n+\n+  clean_results ();\n+\n+  TEST_VMOVN(int, s, 16, 8, 8);\n+  TEST_VMOVN(int, s, 32, 16, 4);\n+  TEST_VMOVN(int, s, 64, 32, 2);\n+  TEST_VMOVN(uint, u, 16, 8, 8);\n+  TEST_VMOVN(uint, u, 32, 16, 4);\n+  TEST_VMOVN(uint, u, 64, 32, 2);\n+\n+  CHECK(TEST_MSG, int, 8, 8, PRIx32, expected, \"\");\n+  CHECK(TEST_MSG, int, 16, 4, PRIx64, expected, \"\");\n+  CHECK(TEST_MSG, int, 32, 2, PRIx32, expected, \"\");\n+  CHECK(TEST_MSG, uint, 8, 8, PRIx32, expected, \"\");\n+  CHECK(TEST_MSG, uint, 16, 4, PRIx64, expected, \"\");\n+  CHECK(TEST_MSG, uint, 32, 2, PRIx32, expected, \"\");\n+}\n+\n+int main (void)\n+{\n+  exec_vmovn ();\n+  return 0;\n+}"}]}