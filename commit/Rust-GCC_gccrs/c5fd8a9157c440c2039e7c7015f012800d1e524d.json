{"sha": "c5fd8a9157c440c2039e7c7015f012800d1e524d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzVmZDhhOTE1N2M0NDBjMjAzOWU3YzcwMTVmMDEyODAwZDFlNTI0ZA==", "commit": {"author": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2020-12-05T00:16:39Z"}, "committer": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2020-12-05T00:16:39Z"}, "message": "Daily bump.", "tree": {"sha": "8a7d0b44dcea43ddc471c7fe26326b1cec959b92", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8a7d0b44dcea43ddc471c7fe26326b1cec959b92"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c5fd8a9157c440c2039e7c7015f012800d1e524d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c5fd8a9157c440c2039e7c7015f012800d1e524d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c5fd8a9157c440c2039e7c7015f012800d1e524d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c5fd8a9157c440c2039e7c7015f012800d1e524d/comments", "author": null, "committer": null, "parents": [{"sha": "918a5b84a2c51dc9d011d39461cc276e6558069d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/918a5b84a2c51dc9d011d39461cc276e6558069d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/918a5b84a2c51dc9d011d39461cc276e6558069d"}], "stats": {"total": 195, "additions": 194, "deletions": 1}, "files": [{"sha": "a280c053dea7e73e05bb8feec3a1d402f702bb09", "filename": "contrib/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c5fd8a9157c440c2039e7c7015f012800d1e524d/contrib%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c5fd8a9157c440c2039e7c7015f012800d1e524d/contrib%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2FChangeLog?ref=c5fd8a9157c440c2039e7c7015f012800d1e524d", "patch": "@@ -1,3 +1,8 @@\n+2020-12-04  Martin Liska  <mliska@suse.cz>\n+\n+\t* check-params-in-docs.py: use flake8 and add some\n+\ttweaks to ignore aarch64 params.\n+\n 2020-12-02  Jason Merrill  <jason@redhat.com>\n \n \t* gcc-git-customization.sh: Configure sendemail.to."}, {"sha": "853d3b243ffa49994218de8ffa3d8d9b7bbbd807", "filename": "gcc/ChangeLog", "status": "modified", "additions": 83, "deletions": 0, "changes": 83, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c5fd8a9157c440c2039e7c7015f012800d1e524d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c5fd8a9157c440c2039e7c7015f012800d1e524d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c5fd8a9157c440c2039e7c7015f012800d1e524d", "patch": "@@ -1,3 +1,86 @@\n+2020-12-04  Jason Merrill  <jason@redhat.com>\n+\n+\t* vec.h (begin, end): Add overloads for vec*.\n+\t* tree.c (build_constructor_from_vec): Remove *.\n+\n+2020-12-04  David Edelsohn  <dje.gcc@gmail.com>\n+\n+\t* config/rs6000/rs6000.c (rs6000_option_override_internal):\n+\tChange PTR_SIZE to POINTER_SIZE_UNITS.\n+\n+2020-12-04  Hans-Peter Nilsson  <hp@axis.com>\n+\t    Martin Sebor  <msebor@redhat.com>\n+\n+\tPR middle-end/94600\n+\t* doc/implement-c.texi (Qualifiers implementation): Add blurb\n+\tabout access to the whole of a volatile aggregate object, only for\n+\tsame-size as a scalar object.\n+\n+2020-12-04  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/98130\n+\t* gimple.c (gimple_call_fnspec): Only return \".co \" for replaceable\n+\toperator delete or \".mC\" for replaceable operator new called from\n+\tnew/delete.\n+\n+2020-12-04  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/96226\n+\t* config/i386/i386.md (splitter after *<rotate_insn><mode>3_mask,\n+\tsplitter after *<rotate_insn><mode>3_mask_1): New combine splitters.\n+\n+2020-12-04  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR libstdc++/93121\n+\t* fold-const.c (native_encode_initializer): Use build_zero_cst\n+\tinstead of build_constructor.\n+\n+2020-12-04  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/98100\n+\t* cfgexpand.c (expand_gimple_basic_block): For vars with\n+\tvector type, use TYPE_MODE rather than DECL_MODE.\n+\n+2020-12-04  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* common.opt (-gdwarf32, -gdwarf64): New options.\n+\t* config/rs6000/rs6000.c (rs6000_option_override_internal): Default\n+\tdwarf_offset_size to 8 if not overridden from the command line.\n+\t* dwarf2out.c: Change all occurrences of DWARF_OFFSET_SIZE to\n+\tdwarf_offset_size.\n+\t* doc/invoke.texi (-gdwarf32, -gdwarf64): Document.\n+\n+2020-12-04  Martin Liska  <mliska@suse.cz>\n+\n+\t* doc/tm.texi: Change argument of the record_gcc_switches\n+\thook and remove SWITCH_TYPE_* enum values.\n+\t* dwarf2out.c (gen_producer_string): Move to opts.c and remove\n+\thandling of the dwarf_record_gcc_switches option.\n+\t(dwarf2out_early_finish): Use moved gen_producer_string\n+\tfunction.\n+\t* opts.c (gen_producer_string): New.\n+\t* opts.h (gen_producer_string): New.\n+\t* target.def: Change type of record_gcc_switches.\n+\t* target.h (enum print_switch_type): Remove.\n+\t(elf_record_gcc_switches): Change first argument.\n+\t* toplev.c (MAX_LINE): Remove.\n+\t(print_to_asm_out_file):  Likewise.\n+\t(print_to_stderr): Likewise.\n+\t(print_single_switch): Likewise.\n+\t(print_switch_values): Likewise.\n+\t(init_asm_output): Use new gen_producer_string function.\n+\t(process_options): Likewise.\n+\t* varasm.c (elf_record_gcc_switches): Just save the string argument\n+\tto the ELF container.\n+\n+2020-12-04  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* ipa-sra.c (verify_access_tree_1): Relax assertion on the size.\n+\n+2020-12-04  Martin Liska  <mliska@suse.cz>\n+\n+\t* doc/invoke.texi: Add missing params.\n+\n 2020-12-03  Martin Sebor  <msebor@redhat.com>\n \n \tPR c++/90629"}, {"sha": "e4face1d0a8ee380c3228c7c09cfc589472abaf7", "filename": "gcc/DATESTAMP", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c5fd8a9157c440c2039e7c7015f012800d1e524d/gcc%2FDATESTAMP", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c5fd8a9157c440c2039e7c7015f012800d1e524d/gcc%2FDATESTAMP", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FDATESTAMP?ref=c5fd8a9157c440c2039e7c7015f012800d1e524d", "patch": "@@ -1 +1 @@\n-20201204\n+20201205"}, {"sha": "6d5caf052f3d0a26d272e6eb2fe26c26b1bcfa6a", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c5fd8a9157c440c2039e7c7015f012800d1e524d/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c5fd8a9157c440c2039e7c7015f012800d1e524d/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=c5fd8a9157c440c2039e7c7015f012800d1e524d", "patch": "@@ -1,3 +1,42 @@\n+2020-12-04  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/93083\n+\t* pt.c (convert_template_argument): Handle equivalent placeholders.\n+\t(do_class_deduction): Look through EXPR_PACK_EXPANSION, too.\n+\n+2020-12-04  Jason Merrill  <jason@redhat.com>\n+\n+\t* decl2.c (clear_consteval_vfns): Remove *.\n+\t* pt.c (do_auto_deduction): Remove *.\n+\t* parser.c (cp_parser_late_parsing_default_args): Change loop\n+\tto use range 'for'.\n+\n+2020-12-04  Nathan Sidwell  <nathan@acm.org>\n+\n+\tPR c++/98116\n+\t* cp-tree.h (comparing_typenames): Delete.\n+\t(cplus_build_array_type): Remove default parm.\n+\t* pt.c (comparing_typenames): Delete.\n+\t(spec_hasher::equal): Don't increment it.\n+\t* tree.c (set_array_type_canon): Remove dep parm.\n+\t(build_cplus_array_type): Remove dep parm changes.\n+\t(cp_build_qualified_type_real): Remove dependent array type\n+\tchanges.\n+\t(strip_typedefs): Likewise.\n+\t* typeck.c (structural_comptypes): Revert comparing_typename\n+\tchanges.\n+\n+2020-12-04  Nathan Sidwell  <nathan@acm.org>\n+\n+\t* cp-tree.h: Add various inline module state predicates, and\n+\tdeclare the API that will be provided by modules.cc\n+\n+2020-12-04  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/80780\n+\t* cp-gimplify.c (fold_builtin_source_location): Use 2 instead of 0\n+\tas last argument to cxx_printable_name.\n+\n 2020-12-03  Jason Merrill  <jason@redhat.com>\n \n \t* cp-tree.h (releasing_vec::operator[]): Change parameter type to"}, {"sha": "b5f39cecfb0c56895b1c77e1574e8cb44ad0d7d3", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 58, "deletions": 0, "changes": 58, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c5fd8a9157c440c2039e7c7015f012800d1e524d/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c5fd8a9157c440c2039e7c7015f012800d1e524d/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=c5fd8a9157c440c2039e7c7015f012800d1e524d", "patch": "@@ -1,3 +1,61 @@\n+2020-12-04  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/93083\n+\t* g++.dg/cpp2a/nontype-class40.C: New test.\n+\n+2020-12-04  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/98130\n+\t* g++.dg/opt/pr98130.C: New test.\n+\n+2020-12-04  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/96226\n+\t* gcc.target/i386/pr96226.c: New test.\n+\n+2020-12-04  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR libstdc++/93121\n+\t* g++.dg/cpp2a/bit-cast6.C: New test.\n+\n+2020-12-04  Nathan Sidwell  <nathan@acm.org>\n+\n+\tPR c++/98116\n+\t* g++.dg/template/pr98116.C: Enable robust checking.\n+\n+2020-12-04  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/98100\n+\t* gcc.target/i386/pr98100.c: New test.\n+\n+2020-12-04  Martin Liska  <mliska@suse.cz>\n+\n+\tPR testsuite/98123\n+\t* gcc.dg/tree-ssa/if-to-switch-4.c: Add param to make the test\n+\tstable on all architectures.\n+\t* gcc.dg/tree-ssa/if-to-switch-6.c: Likewise.\n+\t* gcc.dg/tree-ssa/if-to-switch-8.c: Likewise.\n+\n+2020-12-04  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gcc.dg/pr98099.c: Compile only for dfp targets.\n+\n+2020-12-04  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gnat.dg/opt91.ads, gnat.dg/opt91.adb: New test.\n+\t* gnat.dg/opt91_pkg.ads, gnat.dg/opt91_pkg.adb: New helper.\n+\n+2020-12-04  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/80780\n+\t* g++.dg/cpp2a/srcloc1.C (quux): Use __PRETTY_FUNCTION__ instead of\n+\tfunction.\n+\t* g++.dg/cpp2a/srcloc2.C (quux): Likewise.\n+\t* g++.dg/cpp2a/srcloc15.C (S::S): Likewise.\n+\t(bar): Likewise.  Adjust expected column.\n+\t* g++.dg/cpp2a/srcloc17.C (S::S): Likewise.\n+\t(bar): Likewise.  Adjust expected column.\n+\n 2020-12-03  Jason Merrill  <jason@redhat.com>\n \n \t* g++.dg/cpp2a/concepts-nodiscard1.C: XFAIL."}, {"sha": "8447b729a667cd8a3cf01beca0499913e2b98738", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c5fd8a9157c440c2039e7c7015f012800d1e524d/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c5fd8a9157c440c2039e7c7015f012800d1e524d/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=c5fd8a9157c440c2039e7c7015f012800d1e524d", "patch": "@@ -1,3 +1,11 @@\n+2020-12-04  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/80780\n+\t* testsuite/18_support/source_location/1.cc (main): Adjust for\n+\t__builtin_source_location using __PRETTY_FUNCTION__-like names instead\n+\t__FUNCTION__-like.\n+\t* testsuite/18_support/source_location/consteval.cc (main): Likewise.\n+\n 2020-12-03  Martin Sebor  <msebor@redhat.com>\n \n \t* testsuite/ext/vstring/modifiers/clear/56166.cc: Suppress a false"}]}