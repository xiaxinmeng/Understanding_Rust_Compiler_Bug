{"sha": "2438cb6a1dd5f983314b21988b915699c01a2e28", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjQzOGNiNmExZGQ1Zjk4MzMxNGIyMTk4OGI5MTU2OTljMDFhMmUyOA==", "commit": {"author": {"name": "Martin Sebor", "email": "msebor@redhat.com", "date": "2018-01-03T22:52:53Z"}, "committer": {"name": "Martin Sebor", "email": "msebor@gcc.gnu.org", "date": "2018-01-03T22:52:53Z"}, "message": "PR tree-optimization/83603 - ICE in builtin_memref at gcc/gimple-ssa-warn-restrict.c:238\n\ngcc/ChangeLog:\n\n\tPR tree-optimization/83603\n\t* calls.c (maybe_warn_nonstring_arg): Avoid accessing function\n\targuments past the endof the argument list in functions declared\n\twithout a prototype.\n\t* gimple-ssa-warn-restrict.c (wrestrict_dom_walker::check_call):\n\tAvoid checking when arguments are null.\n\ngcc/testsuite/ChangeLog:\n\n\tPR tree-optimization/83603\n\t* gcc.dg/Wrestrict-4.c: New test.\n\nFrom-SVN: r256217", "tree": {"sha": "9280aa5f66193767d229621d884a9c4551d8b7c4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9280aa5f66193767d229621d884a9c4551d8b7c4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2438cb6a1dd5f983314b21988b915699c01a2e28", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2438cb6a1dd5f983314b21988b915699c01a2e28", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2438cb6a1dd5f983314b21988b915699c01a2e28", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2438cb6a1dd5f983314b21988b915699c01a2e28/comments", "author": {"login": "msebor", "id": 381149, "node_id": "MDQ6VXNlcjM4MTE0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/381149?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msebor", "html_url": "https://github.com/msebor", "followers_url": "https://api.github.com/users/msebor/followers", "following_url": "https://api.github.com/users/msebor/following{/other_user}", "gists_url": "https://api.github.com/users/msebor/gists{/gist_id}", "starred_url": "https://api.github.com/users/msebor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msebor/subscriptions", "organizations_url": "https://api.github.com/users/msebor/orgs", "repos_url": "https://api.github.com/users/msebor/repos", "events_url": "https://api.github.com/users/msebor/events{/privacy}", "received_events_url": "https://api.github.com/users/msebor/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c3a8f964ab330d8e64bb4d33c462c64f4fa35aeb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c3a8f964ab330d8e64bb4d33c462c64f4fa35aeb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c3a8f964ab330d8e64bb4d33c462c64f4fa35aeb"}], "stats": {"total": 149, "additions": 144, "deletions": 5}, "files": [{"sha": "78c30df536480b1898398e9366485c28a6dff078", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2438cb6a1dd5f983314b21988b915699c01a2e28/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2438cb6a1dd5f983314b21988b915699c01a2e28/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2438cb6a1dd5f983314b21988b915699c01a2e28", "patch": "@@ -553,6 +553,15 @@\n \t* final.c (rest_of_handle_final): Call delete_vta_debug_insns\n \tinstead of variable_tracking_main.\n \n+2018-01-03  Martin Sebor  <msebor@redhat.com>\n+\n+\tPR tree-optimization/83603\n+\t* calls.c (maybe_warn_nonstring_arg): Avoid accessing function\n+\targuments past the endof the argument list in functions declared\n+\twithout a prototype.\n+\t* gimple-ssa-warn-restrict.c (wrestrict_dom_walker::check_call):\n+\tAvoid checking when arguments are null.\n+\n 2018-01-03  Martin Sebor  <msebor@redhat.com>\n \n \tPR c/83559"}, {"sha": "54fea1586312e06d49e9ea2b858e92e831f76780", "filename": "gcc/calls.c", "status": "modified", "additions": 19, "deletions": 4, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2438cb6a1dd5f983314b21988b915699c01a2e28/gcc%2Fcalls.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2438cb6a1dd5f983314b21988b915699c01a2e28/gcc%2Fcalls.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcalls.c?ref=2438cb6a1dd5f983314b21988b915699c01a2e28", "patch": "@@ -1607,6 +1607,8 @@ maybe_warn_nonstring_arg (tree fndecl, tree exp)\n \n   bool with_bounds = CALL_WITH_BOUNDS_P (exp);\n \n+  unsigned nargs = call_expr_nargs (exp);\n+\n   /* The bound argument to a bounded string function like strncpy.  */\n   tree bound = NULL_TREE;\n \n@@ -1621,12 +1623,20 @@ maybe_warn_nonstring_arg (tree fndecl, tree exp)\n     case BUILT_IN_STRNCASECMP:\n     case BUILT_IN_STRNCPY:\n     case BUILT_IN_STRNCPY_CHK:\n-      bound = CALL_EXPR_ARG (exp, with_bounds ? 4 : 2);\n-      break;\n+      {\n+\tunsigned argno = with_bounds ? 4 : 2;\n+\tif (argno < nargs)\n+\t  bound = CALL_EXPR_ARG (exp, argno);\n+\tbreak;\n+      }\n \n     case BUILT_IN_STRNDUP:\n-      bound = CALL_EXPR_ARG (exp, with_bounds ? 2 : 1);\n-      break;\n+      {\n+\tunsigned argno = with_bounds ? 2 : 1;\n+\tif (argno < nargs)\n+\t  bound = CALL_EXPR_ARG (exp, argno);\n+\tbreak;\n+      }\n \n     default:\n       break;\n@@ -1646,6 +1656,11 @@ maybe_warn_nonstring_arg (tree fndecl, tree exp)\n \n   for (unsigned argno = 0; ; ++argno, function_args_iter_next (&it))\n     {\n+      /* Avoid iterating past the declared argument in a call\n+\t to function declared without a prototype.  */\n+      if (argno >= nargs)\n+\tbreak;\n+\n       tree argtype = function_args_iter_cond (&it);\n       if (!argtype)\n \tbreak;"}, {"sha": "97d2af75531c276ab7e0cee237fa30da4f625e65", "filename": "gcc/gimple-ssa-warn-restrict.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2438cb6a1dd5f983314b21988b915699c01a2e28/gcc%2Fgimple-ssa-warn-restrict.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2438cb6a1dd5f983314b21988b915699c01a2e28/gcc%2Fgimple-ssa-warn-restrict.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-ssa-warn-restrict.c?ref=2438cb6a1dd5f983314b21988b915699c01a2e28", "patch": "@@ -1691,7 +1691,9 @@ wrestrict_dom_walker::check_call (gcall *call)\n   if (!dstwr && strfun)\n     dstwr = size_one_node;\n \n-  if (check_bounds_or_overlap (call, dst, src, dstwr, NULL_TREE))\n+  /* DST and SRC can be null for a call with an insufficient number\n+     of arguments to a built-in function declared without a protype.  */\n+  if (!dst || !src || check_bounds_or_overlap (call, dst, src, dstwr, NULL_TREE))\n     return;\n \n   /* Avoid diagnosing the call again.  */"}, {"sha": "a5779f7498262fd7f90092abfc5d27ff055879fd", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2438cb6a1dd5f983314b21988b915699c01a2e28/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2438cb6a1dd5f983314b21988b915699c01a2e28/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=2438cb6a1dd5f983314b21988b915699c01a2e28", "patch": "@@ -21,6 +21,9 @@\n \n 2018-01-03  Martin Sebor  <msebor@redhat.com>\n \n+\tPR tree-optimization/83603\n+\t* gcc.dg/Wrestrict-4.c: New test.\n+\n \tPR c/83559\n \t* gcc.dg/const-2.c: New test.\n \t* gcc.dg/pure-3.c: New test."}, {"sha": "f2398ef164a6204798595696ddd1d2106b42914b", "filename": "gcc/testsuite/gcc.dg/Wrestrict-4.c", "status": "added", "additions": 110, "deletions": 0, "changes": 110, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2438cb6a1dd5f983314b21988b915699c01a2e28/gcc%2Ftestsuite%2Fgcc.dg%2FWrestrict-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2438cb6a1dd5f983314b21988b915699c01a2e28/gcc%2Ftestsuite%2Fgcc.dg%2FWrestrict-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2FWrestrict-4.c?ref=2438cb6a1dd5f983314b21988b915699c01a2e28", "patch": "@@ -0,0 +1,110 @@\n+/* PR tree-optimization/83603 - ICE in builtin_memref at\n+   gcc/gimple-ssa-warn-restrict.c:238\n+   Test to verify that invalid calls to built-in functions declared\n+   without a prototype don't cause an ICE.\n+   { dg-do compile }\n+   { dg-options \"-O2 -Warray-bounds -Wrestrict\" } */\n+\n+void* memcpy ();\n+void* memmove ();\n+char* stpcpy ();\n+char* strcat ();\n+char* strcpy ();\n+char* strncat ();\n+char* strncpy ();\n+\n+void* test_memcpy_0 ()\n+{\n+  return memcpy ();\n+}\n+\n+void* test_memcpy_1 (void *d)\n+{\n+  return memcpy (d);\n+}\n+\n+void* test_memcpy_2 (void *d, const void *s)\n+{\n+  return memcpy (d, s);\n+}\n+\n+\n+void* test_memmove_0 ()\n+{\n+  return memmove ();\n+}\n+\n+void* test_memmove_1 (void *d)\n+{\n+  return memmove (d);\n+}\n+\n+void* test_memmove_2 (void *d, const void *s)\n+{\n+  return memmove (d, s);\n+}\n+\n+\n+void* test_stpcpy_0 ()\n+{\n+  return stpcpy ();\n+}\n+\n+void* test_stpcpy_1 (char *d)\n+{\n+  return stpcpy (d);\n+}\n+\n+\n+char* test_strcat_0 ()\n+{\n+  return strcat ();\n+}\n+\n+char* test_strcat_1 (char *d)\n+{\n+  return strcat (d);\n+}\n+\n+\n+void* test_strcpy_0 ()\n+{\n+  return strcpy ();\n+}\n+\n+void* test_strcpy_1 (char *d)\n+{\n+  return strcpy (d);\n+}\n+\n+\n+char* test_strncat_0 ()\n+{\n+  return strncat ();\n+}\n+\n+char* test_strncat_1 (char *d)\n+{\n+  return strncat (d);\n+}\n+\n+char* test_strncat_2 (char *d, const char *s)\n+{\n+  return strncat (d, s);\n+}\n+\n+\n+void* test_strncpy_0 ()\n+{\n+  return strncpy ();\n+}\n+\n+void* test_strncpy_1 (char *d)\n+{\n+  return strncpy (d);\n+}\n+\n+void* test_strncpy_2 (char *d, const char *s)\n+{\n+  return strncpy (d, s);\n+}"}]}