{"sha": "118545ec26eb2c3cfe966f552b30860e35c416d3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTE4NTQ1ZWMyNmViMmMzY2ZlOTY2ZjU1MmIzMDg2MGUzNWM0MTZkMw==", "commit": {"author": {"name": "Alexandre Oliva", "email": "aoliva@redhat.com", "date": "2003-07-23T21:41:01Z"}, "committer": {"name": "Alexandre Oliva", "email": "aoliva@gcc.gnu.org", "date": "2003-07-23T21:41:01Z"}, "message": "acinclude.m4 (GLIBCXX_ENABLE_PCH): Rework test such that it tests not only generation of pch files, but also their use.\n\n* acinclude.m4 (GLIBCXX_ENABLE_PCH): Rework test such that it\ntests not only generation of pch files, but also their use.\n* aclocal.m4, configure: Rebuilt.\n\nFrom-SVN: r69727", "tree": {"sha": "8569fa9a80de684d9c6d72e6ad485659e80b5b6e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8569fa9a80de684d9c6d72e6ad485659e80b5b6e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/118545ec26eb2c3cfe966f552b30860e35c416d3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/118545ec26eb2c3cfe966f552b30860e35c416d3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/118545ec26eb2c3cfe966f552b30860e35c416d3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/118545ec26eb2c3cfe966f552b30860e35c416d3/comments", "author": null, "committer": null, "parents": [{"sha": "bd16cb258ee3cf903c488b162b7cd479c12feb7c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bd16cb258ee3cf903c488b162b7cd479c12feb7c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bd16cb258ee3cf903c488b162b7cd479c12feb7c"}], "stats": {"total": 2542, "additions": 1278, "deletions": 1264}, "files": [{"sha": "76b225a1aa5e5ffb3d6e9c4825e931d5af7f68c2", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118545ec26eb2c3cfe966f552b30860e35c416d3/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118545ec26eb2c3cfe966f552b30860e35c416d3/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=118545ec26eb2c3cfe966f552b30860e35c416d3", "patch": "@@ -1,3 +1,9 @@\n+2003-07-23  Alexandre Oliva  <aoliva@redhat.com>\n+\n+\t* acinclude.m4 (GLIBCXX_ENABLE_PCH): Rework test such that it\n+\ttests not only generation of pch files, but also their use.\n+\t* aclocal.m4, configure: Rebuilt.\n+\n 2003-07-23  Steve Ellcey  <sje@cup.hp.com>\n \n \t* config/cpu/hppa/atomicity.h: Change"}, {"sha": "5e5ebf977530dfd364ac43801dbc889c37c20fe9", "filename": "libstdc++-v3/acinclude.m4", "status": "modified", "additions": 20, "deletions": 17, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118545ec26eb2c3cfe966f552b30860e35c416d3/libstdc%2B%2B-v3%2Facinclude.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118545ec26eb2c3cfe966f552b30860e35c416d3/libstdc%2B%2B-v3%2Facinclude.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Facinclude.m4?ref=118545ec26eb2c3cfe966f552b30860e35c416d3", "patch": "@@ -1394,35 +1394,38 @@ AC_ARG_ENABLE(libstdcxx_pch,\n changequote(<<, >>)dnl\n <<  --enable-libstdcxx-pch     build pre-compiled libstdc++ includes [default=>>GLIBCXX_ENABLE_PCH_DEFAULT],\n changequote([, ])dnl\n-[case \"${enableval}\" in\n+[case ${enableval} in\n  yes) enable_libstdcxx_pch=yes ;;\n  no)  enable_libstdcxx_pch=no ;;\n  *)   AC_MSG_ERROR([Unknown argument to enable/disable PCH]) ;;\n  esac],\n enable_libstdcxx_pch=GLIBCXX_ENABLE_PCH_DEFAULT)dnl\n \n   if test x$enable_libstdcxx_pch = xyes; then\n-    ac_test_CXXFLAGS=\"${CXXFLAGS+set}\"\n-    ac_save_CXXFLAGS=\"$CXXFLAGS\"\n-    CXXFLAGS='-Werror -Winvalid-pch -Wno-deprecated -x c++-header'\n-\n-    AC_MSG_CHECKING([for compiler that seems to compile .gch files])\n-    if test x${pch_comp+set} != xset; then\n-      AC_CACHE_VAL(pch_comp, [\n+    AC_CACHE_CHECK([for pch support], [libstdcxx_cv_pch_comp],[\n         AC_LANG_SAVE\n         AC_LANG_CPLUSPLUS\n-        AC_TRY_COMPILE([#include <math.h>], ,\n-                       [pch_comp=yes], [pch_comp=no])\n+\tac_save_CXXFLAGS=$CXXFLAGS\n+\tCXXFLAGS=\"$CXXFLAGS -Werror -Winvalid-pch -Wno-deprecated\"\n+\techo '#include <math.h>' > conftest.h\n+\tif ${CXX-g++} $CXXFLAGS $CPPFLAGS -x c++-header conftest.h \\\n+\t\t-o conftest.h.gch 1>&5 2>&1 &&\n+\t   echo '#error \"pch failed\"' > conftest.h &&\n+\t   echo '#include \"conftest.h\"' > conftest.C &&\n+\t   ${CXX-g++} -c $CXXFLAGS $CPPFLAGS conftest.C 1>&5 2>&1 ; then\n+\t  libstdcxx_cv_pch_comp=yes\n+\telse\n+\t  libstdcxx_cv_pch_comp=no\n+\tfi\n+\trm -f conftest*\n+\tCXXFLAGS=$ac_save_CXXFLAGS\n         AC_LANG_RESTORE\n-      ])\n-    fi\n-    AC_MSG_RESULT([$pch_comp])\n-\n-    CXXFLAGS=\"$ac_save_CXXFLAGS\"\n+    ])\n   fi\n \n-  if test x\"$enable_libstdcxx_pch\" = xyes && test x\"$pch_comp\" = xno; then\n-    enable_pch=no\n+  if test x\"$enable_libstdcxx_pch\" = xyes &&\n+     test x\"$libstdcxx_cv_pch_comp\" = xno; then\n+    enable_libstdcxx_pch=no\n   fi\n \n   AC_MSG_CHECKING([for enabled PCH])"}, {"sha": "756a81d556ebd9f5c96335ee85c6cfc82999d5a2", "filename": "libstdc++-v3/aclocal.m4", "status": "modified", "additions": 20, "deletions": 17, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118545ec26eb2c3cfe966f552b30860e35c416d3/libstdc%2B%2B-v3%2Faclocal.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118545ec26eb2c3cfe966f552b30860e35c416d3/libstdc%2B%2B-v3%2Faclocal.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Faclocal.m4?ref=118545ec26eb2c3cfe966f552b30860e35c416d3", "patch": "@@ -1406,35 +1406,38 @@ AC_ARG_ENABLE(libstdcxx_pch,\n changequote(<<, >>)dnl\n <<  --enable-libstdcxx-pch     build pre-compiled libstdc++ includes [default=>>GLIBCXX_ENABLE_PCH_DEFAULT],\n changequote([, ])dnl\n-[case \"${enableval}\" in\n+[case ${enableval} in\n  yes) enable_libstdcxx_pch=yes ;;\n  no)  enable_libstdcxx_pch=no ;;\n  *)   AC_MSG_ERROR([Unknown argument to enable/disable PCH]) ;;\n  esac],\n enable_libstdcxx_pch=GLIBCXX_ENABLE_PCH_DEFAULT)dnl\n \n   if test x$enable_libstdcxx_pch = xyes; then\n-    ac_test_CXXFLAGS=\"${CXXFLAGS+set}\"\n-    ac_save_CXXFLAGS=\"$CXXFLAGS\"\n-    CXXFLAGS='-Werror -Winvalid-pch -Wno-deprecated -x c++-header'\n-\n-    AC_MSG_CHECKING([for compiler that seems to compile .gch files])\n-    if test x${pch_comp+set} != xset; then\n-      AC_CACHE_VAL(pch_comp, [\n+    AC_CACHE_CHECK([for pch support], [libstdcxx_cv_pch_comp],[\n         AC_LANG_SAVE\n         AC_LANG_CPLUSPLUS\n-        AC_TRY_COMPILE([#include <math.h>], ,\n-                       [pch_comp=yes], [pch_comp=no])\n+\tac_save_CXXFLAGS=$CXXFLAGS\n+\tCXXFLAGS=\"$CXXFLAGS -Werror -Winvalid-pch -Wno-deprecated\"\n+\techo '#include <math.h>' > conftest.h\n+\tif ${CXX-g++} $CXXFLAGS $CPPFLAGS -x c++-header conftest.h \\\n+\t\t-o conftest.h.gch 1>&5 2>&1 &&\n+\t   echo '#error \"pch failed\"' > conftest.h &&\n+\t   echo '#include \"conftest.h\"' > conftest.C &&\n+\t   ${CXX-g++} -c $CXXFLAGS $CPPFLAGS conftest.C 1>&5 2>&1 ; then\n+\t  libstdcxx_cv_pch_comp=yes\n+\telse\n+\t  libstdcxx_cv_pch_comp=no\n+\tfi\n+\trm -f conftest*\n+\tCXXFLAGS=$ac_save_CXXFLAGS\n         AC_LANG_RESTORE\n-      ])\n-    fi\n-    AC_MSG_RESULT([$pch_comp])\n-\n-    CXXFLAGS=\"$ac_save_CXXFLAGS\"\n+    ])\n   fi\n \n-  if test x\"$enable_libstdcxx_pch\" = xyes && test x\"$pch_comp\" = xno; then\n-    enable_pch=no\n+  if test x\"$enable_libstdcxx_pch\" = xyes &&\n+     test x\"$libstdcxx_cv_pch_comp\" = xno; then\n+    enable_libstdcxx_pch=no\n   fi\n \n   AC_MSG_CHECKING([for enabled PCH])"}, {"sha": "2065859d2cf3d90b4dab754198e75bff6a7da60e", "filename": "libstdc++-v3/configure", "status": "modified", "additions": 1232, "deletions": 1230, "changes": 2462, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118545ec26eb2c3cfe966f552b30860e35c416d3/libstdc%2B%2B-v3%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118545ec26eb2c3cfe966f552b30860e35c416d3/libstdc%2B%2B-v3%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfigure?ref=118545ec26eb2c3cfe966f552b30860e35c416d3"}]}