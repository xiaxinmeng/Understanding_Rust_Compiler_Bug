{"sha": "b282ab3735d04d15fcd035c7b58f075c0a35e534", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjI4MmFiMzczNWQwNGQxNWZjZDAzNWM3YjU4ZjA3NWMwYTM1ZTUzNA==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2008-08-04T10:25:26Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2008-08-04T10:25:26Z"}, "message": "g-soccon-mingw-64.ads, [...]: New files.\n\n2008-08-04  Vasiliy Fofanov  <fofanov@adacore.com>\n\n\t* g-soccon-mingw-64.ads, system-mingw-x86_64.ads: New files.\n\n\t* gcc-interface/Makefile.in: Use 64bit-specific system files when\n\tcompiling for 64bit windows.\n\nFrom-SVN: r138605", "tree": {"sha": "300bc7f8dea47be254420638a15a8b4bb0b59860", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/300bc7f8dea47be254420638a15a8b4bb0b59860"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b282ab3735d04d15fcd035c7b58f075c0a35e534", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b282ab3735d04d15fcd035c7b58f075c0a35e534", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b282ab3735d04d15fcd035c7b58f075c0a35e534", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b282ab3735d04d15fcd035c7b58f075c0a35e534/comments", "author": null, "committer": null, "parents": [{"sha": "b59283f28dd9310e222d2b37e4092abcde1688d5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b59283f28dd9310e222d2b37e4092abcde1688d5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b59283f28dd9310e222d2b37e4092abcde1688d5"}], "stats": {"total": 477, "additions": 473, "deletions": 4}, "files": [{"sha": "f0a4eda7585568152568cbf0985a294dc3e412d6", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 41, "deletions": 0, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b282ab3735d04d15fcd035c7b58f075c0a35e534/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b282ab3735d04d15fcd035c7b58f075c0a35e534/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=b282ab3735d04d15fcd035c7b58f075c0a35e534", "patch": "@@ -1,3 +1,44 @@\n+2008-08-04  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_ch12.adb: Add comments\n+\n+\t* sem_ch4.adb (Analyze_Allocator): If the designated type is a non-null\n+\taccess type and the allocator is not initialized, warn rather than\n+\treporting an error.\n+\n+2008-08-04  Robert Dewar  <dewar@adacore.com>\n+\n+\t* exp_ch4.adb: Minor reformatting\n+\n+\t* exp_dist.adb: Minor reformatting\n+\n+\t* g-comlin.adb: Minor reformatting\n+\n+2008-08-04  Gary Dismukes  <dismukes@adacore.com>\n+\n+\t* exp_aggr.adb (Build_Record_Aggr_Code): Perform a conversion of the\n+\ttarget to the type of the aggregate in the case where the target object\n+\tis class-wide.\n+\n+\t* exp_ch5.adb (Expand_Simple_Function_Return): When the function's\n+\tresult type is class-wide and inherently limited, and the expression\n+\thas a specific type, create a return object of the specific type, for\n+\tmore efficient handling of returns of build-in-place aggregates (avoids\n+\tconversions of the class-wide return object to the specific type on\n+\tcomponent assignments).\n+\n+\t* sem_ch6.adb (Check_Return_Subtype_Indication): Suppress the error\n+\tabout a type mismatch for a class-wide function with a return object\n+\thaving a specific type when the object declaration doesn't come from\n+\tsource. Such an object can result from the expansion of a simple return.\n+\n+2008-08-04  Vasiliy Fofanov  <fofanov@adacore.com>\n+\n+\t* g-soccon-mingw-64.ads, system-mingw-x86_64.ads: New files.\n+\n+\t* gcc-interface/Makefile.in: Use 64bit-specific system files when\n+\tcompiling for 64bit windows.\n+\n 2008-08-04  Jerome Lambourg  <lambourg@adacore.com>\n \n \t* g-comlin.adb (Group_Switches): Preserve the switch order when"}, {"sha": "cc84740b15f4ca9be2a519599d667512b6745726", "filename": "gcc/ada/g-soccon-mingw-64.ads", "status": "added", "additions": 220, "deletions": 0, "changes": 220, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b282ab3735d04d15fcd035c7b58f075c0a35e534/gcc%2Fada%2Fg-soccon-mingw-64.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b282ab3735d04d15fcd035c7b58f075c0a35e534/gcc%2Fada%2Fg-soccon-mingw-64.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-soccon-mingw-64.ads?ref=b282ab3735d04d15fcd035c7b58f075c0a35e534", "patch": "@@ -0,0 +1,220 @@\n+------------------------------------------------------------------------------\n+--                                                                          --\n+--                         GNAT COMPILER COMPONENTS                         --\n+--                                                                          --\n+--               G N A T . S O C K E T S . C O N S T A N T S                --\n+--                                                                          --\n+--                                 S p e c                                  --\n+--                                                                          --\n+--          Copyright (C) 2000-2008, Free Software Foundation, Inc.         --\n+--                                                                          --\n+-- GNAT is free software;  you can  redistribute it  and/or modify it under --\n+-- terms of the  GNU General Public License as published  by the Free Soft- --\n+-- ware  Foundation;  either version 2,  or (at your option) any later ver- --\n+-- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --\n+-- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n+-- or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License --\n+-- for  more details.  You should have  received  a copy of the GNU General --\n+-- Public License  distributed with GNAT;  see file COPYING.  If not, write --\n+-- to  the  Free Software Foundation,  51  Franklin  Street,  Fifth  Floor, --\n+-- Boston, MA 02110-1301, USA.                                              --\n+--                                                                          --\n+-- As a special exception,  if other files  instantiate  generics from this --\n+-- unit, or you link  this unit with other files  to produce an executable, --\n+-- this  unit  does not  by itself cause  the resulting  executable  to  be --\n+-- covered  by the  GNU  General  Public  License.  This exception does not --\n+-- however invalidate  any other reasons why  the executable file  might be --\n+-- covered by the  GNU Public License.                                      --\n+--                                                                          --\n+-- GNAT was originally developed  by the GNAT team at  New York University. --\n+-- Extensive contributions were provided by Ada Core Technologies Inc.      --\n+--                                                                          --\n+------------------------------------------------------------------------------\n+\n+--  This package provides target dependent definitions of constant for use\n+--  by the GNAT.Sockets package (g-socket.ads). This package should not be\n+--  directly with'ed by an applications program.\n+\n+--  This is the version for x86_64-mingw32msv\n+--  This file is generated automatically, do not modify it by hand! Instead,\n+--  make changes to gen-soccon.c and re-run it on each target.\n+\n+with Interfaces.C;\n+package GNAT.Sockets.Constants is\n+\n+   --------------\n+   -- Families --\n+   --------------\n+\n+   AF_INET             : constant :=           2; --  IPv4 address family\n+   AF_INET6            : constant :=          23; --  IPv6 address family\n+\n+   -----------\n+   -- Modes --\n+   -----------\n+\n+   SOCK_STREAM         : constant :=           1; --  Stream socket\n+   SOCK_DGRAM          : constant :=           2; --  Datagram socket\n+\n+   -------------------\n+   -- Socket errors --\n+   -------------------\n+\n+   EACCES              : constant :=       10013; --  Permission denied\n+   EADDRINUSE          : constant :=       10048; --  Address already in use\n+   EADDRNOTAVAIL       : constant :=       10049; --  Cannot assign address\n+   EAFNOSUPPORT        : constant :=       10047; --  Addr family not supported\n+   EALREADY            : constant :=       10037; --  Operation in progress\n+   EBADF               : constant :=       10009; --  Bad file descriptor\n+   ECONNABORTED        : constant :=       10053; --  Connection aborted\n+   ECONNREFUSED        : constant :=       10061; --  Connection refused\n+   ECONNRESET          : constant :=       10054; --  Connection reset by peer\n+   EDESTADDRREQ        : constant :=       10039; --  Destination addr required\n+   EFAULT              : constant :=       10014; --  Bad address\n+   EHOSTDOWN           : constant :=       10064; --  Host is down\n+   EHOSTUNREACH        : constant :=       10065; --  No route to host\n+   EINPROGRESS         : constant :=       10036; --  Operation now in progress\n+   EINTR               : constant :=       10004; --  Interrupted system call\n+   EINVAL              : constant :=       10022; --  Invalid argument\n+   EIO                 : constant :=       10101; --  Input output error\n+   EISCONN             : constant :=       10056; --  Socket already connected\n+   ELOOP               : constant :=       10062; --  Too many symbolic links\n+   EMFILE              : constant :=       10024; --  Too many open files\n+   EMSGSIZE            : constant :=       10040; --  Message too long\n+   ENAMETOOLONG        : constant :=       10063; --  Name too long\n+   ENETDOWN            : constant :=       10050; --  Network is down\n+   ENETRESET           : constant :=       10052; --  Disconn. on network reset\n+   ENETUNREACH         : constant :=       10051; --  Network is unreachable\n+   ENOBUFS             : constant :=       10055; --  No buffer space available\n+   ENOPROTOOPT         : constant :=       10042; --  Protocol not available\n+   ENOTCONN            : constant :=       10057; --  Socket not connected\n+   ENOTSOCK            : constant :=       10038; --  Operation on non socket\n+   EOPNOTSUPP          : constant :=       10045; --  Operation not supported\n+   EPFNOSUPPORT        : constant :=       10046; --  Unknown protocol family\n+   EPROTONOSUPPORT     : constant :=       10043; --  Unknown protocol\n+   EPROTOTYPE          : constant :=       10041; --  Unknown protocol type\n+   ESHUTDOWN           : constant :=       10058; --  Cannot send once shutdown\n+   ESOCKTNOSUPPORT     : constant :=       10044; --  Socket type not supported\n+   ETIMEDOUT           : constant :=       10060; --  Connection timed out\n+   ETOOMANYREFS        : constant :=       10059; --  Too many references\n+   EWOULDBLOCK         : constant :=       10035; --  Operation would block\n+\n+   -----------------\n+   -- Host errors --\n+   -----------------\n+\n+   HOST_NOT_FOUND      : constant :=       11001; --  Unknown host\n+   TRY_AGAIN           : constant :=       11002; --  Host name lookup failure\n+   NO_DATA             : constant :=       11004; --  No data record for name\n+   NO_RECOVERY         : constant :=       11003; --  Non recoverable errors\n+\n+   -------------------\n+   -- Control flags --\n+   -------------------\n+\n+   FIONBIO             : constant := -2147195266; --  Set/clear non-blocking io\n+   FIONREAD            : constant :=  1074030207; --  How many bytes to read\n+\n+   --------------------\n+   -- Shutdown modes --\n+   --------------------\n+\n+   SHUT_RD             : constant :=           0; --  No more recv\n+   SHUT_WR             : constant :=           1; --  No more send\n+   SHUT_RDWR           : constant :=           2; --  No more recv/send\n+\n+   ---------------------\n+   -- Protocol levels --\n+   ---------------------\n+\n+   SOL_SOCKET          : constant :=       65535; --  Options for socket level\n+   IPPROTO_IP          : constant :=           0; --  Dummy protocol for IP\n+   IPPROTO_UDP         : constant :=          17; --  UDP\n+   IPPROTO_TCP         : constant :=           6; --  TCP\n+\n+   -------------------\n+   -- Request flags --\n+   -------------------\n+\n+   MSG_OOB             : constant :=           1; --  Process out-of-band data\n+   MSG_PEEK            : constant :=           2; --  Peek at incoming data\n+   MSG_EOR             : constant :=          -1; --  Send end of record\n+   MSG_WAITALL         : constant :=           8; --  Wait for full reception\n+   MSG_NOSIGNAL        : constant :=          -1; --  No SIGPIPE on send\n+   MSG_Forced_Flags    : constant :=           0;\n+   --  Flags set on all send(2) calls\n+\n+   --------------------\n+   -- Socket options --\n+   --------------------\n+\n+   TCP_NODELAY         : constant :=           1; --  Do not coalesce packets\n+   SO_REUSEADDR        : constant :=           4; --  Bind reuse local address\n+   SO_REUSEPORT        : constant :=          -1; --  Bind reuse port number\n+   SO_KEEPALIVE        : constant :=           8; --  Enable keep-alive msgs\n+   SO_LINGER           : constant :=         128; --  Defer close to flush data\n+   SO_BROADCAST        : constant :=          32; --  Can send broadcast msgs\n+   SO_SNDBUF           : constant :=        4097; --  Set/get send buffer size\n+   SO_RCVBUF           : constant :=        4098; --  Set/get recv buffer size\n+   SO_SNDTIMEO         : constant :=        4101; --  Emission timeout\n+   SO_RCVTIMEO         : constant :=        4102; --  Reception timeout\n+   SO_ERROR            : constant :=        4103; --  Get/clear error status\n+   IP_MULTICAST_IF     : constant :=           9; --  Set/get mcast interface\n+   IP_MULTICAST_TTL    : constant :=          10; --  Set/get multicast TTL\n+   IP_MULTICAST_LOOP   : constant :=          11; --  Set/get mcast loopback\n+   IP_ADD_MEMBERSHIP   : constant :=          12; --  Join a multicast group\n+   IP_DROP_MEMBERSHIP  : constant :=          13; --  Leave a multicast group\n+   IP_PKTINFO          : constant :=          19; --  Get datagram info\n+\n+   -------------------\n+   -- System limits --\n+   -------------------\n+\n+   IOV_MAX             : constant :=  2147483647; --  Maximum writev iovcnt\n+\n+   ----------------------\n+   -- Type definitions --\n+   ----------------------\n+\n+   --  Sizes (in bytes) of the components of struct timeval\n+\n+   SIZEOF_tv_sec       : constant :=           4; --  tv_sec\n+   SIZEOF_tv_usec      : constant :=           4; --  tv_usec\n+\n+   --  Sizes of protocol specific address types (for sockaddr.sa_len)\n+\n+   SIZEOF_sockaddr_in  : constant :=          16; --  struct sockaddr_in\n+   SIZEOF_sockaddr_in6 : constant :=          28; --  struct sockaddr_in6\n+\n+   --  Size of file descriptor sets\n+\n+   SIZEOF_fd_set       : constant :=        8200; --  fd_set\n+\n+   --  Fields of struct hostent\n+\n+   subtype H_Addrtype_T is Interfaces.C.short;\n+   subtype H_Length_T   is Interfaces.C.short;\n+\n+   ----------------------------------------\n+   -- Properties of supported interfaces --\n+   ----------------------------------------\n+\n+   Need_Netdb_Buffer   : constant :=           0; --  Need buffer for Netdb ops\n+   Has_Sockaddr_Len    : constant :=           0; --  Sockaddr has sa_len field\n+\n+   Thread_Blocking_IO : constant Boolean := True;\n+   --  Set False for contexts where socket i/o are process blocking\n+\n+   ------------------------------\n+   -- MinGW-specific constants --\n+   ------------------------------\n+\n+   --  These constants may be used only within the MinGW version of\n+   --  GNAT.Sockets.Thin.\n+\n+   WSASYSNOTREADY      : constant :=       10091; --  System not ready\n+   WSAVERNOTSUPPORTED  : constant :=       10092; --  Version not supported\n+   WSANOTINITIALISED   : constant :=       10093; --  Winsock not initialized\n+   WSAEDISCON          : constant :=       10101; --  Disconnected\n+\n+end GNAT.Sockets.Constants;"}, {"sha": "ff8ebbe52b1c20aaf89a9aab1dfbfd42c912ebbd", "filename": "gcc/ada/gcc-interface/Makefile.in", "status": "modified", "additions": 13, "deletions": 4, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b282ab3735d04d15fcd035c7b58f075c0a35e534/gcc%2Fada%2Fgcc-interface%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b282ab3735d04d15fcd035c7b58f075c0a35e534/gcc%2Fada%2Fgcc-interface%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2FMakefile.in?ref=b282ab3735d04d15fcd035c7b58f075c0a35e534", "patch": "@@ -1318,11 +1318,11 @@ ifeq ($(strip $(filter-out cygwin32% mingw32% pe,$(osys))),)\n   g-socthi.ads<g-socthi-mingw.ads \\\n   g-socthi.adb<g-socthi-mingw.adb \\\n   g-stsifd.adb<g-stsifd-sockets.adb \\\n-  g-soccon.ads<g-soccon-mingw.ads \\\n   g-soliop.ads<g-soliop-mingw.ads\n \n   ifeq ($(strip $(filter-out rtx_w32 rtx_rtss,$(THREAD_KIND))),)\n     LIBGNAT_TARGET_PAIRS += \\\n+    g-soccon.ads<g-soccon-mingw.ads \\\n     s-intman.adb<s-intman-dummy.adb \\\n     s-osinte.ads<s-osinte-rtx.ads \\\n     s-osprim.adb<s-osprim-rtx.adb \\\n@@ -1352,10 +1352,19 @@ ifeq ($(strip $(filter-out cygwin32% mingw32% pe,$(osys))),)\n     s-intman.adb<s-intman-mingw.adb \\\n     s-osinte.ads<s-osinte-mingw.ads \\\n     s-osprim.adb<s-osprim-mingw.adb \\\n-    s-taprop.adb<s-taprop-mingw.adb \\\n-    system.ads<system-mingw.ads\n+    s-taprop.adb<s-taprop-mingw.adb\n \n-    EXTRA_GNATRTL_NONTASKING_OBJS = s-win32.o s-winext.o g-regist.o\n+    ifeq ($(strip $(filter-out x86_64%,$(arch))),)\n+      LIBGNAT_TARGET_PAIRS += \\\n+        g-soccon.ads<g-soccon-mingw-64.ads \\\n+        system.ads<system-mingw-x86_64.ads\n+    else\n+      LIBGNAT_TARGET_PAIRS += \\\n+        g-soccon.ads<g-soccon-mingw.ads \\\n+        system.ads<system-mingw.ads\n+    endif\n+\n+    EXTRA_GNATRTL_NONTASKING_OBJS = s-win32.o s-win32.o g-regist.o\n     EXTRA_GNATRTL_TASKING_OBJS = a-exetim.o\n \n     MISCLIB = -lwsock32"}, {"sha": "332b283b0a0ee1dbb9bafd4368e1e9bac8186ddb", "filename": "gcc/ada/system-mingw-x86_64.ads", "status": "added", "additions": 199, "deletions": 0, "changes": 199, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b282ab3735d04d15fcd035c7b58f075c0a35e534/gcc%2Fada%2Fsystem-mingw-x86_64.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b282ab3735d04d15fcd035c7b58f075c0a35e534/gcc%2Fada%2Fsystem-mingw-x86_64.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsystem-mingw-x86_64.ads?ref=b282ab3735d04d15fcd035c7b58f075c0a35e534", "patch": "@@ -0,0 +1,199 @@\n+------------------------------------------------------------------------------\n+--                                                                          --\n+--                        GNAT RUN-TIME COMPONENTS                          --\n+--                                                                          --\n+--                               S Y S T E M                                --\n+--                                                                          --\n+--                                 S p e c                                  --\n+--                            (Windows Version)                             --\n+--                                                                          --\n+--          Copyright (C) 1992-2008, Free Software Foundation, Inc.         --\n+--                                                                          --\n+-- This specification is derived from the Ada Reference Manual for use with --\n+-- GNAT. The copyright notice above, and the license provisions that follow --\n+-- apply solely to the  contents of the part following the private keyword. --\n+--                                                                          --\n+-- GNAT is free software;  you can  redistribute it  and/or modify it under --\n+-- terms of the  GNU General Public License as published  by the Free Soft- --\n+-- ware  Foundation;  either version 2,  or (at your option) any later ver- --\n+-- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --\n+-- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n+-- or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License --\n+-- for  more details.  You should have  received  a copy of the GNU General --\n+-- Public License  distributed with GNAT;  see file COPYING.  If not, write --\n+-- to  the  Free Software Foundation,  51  Franklin  Street,  Fifth  Floor, --\n+-- Boston, MA 02110-1301, USA.                                              --\n+--                                                                          --\n+-- As a special exception,  if other files  instantiate  generics from this --\n+-- unit, or you link  this unit with other files  to produce an executable, --\n+-- this  unit  does not  by itself cause  the resulting  executable  to  be --\n+-- covered  by the  GNU  General  Public  License.  This exception does not --\n+-- however invalidate  any other reasons why  the executable file  might be --\n+-- covered by the  GNU Public License.                                      --\n+--                                                                          --\n+-- GNAT was originally developed  by the GNAT team at  New York University. --\n+-- Extensive contributions were provided by Ada Core Technologies Inc.      --\n+--                                                                          --\n+------------------------------------------------------------------------------\n+\n+package System is\n+   pragma Pure;\n+   --  Note that we take advantage of the implementation permission to make\n+   --  this unit Pure instead of Preelaborable; see RM 13.7.1(15). In Ada\n+   --  2005, this is Pure in any case (AI-362).\n+\n+   type Name is (SYSTEM_NAME_GNAT);\n+   System_Name : constant Name := SYSTEM_NAME_GNAT;\n+\n+   --  System-Dependent Named Numbers\n+\n+   Min_Int               : constant := Long_Long_Integer'First;\n+   Max_Int               : constant := Long_Long_Integer'Last;\n+\n+   Max_Binary_Modulus    : constant := 2 ** Long_Long_Integer'Size;\n+   Max_Nonbinary_Modulus : constant := 2 ** Integer'Size - 1;\n+\n+   Max_Base_Digits       : constant := Long_Long_Float'Digits;\n+   Max_Digits            : constant := Long_Long_Float'Digits;\n+\n+   Max_Mantissa          : constant := 63;\n+   Fine_Delta            : constant := 2.0 ** (-Max_Mantissa);\n+\n+   Tick                  : constant := 0.01;\n+\n+   --  Storage-related Declarations\n+\n+   type Address is private;\n+   pragma Preelaborable_Initialization (Address);\n+   Null_Address : constant Address;\n+\n+   Storage_Unit : constant := 8;\n+   Word_Size    : constant := 64;\n+   Memory_Size  : constant := 2 ** 64;\n+\n+   --  Address comparison\n+\n+   function \"<\"  (Left, Right : Address) return Boolean;\n+   function \"<=\" (Left, Right : Address) return Boolean;\n+   function \">\"  (Left, Right : Address) return Boolean;\n+   function \">=\" (Left, Right : Address) return Boolean;\n+   function \"=\"  (Left, Right : Address) return Boolean;\n+\n+   pragma Import (Intrinsic, \"<\");\n+   pragma Import (Intrinsic, \"<=\");\n+   pragma Import (Intrinsic, \">\");\n+   pragma Import (Intrinsic, \">=\");\n+   pragma Import (Intrinsic, \"=\");\n+\n+   --  Other System-Dependent Declarations\n+\n+   type Bit_Order is (High_Order_First, Low_Order_First);\n+   Default_Bit_Order : constant Bit_Order := Low_Order_First;\n+   pragma Warnings (Off, Default_Bit_Order); -- kill constant condition warning\n+\n+   --  Priority-related Declarations (RM D.1)\n+\n+   Max_Priority           : constant Positive := 30;\n+   Max_Interrupt_Priority : constant Positive := 31;\n+\n+   subtype Any_Priority       is Integer      range  0 .. 31;\n+   subtype Priority           is Any_Priority range  0 .. 30;\n+   subtype Interrupt_Priority is Any_Priority range 31 .. 31;\n+\n+   Default_Priority : constant Priority := 15;\n+\n+private\n+\n+   type Address is mod Memory_Size;\n+   Null_Address : constant Address := 0;\n+\n+   --------------------------------------\n+   -- System Implementation Parameters --\n+   --------------------------------------\n+\n+   --  These parameters provide information about the target that is used\n+   --  by the compiler. They are in the private part of System, where they\n+   --  can be accessed using the special circuitry in the Targparm unit\n+   --  whose source should be consulted for more detailed descriptions\n+   --  of the individual switch values.\n+\n+   Backend_Divide_Checks     : constant Boolean := False;\n+   Backend_Overflow_Checks   : constant Boolean := False;\n+   Command_Line_Args         : constant Boolean := True;\n+   Configurable_Run_Time     : constant Boolean := False;\n+   Denorm                    : constant Boolean := True;\n+   Duration_32_Bits          : constant Boolean := False;\n+   Exit_Status_Supported     : constant Boolean := True;\n+   Fractional_Fixed_Ops      : constant Boolean := False;\n+   Frontend_Layout           : constant Boolean := False;\n+   Machine_Overflows         : constant Boolean := False;\n+   Machine_Rounds            : constant Boolean := True;\n+   Preallocated_Stacks       : constant Boolean := False;\n+   Signed_Zeros              : constant Boolean := True;\n+   Stack_Check_Default       : constant Boolean := False;\n+   Stack_Check_Probes        : constant Boolean := True;\n+   Stack_Check_Limits        : constant Boolean := False;\n+   Support_64_Bit_Divides    : constant Boolean := True;\n+   Support_Aggregates        : constant Boolean := True;\n+   Support_Composite_Assign  : constant Boolean := True;\n+   Support_Composite_Compare : constant Boolean := True;\n+   Support_Long_Shifts       : constant Boolean := True;\n+   Always_Compatible_Rep     : constant Boolean := False;\n+   Suppress_Standard_Library : constant Boolean := False;\n+   Use_Ada_Main_Program_Name : constant Boolean := False;\n+   ZCX_By_Default            : constant Boolean := True;\n+   GCC_ZCX_Support           : constant Boolean := True;\n+\n+   ---------------------------\n+   -- Underlying Priorities --\n+   ---------------------------\n+\n+   --  Important note: this section of the file must come AFTER the\n+   --  definition of the system implementation parameters to ensure\n+   --  that the value of these parameters is available for analysis\n+   --  of the declarations here (using Rtsfind at compile time).\n+\n+   --  The underlying priorities table provides a generalized mechanism\n+   --  for mapping from Ada priorities to system priorities. In some\n+   --  cases a 1-1 mapping is not the convenient or optimal choice.\n+\n+   type Priorities_Mapping is array (Any_Priority) of Integer;\n+   pragma Suppress_Initialization (Priorities_Mapping);\n+   --  Suppress initialization in case gnat.adc specifies Normalize_Scalars\n+\n+   Underlying_Priorities : constant Priorities_Mapping :=\n+     (Priority'First ..\n+      Default_Priority - 8    => -15,\n+      Default_Priority - 7    => -7,\n+      Default_Priority - 6    => -6,\n+      Default_Priority - 5    => -5,\n+      Default_Priority - 4    => -4,\n+      Default_Priority - 3    => -3,\n+      Default_Priority - 2    => -2,\n+      Default_Priority - 1    => -1,\n+      Default_Priority        => 0,\n+      Default_Priority + 1    => 1,\n+      Default_Priority + 2    => 2,\n+      Default_Priority + 3    => 3,\n+      Default_Priority + 4    => 4,\n+      Default_Priority + 5    => 5,\n+      Default_Priority + 6 ..\n+      Priority'Last           => 6,\n+      Interrupt_Priority      => 15);\n+   --  The default mapping preserves the standard 31 priorities of the Ada\n+   --  model, but maps them using compression onto the 7 priority levels\n+   --  available in NT and on the 16 priority levels available in 2000/XP.\n+\n+   --  To replace the default values of the Underlying_Priorities mapping,\n+   --  copy this source file into your build directory, edit the file to\n+   --  reflect your desired behavior, and recompile using Makefile.adalib\n+   --  which can be found under the adalib directory of your gnat installation\n+\n+   pragma Linker_Options (\"-Wl,--stack=0x2000000\");\n+   --  This is used to change the default stack (32 MB) size for non tasking\n+   --  programs. We change this value for GNAT on Windows here because the\n+   --  binutils on this platform have switched to a too low value for Ada\n+   --  programs. Note that we also set the stack size for tasking programs in\n+   --  System.Task_Primitives.Operations.\n+\n+end System;"}]}