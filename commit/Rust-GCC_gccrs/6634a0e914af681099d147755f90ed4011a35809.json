{"sha": "6634a0e914af681099d147755f90ed4011a35809", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjYzNGEwZTkxNGFmNjgxMDk5ZDE0Nzc1NWY5MGVkNDAxMWEzNTgwOQ==", "commit": {"author": {"name": "Michael Koch", "email": "konqueror@gmx.de", "date": "2003-09-26T20:03:28Z"}, "committer": {"name": "Michael Koch", "email": "mkoch@gcc.gnu.org", "date": "2003-09-26T20:03:28Z"}, "message": "RMIClassLoader.java: Reformatted file, no functional code changes.\n\n2003-09-26  Michael Koch  <konqueror@gmx.de>\n\n\t* java/rmi/server/RMIClassLoader.java:\n\tReformatted file, no functional code changes.\n\nFrom-SVN: r71831", "tree": {"sha": "74e4522e25a7ad14aaae77906538a7095dc3d904", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/74e4522e25a7ad14aaae77906538a7095dc3d904"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6634a0e914af681099d147755f90ed4011a35809", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6634a0e914af681099d147755f90ed4011a35809", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6634a0e914af681099d147755f90ed4011a35809", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6634a0e914af681099d147755f90ed4011a35809/comments", "author": null, "committer": null, "parents": [{"sha": "fc56f7acc1f6e1d32c601054c3af3ede4d82a6db", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fc56f7acc1f6e1d32c601054c3af3ede4d82a6db", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fc56f7acc1f6e1d32c601054c3af3ede4d82a6db"}], "stats": {"total": 113, "additions": 66, "deletions": 47}, "files": [{"sha": "ec64e3ae77314cc4846537ed01d236534e14a135", "filename": "libjava/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6634a0e914af681099d147755f90ed4011a35809/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6634a0e914af681099d147755f90ed4011a35809/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=6634a0e914af681099d147755f90ed4011a35809", "patch": "@@ -1,3 +1,8 @@\n+2003-09-26  Michael Koch  <konqueror@gmx.de>\n+\n+\t* java/rmi/server/RMIClassLoader.java:\n+\tReformatted file, no functional code changes.\n+\n 2003-09-26  Sascha Brawer  <brawer@dandelis.ch>\n \n \t* java/awt/image/SinglePixelPackedSampleModel.java (createDataBuffer): "}, {"sha": "20dd7f6384bf8a5732d9e96ff8e45423d28e6570", "filename": "libjava/java/rmi/server/RMIClassLoader.java", "status": "modified", "additions": 61, "deletions": 47, "changes": 108, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6634a0e914af681099d147755f90ed4011a35809/libjava%2Fjava%2Frmi%2Fserver%2FRMIClassLoader.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6634a0e914af681099d147755f90ed4011a35809/libjava%2Fjava%2Frmi%2Fserver%2FRMIClassLoader.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Frmi%2Fserver%2FRMIClassLoader.java?ref=6634a0e914af681099d147755f90ed4011a35809", "patch": "@@ -1,5 +1,6 @@\n /* RMIClassLoader.java\n-  Copyright (c) 1996, 1997, 1998, 1999, 2002 Free Software Foundation, Inc.\n+  Copyright (c) 1996, 1997, 1998, 1999, 2002, 2003\n+  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -37,12 +38,12 @@\n \n package java.rmi.server;\n \n+import java.net.MalformedURLException;\n import java.net.URL;\n import java.net.URLConnection;\n import java.net.URLClassLoader;\n import java.io.IOException;\n import java.io.DataInputStream;\n-import java.net.MalformedURLException;\n import java.util.ArrayList;\n import java.util.Collection;\n import java.util.Collections;\n@@ -51,40 +52,47 @@\n import java.util.StringTokenizer;\n import java.util.WeakHashMap;\n \n+\n+/**\n+ * This class provides a set of public static utility methods for supporting\n+ * network-based class loading in RMI. These methods are called by RMI's\n+ * internal marshal streams to implement the dynamic class loading of types for\n+ * RMI parameters and return values.\n+ */\n public class RMIClassLoader\n {\n-\n   static private class MyClassLoader extends URLClassLoader\n   {\n-\n-    private MyClassLoader(URL[] urls, ClassLoader parent, String annotation)\n+    private MyClassLoader (URL[] urls, ClassLoader parent, String annotation)\n     {\n-      super(urls, parent);\n+      super (urls, parent);\n       this.annotation = annotation;\n     }\n \n-    private MyClassLoader(URL[] urls, ClassLoader parent)\n+    private MyClassLoader (URL[] urls, ClassLoader parent)\n     {\n       super (urls, parent);\n-      this.annotation = urlToAnnotation(urls);\n+      this.annotation = urlToAnnotation (urls);\n     }\n \n-    public static String urlToAnnotation(URL[] urls)\n+    public static String urlToAnnotation (URL[] urls)\n     {\n       if (urls.length == 0)\n-\treturn null;\n+        return null;\n \n-      StringBuffer annotation = new StringBuffer(64*urls.length);\n-      for(int i = 0; i < urls.length; i++)\n-\t{\n-\t  annotation.append(urls[i].toExternalForm());\n-\t  annotation.append(' ');\n-\t}\n+      StringBuffer annotation = new StringBuffer (64 * urls.length);\n+\n+      for (int i = 0; i < urls.length; i++)\n+      {\n+        annotation.append (urls [i].toExternalForm());\n+        annotation.append (' ');\n+      }\n \n       return annotation.toString();\n     }\n \n-    public final String getClassAnnotation(){\n+    public final String getClassAnnotation()\n+    {\n       return annotation;\n     }\n \n@@ -100,47 +108,51 @@ public final String getClassAnnotation(){\n   private static String defaultAnnotation;\n   //URL object for defaultAnnotation\n   private static URL defaultCodebase;\n+\n   //class loader for defaultAnnotation\n   private static MyClassLoader defaultLoader;\n-  \n+\n   static\n   {\n     // 89 is a nice prime number for Hashtable initial capacity\n-    cacheLoaders = new Hashtable(89);\n-    cacheAnnotations = new Hashtable(89);\n-    \n-    defaultAnnotation = System.getProperty(\"java.rmi.server.defaultAnnotation\");\n-    try \n-      {\n-\tif (defaultAnnotation != null)\n-\t  defaultCodebase = new URL(defaultAnnotation);\n-      }\n-    catch(Exception _)\n-      {\n-\tdefaultCodebase = null;\n-      }\n+    cacheLoaders = new Hashtable (89);\n+    cacheAnnotations = new Hashtable (89);\n+\n+    defaultAnnotation = System.getProperty (\"java.rmi.server.defaultAnnotation\");\n+\n+    try\n+    {\n+      if (defaultAnnotation != null)\n+        defaultCodebase = new URL (defaultAnnotation);\n+    }\n+    catch (Exception _)\n+    {\n+      defaultCodebase = null;\n+    }\n+\n     if (defaultCodebase != null)\n       {\n         defaultLoader = new MyClassLoader(new URL[]{ defaultCodebase },\n \t\t\t\t\t  null, defaultAnnotation);\n         cacheLoaders.put(defaultAnnotation, defaultLoader);\n       }\n-  }\n-  \n+    }\n+\n   /**\n    * @deprecated\n    */\n-  public static Class loadClass(String name)\n+  public static Class loadClass (String name)\n     throws MalformedURLException, ClassNotFoundException\n   {\n-    return (loadClass(\"\", name));\n+    return loadClass (\"\", name);\n   }\n \n-  public static Class loadClass(String codebases, String name) \n-    throws MalformedURLException, ClassNotFoundException \n+  public static Class loadClass (String codebases, String name)\n+    throws MalformedURLException, ClassNotFoundException\n   {\n     Class c = null;\n     ClassLoader loader = Thread.currentThread().getContextClassLoader();\n+\n     //try context class loader first\n     try \n       {\n@@ -182,16 +194,19 @@ public static String getClassAnnotation(Class cl)\n       {\n \treturn null; //??\n       }\n-\t\n+\n     if (loader instanceof MyClassLoader)\n       {\n-\treturn ((MyClassLoader)loader).getClassAnnotation();\n+        return ((MyClassLoader) loader).getClassAnnotation();\n       }\n-\t\n-    String s = (String)cacheAnnotations.get(loader);\n+\n+    String s = (String) cacheAnnotations.get (loader);\n+\n     if (s != null)\n-      return s;\n-\t    \n+      {\n+        return s;\n+      }\n+\n     if (loader instanceof URLClassLoader)\n       {\n \tURL[] urls = ((URLClassLoader)loader).getURLs();\n@@ -209,13 +224,12 @@ public static String getClassAnnotation(Class cl)\n       }\n     return null;\n   }\n-  \n+\n   /**\n    * @deprecated\n    */\n-  public static Object getSecurityContext(ClassLoader loader)\n+  public static Object getSecurityContext (ClassLoader loader)\n   {\n-    throw new Error(\"Not implemented\");\n+    throw new Error (\"Not implemented\");\n   }\n-\n }"}]}