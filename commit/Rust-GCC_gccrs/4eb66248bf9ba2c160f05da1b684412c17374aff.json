{"sha": "4eb66248bf9ba2c160f05da1b684412c17374aff", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGViNjYyNDhiZjliYTJjMTYwZjA1ZGExYjY4NDQxMmMxNzM3NGFmZg==", "commit": {"author": {"name": "Jeffrey A Law", "email": "law@cygnus.com", "date": "1997-09-18T00:31:51Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1997-09-18T00:31:51Z"}, "message": "abi64.h (LONG_MAX_SPEC): Define.\n\n        * mips/abi64.h (LONG_MAX_SPEC): Define.\n        * mips.h (LONG_MAX_SPEC): Define.\n        (CPP_SPEC): Include long_max_spec.\n        (EXTRA_SPECS): Include long_max_spec.\n\nBrought over from devo.\n\nFrom-SVN: r15531", "tree": {"sha": "2862b644b1527410e8b68ac6c0077a2caf4470b1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2862b644b1527410e8b68ac6c0077a2caf4470b1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4eb66248bf9ba2c160f05da1b684412c17374aff", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4eb66248bf9ba2c160f05da1b684412c17374aff", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4eb66248bf9ba2c160f05da1b684412c17374aff", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4eb66248bf9ba2c160f05da1b684412c17374aff/comments", "author": null, "committer": null, "parents": [{"sha": "f996e5138bb66e15678f1623438eeb9daec9ed4b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f996e5138bb66e15678f1623438eeb9daec9ed4b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f996e5138bb66e15678f1623438eeb9daec9ed4b"}], "stats": {"total": 24, "additions": 24, "deletions": 0}, "files": [{"sha": "5331d7d7e7fdba97a04c9f9b83a69485d35a20b4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4eb66248bf9ba2c160f05da1b684412c17374aff/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4eb66248bf9ba2c160f05da1b684412c17374aff/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4eb66248bf9ba2c160f05da1b684412c17374aff", "patch": "@@ -1,3 +1,10 @@\n+Wed Sep 17 18:33:59 1997  Jeffrey A Law  (law@cygnus.com)\n+\n+\t* mips/abi64.h (LONG_MAX_SPEC): Define.\n+\t* mips.h (LONG_MAX_SPEC): Define.\n+\t(CPP_SPEC): Include long_max_spec.\n+\t(EXTRA_SPECS): Include long_max_spec.\n+\n 1997-09-17  Brendan Kehoe  <brendan@lisa.cygnus.com>\n \n \t* configure.in, configure: Make sure to create the stage* and include"}, {"sha": "a3e768cdc2d276efb412395b2d90c815d5f65397", "filename": "gcc/config/mips/abi64.h", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4eb66248bf9ba2c160f05da1b684412c17374aff/gcc%2Fconfig%2Fmips%2Fabi64.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4eb66248bf9ba2c160f05da1b684412c17374aff/gcc%2Fconfig%2Fmips%2Fabi64.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fabi64.h?ref=4eb66248bf9ba2c160f05da1b684412c17374aff", "patch": "@@ -213,6 +213,9 @@ extern struct rtx_def *mips_function_value ();\n   (mips_abi == ABI_EABI && (NAMED)\t\t\t\t\t\\\n    && FUNCTION_ARG_PASS_BY_REFERENCE (CUM, MODE, TYPE, NAMED))\n \n+#undef LONG_MAX_SPEC\n+#define LONG_MAX_SPEC \"%{!mno-long64:-D__LONG_MAX__=9223372036854775807LL}\"\n+\n /* ??? Unimplemented stuff follows.  */\n \n /* ??? Add support for 16 byte/128 bit long doubles here when\n@@ -227,3 +230,5 @@ extern struct rtx_def *mips_function_value ();\n    into the field decl, so that if we use the field, we can take the value from\n    a register instead of from memory.  */\n \n+\n+"}, {"sha": "6ea1d77448f4a6a2380263d973ce0675c0b53630", "filename": "gcc/config/mips/mips.h", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4eb66248bf9ba2c160f05da1b684412c17374aff/gcc%2Fconfig%2Fmips%2Fmips.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4eb66248bf9ba2c160f05da1b684412c17374aff/gcc%2Fconfig%2Fmips%2Fmips.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.h?ref=4eb66248bf9ba2c160f05da1b684412c17374aff", "patch": "@@ -817,6 +817,16 @@ while (0)\n #define SUBTARGET_CPP_SPEC \"\"\n #endif\n \n+/* If we're using 64bit longs, then we have to define __LONG_MAX__\n+   correctly.  Similarly for 64bit ints and __INT_MAX__.  */\n+#ifndef LONG_MAX_SPEC\n+#if ((TARGET_DEFAULT | TARGET_CPU_DEFAULT) & MASK_LONG64)\n+#define LONG_MAX_SPEC \"%{!mno-long64:-D__LONG_MAX__=9223372036854775807L}\"\n+#else\n+#define LONG_MAX_SPEC \"%{mlong64:-D__LONG_MAX__=9223372036854775807L}\"\n+#endif\n+#endif\n+\n /* CPP_SPEC is the set of arguments to pass to the preprocessor.  */\n \n #ifndef CPP_SPEC\n@@ -838,6 +848,7 @@ while (0)\n %{mabi=eabi:-D__mips_eabi} \\\n %{EB:-UMIPSEL -U_MIPSEL -U__MIPSEL -U__MIPSEL__ -D_MIPSEB -D__MIPSEB -D__MIPSEB__ %{!ansi:-DMIPSEB}} \\\n %{EL:-UMIPSEB -U_MIPSEB -U__MIPSEB -U__MIPSEB__ -D_MIPSEL -D__MIPSEL -D__MIPSEL__ %{!ansi:-DMIPSEL}} \\\n+%(long_max_spec) \\\n %(subtarget_cpp_spec) \"\n #endif\n \n@@ -855,6 +866,7 @@ while (0)\n   { \"subtarget_cc1_spec\", SUBTARGET_CC1_SPEC },\t\t\t\t\\\n   { \"subtarget_cpp_spec\", SUBTARGET_CPP_SPEC },\t\t\t\t\\\n   { \"subtarget_cpp_size_spec\", SUBTARGET_CPP_SIZE_SPEC },\t\t\\\n+  { \"long_max_spec\", LONG_MAX_SPEC },\t\t\t\t\t\\\n   { \"mips_as_asm_spec\", MIPS_AS_ASM_SPEC },\t\t\t\t\\\n   { \"gas_asm_spec\", GAS_ASM_SPEC },\t\t\t\t\t\\\n   { \"target_asm_spec\", TARGET_ASM_SPEC },\t\t\t\t\\"}]}