{"sha": "b9826286455578db4b0a3b8eb511484407745797", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Yjk4MjYyODY0NTU1NzhkYjRiMGEzYjhlYjUxMTQ4NDQwNzc0NTc5Nw==", "commit": {"author": {"name": "Alexander Ivchenko", "email": "alexander.ivchenko@intel.com", "date": "2014-09-10T06:54:51Z"}, "committer": {"name": "Kirill Yukhin", "email": "kyukhin@gcc.gnu.org", "date": "2014-09-10T06:54:51Z"}, "message": "AVX-512. Add reduce, range, fpclass insn patterns.\n\ngcc/\n\t* config/i386/i386.c\n\t(ix86_expand_args_builtin): Handle avx512dq_rangepv8df_mask_round,\n\tavx512dq_rangepv16sf_mask_round, avx512dq_rangepv4df_mask,\n\tavx512dq_rangepv8sf_mask, avx512dq_rangepv2df_mask,\n\tavx512dq_rangepv4sf_mask.\n\t* config/i386/sse.md\n\t(define_c_enum \"unspec\"): Add UNSPEC_REDUCE, UNSPEC_FPCLASS,\n\tUNSPEC_RANGE.\n\t(define_insn \"<mask_codefor>reducep<mode><mask_name>\"): New.\n\t(define_insn \"reduces<mode>\"): Ditto.\n\t(define_insn \"avx512dq_rangep<mode><mask_name><round_saeonly_name>\"):\n\tDitto.\n\t(define_insn \"avx512dq_ranges<mode><round_saeonly_name>\"): Ditto.\n\t(define_insn \"avx512dq_fpclass<mode><mask_scalar_merge_name>\"): Ditto.\n\t(define_insn \"avx512dq_vmfpclass<mode>\"): Ditto..\n\n\nCo-Authored-By: Andrey Turetskiy <andrey.turetskiy@intel.com>\nCo-Authored-By: Anna Tikhonova <anna.tikhonova@intel.com>\nCo-Authored-By: Ilya Tocar <ilya.tocar@intel.com>\nCo-Authored-By: Ilya Verbin <ilya.verbin@intel.com>\nCo-Authored-By: Kirill Yukhin <kirill.yukhin@intel.com>\nCo-Authored-By: Maxim Kuznetsov <maxim.kuznetsov@intel.com>\nCo-Authored-By: Michael Zolotukhin <michael.v.zolotukhin@intel.com>\n\nFrom-SVN: r215107", "tree": {"sha": "c6822eb55a88f7ff01f0ac0ae4ea5da23707a6a2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c6822eb55a88f7ff01f0ac0ae4ea5da23707a6a2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b9826286455578db4b0a3b8eb511484407745797", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b9826286455578db4b0a3b8eb511484407745797", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b9826286455578db4b0a3b8eb511484407745797", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b9826286455578db4b0a3b8eb511484407745797/comments", "author": null, "committer": null, "parents": [{"sha": "b040ded3c6aacdac0218328a9e7245ea1352e3ec", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b040ded3c6aacdac0218328a9e7245ea1352e3ec", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b040ded3c6aacdac0218328a9e7245ea1352e3ec"}], "stats": {"total": 121, "additions": 121, "deletions": 0}, "files": [{"sha": "7668aab842045455f3baea433701261d551e170d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b9826286455578db4b0a3b8eb511484407745797/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b9826286455578db4b0a3b8eb511484407745797/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b9826286455578db4b0a3b8eb511484407745797", "patch": "@@ -1,3 +1,28 @@\n+2014-09-10  Alexander Ivchenko  <alexander.ivchenko@intel.com>\n+\t    Maxim Kuznetsov  <maxim.kuznetsov@intel.com>\n+\t    Anna Tikhonova  <anna.tikhonova@intel.com>\n+\t    Ilya Tocar  <ilya.tocar@intel.com>\n+\t    Andrey Turetskiy  <andrey.turetskiy@intel.com>\n+\t    Ilya Verbin  <ilya.verbin@intel.com>\n+\t    Kirill Yukhin  <kirill.yukhin@intel.com>\n+\t    Michael Zolotukhin  <michael.v.zolotukhin@intel.com>\n+\n+\t* config/i386/i386.c\n+\t(ix86_expand_args_builtin): Handle avx512dq_rangepv8df_mask_round,\n+\tavx512dq_rangepv16sf_mask_round, avx512dq_rangepv4df_mask,\n+\tavx512dq_rangepv8sf_mask, avx512dq_rangepv2df_mask,\n+\tavx512dq_rangepv4sf_mask.\n+\t* config/i386/sse.md\n+\t(define_c_enum \"unspec\"): Add UNSPEC_REDUCE, UNSPEC_FPCLASS,\n+\tUNSPEC_RANGE.\n+\t(define_insn \"<mask_codefor>reducep<mode><mask_name>\"): New.\n+\t(define_insn \"reduces<mode>\"): Ditto.\n+\t(define_insn \"avx512dq_rangep<mode><mask_name><round_saeonly_name>\"):\n+\tDitto.\n+\t(define_insn \"avx512dq_ranges<mode><round_saeonly_name>\"): Ditto.\n+\t(define_insn \"avx512dq_fpclass<mode><mask_scalar_merge_name>\"): Ditto.\n+\t(define_insn \"avx512dq_vmfpclass<mode>\"): Ditto..\n+\n 2014-09-10  Alexander Ivchenko  <alexander.ivchenko@intel.com>\n \t    Maxim Kuznetsov  <maxim.kuznetsov@intel.com>\n \t    Anna Tikhonova  <anna.tikhonova@intel.com>"}, {"sha": "8f45e52d9f3f38e41d9d9644f8f0932ce22ceaf9", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b9826286455578db4b0a3b8eb511484407745797/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b9826286455578db4b0a3b8eb511484407745797/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=b9826286455578db4b0a3b8eb511484407745797", "patch": "@@ -34090,6 +34090,12 @@ ix86_expand_args_builtin (const struct builtin_description *d,\n \t      case CODE_FOR_avx512vl_getmantv4df_mask:\n \t      case CODE_FOR_avx512vl_getmantv4sf_mask:\n \t      case CODE_FOR_avx512vl_getmantv2df_mask:\n+\t      case CODE_FOR_avx512dq_rangepv8df_mask_round:\n+\t      case CODE_FOR_avx512dq_rangepv16sf_mask_round:\n+\t      case CODE_FOR_avx512dq_rangepv4df_mask:\n+\t      case CODE_FOR_avx512dq_rangepv8sf_mask:\n+\t      case CODE_FOR_avx512dq_rangepv2df_mask:\n+\t      case CODE_FOR_avx512dq_rangepv4sf_mask:\n \t\terror (\"the last argument must be a 4-bit immediate\");\n \t\treturn const0_rtx;\n "}, {"sha": "78276b79670bfbcb7613160a47db0b56ce33fa4d", "filename": "gcc/config/i386/sse.md", "status": "modified", "additions": 90, "deletions": 0, "changes": 90, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b9826286455578db4b0a3b8eb511484407745797/gcc%2Fconfig%2Fi386%2Fsse.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b9826286455578db4b0a3b8eb511484407745797/gcc%2Fconfig%2Fi386%2Fsse.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsse.md?ref=b9826286455578db4b0a3b8eb511484407745797", "patch": "@@ -128,6 +128,11 @@\n   UNSPEC_SHA256MSG1\n   UNSPEC_SHA256MSG2\n   UNSPEC_SHA256RNDS2\n+\n+  ;; For AVX512DQ support\n+  UNSPEC_REDUCE\n+  UNSPEC_FPCLASS\n+  UNSPEC_RANGE\n ])\n \n (define_c_enum \"unspecv\" [\n@@ -2330,6 +2335,34 @@\n   DONE;\n })\n \n+(define_insn \"<mask_codefor>reducep<mode><mask_name>\"\n+  [(set (match_operand:VF_AVX512VL 0 \"register_operand\" \"=v\")\n+\t(unspec:VF_AVX512VL\n+\t  [(match_operand:VF_AVX512VL 1 \"nonimmediate_operand\" \"vm\")\n+\t   (match_operand:SI 2 \"const_0_to_255_operand\")]\n+\t  UNSPEC_REDUCE))]\n+  \"TARGET_AVX512DQ\"\n+  \"vreduce<ssemodesuffix>\\t{%2, %1, %0<mask_operand3>|%0<mask_operand3>, %1, %2}\"\n+  [(set_attr \"type\" \"sse\")\n+   (set_attr \"prefix\" \"evex\")\n+   (set_attr \"mode\" \"<MODE>\")])\n+\n+(define_insn \"reduces<mode>\"\n+  [(set (match_operand:VF_128 0 \"register_operand\" \"=v\")\n+\t(vec_merge:VF_128\n+\t  (unspec:VF_128\n+\t    [(match_operand:VF_128 1 \"register_operand\" \"v\")\n+\t     (match_operand:VF_128 2 \"nonimmediate_operand\" \"vm\")\n+\t     (match_operand:SI 3 \"const_0_to_255_operand\")]\n+\t    UNSPEC_REDUCE)\n+\t  (match_dup 1)\n+\t  (const_int 1)))]\n+  \"TARGET_AVX512DQ\"\n+  \"vreduce<ssescalarmodesuffix>\\t{%3, %2, %1, %0|%0, %1, %2, %3}\"\n+  [(set_attr \"type\" \"sse\")\n+   (set_attr \"prefix\" \"evex\")\n+   (set_attr \"mode\" \"<MODE>\")])\n+\n ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n ;;\n ;; Parallel floating point comparisons\n@@ -16754,6 +16787,63 @@\n    (set_attr \"memory\" \"none,load\")\n    (set_attr \"mode\" \"<sseinsnmode>\")])\n \n+(define_insn \"avx512dq_rangep<mode><mask_name><round_saeonly_name>\"\n+  [(set (match_operand:VF_AVX512VL 0 \"register_operand\" \"=v\")\n+\t(unspec:VF_AVX512VL\n+\t  [(match_operand:VF_AVX512VL 1 \"register_operand\" \"v\")\n+\t   (match_operand:VF_AVX512VL 2 \"<round_saeonly_nimm_predicate>\" \"<round_saeonly_constraint>\")\n+\t   (match_operand:SI 3 \"const_0_to_15_operand\")]\n+\t  UNSPEC_RANGE))]\n+  \"TARGET_AVX512DQ && <round_saeonly_mode512bit_condition>\"\n+  \"vrange<ssemodesuffix>\\t{<round_saeonly_mask_op4>%3, %2, %1, %0<mask_operand4>|%0<mask_operand4>, %1, %2, %3<round_saeonly_mask_op4>}\"\n+  [(set_attr \"type\" \"sse\")\n+   (set_attr \"prefix\" \"evex\")\n+   (set_attr \"mode\" \"<MODE>\")])\n+\n+(define_insn \"avx512dq_ranges<mode><round_saeonly_name>\"\n+  [(set (match_operand:VF_128 0 \"register_operand\" \"=v\")\n+\t(vec_merge:VF_128\n+\t  (unspec:VF_128\n+\t    [(match_operand:VF_128 1 \"register_operand\" \"v\")\n+\t     (match_operand:VF_128 2 \"<round_saeonly_nimm_predicate>\" \"<round_saeonly_constraint>\")\n+\t     (match_operand:SI 3 \"const_0_to_15_operand\")]\n+\t    UNSPEC_RANGE)\n+\t  (match_dup 1)\n+\t  (const_int 1)))]\n+  \"TARGET_AVX512DQ\"\n+  \"vrange<ssescalarmodesuffix>\\t{<round_saeonly_op4>%3, %2, %1, %0|%0, %1, %2, %3<round_saeonly_op4>}\"\n+  [(set_attr \"type\" \"sse\")\n+   (set_attr \"prefix\" \"evex\")\n+   (set_attr \"mode\" \"<MODE>\")])\n+\n+(define_insn \"avx512dq_fpclass<mode><mask_scalar_merge_name>\"\n+  [(set (match_operand:<avx512fmaskmode> 0 \"register_operand\" \"=Yk\")\n+          (unspec:<avx512fmaskmode>\n+            [(match_operand:VF_AVX512VL 1 \"register_operand\" \"v\")\n+             (match_operand:QI 2 \"const_0_to_255_operand\" \"n\")]\n+             UNSPEC_FPCLASS))]\n+   \"TARGET_AVX512DQ\"\n+   \"vfpclass<ssemodesuffix>\\t{%2, %1, %0<mask_scalar_merge_operand3>|%0<mask_scalar_merge_operand3>, %1, %2}\";\n+  [(set_attr \"type\" \"sse\")\n+   (set_attr \"length_immediate\" \"1\")\n+   (set_attr \"prefix\" \"evex\")\n+   (set_attr \"mode\" \"<MODE>\")])\n+\n+(define_insn \"avx512dq_vmfpclass<mode>\"\n+  [(set (match_operand:<avx512fmaskmode> 0 \"register_operand\" \"=Yk\")\n+\t(and:<avx512fmaskmode>\n+\t  (unspec:<avx512fmaskmode>\n+\t    [(match_operand:VF_128 1 \"register_operand\" \"v\")\n+             (match_operand:QI 2 \"const_0_to_255_operand\" \"n\")]\n+\t    UNSPEC_FPCLASS)\n+\t  (const_int 1)))]\n+   \"TARGET_AVX512DQ\"\n+   \"vfpclass<ssescalarmodesuffix>\\t{%2, %1, %0|%0, %1, %2}\";\n+  [(set_attr \"type\" \"sse\")\n+   (set_attr \"length_immediate\" \"1\")\n+   (set_attr \"prefix\" \"evex\")\n+   (set_attr \"mode\" \"<MODE>\")])\n+\n (define_insn \"<avx512>_getmant<mode><mask_name><round_saeonly_name>\"\n   [(set (match_operand:VF_AVX512VL 0 \"register_operand\" \"=v\")\n \t(unspec:VF_AVX512VL"}]}