{"sha": "8204210bd612ade3760c5c9eec6d6b1368dee15b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODIwNDIxMGJkNjEyYWRlMzc2MGM1YzllZWM2ZDZiMTM2OGRlZTE1Yg==", "commit": {"author": {"name": "Bud Davis", "email": "bdavis9659@comcast.net", "date": "2004-06-12T12:50:54Z"}, "committer": {"name": "Bud Davis", "email": "bdavis@gcc.gnu.org", "date": "2004-06-12T12:50:54Z"}, "message": "re PR libfortran/12839 (incorrect IO of Inf)\n\n2004-06-12  Bud Davis  <bdavis9659@comcast.net>\n\n        PR gfortran/12839\n        * gfortran.fortran-torture/execute/nan_inf_fmt.f90: New test.\n        * io/write.c(write_float): format inf and nan IAW F2003.\n\nFrom-SVN: r83024", "tree": {"sha": "b352ec80ae8b4024e59c79a5dd8215afaac2ac8e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b352ec80ae8b4024e59c79a5dd8215afaac2ac8e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8204210bd612ade3760c5c9eec6d6b1368dee15b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8204210bd612ade3760c5c9eec6d6b1368dee15b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8204210bd612ade3760c5c9eec6d6b1368dee15b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8204210bd612ade3760c5c9eec6d6b1368dee15b/comments", "author": null, "committer": null, "parents": [{"sha": "3d27dbd01aa4a707a4c179d6f4b12d2bce16d097", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3d27dbd01aa4a707a4c179d6f4b12d2bce16d097", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3d27dbd01aa4a707a4c179d6f4b12d2bce16d097"}], "stats": {"total": 113, "additions": 106, "deletions": 7}, "files": [{"sha": "ec49a6676c860226526cb9099c069bfa02bfcc11", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8204210bd612ade3760c5c9eec6d6b1368dee15b/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8204210bd612ade3760c5c9eec6d6b1368dee15b/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=8204210bd612ade3760c5c9eec6d6b1368dee15b", "patch": "@@ -1,3 +1,8 @@\n+2004-06-12  Bud Davis  <bdavis9659@comcast.net>\n+\n+\tPR gfortran/12839\n+\t* gfortran.fortran-torture/execute/nan_inf_fmt.f90: New test.\n+\n 2004-06-11  Mark Mitchell  <mark@codesourcery.com>\n \n \tPR c++/15862"}, {"sha": "84322c60679a6167b917e295871af8d2db14a71c", "filename": "gcc/testsuite/gfortran.fortran-torture/execute/nan_inf_fmt.f90", "status": "added", "additions": 79, "deletions": 0, "changes": 79, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8204210bd612ade3760c5c9eec6d6b1368dee15b/gcc%2Ftestsuite%2Fgfortran.fortran-torture%2Fexecute%2Fnan_inf_fmt.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8204210bd612ade3760c5c9eec6d6b1368dee15b/gcc%2Ftestsuite%2Fgfortran.fortran-torture%2Fexecute%2Fnan_inf_fmt.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.fortran-torture%2Fexecute%2Fnan_inf_fmt.f90?ref=8204210bd612ade3760c5c9eec6d6b1368dee15b", "patch": "@@ -0,0 +1,79 @@\n+!pr 12839- F2003 formatting of Inf /Nan \n+       implicit none\n+       character*40 l\n+       character*12 fmt\n+       real zero, pos_inf, neg_inf, nan\n+       zero = 0.0\n+\n+! need a better way of generating these floating point\n+! exceptional constants.\n+\n+       pos_inf =  1.0/zero\n+       neg_inf = -1.0/zero\n+       nan = zero/zero\n+\n+\n+! check a field width < 3\n+       fmt = '(F2.0)'\n+       write(l,fmt=fmt)pos_inf\n+       if (l.ne.'**') call abort\n+       write(l,fmt=fmt)neg_inf\n+       if (l.ne.'**') call abort\n+       write(l,fmt=fmt)nan\n+       if (l.ne.'**') call abort\n+\n+! check a field width = 3\n+       fmt = '(F3.0)'\n+       write(l,fmt=fmt)pos_inf\n+       if (l.ne.'Inf') call abort\n+       write(l,fmt=fmt)neg_inf\n+       if (l.ne.'Inf') call abort\n+       write(l,fmt=fmt)nan\n+       if (l.ne.'NaN') call abort\n+\n+! check a field width > 3\n+       fmt = '(F4.0)'\n+       write(l,fmt=fmt)pos_inf\n+       if (l.ne.'+Inf') call abort\n+       write(l,fmt=fmt)neg_inf\n+       if (l.ne.'-Inf') call abort\n+       write(l,fmt=fmt)nan\n+       if (l.ne.' NaN') call abort\n+\n+! check a field width = 7\n+       fmt = '(F7.0)'\n+       write(l,fmt=fmt)pos_inf\n+       if (l.ne.'   +Inf') call abort\n+       write(l,fmt=fmt)neg_inf\n+       if (l.ne.'   -Inf') call abort\n+       write(l,fmt=fmt)nan\n+       if (l.ne.'    NaN') call abort\n+\n+! check a field width = 8\n+       fmt = '(F8.0)'\n+       write(l,fmt=fmt)pos_inf\n+       if (l.ne.'Infinity') call abort\n+       write(l,fmt=fmt)neg_inf\n+       if (l.ne.'Infinity') call abort\n+       write(l,fmt=fmt)nan\n+       if (l.ne.'     NaN') call abort\n+\n+! check a field width = 9\n+       fmt = '(F9.0)'\n+       write(l,fmt=fmt)pos_inf\n+       if (l.ne.'+Infinity') call abort\n+       write(l,fmt=fmt)neg_inf\n+       if (l.ne.'-Infinity') call abort\n+       write(l,fmt=fmt)nan\n+       if (l.ne.'      NaN') call abort\n+\n+! check a field width = 14\n+       fmt = '(F14.0)'\n+       write(l,fmt=fmt)pos_inf\n+       if (l.ne.'     +Infinity') call abort\n+       write(l,fmt=fmt)neg_inf\n+       if (l.ne.'     -Infinity') call abort\n+       write(l,fmt=fmt)nan\n+       if (l.ne.'           NaN') call abort\n+       end\n+"}, {"sha": "a00f03faf3402524c28864eaa15a9f8746cdbfa4", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8204210bd612ade3760c5c9eec6d6b1368dee15b/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8204210bd612ade3760c5c9eec6d6b1368dee15b/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=8204210bd612ade3760c5c9eec6d6b1368dee15b", "patch": "@@ -1,3 +1,8 @@\n+2004-06-12  Bud Davis  <bdavis9659@comcast.net>\n+\n+\tPR gfortran/12839\n+\t* io/write.c(write_float): format inf and nan IAW F2003.\n+\n 2004-06-09  Bud Davis  <bdavis9659@comcaste.net>\n \n \tPR gfortran/14897"}, {"sha": "e4f597cbd040254934275ad2777aad4eb9d6421d", "filename": "libgfortran/io/write.c", "status": "modified", "additions": 17, "deletions": 7, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8204210bd612ade3760c5c9eec6d6b1368dee15b/libgfortran%2Fio%2Fwrite.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8204210bd612ade3760c5c9eec6d6b1368dee15b/libgfortran%2Fio%2Fwrite.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fio%2Fwrite.c?ref=8204210bd612ade3760c5c9eec6d6b1368dee15b", "patch": "@@ -515,23 +515,33 @@ write_float (fnode *f, const char *source, int len)\n      if (res == 0)\n        {\n          nb =  f->u.real.w;\n-         if (nb <= 4)\n-            nb = 4;\n          p = write_block (nb);\n-         memset (p, ' ' , 1);\n-         \n+         if (nb < 3)\n+         {\n+             memset (p, '*',nb);\n+             return;\n+         }\n+\n+         memset(p, ' ', nb);\n          res = isinf (n);\n          if (res != 0)\n          {\n             if (res > 0)\n                fin = '+';\n             else\n                fin = '-';\n-         \n-             memset (p + 1, fin, nb - 1);\n+\n+            if (nb > 7)\n+               memcpy(p + nb - 8, \"Infinity\", 8); \n+            else\n+               memcpy(p + nb - 3, \"Inf\", 3);\n+            if (nb < 8)\n+               memset(p + nb - 4, fin, 1);\n+            else if (nb > 8)\n+               memset(p + nb - 9, fin, 1); \n           }\n          else\n-             sprintf(p + 1, \"NaN\");\n+             memcpy(p + nb - 3, \"NaN\", 3);\n          return;\n        }\n    }"}]}