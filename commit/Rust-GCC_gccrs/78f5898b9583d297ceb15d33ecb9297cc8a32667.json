{"sha": "78f5898b9583d297ceb15d33ecb9297cc8a32667", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzhmNTg5OGI5NTgzZDI5N2NlYjE1ZDMzZWNiOTI5N2NjOGEzMjY2Nw==", "commit": {"author": {"name": "Aldy Hernandez", "email": "aldyh@redhat.com", "date": "2005-05-05T20:54:25Z"}, "committer": {"name": "David Edelsohn", "email": "dje@gcc.gnu.org", "date": "2005-05-05T20:54:25Z"}, "message": "config.gcc: Add .opt magic for the rs6000 ports.\n\n2005-05-05  Aldy Hernandez  <aldyh@redhat.com>\n\n        * config.gcc: Add .opt magic for the rs6000 ports.\n\n        * doc/invoke.texi: Document -mabi= option properly.  Document\n        -misel and -mno-sel.  Document -mspe and -mno-spe.  Document\n        -mvrsave and -mno-vrsave.  Document deprecation of -mspe= and\n        -misel=.\n\n        * config/rs6000/aix.h: Remove XL_COMPAT stuff.  Remove\n        SUBTARGET_SWITCHES and SUBSUBTARGET_SWITCHES.  Define\n        TARGET_XL_COMPAT.\n\n        * config/rs6000/aix.opt: New.\n        * config/rs6000/aix41.opt: New.\n        * config/rs6000/aix64.opt: New.\n        * config/rs6000/darwin.opt: New.\n        * config/rs6000/linux64.opt: New.\n        * config/rs6000/rs6000.opt: New.\n        * config/rs6000/sysv4.opt: New.\n\n        * config/rs6000/sysv4.h: Delete definitions of MASK_* and\n        associated TARGET_*.  Remove SUBTARGET_OPTIONS,\n        SUBTARGET_SWITCHES.\n        Define TARGET_USES_SYSV4_OPT.\n        * config/rs6000/aix41.h: Remove SUBSUBTARGET_SWITCHES.\n        * config/rs6000/aix43.h: Remove SUBSUBTARGET_SWITCHES.  Define\n        TARGET_USES_AIX64_OPT.\n        * config/rs6000/aix51.h: Same.\n        * config/rs6000/aix52.h: Same.\n        * config/rs6000/darwin.h: Remove\n        SUBTARGET_SWITCHES.  Use TARGET_ALTIVEC_VRSAVE instead of\n        rs6000_altivec_vrsave.\n        * config/rs6000/linux64.h: Use\n        rs6000_explicit_options.  Remove EXTRA_SUBTARGET_SWITCHES.\n\n        * config/rs6000/rs6000.c: Remove definitions of\n        rs6000_sched_restricted_insns_priority,\n        rs6000_long_double_size_string, rs6000_altivec_vrsave,\n        rs6000_altivec_vrsave_string, rs6000_isel, rs6000_spe,\n        rs6000_float_gprs_string, rs6000_isel_string, rs6000_spe_string,\n        rs6000_abi_string, rs6000_warn_altivec_long, rs6000_longcall,\n        rs6000_alignment_string.  Define rs6000_explicit_options.\n        (rs6000_parse_abi_options): Remove.\n        (rs6000_parse_alignment_option): Remove.\n        (rs6000_parse_float_gprs_option): Remove.\n        (rs6000_handle_option): New.  Define TARGET_HANDLE_OPTION.  Define\n        TARGET_DEFAULT_TARGET_FLAGS.\n        (rs6000_override_options): Revamp to use new .opt machinery.\n\n        * config/rs6000/rs6000.h: Remove old MASK_* and TARGET_* in favor\n        of new .opt machinery.  Remove target_flags.  Redefine\n        TARGET_MFCRF and TARGET_POWERPC64.  Remove TARGET_SWITCHES,\n        SUBTARGET_SWITCHES, TARGET_OPTIONS, SUBTARGET_OPTIONS,\n        rs6000_float_gprs_string, rs6000_isel_string, rs6000_spe_string,\n        rs6000_altivec_vrsave_string, rs6000_altivec_vrsave,\n        rs6000_longcall_switch, rs6000_default_long_calls,\n        rs6000_sched_costly_dep_str, rs6000_sched_costly_dep,\n        rs6000_warn_altivec_long, rs6000_warn_altivec_long_switch, and\n        TARGET_ALTIVEC_VRSAVE.\n\nFrom-SVN: r99284", "tree": {"sha": "b4ed7643f37e98d36a0d2abb90af9de34794493b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b4ed7643f37e98d36a0d2abb90af9de34794493b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/78f5898b9583d297ceb15d33ecb9297cc8a32667", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/78f5898b9583d297ceb15d33ecb9297cc8a32667", "html_url": "https://github.com/Rust-GCC/gccrs/commit/78f5898b9583d297ceb15d33ecb9297cc8a32667", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/78f5898b9583d297ceb15d33ecb9297cc8a32667/comments", "author": {"login": "aldyh", "id": 12937877, "node_id": "MDQ6VXNlcjEyOTM3ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/12937877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aldyh", "html_url": "https://github.com/aldyh", "followers_url": "https://api.github.com/users/aldyh/followers", "following_url": "https://api.github.com/users/aldyh/following{/other_user}", "gists_url": "https://api.github.com/users/aldyh/gists{/gist_id}", "starred_url": "https://api.github.com/users/aldyh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aldyh/subscriptions", "organizations_url": "https://api.github.com/users/aldyh/orgs", "repos_url": "https://api.github.com/users/aldyh/repos", "events_url": "https://api.github.com/users/aldyh/events{/privacy}", "received_events_url": "https://api.github.com/users/aldyh/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "7f9a7fc35803de9b61c6304eefbe65c4d9f755ec", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7f9a7fc35803de9b61c6304eefbe65c4d9f755ec", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7f9a7fc35803de9b61c6304eefbe65c4d9f755ec"}], "stats": {"total": 1561, "additions": 919, "deletions": 642}, "files": [{"sha": "3cbd31f0f659010464a0e4c1cf12c36cc4d0ce53", "filename": "gcc/ChangeLog", "status": "modified", "additions": 61, "deletions": 0, "changes": 61, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/78f5898b9583d297ceb15d33ecb9297cc8a32667/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/78f5898b9583d297ceb15d33ecb9297cc8a32667/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=78f5898b9583d297ceb15d33ecb9297cc8a32667", "patch": "@@ -1,3 +1,64 @@\n+2005-05-05  Aldy Hernandez  <aldyh@redhat.com>\n+\n+\t* config.gcc: Add .opt magic for the rs6000 ports.\n+\n+\t* doc/invoke.texi: Document -mabi= option properly.  Document\n+\t-misel and -mno-sel.  Document -mspe and -mno-spe.  Document\n+\t-mvrsave and -mno-vrsave.  Document deprecation of -mspe= and\n+\t-misel=.\n+\n+\t* config/rs6000/aix.h: Remove XL_COMPAT stuff.  Remove\n+\tSUBTARGET_SWITCHES and SUBSUBTARGET_SWITCHES.  Define\n+\tTARGET_XL_COMPAT.\n+\n+\t* config/rs6000/aix.opt: New.\n+\t* config/rs6000/aix41.opt: New.\n+\t* config/rs6000/aix64.opt: New.\n+\t* config/rs6000/darwin.opt: New.\n+\t* config/rs6000/linux64.opt: New.\n+\t* config/rs6000/rs6000.opt: New.\n+\t* config/rs6000/sysv4.opt: New.\n+\n+\t* config/rs6000/sysv4.h: Delete definitions of MASK_* and\n+\tassociated TARGET_*.  Remove SUBTARGET_OPTIONS,\n+\tSUBTARGET_SWITCHES.\n+\tDefine TARGET_USES_SYSV4_OPT.\n+\t* config/rs6000/aix41.h: Remove SUBSUBTARGET_SWITCHES.\n+\t* config/rs6000/aix43.h: Remove SUBSUBTARGET_SWITCHES.  Define\n+\tTARGET_USES_AIX64_OPT.\n+\t* config/rs6000/aix51.h: Same.\n+\t* config/rs6000/aix52.h: Same.\n+\t* config/rs6000/darwin.h: Remove\n+\tSUBTARGET_SWITCHES.  Use TARGET_ALTIVEC_VRSAVE instead of\n+\trs6000_altivec_vrsave.\n+\t* config/rs6000/linux64.h: Use\n+\trs6000_explicit_options.  Remove EXTRA_SUBTARGET_SWITCHES.\n+\n+\t* config/rs6000/rs6000.c: Remove definitions of\n+\trs6000_sched_restricted_insns_priority,\n+\trs6000_long_double_size_string, rs6000_altivec_vrsave,\n+\trs6000_altivec_vrsave_string, rs6000_isel, rs6000_spe,\n+\trs6000_float_gprs_string, rs6000_isel_string, rs6000_spe_string,\n+\trs6000_abi_string, rs6000_warn_altivec_long, rs6000_longcall,\n+\trs6000_alignment_string.  Define rs6000_explicit_options.\n+\t(rs6000_parse_abi_options): Remove.\n+\t(rs6000_parse_alignment_option): Remove.\n+\t(rs6000_parse_float_gprs_option): Remove.\n+\t(rs6000_handle_option): New.  Define TARGET_HANDLE_OPTION.  Define\n+\tTARGET_DEFAULT_TARGET_FLAGS.\n+\t(rs6000_override_options): Revamp to use new .opt machinery.\n+\n+\t* config/rs6000/rs6000.h: Remove old MASK_* and TARGET_* in favor\n+\tof new .opt machinery.  Remove target_flags.  Redefine\n+\tTARGET_MFCRF and TARGET_POWERPC64.  Remove TARGET_SWITCHES,\n+\tSUBTARGET_SWITCHES, TARGET_OPTIONS, SUBTARGET_OPTIONS,\n+\trs6000_float_gprs_string, rs6000_isel_string, rs6000_spe_string,\n+\trs6000_altivec_vrsave_string, rs6000_altivec_vrsave,\n+\trs6000_longcall_switch, rs6000_default_long_calls,\n+\trs6000_sched_costly_dep_str, rs6000_sched_costly_dep,\n+\trs6000_warn_altivec_long, rs6000_warn_altivec_long_switch, and\n+\tTARGET_ALTIVEC_VRSAVE.\n+\n 2005-05-05  Ralf Corsepius  <ralf.corsepius@rtems.org>\n \n \t* config.gcc (hppa1.1-*-rtems*): Remove."}, {"sha": "86eff35ff67ebcc3e2be08e5be9d6cb401d35173", "filename": "gcc/config.gcc", "status": "modified", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/78f5898b9583d297ceb15d33ecb9297cc8a32667/gcc%2Fconfig.gcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/78f5898b9583d297ceb15d33ecb9297cc8a32667/gcc%2Fconfig.gcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.gcc?ref=78f5898b9583d297ceb15d33ecb9297cc8a32667", "patch": "@@ -1581,10 +1581,12 @@ powerpc64-*-linux*)\n \ttest x$with_cpu != x || cpu_is_64bit=yes\n \ttest x$cpu_is_64bit != xyes || tm_file=\"${tm_file} rs6000/default64.h\"\n \ttm_file=\"rs6000/biarch64.h ${tm_file} rs6000/linux64.h\"\n+\textra_options=\"${extra_options} rs6000/sysv4.opt rs6000/linux64.opt\"\n \ttmake_file=\"rs6000/t-fprules ${tmake_file} rs6000/t-ppccomm rs6000/t-linux64\"\n \t;;\n powerpc64-*-gnu*)\n \ttm_file=\"${cpu_type}/${cpu_type}.h elfos.h svr4.h freebsd-spec.h gnu.h rs6000/sysv4.h rs6000/linux64.h rs6000/gnu.h\"\n+\textra_options=\"${extra_options} rs6000/sysv4.opt rs6000/linux64.opt\"\n \ttmake_file=\"rs6000/t-fprules t-slibgcc-elf-ver t-gnu rs6000/t-linux64\"\n \t;;\n powerpc-*-beos*)\n@@ -1596,6 +1598,7 @@ powerpc-*-beos*)\n powerpc-*-darwin*)\n \ttm_file=\"${tm_file} rs6000/darwin.h\"\n \ttmake_file=\"${tmake_file} rs6000/t-darwin\"\n+\textra_options=\"${extra_options} rs6000/darwin.opt\"\n \tcase ${target} in\n \t  *-darwin1[0-9]*) tmake_file=\"${tmake_file} rs6000/t-darwin8\" ;;\n \t  *-darwin[0-7]*) ;;\n@@ -1606,14 +1609,17 @@ powerpc-*-darwin*)\n powerpc*-*-freebsd*)\n \ttm_file=\"${tm_file} dbxelf.h elfos.h ${fbsd_tm_file} rs6000/sysv4.h rs6000/freebsd.h\"\n \ttmake_file=\"rs6000/t-fprules rs6000/t-ppcos ${tmake_file} rs6000/t-ppccomm\"\n+\textra_options=\"${extra_options} rs6000/sysv4.opt\"\n \t;;\n powerpc-*-netbsd*)\n \ttm_file=\"${tm_file} dbxelf.h elfos.h netbsd.h netbsd-elf.h freebsd-spec.h rs6000/sysv4.h rs6000/netbsd.h\"\n \ttmake_file=\"${tmake_file} rs6000/t-netbsd\"\n+\textra_options=\"${extra_options} rs6000/sysv4.opt\"\n \t;;\n powerpc-*-chorusos*)\n \ttm_file=\"${tm_file} dbxelf.h elfos.h svr4.h freebsd-spec.h rs6000/sysv4.h chorus.h\"\n \ttmake_file=\"rs6000/t-fprules rs6000/t-ppcos rs6000/t-ppccomm\"\n+\textra_options=\"${extra_options} rs6000/sysv4.opt\"\n \tcase ${enable_threads} in\n \t  yes | posix)\n \t    thread_file='posix'\n@@ -1623,43 +1629,53 @@ powerpc-*-chorusos*)\n \t;;\n powerpc-*-eabispe*)\n \ttm_file=\"${tm_file} dbxelf.h elfos.h svr4.h freebsd-spec.h rs6000/sysv4.h rs6000/eabi.h rs6000/eabispe.h\"\n+\textra_options=\"${extra_options} rs6000/sysv4.opt\"\n \ttmake_file=\"rs6000/t-spe rs6000/t-ppccomm\"\n \t;;\n powerpc-*-eabisimaltivec*)\n \ttm_file=\"${tm_file} dbxelf.h elfos.h svr4.h freebsd-spec.h rs6000/sysv4.h rs6000/eabi.h rs6000/eabisim.h rs6000/eabialtivec.h\"\n+\textra_options=\"${extra_options} rs6000/sysv4.opt\"\n \ttmake_file=\"rs6000/t-fprules rs6000/t-ppcendian rs6000/t-ppccomm\"\n \t;;\n powerpc-*-eabisim*)\n \ttm_file=\"${tm_file} dbxelf.h elfos.h svr4.h freebsd-spec.h rs6000/sysv4.h rs6000/eabi.h rs6000/eabisim.h\"\n+\textra_options=\"${extra_options} rs6000/sysv4.opt\"\n \ttmake_file=\"rs6000/t-fprules rs6000/t-ppcgas rs6000/t-ppccomm\"\n \t;;\n powerpc-*-elf*)\n \ttm_file=\"${tm_file} dbxelf.h elfos.h svr4.h freebsd-spec.h rs6000/sysv4.h\"\n+\textra_options=\"${extra_options} rs6000/sysv4.opt\"\n \ttmake_file=\"rs6000/t-fprules rs6000/t-ppcgas rs6000/t-ppccomm\"\n \tuse_fixproto=yes\n \t;;\n powerpc-*-eabialtivec*)\n \ttm_file=\"${tm_file} dbxelf.h elfos.h svr4.h freebsd-spec.h rs6000/sysv4.h rs6000/eabi.h rs6000/eabialtivec.h\"\n+\textra_options=\"${extra_options} rs6000/sysv4.opt\"\n \ttmake_file=\"rs6000/t-fprules rs6000/t-ppcendian rs6000/t-ppccomm\"\n \t;;\n powerpc-*-eabi*)\n \ttm_file=\"${tm_file} dbxelf.h elfos.h svr4.h freebsd-spec.h rs6000/sysv4.h rs6000/eabi.h\"\n+\textra_options=\"${extra_options} rs6000/sysv4.opt\"\n \ttmake_file=\"rs6000/t-fprules rs6000/t-ppcgas rs6000/t-ppccomm\"\n \t;;\n powerpc-*-rtems*)\n \ttm_file=\"${tm_file} dbxelf.h elfos.h svr4.h freebsd-spec.h rs6000/sysv4.h rs6000/eabi.h rs6000/rtems.h rtems.h\"\n+\textra_options=\"${extra_options} rs6000/sysv4.opt\"\n \ttmake_file=\"rs6000/t-fprules rs6000/t-rtems t-rtems rs6000/t-ppccomm\"\n \t;;\n powerpc-*-linux*altivec*)\n \ttm_file=\"${tm_file} dbxelf.h elfos.h svr4.h freebsd-spec.h rs6000/sysv4.h rs6000/linux.h rs6000/linuxaltivec.h\"\n+\textra_options=\"${extra_options} rs6000/sysv4.opt\"\n \ttmake_file=\"rs6000/t-fprules rs6000/t-ppcos ${tmake_file} rs6000/t-ppccomm\"\n \t;;\n powerpc-*-linux*spe*)\n \ttm_file=\"${tm_file} dbxelf.h elfos.h svr4.h freebsd-spec.h rs6000/sysv4.h rs6000/linux.h rs6000/linuxspe.h\"\n+\textra_options=\"${extra_options} rs6000/sysv4.opt\"\n \ttmake_file=\"rs6000/t-fprules rs6000/t-ppcos ${tmake_file} rs6000/t-ppccomm\"\n \t;;\n powerpc-*-linux*)\n \ttm_file=\"${tm_file} dbxelf.h elfos.h svr4.h freebsd-spec.h rs6000/sysv4.h\"\n+\textra_options=\"${extra_options} rs6000/sysv4.opt\"\n \ttmake_file=\"rs6000/t-fprules rs6000/t-ppcos ${tmake_file} rs6000/t-ppccomm\"\n \tcase ${enable_targets}:${cpu_is_64bit} in\n \t    *powerpc64* | all:* | *:yes)\n@@ -1676,6 +1692,7 @@ powerpc-*-linux*)\n \t;;\n powerpc-*-gnu-gnualtivec*)\n \ttm_file=\"${cpu_type}/${cpu_type}.h elfos.h svr4.h freebsd-spec.h gnu.h rs6000/sysv4.h rs6000/linux.h rs6000/linuxaltivec.h rs6000/gnu.h\"\n+\textra_options=\"${extra_options} rs6000/sysv4.opt\"\n \ttmake_file=\"rs6000/t-fprules rs6000/t-ppcos t-slibgcc-elf-ver t-gnu rs6000/t-ppccomm\"\n \tif test x$enable_threads = xyes; then\n \t\tthread_file='posix'\n@@ -1684,6 +1701,7 @@ powerpc-*-gnu-gnualtivec*)\n powerpc-*-gnu*)\n \ttm_file=\"${cpu_type}/${cpu_type}.h elfos.h svr4.h freebsd-spec.h gnu.h rs6000/sysv4.h rs6000/linux.h rs6000/gnu.h\"\n \ttmake_file=\"rs6000/t-fprules rs6000/t-ppcos t-slibgcc-elf-ver t-gnu rs6000/t-ppccomm\"\n+\textra_options=\"${extra_options} rs6000/sysv4.opt\"\n \tif test x$enable_threads = xyes; then\n \t\tthread_file='posix'\n \tfi\n@@ -1694,18 +1712,21 @@ powerpc-wrs-vxworks*)\n \ttm_file=\"rs6000/rs6000.h elfos.h svr4.h freebsd-spec.h rs6000/sysv4.h\"\n \ttm_file=\"${tm_file} vxworks.h rs6000/vxworks.h\"\n \ttmake_file=\"${tmake_file} rs6000/t-fprules rs6000/t-ppccomm rs6000/t-vxworks\"\n+\textra_options=\"${extra_options} rs6000/sysv4.opt\"\n \textra_headers=ppc-asm.h\n \t;;\n powerpc-wrs-windiss*)\t# Instruction-level simulator for VxWorks.\n \ttm_file=\"${tm_file} elfos.h svr4.h freebsd-spec.h rs6000/sysv4.h rs6000/windiss.h\"\n         tmake_file=\"rs6000/t-fprules rs6000/t-ppcgas rs6000/t-ppccomm\"\n+\textra_options=\"${extra_options} rs6000/sysv4.opt\"\n         thread_file=\"\"\n \tuse_fixproto=yes\n         ;;\n powerpc-*-lynxos*)\n \txm_defines=POSIX\n \ttm_file=\"${tm_file} dbxelf.h elfos.h rs6000/sysv4.h rs6000/lynx.h lynx.h\"\n \ttmake_file=\"t-lynx rs6000/t-lynx\"\n+\textra_options=\"${extra_options} rs6000/sysv4.opt lynx.opt\"\n \textra_parts=\"crtbegin.o crtbeginS.o crtend.o crtendS.o\"\n \textra_options=\"${extra_options} lynx.opt\"\n \tthread_file=lynx\n@@ -1715,45 +1736,54 @@ powerpc-*-lynxos*)\n powerpcle-*-sysv*)\n \ttm_file=\"${tm_file} dbxelf.h elfos.h svr4.h freebsd-spec.h rs6000/sysv4.h rs6000/sysv4le.h\"\n \ttmake_file=\"rs6000/t-fprules rs6000/t-ppcos rs6000/t-ppccomm\"\n+\textra_options=\"${extra_options} rs6000/sysv4.opt\"\n \tuse_fixproto=yes\n \t;;\n powerpcle-*-elf*)\n \ttm_file=\"${tm_file} dbxelf.h elfos.h svr4.h freebsd-spec.h rs6000/sysv4.h rs6000/sysv4le.h\"\n \ttmake_file=\"rs6000/t-fprules rs6000/t-ppcgas rs6000/t-ppccomm\"\n+\textra_options=\"${extra_options} rs6000/sysv4.opt\"\n \tuse_fixproto=yes\n \t;;\n powerpcle-*-eabisim*)\n \ttm_file=\"${tm_file} dbxelf.h elfos.h svr4.h freebsd-spec.h rs6000/sysv4.h rs6000/sysv4le.h rs6000/eabi.h rs6000/eabisim.h\"\n \ttmake_file=\"rs6000/t-fprules rs6000/t-ppcgas rs6000/t-ppccomm\"\n+\textra_options=\"${extra_options} rs6000/sysv4.opt\"\n \t;;\n powerpcle-*-eabi*)\n \ttm_file=\"${tm_file} dbxelf.h elfos.h svr4.h freebsd-spec.h rs6000/sysv4.h rs6000/sysv4le.h rs6000/eabi.h\"\n \ttmake_file=\"rs6000/t-fprules rs6000/t-ppcgas rs6000/t-ppccomm\"\n+\textra_options=\"${extra_options} rs6000/sysv4.opt\"\n \t;;\n powerpc-*-kaos*)\n \ttm_file=\"${tm_file} dbxelf.h elfos.h svr4.h freebsd-spec.h rs6000/sysv4.h kaos.h rs6000/kaos-ppc.h\"\n \ttmake_file=\"rs6000/t-fprules rs6000/t-ppcgas rs6000/t-ppccomm\"\n+\textra_options=\"${extra_options} rs6000/sysv4.opt\"\n \t;;\n powerpcle-*-kaos*)\n \ttm_file=\"${tm_file} dbxelf.h elfos.h svr4.h freebsd-spec.h rs6000/sysv4.h rs6000/sysv4le.h kaos.h rs6000/kaos-ppc.h\"\n \ttmake_file=\"rs6000/t-fprules rs6000/t-ppcgas rs6000/t-ppccomm\"\n+\textra_options=\"${extra_options} rs6000/sysv4.opt\"\n \t;;\n rs6000-ibm-aix4.[12]* | powerpc-ibm-aix4.[12]*)\n \ttm_file=\"${tm_file} rs6000/aix.h rs6000/aix41.h rs6000/xcoff.h\"\n \ttmake_file=\"rs6000/t-fprules rs6000/t-newas\"\n+\textra_options=\"${extra_options} rs6000/aix.opt rs6000/aix41.opt\"\n \tuse_collect2=yes\n \textra_headers=\n \tuse_fixproto=yes\n \t;;\n rs6000-ibm-aix4.[3456789]* | powerpc-ibm-aix4.[3456789]*)\n \ttm_file=\"rs6000/biarch64.h ${tm_file} rs6000/aix.h rs6000/aix43.h rs6000/xcoff.h\"\n \ttmake_file=rs6000/t-aix43\n+\textra_options=\"${extra_options} rs6000/aix.opt rs6000/aix64.opt\"\n \tuse_collect2=yes\n \tthread_file='aix'\n \textra_headers=\n \t;;\n rs6000-ibm-aix5.1.* | powerpc-ibm-aix5.1.*)\n \ttm_file=\"rs6000/biarch64.h ${tm_file} rs6000/aix.h rs6000/aix51.h rs6000/xcoff.h\"\n+\textra_options=\"${extra_options} rs6000/aix.opt rs6000/aix64.opt\"\n \ttmake_file=rs6000/t-aix43\n \tuse_collect2=yes\n \tthread_file='aix'\n@@ -1762,6 +1792,7 @@ rs6000-ibm-aix5.1.* | powerpc-ibm-aix5.1.*)\n rs6000-ibm-aix[56789].* | powerpc-ibm-aix[56789].*)\n \ttm_file=\"${tm_file} rs6000/aix.h rs6000/aix52.h rs6000/xcoff.h\"\n \ttmake_file=rs6000/t-aix52\n+\textra_options=\"${extra_options} rs6000/aix.opt rs6000/aix64.opt\"\n \tuse_collect2=yes\n \tthread_file='aix'\n \textra_headers="}, {"sha": "8b5aadf49b3069c3bcdb2b50f57c8e7490af59ee", "filename": "gcc/config/rs6000/aix.h", "status": "modified", "additions": 2, "deletions": 11, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/78f5898b9583d297ceb15d33ecb9297cc8a32667/gcc%2Fconfig%2Frs6000%2Faix.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/78f5898b9583d297ceb15d33ecb9297cc8a32667/gcc%2Fconfig%2Frs6000%2Faix.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Faix.h?ref=78f5898b9583d297ceb15d33ecb9297cc8a32667", "patch": "@@ -195,17 +195,8 @@\n #define JUMP_TABLES_IN_TEXT_SECTION 1\n \n /* Enable AIX XL compiler calling convention breakage compatibility.  */\n-#undef TARGET_XL_COMPAT\n-#define MASK_XL_COMPAT\t\t0x40000000\n-#define\tTARGET_XL_COMPAT\t(target_flags & MASK_XL_COMPAT)\n-#undef  SUBTARGET_SWITCHES\n-#define SUBTARGET_SWITCHES\t\t\\\n-  {\"xl-compat\", \tMASK_XL_COMPAT,\t\t\t\t\t\\\n-   N_(\"Conform more closely to IBM XLC semantics\") },\t\t\\\n-  {\"no-xl-compat\",\t- MASK_XL_COMPAT,\t\t\t\t\t\\\n-   N_(\"Default GCC semantics that differ from IBM XLC\") },\t\\\n-  SUBSUBTARGET_SWITCHES\n-#define SUBSUBTARGET_SWITCHES \n+#undef  TARGET_XL_COMPAT\n+#define\tTARGET_XL_COMPAT\thas_xl_compat_option\n \n /* Define any extra SPECS that the compiler needs to generate.  */\n #undef  SUBTARGET_EXTRA_SPECS"}, {"sha": "5b950c9dbdbed7a9555537c92750d39b06126de9", "filename": "gcc/config/rs6000/aix.opt", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/78f5898b9583d297ceb15d33ecb9297cc8a32667/gcc%2Fconfig%2Frs6000%2Faix.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/78f5898b9583d297ceb15d33ecb9297cc8a32667/gcc%2Fconfig%2Frs6000%2Faix.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Faix.opt?ref=78f5898b9583d297ceb15d33ecb9297cc8a32667", "patch": "@@ -0,0 +1,25 @@\n+; AIX options.\n+;\n+; Copyright (C) 2005 Free Software Foundation, Inc.\n+; Contributed by Aldy Hernandez <aldy@quesejoda.com>.\n+;\n+; This file is part of GCC.\n+;\n+; GCC is free software; you can redistribute it and/or modify it under\n+; the terms of the GNU General Public License as published by the Free\n+; Software Foundation; either version 2, or (at your option) any later\n+; version.\n+;\n+; GCC is distributed in the hope that it will be useful, but WITHOUT\n+; ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+; or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+; License for more details.\n+;\n+; You should have received a copy of the GNU General Public License\n+; along with GCC; see the file COPYING.  If not, write to the Free\n+; Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n+; 02111-1307, USA.\n+\n+mxl-compat\n+Target Var(has_xl_compat_option)\n+Conform more closely to IBM XLC semantics"}, {"sha": "d57e49fc44d2600900213c9f5a305a4a7023ce1c", "filename": "gcc/config/rs6000/aix41.h", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/78f5898b9583d297ceb15d33ecb9297cc8a32667/gcc%2Fconfig%2Frs6000%2Faix41.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/78f5898b9583d297ceb15d33ecb9297cc8a32667/gcc%2Fconfig%2Frs6000%2Faix41.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Faix41.h?ref=78f5898b9583d297ceb15d33ecb9297cc8a32667", "patch": "@@ -22,11 +22,6 @@\n    Free Software Foundation, 59 Temple Place - Suite 330, Boston,\n    MA 02111-1307, USA.  */\n \n-#undef  SUBSUBTARGET_SWITCHES\n-#define SUBSUBTARGET_SWITCHES\t\t\\\n-  {\"pe\",\t\t0,\t\t\t\t\t\\\n-   N_(\"Support message passing with the Parallel Environment\") },\n-\n #undef ASM_SPEC\n #define ASM_SPEC \"-u %(asm_cpu)\"\n "}, {"sha": "8c41445b2fdea32e6b33d341dbb9175c66d12b77", "filename": "gcc/config/rs6000/aix41.opt", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/78f5898b9583d297ceb15d33ecb9297cc8a32667/gcc%2Fconfig%2Frs6000%2Faix41.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/78f5898b9583d297ceb15d33ecb9297cc8a32667/gcc%2Fconfig%2Frs6000%2Faix41.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Faix41.opt?ref=78f5898b9583d297ceb15d33ecb9297cc8a32667", "patch": "@@ -0,0 +1,25 @@\n+; Options for AIX4.1.\n+;\n+; Copyright (C) 2005 Free Software Foundation, Inc.\n+; Contributed by Aldy Hernandez <aldy@quesejoda.com>.\n+;\n+; This file is part of GCC.\n+;\n+; GCC is free software; you can redistribute it and/or modify it under\n+; the terms of the GNU General Public License as published by the Free\n+; Software Foundation; either version 2, or (at your option) any later\n+; version.\n+;\n+; GCC is distributed in the hope that it will be useful, but WITHOUT\n+; ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+; or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+; License for more details.\n+;\n+; You should have received a copy of the GNU General Public License\n+; along with GCC; see the file COPYING.  If not, write to the Free\n+; Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n+; 02111-1307, USA.\n+\n+mpe\n+Target Report RejectNegative Var(internal_nothing_1)\n+Support message passing with the Parallel Environment"}, {"sha": "fbf3d9c4fc5d66691fa0ab0a8bd82318231a3685", "filename": "gcc/config/rs6000/aix43.h", "status": "modified", "additions": 3, "deletions": 11, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/78f5898b9583d297ceb15d33ecb9297cc8a32667/gcc%2Fconfig%2Frs6000%2Faix43.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/78f5898b9583d297ceb15d33ecb9297cc8a32667/gcc%2Fconfig%2Frs6000%2Faix43.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Faix43.h?ref=78f5898b9583d297ceb15d33ecb9297cc8a32667", "patch": "@@ -21,17 +21,6 @@\n    Free Software Foundation, 59 Temple Place - Suite 330, Boston,\n    MA 02111-1307, USA.  */\n \n-/* AIX 4.3 and above support 64-bit executables.  */\n-#undef  SUBSUBTARGET_SWITCHES\n-#define SUBSUBTARGET_SWITCHES\t\t\t\t\t\t\\\n-  {\"aix64\", \t\tMASK_64BIT | MASK_POWERPC64\t\t\t\\\n-\t\t\t  | MASK_POWERPC | MASK_PPC_GFXOPT,\t\t\\\n-   N_(\"Compile for 64-bit pointers\") },\t\t\t\t\t\\\n-  {\"aix32\",\t\t- (MASK_64BIT | MASK_POWERPC64),\t\t\\\n-   N_(\"Compile for 32-bit pointers\") },\t\t\t\t\t\\\n-  {\"pe\",\t\t0,\t\t\t\t\t\t\\\n-   N_(\"Support message passing with the Parallel Environment\") },\n-\n /* Sometimes certain combinations of command options do not make sense\n    on a particular target machine.  You can define a macro\n    `OVERRIDE_OPTIONS' to take account of this.  This macro, if\n@@ -184,3 +173,6 @@ do {\t\t\t\t\t\t\t\t\t\\\n    .set directives.  We handle this by deferring the output of .set\n    directives to the end of the compilation unit.  */\n #define TARGET_DEFERRED_OUTPUT_DEFS(DECL,TARGET) true\n+\n+/* This target uses the aix64.opt file.  */\n+#define TARGET_USES_AIX64_OPT 1"}, {"sha": "64b87f18e9deaff48c705c0bf04934e0edb004f0", "filename": "gcc/config/rs6000/aix51.h", "status": "modified", "additions": 2, "deletions": 11, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/78f5898b9583d297ceb15d33ecb9297cc8a32667/gcc%2Fconfig%2Frs6000%2Faix51.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/78f5898b9583d297ceb15d33ecb9297cc8a32667/gcc%2Fconfig%2Frs6000%2Faix51.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Faix51.h?ref=78f5898b9583d297ceb15d33ecb9297cc8a32667", "patch": "@@ -20,17 +20,6 @@\n    Free Software Foundation, 59 Temple Place - Suite 330, Boston,\n    MA 02111-1307, USA.  */\n \n-/* AIX V5 and above support 64-bit executables.  */\n-#undef  SUBSUBTARGET_SWITCHES\n-#define SUBSUBTARGET_SWITCHES\t\t\t\t\t\t\\\n-  {\"aix64\", \t\tMASK_64BIT | MASK_POWERPC64\t\t\t\\\n-\t\t\t  | MASK_POWERPC | MASK_PPC_GFXOPT,\t\t\\\n-   N_(\"Compile for 64-bit pointers\") },\t\t\t\t\t\\\n-  {\"aix32\",\t\t- (MASK_64BIT | MASK_POWERPC64),\t\t\\\n-   N_(\"Compile for 32-bit pointers\") },\t\t\t\t\t\\\n-  {\"pe\",\t\t0,\t\t\t\t\t\t\\\n-   N_(\"Support message passing with the Parallel Environment\") },\n-\n /* Sometimes certain combinations of command options do not make sense\n    on a particular target machine.  You can define a macro\n    `OVERRIDE_OPTIONS' to take account of this.  This macro, if\n@@ -193,3 +182,5 @@ do {\t\t\t\t\t\t\t\t\t\\\n #undef TARGET_C99_FUNCTIONS\n #define TARGET_C99_FUNCTIONS  1\n \n+/* This target uses the aix64.opt file.  */\n+#define TARGET_USES_AIX64_OPT 1"}, {"sha": "ed2614089f3fe01a22490169b9468a9185c2bec5", "filename": "gcc/config/rs6000/aix52.h", "status": "modified", "additions": 3, "deletions": 11, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/78f5898b9583d297ceb15d33ecb9297cc8a32667/gcc%2Fconfig%2Frs6000%2Faix52.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/78f5898b9583d297ceb15d33ecb9297cc8a32667/gcc%2Fconfig%2Frs6000%2Faix52.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Faix52.h?ref=78f5898b9583d297ceb15d33ecb9297cc8a32667", "patch": "@@ -20,17 +20,6 @@\n    Free Software Foundation, 59 Temple Place - Suite 330, Boston,\n    MA 02111-1307, USA.  */\n \n-/* AIX V5 and above support 64-bit executables.  */\n-#undef  SUBSUBTARGET_SWITCHES\n-#define SUBSUBTARGET_SWITCHES\t\t\t\t\t\t\\\n-  {\"aix64\", \t\tMASK_64BIT | MASK_POWERPC64\t\t\t\\\n-\t\t\t  | MASK_POWERPC | MASK_PPC_GFXOPT,\t\t\\\n-   N_(\"Compile for 64-bit pointers\") },\t\t\t\t\t\\\n-  {\"aix32\",\t\t- (MASK_64BIT | MASK_POWERPC64),\t\t\\\n-   N_(\"Compile for 32-bit pointers\") },\t\t\t\t\t\\\n-  {\"pe\",\t\t0,\t\t\t\t\t\t\\\n-   N_(\"Support message passing with the Parallel Environment\") },\n-\n /* Sometimes certain combinations of command options do not make sense\n    on a particular target machine.  You can define a macro\n    `OVERRIDE_OPTIONS' to take account of this.  This macro, if\n@@ -188,3 +177,6 @@ do {\t\t\t\t\t\t\t\t\t\\\n #ifndef _AIX52\n extern long long int    atoll(const char *);  \n #endif\n+\n+/* This target uses the aix64.opt file.  */\n+#define TARGET_USES_AIX64_OPT 1"}, {"sha": "8ef8638c135c2496c87000beba20e9e4205c0b8a", "filename": "gcc/config/rs6000/aix64.opt", "status": "added", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/78f5898b9583d297ceb15d33ecb9297cc8a32667/gcc%2Fconfig%2Frs6000%2Faix64.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/78f5898b9583d297ceb15d33ecb9297cc8a32667/gcc%2Fconfig%2Frs6000%2Faix64.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Faix64.opt?ref=78f5898b9583d297ceb15d33ecb9297cc8a32667", "patch": "@@ -0,0 +1,33 @@\n+; Options for the 64-bit flavor of AIX.\n+;\n+; Copyright (C) 2005 Free Software Foundation, Inc.\n+; Contributed by Aldy Hernandez <aldy@quesejoda.com>.\n+;\n+; This file is part of GCC.\n+;\n+; GCC is free software; you can redistribute it and/or modify it under\n+; the terms of the GNU General Public License as published by the Free\n+; Software Foundation; either version 2, or (at your option) any later\n+; version.\n+;\n+; GCC is distributed in the hope that it will be useful, but WITHOUT\n+; ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+; or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+; License for more details.\n+;\n+; You should have received a copy of the GNU General Public License\n+; along with GCC; see the file COPYING.  If not, write to the Free\n+; Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n+; 02111-1307, USA.\n+\n+maix64\n+Target Report RejectNegative Mask(64BIT)\n+Compile for 64-bit pointers\n+\n+maix32\n+Target Report RejectNegative InverseMask(64BIT)\n+Compile for 32-bit pointers\n+\n+mpe\n+Target Report RejectNegative Var(internal_nothing_1)\n+Support message passing with the Parallel Environment"}, {"sha": "c8c629fec30a34b71ccf8fe531f5bf1a33db8aec", "filename": "gcc/config/rs6000/darwin.h", "status": "modified", "additions": 1, "deletions": 13, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/78f5898b9583d297ceb15d33ecb9297cc8a32667/gcc%2Fconfig%2Frs6000%2Fdarwin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/78f5898b9583d297ceb15d33ecb9297cc8a32667/gcc%2Fconfig%2Frs6000%2Fdarwin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fdarwin.h?ref=78f5898b9583d297ceb15d33ecb9297cc8a32667", "patch": "@@ -63,25 +63,13 @@\n   while (0)\n \n \n-/*  */\n-#undef\tSUBTARGET_SWITCHES\n-#define SUBTARGET_SWITCHES\t\t\t\t\t\t\\\n-  { \"64\",     MASK_64BIT | MASK_POWERPC64, \\\n-        N_(\"Generate 64-bit code\") }, \\\n-  { \"32\",     - (MASK_64BIT | MASK_POWERPC64), \\\n-        N_(\"Generate 32-bit code\") }, \\\n-  {\"dynamic-no-pic\",\tMASK_MACHO_DYNAMIC_NO_PIC,\t\t\t\\\n-      N_(\"Generate code suitable for executables (NOT shared libs)\")},\t\\\n-  {\"no-dynamic-no-pic\",\t-MASK_MACHO_DYNAMIC_NO_PIC, \"\"},\n-\n-\n /* The Darwin ABI always includes AltiVec, can't be (validly) turned\n    off.  */\n \n #define SUBTARGET_OVERRIDE_OPTIONS\t\t\t\t\t\\\n do {\t\t\t\t\t\t\t\t\t\\\n   rs6000_altivec_abi = 1;\t\t\t\t\t\t\\\n-  rs6000_altivec_vrsave = 1;\t\t\t\t\t\t\\\n+  TARGET_ALTIVEC_VRSAVE = 1;\t\t\t\t\t\t\\\n   if (DEFAULT_ABI == ABI_DARWIN)\t\t\t\t\t\\\n   {\t\t\t\t\t\t\t\t\t\\\n     if (MACHO_DYNAMIC_NO_PIC_P)\t\t\t\t\t\t\\"}, {"sha": "5eeb609e0d2d65636e5bb1b79519bd128d4639bb", "filename": "gcc/config/rs6000/darwin.opt", "status": "added", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/78f5898b9583d297ceb15d33ecb9297cc8a32667/gcc%2Fconfig%2Frs6000%2Fdarwin.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/78f5898b9583d297ceb15d33ecb9297cc8a32667/gcc%2Fconfig%2Frs6000%2Fdarwin.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fdarwin.opt?ref=78f5898b9583d297ceb15d33ecb9297cc8a32667", "patch": "@@ -0,0 +1,33 @@\n+; Darwin options for PPC port.\n+;\n+; Copyright (C) 2005 Free Software Foundation, Inc.\n+; Contributed by Aldy Hernandez <aldy@quesejoda.com>.\n+;\n+; This file is part of GCC.\n+;\n+; GCC is free software; you can redistribute it and/or modify it under\n+; the terms of the GNU General Public License as published by the Free\n+; Software Foundation; either version 2, or (at your option) any later\n+; version.\n+;\n+; GCC is distributed in the hope that it will be useful, but WITHOUT\n+; ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+; or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+; License for more details.\n+;\n+; You should have received a copy of the GNU General Public License\n+; along with GCC; see the file COPYING.  If not, write to the Free\n+; Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n+; 02111-1307, USA.\n+\n+m64\n+Target RejectNegative Mask(64BIT)\n+Generate 64-bit code\n+\n+m32\n+Target RejectNegative InverseMask(64BIT)\n+Generate 32-bit code\n+\n+mdynamic-no-pic\n+Target Report Mask(MACHO_DYNAMIC_NO_PIC)\n+Generate code suitable for executables (NOT shared libs)"}, {"sha": "84081c6f66f365ea828ec9faa6492975449db3c9", "filename": "gcc/config/rs6000/linux64.h", "status": "modified", "additions": 1, "deletions": 9, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/78f5898b9583d297ceb15d33ecb9297cc8a32667/gcc%2Fconfig%2Frs6000%2Flinux64.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/78f5898b9583d297ceb15d33ecb9297cc8a32667/gcc%2Fconfig%2Frs6000%2Flinux64.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Flinux64.h?ref=78f5898b9583d297ceb15d33ecb9297cc8a32667", "patch": "@@ -78,7 +78,7 @@ extern int dot_symbols;\n #define\tSUBSUBTARGET_OVERRIDE_OPTIONS\t\t\t\t\\\n   do\t\t\t\t\t\t\t\t\\\n     {\t\t\t\t\t\t\t\t\\\n-      if (rs6000_alignment_string == 0)\t\t\t\t\\\n+      if (!rs6000_explicit_options.alignment)\t\t\t\\\n \trs6000_alignment_flags = MASK_ALIGN_NATURAL;\t\t\\\n       if (TARGET_64BIT)\t\t\t\t\t\t\\\n \t{\t\t\t\t\t\t\t\\\n@@ -214,14 +214,6 @@ extern int dot_symbols;\n    account for arg save/restore code added just for _mcount.  */\n #define TARGET_PROFILE_KERNEL\t(target_flags & MASK_PROFILE_KERNEL)\n \n-/* Override sysv4.h.  */\n-#undef\tEXTRA_SUBTARGET_SWITCHES\n-#define EXTRA_SUBTARGET_SWITCHES\t\t\t\t\t\\\n-  {\"profile-kernel\",\t MASK_PROFILE_KERNEL,\t\t\t\t\\\n-   N_(\"Call mcount for profiling before a function prologue\") },\t\\\n-  {\"no-profile-kernel\",\t-MASK_PROFILE_KERNEL,\t\t\t\t\\\n-   N_(\"Call mcount for profiling after a function prologue\") },\n-\n /* We use glibc _mcount for profiling.  */\n #define NO_PROFILE_COUNTERS TARGET_64BIT\n #define PROFILE_HOOK(LABEL) \\"}, {"sha": "6028b325fc74b0cb5b0fe18eccffa0be79fbe083", "filename": "gcc/config/rs6000/linux64.opt", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/78f5898b9583d297ceb15d33ecb9297cc8a32667/gcc%2Fconfig%2Frs6000%2Flinux64.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/78f5898b9583d297ceb15d33ecb9297cc8a32667/gcc%2Fconfig%2Frs6000%2Flinux64.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Flinux64.opt?ref=78f5898b9583d297ceb15d33ecb9297cc8a32667", "patch": "@@ -0,0 +1,25 @@\n+; Options for 64-bit PowerPC Linux.\n+;\n+; Copyright (C) 2005 Free Software Foundation, Inc.\n+; Contributed by Aldy Hernandez <aldy@quesejoda.com>.\n+;\n+; This file is part of GCC.\n+;\n+; GCC is free software; you can redistribute it and/or modify it under\n+; the terms of the GNU General Public License as published by the Free\n+; Software Foundation; either version 2, or (at your option) any later\n+; version.\n+;\n+; GCC is distributed in the hope that it will be useful, but WITHOUT\n+; ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+; or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+; License for more details.\n+;\n+; You should have received a copy of the GNU General Public License\n+; along with GCC; see the file COPYING.  If not, write to the Free\n+; Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n+; 02111-1307, USA.\n+\n+mprofile-kernel\n+Target Report Mask(PROFILE_KERNEL)\n+Call mcount for profiling before a function prologue"}, {"sha": "a0d15fd758d69b502022e0a19d2ed57d484c43cf", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 268, "deletions": 195, "changes": 463, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/78f5898b9583d297ceb15d33ecb9297cc8a32667/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/78f5898b9583d297ceb15d33ecb9297cc8a32667/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=78f5898b9583d297ceb15d33ecb9297cc8a32667", "patch": "@@ -130,11 +130,6 @@ static GTY(()) bool rs6000_always_hint;\n /* Schedule instructions for group formation.  */\n static GTY(()) bool rs6000_sched_groups;\n \n-/* Support adjust_priority scheduler hook\n-   and -mprioritize-restricted-insns= option.  */\n-const char *rs6000_sched_restricted_insns_priority_str;\n-int rs6000_sched_restricted_insns_priority;\n-\n /* Support for -msched-costly-dep option.  */\n const char *rs6000_sched_costly_dep_str;\n enum rs6000_dependence_cost rs6000_sched_costly_dep;\n@@ -147,42 +142,20 @@ enum rs6000_nop_insertion rs6000_sched_insert_nops;\n static GTY(()) tree altivec_builtin_mask_for_load;\n \n /* Size of long double */\n-const char *rs6000_long_double_size_string;\n int rs6000_long_double_type_size;\n \n /* Whether -mabi=altivec has appeared */\n int rs6000_altivec_abi;\n \n-/* Whether VRSAVE instructions should be generated.  */\n-int rs6000_altivec_vrsave;\n-\n-/* String from -mvrsave= option.  */\n-const char *rs6000_altivec_vrsave_string;\n-\n /* Nonzero if we want SPE ABI extensions.  */\n int rs6000_spe_abi;\n \n-/* Whether isel instructions should be generated.  */\n-int rs6000_isel;\n-\n-/* Whether SPE simd instructions should be generated.  */\n-int rs6000_spe;\n-\n /* Nonzero if floating point operations are done in the GPRs.  */\n int rs6000_float_gprs = 0;\n \n /* Nonzero if we want Darwin's struct-by-value-in-regs ABI.  */\n int rs6000_darwin64_abi;\n \n-/* String from -mfloat-gprs=.  */\n-const char *rs6000_float_gprs_string;\n-\n-/* String from -misel=.  */\n-const char *rs6000_isel_string;\n-\n-/* String from -mspe=.  */\n-const char *rs6000_spe_string;\n-\n /* Set to nonzero once AIX common-mode calls have been defined.  */\n static GTY(()) int common_mode_defined;\n \n@@ -216,9 +189,6 @@ const char *rs6000_tls_size_string;\n /* ABI enumeration available for subtarget to use.  */\n enum rs6000_abi rs6000_current_abi;\n \n-/* ABI string from -mabi= option.  */\n-const char *rs6000_abi_string;\n-\n /* Whether to use variant of AIX ABI for PowerPC64 Linux.  */\n int dot_symbols;\n \n@@ -235,9 +205,6 @@ bool rs6000_hard_regno_mode_ok_p[NUM_MACHINE_MODES][FIRST_PSEUDO_REGISTER];\n tree rs6000_builtin_types[RS6000_BTI_MAX];\n tree rs6000_builtin_decls[RS6000_BUILTIN_COUNT];\n \n-int rs6000_warn_altivec_long = 1;\t\t/* On by default. */\n-const char *rs6000_warn_altivec_long_switch;\n-\n const char *rs6000_traceback_name;\n static enum {\n   traceback_default = 0,\n@@ -253,19 +220,20 @@ char toc_label_name[10];\n /* Alias set for saves and restores from the rs6000 stack.  */\n static GTY(()) int rs6000_sr_alias_set;\n \n-/* Call distance, overridden by -mlongcall and #pragma longcall(1).\n-   The only place that looks at this is rs6000_set_default_type_attributes;\n-   everywhere else should rely on the presence or absence of a longcall\n-   attribute on the function declaration.  Exception: init_cumulative_args\n-   looks at it too, for libcalls.  */\n-int rs6000_default_long_calls;\n-const char *rs6000_longcall_switch;\n-\n /* Control alignment for fields within structures.  */\n /* String from -malign-XXXXX.  */\n-const char *rs6000_alignment_string;\n int rs6000_alignment_flags;\n \n+/* True for any options that were explicitly set.  */\n+struct {\n+  bool alignment;\t\t/* True if -malign- was used.  */\n+  bool abi;\t\t\t/* True if -mabi= was used.  */\n+  bool spe;\t\t\t/* True if -mspe= was used.  */\n+  bool float_gprs;\t\t/* True if -mfloat-gprs= was used.  */\n+  bool isel;\t\t\t/* True if -misel was used. */\n+  bool long_double;\t        /* True if -mlong-double- was used.  */\n+} rs6000_explicit_options;\n+\n struct builtin_description\n {\n   /* mask is not const because we're going to alter it below.  This\n@@ -700,11 +668,9 @@ static rtx altivec_expand_predicate_builtin (enum insn_code,\n \t\t\t\t\t     const char *, tree, rtx);\n static rtx altivec_expand_lv_builtin (enum insn_code, tree, rtx);\n static rtx altivec_expand_stv_builtin (enum insn_code, tree);\n-static void rs6000_parse_abi_options (void);\n-static void rs6000_parse_alignment_option (void);\n+static bool rs6000_handle_option (size_t, const char *, int);\n static void rs6000_parse_tls_size_option (void);\n static void rs6000_parse_yes_no_option (const char *, const char *, int *);\n-static void rs6000_parse_float_gprs_option (void);\n static int first_altivec_reg_to_save (void);\n static unsigned int compute_vrsave_mask (void);\n static void compute_save_world_info (rs6000_stack_t *info_ptr);\n@@ -992,6 +958,13 @@ static const char alt_reg_names[][8] =\n #undef TARGET_INVALID_ARG_FOR_UNPROTOTYPED_FN\n #define TARGET_INVALID_ARG_FOR_UNPROTOTYPED_FN invalid_arg_for_unprototyped_fn\n \n+#undef TARGET_HANDLE_OPTION\n+#define TARGET_HANDLE_OPTION rs6000_handle_option\n+\n+#undef TARGET_DEFAULT_TARGET_FLAGS\n+#define TARGET_DEFAULT_TARGET_FLAGS \\\n+  (TARGET_DEFAULT | MASK_SCHED_PROLOG)\n+\n /* MPC604EUM 3.5.2 Weak Consistency between Multiple Processors\n    The PowerPC architecture requires only weak consistency among\n    processors--that is, memory accesses between processors need not be\n@@ -1271,24 +1244,16 @@ rs6000_override_options (const char *default_cpu)\n \t       rs6000_traceback_name);\n     }\n \n-  /* Set size of long double */\n-  rs6000_long_double_type_size = RS6000_DEFAULT_LONG_DOUBLE_SIZE;\n-  if (rs6000_long_double_size_string)\n-    {\n-      char *tail;\n-      int size = strtol (rs6000_long_double_size_string, &tail, 10);\n-      if (*tail != '\\0' || (size != 64 && size != 128))\n-\terror (\"Unknown switch -mlong-double-%s\",\n-\t       rs6000_long_double_size_string);\n-      else\n-\trs6000_long_double_type_size = size;\n-    }\n+  if (!rs6000_explicit_options.long_double)\n+    rs6000_long_double_type_size = RS6000_DEFAULT_LONG_DOUBLE_SIZE;\n \n   /* Set Altivec ABI as default for powerpc64 linux.  */\n   if (TARGET_ELF && TARGET_64BIT)\n     {\n       rs6000_altivec_abi = 1;\n-      rs6000_altivec_vrsave = 1;\n+#if TARGET_ALTIVEC_VRSAVE != 0\n+      TARGET_ALTIVEC_VRSAVE = 1;\n+#endif\n     }\n \n   /* Set the Darwin64 ABI as default for 64-bit Darwin.  */\n@@ -1302,21 +1267,6 @@ rs6000_override_options (const char *default_cpu)\n       rs6000_alignment_flags = MASK_ALIGN_NATURAL;\n     }\n \n-  /* Handle -mabi= options.  */\n-  rs6000_parse_abi_options ();\n-\n-  /* Handle -malign-XXXXX option.  */\n-  rs6000_parse_alignment_option ();\n-\n-  rs6000_parse_float_gprs_option ();\n-\n-  /* Handle generic -mFOO=YES/NO options.  */\n-  rs6000_parse_yes_no_option (\"vrsave\", rs6000_altivec_vrsave_string,\n-\t\t\t      &rs6000_altivec_vrsave);\n-  rs6000_parse_yes_no_option (\"isel\", rs6000_isel_string,\n-\t\t\t      &rs6000_isel);\n-  rs6000_parse_yes_no_option (\"spe\", rs6000_spe_string, &rs6000_spe);\n-\n   /* Handle -mtls-size option.  */\n   rs6000_parse_tls_size_option ();\n \n@@ -1339,26 +1289,21 @@ rs6000_override_options (const char *default_cpu)\n \t MASK_STRING above when optimizing for size.  */\n       if ((target_flags & MASK_STRING) != 0)\n \ttarget_flags = target_flags & ~MASK_STRING;\n-\n-      /* No SPE means 64-bit long doubles, even if an E500.  */\n-      if (rs6000_spe_string != 0\n-\t  && !strcmp (rs6000_spe_string, \"no\"))\n-\trs6000_long_double_type_size = 64;\n     }\n   else if (rs6000_select[1].string != NULL)\n     {\n       /* For the powerpc-eabispe configuration, we set all these by\n \t default, so let's unset them if we manually set another\n \t CPU that is not the E500.  */\n-      if (rs6000_abi_string == 0)\n+      if (!rs6000_explicit_options.abi)\n \trs6000_spe_abi = 0;\n-      if (rs6000_spe_string == 0)\n+      if (!rs6000_explicit_options.spe)\n \trs6000_spe = 0;\n-      if (rs6000_float_gprs_string == 0)\n+      if (!rs6000_explicit_options.float_gprs)\n \trs6000_float_gprs = 0;\n-      if (rs6000_isel_string == 0)\n+      if (!rs6000_explicit_options.isel)\n \trs6000_isel = 0;\n-      if (rs6000_long_double_size_string == 0)\n+      if (!rs6000_explicit_options.long_double)\n \trs6000_long_double_type_size = RS6000_DEFAULT_LONG_DOUBLE_SIZE;\n     }\n \n@@ -1367,43 +1312,18 @@ rs6000_override_options (const char *default_cpu)\n   rs6000_sched_groups = (rs6000_cpu == PROCESSOR_POWER4\n \t\t\t || rs6000_cpu == PROCESSOR_POWER5);\n \n-  /* Handle -m(no-)longcall option.  This is a bit of a cheap hack,\n-     using TARGET_OPTIONS to handle a toggle switch, but we're out of\n-     bits in target_flags so TARGET_SWITCHES cannot be used.\n-     Assumption here is that rs6000_longcall_switch points into the\n-     text of the complete option, rather than being a copy, so we can\n-     scan back for the presence or absence of the no- modifier.  */\n-  if (rs6000_longcall_switch)\n-    {\n-      const char *base = rs6000_longcall_switch;\n-      while (base[-1] != 'm') base--;\n-\n-      if (*rs6000_longcall_switch != '\\0')\n-\terror (\"invalid option %qs\", base);\n-      rs6000_default_long_calls = (base[0] != 'n');\n-    }\n-\n-  /* Handle -m(no-)warn-altivec-long similarly.  */\n-  if (rs6000_warn_altivec_long_switch)\n-    {\n-      const char *base = rs6000_warn_altivec_long_switch;\n-      while (base[-1] != 'm') base--;\n-\n-      if (*rs6000_warn_altivec_long_switch != '\\0')\n-\terror (\"invalid option %qs\", base);\n-      rs6000_warn_altivec_long = (base[0] != 'n');\n-    }\n-\n-  /* Handle -mprioritize-restricted-insns option.  */\n+  /* ?? I see no need for this.  This variable was always initialized to 0,\n+     except when explicitly set.  It's not set in any .h file either.\n   rs6000_sched_restricted_insns_priority\n     = (rs6000_sched_groups ? 1 : 0);\n-  if (rs6000_sched_restricted_insns_priority_str)\n-    rs6000_sched_restricted_insns_priority =\n-      atoi (rs6000_sched_restricted_insns_priority_str);\n+  */\n \n   /* Handle -msched-costly-dep option.  */\n+  /* ?? Same goes for this.  When would rs6000_sched_costly_dep ever have\n+     a nonzero value upon entry to this function.  ??\n   rs6000_sched_costly_dep\n     = (rs6000_sched_groups ? store_to_load_dep_costly : no_dep_costly);\n+  */\n   if (rs6000_sched_costly_dep_str)\n     {\n       if (! strcmp (rs6000_sched_costly_dep_str, \"no\"))\n@@ -1604,87 +1524,6 @@ rs6000_parse_yes_no_option (const char *name, const char *value, int *flag)\n     error (\"unknown -m%s= option specified: '%s'\", name, value);\n }\n \n-/* Handle -mabi= options.  */\n-static void\n-rs6000_parse_abi_options (void)\n-{\n-  if (rs6000_abi_string == 0)\n-    return;\n-  else if (! strcmp (rs6000_abi_string, \"altivec\"))\n-    {\n-      rs6000_altivec_abi = 1;\n-      rs6000_spe_abi = 0;\n-    }\n-  else if (! strcmp (rs6000_abi_string, \"no-altivec\"))\n-    rs6000_altivec_abi = 0;\n-  else if (! strcmp (rs6000_abi_string, \"spe\"))\n-    {\n-      rs6000_spe_abi = 1;\n-      rs6000_altivec_abi = 0;\n-      if (!TARGET_SPE_ABI)\n-\terror (\"not configured for ABI: '%s'\", rs6000_abi_string);\n-    }\n-\n-  /* These are here for testing during development only, do not\n-     document in the manual please.  */\n-  else if (! strcmp (rs6000_abi_string, \"d64\"))\n-    {\n-      rs6000_darwin64_abi = 1;\n-      warning (0, \"Using darwin64 ABI\");\n-    }\n-  else if (! strcmp (rs6000_abi_string, \"d32\"))\n-    {\n-      rs6000_darwin64_abi = 0;\n-      warning (0, \"Using old darwin ABI\");\n-    }\n-\n-  else if (! strcmp (rs6000_abi_string, \"no-spe\"))\n-    rs6000_spe_abi = 0;\n-  else\n-    error (\"unknown ABI specified: '%s'\", rs6000_abi_string);\n-}\n-\n-/* Handle -mfloat-gprs= options.  */\n-static void\n-rs6000_parse_float_gprs_option (void)\n-{\n-  if (rs6000_float_gprs_string == 0)\n-    return;\n-  else if (! strcmp (rs6000_float_gprs_string, \"yes\")\n-\t   || ! strcmp (rs6000_float_gprs_string, \"single\"))\n-    rs6000_float_gprs = 1;\n-  else if (! strcmp (rs6000_float_gprs_string, \"double\"))\n-    rs6000_float_gprs = 2;\n-  else if (! strcmp (rs6000_float_gprs_string, \"no\"))\n-    rs6000_float_gprs = 0;\n-  else\n-    error (\"invalid option for -mfloat-gprs\");\n-}\n-\n-/* Handle -malign-XXXXXX options.  */\n-static void\n-rs6000_parse_alignment_option (void)\n-{\n-  if (rs6000_alignment_string == 0)\n-    return;\n-  else if (! strcmp (rs6000_alignment_string, \"power\"))\n-    {\n-      /* On 64-bit Darwin, power alignment is ABI-incompatible with\n-\t some C library functions, so warn about it. The flag may be\n-\t useful for performance studies from time to time though, so\n-\t don't disable it entirely.  */\n-      if (DEFAULT_ABI == ABI_DARWIN && TARGET_64BIT)\n-\twarning (0, \"-malign-power is not supported for 64-bit Darwin;\"\n-\t\t \" it is incompatible with the installed C and C++ libraries\");\n-      rs6000_alignment_flags = MASK_ALIGN_POWER;\n-    }\n-  else if (! strcmp (rs6000_alignment_string, \"natural\"))\n-    rs6000_alignment_flags = MASK_ALIGN_NATURAL;\n-  else\n-    error (\"unknown -malign-XXXXX option specified: '%s'\",\n-\t   rs6000_alignment_string);\n-}\n-\n /* Validate and record the size specified with the -mtls-size option.  */\n \n static void\n@@ -1706,6 +1545,240 @@ void\n optimization_options (int level ATTRIBUTE_UNUSED, int size ATTRIBUTE_UNUSED)\n {\n }\n+\n+/* Implement TARGET_HANDLE_OPTION.  */\n+\n+static bool\n+rs6000_handle_option (size_t code, const char *arg, int value)\n+{\n+  switch (code)\n+    {\n+    case OPT_mno_power:\n+      target_flags &= ~(MASK_POWER | MASK_POWER2\n+\t\t\t| MASK_MULTIPLE | MASK_STRING);\n+      break;\n+    case OPT_mno_powerpc:\n+      target_flags &= ~(MASK_POWERPC | MASK_PPC_GPOPT\n+\t\t\t| MASK_PPC_GFXOPT | MASK_POWERPC64);\n+      break;\n+    case OPT_mfull_toc:\n+      target_flags &= ~(MASK_MINIMAL_TOC | MASK_NO_FP_IN_TOC\n+\t\t\t| MASK_NO_SUM_IN_TOC);\n+#ifdef TARGET_USES_SYSV4_OPT\n+      /* Note, V.4 no longer uses a normal TOC, so make -mfull-toc, be\n+\t just the same as -mminimal-toc.  */\n+      target_flags |= MASK_MINIMAL_TOC;\n+#endif\n+      break;\n+\n+#ifdef TARGET_USES_SYSV4_OPT\n+    case OPT_mtoc:\n+      /* Make -mtoc behave like -mminimal-toc.  */\n+      target_flags |= MASK_MINIMAL_TOC;\n+      break;\n+#endif\n+\n+#ifdef TARGET_USES_AIX64_OPT\n+    case OPT_maix64:\n+#else\n+    case OPT_m64:\n+#endif\n+      target_flags |= MASK_POWERPC64 | MASK_POWERPC | MASK_PPC_GFXOPT;\n+      break;\n+\n+#ifdef TARGET_USES_AIX64_OPT\n+    case OPT_maix32:\n+#else\n+    case OPT_m32:\n+#endif\n+      target_flags &= ~MASK_POWERPC64;\n+      break;\n+\n+    case OPT_minsert_sched_nops_:\n+      rs6000_sched_insert_nops_str = arg;\n+      break;\n+\n+    case OPT_mminimal_toc:\n+      if (value == 1)\n+\t{\n+\t  target_flags &= ~MASK_NO_FP_IN_TOC;\n+\t  target_flags &= ~MASK_NO_SUM_IN_TOC;\n+\t}\n+      break;\n+\n+    case OPT_mpower:\n+      if (value == 1)\n+\ttarget_flags |= (MASK_MULTIPLE | MASK_STRING);\n+      break;\n+\n+    case OPT_mpower2:\n+      if (value == 1)\n+\ttarget_flags |= (MASK_POWER | MASK_MULTIPLE | MASK_STRING);\n+      break;\n+\n+    case OPT_mpowerpc_gpopt:\n+    case OPT_mpowerpc_gfxopt:\n+      if (value == 1)\n+\ttarget_flags |= MASK_POWERPC;\n+      break;\n+\n+#if TARGET_ALTIVEC_VRSAVE != 0\n+    case OPT_mvrsave_:\n+      rs6000_parse_yes_no_option (\"vrsave\", arg, &(TARGET_ALTIVEC_VRSAVE));\n+      break;\n+#endif\n+\n+    case OPT_misel_:\n+      rs6000_explicit_options.isel = true;\n+      rs6000_parse_yes_no_option (\"isel\", arg, &(rs6000_isel));\n+      break;\n+\n+    case OPT_mspe_:\n+      rs6000_explicit_options.spe = true;\n+      rs6000_parse_yes_no_option (\"spe\", arg, &(rs6000_spe));\n+      /* No SPE means 64-bit long doubles, even if an E500.  */\n+      if (!rs6000_spe)\n+\trs6000_long_double_type_size = 64;\n+      break;\n+\n+    case OPT_mdebug_:\n+      rs6000_debug_name = arg;\n+      break;\n+\n+#ifdef TARGET_USES_SYSV4_OPT\n+    case OPT_mcall_:\n+      rs6000_abi_name = arg;\n+      break;\n+\n+    case OPT_msdata_:\n+      rs6000_sdata_name = arg;\n+      break;\n+\n+    case OPT_mtls_size_:\n+      rs6000_tls_size_string = arg;\n+      break;\n+\n+    case OPT_mrelocatable:\n+      if (value == 1)\n+\ttarget_flags |= MASK_MINIMAL_TOC | MASK_NO_FP_IN_TOC;\n+      break;\n+\n+    case OPT_mrelocatable_lib:\n+      if (value == 1)\n+\ttarget_flags |= MASK_RELOCATABLE | MASK_MINIMAL_TOC\n+\t  | MASK_NO_FP_IN_TOC;\n+      else\n+\ttarget_flags &= ~MASK_RELOCATABLE;\n+      break;\n+#endif\n+\n+    case OPT_mabi_:\n+      rs6000_explicit_options.abi = true;\n+      if (!strcmp (arg, \"altivec\"))\n+\t{\n+\t  rs6000_altivec_abi = 1;\n+\t  rs6000_spe_abi = 0;\n+\t}\n+      else if (! strcmp (arg, \"no-altivec\"))\n+\trs6000_altivec_abi = 0;\n+      else if (! strcmp (arg, \"spe\"))\n+\t{\n+\t  rs6000_spe_abi = 1;\n+\t  rs6000_altivec_abi = 0;\n+\t  if (!TARGET_SPE_ABI)\n+\t    error (\"not configured for ABI: '%s'\", arg);\n+\t}\n+      else if (! strcmp (arg, \"no-spe\"))\n+\trs6000_spe_abi = 0;\n+\n+      /* These are here for testing during development only, do not\n+\t document in the manual please.  */\n+      else if (! strcmp (arg, \"d64\"))\n+\t{\n+\t  rs6000_darwin64_abi = 1;\n+\t  warning (0, \"Using darwin64 ABI\");\n+\t}\n+      else if (! strcmp (arg, \"d32\"))\n+\t{\n+\t  rs6000_darwin64_abi = 0;\n+\t  warning (0, \"Using old darwin ABI\");\n+\t}\n+\n+      else\n+\t{\n+\t  error (\"unknown ABI specified: '%s'\", arg);\n+\t  return false;\n+\t}\n+      break;\n+\n+    case OPT_mcpu_:\n+      rs6000_select[1].string = arg;\n+      break;\n+\n+    case OPT_mtune_:\n+      rs6000_select[2].string = arg;\n+      break;\n+\n+    case OPT_mtraceback_:\n+      rs6000_traceback_name = arg;\n+      break;\n+\n+    case OPT_mfloat_gprs_:\n+      rs6000_explicit_options.float_gprs = true;\n+      if (! strcmp (arg, \"yes\") || ! strcmp (arg, \"single\"))\n+\trs6000_float_gprs = 1;\n+      else if (! strcmp (arg, \"double\"))\n+\trs6000_float_gprs = 2;\n+      else if (! strcmp (arg, \"no\"))\n+\trs6000_float_gprs = 0;\n+      else\n+\t{\n+\t  error (\"invalid option for -mfloat-gprs: '%s'\", arg);\n+\t  return false;\n+\t}\n+      break;\n+\n+    case OPT_mlong_double_:\n+      rs6000_explicit_options.long_double = true;\n+      rs6000_long_double_type_size = RS6000_DEFAULT_LONG_DOUBLE_SIZE;\n+      if (value != 64 && value != 128)\n+\t{\n+\t  error (\"Unknown switch -mlong-double-%s\", arg);\n+\t  rs6000_long_double_type_size = RS6000_DEFAULT_LONG_DOUBLE_SIZE;\n+\t  return false;\n+\t}\n+      else\n+\trs6000_long_double_type_size = value;\n+      break;\n+\n+    case OPT_msched_costly_dep_:\n+      rs6000_sched_costly_dep_str = arg;\n+      break;\n+\n+    case OPT_malign_:\n+      rs6000_explicit_options.alignment = true;\n+      if (! strcmp (arg, \"power\"))\n+\t{\n+\t  /* On 64-bit Darwin, power alignment is ABI-incompatible with\n+\t     some C library functions, so warn about it. The flag may be\n+\t     useful for performance studies from time to time though, so\n+\t     don't disable it entirely.  */\n+\t  if (DEFAULT_ABI == ABI_DARWIN && TARGET_64BIT)\n+\t    warning (0, \"-malign-power is not supported for 64-bit Darwin;\"\n+\t\t     \" it is incompatible with the installed C and C++ libraries\");\n+\t  rs6000_alignment_flags = MASK_ALIGN_POWER;\n+\t}\n+      else if (! strcmp (arg, \"natural\"))\n+\trs6000_alignment_flags = MASK_ALIGN_NATURAL;\n+      else\n+\t{\n+\t  error (\"unknown -malign-XXXXX option specified: '%s'\", arg);\n+\t  return false;\n+\t}\n+      break;\n+    }\n+  return true;\n+}\n \f\n /* Do anything needed at the start of the asm file.  */\n "}, {"sha": "dbcd848e650ab0e335a9f963defdd85eb1b311cd", "filename": "gcc/config/rs6000/rs6000.h", "status": "modified", "additions": 7, "deletions": 268, "changes": 275, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/78f5898b9583d297ceb15d33ecb9297cc8a32667/gcc%2Fconfig%2Frs6000%2Frs6000.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/78f5898b9583d297ceb15d33ecb9297cc8a32667/gcc%2Fconfig%2Frs6000%2Frs6000.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.h?ref=78f5898b9583d297ceb15d33ecb9297cc8a32667", "patch": "@@ -128,117 +128,15 @@\n \n /* Architecture type.  */\n \n-extern int target_flags;\n+/* Define TARGET_MFCRF if the target assembler does not suppport the\n+   optional field operand for mfcr.  */\n \n-/* Use POWER architecture instructions and MQ register.  */\n-#define MASK_POWER\t\t0x00000001\n-\n-/* Use POWER2 extensions to POWER architecture.  */\n-#define MASK_POWER2\t\t0x00000002\n-\n-/* Use PowerPC architecture instructions.  */\n-#define MASK_POWERPC\t\t0x00000004\n-\n-/* Use PowerPC General Purpose group optional instructions, e.g. fsqrt.  */\n-#define MASK_PPC_GPOPT\t\t0x00000008\n-\n-/* Use PowerPC Graphics group optional instructions, e.g. fsel.  */\n-#define MASK_PPC_GFXOPT\t\t0x00000010\n-\n-/* Use PowerPC-64 architecture instructions.  */\n-#define MASK_POWERPC64\t\t0x00000020\n-\n-/* Use revised mnemonic names defined for PowerPC architecture.  */\n-#define MASK_NEW_MNEMONICS\t0x00000040\n-\n-/* Disable placing fp constants in the TOC; can be turned on when the\n-   TOC overflows.  */\n-#define MASK_NO_FP_IN_TOC\t0x00000080\n-\n-/* Disable placing symbol+offset constants in the TOC; can be turned on when\n-   the TOC overflows.  */\n-#define MASK_NO_SUM_IN_TOC\t0x00000100\n-\n-/* Output only one TOC entry per module.  Normally linking fails if\n-   there are more than 16K unique variables/constants in an executable.  With\n-   this option, linking fails only if there are more than 16K modules, or\n-   if there are more than 16K unique variables/constant in a single module.\n-\n-   This is at the cost of having 2 extra loads and one extra store per\n-   function, and one less allocable register.  */\n-#define MASK_MINIMAL_TOC\t0x00000200\n-\n-/* Nonzero for the 64 bit ABIs: longs and pointers are 64 bits.  The\n-   chip is running in \"64-bit mode\", in which CR0 is set in dot\n-   operations based on all 64 bits of the register, bdnz works on 64-bit\n-   ctr, lr is 64 bits, and so on.  Requires MASK_POWERPC64.  */\n-#define MASK_64BIT\t\t0x00000400\n-\n-/* Disable use of FPRs.  */\n-#define MASK_SOFT_FLOAT\t\t0x00000800\n-\n-/* Enable load/store multiple, even on PowerPC */\n-#define MASK_MULTIPLE\t\t0x00001000\n-\n-/* Use string instructions for block moves */\n-#define MASK_STRING\t\t0x00002000\n-\n-/* Disable update form of load/store */\n-#define MASK_NO_UPDATE\t\t0x00004000\n-\n-/* Disable fused multiply/add operations */\n-#define MASK_NO_FUSED_MADD\t0x00008000\n-\n-/* Nonzero if we need to schedule the prolog and epilog.  */\n-#define MASK_SCHED_PROLOG\t0x00010000\n-\n-/* Use AltiVec instructions.  */\n-#define MASK_ALTIVEC\t\t0x00020000\n-\n-/* Return small structures in memory (as the AIX ABI requires).  */\n-#define MASK_AIX_STRUCT_RET\t0x00040000\n-\n-/* Use single field mfcr instruction.  */\n-#define MASK_MFCRF\t\t0x00080000\n-\n-/* The only remaining free bits are 0x00600000.  linux64.h uses\n-   0x00100000, and sysv4.h uses 0x00800000 -> 0x40000000.\n-   0x80000000 is not available because target_flags is signed.  */\n-\n-#define TARGET_POWER\t\t(target_flags & MASK_POWER)\n-#define TARGET_POWER2\t\t(target_flags & MASK_POWER2)\n-#define TARGET_POWERPC\t\t(target_flags & MASK_POWERPC)\n-#define TARGET_PPC_GPOPT\t(target_flags & MASK_PPC_GPOPT)\n-#define TARGET_PPC_GFXOPT\t(target_flags & MASK_PPC_GFXOPT)\n-#define TARGET_NEW_MNEMONICS\t(target_flags & MASK_NEW_MNEMONICS)\n-#define TARGET_NO_FP_IN_TOC\t(target_flags & MASK_NO_FP_IN_TOC)\n-#define TARGET_NO_SUM_IN_TOC\t(target_flags & MASK_NO_SUM_IN_TOC)\n-#define TARGET_MINIMAL_TOC\t(target_flags & MASK_MINIMAL_TOC)\n-#define TARGET_64BIT\t\t(target_flags & MASK_64BIT)\n-#define TARGET_SOFT_FLOAT\t(target_flags & MASK_SOFT_FLOAT)\n-#define TARGET_MULTIPLE\t\t(target_flags & MASK_MULTIPLE)\n-#define TARGET_STRING\t\t(target_flags & MASK_STRING)\n-#define TARGET_NO_UPDATE\t(target_flags & MASK_NO_UPDATE)\n-#define TARGET_NO_FUSED_MADD\t(target_flags & MASK_NO_FUSED_MADD)\n-#define TARGET_SCHED_PROLOG\t(target_flags & MASK_SCHED_PROLOG)\n-#define TARGET_ALTIVEC\t\t(target_flags & MASK_ALTIVEC)\n-#define TARGET_AIX_STRUCT_RET\t(target_flags & MASK_AIX_STRUCT_RET)\n-\n-/* Define TARGET_MFCRF if the target assembler supports the optional\n-   field operand for mfcr and the target processor supports the\n-   instruction.  */\n-\n-#ifdef HAVE_AS_MFCRF\n-#define TARGET_MFCRF\t\t(target_flags & MASK_MFCRF)\n-#else\n+#ifndef HAVE_AS_MFCRF\n+#undef TARGET_MFCRF\n #define TARGET_MFCRF 0\n #endif\n \n-\n #define TARGET_32BIT\t\t(! TARGET_64BIT)\n-#define TARGET_HARD_FLOAT\t(! TARGET_SOFT_FLOAT)\n-#define TARGET_UPDATE\t\t(! TARGET_NO_UPDATE)\n-#define TARGET_FUSED_MADD\t(! TARGET_NO_FUSED_MADD)\n \n /* Emit a dtp-relative reference to a TLS variable.  */\n \n@@ -258,126 +156,20 @@ extern int target_flags;\n #ifdef IN_LIBGCC2\n /* For libgcc2 we make sure this is a compile time constant */\n #if defined (__64BIT__) || defined (__powerpc64__)\n+#undef TARGET_POWERPC64\n #define TARGET_POWERPC64\t1\n #else\n+#undef TARGET_POWERPC64\n #define TARGET_POWERPC64\t0\n #endif\n #else\n-#define TARGET_POWERPC64\t(target_flags & MASK_POWERPC64)\n+    /* The option machinery will define this.  */\n #endif\n \n #define TARGET_XL_COMPAT 0\n \n-/* Run-time compilation parameters selecting different hardware subsets.\n-\n-   Macro to define tables used to set the flags.\n-   This is a list in braces of pairs in braces,\n-   each pair being { \"NAME\", VALUE }\n-   where VALUE is the bits to set or minus the bits to clear.\n-   An empty string NAME is used to identify the default VALUE.  */\n-\n-#define TARGET_SWITCHES\t\t\t\t\t\t\t\\\n- {{\"power\",\t\tMASK_POWER  | MASK_MULTIPLE | MASK_STRING,\t\\\n-\t\t\tN_(\"Use POWER instruction set\")},\t\t\\\n-  {\"power2\",\t\t(MASK_POWER | MASK_MULTIPLE | MASK_STRING\t\\\n-\t\t\t | MASK_POWER2),\t\t\t\t\\\n-\t\t\tN_(\"Use POWER2 instruction set\")},\t\t\\\n-  {\"no-power2\",\t\t- MASK_POWER2,\t\t\t\t\t\\\n-\t\t\tN_(\"Do not use POWER2 instruction set\")},\t\\\n-  {\"no-power\",\t\t- (MASK_POWER | MASK_POWER2 | MASK_MULTIPLE\t\\\n-\t\t\t   | MASK_STRING),\t\t\t\t\\\n-\t\t\tN_(\"Do not use POWER instruction set\")},\t\\\n-  {\"powerpc\",\t\tMASK_POWERPC,\t\t\t\t\t\\\n-\t\t\tN_(\"Use PowerPC instruction set\")},\t\t\\\n-  {\"no-powerpc\",\t- (MASK_POWERPC | MASK_PPC_GPOPT\t\t\\\n-\t\t\t   | MASK_PPC_GFXOPT | MASK_POWERPC64),\t\t\\\n-\t\t\tN_(\"Do not use PowerPC instruction set\")},\t\\\n-  {\"powerpc-gpopt\",\tMASK_POWERPC | MASK_PPC_GPOPT,\t\t\t\\\n-\t\t\tN_(\"Use PowerPC General Purpose group optional instructions\")},\\\n-  {\"no-powerpc-gpopt\",\t- MASK_PPC_GPOPT,\t\t\t\t\\\n-\t\t\tN_(\"Do not use PowerPC General Purpose group optional instructions\")},\\\n-  {\"powerpc-gfxopt\",\tMASK_POWERPC | MASK_PPC_GFXOPT,\t\t\t\\\n-\t\t\tN_(\"Use PowerPC Graphics group optional instructions\")},\\\n-  {\"no-powerpc-gfxopt\",\t- MASK_PPC_GFXOPT,\t\t\t\t\\\n-\t\t\tN_(\"Do not use PowerPC Graphics group optional instructions\")},\\\n-  {\"powerpc64\",\t\tMASK_POWERPC64,\t\t\t\t\t\\\n-\t\t\tN_(\"Use PowerPC-64 instruction set\")},\t\t\\\n-  {\"no-powerpc64\",\t- MASK_POWERPC64,\t\t\t\t\\\n-\t\t\tN_(\"Do not use PowerPC-64 instruction set\")},\t\\\n-  {\"altivec\",\t\tMASK_ALTIVEC ,\t\t\t\t\t\\\n-\t\t\tN_(\"Use AltiVec instructions\")},\t\t\\\n-  {\"no-altivec\",\t- MASK_ALTIVEC ,\t\t\t\t\t\\\n-\t\t\tN_(\"Do not use AltiVec instructions\")},\t\\\n-  {\"new-mnemonics\",\tMASK_NEW_MNEMONICS,\t\t\t\t\\\n-\t\t\tN_(\"Use new mnemonics for PowerPC architecture\")},\\\n-  {\"old-mnemonics\",\t-MASK_NEW_MNEMONICS,\t\t\t\t\\\n-\t\t\tN_(\"Use old mnemonics for PowerPC architecture\")},\\\n-  {\"full-toc\",\t\t- (MASK_NO_FP_IN_TOC | MASK_NO_SUM_IN_TOC\t\\\n-\t\t\t   | MASK_MINIMAL_TOC),\t\t\t\t\\\n-\t\t\tN_(\"Put everything in the regular TOC\")},\t\\\n-  {\"fp-in-toc\",\t\t- MASK_NO_FP_IN_TOC,\t\t\t\t\\\n-\t\t\tN_(\"Place floating point constants in TOC\")},\t\\\n-  {\"no-fp-in-toc\",\tMASK_NO_FP_IN_TOC,\t\t\t\t\\\n-\t\t\tN_(\"Do not place floating point constants in TOC\")},\\\n-  {\"sum-in-toc\",\t- MASK_NO_SUM_IN_TOC,\t\t\t\t\\\n-\t\t\tN_(\"Place symbol+offset constants in TOC\")},\t\\\n-  {\"no-sum-in-toc\",\tMASK_NO_SUM_IN_TOC,\t\t\t\t\\\n-\t\t\tN_(\"Do not place symbol+offset constants in TOC\")},\\\n-  {\"minimal-toc\",\tMASK_MINIMAL_TOC,\t\t\t\t\\\n-\t\t\t\"Use only one TOC entry per procedure\"},\t\\\n-  {\"minimal-toc\",\t- (MASK_NO_FP_IN_TOC | MASK_NO_SUM_IN_TOC),\t\\\n-\t\t\t\"\"},\t\t\t\t\t\t\\\n-  {\"no-minimal-toc\",\t- MASK_MINIMAL_TOC,\t\t\t\t\\\n-\t\t\tN_(\"Place variable addresses in the regular TOC\")},\\\n-  {\"hard-float\",\t- MASK_SOFT_FLOAT,\t\t\t\t\\\n-\t\t\tN_(\"Use hardware floating point\")},\t\t\\\n-  {\"soft-float\",\tMASK_SOFT_FLOAT,\t\t\t\t\\\n-\t\t\tN_(\"Do not use hardware floating point\")},\t\\\n-  {\"multiple\",\t\tMASK_MULTIPLE,\t\t\t\t\t\\\n-\t\t\tN_(\"Generate load/store multiple instructions\")},\t\\\n-  {\"no-multiple\",\t- MASK_MULTIPLE,\t\t\t\t\\\n-\t\t\tN_(\"Do not generate load/store multiple instructions\")},\\\n-  {\"string\",\t\tMASK_STRING,\t\t\t\t\t\\\n-\t\t\tN_(\"Generate string instructions for block moves\")},\\\n-  {\"no-string\",\t\t- MASK_STRING,\t\t\t\t\t\\\n-\t\t\tN_(\"Do not generate string instructions for block moves\")},\\\n-  {\"update\",\t\t- MASK_NO_UPDATE,\t\t\t\t\\\n-\t\t\tN_(\"Generate load/store with update instructions\")},\\\n-  {\"no-update\",\t\tMASK_NO_UPDATE,\t\t\t\t\t\\\n-\t\t\tN_(\"Do not generate load/store with update instructions\")},\\\n-  {\"fused-madd\",\t- MASK_NO_FUSED_MADD,\t\t\t\t\\\n-\t\t\tN_(\"Generate fused multiply/add instructions\")},\\\n-  {\"no-fused-madd\",\tMASK_NO_FUSED_MADD,\t\t\t\t\\\n-\t\t\tN_(\"Do not generate fused multiply/add instructions\")},\\\n-  {\"sched-prolog\",      MASK_SCHED_PROLOG,                              \\\n-\t\t\t\"\"},\t\t\t\t\t\t\\\n-  {\"no-sched-prolog\",   -MASK_SCHED_PROLOG,                             \\\n-\t\t\tN_(\"Do not schedule the start and end of the procedure\")},\\\n-  {\"sched-epilog\",      MASK_SCHED_PROLOG,                              \\\n-\t\t\t\"\"},\t\t\t\t\t\t\\\n-  {\"no-sched-epilog\",   -MASK_SCHED_PROLOG,                             \\\n-\t\t\t\"\"},\t\t\t\t\t\t\\\n-  {\"aix-struct-return\",\tMASK_AIX_STRUCT_RET,\t\t\t\t\\\n-\t\t\tN_(\"Return all structures in memory (AIX default)\")},\\\n-  {\"svr4-struct-return\", - MASK_AIX_STRUCT_RET,\t\t\t\t\\\n-\t\t\tN_(\"Return small structures in registers (SVR4 default)\")},\\\n-  {\"no-aix-struct-return\", - MASK_AIX_STRUCT_RET,\t\t\t\\\n-\t\t\t\"\"},\t\t\t\t\t\t\\\n-  {\"no-svr4-struct-return\", MASK_AIX_STRUCT_RET,\t\t\t\\\n-\t\t\t\"\"},\t\t\t\t\t\t\\\n-  {\"mfcrf\",\t\tMASK_MFCRF,\t\t\t\t\t\\\n-\t\t\tN_(\"Generate single field mfcr instruction\")},\t\\\n-  {\"no-mfcrf\",\t\t- MASK_MFCRF,\t\t\t\t\t\\\n-\t\t\tN_(\"Do not generate single field mfcr instruction\")},\\\n-  SUBTARGET_SWITCHES\t\t\t\t\t\t\t\\\n-  {\"\",\t\t\tTARGET_DEFAULT | MASK_SCHED_PROLOG,\t\t\\\n-\t\t\t\"\"}}\n-\n #define TARGET_DEFAULT (MASK_POWER | MASK_MULTIPLE | MASK_STRING)\n \n-/* This is meant to be redefined in the host dependent files */\n-#define SUBTARGET_SWITCHES\n-\n /* Processor type.  Order must match cpu attribute in MD file.  */\n enum processor_type\n  {\n@@ -446,46 +238,6 @@ enum group_termination\n     previous_group\n   };\n \n-/* This is meant to be overridden in target specific files.  */\n-#define\tSUBTARGET_OPTIONS\n-\n-#define TARGET_OPTIONS\t\t\t\t\t\t\t\\\n-{\t\t\t\t\t\t\t\t\t\\\n-   {\"cpu=\",  &rs6000_select[1].string,\t\t\t\t\t\\\n-    N_(\"Use features of and schedule code for given CPU\"), 0},\t\t\\\n-   {\"tune=\", &rs6000_select[2].string,\t\t\t\t\t\\\n-    N_(\"Schedule code for given CPU\"), 0},\t\t\t\t\\\n-   {\"debug=\", &rs6000_debug_name, N_(\"Enable debug output\"), 0},\t\\\n-   {\"traceback=\", &rs6000_traceback_name,\t\t\t\t\\\n-    N_(\"Select full, part, or no traceback table\"), 0},\t\t\t\\\n-   {\"abi=\", &rs6000_abi_string, N_(\"Specify ABI to use\"), 0},\t\t\\\n-   {\"long-double-\", &rs6000_long_double_size_string,\t\t\t\\\n-    N_(\"Specify size of long double (64 or 128 bits)\"), 0},\t\t\\\n-   {\"isel=\", &rs6000_isel_string,                                       \\\n-    N_(\"Specify yes/no if isel instructions should be generated\"), 0},  \\\n-   {\"spe=\", &rs6000_spe_string,                                         \\\n-    N_(\"Specify yes/no if SPE SIMD instructions should be generated\"), 0},\\\n-   {\"float-gprs=\", &rs6000_float_gprs_string,                           \\\n-    N_(\"Specify yes/no if using floating point in the GPRs\"), 0},       \\\n-   {\"vrsave=\", &rs6000_altivec_vrsave_string,                           \\\n-    N_(\"Specify yes/no if VRSAVE instructions should be generated for AltiVec\"), 0}, \\\n-   {\"longcall\", &rs6000_longcall_switch,\t\t\t\t\\\n-    N_(\"Avoid all range limits on call instructions\"), 0},\t\t\\\n-   {\"no-longcall\", &rs6000_longcall_switch, \"\", 0},\t\t\t\\\n-   {\"warn-altivec-long\", &rs6000_warn_altivec_long_switch, \\\n-    N_(\"Warn about deprecated 'vector long ...' AltiVec type usage\"), 0}, \\\n-   {\"no-warn-altivec-long\", &rs6000_warn_altivec_long_switch, \"\", 0}, \\\n-   {\"sched-costly-dep=\", &rs6000_sched_costly_dep_str,                  \\\n-    N_(\"Determine which dependences between insns are considered costly\"), 0}, \\\n-   {\"insert-sched-nops=\", &rs6000_sched_insert_nops_str,                \\\n-    N_(\"Specify which post scheduling nop insertion scheme to apply\"), 0}, \\\n-   {\"align-\", &rs6000_alignment_string,\t\t\t\t\t\\\n-    N_(\"Specify alignment of structure fields default/natural\"), 0},\t\\\n-   {\"prioritize-restricted-insns=\", &rs6000_sched_restricted_insns_priority_str, \\\n-    N_(\"Specify scheduling priority for dispatch slot restricted insns\"), 0}, \\\n-   SUBTARGET_OPTIONS\t\t\t\t\t\t\t\\\n-}\n-\n /* Support for a compile-time default CPU, et cetera.  The rules are:\n    --with-cpu is ignored if -mcpu is specified.\n    --with-tune is ignored if -mtune is specified.\n@@ -527,25 +279,13 @@ extern int rs6000_spe_abi;\n extern int rs6000_isel;\n extern int rs6000_spe;\n extern int rs6000_float_gprs;\n-extern const char *rs6000_float_gprs_string;\n-extern const char *rs6000_isel_string;\n-extern const char *rs6000_spe_string;\n-extern const char *rs6000_altivec_vrsave_string;\n-extern int rs6000_altivec_vrsave;\n-extern const char *rs6000_longcall_switch;\n-extern int rs6000_default_long_calls;\n extern const char* rs6000_alignment_string;\n extern int rs6000_alignment_flags;\n extern const char *rs6000_sched_restricted_insns_priority_str;\n extern int rs6000_sched_restricted_insns_priority;\n-extern const char *rs6000_sched_costly_dep_str;\n-extern enum rs6000_dependence_cost rs6000_sched_costly_dep;\n extern const char *rs6000_sched_insert_nops_str;\n extern enum rs6000_nop_insertion rs6000_sched_insert_nops;\n \n-extern int rs6000_warn_altivec_long;\n-extern const char *rs6000_warn_altivec_long_switch;\n-\n /* Alignment options for fields in structures for sub-targets following\n    AIX-like ABI.\n    ALIGN_POWER word-aligns FP doubles (default AIX ABI).\n@@ -565,7 +305,6 @@ extern const char *rs6000_warn_altivec_long_switch;\n \n #define TARGET_LONG_DOUBLE_128 (rs6000_long_double_type_size == 128)\n #define TARGET_ALTIVEC_ABI rs6000_altivec_abi\n-#define TARGET_ALTIVEC_VRSAVE rs6000_altivec_vrsave\n \n #define TARGET_SPE_ABI 0\n #define TARGET_SPE 0"}, {"sha": "4a65090590483b053cb0b583353087500d577093", "filename": "gcc/config/rs6000/rs6000.opt", "status": "added", "additions": 225, "deletions": 0, "changes": 225, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/78f5898b9583d297ceb15d33ecb9297cc8a32667/gcc%2Fconfig%2Frs6000%2Frs6000.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/78f5898b9583d297ceb15d33ecb9297cc8a32667/gcc%2Fconfig%2Frs6000%2Frs6000.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.opt?ref=78f5898b9583d297ceb15d33ecb9297cc8a32667", "patch": "@@ -0,0 +1,225 @@\n+; Options for the rs6000 port of the compiler\n+;\n+; Copyright (C) 2005 Free Software Foundation, Inc.\n+; Contributed by Aldy Hernandez <aldy@quesejoda.com>.\n+;\n+; This file is part of GCC.\n+;\n+; GCC is free software; you can redistribute it and/or modify it under\n+; the terms of the GNU General Public License as published by the Free\n+; Software Foundation; either version 2, or (at your option) any later\n+; version.\n+;\n+; GCC is distributed in the hope that it will be useful, but WITHOUT\n+; ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+; or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+; License for more details.\n+;\n+; You should have received a copy of the GNU General Public License\n+; along with GCC; see the file COPYING.  If not, write to the Free\n+; Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n+; 02111-1307, USA.\n+\n+mpower\n+Target Report RejectNegative Mask(POWER)\n+Use POWER instruction set\n+\n+mno-power\n+Target Report RejectNegative\n+Do not use POWER instruction set\n+\n+mpower2\n+Target Report Mask(POWER2)\n+Use POWER2 instruction set\n+\n+mpowerpc\n+Target Report RejectNegative Mask(POWERPC)\n+Use PowerPC instruction set\n+\n+mno-powerpc\n+Target Report RejectNegative\n+Do not use PowerPC instruction set\n+\n+mpowerpc64\n+Target Report Mask(POWERPC64)\n+Use PowerPC-64 instruction set\n+\n+maltivec\n+Target Report Mask(ALTIVEC)\n+Use AltiVec instructions\n+\n+mnew-mnemonics\n+Target Report RejectNegative Mask(NEW_MNEMONICS)\n+Use new mnemonics for PowerPC architecture\n+\n+mold-mnemonics\n+Target Report RejectNegative InverseMask(NEW_MNEMONICS)\n+Use old mnemonics for PowerPC architecture\n+\n+mno-fp-in-toc\n+Target Report RejectNegative Mask(NO_FP_IN_TOC)\n+Do not place floating point constants in TOC\n+\n+mfp-in-toc\n+Target Report RejectNegative InverseMask(NO_FP_IN_TOC)\n+Place floating point constants in TOC\n+\n+mno-sum-in-toc\n+Target RejectNegative Mask(NO_SUM_IN_TOC)\n+Do not place symbol+offset constants in TOC\n+\n+msum-in-toc\n+Target RejectNegative InverseMask(NO_SUM_IN_TOC)\n+Place symbol+offset constants in TOC\n+\n+;; ?? Where should we put documentation like this ??\n+;;\n+;  Output only one TOC entry per module.  Normally linking fails if\n+;   there are more than 16K unique variables/constants in an executable.  With\n+;   this option, linking fails only if there are more than 16K modules, or\n+;   if there are more than 16K unique variables/constant in a single module.\n+;\n+;   This is at the cost of having 2 extra loads and one extra store per\n+;   function, and one less allocable register.\n+mminimal-toc\n+Target Report Mask(MINIMAL_TOC)\n+Use only one TOC entry per procedure\n+\n+msoft-float\n+Target Report RejectNegative Mask(SOFT_FLOAT)\n+Do not use hardware floating point\n+\n+mhard-float\n+Target Report RejectNegative InverseMask(SOFT_FLOAT, HARD_FLOAT)\n+Use hardware floating point\n+\n+mmultiple\n+Target Report Mask(MULTIPLE)\n+Generate load/store multiple instructions\n+\n+mstring\n+Target Report Mask(STRING)\n+Generate string instructions for block moves\n+\n+mno-update\n+Target Report RejectNegative Mask(NO_UPDATE)\n+Do not generate load/store with update instructions\n+\n+mupdate\n+Target Report RejectNegative InverseMask(NO_UPDATE, UPDATE)\n+Generate load/store with update instructions\n+\n+mno-fused-madd\n+Target Report RejectNegative Mask(NO_FUSED_MADD)\n+Do not generate fused multiply/add instructions\n+\n+mfused-madd\n+Target Report RejectNegative InverseMask(NO_FUSED_MADD, FUSED_MADD)\n+Generate fused multiply/add instructions\n+\n+msched-prolog\n+Target Report Mask(SCHED_PROLOG)\n+Schedule the start and end of the procedure\n+\n+msched-epilog\n+Target Undocumented Mask(SCHED_PROLOG) MaskExists\n+\n+maix-struct-return\n+Target Report Mask(AIX_STRUCT_RET)\n+Return all structures in memory (AIX default)\n+\n+msvr4-struct-return\n+Target Report InverseMask(AIX_STRUCT_RET)\n+Return small structures in registers (SVR4 default)\n+\n+mmfcrf\n+Target Report Mask(MFCRF)\n+Generate single field mfcr instruction\n+\n+mpowerpc-gpopt\n+Target Report Mask(PPC_GPOPT)\n+Use PowerPC General Purpose group optional instructions\n+\n+mpowerpc-gfxopt\n+Target Report Mask(PPC_GFXOPT)\n+Use PowerPC Graphics group optional instructions\n+\n+mfull-toc\n+Target Report\n+Put everything in the regular TOC\n+\n+mvrsave\n+Target Report Var(TARGET_ALTIVEC_VRSAVE)\n+Generate VRSAVE instructions when generating AltiVec code\n+\n+mvrsave=\n+Target RejectNegative Joined\n+-mvrsave=yes/no\tDeprecated option.  Use -mvrsave/-mno-vrsave instead.\n+\n+misel\n+Target Var(rs6000_isel)\n+Generate isel instructions\n+\n+misel=\n+Target RejectNegative Joined\n+-misel=yes/no\tDeprecated option.  Use -misel/-mno-isel instead\n+\n+mspe\n+Target Var(rs6000_spe)\n+Generate SPE SIMD instructions on E500\n+\n+mspe=\n+Target RejectNegative Joined\n+-mspe=yes/no\tDeprecated option.  Use -mspe/-mno-spe instead\n+\n+mdebug=\n+Target RejectNegative Joined\n+-mdebug=\tEnable debug output\n+\n+mabi=\n+Target RejectNegative Joined\n+-mabi=\tSpecify ABI to use\n+\n+mcpu=\n+Target RejectNegative Joined\n+-mcpu=\tUse features of and schedule code for given CPU\n+\n+mtune=\n+Target RejectNegative Joined\n+-mtune=\tSchedule code for given CPU\n+\n+mtraceback=\n+Target RejectNegative Joined\n+-mtraceback=\tSelect full, part, or no traceback table\n+\n+mlongcall\n+Target Report Var(rs6000_default_long_calls)\n+Avoid all range limits on call instructions\n+\n+mwarn-altivec-long\n+Target Var(rs6000_warn_altivec_long) Init(1)\n+Warn about deprecated 'vector long ...' AltiVec type usage\n+\n+mfloat-gprs=\n+Target RejectNegative Joined\n+-mfloat-gprs=\tSelect GPR floating point method.\n+\n+mlong-double-\n+Target RejectNegative Joined UInteger\n+-mlong-double-<n>\tSpecify size of long double (64 or 128 bits)\n+\n+msched-costly-dep=\n+Target RejectNegative Joined \n+Determine which dependences between insns are considered costly\n+\n+minsert-sched-nops=\n+Target RejectNegative Joined\n+Specify which post scheduling nop insertion scheme to apply\n+\n+malign-\n+Target RejectNegative Joined\n+Specify alignment of structure fields default/natural\n+\n+mprioritize-restricted-insns=\n+Target RejectNegative Joined Uinteger Var(rs6000_sched_restricted_insns_priority)\n+Specify scheduling priority for dispatch slot restricted insns"}, {"sha": "ac28b2d7b78a75defbafa66f4ea2c9b5b2138e62", "filename": "gcc/config/rs6000/sysv4.h", "status": "modified", "additions": 3, "deletions": 93, "changes": 96, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/78f5898b9583d297ceb15d33ecb9297cc8a32667/gcc%2Fconfig%2Frs6000%2Fsysv4.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/78f5898b9583d297ceb15d33ecb9297cc8a32667/gcc%2Fconfig%2Frs6000%2Fsysv4.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fsysv4.h?ref=78f5898b9583d297ceb15d33ecb9297cc8a32667", "patch": "@@ -47,24 +47,6 @@ enum rs6000_sdata_type {\n \n extern enum rs6000_sdata_type rs6000_sdata;\n \n-/* V.4/eabi switches.  */\n-#define\tMASK_NO_BITFIELD_TYPE\t0x40000000\t/* Set PCC_BITFIELD_TYPE_MATTERS to 0.  */\n-#define\tMASK_STRICT_ALIGN\t0x20000000\t/* Set STRICT_ALIGNMENT to 1.  */\n-#define\tMASK_RELOCATABLE\t0x10000000\t/* GOT pointers are PC relative.  */\n-#define\tMASK_EABI\t\t0x08000000\t/* Adhere to eabi, not System V spec.  */\n-#define\tMASK_LITTLE_ENDIAN\t0x04000000\t/* Target is little endian.  */\n-#define\tMASK_REGNAMES\t\t0x02000000\t/* Use alternate register names.  */\n-#define\tMASK_PROTOTYPE\t\t0x01000000\t/* Only prototyped fcns pass variable args.  */\n-#define MASK_NO_BITFIELD_WORD\t0x00800000\t/* Bitfields cannot cross word boundaries */\n-\n-#define\tTARGET_NO_BITFIELD_TYPE\t(target_flags & MASK_NO_BITFIELD_TYPE)\n-#define\tTARGET_STRICT_ALIGN\t(target_flags & MASK_STRICT_ALIGN)\n-#define\tTARGET_RELOCATABLE\t(target_flags & MASK_RELOCATABLE)\n-#define\tTARGET_EABI\t\t(target_flags & MASK_EABI)\n-#define\tTARGET_LITTLE_ENDIAN\t(target_flags & MASK_LITTLE_ENDIAN)\n-#define\tTARGET_REGNAMES\t\t(target_flags & MASK_REGNAMES)\n-#define\tTARGET_PROTOTYPE\t(target_flags & MASK_PROTOTYPE)\n-#define TARGET_NO_BITFIELD_WORD\t(target_flags & MASK_NO_BITFIELD_WORD)\n #define\tTARGET_TOC\t\t((target_flags & MASK_64BIT)\t\t\\\n \t\t\t\t || ((target_flags & (MASK_RELOCATABLE\t\\\n \t\t\t\t\t\t      | MASK_MINIMAL_TOC)) \\\n@@ -77,87 +59,12 @@ extern enum rs6000_sdata_type rs6000_sdata;\n #define\tTARGET_NO_TOC\t\t(! TARGET_TOC)\n #define\tTARGET_NO_EABI\t\t(! TARGET_EABI)\n \n-/* Strings provided by SUBTARGET_OPTIONS */\n extern const char *rs6000_abi_name;\n extern const char *rs6000_sdata_name;\n extern const char *rs6000_tls_size_string; /* For -mtls-size= */\n \n-/* Override rs6000.h definition.  */\n-#undef\tSUBTARGET_OPTIONS\n-#define\tSUBTARGET_OPTIONS\t\t\t\t\t\t\t\\\n-  { \"call-\",  &rs6000_abi_name, N_(\"Select ABI calling convention\"), 0},\t\\\n-  { \"sdata=\", &rs6000_sdata_name, N_(\"Select method for sdata handling\"), 0},\t\\\n-  { \"tls-size=\", &rs6000_tls_size_string,\t\t\t\t\t\\\n-   N_(\"Specify bit size of immediate TLS offsets\"), 0 }\n-\n #define SDATA_DEFAULT_SIZE 8\n \n-/* Note, V.4 no longer uses a normal TOC, so make -mfull-toc, be just\n-   the same as -mminimal-toc.  */\n-/* Override rs6000.h definition.  */\n-#undef\tSUBTARGET_SWITCHES\n-#define SUBTARGET_SWITCHES\t\t\t\t\t\t\\\n-  { \"bit-align\",\t-MASK_NO_BITFIELD_TYPE,\t\t\t\t\\\n-    N_(\"Align to the base type of the bit-field\") },\t\t\t\\\n-  { \"no-bit-align\",\t MASK_NO_BITFIELD_TYPE,\t\t\t\t\\\n-    N_(\"Don't align to the base type of the bit-field\") },\t\t\\\n-  { \"strict-align\",\t MASK_STRICT_ALIGN,\t\t\t\t\\\n-    N_(\"Don't assume that unaligned accesses are handled by the system\") }, \\\n-  { \"no-strict-align\",\t-MASK_STRICT_ALIGN,\t\t\t\t\\\n-    N_(\"Assume that unaligned accesses are handled by the system\") },\t\\\n-  { \"relocatable\",\t MASK_RELOCATABLE | MASK_MINIMAL_TOC | MASK_NO_FP_IN_TOC, \\\n-    N_(\"Produce code relocatable at runtime\") },\t\t\t\\\n-  { \"no-relocatable\",\t-MASK_RELOCATABLE,\t\t\t\t\\\n-    N_(\"Don't produce code relocatable at runtime\") },\t\t\t\\\n-  { \"relocatable-lib\",\t MASK_RELOCATABLE | MASK_MINIMAL_TOC | MASK_NO_FP_IN_TOC, \\\n-    N_(\"Produce code relocatable at runtime\") },\t\t\t\\\n-  { \"no-relocatable-lib\", -MASK_RELOCATABLE,\t\t\t\t\\\n-    N_(\"Don't produce code relocatable at runtime\") },\t\t\t\\\n-  { \"little-endian\",\t MASK_LITTLE_ENDIAN,\t\t\t\t\\\n-    N_(\"Produce little endian code\") },\t\t\t\t\t\\\n-  { \"little\",\t\t MASK_LITTLE_ENDIAN,\t\t\t\t\\\n-    N_(\"Produce little endian code\") },\t\t\t\t\t\\\n-  { \"big-endian\",\t-MASK_LITTLE_ENDIAN,\t\t\t\t\\\n-    N_(\"Produce big endian code\") },\t\t\t\t\t\\\n-  { \"big\",\t\t-MASK_LITTLE_ENDIAN,\t\t\t\t\\\n-    N_(\"Produce big endian code\") },\t\t\t\t\t\\\n-  { \"no-toc\",\t\t 0, N_(\"no description yet\") },\t\t\t\\\n-  { \"toc\",\t\t MASK_MINIMAL_TOC, N_(\"no description yet\") },\t\\\n-  { \"full-toc\",\t\t MASK_MINIMAL_TOC, N_(\"no description yet\") },\t\\\n-  { \"prototype\",\t MASK_PROTOTYPE, N_(\"no description yet\") },\t\\\n-  { \"no-prototype\",\t-MASK_PROTOTYPE, N_(\"no description yet\") },\t\\\n-  { \"no-traceback\",\t 0, N_(\"no description yet\") },\t\t\t\\\n-  { \"eabi\",\t\t MASK_EABI, N_(\"Use EABI\") },\t\t\t\\\n-  { \"no-eabi\",\t\t-MASK_EABI, N_(\"Don't use EABI\") },\t\t\\\n-  { \"bit-word\",\t\t-MASK_NO_BITFIELD_WORD, \"\" },\t\t\t\\\n-  { \"no-bit-word\",\t MASK_NO_BITFIELD_WORD,\t\t\t\t\\\n-    N_(\"Do not allow bit-fields to cross word boundaries\") },\t\t\\\n-  { \"regnames\",\t\t MASK_REGNAMES,\t\t\t\t\t\\\n-    N_(\"Use alternate register names\") },\t\t\t\t\\\n-  { \"no-regnames\",\t -MASK_REGNAMES,\t\t\t\t\\\n-    N_(\"Don't use alternate register names\") },\t\t\t\t\\\n-  { \"sdata\",\t\t 0, N_(\"no description yet\") },\t\t\t\\\n-  { \"no-sdata\",\t\t 0, N_(\"no description yet\") },\t\t\t\\\n-  { \"sim\",\t\t 0,\t\t\t\t\t\t\\\n-    N_(\"Link with libsim.a, libc.a and sim-crt0.o\") },\t\t\t\\\n-  { \"ads\",\t\t 0,\t\t\t\t\t\t\\\n-    N_(\"Link with libads.a, libc.a and crt0.o\") },\t\t\t\\\n-  { \"yellowknife\",\t 0,\t\t\t\t\t\t\\\n-    N_(\"Link with libyk.a, libc.a and crt0.o\") },\t\t\t\\\n-  { \"mvme\",\t\t 0,\t\t\t\t\t\t\\\n-    N_(\"Link with libmvme.a, libc.a and crt0.o\") },\t\t\t\\\n-  { \"emb\",\t\t 0,\t\t\t\t\t\t\\\n-    N_(\"Set the PPC_EMB bit in the ELF flags header\") },\t\t\\\n-  { \"windiss\",\t\t 0, N_(\"Use the WindISS simulator\") },\t\t\\\n-  { \"shlib\",\t\t 0, N_(\"no description yet\") },\t\t\t\\\n-  { \"64\",\t\t MASK_64BIT | MASK_POWERPC64\t\t\t\\\n-\t\t\t   | MASK_POWERPC | MASK_PPC_GFXOPT,\t\t\\\n-\t\t\t N_(\"Generate 64-bit code\") },\t\t\t\\\n-  { \"32\",\t\t - (MASK_64BIT | MASK_POWERPC64),\t\t\\\n-\t\t\t N_(\"Generate 32-bit code\") },\t\t\t\\\n-  EXTRA_SUBTARGET_SWITCHES\t\t\t\t\t\t\\\n-  { \"newlib\",\t\t 0, N_(\"no description yet\") },\n-\n /* This is meant to be redefined in the host dependent files.  */\n #define EXTRA_SUBTARGET_SWITCHES\n \n@@ -1371,3 +1278,6 @@ ncrtn.o%s\"\n \n /* Generate entries in .fixup for relocatable addresses.  */\n #define RELOCATABLE_NEEDS_FIXUP 1\n+\n+/* This target uses the sysv4.opt file.  */\n+#define TARGET_USES_SYSV4_OPT 1"}, {"sha": "294420ea4e2fe0fe83faedc7273db7e4d513a1e7", "filename": "gcc/config/rs6000/sysv4.opt", "status": "added", "additions": 142, "deletions": 0, "changes": 142, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/78f5898b9583d297ceb15d33ecb9297cc8a32667/gcc%2Fconfig%2Frs6000%2Fsysv4.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/78f5898b9583d297ceb15d33ecb9297cc8a32667/gcc%2Fconfig%2Frs6000%2Fsysv4.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fsysv4.opt?ref=78f5898b9583d297ceb15d33ecb9297cc8a32667", "patch": "@@ -0,0 +1,142 @@\n+; SYSV4 options for PPC port.\n+;\n+; Copyright (C) 2005 Free Software Foundation, Inc.\n+; Contributed by Aldy Hernandez <aldy@quesejoda.com>.\n+;\n+; This file is part of GCC.\n+;\n+; GCC is free software; you can redistribute it and/or modify it under\n+; the terms of the GNU General Public License as published by the Free\n+; Software Foundation; either version 2, or (at your option) any later\n+; version.\n+;\n+; GCC is distributed in the hope that it will be useful, but WITHOUT\n+; ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+; or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+; License for more details.\n+;\n+; You should have received a copy of the GNU General Public License\n+; along with GCC; see the file COPYING.  If not, write to the Free\n+; Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n+; 02111-1307, USA.\n+\n+mcall-\n+Target RejectNegative Joined\n+Select ABI calling convention\n+\n+msdata=\n+Target RejectNegative Joined\n+Select method for sdata handling\n+\n+mtls-size=\n+Target RejectNegative Joined\n+Specify bit size of immediate TLS offsets\n+\n+mbit-align\n+Target Report Mask(NO_BITFIELD_TYPE)\n+Align to the base type of the bit-field\n+\n+mstrict-align\n+Target Report Mask(STRICT_ALIGN)\n+Align to the base type of the bit-field\n+Don't assume that unaligned accesses are handled by the system\n+\n+mrelocatable\n+Target Report Mask(RELOCATABLE)\n+Produce code relocatable at runtime\n+\n+mrelocatable-lib\n+Target\n+Produce code relocatable at runtime\n+\n+mlittle-endian\n+Target Report RejectNegative Mask(LITTLE_ENDIAN)\n+Produce little endian code\n+\n+; FIXME: Need a way to specify an alias.\n+;mlittle\n+;Target Report RejectNegative Mask(LITTLE_ENDIAN)\n+;Produce little endian code\n+\n+mbig-endian\n+Target Report RejectNegative InverseMask(LITTLE_ENDIAN)\n+Produce big endian code\n+\n+mbig\n+Target Report RejectNegative InverseMask(LITTLE_ENDIAN)\n+Produce big endian code\n+\n+;; FIXME: This does nothing.  What should be done?\n+mno-toc\n+Target RejectNegative\n+no description yet\n+\n+mtoc\n+Target RejectNegative\n+no description yet\n+\n+mprototype\n+Target Mask(PROTOTYPE)\n+no description yet\n+\n+;; FIXME: Does nothing.\n+mno-traceback\n+Target RejectNegative\n+no description yet\n+\n+meabi\n+Target Report Mask(EABI)\n+Use EABI\n+\n+mbit-word\n+Target Report Mask(NO_BITFIELD_WORD)\n+Allow bit-fields to cross word boundaries\n+\n+mrenames\n+Target Mask(REGNAMES)\n+Use alternate register names\n+\n+;; FIXME: Does nothing.\n+msdata\n+Target\n+no description yet\n+\n+msim\n+Target RejectNegative\n+Link with libsim.a, libc.a and sim-crt0.o\n+\n+mads\n+Target RejectNegative\n+Link with libads.a, libc.a and crt0.o\n+\n+myellowknife\n+Target RejectNegative\n+Link with libyk.a, libc.a and crt0.o\n+\n+mmvme\n+Target RejectNegative\n+Link with libmvme.a, libc.a and crt0.o\n+\n+memb\n+Target RejectNegative\n+Set the PPC_EMB bit in the ELF flags header\n+\n+mwindiss\n+Target RejectNegative\n+Use the WindISS simulator\n+\n+mshlib\n+Target RejectNegative\n+no description yet\n+\n+m64\n+Target Report RejectNegative Mask(64BIT)\n+Generate 64-bit code\n+\n+m32\n+Target Report RejectNegative InverseMask(64BIT)\n+Generate 32-bit code\n+\n+mnewlib\n+Target RejectNegative\n+no description yet"}, {"sha": "f9acaeb079945814bc0ed146ef087956e5ecb798", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 29, "deletions": 15, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/78f5898b9583d297ceb15d33ecb9297cc8a32667/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/78f5898b9583d297ceb15d33ecb9297cc8a32667/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=78f5898b9583d297ceb15d33ecb9297cc8a32667", "patch": "@@ -630,10 +630,12 @@ See RS/6000 and PowerPC Options.\n -minsert-sched-nops=@var{scheme} @gol\n -mcall-sysv  -mcall-netbsd @gol\n -maix-struct-return  -msvr4-struct-return @gol\n--mabi=altivec  -mabi=no-altivec @gol\n--mabi=spe  -mabi=no-spe @gol\n+-mabi=@var{abi-type} @gol\n+-misel -mno-isel @gol\n -misel=yes  -misel=no @gol\n+-mspe -mno-spe @gol\n -mspe=yes  -mspe=no @gol\n+-mvrsave -mno-vrsave @gol\n -mfloat-gprs=yes  -mfloat-gprs=no -mfloat-gprs=single -mfloat-gprs=double @gol\n -mprototype  -mno-prototype @gol\n -msim  -mmvme  -mads  -myellowknife  -memb  -msdata @gol\n@@ -10649,6 +10651,12 @@ the AltiVec instruction set.  You may also need to set\n @option{-mabi=altivec} to adjust the current ABI with AltiVec ABI\n enhancements.\n \n+@item -mvrsave\n+@item -mno-vrsave\n+@opindex mvrsave\n+@opindex mno-vrsave\n+Generate VRSAVE instructions when generating AltiVec code.\n+\n @item -mabi=spe\n @opindex mabi=spe\n Extend the current ABI with SPE ABI extensions.  This does not change\n@@ -10659,17 +10667,27 @@ ABI@.\n @opindex mabi=no-spe\n Disable Booke SPE ABI extensions for the current ABI@.\n \n-@item -misel=@var{yes/no}\n-@itemx -misel\n+@item -misel\n+@itemx -mno-isel\n @opindex misel\n+@opindex mno-isel\n This switch enables or disables the generation of ISEL instructions.\n \n-@item -mspe=@var{yes/no}\n-@itemx -mspe\n+@item -misel=@var{yes/no}\n+This switch has been deprecated.  Use @option{-misel} and\n+@option{-mno-isel} instead.\n+\n+@item -mspe\n+@itemx -mno-isel\n @opindex mspe\n+@opindex mno-spe\n This switch enables or disables the generation of SPE simd\n instructions.\n \n+@item -mspe=@var{yes/no}\n+This option has been deprecated.  Use @option{-mspe} and\n+@option{-mno-spe} instead.\n+\n @item -mfloat-gprs=@var{yes/single/double/no}\n @itemx -mfloat-gprs\n @opindex mfloat-gprs\n@@ -10986,15 +11004,11 @@ Return all structures in memory (as specified by the AIX ABI)@.\n Return structures smaller than 8 bytes in registers (as specified by the\n SVR4 ABI)@.\n \n-@item -mabi=altivec\n-@opindex mabi=altivec\n-Extend the current ABI with AltiVec ABI extensions.  This does not\n-change the default ABI, instead it adds the AltiVec ABI extensions to\n-the current ABI@.\n-\n-@item -mabi=no-altivec\n-@opindex mabi=no-altivec\n-Disable AltiVec ABI extensions for the current ABI@.\n+@item -mabi=@var{abi-type}\n+@opindex mabi\n+Extend the current ABI with a particular extension, or remove such extension.\n+Valid values are @var{altivec}, @var{no-altivec}, @var{spe},\n+@var{no-spe}@.\n \n @item -mprototype\n @itemx -mno-prototype"}]}