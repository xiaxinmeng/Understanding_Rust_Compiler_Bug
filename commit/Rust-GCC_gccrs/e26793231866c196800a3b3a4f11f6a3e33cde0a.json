{"sha": "e26793231866c196800a3b3a4f11f6a3e33cde0a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTI2NzkzMjMxODY2YzE5NjgwMGEzYjNhNGYxMWY2YTNlMzNjZGUwYQ==", "commit": {"author": {"name": "Thomas Koenig", "email": "tkoenig@gcc.gnu.org", "date": "2013-07-28T21:10:23Z"}, "committer": {"name": "Thomas Koenig", "email": "tkoenig@gcc.gnu.org", "date": "2013-07-28T21:10:23Z"}, "message": "re PR fortran/58009 (Elements with same value in vector subscript in variable definition context)\n\n2013-07-28  Thomas Koenig  <tkoenig@gcc.gnu.org>\n\n\tPR fortran/58009\n\t* expr.c (gfc_check_vardef_context):  Check for same values in\n\tvector expression subscripts.\n\n2013-07-28  Thomas Koenig  <tkoenig@gcc.gnu.org>\n\n\tPR fortran/58009\n\t* gfortran.dg/vector_subsript_7.f90:  New test.\n\nFrom-SVN: r201294", "tree": {"sha": "bbe0baa1380d24830310c5eccd77edc8f9a5bc36", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bbe0baa1380d24830310c5eccd77edc8f9a5bc36"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e26793231866c196800a3b3a4f11f6a3e33cde0a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e26793231866c196800a3b3a4f11f6a3e33cde0a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e26793231866c196800a3b3a4f11f6a3e33cde0a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e26793231866c196800a3b3a4f11f6a3e33cde0a/comments", "author": null, "committer": null, "parents": [{"sha": "b698d310d8df1cb7a2a02dfdf63476a5f1146b53", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b698d310d8df1cb7a2a02dfdf63476a5f1146b53", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b698d310d8df1cb7a2a02dfdf63476a5f1146b53"}], "stats": {"total": 77, "additions": 77, "deletions": 0}, "files": [{"sha": "8ec11b6e4531b0fe4190843fb41a9dc191197da9", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e26793231866c196800a3b3a4f11f6a3e33cde0a/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e26793231866c196800a3b3a4f11f6a3e33cde0a/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=e26793231866c196800a3b3a4f11f6a3e33cde0a", "patch": "@@ -1,3 +1,9 @@\n+2013-07-28  Thomas Koenig  <tkoenig@gcc.gnu.org>\n+\n+\tPR fortran/58009\n+\t* expr.c (gfc_check_vardef_context):  Check for same values in\n+\tvector expression subscripts.\n+\n 2013-07-27  Tobias Burnus  <burnus@net-b.de>\n \n \tPR fortran/57991"}, {"sha": "c00fbc5493f0d4b1a75c52d0bf42df7a2697e9f1", "filename": "gcc/fortran/expr.c", "status": "modified", "additions": 45, "deletions": 0, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e26793231866c196800a3b3a4f11f6a3e33cde0a/gcc%2Ffortran%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e26793231866c196800a3b3a4f11f6a3e33cde0a/gcc%2Ffortran%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fexpr.c?ref=e26793231866c196800a3b3a4f11f6a3e33cde0a", "patch": "@@ -4700,6 +4700,7 @@ gfc_check_vardef_context (gfc_expr* e, bool pointer, bool alloc_obj,\n   bool unlimited;\n   symbol_attribute attr;\n   gfc_ref* ref;\n+  int i;\n \n   if (e->expr_type == EXPR_VARIABLE)\n     {\n@@ -4922,5 +4923,49 @@ gfc_check_vardef_context (gfc_expr* e, bool pointer, bool alloc_obj,\n \t}\n     }\n \n+  /* Check for same value in vector expression subscript.  */\n+\n+  if (e->rank > 0)\n+    for (ref = e->ref; ref != NULL; ref = ref->next)\n+      if (ref->type == REF_ARRAY && ref->u.ar.type == AR_SECTION)\n+\tfor (i = 0; i < GFC_MAX_DIMENSIONS\n+\t       && ref->u.ar.dimen_type[i] != 0; i++)\n+\t  if (ref->u.ar.dimen_type[i] == DIMEN_VECTOR)\n+\t    {\n+\t      gfc_expr *arr = ref->u.ar.start[i];\n+\t      if (arr->expr_type == EXPR_ARRAY)\n+\t\t{\n+\t\t  gfc_constructor *c, *n;\n+\t\t  gfc_expr *ec, *en;\n+\t\t  \n+\t\t  for (c = gfc_constructor_first (arr->value.constructor);\n+\t\t       c != NULL; c = gfc_constructor_next (c))\n+\t\t    {\n+\t\t      if (c == NULL || c->iterator != NULL)\n+\t\t\tcontinue;\n+\t\t      \n+\t\t      ec = c->expr;\n+\n+\t\t      for (n = gfc_constructor_next (c); n != NULL;\n+\t\t\t   n = gfc_constructor_next (n))\n+\t\t\t{\n+\t\t\t  if (n->iterator != NULL)\n+\t\t\t    continue;\n+\t\t\t  \n+\t\t\t  en = n->expr;\n+\t\t\t  if (gfc_dep_compare_expr (ec, en) == 0)\n+\t\t\t    {\n+\t\t\t      gfc_error_now (\"Elements with the same value at %L\"\n+\t\t\t\t\t     \" and %L in vector subscript\"\n+\t\t\t\t\t     \" in a variable definition\"\n+\t\t\t\t\t     \" context (%s)\", &(ec->where),\n+\t\t\t\t\t     &(en->where), context);\n+\t\t\t      return false;\n+\t\t\t    }\n+\t\t\t}\n+\t\t    }\n+\t\t}\n+\t    }\n+  \n   return true;\n }"}, {"sha": "38fcfefd6301cc54de0ed63755bff51bcb35f426", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e26793231866c196800a3b3a4f11f6a3e33cde0a/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e26793231866c196800a3b3a4f11f6a3e33cde0a/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=e26793231866c196800a3b3a4f11f6a3e33cde0a", "patch": "@@ -1,3 +1,8 @@\n+2013-07-28  Thomas Koenig  <tkoenig@gcc.gnu.org>\n+\n+\tPR fortran/58009\n+\t* gfortran.dg/vector_subsript_7.f90:  New test.\n+\n 2013-07-27  Tobias Burnus  <burnus@net-b.de>\n \n \tPR fortran/57991"}, {"sha": "ddc813904b7cb9953ab1acfc1f7f66f86537fb90", "filename": "gcc/testsuite/gfortran.dg/vector_subscript_7.f90", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e26793231866c196800a3b3a4f11f6a3e33cde0a/gcc%2Ftestsuite%2Fgfortran.dg%2Fvector_subscript_7.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e26793231866c196800a3b3a4f11f6a3e33cde0a/gcc%2Ftestsuite%2Fgfortran.dg%2Fvector_subscript_7.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fvector_subscript_7.f90?ref=e26793231866c196800a3b3a4f11f6a3e33cde0a", "patch": "@@ -0,0 +1,21 @@\n+! { dg-do compile }\n+! PR 58009 - If a vector subscript has two or more elements with the\n+! same value, an array section with that vector subscript\n+! shall not appear in a variable definition context.\n+\n+program main\n+  real, dimension(4) :: a,b\n+  real, dimension(1,4) :: c\n+  read (*,*) a([1,2,3,2]),i ! { dg-error \"Elements with the same value\" }\n+  read (*,*) c(1,[1,2,3,2]),i ! { dg-error \"Elements with the same value\" }\n+  b([1+i,1,i+1,2]) = a      ! { dg-error \"Elements with the same value\" }\n+  c(1,[1+i,1,i+1,2]) = a    ! { dg-error \"Elements with the same value\" }\n+  call foo (a([4,2,1,1]))   ! { dg-error \"Elements with the same value\" }\n+  call foo (c(1,[4,2,1,1])) ! { dg-error \"Elements with the same value\" }\n+  print *,a,b\n+contains\n+  subroutine foo(arg)\n+    real, intent(inout) :: arg(:)\n+    arg = arg + 1\n+  end subroutine foo \n+end program main"}]}