{"sha": "45505d4d0cc1f5b9d9e734c4b413e2b13cd84652", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDU1MDVkNGQwY2MxZjViOWQ5ZTczNGM0YjQxM2UyYjEzY2Q4NDY1Mg==", "commit": {"author": {"name": "Michael Koch", "email": "konqueror@gmx.de", "date": "2004-05-06T10:25:02Z"}, "committer": {"name": "Michael Koch", "email": "mkoch@gcc.gnu.org", "date": "2004-05-06T10:25:02Z"}, "message": "gnu_java_awt_peer_gtk_GtkCheckboxGroupPeer.c, [...]: New files.\n\n2004-05-06  Michael Koch  <konqueror@gmx.de>\n\n\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GtkCheckboxGroupPeer.c,\n\tjni/gtk-peer/gnu_java_awt_peer_gtk_GtkGenericPeer.c:\n\tNew files.\n\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GtkCheckboxMenuItemPeer.c:\n\tInclude gnu_java_awt_peer_gtk_GtkCheckboxMenuItemPeer.h.\n\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GtkCheckboxPeer.c:\n\tMoved GtkCheckboxGroupPeer_dispose and GtkCheckboxGroupPeer_remove to\n\ttheir own source file.\n\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GtkComponentPeer.c:\n\tMoved GtkGenericPeer_dispose and GtkComponentPeer_requestFocus to\n\ttheir own source file. Removed GtkComponentPeer_gtkWidgetSetUsize.\n\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GtkMenuPeer.c\n\t(create): Define variable on top of function.\n\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GtkPopupMenuPeer.c\n\t(menu_pos): Prototyped.\n\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GtkWindowPeer.c\n\t(setTitle): Removed.\n\t* jni/gtk-peer/gthread-jni.c\n\t(gdk_threads_wake): Removed.\n\t* Makefile.am (gtk_c_source_files): Added new files\n\tjni/gtk-peer/gnu_java_awt_peer_gtk_GtkCheckboxGroupPeer.c and\n\tjni/gtk-peer/gnu_java_awt_peer_gtk_GtkGenericPeer.c.\n\t* Makefile.in: Regenerated.\n\nFrom-SVN: r81558", "tree": {"sha": "322d164bda1a2ff14a911853620017e9fac9edc5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/322d164bda1a2ff14a911853620017e9fac9edc5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/45505d4d0cc1f5b9d9e734c4b413e2b13cd84652", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/45505d4d0cc1f5b9d9e734c4b413e2b13cd84652", "html_url": "https://github.com/Rust-GCC/gccrs/commit/45505d4d0cc1f5b9d9e734c4b413e2b13cd84652", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/45505d4d0cc1f5b9d9e734c4b413e2b13cd84652/comments", "author": null, "committer": null, "parents": [{"sha": "615ccdd3581c6702e259e045380878dd60c56123", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/615ccdd3581c6702e259e045380878dd60c56123", "html_url": "https://github.com/Rust-GCC/gccrs/commit/615ccdd3581c6702e259e045380878dd60c56123"}], "stats": {"total": 280, "additions": 175, "deletions": 105}, "files": [{"sha": "ee8c36bfa5870f74f4c286ff634d018fede07da8", "filename": "libjava/ChangeLog", "status": "modified", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45505d4d0cc1f5b9d9e734c4b413e2b13cd84652/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45505d4d0cc1f5b9d9e734c4b413e2b13cd84652/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=45505d4d0cc1f5b9d9e734c4b413e2b13cd84652", "patch": "@@ -1,3 +1,29 @@\n+2004-05-06  Michael Koch  <konqueror@gmx.de>\n+\n+\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GtkCheckboxGroupPeer.c,\n+\tjni/gtk-peer/gnu_java_awt_peer_gtk_GtkGenericPeer.c:\n+\tNew files.\n+\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GtkCheckboxMenuItemPeer.c:\n+\tInclude gnu_java_awt_peer_gtk_GtkCheckboxMenuItemPeer.h.\n+\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GtkCheckboxPeer.c:\n+\tMoved GtkCheckboxGroupPeer_dispose and GtkCheckboxGroupPeer_remove to\n+\ttheir own source file.\n+\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GtkComponentPeer.c:\n+\tMoved GtkGenericPeer_dispose and GtkComponentPeer_requestFocus to\n+\ttheir own source file. Removed GtkComponentPeer_gtkWidgetSetUsize.\n+\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GtkMenuPeer.c\n+\t(create): Define variable on top of function.\n+\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GtkPopupMenuPeer.c\n+\t(menu_pos): Prototyped.\n+\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GtkWindowPeer.c\n+\t(setTitle): Removed.\n+\t* jni/gtk-peer/gthread-jni.c\n+\t(gdk_threads_wake): Removed.\n+\t* Makefile.am (gtk_c_source_files): Added new files\n+\tjni/gtk-peer/gnu_java_awt_peer_gtk_GtkCheckboxGroupPeer.c and\n+\tjni/gtk-peer/gnu_java_awt_peer_gtk_GtkGenericPeer.c.\n+\t* Makefile.in: Regenerated.\n+\n 2004-05-05  Bryce McKinlay  <mckinlay@redhat.com>\n \n \t* testsuite/libjava.jni/pr11951.java: Add missing System.loadLibrary()"}, {"sha": "ef8a49ddeb7c9187ead2964215ec406d66ed3b67", "filename": "libjava/Makefile.am", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45505d4d0cc1f5b9d9e734c4b413e2b13cd84652/libjava%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45505d4d0cc1f5b9d9e734c4b413e2b13cd84652/libjava%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FMakefile.am?ref=45505d4d0cc1f5b9d9e734c4b413e2b13cd84652", "patch": "@@ -191,6 +191,7 @@ jni/gtk-peer/gnu_java_awt_peer_gtk_GdkGraphics.c \\\n jni/gtk-peer/gnu_java_awt_peer_gtk_GdkPixbufDecoder.c \\\n jni/gtk-peer/gnu_java_awt_peer_gtk_GtkButtonPeer.c \\\n jni/gtk-peer/gnu_java_awt_peer_gtk_GtkCanvasPeer.c \\\n+jni/gtk-peer/gnu_java_awt_peer_gtk_GtkCheckboxGroupPeer.c \\\n jni/gtk-peer/gnu_java_awt_peer_gtk_GtkCheckboxMenuItemPeer.c \\\n jni/gtk-peer/gnu_java_awt_peer_gtk_GtkCheckboxPeer.c \\\n jni/gtk-peer/gnu_java_awt_peer_gtk_GtkChoicePeer.c \\\n@@ -199,6 +200,7 @@ jni/gtk-peer/gnu_java_awt_peer_gtk_GtkComponentPeer.c \\\n jni/gtk-peer/gnu_java_awt_peer_gtk_GtkEmbeddedWindowPeer.c \\\n jni/gtk-peer/gnu_java_awt_peer_gtk_GtkEvents.c \\\n jni/gtk-peer/gnu_java_awt_peer_gtk_GtkFileDialogPeer.c \\\n+jni/gtk-peer/gnu_java_awt_peer_gtk_GtkGenericPeer.c \\\n jni/gtk-peer/gnu_java_awt_peer_gtk_GtkImagePainter.c \\\n jni/gtk-peer/gnu_java_awt_peer_gtk_GtkLabelPeer.c \\\n jni/gtk-peer/gnu_java_awt_peer_gtk_GtkListPeer.c \\"}, {"sha": "1afe8dc27f62ddaca58b489485eeeddd9787c283", "filename": "libjava/Makefile.in", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45505d4d0cc1f5b9d9e734c4b413e2b13cd84652/libjava%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45505d4d0cc1f5b9d9e734c4b413e2b13cd84652/libjava%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FMakefile.in?ref=45505d4d0cc1f5b9d9e734c4b413e2b13cd84652", "patch": "@@ -282,6 +282,7 @@ jni/gtk-peer/gnu_java_awt_peer_gtk_GdkGraphics.c \\\n jni/gtk-peer/gnu_java_awt_peer_gtk_GdkPixbufDecoder.c \\\n jni/gtk-peer/gnu_java_awt_peer_gtk_GtkButtonPeer.c \\\n jni/gtk-peer/gnu_java_awt_peer_gtk_GtkCanvasPeer.c \\\n+jni/gtk-peer/gnu_java_awt_peer_gtk_GtkCheckboxGroupPeer.c \\\n jni/gtk-peer/gnu_java_awt_peer_gtk_GtkCheckboxMenuItemPeer.c \\\n jni/gtk-peer/gnu_java_awt_peer_gtk_GtkCheckboxPeer.c \\\n jni/gtk-peer/gnu_java_awt_peer_gtk_GtkChoicePeer.c \\\n@@ -290,6 +291,7 @@ jni/gtk-peer/gnu_java_awt_peer_gtk_GtkComponentPeer.c \\\n jni/gtk-peer/gnu_java_awt_peer_gtk_GtkEmbeddedWindowPeer.c \\\n jni/gtk-peer/gnu_java_awt_peer_gtk_GtkEvents.c \\\n jni/gtk-peer/gnu_java_awt_peer_gtk_GtkFileDialogPeer.c \\\n+jni/gtk-peer/gnu_java_awt_peer_gtk_GtkGenericPeer.c \\\n jni/gtk-peer/gnu_java_awt_peer_gtk_GtkImagePainter.c \\\n jni/gtk-peer/gnu_java_awt_peer_gtk_GtkLabelPeer.c \\\n jni/gtk-peer/gnu_java_awt_peer_gtk_GtkListPeer.c \\\n@@ -2859,6 +2861,7 @@ lib_gnu_java_awt_peer_gtk_la_DEPENDENCIES =\n @GTK_CAIRO_FALSE@jni/gtk-peer/gnu_java_awt_peer_gtk_GdkPixbufDecoder.lo \\\n @GTK_CAIRO_FALSE@jni/gtk-peer/gnu_java_awt_peer_gtk_GtkButtonPeer.lo \\\n @GTK_CAIRO_FALSE@jni/gtk-peer/gnu_java_awt_peer_gtk_GtkCanvasPeer.lo \\\n+@GTK_CAIRO_FALSE@jni/gtk-peer/gnu_java_awt_peer_gtk_GtkCheckboxGroupPeer.lo \\\n @GTK_CAIRO_FALSE@jni/gtk-peer/gnu_java_awt_peer_gtk_GtkCheckboxMenuItemPeer.lo \\\n @GTK_CAIRO_FALSE@jni/gtk-peer/gnu_java_awt_peer_gtk_GtkCheckboxPeer.lo \\\n @GTK_CAIRO_FALSE@jni/gtk-peer/gnu_java_awt_peer_gtk_GtkChoicePeer.lo \\\n@@ -2867,6 +2870,7 @@ lib_gnu_java_awt_peer_gtk_la_DEPENDENCIES =\n @GTK_CAIRO_FALSE@jni/gtk-peer/gnu_java_awt_peer_gtk_GtkEmbeddedWindowPeer.lo \\\n @GTK_CAIRO_FALSE@jni/gtk-peer/gnu_java_awt_peer_gtk_GtkEvents.lo \\\n @GTK_CAIRO_FALSE@jni/gtk-peer/gnu_java_awt_peer_gtk_GtkFileDialogPeer.lo \\\n+@GTK_CAIRO_FALSE@jni/gtk-peer/gnu_java_awt_peer_gtk_GtkGenericPeer.lo \\\n @GTK_CAIRO_FALSE@jni/gtk-peer/gnu_java_awt_peer_gtk_GtkImagePainter.lo \\\n @GTK_CAIRO_FALSE@jni/gtk-peer/gnu_java_awt_peer_gtk_GtkLabelPeer.lo \\\n @GTK_CAIRO_FALSE@jni/gtk-peer/gnu_java_awt_peer_gtk_GtkListPeer.lo \\\n@@ -2941,6 +2945,7 @@ lib_gnu_java_awt_peer_gtk_la_DEPENDENCIES =\n @GTK_CAIRO_TRUE@jni/gtk-peer/gnu_java_awt_peer_gtk_GdkPixbufDecoder.lo \\\n @GTK_CAIRO_TRUE@jni/gtk-peer/gnu_java_awt_peer_gtk_GtkButtonPeer.lo \\\n @GTK_CAIRO_TRUE@jni/gtk-peer/gnu_java_awt_peer_gtk_GtkCanvasPeer.lo \\\n+@GTK_CAIRO_TRUE@jni/gtk-peer/gnu_java_awt_peer_gtk_GtkCheckboxGroupPeer.lo \\\n @GTK_CAIRO_TRUE@jni/gtk-peer/gnu_java_awt_peer_gtk_GtkCheckboxMenuItemPeer.lo \\\n @GTK_CAIRO_TRUE@jni/gtk-peer/gnu_java_awt_peer_gtk_GtkCheckboxPeer.lo \\\n @GTK_CAIRO_TRUE@jni/gtk-peer/gnu_java_awt_peer_gtk_GtkChoicePeer.lo \\\n@@ -2949,6 +2954,7 @@ lib_gnu_java_awt_peer_gtk_la_DEPENDENCIES =\n @GTK_CAIRO_TRUE@jni/gtk-peer/gnu_java_awt_peer_gtk_GtkEmbeddedWindowPeer.lo \\\n @GTK_CAIRO_TRUE@jni/gtk-peer/gnu_java_awt_peer_gtk_GtkEvents.lo \\\n @GTK_CAIRO_TRUE@jni/gtk-peer/gnu_java_awt_peer_gtk_GtkFileDialogPeer.lo \\\n+@GTK_CAIRO_TRUE@jni/gtk-peer/gnu_java_awt_peer_gtk_GtkGenericPeer.lo \\\n @GTK_CAIRO_TRUE@jni/gtk-peer/gnu_java_awt_peer_gtk_GtkImagePainter.lo \\\n @GTK_CAIRO_TRUE@jni/gtk-peer/gnu_java_awt_peer_gtk_GtkLabelPeer.lo \\\n @GTK_CAIRO_TRUE@jni/gtk-peer/gnu_java_awt_peer_gtk_GtkListPeer.lo \\\n@@ -4697,6 +4703,7 @@ DEP_FILES =  .deps/$(srcdir)/$(CONVERT_DIR)/gen-from-JIS.P \\\n .deps/jni/gtk-peer/gnu_java_awt_peer_gtk_GdkPixbufDecoder.P \\\n .deps/jni/gtk-peer/gnu_java_awt_peer_gtk_GtkButtonPeer.P \\\n .deps/jni/gtk-peer/gnu_java_awt_peer_gtk_GtkCanvasPeer.P \\\n+.deps/jni/gtk-peer/gnu_java_awt_peer_gtk_GtkCheckboxGroupPeer.P \\\n .deps/jni/gtk-peer/gnu_java_awt_peer_gtk_GtkCheckboxMenuItemPeer.P \\\n .deps/jni/gtk-peer/gnu_java_awt_peer_gtk_GtkCheckboxPeer.P \\\n .deps/jni/gtk-peer/gnu_java_awt_peer_gtk_GtkChoicePeer.P \\\n@@ -4705,6 +4712,7 @@ DEP_FILES =  .deps/$(srcdir)/$(CONVERT_DIR)/gen-from-JIS.P \\\n .deps/jni/gtk-peer/gnu_java_awt_peer_gtk_GtkEmbeddedWindowPeer.P \\\n .deps/jni/gtk-peer/gnu_java_awt_peer_gtk_GtkEvents.P \\\n .deps/jni/gtk-peer/gnu_java_awt_peer_gtk_GtkFileDialogPeer.P \\\n+.deps/jni/gtk-peer/gnu_java_awt_peer_gtk_GtkGenericPeer.P \\\n .deps/jni/gtk-peer/gnu_java_awt_peer_gtk_GtkImagePainter.P \\\n .deps/jni/gtk-peer/gnu_java_awt_peer_gtk_GtkLabelPeer.P \\\n .deps/jni/gtk-peer/gnu_java_awt_peer_gtk_GtkListPeer.P \\"}, {"sha": "f88e2e8bcc3b26098cb53dfea34647f1a8cc4615", "filename": "libjava/jni/gtk-peer/gnu_java_awt_peer_gtk_GtkCheckboxGroupPeer.c", "status": "added", "additions": 75, "deletions": 0, "changes": 75, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45505d4d0cc1f5b9d9e734c4b413e2b13cd84652/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkCheckboxGroupPeer.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45505d4d0cc1f5b9d9e734c4b413e2b13cd84652/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkCheckboxGroupPeer.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkCheckboxGroupPeer.c?ref=45505d4d0cc1f5b9d9e734c4b413e2b13cd84652", "patch": "@@ -0,0 +1,75 @@\n+/* gtkcheckboxgrouppeer.c -- Native implementation of GtkCheckboxGroupPeer\n+   Copyright (C) 2004  Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+\n+#include \"gtkpeer.h\"\n+#include \"gnu_java_awt_peer_gtk_GtkCheckboxGroupPeer.h\"\n+\n+JNIEXPORT void JNICALL Java_gnu_java_awt_peer_gtk_GtkCheckboxGroupPeer_dispose\n+  (JNIEnv *env, jobject obj)\n+{\n+  /* The actual underlying widget is owned by a different class.  So\n+     we just clean up the hash table here.  */\n+  NSA_DEL_PTR (env, obj);\n+}\n+\n+JNIEXPORT void JNICALL Java_gnu_java_awt_peer_gtk_GtkCheckboxGroupPeer_remove\n+  (JNIEnv *env, jobject obj, jobject checkbox)\n+{\n+  GtkRadioButton *button;\n+  void *ptr;\n+  GSList *list;\n+\n+  ptr = NSA_GET_PTR (env, checkbox);\n+  gdk_threads_enter ();\n+  button = GTK_RADIO_BUTTON (ptr);\n+\n+  /* Update the group to point to some other widget in the group.  We\n+     have to do this because Gtk doesn't have a separate object to\n+     represent a radio button's group.  */\n+  for (list = gtk_radio_button_group (button); list != NULL;\n+       list = list->next)\n+    {\n+      if (list->data != button)\n+       break;\n+    }\n+\n+  gdk_threads_leave ();\n+\n+  NSA_SET_PTR (env, obj, list ? list->data : NULL);\n+}\n+"}, {"sha": "153b17fe3331999c7c5ef8b8ce04434298bfa2de", "filename": "libjava/jni/gtk-peer/gnu_java_awt_peer_gtk_GtkCheckboxMenuItemPeer.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45505d4d0cc1f5b9d9e734c4b413e2b13cd84652/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkCheckboxMenuItemPeer.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45505d4d0cc1f5b9d9e734c4b413e2b13cd84652/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkCheckboxMenuItemPeer.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkCheckboxMenuItemPeer.c?ref=45505d4d0cc1f5b9d9e734c4b413e2b13cd84652", "patch": "@@ -37,7 +37,7 @@ exception statement from your version. */\n \n \n #include \"gtkpeer.h\"\n-#include \"gnu_java_awt_peer_gtk_GtkMenuItemPeer.h\"\n+#include \"gnu_java_awt_peer_gtk_GtkCheckboxMenuItemPeer.h\"\n \n JNIEXPORT void JNICALL\n Java_gnu_java_awt_peer_gtk_GtkCheckboxMenuItemPeer_create"}, {"sha": "b4654bb2e29bd86e95f245e8977dff7862249962", "filename": "libjava/jni/gtk-peer/gnu_java_awt_peer_gtk_GtkCheckboxPeer.c", "status": "modified", "additions": 0, "deletions": 34, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45505d4d0cc1f5b9d9e734c4b413e2b13cd84652/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkCheckboxPeer.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45505d4d0cc1f5b9d9e734c4b413e2b13cd84652/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkCheckboxPeer.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkCheckboxPeer.c?ref=45505d4d0cc1f5b9d9e734c4b413e2b13cd84652", "patch": "@@ -42,40 +42,6 @@ exception statement from your version. */\n \n static void item_toggled (GtkToggleButton *item, jobject peer);\n \n-JNIEXPORT void JNICALL Java_gnu_java_awt_peer_gtk_GtkCheckboxGroupPeer_dispose\n-  (JNIEnv *env, jobject obj)\n-{\n-  /* The actual underlying widget is owned by a different class.  So\n-     we just clean up the hash table here.  */\n-  NSA_DEL_PTR (env, obj);\n-}\n-\n-JNIEXPORT void JNICALL Java_gnu_java_awt_peer_gtk_GtkCheckboxGroupPeer_remove\n-  (JNIEnv *env, jobject obj, jobject checkbox)\n-{\n-  GtkRadioButton *button;\n-  void *ptr;\n-  GSList *list;\n-\n-  ptr = NSA_GET_PTR (env, checkbox);\n-  gdk_threads_enter ();\n-  button = GTK_RADIO_BUTTON (ptr);\n-\n-  /* Update the group to point to some other widget in the group.  We\n-     have to do this because Gtk doesn't have a separate object to\n-     represent a radio button's group.  */\n-  for (list = gtk_radio_button_group (button); list != NULL;\n-       list = list->next)\n-    {\n-      if (list->data != button)\n-\tbreak;\n-    }\n-\n-  gdk_threads_leave ();\n-\n-  NSA_SET_PTR (env, obj, list ? list->data : NULL);\n-}\n-\n JNIEXPORT void JNICALL\n Java_gnu_java_awt_peer_gtk_GtkCheckboxPeer_nativeCreate\n   (JNIEnv *env, jobject obj, jobject group, jboolean state)"}, {"sha": "b1c28c9c84a13156bf425c0d7c27ea0199bcbd18", "filename": "libjava/jni/gtk-peer/gnu_java_awt_peer_gtk_GtkComponentPeer.c", "status": "modified", "additions": 0, "deletions": 42, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45505d4d0cc1f5b9d9e734c4b413e2b13cd84652/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkComponentPeer.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45505d4d0cc1f5b9d9e734c4b413e2b13cd84652/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkComponentPeer.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkComponentPeer.c?ref=45505d4d0cc1f5b9d9e734c4b413e2b13cd84652", "patch": "@@ -43,23 +43,6 @@ exception statement from your version. */\n static GtkWidget *find_fg_color_widget (GtkWidget *widget);\n static GtkWidget *find_bg_color_widget (GtkWidget *widget);\n \n-JNIEXPORT void JNICALL Java_gnu_java_awt_peer_gtk_GtkGenericPeer_dispose\n-  (JNIEnv *env, jobject obj)\n-{\n-  void *ptr;\n-\n-  /* Remove entries from state tables */\n-  NSA_DEL_GLOBAL_REF (env, obj);\n-  ptr = NSA_DEL_PTR (env, obj);\n-\n-  gdk_threads_enter ();\n-  \n-  /* For now the native state for any object must be a widget.\n-     However, a subclass could override dispose() if required.  */\n-  gtk_widget_destroy (GTK_WIDGET (ptr));\n-\n-  gdk_threads_leave ();\n-}\n \n JNIEXPORT void JNICALL \n Java_gnu_java_awt_peer_gtk_GtkComponentPeer_gtkWidgetSetCursor \n@@ -128,18 +111,6 @@ Java_gnu_java_awt_peer_gtk_GtkComponentPeer_gtkWidgetSetCursor\n   gdk_threads_leave ();\n }\n \n-JNIEXPORT void JNICALL Java_gnu_java_awt_peer_gtk_GtkComponentPeer_requestFocus\n-  (JNIEnv *env, jobject obj)\n-{\n-  void *ptr;\n-\n-  ptr = NSA_GET_PTR (env, obj);\n-  \n-  gdk_threads_enter ();\n-  /* XXX gtk_widget_grab_focus (GTK_WIDGET (ptr)); */\n-  gdk_threads_leave ();\n-}\n-\n /*\n  * Find the origin of a widget's window.\n  */\n@@ -234,19 +205,6 @@ Java_gnu_java_awt_peer_gtk_GtkComponentPeer_gtkWidgetGetPreferredDimensions\n   (*env)->ReleaseIntArrayElements (env, jdims, dims, 0);\n }\n \n-JNIEXPORT void JNICALL \n-Java_gnu_java_awt_peer_gtk_GtkComponentPeer_gtkWidgetSetUsize (JNIEnv *env, \n-    jobject obj, jint w, jint h)\n-{\n-  void *ptr;\n-\n-  ptr = NSA_GET_PTR (env, obj);\n-  \n-  gdk_threads_enter ();\n-  gtk_widget_set_usize (GTK_WIDGET (ptr), w, h);\n-  gdk_threads_leave ();\n-}\n-\n JNIEXPORT void JNICALL Java_gnu_java_awt_peer_gtk_GtkComponentPeer_setNativeBounds\n   (JNIEnv *env, jobject obj, jint x, jint y, jint width, jint height)\n {"}, {"sha": "7b8babeb83977e99fba4a6db1146199b0bda38d4", "filename": "libjava/jni/gtk-peer/gnu_java_awt_peer_gtk_GtkGenericPeer.c", "status": "added", "additions": 59, "deletions": 0, "changes": 59, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45505d4d0cc1f5b9d9e734c4b413e2b13cd84652/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkGenericPeer.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45505d4d0cc1f5b9d9e734c4b413e2b13cd84652/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkGenericPeer.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkGenericPeer.c?ref=45505d4d0cc1f5b9d9e734c4b413e2b13cd84652", "patch": "@@ -0,0 +1,59 @@\n+/* gtkgenericpeer.c -- Native implementation of GtkGenericPeer\n+   Copyright (C) 1998, 1999, 2002, 2004 Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+\n+#include \"gtkpeer.h\"\n+#include \"gnu_java_awt_peer_gtk_GtkGenericPeer.h\"\n+\n+JNIEXPORT void JNICALL Java_gnu_java_awt_peer_gtk_GtkGenericPeer_dispose\n+  (JNIEnv *env, jobject obj)\n+{\n+  void *ptr;\n+\n+  /* Remove entries from state tables */\n+  NSA_DEL_GLOBAL_REF (env, obj);\n+  ptr = NSA_DEL_PTR (env, obj);\n+\n+  gdk_threads_enter ();\n+\n+  /* For now the native state for any object must be a widget.\n+     However, a subclass could override dispose() if required.  */\n+  gtk_widget_destroy (GTK_WIDGET (ptr));\n+\n+  gdk_threads_leave ();\n+}\n+"}, {"sha": "e6a8851fcf28a34230a4de406a07d644d2cddb02", "filename": "libjava/jni/gtk-peer/gnu_java_awt_peer_gtk_GtkMenuPeer.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45505d4d0cc1f5b9d9e734c4b413e2b13cd84652/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkMenuPeer.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45505d4d0cc1f5b9d9e734c4b413e2b13cd84652/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkMenuPeer.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkMenuPeer.c?ref=45505d4d0cc1f5b9d9e734c4b413e2b13cd84652", "patch": "@@ -89,7 +89,7 @@ JNIEXPORT void JNICALL Java_gnu_java_awt_peer_gtk_GtkMenuPeer_setupAccelGroup\n JNIEXPORT void JNICALL Java_gnu_java_awt_peer_gtk_GtkMenuPeer_create\n   (JNIEnv *env, jobject obj, jstring label)\n {\n-  GtkWidget *menu_title, *menu;\n+  GtkWidget *menu_title, *menu, *toplevel;\n   const char *str;\n \n   /* Create global reference and save it for future use */\n@@ -109,7 +109,7 @@ JNIEXPORT void JNICALL Java_gnu_java_awt_peer_gtk_GtkMenuPeer_create\n   gtk_menu_item_set_submenu (GTK_MENU_ITEM (menu_title), menu);\n \n   /* Allow this menu to grab the pointer. */\n-  GtkWidget *toplevel = gtk_widget_get_toplevel (menu);\n+  toplevel = gtk_widget_get_toplevel (menu);\n   if (GTK_IS_WINDOW (toplevel))\n     {\n       gtk_window_group_add_window (global_gtk_window_group,"}, {"sha": "ee12a7f77b1a0e634f52edad5ef3b2044a757ec0", "filename": "libjava/jni/gtk-peer/gnu_java_awt_peer_gtk_GtkPopupMenuPeer.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45505d4d0cc1f5b9d9e734c4b413e2b13cd84652/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkPopupMenuPeer.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45505d4d0cc1f5b9d9e734c4b413e2b13cd84652/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkPopupMenuPeer.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkPopupMenuPeer.c?ref=45505d4d0cc1f5b9d9e734c4b413e2b13cd84652", "patch": "@@ -39,6 +39,8 @@ exception statement from your version. */\n #include \"gtkpeer.h\"\n #include \"gnu_java_awt_peer_gtk_GtkPopupMenuPeer.h\"\n \n+void menu_pos (GtkMenu *, gint *, gint *, gboolean *, gpointer);\n+\n struct pos\n {\n   gint x;"}, {"sha": "619b48d593a8d008baaccda1dcbc71692710558f", "filename": "libjava/jni/gtk-peer/gnu_java_awt_peer_gtk_GtkWindowPeer.c", "status": "modified", "additions": 0, "deletions": 22, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45505d4d0cc1f5b9d9e734c4b413e2b13cd84652/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkWindowPeer.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45505d4d0cc1f5b9d9e734c4b413e2b13cd84652/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkWindowPeer.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkWindowPeer.c?ref=45505d4d0cc1f5b9d9e734c4b413e2b13cd84652", "patch": "@@ -283,28 +283,6 @@ Java_gnu_java_awt_peer_gtk_GtkWindowPeer_connectSignals\n   Java_gnu_java_awt_peer_gtk_GtkComponentPeer_connectSignals (env, obj);\n }\n \n-/*\n- * Set a frame's title\n- */\n-\n-JNIEXPORT void JNICALL \n-Java_gnu_java_awt_peer_gtk_GtkWindowPeer_setTitle\n-  (JNIEnv *env, jobject obj, jstring title)\n-{\n-  void *ptr;\n-  const char *str;\n-\n-  ptr = NSA_GET_PTR (env, obj);\n-  \n-  str = (*env)->GetStringUTFChars (env, title, NULL);\n-  \n-  gdk_threads_enter ();\n-  gtk_window_set_title (GTK_WINDOW (ptr), str);\n-  gdk_threads_leave ();\n-  \n-  (*env)->ReleaseStringUTFChars (env, title, str);\n-}\n-\n /*\n  * Lower the z-level of a window. \n  */"}, {"sha": "3dd5596b4bc0079cb6718f0e0c1817559de63e8d", "filename": "libjava/jni/gtk-peer/gthread-jni.c", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45505d4d0cc1f5b9d9e734c4b413e2b13cd84652/libjava%2Fjni%2Fgtk-peer%2Fgthread-jni.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45505d4d0cc1f5b9d9e734c4b413e2b13cd84652/libjava%2Fjni%2Fgtk-peer%2Fgthread-jni.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjni%2Fgtk-peer%2Fgthread-jni.c?ref=45505d4d0cc1f5b9d9e734c4b413e2b13cd84652", "patch": "@@ -505,7 +505,3 @@ GThreadFunctions g_thread_jni_functions =\n   NULL\n };\n \n-/* ??? */\n-void gdk_threads_wake () {\n-\n-}"}]}