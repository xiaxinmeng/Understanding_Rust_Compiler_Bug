{"sha": "a6bea8cee1e43ce94242f691e192f186ba9b05df", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTZiZWE4Y2VlMWU0M2NlOTQyNDJmNjkxZTE5MmYxODZiYTliMDVkZg==", "commit": {"author": {"name": "Keith Seitz", "email": "keiths@redhat.com", "date": "2002-04-15T21:59:09Z"}, "committer": {"name": "DJ Delorie", "email": "dj@gcc.gnu.org", "date": "2002-04-15T21:59:09Z"}, "message": "acinclude.m4 (CYG_AC_PATH_TCLCONFIG): Search the win/ directory, too.\n\n* acinclude.m4 (CYG_AC_PATH_TCLCONFIG): Search the win/ directory,\ntoo.\n(CYG_AC_PATH_TKCONFIG): Likewise.\n\nFrom-SVN: r52338", "tree": {"sha": "32c937f590f45d5711419d79787dd57c26257505", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/32c937f590f45d5711419d79787dd57c26257505"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a6bea8cee1e43ce94242f691e192f186ba9b05df", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a6bea8cee1e43ce94242f691e192f186ba9b05df", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a6bea8cee1e43ce94242f691e192f186ba9b05df", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a6bea8cee1e43ce94242f691e192f186ba9b05df/comments", "author": {"login": "shtiek", "id": 107581324, "node_id": "U_kgDOBmmPjA", "avatar_url": "https://avatars.githubusercontent.com/u/107581324?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shtiek", "html_url": "https://github.com/shtiek", "followers_url": "https://api.github.com/users/shtiek/followers", "following_url": "https://api.github.com/users/shtiek/following{/other_user}", "gists_url": "https://api.github.com/users/shtiek/gists{/gist_id}", "starred_url": "https://api.github.com/users/shtiek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shtiek/subscriptions", "organizations_url": "https://api.github.com/users/shtiek/orgs", "repos_url": "https://api.github.com/users/shtiek/repos", "events_url": "https://api.github.com/users/shtiek/events{/privacy}", "received_events_url": "https://api.github.com/users/shtiek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "0aa911c5b2766b10d86fa1b2f7cc4a57ca67c523", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0aa911c5b2766b10d86fa1b2f7cc4a57ca67c523", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0aa911c5b2766b10d86fa1b2f7cc4a57ca67c523"}], "stats": {"total": 34, "additions": 34, "deletions": 0}, "files": [{"sha": "6e51fa2c4ce05acb49a51743f700d9d6bbef4ae6", "filename": "config/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6bea8cee1e43ce94242f691e192f186ba9b05df/config%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6bea8cee1e43ce94242f691e192f186ba9b05df/config%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/config%2FChangeLog?ref=a6bea8cee1e43ce94242f691e192f186ba9b05df", "patch": "@@ -1,3 +1,9 @@\n+2002-04-15  Keith Seitz  <keiths@redhat.com>\n+\n+\t* acinclude.m4 (CYG_AC_PATH_TCLCONFIG): Search the win/ directory,\n+\ttoo.\n+\t(CYG_AC_PATH_TKCONFIG): Likewise.\n+\n 2001-10-07  Joseph S. Myers  <jsm28@cam.ac.uk>\n \n \t* acinclude.m4: Fix spelling error of \"separate\" as \"seperate\"."}, {"sha": "9be62cb9a067e41599a13981e920f2d49dc20e78", "filename": "config/acinclude.m4", "status": "modified", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6bea8cee1e43ce94242f691e192f186ba9b05df/config%2Facinclude.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6bea8cee1e43ce94242f691e192f186ba9b05df/config%2Facinclude.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/config%2Facinclude.m4?ref=a6bea8cee1e43ce94242f691e192f186ba9b05df", "patch": "@@ -959,10 +959,17 @@ if test x\"${no_tcl}\" = x ; then\n     dnl next check if it came with Tcl configuration file in the source tree\n     if test x\"${ac_cv_c_tclconfig}\" = x ; then\n         for i in $dirlist; do\n+            dnl need to test both unix and win directories, since \n+            dnl cygwin's tkConfig.sh could be in either directory depending\n+            dnl on the cygwin port of tcl.\n             if test -f $srcdir/$i/unix/tclConfig.sh ; then\n                 ac_cv_c_tclconfig=`(cd $srcdir/$i/unix; pwd)`\n \t        break\n             fi\n+            if test -f $srcdir/$i/win/tclConfig.sh ; then\n+                ac_cv_c_tclconfig=`(cd $srcdir/$i/win; pwd)`\n+\t        break\n+            fi\n         done\n     fi\n     dnl check in a few other locations\n@@ -978,10 +985,17 @@ if test x\"${no_tcl}\" = x ; then\n         dnl find the exact Tcl dir. We do it this way, cause there\n         dnl might be multiple version of Tcl, and we want the most recent one.\n         for i in `ls -dr $tclconfpath/tcl* 2>/dev/null ` ; do\n+            dnl need to test both unix and win directories, since \n+            dnl cygwin's tclConfig.sh could be in either directory depending\n+            dnl on the cygwin port of tcl.\n             if test -f $i/unix/tclConfig.sh ; then\n                 ac_cv_c_tclconfig=`(cd $i/unix; pwd)`\n                 break\n             fi\n+            if test -f $i/win/tclConfig.sh ; then\n+                ac_cv_c_tclconfig=`(cd $i/win; pwd)`\n+                break\n+            fi\n         done\n     fi\n \n@@ -1178,10 +1192,17 @@ if test x\"${no_tk}\" = x ; then\n     dnl next check if it came with Tk configuration file in the source tree\n     if test x\"${ac_cv_c_tkconfig}\" = x ; then\n         for i in $dirlist; do\n+            dnl need to test both unix and win directories, since \n+            dnl cygwin's tkConfig.sh could be in either directory depending\n+            dnl on the cygwin port of tk.\n             if test -f $srcdir/$i/unix/tkConfig.sh ; then\n                 ac_cv_c_tkconfig=`(cd $srcdir/$i/unix; pwd)`\n \t        break\n             fi\n+            if test -f $srcdir/$i/win/tkConfig.sh ; then\n+                ac_cv_c_tkconfig=`(cd $srcdir/$i/unix; pwd)`\n+\t        break\n+            fi\n         done\n     fi\n     dnl check in a few other locations\n@@ -1197,10 +1218,17 @@ if test x\"${no_tk}\" = x ; then\n         dnl find the exact Tk dir. We do it this way, cause there\n         dnl might be multiple version of Tk, and we want the most recent one.\n         for i in `ls -dr $tkconfpath/tk* 2>/dev/null ` ; do\n+            dnl need to test both unix and win directories, since \n+            dnl cygwin's tkConfig.sh could be in either directory depending\n+            dnl on the cygwin port of tk.\n             if test -f $i/unix/tkConfig.sh ; then\n                 ac_cv_c_tkconfig=`(cd $i/unix; pwd)`\n                 break\n             fi\n+            if test -f $i/win/tkConfig.sh ; then\n+                ac_cv_c_tkconfig=`(cd $i/win; pwd)`\n+                break\n+            fi\n         done\n     fi\n "}]}