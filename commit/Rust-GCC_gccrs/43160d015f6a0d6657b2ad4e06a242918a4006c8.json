{"sha": "43160d015f6a0d6657b2ad4e06a242918a4006c8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDMxNjBkMDE1ZjZhMGQ2NjU3YjJhZDRlMDZhMjQyOTE4YTQwMDZjOA==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@codesourcery.com", "date": "2001-06-07T08:32:03Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2001-06-07T08:32:03Z"}, "message": "configure.in (sparc*-*-*): Check assembler R_SPARC_UA32 support.\n\n\t* configure.in (sparc*-*-*): Check assembler R_SPARC_UA32 support.\n\t* configure: Rebuilt.\n\nFrom-SVN: r42955", "tree": {"sha": "ecd8fa8934e7a082e52d6ac63f30a13d0ea35862", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ecd8fa8934e7a082e52d6ac63f30a13d0ea35862"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/43160d015f6a0d6657b2ad4e06a242918a4006c8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/43160d015f6a0d6657b2ad4e06a242918a4006c8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/43160d015f6a0d6657b2ad4e06a242918a4006c8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/43160d015f6a0d6657b2ad4e06a242918a4006c8/comments", "author": null, "committer": null, "parents": [{"sha": "750c925888dd3194294ad91cb1920f5175648006", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/750c925888dd3194294ad91cb1920f5175648006", "html_url": "https://github.com/Rust-GCC/gccrs/commit/750c925888dd3194294ad91cb1920f5175648006"}], "stats": {"total": 92, "additions": 88, "deletions": 4}, "files": [{"sha": "e48f8d4cf175d4f233fd34f0321daa115ce83dd9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43160d015f6a0d6657b2ad4e06a242918a4006c8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43160d015f6a0d6657b2ad4e06a242918a4006c8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=43160d015f6a0d6657b2ad4e06a242918a4006c8", "patch": "@@ -1,3 +1,8 @@\n+2001-06-07  Nathan Sidwell  <nathan@codesourcery.com>\n+\n+\t* configure.in (sparc*-*-*): Check assembler R_SPARC_UA32 support.\n+\t* configure: Rebuilt.\n+\n 2001-06-07  Andreas Jaeger  <aj@suse.de>\n \n \t* emit-rtl.c (operand_subword): Remove unused variable."}, {"sha": "f35c7d1444c16a2666a9c243a278417eb1595952", "filename": "gcc/configure", "status": "modified", "additions": 47, "deletions": 4, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43160d015f6a0d6657b2ad4e06a242918a4006c8/gcc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43160d015f6a0d6657b2ad4e06a242918a4006c8/gcc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure?ref=43160d015f6a0d6657b2ad4e06a242918a4006c8", "patch": "@@ -2052,7 +2052,7 @@ EOF\n fi\n \n # Find some useful tools\n-for ac_prog in mawk gawk nawk awk\n+for ac_prog in gawk mawk nawk awk\n do\n # Extract the first word of \"$ac_prog\", so it can be a program name with args.\n set dummy $ac_prog; ac_word=$2\n@@ -7171,11 +7171,54 @@ EOF\n \n \tfi\n     fi\n+    echo $ac_n \"checking assembler R_SPARC_UA32 relocation support\"\"... $ac_c\" 1>&6\n+echo \"configure:7176: checking assembler R_SPARC_UA32 relocation support\" >&5\n+if eval \"test \\\"`echo '$''{'gcc_cv_as_ua32_reloc'+set}'`\\\" = set\"; then\n+  echo $ac_n \"(cached) $ac_c\" 1>&6\n+else\n+  \n+        gcc_cv_as_ua32_reloc=\n+\tcat >conftest.s << EOF\n+\t.byte 0x1\n+\t.uaword foo\n+EOF\n+\tif $gcc_cv_as -o conftest.o conftest.s > /dev/null 2>&1; then\n+\t  if (readelf -r conftest.o > conftest.elf) 2>/dev/null ; then\n+\t    true\n+\t  elif (elfdump -r conftest.o > conftest.elf) 2>/dev/null ; then\n+\t    true\n+\t  elif (`dirname $gcc_cv_as`/readelf -r conftest.o > conftest.elf) 2>/dev/null ; then\n+\t    true\n+\t  elif (`dirname $gcc_cv_as`/elfdump -r conftest.o > conftest.elf) 2>/dev/null ; then\n+\t    true\n+\t  else\n+\t    gcc_cv_as_ua32_reloc=unknown\n+\t  fi\n+\t  if test x$gcc_cv_as_ua32_reloc = x && test `grep -c R_SPARC_UA32 conftest.elf` = 1 ; then\n+\t    gcc_cv_as_ua32_reloc=yes\n+\t  else\n+\t    gcc_cv_as_ua32_reloc=no\n+\t  fi\n+\telse\n+\t  gcc_cv_as_ua32_reloc=unknown\n+\tfi\n+\trm -f conftest.s conftest.o conftest.elf\n+\t\n+fi\n+\n+echo \"$ac_t\"\"$gcc_cv_as_ua32_reloc\" 1>&6\n+    if test \"x$gcc_cv_as_ua32_reloc\" = xno; then\n+      { echo \"configure: error: Assembler does not support R_SPARC_UA32 correctly.\n+Please use native assembler or upgrade to binutils >= 2.11.1\" 1>&2; exit 1; }\n+    elif test \"x$gcc_cv_as_ua32_reloc\" != xyes ; then\n+      echo \"configure: warning: Cannot determine whether assembler supports R_SPARC_UA32 correctly.\n+The resulting compiler might not produce useable executables.\" 1>&2\n+    fi\n     ;;\n \n   i[34567]86-*-*)\n     echo $ac_n \"checking assembler instructions\"\"... $ac_c\" 1>&6\n-echo \"configure:7179: checking assembler instructions\" >&5\n+echo \"configure:7222: checking assembler instructions\" >&5\n     gcc_cv_as_instructions=\n     if test x$gcc_cv_gas_major_version != x -a x$gcc_cv_gas_minor_version != x; then\n       if test \"$gcc_cv_gas_major_version\" -eq 2 -a \"$gcc_cv_gas_minor_version\" -ge 9 -o \"$gcc_cv_gas_major_version\" -gt 2; then\n@@ -7204,7 +7247,7 @@ EOF\n esac\n \n echo $ac_n \"checking assembler dwarf2 debug_line support\"\"... $ac_c\" 1>&6\n-echo \"configure:7208: checking assembler dwarf2 debug_line support\" >&5\n+echo \"configure:7251: checking assembler dwarf2 debug_line support\" >&5\n gcc_cv_as_dwarf2_debug_line=no\n # ??? Not all targets support dwarf2 debug_line, even within a version\n # of gas.  Moreover, we need to emit a valid instruction to trigger any\n@@ -7389,7 +7432,7 @@ fi\n \n \n echo $ac_n \"checking whether to enable maintainer-specific portions of Makefiles\"\"... $ac_c\" 1>&6\n-echo \"configure:7393: checking whether to enable maintainer-specific portions of Makefiles\" >&5\n+echo \"configure:7436: checking whether to enable maintainer-specific portions of Makefiles\" >&5\n     # Check whether --enable-maintainer-mode or --disable-maintainer-mode was given.\n if test \"${enable_maintainer_mode+set}\" = set; then\n   enableval=\"$enable_maintainer_mode\""}, {"sha": "0b89592e1ab54016d2d9198944ac1b67eec876c2", "filename": "gcc/configure.in", "status": "modified", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43160d015f6a0d6657b2ad4e06a242918a4006c8/gcc%2Fconfigure.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43160d015f6a0d6657b2ad4e06a242918a4006c8/gcc%2Fconfigure.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure.in?ref=43160d015f6a0d6657b2ad4e06a242918a4006c8", "patch": "@@ -1587,6 +1587,42 @@ changequote([, ])\n \t\t[Define if your assembler supports offsetable %lo().])\n \tfi\n     fi\n+    AC_CACHE_CHECK([assembler R_SPARC_UA32 relocation support],\n+\tgcc_cv_as_ua32_reloc, [\n+        gcc_cv_as_ua32_reloc=\n+\tcat >conftest.s << EOF\n+\t.byte 0x1\n+\t.uaword foo\n+EOF\n+\tif $gcc_cv_as -o conftest.o conftest.s > /dev/null 2>&1; then\n+\t  if (readelf -r conftest.o > conftest.elf) 2>/dev/null ; then\n+\t    true\n+\t  elif (elfdump -r conftest.o > conftest.elf) 2>/dev/null ; then\n+\t    true\n+\t  elif (`dirname $gcc_cv_as`/readelf -r conftest.o > conftest.elf) 2>/dev/null ; then\n+\t    true\n+\t  elif (`dirname $gcc_cv_as`/elfdump -r conftest.o > conftest.elf) 2>/dev/null ; then\n+\t    true\n+\t  else\n+\t    gcc_cv_as_ua32_reloc=unknown\n+\t  fi\n+\t  if test x$gcc_cv_as_ua32_reloc = x && test `grep -c R_SPARC_UA32 conftest.elf` = 1 ; then\n+\t    gcc_cv_as_ua32_reloc=yes\n+\t  else\n+\t    gcc_cv_as_ua32_reloc=no\n+\t  fi\n+\telse\n+\t  gcc_cv_as_ua32_reloc=unknown\n+\tfi\n+\trm -f conftest.s conftest.o conftest.elf\n+\t])\n+    if test \"x$gcc_cv_as_ua32_reloc\" = xno; then\n+      AC_MSG_ERROR([Assembler does not support R_SPARC_UA32 correctly.\n+Please use native assembler or upgrade to binutils >= 2.11.1])\n+    elif test \"x$gcc_cv_as_ua32_reloc\" != xyes ; then\n+      AC_MSG_WARN([Cannot determine whether assembler supports R_SPARC_UA32 correctly.\n+The resulting compiler might not produce useable executables.])\n+    fi\n     ;;\n \n changequote(,)dnl"}]}