{"sha": "31ae1b4629ed84e4dd0ba7ac4f94181ab197041f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzFhZTFiNDYyOWVkODRlNGRkMGJhN2FjNGY5NDE4MWFiMTk3MDQxZg==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2016-04-20T09:14:02Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2016-04-20T09:14:02Z"}, "message": "[multiple changes]\n\n2016-04-20  Arnaud Charlet  <charlet@adacore.com>\n\n\t* snames.ads-tmpl (Internal_Attribute_Id, Attribute_Class_Array): Fix\n\tindentation.\n\t* sem_util.adb (Is_Unchecked_Conversion_Instance):\n\tdefense against library-level renamings of other functions,\n\twhich are never instances of Unchecked_Conversion.\n\t* einfo.ads: minor fix of casing in comment\n\n2016-04-20  Ed Schonberg  <schonberg@adacore.com>\n\n\t* exp_ch6.adb (Expand_N_Subprogram_Stub): Do not expand a body\n\tthat has been analyzed and expanded already. Qualify the names\n\tin the proper body for use in the generation of C code.\n\nFrom-SVN: r235244", "tree": {"sha": "d671cff63143ce6c618c5b9b30e2b7e5fb3bb45d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d671cff63143ce6c618c5b9b30e2b7e5fb3bb45d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/31ae1b4629ed84e4dd0ba7ac4f94181ab197041f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/31ae1b4629ed84e4dd0ba7ac4f94181ab197041f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/31ae1b4629ed84e4dd0ba7ac4f94181ab197041f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/31ae1b4629ed84e4dd0ba7ac4f94181ab197041f/comments", "author": null, "committer": null, "parents": [{"sha": "1ba563f5f9ba42ccbb36f4201bcbbe0c807ae26e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1ba563f5f9ba42ccbb36f4201bcbbe0c807ae26e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1ba563f5f9ba42ccbb36f4201bcbbe0c807ae26e"}], "stats": {"total": 53, "additions": 44, "deletions": 9}, "files": [{"sha": "fe429f1283e454c5a2e4d52c872f106e44b6788f", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/31ae1b4629ed84e4dd0ba7ac4f94181ab197041f/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/31ae1b4629ed84e4dd0ba7ac4f94181ab197041f/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=31ae1b4629ed84e4dd0ba7ac4f94181ab197041f", "patch": "@@ -1,3 +1,18 @@\n+2016-04-20  Arnaud Charlet  <charlet@adacore.com>\n+\n+\t* snames.ads-tmpl (Internal_Attribute_Id, Attribute_Class_Array): Fix\n+\tindentation.\n+\t* sem_util.adb (Is_Unchecked_Conversion_Instance):\n+\tdefense against library-level renamings of other functions,\n+\twhich are never instances of Unchecked_Conversion.\n+\t* einfo.ads: minor fix of casing in comment\n+\n+2016-04-20  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* exp_ch6.adb (Expand_N_Subprogram_Stub): Do not expand a body\n+\tthat has been analyzed and expanded already. Qualify the names\n+\tin the proper body for use in the generation of C code.\n+\n 2016-04-20  Javier Miranda  <miranda@adacore.com>\n \n \t* contracts.adb (Build_Postconditions_Procedure): Force its"}, {"sha": "e55c6762bb2b0851a1ae7877376d01ee07f30ae6", "filename": "gcc/ada/einfo.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/31ae1b4629ed84e4dd0ba7ac4f94181ab197041f/gcc%2Fada%2Feinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/31ae1b4629ed84e4dd0ba7ac4f94181ab197041f/gcc%2Fada%2Feinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.ads?ref=31ae1b4629ed84e4dd0ba7ac4f94181ab197041f", "patch": "@@ -4441,9 +4441,9 @@ package Einfo is\n --  protected operation, etc).\n \n --  b) Alias applies to overloadable entities, and the value is an overloadable\n---  entity. so this is a subset of the previous one. We use the term Alias to\n+--  entity. So this is a subset of the previous one. We use the term Alias to\n --  cover both renamings and inherited operations, because both cases are\n---  handled in the same way when expanding a call. namely the Alias of a given\n+--  handled in the same way when expanding a call. Namely the Alias of a given\n --  subprogram is the subprogram that will actually be called.\n \n --  Both a) and b) are set transitively, so that in fact it is not necessary to"}, {"sha": "511f479f160aad1e998f3f8aa6f786782b5169a5", "filename": "gcc/ada/exp_ch6.adb", "status": "modified", "additions": 15, "deletions": 2, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/31ae1b4629ed84e4dd0ba7ac4f94181ab197041f/gcc%2Fada%2Fexp_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/31ae1b4629ed84e4dd0ba7ac4f94181ab197041f/gcc%2Fada%2Fexp_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch6.adb?ref=31ae1b4629ed84e4dd0ba7ac4f94181ab197041f", "patch": "@@ -5521,10 +5521,23 @@ package body Exp_Ch6 is\n    -----------------------------------\n \n    procedure Expand_N_Subprogram_Body_Stub (N : Node_Id) is\n+      Bod : Node_Id;\n    begin\n       if Present (Corresponding_Body (N)) then\n-         Expand_N_Subprogram_Body (\n-           Unit_Declaration_Node (Corresponding_Body (N)));\n+         Bod := Unit_Declaration_Node (Corresponding_Body (N));\n+\n+         --  The body may have been expanded already when it is analyzed\n+         --  through the subunit node. Do no expand again: it interferes\n+         --  with the construction of unnesting tables when generating C.\n+\n+         if not Analyzed (Bod) then\n+            Expand_N_Subprogram_Body (Bod);\n+         end if;\n+\n+         --  Add full qualification to entities that may be created late\n+         --  during unnesting.\n+\n+         Qualify_Entity_Names (N);\n       end if;\n    end Expand_N_Subprogram_Body_Stub;\n "}, {"sha": "48208309c56325b462d09ea96a38019449cd4f1d", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/31ae1b4629ed84e4dd0ba7ac4f94181ab197041f/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/31ae1b4629ed84e4dd0ba7ac4f94181ab197041f/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=31ae1b4629ed84e4dd0ba7ac4f94181ab197041f", "patch": "@@ -14282,14 +14282,21 @@ package body Sem_Util is\n    --------------------------------------\n \n    function Is_Unchecked_Conversion_Instance (Id : Entity_Id) return Boolean is\n+      Par     : Node_Id;\n       Gen_Par : Entity_Id;\n \n    begin\n       --  Look for a function whose generic parent is the predefined intrinsic\n       --  function Unchecked_Conversion.\n \n       if Ekind (Id) = E_Function then\n-         Gen_Par := Generic_Parent (Parent (Id));\n+         Par     := Parent (Id);\n+\n+         if Nkind (Par) /= N_Function_Specification then\n+            return False;\n+         end if;\n+\n+         Gen_Par := Generic_Parent (Par);\n \n          return\n            Present (Gen_Par)"}, {"sha": "76b353bad7b8fdbfba442f4b1a8c7fbb53d4e3eb", "filename": "gcc/ada/snames.ads-tmpl", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/31ae1b4629ed84e4dd0ba7ac4f94181ab197041f/gcc%2Fada%2Fsnames.ads-tmpl", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/31ae1b4629ed84e4dd0ba7ac4f94181ab197041f/gcc%2Fada%2Fsnames.ads-tmpl", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsnames.ads-tmpl?ref=31ae1b4629ed84e4dd0ba7ac4f94181ab197041f", "patch": "@@ -1677,11 +1677,11 @@ package Snames is\n       Attribute_Dispatching_Domain,\n       Attribute_Interrupt_Priority);\n \n-      subtype Internal_Attribute_Id is Attribute_Id range\n-        Attribute_CPU .. Attribute_Interrupt_Priority;\n+   subtype Internal_Attribute_Id is Attribute_Id range\n+     Attribute_CPU .. Attribute_Interrupt_Priority;\n \n-      type Attribute_Class_Array is array (Attribute_Id) of Boolean;\n-      --  Type used to build attribute classification flag arrays\n+   type Attribute_Class_Array is array (Attribute_Id) of Boolean;\n+   --  Type used to build attribute classification flag arrays\n \n    ------------------------------------\n    -- Convention Name ID Definitions --"}]}