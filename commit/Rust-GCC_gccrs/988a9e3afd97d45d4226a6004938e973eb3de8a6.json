{"sha": "988a9e3afd97d45d4226a6004938e973eb3de8a6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTg4YTllM2FmZDk3ZDQ1ZDQyMjZhNjAwNDkzOGU5NzNlYjNkZThhNg==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1992-03-01T23:10:41Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1992-03-01T23:10:41Z"}, "message": "*** empty log message ***\n\nFrom-SVN: r372", "tree": {"sha": "905dac6af5513fd6c89ff32f980fd295b92652b1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/905dac6af5513fd6c89ff32f980fd295b92652b1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/988a9e3afd97d45d4226a6004938e973eb3de8a6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/988a9e3afd97d45d4226a6004938e973eb3de8a6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/988a9e3afd97d45d4226a6004938e973eb3de8a6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/988a9e3afd97d45d4226a6004938e973eb3de8a6/comments", "author": null, "committer": null, "parents": [{"sha": "2002d72d90a61765b843852e3208cb8696107955", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2002d72d90a61765b843852e3208cb8696107955", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2002d72d90a61765b843852e3208cb8696107955"}], "stats": {"total": 213, "additions": 213, "deletions": 0}, "files": [{"sha": "df39ff27b6dd2cb54a65c02da09353b68361e6a5", "filename": "gcc/config/m68k/m68k.md", "status": "modified", "additions": 213, "deletions": 0, "changes": 213, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/988a9e3afd97d45d4226a6004938e973eb3de8a6/gcc%2Fconfig%2Fm68k%2Fm68k.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/988a9e3afd97d45d4226a6004938e973eb3de8a6/gcc%2Fconfig%2Fm68k%2Fm68k.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fm68k.md?ref=988a9e3afd97d45d4226a6004938e973eb3de8a6", "patch": "@@ -1828,13 +1828,26 @@\n   return \\\"add%.w %2,%0\\\";\n }\")\n \n+;; These insns must use MATCH_DUP instead of the more expected\n+;; use of a matching constraint because the \"output\" here is also\n+;; an input, so you can't use the matching constraint.  That also means\n+;; that you can't use the \"%\", so you need patterns with the matched\n+;; operand in both positions.\n+\n (define_insn \"\"\n   [(set (strict_low_part (match_operand:HI 0 \"general_operand\" \"+m,d\"))\n \t(plus:HI (match_dup 0)\n \t\t (match_operand:HI 1 \"general_operand\" \"dn,rmn\")))]\n   \"\"\n   \"add%.w %1,%0\")\n \n+(define_insn \"\"\n+  [(set (strict_low_part (match_operand:HI 0 \"general_operand\" \"+m,d\"))\n+\t(plus:HI (match_operand:HI 1 \"general_operand\" \"dn,rmn\")\n+\t\t (match_dup 0)))]\n+  \"\"\n+  \"add%.w %1,%0\")\n+\n (define_insn \"addqi3\"\n   [(set (match_operand:QI 0 \"general_operand\" \"=m,d\")\n \t(plus:QI (match_operand:QI 1 \"general_operand\" \"%0,0\")\n@@ -1868,6 +1881,13 @@\n   \"\"\n   \"add%.b %1,%0\")\n \n+(define_insn \"\"\n+  [(set (strict_low_part (match_operand:QI 0 \"general_operand\" \"+m,d\"))\n+\t(plus:QI (match_operand:QI 1 \"general_operand\" \"dn,dmn\")\n+\t\t (match_dup 0)))]\n+  \"\"\n+  \"add%.b %1,%0\")\n+\n (define_expand \"adddf3\"\n   [(set (match_operand:DF 0 \"general_operand\" \"\")\n \t(plus:DF (match_operand:DF 1 \"general_operand\" \"\")\n@@ -2721,13 +2741,40 @@\n   \"\"\n   \"and%.w %2,%0\")\n \n+(define_insn \"\"\n+  [(set (strict_low_part (match_operand:HI 0 \"general_operand\" \"+m,d\"))\n+\t(and:HI (match_dup 0)\n+\t\t(match_operand:HI 1 \"general_operand\" \"dn,dmn\")))]\n+  \"\"\n+  \"and%.w %1,%0\")\n+\n+(define_insn \"\"\n+  [(set (strict_low_part (match_operand:HI 0 \"general_operand\" \"+m,d\"))\n+\t(and:HI (match_operand:HI 1 \"general_operand\" \"dn,dmn\")\n+\t\t(match_dup 0)))]\n+  \"\"\n+  \"and%.w %1,%0\")\n+\n (define_insn \"andqi3\"\n   [(set (match_operand:QI 0 \"general_operand\" \"=m,d\")\n \t(and:QI (match_operand:QI 1 \"general_operand\" \"%0,0\")\n \t\t(match_operand:QI 2 \"general_operand\" \"dn,dmn\")))]\n   \"\"\n   \"and%.b %2,%0\")\n \n+(define_insn \"\"\n+  [(set (strict_low_part (match_operand:QI 0 \"general_operand\" \"+m,d\"))\n+\t(and:QI (match_dup 0)\n+\t\t(match_operand:QI 1 \"general_operand\" \"dn,dmn\")))]\n+  \"\"\n+  \"and%.b %1,%0\")\n+\n+(define_insn \"\"\n+  [(set (strict_low_part (match_operand:QI 0 \"general_operand\" \"+m,d\"))\n+\t(and:QI (match_operand:QI 1 \"general_operand\" \"dn,dmn\")\n+\t\t(match_dup 0)))]\n+  \"\"\n+  \"and%.b %1,%0\")\n \f\n ;; inclusive-or instructions\n \n@@ -2776,12 +2823,40 @@\n   \"\"\n   \"or%.w %2,%0\")\n \n+(define_insn \"\"\n+  [(set (strict_low_part (match_operand:HI 0 \"general_operand\" \"+m,d\"))\n+\t(ior:HI (match_dup 0)\n+\t\t(match_operand:HI 1 \"general_operand\" \"dn,dmn\")))]\n+  \"\"\n+  \"or%.w %1,%0\")\n+\n+(define_insn \"\"\n+  [(set (strict_low_part (match_operand:HI 0 \"general_operand\" \"+m,d\"))\n+\t(ior:HI (match_operand:HI 1 \"general_operand\" \"dn,dmn\")\n+\t\t(match_dup 0)))]\n+  \"\"\n+  \"or%.w %1,%0\")\n+\n (define_insn \"iorqi3\"\n   [(set (match_operand:QI 0 \"general_operand\" \"=m,d\")\n \t(ior:QI (match_operand:QI 1 \"general_operand\" \"%0,0\")\n \t\t(match_operand:QI 2 \"general_operand\" \"dn,dmn\")))]\n   \"\"\n   \"or%.b %2,%0\")\n+\n+(define_insn \"\"\n+  [(set (strict_low_part (match_operand:QI 0 \"general_operand\" \"+m,d\"))\n+\t(ior:QI (match_dup 0)\n+\t\t(match_operand:QI 1 \"general_operand\" \"dn,dmn\")))]\n+  \"\"\n+  \"or%.b %1,%0\")\n+\n+(define_insn \"\"\n+  [(set (strict_low_part (match_operand:QI 0 \"general_operand\" \"+m,d\"))\n+\t(ior:QI (match_operand:QI 1 \"general_operand\" \"dn,dmn\")\n+\t\t(match_dup 0)))]\n+  \"\"\n+  \"or%.b %1,%0\")\n \f\n ;; xor instructions\n \n@@ -2812,12 +2887,41 @@\n   \"\"\n   \"eor%.w %2,%0\")\n \n+(define_insn \"\"\n+  [(set (strict_low_part (match_operand:HI 0 \"general_operand\" \"+dm\"))\n+\t(xor:HI (match_dup 0)\n+\t\t(match_operand:HI 1 \"general_operand\" \"dn\")))]\n+  \"\"\n+  \"eor%.w %1,%0\")\n+\n+\n+(define_insn \"\"\n+  [(set (strict_low_part (match_operand:HI 0 \"general_operand\" \"+dm\"))\n+\t(xor:HI (match_operand:HI 1 \"general_operand\" \"dn\")\n+\t\t(match_dup 0)))]\n+  \"\"\n+  \"eor%.w %1,%0\")\n+\n (define_insn \"xorqi3\"\n   [(set (match_operand:QI 0 \"general_operand\" \"=dm\")\n \t(xor:QI (match_operand:QI 1 \"general_operand\" \"%0\")\n \t\t(match_operand:QI 2 \"general_operand\" \"dn\")))]\n   \"\"\n   \"eor%.b %2,%0\")\n+\n+(define_insn \"\"\n+  [(set (strict_low_part (match_operand:QI 0 \"general_operand\" \"+dm\"))\n+\t(xor:QI (match_dup 0)\n+\t\t(match_operand:QI 1 \"general_operand\" \"dn\")))]\n+  \"\"\n+  \"eor%.b %1,%0\")\n+\n+(define_insn \"\"\n+  [(set (strict_low_part (match_operand:QI 0 \"general_operand\" \"+dm\"))\n+\t(xor:QI (match_operand:QI 1 \"general_operand\" \"dn\")\n+\t\t(match_dup 0)))]\n+  \"\"\n+  \"eor%.b %1,%0\")\n \f\n ;; negation instructions\n \n@@ -2833,12 +2937,24 @@\n   \"\"\n   \"neg%.w %0\")\n \n+(define_insn \"\"\n+  [(set (strict_low_part (match_operand:HI 0 \"general_operand\" \"+dm\"))\n+\t(neg:HI (match_dup 0)))]\n+  \"\"\n+  \"neg%.w %0\")\n+\n (define_insn \"negqi2\"\n   [(set (match_operand:QI 0 \"general_operand\" \"=dm\")\n \t(neg:QI (match_operand:QI 1 \"general_operand\" \"0\")))]\n   \"\"\n   \"neg%.b %0\")\n \n+(define_insn \"\"\n+  [(set (strict_low_part (match_operand:QI 0 \"general_operand\" \"+dm\"))\n+\t(neg:QI (match_dup 0)))]\n+  \"\"\n+  \"neg%.b %0\")\n+\n (define_expand \"negsf2\"\n   [(set (match_operand:SF 0 \"general_operand\" \"\")\n \t(neg:SF (match_operand:SF 1 \"general_operand\" \"\")))]\n@@ -2957,11 +3073,23 @@\n   \"\"\n   \"not%.w %0\")\n \n+(define_insn \"\"\n+  [(set (strict_low_part (match_operand:HI 0 \"general_operand\" \"+dm\"))\n+\t(not:HI (match_dup 0)))]\n+  \"\"\n+  \"not%.w %0\")\n+\n (define_insn \"one_cmplqi2\"\n   [(set (match_operand:QI 0 \"general_operand\" \"=dm\")\n \t(not:QI (match_operand:QI 1 \"general_operand\" \"0\")))]\n   \"\"\n   \"not%.b %0\")\n+\n+(define_insn \"\"\n+  [(set (strict_low_part (match_operand:QI 0 \"general_operand\" \"+dm\"))\n+\t(not:QI (match_dup 0)))]\n+  \"\"\n+  \"not%.b %0\")\n \f\n ;; arithmetic shift instructions\n ;; We don't need the shift memory by 1 bit instruction\n@@ -3004,13 +3132,27 @@\n   \"\"\n   \"asl%.w %2,%0\")\n \n+(define_insn \"\"\n+  [(set (strict_low_part (match_operand:HI 0 \"register_operand\" \"+d\"))\n+\t(ashift:HI (match_dup 0)\n+\t\t   (match_operand:HI 1 \"general_operand\" \"dI\")))]\n+  \"\"\n+  \"asl%.w %1,%0\")\n+\n (define_insn \"ashlqi3\"\n   [(set (match_operand:QI 0 \"register_operand\" \"=d\")\n \t(ashift:QI (match_operand:QI 1 \"register_operand\" \"0\")\n \t\t   (match_operand:QI 2 \"general_operand\" \"dI\")))]\n   \"\"\n   \"asl%.b %2,%0\")\n \n+(define_insn \"\"\n+  [(set (strict_low_part (match_operand:QI 0 \"register_operand\" \"+d\"))\n+\t(ashift:QI (match_dup 0)\n+\t\t   (match_operand:QI 1 \"general_operand\" \"dI\")))]\n+  \"\"\n+  \"asl%.b %1,%0\")\n+\n ;; On the 68000, this makes faster code in a special case.\n \n (define_insn \"\"\n@@ -3045,12 +3187,26 @@\n   \"\"\n   \"asr%.w %2,%0\")\n \n+(define_insn \"\"\n+  [(set (strict_low_part (match_operand:HI 0 \"register_operand\" \"+d\"))\n+\t(ashiftrt:HI (match_dup 0)\n+\t\t     (match_operand:HI 1 \"general_operand\" \"dI\")))]\n+  \"\"\n+  \"asr%.w %1,%0\")\n+\n (define_insn \"ashrqi3\"\n   [(set (match_operand:QI 0 \"register_operand\" \"=d\")\n \t(ashiftrt:QI (match_operand:QI 1 \"register_operand\" \"0\")\n \t\t     (match_operand:QI 2 \"general_operand\" \"dI\")))]\n   \"\"\n   \"asr%.b %2,%0\")\n+\n+(define_insn \"\"\n+  [(set (strict_low_part (match_operand:QI 0 \"register_operand\" \"+d\"))\n+\t(ashiftrt:QI (match_dup 0)\n+\t\t     (match_operand:QI 1 \"general_operand\" \"dI\")))]\n+  \"\"\n+  \"asr%.b %1,%0\")\n \f\n ;; logical shift instructions\n \n@@ -3092,13 +3248,27 @@\n   \"\"\n   \"lsl%.w %2,%0\")\n \n+(define_insn \"\"\n+  [(set (strict_low_part (match_operand:HI 0 \"register_operand\" \"+d\"))\n+\t(lshift:HI (match_dup 0)\n+\t\t   (match_operand:HI 1 \"general_operand\" \"dI\")))]\n+  \"\"\n+  \"lsl%.w %1,%0\")\n+\n (define_insn \"lshlqi3\"\n   [(set (match_operand:QI 0 \"register_operand\" \"=d\")\n \t(lshift:QI (match_operand:QI 1 \"register_operand\" \"0\")\n \t\t   (match_operand:QI 2 \"general_operand\" \"dI\")))]\n   \"\"\n   \"lsl%.b %2,%0\")\n \n+(define_insn \"\"\n+  [(set (strict_low_part (match_operand:QI 0 \"register_operand\" \"+d\"))\n+\t(lshift:QI (match_dup 0)\n+\t\t   (match_operand:QI 1 \"general_operand\" \"dI\")))]\n+  \"\"\n+  \"lsl%.b %1,%0\")\n+\n ;; On the 68000, this makes faster code in a special case.\n \n (define_insn \"\"\n@@ -3137,12 +3307,26 @@\n   \"\"\n   \"lsr%.w %2,%0\")\n \n+(define_insn \"\"\n+  [(set (strict_low_part (match_operand:HI 0 \"register_operand\" \"+d\"))\n+\t(lshiftrt:HI (match_dup 0)\n+\t\t     (match_operand:HI 1 \"general_operand\" \"dI\")))]\n+  \"\"\n+  \"lsr%.w %1,%0\")\n+\n (define_insn \"lshrqi3\"\n   [(set (match_operand:QI 0 \"register_operand\" \"=d\")\n \t(lshiftrt:QI (match_operand:QI 1 \"register_operand\" \"0\")\n \t\t     (match_operand:QI 2 \"general_operand\" \"dI\")))]\n   \"\"\n   \"lsr%.b %2,%0\")\n+\n+(define_insn \"\"\n+  [(set (strict_low_part (match_operand:QI 0 \"register_operand\" \"+d\"))\n+\t(lshiftrt:QI (match_dup 0)\n+\t\t     (match_operand:QI 1 \"general_operand\" \"dI\")))]\n+  \"\"\n+  \"lsr%.b %1,%0\")\n \f\n ;; rotate instructions\n \n@@ -3160,13 +3344,28 @@\n   \"\"\n   \"rol%.w %2,%0\")\n \n+\n+(define_insn \"\"\n+  [(set (strict_low_part (match_operand:HI 0 \"register_operand\" \"+d\"))\n+\t(rotate:HI (match_dup 0)\n+\t\t   (match_operand:HI 1 \"general_operand\" \"dI\")))]\n+  \"\"\n+  \"rol%.w %1,%0\")\n+\n (define_insn \"rotlqi3\"\n   [(set (match_operand:QI 0 \"register_operand\" \"=d\")\n \t(rotate:QI (match_operand:QI 1 \"register_operand\" \"0\")\n \t\t   (match_operand:QI 2 \"general_operand\" \"dI\")))]\n   \"\"\n   \"rol%.b %2,%0\")\n \n+(define_insn \"\"\n+  [(set (strict_low_part (match_operand:QI 0 \"register_operand\" \"+d\"))\n+\t(rotate:QI (match_dup 0)\n+\t\t   (match_operand:QI 1 \"general_operand\" \"dI\")))]\n+  \"\"\n+  \"rol%.b %1,%0\")\n+\n (define_insn \"rotrsi3\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=d\")\n \t(rotatert:SI (match_operand:SI 1 \"register_operand\" \"0\")\n@@ -3181,12 +3380,26 @@\n   \"\"\n   \"ror%.w %2,%0\")\n \n+(define_insn \"\"\n+  [(set (strict_low_part (match_operand:HI 0 \"register_operand\" \"+d\"))\n+\t(rotatert:HI (match_dup 0)\n+\t\t     (match_operand:HI 1 \"general_operand\" \"dI\")))]\n+  \"\"\n+  \"ror%.w %1,%0\")\n+\n (define_insn \"rotrqi3\"\n   [(set (match_operand:QI 0 \"register_operand\" \"=d\")\n \t(rotatert:QI (match_operand:QI 1 \"register_operand\" \"0\")\n \t\t     (match_operand:QI 2 \"general_operand\" \"dI\")))]\n   \"\"\n   \"ror%.b %2,%0\")\n+\n+(define_insn \"\"\n+  [(set (strict_low_part (match_operand:QI 0 \"register_operand\" \"+d\"))\n+\t(rotatert:QI (match_dup 0)\n+\t\t     (match_operand:QI 1 \"general_operand\" \"dI\")))]\n+  \"\"\n+  \"ror%.b %1,%0\")\n \f\n ;; Special cases of bit-field insns which we should\n ;; recognize in preference to the general case."}]}