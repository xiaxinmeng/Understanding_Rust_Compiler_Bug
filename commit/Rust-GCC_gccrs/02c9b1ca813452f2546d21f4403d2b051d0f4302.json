{"sha": "02c9b1ca813452f2546d21f4403d2b051d0f4302", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDJjOWIxY2E4MTM0NTJmMjU0NmQyMWY0NDAzZDJiMDUxZDBmNDMwMg==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2001-08-13T21:14:01Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2001-08-13T21:14:01Z"}, "message": "xcoff.h (EH_FRAME_IN_DATA_SECTION): New.\n\n        * config/rs6000/xcoff.h (EH_FRAME_IN_DATA_SECTION): New.\n        * defaults.h (EH_FRAME_SECTION_NAME): Respect it.\n        * doc/tm.texi (Exception Region Output): Document it.\n\nFrom-SVN: r44869", "tree": {"sha": "c6a06ef31982df80ac8a32f8f8817a143e4f8715", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c6a06ef31982df80ac8a32f8f8817a143e4f8715"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/02c9b1ca813452f2546d21f4403d2b051d0f4302", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/02c9b1ca813452f2546d21f4403d2b051d0f4302", "html_url": "https://github.com/Rust-GCC/gccrs/commit/02c9b1ca813452f2546d21f4403d2b051d0f4302", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/02c9b1ca813452f2546d21f4403d2b051d0f4302/comments", "author": null, "committer": null, "parents": [{"sha": "63d6f87a6d1eae6411542567d6834c27c4509f40", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/63d6f87a6d1eae6411542567d6834c27c4509f40", "html_url": "https://github.com/Rust-GCC/gccrs/commit/63d6f87a6d1eae6411542567d6834c27c4509f40"}], "stats": {"total": 31, "additions": 25, "deletions": 6}, "files": [{"sha": "1b24e2d433ec467e3f27de6433adc0142289204c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/02c9b1ca813452f2546d21f4403d2b051d0f4302/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/02c9b1ca813452f2546d21f4403d2b051d0f4302/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=02c9b1ca813452f2546d21f4403d2b051d0f4302", "patch": "@@ -1,3 +1,9 @@\n+2001-08-13  Richard Henderson  <rth@redhat.com>\n+\n+\t* config/rs6000/xcoff.h (EH_FRAME_IN_DATA_SECTION): New.\n+\t* defaults.h (EH_FRAME_SECTION_NAME): Respect it.\n+\t* doc/tm.texi (Exception Region Output): Document it.\n+\n 2001-08-13  Geoffrey Keating  <geoffk@redhat.com>\n \n \t* config/rs6000/sysv4.h (PREFERRED_DEBUGGING_TYPE): Use\n@@ -226,7 +232,7 @@ Mon Aug 13 02:27:39 CEST 2001  Jan Hubicka  <jh@suse.cz>\n \n \t* s390.c, s390.h, s390.md, s390-protos.h, linux.h, t-linux:\n \tClean up code: add missing comments and prototypes, fix warnings,\n-        remove obsolete code, fix spacing to conform to coding style.\n+\tremove obsolete code, fix spacing to conform to coding style.\n \n 2001-08-11  Ulrich Weigand  <uweigand@de.ibm.com>\n "}, {"sha": "c120e643c9472dc5a8348c58fb5aba5002b9a744", "filename": "gcc/config/rs6000/xcoff.h", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/02c9b1ca813452f2546d21f4403d2b051d0f4302/gcc%2Fconfig%2Frs6000%2Fxcoff.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/02c9b1ca813452f2546d21f4403d2b051d0f4302/gcc%2Fconfig%2Frs6000%2Fxcoff.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fxcoff.h?ref=02c9b1ca813452f2546d21f4403d2b051d0f4302", "patch": "@@ -492,8 +492,11 @@ toc_section ()\t\t\t\t\t\t\\\n /* Switch into a generic section.  */\n #define TARGET_ASM_NAMED_SECTION  xcoff_asm_named_section\n \n-/* Define the name of the section to use for the exception tables.\n-   TODO: test and see if we can use read_only_data_section, if so,\n-   remove this.  */\n-\n+/* Define the name of the section to use for the EH language specific\n+   data areas (.gcc_except_table on most other systems).  */\n #define EXCEPTION_SECTION data_section\n+\n+/* Define to prevent DWARF2 unwind info in the data section rather\n+   than in the .eh_frame section.  We do this because the AIX linker\n+   would otherwise garbage collect these sections.  */\n+#define EH_FRAME_IN_DATA_SECTION 1"}, {"sha": "14635b3e2c91d6681d6dd3a69cbe0d924252ff51", "filename": "gcc/defaults.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/02c9b1ca813452f2546d21f4403d2b051d0f4302/gcc%2Fdefaults.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/02c9b1ca813452f2546d21f4403d2b051d0f4302/gcc%2Fdefaults.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdefaults.h?ref=02c9b1ca813452f2546d21f4403d2b051d0f4302", "patch": "@@ -211,7 +211,7 @@ do { ASM_OUTPUT_LABEL(FILE,LABEL_ALTERNATE_NAME (INSN)); } while (0)\n \n /* If we have named sections, and we're using crtstuff to run ctors,\n    use them for registering eh frame information.  */\n-#if defined (TARGET_ASM_NAMED_SECTION)\n+#if defined (TARGET_ASM_NAMED_SECTION) && !defined(EH_FRAME_IN_DATA_SECTION)\n #ifndef EH_FRAME_SECTION_NAME\n #define EH_FRAME_SECTION_NAME \".eh_frame\"\n #endif"}, {"sha": "538888b16d496927d882913661be7b0ef6aecdaa", "filename": "gcc/doc/tm.texi", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/02c9b1ca813452f2546d21f4403d2b051d0f4302/gcc%2Fdoc%2Ftm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/02c9b1ca813452f2546d21f4403d2b051d0f4302/gcc%2Fdoc%2Ftm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Ftm.texi?ref=02c9b1ca813452f2546d21f4403d2b051d0f4302", "patch": "@@ -7068,6 +7068,16 @@ provide a default definition if the target supports named sections.\n You should define this symbol if your target supports DWARF 2 frame\n unwind information and the default definition does not work.\n \n+@findex EH_FRAME_IN_DATA_SECTION\n+@item EH_FRAME_IN_DATA_SECTION\n+If defined, DWARF 2 frame unwind information will be placed in the\n+data section even though the target supports named sections.  This\n+might be necessary, for instance, if the system linker does garbage\n+collection and sections cannot be marked as not to be collected.\n+\n+Do not define this macro unless @code{TARGET_ASM_NAMED_SECTION} is\n+also defined.\n+\n @findex OMIT_EH_TABLE\n @item OMIT_EH_TABLE ()\n A C expression that is nonzero if the normal exception table output"}]}