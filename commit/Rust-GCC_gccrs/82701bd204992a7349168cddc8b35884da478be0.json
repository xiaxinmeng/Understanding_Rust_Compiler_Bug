{"sha": "82701bd204992a7349168cddc8b35884da478be0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODI3MDFiZDIwNDk5MmE3MzQ5MTY4Y2RkYzhiMzU4ODRkYTQ3OGJlMA==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2011-01-04T22:15:46Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2011-01-04T22:15:46Z"}, "message": "Don't create erroneous COND_EXPR.\n\nFrom-SVN: r168485", "tree": {"sha": "bec0e8e8ca2c9a66a62afb0fcd44c4da0f7d1c9a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bec0e8e8ca2c9a66a62afb0fcd44c4da0f7d1c9a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/82701bd204992a7349168cddc8b35884da478be0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/82701bd204992a7349168cddc8b35884da478be0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/82701bd204992a7349168cddc8b35884da478be0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/82701bd204992a7349168cddc8b35884da478be0/comments", "author": null, "committer": null, "parents": [{"sha": "eb83e2d7f0f746bf64276ebb3931b20ae0cd7398", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eb83e2d7f0f746bf64276ebb3931b20ae0cd7398", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eb83e2d7f0f746bf64276ebb3931b20ae0cd7398"}], "stats": {"total": 21, "additions": 13, "deletions": 8}, "files": [{"sha": "c0efc2dca4f88efaf9da563f56653f5a9a0a528f", "filename": "gcc/go/gofrontend/statements.cc", "status": "modified", "additions": 13, "deletions": 8, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/82701bd204992a7349168cddc8b35884da478be0/gcc%2Fgo%2Fgofrontend%2Fstatements.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/82701bd204992a7349168cddc8b35884da478be0/gcc%2Fgo%2Fgofrontend%2Fstatements.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2Fstatements.cc?ref=82701bd204992a7349168cddc8b35884da478be0", "patch": "@@ -2985,14 +2985,19 @@ tree\n If_statement::do_get_tree(Translate_context* context)\n {\n   gcc_assert(this->cond_ == NULL || this->cond_->type()->is_boolean_type());\n-  tree ret = build3(COND_EXPR, void_type_node,\n-\t\t    (this->cond_ == NULL\n-\t\t     ? boolean_true_node\n-\t\t     : this->cond_->get_tree(context)),\n-\t\t    this->then_block_->get_tree(context),\n-\t\t    (this->else_block_ == NULL\n-\t\t     ? NULL_TREE\n-\t\t     : this->else_block_->get_tree(context)));\n+  tree cond_tree = (this->cond_ == NULL\n+\t\t    ? boolean_true_node\n+\t\t    : this->cond_->get_tree(context));\n+  tree then_tree = this->then_block_->get_tree(context);\n+  tree else_tree = (this->else_block_ == NULL\n+\t\t    ? NULL_TREE\n+\t\t    : this->else_block_->get_tree(context));\n+  if (cond_tree == error_mark_node\n+      || then_tree == error_mark_node\n+      || else_tree == error_mark_node)\n+    return error_mark_node;\n+  tree ret = build3(COND_EXPR, void_type_node, cond_tree, then_tree,\n+\t\t    else_tree);\n   SET_EXPR_LOCATION(ret, this->location());\n   return ret;\n }"}]}