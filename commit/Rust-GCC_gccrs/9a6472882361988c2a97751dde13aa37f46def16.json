{"sha": "9a6472882361988c2a97751dde13aa37f46def16", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWE2NDcyODgyMzYxOTg4YzJhOTc3NTFkZGUxM2FhMzdmNDZkZWYxNg==", "commit": {"author": {"name": "Alan Modra", "email": "amodra@gmail.com", "date": "2013-01-22T11:41:53Z"}, "committer": {"name": "Alan Modra", "email": "amodra@gcc.gnu.org", "date": "2013-01-22T11:41:53Z"}, "message": "re PR libgomp/51376 (libgomp taskwait failure)\n\n\tPR libgomp/51376\n\tPR libgomp/56073\n\t* task.c (GOMP_task): Revert 2011-12-09 change.\n\t(GOMP_taskwait): Likewise.  Instead use atomic load with acquire\n\tbarrier to read task->children..\n\t(gomp_barrier_handle_tasks): ..and matching atomic store with\n\trelease barrier here when setting parent->children to NULL.\n\nFrom-SVN: r195370", "tree": {"sha": "fe198ebe6a2ed3b92472162492a8abbaf38411da", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fe198ebe6a2ed3b92472162492a8abbaf38411da"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9a6472882361988c2a97751dde13aa37f46def16", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9a6472882361988c2a97751dde13aa37f46def16", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9a6472882361988c2a97751dde13aa37f46def16", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9a6472882361988c2a97751dde13aa37f46def16/comments", "author": {"login": "amodra", "id": 6006325, "node_id": "MDQ6VXNlcjYwMDYzMjU=", "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amodra", "html_url": "https://github.com/amodra", "followers_url": "https://api.github.com/users/amodra/followers", "following_url": "https://api.github.com/users/amodra/following{/other_user}", "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}", "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amodra/subscriptions", "organizations_url": "https://api.github.com/users/amodra/orgs", "repos_url": "https://api.github.com/users/amodra/repos", "events_url": "https://api.github.com/users/amodra/events{/privacy}", "received_events_url": "https://api.github.com/users/amodra/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e18600419eb270e0073c45a8da5aa9c7ab10ee77", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e18600419eb270e0073c45a8da5aa9c7ab10ee77", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e18600419eb270e0073c45a8da5aa9c7ab10ee77"}], "stats": {"total": 26, "additions": 21, "deletions": 5}, "files": [{"sha": "266a66e7b8f1567a4e44d16e09b5a08956991499", "filename": "libgomp/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a6472882361988c2a97751dde13aa37f46def16/libgomp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a6472882361988c2a97751dde13aa37f46def16/libgomp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2FChangeLog?ref=9a6472882361988c2a97751dde13aa37f46def16", "patch": "@@ -1,3 +1,13 @@\n+2013-01-22  Alan Modra  <amodra@gmail.com>\n+\n+\tPR libgomp/51376\n+\tPR libgomp/56073\n+\t* task.c (GOMP_task): Revert 2011-12-09 change.\n+\t(GOMP_taskwait): Likewise.  Instead use atomic load with acquire\n+\tbarrier to read task->children..\n+\t(gomp_barrier_handle_tasks): ..and matching atomic store with\n+\trelease barrier here when setting parent->children to NULL.\n+\n 2013-01-16  Jakub Jelinek  <jakub@redhat.com>\n \t    Tobias Burnus  <burnus@net-b.de>\n "}, {"sha": "937f266cef375be99d4cca193d518eba9926f280", "filename": "libgomp/task.c", "status": "modified", "additions": 11, "deletions": 5, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a6472882361988c2a97751dde13aa37f46def16/libgomp%2Ftask.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a6472882361988c2a97751dde13aa37f46def16/libgomp%2Ftask.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftask.c?ref=9a6472882361988c2a97751dde13aa37f46def16", "patch": "@@ -116,11 +116,10 @@ GOMP_task (void (*fn) (void *), void *data, void (*cpyfn) (void *, void *),\n \t}\n       else\n \tfn (data);\n-      if (team != NULL)\n+      if (task.children != NULL)\n \t{\n \t  gomp_mutex_lock (&team->task_lock);\n-\t  if (task.children != NULL)\n-\t    gomp_clear_parent (task.children);\n+\t  gomp_clear_parent (task.children);\n \t  gomp_mutex_unlock (&team->task_lock);\n \t}\n       gomp_end_task ();\n@@ -258,7 +257,13 @@ gomp_barrier_handle_tasks (gomp_barrier_state_t state)\n \t\t    parent->children = child_task->next_child;\n \t\t  else\n \t\t    {\n-\t\t      parent->children = NULL;\n+\t\t      /* We access task->children in GOMP_taskwait\n+\t\t\t outside of the task lock mutex region, so\n+\t\t\t need a release barrier here to ensure memory\n+\t\t\t written by child_task->fn above is flushed\n+\t\t\t before the NULL is written.  */\n+\t\t      __atomic_store_n (&parent->children, NULL,\n+\t\t\t\t\tMEMMODEL_RELEASE);\n \t\t      if (parent->in_taskwait)\n \t\t\tgomp_sem_post (&parent->taskwait_sem);\n \t\t    }\n@@ -291,7 +296,8 @@ GOMP_taskwait (void)\n   struct gomp_task *child_task = NULL;\n   struct gomp_task *to_free = NULL;\n \n-  if (task == NULL || team == NULL)\n+  if (task == NULL\n+      || __atomic_load_n (&task->children, MEMMODEL_ACQUIRE) == NULL)\n     return;\n \n   gomp_mutex_lock (&team->task_lock);"}]}