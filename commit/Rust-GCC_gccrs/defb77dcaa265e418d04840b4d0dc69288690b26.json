{"sha": "defb77dcaa265e418d04840b4d0dc69288690b26", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGVmYjc3ZGNhYTI2NWU0MThkMDQ4NDBiNGQwZGM2OTI4ODY5MGIyNg==", "commit": {"author": {"name": "Paolo Bonzini", "email": "bonzini@gnu.org", "date": "2005-08-10T09:02:48Z"}, "committer": {"name": "Paolo Bonzini", "email": "bonzini@gcc.gnu.org", "date": "2005-08-10T09:02:48Z"}, "message": "bb-reorder.c (pass_duplicate_computed_gotos, [...]): Add dump.\n\n2005-08-09  Paolo Bonzini  <bonzini@gnu.org>\n\n\t* bb-reorder.c (pass_duplicate_computed_gotos, pass_partition_blocks):\n\tAdd dump.\n\t* cfglayout.c (pass_insn_locators_initialize): Add dump.\n\t* emit-rtl.c (pass_unshare_all_rtl, pass_remove_unnecessary_notes):\n\tAdd dump.\n\t* except.c (pass_convert_to_eh_region_ranges): Add dump.\n\t* final.c (pass_shorten_branches): Add dump.\n\t* flow.c (pass_recompute_reg_usage, pass_remove_death_notes): Add dump.\n\t(pass_life): Rename dump.\n\t(rest_of_handle_flow2): Remove initial verify_flow_info.\n\t* function.c (pass_instantiate_virtual_regs): Add dump.\n\t* integrate.c (pass_initial_value_sets): Add dump.\n\t* jump.c (pass_cleanup_barriers, pass_purge_lineno_notes): Add dump.\n\t* loop-init.c (pass_rtl_loop_init, pass_rtl_loop_done): Rename dump.\n\t(pass_rtl_move_loop_invariants, pass_rtl_unswitch, pass_rtl_doloop,\n\tpass_rtl_unroll_and_peel_loops): Rename dump and add gate.\n\t(gate_rtl_move_loop_invariants, gate_rtl_unswitch, gate_rtl_doloop,\n\tgate_rtl_unrool_and_peel_loops): New.\n\t(rtl_move_loop_invariants, rtl_unswitch, rtl_unrool_and_peel_loops,\n\trtl_doloop): Do not look at flags.\n\t* mode-switching.c (pass_mode_switching): Add dump.\n\t* recog.c (pass_split_all_insns, pass_split_for_shorten_branches,\n\tpass_split_before_regstack): Add dump.\n\t* regmove.c (pass_stack_adjustments): Add dump.\n\t* tree-optimize.c (pass_fixup_cfg): Add dump.\n\nFrom-SVN: r102945", "tree": {"sha": "7154582b6e5a6b54e05449f8475c0e96e2ad36f0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7154582b6e5a6b54e05449f8475c0e96e2ad36f0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/defb77dcaa265e418d04840b4d0dc69288690b26", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/defb77dcaa265e418d04840b4d0dc69288690b26", "html_url": "https://github.com/Rust-GCC/gccrs/commit/defb77dcaa265e418d04840b4d0dc69288690b26", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/defb77dcaa265e418d04840b4d0dc69288690b26/comments", "author": {"login": "bonzini", "id": 42082, "node_id": "MDQ6VXNlcjQyMDgy", "avatar_url": "https://avatars.githubusercontent.com/u/42082?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bonzini", "html_url": "https://github.com/bonzini", "followers_url": "https://api.github.com/users/bonzini/followers", "following_url": "https://api.github.com/users/bonzini/following{/other_user}", "gists_url": "https://api.github.com/users/bonzini/gists{/gist_id}", "starred_url": "https://api.github.com/users/bonzini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bonzini/subscriptions", "organizations_url": "https://api.github.com/users/bonzini/orgs", "repos_url": "https://api.github.com/users/bonzini/repos", "events_url": "https://api.github.com/users/bonzini/events{/privacy}", "received_events_url": "https://api.github.com/users/bonzini/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "2a6a63c1aee09e0182068e94423da7cb9e9a5ee6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2a6a63c1aee09e0182068e94423da7cb9e9a5ee6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2a6a63c1aee09e0182068e94423da7cb9e9a5ee6"}], "stats": {"total": 170, "additions": 111, "deletions": 59}, "files": [{"sha": "1289a219a15c3a6a2f3dbadcebd69a6ea7759a81", "filename": "gcc/ChangeLog", "status": "modified", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/defb77dcaa265e418d04840b4d0dc69288690b26/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/defb77dcaa265e418d04840b4d0dc69288690b26/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=defb77dcaa265e418d04840b4d0dc69288690b26", "patch": "@@ -1,3 +1,31 @@\n+2005-08-09  Paolo Bonzini  <bonzini@gnu.org>\n+\n+\t* bb-reorder.c (pass_duplicate_computed_gotos, pass_partition_blocks):\n+\tAdd dump.\n+\t* cfglayout.c (pass_insn_locators_initialize): Add dump.\n+\t* emit-rtl.c (pass_unshare_all_rtl, pass_remove_unnecessary_notes):\n+\tAdd dump.\n+\t* except.c (pass_convert_to_eh_region_ranges): Add dump.\n+\t* final.c (pass_shorten_branches): Add dump.\n+\t* flow.c (pass_recompute_reg_usage, pass_remove_death_notes): Add dump.\n+\t(pass_life): Rename dump.\n+\t(rest_of_handle_flow2): Remove initial verify_flow_info.\n+\t* function.c (pass_instantiate_virtual_regs): Add dump.\n+\t* integrate.c (pass_initial_value_sets): Add dump.\n+\t* jump.c (pass_cleanup_barriers, pass_purge_lineno_notes): Add dump.\n+\t* loop-init.c (pass_rtl_loop_init, pass_rtl_loop_done): Rename dump.\n+\t(pass_rtl_move_loop_invariants, pass_rtl_unswitch, pass_rtl_doloop,\n+\tpass_rtl_unroll_and_peel_loops): Rename dump and add gate.\n+\t(gate_rtl_move_loop_invariants, gate_rtl_unswitch, gate_rtl_doloop,\n+\tgate_rtl_unrool_and_peel_loops): New.\n+\t(rtl_move_loop_invariants, rtl_unswitch, rtl_unrool_and_peel_loops,\n+\trtl_doloop): Do not look at flags.\n+\t* mode-switching.c (pass_mode_switching): Add dump.\n+\t* recog.c (pass_split_all_insns, pass_split_for_shorten_branches,\n+\tpass_split_before_regstack): Add dump.\n+\t* regmove.c (pass_stack_adjustments): Add dump.\n+\t* tree-optimize.c (pass_fixup_cfg): Add dump.\n+\n 2005-08-10  Kazuhiro Inaoka <inaoka.kazuhiro@renesas.com>\n \n \tPR 23309"}, {"sha": "2dca3e373e820484386a157a35b725efbfd30a70", "filename": "gcc/bb-reorder.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/defb77dcaa265e418d04840b4d0dc69288690b26/gcc%2Fbb-reorder.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/defb77dcaa265e418d04840b4d0dc69288690b26/gcc%2Fbb-reorder.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbb-reorder.c?ref=defb77dcaa265e418d04840b4d0dc69288690b26", "patch": "@@ -2086,7 +2086,7 @@ duplicate_computed_gotos (void)\n \n struct tree_opt_pass pass_duplicate_computed_gotos =\n {\n-  NULL,                                 /* name */\n+  \"compgotos\",                          /* name */\n   gate_duplicate_computed_gotos,        /* gate */\n   duplicate_computed_gotos,             /* execute */\n   NULL,                                 /* sub */\n@@ -2097,7 +2097,7 @@ struct tree_opt_pass pass_duplicate_computed_gotos =\n   0,                                    /* properties_provided */\n   0,                                    /* properties_destroyed */\n   0,                                    /* todo_flags_start */\n-  0,                                    /* todo_flags_finish */\n+  TODO_dump_func,                       /* todo_flags_finish */\n   0                                     /* letter */\n };\n \n@@ -2276,7 +2276,7 @@ rest_of_handle_partition_blocks (void)\n \n struct tree_opt_pass pass_partition_blocks =\n {\n-  NULL,                                 /* name */\n+  \"bbpart\",                             /* name */\n   gate_handle_partition_blocks,         /* gate */\n   rest_of_handle_partition_blocks,      /* execute */\n   NULL,                                 /* sub */\n@@ -2287,7 +2287,7 @@ struct tree_opt_pass pass_partition_blocks =\n   0,                                    /* properties_provided */\n   0,                                    /* properties_destroyed */\n   0,                                    /* todo_flags_start */\n-  0,\t\t                        /* todo_flags_finish */\n+  TODO_dump_func,                       /* todo_flags_finish */\n   0                                     /* letter */\n };\n "}, {"sha": "c63c6f7a4cf93a7f92ac22c7f0e57830724c453c", "filename": "gcc/cfglayout.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/defb77dcaa265e418d04840b4d0dc69288690b26/gcc%2Fcfglayout.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/defb77dcaa265e418d04840b4d0dc69288690b26/gcc%2Fcfglayout.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfglayout.c?ref=defb77dcaa265e418d04840b4d0dc69288690b26", "patch": "@@ -333,7 +333,7 @@ insn_locators_initialize (void)\n \n struct tree_opt_pass pass_insn_locators_initialize =\n {\n-  NULL,                                 /* name */\n+  \"locators\",                           /* name */\n   NULL,                                 /* gate */   \n   insn_locators_initialize,             /* execute */       \n   NULL,                                 /* sub */\n@@ -344,7 +344,7 @@ struct tree_opt_pass pass_insn_locators_initialize =\n   0,                                    /* properties_provided */\n   0,                                    /* properties_destroyed */\n   0,                                    /* todo_flags_start */\n-  0,                                    /* todo_flags_finish */\n+  TODO_dump_func,                       /* todo_flags_finish */\n   0                                     /* letter */\n };\n "}, {"sha": "18c71b14890cce7defd15855cc2baad31a1f5785", "filename": "gcc/emit-rtl.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/defb77dcaa265e418d04840b4d0dc69288690b26/gcc%2Femit-rtl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/defb77dcaa265e418d04840b4d0dc69288690b26/gcc%2Femit-rtl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Femit-rtl.c?ref=defb77dcaa265e418d04840b4d0dc69288690b26", "patch": "@@ -2139,7 +2139,7 @@ unshare_all_rtl (void)\n \n struct tree_opt_pass pass_unshare_all_rtl =\n {\n-  NULL,                                 /* name */\n+  \"unshare\",                            /* name */\n   NULL,                                 /* gate */\n   unshare_all_rtl,                      /* execute */\n   NULL,                                 /* sub */\n@@ -2150,7 +2150,7 @@ struct tree_opt_pass pass_unshare_all_rtl =\n   0,                                    /* properties_provided */\n   0,                                    /* properties_destroyed */\n   0,                                    /* todo_flags_start */\n-  0,                                    /* todo_flags_finish */\n+  TODO_dump_func,                       /* todo_flags_finish */\n   0                                     /* letter */\n };\n \n@@ -3727,7 +3727,7 @@ remove_unnecessary_notes (void)\n \n struct tree_opt_pass pass_remove_unnecessary_notes =\n {\n-  NULL,                                 /* name */ \n+  \"eunotes\",                            /* name */ \n   NULL,\t\t\t\t\t/* gate */\n   remove_unnecessary_notes,             /* execute */\n   NULL,                                 /* sub */\n@@ -3738,7 +3738,7 @@ struct tree_opt_pass pass_remove_unnecessary_notes =\n   0,                                    /* properties_provided */\n   0,\t\t\t\t\t/* properties_destroyed */\n   0,                                    /* todo_flags_start */\n-  0,\t\t\t\t\t/* todo_flags_finish */\n+  TODO_dump_func,\t\t\t/* todo_flags_finish */\n   0                                     /* letter */ \n };\n "}, {"sha": "df91a1b2b186c32755aa0c790ea66a726438836e", "filename": "gcc/except.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/defb77dcaa265e418d04840b4d0dc69288690b26/gcc%2Fexcept.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/defb77dcaa265e418d04840b4d0dc69288690b26/gcc%2Fexcept.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexcept.c?ref=defb77dcaa265e418d04840b4d0dc69288690b26", "patch": "@@ -3241,7 +3241,7 @@ convert_to_eh_region_ranges (void)\n \n struct tree_opt_pass pass_convert_to_eh_region_ranges =\n {\n-  NULL,                                 /* name */\n+  \"eh-ranges\",                          /* name */\n   NULL,                                 /* gate */\n   convert_to_eh_region_ranges,          /* execute */\n   NULL,                                 /* sub */\n@@ -3252,7 +3252,7 @@ struct tree_opt_pass pass_convert_to_eh_region_ranges =\n   0,                                    /* properties_provided */\n   0,                                    /* properties_destroyed */\n   0,                                    /* todo_flags_start */\n-  0,                                    /* todo_flags_finish */\n+  TODO_dump_func,\t\t\t/* todo_flags_finish */\n   0                                     /* letter */\n };\n "}, {"sha": "e1a4c189cf6f1b537dccde85b52577d5d03fdc47", "filename": "gcc/final.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/defb77dcaa265e418d04840b4d0dc69288690b26/gcc%2Ffinal.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/defb77dcaa265e418d04840b4d0dc69288690b26/gcc%2Ffinal.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffinal.c?ref=defb77dcaa265e418d04840b4d0dc69288690b26", "patch": "@@ -3974,7 +3974,7 @@ rest_of_handle_shorten_branches (void)\n  \n struct tree_opt_pass pass_shorten_branches =\n {\n-  NULL,                                 /* name */\n+  \"shorten\",                            /* name */\n   NULL,                                 /* gate */\n   rest_of_handle_shorten_branches,      /* execute */\n   NULL,                                 /* sub */\n@@ -3985,7 +3985,7 @@ struct tree_opt_pass pass_shorten_branches =\n   0,                                    /* properties_provided */\n   0,                                    /* properties_destroyed */\n   0,                                    /* todo_flags_start */\n-  0,                                    /* todo_flags_finish */\n+  TODO_dump_func,                       /* todo_flags_finish */\n   0                                     /* letter */\n };\n "}, {"sha": "79b26d698f05271166887dce472d2f47d63bda43", "filename": "gcc/flow.c", "status": "modified", "additions": 8, "deletions": 10, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/defb77dcaa265e418d04840b4d0dc69288690b26/gcc%2Fflow.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/defb77dcaa265e418d04840b4d0dc69288690b26/gcc%2Fflow.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fflow.c?ref=defb77dcaa265e418d04840b4d0dc69288690b26", "patch": "@@ -4356,11 +4356,14 @@ recompute_reg_usage (void)\n      in sched1 to die.  To solve this update the DEATH_NOTES\n      here.  */\n   update_life_info (NULL, UPDATE_LIFE_LOCAL, PROP_REG_INFO | PROP_DEATH_NOTES);\n+\n+  if (dump_file)\n+    dump_flow_info (dump_file);\n }\n \n struct tree_opt_pass pass_recompute_reg_usage =\n {\n-  NULL,                                 /* name */\n+  \"life2\",                              /* name */\n   NULL,                                 /* gate */\n   recompute_reg_usage,                  /* execute */\n   NULL,                                 /* sub */\n@@ -4371,8 +4374,8 @@ struct tree_opt_pass pass_recompute_reg_usage =\n   0,                                    /* properties_provided */\n   0,                                    /* properties_destroyed */\n   0,                                    /* todo_flags_start */\n-  0,                                    /* todo_flags_finish */\n-  0                                     /* letter */\n+  TODO_dump_func,                       /* todo_flags_finish */\n+  'f'                                   /* letter */\n };\n \n /* Optionally removes all the REG_DEAD and REG_UNUSED notes from a set of\n@@ -4538,7 +4541,7 @@ rest_of_handle_remove_death_notes (void)\n \n struct tree_opt_pass pass_remove_death_notes =\n {\n-  NULL,                                 /* name */\n+  \"ednotes\",                            /* name */\n   gate_remove_death_notes,              /* gate */\n   rest_of_handle_remove_death_notes,    /* execute */\n   NULL,                                 /* sub */\n@@ -4587,7 +4590,7 @@ rest_of_handle_life (void)\n \n struct tree_opt_pass pass_life =\n {\n-  \"life\",                               /* name */\n+  \"life1\",                              /* name */\n   NULL,                                 /* gate */\n   rest_of_handle_life,                  /* execute */\n   NULL,                                 /* sub */\n@@ -4606,11 +4609,6 @@ struct tree_opt_pass pass_life =\n static void\n rest_of_handle_flow2 (void)\n {\n-  /* Re-create the death notes which were deleted during reload.  */\n-#ifdef ENABLE_CHECKING\n-  verify_flow_info ();\n-#endif\n-\n   /* If optimizing, then go ahead and split insns now.  */\n #ifndef STACK_REGS\n   if (optimize > 0)"}, {"sha": "fab19ae2ee7cba16bc479038cbff24a095be4e8d", "filename": "gcc/function.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/defb77dcaa265e418d04840b4d0dc69288690b26/gcc%2Ffunction.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/defb77dcaa265e418d04840b4d0dc69288690b26/gcc%2Ffunction.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffunction.c?ref=defb77dcaa265e418d04840b4d0dc69288690b26", "patch": "@@ -1665,7 +1665,7 @@ instantiate_virtual_regs (void)\n \n struct tree_opt_pass pass_instantiate_virtual_regs =\n {\n-  NULL,                                 /* name */\n+  \"vregs\",                              /* name */\n   NULL,                                 /* gate */\n   instantiate_virtual_regs,             /* execute */\n   NULL,                                 /* sub */\n@@ -1676,7 +1676,7 @@ struct tree_opt_pass pass_instantiate_virtual_regs =\n   0,                                    /* properties_provided */\n   0,                                    /* properties_destroyed */\n   0,                                    /* todo_flags_start */\n-  0,                                    /* todo_flags_finish */\n+  TODO_dump_func,                       /* todo_flags_finish */\n   0                                     /* letter */\n };\n "}, {"sha": "9ac14a0d7098145549ecd5ff274004eef42967f1", "filename": "gcc/integrate.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/defb77dcaa265e418d04840b4d0dc69288690b26/gcc%2Fintegrate.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/defb77dcaa265e418d04840b4d0dc69288690b26/gcc%2Fintegrate.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fintegrate.c?ref=defb77dcaa265e418d04840b4d0dc69288690b26", "patch": "@@ -299,7 +299,7 @@ emit_initial_value_sets (void)\n \n struct tree_opt_pass pass_initial_value_sets =\n {\n-  NULL,                                 /* name */\n+  \"initvals\",                           /* name */\n   NULL,                                 /* gate */\n   emit_initial_value_sets,              /* execute */\n   NULL,                                 /* sub */\n@@ -310,7 +310,7 @@ struct tree_opt_pass pass_initial_value_sets =\n   0,                                    /* properties_provided */\n   0,                                    /* properties_destroyed */\n   0,                                    /* todo_flags_start */\n-  0,                                    /* todo_flags_finish */\n+  TODO_dump_func,                       /* todo_flags_finish */\n   0                                     /* letter */\n };\n "}, {"sha": "05780b22c7f6bd258702d8f69d7400cbd26b538c", "filename": "gcc/jump.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/defb77dcaa265e418d04840b4d0dc69288690b26/gcc%2Fjump.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/defb77dcaa265e418d04840b4d0dc69288690b26/gcc%2Fjump.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjump.c?ref=defb77dcaa265e418d04840b4d0dc69288690b26", "patch": "@@ -124,7 +124,7 @@ cleanup_barriers (void)\n \n struct tree_opt_pass pass_cleanup_barriers =\n {\n-  NULL,                                 /* name */\n+  \"barriers\",                           /* name */\n   NULL,                                 /* gate */\n   cleanup_barriers,                     /* execute */\n   NULL,                                 /* sub */\n@@ -135,7 +135,7 @@ struct tree_opt_pass pass_cleanup_barriers =\n   0,                                    /* properties_provided */\n   0,                                    /* properties_destroyed */\n   0,                                    /* todo_flags_start */\n-  0,                                    /* todo_flags_finish */\n+  TODO_dump_func,                       /* todo_flags_finish */\n   0                                     /* letter */\n };\n \n@@ -179,7 +179,7 @@ purge_line_number_notes (void)\n \n struct tree_opt_pass pass_purge_lineno_notes =\n {\n-  NULL,                                 /* name */\n+  \"elnotes\",                            /* name */\n   NULL,                                 /* gate */\n   purge_line_number_notes,              /* execute */\n   NULL,                                 /* sub */\n@@ -190,7 +190,7 @@ struct tree_opt_pass pass_purge_lineno_notes =\n   0,                                    /* properties_provided */\n   0,                                    /* properties_destroyed */\n   0,                                    /* todo_flags_start */\n-  0,                                    /* todo_flags_finish */\n+  TODO_dump_func,                       /* todo_flags_finish */\n   0                                     /* letter */\n };\n "}, {"sha": "517474a545b037345af8ec6a45b7f20066f61f6c", "filename": "gcc/loop-init.c", "status": "modified", "additions": 42, "deletions": 16, "changes": 58, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/defb77dcaa265e418d04840b4d0dc69288690b26/gcc%2Floop-init.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/defb77dcaa265e418d04840b4d0dc69288690b26/gcc%2Floop-init.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Floop-init.c?ref=defb77dcaa265e418d04840b4d0dc69288690b26", "patch": "@@ -171,7 +171,7 @@ rtl_loop_init (void)\n \n struct tree_opt_pass pass_rtl_loop_init =\n {\n-  \"loopinit\",                           /* name */\n+  \"loop2_init\",                           /* name */\n   NULL,                                 /* gate */\n   rtl_loop_init,                        /* execute */\n   NULL,                                 /* sub */\n@@ -215,7 +215,7 @@ rtl_loop_done (void)\n \n struct tree_opt_pass pass_rtl_loop_done =\n {\n-  \"loopdone\",                           /* name */\n+  \"loop2_done\",                          /* name */\n   NULL,                                 /* gate */\n   rtl_loop_done,                        /* execute */\n   NULL,                                 /* sub */\n@@ -232,17 +232,23 @@ struct tree_opt_pass pass_rtl_loop_done =\n \n \f\n /* Loop invariant code motion.  */\n+static bool\n+gate_rtl_move_loop_invariants (void)\n+{\n+  return flag_move_loop_invariants;\n+}\n+\n static void\n rtl_move_loop_invariants (void)\n {\n-  if (current_loops && flag_move_loop_invariants)\n+  if (current_loops)\n     move_loop_invariants (current_loops);\n }\n \n struct tree_opt_pass pass_rtl_move_loop_invariants =\n {\n-  \"loop_invariant\",                     /* name */\n-  NULL,                                 /* gate */\n+  \"loop2_invariant\",                     /* name */\n+  gate_rtl_move_loop_invariants,        /* gate */\n   rtl_move_loop_invariants,             /* execute */\n   NULL,                                 /* sub */\n   NULL,                                 /* next */\n@@ -258,17 +264,23 @@ struct tree_opt_pass pass_rtl_move_loop_invariants =\n \n \f\n /* Loop unswitching for RTL.  */\n+static bool\n+gate_rtl_unswitch (void)\n+{\n+  return flag_unswitch_loops;\n+}\n+\n static void\n rtl_unswitch (void)\n {\n-  if (current_loops && flag_unswitch_loops)\n+  if (current_loops)\n     unswitch_loops (current_loops);\n }\n \n struct tree_opt_pass pass_rtl_unswitch =\n {\n-  \"loop_unswitch\",                      /* name */\n-  NULL,                                 /* gate */\n+  \"loop2_unswitch\",                      /* name */\n+  gate_rtl_unswitch,                    /* gate */\n   rtl_unswitch,                         /* execute */\n   NULL,                                 /* sub */\n   NULL,                                 /* next */\n@@ -284,11 +296,16 @@ struct tree_opt_pass pass_rtl_unswitch =\n \n \f\n /* Loop unswitching for RTL.  */\n+static bool\n+gate_rtl_unroll_and_peel_loops (void)\n+{\n+  return (flag_peel_loops || flag_unroll_loops || flag_unroll_all_loops);\n+}\n+\n static void\n rtl_unroll_and_peel_loops (void)\n {\n-  if (current_loops\n-      && (flag_peel_loops || flag_unroll_loops || flag_unroll_all_loops))\n+  if (current_loops)\n     {\n       int flags = 0;\n \n@@ -305,8 +322,8 @@ rtl_unroll_and_peel_loops (void)\n \n struct tree_opt_pass pass_rtl_unroll_and_peel_loops =\n {\n-  \"loop_unroll\",                        /* name */\n-  NULL,                                 /* gate */\n+  \"loop2_unroll\",                        /* name */\n+  gate_rtl_unroll_and_peel_loops,       /* gate */\n   rtl_unroll_and_peel_loops,            /* execute */\n   NULL,                                 /* sub */\n   NULL,                                 /* next */\n@@ -322,20 +339,29 @@ struct tree_opt_pass pass_rtl_unroll_and_peel_loops =\n \n \f\n /* The doloop optimization.  */\n+static bool\n+gate_rtl_doloop (void)\n+{\n+#ifdef HAVE_doloop_end\n+  return (flag_branch_on_count_reg && HAVE_doloop_end);\n+#else\n+  return 0;\n+#endif\n+}\n+\n static void\n rtl_doloop (void)\n {\n #ifdef HAVE_doloop_end\n-  if (current_loops\n-      && (flag_branch_on_count_reg && HAVE_doloop_end))\n+  if (current_loops)\n     doloop_optimize_loops (current_loops);\n #endif\n }\n \n struct tree_opt_pass pass_rtl_doloop =\n {\n-  \"loop_doloop\",                        /* name */\n-  NULL,                                 /* gate */\n+  \"loop2_doloop\",                        /* name */\n+  gate_rtl_doloop,                      /* gate */\n   rtl_doloop,                           /* execute */\n   NULL,                                 /* sub */\n   NULL,                                 /* next */"}, {"sha": "a781cb2d743a8840485e66e79cc7caca6c902548", "filename": "gcc/mode-switching.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/defb77dcaa265e418d04840b4d0dc69288690b26/gcc%2Fmode-switching.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/defb77dcaa265e418d04840b4d0dc69288690b26/gcc%2Fmode-switching.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmode-switching.c?ref=defb77dcaa265e418d04840b4d0dc69288690b26", "patch": "@@ -736,7 +736,7 @@ rest_of_handle_mode_switching (void)\n \n struct tree_opt_pass pass_mode_switching =\n {\n-  NULL,                                 /* name */\n+  \"mode-sw\",                            /* name */\n   gate_mode_switching,                  /* gate */\n   rest_of_handle_mode_switching,        /* execute */\n   NULL,                                 /* sub */\n@@ -747,6 +747,6 @@ struct tree_opt_pass pass_mode_switching =\n   0,                                    /* properties_provided */\n   0,                                    /* properties_destroyed */\n   0,                                    /* todo_flags_start */\n-  0,                                    /* todo_flags_finish */\n+  TODO_dump_func,                       /* todo_flags_finish */\n   0                                     /* letter */\n };"}, {"sha": "23012dcf1c4be4fb6ab9d9185ce9c1fc20adf2e6", "filename": "gcc/recog.c", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/defb77dcaa265e418d04840b4d0dc69288690b26/gcc%2Frecog.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/defb77dcaa265e418d04840b4d0dc69288690b26/gcc%2Frecog.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frecog.c?ref=defb77dcaa265e418d04840b4d0dc69288690b26", "patch": "@@ -3460,7 +3460,7 @@ rest_of_handle_split_all_insns (void)\n \n struct tree_opt_pass pass_split_all_insns =\n {\n-  NULL,                                 /* name */\n+  \"split1\",                             /* name */\n   NULL,                                 /* gate */\n   rest_of_handle_split_all_insns,       /* execute */\n   NULL,                                 /* sub */\n@@ -3471,7 +3471,7 @@ struct tree_opt_pass pass_split_all_insns =\n   0,                                    /* properties_provided */\n   0,                                    /* properties_destroyed */\n   0,                                    /* todo_flags_start */\n-  0,                                    /* todo_flags_finish */\n+  TODO_dump_func,                       /* todo_flags_finish */\n   0                                     /* letter */\n };\n \n@@ -3489,7 +3489,7 @@ gate_do_final_split (void)\n \n struct tree_opt_pass pass_split_for_shorten_branches =\n {\n-  NULL,                                 /* name */\n+  \"split3\",                             /* name */\n   gate_do_final_split,                  /* gate */\n   split_all_insns_noflow,               /* execute */\n   NULL,                                 /* sub */\n@@ -3500,7 +3500,7 @@ struct tree_opt_pass pass_split_for_shorten_branches =\n   0,                                    /* properties_provided */\n   0,                                    /* properties_destroyed */\n   0,                                    /* todo_flags_start */\n-  0,                                    /* todo_flags_finish */\n+  TODO_dump_func,                       /* todo_flags_finish */\n   0                                     /* letter */\n };\n \n@@ -3525,7 +3525,7 @@ gate_handle_split_before_regstack (void)\n \n struct tree_opt_pass pass_split_before_regstack =\n {\n-  NULL,                                 /* name */\n+  \"split2\",                             /* name */\n   gate_handle_split_before_regstack,    /* gate */\n   rest_of_handle_split_all_insns,       /* execute */\n   NULL,                                 /* sub */\n@@ -3536,6 +3536,6 @@ struct tree_opt_pass pass_split_before_regstack =\n   0,                                    /* properties_provided */\n   0,                                    /* properties_destroyed */\n   0,                                    /* todo_flags_start */\n-  0,                                    /* todo_flags_finish */\n+  TODO_dump_func,                       /* todo_flags_finish */\n   0                                     /* letter */\n };"}, {"sha": "e6bbc8ca65dbf20951e417524a312d44390d9010", "filename": "gcc/regmove.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/defb77dcaa265e418d04840b4d0dc69288690b26/gcc%2Fregmove.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/defb77dcaa265e418d04840b4d0dc69288690b26/gcc%2Fregmove.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fregmove.c?ref=defb77dcaa265e418d04840b4d0dc69288690b26", "patch": "@@ -2524,7 +2524,7 @@ rest_of_handle_stack_adjustments (void)\n \n struct tree_opt_pass pass_stack_adjustments =\n {\n-  NULL,                                 /* name */\n+  \"csa\",                                /* name */\n   gate_handle_stack_adjustments,        /* gate */\n   rest_of_handle_stack_adjustments,     /* execute */\n   NULL,                                 /* sub */"}, {"sha": "782982eaf51f8c0a6e4545cdd2b6586c0d3e83cf", "filename": "gcc/tree-optimize.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/defb77dcaa265e418d04840b4d0dc69288690b26/gcc%2Ftree-optimize.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/defb77dcaa265e418d04840b4d0dc69288690b26/gcc%2Ftree-optimize.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-optimize.c?ref=defb77dcaa265e418d04840b4d0dc69288690b26", "patch": "@@ -258,7 +258,7 @@ execute_fixup_cfg (void)\n \n struct tree_opt_pass pass_fixup_cfg =\n {\n-  NULL,\t\t\t\t\t/* name */\n+  \"fixupcfg\",\t\t\t\t/* name */\n   NULL,\t\t\t\t\t/* gate */\n   execute_fixup_cfg,\t\t\t/* execute */\n   NULL,\t\t\t\t\t/* sub */\n@@ -269,7 +269,7 @@ struct tree_opt_pass pass_fixup_cfg =\n   0,\t\t\t\t\t/* properties_provided */\n   0,\t\t\t\t\t/* properties_destroyed */\n   0,\t\t\t\t\t/* todo_flags_start */\n-  0,\t\t\t\t\t/* todo_flags_finish */\n+  TODO_dump_func,\t\t\t/* todo_flags_finish */\n   0\t\t\t\t\t/* letter */\n };\n "}]}