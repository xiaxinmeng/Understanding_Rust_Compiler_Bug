{"sha": "a9e892d0750958d33f76f3900c45863c7c0d0fd1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTllODkyZDA3NTA5NThkMzNmNzZmMzkwMGM0NTg2M2M3YzBkMGZkMQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2013-07-08T07:41:19Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2013-07-08T07:41:19Z"}, "message": "[multiple changes]\n\n2013-07-08  Hristian Kirtchev  <kirtchev@adacore.com>\n\n\t* sem_prag.adb (Analyze_Pragma): Remove\n\tvariable Unit_Prag. Remove the check on duplicate mode for the\n\tconfiguration form of the pragma.\n\t(Redefinition_Error): Removed.\n\n2013-07-08  Robert Dewar  <dewar@adacore.com>\n\n\t* lib.ads, gnat_rm.texi, einfo.ads, sem_ch13.adb: Minor reformatting\n\tand editing.\n\nFrom-SVN: r200753", "tree": {"sha": "b807f4d8f8d947f95459951eb87e501a9440d4f4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b807f4d8f8d947f95459951eb87e501a9440d4f4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a9e892d0750958d33f76f3900c45863c7c0d0fd1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a9e892d0750958d33f76f3900c45863c7c0d0fd1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a9e892d0750958d33f76f3900c45863c7c0d0fd1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a9e892d0750958d33f76f3900c45863c7c0d0fd1/comments", "author": null, "committer": null, "parents": [{"sha": "1bc331122b9f6a30124d1deb32a7af5eef006a00", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1bc331122b9f6a30124d1deb32a7af5eef006a00", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1bc331122b9f6a30124d1deb32a7af5eef006a00"}], "stats": {"total": 134, "additions": 48, "deletions": 86}, "files": [{"sha": "faa1556df3041f446b2fbe98071bf5e3c1fdcea0", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9e892d0750958d33f76f3900c45863c7c0d0fd1/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9e892d0750958d33f76f3900c45863c7c0d0fd1/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=a9e892d0750958d33f76f3900c45863c7c0d0fd1", "patch": "@@ -1,3 +1,15 @@\n+2013-07-08  Hristian Kirtchev  <kirtchev@adacore.com>\n+\n+\t* sem_prag.adb (Analyze_Pragma): Remove\n+\tvariable Unit_Prag. Remove the check on duplicate mode for the\n+\tconfiguration form of the pragma.\n+\t(Redefinition_Error): Removed.\n+\n+2013-07-08  Robert Dewar  <dewar@adacore.com>\n+\n+\t* lib.ads, gnat_rm.texi, einfo.ads, sem_ch13.adb: Minor reformatting\n+\tand editing.\n+\n 2013-07-08  Ed Schonberg  <schonberg@adacore.com>\n \n \t* sem_prag.adb (Analyze_PPC_In_Decl_Part): In ASIS mode,"}, {"sha": "a99812117b87378bf38aa7ed403b21278e7a4a60", "filename": "gcc/ada/einfo.ads", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9e892d0750958d33f76f3900c45863c7c0d0fd1/gcc%2Fada%2Feinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9e892d0750958d33f76f3900c45863c7c0d0fd1/gcc%2Fada%2Feinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.ads?ref=a9e892d0750958d33f76f3900c45863c7c0d0fd1", "patch": "@@ -1,7 +1,6 @@\n ------------------------------------------------------------------------------\n --                                                                          --\n --                         GNAT COMPILER COMPONENTS                         --\n---                                                                          --\n --                                E I N F O                                 --\n --                                                                          --\n --                                 S p e c                                  --\n@@ -3760,7 +3759,7 @@ package Einfo is\n --    SPARK_Mode_Pragmas (Node32)\n --       Present in the entities of subprogram specs and bodies as well as in\n --       package specs and bodies. Points to a list of SPARK_Mode pragmas that\n---       apply to the related construct.\n+--       apply to the related construct. Add note of what this is used for ???\n \n --    Spec_Entity (Node19)\n --       Defined in package body entities. Points to corresponding package"}, {"sha": "d59ac49cb49a69787e3a24145fb79ffa1e4269b0", "filename": "gcc/ada/gnat_rm.texi", "status": "modified", "additions": 23, "deletions": 13, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9e892d0750958d33f76f3900c45863c7c0d0fd1/gcc%2Fada%2Fgnat_rm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9e892d0750958d33f76f3900c45863c7c0d0fd1/gcc%2Fada%2Fgnat_rm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_rm.texi?ref=a9e892d0750958d33f76f3900c45863c7c0d0fd1", "patch": "@@ -6028,8 +6028,8 @@ SPARK_Mode is used without an argument.\n \n @item\n @code{Off}: The units are considered to be in Ada by default and therefore not\n-part of SPARK 2014 unless overridden locally. These units may be called by SPARK\n-2014 units.\n+part of SPARK 2014 unless overridden locally. These units may be called by\n+SPARK 2014 units.\n \n @item\n @code{Auto}: The formal verification tools will automatically detect whether\n@@ -6045,28 +6045,38 @@ Pragma SPARK_Mode can be used as a local pragma with the following semantics:\n Auto cannot be used as a mode argument.\n \n @item\n-When the pragma appears immediately within the visible declarations of a\n-package, it marks the whole package (spec and body) in or out of SPARK 2014.\n+When the pragma at the start of the visible declarations (preceded only\n+by other pragmas) of a package declaration, it marks the whole package\n+(declaration and body) in or out of SPARK 2014.\n \n @item\n-When the pragma appears immediately within the private declarations of a\n-package, it marks the private part in or out of SPARK 2014.\n+When the pragma appears at the start of the private declarations of a\n+package (only other pragmas can appear between the @code{private} keyword\n+and the @code{SPARK_Mode} pragma, it marks the private part in or\n+out of SPARK 2014 (overriding the mode for the public part).\n \n @item\n-When the pragma appears immediately within the declarations of a package body,\n-it marks the whole body in or out of SPARK 2014.\n+When the pragma appears immediately at the start of the declarations of a\n+package body (preceded only by other pragmas),\n+it marks the whole body in or out of SPARK 2014 (overriding the default\n+mode copied from the declaration).\n \n @item\n-When the pragma appears immediately within the elaboration statements of a\n-package body, it marks the statements in or out of SPARK 2014.\n+When the pragma appears at the start of the elaboration statements of\n+a package body (only other pragmas can appear between the @code{begin}\n+keyword and the @code{SPARK_Mode} pragma,\n+it marks the elaboration statements in or out of SPARK 2014, overriding\n+the default mode of the package body).\n \n @item\n-When the pragma appears after a subprogram declaration, it marks the whole\n+When the pragma appears after a subprogram declaration (with only other\n+pragmas intervening), it marks the whole\n subprogram (spec and body) in or out of SPARK 2014.\n \n @item\n-When the pragma appears immediately within the declarations of a subprogram\n-body, it marks the whole body in or out of SPARK 2014.\n+When the pragma appears at the start of the declarations of a subprogram\n+body (preceded only by other pragmas), it marks the whole body in or out\n+of SPARK 2014, overriding the default mode set by the declaration.\n \n @item\n Any other use of the pragma is illegal."}, {"sha": "ac1945e6ecc482186236998529ae23019be59a07", "filename": "gcc/ada/lib.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9e892d0750958d33f76f3900c45863c7c0d0fd1/gcc%2Fada%2Flib.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9e892d0750958d33f76f3900c45863c7c0d0fd1/gcc%2Fada%2Flib.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flib.ads?ref=a9e892d0750958d33f76f3900c45863c7c0d0fd1", "patch": "@@ -373,7 +373,7 @@ package Lib is\n \n    --    SPARK_Mode_Pragma\n    --      Pointer to the configuration pragma SPARK_Mode that applies to the\n-   --      whole unit.\n+   --      whole unit. Add note of what this is used for ???\n \n    --    Unit_File_Name\n    --      The name of the source file containing the unit. Set when the entry"}, {"sha": "abf415f7bb1720da4b27462df1ae2528b7e798a6", "filename": "gcc/ada/sem_ch13.adb", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9e892d0750958d33f76f3900c45863c7c0d0fd1/gcc%2Fada%2Fsem_ch13.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9e892d0750958d33f76f3900c45863c7c0d0fd1/gcc%2Fada%2Fsem_ch13.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch13.adb?ref=a9e892d0750958d33f76f3900c45863c7c0d0fd1", "patch": "@@ -1809,7 +1809,9 @@ package body Sem_Ch13 is\n                      end loop;\n                   end if;\n \n-                  --  Build the precondition/postcondition pragma.\n+                  --  Build the precondition/postcondition pragma\n+\n+                  --  Add note about why we do NOT need Copy_Tree here ???\n \n                   Make_Aitem_Pragma\n                     (Pragma_Argument_Associations => New_List ("}, {"sha": "dff2a21923ff376f4e216a8277d7574760d7e756", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 8, "deletions": 69, "changes": 77, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9e892d0750958d33f76f3900c45863c7c0d0fd1/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9e892d0750958d33f76f3900c45863c7c0d0fd1/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=a9e892d0750958d33f76f3900c45863c7c0d0fd1", "patch": "@@ -16354,16 +16354,6 @@ package body Sem_Prag is\n             function Get_SPARK_Mode_Name (Id : SPARK_Mode_Id) return Name_Id;\n             --  Convert a value of type SPARK_Mode_Id into a corresponding name\n \n-            procedure Redefinition_Error (Mode : SPARK_Mode_Id);\n-            --  Emit an error on an attempt to redefine existing mode Mode. The\n-            --  message is associated with the first argument of the current\n-            --  pragma.\n-\n-            procedure Redefinition_Error (Prag : Node_Id);\n-            --  Emit an error on an attempt to redefine the mode of Prag. The\n-            --  message is associated with the first argument of the current\n-            --  pragma.\n-\n             ------------------\n             -- Chain_Pragma --\n             ------------------\n@@ -16474,41 +16464,14 @@ package body Sem_Prag is\n                end if;\n             end Get_SPARK_Mode_Name;\n \n-            ------------------------\n-            -- Redefinition_Error --\n-            ------------------------\n-\n-            procedure Redefinition_Error (Mode : SPARK_Mode_Id) is\n-            begin\n-               Error_Msg_Name_1 := Get_SPARK_Mode_Name (Mode);\n-               Error_Msg_N\n-                 (\"cannot redefine 'S'P'A'R'K mode, already set to %\", Arg1);\n-            end Redefinition_Error;\n-\n-            ------------------------\n-            -- Redefinition_Error --\n-            ------------------------\n-\n-            procedure Redefinition_Error (Prag : Node_Id) is\n-               Mode : constant Name_Id :=\n-                        Chars (Get_Pragma_Arg (First\n-                         (Pragma_Argument_Associations (Prag))));\n-            begin\n-               Error_Msg_Name_1 := Mode;\n-               Error_Msg_Sloc   := Sloc (Prag);\n-               Error_Msg_N\n-                 (\"cannot redefine 'S'P'A'R'K mode, already set to % #\", Arg1);\n-            end Redefinition_Error;\n-\n             --  Local variables\n \n-            Body_Id   : Entity_Id;\n-            Context   : Node_Id;\n-            Mode      : Name_Id;\n-            Mode_Id   : SPARK_Mode_Id;\n-            Spec_Id   : Entity_Id;\n-            Stmt      : Node_Id;\n-            Unit_Prag : Node_Id;\n+            Body_Id : Entity_Id;\n+            Context : Node_Id;\n+            Mode    : Name_Id;\n+            Mode_Id : SPARK_Mode_Id;\n+            Spec_Id : Entity_Id;\n+            Stmt    : Node_Id;\n \n          --  Start of processing for SPARK_Mode\n \n@@ -16536,38 +16499,14 @@ package body Sem_Prag is\n \n             if No (Context) then\n                Check_Valid_Configuration_Pragma;\n-\n-               --  Set the global mode\n-\n-               if Global_SPARK_Mode = None then\n-                  Global_SPARK_Mode := Mode_Id;\n-\n-               --  Catch an attempt to redefine an existing global mode by\n-               --  using multiple configuration files.\n-\n-               elsif Global_SPARK_Mode /= Mode_Id then\n-                  Redefinition_Error (Global_SPARK_Mode);\n-               end if;\n+               Global_SPARK_Mode := Mode_Id;\n \n             --  When the pragma is placed before the declaration of a unit, it\n             --  configures the whole unit.\n \n             elsif Nkind (Context) = N_Compilation_Unit then\n                Check_Valid_Configuration_Pragma;\n-\n-               Unit_Prag := SPARK_Mode_Pragma (Current_Sem_Unit);\n-\n-               --  Set the unit mode\n-\n-               if No (Unit_Prag) then\n-                  Set_SPARK_Mode_Pragma (Current_Sem_Unit, N);\n-\n-               --  Catch an attempt to redefine the unit mode by using multiple\n-               --  pragmas declared in the same region.\n-\n-               else\n-                  Redefinition_Error (Unit_Prag);\n-               end if;\n+               Set_SPARK_Mode_Pragma (Current_Sem_Unit, N);\n \n             --  The pragma applies to a [library unit] subprogram or package\n "}]}