{"sha": "264fd1424e7e198bc071f832a300cef9b0b0fac0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjY0ZmQxNDI0ZTdlMTk4YmMwNzFmODMyYTMwMGNlZjliMGIwZmFjMA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2016-03-04T01:45:43Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2016-03-04T01:45:43Z"}, "message": "re PR c++/67164 (ICE: tree check: expected class \u2018expression\u2019, have \u2018exceptional\u2019 (argument_pack_select) in tree_operand_check, at tree.h:3356)\n\n\tPR c++/67164\n\n\t* pt.c (copy_template_args): New.\n\t(tsubst_pack_expansion): Use it.\n\nFrom-SVN: r233954", "tree": {"sha": "312da67ba3486fd61c2193485ca841891809c8f9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/312da67ba3486fd61c2193485ca841891809c8f9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/264fd1424e7e198bc071f832a300cef9b0b0fac0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/264fd1424e7e198bc071f832a300cef9b0b0fac0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/264fd1424e7e198bc071f832a300cef9b0b0fac0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/264fd1424e7e198bc071f832a300cef9b0b0fac0/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "6fdb0d67d06dea7632c36d396031b7cb41d74562", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6fdb0d67d06dea7632c36d396031b7cb41d74562", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6fdb0d67d06dea7632c36d396031b7cb41d74562"}], "stats": {"total": 63, "additions": 62, "deletions": 1}, "files": [{"sha": "e68382c3440c686b66b57cd411573b262fb71d47", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/264fd1424e7e198bc071f832a300cef9b0b0fac0/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/264fd1424e7e198bc071f832a300cef9b0b0fac0/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=264fd1424e7e198bc071f832a300cef9b0b0fac0", "patch": "@@ -1,5 +1,9 @@\n 2016-03-03  Jason Merrill  <jason@redhat.com>\n \n+\tPR c++/67164\n+\t* pt.c (copy_template_args): New.\n+\t(tsubst_pack_expansion): Use it.\n+\n \t* call.c (build_aggr_conv): Use get_nsdmi.\n \n \tPR c++/51406"}, {"sha": "c5b92013830bd539117522bf938bd60411080a73", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 29, "deletions": 1, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/264fd1424e7e198bc071f832a300cef9b0b0fac0/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/264fd1424e7e198bc071f832a300cef9b0b0fac0/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=264fd1424e7e198bc071f832a300cef9b0b0fac0", "patch": "@@ -178,6 +178,7 @@ static int check_cv_quals_for_unify (int, tree, tree);\n static void template_parm_level_and_index (tree, int*, int*);\n static int unify_pack_expansion (tree, tree, tree,\n \t\t\t\t tree, unification_kind_t, bool, bool);\n+static tree copy_template_args (tree);\n static tree tsubst_template_arg (tree, tree, tsubst_flags_t, tree);\n static tree tsubst_template_args (tree, tree, tsubst_flags_t, tree);\n static tree tsubst_template_parms (tree, tree, tsubst_flags_t);\n@@ -11037,11 +11038,12 @@ tsubst_pack_expansion (tree t, tree args, tsubst_flags_t complain,\n   /* For each argument in each argument pack, substitute into the\n      pattern.  */\n   result = make_tree_vec (len);\n+  tree elem_args = copy_template_args (args);\n   for (i = 0; i < len; ++i)\n     {\n       t = gen_elem_of_pack_expansion_instantiation (pattern, packs,\n \t\t\t\t\t\t    i,\n-\t\t\t\t\t\t    args, complain,\n+\t\t\t\t\t\t    elem_args, complain,\n \t\t\t\t\t\t    in_decl);\n       TREE_VEC_ELT (result, i) = t;\n       if (t == error_mark_node)\n@@ -11136,6 +11138,32 @@ make_argument_pack (tree vec)\n   return pack;\n }\n \n+/* Return an exact copy of template args T that can be modified\n+   independently.  */\n+\n+static tree\n+copy_template_args (tree t)\n+{\n+  if (t == error_mark_node)\n+    return t;\n+\n+  int len = TREE_VEC_LENGTH (t);\n+  tree new_vec = make_tree_vec (len);\n+\n+  for (int i = 0; i < len; ++i)\n+    {\n+      tree elt = TREE_VEC_ELT (t, i);\n+      if (elt && TREE_CODE (elt) == TREE_VEC)\n+\telt = copy_template_args (elt);\n+      TREE_VEC_ELT (new_vec, i) = elt;\n+    }\n+\n+  NON_DEFAULT_TEMPLATE_ARGS_COUNT (new_vec)\n+    = NON_DEFAULT_TEMPLATE_ARGS_COUNT (t);\n+\n+  return new_vec;\n+}\n+\n /* Substitute ARGS into the vector or list of template arguments T.  */\n \n static tree"}, {"sha": "43c00e91d564b1231a08a4ca0427608d287bc082", "filename": "gcc/testsuite/g++.dg/cpp0x/variadic-tuple2.C", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/264fd1424e7e198bc071f832a300cef9b0b0fac0/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fvariadic-tuple2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/264fd1424e7e198bc071f832a300cef9b0b0fac0/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fvariadic-tuple2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fvariadic-tuple2.C?ref=264fd1424e7e198bc071f832a300cef9b0b0fac0", "patch": "@@ -0,0 +1,29 @@\n+// PR c++/67164\n+// { dg-do compile { target c++11 } }\n+\n+#include <type_traits>\n+\n+namespace detail {\n+    template <bool ...b>\n+    struct fast_and\n+        : std::is_same<fast_and<b...>, fast_and<(b, true)...>>\n+    { };\n+}\n+\n+template <typename ...Xn>\n+struct tuple {\n+    tuple() { }\n+\n+    template <typename ...Yn, typename = typename std::enable_if<\n+        detail::fast_and<std::is_constructible<Xn, Yn&&>::value...>::value\n+    >::type>\n+    tuple(Yn&& ...yn) { }\n+\n+    template <typename ...Yn, typename = typename std::enable_if<\n+        detail::fast_and<std::is_constructible<Xn, Yn const&>::value...>::value\n+    >::type>\n+    tuple(tuple<Yn...> const& other) { }\n+};\n+\n+tuple<tuple<>> t{};\n+tuple<tuple<>> copy = t;"}]}