{"sha": "0f09127808018c479214478d3f79e0ac40a3c55b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGYwOTEyNzgwODAxOGM0NzkyMTQ0NzhkM2Y3OWUwYWM0MGEzYzU1Yg==", "commit": {"author": {"name": "Segher Boessenkool", "email": "segher@kernel.crashing.org", "date": "2016-12-01T02:04:10Z"}, "committer": {"name": "Segher Boessenkool", "email": "segher@gcc.gnu.org", "date": "2016-12-01T02:04:10Z"}, "message": "combine: Emit a barrier after unconditional trap (PR78607)\n\nAfter an unconditional trap there should be a barrier.  In most cases\none is automatically inserted, but not if the trap is the final insn in\nthe instruction stream.  We need to emit one explicitly.\n\n\n\tPR rtl-optimization/78607\n\t* combine.c (try_combine): Emit a barrier after a unconditional trap.\n\ngcc/testsuite/\n\tPR rtl-optimization/78607\n\t* gcc.c-torture/compile/pr78607.c: New testcase.\n\nFrom-SVN: r243092", "tree": {"sha": "c69848023a1231979a3e106f46baf23fb8e7cbdb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c69848023a1231979a3e106f46baf23fb8e7cbdb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0f09127808018c479214478d3f79e0ac40a3c55b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0f09127808018c479214478d3f79e0ac40a3c55b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0f09127808018c479214478d3f79e0ac40a3c55b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0f09127808018c479214478d3f79e0ac40a3c55b/comments", "author": {"login": "segher", "id": 417629, "node_id": "MDQ6VXNlcjQxNzYyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/417629?v=4", "gravatar_id": "", "url": "https://api.github.com/users/segher", "html_url": "https://github.com/segher", "followers_url": "https://api.github.com/users/segher/followers", "following_url": "https://api.github.com/users/segher/following{/other_user}", "gists_url": "https://api.github.com/users/segher/gists{/gist_id}", "starred_url": "https://api.github.com/users/segher/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/segher/subscriptions", "organizations_url": "https://api.github.com/users/segher/orgs", "repos_url": "https://api.github.com/users/segher/repos", "events_url": "https://api.github.com/users/segher/events{/privacy}", "received_events_url": "https://api.github.com/users/segher/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e95a3eb3c67bfb9a2d3e954e272545d033e8dd7f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e95a3eb3c67bfb9a2d3e954e272545d033e8dd7f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e95a3eb3c67bfb9a2d3e954e272545d033e8dd7f"}], "stats": {"total": 24, "additions": 24, "deletions": 0}, "files": [{"sha": "e2f7b25e9be3e4055b09dc67858d80fa0c508d15", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f09127808018c479214478d3f79e0ac40a3c55b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f09127808018c479214478d3f79e0ac40a3c55b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0f09127808018c479214478d3f79e0ac40a3c55b", "patch": "@@ -1,3 +1,8 @@\n+2016-12-01  Segher Boessenkool  <segher@kernel.crashing.org>\n+\n+\tPR rtl-optimization/78607\n+\t* combine.c (try_combine): Emit a barrier after a unconditional trap.\n+\n 2016-11-30  Michael Meissner  <meissner@linux.vnet.ibm.com>\n \n \tPR target/78602"}, {"sha": "faafcb741f4121ad95faf2af455b10885627d841", "filename": "gcc/combine.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f09127808018c479214478d3f79e0ac40a3c55b/gcc%2Fcombine.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f09127808018c479214478d3f79e0ac40a3c55b/gcc%2Fcombine.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcombine.c?ref=0f09127808018c479214478d3f79e0ac40a3c55b", "patch": "@@ -4627,6 +4627,7 @@ try_combine (rtx_insn *i3, rtx_insn *i2, rtx_insn *i1, rtx_insn *i0,\n       basic_block bb = BLOCK_FOR_INSN (i3);\n       gcc_assert (bb);\n       remove_edge (split_block (bb, i3));\n+      emit_barrier_after_bb (bb);\n       *new_direct_jump_p = 1;\n     }\n \n@@ -4637,6 +4638,7 @@ try_combine (rtx_insn *i3, rtx_insn *i2, rtx_insn *i1, rtx_insn *i0,\n       basic_block bb = BLOCK_FOR_INSN (undobuf.other_insn);\n       gcc_assert (bb);\n       remove_edge (split_block (bb, undobuf.other_insn));\n+      emit_barrier_after_bb (bb);\n       *new_direct_jump_p = 1;\n     }\n "}, {"sha": "bf4bd8ac218086bcd22eddf041bd612adb2c7617", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f09127808018c479214478d3f79e0ac40a3c55b/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f09127808018c479214478d3f79e0ac40a3c55b/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=0f09127808018c479214478d3f79e0ac40a3c55b", "patch": "@@ -1,3 +1,8 @@\n+2016-12-01  Segher Boessenkool  <segher@kernel.crashing.org>\n+\n+\tPR rtl-optimization/78607\n+\t* gcc.c-torture/compile/pr78607.c: New testcase.\n+\n 2016-11-30  Martin Sebor  <msebor@redhat.com>\n \n \tPR tree-optimization/78586"}, {"sha": "2c5420d8e7e1d5720f7a0fb792ad68c4f762095f", "filename": "gcc/testsuite/gcc.c-torture/compile/pr78607.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f09127808018c479214478d3f79e0ac40a3c55b/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr78607.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f09127808018c479214478d3f79e0ac40a3c55b/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr78607.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr78607.c?ref=0f09127808018c479214478d3f79e0ac40a3c55b", "patch": "@@ -0,0 +1,12 @@\n+/* PR rtl-optimization/78607 */\n+\n+void\n+rc (int cx)\n+{\n+  int mq;\n+\n+  if (mq == 0 && (cx / 0) != 0)\n+    for (;;)\n+      {\n+      }\n+}"}]}