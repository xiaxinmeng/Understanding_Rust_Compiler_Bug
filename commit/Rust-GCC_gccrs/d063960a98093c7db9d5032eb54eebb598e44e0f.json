{"sha": "d063960a98093c7db9d5032eb54eebb598e44e0f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDA2Mzk2MGE5ODA5M2M3ZGI5ZDUwMzJlYjU0ZWViYjU5OGU0NGUwZg==", "commit": {"author": {"name": "Ziemowit Laski", "email": "zlaski@apple.com", "date": "2004-09-09T22:53:51Z"}, "committer": {"name": "Ziemowit Laski", "email": "zlaski@gcc.gnu.org", "date": "2004-09-09T22:53:51Z"}, "message": "Make-lang.in (cp/typeck.o): Depend on c-common.h.\n\n[gcc/cp/ChangeLog]\n2004-09-09  Ziemowit Laski  <zlaski@apple.com>\n\n        * Make-lang.in (cp/typeck.o): Depend on c-common.h.\n        * typeck.c: Include c-common.h.\n        (comptypes): For RECORD_TYPEs, call objc_comptypes() and\n        return the result if nonnegative.\n\nFrom-SVN: r87259", "tree": {"sha": "c77357ccc04285117d76c7641a949d191ac1a344", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c77357ccc04285117d76c7641a949d191ac1a344"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d063960a98093c7db9d5032eb54eebb598e44e0f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d063960a98093c7db9d5032eb54eebb598e44e0f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d063960a98093c7db9d5032eb54eebb598e44e0f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d063960a98093c7db9d5032eb54eebb598e44e0f/comments", "author": null, "committer": null, "parents": [{"sha": "3f3174b6bcf9c2ae6711065352a3da2e5af1bb7e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3f3174b6bcf9c2ae6711065352a3da2e5af1bb7e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3f3174b6bcf9c2ae6711065352a3da2e5af1bb7e"}], "stats": {"total": 18, "additions": 17, "deletions": 1}, "files": [{"sha": "43c58aa5ed021fa7d15ed9eb6c31f9f6441e53f5", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d063960a98093c7db9d5032eb54eebb598e44e0f/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d063960a98093c7db9d5032eb54eebb598e44e0f/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=d063960a98093c7db9d5032eb54eebb598e44e0f", "patch": "@@ -1,3 +1,10 @@\n+2004-09-09  Ziemowit Laski  <zlaski@apple.com>\n+\n+\t* Make-lang.in (cp/typeck.o): Depend on c-common.h.\n+\t* typeck.c: Include c-common.h.\n+\t(comptypes): For RECORD_TYPEs, call objc_comptypes() and\n+\treturn the result if nonnegative.\n+\n 2004-09-09  Zack Weinberg  <zack@codesourcery.com>\n \n \t* decl2.c (import_export_class)"}, {"sha": "27ef4f28f6e1280224caf5dbfca055b9ee2d6c48", "filename": "gcc/cp/Make-lang.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d063960a98093c7db9d5032eb54eebb598e44e0f/gcc%2Fcp%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d063960a98093c7db9d5032eb54eebb598e44e0f/gcc%2Fcp%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FMake-lang.in?ref=d063960a98093c7db9d5032eb54eebb598e44e0f", "patch": "@@ -240,7 +240,7 @@ cp/cp-objcp-common.o : cp/cp-objcp-common.c $(CONFIG_H) $(SYSTEM_H) coretypes.h\n cp/typeck2.o: cp/typeck2.c $(CXX_TREE_H) $(TM_H) flags.h toplev.h output.h $(TM_P_H) \\\n    diagnostic.h gt-cp-typeck2.h\n cp/typeck.o: cp/typeck.c $(CXX_TREE_H) $(TM_H) flags.h $(RTL_H) $(EXPR_H) toplev.h \\\n-   diagnostic.h convert.h\n+   diagnostic.h convert.h c-common.h\n cp/class.o: cp/class.c $(CXX_TREE_H) $(TM_H) flags.h toplev.h $(RTL_H) $(TARGET_H) convert.h\n cp/call.o: cp/call.c $(CXX_TREE_H) $(TM_H) flags.h toplev.h $(RTL_H) $(EXPR_H) \\\n      diagnostic.h intl.h gt-cp-call.h convert.h target.h"}, {"sha": "94e903db1c8f2e1772b9908262d6226fff11f1c1", "filename": "gcc/cp/typeck.c", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d063960a98093c7db9d5032eb54eebb598e44e0f/gcc%2Fcp%2Ftypeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d063960a98093c7db9d5032eb54eebb598e44e0f/gcc%2Fcp%2Ftypeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck.c?ref=d063960a98093c7db9d5032eb54eebb598e44e0f", "patch": "@@ -41,6 +41,7 @@ Boston, MA 02111-1307, USA.  */\n #include \"diagnostic.h\"\n #include \"target.h\"\n #include \"convert.h\"\n+#include \"c-common.h\"\n \n static tree convert_for_assignment (tree, tree, const char *, tree, int);\n static tree cp_pointer_int_sum (enum tree_code, tree, tree);\n@@ -919,6 +920,8 @@ comp_array_types (tree t1, tree t2, bool allow_redeclaration)\n bool\n comptypes (tree t1, tree t2, int strict)\n {\n+  int retval;\n+\n   if (t1 == t2)\n     return true;\n \n@@ -1014,6 +1017,12 @@ comptypes (tree t1, tree t2, int strict)\n       else if ((strict & COMPARE_DERIVED) && DERIVED_FROM_P (t2, t1))\n \treturn true;\n       \n+      /* We may be dealing with Objective-C instances...  */\n+      if (TREE_CODE (t1) == RECORD_TYPE\n+\t  && (retval = objc_comptypes (t1, t2, 0) >= 0))\n+         return retval;\n+      /* ...but fall through if we are not.  */\n+\n       return false;\n \n     case OFFSET_TYPE:"}]}