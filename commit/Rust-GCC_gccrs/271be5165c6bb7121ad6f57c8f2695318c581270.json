{"sha": "271be5165c6bb7121ad6f57c8f2695318c581270", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjcxYmU1MTY1YzZiYjcxMjFhZDZmNTdjOGYyNjk1MzE4YzU4MTI3MA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2012-06-29T20:26:51Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2012-06-29T20:26:51Z"}, "message": "tree-vect-generic.c (expand_vector_divmod): For even/odd widening multiply, put even always as first argument to VEC_PERM_EXPR.\n\n\t* tree-vect-generic.c (expand_vector_divmod): For even/odd\n\twidening multiply, put even always as first argument to\n\tVEC_PERM_EXPR.\n\nFrom-SVN: r189082", "tree": {"sha": "48622f59f6bcf1ffc1113605bdaee16510044841", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/48622f59f6bcf1ffc1113605bdaee16510044841"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/271be5165c6bb7121ad6f57c8f2695318c581270", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/271be5165c6bb7121ad6f57c8f2695318c581270", "html_url": "https://github.com/Rust-GCC/gccrs/commit/271be5165c6bb7121ad6f57c8f2695318c581270", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/271be5165c6bb7121ad6f57c8f2695318c581270/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "0fcc85cd9e285522f9896a88e1374e0cc2454b4f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0fcc85cd9e285522f9896a88e1374e0cc2454b4f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0fcc85cd9e285522f9896a88e1374e0cc2454b4f"}], "stats": {"total": 45, "additions": 24, "deletions": 21}, "files": [{"sha": "0c77b1d4b56d9a57b36cceb87552be43979ed58d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/271be5165c6bb7121ad6f57c8f2695318c581270/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/271be5165c6bb7121ad6f57c8f2695318c581270/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=271be5165c6bb7121ad6f57c8f2695318c581270", "patch": "@@ -1,3 +1,9 @@\n+2012-06-29  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* tree-vect-generic.c (expand_vector_divmod): For even/odd\n+\twidening multiply, put even always as first argument to\n+\tVEC_PERM_EXPR.\n+\n 2012-06-29  Richard Henderson  <rth@redhat.com>\n \n \t* tree-vect-generic.c: Include target.h."}, {"sha": "37fa5e3665ff6e44792681746b3911cc7483bcf2", "filename": "gcc/tree-vect-generic.c", "status": "modified", "additions": 18, "deletions": 21, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/271be5165c6bb7121ad6f57c8f2695318c581270/gcc%2Ftree-vect-generic.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/271be5165c6bb7121ad6f57c8f2695318c581270/gcc%2Ftree-vect-generic.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-generic.c?ref=271be5165c6bb7121ad6f57c8f2695318c581270", "patch": "@@ -457,7 +457,7 @@ expand_vector_divmod (gimple_stmt_iterator *gsi, tree type, tree op0,\n   optab op;\n   tree *vec;\n   unsigned char *sel = NULL;\n-  tree cur_op, mhi, mlo, mulcst, perm_mask, wider_type, tem, decl_e, decl_o;\n+  tree cur_op, m1, m2, mulcst, perm_mask, wider_type, tem, decl_e, decl_o;\n \n   if (prec > HOST_BITS_PER_WIDE_INT)\n     return NULL_TREE;\n@@ -843,35 +843,32 @@ expand_vector_divmod (gimple_stmt_iterator *gsi, tree type, tree op0,\n \t  gimple call;\n \n \t  call = gimple_build_call (decl_e, 2, cur_op, mulcst);\n-\t  mhi = create_tmp_reg (wider_type, NULL);\n-\t  add_referenced_var (mhi);\n-\t  mhi = make_ssa_name (mhi, call);\n-\t  gimple_call_set_lhs (call, mhi);\n+\t  m1 = create_tmp_reg (wider_type, NULL);\n+\t  add_referenced_var (m1);\n+\t  m1 = make_ssa_name (m1, call);\n+\t  gimple_call_set_lhs (call, m1);\n \t  gsi_insert_seq_before (gsi, call, GSI_SAME_STMT);\n \n \t  call = gimple_build_call (decl_o, 2, cur_op, mulcst);\n-\t  mlo = create_tmp_reg (wider_type, NULL);\n-\t  add_referenced_var (mlo);\n-\t  mlo = make_ssa_name (mlo, call);\n-\t  gimple_call_set_lhs (call, mlo);\n+\t  m2 = create_tmp_reg (wider_type, NULL);\n+\t  add_referenced_var (m2);\n+\t  m2 = make_ssa_name (m2, call);\n+\t  gimple_call_set_lhs (call, m2);\n \t  gsi_insert_seq_before (gsi, call, GSI_SAME_STMT);\n \t}\n       else\n \t{\n-\t  mhi = gimplify_build2 (gsi, VEC_WIDEN_MULT_HI_EXPR, wider_type,\n-\t\t\t\t cur_op, mulcst);\n-\t  mlo = gimplify_build2 (gsi, VEC_WIDEN_MULT_LO_EXPR, wider_type,\n-\t\t\t\t cur_op, mulcst);\n+\t  m1 = gimplify_build2 (gsi, BYTES_BIG_ENDIAN ? VEC_WIDEN_MULT_HI_EXPR\n+\t\t\t\t\t\t      : VEC_WIDEN_MULT_LO_EXPR,\n+\t\t\t\twider_type, cur_op, mulcst);\n+\t  m2 = gimplify_build2 (gsi, BYTES_BIG_ENDIAN ? VEC_WIDEN_MULT_LO_EXPR\n+\t\t\t\t\t\t      : VEC_WIDEN_MULT_HI_EXPR,\n+\t\t\t\twider_type, cur_op, mulcst);\n \t}\n \n-      mhi = gimplify_build1 (gsi, VIEW_CONVERT_EXPR, type, mhi);\n-      mlo = gimplify_build1 (gsi, VIEW_CONVERT_EXPR, type, mlo);\n-      if (BYTES_BIG_ENDIAN)\n-\tcur_op = gimplify_build3 (gsi, VEC_PERM_EXPR, type, mhi, mlo,\n-\t\t\t\t  perm_mask);\n-      else\n-\tcur_op = gimplify_build3 (gsi, VEC_PERM_EXPR, type, mlo, mhi,\n-\t\t\t\t  perm_mask);\n+      m1 = gimplify_build1 (gsi, VIEW_CONVERT_EXPR, type, m1);\n+      m2 = gimplify_build1 (gsi, VIEW_CONVERT_EXPR, type, m2);\n+      cur_op = gimplify_build3 (gsi, VEC_PERM_EXPR, type, m1, m2, perm_mask);\n     }\n \n   switch (mode)"}]}