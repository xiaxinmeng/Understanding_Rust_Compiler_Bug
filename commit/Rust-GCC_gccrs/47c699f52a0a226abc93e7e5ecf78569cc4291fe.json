{"sha": "47c699f52a0a226abc93e7e5ecf78569cc4291fe", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDdjNjk5ZjUyYTBhMjI2YWJjOTNlN2U1ZWNmNzg1NjljYzQyOTFmZQ==", "commit": {"author": {"name": "Tony Reix", "email": "tony.reix@atos.net", "date": "2018-01-19T17:45:24Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2018-01-19T17:45:24Z"}, "message": "xcoff.c (xcoff_incl_compare): New function.\n\n\t* xcoff.c (xcoff_incl_compare): New function.\n\t(xcoff_incl_search): New function.\n\t(xcoff_process_linenos): Use bsearch to find include file.\n\t(xcoff_initialize_fileline): Sort include file information.\n\nFrom-SVN: r256895", "tree": {"sha": "e863f931a08789d9d15e0f07522c313c70a65a4d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e863f931a08789d9d15e0f07522c313c70a65a4d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/47c699f52a0a226abc93e7e5ecf78569cc4291fe", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/47c699f52a0a226abc93e7e5ecf78569cc4291fe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/47c699f52a0a226abc93e7e5ecf78569cc4291fe", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/47c699f52a0a226abc93e7e5ecf78569cc4291fe/comments", "author": {"login": "trex58", "id": 5690106, "node_id": "MDQ6VXNlcjU2OTAxMDY=", "avatar_url": "https://avatars.githubusercontent.com/u/5690106?v=4", "gravatar_id": "", "url": "https://api.github.com/users/trex58", "html_url": "https://github.com/trex58", "followers_url": "https://api.github.com/users/trex58/followers", "following_url": "https://api.github.com/users/trex58/following{/other_user}", "gists_url": "https://api.github.com/users/trex58/gists{/gist_id}", "starred_url": "https://api.github.com/users/trex58/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/trex58/subscriptions", "organizations_url": "https://api.github.com/users/trex58/orgs", "repos_url": "https://api.github.com/users/trex58/repos", "events_url": "https://api.github.com/users/trex58/events{/privacy}", "received_events_url": "https://api.github.com/users/trex58/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "8c8e9a6bb656fc50b9a166ba452d252fe05a2c38", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8c8e9a6bb656fc50b9a166ba452d252fe05a2c38", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8c8e9a6bb656fc50b9a166ba452d252fe05a2c38"}], "stats": {"total": 59, "additions": 50, "deletions": 9}, "files": [{"sha": "1fcca776759e51cc623faeb06dd1756e0cc89731", "filename": "libbacktrace/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/47c699f52a0a226abc93e7e5ecf78569cc4291fe/libbacktrace%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/47c699f52a0a226abc93e7e5ecf78569cc4291fe/libbacktrace%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libbacktrace%2FChangeLog?ref=47c699f52a0a226abc93e7e5ecf78569cc4291fe", "patch": "@@ -1,3 +1,10 @@\n+2018-01-19  Tony Reix  <tony.reix@atos.net>\n+\n+\t* xcoff.c (xcoff_incl_compare): New function.\n+\t(xcoff_incl_search): New function.\n+\t(xcoff_process_linenos): Use bsearch to find include file.\n+\t(xcoff_initialize_fileline): Sort include file information.\n+\n 2018-01-16  Ian Lance Taylor  <iant@golang.org>\n \n \t* elf.c (codes) [GENERATE_FIXED_HUFFMAN_TABLE]: Fix size to be"}, {"sha": "1ae001dd1de347e34e8b2c3bf3cd731c77ccc7bf", "filename": "libbacktrace/xcoff.c", "status": "modified", "additions": 43, "deletions": 9, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/47c699f52a0a226abc93e7e5ecf78569cc4291fe/libbacktrace%2Fxcoff.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/47c699f52a0a226abc93e7e5ecf78569cc4291fe/libbacktrace%2Fxcoff.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libbacktrace%2Fxcoff.c?ref=47c699f52a0a226abc93e7e5ecf78569cc4291fe", "patch": "@@ -760,6 +760,40 @@ xcoff_fileline (struct backtrace_state *state, uintptr_t pc,\n   return callback (data, pc, NULL, 0, NULL);\n }\n \n+/* Compare struct xcoff_incl for qsort.  */\n+\n+static int\n+xcoff_incl_compare (const void *v1, const void *v2)\n+{\n+  const struct xcoff_incl *in1 = (const struct xcoff_incl *) v1;\n+  const struct xcoff_incl *in2 = (const struct xcoff_incl *) v2;\n+\n+  if (in1->begin < in2->begin)\n+    return -1;\n+  else if (in1->begin > in2->begin)\n+    return 1;\n+  else\n+    return 0;\n+}\n+\n+/* Find a lnnoptr in an include file.  */\n+\n+static int\n+xcoff_incl_search (const void *vkey, const void *ventry)\n+{\n+  const uintptr_t *key = (const uintptr_t *) vkey;\n+  const struct xcoff_incl *entry = (const struct xcoff_incl *) ventry;\n+  uintptr_t lnno;\n+\n+  lnno = *key;\n+  if (lnno < entry->begin)\n+    return -1;\n+  else if (lnno > entry->end)\n+    return 1;\n+  else\n+    return 0;\n+}\n+\n /* Add a new mapping to the vector of line mappings that we are\n    building.  Returns 1 on success, 0 on failure.  */\n \n@@ -809,7 +843,6 @@ xcoff_process_linenos (struct backtrace_state *state, uintptr_t base_address,\n   uintptr_t pc;\n   uint32_t lnno;\n   int begincl;\n-  size_t i;\n \n   aux = (const b_xcoff_auxent *) (fsym + 1);\n   lnnoptr = aux->x_fcn.x_lnnoptr;\n@@ -839,15 +872,13 @@ xcoff_process_linenos (struct backtrace_state *state, uintptr_t base_address,\n       /* If part of a function other than the beginning comes from an\n \t include file, the line numbers are absolute, rather than\n \t relative to the beginning of the function.  */\n-      for (i = 0; i < vec->count; ++i)\n-\t{\n-\t  incl = (struct xcoff_incl *) vec->vec.base + i;\n-\t  if (incl->begin <= lnnoptr && lnnoptr <= incl->end)\n-\t    break;\n-\t}\n+      incl = (struct xcoff_incl *) bsearch (&lnnoptr, vec->vec.base,\n+\t\t\t\t\t    vec->count,\n+\t\t\t\t\t    sizeof (struct xcoff_incl),\n+\t\t\t\t\t    xcoff_incl_search);\n       if (begincl == -1)\n-\tbegincl = (i < vec->count);\n-      if (i < vec->count)\n+\tbegincl = incl != NULL;\n+      if (incl != NULL)\n \t{\n \t  filename = incl->filename;\n \t  if (begincl == 1)\n@@ -935,6 +966,9 @@ xcoff_initialize_fileline (struct backtrace_state *state,\n       i += asym->n_numaux;\n     }\n \n+  backtrace_qsort (vec.vec.base, vec.count,\n+\t\t   sizeof (struct xcoff_incl), xcoff_incl_compare);\n+\n   filename = NULL;\n   fsym = NULL;\n   for (i = 0; i < nsyms; ++i)"}]}