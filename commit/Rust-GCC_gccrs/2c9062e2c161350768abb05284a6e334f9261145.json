{"sha": "2c9062e2c161350768abb05284a6e334f9261145", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmM5MDYyZTJjMTYxMzUwNzY4YWJiMDUyODRhNmUzMzRmOTI2MTE0NQ==", "commit": {"author": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2009-10-27T17:03:47Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2009-10-27T17:03:47Z"}, "message": "ChangeLog: Fix formatting.\n\n\t* ChangeLog: Fix formatting.\n\t* testsuite/ChangeLog: Ditto.\n\nFrom-SVN: r153604", "tree": {"sha": "7af803a7e40e6fa88a2d27aaba64902cc676c137", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7af803a7e40e6fa88a2d27aaba64902cc676c137"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2c9062e2c161350768abb05284a6e334f9261145", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2c9062e2c161350768abb05284a6e334f9261145", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2c9062e2c161350768abb05284a6e334f9261145", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2c9062e2c161350768abb05284a6e334f9261145/comments", "author": null, "committer": null, "parents": [{"sha": "5c245b956cc455159f9448456eb12b1b7e5b1a88", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5c245b956cc455159f9448456eb12b1b7e5b1a88", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5c245b956cc455159f9448456eb12b1b7e5b1a88"}], "stats": {"total": 69, "additions": 36, "deletions": 33}, "files": [{"sha": "5a0bdb23bddf2a456bd82253cb94cadd31c516f1", "filename": "gcc/ChangeLog", "status": "modified", "additions": 34, "deletions": 31, "changes": 65, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c9062e2c161350768abb05284a6e334f9261145/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c9062e2c161350768abb05284a6e334f9261145/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2c9062e2c161350768abb05284a6e334f9261145", "patch": "@@ -41,16 +41,17 @@\n 2009-10-27  Wei Guozhi  <carrot@google.com>\n \n \tPR target/41705\n-\t* target.h (have_conditional_execution): Add a new target hook function.\n+\t* target.h (have_conditional_execution): Add a new target hook\n+\tfunction.\n \t* target-def.h (TARGET_HAVE_CONDITIONAL_EXECUTION): Likewise.\n \t* targhooks.h (default_have_conditional_execution): Likewise.\n \t* targhooks.c (default_have_conditional_execution): Likewise.\n \t* doc/tm.texi (TARGET_HAVE_CONDITIONAL_EXECUTION): Document it.\n \t* config/arm/arm.c (TARGET_HAVE_CONDITIONAL_EXECUTION): Define it.\n \t(arm_have_conditional_execution): New function.\n \t* ifcvt.c (noce_process_if_block, find_if_header,\n-\tcond_exec_find_if_block, dead_or_predicable): Change the usage of macro\n-\tHAVE_conditional_execution to a target hook call.\n+\tcond_exec_find_if_block, dead_or_predicable): Change the usage of\n+\tmacro HAVE_conditional_execution to a target hook call.\n \t* recog.c (peephole2_optimize): Likewise.\n \t* sched-rgn.c (add_branch_dependences): Likewise.\n \t* final.c (asm_insn_count, final_scan_insn): Likewise.\n@@ -223,7 +224,7 @@\n \t(expand_expr_addr_expr): Likewise.\n \t* tree-vect-data-refs.c (vect_create_data_ref_ptr): Likewise.\n \t* cfgexpand.c (expand_debug_expr): Likewise.\n-\t\n+\n \t* auto-inc-dec.c: Include \"target.h\".\n \t(try_merge): Use appropriate address mode instead of Pmode.\n \t(find_inc): Likewise.\n@@ -266,7 +267,7 @@\n \t(multiplier_allowed_in_address_p): Likewise.\n \t(get_address_cost): Likewise.\n \t* varasm.c (make_decl_rtl): Likewise.\n-\t\n+\n \t* expr.c (expand_assignment): Always convert offsets to appropriate\n \taddress mode.\n \t(store_expr): Likewise.\n@@ -277,7 +278,7 @@\n \t* reload.c (form_sum): Add MODE argument, use it instead of Pmode.\n \tUpdate recursive calls.\n \t(subst_indexed_address): Update calls to form_sum.\n-\t\n+\n \t* tree-flow.h (addr_for_mem_ref): Add ADDRSPACE argument.\n \t* tree-ssa-address.c: Include \"target.h\".\n \t(templates): Replace by ...\n@@ -288,7 +289,7 @@\n \tinstead of global cache.  Update call to gen_addr_rtx.\n \t(valid_mem_ref_p): Update call to addr_for_mem_ref.\n \t* expr.c (expand_expr_real_1): Update call to addr_for_mem_ref.\n-\t\n+\n \t* rtl.h (convert_memory_address_addr_space): Add prototype.\n \t(convert_memory_address): Define as macro.\n \t* explow.c (convert_memory_address): Rename to ...\n@@ -696,7 +697,7 @@\n \t(m32c_function_value): Make static, add new 'outgoing' argument.\n \t(m32c_libcall_value): Make static, add new 'fun' argument.\n \t(TARGET_FUNCTION_VALUE, TARGET_LIBCALL_VALUE): Declare.\n-\t* config/m32c/m32c.h: (FUNCTION_VALUE, LIBCALL_VALUE): Remove.\n+\t* config/m32c/m32c.h (FUNCTION_VALUE, LIBCALL_VALUE): Remove.\n \t(FUNCTION_VALUE_REGNO_P): Redefine, use m32c_function_value_regno_p.\n \t* config/m32c/m32c-protos.h (m32c_function_value_regno_p): Declare.\n \t(m32c_function_value, m32c_libcall_value): Delete declaration.\n@@ -730,17 +731,17 @@\n \t* lto-streamer-in.c (lto_input_location): Likewise.\n \n 2009-10-22  Razya Ladelsky  <razya@il.ibm.com>\n-\t\n-\t* cfgloopmanip.c  (duplicate_subloops): Export. \n+\n+\t* cfgloopmanip.c (duplicate_subloops): Export.\n \t* tree-parloops.c (loop_parallel_p): Dump if loop is innermost.\n-\t(transform_to_exit_first_loop): Duplicate bbs starting from \n+\t(transform_to_exit_first_loop): Duplicate bbs starting from\n \theader up to loop->latch instead of exit->src.\n \tInitialize control variable to the correct number of iterations.\n \t(gather_scalar_reductions): Do not register double reductions.\n-\t(parallelize_loops): Dump which loop is tested. \n-\tIndicate whether the parallelized loop is inner or not. \n+\t(parallelize_loops): Dump which loop is tested.\n+\tIndicate whether the parallelized loop is inner or not.\n \tRemove the innermost-loop requirement.\n-\t* cfgloop.h (duplicate_subloops): Export. \n+\t* cfgloop.h (duplicate_subloops): Export.\n \t* tree-cfg.c (add_phi_args_after_redirect): New function.\n \t(gimple_duplicate_sese_tail): Remove the no-subloops constraint.\n \tCall duplicate_subloops.\n@@ -754,8 +755,8 @@\n \tflag_ltrans check.\n \t* ipa-inline.c (cgraph_mark_inline_edge,\n \tcgraph_decide_inlining_of_small_function,\n-\tcgraph_decide_inlining, inline_read_summary): Disable indirect inlining\n-\tfor WPA for time being.\n+\tcgraph_decide_inlining, inline_read_summary): Disable indirect\n+\tinlining for WPA for time being.\n \n \tPR tree-optimize/40556\n \t* ipa-inline.c (cgraph_early_inlining): Fix iterations condition.\n@@ -777,8 +778,8 @@\n \t(ipa_reference_read_summary): Stream in calls_read_all properly.\n \t(read_write_all_from_decl): New function.\n \t(propagate): Handle OVERWRITABLE nodes and external calls here.\n-\t* ipa-pre-const.c (check_call): In IPA mode handle indirect calls\n-\tonly.\n+\t* ipa-pre-const.c (check_call): In IPA mode handle indirect\n+\tcalls only.\n \t(analyze_function): Do not check visibility here.\n \t(add_new_function): We summary OVERWRITABLE too.\n \t(generate_summary): Stream OVERWRITABLE nodes too.\n@@ -792,10 +793,11 @@\n \t(ipcp_init_stage): Analyze all functions for whopr/lto.\n \t(ipcp_propagate_stage): Skip external calls.\n \t(ipcp_iterate_stage): Call ipa_update_after_lto_read if needed.\n-\t* ipa-reference.c (write_node_summary_p): Fix thinko about availability.\n+\t* ipa-reference.c (write_node_summary_p): Fix thinko about\n+\tavailability.\n \t* cgraphunit.c (ipa_passes): When in lto, ne er produce new summaries;\n-\twhen in ltrans, skip executing of ipa passes since everything should've\n-\tbeen done.\n+\twhen in ltrans, skip executing of ipa passes since everything\n+\tshould've been done.\n \t* ipa-inline.c (cgraph_decide_inlining): Remove FIXMEs.\n \t(inline_generate_summary): Likewise.\n \t(inline_read_summary): New function.\n@@ -819,9 +821,11 @@\n \t(ipa_edge_args_vector): Move into GGC.\n \t(ipa_check_create_edge_args): Update.\n \t(ipa_update_after_lto_read): New.\n-\t* passes.c (ipa_write_summaries_1): When in wpa, do not write summaries.\n+\t* passes.c (ipa_write_summaries_1): When in wpa, do not write\n+\tsummaries.\n \t(ipa_read_summaries): When in ltrans, so not read summaries.\n-\t* lto-streamer.c (lto_get_section_name): Add LTO_section_jump_functions.\n+\t* lto-streamer.c (lto_get_section_name): Add\n+\tLTO_section_jump_functions.\n \t* lto-streamer.h (LTO_section_jump_functions): New section.\n \t(produce_asm): Declare.\n \t* lto-cgraph.c (output_cgraph): Output edges in reverse order.\n@@ -844,7 +848,7 @@\n \t* config/ia64/ia64.c (ia64_override_options): Set\n \tflag_ira_loop_pressure up for -O3.\n \t* config/rs6000/rs6000.c (rs6000_override_options): Ditto.\n-\t\n+\n 2009-10-21  Sebastian Pop  <sebastian.pop@amd.com>\n \n \tPR tree-optimization/41497\n@@ -982,9 +986,8 @@\n 2009-10-20  Wolfgang Gellerich  <gellerich@de.ibm.com>\n \n \t* config/s390/s390.md: Added agen condition to operand\n-\tforwarding bypasses. \n-\tAdded bypass for early address generation use of int results.\n-\tUpdated comments.\n+\tforwarding bypasses.  Added bypass for early address generation\n+\tuse of int results.  Updated comments.\n \n 2009-10-20  Stefan D\u00f6singer  <stefan@codeweavers.com>\n \n@@ -1242,10 +1245,10 @@\n \tPR target/23983\n \t* config/rs6000/predicates.md: Update copyright year.\n \t* config/rs6000/altivec.md: Ditto.\n-\t\n+\n \t* config/rs6000/t-rs6000 (TM_H): Add rs6000-builtin.def.\n \t(MD_INCLUDES): Add a2.md.\n-\t\n+\n \t* config/rs6000/rs6000.c (rs6000_builtin_decls): Change\n \tRS6000_BUILTIN_COUNT to MAX_RS6000_BUILTINS.\n \t(builtin_classify): New static vector to classify various builtins\n@@ -1325,7 +1328,7 @@\n \t* config/arm/neon.md (neon_vshll_n<mode>): Checking Bounds fixed.\n \n 2009-10-14  DJ Delorie  <dj@redhat.com>\n-\t\n+\n \t* config/h8300/h8300.c (F): New.\n \t(Fpa): New.\n \t(h8300_emit_stack_adjustment): Call them.\n@@ -1418,7 +1421,7 @@\n \t* doc/invoke.texi (-fira-loop-pressure, ira-loop-reserved-regs):\n \tDescribe.\n \t* doc/tm.texi (STACK_REG_COVER_CLASS): Describe.\n-\t\n+\n 2009-10-14  Richard Guenther  <rguenther@suse.de>\n \n \t* lto-symtab.c (lto_symtab_compatible): Fold in ..."}, {"sha": "819cb5d894db296afdbe60a8c31df26f8ed752b7", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c9062e2c161350768abb05284a6e334f9261145/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c9062e2c161350768abb05284a6e334f9261145/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=2c9062e2c161350768abb05284a6e334f9261145", "patch": "@@ -123,7 +123,7 @@\n \t* gcc.target/rx/i272091.c: New test file.\n \t* gcc.target/rx/packed-struct.c: New test file.\n \t* gcc.target/rx/rx.exp: New file: Drives RX tests.\n-\t\n+\n 2009-10-26  Andrew Pinski  <pinskia@gcc.gnu.org>\n \n \t* gcc.dg/lto/20091014-1_0.c: Replace -shared with -r -nostlib.\n@@ -711,7 +711,7 @@\n \tPR libgfortran/38439\n \t* gfortran.dg/fmt_error_9.f: New test.\n \t* gfortran.dg/fmt_error_10.f: New test.\n-\t\n+\n 2009-10-11  Paul Thomas  <pault@gcc.gnu.org>\n \n \tPR fortran/41583"}]}