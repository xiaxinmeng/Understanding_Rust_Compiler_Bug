{"sha": "9b9e7e8a7452038b432d71e3f99be5874be75c4b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWI5ZTdlOGE3NDUyMDM4YjQzMmQ3MWUzZjk5YmU1ODc0YmU3NWM0Yg==", "commit": {"author": {"name": "Olivier Hainque", "email": "hainque@adacore.com", "date": "2015-02-20T14:23:05Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2015-02-20T14:23:05Z"}, "message": "g-allein.ads (vec_vspltw): Remove.\n\n2015-02-20  Olivier Hainque  <hainque@adacore.com>\n\n\t* g-allein.ads (vec_vspltw): Remove.\n\t* g-alveop.ad?: Replace vec_vspltw renamings by proper Inline_Always\n\twrappers with Intrinsic convention.\n\nFrom-SVN: r220864", "tree": {"sha": "7deffacf4ac2e6d47e90a6149623850082a190d7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7deffacf4ac2e6d47e90a6149623850082a190d7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9b9e7e8a7452038b432d71e3f99be5874be75c4b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9b9e7e8a7452038b432d71e3f99be5874be75c4b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9b9e7e8a7452038b432d71e3f99be5874be75c4b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9b9e7e8a7452038b432d71e3f99be5874be75c4b/comments", "author": {"login": "hainque", "id": 18735142, "node_id": "MDQ6VXNlcjE4NzM1MTQy", "avatar_url": "https://avatars.githubusercontent.com/u/18735142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hainque", "html_url": "https://github.com/hainque", "followers_url": "https://api.github.com/users/hainque/followers", "following_url": "https://api.github.com/users/hainque/following{/other_user}", "gists_url": "https://api.github.com/users/hainque/gists{/gist_id}", "starred_url": "https://api.github.com/users/hainque/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hainque/subscriptions", "organizations_url": "https://api.github.com/users/hainque/orgs", "repos_url": "https://api.github.com/users/hainque/repos", "events_url": "https://api.github.com/users/hainque/events{/privacy}", "received_events_url": "https://api.github.com/users/hainque/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "389b90826bafbb5d92d49ce03e0aa4672c649cc8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/389b90826bafbb5d92d49ce03e0aa4672c649cc8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/389b90826bafbb5d92d49ce03e0aa4672c649cc8"}], "stats": {"total": 162, "additions": 80, "deletions": 82}, "files": [{"sha": "393f50dc5d5de4606d59d47003c873fd452292dc", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b9e7e8a7452038b432d71e3f99be5874be75c4b/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b9e7e8a7452038b432d71e3f99be5874be75c4b/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=9b9e7e8a7452038b432d71e3f99be5874be75c4b", "patch": "@@ -1,3 +1,9 @@\n+2015-02-20  Olivier Hainque  <hainque@adacore.com>\n+\n+\t* g-allein.ads (vec_vspltw): Remove.\n+\t* g-alveop.ad?: Replace vec_vspltw renamings by proper Inline_Always\n+\twrappers with Intrinsic convention.\n+\n 2015-02-20  Olivier Hainque  <hainque@adacore.com>\n \n \t* g-allein.ads (vec_dstt): Remove."}, {"sha": "877d5e46853a115ea48e1c51d7794feeb2ff9e61", "filename": "gcc/ada/g-allein.ads", "status": "modified", "additions": 0, "deletions": 60, "changes": 60, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b9e7e8a7452038b432d71e3f99be5874be75c4b/gcc%2Fada%2Fg-allein.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b9e7e8a7452038b432d71e3f99be5874be75c4b/gcc%2Fada%2Fg-allein.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-allein.ads?ref=9b9e7e8a7452038b432d71e3f99be5874be75c4b", "patch": "@@ -227,66 +227,6 @@ package GNAT.Altivec.Low_Level_Interface is\n    pragma Import\n      (LL_Altivec, vec_splat_vbi_cint_r_vbi, \"__builtin_altivec_vspltw\");\n \n-   -- vec_vspltw --\n-\n-   function vec_vspltw_vf_cint_r_vf\n-     (A : vector_float;\n-      B : c_int) return vector_float;\n-\n-   pragma Import\n-     (LL_Altivec, vec_vspltw_vf_cint_r_vf, \"__builtin_altivec_vspltw\");\n-\n-   function vec_vspltw_vsi_cint_r_vsi\n-     (A : vector_signed_int;\n-      B : c_int) return vector_signed_int;\n-\n-   pragma Import\n-     (LL_Altivec, vec_vspltw_vsi_cint_r_vsi, \"__builtin_altivec_vspltw\");\n-\n-   function vec_vspltw_vui_cint_r_vui\n-     (A : vector_unsigned_int;\n-      B : c_int) return vector_unsigned_int;\n-\n-   pragma Import\n-     (LL_Altivec, vec_vspltw_vui_cint_r_vui, \"__builtin_altivec_vspltw\");\n-\n-   function vec_vspltw_vbi_cint_r_vbi\n-     (A : vector_bool_int;\n-      B : c_int) return vector_bool_int;\n-\n-   pragma Import\n-     (LL_Altivec, vec_vspltw_vbi_cint_r_vbi, \"__builtin_altivec_vspltw\");\n-\n-   -- vec_vsplth --\n-\n-   function vec_vsplth_vbs_cint_r_vbs\n-     (A : vector_bool_short;\n-      B : c_int) return vector_bool_short;\n-\n-   pragma Import\n-     (LL_Altivec, vec_vsplth_vbs_cint_r_vbs, \"__builtin_altivec_vsplth\");\n-\n-   function vec_vsplth_vss_cint_r_vss\n-     (A : vector_signed_short;\n-      B : c_int) return vector_signed_short;\n-\n-   pragma Import\n-     (LL_Altivec, vec_vsplth_vss_cint_r_vss, \"__builtin_altivec_vsplth\");\n-\n-   function vec_vsplth_vus_cint_r_vus\n-     (A : vector_unsigned_short;\n-      B : c_int) return vector_unsigned_short;\n-\n-   pragma Import\n-     (LL_Altivec, vec_vsplth_vus_cint_r_vus, \"__builtin_altivec_vsplth\");\n-\n-   function vec_vsplth_vx_cint_r_vx\n-     (A : vector_pixel;\n-      B : c_int) return vector_pixel;\n-\n-   pragma Import\n-     (LL_Altivec, vec_vsplth_vx_cint_r_vx, \"__builtin_altivec_vsplth\");\n-\n    -- vec_vspltb --\n \n    function vec_vspltb_vsc_cint_r_vsc"}, {"sha": "1d1b56d3cedb88face84e46737229ef90c85f291", "filename": "gcc/ada/g-alveop.adb", "status": "modified", "additions": 52, "deletions": 0, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b9e7e8a7452038b432d71e3f99be5874be75c4b/gcc%2Fada%2Fg-alveop.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b9e7e8a7452038b432d71e3f99be5874be75c4b/gcc%2Fada%2Fg-alveop.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-alveop.adb?ref=9b9e7e8a7452038b432d71e3f99be5874be75c4b", "patch": "@@ -8221,6 +8221,58 @@ package body GNAT.Altivec.Vector_Operations is\n       dststt (To_PTR (A), B, C);\n    end vec_dststt;\n \n+   -- vec_vspltw --\n+\n+   function vec_vspltw\n+     (A : vector_float;\n+      B : c_int) return vector_float\n+   is\n+   begin\n+      return To_LL_VF (vspltw (To_LL_VSI (A), B));\n+   end vec_vspltw;\n+\n+   function vec_vspltw\n+     (A : vector_unsigned_int;\n+      B : c_int) return vector_unsigned_int\n+   is\n+   begin\n+      return To_LL_VUI (vspltw (To_LL_VSI (A), B));\n+   end vec_vspltw;\n+\n+   function vec_vspltw\n+     (A : vector_bool_int;\n+      B : c_int) return vector_bool_int\n+   is\n+   begin\n+      return To_LL_VBI (vspltw (To_LL_VSI (A), B));\n+   end vec_vspltw;\n+\n+   -- vec_vsplth --\n+\n+   function vec_vsplth\n+     (A : vector_bool_short;\n+      B : c_int) return vector_bool_short\n+   is\n+   begin\n+      return To_LL_VBS (vsplth (To_LL_VSS (A), B));\n+   end vec_vsplth;\n+\n+   function vec_vsplth\n+     (A : vector_unsigned_short;\n+      B : c_int) return vector_unsigned_short\n+   is\n+   begin\n+      return To_LL_VUS (vsplth (To_LL_VSS (A), B));\n+   end vec_vsplth;\n+\n+   function vec_vsplth\n+     (A : vector_pixel;\n+      B : c_int) return vector_pixel\n+   is\n+   begin\n+      return To_LL_VP (vsplth (To_LL_VSS (A), B));\n+   end vec_vsplth;\n+\n    -----------------------------------\n    -- Bodies for Altivec predicates --\n    -----------------------------------"}, {"sha": "a4c8a4291afb4e38ebffa905eed935e4f57c998d", "filename": "gcc/ada/g-alveop.ads", "status": "modified", "additions": 22, "deletions": 22, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b9e7e8a7452038b432d71e3f99be5874be75c4b/gcc%2Fada%2Fg-alveop.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b9e7e8a7452038b432d71e3f99be5874be75c4b/gcc%2Fada%2Fg-alveop.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-alveop.ads?ref=9b9e7e8a7452038b432d71e3f99be5874be75c4b", "patch": "@@ -3277,45 +3277,45 @@ package GNAT.Altivec.Vector_Operations is\n \n    function vec_vspltw\n      (A : vector_float;\n-      B : c_int) return vector_float\n-   renames Low_Level_Interface.vec_vspltw_vf_cint_r_vf;\n-\n-   function vec_vspltw\n-     (A : vector_signed_int;\n-      B : c_int) return vector_signed_int\n-   renames Low_Level_Interface.vec_vspltw_vsi_cint_r_vsi;\n+      B : c_int) return vector_float;\n \n    function vec_vspltw\n      (A : vector_unsigned_int;\n-      B : c_int) return vector_unsigned_int\n-   renames Low_Level_Interface.vec_vspltw_vui_cint_r_vui;\n+      B : c_int) return vector_unsigned_int;\n \n    function vec_vspltw\n      (A : vector_bool_int;\n-      B : c_int) return vector_bool_int\n-   renames Low_Level_Interface.vec_vspltw_vbi_cint_r_vbi;\n+      B : c_int) return vector_bool_int;\n+\n+   pragma Inline_Always (vec_vspltw);\n+   pragma Convention (Intrinsic, vec_vspltw);\n+\n+   function vec_vspltw\n+     (A : vector_signed_int;\n+      B : c_int) return vector_signed_int\n+   renames Low_Level_Vectors.vspltw;\n \n    -- vec_vsplth --\n \n    function vec_vsplth\n      (A : vector_bool_short;\n-      B : c_int) return vector_bool_short\n-   renames Low_Level_Interface.vec_vsplth_vbs_cint_r_vbs;\n-\n-   function vec_vsplth\n-     (A : vector_signed_short;\n-      B : c_int) return vector_signed_short\n-   renames Low_Level_Interface.vec_vsplth_vss_cint_r_vss;\n+      B : c_int) return vector_bool_short;\n \n    function vec_vsplth\n      (A : vector_unsigned_short;\n-      B : c_int) return vector_unsigned_short\n-   renames Low_Level_Interface.vec_vsplth_vus_cint_r_vus;\n+      B : c_int) return vector_unsigned_short;\n \n    function vec_vsplth\n      (A : vector_pixel;\n-      B : c_int) return vector_pixel\n-   renames Low_Level_Interface.vec_vsplth_vx_cint_r_vx;\n+      B : c_int) return vector_pixel;\n+\n+   pragma Inline_Always (vec_vsplth);\n+   pragma Convention (Intrinsic, vec_vsplth);\n+\n+   function vec_vsplth\n+     (A : vector_signed_short;\n+      B : c_int) return vector_signed_short\n+   renames Low_Level_Vectors.vsplth;\n \n    -- vec_vspltb --\n "}]}