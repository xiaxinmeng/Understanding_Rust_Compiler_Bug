{"sha": "bab1de0adbbf48be61d056c7fc62a719798b4781", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmFiMWRlMGFkYmJmNDhiZTYxZDA1NmM3ZmM2MmE3MTk3OThiNDc4MQ==", "commit": {"author": {"name": "Paolo Bonzini", "email": "bonzini@gnu.org", "date": "2006-08-06T12:06:31Z"}, "committer": {"name": "Paolo Bonzini", "email": "bonzini@gcc.gnu.org", "date": "2006-08-06T12:06:31Z"}, "message": "re PR debug/26827 (\"GNAT BUG DETECTED\" on compile GPS 1.3.1/gtkada)\n\n2006-08-06  Paolo Bonzini  <bonzini@gnu.org>\n\n\tPR target/26827\n\t* config/i386/i386.md: Add peephole2 to avoid \"fld %st\"\n\tinstructions.\n\n2006-08-06  Paolo Bonzini  <bonzini@gnu.org>\n\n\tPR target/26827\n\t* gcc.target/i386/pr27827.c: New testcase.\n\nFrom-SVN: r115969", "tree": {"sha": "49aacf6d95098aca0b4fe222f21878d54978d9c0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/49aacf6d95098aca0b4fe222f21878d54978d9c0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bab1de0adbbf48be61d056c7fc62a719798b4781", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bab1de0adbbf48be61d056c7fc62a719798b4781", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bab1de0adbbf48be61d056c7fc62a719798b4781", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bab1de0adbbf48be61d056c7fc62a719798b4781/comments", "author": {"login": "bonzini", "id": 42082, "node_id": "MDQ6VXNlcjQyMDgy", "avatar_url": "https://avatars.githubusercontent.com/u/42082?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bonzini", "html_url": "https://github.com/bonzini", "followers_url": "https://api.github.com/users/bonzini/followers", "following_url": "https://api.github.com/users/bonzini/following{/other_user}", "gists_url": "https://api.github.com/users/bonzini/gists{/gist_id}", "starred_url": "https://api.github.com/users/bonzini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bonzini/subscriptions", "organizations_url": "https://api.github.com/users/bonzini/orgs", "repos_url": "https://api.github.com/users/bonzini/repos", "events_url": "https://api.github.com/users/bonzini/events{/privacy}", "received_events_url": "https://api.github.com/users/bonzini/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "884b74f0f460fca76b373c218a532e38b1593331", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/884b74f0f460fca76b373c218a532e38b1593331", "html_url": "https://github.com/Rust-GCC/gccrs/commit/884b74f0f460fca76b373c218a532e38b1593331"}], "stats": {"total": 50, "additions": 50, "deletions": 0}, "files": [{"sha": "2f0a1ec0e059d207d1455f2e74daded5f64154f6", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bab1de0adbbf48be61d056c7fc62a719798b4781/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bab1de0adbbf48be61d056c7fc62a719798b4781/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=bab1de0adbbf48be61d056c7fc62a719798b4781", "patch": "@@ -1,3 +1,10 @@\n+2006-08-06  Paolo Bonzini  <bonzini@gnu.org>\n+\n+\tPR target/27827\n+\n+\t* conffig/i386/i386.md: Add peephole2 to avoid \"fld %st\"\n+\tinstructions.\n+\n 2006-08-06  Andreas Schwab  <schwab@suse.de>\n \n \t* config/m68k/m68k.c (m68k_output_function_epilogue): Fix format"}, {"sha": "a608b7416c777ef837e825fb34535f5a83c0f8a8", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bab1de0adbbf48be61d056c7fc62a719798b4781/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bab1de0adbbf48be61d056c7fc62a719798b4781/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=bab1de0adbbf48be61d056c7fc62a719798b4781", "patch": "@@ -18757,6 +18757,32 @@\n   [(set_attr \"type\" \"sseadd\")\n    (set_attr \"mode\" \"DF\")])\n \n+;; Make two stack loads independent:\n+;;   fld aa              fld aa\n+;;   fld %st(0)     ->   fld bb\n+;;   fmul bb             fmul %st(1), %st\n+;;\n+;; Actually we only match the last two instructions for simplicity.\n+(define_peephole2\n+  [(set (match_operand 0 \"fp_register_operand\" \"\")\n+\t(match_operand 1 \"fp_register_operand\" \"\"))\n+   (set (match_dup 0)\n+\t(match_operator 2 \"binary_fp_operator\"\n+\t   [(match_dup 0)\n+\t    (match_operand 3 \"memory_operand\" \"\")]))]\n+  \"REGNO (operands[0]) != REGNO (operands[1])\"\n+  [(set (match_dup 0) (match_dup 3))\n+   (set (match_dup 0) (match_dup 4))]\n+\n+  ;; The % modifier is not operational anymore in peephole2's, so we have to\n+  ;; swap the operands manually in the case of addition and multiplication.\n+  \"if (COMMUTATIVE_ARITH_P (operands[2]))\n+     operands[4] = gen_rtx_fmt_ee (GET_CODE (operands[2]), GET_MODE (operands[2]),\n+\t\t\t\t operands[0], operands[1]);\n+   else\n+     operands[4] = gen_rtx_fmt_ee (GET_CODE (operands[2]), GET_MODE (operands[2]),\n+\t\t\t\t operands[1], operands[0]);\")\n+\n ;; Conditional addition patterns\n (define_expand \"addqicc\"\n   [(match_operand:QI 0 \"register_operand\" \"\")"}, {"sha": "5fef813e612352247939a870c228483402b9170d", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bab1de0adbbf48be61d056c7fc62a719798b4781/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bab1de0adbbf48be61d056c7fc62a719798b4781/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=bab1de0adbbf48be61d056c7fc62a719798b4781", "patch": "@@ -1,3 +1,8 @@\n+2006-08-06  Paolo Bonzini  <bonzini@gnu.org>\n+\n+\tPR target/27827\n+\t* gcc.target/i386/pr27827.c: New testcase.\n+\n 2006-08-06  Paul Thomas  <pault@gcc.gnu.org>\n \n \tPR fortran/28590"}, {"sha": "b3b377ae9d1cbbc052be95c4a822cc98f8d0ed2b", "filename": "gcc/testsuite/gcc.target/i386/pr27827.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bab1de0adbbf48be61d056c7fc62a719798b4781/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr27827.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bab1de0adbbf48be61d056c7fc62a719798b4781/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr27827.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr27827.c?ref=bab1de0adbbf48be61d056c7fc62a719798b4781", "patch": "@@ -0,0 +1,12 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2\" } */\n+\n+double a, b;\n+double f(double c)\n+{\n+  double x = a * b;\n+  return x + c * a;\n+}\n+\n+/* { dg-final { scan-assembler-not \"fld\\[ \\t\\]*%st\" } } */\n+/* { dg-final { scan-assembler \"fmul\\[ \\t\\]*%st\" } } */"}]}