{"sha": "8b32b6842fd6808bd8a03afdfd64e4e76d1f42b6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGIzMmI2ODQyZmQ2ODA4YmQ4YTAzYWZkZmQ2NGU0ZTc2ZDFmNDJiNg==", "commit": {"author": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1995-11-30T20:47:02Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1995-11-30T20:47:02Z"}, "message": "(ASM_SPEC, LINK_SPEC): Pass on -mrelax.\n\n(RELAX_BIT, TARGET_RELAX): New macros.\n(TARGET_SWITCHES): Add -mrelax.\n\nFrom-SVN: r10650", "tree": {"sha": "a9befa502d7ce03183fcee236ccd6152298af4e1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a9befa502d7ce03183fcee236ccd6152298af4e1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8b32b6842fd6808bd8a03afdfd64e4e76d1f42b6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8b32b6842fd6808bd8a03afdfd64e4e76d1f42b6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8b32b6842fd6808bd8a03afdfd64e4e76d1f42b6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8b32b6842fd6808bd8a03afdfd64e4e76d1f42b6/comments", "author": null, "committer": null, "parents": [{"sha": "956a5206b05d26a2b9bc52813eeeb1686279caa1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/956a5206b05d26a2b9bc52813eeeb1686279caa1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/956a5206b05d26a2b9bc52813eeeb1686279caa1"}], "stats": {"total": 10, "additions": 8, "deletions": 2}, "files": [{"sha": "59068ba315efa08e0442469e75366310d37be8cc", "filename": "gcc/config/sh/sh.h", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8b32b6842fd6808bd8a03afdfd64e4e76d1f42b6/gcc%2Fconfig%2Fsh%2Fsh.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8b32b6842fd6808bd8a03afdfd64e4e76d1f42b6/gcc%2Fconfig%2Fsh%2Fsh.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh.h?ref=8b32b6842fd6808bd8a03afdfd64e4e76d1f42b6", "patch": "@@ -42,9 +42,9 @@ Boston, MA 02111-1307, USA.  */\n \n #define CPP_PREDEFINES \"-D__sh__ -Acpu(sh) -Amachine(sh)\"\n \n-#define ASM_SPEC  \"%{ml:-little}\"\n+#define ASM_SPEC  \"%{ml:-little} %{mrelax:-relax}\"\n \n-#define LINK_SPEC \"%{ml:-m shl}\"\n+#define LINK_SPEC \"%{ml:-m shl} %{mrelax:-relax}\"\n \n /* We can not debug without a frame pointer.  */\n /* #define CAN_DEBUG_WITHOUT_FP */\n@@ -71,6 +71,7 @@ extern int target_flags;\n #define SH3_BIT\t       \t(1<<10)\n #define SPACE_BIT \t(1<<13)\n #define BIGTABLE_BIT  \t(1<<14)\n+#define RELAX_BIT\t(1<<15)\n #define HITACHI_BIT     (1<<22)\n #define PADSTRUCT_BIT  (1<<28)\n #define LITTLE_ENDIAN_BIT (1<<29)\n@@ -101,6 +102,10 @@ extern int target_flags;\n /* Nonzero to use long jump tables.  */\n #define TARGET_BIGTABLE     (target_flags & BIGTABLE_BIT)\n \n+/* Nonzero to generate pseudo-ops needed by the assembler and linker\n+   to do function call relaxing.  */\n+#define TARGET_RELAX (target_flags & RELAX_BIT)\n+\n /* Nonzero if using Hitachi's calling convention.  */\n #define TARGET_HITACHI \t\t(target_flags & HITACHI_BIT)\n \n@@ -127,6 +132,7 @@ extern int target_flags;\n   {\"isize\", \tISIZE_BIT},\t\t\t\\\n   {\"l\",\t\tLITTLE_ENDIAN_BIT},  \t\t\\\n   {\"padstruct\", PADSTRUCT_BIT},    \t\t\\\n+  {\"relax\",\tRELAX_BIT},\t\t\t\\\n   {\"space\", \tSPACE_BIT},\t\t\t\\\n   {\"\",   \tTARGET_DEFAULT} \t\t\\\n }"}]}