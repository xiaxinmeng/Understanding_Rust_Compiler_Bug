{"sha": "1cd8b853ba9b8c120ba47182845f62bf2fd1788d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWNkOGI4NTNiYTliOGMxMjBiYTQ3MTgyODQ1ZjYyYmYyZmQxNzg4ZA==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo.carlini@oracle.com", "date": "2008-08-28T22:00:46Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2008-08-28T22:00:46Z"}, "message": "gtrh-posix.h: Fix uses of _POSIX_TIMEOUTS per the normal Posix rule that a symbolic constant...\n\n2008-08-28  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\t* gtrh-posix.h: Fix uses of _POSIX_TIMEOUTS per the normal Posix\n\trule that a symbolic constant must be defined and >= 0 for the\n\tcorresponding facility to be present at compile-time.\n\t* gthr-posix.c: Likewise.\n\nFrom-SVN: r139739", "tree": {"sha": "1b4bef67feb9a3af020efb250c9a31004e4230e5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1b4bef67feb9a3af020efb250c9a31004e4230e5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1cd8b853ba9b8c120ba47182845f62bf2fd1788d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1cd8b853ba9b8c120ba47182845f62bf2fd1788d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1cd8b853ba9b8c120ba47182845f62bf2fd1788d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1cd8b853ba9b8c120ba47182845f62bf2fd1788d/comments", "author": null, "committer": null, "parents": [{"sha": "d6d3e623f2fc96c7d4dd9405a2c67167f97dfcec", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d6d3e623f2fc96c7d4dd9405a2c67167f97dfcec", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d6d3e623f2fc96c7d4dd9405a2c67167f97dfcec"}], "stats": {"total": 17, "additions": 17, "deletions": 0}, "files": [{"sha": "7ad57299baa663aebc7a1aef5abb6205d72f0639", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1cd8b853ba9b8c120ba47182845f62bf2fd1788d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1cd8b853ba9b8c120ba47182845f62bf2fd1788d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1cd8b853ba9b8c120ba47182845f62bf2fd1788d", "patch": "@@ -1,3 +1,10 @@\n+2008-08-28  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\t* gtrh-posix.h: Fix uses of _POSIX_TIMEOUTS per the normal Posix\n+\trule that a symbolic constant must be defined and >= 0 for the\n+\tcorresponding facility to be present at compile-time.\n+\t* gthr-posix.c: Likewise.\n+\n 2008-08-28  Adam Nemet  <anemet@caviumnetworks.com>\n \n \t* config/mips/mips.h (ISA_HAS_DMUL3): New macro."}, {"sha": "154fc339416451bcc2c15dbfc8b50ecb3654945d", "filename": "gcc/gthr-posix.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1cd8b853ba9b8c120ba47182845f62bf2fd1788d/gcc%2Fgthr-posix.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1cd8b853ba9b8c120ba47182845f62bf2fd1788d/gcc%2Fgthr-posix.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgthr-posix.c?ref=1cd8b853ba9b8c120ba47182845f62bf2fd1788d", "patch": "@@ -112,12 +112,14 @@ pthread_mutex_trylock (pthread_mutex_t *mutex ATTRIBUTE_UNUSED)\n }\n \n #ifdef _POSIX_TIMEOUTS\n+#if _POSIX_TIMEOUTS >= 0\n int\n pthread_mutex_timedlock (pthread_mutex_t *mutex ATTRIBUTE_UNUSED,\n \t\t\t const struct timespec *abs_timeout ATTRIBUTE_UNUSED)\n {\n   return 0;\n }\n+#endif\n #endif /* _POSIX_TIMEOUTS */\n \n int"}, {"sha": "221833e0089e63777808ca1e70c10ed4ac864014", "filename": "gcc/gthr-posix.h", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1cd8b853ba9b8c120ba47182845f62bf2fd1788d/gcc%2Fgthr-posix.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1cd8b853ba9b8c120ba47182845f62bf2fd1788d/gcc%2Fgthr-posix.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgthr-posix.h?ref=1cd8b853ba9b8c120ba47182845f62bf2fd1788d", "patch": "@@ -104,7 +104,9 @@ __gthrw3(sched_yield)\n __gthrw3(pthread_mutex_lock)\n __gthrw3(pthread_mutex_trylock)\n #ifdef _POSIX_TIMEOUTS\n+#if _POSIX_TIMEOUTS >= 0\n __gthrw3(pthread_mutex_timedlock)\n+#endif\n #endif /* _POSIX_TIMEOUTS */\n __gthrw3(pthread_mutex_unlock)\n __gthrw3(pthread_mutex_init)\n@@ -131,7 +133,9 @@ __gthrw(sched_yield)\n __gthrw(pthread_mutex_lock)\n __gthrw(pthread_mutex_trylock)\n #ifdef _POSIX_TIMEOUTS\n+#if _POSIX_TIMEOUTS >= 0\n __gthrw(pthread_mutex_timedlock)\n+#endif\n #endif /* _POSIX_TIMEOUTS */\n __gthrw(pthread_mutex_unlock)\n __gthrw(pthread_mutex_init)\n@@ -768,6 +772,7 @@ __gthread_mutex_trylock (__gthread_mutex_t *mutex)\n }\n \n #ifdef _POSIX_TIMEOUTS\n+#if _POSIX_TIMEOUTS >= 0\n static inline int\n __gthread_mutex_timedlock (__gthread_mutex_t *mutex,\n \t\t\t   const __gthread_time_t *abs_timeout)\n@@ -778,6 +783,7 @@ __gthread_mutex_timedlock (__gthread_mutex_t *mutex,\n     return 0;\n }\n #endif\n+#endif\n \n static inline int\n __gthread_mutex_unlock (__gthread_mutex_t *mutex)\n@@ -823,13 +829,15 @@ __gthread_recursive_mutex_trylock (__gthread_recursive_mutex_t *mutex)\n }\n \n #ifdef _POSIX_TIMEOUTS\n+#if _POSIX_TIMEOUTS >= 0\n static inline int\n __gthread_recursive_mutex_timedlock (__gthread_recursive_mutex_t *mutex,\n \t\t\t\t     const __gthread_time_t *abs_timeout)\n {\n   return __gthread_mutex_timedlock (mutex, abs_timeout);\n }\n #endif\n+#endif\n \n static inline int\n __gthread_recursive_mutex_unlock (__gthread_recursive_mutex_t *mutex)"}]}