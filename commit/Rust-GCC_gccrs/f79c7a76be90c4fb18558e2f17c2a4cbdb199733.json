{"sha": "f79c7a76be90c4fb18558e2f17c2a4cbdb199733", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Zjc5YzdhNzZiZTkwYzRmYjE4NTU4ZTJmMTdjMmE0Y2JkYjE5OTczMw==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@phydeaux.cygnus.com", "date": "1995-06-28T20:53:02Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-06-28T20:53:02Z"}, "message": "(cplus_expand_expr): Don't mess with temp slots.\n\nFrom-SVN: r10075", "tree": {"sha": "93086be7600dc698189d597e22ab8b14056148f2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/93086be7600dc698189d597e22ab8b14056148f2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f79c7a76be90c4fb18558e2f17c2a4cbdb199733", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f79c7a76be90c4fb18558e2f17c2a4cbdb199733", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f79c7a76be90c4fb18558e2f17c2a4cbdb199733", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f79c7a76be90c4fb18558e2f17c2a4cbdb199733/comments", "author": null, "committer": null, "parents": [{"sha": "f7522313f5043b5ba88724b8bf196592e097c011", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f7522313f5043b5ba88724b8bf196592e097c011", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f7522313f5043b5ba88724b8bf196592e097c011"}], "stats": {"total": 4, "additions": 0, "deletions": 4}, "files": [{"sha": "0c549c34954e33c613da2be0163993cc18e51927", "filename": "gcc/cp/expr.c", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f79c7a76be90c4fb18558e2f17c2a4cbdb199733/gcc%2Fcp%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f79c7a76be90c4fb18558e2f17c2a4cbdb199733/gcc%2Fcp%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fexpr.c?ref=f79c7a76be90c4fb18558e2f17c2a4cbdb199733", "patch": "@@ -132,20 +132,16 @@ cplus_expand_expr (exp, target, tmode, modifier)\n \t  }\n \tif (call_target)\n \t  {\n-\t    preserve_temp_slots (call_target);\n-\n \t    /* Make this a valid memory address now.  The code below assumes\n \t       that it can compare rtx and make assumptions based on the\n \t       result.  The assumptions are true only if the address was\n \t       valid to begin with.  */\n \t    call_target = validize_mem (call_target);\n \t  }\n \n-\tpreserve_temp_slots (DECL_RTL (slot));\n \tcall_exp = build (CALL_EXPR, type, func, args, 0);\n \tTREE_SIDE_EFFECTS (call_exp) = 1;\n \treturn_target = expand_call (call_exp, call_target, ignore);\n-\tfree_temp_slots ();\n \tif (call_target == 0)\n \t  {\n \t    if (pcc_struct_return)"}]}