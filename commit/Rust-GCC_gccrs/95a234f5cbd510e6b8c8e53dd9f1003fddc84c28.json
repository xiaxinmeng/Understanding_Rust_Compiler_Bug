{"sha": "95a234f5cbd510e6b8c8e53dd9f1003fddc84c28", "node_id": "C_kwDOANBUbNoAKDk1YTIzNGY1Y2JkNTEwZTZiOGM4ZTUzZGQ5ZjEwMDNmZGRjODRjMjg", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2022-07-04T14:32:51Z"}, "committer": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2022-07-08T10:52:47Z"}, "message": "lto-dump: Do not print output file\n\nRight now the following is printed:\n\nlto-dump\n\t.file\t\"<artificial>\"\n\t.ident\t\"GCC: (GNU) 13.0.0 20220707 (experimental)\"\n\t.section\t.note.GNU-stack,\"\",@progbits\n\nAfter the patch we print -help and do not emit any assembly output:\n\nlto-dump\nUsage: lto-dump [OPTION]... SUB_COMMAND [OPTION]...\n\nLTO dump tool command line options.\n\n  -list [options]           Dump the symbol list.\n    -demangle               Dump the demangled output.\n    -defined-only           Dump only the defined symbols.\n...\n\ngcc/lto/ChangeLog:\n\n\t* lto-dump.cc (lto_main): Exit in the function\n\tas we don't want any LTO bytecode processing.\n\ngcc/ChangeLog:\n\n\t* toplev.cc (init_asm_output): Do not init asm_out_file.", "tree": {"sha": "478f75b38ccddf0bfd1f46f3bac8d7970912c744", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/478f75b38ccddf0bfd1f46f3bac8d7970912c744"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/95a234f5cbd510e6b8c8e53dd9f1003fddc84c28", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/95a234f5cbd510e6b8c8e53dd9f1003fddc84c28", "html_url": "https://github.com/Rust-GCC/gccrs/commit/95a234f5cbd510e6b8c8e53dd9f1003fddc84c28", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/95a234f5cbd510e6b8c8e53dd9f1003fddc84c28/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f7854e2faf7640230062dec3596e71773ca500ed", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f7854e2faf7640230062dec3596e71773ca500ed", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f7854e2faf7640230062dec3596e71773ca500ed"}], "stats": {"total": 18, "additions": 11, "deletions": 7}, "files": [{"sha": "f3d852df51f5e7fabde40315ead63fc9a6a49c1c", "filename": "gcc/lto/lto-dump.cc", "status": "modified", "additions": 10, "deletions": 6, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/95a234f5cbd510e6b8c8e53dd9f1003fddc84c28/gcc%2Flto%2Flto-dump.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/95a234f5cbd510e6b8c8e53dd9f1003fddc84c28/gcc%2Flto%2Flto-dump.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto%2Flto-dump.cc?ref=95a234f5cbd510e6b8c8e53dd9f1003fddc84c28", "patch": "@@ -316,7 +316,10 @@ lto_main (void)\n {\n   quiet_flag = true;\n   if (flag_lto_dump_tool_help)\n-    dump_tool_help ();\n+    {\n+      dump_tool_help ();\n+      exit (SUCCESS_EXIT_CODE);\n+    }\n \n   /* LTO is called as a front end, even though it is not a front end.\n      Because it is called as a front end, TV_PHASE_PARSING and\n@@ -369,11 +372,12 @@ lto_main (void)\n     {\n       /* Dump specific gimple body of specified function.  */\n       dump_body ();\n-      return;\n     }\n   else if (flag_dump_callgraph)\n-    {\n-      dump_symtab_graphviz ();\n-      return;\n-    }\n+    dump_symtab_graphviz ();\n+  else\n+    dump_tool_help ();\n+\n+  /* Exit right now.  */\n+  exit (SUCCESS_EXIT_CODE);\n }"}, {"sha": "61d234a9ef4084d34da6a54057f293ac83c38e2d", "filename": "gcc/toplev.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/95a234f5cbd510e6b8c8e53dd9f1003fddc84c28/gcc%2Ftoplev.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/95a234f5cbd510e6b8c8e53dd9f1003fddc84c28/gcc%2Ftoplev.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftoplev.cc?ref=95a234f5cbd510e6b8c8e53dd9f1003fddc84c28", "patch": "@@ -721,7 +721,7 @@ init_asm_output (const char *name)\n \t\t     \"cannot open %qs for writing: %m\", asm_file_name);\n     }\n \n-  if (!flag_syntax_only)\n+  if (!flag_syntax_only && !(global_dc->lang_mask & CL_LTODump))\n     {\n       targetm.asm_out.file_start ();\n "}]}