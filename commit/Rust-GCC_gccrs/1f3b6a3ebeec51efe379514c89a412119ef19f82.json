{"sha": "1f3b6a3ebeec51efe379514c89a412119ef19f82", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWYzYjZhM2ViZWVjNTFlZmUzNzk1MTRjODlhNDEyMTE5ZWYxOWY4Mg==", "commit": {"author": {"name": "Jim Wilson", "email": "wilson@cygnus.com", "date": "1998-04-03T12:29:04Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1998-04-03T12:29:04Z"}, "message": "x86 regex.c failure from Jim Meyering.\n\n\t* compile/980329-1.c: New test.\n\nFrom-SVN: r18975", "tree": {"sha": "00c1072ba9558b7edaa7ce2d7b8ee0831078c39d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/00c1072ba9558b7edaa7ce2d7b8ee0831078c39d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1f3b6a3ebeec51efe379514c89a412119ef19f82", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1f3b6a3ebeec51efe379514c89a412119ef19f82", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1f3b6a3ebeec51efe379514c89a412119ef19f82", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1f3b6a3ebeec51efe379514c89a412119ef19f82/comments", "author": null, "committer": null, "parents": [{"sha": "b3e401c25a949e00ea3a77a508d3a33142f139e2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b3e401c25a949e00ea3a77a508d3a33142f139e2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b3e401c25a949e00ea3a77a508d3a33142f139e2"}], "stats": {"total": 75, "additions": 75, "deletions": 0}, "files": [{"sha": "c73d2613fd57eb3bea5f571e119ae6a3185ea430", "filename": "gcc/testsuite/gcc.c-torture/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f3b6a3ebeec51efe379514c89a412119ef19f82/gcc%2Ftestsuite%2Fgcc.c-torture%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f3b6a3ebeec51efe379514c89a412119ef19f82/gcc%2Ftestsuite%2Fgcc.c-torture%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2FChangeLog?ref=1f3b6a3ebeec51efe379514c89a412119ef19f82", "patch": "@@ -1,3 +1,6 @@\n+Fri Apr  3 12:27:49 1998  Jim Wilson  <wilson@cygnus.com>\n+\n+\t* compile/980329-1.c: New test.\n \n Mon Feb 23 15:16:53 1998  Robert Lipe <robertl@dgii.com>\n \tFrom Bruno Haible <haible@ilog.fr>:"}, {"sha": "d11b49b01c711eea7c16424307b40ee364aedb81", "filename": "gcc/testsuite/gcc.c-torture/compile/980329-1.c", "status": "added", "additions": 72, "deletions": 0, "changes": 72, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f3b6a3ebeec51efe379514c89a412119ef19f82/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F980329-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f3b6a3ebeec51efe379514c89a412119ef19f82/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F980329-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F980329-1.c?ref=1f3b6a3ebeec51efe379514c89a412119ef19f82", "patch": "@@ -0,0 +1,72 @@\n+typedef unsigned long int size_t;\n+struct re_pattern_buffer\n+  {\n+    unsigned char *buffer;\n+    unsigned long int used;\n+  };\n+struct re_registers\n+  {\n+    int *start;\n+  };\n+\n+static const char **regstart, **regend;\n+static const char **old_regend;\n+\n+static int\n+re_match_2_internal (struct re_pattern_buffer *bufp,\n+\t\t     struct re_registers *regs)\n+{\n+  unsigned char *p = bufp->buffer;\n+  unsigned char *pend = p + bufp->used;\n+\n+  for (;;)\n+    {\n+      int highest_active_reg = 1;\n+      if (bufp)\n+\t{\n+\t  int i;\n+\t  for (i = 1;; i++)\n+\t    regs->start[i] = 0;\n+\t}\n+\n+      switch ((unsigned int) *p++)\n+\t{\n+\tcase 1:\n+\t  {\n+\t    unsigned char r = *p;\n+\t    if (r)\n+\t      highest_active_reg = r;\n+\t  }\n+\t  if (p + 2 == pend)\n+\t    {\n+\t      char is_a_jump_n = 0;\n+\t      int mcnt = 0;\n+\t      unsigned char *p1;\n+\n+\t      p1 = p + 2;\n+\t      switch (*p1++)\n+\t\t{\n+\t\tcase 2:\n+\t\t  is_a_jump_n = 1;\n+\t\tcase 1:\n+\t\t  do { do { mcnt = *p1; } while (0); p1 += 2; } while (0);\n+\t\t  if (is_a_jump_n)\n+\t\t    p1 = 0;\n+\t\t}\n+\n+\t      if (mcnt && *p1 == 0)\n+\t\t{\n+\t\t  unsigned r;\n+\t\t  for (r = 0; r < (unsigned) *p + (unsigned) *(p + 1); r++)\n+\t\t    {\n+\t\t      if (regend[0] >= regstart[r])\n+\t\t\tregend[r] = old_regend[r];\n+\t\t    }\n+\t\t  do { while (0 < highest_active_reg + 1) { } } while (0);\n+\t\t}\n+\t    }\n+\t}\n+    }\n+\n+  return -1;\n+}"}]}