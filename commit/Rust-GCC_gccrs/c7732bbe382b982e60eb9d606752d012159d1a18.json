{"sha": "c7732bbe382b982e60eb9d606752d012159d1a18", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Yzc3MzJiYmUzODJiOTgyZTYwZWI5ZDYwNjc1MmQwMTIxNTlkMWExOA==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2019-12-12T10:01:46Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2019-12-12T10:01:46Z"}, "message": "[Ada] Mark Ada subprograms and variables referenced from gigi\n\n2019-12-12  Eric Botcazou  <ebotcazou@adacore.com>\n\ngcc/ada/\n\n\t* atree.ads, comperr.ads, debug.ads, einfo.ads, elists.ads,\n\terr_vars.ads, errout.ads, exp_ch11.ads, exp_code.ads,\n\texp_dbug.ads, exp_tss.ads, exp_util.ads, lib.ads, namet.ads,\n\tnlists.ads, opt.ads, repinfo.ads, restrict.ads, scos.ads,\n\tsem_aggr.ads, sem_aux.ads, sem_eval.ads, sem_util.ads,\n\tsinfo.ads, sinput.ads, stringt.ads, targparm.ads, types.ads,\n\turealp.ads warnsw.ads: Add WARNING line(s) in commentary.\n\t* atree.h, elists.h, namet.h, nlists.h, repinfo.h, scos.h,\n\tstringt.h, types.h, uintp.h, urealp.h: Tidy up.\n\t* fe.h: Likewise.  Document WARNING mark.\n\nFrom-SVN: r279278", "tree": {"sha": "b46451b99c25052df3b8ccbd71030bcd9f53c12f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b46451b99c25052df3b8ccbd71030bcd9f53c12f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c7732bbe382b982e60eb9d606752d012159d1a18", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c7732bbe382b982e60eb9d606752d012159d1a18", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c7732bbe382b982e60eb9d606752d012159d1a18", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c7732bbe382b982e60eb9d606752d012159d1a18/comments", "author": null, "committer": null, "parents": [{"sha": "a1449c89b7272739d0ec32ad7ca4c53460337633", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a1449c89b7272739d0ec32ad7ca4c53460337633", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a1449c89b7272739d0ec32ad7ca4c53460337633"}], "stats": {"total": 551, "additions": 352, "deletions": 199}, "files": [{"sha": "4823313b3d0e285d4c1f376b4feb6e8621964fba", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c7732bbe382b982e60eb9d606752d012159d1a18/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c7732bbe382b982e60eb9d606752d012159d1a18/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=c7732bbe382b982e60eb9d606752d012159d1a18", "patch": "@@ -1,3 +1,16 @@\n+2019-12-12  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* atree.ads, comperr.ads, debug.ads, einfo.ads, elists.ads,\n+\terr_vars.ads, errout.ads, exp_ch11.ads, exp_code.ads,\n+\texp_dbug.ads, exp_tss.ads, exp_util.ads, lib.ads, namet.ads,\n+\tnlists.ads, opt.ads, repinfo.ads, restrict.ads, scos.ads,\n+\tsem_aggr.ads, sem_aux.ads, sem_eval.ads, sem_util.ads,\n+\tsinfo.ads, sinput.ads, stringt.ads, targparm.ads, types.ads,\n+\turealp.ads warnsw.ads: Add WARNING line(s) in commentary.\n+\t* atree.h, elists.h, namet.h, nlists.h, repinfo.h, scos.h,\n+\tstringt.h, types.h, uintp.h, urealp.h: Tidy up.\n+\t* fe.h: Likewise.  Document WARNING mark.\n+\n 2019-12-12  Dmitriy Anisimkov  <anisimko@adacore.com>\n \n \t* libgnat/g-comlin.ads (Get_Argument): New routine similar to"}, {"sha": "491cde38b68bbf03eec95295b576c11436f42a74", "filename": "gcc/ada/atree.ads", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c7732bbe382b982e60eb9d606752d012159d1a18/gcc%2Fada%2Fatree.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c7732bbe382b982e60eb9d606752d012159d1a18/gcc%2Fada%2Fatree.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fatree.ads?ref=c7732bbe382b982e60eb9d606752d012159d1a18", "patch": "@@ -309,6 +309,8 @@ package Atree is\n    --  switch -gnatQ is set. Initialized to zero at the start of compilation.\n    --  Initialized for -gnatVa use, see comment above.\n \n+   --  WARNING: There is a matching C declaration of this variable in fe.h\n+\n    Total_Errors_Detected : Nat := 0;\n    --  Number of errors detected so far. Includes count of serious errors and\n    --  non-serious errors, so this value is always greater than or equal to the"}, {"sha": "91875838fda89ab392f446a5598dc743189d849c", "filename": "gcc/ada/atree.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c7732bbe382b982e60eb9d606752d012159d1a18/gcc%2Fada%2Fatree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c7732bbe382b982e60eb9d606752d012159d1a18/gcc%2Fada%2Fatree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fatree.h?ref=c7732bbe382b982e60eb9d606752d012159d1a18", "patch": "@@ -23,9 +23,9 @@\n  *                                                                          *\n  ****************************************************************************/\n \n-/* This is the C header corresponding to the Ada package specification for\n-   Atree. It also contains the implementations of inlined functions from the\n-   package body for Atree.  It was generated manually from atree.ads and\n+/* This is the C header that corresponds to the Ada package specification for\n+   Atree.  It also contains the implementation of inlined functions from the\n+   package body for Atree.  It was created manually from atree.ads and\n    atree.adb and must be kept synchronized with changes in these files.\n \n    Note that only routines for reading the tree are included, since the tree"}, {"sha": "2992e7dbca4069f090c9298d461ee2cda5ca467d", "filename": "gcc/ada/comperr.ads", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c7732bbe382b982e60eb9d606752d012159d1a18/gcc%2Fada%2Fcomperr.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c7732bbe382b982e60eb9d606752d012159d1a18/gcc%2Fada%2Fcomperr.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fcomperr.ads?ref=c7732bbe382b982e60eb9d606752d012159d1a18", "patch": "@@ -50,6 +50,8 @@ package Comperr is\n    --  for a GCC abort and false for a front end exception (with a possible\n    --  message stored in TSD.Current_Excep).\n \n+   --  WARNING: There is a matching C declaration of this subprogram in fe.h\n+\n    procedure Delete_SCIL_Files;\n    --  Delete SCIL files associated with the main unit\n "}, {"sha": "2bbaae66b9683f33af61050fad0462269b546d0f", "filename": "gcc/ada/debug.ads", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c7732bbe382b982e60eb9d606752d012159d1a18/gcc%2Fada%2Fdebug.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c7732bbe382b982e60eb9d606752d012159d1a18/gcc%2Fada%2Fdebug.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fdebug.ads?ref=c7732bbe382b982e60eb9d606752d012159d1a18", "patch": "@@ -48,6 +48,8 @@ package Debug is\n    --  is contained in the body of Debug rather than the spec, so that we don't\n    --  have to recompile the world when a new debug flag is added.\n \n+   --  WARNING: There is a matching C declaration of a few flags in fe.h\n+\n    Debug_Flag_A : Boolean := False;\n    Debug_Flag_B : Boolean := False;\n    Debug_Flag_C : Boolean := False;"}, {"sha": "c178e3ab8fe1020610efdab0733374c8767164d0", "filename": "gcc/ada/einfo.ads", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c7732bbe382b982e60eb9d606752d012159d1a18/gcc%2Fada%2Feinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c7732bbe382b982e60eb9d606752d012159d1a18/gcc%2Fada%2Feinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.ads?ref=c7732bbe382b982e60eb9d606752d012159d1a18", "patch": "@@ -7751,6 +7751,8 @@ package Einfo is\n    -- Attribute Set Procedures --\n    ------------------------------\n \n+   --  WARNING: There is a matching C declaration of a few subprograms in fe.h\n+\n    procedure Set_Abstract_States                 (Id : E; V : L);\n    procedure Set_Accept_Address                  (Id : E; V : L);\n    procedure Set_Access_Disp_Table               (Id : E; V : L);\n@@ -8430,6 +8432,8 @@ package Einfo is\n    --  value returned is the N_Attribute_Definition_Clause node, otherwise\n    --  Empty is returned.\n \n+   --  WARNING: There is a matching C declaration of this subprogram in fe.h\n+\n    function Get_Pragma (E : Entity_Id; Id : Pragma_Id) return Node_Id;\n    --  Searches the Rep_Item chain of entity E, for an instance of a pragma\n    --  with the given pragma Id. If found, the value returned is the N_Pragma\n@@ -8500,6 +8504,8 @@ package Einfo is\n    --  Test if the node N is the name of an entity (i.e. is an identifier,\n    --  expanded name, or an attribute reference that returns an entity).\n \n+   --  WARNING: There is a matching C declaration of this subprogram in fe.h\n+\n    procedure Link_Entities (First : Entity_Id; Second : Entity_Id);\n    --  Link entities First and Second in one entity chain.\n    --"}, {"sha": "8a3b364da59ca9c76d9fe0fa2fa2e583927b331e", "filename": "gcc/ada/elists.ads", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c7732bbe382b982e60eb9d606752d012159d1a18/gcc%2Fada%2Felists.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c7732bbe382b982e60eb9d606752d012159d1a18/gcc%2Fada%2Felists.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Felists.ads?ref=c7732bbe382b982e60eb9d606752d012159d1a18", "patch": "@@ -37,6 +37,9 @@\n --  through the nodes themselves (using the Link field), which is more time\n --  and space efficient, but a node can be only one such list.\n \n+--  WARNING: There is a C version of this package. Any changes to this\n+--  source file must be properly reflected in the C header file elists.h\n+\n with Types;  use Types;\n with System;\n "}, {"sha": "ac6efa24e3cb238344f7f534ad4a06d0952a8e26", "filename": "gcc/ada/elists.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c7732bbe382b982e60eb9d606752d012159d1a18/gcc%2Fada%2Felists.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c7732bbe382b982e60eb9d606752d012159d1a18/gcc%2Fada%2Felists.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Felists.h?ref=c7732bbe382b982e60eb9d606752d012159d1a18", "patch": "@@ -23,9 +23,9 @@\n  *                                                                          *\n  ****************************************************************************/\n \n-/* This is the C header corresponding to the Ada package specification for\n-   Elists. It also contains the implementations of inlined functions from the\n-   package body for Elists.  It was generated manually from elists.ads and\n+/* This is the C header that corresponds to the Ada package specification for\n+   Elists.  It also contains the implementation of inlined functions from the\n+   package body for Elists.  It was created manually from elists.ads and\n    elists.adb and must be kept synchronized with changes in these files.\n \n    Note that only routines for reading the tree are included, since the"}, {"sha": "cc0ffeba22ff4658f1888416cb611df3387a6e68", "filename": "gcc/ada/err_vars.ads", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c7732bbe382b982e60eb9d606752d012159d1a18/gcc%2Fada%2Ferr_vars.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c7732bbe382b982e60eb9d606752d012159d1a18/gcc%2Fada%2Ferr_vars.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ferr_vars.ads?ref=c7732bbe382b982e60eb9d606752d012159d1a18", "patch": "@@ -113,6 +113,8 @@ package Err_Vars is\n    Error_Msg_Uint_2 : Uint;\n    --  Uint values for ^ insertion characters in message\n \n+   --  WARNING: There is a matching C declaration of these variables in fe.h\n+\n    Error_Msg_Sloc : Source_Ptr;\n    --  Source location for # insertion character in message\n "}, {"sha": "dfa6b8671f37c7bd9c0b533277b5f7c03825f848", "filename": "gcc/ada/errout.ads", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c7732bbe382b982e60eb9d606752d012159d1a18/gcc%2Fada%2Ferrout.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c7732bbe382b982e60eb9d606752d012159d1a18/gcc%2Fada%2Ferrout.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ferrout.ads?ref=c7732bbe382b982e60eb9d606752d012159d1a18", "patch": "@@ -734,6 +734,8 @@ package Errout is\n    --  suppressed if the node N already has a message posted, or if it is a\n    --  warning and N is an entity node for which warnings are suppressed.\n \n+   --  WARNING: There is a matching C declaration of this subprogram in fe.h\n+\n    procedure Error_Msg_F (Msg : String; N : Node_Id);\n    --  Similar to Error_Msg_N except that the message is placed on the first\n    --  node of the construct N (First_Node (N)). Note that this procedure uses\n@@ -750,6 +752,8 @@ package Errout is\n    --  will contain a & or } as usual to mark the insertion point. This\n    --  routine can be called from the parser or the analyzer.\n \n+   --  WARNING: There is a matching C declaration of this subprogram in fe.h\n+\n    procedure Error_Msg_FE\n      (Msg : String;\n       N   : Node_Id;\n@@ -948,6 +952,8 @@ package Errout is\n    --  This name is the identifier name as passed, cased according to the\n    --  default identifier casing for the given file.\n \n+   --  WARNING: There is a matching C declaration of this subprogram in fe.h\n+\n    Size_Too_Small_Message : constant String :=\n      \"size for& too small, minimum allowed is ^\";\n    --  This message is explicitly tested in Special_Msg_Delete in the package"}, {"sha": "afc9a40265151edf77094e675934fb293ec34361", "filename": "gcc/ada/exp_ch11.ads", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c7732bbe382b982e60eb9d606752d012159d1a18/gcc%2Fada%2Fexp_ch11.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c7732bbe382b982e60eb9d606752d012159d1a18/gcc%2Fada%2Fexp_ch11.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch11.ads?ref=c7732bbe382b982e60eb9d606752d012159d1a18", "patch": "@@ -70,18 +70,24 @@ package Exp_Ch11 is\n    --  a goto statement. If Local_Raise is defined, its entity is returned,\n    --  if not, Empty is returned (in which case the call is silently skipped).\n \n+   --  WARNING: There is a matching C declaration of this subprogram in fe.h\n+\n    function Get_RT_Exception_Entity (R : RT_Exception_Code) return Entity_Id;\n    --  This function is provided for use by the back end in conjunction with\n    --  generation of Local_Raise calls when an exception raise is converted to\n    --  a goto statement. The argument is the reason code which would be used\n    --  to determine which Rcheck_nn procedure to call. The returned result is\n    --  the exception entity to be passed to Local_Raise.\n \n+   --  WARNING: There is a matching C declaration of this subprogram in fe.h\n+\n    procedure Get_RT_Exception_Name (Code : RT_Exception_Code);\n    --  This procedure is provided for use by the back end to obtain the name of\n    --  the Rcheck procedure for Code. The name is appended to Namet.Name_Buffer\n    --  without the __gnat_rcheck_ prefix.\n \n+   --  WARNING: There is a matching C declaration of this subprogram in fe.h\n+\n    procedure Possible_Local_Raise (N : Node_Id; E : Entity_Id);\n    --  This procedure is called whenever node N might cause the back end\n    --  to generate a local raise for a local Constraint/Program/Storage_Error\n@@ -95,4 +101,6 @@ package Exp_Ch11 is\n    --  Issues warning if No_Exception_Propagation restriction is set. N is the\n    --  node for the handler.\n \n+   --  WARNING: There is a matching C declaration of this subprogram in fe.h\n+\n end Exp_Ch11;"}, {"sha": "f0b0111949acd5070b3a941257906054d74fbd9c", "filename": "gcc/ada/exp_code.ads", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c7732bbe382b982e60eb9d606752d012159d1a18/gcc%2Fada%2Fexp_code.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c7732bbe382b982e60eb9d606752d012159d1a18/gcc%2Fada%2Fexp_code.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_code.ads?ref=c7732bbe382b982e60eb9d606752d012159d1a18", "patch": "@@ -38,6 +38,8 @@ package Exp_Code is\n    --  Note that the implementations of these routines must not attempt\n    --  to expand tables that are frozen on entry to Gigi.\n \n+   --  WARNING: There is a matching C declaration of these subprograms in fe.h\n+\n    function Is_Asm_Volatile (N : Node_Id) return Boolean;\n    --  Given an N_Code_Statement node N, return True if Volatile=True is\n    --  specified, and False if Volatile=False is specified (or set by default)."}, {"sha": "f2e2e6045b231cdb97b3aad4a288e8ea75886ebd", "filename": "gcc/ada/exp_dbug.ads", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c7732bbe382b982e60eb9d606752d012159d1a18/gcc%2Fada%2Fexp_dbug.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c7732bbe382b982e60eb9d606752d012159d1a18/gcc%2Fada%2Fexp_dbug.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_dbug.ads?ref=c7732bbe382b982e60eb9d606752d012159d1a18", "patch": "@@ -441,6 +441,8 @@ package Exp_Dbug is\n    --  generating code, since the necessary information for computing the\n    --  proper external name is not available in this case.\n \n+   --  WARNING: There is a matching C declaration of this subprogram in fe.h\n+\n    -------------------------------------\n    -- Encoding for translation into C --\n    -------------------------------------\n@@ -926,6 +928,8 @@ package Exp_Dbug is\n    --  if we are not generating code, since the necessary information for\n    --  computing the proper encoded name is not available in this case.\n \n+   --  WARNING: There is a matching C declaration of this subprogram in fe.h\n+\n    --------------\n    -- Renaming --\n    --------------\n@@ -1391,6 +1395,8 @@ package Exp_Dbug is\n    --  of the string in Name_Len, and an ASCII.NUL character stored following\n    --  the name.\n \n+   --  WARNING: There is a matching C declaration of this subprogram in fe.h\n+\n    ---------------------------------\n    -- Subtypes of Variant Records --\n    ---------------------------------"}, {"sha": "91c0c6740e762db08a77ccadfdff470b8c5dac05", "filename": "gcc/ada/exp_tss.ads", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c7732bbe382b982e60eb9d606752d012159d1a18/gcc%2Fada%2Fexp_tss.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c7732bbe382b982e60eb9d606752d012159d1a18/gcc%2Fada%2Fexp_tss.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_tss.ads?ref=c7732bbe382b982e60eb9d606752d012159d1a18", "patch": "@@ -150,6 +150,8 @@ package Exp_Tss is\n    function Is_Init_Proc (E : Entity_Id) return Boolean;\n    --  Version for init procs, same as Is_TSS (E, TSS_Init_Proc);\n \n+   --  WARNING: There is a matching C declaration of this subprogram in fe.h\n+\n    function Is_TSS (E : Entity_Id; Nam : TSS_Name_Type) return Boolean;\n    --  Determines if given entity (E) is the name of a TSS identified by Nam\n "}, {"sha": "03008ba01662ab516884a2f30ca943e5c56fff69", "filename": "gcc/ada/exp_util.ads", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c7732bbe382b982e60eb9d606752d012159d1a18/gcc%2Fada%2Fexp_util.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c7732bbe382b982e60eb9d606752d012159d1a18/gcc%2Fada%2Fexp_util.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_util.ads?ref=c7732bbe382b982e60eb9d606752d012159d1a18", "patch": "@@ -599,6 +599,8 @@ package Exp_Util is\n    --  record component containing the tag of Iface if T implements Iface or\n    --  Empty if it does not.\n \n+   --  WARNING: There is a matching C declaration of this subprogram in fe.h\n+\n    function Find_Prim_Op (T : Entity_Id; Name : Name_Id) return Entity_Id;\n    --  Find the first primitive operation of a tagged type T with name Name.\n    --  This function allows the use of a primitive operation which is not\n@@ -784,6 +786,8 @@ package Exp_Util is\n    --  routine is useful for the case of a discriminated type, and testing for\n    --  component overlap would be a pain.\n \n+   --  WARNING: There is a matching C declaration of this subprogram in fe.h\n+\n    function Is_Library_Level_Tagged_Type (Typ : Entity_Id) return Boolean;\n    --  Return True if Typ is a library level tagged type. Currently we use\n    --  this information to build statically allocated dispatch tables."}, {"sha": "0ccd1a01ddd5c5eb3ab45629af5977dedd2fed7a", "filename": "gcc/ada/fe.h", "status": "modified", "additions": 138, "deletions": 123, "changes": 261, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c7732bbe382b982e60eb9d606752d012159d1a18/gcc%2Fada%2Ffe.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c7732bbe382b982e60eb9d606752d012159d1a18/gcc%2Fada%2Ffe.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffe.h?ref=c7732bbe382b982e60eb9d606752d012159d1a18", "patch": "@@ -29,8 +29,14 @@\n  *                                                                          *\n  ****************************************************************************/\n \n-/* This file contains declarations to access front-end functions and variables\n-   used by gigi.\n+/* This is the C header that contains the declarations of Ada subprograms and\n+   variables used by gigi and not declared in other C header files.  It was\n+   created manually from Ada specifications.  The original Ada declarations\n+   in these specifications must be marked with:\n+\n+   \"WARNING: There is a matching C declaration of this <entity_kind> in fe.h\"\n+\n+   where <entity_kind> is either \"subprogram\" or \"variable\".\n \n    WARNING: functions taking String_Pointer parameters must abide by the rule\n    documented alongside the definition of String_Pointer in types.h.  */\n@@ -41,23 +47,21 @@ extern \"C\" {\n \n /* atree: */\n \n-#define Serious_Errors_Detected atree__serious_errors_detected\n+#define Serious_Errors_Detected\t\tatree__serious_errors_detected\n \n-/* comperr: */\n+extern Nat Serious_Errors_Detected;\n \n-#define Compiler_Abort comperr__compiler_abort\n-extern int Compiler_Abort (String_Pointer, String_Pointer, Boolean) ATTRIBUTE_NORETURN;\n+/* comperr: */\n \n-/* csets: */\n+#define Compiler_Abort\t\tcomperr__compiler_abort\n \n-#define Fold_Lower(C) csets__fold_lower[C]\n-#define Fold_Upper(C) csets__fold_upper[C]\n-extern char Fold_Lower[], Fold_Upper[];\n+extern int Compiler_Abort (String_Pointer, String_Pointer, Boolean) ATTRIBUTE_NORETURN;\n \n /* debug: */\n \n #define Debug_Flag_Dot_R\tdebug__debug_flag_dot_r\n #define Debug_Flag_NN\t\tdebug__debug_flag_nn\n+\n extern Boolean Debug_Flag_Dot_R;\n extern Boolean Debug_Flag_NN;\n \n@@ -81,59 +85,58 @@ extern void Set_Normalized_First_Bit\t(Entity_Id, Uint);\n extern void Set_Normalized_Position\t(Entity_Id, Uint);\n extern void Set_RM_Size\t\t\t(Entity_Id, Uint);\n \n-#define Is_Entity_Name einfo__is_entity_name\n+#define Is_Entity_Name\t\teinfo__is_entity_name\n+\n extern Boolean Is_Entity_Name\t\t(Node_Id);\n \n-#define Get_Attribute_Definition_Clause einfo__get_attribute_definition_clause\n+#define Get_Attribute_Definition_Clause\teinfo__get_attribute_definition_clause\n+\n extern Node_Id Get_Attribute_Definition_Clause (Entity_Id, unsigned char);\n \n /* errout: */\n \n-#define Error_Msg_N               errout__error_msg_n\n-#define Error_Msg_NE              errout__error_msg_ne\n-#define Set_Identifier_Casing     errout__set_identifier_casing\n+#define Error_Msg_N\t\terrout__error_msg_n\n+#define Error_Msg_NE\t\terrout__error_msg_ne\n+#define Set_Identifier_Casing\terrout__set_identifier_casing\n \n-extern void Error_Msg_N\t          (String_Pointer, Node_Id);\n-extern void Error_Msg_NE          (String_Pointer, Node_Id, Entity_Id);\n-extern void Set_Identifier_Casing (Char *, const Char *);\n+extern void Error_Msg_N\t\t\t(String_Pointer, Node_Id);\n+extern void Error_Msg_NE\t\t(String_Pointer, Node_Id, Entity_Id);\n+extern void Set_Identifier_Casing\t(Char *, const Char *);\n \n /* err_vars: */\n \n-#define Error_Msg_Node_2        err_vars__error_msg_node_2\n-#define Error_Msg_Uint_1        err_vars__error_msg_uint_1\n-#define Error_Msg_Uint_2        err_vars__error_msg_uint_2\n+#define Error_Msg_Uint_1\terr_vars__error_msg_uint_1\n+#define Error_Msg_Uint_2\terr_vars__error_msg_uint_2\n \n-extern Entity_Id Error_Msg_Node_2;\n-extern Uint      Error_Msg_Uint_1;\n-extern Uint      Error_Msg_Uint_2;\n-extern Nat       Serious_Errors_Detected;\n+extern Uint Error_Msg_Uint_1;\n+extern Uint Error_Msg_Uint_2;\n \n /* exp_ch11:  */\n \n-#define Get_Local_Raise_Call_Entity exp_ch11__get_local_raise_call_entity\n-#define Get_RT_Exception_Entity exp_ch11__get_rt_exception_entity\n-#define Get_RT_Exception_Name exp_ch11__get_rt_exception_name\n-#define Warn_If_No_Local_Raise exp_ch11__warn_if_no_local_raise\n+#define Get_Local_Raise_Call_Entity\texp_ch11__get_local_raise_call_entity\n+#define Get_RT_Exception_Entity\t\texp_ch11__get_rt_exception_entity\n+#define Get_RT_Exception_Name\t\texp_ch11__get_rt_exception_name\n+#define Warn_If_No_Local_Raise\t\texp_ch11__warn_if_no_local_raise\n \n-extern Entity_Id Get_Local_Raise_Call_Entity (void);\n-extern Entity_Id Get_RT_Exception_Entity (int);\n-extern void Get_RT_Exception_Name (int);\n-extern void Warn_If_No_Local_Raise (int);\n+extern Entity_Id Get_Local_Raise_Call_Entity\t(void);\n+extern Entity_Id Get_RT_Exception_Entity\t(int);\n+extern void Get_RT_Exception_Name\t\t(int);\n+extern void Warn_If_No_Local_Raise\t\t(int);\n \n /* exp_code:  */\n \n-#define Asm_Input_Constraint exp_code__asm_input_constraint\n-#define Asm_Input_Value exp_code__asm_input_value\n-#define Asm_Output_Constraint exp_code__asm_output_constraint\n-#define Asm_Output_Variable exp_code__asm_output_variable\n-#define Asm_Template exp_code__asm_template\n-#define Clobber_Get_Next exp_code__clobber_get_next\n-#define Clobber_Setup exp_code__clobber_setup\n-#define Is_Asm_Volatile exp_code__is_asm_volatile\n-#define Next_Asm_Input exp_code__next_asm_input\n-#define Next_Asm_Output exp_code__next_asm_output\n-#define Setup_Asm_Inputs exp_code__setup_asm_inputs\n-#define Setup_Asm_Outputs exp_code__setup_asm_outputs\n+#define Asm_Input_Constraint\texp_code__asm_input_constraint\n+#define Asm_Input_Value\t\texp_code__asm_input_value\n+#define Asm_Output_Constraint\texp_code__asm_output_constraint\n+#define Asm_Output_Variable\texp_code__asm_output_variable\n+#define Asm_Template\t\texp_code__asm_template\n+#define Clobber_Get_Next\texp_code__clobber_get_next\n+#define Clobber_Setup\t\texp_code__clobber_setup\n+#define Is_Asm_Volatile\t\texp_code__is_asm_volatile\n+#define Next_Asm_Input\t\texp_code__next_asm_input\n+#define Next_Asm_Output\t\texp_code__next_asm_output\n+#define Setup_Asm_Inputs\texp_code__setup_asm_inputs\n+#define Setup_Asm_Outputs\texp_code__setup_asm_outputs\n \n extern Node_Id Asm_Input_Constraint\t(void);\n extern Node_Id Asm_Input_Value\t\t(void);\n@@ -150,22 +153,24 @@ extern void Setup_Asm_Outputs\t\t(Node_Id);\n \n /* exp_dbug:  */\n \n-#define Get_Encoded_Name exp_dbug__get_encoded_name\n-#define Get_External_Name exp_dbug__get_external_name\n+#define Get_Encoded_Name\texp_dbug__get_encoded_name\n+#define Get_External_Name\texp_dbug__get_external_name\n+#define Get_Variant_Encoding \texp_dbug__get_variant_encoding\n \n-extern void Get_Encoded_Name\t(Entity_Id);\n-extern void Get_External_Name\t(Entity_Id, Boolean, String_Pointer);\n+extern void Get_Encoded_Name\t\t(Entity_Id);\n+extern void Get_External_Name\t\t(Entity_Id, Boolean, String_Pointer);\n+extern void Get_Variant_Encoding\t(Entity_Id);\n \n /* exp_tss: */\n \n-#define Is_Init_Proc exp_tss__is_init_proc\n+#define Is_Init_Proc\texp_tss__is_init_proc\n \n extern Boolean Is_Init_Proc\t\t(Entity_Id);\n \n /* exp_util: */\n \n-#define Is_Fully_Repped_Tagged_Type exp_util__is_fully_repped_tagged_type\n-#define Find_Interface_Tag exp_util__find_interface_tag\n+#define Is_Fully_Repped_Tagged_Type\texp_util__is_fully_repped_tagged_type\n+#define Find_Interface_Tag\t\texp_util__find_interface_tag\n \n extern Boolean Is_Fully_Repped_Tagged_Type      (Entity_Id);\n extern Entity_Id Find_Interface_Tag\t\t(Entity_Id, Entity_Id);\n@@ -175,26 +180,23 @@ extern Entity_Id Find_Interface_Tag\t\t(Entity_Id, Entity_Id);\n #define Cunit \t\t\t\tlib__cunit\n #define Ident_String\t\t\tlib__ident_string\n #define In_Extended_Main_Code_Unit\tlib__in_extended_main_code_unit\n-#define In_Same_Source_Unit             lib__in_same_source_unit\n \n extern Node_Id Cunit\t\t\t\t(Unit_Number_Type);\n extern Node_Id Ident_String\t\t\t(Unit_Number_Type);\n extern Boolean In_Extended_Main_Code_Unit\t(Entity_Id);\n-extern Boolean In_Same_Source_Unit              (Node_Id, Node_Id);\n \n /* opt: */\n \n-#define Back_End_Inlining              opt__back_end_inlining\n-#define Debug_Generated_Code           opt__debug_generated_code\n-#define Exception_Extra_Info           opt__exception_extra_info\n-#define Exception_Locations_Suppressed opt__exception_locations_suppressed\n-#define Exception_Mechanism            opt__exception_mechanism\n-#define Float_Format                   opt__float_format\n-#define Generate_SCO_Instance_Table    opt__generate_sco_instance_table\n-#define GNAT_Mode                      opt__gnat_mode\n-#define List_Representation_Info       opt__list_representation_info\n-#define No_Strict_Aliasing_CP          opt__no_strict_aliasing\n-#define Suppress_Checks                opt__suppress_checks\n+#define Back_End_Inlining\t\topt__back_end_inlining\n+#define Debug_Generated_Code\t\topt__debug_generated_code\n+#define Exception_Extra_Info\t\topt__exception_extra_info\n+#define Exception_Locations_Suppressed\topt__exception_locations_suppressed\n+#define Exception_Mechanism\t\topt__exception_mechanism\n+#define Generate_SCO_Instance_Table\topt__generate_sco_instance_table\n+#define GNAT_Mode\t\t\topt__gnat_mode\n+#define List_Representation_Info\topt__list_representation_info\n+#define No_Strict_Aliasing_CP\t\topt__no_strict_aliasing\n+#define Suppress_Checks\t\t\topt__suppress_checks\n \n typedef enum {\n   Front_End_SJLJ, Back_End_ZCX, Back_End_SJLJ\n@@ -205,122 +207,135 @@ extern Boolean Debug_Generated_Code;\n extern Boolean Exception_Extra_Info;\n extern Boolean Exception_Locations_Suppressed;\n extern Exception_Mechanism_Type Exception_Mechanism;\n-extern Char Float_Format;\n extern Boolean Generate_SCO_Instance_Table;\n extern Boolean GNAT_Mode;\n extern Int List_Representation_Info;\n extern Boolean No_Strict_Aliasing_CP;\n extern Boolean Suppress_Checks;\n \n-#define ZCX_Exceptions            opt__zcx_exceptions\n-#define SJLJ_Exceptions           opt__sjlj_exceptions\n-#define Front_End_Exceptions      opt__front_end_exceptions\n-#define Back_End_Exceptions       opt__back_end_exceptions\n+#define ZCX_Exceptions\t\topt__zcx_exceptions\n+#define SJLJ_Exceptions\t\topt__sjlj_exceptions\n+#define Front_End_Exceptions\topt__front_end_exceptions\n+#define Back_End_Exceptions\topt__back_end_exceptions\n \n-extern Boolean ZCX_Exceptions       (void);\n-extern Boolean SJLJ_Exceptions      (void);\n-extern Boolean Front_End_Exceptions (void);\n-extern Boolean Back_End_Exceptions  (void);\n+extern Boolean ZCX_Exceptions\t\t(void);\n+extern Boolean SJLJ_Exceptions\t\t(void);\n+extern Boolean Front_End_Exceptions\t(void);\n+extern Boolean Back_End_Exceptions\t(void);\n \n /* restrict: */\n \n-#define No_Exception_Handlers_Set      restrict__no_exception_handlers_set\n-#define Check_No_Implicit_Heap_Alloc   restrict__check_no_implicit_heap_alloc\n-#define Check_No_Implicit_Task_Alloc   restrict__check_no_implicit_task_alloc\n-#define Check_No_Implicit_Protected_Alloc restrict__check_no_implicit_protected_alloc\n-#define Check_Elaboration_Code_Allowed restrict__check_elaboration_code_allowed\n-#define Check_Implicit_Dynamic_Code_Allowed restrict__check_implicit_dynamic_code_allowed\n-\n-extern Boolean No_Exception_Handlers_Set   (void);\n-extern void Check_No_Implicit_Heap_Alloc   (Node_Id);\n-extern void Check_No_Implicit_Task_Alloc   (Node_Id);\n-extern void Check_No_Implicit_Protected_Alloc (Node_Id);\n-extern void Check_Elaboration_Code_Allowed (Node_Id);\n-extern void Check_Implicit_Dynamic_Code_Allowed (Node_Id);\n+#define Check_Elaboration_Code_Allowed\t\\\n+  restrict__check_elaboration_code_allowed\n+#define Check_Implicit_Dynamic_Code_Allowed\t\\\n+  restrict__check_implicit_dynamic_code_allowed\n+#define Check_No_Implicit_Heap_Alloc\t\\\n+  restrict__check_no_implicit_heap_alloc\n+#define Check_No_Implicit_Protected_Alloc\t\\\n+  restrict__check_no_implicit_protected_alloc\n+#define Check_No_Implicit_Task_Alloc\t\\\n+  restrict__check_no_implicit_task_alloc\n+#define No_Exception_Handlers_Set\t\\\n+  restrict__no_exception_handlers_set\n+\n+extern void Check_Elaboration_Code_Allowed\t(Node_Id);\n+extern void Check_Implicit_Dynamic_Code_Allowed\t(Node_Id);\n+extern void Check_No_Implicit_Heap_Alloc\t(Node_Id);\n+extern void Check_No_Implicit_Protected_Alloc\t(Node_Id);\n+extern void Check_No_Implicit_Task_Alloc\t(Node_Id);\n+extern Boolean No_Exception_Handlers_Set\t(void);\n \n /* sem_aggr:  */\n \n-#define Is_Others_Aggregate    sem_aggr__is_others_aggregate\n+#define Is_Others_Aggregate\tsem_aggr__is_others_aggregate\n \n-extern Boolean Is_Others_Aggregate (Node_Id);\n+extern Boolean Is_Others_Aggregate\t(Node_Id);\n \n /* sem_aux:  */\n \n-#define Ancestor_Subtype               sem_aux__ancestor_subtype\n-#define Constant_Value                 sem_aux__constant_value\n-#define First_Discriminant             sem_aux__first_discriminant\n-#define First_Stored_Discriminant      sem_aux__first_stored_discriminant\n-#define First_Subtype                  sem_aux__first_subtype\n-#define Is_By_Reference_Type           sem_aux__is_by_reference_type\n-#define Is_Derived_Type                sem_aux__is_derived_type\n-\n-extern Entity_Id  Ancestor_Subtype             (Entity_Id);\n-extern Node_Id    Constant_Value               (Entity_Id);\n-extern Entity_Id  First_Discriminant           (Entity_Id);\n-extern Entity_Id  First_Stored_Discriminant    (Entity_Id);\n-extern Entity_Id  First_Subtype                (Entity_Id);\n-extern Boolean    Is_By_Reference_Type         (Entity_Id);\n-extern Boolean    Is_Derived_Type              (Entity_Id);\n+#define Ancestor_Subtype\t\tsem_aux__ancestor_subtype\n+#define Constant_Value\t\t\tsem_aux__constant_value\n+#define First_Discriminant\t\tsem_aux__first_discriminant\n+#define First_Stored_Discriminant\tsem_aux__first_stored_discriminant\n+#define First_Subtype\t\t\tsem_aux__first_subtype\n+#define Is_By_Reference_Type\t\tsem_aux__is_by_reference_type\n+#define Is_Derived_Type\t\t\tsem_aux__is_derived_type\n+\n+extern Entity_Id Ancestor_Subtype\t\t(Entity_Id);\n+extern Node_Id Constant_Value\t\t\t(Entity_Id);\n+extern Entity_Id First_Discriminant\t\t(Entity_Id);\n+extern Entity_Id First_Stored_Discriminant\t(Entity_Id);\n+extern Entity_Id First_Subtype\t\t\t(Entity_Id);\n+extern Boolean Is_By_Reference_Type\t\t(Entity_Id);\n+extern Boolean Is_Derived_Type\t\t\t(Entity_Id);\n \n /* sem_eval: */\n \n #define Compile_Time_Known_Value\tsem_eval__compile_time_known_value\n-#define Expr_Value\t\t\tsem_eval__expr_value\n-#define Expr_Value_S\t\t\tsem_eval__expr_value_s\n #define Is_OK_Static_Expression\t\tsem_eval__is_ok_static_expression\n-#define Is_OK_Static_Subtype\t\tsem_eval__is_ok_static_subtype\n \n-extern Uint Expr_Value\t\t\t(Node_Id);\n-extern Node_Id Expr_Value_S\t\t(Node_Id);\n-extern Boolean Compile_Time_Known_Value (Node_Id);\n-extern Boolean Is_OK_Static_Expression  (Node_Id);\n-extern Boolean Is_OK_Static_Subtype\t(Entity_Id);\n+extern Boolean Compile_Time_Known_Value\t(Node_Id);\n+extern Boolean Is_OK_Static_Expression\t(Node_Id);\n \n /* sem_util: */\n \n #define Defining_Entity\t\t\tsem_util__defining_entity\n #define First_Actual\t\t\tsem_util__first_actual\n-#define Next_Actual\t\t\tsem_util__next_actual\n #define Is_Atomic_Object\t\tsem_util__is_atomic_object\n #define Is_Variable_Size_Record \tsem_util__is_variable_size_record\n #define Is_Volatile_Object\t\tsem_util__is_volatile_object\n+#define Next_Actual\t\t\tsem_util__next_actual\n #define Requires_Transient_Scope\tsem_util__requires_transient_scope\n \n extern Entity_Id Defining_Entity\t(Node_Id);\n extern Node_Id First_Actual\t\t(Node_Id);\n-extern Node_Id Next_Actual\t\t(Node_Id);\n extern Boolean Is_Atomic_Object \t(Node_Id);\n extern Boolean Is_Variable_Size_Record \t(Entity_Id Id);\n extern Boolean Is_Volatile_Object \t(Node_Id);\n+extern Node_Id Next_Actual\t\t(Node_Id);\n extern Boolean Requires_Transient_Scope\t(Entity_Id);\n \n /* sinfo: */\n \n #define End_Location\t\t\tsinfo__end_location\n-#define Set_Has_No_Elaboration_Code \tsinfo__set_has_no_elaboration_code\n+#define Set_Has_No_Elaboration_Code\tsinfo__set_has_no_elaboration_code\n #define Set_Present_Expr\t\tsinfo__set_present_expr\n \n extern Source_Ptr End_Location \t\t(Node_Id);\n extern void Set_Has_No_Elaboration_Code\t(Node_Id, Boolean);\n extern void Set_Present_Expr\t\t(Node_Id, Uint);\n \n+/* sinput: */\n+\n+#define Debug_Source_Name\tsinput__debug_source_name\n+#define Get_Column_Number\tsinput__get_column_number\n+#define Get_Logical_Line_Number\tsinput__get_logical_line_number\n+#define Get_Source_File_Index\tsinput__get_source_file_index\n+\n+extern File_Name_Type Debug_Source_Name\t\t(Source_File_Index);\n+extern Column_Number_Type Get_Column_Number\t(Source_Ptr);\n+extern Line_Number_Type Get_Logical_Line_Number\t(Source_Ptr);\n+extern Source_File_Index Get_Source_File_Index\t(Source_Ptr);\n+\n /* targparm: */\n \n-#define Backend_Overflow_Checks_On_Target targparm__backend_overflow_checks_on_target\n-#define Machine_Overflows_On_Target targparm__machine_overflows_on_target\n-#define Signed_Zeros_On_Target targparm__signed_zeros_on_target\n-#define Stack_Check_Probes_On_Target targparm__stack_check_probes_on_target\n-#define Stack_Check_Limits_On_Target targparm__stack_check_limits_on_target\n+#define Machine_Overflows_On_Target\t\\\n+  targparm__machine_overflows_on_target\n+#define Signed_Zeros_On_Target\t\\\n+  targparm__signed_zeros_on_target\n+#define Stack_Check_Limits_On_Target\t\\\n+  targparm__stack_check_limits_on_target\n+#define Stack_Check_Probes_On_Target\t\\\n+  targparm__stack_check_probes_on_target\n \n-extern Boolean Backend_Overflow_Checks_On_Target;\n extern Boolean Machine_Overflows_On_Target;\n extern Boolean Signed_Zeros_On_Target;\n-extern Boolean Stack_Check_Probes_On_Target;\n extern Boolean Stack_Check_Limits_On_Target;\n+extern Boolean Stack_Check_Probes_On_Target;\n \n /* warnsw: */\n \n-#define Warn_On_Questionable_Layout warnsw__warn_on_questionable_layout\n+#define Warn_On_Questionable_Layout\twarnsw__warn_on_questionable_layout\n \n extern Boolean Warn_On_Questionable_Layout;\n "}, {"sha": "f20a18f50e969f84cdefcc2e2bb5090d140ba09d", "filename": "gcc/ada/lib.ads", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c7732bbe382b982e60eb9d606752d012159d1a18/gcc%2Fada%2Flib.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c7732bbe382b982e60eb9d606752d012159d1a18/gcc%2Fada%2Flib.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flib.ads?ref=c7732bbe382b982e60eb9d606752d012159d1a18", "patch": "@@ -476,6 +476,8 @@ package Lib is\n    function Unit_Name        (U : Unit_Number_Type) return Unit_Name_Type;\n    --  Get value of named field from given units table entry\n \n+   --  WARNING: There is a matching C declaration of a few subprograms in fe.h\n+\n    procedure Set_Cunit            (U : Unit_Number_Type; N : Node_Id);\n    procedure Set_Cunit_Entity     (U : Unit_Number_Type; E : Entity_Id);\n    procedure Set_Dynamic_Elab     (U : Unit_Number_Type; B : Boolean := True);\n@@ -617,6 +619,8 @@ package Lib is\n    --  the special case check to that routine. This avoids some difficulties\n    --  with some other calls that malfunctioned with the odd return of True.\n \n+   --  WARNING: There is a matching C declaration of this subprogram in fe.h\n+\n    function In_Extended_Main_Code_Unit (Loc : Source_Ptr) return Boolean;\n    --  Same function as above, but argument is a source pointer rather\n    --  than a node."}, {"sha": "c00fdefa8f540e5621c85589b5143ff0e9086e5f", "filename": "gcc/ada/namet.ads", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c7732bbe382b982e60eb9d606752d012159d1a18/gcc%2Fada%2Fnamet.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c7732bbe382b982e60eb9d606752d012159d1a18/gcc%2Fada%2Fnamet.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fnamet.ads?ref=c7732bbe382b982e60eb9d606752d012159d1a18", "patch": "@@ -38,7 +38,6 @@ package Namet is\n \n --  WARNING: There is a C version of this package. Any changes to this\n --  source file must be properly reflected in the C header file namet.h\n---  which is created manually from namet.ads and namet.adb.\n \n --  This package contains routines for handling the names table. The table\n --  is used to store character strings for identifiers and operator symbols,"}, {"sha": "d6011fafdfe188f21f770d7144f366671f172b21", "filename": "gcc/ada/namet.h", "status": "modified", "additions": 4, "deletions": 40, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c7732bbe382b982e60eb9d606752d012159d1a18/gcc%2Fada%2Fnamet.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c7732bbe382b982e60eb9d606752d012159d1a18/gcc%2Fada%2Fnamet.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fnamet.h?ref=c7732bbe382b982e60eb9d606752d012159d1a18", "patch": "@@ -23,9 +23,10 @@\n  *                                                                          *\n  ****************************************************************************/\n \n-/* This is the C file that corresponds to the Ada package specification\n-   Namet.  It was created manually from files namet.ads and namet.adb.\n-   Subprograms from Exp_Dbug and Sinput are also made accessible here.  */\n+/* This is the C header that corresponds to the Ada package specification for\n+   Namet.  It also contains the implementation of inlined functions from the\n+   package body for Namet.  It was created manually from namet.ads and\n+   namet.adb and must be kept synchronized with changes in these files.  */\n \n #ifdef __cplusplus\n extern \"C\" {\n@@ -85,43 +86,6 @@ Get_Name_String (Name_Id Id)\n #define Name_Equals namet__name_equals\n extern Boolean Name_Equals (Name_Id, Name_Id);\n \n-/* The following routines and variables are not part of Namet, but we\n-   include the header here since it seems the best place for it.  */\n-\n-#define Get_Encoded_Type_Name exp_dbug__get_encoded_type_name\n-extern Boolean Get_Encoded_Type_Name (Entity_Id);\n-#define Get_Variant_Encoding exp_dbug__get_variant_encoding\n-extern void Get_Variant_Encoding (Entity_Id);\n-\n-#define Spec_Context_List exp_dbug__spec_context_list\n-#define Body_Context_List exp_dbug__body_context_list\n-extern char *Spec_Context_List, *Body_Context_List;\n-#define Spec_Filename exp_dbug__spec_filename\n-#define Body_Filename exp_dbug__body_filename\n-extern char *Spec_Filename, *Body_Filename;\n-\n-/* Here are some functions in sinput.adb we call from trans.c.  */\n-\n-typedef Nat Source_File_Index;\n-typedef Int Logical_Line_Number;\n-typedef Int Column_Number;\n-\n-#define Debug_Source_Name sinput__debug_source_name\n-#define Full_Debug_Name sinput__full_debug_name\n-#define Reference_Name sinput__reference_name\n-#define Get_Source_File_Index sinput__get_source_file_index\n-#define Get_Logical_Line_Number sinput__get_logical_line_number\n-#define Get_Column_Number sinput__get_column_number\n-#define Instantiation sinput__instantiation\n-\n-extern File_Name_Type Debug_Source_Name\t(Source_File_Index);\n-extern File_Name_Type Full_Debug_Name\t(Source_File_Index);\n-extern File_Name_Type Reference_Name\t(Source_File_Index);\n-extern Source_File_Index Get_Source_File_Index (Source_Ptr);\n-extern Logical_Line_Number Get_Logical_Line_Number (Source_Ptr);\n-extern Column_Number Get_Column_Number (Source_Ptr);\n-extern Source_Ptr Instantiation (Source_File_Index);\n-\n #ifdef __cplusplus\n }\n #endif"}, {"sha": "1c6ae2c09d7ad8129290677569424c1faa0e1a17", "filename": "gcc/ada/nlists.ads", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c7732bbe382b982e60eb9d606752d012159d1a18/gcc%2Fada%2Fnlists.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c7732bbe382b982e60eb9d606752d012159d1a18/gcc%2Fada%2Fnlists.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fnlists.ads?ref=c7732bbe382b982e60eb9d606752d012159d1a18", "patch": "@@ -35,6 +35,9 @@\n --  package Elists which provides another form of lists that are not threaded\n --  through the nodes (and therefore allow nodes to be on multiple lists).\n \n+--  WARNING: There is a C version of this package. Any changes to this\n+--  source file must be properly reflected in the C header file nlists.h\n+\n with System;\n with Types; use Types;\n "}, {"sha": "b678bab9cae96bc676d988c2249d1cd0118d68aa", "filename": "gcc/ada/nlists.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c7732bbe382b982e60eb9d606752d012159d1a18/gcc%2Fada%2Fnlists.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c7732bbe382b982e60eb9d606752d012159d1a18/gcc%2Fada%2Fnlists.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fnlists.h?ref=c7732bbe382b982e60eb9d606752d012159d1a18", "patch": "@@ -23,9 +23,9 @@\n  *                                                                          *\n  ****************************************************************************/\n \n-/* This is the C header corresponding to the Ada package specification for\n-   Nlists. It also contains the implementations of inlined functions from\n-   the package body for Nlists.  It was generated manually from nlists.ads and\n+/* This is the C header that corresponds to the Ada package specification for\n+   Nlists.  It also contains the implementation of inlined functions from the\n+   package body for Nlists.  It was created manually from nlists.ads and\n    nlists.adb and must be kept synchronized with changes in these files.\n \n    Note that only routines for reading the tree are included, since the"}, {"sha": "94534642a2d9d0f262392ed2b24160da39935645", "filename": "gcc/ada/opt.ads", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c7732bbe382b982e60eb9d606752d012159d1a18/gcc%2Fada%2Fopt.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c7732bbe382b982e60eb9d606752d012159d1a18/gcc%2Fada%2Fopt.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fopt.ads?ref=c7732bbe382b982e60eb9d606752d012159d1a18", "patch": "@@ -273,6 +273,8 @@ package Opt is\n    --  switches -gnatN or -gnatd.z are used. See circuitry in gnat1drv for the\n    --  exact conditions for setting this switch.\n \n+   --  WARNING: There is a matching C declaration of this variable in fe.h\n+\n    Bind_Alternate_Main_Name : Boolean := False;\n    --  GNATBIND\n    --  True if main should be called Alternate_Main_Name.all.\n@@ -458,6 +460,8 @@ package Opt is\n    --  of the original source code. Causes debugging information to be\n    --  written with respect to the generated code file that is written.\n \n+   --  WARNING: There is a matching C declaration of this variable in fe.h\n+\n    Default_Pool : Node_Id := Empty;\n    --  GNAT\n    --  Used to record the storage pool name (or null literal) that is the\n@@ -595,11 +599,15 @@ package Opt is\n    --  associated with exception messages (in particular range and index\n    --  checks).\n \n+   --  WARNING: There is a matching C declaration of this variable in fe.h\n+\n    Exception_Locations_Suppressed : Boolean := False;\n    --  GNAT\n    --  Set to True if a Suppress_Exception_Locations configuration pragma is\n    --  currently active.\n \n+   --  WARNING: There is a matching C declaration of this variable in fe.h\n+\n    type Exception_Mechanism_Type is\n    --  Determines the kind of mechanism used to handle exceptions\n    --\n@@ -630,13 +638,17 @@ package Opt is\n    --  (Frontend_Exceptions + ZCX_By_Default). The C convention is there to\n    --  allow access by gigi.\n \n+   --  WARNING: There is a matching C declaration of this variable in fe.h\n+\n    function Back_End_Exceptions return Boolean;\n    function Front_End_Exceptions return Boolean;\n    function ZCX_Exceptions return Boolean;\n    function SJLJ_Exceptions return Boolean;\n    --  GNAT\n    --  Various properties of the active Exception_Mechanism\n \n+   --  WARNING: There is a matching C declaration of these subprograms in fe.h\n+\n    Exception_Tracebacks : Boolean := False;\n    --  GNATBIND\n    --  Set to True to store tracebacks in exception occurrences (-Ea or -E)\n@@ -781,6 +793,8 @@ package Opt is\n    --  True when switch -fdump-scos is used. When True, a table of instances is\n    --  included in SCOs.\n \n+   --  WARNING: There is a matching C declaration of this variable in fe.h\n+\n    Generating_Code : Boolean := False;\n    --  GNAT\n    --  True if the frontend finished its work and has called the backend to\n@@ -1008,6 +1022,8 @@ package Opt is\n    --    3 = like 2, but variable fields are decoded symbolically\n    --    4 = like 3, but list rep info for relevant compiler-generated types\n \n+   --  WARNING: There is a matching C declaration of this variable in fe.h\n+\n    List_Representation_Info_To_File : Boolean := False;\n    --  GNAT\n    --  Set true by -gnatRs switch. Causes information from -gnatR[1-4]m to be\n@@ -1209,6 +1225,8 @@ package Opt is\n    --  GNAT\n    --  Set True if pragma No_Strict_Aliasing with no parameters encountered.\n \n+   --  WARNING: There is a matching C declaration of this variable in fe.h\n+\n    No_Tagged_Streams : Node_Id := Empty;\n    --  GNAT\n    --  If a pragma No_Tagged_Streams is active for the current scope, this\n@@ -1541,6 +1559,8 @@ package Opt is\n    --  GNAT\n    --  Set to True if -gnatp (suppress all checks) switch present.\n \n+   --  WARNING: There is a matching C declaration of this variable in fe.h\n+\n    Suppress_Options : Suppress_Record;\n    --  GNAT\n    --  Indicates outer level setting of check suppression. This initializes\n@@ -2293,6 +2313,8 @@ package Opt is\n    --  GNAT\n    --  True if compiling in GNAT system mode (-gnatg switch)\n \n+   --  WARNING: There is a matching C declaration of this variable in fe.h\n+\n    GNAT_Mode_Config : Boolean := False;\n    --  GNAT\n    --  True if -gnatg switch is present. GNAT_Mode may be temporary set to"}, {"sha": "c8eb350177314abc57538db778d6b367b0be6022", "filename": "gcc/ada/repinfo.ads", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c7732bbe382b982e60eb9d606752d012159d1a18/gcc%2Fada%2Frepinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c7732bbe382b982e60eb9d606752d012159d1a18/gcc%2Fada%2Frepinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Frepinfo.ads?ref=c7732bbe382b982e60eb9d606752d012159d1a18", "patch": "@@ -35,6 +35,9 @@\n --  compiler and in ASIS (it is used in ASIS as part of the implementation\n --  of the Data Decomposition Annex).\n \n+--  WARNING: There is a C version of this package. Any changes to this\n+--  source file must be properly reflected in the C header file repinfo.h\n+\n with Types; use Types;\n with Uintp; use Uintp;\n "}, {"sha": "30c3e6dc9069cf93bdcf9e0f4618ad800fabcb7a", "filename": "gcc/ada/repinfo.h", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c7732bbe382b982e60eb9d606752d012159d1a18/gcc%2Fada%2Frepinfo.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c7732bbe382b982e60eb9d606752d012159d1a18/gcc%2Fada%2Frepinfo.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Frepinfo.h?ref=c7732bbe382b982e60eb9d606752d012159d1a18", "patch": "@@ -29,7 +29,9 @@\n  *                                                                          *\n  ****************************************************************************/\n \n-/* This file corresponds to the Ada file repinfo.ads.  */\n+/* This is the C header that corresponds to the Ada package specification for\n+   Repinfo.  It was created manually from repinfo.ads and must be kept\n+   synchronized with changes in this file.  */\n \n #ifdef __cplusplus\n extern \"C\" {"}, {"sha": "80cd0121ec5947b0556344a0b71fa5737a3ebf00", "filename": "gcc/ada/restrict.ads", "status": "modified", "additions": 15, "deletions": 3, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c7732bbe382b982e60eb9d606752d012159d1a18/gcc%2Fada%2Frestrict.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c7732bbe382b982e60eb9d606752d012159d1a18/gcc%2Fada%2Frestrict.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Frestrict.ads?ref=c7732bbe382b982e60eb9d606752d012159d1a18", "patch": "@@ -307,6 +307,8 @@ package Restrict is\n    --  elaboration routine. If elaboration code is not allowed, an error\n    --  message is posted on the node given as argument.\n \n+   --  WARNING: There is a matching C declaration of this subprogram in fe.h\n+\n    procedure Check_SPARK_05_Restriction\n      (Msg   : String;\n       N     : Node_Id;\n@@ -337,19 +339,27 @@ package Restrict is\n    --  that generates a trampoline. If not allowed, an error message is posted\n    --  on the node given as argument.\n \n+   --  WARNING: There is a matching C declaration of this subprogram in fe.h\n+\n    procedure Check_No_Implicit_Heap_Alloc (N : Node_Id);\n    --  Equivalent to Check_Restriction (No_Implicit_Heap_Allocations, N).\n    --  Provided for easy use by back end, which has to check this restriction.\n \n-   procedure Check_No_Implicit_Task_Alloc (N : Node_Id);\n-   --  Equivalent to Check_Restriction (No_Implicit_Task_Allocations, N).\n-   --  Provided for easy use by back end, which has to check this restriction.\n+   --  WARNING: There is a matching C declaration of this subprogram in fe.h\n \n    procedure Check_No_Implicit_Protected_Alloc (N : Node_Id);\n    --  Equivalent to:\n    --    Check_Restriction (No_Implicit_Protected_Object_Allocations, N)\n    --  Provided for easy use by back end, which has to check this restriction.\n \n+   --  WARNING: There is a matching C declaration of this subprogram in fe.h\n+\n+   procedure Check_No_Implicit_Task_Alloc (N : Node_Id);\n+   --  Equivalent to Check_Restriction (No_Implicit_Task_Allocations, N).\n+   --  Provided for easy use by back end, which has to check this restriction.\n+\n+   --  WARNING: There is a matching C declaration of this subprogram in fe.h\n+\n    procedure Check_Obsolescent_2005_Entity (E : Entity_Id; N : Node_Id);\n    --  This routine checks if the entity E is one of the obsolescent entries\n    --  in Ada.Characters.Handling in Ada 2005 and No_Obsolescent_Features\n@@ -394,6 +404,8 @@ package Restrict is\n    --  set. In the latter case, the source may contain handlers but they either\n    --  get converted using the local goto transformation or deleted.\n \n+   --  WARNING: There is a matching C declaration of this subprogram in fe.h\n+\n    function No_Exception_Propagation_Active return Boolean;\n    --  Test to see if current restrictions settings specify that no\n    --  exception propagation is activated."}, {"sha": "9f5629768a6107136a3a9ff6dcd3cf950d7b80c0", "filename": "gcc/ada/scos.ads", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c7732bbe382b982e60eb9d606752d012159d1a18/gcc%2Fada%2Fscos.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c7732bbe382b982e60eb9d606752d012159d1a18/gcc%2Fada%2Fscos.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fscos.ads?ref=c7732bbe382b982e60eb9d606752d012159d1a18", "patch": "@@ -28,6 +28,9 @@\n --  the ALI file, and by Get_SCO/Put_SCO to read and write the text form that\n --  is used in the ALI file.\n \n+--  WARNING: There is a C version of this package. Any changes to this\n+--  source file must be properly reflected in the C header file scos.h\n+\n with Namet; use Namet;\n with Table;\n with Types; use Types;\n@@ -48,9 +51,6 @@ package SCOs is\n    --  Put_SCO reads the internal tables and generates text lines in the ALI\n    --  format.\n \n-   --  WARNING: There are C bindings for this package. Any changes to this\n-   --  source file must be properly reflected in the C header file scos.h\n-\n    --------------------\n    -- SCO ALI Format --\n    --------------------"}, {"sha": "53f9f3896c056097f0e70cdb4deeb52de6a5b80b", "filename": "gcc/ada/scos.h", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c7732bbe382b982e60eb9d606752d012159d1a18/gcc%2Fada%2Fscos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c7732bbe382b982e60eb9d606752d012159d1a18/gcc%2Fada%2Fscos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fscos.h?ref=c7732bbe382b982e60eb9d606752d012159d1a18", "patch": "@@ -23,8 +23,9 @@\n  *                                                                          *\n  ****************************************************************************/\n \n-/* This is the C file that corresponds to the Ada package spec SCOs.  It was\n-   created manually from the file scos.ads.  */\n+/* This is the C header that corresponds to the Ada package specification for\n+   Scos.  It was created manually from scos.ads and must be kept synchronized\n+   with changes in this file.  */\n \n #ifdef __cplusplus\n extern \"C\" {"}, {"sha": "1d4f3489d78d86e06ea40c5c14da42626a67fb71", "filename": "gcc/ada/sem_aggr.ads", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c7732bbe382b982e60eb9d606752d012159d1a18/gcc%2Fada%2Fsem_aggr.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c7732bbe382b982e60eb9d606752d012159d1a18/gcc%2Fada%2Fsem_aggr.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_aggr.ads?ref=c7732bbe382b982e60eb9d606752d012159d1a18", "patch": "@@ -37,4 +37,6 @@ package Sem_Aggr is\n    function Is_Others_Aggregate (Aggr : Node_Id) return Boolean;\n    --  Returns True is aggregate Aggr consists of a single OTHERS choice\n \n+   --  WARNING: There is a matching C declaration of this subprogram in fe.h\n+\n end Sem_Aggr;"}, {"sha": "ee3a2b3f501cdcc90e9848236d69ef1a33b5572e", "filename": "gcc/ada/sem_aux.ads", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c7732bbe382b982e60eb9d606752d012159d1a18/gcc%2Fada%2Fsem_aux.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c7732bbe382b982e60eb9d606752d012159d1a18/gcc%2Fada%2Fsem_aux.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_aux.ads?ref=c7732bbe382b982e60eb9d606752d012159d1a18", "patch": "@@ -91,6 +91,8 @@ package Sem_Aux is\n    --  subtype then it returns the subtype or type from which the subtype was\n    --  obtained, otherwise it returns Empty.\n \n+   --  WARNING: There is a matching C declaration of this subprogram in fe.h\n+\n    function Available_View (Ent : Entity_Id) return Entity_Id;\n    --  Ent denotes an abstract state or a type that may come from a limited\n    --  with clause. Return the non-limited view of Ent if there is one or Ent\n@@ -104,6 +106,8 @@ package Sem_Aux is\n    --  constants from the point of view of constant folding. Empty is also\n    --  returned for variables with no initialization expression.\n \n+   --  WARNING: There is a matching C declaration of this subprogram in fe.h\n+\n    function Corresponding_Unsigned_Type (Typ : Entity_Id) return Entity_Id;\n    --  Typ is a signed integer subtype. This routine returns the standard\n    --  unsigned type with the same Esize as the implementation base type of\n@@ -123,6 +127,8 @@ package Sem_Aux is\n    --  When called on a private type with unknown discriminants, the function\n    --  always returns Empty.\n \n+   --  WARNING: There is a matching C declaration of this subprogram in fe.h\n+\n    function First_Stored_Discriminant (Typ : Entity_Id) return Entity_Id;\n    --  Typ is a type with discriminants. Gives the first discriminant stored\n    --  in an object of this type. In many cases, these are the same as the\n@@ -146,11 +152,15 @@ package Sem_Aux is\n    --  discriminants from Gigi's standpoint, i.e. those that will be stored in\n    --  actual objects of the type.\n \n+   --  WARNING: There is a matching C declaration of this subprogram in fe.h\n+\n    function First_Subtype (Typ : Entity_Id) return Entity_Id;\n    --  Applies to all types and subtypes. For types, yields the first subtype\n    --  of the type. For subtypes, yields the first subtype of the base type of\n    --  the subtype.\n \n+   --  WARNING: There is a matching C declaration of this subprogram in fe.h\n+\n    function First_Tag_Component (Typ : Entity_Id) return Entity_Id;\n    --  Typ must be a tagged record type. This function returns the Entity for\n    --  the first _Tag field in the record type.\n@@ -317,6 +327,8 @@ package Sem_Aux is\n    --  Ent is any entity. Returns True if Ent is a type entity where the type\n    --  is required to be passed by reference, as defined in (RM 6.2(4-9)).\n \n+   --  WARNING: There is a matching C declaration of this subprogram in fe.h\n+\n    function Is_Definite_Subtype (T : Entity_Id) return Boolean;\n    --  T is a type entity. Returns True if T is a definite subtype.\n    --  Indefinite subtypes are unconstrained arrays, unconstrained\n@@ -329,6 +341,8 @@ package Sem_Aux is\n    --  Determines if the given entity Ent is a derived type. Result is always\n    --  false if argument is not a type.\n \n+   --  WARNING: There is a matching C declaration of this subprogram in fe.h\n+\n    function Is_Generic_Formal (E : Entity_Id) return Boolean;\n    --  Determine whether E is a generic formal parameter. In particular this is\n    --  used to set the visibility of generic formals of a generic package"}, {"sha": "0a2bc64c2a1919879af0e33b8264cc1e82b8c42a", "filename": "gcc/ada/sem_eval.ads", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c7732bbe382b982e60eb9d606752d012159d1a18/gcc%2Fada%2Fsem_eval.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c7732bbe382b982e60eb9d606752d012159d1a18/gcc%2Fada%2Fsem_eval.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_eval.ads?ref=c7732bbe382b982e60eb9d606752d012159d1a18", "patch": "@@ -224,6 +224,8 @@ package Sem_Eval is\n    --  efficient with compile time known values, e.g. range analysis for the\n    --  purpose of removing checks is more effective if we know precise bounds.\n \n+   --  WARNING: There is a matching C declaration of this subprogram in fe.h\n+\n    function Compile_Time_Known_Value_Or_Aggr (Op : Node_Id) return Boolean;\n    --  Similar to Compile_Time_Known_Value, but also returns True if the value\n    --  is a compile-time-known aggregate, i.e. an aggregate all of whose\n@@ -412,6 +414,8 @@ package Sem_Eval is\n    --  for compile time evaluation purposes. Use Compile_Time_Known_Value\n    --  instead (see section on \"Compile-Time Known Values\" above).\n \n+   --  WARNING: There is a matching C declaration of this subprogram in fe.h\n+\n    function Is_OK_Static_Range (N : Node_Id) return Boolean;\n    --  Determines if range is static, as defined in RM 4.9(26), and also checks\n    --  that neither bound of the range raises constraint error, thus ensuring"}, {"sha": "ace843ed34eb761ae2cff1a7873ae84ccb7f63e0", "filename": "gcc/ada/sem_util.ads", "status": "modified", "additions": 22, "deletions": 8, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c7732bbe382b982e60eb9d606752d012159d1a18/gcc%2Fada%2Fsem_util.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c7732bbe382b982e60eb9d606752d012159d1a18/gcc%2Fada%2Fsem_util.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.ads?ref=c7732bbe382b982e60eb9d606752d012159d1a18", "patch": "@@ -566,6 +566,8 @@ package Sem_Util is\n    --  debugging information, generated through Qualify_Entity_Names, and\n    --  the loop declaration must be placed in the table Name_Qualify_Units.\n \n+   --  WARNING: There is a matching C declaration of this subprogram in fe.h\n+\n    function Denotes_Discriminant\n      (N                : Node_Id;\n       Check_Concurrent : Boolean := False) return Boolean;\n@@ -901,6 +903,8 @@ package Sem_Util is\n    --  Note that the value returned is always the expression (not the\n    --  N_Parameter_Association nodes, even if named association is used).\n \n+   --  WARNING: There is a matching C declaration of this subprogram in fe.h\n+\n    function First_Global\n      (Subp        : Entity_Id;\n       Global_Mode : Name_Id;\n@@ -1526,6 +1530,8 @@ package Sem_Util is\n    --  Determine whether arbitrary node N denotes a reference to an atomic\n    --  object as per Ada RM C.6(12).\n \n+   --  WARNING: There is a matching C declaration of this subprogram in fe.h\n+\n    function Is_Atomic_Object_Entity (Id : Entity_Id) return Boolean;\n    --  Determine whether arbitrary entity Id denotes an atomic object as per\n    --  Ada RM C.6(12).\n@@ -2062,6 +2068,8 @@ package Sem_Util is\n    function Is_Variable_Size_Record (E : Entity_Id) return Boolean;\n    --  Returns true if E has variable size components\n \n+   --  WARNING: There is a matching C declaration of this subprogram in fe.h\n+\n    function Is_Variable\n      (N                 : Node_Id;\n       Use_Original_Node : Boolean := True) return Boolean;\n@@ -2093,6 +2101,8 @@ package Sem_Util is\n    --  for something actually declared as volatile, not for an object that gets\n    --  treated as volatile (see Einfo.Treat_As_Volatile).\n \n+   --  WARNING: There is a matching C declaration of this subprogram in fe.h\n+\n    generic\n       with procedure Handle_Parameter (Formal : Entity_Id; Actual : Node_Id);\n    procedure Iterate_Call_Parameters (Call : Node_Id);\n@@ -2361,11 +2371,6 @@ package Sem_Util is\n    --  when the resulting entity does not have to be referenced as a\n    --  public entity (and in this case Is_Public is not set).\n \n-   procedure Next_Actual (Actual_Id : in out Node_Id);\n-   pragma Inline (Next_Actual);\n-   --  Next_Actual (N) is equivalent to N := Next_Actual (N). Note that we\n-   --  inline this procedural form, but not the functional form that follows.\n-\n    function Next_Actual (Actual_Id : Node_Id) return Node_Id;\n    --  Find next actual parameter in declaration order. As described for\n    --  First_Actual, this is the next actual in the declaration order, not\n@@ -2375,16 +2380,23 @@ package Sem_Util is\n    --  Note that the result produced is always an expression, not a parameter\n    --  association node, even if named notation was used.\n \n-   procedure Next_Global (Node : in out Node_Id);\n+   --  WARNING: There is a matching C declaration of this subprogram in fe.h\n+\n+   procedure Next_Actual (Actual_Id : in out Node_Id);\n    pragma Inline (Next_Actual);\n-   --  Next_Global (N) is equivalent to N := Next_Global (N). Note that we\n-   --  inline this procedural form, but not the functional form that follows.\n+   --  Next_Actual (N) is equivalent to N := Next_Actual (N). Note that we\n+   --  inline this procedural form, but not the functional form above.\n \n    function Next_Global (Node : Node_Id) return Node_Id;\n    --  Node is a global item from a list, obtained through calling First_Global\n    --  and possibly Next_Global a number of times. Returns the next global item\n    --  with the same mode.\n \n+   procedure Next_Global (Node : in out Node_Id);\n+   pragma Inline (Next_Actual);\n+   --  Next_Global (N) is equivalent to N := Next_Global (N). Note that we\n+   --  inline this procedural form, but not the functional form above.\n+\n    function No_Caching_Enabled (Id : Entity_Id) return Boolean;\n    --  Given the entity of a variable, determine whether Id is subject to\n    --  volatility property No_Caching and if it is, the related expression\n@@ -2588,6 +2600,8 @@ package Sem_Util is\n    --  controlled types and variable-sized types including unconstrained\n    --  arrays.\n \n+   --  WARNING: There is a matching C declaration of this subprogram in fe.h\n+\n    procedure Reset_Analyzed_Flags (N : Node_Id);\n    --  Reset the Analyzed flags in all nodes of the tree whose root is N\n "}, {"sha": "c64a76f019ca6eca3c91936f62456207950f59a9", "filename": "gcc/ada/sinfo.ads", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c7732bbe382b982e60eb9d606752d012159d1a18/gcc%2Fada%2Fsinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c7732bbe382b982e60eb9d606752d012159d1a18/gcc%2Fada%2Fsinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsinfo.ads?ref=c7732bbe382b982e60eb9d606752d012159d1a18", "patch": "@@ -10343,6 +10343,8 @@ package Sinfo is\n    --  tree pointers (List1-4), the parent pointer of the Val node is set to\n    --  point back to node N. This automates the setting of the parent pointer.\n \n+   --  WARNING: There is a matching C declaration of a few subprograms in fe.h\n+\n    procedure Set_Abort_Present\n      (N : Node_Id; Val : Boolean := True);    -- Flag15\n \n@@ -11458,6 +11460,8 @@ package Sinfo is\n    --  returns the location of the IF token in the END IF sequence by\n    --  translating the value of the End_Span field.\n \n+   --  WARNING: There is a matching C declaration of this subprogram in fe.h\n+\n    procedure Set_End_Location (N : Node_Id; S : Source_Ptr);\n    --  N is an N_If_Statement or N_Case_Statement node. This procedure sets\n    --  the End_Span field to correspond to the given value S. In other words,"}, {"sha": "c968eed98b4425933f230d36758f31935871dc12", "filename": "gcc/ada/sinput.ads", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c7732bbe382b982e60eb9d606752d012159d1a18/gcc%2Fada%2Fsinput.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c7732bbe382b982e60eb9d606752d012159d1a18/gcc%2Fada%2Fsinput.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsinput.ads?ref=c7732bbe382b982e60eb9d606752d012159d1a18", "patch": "@@ -293,6 +293,8 @@ package Sinput is\n    --  will be 1 since system.ads is read first.\n \n    function Debug_Source_Name (S : SFI) return File_Name_Type;\n+   --  WARNING: There is a matching C declaration of this subprogram in fe.h\n+\n    function File_Name         (S : SFI) return File_Name_Type;\n    function File_Type         (S : SFI) return Type_Of_File;\n    function First_Mapped_Line (S : SFI) return Logical_Line_Number;\n@@ -532,6 +534,8 @@ package Sinput is\n    --  determined and returned. Tab characters if present are assumed to\n    --  represent the standard 1,9,17.. spacing pattern.\n \n+   --  WARNING: There is a matching C declaration of this subprogram in fe.h\n+\n    function Get_Logical_Line_Number\n      (P : Source_Ptr) return Logical_Line_Number;\n    --  The line number of the specified source position is obtained by\n@@ -543,6 +547,8 @@ package Sinput is\n    --  reference pragmas have been encountered, the value returned is\n    --  the same as the physical line number.\n \n+   --  WARNING: There is a matching C declaration of this subprogram in fe.h\n+\n    function Get_Logical_Line_Number_Img\n      (P : Source_Ptr) return String;\n    --  Same as above function, but returns the line number as a string of\n@@ -561,6 +567,8 @@ package Sinput is\n    --  value. This call must always succeed, since any valid source pointer\n    --  value belongs to some previously loaded source file.\n \n+   --  WARNING: There is a matching C declaration of this subprogram in fe.h\n+\n    function Instantiation_Depth (S : Source_Ptr) return Nat;\n    --  Determine instantiation depth for given Sloc value. A value of\n    --  zero means that the given Sloc is not in an instantiation."}, {"sha": "2ceb20cf38642fd2d89465e8d61406d576c1e477", "filename": "gcc/ada/stringt.ads", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c7732bbe382b982e60eb9d606752d012159d1a18/gcc%2Fada%2Fstringt.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c7732bbe382b982e60eb9d606752d012159d1a18/gcc%2Fada%2Fstringt.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fstringt.ads?ref=c7732bbe382b982e60eb9d606752d012159d1a18", "patch": "@@ -42,6 +42,9 @@ package Stringt is\n --  additional string constants generated by compile time concatenation and\n --  other similar processing.\n \n+--  WARNING: There is a C version of this package. Any changes to this\n+--  source file must be properly reflected in the C header file stringt.h\n+\n --  A string constant in this table consists of a series of Char_Code values,\n --  so that 16-bit character codes can be properly handled if this feature\n --  is implemented in the scanner."}, {"sha": "911c61badf4dbbae6ff45ea79ac2117e1c3dddd1", "filename": "gcc/ada/stringt.h", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c7732bbe382b982e60eb9d606752d012159d1a18/gcc%2Fada%2Fstringt.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c7732bbe382b982e60eb9d606752d012159d1a18/gcc%2Fada%2Fstringt.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fstringt.h?ref=c7732bbe382b982e60eb9d606752d012159d1a18", "patch": "@@ -23,8 +23,10 @@\n  *                                                                          *\n  ****************************************************************************/\n \n-/* This file is the C file that corresponds to the Ada package spec\n-   Stringt. It was created manually from stringt.ads and stringt.adb\n+/* This is the C header that corresponds to the Ada package specification for\n+   Stringt.  It also contains the implementations of inlined functions from the\n+   package body for Stringt.  It was created manually from stringt.ads and\n+   stringt.adb and must be kept synchronized with changes in these files.\n \n    Note: only the access functions are provided, since the tree transformer\n    is not allowed to modify the tree or its auxiliary structures."}, {"sha": "d9465b5c3a13b700c1e29beba994dd9910d60d88", "filename": "gcc/ada/targparm.ads", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c7732bbe382b982e60eb9d606752d012159d1a18/gcc%2Fada%2Ftargparm.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c7732bbe382b982e60eb9d606752d012159d1a18/gcc%2Fada%2Ftargparm.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ftargparm.ads?ref=c7732bbe382b982e60eb9d606752d012159d1a18", "patch": "@@ -455,12 +455,16 @@ package Targparm is\n    Stack_Check_Probes_On_Target : Boolean := False;\n    --  Indicates if the GCC probing mechanism is used\n \n+   --  WARNING: There is a matching C declaration of this variable in fe.h\n+\n    Stack_Check_Limits_On_Target : Boolean := False;\n    --  Indicates if the GCC stack-limit mechanism is used\n \n    --  Both flags cannot be simultaneously set to True. If neither\n    --  is, the target independent fallback method is used.\n \n+   --  WARNING: There is a matching C declaration of this variable in fe.h\n+\n    Stack_Check_Default_On_Target : Boolean := False;\n    --  Indicates if stack checking is on by default\n \n@@ -536,9 +540,13 @@ package Targparm is\n    Machine_Overflows_On_Target : Boolean := False;\n    --  Set to True for targets where S'Machine_Overflows is True\n \n+   --  WARNING: There is a matching C declaration of this variable in fe.h\n+\n    Signed_Zeros_On_Target : Boolean := True;\n    --  Set to False on targets that do not reliably support signed zeros\n \n+   --  WARNING: There is a matching C declaration of this variable in fe.h\n+\n    -------------------------------------------\n    -- Boolean-Valued Fixed-Point Attributes --\n    -------------------------------------------"}, {"sha": "e649c4e5558e18e366c6fd54072d57cadb8c8091", "filename": "gcc/ada/types.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c7732bbe382b982e60eb9d606752d012159d1a18/gcc%2Fada%2Ftypes.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c7732bbe382b982e60eb9d606752d012159d1a18/gcc%2Fada%2Ftypes.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ftypes.ads?ref=c7732bbe382b982e60eb9d606752d012159d1a18", "patch": "@@ -38,7 +38,7 @@\n --  would have to be dealt with.\n \n --  WARNING: There is a C version of this package. Any changes to this source\n---  file must be properly reflected in the C header file types.h declarations.\n+--  file must be properly reflected in the C header file types.h\n \n --  Note: the declarations in this package reflect an expectation that the host\n --  machine has an efficient integer base type with a range at least 32 bits"}, {"sha": "a87340d6edd30b1244f8f73ff94126d37565a427", "filename": "gcc/ada/types.h", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c7732bbe382b982e60eb9d606752d012159d1a18/gcc%2Fada%2Ftypes.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c7732bbe382b982e60eb9d606752d012159d1a18/gcc%2Fada%2Ftypes.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ftypes.h?ref=c7732bbe382b982e60eb9d606752d012159d1a18", "patch": "@@ -23,8 +23,9 @@\n  *                                                                          *\n  ****************************************************************************/\n \n-/* This is the C file that corresponds to the Ada package spec Types. It was\n-   created manually from the files types.ads and types.adb.\n+/* This is the C header that corresponds to the Ada package specification for\n+   Types.  It was created manually from types.ads and must be kept synchronized\n+   with changes in this file.\n \n    This package contains host independent type definitions which are used\n    throughout the compiler modules. The comments in the C version are brief\n@@ -306,6 +307,9 @@ typedef Int Unit_Number_Type;\n /* Unit number value for main unit.  */\n #define Main_Unit 0\n \n+/* Type used to index the source file table.  */\n+typedef Nat Source_File_Index;\n+\n /* Type used for lines table.  */\n typedef Source_Ptr *Lines_Table_Type;\n "}, {"sha": "ed106efb87d1ddf05ce35917c7095f1b26bc30a0", "filename": "gcc/ada/uintp.h", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c7732bbe382b982e60eb9d606752d012159d1a18/gcc%2Fada%2Fuintp.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c7732bbe382b982e60eb9d606752d012159d1a18/gcc%2Fada%2Fuintp.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fuintp.h?ref=c7732bbe382b982e60eb9d606752d012159d1a18", "patch": "@@ -23,8 +23,9 @@\n  *                                                                          *\n  ****************************************************************************/\n \n-/* This file corresponds to the Ada package specification Uintp.  It was\n-   created manually from the files uintp.ads and uintp.adb.  */\n+/* This is the C header that corresponds to the Ada package specification for\n+   Uintp.  It was created manually from uintp.ads and must be kept synchronized\n+   with changes in this file.  */\n \n #ifdef __cplusplus\n extern \"C\" {"}, {"sha": "55a82f22628269704160d070fdc6506885212f1a", "filename": "gcc/ada/urealp.ads", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c7732bbe382b982e60eb9d606752d012159d1a18/gcc%2Fada%2Furealp.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c7732bbe382b982e60eb9d606752d012159d1a18/gcc%2Fada%2Furealp.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Furealp.ads?ref=c7732bbe382b982e60eb9d606752d012159d1a18", "patch": "@@ -31,6 +31,9 @@\n \n --  Support for universal real arithmetic\n \n+--  WARNING: There is a C version of this package. Any changes to this\n+--  source file must be properly reflected in the C header file urealp.h\n+\n with Types; use Types;\n with Uintp; use Uintp;\n "}, {"sha": "ab8656b0a6153a6ef8ac3cf7553a0fd5bd673bd5", "filename": "gcc/ada/urealp.h", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c7732bbe382b982e60eb9d606752d012159d1a18/gcc%2Fada%2Furealp.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c7732bbe382b982e60eb9d606752d012159d1a18/gcc%2Fada%2Furealp.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Furealp.h?ref=c7732bbe382b982e60eb9d606752d012159d1a18", "patch": "@@ -23,8 +23,9 @@\n  *                                                                          *\n  ****************************************************************************/\n \n-/* This file corresponds to the Ada package specification Urealp.  It was\n-   created manually from the files urealp.ads and urealp.adb.  */\n+/* This is the C header that corresponds to the Ada package specification for\n+   Urealp.  It was created manually from urealp.ads and must be kept\n+   synchronized with changes in this file.  */\n \n #ifdef __cplusplus\n extern \"C\" {"}, {"sha": "c82f36d743182e93ee318c87894e29bf69c5d5cc", "filename": "gcc/ada/warnsw.ads", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c7732bbe382b982e60eb9d606752d012159d1a18/gcc%2Fada%2Fwarnsw.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c7732bbe382b982e60eb9d606752d012159d1a18/gcc%2Fada%2Fwarnsw.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fwarnsw.ads?ref=c7732bbe382b982e60eb9d606752d012159d1a18", "patch": "@@ -63,6 +63,8 @@ package Warnsw is\n    --  efficiency reasons and would be improved by reordering the components.\n    --  Off by default, modified by use of -gnatw.q/.Q (but not -gnatwa).\n \n+   --  WARNING: There is a matching C declaration of this variable in fe.h\n+\n    Warn_On_Record_Holes : Boolean := False;\n    --  Warn when explicit record component clauses leave uncovered holes (gaps)\n    --  in a record layout. Off by default, set by -gnatw.h (but not -gnatwa)."}]}