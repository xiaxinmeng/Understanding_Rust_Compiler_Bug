{"sha": "509bb9b647516bbf6af77778d2ffe7e756be26df", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTA5YmI5YjY0NzUxNmJiZjZhZjc3Nzc4ZDJmZmU3ZTc1NmJlMjZkZg==", "commit": {"author": {"name": "Richard Sandiford", "email": "richard.sandiford@linaro.org", "date": "2018-01-09T14:31:25Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2018-01-09T14:31:25Z"}, "message": "[AArch64] Reject (high (const (plus anchor offset)))\n\nThe aarch64_legitimate_constant_p tests for HIGH and CONST seem\nto be the wrong way round: (high (const ...)) is valid rtl that\ncould be passed in, but (const (high ...)) isn't.  As it stands,\nwe disallow anchor+offset but allow (high anchor+offset).\n\n2018-01-09  Richard Sandiford  <richard.sandiford@linaro.org>\n\ngcc/\n\t* config/aarch64/aarch64.c (aarch64_legitimate_constant_p): Fix\n\torder of HIGH and CONST checks.\n\nFrom-SVN: r256384", "tree": {"sha": "988f7d6b12c07b237320541649d1abc670a59c9e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/988f7d6b12c07b237320541649d1abc670a59c9e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/509bb9b647516bbf6af77778d2ffe7e756be26df", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/509bb9b647516bbf6af77778d2ffe7e756be26df", "html_url": "https://github.com/Rust-GCC/gccrs/commit/509bb9b647516bbf6af77778d2ffe7e756be26df", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/509bb9b647516bbf6af77778d2ffe7e756be26df/comments", "author": null, "committer": null, "parents": [{"sha": "7ad429a4de1197b4b032da0981a2c91ac5d0dd06", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7ad429a4de1197b4b032da0981a2c91ac5d0dd06", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7ad429a4de1197b4b032da0981a2c91ac5d0dd06"}], "stats": {"total": 11, "additions": 8, "deletions": 3}, "files": [{"sha": "5ffba6348bcea884c38d889edcefab6b80a52e24", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/509bb9b647516bbf6af77778d2ffe7e756be26df/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/509bb9b647516bbf6af77778d2ffe7e756be26df/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=509bb9b647516bbf6af77778d2ffe7e756be26df", "patch": "@@ -1,3 +1,8 @@\n+2018-01-09  Richard Sandiford  <richard.sandiford@linaro.org>\n+\n+\t* config/aarch64/aarch64.c (aarch64_legitimate_constant_p): Fix\n+\torder of HIGH and CONST checks.\n+\n 2018-01-09  Richard Sandiford  <richard.sandiford@linaro.org>\n \n \t* tree-vect-stmts.c (permute_vec_elements): Create a fresh variable"}, {"sha": "e129362ef66796f5a185d41518b5b11393fa4b41", "filename": "gcc/config/aarch64/aarch64.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/509bb9b647516bbf6af77778d2ffe7e756be26df/gcc%2Fconfig%2Faarch64%2Faarch64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/509bb9b647516bbf6af77778d2ffe7e756be26df/gcc%2Fconfig%2Faarch64%2Faarch64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64.c?ref=509bb9b647516bbf6af77778d2ffe7e756be26df", "patch": "@@ -10449,6 +10449,9 @@ aarch64_legitimate_constant_p (machine_mode mode, rtx x)\n   if (CONST_WIDE_INT_P (x))\n     return false;\n \n+  if (GET_CODE (x) == HIGH)\n+    x = XEXP (x, 0);\n+\n   /* Do not allow const (plus (anchor_symbol, const_int)).  */\n   if (GET_CODE (x) == CONST)\n     {\n@@ -10460,9 +10463,6 @@ aarch64_legitimate_constant_p (machine_mode mode, rtx x)\n \treturn false;\n     }\n \n-  if (GET_CODE (x) == HIGH)\n-    x = XEXP (x, 0);\n-\n   /* Treat symbols as constants.  Avoid TLS symbols as they are complex,\n      so spilling them is better than rematerialization.  */\n   if (SYMBOL_REF_P (x) && !SYMBOL_REF_TLS_MODEL (x))"}]}