{"sha": "01cd0938b55019565dd76224d0b20edfbd496cc6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDFjZDA5MzhiNTUwMTk1NjVkZDc2MjI0ZDBiMjBlZGZiZDQ5NmNjNg==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-04-17T12:36:38Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-04-17T12:36:38Z"}, "message": "[multiple changes]\n\n2009-04-17  Robert Dewar  <dewar@adacore.com>\n\n\t* exp_ch5.adb (Expand_Assign_Array): Do not set Forwards_OK and\n\tBackwards_OK if either operand has an address clause.\n\n2009-04-17  Pascal Obry  <obry@adacore.com>\n\n\t* initialize.c: Code clean up, use realloc.\n\nFrom-SVN: r146259", "tree": {"sha": "8e3f5153616f35081215515fe235b0a769bb93a5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8e3f5153616f35081215515fe235b0a769bb93a5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/01cd0938b55019565dd76224d0b20edfbd496cc6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/01cd0938b55019565dd76224d0b20edfbd496cc6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/01cd0938b55019565dd76224d0b20edfbd496cc6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/01cd0938b55019565dd76224d0b20edfbd496cc6/comments", "author": null, "committer": null, "parents": [{"sha": "46e26fe337a12800faa9ef010eebb49266a014f7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/46e26fe337a12800faa9ef010eebb49266a014f7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/46e26fe337a12800faa9ef010eebb49266a014f7"}], "stats": {"total": 51, "additions": 26, "deletions": 25}, "files": [{"sha": "5b8d3a1314bd984cd4ccbbbcac9d4cc9c89c0cd5", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/01cd0938b55019565dd76224d0b20edfbd496cc6/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/01cd0938b55019565dd76224d0b20edfbd496cc6/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=01cd0938b55019565dd76224d0b20edfbd496cc6", "patch": "@@ -1,3 +1,12 @@\n+2009-04-17  Robert Dewar  <dewar@adacore.com>\n+\n+\t* exp_ch5.adb (Expand_Assign_Array): Do not set Forwards_OK and\n+\tBackwards_OK if either operand has an address clause.\n+\n+2009-04-17  Pascal Obry  <obry@adacore.com>\n+\n+\t* initialize.c: Code clean up, use realloc.\n+\n 2009-04-17  Pascal Obry  <obry@adacore.com>\n \n \t* initialize.c: Do not get Unicode command line if Unicode support not"}, {"sha": "c025f5814c464c274f4b25bd0470a71b00f1f9d8", "filename": "gcc/ada/exp_ch5.adb", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/01cd0938b55019565dd76224d0b20edfbd496cc6/gcc%2Fada%2Fexp_ch5.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/01cd0938b55019565dd76224d0b20edfbd496cc6/gcc%2Fada%2Fexp_ch5.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch5.adb?ref=01cd0938b55019565dd76224d0b20edfbd496cc6", "patch": "@@ -308,6 +308,19 @@ package body Exp_Ch5 is\n          --  can be performed directly.\n       end if;\n \n+      --  If either operand has an address clause clear Backwards_OK and\n+      --  Forwards_OK, since we cannot tell if the operands overlap.\n+\n+      if (Is_Entity_Name (Lhs)\n+           and then Present (Address_Clause (Entity (Lhs))))\n+        or else\n+         (Is_Entity_Name (Lhs)\n+          and then Present (Address_Clause (Entity (Lhs))))\n+      then\n+         Set_Forwards_OK  (N, False);\n+         Set_Backwards_OK (N, False);\n+      end if;\n+\n       --  We certainly must use a loop for change of representation and also\n       --  we use the operand of the conversion on the right hand side as the\n       --  effective right hand side (the component types must match in this"}, {"sha": "5a1417b927dfd45c13bd361b699061d3ff04a851", "filename": "gcc/ada/initialize.c", "status": "modified", "additions": 4, "deletions": 25, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/01cd0938b55019565dd76224d0b20edfbd496cc6/gcc%2Fada%2Finitialize.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/01cd0938b55019565dd76224d0b20edfbd496cc6/gcc%2Fada%2Finitialize.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Finitialize.c?ref=01cd0938b55019565dd76224d0b20edfbd496cc6", "patch": "@@ -45,6 +45,7 @@\n #include \"tsystem.h\"\n /* We don't have libiberty, so use malloc.  */\n #define xmalloc(S) malloc (S)\n+#define xrealloc(V,S) realloc (V,S)\n #else\n #include \"config.h\"\n #include \"system.h\"\n@@ -83,17 +84,8 @@ append_arg (int *index, LPWSTR value, char ***argv, int *last)\n \n   if (*last < *index)\n     {\n-      char **old_argv = *argv;\n-      int old_last = *last;\n-      int k;\n-\n       *last += EXPAND_ARGV_RATE;\n-      *argv = (char **) xmalloc ((*last) * sizeof (char *));\n-\n-      for (k=0; k<=old_last; k++)\n-\t(*argv)[k] = old_argv[k];\n-\n-      free (old_argv);\n+      *argv = (char **) xrealloc (*argv, (*last) * sizeof (char *));\n     }\n \n   size = WS2SC (NULL, value, 0);\n@@ -102,20 +94,6 @@ append_arg (int *index, LPWSTR value, char ***argv, int *last)\n \n   (*index)++;\n }\n-\n-static void\n-adjust_arg (int last, char ***argv)\n-{\n-  char **old_argv = *argv;\n-  int k;\n-\n-  *argv = (char **) xmalloc (last * sizeof (char *));\n-\n-  for (k=0; k<last; k++)\n-    (*argv)[k] = old_argv[k];\n-\n-  free (old_argv);\n-}\n #endif\n \n void\n@@ -200,7 +178,8 @@ __gnat_initialize (void *eh)\n \n \t LocalFree (wargv);\n \t gnat_argc = argc_expanded;\n-\t adjust_arg (argc_expanded, &gnat_argv);\n+\t gnat_argv = (char **) xrealloc\n+\t   (gnat_argv, argc_expanded * sizeof (char *));\n        }\n    }\n #endif"}]}