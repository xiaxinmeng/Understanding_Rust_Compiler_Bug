{"sha": "5be245e44f75397ba823f107549f106dcaa9cdf3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWJlMjQ1ZTQ0Zjc1Mzk3YmE4MjNmMTA3NTQ5ZjEwNmRjYWE5Y2RmMw==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@cs.umass.edu", "date": "2005-03-19T18:01:19Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2005-03-19T18:01:19Z"}, "message": "builtins.c (fold_trunc_transparent_mathfn): Take decomposed arguments of CALL_EXPR.\n\n\t* builtins.c (fold_trunc_transparent_mathfn): Take decomposed\n\targuments of CALL_EXPR.\n\t(fold_builtin_trunc, fold_builtin_floor, fold_builtin_ceil,\n\tfold_builtin_found, fold_builtin_1): Update calls to\n\tfold_trunc_transparent_mathfn.\n\nFrom-SVN: r96736", "tree": {"sha": "dab884a8e07353dc0308201b13409a195921ef5b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dab884a8e07353dc0308201b13409a195921ef5b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5be245e44f75397ba823f107549f106dcaa9cdf3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5be245e44f75397ba823f107549f106dcaa9cdf3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5be245e44f75397ba823f107549f106dcaa9cdf3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5be245e44f75397ba823f107549f106dcaa9cdf3/comments", "author": null, "committer": null, "parents": [{"sha": "6e5b9693fe084e6fc15f9b3822ef96263c3e9eca", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6e5b9693fe084e6fc15f9b3822ef96263c3e9eca", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6e5b9693fe084e6fc15f9b3822ef96263c3e9eca"}], "stats": {"total": 22, "additions": 13, "deletions": 9}, "files": [{"sha": "7b537beead25d79695978178cc348f546f6f08ed", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5be245e44f75397ba823f107549f106dcaa9cdf3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5be245e44f75397ba823f107549f106dcaa9cdf3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5be245e44f75397ba823f107549f106dcaa9cdf3", "patch": "@@ -5,6 +5,12 @@\n \t(expand_builtin_memcpy, fold_builtin_1): Update calls to\n \tfold_builtin_memcpy.\n \n+\t* builtins.c (fold_trunc_transparent_mathfn): Take decomposed\n+\targuments of CALL_EXPR.\n+\t(fold_builtin_trunc, fold_builtin_floor, fold_builtin_ceil,\n+\tfold_builtin_found, fold_builtin_1): Update calls to\n+\tfold_trunc_transparent_mathfn.\n+\n 2005-03-19  John David Anglin  <dave.anglin@nrc-cnrc.gc.ca>\n \n \tPR middle-end/20493"}, {"sha": "7ed97fb7bf3b1f23e5ce0e697fd644dcd929ec0d", "filename": "gcc/builtins.c", "status": "modified", "additions": 7, "deletions": 9, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5be245e44f75397ba823f107549f106dcaa9cdf3/gcc%2Fbuiltins.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5be245e44f75397ba823f107549f106dcaa9cdf3/gcc%2Fbuiltins.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbuiltins.c?ref=5be245e44f75397ba823f107549f106dcaa9cdf3", "patch": "@@ -144,7 +144,7 @@ static tree fold_builtin_inf (tree, int);\n static tree fold_builtin_nan (tree, tree, int);\n static int validate_arglist (tree, ...);\n static bool integer_valued_real_p (tree);\n-static tree fold_trunc_transparent_mathfn (tree);\n+static tree fold_trunc_transparent_mathfn (tree, tree);\n static bool readonly_data_expr (tree);\n static rtx expand_builtin_fabs (tree, rtx, rtx);\n static rtx expand_builtin_signbit (tree, rtx);\n@@ -6069,10 +6069,8 @@ integer_valued_real_p (tree t)\n    Do the transformation.  */\n \n static tree\n-fold_trunc_transparent_mathfn (tree exp)\n+fold_trunc_transparent_mathfn (tree fndecl, tree arglist)\n {\n-  tree fndecl = get_callee_fndecl (exp);\n-  tree arglist = TREE_OPERAND (exp, 1);\n   enum built_in_function fcode = DECL_FUNCTION_CODE (fndecl);\n   tree arg;\n \n@@ -6524,7 +6522,7 @@ fold_builtin_trunc (tree exp)\n       return build_real (type, r);\n     }\n \n-  return fold_trunc_transparent_mathfn (exp);\n+  return fold_trunc_transparent_mathfn (fndecl, arglist);\n }\n \n /* Fold function call to builtin floor, floorf or floorl.  Return\n@@ -6557,7 +6555,7 @@ fold_builtin_floor (tree exp)\n \t}\n     }\n \n-  return fold_trunc_transparent_mathfn (exp);\n+  return fold_trunc_transparent_mathfn (fndecl, arglist);\n }\n \n /* Fold function call to builtin ceil, ceilf or ceill.  Return\n@@ -6590,7 +6588,7 @@ fold_builtin_ceil (tree exp)\n \t}\n     }\n \n-  return fold_trunc_transparent_mathfn (exp);\n+  return fold_trunc_transparent_mathfn (fndecl, arglist);\n }\n \n /* Fold function call to builtin round, roundf or roundl.  Return\n@@ -6623,7 +6621,7 @@ fold_builtin_round (tree exp)\n \t}\n     }\n \n-  return fold_trunc_transparent_mathfn (exp);\n+  return fold_trunc_transparent_mathfn (fndecl, arglist);\n }\n \n /* Fold function call to builtin lround, lroundf or lroundl (or the\n@@ -8198,7 +8196,7 @@ fold_builtin_1 (tree exp, bool ignore)\n     case BUILT_IN_RINT:\n     case BUILT_IN_RINTF:\n     case BUILT_IN_RINTL:\n-      return fold_trunc_transparent_mathfn (exp);\n+      return fold_trunc_transparent_mathfn (fndecl, arglist);\n \n     case BUILT_IN_LROUND:\n     case BUILT_IN_LROUNDF:"}]}