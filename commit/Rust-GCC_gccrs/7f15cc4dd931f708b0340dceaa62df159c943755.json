{"sha": "7f15cc4dd931f708b0340dceaa62df159c943755", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2YxNWNjNGRkOTMxZjcwOGIwMzQwZGNlYWE2MmRmMTU5Yzk0Mzc1NQ==", "commit": {"author": {"name": "Kugan Vivekanandarajah", "email": "kuganv@linaro.org", "date": "2018-07-18T22:11:24Z"}, "committer": {"name": "Kugan Vivekanandarajah", "email": "kugan@gcc.gnu.org", "date": "2018-07-18T22:11:24Z"}, "message": "re PR tree-optimization/86544 (Popcount detection generates different code on C and C++)\n\ngcc/ChangeLog:\n\n2018-07-18  Kugan Vivekanandarajah  <kuganv@linaro.org>\n\n\tPR middle-end/86544\n\t* tree-ssa-phiopt.c (cond_removal_in_popcount_pattern): Handle comparision with EQ_EXPR\n\tin last stmt.\n\ngcc/testsuite/ChangeLog:\n\n2018-07-18  Kugan Vivekanandarajah  <kuganv@linaro.org>\n\n\tPR middle-end/86544\n\t* g++.dg/tree-ssa/pr86544.C: New test.\n\nFrom-SVN: r262864", "tree": {"sha": "39a34260c1a873c0a2b66b49fe543988e78c6615", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/39a34260c1a873c0a2b66b49fe543988e78c6615"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7f15cc4dd931f708b0340dceaa62df159c943755", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7f15cc4dd931f708b0340dceaa62df159c943755", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7f15cc4dd931f708b0340dceaa62df159c943755", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7f15cc4dd931f708b0340dceaa62df159c943755/comments", "author": null, "committer": null, "parents": [{"sha": "d46d010b770bfdfbc166a555e96f38bc8bf9d2a4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d46d010b770bfdfbc166a555e96f38bc8bf9d2a4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d46d010b770bfdfbc166a555e96f38bc8bf9d2a4"}], "stats": {"total": 52, "additions": 41, "deletions": 11}, "files": [{"sha": "b34ae544a7e867047b24f48760a32793d3eb7b95", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7f15cc4dd931f708b0340dceaa62df159c943755/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7f15cc4dd931f708b0340dceaa62df159c943755/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7f15cc4dd931f708b0340dceaa62df159c943755", "patch": "@@ -1,3 +1,9 @@\n+2018-07-18  Kugan Vivekanandarajah  <kuganv@linaro.org>\n+\n+\tPR middle-end/86544\n+\t* tree-ssa-phiopt.c (cond_removal_in_popcount_pattern): Handle comparision with EQ_EXPR\n+\tin last stmt.\n+\n 2018-07-18  Kelvin Nilsen  <kelvin@gcc.gnu.org>\n \n \t* doc/extend.texi (PowerPC AltiVec Built-in Functions): Rename"}, {"sha": "f0e0825887292fcd06cc03d4daeed421af7f2ee9", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7f15cc4dd931f708b0340dceaa62df159c943755/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7f15cc4dd931f708b0340dceaa62df159c943755/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=7f15cc4dd931f708b0340dceaa62df159c943755", "patch": "@@ -1,3 +1,8 @@\n+2018-07-18  Kugan Vivekanandarajah  <kuganv@linaro.org>\n+\n+\tPR middle-end/86544\n+\t* g++.dg/tree-ssa/pr86544.C: New test.\n+\n 2018-07-18  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c++/86550"}, {"sha": "8a900896e508c1f9b93a6d1ed710cdb1ac82f59e", "filename": "gcc/testsuite/g++.dg/tree-ssa/pr86544.C", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7f15cc4dd931f708b0340dceaa62df159c943755/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-ssa%2Fpr86544.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7f15cc4dd931f708b0340dceaa62df159c943755/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-ssa%2Fpr86544.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-ssa%2Fpr86544.C?ref=7f15cc4dd931f708b0340dceaa62df159c943755", "patch": "@@ -0,0 +1,15 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -fdump-tree-phiopt3 -fdump-tree-optimized\" } */\n+\n+int PopCount (long b) {\n+    int c = 0;\n+\n+    while (b) {\n+\tb &= b - 1;\n+\tc++;\n+    }\n+    return c;\n+}\n+\n+/* { dg-final { scan-tree-dump-times \"__builtin_popcount\" 1 \"optimized\" } } */\n+/* { dg-final { scan-tree-dump-times \"if\" 0 \"phiopt3\" } } */"}, {"sha": "1667bad873b3dff2dca5409a7dc3a09fcad86755", "filename": "gcc/tree-ssa-phiopt.c", "status": "modified", "additions": 15, "deletions": 11, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7f15cc4dd931f708b0340dceaa62df159c943755/gcc%2Ftree-ssa-phiopt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7f15cc4dd931f708b0340dceaa62df159c943755/gcc%2Ftree-ssa-phiopt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-phiopt.c?ref=7f15cc4dd931f708b0340dceaa62df159c943755", "patch": "@@ -1614,8 +1614,22 @@ cond_removal_in_popcount_pattern (basic_block cond_bb, basic_block middle_bb,\n       arg = gimple_assign_rhs1 (cast);\n     }\n \n+  cond = last_stmt (cond_bb);\n+\n+  /* Cond_bb has a check for b_4 [!=|==] 0 before calling the popcount\n+     builtin.  */\n+  if (gimple_code (cond) != GIMPLE_COND\n+      || (gimple_cond_code (cond) != NE_EXPR\n+\t  && gimple_cond_code (cond) != EQ_EXPR)\n+      || !integer_zerop (gimple_cond_rhs (cond))\n+      || arg != gimple_cond_lhs (cond))\n+    return false;\n+\n   /* Canonicalize.  */\n-  if (e2->flags & EDGE_TRUE_VALUE)\n+  if ((e2->flags & EDGE_TRUE_VALUE\n+       && gimple_cond_code (cond) == NE_EXPR)\n+      || (e1->flags & EDGE_TRUE_VALUE\n+\t  && gimple_cond_code (cond) == EQ_EXPR))\n     {\n       std::swap (arg0, arg1);\n       std::swap (e1, e2);\n@@ -1625,16 +1639,6 @@ cond_removal_in_popcount_pattern (basic_block cond_bb, basic_block middle_bb,\n   if (lhs != arg0 || !integer_zerop (arg1))\n     return false;\n \n-  cond = last_stmt (cond_bb);\n-\n-  /* Cond_bb has a check for b_4 != 0 before calling the popcount\n-     builtin.  */\n-  if (gimple_code (cond) != GIMPLE_COND\n-      || gimple_cond_code (cond) != NE_EXPR\n-      || !integer_zerop (gimple_cond_rhs (cond))\n-      || arg != gimple_cond_lhs (cond))\n-    return false;\n-\n   /* And insert the popcount builtin and cast stmt before the cond_bb.  */\n   gsi = gsi_last_bb (cond_bb);\n   if (cast)"}]}