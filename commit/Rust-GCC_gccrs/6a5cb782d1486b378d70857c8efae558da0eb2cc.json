{"sha": "6a5cb782d1486b378d70857c8efae558da0eb2cc", "node_id": "C_kwDOANBUbNoAKDZhNWNiNzgyZDE0ODZiMzc4ZDcwODU3YzhlZmFlNTU4ZGEwZWIyY2M", "commit": {"author": {"name": "Andrew Pinski", "email": "apinski@marvell.com", "date": "2023-02-07T23:09:40Z"}, "committer": {"name": "Andrew Pinski", "email": "apinski@marvell.com", "date": "2023-02-10T01:47:05Z"}, "message": "tree-optimization: [PR108684] ICE in verify_ssa due to simple_dce_from_worklist\n\nIn simple_dce_from_worklist, we were removing an inline-asm which had a vdef.\nWe should not be removing inline-asm which have a vdef as this code\ndoes not check to the store.\nThis fixes that oversight. This was a latent bug exposed recently\nby both VRP and removal of stores to static starting to use\nsimple_dce_from_worklist.\n\nCommitted as approved.\nBootstrapped and tested on x86_64-linux-gnu with no regressions.\n\n\tPR tree-optimization/108684\n\ngcc/ChangeLog:\n\n\t* tree-ssa-dce.cc (simple_dce_from_worklist):\n\tCheck all ssa names and not just non-vdef ones\n\tbefore accepting the inline-asm.\n\tCall unlink_stmt_vdef on the statement before\n\tremoving it.\n\ngcc/testsuite/ChangeLog:\n\n\t* gcc.c-torture/compile/dce-inline-asm-1.c: New test.\n\t* gcc.c-torture/compile/dce-inline-asm-2.c: New test.\n\t* gcc.dg/tree-ssa/pr108684-1.c: New test.\n\nco-authored-by: Andrew Macleod  <amacleod@redhat.com>", "tree": {"sha": "933272dcb4a22f6fa1e468d4a93171c3d860bc61", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/933272dcb4a22f6fa1e468d4a93171c3d860bc61"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6a5cb782d1486b378d70857c8efae558da0eb2cc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6a5cb782d1486b378d70857c8efae558da0eb2cc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6a5cb782d1486b378d70857c8efae558da0eb2cc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6a5cb782d1486b378d70857c8efae558da0eb2cc/comments", "author": {"login": "apinski-cavium", "id": 6335315, "node_id": "MDQ6VXNlcjYzMzUzMTU=", "avatar_url": "https://avatars.githubusercontent.com/u/6335315?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apinski-cavium", "html_url": "https://github.com/apinski-cavium", "followers_url": "https://api.github.com/users/apinski-cavium/followers", "following_url": "https://api.github.com/users/apinski-cavium/following{/other_user}", "gists_url": "https://api.github.com/users/apinski-cavium/gists{/gist_id}", "starred_url": "https://api.github.com/users/apinski-cavium/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apinski-cavium/subscriptions", "organizations_url": "https://api.github.com/users/apinski-cavium/orgs", "repos_url": "https://api.github.com/users/apinski-cavium/repos", "events_url": "https://api.github.com/users/apinski-cavium/events{/privacy}", "received_events_url": "https://api.github.com/users/apinski-cavium/received_events", "type": "User", "site_admin": false}, "committer": {"login": "apinski-cavium", "id": 6335315, "node_id": "MDQ6VXNlcjYzMzUzMTU=", "avatar_url": "https://avatars.githubusercontent.com/u/6335315?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apinski-cavium", "html_url": "https://github.com/apinski-cavium", "followers_url": "https://api.github.com/users/apinski-cavium/followers", "following_url": "https://api.github.com/users/apinski-cavium/following{/other_user}", "gists_url": "https://api.github.com/users/apinski-cavium/gists{/gist_id}", "starred_url": "https://api.github.com/users/apinski-cavium/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apinski-cavium/subscriptions", "organizations_url": "https://api.github.com/users/apinski-cavium/orgs", "repos_url": "https://api.github.com/users/apinski-cavium/repos", "events_url": "https://api.github.com/users/apinski-cavium/events{/privacy}", "received_events_url": "https://api.github.com/users/apinski-cavium/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b9f8935e110c392c21460db838b4209c32f070c2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b9f8935e110c392c21460db838b4209c32f070c2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b9f8935e110c392c21460db838b4209c32f070c2"}], "stats": {"total": 54, "additions": 52, "deletions": 2}, "files": [{"sha": "a9f02e44bd76e44e9359b8ed24f32f60f560aca9", "filename": "gcc/testsuite/gcc.c-torture/compile/dce-inline-asm-1.c", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a5cb782d1486b378d70857c8efae558da0eb2cc/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fdce-inline-asm-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a5cb782d1486b378d70857c8efae558da0eb2cc/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fdce-inline-asm-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fdce-inline-asm-1.c?ref=6a5cb782d1486b378d70857c8efae558da0eb2cc", "patch": "@@ -0,0 +1,15 @@\n+/* PR tree-optimization/108684 */\n+/* This used to ICE as when we remove the store to\n+   `t`, we also would remove the inline-asm which\n+   had a VDEF on it but we didn't update the\n+   VUSE that was later on.  */\n+static int t;\n+\n+int f (int *a)\n+{\n+  int t1;\n+  asm (\" \" : \"=X\" (t1) : : \"memory\");\n+  t = t1;\n+  return *a;\n+}\n+"}, {"sha": "a41b16e4bd0910544012f10c3258635f446984f9", "filename": "gcc/testsuite/gcc.c-torture/compile/dce-inline-asm-2.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a5cb782d1486b378d70857c8efae558da0eb2cc/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fdce-inline-asm-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a5cb782d1486b378d70857c8efae558da0eb2cc/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fdce-inline-asm-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fdce-inline-asm-2.c?ref=6a5cb782d1486b378d70857c8efae558da0eb2cc", "patch": "@@ -0,0 +1,16 @@\n+/* PR tree-optimization/108684 */\n+/* This used to ICE as when we removed the\n+   __builtin_unreachable in VRP, as we\n+   would also remove the branch and the\n+   inline-asm. The inline-asm had a VDEF on it,\n+   which we didn't update further along and\n+   not have the VDEF on the return statement\n+   updated.  */\n+\n+int f (int a)\n+{\n+  asm (\" \" : \"=X\" (a) : : \"memory\");\n+  if (a)\n+    return 0;\n+  __builtin_unreachable();\n+}"}, {"sha": "3ba206f765e2bc8871b9d2270cd9575e9df3f787", "filename": "gcc/testsuite/gcc.dg/tree-ssa/pr108684-1.c", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a5cb782d1486b378d70857c8efae558da0eb2cc/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr108684-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a5cb782d1486b378d70857c8efae558da0eb2cc/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr108684-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr108684-1.c?ref=6a5cb782d1486b378d70857c8efae558da0eb2cc", "patch": "@@ -0,0 +1,18 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -fdump-tree-optimized\" } */\n+\n+\n+static int t;\n+\n+int f (int *a)\n+{\n+  int t1, t2 = 0;\n+  asm (\"shouldshowupstill %1\" : \"=r\" (t1), \"=m\"(t2) : : );\n+  t = t1;\n+  return t2;\n+}\n+\n+/* Check to make sure DCE does not remove the inline-asm as it writes to t2. */\n+/* We used to DCE this inline-asm when removing the store to t. */\n+/* { dg-final { scan-assembler \"shouldshowupstill\" } } */\n+/* { dg-final { scan-tree-dump-times \"shouldshowupstill\" 1 \"optimized\" } } */"}, {"sha": "1f1ec2c87108693d3c42e5c36653afd90f42dc43", "filename": "gcc/tree-ssa-dce.cc", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a5cb782d1486b378d70857c8efae558da0eb2cc/gcc%2Ftree-ssa-dce.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a5cb782d1486b378d70857c8efae558da0eb2cc/gcc%2Ftree-ssa-dce.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-dce.cc?ref=6a5cb782d1486b378d70857c8efae558da0eb2cc", "patch": "@@ -2108,9 +2108,9 @@ simple_dce_from_worklist (bitmap worklist)\n \n       /* The defining statement needs to be defining only this name.\n \t ASM is the only statement that can define more than one\n-\t (non-virtual) name. */\n+\t name. */\n       if (is_a<gasm *>(t)\n-\t  && !single_ssa_def_operand (t, SSA_OP_DEF))\n+\t  && !single_ssa_def_operand (t, SSA_OP_ALL_DEFS))\n \tcontinue;\n \n       /* Don't remove statements that are needed for non-call\n@@ -2140,6 +2140,7 @@ simple_dce_from_worklist (bitmap worklist)\n \tremove_phi_node (&gsi, true);\n       else\n \t{\n+\t  unlink_stmt_vdef (t);\n \t  gsi_remove (&gsi, true);\n \t  release_defs (t);\n \t}"}]}