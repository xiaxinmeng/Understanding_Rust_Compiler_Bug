{"sha": "79e448454ba29dac783a9124e369776b5b417183", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzllNDQ4NDU0YmEyOWRhYzc4M2E5MTI0ZTM2OTc3NmI1YjQxNzE4Mw==", "commit": {"author": {"name": "Thomas Quinot", "email": "quinot@adacore.com", "date": "2007-06-06T10:46:39Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2007-06-06T10:46:39Z"}, "message": "s-finroo.ads, [...] (Read, Write): Use null procedure declarations instead of an explicit null body, for conciseness.\n\n2007-04-20  Thomas Quinot  <quinot@adacore.com>\n\n\t* s-finroo.ads, s-finroo.adb (Read, Write): Use null procedure\n\tdeclarations instead of an explicit null body, for conciseness.\n\nFrom-SVN: r125459", "tree": {"sha": "1c24df0de5e0c9e3906a13d836be434d3eb4f4bf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1c24df0de5e0c9e3906a13d836be434d3eb4f4bf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/79e448454ba29dac783a9124e369776b5b417183", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/79e448454ba29dac783a9124e369776b5b417183", "html_url": "https://github.com/Rust-GCC/gccrs/commit/79e448454ba29dac783a9124e369776b5b417183", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/79e448454ba29dac783a9124e369776b5b417183/comments", "author": null, "committer": null, "parents": [{"sha": "72fb810db9de1e8abdabefdb524567ad2691568e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/72fb810db9de1e8abdabefdb524567ad2691568e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/72fb810db9de1e8abdabefdb524567ad2691568e"}], "stats": {"total": 71, "additions": 25, "deletions": 46}, "files": [{"sha": "a8bbf957c0d85f7cad996739814b648cf7f481c1", "filename": "gcc/ada/s-finroo.adb", "status": "modified", "additions": 0, "deletions": 34, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/79e448454ba29dac783a9124e369776b5b417183/gcc%2Fada%2Fs-finroo.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/79e448454ba29dac783a9124e369776b5b417183/gcc%2Fada%2Fs-finroo.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-finroo.adb?ref=79e448454ba29dac783a9124e369776b5b417183", "patch": "@@ -62,38 +62,4 @@ package body System.Finalization_Root is\n       raise Program_Error;\n    end Initialize;\n \n-   ----------\n-   -- Read --\n-   ----------\n-\n-   --  Read and Write must be empty in order to avoid copying the\n-   --  finalization pointers.\n-\n-   pragma Warnings (Off);\n-   --  Suppress warning for out paramater Item which is not assigned\n-   --  because it is pretty much empty.\n-\n-   procedure Read\n-     (Stream : not null access Ada.Streams.Root_Stream_Type'Class;\n-      Item   : out Root_Controlled)\n-   is\n-   begin\n-      null;\n-   end Read;\n-\n-   -----------\n-   -- Write --\n-   -----------\n-\n-   --  Read and Write must be empty in order to avoid copying the\n-   --  finalization pointers.\n-\n-   procedure Write\n-     (Stream : not null access Ada.Streams.Root_Stream_Type'Class;\n-      Item   : Root_Controlled)\n-   is\n-   begin\n-      null;\n-   end Write;\n-\n end System.Finalization_Root;"}, {"sha": "3bd1c7507fd4b95349c32e2b9ff468e73d4588a5", "filename": "gcc/ada/s-finroo.ads", "status": "modified", "additions": 25, "deletions": 12, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/79e448454ba29dac783a9124e369776b5b417183/gcc%2Fada%2Fs-finroo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/79e448454ba29dac783a9124e369776b5b417183/gcc%2Fada%2Fs-finroo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-finroo.ads?ref=79e448454ba29dac783a9124e369776b5b417183", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2006, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2007, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -34,7 +34,7 @@\n --  This unit provides the basic support for controlled (finalizable) types\n \n with Ada.Streams;\n-with Unchecked_Conversion;\n+with Ada.Unchecked_Conversion;\n \n package System.Finalization_Root is\n    pragma Preelaborate;\n@@ -44,10 +44,10 @@ package System.Finalization_Root is\n    type Finalizable_Ptr is access all Root_Controlled'Class;\n \n    function To_Finalizable_Ptr is\n-     new Unchecked_Conversion (Address, Finalizable_Ptr);\n+     new Ada.Unchecked_Conversion (Address, Finalizable_Ptr);\n \n    function To_Addr is\n-     new Unchecked_Conversion (Finalizable_Ptr, Address);\n+     new Ada.Unchecked_Conversion (Finalizable_Ptr, Address);\n \n    type Empty_Root_Controlled is abstract tagged null record;\n    --  Just for the sake of Controlled equality (see Ada.Finalization)\n@@ -61,14 +61,27 @@ package System.Finalization_Root is\n    procedure Finalize   (Object : in out Root_Controlled);\n    procedure Adjust     (Object : in out Root_Controlled);\n \n-   procedure Write\n-     (Stream : not null access Ada.Streams.Root_Stream_Type'Class;\n-      Item   : Root_Controlled);\n+   --  Stream-oriented attibutes for Root_Controlled. These must be empty so\n+   --  as to not copy the finalization chain pointers. They are declared in\n+   --  a nested package so that they do not create primitive operations of\n+   --  Root_Controlled. Otherwise this would add unwanted primitives to (the\n+   --  full view of) Ada.Finalization.Limited_Controlled, which would cause\n+   --  trouble in cases where a limited controlled type is used as the\n+   --  designated type of a remote access-to-classwide type.\n \n-   procedure Read\n-     (Stream : not null access Ada.Streams.Root_Stream_Type'Class;\n-      Item   : out Root_Controlled);\n+   package Stream_Attributes is\n+\n+      procedure Write\n+        (Stream : not null access Ada.Streams.Root_Stream_Type'Class;\n+         Item   : Root_Controlled) is null;\n+\n+      procedure Read\n+        (Stream : not null access Ada.Streams.Root_Stream_Type'Class;\n+         Item   : out Root_Controlled) is null;\n+\n+   end Stream_Attributes;\n+\n+   for Root_Controlled'Read use Stream_Attributes.Read;\n+   for Root_Controlled'Write use Stream_Attributes.Write;\n \n-   for Root_Controlled'Read use Read;\n-   for Root_Controlled'Write use Write;\n end System.Finalization_Root;"}]}