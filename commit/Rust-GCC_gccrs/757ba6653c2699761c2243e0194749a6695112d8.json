{"sha": "757ba6653c2699761c2243e0194749a6695112d8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzU3YmE2NjUzYzI2OTk3NjFjMjI0M2UwMTk0NzQ5YTY2OTUxMTJkOA==", "commit": {"author": {"name": "Martin Sebor", "email": "msebor@redhat.com", "date": "2020-10-23T18:37:38Z"}, "committer": {"name": "Martin Sebor", "email": "msebor@redhat.com", "date": "2020-10-23T18:37:38Z"}, "message": "PR middle-end/97552 - missing waning passing null to a VLA argument declared [static]\n\ngcc/ChangeLog:\n\n\tPR middle-end/97552\n\t* attribs.c (init_attr_rdwr_indices): Handle static VLA parameters.\n\ngcc/c/ChangeLog:\n\n\tPR middle-end/97552\n\t* c-decl.c (get_parm_array_spec): Handle static VLA parameters.\n\ngcc/testsuite/ChangeLog:\n\n\tPR middle-end/97552\n\t* gcc.dg/Wvla-parameter-2.c: Adjust text of expected warning.\n\t* gcc.dg/Wnonnull-5.c: New test.", "tree": {"sha": "9cbfe237f74cbb0fe21cf7631916f1273eb9e384", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9cbfe237f74cbb0fe21cf7631916f1273eb9e384"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/757ba6653c2699761c2243e0194749a6695112d8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/757ba6653c2699761c2243e0194749a6695112d8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/757ba6653c2699761c2243e0194749a6695112d8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/757ba6653c2699761c2243e0194749a6695112d8/comments", "author": {"login": "msebor", "id": 381149, "node_id": "MDQ6VXNlcjM4MTE0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/381149?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msebor", "html_url": "https://github.com/msebor", "followers_url": "https://api.github.com/users/msebor/followers", "following_url": "https://api.github.com/users/msebor/following{/other_user}", "gists_url": "https://api.github.com/users/msebor/gists{/gist_id}", "starred_url": "https://api.github.com/users/msebor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msebor/subscriptions", "organizations_url": "https://api.github.com/users/msebor/orgs", "repos_url": "https://api.github.com/users/msebor/repos", "events_url": "https://api.github.com/users/msebor/events{/privacy}", "received_events_url": "https://api.github.com/users/msebor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "msebor", "id": 381149, "node_id": "MDQ6VXNlcjM4MTE0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/381149?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msebor", "html_url": "https://github.com/msebor", "followers_url": "https://api.github.com/users/msebor/followers", "following_url": "https://api.github.com/users/msebor/following{/other_user}", "gists_url": "https://api.github.com/users/msebor/gists{/gist_id}", "starred_url": "https://api.github.com/users/msebor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msebor/subscriptions", "organizations_url": "https://api.github.com/users/msebor/orgs", "repos_url": "https://api.github.com/users/msebor/repos", "events_url": "https://api.github.com/users/msebor/events{/privacy}", "received_events_url": "https://api.github.com/users/msebor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7991e963239160624b22a12caaacce95d3667e49", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7991e963239160624b22a12caaacce95d3667e49", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7991e963239160624b22a12caaacce95d3667e49"}], "stats": {"total": 64, "additions": 60, "deletions": 4}, "files": [{"sha": "a6f6b70e39e199a9b08e943bb9598bf4d5b15da7", "filename": "gcc/attribs.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/757ba6653c2699761c2243e0194749a6695112d8/gcc%2Fattribs.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/757ba6653c2699761c2243e0194749a6695112d8/gcc%2Fattribs.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fattribs.c?ref=757ba6653c2699761c2243e0194749a6695112d8", "patch": "@@ -2109,6 +2109,7 @@ init_attr_rdwr_indices (rdwr_map *rwm, tree attrs)\n \t\t     is followed by a comma and a dollar sign its bound is\n \t\t     on the list.  Otherwise it's a VLA with an unspecified\n \t\t     bound.  */\n+\t\t  acc.static_p = p[-2] == 's';\n \t\t  acc.minsize = HOST_WIDE_INT_M1U;\n \t\t}\n "}, {"sha": "1673b9585550859cea170ef4bb94b35f0e72fff0", "filename": "gcc/c/c-decl.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/757ba6653c2699761c2243e0194749a6695112d8/gcc%2Fc%2Fc-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/757ba6653c2699761c2243e0194749a6695112d8/gcc%2Fc%2Fc-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2Fc-decl.c?ref=757ba6653c2699761c2243e0194749a6695112d8", "patch": "@@ -5784,6 +5784,9 @@ get_parm_array_spec (const struct c_parm *parm, tree attrs)\n \t  continue;\n \t}\n \n+      if (pd->u.array.static_p)\n+\tspec += 's';\n+\n       if (TREE_CODE (nelts) == INTEGER_CST)\n \t{\n \t  /* Skip all constant bounds except the most significant one.\n@@ -5796,9 +5799,8 @@ get_parm_array_spec (const struct c_parm *parm, tree attrs)\n \t    return attrs;\n \n \t  char buf[40];\n-\t  const char *code = pd->u.array.static_p ? \"s\" : \"\";\n \t  unsigned HOST_WIDE_INT n = tree_to_uhwi (nelts);\n-\t  sprintf (buf, \"%s%llu\", code, (unsigned long long)n);\n+\t  sprintf (buf, \"%llu\", (unsigned long long)n);\n \t  spec += buf;\n \t  break;\n \t}"}, {"sha": "ef6ed54c3f39afc26ba08d6770958f81e4e170e7", "filename": "gcc/testsuite/gcc.dg/Wnonnull-5.c", "status": "added", "additions": 53, "deletions": 0, "changes": 53, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/757ba6653c2699761c2243e0194749a6695112d8/gcc%2Ftestsuite%2Fgcc.dg%2FWnonnull-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/757ba6653c2699761c2243e0194749a6695112d8/gcc%2Ftestsuite%2Fgcc.dg%2FWnonnull-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2FWnonnull-5.c?ref=757ba6653c2699761c2243e0194749a6695112d8", "patch": "@@ -0,0 +1,53 @@\n+/* PR middle-end/97552 - missing waning passing null to a VLA argument\n+   declared [static]\n+   { dg-do compile }\n+   { dg-options \"-Wall\" } */\n+\n+#define A(...) __attribute__ ((__VA_ARGS__))\n+\n+void             fptr_array (int(*)[0]);\n+\n+void             fstatic_array (int[static 0]);\n+void A (nonnull) fnonnull_static_array (int [static 0]);\n+\n+void             fvla (int n, int [n]);\n+void A (nonnull) fnonnull_vla (int n, int [n]);\n+\n+void             fstatic_vla (int n, int [static n]);\n+void A (nonnull) fnonnull_static_vla (int n, int [static n]);\n+\n+\n+void test_null (void)\n+{\n+  fptr_array (0);\n+  fptr_array (&(int[0]){ });\n+\n+  fstatic_array (0);                // { dg-warning \"\\\\\\[-Wnonnull\" }\n+  fnonnull_static_array (0);        // { dg-warning \"\\\\\\[-Wnonnull\" }\n+\n+  fvla (0, 0);\n+  fnonnull_vla (0, 0);              // { dg-warning \"\\\\\\[-Wnonnull\" }\n+\n+  fstatic_vla (0, 0);               // { dg-warning \"\\\\\\[-Wnonnull\" }\n+  fnonnull_static_vla (0, 0);       // { dg-warning \"\\\\\\[-Wnonnull\" }\n+}\n+\n+\n+#pragma GCC optimize (\"1\")\n+\n+void test_null_optimized (void)\n+{\n+  int (*pa)[0] = 0;\n+  fptr_array (pa);\n+\n+  int *p = 0;\n+\n+  fstatic_array (p);                // { dg-warning \"\\\\\\[-Wnonnull\" }\n+  fnonnull_static_array (p);        // { dg-warning \"\\\\\\[-Wnonnull\" }\n+\n+  fvla (0, p);\n+  fnonnull_vla (0, p);              // { dg-warning \"\\\\\\[-Wnonnull\" }\n+\n+  fstatic_vla (0, p);               // { dg-warning \"\\\\\\[-Wnonnull\" }\n+  fnonnull_static_vla (0, p);       // { dg-warning \"\\\\\\[-Wnonnull\" }\n+}"}, {"sha": "01728e7ebb7a89a29c9861cfd46a3d721af9fdaf", "filename": "gcc/testsuite/gcc.dg/Wvla-parameter-2.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/757ba6653c2699761c2243e0194749a6695112d8/gcc%2Ftestsuite%2Fgcc.dg%2FWvla-parameter-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/757ba6653c2699761c2243e0194749a6695112d8/gcc%2Ftestsuite%2Fgcc.dg%2FWvla-parameter-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2FWvla-parameter-2.c?ref=757ba6653c2699761c2243e0194749a6695112d8", "patch": "@@ -67,9 +67,9 @@ void a2pampan (int (*(*(*[2])[n1])[n2]));\n int f2ia1_1 (int n, int [n][n]);            // { sg-message \"previously declared as 'int\\\\\\[n]\\\\\\[n]' with bound argument 1\" }\n int f2ia1_1 (int n, int[static n][n]);\n int f2ia1_1 (int n, int a[static n][n]) { return sizeof *a; }\n-int f2ia1_1 (int n, int[static n + 1][n]);  // { dg-warning \"argument 2 of type 'int\\\\\\[n \\\\\\+ 1]\\\\\\[n]' declared with mismatched bound 'n \\\\\\+ 1'\" }\n+int f2ia1_1 (int n, int[static n + 1][n]);  // { dg-warning \"argument 2 of type 'int\\\\\\[static  *n \\\\\\+ 1]\\\\\\[n]' declared with mismatched bound 'n \\\\\\+ 1'\" }\n \n-int f2ias1_1 (int n, int [static n][n]);    // { dg-message \"previously declared as 'int\\\\\\[n]\\\\\\[n]' with bound argument 1\" }\n+int f2ias1_1 (int n, int [static n][n]);    // { dg-message \"previously declared as 'int\\\\\\[static +n]\\\\\\[n]' with bound argument 1\" }\n int f2ias1_1 (int n, int[n][n]);\n int f2ias1_1 (int n, int a[++n][n])         // { dg-warning \"argument 2 of type 'int\\\\\\[\\\\\\+\\\\\\+n]\\\\\\[n]' declared with mismatched bound ' ?\\\\+\\\\+n'\" }\n { return sizeof *a; }"}]}