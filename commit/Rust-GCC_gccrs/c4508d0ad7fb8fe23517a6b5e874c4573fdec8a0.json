{"sha": "c4508d0ad7fb8fe23517a6b5e874c4573fdec8a0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzQ1MDhkMGFkN2ZiOGZlMjM1MTdhNmI1ZTg3NGM0NTczZmRlYzhhMA==", "commit": {"author": {"name": "Jerry DeLisle", "email": "jvdelisle@gcc.gnu.org", "date": "2017-12-03T16:47:12Z"}, "committer": {"name": "Jerry DeLisle", "email": "jvdelisle@gcc.gnu.org", "date": "2017-12-03T16:47:12Z"}, "message": "re PR fortran/83191 (Writing a namelist with repeated complex numbers)\n\n2017-12-03  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n            Dominique d'Humieres  <dominiq@lps.ens.fr>\n\n        PR libgfortran/83191\n        * io/transfer.c (list_formatted_read_scalar): Do not set\n        namelist_mode bit here. (namelist_read): Likewise.\n        (data_transfer_init): Clear the mode bit here.\n        (finalize_transfer): Do set the mode bit just before any calls\n        to namelist_read or namelist_write. It can now be referred to\n        in complex_write.\n        ^ io/write.c (write_complex): Suppress the leading blanks when\n        namelist_mode bit is not set to 1.\n\n        * gfortran.dg/namelist_95.f90: New test.\n\nCo-Authored-By: Dominique d'Humieres <dominiq@lps.ens.fr>\n\nFrom-SVN: r255365", "tree": {"sha": "20e444c84db177bd87ead91a4dd32bcdd4acf3c4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/20e444c84db177bd87ead91a4dd32bcdd4acf3c4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c4508d0ad7fb8fe23517a6b5e874c4573fdec8a0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c4508d0ad7fb8fe23517a6b5e874c4573fdec8a0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c4508d0ad7fb8fe23517a6b5e874c4573fdec8a0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c4508d0ad7fb8fe23517a6b5e874c4573fdec8a0/comments", "author": null, "committer": null, "parents": [{"sha": "7c731281574f7d89c6fed487fe646176603ad98f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7c731281574f7d89c6fed487fe646176603ad98f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7c731281574f7d89c6fed487fe646176603ad98f"}], "stats": {"total": 55, "additions": 48, "deletions": 7}, "files": [{"sha": "792d1b91687ce8d6bcfa40a7f4300e2ba4eea62d", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c4508d0ad7fb8fe23517a6b5e874c4573fdec8a0/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c4508d0ad7fb8fe23517a6b5e874c4573fdec8a0/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=c4508d0ad7fb8fe23517a6b5e874c4573fdec8a0", "patch": "@@ -1,3 +1,8 @@\n+2017-12-03  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+\n+\tPR fortran/831916\n+\t* gfortran.dg/namelist_95.f90: New test.\n+\n 2017-12-01  Jan Hubicka  <hubicka@ucw.cz>\n \n \tPR target/81616"}, {"sha": "59566480865c42a70cece39dbce12981b4917077", "filename": "gcc/testsuite/gfortran.dg/namelist_95.f90", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c4508d0ad7fb8fe23517a6b5e874c4573fdec8a0/gcc%2Ftestsuite%2Fgfortran.dg%2Fnamelist_95.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c4508d0ad7fb8fe23517a6b5e874c4573fdec8a0/gcc%2Ftestsuite%2Fgfortran.dg%2Fnamelist_95.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fnamelist_95.f90?ref=c4508d0ad7fb8fe23517a6b5e874c4573fdec8a0", "patch": "@@ -0,0 +1,23 @@\n+! { dg-do run }\n+! PR83191 Writing a namelist with repeated complex \n+\n+program test\n+\n+implicit none\n+\n+integer, parameter :: UNIT = 1\n+character(len=8), parameter :: FILE = \"namelist\"\n+\n+complex, dimension(3) :: a = (/ (0.0, 0.0), (0.0, 0.0), (3.0, 4.0) /)\n+\n+namelist /complex_namelist/ a\n+\n+open(UNIT, file=FILE)\n+write(UNIT, nml=complex_namelist)\n+close(UNIT)\n+\n+open(UNIT, file=FILE)\n+read(UNIT, nml=complex_namelist)\n+close(UNIT, status=\"delete\")\n+if (any(a.ne.(/ (0.0, 0.0), (0.0, 0.0), (3.0, 4.0) /))) call abort\n+end program test"}, {"sha": "a43023267eaa813dcaf83f9756b51601a87b471e", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c4508d0ad7fb8fe23517a6b5e874c4573fdec8a0/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c4508d0ad7fb8fe23517a6b5e874c4573fdec8a0/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=c4508d0ad7fb8fe23517a6b5e874c4573fdec8a0", "patch": "@@ -1,3 +1,16 @@\n+2017-12-03  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+\t    Dominique d'Humieres  <dominiq@lps.ens.fr>\n+\n+\tPR libgfortran/83191\n+\t* io/transfer.c (list_formatted_read_scalar): Do not set\n+\tnamelist_mode bit here. (namelist_read): Likewise.\n+\t(data_transfer_init): Clear the mode bit here.\n+\t(finalize_transfer): Do set the mode bit just before any calls\n+\tto namelist_read or namelist_write. It can now be referred to\n+\tin complex_write.\n+\t^ io/write.c (write_complex): Suppress the leading blanks when\n+\tnamelist_mode bit is not set to 1.\n+\n 2017-12-02  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n \n \tPR libgfortran/83225"}, {"sha": "379050cecad650f216d9714e9e278bb6a1e91dbe", "filename": "libgfortran/io/list_read.c", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c4508d0ad7fb8fe23517a6b5e874c4573fdec8a0/libgfortran%2Fio%2Flist_read.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c4508d0ad7fb8fe23517a6b5e874c4573fdec8a0/libgfortran%2Fio%2Flist_read.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fio%2Flist_read.c?ref=c4508d0ad7fb8fe23517a6b5e874c4573fdec8a0", "patch": "@@ -2099,8 +2099,6 @@ list_formatted_read_scalar (st_parameter_dt *dtp, bt type, void *p,\n   int c, i, m;\n   int err = 0;\n \n-  dtp->u.p.namelist_mode = 0;\n-\n   /* Set the next_char and push_char worker functions.  */\n   set_workers (dtp);\n \n@@ -3546,7 +3544,6 @@ namelist_read (st_parameter_dt *dtp)\n      name.  */\n   namelist_info *prev_nl = NULL;\n \n-  dtp->u.p.namelist_mode = 1;\n   dtp->u.p.input_complete = 0;\n   dtp->u.p.expanded_read = 0;\n "}, {"sha": "4d7ca7abf7b8ffea576856ab666b38b9749ff1e9", "filename": "libgfortran/io/transfer.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c4508d0ad7fb8fe23517a6b5e874c4573fdec8a0/libgfortran%2Fio%2Ftransfer.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c4508d0ad7fb8fe23517a6b5e874c4573fdec8a0/libgfortran%2Fio%2Ftransfer.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fio%2Ftransfer.c?ref=c4508d0ad7fb8fe23517a6b5e874c4573fdec8a0", "patch": "@@ -2671,7 +2671,7 @@ data_transfer_init (st_parameter_dt *dtp, int read_flag)\n \n   dtp->u.p.ionml = ionml;\n   dtp->u.p.mode = read_flag ? READING : WRITING;\n-\n+  dtp->u.p.namelist_mode = 0;\n   dtp->u.p.cc.len = 0;\n \n   if ((dtp->common.flags & IOPARM_LIBRETURN_MASK) != IOPARM_LIBRETURN_OK)\n@@ -3890,6 +3890,7 @@ finalize_transfer (st_parameter_dt *dtp)\n   if ((dtp->u.p.ionml != NULL)\n       && (cf & IOPARM_DT_HAS_NAMELIST_NAME) != 0)\n     {\n+       dtp->u.p.namelist_mode = 1;\n        if ((cf & IOPARM_DT_NAMELIST_READ_MODE) != 0)\n \t namelist_read (dtp);\n        else"}, {"sha": "926d510f4d7c148504e2661b40699af3242f1247", "filename": "libgfortran/io/write.c", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c4508d0ad7fb8fe23517a6b5e874c4573fdec8a0/libgfortran%2Fio%2Fwrite.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c4508d0ad7fb8fe23517a6b5e874c4573fdec8a0/libgfortran%2Fio%2Fwrite.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fio%2Fwrite.c?ref=c4508d0ad7fb8fe23517a6b5e874c4573fdec8a0", "patch": "@@ -1809,9 +1809,11 @@ write_complex (st_parameter_dt *dtp, const char *source, int kind, size_t size)\n                            precision, buf_size, result1, &res_len1);\n   get_float_string (dtp, &f, source + size / 2 , kind, 0, buffer,\n                            precision, buf_size, result2, &res_len2);\n-  lblanks = width - res_len1 - res_len2 - 3;\n-\n-  write_x (dtp, lblanks, lblanks);\n+  if (!dtp->u.p.namelist_mode)\n+    {\n+      lblanks = width - res_len1 - res_len2 - 3;\n+      write_x (dtp, lblanks, lblanks);\n+    }\n   write_char (dtp, '(');\n   write_float_string (dtp, result1, res_len1);\n   write_char (dtp, semi_comma);"}]}