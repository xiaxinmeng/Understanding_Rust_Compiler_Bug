{"sha": "2c62c8ec64ac0b3b7a21db4f45d8a8ae6372aa46", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmM2MmM4ZWM2NGFjMGIzYjdhMjFkYjRmNDVkOGE4YWU2MzcyYWE0Ng==", "commit": {"author": {"name": "Oleg Endo", "email": "olegendo@gcc.gnu.org", "date": "2012-10-10T00:50:37Z"}, "committer": {"name": "Oleg Endo", "email": "olegendo@gcc.gnu.org", "date": "2012-10-10T00:50:37Z"}, "message": "re PR target/52480 (SH Target: SH4A movua.l does not work for big endian)\n\n\tPR target/52480\n\t* config/sh/sh.md (extv, extzv): Check that operands[3] is zero,\n\tregardless of the endianness.\n\n\tPR target/52480\n\t* gcc.target/sh/sh4a-bitmovua.c: Compact skip-if list.\n\tAdd runtime tests.\n\nFrom-SVN: r192283", "tree": {"sha": "7d2340b797cebf8938d4257223789c4d1ee07a60", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7d2340b797cebf8938d4257223789c4d1ee07a60"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2c62c8ec64ac0b3b7a21db4f45d8a8ae6372aa46", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2c62c8ec64ac0b3b7a21db4f45d8a8ae6372aa46", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2c62c8ec64ac0b3b7a21db4f45d8a8ae6372aa46", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2c62c8ec64ac0b3b7a21db4f45d8a8ae6372aa46/comments", "author": null, "committer": null, "parents": [{"sha": "73b043cda17b433d1107705637cdc455ee5d94a1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/73b043cda17b433d1107705637cdc455ee5d94a1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/73b043cda17b433d1107705637cdc455ee5d94a1"}], "stats": {"total": 46, "additions": 41, "deletions": 5}, "files": [{"sha": "00a61de7628c9541def397f27a319d2f5a97ae11", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c62c8ec64ac0b3b7a21db4f45d8a8ae6372aa46/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c62c8ec64ac0b3b7a21db4f45d8a8ae6372aa46/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2c62c8ec64ac0b3b7a21db4f45d8a8ae6372aa46", "patch": "@@ -1,3 +1,9 @@\n+2012-10-10  Oleg Endo  <olegendo@gcc.gnu.org>\n+\n+\tPR target/52480\n+\t* config/sh/sh.md (extv, extzv): Check that operands[3] is zero,\n+\tregardless of the endianness.\n+\n 2012-10-09  Lawrence Crowl  <crowl@google.com>\n \n \t* Makefile.in (fold-const.o): Add depencence on hash-table.h."}, {"sha": "a0b1e8891f86ecd087164079caeacfa124c94c1d", "filename": "gcc/config/sh/sh.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c62c8ec64ac0b3b7a21db4f45d8a8ae6372aa46/gcc%2Fconfig%2Fsh%2Fsh.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c62c8ec64ac0b3b7a21db4f45d8a8ae6372aa46/gcc%2Fconfig%2Fsh%2Fsh.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh.md?ref=2c62c8ec64ac0b3b7a21db4f45d8a8ae6372aa46", "patch": "@@ -12706,7 +12706,7 @@ label:\n    }\n   if (TARGET_SH4A_ARCH\n       && INTVAL (operands[2]) == 32\n-      && INTVAL (operands[3]) == -24 * (BITS_BIG_ENDIAN != BYTES_BIG_ENDIAN)\n+      && INTVAL (operands[3]) == 0\n       && MEM_P (operands[1]) && MEM_ALIGN (operands[1]) < 32)\n     {\n       rtx src = adjust_address (operands[1], BLKmode, 0);\n@@ -12738,7 +12738,7 @@ label:\n     }\n   if (TARGET_SH4A_ARCH\n       && INTVAL (operands[2]) == 32\n-      && INTVAL (operands[3]) == -24 * (BITS_BIG_ENDIAN != BYTES_BIG_ENDIAN)\n+      && INTVAL (operands[3]) == 0\n       && MEM_P (operands[1]) && MEM_ALIGN (operands[1]) < 32)\n     {\n       rtx src = adjust_address (operands[1], BLKmode, 0);"}, {"sha": "a9d2fbd4f52cf7abca0d546cbaef7df2a8948e07", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c62c8ec64ac0b3b7a21db4f45d8a8ae6372aa46/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c62c8ec64ac0b3b7a21db4f45d8a8ae6372aa46/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=2c62c8ec64ac0b3b7a21db4f45d8a8ae6372aa46", "patch": "@@ -1,3 +1,9 @@\n+2012-10-10  Oleg Endo  <olegendo@gcc.gnu.org>\n+\n+\tPR target/52480\n+\t* gcc.target/sh/sh4a-bitmovua.c: Compact skip-if list.\n+\tAdd runtime tests.\n+\n 2012-10-10  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR c++/53307"}, {"sha": "7912fbc551d8d6fe7e4fd8a30a9e7fa8ed7339fa", "filename": "gcc/testsuite/gcc.target/sh/sh4a-bitmovua.c", "status": "modified", "additions": 27, "deletions": 3, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c62c8ec64ac0b3b7a21db4f45d8a8ae6372aa46/gcc%2Ftestsuite%2Fgcc.target%2Fsh%2Fsh4a-bitmovua.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c62c8ec64ac0b3b7a21db4f45d8a8ae6372aa46/gcc%2Ftestsuite%2Fgcc.target%2Fsh%2Fsh4a-bitmovua.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fsh%2Fsh4a-bitmovua.c?ref=2c62c8ec64ac0b3b7a21db4f45d8a8ae6372aa46", "patch": "@@ -1,7 +1,7 @@\n /* Verify that we generate movua to load unaligned 32-bit values on SH4A.  */\n-/* { dg-do compile { target \"sh*-*-*\" } } */\n-/* { dg-options \"-O\" } */\n-/* { dg-skip-if \"\" { \"sh*-*-*\" } { \"*\" } { \"-m4a\" \"-m4a-single\" \"-m4a-single-only\" \"-m4a-nofpu\" } }  */\n+/* { dg-do run { target \"sh*-*-*\" } } */\n+/* { dg-options \"-O1 -save-temps -fno-inline\" } */\n+/* { dg-skip-if \"\" { \"sh*-*-*\" } { \"*\" } { \"-m4a*\" } }  */\n /* { dg-final { scan-assembler-times \"movua.l\" 6 } } */\n \n /* Aligned.  */\n@@ -64,4 +64,28 @@ unsigned long long g4() {\n   return y4.d;\n }\n \n+#include <assert.h>\n \n+int\n+main (void)\n+{\n+  x1.d = 0x12345678;\n+  assert (f1 () == 0x12345678);\n+\n+  x2.d = 0x12345678;\n+  assert (f2 () == 0x12345678);\n+\n+  x3.d = 0x12345678;\n+  assert (f3 () == 0x12345678);\n+\n+  y_1.d = 0x12345678;\n+  assert (g1 () == 0x12345678);\n+\n+  y2.d = 0x12345678;\n+  assert (g2 () == 0x12345678);\n+\n+  y3.d = 0x12345678;\n+  assert (g3 () == 0x12345678);\n+\n+  return 0;\n+}"}]}