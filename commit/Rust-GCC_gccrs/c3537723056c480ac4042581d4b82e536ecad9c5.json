{"sha": "c3537723056c480ac4042581d4b82e536ecad9c5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzM1Mzc3MjMwNTZjNDgwYWM0MDQyNTgxZDRiODJlNTM2ZWNhZDljNQ==", "commit": {"author": {"name": "Kaz Kojima", "email": "kkojima@gcc.gnu.org", "date": "2009-05-12T22:47:03Z"}, "committer": {"name": "Kaz Kojima", "email": "kkojima@gcc.gnu.org", "date": "2009-05-12T22:47:03Z"}, "message": "re PR target/39561 (-mno-expand-cbranchdi broken)\n\n\tPR target/39561\n\t* config/sh/sh.h (OPTIMIZATION_OPTIONS): Don't set\n\tTARGET_EXPAND_CBRANCHDI4.\n\t* config/sh/sh.md (cbranchdi4): Don't check TARGET_EXPAND_CBRANCHDI4.\n\t* config/sh/sh.opt (mexpand-cbranchdi): Remove.\n\t(cmpeqdi): Fix comment.\n\nFrom-SVN: r147453", "tree": {"sha": "d3a0cb364955d3faf76917c1ab6a5bc8ce557bd7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d3a0cb364955d3faf76917c1ab6a5bc8ce557bd7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c3537723056c480ac4042581d4b82e536ecad9c5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c3537723056c480ac4042581d4b82e536ecad9c5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c3537723056c480ac4042581d4b82e536ecad9c5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c3537723056c480ac4042581d4b82e536ecad9c5/comments", "author": null, "committer": null, "parents": [{"sha": "2be517627af141485812051da28eb6bf510f87b4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2be517627af141485812051da28eb6bf510f87b4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2be517627af141485812051da28eb6bf510f87b4"}], "stats": {"total": 32, "additions": 16, "deletions": 16}, "files": [{"sha": "3a9c2b537364b140d3e8fddf107bde983883ec77", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3537723056c480ac4042581d4b82e536ecad9c5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3537723056c480ac4042581d4b82e536ecad9c5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c3537723056c480ac4042581d4b82e536ecad9c5", "patch": "@@ -1,3 +1,12 @@\n+2009-05-12  Kaz Kojima  <kkojima@gcc.gnu.org>\n+\n+\tPR target/39561\n+\t* config/sh/sh.h (OPTIMIZATION_OPTIONS): Don't set\n+\tTARGET_EXPAND_CBRANCHDI4.\n+\t* config/sh/sh.md (cbranchdi4): Don't check TARGET_EXPAND_CBRANCHDI4.\n+\t* config/sh/sh.opt (mexpand-cbranchdi): Remove.\n+\t(cmpeqdi): Fix comment.\n+\n 2009-05-12  Kaz Kojima  <kkojima@gcc.gnu.org>\n \n \t* config/sh/sh-protos.h (sh_legitimate_index_p): Declare."}, {"sha": "8d73615beeb3dd59c87c899d75caa844ad7822e2", "filename": "gcc/config/sh/sh.h", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3537723056c480ac4042581d4b82e536ecad9c5/gcc%2Fconfig%2Fsh%2Fsh.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3537723056c480ac4042581d4b82e536ecad9c5/gcc%2Fconfig%2Fsh%2Fsh.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh.h?ref=c3537723056c480ac4042581d4b82e536ecad9c5", "patch": "@@ -473,10 +473,7 @@ do {\t\t\t\t\t\t\t\t\t\\\n       sh_div_str = SH_DIV_STR_FOR_SIZE ;\t\t\t\t\\\n     }\t\t\t\t\t\t\t\t\t\\\n   else\t\t\t\t\t\t\t\t\t\\\n-    {\t\t\t\t\t\t\t\t\t\\\n-      TARGET_CBRANCHDI4 = 1;\t\t\t\t\t\t\\\n-      TARGET_EXPAND_CBRANCHDI4 = 1;\t\t\t\t\t\\\n-    }\t\t\t\t\t\t\t\t\t\\\n+    TARGET_CBRANCHDI4 = 1;\t\t\t\t\t\t\\\n   /* We can't meaningfully test TARGET_SHMEDIA here, because -m options\t\\\n      haven't been parsed yet, hence we'd read only the default.\t\\\n      sh_target_reg_class will return NO_REGS if this is not SHMEDIA, so\t\\"}, {"sha": "ca69108836fccaa80acb516cd3f30dfe84b2a319", "filename": "gcc/config/sh/sh.md", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3537723056c480ac4042581d4b82e536ecad9c5/gcc%2Fconfig%2Fsh%2Fsh.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3537723056c480ac4042581d4b82e536ecad9c5/gcc%2Fconfig%2Fsh%2Fsh.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh.md?ref=c3537723056c480ac4042581d4b82e536ecad9c5", "patch": "@@ -1,6 +1,6 @@\n ;;- Machine description for Renesas / SuperH SH.\n ;;  Copyright (C) 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,\n-;;  2003, 2004, 2005, 2006, 2007, 2008 Free Software Foundation, Inc.\n+;;  2003, 2004, 2005, 2006, 2007, 2008, 2009 Free Software Foundation, Inc.\n ;;  Contributed by Steve Chamberlain (sac@cygnus.com).\n ;;  Improved by Jim Wilson (wilson@cygnus.com).\n \n@@ -723,11 +723,9 @@\n \n   else\n     {\n-      if (TARGET_EXPAND_CBRANCHDI4)\n-        {\n-          if (expand_cbranchdi4 (operands, LAST_AND_UNUSED_RTX_CODE))\n-\t    DONE;\n-        }\n+      if (expand_cbranchdi4 (operands, LAST_AND_UNUSED_RTX_CODE))\n+\tDONE;\n+\n       comparison = prepare_cbranch_operands (operands, DImode,\n \t\t\t\t\t     LAST_AND_UNUSED_RTX_CODE);\n       if (comparison != GET_CODE (operands[0]))"}, {"sha": "8aa0c9f1b7cbfd135c0fd36d366255201ee784e0", "filename": "gcc/config/sh/sh.opt", "status": "modified", "additions": 2, "deletions": 6, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3537723056c480ac4042581d4b82e536ecad9c5/gcc%2Fconfig%2Fsh%2Fsh.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3537723056c480ac4042581d4b82e536ecad9c5/gcc%2Fconfig%2Fsh%2Fsh.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh.opt?ref=c3537723056c480ac4042581d4b82e536ecad9c5", "patch": "@@ -1,6 +1,6 @@\n ; Options for the SH port of the compiler.\n \n-; Copyright (C) 2005, 2006, 2007, 2008 Free Software Foundation, Inc.\n+; Copyright (C) 2005, 2006, 2007, 2008, 2009 Free Software Foundation, Inc.\n ;\n ; This file is part of GCC.\n ;\n@@ -224,13 +224,9 @@ mcbranchdi\n Target Var(TARGET_CBRANCHDI4)\n Enable cbranchdi4 pattern\n \n-mexpand-cbranchdi\n-Target Var(TARGET_EXPAND_CBRANCHDI4)\n-Expand cbranchdi4 pattern early into separate comparisons and branches.\n-\n mcmpeqdi\n Target Var(TARGET_CMPEQDI_T)\n-Emit cmpeqdi_t pattern even when -mcbranchdi and -mexpand-cbranchdi are in effect.\n+Emit cmpeqdi_t pattern even when -mcbranchdi is in effect.\n \n mcut2-workaround\n Target RejectNegative Var(TARGET_SH5_CUT2_WORKAROUND)"}]}