{"sha": "fdc9db25395e5a6e77069c04fe713f165a9c52a4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmRjOWRiMjUzOTVlNWE2ZTc3MDY5YzA0ZmU3MTNmMTY1YTljNTJhNA==", "commit": {"author": {"name": "Thomas Schwinge", "email": "thomas@codesourcery.com", "date": "2020-07-01T10:33:59Z"}, "committer": {"name": "Thomas Schwinge", "email": "thomas@codesourcery.com", "date": "2020-07-24T12:00:43Z"}, "message": "[testsuite] Unset 'offload_target' after use\n\n..., so that we don't leak this into '*.exp' files running later.\n\nThis is relevant after commit efc16503ca10bc0e934e0bace5777500e4dc757a \"handle\ndumpbase in offloading, adjust testsuite\" -- I was confused why in a\n(simplified) testing sequence as follows:\n\n  default 'libgomp.c/c.exp'\n  default 'libgomp.oacc-c/c.exp'\n  '-m32' 'libgomp.c/c.exp'\n  '-m32' 'libgomp.oacc-c/c.exp'\n\n..., the \"'-m32' 'libgomp.c/c.exp'\" variant would not execute any offloading\ndump scanning.  The reason is that the \"default 'libgomp.oacc-c/c.exp'\" variant\nends with 'offload_target=disable' set, so that's what the \"'-m32'\n'libgomp.c/c.exp'\" variant would then see, in particular\n'gcc/testsuite/lib/scanoffload.exp:scoff'.\n\n\tlibgomp/\n\t* testsuite/libgomp.oacc-c++/c++.exp: Unset 'offload_target' after\n\tuse.\n\t* testsuite/libgomp.oacc-c/c.exp: Likewise.\n\t* testsuite/libgomp.oacc-fortran/fortran.exp: Likewise.", "tree": {"sha": "207631fdeb1534cb6ad2e91753b92c90312353e6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/207631fdeb1534cb6ad2e91753b92c90312353e6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fdc9db25395e5a6e77069c04fe713f165a9c52a4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fdc9db25395e5a6e77069c04fe713f165a9c52a4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fdc9db25395e5a6e77069c04fe713f165a9c52a4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fdc9db25395e5a6e77069c04fe713f165a9c52a4/comments", "author": {"login": "tschwinge", "id": 21753, "node_id": "MDQ6VXNlcjIxNzUz", "avatar_url": "https://avatars.githubusercontent.com/u/21753?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tschwinge", "html_url": "https://github.com/tschwinge", "followers_url": "https://api.github.com/users/tschwinge/followers", "following_url": "https://api.github.com/users/tschwinge/following{/other_user}", "gists_url": "https://api.github.com/users/tschwinge/gists{/gist_id}", "starred_url": "https://api.github.com/users/tschwinge/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tschwinge/subscriptions", "organizations_url": "https://api.github.com/users/tschwinge/orgs", "repos_url": "https://api.github.com/users/tschwinge/repos", "events_url": "https://api.github.com/users/tschwinge/events{/privacy}", "received_events_url": "https://api.github.com/users/tschwinge/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tschwinge", "id": 21753, "node_id": "MDQ6VXNlcjIxNzUz", "avatar_url": "https://avatars.githubusercontent.com/u/21753?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tschwinge", "html_url": "https://github.com/tschwinge", "followers_url": "https://api.github.com/users/tschwinge/followers", "following_url": "https://api.github.com/users/tschwinge/following{/other_user}", "gists_url": "https://api.github.com/users/tschwinge/gists{/gist_id}", "starred_url": "https://api.github.com/users/tschwinge/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tschwinge/subscriptions", "organizations_url": "https://api.github.com/users/tschwinge/orgs", "repos_url": "https://api.github.com/users/tschwinge/repos", "events_url": "https://api.github.com/users/tschwinge/events{/privacy}", "received_events_url": "https://api.github.com/users/tschwinge/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3407bfc136bb6b9cf8e25eb753b448b527590b3b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3407bfc136bb6b9cf8e25eb753b448b527590b3b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3407bfc136bb6b9cf8e25eb753b448b527590b3b"}], "stats": {"total": 3, "additions": 3, "deletions": 0}, "files": [{"sha": "42e0395f9a50222e8e9a0caf21c80adb7b7073ff", "filename": "libgomp/testsuite/libgomp.oacc-c++/c++.exp", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fdc9db25395e5a6e77069c04fe713f165a9c52a4/libgomp%2Ftestsuite%2Flibgomp.oacc-c%2B%2B%2Fc%2B%2B.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fdc9db25395e5a6e77069c04fe713f165a9c52a4/libgomp%2Ftestsuite%2Flibgomp.oacc-c%2B%2B%2Fc%2B%2B.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-c%2B%2B%2Fc%2B%2B.exp?ref=fdc9db25395e5a6e77069c04fe713f165a9c52a4", "patch": "@@ -149,6 +149,7 @@ if { $lang_test_file_found } {\n \n \tgcc-dg-runtest $tests \"$tagopt\" \"$libstdcxx_includes\"\n     }\n+    unset offload_target\n } else {\n     # Call this once, which placates the subsequent torture-finish.\n     set-torture-options [list \\"}, {"sha": "4bb2b2ac4949f82bae7b6fe01b40f5c77e979b27", "filename": "libgomp/testsuite/libgomp.oacc-c/c.exp", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fdc9db25395e5a6e77069c04fe713f165a9c52a4/libgomp%2Ftestsuite%2Flibgomp.oacc-c%2Fc.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fdc9db25395e5a6e77069c04fe713f165a9c52a4/libgomp%2Ftestsuite%2Flibgomp.oacc-c%2Fc.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-c%2Fc.exp?ref=fdc9db25395e5a6e77069c04fe713f165a9c52a4", "patch": "@@ -112,6 +112,7 @@ foreach offload_target [concat [split $offload_targets \",\"] \"disable\"] {\n \n     gcc-dg-runtest $tests \"$tagopt\" \"\"\n }\n+unset offload_target\n \n # All done.\n torture-finish"}, {"sha": "7365b320668aad63130004771fd6b5d3f4f440d2", "filename": "libgomp/testsuite/libgomp.oacc-fortran/fortran.exp", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fdc9db25395e5a6e77069c04fe713f165a9c52a4/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Ffortran.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fdc9db25395e5a6e77069c04fe713f165a9c52a4/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Ffortran.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Ffortran.exp?ref=fdc9db25395e5a6e77069c04fe713f165a9c52a4", "patch": "@@ -121,6 +121,7 @@ if { $lang_test_file_found } {\n \t# typically not the case for C/C++.\n \tgfortran-dg-runtest $tests \"$tagopt\" \"\"\n     }\n+    unset offload_target\n }\n \n # All done."}]}