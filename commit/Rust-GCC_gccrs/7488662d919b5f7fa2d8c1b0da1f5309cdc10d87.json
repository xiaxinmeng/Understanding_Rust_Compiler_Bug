{"sha": "7488662d919b5f7fa2d8c1b0da1f5309cdc10d87", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzQ4ODY2MmQ5MTliNWY3ZmEyZDhjMWIwZGExZjUzMDljZGMxMGQ4Nw==", "commit": {"author": {"name": "Roger Sayle", "email": "roger@eyesopen.com", "date": "2006-04-12T13:46:19Z"}, "committer": {"name": "Roger Sayle", "email": "sayle@gcc.gnu.org", "date": "2006-04-12T13:46:19Z"}, "message": "expr.c (emit_group_store): Correct operand order in call to subreg_lowpart_offset.\n\n\n\t* expr.c (emit_group_store): Correct operand order in call to\n\tsubreg_lowpart_offset.  Always create paradoxical SUBREGs with\n\ta SUBREG_BYTE of zero.\n\nFrom-SVN: r112887", "tree": {"sha": "1a304e3bd92cff1c86a5112723d83333937b45d7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1a304e3bd92cff1c86a5112723d83333937b45d7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7488662d919b5f7fa2d8c1b0da1f5309cdc10d87", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7488662d919b5f7fa2d8c1b0da1f5309cdc10d87", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7488662d919b5f7fa2d8c1b0da1f5309cdc10d87", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7488662d919b5f7fa2d8c1b0da1f5309cdc10d87/comments", "author": null, "committer": null, "parents": [{"sha": "76783bc2156ce814590f5c97a6948770fce8c531", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/76783bc2156ce814590f5c97a6948770fce8c531", "html_url": "https://github.com/Rust-GCC/gccrs/commit/76783bc2156ce814590f5c97a6948770fce8c531"}], "stats": {"total": 14, "additions": 10, "deletions": 4}, "files": [{"sha": "040d8c70e3011aedae490f4e9a6e39006652167d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7488662d919b5f7fa2d8c1b0da1f5309cdc10d87/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7488662d919b5f7fa2d8c1b0da1f5309cdc10d87/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7488662d919b5f7fa2d8c1b0da1f5309cdc10d87", "patch": "@@ -1,3 +1,9 @@\n+2006-04-12  Roger Sayle  <roger@eyesopen.com>\n+\n+\t* expr.c (emit_group_store): Correct operand order in call to\n+\tsubreg_lowpart_offset.  Always create paradoxical SUBREGs with\n+\ta SUBREG_BYTE of zero.\n+\n 2006-04-12  Richard Guenther  <rguenther@suse.de>\n \n \t* profile.c (compute_branch_probabilities): Remove code"}, {"sha": "48e23a98cde15a985890640c403172b0772c7a50", "filename": "gcc/expr.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7488662d919b5f7fa2d8c1b0da1f5309cdc10d87/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7488662d919b5f7fa2d8c1b0da1f5309cdc10d87/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=7488662d919b5f7fa2d8c1b0da1f5309cdc10d87", "patch": "@@ -1940,11 +1940,11 @@ emit_group_store (rtx orig_dst, rtx src, tree type ATTRIBUTE_UNUSED, int ssize)\n       if (start < finish)\n \t{\n \t  inner = GET_MODE (tmps[start]);\n-\t  bytepos = subreg_lowpart_offset (outer, inner);\n+\t  bytepos = subreg_lowpart_offset (inner, outer);\n \t  if (INTVAL (XEXP (XVECEXP (src, 0, start), 1)) == bytepos)\n \t    {\n \t      temp = simplify_gen_subreg (outer, tmps[start],\n-\t\t\t\t\t  inner, bytepos);\n+\t\t\t\t\t  inner, 0);\n \t      if (temp)\n \t\t{\n \t\t  emit_move_insn (dst, temp);\n@@ -1959,11 +1959,11 @@ emit_group_store (rtx orig_dst, rtx src, tree type ATTRIBUTE_UNUSED, int ssize)\n \t  && start < finish - 1)\n \t{\n \t  inner = GET_MODE (tmps[finish - 1]);\n-\t  bytepos = subreg_lowpart_offset (outer, inner);\n+\t  bytepos = subreg_lowpart_offset (inner, outer);\n \t  if (INTVAL (XEXP (XVECEXP (src, 0, finish - 1), 1)) == bytepos)\n \t    {\n \t      temp = simplify_gen_subreg (outer, tmps[finish - 1],\n-\t\t\t\t\t  inner, bytepos);\n+\t\t\t\t\t  inner, 0);\n \t      if (temp)\n \t\t{\n \t\t  emit_move_insn (dst, temp);"}]}