{"sha": "07edd4c51e5767f09a7a4d141efc6bd15742fd1f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDdlZGQ0YzUxZTU3NjdmMDlhN2E0ZDE0MWVmYzZiZDE1NzQyZmQxZg==", "commit": {"author": {"name": "Hans-Peter Nilsson", "email": "hp@axis.com", "date": "2000-04-05T18:36:20Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "2000-04-05T18:36:20Z"}, "message": "optabs.c (emit_libcall_block): Remove spurious REG_EQUAL notes from the insn where REG_RETVAL is added.\n\n        * optabs.c (emit_libcall_block): Remove spurious REG_EQUAL notes\n        from the insn where REG_RETVAL is added.\n        (emit_no_conflict_block): Ditto.\n\nFrom-SVN: r32935", "tree": {"sha": "90ba96f0b60f9a5f80e58f1335c1dabc7ef715b6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/90ba96f0b60f9a5f80e58f1335c1dabc7ef715b6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/07edd4c51e5767f09a7a4d141efc6bd15742fd1f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/07edd4c51e5767f09a7a4d141efc6bd15742fd1f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/07edd4c51e5767f09a7a4d141efc6bd15742fd1f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/07edd4c51e5767f09a7a4d141efc6bd15742fd1f/comments", "author": {"login": "hpataxisdotcom", "id": 80339731, "node_id": "MDQ6VXNlcjgwMzM5NzMx", "avatar_url": "https://avatars.githubusercontent.com/u/80339731?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hpataxisdotcom", "html_url": "https://github.com/hpataxisdotcom", "followers_url": "https://api.github.com/users/hpataxisdotcom/followers", "following_url": "https://api.github.com/users/hpataxisdotcom/following{/other_user}", "gists_url": "https://api.github.com/users/hpataxisdotcom/gists{/gist_id}", "starred_url": "https://api.github.com/users/hpataxisdotcom/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hpataxisdotcom/subscriptions", "organizations_url": "https://api.github.com/users/hpataxisdotcom/orgs", "repos_url": "https://api.github.com/users/hpataxisdotcom/repos", "events_url": "https://api.github.com/users/hpataxisdotcom/events{/privacy}", "received_events_url": "https://api.github.com/users/hpataxisdotcom/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "98dc7b591704d1c8d2b5410746ab20648b3f5390", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/98dc7b591704d1c8d2b5410746ab20648b3f5390", "html_url": "https://github.com/Rust-GCC/gccrs/commit/98dc7b591704d1c8d2b5410746ab20648b3f5390"}], "stats": {"total": 26, "additions": 25, "deletions": 1}, "files": [{"sha": "43c4ef820a2afce1484d96a02dd9ec2b3e0634a8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07edd4c51e5767f09a7a4d141efc6bd15742fd1f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07edd4c51e5767f09a7a4d141efc6bd15742fd1f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=07edd4c51e5767f09a7a4d141efc6bd15742fd1f", "patch": "@@ -1,3 +1,9 @@\n+Wed Apr  5 12:35:18 2000  Hans-Peter Nilsson  <hp@axis.com>\n+\n+\t* optabs.c (emit_libcall_block): Remove spurious REG_EQUAL notes\n+\tfrom the insn where REG_RETVAL is added.\n+\t(emit_no_conflict_block): Ditto.\n+\n Wed Apr  5 18:03:31 2000  Toshiyasu Morita  (toshi.morita@sega.com)\n                           J\"orn Rennecke <amylaar@cygnus.co.uk>\n "}, {"sha": "dbdea0412bac5a947bfba00da14bfc8ff399221d", "filename": "gcc/optabs.c", "status": "modified", "additions": 19, "deletions": 1, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07edd4c51e5767f09a7a4d141efc6bd15742fd1f/gcc%2Foptabs.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07edd4c51e5767f09a7a4d141efc6bd15742fd1f/gcc%2Foptabs.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Foptabs.c?ref=07edd4c51e5767f09a7a4d141efc6bd15742fd1f", "patch": "@@ -2699,7 +2699,16 @@ emit_no_conflict_block (insns, target, op0, op1, equiv)\n \tset_unique_reg_note (last, REG_EQUAL, equiv);\n     }\n   else\n-    last = get_last_insn ();\n+    {\n+      last = get_last_insn ();\n+\n+      /* Remove any existing REG_EQUAL note from \"last\", or else it will\n+\t be mistaken for a note referring to the full contents of the\n+\t alleged libcall value when found together with the REG_RETVAL\n+\t note added below.  An existing note can come from an insn\n+\t expansion at \"last\".  */\n+      remove_note (last, find_reg_note (last, REG_EQUAL, NULL_RTX));\n+    }\n \n   if (prev == 0)\n     first = get_insns ();\n@@ -2810,6 +2819,15 @@ emit_libcall_block (insns, target, result, equiv)\n   if (mov_optab->handlers[(int) GET_MODE (target)].insn_code\n       != CODE_FOR_nothing)\n     set_unique_reg_note (last, REG_EQUAL, copy_rtx (equiv));\n+  else\n+    {\n+      /* Remove any existing REG_EQUAL note from \"last\", or else it will\n+\t be mistaken for a note referring to the full contents of the\n+\t libcall value when found together with the REG_RETVAL note added\n+\t below.  An existing note can come from an insn expansion at\n+\t \"last\".  */\n+      remove_note (last, find_reg_note (last, REG_EQUAL, NULL_RTX));\n+    }\n \n   if (prev == 0)\n     first = get_insns ();"}]}