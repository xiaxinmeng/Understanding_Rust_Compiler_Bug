{"sha": "cb8e4445ef25e1da025712d0595274b297b78ec1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2I4ZTQ0NDVlZjI1ZTFkYTAyNTcxMmQwNTk1Mjc0YjI5N2I3OGVjMQ==", "commit": {"author": {"name": "Janus Weil", "email": "janus@gcc.gnu.org", "date": "2009-05-08T09:08:13Z"}, "committer": {"name": "Janus Weil", "email": "janus@gcc.gnu.org", "date": "2009-05-08T09:08:13Z"}, "message": "re PR fortran/39876 (module procedure name that collides with the GNU intrinsic)\n\n2009-05-08  Janus Weil  <janus@gcc.gnu.org>\n\n\tPR fortran/39876\n\t* intrinsic.c (gfc_is_intrinsic): Do not add the EXTERNAL attribute if\n\tthe symbol is a module procedure.\n\n\n2009-05-08  Janus Weil  <janus@gcc.gnu.org>\n\n\tPR fortran/39876\n\t* gfortran.dg/intrinsic_3.f90: New.\n\nFrom-SVN: r147279", "tree": {"sha": "847c8a0d4b0bc94aa283129ae3a9a5e53fa4f2fc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/847c8a0d4b0bc94aa283129ae3a9a5e53fa4f2fc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cb8e4445ef25e1da025712d0595274b297b78ec1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cb8e4445ef25e1da025712d0595274b297b78ec1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cb8e4445ef25e1da025712d0595274b297b78ec1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cb8e4445ef25e1da025712d0595274b297b78ec1/comments", "author": {"login": "janusw", "id": 484108, "node_id": "MDQ6VXNlcjQ4NDEwOA==", "avatar_url": "https://avatars.githubusercontent.com/u/484108?v=4", "gravatar_id": "", "url": "https://api.github.com/users/janusw", "html_url": "https://github.com/janusw", "followers_url": "https://api.github.com/users/janusw/followers", "following_url": "https://api.github.com/users/janusw/following{/other_user}", "gists_url": "https://api.github.com/users/janusw/gists{/gist_id}", "starred_url": "https://api.github.com/users/janusw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/janusw/subscriptions", "organizations_url": "https://api.github.com/users/janusw/orgs", "repos_url": "https://api.github.com/users/janusw/repos", "events_url": "https://api.github.com/users/janusw/events{/privacy}", "received_events_url": "https://api.github.com/users/janusw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "janusw", "id": 484108, "node_id": "MDQ6VXNlcjQ4NDEwOA==", "avatar_url": "https://avatars.githubusercontent.com/u/484108?v=4", "gravatar_id": "", "url": "https://api.github.com/users/janusw", "html_url": "https://github.com/janusw", "followers_url": "https://api.github.com/users/janusw/followers", "following_url": "https://api.github.com/users/janusw/following{/other_user}", "gists_url": "https://api.github.com/users/janusw/gists{/gist_id}", "starred_url": "https://api.github.com/users/janusw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/janusw/subscriptions", "organizations_url": "https://api.github.com/users/janusw/orgs", "repos_url": "https://api.github.com/users/janusw/repos", "events_url": "https://api.github.com/users/janusw/events{/privacy}", "received_events_url": "https://api.github.com/users/janusw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3e807ffc9de5b1e8ec5641446619b9d9fab29d34", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3e807ffc9de5b1e8ec5641446619b9d9fab29d34", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3e807ffc9de5b1e8ec5641446619b9d9fab29d34"}], "stats": {"total": 69, "additions": 62, "deletions": 7}, "files": [{"sha": "83ad8cdbe5b5bf464613906021681af0e3004512", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb8e4445ef25e1da025712d0595274b297b78ec1/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb8e4445ef25e1da025712d0595274b297b78ec1/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=cb8e4445ef25e1da025712d0595274b297b78ec1", "patch": "@@ -1,3 +1,9 @@\n+2009-05-08  Janus Weil  <janus@gcc.gnu.org>\n+\n+\tPR fortran/39876\n+\t* intrinsic.c (gfc_is_intrinsic): Do not add the EXTERNAL attribute if\n+\tthe symbol is a module procedure.\n+\n 2009-05-08  Tobias Burnus  <burnus@net-b.de>\n \n \t* invoke.texi: Add do/recursion to the -fcheck= summary."}, {"sha": "ca125a363357af0170cb5021d56459c710af68f7", "filename": "gcc/fortran/intrinsic.c", "status": "modified", "additions": 11, "deletions": 7, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb8e4445ef25e1da025712d0595274b297b78ec1/gcc%2Ffortran%2Fintrinsic.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb8e4445ef25e1da025712d0595274b297b78ec1/gcc%2Ffortran%2Fintrinsic.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fintrinsic.c?ref=cb8e4445ef25e1da025712d0595274b297b78ec1", "patch": "@@ -836,13 +836,17 @@ gfc_is_intrinsic (gfc_symbol* sym, int subroutine_flag, locus loc)\n   /* See if this intrinsic is allowed in the current standard.  */\n   if (gfc_check_intrinsic_standard (isym, &symstd, false, loc) == FAILURE)\n     {\n-      if (gfc_option.warn_intrinsics_std)\n-\tgfc_warning_now (\"The intrinsic '%s' at %L is not included in the\"\n-\t\t\t \" selected standard but %s and '%s' will be treated as\"\n-\t\t\t \" if declared EXTERNAL.  Use an appropriate -std=*\"\n-\t\t\t \" option or define -fall-intrinsics to allow this\"\n-\t\t\t \" intrinsic.\", sym->name, &loc, symstd, sym->name);\n-      sym->attr.external = 1;\n+      if (sym->attr.proc == PROC_UNKNOWN)\n+\t{\n+\t  if (gfc_option.warn_intrinsics_std)\n+\t    gfc_warning_now (\"The intrinsic '%s' at %L is not included in the\"\n+\t\t\t     \" selected standard but %s and '%s' will be\"\n+\t\t\t     \" treated as if declared EXTERNAL.  Use an\"\n+\t\t\t     \" appropriate -std=* option or define\"\n+\t\t\t     \" -fall-intrinsics to allow this intrinsic.\",\n+\t\t\t     sym->name, &loc, symstd, sym->name);\n+\t  gfc_add_external (&sym->attr, &loc);\n+\t}\n \n       return false;\n     }"}, {"sha": "fc1bccc8b95ee9e9ce2473f00ab9d3db372879cf", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb8e4445ef25e1da025712d0595274b297b78ec1/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb8e4445ef25e1da025712d0595274b297b78ec1/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=cb8e4445ef25e1da025712d0595274b297b78ec1", "patch": "@@ -1,3 +1,8 @@\n+2009-05-08  Janus Weil  <janus@gcc.gnu.org>\n+\n+\tPR fortran/39876\n+\t* gfortran.dg/intrinsic_3.f90: New.\n+\n 2009-05-07  Janis Johnson  <janis187@us.ibm.com>\n \n \tPR c/39037"}, {"sha": "fcd40e94bbb229844394601dcbed6c621ea3d362", "filename": "gcc/testsuite/gfortran.dg/intrinsic_3.f90", "status": "added", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb8e4445ef25e1da025712d0595274b297b78ec1/gcc%2Ftestsuite%2Fgfortran.dg%2Fintrinsic_3.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb8e4445ef25e1da025712d0595274b297b78ec1/gcc%2Ftestsuite%2Fgfortran.dg%2Fintrinsic_3.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fintrinsic_3.f90?ref=cb8e4445ef25e1da025712d0595274b297b78ec1", "patch": "@@ -0,0 +1,40 @@\n+! { dg-do compile }\n+! { dg-options \"-std=f95\" }\n+!\n+! PR 39876: module procedure name that collides with the GNU intrinsic\n+!\n+! Contributed by Alexei Matveev <alexei.matveev+gcc@gmail.com>\n+\n+module p                           \n+  implicit none                                                                 \n+\n+  contains\n+\n+    subroutine test()\n+      implicit none\n+      print *, avg(erfc)\n+    end subroutine test\n+\n+    function avg(f)\n+      implicit none\n+      double precision :: avg\n+      interface\n+        double precision function f(x)\n+          implicit none\n+          double precision, intent(in) :: x\n+        end function f\n+      end interface\n+      avg = ( f(1.0D0) + f(2.0D0) ) / 2\n+    end function avg\n+\n+    function erfc(x)\n+      implicit none\n+      double precision, intent(in) :: x\n+      double precision             :: erfc\n+      erfc = x\n+    end function erfc\n+\n+end module p\n+\n+! { dg-final { cleanup-modules \"p\" } }\n+"}]}