{"sha": "712becabc6c22330c5d49f84eaf3d130048c8226", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzEyYmVjYWJjNmMyMjMzMGM1ZDQ5Zjg0ZWFmM2QxMzAwNDhjODIyNg==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@codesourcery.com", "date": "2003-01-16T17:08:54Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2003-01-16T17:08:54Z"}, "message": "re PR c++/9212 (Internal compiler error in grokdeclarator, at cp/decl.c:11052 [gcc 3.2])\n\ncp:\n\tPR C++/9212\n\t* parser.c (cp_parser_direct_declarator): If accepting either\n\tabstract or named, the name must be an unqualified-id.\ntestsuite:\n\t* g++.dg/parse/ambig2.C: New test.\n\nFrom-SVN: r61399", "tree": {"sha": "e4c9854954916b9a5ca7f242911869bdc1e5220c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e4c9854954916b9a5ca7f242911869bdc1e5220c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/712becabc6c22330c5d49f84eaf3d130048c8226", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/712becabc6c22330c5d49f84eaf3d130048c8226", "html_url": "https://github.com/Rust-GCC/gccrs/commit/712becabc6c22330c5d49f84eaf3d130048c8226", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/712becabc6c22330c5d49f84eaf3d130048c8226/comments", "author": null, "committer": null, "parents": [{"sha": "27dc0551a1180e1032b80bc64d066058c3a2ad70", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/27dc0551a1180e1032b80bc64d066058c3a2ad70", "html_url": "https://github.com/Rust-GCC/gccrs/commit/27dc0551a1180e1032b80bc64d066058c3a2ad70"}], "stats": {"total": 55, "additions": 50, "deletions": 5}, "files": [{"sha": "39b294dc3f8b77e6a00a476557dc38fdc8d315a7", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/712becabc6c22330c5d49f84eaf3d130048c8226/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/712becabc6c22330c5d49f84eaf3d130048c8226/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=712becabc6c22330c5d49f84eaf3d130048c8226", "patch": "@@ -1,3 +1,9 @@\n+2003-01-16  Nathan Sidwell  <nathan@codesourcery.com>\n+\n+\tPR c++/9212\n+\t* parser.c (cp_parser_direct_declarator): If accepting either\n+\tabstract or named, the name must be an unqualified-id.\n+\n 2003-01-16  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n \t* class.c (layout_virtual_bases): Avoid signed/unsigned warning."}, {"sha": "07b35a28fb53ee0b8d7f3fd40416438bf7cff09b", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 13, "deletions": 5, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/712becabc6c22330c5d49f84eaf3d130048c8226/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/712becabc6c22330c5d49f84eaf3d130048c8226/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=712becabc6c22330c5d49f84eaf3d130048c8226", "patch": "@@ -1150,7 +1150,7 @@ typedef enum cp_parser_declarator_kind\n   CP_PARSER_DECLARATOR_ABSTRACT,\n   /* We want a named declarator.  */\n   CP_PARSER_DECLARATOR_NAMED,\n-  /* We don't mind.  */\n+  /* We don't mind, but the name must be an unqualified-id  */\n   CP_PARSER_DECLARATOR_EITHER\n } cp_parser_declarator_kind;\n \n@@ -10168,16 +10168,24 @@ cp_parser_direct_declarator (parser, dcl_kind, ctor_dtor_or_conv_p)\n \t  if (dcl_kind == CP_PARSER_DECLARATOR_EITHER)\n \t    cp_parser_parse_tentatively (parser);\n \t  declarator = cp_parser_declarator_id (parser);\n-\t  if (dcl_kind == CP_PARSER_DECLARATOR_EITHER\n-\t      && !cp_parser_parse_definitely (parser))\n-\t    declarator = error_mark_node;\n+\t  if (dcl_kind == CP_PARSER_DECLARATOR_EITHER)\n+\t    {\n+\t      if (!cp_parser_parse_definitely (parser))\n+\t\tdeclarator = error_mark_node;\n+\t      else if (TREE_CODE (declarator) != IDENTIFIER_NODE)\n+\t\t{\n+\t\t  cp_parser_error (parser, \"expected unqualified-id\");\n+\t\t  declarator = error_mark_node;\n+\t\t}\n+\t    }\n+\t  \n \t  if (declarator == error_mark_node)\n \t    break;\n \t  \n \t  if (TREE_CODE (declarator) == SCOPE_REF)\n \t    {\n \t      tree scope = TREE_OPERAND (declarator, 0);\n-\t  \n+\n \t      /* In the declaration of a member of a template class\n \t     \t outside of the class itself, the SCOPE will sometimes\n \t     \t be a TYPENAME_TYPE.  For example, given:"}, {"sha": "f40783f0488eb92ab7f202c286a9dfc260ea8df7", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/712becabc6c22330c5d49f84eaf3d130048c8226/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/712becabc6c22330c5d49f84eaf3d130048c8226/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=712becabc6c22330c5d49f84eaf3d130048c8226", "patch": "@@ -1,3 +1,7 @@\n+2003-01-16  Nathan Sidwell  <nathan@codesourcery.com>\n+\n+\t* g++.dg/parse/ambig2.C: New test.\n+\n 2003-01-15  Richard Henderson  <rth@redhat.com>\n \n \t* g++.dg/tls/init-2.C: Update error message string."}, {"sha": "7b000c6201e82788455c4c7865bcf16ba89f153e", "filename": "gcc/testsuite/g++.dg/parse/ambig2.C", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/712becabc6c22330c5d49f84eaf3d130048c8226/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fambig2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/712becabc6c22330c5d49f84eaf3d130048c8226/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fambig2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fambig2.C?ref=712becabc6c22330c5d49f84eaf3d130048c8226", "patch": "@@ -0,0 +1,27 @@\n+// { dg-do compile }\n+\n+// Copyright (C) 2003 Free Software Foundation, Inc.\n+// Contributed by Nathan Sidwell 6 Jan 2003 <nathan@codesourcery.com>\n+\n+// PR 9212. We erroneously accepted an ill-formed\n+// function-declaration, rather than a variable initializer.\n+\n+\n+struct A\n+{\n+    enum E { e };\n+    A(E);\n+};\n+\n+struct B\n+{\n+    enum F { f };\n+    B(F);\n+};\n+\n+struct C\n+{\n+    C(A, B, A);\n+};\n+\n+C c(A(A::e), B(B::f), A(A::e)); // This is not a function declaration"}]}