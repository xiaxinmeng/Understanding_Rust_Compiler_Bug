{"sha": "3ab37c7de76a6e34d40c9c9bd9a0101d9accfb33", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2FiMzdjN2RlNzZhNmUzNGQ0MGM5YzliZDlhMDEwMWQ5YWNjZmIzMw==", "commit": {"author": {"name": "Danny Smith", "email": "dannysmith@users.sourceforge.net", "date": "2003-08-19T11:59:56Z"}, "committer": {"name": "Mohan Embar", "email": "membar@gcc.gnu.org", "date": "2003-08-19T11:59:56Z"}, "message": "re PR libgcj/11575 ([win32] Problem with RandomAccessFile)\n\n\tPR libgcj/11575\n\t* java/io/natFileDescriptorWin32.cc (open): Set create\n\tflag to OPEN_AWAYS when READ & WRITE regardless of APPEND flag.\n\tHonor EXCL when openning with WRITE flag.\n\nFrom-SVN: r70565", "tree": {"sha": "e74f81e8ea9fcb1530d878ea47c9765fa7f48f97", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e74f81e8ea9fcb1530d878ea47c9765fa7f48f97"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3ab37c7de76a6e34d40c9c9bd9a0101d9accfb33", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3ab37c7de76a6e34d40c9c9bd9a0101d9accfb33", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3ab37c7de76a6e34d40c9c9bd9a0101d9accfb33", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3ab37c7de76a6e34d40c9c9bd9a0101d9accfb33/comments", "author": null, "committer": null, "parents": [{"sha": "dca5e0e850e763720133889d4f4f2c5b0f468e58", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dca5e0e850e763720133889d4f4f2c5b0f468e58", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dca5e0e850e763720133889d4f4f2c5b0f468e58"}], "stats": {"total": 28, "additions": 20, "deletions": 8}, "files": [{"sha": "7fc2069a6ff6fb8c2748cb2ef8b95fe454a16e76", "filename": "libjava/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ab37c7de76a6e34d40c9c9bd9a0101d9accfb33/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ab37c7de76a6e34d40c9c9bd9a0101d9accfb33/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=3ab37c7de76a6e34d40c9c9bd9a0101d9accfb33", "patch": "@@ -1,3 +1,10 @@\n+2003-08-19  Danny Smith  <dannysmith@users.sourceforge.net>\n+\n+\tPR libgcj/11575\n+\t* java/io/natFileDescriptorWin32.cc (open): Set create\n+\tflag to OPEN_AWAYS when READ & WRITE regardless of APPEND flag.\n+\tHonor EXCL when openning with WRITE flag. \n+\n 2003-08-19  Mohan Embar  <gnustuff@thisiscool.com>\n \n \t* include/jvm.h: New class _Jv_TempUTFString (helper class for"}, {"sha": "50669875ea1b4c0a60813fe1b873af515d01a7b9", "filename": "libjava/java/io/natFileDescriptorWin32.cc", "status": "modified", "additions": 13, "deletions": 8, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ab37c7de76a6e34d40c9c9bd9a0101d9accfb33/libjava%2Fjava%2Fio%2FnatFileDescriptorWin32.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ab37c7de76a6e34d40c9c9bd9a0101d9accfb33/libjava%2Fjava%2Fio%2FnatFileDescriptorWin32.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fio%2FnatFileDescriptorWin32.cc?ref=3ab37c7de76a6e34d40c9c9bd9a0101d9accfb33", "patch": "@@ -97,20 +97,25 @@ java::io::FileDescriptor::open (jstring path, jint jflags) {\n   if ((jflags & READ) && (jflags & WRITE))\n     {\n       access = GENERIC_READ | GENERIC_WRITE;\n-      if (jflags & APPEND)\n-\tcreate = OPEN_ALWAYS;\n+      if (jflags & EXCL)\n+\tcreate = CREATE_NEW; // this will raise error if file exists.\n       else\n-\tcreate = CREATE_ALWAYS;\n+\tcreate = OPEN_ALWAYS; // equivalent to O_CREAT\n     }\n-  else if(jflags & READ)\n-    access = GENERIC_READ;\n-  else\n+  else if (jflags & READ)\n     {\n+      access = GENERIC_READ;\n+      create = OPEN_EXISTING; // ignore EXCL\n+    }\n+  else\n+    { \n       access = GENERIC_WRITE;\n-      if (jflags & APPEND)\n+      if (jflags & EXCL)\n+\tcreate = CREATE_NEW;\n+      else if (jflags & APPEND)\n \tcreate = OPEN_ALWAYS;\n       else\n-        create = CREATE_ALWAYS;\n+\tcreate = CREATE_ALWAYS;\n     }\n \n   handle = CreateFile(buf, access, FILE_SHARE_READ | FILE_SHARE_WRITE, NULL, create, 0, NULL);"}]}