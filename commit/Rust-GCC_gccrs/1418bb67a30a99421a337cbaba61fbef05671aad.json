{"sha": "1418bb67a30a99421a337cbaba61fbef05671aad", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTQxOGJiNjdhMzBhOTk0MjFhMzM3Y2JhYmE2MWZiZWYwNTY3MWFhZA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@yorick.cygnus.com", "date": "1997-11-21T20:20:41Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "1997-11-21T20:20:41Z"}, "message": "except.h: Add outer_context_label_stack.\n\n\t* except.h: Add outer_context_label_stack.\n\t* except.c: Likewise.\n\t(expand_start_all_catch): Push the outer_context for the try block\n \tonto outer_context_label_stack.\n\t(expand_end_all_catch): Use it and pop it.\n\nFrom-SVN: r16645", "tree": {"sha": "e0b28242320986cc0a3463296fcca0e4271b4a52", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e0b28242320986cc0a3463296fcca0e4271b4a52"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1418bb67a30a99421a337cbaba61fbef05671aad", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1418bb67a30a99421a337cbaba61fbef05671aad", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1418bb67a30a99421a337cbaba61fbef05671aad", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1418bb67a30a99421a337cbaba61fbef05671aad/comments", "author": null, "committer": null, "parents": [{"sha": "e9295d5321e849975db7c792862b6315d8d1a74a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e9295d5321e849975db7c792862b6315d8d1a74a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e9295d5321e849975db7c792862b6315d8d1a74a"}], "stats": {"total": 28, "additions": 24, "deletions": 4}, "files": [{"sha": "a1369c8b5dc9bca6595d3b161524eb349b12e006", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1418bb67a30a99421a337cbaba61fbef05671aad/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1418bb67a30a99421a337cbaba61fbef05671aad/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1418bb67a30a99421a337cbaba61fbef05671aad", "patch": "@@ -1,3 +1,11 @@\n+Fri Nov 21 12:18:51 1997  Jason Merrill  <jason@yorick.cygnus.com>\n+\n+\t* except.h: Add outer_context_label_stack.\n+\t* except.c: Likewise.\n+\t(expand_start_all_catch): Push the outer_context for the try block\n+ \tonto outer_context_label_stack.\n+\t(expand_end_all_catch): Use it and pop it.\n+\n Fri Nov 21 10:13:11 1997  Robert Lipe (robertl@dgii.com)\n \n \t* i386/sco5.h (HAVE_ATEXIT): Revert last change."}, {"sha": "05d66dbe6d21564dba4a66743718e757383f9061", "filename": "gcc/except.c", "status": "modified", "additions": 11, "deletions": 4, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1418bb67a30a99421a337cbaba61fbef05671aad/gcc%2Fexcept.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1418bb67a30a99421a337cbaba61fbef05671aad/gcc%2Fexcept.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexcept.c?ref=1418bb67a30a99421a337cbaba61fbef05671aad", "patch": "@@ -483,12 +483,15 @@ static tree protect_list;\n \n /* Keeps track of the label to resume to should one want to resume\n    normal control flow out of a handler (instead of, say, returning to\n-   the caller of the current function or exiting the program).  Also\n-   used as the context of a throw to rethrow an exception to the outer\n-   exception region.  */\n+   the caller of the current function or exiting the program).  */\n \n struct label_node *caught_return_label_stack = NULL;\n \n+/* Keeps track of the label used as the context of a throw to rethrow an\n+   exception to the outer exception region.  */\n+\n+struct label_node *outer_context_label_stack = NULL;\n+\n /* A random data area for the front end's own use.  */\n \n struct label_node *false_label_stack = NULL;\n@@ -1254,6 +1257,9 @@ expand_start_all_catch ()\n   if (! doing_eh (1))\n     return;\n \n+  push_label_entry (&outer_context_label_stack,\n+\t\t    ehstack.top->entry->outer_context, NULL_TREE);\n+\n   /* End the try block.  */\n   expand_eh_region_end (integer_zero_node);\n \n@@ -1372,7 +1378,7 @@ expand_end_all_catch ()\n \t thrown from) so that the outer EH region can then try to process\n \t the exception.  */\n \n-      expand_internal_throw (DECL_RTL (top_label_entry (&caught_return_label_stack)));\n+      expand_internal_throw (outer_context_label_stack->u.rlabel);\n     }\n \n   /* Now we have the complete catch sequence.  */\n@@ -1382,6 +1388,7 @@ expand_end_all_catch ()\n   /* This level of catch blocks is done, so set up the successful\n      catch jump label for the next layer of catch blocks.  */\n   pop_label_entry (&caught_return_label_stack);\n+  pop_label_entry (&outer_context_label_stack);\n \n   /* Add the new sequence of catches to the main one for this function.  */\n   push_to_sequence (catch_clauses);"}, {"sha": "ac46fa4478f7b11fb875e1dae0808ce7949f7204", "filename": "gcc/except.h", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1418bb67a30a99421a337cbaba61fbef05671aad/gcc%2Fexcept.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1418bb67a30a99421a337cbaba61fbef05671aad/gcc%2Fexcept.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexcept.h?ref=1418bb67a30a99421a337cbaba61fbef05671aad", "patch": "@@ -227,6 +227,11 @@ extern void check_exception_handler_labels\tPROTO((void));\n \n extern struct label_node *caught_return_label_stack;\n \n+/* Keeps track of the label used as the context of a throw to rethrow an\n+   exception to the outer exception region.  */\n+\n+extern struct label_node *outer_context_label_stack;\n+\n /* A random area used for purposes elsewhere.  */\n \n extern struct label_node *false_label_stack;"}]}