{"sha": "693dcd3d88f485a85a8cce67f4a42c24b8cc3a1f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjkzZGNkM2Q4OGY0ODVhODVhOGNjZTY3ZjRhNDJjMjRiOGNjM2ExZg==", "commit": {"author": {"name": "Michael Koch", "email": "konqueror@gmx.de", "date": "2004-02-05T18:48:54Z"}, "committer": {"name": "Michael Koch", "email": "mkoch@gcc.gnu.org", "date": "2004-02-05T18:48:54Z"}, "message": "2004-02-05  Michael Koch  <konqueror@gmx.de>\n\n\t* javax/swing/AbstractCellEditor.java\n\t(getCellEditorValue): Removed.\n\t* javax/swing/Box.java: Reformated.\n\t(serialVersionUID): New field.\n\t* javax/swing/ButtonGroup.java:\n\tRemoved some weird whitespace.\n\t* javax/swing/CellEditor.java: Reformated.\n\t* javax/swing/CellRendererPane.java\n\t(serialVersionUID): New field.\n\t(AccessibleCellRendererPaneserialVersionUID): New field.\n\t* javax/swing/DefaultListModel.java\n\t(serialVersionUID): New field.\n\t* javax/swing/JEditorPane.java\n\t(serialVersionUID): New field.\n\t(setPage): Throws IOException.\n\t(addHyperlinkListener): Implemented.\n\t(removeHyperlinkListener): Implemented.\n\t(getHyperlinkListener): New method.\n\t* javax/swing/JFileChooser.java\n\t(serialVersionUID): New field.\n\t(AccessibleJFileChooser.serialVersionUID): New field.\n\t(addActionListener): Implemented.\n\t(removeActionListener): Implemented.\n\t(getActionListeners): New method.\n\t* javax/swing/JFormattedTextField.java\n\t(serialVersionUID): New field.\n\t(AbstractFormatter.serialVersionUID): New field.\n\t(clone): Throws CloneNotSupportedException\n\t(setEditValid): Add missing argument.\n\t(stringToValue): Throws ParseExcpetion.\n\t(valueToString): Throws ParseException.\n\t(commitEdit): Throws ParseException.\n\t* javax/swing/JLabel.java\n\t(serialVersionUID): New field.\n\t* javax/swing/JList.java\n\t(serialVersionUID): New field.\n\t(addListSelectionListener): Reformated.\n\t(removeListSelectionListener): Reformated.\n\t(getListSelectionListeners): New method.\n\t* javax/swing/colorchooser/AbstractColorChooserPanel.java:\n\tReformated.\n\t(serialVersionUID): New field.\n\t* javax/swing/table/AbstractTableModel.java\n\t(getValueAt): Removed.\n\t(getColumnCount): Removed.\n\t(getRowCount): Removed.\n\nFrom-SVN: r77329", "tree": {"sha": "9a1b9f82c2e961cace39a1584bad5d994dc393d6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9a1b9f82c2e961cace39a1584bad5d994dc393d6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/693dcd3d88f485a85a8cce67f4a42c24b8cc3a1f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/693dcd3d88f485a85a8cce67f4a42c24b8cc3a1f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/693dcd3d88f485a85a8cce67f4a42c24b8cc3a1f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/693dcd3d88f485a85a8cce67f4a42c24b8cc3a1f/comments", "author": null, "committer": null, "parents": [{"sha": "2d16865792aa09964162901987539cd75d567e25", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2d16865792aa09964162901987539cd75d567e25", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2d16865792aa09964162901987539cd75d567e25"}], "stats": {"total": 311, "additions": 181, "deletions": 130}, "files": [{"sha": "dabede449fe6cbb4843d4cc53bac0e8fd4023ec6", "filename": "libjava/ChangeLog", "status": "modified", "additions": 49, "deletions": 0, "changes": 49, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/693dcd3d88f485a85a8cce67f4a42c24b8cc3a1f/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/693dcd3d88f485a85a8cce67f4a42c24b8cc3a1f/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=693dcd3d88f485a85a8cce67f4a42c24b8cc3a1f", "patch": "@@ -1,3 +1,52 @@\n+2004-02-05  Michael Koch  <konqueror@gmx.de>\n+\n+\t* javax/swing/AbstractCellEditor.java\n+\t(getCellEditorValue): Removed.\n+\t* javax/swing/Box.java: Reformated.\n+\t(serialVersionUID): New field.\n+\t* javax/swing/ButtonGroup.java:\n+\tRemoved some weird whitespace.\n+\t* javax/swing/CellEditor.java: Reformated.\n+\t* javax/swing/CellRendererPane.java\n+\t(serialVersionUID): New field.\n+\t(AccessibleCellRendererPaneserialVersionUID): New field.\n+\t* javax/swing/DefaultListModel.java\n+\t(serialVersionUID): New field.\n+\t* javax/swing/JEditorPane.java\n+\t(serialVersionUID): New field.\n+\t(setPage): Throws IOException.\n+\t(addHyperlinkListener): Implemented.\n+\t(removeHyperlinkListener): Implemented.\n+\t(getHyperlinkListener): New method.\n+\t* javax/swing/JFileChooser.java\n+\t(serialVersionUID): New field.\n+\t(AccessibleJFileChooser.serialVersionUID): New field.\n+\t(addActionListener): Implemented.\n+\t(removeActionListener): Implemented.\n+\t(getActionListeners): New method.\n+\t* javax/swing/JFormattedTextField.java\n+\t(serialVersionUID): New field.\n+\t(AbstractFormatter.serialVersionUID): New field.\n+\t(clone): Throws CloneNotSupportedException\n+\t(setEditValid): Add missing argument.\n+\t(stringToValue): Throws ParseExcpetion.\n+\t(valueToString): Throws ParseException.\n+\t(commitEdit): Throws ParseException.\n+\t* javax/swing/JLabel.java\n+\t(serialVersionUID): New field.\n+\t* javax/swing/JList.java\n+\t(serialVersionUID): New field.\n+\t(addListSelectionListener): Reformated.\n+\t(removeListSelectionListener): Reformated.\n+\t(getListSelectionListeners): New method.\n+\t* javax/swing/colorchooser/AbstractColorChooserPanel.java:\n+\tReformated.\n+\t(serialVersionUID): New field.\n+\t* javax/swing/table/AbstractTableModel.java\n+\t(getValueAt): Removed.\n+\t(getColumnCount): Removed.\n+\t(getRowCount): Removed.\n+\n 2004-02-05  Michael Koch  <konqueror@gmx.de>\n \n \t* java/awt/datatransfer/DataFlavor.java"}, {"sha": "3463c97547c9b52adcc2d6d3129bf6665a20eea9", "filename": "libjava/javax/swing/AbstractCellEditor.java", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/693dcd3d88f485a85a8cce67f4a42c24b8cc3a1f/libjava%2Fjavax%2Fswing%2FAbstractCellEditor.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/693dcd3d88f485a85a8cce67f4a42c24b8cc3a1f/libjava%2Fjavax%2Fswing%2FAbstractCellEditor.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FAbstractCellEditor.java?ref=693dcd3d88f485a85a8cce67f4a42c24b8cc3a1f", "patch": "@@ -104,12 +104,6 @@ public void cancelCellEditing() {\n \t\t// TODO\n \t} // cancelCellEditing()\n \n-\t/**\n-\t * getCellEditorValue\n-\t * @returns Object\n-\t */\n-\tpublic abstract Object getCellEditorValue();\n-\n   /**\n    * addCellEditorListener\n    *"}, {"sha": "d2faeac557eec1994056f0704d836c86177a696d", "filename": "libjava/javax/swing/Box.java", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/693dcd3d88f485a85a8cce67f4a42c24b8cc3a1f/libjava%2Fjavax%2Fswing%2FBox.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/693dcd3d88f485a85a8cce67f4a42c24b8cc3a1f/libjava%2Fjavax%2Fswing%2FBox.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FBox.java?ref=693dcd3d88f485a85a8cce67f4a42c24b8cc3a1f", "patch": "@@ -47,9 +47,10 @@\n  */\n public class Box extends JComponent implements Accessible\n {\n-    Box(int a)\n-    {\n-        setLayout(new BoxLayout(this, \n-\t\t\t\ta));\t\n-    }\n+  private static final long serialVersionUID = 1525417495883046342L;\n+  \n+  public Box(int a)\n+  {\n+    setLayout(new BoxLayout(this, a));\t\n+  }\n }"}, {"sha": "b59d5659434eb1533b1857f685cd1e3326eed271", "filename": "libjava/javax/swing/ButtonGroup.java", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/693dcd3d88f485a85a8cce67f4a42c24b8cc3a1f/libjava%2Fjavax%2Fswing%2FButtonGroup.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/693dcd3d88f485a85a8cce67f4a42c24b8cc3a1f/libjava%2Fjavax%2Fswing%2FButtonGroup.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FButtonGroup.java?ref=693dcd3d88f485a85a8cce67f4a42c24b8cc3a1f", "patch": "@@ -129,11 +129,3 @@ public int getButtonCount()\n \n }\n \n-\n-\n-\n-\n-\n-\n-\n-"}, {"sha": "831cde0e7f9da520e9354c72068e7d6f5cc525d4", "filename": "libjava/javax/swing/CellEditor.java", "status": "modified", "additions": 44, "deletions": 49, "changes": 93, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/693dcd3d88f485a85a8cce67f4a42c24b8cc3a1f/libjava%2Fjavax%2Fswing%2FCellEditor.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/693dcd3d88f485a85a8cce67f4a42c24b8cc3a1f/libjava%2Fjavax%2Fswing%2FCellEditor.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FCellEditor.java?ref=693dcd3d88f485a85a8cce67f4a42c24b8cc3a1f", "patch": "@@ -45,54 +45,49 @@\n  * @author\tAndrew Selkirk\n  * @version\t1.0\n  */\n-public interface CellEditor {\n-\n-\t//-------------------------------------------------------------\n-\t// Methods ----------------------------------------------------\n-\t//-------------------------------------------------------------\n-\n-\t/**\n-\t * getCellEditorValue\n-\t * @returns Object\n-\t */\n-\tObject getCellEditorValue();\n-\n-\t/**\n-\t * isCellEditable\n-\t * @param event TODO\n-\t * @returns boolean\n-\t */\n-\tboolean isCellEditable(EventObject event);\n-\n-\t/**\n-\t * shouldSelectCell\n-\t * @param event TODO\n-\t * @returns boolean\n-\t */\n-\tboolean shouldSelectCell(EventObject event);\n-\n-\t/**\n-\t * stopCellEditing\n-\t * @returns boolean\n-\t */\n-\tboolean stopCellEditing();\n-\n-\t/**\n-\t * cancelCellEditing\n-\t */\n-\tvoid cancelCellEditing();\n-\n-\t/**\n-\t * addCellEditorListener\n-\t * @param value0 TODO\n-\t */\n-\tvoid addCellEditorListener(CellEditorListener listener);\n-\n-\t/**\n-\t * removeCellEditorListener\n-\t * @param listener TODO\n-\t */\n-\tvoid removeCellEditorListener(CellEditorListener listener);\n-\n+public interface CellEditor\n+{\n+  /**\n+   * getCellEditorValue\n+   * @returns Object\n+   */\n+  Object getCellEditorValue();\n+\n+  /**\n+   * isCellEditable\n+   * @param event TODO\n+   * @returns boolean\n+   */\n+  boolean isCellEditable(EventObject event);\n+\n+  /**\n+   * shouldSelectCell\n+   * @param event TODO\n+   * @returns boolean\n+   */\n+  boolean shouldSelectCell(EventObject event);\n+\n+  /**\n+   * stopCellEditing\n+   * @returns boolean\n+   */\n+  boolean stopCellEditing();\n+\n+  /**\n+   * cancelCellEditing\n+   */\n+  void cancelCellEditing();\n+\n+  /**\n+   * addCellEditorListener\n+   * @param value0 TODO\n+   */\n+  void addCellEditorListener(CellEditorListener listener);\n+\n+  /**\n+   * removeCellEditorListener\n+   * @param listener TODO\n+   */\n+  void removeCellEditorListener(CellEditorListener listener);\n \n } // CellEditor"}, {"sha": "6e2ba210a642ac2940b72850bde1ec988ed48c10", "filename": "libjava/javax/swing/CellRendererPane.java", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/693dcd3d88f485a85a8cce67f4a42c24b8cc3a1f/libjava%2Fjavax%2Fswing%2FCellRendererPane.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/693dcd3d88f485a85a8cce67f4a42c24b8cc3a1f/libjava%2Fjavax%2Fswing%2FCellRendererPane.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FCellRendererPane.java?ref=693dcd3d88f485a85a8cce67f4a42c24b8cc3a1f", "patch": "@@ -52,7 +52,9 @@\n  * @author\tAndrew Selkirk\n  * @version\t1.0\n  */\n-public class CellRendererPane extends Container implements Accessible {\n+public class CellRendererPane extends Container implements Accessible\n+{\n+  private static final long serialVersionUID = -7642183829532984273L;\n \n \t//-------------------------------------------------------------\n \t// Classes ----------------------------------------------------\n@@ -63,6 +65,8 @@ public class CellRendererPane extends Container implements Accessible {\n \t */\n \tprotected class AccessibleCellRendererPane extends AccessibleAWTContainer {\n \n+          private static final long serialVersionUID = 7300340301783504481L;\n+\n \t\t//-------------------------------------------------------------\n \t\t// Initialization ---------------------------------------------\n \t\t//-------------------------------------------------------------"}, {"sha": "3ba13cdaf5d881051631c92341e563fcb365210b", "filename": "libjava/javax/swing/DefaultListModel.java", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/693dcd3d88f485a85a8cce67f4a42c24b8cc3a1f/libjava%2Fjavax%2Fswing%2FDefaultListModel.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/693dcd3d88f485a85a8cce67f4a42c24b8cc3a1f/libjava%2Fjavax%2Fswing%2FDefaultListModel.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FDefaultListModel.java?ref=693dcd3d88f485a85a8cce67f4a42c24b8cc3a1f", "patch": "@@ -50,6 +50,7 @@\n  */\n public class DefaultListModel extends AbstractListModel\n {\n+  private static final long serialVersionUID = 2315945659722172272L;\n \n \t//-------------------------------------------------------------\n \t// Variables --------------------------------------------------"}, {"sha": "273ed899ea35b54caf8e77d99c38eaa4dbccdefb", "filename": "libjava/javax/swing/JEditorPane.java", "status": "modified", "additions": 23, "deletions": 8, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/693dcd3d88f485a85a8cce67f4a42c24b8cc3a1f/libjava%2Fjavax%2Fswing%2FJEditorPane.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/693dcd3d88f485a85a8cce67f4a42c24b8cc3a1f/libjava%2Fjavax%2Fswing%2FJEditorPane.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FJEditorPane.java?ref=693dcd3d88f485a85a8cce67f4a42c24b8cc3a1f", "patch": "@@ -52,6 +52,8 @@\n \n public class JEditorPane extends JTextComponent\n {\n+  private static final long serialVersionUID = 3140472492599046285L;\n+\n     URL page_url;\n     EditorKit kit;\n     String ctype = \"text/plain\";\n@@ -82,9 +84,6 @@ public JEditorPane(URL url)\n \tsetPage(url);\n     }\n \n-    void addHyperlinkListener(HyperlinkListener listener)\n-    {  }\n-    \n     protected  EditorKit createDefaultEditorKit()\n     {\treturn new PlainEditorKit();    }\n     \n@@ -174,11 +173,6 @@ static void registerEditorKitForContentType(String type, String classname, Class\n \t//Establishes the default bindings of type to classname.  \n     }\n     \n-    void removeHyperlinkListener(HyperlinkListener listener)\n-    {\n-\t//Removes a hyperlink listener.  \n-    }\n-    \n     void replaceSelection(String content)\n     {\n \t//Replaces the currently selected content with new content represented by the given string. \n@@ -210,11 +204,13 @@ void setEditorKitForContentType(String type, EditorKit k)\n     }\n   \n   void setPage(String url)\n+    throws IOException\n     {\n \t//  Sets the current URL being displayed.  \n     }\n     \n     void setPage(URL page)\n+    throws IOException\n     {\n \t//    Sets the current URL being displayed.  \n     }\n@@ -223,4 +219,23 @@ public void setText(String t)\n     {\t\n \tsuper.setText(t);\n     }\n+\n+  public void addHyperlinkListener(HyperlinkListener listener)\n+  {\n+    listenerList.add (HyperlinkListener.class, listener);\n+  }\n+    \n+  public void removeHyperlinkListener (HyperlinkListener listener)\n+  {\n+    listenerList.remove (HyperlinkListener.class, listener);\n+  }\n+\n+  /**\n+   * @since 1.4\n+   */\n+  public HyperlinkListener[] getHyperlinkListeners()\n+  {\n+    return (HyperlinkListener[]) getListeners (HyperlinkListener.class);\n+  }\n+    \n } // class JEditorPane"}, {"sha": "47b086180d1c8821b80bc7b17fc6536a21beecb2", "filename": "libjava/javax/swing/JFileChooser.java", "status": "modified", "additions": 17, "deletions": 6, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/693dcd3d88f485a85a8cce67f4a42c24b8cc3a1f/libjava%2Fjavax%2Fswing%2FJFileChooser.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/693dcd3d88f485a85a8cce67f4a42c24b8cc3a1f/libjava%2Fjavax%2Fswing%2FJFileChooser.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FJFileChooser.java?ref=693dcd3d88f485a85a8cce67f4a42c24b8cc3a1f", "patch": "@@ -59,6 +59,8 @@\n  */\n public class JFileChooser extends JComponent implements Accessible {\n \n+  private static final long serialVersionUID = 3162921138695327837L;\n+\n \t//-------------------------------------------------------------\n \t// Classes ----------------------------------------------------\n \t//-------------------------------------------------------------\n@@ -68,6 +70,8 @@ public class JFileChooser extends JComponent implements Accessible {\n \t */\n \tprotected class AccessibleJFileChooser extends AccessibleJComponent {\n \n+          private static final long serialVersionUID = 3318922050345221200L;\n+\n \t\t//-------------------------------------------------------------\n \t\t// Variables --------------------------------------------------\n \t\t//-------------------------------------------------------------\n@@ -906,17 +910,24 @@ public void cancelSelection() {\n \t * addActionListener\n \t * @param listener TODO\n \t */\n-\tpublic void addActionListener(ActionListener listener) {\n-\t\t// TODO\n-\t} // addActionListener()\n+\tpublic void addActionListener(ActionListener listener)\n+\t{\n+\t\tlistenerList.add (ActionListener.class, listener);\n+\t}\n \n \t/**\n \t * removeActionListener\n \t * @param listener TODO\n \t */\n-\tpublic void removeActionListener(ActionListener listener) {\n-\t\t// TODO\n-\t} // removeActionListener()\n+\tpublic void removeActionListener(ActionListener listener)\n+\t{\n+\t\tlistenerList.remove (ActionListener.class, listener);\n+\t}\n+\n+\tpublic ActionListener[] getActionListeners()\n+\t{\n+\t\treturn (ActionListener[]) listenerList.getListeners (ActionListener.class);\n+\t}\n \n \t/**\n \t * fireActionPerformed"}, {"sha": "801ffac47be1a76f4bb6f167eb8dd570e3d290a2", "filename": "libjava/javax/swing/JFormattedTextField.java", "status": "modified", "additions": 11, "deletions": 3, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/693dcd3d88f485a85a8cce67f4a42c24b8cc3a1f/libjava%2Fjavax%2Fswing%2FJFormattedTextField.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/693dcd3d88f485a85a8cce67f4a42c24b8cc3a1f/libjava%2Fjavax%2Fswing%2FJFormattedTextField.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FJFormattedTextField.java?ref=693dcd3d88f485a85a8cce67f4a42c24b8cc3a1f", "patch": "@@ -52,14 +52,19 @@\n  */\n public class JFormattedTextField extends JTextField\n {\n+  private static final long serialVersionUID = 2889768923115424035L;\n+\n   public abstract static class AbstractFormatter implements Serializable\n   {\n+    private static final long serialVersionUID = -5193212041738979680L;\n+    \n     public AbstractFormatter ()\n     {\n       //Do nothing here.\n     }\n \n     protected Object clone ()\n+      throws CloneNotSupportedException\n     {\n       throw new InternalError (\"not implemented\");\n     }\n@@ -99,14 +104,16 @@ protected void invalidEdit ()\n       throw new InternalError (\"not implemented\");\n     }\n \n-    protected void setEditValid ()\n+    protected void setEditValid (boolean valid)\n     {\n       throw new InternalError (\"not implemented\");\n     }\n \n-    public abstract Object stringToValue (String text);\n+    public abstract Object stringToValue (String text)\n+      throws ParseException;\n \n-    public abstract String valueToString (Object value);\n+    public abstract String valueToString (Object value)\n+      throws ParseException;\n   }\n   \n   public abstract static class AbstractFormatterFactory\n@@ -155,6 +162,7 @@ public JFormattedTextField (Object value)\n   }\n \n   public void commitEdit ()\n+    throws ParseException\n   {\n     throw new InternalError (\"not implemented\");\n   }"}, {"sha": "227fe644edb4dcebf3666f5fec6b7645ecf4811f", "filename": "libjava/javax/swing/JLabel.java", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/693dcd3d88f485a85a8cce67f4a42c24b8cc3a1f/libjava%2Fjavax%2Fswing%2FJLabel.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/693dcd3d88f485a85a8cce67f4a42c24b8cc3a1f/libjava%2Fjavax%2Fswing%2FJLabel.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FJLabel.java?ref=693dcd3d88f485a85a8cce67f4a42c24b8cc3a1f", "patch": "@@ -46,6 +46,8 @@\n \n public class JLabel extends JComponent implements Accessible, SwingConstants\n {\n+  private static final long serialVersionUID = 5496508283662221534L;\n+  \n     String text;\n     Icon icon;\n     int gap;"}, {"sha": "792a0f2b66f53ffafe5bc611d55efdd0aa6398c2", "filename": "libjava/javax/swing/JList.java", "status": "modified", "additions": 19, "deletions": 4, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/693dcd3d88f485a85a8cce67f4a42c24b8cc3a1f/libjava%2Fjavax%2Fswing%2FJList.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/693dcd3d88f485a85a8cce67f4a42c24b8cc3a1f/libjava%2Fjavax%2Fswing%2FJList.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FJList.java?ref=693dcd3d88f485a85a8cce67f4a42c24b8cc3a1f", "patch": "@@ -51,6 +51,8 @@\n \n public class JList extends JComponent implements Accessible, Scrollable\n {\n+  private static final long serialVersionUID = 4406629526391098046L;\n+\n     Color select_back, select_fore;\n     ListCellRenderer render;\n     int visibles = 8;\n@@ -105,10 +107,23 @@ public void setVisibleRowCount(int visibleRowCount)\n \trepaint();\n     }\n \n-    void addListSelectionListener(ListSelectionListener listener)\n-    { sel_model.addListSelectionListener(listener);    }\n-    void removeListSelectionListener(ListSelectionListener listener)\n-    { sel_model.removeListSelectionListener(listener);    }\n+  public void addListSelectionListener (ListSelectionListener listener)\n+  {\n+    sel_model.addListSelectionListener (listener);\n+  }\n+  \n+  public void removeListSelectionListener (ListSelectionListener listener)\n+  {\n+    sel_model.removeListSelectionListener (listener);\n+  }\n+\n+  /**\n+   * @since 1.4\n+   */\n+  public ListSelectionListener[] getListSelectionListeners()\n+  {\n+    throw new Error (\"not implemented\");\n+  }\n \n     void setSelectionMode(int a)\n     {  sel_model.setSelectionMode(a);   }"}, {"sha": "3fa0ad1945f6f96668458a50bc39b1ed8a630b2b", "filename": "libjava/javax/swing/colorchooser/AbstractColorChooserPanel.java", "status": "modified", "additions": 3, "deletions": 17, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/693dcd3d88f485a85a8cce67f4a42c24b8cc3a1f/libjava%2Fjavax%2Fswing%2Fcolorchooser%2FAbstractColorChooserPanel.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/693dcd3d88f485a85a8cce67f4a42c24b8cc3a1f/libjava%2Fjavax%2Fswing%2Fcolorchooser%2FAbstractColorChooserPanel.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Fcolorchooser%2FAbstractColorChooserPanel.java?ref=693dcd3d88f485a85a8cce67f4a42c24b8cc3a1f", "patch": "@@ -49,34 +49,22 @@\n  * @author\tAndrew Selkirk\n  * @version\t1.0\n  */\n-public abstract class AbstractColorChooserPanel extends JPanel {\n-\n-\t//-------------------------------------------------------------\n-\t// Variables --------------------------------------------------\n-\t//-------------------------------------------------------------\n+public abstract class AbstractColorChooserPanel extends JPanel\n+{\n+  private static final long serialVersionUID = -977469671210173863L;\n \n \t/**\n \t * chooser\n \t */\n \tprivate JColorChooser chooser;\n \n-\n-\t//-------------------------------------------------------------\n-\t// Initialization ---------------------------------------------\n-\t//-------------------------------------------------------------\n-\n \t/**\n \t * Constructor AbstractColorChooserPanel\n \t */\n \tpublic AbstractColorChooserPanel() {\n \t\t// TODO\n \t} // AbstractColorChooserPanel()\n \n-\n-\t//-------------------------------------------------------------\n-\t// Methods ----------------------------------------------------\n-\t//-------------------------------------------------------------\n-\n \t/**\n \t * getDisplayName\n \t * @returns String\n@@ -144,6 +132,4 @@ protected Color getColorFromModel() {\n \tpublic void paint(Graphics graphics) {\n \t\t// TODO\n \t} // paint()\n-\n-\n } // AbstractColorChooserPanel"}, {"sha": "dd8eb69382cb41f03e0da65e5c396cfb2f203c6f", "filename": "libjava/javax/swing/table/AbstractTableModel.java", "status": "modified", "additions": 1, "deletions": 23, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/693dcd3d88f485a85a8cce67f4a42c24b8cc3a1f/libjava%2Fjavax%2Fswing%2Ftable%2FAbstractTableModel.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/693dcd3d88f485a85a8cce67f4a42c24b8cc3a1f/libjava%2Fjavax%2Fswing%2Ftable%2FAbstractTableModel.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Ftable%2FAbstractTableModel.java?ref=693dcd3d88f485a85a8cce67f4a42c24b8cc3a1f", "patch": "@@ -35,7 +35,6 @@\n obligated to do so.  If you do not wish to do so, delete this\n exception statement from your version. */\n \n-\n package javax.swing.table;\n \n import java.io.Serializable;\n@@ -271,25 +270,4 @@ public EventListener[] getListeners (Class listenerType)\n   {\n     return listenerList.getListeners (listenerType);\n   }\n-\n-  /**\n-   * getValueAt\n-   * @param value0 TODO\n-   * @param value1 TODO\n-   * @return Object\n-   */\n-  public abstract Object getValueAt (int row, int column);\n-\n-  /**\n-   * getColumnCount\n-   * @return int\n-   */\n-  public abstract int getColumnCount();\n-\n-  /**\n-   * getRowCount\n-   * @return int\n-   */\n-  public abstract int getRowCount();\n-\n-} // AbstractTableModel\n+}"}]}