{"sha": "c59ff527c551ccc7cf500e3095d2b7b111d6c907", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzU5ZmY1MjdjNTUxY2NjN2NmNTAwZTMwOTVkMmI3YjExMWQ2YzkwNw==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@hxi.com", "date": "2000-07-20T21:34:07Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "2000-07-20T21:34:07Z"}, "message": "h8300.c (two_insn_adds_subs_operand): Fix a typo.\n\n        * h8300.c (two_insn_adds_subs_operand): Fix a typo.\n        * h8300.h (OK_FOR_T): New.\n        (EXTRA_CONSTRAINT): Support OK_FOR_T.\n        * h8300.md: Use inc/dec.[wl] for increment/decrement\n        by 1 and 2 in HI and SI modes.\n\nFrom-SVN: r35155", "tree": {"sha": "1df4a1b99c61c0dafac578520a5374e86bc36efc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1df4a1b99c61c0dafac578520a5374e86bc36efc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c59ff527c551ccc7cf500e3095d2b7b111d6c907", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c59ff527c551ccc7cf500e3095d2b7b111d6c907", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c59ff527c551ccc7cf500e3095d2b7b111d6c907", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c59ff527c551ccc7cf500e3095d2b7b111d6c907/comments", "author": null, "committer": null, "parents": [{"sha": "591eb4baa804e96d82d1efe46ac363f1972b6e00", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/591eb4baa804e96d82d1efe46ac363f1972b6e00", "html_url": "https://github.com/Rust-GCC/gccrs/commit/591eb4baa804e96d82d1efe46ac363f1972b6e00"}], "stats": {"total": 54, "additions": 38, "deletions": 16}, "files": [{"sha": "6c7c6a31ac57c3c3e241bf4055f94f50bd6b3e94", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c59ff527c551ccc7cf500e3095d2b7b111d6c907/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c59ff527c551ccc7cf500e3095d2b7b111d6c907/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c59ff527c551ccc7cf500e3095d2b7b111d6c907", "patch": "@@ -1,3 +1,11 @@\n+2000-07-20  Kazu Hirata  <kazu@hxi.com>\n+\n+\t* h8300.c (two_insn_adds_subs_operand): Fix a typo.\n+\t* h8300.h (OK_FOR_T): New.\n+\t(EXTRA_CONSTRAINT): Support OK_FOR_T.\n+\t* h8300.md: Use inc/dec.[wl] for increment/decrement\n+\tby 1 and 2 in HI and SI modes.\n+\n 2000-07-20  Jim Wilson  <wilson@cygnus.com>\n \n \t* config/ia64/ia64.h (ASM_OUTPUT_MI_THUNK): Handle DELTA values"}, {"sha": "2688714b84cb9fd14a83f5c0b634fb1b069f65b5", "filename": "gcc/config/h8300/h8300.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c59ff527c551ccc7cf500e3095d2b7b111d6c907/gcc%2Fconfig%2Fh8300%2Fh8300.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c59ff527c551ccc7cf500e3095d2b7b111d6c907/gcc%2Fconfig%2Fh8300%2Fh8300.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fh8300%2Fh8300.c?ref=c59ff527c551ccc7cf500e3095d2b7b111d6c907", "patch": "@@ -648,7 +648,7 @@ two_insn_adds_subs_operand (op, mode)\n \t  /* A constant addition/subtraction takes 2 states in QImode,\n \t     4 states in HImode, and 6 states in SImode.  Thus, the\n \t     only case we can win is when SImode is used, in which\n-\t     case, two adds/subs is used, taking 4 states.  */\n+\t     case, two adds/subs are used, taking 4 states.  */\n \t  if (mode == SImode\n \t      && (value == 2 + 1\n \t\t  || value == 4 + 1"}, {"sha": "941a8ad593f0aa589e9e1b3e70d18a19390139f0", "filename": "gcc/config/h8300/h8300.h", "status": "modified", "additions": 15, "deletions": 5, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c59ff527c551ccc7cf500e3095d2b7b111d6c907/gcc%2Fconfig%2Fh8300%2Fh8300.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c59ff527c551ccc7cf500e3095d2b7b111d6c907/gcc%2Fconfig%2Fh8300%2Fh8300.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fh8300%2Fh8300.h?ref=c59ff527c551ccc7cf500e3095d2b7b111d6c907", "patch": "@@ -828,9 +828,17 @@ struct cum_arg\n \n #endif\n \n-/* Extra constraints - 'U' if for an operand valid for a bset\n-   destination; i.e. a register, register indirect, or the\n-   eightbit memory region (a SYMBOL_REF with an SYMBOL_REF_FLAG set). \n+/* Extra constraints.  */\n+\n+/* 'T' if valid for dec.[wl] on H8/300H and H8/S.  Note that, for\n+   inc.[wl], we can use 'K', which has already been defined.  */\n+#define OK_FOR_T(OP)\t\t\t\t\\\n+  (GET_CODE (OP) == CONST_INT\t\t\t\\\n+   && (INTVAL (OP) == -1 || INTVAL (OP) == -2))\n+\n+/* 'U' if valid for a bset destination;\n+   i.e. a register, register indirect, or the eightbit memory region\n+   (a SYMBOL_REF with an SYMBOL_REF_FLAG set).\n \n    On the H8/S 'U' can also be a 16bit or 32bit absolute.  */\n #define OK_FOR_U(OP) \\\n@@ -845,8 +853,10 @@ struct cum_arg\n         && GET_CODE (XEXP (XEXP (XEXP (OP, 0), 0), 1)) == CONST_INT) \\\n         && (TARGET_H8300S || SYMBOL_REF_FLAG (XEXP (XEXP (OP, 0), 0)))))\n \n-#define EXTRA_CONSTRAINT(OP, C) \\\n- ((C) == 'U' ? OK_FOR_U (OP) : 0)\n+#define EXTRA_CONSTRAINT(OP, C)\t\t\t\\\n+  ((C) == 'T' ? OK_FOR_T (OP) :\t\t\t\\\n+   (C) == 'U' ? OK_FOR_U (OP) :\t\t\t\\\n+   0)\n \f\n /* GO_IF_LEGITIMATE_ADDRESS recognizes an RTL expression\n    that is a valid memory address for an instruction."}, {"sha": "e00536885762fca9d799d18f8390be2f1d090038", "filename": "gcc/config/h8300/h8300.md", "status": "modified", "additions": 14, "deletions": 10, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c59ff527c551ccc7cf500e3095d2b7b111d6c907/gcc%2Fconfig%2Fh8300%2Fh8300.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c59ff527c551ccc7cf500e3095d2b7b111d6c907/gcc%2Fconfig%2Fh8300%2Fh8300.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fh8300%2Fh8300.md?ref=c59ff527c551ccc7cf500e3095d2b7b111d6c907", "patch": "@@ -629,17 +629,19 @@\n    (set_attr \"cc\" \"none_0hit,none_0hit,clobber,set_zn,set_zn\")])\n \n (define_insn \"\"\n-  [(set (match_operand:HI 0 \"register_operand\" \"=r,r,r,r\")\n-\t(plus:HI (match_operand:HI 1 \"register_operand\" \"%0,0,0,0\")\n-\t\t (match_operand:HI 2 \"nonmemory_operand\" \"L,N,n,r\")))]\n+  [(set (match_operand:HI 0 \"register_operand\" \"=r,r,r,r,r,r\")\n+\t(plus:HI (match_operand:HI 1 \"register_operand\" \"%0,0,0,0,0,0\")\n+\t\t (match_operand:HI 2 \"nonmemory_operand\" \"K,T,L,N,n,r\")))]\n   \"TARGET_H8300H || TARGET_H8300S\"\n   \"@\n+   inc.w\t%2,%T0\n+   dec.w\t%G2,%T0\n    adds\t%2,%A0\n    subs\t%G2,%A0\n    add.w\t%T2,%T0\n    add.w\t%T2,%T0\"\n-  [(set_attr \"length\" \"2,2,4,2\")\n-   (set_attr \"cc\" \"none_0hit,none_0hit,set_zn,set_zn\")])\n+  [(set_attr \"length\" \"2,2,2,2,4,2\")\n+   (set_attr \"cc\" \"set_znv,set_znv,none_0hit,none_0hit,set_zn,set_zn\")])\n \n (define_split\n   [(set (match_operand:HI 0 \"register_operand\" \"\")\n@@ -669,17 +671,19 @@\n    (set_attr \"cc\" \"clobber\")])\n \n (define_insn \"addsi_h8300h\"\n-  [(set (match_operand:SI 0 \"register_operand\" \"=r,r,r,r\")\n-\t(plus:SI (match_operand:SI 1 \"register_operand\" \"%0,0,0,0\")\n-\t\t (match_operand:SI 2 \"nonmemory_operand\" \"L,N,i,r\")))]\n+  [(set (match_operand:SI 0 \"register_operand\" \"=r,r,r,r,r,r\")\n+\t(plus:SI (match_operand:SI 1 \"register_operand\" \"%0,0,0,0,0,0\")\n+\t\t (match_operand:SI 2 \"nonmemory_operand\" \"K,T,L,N,i,r\")))]\n   \"TARGET_H8300H || TARGET_H8300S\"\n   \"@\n+   inc.l\t%2,%S0\n+   dec.l\t%G2,%S0\n    adds\t%2,%A0\n    subs\t%G2,%A0\n    add.l\t%S2,%S0\n    add.l\t%S2,%S0\"\n-  [(set_attr \"length\" \"2,2,6,2\")\n-   (set_attr \"cc\" \"none_0hit,none_0hit,set_zn,set_zn\")])\n+  [(set_attr \"length\" \"2,2,2,2,6,2\")\n+   (set_attr \"cc\" \"set_znv,set_znv,none_0hit,none_0hit,set_zn,set_zn\")])\n \n (define_split\n   [(set (match_operand:SI 0 \"register_operand\" \"\")"}]}