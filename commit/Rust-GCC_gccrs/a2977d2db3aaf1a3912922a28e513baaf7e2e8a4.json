{"sha": "a2977d2db3aaf1a3912922a28e513baaf7e2e8a4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTI5NzdkMmRiM2FhZjFhMzkxMjkyMmEyOGU1MTNiYWFmN2UyZThhNA==", "commit": {"author": {"name": "Craig Burley", "email": "burley@gnu.ai.mit.edu", "date": "1997-11-03T06:07:04Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1997-11-03T06:07:04Z"}, "message": "Important patch from Burley.\n\nFrom-SVN: r16291", "tree": {"sha": "b036c2c43d5fce9847860cef2ff7d2a6aa09f252", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b036c2c43d5fce9847860cef2ff7d2a6aa09f252"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a2977d2db3aaf1a3912922a28e513baaf7e2e8a4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a2977d2db3aaf1a3912922a28e513baaf7e2e8a4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a2977d2db3aaf1a3912922a28e513baaf7e2e8a4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a2977d2db3aaf1a3912922a28e513baaf7e2e8a4/comments", "author": null, "committer": null, "parents": [{"sha": "af75269882c389f1abce41e732b27fdfedba1131", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/af75269882c389f1abce41e732b27fdfedba1131", "html_url": "https://github.com/Rust-GCC/gccrs/commit/af75269882c389f1abce41e732b27fdfedba1131"}], "stats": {"total": 64, "additions": 59, "deletions": 5}, "files": [{"sha": "174a15ffe82775b8b7533de59b379c1bf6ed4589", "filename": "gcc/f/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2977d2db3aaf1a3912922a28e513baaf7e2e8a4/gcc%2Ff%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2977d2db3aaf1a3912922a28e513baaf7e2e8a4/gcc%2Ff%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2FChangeLog?ref=a2977d2db3aaf1a3912922a28e513baaf7e2e8a4", "patch": "@@ -1,3 +1,13 @@\n+Fri Oct 10 13:00:48 1997  Craig Burley  <burley@gnu.ai.mit.edu>\n+\n+\t* ste.c (ffeste_begin_iterdo_): Fix loop setup so iteration\n+\tvariable is modified only after the #iterations is calculated;\n+\totherwise if the iteration variable is aliased to any of the\n+\toperands in the start, end, or increment expressions, the\n+\twrong #iterations might be calculated.\n+\n+\t* com.c (ffecom_save_tree): Fix indentation.\n+\n Mon Sep 29 16:18:21 1997  Craig Burley  <burley@gnu.ai.mit.edu>\n \n \t* stu.c (ffestu_list_exec_transition_,"}, {"sha": "99fbcc30d3cee026027ca690b9c3bb8919377d3e", "filename": "gcc/f/com.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2977d2db3aaf1a3912922a28e513baaf7e2e8a4/gcc%2Ff%2Fcom.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2977d2db3aaf1a3912922a28e513baaf7e2e8a4/gcc%2Ff%2Fcom.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Fcom.c?ref=a2977d2db3aaf1a3912922a28e513baaf7e2e8a4", "patch": "@@ -13293,7 +13293,8 @@ ffecom_return_expr (ffebld expr)\n /* Do save_expr only if tree is not error_mark_node.  */\n \n #if FFECOM_targetCURRENT == FFECOM_targetGCC\n-tree ffecom_save_tree (tree t)\n+tree\n+ffecom_save_tree (tree t)\n {\n   return save_expr (t);\n }"}, {"sha": "411ed7054697821767f6ced71be63620fd903181", "filename": "gcc/f/news.texi", "status": "modified", "additions": 42, "deletions": 1, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2977d2db3aaf1a3912922a28e513baaf7e2e8a4/gcc%2Ff%2Fnews.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2977d2db3aaf1a3912922a28e513baaf7e2e8a4/gcc%2Ff%2Fnews.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Fnews.texi?ref=a2977d2db3aaf1a3912922a28e513baaf7e2e8a4", "patch": "@@ -5,7 +5,7 @@\n @c The text of this file appears in the file BUGS\n @c in the G77 distribution, as well as in the G77 manual.\n \n-@c 1997-09-09\n+@c 1997-10-10\n \n @ifclear NEWSONLY\n @node News\n@@ -24,6 +24,47 @@ diagnostics, internal improvements, and miscellany.\n This order is not strict---for example, some items\n involve a combination of these elements.\n \n+@heading In 0.5.22:\n+@itemize @bullet\n+@item\n+Fix code generation for iterative @code{DO} loops that\n+have one or more references to the iteration variable,\n+or to aliases of it, in their control expressions.\n+For example, @samp{DO 10 J=2,J} now is compiled correctly.\n+\n+@item\n+Fix a compiler crash involving optimization of\n+certain complicated expressions involving @code{COMPLEX}\n+arithmetic (especially multiplication).\n+\n+@item\n+Rename the @code{gcc} keyword @code{restrict} to\n+@code{__restrict__}, to avoid rejecting valid, existing,\n+C programs.\n+Support for @code{restrict} is now more like support\n+for @code{complex}.\n+\n+@item\n+Fix @code{DTime} intrinsic so as not to truncate\n+results to integer values (on some systems).\n+\n+@item\n+Improve diagnostic messages from @code{libf2c}\n+so it is more likely that the printing of the\n+active format string is limited to the string,\n+with no trailing garbage being printed.\n+\n+(Unlike @code{f2c}, @code{g77} does not append\n+a null byte to its compiled form of every\n+format string specified via a @code{FORMAT} statement.\n+However, @code{f2c} would exhibit the problem\n+anyway for a statement like @samp{PRINT '(I)garbage', 1}\n+by printing @samp{(I)garbage} as the format string.)\n+\n+@item\n+Upgrade to @code{libf2c} as of 1997-09-23.\n+@end itemize\n+\n @heading In 0.5.21:\n @itemize @bullet\n @item"}, {"sha": "31ae6a4b2a327b7b266c876fa18fcf3c2dfe7f5e", "filename": "gcc/f/ste.c", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2977d2db3aaf1a3912922a28e513baaf7e2e8a4/gcc%2Ff%2Fste.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2977d2db3aaf1a3912922a28e513baaf7e2e8a4/gcc%2Ff%2Fste.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Fste.c?ref=a2977d2db3aaf1a3912922a28e513baaf7e2e8a4", "patch": "@@ -395,12 +395,11 @@ ffeste_begin_iterdo_ (ffestw block, tree *xtvar, tree *xtincr,\n \n   /* Do the initial assignment into the DO var.  */\n \n-  expr = ffecom_modify (void_type_node, tvar, tstart);\n-  expand_expr_stmt (expr);\n+  tstart = ffecom_save_tree (tstart);\n \n   expr = ffecom_2 (MINUS_EXPR, TREE_TYPE (tvar),\n \t\t   tend,\n-\t\t   TREE_CONSTANT (tstart) ? tstart : tvar);\n+\t\t   tstart);\n \n   if (!ffe_is_onetrip ())\n     {\n@@ -439,6 +438,9 @@ ffeste_begin_iterdo_ (ffestw block, tree *xtvar, tree *xtincr,\n   expr = ffecom_modify (void_type_node, niters, expr);\n   expand_expr_stmt (expr);\n \n+  expr = ffecom_modify (void_type_node, tvar, tstart);\n+  expand_expr_stmt (expr);\n+\n   if (block == NULL)\n     expand_start_loop_continue_elsewhere (0);\n   else"}]}