{"sha": "3af89f8bdff9b012a3737c6b6dd5d7cd2de1a1b8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2FmODlmOGJkZmY5YjAxMmEzNzM3YzZiNmRkNWQ3Y2QyZGUxYTFiOA==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo.carlini@oracle.com", "date": "2014-05-11T10:23:34Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2014-05-11T10:23:34Z"}, "message": "re PR c++/59705 (possible compiler bug regarding SFINAE (program compiles fine))\n\n2014-05-11  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR c++/59705\n\t* g++.dg/cpp0x/sfinae51.C: New.\n\n\tPR c++/58353\n\t* g++.dg/cpp0x/variadic157.C: New.\n\nFrom-SVN: r210310", "tree": {"sha": "eb4ac37251c46ec3b6322af86a298659ed6993cc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/eb4ac37251c46ec3b6322af86a298659ed6993cc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3af89f8bdff9b012a3737c6b6dd5d7cd2de1a1b8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3af89f8bdff9b012a3737c6b6dd5d7cd2de1a1b8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3af89f8bdff9b012a3737c6b6dd5d7cd2de1a1b8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3af89f8bdff9b012a3737c6b6dd5d7cd2de1a1b8/comments", "author": null, "committer": null, "parents": [{"sha": "6f8531afe15df06ddda3b0a72eacddb1cc223e33", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6f8531afe15df06ddda3b0a72eacddb1cc223e33", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6f8531afe15df06ddda3b0a72eacddb1cc223e33"}], "stats": {"total": 64, "additions": 64, "deletions": 0}, "files": [{"sha": "bcf4038f7765be604d4951f3895ca200e9edc84f", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3af89f8bdff9b012a3737c6b6dd5d7cd2de1a1b8/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3af89f8bdff9b012a3737c6b6dd5d7cd2de1a1b8/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=3af89f8bdff9b012a3737c6b6dd5d7cd2de1a1b8", "patch": "@@ -1,3 +1,11 @@\n+2014-05-11  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR c++/59705\n+\t* g++.dg/cpp0x/sfinae51.C: New.\n+\n+\tPR c++/58353\n+\t* g++.dg/cpp0x/variadic157.C: New.\n+\n 2014-05-10  Oleg Endo  <olegendo@gcc.gnu.org>\n \n \tPR target/51244"}, {"sha": "380811dce032fa21088fdb1192f1390e5d6f875e", "filename": "gcc/testsuite/g++.dg/cpp0x/sfinae51.C", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3af89f8bdff9b012a3737c6b6dd5d7cd2de1a1b8/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fsfinae51.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3af89f8bdff9b012a3737c6b6dd5d7cd2de1a1b8/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fsfinae51.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fsfinae51.C?ref=3af89f8bdff9b012a3737c6b6dd5d7cd2de1a1b8", "patch": "@@ -0,0 +1,28 @@\n+// PR c++/59705\n+// { dg-do compile { target c++11 } }\n+\n+struct HasIter {\n+   typedef int * const_iterator;\n+};\n+\n+struct NoIter {\n+};\n+\n+template <typename T>\n+constexpr bool foo(const T &, typename T::const_iterator *)\n+{\n+  return true;\n+}\n+\n+template <typename T>\n+constexpr bool foo(const T &, ...)\n+{\n+  return false;\n+}\n+\n+HasIter has_iter;\n+NoIter no_iter;\n+\n+static_assert (!foo(no_iter, 0), \"\");\n+static_assert (foo(has_iter, 0), \"\");\n+static_assert (foo<HasIter>(has_iter, 0), \"\");"}, {"sha": "40aa3801d066f88bb8f1422a3a0d1b029591459f", "filename": "gcc/testsuite/g++.dg/cpp0x/variadic157.C", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3af89f8bdff9b012a3737c6b6dd5d7cd2de1a1b8/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fvariadic157.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3af89f8bdff9b012a3737c6b6dd5d7cd2de1a1b8/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fvariadic157.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fvariadic157.C?ref=3af89f8bdff9b012a3737c6b6dd5d7cd2de1a1b8", "patch": "@@ -0,0 +1,28 @@\n+// PR c++/58353\n+// { dg-do compile { target c++11 } }\n+\n+template<class E, E V, int CNT>\n+struct seq_t\n+{\n+  template<E... Es> struct seq{};\n+\n+  template<int N, E... Es>\n+  struct gen : gen<N - 1, V, Es...>{};\n+\n+  template<E... Es>\n+  struct gen<0, Es...> : seq<Es...>{};\n+\n+  struct bits_t{ E e[CNT]; };\n+\n+  template<E... Es>\n+  static bits_t init(seq<Es...>) {return {{Es...}};}\n+\n+  static bits_t init() {return init(gen<CNT>{});}\n+};\n+\n+typedef seq_t<int, 123, 5> wow;\n+\n+int main()\n+{\n+  wow::init();\n+}"}]}