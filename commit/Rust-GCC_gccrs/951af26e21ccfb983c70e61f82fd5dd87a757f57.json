{"sha": "951af26e21ccfb983c70e61f82fd5dd87a757f57", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTUxYWYyNmUyMWNjZmI5ODNjNzBlNjFmODJmZDVkZDg3YTc1N2Y1Nw==", "commit": {"author": {"name": "Jason Merrill", "email": "merrill@gnu.org", "date": "1995-03-18T11:43:35Z"}, "committer": {"name": "Jason Merrill", "email": "merrill@gnu.org", "date": "1995-03-18T11:43:35Z"}, "message": "Fix -Wreturn-type for inlines.\n\nFrom-SVN: r9201", "tree": {"sha": "57e51c3800c3495c19b9db571c632f61ec39d341", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/57e51c3800c3495c19b9db571c632f61ec39d341"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/951af26e21ccfb983c70e61f82fd5dd87a757f57", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/951af26e21ccfb983c70e61f82fd5dd87a757f57", "html_url": "https://github.com/Rust-GCC/gccrs/commit/951af26e21ccfb983c70e61f82fd5dd87a757f57", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/951af26e21ccfb983c70e61f82fd5dd87a757f57/comments", "author": null, "committer": null, "parents": [{"sha": "47c0d9de92723e805c6167ff53e850dfe3354e9f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/47c0d9de92723e805c6167ff53e850dfe3354e9f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/47c0d9de92723e805c6167ff53e850dfe3354e9f"}], "stats": {"total": 35, "additions": 21, "deletions": 14}, "files": [{"sha": "b206128c9547d71ea68329b3fb3c11fc6ae1b447", "filename": "gcc/toplev.c", "status": "modified", "additions": 21, "deletions": 14, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/951af26e21ccfb983c70e61f82fd5dd87a757f57/gcc%2Ftoplev.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/951af26e21ccfb983c70e61f82fd5dd87a757f57/gcc%2Ftoplev.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftoplev.c?ref=951af26e21ccfb983c70e61f82fd5dd87a757f57", "patch": "@@ -2859,24 +2859,30 @@ rest_of_compilation (decl)\n \t\t   && ! flag_keep_inline_functions)\n \t\t  || DECL_EXTERNAL (decl))))\n \t{\n-#ifdef DWARF_DEBUGGING_INFO\n-\t  /* Generate the DWARF info for the \"abstract\" instance\n-\t     of a function which we may later generate inlined and/or\n-\t     out-of-line instances of.  */\n-\t  if (write_symbols == DWARF_DEBUG)\n+\t  DECL_DEFER_OUTPUT (decl) = 1;\n+\n+\t  /* If -Wreturn-type, we have to do a bit of compilation.  */\n+\t  if (! warn_return_type)\n \t    {\n-\t      set_decl_abstract_flags (decl, 1);\n-\t      TIMEVAR (symout_time, dwarfout_file_scope_decl (decl, 0));\n-\t      set_decl_abstract_flags (decl, 0);\n-\t    }\n+#ifdef DWARF_DEBUGGING_INFO\n+\t      /* Generate the DWARF info for the \"abstract\" instance\n+\t\t of a function which we may later generate inlined and/or\n+\t\t out-of-line instances of.  */\n+\t      if (write_symbols == DWARF_DEBUG)\n+\t\t{\n+\t\t  set_decl_abstract_flags (decl, 1);\n+\t\t  TIMEVAR (symout_time, dwarfout_file_scope_decl (decl, 0));\n+\t\t  set_decl_abstract_flags (decl, 0);\n+\t\t}\n #endif\n-\t  TIMEVAR (integration_time, save_for_inline_nocopy (decl));\n-\t  goto exit_rest_of_compilation;\n+\t      TIMEVAR (integration_time, save_for_inline_nocopy (decl));\n+\t      goto exit_rest_of_compilation;\n+\t    }\n \t}\n \n       /* If we have to compile the function now, save its rtl and subdecls\n \t so that its compilation will not affect what others get.  */\n-      if (DECL_INLINE (decl))\n+      if (DECL_INLINE (decl) || DECL_DEFER_OUTPUT (decl))\n \t{\n #ifdef DWARF_DEBUGGING_INFO\n \t  /* Generate the DWARF info for the \"abstract\" instance of\n@@ -2901,7 +2907,8 @@ rest_of_compilation (decl)\n \tgoto exit_rest_of_compilation;\n     }\n \n-  TREE_ASM_WRITTEN (decl) = 1;\n+  if (! DECL_DEFER_OUTPUT (decl))\n+    TREE_ASM_WRITTEN (decl) = 1;\n \n   /* Now that integrate will no longer see our rtl, we need not distinguish\n      between the return value of this function and the return value of called\n@@ -2958,7 +2965,7 @@ rest_of_compilation (decl)\n     }\n \n   /* Now is when we stop if -fsyntax-only and -Wreturn-type.  */\n-  if (rtl_dump_and_exit || flag_syntax_only)\n+  if (rtl_dump_and_exit || flag_syntax_only || DECL_DEFER_OUTPUT (decl))\n     goto exit_rest_of_compilation;\n \n   /* Dump rtl code after jump, if we are doing that.  */"}]}