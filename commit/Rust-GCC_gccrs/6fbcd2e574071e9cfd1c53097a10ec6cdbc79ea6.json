{"sha": "6fbcd2e574071e9cfd1c53097a10ec6cdbc79ea6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmZiY2QyZTU3NDA3MWU5Y2ZkMWM1MzA5N2ExMGVjNmNkYmM3OWVhNg==", "commit": {"author": {"name": "Benjamin Kosnik", "email": "bkoz@redhat.com", "date": "2005-12-18T08:08:07Z"}, "committer": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2005-12-18T08:08:07Z"}, "message": "re PR libstdc++/25472 (--disable-hosted-libstdcxx does not work)\n\n2005-12-17  Benjamin Kosnik  <bkoz@redhat.com>\n\n        * src/io-inst.cc: Separate instantiations into...\n        * src/ios-inst.cc: .. this.\n        * src/iostream-inst.cc: ... and this.\n        * src/Makefile.am (sources): Update.\n        * src/Makefile.in: Regenerate.\t\n\n2005-12-17  Benjamin Kosnik  <bkoz@redhat.com>\n\t\n\tPR libstdc++/25472\n        * include/c_std/std_cstdlib.h: Fix for freestanding.\n\n2005-12-17  Benjamin Kosnik  <bkoz@redhat.com>\n\n\t* testsuite/libstdc++-dg/normal.exp: Rename to..\n\t* testsuite/libstdc++-dg/conformance.exp: ... this.\n\nFrom-SVN: r108743", "tree": {"sha": "0efdb35c85d4cd38b0a777753a8c02442040322d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0efdb35c85d4cd38b0a777753a8c02442040322d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6fbcd2e574071e9cfd1c53097a10ec6cdbc79ea6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6fbcd2e574071e9cfd1c53097a10ec6cdbc79ea6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6fbcd2e574071e9cfd1c53097a10ec6cdbc79ea6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6fbcd2e574071e9cfd1c53097a10ec6cdbc79ea6/comments", "author": null, "committer": null, "parents": [{"sha": "6b62dff819633db96e4086f77470fa193bdcde6a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6b62dff819633db96e4086f77470fa193bdcde6a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6b62dff819633db96e4086f77470fa193bdcde6a"}], "stats": {"total": 161, "additions": 110, "deletions": 51}, "files": [{"sha": "638a77133a022f802a536dc0a21f5c13f03a9de6", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6fbcd2e574071e9cfd1c53097a10ec6cdbc79ea6/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6fbcd2e574071e9cfd1c53097a10ec6cdbc79ea6/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=6fbcd2e574071e9cfd1c53097a10ec6cdbc79ea6", "patch": "@@ -1,3 +1,21 @@\n+2005-12-17  Benjamin Kosnik  <bkoz@redhat.com>\n+\n+        * src/io-inst.cc: Separate instantiations into...\n+        * src/ios-inst.cc: .. this.\n+        * src/iostream-inst.cc: ... and this.\n+        * src/Makefile.am (sources): Update.\n+        * src/Makefile.in: Regenerate.\t\n+\n+2005-12-17  Benjamin Kosnik  <bkoz@redhat.com>\n+\t\n+\tPR libstdc++/25472\n+        * include/c_std/std_cstdlib.h: Fix for freestanding.\n+\n+2005-12-17  Benjamin Kosnik  <bkoz@redhat.com>\n+\n+\t* testsuite/libstdc++-dg/normal.exp: Rename to..\n+\t* testsuite/libstdc++-dg/conformance.exp: ... this.\n+\n 2005-12-17  Paolo Carlini  <pcarlini@suse.de>\n \n \t* include/bits/stl_vector.h (vector(const vector&)): Use"}, {"sha": "2139092f57d6d600e661238d36645f2c2c81c90b", "filename": "libstdc++-v3/include/c_std/std_cstdlib.h", "status": "modified", "additions": 34, "deletions": 29, "changes": 63, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6fbcd2e574071e9cfd1c53097a10ec6cdbc79ea6/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fstd_cstdlib.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6fbcd2e574071e9cfd1c53097a10ec6cdbc79ea6/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fstd_cstdlib.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fstd_cstdlib.h?ref=6fbcd2e574071e9cfd1c53097a10ec6cdbc79ea6", "patch": "@@ -50,13 +50,25 @@\n #include <bits/c++config.h>\n #include <cstddef>\n \n-#if _GLIBCXX_HOSTED\n-/* The C standard does not require a freestanding implementation to\n-   provide <stdlib.h>.  However, the C++ standard does still require\n-   <cstdlib> -- but only the functionality mentioned in\n-   [lib.support.start.term].  */\n+#if !_GLIBCXX_HOSTED\n+// The C standard does not require a freestanding implementation to\n+// provide <stdlib.h>.  However, the C++ standard does still require\n+// <cstdlib> -- but only the functionality mentioned in\n+// [lib.support.start.term].\n+\n+#define EXIT_SUCCESS 0\n+#define EXIT_FAILURE 1\n+\n+namespace std\n+{\n+  extern \"C\" void abort(void);\n+  extern \"C\" int atexit(void (*)());\n+  extern \"C\" void exit(int);\n+} // namespace std\n+\n+#else\n+\n #include <stdlib.h>\n-#endif\n \n // Get rid of those macros defined in <stdlib.h> in lieu of real functions.\n #undef abort\n@@ -90,7 +102,6 @@\n \n namespace std\n {\n-#if _GLIBCXX_HOSTED\n   using ::div_t;\n   using ::ldiv_t;\n \n@@ -132,16 +143,7 @@ namespace std\n \n   inline ldiv_t\n   div(long __i, long __j) { return ldiv(__i, __j); }\n-#else\n-  /* Provide the minimal set of definitions required of a freestanding\n-     implementation.  */\n-  #define EXIT_SUCCESS 0\n-  #define EXIT_FAILURE 1\n-  extern \"C\" void abort(void);\n-  extern \"C\" int atexit(void (*)());\n-  extern \"C\" void exit(int);\n-#endif\n-}\n+} // namespace std\n \n #if _GLIBCXX_USE_C99\n \n@@ -198,21 +200,24 @@ namespace __gnu_cxx\n namespace std\n {\n #if !_GLIBCXX_USE_C99_LONG_LONG_DYNAMIC\n-  using __gnu_cxx::lldiv_t;\n+  using ::__gnu_cxx::lldiv_t;\n #endif\n-  using __gnu_cxx::_Exit;\n-  using __gnu_cxx::abs;\n+  using ::__gnu_cxx::_Exit;\n+  using ::__gnu_cxx::abs;\n #if !_GLIBCXX_USE_C99_LONG_LONG_DYNAMIC\n-  using __gnu_cxx::llabs;\n-  using __gnu_cxx::div;\n-  using __gnu_cxx::lldiv;\n+  using ::__gnu_cxx::llabs;\n+  using ::__gnu_cxx::div;\n+  using ::__gnu_cxx::lldiv;\n #endif\n-  using __gnu_cxx::atoll;\n-  using __gnu_cxx::strtof;\n-  using __gnu_cxx::strtoll;\n-  using __gnu_cxx::strtoull;\n-  using __gnu_cxx::strtold;\n+  using ::__gnu_cxx::atoll;\n+  using ::__gnu_cxx::strtof;\n+  using ::__gnu_cxx::strtoll;\n+  using ::__gnu_cxx::strtoull;\n+  using ::__gnu_cxx::strtold;\n }\n-#endif\n+\n+#endif // _GLIBCXX_USE_C99\n+\n+#endif // !_GLIBCXX_HOSTED\n \n #endif"}, {"sha": "b7cc1dd89ecde99d15017a26530c2f8774d97b5a", "filename": "libstdc++-v3/src/Makefile.am", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6fbcd2e574071e9cfd1c53097a10ec6cdbc79ea6/libstdc%2B%2B-v3%2Fsrc%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6fbcd2e574071e9cfd1c53097a10ec6cdbc79ea6/libstdc%2B%2B-v3%2Fsrc%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2FMakefile.am?ref=6fbcd2e574071e9cfd1c53097a10ec6cdbc79ea6", "patch": "@@ -144,7 +144,8 @@ sources = \\\n \tconcept-inst.cc \\\n \tfstream-inst.cc \\\n \text-inst.cc \\\n-\tio-inst.cc \\\n+\tios-inst.cc \\\n+\tiostream-inst.cc \\\n \tistream-inst.cc \\\n \tistream.cc \\\n \tlocale-inst.cc \\"}, {"sha": "c3a9d6efdf7bae52a1e3366541dc881949d68b11", "filename": "libstdc++-v3/src/Makefile.in", "status": "modified", "additions": 7, "deletions": 6, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6fbcd2e574071e9cfd1c53097a10ec6cdbc79ea6/libstdc%2B%2B-v3%2Fsrc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6fbcd2e574071e9cfd1c53097a10ec6cdbc79ea6/libstdc%2B%2B-v3%2Fsrc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2FMakefile.in?ref=6fbcd2e574071e9cfd1c53097a10ec6cdbc79ea6", "patch": "@@ -70,11 +70,11 @@ am__objects_3 = bitmap_allocator.lo pool_allocator.lo mt_allocator.lo \\\n \tlist.lo locale.lo locale_init.lo locale_facets.lo \\\n \tlocalename.lo stdexcept.lo strstream.lo tree.lo \\\n \tallocator-inst.lo concept-inst.lo fstream-inst.lo ext-inst.lo \\\n-\tio-inst.lo istream-inst.lo istream.lo locale-inst.lo \\\n-\tlocale-misc-inst.lo misc-inst.lo ostream-inst.lo \\\n-\tsstream-inst.lo streambuf-inst.lo streambuf.lo string-inst.lo \\\n-\tvalarray-inst.lo wlocale-inst.lo wstring-inst.lo \\\n-\t$(am__objects_1) $(am__objects_2)\n+\tios-inst.lo iostream-inst.lo istream-inst.lo istream.lo \\\n+\tlocale-inst.lo locale-misc-inst.lo misc-inst.lo \\\n+\tostream-inst.lo sstream-inst.lo streambuf-inst.lo streambuf.lo \\\n+\tstring-inst.lo valarray-inst.lo wlocale-inst.lo \\\n+\twstring-inst.lo $(am__objects_1) $(am__objects_2)\n am_libstdc___la_OBJECTS = $(am__objects_3)\n libstdc___la_OBJECTS = $(am_libstdc___la_OBJECTS)\n DEFAULT_INCLUDES = -I. -I$(srcdir) -I$(top_builddir)\n@@ -334,7 +334,8 @@ sources = \\\n \tconcept-inst.cc \\\n \tfstream-inst.cc \\\n \text-inst.cc \\\n-\tio-inst.cc \\\n+\tios-inst.cc \\\n+\tiostream-inst.cc \\\n \tistream-inst.cc \\\n \tistream.cc \\\n \tlocale-inst.cc \\"}, {"sha": "83996f9cff98aea57f5226289b08314aee634c09", "filename": "libstdc++-v3/src/ios-inst.cc", "status": "added", "additions": 44, "deletions": 0, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6fbcd2e574071e9cfd1c53097a10ec6cdbc79ea6/libstdc%2B%2B-v3%2Fsrc%2Fios-inst.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6fbcd2e574071e9cfd1c53097a10ec6cdbc79ea6/libstdc%2B%2B-v3%2Fsrc%2Fios-inst.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fios-inst.cc?ref=6fbcd2e574071e9cfd1c53097a10ec6cdbc79ea6", "patch": "@@ -0,0 +1,44 @@\n+// Explicit instantiation file.\n+\n+// Copyright (C) 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2005\n+// Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+//\n+// ISO C++ 14882:\n+//\n+\n+#include <ios>\n+\n+namespace std\n+{\n+  template class basic_ios<char>;\n+\n+#ifdef _GLIBCXX_USE_WCHAR_T\n+  template class basic_ios<wchar_t>;\n+#endif\n+}"}, {"sha": "9f389e64f9192e1d961f1a3ce1650b23d09c4ab8", "filename": "libstdc++-v3/src/iostream-inst.cc", "status": "renamed", "additions": 5, "deletions": 15, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6fbcd2e574071e9cfd1c53097a10ec6cdbc79ea6/libstdc%2B%2B-v3%2Fsrc%2Fiostream-inst.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6fbcd2e574071e9cfd1c53097a10ec6cdbc79ea6/libstdc%2B%2B-v3%2Fsrc%2Fiostream-inst.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fiostream-inst.cc?ref=6fbcd2e574071e9cfd1c53097a10ec6cdbc79ea6", "patch": "@@ -1,6 +1,6 @@\n // Explicit instantiation file.\n \n-// Copyright (C) 1997, 1998, 1999, 2000, 2001, 2002, 2003\n+// Copyright (C) 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2005\n // Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n@@ -32,28 +32,18 @@\n // ISO C++ 14882:\n //\n \n-#include <ios>\n+#include <iostream>\n #include <iomanip>\n \n namespace std\n {\n-  // basic_ios\n-  template class basic_ios<char>;\n-#ifdef _GLIBCXX_USE_WCHAR_T\n-  template class basic_ios<wchar_t>;\n-#endif\n-\n-  // iomanip\n   template class _Setfill<char>;\n   template _Setfill<char> setfill(char);\n+  template class basic_iostream<char>;\n+\n #ifdef _GLIBCXX_USE_WCHAR_T\n   template class _Setfill<wchar_t>;\n   template _Setfill<wchar_t> setfill(wchar_t);\n-#endif\n-\n-  // iostream\n-  template class basic_iostream<char>;\n-#ifdef _GLIBCXX_USE_WCHAR_T\n   template class basic_iostream<wchar_t>; \n #endif\n-} // namespace std\n+}", "previous_filename": "libstdc++-v3/src/io-inst.cc"}, {"sha": "21bc3c1b9150f41c854ca649b980abba6ae3af38", "filename": "libstdc++-v3/testsuite/libstdc++-dg/conformance.exp", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6fbcd2e574071e9cfd1c53097a10ec6cdbc79ea6/libstdc%2B%2B-v3%2Ftestsuite%2Flibstdc%2B%2B-dg%2Fconformance.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6fbcd2e574071e9cfd1c53097a10ec6cdbc79ea6/libstdc%2B%2B-v3%2Ftestsuite%2Flibstdc%2B%2B-dg%2Fconformance.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Flibstdc%2B%2B-dg%2Fconformance.exp?ref=6fbcd2e574071e9cfd1c53097a10ec6cdbc79ea6", "previous_filename": "libstdc++-v3/testsuite/libstdc++-dg/normal.exp"}]}