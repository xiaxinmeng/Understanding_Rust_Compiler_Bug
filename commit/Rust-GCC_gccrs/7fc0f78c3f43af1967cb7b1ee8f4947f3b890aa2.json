{"sha": "7fc0f78c3f43af1967cb7b1ee8f4947f3b890aa2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2ZjMGY3OGMzZjQzYWYxOTY3Y2I3YjFlZThmNDk0N2YzYjg5MGFhMg==", "commit": {"author": {"name": "Liu Hao", "email": "lh_mouse@126.com", "date": "2020-10-08T02:26:13Z"}, "committer": {"name": "Jonathan Yong", "email": "10walls@gmail.com", "date": "2020-11-07T02:50:43Z"}, "message": "libsupc++: Make the destructor parameter to `__cxa_thread_atexit()` use the `__thiscall` calling convention for i686-w64-mingw32\n\nThe mingw-w64 implementations of `__cxa_thread_atexit()` and `__cxa_atexit()` have been\nusing `__thiscall` since two years ago. Using the default calling convention (which is\n`__cdecl`) causes crashes as explained in PR83562.\n\nCalling conventions have no effect on x86_64-w64-mingw32.\n\nReference: https://gcc.gnu.org/bugzilla/show_bug.cgi?id=83562\nReference: https://sourceforge.net/p/mingw-w64/mingw-w64/ci/master/tree/mingw-w64-crt/crt/cxa_thread_atexit.c\nReference: https://sourceforge.net/p/mingw-w64/mingw-w64/ci/f3e0fbb40cbc9f8821db8bd8a0c4dae8ff671e9f/\nReference: https://github.com/msys2/MINGW-packages/issues/7071\nSigned-off-by: Liu Hao <lh_mouse@126.com>\n\n    2020-10-08  Liu Hao  <lh_mouse@126.com>\n\n\tlibstdc++-v3:\n\t* libsupc++/cxxabi.h: (__cxa_atexit): mark with _GLIBCXX_CDTOR_CALLABI\n\t(__cxa_thread_atexit): ditto\n\t* libsupc++/atexit_thread.cc: (__cxa_atexit): mark with\n\t_GLIBCXX_CDTOR_CALLABI\n\t(__cxa_thread_atexit): ditto\n\t(elt): ditto", "tree": {"sha": "e6d028bf3901580a8afc67224cbdf05936529daf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e6d028bf3901580a8afc67224cbdf05936529daf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7fc0f78c3f43af1967cb7b1ee8f4947f3b890aa2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7fc0f78c3f43af1967cb7b1ee8f4947f3b890aa2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7fc0f78c3f43af1967cb7b1ee8f4947f3b890aa2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7fc0f78c3f43af1967cb7b1ee8f4947f3b890aa2/comments", "author": {"login": "lhmouse", "id": 5071344, "node_id": "MDQ6VXNlcjUwNzEzNDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/5071344?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lhmouse", "html_url": "https://github.com/lhmouse", "followers_url": "https://api.github.com/users/lhmouse/followers", "following_url": "https://api.github.com/users/lhmouse/following{/other_user}", "gists_url": "https://api.github.com/users/lhmouse/gists{/gist_id}", "starred_url": "https://api.github.com/users/lhmouse/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lhmouse/subscriptions", "organizations_url": "https://api.github.com/users/lhmouse/orgs", "repos_url": "https://api.github.com/users/lhmouse/repos", "events_url": "https://api.github.com/users/lhmouse/events{/privacy}", "received_events_url": "https://api.github.com/users/lhmouse/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jon-y", "id": 4688224, "node_id": "MDQ6VXNlcjQ2ODgyMjQ=", "avatar_url": "https://avatars.githubusercontent.com/u/4688224?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jon-y", "html_url": "https://github.com/jon-y", "followers_url": "https://api.github.com/users/jon-y/followers", "following_url": "https://api.github.com/users/jon-y/following{/other_user}", "gists_url": "https://api.github.com/users/jon-y/gists{/gist_id}", "starred_url": "https://api.github.com/users/jon-y/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jon-y/subscriptions", "organizations_url": "https://api.github.com/users/jon-y/orgs", "repos_url": "https://api.github.com/users/jon-y/repos", "events_url": "https://api.github.com/users/jon-y/events{/privacy}", "received_events_url": "https://api.github.com/users/jon-y/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "44cab2d8fd777450953ee1c1dfeba6f67db13869", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/44cab2d8fd777450953ee1c1dfeba6f67db13869", "html_url": "https://github.com/Rust-GCC/gccrs/commit/44cab2d8fd777450953ee1c1dfeba6f67db13869"}], "stats": {"total": 22, "additions": 18, "deletions": 4}, "files": [{"sha": "4f7f982ac6bc5c7bdb2771a81499ecaa7d96e006", "filename": "libstdc++-v3/libsupc++/atexit_thread.cc", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7fc0f78c3f43af1967cb7b1ee8f4947f3b890aa2/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Fatexit_thread.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7fc0f78c3f43af1967cb7b1ee8f4947f3b890aa2/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Fatexit_thread.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Fatexit_thread.cc?ref=7fc0f78c3f43af1967cb7b1ee8f4947f3b890aa2", "patch": "@@ -30,16 +30,21 @@\n #include <windows.h>\n #endif\n \n+// Simplify it a little for this file.\n+#ifndef _GLIBCXX_CDTOR_CALLABI\n+#  define _GLIBCXX_CDTOR_CALLABI\n+#endif\n+\n #if _GLIBCXX_HAVE___CXA_THREAD_ATEXIT\n \n // Libc provides __cxa_thread_atexit definition.\n \n #elif _GLIBCXX_HAVE___CXA_THREAD_ATEXIT_IMPL\n \n-extern \"C\" int __cxa_thread_atexit_impl (void (*func) (void *),\n+extern \"C\" int __cxa_thread_atexit_impl (void (_GLIBCXX_CDTOR_CALLABI *func) (void *),\n \t\t\t\t\t void *arg, void *d);\n extern \"C\" int\n-__cxxabiv1::__cxa_thread_atexit (void (*dtor)(void *),\n+__cxxabiv1::__cxa_thread_atexit (void (_GLIBCXX_CDTOR_CALLABI *dtor)(void *),\n \t\t\t\t void *obj, void *dso_handle)\n   _GLIBCXX_NOTHROW\n {\n@@ -52,7 +57,7 @@ namespace {\n   // One element in a singly-linked stack of cleanups.\n   struct elt\n   {\n-    void (*destructor)(void *);\n+    void (_GLIBCXX_CDTOR_CALLABI *destructor)(void *);\n     void *object;\n     elt *next;\n #ifdef _GLIBCXX_THREAD_ATEXIT_WIN32\n@@ -116,7 +121,8 @@ namespace {\n }\n \n extern \"C\" int\n-__cxxabiv1::__cxa_thread_atexit (void (*dtor)(void *), void *obj, void */*dso_handle*/)\n+__cxxabiv1::__cxa_thread_atexit (void (_GLIBCXX_CDTOR_CALLABI *dtor)(void *),\n+\t\t\t\t void *obj, void */*dso_handle*/)\n   _GLIBCXX_NOTHROW\n {\n   // Do this initialization once."}, {"sha": "3d6217a6fac2c70aa66b0273d72de17891e5b365", "filename": "libstdc++-v3/libsupc++/cxxabi.h", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7fc0f78c3f43af1967cb7b1ee8f4947f3b890aa2/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Fcxxabi.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7fc0f78c3f43af1967cb7b1ee8f4947f3b890aa2/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Fcxxabi.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Fcxxabi.h?ref=7fc0f78c3f43af1967cb7b1ee8f4947f3b890aa2", "patch": "@@ -125,14 +125,22 @@ namespace __cxxabiv1\n \n   // DSO destruction.\n   int\n+#ifdef _GLIBCXX_CDTOR_CALLABI\n+  __cxa_atexit(void (_GLIBCXX_CDTOR_CALLABI *)(void*), void*, void*) _GLIBCXX_NOTHROW;\n+#else\n   __cxa_atexit(void (*)(void*), void*, void*) _GLIBCXX_NOTHROW;\n+#endif\n \n   void\n   __cxa_finalize(void*);\n \n   // TLS destruction.\n   int\n+#ifdef _GLIBCXX_CDTOR_CALLABI\n+  __cxa_thread_atexit(void (_GLIBCXX_CDTOR_CALLABI *)(void*), void*, void *) _GLIBCXX_NOTHROW;\n+#else\n   __cxa_thread_atexit(void (*)(void*), void*, void *) _GLIBCXX_NOTHROW;\n+#endif\n \n   // Pure virtual functions.\n   void"}]}