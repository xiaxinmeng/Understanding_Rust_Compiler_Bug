{"sha": "c1e7d240125d4927db2f87df874e2133d0e63ba9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzFlN2QyNDAxMjVkNDkyN2RiMmY4N2RmODc0ZTIxMzNkMGU2M2JhOQ==", "commit": {"author": {"name": "Diego Novillo", "email": "dnovillo@google.com", "date": "2008-02-05T16:31:20Z"}, "committer": {"name": "Diego Novillo", "email": "dnovillo@gcc.gnu.org", "date": "2008-02-05T16:31:20Z"}, "message": "http://gcc.gnu.org/ml/gcc-patches/2008-02/msg00140.html\n\n\tPR 33738\n\t* tree-vrp.c (vrp_evaluate_conditional): Revert fix for\n\tPR 33738.\n\ntestsuite/ChangeLog\n\n\tPR 33738\n\t* g++.dg/warn/pr33738.C: Remove.\n\nFrom-SVN: r132124", "tree": {"sha": "381dc8fbf6b7e9978afb8ed9677ef95490311161", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/381dc8fbf6b7e9978afb8ed9677ef95490311161"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c1e7d240125d4927db2f87df874e2133d0e63ba9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c1e7d240125d4927db2f87df874e2133d0e63ba9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c1e7d240125d4927db2f87df874e2133d0e63ba9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c1e7d240125d4927db2f87df874e2133d0e63ba9/comments", "author": {"login": "dnovillo", "id": 7295335, "node_id": "MDQ6VXNlcjcyOTUzMzU=", "avatar_url": "https://avatars.githubusercontent.com/u/7295335?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dnovillo", "html_url": "https://github.com/dnovillo", "followers_url": "https://api.github.com/users/dnovillo/followers", "following_url": "https://api.github.com/users/dnovillo/following{/other_user}", "gists_url": "https://api.github.com/users/dnovillo/gists{/gist_id}", "starred_url": "https://api.github.com/users/dnovillo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dnovillo/subscriptions", "organizations_url": "https://api.github.com/users/dnovillo/orgs", "repos_url": "https://api.github.com/users/dnovillo/repos", "events_url": "https://api.github.com/users/dnovillo/events{/privacy}", "received_events_url": "https://api.github.com/users/dnovillo/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "3a2041755b4ec15331bff0d7b60d545eeb6171a9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3a2041755b4ec15331bff0d7b60d545eeb6171a9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3a2041755b4ec15331bff0d7b60d545eeb6171a9"}], "stats": {"total": 83, "additions": 15, "deletions": 68}, "files": [{"sha": "95da033adc3dc18c76c8ab66efb1ec1260d3789f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c1e7d240125d4927db2f87df874e2133d0e63ba9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c1e7d240125d4927db2f87df874e2133d0e63ba9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c1e7d240125d4927db2f87df874e2133d0e63ba9", "patch": "@@ -1,3 +1,11 @@\n+2008-02-05  Diego Novillo  <dnovillo@google.com>\n+\n+\thttp://gcc.gnu.org/ml/gcc-patches/2008-02/msg00140.html\n+\n+\tPR 33738\n+\t* tree-vrp.c (vrp_evaluate_conditional): Revert fix for\n+\tPR 33738.\n+\n 2008-02-05  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n \tPR other/35070"}, {"sha": "843406430dc19410cbd3e86fb8714827a1dda5f0", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c1e7d240125d4927db2f87df874e2133d0e63ba9/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c1e7d240125d4927db2f87df874e2133d0e63ba9/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=c1e7d240125d4927db2f87df874e2133d0e63ba9", "patch": "@@ -1,3 +1,10 @@\n+2008-02-05  Diego Novillo  <dnovillo@google.com>\n+\n+\thttp://gcc.gnu.org/ml/gcc-patches/2008-02/msg00140.html\n+\n+\tPR 33738\n+\t* g++.dg/warn/pr33738.C: Remove.\n+\n 2008-02-05  Paul Thomas  <pault@gcc.gnu.org>\n \n \tPR fortran/34945"}, {"sha": "8847b6e342cd6449ffef548bcb2e5e454412c5d6", "filename": "gcc/testsuite/g++.dg/warn/pr33738.C", "status": "removed", "additions": 0, "deletions": 26, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a2041755b4ec15331bff0d7b60d545eeb6171a9/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2Fpr33738.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a2041755b4ec15331bff0d7b60d545eeb6171a9/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2Fpr33738.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2Fpr33738.C?ref=3a2041755b4ec15331bff0d7b60d545eeb6171a9", "patch": "@@ -1,26 +0,0 @@\n-// { dg-do run }\n-// { dg-options \"-O2 -Wtype-limits\" }\n-extern void link_error (void);\n-\n-enum Alpha {\n- ZERO = 0, ONE, TWO, THREE\n-};\n-\n-Alpha a2;\n-\n-int m1 = -1;\n-int GetM1() {\n- return m1;\n-}\n-\n-int main() {\n- a2 = static_cast<Alpha>(GetM1());\n- if (a2 == -1) {\t// { dg-warning \"always false due\" }\n-    link_error ();\n- }\n- if (-1 == a2) {\t// { dg-warning \"always false due\" }\n-    link_error ();\n- }\n- return 0;\n-}\n-"}, {"sha": "5f9a3279aa3cb5df783a59c31ca747277736e273", "filename": "gcc/tree-vrp.c", "status": "modified", "additions": 0, "deletions": 42, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c1e7d240125d4927db2f87df874e2133d0e63ba9/gcc%2Ftree-vrp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c1e7d240125d4927db2f87df874e2133d0e63ba9/gcc%2Ftree-vrp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vrp.c?ref=c1e7d240125d4927db2f87df874e2133d0e63ba9", "patch": "@@ -5073,48 +5073,6 @@ vrp_evaluate_conditional (tree cond, tree stmt)\n \t}\n     }\n \n-  if (warn_type_limits\n-      && ret\n-      && TREE_CODE_CLASS (TREE_CODE (cond)) == tcc_comparison)\n-    {\n-      /* If the comparison is being folded and the operand on the LHS\n-\t is being compared against a constant value that is outside of\n-\t the natural range of OP0's type, then the predicate will\n-\t always fold regardless of the value of OP0.  If -Wtype-limits\n-\t was specified, emit a warning.  */\n-      const char *warnmsg = NULL;\n-      tree op0 = TREE_OPERAND (cond, 0);\n-      tree op1 = TREE_OPERAND (cond, 1);\n-      tree type = TREE_TYPE (op0);\n-      value_range_t *vr0 = get_value_range (op0);\n-\n-      if (vr0->type != VR_VARYING\n-\t  && INTEGRAL_TYPE_P (type)\n-\t  && vrp_val_is_min (vr0->min)\n-\t  && vrp_val_is_max (vr0->max)\n-\t  && is_gimple_min_invariant (op1))\n-\t{\n-\t  if (integer_zerop (ret))\n-\t    warnmsg = G_(\"comparison always false due to limited range of \"\n-\t\t         \"data type\");\n-\t  else\n-\t    warnmsg = G_(\"comparison always true due to limited range of \"\n-\t\t\t \"data type\");\n-\t}\n-\n-      if (warnmsg)\n-\t{\n-\t  location_t locus;\n-\n-\t  if (!EXPR_HAS_LOCATION (stmt))\n-\t    locus = input_location;\n-\t  else\n-\t    locus = EXPR_LOCATION (stmt);\n-\n-\t  warning (OPT_Wextra, \"%H%s\", &locus, warnmsg);\n-\t}\n-    }\n-\n   return ret;\n }\n "}]}