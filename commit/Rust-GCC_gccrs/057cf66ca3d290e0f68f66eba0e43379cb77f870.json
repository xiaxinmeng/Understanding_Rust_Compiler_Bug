{"sha": "057cf66ca3d290e0f68f66eba0e43379cb77f870", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDU3Y2Y2NmNhM2QyOTBlMGY2OGY2NmViYTBlNDMzNzljYjc3Zjg3MA==", "commit": {"author": {"name": "Marc Glisse", "email": "marc.glisse@inria.fr", "date": "2018-10-02T14:55:39Z"}, "committer": {"name": "Marc Glisse", "email": "glisse@gcc.gnu.org", "date": "2018-10-02T14:55:39Z"}, "message": "No a*x+b*x factorization for signed vectors\n\n2018-10-02  Marc Glisse  <marc.glisse@inria.fr>\n\n\tPR middle-end/87319\n\t* fold-const.c (fold_plusminus_mult_expr): Handle complex and vectors.\n\t* tree.c (signed_or_unsigned_type_for): Handle complex.\n\nFrom-SVN: r264790", "tree": {"sha": "52902674b39218ed120fa87d82c33c2a8886a334", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/52902674b39218ed120fa87d82c33c2a8886a334"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/057cf66ca3d290e0f68f66eba0e43379cb77f870", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/057cf66ca3d290e0f68f66eba0e43379cb77f870", "html_url": "https://github.com/Rust-GCC/gccrs/commit/057cf66ca3d290e0f68f66eba0e43379cb77f870", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/057cf66ca3d290e0f68f66eba0e43379cb77f870/comments", "author": {"login": "mglisse", "id": 10097863, "node_id": "MDQ6VXNlcjEwMDk3ODYz", "avatar_url": "https://avatars.githubusercontent.com/u/10097863?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mglisse", "html_url": "https://github.com/mglisse", "followers_url": "https://api.github.com/users/mglisse/followers", "following_url": "https://api.github.com/users/mglisse/following{/other_user}", "gists_url": "https://api.github.com/users/mglisse/gists{/gist_id}", "starred_url": "https://api.github.com/users/mglisse/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mglisse/subscriptions", "organizations_url": "https://api.github.com/users/mglisse/orgs", "repos_url": "https://api.github.com/users/mglisse/repos", "events_url": "https://api.github.com/users/mglisse/events{/privacy}", "received_events_url": "https://api.github.com/users/mglisse/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a1c3d798efbf20497bfb6584c9a780dc24996ee1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a1c3d798efbf20497bfb6584c9a780dc24996ee1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a1c3d798efbf20497bfb6584c9a780dc24996ee1"}], "stats": {"total": 21, "additions": 19, "deletions": 2}, "files": [{"sha": "236f70c52e0039fcfd00a4ec859538e5ffb6db4c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/057cf66ca3d290e0f68f66eba0e43379cb77f870/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/057cf66ca3d290e0f68f66eba0e43379cb77f870/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=057cf66ca3d290e0f68f66eba0e43379cb77f870", "patch": "@@ -1,3 +1,9 @@\n+2018-10-02  Marc Glisse  <marc.glisse@inria.fr>\n+\n+\tPR middle-end/87319\n+\t* fold-const.c (fold_plusminus_mult_expr): Handle complex and vectors.\n+\t* tree.c (signed_or_unsigned_type_for): Handle complex.\n+\n 2018-10-02  Jeff Law  <law@redhat.com>\n \n \t* gimple-fold.c (get_range_strlen): Remove dead code."}, {"sha": "59cedeafd71efc11c1dcf893b321677aa474b4e5", "filename": "gcc/fold-const.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/057cf66ca3d290e0f68f66eba0e43379cb77f870/gcc%2Ffold-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/057cf66ca3d290e0f68f66eba0e43379cb77f870/gcc%2Ffold-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const.c?ref=057cf66ca3d290e0f68f66eba0e43379cb77f870", "patch": "@@ -7143,7 +7143,7 @@ fold_plusminus_mult_expr (location_t loc, enum tree_code code, tree type,\n   if (!same)\n     return NULL_TREE;\n \n-  if (! INTEGRAL_TYPE_P (type)\n+  if (! ANY_INTEGRAL_TYPE_P (type)\n       || TYPE_OVERFLOW_WRAPS (type)\n       /* We are neither factoring zero nor minus one.  */\n       || TREE_CODE (same) == INTEGER_CST)"}, {"sha": "748ece690ea4905a8629d213027d44d23739ecb3", "filename": "gcc/tree.c", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/057cf66ca3d290e0f68f66eba0e43379cb77f870/gcc%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/057cf66ca3d290e0f68f66eba0e43379cb77f870/gcc%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.c?ref=057cf66ca3d290e0f68f66eba0e43379cb77f870", "patch": "@@ -11209,7 +11209,7 @@ int_cst_value (const_tree x)\n tree\n signed_or_unsigned_type_for (int unsignedp, tree type)\n {\n-  if (TREE_CODE (type) == INTEGER_TYPE && TYPE_UNSIGNED (type) == unsignedp)\n+  if (ANY_INTEGRAL_TYPE_P (type) && TYPE_UNSIGNED (type) == unsignedp)\n     return type;\n \n   if (TREE_CODE (type) == VECTOR_TYPE)\n@@ -11223,6 +11223,17 @@ signed_or_unsigned_type_for (int unsignedp, tree type)\n       return build_vector_type (inner2, TYPE_VECTOR_SUBPARTS (type));\n     }\n \n+  if (TREE_CODE (type) == COMPLEX_TYPE)\n+    {\n+      tree inner = TREE_TYPE (type);\n+      tree inner2 = signed_or_unsigned_type_for (unsignedp, inner);\n+      if (!inner2)\n+\treturn NULL_TREE;\n+      if (inner == inner2)\n+\treturn type;\n+      return build_complex_type (inner2);\n+    }\n+\n   if (!INTEGRAL_TYPE_P (type)\n       && !POINTER_TYPE_P (type)\n       && TREE_CODE (type) != OFFSET_TYPE)"}]}