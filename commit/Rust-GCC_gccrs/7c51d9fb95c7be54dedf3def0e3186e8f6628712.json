{"sha": "7c51d9fb95c7be54dedf3def0e3186e8f6628712", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2M1MWQ5ZmI5NWM3YmU1NGRlZGYzZGVmMGUzMTg2ZThmNjYyODcxMg==", "commit": {"author": {"name": "Tom Tromey", "email": "tromey@cygnus.com", "date": "2000-02-08T00:17:28Z"}, "committer": {"name": "Tom Tromey", "email": "tromey@gcc.gnu.org", "date": "2000-02-08T00:17:28Z"}, "message": "interpret.cc (PUSHL): Don't use expression statement.\n\n\t* interpret.cc (PUSHL): Don't use expression statement.\n\t(PUSHD): Likewise.\n\t(LOADL): Likewise.\n\t(STOREL): Likewise.\n\nFrom-SVN: r31844", "tree": {"sha": "de68371f9c537b61b619d68908d738d8af4c2a5c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/de68371f9c537b61b619d68908d738d8af4c2a5c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7c51d9fb95c7be54dedf3def0e3186e8f6628712", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7c51d9fb95c7be54dedf3def0e3186e8f6628712", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7c51d9fb95c7be54dedf3def0e3186e8f6628712", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7c51d9fb95c7be54dedf3def0e3186e8f6628712/comments", "author": null, "committer": null, "parents": [{"sha": "ff47d09463cbc4e0aaec3233c3542a7aa1eea1ef", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ff47d09463cbc4e0aaec3233c3542a7aa1eea1ef", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ff47d09463cbc4e0aaec3233c3542a7aa1eea1ef"}], "stats": {"total": 21, "additions": 13, "deletions": 8}, "files": [{"sha": "d56c85cc1215ab54640ed2f20f76a563bddff688", "filename": "libjava/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c51d9fb95c7be54dedf3def0e3186e8f6628712/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c51d9fb95c7be54dedf3def0e3186e8f6628712/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=7c51d9fb95c7be54dedf3def0e3186e8f6628712", "patch": "@@ -1,5 +1,10 @@\n 2000-02-07  Tom Tromey  <tromey@cygnus.com>\n \n+\t* interpret.cc (PUSHL): Don't use expression statement.\n+\t(PUSHD): Likewise.\n+\t(LOADL): Likewise.\n+\t(STOREL): Likewise.\n+\n \t* jni.cc (add_char): Conditional on INTERPRETER.\n \t(mangled_name): Likewise.\n \t(call): Likewise."}, {"sha": "6964f5d6ef80635a89e26a013730480b997c5bb3", "filename": "libjava/interpret.cc", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c51d9fb95c7be54dedf3def0e3186e8f6628712/libjava%2Finterpret.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c51d9fb95c7be54dedf3def0e3186e8f6628712/libjava%2Finterpret.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Finterpret.cc?ref=7c51d9fb95c7be54dedf3def0e3186e8f6628712", "patch": "@@ -87,12 +87,12 @@ static inline void dupx (_Jv_word *sp, int n, int x)\n #define PUSHA(V)  (sp++)->o = (V)\n #define PUSHI(V)  (sp++)->i = (V)\n #define PUSHF(V)  (sp++)->f = (V)\n-#define PUSHL(V)  ({ _Jv_word2 w2; w2.l=(V); \\\n+#define PUSHL(V)  do { _Jv_word2 w2; w2.l=(V); \\\n                      (sp++)->ia[0] = w2.ia[0]; \\\n-                     (sp++)->ia[0] = w2.ia[1]; })\n-#define PUSHD(V)  ({ _Jv_word2 w2; w2.d=(V); \\\n+                     (sp++)->ia[0] = w2.ia[1]; } while (0)\n+#define PUSHD(V)  do { _Jv_word2 w2; w2.d=(V); \\\n                      (sp++)->ia[0] = w2.ia[0]; \\\n-                     (sp++)->ia[0] = w2.ia[1]; })\n+                     (sp++)->ia[0] = w2.ia[1]; } while (0)\n \n #define POPA()    ((--sp)->o)\n #define POPI()    ((jint) (--sp)->i) // cast since it may be promoted\n@@ -107,20 +107,20 @@ static inline void dupx (_Jv_word *sp, int n, int x)\n #define LOADA(I)  (sp++)->o = locals[I].o\n #define LOADI(I)  (sp++)->i = locals[I].i\n #define LOADF(I)  (sp++)->f = locals[I].f\n-#define LOADL(I)  ({ jint __idx = (I); \\\n+#define LOADL(I)  do { jint __idx = (I); \\\n     (sp++)->ia[0] = locals[__idx].ia[0]; \\\n     (sp++)->ia[0] = locals[__idx+1].ia[0]; \\\n- })\n+ } while (0)\n #define LOADD(I)  LOADL(I)\n \n \n #define STOREA(I) locals[I].o = (--sp)->o\n #define STOREI(I) locals[I].i = (--sp)->i\n #define STOREF(I) locals[I].f = (--sp)->f\n-#define STOREL(I) ({ jint __idx = (I); \\\n+#define STOREL(I) do { jint __idx = (I); \\\n     locals[__idx+1].ia[0] = (--sp)->ia[0]; \\\n     locals[__idx].ia[0] = (--sp)->ia[0]; \\\n- })\n+ } while (0)\n #define STORED(I) STOREL(I)\n \n #define PEEKI(I)  (locals+(I))->i"}]}