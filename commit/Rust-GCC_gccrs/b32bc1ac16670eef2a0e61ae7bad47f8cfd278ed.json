{"sha": "b32bc1ac16670eef2a0e61ae7bad47f8cfd278ed", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjMyYmMxYWMxNjY3MGVlZjJhMGU2MWFlN2JhZDQ3ZjhjZmQyNzhlZA==", "commit": {"author": {"name": "Manuel L\u00f3pez-Ib\u00e1\u00f1ez", "email": "manu@gcc.gnu.org", "date": "2015-08-11T13:34:00Z"}, "committer": {"name": "Manuel L\u00f3pez-Ib\u00e1\u00f1ez", "email": "manu@gcc.gnu.org", "date": "2015-08-11T13:34:00Z"}, "message": "re PR c/66098 (#pragma diagnostic 'ignored' not fully undone by pop for strict-overflow)\n\ngcc/ChangeLog:\n\n2015-08-11  Manuel L\u00f3pez-Ib\u00e1\u00f1ez  <manu@gcc.gnu.org>\n\n\tPR c/66098\n\tPR c/66711\n\t* diagnostic.c (diagnostic_classify_diagnostic): Take -Werror into\n\taccount when deciding what was the command-line status.\n\ngcc/testsuite/ChangeLog:\n\n2015-08-11  Manuel L\u00f3pez-Ib\u00e1\u00f1ez  <manu@gcc.gnu.org>\n\n\tPR c/66098\n\tPR c/66711\n\t* gcc.dg/pragma-diag-3.c: New test.\n\t* gcc.dg/pragma-diag-4.c: New test.\n\nFrom-SVN: r226780", "tree": {"sha": "a12c2f52d788ca60fdf10a283f4349676f1fe125", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a12c2f52d788ca60fdf10a283f4349676f1fe125"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b32bc1ac16670eef2a0e61ae7bad47f8cfd278ed", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b32bc1ac16670eef2a0e61ae7bad47f8cfd278ed", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b32bc1ac16670eef2a0e61ae7bad47f8cfd278ed", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b32bc1ac16670eef2a0e61ae7bad47f8cfd278ed/comments", "author": null, "committer": null, "parents": [{"sha": "8299dd5cbb6fbb756f0ad2f4dbff31c549e00837", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8299dd5cbb6fbb756f0ad2f4dbff31c549e00837", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8299dd5cbb6fbb756f0ad2f4dbff31c549e00837"}], "stats": {"total": 133, "additions": 130, "deletions": 3}, "files": [{"sha": "099d2c1b6897fcaa145a7dce9aa42eef162c103c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b32bc1ac16670eef2a0e61ae7bad47f8cfd278ed/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b32bc1ac16670eef2a0e61ae7bad47f8cfd278ed/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b32bc1ac16670eef2a0e61ae7bad47f8cfd278ed", "patch": "@@ -1,3 +1,10 @@\n+2015-08-11  Manuel L\u00f3pez-Ib\u00e1\u00f1ez  <manu@gcc.gnu.org>\n+\n+\tPR c/66098\n+\tPR c/66711\n+\t* diagnostic.c (diagnostic_classify_diagnostic): Take -Werror into\n+\taccount when deciding what was the command-line status.\n+\n 2015-08-11  Nathan Sidwell  <nathan@acm.org>\n \n \t* tree-vrp.c (simplify_abs_using_ranges): Simplify."}, {"sha": "01a8e35d73bf25c1ac0182efffc665986c1f9e44", "filename": "gcc/diagnostic.c", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b32bc1ac16670eef2a0e61ae7bad47f8cfd278ed/gcc%2Fdiagnostic.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b32bc1ac16670eef2a0e61ae7bad47f8cfd278ed/gcc%2Fdiagnostic.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdiagnostic.c?ref=b32bc1ac16670eef2a0e61ae7bad47f8cfd278ed", "patch": "@@ -696,9 +696,10 @@ diagnostic_classify_diagnostic (diagnostic_context *context,\n       /* Record the command-line status, so we can reset it back on DK_POP. */\n       if (old_kind == DK_UNSPECIFIED)\n \t{\n-\t  old_kind = context->option_enabled (option_index,\n-\t\t\t\t\t      context->option_state)\n-\t    ? DK_WARNING : DK_IGNORED;\n+\t  old_kind = !context->option_enabled (option_index,\n+\t\t\t\t\t       context->option_state)\n+\t    ? DK_IGNORED : (context->warning_as_error_requested\n+\t\t\t    ? DK_ERROR : DK_WARNING);\n \t  context->classify_diagnostic[option_index] = old_kind;\n \t}\n "}, {"sha": "7a35aadd828bbd85b5b790356b721cd53e9a6cc1", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b32bc1ac16670eef2a0e61ae7bad47f8cfd278ed/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b32bc1ac16670eef2a0e61ae7bad47f8cfd278ed/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=b32bc1ac16670eef2a0e61ae7bad47f8cfd278ed", "patch": "@@ -1,3 +1,10 @@\n+2015-08-11  Manuel L\u00f3pez-Ib\u00e1\u00f1ez  <manu@gcc.gnu.org>\n+\n+\tPR c/66098\n+\tPR c/66711\n+\t* gcc.dg/pragma-diag-3.c: New test.\n+\t* gcc.dg/pragma-diag-4.c: New test.\n+\n 2015-08-11  Nathan Sidwell  <nathan@acm.org>\n \n \t* c-c++-common/dfp/operator-comma.c: Call init function."}, {"sha": "2ee439d7e338eac1ef2eae7aa8489cf74680f60c", "filename": "gcc/testsuite/gcc.dg/pragma-diag-3.c", "status": "added", "additions": 64, "deletions": 0, "changes": 64, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b32bc1ac16670eef2a0e61ae7bad47f8cfd278ed/gcc%2Ftestsuite%2Fgcc.dg%2Fpragma-diag-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b32bc1ac16670eef2a0e61ae7bad47f8cfd278ed/gcc%2Ftestsuite%2Fgcc.dg%2Fpragma-diag-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpragma-diag-3.c?ref=b32bc1ac16670eef2a0e61ae7bad47f8cfd278ed", "patch": "@@ -0,0 +1,64 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-Wswitch-enum -Wsign-compare -fstrict-overflow -Wstrict-overflow -Werror -Wno-error=switch-enum\" } */\n+/* PR c/66098 - #pragma diagnostic 'ignored' not fully undone by pop for strict-overflow \n+   PR c/66711 - GCC does not correctly restore diagnostic state after pragma GCC diagnostic pop with -Werror \n+*/\n+/* { dg-message \"warnings being treated as errors\" \"\" {target \"*-*-*\"} 0 } */\n+\n+void testing2() {\n+#pragma GCC diagnostic push\n+#pragma GCC diagnostic ignored \"-Wstrict-overflow\"\n+  int j = 4;\n+  j + 4 < j;\n+#pragma GCC diagnostic pop\n+}\n+\n+void testing3() {\n+  int k = 4;\n+  k + 4 < k; /* { dg-error \"overflow\" } */\n+}\n+\n+int bar()\n+{\n+  unsigned x = 0;\n+  int y = 1;\n+\n+  /* generates an error - ok */\n+  x += x < y ? 1 : 0; /* { dg-error \"comparison\" } */\n+\n+#pragma GCC diagnostic push\n+#pragma GCC diagnostic ignored \"-Wsign-compare\"\n+  /* generates no diagnostic - ok */\n+  x += x < y ? 1 : 0;\n+#pragma GCC diagnostic pop\n+\n+  x += x < y ? 1 : 0; /* { dg-error \"comparison\" } */\n+\n+  return x;\n+}\n+\n+enum EE { ONE, TWO };\n+\n+int f (enum EE e)\n+{\n+  int r = 0;\n+\n+#pragma GCC diagnostic push\n+#pragma GCC diagnostic ignored \"-Wswitch-enum\"\n+\n+  switch (e)\n+    {\n+    case ONE:\n+      r = 1;\n+      break;\n+    }\n+#pragma GCC diagnostic pop\n+\n+  switch (e) /* { dg-warning \"switch\" } */\n+    {\n+    case ONE:\n+      r = 1;\n+      break;\n+    }\n+  return r;\n+}"}, {"sha": "fc8d4b1feb556acde4fc7fd8e97e59842bd03b4a", "filename": "gcc/testsuite/gcc.dg/pragma-diag-4.c", "status": "added", "additions": 48, "deletions": 0, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b32bc1ac16670eef2a0e61ae7bad47f8cfd278ed/gcc%2Ftestsuite%2Fgcc.dg%2Fpragma-diag-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b32bc1ac16670eef2a0e61ae7bad47f8cfd278ed/gcc%2Ftestsuite%2Fgcc.dg%2Fpragma-diag-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpragma-diag-4.c?ref=b32bc1ac16670eef2a0e61ae7bad47f8cfd278ed", "patch": "@@ -0,0 +1,48 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-Wsign-compare -Werror=sign-compare -Werror=switch-enum\" } */\n+/* { dg-message \"warnings being treated as errors\" \"\" {target \"*-*-*\"} 0 } */\n+\n+int bar()\n+{\n+  unsigned x = 0;\n+  int y = 1;\n+\n+  /* generates an error - ok */\n+  x += x < y ? 1 : 0; /* { dg-error \"comparison\" } */\n+\n+#pragma GCC diagnostic push\n+#pragma GCC diagnostic ignored \"-Wsign-compare\"\n+  /* generates no diagnostic - ok */\n+  x += x < y ? 1 : 0;\n+#pragma GCC diagnostic pop\n+\n+  x += x < y ? 1 : 0; /* { dg-error \"comparison\" } */\n+\n+  return x;\n+}\n+\n+enum EE { ONE, TWO };\n+\n+int f (enum EE e)\n+{\n+  int r = 0;\n+\n+#pragma GCC diagnostic push\n+#pragma GCC diagnostic ignored \"-Wswitch-enum\"\n+\n+  switch (e)\n+    {\n+    case ONE:\n+      r = 1;\n+      break;\n+    }\n+#pragma GCC diagnostic pop\n+\n+  switch (e) /* { dg-error \"switch\" } */\n+    {\n+    case ONE:\n+      r = 1;\n+      break;\n+    }\n+  return r;\n+}"}]}