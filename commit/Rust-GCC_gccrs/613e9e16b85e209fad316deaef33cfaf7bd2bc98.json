{"sha": "613e9e16b85e209fad316deaef33cfaf7bd2bc98", "node_id": "C_kwDOANBUbNoAKDYxM2U5ZTE2Yjg1ZTIwOWZhZDMxNmRlYWVmMzNjZmFmN2JkMmJjOTg", "commit": {"author": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2022-08-20T00:16:26Z"}, "committer": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2022-08-20T00:16:26Z"}, "message": "Daily bump.", "tree": {"sha": "d27bb437e971c6463e29e11c63825b42b60caa56", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d27bb437e971c6463e29e11c63825b42b60caa56"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/613e9e16b85e209fad316deaef33cfaf7bd2bc98", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/613e9e16b85e209fad316deaef33cfaf7bd2bc98", "html_url": "https://github.com/Rust-GCC/gccrs/commit/613e9e16b85e209fad316deaef33cfaf7bd2bc98", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/613e9e16b85e209fad316deaef33cfaf7bd2bc98/comments", "author": null, "committer": null, "parents": [{"sha": "713ec97e593bd4d9915a13bc4047f064fec0e24a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/713ec97e593bd4d9915a13bc4047f064fec0e24a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/713ec97e593bd4d9915a13bc4047f064fec0e24a"}], "stats": {"total": 66, "additions": 65, "deletions": 1}, "files": [{"sha": "60a08cff5181b54ec0fe864db3cf843b9430bd1e", "filename": "contrib/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/613e9e16b85e209fad316deaef33cfaf7bd2bc98/contrib%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/613e9e16b85e209fad316deaef33cfaf7bd2bc98/contrib%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2FChangeLog?ref=613e9e16b85e209fad316deaef33cfaf7bd2bc98", "patch": "@@ -1,3 +1,7 @@\n+2022-08-19  Stefan Schulze Frielinghaus  <stefansf@linux.ibm.com>\n+\n+\t* clang-format: Add further FOR_EACH_ macros.\n+\n 2022-08-18  Andrea Corallo  <andrea.corallo@arm.com>\n \n \t* git-fetch-vendor.sh : Fix typo."}, {"sha": "77c7ffbb4b9f52cd2a650a09616d976753650a7f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/613e9e16b85e209fad316deaef33cfaf7bd2bc98/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/613e9e16b85e209fad316deaef33cfaf7bd2bc98/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=613e9e16b85e209fad316deaef33cfaf7bd2bc98", "patch": "@@ -1,3 +1,21 @@\n+2022-08-19  Tobias Burnus  <tobias@codesourcery.com>\n+\n+\t* config/gcn/mkoffload.cc (main): Add omp_requires_file and dbgobj to\n+\tfiles_to_cleanup.\n+\t* config/i386/intelmic-mkoffload.cc (prepare_target_image): Add\n+\tomp_requires_file to temp_files.\n+\t* config/nvptx/mkoffload.cc (omp_requires_file): New global static var.\n+\t(main): Remove local omp_requires_file var.\n+\t(tool_cleanup): Handle omp_requires_file.\n+\n+2022-08-19  Aldy Hernandez  <aldyh@redhat.com>\n+\n+\t* gimple-range-path.cc (path_range_query::path_range_query):\n+\tRemove constructor that takes edge.\n+\t* gimple-range-path.h (class path_range_query): Same.\n+\t* tree-ssa-loop-ch.cc (edge_range_query): New.\n+\t(entry_loop_condition_is_static): Call edge_range_query.\n+\n 2022-08-18  Takayuki 'January June' Suwa  <jjsuwa_sys3175@yahoo.co.jp>\n \n \t* config/xtensa/xtensa.h"}, {"sha": "0b12197627e6e4b3e9888df99dfbbe1e6798f70e", "filename": "gcc/DATESTAMP", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/613e9e16b85e209fad316deaef33cfaf7bd2bc98/gcc%2FDATESTAMP", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/613e9e16b85e209fad316deaef33cfaf7bd2bc98/gcc%2FDATESTAMP", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FDATESTAMP?ref=613e9e16b85e209fad316deaef33cfaf7bd2bc98", "patch": "@@ -1 +1 @@\n-20220819\n+20220820"}, {"sha": "75e54dee0b6d776f0f0cf123cfeb4d80bf3da918", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/613e9e16b85e209fad316deaef33cfaf7bd2bc98/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/613e9e16b85e209fad316deaef33cfaf7bd2bc98/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=613e9e16b85e209fad316deaef33cfaf7bd2bc98", "patch": "@@ -1,3 +1,45 @@\n+2022-08-19  Haochen Jiang  <haochen.jiang@intel.com>\n+\n+\t* gcc.target/x86_64/abi/bf16/abi-bf16.exp: New test.\n+\t* gcc.target/x86_64/abi/bf16/args.h: Ditto.\n+\t* gcc.target/x86_64/abi/bf16/asm-support.S: Ditto.\n+\t* gcc.target/x86_64/abi/bf16/bf16-check.h: Ditto.\n+\t* gcc.target/x86_64/abi/bf16/bf16-helper.h: Ditto.\n+\t* gcc.target/x86_64/abi/bf16/defines.h: Ditto.\n+\t* gcc.target/x86_64/abi/bf16/m256bf16/abi-bf16-ymm.exp: Ditto.\n+\t* gcc.target/x86_64/abi/bf16/m256bf16/args.h: Ditto.\n+\t* gcc.target/x86_64/abi/bf16/m256bf16/asm-support.S: Ditto.\n+\t* gcc.target/x86_64/abi/bf16/m256bf16/bf16-ymm-check.h: Ditto.\n+\t* gcc.target/x86_64/abi/bf16/m256bf16/test_m256_returning.c: Ditto.\n+\t* gcc.target/x86_64/abi/bf16/m256bf16/test_passing_m256.c: Ditto.\n+\t* gcc.target/x86_64/abi/bf16/m256bf16/test_passing_structs.c: Ditto.\n+\t* gcc.target/x86_64/abi/bf16/m256bf16/test_passing_unions.c: Ditto.\n+\t* gcc.target/x86_64/abi/bf16/m256bf16/test_varargs-m256.c: Ditto.\n+\t* gcc.target/x86_64/abi/bf16/m512bf16/abi-bf16-zmm.exp: Ditto.\n+\t* gcc.target/x86_64/abi/bf16/m512bf16/args.h: Ditto.\n+\t* gcc.target/x86_64/abi/bf16/m512bf16/asm-support.S: Ditto.\n+\t* gcc.target/x86_64/abi/bf16/m512bf16/bf16-zmm-check.h: Ditto.\n+\t* gcc.target/x86_64/abi/bf16/m512bf16/test_m512_returning.c: Ditto.\n+\t* gcc.target/x86_64/abi/bf16/m512bf16/test_passing_m512.c: Ditto.\n+\t* gcc.target/x86_64/abi/bf16/m512bf16/test_passing_structs.c: Ditto.\n+\t* gcc.target/x86_64/abi/bf16/m512bf16/test_passing_unions.c: Ditto.\n+\t* gcc.target/x86_64/abi/bf16/m512bf16/test_varargs-m512.c: Ditto.\n+\t* gcc.target/x86_64/abi/bf16/macros.h: Ditto.\n+\t* gcc.target/x86_64/abi/bf16/test_3_element_struct_and_unions.c: Ditto.\n+\t* gcc.target/x86_64/abi/bf16/test_basic_alignment.c: Ditto.\n+\t* gcc.target/x86_64/abi/bf16/test_basic_array_size_and_align.c: Ditto.\n+\t* gcc.target/x86_64/abi/bf16/test_basic_returning.c: Ditto.\n+\t* gcc.target/x86_64/abi/bf16/test_basic_sizes.c: Ditto.\n+\t* gcc.target/x86_64/abi/bf16/test_basic_struct_size_and_align.c: Ditto.\n+\t* gcc.target/x86_64/abi/bf16/test_basic_union_size_and_align.c: Ditto.\n+\t* gcc.target/x86_64/abi/bf16/test_m128_returning.c: Ditto.\n+\t* gcc.target/x86_64/abi/bf16/test_passing_floats.c: Ditto.\n+\t* gcc.target/x86_64/abi/bf16/test_passing_m128.c: Ditto.\n+\t* gcc.target/x86_64/abi/bf16/test_passing_structs.c: Ditto.\n+\t* gcc.target/x86_64/abi/bf16/test_passing_unions.c: Ditto.\n+\t* gcc.target/x86_64/abi/bf16/test_struct_returning.c: Ditto.\n+\t* gcc.target/x86_64/abi/bf16/test_varargs-m128.c: Ditto.\n+\n 2022-08-18  Joseph Myers  <joseph@codesourcery.com>\n \n \t* gcc.dg/cpp/c11-warning-1.c, gcc.dg/cpp/c11-warning-2.c,"}]}