{"sha": "5a4c9a493153f6f579cd81905d0ab743dd88a33d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWE0YzlhNDkzMTUzZjZmNTc5Y2Q4MTkwNWQwYWI3NDNkZDg4YTMzZA==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2019-09-05T13:23:28Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2019-09-05T13:23:28Z"}, "message": "re PR rtl-optimization/91656 (wrong code with -fgcse-after-reload)\n\n2019-09-05  Richard Biener  <rguenther@suse.de>\n\n\tPR rtl-optimization/91656\n\t* postreload-gcse.c (record_last_mem_set_info): Revert addition\n\tof early out.\n\n\t* gcc.dg/torture/pr91656-1.c: New testcase.\n\t* gcc.dg/torture/pr91656-2.c: Likewise.\n\t* gcc.dg/torture/pr91656-3.c: Likewise.\n\nFrom-SVN: r275406", "tree": {"sha": "74df7584708383ed16be9de9238146fe383d781b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/74df7584708383ed16be9de9238146fe383d781b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5a4c9a493153f6f579cd81905d0ab743dd88a33d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5a4c9a493153f6f579cd81905d0ab743dd88a33d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5a4c9a493153f6f579cd81905d0ab743dd88a33d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5a4c9a493153f6f579cd81905d0ab743dd88a33d/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b101938436936b04ea3913c44cea7b58204a9765", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b101938436936b04ea3913c44cea7b58204a9765", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b101938436936b04ea3913c44cea7b58204a9765"}], "stats": {"total": 92, "additions": 89, "deletions": 3}, "files": [{"sha": "1de96224c2011766ed0dc8f54d38a556f307dd09", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a4c9a493153f6f579cd81905d0ab743dd88a33d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a4c9a493153f6f579cd81905d0ab743dd88a33d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5a4c9a493153f6f579cd81905d0ab743dd88a33d", "patch": "@@ -1,3 +1,9 @@\n+2019-09-05  Richard Biener  <rguenther@suse.de>\n+\n+\tPR rtl-optimization/91656\n+\t* postreload-gcse.c (record_last_mem_set_info): Revert addition\n+\tof early out.\n+\n 2019-09-05  Richard Biener  <rguenther@suse.de>\n \n \tPR middle-end/90501"}, {"sha": "c62aee9dcf447dd902410ede95e17b004b61e5d8", "filename": "gcc/postreload-gcse.c", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a4c9a493153f6f579cd81905d0ab743dd88a33d/gcc%2Fpostreload-gcse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a4c9a493153f6f579cd81905d0ab743dd88a33d/gcc%2Fpostreload-gcse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpostreload-gcse.c?ref=5a4c9a493153f6f579cd81905d0ab743dd88a33d", "patch": "@@ -696,9 +696,6 @@ record_last_reg_set_info_regno (rtx_insn *insn, int regno)\n static void\n record_last_mem_set_info (rtx_insn *insn)\n {\n-  if (!transp)\n-    return;\n-\n   struct modifies_mem *list_entry;\n \n   list_entry = (struct modifies_mem *) obstack_alloc (&modifies_mem_obstack,"}, {"sha": "1d48a80c580daccc188f764477e099ae8281440e", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a4c9a493153f6f579cd81905d0ab743dd88a33d/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a4c9a493153f6f579cd81905d0ab743dd88a33d/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=5a4c9a493153f6f579cd81905d0ab743dd88a33d", "patch": "@@ -1,3 +1,10 @@\n+2019-09-05  Richard Biener  <rguenther@suse.de>\n+\n+\tPR rtl-optimization/91656\n+\t* gcc.dg/torture/pr91656-1.c: New testcase.\n+\t* gcc.dg/torture/pr91656-2.c: Likewise.\n+\t* gcc.dg/torture/pr91656-3.c: Likewise.\n+\n 2019-09-05  Nathan Sidwell  <nathan@acm.org>\n \n \tPR preprocessor/91639"}, {"sha": "6c1e73c7f0188e4f629f27eb45b868954f850ff0", "filename": "gcc/testsuite/gcc.dg/torture/pr91656-1.c", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a4c9a493153f6f579cd81905d0ab743dd88a33d/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr91656-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a4c9a493153f6f579cd81905d0ab743dd88a33d/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr91656-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr91656-1.c?ref=5a4c9a493153f6f579cd81905d0ab743dd88a33d", "patch": "@@ -0,0 +1,24 @@\n+/* { dg-do run } */\n+/* { dg-additional-options \"-fgcse-after-reload\" } */\n+\n+int a, b, c, d, e;\n+\n+static __attribute__ ((__noipa__))\n+int foo (int i)\n+{\n+  __builtin_memmove (&i, &e, 1);\n+  if (a > 0)\n+    i /= e;\n+  e /= 5;\n+  b = 0;\n+  return i + c + d + 5;\n+}\n+\n+int\n+main (void)\n+{\n+  int x = foo (4);\n+  if (x != 5)\n+    __builtin_abort ();\n+  return 0;\n+}"}, {"sha": "90374becae0de6e69fff13ea0e95efc949ee0457", "filename": "gcc/testsuite/gcc.dg/torture/pr91656-2.c", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a4c9a493153f6f579cd81905d0ab743dd88a33d/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr91656-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a4c9a493153f6f579cd81905d0ab743dd88a33d/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr91656-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr91656-2.c?ref=5a4c9a493153f6f579cd81905d0ab743dd88a33d", "patch": "@@ -0,0 +1,27 @@\n+/* { dg-do run { target int128 } } */\n+/* { dg-additional-options \"-fgcse-after-reload\" } */\n+\n+typedef unsigned char u8;\n+typedef unsigned short u16;\n+typedef unsigned int u32;\n+typedef unsigned long long u64;\n+int a, b, c;\n+__int128 e;\n+int\n+d (u16 g)\n+{\n+  u64 f = __builtin_bswap64 (c);\n+  f = g == a;\n+  __builtin_memmove (&f, &e, 1);\n+  e >>= b;\n+  return a + f;\n+}\n+\n+int\n+main (void)\n+{\n+  __int128 x = d (0);\n+  if (x != 0)\n+    __builtin_abort ();\n+  return 0;\n+}"}, {"sha": "8e65d24a21dec957ee6c61da2410a54d3baa940f", "filename": "gcc/testsuite/gcc.dg/torture/pr91656-3.c", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a4c9a493153f6f579cd81905d0ab743dd88a33d/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr91656-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a4c9a493153f6f579cd81905d0ab743dd88a33d/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr91656-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr91656-3.c?ref=5a4c9a493153f6f579cd81905d0ab743dd88a33d", "patch": "@@ -0,0 +1,25 @@\n+/* { dg-do run { target int128 } } */\n+/* { dg-additional-options \"-fgcse-after-reload\" } */\n+\n+typedef unsigned char u8;\n+typedef unsigned short u16;\n+typedef unsigned int u32;\n+typedef unsigned long long u64;\n+int a, b, c;\n+int\n+d (u16 e, u64 f)\n+{\n+  b |= e;\n+  __builtin_memset (&f, e, 2);\n+  a = (u16) - e >= 2 ? : __builtin_popcountll (f);\n+  return a + c;\n+}\n+\n+int\n+main (void)\n+{\n+  __int128 x = d (~0, 0);\n+  if (x != 16)\n+    __builtin_abort ();\n+  return 0;\n+}"}]}