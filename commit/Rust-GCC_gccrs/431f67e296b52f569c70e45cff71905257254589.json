{"sha": "431f67e296b52f569c70e45cff71905257254589", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDMxZjY3ZTI5NmI1MmY1NjljNzBlNDVjZmY3MTkwNTI1NzI1NDU4OQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2000-06-12T23:52:58Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2000-06-12T23:52:58Z"}, "message": "update\n\nFrom-SVN: r34509", "tree": {"sha": "171072bd4aac7284cda7de41a127f2a8c2c54e5d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/171072bd4aac7284cda7de41a127f2a8c2c54e5d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/431f67e296b52f569c70e45cff71905257254589", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/431f67e296b52f569c70e45cff71905257254589", "html_url": "https://github.com/Rust-GCC/gccrs/commit/431f67e296b52f569c70e45cff71905257254589", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/431f67e296b52f569c70e45cff71905257254589/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c5588504703c907d00bf1424405aed0da645a27c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c5588504703c907d00bf1424405aed0da645a27c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c5588504703c907d00bf1424405aed0da645a27c"}], "stats": {"total": 221, "additions": 152, "deletions": 69}, "files": [{"sha": "2f620c624a6234f1ec1e2d800809ec37a123ca1d", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/431f67e296b52f569c70e45cff71905257254589/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/431f67e296b52f569c70e45cff71905257254589/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=431f67e296b52f569c70e45cff71905257254589", "patch": "@@ -1,3 +1,7 @@\n+2000-06-12  Jason Merrill  <jason@redhat.com>\n+\n+\t* g++.old-deja/old-deja.exp: Add -Wno-long-long.\n+\n Fri Jun  9 22:46:34 2000  Jeffrey A Law  (law@cygnus.com)\n \n \t* gcc.c-torture/compile/20000609-1.c: New test."}, {"sha": "5e63b9fb808af0c66daa683f6b4599f1c6ea4767", "filename": "gcc/testsuite/g++.old-deja/g++.benjamin/15756-2.C", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/431f67e296b52f569c70e45cff71905257254589/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.benjamin%2F15756-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/431f67e296b52f569c70e45cff71905257254589/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.benjamin%2F15756-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.benjamin%2F15756-2.C?ref=431f67e296b52f569c70e45cff71905257254589", "patch": "@@ -4,13 +4,19 @@\n // Special g++ Options: -Wsign-promo\n // this test may only be valid for 32bit targets at present\n \n+#include <limits.h>\n+\n enum e_i {\n   vali\n }\n enum_int;\n \n enum e_ui {\n+#if INT_MAX == 32767\n+  valui = 0xF234\n+#else\n   valui = 0xF2345678\n+#endif\n }\n enum_uint;\n  \n@@ -25,8 +31,8 @@ struct caracas {\n  \n int main ()\n {\n-  caracas obj_ei  ( enum_int  ); // WARNING - // WARNING -\n-  caracas obj_eui ( enum_uint ); // WARNING - // WARNING -\n+  caracas obj_ei  ( enum_int  ); // WARNING - \n+  caracas obj_eui ( enum_uint ); // WARNING - \n   caracas obj_i  ( i  );\n   caracas obj_ui ( ui );\n   "}, {"sha": "afc7060195046dcee6f21b8361d7db3048e3c141", "filename": "gcc/testsuite/g++.old-deja/g++.benjamin/bool01.C", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/431f67e296b52f569c70e45cff71905257254589/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.benjamin%2Fbool01.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/431f67e296b52f569c70e45cff71905257254589/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.benjamin%2Fbool01.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.benjamin%2Fbool01.C?ref=431f67e296b52f569c70e45cff71905257254589", "patch": "@@ -2,6 +2,7 @@\n //test for bools with inclusive ors\n \n #include <assert.h>\n+\n void bar ( bool  x ) {};\n void bars ( short  x ) {};\n \n@@ -51,7 +52,6 @@ int orus(){\n   return blob;  //expect 65539, will be 3 if done in us type\n }\n \n-\n int main() {\n   int tmp;\n #if 0\n@@ -66,8 +66,11 @@ int main() {\n   assert (tmp ==27);\n   tmp = ors();\n   assert (tmp ==27);\n-  tmp = orus();\n-  assert (tmp == 65539);\n+  if (sizeof (int) > 2 && sizeof (int) > sizeof (unsigned short))\n+    {\n+      tmp = orus();\n+      assert (tmp == 65539);\n+    }\n \n   return 0;\n }"}, {"sha": "44f35c381cfa74c90389802d20fdf25f8c7bfac0", "filename": "gcc/testsuite/g++.old-deja/g++.brendan/crash20.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/431f67e296b52f569c70e45cff71905257254589/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Fcrash20.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/431f67e296b52f569c70e45cff71905257254589/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Fcrash20.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Fcrash20.C?ref=431f67e296b52f569c70e45cff71905257254589", "patch": "@@ -1,7 +1,7 @@\n // Build don't link: \n // GROUPS passed old-abort\n #include <complex>\n-typedef complex<double> Complex;\n+typedef std::complex<double> Complex;\n \n Complex ComputeVVself()\n {"}, {"sha": "4e500a15a6a73b9d83be96114c1a3c2aae8695f5", "filename": "gcc/testsuite/g++.old-deja/g++.brendan/crash30.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/431f67e296b52f569c70e45cff71905257254589/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Fcrash30.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/431f67e296b52f569c70e45cff71905257254589/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Fcrash30.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Fcrash30.C?ref=431f67e296b52f569c70e45cff71905257254589", "patch": "@@ -5,6 +5,6 @@\n int\n main(void) {\n \n-  string a[] = {\"Hello\"};\n+  std::string a[] = {\"Hello\"};\n \n }"}, {"sha": "4eaf41503d1e4e64300a6dadf6e1966e5bc6e29a", "filename": "gcc/testsuite/g++.old-deja/g++.bugs/900227_01.C", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/431f67e296b52f569c70e45cff71905257254589/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.bugs%2F900227_01.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/431f67e296b52f569c70e45cff71905257254589/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.bugs%2F900227_01.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.bugs%2F900227_01.C?ref=431f67e296b52f569c70e45cff71905257254589", "patch": "@@ -30,9 +30,13 @@\n \n // Special g++ Options:\n \n+#include <limits.h>\n+\n int main ();\n \n+#if INT_MAX > 32767\n short s = (short) &main;\t// WARNING - small integer\n+#endif\n char c = (char) &main;\t\t// WARNING - small integer\n \n int main () { return 0; }"}, {"sha": "2499931589b910733b9d83d668802c234d657da3", "filename": "gcc/testsuite/g++.old-deja/g++.eh/badalloc1.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/431f67e296b52f569c70e45cff71905257254589/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.eh%2Fbadalloc1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/431f67e296b52f569c70e45cff71905257254589/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.eh%2Fbadalloc1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.eh%2Fbadalloc1.C?ref=431f67e296b52f569c70e45cff71905257254589", "patch": "@@ -3,13 +3,13 @@\n \n // Check we can throw a bad_alloc exception when malloc dies\n \n-static __SIZE_TYPE__ arena[100000]; // so things can initialize\n+static __SIZE_TYPE__ arena[32767]; // so things can initialize\n static int fail;\n static unsigned pos;\n \n extern \"C\" void *malloc (__SIZE_TYPE__ size)\n {\n-  unsigned *p = &arena[pos];\n+  __SIZE_TYPE__ *p = &arena[pos];\n \n   if (fail)\n     return 0;"}, {"sha": "093abd1425a321e3e9c6dadea2c7100440820f8a", "filename": "gcc/testsuite/g++.old-deja/g++.eh/ptr1.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/431f67e296b52f569c70e45cff71905257254589/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.eh%2Fptr1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/431f67e296b52f569c70e45cff71905257254589/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.eh%2Fptr1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.eh%2Fptr1.C?ref=431f67e296b52f569c70e45cff71905257254589", "patch": "@@ -15,8 +15,8 @@ int main()\n   }\n \n   catch (E *&e) {\n-    printf (\"address of e is 0x%lx\\n\", (long)e);\n-    return !(long(e) != 5 && e->x == 5);\n+    printf (\"address of e is 0x%lx\\n\", (__SIZE_TYPE__)e);\n+    return !((__SIZE_TYPE__)e != 5 && e->x == 5);\n   }\n   return 2;\n }"}, {"sha": "7fecbaa6e2a0a39e2bc6ff860a9071596a3b25af", "filename": "gcc/testsuite/g++.old-deja/g++.ext/attrib5.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/431f67e296b52f569c70e45cff71905257254589/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.ext%2Fattrib5.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/431f67e296b52f569c70e45cff71905257254589/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.ext%2Fattrib5.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.ext%2Fattrib5.C?ref=431f67e296b52f569c70e45cff71905257254589", "patch": "@@ -1,5 +1,5 @@\n // Test that attributes weak and alias coexist.\n-// excess errors test - XFAIL alpha*-dec-osf*\n+// excess errors test - XFAIL alpha*-dec-osf* *-hms\n \n extern \"C\" {\n   void f () __attribute__((weak, alias (\"_f\")));"}, {"sha": "667264a53eacc7fb652212664cd565c494c19665", "filename": "gcc/testsuite/g++.old-deja/g++.jason/mangle3.C", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/431f67e296b52f569c70e45cff71905257254589/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.jason%2Fmangle3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/431f67e296b52f569c70e45cff71905257254589/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.jason%2Fmangle3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.jason%2Fmangle3.C?ref=431f67e296b52f569c70e45cff71905257254589", "patch": "@@ -3,17 +3,17 @@\n \n int main()\n {\n-  char ArrA[10][10][20][30],\n-       ArrB[10][10][20][30];\n+  char ArrA[1][1][2][3],\n+       ArrB[1][1][2][3];\n \n-  void HitMe(char [10][10][20][30], char [10][10][20][30]);\n+  void HitMe(char [1][1][2][3], char [1][1][2][3]);\n \n   HitMe(ArrA, ArrB);\n \n   return 0;\n }\n \n-void HitMe(char A[10][10][20][30], char B[10][10][20][30])\n+void HitMe(char A[1][1][2][3], char B[1][1][2][3])\n {\n   return;\n }"}, {"sha": "6fc0e4b5eca887c9c1bcf8c8ea0041dcaaa89f73", "filename": "gcc/testsuite/g++.old-deja/g++.jason/template31.C", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/431f67e296b52f569c70e45cff71905257254589/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.jason%2Ftemplate31.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/431f67e296b52f569c70e45cff71905257254589/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.jason%2Ftemplate31.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.jason%2Ftemplate31.C?ref=431f67e296b52f569c70e45cff71905257254589", "patch": "@@ -37,4 +37,6 @@ int main(int argc, char**argv)   {\n }\n \n template class std::__malloc_alloc_template<0>;\n+#ifndef __USE_MALLOC\n template class std::__default_alloc_template<false, 0>;\n+#endif"}, {"sha": "4cec6948a312277376f86d2e94b4321fae7c8a36", "filename": "gcc/testsuite/g++.old-deja/g++.jason/thunk3.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/431f67e296b52f569c70e45cff71905257254589/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.jason%2Fthunk3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/431f67e296b52f569c70e45cff71905257254589/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.jason%2Fthunk3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.jason%2Fthunk3.C?ref=431f67e296b52f569c70e45cff71905257254589", "patch": "@@ -3,7 +3,7 @@\n //  support, because it doesn't support variadic functions.\n \n // Special g++ Options: -fvtable-thunks\n-// excess errors test - XFAIL mips*-*-* rs6000-*-* powerpc-*-eabi m68k-*-coff m68k-motorola-sysv m88k-motorola-sysv3  mn10300-*-* mn10200-*-* v850-*-* sh-*-*\n+// excess errors test - XFAIL mips*-*-* rs6000-*-* powerpc-*-eabi m68k-*-coff m68k-motorola-sysv m88k-motorola-sysv3  mn10300-*-* mn10200-*-* v850-*-* sh-*-* h8*\n \n #include <stdarg.h>\n "}, {"sha": "04b923b6a9b22be6c62ad363e78b9aa41a88abc2", "filename": "gcc/testsuite/g++.old-deja/g++.jason/warning10.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/431f67e296b52f569c70e45cff71905257254589/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.jason%2Fwarning10.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/431f67e296b52f569c70e45cff71905257254589/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.jason%2Fwarning10.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.jason%2Fwarning10.C?ref=431f67e296b52f569c70e45cff71905257254589", "patch": "@@ -3,7 +3,7 @@\n // Special g++ Options: -W -Wall\n \n struct A {\n-  unsigned int b : 28;\n+  unsigned int b : 14;\n };\n \n int f (int i, unsigned char u, A a, unsigned long ul)"}, {"sha": "894bdec3129c7ba9a3a932e7b59474a1e2b4c2be", "filename": "gcc/testsuite/g++.old-deja/g++.law/operators4.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/431f67e296b52f569c70e45cff71905257254589/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Foperators4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/431f67e296b52f569c70e45cff71905257254589/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Foperators4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Foperators4.C?ref=431f67e296b52f569c70e45cff71905257254589", "patch": "@@ -6,7 +6,7 @@\n // Message-ID: <92Sep3.220137edt.30@jarvis.csri.toronto.edu>\n \n #include <complex>\n-typedef complex<double> Complex;\n+typedef std::complex<double> Complex;\n #include <stdio.h>\n \n class Vector {"}, {"sha": "08adac9129d47df1109152239f2f6691ddf1f4ca", "filename": "gcc/testsuite/g++.old-deja/g++.martin/bitset1.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/431f67e296b52f569c70e45cff71905257254589/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.martin%2Fbitset1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/431f67e296b52f569c70e45cff71905257254589/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.martin%2Fbitset1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.martin%2Fbitset1.C?ref=431f67e296b52f569c70e45cff71905257254589", "patch": "@@ -3,7 +3,7 @@\n \n int main()\n {\n-  bitset<sizeof(int) * 8> bufWord;\n+  std::bitset<sizeof(int) * 8> bufWord;\n \n   bufWord[3] = 0;\n }"}, {"sha": "9e37be8d154acb6966ef61688f41963e2740d92f", "filename": "gcc/testsuite/g++.old-deja/g++.martin/new1.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/431f67e296b52f569c70e45cff71905257254589/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.martin%2Fnew1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/431f67e296b52f569c70e45cff71905257254589/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.martin%2Fnew1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.martin%2Fnew1.C?ref=431f67e296b52f569c70e45cff71905257254589", "patch": "@@ -28,7 +28,7 @@ struct line_error{\n   line_error(int i):line(i){}\n };\n \n-#define CHECK(cond)  if(!(cond))throw std::line_error(__LINE__);\n+#define CHECK(cond)  if(!(cond))throw line_error(__LINE__);\n \n struct A{\n   A(int){"}, {"sha": "1229795cd190a75ee559a289ae2ebf0c1f31381e", "filename": "gcc/testsuite/g++.old-deja/g++.mike/net42.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/431f67e296b52f569c70e45cff71905257254589/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Fnet42.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/431f67e296b52f569c70e45cff71905257254589/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Fnet42.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Fnet42.C?ref=431f67e296b52f569c70e45cff71905257254589", "patch": "@@ -16,7 +16,7 @@ get_stat() {\n   unsigned long bit = 1;\n   unsigned long sigignore = 0;\n   int i = 0;\n-  switch((unsigned long) (*p)->sigaction[i].sa_handler)\n+  switch((__SIZE_TYPE__) (*p)->sigaction[i].sa_handler)\n     {\n     case 1:\n       sigignore |= bit;"}, {"sha": "9a985450a4accce758ae6a64c19c93711365e6d8", "filename": "gcc/testsuite/g++.old-deja/g++.mike/net46.C", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/431f67e296b52f569c70e45cff71905257254589/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Fnet46.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/431f67e296b52f569c70e45cff71905257254589/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Fnet46.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Fnet46.C?ref=431f67e296b52f569c70e45cff71905257254589", "patch": "@@ -1,16 +1,21 @@\n #include <iostream.h>\n+#include <stdlib.h>\n #include <stddef.h>\n #include <new>\n \n int fail = 1;\n \n+int in_main = 0;\n+\n void *operator new(size_t size) throw (std::bad_alloc) {\n+  if (!in_main) return malloc (size);\n   --fail;\n   return (void*) 0;\n }\n \n int main() {\n   cout << \"\";\n+  in_main = 1;\n   new int;\n   return fail;\n }"}, {"sha": "5af072444766a4781933826879f1471bf2477986", "filename": "gcc/testsuite/g++.old-deja/g++.mike/ns15.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/431f67e296b52f569c70e45cff71905257254589/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Fns15.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/431f67e296b52f569c70e45cff71905257254589/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Fns15.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Fns15.C?ref=431f67e296b52f569c70e45cff71905257254589", "patch": "@@ -17,7 +17,7 @@ int cmp_d(const R* a, const R* b) {\n }\n \n namespace CXX {\n-  template<class T, int i1, int i2>\n+  template<class T, long i1, long i2>\n     inline void qsort (T b[i1][i2], int (*cmp)(const T*, const T*)) {\n     ::qsort ((void*)b, i1*i2, sizeof(T), (int (*)(const void *, const void *))cmp);\n   }"}, {"sha": "06ebe3d52a3619bcdb634bb91681882e5d1424f2", "filename": "gcc/testsuite/g++.old-deja/g++.oliva/delete2.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/431f67e296b52f569c70e45cff71905257254589/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.oliva%2Fdelete2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/431f67e296b52f569c70e45cff71905257254589/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.oliva%2Fdelete2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.oliva%2Fdelete2.C?ref=431f67e296b52f569c70e45cff71905257254589", "patch": "@@ -10,7 +10,7 @@ extern \"C\" void exit(int);\n \n struct Foo {\n   ~Foo() {\n-    std::exit(0);\n+    exit(0);\n   }\n };\n \n@@ -19,7 +19,7 @@ struct Bar : virtual Foo {\n \n int main() {\n   delete [] new Bar[1];\n-  std::abort();\n+  abort();\n }\n \n "}, {"sha": "44299f2c9b7d2cf6b0173f0772e6f64951aa18e0", "filename": "gcc/testsuite/g++.old-deja/g++.oliva/delete3.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/431f67e296b52f569c70e45cff71905257254589/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.oliva%2Fdelete3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/431f67e296b52f569c70e45cff71905257254589/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.oliva%2Fdelete3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.oliva%2Fdelete3.C?ref=431f67e296b52f569c70e45cff71905257254589", "patch": "@@ -19,7 +19,7 @@ struct Foo {\n   }\n \n   ~Foo() {\n-    std::exit(0);\n+    exit(0);\n   }\n };\n \n@@ -30,7 +30,7 @@ struct Bar : virtual Foo {\n \n int main() {\n   delete [] new Bar[2];\n-  std::abort();\n+  abort();\n }\n \n "}, {"sha": "18ce2d3c3c17bb221b9e3b53aa811a626f0fd6c7", "filename": "gcc/testsuite/g++.old-deja/g++.oliva/delete4.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/431f67e296b52f569c70e45cff71905257254589/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.oliva%2Fdelete4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/431f67e296b52f569c70e45cff71905257254589/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.oliva%2Fdelete4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.oliva%2Fdelete4.C?ref=431f67e296b52f569c70e45cff71905257254589", "patch": "@@ -10,7 +10,7 @@ extern \"C\" void exit(int);\n \n struct Foo {\n   ~Foo() {\n-    std::exit(0);\n+    exit(0);\n   }\n };\n \n@@ -23,7 +23,7 @@ struct Baz {\n \n int main() {\n   Baz();\n-  std::abort();\n+  abort();\n }\n \n "}, {"sha": "afeb153ffcbdf900c39380a4e74773f9fde84786", "filename": "gcc/testsuite/g++.old-deja/g++.oliva/delete5.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/431f67e296b52f569c70e45cff71905257254589/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.oliva%2Fdelete5.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/431f67e296b52f569c70e45cff71905257254589/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.oliva%2Fdelete5.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.oliva%2Fdelete5.C?ref=431f67e296b52f569c70e45cff71905257254589", "patch": "@@ -10,7 +10,7 @@ extern \"C\" void exit(int);\n \n struct Foo {\n   ~Foo() {\n-    std::exit(0);\n+    exit(0);\n   }\n };\n \n@@ -23,7 +23,7 @@ void foo() {\n \n int main() {\n   foo();\n-  std::abort();\n+  abort();\n }\n \n "}, {"sha": "de5e374d4b8701de91f632ee80a827ddcf3f20da", "filename": "gcc/testsuite/g++.old-deja/g++.oliva/expr2.C", "status": "modified", "additions": 1, "deletions": 8, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/431f67e296b52f569c70e45cff71905257254589/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.oliva%2Fexpr2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/431f67e296b52f569c70e45cff71905257254589/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.oliva%2Fexpr2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.oliva%2Fexpr2.C?ref=431f67e296b52f569c70e45cff71905257254589", "patch": "@@ -2,11 +2,6 @@\n \n // by Alexandre Oliva <aoliva@cygnus.com>\n \n-// execution test - XFAIL *-*-*\n-\n-extern \"C\" void abort (void);\n-extern \"C\" void exit (int);\n-\n int i, j;\n \n const int &f(const int& I, const int& J) {\n@@ -15,7 +10,5 @@ const int &f(const int& I, const int& J) {\n }\n \n int main () {\n-  if (&f(i, j) != &j)\n-    abort ();\n-  exit (0);\n+  return (&f(i, j) != &j);\n }"}, {"sha": "45e447859f56d36d889690392c878739ee1a335a", "filename": "gcc/testsuite/g++.old-deja/g++.other/delete3.C", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/431f67e296b52f569c70e45cff71905257254589/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fdelete3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/431f67e296b52f569c70e45cff71905257254589/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fdelete3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fdelete3.C?ref=431f67e296b52f569c70e45cff71905257254589", "patch": "@@ -15,12 +15,12 @@ map<T, U>::~map ()\n \n struct SomeClass { };\n \n-void* operator new(size_t numBytes, SomeClass&, const nothrow_t&) throw()\n+void* operator new(size_t numBytes, SomeClass&, const std::nothrow_t&) throw()\n {\n-  return operator new(numBytes, nothrow);\n+  return operator new(numBytes, std::nothrow);\n }\n \n-void operator delete(void* pMemory, SomeClass&, const nothrow_t&) throw()\n+void operator delete(void* pMemory, SomeClass&, const std::nothrow_t&) throw()\n {\n   i = 7;\n   return operator delete(pMemory);"}, {"sha": "337496a8bfffdd2d7f369957c432d0fd2f507868", "filename": "gcc/testsuite/g++.old-deja/g++.other/init9.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/431f67e296b52f569c70e45cff71905257254589/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Finit9.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/431f67e296b52f569c70e45cff71905257254589/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Finit9.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Finit9.C?ref=431f67e296b52f569c70e45cff71905257254589", "patch": "@@ -34,7 +34,7 @@ void b() {\n \n void c() {\n   goto bar; // ERROR - jump from here\n-  vector<int> x; // ERROR - jump crosses initialization\n+  std::vector<int> x; // ERROR - jump crosses initialization\n  bar: // ERROR - jump to here\n   ;\n }"}, {"sha": "0ed4cf3d9234789d3ebc8967d19277c6b0592216", "filename": "gcc/testsuite/g++.old-deja/g++.other/inline2.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/431f67e296b52f569c70e45cff71905257254589/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Finline2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/431f67e296b52f569c70e45cff71905257254589/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Finline2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Finline2.C?ref=431f67e296b52f569c70e45cff71905257254589", "patch": "@@ -7,5 +7,5 @@\n int main()\n {\n   double foo = 4.5;\n-  if (abs (0.5-abs (foo-0.5)) < 1e-10) foo+=1;\n+  if (std::abs (0.5-std::abs (foo-0.5)) < 1e-10) foo+=1;\n }"}, {"sha": "2784a28676ea68c8c0a383aa1d5f4d88a2d0021e", "filename": "gcc/testsuite/g++.old-deja/g++.other/inline7.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/431f67e296b52f569c70e45cff71905257254589/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Finline7.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/431f67e296b52f569c70e45cff71905257254589/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Finline7.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Finline7.C?ref=431f67e296b52f569c70e45cff71905257254589", "patch": "@@ -3,7 +3,7 @@\n \n #include <list>\n \n-list<int*> li;\n+std::list<int*> li;\n \n void f ()\n {"}, {"sha": "a5b540bcf724150949077db46105b2d8b00ad7b4", "filename": "gcc/testsuite/g++.old-deja/g++.other/inline8.C", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/431f67e296b52f569c70e45cff71905257254589/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Finline8.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/431f67e296b52f569c70e45cff71905257254589/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Finline8.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Finline8.C?ref=431f67e296b52f569c70e45cff71905257254589", "patch": "@@ -4,6 +4,8 @@\n #include <map>\n #include <cstdlib>\n \n+using namespace std;\n+\n class NAMES_ITEM\n     {\n public:"}, {"sha": "5672d728be8bbb4e68d1c048253344f4f42e426f", "filename": "gcc/testsuite/g++.old-deja/g++.other/static8.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/431f67e296b52f569c70e45cff71905257254589/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fstatic8.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/431f67e296b52f569c70e45cff71905257254589/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fstatic8.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fstatic8.C?ref=431f67e296b52f569c70e45cff71905257254589", "patch": "@@ -8,6 +8,6 @@\n #define NAME(OLD, NEW) NEW\n #endif /* (!defined (__GXX_ABI_VERSION) || __GXX_ABI_VERSION < 100) */\n \n-static unsigned int strlen (const char*) {} // ERROR - previous declaration\n+static unsigned int strlen (const char*) {return 0;} // ERROR - previous declaration\n \n int NAME (strlen__FPCc, _Z6strlenPKc) = 0; // ERROR - duplicate declaration"}, {"sha": "ed9798b5b82c77c8691e69ea2d48bf0b09e65f93", "filename": "gcc/testsuite/g++.old-deja/g++.other/temporary1.C", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/431f67e296b52f569c70e45cff71905257254589/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Ftemporary1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/431f67e296b52f569c70e45cff71905257254589/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Ftemporary1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Ftemporary1.C?ref=431f67e296b52f569c70e45cff71905257254589", "patch": "@@ -4,16 +4,16 @@ int c, d;\n class Foo \n {\n public:\n-   Foo() { printf(\"Foo() 0x%08lx\\n\", (unsigned long)this); ++c; }\n-   Foo(Foo const &) { printf(\"Foo(Foo const &) 0x%08lx\\n\", (unsigned long)this); }\n-   ~Foo() { printf(\"~Foo() 0x%08lx\\n\", (unsigned long)this); ++d; }\n+   Foo() { printf(\"Foo() 0x%08lx\\n\", (__SIZE_TYPE__)this); ++c; }\n+   Foo(Foo const &) { printf(\"Foo(Foo const &) 0x%08lx\\n\", (__SIZE_TYPE__)this); }\n+   ~Foo() { printf(\"~Foo() 0x%08lx\\n\", (__SIZE_TYPE__)this); ++d; }\n };\n \n // Bar creates constructs a temporary Foo() as a default\n class Bar \n {\n public:\n-   Bar(Foo const & = Foo()) { printf(\"Bar(Foo const &) 0x%08lx\\n\", (unsigned long)this); }\n+   Bar(Foo const & = Foo()) { printf(\"Bar(Foo const &) 0x%08lx\\n\", (__SIZE_TYPE__)this); }\n };\n \n void fakeRef(Bar *)"}, {"sha": "89c8e80dd579624f1f07ddc25ea3dd6d800c8f7e", "filename": "gcc/testsuite/g++.old-deja/g++.other/typeinfo1.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/431f67e296b52f569c70e45cff71905257254589/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Ftypeinfo1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/431f67e296b52f569c70e45cff71905257254589/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Ftypeinfo1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Ftypeinfo1.C?ref=431f67e296b52f569c70e45cff71905257254589", "patch": "@@ -7,7 +7,7 @@ struct S {\n };\n \n void f(S s);\n-void f(type_info);\n+void f(std::type_info);\n \n void g()\n {"}, {"sha": "df770dac87d2a76c8c9ea6dc5ce4783461a37e0e", "filename": "gcc/testsuite/g++.old-deja/g++.pt/static3.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/431f67e296b52f569c70e45cff71905257254589/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fstatic3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/431f67e296b52f569c70e45cff71905257254589/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fstatic3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fstatic3.C?ref=431f67e296b52f569c70e45cff71905257254589", "patch": "@@ -1,6 +1,6 @@\n // On targets that don't support weak symbols, we require an explicit\n // instantiation of arr.\n-// excess errors test - XFAIL *-*-aout *-*-coff *-*-hpux* alpha*-dec-osf*\n+// excess errors test - XFAIL *-*-aout *-*-coff *-*-hpux* alpha*-dec-osf* *-*-hms\n \n template<class T>\n struct A {"}, {"sha": "7d624eae14d1bdd619f07b9faf089e52747082c9", "filename": "gcc/testsuite/g++.old-deja/g++.robertl/eb109.C", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/431f67e296b52f569c70e45cff71905257254589/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb109.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/431f67e296b52f569c70e45cff71905257254589/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb109.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb109.C?ref=431f67e296b52f569c70e45cff71905257254589", "patch": "@@ -20,9 +20,9 @@ class Graph\n {  // ERROR - candidates\n   public:\n     // public type interface\n-    typedef map<int, EdgeType > Successor;\n-    typedef pair<VertexType, Successor> vertex;\n-    typedef vector<vertex> GraphType;\n+    typedef std::map<int, EdgeType > Successor;\n+    typedef std::pair<VertexType, Successor> vertex;\n+    typedef std::vector<vertex> GraphType;\n     typedef typename GraphType::iterator iterator;\n     typedef typename GraphType::const_iterator const_iterator;\n \n@@ -62,7 +62,7 @@ ostream& operator<<(ostream& os, Graph<VertexType,EdgeType>& G)\n int main()\n {\n     // no edge weighting, therefore type Empty:\n-    Graph<string, Empty> V(true);        // ERROR - no bool constructor\n+    Graph<std::string, Empty> V(true);        // ERROR - no bool constructor\n     // ReadGraph(V, \"gra1.dat\");\n \n     // display of vertices with successors"}, {"sha": "f83b6c2cc472aeb45c65b26809636d5281985da0", "filename": "gcc/testsuite/g++.old-deja/g++.robertl/eb127.C", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/431f67e296b52f569c70e45cff71905257254589/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb127.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/431f67e296b52f569c70e45cff71905257254589/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb127.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb127.C?ref=431f67e296b52f569c70e45cff71905257254589", "patch": "@@ -2,6 +2,7 @@\n \n #include <vector>\n #include<string>\n+#include <iostream>\n \n using namespace std;\n "}, {"sha": "3be93405ff8cc210b1d38e0a76f48a156923e091", "filename": "gcc/testsuite/g++.old-deja/g++.robertl/eb129.C", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/431f67e296b52f569c70e45cff71905257254589/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb129.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/431f67e296b52f569c70e45cff71905257254589/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb129.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb129.C?ref=431f67e296b52f569c70e45cff71905257254589", "patch": "@@ -6,6 +6,7 @@\n #include <functional>\n #include <algorithm>\n #include <cassert>\n+using namespace std;\n int main()\n {\n       list<int> l;"}, {"sha": "e7d427225a466d465a67ccd116a5c8b13f59db08", "filename": "gcc/testsuite/g++.old-deja/g++.robertl/eb129a.C", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/431f67e296b52f569c70e45cff71905257254589/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb129a.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/431f67e296b52f569c70e45cff71905257254589/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb129a.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb129a.C?ref=431f67e296b52f569c70e45cff71905257254589", "patch": "@@ -0,0 +1,22 @@\n+// Build don't link:\n+// Gives ICE on EGCS release branch as of 98/06/08 on i686-pc-linux-gnulibc1)\n+// From: Klaus-Georg Adams <Klaus-Georg.Adams@chemie.uni-karlsruhe.de>    \n+// Message-Id: <199806081358.PAA02505@achibm5.chemie.uni-karlsruhe.de> \n+#include <list>\n+#include <functional>\n+#include <algorithm>\n+#include <cassert>\n+int main()\n+{\n+      std::list<int> l;\n+      l.push_back(1);\n+      l.push_back(2);\n+\n+      std::list<int>::iterator it =\n+              std::find_if( l.begin(), l.end(),\n+                       // This is a typo, it should be bind2nd, but an\n+                       // ICE is not a very helpful diagnostic!\n+                       std::binder2nd( std::equal_to<int>(), 2 ) ); // ERROR - \n+      assert( *(it) == 2 );\n+}\n+"}, {"sha": "a7f4159392d5eed546eabf00b0b23c51c07c52d2", "filename": "gcc/testsuite/g++.old-deja/g++.robertl/eb132.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/431f67e296b52f569c70e45cff71905257254589/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb132.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/431f67e296b52f569c70e45cff71905257254589/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb132.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb132.C?ref=431f67e296b52f569c70e45cff71905257254589", "patch": "@@ -11,12 +11,12 @@\n \n #include <string>\n \n-string foo();\n+std::string foo();\n struct a {\n \tvoid bar();\n \tenum b { c, d };\n \tb theb;\n-\tstring baz;\n+\tstd::string baz;\n };\n \n void"}, {"sha": "788d60388cca1bd42c180fde42720f08dd555e82", "filename": "gcc/testsuite/g++.old-deja/g++.robertl/eb133.C", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/431f67e296b52f569c70e45cff71905257254589/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb133.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/431f67e296b52f569c70e45cff71905257254589/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb133.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb133.C?ref=431f67e296b52f569c70e45cff71905257254589", "patch": "@@ -1,4 +1,5 @@\n // Build don't link:\n+// Special g++ Options: -fno-honor-std\n // Gives ICE 109\n // From: Klaus-Georg Adams <Klaus-Georg.Adams@chemie.uni-karlsruhe.de> \n // Reported against EGCS snaps 98/06/28."}, {"sha": "2dc7a8b18d96955f64f37d9764fe6472852094c1", "filename": "gcc/testsuite/g++.old-deja/g++.robertl/eb133a.C", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/431f67e296b52f569c70e45cff71905257254589/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb133a.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/431f67e296b52f569c70e45cff71905257254589/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb133a.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb133a.C?ref=431f67e296b52f569c70e45cff71905257254589", "patch": "@@ -0,0 +1,16 @@\n+// Build don't link:\n+// Gives ICE 109\n+// From: Klaus-Georg Adams <Klaus-Georg.Adams@chemie.uni-karlsruhe.de> \n+// Reported against EGCS snaps 98/06/28.\n+\n+int main()\n+{\n+\ttry {\n+\t}\n+\tcatch (std::bad_alloc) { // ERROR - parse error\n+\t\treturn 1;\n+\t}\n+\treturn 0;\n+}\n+\n+\t"}, {"sha": "e2b25f6ef08cf473e5727d1dd6ef481214771ccd", "filename": "gcc/testsuite/g++.old-deja/g++.robertl/eb133b.C", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/431f67e296b52f569c70e45cff71905257254589/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb133b.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/431f67e296b52f569c70e45cff71905257254589/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb133b.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb133b.C?ref=431f67e296b52f569c70e45cff71905257254589", "patch": "@@ -0,0 +1,18 @@\n+// Build don't link:\n+// Gives ICE 109\n+// From: Klaus-Georg Adams <Klaus-Georg.Adams@chemie.uni-karlsruhe.de> \n+// Reported against EGCS snaps 98/06/28.\n+\n+using namespace std;\n+\n+int main()\n+{\n+\ttry {\n+\t}\n+\tcatch (bad_alloc) { // ERROR - parse error\n+\t\treturn 1;\n+\t}\n+\treturn 0;\n+}\n+\n+\t"}, {"sha": "c6bf6705f9f3fd36a7cac1ca684c2deb8b13580d", "filename": "gcc/testsuite/g++.old-deja/g++.robertl/eb21.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/431f67e296b52f569c70e45cff71905257254589/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb21.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/431f67e296b52f569c70e45cff71905257254589/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb21.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb21.C?ref=431f67e296b52f569c70e45cff71905257254589", "patch": "@@ -8,7 +8,7 @@ struct connection_t {\n   connection_t() {}\n };\n \n-vector<connection_t> connections;\n+std::vector<connection_t> connections;\n \n /*----------------------------------------*/\n "}, {"sha": "337e5a72e595425bf4c48c18266d690bf6983a8a", "filename": "gcc/testsuite/g++.old-deja/g++.robertl/eb36.C", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/431f67e296b52f569c70e45cff71905257254589/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb36.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/431f67e296b52f569c70e45cff71905257254589/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb36.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb36.C?ref=431f67e296b52f569c70e45cff71905257254589", "patch": "@@ -1,4 +1,5 @@\n #include <vector>\n+using namespace std;\n \n template <typename T=float> class foo {\n public:"}, {"sha": "0bd69e376487c776045cdffe5801634ca25abcf3", "filename": "gcc/testsuite/g++.old-deja/g++.robertl/eb41.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/431f67e296b52f569c70e45cff71905257254589/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb41.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/431f67e296b52f569c70e45cff71905257254589/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb41.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb41.C?ref=431f67e296b52f569c70e45cff71905257254589", "patch": "@@ -2,7 +2,7 @@\n #include <iterator.h>\n #include <string>\n \n-ostream_iterator<string> oo(cout);\n+ostream_iterator<std::string> oo(cout);\n \n int main()\n {"}, {"sha": "2721d8f3caaa4a2b1745c4feb44f376f965e92bb", "filename": "gcc/testsuite/g++.old-deja/g++.robertl/eb5.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/431f67e296b52f569c70e45cff71905257254589/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb5.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/431f67e296b52f569c70e45cff71905257254589/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb5.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb5.C?ref=431f67e296b52f569c70e45cff71905257254589", "patch": "@@ -3,7 +3,7 @@ enum { a, b };\n \n class Bug {\n   int pri:8;\n-  int flags:24;\n+  int flags:15;\n public:\n   void bug() {\n     flags |= a;   // this does not work"}, {"sha": "395e8385aeea1d781eecfbcc69ffb26f3790726f", "filename": "gcc/testsuite/g++.old-deja/g++.robertl/eb59.C", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/431f67e296b52f569c70e45cff71905257254589/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb59.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/431f67e296b52f569c70e45cff71905257254589/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb59.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb59.C?ref=431f67e296b52f569c70e45cff71905257254589", "patch": "@@ -7,6 +7,8 @@\n #include <functional>\n #endif\n \n+using namespace std;\n+\n template<class R> int p( int val, R& r )\n {\n    return val + r;"}, {"sha": "22290353d9484f542a5d435eff22e5b387c2ef35", "filename": "gcc/testsuite/g++.old-deja/g++.robertl/eb60.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/431f67e296b52f569c70e45cff71905257254589/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb60.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/431f67e296b52f569c70e45cff71905257254589/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb60.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb60.C?ref=431f67e296b52f569c70e45cff71905257254589", "patch": "@@ -3,8 +3,8 @@\n \n class t {\n public:\n-       t(const string& s) : s_(s) {}\n-       string s_;\n+       t(const std::string& s) : s_(s) {}\n+       std::string s_;\n        static t* t_;\n };\n "}, {"sha": "b197e0e832c15442138528fffbc9210ac54f5408", "filename": "gcc/testsuite/g++.old-deja/g++.robertl/eb62.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/431f67e296b52f569c70e45cff71905257254589/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb62.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/431f67e296b52f569c70e45cff71905257254589/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb62.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb62.C?ref=431f67e296b52f569c70e45cff71905257254589", "patch": "@@ -3,5 +3,5 @@\n \n void f(void)\n {\n-  vector<int> l(5, 0);\n+  std::vector<int> l(5, 0);\n }"}, {"sha": "b36c3821393d3b1366ae306355374da308948f52", "filename": "gcc/testsuite/g++.old-deja/g++.robertl/eb65.C", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/431f67e296b52f569c70e45cff71905257254589/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb65.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/431f67e296b52f569c70e45cff71905257254589/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb65.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb65.C?ref=431f67e296b52f569c70e45cff71905257254589", "patch": "@@ -1,5 +1,7 @@\n #include <iterator>\n \n+using namespace std;\n+\n template<size_t n, size_t i> struct PartialDotProduct {\n     template<class T>\n     static T Expand(T* a, T* b) { return T(); }"}, {"sha": "73c33ab48d29bb8a809270cb0ae68893e9c4598d", "filename": "gcc/testsuite/g++.old-deja/g++.robertl/eb7.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/431f67e296b52f569c70e45cff71905257254589/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb7.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/431f67e296b52f569c70e45cff71905257254589/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb7.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb7.C?ref=431f67e296b52f569c70e45cff71905257254589", "patch": "@@ -8,7 +8,7 @@ class T\n \n };\n \n-vector <T> tp;\n+std::vector <T> tp;\n \n void f()\n {"}, {"sha": "3e5ac2b505c6d900e5a1e0ae1bd0b1f4c2420203", "filename": "gcc/testsuite/g++.old-deja/g++.robertl/eb91.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/431f67e296b52f569c70e45cff71905257254589/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb91.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/431f67e296b52f569c70e45cff71905257254589/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb91.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb91.C?ref=431f67e296b52f569c70e45cff71905257254589", "patch": "@@ -20,7 +20,7 @@ private:\n       _eb91_u_int8_t c[2];\n     } val;\n     val.i = x;\n-    swap(val.c[0], val.c[1]);\n+    std::swap(val.c[0], val.c[1]);\n     return val.i;\n   };\n \n@@ -31,7 +31,7 @@ private:\n       _eb91_int8_t c[2];\n     } val;\n     val.i = x;\n-    swap(val.c[0], val.c[1]);\n+    std::swap(val.c[0], val.c[1]);\n     return val.i;\n   };\n public:"}, {"sha": "73be7a71ae3a3aa2ec6ca9dd1f5be730a9df6c8c", "filename": "gcc/testsuite/g++.old-deja/old-deja.exp", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/431f67e296b52f569c70e45cff71905257254589/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fold-deja.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/431f67e296b52f569c70e45cff71905257254589/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fold-deja.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fold-deja.exp?ref=431f67e296b52f569c70e45cff71905257254589", "patch": "@@ -1,4 +1,4 @@\n-# Copyright (C) 1988, 90, 91, 92, 1994, 1997 Free Software Foundation, Inc.\n+# Copyright (C) 1988, 90, 91, 92, 1994, 1997, 2000 Free Software Foundation, Inc.\n \n # This program is free software; you can redistribute it and/or modify\n # it under the terms of the GNU General Public License as published by\n@@ -32,7 +32,7 @@ load_lib g++.exp\n \n # When a testcase doesn't have any special options, use these.\n if ![info exists DEFAULT_CXXFLAGS] {\n-    set DEFAULT_CXXFLAGS \"-ansi -pedantic-errors\"\n+    set DEFAULT_CXXFLAGS \"-ansi -pedantic-errors -Wno-long-long\"\n \n }\n "}]}