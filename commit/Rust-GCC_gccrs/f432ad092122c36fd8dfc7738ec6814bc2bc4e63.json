{"sha": "f432ad092122c36fd8dfc7738ec6814bc2bc4e63", "node_id": "C_kwDOANBUbNoAKGY0MzJhZDA5MjEyMmMzNmZkOGRmYzc3MzhlYzY4MTRiYzJiYzRlNjM", "commit": {"author": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2023-01-11T00:17:56Z"}, "committer": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2023-01-11T00:17:56Z"}, "message": "Daily bump.", "tree": {"sha": "3bf0b821c47fb143f26206db60bab3ee67aa253e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3bf0b821c47fb143f26206db60bab3ee67aa253e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f432ad092122c36fd8dfc7738ec6814bc2bc4e63", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f432ad092122c36fd8dfc7738ec6814bc2bc4e63", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f432ad092122c36fd8dfc7738ec6814bc2bc4e63", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f432ad092122c36fd8dfc7738ec6814bc2bc4e63/comments", "author": null, "committer": null, "parents": [{"sha": "aa966d54ee4cd590c8bba2710c767cd236804e78", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aa966d54ee4cd590c8bba2710c767cd236804e78", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aa966d54ee4cd590c8bba2710c767cd236804e78"}], "stats": {"total": 259, "additions": 258, "deletions": 1}, "files": [{"sha": "e0671ebaf88e0352a255200c6db41dd048927795", "filename": "ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f432ad092122c36fd8dfc7738ec6814bc2bc4e63/ChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f432ad092122c36fd8dfc7738ec6814bc2bc4e63/ChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/ChangeLog?ref=f432ad092122c36fd8dfc7738ec6814bc2bc4e63", "patch": "@@ -1,3 +1,7 @@\n+2023-01-10  Philip Herron  <herron.philip@googlemail.com>\n+\n+\t* MAINTAINERS: Add Philip Herron as Rust front-end maintainer\n+\n 2023-01-06  Cl\u00e9ment Chigot  <chigot@adacore.com>\n \n \t* configure.ac: Skip GMP and MPFR when --disable-gdb is"}, {"sha": "6c6c3519ec1c921d3ea8723eee353eb863b79573", "filename": "gcc/ChangeLog", "status": "modified", "additions": 78, "deletions": 0, "changes": 78, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f432ad092122c36fd8dfc7738ec6814bc2bc4e63/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f432ad092122c36fd8dfc7738ec6814bc2bc4e63/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f432ad092122c36fd8dfc7738ec6814bc2bc4e63", "patch": "@@ -1,3 +1,81 @@\n+2023-01-10  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/106293\n+\t* tree-ssa-dse.cc (dse_classify_store): Use a worklist to\n+\tprocess degenerate PHI defs.\n+\n+2023-01-10  Roger Sayle  <roger@nextmovesoftware.com>\n+\n+\tPR rtl-optimization/106421\n+\t* cprop.cc (bypass_block): Check that DEST is local to this\n+\tfunction (non-NULL) before calling find_edge.\n+\n+2023-01-10  Martin Jambor  <mjambor@suse.cz>\n+\n+\tPR ipa/108110\n+\t* ipa-param-manipulation.h (ipa_param_body_adjustments): New members\n+\tsort_replacements, lookup_first_base_replacement and\n+\tm_sorted_replacements_p.\n+\t* ipa-param-manipulation.cc: Define INCLUDE_ALGORITHM.\n+\t(ipa_param_body_adjustments::register_replacement): Set\n+\tm_sorted_replacements_p to false.\n+\t(compare_param_body_replacement): New function.\n+\t(ipa_param_body_adjustments::sort_replacements): Likewise.\n+\t(ipa_param_body_adjustments::common_initialization): Call\n+\tsort_replacements.\n+\t(ipa_param_body_adjustments::ipa_param_body_adjustments): Initialize\n+\tm_sorted_replacements_p.\n+\t(ipa_param_body_adjustments::lookup_replacement_1): Rework to use\n+\tstd::lower_bound.\n+\t(ipa_param_body_adjustments::lookup_first_base_replacement): New\n+\tfunction.\n+\t(ipa_param_body_adjustments::modify_call_stmt): Use\n+\tlookup_first_base_replacement.\n+\t* omp-simd-clone.cc (ipa_simd_modify_function_body): Call\n+\tadjustments->sort_replacements.\n+\n+2023-01-10  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/108314\n+\t* tree-vect-stmts.cc (vectorizable_condition): Do not\n+\tperform BIT_NOT_EXPR optimization for EXTRACT_LAST_REDUCTION.\n+\n+2023-01-10  Xianmiao Qu  <cooper.qu@linux.alibaba.com>\n+\n+\t* config/csky/csky-linux-elf.h (SYSROOT_SUFFIX_SPEC): New.\n+\n+2023-01-10  Xianmiao Qu  <cooper.qu@linux.alibaba.com>\n+\n+\t* config/csky/csky.h (MULTILIB_DEFAULTS): Fix float abi option.\n+\n+2023-01-10  Xianmiao Qu  <cooper.qu@linux.alibaba.com>\n+\n+\t* config/csky/csky.cc (csky_cpu_cpp_builtins): Add builtin\n+\tdefines for soft float abi.\n+\n+2023-01-10  Xianmiao Qu  <cooper.qu@linux.alibaba.com>\n+\n+\t* config/csky/csky.md (smart_bseti): Change condition to CSKY_ISA_FEATURE (E1).\n+\t(smart_bclri): Likewise.\n+\t(fast_bseti): Change condition to CSKY_ISA_FEATURE (E2).\n+\t(fast_bclri): Likewise.\n+\t(fast_cmpnesi_i): Likewise.\n+\t(*fast_cmpltsi_i): Likewise.\n+\t(*fast_cmpgeusi_i): Likewise.\n+\n+2023-01-10  Xianmiao Qu  <cooper.qu@linux.alibaba.com>\n+\n+\t* config/csky/csky_insn_fpuv3.md (l<frm_pattern><fixsuop><mode>si2): Test\n+\tflag_fp_int_builtin_inexact || !flag_trapping_math.\n+\t(<frm_pattern><mode>2): Likewise.\n+\n+2023-01-10  Andreas Krebbel  <krebbel@linux.ibm.com>\n+\n+\t* config/s390/s390.cc (s390_register_info): Check call_used_regs\n+\tinstead of hard-coding the register numbers for call saved\n+\tregisters.\n+\t(s390_optimize_register_info): Likewise.\n+\n 2023-01-09  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* doc/gm2.texi (Overview): Fix @node markers."}, {"sha": "35defd81c7a467b6b9af4bb6a6e746b9fd9456f4", "filename": "gcc/DATESTAMP", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f432ad092122c36fd8dfc7738ec6814bc2bc4e63/gcc%2FDATESTAMP", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f432ad092122c36fd8dfc7738ec6814bc2bc4e63/gcc%2FDATESTAMP", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FDATESTAMP?ref=f432ad092122c36fd8dfc7738ec6814bc2bc4e63", "patch": "@@ -1 +1 @@\n-20230110\n+20230111"}, {"sha": "7c72e9bccd549e5a5d730a796be187fb4fc330b1", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f432ad092122c36fd8dfc7738ec6814bc2bc4e63/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f432ad092122c36fd8dfc7738ec6814bc2bc4e63/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=f432ad092122c36fd8dfc7738ec6814bc2bc4e63", "patch": "@@ -1,3 +1,8 @@\n+2023-01-10  Harald Anlauf  <anlauf@gmx.de>\n+\n+\tPR fortran/97345\n+\t* frontend-passes.cc (do_subscript): Clear used gmp variables.\n+\n 2023-01-02  Jakub Jelinek  <jakub@redhat.com>\n \n \t* gfortranspec.cc (lang_specific_driver): Update copyright notice"}, {"sha": "32cf1e4f3c301b3319e67c3d1cab356962ec9f77", "filename": "gcc/m2/ChangeLog", "status": "modified", "additions": 111, "deletions": 0, "changes": 111, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f432ad092122c36fd8dfc7738ec6814bc2bc4e63/gcc%2Fm2%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f432ad092122c36fd8dfc7738ec6814bc2bc4e63/gcc%2Fm2%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2FChangeLog?ref=f432ad092122c36fd8dfc7738ec6814bc2bc4e63", "patch": "@@ -1,3 +1,114 @@\n+2023-01-10  Gaius Mulley  <gaiusmod2@gmail.com>\n+\n+\t* Make-lang.in (m2/mc-boot/$(SRC_PREFIX)%.o): Add\n+\tm2/gm2-libs/gm2-libs-host.h dependency.\n+\t(m2/mc-boot-ch/$(SRC_PREFIX)%.o): Add\n+\tm2/gm2-libs/gm2-libs-host.h dependency.\n+\n+2023-01-10  Gaius Mulley  <gaiusmod2@gmail.com>\n+\n+\t* Make-lang.in (GM2_1): Change -B path to m2/stage1.\n+\t($(objdir)/m2/images/gnu.eps): Check and create dest dir\n+\tif necessary.\n+\t(gm2-libs.texi-check): Check and create dir m2/gm2-libs-pim,\n+\tm2/gm2-libs-iso and m2/gm2-libs if necessary.\n+\t($(objdir)/m2/gm2-compiler-boot): Remove.\n+\t($(objdir)/m2/gm2-libs-boot): Remove.\n+\t($(objdir)/m2/gm2-libs-libiberty): Remove.\n+\t($(objdir)/m2/gm2-libiberty): Remove.\n+\t($(objdir)/m2/gm2-gcc): Remove.\n+\t($(objdir)/m2/gm2-compiler): Remove.\n+\t($(objdir)/m2/gm2-libs): Remove.\n+\t($(objdir)/m2/gm2-libs-iso): Remove.\n+\t($(objdir)/m2/gm2-libs-min): Remove.\n+\t($(objdir)/m2/gm2-compiler-paranoid): Remove.\n+\t($(objdir)/m2/gm2-libs-paranoid): Remove.\n+\t($(objdir)/m2/gm2-compiler-verify): Remove.\n+\t($(objdir)/m2/boot-bin): Remove.\n+\t($(objdir)/m2/gm2-libs-pim): Remove.\n+\t($(objdir)/m2/gm2-libs-coroutines): Remove.\n+\t(stage1/m2): Remove.\n+\t(stage2/m2): Remove.\n+\t(stage3/m2): Remove.\n+\t(m2.stageprofile): New rule.\n+\t(m2.stagefeedback): New rule.\n+\t(cc1gm2$(exeext)): Change dependent name.\n+\t(m2/stage2/cc1gm2$(exeext)): Change dependent name.\n+\tCheck and create dest dir.\n+\t(m2/stage1/cc1gm2$(exeext)): Check and create dest dir\n+\tif necessary.\n+\t(m2/gm2-gcc/%.o): Ditto.\n+\t(m2/gm2-gcc/rtegraph.o): Ditto.\n+\t(m2/gm2-gcc/$(SRC_PREFIX)%.h): Ditto.\n+\t(m2/gm2-gcc/$(SRC_PREFIX)%.h): Ditto.\n+\t(m2/mc-boot): Ditto.\n+\t(m2/mc-boot-ch): Ditto.\n+\t(m2/gm2-libs-boot): Ditto.\n+\t(m2/gm2-compiler-boot): Ditto.\n+\t(m2/gm2-compiler): Ditto.\n+\t(m2/gm2-libiberty): Ditto.\n+\t(m2/gm2-compiler): Ditto.\n+\t(m2/gm2-libs-iso): Ditto.\n+\t(m2/gm2-libs): Ditto.\n+\t(m2/gm2-libs-min): Ditto.\n+\t(m2/gm2-libs-coroutines): Ditto.\n+\t(m2/boot-bin): Ditto.\n+\t(m2/pge-boot): Ditto.\n+\t(m2/pge-boot): Ditto.\n+\t* Make-maintainer.in (m2/gm2-ppg-boot): Check and create\n+\tdest dir if necessary.\n+\t(m2): Ditto.\n+\t(m2/gm2-ppg-boot): Ditto.\n+\t(m2/gm2-pg-boot): Ditto.\n+\t(m2/gm2-auto): Ditto.\n+\t(m2/gm2-pg-boot): Ditto.\n+\t(m2/gm2-pge-boot): Ditto.\n+\t($(objdir)/plugin): Ditto.\n+\t($(objdir)/m2/mc-boot-ch): Ditto.\n+\t($(objdir)/m2/mc-boot-gen): Ditto.\n+\t(m2/boot-bin): Ditto.\n+\t(m2/mc): Ditto.\n+\t(m2/mc-obj): Ditto.\n+\t($(objdir)/m2/gm2-ppg-boot): Ditto.\n+\t($(objdir)/m2/gm2-pg-boot): Ditto.\n+\t($(objdir)/m2/gm2-pge-boot): Ditto.\n+\t(m2/mc-boot-gen): Ditto.\n+\t(m2/m2obj3): Ditto.\n+\t(m2/gm2-libs-paranoid): Ditto.\n+\t(m2/gm2-compiler-paranoid): Ditto.\n+\t(m2/gm2-libs-paranoid): Ditto.\n+\t(m2/gm2-compiler-paranoid): Ditto.\n+\t(m2/gm2-libs-paranoid): Ditto.\n+\t(m2/gm2-compiler-paranoid): Ditto.\n+\t* config-lang.in (m2/gm2-compiler-boot): Remove mkdir.\n+\t(m2/gm2-libs-boot): Ditto.\n+\t(m2/gm2-ici-boot): Ditto.\n+\t(m2/gm2-libiberty): Ditto.\n+\t(m2/gm2-gcc): Ditto.\n+\t(m2/gm2-compiler): Ditto.\n+\t(m2/gm2-libs): Ditto.\n+\t(m2/gm2-libs-iso): Ditto.\n+\t(m2/gm2-compiler-paranoid): Ditto.\n+\t(m2/gm2-libs-paranoid): Ditto.\n+\t(m2/gm2-compiler-verify): Ditto.\n+\t(m2/boot-bin): Ditto.\n+\t(m2/gm2-libs-pim): Ditto.\n+\t(m2/gm2-libs-coroutines): Ditto.\n+\t(m2/gm2-libs-min): Ditto.\n+\t(m2/pge-boot): Ditto.\n+\t(plugin): Ditto.\n+\t(stage1/m2): Ditto.\n+\t(stage2/m2): Ditto.\n+\t(stage3/m2): Ditto.\n+\t(stage4/m2): Ditto.\n+\t(m2/gm2-auto): Ditto.\n+\t(m2/gm2-pg-boot): Ditto.\n+\t(m2/gm2-pge-boot): Ditto.\n+\t(m2/gm2-ppg-boot): Ditto.\n+\t(m2/mc-boot): Ditto.\n+\t(m2/mc-boot-ch): Ditto.\n+\t(m2/mc-boot-gen): Ditto.\n+\n 2023-01-09  Gaius Mulley  <gaiusmod2@gmail.com>\n \n \t* Make-lang.in (m2/pge-boot/%.o): Add m2/gm2config.h."}, {"sha": "8cd4f834c582b391639d857e49a74121a79e07c9", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f432ad092122c36fd8dfc7738ec6814bc2bc4e63/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f432ad092122c36fd8dfc7738ec6814bc2bc4e63/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=f432ad092122c36fd8dfc7738ec6814bc2bc4e63", "patch": "@@ -1,3 +1,43 @@\n+2023-01-10  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/106293\n+\t* gcc.dg/tree-ssa/ssa-dse-46.c: New testcase.\n+\n+2023-01-10  Roger Sayle  <roger@nextmovesoftware.com>\n+\n+\tPR rtl-optimization/106421\n+\t* gcc.dg/pr106421.c: New test case.\n+\n+2023-01-10  Martin Jambor  <mjambor@suse.cz>\n+\n+\tPR ipa/108110\n+\t* g++.dg/ipa/pr108110.C: New test.\n+\n+2023-01-10  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/108314\n+\t* gcc.dg/vect/pr108314.c: New testcase.\n+\n+2023-01-10  Xianmiao Qu  <cooper.qu@linux.alibaba.com>\n+\n+\t* gcc.target/csky/ldbs.c : Fix exclude-opts, should not\n+\tbe \"*\".\n+\n+2023-01-10  Xianmiao Qu  <cooper.qu@linux.alibaba.com>\n+\n+\t* gcc.target/csky/and3a.c: Rename to ...\n+\t* gcc.target/csky/ck801-and.c: ... this.\n+\t* gcc.target/csky/constpool-3.c: Rename to ...\n+\t* gcc.target/csky/constpool-2.c: ... this, Rename to ...\n+\t* gcc.target/csky/constpool-1.c: ... this, Rename to ...\n+\t* gcc.target/csky/ck801-constpool.c: ... this, and skip\n+\tif the CPU is not ck801.\n+\t* gcc.target/csky/ck801-branch.c: Skip if the CPU is not ck801.\n+\n+2023-01-10  Andreas Krebbel  <krebbel@linux.ibm.com>\n+\n+\t* gcc.target/s390/fcall-saved.c: New test.\n+\n 2023-01-09  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c++/105838"}, {"sha": "a6a90864692cde5c866af75853c3fa8fe10c2370", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f432ad092122c36fd8dfc7738ec6814bc2bc4e63/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f432ad092122c36fd8dfc7738ec6814bc2bc4e63/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=f432ad092122c36fd8dfc7738ec6814bc2bc4e63", "patch": "@@ -1,3 +1,22 @@\n+2023-01-10  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* src/c++20/tzdb.cc (tzdb_list::_S_init_tzdb): Use __try and\n+\t__catch macros for exception handling.\n+\n+2023-01-10  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\tPR libstdc++/108221\n+\t* include/bits/stl_algobase.h (__lg): Replace six overloads with\n+\ta single function template for all integer types.\n+\t* include/bits/stl_algo.h (__merge_adaptive_resize): Cast\n+\tarithmetic results back to _Distance.\n+\n+2023-01-10  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\tPR libstdc++/108221\n+\t* include/std/span (span::span()): Un-simplify constraint to\n+\twork for size_t of lesser rank than int.\n+\n 2023-01-07  LIU Hao  <lh_mouse@126.com>\n \n \tPR middle-end/108300"}]}