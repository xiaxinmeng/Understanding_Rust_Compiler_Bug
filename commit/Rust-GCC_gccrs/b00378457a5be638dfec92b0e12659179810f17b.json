{"sha": "b00378457a5be638dfec92b0e12659179810f17b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjAwMzc4NDU3YTViZTYzOGRmZWM5MmIwZTEyNjU5MTc5ODEwZjE3Yg==", "commit": {"author": {"name": "Phil Edwards", "email": "pme@gcc.gnu.org", "date": "2001-11-24T03:28:27Z"}, "committer": {"name": "Phil Edwards", "email": "pme@gcc.gnu.org", "date": "2001-11-24T03:28:27Z"}, "message": "Makefile.am (doxygen-maint): The script isn't executable in CVS.\n\n2001-11-23  Phil Edwards  <pme@gcc.gnu.org>\n\n\t* Makefile.am (doxygen-maint):  The script isn't executable in CVS.\n\t* Makefile.in:  Regenerated.\n\t* docs/doxygen/TODO:  New file listing doxygen work to be done.\n\t* docs/doxygen/run_doxygen:  Fix up man pages.\n\t* docs/doxygen/user.cfg.in:  Insert maint-only toggles.\n\t* docs/doxygen/maint.cfg.in:  Copy from user.cfg and turn toggles on.\n\t* include/bits/stl_construct.h:  Use new hooks for internal functions.\n\n\t* docs/html/17_intro/TODO:  Small updates.\n\t* docs/html/faq/index.html:  Likewise.\n\t* docs/html/faq/index.txt:  Regenerated.\n\n\t* include/bits/stl_alloc.h:  Doxygenate, reindent comments, remove\n\tSGI-isms and wrappers.\n\t(simple_alloc, debug_alloc):  Uglify class names.\n\t(__default_alloc_template):  Uglify \"threads\" template parameter and\n\tupdate corresponding macros.\n\t* include/backward/alloc.h:  Bring up to date.\n\nFrom-SVN: r47296", "tree": {"sha": "943957c0c412258b083a40f82a79f24df12f6258", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/943957c0c412258b083a40f82a79f24df12f6258"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b00378457a5be638dfec92b0e12659179810f17b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b00378457a5be638dfec92b0e12659179810f17b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b00378457a5be638dfec92b0e12659179810f17b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b00378457a5be638dfec92b0e12659179810f17b/comments", "author": null, "committer": null, "parents": [{"sha": "05ce35e6f212f419fc807cea258aa613da1191c5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/05ce35e6f212f419fc807cea258aa613da1191c5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/05ce35e6f212f419fc807cea258aa613da1191c5"}], "stats": {"total": 910, "additions": 574, "deletions": 336}, "files": [{"sha": "1d55dfd6a1bc2146bb6bacb5663c35f128aee3d7", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b00378457a5be638dfec92b0e12659179810f17b/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b00378457a5be638dfec92b0e12659179810f17b/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=b00378457a5be638dfec92b0e12659179810f17b", "patch": "@@ -1,3 +1,24 @@\n+2001-11-23  Phil Edwards  <pme@gcc.gnu.org>\n+\n+\t* Makefile.am (doxygen-maint):  The script isn't executable in CVS.\n+\t* Makefile.in:  Regenerated.\n+\t* docs/doxygen/TODO:  New file listing doxygen work to be done.\n+\t* docs/doxygen/run_doxygen:  Fix up man pages.\n+\t* docs/doxygen/user.cfg.in:  Insert maint-only toggles.\n+\t* docs/doxygen/maint.cfg.in:  Copy from user.cfg and turn toggles on.\n+\t* include/bits/stl_construct.h:  Use new hooks for internal functions.\n+\n+\t* docs/html/17_intro/TODO:  Small updates.\n+\t* docs/html/faq/index.html:  Likewise.\n+\t* docs/html/faq/index.txt:  Regenerated.\n+\n+\t* include/bits/stl_alloc.h:  Doxygenate, reindent comments, remove\n+\tSGI-isms and wrappers.\n+\t(simple_alloc, debug_alloc):  Uglify class names.\n+\t(__default_alloc_template):  Uglify \"threads\" template parameter and\n+\tupdate corresponding macros.\n+\t* include/backward/alloc.h:  Bring up to date.\n+\n 2001-11-23  Jason Merrill  <jason@redhat.com>\n \n \t* src/vterminate.cc (__verbose_terminate_handler): Add leading"}, {"sha": "3f058ee4f3e07437408ffb4168bce8b34add3eb4", "filename": "libstdc++-v3/Makefile.am", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b00378457a5be638dfec92b0e12659179810f17b/libstdc%2B%2B-v3%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b00378457a5be638dfec92b0e12659179810f17b/libstdc%2B%2B-v3%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FMakefile.am?ref=b00378457a5be638dfec92b0e12659179810f17b", "patch": "@@ -53,7 +53,8 @@ doxygen:\n doxygen-maint:\n \t-(srcdir=`cd ${top_srcdir}; pwd`; \\\n \t  outdir=`pwd`; \\\n-\t  ${srcdir}/docs/doxygen/run_doxygen --mode=maint $${srcdir} $${outdir})\n+\t  /bin/sh ${srcdir}/docs/doxygen/run_doxygen \\\n+\t            --mode=maint $${srcdir} $${outdir})\n \n .PHONY: doxygen doxygen-maint\n "}, {"sha": "1f2b00c6a6185197e1af68bf2afa7fb047a2a766", "filename": "libstdc++-v3/Makefile.in", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b00378457a5be638dfec92b0e12659179810f17b/libstdc%2B%2B-v3%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b00378457a5be638dfec92b0e12659179810f17b/libstdc%2B%2B-v3%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FMakefile.in?ref=b00378457a5be638dfec92b0e12659179810f17b", "patch": "@@ -507,7 +507,8 @@ doxygen:\n doxygen-maint:\n \t-(srcdir=`cd ${top_srcdir}; pwd`; \\\n \t  outdir=`pwd`; \\\n-\t  ${srcdir}/docs/doxygen/run_doxygen --mode=maint $${srcdir} $${outdir})\n+\t  /bin/sh ${srcdir}/docs/doxygen/run_doxygen \\\n+\t            --mode=maint $${srcdir} $${outdir})\n \n .PHONY: doxygen doxygen-maint\n "}, {"sha": "20f79593e4f753b35a037184c5287694f1348c24", "filename": "libstdc++-v3/docs/doxygen/TODO", "status": "added", "additions": 52, "deletions": 0, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b00378457a5be638dfec92b0e12659179810f17b/libstdc%2B%2B-v3%2Fdocs%2Fdoxygen%2FTODO", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b00378457a5be638dfec92b0e12659179810f17b/libstdc%2B%2B-v3%2Fdocs%2Fdoxygen%2FTODO", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdocs%2Fdoxygen%2FTODO?ref=b00378457a5be638dfec92b0e12659179810f17b", "patch": "@@ -0,0 +1,52 @@\n+\n+The approach I've been using for a given header is to recursively do each\n+of the \"bits\" headers which make up the standard header.  So, e.g., while\n+there are five headers making up <algorithm>, three of them were already\n+documented in the course of doing other headers.\n+\n+\"Untouched\" means I've deliberately skipped it for various reasons, or\n+haven't gotten to it yet.  It /will/ be done (by somebody, eventually.)\n+\n+\n+ Area           Still needs to be doxygen-documented\n+-----------------------------------------------------------\n+\n+c17             FINISHED (Nothing in Clause 17 \"exists\" in terms of code.)\n+c18             <limits>, Note A\n+c19             Note A\n+c20             std_memory.h[20.4], rel_ops (should they be doc'd?), Note A\n+c21             Untouched, Note B\n+c22             Untouched\n+c23             See doxygroups.cc and Note B.\n+                stl_alloc.h, stl_uninitialized.h remain from the common files.\n+c24             Untouched\n+c25             stl_tempbuf.h (small), stl_algo.h (big)\n+c26             <complex>, <valarray>, stl_numeric.h[26.4], Note A\n+c27             Untouched\n+\n+backward/       Not scanned by doxygen.  Should it be?\n+\n+ext/            Untouched\n+\n+__gnu_cxx       Extensions such as verbose_terminate_handler are documented\n+                but do not appear in output, since the __gnu_cxx namespace is\n+                itself undocumented.  Should it be?  Eeeeeeehhh...\n+\n+[1.3.5]         \"implementation-defined behavior:  behavior ... that depends\n+                on the implementation *and that each implementation shall\n+                document*.\"  [my emphasis]  Not all implementation choices\n+                have been thus described; doxygen is not necessarily the\n+                appropriate place for such descriptions, either.\n+\n+-----------------------------------------------------------\n+\n+NOTES:\n+\n+A)  So far I have not tried to document any of the <c*> headers.  So entities\n+such as atexit() are undocumented throughout the library.\n+\n+B)  Huge chunks of containers and strings are described in common \"Tables\"\n+in the standard.  How to reproduce this information?\n+\n+\n+vim:ts=4:et:"}, {"sha": "25ae78b861c26e16810389ecae964583eaa0a281", "filename": "libstdc++-v3/docs/doxygen/maint.cfg.in", "status": "modified", "additions": 119, "deletions": 36, "changes": 155, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b00378457a5be638dfec92b0e12659179810f17b/libstdc%2B%2B-v3%2Fdocs%2Fdoxygen%2Fmaint.cfg.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b00378457a5be638dfec92b0e12659179810f17b/libstdc%2B%2B-v3%2Fdocs%2Fdoxygen%2Fmaint.cfg.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdocs%2Fdoxygen%2Fmaint.cfg.in?ref=b00378457a5be638dfec92b0e12659179810f17b", "patch": "@@ -1,4 +1,4 @@\n-# Doxyfile 1.2.4\n+# Doxyfile 1.2.6\n \n # This file describes the settings to be used by doxygen for a project\n #\n@@ -9,20 +9,24 @@\n #       TAG += value [value, ...]\n # Values that contain spaces should be placed between quotes (\" \")\n \n+### When doxygen is run, the current directory is the top of\n+### the libstdc++-v3 source directory.  Keep this in mind while\n+### writing relative-path directories.\n+\n #---------------------------------------------------------------------------\n # General configuration options\n #---------------------------------------------------------------------------\n \n # The PROJECT_NAME tag is a single word (or a sequence of words surrounded \n # by quotes) that should identify the project. \n \n-PROJECT_NAME           = \"libstdc++\"\n+PROJECT_NAME           = \"libstdc++-v3 Source\"\n \n # The PROJECT_NUMBER tag can be used to enter a project or revision number. \n # This could be handy for archiving the generated documentation or \n # if some version control system is used.\n \n-PROJECT_NUMBER         = 3\n+PROJECT_NUMBER         = \n \n # The OUTPUT_DIRECTORY tag is used to specify the (relative or absolute) \n # base path where the generated documentation will be put. \n@@ -46,8 +50,8 @@ OUTPUT_LANGUAGE        = English\n # Private class members and static file members will be hidden unless \n # the EXTRACT_PRIVATE and EXTRACT_STATIC tags are set to YES \n \n-#EXTRACT_ALL            = NO\n-EXTRACT_ALL            = YES\n+EXTRACT_ALL            = NO\n+#EXTRACT_ALL            = YES\n \n # If the EXTRACT_PRIVATE tag is set to YES all private members of a class \n # will be included in the documentation. \n@@ -65,21 +69,21 @@ EXTRACT_STATIC         = YES\n # various overviews, but no documentation section is generated. \n # This option has no effect if EXTRACT_ALL is enabled. \n \n-HIDE_UNDOC_MEMBERS     = NO\n+HIDE_UNDOC_MEMBERS     = YES\n \n # If the HIDE_UNDOC_CLASSES tag is set to YES, Doxygen will hide all \n # undocumented classes that are normally visible in the class hierarchy. \n # If set to NO (the default) these class will be included in the various \n # overviews. This option has no effect if EXTRACT_ALL is enabled. \n \n-HIDE_UNDOC_CLASSES     = NO\n+HIDE_UNDOC_CLASSES     = YES\n \n # If the BRIEF_MEMBER_DESC tag is set to YES (the default) Doxygen will \n # include brief member descriptions after the members that are listed in \n # the file and class documentation (similar to JavaDoc). \n # Set to NO to disable this. \n \n-BRIEF_MEMBER_DESC      = NO\n+BRIEF_MEMBER_DESC      = YES\n \n # If the REPEAT_BRIEF tag is set to YES (the default) Doxygen will prepend \n # the brief description of a member or function before the detailed description. \n@@ -118,12 +122,12 @@ INTERNAL_DOCS          = NO\n # generate a class diagram (in Html and LaTeX) for classes with base or \n # super classes. Setting the tag to NO turns the diagrams off. \n \n-CLASS_DIAGRAMS         = NO\n+CLASS_DIAGRAMS         = YES\n \n # If the SOURCE_BROWSER tag is set to YES then a list of source files will \n-# be generated. Documented entities will be cross-referenced with these sources. \n+# be generated. Documented entities will be cross-referenced with these sources.\n \n-SOURCE_BROWSER         = NO\n+SOURCE_BROWSER         = YES\n \n # Setting the INLINE_SOURCES tag to YES will include the body \n # of functions and classes directly in the documentation. \n@@ -142,7 +146,7 @@ STRIP_CODE_COMMENTS    = YES\n # in case and if your file system supports case sensitive file names. Windows \n # users are advised to set this option to NO.\n \n-CASE_SENSE_NAMES       = YES\n+CASE_SENSE_NAMES       = NO\n \n # If the HIDE_SCOPE_NAMES tag is set to NO (the default) then Doxygen \n # will show members with their full class and namespace scopes in the \n@@ -186,14 +190,14 @@ INLINE_INFO            = YES\n # alphabetically by member name. If set to NO the members will appear in \n # declaration order. \n \n-SORT_MEMBER_DOCS       = NO\n+SORT_MEMBER_DOCS       = YES\n \n # If member grouping is used in the documentation and the DISTRIBUTE_GROUP_DOC \n # tag is set to YES, then doxygen will reuse the documentation of the first \n # member in the group (if any) for the other members of the group. By default \n # all members of a group must be documented explicitly.\n \n-#DISTRIBUTE_GROUP_DOC   = NO\n+DISTRIBUTE_GROUP_DOC   = YES\n \n # The TAB_SIZE tag can be used to set the number of spaces in a tab. \n # Doxygen uses this value to replace tabs by spaces in code fragments. \n@@ -203,19 +207,25 @@ TAB_SIZE               = 4\n # The ENABLE_SECTIONS tag can be used to enable conditional \n # documentation sections, marked by \\if sectionname ... \\endif. \n \n-ENABLED_SECTIONS       = \n+ENABLED_SECTIONS       = maint\n \n # The GENERATE_TODOLIST tag can be used to enable (YES) or \n # disable (NO) the todo list. This list is created by putting \\todo \n # commands in the documentation.\n \n-GENERATE_TODOLIST      = YES\n+GENERATE_TODOLIST      = NO\n \n # The GENERATE_TESTLIST tag can be used to enable (YES) or \n # disable (NO) the test list. This list is created by putting \\test \n # commands in the documentation.\n \n-GENERATE_TESTLIST      = YES\n+GENERATE_TESTLIST      = NO\n+\n+# The GENERATE_BUGLIST tag can be used to enable (YES) or \n+# disable (NO) the bug list. This list is created by putting \\bug \n+# commands in the documentation.\n+\n+GENERATE_BUGLIST       = YES\n \n # This tag can be used to specify a number of aliases that acts \n # as commands in the documentation. An alias has the form \"name=value\". \n@@ -224,7 +234,31 @@ GENERATE_TESTLIST      = YES\n # will result in a user defined paragraph with heading \"Side Effects:\". \n # You can put \\n's in the value part of an alias to insert newlines. \n \n-#ALIASES                = \n+ALIASES                = \"maint=\\if maint\" \\\n+                         \"endmaint=\\endif\"\n+\n+# The MAX_INITIALIZER_LINES tag determines the maximum number of lines \n+# the initial value of a variable or define consist of for it to appear in \n+# the documentation. If the initializer consists of more lines than specified \n+# here it will be hidden. Use a value of 0 to hide initializers completely. \n+# The appearance of the initializer of individual variables and defines in the \n+# documentation can be controlled using \\showinitializer or \\hideinitializer \n+# command in the documentation regardless of this setting. \n+\n+MAX_INITIALIZER_LINES  = 30\n+\n+# Set the OPTIMIZE_OUTPUT_FOR_C tag to YES if your project consists of C sources\n+# only. Doxygen will then generate output that is more tailored for C. \n+# For instance some of the names that are used will be different. The list \n+# of all members will be omitted, etc. \n+\n+OPTIMIZE_OUTPUT_FOR_C  = NO\n+\n+# Set the SHOW_USED_FILES tag to NO to disable the list of files generated \n+# at the bottom of the documentation of classes and structs. If set to YES the \n+# list will mention the files that were used to generate the documentation. \n+\n+SHOW_USED_FILES        = YES\n \n #---------------------------------------------------------------------------\n # configuration options related to warning and progress messages\n@@ -239,7 +273,6 @@ QUIET                  = YES\n # generated by doxygen. Possible values are YES and NO. If left blank \n # NO is used. \n \n-### pme  Turned off; apparently doxygen can't grok templates\n WARNINGS               = NO\n \n # If WARN_IF_UNDOCUMENTED is set to YES, then doxygen will generate warnings \n@@ -259,25 +292,47 @@ WARN_FORMAT            = \"$file:$line: $text\"\n # and error messages should be written. If left blank the output is written \n # to stderr. \n \n-#WARN_LOGFILE           = \n+WARN_LOGFILE           = \n \n #---------------------------------------------------------------------------\n # configuration options related to the input files\n #---------------------------------------------------------------------------\n \n-# The INPUT tag can be used to specify the files and/or directories that contain \n+# The INPUT tag can be used to specify the files and/or directories that contain\n # documented source files. You may enter file names like \"myfile.cpp\" or \n # directories like \"/usr/src/myproject\". Separate the files or directories \n # with spaces. \n \n-INPUT                  = include src libmath libsupc++ libio config\n+INPUT                  = docs/doxygen \\\n+                         libsupc++ \\\n+                         include \\\n+                         src \\\n+libsupc++/exception libsupc++/new libsupc++/typeinfo include/ext/hash_map \\\n+include/ext/hash_set include/ext/rope include/ext/slist include/std/algorithm \\\n+include/std/bitset include/std/cassert include/std/cctype \\\n+include/std/cerrno include/std/cfloat include/std/ciso646 include/std/climits \\\n+include/std/clocale include/std/cmath include/std/complex include/std/csetjmp \\\n+include/std/csignal include/std/cstdarg include/std/cstddef \\\n+include/std/cstdio include/std/cstdlib include/std/cstring \\\n+include/std/ctime include/std/cwchar include/std/cwctype include/std/deque \\\n+include/std/fstream include/std/functional include/std/iomanip \\\n+include/std/ios include/std/iosfwd include/std/iostream include/std/istream \\\n+include/std/iterator include/std/limits include/std/list include/std/locale \\\n+include/std/map include/std/memory include/std/numeric include/std/ostream \\\n+include/std/queue include/std/set include/std/sstream include/std/stack \\\n+include/std/stdexcept include/std/streambuf include/std/string \\\n+include/std/utility include/std/valarray include/std/vector\n \n # If the value of the INPUT tag contains directories, you can use the \n # FILE_PATTERNS tag to specify one or more wildcard pattern (like *.cpp \n # and *.h) to filter out the source-files in the directories. If left \n # blank all files are included. \n \n-FILE_PATTERNS          = *.cc *.h c++config\n+FILE_PATTERNS          = *.doxy \\\n+                         *.cc \\\n+                         *.tcc \\\n+                         *.h \\\n+                         c++config\n \n # The RECURSIVE tag can be used to turn specify whether or not subdirectories \n # should be searched for input files as well. Possible values are YES and NO. \n@@ -288,13 +343,16 @@ RECURSIVE              = YES\n # The EXCLUDE tag can be used to specify files and/or directories that should \n # excluded from the INPUT source files. This way you can easily exclude a \n # subdirectory from a directory tree whose root is specified with the INPUT tag. \n-EXCLUDE                = \n+\n+EXCLUDE                = include/c \\\n+                         include/c_shadow \\\n+                         docs/doxygen/stdheader.cc\n \n # If the value of the INPUT tag contains directories, you can use the \n # EXCLUDE_PATTERNS tag to specify one or more wildcard patterns to exclude \n # certain files from those directories. \n \n-EXCLUDE_PATTERNS       = \n+EXCLUDE_PATTERNS       = CVS\n \n # The EXAMPLE_PATH tag can be used to specify one or more files or \n # directories that contain example code fragments that are included (see \n@@ -328,7 +386,7 @@ INPUT_FILTER           =\n # INPUT_FILTER) will be used to filter the input files when producing source \n # files to browse. \n \n-#FILTER_SOURCE_FILES    = NO\n+FILTER_SOURCE_FILES    = NO\n \n #---------------------------------------------------------------------------\n # configuration options related to the alphabetical class index\n@@ -385,7 +443,7 @@ HTML_FOOTER            =\n # fine-tune the look of the HTML output. If the tag is left blank doxygen \n # will generate a default style sheet \n \n-HTML_STYLESHEET        = \n+HTML_STYLESHEET        = docs/doxygen/style.css\n \n # If the HTML_ALIGN_MEMBERS tag is set to YES, the members of classes, \n # files or namespaces will be aligned in HTML using tables. If set to \n@@ -400,30 +458,47 @@ HTML_ALIGN_MEMBERS     = YES\n \n GENERATE_HTMLHELP      = NO\n \n+# If the GENERATE_HTMLHELP tag is set to YES, the GENERATE_CHI flag \n+# controls if a separate .chi index file is generated (YES) or that \n+# it should be included in the master .chm file (NO).\n+\n+GENERATE_CHI           = NO\n+\n+# If the GENERATE_HTMLHELP tag is set to YES, the BINARY_TOC flag \n+# controls whether a binary table of contents is generated (YES) or a \n+# normal table of contents (NO) in the .chm file.\n+\n+BINARY_TOC             = NO\n+\n+# The TOC_EXPAND flag can be set YES to add extra items for group members \n+# to the contents of the Html help documentation and to the tree view. \n+\n+TOC_EXPAND             = NO\n+\n # The DISABLE_INDEX tag can be used to turn on/off the condensed index at \n # top of each HTML page. The value NO (the default) enables the index and \n # the value YES disables it. \n \n-DISABLE_INDEX          = NO\n+DISABLE_INDEX          = YES\n \n # This tag can be used to set the number of enum values (range [1..20]) \n # that doxygen will group on one line in the generated HTML documentation. \n \n-#ENUM_VALUES_PER_LINE   = 4\n+ENUM_VALUES_PER_LINE   = 4\n \n-# If the GENERATE_TREEVIEW tag is set to YES, a side pannel will be\n+# If the GENERATE_TREEVIEW tag is set to YES, a side panel will be\n # generated containing a tree-like index structure (just like the one that \n # is generated for HTML Help). For this to work a browser that supports \n # JavaScript and frames is required (for instance Netscape 4.0+ \n # or Internet explorer 4.0+). \n \n-GENERATE_TREEVIEW      = YES\n+GENERATE_TREEVIEW      = NO\n \n # If the treeview is enabled (see GENERATE_TREEVIEW) then this tag can be \n # used to set the initial width (in pixels) of the frame in which the tree \n # is shown. \n \n-#TREEVIEW_WIDTH         = 250\n+TREEVIEW_WIDTH         = 250\n \n #---------------------------------------------------------------------------\n # configuration options related to the LaTeX output\n@@ -528,7 +603,7 @@ RTF_STYLESHEET_FILE    =\n # If the GENERATE_MAN tag is set to YES (the default) Doxygen will \n # generate man pages \n \n-GENERATE_MAN           = NO\n+GENERATE_MAN           = YES\n \n # The MAN_OUTPUT tag is used to specify where the man pages will be put. \n # If a relative path is entered the value of OUTPUT_DIRECTORY will be \n@@ -603,7 +678,7 @@ EXPAND_AS_DEFINED      =\n \n # The TAGFILES tag can be used to specify one or more tagfiles. \n \n-TAGFILES               =\n+TAGFILES               = \n \n # When a file name is specified after GENERATE_TAGFILE, doxygen will create \n # a tag file that is based on the input files it reads. \n@@ -630,7 +705,7 @@ PERL_PATH              = /usr/bin/perl\n # toolkit from AT&T and Lucent Bell Labs. The other options in this section \n # have no effect if this option is set to NO (the default) \n \n-HAVE_DOT               = NO\n+HAVE_DOT               = YES\n \n # If the CLASS_GRAPH and HAVE_DOT tags are set to YES then doxygen \n # will generate a graph for each documented class showing the direct and \n@@ -689,7 +764,13 @@ MAX_DOT_GRAPH_HEIGHT   = 1024\n # generate a legend page explaining the meaning of the various boxes and \n # arrows in the dot generated graphs. \n \n-#GENERATE_LEGEND        = YES\n+GENERATE_LEGEND        = YES\n+\n+# If the DOT_CLEANUP tag is set to YES (the default) Doxygen will \n+# remove the intermedate dot files that are used to generate \n+# the various graphs. \n+\n+DOT_CLEANUP            = YES\n \n #---------------------------------------------------------------------------\n # Configuration::addtions related to the search engine   \n@@ -738,3 +819,5 @@ EXT_DOC_PATHS          =\n \n # End of file\n \n+\n+"}, {"sha": "78f238549748718923ef463c0771104d41d905a3", "filename": "libstdc++-v3/docs/doxygen/run_doxygen", "status": "modified", "additions": 15, "deletions": 1, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b00378457a5be638dfec92b0e12659179810f17b/libstdc%2B%2B-v3%2Fdocs%2Fdoxygen%2Frun_doxygen", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b00378457a5be638dfec92b0e12659179810f17b/libstdc%2B%2B-v3%2Fdocs%2Fdoxygen%2Frun_doxygen", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdocs%2Fdoxygen%2Frun_doxygen?ref=b00378457a5be638dfec92b0e12659179810f17b", "patch": "@@ -4,7 +4,7 @@\n #\n # Synopsis:  run_doxygen --mode=[user|maint]  v3srcdir  v3builddir\n #\n-# Originally hacked together by Phil Edwards <pme@sources.redhat.com>\n+# Originally hacked together by Phil Edwards <pme@gcc.gnu.org>\n \n \n # We can check now that the version of doxygen is >= this variable.\n@@ -162,6 +162,20 @@ for f in $problematic; do\n done\n rm stdheader\n \n+# Some of the pages for generated modules have text that confuses certain\n+# implementations of man(1), e.g., Linux's.  We need to have another top-level\n+# *roff tag to /stop/ the .SH NAME entry.\n+#problematic=`egrep --files-without-match '^\\.SH SYNOPSIS' [A-Z]*.3`\n+problematic='Containers.3 Sequences.3 Assoc_containers.3'\n+for f in $problematic; do\n+    sed '/^\\.SH NAME/{\n+n\n+a\\\n+.SH SYNOPSIS\n+    }' $f > TEMP\n+    mv TEMP $f\n+done\n+\n cp ${srcdir}/docs/doxygen/Intro.3 .\n \n }"}, {"sha": "6274cbd898e6a1c917cde9173739bbc04350d534", "filename": "libstdc++-v3/docs/doxygen/user.cfg.in", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b00378457a5be638dfec92b0e12659179810f17b/libstdc%2B%2B-v3%2Fdocs%2Fdoxygen%2Fuser.cfg.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b00378457a5be638dfec92b0e12659179810f17b/libstdc%2B%2B-v3%2Fdocs%2Fdoxygen%2Fuser.cfg.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdocs%2Fdoxygen%2Fuser.cfg.in?ref=b00378457a5be638dfec92b0e12659179810f17b", "patch": "@@ -50,8 +50,8 @@ OUTPUT_LANGUAGE        = English\n # Private class members and static file members will be hidden unless \n # the EXTRACT_PRIVATE and EXTRACT_STATIC tags are set to YES \n \n-#EXTRACT_ALL            = NO\n-EXTRACT_ALL            = YES\n+EXTRACT_ALL            = NO\n+#EXTRACT_ALL            = YES\n \n # If the EXTRACT_PRIVATE tag is set to YES all private members of a class \n # will be included in the documentation. \n@@ -125,7 +125,7 @@ INTERNAL_DOCS          = NO\n CLASS_DIAGRAMS         = YES\n \n # If the SOURCE_BROWSER tag is set to YES then a list of source files will \n-# be generated. Documented entities will be cross-referenced with these sources. \n+# be generated. Documented entities will be cross-referenced with these sources.\n \n SOURCE_BROWSER         = YES\n \n@@ -234,7 +234,8 @@ GENERATE_BUGLIST       = YES\n # will result in a user defined paragraph with heading \"Side Effects:\". \n # You can put \\n's in the value part of an alias to insert newlines. \n \n-ALIASES                = \n+ALIASES                = \"maint=\\if maint\" \\\n+                         \"endmaint=\\endif\"\n \n # The MAX_INITIALIZER_LINES tag determines the maximum number of lines \n # the initial value of a variable or define consist of for it to appear in "}, {"sha": "0128b2bb5347dd7fdd27f65bee0caf7ebb226e0f", "filename": "libstdc++-v3/docs/html/17_intro/TODO", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b00378457a5be638dfec92b0e12659179810f17b/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F17_intro%2FTODO", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b00378457a5be638dfec92b0e12659179810f17b/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F17_intro%2FTODO", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F17_intro%2FTODO?ref=b00378457a5be638dfec92b0e12659179810f17b", "patch": "@@ -152,8 +152,6 @@ sources, with macro-guards.\n \n - write filebuf for wide characters\n \n-- replace stl/bits/stl_config \n-\n - add feature-test macros for non-standard extensions\n \n - move major extensions into separate namespace (e.g. stl::)\n@@ -166,8 +164,6 @@ sources, with macro-guards.\n   facets, and construct them lazily so unused facets need not be constructed \n   when the locale is. \n \n-- get mknumeric_limits coope with 'exotic' OSes.\n-\n - <cmath>: provide missing names. \n \n - provide testsuites for numerics."}, {"sha": "f9f00a1ee77abc980fc4afcefaab07518ec2aca6", "filename": "libstdc++-v3/docs/html/faq/index.html", "status": "modified", "additions": 12, "deletions": 5, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b00378457a5be638dfec92b0e12659179810f17b/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Ffaq%2Findex.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b00378457a5be638dfec92b0e12659179810f17b/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Ffaq%2Findex.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Ffaq%2Findex.html?ref=b00378457a5be638dfec92b0e12659179810f17b", "patch": "@@ -99,7 +99,7 @@ <h1>Questions</h1>\n <h1><a name=\"1_0\">1.0 General Information</a></h1>\n <!-- I suspect these will mostly be links to/into existing documents. -->\n    <h2><a name=\"1_1\">1.1 What is libstdc++-v3?</a></h2>\n-      <p>The GNU Standard C++ Library v3, or libstdc++-2.9x, is an \n+      <p>The GNU Standard C++ Library v3 is an\n          ongoing project to implement the ISO 14882 Standard C++ library \n          as described in chapters 17 through 27 and annex D.  As the \n          library reaches stable plateaus, it is captured in a snapshot\n@@ -109,10 +109,15 @@ <h2><a name=\"1_1\">1.1 What is libstdc++-v3?</a></h2>\n          far the project has come, or just want the latest\n          bleeding-edge code, the up-to-date source is available over\n          anonymous CVS, and can even be browsed over the Web (see below). \n-      </p> \n+      </p>\n+      <p>The older libstdc++-v2 project is no longer maintained; the code\n+         has been completely replaced and rewritten.\n+         <a href=\"#4_4_interface\">If you are using V2</a>, then you need to\n+         report bugs to your system vendor, not to the V3 list.\n+      </p>\n       <p>A more formal description of the V3 goals can be found in the\n          official <a href=\"../17_intro/DESIGN\">design document</a>. \n-      </p> \n+      </p>\n \n <hr>\n    <h2><a name=\"1_2\">1.2 Why should I use libstdc++?</a></h2>\n@@ -582,8 +587,10 @@ <h2><a name=\"4_4\">4.4 Things in libstdc++ that look like bugs</a></h2>\n            do anyhow; see the last paragraph of the page describing\n          <a href=\"http://gcc.gnu.org/gnatswrite.html\">the GCC bug database</a>).\n         </p>\n-        <p>If the headers are in <CODE>${prefix}/include/g++-3</CODE>, then\n-           you are using the old libstdc++-v2 library, which is nonstandard\n+        <p>If the headers are in <code>${prefix}/include/g++-3</code>, or if\n+           the installed library's name looks like <code>libstdc++-2.10.a</code>\n+           or <code>libstdc++-libc6-2.10.so</code>,\n+           then you are using the old libstdc++-v2 library, which is nonstandard\n            and unmaintained.  Do not report problems with -v2 to the -v3\n            mailing list.\n         </p>"}, {"sha": "356d31cc678fe4f235accefd4e67c45749de6936", "filename": "libstdc++-v3/docs/html/faq/index.txt", "status": "modified", "additions": 111, "deletions": 104, "changes": 215, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b00378457a5be638dfec92b0e12659179810f17b/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Ffaq%2Findex.txt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b00378457a5be638dfec92b0e12659179810f17b/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Ffaq%2Findex.txt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Ffaq%2Findex.txt?ref=b00378457a5be638dfec92b0e12659179810f17b", "patch": "@@ -59,17 +59,21 @@\n \n 1.1 What is libstdc++-v3?\n \n-   The GNU Standard C++ Library v3, or libstdc++-2.9x, is an ongoing\n-   project to implement the ISO 14882 Standard C++ library as described\n-   in chapters 17 through 27 and annex D. As the library reaches stable\n-   plateaus, it is captured in a snapshot and released. The current\n-   release is [45]the eleventh snapshot. For those who want to see\n-   exactly how far the project has come, or just want the latest\n-   bleeding-edge code, the up-to-date source is available over anonymous\n-   CVS, and can even be browsed over the Web (see below).\n+   The GNU Standard C++ Library v3 is an ongoing project to implement the\n+   ISO 14882 Standard C++ library as described in chapters 17 through 27\n+   and annex D. As the library reaches stable plateaus, it is captured in\n+   a snapshot and released. The current release is [45]the eleventh\n+   snapshot. For those who want to see exactly how far the project has\n+   come, or just want the latest bleeding-edge code, the up-to-date\n+   source is available over anonymous CVS, and can even be browsed over\n+   the Web (see below).\n+\n+   The older libstdc++-v2 project is no longer maintained; the code has\n+   been completely replaced and rewritten. [46]If you are using V2, then\n+   you need to report bugs to your system vendor, not to the V3 list.\n \n    A more formal description of the V3 goals can be found in the official\n-   [46]design document.\n+   [47]design document.\n      _________________________________________________________________\n \n 1.2 Why should I use libstdc++?\n@@ -82,8 +86,8 @@\n \n    The GNU C/C++/FORTRAN/<pick-a-language> compiler (gcc, g++, etc) is\n    widely considered to be one of the leading compilers in the world. Its\n-   development has recently been taken over by the [47]GCC team. All of\n-   the rapid development and near-legendary [48]portability that are the\n+   development has recently been taken over by the [48]GCC team. All of\n+   the rapid development and near-legendary [49]portability that are the\n    hallmarks of an open-source project are being applied to libstdc++.\n \n    That means that all of the Standard classes and functions (such as\n@@ -101,16 +105,16 @@\n \n    Development and discussion is held on the libstdc++ mailing list.\n    Subscribing to the list, or searching the list archives, is open to\n-   everyone. You can read instructions for doing so on the [49]homepage.\n+   everyone. You can read instructions for doing so on the [50]homepage.\n    If you have questions, ideas, code, or are just curious, sign up!\n      _________________________________________________________________\n \n 1.4 How do I get libstdc++?\n \n-   The eleventh (and latest) snapshot of libstdc++-v3 is [50]available\n+   The eleventh (and latest) snapshot of libstdc++-v3 is [51]available\n    via ftp. The filename is libstdc++-2.92.tar.gz.\n \n-   The [51]homepage has instructions for retrieving the latest CVS\n+   The [52]homepage has instructions for retrieving the latest CVS\n    sources, and for browsing the CVS sources over the web.\n \n    The subset commonly known as the Standard Template Library (chapters\n@@ -126,7 +130,7 @@\n \n 1.6 How do I contribute to the effort?\n \n-   Here is [52]a page devoted to this topic. Subscribing to the mailing\n+   Here is [53]a page devoted to this topic. Subscribing to the mailing\n    list (see above, or the homepage) is a very good idea if you have\n    something to contribute, or if you have spare time and want to help.\n    Contributions don't have to be in the form of source code; anybody who\n@@ -161,11 +165,11 @@\n    extracted into an updated utilities library, but nobody has stated\n    such a project yet.\n \n-   (The [53]Boost site houses free C++ libraries that do varying things,\n+   (The [54]Boost site houses free C++ libraries that do varying things,\n    and happened to be started by members of the Standards Committee.\n    Certain \"useful stuff\" classes will probably migrate there.)\n \n-   For the bold and/or desperate, the [54]GCC FAQ describes where to find\n+   For the bold and/or desperate, the [55]GCC FAQ describes where to find\n    the last libg++ source.\n      _________________________________________________________________\n \n@@ -175,16 +179,16 @@\n    remains unanswered, then just ask the mailing list. At present, you do\n    not need to be subscribed to the list to send a message to it. More\n    information is available on the homepage (including how to browse the\n-   list archives); to send to the list, use [55]libstdc++@gcc.gnu.org.\n+   list archives); to send to the list, use [56]libstdc++@gcc.gnu.org.\n \n    If you have a question that you think should be included here, or if\n-   you have a question about a question/answer here, contact [56]Phil\n-   Edwards or [57]Gabriel Dos Reis.\n+   you have a question about a question/answer here, contact [57]Phil\n+   Edwards or [58]Gabriel Dos Reis.\n      _________________________________________________________________\n \n 1.9 What are the license terms for libstdc++-v3?\n \n-   See [58]our license description for these and related questions.\n+   See [59]our license description for these and related questions.\n      _________________________________________________________________\n \n                                2.0 Installation\n@@ -201,13 +205,13 @@\n      * The GNU Autotools are needed if you are messing with the configury\n        or makefiles.\n \n-   The file [59]documentation.html provides a good overview of the steps\n+   The file [60]documentation.html provides a good overview of the steps\n    necessary to build, install, and use the library. Instructions for\n    configuring the library with new flags such as --enable-threads are\n    there also, as well as patches and instructions for working with GCC\n    2.95.\n \n-   The top-level install.html and [60]RELEASE-NOTES files contain the\n+   The top-level install.html and [61]RELEASE-NOTES files contain the\n    exact build and installation instructions. You may wish to browse\n    those files over CVSweb ahead of time to get a feel for what's\n    required. RELEASE-NOTES is located in the \".../docs/17_intro/\"\n@@ -224,8 +228,8 @@\n \n    The Concurrent Versions System is one of several revision control\n    packages. It was selected for GNU projects because it's free (speech),\n-   free (beer), and very high quality. The [61]CVS entry in the GNU\n-   software catalogue has a better description as well as a [62]link to\n+   free (beer), and very high quality. The [62]CVS entry in the GNU\n+   software catalogue has a better description as well as a [63]link to\n    the makers of CVS.\n \n    The \"anonymous client checkout\" feature of CVS is similar to anonymous\n@@ -276,7 +280,7 @@\n    people don't like it, so here are two pseudo-solutions:\n \n    If the only functions from libstdc++.a which you need are language\n-   support functions (those listed in [63]clause 18 of the standard,\n+   support functions (those listed in [64]clause 18 of the standard,\n    e.g., new and delete), then try linking against libsupc++.a (usually\n    specifying -lsupc++ when calling g++ for the final link step will do\n    it). This library contains only those support routines, one per object\n@@ -314,8 +318,8 @@\n \n    Since the goal of ISO Standardization is for all C++ implementations\n    to be able to share code, the final libstdc++ should, in theory, be\n-   usable under any ISO-compliant compiler. It will still be targeted\n-   and optimized for GCC/g++, however.\n+   usable under any ISO-compliant compiler. It will still be targeted and\n+   optimized for GCC/g++, however.\n      _________________________________________________________________\n \n 3.2 [removed]\n@@ -332,7 +336,7 @@\n    install GNU as and arrange for the GCC build to use it (or merge the\n    sources and build it during the bootstrap).\n \n-   Anyone who [64]knows the DEC assembler well enough to provide the\n+   Anyone who [65]knows the DEC assembler well enough to provide the\n    equivalent of these two pseudos would win praise and accolades from\n    many.\n      _________________________________________________________________\n@@ -360,7 +364,7 @@\n    include/Makefile, resulting in files like gthr.h and gthr-single.h not\n    being found.\n \n-   Please read [65]the configuration instructions for GCC, specifically\n+   Please read [66]the configuration instructions for GCC, specifically\n    the part about configuring in a separate build directory, and how\n    strongly recommended it is. Building in the source directory is\n    fragile, is rarely tested, and tends to break, as in this case. This\n@@ -412,17 +416,17 @@ New:\n \n 4.3 Bugs in the C++ language/lib specification\n \n-   Yes, unfortunately, there are some. In a [66]message to the list,\n+   Yes, unfortunately, there are some. In a [67]message to the list,\n    Nathan Myers announced that he has started a list of problems in the\n    ISO C++ Standard itself, especially with regard to the chapters that\n-   concern the library. The list itself is [67]posted on his website.\n+   concern the library. The list itself is [68]posted on his website.\n    Developers who are having problems interpreting the Standard may wish\n    to consult his notes.\n \n    For those people who are not part of the ISO Library Group (i.e.,\n    nearly all of us needing to read this page in the first place :-), a\n-   public list of the library defects is occasionally published [68]here.\n-   Some of these have resulted in [69]code changes.\n+   public list of the library defects is occasionally published [69]here.\n+   Some of these have resulted in [70]code changes.\n      _________________________________________________________________\n \n 4.4 Things in libstdc++ that look like bugs\n@@ -455,7 +459,7 @@ New:\n    state on the previous file. The reason is that the state flags are not\n    cleared on a successful call to open(). The standard unfortunately did\n    not specify behavior in this case, and to everybody's great sorrow,\n-   the [70]proposed LWG resolution (see DR #22) is to leave the flags\n+   the [71]proposed LWG resolution (see DR #22) is to leave the flags\n    unchanged. You must insert a call to fs.clear() between the calls to\n    close() and open(), and then everything will work like we all expect\n    it to work.\n@@ -465,22 +469,24 @@ New:\n    same namespace as other comparison functions (e.g., 'using' them and\n    the <iterator> header), then you will suddenly be faced with huge\n    numbers of ambiguity errors. This was discussed on the -v3 list;\n-   Nathan Myers [71]sums things up here.\n+   Nathan Myers [72]sums things up here.\n \n   The g++-3 headers are not ours\n \n    If you have found an extremely broken header file which is causing\n    problems for you, look carefully before submitting a \"high\" priority\n    bug report (which you probably shouldn't do anyhow; see the last\n-   paragraph of the page describing [72]the GCC bug database).\n+   paragraph of the page describing [73]the GCC bug database).\n \n-   If the headers are in ${prefix}/include/g++-3, then you are using the\n-   old libstdc++-v2 library, which is nonstandard and unmaintained. Do\n-   not report problems with -v2 to the -v3 mailing list.\n+   If the headers are in ${prefix}/include/g++-3, or if the installed\n+   library's name looks like libstdc++-2.10.a or libstdc++-libc6-2.10.so,\n+   then you are using the old libstdc++-v2 library, which is nonstandard\n+   and unmaintained. Do not report problems with -v2 to the -v3 mailing\n+   list.\n \n    Currently our header files are installed in ${prefix}/include/g++-v3\n    (see the 'v'?). This may change with the next release of GCC, as it\n-   may be too confusing, but [73]the question has not yet been decided.\n+   may be too confusing, but [74]the question has not yet been decided.\n \n    glibc If you're on a GNU/Linux system and have just upgraded to glibc\n    2.2, but are still using gcc 2.95.2, then you should have read the\n@@ -493,7 +499,7 @@ type has changed in glibc 2.2.  The patch is at\n http://clisp.cons.org/~haible/gccinclude-glibc-2.2-compat.diff\n \n \n-   Note that 2.95.x shipped with the [74]old v2 library which is no\n+   Note that 2.95.x shipped with the [75]old v2 library which is no\n    longer maintained. Also note that gcc 2.95.3 fixes this problem, but\n    requires a separate patch for libstdc++-v3.\n \n@@ -506,23 +512,23 @@ http://clisp.cons.org/~haible/gccinclude-glibc-2.2-compat.diff\n    visibility, or you just plain forgot, etc).\n \n    More information, including how to optionally enable/disable the\n-   checks, is available [75]here.\n+   checks, is available [76]here.\n      _________________________________________________________________\n \n 4.5 Aw, that's easy to fix!\n \n    If you have found a bug in the library and you think you have a\n    working fix, then send it in! The main GCC site has a page on\n-   [76]submitting patches that covers the procedure, but for libstdc++\n+   [77]submitting patches that covers the procedure, but for libstdc++\n    you should also send the patch to our mailing list in addition to the\n-   GCC patches mailing list. The libstdc++ [77]contributors' page also\n+   GCC patches mailing list. The libstdc++ [78]contributors' page also\n    talks about how to submit patches.\n \n    In addition to the description, the patch, and the ChangeLog entry, it\n    is a Good Thing if you can additionally create a small test program to\n    test for the presence of the bug that your patch fixes. Bugs have a\n    way of being reintroduced; if an old bug creeps back in, it will be\n-   caught immediately by the [78]testsuite -- but only if such a test\n+   caught immediately by the [79]testsuite -- but only if such a test\n    exists.\n      _________________________________________________________________\n \n@@ -556,7 +562,7 @@ http://clisp.cons.org/~haible/gccinclude-glibc-2.2-compat.diff\n        libstdc++. Some of that is already happening, see 4.2. Some of\n        those changes are being predicted by the library maintainers, and\n        we add code to the library based on what the current proposed\n-       resolution specifies. Those additions are listed in [79]the\n+       resolution specifies. Those additions are listed in [80]the\n        extensions page.\n     2. Performance tuning. Lots of performance tuning. This too is\n        already underway for post-3.0 releases, starting with memory\n@@ -572,13 +578,13 @@ http://clisp.cons.org/~haible/gccinclude-glibc-2.2-compat.diff\n        type from C99.) Bugfixes and rewrites (to improve or fix thread\n        safety, for instance) will of course be a continuing task.\n \n-   [80]This question about the next libstdc++ prompted some brief but\n-   interesting [81]speculation.\n+   [81]This question about the next libstdc++ prompted some brief but\n+   interesting [82]speculation.\n      _________________________________________________________________\n \n 5.3 What about the STL from SGI?\n \n-   The [82]STL from SGI, version 3.3, was the most recent merge of the\n+   The [83]STL from SGI, version 3.3, was the most recent merge of the\n    STL codebase. The code in libstdc++ contains many fixes and changes,\n    and it is very likely that the SGI code is no longer under active\n    development. We expect that no future merges will take place.\n@@ -599,7 +605,7 @@ http://clisp.cons.org/~haible/gccinclude-glibc-2.2-compat.diff\n        #include <ext/hash_map>\n \n \n-   Extensions to the library have [83]their own page.\n+   Extensions to the library have [84]their own page.\n      _________________________________________________________________\n \n 5.5 [removed]\n@@ -648,8 +654,8 @@ a\n    otherwise documented as safe, do not assume that two threads may\n    access a shared standard library object at the same time.\n \n-   See chapters [84]17 (library introduction), [85]23 (containers), and\n-   [86]27 (I/O) for more information.\n+   See chapters [85]17 (library introduction), [86]23 (containers), and\n+   [87]27 (I/O) for more information.\n      _________________________________________________________________\n \n 5.7 How do I get a copy of the ISO C++ Standard?\n@@ -660,11 +666,11 @@ a\n    their two-meeting commitment for voting rights, may get a copy of the\n    standard from their respective national standards organization. In the\n    USA, this national standards organization is ANSI and their website is\n-   right [87]here. (And if you've already registered with them, clicking\n-   this link will take you to directly to the place where you can [88]buy\n+   right [88]here. (And if you've already registered with them, clicking\n+   this link will take you to directly to the place where you can [89]buy\n    the standard on-line.\n \n-   Who is your country's member body? Visit the [89]ISO homepage and find\n+   Who is your country's member body? Visit the [90]ISO homepage and find\n    out!\n      _________________________________________________________________\n \n@@ -715,8 +721,8 @@ a\n    encompasses the standard library.\n      _________________________________________________________________\n \n-   See [90]license.html for copying conditions. Comments and suggestions\n-   are welcome, and may be sent to [91]the libstdc++ mailing list. \n+   See [91]license.html for copying conditions. Comments and suggestions\n+   are welcome, and may be sent to [92]the libstdc++ mailing list. \n \n References\n \n@@ -765,49 +771,50 @@ References\n   43. ../faq/index.html#5_7\n   44. ../faq/index.html#5_8\n   45. http://gcc.gnu.org/libstdc++/download.html\n-  46. ../17_intro/DESIGN\n-  47. http://gcc.gnu.org/\n-  48. http://gcc.gnu.org/gcc-2.95/buildstat.html\n-  49. http://gcc.gnu.org/libstdc++/\n-  50. http://gcc.gnu.org/libstdc++/download.html\n-  51. http://gcc.gnu.org/libstdc++/\n-  52. ../17_intro/contribute.html\n-  53. http://www.boost.org/\n-  54. http://gcc.gnu.org/fom_serv/cache/33.html\n-  55. mailto:libstdc++@gcc.gnu.org\n-  56. mailto:pme@gcc.gnu.org\n-  57. mailto:gdr@gcc.gnu.org\n-  58. ../17_intro/license.html\n-  59. ../documentation.html\n-  60. ../17_intro/RELEASE-NOTES\n-  61. http://www.gnu.org/software/cvs/cvs.html\n-  62. http://www.cvshome.org/\n-  63. ../18_support/howto.html\n-  64. http://gcc.gnu.org/ml/libstdc++/2000-12/msg00279.html\n-  65. http://gcc.gnu.org/install/configure.html\n-  66. http://gcc.gnu.org/ml/libstdc++/1998/msg00006.html\n-  67. http://www.cantrip.org/draft-bugs.txt\n-  68. http://anubis.dkuug.dk/jtc1/sc22/wg21/\n-  69. ../faq/index.html#5_2\n-  70. ../ext/howto.html#5\n-  71. http://gcc.gnu.org/ml/libstdc++/2001-01/msg00247.html\n-  72. http://gcc.gnu.org/gnatswrite.html\n-  73. http://gcc.gnu.org/ml/gcc/2000-10/msg00732.html\n-  74. ../faq/index.html#4_4_interface\n-  75. ../19_diagnostics/howto.html#3\n-  76. http://gcc.gnu.org/contribute.html\n-  77. ../17_intro/contribute.html\n-  78. ../faq/index.html#2_4\n-  79. ../ext/howto.html#5\n-  80. http://gcc.gnu.org/ml/libstdc++/1999/msg00080.html\n-  81. http://gcc.gnu.org/ml/libstdc++/1999/msg00084.html\n-  82. http://www.sgi.com/Technology/STL/\n-  83. ../ext/howto.html\n-  84. ../17_intro/howto.html#3\n-  85. ../23_containers/howto.html#3\n-  86. ../27_io/howto.html#9\n-  87. http://www.ansi.org/\n-  88. http://webstore.ansi.org/ansidocstore/product.asp?sku=ISO%2FIEC+14882%2D1998\n-  89. http://www.iso.ch/\n-  90. ../17_intro/license.html\n-  91. mailto:libstdc++@gcc.gnu.org\n+  46. ../faq/index.html#4_4_interface\n+  47. ../17_intro/DESIGN\n+  48. http://gcc.gnu.org/\n+  49. http://gcc.gnu.org/gcc-2.95/buildstat.html\n+  50. http://gcc.gnu.org/libstdc++/\n+  51. http://gcc.gnu.org/libstdc++/download.html\n+  52. http://gcc.gnu.org/libstdc++/\n+  53. ../17_intro/contribute.html\n+  54. http://www.boost.org/\n+  55. http://gcc.gnu.org/fom_serv/cache/33.html\n+  56. mailto:libstdc++@gcc.gnu.org\n+  57. mailto:pme@gcc.gnu.org\n+  58. mailto:gdr@gcc.gnu.org\n+  59. ../17_intro/license.html\n+  60. ../documentation.html\n+  61. ../17_intro/RELEASE-NOTES\n+  62. http://www.gnu.org/software/cvs/cvs.html\n+  63. http://www.cvshome.org/\n+  64. ../18_support/howto.html\n+  65. http://gcc.gnu.org/ml/libstdc++/2000-12/msg00279.html\n+  66. http://gcc.gnu.org/install/configure.html\n+  67. http://gcc.gnu.org/ml/libstdc++/1998/msg00006.html\n+  68. http://www.cantrip.org/draft-bugs.txt\n+  69. http://anubis.dkuug.dk/jtc1/sc22/wg21/\n+  70. ../faq/index.html#5_2\n+  71. ../ext/howto.html#5\n+  72. http://gcc.gnu.org/ml/libstdc++/2001-01/msg00247.html\n+  73. http://gcc.gnu.org/gnatswrite.html\n+  74. http://gcc.gnu.org/ml/gcc/2000-10/msg00732.html\n+  75. ../faq/index.html#4_4_interface\n+  76. ../19_diagnostics/howto.html#3\n+  77. http://gcc.gnu.org/contribute.html\n+  78. ../17_intro/contribute.html\n+  79. ../faq/index.html#2_4\n+  80. ../ext/howto.html#5\n+  81. http://gcc.gnu.org/ml/libstdc++/1999/msg00080.html\n+  82. http://gcc.gnu.org/ml/libstdc++/1999/msg00084.html\n+  83. http://www.sgi.com/Technology/STL/\n+  84. ../ext/howto.html\n+  85. ../17_intro/howto.html#3\n+  86. ../23_containers/howto.html#3\n+  87. ../27_io/howto.html#9\n+  88. http://www.ansi.org/\n+  89. http://webstore.ansi.org/ansidocstore/product.asp?sku=ISO%2FIEC+14882%2D1998\n+  90. http://www.iso.ch/\n+  91. ../17_intro/license.html\n+  92. mailto:libstdc++@gcc.gnu.org"}, {"sha": "d4086410a8ef69c940c90ff99bac63557e4ea97c", "filename": "libstdc++-v3/include/backward/alloc.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b00378457a5be638dfec92b0e12659179810f17b/libstdc%2B%2B-v3%2Finclude%2Fbackward%2Falloc.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b00378457a5be638dfec92b0e12659179810f17b/libstdc%2B%2B-v3%2Finclude%2Fbackward%2Falloc.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbackward%2Falloc.h?ref=b00378457a5be638dfec92b0e12659179810f17b", "patch": "@@ -48,8 +48,8 @@\n #include <bits/stl_alloc.h>\n \n using std::__malloc_alloc_template; \n-using std::simple_alloc; \n-using std::debug_alloc; \n+using std::__simple_alloc; \n+using std::__debug_alloc; \n using std::alloc; \n using std::single_client_alloc; \n using std::allocator;"}, {"sha": "f095c3c22ba63ed5d24ddcdfc0ad02b94720d884", "filename": "libstdc++-v3/include/bits/stl_alloc.h", "status": "modified", "additions": 217, "deletions": 164, "changes": 381, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b00378457a5be638dfec92b0e12659179810f17b/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_alloc.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b00378457a5be638dfec92b0e12659179810f17b/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_alloc.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_alloc.h?ref=b00378457a5be638dfec92b0e12659179810f17b", "patch": "@@ -48,22 +48,34 @@\n #ifndef __SGI_STL_INTERNAL_ALLOC_H\n #define __SGI_STL_INTERNAL_ALLOC_H\n \n-// This implements some standard node allocators.  These are\n-// NOT the same as the allocators in the C++ draft standard or in\n-// in the original STL.  They do not encapsulate different pointer\n-// types; indeed we assume that there is only one pointer type.\n-// The allocation primitives are intended to allocate individual objects,\n-// not larger arenas as with the original STL allocators.\n+// This header implements some node allocators.  These are NOT the same as\n+// allocators in the C++ standard, nor in the original HP STL.  They do not\n+// encapsulate different pointer types; we assume that there is only one\n+// pointer type.  The C++ standard allocators are intended to allocate\n+// individual objects, not pools or arenas.\n+//\n+// In this file allocators are of two different styles:  \"standard\" and\n+// \"SGI\" (quotes included).  \"Standard\" allocators conform to 20.4.  \"SGI\"\n+// allocators differ in AT LEAST the following ways (add to this list as you\n+// discover them):\n+//\n+//  - \"Standard\" allocate() takes two parameters (n_count,hint=0) but \"SGI\"\n+//    allocate() takes one paramter (n_size).\n+//  - Likewise, \"standard\" deallocate()'s n is a count, but in \"SGI\" is a\n+//    byte size.\n+//  - max_size(), construct(), and destroy() are missing in \"SGI\" allocators.\n+//  - reallocate(p,oldsz,newsz) is added in \"SGI\", and behaves as\n+//    if p=realloc(p,newsz).\n+\n \n #include <bits/functexcept.h>   // for __throw_bad_alloc\n #include <bits/std_cstddef.h>\n #include <bits/std_cstdlib.h>\n #include <bits/std_cstring.h>\n #include <bits/std_cassert.h>\n-#ifndef __RESTRICT\n-#  define __RESTRICT\n-#endif\n \n+// To see the effects of this block of macro wrangling, jump to\n+// \"Default node allocator\" below.\n #ifdef __STL_THREADS\n # include <bits/stl_threads.h>\n # define __NODE_ALLOCATOR_THREADS true\n@@ -78,15 +90,15 @@\n \t// The above is copied from malloc.h.  Including <malloc.h>\n \t// would be cleaner but fails with certain levels of standard\n \t// conformance.\n-#   define __NODE_ALLOCATOR_LOCK if (threads && __us_rsthread_malloc) \\\n+#   define __NODE_ALLOCATOR_LOCK if (__threads && __us_rsthread_malloc) \\\n                 { _S_node_allocator_lock._M_acquire_lock(); }\n-#   define __NODE_ALLOCATOR_UNLOCK if (threads && __us_rsthread_malloc) \\\n+#   define __NODE_ALLOCATOR_UNLOCK if (__threads && __us_rsthread_malloc) \\\n                 { _S_node_allocator_lock._M_release_lock(); }\n # else /* !__STL_SGI_THREADS */\n #   define __NODE_ALLOCATOR_LOCK \\\n-        { if (threads) _S_node_allocator_lock._M_acquire_lock(); }\n+        { if (__threads) _S_node_allocator_lock._M_acquire_lock(); }\n #   define __NODE_ALLOCATOR_UNLOCK \\\n-        { if (threads) _S_node_allocator_lock._M_release_lock(); }\n+        { if (__threads) _S_node_allocator_lock._M_release_lock(); }\n # endif\n #else\n //  Thread-unsafe\n@@ -97,7 +109,13 @@\n \n namespace std\n {\n-  // A new-based allocator, as required by the standard.\n+  /**\n+   *  @maint\n+   *  A new-based allocator, as required by the standard.  Allocation and\n+   *  deallocation forward to global new and delete.  \"SGI\" style, minus\n+   *  reallocate().\n+   *  @endmaint\n+  */\n   class __new_alloc \n   {\n   public:\n@@ -110,8 +128,16 @@ namespace std\n     { ::operator delete(__p); }\n   };\n   \n-  // Malloc-based allocator.  Typically slower than default alloc below.\n-  // Typically thread-safe and more storage efficient.\n+\n+  /**\n+   *  @maint\n+   *  A malloc-based allocator.  Typically slower than the\n+   *  __default_alloc_template (below).  Typically thread-safe and more\n+   *  storage efficient.  The template argument is unused and is only present\n+   *  to permit multiple instantiations (but see __default_alloc_template\n+   *  for caveats).  \"SGI\" style, plus __set_malloc_handler for OOM conditions.\n+   *  @endmaint\n+  */\n   template <int __inst>\n     class __malloc_alloc_template \n     {\n@@ -191,127 +217,141 @@ namespace std\n \t}\n     }\n \n-  // Determines the underlying allocator choice.\n-# ifdef __USE_MALLOC\n-  typedef __malloc_alloc_template<0> __mem_interface;\n+\n+// Determines the underlying allocator choice for the node allocator.\n+#ifdef __USE_MALLOC\n+  typedef __malloc_alloc_template<0>  __mem_interface;\n #else\n-  typedef __new_alloc __mem_interface;\n+  typedef __new_alloc                 __mem_interface;\n #endif\n \n-template<class _Tp, class _Alloc>\n-class simple_alloc {\n \n-public:\n+  /**\n+   *  This is used primarily (only?) in _Alloc_traits and other places to\n+   *  help provide the _Alloc_type typedef.\n+   *\n+   *  This is neither \"standard\"-conforming nor \"SGI\".  The _Alloc parameter\n+   *  must be \"SGI\" style.\n+  */\n+  template<class _Tp, class _Alloc>\n+  class __simple_alloc\n+  {\n+  public:\n     static _Tp* allocate(size_t __n)\n-      { return 0 == __n ? 0 : (_Tp*) _Alloc::allocate(__n * sizeof (_Tp)); }\n-    static _Tp* allocate(void)\n-      { return (_Tp*) _Alloc::allocate(sizeof (_Tp)); }\n-    static void deallocate(_Tp* __p, size_t __n)\n-      { if (0 != __n) _Alloc::deallocate(__p, __n * sizeof (_Tp)); }\n-    static void deallocate(_Tp* __p)\n-      { _Alloc::deallocate(__p, sizeof (_Tp)); }\n-};\n+    { return 0 == __n ? 0 : (_Tp*) _Alloc::allocate(__n * sizeof (_Tp)); }\n \n-// Allocator adaptor to check size arguments for debugging.\n-// Reports errors using assert.  Checking can be disabled with\n-// NDEBUG, but it's far better to just use the underlying allocator\n-// instead when no checking is desired.\n-// There is some evidence that this can confuse Purify.\n-template <class _Alloc>\n-class debug_alloc {\n-\n-private:\n+    static _Tp* allocate()\n+    { return (_Tp*) _Alloc::allocate(sizeof (_Tp)); }\n \n-  enum {_S_extra = 8};  // Size of space used to store size.  Note\n-                        // that this must be large enough to preserve\n-                        // alignment.\n-\n-public:\n+    static void deallocate(_Tp* __p, size_t __n)\n+    { if (0 != __n) _Alloc::deallocate(__p, __n * sizeof (_Tp)); }\n \n-  static void* allocate(size_t __n)\n-  {\n-    char* __result = (char*)_Alloc::allocate(__n + (int) _S_extra);\n-    *(size_t*)__result = __n;\n-    return __result + (int) _S_extra;\n-  }\n+    static void deallocate(_Tp* __p)\n+    { _Alloc::deallocate(__p, sizeof (_Tp)); }\n+  };\n \n-  static void deallocate(void* __p, size_t __n)\n-  {\n-    char* __real_p = (char*)__p - (int) _S_extra;\n-    assert(*(size_t*)__real_p == __n);\n-    _Alloc::deallocate(__real_p, __n + (int) _S_extra);\n-  }\n \n-  static void* reallocate(void* __p, size_t __old_sz, size_t __new_sz)\n+  /**\n+   *  An adaptor for an underlying allocator (_Alloc) to check the size\n+   *  arguments for debugging.  Errors are reported using assert; these\n+   *  checks can be disabled via NDEBUG, but the space penalty is still\n+   *  paid, therefore it is far better to just use the underlying allocator\n+   *  by itelf when no checking is desired.\n+   *\n+   *  \"There is some evidence that this can confuse Purify.\" - SGI comment\n+   *\n+   *  This adaptor is \"SGI\" style.  The _Alloc parameter must also be \"SGI\".\n+  */\n+  template <class _Alloc>\n+  class __debug_alloc\n   {\n-    char* __real_p = (char*)__p - (int) _S_extra;\n-    assert(*(size_t*)__real_p == __old_sz);\n-    char* __result = (char*)\n-      _Alloc::reallocate(__real_p, __old_sz + (int) _S_extra,\n-                                   __new_sz + (int) _S_extra);\n-    *(size_t*)__result = __new_sz;\n-    return __result + (int) _S_extra;\n-  }\n-\n-};\n+  private:\n+    enum {_S_extra = 8};  // Size of space used to store size.  Note that this\n+                          // must be large enough to preserve alignment.\n+  \n+  public:\n+  \n+    static void* allocate(size_t __n)\n+    {\n+      char* __result = (char*)_Alloc::allocate(__n + (int) _S_extra);\n+      *(size_t*)__result = __n;\n+      return __result + (int) _S_extra;\n+    }\n+  \n+    static void deallocate(void* __p, size_t __n)\n+    {\n+      char* __real_p = (char*)__p - (int) _S_extra;\n+      assert(*(size_t*)__real_p == __n);\n+      _Alloc::deallocate(__real_p, __n + (int) _S_extra);\n+    }\n+  \n+    static void* reallocate(void* __p, size_t __old_sz, size_t __new_sz)\n+    {\n+      char* __real_p = (char*)__p - (int) _S_extra;\n+      assert(*(size_t*)__real_p == __old_sz);\n+      char* __result = (char*)\n+        _Alloc::reallocate(__real_p, __old_sz + (int) _S_extra,\n+                                     __new_sz + (int) _S_extra);\n+      *(size_t*)__result = __new_sz;\n+      return __result + (int) _S_extra;\n+    }\n+  };\n \n \n-# ifdef __USE_MALLOC\n+#ifdef __USE_MALLOC\n \n typedef __mem_interface alloc;\n typedef __mem_interface single_client_alloc;\n \n-# else\n-\n-\n-// Default node allocator.\n-// With a reasonable compiler, this should be roughly as fast as the\n-// original STL class-specific allocators, but with less fragmentation.\n-// Default_alloc_template parameters are experimental and MAY\n-// DISAPPEAR in the future.  Clients should just use alloc for now.\n-//\n-// Important implementation properties:\n-// 1. If the client request an object of size > _MAX_BYTES, the resulting\n-//    object will be obtained directly from malloc.\n-// 2. In all other cases, we allocate an object of size exactly\n-//    _S_round_up(requested_size).  Thus the client has enough size\n-//    information that we can return the object to the proper free list\n-//    without permanently losing part of the object.\n-//\n+#else\n \n-// The first template parameter specifies whether more than one thread\n-// may use this allocator.  It is safe to allocate an object from\n-// one instance of a default_alloc and deallocate it with another\n-// one.  This effectively transfers its ownership to the second one.\n-// This may have undesirable effects on reference locality.\n-// The second parameter is unreferenced and serves only to allow the\n-// creation of multiple default_alloc instances.\n-// Node that containers built on different allocator instances have\n-// different types, limiting the utility of this approach.\n \n-template <bool threads, int inst>\n-class __default_alloc_template {\n+/**\n+ *  @maint\n+ *  Default node allocator.\n+ * \n+ *  Important implementation properties:\n+ *  1. If the clients request an object of size > _MAX_BYTES, the resulting\n+ *     object will be obtained directly from malloc.\n+ *  2. In all other cases, we allocate an object of size exactly\n+ *     _S_round_up(requested_size).  Thus the client has enough size\n+ *     information that we can return the object to the proper free list\n+ *     without permanently losing part of the object.\n+ * \n+ *  The first template parameter specifies whether more than one thread may\n+ *  use this allocator.  It is safe to allocate an object from one instance\n+ *  of a default_alloc and deallocate it with another one.  This effectively\n+ *  transfers its ownership to the second one.  This may have undesirable\n+ *  effects on reference locality.\n+ *\n+ *  The second parameter is unused and serves only to allow the creation of\n+ *  multiple default_alloc instances.  Note that containers built on different\n+ *  allocator instances have different types, limiting the utility of this\n+ *  approach.  If you do not wish to share the free lists with the main\n+ *  default_alloc instance, instantiate this with a non-zero __inst.\n+ *  @endmaint\n+*/\n+template <bool __threads, int __inst>\n+class __default_alloc_template\n+{\n \n private:\n-  // Really we should use static const int x = N\n-  // instead of enum { x = N }, but few compilers accept the former.\n   enum {_ALIGN = 8};\n   enum {_MAX_BYTES = 128};\n   enum {_NFREELISTS = 16}; // _MAX_BYTES/_ALIGN\n+\n   static size_t\n   _S_round_up(size_t __bytes) \n     { return (((__bytes) + (size_t) _ALIGN-1) & ~((size_t) _ALIGN - 1)); }\n \n   union _Obj {\n-        union _Obj* _M_free_list_link;\n-        char _M_client_data[1];    /* The client sees this.        */\n+    union _Obj* _M_free_list_link;\n+    char        _M_client_data[1];    // The client sees this.\n   };\n \n   static _Obj* volatile _S_free_list[]; \n-        // Specifying a size results in duplicate def for 4.1\n-  static  size_t _S_freelist_index(size_t __bytes) {\n-        return (((__bytes) + (size_t)_ALIGN-1)/(size_t)_ALIGN - 1);\n-  }\n+  static size_t _S_freelist_index(size_t __bytes)\n+    { return (((__bytes) + (size_t)_ALIGN-1)/(size_t)_ALIGN - 1); }\n \n   // Returns an object of size __n, and optionally adds to size __n free list.\n   static void* _S_refill(size_t __n);\n@@ -324,24 +364,24 @@ class __default_alloc_template {\n   static char* _S_end_free;\n   static size_t _S_heap_size;\n \n-# ifdef __STL_THREADS\n+#ifdef __STL_THREADS\n     static _STL_mutex_lock _S_node_allocator_lock;\n-# endif\n+#endif\n \n-    // It would be nice to use _STL_auto_lock here.  But we\n-    // don't need the NULL check.  And we do need a test whether\n-    // threads have actually been started.\n-    class _Lock;\n-    friend class _Lock;\n-    class _Lock {\n-        public:\n-            _Lock() { __NODE_ALLOCATOR_LOCK; }\n-            ~_Lock() { __NODE_ALLOCATOR_UNLOCK; }\n-    };\n+  // It would be nice to use _STL_auto_lock here.  But we\n+  // don't need the NULL check.  And we do need a test whether\n+  // threads have actually been started.\n+  class _Lock;\n+  friend class _Lock;\n+  class _Lock {\n+    public:\n+      _Lock() { __NODE_ALLOCATOR_LOCK; }\n+      ~_Lock() { __NODE_ALLOCATOR_UNLOCK; }\n+  };\n \n public:\n \n-  /* __n must be > 0      */\n+  // __n must be > 0\n   static void* allocate(size_t __n)\n   {\n     void* __ret = 0;\n@@ -358,7 +398,7 @@ class __default_alloc_template {\n \t/*REFERENCED*/\n \t_Lock __lock_instance;\n #     endif\n-\t_Obj* __RESTRICT __result = *__my_free_list;\n+\t_Obj* __restrict__ __result = *__my_free_list;\n \tif (__result == 0)\n \t  __ret = _S_refill(_S_round_up(__n));\n \telse \n@@ -371,7 +411,7 @@ class __default_alloc_template {\n     return __ret;\n   };\n \n-  /* __p may not be 0 */\n+  // __p may not be 0\n   static void deallocate(void* __p, size_t __n)\n   {\n     if (__n > (size_t) _MAX_BYTES)\n@@ -396,8 +436,6 @@ class __default_alloc_template {\n   static void* reallocate(void* __p, size_t __old_sz, size_t __new_sz);\n };\n \n-typedef __default_alloc_template<__NODE_ALLOCATOR_THREADS, 0> alloc;\n-typedef __default_alloc_template<false, 0> single_client_alloc;\n \n template <bool __threads, int __inst>\n inline bool operator==(const __default_alloc_template<__threads, __inst>&,\n@@ -414,11 +452,9 @@ inline bool operator!=(const __default_alloc_template<__threads, __inst>&,\n }\n \n \n-\n-/* We allocate memory in large chunks in order to avoid fragmenting     */\n-/* the malloc heap too much.                                            */\n-/* We assume that size is properly aligned.                             */\n-/* We hold the allocation lock.                                         */\n+// We allocate memory in large chunks in order to avoid fragmenting the\n+// malloc heap (or whatever __mem_interface is using) too much.  We assume\n+// that __size is properly aligned.  We hold the allocation lock.\n template <bool __threads, int __inst>\n char*\n __default_alloc_template<__threads, __inst>::_S_chunk_alloc(size_t __size, \n@@ -492,9 +528,8 @@ __default_alloc_template<__threads, __inst>::_S_chunk_alloc(size_t __size,\n }\n \n \n-/* Returns an object of size __n, and optionally adds to size __n free list.*/\n-/* We assume that __n is properly aligned.                                */\n-/* We hold the allocation lock.                                         */\n+// Returns an object of size __n, and optionally adds to \"size __n\"'s free list.\n+// We assume that __n is properly aligned.  We hold the allocation lock.\n template <bool __threads, int __inst>\n void*\n __default_alloc_template<__threads, __inst>::_S_refill(size_t __n)\n@@ -526,6 +561,7 @@ __default_alloc_template<__threads, __inst>::_S_refill(size_t __n)\n     return(__result);\n }\n \n+\n template <bool threads, int inst>\n void*\n __default_alloc_template<threads, inst>::reallocate(void* __p,\n@@ -567,23 +603,35 @@ template <bool __threads, int __inst>\n typename __default_alloc_template<__threads, __inst>::_Obj* volatile\n __default_alloc_template<__threads, __inst> ::_S_free_list[\n     __default_alloc_template<__threads, __inst>::_NFREELISTS\n-] = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, };\n-// The 16 zeros are necessary to make version 4.1 of the SunPro\n-// compiler happy.  Otherwise it appears to allocate too little\n-// space for the array.\n+] = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};\n+\n+\n+// __NODE_ALLOCATOR_THREADS is predicated on __STL_THREADS being defined or not\n+typedef __default_alloc_template<__NODE_ALLOCATOR_THREADS, 0> alloc;\n+typedef __default_alloc_template<false, 0> single_client_alloc;\n+\n \n #endif /* ! __USE_MALLOC */\n \n-// This implements allocators as specified in the C++ standard.  \n-//\n-// Note that standard-conforming allocators use many language features\n-// that are not yet widely implemented.  In particular, they rely on\n-// member templates, partial specialization, partial ordering of function\n-// templates, the typename keyword, and the use of the template keyword\n-// to refer to a template member of a dependent type.\n \n+/**\n+ *  This is a \"standard\" allocator, as per [20.4].  The private _Alloc is\n+ *  \"SGI\" style.  (See comments at the top of stl_alloc.h.)\n+ *\n+ *  The underlying allocator behaves as follows.\n+ *  - if __USE_MALLOC then\n+ *    - thread safety depends on malloc and is entirely out of our hands\n+ *    - __malloc_alloc_template is used for memory requests\n+ *  - else (the default)\n+ *    - __default_alloc_template is used via two typedefs\n+ *    - \"single_client_alloc\" typedef does no locking for threads\n+ *    - \"alloc\" typedef is threadsafe via the locks\n+ *    - __new_alloc is used for memory requests\n+ *\n+*/\n template <class _Tp>\n-class allocator {\n+class allocator\n+{\n   typedef alloc _Alloc;          // The underlying allocator.\n public:\n   typedef size_t     size_type;\n@@ -651,15 +699,18 @@ inline bool operator!=(const allocator<_T1>&, const allocator<_T2>&)\n   return false;\n }\n \n-// Allocator adaptor to turn an SGI-style allocator (e.g. alloc, malloc_alloc)\n-// into a standard-conforming allocator.   Note that this adaptor does\n-// *not* assume that all objects of the underlying alloc class are\n-// identical, nor does it assume that all of the underlying alloc's\n-// member functions are static member functions.  Note, also, that \n-// __allocator<_Tp, alloc> is essentially the same thing as allocator<_Tp>.\n \n+/**\n+ *  Allocator adaptor to turn an \"SGI\" style allocator (e.g. alloc,\n+ *  __malloc_alloc_template) into a \"standard\" conformaing allocator.  Note\n+ *  that this adaptor does *not* assume that all objects of the underlying\n+ *  alloc class are identical, nor does it assume that all of the underlying\n+ *  alloc's member functions are static member functions.  Note, also, that\n+ *  __allocator<_Tp, alloc> is essentially the same thing as allocator<_Tp>.\n+*/\n template <class _Tp, class _Alloc>\n-struct __allocator {\n+struct __allocator\n+{\n   _Alloc __underlying_alloc;\n \n   typedef size_t    size_type;\n@@ -730,6 +781,7 @@ inline bool operator!=(const __allocator<_Tp, _Alloc>& __a1,\n   return __a1.__underlying_alloc != __a2.__underlying_alloc;\n }\n \n+\n // Comparison operators for all of the predifined SGI-style allocators.\n // This ensures that __allocator<malloc_alloc> (for example) will\n // work correctly.\n@@ -749,17 +801,18 @@ inline bool operator!=(const __malloc_alloc_template<__inst>&,\n }\n \n template <class _Alloc>\n-inline bool operator==(const debug_alloc<_Alloc>&,\n-                       const debug_alloc<_Alloc>&) {\n+inline bool operator==(const __debug_alloc<_Alloc>&,\n+                       const __debug_alloc<_Alloc>&) {\n   return true;\n }\n \n template <class _Alloc>\n-inline bool operator!=(const debug_alloc<_Alloc>&,\n-                       const debug_alloc<_Alloc>&) {\n+inline bool operator!=(const __debug_alloc<_Alloc>&,\n+                       const __debug_alloc<_Alloc>&) {\n   return false;\n }\n \n+\n // Another allocator adaptor: _Alloc_traits.  This serves two\n // purposes.  First, make it possible to write containers that can use\n // either SGI-style allocators or standard-conforming allocator.\n@@ -804,7 +857,7 @@ template <class _Tp, class _Tp1>\n struct _Alloc_traits<_Tp, allocator<_Tp1> >\n {\n   static const bool _S_instanceless = true;\n-  typedef simple_alloc<_Tp, alloc> _Alloc_type;\n+  typedef __simple_alloc<_Tp, alloc> _Alloc_type;\n   typedef allocator<_Tp> allocator_type;\n };\n \n@@ -814,7 +867,7 @@ template <class _Tp, int __inst>\n struct _Alloc_traits<_Tp, __malloc_alloc_template<__inst> >\n {\n   static const bool _S_instanceless = true;\n-  typedef simple_alloc<_Tp, __malloc_alloc_template<__inst> > _Alloc_type;\n+  typedef __simple_alloc<_Tp, __malloc_alloc_template<__inst> > _Alloc_type;\n   typedef __allocator<_Tp, __malloc_alloc_template<__inst> > allocator_type;\n };\n \n@@ -823,19 +876,19 @@ template <class _Tp, bool __threads, int __inst>\n struct _Alloc_traits<_Tp, __default_alloc_template<__threads, __inst> >\n {\n   static const bool _S_instanceless = true;\n-  typedef simple_alloc<_Tp, __default_alloc_template<__threads, __inst> > \n+  typedef __simple_alloc<_Tp, __default_alloc_template<__threads, __inst> > \n           _Alloc_type;\n   typedef __allocator<_Tp, __default_alloc_template<__threads, __inst> > \n           allocator_type;\n };\n #endif\n \n template <class _Tp, class _Alloc>\n-struct _Alloc_traits<_Tp, debug_alloc<_Alloc> >\n+struct _Alloc_traits<_Tp, __debug_alloc<_Alloc> >\n {\n   static const bool _S_instanceless = true;\n-  typedef simple_alloc<_Tp, debug_alloc<_Alloc> > _Alloc_type;\n-  typedef __allocator<_Tp, debug_alloc<_Alloc> > allocator_type;\n+  typedef __simple_alloc<_Tp, __debug_alloc<_Alloc> > _Alloc_type;\n+  typedef __allocator<_Tp, __debug_alloc<_Alloc> > allocator_type;\n };\n \n // Versions for the __allocator adaptor used with the predefined\n@@ -846,7 +899,7 @@ struct _Alloc_traits<_Tp,\n                      __allocator<_Tp1, __malloc_alloc_template<__inst> > >\n {\n   static const bool _S_instanceless = true;\n-  typedef simple_alloc<_Tp, __malloc_alloc_template<__inst> > _Alloc_type;\n+  typedef __simple_alloc<_Tp, __malloc_alloc_template<__inst> > _Alloc_type;\n   typedef __allocator<_Tp, __malloc_alloc_template<__inst> > allocator_type;\n };\n \n@@ -857,19 +910,19 @@ struct _Alloc_traits<_Tp,\n                                   __default_alloc_template<__thr, __inst> > >\n {\n   static const bool _S_instanceless = true;\n-  typedef simple_alloc<_Tp, __default_alloc_template<__thr,__inst> > \n+  typedef __simple_alloc<_Tp, __default_alloc_template<__thr,__inst> > \n           _Alloc_type;\n   typedef __allocator<_Tp, __default_alloc_template<__thr,__inst> > \n           allocator_type;\n };\n #endif\n \n template <class _Tp, class _Tp1, class _Alloc>\n-struct _Alloc_traits<_Tp, __allocator<_Tp1, debug_alloc<_Alloc> > >\n+struct _Alloc_traits<_Tp, __allocator<_Tp1, __debug_alloc<_Alloc> > >\n {\n   static const bool _S_instanceless = true;\n-  typedef simple_alloc<_Tp, debug_alloc<_Alloc> > _Alloc_type;\n-  typedef __allocator<_Tp, debug_alloc<_Alloc> > allocator_type;\n+  typedef __simple_alloc<_Tp, __debug_alloc<_Alloc> > _Alloc_type;\n+  typedef __allocator<_Tp, __debug_alloc<_Alloc> > allocator_type;\n };\n \n } // namespace std"}, {"sha": "51bd8a013e7f6392797e9194230d7ac02c9071ef", "filename": "libstdc++-v3/include/bits/stl_construct.h", "status": "modified", "additions": 16, "deletions": 14, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b00378457a5be638dfec92b0e12659179810f17b/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_construct.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b00378457a5be638dfec92b0e12659179810f17b/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_construct.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_construct.h?ref=b00378457a5be638dfec92b0e12659179810f17b", "patch": "@@ -67,67 +67,69 @@\n namespace std\n {\n   /**\n-   * Invoke an allocated object's constructor with an initializer.\n-   *\n-   * This function is not part of the C++ standard but is used internally\n-   * within the library.\n+   * @maint\n+   * Constructs an object in existing memory by invoking an allocated\n+   * object's constructor with an initializer.\n+   * @endmaint\n    */\n   template <class _T1, class _T2>\n     inline void\n     _Construct(_T1* __p, const _T2& __value)\n     { new (static_cast<void*>(__p)) _T1(__value); }\n   \n   /**\n-   * Invoke an allocated object's constructor without an initializer.\n-   *\n-   * This function is not part of the C++ standard but is used internally\n-   * within the library.\n+   * @maint\n+   * Constructs an object in existing memory by invoking an allocated\n+   * object's default constructor (no initializers).\n+   * @endmaint\n    */\n   template <class _T1>\n     inline void\n     _Construct(_T1* __p)\n     { new (static_cast<void*>(__p)) _T1(); }\n \n   /**\n+   * @maint\n    * Destroy a range of objects with nontrivial destructors.  \n    *\n    * This is a helper function used only by _Destroy().\n+   * @endmaint\n    */\n   template <class _ForwardIterator>\n     inline void\n     __destroy_aux(_ForwardIterator __first, _ForwardIterator __last, __false_type)\n     { for ( ; __first != __last; ++__first) _Destroy(&*__first); }\n \n   /**\n+   * @maint\n    * Destroy a range of objects with trivial destructors.  Since the destructors\n    * are trivial, there's nothing to do and hopefully this function will be\n    * entirely optimized away.\n    *\n    * This is a helper function used only by _Destroy().\n+   * @endmaint\n    */\n   template <class _ForwardIterator> \n     inline void\n     __destroy_aux(_ForwardIterator, _ForwardIterator, __true_type)\n     { }\n \n   /**\n+   * @maint\n    * Destroy the object pointed to by a pointer type.\n-   *\n-   * This function is not part of the C++ standard but is used internally\n-   * within the library.\n+   * @endmaint\n    */\n   template <class _Tp>\n     inline void\n     _Destroy(_Tp* __pointer)\n     { __pointer->~_Tp(); }\n   \n   /**\n+   * @maint\n    * Destroy a range of objects.  If the value_type of the object has\n    * a trivial destructor, the compiler should optimize all of this\n    * away, otherwise the objects' destructors must be invoked.\n-   *\n-   * This function is not part of the C++ standard but is used internally\n-   * within the library.\n+   * @endmaint\n    */\n   template <class _ForwardIterator>\n     inline void"}]}