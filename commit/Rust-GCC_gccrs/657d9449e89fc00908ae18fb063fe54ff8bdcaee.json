{"sha": "657d9449e89fc00908ae18fb063fe54ff8bdcaee", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjU3ZDk0NDllODlmYzAwOTA4YWUxOGZiMDYzZmU1NGZmOGJkY2FlZQ==", "commit": {"author": {"name": "Richard Earnshaw", "email": "rearnsha@arm.com", "date": "2002-03-18T11:26:24Z"}, "committer": {"name": "Richard Earnshaw", "email": "rearnsha@gcc.gnu.org", "date": "2002-03-18T11:26:24Z"}, "message": "arm.md (tablejump): Make this a define_expand.\n\n* arm.md (tablejump): Make this a define_expand.  For PIC add the\noffset to the base of the table.\n(thumb_tablejump): Matcher for Thumb tablejump insn.\n* config/arm/aout.h (ASM_OUTPUT_ADDR_DIFF_ELT): Output thumb entries\nas the difference of two labels.\n* config/arm/aof.h (ASM_OUTPUT_ADDR_DIFF_ELT): Likewise.\n* config/arm/elf.h (JUMP_TABLES_IN_TEXT_SECTION): Only put ARM jump\ntables in the code.\n* config/arm/coff.h (JUMP_TABLES_IN_TEXT_SECTION): Likewise.\n* arm.c (get_jump_table_size): If the table is not in the text\nsection, return zero.\n\nFrom-SVN: r50960", "tree": {"sha": "26d7156b5d3be51ac40b7883e864783742cf5808", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/26d7156b5d3be51ac40b7883e864783742cf5808"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/657d9449e89fc00908ae18fb063fe54ff8bdcaee", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/657d9449e89fc00908ae18fb063fe54ff8bdcaee", "html_url": "https://github.com/Rust-GCC/gccrs/commit/657d9449e89fc00908ae18fb063fe54ff8bdcaee", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/657d9449e89fc00908ae18fb063fe54ff8bdcaee/comments", "author": null, "committer": null, "parents": [{"sha": "ffd696af84c29fe41b43e74fb6e4ada9076102d6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ffd696af84c29fe41b43e74fb6e4ada9076102d6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ffd696af84c29fe41b43e74fb6e4ada9076102d6"}], "stats": {"total": 89, "additions": 78, "deletions": 11}, "files": [{"sha": "42a48bbeb7bfe359b1acfe2c2cb46549fadb9828", "filename": "gcc/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/657d9449e89fc00908ae18fb063fe54ff8bdcaee/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/657d9449e89fc00908ae18fb063fe54ff8bdcaee/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=657d9449e89fc00908ae18fb063fe54ff8bdcaee", "patch": "@@ -1,3 +1,17 @@\n+2002-03-18  Richard Earnshaw  <rearnsha@arm.com>\n+\n+\t* arm.md (tablejump): Make this a define_expand.  For PIC add the\n+\toffset to the base of the table.\n+\t(thumb_tablejump): Matcher for Thumb tablejump insn.\n+\t* config/arm/aout.h (ASM_OUTPUT_ADDR_DIFF_ELT): Output thumb entries\n+\tas the difference of two labels.\n+\t* config/arm/aof.h (ASM_OUTPUT_ADDR_DIFF_ELT): Likewise.\n+\t* config/arm/elf.h (JUMP_TABLES_IN_TEXT_SECTION): Only put ARM jump\n+\ttables in the code.\n+\t* config/arm/coff.h (JUMP_TABLES_IN_TEXT_SECTION): Likewise.\n+\t* arm.c (get_jump_table_size): If the table is not in the text\n+\tsection, return zero.\n+\t\n 2002-03-18  Bernd Schmidt  <bernds@redhat.com>\n \n \t* config/arm/arm.c (arm_gen_movstrqi): Use gen_lowpart instead"}, {"sha": "f110ea215d13c79993ee3bb307273ecf4251da95", "filename": "gcc/config/arm/aof.h", "status": "modified", "additions": 11, "deletions": 2, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/657d9449e89fc00908ae18fb063fe54ff8bdcaee/gcc%2Fconfig%2Farm%2Faof.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/657d9449e89fc00908ae18fb063fe54ff8bdcaee/gcc%2Fconfig%2Farm%2Faof.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Faof.h?ref=657d9449e89fc00908ae18fb063fe54ff8bdcaee", "patch": "@@ -120,6 +120,10 @@ do {\t\t\t\t\t\\\n     (*ptr++) ();\t\t\t\\\n } while (0)\n \n+/* We really want to put Thumb tables in a read-only data section, but\n+   switching to another section during function output is not\n+   possible.  We could however do what the SPARC does and defer the\n+   whole table generation until the end of the function.  */\n #define JUMP_TABLES_IN_TEXT_SECTION 1\n \n #ifndef ARM_OS_NAME\n@@ -322,8 +326,13 @@ do {\t\t\t\t\t\\\n \n /* Output of Dispatch Tables */\n \n-#define ASM_OUTPUT_ADDR_DIFF_ELT(STREAM,BODY,VALUE,REL)\t\t\\\n-  fprintf ((STREAM), \"\\tb\\t|L..%d|\\n\", (VALUE))\n+#define ASM_OUTPUT_ADDR_DIFF_ELT(STREAM,BODY,VALUE,REL)\t\t\t\\\n+  do {\t\t\t\t\t\t\t\t\t\\\n+    if (TARGET_ARM)\t\t\t\t\t\t\t\\\n+      fprintf ((STREAM), \"\\tb\\t|L..%d|\\n\", (VALUE));\t\t\t\\\n+    else\t\t\t\t\t\t\t\t\\\n+      fprintf ((STREAM), \"\\tDCD\\t|L..%d| - |L..%d|\\n\", (VALUE), (REL));\t\\\n+  } while (0)\n \n #define ASM_OUTPUT_ADDR_VEC_ELT(STREAM,VALUE)\t\\\n   fprintf ((STREAM), \"\\tDCD\\t|L..%d|\\n\", (VALUE))"}, {"sha": "868eee0c7c8657c45d0442e4d06ce5490989d1c0", "filename": "gcc/config/arm/aout.h", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/657d9449e89fc00908ae18fb063fe54ff8bdcaee/gcc%2Fconfig%2Farm%2Faout.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/657d9449e89fc00908ae18fb063fe54ff8bdcaee/gcc%2Fconfig%2Farm%2Faout.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Faout.h?ref=657d9449e89fc00908ae18fb063fe54ff8bdcaee", "patch": "@@ -181,8 +181,16 @@ Boston, MA 02111-1307, USA.  */\n #define ASM_OUTPUT_ADDR_VEC_ELT(STREAM, VALUE)  \\\n   asm_fprintf (STREAM, \"\\t.word\\t%LL%d\\n\", VALUE)\n \n-#define ASM_OUTPUT_ADDR_DIFF_ELT(STREAM, BODY, VALUE, REL)  \\\n-  asm_fprintf (STREAM, \"\\tb\\t%LL%d\\n\", VALUE)\n+#define ASM_OUTPUT_ADDR_DIFF_ELT(STREAM, BODY, VALUE, REL)\t\t\\\n+  do\t\t\t\t\t\t\t\t\t\\\n+    {\t\t\t\t\t\t\t\t\t\\\n+      if (TARGET_ARM)\t\t\t\t\t\t\t\\\n+\tasm_fprintf (STREAM, \"\\tb\\t%LL%d\\n\", VALUE);\t\t\t\\\n+      else\t\t\t\t\t\t\t\t\\\n+\tasm_fprintf (STREAM, \"\\t.word\\t%LL%d-%LL%d\\n\", VALUE, REL);\t\\\n+    }\t\t\t\t\t\t\t\t\t\\\n+  while (0)\n+\n \n #undef  ASM_OUTPUT_ASCII\n #define ASM_OUTPUT_ASCII(STREAM, PTR, LEN)  \\"}, {"sha": "8ed4c6db131e4ec8401f401f08a38b7920c36381", "filename": "gcc/config/arm/arm.c", "status": "modified", "additions": 18, "deletions": 3, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/657d9449e89fc00908ae18fb063fe54ff8bdcaee/gcc%2Fconfig%2Farm%2Farm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/657d9449e89fc00908ae18fb063fe54ff8bdcaee/gcc%2Fconfig%2Farm%2Farm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.c?ref=657d9449e89fc00908ae18fb063fe54ff8bdcaee", "patch": "@@ -5329,14 +5329,29 @@ is_jump_table (insn)\n   return NULL_RTX;\n }\n \n+#ifndef JUMP_TABLES_IN_TEXT_SECTION\n+#define JUMP_TABLES_IN_TEXT_SECTION 0\n+#endif\n+\n static HOST_WIDE_INT\n get_jump_table_size (insn)\n      rtx insn;\n {\n-  rtx body = PATTERN (insn);\n-  int elt = GET_CODE (body) == ADDR_DIFF_VEC ? 1 : 0;\n+  /* ADDR_VECs only take room if read-only data does into the text\n+     section.  */\n+  if (JUMP_TABLES_IN_TEXT_SECTION\n+#if !defined(READONLY_DATA_SECTION)\n+      || 1\n+#endif\n+      )\n+    {\n+      rtx body = PATTERN (insn);\n+      int elt = GET_CODE (body) == ADDR_DIFF_VEC ? 1 : 0;\n+\n+      return GET_MODE_SIZE (GET_MODE (body)) * XVECLEN (body, elt);\n+    }\n \n-  return GET_MODE_SIZE (GET_MODE (body)) * XVECLEN (body, elt);\n+  return 0;\n }\n \n /* Move a minipool fix MP from its current location to before MAX_MP."}, {"sha": "cdab5c66ff80743c214928c36ca56fcb25f3f476", "filename": "gcc/config/arm/arm.md", "status": "modified", "additions": 19, "deletions": 2, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/657d9449e89fc00908ae18fb063fe54ff8bdcaee/gcc%2Fconfig%2Farm%2Farm.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/657d9449e89fc00908ae18fb063fe54ff8bdcaee/gcc%2Fconfig%2Farm%2Farm.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.md?ref=657d9449e89fc00908ae18fb063fe54ff8bdcaee", "patch": "@@ -9119,11 +9119,28 @@\n \n ;; Miscellaneous Thumb patterns\n \n-(define_insn \"tablejump\"\n+(define_expand \"tablejump\"\n+  [(parallel [(set (pc) (match_operand:SI 0 \"register_operand\" \"l*r\"))\n+\t      (use (label_ref (match_operand 1 \"\" \"\")))])]\n+  \"TARGET_THUMB\"\n+  \"\n+  if (flag_pic)\n+    {\n+      /* Hopefully, CSE will eliminate this copy.  */\n+      rtx reg1 = copy_addr_to_reg (gen_rtx_LABEL_REF (Pmode, operands[1]));\n+      rtx reg2 = gen_reg_rtx (SImode);\n+\n+      emit_insn (gen_addsi3 (reg2, operands[0], reg1));\n+      operands[0] = reg2;\n+    }\n+  \"\n+)\n+\n+(define_insn \"*thumb_tablejump\"\n   [(set (pc) (match_operand:SI 0 \"register_operand\" \"l*r\"))\n    (use (label_ref (match_operand 1 \"\" \"\")))]\n   \"TARGET_THUMB\"\n-  \"mov\tpc, %0\"\n+  \"mov\\\\t%|pc, %0\"\n   [(set_attr \"length\" \"2\")]\n )\n "}, {"sha": "c9f0d9277ab2bed33e13e1bc7775cfb456990b70", "filename": "gcc/config/arm/coff.h", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/657d9449e89fc00908ae18fb063fe54ff8bdcaee/gcc%2Fconfig%2Farm%2Fcoff.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/657d9449e89fc00908ae18fb063fe54ff8bdcaee/gcc%2Fconfig%2Farm%2Fcoff.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fcoff.h?ref=657d9449e89fc00908ae18fb063fe54ff8bdcaee", "patch": "@@ -72,7 +72,9 @@ Boston, MA 02111-1307, USA.  */\n /* Define this macro if jump tables (for `tablejump' insns) should be\n    output in the text section, along with the assembler instructions.\n    Otherwise, the readonly data section is used.  */\n-#define JUMP_TABLES_IN_TEXT_SECTION 1\n+/* We put ARM jump tables in the text section, because it makes the code\n+   more efficient, but for Thumb it's better to put them out of band.  */\n+#define JUMP_TABLES_IN_TEXT_SECTION (TARGET_ARM)\n \n #undef  READONLY_DATA_SECTION\n #define READONLY_DATA_SECTION\trdata_section"}, {"sha": "1cab2c4e144fb2cf3ac4b5155484b150dfba49cb", "filename": "gcc/config/arm/elf.h", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/657d9449e89fc00908ae18fb063fe54ff8bdcaee/gcc%2Fconfig%2Farm%2Felf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/657d9449e89fc00908ae18fb063fe54ff8bdcaee/gcc%2Fconfig%2Farm%2Felf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Felf.h?ref=657d9449e89fc00908ae18fb063fe54ff8bdcaee", "patch": "@@ -103,7 +103,9 @@ Boston, MA 02111-1307, USA.  */\n /* Define this macro if jump tables (for `tablejump' insns) should be\n    output in the text section, along with the assembler instructions.\n    Otherwise, the readonly data section is used.  */\n-#define JUMP_TABLES_IN_TEXT_SECTION 1\n+/* We put ARM jump tables in the text section, because it makes the code\n+   more efficient, but for Thumb it's better to put them out of band.  */\n+#define JUMP_TABLES_IN_TEXT_SECTION (TARGET_ARM)\n \n #ifndef LINK_SPEC\n #define LINK_SPEC \"%{mbig-endian:-EB} -X\""}]}