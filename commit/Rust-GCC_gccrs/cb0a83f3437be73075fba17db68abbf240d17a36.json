{"sha": "cb0a83f3437be73075fba17db68abbf240d17a36", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2IwYTgzZjM0MzdiZTczMDc1ZmJhMTdkYjY4YWJiZjI0MGQxN2EzNg==", "commit": {"author": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2019-08-13T15:05:48Z"}, "committer": {"name": "Marek Polacek", "email": "mpolacek@gcc.gnu.org", "date": "2019-08-13T15:05:48Z"}, "message": "PR c++/90473 - wrong code with nullptr in default argument.\n\n\t* call.c (null_ptr_cst_p): Update quote from the standard.\n\t* decl.c (check_default_argument): Don't return nullptr when the arg\n\thas side-effects.\n\n\t* g++.dg/cpp0x/nullptr42.C: New test.\n\nFrom-SVN: r274382", "tree": {"sha": "0697b0b4e87b5dc7ddb5c05fad90bdad5eaeccad", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0697b0b4e87b5dc7ddb5c05fad90bdad5eaeccad"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cb0a83f3437be73075fba17db68abbf240d17a36", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cb0a83f3437be73075fba17db68abbf240d17a36", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cb0a83f3437be73075fba17db68abbf240d17a36", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cb0a83f3437be73075fba17db68abbf240d17a36/comments", "author": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "82614ffbfdb57dcc490a752f0d398bbe2a774864", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/82614ffbfdb57dcc490a752f0d398bbe2a774864", "html_url": "https://github.com/Rust-GCC/gccrs/commit/82614ffbfdb57dcc490a752f0d398bbe2a774864"}], "stats": {"total": 39, "additions": 35, "deletions": 4}, "files": [{"sha": "28bc2a4cec414cd8aea9c12804c8fe42ac75deeb", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb0a83f3437be73075fba17db68abbf240d17a36/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb0a83f3437be73075fba17db68abbf240d17a36/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=cb0a83f3437be73075fba17db68abbf240d17a36", "patch": "@@ -1,3 +1,10 @@\n+2019-08-13  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c++/90473 - wrong code with nullptr in default argument.\n+\t* call.c (null_ptr_cst_p): Update quote from the standard.\n+\t* decl.c (check_default_argument): Don't return nullptr when the arg\n+\thas side-effects.\n+\n 2019-08-13  Marek Polacek  <polacek@redhat.com>\n \n \t* cp-tree.h (DECL_MUTABLE_P): Use FIELD_DECL_CHECK."}, {"sha": "01a25ad6e1e703792aade1084291282abc3485c8", "filename": "gcc/cp/call.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb0a83f3437be73075fba17db68abbf240d17a36/gcc%2Fcp%2Fcall.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb0a83f3437be73075fba17db68abbf240d17a36/gcc%2Fcp%2Fcall.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcall.c?ref=cb0a83f3437be73075fba17db68abbf240d17a36", "patch": "@@ -529,9 +529,8 @@ null_ptr_cst_p (tree t)\n \n   /* [conv.ptr]\n \n-     A null pointer constant is an integral constant expression\n-     (_expr.const_) rvalue of integer type that evaluates to zero or\n-     an rvalue of type std::nullptr_t. */\n+     A null pointer constant is an integer literal ([lex.icon]) with value\n+     zero or a prvalue of type std::nullptr_t.  */\n   if (NULLPTR_TYPE_P (type))\n     return true;\n "}, {"sha": "d91f25183fb5e09915f5449283f2bd694becae6d", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb0a83f3437be73075fba17db68abbf240d17a36/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb0a83f3437be73075fba17db68abbf240d17a36/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=cb0a83f3437be73075fba17db68abbf240d17a36", "patch": "@@ -13177,7 +13177,9 @@ check_default_argument (tree decl, tree arg, tsubst_flags_t complain)\n   /* Avoid redundant -Wzero-as-null-pointer-constant warnings at\n      the call sites.  */\n   if (TYPE_PTR_OR_PTRMEM_P (decl_type)\n-      && null_ptr_cst_p (arg))\n+      && null_ptr_cst_p (arg)\n+      /* Don't lose side-effects as in PR90473.  */\n+      && !TREE_SIDE_EFFECTS (arg))\n     return nullptr_node;\n \n   /* [dcl.fct.default]"}, {"sha": "b881498954525b6d01959825f39e06c77630064b", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb0a83f3437be73075fba17db68abbf240d17a36/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb0a83f3437be73075fba17db68abbf240d17a36/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=cb0a83f3437be73075fba17db68abbf240d17a36", "patch": "@@ -1,3 +1,8 @@\n+2019-08-13  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c++/90473 - wrong code with nullptr in default argument.\n+\t* g++.dg/cpp0x/nullptr42.C: New test.\n+\n 2019-08-13  Olivier Hainque  <hainque@adacore.com>\n \n \t* gnat.dg/casesi.ad[bs], test_casesi.adb: New test."}, {"sha": "2fb628df6d7bc7fec10caa117b1dcdd8a77d22fb", "filename": "gcc/testsuite/g++.dg/cpp0x/nullptr42.C", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb0a83f3437be73075fba17db68abbf240d17a36/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fnullptr42.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb0a83f3437be73075fba17db68abbf240d17a36/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fnullptr42.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fnullptr42.C?ref=cb0a83f3437be73075fba17db68abbf240d17a36", "patch": "@@ -0,0 +1,18 @@\n+// PR c++/90473 - wrong code with nullptr in default argument.\n+// { dg-do run { target c++11 } }\n+\n+int g;\n+void f() { g++; }\n+\n+void fn1 (void* p = (f(), nullptr)) { }\n+void fn2 (int p = (f(), 0)) { }\n+\n+int main()\n+{\n+  fn1 ();\n+  if (g != 1)\n+    __builtin_abort ();\n+  fn2 ();\n+  if (g != 2)\n+    __builtin_abort ();\n+}"}]}