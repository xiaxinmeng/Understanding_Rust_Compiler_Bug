{"sha": "e56d199b04fb7cde9b6ef423175883d852de78b4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTU2ZDE5OWIwNGZiN2NkZTliNmVmNDIzMTc1ODgzZDg1MmRlNzhiNA==", "commit": {"author": {"name": "Kyrylo Tkachov", "email": "kyrylo.tkachov@arm.com", "date": "2019-11-07T10:41:21Z"}, "committer": {"name": "Kyrylo Tkachov", "email": "ktkachov@gcc.gnu.org", "date": "2019-11-07T10:41:21Z"}, "message": "[arm][2/X] Implement __qadd, __qsub, __qdbl intrinsics\n\nThis patch implements some more Q-bit-setting intrinsics from ACLE.\nWith the plumbing from patch 1 in place they are a simple builtin->RTL\naffair.\n\n\t* config/arm/arm.md (arm_<ss_op>): New define_expand.\n\t(arm_<ss_op><add_clobber_q_name>_insn): New define_insn.\n\t* config/arm/arm_acle.h (__qadd, __qsub, __qdbl): Define.\n\t* config/arm/arm_acle_builtins.def: Add builtins for qadd, qsub.\n\t* config/arm/iterators.md (SSPLUSMINUS): New code iterator.\n\t(ss_op): New code_attr.\n\n\t* gcc.target/arm/acle/dsp_arith.c: New test.\n\nFrom-SVN: r277915", "tree": {"sha": "9fea645d7de95ba8bfa7ffa9492acee42a8c8b1f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9fea645d7de95ba8bfa7ffa9492acee42a8c8b1f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e56d199b04fb7cde9b6ef423175883d852de78b4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e56d199b04fb7cde9b6ef423175883d852de78b4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e56d199b04fb7cde9b6ef423175883d852de78b4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e56d199b04fb7cde9b6ef423175883d852de78b4/comments", "author": {"login": "ktkachov-arm", "id": 74917949, "node_id": "MDQ6VXNlcjc0OTE3OTQ5", "avatar_url": "https://avatars.githubusercontent.com/u/74917949?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ktkachov-arm", "html_url": "https://github.com/ktkachov-arm", "followers_url": "https://api.github.com/users/ktkachov-arm/followers", "following_url": "https://api.github.com/users/ktkachov-arm/following{/other_user}", "gists_url": "https://api.github.com/users/ktkachov-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/ktkachov-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ktkachov-arm/subscriptions", "organizations_url": "https://api.github.com/users/ktkachov-arm/orgs", "repos_url": "https://api.github.com/users/ktkachov-arm/repos", "events_url": "https://api.github.com/users/ktkachov-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/ktkachov-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "cf16f980e5278c146f04587ea2a378fab950d7b3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cf16f980e5278c146f04587ea2a378fab950d7b3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cf16f980e5278c146f04587ea2a378fab950d7b3"}], "stats": {"total": 96, "additions": 96, "deletions": 0}, "files": [{"sha": "53de0821a78af46bedb738302578bf11b10d3c27", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e56d199b04fb7cde9b6ef423175883d852de78b4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e56d199b04fb7cde9b6ef423175883d852de78b4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e56d199b04fb7cde9b6ef423175883d852de78b4", "patch": "@@ -1,3 +1,12 @@\n+2019-11-07  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n+\n+\t* config/arm/arm.md (arm_<ss_op>): New define_expand.\n+\t(arm_<ss_op><add_clobber_q_name>_insn): New define_insn.\n+\t* config/arm/arm_acle.h (__qadd, __qsub, __qdbl): Define.\n+\t* config/arm/arm_acle_builtins.def: Add builtins for qadd, qsub.\n+\t* config/arm/iterators.md (SSPLUSMINUS): New code iterator.\n+\t(ss_op): New code_attr.\n+\n 2019-11-07  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n \n \t* config/arm/aout.h (REGISTER_NAMES): Add apsrq."}, {"sha": "298b0bedcfdffb28c46be64e2632d7114f9012d9", "filename": "gcc/config/arm/arm.md", "status": "modified", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e56d199b04fb7cde9b6ef423175883d852de78b4/gcc%2Fconfig%2Farm%2Farm.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e56d199b04fb7cde9b6ef423175883d852de78b4/gcc%2Fconfig%2Farm%2Farm.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.md?ref=e56d199b04fb7cde9b6ef423175883d852de78b4", "patch": "@@ -4076,6 +4076,32 @@\n    (set_attr \"type\" \"multiple\")]\n )\n \n+\n+(define_expand \"arm_<ss_op>\"\n+  [(set (match_operand:SI 0 \"s_register_operand\")\n+\t(SSPLUSMINUS:SI (match_operand:SI 1 \"s_register_operand\")\n+\t\t\t(match_operand:SI 2 \"s_register_operand\")))]\n+  \"TARGET_DSP_MULTIPLY\"\n+  {\n+    if (ARM_Q_BIT_READ)\n+      emit_insn (gen_arm_<ss_op>_setq_insn (operands[0],\n+\t\t\t\t\t    operands[1], operands[2]));\n+    else\n+      emit_insn (gen_arm_<ss_op>_insn (operands[0], operands[1], operands[2]));\n+    DONE;\n+  }\n+)\n+\n+(define_insn \"arm_<ss_op><add_clobber_q_name>_insn\"\n+  [(set (match_operand:SI 0 \"s_register_operand\" \"=r\")\n+\t(SSPLUSMINUS:SI (match_operand:SI 1 \"s_register_operand\" \"r\")\n+\t\t\t(match_operand:SI 2 \"s_register_operand\" \"r\")))]\n+  \"TARGET_DSP_MULTIPLY && <add_clobber_q_pred>\"\n+  \"<ss_op>%?\\t%0, %1, %2\"\n+  [(set_attr \"predicable\" \"yes\")\n+   (set_attr \"type\" \"alu_dsp_reg\")]\n+)\n+\n (define_code_iterator SAT [smin smax])\n (define_code_attr SATrev [(smin \"smax\") (smax \"smin\")])\n (define_code_attr SATlo [(smin \"1\") (smax \"2\")])"}, {"sha": "397653d3e8bf43cbcb82d98dd704bcd3a66cf782", "filename": "gcc/config/arm/arm_acle.h", "status": "modified", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e56d199b04fb7cde9b6ef423175883d852de78b4/gcc%2Fconfig%2Farm%2Farm_acle.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e56d199b04fb7cde9b6ef423175883d852de78b4/gcc%2Fconfig%2Farm%2Farm_acle.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm_acle.h?ref=e56d199b04fb7cde9b6ef423175883d852de78b4", "patch": "@@ -478,6 +478,29 @@ __ignore_saturation (void)\n   })\n #endif\n \n+#ifdef __ARM_FEATURE_DSP\n+__extension__ extern __inline int32_t\n+__attribute__  ((__always_inline__, __gnu_inline__, __artificial__))\n+__qadd (int32_t __a, int32_t __b)\n+{\n+  return __builtin_arm_qadd (__a, __b);\n+}\n+\n+__extension__ extern __inline int32_t\n+__attribute__  ((__always_inline__, __gnu_inline__, __artificial__))\n+__qsub (int32_t __a, int32_t __b)\n+{\n+  return __builtin_arm_qsub (__a, __b);\n+}\n+\n+__extension__ extern __inline int32_t\n+__attribute__  ((__always_inline__, __gnu_inline__, __artificial__))\n+__qdbl (int32_t __x)\n+{\n+  return __qadd (__x, __x);\n+}\n+#endif\n+\n #pragma GCC push_options\n #ifdef __ARM_FEATURE_CRC32\n #ifdef __ARM_FP"}, {"sha": "def1a569311e67194a323decc309ed92747c4c86", "filename": "gcc/config/arm/arm_acle_builtins.def", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e56d199b04fb7cde9b6ef423175883d852de78b4/gcc%2Fconfig%2Farm%2Farm_acle_builtins.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e56d199b04fb7cde9b6ef423175883d852de78b4/gcc%2Fconfig%2Farm%2Farm_acle_builtins.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm_acle_builtins.def?ref=e56d199b04fb7cde9b6ef423175883d852de78b4", "patch": "@@ -84,3 +84,5 @@ VAR1 (SAT_BINOP_UNSIGNED_IMM, ssat, si)\n VAR1 (UNSIGNED_SAT_BINOP_UNSIGNED_IMM, usat, si)\n VAR1 (SAT_OCCURRED, saturation_occurred, si)\n VAR1 (SET_SAT, set_saturation, void)\n+VAR1 (BINOP, qadd, si)\n+VAR1 (BINOP, qsub, si)"}, {"sha": "ebb8218f265023786730881ef0bc9f818e7235b0", "filename": "gcc/config/arm/iterators.md", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e56d199b04fb7cde9b6ef423175883d852de78b4/gcc%2Fconfig%2Farm%2Fiterators.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e56d199b04fb7cde9b6ef423175883d852de78b4/gcc%2Fconfig%2Farm%2Fiterators.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fiterators.md?ref=e56d199b04fb7cde9b6ef423175883d852de78b4", "patch": "@@ -264,6 +264,9 @@\n ;; Conversions.\n (define_code_iterator FCVT [unsigned_float float])\n \n+;; Saturating addition, subtraction\n+(define_code_iterator SSPLUSMINUS [ss_plus ss_minus])\n+\n ;; plus and minus are the only SHIFTABLE_OPS for which Thumb2 allows\n ;; a stack pointer operand.  The minus operation is a candidate for an rsub\n ;; and hence only plus is supported.\n@@ -282,6 +285,8 @@\n \n (define_code_attr vfml_op [(plus \"a\") (minus \"s\")])\n \n+(define_code_attr ss_op [(ss_plus \"qadd\") (ss_minus \"qsub\")])\n+\n ;;----------------------------------------------------------------------------\n ;; Int iterators\n ;;----------------------------------------------------------------------------"}, {"sha": "05183b08b7da70898d1146832941656334762e0c", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e56d199b04fb7cde9b6ef423175883d852de78b4/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e56d199b04fb7cde9b6ef423175883d852de78b4/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=e56d199b04fb7cde9b6ef423175883d852de78b4", "patch": "@@ -1,3 +1,7 @@\n+2019-11-07  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n+\n+\t* gcc.target/arm/acle/dsp_arith.c: New test.\n+\n 2019-11-07  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n \n \t* gcc.target/arm/acle/saturation.c: New test."}, {"sha": "f0bf80993beb0007b0eb360878f0fd1811098d9e", "filename": "gcc/testsuite/gcc.target/arm/acle/dsp_arith.c", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e56d199b04fb7cde9b6ef423175883d852de78b4/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Facle%2Fdsp_arith.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e56d199b04fb7cde9b6ef423175883d852de78b4/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Facle%2Fdsp_arith.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Facle%2Fdsp_arith.c?ref=e56d199b04fb7cde9b6ef423175883d852de78b4", "patch": "@@ -0,0 +1,27 @@\n+/* { dg-do compile } */\n+/* { dg-require-effective-target arm_qbit_ok } */\n+/* { dg-add-options arm_qbit  } */\n+\n+#include <arm_acle.h>\n+\n+int32_t\n+test_qadd (int32_t a, int32_t b)\n+{\n+  return __qadd (a, b);\n+}\n+\n+int32_t\n+test_qdbl (int32_t a)\n+{\n+  return __qdbl(a);\n+}\n+\n+/* { dg-final { scan-assembler-times \"qadd\\t...?, ...?, ...?\" 2 } } */\n+\n+int32_t\n+test_qsub (int32_t a, int32_t b)\n+{\n+  return __qsub (a, b);\n+}\n+\n+/* { dg-final { scan-assembler-times \"qsub\\t...?, ...?, ...?\" 1 } } */"}]}