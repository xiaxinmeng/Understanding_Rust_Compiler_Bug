{"sha": "ec52b1115dda4b0e38aa5620b0c3914b69008a24", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWM1MmIxMTE1ZGRhNGIwZTM4YWE1NjIwYjBjMzkxNGI2OTAwOGEyNA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2010-11-01T02:04:39Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2010-11-01T02:04:39Z"}, "message": "tree.h (EXPR_LOC_OR_HERE): New macro.\n\n\t* tree.h (EXPR_LOC_OR_HERE): New macro.\n\t* builtins.c (c_strlen): Use it.\n\t* c-decl.c (build_enumerator): Likewise.\n\t* gimplify.c (internal_get_tmp_var): Likewise.\n\t(shortcut_cond_expr): Likewise.\n\t(gimplify_one_sizepos): Likewise.\nc-family/\n\t* c-common.c (conversion_warning, warn_for_collisions_1): Use\n\tEXPR_LOC_OR_HERE.\ncp/\n\t* decl.c (pop_switch): Use EXPR_LOC_OR_HERE.\n\t* typeck.c (convert_for_assignment): Likewise.\n\nFrom-SVN: r166123", "tree": {"sha": "c668c63e9650ae10b834fb88da25c23030215504", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c668c63e9650ae10b834fb88da25c23030215504"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ec52b1115dda4b0e38aa5620b0c3914b69008a24", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ec52b1115dda4b0e38aa5620b0c3914b69008a24", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ec52b1115dda4b0e38aa5620b0c3914b69008a24", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ec52b1115dda4b0e38aa5620b0c3914b69008a24/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "202be748c9997016f1b08c98291db4b7b9b02a5f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/202be748c9997016f1b08c98291db4b7b9b02a5f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/202be748c9997016f1b08c98291db4b7b9b02a5f"}], "stats": {"total": 64, "additions": 31, "deletions": 33}, "files": [{"sha": "9fcc7cde1d18130a47b19a27b8815e581290df37", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec52b1115dda4b0e38aa5620b0c3914b69008a24/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec52b1115dda4b0e38aa5620b0c3914b69008a24/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ec52b1115dda4b0e38aa5620b0c3914b69008a24", "patch": "@@ -1,3 +1,12 @@\n+2010-10-31  Jason Merrill  <jason@redhat.com>\n+\n+\t* tree.h (EXPR_LOC_OR_HERE): New macro.\n+\t* builtins.c (c_strlen): Use it.\n+\t* c-decl.c (build_enumerator): Likewise.\n+\t* gimplify.c (internal_get_tmp_var): Likewise.\n+\t(shortcut_cond_expr): Likewise.\n+\t(gimplify_one_sizepos): Likewise.\n+\n 2010-10-31  Richard Henderson  <rth@redhat.com>\n \n \t* config/i386/cygming.h (TARGET_SEH): New."}, {"sha": "ced2fa7bd6b94d946249952520134c430eadcbf2", "filename": "gcc/builtins.c", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec52b1115dda4b0e38aa5620b0c3914b69008a24/gcc%2Fbuiltins.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec52b1115dda4b0e38aa5620b0c3914b69008a24/gcc%2Fbuiltins.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbuiltins.c?ref=ec52b1115dda4b0e38aa5620b0c3914b69008a24", "patch": "@@ -506,10 +506,7 @@ c_strlen (tree src, int only_value)\n       && (only_value || !TREE_SIDE_EFFECTS (TREE_OPERAND (src, 0))))\n     return c_strlen (TREE_OPERAND (src, 1), only_value);\n \n-  if (EXPR_HAS_LOCATION (src))\n-    loc = EXPR_LOCATION (src);\n-  else\n-    loc = input_location;\n+  loc = EXPR_LOC_OR_HERE (src);\n \n   src = string_constant (src, &offset_node);\n   if (src == 0)"}, {"sha": "bb7cf64553bda730abb6a18fca8dd02670e28c61", "filename": "gcc/c-decl.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec52b1115dda4b0e38aa5620b0c3914b69008a24/gcc%2Fc-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec52b1115dda4b0e38aa5620b0c3914b69008a24/gcc%2Fc-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-decl.c?ref=ec52b1115dda4b0e38aa5620b0c3914b69008a24", "patch": "@@ -7499,9 +7499,8 @@ build_enumerator (location_t decl_loc, location_t loc,\n \n   /* Set basis for default for next value.  */\n   the_enum->enum_next_value\n-    = build_binary_op\n-         (EXPR_HAS_LOCATION (value) ? EXPR_LOCATION (value) : input_location,\n-\t PLUS_EXPR, value, integer_one_node, 0);\n+    = build_binary_op (EXPR_LOC_OR_HERE (value),\n+\t\t       PLUS_EXPR, value, integer_one_node, 0);\n   the_enum->enum_overflow = tree_int_cst_lt (the_enum->enum_next_value, value);\n \n   /* Now create a declaration for the enum value name.  */"}, {"sha": "cb5b5dc475bb4134f297926c1783197338673a79", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec52b1115dda4b0e38aa5620b0c3914b69008a24/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec52b1115dda4b0e38aa5620b0c3914b69008a24/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=ec52b1115dda4b0e38aa5620b0c3914b69008a24", "patch": "@@ -1,3 +1,8 @@\n+2010-10-31  Jason Merrill  <jason@redhat.com>\n+\n+\t* c-common.c (conversion_warning, warn_for_collisions_1): Use\n+\tEXPR_LOC_OR_HERE.\n+\n 2010-10-30  Nicola Pero  <nicola.pero@meta-innovation.com>\n \n \tImplemented Objective-C 2.0 @property, @synthesize and @dynamic."}, {"sha": "923c63afa13bafd583e8e60e0fde1b3524148f64", "filename": "gcc/c-family/c-common.c", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec52b1115dda4b0e38aa5620b0c3914b69008a24/gcc%2Fc-family%2Fc-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec52b1115dda4b0e38aa5620b0c3914b69008a24/gcc%2Fc-family%2Fc-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-common.c?ref=ec52b1115dda4b0e38aa5620b0c3914b69008a24", "patch": "@@ -1863,8 +1863,7 @@ conversion_warning (tree type, tree expr)\n   int i;\n   const int expr_num_operands = TREE_OPERAND_LENGTH (expr);\n   tree expr_type = TREE_TYPE (expr);\n-  location_t loc = EXPR_HAS_LOCATION (expr)\n-    ? EXPR_LOCATION (expr) : input_location;\n+  location_t loc = EXPR_LOC_OR_HERE (expr);\n \n   if (!warn_conversion && !warn_sign_conversion)\n     return;\n@@ -2297,8 +2296,7 @@ warn_for_collisions_1 (tree written, tree writer, struct tlist *list,\n \t  && (!only_writes || list->writer))\n \t{\n \t  warned_ids = new_tlist (warned_ids, written, NULL_TREE);\n-\t  warning_at (EXPR_HAS_LOCATION (writer)\n-\t\t      ? EXPR_LOCATION (writer) : input_location,\n+\t  warning_at (EXPR_LOC_OR_HERE (writer),\n \t\t      OPT_Wsequence_point, \"operation on %qE may be undefined\",\n \t\t      list->expr);\n \t}"}, {"sha": "2b475d01a9a36c2527ef53f041cfefd875390d55", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec52b1115dda4b0e38aa5620b0c3914b69008a24/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec52b1115dda4b0e38aa5620b0c3914b69008a24/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=ec52b1115dda4b0e38aa5620b0c3914b69008a24", "patch": "@@ -1,5 +1,8 @@\n 2010-10-31  Jason Merrill  <jason@redhat.com>\n \n+\t* decl.c (pop_switch): Use EXPR_LOC_OR_HERE.\n+\t* typeck.c (convert_for_assignment): Likewise.\n+\n \t* parser.c (cp_parser_diagnose_invalid_type_name): Give helpful\n \tmessage about constexpr without -std=c++0x.\n "}, {"sha": "b7ab080f8cefa7522958e618af4e182e20c218ea", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec52b1115dda4b0e38aa5620b0c3914b69008a24/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec52b1115dda4b0e38aa5620b0c3914b69008a24/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=ec52b1115dda4b0e38aa5620b0c3914b69008a24", "patch": "@@ -2897,10 +2897,7 @@ pop_switch (void)\n   location_t switch_location;\n \n   /* Emit warnings as needed.  */\n-  if (EXPR_HAS_LOCATION (cs->switch_stmt))\n-    switch_location = EXPR_LOCATION (cs->switch_stmt);\n-  else\n-    switch_location = input_location;\n+  switch_location = EXPR_LOC_OR_HERE (cs->switch_stmt);\n   if (!processing_template_decl)\n     c_do_switch_warnings (cs->cases, switch_location,\n \t\t\t  SWITCH_STMT_TYPE (cs->switch_stmt),"}, {"sha": "967fe4d6b045b2079242d1fe599f5c98b83bf14d", "filename": "gcc/cp/typeck.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec52b1115dda4b0e38aa5620b0c3914b69008a24/gcc%2Fcp%2Ftypeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec52b1115dda4b0e38aa5620b0c3914b69008a24/gcc%2Fcp%2Ftypeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck.c?ref=ec52b1115dda4b0e38aa5620b0c3914b69008a24", "patch": "@@ -7529,8 +7529,7 @@ convert_for_assignment (tree type, tree rhs,\n       && TREE_CODE (TREE_TYPE (rhs)) != BOOLEAN_TYPE\n       && (complain & tf_warning))\n     {\n-      location_t loc = EXPR_HAS_LOCATION (rhs) \n-\t? EXPR_LOCATION (rhs) : input_location;\n+      location_t loc = EXPR_LOC_OR_HERE (rhs);\n \n       warning_at (loc, OPT_Wparentheses,\n \t\t  \"suggest parentheses around assignment used as truth value\");"}, {"sha": "885f01328751824870b85b1f522ffa37d579bc74", "filename": "gcc/gimplify.c", "status": "modified", "additions": 6, "deletions": 16, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec52b1115dda4b0e38aa5620b0c3914b69008a24/gcc%2Fgimplify.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec52b1115dda4b0e38aa5620b0c3914b69008a24/gcc%2Fgimplify.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimplify.c?ref=ec52b1115dda4b0e38aa5620b0c3914b69008a24", "patch": "@@ -587,10 +587,7 @@ internal_get_tmp_var (tree val, gimple_seq *pre_p, gimple_seq *post_p,\n \n   mod = build2 (INIT_EXPR, TREE_TYPE (t), t, unshare_expr (val));\n \n-  if (EXPR_HAS_LOCATION (val))\n-    SET_EXPR_LOCATION (mod, EXPR_LOCATION (val));\n-  else\n-    SET_EXPR_LOCATION (mod, input_location);\n+  SET_EXPR_LOCATION (mod, EXPR_LOC_OR_HERE (val));\n \n   /* gimplify_modify_expr might want to reduce this further.  */\n   gimplify_and_add (mod, pre_p);\n@@ -2620,8 +2617,7 @@ shortcut_cond_expr (tree expr)\n       while (TREE_CODE (pred) == TRUTH_ANDIF_EXPR)\n \t{\n \t  /* Keep the original source location on the first 'if'.  */\n-\t  location_t locus = EXPR_HAS_LOCATION (expr)\n-\t\t\t     ? EXPR_LOCATION (expr) : input_location;\n+\t  location_t locus = EXPR_LOC_OR_HERE (expr);\n \t  TREE_OPERAND (expr, 0) = TREE_OPERAND (pred, 1);\n \t  /* Set the source location of the && on the second 'if'.  */\n \t  if (EXPR_HAS_LOCATION (pred))\n@@ -2643,8 +2639,7 @@ shortcut_cond_expr (tree expr)\n       while (TREE_CODE (pred) == TRUTH_ORIF_EXPR)\n \t{\n \t  /* Keep the original source location on the first 'if'.  */\n-\t  location_t locus = EXPR_HAS_LOCATION (expr)\n-\t\t\t     ? EXPR_LOCATION (expr) : input_location;\n+\t  location_t locus = EXPR_LOC_OR_HERE (expr);\n \t  TREE_OPERAND (expr, 0) = TREE_OPERAND (pred, 1);\n \t  /* Set the source location of the || on the second 'if'.  */\n \t  if (EXPR_HAS_LOCATION (pred))\n@@ -2708,8 +2703,7 @@ shortcut_cond_expr (tree expr)\n   /* If there was nothing else in our arms, just forward the label(s).  */\n   if (!then_se && !else_se)\n     return shortcut_cond_r (pred, true_label_p, false_label_p,\n-\t\t\t    EXPR_HAS_LOCATION (expr)\n-\t\t\t    ? EXPR_LOCATION (expr) : input_location);\n+\t\t\t    EXPR_LOC_OR_HERE (expr));\n \n   /* If our last subexpression already has a terminal label, reuse it.  */\n   if (else_se)\n@@ -2741,8 +2735,7 @@ shortcut_cond_expr (tree expr)\n   jump_over_else = block_may_fallthru (then_);\n \n   pred = shortcut_cond_r (pred, true_label_p, false_label_p,\n-\t\t\t  EXPR_HAS_LOCATION (expr)\n-\t\t\t  ? EXPR_LOCATION (expr) : input_location);\n+\t\t\t  EXPR_LOC_OR_HERE (expr));\n \n   expr = NULL;\n   append_to_statement_list (pred, &expr);\n@@ -7638,10 +7631,7 @@ gimplify_one_sizepos (tree *expr_p, gimple_seq *stmt_p)\n       *expr_p = create_tmp_var (type, NULL);\n       tmp = build1 (NOP_EXPR, type, expr);\n       stmt = gimplify_assign (*expr_p, tmp, stmt_p);\n-      if (EXPR_HAS_LOCATION (expr))\n-\tgimple_set_location (stmt, EXPR_LOCATION (expr));\n-      else\n-\tgimple_set_location (stmt, input_location);\n+      gimple_set_location (stmt, EXPR_LOC_OR_HERE (expr));\n     }\n }\n "}, {"sha": "2de56c787357a684f68eaf7f5802655197488b2d", "filename": "gcc/tree.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec52b1115dda4b0e38aa5620b0c3914b69008a24/gcc%2Ftree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec52b1115dda4b0e38aa5620b0c3914b69008a24/gcc%2Ftree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.h?ref=ec52b1115dda4b0e38aa5620b0c3914b69008a24", "patch": "@@ -1598,6 +1598,7 @@ struct GTY(()) tree_constructor {\n   (EXPR_P ((NODE)) ? (NODE)->exp.locus : UNKNOWN_LOCATION)\n #define SET_EXPR_LOCATION(NODE, LOCUS) EXPR_CHECK ((NODE))->exp.locus = (LOCUS)\n #define EXPR_HAS_LOCATION(NODE) (EXPR_LOCATION (NODE) != UNKNOWN_LOCATION)\n+#define EXPR_LOC_OR_HERE(NODE) (EXPR_HAS_LOCATION (NODE) ? (NODE)->exp.locus : input_location)\n #define EXPR_FILENAME(NODE) LOCATION_FILE (EXPR_CHECK ((NODE))->exp.locus)\n #define EXPR_LINENO(NODE) LOCATION_LINE (EXPR_CHECK (NODE)->exp.locus)\n "}]}