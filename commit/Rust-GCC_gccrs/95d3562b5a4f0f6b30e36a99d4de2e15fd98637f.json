{"sha": "95d3562b5a4f0f6b30e36a99d4de2e15fd98637f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTVkMzU2MmI1YTRmMGY2YjMwZTM2YTk5ZDRkZTJlMTVmZDk4NjM3Zg==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-05-10T01:30:56Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-05-10T01:30:56Z"}, "message": "*** empty log message ***\n\nFrom-SVN: r950", "tree": {"sha": "5e2b7633e1d68037d8c40250530c1db16e5f7271", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5e2b7633e1d68037d8c40250530c1db16e5f7271"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/95d3562b5a4f0f6b30e36a99d4de2e15fd98637f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/95d3562b5a4f0f6b30e36a99d4de2e15fd98637f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/95d3562b5a4f0f6b30e36a99d4de2e15fd98637f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/95d3562b5a4f0f6b30e36a99d4de2e15fd98637f/comments", "author": null, "committer": null, "parents": [{"sha": "9230c95087d6920f01e29e31c5e87339bd3055cd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9230c95087d6920f01e29e31c5e87339bd3055cd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9230c95087d6920f01e29e31c5e87339bd3055cd"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "a1415c2268cf1a3e199f35d2f0af0b211f9dcf58", "filename": "gcc/reload.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/95d3562b5a4f0f6b30e36a99d4de2e15fd98637f/gcc%2Freload.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/95d3562b5a4f0f6b30e36a99d4de2e15fd98637f/gcc%2Freload.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freload.c?ref=95d3562b5a4f0f6b30e36a99d4de2e15fd98637f", "patch": "@@ -4538,7 +4538,7 @@ find_equiv_reg (goal, insn, class, other, reload_reg_p, goalreg, mode)\n \t\t     into a reg, we can use that reg.  */\n \t\t  || (goal_const && (tem = find_reg_note (p, REG_EQUIV, 0))\n \t\t      && rtx_equal_p (XEXP (tem, 0), goal)\n-\t\t      && (valueno = true_regnum (valtry = SET_DEST (pat))))\n+\t\t      && (valueno = true_regnum (valtry = SET_DEST (pat))) >= 0)\n \t\t  || (goal_const && (tem = find_reg_note (p, REG_EQUIV, 0))\n \t\t      && GET_CODE (SET_DEST (pat)) == REG\n \t\t      && GET_CODE (XEXP (tem, 0)) == CONST_DOUBLE\n@@ -4547,7 +4547,7 @@ find_equiv_reg (goal, insn, class, other, reload_reg_p, goalreg, mode)\n \t\t      && INTVAL (goal) == CONST_DOUBLE_LOW (XEXP (tem, 0))\n \t\t      && (valtry = operand_subword (SET_DEST (pat), 0, 0,\n \t\t\t\t\t\t    VOIDmode))\n-\t\t      && (valueno = true_regnum (valtry)))\n+\t\t      && (valueno = true_regnum (valtry)) >= 0)\n \t\t  || (goal_const && (tem = find_reg_note (p, REG_EQUIV, 0))\n \t\t      && GET_CODE (SET_DEST (pat)) == REG\n \t\t      && GET_CODE (XEXP (tem, 0)) == CONST_DOUBLE\n@@ -4556,7 +4556,7 @@ find_equiv_reg (goal, insn, class, other, reload_reg_p, goalreg, mode)\n \t\t      && INTVAL (goal) == CONST_DOUBLE_HIGH (XEXP (tem, 0))\n \t\t      && (valtry\n \t\t\t  = operand_subword (SET_DEST (pat), 1, 0, VOIDmode))\n-\t\t      && (valueno = true_regnum (valtry)))))\n+\t\t      && (valueno = true_regnum (valtry)) >= 0)))\n \t    if (other >= 0\n \t\t? valueno == other\n \t\t: ((unsigned) valueno < FIRST_PSEUDO_REGISTER"}]}