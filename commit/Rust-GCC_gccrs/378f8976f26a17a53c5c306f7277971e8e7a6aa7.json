{"sha": "378f8976f26a17a53c5c306f7277971e8e7a6aa7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Mzc4Zjg5NzZmMjZhMTdhNTNjNWMzMDZmNzI3Nzk3MWU4ZTdhNmFhNw==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2013-10-09T12:59:02Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2013-10-09T12:59:02Z"}, "message": "re PR middle-end/58570 (wrong code for bitfields at -O2 and above)\n\n\tPR middle-end/58570\n\t* tree-ssa-alias.c (nonoverlapping_component_refs_of_decl_p): Return\n\tfalse if both components are bitfields.\n\nFrom-SVN: r203315", "tree": {"sha": "8fe48efb934d00e67f7202795323adb3f8a915e2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8fe48efb934d00e67f7202795323adb3f8a915e2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/378f8976f26a17a53c5c306f7277971e8e7a6aa7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/378f8976f26a17a53c5c306f7277971e8e7a6aa7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/378f8976f26a17a53c5c306f7277971e8e7a6aa7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/378f8976f26a17a53c5c306f7277971e8e7a6aa7/comments", "author": null, "committer": null, "parents": [{"sha": "0fe04f5c3185fa3a3beb39fb811df019ed41569c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0fe04f5c3185fa3a3beb39fb811df019ed41569c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0fe04f5c3185fa3a3beb39fb811df019ed41569c"}], "stats": {"total": 37, "additions": 35, "deletions": 2}, "files": [{"sha": "f78642ae0adb2dc8eb7ba3fd07b6e895cb1969a3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/378f8976f26a17a53c5c306f7277971e8e7a6aa7/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/378f8976f26a17a53c5c306f7277971e8e7a6aa7/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=378f8976f26a17a53c5c306f7277971e8e7a6aa7", "patch": "@@ -1,3 +1,9 @@\n+2013-10-09  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\tPR middle-end/58570\n+\t* tree-ssa-alias.c (nonoverlapping_component_refs_of_decl_p): Return\n+\tfalse if both components are bitfields.\n+\n 2013-10-09  Alex Velenko  <Alex.Velenko@arm.com>\n \n \t* config/aarch64/arm_neon.h (vclz_s8, vclz_s16, vclz_s32)"}, {"sha": "4de71eb0f71701e20192ae7059e4fcbe1c247c2a", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/378f8976f26a17a53c5c306f7277971e8e7a6aa7/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/378f8976f26a17a53c5c306f7277971e8e7a6aa7/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=378f8976f26a17a53c5c306f7277971e8e7a6aa7", "patch": "@@ -1,3 +1,7 @@\n+2013-10-09  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gcc.c-torture/execute/pr58570.c: New test.\n+\n 2013-10-09  Alex Velenko  <Alex.Velenko@arm.com>\n \n \t* gcc.target/aarch64/vclz.c: New testcase."}, {"sha": "6d5116d9ea5b1f38beadbe101caf183b60473bca", "filename": "gcc/testsuite/gcc.c-torture/execute/pr58570.c", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/378f8976f26a17a53c5c306f7277971e8e7a6aa7/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr58570.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/378f8976f26a17a53c5c306f7277971e8e7a6aa7/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr58570.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr58570.c?ref=378f8976f26a17a53c5c306f7277971e8e7a6aa7", "patch": "@@ -0,0 +1,22 @@\n+#pragma pack(1)\n+struct S\n+{\n+  int f0:15;\n+  int f1:29;\n+};\n+\n+int e = 1, i;\n+static struct S d[6];\n+\n+int\n+main (void)\n+{\n+  if (e)\n+    {\n+      d[i].f0 = 1;\n+      d[i].f1 = 1;\n+    }\n+  if (d[0].f1 != 1)\n+    __builtin_abort ();\n+  return 0;\n+}"}, {"sha": "4aaa98b11ae97faf29723dc2ad2d452aa2104f68", "filename": "gcc/tree-ssa-alias.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/378f8976f26a17a53c5c306f7277971e8e7a6aa7/gcc%2Ftree-ssa-alias.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/378f8976f26a17a53c5c306f7277971e8e7a6aa7/gcc%2Ftree-ssa-alias.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-alias.c?ref=378f8976f26a17a53c5c306f7277971e8e7a6aa7", "patch": "@@ -803,12 +803,13 @@ nonoverlapping_component_refs_of_decl_p (tree ref1, tree ref2)\n       if (type1 != type2 || TREE_CODE (type1) != RECORD_TYPE)\n \t goto may_overlap;\n \n-      /* Different fields of the same record type cannot overlap.  */\n+      /* Different fields of the same record type cannot overlap.\n+\t ??? Bitfields can overlap at RTL level so punt on them.  */\n       if (field1 != field2)\n \t{\n \t  component_refs1.release ();\n \t  component_refs2.release ();\n-\t  return true;\n+\t  return !(DECL_BIT_FIELD (field1) && DECL_BIT_FIELD (field2));\n \t}\n     }\n "}]}