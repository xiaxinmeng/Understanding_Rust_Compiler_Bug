{"sha": "d781a615178f19d07f64ae7acb6767f1b25b4a08", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDc4MWE2MTUxNzhmMTlkMDdmNjRhZTdhY2I2NzY3ZjFiMjViNGEwOA==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-12-21T12:08:32Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-12-21T12:08:32Z"}, "message": "[multiple changes]\n\n2011-12-21  Arnaud Charlet  <charlet@adacore.com>\n\n\t* comperr.adb (Delete_SCIL_Files): Also delete .scilx files.\n\tFix implementation for child packages and package specs.\n\t(Delete_SCIL_Files.Decode_Name_Buffer): New function.\n\n2011-12-21  Robert Dewar  <dewar@adacore.com>\n\n\t* err_vars.ads, a-cdlili.adb, a-cfdlli.ads, prj.adb, prj-nmsc.adb,\n\ta-cbdlli.adb, a-cbdlli.ads, a-cfdlli.adb: Minor reformatting.\n\n2011-12-21  Vincent Pucci  <pucci@adacore.com>\n\n\t* s-diflio.adb, s-diflio.ads, s-diinio.adb, s-diinio.ads,\n\ts-llflex.ads: Fix header.\n\nFrom-SVN: r182578", "tree": {"sha": "26ca1c255dd04777bafb497cf327cb8fe206d9b8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/26ca1c255dd04777bafb497cf327cb8fe206d9b8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d781a615178f19d07f64ae7acb6767f1b25b4a08", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d781a615178f19d07f64ae7acb6767f1b25b4a08", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d781a615178f19d07f64ae7acb6767f1b25b4a08", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d781a615178f19d07f64ae7acb6767f1b25b4a08/comments", "author": null, "committer": null, "parents": [{"sha": "dea1d3dcea17dfb21bf403133dcc6acd0cad6c29", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dea1d3dcea17dfb21bf403133dcc6acd0cad6c29", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dea1d3dcea17dfb21bf403133dcc6acd0cad6c29"}], "stats": {"total": 233, "additions": 160, "deletions": 73}, "files": [{"sha": "3094b46a865f7b66ddf6ca7f9ace8b865649d107", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d781a615178f19d07f64ae7acb6767f1b25b4a08/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d781a615178f19d07f64ae7acb6767f1b25b4a08/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=d781a615178f19d07f64ae7acb6767f1b25b4a08", "patch": "@@ -1,3 +1,19 @@\n+2011-12-21  Arnaud Charlet  <charlet@adacore.com>\n+\n+\t* comperr.adb (Delete_SCIL_Files): Also delete .scilx files.\n+\tFix implementation for child packages and package specs.\n+\t(Delete_SCIL_Files.Decode_Name_Buffer): New function.\n+\n+2011-12-21  Robert Dewar  <dewar@adacore.com>\n+\n+\t* err_vars.ads, a-cdlili.adb, a-cfdlli.ads, prj.adb, prj-nmsc.adb,\n+\ta-cbdlli.adb, a-cbdlli.ads, a-cfdlli.adb: Minor reformatting.\n+\n+2011-12-21  Vincent Pucci  <pucci@adacore.com>\n+\n+\t* s-diflio.adb, s-diflio.ads, s-diinio.adb, s-diinio.ads,\n+\ts-llflex.ads: Fix header.\n+\n 2011-12-21  Thomas Quinot  <quinot@adacore.com>\n \n \t* thread.c, s-oscons-tmplt.c, init.c (pthread_condattr_setclock): For"}, {"sha": "25113d00c2881e05fdfd09be309ee883dce4ad6b", "filename": "gcc/ada/a-cbdlli.adb", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d781a615178f19d07f64ae7acb6767f1b25b4a08/gcc%2Fada%2Fa-cbdlli.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d781a615178f19d07f64ae7acb6767f1b25b4a08/gcc%2Fada%2Fa-cbdlli.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-cbdlli.adb?ref=d781a615178f19d07f64ae7acb6767f1b25b4a08", "patch": "@@ -1537,8 +1537,10 @@ package body Ada.Containers.Bounded_Doubly_Linked_Lists is\n    -- Reference --\n    ---------------\n \n-   function Constant_Reference (Container : List; Position : Cursor)\n-   return Constant_Reference_Type is\n+   function Constant_Reference\n+     (Container : List;\n+      Position  : Cursor) return Constant_Reference_Type\n+   is\n    begin\n       pragma Unreferenced (Container);\n \n@@ -1550,8 +1552,10 @@ package body Ada.Containers.Bounded_Doubly_Linked_Lists is\n          Position.Container.Nodes (Position.Node).Element'Unrestricted_Access);\n    end Constant_Reference;\n \n-   function Reference (Container : List; Position : Cursor)\n-   return Reference_Type is\n+   function Reference\n+     (Container : List;\n+      Position  : Cursor) return Reference_Type\n+   is\n    begin\n       pragma Unreferenced (Container);\n "}, {"sha": "df0633f4c69beaecbe6054a063b627d44c24b57b", "filename": "gcc/ada/a-cbdlli.ads", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d781a615178f19d07f64ae7acb6767f1b25b4a08/gcc%2Fada%2Fa-cbdlli.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d781a615178f19d07f64ae7acb6767f1b25b4a08/gcc%2Fada%2Fa-cbdlli.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-cbdlli.ads?ref=d781a615178f19d07f64ae7acb6767f1b25b4a08", "patch": "@@ -258,12 +258,12 @@ package Ada.Containers.Bounded_Doubly_Linked_Lists is\n    for Reference_Type'Read use Read;\n \n    function Constant_Reference\n-     (Container : List; Position : Cursor)    --  SHOULD BE ALIASED\n-   return Constant_Reference_Type;\n+     (Container : List;       -- SHOULD BE ALIASED ???\n+      Position  : Cursor) return Constant_Reference_Type;\n \n    function Reference\n-     (Container : List; Position : Cursor)    --  SHOULD BE ALIASED\n-   return Reference_Type;\n+     (Container : List;       -- SHOULD BE ALIASED ???\n+      Position  : Cursor) return Reference_Type;\n \n private\n "}, {"sha": "f56578c03649306613ed4c4f1740177b68785cd7", "filename": "gcc/ada/a-cdlili.adb", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d781a615178f19d07f64ae7acb6767f1b25b4a08/gcc%2Fada%2Fa-cdlili.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d781a615178f19d07f64ae7acb6767f1b25b4a08/gcc%2Fada%2Fa-cdlili.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-cdlili.adb?ref=d781a615178f19d07f64ae7acb6767f1b25b4a08", "patch": "@@ -1277,8 +1277,10 @@ package body Ada.Containers.Doubly_Linked_Lists is\n    -- Reference --\n    ---------------\n \n-   function Constant_Reference (Container : List; Position : Cursor)\n-   return Constant_Reference_Type is\n+   function Constant_Reference\n+     (Container : List;\n+      Position  : Cursor) return Constant_Reference_Type\n+   is\n    begin\n       pragma Unreferenced (Container);\n \n@@ -1289,8 +1291,10 @@ package body Ada.Containers.Doubly_Linked_Lists is\n       return (Element => Position.Node.Element'Access);\n    end Constant_Reference;\n \n-   function Reference (Container : List; Position : Cursor)\n-   return Reference_Type is\n+   function Reference\n+     (Container : List;\n+      Position  : Cursor) return Reference_Type\n+   is\n    begin\n       pragma Unreferenced (Container);\n "}, {"sha": "80e6fc0e437a476b55e95f494efe5b02e0157394", "filename": "gcc/ada/a-cfdlli.adb", "status": "modified", "additions": 22, "deletions": 20, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d781a615178f19d07f64ae7acb6767f1b25b4a08/gcc%2Fada%2Fa-cfdlli.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d781a615178f19d07f64ae7acb6767f1b25b4a08/gcc%2Fada%2Fa-cfdlli.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-cfdlli.adb?ref=d781a615178f19d07f64ae7acb6767f1b25b4a08", "patch": "@@ -253,10 +253,11 @@ package body Ada.Containers.Formal_Doubly_Linked_Lists is\n       Capacity : Count_Type := 0) return List\n    is\n       C : constant Count_Type := Count_Type'Max (Source.Capacity, Capacity);\n-      N : Count_Type := 1;\n+      N : Count_Type;\n       P : List (C);\n \n    begin\n+      N := 1;\n       while N <= Source.Capacity loop\n          P.Nodes (N).Prev := Source.Nodes (N).Prev;\n          P.Nodes (N).Next := Source.Nodes (N).Next;\n@@ -604,12 +605,12 @@ package body Ada.Containers.Formal_Doubly_Linked_Lists is\n          Node  : Count_Type := Container.First;\n \n       begin\n-         for I in 2 .. Container.Length loop\n+         for J in 2 .. Container.Length loop\n             if Nodes (Nodes (Node).Next).Element < Nodes (Node).Element then\n                return False;\n+            else\n+               Node := Nodes (Node).Next;\n             end if;\n-\n-            Node := Nodes (Node).Next;\n          end loop;\n \n          return True;\n@@ -749,7 +750,7 @@ package body Ada.Containers.Formal_Doubly_Linked_Lists is\n             end if;\n          end Sort;\n \n-         --  Start of processing for Sort\n+      --  Start of processing for Sort\n \n       begin\n          if Container.Length <= 1 then\n@@ -799,7 +800,6 @@ package body Ada.Containers.Formal_Doubly_Linked_Lists is\n       J : Count_Type;\n \n    begin\n-\n       if Before.Node /= 0 then\n          pragma Assert (Vet (Container, Before), \"bad cursor in Insert\");\n       end if;\n@@ -848,7 +848,6 @@ package body Ada.Containers.Formal_Doubly_Linked_Lists is\n       J : Count_Type;\n \n    begin\n-\n       if Before.Node /= 0 then\n          pragma Assert (Vet (Container, Before), \"bad cursor in Insert\");\n       end if;\n@@ -950,15 +949,15 @@ package body Ada.Containers.Formal_Doubly_Linked_Lists is\n       Process   :\n       not null access procedure (Container : List; Position : Cursor))\n    is\n-      C : List renames Container'Unrestricted_Access.all;\n-      B : Natural renames C.Busy;\n-\n-      Node : Count_Type := Container.First;\n+      C    : List renames Container'Unrestricted_Access.all;\n+      B    : Natural renames C.Busy;\n+      Node : Count_Type;\n \n    begin\n       B := B + 1;\n \n       begin\n+         Node := Container.First;\n          while Node /= 0 loop\n             Process (Container, (Node => Node));\n             Node := Container.Nodes (Node).Next;\n@@ -1235,7 +1234,6 @@ package body Ada.Containers.Formal_Doubly_Linked_Lists is\n       Position : Cursor) return Cursor\n    is\n    begin\n-\n       return Next (Object.Container.all, Position);\n    end Next;\n \n@@ -1288,7 +1286,6 @@ package body Ada.Containers.Formal_Doubly_Linked_Lists is\n       Position : Cursor) return Cursor\n    is\n    begin\n-\n       return Previous (Object.Container.all, Position);\n    end Previous;\n \n@@ -1372,10 +1369,11 @@ package body Ada.Containers.Formal_Doubly_Linked_Lists is\n    -- Reference --\n    ---------------\n \n-   function Constant_Reference (Container : List; Position : Cursor)\n-   return Constant_Reference_Type is\n+   function Constant_Reference\n+     (Container : List;\n+      Position  : Cursor) return Constant_Reference_Type\n+   is\n    begin\n-\n       if not Has_Element (Container, Position) then\n          raise Constraint_Error with \"Position cursor has no element\";\n       end if;\n@@ -1393,7 +1391,6 @@ package body Ada.Containers.Formal_Doubly_Linked_Lists is\n       New_Item  : Element_Type)\n    is\n    begin\n-\n       if not Has_Element (Container, Position) then\n          raise Constraint_Error with \"Position cursor has no element\";\n       end if;\n@@ -1411,6 +1408,10 @@ package body Ada.Containers.Formal_Doubly_Linked_Lists is\n       begin\n          N (Position.Node).Element := New_Item;\n       end;\n+\n+      --  Above is peculiar, why not simply\n+      --  Container.Nodes (Position.Node).Element := New_Item ???\n+\n    end Replace_Element;\n \n    ----------------------\n@@ -1462,7 +1463,7 @@ package body Ada.Containers.Formal_Doubly_Linked_Lists is\n          end if;\n       end Swap;\n \n-      --  Start of processing for Reverse_Elements\n+   --  Start of processing for Reverse_Elements\n \n    begin\n       if Container.Length <= 1 then\n@@ -1511,6 +1512,7 @@ package body Ada.Containers.Formal_Doubly_Linked_Lists is\n       Position  : Cursor := No_Element) return Cursor\n    is\n       CFirst : Count_Type := Position.Node;\n+\n    begin\n       if CFirst = 0 then\n          CFirst := Container.First;\n@@ -1542,12 +1544,13 @@ package body Ada.Containers.Formal_Doubly_Linked_Lists is\n       C : List renames Container'Unrestricted_Access.all;\n       B : Natural renames C.Busy;\n \n-      Node : Count_Type := Container.Last;\n+      Node : Count_Type;\n \n    begin\n       B := B + 1;\n \n       begin\n+         Node := Container.Last;\n          while Node /= 0 loop\n             Process (Container, (Node => Node));\n             Node := Container.Nodes (Node).Prev;\n@@ -1649,7 +1652,6 @@ package body Ada.Containers.Formal_Doubly_Linked_Lists is\n       Target_Position : Cursor;\n \n    begin\n-\n       if Target'Address = Source'Address then\n          Splice (Target, Before, Position);\n          return;"}, {"sha": "8bf8a3d61a36c333cefd8171484d82160fe2c6ed", "filename": "gcc/ada/a-cfdlli.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d781a615178f19d07f64ae7acb6767f1b25b4a08/gcc%2Fada%2Fa-cfdlli.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d781a615178f19d07f64ae7acb6767f1b25b4a08/gcc%2Fada%2Fa-cfdlli.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-cfdlli.ads?ref=d781a615178f19d07f64ae7acb6767f1b25b4a08", "patch": "@@ -246,8 +246,8 @@ package Ada.Containers.Formal_Doubly_Linked_Lists is\n       Implicit_Dereference => Element;\n \n    function Constant_Reference\n-     (Container : List; Position : Cursor)    --  SHOULD BE ALIASED\n-   return Constant_Reference_Type;\n+     (Container : List;      --  SHOULD BE ALIASED ???\n+      Position  : Cursor)   return Constant_Reference_Type;\n \n    function Strict_Equal (Left, Right : List) return Boolean;\n    --  Strict_Equal returns True if the containers are physically equal, i.e."}, {"sha": "099dc8521fa591fcad43facd53a31555feba283b", "filename": "gcc/ada/comperr.adb", "status": "modified", "additions": 64, "deletions": 8, "changes": 72, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d781a615178f19d07f64ae7acb6767f1b25b4a08/gcc%2Fada%2Fcomperr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d781a615178f19d07f64ae7acb6767f1b25b4a08/gcc%2Fada%2Fcomperr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fcomperr.adb?ref=d781a615178f19d07f64ae7acb6767f1b25b4a08", "patch": "@@ -438,10 +438,41 @@ package body Comperr is\n    -----------------------\n \n    procedure Delete_SCIL_Files is\n-      Main    : Node_Id;\n-      Success : Boolean;\n+      Main      : Node_Id;\n+      Unit_Name : Node_Id;\n+      Success   : Boolean;\n       pragma Unreferenced (Success);\n \n+      procedure Decode_Name_Buffer;\n+      --  Replace \"__\" by \".\" in Name_Buffer, and adjust Name_Len accordingly\n+\n+      ------------------------\n+      -- Decode_Name_Buffer --\n+      ------------------------\n+\n+      procedure Decode_Name_Buffer is\n+         J : Natural := 1;\n+         K : Natural := 0;\n+      begin\n+         while J <= Name_Len loop\n+            K := K + 1;\n+\n+            if J < Name_Len\n+              and then Name_Buffer (J) = '_'\n+              and then Name_Buffer (J + 1) = '_'\n+            then\n+               Name_Buffer (K) := '.';\n+               J := J + 1;\n+            else\n+               Name_Buffer (K) := Name_Buffer (J);\n+            end if;\n+\n+            J := J + 1;\n+         end loop;\n+\n+         Name_Len := K;\n+      end Decode_Name_Buffer;\n+\n    begin\n       --  If parsing was not successful, no Main_Unit is available, so return\n       --  immediately.\n@@ -451,20 +482,45 @@ package body Comperr is\n       end if;\n \n       --  Retrieve unit name, and remove old versions of SCIL/<unit>.scil and\n-      --  SCIL/<unit>__body.scil\n+      --  SCIL/<unit>__body.scil, ditto for .scilx files.\n \n       Main := Unit (Cunit (Main_Unit));\n \n-      if Nkind (Main) = N_Subprogram_Body then\n-         Get_Name_String (Chars (Defining_Unit_Name (Specification (Main))));\n-      else\n-         Get_Name_String (Chars (Defining_Unit_Name (Main)));\n-      end if;\n+      case Nkind (Main) is\n+         when N_Subprogram_Body | N_Package_Declaration =>\n+            Unit_Name := Defining_Unit_Name (Specification (Main));\n+\n+         when N_Package_Body =>\n+            Unit_Name := Corresponding_Spec (Main);\n+\n+         when others =>\n+            --  Should never happen, but can be ignored in production\n+            pragma Assert (False);\n+            return;\n+      end case;\n+\n+      case Nkind (Unit_Name) is\n+         when N_Defining_Identifier =>\n+            Get_Name_String (Chars (Unit_Name));\n+\n+         when N_Defining_Program_Unit_Name =>\n+            Get_Name_String (Chars (Defining_Identifier (Unit_Name)));\n+            Decode_Name_Buffer;\n+\n+         when others =>\n+            --  Should never happen, but can be ignored in production\n+            pragma Assert (False);\n+            return;\n+      end case;\n \n       Delete_File\n         (\"SCIL/\" & Name_Buffer (1 .. Name_Len) & \".scil\", Success);\n+      Delete_File\n+        (\"SCIL/\" & Name_Buffer (1 .. Name_Len) & \".scilx\", Success);\n       Delete_File\n         (\"SCIL/\" & Name_Buffer (1 .. Name_Len) & \"__body.scil\", Success);\n+      Delete_File\n+        (\"SCIL/\" & Name_Buffer (1 .. Name_Len) & \"__body.scilx\", Success);\n    end Delete_SCIL_Files;\n \n    -----------------"}, {"sha": "e17e1fe95731bd8db52a6466fbf9712eaf8304e6", "filename": "gcc/ada/err_vars.ads", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d781a615178f19d07f64ae7acb6767f1b25b4a08/gcc%2Fada%2Ferr_vars.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d781a615178f19d07f64ae7acb6767f1b25b4a08/gcc%2Fada%2Ferr_vars.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ferr_vars.ads?ref=d781a615178f19d07f64ae7acb6767f1b25b4a08", "patch": "@@ -145,7 +145,9 @@ package Err_Vars is\n    --  Used if current message contains a < insertion character to indicate\n    --  if the current message is a warning message. Must be set appropriately\n    --  before any call to Error_Msg_xxx with a < insertion character present.\n-   --  Setting is irrelevant if no < insertion character is present.\n+   --  Setting is irrelevant if no < insertion character is present. Note\n+   --  that it is not necessary to reset this after using it, since the proper\n+   --  procedure is always to set it before issuing such a message.\n \n    Error_Msg_String : String (1 .. 4096);\n    Error_Msg_Strlen : Natural;"}, {"sha": "b018026d94634ccc213fa7ac0497bedf99b25e0f", "filename": "gcc/ada/prj-nmsc.adb", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d781a615178f19d07f64ae7acb6767f1b25b4a08/gcc%2Fada%2Fprj-nmsc.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d781a615178f19d07f64ae7acb6767f1b25b4a08/gcc%2Fada%2Fprj-nmsc.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-nmsc.adb?ref=d781a615178f19d07f64ae7acb6767f1b25b4a08", "patch": "@@ -1042,7 +1042,6 @@ package body Prj.Nmsc is\n         (Project : Project_Id;\n          Data    : in out Tree_Processing_Data)\n       is\n-\n          procedure Check_Not_Defined (Name : Name_Id);\n          --  Report an error if Var is defined\n \n@@ -1065,6 +1064,8 @@ package body Prj.Nmsc is\n             end if;\n          end Check_Not_Defined;\n \n+      --  Start of processing for Check_Not_Defined\n+\n       begin\n          Check_Not_Defined (Snames.Name_Library_Dir);\n          Check_Not_Defined (Snames.Name_Library_Interface);\n@@ -1116,9 +1117,9 @@ package body Prj.Nmsc is\n \n       Check_Configuration (Project, Data);\n \n+      --  For aggregate project checks that no library attributes are defined\n+\n       if Project.Qualifier = Aggregate then\n-         --  For aggregate project checks that no library attributes are\n-         --  defined.\n          Check_Aggregate (Project, Data);\n \n       else"}, {"sha": "97b23bd413e9657c231f36788096b3126ac4a752", "filename": "gcc/ada/prj.adb", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d781a615178f19d07f64ae7acb6767f1b25b4a08/gcc%2Fada%2Fprj.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d781a615178f19d07f64ae7acb6767f1b25b4a08/gcc%2Fada%2Fprj.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj.adb?ref=d781a615178f19d07f64ae7acb6767f1b25b4a08", "patch": "@@ -390,8 +390,9 @@ package body Prj is\n    -------------------------\n \n    function Is_Allowed_Language (Name : Name_Id) return Boolean is\n-      R : Restricted_Lang_Access := Restricted_Languages;\n+      R    : Restricted_Lang_Access := Restricted_Languages;\n       Lang : constant String := Get_Name_String (Name);\n+\n    begin\n       if R = null then\n          return True;\n@@ -1633,6 +1634,7 @@ package body Prj is\n          else\n             Write_Line (\" \"\"\" & Get_Name_String (Str2) & '\"');\n          end if;\n+\n          Set_Standard_Output;\n       end if;\n    end Debug_Output;"}, {"sha": "e13abf915502909ea53d12dd1eb59f6ced659e76", "filename": "gcc/ada/s-diflio.adb", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d781a615178f19d07f64ae7acb6767f1b25b4a08/gcc%2Fada%2Fs-diflio.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d781a615178f19d07f64ae7acb6767f1b25b4a08/gcc%2Fada%2Fs-diflio.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-diflio.adb?ref=d781a615178f19d07f64ae7acb6767f1b25b4a08", "patch": "@@ -1,14 +1,14 @@\n ------------------------------------------------------------------------------\n --                                                                          --\n---                  GNAT RUN-TIME LIBRARY (GNARL) COMPONENTS                --\n+--                         GNAT RUN-TIME COMPONENTS                         --\n --                                                                          --\n --                    S Y S T E M . D I M _ F L O A T _ I O                 --\n --                                                                          --\n---                                  B o d y                                 --\n+--                                 B o d y                                  --\n --                                                                          --\n --            Copyright (C) 2011, Free Software Foundation, Inc.            --\n --                                                                          --\n--- GNARL is free software; you can  redistribute it  and/or modify it under --\n+-- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n -- ware  Foundation;  either version 3,  or (at your option) any later ver- --\n -- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --\n@@ -24,8 +24,8 @@\n -- see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see    --\n -- <http://www.gnu.org/licenses/>.                                          --\n --                                                                          --\n--- GNARL was developed by the GNARL team at Florida State University.       --\n--- Extensive contributions were provided by Ada Core Technologies, Inc.     --\n+-- GNAT was originally developed  by the GNAT team at  New York University. --\n+-- Extensive contributions were provided by Ada Core Technologies Inc.      --\n --                                                                          --\n ------------------------------------------------------------------------------\n "}, {"sha": "3e04ea105ddf20879ecd14518385768bccfd209f", "filename": "gcc/ada/s-diflio.ads", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d781a615178f19d07f64ae7acb6767f1b25b4a08/gcc%2Fada%2Fs-diflio.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d781a615178f19d07f64ae7acb6767f1b25b4a08/gcc%2Fada%2Fs-diflio.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-diflio.ads?ref=d781a615178f19d07f64ae7acb6767f1b25b4a08", "patch": "@@ -1,14 +1,14 @@\n ------------------------------------------------------------------------------\n --                                                                          --\n---                  GNAT RUN-TIME LIBRARY (GNARL) COMPONENTS                --\n+--                         GNAT RUN-TIME COMPONENTS                         --\n --                                                                          --\n --                    S Y S T E M . D I M _ F L O A T _ I O                 --\n --                                                                          --\n---                                  S p e c                                 --\n+--                                 S p e c                                  --\n --                                                                          --\n --            Copyright (C) 2011, Free Software Foundation, Inc.            --\n --                                                                          --\n--- GNARL is free software; you can  redistribute it  and/or modify it under --\n+-- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n -- ware  Foundation;  either version 3,  or (at your option) any later ver- --\n -- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --\n@@ -24,8 +24,8 @@\n -- see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see    --\n -- <http://www.gnu.org/licenses/>.                                          --\n --                                                                          --\n--- GNARL was developed by the GNARL team at Florida State University.       --\n--- Extensive contributions were provided by Ada Core Technologies, Inc.     --\n+-- GNAT was originally developed  by the GNAT team at  New York University. --\n+-- Extensive contributions were provided by Ada Core Technologies Inc.      --\n --                                                                          --\n ------------------------------------------------------------------------------\n "}, {"sha": "e8d8f5d7f957246a9df2a753fcec5d7610d7d0c8", "filename": "gcc/ada/s-diinio.adb", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d781a615178f19d07f64ae7acb6767f1b25b4a08/gcc%2Fada%2Fs-diinio.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d781a615178f19d07f64ae7acb6767f1b25b4a08/gcc%2Fada%2Fs-diinio.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-diinio.adb?ref=d781a615178f19d07f64ae7acb6767f1b25b4a08", "patch": "@@ -1,14 +1,14 @@\n ------------------------------------------------------------------------------\n --                                                                          --\n---                  GNAT RUN-TIME LIBRARY (GNARL) COMPONENTS                --\n+--                         GNAT RUN-TIME COMPONENTS                         --\n --                                                                          --\n --                  S Y S T E M . D I M _ I N T E G E R _ I O               --\n --                                                                          --\n---                                  B o d y                                 --\n+--                                 B o d y                                  --\n --                                                                          --\n --            Copyright (C) 2011, Free Software Foundation, Inc.            --\n --                                                                          --\n--- GNARL is free software; you can  redistribute it  and/or modify it under --\n+-- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n -- ware  Foundation;  either version 3,  or (at your option) any later ver- --\n -- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --\n@@ -24,8 +24,8 @@\n -- see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see    --\n -- <http://www.gnu.org/licenses/>.                                          --\n --                                                                          --\n--- GNARL was developed by the GNARL team at Florida State University.       --\n--- Extensive contributions were provided by Ada Core Technologies, Inc.     --\n+-- GNAT was originally developed  by the GNAT team at  New York University. --\n+-- Extensive contributions were provided by Ada Core Technologies Inc.      --\n --                                                                          --\n ------------------------------------------------------------------------------\n "}, {"sha": "00db9afc634cf76fb86af878609a20f5adbc6fc7", "filename": "gcc/ada/s-diinio.ads", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d781a615178f19d07f64ae7acb6767f1b25b4a08/gcc%2Fada%2Fs-diinio.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d781a615178f19d07f64ae7acb6767f1b25b4a08/gcc%2Fada%2Fs-diinio.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-diinio.ads?ref=d781a615178f19d07f64ae7acb6767f1b25b4a08", "patch": "@@ -1,14 +1,14 @@\n ------------------------------------------------------------------------------\n --                                                                          --\n---                  GNAT RUN-TIME LIBRARY (GNARL) COMPONENTS                --\n+--                         GNAT RUN-TIME COMPONENTS                         --\n --                                                                          --\n --                  S Y S T E M . D I M _ I N T E G E R _ I O               --\n --                                                                          --\n---                                  S p e c                                 --\n+--                                 S p e c                                  --\n --                                                                          --\n --            Copyright (C) 2011, Free Software Foundation, Inc.            --\n --                                                                          --\n--- GNARL is free software; you can  redistribute it  and/or modify it under --\n+-- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n -- ware  Foundation;  either version 3,  or (at your option) any later ver- --\n -- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --\n@@ -24,8 +24,8 @@\n -- see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see    --\n -- <http://www.gnu.org/licenses/>.                                          --\n --                                                                          --\n--- GNARL was developed by the GNARL team at Florida State University.       --\n--- Extensive contributions were provided by Ada Core Technologies, Inc.     --\n+-- GNAT was originally developed  by the GNAT team at  New York University. --\n+-- Extensive contributions were provided by Ada Core Technologies Inc.      --\n --                                                                          --\n ------------------------------------------------------------------------------\n "}, {"sha": "c47d49601fb116fcfd0f0939e45d4fb6969768eb", "filename": "gcc/ada/s-llflex.ads", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d781a615178f19d07f64ae7acb6767f1b25b4a08/gcc%2Fada%2Fs-llflex.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d781a615178f19d07f64ae7acb6767f1b25b4a08/gcc%2Fada%2Fs-llflex.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-llflex.ads?ref=d781a615178f19d07f64ae7acb6767f1b25b4a08", "patch": "@@ -1,14 +1,14 @@\n ------------------------------------------------------------------------------\n --                                                                          --\n---                  GNAT RUN-TIME LIBRARY (GNARL) COMPONENTS                --\n+--                         GNAT RUN-TIME COMPONENTS                         --\n --                                                                          --\n --          S Y S T E M . L O N G _ L O N G _ F L O A T _ E X P O N         --\n --                                                                          --\n---                                  S p e c                                 --\n+--                                 S p e c                                  --\n --                                                                          --\n---             Copyright (C) 2011, Free Software Foundation, Inc.           --\n+--            Copyright (C) 2011, Free Software Foundation, Inc.            --\n --                                                                          --\n--- GNARL is free software; you can  redistribute it  and/or modify it under --\n+-- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n -- ware  Foundation;  either version 3,  or (at your option) any later ver- --\n -- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --\n@@ -24,8 +24,8 @@\n -- see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see    --\n -- <http://www.gnu.org/licenses/>.                                          --\n --                                                                          --\n--- GNARL was developed by the GNARL team at Florida State University.       --\n--- Extensive contributions were provided by Ada Core Technologies, Inc.     --\n+-- GNAT was originally developed  by the GNAT team at  New York University. --\n+-- Extensive contributions were provided by Ada Core Technologies Inc.      --\n --                                                                          --\n ------------------------------------------------------------------------------\n "}]}