{"sha": "7ca78bba4d3036c0a7257fcebc7c5ba79ad0dcad", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2NhNzhiYmE0ZDMwMzZjMGE3MjU3ZmNlYmM3YzViYTc5YWQwZGNhZA==", "commit": {"author": {"name": "Robert Dewar", "email": "dewar@adacore.com", "date": "2009-04-10T13:44:18Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-04-10T13:44:18Z"}, "message": "einfo.ads, einfo.adb (Postcondition_Proc): New attribute for procedures.\n\n2009-04-10  Robert Dewar  <dewar@adacore.com>\n\n\t* einfo.ads, einfo.adb (Postcondition_Proc): New attribute for\n\tprocedures.\n\n\t* sem_ch6.adb: Minor code clean up.\n\nFrom-SVN: r145903", "tree": {"sha": "9c47246fed8f63f26708ed53c151cd7fe5b02a6c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9c47246fed8f63f26708ed53c151cd7fe5b02a6c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7ca78bba4d3036c0a7257fcebc7c5ba79ad0dcad", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7ca78bba4d3036c0a7257fcebc7c5ba79ad0dcad", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7ca78bba4d3036c0a7257fcebc7c5ba79ad0dcad", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7ca78bba4d3036c0a7257fcebc7c5ba79ad0dcad/comments", "author": null, "committer": null, "parents": [{"sha": "362fcef348df57c6adf6480b32c8564fb79a301a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/362fcef348df57c6adf6480b32c8564fb79a301a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/362fcef348df57c6adf6480b32c8564fb79a301a"}], "stats": {"total": 47, "additions": 47, "deletions": 0}, "files": [{"sha": "20a79aaa8818afa5969981e935e968bd0165341a", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ca78bba4d3036c0a7257fcebc7c5ba79ad0dcad/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ca78bba4d3036c0a7257fcebc7c5ba79ad0dcad/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=7ca78bba4d3036c0a7257fcebc7c5ba79ad0dcad", "patch": "@@ -1,3 +1,10 @@\n+2009-04-10  Robert Dewar  <dewar@adacore.com>\n+\n+\t* einfo.ads, einfo.adb (Postcondition_Proc): New attribute for\n+\tprocedures.\n+\n+\t* sem_ch6.adb: Minor code clean up.\n+\n 2009-04-10  Robert Dewar  <dewar@adacore.com>\n \n \t* mlib-tgt-specific-xi.adb: Minor reformatting"}, {"sha": "2587dac63f9955a525c414ae4064a1b13d77ca47", "filename": "gcc/ada/einfo.adb", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ca78bba4d3036c0a7257fcebc7c5ba79ad0dcad/gcc%2Fada%2Feinfo.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ca78bba4d3036c0a7257fcebc7c5ba79ad0dcad/gcc%2Fada%2Feinfo.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.adb?ref=7ca78bba4d3036c0a7257fcebc7c5ba79ad0dcad", "patch": "@@ -77,6 +77,7 @@ package body Einfo is\n    --    Hiding_Loop_Variable            Node8\n    --    Mechanism                       Uint8 (but returns Mechanism_Type)\n    --    Normalized_First_Bit            Uint8\n+   --    Postcondition_Proc              Node8\n    --    Return_Applies_To               Node8\n \n    --    Class_Wide_Type                 Node9\n@@ -2355,6 +2356,12 @@ package body Einfo is\n       return Node19 (Id);\n    end Parent_Subtype;\n \n+   function Postcondition_Proc (Id : E) return E is\n+   begin\n+      pragma Assert (Ekind (Id) = E_Procedure);\n+      return Node8 (Id);\n+   end Postcondition_Proc;\n+\n    function Primitive_Operations (Id : E) return L is\n    begin\n       pragma Assert (Is_Tagged_Type (Id));\n@@ -4824,6 +4831,12 @@ package body Einfo is\n       Set_Node19 (Id, V);\n    end Set_Parent_Subtype;\n \n+   procedure Set_Postcondition_Proc (Id : E; V : E) is\n+   begin\n+      pragma Assert (Ekind (Id) = E_Procedure);\n+      Set_Node8 (Id, V);\n+   end Set_Postcondition_Proc;\n+\n    procedure Set_Primitive_Operations (Id : E; V : L) is\n    begin\n       pragma Assert (Is_Tagged_Type (Id));\n@@ -7175,6 +7188,9 @@ package body Einfo is\n          when E_Package                                    =>\n             Write_Str (\"Dependent_Instances\");\n \n+         when E_Procedure                                  =>\n+            Write_Str (\"Postcondition_Proc\");\n+\n          when E_Return_Statement                           =>\n             Write_Str (\"Return_Applies_To\");\n "}, {"sha": "d589a60e6d10575dd865445ea3532602ab774373", "filename": "gcc/ada/einfo.ads", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ca78bba4d3036c0a7257fcebc7c5ba79ad0dcad/gcc%2Fada%2Feinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ca78bba4d3036c0a7257fcebc7c5ba79ad0dcad/gcc%2Fada%2Feinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.ads?ref=7ca78bba4d3036c0a7257fcebc7c5ba79ad0dcad", "patch": "@@ -3104,6 +3104,12 @@ package Einfo is\n --       Present in E_Record_Type. Points to the subtype to use for a\n --       field that references the parent record.\n \n+--    Postcondition_Proc (Node8)\n+--       Present only in procedure entities, saves the entity of the generated\n+--       postcondition proc if one is present, otherwise is set to Empty. Used\n+--       to generate the call to this procedure in case the expander inserts\n+--       implicit return statements.\n+\n --    Primitive_Operations (Elist15)\n --       Present in tagged record types and subtypes and in tagged private\n --       types. Points to an element list of entities for primitive operations\n@@ -5139,6 +5145,7 @@ package Einfo is\n \n    --  E_Procedure\n    --  E_Generic_Procedure\n+   --    Postcondition_Proc                  (Node8)\n    --    Renaming_Map                        (Uint9)\n    --    Handler_Records                     (List10)   (non-generic case only)\n    --    Protected_Body_Subprogram           (Node11)\n@@ -5923,6 +5930,7 @@ package Einfo is\n    function Package_Instantiation               (Id : E) return N;\n    function Packed_Array_Type                   (Id : E) return E;\n    function Parent_Subtype                      (Id : E) return E;\n+   function Postcondition_Proc                  (Id : E) return E;\n    function Primitive_Operations                (Id : E) return L;\n    function Prival                              (Id : E) return E;\n    function Prival_Link                         (Id : E) return E;\n@@ -6473,6 +6481,7 @@ package Einfo is\n    procedure Set_Package_Instantiation           (Id : E; V : N);\n    procedure Set_Packed_Array_Type               (Id : E; V : E);\n    procedure Set_Parent_Subtype                  (Id : E; V : E);\n+   procedure Set_Postcondition_Proc              (Id : E; V : E);\n    procedure Set_Primitive_Operations            (Id : E; V : L);\n    procedure Set_Prival                          (Id : E; V : E);\n    procedure Set_Prival_Link                     (Id : E; V : E);\n@@ -7164,6 +7173,7 @@ package Einfo is\n    pragma Inline (Packed_Array_Type);\n    pragma Inline (Parameter_Mode);\n    pragma Inline (Parent_Subtype);\n+   pragma Inline (Postcondition_Proc);\n    pragma Inline (Primitive_Operations);\n    pragma Inline (Prival);\n    pragma Inline (Prival_Link);\n@@ -7548,6 +7558,7 @@ package Einfo is\n    pragma Inline (Set_Package_Instantiation);\n    pragma Inline (Set_Packed_Array_Type);\n    pragma Inline (Set_Parent_Subtype);\n+   pragma Inline (Set_Postcondition_Proc);\n    pragma Inline (Set_Primitive_Operations);\n    pragma Inline (Set_Prival);\n    pragma Inline (Set_Prival_Link);"}, {"sha": "5d43a14c5dfbccc7fc5c65b2644614b6826afd6f", "filename": "gcc/ada/sem_ch6.adb", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ca78bba4d3036c0a7257fcebc7c5ba79ad0dcad/gcc%2Fada%2Fsem_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ca78bba4d3036c0a7257fcebc7c5ba79ad0dcad/gcc%2Fada%2Fsem_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch6.adb?ref=7ca78bba4d3036c0a7257fcebc7c5ba79ad0dcad", "patch": "@@ -1933,6 +1933,8 @@ package body Sem_Ch6 is\n             Set_Convention (Spec_Id, Convention_Protected);\n          end;\n \n+      --  Case where a separate spec is present\n+\n       elsif Present (Spec_Id) then\n          Spec_Decl := Unit_Declaration_Node (Spec_Id);\n          Verify_Overriding_Indicator;\n@@ -1958,8 +1960,19 @@ package body Sem_Ch6 is\n             Set_Has_Delayed_Freeze (Spec_Id);\n             Insert_Actions (N, Freeze_Entity (Spec_Id, Loc));\n          end if;\n+\n+      --  The missing else branch here is for the case where there is no\n+      --  separate spec and either we don't have a protected operation, or the\n+      --  node is compiler generated. Is it really right that nothing needs to\n+      --  be done in this case. At the very least a comment is appropriate as\n+      --  to why nothing needs to be done in this case ???\n+\n+      else\n+         null;\n       end if;\n \n+      --  Mark presence of postcondition proc in current scope\n+\n       if Chars (Body_Id) = Name_uPostconditions then\n          Set_Has_Postconditions (Current_Scope);\n       end if;"}]}