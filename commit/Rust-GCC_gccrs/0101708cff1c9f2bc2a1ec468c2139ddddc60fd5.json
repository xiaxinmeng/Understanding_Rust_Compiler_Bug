{"sha": "0101708cff1c9f2bc2a1ec468c2139ddddc60fd5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDEwMTcwOGNmZjFjOWYyYmMyYTFlYzQ2OGMyMTM5ZGRkZGM2MGZkNQ==", "commit": {"author": {"name": "Adrian Straetling", "email": "straetling@de.ibm.com", "date": "2005-12-14T16:05:01Z"}, "committer": {"name": "Ulrich Weigand", "email": "uweigand@gcc.gnu.org", "date": "2005-12-14T16:05:01Z"}, "message": "s390.md (\"atype\", \"length\"): Rewrite.\n\n2005-12-14  Adrian Straetling  <straetling@de.ibm.com>\n\n\t* config/s390/s390.md (\"atype\", \"length\"): Rewrite.\n\t(\"*insv<mode>_reg_imm\", \"*insv<mode>_reg_extimm\"): Add mode.\n\nFrom-SVN: r108514", "tree": {"sha": "4ed819cec5256c16ccc4336160860b39147fd059", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4ed819cec5256c16ccc4336160860b39147fd059"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0101708cff1c9f2bc2a1ec468c2139ddddc60fd5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0101708cff1c9f2bc2a1ec468c2139ddddc60fd5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0101708cff1c9f2bc2a1ec468c2139ddddc60fd5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0101708cff1c9f2bc2a1ec468c2139ddddc60fd5/comments", "author": null, "committer": null, "parents": [{"sha": "f41d6665b2a2baa315878fc48549e53575625136", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f41d6665b2a2baa315878fc48549e53575625136", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f41d6665b2a2baa315878fc48549e53575625136"}], "stats": {"total": 49, "additions": 12, "deletions": 37}, "files": [{"sha": "2a56930e4860baf115747a685f70ad7be56c9dbc", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0101708cff1c9f2bc2a1ec468c2139ddddc60fd5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0101708cff1c9f2bc2a1ec468c2139ddddc60fd5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0101708cff1c9f2bc2a1ec468c2139ddddc60fd5", "patch": "@@ -1,3 +1,8 @@\n+2005-12-14  Adrian Straetling  <straetling@de.ibm.com>\n+\n+\t* config/s390/s390.md (\"atype\", \"length\"): Rewrite.\n+\t(\"*insv<mode>_reg_imm\", \"*insv<mode>_reg_extimm\"): Add mode.\n+\n 2005-12-14  Sebastian Pop  <pop@cri.ensmp.fr>\n \n \t* tree-ssa-operands.c (build_ssa_operands): Update leading comment."}, {"sha": "dab9b58eefe833ddc01801655c35f00da765826e", "filename": "gcc/config/s390/s390.md", "status": "modified", "additions": 7, "deletions": 37, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0101708cff1c9f2bc2a1ec468c2139ddddc60fd5/gcc%2Fconfig%2Fs390%2Fs390.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0101708cff1c9f2bc2a1ec468c2139ddddc60fd5/gcc%2Fconfig%2Fs390%2Fs390.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390.md?ref=0101708cff1c9f2bc2a1ec468c2139ddddc60fd5", "patch": "@@ -213,45 +213,15 @@\n ;;   reg: Instruction does not use the agen unit\n \n (define_attr \"atype\" \"agen,reg\"\n-  (cond [(eq_attr \"op_type\" \"E\")   (const_string \"reg\")\n-         (eq_attr \"op_type\" \"RR\")  (const_string \"reg\")\n-         (eq_attr \"op_type\" \"RX\")  (const_string \"agen\")\n-         (eq_attr \"op_type\" \"RI\")  (const_string \"reg\")\n-         (eq_attr \"op_type\" \"RRE\") (const_string \"reg\")\n-         (eq_attr \"op_type\" \"RS\")  (const_string \"agen\")\n-         (eq_attr \"op_type\" \"RSI\") (const_string \"agen\")\n-         (eq_attr \"op_type\" \"S\")   (const_string \"agen\")\n-         (eq_attr \"op_type\" \"SI\")  (const_string \"agen\")\n-         (eq_attr \"op_type\" \"SS\")  (const_string \"agen\")\n-         (eq_attr \"op_type\" \"SSE\") (const_string \"agen\")\n-         (eq_attr \"op_type\" \"RXE\") (const_string \"agen\")\n-         (eq_attr \"op_type\" \"RSE\") (const_string \"agen\")\n-         (eq_attr \"op_type\" \"RIL\") (const_string \"agen\")\n-         (eq_attr \"op_type\" \"RXY\") (const_string \"agen\")\n-         (eq_attr \"op_type\" \"RSY\") (const_string \"agen\")\n-         (eq_attr \"op_type\" \"SIY\") (const_string \"agen\")]\n-    (const_string \"agen\")))\n+  (if_then_else (eq_attr \"op_type\" \"E,RR,RI,RRE\")  \n+\t\t(const_string \"reg\")\n+\t\t(const_string \"agen\")))\n \n ;; Length in bytes.\n \n (define_attr \"length\" \"\"\n-  (cond [(eq_attr \"op_type\" \"E\")   (const_int 2)\n-         (eq_attr \"op_type\" \"RR\")  (const_int 2)\n-         (eq_attr \"op_type\" \"RX\")  (const_int 4)\n-         (eq_attr \"op_type\" \"RI\")  (const_int 4)\n-         (eq_attr \"op_type\" \"RRE\") (const_int 4)\n-         (eq_attr \"op_type\" \"RS\")  (const_int 4)\n-         (eq_attr \"op_type\" \"RSI\") (const_int 4)\n-         (eq_attr \"op_type\" \"S\")   (const_int 4)\n-         (eq_attr \"op_type\" \"SI\")  (const_int 4)\n-         (eq_attr \"op_type\" \"SS\")  (const_int 6)\n-         (eq_attr \"op_type\" \"SSE\") (const_int 6)\n-         (eq_attr \"op_type\" \"RXE\") (const_int 6)\n-         (eq_attr \"op_type\" \"RSE\") (const_int 6)\n-         (eq_attr \"op_type\" \"RIL\") (const_int 6)\n-         (eq_attr \"op_type\" \"RXY\") (const_int 6)\n-         (eq_attr \"op_type\" \"RSY\") (const_int 6)\n-         (eq_attr \"op_type\" \"SIY\") (const_int 6)]\n+  (cond [(eq_attr \"op_type\" \"E,RR\")\t\t      (const_int 2)\n+         (eq_attr \"op_type\" \"RX,RI,RRE,RS,RSI,S,SI\")  (const_int 4)]\n     (const_int 6)))\n \n \n@@ -2615,7 +2585,7 @@\n   [(set (zero_extract:P (match_operand:P 0 \"register_operand\" \"+d\")\n \t\t\t(const_int 16)\n \t\t\t(match_operand 1 \"const_int_operand\" \"n\"))\n-\t(match_operand 2 \"const_int_operand\" \"n\"))]\n+\t(match_operand:P 2 \"const_int_operand\" \"n\"))]\n   \"TARGET_ZARCH\n    && INTVAL (operands[1]) >= 0\n    && INTVAL (operands[1]) < BITS_PER_WORD\n@@ -2636,7 +2606,7 @@\n   [(set (zero_extract:P (match_operand:P 0 \"register_operand\" \"+d\")\n \t\t\t(const_int 32)\n \t\t\t(match_operand 1 \"const_int_operand\" \"n\"))\n-\t(match_operand 2 \"const_int_operand\" \"n\"))]\n+\t(match_operand:P 2 \"const_int_operand\" \"n\"))]\n   \"TARGET_EXTIMM\n    && INTVAL (operands[1]) >= 0\n    && INTVAL (operands[1]) < BITS_PER_WORD"}]}