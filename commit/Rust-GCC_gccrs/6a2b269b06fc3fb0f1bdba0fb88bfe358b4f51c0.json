{"sha": "6a2b269b06fc3fb0f1bdba0fb88bfe358b4f51c0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmEyYjI2OWIwNmZjM2ZiMGYxYmRiYTBmYjg4YmZlMzU4YjRmNTFjMA==", "commit": {"author": {"name": "Andreas Schwab", "email": "schwab@linux-m68k.org", "date": "2011-12-19T10:14:13Z"}, "committer": {"name": "Andreas Schwab", "email": "schwab@gcc.gnu.org", "date": "2011-12-19T10:14:13Z"}, "message": "re PR target/51532 (Invalid Code Generated for cpu32.)\n\nPR target/51532\n* config/m68k/m68k.h (FL_CAS, TARGET_CAS): Define.\n* config/m68k/m68k.c (FL_FOR_isa_20): Add FL_CAS.\n* config/m68k/sync.md: Use TARGET_CAS instead of (TARGET_68020 ||\nTARGET_68040).\n\nFrom-SVN: r182475", "tree": {"sha": "4c8e7c6d2e00c462c4996f1a0f922960b862c042", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4c8e7c6d2e00c462c4996f1a0f922960b862c042"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6a2b269b06fc3fb0f1bdba0fb88bfe358b4f51c0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6a2b269b06fc3fb0f1bdba0fb88bfe358b4f51c0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6a2b269b06fc3fb0f1bdba0fb88bfe358b4f51c0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6a2b269b06fc3fb0f1bdba0fb88bfe358b4f51c0/comments", "author": {"login": "andreas-schwab", "id": 2175493, "node_id": "MDQ6VXNlcjIxNzU0OTM=", "avatar_url": "https://avatars.githubusercontent.com/u/2175493?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andreas-schwab", "html_url": "https://github.com/andreas-schwab", "followers_url": "https://api.github.com/users/andreas-schwab/followers", "following_url": "https://api.github.com/users/andreas-schwab/following{/other_user}", "gists_url": "https://api.github.com/users/andreas-schwab/gists{/gist_id}", "starred_url": "https://api.github.com/users/andreas-schwab/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andreas-schwab/subscriptions", "organizations_url": "https://api.github.com/users/andreas-schwab/orgs", "repos_url": "https://api.github.com/users/andreas-schwab/repos", "events_url": "https://api.github.com/users/andreas-schwab/events{/privacy}", "received_events_url": "https://api.github.com/users/andreas-schwab/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "7063212f9a3b6db6ae912451963cc184ceff94ea", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7063212f9a3b6db6ae912451963cc184ceff94ea", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7063212f9a3b6db6ae912451963cc184ceff94ea"}], "stats": {"total": 20, "additions": 15, "deletions": 5}, "files": [{"sha": "4c70d2138dfdd8fd0b7b00cc4e81369f9aa60210", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a2b269b06fc3fb0f1bdba0fb88bfe358b4f51c0/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a2b269b06fc3fb0f1bdba0fb88bfe358b4f51c0/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6a2b269b06fc3fb0f1bdba0fb88bfe358b4f51c0", "patch": "@@ -1,3 +1,11 @@\n+2011-12-19  Andreas Schwab  <schwab@linux-m68k.org>\n+\n+\tPR target/51532\n+\t* config/m68k/m68k.h (FL_CAS, TARGET_CAS): Define.\n+\t* config/m68k/m68k.c (FL_FOR_isa_20): Add FL_CAS.\n+\t* config/m68k/sync.md: Use TARGET_CAS instead of (TARGET_68020 ||\n+\tTARGET_68040).\n+\n 2011-12-18  Anatoly Sokolov  <aesok@post.ru>\n \n \t* config/ia64/ia64.h (REG_OK_FOR_BASE_P, REG_OK_FOR_INDEX_P,"}, {"sha": "e0edd5b98800ae83756967b9c9b3b7e011be96e8", "filename": "gcc/config/m68k/m68k.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a2b269b06fc3fb0f1bdba0fb88bfe358b4f51c0/gcc%2Fconfig%2Fm68k%2Fm68k.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a2b269b06fc3fb0f1bdba0fb88bfe358b4f51c0/gcc%2Fconfig%2Fm68k%2Fm68k.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fm68k.c?ref=6a2b269b06fc3fb0f1bdba0fb88bfe358b4f51c0", "patch": "@@ -325,7 +325,7 @@ struct gcc_target targetm = TARGET_INITIALIZER;\n    generated 68881 code for 68020 and 68030 targets unless explicitly told\n    not to.  */\n #define FL_FOR_isa_20    (FL_FOR_isa_10 | FL_ISA_68020 \\\n-\t\t\t  | FL_BITFIELD | FL_68881)\n+\t\t\t  | FL_BITFIELD | FL_68881 | FL_CAS)\n #define FL_FOR_isa_40    (FL_FOR_isa_20 | FL_ISA_68040)\n #define FL_FOR_isa_cpu32 (FL_FOR_isa_10 | FL_ISA_68020)\n "}, {"sha": "dbb97561d57969617255faf1d41d41cfba3718de", "filename": "gcc/config/m68k/m68k.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a2b269b06fc3fb0f1bdba0fb88bfe358b4f51c0/gcc%2Fconfig%2Fm68k%2Fm68k.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a2b269b06fc3fb0f1bdba0fb88bfe358b4f51c0/gcc%2Fconfig%2Fm68k%2Fm68k.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fm68k.h?ref=6a2b269b06fc3fb0f1bdba0fb88bfe358b4f51c0", "patch": "@@ -226,6 +226,7 @@ along with GCC; see the file COPYING3.  If not see\n #define FL_ISA_B     (1 << 15)\n #define FL_ISA_C     (1 << 16)\n #define FL_FIDOA     (1 << 17)\n+#define FL_CAS\t     (1 << 18)\t/* Support cas insn.  */\n #define FL_MMU \t     0   /* Used by multilib machinery.  */\n #define FL_UCLINUX   0   /* Used by multilib machinery.  */\n \n@@ -236,6 +237,7 @@ along with GCC; see the file COPYING3.  If not see\n #define TARGET_COLDFIRE_FPU\t(m68k_fpu == FPUTYPE_COLDFIRE)\n #define TARGET_68881\t\t(m68k_fpu == FPUTYPE_68881)\n #define TARGET_FIDOA\t\t((m68k_cpu_flags & FL_FIDOA) != 0)\n+#define TARGET_CAS\t\t((m68k_cpu_flags & FL_CAS) != 0)\n \n /* Size (in bytes) of FPU registers.  */\n #define TARGET_FP_REG_SIZE\t(TARGET_COLDFIRE ? 8 : 12)"}, {"sha": "13e29ec3d1d335cce49162dc6a23a1f4b0b04605", "filename": "gcc/config/m68k/sync.md", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a2b269b06fc3fb0f1bdba0fb88bfe358b4f51c0/gcc%2Fconfig%2Fm68k%2Fsync.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a2b269b06fc3fb0f1bdba0fb88bfe358b4f51c0/gcc%2Fconfig%2Fm68k%2Fsync.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fsync.md?ref=6a2b269b06fc3fb0f1bdba0fb88bfe358b4f51c0", "patch": "@@ -28,7 +28,7 @@\n    (match_operand:SI 5 \"const_int_operand\" \"\")\t\t;; is_weak\n    (match_operand:SI 6 \"const_int_operand\" \"\")\t\t;; success model\n    (match_operand:SI 7 \"const_int_operand\" \"\")]\t\t;; failure model\n-  \"TARGET_68020 || TARGET_68040\"\n+  \"TARGET_CAS\"\n {\n   emit_insn (gen_atomic_compare_and_swap<mode>_1\n \t     (operands[0], operands[1], operands[2],\n@@ -52,15 +52,15 @@\n \t(unspec_volatile:QI\n \t  [(match_dup 2) (match_dup 3) (match_dup 4)]\n \t  UNSPECV_CAS_2))]\n-  \"TARGET_68020 || TARGET_68040\"\n+  \"TARGET_CAS\"\n   ;; Elide the seq if operands[0] is dead.\n   \"cas<sz> %1,%4,%2\\;seq %0\")\n \n (define_expand \"sync_test_and_setqi\"\n   [(match_operand:QI 0 \"register_operand\" \"\")\n    (match_operand:QI 1 \"memory_operand\" \"\")\n    (match_operand:QI 2 \"general_operand\" \"\")]\n-  \"!(TARGET_68020 || TARGET_68040)\"\n+  \"!TARGET_CAS\"\n {\n   if (operands[2] != const1_rtx)\n     FAIL;\n@@ -76,5 +76,5 @@\n \t  UNSPECV_TAS_1))\n    (set (match_dup 1)\n \t(unspec_volatile:QI [(match_dup 1)] UNSPECV_TAS_2))]\n-  \"!(TARGET_68020 || TARGET_68040)\"\n+  \"!TARGET_CAS\"\n   \"tas %1\\;sne %0\")"}]}