{"sha": "b5f853e62bdc8216c228c65ae9dafe9973f5104e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjVmODUzZTYyYmRjODIxNmMyMjhjNjVhZTlkYWZlOTk3M2Y1MTA0ZQ==", "commit": {"author": {"name": "Bryce McKinlay", "email": "bryce@gcc.gnu.org", "date": "2000-02-15T08:51:29Z"}, "committer": {"name": "Bryce McKinlay", "email": "bryce@gcc.gnu.org", "date": "2000-02-15T08:51:29Z"}, "message": "Updated the NEWS\n\nFrom-SVN: r31980", "tree": {"sha": "5fade6a84151e960022d881473f9bc818e08564a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5fade6a84151e960022d881473f9bc818e08564a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b5f853e62bdc8216c228c65ae9dafe9973f5104e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b5f853e62bdc8216c228c65ae9dafe9973f5104e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b5f853e62bdc8216c228c65ae9dafe9973f5104e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b5f853e62bdc8216c228c65ae9dafe9973f5104e/comments", "author": null, "committer": null, "parents": [{"sha": "1733ad7f1011c122c4844afa83180a6204c5371d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1733ad7f1011c122c4844afa83180a6204c5371d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1733ad7f1011c122c4844afa83180a6204c5371d"}], "stats": {"total": 28, "additions": 20, "deletions": 8}, "files": [{"sha": "ed95555a1dff6e5c6242895ce70f6a8be60831b4", "filename": "libjava/NEWS", "status": "modified", "additions": 20, "deletions": 8, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b5f853e62bdc8216c228c65ae9dafe9973f5104e/libjava%2FNEWS", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b5f853e62bdc8216c228c65ae9dafe9973f5104e/libjava%2FNEWS", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FNEWS?ref=b5f853e62bdc8216c228c65ae9dafe9973f5104e", "patch": "@@ -1,19 +1,31 @@\n New in libgcj X.XX:\n \n-* libgcj now includes a bytecode interpreter.\n+* libgcj now includes a bytecode interpreter. If a compiled version of a class \n+is not found in the application binary or linked shared libraries, the\n+class loader will search for a bytecode version in the CLASSPATH and execute\n+it using the interpreter. A new front end that behaves like the traditional\n+`java' command is provided: `gij'.\n \n-* Support for specifying java system properties, both compiled in to the\n-application and at runtime via an environment variable.\n-\n-* Complete JDK 1.1 reflection support, including invocation.\n+* Support for specifying java system properties. Properties can either be set \n+at runtime via the GCJ_PROPERTIES environment variable in the format \n+\"<name>=<value> ...\"'; or can be compiled into an application binary using \n+-D<name>=<value>.\n \n * Support for setjmp/longjmp (sjlj) exception handling has been added, as an\n-alternative to the existing range-table based mechanism.\n+alternative to the existing range-table based mechanism. sljl is the default\n+on non-sparc, non-x86 targets, or can be specified with the \n+`--enable-sjlj-exceptions' configure parameter.\n+\n+* Complete JDK 1.1 reflection support, including invocation.\n \n * Throwable.printStackTrace() has been implemented.\n \n-* Runtime.loadLibrary() has been implemented, and Class.forName() can now\n-dynamically load shared objects in order to find a requested class.\n+* Runtime.loadLibrary() has been implemented. In addition, Class.forName() \n+will try to load a series of shared objects in order to find the requested \n+class.  If a class `gnu.quux.whatever' is requested, libgcj will first look \n+for `gnu-quux-whatever.so', then `gnu-quux.so', and finally `gnu.so'.\n+\n+* A pure-java implementation of java.math.BigInteger.\n \n New in libgcj 2.95:\n "}]}