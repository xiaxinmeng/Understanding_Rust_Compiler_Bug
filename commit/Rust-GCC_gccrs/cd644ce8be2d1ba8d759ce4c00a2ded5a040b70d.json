{"sha": "cd644ce8be2d1ba8d759ce4c00a2ded5a040b70d", "node_id": "C_kwDOANBUbNoAKGNkNjQ0Y2U4YmUyZDFiYThkNzU5Y2U0YzAwYTJkZWQ1YTA0MGI3MGQ", "commit": {"author": {"name": "Thomas Schwinge", "email": "thomas@codesourcery.com", "date": "2022-04-07T21:10:16Z"}, "committer": {"name": "Thomas Schwinge", "email": "thomas@codesourcery.com", "date": "2022-05-12T12:14:13Z"}, "message": "libgomp nvptx plugin: Split 'PLUGIN_NVPTX_DYNAMIC' into 'PLUGIN_NVPTX_INCLUDE_SYSTEM_CUDA_H' and 'PLUGIN_NVPTX_LINK_LIBCUDA'\n\nIncluding the GCC-shipped 'include/cuda/cuda.h' vs. system <cuda.h> and\n'dlopen'ing the CUDA Driver library vs. linking it are separate concerns.\n\n\tlibgomp/\n\t* plugin/Makefrag.am: Handle 'PLUGIN_NVPTX_DYNAMIC'.\n\t* plugin/configfrag.ac (PLUGIN_NVPTX_DYNAMIC): Change\n\t'AC_DEFINE_UNQUOTED' into 'AM_CONDITIONAL'.\n\t* plugin/plugin-nvptx.c: Split 'PLUGIN_NVPTX_DYNAMIC' into\n\t'PLUGIN_NVPTX_INCLUDE_SYSTEM_CUDA_H' and\n\t'PLUGIN_NVPTX_LINK_LIBCUDA'.\n\t* Makefile.in: Regenerate.\n\t* config.h.in: Likewise.\n\t* configure: Likewise.", "tree": {"sha": "adf56f4be183630db7aa855ab51ee71c7feacc12", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/adf56f4be183630db7aa855ab51ee71c7feacc12"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cd644ce8be2d1ba8d759ce4c00a2ded5a040b70d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cd644ce8be2d1ba8d759ce4c00a2ded5a040b70d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cd644ce8be2d1ba8d759ce4c00a2ded5a040b70d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cd644ce8be2d1ba8d759ce4c00a2ded5a040b70d/comments", "author": {"login": "tschwinge", "id": 21753, "node_id": "MDQ6VXNlcjIxNzUz", "avatar_url": "https://avatars.githubusercontent.com/u/21753?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tschwinge", "html_url": "https://github.com/tschwinge", "followers_url": "https://api.github.com/users/tschwinge/followers", "following_url": "https://api.github.com/users/tschwinge/following{/other_user}", "gists_url": "https://api.github.com/users/tschwinge/gists{/gist_id}", "starred_url": "https://api.github.com/users/tschwinge/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tschwinge/subscriptions", "organizations_url": "https://api.github.com/users/tschwinge/orgs", "repos_url": "https://api.github.com/users/tschwinge/repos", "events_url": "https://api.github.com/users/tschwinge/events{/privacy}", "received_events_url": "https://api.github.com/users/tschwinge/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tschwinge", "id": 21753, "node_id": "MDQ6VXNlcjIxNzUz", "avatar_url": "https://avatars.githubusercontent.com/u/21753?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tschwinge", "html_url": "https://github.com/tschwinge", "followers_url": "https://api.github.com/users/tschwinge/followers", "following_url": "https://api.github.com/users/tschwinge/following{/other_user}", "gists_url": "https://api.github.com/users/tschwinge/gists{/gist_id}", "starred_url": "https://api.github.com/users/tschwinge/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tschwinge/subscriptions", "organizations_url": "https://api.github.com/users/tschwinge/orgs", "repos_url": "https://api.github.com/users/tschwinge/repos", "events_url": "https://api.github.com/users/tschwinge/events{/privacy}", "received_events_url": "https://api.github.com/users/tschwinge/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "edbd2b1caaa79d68467418a4571c3b09f9602805", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/edbd2b1caaa79d68467418a4571c3b09f9602805", "html_url": "https://github.com/Rust-GCC/gccrs/commit/edbd2b1caaa79d68467418a4571c3b09f9602805"}], "stats": {"total": 74, "additions": 52, "deletions": 22}, "files": [{"sha": "51252b89462c742444f4d855879e6cbabb205b84", "filename": "libgomp/Makefile.in", "status": "modified", "additions": 19, "deletions": 7, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd644ce8be2d1ba8d759ce4c00a2ded5a040b70d/libgomp%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd644ce8be2d1ba8d759ce4c00a2ded5a040b70d/libgomp%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2FMakefile.in?ref=cd644ce8be2d1ba8d759ce4c00a2ded5a040b70d", "patch": "@@ -119,8 +119,16 @@ build_triplet = @build@\n host_triplet = @host@\n target_triplet = @target@\n @PLUGIN_NVPTX_TRUE@am__append_1 = libgomp-plugin-nvptx.la\n-@PLUGIN_GCN_TRUE@am__append_2 = libgomp-plugin-gcn.la\n-@USE_FORTRAN_TRUE@am__append_3 = openacc.f90\n+\n+# Including the GCC-shipped 'include/cuda/cuda.h' vs. system <cuda.h>.\n+@PLUGIN_NVPTX_DYNAMIC_FALSE@@PLUGIN_NVPTX_TRUE@am__append_2 = -DPLUGIN_NVPTX_INCLUDE_SYSTEM_CUDA_H \\\n+@PLUGIN_NVPTX_DYNAMIC_FALSE@@PLUGIN_NVPTX_TRUE@\t-DPLUGIN_NVPTX_LINK_LIBCUDA\n+\n+# 'dlopen'ing the CUDA Driver library vs. linking it.\n+@PLUGIN_NVPTX_DYNAMIC_TRUE@@PLUGIN_NVPTX_TRUE@am__append_3 = $(PLUGIN_NVPTX_LIBS)\n+@PLUGIN_NVPTX_DYNAMIC_FALSE@@PLUGIN_NVPTX_TRUE@am__append_4 = $(PLUGIN_NVPTX_LIBS)\n+@PLUGIN_GCN_TRUE@am__append_5 = libgomp-plugin-gcn.la\n+@USE_FORTRAN_TRUE@am__append_6 = openacc.f90\n subdir = .\n ACLOCAL_M4 = $(top_srcdir)/aclocal.m4\n am__aclocal_m4_deps = $(top_srcdir)/../config/acx.m4 \\\n@@ -197,8 +205,10 @@ libgomp_plugin_gcn_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \\\n \t$(libgomp_plugin_gcn_la_LDFLAGS) $(LDFLAGS) -o $@\n @PLUGIN_GCN_TRUE@am_libgomp_plugin_gcn_la_rpath = -rpath \\\n @PLUGIN_GCN_TRUE@\t$(toolexeclibdir)\n+@PLUGIN_NVPTX_DYNAMIC_TRUE@@PLUGIN_NVPTX_TRUE@am__DEPENDENCIES_2 = $(am__DEPENDENCIES_1)\n+@PLUGIN_NVPTX_DYNAMIC_FALSE@@PLUGIN_NVPTX_TRUE@am__DEPENDENCIES_3 = $(am__DEPENDENCIES_1)\n @PLUGIN_NVPTX_TRUE@libgomp_plugin_nvptx_la_DEPENDENCIES = libgomp.la \\\n-@PLUGIN_NVPTX_TRUE@\t$(am__DEPENDENCIES_1)\n+@PLUGIN_NVPTX_TRUE@\t$(am__DEPENDENCIES_2) $(am__DEPENDENCIES_3)\n @PLUGIN_NVPTX_TRUE@am_libgomp_plugin_nvptx_la_OBJECTS =  \\\n @PLUGIN_NVPTX_TRUE@\tlibgomp_plugin_nvptx_la-plugin-nvptx.lo\n libgomp_plugin_nvptx_la_OBJECTS =  \\\n@@ -527,7 +537,7 @@ libsubincludedir = $(libdir)/gcc/$(target_alias)/$(gcc_version)/include\n AM_CPPFLAGS = $(addprefix -I, $(search_path))\n AM_CFLAGS = $(XCFLAGS)\n AM_LDFLAGS = $(XLDFLAGS) $(SECTION_LDFLAGS) $(OPT_LDFLAGS)\n-toolexeclib_LTLIBRARIES = libgomp.la $(am__append_1) $(am__append_2)\n+toolexeclib_LTLIBRARIES = libgomp.la $(am__append_1) $(am__append_5)\n nodist_toolexeclib_HEADERS = libgomp.spec\n \n # -Wc is only a libtool option.\n@@ -553,16 +563,18 @@ libgomp_la_SOURCES = alloc.c atomic.c barrier.c critical.c env.c \\\n \toacc-parallel.c oacc-host.c oacc-init.c oacc-mem.c \\\n \toacc-async.c oacc-plugin.c oacc-cuda.c priority_queue.c \\\n \taffinity-fmt.c teams.c allocator.c oacc-profiling.c \\\n-\toacc-target.c $(am__append_3)\n+\toacc-target.c $(am__append_6)\n \n # Nvidia PTX OpenACC plugin.\n @PLUGIN_NVPTX_TRUE@libgomp_plugin_nvptx_version_info = -version-info $(libtool_VERSION)\n @PLUGIN_NVPTX_TRUE@libgomp_plugin_nvptx_la_SOURCES = plugin/plugin-nvptx.c\n-@PLUGIN_NVPTX_TRUE@libgomp_plugin_nvptx_la_CPPFLAGS = $(AM_CPPFLAGS) $(PLUGIN_NVPTX_CPPFLAGS)\n+@PLUGIN_NVPTX_TRUE@libgomp_plugin_nvptx_la_CPPFLAGS = $(AM_CPPFLAGS) \\\n+@PLUGIN_NVPTX_TRUE@\t$(PLUGIN_NVPTX_CPPFLAGS) $(am__append_2)\n @PLUGIN_NVPTX_TRUE@libgomp_plugin_nvptx_la_LDFLAGS =  \\\n @PLUGIN_NVPTX_TRUE@\t$(libgomp_plugin_nvptx_version_info) \\\n @PLUGIN_NVPTX_TRUE@\t$(lt_host_flags) $(PLUGIN_NVPTX_LDFLAGS)\n-@PLUGIN_NVPTX_TRUE@libgomp_plugin_nvptx_la_LIBADD = libgomp.la $(PLUGIN_NVPTX_LIBS)\n+@PLUGIN_NVPTX_TRUE@libgomp_plugin_nvptx_la_LIBADD = libgomp.la \\\n+@PLUGIN_NVPTX_TRUE@\t$(am__append_3) $(am__append_4)\n @PLUGIN_NVPTX_TRUE@libgomp_plugin_nvptx_la_LIBTOOLFLAGS = --tag=disable-static\n \n # AMD GCN plugin"}, {"sha": "d971ea38c461d8ca0ed309a6ba12e9bd817173b0", "filename": "libgomp/config.h.in", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd644ce8be2d1ba8d759ce4c00a2ded5a040b70d/libgomp%2Fconfig.h.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd644ce8be2d1ba8d759ce4c00a2ded5a040b70d/libgomp%2Fconfig.h.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Fconfig.h.in?ref=cd644ce8be2d1ba8d759ce4c00a2ded5a040b70d", "patch": "@@ -170,10 +170,6 @@\n /* Define to the version of this package. */\n #undef PACKAGE_VERSION\n \n-/* Define to 1 if the NVIDIA plugin should dlopen libcuda.so.1, 0 if it should\n-   be linked against it. */\n-#undef PLUGIN_NVPTX_DYNAMIC\n-\n /* Define if all infrastructure, needed for plugins, is supported. */\n #undef PLUGIN_SUPPORT\n "}, {"sha": "0df47cf96e3e1ee8b9044f69a280a72deed39309", "filename": "libgomp/configure", "status": "modified", "additions": 15, "deletions": 6, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd644ce8be2d1ba8d759ce4c00a2ded5a040b70d/libgomp%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd644ce8be2d1ba8d759ce4c00a2ded5a040b70d/libgomp%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Fconfigure?ref=cd644ce8be2d1ba8d759ce4c00a2ded5a040b70d", "patch": "@@ -667,6 +667,8 @@ OPT_LDFLAGS\n SECTION_LDFLAGS\n PLUGIN_GCN_FALSE\n PLUGIN_GCN_TRUE\n+PLUGIN_NVPTX_DYNAMIC_FALSE\n+PLUGIN_NVPTX_DYNAMIC_TRUE\n PLUGIN_NVPTX_FALSE\n PLUGIN_NVPTX_TRUE\n offload_additional_lib_paths\n@@ -11412,7 +11414,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 11415 \"configure\"\n+#line 11417 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -11518,7 +11520,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 11521 \"configure\"\n+#line 11523 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -15368,10 +15370,13 @@ else\n   PLUGIN_NVPTX_FALSE=\n fi\n \n-\n-cat >>confdefs.h <<_ACEOF\n-#define PLUGIN_NVPTX_DYNAMIC $PLUGIN_NVPTX_DYNAMIC\n-_ACEOF\n+ if test $PLUGIN_NVPTX_DYNAMIC = 1; then\n+  PLUGIN_NVPTX_DYNAMIC_TRUE=\n+  PLUGIN_NVPTX_DYNAMIC_FALSE='#'\n+else\n+  PLUGIN_NVPTX_DYNAMIC_TRUE='#'\n+  PLUGIN_NVPTX_DYNAMIC_FALSE=\n+fi\n \n  if test $PLUGIN_GCN = 1; then\n   PLUGIN_GCN_TRUE=\n@@ -17140,6 +17145,10 @@ if test -z \"${PLUGIN_NVPTX_TRUE}\" && test -z \"${PLUGIN_NVPTX_FALSE}\"; then\n   as_fn_error $? \"conditional \\\"PLUGIN_NVPTX\\\" was never defined.\n Usually this means the macro was only invoked conditionally.\" \"$LINENO\" 5\n fi\n+if test -z \"${PLUGIN_NVPTX_DYNAMIC_TRUE}\" && test -z \"${PLUGIN_NVPTX_DYNAMIC_FALSE}\"; then\n+  as_fn_error $? \"conditional \\\"PLUGIN_NVPTX_DYNAMIC\\\" was never defined.\n+Usually this means the macro was only invoked conditionally.\" \"$LINENO\" 5\n+fi\n if test -z \"${PLUGIN_GCN_TRUE}\" && test -z \"${PLUGIN_GCN_FALSE}\"; then\n   as_fn_error $? \"conditional \\\"PLUGIN_GCN\\\" was never defined.\n Usually this means the macro was only invoked conditionally.\" \"$LINENO\" 5"}, {"sha": "3eeb3419f9c2f9883c9be7406df7092753b774d3", "filename": "libgomp/plugin/Makefrag.am", "status": "modified", "additions": 15, "deletions": 1, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd644ce8be2d1ba8d759ce4c00a2ded5a040b70d/libgomp%2Fplugin%2FMakefrag.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd644ce8be2d1ba8d759ce4c00a2ded5a040b70d/libgomp%2Fplugin%2FMakefrag.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Fplugin%2FMakefrag.am?ref=cd644ce8be2d1ba8d759ce4c00a2ded5a040b70d", "patch": "@@ -35,8 +35,22 @@ libgomp_plugin_nvptx_la_CPPFLAGS = $(AM_CPPFLAGS) $(PLUGIN_NVPTX_CPPFLAGS)\n libgomp_plugin_nvptx_la_LDFLAGS = $(libgomp_plugin_nvptx_version_info) \\\n \t$(lt_host_flags)\n libgomp_plugin_nvptx_la_LDFLAGS += $(PLUGIN_NVPTX_LDFLAGS)\n-libgomp_plugin_nvptx_la_LIBADD = libgomp.la $(PLUGIN_NVPTX_LIBS)\n+libgomp_plugin_nvptx_la_LIBADD = libgomp.la\n libgomp_plugin_nvptx_la_LIBTOOLFLAGS = --tag=disable-static\n+\n+# Including the GCC-shipped 'include/cuda/cuda.h' vs. system <cuda.h>.\n+if PLUGIN_NVPTX_DYNAMIC\n+else\n+libgomp_plugin_nvptx_la_CPPFLAGS += -DPLUGIN_NVPTX_INCLUDE_SYSTEM_CUDA_H\n+endif\n+\n+# 'dlopen'ing the CUDA Driver library vs. linking it.\n+if PLUGIN_NVPTX_DYNAMIC\n+libgomp_plugin_nvptx_la_LIBADD += $(PLUGIN_NVPTX_LIBS)\n+else\n+libgomp_plugin_nvptx_la_CPPFLAGS += -DPLUGIN_NVPTX_LINK_LIBCUDA\n+libgomp_plugin_nvptx_la_LIBADD += $(PLUGIN_NVPTX_LIBS)\n+endif\n endif\n \n if PLUGIN_GCN"}, {"sha": "c16224104e3cdb043ec063b5d91a34ff1028d465", "filename": "libgomp/plugin/configfrag.ac", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd644ce8be2d1ba8d759ce4c00a2ded5a040b70d/libgomp%2Fplugin%2Fconfigfrag.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd644ce8be2d1ba8d759ce4c00a2ded5a040b70d/libgomp%2Fplugin%2Fconfigfrag.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Fplugin%2Fconfigfrag.ac?ref=cd644ce8be2d1ba8d759ce4c00a2ded5a040b70d", "patch": "@@ -219,6 +219,5 @@ fi\n AC_DEFINE_UNQUOTED(OFFLOAD_PLUGINS, \"$offload_plugins\",\n   [Define to offload plugins, separated by commas.])\n AM_CONDITIONAL([PLUGIN_NVPTX], [test $PLUGIN_NVPTX = 1])\n-AC_DEFINE_UNQUOTED([PLUGIN_NVPTX_DYNAMIC], [$PLUGIN_NVPTX_DYNAMIC],\n-  [Define to 1 if the NVIDIA plugin should dlopen libcuda.so.1, 0 if it should be linked against it.])\n+AM_CONDITIONAL([PLUGIN_NVPTX_DYNAMIC], [test $PLUGIN_NVPTX_DYNAMIC = 1])\n AM_CONDITIONAL([PLUGIN_GCN], [test $PLUGIN_GCN = 1])"}, {"sha": "387bcbbc52afb2ae22fb91d53358951a89d9b338", "filename": "libgomp/plugin/plugin-nvptx.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd644ce8be2d1ba8d759ce4c00a2ded5a040b70d/libgomp%2Fplugin%2Fplugin-nvptx.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd644ce8be2d1ba8d759ce4c00a2ded5a040b70d/libgomp%2Fplugin%2Fplugin-nvptx.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Fplugin%2Fplugin-nvptx.c?ref=cd644ce8be2d1ba8d759ce4c00a2ded5a040b70d", "patch": "@@ -41,7 +41,7 @@\n #include \"oacc-int.h\"\n \n #include <pthread.h>\n-#if PLUGIN_NVPTX_DYNAMIC\n+#ifndef PLUGIN_NVPTX_INCLUDE_SYSTEM_CUDA_H\n # include \"cuda/cuda.h\"\n #else\n # include <cuda.h>\n@@ -85,7 +85,7 @@ CUresult cuOccupancyMaxPotentialBlockSize(int *, int *, CUfunction,\n \n #define DO_PRAGMA(x) _Pragma (#x)\n \n-#if PLUGIN_NVPTX_DYNAMIC\n+#ifndef PLUGIN_NVPTX_LINK_LIBCUDA\n # include <dlfcn.h>\n \n struct cuda_lib_s {"}]}