{"sha": "4ba687c8587c546282a45d669dcb30653be79b25", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGJhNjg3Yzg1ODdjNTQ2MjgyYTQ1ZDY2OWRjYjMwNjUzYmU3OWIyNQ==", "commit": {"author": {"name": "David S. Miller", "email": "davem@pierdol.cobaltmicro.com", "date": "1998-11-05T02:38:58Z"}, "committer": {"name": "David S. Miller", "email": "davem@gcc.gnu.org", "date": "1998-11-05T02:38:58Z"}, "message": "* config/sparc/sparc.md (movdf_const_intreg_sp64): Enable again.\n\nFrom-SVN: r23535", "tree": {"sha": "7cd9c38512c59fa3897547054517176566d6b0ca", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7cd9c38512c59fa3897547054517176566d6b0ca"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4ba687c8587c546282a45d669dcb30653be79b25", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4ba687c8587c546282a45d669dcb30653be79b25", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4ba687c8587c546282a45d669dcb30653be79b25", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4ba687c8587c546282a45d669dcb30653be79b25/comments", "author": null, "committer": null, "parents": [{"sha": "9da0e39b5ca3de8db19f88308511b25a02df0342", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9da0e39b5ca3de8db19f88308511b25a02df0342", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9da0e39b5ca3de8db19f88308511b25a02df0342"}], "stats": {"total": 17, "additions": 9, "deletions": 8}, "files": [{"sha": "29399945fb29d6bda19d04847f335c6a27c3ca1b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ba687c8587c546282a45d669dcb30653be79b25/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ba687c8587c546282a45d669dcb30653be79b25/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4ba687c8587c546282a45d669dcb30653be79b25", "patch": "@@ -1,3 +1,7 @@\n+Thu Nov  5 03:42:54 1998  David S. Miller  <davem@pierdol.cobaltmicro.com>\n+\n+\t* config/sparc/sparc.md (movdf_const_intreg_sp64): Enable again.\n+\n Thu Nov  5 10:53:01 1998  Andreas Schwab  <schwab@issan.cs.uni-dortmund.de>\n \n \t* configure.in: Bring over gcc2 change of Nov 19 1997."}, {"sha": "69b68fdf86c3e99a39a9357f77407f65961658c6", "filename": "gcc/config/sparc/sparc.md", "status": "modified", "additions": 5, "deletions": 8, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ba687c8587c546282a45d669dcb30653be79b25/gcc%2Fconfig%2Fsparc%2Fsparc.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ba687c8587c546282a45d669dcb30653be79b25/gcc%2Fconfig%2Fsparc%2Fsparc.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsparc.md?ref=4ba687c8587c546282a45d669dcb30653be79b25", "patch": "@@ -2949,15 +2949,13 @@\n   [(set_attr \"type\" \"move\")\n    (set_attr \"length\" \"1,2,2\")])\n \n-;; ?? This and split disabled on sparc64... When I change the destination\n-;; ?? reg to be DImode to emit the constant formation code, the instruction\n-;; ?? scheduler does not want to believe that it is the same as the DFmode\n-;; ?? subreg we started with...  See the SFmode version of this above to\n-;; ?? see how it can be handled.\n+;; Now that we redo life analysis with a clean slate after\n+;; instruction splitting for sched2 this can work.\n (define_insn \"*movdf_const_intreg_sp64\"\n   [(set (match_operand:DF 0 \"general_operand\" \"=e,e,r\")\n         (match_operand:DF 1 \"\"                 \"m,o,F\"))]\n-  \"0 && TARGET_FPU && TARGET_ARCH64\n+  \"TARGET_FPU\n+   && TARGET_ARCH64\n    && GET_CODE (operands[1]) == CONST_DOUBLE\n    && GET_CODE (operands[0]) == REG\"\n   \"*\n@@ -2973,8 +2971,7 @@\n (define_split\n   [(set (match_operand:DF 0 \"register_operand\" \"\")\n         (match_operand:DF 1 \"const_double_operand\" \"\"))]\n-  \"! TARGET_ARCH64\n-   && TARGET_FPU\n+  \"TARGET_FPU\n    && GET_CODE (operands[1]) == CONST_DOUBLE\n    && (GET_CODE (operands[0]) == REG\n        && REGNO (operands[0]) < 32)"}]}