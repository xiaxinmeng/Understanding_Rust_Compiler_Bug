{"sha": "125886c749998b8f2bd8a49de7350755e92db718", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTI1ODg2Yzc0OTk5OGI4ZjJiZDhhNDlkZTczNTA3NTVlOTJkYjcxOA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2005-05-03T22:16:01Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2005-05-03T22:16:01Z"}, "message": "re PR rtl-optimization/21239 (Illegal elimination of SSE2 load/store using xmm intrinsics)\n\n\t* config/i386/i386.c (ix86_expand_vector_set): Fix setting 3rd and 4th\n\titem in V4SF mode.\n\n\tPR rtl-optimization/21239\n\t* combine.c (combine_simplify_rtx) <case VEC_SELECT>: Fix a typo.\n\n\t* gcc.dg/i386-sse-11.c: New test.\n\nFrom-SVN: r99186", "tree": {"sha": "10defcbd02d9f2143061c0f92dcb0585843ac362", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/10defcbd02d9f2143061c0f92dcb0585843ac362"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/125886c749998b8f2bd8a49de7350755e92db718", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/125886c749998b8f2bd8a49de7350755e92db718", "html_url": "https://github.com/Rust-GCC/gccrs/commit/125886c749998b8f2bd8a49de7350755e92db718", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/125886c749998b8f2bd8a49de7350755e92db718/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "21fae9376c1a132caa4eb51067f02bd81b8f91f2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/21fae9376c1a132caa4eb51067f02bd81b8f91f2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/21fae9376c1a132caa4eb51067f02bd81b8f91f2"}], "stats": {"total": 128, "additions": 118, "deletions": 10}, "files": [{"sha": "fa84ec78678d64439515ab42c99994039d8ae4a5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/125886c749998b8f2bd8a49de7350755e92db718/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/125886c749998b8f2bd8a49de7350755e92db718/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=125886c749998b8f2bd8a49de7350755e92db718", "patch": "@@ -1,3 +1,11 @@\n+2005-05-04  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* config/i386/i386.c (ix86_expand_vector_set): Fix setting 3rd and 4th\n+\titem in V4SF mode.\n+\n+\tPR rtl-optimization/21239\n+\t* combine.c (combine_simplify_rtx) <case VEC_SELECT>: Fix a typo.\n+\n 2005-05-03  Kazu Hirata  <kazu@cs.umass.edu>\n \n \t* tree-flow.h (tree_ann_common_d): Move aux to ..."}, {"sha": "251c1eeafb8823cccc0b348b93d3e5df40870d63", "filename": "gcc/combine.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/125886c749998b8f2bd8a49de7350755e92db718/gcc%2Fcombine.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/125886c749998b8f2bd8a49de7350755e92db718/gcc%2Fcombine.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcombine.c?ref=125886c749998b8f2bd8a49de7350755e92db718", "patch": "@@ -4742,7 +4742,7 @@ combine_simplify_rtx (rtx x, enum machine_mode op0_mode, int in_dest)\n \t\tif (GET_CODE (op0) == VEC_CONCAT)\n \t\t  {\n \t\t    HOST_WIDE_INT op0_size = GET_MODE_SIZE (GET_MODE (XEXP (op0, 0)));\n-\t\t    if (op0_size < offset)\n+\t\t    if (offset < op0_size)\n \t\t      op0 = XEXP (op0, 0);\n \t\t    else\n \t\t      {"}, {"sha": "49d22fd428ad83caad9ab21749813d17ee396762", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 12, "deletions": 9, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/125886c749998b8f2bd8a49de7350755e92db718/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/125886c749998b8f2bd8a49de7350755e92db718/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=125886c749998b8f2bd8a49de7350755e92db718", "patch": "@@ -17022,32 +17022,35 @@ ix86_expand_vector_set (bool mmx_ok, rtx target, rtx val, int elt)\n \t  break;\n \n \tcase 1:\n-\t  /* tmp = op0 = A B C D */\n+\t  /* tmp = target = A B C D */\n \t  tmp = copy_to_reg (target);\n-\n-\t  /* op0 = C C D D */\n+\t  /* target = A A B B */\n \t  emit_insn (gen_sse_unpcklps (target, target, target));\n-\n-\t  /* op0 = C C D X */\n+\t  /* target = X A B B */\n \t  ix86_expand_vector_set (false, target, val, 0);\n-\n-\t  /* op0 = A B X D  */\n+\t  /* target = A X C D  */\n \t  emit_insn (gen_sse_shufps_1 (target, target, tmp,\n \t\t\t\t       GEN_INT (1), GEN_INT (0),\n \t\t\t\t       GEN_INT (2+4), GEN_INT (3+4)));\n \t  return;\n \n \tcase 2:\n+\t  /* tmp = target = A B C D */\n \t  tmp = copy_to_reg (target);\n-\t  ix86_expand_vector_set (false, target, val, 0);\n+\t  /* tmp = X B C D */\n+\t  ix86_expand_vector_set (false, tmp, val, 0);\n+\t  /* target = A B X D */\n \t  emit_insn (gen_sse_shufps_1 (target, target, tmp,\n \t\t\t\t       GEN_INT (0), GEN_INT (1),\n \t\t\t\t       GEN_INT (0+4), GEN_INT (3+4)));\n \t  return;\n \n \tcase 3:\n+\t  /* tmp = target = A B C D */\n \t  tmp = copy_to_reg (target);\n-\t  ix86_expand_vector_set (false, target, val, 0);\n+\t  /* tmp = X B C D */\n+\t  ix86_expand_vector_set (false, tmp, val, 0);\n+\t  /* target = A B X D */\n \t  emit_insn (gen_sse_shufps_1 (target, target, tmp,\n \t\t\t\t       GEN_INT (0), GEN_INT (1),\n \t\t\t\t       GEN_INT (2+4), GEN_INT (0+4)));"}, {"sha": "348b911f4fc8773b537e30ec427097c50a972686", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/125886c749998b8f2bd8a49de7350755e92db718/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/125886c749998b8f2bd8a49de7350755e92db718/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=125886c749998b8f2bd8a49de7350755e92db718", "patch": "@@ -1,3 +1,8 @@\n+2005-05-04  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR rtl-optimization/21239\n+\t* gcc.dg/i386-sse-11.c: New test.\n+\n 2005-05-03  Alexandre Oliva  <aoliva@redhat.com>\n \n \tPR target/16888"}, {"sha": "fd72047b5253130670487a0080547e3428cf7051", "filename": "gcc/testsuite/gcc.dg/i386-sse-11.c", "status": "added", "additions": 92, "deletions": 0, "changes": 92, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/125886c749998b8f2bd8a49de7350755e92db718/gcc%2Ftestsuite%2Fgcc.dg%2Fi386-sse-11.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/125886c749998b8f2bd8a49de7350755e92db718/gcc%2Ftestsuite%2Fgcc.dg%2Fi386-sse-11.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fi386-sse-11.c?ref=125886c749998b8f2bd8a49de7350755e92db718", "patch": "@@ -0,0 +1,92 @@\n+/* PR rtl-optimization/21239 */\n+/* { dg-do run { target i?86-*-* x86_64-*-* } } */\n+/* { dg-options \"-O2 -msse2\" } */\n+#include <emmintrin.h>\n+#include \"i386-cpuid.h\"\n+\n+extern void abort (void);\n+\n+void\n+foo (unsigned int x, double *y, const double *z)\n+{\n+  __m128d tmp;\n+  while (x)\n+    {\n+      tmp = _mm_load_sd (z);\n+      _mm_store_sd (y, tmp);\n+      --x; ++z; ++y;\n+    }\n+}\n+\n+void\n+bar (unsigned int x, float *y, const float *z)\n+{\n+  __m128 tmp;\n+  unsigned int i;\n+  for (i = 0; i < x; ++i)\n+    {\n+      tmp = (__m128) { *z, 0, 0, 0 };\n+      *y = __builtin_ia32_vec_ext_v4sf (tmp, 0);\n+      ++z; ++y;\n+    }\n+  for (i = 0; i < x; ++i)\n+    {\n+      tmp = (__m128) { 0, *z, 0, 0 };\n+      *y = __builtin_ia32_vec_ext_v4sf (tmp, 1);\n+      ++z; ++y;\n+    }\n+  for (i = 0; i < x; ++i)\n+    {\n+      tmp = (__m128) { 0, 0, *z, 0 };\n+      *y = __builtin_ia32_vec_ext_v4sf (tmp, 2);\n+      ++z; ++y;\n+    }\n+  for (i = 0; i < x; ++i)\n+    {\n+      tmp = (__m128) { 0, 0, 0, *z };\n+      *y = __builtin_ia32_vec_ext_v4sf (tmp, 3);\n+      ++z; ++y;\n+    }\n+}\n+\n+void __attribute__((noinline))\n+run_tests (void)\n+{\n+  unsigned int i;\n+  double a[16], b[16];\n+  float c[16], d[16];\n+  for (i = 0; i < 16; ++i)\n+    {\n+      a[i] = 1;\n+      b[i] = 2;\n+      c[i] = 3;\n+      d[i] = 4;\n+    }\n+  foo (16, a, b);\n+  bar (4, c, d);\n+  for (i = 0; i < 16; ++i)\n+    {\n+      if (a[i] != 2)\n+\tabort ();\n+      if (c[i] != 4)\n+\tabort ();\n+    }\n+}\n+\n+int\n+main ()\n+{\n+  unsigned long cpu_facilities;\n+  unsigned int i;\n+  double a[19], b[19];\n+\n+  cpu_facilities = i386_cpuid ();\n+\n+  if ((cpu_facilities & (bit_MMX | bit_SSE | bit_SSE2 | bit_CMOV))\n+      != (bit_MMX | bit_SSE | bit_SSE2 | bit_CMOV))\n+    /* If host has no vector support, pass.  */\n+    return 0;\n+\n+  run_tests ();\n+  return 0;\n+}"}]}