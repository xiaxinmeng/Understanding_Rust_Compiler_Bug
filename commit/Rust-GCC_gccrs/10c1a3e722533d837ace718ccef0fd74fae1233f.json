{"sha": "10c1a3e722533d837ace718ccef0fd74fae1233f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTBjMWEzZTcyMjUzM2Q4MzdhY2U3MThjY2VmMGZkNzRmYWUxMjMzZg==", "commit": {"author": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2011-10-07T06:43:17Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2011-10-07T06:43:17Z"}, "message": "re PR target/50603 ([x32] Unnecessary lea)\n\n\tPR target/50603\n\t* config/i386/i386.c (ix86_fixup_binary_operands): Force src2 of\n\tinteger PLUS RTX to a register to improve address combine.\n\ntestsuite/ChangeLog:\n\n\tPR target/50603\n\t* gcc.target/i386/pr50603.c: New test.\n\nFrom-SVN: r179646", "tree": {"sha": "9829127fd3e18bd3d1dfe0f55201d02fdf33be0b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9829127fd3e18bd3d1dfe0f55201d02fdf33be0b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/10c1a3e722533d837ace718ccef0fd74fae1233f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/10c1a3e722533d837ace718ccef0fd74fae1233f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/10c1a3e722533d837ace718ccef0fd74fae1233f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/10c1a3e722533d837ace718ccef0fd74fae1233f/comments", "author": null, "committer": null, "parents": [{"sha": "e7912e12dd28e84c96760107d3d552800beaaa30", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e7912e12dd28e84c96760107d3d552800beaaa30", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e7912e12dd28e84c96760107d3d552800beaaa30"}], "stats": {"total": 52, "additions": 39, "deletions": 13}, "files": [{"sha": "21e7ee3767e916b022a22325172c375cb98d868d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/10c1a3e722533d837ace718ccef0fd74fae1233f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/10c1a3e722533d837ace718ccef0fd74fae1233f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=10c1a3e722533d837ace718ccef0fd74fae1233f", "patch": "@@ -1,3 +1,10 @@\n+2011-10-07  Uros Bizjak  <ubizjak@gmail.com>\n+\t    H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR target/50603\n+\t* config/i386/i386.c (ix86_fixup_binary_operands): Force src2 of\n+\tinteger PLUS RTX to a register to improve address combine.\n+\n 2011-10-06  Richard Henderson  <rth@redhat.com>\n \n \t* combine-stack-adjust.c (maybe_move_args_size_note): Add after\n@@ -31,9 +38,8 @@\n \n 2011-10-06  Bernd Schmidt  <bernds@codesourcery.com>\n \n-\t* function.c (thread_prologue_and_epilogue_insns): Emit split\n-\tprologue on the orig_entry_edge. Don't account for it in\n-\tprologue_clobbered.\n+\t* function.c (thread_prologue_and_epilogue_insns): Emit split prologue\n+\ton the orig_entry_edge. Don't account for it in prologue_clobbered.\n \n 2011-10-06  Jakub Jelinek  <jakub@redhat.com>\n "}, {"sha": "85dccf9eb430b72f26033caaa18f0e4b783ca22f", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/10c1a3e722533d837ace718ccef0fd74fae1233f/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/10c1a3e722533d837ace718ccef0fd74fae1233f/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=10c1a3e722533d837ace718ccef0fd74fae1233f", "patch": "@@ -15798,6 +15798,12 @@ ix86_fixup_binary_operands (enum rtx_code code, enum machine_mode mode,\n   if (MEM_P (src1) && !rtx_equal_p (dst, src1))\n     src1 = force_reg (mode, src1);\n \n+  /* Improve address combine.  */\n+  if (code == PLUS\n+      && GET_MODE_CLASS (mode) == MODE_INT\n+      && MEM_P (src2))\n+    src2 = force_reg (mode, src2);\n+\n   operands[1] = src1;\n   operands[2] = src2;\n   return dst;"}, {"sha": "23065b8545838ff90470fb53302a12f4637a4753", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 13, "deletions": 10, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/10c1a3e722533d837ace718ccef0fd74fae1233f/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/10c1a3e722533d837ace718ccef0fd74fae1233f/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=10c1a3e722533d837ace718ccef0fd74fae1233f", "patch": "@@ -1,3 +1,9 @@\n+2011-10-07  Uros Bizjak  <ubizjak@gmail.com>\n+\t    H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR target/50603\n+\t* gcc.target/i386/pr50603.c: New test.\n+\n 2011-10-06  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/39164\n@@ -144,8 +150,7 @@\n \n 2011-10-04  Artem Shinkarov  <artyom.shinkaroff@gmail.com>\n \n-\t* gcc.c-torture/execute/vector-compare-1.c: Fix trailing white\n-\tspaces.\n+\t* gcc.c-torture/execute/vector-compare-1.c: Fix trailing white spaces.\n \t(main): Use __typeof to get result type of comparison.\n \n 2011-10-04  Ira Rosen  <ira.rosen@linaro.org>\n@@ -298,8 +303,8 @@\n \tPR testsuite/50485\n \t* gcc.target/i386/sse4_1-blendps.c: Include <stdlib.h>.\n \t(TEST): Initialize src3 with random floats.\n-\t* gcc.target/i386/sse4_1-blendps-2.c (sse4_1_test): Remove field i from\n-\tunion src3.  Initialize src3 with random floats.\n+\t* gcc.target/i386/sse4_1-blendps-2.c (sse4_1_test): Remove field i\n+\tfrom union src3.  Initialize src3 with random floats.\n \n 2011-09-27  Oleg Endo  <oleg.endo@t-online.de>\n \n@@ -659,8 +664,7 @@\n 2011-09-20  H.J. Lu  <hongjiu.lu@intel.com>\n \n \tPR testsuite/50469\n-\t* gfortran.dg/storage_size_2.f08: Replace \"must be be\" with\n-\t\"must be\".\n+\t* gfortran.dg/storage_size_2.f08: Replace \"must be be\" with \"must be\".\n \n 2011-09-20  Jason Merrill  <jason@redhat.com>\n \n@@ -1046,8 +1050,7 @@\n \tgcc.dg/vect/vect-54.c, gcc.dg/vect/vect-46.c, gcc.dg/vect/vect-48.c,\n \tgcc.dg/vect/vect-96.c, gcc.dg/vect/vect-multitypes-3.c,\n \tgcc.dg/vect/vect-40.c: Likewise.\n-\t* gcc.dg/vect/vect-outer-5.c: Remove quad-vectors option as\n-\tredundant.\n+\t* gcc.dg/vect/vect-outer-5.c: Remove quad-vectors option as redundant.\n \t* gcc.dg/vect/vect-109.c, gcc.dg/vect/vect-peel-1.c,\n \tgcc.dg/vect/vect-peel-2.c, gcc.dg/vect/slp-25.c,\n \tgcc.dg/vect/vect-multitypes-1.c, gcc.dg/vect/slp-3.c,\n@@ -1104,8 +1107,8 @@\n \n 2011-09-05  Georg-Johann Lay  <avr@gjlay.de>\n \n-\t* gcc.dg/ipa/ipcp-3.c (mark_cell): Use mask 1 << 14 instead of 1\n-\t<< 18 to avoid warning on int=16 platforms..\n+\t* gcc.dg/ipa/ipcp-3.c (mark_cell): Use mask 1 << 14 instead of 1 << 18\n+\tto avoid warning on int=16 platforms..\n \n 2011-09-05  Jakub Jelinek  <jakub@redhat.com>\n "}, {"sha": "101ef85484d92089c8980d4946ac19dc1140bd4e", "filename": "gcc/testsuite/gcc.target/i386/pr50603.c", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/10c1a3e722533d837ace718ccef0fd74fae1233f/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr50603.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/10c1a3e722533d837ace718ccef0fd74fae1233f/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr50603.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr50603.c?ref=10c1a3e722533d837ace718ccef0fd74fae1233f", "patch": "@@ -0,0 +1,11 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2\" } */\n+\n+extern int *foo;\n+\n+int\n+bar (int x)\n+{\n+  return foo[x];\n+}\n+/* { dg-final { scan-assembler-not \"lea\\[lq\\]\" } } */"}]}