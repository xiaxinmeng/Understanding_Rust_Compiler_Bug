{"sha": "ab8bfb6497bde60fdaa99b684e499e4748cffe49", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWI4YmZiNjQ5N2JkZTYwZmRhYTk5YjY4NGU0OTllNDc0OGNmZmU0OQ==", "commit": {"author": {"name": "Ed Schonberg", "email": "schonberg@adacore.com", "date": "2008-05-27T10:14:09Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2008-05-27T10:14:09Z"}, "message": "2008-05-27  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_ch3.adb:\n\t(Get_Discr_Value): Remove obsolete code that failed to find the value\n\tof a discriminant for an inherited task component appearing in a type\n\textension.\n\nFrom-SVN: r136001", "tree": {"sha": "9ba787cc67adf604f65435853654852bdb8b7e07", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9ba787cc67adf604f65435853654852bdb8b7e07"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ab8bfb6497bde60fdaa99b684e499e4748cffe49", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ab8bfb6497bde60fdaa99b684e499e4748cffe49", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ab8bfb6497bde60fdaa99b684e499e4748cffe49", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ab8bfb6497bde60fdaa99b684e499e4748cffe49/comments", "author": {"login": "Edschonberg", "id": 6352375, "node_id": "MDQ6VXNlcjYzNTIzNzU=", "avatar_url": "https://avatars.githubusercontent.com/u/6352375?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Edschonberg", "html_url": "https://github.com/Edschonberg", "followers_url": "https://api.github.com/users/Edschonberg/followers", "following_url": "https://api.github.com/users/Edschonberg/following{/other_user}", "gists_url": "https://api.github.com/users/Edschonberg/gists{/gist_id}", "starred_url": "https://api.github.com/users/Edschonberg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Edschonberg/subscriptions", "organizations_url": "https://api.github.com/users/Edschonberg/orgs", "repos_url": "https://api.github.com/users/Edschonberg/repos", "events_url": "https://api.github.com/users/Edschonberg/events{/privacy}", "received_events_url": "https://api.github.com/users/Edschonberg/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "66f3c0b0de7832717ca5ebace7f72a6ffb101569", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/66f3c0b0de7832717ca5ebace7f72a6ffb101569", "html_url": "https://github.com/Rust-GCC/gccrs/commit/66f3c0b0de7832717ca5ebace7f72a6ffb101569"}], "stats": {"total": 7, "additions": 3, "deletions": 4}, "files": [{"sha": "a375eedee7c500ce266663070c11433b7bfaf431", "filename": "gcc/ada/sem_ch3.adb", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab8bfb6497bde60fdaa99b684e499e4748cffe49/gcc%2Fada%2Fsem_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab8bfb6497bde60fdaa99b684e499e4748cffe49/gcc%2Fada%2Fsem_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch3.adb?ref=ab8bfb6497bde60fdaa99b684e499e4748cffe49", "patch": "@@ -9850,7 +9850,6 @@ package body Sem_Ch3 is\n       function Get_Discr_Value (Discrim : Entity_Id) return Node_Id is\n          D : Entity_Id;\n          E : Elmt_Id;\n-         G : Elmt_Id;\n \n       begin\n          --  The discriminant may be declared for the type, in which case we\n@@ -9880,22 +9879,22 @@ package body Sem_Ch3 is\n          --  to one: one new discriminant can constrain several old ones. In\n          --  that case, scan sequentially the stored_constraint, the list of\n          --  discriminants of the parents, and the constraints.\n+         --  Previous code checked for the present of the Stored_Constraint\n+         --  list for the derived type, but did not use it at all. Should it\n+         --  be present when the component is a discriminated task type?\n \n          if Is_Derived_Type (Typ)\n-           and then Present (Stored_Constraint (Typ))\n            and then Scope (Entity (Discrim)) = Etype (Typ)\n          then\n             D := First_Discriminant (Etype (Typ));\n             E := First_Elmt (Constraints);\n-            G := First_Elmt (Stored_Constraint (Typ));\n             while Present (D) loop\n                if D = Entity (Discrim) then\n                   return Node (E);\n                end if;\n \n                Next_Discriminant (D);\n                Next_Elmt (E);\n-               Next_Elmt (G);\n             end loop;\n          end if;\n "}]}