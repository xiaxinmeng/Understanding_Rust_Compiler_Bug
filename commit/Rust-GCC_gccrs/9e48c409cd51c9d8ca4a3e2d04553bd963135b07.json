{"sha": "9e48c409cd51c9d8ca4a3e2d04553bd963135b07", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWU0OGM0MDljZDUxYzlkOGNhNGEzZTJkMDQ1NTNiZDk2MzEzNWIwNw==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@cs.umass.edu", "date": "2003-02-25T22:56:27Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2003-02-25T22:56:27Z"}, "message": "* gcse.c (cprop_jump): Revert the 2003-02-23 change.\n\nFrom-SVN: r63420", "tree": {"sha": "34e3c139ca6605b8ce6fb63dc5163f6a7e897f71", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/34e3c139ca6605b8ce6fb63dc5163f6a7e897f71"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9e48c409cd51c9d8ca4a3e2d04553bd963135b07", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9e48c409cd51c9d8ca4a3e2d04553bd963135b07", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9e48c409cd51c9d8ca4a3e2d04553bd963135b07", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9e48c409cd51c9d8ca4a3e2d04553bd963135b07/comments", "author": null, "committer": null, "parents": [{"sha": "4e21585b537b749b0c2be93279b40ea2e1dbcca9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4e21585b537b749b0c2be93279b40ea2e1dbcca9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4e21585b537b749b0c2be93279b40ea2e1dbcca9"}], "stats": {"total": 30, "additions": 10, "deletions": 20}, "files": [{"sha": "43c24171fe9749f43838469d8f1d31be935b9458", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e48c409cd51c9d8ca4a3e2d04553bd963135b07/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e48c409cd51c9d8ca4a3e2d04553bd963135b07/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9e48c409cd51c9d8ca4a3e2d04553bd963135b07", "patch": "@@ -1,3 +1,7 @@\n+2003-02-25  Kazu Hirata  <kazu@cs.umass.edu>\n+\n+\t* gcse.c (cprop_jump): Revert the 2003-02-23 change.\n+\n 2003-02-25  Vladimir Makarov  <vmakarov@toke.toronto.redhat.com>\n             Richard Henderson  <rth@redhat.com>\n "}, {"sha": "f5bb66d0053d0ef486d6a812ec7614ecb04fdb9a", "filename": "gcc/gcse.c", "status": "modified", "additions": 6, "deletions": 20, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e48c409cd51c9d8ca4a3e2d04553bd963135b07/gcc%2Fgcse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e48c409cd51c9d8ca4a3e2d04553bd963135b07/gcc%2Fgcse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcse.c?ref=9e48c409cd51c9d8ca4a3e2d04553bd963135b07", "patch": "@@ -4058,33 +4058,19 @@ cprop_jump (bb, setcc, jump, from, src)\n       && !modified_between_p (src, setcc, jump))\n     {\n       rtx setcc_set = single_set (setcc);\n-      rtx note = find_reg_equal_equiv_note (setcc);\n-      /* Use REG_EQUAL note if available.  */\n-      rtx setcc_set_src = (note == 0) ? SET_SRC (setcc_set) : XEXP (note, 0);\n-\n       new_set = simplify_replace_rtx (SET_SRC (set),\n \t\t\t\t      SET_DEST (setcc_set),\n-\t\t\t\t      setcc_set_src);\n+\t\t\t\t      SET_SRC (setcc_set));\n     }\n   else\n     new_set = set;\n \n-  /* If NEW_SET is simplified down to either a label or a no-op, we\n-     don't have to replace FROM with SRC, but we still have to either\n-     turn JUMP to an unconditional branch or remove the no-op.  This\n-     can happen if JUMP is simplified using the REG_EQUAL note in\n-     SETCC.  */\n-  if (GET_CODE (new_set) == LABEL_REF || new_set == pc_rtx)\n-    new = new_set;\n-  else\n-    {\n-      new = simplify_replace_rtx (new_set, from, src);\n+  new = simplify_replace_rtx (new_set, from, src);\n \n-      /* If no simplification can be made, then try the next\n-\t register.  */\n-      if (rtx_equal_p (new, new_set) || rtx_equal_p (new, SET_SRC (set)))\n-\treturn 0;\n-    }\n+  /* If no simplification can be made, then try the next\n+     register.  */\n+  if (rtx_equal_p (new, new_set) || rtx_equal_p (new, SET_SRC (set)))\n+    return 0;\n \n   /* If this is now a no-op delete it, otherwise this must be a valid insn.  */\n   if (new == pc_rtx)"}]}