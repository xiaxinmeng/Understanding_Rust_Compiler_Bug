{"sha": "1a29f703bf52e140ee76cb550951557c0777cbfd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWEyOWY3MDNiZjUyZTE0MGVlNzZjYjU1MDk1MTU1N2MwNzc3Y2JmZA==", "commit": {"author": {"name": "J\"orn Rennecke", "email": "amylaar@cygnus.co.uk", "date": "1998-05-21T22:34:06Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1998-05-21T22:34:06Z"}, "message": "regmove.c (gen_add3_insn): New function.\n\n        * regmove.c (gen_add3_insn): New function.\n        (fixup_match_2): Use it instead of calling gen_addsi3.\n\nFrom-SVN: r19938", "tree": {"sha": "6da8e87404024d9ecb238bedd191d7d916d1bce7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6da8e87404024d9ecb238bedd191d7d916d1bce7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1a29f703bf52e140ee76cb550951557c0777cbfd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1a29f703bf52e140ee76cb550951557c0777cbfd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1a29f703bf52e140ee76cb550951557c0777cbfd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1a29f703bf52e140ee76cb550951557c0777cbfd/comments", "author": null, "committer": null, "parents": [{"sha": "05930232f1ccf2ea94e57b600eddb7ca81d92063", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/05930232f1ccf2ea94e57b600eddb7ca81d92063", "html_url": "https://github.com/Rust-GCC/gccrs/commit/05930232f1ccf2ea94e57b600eddb7ca81d92063"}], "stats": {"total": 28, "additions": 26, "deletions": 2}, "files": [{"sha": "192fa09d11d4719078b7fd9b623d362bbeef6359", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a29f703bf52e140ee76cb550951557c0777cbfd/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a29f703bf52e140ee76cb550951557c0777cbfd/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1a29f703bf52e140ee76cb550951557c0777cbfd", "patch": "@@ -1,3 +1,8 @@\n+Thu May 21 19:50:13 1998  J\"orn Rennecke <amylaar@cygnus.co.uk>\n+\n+\t* regmove.c (gen_add3_insn): New function.\n+\t(fixup_match_2): Use it instead of calling gen_addsi3.\n+\n Thu May 21 23:09:50 1998  Jeffrey A Law  (law@cygnus.com)\n \n \t* alias.c (rtx_equal_for_memref_p): Handle SCRATCH as a memory"}, {"sha": "ee56db596c7ef78761d116e7029ee868f39a0ff8", "filename": "gcc/regmove.c", "status": "modified", "additions": 21, "deletions": 2, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a29f703bf52e140ee76cb550951557c0777cbfd/gcc%2Fregmove.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a29f703bf52e140ee76cb550951557c0777cbfd/gcc%2Fregmove.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fregmove.c?ref=1a29f703bf52e140ee76cb550951557c0777cbfd", "patch": "@@ -47,6 +47,7 @@ the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n static int optimize_reg_copy_1\tPROTO((rtx, rtx, rtx));\n static void optimize_reg_copy_2\tPROTO((rtx, rtx, rtx));\n static void optimize_reg_copy_3\tPROTO((rtx, rtx, rtx));\n+static rtx gen_add3_insn\tPROTO((rtx, rtx, rtx));\n \n struct match {\n   int with[MAX_RECOG_OPERANDS];\n@@ -65,6 +66,23 @@ static int reg_is_remote_constant_p PROTO((rtx, rtx, rtx));\n static int stable_but_for_p PROTO((rtx, rtx, rtx));\n static int loop_depth;\n \n+/* Generate and return an insn body to add r1 and c,\n+   storing the result in r0.  */\n+static rtx\n+gen_add3_insn (r0, r1, c)\n+     rtx r0, r1, c;\n+{\n+  int icode = (int) add_optab->handlers[(int) GET_MODE (r0)].insn_code;\n+\n+    if (icode == CODE_FOR_nothing\n+      || ! (*insn_operand_predicate[icode][0]) (r0, insn_operand_mode[icode][0])\n+      || ! (*insn_operand_predicate[icode][1]) (r1, insn_operand_mode[icode][1])\n+      || ! (*insn_operand_predicate[icode][2]) (c, insn_operand_mode[icode][2]))\n+    return NULL_RTX;\n+\n+  return (GEN_FCN (icode) (r0, r1, c));\n+}\n+\n #ifdef AUTO_INC_DEC\n \n /* INC_INSN is an instruction that adds INCREMENT to REG.\n@@ -639,8 +657,9 @@ fixup_match_2 (insn, dst, src, offset, regmove_dump_file)\n         {\n \t  HOST_WIDE_INT newconst\n \t    = INTVAL (offset) - INTVAL (XEXP (SET_SRC (pset), 1));\n-\t  if (validate_change (insn, &PATTERN (insn),\n-\t\t\t       gen_addsi3 (dst, dst, GEN_INT (newconst)), 0))\n+\t  rtx add = gen_add3_insn (dst, dst, GEN_INT (newconst));\n+\n+\t  if (add && validate_change (insn, &PATTERN (insn), add, 0))\n \t    {\n \t      /* Remove the death note for DST from DST_DEATH.  */\n \t      if (dst_death)"}]}