{"sha": "e997db044394dd7ae751f52c209320a0097218be", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTk5N2RiMDQ0Mzk0ZGQ3YWU3NTFmNTJjMjA5MzIwYTAwOTcyMThiZQ==", "commit": {"author": {"name": "Marc Poulhi\u00e8s", "email": "dkm@kataplop.net", "date": "2021-03-31T19:09:56Z"}, "committer": {"name": "Philip Herron", "email": "herron.philip@googlemail.com", "date": "2021-04-01T09:42:29Z"}, "message": "Add dg-error to generics4.rs xfail test\n\nHaving at least one dg-error and not only dg-excess-error should avoid silent\nregression.", "tree": {"sha": "fa07bdde6ee3f8b05f13fd4bfc885e3c02efb459", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fa07bdde6ee3f8b05f13fd4bfc885e3c02efb459"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e997db044394dd7ae751f52c209320a0097218be", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e997db044394dd7ae751f52c209320a0097218be", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e997db044394dd7ae751f52c209320a0097218be", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e997db044394dd7ae751f52c209320a0097218be/comments", "author": {"login": "dkm", "id": 87603, "node_id": "MDQ6VXNlcjg3NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/87603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dkm", "html_url": "https://github.com/dkm", "followers_url": "https://api.github.com/users/dkm/followers", "following_url": "https://api.github.com/users/dkm/following{/other_user}", "gists_url": "https://api.github.com/users/dkm/gists{/gist_id}", "starred_url": "https://api.github.com/users/dkm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dkm/subscriptions", "organizations_url": "https://api.github.com/users/dkm/orgs", "repos_url": "https://api.github.com/users/dkm/repos", "events_url": "https://api.github.com/users/dkm/events{/privacy}", "received_events_url": "https://api.github.com/users/dkm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c044fda54bce0b6a05425eb014a59e3def77c8a1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c044fda54bce0b6a05425eb014a59e3def77c8a1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c044fda54bce0b6a05425eb014a59e3def77c8a1"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "0c1854062f090994b310299605b64b0528d89ad5", "filename": "gcc/testsuite/rust.test/xfail_compile/generics4.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e997db044394dd7ae751f52c209320a0097218be/gcc%2Ftestsuite%2Frust.test%2Fxfail_compile%2Fgenerics4.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e997db044394dd7ae751f52c209320a0097218be/gcc%2Ftestsuite%2Frust.test%2Fxfail_compile%2Fgenerics4.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Fxfail_compile%2Fgenerics4.rs?ref=e997db044394dd7ae751f52c209320a0097218be", "patch": "@@ -3,7 +3,7 @@ struct GenericStruct<T>(T, usize);\n \n fn main() {\n     let a2;\n-    a2 = GenericStruct::<i8, i32>(1, 456);\n+    a2 = GenericStruct::<i8, i32>(1, 456); // { dg-error \"Invalid number of generic arguments to generic type\" }\n \n     let b2: i32 = a2.0;\n     let c2: usize = a2.1;"}]}