{"sha": "dac45ea36e2d1e5997848ef0e39976a04ea85153", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGFjNDVlYTM2ZTJkMWU1OTk3ODQ4ZWYwZTM5OTc2YTA0ZWE4NTE1Mw==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-09-05T02:03:04Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-09-05T02:03:04Z"}, "message": "Comment change for meaning of TREE_CONSTANT_OVERFLOW.\n\nFrom-SVN: r2054", "tree": {"sha": "bac0e9a0c8b4906dbada0185ef4c9e9eacc67344", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bac0e9a0c8b4906dbada0185ef4c9e9eacc67344"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dac45ea36e2d1e5997848ef0e39976a04ea85153", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dac45ea36e2d1e5997848ef0e39976a04ea85153", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dac45ea36e2d1e5997848ef0e39976a04ea85153", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dac45ea36e2d1e5997848ef0e39976a04ea85153/comments", "author": null, "committer": null, "parents": [{"sha": "fe3e8e402b65bcfd1e8bb31ca3801cede0b19531", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fe3e8e402b65bcfd1e8bb31ca3801cede0b19531", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fe3e8e402b65bcfd1e8bb31ca3801cede0b19531"}], "stats": {"total": 3, "additions": 1, "deletions": 2}, "files": [{"sha": "1e51022957589cf6bb2f4532618b5c4571b966dc", "filename": "gcc/tree.h", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dac45ea36e2d1e5997848ef0e39976a04ea85153/gcc%2Ftree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dac45ea36e2d1e5997848ef0e39976a04ea85153/gcc%2Ftree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.h?ref=dac45ea36e2d1e5997848ef0e39976a04ea85153", "patch": "@@ -228,8 +228,7 @@ struct tree_common\n    implicitly and should not lead to an \"unused value\" warning.  */\n #define TREE_NO_UNUSED_WARNING(NODE) ((NODE)->common.static_flag)\n \n-/* In a NON_LVALUE_EXPR, this means there was overflow in folding.\n-   The folded constant is inside the NON_LVALUE_EXPR.  */\n+/* In an INTEGER_CST, this means there was overflow in folding.  */\n #define TREE_CONSTANT_OVERFLOW(NODE) ((NODE)->common.static_flag)\n \n /* Nonzero for a TREE_LIST or TREE_VEC node means that the derivation"}]}