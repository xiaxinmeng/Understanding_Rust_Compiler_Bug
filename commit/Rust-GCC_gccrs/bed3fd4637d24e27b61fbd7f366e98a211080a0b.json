{"sha": "bed3fd4637d24e27b61fbd7f366e98a211080a0b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmVkM2ZkNDYzN2QyNGUyN2I2MWZiZDdmMzY2ZTk4YTIxMTA4MGEwYg==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2017-04-25T12:15:44Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2017-04-25T12:15:44Z"}, "message": "re PR tree-optimization/80492 (Wrong code when unrolling a loop with inline asm and local regs)\n\n2017-04-25  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/80492\n\t* alias.c (compare_base_decls): Handle registers with asm\n\tspecification conservatively.\n\t* tree-ssa-alias.c (decl_refs_may_alias_p): Handle\n\tcompare_base_decls returning dont-know properly.\n\n\t* gcc.dg/pr80492.c: New testcase.\n\nFrom-SVN: r247208", "tree": {"sha": "690cd4fd07d5f180a7f6871949ce641cfc7e1daf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/690cd4fd07d5f180a7f6871949ce641cfc7e1daf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bed3fd4637d24e27b61fbd7f366e98a211080a0b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bed3fd4637d24e27b61fbd7f366e98a211080a0b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bed3fd4637d24e27b61fbd7f366e98a211080a0b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bed3fd4637d24e27b61fbd7f366e98a211080a0b/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ca0b6141fa6a9c98939224ebc3b7ddc171df5b96", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ca0b6141fa6a9c98939224ebc3b7ddc171df5b96", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ca0b6141fa6a9c98939224ebc3b7ddc171df5b96"}], "stats": {"total": 52, "additions": 50, "deletions": 2}, "files": [{"sha": "41567792b6bbb66b120b3bbe3c1658e6cdd66472", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bed3fd4637d24e27b61fbd7f366e98a211080a0b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bed3fd4637d24e27b61fbd7f366e98a211080a0b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=bed3fd4637d24e27b61fbd7f366e98a211080a0b", "patch": "@@ -1,3 +1,11 @@\n+2017-04-25  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/80492\n+\t* alias.c (compare_base_decls): Handle registers with asm\n+\tspecification conservatively.\n+\t* tree-ssa-alias.c (decl_refs_may_alias_p): Handle\n+\tcompare_base_decls returning dont-know properly.\n+\n 2017-04-25  Claudiu Zissulescu  <claziss@synopsys.com>\n \n \t* config/arc/arc.c (LEGITIMATE_OFFSET_ADDRESS_P): Delete macro."}, {"sha": "e16e3501522e539f07759c4188aebb9f9ae859b6", "filename": "gcc/alias.c", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bed3fd4637d24e27b61fbd7f366e98a211080a0b/gcc%2Falias.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bed3fd4637d24e27b61fbd7f366e98a211080a0b/gcc%2Falias.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Falias.c?ref=bed3fd4637d24e27b61fbd7f366e98a211080a0b", "patch": "@@ -2046,6 +2046,18 @@ compare_base_decls (tree base1, tree base2)\n   if (base1 == base2)\n     return 1;\n \n+  /* If we have two register decls with register specification we\n+     cannot decide unless their assembler name is the same.  */\n+  if (DECL_REGISTER (base1)\n+      && DECL_REGISTER (base2)\n+      && DECL_ASSEMBLER_NAME_SET_P (base1)\n+      && DECL_ASSEMBLER_NAME_SET_P (base2))\n+    {\n+      if (DECL_ASSEMBLER_NAME (base1) == DECL_ASSEMBLER_NAME (base2))\n+\treturn 1;\n+      return -1;\n+    }\n+\n   /* Declarations of non-automatic variables may have aliases.  All other\n      decls are unique.  */\n   if (!decl_in_symtab_p (base1)"}, {"sha": "576838e0d4185b4b6bded2f8734bc189c0a21ca4", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bed3fd4637d24e27b61fbd7f366e98a211080a0b/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bed3fd4637d24e27b61fbd7f366e98a211080a0b/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=bed3fd4637d24e27b61fbd7f366e98a211080a0b", "patch": "@@ -1,3 +1,8 @@\n+2017-04-25  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/80492\n+\t* gcc.dg/pr80492.c: New testcase.\n+\n 2017-04-25  Senthil Kumar Selvaraj  <senthil_kumar.selvaraj@atmel.com>\n \n \t* gcc.dg/attr-alloc_size-10.c: Ignore overflow warnings"}, {"sha": "1721b2dee39b8da9190fc904af46d53ffbb81f16", "filename": "gcc/testsuite/gcc.dg/pr80492.c", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bed3fd4637d24e27b61fbd7f366e98a211080a0b/gcc%2Ftestsuite%2Fgcc.dg%2Fpr80492.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bed3fd4637d24e27b61fbd7f366e98a211080a0b/gcc%2Ftestsuite%2Fgcc.dg%2Fpr80492.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr80492.c?ref=bed3fd4637d24e27b61fbd7f366e98a211080a0b", "patch": "@@ -0,0 +1,20 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-w -O2 -fdump-tree-optimized\" } */\n+\n+static __inline__ __attribute__((__always_inline__))\n+void syscall_7 (int val)\n+{\n+  register int reg __asm (\"4\") = val;\n+  __asm __volatile__ (\"/* Some Code %0 */\" :: \"r\" (reg));\n+}\n+\n+void do_syscalls (void)\n+{\n+  for (int s = 0; s < 2; s++)\n+    {\n+      syscall_7 (0);\n+      syscall_7 (1);\n+    }\n+}\n+\n+/* { dg-final { scan-tree-dump-times \"reg = \" 4 \"optimized\" } } */"}, {"sha": "0dcb273e5c2e236f29a992530d4dafd9cda34958", "filename": "gcc/tree-ssa-alias.c", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bed3fd4637d24e27b61fbd7f366e98a211080a0b/gcc%2Ftree-ssa-alias.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bed3fd4637d24e27b61fbd7f366e98a211080a0b/gcc%2Ftree-ssa-alias.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-alias.c?ref=bed3fd4637d24e27b61fbd7f366e98a211080a0b", "patch": "@@ -1096,13 +1096,16 @@ decl_refs_may_alias_p (tree ref1, tree base1,\n {\n   gcc_checking_assert (DECL_P (base1) && DECL_P (base2));\n \n+  int cmp = compare_base_decls (base1, base2);\n+\n   /* If both references are based on different variables, they cannot alias.  */\n-  if (compare_base_decls (base1, base2) == 0)\n+  if (cmp == 0)\n     return false;\n \n   /* If both references are based on the same variable, they cannot alias if\n      the accesses do not overlap.  */\n-  if (!ranges_overlap_p (offset1, max_size1, offset2, max_size2))\n+  if (cmp == 1\n+      && !ranges_overlap_p (offset1, max_size1, offset2, max_size2))\n     return false;\n \n   /* For components with variable position, the above test isn't sufficient,"}]}