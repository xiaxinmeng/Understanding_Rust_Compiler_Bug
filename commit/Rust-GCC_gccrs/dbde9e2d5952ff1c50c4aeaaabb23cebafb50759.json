{"sha": "dbde9e2d5952ff1c50c4aeaaabb23cebafb50759", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGJkZTllMmQ1OTUyZmYxYzUwYzRhZWFhYWJiMjNjZWJhZmI1MDc1OQ==", "commit": {"author": {"name": "Andrew Stubbs", "email": "ams@codesourcery.com", "date": "2020-03-17T12:49:19Z"}, "committer": {"name": "Andrew Stubbs", "email": "ams@codesourcery.com", "date": "2020-03-18T12:53:26Z"}, "message": "amdgcn: Fix vector compare modes\n\nThe GCN VCC register has 64 CC values in one registers, one bit for each\nvector lane.\n\nPreviously we avoided problems with invalid optimizations by not declaring\na mode for the comparison operators, but it turns out that causes other\nproblems (and build warnings).\n\nInstead, the optimization issues can be avoided by setting\nSTORE_REGISTER_VALUE to -1, meaning that all the bits are significant.\n\n(It would be better if we could set STORE_REGISTER_VALUE according to the\nknown mask or vector size, but we can't.)\n\n2020-03-18  Andrew Stubbs  <ams@codesourcery.com>\n\n\tgcc/\n\t* config/gcn/gcn-valu.md (vec_cmp<mode>di): Set operand 1 to DImode.\n\t(vec_cmp<mode>di_dup): Likewise.\n\t* config/gcn/gcn.h (STORE_FLAG_VALUE): Set to -1.", "tree": {"sha": "10575e9e6ce584de02602c55d378d2116488b49f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/10575e9e6ce584de02602c55d378d2116488b49f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dbde9e2d5952ff1c50c4aeaaabb23cebafb50759", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dbde9e2d5952ff1c50c4aeaaabb23cebafb50759", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dbde9e2d5952ff1c50c4aeaaabb23cebafb50759", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dbde9e2d5952ff1c50c4aeaaabb23cebafb50759/comments", "author": {"login": "ams-cs", "id": 2235130, "node_id": "MDQ6VXNlcjIyMzUxMzA=", "avatar_url": "https://avatars.githubusercontent.com/u/2235130?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ams-cs", "html_url": "https://github.com/ams-cs", "followers_url": "https://api.github.com/users/ams-cs/followers", "following_url": "https://api.github.com/users/ams-cs/following{/other_user}", "gists_url": "https://api.github.com/users/ams-cs/gists{/gist_id}", "starred_url": "https://api.github.com/users/ams-cs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ams-cs/subscriptions", "organizations_url": "https://api.github.com/users/ams-cs/orgs", "repos_url": "https://api.github.com/users/ams-cs/repos", "events_url": "https://api.github.com/users/ams-cs/events{/privacy}", "received_events_url": "https://api.github.com/users/ams-cs/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ams-cs", "id": 2235130, "node_id": "MDQ6VXNlcjIyMzUxMzA=", "avatar_url": "https://avatars.githubusercontent.com/u/2235130?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ams-cs", "html_url": "https://github.com/ams-cs", "followers_url": "https://api.github.com/users/ams-cs/followers", "following_url": "https://api.github.com/users/ams-cs/following{/other_user}", "gists_url": "https://api.github.com/users/ams-cs/gists{/gist_id}", "starred_url": "https://api.github.com/users/ams-cs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ams-cs/subscriptions", "organizations_url": "https://api.github.com/users/ams-cs/orgs", "repos_url": "https://api.github.com/users/ams-cs/repos", "events_url": "https://api.github.com/users/ams-cs/events{/privacy}", "received_events_url": "https://api.github.com/users/ams-cs/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5a80a6c3e5f800de63a2eadd8ae3e6822172a718", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5a80a6c3e5f800de63a2eadd8ae3e6822172a718", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5a80a6c3e5f800de63a2eadd8ae3e6822172a718"}], "stats": {"total": 14, "additions": 12, "deletions": 2}, "files": [{"sha": "fcd02723866244409b2b8a000eb03050ef087a53", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbde9e2d5952ff1c50c4aeaaabb23cebafb50759/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbde9e2d5952ff1c50c4aeaaabb23cebafb50759/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=dbde9e2d5952ff1c50c4aeaaabb23cebafb50759", "patch": "@@ -1,3 +1,9 @@\n+2020-03-18  Andrew Stubbs  <ams@codesourcery.com>\n+\n+\t* config/gcn/gcn-valu.md (vec_cmp<mode>di): Set operand 1 to DImode.\n+\t(vec_cmp<mode>di_dup): Likewise.\n+\t* config/gcn/gcn.h (STORE_FLAG_VALUE): Set to -1.\n+\n 2020-03-18  Andrew Stubbs  <ams@codesourcery.com>\n \n \t* config/gcn/gcn-valu.md (COND_MODE): Delete."}, {"sha": "d3620688a9cc0fa1b2941c57d051a12ae452a8e9", "filename": "gcc/config/gcn/gcn-valu.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbde9e2d5952ff1c50c4aeaaabb23cebafb50759/gcc%2Fconfig%2Fgcn%2Fgcn-valu.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbde9e2d5952ff1c50c4aeaaabb23cebafb50759/gcc%2Fconfig%2Fgcn%2Fgcn-valu.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fgcn%2Fgcn-valu.md?ref=dbde9e2d5952ff1c50c4aeaaabb23cebafb50759", "patch": "@@ -2549,7 +2549,7 @@\n \n (define_insn \"vec_cmp<mode>di\"\n   [(set (match_operand:DI 0 \"register_operand\"\t      \"=cV,cV,  e, e,Sg,Sg\")\n-\t(match_operator 1 \"gcn_fp_compare_operator\"\n+\t(match_operator:DI 1 \"gcn_fp_compare_operator\"\n \t  [(match_operand:VCMP_MODE 2 \"gcn_alu_operand\"\n \t\t\t\t\t\t      \"vSv, B,vSv, B, v,vA\")\n \t   (match_operand:VCMP_MODE 3 \"gcn_vop3_operand\"\n@@ -2658,7 +2658,7 @@\n \n (define_insn \"vec_cmp<mode>di_dup\"\n   [(set (match_operand:DI 0 \"register_operand\"\t\t   \"=cV,cV, e,e,Sg\")\n-\t(match_operator 1 \"gcn_fp_compare_operator\"\n+\t(match_operator:DI 1 \"gcn_fp_compare_operator\"\n \t  [(vec_duplicate:VCMP_MODE\n \t     (match_operand:<SCALAR_MODE> 2 \"gcn_alu_operand\"\n \t\t\t\t\t\t\t   \" Sv, B,Sv,B, A\"))"}, {"sha": "9993a995d05be3c61591d5f44db68302ff98d773", "filename": "gcc/config/gcn/gcn.h", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbde9e2d5952ff1c50c4aeaaabb23cebafb50759/gcc%2Fconfig%2Fgcn%2Fgcn.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbde9e2d5952ff1c50c4aeaaabb23cebafb50759/gcc%2Fconfig%2Fgcn%2Fgcn.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fgcn%2Fgcn.h?ref=dbde9e2d5952ff1c50c4aeaaabb23cebafb50759", "patch": "@@ -607,6 +607,10 @@ enum gcn_builtin_codes\n #define SLOW_BYTE_ACCESS 0\n #define WORD_REGISTER_OPERATIONS 1\n \n+/* Flag values are either BImode or DImode, but either way the compiler\n+   should assume that all the bits are live.  */\n+#define STORE_FLAG_VALUE -1\n+\n /* Definitions for register eliminations.\n \n    This is an array of structures.  Each structure initializes one pair"}]}