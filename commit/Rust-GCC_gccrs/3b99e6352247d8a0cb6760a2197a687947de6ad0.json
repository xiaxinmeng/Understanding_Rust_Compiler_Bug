{"sha": "3b99e6352247d8a0cb6760a2197a687947de6ad0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2I5OWU2MzUyMjQ3ZDhhMGNiNjc2MGEyMTk3YTY4Nzk0N2RlNmFkMA==", "commit": {"author": {"name": "Janis Johnson", "email": "janisjo@codesourcery.com", "date": "2011-06-28T19:33:06Z"}, "committer": {"name": "Janis Johnson", "email": "janis@gcc.gnu.org", "date": "2011-06-28T19:33:06Z"}, "message": "2011-06-28  Janis Johnson  <janisjo@codesourcery.com>\n\t    Tom de Vries  <tom@codesourcery.com>\n\n\t* lib/target-supports.exp (check_effective_target_arm_nothumb)\n\t(check_effective_target_arm_thumb2): New effective targets.\n\t* gcc.target/arm/ivopts.c: Remove -mthumb/-marm.  Guard object-size\n\tproperly.  Clean up temporary files.\n\t* gcc.target/arm/ivopts-2.c: Likewise.\n\t* gcc.target/arm/ivopts-3.c: Likewise.\n\t* gcc.target/arm/ivopts-4.c: Likewise.\n\t* gcc.target/arm/ivopts-5.c: Likewise.\n\t* gcc.target/arm/ivopts-6.c: Remove duplicate of ivopts.c.\n\nCo-Authored-By: Tom de Vries <tom@codesourcery.com>\n\nFrom-SVN: r175596", "tree": {"sha": "ca6346597979cb24ad5a85026f56fd7596f13ab4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ca6346597979cb24ad5a85026f56fd7596f13ab4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3b99e6352247d8a0cb6760a2197a687947de6ad0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3b99e6352247d8a0cb6760a2197a687947de6ad0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3b99e6352247d8a0cb6760a2197a687947de6ad0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3b99e6352247d8a0cb6760a2197a687947de6ad0/comments", "author": null, "committer": null, "parents": [{"sha": "19b76346c046b95ee4360a5c35d1e3a846aba6f4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/19b76346c046b95ee4360a5c35d1e3a846aba6f4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/19b76346c046b95ee4360a5c35d1e3a846aba6f4"}], "stats": {"total": 59, "additions": 49, "deletions": 10}, "files": [{"sha": "3139ebafda5f81ecb3a7820a3d722849972e1d9f", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3b99e6352247d8a0cb6760a2197a687947de6ad0/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3b99e6352247d8a0cb6760a2197a687947de6ad0/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=3b99e6352247d8a0cb6760a2197a687947de6ad0", "patch": "@@ -1,3 +1,16 @@\n+2011-06-28  Janis Johnson  <janisjo@codesourcery.com>\n+\t    Tom de Vries  <tom@codesourcery.com>\n+\n+\t* lib/target-supports.exp (check_effective_target_arm_nothumb)\n+\t(check_effective_target_arm_thumb2): New effective targets.\n+\t* gcc.target/arm/ivopts.c: Remove -mthumb/-marm.  Guard object-size\n+\tproperly.  Clean up temporary files.\n+\t* gcc.target/arm/ivopts-2.c: Likewise.\n+\t* gcc.target/arm/ivopts-3.c: Likewise.\n+\t* gcc.target/arm/ivopts-4.c: Likewise.\n+\t* gcc.target/arm/ivopts-5.c: Likewise.\n+\t* gcc.target/arm/ivopts-6.c: Remove duplicate of ivopts.c.\n+\n 2011-06-28  Thomas Koenig  <tkoenig@gcc.gnu.org>\n \n \tPR fortran/49479"}, {"sha": "2cf6372301118b7b673e464d1b46290724618f95", "filename": "gcc/testsuite/gcc.target/arm/ivopts-2.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3b99e6352247d8a0cb6760a2197a687947de6ad0/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fivopts-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3b99e6352247d8a0cb6760a2197a687947de6ad0/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fivopts-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fivopts-2.c?ref=3b99e6352247d8a0cb6760a2197a687947de6ad0", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do assemble } */\n-/* { dg-options \"-Os -mthumb -fdump-tree-ivopts -save-temps\" } */\n+/* { dg-options \"-Os -fdump-tree-ivopts -save-temps\" } */\n \n extern void foo2 (short*);\n \n@@ -14,5 +14,6 @@ tr4 (short array[], int n)\n \n /* { dg-final { scan-tree-dump-times \"PHI <ivtmp\" 1 \"ivopts\"} } */\n /* { dg-final { scan-tree-dump-times \"PHI <\" 1 \"ivopts\"} } */\n-/* { dg-final { object-size text <= 26 { target arm_thumb2_ok } } } */\n+/* { dg-final { object-size text <= 26 { target arm_thumb2 } } } */\n /* { dg-final { cleanup-tree-dump \"ivopts\" } } */\n+/* { dg-final { cleanup-saved-temps \"ivopts\" } } */"}, {"sha": "11d9aac80f290d15a73d64e35eb5440c15300a5b", "filename": "gcc/testsuite/gcc.target/arm/ivopts-3.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3b99e6352247d8a0cb6760a2197a687947de6ad0/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fivopts-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3b99e6352247d8a0cb6760a2197a687947de6ad0/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fivopts-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fivopts-3.c?ref=3b99e6352247d8a0cb6760a2197a687947de6ad0", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do assemble } */\n-/* { dg-options \"-Os -mthumb -fdump-tree-ivopts -save-temps\" } */\n+/* { dg-options \"-Os -fdump-tree-ivopts -save-temps\" } */\n \n extern unsigned int foo2 (short*) __attribute__((pure));\n \n@@ -16,5 +16,6 @@ tr3 (short array[], unsigned int n)\n /* { dg-final { scan-tree-dump-times \"PHI <ivtmp\" 1 \"ivopts\"} } */\n /* { dg-final { scan-tree-dump-times \"PHI <x\" 0 \"ivopts\"} } */\n /* { dg-final { scan-tree-dump-times \", x\" 0 \"ivopts\"} } */\n-/* { dg-final { object-size text <= 30 { target arm_thumb2_ok } } } */\n+/* { dg-final { object-size text <= 30 { target arm_thumb2 } } } */\n /* { dg-final { cleanup-tree-dump \"ivopts\" } } */\n+/* { dg-final { cleanup-saved-temps \"ivopts\" } } */"}, {"sha": "0c476b874f4ade0c3eb3ded6db3218cd1adfada5", "filename": "gcc/testsuite/gcc.target/arm/ivopts-4.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3b99e6352247d8a0cb6760a2197a687947de6ad0/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fivopts-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3b99e6352247d8a0cb6760a2197a687947de6ad0/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fivopts-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fivopts-4.c?ref=3b99e6352247d8a0cb6760a2197a687947de6ad0", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do assemble } */\n-/* { dg-options \"-mthumb -Os -fdump-tree-ivopts -save-temps\" } */\n+/* { dg-options \"-Os -fdump-tree-ivopts -save-temps\" } */\n \n extern unsigned int foo (int*) __attribute__((pure));\n \n@@ -17,5 +17,6 @@ tr2 (int array[], int n)\n /* { dg-final { scan-tree-dump-times \"PHI <ivtmp\" 1 \"ivopts\"} } */\n /* { dg-final { scan-tree-dump-times \"PHI <x\" 0 \"ivopts\"} } */\n /* { dg-final { scan-tree-dump-times \", x\" 0 \"ivopts\"} } */\n-/* { dg-final { object-size text <= 36 { target arm_thumb2_ok } } } */\n+/* { dg-final { object-size text <= 36 { target arm_thumb2 } } } */\n /* { dg-final { cleanup-tree-dump \"ivopts\" } } */\n+/* { dg-final { cleanup-saved-temps \"ivopts\" } } */"}, {"sha": "0f9023808e6b88895dfed4f8177d8c5f60ed4392", "filename": "gcc/testsuite/gcc.target/arm/ivopts-5.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3b99e6352247d8a0cb6760a2197a687947de6ad0/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fivopts-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3b99e6352247d8a0cb6760a2197a687947de6ad0/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fivopts-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fivopts-5.c?ref=3b99e6352247d8a0cb6760a2197a687947de6ad0", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do assemble } */\n-/* { dg-options \"-Os -mthumb -fdump-tree-ivopts -save-temps\" } */\n+/* { dg-options \"-Os -fdump-tree-ivopts -save-temps\" } */\n \n extern unsigned int foo (int*) __attribute__((pure));\n \n@@ -16,5 +16,6 @@ tr1 (int array[], unsigned int n)\n /* { dg-final { scan-tree-dump-times \"PHI <ivtmp\" 1 \"ivopts\"} } */\n /* { dg-final { scan-tree-dump-times \"PHI <x\" 0 \"ivopts\"} } */\n /* { dg-final { scan-tree-dump-times \", x\" 0 \"ivopts\"} } */\n-/* { dg-final { object-size text <= 30 { target arm_thumb2_ok } } } */\n+/* { dg-final { object-size text <= 30 { target arm_thumb2 } } } */\n /* { dg-final { cleanup-tree-dump \"ivopts\" } } */\n+/* { dg-final { cleanup-saved-temps \"ivopts\" } } */"}, {"sha": "8183d1d5f78a21ab3ec3c64b1fddfd94887c12a2", "filename": "gcc/testsuite/gcc.target/arm/ivopts.c", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3b99e6352247d8a0cb6760a2197a687947de6ad0/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fivopts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3b99e6352247d8a0cb6760a2197a687947de6ad0/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fivopts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fivopts.c?ref=3b99e6352247d8a0cb6760a2197a687947de6ad0", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do assemble } */\n-/* { dg-options \"-Os -mthumb -fdump-tree-ivopts -save-temps\" } */\n+/* { dg-options \"-Os -fdump-tree-ivopts -save-temps\" } */\n \n void\n tr5 (short array[], int n)\n@@ -11,5 +11,8 @@ tr5 (short array[], int n)\n }\n \n /* { dg-final { scan-tree-dump-times \"PHI <\" 1 \"ivopts\"} } */\n-/* { dg-final { object-size text <= 20 { target arm_thumb2_ok } } } */\n+/* { dg-final { object-size text <= 20 { target arm_thumb2 } } } */\n+/* { dg-final { object-size text <= 32 { target { arm_nothumb && { ! arm_iwmmxt_ok } } } } } */\n+/* { dg-final { object-size text <= 36 { target { arm_nothumb && arm_iwmmxt_ok }  } } } */\n /* { dg-final { cleanup-tree-dump \"ivopts\" } } */\n+/* { dg-final { cleanup-saved-temps \"ivopts\" } } */"}, {"sha": "393c3ade82e7e809d0327b6f0993e4a68ff4d5cc", "filename": "gcc/testsuite/lib/target-supports.exp", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3b99e6352247d8a0cb6760a2197a687947de6ad0/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3b99e6352247d8a0cb6760a2197a687947de6ad0/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp?ref=3b99e6352247d8a0cb6760a2197a687947de6ad0", "patch": "@@ -1862,6 +1862,15 @@ proc check_effective_target_arm32 { } {\n     }]\n }\n \n+# Return 1 is this is an arm target not using Thumb\n+proc check_effective_target_arm_nothumb { } {\n+    return [check_no_compiler_messages arm_nothumb assembly {\n+\t#if (defined(__thumb__) || defined(__thumb2__))\n+\t#error FOO\n+\t#endif\n+    }]\n+}\n+\n # Return 1 if this is an ARM target that only supports aligned vector accesses\n proc check_effective_target_arm_vect_no_misalign { } {\n     return [check_no_compiler_messages arm_vect_no_misalign assembly {\n@@ -2018,6 +2027,16 @@ proc check_effective_target_arm_thumb2_ok { } {\n     } \"-mthumb\"]\n }\n \n+# Return 1 is this is an ARM target where is Thumb-2 used.\n+\n+proc check_effective_target_arm_thumb2 { } {\n+    return [check_no_compiler_messages arm_thumb2 assembly {\n+\t#if !defined(__thumb2__)\n+\t#error FOO\n+\t#endif\n+    } \"\"]\n+}\n+\n # Return 1 if the target supports executing NEON instructions, 0\n # otherwise.  Cache the result.\n "}]}