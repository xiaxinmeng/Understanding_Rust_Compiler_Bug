{"sha": "a24b2720de5d888a936c350378ae864b81f1a022", "node_id": "C_kwDOANBUbNoAKGEyNGIyNzIwZGU1ZDg4OGE5MzZjMzUwMzc4YWU4NjRiODFmMWEwMjI", "commit": {"author": {"name": "Hans-Peter Nilsson", "email": "hp@axis.com", "date": "2023-02-24T17:41:13Z"}, "committer": {"name": "Hans-Peter Nilsson", "email": "hp@bitrange.com", "date": "2023-02-25T19:42:58Z"}, "message": "testsuite: Don't include multiline patterns in the the pass/fail log\n\nI see overlong lines in the output when a test fails, for\nexample for a bug exposed for cris-elf and pru-elf in\ngcc.dg/analyzer/allocation-size-multiline-3.c:\n\nRunning /x/gcc/testsuite/gcc.dg/analyzer/analyzer.exp ...\nFAIL: gcc.dg/analyzer/allocation-size-multiline-3.c expected multiline pattern lines 16-25 not found: \"\\s*int32_t \\*ptr = alloca \\(99\\);[^\\n\\r]*\\n                  \\^~~~~~\\n  'test_constant_99': events 1-2[^\\n\\r]*\\n    \\|[^\\n\\r]*\\n    \\|   int32_t \\*ptr = alloca \\(99\\);[^\\n\\r]*\\n    \\|                  \\^~~~~~\\n    \\|                  \\|[^\\n\\r]*\\n    \\|                  \\(1\\) allocated 99 bytes here[^\\n\\r]*\\n    \\|                  \\(2\\) assigned to 'int32_t \\*' \\{aka 'int \\*'\\} here; 'sizeof \\(int32_t \\{aka int\\}\\)' is '4'[^\\n\\r]*\\n    \\|[^\\n\\r]*\\n\"\nFAIL: gcc.dg/analyzer/allocation-size-multiline-3.c expected multiline pattern lines 34-43 not found: \"   int32_t \\*ptr = alloca \\(n \\* 2\\);[^\\n\\r]*\\n                  \\^~~~~~\\n  'test_symbolic': events 1-2[^\\n\\r]*\\n    \\|[^\\n\\r]*\\n    \\|   int32_t \\*ptr = alloca \\(n \\* 2\\);[^\\n\\r]*\\n    \\|                  \\^~~~~~\\n    \\|                  \\|[^\\n\\r]*\\n    \\|                  \\(1\\) allocated 'n \\* 2' bytes here[^\\n\\r]*\\n    \\|                  \\(2\\) assigned to 'int32_t \\*' \\{aka 'int \\*'\\} here; 'sizeof \\(int32_t \\{aka int\\}\\)' is '4'[^\\n\\r]*\\n    \\|[^\\n\\r]*\\n\"\nFAIL: gcc.dg/analyzer/allocation-size-multiline-3.c (test for excess errors)\n\nThat multiline-pattern-quoted-on-a-single-line is redundant\nwhen also outputting \"lines 16-25\" and \"lines 34-43\".  It's\nalso so noisy that it can be mistaken for a testsuite error.\nIf there's a need to inspect it, it can be seen at\nverbose-level 4, i.e. persons interested in seeing it\nwithout editing sources can just add \"-v -v -v -v\".\n\nLet's \"prune\" the pattern from regular output, instead producing:\nRunning /x/gcc/testsuite/gcc.dg/analyzer/analyzer.exp ...\nFAIL: gcc.dg/analyzer/allocation-size-multiline-3.c expected multiline pattern lines 16-25 not found\nFAIL: gcc.dg/analyzer/allocation-size-multiline-3.c expected multiline pattern lines 34-43 not found\nFAIL: gcc.dg/analyzer/allocation-size-multiline-3.c (test for excess errors)\n\n\t* lib/multiline.exp (handle-multiline-outputs): Don't include the\n\tquoted multiline pattern in the pass/fail output.", "tree": {"sha": "276c1205e0a12d462a9ce2ddfa7c86c90d5c7d5e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/276c1205e0a12d462a9ce2ddfa7c86c90d5c7d5e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a24b2720de5d888a936c350378ae864b81f1a022", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a24b2720de5d888a936c350378ae864b81f1a022", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a24b2720de5d888a936c350378ae864b81f1a022", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a24b2720de5d888a936c350378ae864b81f1a022/comments", "author": {"login": "hpataxisdotcom", "id": 80339731, "node_id": "MDQ6VXNlcjgwMzM5NzMx", "avatar_url": "https://avatars.githubusercontent.com/u/80339731?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hpataxisdotcom", "html_url": "https://github.com/hpataxisdotcom", "followers_url": "https://api.github.com/users/hpataxisdotcom/followers", "following_url": "https://api.github.com/users/hpataxisdotcom/following{/other_user}", "gists_url": "https://api.github.com/users/hpataxisdotcom/gists{/gist_id}", "starred_url": "https://api.github.com/users/hpataxisdotcom/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hpataxisdotcom/subscriptions", "organizations_url": "https://api.github.com/users/hpataxisdotcom/orgs", "repos_url": "https://api.github.com/users/hpataxisdotcom/repos", "events_url": "https://api.github.com/users/hpataxisdotcom/events{/privacy}", "received_events_url": "https://api.github.com/users/hpataxisdotcom/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "03c60e525bea13c15edd2f64cd582f168fe80bfb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/03c60e525bea13c15edd2f64cd582f168fe80bfb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/03c60e525bea13c15edd2f64cd582f168fe80bfb"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "5eccf2bbebc19737a089586104d80be879d35af2", "filename": "gcc/testsuite/lib/multiline.exp", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a24b2720de5d888a936c350378ae864b81f1a022/gcc%2Ftestsuite%2Flib%2Fmultiline.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a24b2720de5d888a936c350378ae864b81f1a022/gcc%2Ftestsuite%2Flib%2Fmultiline.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Fmultiline.exp?ref=a24b2720de5d888a936c350378ae864b81f1a022", "patch": "@@ -169,9 +169,9 @@ proc handle-multiline-outputs { text } {\n \t# Use \"regsub\" to attempt to prune the pattern from $text\n \tif {[regsub -line $rexp $text \"\" text]} {\n \t    # The multiline pattern was pruned.\n-\t    ${maybe_x}pass \"$title was found: \\\"$escaped_regex\\\"\"\n+\t    ${maybe_x}pass \"$title was found\"\n \t} else {\n-\t    ${maybe_x}fail \"$title not found: \\\"$escaped_regex\\\"\"\n+\t    ${maybe_x}fail \"$title not found\"\n \t}\n \n \tset index [expr $index + 1]"}]}