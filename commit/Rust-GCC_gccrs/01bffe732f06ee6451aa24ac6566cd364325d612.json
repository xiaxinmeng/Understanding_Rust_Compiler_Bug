{"sha": "01bffe732f06ee6451aa24ac6566cd364325d612", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDFiZmZlNzMyZjA2ZWU2NDUxYWEyNGFjNjU2NmNkMzY0MzI1ZDYxMg==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-09-10T01:48:32Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-09-10T01:48:32Z"}, "message": "(rescan, handle_directive): Backslash no longer suppresses the specialness of the following char unless -traditional.\n\n(rescan, handle_directive): Backslash no longer suppresses the specialness of\nthe following char unless -traditional.\n(rescan): Remove backslash-newline only if at top level, since\nbackslash-newline-space can be encountered during macro processing.\n(collect_expansion): Remove special hack for \\# inside a #define; it's not\ncompatible with the C Standard.\n\nFrom-SVN: r8069", "tree": {"sha": "5ed0d27fa6a3c3cf3a9a9b3062aefe22e88ae331", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5ed0d27fa6a3c3cf3a9a9b3062aefe22e88ae331"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/01bffe732f06ee6451aa24ac6566cd364325d612", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/01bffe732f06ee6451aa24ac6566cd364325d612", "html_url": "https://github.com/Rust-GCC/gccrs/commit/01bffe732f06ee6451aa24ac6566cd364325d612", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/01bffe732f06ee6451aa24ac6566cd364325d612/comments", "author": null, "committer": null, "parents": [{"sha": "4de57b3baa71a87fdaf4a3de8f5a69bd69da8f9c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4de57b3baa71a87fdaf4a3de8f5a69bd69da8f9c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4de57b3baa71a87fdaf4a3de8f5a69bd69da8f9c"}], "stats": {"total": 30, "additions": 13, "deletions": 17}, "files": [{"sha": "2903562b8ac53ca5ea2a4dea481e9a6e832d0c5d", "filename": "gcc/cccp.c", "status": "modified", "additions": 13, "deletions": 17, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/01bffe732f06ee6451aa24ac6566cd364325d612/gcc%2Fcccp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/01bffe732f06ee6451aa24ac6566cd364325d612/gcc%2Fcccp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcccp.c?ref=01bffe732f06ee6451aa24ac6566cd364325d612", "patch": "@@ -2561,22 +2561,25 @@ do { ip = &instack[indepth];\t\t\\\n \n     switch (c) {\n     case '\\\\':\n-      if (ibp >= limit)\n-\tbreak;\n-      if (*ibp == '\\n') {\n-\t/* Always merge lines ending with backslash-newline,\n-\t   even in middle of identifier.  */\n+      if (*ibp == '\\n' && !ip->macro) {\n+\t/* At the top level, always merge lines ending with backslash-newline,\n+\t   even in middle of identifier.  But do not merge lines in a macro,\n+\t   since backslash might be followed by a newline-space marker.  */\n \t++ibp;\n \t++ip->lineno;\n \t--obp;\t\t/* remove backslash from obuf */\n \tbreak;\n       }\n+      /* If ANSI, backslash is just another character outside a string.  */\n+      if (!traditional)\n+\tgoto randomchar;\n       /* Otherwise, backslash suppresses specialness of following char,\n \t so copy it here to prevent the switch from seeing it.\n \t But first get any pending identifier processed.  */\n       if (ident_length > 0)\n \tgoto specialchar;\n-      *obp++ = *ibp++;\n+      if (ibp < limit)\n+\t*obp++ = *ibp++;\n       break;\n \n     case '#':\n@@ -3582,8 +3585,9 @@ handle_directive (ip, op)\n \t    if (*bp == '\\n') {\n \t      ip->lineno++;\n \t      copy_command = 1;\n-\t    }\n-\t    bp++;\n+\t      bp++;\n+\t    } else if (traditional)\n+\t      bp++;\n \t  }\n \t  break;\n \n@@ -5742,16 +5746,8 @@ collect_expansion (buf, end, nargs, arglist)\n           expected_delimiter = c;\n \tbreak;\n \n-\t/* Special hack: if a \\# is written in the #define\n-\t   include a # in the definition.  This is useless for C code\n-\t   but useful for preprocessing other things.  */\n-\n       case '\\\\':\n-\t/* \\# quotes a # even outside of strings.  */\n-\tif (p < limit && *p == '#' && !expected_delimiter) {\n-\t  exp_p--;\n-\t  *exp_p++ = *p++;\n-\t} else if (p < limit && expected_delimiter) {\n+\tif (p < limit && expected_delimiter) {\n \t  /* In a string, backslash goes through\n \t     and makes next char ordinary.  */\n \t  *exp_p++ = *p++;"}]}