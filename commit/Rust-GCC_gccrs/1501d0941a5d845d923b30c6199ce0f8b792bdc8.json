{"sha": "1501d0941a5d845d923b30c6199ce0f8b792bdc8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTUwMWQwOTQxYTVkODQ1ZDkyM2IzMGM2MTk5Y2UwZjhiNzkyYmRjOA==", "commit": {"author": {"name": "Nicola Pero", "email": "nicola.pero@meta-innovation.com", "date": "2010-10-17T11:01:31Z"}, "committer": {"name": "Nicola Pero", "email": "nicola@gcc.gnu.org", "date": "2010-10-17T11:01:31Z"}, "message": "In libobjc/: 2010-10-17 Nicola Pero <nicola.pero@meta-innovation.com>\n\nIn libobjc/:\n2010-10-17  Nicola Pero  <nicola.pero@meta-innovation.com>\n\n        * init.c (objc_send_load): Do not wait for NXConstantString to be\n        registered before executing +load.  There is no point if\n        -fconstant-string-class=xxx is used when compiling all modules,\n        as is the case for almost all users.\n        * linking.m (__objc_linking): Do not try to forcefully link in\n        NXConstantString.\n\nIn gcc/:\n2010-10-17  Nicola Pero  <nicola.pero@meta-innovation.com>\n\n        * doc/objc.texi (What you can and what you cannot do in +load):\n        Document that sending messages to constant string objects in +load\n        is not guaranteed to work.\n\nFrom-SVN: r165583", "tree": {"sha": "013659d5354d68e2fe8c2c1e6e3d02449f4adf4b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/013659d5354d68e2fe8c2c1e6e3d02449f4adf4b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1501d0941a5d845d923b30c6199ce0f8b792bdc8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1501d0941a5d845d923b30c6199ce0f8b792bdc8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1501d0941a5d845d923b30c6199ce0f8b792bdc8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1501d0941a5d845d923b30c6199ce0f8b792bdc8/comments", "author": {"login": "Nico-31415", "id": 94470564, "node_id": "U_kgDOBaGBpA", "avatar_url": "https://avatars.githubusercontent.com/u/94470564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nico-31415", "html_url": "https://github.com/Nico-31415", "followers_url": "https://api.github.com/users/Nico-31415/followers", "following_url": "https://api.github.com/users/Nico-31415/following{/other_user}", "gists_url": "https://api.github.com/users/Nico-31415/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nico-31415/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nico-31415/subscriptions", "organizations_url": "https://api.github.com/users/Nico-31415/orgs", "repos_url": "https://api.github.com/users/Nico-31415/repos", "events_url": "https://api.github.com/users/Nico-31415/events{/privacy}", "received_events_url": "https://api.github.com/users/Nico-31415/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "368be4c7351ae32340d6ef1fbf330467792c1432", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/368be4c7351ae32340d6ef1fbf330467792c1432", "html_url": "https://github.com/Rust-GCC/gccrs/commit/368be4c7351ae32340d6ef1fbf330467792c1432"}], "stats": {"total": 52, "additions": 35, "deletions": 17}, "files": [{"sha": "47254d31f12f436a69acd15fc6951b19da26465e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1501d0941a5d845d923b30c6199ce0f8b792bdc8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1501d0941a5d845d923b30c6199ce0f8b792bdc8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1501d0941a5d845d923b30c6199ce0f8b792bdc8", "patch": "@@ -1,3 +1,9 @@\n+2010-10-17  Nicola Pero  <nicola.pero@meta-innovation.com>\n+\n+\t* doc/objc.texi (What you can and what you cannot do in +load):\n+\tDocument that sending messages to constant string objects in +load\n+\tis not guaranteed to work.\n+\n 2010-10-16  Jan Hubicka  <jh@suse.cz>\n \n \tPR middle-end/44206"}, {"sha": "f0fab6be827ade4ce00328ca1898f89454a8da2a", "filename": "gcc/doc/objc.texi", "status": "modified", "additions": 14, "deletions": 7, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1501d0941a5d845d923b30c6199ce0f8b792bdc8/gcc%2Fdoc%2Fobjc.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1501d0941a5d845d923b30c6199ce0f8b792bdc8/gcc%2Fdoc%2Fobjc.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fobjc.texi?ref=1501d0941a5d845d923b30c6199ce0f8b792bdc8", "patch": "@@ -107,24 +107,27 @@ instead of @code{+initialize}.\n @node What you can and what you cannot do in +load\n @subsection What you can and what you cannot do in @code{+load}\n \n-The @code{+load} implementation in the GNU runtime guarantees you the following\n-things:\n+@code{+load} is to be used only as a last resort.  Because it is\n+executed very early, most of the Objective-C runtime machinery will\n+not be ready when @code{+load} is executed; hence @code{+load} works\n+best for executing C code that is independent on the Objective-C\n+runtime.\n+\n+The @code{+load} implementation in the GNU runtime guarantees you the\n+following things:\n \n @itemize @bullet\n \n @item\n you can write whatever C code you like;\n \n-@item\n-you can send messages to Objective-C constant strings (@code{@@\"this is a\n-constant string\"});\n-\n @item\n you can allocate and send messages to objects whose class is implemented\n in the same file;\n \n @item\n-the @code{+load} implementation of all super classes of a class are executed before the @code{+load} of that class is executed;\n+the @code{+load} implementation of all super classes of a class are\n+executed before the @code{+load} of that class is executed;\n \n @item\n the @code{+load} implementation of a class is executed before the\n@@ -144,6 +147,10 @@ allocation of or sending messages to arbitrary objects;\n allocation of or sending messages to objects whose classes have a\n category implemented in the same file;\n \n+@item\n+sending messages to Objective-C constant strings (@code{@@\"this is a\n+constant string\"});\n+\n @end itemize\n \n You should make no assumptions about receiving @code{+load} in sibling"}, {"sha": "6e70ac762eaf0789cada9b336476382b5fd67a15", "filename": "libobjc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1501d0941a5d845d923b30c6199ce0f8b792bdc8/libobjc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1501d0941a5d845d923b30c6199ce0f8b792bdc8/libobjc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libobjc%2FChangeLog?ref=1501d0941a5d845d923b30c6199ce0f8b792bdc8", "patch": "@@ -1,3 +1,12 @@\n+2010-10-17  Nicola Pero  <nicola.pero@meta-innovation.com>\n+\n+\t* init.c (objc_send_load): Do not wait for NXConstantString to be\n+\tregistered before executing +load.  There is no point if\n+\t-fconstant-string-class=xxx is used when compiling all modules,\n+\tas is the case for almost all users.\n+\t* linking.m (__objc_linking): Do not try to forcefully link in\n+\tNXConstantString.\n+\t\n 2010-10-16  Nicola Pero  <nicola.pero@meta-innovation.com>\n \n \t* objc/runtime.h: Updated comments."}, {"sha": "d87a587a8affbaa5f61ded088fc2c088e754f7d2", "filename": "libobjc/init.c", "status": "modified", "additions": 4, "deletions": 7, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1501d0941a5d845d923b30c6199ce0f8b792bdc8/libobjc%2Finit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1501d0941a5d845d923b30c6199ce0f8b792bdc8/libobjc%2Finit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libobjc%2Finit.c?ref=1501d0941a5d845d923b30c6199ce0f8b792bdc8", "patch": "@@ -444,8 +444,7 @@ class_is_subclass_of_class (Class class, Class superclass)\n    their superclasses are not yet known to the runtime.  */\n static struct objc_list *unresolved_classes = 0;\n \n-/* Extern function used to reference the Object and NXConstantString\n-   classes.  */\n+/* Extern function used to reference the Object class.  */\n \n extern void __objc_force_linking (void);\n \n@@ -755,11 +754,9 @@ objc_send_load (void)\n \treturn;\n     }\n \n-  /* Special check to allow creating and sending messages to constant\n-     strings in +load methods. If these classes are not yet known,\n-     even if all the other classes are known, delay sending of +load.  */\n-  if (! objc_lookup_class (\"NXConstantString\") ||\n-      ! objc_lookup_class (\"Object\"))\n+  /* Special check.  If 'Object', which is used by meta-classes, has\n+     not been loaded yet, delay sending of +load.  */\n+  if (! objc_lookup_class (\"Object\"))\n     return;\n \n   /* Iterate over all modules in the __objc_module_list and call on"}, {"sha": "4438a668ce49cda7162d8ecee8e489e5cdaecd7e", "filename": "libobjc/linking.m", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1501d0941a5d845d923b30c6199ce0f8b792bdc8/libobjc%2Flinking.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1501d0941a5d845d923b30c6199ce0f8b792bdc8/libobjc%2Flinking.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libobjc%2Flinking.m?ref=1501d0941a5d845d923b30c6199ce0f8b792bdc8", "patch": "@@ -27,12 +27,11 @@ Contributed by Ovidiu Predescu (ovidiu@net-community.com).\n #include <objc/Object.h>\n #include <objc/NXConstStr.h>\n \n-/* Generate references to Object and NXConstanstString classes since they are\n-   needed by the runtime system to run correctly.  */\n+/* Generate references to Object class since it is needed by the\n+   runtime system to run correctly.  */\n \n void __objc_linking (void)\n {\n   [Object name];\n-  [NXConstantString name];\n }\n "}]}