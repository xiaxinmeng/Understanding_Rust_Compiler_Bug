{"sha": "16b8ba101f770503f363c095d7be5c055705b84b", "node_id": "C_kwDOANBUbNoAKDE2YjhiYTEwMWY3NzA1MDNmMzYzYzA5NWQ3YmU1YzA1NTcwNWI4NGI", "commit": {"author": {"name": "Piotr Trojanek", "email": "trojanek@adacore.com", "date": "2022-03-31T18:56:58Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2022-05-18T08:41:01Z"}, "message": "[Ada] Prevent overflow in computation of aggregate size\n\nWhen computing size of a static aggregate to decide if it should be\ntransformed into assignments and loops we could have an overflow check.\nThis is mostly harmless, because colossal aggregates will likely crash\nthe application anyway, no matter how we transform them.\n\nThis was not detected because compiler was built with -gnatg switch that\nsuppresses overflow checks (they are only enabled by an explicit -gnato\nswitch).\n\ngcc/ada/\n\n\t* exp_aggr.adb (Component_Count): Calculate size as an Uint and\n\tonly then check if it is in the range of Int, as otherwise the\n\tmultiplication of Int values can overflow.", "tree": {"sha": "95075cab4bf70f4cef9e7f06883460d63134bcc3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/95075cab4bf70f4cef9e7f06883460d63134bcc3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/16b8ba101f770503f363c095d7be5c055705b84b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/16b8ba101f770503f363c095d7be5c055705b84b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/16b8ba101f770503f363c095d7be5c055705b84b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/16b8ba101f770503f363c095d7be5c055705b84b/comments", "author": {"login": "ptroja", "id": 161602, "node_id": "MDQ6VXNlcjE2MTYwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/161602?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ptroja", "html_url": "https://github.com/ptroja", "followers_url": "https://api.github.com/users/ptroja/followers", "following_url": "https://api.github.com/users/ptroja/following{/other_user}", "gists_url": "https://api.github.com/users/ptroja/gists{/gist_id}", "starred_url": "https://api.github.com/users/ptroja/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ptroja/subscriptions", "organizations_url": "https://api.github.com/users/ptroja/orgs", "repos_url": "https://api.github.com/users/ptroja/repos", "events_url": "https://api.github.com/users/ptroja/events{/privacy}", "received_events_url": "https://api.github.com/users/ptroja/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8b49556e4ee617e0920a9335685c7961971c3d0a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8b49556e4ee617e0920a9335685c7961971c3d0a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8b49556e4ee617e0920a9335685c7961971c3d0a"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "4714cab8bfae1c4cad3f353f95ae09243c0a0c65", "filename": "gcc/ada/exp_aggr.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16b8ba101f770503f363c095d7be5c055705b84b/gcc%2Fada%2Fexp_aggr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16b8ba101f770503f363c095d7be5c055705b84b/gcc%2Fada%2Fexp_aggr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_aggr.adb?ref=16b8ba101f770503f363c095d7be5c055705b84b", "patch": "@@ -661,10 +661,10 @@ package body Exp_Aggr is\n \n                   declare\n                      UI : constant Uint :=\n-                            Expr_Value (Hi) - Expr_Value (Lo) + 1;\n+                            (Expr_Value (Hi) - Expr_Value (Lo) + 1) * Siz;\n                   begin\n                      if UI_Is_In_Int_Range (UI) then\n-                        return Siz * UI_To_Int (UI);\n+                        return UI_To_Int (UI);\n                      else\n                         return Int'Last;\n                      end if;"}]}