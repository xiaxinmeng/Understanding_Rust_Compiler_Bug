{"sha": "e379beb56f0b1e597c8aeb10c84813c8326197a9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTM3OWJlYjU2ZjBiMWU1OTdjOGFlYjEwYzg0ODEzYzgzMjYxOTdhOQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2016-04-21T08:11:46Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2016-04-21T08:11:46Z"}, "message": "[multiple changes]\n\n2016-04-21  Javier Miranda  <miranda@adacore.com>\n\n\t* frontend.adb: Remove call to initialize Exp_Ch6.\n\t* exp_ch6.ads, exp_ch6.adb (Initialize): removed.\n\t(Unest_Entry/Unest_Bodies): Removed.\n\t(Unnest_Subprograms): Code cleanup.\n\n2016-04-21  Arnaud Charlet  <charlet@adacore.com>\n\n\t* set_targ.adb (Read_Target_Dependent_Values):\n\tclose target description file once its contents is read.\n\t* s-os_lib.adb (Non_Blocking_Spawn, version with Stdout_File\n\tand Stderr_File): Close local file descriptors before spawning\n\tchild process.\n\t* exp_util.adb (Containing_Package_With_Ext_Axioms): Limit scope of\n\tlocal variables to make the code easier to understand and avoid\n\tduplicated calls to Parent and Generic_Parent.\n\nFrom-SVN: r235302", "tree": {"sha": "77069e14da8101e236a0d36df0e0df7b12541845", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/77069e14da8101e236a0d36df0e0df7b12541845"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e379beb56f0b1e597c8aeb10c84813c8326197a9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e379beb56f0b1e597c8aeb10c84813c8326197a9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e379beb56f0b1e597c8aeb10c84813c8326197a9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e379beb56f0b1e597c8aeb10c84813c8326197a9/comments", "author": null, "committer": null, "parents": [{"sha": "2e9bd657376090f50987b295735be1acaeac6308", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2e9bd657376090f50987b295735be1acaeac6308", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2e9bd657376090f50987b295735be1acaeac6308"}], "stats": {"total": 212, "additions": 86, "deletions": 126}, "files": [{"sha": "6c2a5c969a9d0dda63e7c74836269a1c54f9bd6e", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e379beb56f0b1e597c8aeb10c84813c8326197a9/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e379beb56f0b1e597c8aeb10c84813c8326197a9/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=e379beb56f0b1e597c8aeb10c84813c8326197a9", "patch": "@@ -1,3 +1,21 @@\n+2016-04-21  Javier Miranda  <miranda@adacore.com>\n+\n+\t* frontend.adb: Remove call to initialize Exp_Ch6.\n+\t* exp_ch6.ads, exp_ch6.adb (Initialize): removed.\n+\t(Unest_Entry/Unest_Bodies): Removed.\n+\t(Unnest_Subprograms): Code cleanup.\n+\n+2016-04-21  Arnaud Charlet  <charlet@adacore.com>\n+\n+\t* set_targ.adb (Read_Target_Dependent_Values):\n+\tclose target description file once its contents is read.\n+\t* s-os_lib.adb (Non_Blocking_Spawn, version with Stdout_File\n+\tand Stderr_File): Close local file descriptors before spawning\n+\tchild process.\n+\t* exp_util.adb (Containing_Package_With_Ext_Axioms): Limit scope of\n+\tlocal variables to make the code easier to understand and avoid\n+\tduplicated calls to Parent and Generic_Parent.\n+\n 2016-04-20  Bob Duff  <duff@adacore.com>\n \n \t* s-os_lib.ads: Minor comment fix."}, {"sha": "7a3a22f84e0c4285153df4a473656c8c44bfa9d1", "filename": "gcc/ada/exp_ch6.adb", "status": "modified", "additions": 32, "deletions": 95, "changes": 127, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e379beb56f0b1e597c8aeb10c84813c8326197a9/gcc%2Fada%2Fexp_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e379beb56f0b1e597c8aeb10c84813c8326197a9/gcc%2Fada%2Fexp_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch6.adb?ref=e379beb56f0b1e597c8aeb10c84813c8326197a9", "patch": "@@ -72,41 +72,13 @@ with Sem_Util;  use Sem_Util;\n with Sinfo;     use Sinfo;\n with Snames;    use Snames;\n with Stand;     use Stand;\n-with Table;\n with Targparm;  use Targparm;\n with Tbuild;    use Tbuild;\n with Uintp;     use Uintp;\n with Validsw;   use Validsw;\n \n package body Exp_Ch6 is\n \n-   -------------------------------------\n-   -- Table for Unnesting Subprograms --\n-   -------------------------------------\n-\n-   --  When we expand a subprogram body, if it has nested subprograms and if\n-   --  we are in Unnest_Subprogram_Mode, then we record the subprogram entity\n-   --  and the body in this table, to later be passed to Unnest_Subprogram.\n-\n-   --  We need this delaying mechanism, because we have to wait until all\n-   --  instantiated bodies have been inserted before doing the unnesting.\n-\n-   type Unest_Entry is record\n-      Ent : Entity_Id;\n-      --  Entity for subprogram to be unnested\n-\n-      Bod : Node_Id;\n-      --  Subprogram body to be unnested\n-   end record;\n-\n-   package Unest_Bodies is new Table.Table (\n-     Table_Component_Type => Unest_Entry,\n-     Table_Index_Type     => Nat,\n-     Table_Low_Bound      => 1,\n-     Table_Initial        => 100,\n-     Table_Increment      => 200,\n-     Table_Name           => \"Unest_Bodies\");\n-\n    -----------------------\n    -- Local Subprograms --\n    -----------------------\n@@ -6803,15 +6775,6 @@ package body Exp_Ch6 is\n       return False;\n    end Has_Unconstrained_Access_Discriminants;\n \n-   ----------------\n-   -- Initialize --\n-   ----------------\n-\n-   procedure Initialize is\n-   begin\n-      Unest_Bodies.Init;\n-   end Initialize;\n-\n    --------------------------------\n    -- Is_Build_In_Place_Function --\n    --------------------------------\n@@ -8477,62 +8440,44 @@ package body Exp_Ch6 is\n \n    procedure Unnest_Subprograms (N : Node_Id) is\n \n-      procedure Search_Unnesting_Subprograms (N : Node_Id);\n-      --  Search for outer level procedures with nested subprograms and append\n-      --  them to the Unnest table.\n+      function Search_Subprograms (N : Node_Id) return Traverse_Result;\n+      --  Tree visitor that search for outer level procedures with nested\n+      --  subprograms and invokes Unnest_Subprogram()\n \n-      ----------------------------------\n-      -- Search_Unnesting_Subprograms --\n-      ----------------------------------\n-\n-      procedure Search_Unnesting_Subprograms (N : Node_Id) is\n-\n-         function Search_Subprograms (N : Node_Id) return Traverse_Result;\n-         --  Tree visitor that search for outer level procedures with nested\n-         --  subprograms and adds them to the Unnest table.\n-\n-         ------------------------\n-         -- Search_Subprograms --\n-         ------------------------\n-\n-         function Search_Subprograms (N : Node_Id) return Traverse_Result is\n-         begin\n-            if Nkind_In (N, N_Subprogram_Body,\n-                            N_Subprogram_Body_Stub)\n-            then\n-               declare\n-                  Spec_Id : constant Entity_Id := Unique_Defining_Entity (N);\n-\n-               begin\n-                  --  We are only interested in subprograms (not generic\n-                  --  subprograms), that have nested subprograms.\n+      ------------------------\n+      -- Search_Subprograms --\n+      ------------------------\n \n-                  if Is_Subprogram (Spec_Id)\n-                    and then Has_Nested_Subprogram (Spec_Id)\n-                    and then Is_Library_Level_Entity (Spec_Id)\n-                  then\n-                     Unest_Bodies.Append ((Spec_Id, N));\n-                  end if;\n-               end;\n-            end if;\n+      function Search_Subprograms (N : Node_Id) return Traverse_Result is\n+      begin\n+         if Nkind_In (N, N_Subprogram_Body,\n+                         N_Subprogram_Body_Stub)\n+         then\n+            declare\n+               Spec_Id : constant Entity_Id := Unique_Defining_Entity (N);\n \n-            return OK;\n-         end Search_Subprograms;\n+            begin\n+               --  We are only interested in subprograms (not generic\n+               --  subprograms), that have nested subprograms.\n \n-         ---------------\n-         -- Do_Search --\n-         ---------------\n+               if Is_Subprogram (Spec_Id)\n+                 and then Has_Nested_Subprogram (Spec_Id)\n+                 and then Is_Library_Level_Entity (Spec_Id)\n+               then\n+                  Unnest_Subprogram (Spec_Id, N);\n+               end if;\n+            end;\n+         end if;\n \n-         procedure Do_Search is new Traverse_Proc (Search_Subprograms);\n-         --  Subtree visitor instantiation\n+         return OK;\n+      end Search_Subprograms;\n \n-      --  Start of processing for Search_Unnesting_Subprograms\n+      ---------------\n+      -- Do_Search --\n+      ---------------\n \n-      begin\n-         if Opt.Unnest_Subprogram_Mode then\n-            Do_Search (N);\n-         end if;\n-      end Search_Unnesting_Subprograms;\n+      procedure Do_Search is new Traverse_Proc (Search_Subprograms);\n+      --  Subtree visitor instantiation\n \n    --  Start of processing for Unnest_Subprograms\n \n@@ -8541,15 +8486,7 @@ package body Exp_Ch6 is\n          return;\n       end if;\n \n-      Search_Unnesting_Subprograms (N);\n-\n-      for J in Unest_Bodies.First .. Unest_Bodies.Last loop\n-         declare\n-            UBJ : Unest_Entry renames Unest_Bodies.Table (J);\n-         begin\n-            Unnest_Subprogram (UBJ.Ent, UBJ.Bod);\n-         end;\n-      end loop;\n+      Do_Search (N);\n    end Unnest_Subprograms;\n \n end Exp_Ch6;"}, {"sha": "ec85973843166cb6c37bc460c39909d88000830c", "filename": "gcc/ada/exp_ch6.ads", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e379beb56f0b1e597c8aeb10c84813c8326197a9/gcc%2Fada%2Fexp_ch6.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e379beb56f0b1e597c8aeb10c84813c8326197a9/gcc%2Fada%2Fexp_ch6.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch6.ads?ref=e379beb56f0b1e597c8aeb10c84813c8326197a9", "patch": "@@ -117,9 +117,6 @@ package Exp_Ch6 is\n    --  The returned node is the root of the procedure body which will replace\n    --  the original function body, which is not needed for the C program.\n \n-   procedure Initialize;\n-   --  Initialize internal tables\n-\n    function Is_Build_In_Place_Function (E : Entity_Id) return Boolean;\n    --  Ada 2005 (AI-318-02): Returns True if E denotes a function, generic\n    --  function, or access-to-function type whose result must be built in"}, {"sha": "b78907632243a8de3cf6dee4503317884cd09dde", "filename": "gcc/ada/exp_util.adb", "status": "modified", "additions": 24, "deletions": 22, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e379beb56f0b1e597c8aeb10c84813c8326197a9/gcc%2Fada%2Fexp_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e379beb56f0b1e597c8aeb10c84813c8326197a9/gcc%2Fada%2Fexp_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_util.adb?ref=e379beb56f0b1e597c8aeb10c84813c8326197a9", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2015, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2016, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -1728,11 +1728,7 @@ package body Exp_Util is\n    ----------------------------------------\n \n    function Containing_Package_With_Ext_Axioms\n-     (E : Entity_Id) return Entity_Id\n-   is\n-      Decl                  : Node_Id;\n-      First_Ax_Parent_Scope : Entity_Id;\n-\n+     (E : Entity_Id) return Entity_Id is\n    begin\n       --  E is the package or generic package which is externally axiomatized\n \n@@ -1745,29 +1741,35 @@ package body Exp_Util is\n       --  If E's scope is axiomatized, E is axiomatized\n \n       if Present (Scope (E)) then\n-         First_Ax_Parent_Scope :=\n-           Containing_Package_With_Ext_Axioms (Scope (E));\n-\n-         if Present (First_Ax_Parent_Scope) then\n-            return First_Ax_Parent_Scope;\n-         end if;\n-\n+         declare\n+            First_Ax_Parent_Scope : constant Entity_Id :=\n+              Containing_Package_With_Ext_Axioms (Scope (E));\n+         begin\n+            if Present (First_Ax_Parent_Scope) then\n+               return First_Ax_Parent_Scope;\n+            end if;\n+         end;\n       end if;\n \n       --  Otherwise, if E is a package instance, it is axiomatized if the\n       --  corresponding generic package is axiomatized.\n \n       if Ekind (E) = E_Package then\n-         if Nkind (Parent (E)) = N_Defining_Program_Unit_Name then\n-            Decl := Parent (Parent (E));\n-         else\n-            Decl := Parent (E);\n-         end if;\n+         declare\n+            Par  : constant Node_Id := Parent (E);\n+            Decl : Node_Id;\n+         begin\n+            if Nkind (Par) = N_Defining_Program_Unit_Name then\n+               Decl := Parent (Par);\n+            else\n+               Decl := Par;\n+            end if;\n \n-         if Present (Generic_Parent (Decl)) then\n-            return\n-              Containing_Package_With_Ext_Axioms (Generic_Parent (Decl));\n-         end if;\n+            if Present (Generic_Parent (Decl)) then\n+               return\n+                 Containing_Package_With_Ext_Axioms (Generic_Parent (Decl));\n+            end if;\n+         end;\n       end if;\n \n       return Empty;"}, {"sha": "1020da7077916dcac23aa19c643e2e6b8eb847b6", "filename": "gcc/ada/frontend.adb", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e379beb56f0b1e597c8aeb10c84813c8326197a9/gcc%2Fada%2Ffrontend.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e379beb56f0b1e597c8aeb10c84813c8326197a9/gcc%2Fada%2Ffrontend.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffrontend.adb?ref=e379beb56f0b1e597c8aeb10c84813c8326197a9", "patch": "@@ -90,7 +90,6 @@ begin\n    Checks.Initialize;\n    Sem_Warn.Initialize;\n    Prep.Initialize;\n-   Exp_Ch6.Initialize;\n \n    if Generate_SCIL then\n       SCIL_LL.Initialize;"}, {"sha": "f97bcbe79dca7f319859f8f4a8d8e1cc4b9f4a38", "filename": "gcc/ada/s-os_lib.adb", "status": "modified", "additions": 9, "deletions": 4, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e379beb56f0b1e597c8aeb10c84813c8326197a9/gcc%2Fada%2Fs-os_lib.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e379beb56f0b1e597c8aeb10c84813c8326197a9/gcc%2Fada%2Fs-os_lib.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-os_lib.adb?ref=e379beb56f0b1e597c8aeb10c84813c8326197a9", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---                     Copyright (C) 1995-2015, AdaCore                     --\n+--                     Copyright (C) 1995-2016, AdaCore                     --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -1848,6 +1848,8 @@ package body System.OS_Lib is\n       Saved_Error  : File_Descriptor;\n       Saved_Output : File_Descriptor;\n \n+      Dummy_Status : Boolean;\n+\n    begin\n       --  Do not attempt to spawn if the output files could not be created\n \n@@ -1863,9 +1865,8 @@ package body System.OS_Lib is\n       Saved_Error  := Dup (Standerr);\n       Dup2 (Stderr_FD, Standerr);\n \n-      --  Spawn the program\n-\n-      Result := Non_Blocking_Spawn (Program_Name, Args);\n+      Set_Close_On_Exec (Saved_Output, True, Dummy_Status);\n+      Set_Close_On_Exec (Saved_Error,  True, Dummy_Status);\n \n       --  Close the files just created for the output, as the file descriptors\n       --  cannot be used anywhere, being local values. It is safe to do that,\n@@ -1875,6 +1876,10 @@ package body System.OS_Lib is\n       Close (Stdout_FD);\n       Close (Stderr_FD);\n \n+      --  Spawn the program\n+\n+      Result := Non_Blocking_Spawn (Program_Name, Args);\n+\n       --  Restore the standard output and error\n \n       Dup2 (Saved_Output, Standout);"}, {"sha": "1020d5c1240b029f09c29a7ff4be8a333b412165", "filename": "gcc/ada/set_targ.adb", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e379beb56f0b1e597c8aeb10c84813c8326197a9/gcc%2Fada%2Fset_targ.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e379beb56f0b1e597c8aeb10c84813c8326197a9/gcc%2Fada%2Fset_targ.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fset_targ.adb?ref=e379beb56f0b1e597c8aeb10c84813c8326197a9", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2013-2015, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2013-2016, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -698,6 +698,8 @@ package body Set_Targ is\n \n       Buflen := Read (File_Desc, Buffer'Address, Buffer'Length);\n \n+      Close (File_Desc);\n+\n       if Buflen = Buffer'Length then\n          Fail (\"file is too long: \" & File_Name);\n       end if;"}]}