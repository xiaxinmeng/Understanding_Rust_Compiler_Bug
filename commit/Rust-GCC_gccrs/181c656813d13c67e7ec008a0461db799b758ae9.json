{"sha": "181c656813d13c67e7ec008a0461db799b758ae9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTgxYzY1NjgxM2QxM2M2N2U3ZWMwMDhhMDQ2MWRiNzk5Yjc1OGFlOQ==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-01-25T19:50:09Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-01-25T19:50:09Z"}, "message": "(find_splittable_givs): Change error message text.\n\nFrom-SVN: r8814", "tree": {"sha": "b0b68c99d952ec35fcc0de0ce5f0ac07da07f322", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b0b68c99d952ec35fcc0de0ce5f0ac07da07f322"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/181c656813d13c67e7ec008a0461db799b758ae9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/181c656813d13c67e7ec008a0461db799b758ae9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/181c656813d13c67e7ec008a0461db799b758ae9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/181c656813d13c67e7ec008a0461db799b758ae9/comments", "author": null, "committer": null, "parents": [{"sha": "a882392b9dc336c2d813093134dbc79a40fa0b47", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a882392b9dc336c2d813093134dbc79a40fa0b47", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a882392b9dc336c2d813093134dbc79a40fa0b47"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "bebb17469cb3a12bf7d41bd78957fb302908b70f", "filename": "gcc/unroll.c", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/181c656813d13c67e7ec008a0461db799b758ae9/gcc%2Funroll.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/181c656813d13c67e7ec008a0461db799b758ae9/gcc%2Funroll.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Funroll.c?ref=181c656813d13c67e7ec008a0461db799b758ae9", "patch": "@@ -1,5 +1,5 @@\n /* Try to unroll loops, and split induction variables.\n-   Copyright (C) 1992, 1993, 1994 Free Software Foundation, Inc.\n+   Copyright (C) 1992, 1993, 1994, 1995 Free Software Foundation, Inc.\n    Contributed by James E. Wilson, Cygnus Support/UC Berkeley.\n \n This file is part of GNU CC.\n@@ -2592,7 +2592,7 @@ find_splittable_givs (bl, unroll_type, loop_start, loop_end, increment,\n \t    {\n \t      /* If value is not a constant, register, or register plus\n \t\t constant, then compute its value into a register before\n-\t\t loop start.  This prevents illegal rtx sharing, and should\n+\t\t loop start.  This prevents invalid rtx sharing, and should\n \t\t generate better code.  We can use bl->initial_value here\n \t\t instead of splittable_regs[bl->regno] because this code\n \t\t is going before the loop start.  */\n@@ -2700,7 +2700,7 @@ find_splittable_givs (bl, unroll_type, loop_start, loop_end, increment,\n \t\t    {\n \t\t      if (loop_dump_stream)\n \t\t\tfprintf (loop_dump_stream,\n-\t\t\t\t \"Illegal address for giv at insn %d\\n\",\n+\t\t\t\t \"Invalid address for giv at insn %d\\n\",\n \t\t\t\t INSN_UID (v->insn));\n \t\t      continue;\n \t\t    }\n@@ -2733,15 +2733,15 @@ find_splittable_givs (bl, unroll_type, loop_start, loop_end, increment,\n \n \t\t      if (loop_dump_stream)\n \t\t\tfprintf (loop_dump_stream,\n-\t\t\t\t \"Illegal init insn, rewritten.\\n\");\n+\t\t\t\t \"Invalid init insn, rewritten.\\n\");\n \t\t    }\n \t\t}\n \t      else\n \t\t{\n \t\t  v->dest_reg = value;\n \t\t  \n \t\t  /* Check the resulting address for validity, and fail\n-\t\t     if the resulting address would be illegal.  */\n+\t\t     if the resulting address would be invalid.  */\n \t\t  if (! memory_address_p (v->mem_mode, v->dest_reg)\n \t\t      || ! memory_address_p (v->mem_mode,\n \t\t\t\t     plus_constant (v->dest_reg,\n@@ -2750,7 +2750,7 @@ find_splittable_givs (bl, unroll_type, loop_start, loop_end, increment,\n \t\t    {\n \t\t      if (loop_dump_stream)\n \t\t\tfprintf (loop_dump_stream,\n-\t\t\t\t \"Illegal address for giv at insn %d\\n\",\n+\t\t\t\t \"Invalid address for giv at insn %d\\n\",\n \t\t\t\t INSN_UID (v->insn));\n \t\t      continue;\n \t\t    }"}]}