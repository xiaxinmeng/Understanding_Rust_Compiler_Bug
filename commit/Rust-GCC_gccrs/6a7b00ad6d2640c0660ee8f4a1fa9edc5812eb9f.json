{"sha": "6a7b00ad6d2640c0660ee8f4a1fa9edc5812eb9f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmE3YjAwYWQ2ZDI2NDBjMDY2MGVlOGY0YTFmYTllZGM1ODEyZWI5Zg==", "commit": {"author": {"name": "Kazuhiro Inaoka", "email": "inaoka.kazuhiro@renesas.com", "date": "2005-07-08T10:53:32Z"}, "committer": {"name": "Nick Clifton", "email": "nickc@gcc.gnu.org", "date": "2005-07-08T10:53:32Z"}, "message": "config/m32r/m32r.c (m32r_output_function_epilogue): Care for a large stack #\nframe at epilogue.\n\nFrom-SVN: r101759", "tree": {"sha": "644ecee0a44f77c4a7e260005a57beac129581c7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/644ecee0a44f77c4a7e260005a57beac129581c7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6a7b00ad6d2640c0660ee8f4a1fa9edc5812eb9f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6a7b00ad6d2640c0660ee8f4a1fa9edc5812eb9f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6a7b00ad6d2640c0660ee8f4a1fa9edc5812eb9f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6a7b00ad6d2640c0660ee8f4a1fa9edc5812eb9f/comments", "author": null, "committer": null, "parents": [{"sha": "0921bc44f78c9c3326d608039d099ea672541e39", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0921bc44f78c9c3326d608039d099ea672541e39", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0921bc44f78c9c3326d608039d099ea672541e39"}], "stats": {"total": 23, "additions": 21, "deletions": 2}, "files": [{"sha": "2f84490a06379113c3156814b2f8d7821d5e9066", "filename": "gcc/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a7b00ad6d2640c0660ee8f4a1fa9edc5812eb9f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a7b00ad6d2640c0660ee8f4a1fa9edc5812eb9f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6a7b00ad6d2640c0660ee8f4a1fa9edc5812eb9f", "patch": "@@ -4,6 +4,9 @@\n \t(ENDFILE_SPEC): Likewise.\n \t* config/m32r/m32r.h (ASM_SPEC): Likewise.\n \n+\t* config/m32r/m32r.c (m32r_output_function_epilogue): Care for\n+\ta large stack frame at epilogue.\n+\n 2005-07-08  David Billinghurst  <David.Billinghurst@riotinto.com>\n \n \t* final.c: Include sdbout.h when required."}, {"sha": "d6197d3da4abe80a3684fd7dac3ea8c57abbfaf7", "filename": "gcc/config/m32r/m32r.c", "status": "modified", "additions": 18, "deletions": 2, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a7b00ad6d2640c0660ee8f4a1fa9edc5812eb9f/gcc%2Fconfig%2Fm32r%2Fm32r.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a7b00ad6d2640c0660ee8f4a1fa9edc5812eb9f/gcc%2Fconfig%2Fm32r%2Fm32r.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm32r%2Fm32r.c?ref=6a7b00ad6d2640c0660ee8f4a1fa9edc5812eb9f", "patch": "@@ -1532,11 +1532,19 @@ m32r_output_function_epilogue (FILE * file, HOST_WIDE_INT size ATTRIBUTE_UNUSED)\n \t  else if (reg_offset < 32768)\n \t    fprintf (file, \"\\tadd3 %s,%s,%s%d\\n\",\n \t\t     sp_str, sp_str, IMMEDIATE_PREFIX, reg_offset);\n-\t  else\n+\t  else if (reg_offset < (1 << 24))\n \t    fprintf (file, \"\\tld24 %s,%s%d\\n\\tadd %s,%s\\n\",\n \t\t     reg_names[PROLOGUE_TMP_REGNUM],\n \t\t     IMMEDIATE_PREFIX, reg_offset,\n \t\t     sp_str, reg_names[PROLOGUE_TMP_REGNUM]);\n+\t  else\n+\t    fprintf (file, \"\\tseth %s,%s%d\\n\\tor3 %s,%s,%s%d\\n\\tadd %s,%s\\n\",\n+\t\t     reg_names[PROLOGUE_TMP_REGNUM],\n+\t\t     IMMEDIATE_PREFIX, reg_offset >> 16,\n+\t\t     reg_names[PROLOGUE_TMP_REGNUM],\n+\t\t     reg_names[PROLOGUE_TMP_REGNUM],\n+\t\t     IMMEDIATE_PREFIX, reg_offset & 0xffff,\n+\t\t     sp_str, reg_names[PROLOGUE_TMP_REGNUM]);\n \t}\n       else if (frame_pointer_needed)\n \t{\n@@ -1547,11 +1555,19 @@ m32r_output_function_epilogue (FILE * file, HOST_WIDE_INT size ATTRIBUTE_UNUSED)\n \t  else if (reg_offset < 32768)\n \t    fprintf (file, \"\\tadd3 %s,%s,%s%d\\n\",\n \t\t     sp_str, fp_str, IMMEDIATE_PREFIX, reg_offset);\n-\t  else\n+\t  else if (reg_offset < (1 << 24))\n \t    fprintf (file, \"\\tld24 %s,%s%d\\n\\tadd %s,%s\\n\",\n \t\t     reg_names[PROLOGUE_TMP_REGNUM],\n \t\t     IMMEDIATE_PREFIX, reg_offset,\n \t\t     sp_str, reg_names[PROLOGUE_TMP_REGNUM]);\n+\t  else\n+\t    fprintf (file, \"\\tseth %s,%s%d\\n\\tor3 %s,%s,%s%d\\n\\tadd %s,%s\\n\",\n+\t\t     reg_names[PROLOGUE_TMP_REGNUM],\n+\t\t     IMMEDIATE_PREFIX, reg_offset >> 16,\n+\t\t     reg_names[PROLOGUE_TMP_REGNUM],\n+\t\t     reg_names[PROLOGUE_TMP_REGNUM],\n+\t\t     IMMEDIATE_PREFIX, reg_offset & 0xffff,\n+\t\t     sp_str, reg_names[PROLOGUE_TMP_REGNUM]);\n \t}\n       else\n \tgcc_unreachable ();"}]}