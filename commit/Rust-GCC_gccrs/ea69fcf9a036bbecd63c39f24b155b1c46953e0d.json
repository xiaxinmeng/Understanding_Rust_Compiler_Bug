{"sha": "ea69fcf9a036bbecd63c39f24b155b1c46953e0d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWE2OWZjZjlhMDM2YmJlY2Q2M2MzOWYyNGIxNTViMWM0Njk1M2UwZA==", "commit": {"author": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2020-07-14T00:16:30Z"}, "committer": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2020-07-14T00:16:30Z"}, "message": "Daily bump.", "tree": {"sha": "8524a7ebcc2f4f187cf9bcd686b014a625e72b8a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8524a7ebcc2f4f187cf9bcd686b014a625e72b8a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ea69fcf9a036bbecd63c39f24b155b1c46953e0d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ea69fcf9a036bbecd63c39f24b155b1c46953e0d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ea69fcf9a036bbecd63c39f24b155b1c46953e0d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ea69fcf9a036bbecd63c39f24b155b1c46953e0d/comments", "author": null, "committer": null, "parents": [{"sha": "8651714a78b5bfa0158bb9361cff67e18d405f66", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8651714a78b5bfa0158bb9361cff67e18d405f66", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8651714a78b5bfa0158bb9361cff67e18d405f66"}], "stats": {"total": 294, "additions": 293, "deletions": 1}, "files": [{"sha": "55c7d27671f4186a941732899b4a9d8c53a2ddeb", "filename": "gcc/ChangeLog", "status": "modified", "additions": 126, "deletions": 0, "changes": 126, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea69fcf9a036bbecd63c39f24b155b1c46953e0d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea69fcf9a036bbecd63c39f24b155b1c46953e0d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ea69fcf9a036bbecd63c39f24b155b1c46953e0d", "patch": "@@ -1,3 +1,129 @@\n+2020-07-13  Alan Modra  <amodra@gmail.com>\n+\n+\t* config/rs6000/rs6000.md (sibcall_local): Merge sibcall_local32\n+\tand sibcall_local64.\n+\t(sibcall_value_local): Similarly.\n+\n+2020-07-13  Nathan Sidwell  <nathan@acm.org>\n+\n+\t* Makefile.in (distclean): Remove long gone cxxmain.c\n+\n+2020-07-13  H.J. Lu  <hjl.tools@gmail.com>\n+\n+\tPR target/95443\n+\t* config/i386/i386.md (cmpstrnsi): Pass a copy of the string\n+\tlength to cmpstrnqi patterns.\n+\n+2020-07-13  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR ipa/96130\n+\t* ipa-fnsummary.c (analyze_function_body): Treat NULL bb->aux\n+\tas false predicate.\n+\n+2020-07-13  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/96163\n+\t* tree-vect-slp.c (vect_schedule_slp_instance): Put new stmts\n+\tat least after region begin.\n+\n+2020-07-13  Szabolcs Nagy  <szabolcs.nagy@arm.com>\n+\n+\t* config/aarch64/aarch64-c.c (aarch64_update_cpp_builtins): Add\n+\t__ARM_FEATURE_PAC_DEFAULT support.\n+\n+2020-07-13  Szabolcs Nagy  <szabolcs.nagy@arm.com>\n+\n+\tPR target/94891\n+\t* doc/extend.texi: Update the text for  __builtin_return_address.\n+\n+2020-07-13  Szabolcs Nagy  <szabolcs.nagy@arm.com>\n+\n+\tPR target/94891\n+\t* config/aarch64/aarch64.c (aarch64_return_address_signing_enabled):\n+\tDisable return address signing if __builtin_eh_return is used.\n+\n+2020-07-13  Szabolcs Nagy  <szabolcs.nagy@arm.com>\n+\n+\tPR target/94891\n+\tPR target/94791\n+\t* config/aarch64/aarch64-protos.h (aarch64_return_addr_rtx): Declare.\n+\t* config/aarch64/aarch64.c (aarch64_return_addr_rtx): New.\n+\t(aarch64_return_addr): Use aarch64_return_addr_rtx.\n+\t* config/aarch64/aarch64.h (PROFILE_HOOK): Likewise.\n+\n+2020-07-13  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\tPR middle-end/95114\n+\t* tree.h (virtual_method_call_p): Add a default-false parameter\n+\tthat indicates whether the function is being called from dump\n+\troutines.\n+\t(obj_type_ref_class): Likewise.\n+\t* tree.c (virtual_method_call_p): Likewise.\n+\t* ipa-devirt.c (obj_type_ref_class): Likewise.  Lazily add ODR\n+\ttype information for the type when the parameter is false.\n+\t* tree-pretty-print.c (dump_generic_node): Update calls to\n+\tvirtual_method_call_p and obj_type_ref_class accordingly.\n+\n+2020-07-13  Julian Brown  <julian@codesourcery.com>\n+\t    Thomas Schwinge  <thomas@codesourcery.com>\n+\n+\t* gimplify.c (gimplify_scan_omp_clauses): Do not strip\n+\tGOMP_MAP_TO_PSET/GOMP_MAP_POINTER for OpenACC enter/exit data\n+\tdirectives (see also PR92929).\n+\n+2020-07-13  Roger Sayle  <roger@nextmovesoftware.com>\n+\n+\t* convert.c (convert_to_integer_1): Narrow integer operations\n+\teven on targets that require explicit truncation instructions.\n+\n+2020-07-13  Hans-Peter Nilsson  <hp@axis.com>\n+\n+\tPR target/93372\n+\t* config/cris/cris-passes.def: New file.\n+\t* config/cris/t-cris (PASSES_EXTRA): Add cris-passes.def.\n+\t* config/cris/cris.c: Add infrastructure bits and pass execute\n+\tfunction cris_postdbr_cmpelim.\n+\t* config/cris/cris-protos.h (make_pass_cris_postdbr_cmpelim): Declare.\n+\n+2020-07-13  Hans-Peter Nilsson  <hp@axis.com>\n+\n+\t* config/cris/t-cris: Remove gt-cris.h-related excessive cargo.\n+\n+2020-07-13  Hans-Peter Nilsson  <hp@axis.com>\n+\n+\tPR target/93372\n+\t* config/cris/cris.md (\"*add<mode>3_addi\"): New splitter.\n+\t(\"*addi_b_<mode>\"): New pattern.\n+\t(\"*addsi3<setnz>\"): Remove stale %-related comment.\n+\n+2020-07-13  Hans-Peter Nilsson  <hp@axis.com>\n+\n+\t* config/cris/cris.md (\"setnz_subst\", \"setnz_subst\", \"setcc_subst\"):\n+\tUse match_dup in output template, not match_operand.\n+\n+2020-07-13  Richard Biener  <rguenther@suse.de>\n+\n+\t* var-tracking.c (bb_heap_node_t): Remove unused typedef.\n+\t(vt_find_locations): Eliminate visited bitmap in favor of\n+\tRPO order check.  Dump statistics about the number of\n+\tlocal BB dataflow computes.\n+\n+2020-07-13  Richard Biener  <rguenther@suse.de>\n+\n+\tPR middle-end/94600\n+\t* expr.c (expand_constructor): Make a temporary also if we're\n+\tstoring to volatile memory.\n+\n+2020-07-13  Xionghu Luo  <luoxhu@linux.ibm.com>\n+\n+\t* config/rs6000/rs6000.md (rotl_unspec): New\n+\tdefine_insn_and_split.\n+\n+2020-07-13  Xionghu Luo  <luoxhu@linux.ibm.com>\n+\n+\t* config/rs6000/rs6000.c (rs6000_expand_vector_init):\n+\tMove V4SF to V4SI, init vector like V4SI and move to V4SF back.\n+\n 2020-07-11  Roger Sayle  <roger@nextmovesoftware.com>\n \n \t* internal-fn.c (expand_mul_overflow): When checking for signed"}, {"sha": "93b25f7329d1b9fad9ff05800cba8b0dca3de584", "filename": "gcc/DATESTAMP", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea69fcf9a036bbecd63c39f24b155b1c46953e0d/gcc%2FDATESTAMP", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea69fcf9a036bbecd63c39f24b155b1c46953e0d/gcc%2FDATESTAMP", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FDATESTAMP?ref=ea69fcf9a036bbecd63c39f24b155b1c46953e0d", "patch": "@@ -1 +1 @@\n-20200713\n+20200714"}, {"sha": "de5db3f2f5e7c7380df9c7d398661f1fa64a0d29", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea69fcf9a036bbecd63c39f24b155b1c46953e0d/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea69fcf9a036bbecd63c39f24b155b1c46953e0d/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=ea69fcf9a036bbecd63c39f24b155b1c46953e0d", "patch": "@@ -1,3 +1,13 @@\n+2020-07-13  Nathan Sidwell  <nathan@acm.org>\n+\n+\t* Make-lang.in (c++.disclean): Likewise.\n+\n+2020-07-13  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c++/96077\n+\t* parser.c (cp_parser_enum_specifier): Commit to tentative parse\n+\tafter we've seen an opening brace.\n+\n 2020-07-10  Jason Merrill  <jason@redhat.com>\n \n \t* tree.c (structural_type_p): Allow unions."}, {"sha": "5a0332c5c8128910dde1d5fed79828ccc23f2fcf", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea69fcf9a036bbecd63c39f24b155b1c46953e0d/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea69fcf9a036bbecd63c39f24b155b1c46953e0d/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=ea69fcf9a036bbecd63c39f24b155b1c46953e0d", "patch": "@@ -1,3 +1,16 @@\n+2020-07-13  Mark Eggleston  <markeggleston@gcc.gnu.org>\n+\n+\tPR fortran/45337\n+\t* resolve.c (resolve_fl_variable): Remove type and intent\n+\tchecks from the check for dummy.\n+\n+2020-07-13  Steven G. Kargl  <kargl@gcc.gnu.org>\n+\t    Mark Eggleston  <markeggleston@gcc.gnu.org>\n+\n+\tPR fortran/95981\n+\t* check.c (dim_rank_check): Allow NULL references in call to\n+\tgfc_find_array_ref and return false if no reference is found.\n+\n 2020-07-11  Thomas Koenig  <tkoenig@gcc.gnu.org>\n \n \tPR fortran/96073"}, {"sha": "593d6602b378344ba3dee45b305b693b61f8f492", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 103, "deletions": 0, "changes": 103, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea69fcf9a036bbecd63c39f24b155b1c46953e0d/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea69fcf9a036bbecd63c39f24b155b1c46953e0d/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=ea69fcf9a036bbecd63c39f24b155b1c46953e0d", "patch": "@@ -1,3 +1,106 @@\n+2020-07-13  Aaron Sawdey  <acsawdey@linux.ibm.com>\n+\n+\t* lib/target-supports.exp (is-effective-target):\n+\tReorder to put powerpc stuff together.\n+\t(is-effective-target-keyword): Add power10_hw.\n+\n+2020-07-13  Nathan Sidwell  <nathan@acm.org>\n+\n+\t* lib/scanlang.exp (scan-lang-dump): Fix breakage.\n+\t(scan-lang-dump-times, scan-lang-dump-not): New.\n+\n+2020-07-13  Aaron Sawdey  <acsawdey@linux.ibm.com>\n+\n+\t* lib/target-supports.exp (check_ppc_mma_hw_available):\n+\tNew function.\n+\t(is-effective-target): Add ppc_mma_hw.\n+\t(is-effective-target-keyword): Add ppc_mma_hw.\n+\t* gcc.target/powerpc/mma-supported.c: New file.\n+\t* gcc.target/powerpc/mma-single-test.c: Require ppc_mma_hw.\n+\t* gcc.target/powerpc/mma-double-test.c: Require ppc_mma_hw.\n+\n+2020-07-13  H.J. Lu  <hjl.tools@gmail.com>\n+\n+\tPR target/95443\n+\t* gcc.target/i386/pr95443-1.c: New test.\n+\t* gcc.target/i386/pr95443-2.c: Likewise.\n+\n+2020-07-13  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c++/95288\n+\t* g++.dg/diagnostic/enum2.C: New test.\n+\n+2020-07-13  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR ipa/96130\n+\t* gcc.dg/torture/pr96130.c: New test.\n+\n+2020-07-13  Mark Eggleston  <markeggleston@gcc.gnu.org>\n+\n+\tPR fortran/45337\n+\t* gfortran.dg/pr45337_1.f90: New test.\n+\t* gfortran.dg/pr45337_2.f90: New test.\n+\n+2020-07-13  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c++/96077\n+\t* g++.dg/parse/enum14.C: New test.\n+\n+2020-07-13  Nathan Sidwell  <nathan@acm.org>\n+\n+\t* lib/scanlang.exp (scan-lang-dump-not): Fix 3-arg case.\n+\n+2020-07-13  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/96163\n+\t* g++.dg/vect/pr96163.cc: New testcase.\n+\n+2020-07-13  Steven G. Kargl  <kargl@gcc.gnu.org>\n+\n+\tPR fortran/95981\n+\t* gfortran.dg/pr95981.f90: New test.\n+\n+2020-07-13  Szabolcs Nagy  <szabolcs.nagy@arm.com>\n+\n+\tPR target/94891\n+\t* gcc.target/aarch64/return_address_sign_1.c: Update test.\n+\t* gcc.target/aarch64/return_address_sign_b_1.c: Likewise.\n+\n+2020-07-13  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\tPR middle-end/95114\n+\t* g++.target/aarch64/pr95114.C: New test.\n+\n+2020-07-13  Julian Brown  <julian@codesourcery.com>\n+\t    Thomas Schwinge  <thomas@codesourcery.com>\n+\n+\t* gfortran.dg/goacc/finalize-1.f: Update expected dump output.\n+\n+2020-07-13  Richard Biener  <rguenther@suse.de>\n+\n+\tPR testsuite/96180\n+\t* gcc.dg/torture/pr96133.c: Align global variable.\n+\n+2020-07-13  Hans-Peter Nilsson  <hp@axis.com>\n+\n+\t* gcc.target/cris/pr93372-44.c, gcc.target/cris/pr93372-46.c: New.\n+\n+2020-07-13  Hans-Peter Nilsson  <hp@axis.com>\n+\n+\tPR target/93372\n+\t* gcc.target/cris/pr93372-45.c: New test.\n+\n+2020-07-13  Hans-Peter Nilsson  <hp@axis.com>\n+\n+\tPR middle-end/94600\n+\t* gcc.dg/pr94600-1.c, gcc.dg/pr94600-2.c, gcc.dg/pr94600-3.c,\n+\tgcc.dg/pr94600-4.c, gcc.dg/pr94600-5.c, gcc.dg/pr94600-6.c,\n+\tgcc.dg/pr94600-7.c, gcc.dg/pr94600-8.c: New tests.\n+\n+2020-07-13  Xionghu Luo  <luoxhu@linux.ibm.com>\n+\n+\t* gcc.target/powerpc/vector_float.c: New test.\n+\n 2020-07-12  H.J. Lu  <hjl.tools@gmail.com>\n \n \tPR target/93492"}, {"sha": "a05cc0b22a11d6292bd3618c54933e9df058516e", "filename": "libgcc/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea69fcf9a036bbecd63c39f24b155b1c46953e0d/libgcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea69fcf9a036bbecd63c39f24b155b1c46953e0d/libgcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2FChangeLog?ref=ea69fcf9a036bbecd63c39f24b155b1c46953e0d", "patch": "@@ -1,3 +1,16 @@\n+2020-07-13  Szabolcs Nagy  <szabolcs.nagy@arm.com>\n+\n+\tPR target/94891\n+\t* config/aarch64/aarch64-unwind.h (MD_POST_EXTRACT_ROOT_ADDR): Remove.\n+\t(MD_POST_FROB_EH_HANDLER_ADDR): Remove.\n+\t(MD_POST_EXTRACT_FRAME_ADDR): Rename to ...\n+\t(MD_DEMANGLE_RETURN_ADDR): This.\n+\t(aarch64_post_extract_frame_addr): Rename to ...\n+\t(aarch64_demangle_return_addr): This.\n+\t(aarch64_post_frob_eh_handler_addr): Remove.\n+\t* unwind-dw2.c (uw_update_context): Demangle return address.\n+\t(uw_frob_return_addr): Remove.\n+\n 2020-07-09  Szabolcs Nagy  <szabolcs.nagy@arm.com>\n \n \tPR target/96001"}, {"sha": "2d2c85d1de2ed8367e51d8b3900ba0575ab53ddd", "filename": "libgomp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea69fcf9a036bbecd63c39f24b155b1c46953e0d/libgomp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea69fcf9a036bbecd63c39f24b155b1c46953e0d/libgomp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2FChangeLog?ref=ea69fcf9a036bbecd63c39f24b155b1c46953e0d", "patch": "@@ -1,3 +1,8 @@\n+2020-07-13  Julian Brown  <julian@codesourcery.com>\n+\t    Thomas Schwinge  <thomas@codesourcery.com>\n+\n+\t* testsuite/libgomp.oacc-fortran/dynamic-pointer-1.f90: New test.\n+\n 2020-07-10  Julian Brown  <julian@codesourcery.com>\n \t    Thomas Schwinge  <thomas@codesourcery.com>\n "}, {"sha": "26dc8c45b04494ec36bf89388cc673a0c41ac22f", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea69fcf9a036bbecd63c39f24b155b1c46953e0d/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea69fcf9a036bbecd63c39f24b155b1c46953e0d/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=ea69fcf9a036bbecd63c39f24b155b1c46953e0d", "patch": "@@ -1,3 +1,25 @@\n+2020-07-13  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\tPR libstdc++/94749\n+\tPR libstdc++/96161\n+\t* include/bits/istream.tcc (basic_istream::ignore(streamsize))\n+\t[n == max]: Check overflow conditions on _M_gcount. Rely on\n+\tthe fact that either EOF or the delimiter was reached.\n+\t[n < max]: Check _M_gcount < n before checking for EOF or\n+\tdelimiter.\n+\t(basic_istream::ignore(streamsize, char_type): Likewise.\n+\t* src/c++98/compatibility.cc (istream::ignore(streamsize))\n+\t(wistream::ignore(streamsize)): Likewise.\n+\t* src/c++98/istream.cc (istream::ignore(streamsize, char_type))\n+\t(wistream::ignore(streamsize, char_type)): Likewise.\n+\t* testsuite/27_io/basic_istream/ignore/char/94749.cc: Check that\n+\tdelimiter is discarded if the number of characters ignored\n+\tdoesn't fit in streamsize.\n+\t* testsuite/27_io/basic_istream/ignore/wchar_t/94749.cc:\n+\tLikewise.\n+\t* testsuite/27_io/basic_istream/ignore/char/96161.cc: New test.\n+\t* testsuite/27_io/basic_istream/ignore/wchar_t/96161.cc: New test.\n+\n 2020-07-08  Fran\u00e7ois Dumont  <fdumont@gcc.gnu.org>\n \n \t* include/bits/stl_tree.h (_Rb_tree_impl(_Rb_tree_impl&&)): Add noexcept"}]}