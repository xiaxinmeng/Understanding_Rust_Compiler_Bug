{"sha": "08c8696d4884425839fc5cd14a8788fe53f031e4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDhjODY5NmQ0ODg0NDI1ODM5ZmM1Y2QxNGE4Nzg4ZmU1M2YwMzFlNA==", "commit": {"author": {"name": "Yannick Moy", "email": "moy@adacore.com", "date": "2019-08-12T08:59:37Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2019-08-12T08:59:37Z"}, "message": "[Ada] SPARK: disable expansion of Enum_Rep\n\nDisable expansion of Enum_Rep into a type conversion as it is incorrect\nin SPARK.\n\n2019-08-12  Yannick Moy  <moy@adacore.com>\n\ngcc/ada/\n\n\t* exp_spark.adb (Expand_SPARK_N_Attribute_Reference): Only\n\texpand Enum_Rep attribute when its parameter is a literal.\n\nFrom-SVN: r274289", "tree": {"sha": "c73fa96b43f78ae4049239e197a1d844430813d4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c73fa96b43f78ae4049239e197a1d844430813d4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/08c8696d4884425839fc5cd14a8788fe53f031e4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/08c8696d4884425839fc5cd14a8788fe53f031e4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/08c8696d4884425839fc5cd14a8788fe53f031e4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/08c8696d4884425839fc5cd14a8788fe53f031e4/comments", "author": {"login": "yannickmoy", "id": 859440, "node_id": "MDQ6VXNlcjg1OTQ0MA==", "avatar_url": "https://avatars.githubusercontent.com/u/859440?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yannickmoy", "html_url": "https://github.com/yannickmoy", "followers_url": "https://api.github.com/users/yannickmoy/followers", "following_url": "https://api.github.com/users/yannickmoy/following{/other_user}", "gists_url": "https://api.github.com/users/yannickmoy/gists{/gist_id}", "starred_url": "https://api.github.com/users/yannickmoy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yannickmoy/subscriptions", "organizations_url": "https://api.github.com/users/yannickmoy/orgs", "repos_url": "https://api.github.com/users/yannickmoy/repos", "events_url": "https://api.github.com/users/yannickmoy/events{/privacy}", "received_events_url": "https://api.github.com/users/yannickmoy/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "33defa7c6c36c0671b81b4785fbb250430a4a953", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/33defa7c6c36c0671b81b4785fbb250430a4a953", "html_url": "https://github.com/Rust-GCC/gccrs/commit/33defa7c6c36c0671b81b4785fbb250430a4a953"}], "stats": {"total": 31, "additions": 30, "deletions": 1}, "files": [{"sha": "f6ce93123eeacceeca21b2ca548e7da28d7da2f3", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08c8696d4884425839fc5cd14a8788fe53f031e4/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08c8696d4884425839fc5cd14a8788fe53f031e4/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=08c8696d4884425839fc5cd14a8788fe53f031e4", "patch": "@@ -1,3 +1,8 @@\n+2019-08-12  Yannick Moy  <moy@adacore.com>\n+\n+\t* exp_spark.adb (Expand_SPARK_N_Attribute_Reference): Only\n+\texpand Enum_Rep attribute when its parameter is a literal.\n+\n 2019-08-12  Justin Squirek  <squirek@adacore.com>\n \n \t* sem_eval.adb (Check_Non_Static_Context): Add a condition to"}, {"sha": "d6ed3d44b1dc56d0a368a948f812fe012b212898", "filename": "gcc/ada/exp_spark.adb", "status": "modified", "additions": 25, "deletions": 1, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08c8696d4884425839fc5cd14a8788fe53f031e4/gcc%2Fada%2Fexp_spark.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08c8696d4884425839fc5cd14a8788fe53f031e4/gcc%2Fada%2Fexp_spark.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_spark.adb?ref=08c8696d4884425839fc5cd14a8788fe53f031e4", "patch": "@@ -201,7 +201,31 @@ package body Exp_SPARK is\n       --  by the corresponding literal value.\n \n       elsif Attr_Id = Attribute_Enum_Rep then\n-         Exp_Attr.Expand_N_Attribute_Reference (N);\n+         declare\n+            Exprs : constant List_Id := Expressions (N);\n+         begin\n+            if Is_Non_Empty_List (Exprs) then\n+               Expr := First (Exprs);\n+            else\n+               Expr := Prefix (N);\n+            end if;\n+\n+            --  If the argument is a literal, expand it\n+\n+            if Nkind (Expr) in N_Has_Entity\n+              and then\n+                (Ekind (Entity (Expr)) = E_Enumeration_Literal\n+                 or else\n+                   (Nkind (Expr) in N_Has_Entity\n+                    and then Ekind (Entity (Expr)) = E_Constant\n+                    and then Present (Renamed_Object (Entity (Expr)))\n+                    and then Is_Entity_Name (Renamed_Object (Entity (Expr)))\n+                    and then Ekind (Entity (Renamed_Object (Entity (Expr)))) =\n+                      E_Enumeration_Literal))\n+            then\n+               Exp_Attr.Expand_N_Attribute_Reference (N);\n+            end if;\n+         end;\n \n       --  For attributes which return Universal_Integer, introduce a conversion\n       --  to the expected type with the appropriate check flags set."}]}