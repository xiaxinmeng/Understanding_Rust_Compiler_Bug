{"sha": "b6cfa9eb37ce4234a032dd0d8363b8d22334e739", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjZjZmE5ZWIzN2NlNDIzNGEwMzJkZDBkODM2M2I4ZDIyMzM0ZTczOQ==", "commit": {"author": {"name": "Tobias Burnus", "email": "burnus@net-b.de", "date": "2013-12-02T19:54:29Z"}, "committer": {"name": "Tobias Burnus", "email": "burnus@gcc.gnu.org", "date": "2013-12-02T19:54:29Z"}, "message": "re PR middle-end/59257 (usan/*san: Dpcumentation oddness of -fsanitize= / -fsanitize=shift)\n\n2013-12-02  Tobias Burnus  <burnus@net-b.de>\n            Manuel L\u00f3pez-Ib\u00e1\u00f1ez  <manu@gcc.gnu.org>\n\n        PR middle-end/59257\n        * doc/invoke.texi: Add missing @opindex.\n        (-fsanitize=): Use @gcctabopt instead of @itemize.\n\n\nCo-Authored-By: Manuel L\u00f3pez-Ib\u00e1\u00f1ez <manu@gcc.gnu.org>\n\nFrom-SVN: r205598", "tree": {"sha": "62b7897dd5c52b4ab7c48640ae0cc3403b0a0651", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/62b7897dd5c52b4ab7c48640ae0cc3403b0a0651"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b6cfa9eb37ce4234a032dd0d8363b8d22334e739", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b6cfa9eb37ce4234a032dd0d8363b8d22334e739", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b6cfa9eb37ce4234a032dd0d8363b8d22334e739", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b6cfa9eb37ce4234a032dd0d8363b8d22334e739/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "2399cad0909d5753f774f670a19efd329d020b3b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2399cad0909d5753f774f670a19efd329d020b3b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2399cad0909d5753f774f670a19efd329d020b3b"}], "stats": {"total": 55, "additions": 46, "deletions": 9}, "files": [{"sha": "3402f6dcb040c2c8ef1848a12a6247a95e249b3a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b6cfa9eb37ce4234a032dd0d8363b8d22334e739/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b6cfa9eb37ce4234a032dd0d8363b8d22334e739/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b6cfa9eb37ce4234a032dd0d8363b8d22334e739", "patch": "@@ -1,3 +1,10 @@\n+2013-12-02  Tobias Burnus  <burnus@net-b.de>\n+\t    Manuel L\u00f3pez-Ib\u00e1\u00f1ez  <manu@gcc.gnu.org>\n+\n+\tPR middle-end/59257\n+\t* doc/invoke.texi: Add missing @opindex.\n+\t(-fsanitize=): Use @gcctabopt instead of @itemize.\n+\n 2013-12-02  Bernd Edlinger  <bernd.edlinger@hotmail.de>\n \n \tFix C++0x memory model for unaligned fields in packed, aligned(4)"}, {"sha": "3f29269f45064850734d284b836ed8ecac4fac35", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 39, "deletions": 9, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b6cfa9eb37ce4234a032dd0d8363b8d22334e739/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b6cfa9eb37ce4234a032dd0d8363b8d22334e739/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=b6cfa9eb37ce4234a032dd0d8363b8d22334e739", "patch": "@@ -1501,6 +1501,7 @@ This invokes all subprograms of @command{gcc} under\n @samp{gdb --args cc1 @dots{}}.\n \n @item -fplugin=@var{name}.so\n+@opindex fplugin\n Load the plugin code in file @var{name}.so, assumed to be a\n shared object to be dlopen'd by the compiler.  The base name of\n the shared object file is used to identify the plugin for the\n@@ -1510,15 +1511,18 @@ Each plugin should define the callback functions specified in the\n Plugins API.\n \n @item -fplugin-arg-@var{name}-@var{key}=@var{value}\n+@opindex fplugin-arg\n Define an argument called @var{key} with a value of @var{value}\n for the plugin called @var{name}.\n \n @item -fdump-ada-spec@r{[}-slim@r{]}\n+@opindex fdump-ada-spec\n For C and C++ source and include files, generate corresponding Ada\n specs. @xref{Generating Ada Bindings for C and C++ headers,,, gnat_ugn,\n GNAT User's Guide}, which provides detailed documentation on this feature.\n \n @item -fdump-go-spec=@var{file}\n+@opindex fdump-go-spec\n For input files in any language, generate corresponding Go\n declarations in @var{file}.  This generates Go @code{const},\n @code{type}, @code{var}, and @code{func} declarations which may be a\n@@ -1759,6 +1763,7 @@ arguments followed by their declarations is also provided, inside\n comments, after the declaration.\n \n @item -fallow-parameterless-variadic-functions\n+@opindex fallow-parameterless-variadic-functions\n Accept variadic functions without named parameters.\n \n Although it is possible to define such a function, this is not very\n@@ -2400,7 +2405,7 @@ Note:  This feature APPENDS data to the log file. If you want a fresh log\n file, be sure to delete any existing one.\n \n @item -fvtv-counts\n-@opindex (fvtv-counts)\n+@opindex fvtv-counts\n This is a debugging flag.  When used in conjunction with\n @option{-fvtable-verify=std} or @option{-fvtable-verify=preinit}, this\n causes the compiler to keep track of the total number of virtual calls\n@@ -3499,6 +3504,8 @@ Options,,Options Controlling C Dialect}.\n @table @gcctabopt\n @item -Wformat=1\n @itemx -Wformat\n+@opindex Wformat\n+@opindex Wformat=1\n Option @option{-Wformat} is equivalent to @option{-Wformat=1}, and\n @option{-Wno-format} is equivalent to @option{-Wformat=0}.  Since\n @option{-Wformat} also checks for null format arguments for several\n@@ -3537,6 +3544,7 @@ The C standard specifies that zero-length formats are allowed.\n \n \n @item -Wformat=2\n+@opindex Wformat=2\n Enable @option{-Wformat} plus additional format checks.  Currently\n equivalent to @option{-Wformat -Wformat-nonliteral -Wformat-security\n -Wformat-y2k}.\n@@ -5273,6 +5281,7 @@ many times it is given.  This is mainly intended to be used with\n @option{-fcompare-debug}.\n \n @item -fsanitize=address\n+@opindex fsanitize=address\n Enable AddressSanitizer, a fast memory error detector.\n Memory access instructions will be instrumented to detect\n out-of-bounds and use-after-free bugs.\n@@ -5283,6 +5292,7 @@ more details.  The run-time behavior can be influenced using the\n a list of supported options.\n \n @item -fsanitize=thread\n+@opindex fsanitize=thread\n Enable ThreadSanitizer, a fast data race detector.\n Memory access instructions will be instrumented to detect\n data race bugs.  See @uref{http://code.google.com/p/thread-sanitizer/} for more\n@@ -5292,6 +5302,7 @@ environment variable; see\n supported options.\n \n @item -fsanitize=leak\n+@opindex fsanitize=leak\n Enable LeakSanitizer, a memory leak detector.\n This option only matters for linking of executables and if neither\n @option{-fsanitize=address} nor @option{-fsanitize=thread} is used.  In that\n@@ -5302,43 +5313,49 @@ details.  The run-time behavior can be influenced using the\n @env{LSAN_OPTIONS} environment variable.\n \n @item -fsanitize=undefined\n+@opindex fsanitize=undefined\n Enable UndefinedBehaviorSanitizer, a fast undefined behavior detector.\n Various computations will be instrumented to detect undefined behavior\n at runtime.  Current suboptions are:\n \n-@itemize @bullet\n+@table @gcctabopt\n \n-@item @option{-fsanitize=shift}\n+@item -fsanitize=shift\n+@opindex fsanitize=shift\n \n This option enables checking that the result of a shift operation is\n not undefined.  Note that what exactly is considered undefined differs\n slightly between C and C++, as well as between ISO C90 and C99, etc.\n \n-@item @option{-fsanitize=integer-divide-by-zero}\n+@item -fsanitize=integer-divide-by-zero\n+@opindex fsanitize=integer-divide-by-zero\n \n Detect integer division by zero as well as @code{INT_MIN / -1} division.\n \n-@item @option{-fsanitize=unreachable}\n+@item -fsanitize=unreachable\n+@opindex fsanitize=unreachable\n \n With this option, the compiler will turn the @code{__builtin_unreachable}\n call into a diagnostics message call instead.  When reaching the\n @code{__builtin_unreachable} call, the behavior is undefined.\n \n-@item @option{-fsanitize=vla-bound}\n+@item -fsanitize=vla-bound\n+@opindex fsanitize=vla-bound\n \n This option instructs the compiler to check that the size of a variable\n length array is positive.  This option does not have any effect in\n @option{-std=c++1y} mode, as the standard requires the exception be thrown\n instead.\n \n-@item @option{-fsanitize=null}\n+@item -fsanitize=null\n+@opindex fsanitize=null\n \n This option enables pointer checking.  Particularly, the application\n built with this option turned on will issue an error message when it\n tries to dereference a NULL pointer, or if a reference (possibly an\n rvalue reference) is bound to a NULL pointer.\n \n-@end itemize\n+@end table\n \n While @option{-ftrapv} causes traps for signed overflows to be emitted,\n @option{-fsanitize=undefined} gives a diagnostic message.\n@@ -5400,6 +5417,7 @@ information about each symbol.  This option only makes sense when\n generating DWARF 2 debugging information with @option{-gdwarf-2}.\n \n @item -femit-struct-debug-baseonly\n+@opindex femit-struct-debug-baseonly\n Emit debug information for struct-like types\n only when the base name of the compilation source file\n matches the base name of file in which the struct is defined.\n@@ -5412,6 +5430,7 @@ See @option{-femit-struct-debug-detailed} for more detailed control.\n This option works only with DWARF 2.\n \n @item -femit-struct-debug-reduced\n+@opindex femit-struct-debug-reduced\n Emit debug information for struct-like types\n only when the base name of the compilation source file\n matches the base name of file in which the type is defined,\n@@ -5742,6 +5761,7 @@ Here are some examples showing uses of these options.\n @itemx -fdump-rtl-@var{pass}\n @itemx -fdump-rtl-@var{pass}=@var{filename}\n @opindex d\n+@opindex fdump-rtl-@var{pass}\n Says to make debugging dumps during compilation at times specified by\n @var{letters}.  This is used for debugging the RTL-based passes of the\n compiler.  The file names for most of the dumps are made by appending\n@@ -8030,6 +8050,7 @@ variable names which more closely resemble the original variables.  This flag\n is enabled by default at @option{-O} and higher.\n \n @item -ftree-coalesce-inlined-vars\n+@opindex ftree-coalesce-inlined-vars\n Tell the copyrename pass (see @option{-ftree-copyrename}) to attempt to\n combine small user-defined variables too, but only if they were inlined\n from other functions.  It is a more limited form of\n@@ -8040,6 +8061,7 @@ contain the expected values in a debugging session.  This was the\n default in GCC versions older than 4.7.\n \n @item -ftree-coalesce-vars\n+@opindex ftree-coalesce-vars\n Tell the copyrename pass (see @option{-ftree-copyrename}) to attempt to\n combine small user-defined variables too, instead of just compiler\n temporaries.  This may severely limit the ability to debug an optimized\n@@ -8691,9 +8713,11 @@ the comparison operation before register allocation is complete.\n Enabled at levels @option{-O}, @option{-O2}, @option{-O3}, @option{-Os}.\n \n @item -fuse-ld=bfd\n+@opindex fuse-ld=bfd\n Use the @command{bfd} linker instead of the default linker.\n \n @item -fuse-ld=gold\n+@opindex fuse-ld=gold\n Use the @command{gold} linker instead of the default linker.\n \n @item -fcprop-registers\n@@ -10250,6 +10274,7 @@ for the languages used in the program, or using the option\n @file{libgcc}.\n \n @item -static-libasan\n+@opindex static-libasan\n When the @option{-fsanitize=address} option is used to link a program,\n the GCC driver automatically links against @option{libasan}.  If\n @file{libasan} is available as a shared library, and the @option{-static}\n@@ -10259,6 +10284,7 @@ driver to link @file{libasan} statically, without necessarily linking\n other libraries statically.\n \n @item -static-libtsan\n+@opindex static-libtsan\n When the @option{-fsanitize=thread} option is used to link a program,\n the GCC driver automatically links against @option{libtsan}.  If\n @file{libtsan} is available as a shared library, and the @option{-static}\n@@ -10268,6 +10294,7 @@ driver to link @file{libtsan} statically, without necessarily linking\n other libraries statically.\n \n @item -static-liblsan\n+@opindex static-liblsan\n When the @option{-fsanitize=leak} option is used to link a program,\n the GCC driver automatically links against @option{liblsan}.  If\n @file{liblsan} is available as a shared library, and the @option{-static}\n@@ -10277,6 +10304,7 @@ driver to link @file{liblsan} statically, without necessarily linking\n other libraries statically.\n \n @item -static-libubsan\n+@opindex static-libubsan\n When the @option{-fsanitize=undefined} option is used to link a program,\n the GCC driver automatically links against @option{libubsan}.  If\n @file{libubsan} is available as a shared library, and the @option{-static}\n@@ -10286,6 +10314,7 @@ driver to link @file{libubsan} statically, without necessarily linking\n other libraries statically.\n \n @item -static-libstdc++\n+@opindex static-libstdc++\n When the @command{g++} program is used to link a C++ program, it\n normally automatically links against @option{libstdc++}.  If\n @file{libstdc++} is available as a shared library, and the\n@@ -10378,6 +10407,7 @@ If you really need to change the search order for system directories,\n use the @option{-nostdinc} and/or @option{-isystem} options.\n \n @item -iplugindir=@var{dir}\n+@opindex iplugindir=\n Set the directory to search for plugins that are passed\n by @option{-fplugin=@var{name}} instead of\n @option{-fplugin=@var{path}/@var{name}.so}.  This option is not meant\n@@ -11827,7 +11857,7 @@ Enable Rcw constraint handling - ccfsm condexec mostly depends on this.\n This is the default.\n \n @item -msize-level=@var{level}\n-@ opindex msize-level\n+@opindex msize-level\n Fine-tune size optimization with regards to instruction lengths and alignment.\n The recognized values for @var{level} are:\n @table @samp"}]}