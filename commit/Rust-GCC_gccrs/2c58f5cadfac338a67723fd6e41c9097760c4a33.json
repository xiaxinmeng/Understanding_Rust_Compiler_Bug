{"sha": "2c58f5cadfac338a67723fd6e41c9097760c4a33", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmM1OGY1Y2FkZmFjMzM4YTY3NzIzZmQ2ZTQxYzkwOTc3NjBjNGEzMw==", "commit": {"author": {"name": "Patrick Palka", "email": "ppalka@redhat.com", "date": "2020-07-30T02:06:44Z"}, "committer": {"name": "Patrick Palka", "email": "ppalka@redhat.com", "date": "2020-07-30T02:06:44Z"}, "message": "c++: overload sets and placeholder return type [PR64194]\n\nIn the testcase below, template argument deduction for the call\ng(id<int>) goes wrong because the functions in the overload set id<int>\neach have a yet-undeduced auto return type, and this undeduced return\ntype makes try_one_overload fail to match up any of the overloads with\ng's parameter type, leading to g's template argument going undeduced and\nto the overload set going unresolved.\n\nThis patch fixes this issue by performing return type deduction via\ninstantiation before doing try_one_overload, in a manner similar to what\nresolve_address_of_overloaded_function does.\n\ngcc/cp/ChangeLog:\n\n\tPR c++/64194\n\t* pt.c (resolve_overloaded_unification): If the function\n\ttemplate specialization has a placeholder return type,\n\tthen instantiate it before attempting unification.\n\ngcc/testsuite/ChangeLog:\n\n\tPR c++/64194\n\t* g++.dg/cpp1y/auto-fn60.C: New test.", "tree": {"sha": "5a10e90b44cbed1580f27667e45b3fcafb165fff", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5a10e90b44cbed1580f27667e45b3fcafb165fff"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2c58f5cadfac338a67723fd6e41c9097760c4a33", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2c58f5cadfac338a67723fd6e41c9097760c4a33", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2c58f5cadfac338a67723fd6e41c9097760c4a33", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2c58f5cadfac338a67723fd6e41c9097760c4a33/comments", "author": null, "committer": null, "parents": [{"sha": "71141b1bd537cc516e485c834c2d36abba3f4544", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/71141b1bd537cc516e485c834c2d36abba3f4544", "html_url": "https://github.com/Rust-GCC/gccrs/commit/71141b1bd537cc516e485c834c2d36abba3f4544"}], "stats": {"total": 22, "additions": 21, "deletions": 1}, "files": [{"sha": "72bdf869b55cd805003d439d664d5eeeada3fb21", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c58f5cadfac338a67723fd6e41c9097760c4a33/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c58f5cadfac338a67723fd6e41c9097760c4a33/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=2c58f5cadfac338a67723fd6e41c9097760c4a33", "patch": "@@ -22120,7 +22120,16 @@ resolve_overloaded_unification (tree tparms,\n \t  if (subargs != error_mark_node\n \t      && !any_dependent_template_arguments_p (subargs))\n \t    {\n-\t      elem = TREE_TYPE (instantiate_template (fn, subargs, tf_none));\n+\t      fn = instantiate_template (fn, subargs, tf_none);\n+\t      if (undeduced_auto_decl (fn))\n+\t\t{\n+\t\t  /* Instantiate the function to deduce its return type.  */\n+\t\t  ++function_depth;\n+\t\t  instantiate_decl (fn, /*defer*/false, /*class*/false);\n+\t\t  --function_depth;\n+\t\t}\n+\n+\t      elem = TREE_TYPE (fn);\n \t      if (try_one_overload (tparms, targs, tempargs, parm,\n \t\t\t\t    elem, strict, sub_strict, addr_p, explain_p)\n \t\t  && (!goodfn || !same_type_p (goodfn, elem)))"}, {"sha": "575abafbae5143afab4957192a641c799b092a8d", "filename": "gcc/testsuite/g++.dg/cpp1y/auto-fn60.C", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c58f5cadfac338a67723fd6e41c9097760c4a33/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fauto-fn60.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c58f5cadfac338a67723fd6e41c9097760c4a33/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fauto-fn60.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fauto-fn60.C?ref=2c58f5cadfac338a67723fd6e41c9097760c4a33", "patch": "@@ -0,0 +1,11 @@\n+// PR c++/64194\n+// { dg-do compile { target c++14 } }\n+\n+template <typename T> void g(void (*)(T)) { }\n+\n+template <typename> auto id(int) { }\n+template <typename> auto id(char) { return 0; }\n+\n+int main() {\n+  g(id<int>);\n+}"}]}