{"sha": "9e81685aef368a10401bccb0a0adbed480be9eb1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWU4MTY4NWFlZjM2OGExMDQwMWJjY2IwYTBhZGJlZDQ4MGJlOWViMQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2000-07-25T19:32:13Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2000-07-25T19:32:13Z"}, "message": "i386.md (call_pop): Check operands[0], not operands[1].\n\n\t* config/i386/i386.md (call_pop): Check operands[0],\n\tnot operands[1]. Only check SYMBOL_REF_FLAG for a SYMBOL_REF.\n\t(call): Likewise.\n\t(call_value_pop): Only check SYMBOL_REF_FLAG for a SYMBOL_REF.\n\t(call_value): Likewise.\n\nFrom-SVN: r35248", "tree": {"sha": "236d0b7483f3bfaed98036ae8feffd5e2355400f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/236d0b7483f3bfaed98036ae8feffd5e2355400f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9e81685aef368a10401bccb0a0adbed480be9eb1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9e81685aef368a10401bccb0a0adbed480be9eb1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9e81685aef368a10401bccb0a0adbed480be9eb1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9e81685aef368a10401bccb0a0adbed480be9eb1/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a7023245ceb1d6e7cae3235cabdc5daa81b1db5e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a7023245ceb1d6e7cae3235cabdc5daa81b1db5e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a7023245ceb1d6e7cae3235cabdc5daa81b1db5e"}], "stats": {"total": 24, "additions": 18, "deletions": 6}, "files": [{"sha": "c6d6a4048511b7213452a80d0fa5c0f9774aac21", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e81685aef368a10401bccb0a0adbed480be9eb1/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e81685aef368a10401bccb0a0adbed480be9eb1/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9e81685aef368a10401bccb0a0adbed480be9eb1", "patch": "@@ -1,3 +1,11 @@\n+2000-07-25  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* config/i386/i386.md (call_pop): Check operands[0],\n+\tnot operands[1]. Only check SYMBOL_REF_FLAG for a SYMBOL_REF.\n+\t(call): Likewise.\n+\t(call_value_pop): Only check SYMBOL_REF_FLAG for a SYMBOL_REF.\n+\t(call_value): Likewise.\n+\n 2000-07-25  Zack Weinberg  <zack@wolery.cumb.org>\n \n \t* toplev.c (pipe_closed): Delete."}, {"sha": "538ebe7444f169cf783b0b57313fa21b2d27ed7a", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 10, "deletions": 6, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e81685aef368a10401bccb0a0adbed480be9eb1/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e81685aef368a10401bccb0a0adbed480be9eb1/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=9e81685aef368a10401bccb0a0adbed480be9eb1", "patch": "@@ -8203,8 +8203,9 @@\n   /* Static functions and indirect calls don't need\n      current_function_uses_pic_offset_table.  */\n   if (flag_pic\n-      && constant_call_address_operand (operands[1], SImode)\n-      && !SYMBOL_REF_FLAG (XEXP (operands[1], 0)))\n+      && constant_call_address_operand (operands[0], SImode)\n+      && (GET_CODE (XEXP (operands[0], 0)) != SYMBOL_REF\n+\t  || !SYMBOL_REF_FLAG (XEXP (operands[0], 0))))\n     current_function_uses_pic_offset_table = 1;\n   if (! call_insn_operand (operands[0], QImode))\n     XEXP (operands[0], 0) = copy_to_mode_reg (Pmode, XEXP (operands[0], 0));\n@@ -8258,8 +8259,9 @@\n   /* Static functions and indirect calls don't need\n      current_function_uses_pic_offset_table.  */\n   if (flag_pic\n-      && constant_call_address_operand (operands[1], SImode)\n-      && !SYMBOL_REF_FLAG (XEXP (operands[1], 0)))\n+      && constant_call_address_operand (operands[0], SImode)\n+      && (GET_CODE (XEXP (operands[0], 0)) != SYMBOL_REF\n+\t  || !SYMBOL_REF_FLAG (XEXP (operands[0], 0))))\n     current_function_uses_pic_offset_table = 1;\n   if (! call_insn_operand (operands[0], QImode))\n     XEXP (operands[0], 0) = copy_to_mode_reg (Pmode, XEXP (operands[0], 0));\n@@ -8321,7 +8323,8 @@\n      current_function_uses_pic_offset_table.  */\n   if (flag_pic\n       && constant_call_address_operand (operands[1], SImode)\n-      && !SYMBOL_REF_FLAG (XEXP (operands[1], 0)))\n+      && (GET_CODE (XEXP (operands[1], 0)) != SYMBOL_REF\n+\t  || !SYMBOL_REF_FLAG (XEXP (operands[1], 0))))\n     current_function_uses_pic_offset_table = 1;\n   if (! call_insn_operand (operands[1], QImode))\n     XEXP (operands[1], 0) = copy_to_mode_reg (Pmode, XEXP (operands[1], 0));\n@@ -8339,7 +8342,8 @@\n      current_function_uses_pic_offset_table.  */\n   if (flag_pic\n       && constant_call_address_operand (operands[1], SImode)\n-      && !SYMBOL_REF_FLAG (XEXP (operands[1], 0)))\n+      && (GET_CODE (XEXP (operands[1], 0)) != SYMBOL_REF\n+\t  || !SYMBOL_REF_FLAG (XEXP (operands[1], 0))))\n     current_function_uses_pic_offset_table = 1;\n   if (! call_insn_operand (operands[1], QImode))\n     XEXP (operands[1], 0) = copy_to_mode_reg (Pmode, XEXP (operands[1], 0));"}]}