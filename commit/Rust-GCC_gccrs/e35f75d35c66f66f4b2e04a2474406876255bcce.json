{"sha": "e35f75d35c66f66f4b2e04a2474406876255bcce", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTM1Zjc1ZDM1YzY2ZjY2ZjRiMmUwNGEyNDc0NDA2ODc2MjU1YmNjZQ==", "commit": {"author": {"name": "Segher Boessenkool", "email": "segher@kernel.crashing.org", "date": "2019-08-08T20:18:56Z"}, "committer": {"name": "Segher Boessenkool", "email": "segher@gcc.gnu.org", "date": "2019-08-08T20:18:56Z"}, "message": "rs6000: Rename DFP iterator and attr to DDTD and q\n\nThis is more in line with the other iterators we have, and a bit easier\nto read and write.\n\n\n\t* config/rs6000/dfp.md (D64_D128): Rename to ...\n\t(DDTD): ... this, throughout.\n\t(dfp_suffix): Rename to ...\n\t(q): ... this, throughout.\n\nFrom-SVN: r274218", "tree": {"sha": "57c379718bc21c4e42c1fef2b20e27d4d0fb1ee8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/57c379718bc21c4e42c1fef2b20e27d4d0fb1ee8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e35f75d35c66f66f4b2e04a2474406876255bcce", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e35f75d35c66f66f4b2e04a2474406876255bcce", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e35f75d35c66f66f4b2e04a2474406876255bcce", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e35f75d35c66f66f4b2e04a2474406876255bcce/comments", "author": {"login": "segher", "id": 417629, "node_id": "MDQ6VXNlcjQxNzYyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/417629?v=4", "gravatar_id": "", "url": "https://api.github.com/users/segher", "html_url": "https://github.com/segher", "followers_url": "https://api.github.com/users/segher/followers", "following_url": "https://api.github.com/users/segher/following{/other_user}", "gists_url": "https://api.github.com/users/segher/gists{/gist_id}", "starred_url": "https://api.github.com/users/segher/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/segher/subscriptions", "organizations_url": "https://api.github.com/users/segher/orgs", "repos_url": "https://api.github.com/users/segher/repos", "events_url": "https://api.github.com/users/segher/events{/privacy}", "received_events_url": "https://api.github.com/users/segher/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b1bb81608e684070fd15bb378fb38fc7527e406f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b1bb81608e684070fd15bb378fb38fc7527e406f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b1bb81608e684070fd15bb378fb38fc7527e406f"}], "stats": {"total": 137, "additions": 70, "deletions": 67}, "files": [{"sha": "f440b86f6b7a67e2fc2fea616d78bce70da4a716", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e35f75d35c66f66f4b2e04a2474406876255bcce/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e35f75d35c66f66f4b2e04a2474406876255bcce/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e35f75d35c66f66f4b2e04a2474406876255bcce", "patch": "@@ -1,3 +1,10 @@\n+2019-08-08  Segher Boessenkool  <segher@kernel.crashing.org>\n+\n+\t* config/rs6000/dfp.md (D64_D128): Rename to ...\n+\t(DDTD): ... this, throughout.\n+\t(dfp_suffix): Rename to ...\n+\t(q): ... this, throughout.\n+\n 2019-08-08  Segher Boessenkool  <segher@kernel.crashing.org>\n \n \t* config/rs6000/dfp.md (D64_D128): Move earlier in the file."}, {"sha": "659b3c9a39be6cc0d10b6d703fb1a738962b57e0", "filename": "gcc/config/rs6000/dfp.md", "status": "modified", "additions": 63, "deletions": 67, "changes": 130, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e35f75d35c66f66f4b2e04a2474406876255bcce/gcc%2Fconfig%2Frs6000%2Fdfp.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e35f75d35c66f66f4b2e04a2474406876255bcce/gcc%2Fconfig%2Frs6000%2Fdfp.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fdfp.md?ref=e35f75d35c66f66f4b2e04a2474406876255bcce", "patch": "@@ -29,10 +29,9 @@\n   ])\n \n ; Either of the two decimal modes.\n-(define_mode_iterator D64_D128 [DD TD])\n+(define_mode_iterator DDTD [DD TD])\n \n-(define_mode_attr dfp_suffix [(DD \"\")\n-\t\t\t      (TD \"q\")])\n+(define_mode_attr q [(DD \"\") (TD \"q\")])\n \n \n (define_insn \"movsd_store\"\n@@ -157,43 +156,43 @@\n    (set_attr \"length\" \"8\")])\n \n (define_insn \"add<mode>3\"\n-  [(set (match_operand:D64_D128 0 \"gpc_reg_operand\" \"=d\")\n-\t(plus:D64_D128 (match_operand:D64_D128 1 \"gpc_reg_operand\" \"%d\")\n-\t\t       (match_operand:D64_D128 2 \"gpc_reg_operand\" \"d\")))]\n+  [(set (match_operand:DDTD 0 \"gpc_reg_operand\" \"=d\")\n+\t(plus:DDTD (match_operand:DDTD 1 \"gpc_reg_operand\" \"%d\")\n+\t\t   (match_operand:DDTD 2 \"gpc_reg_operand\" \"d\")))]\n   \"TARGET_DFP\"\n-  \"dadd<dfp_suffix> %0,%1,%2\"\n+  \"dadd<q> %0,%1,%2\"\n   [(set_attr \"type\" \"dfp\")])\n \n (define_insn \"sub<mode>3\"\n-  [(set (match_operand:D64_D128 0 \"gpc_reg_operand\" \"=d\")\n-\t(minus:D64_D128 (match_operand:D64_D128 1 \"gpc_reg_operand\" \"d\")\n-\t\t\t(match_operand:D64_D128 2 \"gpc_reg_operand\" \"d\")))]\n+  [(set (match_operand:DDTD 0 \"gpc_reg_operand\" \"=d\")\n+\t(minus:DDTD (match_operand:DDTD 1 \"gpc_reg_operand\" \"d\")\n+\t\t    (match_operand:DDTD 2 \"gpc_reg_operand\" \"d\")))]\n   \"TARGET_DFP\"\n-  \"dsub<dfp_suffix> %0,%1,%2\"\n+  \"dsub<q> %0,%1,%2\"\n   [(set_attr \"type\" \"dfp\")])\n \n (define_insn \"mul<mode>3\"\n-  [(set (match_operand:D64_D128 0 \"gpc_reg_operand\" \"=d\")\n-\t(mult:D64_D128 (match_operand:D64_D128 1 \"gpc_reg_operand\" \"%d\")\n-\t\t       (match_operand:D64_D128 2 \"gpc_reg_operand\" \"d\")))]\n+  [(set (match_operand:DDTD 0 \"gpc_reg_operand\" \"=d\")\n+\t(mult:DDTD (match_operand:DDTD 1 \"gpc_reg_operand\" \"%d\")\n+\t\t   (match_operand:DDTD 2 \"gpc_reg_operand\" \"d\")))]\n   \"TARGET_DFP\"\n-  \"dmul<dfp_suffix> %0,%1,%2\"\n+  \"dmul<q> %0,%1,%2\"\n   [(set_attr \"type\" \"dfp\")])\n \n (define_insn \"div<mode>3\"\n-  [(set (match_operand:D64_D128 0 \"gpc_reg_operand\" \"=d\")\n-\t(div:D64_D128 (match_operand:D64_D128 1 \"gpc_reg_operand\" \"d\")\n-\t\t      (match_operand:D64_D128 2 \"gpc_reg_operand\" \"d\")))]\n+  [(set (match_operand:DDTD 0 \"gpc_reg_operand\" \"=d\")\n+\t(div:DDTD (match_operand:DDTD 1 \"gpc_reg_operand\" \"d\")\n+\t\t  (match_operand:DDTD 2 \"gpc_reg_operand\" \"d\")))]\n   \"TARGET_DFP\"\n-  \"ddiv<dfp_suffix> %0,%1,%2\"\n+  \"ddiv<q> %0,%1,%2\"\n   [(set_attr \"type\" \"dfp\")])\n \n (define_insn \"*cmp<mode>_internal1\"\n   [(set (match_operand:CCFP 0 \"cc_reg_operand\" \"=y\")\n-\t(compare:CCFP (match_operand:D64_D128 1 \"gpc_reg_operand\" \"d\")\n-\t\t      (match_operand:D64_D128 2 \"gpc_reg_operand\" \"d\")))]\n+\t(compare:CCFP (match_operand:DDTD 1 \"gpc_reg_operand\" \"d\")\n+\t\t      (match_operand:DDTD 2 \"gpc_reg_operand\" \"d\")))]\n   \"TARGET_DFP\"\n-  \"dcmpu<dfp_suffix> %0,%1,%2\"\n+  \"dcmpu<q> %0,%1,%2\"\n   [(set_attr \"type\" \"dfp\")])\n \n (define_insn \"floatdidd2\"\n@@ -214,20 +213,20 @@\n ;; This is the first stage of converting it to an integer type.\n \n (define_insn \"ftrunc<mode>2\"\n-  [(set (match_operand:D64_D128 0 \"gpc_reg_operand\" \"=d\")\n-\t(fix:D64_D128 (match_operand:D64_D128 1 \"gpc_reg_operand\" \"d\")))]\n+  [(set (match_operand:DDTD 0 \"gpc_reg_operand\" \"=d\")\n+\t(fix:DDTD (match_operand:DDTD 1 \"gpc_reg_operand\" \"d\")))]\n   \"TARGET_DFP\"\n-  \"drintn<dfp_suffix>. 0,%0,%1,1\"\n+  \"drintn<q>. 0,%0,%1,1\"\n   [(set_attr \"type\" \"dfp\")])\n \n ;; Convert a decimal64/128 whose value is an integer to an actual integer.\n ;; This is the second stage of converting decimal float to integer type.\n \n (define_insn \"fix<mode>di2\"\n   [(set (match_operand:DI 0 \"gpc_reg_operand\" \"=d\")\n-\t(fix:DI (match_operand:D64_D128 1 \"gpc_reg_operand\" \"d\")))]\n+\t(fix:DI (match_operand:DDTD 1 \"gpc_reg_operand\" \"d\")))]\n   \"TARGET_DFP\"\n-  \"dctfix<dfp_suffix> %0,%1\"\n+  \"dctfix<q> %0,%1\"\n   [(set_attr \"type\" \"dfp\")])\n \f\n ;; Decimal builtin support\n@@ -244,64 +243,61 @@\n (define_code_iterator DFP_TEST [eq lt gt unordered])\n \n (define_insn \"dfp_ddedpd_<mode>\"\n-  [(set (match_operand:D64_D128 0 \"gpc_reg_operand\" \"=d\")\n-\t(unspec:D64_D128 [(match_operand:QI 1 \"const_0_to_3_operand\" \"i\")\n-\t\t\t  (match_operand:D64_D128 2 \"gpc_reg_operand\" \"d\")]\n-\t\t\t UNSPEC_DDEDPD))]\n+  [(set (match_operand:DDTD 0 \"gpc_reg_operand\" \"=d\")\n+\t(unspec:DDTD [(match_operand:QI 1 \"const_0_to_3_operand\" \"i\")\n+\t\t      (match_operand:DDTD 2 \"gpc_reg_operand\" \"d\")]\n+\t\t     UNSPEC_DDEDPD))]\n   \"TARGET_DFP\"\n-  \"ddedpd<dfp_suffix> %1,%0,%2\"\n+  \"ddedpd<q> %1,%0,%2\"\n   [(set_attr \"type\" \"dfp\")])\n \n (define_insn \"dfp_denbcd_<mode>\"\n-  [(set (match_operand:D64_D128 0 \"gpc_reg_operand\" \"=d\")\n-\t(unspec:D64_D128 [(match_operand:QI 1 \"const_0_to_1_operand\" \"i\")\n-\t\t\t  (match_operand:D64_D128 2 \"gpc_reg_operand\" \"d\")]\n-\t\t\t UNSPEC_DENBCD))]\n+  [(set (match_operand:DDTD 0 \"gpc_reg_operand\" \"=d\")\n+\t(unspec:DDTD [(match_operand:QI 1 \"const_0_to_1_operand\" \"i\")\n+\t\t      (match_operand:DDTD 2 \"gpc_reg_operand\" \"d\")]\n+\t\t     UNSPEC_DENBCD))]\n   \"TARGET_DFP\"\n-  \"denbcd<dfp_suffix> %1,%0,%2\"\n+  \"denbcd<q> %1,%0,%2\"\n   [(set_attr \"type\" \"dfp\")])\n \n (define_insn \"dfp_dxex_<mode>\"\n   [(set (match_operand:DI 0 \"gpc_reg_operand\" \"=d\")\n-\t(unspec:DI [(match_operand:D64_D128 1 \"gpc_reg_operand\" \"d\")]\n+\t(unspec:DI [(match_operand:DDTD 1 \"gpc_reg_operand\" \"d\")]\n \t\t   UNSPEC_DXEX))]\n   \"TARGET_DFP\"\n-  \"dxex<dfp_suffix> %0,%1\"\n+  \"dxex<q> %0,%1\"\n   [(set_attr \"type\" \"dfp\")])\n \n (define_insn \"dfp_diex_<mode>\"\n-  [(set (match_operand:D64_D128 0 \"gpc_reg_operand\" \"=d\")\n-\t(unspec:D64_D128 [(match_operand:DI 1 \"gpc_reg_operand\" \"d\")\n-\t\t\t  (match_operand:D64_D128 2 \"gpc_reg_operand\" \"d\")]\n-\t\t\t UNSPEC_DXEX))]\n+  [(set (match_operand:DDTD 0 \"gpc_reg_operand\" \"=d\")\n+\t(unspec:DDTD [(match_operand:DI 1 \"gpc_reg_operand\" \"d\")\n+\t\t      (match_operand:DDTD 2 \"gpc_reg_operand\" \"d\")]\n+\t\t     UNSPEC_DXEX))]\n   \"TARGET_DFP\"\n-  \"diex<dfp_suffix> %0,%1,%2\"\n+  \"diex<q> %0,%1,%2\"\n   [(set_attr \"type\" \"dfp\")])\n \n (define_expand \"dfptstsfi_<code>_<mode>\"\n   [(set (match_dup 3)\n-\t(compare:CCFP\n-         (unspec:D64_D128\n-\t  [(match_operand:SI 1 \"const_int_operand\")\n-\t   (match_operand:D64_D128 2 \"gpc_reg_operand\")]\n-\t  UNSPEC_DTSTSFI)\n-\t (match_dup 4)))\n+\t(compare:CCFP (unspec:DDTD [(match_operand:SI 1 \"const_int_operand\")\n+\t\t\t\t    (match_operand:DDTD 2 \"gpc_reg_operand\")]\n+\t\t\t\t   UNSPEC_DTSTSFI)\n+\t\t      (const_int 0)))\n    (set (match_operand:SI 0 \"register_operand\")\n-   \t(DFP_TEST:SI (match_dup 3)\n+\t(DFP_TEST:SI (match_dup 3)\n \t\t     (const_int 0)))\n   ]\n   \"TARGET_P9_MISC\"\n {\n   operands[3] = gen_reg_rtx (CCFPmode);\n-  operands[4] = const0_rtx;\n })\n \n (define_insn \"*dfp_sgnfcnc_<mode>\"\n   [(set (match_operand:CCFP 0 \"\" \"=y\")\n-        (compare:CCFP\n-\t (unspec:D64_D128 [(match_operand:SI 1 \"const_int_operand\" \"n\")\n-\t \t           (match_operand:D64_D128 2 \"gpc_reg_operand\" \"d\")]\n-          UNSPEC_DTSTSFI)\n+\t(compare:CCFP\n+\t (unspec:DDTD [(match_operand:SI 1 \"const_int_operand\" \"n\")\n+\t\t       (match_operand:DDTD 2 \"gpc_reg_operand\" \"d\")]\n+\t\t      UNSPEC_DTSTSFI)\n \t (match_operand:SI 3 \"zero_constant\" \"j\")))]\n   \"TARGET_P9_MISC\"\n {\n@@ -310,24 +306,24 @@\n      immediate operand values greater than 63.  */\n   if (!(IN_RANGE (INTVAL (operands[1]), 0, 63)))\n     operands[1] = GEN_INT (63);\n-  return \"dtstsfi<dfp_suffix> %0,%1,%2\";\n+  return \"dtstsfi<q> %0,%1,%2\";\n }\n   [(set_attr \"type\" \"fp\")])\n \n (define_insn \"dfp_dscli_<mode>\"\n-  [(set (match_operand:D64_D128 0 \"gpc_reg_operand\" \"=d\")\n-\t(unspec:D64_D128 [(match_operand:D64_D128 1 \"gpc_reg_operand\" \"d\")\n-\t\t\t  (match_operand:QI 2 \"immediate_operand\" \"i\")]\n-\t\t\t UNSPEC_DSCLI))]\n+  [(set (match_operand:DDTD 0 \"gpc_reg_operand\" \"=d\")\n+\t(unspec:DDTD [(match_operand:DDTD 1 \"gpc_reg_operand\" \"d\")\n+\t\t      (match_operand:QI 2 \"immediate_operand\" \"i\")]\n+\t\t     UNSPEC_DSCLI))]\n   \"TARGET_DFP\"\n-  \"dscli<dfp_suffix> %0,%1,%2\"\n+  \"dscli<q> %0,%1,%2\"\n   [(set_attr \"type\" \"dfp\")])\n \n (define_insn \"dfp_dscri_<mode>\"\n-  [(set (match_operand:D64_D128 0 \"gpc_reg_operand\" \"=d\")\n-\t(unspec:D64_D128 [(match_operand:D64_D128 1 \"gpc_reg_operand\" \"d\")\n-\t\t\t  (match_operand:QI 2 \"immediate_operand\" \"i\")]\n-\t\t\t UNSPEC_DSCRI))]\n+  [(set (match_operand:DDTD 0 \"gpc_reg_operand\" \"=d\")\n+\t(unspec:DDTD [(match_operand:DDTD 1 \"gpc_reg_operand\" \"d\")\n+\t\t      (match_operand:QI 2 \"immediate_operand\" \"i\")]\n+\t\t     UNSPEC_DSCRI))]\n   \"TARGET_DFP\"\n-  \"dscri<dfp_suffix> %0,%1,%2\"\n+  \"dscri<q> %0,%1,%2\"\n   [(set_attr \"type\" \"dfp\")])"}]}