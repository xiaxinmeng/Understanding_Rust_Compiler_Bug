{"sha": "34a249bc2e3d60683e0e7fe3c68c85ca287f536f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzRhMjQ5YmMyZTNkNjA2ODNlMGU3ZmUzYzY4Yzg1Y2EyODdmNTM2Zg==", "commit": {"author": {"name": "Ilya Leoshkevich", "email": "iii@linux.ibm.com", "date": "2018-11-20T09:32:49Z"}, "committer": {"name": "Ilya Leoshkevich", "email": "iii@gcc.gnu.org", "date": "2018-11-20T09:32:49Z"}, "message": "S/390: Skip LT(G) peephole when literal pool is involved\n\nBy the time peephole optimizations run, we've already made up our mind\nwhether to use base-register or relative addressing for literal pool\nentries.  LT(G) supports only base-register addressing, and so it is\ntoo late to convert L(G)RL + compare to LT(G).  This change should not\nmake the code worse unless building with e.g. -fno-dce, since comparing\nliteral pool entries to zero should be optimized away during earlier\npasses.\n\ngcc/ChangeLog:\n\n2018-11-20  Ilya Leoshkevich  <iii@linux.ibm.com>\n\n\tPR target/88083\n\t* config/s390/s390.md: Skip LT(G) peephole when literal pool is\n\tinvolved.\n\t* rtl.h (contains_constant_pool_address_p): New function.\n\t* rtlanal.c (contains_constant_pool_address_p): Likewise.\n\ngcc/testsuite/ChangeLog:\n\n2018-11-20  Ilya Leoshkevich  <iii@linux.ibm.com>\n\n\tPR target/88083\n\t* gcc.target/s390/pr88083.c: New test.\n\nFrom-SVN: r266306", "tree": {"sha": "03c869fa8394d034c1e26ec4df9aece147b86565", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/03c869fa8394d034c1e26ec4df9aece147b86565"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/34a249bc2e3d60683e0e7fe3c68c85ca287f536f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/34a249bc2e3d60683e0e7fe3c68c85ca287f536f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/34a249bc2e3d60683e0e7fe3c68c85ca287f536f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/34a249bc2e3d60683e0e7fe3c68c85ca287f536f/comments", "author": {"login": "iii-i", "id": 45998171, "node_id": "MDQ6VXNlcjQ1OTk4MTcx", "avatar_url": "https://avatars.githubusercontent.com/u/45998171?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iii-i", "html_url": "https://github.com/iii-i", "followers_url": "https://api.github.com/users/iii-i/followers", "following_url": "https://api.github.com/users/iii-i/following{/other_user}", "gists_url": "https://api.github.com/users/iii-i/gists{/gist_id}", "starred_url": "https://api.github.com/users/iii-i/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iii-i/subscriptions", "organizations_url": "https://api.github.com/users/iii-i/orgs", "repos_url": "https://api.github.com/users/iii-i/repos", "events_url": "https://api.github.com/users/iii-i/events{/privacy}", "received_events_url": "https://api.github.com/users/iii-i/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "dc3221e1e3d3a39d88d2d35103f6f50e3400d7a8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dc3221e1e3d3a39d88d2d35103f6f50e3400d7a8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dc3221e1e3d3a39d88d2d35103f6f50e3400d7a8"}], "stats": {"total": 40, "additions": 39, "deletions": 1}, "files": [{"sha": "75893260d525130a2b2967eb9ec21df67fe98604", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34a249bc2e3d60683e0e7fe3c68c85ca287f536f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34a249bc2e3d60683e0e7fe3c68c85ca287f536f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=34a249bc2e3d60683e0e7fe3c68c85ca287f536f", "patch": "@@ -1,3 +1,11 @@\n+2018-11-20  Ilya Leoshkevich  <iii@linux.ibm.com>\n+\n+\tPR target/88083\n+\t* config/s390/s390.md: Skip LT(G) peephole when literal pool is\n+\tinvolved.\n+\t* rtl.h (contains_constant_pool_address_p): New function.\n+\t* rtlanal.c (contains_constant_pool_address_p): Likewise.\n+\n 2018-11-20  Richard Biener  <rguenther@suse.de>\n \n \tPR middle-end/83215"}, {"sha": "721222d221f4d812fd87319cd76106e1ef923c91", "filename": "gcc/config/s390/s390.md", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34a249bc2e3d60683e0e7fe3c68c85ca287f536f/gcc%2Fconfig%2Fs390%2Fs390.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34a249bc2e3d60683e0e7fe3c68c85ca287f536f/gcc%2Fconfig%2Fs390%2Fs390.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390.md?ref=34a249bc2e3d60683e0e7fe3c68c85ca287f536f", "patch": "@@ -941,7 +941,8 @@\n \t(compare (match_dup 0) (match_operand:GPR 1 \"const0_operand\")))]\n   \"s390_match_ccmode(insn, CCSmode) && TARGET_EXTIMM\n    && GENERAL_REG_P (operands[0])\n-   && satisfies_constraint_T (operands[2])\"\n+   && satisfies_constraint_T (operands[2])\n+   && !contains_constant_pool_address_p (operands[2])\"\n   [(parallel\n     [(set (reg:CCS CC_REGNUM)\n \t  (compare:CCS (match_dup 2) (match_dup 1)))"}, {"sha": "dd3ce06295a167feca001269c3b1711d1f1dbd5f", "filename": "gcc/rtl.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34a249bc2e3d60683e0e7fe3c68c85ca287f536f/gcc%2Frtl.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34a249bc2e3d60683e0e7fe3c68c85ca287f536f/gcc%2Frtl.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frtl.h?ref=34a249bc2e3d60683e0e7fe3c68c85ca287f536f", "patch": "@@ -3385,6 +3385,7 @@ extern void set_insn_deleted (rtx_insn *);\n extern rtx single_set_2 (const rtx_insn *, const_rtx);\n extern bool contains_symbol_ref_p (const_rtx);\n extern bool contains_symbolic_reference_p (const_rtx);\n+extern bool contains_constant_pool_address_p (const_rtx);\n \n /* Handle the cheap and common cases inline for performance.  */\n "}, {"sha": "11e96642139e75a6f6817bed53c8259d03bc2984", "filename": "gcc/rtlanal.c", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34a249bc2e3d60683e0e7fe3c68c85ca287f536f/gcc%2Frtlanal.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34a249bc2e3d60683e0e7fe3c68c85ca287f536f/gcc%2Frtlanal.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frtlanal.c?ref=34a249bc2e3d60683e0e7fe3c68c85ca287f536f", "patch": "@@ -6551,6 +6551,20 @@ contains_symbolic_reference_p (const_rtx x)\n   return false;\n }\n \n+/* Return true if RTL X contains a constant pool address.  */\n+\n+bool\n+contains_constant_pool_address_p (const_rtx x)\n+{\n+  subrtx_iterator::array_type array;\n+  FOR_EACH_SUBRTX (iter, array, x, ALL)\n+    if (SYMBOL_REF_P (*iter) && CONSTANT_POOL_ADDRESS_P (*iter))\n+      return true;\n+\n+  return false;\n+}\n+\n+\n /* Return true if X contains a thread-local symbol.  */\n \n bool"}, {"sha": "32a523e27803f6ad54c6108a8a9545063c52d3e4", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34a249bc2e3d60683e0e7fe3c68c85ca287f536f/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34a249bc2e3d60683e0e7fe3c68c85ca287f536f/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=34a249bc2e3d60683e0e7fe3c68c85ca287f536f", "patch": "@@ -1,3 +1,8 @@\n+2018-11-20  Ilya Leoshkevich  <iii@linux.ibm.com>\n+\n+\tPR target/88083\n+\t* gcc.target/s390/pr88083.c: New test.\n+\n 2018-11-20  Richard Biener  <rguenther@suse.de>\n \n \tPR middle-end/83215"}, {"sha": "d5e530eef83bd8fea0fb98a89c75fd21febd4761", "filename": "gcc/testsuite/gcc.target/s390/pr88083.c", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34a249bc2e3d60683e0e7fe3c68c85ca287f536f/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fpr88083.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34a249bc2e3d60683e0e7fe3c68c85ca287f536f/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fpr88083.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fpr88083.c?ref=34a249bc2e3d60683e0e7fe3c68c85ca287f536f", "patch": "@@ -0,0 +1,9 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-fno-sched-last-insn-heuristic -fno-dce -march=z196 -O2\" } */\n+\n+void *a, *b;\n+\n+void c(void)\n+{\n+  __builtin_memcpy(a, b, -1);  /* { dg-warning \"exceeds maximum object size\" } */\n+}"}]}