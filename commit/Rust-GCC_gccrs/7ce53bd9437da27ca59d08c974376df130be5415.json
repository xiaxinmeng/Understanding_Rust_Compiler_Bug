{"sha": "7ce53bd9437da27ca59d08c974376df130be5415", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2NlNTNiZDk0MzdkYTI3Y2E1OWQwOGM5NzQzNzZkZjEzMGJlNTQxNQ==", "commit": {"author": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2016-11-02T22:25:44Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2016-11-02T22:25:44Z"}, "message": "i386.c (ix86_init_libfuncs): New.\n\n\t* config/i386/i386.c (ix86_init_libfuncs): New.  Call\n\tdarwin_rename_builtins here.\n\t(ix86_expand_divmod_libfunc): New.\n\t(TARGET_INIT_LIBFUNCS): Unconditionally define to ix86_init_libfuncs.\n\t(TARGET_EXPAND_DIVMOD_LIBFUNC): Define.\n\nFrom-SVN: r241805", "tree": {"sha": "964ff287ac1b35fb485701dc8760c50744d61a31", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/964ff287ac1b35fb485701dc8760c50744d61a31"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7ce53bd9437da27ca59d08c974376df130be5415", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7ce53bd9437da27ca59d08c974376df130be5415", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7ce53bd9437da27ca59d08c974376df130be5415", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7ce53bd9437da27ca59d08c974376df130be5415/comments", "author": null, "committer": null, "parents": [{"sha": "183624479fd426c67928bb931a6474b15a8e8e95", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/183624479fd426c67928bb931a6474b15a8e8e95", "html_url": "https://github.com/Rust-GCC/gccrs/commit/183624479fd426c67928bb931a6474b15a8e8e95"}], "stats": {"total": 65, "additions": 56, "deletions": 9}, "files": [{"sha": "5a6f7bf25fb9964640aa419b5a6cfeb6eb69a1f9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ce53bd9437da27ca59d08c974376df130be5415/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ce53bd9437da27ca59d08c974376df130be5415/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7ce53bd9437da27ca59d08c974376df130be5415", "patch": "@@ -1,3 +1,11 @@\n+2016-11-02  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* config/i386/i386.c (ix86_init_libfuncs): New.  Call\n+\tdarwin_rename_builtins here.\n+\t(ix86_expand_divmod_libfunc): New.\n+\t(TARGET_INIT_LIBFUNCS): Unconditionally define to ix86_init_libfuncs.\n+\t(TARGET_EXPAND_DIVMOD_LIBFUNC): Define.\n+\n 2016-11-02  Cesar Philippidis  <cesar@codesourcery.com>\n \t    Nathan Sidwell  <nathan@acm.org>\n \n@@ -651,7 +659,7 @@\n 2016-10-28  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* doc/sourcebuild.texi (Ada Tests): Remove mention of gcc chapter.\n- \n+\n 2016-10-28  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* target.def (min_arithmetic_precision): New hook.\n@@ -698,7 +706,7 @@\n \tdivmod_simode.\n \n 2016-10-28  Eric Botcazou  <ebotcazou@adacore.com>\n-            Segher Boessenkool  <segher@kernel.crashing.org>\n+\t    Segher Boessenkool  <segher@kernel.crashing.org>\n \n \t* dojump.c (do_jump_by_parts_greater_rtx): Invert probability when\n \tswapping the arms of the branch."}, {"sha": "b42ecd34cac56b1c792b1417d4ee0b429f9a250d", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 46, "deletions": 7, "changes": 53, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ce53bd9437da27ca59d08c974376df130be5415/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ce53bd9437da27ca59d08c974376df130be5415/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=7ce53bd9437da27ca59d08c974376df130be5415", "patch": "@@ -50572,8 +50572,43 @@ ix86_addr_space_zero_address_valid (addr_space_t as)\n {\n   return as != ADDR_SPACE_GENERIC;\n }\n-#undef TARGET_ADDR_SPACE_ZERO_ADDRESS_VALID\n-#define TARGET_ADDR_SPACE_ZERO_ADDRESS_VALID ix86_addr_space_zero_address_valid\n+\n+static void\n+ix86_init_libfuncs (void)\n+{\n+  if (TARGET_64BIT)\n+    {\n+      set_optab_libfunc (sdivmod_optab, TImode, \"__divmodti4\");\n+      set_optab_libfunc (udivmod_optab, TImode, \"__udivmodti4\");\n+    }\n+  else\n+    {\n+      set_optab_libfunc (sdivmod_optab, DImode, \"__divmoddi4\");\n+      set_optab_libfunc (udivmod_optab, DImode, \"__udivmoddi4\");\n+    }\n+\n+#if TARGET_MACHO\n+  darwin_rename_builtins ();\n+#endif\n+}\n+\n+/* Generate call to __divmoddi4.  */\n+\n+static void\n+ix86_expand_divmod_libfunc (rtx libfunc, machine_mode mode,\n+\t\t\t    rtx op0, rtx op1,\n+\t\t\t    rtx *quot_p, rtx *rem_p)\n+{\n+  rtx rem = assign_386_stack_local (mode, SLOT_TEMP);\n+\n+  rtx quot = emit_library_call_value (libfunc, NULL_RTX, LCT_NORMAL,\n+\t\t\t\t    mode, 3,\n+\t\t\t\t    op0, GET_MODE (op0),\n+\t\t\t\t    op1, GET_MODE (op1),\n+\t\t\t\t    XEXP (rem, 0), Pmode);\n+  *quot_p = quot;\n+  *rem_p = rem;\n+}\n \n /* Initialize the GCC target structure.  */\n #undef TARGET_RETURN_IN_MEMORY\n@@ -50958,11 +50993,6 @@ ix86_addr_space_zero_address_valid (addr_space_t as)\n #undef TARGET_CONDITIONAL_REGISTER_USAGE\n #define TARGET_CONDITIONAL_REGISTER_USAGE ix86_conditional_register_usage\n \n-#if TARGET_MACHO\n-#undef TARGET_INIT_LIBFUNCS\n-#define TARGET_INIT_LIBFUNCS darwin_rename_builtins\n-#endif\n-\n #undef TARGET_LOOP_UNROLL_ADJUST\n #define TARGET_LOOP_UNROLL_ADJUST ix86_loop_unroll_adjust\n \n@@ -51053,6 +51083,15 @@ ix86_addr_space_zero_address_valid (addr_space_t as)\n #undef TARGET_CUSTOM_FUNCTION_DESCRIPTORS\n #define TARGET_CUSTOM_FUNCTION_DESCRIPTORS 1\n \n+#undef TARGET_ADDR_SPACE_ZERO_ADDRESS_VALID\n+#define TARGET_ADDR_SPACE_ZERO_ADDRESS_VALID ix86_addr_space_zero_address_valid\n+\n+#undef TARGET_INIT_LIBFUNCS\n+#define TARGET_INIT_LIBFUNCS ix86_init_libfuncs\n+\n+#undef TARGET_EXPAND_DIVMOD_LIBFUNC\n+#define TARGET_EXPAND_DIVMOD_LIBFUNC ix86_expand_divmod_libfunc\n+\n struct gcc_target targetm = TARGET_INITIALIZER;\n \f\n #include \"gt-i386.h\""}]}