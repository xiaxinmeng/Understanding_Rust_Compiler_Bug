{"sha": "2a93954eab0822f95212374d7677b85b659ae4a1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmE5Mzk1NGVhYjA4MjJmOTUyMTIzNzRkNzY3N2I4NWI2NTlhZTRhMQ==", "commit": {"author": {"name": "Alan Hayward", "email": "alan.hayward@arm.com", "date": "2016-08-01T14:33:23Z"}, "committer": {"name": "Alan Hayward", "email": "alahay01@gcc.gnu.org", "date": "2016-08-01T14:33:23Z"}, "message": "re PR tree-optimization/71818 (ICE in as_a, at is-a.h:192 w/ -O2 -ftree-vectorize)\n\n2016-08-01  Alan Hayward  <alan.hayward@arm.com>\n\ngcc/\n\tPR tree-optimization/71818\n\t* tree-vect-loop-manip.c (vect_can_advance_ivs_p): Don't advance IVs\n\twith non invariant evolutions\n\ntestsuite/\n\tPR tree-optimization/71818\n\t* gcc.dg/vect/pr71818.c: New\n\nFrom-SVN: r238955", "tree": {"sha": "0c23f044f302a6722804484bf9304b6a52934064", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0c23f044f302a6722804484bf9304b6a52934064"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2a93954eab0822f95212374d7677b85b659ae4a1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2a93954eab0822f95212374d7677b85b659ae4a1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2a93954eab0822f95212374d7677b85b659ae4a1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2a93954eab0822f95212374d7677b85b659ae4a1/comments", "author": {"login": "a74nh", "id": 4146708, "node_id": "MDQ6VXNlcjQxNDY3MDg=", "avatar_url": "https://avatars.githubusercontent.com/u/4146708?v=4", "gravatar_id": "", "url": "https://api.github.com/users/a74nh", "html_url": "https://github.com/a74nh", "followers_url": "https://api.github.com/users/a74nh/followers", "following_url": "https://api.github.com/users/a74nh/following{/other_user}", "gists_url": "https://api.github.com/users/a74nh/gists{/gist_id}", "starred_url": "https://api.github.com/users/a74nh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/a74nh/subscriptions", "organizations_url": "https://api.github.com/users/a74nh/orgs", "repos_url": "https://api.github.com/users/a74nh/repos", "events_url": "https://api.github.com/users/a74nh/events{/privacy}", "received_events_url": "https://api.github.com/users/a74nh/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "9839ff60d0c7756ca9e69de7e644d84643d2d7cd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9839ff60d0c7756ca9e69de7e644d84643d2d7cd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9839ff60d0c7756ca9e69de7e644d84643d2d7cd"}], "stats": {"total": 46, "additions": 45, "deletions": 1}, "files": [{"sha": "e97f2ccc630c6913232ebfaa3128fbd44f001b10", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2a93954eab0822f95212374d7677b85b659ae4a1/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2a93954eab0822f95212374d7677b85b659ae4a1/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2a93954eab0822f95212374d7677b85b659ae4a1", "patch": "@@ -1,3 +1,9 @@\n+2015-08-01  Alan Hayward <alan.hayward@arm.com>\n+\n+\tPR tree-optimization/71818\n+\t* tree-vect-loop-manip.c (vect_can_advance_ivs_p): Don't advance IVs\n+\twith non invariant evolutions\n+\n 2016-08-01  Georg-Johann Lay  <avr@gjlay.de>\n \n \tPR target/72767"}, {"sha": "8b65b3ee01fd35db2d33e7b11ccc7c56ce05d9bd", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2a93954eab0822f95212374d7677b85b659ae4a1/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2a93954eab0822f95212374d7677b85b659ae4a1/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=2a93954eab0822f95212374d7677b85b659ae4a1", "patch": "@@ -1,3 +1,8 @@\n+2015-08-01  Alan Hayward <alan.hayward@arm.com>\n+\n+\tPR tree-optimization/71818\n+\t* gcc.dg/vect/pr71818.c: New\n+\n 2016-08-01  Martin Liska  <mliska@suse.cz>\n \n \tPR tree-optimization/71857"}, {"sha": "2946551f8bb8c552565c2e79b16359ca39d13ed6", "filename": "gcc/testsuite/gcc.dg/vect/pr71818.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2a93954eab0822f95212374d7677b85b659ae4a1/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr71818.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2a93954eab0822f95212374d7677b85b659ae4a1/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr71818.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr71818.c?ref=2a93954eab0822f95212374d7677b85b659ae4a1", "patch": "@@ -0,0 +1,16 @@\n+/* { dg-do compile } */\n+\n+char a;\n+short b;\n+int c, d;\n+void fn1() {\n+  char e = 75, g;\n+  unsigned char *f = &e;\n+  a = 21;\n+  for (; a <= 48; a++) {\n+    for (; e <= 6;)\n+      ;\n+    g -= e -= b || g <= c;\n+  }\n+  d = *f;\n+}"}, {"sha": "ec863b4af1ffbacf98c99158fd2c0901e42bcb0d", "filename": "gcc/tree-vect-loop-manip.c", "status": "modified", "additions": 18, "deletions": 1, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2a93954eab0822f95212374d7677b85b659ae4a1/gcc%2Ftree-vect-loop-manip.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2a93954eab0822f95212374d7677b85b659ae4a1/gcc%2Ftree-vect-loop-manip.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-loop-manip.c?ref=2a93954eab0822f95212374d7677b85b659ae4a1", "patch": "@@ -40,6 +40,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"cfgloop.h\"\n #include \"tree-scalar-evolution.h\"\n #include \"tree-vectorizer.h\"\n+#include \"tree-ssa-loop-ivopts.h\"\n \n /*************************************************************************\n   Simple Loop Peeling Utilities\n@@ -1591,11 +1592,27 @@ vect_can_advance_ivs_p (loop_vec_info loop_vinfo)\n \t  return false;\n         }\n \n+      /* FORNOW: We do not transform initial conditions of IVs\n+\t which evolution functions are not invariants in the loop.  */\n+\n+      if (!expr_invariant_in_loop_p (loop, evolution_part))\n+\t{\n+\t  if (dump_enabled_p ())\n+\t    dump_printf_loc (MSG_MISSED_OPTIMIZATION, vect_location,\n+\t\t\t     \"evolution not invariant in loop.\\n\");\n+\t  return false;\n+\t}\n+\n       /* FORNOW: We do not transform initial conditions of IVs\n \t which evolution functions are a polynomial of degree >= 2.  */\n \n       if (tree_is_chrec (evolution_part))\n-\treturn false;\n+\t{\n+\t  if (dump_enabled_p ())\n+\t    dump_printf_loc (MSG_MISSED_OPTIMIZATION, vect_location,\n+\t\t\t     \"evolution is chrec.\\n\");\n+\t  return false;\n+\t}\n     }\n \n   return true;"}]}