{"sha": "161eb4fc98a6c96ad2b4cf6ac40dac12a87db468", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTYxZWI0ZmM5OGE2Yzk2YWQyYjRjZjZhYzQwZGFjMTJhODdkYjQ2OA==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2002-04-02T08:14:57Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2002-04-02T08:14:57Z"}, "message": "* config/m68k/m68k.md (dbcc peepholes): Match four forms of dbra.\n\nFrom-SVN: r51736", "tree": {"sha": "2389ba6f9e306c92c79373dbc6454c807d6aca5f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2389ba6f9e306c92c79373dbc6454c807d6aca5f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/161eb4fc98a6c96ad2b4cf6ac40dac12a87db468", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/161eb4fc98a6c96ad2b4cf6ac40dac12a87db468", "html_url": "https://github.com/Rust-GCC/gccrs/commit/161eb4fc98a6c96ad2b4cf6ac40dac12a87db468", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/161eb4fc98a6c96ad2b4cf6ac40dac12a87db468/comments", "author": null, "committer": null, "parents": [{"sha": "501e321e0d7866c59b729e795d02d2ba43467ab4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/501e321e0d7866c59b729e795d02d2ba43467ab4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/501e321e0d7866c59b729e795d02d2ba43467ab4"}], "stats": {"total": 56, "additions": 54, "deletions": 2}, "files": [{"sha": "c1eeba49bbd1457b9d8fe284f91ca417dc96895a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/161eb4fc98a6c96ad2b4cf6ac40dac12a87db468/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/161eb4fc98a6c96ad2b4cf6ac40dac12a87db468/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=161eb4fc98a6c96ad2b4cf6ac40dac12a87db468", "patch": "@@ -1,3 +1,8 @@\n+2002-04-02  Richard Henderson  <rth@redhat.com>\n+\n+\tPR opt/420\n+\t* config/m68k/m68k.md (dbcc peepholes): Match four forms of dbra.\n+\n 2002-04-01  Richard Henderson  <rth@redhat.com>\n \n \tPR target/1538"}, {"sha": "35ca2baae55d288f240786e3f3b1f538d0832f5e", "filename": "gcc/config/m68k/m68k.md", "status": "modified", "additions": 49, "deletions": 2, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/161eb4fc98a6c96ad2b4cf6ac40dac12a87db468/gcc%2Fconfig%2Fm68k%2Fm68k.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/161eb4fc98a6c96ad2b4cf6ac40dac12a87db468/gcc%2Fconfig%2Fm68k%2Fm68k.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fm68k.md?ref=161eb4fc98a6c96ad2b4cf6ac40dac12a87db468", "patch": "@@ -7653,6 +7653,53 @@\n ;;\n ;; Which moves the jCC condition outside the inner loop for free.\n ;;\n+\n+(define_peephole\n+  [(set (pc) (if_then_else (match_operator 3 \"valid_dbcc_comparison_p\"\n+                             [(cc0) (const_int 0)])\n+                           (label_ref (match_operand 2 \"\" \"\"))\n+                           (pc)))\n+   (parallel\n+    [(set (pc)\n+\t  (if_then_else\n+\t    (ne (match_operand:HI 0 \"register_operand\" \"\")\n+\t        (const_int 0))\n+\t    (label_ref (match_operand 1 \"\" \"\"))\n+\t    (pc)))\n+     (set (match_dup 0)\n+\t  (plus:HI (match_dup 0)\n+\t\t   (const_int -1)))])]\n+  \"!TARGET_5200 && DATA_REG_P (operands[0]) && ! flags_in_68881 ()\"\n+  \"*\n+{\n+  CC_STATUS_INIT;\n+  output_dbcc_and_branch (operands);\n+  return \\\"\\\";\n+}\")\n+\n+(define_peephole\n+  [(set (pc) (if_then_else (match_operator 3 \"valid_dbcc_comparison_p\"\n+                             [(cc0) (const_int 0)])\n+                           (label_ref (match_operand 2 \"\" \"\"))\n+                           (pc)))\n+   (parallel\n+    [(set (pc)\n+\t  (if_then_else\n+\t    (ne (match_operand:SI 0 \"register_operand\" \"\")\n+\t        (const_int 0))\n+\t    (label_ref (match_operand 1 \"\" \"\"))\n+\t    (pc)))\n+     (set (match_dup 0)\n+\t  (plus:SI (match_dup 0)\n+\t\t   (const_int -1)))])]\n+  \"!TARGET_5200 && DATA_REG_P (operands[0]) && ! flags_in_68881 ()\"\n+  \"*\n+{\n+  CC_STATUS_INIT;\n+  output_dbcc_and_branch (operands);\n+  return \\\"\\\";\n+}\")\n+\n (define_peephole\n   [(set (pc) (if_then_else (match_operator 3 \"valid_dbcc_comparison_p\"\n                              [(cc0) (const_int 0)])\n@@ -7661,7 +7708,7 @@\n    (parallel\n     [(set (pc)\n \t  (if_then_else\n-\t    (ge (plus:HI (match_operand:HI 0 \"register_operand\" \"+d\")\n+\t    (ge (plus:HI (match_operand:HI 0 \"register_operand\" \"\")\n \t\t         (const_int -1))\n \t        (const_int 0))\n \t    (label_ref (match_operand 1 \"\" \"\"))\n@@ -7685,7 +7732,7 @@\n    (parallel\n     [(set (pc)\n \t  (if_then_else\n-\t    (ge (plus:SI (match_operand:SI 0 \"register_operand\" \"+d\")\n+\t    (ge (plus:SI (match_operand:SI 0 \"register_operand\" \"\")\n \t\t         (const_int -1))\n \t        (const_int 0))\n \t    (label_ref (match_operand 1 \"\" \"\"))"}]}