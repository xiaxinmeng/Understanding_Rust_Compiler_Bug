{"sha": "161a690d21044f5211ad2b55ae6b06f91bbd9106", "node_id": "C_kwDOANBUbNoAKDE2MWE2OTBkMjEwNDRmNTIxMWFkMmI1NWFlNmIwNmY5MWJiZDkxMDY", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2021-10-26T09:25:44Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-10-26T09:25:44Z"}, "message": "Merge #770\n\n770: TraitImpl: track the polarity of the impl r=philberty a=mathstuf\n\nThe internal representation now tracks whether a trait impl is a\r\npositive or negative impl.\r\n\r\nSigned-off-by: Ben Boeckel <mathstuf@gmail.com>\r\n\r\nFixes: #732 \r\n\n\nCo-authored-by: Ben Boeckel <mathstuf@gmail.com>", "tree": {"sha": "455255c4de18d46bda33d4e223cb5f17d3689067", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/455255c4de18d46bda33d4e223cb5f17d3689067"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/161a690d21044f5211ad2b55ae6b06f91bbd9106", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhd8mYCRBK7hj4Ov3rIwAATnEIAKQOHmkw/2i6XUUgoilWZZCF\nddptpz/h7l41NzzF0I1RRpRgNE0gh8s5/GMnkksTsWomFJtAbXVqZ5AYF8R7L7Ji\n2kudUBcpGdIE4+FIhsVjAmg2jov++oqPrLb4ptAl5ha4cqR2aAHMNL+LDnFgUBwy\nPACXlA5gBqejUq5wea0pYmkB0i9mp76nfa5+xrNi7LgzJzMUWvLXWKLUP/V3aMAA\nYy3xzujkqVVtnKV5mzU+d/eaAxph9DmFSL3nleBS1Ov4LAte+3pbtI4y2Z2Qhg5b\n9NoDRg+TOogtd3xZIjtOBIp+OEf2p2n8takXRUFptSORGoPqX4/dNHr26GInG0U=\n=1SRr\n-----END PGP SIGNATURE-----\n", "payload": "tree 455255c4de18d46bda33d4e223cb5f17d3689067\nparent d4bfbb0b069024afaf582b7218eb6943dd8e142b\nparent fbc7f0e51b11a9a13ffc7eea93d88b1356cd60f8\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1635240344 +0000\ncommitter GitHub <noreply@github.com> 1635240344 +0000\n\nMerge #770\n\n770: TraitImpl: track the polarity of the impl r=philberty a=mathstuf\n\nThe internal representation now tracks whether a trait impl is a\r\npositive or negative impl.\r\n\r\nSigned-off-by: Ben Boeckel <mathstuf@gmail.com>\r\n\r\nFixes: #732 \r\n\n\nCo-authored-by: Ben Boeckel <mathstuf@gmail.com>\n"}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/161a690d21044f5211ad2b55ae6b06f91bbd9106", "html_url": "https://github.com/Rust-GCC/gccrs/commit/161a690d21044f5211ad2b55ae6b06f91bbd9106", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/161a690d21044f5211ad2b55ae6b06f91bbd9106/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d4bfbb0b069024afaf582b7218eb6943dd8e142b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d4bfbb0b069024afaf582b7218eb6943dd8e142b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d4bfbb0b069024afaf582b7218eb6943dd8e142b"}, {"sha": "fbc7f0e51b11a9a13ffc7eea93d88b1356cd60f8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fbc7f0e51b11a9a13ffc7eea93d88b1356cd60f8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fbc7f0e51b11a9a13ffc7eea93d88b1356cd60f8"}], "stats": {"total": 49, "additions": 29, "deletions": 20}, "files": [{"sha": "9372e948c99f2025905d862e5d54f9475c5613ee", "filename": "gcc/rust/hir/rust-ast-lower-item.h", "status": "modified", "additions": 13, "deletions": 15, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/161a690d21044f5211ad2b55ae6b06f91bbd9106/gcc%2Frust%2Fhir%2Frust-ast-lower-item.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/161a690d21044f5211ad2b55ae6b06f91bbd9106/gcc%2Frust%2Fhir%2Frust-ast-lower-item.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fhir%2Frust-ast-lower-item.h?ref=161a690d21044f5211ad2b55ae6b06f91bbd9106", "patch": "@@ -520,13 +520,12 @@ class ASTLoweringItem : public ASTLoweringBase\n \timpl_item_ids.push_back (lowered->get_impl_mappings ().get_hirid ());\n       }\n \n-    HIR::ImplBlock *hir_impl_block\n-      = new HIR::ImplBlock (mapping, std::move (impl_items),\n-\t\t\t    std::move (generic_params),\n-\t\t\t    std::unique_ptr<HIR::Type> (impl_type), nullptr,\n-\t\t\t    where_clause, vis, impl_block.get_inner_attrs (),\n-\t\t\t    impl_block.get_outer_attrs (),\n-\t\t\t    impl_block.get_locus ());\n+    Polarity polarity = Positive;\n+    HIR::ImplBlock *hir_impl_block = new HIR::ImplBlock (\n+      mapping, std::move (impl_items), std::move (generic_params),\n+      std::unique_ptr<HIR::Type> (impl_type), nullptr, where_clause, polarity,\n+      vis, impl_block.get_inner_attrs (), impl_block.get_outer_attrs (),\n+      impl_block.get_locus ());\n     translated = hir_impl_block;\n \n     mappings->insert_defid_mapping (mapping.get_defid (), translated);\n@@ -689,14 +688,13 @@ class ASTLoweringItem : public ASTLoweringBase\n \timpl_item_ids.push_back (lowered->get_impl_mappings ().get_hirid ());\n       }\n \n-    HIR::ImplBlock *hir_impl_block\n-      = new HIR::ImplBlock (mapping, std::move (impl_items),\n-\t\t\t    std::move (generic_params),\n-\t\t\t    std::unique_ptr<HIR::Type> (impl_type),\n-\t\t\t    std::unique_ptr<HIR::TypePath> (trait_ref),\n-\t\t\t    where_clause, vis, impl_block.get_inner_attrs (),\n-\t\t\t    impl_block.get_outer_attrs (),\n-\t\t\t    impl_block.get_locus ());\n+    Polarity polarity = impl_block.is_exclam () ? Positive : Negative;\n+    HIR::ImplBlock *hir_impl_block = new HIR::ImplBlock (\n+      mapping, std::move (impl_items), std::move (generic_params),\n+      std::unique_ptr<HIR::Type> (impl_type),\n+      std::unique_ptr<HIR::TypePath> (trait_ref), where_clause, polarity, vis,\n+      impl_block.get_inner_attrs (), impl_block.get_outer_attrs (),\n+      impl_block.get_locus ());\n     translated = hir_impl_block;\n \n     mappings->insert_defid_mapping (mapping.get_defid (), translated);"}, {"sha": "ab9eab6bb3e8225b5aaea6b31c982b19bc4ed78c", "filename": "gcc/rust/hir/tree/rust-hir-item.h", "status": "modified", "additions": 10, "deletions": 5, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/161a690d21044f5211ad2b55ae6b06f91bbd9106/gcc%2Frust%2Fhir%2Ftree%2Frust-hir-item.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/161a690d21044f5211ad2b55ae6b06f91bbd9106/gcc%2Frust%2Fhir%2Ftree%2Frust-hir-item.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fhir%2Ftree%2Frust-hir-item.h?ref=161a690d21044f5211ad2b55ae6b06f91bbd9106", "patch": "@@ -2562,6 +2562,7 @@ class ImplBlock : public VisItem\n   std::unique_ptr<Type> impl_type;\n   std::unique_ptr<TypePath> trait_ref;\n   WhereClause where_clause;\n+  Polarity polarity;\n   AST::AttrVec inner_attrs;\n   Location locus;\n   std::vector<std::unique_ptr<ImplItem>> impl_items;\n@@ -2572,20 +2573,20 @@ class ImplBlock : public VisItem\n \t     std::vector<std::unique_ptr<GenericParam>> generic_params,\n \t     std::unique_ptr<Type> impl_type,\n \t     std::unique_ptr<TypePath> trait_ref, WhereClause where_clause,\n-\t     Visibility vis, AST::AttrVec inner_attrs, AST::AttrVec outer_attrs,\n-\t     Location locus)\n+\t     Polarity polarity, Visibility vis, AST::AttrVec inner_attrs,\n+\t     AST::AttrVec outer_attrs, Location locus)\n     : VisItem (std::move (mappings), std::move (vis), std::move (outer_attrs)),\n       generic_params (std::move (generic_params)),\n       impl_type (std::move (impl_type)), trait_ref (std::move (trait_ref)),\n-      where_clause (std::move (where_clause)),\n+      where_clause (std::move (where_clause)), polarity (polarity),\n       inner_attrs (std::move (inner_attrs)), locus (locus),\n       impl_items (std::move (impl_items))\n   {}\n \n   ImplBlock (ImplBlock const &other)\n     : VisItem (other), impl_type (other.impl_type->clone_type ()),\n-      where_clause (other.where_clause), inner_attrs (other.inner_attrs),\n-      locus (other.locus)\n+      where_clause (other.where_clause), polarity (other.polarity),\n+      inner_attrs (other.inner_attrs), locus (other.locus)\n   {\n     generic_params.reserve (other.generic_params.size ());\n     for (const auto &e : other.generic_params)\n@@ -2601,6 +2602,7 @@ class ImplBlock : public VisItem\n     VisItem::operator= (other);\n     impl_type = other.impl_type->clone_type ();\n     where_clause = other.where_clause;\n+    polarity = other.polarity;\n     inner_attrs = other.inner_attrs;\n     locus = other.locus;\n \n@@ -2641,6 +2643,9 @@ class ImplBlock : public VisItem\n   // Returns whether impl has where clause.\n   bool has_where_clause () const { return !where_clause.is_empty (); }\n \n+  // Returns the polarity of the impl.\n+  Polarity get_polarity () const { return polarity; }\n+\n   // Returns whether impl has inner attributes.\n   bool has_inner_attrs () const { return !inner_attrs.empty (); }\n "}, {"sha": "6d511ba62ac4e61d46603b39c2729649522f0fa2", "filename": "gcc/rust/util/rust-common.h", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/161a690d21044f5211ad2b55ae6b06f91bbd9106/gcc%2Frust%2Futil%2Frust-common.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/161a690d21044f5211ad2b55ae6b06f91bbd9106/gcc%2Frust%2Futil%2Frust-common.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Futil%2Frust-common.h?ref=161a690d21044f5211ad2b55ae6b06f91bbd9106", "patch": "@@ -35,6 +35,12 @@ enum Unsafety\n   Normal\n };\n \n+enum Polarity\n+{\n+  Positive,\n+  Negative\n+};\n+\n } // namespace Rust\n \n #endif // RUST_COMMON"}]}