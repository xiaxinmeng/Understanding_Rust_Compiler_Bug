{"sha": "99b41d521c30ba7e44683fa6adcd657122a92c34", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTliNDFkNTIxYzMwYmE3ZTQ0NjgzZmE2YWRjZDY1NzEyMmE5MmMzNA==", "commit": {"author": {"name": "Mikael Morin", "email": "mikael@gcc.gnu.org", "date": "2010-10-06T14:52:02Z"}, "committer": {"name": "Mikael Morin", "email": "mikael@gcc.gnu.org", "date": "2010-10-06T14:52:02Z"}, "message": "resolve.c (check_typebound_baseobject): Free local expr before returning.\n\n2010-10-06  Mikael Morin  <mikael@gcc.gnu.org>\n\n\t* resolve.c (check_typebound_baseobject): Free local expr before\n\treturning.\n\nFrom-SVN: r165034", "tree": {"sha": "5c8f6fffc802b0807ba3dde4f32122027c01cad1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5c8f6fffc802b0807ba3dde4f32122027c01cad1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/99b41d521c30ba7e44683fa6adcd657122a92c34", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/99b41d521c30ba7e44683fa6adcd657122a92c34", "html_url": "https://github.com/Rust-GCC/gccrs/commit/99b41d521c30ba7e44683fa6adcd657122a92c34", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/99b41d521c30ba7e44683fa6adcd657122a92c34/comments", "author": null, "committer": null, "parents": [{"sha": "3bf9ef1bc4eb7b28998569beecc1c1c750cf5b7a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3bf9ef1bc4eb7b28998569beecc1c1c750cf5b7a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3bf9ef1bc4eb7b28998569beecc1c1c750cf5b7a"}], "stats": {"total": 18, "additions": 14, "deletions": 4}, "files": [{"sha": "6d729de660cd2d076074d34bf55481116a542828", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/99b41d521c30ba7e44683fa6adcd657122a92c34/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/99b41d521c30ba7e44683fa6adcd657122a92c34/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=99b41d521c30ba7e44683fa6adcd657122a92c34", "patch": "@@ -1,3 +1,8 @@\n+2010-10-06  Mikael Morin  <mikael@gcc.gnu.org>\n+\n+\t* resolve.c (check_typebound_baseobject): Free local expr before\n+\treturning.\n+\n 2010-10-06  Mikael Morin  <mikael@gcc.gnu.org>\n \n \t* primary.c (gfc_match_structure_constructor): Invert the assert logic."}, {"sha": "203f294200ae0e482f2fa3871a66620201ab4a07", "filename": "gcc/fortran/resolve.c", "status": "modified", "additions": 9, "deletions": 4, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/99b41d521c30ba7e44683fa6adcd657122a92c34/gcc%2Ffortran%2Fresolve.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/99b41d521c30ba7e44683fa6adcd657122a92c34/gcc%2Ffortran%2Fresolve.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fresolve.c?ref=99b41d521c30ba7e44683fa6adcd657122a92c34", "patch": "@@ -5404,6 +5404,7 @@ static gfc_try\n check_typebound_baseobject (gfc_expr* e)\n {\n   gfc_expr* base;\n+  gfc_try return_value = FAILURE;\n \n   base = extract_compcall_passed_object (e);\n   if (!base)\n@@ -5415,26 +5416,30 @@ check_typebound_baseobject (gfc_expr* e)\n     {\n       gfc_error (\"Base object for type-bound procedure call at %L is of\"\n \t\t \" ABSTRACT type '%s'\", &e->where, base->ts.u.derived->name);\n-      return FAILURE;\n+      goto cleanup;\n     }\n \n   /* If the procedure called is NOPASS, the base object must be scalar.  */\n   if (e->value.compcall.tbp->nopass && base->rank > 0)\n     {\n       gfc_error (\"Base object for NOPASS type-bound procedure call at %L must\"\n \t\t \" be scalar\", &e->where);\n-      return FAILURE;\n+      goto cleanup;\n     }\n \n   /* FIXME: Remove once PR 41177 (this problem) is fixed completely.  */\n   if (base->rank > 0)\n     {\n       gfc_error (\"Non-scalar base object at %L currently not implemented\",\n \t\t &e->where);\n-      return FAILURE;\n+      goto cleanup;\n     }\n \n-  return SUCCESS;\n+  return_value = SUCCESS;\n+\n+cleanup:\n+  gfc_free_expr (base);\n+  return return_value;\n }\n \n "}]}