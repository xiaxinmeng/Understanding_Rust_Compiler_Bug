{"sha": "08e64088dac74db3f526e2d764096968635efc1a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDhlNjQwODhkYWM3NGRiM2Y1MjZlMmQ3NjQwOTY5Njg2MzVlZmMxYQ==", "commit": {"author": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2008-05-13T21:33:40Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2008-05-13T21:33:40Z"}, "message": "re PR target/36222 (x86 fails to optimize out __v4si -> __m128i move)\n\n        PR target/36222\n        * config/i386/i386.c (ix86_expand_vector_init_general): Rearrange op0\n        and op1 expansion before vector concat to have less live pseudos.\n\ntestsuite/ChangeLog:\n\n        PR target/36222\n        * gcc.target/i386/pr36222-1.c: New test.\n\nFrom-SVN: r135275", "tree": {"sha": "faf20623d7f26db32790483abc61907577122f6a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/faf20623d7f26db32790483abc61907577122f6a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/08e64088dac74db3f526e2d764096968635efc1a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/08e64088dac74db3f526e2d764096968635efc1a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/08e64088dac74db3f526e2d764096968635efc1a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/08e64088dac74db3f526e2d764096968635efc1a/comments", "author": null, "committer": null, "parents": [{"sha": "af7ae5d1075e9e7f2eddd0a7b113ebca3429b9e4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/af7ae5d1075e9e7f2eddd0a7b113ebca3429b9e4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/af7ae5d1075e9e7f2eddd0a7b113ebca3429b9e4"}], "stats": {"total": 53, "additions": 36, "deletions": 17}, "files": [{"sha": "17a46138693382e3c238dd1d5b43836dee38041d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 13, "deletions": 11, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08e64088dac74db3f526e2d764096968635efc1a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08e64088dac74db3f526e2d764096968635efc1a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=08e64088dac74db3f526e2d764096968635efc1a", "patch": "@@ -1,3 +1,9 @@\n+2008-05-13  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\tPR target/36222\n+\t* config/i386/i386.c (ix86_expand_vector_init_general): Rearrange op0\n+\tand op1 expansion before vector concat to have less live pseudos.\n+\n 2008-05-13  H.J. Lu  <hongjiu.lu@intel.com>\n \n \t* config/i386/i386.c (ix86_expand_vector_init_one_nonzero): Use\n@@ -10,23 +16,19 @@\n \n \t* tree.h (init_phinodes, fini_phinodes, release_phi_node,\n \tphinodes_print_statistics, init_ssanames, fini_ssanames,\n-\tmake_ssa_name, duplicate_ssa_name,\n-\tduplicate_ssa_name_ptr_info, release_ssa_name,\n-\trelease_defs, replace_ssa_name_symbol,\n+\tmake_ssa_name, duplicate_ssa_name, duplicate_ssa_name_ptr_info,\n+\trelease_ssa_name, release_defs, replace_ssa_name_symbol,\n \tssanames_print_statistics): Move ...\n \t* tree-flow.h: ... here.\n-\t* tree-ssanames.c (init_ssanames): Add arguments FN and\n-\tSIZE.  Use FN instead of cfun.\n+\t* tree-ssanames.c (init_ssanames): Add arguments FN and SIZE.\n+\tUse FN instead of cfun.\n \t(make_ssa_name_fn): Rename from make_ssa_name.\n-\t(pass_release_ssa_names): Add TODO_dump_func to finish\n-\tflags.\n+\t(pass_release_ssa_names): Add TODO_dump_func to finish flags.\n \t* tree-flow-inline.h (make_ssa_name): Move from\n-\ttree-ssanames.c.  Convert to static inline.  Call\n-\tmake_ssa_name_fn.\n+\ttree-ssanames.c.  Convert to static inline.  Call make_ssa_name_fn.\n \t* omp-low.c (expand_omp_parallel):\n \t* tree-flow-inline.h (redirect_edge_var_map_result):\n-\t* tree-ssa.c (init_tree_ssa): Add argument FN.  Use it\n-\tinstead of cfun.\n+\t* tree-ssa.c (init_tree_ssa): Add argument FN.  Use it instead of cfun.\n \tUpdate all users.\n \n 2008-05-13  Tom Tromey  <tromey@redhat.com>"}, {"sha": "945cd1b844537cf528ac3b2a64afb4ea13dbf039", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08e64088dac74db3f526e2d764096968635efc1a/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08e64088dac74db3f526e2d764096968635efc1a/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=08e64088dac74db3f526e2d764096968635efc1a", "patch": "@@ -23887,14 +23887,14 @@ ix86_expand_vector_init_general (bool mmx_ok, enum machine_mode mode,\n \t/* For V4SF and V4SI, we implement a concat of two V2 vectors.\n \t   Recurse to load the two halves.  */\n \n-\top0 = gen_reg_rtx (half_mode);\n-\tv = gen_rtvec (2, XVECEXP (vals, 0, 0), XVECEXP (vals, 0, 1));\n-\tix86_expand_vector_init (false, op0, gen_rtx_PARALLEL (half_mode, v));\n-\n \top1 = gen_reg_rtx (half_mode);\n \tv = gen_rtvec (2, XVECEXP (vals, 0, 2), XVECEXP (vals, 0, 3));\n \tix86_expand_vector_init (false, op1, gen_rtx_PARALLEL (half_mode, v));\n \n+\top0 = gen_reg_rtx (half_mode);\n+\tv = gen_rtvec (2, XVECEXP (vals, 0, 0), XVECEXP (vals, 0, 1));\n+\tix86_expand_vector_init (false, op0, gen_rtx_PARALLEL (half_mode, v));\n+\n \tuse_vec_concat = true;\n       }\n       break;\n@@ -23911,10 +23911,10 @@ ix86_expand_vector_init_general (bool mmx_ok, enum machine_mode mode,\n \n   if (use_vec_concat)\n     {\n-      if (!register_operand (op0, half_mode))\n-\top0 = force_reg (half_mode, op0);\n       if (!register_operand (op1, half_mode))\n \top1 = force_reg (half_mode, op1);\n+      if (!register_operand (op0, half_mode))\n+\top0 = force_reg (half_mode, op0);\n \n       emit_insn (gen_rtx_SET (VOIDmode, target,\n \t\t\t      gen_rtx_VEC_CONCAT (mode, op0, op1)));"}, {"sha": "699c4169f38c9e570a9a4c1ad95bc3aaf29ba888", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08e64088dac74db3f526e2d764096968635efc1a/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08e64088dac74db3f526e2d764096968635efc1a/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=08e64088dac74db3f526e2d764096968635efc1a", "patch": "@@ -1,3 +1,8 @@\n+2008-05-13  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\tPR target/36222\n+\t* gcc.target/i386/pr36222-1.c: New test.\n+\n 2008-05-13  H.J. Lu  <hongjiu.lu@intel.com>\n \n \t* gcc.target/i386/sse-init-v4hi-1.c: New."}, {"sha": "2d4c5b9b76c6f6bce6333eba863cdaa90c07a74d", "filename": "gcc/testsuite/gcc.target/i386/pr36222-1.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08e64088dac74db3f526e2d764096968635efc1a/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr36222-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08e64088dac74db3f526e2d764096968635efc1a/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr36222-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr36222-1.c?ref=08e64088dac74db3f526e2d764096968635efc1a", "patch": "@@ -0,0 +1,12 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -msse2\" } */\n+\n+typedef long long __m128i __attribute__ ((__vector_size__ (16), __may_alias__));\n+typedef int __v4si __attribute__ ((__vector_size__ (16)));\n+\n+__m128i _mm_set_epi32 (int __q3, int __q2, int __q1, int __q0)\n+{\n+  return (__m128i)(__v4si){ __q0, __q1, __q2, __q3 };\n+}\n+\n+/* { dg-final { scan-assembler-not \"movdqa\" } } */"}]}