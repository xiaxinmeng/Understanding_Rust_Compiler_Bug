{"sha": "ad6b1795b1171d94d24abb31dfe515d311531794", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWQ2YjE3OTViMTE3MWQ5NGQyNGFiYjMxZGZlNTE1ZDMxMTUzMTc5NA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2002-01-17T12:54:36Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2002-01-17T12:54:36Z"}, "message": "error.c (dump_type_suffix): Print the exception specs before recursing.\n\n        * error.c (dump_type_suffix): Print the exception specs before\n        recursing.\n        (dump_function_decl): Here, too.\n\n        * cp-tree.h (TMPL_PARMS_DEPTH): Cast to signed HOST_WIDE_INT.\n\nFrom-SVN: r48947", "tree": {"sha": "072dc5a084047356bdefea40c77a65bc8664e55c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/072dc5a084047356bdefea40c77a65bc8664e55c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ad6b1795b1171d94d24abb31dfe515d311531794", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ad6b1795b1171d94d24abb31dfe515d311531794", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ad6b1795b1171d94d24abb31dfe515d311531794", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ad6b1795b1171d94d24abb31dfe515d311531794/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d0e8287098058789159a24f649d61bd88a790dd4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d0e8287098058789159a24f649d61bd88a790dd4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d0e8287098058789159a24f649d61bd88a790dd4"}], "stats": {"total": 23, "additions": 18, "deletions": 5}, "files": [{"sha": "793af6d5367ef697c22f9329b1e2d49c5800bddd", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad6b1795b1171d94d24abb31dfe515d311531794/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad6b1795b1171d94d24abb31dfe515d311531794/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=ad6b1795b1171d94d24abb31dfe515d311531794", "patch": "@@ -1,3 +1,11 @@\n+2002-01-16  Jason Merrill  <jason@redhat.com>\n+\n+\t* error.c (dump_type_suffix): Print the exception specs before\n+\trecursing.\n+\t(dump_function_decl): Here, too.\n+\n+\t* cp-tree.h (TMPL_PARMS_DEPTH): Cast to signed HOST_WIDE_INT.\n+\n 2002-01-10  Ira Ruben\t<ira@apple.com>\n \n \t* decl.c (start_method): Handle attrlist."}, {"sha": "88b4cdbfd5065add19066313d8d1f073182eeb39", "filename": "gcc/cp/cp-tree.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad6b1795b1171d94d24abb31dfe515d311531794/gcc%2Fcp%2Fcp-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad6b1795b1171d94d24abb31dfe515d311531794/gcc%2Fcp%2Fcp-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.h?ref=ad6b1795b1171d94d24abb31dfe515d311531794", "patch": "@@ -2286,7 +2286,7 @@ struct lang_decl\n \n /* The number of levels of template parameters given by NODE.  */\n #define TMPL_PARMS_DEPTH(NODE) \\\n-  (TREE_INT_CST_LOW (TREE_PURPOSE (NODE)))\n+  ((HOST_WIDE_INT) TREE_INT_CST_LOW (TREE_PURPOSE (NODE)))\n \n /* The TEMPLATE_DECL instantiated or specialized by NODE.  This\n    TEMPLATE_DECL will be the immediate parent, not the most general"}, {"sha": "de6221507ebf0b52545f46a7c590330f7b6cc7e7", "filename": "gcc/cp/error.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad6b1795b1171d94d24abb31dfe515d311531794/gcc%2Fcp%2Ferror.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad6b1795b1171d94d24abb31dfe515d311531794/gcc%2Fcp%2Ferror.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ferror.c?ref=ad6b1795b1171d94d24abb31dfe515d311531794", "patch": "@@ -737,8 +737,8 @@ dump_type_suffix (t, flags)\n \tif (TREE_CODE (t) == METHOD_TYPE)\n \t  dump_qualifiers\n \t    (TREE_TYPE (TREE_VALUE (TYPE_ARG_TYPES (t))), before);\n-\tdump_type_suffix (TREE_TYPE (t), flags);\n \tdump_exception_spec (TYPE_RAISES_EXCEPTIONS (t), flags);\n+\tdump_type_suffix (TREE_TYPE (t), flags);\n \tbreak;\n       }\n \n@@ -1141,15 +1141,15 @@ dump_function_decl (t, flags)\n     {\n       dump_parameters (parmtypes, flags);\n \n-      if (show_return)\n-\tdump_type_suffix (TREE_TYPE (fntype), flags);\n-\n       if (TREE_CODE (fntype) == METHOD_TYPE)\n \tdump_qualifiers (TREE_TYPE (TREE_VALUE (TYPE_ARG_TYPES (fntype))),\n \t\t\t before);\n \n       if (flags & TFF_EXCEPTION_SPECIFICATION)\n \tdump_exception_spec (TYPE_RAISES_EXCEPTIONS (fntype), flags);\n+\n+      if (show_return)\n+\tdump_type_suffix (TREE_TYPE (fntype), flags);\n     }\n \n   /* If T is a template instantiation, dump the parameter binding.  */"}, {"sha": "bd5d70109457f3c0f7d24a75c203966518c6182b", "filename": "gcc/testsuite/g++.dg/other/error3.C", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad6b1795b1171d94d24abb31dfe515d311531794/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Ferror3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad6b1795b1171d94d24abb31dfe515d311531794/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Ferror3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Ferror3.C?ref=ad6b1795b1171d94d24abb31dfe515d311531794", "patch": "@@ -0,0 +1,5 @@\n+// Test for proper error message formatting; the throw() should go inside\n+// the parens, as below.\n+\n+void (*g() throw())();\t\t// { dg-error \"g\\\\(\\\\) throw\" \"\" }\n+void (*g())();\t\t\t// { dg-error \"\" \"\" }"}]}