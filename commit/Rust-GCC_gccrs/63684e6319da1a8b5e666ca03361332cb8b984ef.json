{"sha": "63684e6319da1a8b5e666ca03361332cb8b984ef", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjM2ODRlNjMxOWRhMWE4YjVlNjY2Y2EwMzM2MTMzMmNiOGI5ODRlZg==", "commit": {"author": {"name": "Elena Zannoni", "email": "ezannoni@kwikemart.cygnus.com", "date": "1998-12-07T23:32:23Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1998-12-07T23:32:23Z"}, "message": "demangle.h: (DMGL_EDG): new macro for Kuck and Associates\n\n        * demangle.h: (DMGL_EDG): new macro for Kuck and Associates\n        (DMGL_STYLE_MASK): modify to include Kuck and Assoc style\n        (demangling_styles): add new edg_demangling style\n        (EDG_DEMANGLING_STYLE_STRING): new macro\n        (EDG_DEMANGLING): new macro\n        * demangle.h (DMGL_HP): new macro, for HP/aCC compiler.\n        (DMGL_STYLE_MASK): modify to include new HP's style.\n        (demangling_styles): add new hp_demangling value.\n        (HP_DEMANGLING_STYLE_STRING): new macro.\n        (ARM_DEMANGLING): coerce to int.\n        (HP_DEMANGLING): new macro.\n\nFrom-SVN: r24173", "tree": {"sha": "0113d6f3a2dea8216c29dc11d202dc118dbe2bf3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0113d6f3a2dea8216c29dc11d202dc118dbe2bf3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/63684e6319da1a8b5e666ca03361332cb8b984ef", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/63684e6319da1a8b5e666ca03361332cb8b984ef", "html_url": "https://github.com/Rust-GCC/gccrs/commit/63684e6319da1a8b5e666ca03361332cb8b984ef", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/63684e6319da1a8b5e666ca03361332cb8b984ef/comments", "author": null, "committer": null, "parents": [{"sha": "11fa8909c85bed080170156ffef07bbeb53e7f84", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/11fa8909c85bed080170156ffef07bbeb53e7f84", "html_url": "https://github.com/Rust-GCC/gccrs/commit/11fa8909c85bed080170156ffef07bbeb53e7f84"}], "stats": {"total": 31, "additions": 28, "deletions": 3}, "files": [{"sha": "484782cfbe65238d15b5387f7ba95debf835242d", "filename": "include/ChangeLog", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/63684e6319da1a8b5e666ca03361332cb8b984ef/include%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/63684e6319da1a8b5e666ca03361332cb8b984ef/include%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/include%2FChangeLog?ref=63684e6319da1a8b5e666ca03361332cb8b984ef", "patch": "@@ -1,3 +1,18 @@\n+Tue Dec  8 00:30:31 1998  Elena Zannoni  <ezannoni@kwikemart.cygnus.com> \n+\n+        * demangle.h: (DMGL_EDG): new macro for Kuck and Associates\n+        (DMGL_STYLE_MASK): modify to include Kuck and Assoc style\n+        (demangling_styles): add new edg_demangling style\n+        (EDG_DEMANGLING_STYLE_STRING): new macro\n+        (EDG_DEMANGLING): new macro\n+\n+        * demangle.h (DMGL_HP): new macro, for HP/aCC compiler.\n+        (DMGL_STYLE_MASK): modify to include new HP's style.\n+        (demangling_styles): add new hp_demangling value.\n+        (HP_DEMANGLING_STYLE_STRING): new macro.\n+        (ARM_DEMANGLING): coerce to int.\n+        (HP_DEMANGLING): new macro.\n+\n Fri Nov 13 19:19:11 1998  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n \t* libiberty.h: Prototype xcalloc."}, {"sha": "2b9d179c74e5c7fd46a87f587af59aaab54090bf", "filename": "include/demangle.h", "status": "modified", "additions": 13, "deletions": 3, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/63684e6319da1a8b5e666ca03361332cb8b984ef/include%2Fdemangle.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/63684e6319da1a8b5e666ca03361332cb8b984ef/include%2Fdemangle.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/include%2Fdemangle.h?ref=63684e6319da1a8b5e666ca03361332cb8b984ef", "patch": "@@ -35,8 +35,12 @@\n #define DMGL_GNU\t(1 << 9)\n #define DMGL_LUCID\t(1 << 10)\n #define DMGL_ARM\t(1 << 11)\n+#define DMGL_HP \t(1 << 12)       /* For the HP aCC compiler; same as ARM\n+                                           except for template arguments, etc. */\n+#define DMGL_EDG\t(1 << 13)\n+\n /* If none of these are set, use 'current_demangling_style' as the default. */\n-#define DMGL_STYLE_MASK (DMGL_AUTO|DMGL_GNU|DMGL_LUCID|DMGL_ARM)\n+#define DMGL_STYLE_MASK (DMGL_AUTO|DMGL_GNU|DMGL_LUCID|DMGL_ARM|DMGL_HP|DMGL_EDG)\n \n /* Enumeration of possible demangling styles.\n \n@@ -52,7 +56,9 @@ extern enum demangling_styles\n   auto_demangling = DMGL_AUTO,\n   gnu_demangling = DMGL_GNU,\n   lucid_demangling = DMGL_LUCID,\n-  arm_demangling = DMGL_ARM\n+  arm_demangling = DMGL_ARM,\n+  hp_demangling = DMGL_HP,\n+  edg_demangling = DMGL_EDG\n } current_demangling_style;\n \n /* Define string names for the various demangling styles. */\n@@ -61,14 +67,18 @@ extern enum demangling_styles\n #define GNU_DEMANGLING_STYLE_STRING\t\"gnu\"\n #define LUCID_DEMANGLING_STYLE_STRING\t\"lucid\"\n #define ARM_DEMANGLING_STYLE_STRING\t\"arm\"\n+#define HP_DEMANGLING_STYLE_STRING\t\"hp\"\n+#define EDG_DEMANGLING_STYLE_STRING\t\"edg\"\n \n /* Some macros to test what demangling style is active. */\n \n #define CURRENT_DEMANGLING_STYLE current_demangling_style\n #define AUTO_DEMANGLING (((int) CURRENT_DEMANGLING_STYLE) & DMGL_AUTO)\n #define GNU_DEMANGLING (((int) CURRENT_DEMANGLING_STYLE) & DMGL_GNU)\n #define LUCID_DEMANGLING (((int) CURRENT_DEMANGLING_STYLE) & DMGL_LUCID)\n-#define ARM_DEMANGLING (CURRENT_DEMANGLING_STYLE & DMGL_ARM)\n+#define ARM_DEMANGLING (((int) CURRENT_DEMANGLING_STYLE) & DMGL_ARM)\n+#define HP_DEMANGLING (((int) CURRENT_DEMANGLING_STYLE) & DMGL_HP)\n+#define EDG_DEMANGLING (((int) CURRENT_DEMANGLING_STYLE) & DMGL_EDG)\n \n extern char *\n cplus_demangle PARAMS ((const char *mangled, int options));"}]}