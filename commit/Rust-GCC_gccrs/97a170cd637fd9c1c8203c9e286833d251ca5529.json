{"sha": "97a170cd637fd9c1c8203c9e286833d251ca5529", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTdhMTcwY2Q2MzdmZDljMWM4MjAzYzllMjg2ODMzZDI1MWNhNTUyOQ==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2009-01-28T09:36:41Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2009-01-28T09:36:41Z"}, "message": "re PR c++/38908 (Unexplained \"'<anonymous>' is used uninitialized in this function\" warning in cc1plus -m64)\n\n2009-01-28  Richard Guenther  <rguenther@suse.de>\n\n\tPR middle-end/38908\n\t* tree-ssa.c (warn_uninitialized_var): Do not warn for seemingly\n\tuninitialized aggregate uses in call arguments.\n\n\t* g++.dg/warn/Wuninitialized-2.C: New testcase.\n\nFrom-SVN: r143722", "tree": {"sha": "0ea4a6e8018d544e307c69cbc79066acedd3d492", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0ea4a6e8018d544e307c69cbc79066acedd3d492"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/97a170cd637fd9c1c8203c9e286833d251ca5529", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/97a170cd637fd9c1c8203c9e286833d251ca5529", "html_url": "https://github.com/Rust-GCC/gccrs/commit/97a170cd637fd9c1c8203c9e286833d251ca5529", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/97a170cd637fd9c1c8203c9e286833d251ca5529/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "89ebafc6cdbfe4f67d017844f50b3810fd9e1399", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/89ebafc6cdbfe4f67d017844f50b3810fd9e1399", "html_url": "https://github.com/Rust-GCC/gccrs/commit/89ebafc6cdbfe4f67d017844f50b3810fd9e1399"}], "stats": {"total": 70, "additions": 69, "deletions": 1}, "files": [{"sha": "88de5d2c5abeb889343f44b602c2a2f00e8b7920", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97a170cd637fd9c1c8203c9e286833d251ca5529/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97a170cd637fd9c1c8203c9e286833d251ca5529/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=97a170cd637fd9c1c8203c9e286833d251ca5529", "patch": "@@ -1,3 +1,9 @@\n+2009-01-28  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR middle-end/38908\n+\t* tree-ssa.c (warn_uninitialized_var): Do not warn for seemingly\n+\tuninitialized aggregate uses in call arguments.\n+\n 2009-01-28  Paolo Bonzini  <bonzini@gnu.org>\n \n \tPR tree-optimization/38984"}, {"sha": "2db69bee90cf9df4b0b706daa521135f64c4053a", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97a170cd637fd9c1c8203c9e286833d251ca5529/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97a170cd637fd9c1c8203c9e286833d251ca5529/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=97a170cd637fd9c1c8203c9e286833d251ca5529", "patch": "@@ -1,3 +1,8 @@\n+2009-01-28  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR middle-end/38908\n+\t* g++.dg/warn/Wuninitialized-2.C: New testcase.\n+\n 2009-01-28  Paolo Bonzini  <bonzini@gnu.org>\n \n \tPR tree-optimization/38984"}, {"sha": "2b6f9253012d4944bf464cc49bad442d7f9d1f3a", "filename": "gcc/testsuite/g++.dg/warn/Wuninitialized-2.C", "status": "added", "additions": 53, "deletions": 0, "changes": 53, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97a170cd637fd9c1c8203c9e286833d251ca5529/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWuninitialized-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97a170cd637fd9c1c8203c9e286833d251ca5529/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWuninitialized-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWuninitialized-2.C?ref=97a170cd637fd9c1c8203c9e286833d251ca5529", "patch": "@@ -0,0 +1,53 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O -Wuninitialized\" } */\n+\n+struct S8 { template<typename T> S8(T) { } };\n+\n+template<typename T> struct S10;\n+template<typename T> struct S10<T()> { typedef T S12; typedef S8 S1(); };\n+\n+template<typename T> struct S3 { };\n+template<typename T> struct S11 { S11(S3<T>); };\n+\n+struct S2\n+{\n+  template<typename T> operator S11<T>() { return S11<T>(S5<T>()); }\n+  template<typename T> struct S5:public S3<T>\n+  {\n+    virtual typename S10<T>::S12 S13() {\n+      return 0;\n+    }\n+  };\n+};\n+\n+template<typename T> S11<T> S6(S3<T>) { return S11<T>(S3<T>()); }\n+template<typename S12> struct S7 { typedef S12 S15(); };\n+\n+struct S4\n+{\n+  template<typename T> operator S11<T>()\n+  {\n+    struct S14:public S3<T>\n+    { \n+      S14(S2 x):S11_(x) { }\n+      S11<typename S7<typename S10<T>::S12>::S15> S11_;\n+    };\n+    return S6(S14(S11_));\n+  }\n+  S2 S11_;\n+};\n+\n+struct S9\n+{\n+  template<typename F> operator S11<F>() { return S11<F>(S14<F>(S11_)); }\n+  template<typename F> struct S14:public S3<F>\n+  {\n+    S14(S4 x):S11_(x) { }\n+    S11<typename S10<F>::S1> S11_;\n+  };\n+  S4 S11_;\n+};\n+\n+void S15(S11<void()>);\n+void S16() { S9 x; S15(x); }\n+"}, {"sha": "75e4685149f771ab85cf359b0ef9794d8d3e4753", "filename": "gcc/tree-ssa.c", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97a170cd637fd9c1c8203c9e286833d251ca5529/gcc%2Ftree-ssa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97a170cd637fd9c1c8203c9e286833d251ca5529/gcc%2Ftree-ssa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa.c?ref=97a170cd637fd9c1c8203c9e286833d251ca5529", "patch": "@@ -1496,9 +1496,13 @@ warn_uninitialized_var (tree *tp, int *walk_subtrees, void *data_)\n             || !gimple_aliases_computed_p (cfun))\n \t  return NULL_TREE;\n \n+\t/* If the load happens as part of a call do not warn about it.  */\n+\tif (is_gimple_call (data->stmt))\n+\t  return NULL_TREE;\n+\n \tvuse = SINGLE_SSA_USE_OPERAND (data->stmt, SSA_OP_VUSE);\n \tif (vuse == NULL_USE_OPERAND_P)\n-\t    return NULL_TREE;\n+\t  return NULL_TREE;\n \n \top = USE_FROM_PTR (vuse);\n \tif (t != SSA_NAME_VAR (op) "}]}