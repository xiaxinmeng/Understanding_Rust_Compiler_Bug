{"sha": "0b96552628efa86e6e41a279bf7abfd7018d8a93", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGI5NjU1MjYyOGVmYTg2ZTZlNDFhMjc5YmY3YWJmZDcwMThkOGE5Mw==", "commit": {"author": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2016-07-18T15:55:36Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2016-07-18T15:55:36Z"}, "message": "pr70017.c: Do not check for warning on alpha*-*-*.\n\n\t* gcc.dg/pr70017.c: Do not check for warning on alpha*-*-*.\n\nFrom-SVN: r238438", "tree": {"sha": "b086df554036ae085a0461ede6fc1bb2396ed28b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b086df554036ae085a0461ede6fc1bb2396ed28b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0b96552628efa86e6e41a279bf7abfd7018d8a93", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0b96552628efa86e6e41a279bf7abfd7018d8a93", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0b96552628efa86e6e41a279bf7abfd7018d8a93", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0b96552628efa86e6e41a279bf7abfd7018d8a93/comments", "author": null, "committer": null, "parents": [{"sha": "7864eaaff7740c356f4b5c0a9dd9765b64a667ef", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7864eaaff7740c356f4b5c0a9dd9765b64a667ef", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7864eaaff7740c356f4b5c0a9dd9765b64a667ef"}], "stats": {"total": 62, "additions": 36, "deletions": 26}, "files": [{"sha": "d3012f8e827f0a3e8fb2389cec49bd790ce3266a", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 35, "deletions": 25, "changes": 60, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0b96552628efa86e6e41a279bf7abfd7018d8a93/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0b96552628efa86e6e41a279bf7abfd7018d8a93/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=0b96552628efa86e6e41a279bf7abfd7018d8a93", "patch": "@@ -1,3 +1,7 @@\n+2016-07-18  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* gcc.dg/pr70017.c: Do not check for warning on alpha*-*-*.\n+\n 2016-07-18  Yuri Rumyantsev  <ysrumyan@gmail.com>\n \n \tPR tree-optimization/71734\n@@ -204,8 +208,7 @@\n \n 2016-07-13  Andi Kleen  <ak@linux.intel.com>\n \n-\t* lib/profopt.exp (profopt-execute): Always log profiler\n-\tcommand line.\n+\t* lib/profopt.exp (profopt-execute): Always log profiler command line.\n \n 2016-07-13  Andi Kleen  <ak@linux.intel.com>\n \n@@ -221,8 +224,7 @@\n 2016-07-13  Martin Liska  <mliska@suse.cz>\n \n \t* gfortran.dg/ldist-1.f90: Revert change introduces in r238114.\n-\t* gfortran.dg/vect/pr62283.f: Add -fno-ipa-icf to additional\n-\toptions.\n+\t* gfortran.dg/vect/pr62283.f: Add -fno-ipa-icf to additional options.\n \t* gfortran.dg/pr42108.f90: Update expected dump scan.\n \n 2016-07-13  Richard Biener  <rguenther@suse.de>\n@@ -232,8 +234,7 @@\n \n 2016-07-13  Senthil Kumar Selvaraj  <senthil_kumar.selvaraj@atmel.com>\n \n-\t* c-c++-common/Wduplicated-cond-3.c (fn10): Use smaller \n-\tconst literal.\n+\t* c-c++-common/Wduplicated-cond-3.c (fn10): Use smaller const literal.\n \t* c-c++-common/builtin-arith-overflow-2.c: Skip for avr.\n \t* c-c++-common/pr68833-1.c: Require int32plus.\n \t* gcc.dg/ipa/pr63551.c: Likewise.\n@@ -443,15 +444,15 @@\n 2016-07-06  Yuri Rumyantsev  <ysrumyan@gmail.com>\n \n \tPR tree-optimization/71518\n-        * gcc.dg/pr71518.c: New test.\n+\t* gcc.dg/pr71518.c: New test.\n \n 2016-07-06  Wilco Dijkstra  <wdijkstr@arm.com>\n \n \t* gcc.target/arm/vst1Q_laneu64-1.c (foo): Use unsigned char*.\n \n 2016-07-06  Senthil Kumar Selvaraj  <senthil_kumar.selvaraj@atmel.com>\n \n-\tPR target/50739\t\n+\tPR target/50739\n \t* gcc.target/avr/pr50739.c: New test.\n \n 2016-07-05  Jan Hubicka  <jh@suse.cz>\n@@ -587,8 +588,7 @@\n \t* gcc.dg/torture/fp-int-convert-float128-timode-2.c: Likewise.\n \t* gcc.dg/torture/fp-int-convert-float128-timode-3.c: Likewise.\n \t* gcc.dg/torture/fp-int-convert-float128-timode.c: Likewise.\n-\t* lib/target-supports.exp (check_effective_target___float128):\n-\tNew.\n+\t* lib/target-supports.exp (check_effective_target___float128): New.\n \t(add_options_for___float128): New.\n \t(check_effective_target_base_quadword_support): New.\n \n@@ -720,12 +720,12 @@\n \t* gcc.target/powerpc/dfp/dtstsfi-9.c: New test.\n \n 2016-06-30  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n-            James Greenhalgh  <james.greenhalgh@arm.com>\n+\t    James Greenhalgh  <james.greenhalgh@arm.com>\n \n \t* gcc.target/aarch64/vect_copy_lane_1.c: New test.\n \n 2016-06-30  James Greenhalgh  <james.greenhalgh@arm.com>\n-            Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n+\t    Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n \n \t* gcc.target/aarch64/vget_set_lane_1.c: New test.\n \n@@ -786,8 +786,7 @@\n \n 2016-06-29  Matthew Wahab  <matthew.wahab@arm.com>\n \n-\t* lib/target-supports.exp (add_options_for_arm_fp16): Reword\n-\tcomment.\n+\t* lib/target-supports.exp (add_options_for_arm_fp16): Reword comment.\n \t(add_options_for_arm_fp16_ieee): New.\n \t(add_options_for_arm_fp16_alternative): New.\n \t(effective_target_arm_fp16_ok_nocache): Add to comment.  Fix a\n@@ -873,17 +872,28 @@\n \t* gcc.target/aarch64/advsimd-intrinsics/vstX_lane.c: Likewise.\n \t* gcc.target/aarch64/advsimd-intrinsics/vld2_lane_f16_indices_1.c:\n \tAdd arm_neon_fp16_ok effective target.\n-\t* gcc.target/aarch64/advsimd-intrinsics/vld2q_lane_f16_indices_1.c: Likewise.\n-\t* gcc.target/aarch64/advsimd-intrinsics/vld3_lane_f16_indices_1.c: Likewise.\n-\t* gcc.target/aarch64/advsimd-intrinsics/vld3q_lane_f16_indices_1.c: Likewise.\n-\t* gcc.target/aarch64/advsimd-intrinsics/vld4_lane_f16_indices_1.c: Likewise.\n-\t* gcc.target/aarch64/advsimd-intrinsics/vld4q_lane_f16_indices_1.c: Likewise.\n-\t* gcc.target/aarch64/advsimd-intrinsics/vst2_lane_f16_indices_1.c: Likewise.\n-\t* gcc.target/aarch64/advsimd-intrinsics/vst2q_lane_f16_indices_1.c: Likewise.\n-\t* gcc.target/aarch64/advsimd-intrinsics/vst3_lane_f16_indices_1.c: Likewise.\n-\t* gcc.target/aarch64/advsimd-intrinsics/vst3q_lane_f16_indices_1.c: Likewise.\n-\t* gcc.target/aarch64/advsimd-intrinsics/vst4_lane_f16_indices_1.c: Likewise.\n-\t* gcc.target/aarch64/advsimd-intrinsics/vst4q_lane_f16_indices_1.c: Likewise.\n+\t* gcc.target/aarch64/advsimd-intrinsics/vld2q_lane_f16_indices_1.c:\n+\tLikewise.\n+\t* gcc.target/aarch64/advsimd-intrinsics/vld3_lane_f16_indices_1.c:\n+\tLikewise.\n+\t* gcc.target/aarch64/advsimd-intrinsics/vld3q_lane_f16_indices_1.c:\n+\tLikewise.\n+\t* gcc.target/aarch64/advsimd-intrinsics/vld4_lane_f16_indices_1.c:\n+\tLikewise.\n+\t* gcc.target/aarch64/advsimd-intrinsics/vld4q_lane_f16_indices_1.c:\n+\tLikewise.\n+\t* gcc.target/aarch64/advsimd-intrinsics/vst2_lane_f16_indices_1.c:\n+\tLikewise.\n+\t* gcc.target/aarch64/advsimd-intrinsics/vst2q_lane_f16_indices_1.c:\n+\tLikewise.\n+\t* gcc.target/aarch64/advsimd-intrinsics/vst3_lane_f16_indices_1.c:\n+\tLikewise.\n+\t* gcc.target/aarch64/advsimd-intrinsics/vst3q_lane_f16_indices_1.c:\n+\tLikewise.\n+\t* gcc.target/aarch64/advsimd-intrinsics/vst4_lane_f16_indices_1.c:\n+\tLikewise.\n+\t* gcc.target/aarch64/advsimd-intrinsics/vst4q_lane_f16_indices_1.c:\n+\tLikewise.\n \n 2016-06-26  Jan Hubicka  <hubicka@ucw.cz>\n "}, {"sha": "f544167612b9c396717b89ee92cc6e934ea1576c", "filename": "gcc/testsuite/gcc.dg/pr70017.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0b96552628efa86e6e41a279bf7abfd7018d8a93/gcc%2Ftestsuite%2Fgcc.dg%2Fpr70017.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0b96552628efa86e6e41a279bf7abfd7018d8a93/gcc%2Ftestsuite%2Fgcc.dg%2Fpr70017.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr70017.c?ref=0b96552628efa86e6e41a279bf7abfd7018d8a93", "patch": "@@ -17,4 +17,4 @@ void foo(void)\n #define ONE(s) a##s[0] = 0;\n   HUNDRED(a)\n   HUNDRED(b)\n-} /* { dg-warning \"frame size too large for reliable stack checking\" } */\n+} /* { dg-warning \"frame size too large for reliable stack checking\" \"\" { target { ! alpha*-*-* } } } */"}]}