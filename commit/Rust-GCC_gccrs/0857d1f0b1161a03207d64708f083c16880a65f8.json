{"sha": "0857d1f0b1161a03207d64708f083c16880a65f8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDg1N2QxZjBiMTE2MWEwMzIwN2Q2NDcwOGYwODNjMTY4ODBhNjVmOA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2009-12-15T02:11:54Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2009-12-15T02:11:54Z"}, "message": "re PR c++/42364 (C++ testsuite fails with -g)\n\n\tPR c++/42364\n\t* pt.c (function_parameter_expanded_from_pack_p): Don't require\n\ta pack to have a name.\n\t(tsubst_decl): Do typedef magic after applying attributes.\n\nFrom-SVN: r155246", "tree": {"sha": "40cb649be49d08265a63b4d8dbbe9f7dac3ad9e1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/40cb649be49d08265a63b4d8dbbe9f7dac3ad9e1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0857d1f0b1161a03207d64708f083c16880a65f8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0857d1f0b1161a03207d64708f083c16880a65f8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0857d1f0b1161a03207d64708f083c16880a65f8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0857d1f0b1161a03207d64708f083c16880a65f8/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "6ba6f70d7fa8fa889576172a23c199a51abdd045", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6ba6f70d7fa8fa889576172a23c199a51abdd045", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6ba6f70d7fa8fa889576172a23c199a51abdd045"}], "stats": {"total": 56, "additions": 36, "deletions": 20}, "files": [{"sha": "fbfed9feb910cb3576532c2d46e34a332f8974c1", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0857d1f0b1161a03207d64708f083c16880a65f8/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0857d1f0b1161a03207d64708f083c16880a65f8/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=0857d1f0b1161a03207d64708f083c16880a65f8", "patch": "@@ -1,3 +1,10 @@\n+2009-12-14  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/42364\n+\t* pt.c (function_parameter_expanded_from_pack_p): Don't require\n+\ta pack to have a name.\n+\t(tsubst_decl): Do typedef magic after applying attributes.\n+\n 2009-12-15  Paolo Bonzini  <bonzini@gnu.org>\n \t    Shujing Zhao  <pearly.zhao@oracle.com>\n "}, {"sha": "dfd2399bfc5c5f6f702a0024ad3c8f6f434b4761", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 21, "deletions": 19, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0857d1f0b1161a03207d64708f083c16880a65f8/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0857d1f0b1161a03207d64708f083c16880a65f8/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=0857d1f0b1161a03207d64708f083c16880a65f8", "patch": "@@ -2730,15 +2730,13 @@ get_function_template_decl (const_tree primary_func_tmpl_inst)\n bool\n function_parameter_expanded_from_pack_p (tree param_decl, tree pack)\n {\n-    if (DECL_ARTIFICIAL (param_decl)\n-\t|| !function_parameter_pack_p (pack))\n-      return false;\n-\n-    gcc_assert (DECL_NAME (param_decl) && DECL_NAME (pack));\n+  if (DECL_ARTIFICIAL (param_decl)\n+      || !function_parameter_pack_p (pack))\n+    return false;\n \n-    /* The parameter pack and its pack arguments have the same\n-       DECL_PARM_INDEX.  */\n-    return DECL_PARM_INDEX (pack) == DECL_PARM_INDEX (param_decl);\n+  /* The parameter pack and its pack arguments have the same\n+     DECL_PARM_INDEX.  */\n+  return DECL_PARM_INDEX (pack) == DECL_PARM_INDEX (param_decl);\n }\n \n /* Determine whether ARGS describes a variadic template args list,\n@@ -9273,7 +9271,13 @@ tsubst_decl (tree t, tree args, tsubst_flags_t complain)\n \t/* Create a new node for the specialization we need.  */\n \tr = copy_decl (t);\n \tif (type == NULL_TREE)\n-\t  type = tsubst (TREE_TYPE (t), args, complain, in_decl);\n+\t  {\n+\t    if (is_typedef_decl (t))\n+\t      type = DECL_ORIGINAL_TYPE (t);\n+\t    else\n+\t      type = TREE_TYPE (t);\n+\t    type = tsubst (type, args, complain, in_decl);\n+\t  }\n \tif (TREE_CODE (r) == VAR_DECL)\n \t  {\n \t    /* Even if the original location is out of scope, the\n@@ -9344,16 +9348,6 @@ tsubst_decl (tree t, tree args, tsubst_flags_t complain)\n \t      }\n \t    determine_visibility (r);\n \t  }\n-\t/* Preserve a typedef that names a type.  */\n-\telse if (TREE_CODE (r) == TYPE_DECL\n-\t\t && DECL_ORIGINAL_TYPE (t)\n-\t\t && type != error_mark_node)\n-\t  {\n-\t    DECL_ORIGINAL_TYPE (r) = tsubst (DECL_ORIGINAL_TYPE (t),\n-\t\t\t\t\t     args, complain, in_decl);\n-\t    TREE_TYPE (r) = type = build_variant_type_copy (type);\n-\t    TYPE_NAME (type) = r;\n-\t  }\n \n \tif (!local_p)\n \t  {\n@@ -9391,6 +9385,14 @@ tsubst_decl (tree t, tree args, tsubst_flags_t complain)\n \tapply_late_template_attributes (&r, DECL_ATTRIBUTES (r),\n \t\t\t\t\t(int) ATTR_FLAG_TYPE_IN_PLACE,\n \t\t\t\t\targs, complain, in_decl);\n+\n+\t/* Preserve a typedef that names a type.  */\n+\tif (is_typedef_decl (r))\n+\t  {\n+\t    DECL_ORIGINAL_TYPE (r) = NULL_TREE;\n+\t    set_underlying_type (r);\n+\t  }\n+\n \tlayout_decl (r, 0);\n       }\n       break;"}, {"sha": "654cb1c32cc4b5c4ea67f14beab6e459f6ed37b0", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0857d1f0b1161a03207d64708f083c16880a65f8/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0857d1f0b1161a03207d64708f083c16880a65f8/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=0857d1f0b1161a03207d64708f083c16880a65f8", "patch": "@@ -1,3 +1,9 @@\n+2009-12-14  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/42364\n+\t* g++.dg/cpp0x/variadic31.C: Compile with -g.\n+\t* g++.dg/ext/attrib33.C: Likewise.\n+\n 2009-12-15  Shujing Zhao  <pearly.zhao@oracle.com>\n \n \t* g++.dg/other/error20.C: Adjust dg-message strings."}, {"sha": "db8daa89858fc5f04f31e120a254573cca0be4a9", "filename": "gcc/testsuite/g++.dg/cpp0x/variadic31.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0857d1f0b1161a03207d64708f083c16880a65f8/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fvariadic31.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0857d1f0b1161a03207d64708f083c16880a65f8/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fvariadic31.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fvariadic31.C?ref=0857d1f0b1161a03207d64708f083c16880a65f8", "patch": "@@ -1,4 +1,4 @@\n-// { dg-options \"-std=gnu++0x\" }\n+// { dg-options \"-std=gnu++0x -g\" }\n template<typename... T>\n void eat(T...) { }\n "}, {"sha": "55bfc4cadb86ac1fb7fc14b1f0a90cdffc0063e3", "filename": "gcc/testsuite/g++.dg/ext/attrib33.C", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0857d1f0b1161a03207d64708f083c16880a65f8/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fattrib33.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0857d1f0b1161a03207d64708f083c16880a65f8/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fattrib33.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fattrib33.C?ref=0857d1f0b1161a03207d64708f083c16880a65f8", "patch": "@@ -1,5 +1,6 @@\n // PR c++/35546\n // { dg-do compile }\n+// { dg-options \"-g\" }\n \n template <int N>\n struct T"}]}