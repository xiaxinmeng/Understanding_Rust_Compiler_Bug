{"sha": "fe006562ba9dac8f0d5aefd4f05fd592efd22534", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmUwMDY1NjJiYTlkYWM4ZjBkNWFlZmQ0ZjA1ZmQ1OTJlZmQyMjUzNA==", "commit": {"author": {"name": "Torbjorn Granlund", "email": "tege@gnu.org", "date": "1994-06-15T02:31:28Z"}, "committer": {"name": "Torbjorn Granlund", "email": "tege@gnu.org", "date": "1994-06-15T02:31:28Z"}, "message": "(logical patterns): Tune to give better code for immediate values.\n\nFrom-SVN: r7476", "tree": {"sha": "4ecc2bce8efd535afe0d7063b33ca2d16a80e60e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4ecc2bce8efd535afe0d7063b33ca2d16a80e60e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fe006562ba9dac8f0d5aefd4f05fd592efd22534", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fe006562ba9dac8f0d5aefd4f05fd592efd22534", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fe006562ba9dac8f0d5aefd4f05fd592efd22534", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fe006562ba9dac8f0d5aefd4f05fd592efd22534/comments", "author": null, "committer": null, "parents": [{"sha": "e627f0b601f1fbc0e28a3dea3c145efc884c4972", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e627f0b601f1fbc0e28a3dea3c145efc884c4972", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e627f0b601f1fbc0e28a3dea3c145efc884c4972"}], "stats": {"total": 49, "additions": 28, "deletions": 21}, "files": [{"sha": "ca1decc586e131d47b35f3e4b64892467644aa5b", "filename": "gcc/config/a29k/a29k.md", "status": "modified", "additions": 28, "deletions": 21, "changes": 49, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe006562ba9dac8f0d5aefd4f05fd592efd22534/gcc%2Fconfig%2Fa29k%2Fa29k.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe006562ba9dac8f0d5aefd4f05fd592efd22534/gcc%2Fconfig%2Fa29k%2Fa29k.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fa29k%2Fa29k.md?ref=fe006562ba9dac8f0d5aefd4f05fd592efd22534", "patch": "@@ -102,12 +102,13 @@\n    andn %0,%1,%C2\")\n \n (define_insn \"\"\n-  [(set (match_operand:SI 0 \"gpc_reg_operand\" \"=r\")\n-\t(and:SI (not:SI (match_operand:SI 1 \"srcb_operand\" \"rI\"))\n-\t\t(match_operand:SI 2 \"gpc_reg_operand\" \"r\")))]\n+  [(set (match_operand:SI 0 \"gpc_reg_operand\" \"=r,r\")\n+\t(and:SI (not:SI (match_operand:SI 1 \"gpc_reg_operand\" \"r,r\"))\n+\t\t(match_operand:SI 2 \"cmplsrcb_operand\" \"r,K\")))]\n   \"\"\n-  \"andn %0,%2,%1\")\n-\n+  \"@\n+   andn %0,%2,%1\n+   nor %0,%1,%C2\")\n \f\n ;; CALLI\n ;;\n@@ -1196,32 +1197,26 @@\n (define_insn \"\"\n   [(set (match_operand:SI 0 \"gpc_reg_operand\" \"=r\")\n \t(ior:SI (not:SI (match_operand:SI 1 \"gpc_reg_operand\" \"%r\"))\n-\t\t(not:SI (match_operand:SI 2 \"srcb_operand\" \"rI\"))))]\n+\t\t(not:SI (match_operand:SI 2 \"gpc_reg_operand\" \"r\"))))]\n   \"\"\n   \"nand %0,%1,%2\")\n \n (define_insn \"\"\n   [(set (match_operand:SI 0 \"gpc_reg_operand\" \"=r\")\n \t(ior:SI (not:SI (match_operand:SI 1 \"gpc_reg_operand\" \"r\"))\n \t\t(match_operand:SI 2 \"const_int_operand\" \"K\")))]\n-  \"((unsigned) ~ INTVAL (operands[2])) < 256\"\n+  ; Match TARGET_29050 in \"orn\" pattern for slightly better reload.\n+  \"! TARGET_29050 && ((unsigned) ~ INTVAL (operands[2])) < 256\"\n   \"nand %0,%1,%C2\")\n \n ;; NOR\n (define_insn \"\"\n   [(set (match_operand:SI 0 \"gpc_reg_operand\" \"=r\")\n \t(and:SI (not:SI (match_operand:SI 1 \"gpc_reg_operand\" \"%r\"))\n-\t\t(not:SI (match_operand:SI 2 \"srcb_operand\" \"rI\"))))]\n+\t\t(not:SI (match_operand:SI 2 \"gpc_reg_operand\" \"r\"))))]\n   \"\"\n   \"nor %0,%1,%2\")\n \n-(define_insn \"\"\n-  [(set (match_operand:SI 0 \"gpc_reg_operand\" \"=r\")\n-\t(and:SI (not:SI (match_operand:SI 1 \"gpc_reg_operand\" \"r\"))\n-\t\t(match_operand:SI 2 \"const_int_operand\" \"K\")))]\n-  \"((unsigned) ~ INTVAL (operands[2])) < 256\"\n-  \"nor %0,%1,%C2\")\n-\n (define_insn \"one_cmplsi2\"\n   [(set (match_operand:SI 0 \"gpc_reg_operand\" \"=r\")\n \t(not:SI (match_operand:SI 1 \"gpc_reg_operand\" \"r\")))]\n@@ -1246,12 +1241,21 @@\n (define_insn \"\"\n   [(set (match_operand:SI 0 \"gpc_reg_operand\" \"=r,r\")\n \t(ior:SI (match_operand:SI 1 \"gpc_reg_operand\" \"%r,r\")\n-\t\t(match_operand:SI 2 \"srcb_operand\" \"rI,K\")))]\n+\t\t(match_operand:SI 2 \"and_operand\" \"rI,K\")))]\n   \"TARGET_29050\"\n   \"@\n    or %0,%1,%2\n    orn %0,%1,%C2\")\n \n+(define_insn \"\"\n+  [(set (match_operand:SI 0 \"gpc_reg_operand\" \"=r,r\")\n+\t(ior:SI (not:SI (match_operand:SI 1 \"gpc_reg_operand\" \"r,r\"))\n+\t\t(match_operand:SI 2 \"cmplsrcb_operand\" \"r,K\")))]\n+  \"TARGET_29050\"\n+  \"@\n+   orn %0,%2,%1\n+   nand %0,%1,%C2\")\n+\n \f\n ;; SLL (also used by move insn)\n (define_insn \"nop\"\n@@ -1512,17 +1516,20 @@\n (define_insn \"\"\n   [(set (match_operand:SI 0 \"gpc_reg_operand\" \"=r\")\n \t(not:SI (xor:SI (match_operand:SI 1 \"gpc_reg_operand\" \"%r\")\n-\t\t\t(match_operand:SI 2 \"srcb_operand\" \"rI\"))))]\n+\t\t\t(match_operand:SI 2 \"gpc_reg_operand\" \"r\"))))]\n   \"\"\n   \"xnor %0,%1,%2\")\n \n ;; XOR\n+\n (define_insn \"xorsi3\"\n-  [(set (match_operand:SI 0 \"gpc_reg_operand\" \"=r\")\n-\t(xor:SI (match_operand:SI 1 \"gpc_reg_operand\" \"%r\")\n-\t\t(match_operand:SI 2 \"srcb_operand\" \"rI\")))]\n+  [(set (match_operand:SI 0 \"gpc_reg_operand\" \"=r,r\")\n+\t(xor:SI (match_operand:SI 1 \"gpc_reg_operand\" \"%r,r\")\n+\t\t(match_operand:SI 2 \"and_operand\" \"rI,K\")))]\n   \"\"\n-  \"xor %0,%1,%2\")\n+  \"@\n+   xor %0,%1,%2\n+   xnor %0,%1,%C2\")\n \n ;; Can use XOR to negate floating-point values, but we are better off not doing\n ;; it that way on the 29050 so it can combine with the fmac insns."}]}