{"sha": "054af139880dd424ec00e148541344af8bc4897c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDU0YWYxMzk4ODBkZDQyNGVjMDBlMTQ4NTQxMzQ0YWY4YmM0ODk3Yw==", "commit": {"author": {"name": "Nicola Pero", "email": "nicola@gcc.gnu.org", "date": "2001-07-18T11:21:20Z"}, "committer": {"name": "Nicola Pero", "email": "nicola@gcc.gnu.org", "date": "2001-07-18T11:21:20Z"}, "message": "Fixed backend function of objc_mutex_trylock which was broken\n\nFrom-SVN: r44104", "tree": {"sha": "9fb7c2439676b7cfad96f8c55498f71f3ceb5db7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9fb7c2439676b7cfad96f8c55498f71f3ceb5db7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/054af139880dd424ec00e148541344af8bc4897c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/054af139880dd424ec00e148541344af8bc4897c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/054af139880dd424ec00e148541344af8bc4897c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/054af139880dd424ec00e148541344af8bc4897c/comments", "author": null, "committer": null, "parents": [{"sha": "b8dd1bcdbeb096a1acf59cc9b791189c4f73b270", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b8dd1bcdbeb096a1acf59cc9b791189c4f73b270", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b8dd1bcdbeb096a1acf59cc9b791189c4f73b270"}], "stats": {"total": 33, "additions": 21, "deletions": 12}, "files": [{"sha": "c047e55982387fd1e1330dd56b26bee332da17c4", "filename": "gcc/gthr-posix.h", "status": "modified", "additions": 21, "deletions": 12, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/054af139880dd424ec00e148541344af8bc4897c/gcc%2Fgthr-posix.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/054af139880dd424ec00e148541344af8bc4897c/gcc%2Fgthr-posix.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgthr-posix.h?ref=054af139880dd424ec00e148541344af8bc4897c", "patch": "@@ -331,30 +331,39 @@ __gthread_objc_mutex_deallocate(objc_mutex_t mutex)\n static inline int\n __gthread_objc_mutex_lock(objc_mutex_t mutex)\n {\n-  if (__gthread_active_p ())\n-    return pthread_mutex_lock((pthread_mutex_t *)mutex->backend);\n-  else\n-    return 0;\n+  if (__gthread_active_p () \n+      && pthread_mutex_lock((pthread_mutex_t *)mutex->backend) != 0)\n+    {\n+      return -1;\n+    }\n+\n+  return 0;\n }\n \n /* Try to grab a lock on a mutex. */\n static inline int\n __gthread_objc_mutex_trylock(objc_mutex_t mutex)\n {\n-  if (__gthread_active_p ())\n-    return pthread_mutex_trylock((pthread_mutex_t *)mutex->backend);\n-  else\n-    return 0;\n+  if (__gthread_active_p () \n+      && pthread_mutex_trylock((pthread_mutex_t *)mutex->backend) != 0)\n+    {\n+      return -1;\n+    }\n+\n+  return 0;\n }\n \n /* Unlock the mutex */\n static inline int\n __gthread_objc_mutex_unlock(objc_mutex_t mutex)\n {\n-  if (__gthread_active_p ())\n-    return pthread_mutex_unlock((pthread_mutex_t *)mutex->backend);\n-  else\n-    return 0;\n+  if (__gthread_active_p () \n+      && pthread_mutex_unlock((pthread_mutex_t *)mutex->backend) != 0)\n+    {\n+      return -1;\n+    }\n+\n+  return 0;\n }\n \n /* Backend condition mutex functions */"}]}