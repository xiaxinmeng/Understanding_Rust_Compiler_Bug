{"sha": "f3e6ef7d873885ffaa0db7f4185364bbd7a70505", "node_id": "C_kwDOANBUbNoAKGYzZTZlZjdkODczODg1ZmZhYTBkYjdmNDE4NTM2NGJiZDdhNzA1MDU", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2022-01-25T20:12:16Z"}, "committer": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2022-01-26T04:22:57Z"}, "message": "c++: alias template and typename [PR103057]\n\nUsually we handle DR1558 substitution near the top of tsubst, but in this\ncase while substituting TYPENAME_TYPE we were passing an alias\nspecialization to tsubst_aggr_type, which ignored its aliasness.\n\n\tPR c++/103057\n\ngcc/cp/ChangeLog:\n\n\t* pt.cc (tsubst_aggr_type): Call tsubst for alias template\n\tspecialization.\n\ngcc/testsuite/ChangeLog:\n\n\t* g++.dg/cpp0x/alias-decl-void1.C: New test.", "tree": {"sha": "f0ed112041054c189f899b4a18f06434c0c299f6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f0ed112041054c189f899b4a18f06434c0c299f6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f3e6ef7d873885ffaa0db7f4185364bbd7a70505", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f3e6ef7d873885ffaa0db7f4185364bbd7a70505", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f3e6ef7d873885ffaa0db7f4185364bbd7a70505", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f3e6ef7d873885ffaa0db7f4185364bbd7a70505/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e0b8716f53ed6455e9f18931940141692793068d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e0b8716f53ed6455e9f18931940141692793068d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e0b8716f53ed6455e9f18931940141692793068d"}], "stats": {"total": 26, "additions": 26, "deletions": 0}, "files": [{"sha": "6fbda676527a4dd3af09de9326a6a1f74dcb7a95", "filename": "gcc/cp/pt.cc", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f3e6ef7d873885ffaa0db7f4185364bbd7a70505/gcc%2Fcp%2Fpt.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f3e6ef7d873885ffaa0db7f4185364bbd7a70505/gcc%2Fcp%2Fpt.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.cc?ref=f3e6ef7d873885ffaa0db7f4185364bbd7a70505", "patch": "@@ -13585,6 +13585,14 @@ tsubst_aggr_type (tree t,\n   if (t == NULL_TREE)\n     return NULL_TREE;\n \n+  /* If T is an alias template specialization, we want to substitute that\n+     rather than strip it, especially if it's dependent_alias_template_spec_p.\n+     It should be OK not to handle entering_scope in this case, since\n+     DECL_CONTEXT will never be an alias template specialization.  We only get\n+     here with an alias when tsubst calls us for TYPENAME_TYPE.  */\n+  if (alias_template_specialization_p (t, nt_transparent))\n+    return tsubst (t, args, complain, in_decl);\n+\n   switch (TREE_CODE (t))\n     {\n     case RECORD_TYPE:"}, {"sha": "accc1a45abccf2385b38ce08838b510620d079d3", "filename": "gcc/testsuite/g++.dg/cpp0x/alias-decl-void1.C", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f3e6ef7d873885ffaa0db7f4185364bbd7a70505/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Falias-decl-void1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f3e6ef7d873885ffaa0db7f4185364bbd7a70505/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Falias-decl-void1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Falias-decl-void1.C?ref=f3e6ef7d873885ffaa0db7f4185364bbd7a70505", "patch": "@@ -0,0 +1,18 @@\n+// PR c++/103057\n+// { dg-do compile { target c++11 } }\n+\n+template <class T> struct A { };\n+template <class T> struct B { using type = A<T>; };\n+template <class T> struct C {\n+  using type = typename T::foo;\t// { dg-error \"int\" }\n+};\n+template <class T> using L = B<void>;\n+\n+template <class T>\n+typename L<typename C<T>::type>::type\n+f(T) { };\n+\n+int main()\n+{\n+  f(42);\t\t\t// { dg-error \"no match\" }\n+}"}]}