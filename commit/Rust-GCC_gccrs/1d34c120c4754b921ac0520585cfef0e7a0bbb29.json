{"sha": "1d34c120c4754b921ac0520585cfef0e7a0bbb29", "node_id": "C_kwDOANBUbNoAKDFkMzRjMTIwYzQ3NTRiOTIxYWMwNTIwNTg1Y2ZlZjBlN2EwYmJiMjk", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2022-03-22T21:58:02Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-03-22T21:58:02Z"}, "message": "Merge #1026\n\n1026: Enable -Werror r=tschwinge a=CastilloDel\n\n\r\n\r\nFixes #694 \r\n\r\n- \\[x] GCC development requires copyright assignment or the Developer's Certificate of Origin sign-off, see https://gcc.gnu.org/contribute.html or https://gcc.gnu.org/dco.html\r\n- \\[x] Read contributing guidelines\r\n- \\[ ] `make check-rust` passes locally\r\n- \\[ ] Run `clang-format`\r\n- \\[ ] Added any relevant test cases to `gcc/testsuite/rust/`\r\n\r\nThe last three ones shouldn't be necessary for this change.\r\n\r\n---\r\n\r\nUpdate the CI to use the bootstrap build process and enable -Werror\r\n\r\nSigned-off-by: Daniel del Castillo <delcastillodelarosadaniel@gmail.com>\n\nCo-authored-by: CastilloDel <delcastillodelarosadaniel@gmail.com>\nCo-authored-by: Thomas Schwinge <thomas@codesourcery.com>", "tree": {"sha": "45eafa2571825ef662ff91e575f35263261ece7e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/45eafa2571825ef662ff91e575f35263261ece7e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1d34c120c4754b921ac0520585cfef0e7a0bbb29", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJiOkZqCRBK7hj4Ov3rIwAAkmoIAIvo6nXZmTkUp9jU7/Fqbj2K\n38Qv1fK/t+WKiTai8mV1yfK4ZAebA6VDKv58gTlTAXzp83Omx8Ve2CUqTqO1kDgI\n9kIdr2RHDCQRa/rHB3vheea5ohhlOOvQJ2G4vme3U0VmWA+lqQ3g3A5JdCDSakSN\nJJsK2xo5jIlCip/13vgZcr+EjeDE+rIwsDfO8bktyy4bXjBir8Wsom2F5XapbG7S\nbQKS6Rt2OIy0FSdA+accgHnStIUMMn8fW+hsQBe0bfWcpN8yVroEsNEW2YPsn9UY\nVHo4XGPo3XbIVoG5a/ga1hjBZJWHgXR/LRJpQXs4Swtsrb7ausFfFHgqTqwaNsk=\n=0wKM\n-----END PGP SIGNATURE-----\n", "payload": "tree 45eafa2571825ef662ff91e575f35263261ece7e\nparent fb886737e23eef762c8c164c53168ebfd86e9435\nparent f0b5ac2e821924f5c2288daac32db311d262369c\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1647986282 +0000\ncommitter GitHub <noreply@github.com> 1647986282 +0000\n\nMerge #1026\n\n1026: Enable -Werror r=tschwinge a=CastilloDel\n\n\r\n\r\nFixes #694 \r\n\r\n- \\[x] GCC development requires copyright assignment or the Developer's Certificate of Origin sign-off, see https://gcc.gnu.org/contribute.html or https://gcc.gnu.org/dco.html\r\n- \\[x] Read contributing guidelines\r\n- \\[ ] `make check-rust` passes locally\r\n- \\[ ] Run `clang-format`\r\n- \\[ ] Added any relevant test cases to `gcc/testsuite/rust/`\r\n\r\nThe last three ones shouldn't be necessary for this change.\r\n\r\n---\r\n\r\nUpdate the CI to use the bootstrap build process and enable -Werror\r\n\r\nSigned-off-by: Daniel del Castillo <delcastillodelarosadaniel@gmail.com>\n\nCo-authored-by: CastilloDel <delcastillodelarosadaniel@gmail.com>\nCo-authored-by: Thomas Schwinge <thomas@codesourcery.com>\n"}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1d34c120c4754b921ac0520585cfef0e7a0bbb29", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1d34c120c4754b921ac0520585cfef0e7a0bbb29", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1d34c120c4754b921ac0520585cfef0e7a0bbb29/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fb886737e23eef762c8c164c53168ebfd86e9435", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fb886737e23eef762c8c164c53168ebfd86e9435", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fb886737e23eef762c8c164c53168ebfd86e9435"}, {"sha": "f0b5ac2e821924f5c2288daac32db311d262369c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f0b5ac2e821924f5c2288daac32db311d262369c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f0b5ac2e821924f5c2288daac32db311d262369c"}], "stats": {"total": 185, "additions": 184, "deletions": 1}, "files": [{"sha": "0ab3ebab047e87163ac2fcfd35b54b06c447f0e0", "filename": ".github/bors_log_expected_warnings", "status": "added", "additions": 128, "deletions": 0, "changes": 128, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d34c120c4754b921ac0520585cfef0e7a0bbb29/.github%2Fbors_log_expected_warnings", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d34c120c4754b921ac0520585cfef0e7a0bbb29/.github%2Fbors_log_expected_warnings", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/.github%2Fbors_log_expected_warnings?ref=1d34c120c4754b921ac0520585cfef0e7a0bbb29", "patch": "@@ -0,0 +1,128 @@\n+../../../../libffi/src/x86/ffi.c:612:1: warning: label \u2018out\u2019 defined but not used [-Wunused-label]\n+../../../../libssp/ssp.c:172:11: warning: array subscript 0 is outside array bounds of \u2018volatile int[0]\u2019 [-Warray-bounds]\n+../../../libcpp/expr.cc:808:18: warning: format not a string literal and no format arguments [-Wformat-security]\n+../../../libcpp/expr.cc:811:39: warning: format not a string literal and no format arguments [-Wformat-security]\n+../../../libcpp/expr.cc:821:34: warning: format not a string literal and no format arguments [-Wformat-security]\n+../../../libcpp/macro.cc:186:23: warning: format not a string literal and no format arguments [-Wformat-security]\n+../../../libcpp/macro.cc:215:24: warning: format not a string literal and no format arguments [-Wformat-security]\n+../../../libcpp/macro.cc:3701:58: warning: format not a string literal and no format arguments [-Wformat-security]\n+../../../libcpp/macro.cc:3716:58: warning: format not a string literal and no format arguments [-Wformat-security]\n+../../../libffi/src/java_raw_api.c:317:3: warning: \u2018ffi_java_raw_to_ptrarray\u2019 is deprecated [-Wdeprecated-declarations]\n+../../../libffi/src/java_raw_api.c:328:3: warning: \u2018ffi_java_raw_size\u2019 is deprecated [-Wdeprecated-declarations]\n+../../../libffi/src/java_raw_api.c:331:3: warning: \u2018ffi_java_ptrarray_to_raw\u2019 is deprecated [-Wdeprecated-declarations]\n+../../../libffi/src/java_raw_api.c:369:3: warning: \u2018ffi_prep_java_raw_closure_loc\u2019 is deprecated [-Wdeprecated-declarations]\n+../../../libffi/src/x86/ffi64.c:783:1: warning: label \u2018out\u2019 defined but not used [-Wunused-label]\n+../../../libffi/src/x86/ffiw64.c:250:1: warning: label \u2018out\u2019 defined but not used [-Wunused-label]\n+../../../libssp/ssp.c:172:11: warning: array subscript 0 is outside array bounds of \u2018volatile int[0]\u2019 [-Warray-bounds]\n+../../c++tools/server.cc:486:11: warning: ignoring return value of \u2018ssize_t write(int, const void*, size_t)\u2019, declared with attribute warn_unused_result [-Wunused-result]\n+../../c++tools/server.cc:616:10: warning: ignoring return value of \u2018int pipe(int*)\u2019, declared with attribute warn_unused_result [-Wunused-result]\n+../../gcc/../libgcc/libgcov-util.c:465:9: warning: ignoring return value of \u2018int chdir(const char*)\u2019, declared with attribute warn_unused_result [-Wunused-result]\n+../../gcc/analyzer/engine.cc:1521:3: warning: too many arguments for format [-Wformat-extra-args]\n+../../gcc/analyzer/engine.cc:1521:60: warning: unknown conversion type character \u2018@\u2019 in format [-Wformat=]\n+../../gcc/analyzer/program-state.cc:1252:20: warning: format not a string literal and no format arguments [-Wformat-security]\n+../../gcc/analyzer/sm-file.cc:181:34: warning: too many arguments for format [-Wformat-extra-args]\n+../../gcc/analyzer/sm-file.cc:181:70: warning: unknown conversion type character \u2018@\u2019 in format [-Wformat=]\n+../../gcc/analyzer/sm-file.cc:231:31: warning: too many arguments for format [-Wformat-extra-args]\n+../../gcc/analyzer/sm-file.cc:231:63: warning: unknown conversion type character \u2018@\u2019 in format [-Wformat=]\n+../../gcc/analyzer/sm-file.cc:234:31: warning: too many arguments for format [-Wformat-extra-args]\n+../../gcc/analyzer/sm-file.cc:234:59: warning: unknown conversion type character \u2018@\u2019 in format [-Wformat=]\n+../../gcc/analyzer/sm-malloc.cc:1023:36: warning: too many arguments for format [-Wformat-extra-args]\n+../../gcc/analyzer/sm-malloc.cc:1023:61: warning: unknown conversion type character \u2018@\u2019 in format [-Wformat=]\n+../../gcc/analyzer/sm-malloc.cc:1193:31: warning: too many arguments for format [-Wformat-extra-args]\n+../../gcc/analyzer/sm-malloc.cc:1193:67: warning: unknown conversion type character \u2018@\u2019 in format [-Wformat=]\n+../../gcc/analyzer/sm-malloc.cc:1196:31: warning: too many arguments for format [-Wformat-extra-args]\n+../../gcc/analyzer/sm-malloc.cc:1196:69: warning: unknown conversion type character \u2018@\u2019 in format [-Wformat=]\n+../../gcc/analyzer/sm-malloc.cc:1199:31: warning: too many arguments for format [-Wformat-extra-args]\n+../../gcc/analyzer/sm-malloc.cc:1200:28: warning: unknown conversion type character \u2018@\u2019 in format [-Wformat=]\n+../../gcc/analyzer/sm-malloc.cc:1269:31: warning: too many arguments for format [-Wformat-extra-args]\n+../../gcc/analyzer/sm-malloc.cc:1269:66: warning: unknown conversion type character \u2018@\u2019 in format [-Wformat=]\n+../../gcc/analyzer/sm-malloc.cc:1277:31: warning: too many arguments for format [-Wformat-extra-args]\n+../../gcc/analyzer/sm-malloc.cc:1277:66: warning: unknown conversion type character \u2018@\u2019 in format [-Wformat=]\n+../../gcc/analyzer/sm-malloc.cc:795:7: warning: too many arguments for format [-Wformat-extra-args]\n+../../gcc/analyzer/sm-malloc.cc:796:24: warning: unknown conversion type character \u2018@\u2019 in format [-Wformat=]\n+../../gcc/analyzer/sm-malloc.cc:796:54: warning: format \u2018%s\u2019 expects argument of type \u2018char*\u2019, but argument 4 has type \u2018diagnostic_event_id_t*\u2019 [-Wformat=]\n+../../gcc/analyzer/sm-malloc.cc:801:7: warning: too many arguments for format [-Wformat-extra-args]\n+../../gcc/analyzer/sm-malloc.cc:802:23: warning: unknown conversion type character \u2018@\u2019 in format [-Wformat=]\n+../../gcc/analyzer/sm-malloc.cc:859:34: warning: too many arguments for format [-Wformat-extra-args]\n+../../gcc/analyzer/sm-malloc.cc:859:70: warning: unknown conversion type character \u2018@\u2019 in format [-Wformat=]\n+../../gcc/analyzer/sm-malloc.cc:930:34: warning: too many arguments for format [-Wformat-extra-args]\n+../../gcc/analyzer/sm-malloc.cc:930:76: warning: unknown conversion type character \u2018@\u2019 in format [-Wformat=]\n+../../gcc/analyzer/sm-sensitive.cc:138:34: warning: too many arguments for format [-Wformat-extra-args]\n+../../gcc/analyzer/sm-sensitive.cc:139:22: warning: unknown conversion type character \u2018@\u2019 in format [-Wformat=]\n+../../gcc/c-family/c-common.cc:6580:30: warning: format not a string literal and no format arguments [-Wformat-security]\n+../../gcc/c-family/c-common.cc:6584:33: warning: format not a string literal and no format arguments [-Wformat-security]\n+../../gcc/c/c-convert.cc:84:31: warning: format not a string literal and no format arguments [-Wformat-security]\n+../../gcc/c/c-typeck.cc:11850:42: warning: format not a string literal and no format arguments [-Wformat-security]\n+../../gcc/c/c-typeck.cc:3689:28: warning: format not a string literal and no format arguments [-Wformat-security]\n+../../gcc/c/c-typeck.cc:4448:42: warning: format not a string literal and no format arguments [-Wformat-security]\n+../../gcc/c/c-typeck.cc:6616:43: warning: format not a string literal and no format arguments [-Wformat-security]\n+../../gcc/collect-utils.cc:237:37: warning: format not a string literal and no format arguments [-Wformat-security]\n+../../gcc/collect2.cc:2397:37: warning: format not a string literal and no format arguments [-Wformat-security]\n+../../gcc/config/i386/i386.cc:21446:32: warning: too many arguments for format [-Wformat-extra-args]\n+../../gcc/config/i386/i386.cc:21446:32: warning: unknown conversion type character \u2018{\u2019 in format [-Wformat=]\n+../../gcc/config/i386/i386.cc:21446:32: warning: unknown conversion type character \u2018}\u2019 in format [-Wformat=]\n+../../gcc/config/i386/i386.cc:2535:8: warning: too many arguments for format [-Wformat-extra-args]\n+../../gcc/config/i386/i386.cc:2535:8: warning: unknown conversion type character \u2018{\u2019 in format [-Wformat=]\n+../../gcc/config/i386/i386.cc:2535:8: warning: unknown conversion type character \u2018}\u2019 in format [-Wformat=]\n+../../gcc/diagnostic.cc:2021:52: warning: format not a string literal and no format arguments [-Wformat-security]\n+../../gcc/fold-const.cc:305:42: warning: format not a string literal and no format arguments [-Wformat-security]\n+../../gcc/gcc.cc:10560:12: warning: ignoring return value of \u2018ssize_t read(int, void*, size_t)\u2019, declared with attribute warn_unused_result [-Wunused-result]\n+../../gcc/gcc.cc:7776:9: warning: ignoring return value of \u2018ssize_t write(int, const void*, size_t)\u2019, declared with attribute warn_unused_result [-Wunused-result]\n+../../gcc/gcc.cc:7779:13: warning: ignoring return value of \u2018ssize_t write(int, const void*, size_t)\u2019, declared with attribute warn_unused_result [-Wunused-result]\n+../../gcc/gcc.cc:7780:13: warning: ignoring return value of \u2018ssize_t write(int, const void*, size_t)\u2019, declared with attribute warn_unused_result [-Wunused-result]\n+../../gcc/gcc.cc:7782:9: warning: ignoring return value of \u2018ssize_t write(int, const void*, size_t)\u2019, declared with attribute warn_unused_result [-Wunused-result]\n+../../gcc/genhooks.cc:112:17: warning: ignoring return value of \u2018int fscanf(FILE*, const char*, ...)\u2019, declared with attribute warn_unused_result [-Wunused-result]\n+../../gcc/genhooks.cc:121:14: warning: ignoring return value of \u2018int fscanf(FILE*, const char*, ...)\u2019, declared with attribute warn_unused_result [-Wunused-result]\n+../../gcc/genhooks.cc:174:14: warning: ignoring return value of \u2018int fscanf(FILE*, const char*, ...)\u2019, declared with attribute warn_unused_result [-Wunused-result]\n+../../gcc/genhooks.cc:180:14: warning: ignoring return value of \u2018int fscanf(FILE*, const char*, ...)\u2019, declared with attribute warn_unused_result [-Wunused-result]\n+../../gcc/gimple-range-gori.cc:411:22: warning: format not a string literal and no format arguments [-Wformat-security]\n+../../gcc/gimple-ssa-warn-access.cc:3954:15: warning: too many arguments for format [-Wformat-extra-args]\n+../../gcc/gimple-ssa-warn-access.cc:3962:11: warning: too many arguments for format [-Wformat-extra-args]\n+../../gcc/ipa-devirt.cc:951:47: warning: format not a string literal and no format arguments [-Wformat-security]\n+../../gcc/lto-wrapper.cc:1131:8: warning: ignoring return value of \u2018ssize_t read(int, void*, size_t)\u2019, declared with attribute warn_unused_result [-Wunused-result]\n+../../gcc/lto-wrapper.cc:1376:52: warning: format not a string literal and no format arguments [-Wformat-security]\n+../../gcc/lto-wrapper.cc:1957:35: warning: format not a string literal and no format arguments [-Wformat-security]\n+../../gcc/lto/lto-common.cc:2072:10: warning: ignoring return value of \u2018int fscanf(FILE*, const char*, ...)\u2019, declared with attribute warn_unused_result [-Wunused-result]\n+../../gcc/lto/lto-common.cc:2074:9: warning: ignoring return value of \u2018size_t fread(void*, size_t, size_t, FILE*)\u2019, declared with attribute warn_unused_result [-Wunused-result]\n+../../gcc/lto/lto-common.cc:2094:10: warning: ignoring return value of \u2018int fscanf(FILE*, const char*, ...)\u2019, declared with attribute warn_unused_result [-Wunused-result]\n+../../gcc/omp-low.cc:10527:19: warning: \u2018T\u2019 conversion used within a quoted sequence [-Wformat=]\n+../../gcc/omp-offload.cc:2241:22: warning: \u2018T\u2019 conversion used within a quoted sequence [-Wformat=]\n+../../gcc/omp-offload.cc:2279:22: warning: \u2018T\u2019 conversion used within a quoted sequence [-Wformat=]\n+../../gcc/tree-diagnostic-path.cc:177:21: warning: too many arguments for format [-Wformat-extra-args]\n+../../gcc/tree-diagnostic-path.cc:177:24: warning: unknown conversion type character \u2018@\u2019 in format [-Wformat=]\n+../../gcc/tree-diagnostic-path.cc:177:28: warning: format \u2018%s\u2019 expects argument of type \u2018char*\u2019, but argument 3 has type \u2018diagnostic_event_id_t*\u2019 [-Wformat=]\n+../../gcc/tree-diagnostic-path.cc:467:12: warning: format \u2018%s\u2019 expects argument of type \u2018char*\u2019, but argument 3 has type \u2018diagnostic_event_id_t*\u2019 [-Wformat=]\n+../../gcc/tree-diagnostic-path.cc:467:7: warning: too many arguments for format [-Wformat-extra-args]\n+../../gcc/tree-diagnostic-path.cc:467:9: warning: unknown conversion type character \u2018@\u2019 in format [-Wformat=]\n+../../gcc/tree-diagnostic-path.cc:68:21: warning: too many arguments for format [-Wformat-extra-args]\n+../../gcc/tree-diagnostic-path.cc:68:23: warning: unknown conversion type character \u2018@\u2019 in format [-Wformat=]\n+../../gcc/tree-diagnostic-path.cc:68:26: warning: format \u2018%s\u2019 expects argument of type \u2018char*\u2019, but argument 3 has type \u2018diagnostic_event_id_t*\u2019 [-Wformat=]\n+../../gcc/tree-ssa-sccvn.cc:280:67: warning: format not a string literal and no format arguments [-Wformat-security]\n+../../libcpp/expr.cc:808:18: warning: format not a string literal and no format arguments [-Wformat-security]\n+../../libcpp/expr.cc:811:39: warning: format not a string literal and no format arguments [-Wformat-security]\n+../../libcpp/expr.cc:821:34: warning: format not a string literal and no format arguments [-Wformat-security]\n+../../libcpp/macro.cc:186:23: warning: format not a string literal and no format arguments [-Wformat-security]\n+../../libcpp/macro.cc:215:24: warning: format not a string literal and no format arguments [-Wformat-security]\n+../../libcpp/macro.cc:3701:58: warning: format not a string literal and no format arguments [-Wformat-security]\n+../../libcpp/macro.cc:3716:58: warning: format not a string literal and no format arguments [-Wformat-security]\n+/home/runner/work/gccrs/gccrs/gccrs-build/x86_64-pc-linux-gnu/32/libssp/../../../../libssp/gets-chk.c:74: warning: the `gets' function is dangerous and should not be used.\n+/home/runner/work/gccrs/gccrs/gccrs-build/x86_64-pc-linux-gnu/libssp/../../../libssp/gets-chk.c:74: warning: the `gets' function is dangerous and should not be used.\n+Makefile:864: warning: ignoring old recipe for target 'all-multi'\n+Makefile:864: warning: ignoring old recipe for target 'all-multi'\n+Makefile:864: warning: ignoring old recipe for target 'all-multi'\n+Makefile:864: warning: ignoring old recipe for target 'all-multi'\n+Makefile:864: warning: ignoring old recipe for target 'all-multi'\n+Makefile:864: warning: ignoring old recipe for target 'all-multi'\n+Makefile:864: warning: ignoring old recipe for target 'all-multi'\n+Makefile:873: warning: overriding recipe for target 'all-multi'\n+Makefile:873: warning: overriding recipe for target 'all-multi'\n+Makefile:873: warning: overriding recipe for target 'all-multi'\n+Makefile:873: warning: overriding recipe for target 'all-multi'\n+Makefile:873: warning: overriding recipe for target 'all-multi'\n+Makefile:873: warning: overriding recipe for target 'all-multi'\n+Makefile:873: warning: overriding recipe for target 'all-multi'\n+gengtype-lex.cc:357:15: warning: this statement may fall through [-Wimplicit-fallthrough=]\n+gengtype-lex.cc:357:15: warning: this statement may fall through [-Wimplicit-fallthrough=]\n+gengtype-lex.cc:357:15: warning: this statement may fall through [-Wimplicit-fallthrough=]\n+gengtype-lex.cc:357:15: warning: this statement may fall through [-Wimplicit-fallthrough=]\n+libtool: install: warning: remember to run `libtool --finish /usr/local/libexec/gcc/x86_64-pc-linux-gnu/12.0.1'"}, {"sha": "5e9e5f4a0e413ff55a6207704e3a5a1a288b1d30", "filename": ".github/workflows/ccpp.yml", "status": "modified", "additions": 17, "deletions": 1, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d34c120c4754b921ac0520585cfef0e7a0bbb29/.github%2Fworkflows%2Fccpp.yml", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d34c120c4754b921ac0520585cfef0e7a0bbb29/.github%2Fworkflows%2Fccpp.yml", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/.github%2Fworkflows%2Fccpp.yml?ref=1d34c120c4754b921ac0520585cfef0e7a0bbb29", "patch": "@@ -11,6 +11,10 @@ on:\n jobs:\n   build-and-check:\n \n+    env:\n+      # Force locale, in particular for reproducible results re '.github/bors_log_expected_warnings' (see below).\n+      LC_ALL: C.UTF-8\n+\n     runs-on: ubuntu-latest\n \n     steps:\n@@ -44,9 +48,21 @@ jobs:\n                --enable-multilib\n \n     - name: Build\n+      shell: bash\n       run: |\n            cd gccrs-build; \\\n-           make -j $(nproc)\n+           make -j $(nproc) 2>&1 | tee log\n+\n+    - name: Check for new warnings\n+      run: |\n+           cd gccrs-build\n+           < log grep 'warning: ' | sort > log_warnings\n+           if diff -U0 ../.github/bors_log_expected_warnings log_warnings; then\n+               :\n+           else\n+               echo 'See <https://github.com/Rust-GCC/gccrs/pull/1026>.'\n+               exit 1\n+           fi >&2\n \n     - name: Run Tests\n       run: |"}, {"sha": "9675b11e669b4fca3a965c3a0a9db66d8c3f3e4b", "filename": "README.md", "status": "modified", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d34c120c4754b921ac0520585cfef0e7a0bbb29/README.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d34c120c4754b921ac0520585cfef0e7a0bbb29/README.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/README.md?ref=1d34c120c4754b921ac0520585cfef0e7a0bbb29", "patch": "@@ -202,6 +202,45 @@ Please see the [Contributing to GCC](https://gcc.gnu.org/contribute.html) guide\n Not all contributions must be code; we would love to see new test cases or bugs and issues to be reported. \n Feel free to add any comments on open PRs\n \n+\n+## Continuous Integration\n+\n+When submitting (or updating) a [GitHub Pull Request](https://github.com/Rust-GCC/gccrs/pull/),\n+several automated checks are run.\n+Generally, a \"green status\" is necessary before merge.\n+\n+\n+### Compiler Diagnostics\n+\n+That is, here, diagnostics emitted by the \"initial\" compiler used to build GCC/Rust.\n+\n+If building a native toolchain,\n+GCC by default does a 3-stage bootstrap build (<https://gcc.gnu.org/install/configure.html>).\n+In addition to making sure that GCC is able to reproduce itself bit-by-bit,\n+this also means that stages 2+ are built with `-Werror`\n+(turning most _warning_ into _error_ diagnostics; see `--enable-werror`,\n+possibly enabled by default).\n+This helps to catch a good number of bugs, because it enforces that GCC compiles without compiler diagnostics;\n+it's a requirement for upstream patch submission (<https://gcc.gnu.org/contribute.html#testing>).\n+\n+GCC generally is only expected to be \"warning-clean\" without `--disable-bootstrap`\n+(that is, default `--enable-bootstrap` for a native build),\n+and not for the initial stage where it's using the \"initial\" compiler -- otherwise\n+we're at the mercy of whatever \"initial\" compiler we're using.\n+Doing a `--disable-bootstrap` build is much faster, of course, so we're often doing that:\n+for example, per the instructions above, or in the standard CI.\n+With that, we're missing out on the aspect that _enforces that GCC compiles without compiler diagnostics_.\n+\n+To encounter that, the default CI has a [_check for new warnings_ step](https://github.com/Rust-GCC/gccrs/pull/1026)\n+that verifies in the CI `--disable-bootstrap` build configuration that no new warnings are introduced.\n+If that step fails, it usually points out a new _warning_ you've introduced erroneously, and should address.\n+Occasionally it means that simply the `.github/bors_log_expected_warnings` file needs to be updated,\n+for example if due to any kind of \"environmental changes\" (for example, CI \"initial\" compiler changes).\n+Unless diligently reproducing the CI configuration (in particular \"initial\" compiler, GCC version),\n+it's not really feasible to reproduce this check locally.\n+If in doubt, do a local `--enable-bootstrap` build, or submit your changes, and wait for the CI system's results.\n+\n+\n ## Community\n \n We can be found on all usual Rust channels such as Zulip, but we also have our own channels:"}]}