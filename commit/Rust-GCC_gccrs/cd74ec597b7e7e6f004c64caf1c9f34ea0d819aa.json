{"sha": "cd74ec597b7e7e6f004c64caf1c9f34ea0d819aa", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2Q3NGVjNTk3YjdlN2U2ZjAwNGM2NGNhZjFjOWYzNGVhMGQ4MTlhYQ==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@hxi.com", "date": "2002-01-26T15:29:52Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2002-01-26T15:29:52Z"}, "message": "h8300.md: Remove bit test patterns that cannot be triggered.\n\n\t* config/h8300/h8300.md: Remove bit test patterns that cannot\n\tbe triggered.\n\tRestrict each bit test pattern to a variant on which the\n\tpattern is tested.\n\nFrom-SVN: r49247", "tree": {"sha": "d09018f34328877c6ed765a95a250492304df574", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d09018f34328877c6ed765a95a250492304df574"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cd74ec597b7e7e6f004c64caf1c9f34ea0d819aa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cd74ec597b7e7e6f004c64caf1c9f34ea0d819aa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cd74ec597b7e7e6f004c64caf1c9f34ea0d819aa", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cd74ec597b7e7e6f004c64caf1c9f34ea0d819aa/comments", "author": null, "committer": null, "parents": [{"sha": "93051e0f933b81a222c70ac868a15e12160c7c29", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/93051e0f933b81a222c70ac868a15e12160c7c29", "html_url": "https://github.com/Rust-GCC/gccrs/commit/93051e0f933b81a222c70ac868a15e12160c7c29"}], "stats": {"total": 54, "additions": 22, "deletions": 32}, "files": [{"sha": "a89a3cc09147da868cdf612ec97521249571fbc4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd74ec597b7e7e6f004c64caf1c9f34ea0d819aa/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd74ec597b7e7e6f004c64caf1c9f34ea0d819aa/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=cd74ec597b7e7e6f004c64caf1c9f34ea0d819aa", "patch": "@@ -1,3 +1,10 @@\n+2002-01-26  Kazu Hirata  <kazu@hxi.com>\n+\n+\t* config/h8300/h8300.md: Remove bit test patterns that cannot\n+\tbe triggered.\n+\tRestrict each bit test pattern to a variant on which the\n+\tpattern is tested.\n+\n 2002-01-26  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n \t* builtins.c (expand_builtin_strncat): Remove redundant check for"}, {"sha": "27cb07cfa3abc1dc4d8325e800ca362d11d42865", "filename": "gcc/config/h8300/h8300.md", "status": "modified", "additions": 15, "deletions": 32, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd74ec597b7e7e6f004c64caf1c9f34ea0d819aa/gcc%2Fconfig%2Fh8300%2Fh8300.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd74ec597b7e7e6f004c64caf1c9f34ea0d819aa/gcc%2Fconfig%2Fh8300%2Fh8300.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fh8300%2Fh8300.md?ref=cd74ec597b7e7e6f004c64caf1c9f34ea0d819aa", "patch": "@@ -550,56 +550,39 @@\n ;; TEST INSTRUCTIONS\n ;; ----------------------------------------------------------------------\n \n-(define_insn \"\"\n-  [(set (cc0) (zero_extract:QI (match_operand:QI 0 \"bit_memory_operand\" \"r,U\")\n-\t\t\t       (const_int 1)\n-\t\t\t       (match_operand:QI 1 \"const_int_operand\" \"n,n\")))]\n-  \"\"\n-  \"btst\t%Z1,%R0\"\n-  [(set_attr \"length\" \"2,8\")\n-   (set_attr \"cc\" \"set_zn,set_zn\")])\n-\n (define_insn \"\"\n   [(set (cc0) (zero_extract:HI (match_operand:QI 0 \"bit_memory_operand\" \"r,U\")\n \t\t\t       (const_int 1)\n-\t\t\t       (match_operand:QI 1 \"const_int_operand\" \"n,n\")))]\n-  \"\"\n+\t\t\t       (match_operand 1 \"const_int_operand\" \"n,n\")))]\n+  \"TARGET_H8300\"\n   \"btst\t%Z1,%Y0\"\n-  [(set_attr \"length\" \"2,8\")\n+  [(set_attr \"length\" \"2,4\")\n    (set_attr \"cc\" \"set_zn,set_zn\")])\n \n (define_insn \"\"\n-  [(set (cc0) (zero_extract:SI (match_operand:QI 0 \"bit_memory_operand\" \"r,U\")\n+  [(set (cc0) (zero_extract:HI (match_operand:HI 0 \"register_operand\" \"r\")\n \t\t\t       (const_int 1)\n-\t\t\t       (match_operand:QI 1 \"const_int_operand\" \"n,n\")))]\n-  \"\"\n+\t\t\t       (match_operand 1 \"const_int_operand\" \"n\")))]\n+  \"TARGET_H8300\"\n   \"btst\t%Z1,%Y0\"\n-  [(set_attr \"length\" \"2,8\")\n-   (set_attr \"cc\" \"set_zn,set_zn\")])\n-\n-(define_insn \"\"\n-  [(set (cc0) (zero_extract:QI (match_operand:HI 0 \"register_operand\" \"r\")\n-\t\t\t       (const_int 1)\n-\t\t\t       (match_operand:HI 1 \"const_int_operand\" \"n\")))]\n-  \"\"\n-  \"btst\t%Z1,%R0\"\n   [(set_attr \"length\" \"2\")\n    (set_attr \"cc\" \"set_zn\")])\n \n (define_insn \"\"\n-  [(set (cc0) (zero_extract:HI (match_operand:HI 0 \"register_operand\" \"r\")\n+  [(set (cc0) (zero_extract:SI (match_operand:QI 0 \"bit_memory_operand\" \"r,U\")\n \t\t\t       (const_int 1)\n-\t\t\t       (match_operand:HI 1 \"const_int_operand\" \"n\")))]\n-  \"\"\n+\t\t\t       (match_operand 1 \"const_int_operand\" \"n,n\")))]\n+  \"TARGET_H8300H || TARGET_H8300S\"\n   \"btst\t%Z1,%Y0\"\n-  [(set_attr \"length\" \"2\")\n-   (set_attr \"cc\" \"set_zn\")])\n+  [(set_attr \"length\" \"2,8\")\n+   (set_attr \"cc\" \"set_zn,set_zn\")])\n \n (define_insn \"\"\n-  [(set (cc0) (zero_extract:SI (match_operand:HI 0 \"register_operand\" \"r\")\n+  [(set (cc0) (zero_extract:SI (match_operand:SI 0 \"register_operand\" \"r\")\n \t\t\t       (const_int 1)\n-\t\t\t       (match_operand:HI 1 \"const_int_operand\" \"n\")))]\n-  \"\"\n+\t\t\t       (match_operand 1 \"const_int_operand\" \"n\")))]\n+  \"(TARGET_H8300H || TARGET_H8300S)\n+   && INTVAL (operands[1]) <= 15\"\n   \"btst\t%Z1,%Y0\"\n   [(set_attr \"length\" \"2\")\n    (set_attr \"cc\" \"set_zn\")])"}]}