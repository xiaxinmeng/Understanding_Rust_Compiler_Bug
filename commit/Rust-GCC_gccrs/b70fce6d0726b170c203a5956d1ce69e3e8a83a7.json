{"sha": "b70fce6d0726b170c203a5956d1ce69e3e8a83a7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjcwZmNlNmQwNzI2YjE3MGMyMDNhNTk1NmQxY2U2OWUzZThhODNhNw==", "commit": {"author": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2011-05-03T16:51:24Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2011-05-03T16:51:24Z"}, "message": "expmed.c (extract_bit_field_1): Remove write-only variable \"icode\".\n\n\t* expmed.c (extract_bit_field_1): Remove write-only variable \"icode\".\n\nFrom-SVN: r173331", "tree": {"sha": "be3ab80856483d67e1c0d133a087b65a73af6b8c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/be3ab80856483d67e1c0d133a087b65a73af6b8c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b70fce6d0726b170c203a5956d1ce69e3e8a83a7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b70fce6d0726b170c203a5956d1ce69e3e8a83a7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b70fce6d0726b170c203a5956d1ce69e3e8a83a7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b70fce6d0726b170c203a5956d1ce69e3e8a83a7/comments", "author": null, "committer": null, "parents": [{"sha": "265b1d82bf8873b177f849d79509a90b3e753dc3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/265b1d82bf8873b177f849d79509a90b3e753dc3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/265b1d82bf8873b177f849d79509a90b3e753dc3"}], "stats": {"total": 11, "additions": 7, "deletions": 4}, "files": [{"sha": "5a9048e6b489d4c66a51248ed651fef98412bbff", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b70fce6d0726b170c203a5956d1ce69e3e8a83a7/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b70fce6d0726b170c203a5956d1ce69e3e8a83a7/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b70fce6d0726b170c203a5956d1ce69e3e8a83a7", "patch": "@@ -1,3 +1,7 @@\n+2011-05-03  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* expmed.c (extract_bit_field_1): Remove write-only variable \"icode\".\n+\n 2011-05-03  Stuart Henderson  <shenders@gcc.gnu.org>\n \n \tFrom Bernd Schmidt:\n@@ -105,12 +109,13 @@\n \t* tree-ssa-threadupdate.c (THREAD_TARGET): define.\n \t(remove_ctrl_stmt_and_useless_edges): Clear AUX field of outgoing edges.\n \t(craete_edge_and_update_destination_phis): Use THREAD_TARGET rather\n-\tthan accessing AUX field directly.  Free the AUX field before\t\t\tclearing it.\n+\tthan accessing AUX field directly.  Free the AUX field before\n+\tclearing it.\n \t(thread_block, thread_through_loop_header): Likewise.\n \t(thread_single_edge, mark_threaded_blocks): Likewise.\n \t(redirect_edges): Delay clearing the AUX field.  Free the AUX field.\n \t(register_jump_thread): Do not attempt to thread to a NULL edge.\n-\t\n+\n 2011-05-03  Bernd Schmidt  <bernds@codesourcery.com>\n \n \t* function.c (init_function_start): Call decide_function_section."}, {"sha": "748274741f5388631ab099599c24e4279d52cbda", "filename": "gcc/expmed.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b70fce6d0726b170c203a5956d1ce69e3e8a83a7/gcc%2Fexpmed.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b70fce6d0726b170c203a5956d1ce69e3e8a83a7/gcc%2Fexpmed.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpmed.c?ref=b70fce6d0726b170c203a5956d1ce69e3e8a83a7", "patch": "@@ -1127,7 +1127,6 @@ extract_bit_field_1 (rtx str_rtx, unsigned HOST_WIDE_INT bitsize,\n   enum machine_mode int_mode;\n   enum machine_mode ext_mode;\n   enum machine_mode mode1;\n-  enum insn_code icode;\n   int byte_offset;\n \n   if (tmode == VOIDmode)\n@@ -1431,7 +1430,6 @@ extract_bit_field_1 (rtx str_rtx, unsigned HOST_WIDE_INT bitsize,\n \n   /* Now OFFSET is nonzero only for memory operands.  */\n   ext_mode = mode_for_extraction (unsignedp ? EP_extzv : EP_extv, 0);\n-  icode = unsignedp ? CODE_FOR_extzv : CODE_FOR_extv;\n   if (ext_mode != MAX_MACHINE_MODE\n       && bitsize > 0\n       && GET_MODE_BITSIZE (ext_mode) >= bitsize"}]}