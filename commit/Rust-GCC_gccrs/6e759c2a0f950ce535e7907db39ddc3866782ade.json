{"sha": "6e759c2a0f950ce535e7907db39ddc3866782ade", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmU3NTljMmEwZjk1MGNlNTM1ZTc5MDdkYjM5ZGRjMzg2Njc4MmFkZQ==", "commit": {"author": {"name": "Bob Duff", "email": "duff@adacore.com", "date": "2017-01-12T13:18:47Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2017-01-12T13:18:47Z"}, "message": "contracts.adb, [...] (Pragma_Name): Change name to Pragma_Name_Unmapped.\n\n2017-01-12  Bob Duff  <duff@adacore.com>\n\n\t* contracts.adb, einfo.adb, errout.adb, exp_attr.adb,\n\texp_ch3.adb, exp_ch7.adb, exp_ch9.adb, exp_prag.adb, freeze.adb,\n\tfrontend.adb, ghost.adb, inline.adb, lib-writ.adb, lib-xref.adb,\n\tpar.adb, par-ch10.adb, par-ch2.adb, par-prag.adb, par_sco.adb,\n\tsem_attr.adb, sem_aux.adb, sem_ch10.adb, sem_ch12.adb,\n\tsem_ch13.adb, sem_ch6.adb, sem_ch8.adb, sem_ch9.adb, sem_elab.adb,\n\tsem_prag.adb, sem_res.adb, sem_util.adb, sem_util.ads,\n\tsem_warn.adb, sinfo.adb, sinfo.ads, sprint.adb (Pragma_Name):\n\tChange name to Pragma_Name_Unmapped.\n\t(Pragma_Name_Mapped): Change name to Pragma_Name.\n\tThis is because the \"mapped\" version should be the usual case.\n\nFrom-SVN: r244352", "tree": {"sha": "34bbc627f9d596a221f332486cdfee42a77f8d6b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/34bbc627f9d596a221f332486cdfee42a77f8d6b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6e759c2a0f950ce535e7907db39ddc3866782ade", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6e759c2a0f950ce535e7907db39ddc3866782ade", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6e759c2a0f950ce535e7907db39ddc3866782ade", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6e759c2a0f950ce535e7907db39ddc3866782ade/comments", "author": {"login": "bobduff", "id": 29099567, "node_id": "MDQ6VXNlcjI5MDk5NTY3", "avatar_url": "https://avatars.githubusercontent.com/u/29099567?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bobduff", "html_url": "https://github.com/bobduff", "followers_url": "https://api.github.com/users/bobduff/followers", "following_url": "https://api.github.com/users/bobduff/following{/other_user}", "gists_url": "https://api.github.com/users/bobduff/gists{/gist_id}", "starred_url": "https://api.github.com/users/bobduff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bobduff/subscriptions", "organizations_url": "https://api.github.com/users/bobduff/orgs", "repos_url": "https://api.github.com/users/bobduff/repos", "events_url": "https://api.github.com/users/bobduff/events{/privacy}", "received_events_url": "https://api.github.com/users/bobduff/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "6bb4ea5cdf9664f2cec861a2a120192b4ac04d1f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6bb4ea5cdf9664f2cec861a2a120192b4ac04d1f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6bb4ea5cdf9664f2cec861a2a120192b4ac04d1f"}], "stats": {"total": 355, "additions": 190, "deletions": 165}, "files": [{"sha": "17a96807d2a8eb4c82192ab8a04fd644aa103ad5", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e759c2a0f950ce535e7907db39ddc3866782ade/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e759c2a0f950ce535e7907db39ddc3866782ade/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=6e759c2a0f950ce535e7907db39ddc3866782ade", "patch": "@@ -1,3 +1,17 @@\n+2017-01-12  Bob Duff  <duff@adacore.com>\n+\n+\t* contracts.adb, einfo.adb, errout.adb, exp_attr.adb,\n+\texp_ch3.adb, exp_ch7.adb, exp_ch9.adb, exp_prag.adb, freeze.adb,\n+\tfrontend.adb, ghost.adb, inline.adb, lib-writ.adb, lib-xref.adb,\n+\tpar.adb, par-ch10.adb, par-ch2.adb, par-prag.adb, par_sco.adb,\n+\tsem_attr.adb, sem_aux.adb, sem_ch10.adb, sem_ch12.adb,\n+\tsem_ch13.adb, sem_ch6.adb, sem_ch8.adb, sem_ch9.adb, sem_elab.adb,\n+\tsem_prag.adb, sem_res.adb, sem_util.adb, sem_util.ads,\n+\tsem_warn.adb, sinfo.adb, sinfo.ads, sprint.adb (Pragma_Name):\n+\tChange name to Pragma_Name_Unmapped.\n+\t(Pragma_Name_Mapped): Change name to Pragma_Name.\n+\tThis is because the \"mapped\" version should be the usual case.\n+\n 2017-01-09  Hristian Kirtchev  <kirtchev@adacore.com>\n \n \t* einfo.ads, einfo.adb: Remove uses of flags Has_Default_Init_Cond,"}, {"sha": "fbfc68440282f6c6530f6478da44432048c3e6a7", "filename": "gcc/ada/contracts.adb", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e759c2a0f950ce535e7907db39ddc3866782ade/gcc%2Fada%2Fcontracts.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e759c2a0f950ce535e7907db39ddc3866782ade/gcc%2Fada%2Fcontracts.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fcontracts.adb?ref=6e759c2a0f950ce535e7907db39ddc3866782ade", "patch": "@@ -118,7 +118,7 @@ package body Contracts is\n       --  A contract must contain only pragmas\n \n       pragma Assert (Nkind (Prag) = N_Pragma);\n-      Prag_Nam : constant Name_Id := Pragma_Name_Mapped (Prag);\n+      Prag_Nam : constant Name_Id := Pragma_Name (Prag);\n \n    --  Start of processing for Add_Contract_Item\n \n@@ -575,7 +575,7 @@ package body Contracts is\n \n          Prag := Contract_Test_Cases (Items);\n          while Present (Prag) loop\n-            Prag_Nam := Pragma_Name_Mapped (Prag);\n+            Prag_Nam := Pragma_Name (Prag);\n \n             if Prag_Nam = Name_Contract_Cases then\n \n@@ -604,7 +604,7 @@ package body Contracts is\n \n          Prag := Classifications (Items);\n          while Present (Prag) loop\n-            Prag_Nam := Pragma_Name_Mapped (Prag);\n+            Prag_Nam := Pragma_Name (Prag);\n \n             if Prag_Nam = Name_Depends then\n                Depends := Prag;\n@@ -1019,7 +1019,7 @@ package body Contracts is\n \n          Prag := Classifications (Items);\n          while Present (Prag) loop\n-            Prag_Nam := Pragma_Name_Mapped (Prag);\n+            Prag_Nam := Pragma_Name (Prag);\n \n             if Prag_Nam = Name_Initial_Condition then\n                Init_Cond := Prag;\n@@ -1785,7 +1785,7 @@ package body Contracts is\n             if Present (Items) then\n                Prag := Contract_Test_Cases (Items);\n                while Present (Prag) loop\n-                  if Pragma_Name_Mapped (Prag) = Name_Contract_Cases then\n+                  if Pragma_Name (Prag) = Name_Contract_Cases then\n                      Expand_Pragma_Contract_Cases\n                        (CCs     => Prag,\n                         Subp_Id => Subp_Id,\n@@ -1838,7 +1838,7 @@ package body Contracts is\n             if Present (Items) then\n                Prag := Pre_Post_Conditions (Items);\n                while Present (Prag) loop\n-                  if Pragma_Name_Mapped (Prag) = Post_Nam then\n+                  if Pragma_Name (Prag) = Post_Nam then\n                      Append_Enabled_Item\n                        (Item => Build_Pragma_Check_Equivalent (Prag),\n                         List => Stmts);\n@@ -1860,7 +1860,7 @@ package body Contracts is\n                   --  Note that non-matching pragmas are skipped\n \n                   if Nkind (Decl) = N_Pragma then\n-                     if Pragma_Name_Mapped (Decl) = Post_Nam then\n+                     if Pragma_Name (Decl) = Post_Nam then\n                         Append_Enabled_Item\n                           (Item => Build_Pragma_Check_Equivalent (Decl),\n                            List => Stmts);\n@@ -1902,7 +1902,7 @@ package body Contracts is\n             if Present (Items) then\n                Prag := Pre_Post_Conditions (Items);\n                while Present (Prag) loop\n-                  if Pragma_Name_Mapped (Prag) = Name_Postcondition then\n+                  if Pragma_Name (Prag) = Name_Postcondition then\n                      Append_Enabled_Item\n                        (Item => Build_Pragma_Check_Equivalent (Prag),\n                         List => Stmts);\n@@ -1922,7 +1922,7 @@ package body Contracts is\n                if Present (Items) then\n                   Prag := Pre_Post_Conditions (Items);\n                   while Present (Prag) loop\n-                     if Pragma_Name_Mapped (Prag) = Name_Postcondition\n+                     if Pragma_Name (Prag) = Name_Postcondition\n                        and then Class_Present (Prag)\n                      then\n                         Append_Enabled_Item\n@@ -2189,7 +2189,7 @@ package body Contracts is\n                if Present (Items) then\n                   Prag := Pre_Post_Conditions (Items);\n                   while Present (Prag) loop\n-                     if Pragma_Name_Mapped (Prag) = Name_Precondition\n+                     if Pragma_Name (Prag) = Name_Precondition\n                        and then Class_Present (Prag)\n                      then\n                         Check_Prag :=\n@@ -2238,7 +2238,7 @@ package body Contracts is\n             if Present (Items) then\n                Prag := Pre_Post_Conditions (Items);\n                while Present (Prag) loop\n-                  if Pragma_Name_Mapped (Prag) = Name_Precondition then\n+                  if Pragma_Name (Prag) = Name_Precondition then\n                      Prepend_To_Decls_Or_Save (Prag);\n                   end if;\n \n@@ -2263,7 +2263,7 @@ package body Contracts is\n                   --  Note that non-matching pragmas are skipped\n \n                   if Nkind (Decl) = N_Pragma then\n-                     if Pragma_Name_Mapped (Decl) = Name_Precondition then\n+                     if Pragma_Name (Decl) = Name_Precondition then\n                         Prepend_To_Decls_Or_Save (Decl);\n                      end if;\n "}, {"sha": "213bfa8ecb17fb34822740286482001875e807af", "filename": "gcc/ada/einfo.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e759c2a0f950ce535e7907db39ddc3866782ade/gcc%2Fada%2Feinfo.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e759c2a0f950ce535e7907db39ddc3866782ade/gcc%2Fada%2Feinfo.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.adb?ref=6e759c2a0f950ce535e7907db39ddc3866782ade", "patch": "@@ -7364,7 +7364,7 @@ package body Einfo is\n \n       while Present (Item) loop\n          if Nkind (Item) = N_Pragma\n-           and then Get_Pragma_Id (Pragma_Name (Item)) = Id\n+           and then Get_Pragma_Id (Pragma_Name_Unmapped (Item)) = Id\n          then\n             return Item;\n \n@@ -7416,7 +7416,7 @@ package body Einfo is\n       Ritem := First_Rep_Item (Id);\n       while Present (Ritem) loop\n          if Nkind (Ritem) = N_Pragma\n-           and then Pragma_Name_Mapped (Ritem) = Name_Attach_Handler\n+           and then Pragma_Name (Ritem) = Name_Attach_Handler\n          then\n             return True;\n          else\n@@ -7486,7 +7486,7 @@ package body Einfo is\n       Ritem := First_Rep_Item (Id);\n       while Present (Ritem) loop\n          if Nkind (Ritem) = N_Pragma\n-           and then Pragma_Name_Mapped (Ritem) = Name_Interrupt_Handler\n+           and then Pragma_Name (Ritem) = Name_Interrupt_Handler\n          then\n             return True;\n          else"}, {"sha": "49aa2a7765f2fdce47ab1aa22ebab97e42a79e8a", "filename": "gcc/ada/errout.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e759c2a0f950ce535e7907db39ddc3866782ade/gcc%2Fada%2Ferrout.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e759c2a0f950ce535e7907db39ddc3866782ade/gcc%2Fada%2Ferrout.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ferrout.adb?ref=6e759c2a0f950ce535e7907db39ddc3866782ade", "patch": "@@ -2800,7 +2800,7 @@ package body Errout is\n       --  identifiers, pragmas, and pragma argument associations.\n \n       if Nkind (Node) = N_Pragma then\n-         Nam := Pragma_Name_Mapped (Node);\n+         Nam := Pragma_Name (Node);\n          Loc := Sloc (Node);\n \n       --  The other cases have Chars fields"}, {"sha": "57905df14593fa880a4926429842a3a28945a610", "filename": "gcc/ada/exp_attr.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e759c2a0f950ce535e7907db39ddc3866782ade/gcc%2Fada%2Fexp_attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e759c2a0f950ce535e7907db39ddc3866782ade/gcc%2Fada%2Fexp_attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_attr.adb?ref=6e759c2a0f950ce535e7907db39ddc3866782ade", "patch": "@@ -8100,7 +8100,7 @@ package body Exp_Attr is\n       N := First_Rep_Item (Implementation_Base_Type (T));\n       while Present (N) loop\n          if Nkind (N) = N_Pragma\n-           and then Pragma_Name_Mapped (N) = Name_Stream_Convert\n+           and then Pragma_Name (N) = Name_Stream_Convert\n          then\n             --  For tagged types this pragma is not inherited, so we\n             --  must verify that it is defined for the given type and"}, {"sha": "9002c2690862e6081af159518c7fdd4c4a3a6bd4", "filename": "gcc/ada/exp_ch3.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e759c2a0f950ce535e7907db39ddc3866782ade/gcc%2Fada%2Fexp_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e759c2a0f950ce535e7907db39ddc3866782ade/gcc%2Fada%2Fexp_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch3.adb?ref=6e759c2a0f950ce535e7907db39ddc3866782ade", "patch": "@@ -2780,7 +2780,7 @@ package body Exp_Ch3 is\n                            --  Conversion for Priority expression\n \n                            if Nam = Name_Priority then\n-                              if Pragma_Name_Mapped (Ritem) = Name_Priority\n+                              if Pragma_Name (Ritem) = Name_Priority\n                                 and then not GNAT_Mode\n                               then\n                                  Exp := Convert_To (RTE (RE_Priority), Exp);"}, {"sha": "42826177e4a6abb428e846b414e98ab157b2a00a", "filename": "gcc/ada/exp_ch7.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e759c2a0f950ce535e7907db39ddc3866782ade/gcc%2Fada%2Fexp_ch7.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e759c2a0f950ce535e7907db39ddc3866782ade/gcc%2Fada%2Fexp_ch7.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch7.adb?ref=6e759c2a0f950ce535e7907db39ddc3866782ade", "patch": "@@ -4388,7 +4388,7 @@ package body Exp_Ch7 is\n             Rep_Item := First_Rep_Item (T);\n             while Present (Rep_Item) loop\n                if Nkind (Rep_Item) = N_Pragma\n-                 and then Pragma_Name_Mapped (Rep_Item) = Name_Invariant\n+                 and then Pragma_Name (Rep_Item) = Name_Invariant\n                then\n                   --  Stop the traversal of the rep item chain once a specific\n                   --  item is encountered."}, {"sha": "efffc28b9f80e37510387d6378f53f6d4bf638b5", "filename": "gcc/ada/exp_ch9.adb", "status": "modified", "additions": 12, "deletions": 11, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e759c2a0f950ce535e7907db39ddc3866782ade/gcc%2Fada%2Fexp_ch9.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e759c2a0f950ce535e7907db39ddc3866782ade/gcc%2Fada%2Fexp_ch9.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch9.adb?ref=6e759c2a0f950ce535e7907db39ddc3866782ade", "patch": "@@ -1400,8 +1400,8 @@ package body Exp_Ch9 is\n \n          Prag := Pre_Post_Conditions (Items);\n          while Present (Prag) loop\n-            if Nam_In (Pragma_Name (Prag), Name_Postcondition,\n-                                           Name_Precondition)\n+            if Nam_In (Pragma_Name_Unmapped (Prag),\n+                       Name_Postcondition, Name_Precondition)\n               and then Is_Checked (Prag)\n             then\n                Has_Pragma := True;\n@@ -1416,7 +1416,7 @@ package body Exp_Ch9 is\n \n          Prag := Contract_Test_Cases (Items);\n          while Present (Prag) loop\n-            if Pragma_Name_Mapped (Prag) = Name_Contract_Cases\n+            if Pragma_Name (Prag) = Name_Contract_Cases\n               and then Is_Checked (Prag)\n             then\n                Has_Pragma := True;\n@@ -9142,7 +9142,7 @@ package body Exp_Ch9 is\n                Ritem := First_Rep_Item (Prot_Typ);\n                while Present (Ritem) loop\n                   if Nkind (Ritem) = N_Pragma\n-                    and then Pragma_Name_Mapped (Ritem) = Name_Attach_Handler\n+                    and then Pragma_Name (Ritem) = Name_Attach_Handler\n                   then\n                      Num_Attach_Handler := Num_Attach_Handler + 1;\n                   end if;\n@@ -11682,7 +11682,7 @@ package body Exp_Ch9 is\n          N := First (Visible_Declarations (T));\n          while Present (N) loop\n             if Nkind (N) = N_Pragma\n-              and then Pragma_Name_Mapped (N) = Name_Relative_Deadline\n+              and then Pragma_Name (N) = Name_Relative_Deadline\n             then\n                return N;\n             end if;\n@@ -11693,7 +11693,7 @@ package body Exp_Ch9 is\n          N := First (Private_Declarations (T));\n          while Present (N) loop\n             if Nkind (N) = N_Pragma\n-              and then Pragma_Name_Mapped (N) = Name_Relative_Deadline\n+              and then Pragma_Name (N) = Name_Relative_Deadline\n             then\n                return N;\n             end if;\n@@ -13706,7 +13706,7 @@ package body Exp_Ch9 is\n \n                   --  Get_Rep_Item returns either priority pragma.\n \n-                  if Pragma_Name_Mapped (Prio_Clause) = Name_Priority then\n+                  if Pragma_Name (Prio_Clause) = Name_Priority then\n                      Prio_Type := RTE (RE_Any_Priority);\n                   else\n                      Prio_Type := RTE (RE_Interrupt_Priority);\n@@ -13940,7 +13940,7 @@ package body Exp_Ch9 is\n \n             while Present (Ritem) loop\n                if Nkind (Ritem) = N_Pragma\n-                 and then Pragma_Name_Mapped (Ritem) = Name_Attach_Handler\n+                 and then Pragma_Name (Ritem) = Name_Attach_Handler\n                then\n                   declare\n                      Handler : constant Node_Id :=\n@@ -14367,9 +14367,10 @@ package body Exp_Ch9 is\n                    or else\n                      (Nkind (Stmt) = N_Pragma\n                        and then\n-                         Nam_In (Pragma_Name (Stmt), Name_Unreferenced,\n-                                                     Name_Unmodified,\n-                                                     Name_Warnings)))\n+                         Nam_In (Pragma_Name_Unmapped (Stmt),\n+                                 Name_Unreferenced,\n+                                 Name_Unmodified,\n+                                 Name_Warnings)))\n       loop\n          Next (Stmt);\n       end loop;"}, {"sha": "ac24d4f5edfe1ceabfc1ac72acd19dad4d126d66", "filename": "gcc/ada/exp_prag.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e759c2a0f950ce535e7907db39ddc3866782ade/gcc%2Fada%2Fexp_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e759c2a0f950ce535e7907db39ddc3866782ade/gcc%2Fada%2Fexp_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_prag.adb?ref=6e759c2a0f950ce535e7907db39ddc3866782ade", "patch": "@@ -162,7 +162,7 @@ package body Exp_Prag is\n    ---------------------\n \n    procedure Expand_N_Pragma (N : Node_Id) is\n-      Pname : constant Name_Id := Pragma_Name_Mapped (N);\n+      Pname : constant Name_Id := Pragma_Name (N);\n \n    begin\n       --  Rewrite pragma ignored by Ignore_Pragma to null statement, so that\n@@ -1288,7 +1288,7 @@ package body Exp_Prag is\n \n       if Relaxed_RM_Semantics\n         and then List_Length (Pragma_Argument_Associations (N)) = 2\n-        and then Pragma_Name_Mapped (N) = Name_Import\n+        and then Pragma_Name (N) = Name_Import\n         and then Nkind (Arg2 (N)) = N_String_Literal\n       then\n          Def_Id := Entity (Arg1 (N));"}, {"sha": "f3bdf247733e73fd11060c0d6a47d5314d015f5d", "filename": "gcc/ada/freeze.adb", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e759c2a0f950ce535e7907db39ddc3866782ade/gcc%2Fada%2Ffreeze.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e759c2a0f950ce535e7907db39ddc3866782ade/gcc%2Fada%2Ffreeze.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffreeze.adb?ref=6e759c2a0f950ce535e7907db39ddc3866782ade", "patch": "@@ -5187,9 +5187,10 @@ package body Freeze is\n \n                begin\n                   while Present (Prag) loop\n-                     if Nam_In (Pragma_Name (Prag), Name_Post,\n-                                                    Name_Postcondition,\n-                                                    Name_Refined_Post)\n+                     if Nam_In (Pragma_Name_Unmapped (Prag),\n+                                Name_Post,\n+                                Name_Postcondition,\n+                                Name_Refined_Post)\n                      then\n                         Exp :=\n                           Expression\n@@ -8464,7 +8465,7 @@ package body Freeze is\n \n             if Present (Decl)\n               and then Nkind (Decl) = N_Pragma\n-              and then Pragma_Name_Mapped (Decl) = Name_Import\n+              and then Pragma_Name (Decl) = Name_Import\n             then\n                return;\n             end if;"}, {"sha": "ff5418a13409f51f71958d7e11d3e17163683fe5", "filename": "gcc/ada/frontend.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e759c2a0f950ce535e7907db39ddc3866782ade/gcc%2Fada%2Ffrontend.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e759c2a0f950ce535e7907db39ddc3866782ade/gcc%2Fada%2Ffrontend.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffrontend.adb?ref=6e759c2a0f950ce535e7907db39ddc3866782ade", "patch": "@@ -492,7 +492,7 @@ begin\n       Item := First (Context_Items (Cunit (Main_Unit)));\n       while Present (Item) loop\n          if Nkind (Item) = N_Pragma\n-           and then Pragma_Name_Mapped (Item) = Name_Initialize_Scalars\n+           and then Pragma_Name (Item) = Name_Initialize_Scalars\n          then\n             Initialize_Scalars := True;\n          end if;"}, {"sha": "26ea406f433f440e070a1e8c4ff3c2a4e5e84c2e", "filename": "gcc/ada/ghost.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e759c2a0f950ce535e7907db39ddc3866782ade/gcc%2Fada%2Fghost.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e759c2a0f950ce535e7907db39ddc3866782ade/gcc%2Fada%2Fghost.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fghost.adb?ref=6e759c2a0f950ce535e7907db39ddc3866782ade", "patch": "@@ -992,7 +992,7 @@ package body Ghost is\n \n       while Present (Decl) loop\n          if Nkind (Decl) = N_Pragma\n-           and then Pragma_Name_Mapped (Decl) = Name_Ghost\n+           and then Pragma_Name (Decl) = Name_Ghost\n          then\n             return\n               Enables_Ghostness (First (Pragma_Argument_Associations (Decl)));"}, {"sha": "1be03ae87adf3a4821c29eef6d935dd3883c594f", "filename": "gcc/ada/inline.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e759c2a0f950ce535e7907db39ddc3866782ade/gcc%2Fada%2Finline.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e759c2a0f950ce535e7907db39ddc3866782ade/gcc%2Fada%2Finline.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Finline.adb?ref=6e759c2a0f950ce535e7907db39ddc3866782ade", "patch": "@@ -2541,7 +2541,7 @@ package body Inline is\n          --  not be posting warnings on the inlined body so it is unneeded.\n \n          elsif Nkind (N) = N_Pragma\n-           and then Pragma_Name_Mapped (N) = Name_Unreferenced\n+           and then Pragma_Name (N) = Name_Unreferenced\n          then\n             Rewrite (N, Make_Null_Statement (Sloc (N)));\n             return OK;"}, {"sha": "981656552af6b92466298a1195de01066609d5ff", "filename": "gcc/ada/lib-writ.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e759c2a0f950ce535e7907db39ddc3866782ade/gcc%2Fada%2Flib-writ.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e759c2a0f950ce535e7907db39ddc3866782ade/gcc%2Fada%2Flib-writ.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flib-writ.adb?ref=6e759c2a0f950ce535e7907db39ddc3866782ade", "patch": "@@ -672,7 +672,7 @@ package body Lib.Writ is\n                   Write_Info_Initiate ('N');\n                   Write_Info_Char (' ');\n \n-                  case Pragma_Name (N) is\n+                  case Pragma_Name_Unmapped (N) is\n                      when Name_Annotate =>\n                         C := 'A';\n                      when Name_Comment =>"}, {"sha": "6c42d2b6fad4364c03e1d35527f1e014c0cd1c36", "filename": "gcc/ada/lib-xref.adb", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e759c2a0f950ce535e7907db39ddc3866782ade/gcc%2Fada%2Flib-xref.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e759c2a0f950ce535e7907db39ddc3866782ade/gcc%2Fada%2Flib-xref.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flib-xref.adb?ref=6e759c2a0f950ce535e7907db39ddc3866782ade", "patch": "@@ -525,9 +525,10 @@ package body Lib.Xref is\n                P := Parent (P);\n \n                if Nkind (P) = N_Pragma then\n-                  if Nam_In (Pragma_Name (P), Name_Warnings,\n-                                              Name_Unmodified,\n-                                              Name_Unreferenced)\n+                  if Nam_In (Pragma_Name_Unmapped (P),\n+                             Name_Warnings,\n+                             Name_Unmodified,\n+                             Name_Unreferenced)\n                   then\n                      return False;\n                   end if;"}, {"sha": "eca327b5634fbcc15c6cb0095c49cb0769c5b4c9", "filename": "gcc/ada/par-ch10.adb", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e759c2a0f950ce535e7907db39ddc3866782ade/gcc%2Fada%2Fpar-ch10.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e759c2a0f950ce535e7907db39ddc3866782ade/gcc%2Fada%2Fpar-ch10.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-ch10.adb?ref=6e759c2a0f950ce535e7907db39ddc3866782ade", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2015, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2016, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -155,7 +155,7 @@ package body Ch10 is\n          Item := P_Pragma;\n \n          if Item = Error\n-           or else Pragma_Name (Item) /= Name_Source_Reference\n+           or else Pragma_Name_Unmapped (Item) /= Name_Source_Reference\n          then\n             Restore_Scan_State (Scan_State);\n \n@@ -184,12 +184,14 @@ package body Ch10 is\n          Save_Scan_State (Scan_State);\n          Item := P_Pragma;\n \n-         if Item /= Error and then Pragma_Name (Item) = Name_No_Body then\n+         if Item /= Error and then Pragma_Name_Unmapped (Item) = Name_No_Body\n+         then\n             No_Body := True;\n          end if;\n \n          if Item = Error\n-           or else not Is_Configuration_Pragma_Name (Pragma_Name (Item))\n+           or else\n+             not Is_Configuration_Pragma_Name (Pragma_Name_Unmapped (Item))\n          then\n             Restore_Scan_State (Scan_State);\n             exit;"}, {"sha": "2fff6c73a24e1104440e148bb9229a5ec8f7dc33", "filename": "gcc/ada/par-ch2.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e759c2a0f950ce535e7907db39ddc3866782ade/gcc%2Fada%2Fpar-ch2.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e759c2a0f950ce535e7907db39ddc3866782ade/gcc%2Fada%2Fpar-ch2.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-ch2.adb?ref=6e759c2a0f950ce535e7907db39ddc3866782ade", "patch": "@@ -443,9 +443,9 @@ package body Ch2 is\n          P := P_Pragma;\n \n          if Nkind (P) /= N_Error\n-           and then Nam_In (Pragma_Name (P), Name_Assert, Name_Debug)\n+           and then Nam_In (Pragma_Name_Unmapped (P), Name_Assert, Name_Debug)\n          then\n-            Error_Msg_Name_1 := Pragma_Name (P);\n+            Error_Msg_Name_1 := Pragma_Name_Unmapped (P);\n             Error_Msg_N\n               (\"pragma% must be in declaration/statement context\", P);\n          else"}, {"sha": "723e07f5d160412595044c398f93fb8ff6dd8f63", "filename": "gcc/ada/par-prag.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e759c2a0f950ce535e7907db39ddc3866782ade/gcc%2Fada%2Fpar-prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e759c2a0f950ce535e7907db39ddc3866782ade/gcc%2Fada%2Fpar-prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-prag.adb?ref=6e759c2a0f950ce535e7907db39ddc3866782ade", "patch": "@@ -43,7 +43,7 @@ with System.WCh_Con; use System.WCh_Con;\n separate (Par)\n \n function Prag (Pragma_Node : Node_Id; Semi : Source_Ptr) return Node_Id is\n-   Prag_Name   : constant Name_Id    := Pragma_Name (Pragma_Node);\n+   Prag_Name   : constant Name_Id    := Pragma_Name_Unmapped (Pragma_Node);\n    Prag_Id     : constant Pragma_Id  := Get_Pragma_Id (Prag_Name);\n    Pragma_Sloc : constant Source_Ptr := Sloc (Pragma_Node);\n    Arg_Count   : Nat;"}, {"sha": "9b5c9c532a81c26a390e65c0b2f332221239fd71", "filename": "gcc/ada/par.adb", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e759c2a0f950ce535e7907db39ddc3866782ade/gcc%2Fada%2Fpar.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e759c2a0f950ce535e7907db39ddc3866782ade/gcc%2Fada%2Fpar.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar.adb?ref=6e759c2a0f950ce535e7907db39ddc3866782ade", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2015, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2016, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -1481,10 +1481,12 @@ begin\n \n                   --  Give error if bad pragma\n \n-                  if not Is_Configuration_Pragma_Name (Pragma_Name (P_Node))\n-                    and then Pragma_Name (P_Node) /= Name_Source_Reference\n+                  if not Is_Configuration_Pragma_Name\n+                           (Pragma_Name_Unmapped (P_Node))\n+                    and then\n+                      Pragma_Name_Unmapped (P_Node) /= Name_Source_Reference\n                   then\n-                     if Is_Pragma_Name (Pragma_Name (P_Node)) then\n+                     if Is_Pragma_Name (Pragma_Name_Unmapped (P_Node)) then\n                         Error_Msg_N\n                           (\"only configuration pragmas allowed \" &\n                            \"in configuration file\", P_Node);"}, {"sha": "6bdea984374c95c77171eb3c0c5b07396a206b16", "filename": "gcc/ada/par_sco.adb", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e759c2a0f950ce535e7907db39ddc3866782ade/gcc%2Fada%2Fpar_sco.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e759c2a0f950ce535e7907db39ddc3866782ade/gcc%2Fada%2Fpar_sco.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar_sco.adb?ref=6e759c2a0f950ce535e7907db39ddc3866782ade", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2009-2015, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2009-2016, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -1584,11 +1584,11 @@ package body Par_SCO is\n                   Pragma_Sloc := SCE.From;\n                   SCO_Raw_Hash_Table.Set\n                     (Pragma_Sloc, SCO_Raw_Table.Last + 1);\n-                  Pragma_Aspect_Name := Pragma_Name (SCE.N);\n+                  Pragma_Aspect_Name := Pragma_Name_Unmapped (SCE.N);\n                   pragma Assert (Pragma_Aspect_Name /= No_Name);\n \n                elsif SCE.Typ = 'P' then\n-                  Pragma_Aspect_Name := Pragma_Name (SCE.N);\n+                  Pragma_Aspect_Name := Pragma_Name_Unmapped (SCE.N);\n                   pragma Assert (Pragma_Aspect_Name /= No_Name);\n                end if;\n \n@@ -2132,7 +2132,7 @@ package body Par_SCO is\n                --  Processing depends on the kind of pragma\n \n                declare\n-                  Nam : constant Name_Id := Pragma_Name (N);\n+                  Nam : constant Name_Id := Pragma_Name_Unmapped (N);\n                   Arg : Node_Id          :=\n                           First (Pragma_Argument_Associations (N));\n                   Typ : Character;"}, {"sha": "16904caf5b7b55c0a2d7fb5fe78ee1296adc2a15", "filename": "gcc/ada/sem_attr.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e759c2a0f950ce535e7907db39ddc3866782ade/gcc%2Fada%2Fsem_attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e759c2a0f950ce535e7907db39ddc3866782ade/gcc%2Fada%2Fsem_attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_attr.adb?ref=6e759c2a0f950ce535e7907db39ddc3866782ade", "patch": "@@ -1306,7 +1306,7 @@ package body Sem_Attr is\n             if Nkind (Prag) = N_Aspect_Specification then\n                Prag_Nam := Chars (Identifier (Prag));\n             else\n-               Prag_Nam := Pragma_Name_Mapped (Prag);\n+               Prag_Nam := Pragma_Name (Prag);\n             end if;\n \n             if Prag_Nam = Name_Check then\n@@ -4413,7 +4413,7 @@ package body Sem_Attr is\n             --  that the pragma appears in an appropriate loop location.\n \n             if Nkind (Original_Node (Stmt)) = N_Pragma\n-              and then Nam_In (Pragma_Name (Original_Node (Stmt)),\n+              and then Nam_In (Pragma_Name_Unmapped (Original_Node (Stmt)),\n                                Name_Loop_Invariant,\n                                Name_Loop_Variant,\n                                Name_Assert,"}, {"sha": "5232696433be70b36ee970dcd31dac95282e6526", "filename": "gcc/ada/sem_aux.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e759c2a0f950ce535e7907db39ddc3866782ade/gcc%2Fada%2Fsem_aux.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e759c2a0f950ce535e7907db39ddc3866782ade/gcc%2Fada%2Fsem_aux.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_aux.adb?ref=6e759c2a0f950ce535e7907db39ddc3866782ade", "patch": "@@ -510,12 +510,12 @@ package body Sem_Aux is\n \n          if Nkind (N) = N_Pragma\n            and then\n-             (Pragma_Name (N) = Nam\n+             (Pragma_Name_Unmapped (N) = Nam\n                or else (Nam = Name_Priority\n-                         and then Pragma_Name_Mapped (N) =\n+                         and then Pragma_Name (N) =\n                            Name_Interrupt_Priority)\n                or else (Nam = Name_Interrupt_Priority\n-                         and then Pragma_Name_Mapped (N) = Name_Priority))\n+                         and then Pragma_Name (N) = Name_Priority))\n          then\n             if Check_Parents then\n                return N;"}, {"sha": "5681396a0b1dec608e9a9d6bb036a78a3f0ab57b", "filename": "gcc/ada/sem_ch10.adb", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e759c2a0f950ce535e7907db39ddc3866782ade/gcc%2Fada%2Fsem_ch10.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e759c2a0f950ce535e7907db39ddc3866782ade/gcc%2Fada%2Fsem_ch10.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch10.adb?ref=6e759c2a0f950ce535e7907db39ddc3866782ade", "patch": "@@ -393,8 +393,8 @@ package body Sem_Ch10 is\n \n                elsif Nkind (Cont_Item) = N_Pragma\n                  and then\n-                   Nam_In (Pragma_Name (Cont_Item), Name_Elaborate,\n-                                                    Name_Elaborate_All)\n+                   Nam_In (Pragma_Name_Unmapped (Cont_Item),\n+                           Name_Elaborate, Name_Elaborate_All)\n                  and then not Used_Type_Or_Elab\n                then\n                   Prag_Unit :=\n@@ -1332,7 +1332,7 @@ package body Sem_Ch10 is\n       Item := First (Context_Items (N));\n       while Present (Item)\n         and then Nkind (Item) = N_Pragma\n-        and then Pragma_Name_Mapped (Item) in Configuration_Pragma_Names\n+        and then Pragma_Name (Item) in Configuration_Pragma_Names\n       loop\n          Analyze (Item);\n          Next (Item);\n@@ -3384,7 +3384,7 @@ package body Sem_Ch10 is\n       Item := First (Context_Items (N));\n       while Present (Item)\n         and then Nkind (Item) = N_Pragma\n-        and then Pragma_Name_Mapped (Item) in Configuration_Pragma_Names\n+        and then Pragma_Name (Item) in Configuration_Pragma_Names\n       loop\n          Next (Item);\n       end loop;\n@@ -4526,7 +4526,7 @@ package body Sem_Ch10 is\n                   Check_Declarations (Specification (Decl));\n \n                elsif Nkind (Decl) = N_Pragma\n-                 and then Pragma_Name_Mapped (Decl) = Name_Import\n+                 and then Pragma_Name (Decl) = Name_Import\n                then\n                   Check_Pragma_Import (Decl);\n                end if;\n@@ -4558,7 +4558,7 @@ package body Sem_Ch10 is\n                   Append_Elmt (Decl, Incomplete_Decls);\n \n                elsif Nkind (Decl) = N_Pragma\n-                 and then Pragma_Name_Mapped (Decl) = Name_Import\n+                 and then Pragma_Name (Decl) = Name_Import\n                then\n                   Check_Pragma_Import (Decl);\n                end if;\n@@ -5826,7 +5826,7 @@ package body Sem_Ch10 is\n \n             Decl := First (Decls);\n             while Present (Decl) and then Nkind (Decl) = N_Pragma loop\n-               if Pragma_Name_Mapped (Decl) = Name_Abstract_State then\n+               if Pragma_Name (Decl) = Name_Abstract_State then\n                   Process_State\n                     (Get_Pragma_Arg\n                        (First (Pragma_Argument_Associations (Decl))));"}, {"sha": "603c5433d780e87010a0cfd89bcc8d1ff840dd52", "filename": "gcc/ada/sem_ch12.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e759c2a0f950ce535e7907db39ddc3866782ade/gcc%2Fada%2Fsem_ch12.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e759c2a0f950ce535e7907db39ddc3866782ade/gcc%2Fada%2Fsem_ch12.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch12.adb?ref=6e759c2a0f950ce535e7907db39ddc3866782ade", "patch": "@@ -7740,7 +7740,7 @@ package body Sem_Ch12 is\n          --  Do not copy Comment or Ident pragmas their content is relevant to\n          --  the generic unit, not to the instantiating unit.\n \n-         if Nam_In (Pragma_Name (N), Name_Comment, Name_Ident) then\n+         if Nam_In (Pragma_Name_Unmapped (N), Name_Comment, Name_Ident) then\n             New_N := Make_Null_Statement (Sloc (N));\n \n          --  Do not copy pragmas generated from aspects because the pragmas do"}, {"sha": "262728856ed4cc715483476e1070674bf9c841bf", "filename": "gcc/ada/sem_ch13.adb", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e759c2a0f950ce535e7907db39ddc3866782ade/gcc%2Fada%2Fsem_ch13.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e759c2a0f950ce535e7907db39ddc3866782ade/gcc%2Fada%2Fsem_ch13.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch13.adb?ref=6e759c2a0f950ce535e7907db39ddc3866782ade", "patch": "@@ -6868,7 +6868,7 @@ package body Sem_Ch13 is\n \n             --  The only pragma of interest is Complete_Representation\n \n-            if Pragma_Name_Mapped (CC) = Name_Complete_Representation then\n+            if Pragma_Name (CC) = Name_Complete_Representation then\n                CR_Pragma := CC;\n             end if;\n \n@@ -8406,7 +8406,7 @@ package body Sem_Ch13 is\n          Ritem := First_Rep_Item (Typ);\n          while Present (Ritem) loop\n             if Nkind (Ritem) = N_Pragma\n-              and then Pragma_Name_Mapped (Ritem) = Name_Predicate\n+              and then Pragma_Name (Ritem) = Name_Predicate\n             then\n                Add_Predicate (Ritem);\n \n@@ -8424,7 +8424,7 @@ package body Sem_Ch13 is\n \n                begin\n                   if Nkind (Prag) = N_Pragma\n-                    and then Pragma_Name_Mapped (Prag) = Name_Predicate\n+                    and then Pragma_Name (Prag) = Name_Predicate\n                   then\n                      Add_Predicate (Prag);\n                   end if;\n@@ -12367,7 +12367,7 @@ package body Sem_Ch13 is\n \n       if Is_Overloadable (T) and then Nkind (N) = N_Pragma then\n          declare\n-            Pname : constant Name_Id := Pragma_Name_Mapped (N);\n+            Pname : constant Name_Id := Pragma_Name (N);\n          begin\n             if Nam_In (Pname, Name_Convention, Name_Import,   Name_Export,\n                               Name_External,   Name_Interface)\n@@ -13560,7 +13560,7 @@ package body Sem_Ch13 is\n \n       procedure No_Independence is\n       begin\n-         if Pragma_Name_Mapped (N) = Name_Independent then\n+         if Pragma_Name (N) = Name_Independent then\n             Error_Msg_NE (\"independence cannot be guaranteed for&\", N, E);\n          else\n             Error_Msg_NE\n@@ -13691,7 +13691,7 @@ package body Sem_Ch13 is\n       for J in Independence_Checks.First .. Independence_Checks.Last loop\n          N  := Independence_Checks.Table (J).N;\n          E  := Independence_Checks.Table (J).E;\n-         IC := Pragma_Name_Mapped (N) = Name_Independent_Components;\n+         IC := Pragma_Name (N) = Name_Independent_Components;\n \n          --  Deal with component case\n "}, {"sha": "ec449c1efcb502b0df32a111e31119bb8da404a7", "filename": "gcc/ada/sem_ch6.adb", "status": "modified", "additions": 9, "deletions": 8, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e759c2a0f950ce535e7907db39ddc3866782ade/gcc%2Fada%2Fsem_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e759c2a0f950ce535e7907db39ddc3866782ade/gcc%2Fada%2Fsem_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch6.adb?ref=6e759c2a0f950ce535e7907db39ddc3866782ade", "patch": "@@ -2398,9 +2398,10 @@ package body Sem_Ch6 is\n                Next_Decl := Next (Decl);\n \n                if Nkind (Decl) = N_Pragma\n-                 and then Nam_In (Pragma_Name (Decl), Name_Ghost,\n-                                                      Name_SPARK_Mode,\n-                                                      Name_Volatile_Function)\n+                 and then Nam_In (Pragma_Name_Unmapped (Decl),\n+                                  Name_Ghost,\n+                                  Name_SPARK_Mode,\n+                                  Name_Volatile_Function)\n                then\n                   Remove (Decl);\n                   Insert_After (To, Decl);\n@@ -2599,8 +2600,8 @@ package body Sem_Ch6 is\n          begin\n             if Nkind (N) = N_Pragma\n                 and then\n-                  (Pragma_Name (N) = Name_Inline_Always\n-                    or else (Pragma_Name (N) = Name_Inline\n+                  (Pragma_Name_Unmapped (N) = Name_Inline_Always\n+                    or else (Pragma_Name_Unmapped (N) = Name_Inline\n                       and then\n                         (Front_End_Inlining or else Optimization_Level > 0)))\n                and then Present (Pragma_Argument_Associations (N))\n@@ -2692,7 +2693,7 @@ package body Sem_Ch6 is\n                   Analyze (Prag);\n                   Set_Has_Pragma_Inline (Subp);\n \n-                  if Pragma_Name_Mapped (Prag) = Name_Inline_Always then\n+                  if Pragma_Name (Prag) = Name_Inline_Always then\n                      Set_Is_Inlined (Subp);\n                      Set_Has_Pragma_Inline_Always (Subp);\n                   end if;\n@@ -6064,7 +6065,7 @@ package body Sem_Ch6 is\n \n          begin\n             if Nkind (Orig) = N_Pragma\n-              and then Pragma_Name_Mapped (Orig) = Name_Assert\n+              and then Pragma_Name (Orig) = Name_Assert\n               and then not Error_Posted (Orig)\n             then\n                declare\n@@ -9301,7 +9302,7 @@ package body Sem_Ch6 is\n                      if Class_Present (Prag)\n                        and then not Split_PPC (Prag)\n                      then\n-                        if Pragma_Name_Mapped (Prag) = Name_Precondition then\n+                        if Pragma_Name (Prag) = Name_Precondition then\n                            Error_Msg_N\n                              (\"info: & inherits `Pre''Class` aspect from \"\n                               & \"#?L?\", E);"}, {"sha": "ea868811e62a14f108772287648313c4707641af", "filename": "gcc/ada/sem_ch8.adb", "status": "modified", "additions": 7, "deletions": 6, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e759c2a0f950ce535e7907db39ddc3866782ade/gcc%2Fada%2Fsem_ch8.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e759c2a0f950ce535e7907db39ddc3866782ade/gcc%2Fada%2Fsem_ch8.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch8.adb?ref=6e759c2a0f950ce535e7907db39ddc3866782ade", "patch": "@@ -5683,12 +5683,13 @@ package body Sem_Ch8 is\n          Par := Nod;\n          while Present (Par) loop\n             if Nkind (Par) = N_Pragma then\n-               if Nam_In (Pragma_Name (Par), Name_Abstract_State,\n-                                             Name_Depends,\n-                                             Name_Global,\n-                                             Name_Initializes,\n-                                             Name_Refined_Depends,\n-                                             Name_Refined_Global)\n+               if Nam_In (Pragma_Name_Unmapped (Par),\n+                          Name_Abstract_State,\n+                          Name_Depends,\n+                          Name_Global,\n+                          Name_Initializes,\n+                          Name_Refined_Depends,\n+                          Name_Refined_Global)\n                then\n                   return True;\n "}, {"sha": "bfd1249086dfb53bf568c2baa07ddd1a3c0d5fa4", "filename": "gcc/ada/sem_ch9.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e759c2a0f950ce535e7907db39ddc3866782ade/gcc%2Fada%2Fsem_ch9.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e759c2a0f950ce535e7907db39ddc3866782ade/gcc%2Fada%2Fsem_ch9.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch9.adb?ref=6e759c2a0f950ce535e7907db39ddc3866782ade", "patch": "@@ -499,7 +499,7 @@ package body Sem_Ch9 is\n                      elsif Kind = N_Pragma then\n                         declare\n                            Prag_Name : constant Name_Id   :=\n-                             Pragma_Name_Mapped (N);\n+                             Pragma_Name (N);\n                            Prag_Id   : constant Pragma_Id :=\n                              Get_Pragma_Id (Prag_Name);\n \n@@ -2149,7 +2149,7 @@ package body Sem_Ch9 is\n                --  Pragma case\n \n                else\n-                  Error_Msg_Name_1 := Pragma_Name_Mapped (Prio_Item);\n+                  Error_Msg_Name_1 := Pragma_Name (Prio_Item);\n                   Error_Msg_NE\n                     (\"pragma% for & has no effect when Lock_Free given??\",\n                      Prio_Item, Id);\n@@ -2189,7 +2189,7 @@ package body Sem_Ch9 is\n                --  Pragma case\n \n                elsif Nkind (Prio_Item) = N_Pragma\n-                 and then Pragma_Name_Mapped (Prio_Item) = Name_Priority\n+                 and then Pragma_Name (Prio_Item) = Name_Priority\n                then\n                   Error_Msg_N\n                     (\"pragma Interrupt_Priority is preferred in presence of \""}, {"sha": "1c2b1b4c4c5edd13d1ee5a3db174e922a6fee2a1", "filename": "gcc/ada/sem_elab.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e759c2a0f950ce535e7907db39ddc3866782ade/gcc%2Fada%2Fsem_elab.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e759c2a0f950ce535e7907db39ddc3866782ade/gcc%2Fada%2Fsem_elab.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_elab.adb?ref=6e759c2a0f950ce535e7907db39ddc3866782ade", "patch": "@@ -2099,7 +2099,7 @@ package body Sem_Elab is\n          Par := Call;\n          while Present (Par) loop\n             if Nkind (Par) = N_Pragma then\n-               Nam := Pragma_Name_Mapped (Par);\n+               Nam := Pragma_Name (Par);\n \n                --  Pragma Initial_Condition appears in its alternative from as\n                --  Check (Initial_Condition, ...).\n@@ -2485,7 +2485,7 @@ package body Sem_Elab is\n                --  Or, in the case of an initial condition, specifically by a\n                --  Check pragma specifying an Initial_Condition check.\n \n-               elsif Pragma_Name_Mapped (O) = Name_Check\n+               elsif Pragma_Name (O) = Name_Check\n                  and then\n                    Chars\n                      (Expression (First (Pragma_Argument_Associations (O)))) =\n@@ -3716,7 +3716,7 @@ package body Sem_Elab is\n          Item := First (Context_Items (CU));\n          while Present (Item) loop\n             if Nkind (Item) = N_Pragma\n-              and then Pragma_Name_Mapped (Item) = Name_Elaborate_All\n+              and then Pragma_Name (Item) = Name_Elaborate_All\n             then\n                --  Return if some previous error on the pragma itself. The\n                --  pragma may be unanalyzed, because of a previous error, or"}, {"sha": "d737a9341370eb433d9f0e04f23177a585602208", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 32, "deletions": 31, "changes": 63, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e759c2a0f950ce535e7907db39ddc3866782ade/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e759c2a0f950ce535e7907db39ddc3866782ade/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=6e759c2a0f950ce535e7907db39ddc3866782ade", "patch": "@@ -1970,7 +1970,7 @@ package body Sem_Prag is\n          return;\n       end if;\n \n-      Error_Msg_Name_1 := Pragma_Name_Mapped (N);\n+      Error_Msg_Name_1 := Pragma_Name (N);\n \n       --  An external property pragma must apply to an effectively volatile\n       --  object other than a formal subprogram parameter (SPARK RM 7.1.3(2)).\n@@ -5253,7 +5253,7 @@ package body Sem_Prag is\n          --  previously given aspect specification or attribute definition\n          --  clause for the same pragma.\n \n-         P := Get_Rep_Item (E, Pragma_Name_Mapped (N), Check_Parents => False);\n+         P := Get_Rep_Item (E, Pragma_Name (N), Check_Parents => False);\n \n          if Present (P) then\n \n@@ -5286,7 +5286,7 @@ package body Sem_Prag is\n \n             --  Here we have a definite duplicate\n \n-            Error_Msg_Name_1 := Pragma_Name_Mapped (N);\n+            Error_Msg_Name_1 := Pragma_Name (N);\n             Error_Msg_Sloc := Sloc (P);\n \n             --  For a single protected or a single task object, the error is\n@@ -5712,7 +5712,7 @@ package body Sem_Prag is\n \n             if Nkind (Original_Node (Stmt)) = N_Pragma then\n                return\n-                 Nam_In (Pragma_Name (Original_Node (Stmt)),\n+                 Nam_In (Pragma_Name_Unmapped (Original_Node (Stmt)),\n                          Name_Loop_Invariant,\n                          Name_Loop_Variant);\n             else\n@@ -6460,7 +6460,7 @@ package body Sem_Prag is\n          if Is_Rewrite_Substitution (N)\n            and then Nkind (Original_Node (N)) = N_Pragma\n          then\n-            Error_Msg_Name_1 := Pragma_Name_Mapped (Original_Node (N));\n+            Error_Msg_Name_1 := Pragma_Name (Original_Node (N));\n          end if;\n \n          --  Case where pragma comes from an aspect specification\n@@ -7174,16 +7174,17 @@ package body Sem_Prag is\n                   then\n                      --  Give error if same as our pragma or Export/Convention\n \n-                     if Nam_In (Pragma_Name (Decl), Name_Export,\n-                                                    Name_Convention,\n-                                                    Pragma_Name_Mapped (N))\n+                     if Nam_In (Pragma_Name_Unmapped (Decl),\n+                                Name_Export,\n+                                Name_Convention,\n+                                Pragma_Name_Unmapped (N))\n                      then\n                         exit;\n \n                      --  Case of Import/Interface or the other way round\n \n-                     elsif Nam_In (Pragma_Name (Decl), Name_Interface,\n-                                                       Name_Import)\n+                     elsif Nam_In (Pragma_Name_Unmapped (Decl),\n+                                   Name_Interface, Name_Import)\n                      then\n                         --  Here we know that we have Import and Interface. It\n                         --  doesn't matter which way round they are. See if\n@@ -10345,7 +10346,7 @@ package body Sem_Prag is\n \n       --  Deal with unrecognized pragma\n \n-      Pname := Pragma_Name_Mapped (N);\n+      Pname := Pragma_Name (N);\n \n       if not Is_Pragma_Name (Pname) then\n          if Warn_On_Unrecognized_Pragma then\n@@ -13764,7 +13765,7 @@ package body Sem_Prag is\n                --  Skip prior pragmas, but check for duplicates\n \n                if Nkind (Stmt) = N_Pragma then\n-                  if Pragma_Name_Mapped (Stmt) = Pname then\n+                  if Pragma_Name (Stmt) = Pname then\n                      Error_Msg_Name_1 := Pname;\n                      Error_Msg_Sloc   := Sloc (Stmt);\n                      Error_Msg_N (\"pragma % duplicates pragma declared#\", N);\n@@ -15262,7 +15263,7 @@ package body Sem_Prag is\n                --  Skip prior pragmas, but check for duplicates\n \n                if Nkind (Stmt) = N_Pragma then\n-                  if Pragma_Name_Mapped (Stmt) = Pname then\n+                  if Pragma_Name (Stmt) = Pname then\n                      Error_Msg_Name_1 := Pname;\n                      Error_Msg_Sloc   := Sloc (Stmt);\n                      Error_Msg_N (\"pragma % duplicates pragma declared#\", N);\n@@ -16536,7 +16537,7 @@ package body Sem_Prag is\n                   if Is_Imported (Def_Id)\n                     and then Present (First_Rep_Item (Def_Id))\n                     and then Nkind (First_Rep_Item (Def_Id)) = N_Pragma\n-                    and then Pragma_Name_Mapped (First_Rep_Item (Def_Id)) =\n+                    and then Pragma_Name (First_Rep_Item (Def_Id)) =\n                       Name_Interface\n                   then\n                      null;\n@@ -17554,7 +17555,7 @@ package body Sem_Prag is\n             Nod := Next (N);\n             while Present (Nod) loop\n                if Nkind (Nod) = N_Pragma\n-                 and then Pragma_Name_Mapped (Nod) = Name_Main\n+                 and then Pragma_Name (Nod) = Name_Main\n                then\n                   Error_Msg_Name_1 := Pname;\n                   Error_Msg_N (\"duplicate pragma% not permitted\", Nod);\n@@ -17598,7 +17599,7 @@ package body Sem_Prag is\n             Nod := Next (N);\n             while Present (Nod) loop\n                if Nkind (Nod) = N_Pragma\n-                 and then Pragma_Name_Mapped (Nod) = Name_Main_Storage\n+                 and then Pragma_Name (Nod) = Name_Main_Storage\n                then\n                   Error_Msg_Name_1 := Pname;\n                   Error_Msg_N (\"duplicate pragma% not permitted\", Nod);\n@@ -21326,7 +21327,7 @@ package body Sem_Prag is\n                   --  this also takes care of pragmas generated for aspects.\n \n                   if Nkind (Stmt) = N_Pragma then\n-                     if Pragma_Name_Mapped (Stmt) = Pname then\n+                     if Pragma_Name (Stmt) = Pname then\n                         Error_Msg_Name_1 := Pname;\n                         Error_Msg_Sloc   := Sloc (Stmt);\n                         Error_Msg_N (\"pragma% duplicates pragma declared#\", N);\n@@ -22176,7 +22177,7 @@ package body Sem_Prag is\n                if Present (Items) then\n                   Prag := Contract_Test_Cases (Items);\n                   while Present (Prag) loop\n-                     if Pragma_Name_Mapped (Prag) = Name_Test_Case\n+                     if Pragma_Name (Prag) = Name_Test_Case\n                        and then Prag /= N\n                        and then String_Equal\n                                   (Name, Get_Name_From_CTC_Pragma (Prag))\n@@ -22406,7 +22407,7 @@ package body Sem_Prag is\n                Nod := Next (N);\n                while Present (Nod) loop\n                   if Nkind (Nod) = N_Pragma\n-                    and then Pragma_Name_Mapped (Nod) = Name_Time_Slice\n+                    and then Pragma_Name (Nod) = Name_Time_Slice\n                   then\n                      Error_Msg_Name_1 := Pname;\n                      Error_Msg_N (\"duplicate pragma% not permitted\", Nod);\n@@ -26763,7 +26764,7 @@ package body Sem_Prag is\n       --  Local variables\n \n       Loc          : constant Source_Ptr := Sloc (Prag);\n-      Prag_Nam     : constant Name_Id    := Pragma_Name_Mapped (Prag);\n+      Prag_Nam     : constant Name_Id    := Pragma_Name (Prag);\n       Check_Prag   : Node_Id;\n       Msg_Arg      : Node_Id;\n       Nam          : Name_Id;\n@@ -27315,8 +27316,8 @@ package body Sem_Prag is\n          Prag := Pre_Post_Conditions (Prags);\n \n          while Present (Prag) loop\n-            if Nam_In (Pragma_Name (Prag), Name_Precondition,\n-                                           Name_Postcondition)\n+            if Nam_In (Pragma_Name_Unmapped (Prag),\n+                       Name_Precondition, Name_Postcondition)\n               and then Class_Present (Prag)\n             then\n                --  The generated pragma must be analyzed in the context of\n@@ -27709,8 +27710,8 @@ package body Sem_Prag is\n \n    function Delay_Config_Pragma_Analyze (N : Node_Id) return Boolean is\n    begin\n-      return Nam_In (Pragma_Name (N), Name_Interrupt_State,\n-                                      Name_Priority_Specific_Dispatching);\n+      return Nam_In (Pragma_Name_Unmapped (N),\n+                     Name_Interrupt_State, Name_Priority_Specific_Dispatching);\n    end Delay_Config_Pragma_Analyze;\n \n    -----------------------\n@@ -27791,7 +27792,7 @@ package body Sem_Prag is\n \n          if Nkind (Stmt) = N_Pragma then\n             if Do_Checks\n-              and then Pragma_Name_Mapped (Stmt) = Pragma_Name_Mapped (Prag)\n+              and then Pragma_Name (Stmt) = Pragma_Name (Prag)\n             then\n                Duplication_Error\n                  (Prag => Prag,\n@@ -27999,7 +28000,7 @@ package body Sem_Prag is\n       Do_Checks : Boolean := False) return Node_Id\n    is\n       Context  : constant Node_Id := Parent (Prag);\n-      Prag_Nam : constant Name_Id := Pragma_Name_Mapped (Prag);\n+      Prag_Nam : constant Name_Id := Pragma_Name (Prag);\n       Stmt     : Node_Id;\n \n    begin\n@@ -28009,7 +28010,7 @@ package body Sem_Prag is\n          --  Skip prior pragmas, but check for duplicates\n \n          if Nkind (Stmt) = N_Pragma then\n-            if Do_Checks and then Pragma_Name_Mapped (Stmt) = Prag_Nam then\n+            if Do_Checks and then Pragma_Name (Stmt) = Prag_Nam then\n                Duplication_Error\n                  (Prag => Prag,\n                   Prev => Stmt);\n@@ -28386,7 +28387,7 @@ package body Sem_Prag is\n    begin\n       pragma Assert\n         (Nkind (N) = N_Pragma\n-          and then Pragma_Name_Mapped (N) = Name_SPARK_Mode\n+          and then Pragma_Name (N) = Name_SPARK_Mode\n           and then Is_List_Member (N));\n \n       --  Pragma SPARK_Mode affects the elaboration of a package body when it\n@@ -28758,7 +28759,7 @@ package body Sem_Prag is\n    function Is_Pragma_String_Literal (Par : Node_Id) return Boolean is\n       Pragn : constant Node_Id := Parent (Par);\n       Assoc : constant List_Id := Pragma_Argument_Associations (Pragn);\n-      Pname : constant Name_Id := Pragma_Name_Mapped (Pragn);\n+      Pname : constant Name_Id := Pragma_Name (Pragn);\n       Argn  : Natural;\n       N     : Node_Id;\n \n@@ -28820,7 +28821,7 @@ package body Sem_Prag is\n    begin\n       pragma Assert\n         (Nkind (N) = N_Pragma\n-          and then Pragma_Name_Mapped (N) = Name_SPARK_Mode\n+          and then Pragma_Name (N) = Name_SPARK_Mode\n           and then Is_List_Member (N));\n \n       --  For pragma SPARK_Mode to be private, it has to appear in the private\n@@ -28981,7 +28982,7 @@ package body Sem_Prag is\n          if Is_True (Expr_Value (Arg1x)) then\n             declare\n                Cent    : constant Entity_Id := Cunit_Entity (Current_Sem_Unit);\n-               Pname   : constant Name_Id   := Pragma_Name (N);\n+               Pname   : constant Name_Id   := Pragma_Name_Unmapped (N);\n                Prag_Id : constant Pragma_Id := Get_Pragma_Id (Pname);\n                Str     : constant String_Id := Strval (Get_Pragma_Arg (Arg2));\n                Str_Len : constant Nat       := String_Length (Str);"}, {"sha": "c8ca67cb6090c889c5d27fc7aee8a711b89b2657", "filename": "gcc/ada/sem_res.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e759c2a0f950ce535e7907db39ddc3866782ade/gcc%2Fada%2Fsem_res.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e759c2a0f950ce535e7907db39ddc3866782ade/gcc%2Fada%2Fsem_res.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_res.adb?ref=6e759c2a0f950ce535e7907db39ddc3866782ade", "patch": "@@ -10018,7 +10018,7 @@ package body Sem_Res is\n             --  Special handling of Asssert pragma\n \n             if Nkind (Orig) = N_Pragma\n-              and then Pragma_Name_Mapped (Orig) = Name_Assert\n+              and then Pragma_Name (Orig) = Name_Assert\n             then\n                declare\n                   Expr : constant Node_Id :=\n@@ -10059,7 +10059,7 @@ package body Sem_Res is\n             --  Similar processing for Check pragma\n \n             elsif Nkind (Orig) = N_Pragma\n-              and then Pragma_Name_Mapped (Orig) = Name_Check\n+              and then Pragma_Name (Orig) = Name_Check\n             then\n                --  Don't want to warn if original condition is explicit False\n "}, {"sha": "3cba861cf8a096858aa903188f0bd5c3b6cc7787", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 13, "deletions": 13, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e759c2a0f950ce535e7907db39ddc3866782ade/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e759c2a0f950ce535e7907db39ddc3866782ade/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=6e759c2a0f950ce535e7907db39ddc3866782ade", "patch": "@@ -1733,7 +1733,7 @@ package body Sem_Util is\n       Par := Parent (Ref);\n       while Present (Par) loop\n          if Nkind (Par) = N_Pragma then\n-            Prag_Nam := Pragma_Name_Mapped (Par);\n+            Prag_Nam := Pragma_Name (Par);\n \n             --  A concurrent constituent is allowed to appear in pragmas\n             --  Initial_Condition and Initializes as this is part of the\n@@ -3125,12 +3125,12 @@ package body Sem_Util is\n                Check_Function_Result (Expr);\n \n                if not Mentions_Post_State (Expr) then\n-                  if Pragma_Name_Mapped (Prag) = Name_Contract_Cases then\n+                  if Pragma_Name (Prag) = Name_Contract_Cases then\n                      Error_Msg_NE\n                        (\"contract case does not check the outcome of calling \"\n                         & \"&?T?\", Expr, Subp_Id);\n \n-                  elsif Pragma_Name_Mapped (Prag) = Name_Refined_Post then\n+                  elsif Pragma_Name (Prag) = Name_Refined_Post then\n                      Error_Msg_NE\n                        (\"refined postcondition does not check the outcome of \"\n                         & \"calling &?T?\", Prag, Subp_Id);\n@@ -3242,7 +3242,7 @@ package body Sem_Util is\n          Expr  : constant Node_Id :=\n                    Get_Pragma_Arg\n                      (First (Pragma_Argument_Associations (Prag)));\n-         Nam   : constant Name_Id := Pragma_Name_Mapped (Prag);\n+         Nam   : constant Name_Id := Pragma_Name (Prag);\n          CCase : Node_Id;\n \n       --  Start of processing for Check_Result_And_Post_State_In_Pragma\n@@ -3335,8 +3335,8 @@ package body Sem_Util is\n \n       Prag := Pre_Post_Conditions (Items);\n       while Present (Prag) loop\n-         if Nam_In (Pragma_Name (Prag), Name_Postcondition,\n-                                        Name_Refined_Post)\n+         if Nam_In (Pragma_Name_Unmapped (Prag),\n+                    Name_Postcondition, Name_Refined_Post)\n            and then not Error_Posted (Prag)\n          then\n             Post_Prag := Prag;\n@@ -3351,7 +3351,7 @@ package body Sem_Util is\n \n       Prag := Contract_Test_Cases (Items);\n       while Present (Prag) loop\n-         if Pragma_Name_Mapped (Prag) = Name_Contract_Cases\n+         if Pragma_Name (Prag) = Name_Contract_Cases\n            and then not Error_Posted (Prag)\n          then\n             Case_Prag := Prag;\n@@ -4880,7 +4880,7 @@ package body Sem_Util is\n \n       Arg : constant Node_Id :=\n               Get_Pragma_Arg (First (Pragma_Argument_Associations (Prag)));\n-      Nam : constant Name_Id := Pragma_Name_Mapped (Prag);\n+      Nam : constant Name_Id := Pragma_Name (Prag);\n \n    --  Start of processing for Contains_Refined_State\n \n@@ -6692,7 +6692,7 @@ package body Sem_Util is\n          Decl := Next (Unit_Declaration_Node (Subp));\n          while Present (Decl) loop\n             if Nkind (Decl) = N_Pragma\n-              and then Pragma_Name_Mapped (Decl) = Name_Extensions_Visible\n+              and then Pragma_Name (Decl) = Name_Extensions_Visible\n             then\n                Prag := Decl;\n                exit;\n@@ -8141,7 +8141,7 @@ package body Sem_Util is\n \n    function Get_Pragma_Id (N : Node_Id) return Pragma_Id is\n    begin\n-      return Get_Pragma_Id (Pragma_Name (N));\n+      return Get_Pragma_Id (Pragma_Name_Unmapped (N));\n    end Get_Pragma_Id;\n \n    ------------------------\n@@ -10677,7 +10677,7 @@ package body Sem_Util is\n       loop\n          if No (P) then\n             return False;\n-         elsif Nkind (P) = N_Pragma and then Pragma_Name_Mapped (P) = Nam then\n+         elsif Nkind (P) = N_Pragma and then Pragma_Name (P) = Nam then\n             return True;\n          else\n             P := Parent (P);\n@@ -13715,7 +13715,7 @@ package body Sem_Util is\n          Nam := Chars (Identifier (Item));\n \n       else pragma Assert (Nkind (Item) = N_Pragma);\n-         Nam := Pragma_Name_Mapped (Item);\n+         Nam := Pragma_Name (Item);\n       end if;\n \n       return    Nam = Name_Abstract_State\n@@ -14534,7 +14534,7 @@ package body Sem_Util is\n          Nam := Chars (Identifier (Item));\n \n       else pragma Assert (Nkind (Item) = N_Pragma);\n-         Nam := Pragma_Name_Mapped (Item);\n+         Nam := Pragma_Name (Item);\n       end if;\n \n       return    Nam = Name_Contract_Cases"}, {"sha": "f1a12a9380e871ceaa239ba9096411253d83da1c", "filename": "gcc/ada/sem_util.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e759c2a0f950ce535e7907db39ddc3866782ade/gcc%2Fada%2Fsem_util.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e759c2a0f950ce535e7907db39ddc3866782ade/gcc%2Fada%2Fsem_util.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.ads?ref=6e759c2a0f950ce535e7907db39ddc3866782ade", "patch": "@@ -940,7 +940,7 @@ package Sem_Util is\n \n    function Get_Pragma_Id (N : Node_Id) return Pragma_Id;\n    pragma Inline (Get_Pragma_Id);\n-   --  Obtains the Pragma_Id from Pragma_Name (N)\n+   --  Obtains the Pragma_Id from Pragma_Name_Unmapped (N)\n \n    function Get_Qualified_Name\n      (Id     : Entity_Id;"}, {"sha": "18f94e5001428bac3d848f45d07175c2b5d3a9a3", "filename": "gcc/ada/sem_warn.adb", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e759c2a0f950ce535e7907db39ddc3866782ade/gcc%2Fada%2Fsem_warn.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e759c2a0f950ce535e7907db39ddc3866782ade/gcc%2Fada%2Fsem_warn.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_warn.adb?ref=6e759c2a0f950ce535e7907db39ddc3866782ade", "patch": "@@ -1877,7 +1877,7 @@ package body Sem_Warn is\n                         Nod := Parent (N);\n                         while Present (Nod) loop\n                            if Nkind (Nod) = N_Pragma\n-                             and then Nam_In (Pragma_Name (Nod),\n+                             and then Nam_In (Pragma_Name_Unmapped (Nod),\n                                               Name_Postcondition,\n                                               Name_Refined_Post,\n                                               Name_Contract_Cases)\n@@ -1888,7 +1888,7 @@ package body Sem_Warn is\n                               P := Parent (Nod);\n \n                               if Nkind (P) = N_Pragma\n-                                and then Pragma_Name_Mapped (P) =\n+                                and then Pragma_Name (P) =\n                                   Name_Test_Case\n                                 and then Nod = Test_Case_Arg (P, Name_Ensures)\n                               then\n@@ -3399,8 +3399,8 @@ package body Sem_Warn is\n             --  node, since assert pragmas get rewritten at analysis time.\n \n             elsif Nkind (Original_Node (P)) = N_Pragma\n-              and then Nam_In (Pragma_Name (Original_Node (P)), Name_Assert,\n-                                                                Name_Check)\n+              and then Nam_In (Pragma_Name_Unmapped (Original_Node (P)),\n+                               Name_Assert, Name_Check)\n             then\n                return;\n             end if;"}, {"sha": "2d6e1af64d795142e50452584bf51afde597a021", "filename": "gcc/ada/sinfo.adb", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e759c2a0f950ce535e7907db39ddc3866782ade/gcc%2Fada%2Fsinfo.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e759c2a0f950ce535e7907db39ddc3866782ade/gcc%2Fada%2Fsinfo.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsinfo.adb?ref=6e759c2a0f950ce535e7907db39ddc3866782ade", "patch": "@@ -6829,10 +6829,10 @@ package body Sinfo is\n    -- Pragma_Name --\n    -----------------\n \n-   function Pragma_Name (N : Node_Id) return Name_Id is\n+   function Pragma_Name_Unmapped (N : Node_Id) return Name_Id is\n    begin\n       return Chars (Pragma_Identifier (N));\n-   end Pragma_Name;\n+   end Pragma_Name_Unmapped;\n \n    ---------------------\n    -- Map_Pragma_Name --\n@@ -6862,12 +6862,12 @@ package body Sinfo is\n       Pragma_Map (Last_Pair) := (Key => From, Value => To);\n    end Map_Pragma_Name;\n \n-   ------------------------\n-   -- Pragma_Name_Mapped --\n-   ------------------------\n+   -----------------\n+   -- Pragma_Name --\n+   -----------------\n \n-   function Pragma_Name_Mapped (N : Node_Id) return Name_Id is\n-      Result : constant Name_Id := Pragma_Name (N);\n+   function Pragma_Name (N : Node_Id) return Name_Id is\n+      Result : constant Name_Id := Pragma_Name_Unmapped (N);\n    begin\n       for J in Pragma_Map'Range loop\n          if Result = Pragma_Map (J).Key then\n@@ -6876,6 +6876,6 @@ package body Sinfo is\n       end loop;\n \n       return Result;\n-   end Pragma_Name_Mapped;\n+   end Pragma_Name;\n \n end Sinfo;"}, {"sha": "a0bfd46e5723fbad9b056de42e3748ea32aa2337", "filename": "gcc/ada/sinfo.ads", "status": "modified", "additions": 9, "deletions": 8, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e759c2a0f950ce535e7907db39ddc3866782ade/gcc%2Fada%2Fsinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e759c2a0f950ce535e7907db39ddc3866782ade/gcc%2Fada%2Fsinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsinfo.ads?ref=6e759c2a0f950ce535e7907db39ddc3866782ade", "patch": "@@ -2534,8 +2534,8 @@ package Sinfo is\n       --  Psect_Object is always converted to Common_Object, but there are\n       --  undoubtedly many other similar notes required ???\n \n-      --  Note: a utility function Pragma_Name may be applied to pragma nodes\n-      --  to conveniently obtain the Chars field of the Pragma_Identifier.\n+      --  Note: utility functions Pragma_Name_Unmapped and Pragma_Name may be\n+      --  applied to pragma nodes to obtain the Chars or its mapped version.\n \n       --  Note: if From_Aspect_Specification is set, then Sloc points to the\n       --  aspect name, as does the Pragma_Identifier. In this case if the\n@@ -11019,9 +11019,9 @@ package Sinfo is\n    -- Utility Functions --\n    -----------------------\n \n-   function Pragma_Name (N : Node_Id) return Name_Id;\n-   pragma Inline (Pragma_Name);\n-   --  Convenient function to obtain Chars field of Pragma_Identifier\n+   function Pragma_Name_Unmapped (N : Node_Id) return Name_Id;\n+   --  Function to obtain Chars field of Pragma_Identifier. In most cases, you\n+   --  want to call Pragma_Name instead.\n \n    procedure Map_Pragma_Name (From, To : Name_Id);\n    --  Used in the implementation of pragma Rename_Pragma. Maps pragma name\n@@ -11032,9 +11032,10 @@ package Sinfo is\n    --  programs will use it at all, and those that do will use it approximately\n    --  once or twice.\n \n-   function Pragma_Name_Mapped (N : Node_Id) return Name_Id;\n-   --  Same as Pragma_Name, except that if From has been mapped to To, and\n-   --  Pragma_Name (N) = From, then this returns To.\n+   function Pragma_Name (N : Node_Id) return Name_Id;\n+   --  Same as Pragma_Name_Unmapped, except that if From has been mapped to To,\n+   --  and Pragma_Name_Unmapped (N) = From, then this returns To. In other\n+   --  words, this takes into account pragmas Rename_Pragma.\n \n    -----------------------------\n    -- Syntactic Parent Tables --"}, {"sha": "1e82a1f024f21179ce5d2a4401f35f133392d5bd", "filename": "gcc/ada/sprint.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e759c2a0f950ce535e7907db39ddc3866782ade/gcc%2Fada%2Fsprint.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e759c2a0f950ce535e7907db39ddc3866782ade/gcc%2Fada%2Fsprint.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsprint.adb?ref=6e759c2a0f950ce535e7907db39ddc3866782ade", "patch": "@@ -2824,7 +2824,7 @@ package body Sprint is\n \n          when N_Pragma =>\n             Write_Indent_Str_Sloc (\"pragma \");\n-            Write_Name_With_Col_Check (Pragma_Name (Node));\n+            Write_Name_With_Col_Check (Pragma_Name_Unmapped (Node));\n \n             if Present (Pragma_Argument_Associations (Node)) then\n                Sprint_Opt_Paren_Comma_List"}]}