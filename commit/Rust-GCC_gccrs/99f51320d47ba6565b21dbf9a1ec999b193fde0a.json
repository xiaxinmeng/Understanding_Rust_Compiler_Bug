{"sha": "99f51320d47ba6565b21dbf9a1ec999b193fde0a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTlmNTEzMjBkNDdiYTY1NjViMjFkYmY5YTFlYzk5OWIxOTNmZGUwYQ==", "commit": {"author": {"name": "Ira Rosen", "email": "irar@il.ibm.com", "date": "2010-02-16T11:35:03Z"}, "committer": {"name": "Ira Rosen", "email": "irar@gcc.gnu.org", "date": "2010-02-16T11:35:03Z"}, "message": "re PR tree-optimization/43074 (ICE in vectorizable_reduction, at tree-vect-loop.c:3491)\n\n\n\tPR tree-optimization/43074\n\t* tree-vectorizer.h (VECTORIZABLE_CYCLE_DEF): New.\n\t* tree-vect-loop.c (vect_analyze_loop_operations): Add\n\tvectorizable cycles in hybrid SLP check.\n\t* tree-vect-slp.c (vect_detect_hybrid_slp_stmts): Likewise.\n\nFrom-SVN: r156800", "tree": {"sha": "e9f104bb7db8c23a9f89870f72aee6f61efe9bce", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e9f104bb7db8c23a9f89870f72aee6f61efe9bce"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/99f51320d47ba6565b21dbf9a1ec999b193fde0a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/99f51320d47ba6565b21dbf9a1ec999b193fde0a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/99f51320d47ba6565b21dbf9a1ec999b193fde0a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/99f51320d47ba6565b21dbf9a1ec999b193fde0a/comments", "author": {"login": "irar2", "id": 16818592, "node_id": "MDQ6VXNlcjE2ODE4NTky", "avatar_url": "https://avatars.githubusercontent.com/u/16818592?v=4", "gravatar_id": "", "url": "https://api.github.com/users/irar2", "html_url": "https://github.com/irar2", "followers_url": "https://api.github.com/users/irar2/followers", "following_url": "https://api.github.com/users/irar2/following{/other_user}", "gists_url": "https://api.github.com/users/irar2/gists{/gist_id}", "starred_url": "https://api.github.com/users/irar2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/irar2/subscriptions", "organizations_url": "https://api.github.com/users/irar2/orgs", "repos_url": "https://api.github.com/users/irar2/repos", "events_url": "https://api.github.com/users/irar2/events{/privacy}", "received_events_url": "https://api.github.com/users/irar2/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f47e08d97a42b58e87bb4edaaa7889743c064b54", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f47e08d97a42b58e87bb4edaaa7889743c064b54", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f47e08d97a42b58e87bb4edaaa7889743c064b54"}], "stats": {"total": 46, "additions": 42, "deletions": 4}, "files": [{"sha": "4495a31099733f19deec46c20903a99fa0c5902b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/99f51320d47ba6565b21dbf9a1ec999b193fde0a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/99f51320d47ba6565b21dbf9a1ec999b193fde0a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=99f51320d47ba6565b21dbf9a1ec999b193fde0a", "patch": "@@ -1,3 +1,11 @@\n+2010-02-16  Ira Rosen <irar@il.ibm.com>\n+\n+\tPR tree-optimization/43074\n+\t* tree-vectorizer.h (VECTORIZABLE_CYCLE_DEF): New.\n+\t* tree-vect-loop.c (vect_analyze_loop_operations): Add\n+\tvectorizable cycles in hybrid SLP check.\n+\t* tree-vect-slp.c (vect_detect_hybrid_slp_stmts): Likewise.\n+\n 2010-02-16  Richard Guenther  <rguenther@suse.de>\n \n \t* alias.c (memrefs_conflict_p): Distinguish must-alias from"}, {"sha": "7e06ff711c4a2e64919176fc96e195f29c1f9763", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/99f51320d47ba6565b21dbf9a1ec999b193fde0a/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/99f51320d47ba6565b21dbf9a1ec999b193fde0a/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=99f51320d47ba6565b21dbf9a1ec999b193fde0a", "patch": "@@ -1,3 +1,8 @@\n+2010-02-16  Ira Rosen <irar@il.ibm.com>\n+\n+\tPR tree-optimization/43074\n+\t* gcc.dg/vect/fast-math-pr43074.c: New test.\n+\n 2010-02-16  Jakub Jelinek  <jakub@redhat.com>\n \n \t* lib/prune.exp: Prune variable tracking size limit exceeded"}, {"sha": "80077ba7d0d7bf28badd08a5f524433930fb32b3", "filename": "gcc/testsuite/gcc.dg/vect/fast-math-pr43074.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/99f51320d47ba6565b21dbf9a1ec999b193fde0a/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Ffast-math-pr43074.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/99f51320d47ba6565b21dbf9a1ec999b193fde0a/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Ffast-math-pr43074.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Ffast-math-pr43074.c?ref=99f51320d47ba6565b21dbf9a1ec999b193fde0a", "patch": "@@ -0,0 +1,16 @@\n+/* { dg-do compile } */\n+\n+float\n+pvslockprocess(float *fout, float *fin, int framesize)\n+{\n+  int i;\n+  float mag=0.0f, diff;\n+  for (i = 0; i < framesize; i += 2) {\n+      mag += fin[i];\n+      fout[i] = fin[i];\n+      fout[i+1] = fin[i+1];\n+  }\n+  return mag;\n+}\n+\n+/* { dg-final { cleanup-tree-dump \"vect\" } } */"}, {"sha": "16aa242e7fe7a07b964a35eea52ab1051ecded88", "filename": "gcc/tree-vect-loop.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/99f51320d47ba6565b21dbf9a1ec999b193fde0a/gcc%2Ftree-vect-loop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/99f51320d47ba6565b21dbf9a1ec999b193fde0a/gcc%2Ftree-vect-loop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-loop.c?ref=99f51320d47ba6565b21dbf9a1ec999b193fde0a", "patch": "@@ -1184,7 +1184,10 @@ vect_analyze_loop_operations (loop_vec_info loop_vinfo)\n \t  if (!vect_analyze_stmt (stmt, &need_to_vectorize, NULL))\n \t    return false;\n \n-          if (STMT_VINFO_RELEVANT_P (stmt_info) && !PURE_SLP_STMT (stmt_info))\n+          if ((STMT_VINFO_RELEVANT_P (stmt_info)\n+               || VECTORIZABLE_CYCLE_DEF (STMT_VINFO_DEF_TYPE (stmt_info)))\n+              && !PURE_SLP_STMT (stmt_info))\n+\n             /* STMT needs both SLP and loop-based vectorization.  */\n             only_slp_in_loop = false;\n         }"}, {"sha": "5a11b84a95347fa9d8d9fa318df551c704969e37", "filename": "gcc/tree-vect-slp.c", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/99f51320d47ba6565b21dbf9a1ec999b193fde0a/gcc%2Ftree-vect-slp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/99f51320d47ba6565b21dbf9a1ec999b193fde0a/gcc%2Ftree-vect-slp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-slp.c?ref=99f51320d47ba6565b21dbf9a1ec999b193fde0a", "patch": "@@ -1102,6 +1102,7 @@ vect_detect_hybrid_slp_stmts (slp_tree node)\n   gimple stmt;\n   imm_use_iterator imm_iter;\n   gimple use_stmt;\n+  stmt_vec_info stmt_vinfo; \n \n   if (!node)\n     return;\n@@ -1110,9 +1111,10 @@ vect_detect_hybrid_slp_stmts (slp_tree node)\n     if (PURE_SLP_STMT (vinfo_for_stmt (stmt))\n \t&& TREE_CODE (gimple_op (stmt, 0)) == SSA_NAME)\n       FOR_EACH_IMM_USE_STMT (use_stmt, imm_iter, gimple_op (stmt, 0))\n-\tif (vinfo_for_stmt (use_stmt)\n-\t    && !STMT_SLP_TYPE (vinfo_for_stmt (use_stmt))\n-            && STMT_VINFO_RELEVANT (vinfo_for_stmt (use_stmt)))\n+\tif ((stmt_vinfo = vinfo_for_stmt (use_stmt))\n+\t    && !STMT_SLP_TYPE (stmt_vinfo)\n+            && (STMT_VINFO_RELEVANT (stmt_vinfo)\n+                || VECTORIZABLE_CYCLE_DEF (STMT_VINFO_DEF_TYPE (stmt_vinfo))))\n \t  vect_mark_slp_stmts (node, hybrid, i);\n \n   vect_detect_hybrid_slp_stmts (SLP_TREE_LEFT (node));"}, {"sha": "2217a7ccc03b9963fbae5d50296f225150bfcef9", "filename": "gcc/tree-vectorizer.h", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/99f51320d47ba6565b21dbf9a1ec999b193fde0a/gcc%2Ftree-vectorizer.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/99f51320d47ba6565b21dbf9a1ec999b193fde0a/gcc%2Ftree-vectorizer.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vectorizer.h?ref=99f51320d47ba6565b21dbf9a1ec999b193fde0a", "patch": "@@ -66,6 +66,10 @@ enum vect_def_type {\n   vect_unknown_def_type\n };\n \n+#define VECTORIZABLE_CYCLE_DEF(D) (((D) == vect_reduction_def)           \\\n+                                   || ((D) == vect_double_reduction_def) \\\n+                                   || ((D) == vect_nested_cycle))\n+\n /* Define verbosity levels.  */\n enum verbosity_levels {\n   REPORT_NONE,"}]}