{"sha": "b446a5f1693fa10ea19c1731ae30e3f8619d2208", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjQ0NmE1ZjE2OTNmYTEwZWExOWMxNzMxYWUzMGUzZjg2MTlkMjIwOA==", "commit": {"author": {"name": "Tom Tromey", "email": "tromey@redhat.com", "date": "2002-04-26T22:39:29Z"}, "committer": {"name": "Tom Tromey", "email": "tromey@gcc.gnu.org", "date": "2002-04-26T22:39:29Z"}, "message": "verify.cc (construct_primitive_array_type): New case.\n\n\t* verify.cc (construct_primitive_array_type) [void_type]: New\n\tcase.\n\t(branch_prepass): Added dummy entries for unused instruction\n\tvalues.\n\t(verify_instructions_0): Likewise.\n\t* interpret.cc (continue1): Comment fix.\n\t* include/java-insns.h (op_xxxunusedxxx1): Removed.\n\t* Makefile.in: Rebuilt.\n\t* Makefile.am: Added -Wswitch-enum.\n\nFrom-SVN: r52814", "tree": {"sha": "e10df97a16d840f306fafb0e4f11baec69c4c52c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e10df97a16d840f306fafb0e4f11baec69c4c52c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b446a5f1693fa10ea19c1731ae30e3f8619d2208", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b446a5f1693fa10ea19c1731ae30e3f8619d2208", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b446a5f1693fa10ea19c1731ae30e3f8619d2208", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b446a5f1693fa10ea19c1731ae30e3f8619d2208/comments", "author": null, "committer": null, "parents": [{"sha": "9e84766671f922ebddb93731e4b6928705a86c0d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9e84766671f922ebddb93731e4b6928705a86c0d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9e84766671f922ebddb93731e4b6928705a86c0d"}], "stats": {"total": 84, "additions": 81, "deletions": 3}, "files": [{"sha": "293358ac36dd2761056b170a74df4409c679d376", "filename": "libjava/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b446a5f1693fa10ea19c1731ae30e3f8619d2208/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b446a5f1693fa10ea19c1731ae30e3f8619d2208/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=b446a5f1693fa10ea19c1731ae30e3f8619d2208", "patch": "@@ -1,3 +1,15 @@\n+2002-04-26  Tom Tromey  <tromey@redhat.com>\n+\n+\t* verify.cc (construct_primitive_array_type) [void_type]: New\n+\tcase.\n+\t(branch_prepass): Added dummy entries for unused instruction\n+\tvalues.\n+\t(verify_instructions_0): Likewise.\n+\t* interpret.cc (continue1): Comment fix.\n+\t* include/java-insns.h (op_xxxunusedxxx1): Removed.\n+\t* Makefile.in: Rebuilt.\n+\t* Makefile.am: Added -Wswitch-enum.\n+\n 2002-04-24  Tom Tromey  <tromey@redhat.com>\n \n \t* gnu/gcj/natCore.cc (create): Use __builtin_alloca, and compute"}, {"sha": "92432eff22a7717e3037eccbf31850af78452d4a", "filename": "libjava/Makefile.am", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b446a5f1693fa10ea19c1731ae30e3f8619d2208/libjava%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b446a5f1693fa10ea19c1731ae30e3f8619d2208/libjava%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FMakefile.am?ref=b446a5f1693fa10ea19c1731ae30e3f8619d2208", "patch": "@@ -91,6 +91,8 @@ WARNINGS = -W -Wall\n AM_CXXFLAGS = -fno-rtti -fnon-call-exceptions \\\n ## Some systems don't allow `$' in identifiers by default, so we force it.\n \t-fdollars-in-identifiers \\\n+## Detect bugs in the verifier implementation, and maybe other places.\n+\t-Wswitch-enum \\\n \t@LIBGCJ_CXXFLAGS@ @X_CFLAGS@ $(WARNINGS) -D_GNU_SOURCE \\\n \t-DPREFIX=\"\\\"$(prefix)\\\"\"\n if USING_GCC"}, {"sha": "0b288e56a642502c86280fc51d33933ab2fa2df7", "filename": "libjava/Makefile.in", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b446a5f1693fa10ea19c1731ae30e3f8619d2208/libjava%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b446a5f1693fa10ea19c1731ae30e3f8619d2208/libjava%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FMakefile.in?ref=b446a5f1693fa10ea19c1731ae30e3f8619d2208", "patch": "@@ -181,6 +181,7 @@ GCC_UNWIND_INCLUDE = @GCC_UNWIND_INCLUDE@\n WARNINGS = -W -Wall\n AM_CXXFLAGS = -fno-rtti -fnon-call-exceptions \\\n \t-fdollars-in-identifiers \\\n+\t-Wswitch-enum \\\n \t@LIBGCJ_CXXFLAGS@ @X_CFLAGS@ $(WARNINGS) -D_GNU_SOURCE \\\n \t-DPREFIX=\"\\\"$(prefix)\\\"\"\n "}, {"sha": "a065987fc51b3d60705cfeb78c6a35c8327d6148", "filename": "libjava/include/java-insns.h", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b446a5f1693fa10ea19c1731ae30e3f8619d2208/libjava%2Finclude%2Fjava-insns.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b446a5f1693fa10ea19c1731ae30e3f8619d2208/libjava%2Finclude%2Fjava-insns.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Finclude%2Fjava-insns.h?ref=b446a5f1693fa10ea19c1731ae30e3f8619d2208", "patch": "@@ -1,6 +1,6 @@\n // java-insns.h - Instruction encodings. This is -*- c++ -*-\n \n-/* Copyright (C) 1999, 2001  Free Software Foundation\n+/* Copyright (C) 1999, 2001, 2002  Free Software Foundation\n \n    This file is part of libgcj.\n \n@@ -199,7 +199,9 @@ enum java_opcode\n   op_invokespecial = 0xb7,\n   op_invokestatic = 0xb8,\n   op_invokeinterface = 0xb9,\n-  op_xxxunusedxxx1 = 0xba,\n+\n+  // 0xba is unused.\n+\n   op_new = 0xbb,\n   op_newarray = 0xbc,\n   op_anewarray = 0xbd,"}, {"sha": "4db9dca08ec7a051655d98ff99f234e78a138b19", "filename": "libjava/interpret.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b446a5f1693fa10ea19c1731ae30e3f8619d2208/libjava%2Finterpret.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b446a5f1693fa10ea19c1731ae30e3f8619d2208/libjava%2Finterpret.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Finterpret.cc?ref=b446a5f1693fa10ea19c1731ae30e3f8619d2208", "patch": "@@ -628,7 +628,7 @@ void _Jv_InterpMethod::continue1 (_Jv_InterpMethodInvocation *inv)\n     INSN_LABEL(invokespecial),\n     INSN_LABEL(invokestatic),\n     INSN_LABEL(invokeinterface),\n-    0, /* op_xxxunusedxxx1, */\n+    0, /* Unused.  */\n     INSN_LABEL(new),\n     INSN_LABEL(newarray),\n     INSN_LABEL(anewarray),"}, {"sha": "405481977d707c03cf02e014310fc8776506df49", "filename": "libjava/verify.cc", "status": "modified", "additions": 61, "deletions": 0, "changes": 61, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b446a5f1693fa10ea19c1731ae30e3f8619d2208/libjava%2Fverify.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b446a5f1693fa10ea19c1731ae30e3f8619d2208/libjava%2Fverify.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fverify.cc?ref=b446a5f1693fa10ea19c1731ae30e3f8619d2208", "patch": "@@ -1525,6 +1525,19 @@ class _Jv_BytecodeVerifier\n       case long_type:\n \tk = JvPrimClass (long);\n \tbreak;\n+\n+      // These aren't used here but we call them out to avoid\n+      // warnings.\n+      case void_type:\n+      case unsuitable_type:\n+      case return_address_type:\n+      case continuation_type:\n+      case unused_by_subroutine_type:\n+      case reference_type:\n+      case null_type:\n+      case unresolved_reference_type:\n+      case uninitialized_reference_type:\n+      case uninitialized_unresolved_reference_type:\n       default:\n \tverify_fail (\"unknown type in construct_primitive_array_type\");\n       }\n@@ -1828,6 +1841,30 @@ class _Jv_BytecodeVerifier\n \t    note_branch_target (compute_jump (get_int ()), last_was_jsr);\n \t    break;\n \n+\t  // These are unused here, but we call them out explicitly\n+\t  // so that -Wswitch-enum doesn't complain.\n+\t  case op_putfield_1:\n+\t  case op_putfield_2:\n+\t  case op_putfield_4:\n+\t  case op_putfield_8:\n+\t  case op_putfield_a:\n+\t  case op_putstatic_1:\n+\t  case op_putstatic_2:\n+\t  case op_putstatic_4:\n+\t  case op_putstatic_8:\n+\t  case op_putstatic_a:\n+\t  case op_getfield_1:\n+\t  case op_getfield_2s:\n+\t  case op_getfield_2u:\n+\t  case op_getfield_4:\n+\t  case op_getfield_8:\n+\t  case op_getfield_a:\n+\t  case op_getstatic_1:\n+\t  case op_getstatic_2s:\n+\t  case op_getstatic_2u:\n+\t  case op_getstatic_4:\n+\t  case op_getstatic_8:\n+\t  case op_getstatic_a:\n \t  default:\n \t    verify_fail (\"unrecognized instruction in branch_prepass\",\n \t\t\t start_PC);\n@@ -2974,6 +3011,30 @@ class _Jv_BytecodeVerifier\n \t    handle_jsr_insn (get_int ());\n \t    break;\n \n+\t  // These are unused here, but we call them out explicitly\n+\t  // so that -Wswitch-enum doesn't complain.\n+\t  case op_putfield_1:\n+\t  case op_putfield_2:\n+\t  case op_putfield_4:\n+\t  case op_putfield_8:\n+\t  case op_putfield_a:\n+\t  case op_putstatic_1:\n+\t  case op_putstatic_2:\n+\t  case op_putstatic_4:\n+\t  case op_putstatic_8:\n+\t  case op_putstatic_a:\n+\t  case op_getfield_1:\n+\t  case op_getfield_2s:\n+\t  case op_getfield_2u:\n+\t  case op_getfield_4:\n+\t  case op_getfield_8:\n+\t  case op_getfield_a:\n+\t  case op_getstatic_1:\n+\t  case op_getstatic_2s:\n+\t  case op_getstatic_2u:\n+\t  case op_getstatic_4:\n+\t  case op_getstatic_8:\n+\t  case op_getstatic_a:\n \t  default:\n \t    // Unrecognized opcode.\n \t    verify_fail (\"unrecognized instruction in verify_instructions_0\","}]}