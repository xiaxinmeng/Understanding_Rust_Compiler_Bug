{"sha": "8b99f005cbf2fdc6968d75a13cd2c166795418b7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGI5OWYwMDVjYmYyZmRjNjk2OGQ3NWExM2NkMmMxNjY3OTU0MThiNw==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2016-11-15T14:33:09Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2016-11-15T14:33:09Z"}, "message": "Constrain swap overload for std::optional (LWG 2748)\n\n\t* doc/xml/manual/intro.xml: Document LWG 2748 status.\n\t* include/std/optional (optional<T>::swap): Use is_nothrow_swappable_v\n\tfor exception specification.\n\t(swap(optional<T>&, optional<T>&)): Disable when T is not swappable.\n\t* testsuite/20_util/optional/swap/2.cc: New test.\n\nFrom-SVN: r242415", "tree": {"sha": "3676a43416e28a113de8057900d835998c972dbb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3676a43416e28a113de8057900d835998c972dbb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8b99f005cbf2fdc6968d75a13cd2c166795418b7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8b99f005cbf2fdc6968d75a13cd2c166795418b7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8b99f005cbf2fdc6968d75a13cd2c166795418b7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8b99f005cbf2fdc6968d75a13cd2c166795418b7/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b229ab2a712ccd44126bcbcaed2da8b998e7366c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b229ab2a712ccd44126bcbcaed2da8b998e7366c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b229ab2a712ccd44126bcbcaed2da8b998e7366c"}], "stats": {"total": 70, "additions": 67, "deletions": 3}, "files": [{"sha": "42dedfcee526a1b1c8f69d55317e0df717f744d1", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8b99f005cbf2fdc6968d75a13cd2c166795418b7/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8b99f005cbf2fdc6968d75a13cd2c166795418b7/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=8b99f005cbf2fdc6968d75a13cd2c166795418b7", "patch": "@@ -1,3 +1,11 @@\n+2016-11-15  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* doc/xml/manual/intro.xml: Document LWG 2748 status.\n+\t* include/std/optional (optional<T>::swap): Use is_nothrow_swappable_v\n+\tfor exception specification.\n+\t(swap(optional<T>&, optional<T>&)): Disable when T is not swappable.\n+\t* testsuite/20_util/optional/swap/2.cc: New test.\n+\n 2016-11-14  Ville Voutilainen  <ville.voutilainen@gmail.com>\n \n \tImplement P0513R0, Poisoning the Hash."}, {"sha": "0df24bb5f2f93809f7864c17935363c4e01eda76", "filename": "libstdc++-v3/doc/xml/manual/intro.xml", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8b99f005cbf2fdc6968d75a13cd2c166795418b7/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fintro.xml", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8b99f005cbf2fdc6968d75a13cd2c166795418b7/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fintro.xml", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fintro.xml?ref=8b99f005cbf2fdc6968d75a13cd2c166795418b7", "patch": "@@ -1094,7 +1094,7 @@ requirements of the license of GCC.\n     </para></listitem></varlistentry>\n \n     <varlistentry><term><link xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"../ext/lwg-defects.html#2583\">2583</link>:\n-       <emphasis>There is no way to supply an allocator for <code> basic_string(str, pos)</code>\n+       <emphasis>There is no way to supply an allocator for <code>basic_string(str, pos)</code>\n        </emphasis>\n     </term>\n     <listitem><para>Add new constructor\n@@ -1107,6 +1107,14 @@ requirements of the license of GCC.\n     <listitem><para>Define the <code>value_compare</code> typedef.\n     </para></listitem></varlistentry>\n \n+    <varlistentry><term><link xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"../ext/lwg-defects.html#2748\">2748</link>:\n+       <emphasis>swappable traits for optionals\n+       </emphasis>\n+    </term>\n+    <listitem><para>Disable the non-member <code>swap</code> overload when\n+      the contained object is not swappable.\n+    </para></listitem></varlistentry>\n+\n   </variablelist>\n \n  </section>"}, {"sha": "ea673cc6e8b0b830ce57b198c7caf63e3f4bba25", "filename": "libstdc++-v3/include/std/optional", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8b99f005cbf2fdc6968d75a13cd2c166795418b7/libstdc%2B%2B-v3%2Finclude%2Fstd%2Foptional", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8b99f005cbf2fdc6968d75a13cd2c166795418b7/libstdc%2B%2B-v3%2Finclude%2Fstd%2Foptional", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Foptional?ref=8b99f005cbf2fdc6968d75a13cd2c166795418b7", "patch": "@@ -613,7 +613,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       void\n       swap(optional& __other)\n       noexcept(is_nothrow_move_constructible<_Tp>()\n-               && noexcept(swap(declval<_Tp&>(), declval<_Tp&>())))\n+               && is_nothrow_swappable_v<_Tp>)\n       {\n         using std::swap;\n \n@@ -920,8 +920,11 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n     { return !__rhs || __lhs >= *__rhs; }\n \n   // Swap and creation functions.\n+\n+  // _GLIBCXX_RESOLVE_LIB_DEFECTS\n+  // 2748. swappable traits for optionals\n   template<typename _Tp>\n-    inline void\n+    inline enable_if_t<is_move_constructible_v<_Tp> && is_swappable_v<_Tp>>\n     swap(optional<_Tp>& __lhs, optional<_Tp>& __rhs)\n     noexcept(noexcept(__lhs.swap(__rhs)))\n     { __lhs.swap(__rhs); }"}, {"sha": "5793488a3756b98f819c01c20ad7806a8ab81fe3", "filename": "libstdc++-v3/testsuite/20_util/optional/swap/2.cc", "status": "added", "additions": 45, "deletions": 0, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8b99f005cbf2fdc6968d75a13cd2c166795418b7/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Foptional%2Fswap%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8b99f005cbf2fdc6968d75a13cd2c166795418b7/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Foptional%2Fswap%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Foptional%2Fswap%2F2.cc?ref=8b99f005cbf2fdc6968d75a13cd2c166795418b7", "patch": "@@ -0,0 +1,45 @@\n+// { dg-options \"-std=gnu++17\" }\n+// { dg-do compile }\n+\n+// Copyright (C) 2016 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+#include <optional>\n+\n+// Swappable.\n+struct A { };\n+\n+static_assert( std::is_nothrow_swappable_v<A> );\n+static_assert( std::is_nothrow_swappable_v<std::optional<A>> );\n+\n+// Swappable, but might throw.\n+struct B { };\n+void swap(B&, B&) noexcept(false);\n+\n+static_assert( std::is_swappable_v<std::optional<B>> );\n+static_assert( !std::is_nothrow_swappable_v<std::optional<B>> );\n+\n+// Not swappable, but optional<C> is swappable via the generic std::swap.\n+struct C { };\n+void swap(C&, C&) = delete;\n+\n+static_assert( std::is_swappable_v<std::optional<C>> );\n+\n+// Not swappable, and optional<D> not swappable via the generic std::swap.\n+struct D { D(D&&) = delete; };\n+\n+static_assert( !std::is_swappable_v<std::optional<D>> );"}]}