{"sha": "035181c3129648328176cbdee69d2a7a66e0a895", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDM1MTgxYzMxMjk2NDgzMjgxNzZjYmRlZTY5ZDJhN2E2NmUwYTg5NQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2018-01-16T23:05:39Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2018-01-16T23:05:39Z"}, "message": "PR c++/83714 - ICE checking return in template.\n\n\t* typeck.c (check_return_expr): Call build_non_dependent_expr.\n\nFrom-SVN: r256765", "tree": {"sha": "52222d646004e51cbef2853abbca932c13a1bbd8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/52222d646004e51cbef2853abbca932c13a1bbd8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/035181c3129648328176cbdee69d2a7a66e0a895", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/035181c3129648328176cbdee69d2a7a66e0a895", "html_url": "https://github.com/Rust-GCC/gccrs/commit/035181c3129648328176cbdee69d2a7a66e0a895", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/035181c3129648328176cbdee69d2a7a66e0a895/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a9db08a673d3088d8e60663e2b9643e8ad41b1cf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a9db08a673d3088d8e60663e2b9643e8ad41b1cf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a9db08a673d3088d8e60663e2b9643e8ad41b1cf"}], "stats": {"total": 24, "additions": 24, "deletions": 0}, "files": [{"sha": "d378cb2ff3fb144252624990f360cd303b6442eb", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/035181c3129648328176cbdee69d2a7a66e0a895/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/035181c3129648328176cbdee69d2a7a66e0a895/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=035181c3129648328176cbdee69d2a7a66e0a895", "patch": "@@ -1,3 +1,8 @@\n+2018-01-16  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/83714 - ICE checking return in template.\n+\t* typeck.c (check_return_expr): Call build_non_dependent_expr.\n+\n 2018-01-16  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c++/83817"}, {"sha": "d0adb798278431b1e65b7f813d129d7532bebd79", "filename": "gcc/cp/typeck.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/035181c3129648328176cbdee69d2a7a66e0a895/gcc%2Fcp%2Ftypeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/035181c3129648328176cbdee69d2a7a66e0a895/gcc%2Fcp%2Ftypeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck.c?ref=035181c3129648328176cbdee69d2a7a66e0a895", "patch": "@@ -9333,6 +9333,9 @@ check_return_expr (tree retval, bool *no_warning)\n \t to undo it so we can try to treat it as an rvalue below.  */\n       retval = maybe_undo_parenthesized_ref (retval);\n \n+      if (processing_template_decl)\n+\tretval = build_non_dependent_expr (retval);\n+\n       /* Under C++11 [12.8/32 class.copy], a returned lvalue is sometimes\n \t treated as an rvalue for the purposes of overload resolution to\n \t favor move constructors over copy constructors."}, {"sha": "670d91a158ce6e65e3371427fa495d6292df32b3", "filename": "gcc/testsuite/g++.dg/cpp0x/alias-decl-61.C", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/035181c3129648328176cbdee69d2a7a66e0a895/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Falias-decl-61.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/035181c3129648328176cbdee69d2a7a66e0a895/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Falias-decl-61.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Falias-decl-61.C?ref=035181c3129648328176cbdee69d2a7a66e0a895", "patch": "@@ -0,0 +1,16 @@\n+// PR c++/83714\n+// { dg-do compile { target c++11 } }\n+\n+class a {\n+  typedef int b;\n+  operator b();\n+};\n+struct c {\n+  using d = a;\n+};\n+using e = c;\n+\n+template <class T>\n+e f(T) {\n+  return e::d {};\t\t// { dg-error \"could not convert\" }\n+}"}]}