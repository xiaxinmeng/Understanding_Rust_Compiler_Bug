{"sha": "61b70fcb8c1015ea3ab5c95aef41b23100579ec0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjFiNzBmY2I4YzEwMTVlYTNhYjVjOTVhZWY0MWIyMzEwMDU3OWVjMA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2008-09-30T17:00:49Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2008-09-30T17:00:49Z"}, "message": "re PR tree-optimization/37662 (ice: tree check: expected ssa_name, have integer_cst in get_value_range, at tree-vrp.c:612)\n\n\tPR tree-optimization/37662\n\tPR tree-optimization/37663\n\t* tree-vrp.c (simplify_truth_ops_using_ranges): Don't call\n\tget_value_range with non-SSA_NAME.  Don't assert operands have been\n\tfolded, instead just bail out.\n\n\t* gcc.c-torture/compile/pr37662.c: New test.\n\t* gcc.dg/pr37663.c: New test.\n\nFrom-SVN: r140792", "tree": {"sha": "8778240bb51385dce2d7f5357fca1e70aa8b6e29", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8778240bb51385dce2d7f5357fca1e70aa8b6e29"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/61b70fcb8c1015ea3ab5c95aef41b23100579ec0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/61b70fcb8c1015ea3ab5c95aef41b23100579ec0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/61b70fcb8c1015ea3ab5c95aef41b23100579ec0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/61b70fcb8c1015ea3ab5c95aef41b23100579ec0/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "00625faea4cda0dfc67ab80eb96ece62fecc7423", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/00625faea4cda0dfc67ab80eb96ece62fecc7423", "html_url": "https://github.com/Rust-GCC/gccrs/commit/00625faea4cda0dfc67ab80eb96ece62fecc7423"}], "stats": {"total": 63, "additions": 58, "deletions": 5}, "files": [{"sha": "ba26097f14b46bc8848c1c8ae1744e693f407fe7", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/61b70fcb8c1015ea3ab5c95aef41b23100579ec0/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/61b70fcb8c1015ea3ab5c95aef41b23100579ec0/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=61b70fcb8c1015ea3ab5c95aef41b23100579ec0", "patch": "@@ -1,3 +1,11 @@\n+2008-09-30  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/37662\n+\tPR tree-optimization/37663\n+\t* tree-vrp.c (simplify_truth_ops_using_ranges): Don't call\n+\tget_value_range with non-SSA_NAME.  Don't assert operands have been\n+\tfolded, instead just bail out.\n+\n 2008-09-30  Andrew Pinski  <andrew_pinski@playstation.sony.com>\n \n \t* config/rs6000/rs6000.md (fnmadds combiner): Revert typo."}, {"sha": "fe699e392fb23062331d899239983e44717e62d3", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/61b70fcb8c1015ea3ab5c95aef41b23100579ec0/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/61b70fcb8c1015ea3ab5c95aef41b23100579ec0/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=61b70fcb8c1015ea3ab5c95aef41b23100579ec0", "patch": "@@ -1,3 +1,10 @@\n+2008-09-30  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/37662\n+\tPR tree-optimization/37663\n+\t* gcc.c-torture/compile/pr37662.c: New test.\n+\t* gcc.dg/pr37663.c: New test.\n+\n 2008-09-30  Janus Weil  <janus@gcc.gnu.org>\n \n \tPR fortran/36592"}, {"sha": "f6977438e730b9b3484de69b41ff31c961dc0a1e", "filename": "gcc/testsuite/gcc.c-torture/compile/pr37662.c", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/61b70fcb8c1015ea3ab5c95aef41b23100579ec0/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr37662.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/61b70fcb8c1015ea3ab5c95aef41b23100579ec0/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr37662.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr37662.c?ref=61b70fcb8c1015ea3ab5c95aef41b23100579ec0", "patch": "@@ -0,0 +1,15 @@\n+/* PR tree-optimization/37662 */\n+\n+extern int baz (void);\n+\n+static int\n+foo (void)\n+{\n+  return 1;\n+}\n+\n+int\n+bar (void)\n+{\n+  return foo () >= 1 ^ (baz () || 0) || 0;\n+}"}, {"sha": "05488ebb70859189a8b988b8a5d0df3c2700fd00", "filename": "gcc/testsuite/gcc.dg/pr37663.c", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/61b70fcb8c1015ea3ab5c95aef41b23100579ec0/gcc%2Ftestsuite%2Fgcc.dg%2Fpr37663.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/61b70fcb8c1015ea3ab5c95aef41b23100579ec0/gcc%2Ftestsuite%2Fgcc.dg%2Fpr37663.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr37663.c?ref=61b70fcb8c1015ea3ab5c95aef41b23100579ec0", "patch": "@@ -0,0 +1,15 @@\n+/* PR tree-optimization/37663 */\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -fwrapv\" } */\n+\n+extern void bar (void);\n+\n+void\n+foo (int x)\n+{\n+  x = 1 >= x;\n+  int y = -1885403717;\n+  x = x + (x != y * y);\n+  if (x)\n+    bar ();\n+}"}, {"sha": "4f1c3288ce7785fe0196948eaae3935e07335300", "filename": "gcc/tree-vrp.c", "status": "modified", "additions": 13, "deletions": 5, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/61b70fcb8c1015ea3ab5c95aef41b23100579ec0/gcc%2Ftree-vrp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/61b70fcb8c1015ea3ab5c95aef41b23100579ec0/gcc%2Ftree-vrp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vrp.c?ref=61b70fcb8c1015ea3ab5c95aef41b23100579ec0", "patch": "@@ -6304,9 +6304,12 @@ simplify_truth_ops_using_ranges (gimple_stmt_iterator *gsi, gimple stmt)\n   bool need_conversion;\n \n   op0 = gimple_assign_rhs1 (stmt);\n-  vr = get_value_range (op0);\n   if (TYPE_PRECISION (TREE_TYPE (op0)) != 1)\n     {\n+      if (TREE_CODE (op0) != SSA_NAME)\n+\treturn false;\n+      vr = get_value_range (op0);\n+\n       val = compare_range_with_value (GE_EXPR, vr, integer_zero_node, &sop);\n       if (!val || !integer_onep (val))\n         return false;\n@@ -6329,10 +6332,15 @@ simplify_truth_ops_using_ranges (gimple_stmt_iterator *gsi, gimple stmt)\n       if (is_gimple_min_invariant (op1))\n \t{\n           /* Exclude anything that should have been already folded.  */\n-\t  gcc_assert (rhs_code == EQ_EXPR || rhs_code == NE_EXPR\n-\t\t      || rhs_code == TRUTH_XOR_EXPR);\n-\t  gcc_assert (integer_zerop (op1) || integer_onep (op1)\n-\t\t      || integer_all_onesp (op1));\n+\t  if (rhs_code != EQ_EXPR\n+\t      && rhs_code != NE_EXPR\n+\t      && rhs_code != TRUTH_XOR_EXPR)\n+\t    return false;\n+\n+\t  if (!integer_zerop (op1)\n+\t      && !integer_onep (op1)\n+\t      && !integer_all_onesp (op1))\n+\t    return false;\n \n \t  /* Limit the number of cases we have to consider.  */\n \t  if (rhs_code == EQ_EXPR)"}]}