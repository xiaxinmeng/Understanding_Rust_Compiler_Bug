{"sha": "dd6d68a933873f79f399cd66c0f340fa8c5d9c73", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGQ2ZDY4YTkzMzg3M2Y3OWYzOTljZDY2YzBmMzQwZmE4YzVkOWM3Mw==", "commit": {"author": {"name": "Kaveh R. Ghazi", "email": "ghazi@caip.rutgers.edu", "date": "1999-10-06T21:23:52Z"}, "committer": {"name": "Kaveh Ghazi", "email": "ghazi@gcc.gnu.org", "date": "1999-10-06T21:23:52Z"}, "message": "* flow.c (verify_flow_info): Make it extern & unconditionally define.\n\nFrom-SVN: r29847", "tree": {"sha": "ec6c8769f19f0068e6374ea519557073c618d46e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ec6c8769f19f0068e6374ea519557073c618d46e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dd6d68a933873f79f399cd66c0f340fa8c5d9c73", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dd6d68a933873f79f399cd66c0f340fa8c5d9c73", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dd6d68a933873f79f399cd66c0f340fa8c5d9c73", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dd6d68a933873f79f399cd66c0f340fa8c5d9c73/comments", "author": null, "committer": null, "parents": [{"sha": "129a720f0a411ceb6513c3ea18314bbfd11f60a7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/129a720f0a411ceb6513c3ea18314bbfd11f60a7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/129a720f0a411ceb6513c3ea18314bbfd11f60a7"}], "stats": {"total": 16, "additions": 10, "deletions": 6}, "files": [{"sha": "e8d81ba2f9a84415104c48d91b7776cc7d5b5cca", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dd6d68a933873f79f399cd66c0f340fa8c5d9c73/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dd6d68a933873f79f399cd66c0f340fa8c5d9c73/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=dd6d68a933873f79f399cd66c0f340fa8c5d9c73", "patch": "@@ -1,3 +1,7 @@\n+Wed Oct  6 17:17:08 1999  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n+\n+\t* flow.c (verify_flow_info): Make it extern & unconditionally define.\n+\n 1999-10-06  Brendan Kehoe  <brendan@cygnus.com>\n \n \t* sparc/sp86x-elf.h (SUBTARGET_SWITCHES): Add missing doc"}, {"sha": "d224174a8c0d434fc0735dc89fd2f398be88f3ac", "filename": "gcc/flow.c", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dd6d68a933873f79f399cd66c0f340fa8c5d9c73/gcc%2Fflow.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dd6d68a933873f79f399cd66c0f340fa8c5d9c73/gcc%2Fflow.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fflow.c?ref=dd6d68a933873f79f399cd66c0f340fa8c5d9c73", "patch": "@@ -354,15 +354,17 @@ static int maybe_add_dead_note\t\tPROTO ((rtx, rtx, rtx));\n static int sets_reg_or_subreg\t\tPROTO ((rtx, rtx));\n static void update_n_sets \t\tPROTO ((rtx, int));\n static void new_insn_dead_notes\t\tPROTO ((rtx, rtx, rtx, rtx, rtx, rtx));\n-#ifdef ENABLE_CHECKING\n-static void verify_flow_info\t\tPROTO ((void));\n-#endif\n static void split_hard_reg_notes\tPROTO ((rtx, rtx, rtx, rtx));\n static rtx find_insn_with_note\t\tPROTO ((rtx, rtx, rtx));\n static void sets_reg_or_subreg_1\tPROTO ((rtx, rtx));\n static rtx prepend_reg_notes\t\tPROTO ((rtx, rtx));\n static void remove_edge\t\t\tPROTO ((edge));\n static void remove_fake_successors\tPROTO ((basic_block));\n+\n+/* This function is always defined so it can be called from the\n+   debugger, and it is declared extern so we don't get warnings about\n+   it being unused. */\n+extern void verify_flow_info PROTO ((void));\n \f\n /* Find basic blocks of the current function.\n    F is the first insn of the function and NREGS the number of register\n@@ -6480,8 +6482,7 @@ replace_insns (first, last, first_new, notes)\n    In future it can be extended check a lot of other stuff as well\n    (reachability of basic blocks, life information, etc. etc.).  */\n \n-#ifdef ENABLE_CHECKING\n-static void\n+void\n verify_flow_info ()\n {\n   const int max_uid = get_max_uid ();\n@@ -6684,7 +6685,6 @@ verify_flow_info ()\n       x = NEXT_INSN (x);\n     }\n }\n-#endif\n \f\n /* Functions to access an edge list with a vector representation.\n    Enough data is kept such that given an index number, the "}]}