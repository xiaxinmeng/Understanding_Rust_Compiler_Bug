{"sha": "a5281f1796c6c2e77400e621253b409280180a2c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTUyODFmMTc5NmM2YzJlNzc0MDBlNjIxMjUzYjQwOTI4MDE4MGEyYw==", "commit": {"author": {"name": "Siva Chandra Reddy", "email": "sivachandra@google.com", "date": "2014-11-11T11:35:34Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2014-11-11T11:35:34Z"}, "message": "xmethods.py: Add xmethods for associative containers.\n\n2014-11-11  Siva Chandra Reddy  <sivachandra@google.com>\n\n\t* python/libstdcxx/v6/xmethods.py: Add xmethods for associative\n\tcontainers.\n\t* testsuite/libstdc++-xmethods/associative-containers.cc: New file.\n\nFrom-SVN: r217344", "tree": {"sha": "6d783066519413aa3c376dc99370de8e6867f861", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6d783066519413aa3c376dc99370de8e6867f861"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a5281f1796c6c2e77400e621253b409280180a2c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a5281f1796c6c2e77400e621253b409280180a2c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a5281f1796c6c2e77400e621253b409280180a2c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a5281f1796c6c2e77400e621253b409280180a2c/comments", "author": {"login": "sivachandra", "id": 635361, "node_id": "MDQ6VXNlcjYzNTM2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/635361?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sivachandra", "html_url": "https://github.com/sivachandra", "followers_url": "https://api.github.com/users/sivachandra/followers", "following_url": "https://api.github.com/users/sivachandra/following{/other_user}", "gists_url": "https://api.github.com/users/sivachandra/gists{/gist_id}", "starred_url": "https://api.github.com/users/sivachandra/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sivachandra/subscriptions", "organizations_url": "https://api.github.com/users/sivachandra/orgs", "repos_url": "https://api.github.com/users/sivachandra/repos", "events_url": "https://api.github.com/users/sivachandra/events{/privacy}", "received_events_url": "https://api.github.com/users/sivachandra/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e9c51193eaa1ccb0fd3dd1b66629e2001f3bdb35", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e9c51193eaa1ccb0fd3dd1b66629e2001f3bdb35", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e9c51193eaa1ccb0fd3dd1b66629e2001f3bdb35"}], "stats": {"total": 66, "additions": 66, "deletions": 0}, "files": [{"sha": "dd810a9c3901beaf2e41773010ad2f853b4f8f07", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5281f1796c6c2e77400e621253b409280180a2c/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5281f1796c6c2e77400e621253b409280180a2c/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=a5281f1796c6c2e77400e621253b409280180a2c", "patch": "@@ -1,3 +1,9 @@\n+2014-11-11  Siva Chandra Reddy  <sivachandra@google.com>\n+\n+\t* python/libstdcxx/v6/xmethods.py: Add xmethods for associative\n+\tcontainers.\n+\t* testsuite/libstdc++-xmethods/associative-containers.cc: New file.\n+\n 2014-11-11  Jonathan Wakely  <jwakely@redhat.com>\n \n \tPR libstdc++/63811"}, {"sha": "2198411dcfdc4cc26cad3237ff0c0dae83da32fb", "filename": "libstdc++-v3/python/libstdcxx/v6/xmethods.py", "status": "modified", "additions": 60, "deletions": 0, "changes": 60, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5281f1796c6c2e77400e621253b409280180a2c/libstdc%2B%2B-v3%2Fpython%2Flibstdcxx%2Fv6%2Fxmethods.py", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5281f1796c6c2e77400e621253b409280180a2c/libstdc%2B%2B-v3%2Fpython%2Flibstdcxx%2Fv6%2Fxmethods.py", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fpython%2Flibstdcxx%2Fv6%2Fxmethods.py?ref=a5281f1796c6c2e77400e621253b409280180a2c", "patch": "@@ -422,6 +422,50 @@ def match(self, class_type, method_name):\n             return None\n         return method.worker_class(class_type.template_argument(0))\n \n+# Xmethods for associative containers\n+\n+class AssociativeContainerWorkerBase(gdb.xmethod.XMethodWorker):\n+    def __init__(self, unordered):\n+        self._unordered = unordered\n+\n+    def node_count(self, obj):\n+        if self._unordered:\n+            return obj['_M_h']['_M_element_count']\n+        else:\n+            return obj['_M_t']['_M_impl']['_M_node_count']\n+\n+    def get_arg_types(self):\n+        return None\n+\n+class AssociativeContainerEmptyWorker(AssociativeContainerWorkerBase):\n+    def __call__(self, obj):\n+        return int(self.node_count(obj)) == 0\n+\n+class AssociativeContainerSizeWorker(AssociativeContainerWorkerBase):\n+    def __call__(self, obj):\n+        return self.node_count(obj)\n+\n+class AssociativeContainerMethodsMatcher(gdb.xmethod.XMethodMatcher):\n+    def __init__(self, name):\n+        gdb.xmethod.XMethodMatcher.__init__(self,\n+                                            matcher_name_prefix + name)\n+        self._name = name\n+        self._method_dict = {\n+            'size': LibStdCxxXMethod('size', AssociativeContainerSizeWorker),\n+            'empty': LibStdCxxXMethod('empty',\n+                                      AssociativeContainerEmptyWorker),\n+        }\n+        self.methods = [self._method_dict[m] for m in self._method_dict]\n+\n+    def match(self, class_type, method_name):\n+        if not re.match('^std::%s<.*>$' % self._name, class_type.tag):\n+            return None\n+        method = self._method_dict.get(method_name)\n+        if method is None or not method.enabled:\n+            return None\n+        unordered = 'unordered' in self._name\n+        return method.worker_class(unordered)\n+\n # Xmethods for std::unique_ptr\n \n class UniquePtrGetWorker(gdb.xmethod.XMethodWorker):\n@@ -465,4 +509,20 @@ def register_libstdcxx_xmethods(locus):\n     gdb.xmethod.register_xmethod_matcher(locus, DequeMethodsMatcher())\n     gdb.xmethod.register_xmethod_matcher(locus, ListMethodsMatcher())\n     gdb.xmethod.register_xmethod_matcher(locus, VectorMethodsMatcher())\n+    gdb.xmethod.register_xmethod_matcher(\n+        locus, AssociativeContainerMethodsMatcher('set'))\n+    gdb.xmethod.register_xmethod_matcher(\n+        locus, AssociativeContainerMethodsMatcher('map'))\n+    gdb.xmethod.register_xmethod_matcher(\n+        locus, AssociativeContainerMethodsMatcher('multiset'))\n+    gdb.xmethod.register_xmethod_matcher(\n+        locus, AssociativeContainerMethodsMatcher('multimap'))\n+    gdb.xmethod.register_xmethod_matcher(\n+        locus, AssociativeContainerMethodsMatcher('unordered_set'))\n+    gdb.xmethod.register_xmethod_matcher(\n+        locus, AssociativeContainerMethodsMatcher('unordered_map'))\n+    gdb.xmethod.register_xmethod_matcher(\n+        locus, AssociativeContainerMethodsMatcher('unordered_multiset'))\n+    gdb.xmethod.register_xmethod_matcher(\n+        locus, AssociativeContainerMethodsMatcher('unordered_multimap'))\n     gdb.xmethod.register_xmethod_matcher(locus, UniquePtrMethodsMatcher())"}]}