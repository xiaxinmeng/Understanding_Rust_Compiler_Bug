{"sha": "94396a27bcfbdcb156586688de9a5a2e1bee2d4a", "node_id": "C_kwDOANBUbNoAKDk0Mzk2YTI3YmNmYmRjYjE1NjU4NjY4OGRlOWE1YTJlMWJlZTJkNGE", "commit": {"author": {"name": "Yannick Moy", "email": "moy@adacore.com", "date": "2021-11-02T14:43:42Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2021-11-10T08:57:39Z"}, "message": "[Ada] Create explicit ghost mirror unit for big integers\n\ngcc/ada/\n\n\t* Makefile.rtl: Add unit.\n\t* libgnat/a-nbnbin__ghost.adb: Move...\n\t* libgnat/a-nbnbig.adb: ... here. Mark ghost as ignored.\n\t* libgnat/a-nbnbin__ghost.ads: Move...\n\t* libgnat/a-nbnbig.ads: ... here.  Add comment for purpose of\n\tthis unit. Mark ghost as ignored.\n\t* libgnat/s-widthu.adb: Use new unit.\n\t* sem_aux.adb (First_Subtype): Adapt to the case of a ghost type\n\twhose freeze node is rewritten to a null statement.", "tree": {"sha": "f405942d36ae05264fdcfff033642673bd62d997", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f405942d36ae05264fdcfff033642673bd62d997"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/94396a27bcfbdcb156586688de9a5a2e1bee2d4a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/94396a27bcfbdcb156586688de9a5a2e1bee2d4a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/94396a27bcfbdcb156586688de9a5a2e1bee2d4a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/94396a27bcfbdcb156586688de9a5a2e1bee2d4a/comments", "author": {"login": "yannickmoy", "id": 859440, "node_id": "MDQ6VXNlcjg1OTQ0MA==", "avatar_url": "https://avatars.githubusercontent.com/u/859440?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yannickmoy", "html_url": "https://github.com/yannickmoy", "followers_url": "https://api.github.com/users/yannickmoy/followers", "following_url": "https://api.github.com/users/yannickmoy/following{/other_user}", "gists_url": "https://api.github.com/users/yannickmoy/gists{/gist_id}", "starred_url": "https://api.github.com/users/yannickmoy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yannickmoy/subscriptions", "organizations_url": "https://api.github.com/users/yannickmoy/orgs", "repos_url": "https://api.github.com/users/yannickmoy/repos", "events_url": "https://api.github.com/users/yannickmoy/events{/privacy}", "received_events_url": "https://api.github.com/users/yannickmoy/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a0546e1a169954bb412debeab777f9108950bc8d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a0546e1a169954bb412debeab777f9108950bc8d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a0546e1a169954bb412debeab777f9108950bc8d"}], "stats": {"total": 46, "additions": 37, "deletions": 9}, "files": [{"sha": "282b25ce70067e60f4b712fac8737cfb9794ce69", "filename": "gcc/ada/Makefile.rtl", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/94396a27bcfbdcb156586688de9a5a2e1bee2d4a/gcc%2Fada%2FMakefile.rtl", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/94396a27bcfbdcb156586688de9a5a2e1bee2d4a/gcc%2Fada%2FMakefile.rtl", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FMakefile.rtl?ref=94396a27bcfbdcb156586688de9a5a2e1bee2d4a", "patch": "@@ -211,6 +211,7 @@ GNATRTL_NONTASKING_OBJS= \\\n   a-lllwti$(objext) \\\n   a-lllzti$(objext) \\\n   a-locale$(objext) \\\n+  a-nbnbig$(objext) \\\n   a-nbnbin$(objext) \\\n   a-nbnbre$(objext) \\\n   a-ncelfu$(objext) \\"}, {"sha": "d04d2a4d019754bc9034ee9b09d5e179b16955e3", "filename": "gcc/ada/libgnat/a-nbnbig.adb", "status": "renamed", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/94396a27bcfbdcb156586688de9a5a2e1bee2d4a/gcc%2Fada%2Flibgnat%2Fa-nbnbig.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/94396a27bcfbdcb156586688de9a5a2e1bee2d4a/gcc%2Fada%2Flibgnat%2Fa-nbnbig.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-nbnbig.adb?ref=94396a27bcfbdcb156586688de9a5a2e1bee2d4a", "patch": "@@ -2,7 +2,7 @@\n --                                                                          --\n --                         GNAT RUN-TIME COMPONENTS                         --\n --                                                                          --\n---                  ADA.NUMERICS.BIG_NUMBERS.BIG_INTEGERS                   --\n+--               ADA.NUMERICS.BIG_NUMBERS.BIG_INTEGERS_GHOST                --\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n@@ -33,7 +33,12 @@\n --  currently does not compile instantiations of the spec with imported ghost\n --  generics for packages Signed_Conversions and Unsigned_Conversions.\n \n-package body Ada.Numerics.Big_Numbers.Big_Integers with\n+--  Ghost code in this unit is meant for analysis only, not for run-time\n+--  checking. This is enforced by setting the assertion policy to Ignore.\n+\n+pragma Assertion_Policy (Ghost => Ignore);\n+\n+package body Ada.Numerics.Big_Numbers.Big_Integers_Ghost with\n    SPARK_Mode => Off\n is\n \n@@ -73,4 +78,4 @@ is\n \n    end Unsigned_Conversions;\n \n-end Ada.Numerics.Big_Numbers.Big_Integers;\n+end Ada.Numerics.Big_Numbers.Big_Integers_Ghost;", "previous_filename": "gcc/ada/libgnat/a-nbnbin__ghost.adb"}, {"sha": "237bca19b57be6d57283c1af2f09f87087ec6f55", "filename": "gcc/ada/libgnat/a-nbnbig.ads", "status": "renamed", "additions": 17, "deletions": 3, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/94396a27bcfbdcb156586688de9a5a2e1bee2d4a/gcc%2Fada%2Flibgnat%2Fa-nbnbig.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/94396a27bcfbdcb156586688de9a5a2e1bee2d4a/gcc%2Fada%2Flibgnat%2Fa-nbnbig.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-nbnbig.ads?ref=94396a27bcfbdcb156586688de9a5a2e1bee2d4a", "patch": "@@ -2,7 +2,7 @@\n --                                                                          --\n --                         GNAT RUN-TIME COMPONENTS                         --\n --                                                                          --\n---                  ADA.NUMERICS.BIG_NUMBERS.BIG_INTEGERS                   --\n+--               ADA.NUMERICS.BIG_NUMBERS.BIG_INTEGERS_GHOST                --\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n@@ -13,7 +13,21 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n-package Ada.Numerics.Big_Numbers.Big_Integers with\n+--  This unit is provided as a replacement for the standard unit\n+--  Ada.Numerics.Big_Numbers.Big_Integers when only proof with SPARK is\n+--  intended. It cannot be used for execution, as all subprograms are marked\n+--  imported with no definition.\n+\n+--  Contrary to Ada.Numerics.Big_Numbers.Big_Integers, this unit does not\n+--  depend on System or Ada.Finalization, which makes it more convenient for\n+--  use in run-time units.\n+\n+--  Ghost code in this unit is meant for analysis only, not for run-time\n+--  checking. This is enforced by setting the assertion policy to Ignore.\n+\n+pragma Assertion_Policy (Ghost => Ignore);\n+\n+package Ada.Numerics.Big_Numbers.Big_Integers_Ghost with\n    SPARK_Mode,\n    Ghost,\n    Preelaborate\n@@ -199,4 +213,4 @@ private\n \n    type Big_Integer is null record;\n \n-end Ada.Numerics.Big_Numbers.Big_Integers;\n+end Ada.Numerics.Big_Numbers.Big_Integers_Ghost;", "previous_filename": "gcc/ada/libgnat/a-nbnbin__ghost.ads"}, {"sha": "79a0074214da0eea54377aab83b4d039b30ece06", "filename": "gcc/ada/libgnat/s-widthu.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/94396a27bcfbdcb156586688de9a5a2e1bee2d4a/gcc%2Fada%2Flibgnat%2Fs-widthu.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/94396a27bcfbdcb156586688de9a5a2e1bee2d4a/gcc%2Fada%2Flibgnat%2Fs-widthu.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fs-widthu.adb?ref=94396a27bcfbdcb156586688de9a5a2e1bee2d4a", "patch": "@@ -29,8 +29,8 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n-with Ada.Numerics.Big_Numbers.Big_Integers;\n-use Ada.Numerics.Big_Numbers.Big_Integers;\n+with Ada.Numerics.Big_Numbers.Big_Integers_Ghost;\n+use Ada.Numerics.Big_Numbers.Big_Integers_Ghost;\n \n function System.Width_U (Lo, Hi : Uns) return Natural is\n "}, {"sha": "e1bcf531b7190d0a2376ff67d9f0a2bd73f195a6", "filename": "gcc/ada/sem_aux.adb", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/94396a27bcfbdcb156586688de9a5a2e1bee2d4a/gcc%2Fada%2Fsem_aux.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/94396a27bcfbdcb156586688de9a5a2e1bee2d4a/gcc%2Fada%2Fsem_aux.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_aux.adb?ref=94396a27bcfbdcb156586688de9a5a2e1bee2d4a", "patch": "@@ -336,10 +336,18 @@ package body Sem_Aux is\n \n    function First_Subtype (Typ : Entity_Id) return Entity_Id is\n       B   : constant Entity_Id := Base_Type (Typ);\n-      F   : constant Node_Id   := Freeze_Node (B);\n+      F   : Node_Id := Freeze_Node (B);\n       Ent : Entity_Id;\n \n    begin\n+      --  The freeze node of a ghost type might have been rewritten in a null\n+      --  statement by the time gigi calls First_Subtype on the corresponding\n+      --  type.\n+\n+      if Nkind (F) = N_Null_Statement then\n+         F := Original_Node (F);\n+      end if;\n+\n       --  If the base type has no freeze node, it is a type in Standard, and\n       --  always acts as its own first subtype, except where it is one of the\n       --  predefined integer types. If the type is formal, it is also a first"}]}