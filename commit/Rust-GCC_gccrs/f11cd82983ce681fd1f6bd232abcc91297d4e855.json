{"sha": "f11cd82983ce681fd1f6bd232abcc91297d4e855", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjExY2Q4Mjk4M2NlNjgxZmQxZjZiZDIzMmFiY2M5MTI5N2Q0ZTg1NQ==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2015-08-27T13:27:02Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2015-08-27T13:27:02Z"}, "message": "passes.c (rest_of_decl_compilation): Guard early_global_decl call with !seen_error ().\n\n2015-08-27  Richard Biener  <rguenther@suse.de>\n\n\t* passes.c (rest_of_decl_compilation): Guard early_global_decl\n\tcall with !seen_error ().\n\t* cgraphunit.c (symbol_table::finalize_compilation_unit): Move\n\tearly debug generation and finish...\n\t(symbol_table::compile): ... here to put it after a !seen_error ()\n\tguard.\n\nFrom-SVN: r227258", "tree": {"sha": "6c8e4c2a30c588f67e6c553245819e9a7c0d4173", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6c8e4c2a30c588f67e6c553245819e9a7c0d4173"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f11cd82983ce681fd1f6bd232abcc91297d4e855", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f11cd82983ce681fd1f6bd232abcc91297d4e855", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f11cd82983ce681fd1f6bd232abcc91297d4e855", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f11cd82983ce681fd1f6bd232abcc91297d4e855/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a98e4e62c1c0c8570c7db321e3c8a2a7c2336c60", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a98e4e62c1c0c8570c7db321e3c8a2a7c2336c60", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a98e4e62c1c0c8570c7db321e3c8a2a7c2336c60"}], "stats": {"total": 34, "additions": 23, "deletions": 11}, "files": [{"sha": "0934bff54359ca1be4e1067f13bcff7f9bffdc90", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f11cd82983ce681fd1f6bd232abcc91297d4e855/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f11cd82983ce681fd1f6bd232abcc91297d4e855/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f11cd82983ce681fd1f6bd232abcc91297d4e855", "patch": "@@ -1,3 +1,12 @@\n+2015-08-27  Richard Biener  <rguenther@suse.de>\n+\n+\t* passes.c (rest_of_decl_compilation): Guard early_global_decl\n+\tcall with !seen_error ().\n+\t* cgraphunit.c (symbol_table::finalize_compilation_unit): Move\n+\tearly debug generation and finish...\n+\t(symbol_table::compile): ... here to put it after a !seen_error ()\n+\tguard.\n+\n 2015-08-27  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n \n \t* config.gcc (*-*-solaris2*): Enable default_use_cxa_atexit on"}, {"sha": "cdec63bc60a6928dd0485fdbb44b140f5a741a82", "filename": "gcc/cgraphunit.c", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f11cd82983ce681fd1f6bd232abcc91297d4e855/gcc%2Fcgraphunit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f11cd82983ce681fd1f6bd232abcc91297d4e855/gcc%2Fcgraphunit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcgraphunit.c?ref=f11cd82983ce681fd1f6bd232abcc91297d4e855", "patch": "@@ -2314,6 +2314,16 @@ symbol_table::compile (void)\n   symtab_node::verify_symtab_nodes ();\n #endif\n \n+  /* Emit early debug for reachable functions, and by consequence,\n+     locally scoped symbols.  */\n+  struct cgraph_node *cnode;\n+  FOR_EACH_FUNCTION_WITH_GIMPLE_BODY (cnode)\n+    (*debug_hooks->early_global_decl) (cnode->decl);\n+\n+  /* Clean up anything that needs cleaning up after initial debug\n+     generation.  */\n+  (*debug_hooks->early_finish) ();\n+\n   timevar_push (TV_CGRAPHOPT);\n   if (pre_ipa_mem_report)\n     {\n@@ -2482,16 +2492,6 @@ symbol_table::finalize_compilation_unit (void)\n   /* Gimplify and lower thunks.  */\n   analyze_functions (/*first_time=*/false);\n \n-  /* Emit early debug for reachable functions, and by consequence,\n-     locally scoped symbols.  */\n-  struct cgraph_node *cnode;\n-  FOR_EACH_FUNCTION_WITH_GIMPLE_BODY (cnode)\n-    (*debug_hooks->early_global_decl) (cnode->decl);\n-\n-  /* Clean up anything that needs cleaning up after initial debug\n-     generation.  */\n-  (*debug_hooks->early_finish) ();\n-\n   /* Finally drive the pass manager.  */\n   compile ();\n "}, {"sha": "1b677ac5a67ee373912844a705a4a6f5a3e18c4b", "filename": "gcc/passes.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f11cd82983ce681fd1f6bd232abcc91297d4e855/gcc%2Fpasses.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f11cd82983ce681fd1f6bd232abcc91297d4e855/gcc%2Fpasses.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpasses.c?ref=f11cd82983ce681fd1f6bd232abcc91297d4e855", "patch": "@@ -318,7 +318,10 @@ rest_of_decl_compilation (tree decl,\n       && !decl_function_context (decl)\n       && !current_function_decl\n       && DECL_SOURCE_LOCATION (decl) != BUILTINS_LOCATION\n-      && !decl_type_context (decl))\n+      && !decl_type_context (decl)\n+      /* Avoid confusing the debug information machinery when there are\n+\t errors.  */\n+      && !seen_error ())\n     (*debug_hooks->early_global_decl) (decl);\n }\n "}]}