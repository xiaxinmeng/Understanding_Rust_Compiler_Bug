{"sha": "97ba5b86a3c7afba4e53b84d40e056328c5ba5e0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTdiYTViODZhM2M3YWZiYTRlNTNiODRkNDBlMDU2MzI4YzViYTVlMA==", "commit": {"author": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2019-12-20T23:25:44Z"}, "committer": {"name": "Marek Polacek", "email": "mpolacek@gcc.gnu.org", "date": "2019-12-20T23:25:44Z"}, "message": "PR c++/92974 - bogus location for enum and non-enum in ?: warning.\n\nbuild_min_non_dep wasn't setting any location so when we were emitting the\nwarning in the following test while instantiating a template, its location\nwas UNKNOWN_LOCATION.  Rather than adding a location_t parameter, let's use\nthe location from the original expression.\n\n\t* tree.c (build_min_non_dep): Use the location of NON_DEP when\n\tbuilding the expression.\n\n\t* g++.dg/diagnostic/enum1.C: New test.\n\t* g++.dg/gomp/loop-2.C: Adjust dg-error.\n\t* g++.dg/gomp/for-21.C: Likewise.\n\nFrom-SVN: r279685", "tree": {"sha": "964eaf4d8762968920cc5d3c6b4db538b25f48c9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/964eaf4d8762968920cc5d3c6b4db538b25f48c9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/97ba5b86a3c7afba4e53b84d40e056328c5ba5e0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/97ba5b86a3c7afba4e53b84d40e056328c5ba5e0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/97ba5b86a3c7afba4e53b84d40e056328c5ba5e0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/97ba5b86a3c7afba4e53b84d40e056328c5ba5e0/comments", "author": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "7731b8e6f4bb44d2d1ec33072db65f2ccbf94121", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7731b8e6f4bb44d2d1ec33072db65f2ccbf94121", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7731b8e6f4bb44d2d1ec33072db65f2ccbf94121"}], "stats": {"total": 64, "additions": 46, "deletions": 18}, "files": [{"sha": "1552b3ef1c5d3549103cf1184bdd89601eda117e", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97ba5b86a3c7afba4e53b84d40e056328c5ba5e0/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97ba5b86a3c7afba4e53b84d40e056328c5ba5e0/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=97ba5b86a3c7afba4e53b84d40e056328c5ba5e0", "patch": "@@ -1,3 +1,9 @@\n+2019-12-19  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c++/92974 - bogus location for enum and non-enum in ?: warning.\n+\t* tree.c (build_min_non_dep): Use the location of NON_DEP when\n+\tbuilding the expression.\n+\n 2019-12-20  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c++/92965"}, {"sha": "df2470a750b9a3c5eb92c10440d6a267e77c0cee", "filename": "gcc/cp/tree.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97ba5b86a3c7afba4e53b84d40e056328c5ba5e0/gcc%2Fcp%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97ba5b86a3c7afba4e53b84d40e056328c5ba5e0/gcc%2Fcp%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftree.c?ref=97ba5b86a3c7afba4e53b84d40e056328c5ba5e0", "patch": "@@ -3356,6 +3356,7 @@ build_min_non_dep (enum tree_code code, tree non_dep, ...)\n     non_dep = TREE_OPERAND (non_dep, 0);\n \n   t = make_node (code);\n+  SET_EXPR_LOCATION (t, cp_expr_loc_or_input_loc (non_dep));\n   length = TREE_CODE_LENGTH (code);\n   TREE_TYPE (t) = unlowered_expr_type (non_dep);\n   TREE_SIDE_EFFECTS (t) = TREE_SIDE_EFFECTS (non_dep);"}, {"sha": "a7835dbd278014bf73d6f7a474cc0cf9c9b7623b", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97ba5b86a3c7afba4e53b84d40e056328c5ba5e0/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97ba5b86a3c7afba4e53b84d40e056328c5ba5e0/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=97ba5b86a3c7afba4e53b84d40e056328c5ba5e0", "patch": "@@ -1,3 +1,10 @@\n+2019-12-19  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c++/92974 - bogus location for enum and non-enum in ?: warning.\n+\t* g++.dg/diagnostic/enum1.C: New test.\n+\t* g++.dg/gomp/loop-2.C: Adjust dg-error.\n+\t* g++.dg/gomp/for-21.C: Likewise.\n+\n 2019-12-20  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c++/92965"}, {"sha": "e91e970dab47660750b40fdc68fbd3094f5cfc18", "filename": "gcc/testsuite/g++.dg/diagnostic/enum1.C", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97ba5b86a3c7afba4e53b84d40e056328c5ba5e0/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdiagnostic%2Fenum1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97ba5b86a3c7afba4e53b84d40e056328c5ba5e0/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdiagnostic%2Fenum1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdiagnostic%2Fenum1.C?ref=97ba5b86a3c7afba4e53b84d40e056328c5ba5e0", "patch": "@@ -0,0 +1,14 @@\n+// PR c++/92974 - bogus location for enum and non-enum in ?: warning.\n+// { dg-options \"-Wextra\" }\n+\n+enum { X };\n+\n+struct S { \n+  template <typename T>\n+  void f(T) { unsigned int g(X ?: g); } // { dg-warning \"enumerated and non-enumerated type in conditional expression\" }\n+};\n+\n+struct S2 { \n+  S m;\n+  void l() { m.f(1); }\n+};"}, {"sha": "fbdaa71619a611144dcb7f9133bd1007ad7a59a8", "filename": "gcc/testsuite/g++.dg/gomp/for-21.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97ba5b86a3c7afba4e53b84d40e056328c5ba5e0/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgomp%2Ffor-21.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97ba5b86a3c7afba4e53b84d40e056328c5ba5e0/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgomp%2Ffor-21.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgomp%2Ffor-21.C?ref=97ba5b86a3c7afba4e53b84d40e056328c5ba5e0", "patch": "@@ -34,8 +34,8 @@ void\n f4 (int a[10][10])\n {\n   #pragma omp for collapse (2)\n-  for (int i = 0; i < 10; ++i)\t\t// { dg-error \"initializer expression refers to iteration variable 'i'\" }\n-    for (auto j : a[i])\n+  for (int i = 0; i < 10; ++i)\n+    for (auto j : a[i])\t\t// { dg-error \"initializer expression refers to iteration variable 'i'\" }\n       ;\n }\n "}, {"sha": "9deeaa5d8874a30d631399c1dd549f7736e156b6", "filename": "gcc/testsuite/g++.dg/gomp/loop-2.C", "status": "modified", "additions": 16, "deletions": 16, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97ba5b86a3c7afba4e53b84d40e056328c5ba5e0/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgomp%2Floop-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97ba5b86a3c7afba4e53b84d40e056328c5ba5e0/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgomp%2Floop-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgomp%2Floop-2.C?ref=97ba5b86a3c7afba4e53b84d40e056328c5ba5e0", "patch": "@@ -87,16 +87,16 @@ f1 (int x)\n     for (j = baz (&i); j < 16; j += 2) /* { dg-error \"initializer expression refers to iteration variable\" } */\n       ;\n   #pragma omp for collapse(2)\n-  for (i = 0; i < 16; i++) /* { dg-error \"condition expression refers to iteration variable\" } */\n-    for (j = 16; j > (i & x); j--)\n+  for (i = 0; i < 16; i++)\n+    for (j = 16; j > (i & x); j--) /* { dg-error \"condition expression refers to iteration variable\" } */\n       ;\n   #pragma omp for collapse(2)\n-  for (i = 0; i < 16; i++) /* { dg-error \"condition expression refers to iteration variable\" } */\n-    for (j = 0; j < i; j++)\n+  for (i = 0; i < 16; i++)\n+    for (j = 0; j < i; j++) /* { dg-error \"condition expression refers to iteration variable\" } */\n       ;\n   #pragma omp for collapse(2)\n-  for (i = 0; i < 16; i++) /* { dg-error \"condition expression refers to iteration variable\" } */\n-    for (j = 0; j < i + 4; j++)\n+  for (i = 0; i < 16; i++)\n+    for (j = 0; j < i + 4; j++) /* { dg-error \"condition expression refers to iteration variable\" } */\n       ;\n   #pragma omp for collapse(2)\n   for (i = 0; i < j + 4; i++) /* { dg-error \"condition expression refers to iteration variable\" } */\n@@ -111,8 +111,8 @@ f1 (int x)\n     for (j = 0; j < 16; j++)\n       ;\n   #pragma omp for collapse(2)\n-  for (i = 0; i < 16; i++) /* { dg-error \"condition expression refers to iteration variable\" } */\n-    for (j = 0; j < baz (&i); j++)\n+  for (i = 0; i < 16; i++)\n+    for (j = 0; j < baz (&i); j++) /* { dg-error \"condition expression refers to iteration variable\" } */\n       ;\n   #pragma omp for collapse(2)\n   for (i = 0; i < 16; i += j) /* { dg-error \"increment expression refers to iteration variable\" } */\n@@ -221,20 +221,20 @@ f2 (int x)\n     for (int j = baz (&i); j < 16; j += 2) /* { dg-error \"initializer expression refers to iteration variable\" } */\n       ;\n   #pragma omp for collapse(2)\n-  for (int i = 0; i < 16; i++) /* { dg-error \"condition expression refers to iteration variable\" } */\n-    for (int j = 16; j > (i & x); j--)\n+  for (int i = 0; i < 16; i++)\n+    for (int j = 16; j > (i & x); j--) /* { dg-error \"condition expression refers to iteration variable\" } */\n       ;\n   #pragma omp for collapse(2)\n-  for (int i = 0; i < 16; i++) /* { dg-error \"condition expression refers to iteration variable\" } */\n-    for (int j = 0; j < i; j++)\n+  for (int i = 0; i < 16; i++)\n+    for (int j = 0; j < i; j++) /* { dg-error \"condition expression refers to iteration variable\" } */\n       ;\n   #pragma omp for collapse(2)\n-  for (int i = 0; i < 16; i++) /* { dg-error \"condition expression refers to iteration variable\" } */\n-    for (int j = 0; j < i + 4; j++)\n+  for (int i = 0; i < 16; i++)\n+    for (int j = 0; j < i + 4; j++) /* { dg-error \"condition expression refers to iteration variable\" } */\n       ;\n   #pragma omp for collapse(2)\n-  for (int i = 0; i < 16; i++) /* { dg-error \"condition expression refers to iteration variable\" } */\n-    for (int j = 0; j < baz (&i); j++)\n+  for (int i = 0; i < 16; i++)\n+    for (int j = 0; j < baz (&i); j++) /* { dg-error \"condition expression refers to iteration variable\" } */\n       ;\n   #pragma omp for collapse(2)\n   for (int i = 0; i < 16; i++) /* { dg-error \"increment expression refers to iteration variable\" } */"}]}