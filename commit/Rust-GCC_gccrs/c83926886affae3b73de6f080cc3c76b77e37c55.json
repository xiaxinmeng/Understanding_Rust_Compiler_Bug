{"sha": "c83926886affae3b73de6f080cc3c76b77e37c55", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzgzOTI2ODg2YWZmYWUzYjczZGU2ZjA4MGNjM2M3NmI3N2UzN2M1NQ==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-09-12T22:33:32Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-09-12T22:33:32Z"}, "message": "(STATIC_CHAIN_REGNUM): Use %g5 for sparc64.\n\n(TRAMPOLINE_TEMPLATE): Rewrite for sparc64.\n(TRAMPOLINE_SIZE): Is 40 for sparc64.\n\nFrom-SVN: r10341", "tree": {"sha": "0e4493d79a16873cb9ef632a659ca5dc604572cf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0e4493d79a16873cb9ef632a659ca5dc604572cf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c83926886affae3b73de6f080cc3c76b77e37c55", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c83926886affae3b73de6f080cc3c76b77e37c55", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c83926886affae3b73de6f080cc3c76b77e37c55", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c83926886affae3b73de6f080cc3c76b77e37c55/comments", "author": null, "committer": null, "parents": [{"sha": "aa76a77e6ca2bc0056b236c80f65e44c2eedd96f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aa76a77e6ca2bc0056b236c80f65e44c2eedd96f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aa76a77e6ca2bc0056b236c80f65e44c2eedd96f"}], "stats": {"total": 53, "additions": 39, "deletions": 14}, "files": [{"sha": "eb9be0737f6e9f0b7321d45802044f1a097b5538", "filename": "gcc/config/sparc/sparc.h", "status": "modified", "additions": 39, "deletions": 14, "changes": 53, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c83926886affae3b73de6f080cc3c76b77e37c55/gcc%2Fconfig%2Fsparc%2Fsparc.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c83926886affae3b73de6f080cc3c76b77e37c55/gcc%2Fconfig%2Fsparc%2Fsparc.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsparc.h?ref=c83926886affae3b73de6f080cc3c76b77e37c55", "patch": "@@ -747,9 +747,8 @@ extern int sparc_mode_class[];\n #define ARG_POINTER_REGNUM FRAME_POINTER_REGNUM\n \n /* Register in which static-chain is passed to a function.  This must\n-   not be a register used by the prologue.\n-   ??? v9: Since %g2 is reserved but %g5 is available, perhaps use %g5.  */\n-#define STATIC_CHAIN_REGNUM 2\n+   not be a register used by the prologue.  */\n+#define STATIC_CHAIN_REGNUM (TARGET_V9 ? 5 : 2)\n \n /* Register which holds offset table for position-independent\n    data references.  */\n@@ -1617,24 +1616,50 @@ extern union tree_node *current_function_decl;\n /* Output assembler code for a block containing the constant parts\n    of a trampoline, leaving space for the variable parts.  */\n \n-/* On the sparc, the trampoline contains five instructions:\n+/* On 32 bit sparcs, the trampoline contains five instructions:\n      sethi #TOP_OF_FUNCTION,%g1\n      or #BOTTOM_OF_FUNCTION,%g1,%g1\n      sethi #TOP_OF_STATIC,%g2\n      jmp g1\n-     or #BOTTOM_OF_STATIC,%g2,%g2  */\n-#define TRAMPOLINE_TEMPLATE(FILE)\t\t\t\t\t\\\n-{\t\t\t\t\t\t\t\t\t\\\n-  ASM_OUTPUT_INT (FILE, gen_rtx (CONST_INT, VOIDmode, 0x00000000));\t\\\n-  ASM_OUTPUT_INT (FILE, gen_rtx (CONST_INT, VOIDmode, 0x00000000));\t\\\n-  ASM_OUTPUT_INT (FILE, gen_rtx (CONST_INT, VOIDmode, 0x00000000));\t\\\n-  ASM_OUTPUT_INT (FILE, gen_rtx (CONST_INT, VOIDmode, 0x81C04000));\t\\\n-  ASM_OUTPUT_INT (FILE, gen_rtx (CONST_INT, VOIDmode, 0x00000000));\t\\\n-}\n+     or #BOTTOM_OF_STATIC,%g2,%g2\n+\n+  On 64 bit sparcs, the trampoline contains 4 insns and two pseudo-immediate\n+  constants (plus some padding):\n+     rd %pc,%g1\n+     ldx[%g1+20],%g5\n+     ldx[%g1+28],%g1\n+     jmp %g1\n+     nop\n+     nop\n+     .xword context\n+     .xword function  */\n+\n+#define TRAMPOLINE_TEMPLATE(FILE) \\\n+do {\t\t\t\t\t\t\t\t\t\\\n+  if (TARGET_V9)\t\t\t\t\t\t\t\\\n+    {\t\t\t\t\t\t\t\t\t\\\n+      fprintf (FILE, \"\\trd %%pc,%%g1\\n\");\t\t\t\t\\\n+      fprintf (FILE, \"\\tldx [%%g1+24],%%g5\\n\");\t\t\t\t\\\n+      fprintf (FILE, \"\\tldx [%%g1+32],%%g1\\n\");\t\t\t\t\\\n+      fprintf (FILE, \"\\tjmp %%g1\\n\");\t\t\t\t\t\\\n+      fprintf (FILE, \"\\tnop\\n\");\t\t\t\t\t\\\n+      fprintf (FILE, \"\\tnop\\n\");\t\t\t\t\t\\\n+      /* -mmedlow shouldn't generate .xwords, so don't use them at all */ \\\n+      fprintf (FILE, \"\\t.word 0,0,0,0\\n\");\t\t\t\t\\\n+    }\t\t\t\t\t\t\t\t\t\\\n+  else\t\t\t\t\t\t\t\t\t\\\n+    {\t\t\t\t\t\t\t\t\t\\\n+      ASM_OUTPUT_INT (FILE, gen_rtx (CONST_INT, VOIDmode, 0x00000000));\t\\\n+      ASM_OUTPUT_INT (FILE, gen_rtx (CONST_INT, VOIDmode, 0x00000000));\t\\\n+      ASM_OUTPUT_INT (FILE, gen_rtx (CONST_INT, VOIDmode, 0x00000000));\t\\\n+      ASM_OUTPUT_INT (FILE, gen_rtx (CONST_INT, VOIDmode, 0x81C04000));\t\\\n+      ASM_OUTPUT_INT (FILE, gen_rtx (CONST_INT, VOIDmode, 0x00000000));\t\\\n+    }\t\t\t\t\t\t\t\t\t\\\n+} while (0)\n \n /* Length in units of the trampoline for entering a nested function.  */\n \n-#define TRAMPOLINE_SIZE 20\n+#define TRAMPOLINE_SIZE (TARGET_V9 ? 40 : 20)\n \n /* Emit RTL insns to initialize the variable parts of a trampoline.\n    FNADDR is an RTX for the address of the function's pure code."}]}