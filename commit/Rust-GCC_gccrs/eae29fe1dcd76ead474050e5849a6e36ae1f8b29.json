{"sha": "eae29fe1dcd76ead474050e5849a6e36ae1f8b29", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWFlMjlmZTFkY2Q3NmVhZDQ3NDA1MGU1ODQ5YTZlMzZhZTFmOGIyOQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2004-06-15T20:38:40Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2004-06-15T20:38:40Z"}, "message": "re PR tree-optimization/14107 (Return warnings don't work without optimizations enabled)\n\n        PR tree-optimization/14107\n        * decl.c (finish_function): Warn about no return in all functions.\n\nFrom-SVN: r83198", "tree": {"sha": "5a741a9062fb19b8f1ff54736d18f0f1cd113d27", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5a741a9062fb19b8f1ff54736d18f0f1cd113d27"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/eae29fe1dcd76ead474050e5849a6e36ae1f8b29", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eae29fe1dcd76ead474050e5849a6e36ae1f8b29", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eae29fe1dcd76ead474050e5849a6e36ae1f8b29", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eae29fe1dcd76ead474050e5849a6e36ae1f8b29/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "0566b51e1fc647d43e1a2dedc8a2d80acd70e1d5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0566b51e1fc647d43e1a2dedc8a2d80acd70e1d5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0566b51e1fc647d43e1a2dedc8a2d80acd70e1d5"}], "stats": {"total": 36, "additions": 32, "deletions": 4}, "files": [{"sha": "7b61cfc338c2cb975d8a7fa3200ee635be211689", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eae29fe1dcd76ead474050e5849a6e36ae1f8b29/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eae29fe1dcd76ead474050e5849a6e36ae1f8b29/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=eae29fe1dcd76ead474050e5849a6e36ae1f8b29", "patch": "@@ -1,3 +1,8 @@\n+2004-06-12  Jason Merrill  <jason@redhat.com>\n+\n+\tPR tree-optimization/14107\n+\t* decl.c (finish_function): Warn about no return in all functions.\n+\n 2004-06-15  Paolo Bonzini  <bonzini@gnu.org>\n \n \t* cp-tree.h (struct language_function): Remove cannot_inline."}, {"sha": "92c6cf0397682563c57bfdede0d0eeb69c971088", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eae29fe1dcd76ead474050e5849a6e36ae1f8b29/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eae29fe1dcd76ead474050e5849a6e36ae1f8b29/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=eae29fe1dcd76ead474050e5849a6e36ae1f8b29", "patch": "@@ -10803,10 +10803,13 @@ finish_function (int flags)\n       && !current_function_returns_value && !current_function_returns_null\n       /* Don't complain if we abort or throw.  */\n       && !current_function_returns_abnormally\n-      && !DECL_NAME (DECL_RESULT (fndecl))\n+      && !DECL_NAME (DECL_RESULT (fndecl)))\n+#if 0\n+    /* Enable this for all functions until bug 14107 is fixed properly.  */\n       /* Normally, with -Wreturn-type, flow will complain.  Unless we're an\n \t inline function, as we might never be compiled separately.  */\n       && (DECL_INLINE (fndecl) || processing_template_decl))\n+#endif\n     warning (\"no return statement in function returning non-void\");\n \n   /* Store the end of the function, so that we get good line number"}, {"sha": "e19629bc00bdb463ce8ea394c620817d89a01d76", "filename": "gcc/testsuite/g++.dg/init/new10.C", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eae29fe1dcd76ead474050e5849a6e36ae1f8b29/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finit%2Fnew10.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eae29fe1dcd76ead474050e5849a6e36ae1f8b29/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finit%2Fnew10.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finit%2Fnew10.C?ref=eae29fe1dcd76ead474050e5849a6e36ae1f8b29", "patch": "@@ -0,0 +1,8 @@\n+// PR c++/14452\n+// We got confused trying to preevaluate the new-initializer.\n+\n+struct S {}; \n+void foo (bool b) \n+{ \n+  new S(b ? S() : S()); \n+} "}, {"sha": "fb9a862913955b41ca719648ab48025cc1510a23", "filename": "gcc/testsuite/g++.dg/warn/Wreturn-type-1.C", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eae29fe1dcd76ead474050e5849a6e36ae1f8b29/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWreturn-type-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eae29fe1dcd76ead474050e5849a6e36ae1f8b29/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWreturn-type-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWreturn-type-1.C?ref=eae29fe1dcd76ead474050e5849a6e36ae1f8b29", "patch": "@@ -0,0 +1,11 @@\n+// PR c++/11725\n+// { dg-options \"-Wreturn-type\" }\n+\n+template <class T>\n+struct A \n+{\n+  int foo()\n+  {\n+    throw \"Stop\";\n+  }\n+};"}, {"sha": "95c6a08322e76268b477db2bdd13bbd3e13d293f", "filename": "gcc/testsuite/g++.old-deja/g++.brendan/crash52.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eae29fe1dcd76ead474050e5849a6e36ae1f8b29/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Fcrash52.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eae29fe1dcd76ead474050e5849a6e36ae1f8b29/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Fcrash52.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Fcrash52.C?ref=eae29fe1dcd76ead474050e5849a6e36ae1f8b29", "patch": "@@ -10,4 +10,5 @@ public:\n \n A &f(A &a) {// { dg-error \"\" }  new decl.*\n   std::cout << \"Blah\\n\";\n-}\n+} // { dg-warning \"\" } no return\n+"}, {"sha": "0149129fefeedaf904e60f13c060b1e2e2fe6f1b", "filename": "gcc/testsuite/g++.old-deja/g++.jason/report.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eae29fe1dcd76ead474050e5849a6e36ae1f8b29/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.jason%2Freport.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eae29fe1dcd76ead474050e5849a6e36ae1f8b29/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.jason%2Freport.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.jason%2Freport.C?ref=eae29fe1dcd76ead474050e5849a6e36ae1f8b29", "patch": "@@ -56,7 +56,7 @@ bar2 baz (X::Y y)\n   bar2 wa [5];\n   wa[0] = baz(f);\n   undef2 (1); // { dg-error \"\" } implicit declaration\n-}\n+} // { dg-warning \"\" } no return\n \n int ninny ()\n {\n@@ -71,4 +71,4 @@ int ninny ()\n int darg (char X::*p)\n {\n    undef3 (1); // { dg-error \"\" } implicit declaration\n-}\n+} // { dg-warning \"\" } no return"}]}