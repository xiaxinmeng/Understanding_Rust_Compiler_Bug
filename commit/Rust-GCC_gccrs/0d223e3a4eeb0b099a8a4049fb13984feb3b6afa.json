{"sha": "0d223e3a4eeb0b099a8a4049fb13984feb3b6afa", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGQyMjNlM2E0ZWViMGIwOTlhOGE0MDQ5ZmIxMzk4NGZlYjNiNmFmYQ==", "commit": {"author": {"name": "Benjamin Kosnik", "email": "bkoz@redhat.com", "date": "2002-02-20T00:58:17Z"}, "committer": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2002-02-20T00:58:17Z"}, "message": "std_iomanip.h: Inline, tweaks.\n\n\n2002-02-19  Benjamin Kosnik  <bkoz@redhat.com>\n\n\t* include/std/std_iomanip.h: Inline, tweaks.\n\t* config/linker-map.gnu: Remove hacks.\n\n\t* testsuite/21_strings/capacity.cc: Add explicit instantiations.\n\t* testsuite/27_io/ios_init.cc: Same.\n\t* testsuite/22_locale/money_get_members_char.cc (test07): Fix.\n\t* testsuite/22_locale/money_get_members_wchar_t.cc (test07): Same.\n\nFrom-SVN: r49884", "tree": {"sha": "f3627f9498d0f292542ccf48c21296eb39d55218", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f3627f9498d0f292542ccf48c21296eb39d55218"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0d223e3a4eeb0b099a8a4049fb13984feb3b6afa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0d223e3a4eeb0b099a8a4049fb13984feb3b6afa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0d223e3a4eeb0b099a8a4049fb13984feb3b6afa", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0d223e3a4eeb0b099a8a4049fb13984feb3b6afa/comments", "author": null, "committer": null, "parents": [{"sha": "ae34ac46dce3d0238dec963ed6d1e1af62671ecf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ae34ac46dce3d0238dec963ed6d1e1af62671ecf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ae34ac46dce3d0238dec963ed6d1e1af62671ecf"}], "stats": {"total": 153, "additions": 88, "deletions": 65}, "files": [{"sha": "e006bfca7d1c3946b25275d4e39651f827da4899", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d223e3a4eeb0b099a8a4049fb13984feb3b6afa/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d223e3a4eeb0b099a8a4049fb13984feb3b6afa/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=0d223e3a4eeb0b099a8a4049fb13984feb3b6afa", "patch": "@@ -1,3 +1,13 @@\n+2002-02-19  Benjamin Kosnik  <bkoz@redhat.com>\n+\n+\t* include/std/std_iomanip.h: Inline, tweaks.\n+\t* config/linker-map.gnu: Remove hacks.\n+\n+\t* testsuite/21_strings/capacity.cc: Add explicit instantiations.\n+\t* testsuite/27_io/ios_init.cc: Same.\n+\t* testsuite/22_locale/money_get_members_char.cc (test07): Fix.\n+\t* testsuite/22_locale/money_get_members_wchar_t.cc (test07): Same.\n+\n 2002-02-19  Benjamin Kosnik  <bkoz@redhat.com>\n \t\n \t* config/linker-map.gnu: Export global vtable, typeinfo, guard"}, {"sha": "7d76b9dd6a7a1745be6ee86f25c4805058897275", "filename": "libstdc++-v3/config/linker-map.gnu", "status": "modified", "additions": 13, "deletions": 28, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d223e3a4eeb0b099a8a4049fb13984feb3b6afa/libstdc%2B%2B-v3%2Fconfig%2Flinker-map.gnu", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d223e3a4eeb0b099a8a4049fb13984feb3b6afa/libstdc%2B%2B-v3%2Fconfig%2Flinker-map.gnu", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Flinker-map.gnu?ref=0d223e3a4eeb0b099a8a4049fb13984feb3b6afa", "patch": "@@ -25,8 +25,8 @@ GLIBCPP_3.1 {\n \n   global:\n \n-    ## Names inside the 'extern' block are demangled names.\n-    ## All but the last are terminated with a semicolon.\n+    # Names inside the 'extern' block are demangled names.\n+    # All but the last are terminated with a semicolon.\n     extern \"C++\"\n     {\n       std::[A-Za-z]*;\n@@ -36,17 +36,17 @@ GLIBCPP_3.1 {\n       std::__timepunct*\n     };\n \n-    ## Names not in an 'extern' block are mangled names.\n-    ## operator new(unsigned)\n+    # Names not in an 'extern' block are mangled names.\n+    # operator new(unsigned)\n     _Znwj;\n \n-    ## operator delete(void*)\n+    # operator delete(void*)\n     _ZdlPv;\n \n-    ## operator new[](unsigned)\n+    # operator new[](unsigned)\n     _Znaj;\n \n-    ## operator delete[](void*)\n+    # operator delete[](void*)\n     _ZdaPv;\n \n     # vtable\t\n@@ -65,41 +65,26 @@ GLIBCPP_3.1 {\n     _ZTv*;\n     _ZTc*;\n \n-    # XXX\n+    # libsupc++\n     __cxa_*;\n     __gxx_personality_v0;\n     __dynamic_cast;\n \n-    ## std::_S_rb_tree_red\n+    # std::_S_rb_tree_red\n     _ZSt14_S_rb_tree_red;\n \n-    ## std::_S_rb_tree_black\n+    # std::_S_rb_tree_black\n     _ZSt16_S_rb_tree_black;\n \n-    ## std::__stl_threshold\n+    # std::__stl_threshold\n     _ZSt15__stl_threshold;\n \n-    ## std::__stl_chunk_size\n+    # std::__stl_chunk_size\n     _ZSt16__stl_chunk_size;\n \n-    # this is a function, \"void std::__convert_to_v(stuff)\", and as such\n-    # doesn't work well in the demangled section above\n+    # std::__convert_to_v\n     _ZSt14__convert_to_v*;\n \n-    # likewise for \"std::_Setfill<char> std::setfill<char>(char)\"\n-    _ZSt7setfillIcESt8_SetfillIT_ES1_;\n-\n-    # likewise for \"bool std::has_facet<std::ctype<char> >(std::locale const&)\"\n-    _ZSt9has_facetISt5ctypeIcEEbRKSt6locale;\n-\n-    # likewise for \"bool\n-    # std::has_facet<std::num_put<char, std::ostreambuf_iterator<char,\n-    #                       std::char_traits<char> > > >(std::locale const&)\"\n-    _ZSt9has_facetISt7num_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEEEbRKSt6locale;\n-\n-    # ditto for istreambuf_iterator\n-    _ZSt9has_facetISt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEEEbRKSt6locale;\n-\n   local:\n     *;\n };"}, {"sha": "e046c82f8fa156bcd2b01f86bd3299b7898a2e27", "filename": "libstdc++-v3/include/std/std_iomanip.h", "status": "modified", "additions": 27, "deletions": 27, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d223e3a4eeb0b099a8a4049fb13984feb3b6afa/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_iomanip.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d223e3a4eeb0b099a8a4049fb13984feb3b6afa/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_iomanip.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_iomanip.h?ref=0d223e3a4eeb0b099a8a4049fb13984feb3b6afa", "patch": "@@ -57,16 +57,16 @@ namespace std\n     return __x; \n   }\n \n-  template <class _CharT, class _Traits>\n-    basic_istream<_CharT,_Traits>& \n+  template<typename _CharT, typename _Traits>\n+    inline basic_istream<_CharT,_Traits>& \n     operator>>(basic_istream<_CharT,_Traits>& __is, _Resetiosflags __f)\n     { \n       __is.setf(ios_base::fmtflags(0), __f._M_mask); \n       return __is; \n     }\n \n-  template <class _CharT, class _Traits>\n-    basic_ostream<_CharT,_Traits>& \n+  template<typename _CharT, typename _Traits>\n+    inline basic_ostream<_CharT,_Traits>& \n     operator<<(basic_ostream<_CharT,_Traits>& __os, _Resetiosflags __f)\n     { \n       __os.setf(ios_base::fmtflags(0), __f._M_mask); \n@@ -84,16 +84,16 @@ namespace std\n     return __x; \n   }\n \n-  template <class _CharT, class _Traits>\n-    basic_istream<_CharT,_Traits>& \n+  template<typename _CharT, typename _Traits>\n+    inline basic_istream<_CharT,_Traits>& \n     operator>>(basic_istream<_CharT,_Traits>& __is, _Setiosflags __f)\n     { \n       __is.setf(__f._M_mask); \n       return __is; \n     }\n \n-  template <class _CharT, class _Traits>\n-    basic_ostream<_CharT,_Traits>& \n+  template<typename _CharT, typename _Traits>\n+    inline basic_ostream<_CharT,_Traits>& \n     operator<<(basic_ostream<_CharT,_Traits>& __os, _Setiosflags __f)\n     { \n       __os.setf(__f._M_mask); \n@@ -111,8 +111,8 @@ namespace std\n     return __x; \n   }\n \n-  template <class _CharT, class _Traits>\n-    basic_istream<_CharT,_Traits>& \n+  template<typename _CharT, typename _Traits>\n+    inline basic_istream<_CharT,_Traits>& \n     operator>>(basic_istream<_CharT,_Traits>& __is, _Setbase __f)\n     {\n       __is.setf(__f._M_base ==  8 ? ios_base::oct : \n@@ -122,8 +122,8 @@ namespace std\n       return __is; \n     }\n   \n-  template <class _CharT, class _Traits>\n-    basic_ostream<_CharT,_Traits>& \n+  template<typename _CharT, typename _Traits>\n+    inline basic_ostream<_CharT,_Traits>& \n     operator<<(basic_ostream<_CharT,_Traits>& __os, _Setbase __f)\n     {\n       __os.setf(__f._M_base ==  8 ? ios_base::oct : \n@@ -134,28 +134,28 @@ namespace std\n     }\n   \n \n-  template<class _CharT> \n+  template<typename _CharT> \n     struct _Setfill { _CharT _M_c; };\n \n-  template<class _CharT> \n-    _Setfill<_CharT> \n+  template<typename _CharT> \n+    inline _Setfill<_CharT> \n     setfill(_CharT __c)\n     { \n       _Setfill<_CharT> __x; \n       __x._M_c = __c; \n       return __x; \n     }\n \n-  template <class _CharT, class _Traits>\n-    basic_istream<_CharT,_Traits>& \n+  template<typename _CharT, typename _Traits>\n+    inline basic_istream<_CharT,_Traits>& \n     operator>>(basic_istream<_CharT,_Traits>& __is, _Setfill<_CharT> __f)\n     { \n       __is.fill(__f._M_c); \n       return __is; \n     }\n \n-  template <class _CharT, class _Traits>\n-    basic_ostream<_CharT,_Traits>& \n+  template<typename _CharT, typename _Traits>\n+    inline basic_ostream<_CharT,_Traits>& \n     operator<<(basic_ostream<_CharT,_Traits>& __os, _Setfill<_CharT> __f)\n     { \n       __os.fill(__f._M_c); \n@@ -173,16 +173,16 @@ namespace std\n     return __x; \n   }\n \n-  template <class _CharT, class _Traits>\n-    basic_istream<_CharT,_Traits>& \n+  template<typename _CharT, typename _Traits>\n+    inline basic_istream<_CharT,_Traits>& \n     operator>>(basic_istream<_CharT,_Traits>& __is, _Setprecision __f)\n     { \n       __is.precision(__f._M_n); \n       return __is; \n     }\n \n-  template <class _CharT, class _Traits>\n-    basic_ostream<_CharT,_Traits>& \n+  template<typename _CharT, typename _Traits>\n+    inline basic_ostream<_CharT,_Traits>& \n     operator<<(basic_ostream<_CharT,_Traits>& __os, _Setprecision __f)\n     { \n       __os.precision(__f._M_n); \n@@ -200,16 +200,16 @@ namespace std\n     return __x; \n   }\n \n-  template <class _CharT, class _Traits>\n-    basic_istream<_CharT,_Traits>& \n+  template<typename _CharT, typename _Traits>\n+    inline basic_istream<_CharT,_Traits>& \n     operator>>(basic_istream<_CharT,_Traits>& __is, _Setw __f)\n     { \n       __is.width(__f._M_n); \n       return __is; \n     }\n \n-  template <class _CharT, class _Traits>\n-    basic_ostream<_CharT,_Traits>& \n+  template<typename _CharT, typename _Traits>\n+    inline basic_ostream<_CharT,_Traits>& \n     operator<<(basic_ostream<_CharT,_Traits>& __os, _Setw __f)\n     { \n       __os.width(__f._M_n); "}, {"sha": "c8f78890f9bcf91bfcec26baa74177f56d87c465", "filename": "libstdc++-v3/testsuite/21_strings/capacity.cc", "status": "modified", "additions": 14, "deletions": 2, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d223e3a4eeb0b099a8a4049fb13984feb3b6afa/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fcapacity.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d223e3a4eeb0b099a8a4049fb13984feb3b6afa/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fcapacity.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fcapacity.cc?ref=0d223e3a4eeb0b099a8a4049fb13984feb3b6afa", "patch": "@@ -29,11 +29,11 @@ template<typename T>\n \n template<typename T>\n   bool\n-  operator==(const A<T>& a, const A<T>& b) { }\n+  operator==(const A<T>& a, const A<T>& b) { return true; }\n \n template<typename T>\n   bool\n-  operator<(const A<T>& a, const A<T>& b) { }\n+  operator<(const A<T>& a, const A<T>& b) { return true; }\n \n struct B { };\n \n@@ -188,6 +188,14 @@ bool test02()\n   return test;\n }\n \n+// Explicitly instantiate for systems with no COMDAT or weak support.\n+template \n+  std::basic_string< A<B> >::size_type \n+  std::basic_string< A<B> >::_Rep::_S_max_size;\n+\n+template \n+  A<B>\n+  std::basic_string< A<B> >::_Rep::_S_terminal;\n \n int main()\n {\n@@ -196,3 +204,7 @@ int main()\n \n   return 0;\n }\n+\n+\n+\n+"}, {"sha": "efe806fed334f1f47cea7a0eb122e717dc5caec0", "filename": "libstdc++-v3/testsuite/22_locale/money_get_members_char.cc", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d223e3a4eeb0b099a8a4049fb13984feb3b6afa/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fmoney_get_members_char.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d223e3a4eeb0b099a8a4049fb13984feb3b6afa/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fmoney_get_members_char.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fmoney_get_members_char.cc?ref=0d223e3a4eeb0b099a8a4049fb13984feb3b6afa", "patch": "@@ -352,13 +352,13 @@ struct My_money_io : public std::moneypunct<char,false>\n \n   pattern do_pos_format() const\n   {\n-    static pattern pat = { { symbol, none, sign, value } };\n+    pattern pat = { { symbol, none, sign, value } };\n     return pat;\n   }\n \n   pattern do_neg_format() const\n   {\n-    static pattern pat = { { symbol, none, sign, value } };\n+    pattern pat = { { symbol, none, sign, value } };\n     return pat;\n   }\n };\n@@ -369,6 +369,8 @@ void test05()\n   using namespace std;\n   typedef istreambuf_iterator<char> InIt;\n \n+  bool test = true;\n+\n   locale loc(locale::classic(), new My_money_io);\n \n   string bufferp(\"$1234.56\");\n@@ -416,6 +418,7 @@ void test05()\n void test06()\n {\n   using namespace std;\n+  bool test = true;\n \n   typedef istreambuf_iterator<char> InIt;\n   InIt iend1, iend2, iend3;\n@@ -461,7 +464,7 @@ struct My_money_io_a : public std::moneypunct<char,false>\n \n   pattern do_pos_format() const\n   {\n-    static pattern pat = { { sign, value, space, symbol } };\n+    pattern pat = { { sign, value, space, symbol } };\n     return pat;\n   }\n };\n@@ -478,7 +481,7 @@ struct My_money_io_b : public std::moneypunct<char,false>\n \n   pattern do_pos_format() const\n   {\n-    static pattern pat = { { sign, value, symbol, none } };\n+    pattern pat = { { sign, value, symbol, none } };\n     return pat;\n   }\n };\n@@ -493,6 +496,7 @@ void test07()\n   typedef istreambuf_iterator<char> InIt;\n \n   bool intl = false;\n+  bool test = true;\n   ios_base::iostate err;\n \n   locale loc_a(locale::classic(), new My_money_io_a);"}, {"sha": "2229de87ef63556742b8c2647b24bc4a444df7df", "filename": "libstdc++-v3/testsuite/22_locale/money_get_members_wchar_t.cc", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d223e3a4eeb0b099a8a4049fb13984feb3b6afa/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fmoney_get_members_wchar_t.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d223e3a4eeb0b099a8a4049fb13984feb3b6afa/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fmoney_get_members_wchar_t.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fmoney_get_members_wchar_t.cc?ref=0d223e3a4eeb0b099a8a4049fb13984feb3b6afa", "patch": "@@ -354,13 +354,13 @@ struct My_money_io : public std::moneypunct<wchar_t,false>\n \n   pattern do_pos_format() const\n   {\n-    static pattern pat = { { symbol, none, sign, value } };\n+    pattern pat = { { symbol, none, sign, value } };\n     return pat;\n   }\n \n   pattern do_neg_format() const\n   {\n-    static pattern pat = { { symbol, none, sign, value } };\n+    pattern pat = { { symbol, none, sign, value } };\n     return pat;\n   }\n };\n@@ -369,6 +369,7 @@ struct My_money_io : public std::moneypunct<wchar_t,false>\n void test05()\n {\n   using namespace std;\n+  bool test = true;\n   typedef istreambuf_iterator<wchar_t> InIt;\n \n   locale loc(locale::classic(), new My_money_io);\n@@ -418,6 +419,7 @@ void test05()\n void test06()\n {\n   using namespace std;\n+  bool test = true;\n \n   typedef istreambuf_iterator<wchar_t> InIt;\n   InIt iend1, iend2, iend3;\n@@ -463,7 +465,7 @@ struct My_money_io_a : public std::moneypunct<wchar_t,false>\n \n   pattern do_pos_format() const\n   {\n-    static pattern pat = { { sign, value, space, symbol } };\n+    pattern pat = { { sign, value, space, symbol } };\n     return pat;\n   }\n };\n@@ -480,7 +482,7 @@ struct My_money_io_b : public std::moneypunct<wchar_t,false>\n \n   pattern do_pos_format() const\n   {\n-    static pattern pat = { { sign, value, symbol, none } };\n+    pattern pat = { { sign, value, symbol, none } };\n     return pat;\n   }\n };\n@@ -492,6 +494,7 @@ struct My_money_io_b : public std::moneypunct<wchar_t,false>\n void test07()\n {\n   using namespace std;\n+  bool test = true;\n   typedef istreambuf_iterator<wchar_t> InIt;\n \n   bool intl = false;"}, {"sha": "626439bdb8bb92bb09cee9fb84ab063591d43e1c", "filename": "libstdc++-v3/testsuite/27_io/ios_init.cc", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d223e3a4eeb0b099a8a4049fb13984feb3b6afa/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fios_init.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d223e3a4eeb0b099a8a4049fb13984feb3b6afa/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fios_init.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fios_init.cc?ref=0d223e3a4eeb0b099a8a4049fb13984feb3b6afa", "patch": "@@ -131,6 +131,15 @@ void test02()\n   VERIFY( test );\n }\n \n+// Explicitly instantiate for systems with no COMDAT or weak support.\n+template \n+  std::basic_string<unsigned short>::size_type \n+  std::basic_string<unsigned short>::_Rep::_S_max_size;\n+\n+template \n+  unsigned short\n+  std::basic_string<unsigned short>::_Rep::_S_terminal;\n+\n int main()\n {\n   test01();"}]}