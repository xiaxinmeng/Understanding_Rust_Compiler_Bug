{"sha": "159921c0227cda0a6279b1ce3eaa673a885b3839", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTU5OTIxYzAyMjdjZGEwYTYyNzliMWNlM2VhYTY3M2E4ODViMzgzOQ==", "commit": {"author": {"name": "Laurent GUERBY", "email": "laurent@guerby.net", "date": "2005-04-16T07:21:58Z"}, "committer": {"name": "Laurent Guerby", "email": "guerby@gcc.gnu.org", "date": "2005-04-16T07:21:58Z"}, "message": "re PR ada/18847 ([4.0 only] ACATS cxa5012 SEGV on on x86_64)\n\n2005-04-16  Laurent GUERBY  <laurent@guerby.net>\n\n        PR ada/18847\n        * a-nudira.adb (Value): Check for valid string.\n        * a-nuflra.adb (Value): Likewise.\n\nFrom-SVN: r98223", "tree": {"sha": "d0971f5a0a3323f5bd3c88b8e6859cebfe814989", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d0971f5a0a3323f5bd3c88b8e6859cebfe814989"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/159921c0227cda0a6279b1ce3eaa673a885b3839", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/159921c0227cda0a6279b1ce3eaa673a885b3839", "html_url": "https://github.com/Rust-GCC/gccrs/commit/159921c0227cda0a6279b1ce3eaa673a885b3839", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/159921c0227cda0a6279b1ce3eaa673a885b3839/comments", "author": {"login": "guerby", "id": 6659329, "node_id": "MDQ6VXNlcjY2NTkzMjk=", "avatar_url": "https://avatars.githubusercontent.com/u/6659329?v=4", "gravatar_id": "", "url": "https://api.github.com/users/guerby", "html_url": "https://github.com/guerby", "followers_url": "https://api.github.com/users/guerby/followers", "following_url": "https://api.github.com/users/guerby/following{/other_user}", "gists_url": "https://api.github.com/users/guerby/gists{/gist_id}", "starred_url": "https://api.github.com/users/guerby/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/guerby/subscriptions", "organizations_url": "https://api.github.com/users/guerby/orgs", "repos_url": "https://api.github.com/users/guerby/repos", "events_url": "https://api.github.com/users/guerby/events{/privacy}", "received_events_url": "https://api.github.com/users/guerby/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "83eba8781a1f4d0f55a194e2b02d89c8580120bc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/83eba8781a1f4d0f55a194e2b02d89c8580120bc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/83eba8781a1f4d0f55a194e2b02d89c8580120bc"}], "stats": {"total": 42, "additions": 35, "deletions": 7}, "files": [{"sha": "06bf37bbea8bb6d1939722f538f400be6dfbaceb", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/159921c0227cda0a6279b1ce3eaa673a885b3839/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/159921c0227cda0a6279b1ce3eaa673a885b3839/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=159921c0227cda0a6279b1ce3eaa673a885b3839", "patch": "@@ -1,3 +1,9 @@\n+2005-04-16  Laurent GUERBY  <laurent@guerby.net>\n+\n+        PR ada/18847\n+        * a-nudira.adb (Value): Check for valid string.\n+        * a-nuflra.adb (Value): Likewise.\n+\n 2005-04-11  Richard Sandiford  <rsandifo@redhat.com>\n \n \t* lang.opt: Refer to the GCC internals documentation instead of c.opt."}, {"sha": "1b91d890b9a1881c7d46ea5b9128de928fb76b52", "filename": "gcc/ada/a-nudira.adb", "status": "modified", "additions": 12, "deletions": 3, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/159921c0227cda0a6279b1ce3eaa673a885b3839/gcc%2Fada%2Fa-nudira.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/159921c0227cda0a6279b1ce3eaa673a885b3839/gcc%2Fada%2Fa-nudira.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-nudira.adb?ref=159921c0227cda0a6279b1ce3eaa673a885b3839", "patch": "@@ -229,25 +229,34 @@ package body Ada.Numerics.Discrete_Random is\n    -----------\n \n    function Value (Coded_State : String) return State is\n+      Last  : constant Natural := Coded_State'Last;\n       Start : Positive := Coded_State'First;\n       Stop  : Positive := Coded_State'First;\n       Outs  : State;\n \n    begin\n-      while Coded_State (Stop) /= ',' loop\n+      while Stop <= Last and then Coded_State (Stop) /= ',' loop\n          Stop := Stop + 1;\n       end loop;\n \n+      if Stop > Last then\n+         raise Constraint_Error;\n+      end if;\n+\n       Outs.X1 := Int'Value (Coded_State (Start .. Stop - 1));\n       Start := Stop + 1;\n \n       loop\n          Stop := Stop + 1;\n-         exit when Coded_State (Stop) = ',';\n+         exit when Stop > Last or else Coded_State (Stop) = ',';\n       end loop;\n \n+      if Stop > Last then\n+         raise Constraint_Error;\n+      end if;\n+\n       Outs.X2  := Int'Value (Coded_State (Start .. Stop - 1));\n-      Outs.Q   := Int'Value (Coded_State (Stop + 1 .. Coded_State'Last));\n+      Outs.Q   := Int'Value (Coded_State (Stop + 1 .. Last));\n       Outs.P   := Outs.Q * 2 + 1;\n       Outs.FP  := Flt (Outs.P);\n       Outs.Scl := (RstL - RstF + 1.0) / (Flt (Outs.P) * Flt (Outs.Q));"}, {"sha": "70b90b89bb0a31fd35e609cfe42d7e924792a105", "filename": "gcc/ada/a-nuflra.adb", "status": "modified", "additions": 17, "deletions": 4, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/159921c0227cda0a6279b1ce3eaa673a885b3839/gcc%2Fada%2Fa-nuflra.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/159921c0227cda0a6279b1ce3eaa673a885b3839/gcc%2Fada%2Fa-nuflra.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-nuflra.adb?ref=159921c0227cda0a6279b1ce3eaa673a885b3839", "patch": "@@ -256,33 +256,46 @@ package body Ada.Numerics.Float_Random is\n    -----------\n \n    function Value (Coded_State : String) return State is\n+      Last  : constant Natural := Coded_State'Last;\n       Start : Positive := Coded_State'First;\n       Stop  : Positive := Coded_State'First;\n       Outs  : State;\n \n    begin\n-      while Coded_State (Stop) /= ',' loop\n+      while Stop <= Last and then Coded_State (Stop) /= ',' loop\n          Stop := Stop + 1;\n       end loop;\n \n+      if Stop > Last then\n+         raise Constraint_Error;\n+      end if;\n+\n       Outs.X1 := Int'Value (Coded_State (Start .. Stop - 1));\n       Start := Stop + 1;\n \n       loop\n          Stop := Stop + 1;\n-         exit when Coded_State (Stop) = ',';\n+         exit when Stop > Last or else Coded_State (Stop) = ',';\n       end loop;\n \n+      if Stop > Last then\n+         raise Constraint_Error;\n+      end if;\n+\n       Outs.X2 := Int'Value (Coded_State (Start .. Stop - 1));\n       Start := Stop + 1;\n \n       loop\n          Stop := Stop + 1;\n-         exit when Coded_State (Stop) = ',';\n+         exit when Stop > Last or else Coded_State (Stop) = ',';\n       end loop;\n \n+      if Stop > Last then\n+         raise Constraint_Error;\n+      end if;\n+\n       Outs.P   := Int'Value (Coded_State (Start .. Stop - 1));\n-      Outs.Q   := Int'Value (Coded_State (Stop + 1 .. Coded_State'Last));\n+      Outs.Q   := Int'Value (Coded_State (Stop + 1 .. Last));\n       Outs.X   := Euclid (Outs.P, Outs.Q);\n       Outs.Scl := 1.0 / (Flt (Outs.P) * Flt (Outs.Q));\n "}]}