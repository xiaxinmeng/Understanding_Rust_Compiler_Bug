{"sha": "9f09b13fd4154c8290dde9ce8ae277e2f2b91b10", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWYwOWIxM2ZkNDE1NGM4MjkwZGRlOWNlOGFlMjc3ZTJmMmI5MWIxMA==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2008-06-06T10:11:44Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2008-06-06T10:11:44Z"}, "message": "tree-ssa-structalias.c (merge_smts_into): Remove.\n\n2008-06-06  Richard Guenther  <rguenther@suse.de>\n\n\t* tree-ssa-structalias.c (merge_smts_into): Remove.\n\t(find_what_p_points_to): Do not bother to compute the\n\tpoints-to set for pt_anything pointers.\n\t* tree-ssa-operands.c (get_addr_dereference_operands): No NMT\n\tfor pt_anything pointers is ok.\n\n\t* gcc.dg/tree-ssa/alias-18.c: XFAIL some sub-tests.\n\nFrom-SVN: r136428", "tree": {"sha": "4e5835ccc889c0b51de1aa0ac9c19be9affe52c4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4e5835ccc889c0b51de1aa0ac9c19be9affe52c4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9f09b13fd4154c8290dde9ce8ae277e2f2b91b10", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9f09b13fd4154c8290dde9ce8ae277e2f2b91b10", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9f09b13fd4154c8290dde9ce8ae277e2f2b91b10", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9f09b13fd4154c8290dde9ce8ae277e2f2b91b10/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "9fbe48c0a4e67fe6762cf2dc251b5b2f3eef9c03", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9fbe48c0a4e67fe6762cf2dc251b5b2f3eef9c03", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9fbe48c0a4e67fe6762cf2dc251b5b2f3eef9c03"}], "stats": {"total": 62, "additions": 24, "deletions": 38}, "files": [{"sha": "8ba854ef3bb4ea5990d0bfa24e599181c6517ac2", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f09b13fd4154c8290dde9ce8ae277e2f2b91b10/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f09b13fd4154c8290dde9ce8ae277e2f2b91b10/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9f09b13fd4154c8290dde9ce8ae277e2f2b91b10", "patch": "@@ -1,3 +1,11 @@\n+2008-06-06  Richard Guenther  <rguenther@suse.de>\n+\n+\t* tree-ssa-structalias.c (merge_smts_into): Remove.\n+\t(find_what_p_points_to): Do not bother to compute the\n+\tpoints-to set for pt_anything pointers.\n+\t* tree-ssa-operands.c (get_addr_dereference_operands): No NMT\n+\tfor pt_anything pointers is ok.\n+\n 2008-06-06  Jan Hubicka  <jh@suse.cz>\n \n \t* passes.c (execute_ipa_pass_list): Do not regenerate summaries."}, {"sha": "fb43d809e49cd28b996165b808a6d4a22b184d2e", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f09b13fd4154c8290dde9ce8ae277e2f2b91b10/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f09b13fd4154c8290dde9ce8ae277e2f2b91b10/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=9f09b13fd4154c8290dde9ce8ae277e2f2b91b10", "patch": "@@ -1,3 +1,7 @@\n+2008-06-06  Richard Guenther  <rguenther@suse.de>\n+\n+\t* gcc.dg/tree-ssa/alias-18.c: XFAIL some sub-tests.\n+\n 2008-06-04  Joseph Myers  <joseph@codesourcery.com>\n \n \t* lib/target-supports.exp (check_effective_target_powerpc_spu):"}, {"sha": "84d884effb580ea02ff372472df3c9c0b123ccf9", "filename": "gcc/testsuite/gcc.dg/tree-ssa/alias-18.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f09b13fd4154c8290dde9ce8ae277e2f2b91b10/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Falias-18.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f09b13fd4154c8290dde9ce8ae277e2f2b91b10/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Falias-18.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Falias-18.c?ref=9f09b13fd4154c8290dde9ce8ae277e2f2b91b10", "patch": "@@ -78,10 +78,10 @@ int test8 (struct A *p, int *q)\n \n /* { dg-final { scan-tree-dump \"with 0\" \"fre\" } } */\n /* { dg-final { scan-tree-dump \"with 1\" \"fre\" { xfail *-*-* } } } */\n-/* { dg-final { scan-tree-dump \"with 3\" \"fre\" } } */\n+/* { dg-final { scan-tree-dump \"with 3\" \"fre\" { xfail *-*-* } } } */\n /* { dg-final { scan-tree-dump \"with 4\" \"fre\" } } */\n /* { dg-final { scan-tree-dump \"with 5\" \"fre\" } } */\n-/* { dg-final { scan-tree-dump \"with 8\" \"fre\" } } */\n+/* { dg-final { scan-tree-dump \"with 8\" \"fre\" { xfail *-*-* } } } */\n /* { dg-final { scan-tree-dump-not \"return 2;\" \"optimized\" } } */\n /* { dg-final { scan-tree-dump-not \"return 6;\" \"optimized\" } } */\n /* { dg-final { scan-tree-dump-not \"return 7;\" \"optimized\" } } */"}, {"sha": "102ed5af3d47f51308d8789dce7ef50e0125190d", "filename": "gcc/tree-ssa-operands.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f09b13fd4154c8290dde9ce8ae277e2f2b91b10/gcc%2Ftree-ssa-operands.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f09b13fd4154c8290dde9ce8ae277e2f2b91b10/gcc%2Ftree-ssa-operands.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-operands.c?ref=9f09b13fd4154c8290dde9ce8ae277e2f2b91b10", "patch": "@@ -1523,7 +1523,8 @@ get_addr_dereference_operands (tree stmt, tree *addr, int flags, tree full_ref,\n \t  if (dump_file\n \t      && TREE_CODE (ptr) == SSA_NAME\n \t      && (pi == NULL\n-\t\t  || pi->name_mem_tag == NULL_TREE))\n+\t\t  || (pi->name_mem_tag == NULL_TREE\n+\t\t      && !pi->pt_anything)))\n \t    {\n \t      fprintf (dump_file,\n \t\t  \"NOTE: no flow-sensitive alias info for \");"}, {"sha": "d66a4a82239682432f0b6715f31227c3f79cdfe1", "filename": "gcc/tree-ssa-structalias.c", "status": "modified", "additions": 8, "deletions": 35, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f09b13fd4154c8290dde9ce8ae277e2f2b91b10/gcc%2Ftree-ssa-structalias.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f09b13fd4154c8290dde9ce8ae277e2f2b91b10/gcc%2Ftree-ssa-structalias.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-structalias.c?ref=9f09b13fd4154c8290dde9ce8ae277e2f2b91b10", "patch": "@@ -4721,32 +4721,6 @@ set_used_smts (void)\n     }\n }\n \n-/* Merge the necessary SMT's into the bitmap INTO, which is\n-   P's varinfo.  This involves merging all SMT's that are a subset of\n-   the SMT necessary for P. */\n-\n-static void\n-merge_smts_into (tree p, bitmap solution)\n-{\n-  tree smt;\n-  bitmap aliases;\n-  tree var = p;\n-\n-  if (TREE_CODE (p) == SSA_NAME)\n-    var = SSA_NAME_VAR (p);\n-\n-  smt = var_ann (var)->symbol_mem_tag;\n-  if (smt)\n-    {\n-      /* The smt itself isn't included in its aliases.  */\n-      bitmap_set_bit (solution, DECL_UID (smt));\n-\n-      aliases = MTAG_ALIASES (smt);\n-      if (aliases)\n-\tbitmap_ior_into (solution, aliases);\n-    }\n-}\n-\n /* Given a pointer variable P, fill in its points-to set, or return\n    false if we can't.\n    Rather than return false for variables that point-to anything, we\n@@ -4828,19 +4802,18 @@ find_what_p_points_to (tree p)\n \t\t}\n \t    }\n \n+\t  /* Instead of doing extra work, simply do not create\n+\t     points-to information for pt_anything pointers.  This\n+\t     will cause the operand scanner to fall back to the\n+\t     type-based SMT and its aliases.  Which is the best\n+\t     we could do here for the points-to set as well.  */\n+\t  if (was_pt_anything)\n+\t    return false;\n+\n \t  /* Share the final set of variables when possible.  */\n \t  finished_solution = BITMAP_GGC_ALLOC ();\n \t  stats.points_to_sets_created++;\n \n-\t  /* Instead of using pt_anything, we merge in the SMT aliases\n-\t     for the underlying SMT.  In addition, if they could have\n-\t     pointed to anything, they could point to global memory.  */\n-\t  if (was_pt_anything)\n-\t    {\n-\t      merge_smts_into (p, finished_solution);\n-\t      pi->pt_global_mem = 1;\n-\t    }\n-\n \t  set_uids_in_ptset (p, finished_solution, vi->solution,\n \t\t\t     vi->directly_dereferenced,\n \t\t\t     vi->no_tbaa_pruning);"}]}