{"sha": "4f2c8ebb159ca57bbea0bc9ec26d0e4621c72d80", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGYyYzhlYmIxNTljYTU3YmJlYTBiYzllYzI2ZDBlNDYyMWM3MmQ4MA==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-06-19T22:33:36Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-06-19T22:33:36Z"}, "message": "(call_insn_operand): Require constant address be a general_operand.\n\n(expander_call_insn_operand): New fn (what call_insn_operand was).\n\nFrom-SVN: r4701", "tree": {"sha": "7d953c1c97ce6357d7e525d64fdf191dca470b53", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7d953c1c97ce6357d7e525d64fdf191dca470b53"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4f2c8ebb159ca57bbea0bc9ec26d0e4621c72d80", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4f2c8ebb159ca57bbea0bc9ec26d0e4621c72d80", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4f2c8ebb159ca57bbea0bc9ec26d0e4621c72d80", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4f2c8ebb159ca57bbea0bc9ec26d0e4621c72d80/comments", "author": null, "committer": null, "parents": [{"sha": "0eb60d83ecf95ac183f3a475099a38419eb5b1dd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0eb60d83ecf95ac183f3a475099a38419eb5b1dd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0eb60d83ecf95ac183f3a475099a38419eb5b1dd"}], "stats": {"total": 20, "additions": 20, "deletions": 0}, "files": [{"sha": "d0b11961b7b46ddf1323d818791c52c481726e7e", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f2c8ebb159ca57bbea0bc9ec26d0e4621c72d80/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f2c8ebb159ca57bbea0bc9ec26d0e4621c72d80/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=4f2c8ebb159ca57bbea0bc9ec26d0e4621c72d80", "patch": "@@ -524,6 +524,26 @@ int\n call_insn_operand (op, mode)\n      rtx op;\n      enum machine_mode mode;\n+{\n+  if (GET_CODE (op) == MEM\n+      && ((CONSTANT_ADDRESS_P (XEXP (op, 0))\n+\t   /* This makes a difference for PIC.  */\n+\t   && general_operand (XEXP (op, 0), Pmode))\n+\t  || (GET_CODE (XEXP (op, 0)) == REG\n+\t      && XEXP (op, 0) != arg_pointer_rtx\n+\t      && !(REGNO (XEXP (op, 0)) >= FIRST_PSEUDO_REGISTER\n+\t\t   && REGNO (XEXP (op, 0)) <= LAST_VIRTUAL_REGISTER))))\n+    return 1;\n+  return 0;\n+}\n+\n+/* Like call_insn_operand but allow (mem (symbol_ref ...))\n+   even if pic.  */\n+\n+int\n+expander_call_insn_operand (op, mode)\n+     rtx op;\n+     enum machine_mode mode;\n {\n   if (GET_CODE (op) == MEM\n       && (CONSTANT_ADDRESS_P (XEXP (op, 0))"}]}