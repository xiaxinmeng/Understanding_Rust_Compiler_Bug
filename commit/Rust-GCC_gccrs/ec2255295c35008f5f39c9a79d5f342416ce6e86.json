{"sha": "ec2255295c35008f5f39c9a79d5f342416ce6e86", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWMyMjU1Mjk1YzM1MDA4ZjVmMzljOWE3OWQ1ZjM0MjQxNmNlNmU4Ng==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2016-10-13T13:00:54Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2016-10-13T13:00:54Z"}, "message": "[multiple changes]\n\n2016-10-13  Hristian Kirtchev  <kirtchev@adacore.com>\n\n\t* sem_ch6.adb (Analyze_Expression_Function):\n\tRemove the aspects of the original expression function has been\n\trewritten into a subprogram declaration or a body. Reinsert the\n\taspects once they have been analyzed.\n\n2016-10-13  Tristan Gingold  <gingold@adacore.com>\n\n\t* exp_ch9.adb (Expand_N_Asynchronous_Select): Return immediately\n\ton restricted profile.\n\n2016-10-13  Javier Miranda  <miranda@adacore.com>\n\n\t* sem_prag.adb\n\t(Process_Compile_Time_Warning_Or_Error): Register the pragma\n\tfor its validation after the backend has been called only if its\n\texpression has some occurrence of attributes 'size or 'alignment\n\t* table.ads (Release_Threshold): New formal.\n\t(Release): Adding documentation of its new functionality.\n\t* table.adb (Release): Extend its functionality with a\n\tRelease_Threshold.\n\t* nlists.adb (Next_Node table): Set its Release_Threshold.\n\t* atree.adb (Orig_Nodes table): Set its Release_Threshold.\n\t* atree.ads (Nodes table): Set its Release_Threshold.\n\t(Flags table): Set its Release_Threshold.\n\t* alloc.ads (Nodes_Release_Threshold): New constant declaration.\n\t(Orig_Nodes_Release_Threshold): New constant declaration.\n\t* debug.adb (switch d.9): Left free.\n\t* gnat1drv.adb (Post_Compilation_Validation_Checks): Enable\n\tvalidation of pragmas Compile_Time_Error and Compile_Time_Warning.\n\nFrom-SVN: r241117", "tree": {"sha": "cf8e171b11f36bb989dabab2b48bd9d820d3fa97", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cf8e171b11f36bb989dabab2b48bd9d820d3fa97"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ec2255295c35008f5f39c9a79d5f342416ce6e86", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ec2255295c35008f5f39c9a79d5f342416ce6e86", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ec2255295c35008f5f39c9a79d5f342416ce6e86", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ec2255295c35008f5f39c9a79d5f342416ce6e86/comments", "author": null, "committer": null, "parents": [{"sha": "62c1b965b52837687f406f1923069e3ba584b77c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/62c1b965b52837687f406f1923069e3ba584b77c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/62c1b965b52837687f406f1923069e3ba584b77c"}], "stats": {"total": 223, "additions": 177, "deletions": 46}, "files": [{"sha": "b2c29fdd05397d60fa6cbc852f18474b904fdba2", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec2255295c35008f5f39c9a79d5f342416ce6e86/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec2255295c35008f5f39c9a79d5f342416ce6e86/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=ec2255295c35008f5f39c9a79d5f342416ce6e86", "patch": "@@ -1,3 +1,35 @@\n+2016-10-13  Hristian Kirtchev  <kirtchev@adacore.com>\n+\n+\t* sem_ch6.adb (Analyze_Expression_Function):\n+\tRemove the aspects of the original expression function has been\n+\trewritten into a subprogram declaration or a body. Reinsert the\n+\taspects once they have been analyzed.\n+\n+2016-10-13  Tristan Gingold  <gingold@adacore.com>\n+\n+\t* exp_ch9.adb (Expand_N_Asynchronous_Select): Return immediately\n+\ton restricted profile.\n+\n+2016-10-13  Javier Miranda  <miranda@adacore.com>\n+\n+\t* sem_prag.adb\n+\t(Process_Compile_Time_Warning_Or_Error): Register the pragma\n+\tfor its validation after the backend has been called only if its\n+\texpression has some occurrence of attributes 'size or 'alignment\n+\t* table.ads (Release_Threshold): New formal.\n+\t(Release): Adding documentation of its new functionality.\n+\t* table.adb (Release): Extend its functionality with a\n+\tRelease_Threshold.\n+\t* nlists.adb (Next_Node table): Set its Release_Threshold.\n+\t* atree.adb (Orig_Nodes table): Set its Release_Threshold.\n+\t* atree.ads (Nodes table): Set its Release_Threshold.\n+\t(Flags table): Set its Release_Threshold.\n+\t* alloc.ads (Nodes_Release_Threshold): New constant declaration.\n+\t(Orig_Nodes_Release_Threshold): New constant declaration.\n+\t* debug.adb (switch d.9): Left free.\n+\t* gnat1drv.adb (Post_Compilation_Validation_Checks): Enable\n+\tvalidation of pragmas Compile_Time_Error and Compile_Time_Warning.\n+\n 2016-10-13  Hristian Kirtchev  <kirtchev@adacore.com>\n \n \t* sem_ch6.adb (Create_Extra_Formals): Generate"}, {"sha": "7112fabfacfed8ae7c82e3679193e761f30d4136", "filename": "gcc/ada/alloc.ads", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec2255295c35008f5f39c9a79d5f342416ce6e86/gcc%2Fada%2Falloc.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec2255295c35008f5f39c9a79d5f342416ce6e86/gcc%2Fada%2Falloc.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Falloc.ads?ref=ec2255295c35008f5f39c9a79d5f342416ce6e86", "patch": "@@ -102,6 +102,7 @@ package Alloc is\n \n    Nodes_Initial                    : constant := 50_000;  -- Atree\n    Nodes_Increment                  : constant := 100;\n+   Nodes_Release_Threshold          : constant := 100_000;\n \n    Notes_Initial                    : constant := 100;     -- Lib\n    Notes_Increment                  : constant := 200;\n@@ -111,6 +112,7 @@ package Alloc is\n \n    Orig_Nodes_Initial               : constant := 50_000;  -- Atree\n    Orig_Nodes_Increment             : constant := 100;\n+   Orig_Nodes_Release_Threshold     : constant := 100_000;\n \n    Pending_Instantiations_Initial   : constant := 10;      -- Inline\n    Pending_Instantiations_Increment : constant := 100;"}, {"sha": "44188cfbba9a1c91cc7651b26fe93eb0a1a0905a", "filename": "gcc/ada/atree.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec2255295c35008f5f39c9a79d5f342416ce6e86/gcc%2Fada%2Fatree.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec2255295c35008f5f39c9a79d5f342416ce6e86/gcc%2Fada%2Fatree.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fatree.adb?ref=ec2255295c35008f5f39c9a79d5f342416ce6e86", "patch": "@@ -516,6 +516,7 @@ package body Atree is\n       Table_Low_Bound      => First_Node_Id,\n       Table_Initial        => Alloc.Orig_Nodes_Initial,\n       Table_Increment      => Alloc.Orig_Nodes_Increment,\n+      Release_Threshold    => Alloc.Orig_Nodes_Release_Threshold,\n       Table_Name           => \"Orig_Nodes\");\n \n    --------------------------"}, {"sha": "bf4e52e4ef1998291d1fc42744113fd2dfbf30b0", "filename": "gcc/ada/atree.ads", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec2255295c35008f5f39c9a79d5f342416ce6e86/gcc%2Fada%2Fatree.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec2255295c35008f5f39c9a79d5f342416ce6e86/gcc%2Fada%2Fatree.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fatree.ads?ref=ec2255295c35008f5f39c9a79d5f342416ce6e86", "patch": "@@ -4206,6 +4206,7 @@ package Atree is\n         Table_Low_Bound      => First_Node_Id,\n         Table_Initial        => Alloc.Nodes_Initial,\n         Table_Increment      => Alloc.Nodes_Increment,\n+        Release_Threshold    => Alloc.Nodes_Release_Threshold,\n         Table_Name           => \"Nodes\");\n \n       --  The following is a parallel table to Nodes, which provides 8 more\n@@ -4251,6 +4252,7 @@ package Atree is\n         Table_Low_Bound      => First_Node_Id,\n         Table_Initial        => Alloc.Nodes_Initial,\n         Table_Increment      => Alloc.Nodes_Increment,\n+        Release_Threshold    => Alloc.Nodes_Release_Threshold,\n         Table_Name           => \"Flags\");\n \n    end Atree_Private_Part;"}, {"sha": "e3c53dda462007c88fec0cf0524d7d6a1a8fbd36", "filename": "gcc/ada/debug.adb", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec2255295c35008f5f39c9a79d5f342416ce6e86/gcc%2Fada%2Fdebug.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec2255295c35008f5f39c9a79d5f342416ce6e86/gcc%2Fada%2Fdebug.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fdebug.adb?ref=ec2255295c35008f5f39c9a79d5f342416ce6e86", "patch": "@@ -163,7 +163,7 @@ package body Debug is\n    --  d.6\n    --  d.7\n    --  d.8\n-   --  d.9  Enable validation of pragma Compile_Time_[Error/Warning]\n+   --  d.9\n \n    --  Debug flags for binder (GNATBIND)\n \n@@ -774,10 +774,6 @@ package body Debug is\n    --  d.5  By default a subprogram imported generates a subprogram profile.\n    --       This debug flag disables this generation when generating C code,\n    --       assuming a proper #include will be used instead.\n-   --\n-   --  d.9  Flag used temporarily to enable the validation of pragmas Compile_\n-   --       Time_Error and Compile_Time_Warning after the back end has been\n-   --       called.\n \n    ------------------------------------------\n    -- Documentation for Binder Debug Flags --"}, {"sha": "dd812cc9e924e0b91e73c0e0f06b4e5ef4e04528", "filename": "gcc/ada/exp_ch9.adb", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec2255295c35008f5f39c9a79d5f342416ce6e86/gcc%2Fada%2Fexp_ch9.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec2255295c35008f5f39c9a79d5f342416ce6e86/gcc%2Fada%2Fexp_ch9.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch9.adb?ref=ec2255295c35008f5f39c9a79d5f342416ce6e86", "patch": "@@ -7176,6 +7176,13 @@ package body Exp_Ch9 is\n    --  Start of processing for Expand_N_Asynchronous_Select\n \n    begin\n+      --  Asynchronous select is not supported on restricted runtimes. Don't\n+      --  try to expand.\n+\n+      if Restricted_Profile then\n+         return;\n+      end if;\n+\n       Process_Statements_For_Controlled_Objects (Trig);\n       Process_Statements_For_Controlled_Objects (Abrt);\n "}, {"sha": "929bfcc316d681f71c91d2a78ee1a7ac668cf44d", "filename": "gcc/ada/gnat1drv.adb", "status": "modified", "additions": 7, "deletions": 12, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec2255295c35008f5f39c9a79d5f342416ce6e86/gcc%2Fada%2Fgnat1drv.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec2255295c35008f5f39c9a79d5f342416ce6e86/gcc%2Fada%2Fgnat1drv.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat1drv.adb?ref=ec2255295c35008f5f39c9a79d5f342416ce6e86", "patch": "@@ -875,18 +875,13 @@ procedure Gnat1drv is\n       --  and alignment annotated by the backend where possible). We need to\n       --  unlock temporarily these tables to reanalyze their expression.\n \n-      --  ??? temporarily disabled since it causes regressions with large\n-      --  sources\n-\n-      if Debug_Flag_Dot_9 then\n-         Atree.Unlock;\n-         Nlists.Unlock;\n-         Sem.Unlock;\n-         Sem_Ch13.Validate_Compile_Time_Warning_Errors;\n-         Sem.Lock;\n-         Nlists.Lock;\n-         Atree.Lock;\n-      end if;\n+      Atree.Unlock;\n+      Nlists.Unlock;\n+      Sem.Unlock;\n+      Sem_Ch13.Validate_Compile_Time_Warning_Errors;\n+      Sem.Lock;\n+      Nlists.Lock;\n+      Atree.Lock;\n \n       --  Validate unchecked conversions (using the values for size and\n       --  alignment annotated by the backend where possible)."}, {"sha": "b40446a3b4680361ec5bd191c0b8c5d8fa9038a1", "filename": "gcc/ada/nlists.adb", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec2255295c35008f5f39c9a79d5f342416ce6e86/gcc%2Fada%2Fnlists.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec2255295c35008f5f39c9a79d5f342416ce6e86/gcc%2Fada%2Fnlists.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fnlists.adb?ref=ec2255295c35008f5f39c9a79d5f342416ce6e86", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2014, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2016, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -90,6 +90,7 @@ package body Nlists is\n       Table_Low_Bound      => First_Node_Id,\n       Table_Initial        => Alloc.Orig_Nodes_Initial,\n       Table_Increment      => Alloc.Orig_Nodes_Increment,\n+      Release_Threshold    => Alloc.Orig_Nodes_Release_Threshold,\n       Table_Name           => \"Next_Node\");\n \n    package Prev_Node is new Table.Table ("}, {"sha": "53ca284dc4da14ae9b63739d1a1a6053d95ea213", "filename": "gcc/ada/sem_ch6.adb", "status": "modified", "additions": 32, "deletions": 17, "changes": 49, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec2255295c35008f5f39c9a79d5f342416ce6e86/gcc%2Fada%2Fsem_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec2255295c35008f5f39c9a79d5f342416ce6e86/gcc%2Fada%2Fsem_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch6.adb?ref=ec2255295c35008f5f39c9a79d5f342416ce6e86", "patch": "@@ -274,17 +274,17 @@ package body Sem_Ch6 is\n       LocX : constant Source_Ptr := Sloc (Expr);\n       Spec : constant Node_Id    := Specification (N);\n \n-      Def_Id : Entity_Id;\n+      Asp      : Node_Id;\n+      Def_Id   : Entity_Id;\n+      New_Body : Node_Id;\n+      New_Spec : Node_Id;\n+      Orig_N   : Node_Id;\n+      Ret      : Node_Id;\n \n       Prev : Entity_Id;\n       --  If the expression is a completion, Prev is the entity whose\n       --  declaration is completed. Def_Id is needed to analyze the spec.\n \n-      New_Body : Node_Id;\n-      New_Spec : Node_Id;\n-      Ret      : Node_Id;\n-      Asp      : Node_Id;\n-\n    begin\n       --  This is one of the occasions on which we transform the tree during\n       --  semantic analysis. If this is a completion, transform the expression\n@@ -392,12 +392,11 @@ package body Sem_Ch6 is\n          Generate_Reference (Prev, Defining_Entity (N), 'b', Force => True);\n          Rewrite (N, New_Body);\n \n-         --  Correct the parent pointer of the aspect specification list to\n-         --  reference the rewritten node.\n+         --  Remove any existing aspects from the original node because the act\n+         --  of rewriting cases the list to be shared between the two nodes.\n \n-         if Has_Aspects (N) then\n-            Set_Parent (Aspect_Specifications (N), N);\n-         end if;\n+         Orig_N := Original_Node (N);\n+         Remove_Aspects (Orig_N);\n \n          --  Propagate any pragmas that apply to the expression function to the\n          --  proper body when the expression function acts as a completion.\n@@ -406,6 +405,14 @@ package body Sem_Ch6 is\n          Relocate_Pragmas_To_Body (N);\n          Analyze (N);\n \n+         --  Once the aspects of the generated body has been analyzed, create a\n+         --  copy for ASIS purposes and assciate it with the original node.\n+\n+         if Has_Aspects (N) then\n+            Set_Aspect_Specifications (Orig_N,\n+              New_Copy_List_Tree (Aspect_Specifications (N)));\n+         end if;\n+\n          --  Prev is the previous entity with the same name, but it is can\n          --  be an unrelated spec that is not completed by the expression\n          --  function. In that case the relevant entity is the one in the body.\n@@ -451,15 +458,21 @@ package body Sem_Ch6 is\n \n          Rewrite (N, Make_Subprogram_Declaration (Loc, Specification => Spec));\n \n-         --  Correct the parent pointer of the aspect specification list to\n-         --  reference the rewritten node.\n+         --  Remove any existing aspects from the original node because the act\n+         --  of rewriting cases the list to be shared between the two nodes.\n \n-         if Has_Aspects (N) then\n-            Set_Parent (Aspect_Specifications (N), N);\n-         end if;\n+         Orig_N := Original_Node (N);\n+         Remove_Aspects (Orig_N);\n \n          Analyze (N);\n-         Def_Id := Defining_Entity (N);\n+\n+         --  Once the aspects of the generated spec has been analyzed, create a\n+         --  copy for ASIS purposes and assciate it with the original node.\n+\n+         if Has_Aspects (N) then\n+            Set_Aspect_Specifications (Orig_N,\n+              New_Copy_List_Tree (Aspect_Specifications (N)));\n+         end if;\n \n          --  If aspect SPARK_Mode was specified on the body, it needs to be\n          --  repeated both on the generated spec and the body.\n@@ -472,6 +485,8 @@ package body Sem_Ch6 is\n             Set_Aspect_Specifications (New_Body, New_List (Asp));\n          end if;\n \n+         Def_Id := Defining_Entity (N);\n+\n          --  Within a generic pre-analyze the original expression for name\n          --  capture. The body is also generated but plays no role in\n          --  this because it is not part of the original source."}, {"sha": "26a4870032ed6fcc1c3deafe8ff78b9cc9cb452a", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 48, "deletions": 1, "changes": 49, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec2255295c35008f5f39c9a79d5f342416ce6e86/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec2255295c35008f5f39c9a79d5f342416ce6e86/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=ec2255295c35008f5f39c9a79d5f342416ce6e86", "patch": "@@ -7015,8 +7015,45 @@ package body Sem_Prag is\n       -------------------------------------------\n \n       procedure Process_Compile_Time_Warning_Or_Error is\n+         Validation_Needed : Boolean := False;\n+\n+         function Check_Node (N : Node_Id) return Traverse_Result;\n+         --  Tree visitor that checks if N is an attribute reference that can\n+         --  be statically computed by the backend. Validation_Needed is set\n+         --  to True if found.\n+\n+         ----------------\n+         -- Check_Node --\n+         ----------------\n+\n+         function Check_Node (N : Node_Id) return Traverse_Result is\n+         begin\n+            if Nkind (N) = N_Attribute_Reference\n+              and then Is_Entity_Name (Prefix (N))\n+            then\n+               declare\n+                  Attr_Id : constant Attribute_Id :=\n+                              Get_Attribute_Id (Attribute_Name (N));\n+               begin\n+                  if Attr_Id = Attribute_Alignment\n+                    or else Attr_Id = Attribute_Size\n+                  then\n+                     Validation_Needed := True;\n+                  end if;\n+               end;\n+            end if;\n+\n+            return OK;\n+         end Check_Node;\n+\n+         procedure Check_Expression is new Traverse_Proc (Check_Node);\n+\n+         --  Local variables\n+\n          Arg1x : constant Node_Id := Get_Pragma_Arg (Arg1);\n \n+      --  Start of processing for Process_Compile_Time_Warning_Or_Error\n+\n       begin\n          Check_Arg_Count (2);\n          Check_No_Identifiers;\n@@ -7025,8 +7062,18 @@ package body Sem_Prag is\n \n          if Compile_Time_Known_Value (Arg1x) then\n             Process_Compile_Time_Warning_Or_Error (N, Sloc (Arg1));\n+\n+         --  Register the expression for its validation after the backend has\n+         --  been called if it has occurrences of attributes size or alignment\n+         --  (because they may be statically computed by the backend and hence\n+         --  the whole expression needs to be re-evaluated).\n+\n          else\n-            Sem_Ch13.Validate_Compile_Time_Warning_Error (N);\n+            Check_Expression (Arg1x);\n+\n+            if Validation_Needed then\n+               Sem_Ch13.Validate_Compile_Time_Warning_Error (N);\n+            end if;\n          end if;\n       end Process_Compile_Time_Warning_Or_Error;\n "}, {"sha": "2c7eb0c4a6616891008030825d9db7113a0e4a4e", "filename": "gcc/ada/table.adb", "status": "modified", "additions": 28, "deletions": 2, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec2255295c35008f5f39c9a79d5f342416ce6e86/gcc%2Fada%2Ftable.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec2255295c35008f5f39c9a79d5f342416ce6e86/gcc%2Fada%2Ftable.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ftable.adb?ref=ec2255295c35008f5f39c9a79d5f342416ce6e86", "patch": "@@ -229,17 +229,43 @@ package body Table is\n             Set_Standard_Output;\n             raise Unrecoverable_Error;\n          end if;\n-\n       end Reallocate;\n \n       -------------\n       -- Release --\n       -------------\n \n       procedure Release is\n+         Extra_Length : Int;\n+         Size         : Memory.size_t;\n+\n       begin\n          Length := Last_Val - Int (Table_Low_Bound) + 1;\n-         Max    := Last_Val;\n+         Size   := Memory.size_t (Length) *\n+                     (Table_Type'Component_Size / Storage_Unit);\n+\n+         --  If the size of the table exceeds the release threshold then leave\n+         --  space to store as many extra elements as 0.1% of the table length.\n+\n+         if Release_Threshold > 0\n+           and then Size > Memory.size_t (Release_Threshold)\n+         then\n+            Extra_Length := Length / 1000;\n+            Length := Length + Extra_Length;\n+            Max    := Int (Table_Low_Bound) + Length - 1;\n+\n+            if Debug_Flag_D then\n+               Write_Str (\"--> Release_Threshold reached (length=\");\n+               Write_Int (Int (Size));\n+               Write_Str (\"): leaving room space for \");\n+               Write_Int (Extra_Length);\n+               Write_Str (\" components\");\n+               Write_Eol;\n+            end if;\n+         else\n+            Max := Last_Val;\n+         end if;\n+\n          Reallocate;\n       end Release;\n "}, {"sha": "e928ef084babd261c66cb85cb34f722e64a79354", "filename": "gcc/ada/table.ads", "status": "modified", "additions": 15, "deletions": 8, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec2255295c35008f5f39c9a79d5f342416ce6e86/gcc%2Fada%2Ftable.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec2255295c35008f5f39c9a79d5f342416ce6e86/gcc%2Fada%2Ftable.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ftable.ads?ref=ec2255295c35008f5f39c9a79d5f342416ce6e86", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2015, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2016, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -47,10 +47,11 @@ package Table is\n       type Table_Component_Type is private;\n       type Table_Index_Type     is range <>;\n \n-      Table_Low_Bound  : Table_Index_Type;\n-      Table_Initial    : Pos;\n-      Table_Increment  : Nat;\n-      Table_Name       : String;\n+      Table_Low_Bound   : Table_Index_Type;\n+      Table_Initial     : Pos;\n+      Table_Increment   : Nat;\n+      Table_Name        : String;\n+      Release_Threshold : Nat := 0;\n \n    package Table is\n \n@@ -151,9 +152,15 @@ package Table is\n \n       procedure Release;\n       --  Storage is allocated in chunks according to the values given in the\n-      --  Initial and Increment parameters. A call to Release releases all\n-      --  storage that is allocated, but is not logically part of the current\n-      --  array value. Current array values are not affected by this call.\n+      --  Initial and Increment parameters. If Release_Threshold is 0 or the\n+      --  length of the table does not exceed this threshold then a call to\n+      --  Release releases all storage that is allocated, but is not logically\n+      --  part of the current array value; otherwise the call to Release leaves\n+      --  the current array value plus 0.1% of the current table length free\n+      --  elements located at the end of the table (this parameter facilitates\n+      --  reopening large tables and adding a few elements without allocating a\n+      --  chunk of memory). In both cases current array values are not affected\n+      --  by this call.\n \n       procedure Free;\n       --  Free all allocated memory for the table. A call to init is required"}]}