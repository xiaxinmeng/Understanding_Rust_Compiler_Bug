{"sha": "09b868558b4beffb64f04223ffb981d92052b53e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDliODY4NTU4YjRiZWZmYjY0ZjA0MjIzZmZiOTgxZDkyMDUyYjUzZQ==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2006-07-05T10:54:17Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2006-07-05T10:54:17Z"}, "message": "re PR middle-end/27084 (Does not propagate memory load base through useless type conversion)\n\n2006-07-05  Richard Guenther  <rguenther@suse.de>\n\tAndrew Pinski  <pinskia@gcc.gnu.org>\n\n\tPR c++/27084\n\t* cp-objcp-common.c (cxx_types_compatible_p): Ignore\n\ttop level qualifiers for pointer type comparisons.\n\n\t* g++.dg/tree-ssa/copyprop-1.C: New testcase.\n\nCo-Authored-By: Andrew Pinski <pinskia@gcc.gnu.org>\n\nFrom-SVN: r115200", "tree": {"sha": "e368e3fa103fb7e3f8554ee770014694170aa611", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e368e3fa103fb7e3f8554ee770014694170aa611"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/09b868558b4beffb64f04223ffb981d92052b53e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/09b868558b4beffb64f04223ffb981d92052b53e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/09b868558b4beffb64f04223ffb981d92052b53e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/09b868558b4beffb64f04223ffb981d92052b53e/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d898f3ce60f2ae73fe484386ffc1916160d6fd61", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d898f3ce60f2ae73fe484386ffc1916160d6fd61", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d898f3ce60f2ae73fe484386ffc1916160d6fd61"}], "stats": {"total": 45, "additions": 44, "deletions": 1}, "files": [{"sha": "d2c0562851b456ad996c7e9cd0ce6c7afe70e797", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/09b868558b4beffb64f04223ffb981d92052b53e/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/09b868558b4beffb64f04223ffb981d92052b53e/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=09b868558b4beffb64f04223ffb981d92052b53e", "patch": "@@ -1,3 +1,10 @@\n+2006-07-05  Richard Guenther  <rguenther@suse.de>\n+\tAndrew Pinski  <pinskia@gcc.gnu.org>\n+\n+\tPR c++/27084\n+\t* cp-objcp-common.c (cxx_types_compatible_p): Ignore\n+\ttop level qualifiers for pointer type comparisons.\n+\n 2006-07-01  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/28215"}, {"sha": "0b27abf101ec896a903bd4ca3381dd2a1d4cd1a9", "filename": "gcc/cp/cp-objcp-common.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/09b868558b4beffb64f04223ffb981d92052b53e/gcc%2Fcp%2Fcp-objcp-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/09b868558b4beffb64f04223ffb981d92052b53e/gcc%2Fcp%2Fcp-objcp-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-objcp-common.c?ref=09b868558b4beffb64f04223ffb981d92052b53e", "patch": "@@ -179,7 +179,8 @@ cxx_types_compatible_p (tree x, tree y)\n   if (POINTER_TYPE_P (x) && POINTER_TYPE_P (y)\n       && TYPE_MODE (x) == TYPE_MODE (y)\n       && TYPE_REF_CAN_ALIAS_ALL (x) == TYPE_REF_CAN_ALIAS_ALL (y)\n-      && same_type_p (TREE_TYPE (x), TREE_TYPE (y)))\n+      && same_type_ignoring_top_level_qualifiers_p (TREE_TYPE (x),\n+\t\t\t\t\t\t    TREE_TYPE (y)))\n     return 1;\n \n   return 0;"}, {"sha": "02e6dd1f7080398c0122edbd8313a7ba2e9538ad", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/09b868558b4beffb64f04223ffb981d92052b53e/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/09b868558b4beffb64f04223ffb981d92052b53e/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=09b868558b4beffb64f04223ffb981d92052b53e", "patch": "@@ -1,3 +1,9 @@\n+2006-07-05  Richard Guenther  <rguenther@suse.de>\n+\tAndrew Pinski  <pinskia@gcc.gnu.org>\n+\n+\tPR c++/27084\n+\t* g++.dg/tree-ssa/copyprop-1.C: New testcase.\n+\n 2006-07-04  Paul Thomas  <pault@gcc.gnu.org>\n \n \tPR fortran/28174"}, {"sha": "2be046915378e7308334105a6cbc284f0be89156", "filename": "gcc/testsuite/g++.dg/tree-ssa/copyprop-1.C", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/09b868558b4beffb64f04223ffb981d92052b53e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-ssa%2Fcopyprop-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/09b868558b4beffb64f04223ffb981d92052b53e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-ssa%2Fcopyprop-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-ssa%2Fcopyprop-1.C?ref=09b868558b4beffb64f04223ffb981d92052b53e", "patch": "@@ -0,0 +1,29 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O -fdump-tree-dce2\" } */\n+\n+/* Verify that we can eliminate the useless conversions to/from\n+   const qualified pointer types\n+     this_2 = o_1;\n+     D.20003_4 = this_2->data_m;\n+     this_5 = D.20003_4;\n+     D.20005_6 = this_5->value;\n+   copyprop should propagate o_1 and D.20003_4 to the loads of data_m\n+   and value.  dce removes all traces of this.  */\n+\n+struct Data {\n+  int get() const { return value; }\n+  int value;\n+};\n+\n+struct Object {\n+  int operator[](int i) const { return data_m->get(); }\n+  Data *data_m;\n+};\n+\n+int foo(Object&o)\n+{\n+  return o[0];\n+}\n+\n+/* { dg-final { scan-tree-dump-not \".* = \\[^>;\\]*;\" \"dce2\" } } */\n+/* { dg-final { cleanup-tree-dump \"dce2\" } } */"}]}