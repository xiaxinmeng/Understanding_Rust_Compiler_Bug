{"sha": "1aae3f05473e1e6bbfb80a9adfbc8cff4a61e310", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWFhZTNmMDU0NzNlMWU2YmJmYjgwYTlhZGZiYzhjZmY0YTYxZTMxMA==", "commit": {"author": {"name": "Thomas Koenig", "email": "tkoenig@gcc.gnu.org", "date": "2015-05-16T12:33:01Z"}, "committer": {"name": "Thomas Koenig", "email": "tkoenig@gcc.gnu.org", "date": "2015-05-16T12:33:01Z"}, "message": "re PR fortran/66113 (Variable n cannot appear in the expression with nested blocks)\n\n2015-05-16  Thomas Koenig  <tkoenig@gcc.gnu.org>\n\n\tPR fortran/66113\n\t* expr.c (is_parent_of_current_ns):  New function.\n\t(check_restricted):  Use it.\n\n2015-05-16  Thomas Koenig  <tkoenig@gcc.gnu.org>\n\n\tPR fortran/66113\n\t* gfortran.dg/block_14.f90:  New test.\n\nFrom-SVN: r223238", "tree": {"sha": "03c12b7dcd2d7bed40f9e13094e8f4ed26459a10", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/03c12b7dcd2d7bed40f9e13094e8f4ed26459a10"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1aae3f05473e1e6bbfb80a9adfbc8cff4a61e310", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1aae3f05473e1e6bbfb80a9adfbc8cff4a61e310", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1aae3f05473e1e6bbfb80a9adfbc8cff4a61e310", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1aae3f05473e1e6bbfb80a9adfbc8cff4a61e310/comments", "author": null, "committer": null, "parents": [{"sha": "2a2703a2bd0046ed60a2054df1f4f3ba5c793062", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2a2703a2bd0046ed60a2054df1f4f3ba5c793062", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2a2703a2bd0046ed60a2054df1f4f3ba5c793062"}], "stats": {"total": 50, "additions": 46, "deletions": 4}, "files": [{"sha": "002a147ce62f94130fa8fb4edf8bcf4460d2e87c", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1aae3f05473e1e6bbfb80a9adfbc8cff4a61e310/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1aae3f05473e1e6bbfb80a9adfbc8cff4a61e310/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=1aae3f05473e1e6bbfb80a9adfbc8cff4a61e310", "patch": "@@ -1,3 +1,9 @@\n+2015-05-16  Thomas Koenig  <tkoenig@gcc.gnu.org>\n+\n+\tPR fortran/66113\n+\t* expr.c (is_parent_of_current_ns):  New function.\n+\t(check_restricted):  Use it.\n+\n 2015-05-16  Manuel L\u00f3pez-Ib\u00e1\u00f1ez  <manu@gcc.gnu.org>\n \n \tPR fortran/44054\n@@ -28,7 +34,7 @@\n \t(gfc_diagnostics_init): Initialize caret_chars array.\n \t(gfc_diagnostics_finish): Reset caret_chars array to default.\n \n-2015-05-16  Mikael Morin  <mikael@gcc.gnu.org\n+2015-05-16  Mikael Morin  <mikael@gcc.gnu.org>\n \t    Paul Thomas  <pault@gcc.gnu.org>\n \n \tPR fortran/65792"}, {"sha": "aa79243fa04b261e85f1bf3ac320429ed15f744d", "filename": "gcc/fortran/expr.c", "status": "modified", "additions": 13, "deletions": 3, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1aae3f05473e1e6bbfb80a9adfbc8cff4a61e310/gcc%2Ffortran%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1aae3f05473e1e6bbfb80a9adfbc8cff4a61e310/gcc%2Ffortran%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fexpr.c?ref=1aae3f05473e1e6bbfb80a9adfbc8cff4a61e310", "patch": "@@ -2841,6 +2841,18 @@ check_references (gfc_ref* ref, bool (*checker) (gfc_expr*))\n   return check_references (ref->next, checker);\n }\n \n+/*  Return true if ns is a parent of the current ns.  */\n+\n+static bool\n+is_parent_of_current_ns (gfc_namespace *ns)\n+{\n+  gfc_namespace *p;\n+  for (p = gfc_current_ns->parent; p; p = p->parent)\n+    if (ns == p)\n+      return true;\n+\n+  return false;\n+}\n \n /* Verify that an expression is a restricted expression.  Like its\n    cousin check_init_expr(), an error message is generated if we\n@@ -2929,9 +2941,7 @@ check_restricted (gfc_expr *e)\n \t    || sym->attr.dummy\n \t    || sym->attr.implied_index\n \t    || sym->attr.flavor == FL_PARAMETER\n-\t    || (sym->ns && sym->ns == gfc_current_ns->parent)\n-\t    || (sym->ns && gfc_current_ns->parent\n-\t\t  && sym->ns == gfc_current_ns->parent->parent)\n+\t    || is_parent_of_current_ns (sym->ns)\n \t    || (sym->ns->proc_name != NULL\n \t\t  && sym->ns->proc_name->attr.flavor == FL_MODULE)\n \t    || (gfc_is_formal_arg () && (sym->ns == gfc_current_ns)))"}, {"sha": "b3aa87ca73c9145eb40dd0aaf0e8cebef977a311", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1aae3f05473e1e6bbfb80a9adfbc8cff4a61e310/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1aae3f05473e1e6bbfb80a9adfbc8cff4a61e310/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=1aae3f05473e1e6bbfb80a9adfbc8cff4a61e310", "patch": "@@ -1,3 +1,8 @@\n+2015-05-16  Thomas Koenig  <tkoenig@gcc.gnu.org>\n+\n+\tPR fortran/66113\n+\t* gfortran.dg/block_14.f90:  New test.\n+\n 2015-05-16  Manuel L\u00f3pez-Ib\u00e1\u00f1ez  <manu@gcc.gnu.org>\n \n \tPR fortran/44054"}, {"sha": "50e65687e49249b40b77b597270f854f724a66cf", "filename": "gcc/testsuite/gfortran.dg/block_14.f90", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1aae3f05473e1e6bbfb80a9adfbc8cff4a61e310/gcc%2Ftestsuite%2Fgfortran.dg%2Fblock_14.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1aae3f05473e1e6bbfb80a9adfbc8cff4a61e310/gcc%2Ftestsuite%2Fgfortran.dg%2Fblock_14.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fblock_14.f90?ref=1aae3f05473e1e6bbfb80a9adfbc8cff4a61e310", "patch": "@@ -0,0 +1,21 @@\n+! { dg-do  run }\n+! PR 66113 - this used to ICE with deeply nested BLOCKS.\n+program main\n+  integer :: n\n+  real :: s\n+  n = 3\n+  block\n+    block\n+      block\n+        block\n+          block\n+            real, dimension(n) :: a\n+            a = 3.\n+            s = sum(a)\n+          end block\n+        end block\n+      end block\n+    end block\n+  end block\n+  if (s /= 9) call abort\n+end program main"}]}