{"sha": "f3877b2f7077963f9c688a4116e6d8abd0d212a6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjM4NzdiMmY3MDc3OTYzZjljNjg4YTQxMTZlNmQ4YWJkMGQyMTJhNg==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2017-02-05T09:47:48Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2017-02-05T09:47:48Z"}, "message": "re PR target/79353 (ICE in curr_insn_transform, at lra-constraints.c:3773)\n\n\tPR target/79353\n\t* config/sparc/sync.md (atomic_loaddi_1): Replace 'U' constraint with\n\t'r', 'm' constraint with 'T' and !TARGET_ARCH64 with TARGET_ARCH32.\n\t(atomic_storedi_1): Likewise.\n\nFrom-SVN: r245188", "tree": {"sha": "551cbc1ba48f1fca108cba8affe6cd811a8e26b4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/551cbc1ba48f1fca108cba8affe6cd811a8e26b4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f3877b2f7077963f9c688a4116e6d8abd0d212a6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f3877b2f7077963f9c688a4116e6d8abd0d212a6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f3877b2f7077963f9c688a4116e6d8abd0d212a6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f3877b2f7077963f9c688a4116e6d8abd0d212a6/comments", "author": null, "committer": null, "parents": [{"sha": "46628ab7ac4b2d80ce12a9a697f88733984594ec", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/46628ab7ac4b2d80ce12a9a697f88733984594ec", "html_url": "https://github.com/Rust-GCC/gccrs/commit/46628ab7ac4b2d80ce12a9a697f88733984594ec"}], "stats": {"total": 62, "additions": 56, "deletions": 6}, "files": [{"sha": "9e751381511d6e66a9b0c06b40f79341718b5092", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f3877b2f7077963f9c688a4116e6d8abd0d212a6/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f3877b2f7077963f9c688a4116e6d8abd0d212a6/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f3877b2f7077963f9c688a4116e6d8abd0d212a6", "patch": "@@ -1,3 +1,10 @@\n+2017-02-05  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\tPR target/79353\n+\t* config/sparc/sync.md (atomic_loaddi_1): Replace 'U' constraint with\n+\t'r', 'm' constraint with 'T' and !TARGET_ARCH64 with TARGET_ARCH32.\n+\t(atomic_storedi_1): Likewise.\n+\n 2017-02-04  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR tree-optimization/79338"}, {"sha": "1593bdeb903f901331e01c200cf92610bee24e55", "filename": "gcc/config/sparc/sync.md", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f3877b2f7077963f9c688a4116e6d8abd0d212a6/gcc%2Fconfig%2Fsparc%2Fsync.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f3877b2f7077963f9c688a4116e6d8abd0d212a6/gcc%2Fconfig%2Fsparc%2Fsync.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsync.md?ref=f3877b2f7077963f9c688a4116e6d8abd0d212a6", "patch": "@@ -133,10 +133,10 @@\n })\n \n (define_insn \"atomic_loaddi_1\"\n-  [(set (match_operand:DI 0 \"register_operand\" \"=U,?*f\")\n-\t(unspec:DI [(match_operand:DI 1 \"memory_operand\" \"m,m\")]\n+  [(set (match_operand:DI 0 \"register_operand\" \"=r,?*f\")\n+\t(unspec:DI [(match_operand:DI 1 \"memory_operand\" \"T,T\")]\n \t\t   UNSPEC_ATOMIC))]\n-  \"!TARGET_ARCH64\"\n+  \"TARGET_ARCH32\"\n   \"ldd\\t%1, %0\"\n   [(set_attr \"type\" \"load,fpload\")])\n \n@@ -160,11 +160,11 @@\n })\n \n (define_insn \"atomic_storedi_1\"\n-  [(set (match_operand:DI 0 \"memory_operand\" \"=m,m,m\")\n+  [(set (match_operand:DI 0 \"memory_operand\" \"=T,T,T\")\n \t(unspec:DI\n-\t  [(match_operand:DI 1 \"register_or_v9_zero_operand\" \"J,U,?*f\")]\n+\t  [(match_operand:DI 1 \"register_or_v9_zero_operand\" \"J,r,?*f\")]\n \t  UNSPEC_ATOMIC))]\n-  \"!TARGET_ARCH64\"\n+  \"TARGET_ARCH32\"\n   \"@\n    stx\\t%r1, %0\n    std\\t%1, %0"}, {"sha": "77aba28d51e4c2fa1a5bfd26c530cdddfe0b8fab", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f3877b2f7077963f9c688a4116e6d8abd0d212a6/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f3877b2f7077963f9c688a4116e6d8abd0d212a6/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=f3877b2f7077963f9c688a4116e6d8abd0d212a6", "patch": "@@ -1,3 +1,7 @@\n+2017-02-05  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gcc.target/sparc/20170205-1.c: New test.\n+\n 2017-02-03  John David Anglin  <danglin@gcc.gnu.org>\n \n \t* gfortran.dg/coarray_43.f90: Add \"-latomic\" option if"}, {"sha": "b2e4d3f1f08fe5d8c029a142dd5ee5e4fc9b2567", "filename": "gcc/testsuite/gcc.target/sparc/20170205-1.c", "status": "added", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f3877b2f7077963f9c688a4116e6d8abd0d212a6/gcc%2Ftestsuite%2Fgcc.target%2Fsparc%2F20170205-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f3877b2f7077963f9c688a4116e6d8abd0d212a6/gcc%2Ftestsuite%2Fgcc.target%2Fsparc%2F20170205-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fsparc%2F20170205-1.c?ref=f3877b2f7077963f9c688a4116e6d8abd0d212a6", "patch": "@@ -0,0 +1,39 @@\n+/* PR target/79363 */\r\n+/* Reported by John Paul Adrian Glaubitz <glaubitz@physik.fu-berlin.de> */\r\n+\r\n+/* { dg-do compile } */\r\n+/* { dg-options \"-O2 -fPIC -mcpu=v8\" } */\r\n+\r\n+struct d { long long h; };\r\n+\r\n+struct c { struct d *e; };\r\n+\r\n+int f, g;\r\n+\r\n+extern void bar (long long *);\r\n+extern int baz (long long *, int);\r\n+\r\n+void foo (struct c *desc)\r\n+{\r\n+  int begin, end, j;\r\n+  long long k, l, h;\r\n+  for (;;) {\r\n+    for (;;)\r\n+      break;\r\n+    for (;;) {\r\n+      j++;\r\n+      l = desc->e[j].h;\r\n+      for (;;) {\r\n+        bar(&l);\r\n+        end = h = begin / 2;\r\n+        if (baz(&h, g))\r\n+          begin = f;\r\n+        break;\r\n+      }\r\n+      if (end) {\r\n+        __atomic_store_n(&k, end, 5);\r\n+        break;\r\n+      }\r\n+    }\r\n+  }\r\n+}\r"}]}