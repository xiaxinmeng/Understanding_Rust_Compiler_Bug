{"sha": "65f0c5b308fc97731b8d34236c4852ac58db2d29", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjVmMGM1YjMwOGZjOTc3MzFiOGQzNDIzNmM0ODUyYWM1OGRiMmQyOQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2012-07-03T03:29:58Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2012-07-03T03:29:58Z"}, "message": "re PR c++/53816 (internal compiler error: tree check: expected field_decl, have identifier_node in fixed_type_or_null, at cp/class.c:6419, with -std=c++11 option)\n\n\tPR c++/53816\n\t* class.c (resolves_to_fixed_type_p): Check uses_template_parms\n\t(current_function_decl) instead of processing_template_decl.\n\nFrom-SVN: r189187", "tree": {"sha": "4cb39725abc86a626f4738b78602f2db1d5f0044", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4cb39725abc86a626f4738b78602f2db1d5f0044"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/65f0c5b308fc97731b8d34236c4852ac58db2d29", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/65f0c5b308fc97731b8d34236c4852ac58db2d29", "html_url": "https://github.com/Rust-GCC/gccrs/commit/65f0c5b308fc97731b8d34236c4852ac58db2d29", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/65f0c5b308fc97731b8d34236c4852ac58db2d29/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d695f91575f13ec3c2392eb192155c835de38f59", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d695f91575f13ec3c2392eb192155c835de38f59", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d695f91575f13ec3c2392eb192155c835de38f59"}], "stats": {"total": 29, "additions": 28, "deletions": 1}, "files": [{"sha": "f00ff70f8f10da8bcf57ecc552ee2c1f12b1bc82", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65f0c5b308fc97731b8d34236c4852ac58db2d29/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65f0c5b308fc97731b8d34236c4852ac58db2d29/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=65f0c5b308fc97731b8d34236c4852ac58db2d29", "patch": "@@ -1,5 +1,9 @@\n 2012-07-02  Jason Merrill  <jason@redhat.com>\n \n+\tPR c++/53816\n+\t* class.c (resolves_to_fixed_type_p): Check uses_template_parms\n+\t(current_function_decl) instead of processing_template_decl.\n+\n \tPR c++/53821\n \t* semantics.c (maybe_add_lambda_conv_op): Don't set\n \tDECL_INTERFACE_KNOWN."}, {"sha": "e70e6747b55b40ceb42a71072f9856bdea747289", "filename": "gcc/cp/class.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65f0c5b308fc97731b8d34236c4852ac58db2d29/gcc%2Fcp%2Fclass.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65f0c5b308fc97731b8d34236c4852ac58db2d29/gcc%2Fcp%2Fclass.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fclass.c?ref=65f0c5b308fc97731b8d34236c4852ac58db2d29", "patch": "@@ -6521,7 +6521,10 @@ resolves_to_fixed_type_p (tree instance, int* nonnull)\n   int cdtorp = 0;\n   tree fixed;\n \n-  if (processing_template_decl)\n+  /* processing_template_decl can be false in a template if we're in\n+     fold_non_dependent_expr, but we still want to suppress this check.  */\n+  if (current_function_decl\n+      && uses_template_parms (current_function_decl))\n     {\n       /* In a template we only care about the type of the result.  */\n       if (nonnull)"}, {"sha": "fc712849a65a4d282470c03a8933d6e285572c43", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65f0c5b308fc97731b8d34236c4852ac58db2d29/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65f0c5b308fc97731b8d34236c4852ac58db2d29/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=65f0c5b308fc97731b8d34236c4852ac58db2d29", "patch": "@@ -1,3 +1,8 @@\n+2012-07-02  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/53816\n+\t* g++.dg/template/ref6.C: New.\n+\n 2012-07-03  Oleg Endo  <olegendo@gcc.gnu.org>\n \n \tPR target/53568"}, {"sha": "2e1254ae35b27fc9294ee173034b1730527f6d7b", "filename": "gcc/testsuite/g++.dg/template/ref6.C", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65f0c5b308fc97731b8d34236c4852ac58db2d29/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fref6.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65f0c5b308fc97731b8d34236c4852ac58db2d29/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fref6.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fref6.C?ref=65f0c5b308fc97731b8d34236c4852ac58db2d29", "patch": "@@ -0,0 +1,15 @@\n+// PR c++/53816\n+\n+template <typename T>\n+struct S { int v () const; };\n+template <typename T>\n+struct V : public S<T> {};\n+struct U\n+{\n+  V<int> v;\n+  template<typename T>\n+  struct W\n+  {\n+    W (U const &x) { V<int> const &v = x.v; v.v(); }\n+  };\n+};"}]}