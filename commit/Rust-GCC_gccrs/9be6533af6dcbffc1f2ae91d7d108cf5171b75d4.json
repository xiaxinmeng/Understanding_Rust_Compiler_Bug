{"sha": "9be6533af6dcbffc1f2ae91d7d108cf5171b75d4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWJlNjUzM2FmNmRjYmZmYzFmMmFlOTFkN2QxMDhjZjUxNzFiNzVkNA==", "commit": {"author": {"name": "Richard Sandiford", "email": "rsandifo@redhat.com", "date": "2003-12-06T15:41:24Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2003-12-06T15:41:24Z"}, "message": "varasm.c (incorporeal_function_p): New.\n\n\t* varasm.c (incorporeal_function_p): New.\n\t(assemble_external): Use it as a filter.\n\t* config/mips/mips.c (mips_output_external): Don't check for builtin\n\tfunctions here.\n\nFrom-SVN: r74368", "tree": {"sha": "2f7d4aaae8d876c7e1cfbc3505e9a5ea875eadfc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2f7d4aaae8d876c7e1cfbc3505e9a5ea875eadfc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9be6533af6dcbffc1f2ae91d7d108cf5171b75d4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9be6533af6dcbffc1f2ae91d7d108cf5171b75d4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9be6533af6dcbffc1f2ae91d7d108cf5171b75d4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9be6533af6dcbffc1f2ae91d7d108cf5171b75d4/comments", "author": null, "committer": null, "parents": [{"sha": "e25c906af1f1022337e330728f3d46682216dbbc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e25c906af1f1022337e330728f3d46682216dbbc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e25c906af1f1022337e330728f3d46682216dbbc"}], "stats": {"total": 40, "additions": 36, "deletions": 4}, "files": [{"sha": "1854ccec736d61f0c268b124b448e1e21a59f6ae", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9be6533af6dcbffc1f2ae91d7d108cf5171b75d4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9be6533af6dcbffc1f2ae91d7d108cf5171b75d4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9be6533af6dcbffc1f2ae91d7d108cf5171b75d4", "patch": "@@ -1,3 +1,10 @@\n+2003-12-06  Richard Sandiford  <rsandifo@redhat.com>\n+\n+\t* varasm.c (incorporeal_function_p): New.\n+\t(assemble_external): Use it as a filter.\n+\t* config/mips/mips.c (mips_output_external): Don't check for builtin\n+\tfunctions here.\n+\n 2003-12-06  Richard Earnshaw  <reanrsha@arm.com>\n \n \t* arm.md (IOR (COMPARISON) (AND)): New define_splits."}, {"sha": "3a05443b82b4f2d3d931490900a03840f727f7aa", "filename": "gcc/config/mips/mips.c", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9be6533af6dcbffc1f2ae91d7d108cf5171b75d4/gcc%2Fconfig%2Fmips%2Fmips.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9be6533af6dcbffc1f2ae91d7d108cf5171b75d4/gcc%2Fconfig%2Fmips%2Fmips.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.c?ref=9be6533af6dcbffc1f2ae91d7d108cf5171b75d4", "patch": "@@ -5574,9 +5574,7 @@ mips_output_external (FILE *file ATTRIBUTE_UNUSED, tree decl, const char *name)\n       extern_head = p;\n     }\n \n-  if (TARGET_IRIX && mips_abi == ABI_32\n-      && TREE_CODE (decl) == FUNCTION_DECL\n-      && !DECL_BUILT_IN (decl))\n+  if (TARGET_IRIX && mips_abi == ABI_32 && TREE_CODE (decl) == FUNCTION_DECL)\n     {\n       p = (struct extern_list *) ggc_alloc (sizeof (struct extern_list));\n       p->next = extern_head;"}, {"sha": "5257810f6b6306252a0b786a789bab23a29489ca", "filename": "gcc/varasm.c", "status": "modified", "additions": 28, "deletions": 1, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9be6533af6dcbffc1f2ae91d7d108cf5171b75d4/gcc%2Fvarasm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9be6533af6dcbffc1f2ae91d7d108cf5171b75d4/gcc%2Fvarasm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvarasm.c?ref=9be6533af6dcbffc1f2ae91d7d108cf5171b75d4", "patch": "@@ -137,6 +137,9 @@ static HOST_WIDE_INT const_alias_set;\n \n static const char *strip_reg_name (const char *);\n static int contains_pointers_p (tree);\n+#ifdef ASM_OUTPUT_EXTERNAL\n+static bool incorporeal_function_p (tree);\n+#endif\n static void decode_addr_const (tree, struct addr_const *);\n static hashval_t const_desc_hash (const void *);\n static int const_desc_eq (const void *, const void *);\n@@ -1599,6 +1602,29 @@ contains_pointers_p (tree type)\n     }\n }\n \n+#ifdef ASM_OUTPUT_EXTERNAL\n+/* True if DECL is a function decl for which no out-of-line copy exists.\n+   It is assumed that DECL's assembler name has been set.  */\n+\n+static bool\n+incorporeal_function_p (tree decl)\n+{\n+  if (TREE_CODE (decl) == FUNCTION_DECL && DECL_BUILT_IN (decl))\n+    {\n+      const char *name;\n+\n+      if (DECL_BUILT_IN_CLASS (decl) == BUILT_IN_NORMAL\n+\t  && DECL_FUNCTION_CODE (decl) == BUILT_IN_ALLOCA)\n+\treturn true;\n+\n+      name = IDENTIFIER_POINTER (DECL_ASSEMBLER_NAME (decl));\n+      if (strncmp (name, \"__builtin_\", strlen (\"__builtin_\")) == 0)\n+\treturn true;\n+    }\n+  return false;\n+}\n+#endif\n+\n /* Output something to declare an external symbol to the assembler.\n    (Most assemblers don't need this, so we normally output nothing.)\n    Do nothing if DECL is not external.  */\n@@ -1619,7 +1645,8 @@ assemble_external (tree decl ATTRIBUTE_UNUSED)\n       rtx rtl = DECL_RTL (decl);\n \n       if (GET_CODE (rtl) == MEM && GET_CODE (XEXP (rtl, 0)) == SYMBOL_REF\n-\t  && ! SYMBOL_REF_USED (XEXP (rtl, 0)))\n+\t  && !SYMBOL_REF_USED (XEXP (rtl, 0))\n+\t  && !incorporeal_function_p (decl))\n \t{\n \t  /* Some systems do require some output.  */\n \t  SYMBOL_REF_USED (XEXP (rtl, 0)) = 1;"}]}