{"sha": "d42ff1d3b62521829d90e5b972baba2a0339e2bf", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDQyZmYxZDNiNjI1MjE4MjlkOTBlNWI5NzJiYWJhMmEwMzM5ZTJiZg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2020-03-11T17:35:13Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2020-03-11T17:35:13Z"}, "message": "pdp11: Fix handling of common (local and global) vars [PR94134]\n\nAs mentioned in the PR, the generic code decides to put the a variable into\nlcomm_section, which is a NOSWITCH section and thus the generic code doesn't\nswitch into a particular section before using\nASM_OUTPUT{_ALIGNED{,_DECL}_}_LOCAL, on many targets that results just in\n.lcomm (or for non-local .comm) directives which don't need a switch to some\nsection, other targets put switch_to_section (bss_section) at the start of\nthat macro.\npdp11 doesn't do that (and doesn't have bss_section), and so emits the\nlcomm/comm variables in whatever section is current (it has only .text/.data\nand for DEC assembler rodata).\n\nThe following patch fixes that by putting it always into data section, and\nadditionally avoids emitting an empty line in the assembly for the lcomm\nvars.\n\n2020-03-11  Jakub Jelinek  <jakub@redhat.com>\n\n\tPR target/94134\n\t* config/pdp11/pdp11.c (pdp11_asm_output_var): Call switch_to_section\n\tat the start to switch to data section.  Don't print extra newline if\n\t.globl directive has not been emitted.\n\n\t* gcc.c-torture/execute/pr94134.c: New test.", "tree": {"sha": "b8ba19dc256c9ec4cf86ad40db785ab88557fa6f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b8ba19dc256c9ec4cf86ad40db785ab88557fa6f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d42ff1d3b62521829d90e5b972baba2a0339e2bf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d42ff1d3b62521829d90e5b972baba2a0339e2bf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d42ff1d3b62521829d90e5b972baba2a0339e2bf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d42ff1d3b62521829d90e5b972baba2a0339e2bf/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5fea87cc7902c7c03c0d3c8cf7784cd99db8315d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5fea87cc7902c7c03c0d3c8cf7784cd99db8315d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5fea87cc7902c7c03c0d3c8cf7784cd99db8315d"}], "stats": {"total": 29, "additions": 28, "deletions": 1}, "files": [{"sha": "818cf19e886064380385de643f5bfef06dd1693c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d42ff1d3b62521829d90e5b972baba2a0339e2bf/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d42ff1d3b62521829d90e5b972baba2a0339e2bf/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d42ff1d3b62521829d90e5b972baba2a0339e2bf", "patch": "@@ -1,3 +1,10 @@\n+2020-03-11  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/94134\n+\t* config/pdp11/pdp11.c (pdp11_asm_output_var): Call switch_to_section\n+\tat the start to switch to data section.  Don't print extra newline if\n+\t.globl directive has not been emitted.\n+\n 2020-03-11  Richard Biener  <rguenther@suse.de>\n \n \t* match.pd ((T *)(ptr - ptr-cst) -> &MEM[ptr + -ptr-cst]):"}, {"sha": "25590be2b5c03d7f8ad0898a15ea49ec8f33b4b7", "filename": "gcc/config/pdp11/pdp11.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d42ff1d3b62521829d90e5b972baba2a0339e2bf/gcc%2Fconfig%2Fpdp11%2Fpdp11.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d42ff1d3b62521829d90e5b972baba2a0339e2bf/gcc%2Fconfig%2Fpdp11%2Fpdp11.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpdp11%2Fpdp11.c?ref=d42ff1d3b62521829d90e5b972baba2a0339e2bf", "patch": "@@ -743,6 +743,7 @@ void\n pdp11_asm_output_var (FILE *file, const char *name, int size,\n \t\t      int align, bool global)\n {\n+  switch_to_section (data_section);\n   if (align > 8)\n     fprintf (file, \"\\t.even\\n\");\n   if (TARGET_DEC_ASM)\n@@ -763,8 +764,8 @@ pdp11_asm_output_var (FILE *file, const char *name, int size,\n \t{\n \t  fprintf (file, \".globl \");\n \t  assemble_name (file, name);\n+\t  fprintf (file, \"\\n\");\n \t}\n-      fprintf (file, \"\\n\");\n       assemble_name (file, name);\n       fputs (\":\", file);\n       ASM_OUTPUT_SKIP (file, size);"}, {"sha": "ba4cd147d8c07c9bf7ef350c5f87a7757fb7490e", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d42ff1d3b62521829d90e5b972baba2a0339e2bf/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d42ff1d3b62521829d90e5b972baba2a0339e2bf/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=d42ff1d3b62521829d90e5b972baba2a0339e2bf", "patch": "@@ -1,3 +1,8 @@\n+2020-03-11  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/94134\n+\t* gcc.c-torture/execute/pr94134.c: New test.\n+\n 2020-03-11  Kito Cheng  <kito.cheng@sifive.com>\n \n \t* gcc.target/riscv/interrupt-2.c: Update testcase and expected output."}, {"sha": "b1b44c3b184d851e4ffd6f7e3007a05ad6d55e16", "filename": "gcc/testsuite/gcc.c-torture/execute/pr94134.c", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d42ff1d3b62521829d90e5b972baba2a0339e2bf/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr94134.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d42ff1d3b62521829d90e5b972baba2a0339e2bf/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr94134.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr94134.c?ref=d42ff1d3b62521829d90e5b972baba2a0339e2bf", "patch": "@@ -0,0 +1,14 @@\n+/* PR target/94134 */\n+\n+static volatile int a = 0;\n+static volatile int b = 1;\n+\n+int\n+main ()\n+{\n+  a++;\n+  b++;\n+  if (a != 1 || b != 2)\n+    __builtin_abort ();\n+  return 0;\n+}"}]}