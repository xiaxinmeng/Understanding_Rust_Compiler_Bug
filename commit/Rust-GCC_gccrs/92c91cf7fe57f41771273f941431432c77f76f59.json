{"sha": "92c91cf7fe57f41771273f941431432c77f76f59", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTJjOTFjZjdmZTU3ZjQxNzcxMjczZjk0MTQzMTQzMmM3N2Y3NmY1OQ==", "commit": {"author": {"name": "Andrew Haley", "email": "aph@redhat.com", "date": "2005-02-21T18:19:01Z"}, "committer": {"name": "Tom Tromey", "email": "tromey@gcc.gnu.org", "date": "2005-02-21T18:19:01Z"}, "message": "Makefile.in: Rebuilt.\n\n2005-02-21  Andrew Haley  <aph@redhat.com>\n\n\t* Makefile.in: Rebuilt.\n\t* Makefile.am (nat_source_files): Added natLogger.cc.\n\t* java/util/logging/natLogger.cc: New file.\n\t* java/util/logging/Logger.java (getCallerStackFrame): Now\n\tnative.\n\nFrom-SVN: r95338", "tree": {"sha": "57ba42b93a03c563ee94becf0073ad2559944c33", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/57ba42b93a03c563ee94becf0073ad2559944c33"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/92c91cf7fe57f41771273f941431432c77f76f59", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/92c91cf7fe57f41771273f941431432c77f76f59", "html_url": "https://github.com/Rust-GCC/gccrs/commit/92c91cf7fe57f41771273f941431432c77f76f59", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/92c91cf7fe57f41771273f941431432c77f76f59/comments", "author": {"login": "theRealAph", "id": 254637, "node_id": "MDQ6VXNlcjI1NDYzNw==", "avatar_url": "https://avatars.githubusercontent.com/u/254637?v=4", "gravatar_id": "", "url": "https://api.github.com/users/theRealAph", "html_url": "https://github.com/theRealAph", "followers_url": "https://api.github.com/users/theRealAph/followers", "following_url": "https://api.github.com/users/theRealAph/following{/other_user}", "gists_url": "https://api.github.com/users/theRealAph/gists{/gist_id}", "starred_url": "https://api.github.com/users/theRealAph/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/theRealAph/subscriptions", "organizations_url": "https://api.github.com/users/theRealAph/orgs", "repos_url": "https://api.github.com/users/theRealAph/repos", "events_url": "https://api.github.com/users/theRealAph/events{/privacy}", "received_events_url": "https://api.github.com/users/theRealAph/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d0a68934cfbcc6d52f54dcb69f146a628fcb6104", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d0a68934cfbcc6d52f54dcb69f146a628fcb6104", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d0a68934cfbcc6d52f54dcb69f146a628fcb6104"}], "stats": {"total": 132, "additions": 96, "deletions": 36}, "files": [{"sha": "7d869d5a2b21aafa5ed22cecf0fdd7734c386c87", "filename": "libjava/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92c91cf7fe57f41771273f941431432c77f76f59/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92c91cf7fe57f41771273f941431432c77f76f59/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=92c91cf7fe57f41771273f941431432c77f76f59", "patch": "@@ -1,3 +1,11 @@\n+2005-02-21  Andrew Haley  <aph@redhat.com>\n+\n+\t* Makefile.in: Rebuilt.\n+\t* Makefile.am (nat_source_files): Added natLogger.cc.\n+\t* java/util/logging/natLogger.cc: New file.\n+\t* java/util/logging/Logger.java (getCallerStackFrame): Now\n+\tnative.\n+\n 2005-02-21  Andreas Tobler  <a.tobler@schweiz.ch>\n \n \t* Makefile.am (all_property_files): Remove left over."}, {"sha": "ed24da3ae0a6f5f0d166dcd44d09748415e828d3", "filename": "libjava/Makefile.am", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92c91cf7fe57f41771273f941431432c77f76f59/libjava%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92c91cf7fe57f41771273f941431432c77f76f59/libjava%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FMakefile.am?ref=92c91cf7fe57f41771273f941431432c77f76f59", "patch": "@@ -3720,6 +3720,7 @@ java/nio/natDirectByteBufferImpl.cc \\\n java/text/natCollator.cc \\\n java/util/natResourceBundle.cc \\\n java/util/natVMTimeZone.cc \\\n+java/util/logging/natLogger.cc \\\n java/util/zip/natDeflater.cc \\\n java/util/zip/natInflater.cc\n "}, {"sha": "1d8d2616ca831de3765c62e35f400a99bd0d637f", "filename": "libjava/Makefile.in", "status": "modified", "additions": 30, "deletions": 22, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92c91cf7fe57f41771273f941431432c77f76f59/libjava%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92c91cf7fe57f41771273f941431432c77f76f59/libjava%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FMakefile.in?ref=92c91cf7fe57f41771273f941431432c77f76f59", "patch": "@@ -370,21 +370,22 @@ am__libgcj0_convenience_la_SOURCES_DIST = prims.cc jni.cc exception.cc \\\n \tjava/net/natInetAddress.cc java/nio/channels/natChannels.cc \\\n \tjava/nio/natDirectByteBufferImpl.cc java/text/natCollator.cc \\\n \tjava/util/natResourceBundle.cc java/util/natVMTimeZone.cc \\\n-\tjava/util/zip/natDeflater.cc java/util/zip/natInflater.cc \\\n-\tjava/lang/dtoa.c java/lang/k_rem_pio2.c java/lang/s_tan.c \\\n-\tjava/lang/e_acos.c java/lang/k_sin.c java/lang/strtod.c \\\n-\tjava/lang/e_asin.c java/lang/k_tan.c java/lang/w_acos.c \\\n-\tjava/lang/e_atan2.c java/lang/mprec.c java/lang/w_asin.c \\\n-\tjava/lang/e_exp.c java/lang/s_atan.c java/lang/w_atan2.c \\\n-\tjava/lang/e_fmod.c java/lang/s_ceil.c java/lang/w_exp.c \\\n-\tjava/lang/e_log.c java/lang/s_copysign.c java/lang/w_fmod.c \\\n-\tjava/lang/e_pow.c java/lang/s_cos.c java/lang/w_log.c \\\n-\tjava/lang/e_rem_pio2.c java/lang/s_fabs.c java/lang/w_pow.c \\\n-\tjava/lang/e_remainder.c java/lang/s_floor.c \\\n-\tjava/lang/w_remainder.c java/lang/e_scalb.c java/lang/s_rint.c \\\n-\tjava/lang/w_sqrt.c java/lang/e_sqrt.c java/lang/s_scalbn.c \\\n-\tjava/lang/sf_rint.c java/lang/k_cos.c java/lang/s_sin.c \\\n-\tjava/lang/sf_fabs.c java/lang/Class.java java/lang/Object.java \\\n+\tjava/util/logging/natLogger.cc java/util/zip/natDeflater.cc \\\n+\tjava/util/zip/natInflater.cc java/lang/dtoa.c \\\n+\tjava/lang/k_rem_pio2.c java/lang/s_tan.c java/lang/e_acos.c \\\n+\tjava/lang/k_sin.c java/lang/strtod.c java/lang/e_asin.c \\\n+\tjava/lang/k_tan.c java/lang/w_acos.c java/lang/e_atan2.c \\\n+\tjava/lang/mprec.c java/lang/w_asin.c java/lang/e_exp.c \\\n+\tjava/lang/s_atan.c java/lang/w_atan2.c java/lang/e_fmod.c \\\n+\tjava/lang/s_ceil.c java/lang/w_exp.c java/lang/e_log.c \\\n+\tjava/lang/s_copysign.c java/lang/w_fmod.c java/lang/e_pow.c \\\n+\tjava/lang/s_cos.c java/lang/w_log.c java/lang/e_rem_pio2.c \\\n+\tjava/lang/s_fabs.c java/lang/w_pow.c java/lang/e_remainder.c \\\n+\tjava/lang/s_floor.c java/lang/w_remainder.c \\\n+\tjava/lang/e_scalb.c java/lang/s_rint.c java/lang/w_sqrt.c \\\n+\tjava/lang/e_sqrt.c java/lang/s_scalbn.c java/lang/sf_rint.c \\\n+\tjava/lang/k_cos.c java/lang/s_sin.c java/lang/sf_fabs.c \\\n+\tjava/lang/Class.java java/lang/Object.java \\\n \tjava/lang/AbstractMethodError.java \\\n \tjava/lang/ArithmeticException.java \\\n \tjava/lang/ArrayIndexOutOfBoundsException.java \\\n@@ -2642,7 +2643,8 @@ am__objects_6 = gnu/gcj/natCore.lo \\\n \tjava/net/natInetAddress.lo java/nio/channels/natChannels.lo \\\n \tjava/nio/natDirectByteBufferImpl.lo java/text/natCollator.lo \\\n \tjava/util/natResourceBundle.lo java/util/natVMTimeZone.lo \\\n-\tjava/util/zip/natDeflater.lo java/util/zip/natInflater.lo\n+\tjava/util/logging/natLogger.lo java/util/zip/natDeflater.lo \\\n+\tjava/util/zip/natInflater.lo\n am__objects_7 = java/lang/dtoa.lo java/lang/k_rem_pio2.lo \\\n \tjava/lang/s_tan.lo java/lang/e_acos.lo java/lang/k_sin.lo \\\n \tjava/lang/strtod.lo java/lang/e_asin.lo java/lang/k_tan.lo \\\n@@ -8104,6 +8106,7 @@ java/nio/natDirectByteBufferImpl.cc \\\n java/text/natCollator.cc \\\n java/util/natResourceBundle.cc \\\n java/util/natVMTimeZone.cc \\\n+java/util/logging/natLogger.cc \\\n java/util/zip/natDeflater.cc \\\n java/util/zip/natInflater.cc\n \n@@ -8960,6 +8963,14 @@ java/util/natResourceBundle.lo: java/util/$(am__dirstamp) \\\n \tjava/util/$(DEPDIR)/$(am__dirstamp)\n java/util/natVMTimeZone.lo: java/util/$(am__dirstamp) \\\n \tjava/util/$(DEPDIR)/$(am__dirstamp)\n+java/util/logging/$(am__dirstamp):\n+\t@$(mkdir_p) java/util/logging\n+\t@: > java/util/logging/$(am__dirstamp)\n+java/util/logging/$(DEPDIR)/$(am__dirstamp):\n+\t@$(mkdir_p) java/util/logging/$(DEPDIR)\n+\t@: > java/util/logging/$(DEPDIR)/$(am__dirstamp)\n+java/util/logging/natLogger.lo: java/util/logging/$(am__dirstamp) \\\n+\tjava/util/logging/$(DEPDIR)/$(am__dirstamp)\n java/util/zip/$(am__dirstamp):\n \t@$(mkdir_p) java/util/zip\n \t@: > java/util/zip/$(am__dirstamp)\n@@ -9488,12 +9499,6 @@ java/util/VMTimeZone.lo: java/util/$(am__dirstamp) \\\n \tjava/util/$(DEPDIR)/$(am__dirstamp)\n java/util/WeakHashMap.lo: java/util/$(am__dirstamp) \\\n \tjava/util/$(DEPDIR)/$(am__dirstamp)\n-java/util/logging/$(am__dirstamp):\n-\t@$(mkdir_p) java/util/logging\n-\t@: > java/util/logging/$(am__dirstamp)\n-java/util/logging/$(DEPDIR)/$(am__dirstamp):\n-\t@$(mkdir_p) java/util/logging/$(DEPDIR)\n-\t@: > java/util/logging/$(DEPDIR)/$(am__dirstamp)\n java/util/logging/ConsoleHandler.lo:  \\\n \tjava/util/logging/$(am__dirstamp) \\\n \tjava/util/logging/$(DEPDIR)/$(am__dirstamp)\n@@ -20036,6 +20041,8 @@ mostlyclean-compile:\n \t-rm -f java/util/logging/StreamHandler.lo\n \t-rm -f java/util/logging/XMLFormatter.$(OBJEXT)\n \t-rm -f java/util/logging/XMLFormatter.lo\n+\t-rm -f java/util/logging/natLogger.$(OBJEXT)\n+\t-rm -f java/util/logging/natLogger.lo\n \t-rm -f java/util/natResourceBundle.$(OBJEXT)\n \t-rm -f java/util/natResourceBundle.lo\n \t-rm -f java/util/natVMTimeZone.$(OBJEXT)\n@@ -23821,6 +23828,7 @@ distclean-compile:\n @AMDEP_TRUE@@am__include@ @am__quote@java/util/logging/$(DEPDIR)/SocketHandler.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@java/util/logging/$(DEPDIR)/StreamHandler.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@java/util/logging/$(DEPDIR)/XMLFormatter.Plo@am__quote@\n+@AMDEP_TRUE@@am__include@ @am__quote@java/util/logging/$(DEPDIR)/natLogger.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@java/util/prefs/$(DEPDIR)/AbstractPreferences.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@java/util/prefs/$(DEPDIR)/BackingStoreException.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@java/util/prefs/$(DEPDIR)/InvalidPreferencesFormatException.Plo@am__quote@"}, {"sha": "29635558598bcc986bec7f6c01809687a58fab01", "filename": "libjava/java/util/logging/Logger.java", "status": "modified", "additions": 2, "deletions": 14, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92c91cf7fe57f41771273f941431432c77f76f59/libjava%2Fjava%2Futil%2Flogging%2FLogger.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92c91cf7fe57f41771273f941431432c77f76f59/libjava%2Fjava%2Futil%2Flogging%2FLogger.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Futil%2Flogging%2FLogger.java?ref=92c91cf7fe57f41771273f941431432c77f76f59", "patch": "@@ -1,5 +1,5 @@\n /* Logger.java -- a class for logging messages\n-   Copyright (C) 2002, 2004 Free Software Foundation, Inc.\n+   Copyright (C) 2002, 2004, 2005 Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -1169,17 +1169,5 @@ public synchronized void setParent(Logger parent)\n    * That should be the initial caller of a logging method.\n    * @return caller of the initial looging method\n    */\n-  private StackTraceElement getCallerStackFrame()\n-  {\n-    Throwable t = new Throwable();\n-    StackTraceElement[] stackTrace = t.getStackTrace();\n-    int index = 0;\n-    // skip to stackentries until this class\n-    while(!stackTrace[index].getClassName().equals(getClass().getName())){index++;}\n-    // skip the stackentries of this class\n-    while(stackTrace[index].getClassName().equals(getClass().getName())){index++;}\n-\n-    return stackTrace[index];\n-  }\n-  \n+  private native StackTraceElement getCallerStackFrame();\n }"}, {"sha": "15d1ab70efd0c1a78f5cc8ce9c0f98dfac69f3a3", "filename": "libjava/java/util/logging/natLogger.cc", "status": "added", "additions": 55, "deletions": 0, "changes": 55, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92c91cf7fe57f41771273f941431432c77f76f59/libjava%2Fjava%2Futil%2Flogging%2FnatLogger.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92c91cf7fe57f41771273f941431432c77f76f59/libjava%2Fjava%2Futil%2Flogging%2FnatLogger.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Futil%2Flogging%2FnatLogger.cc?ref=92c91cf7fe57f41771273f941431432c77f76f59", "patch": "@@ -0,0 +1,55 @@\n+// natLogger.cc - Native part of Logger class.\n+\n+/* Copyright (C) 1998, 1999, 2000, 2001  Free Software Foundation\n+\n+   This Logger is part of libgcj.\n+\n+This software is copyrighted work licensed under the terms of the\n+Libgcj License.  Please consult the Logger \"LIBGCJ_LICENSE\" for\n+details.  */\n+\n+#include <config.h>\n+#include <platform.h>\n+\n+#include <string.h>\n+\n+#pragma implementation \"Logger.h\"\n+\n+#include <gcj/cni.h>\n+#include <jvm.h>\n+\n+\n+#include <java/lang/Object.h>\n+#include <java/lang/Class.h>\n+#include <java/util/logging/Logger.h>\n+#include <java/lang/StackTraceElement.h>\n+#include <java/lang/ArrayIndexOutOfBoundsException.h>\n+\n+java::lang::StackTraceElement* \n+java::util::logging::Logger::getCallerStackFrame ()\n+{\n+  gnu::gcj::runtime::StackTrace *t \n+    = new gnu::gcj::runtime::StackTrace(4);\n+  java::lang::Class *klass = NULL;\n+  int i = 2;\n+  try\n+    {\n+      // skip until this class\n+      while ((klass = t->classAt (i)) != getClass())\n+\ti++;\n+      // skip the stackentries of this class\n+      while ((klass = t->classAt (i)) == getClass() || klass == NULL)\n+\ti++;\n+    }\n+  catch (::java::lang::ArrayIndexOutOfBoundsException *e)\n+    {\n+      // FIXME: RuntimeError\n+    }\n+\n+  java::lang::StackTraceElement *e \n+    = new java::lang::StackTraceElement\n+    (JvNewStringUTF (\"\"), 0, \n+     klass->getName(), t->methodAt(i), false);\n+\n+  return e;\n+}"}]}