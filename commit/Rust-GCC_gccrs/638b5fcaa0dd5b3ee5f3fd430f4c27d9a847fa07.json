{"sha": "638b5fcaa0dd5b3ee5f3fd430f4c27d9a847fa07", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjM4YjVmY2FhMGRkNWIzZWU1ZjNmZDQzMGY0YzI3ZDlhODQ3ZmEwNw==", "commit": {"author": {"name": "Richard Earnshaw", "email": "rearnsha@gcc.gnu.org", "date": "2019-01-16T15:22:08Z"}, "committer": {"name": "Richard Earnshaw", "email": "rearnsha@gcc.gnu.org", "date": "2019-01-16T15:22:08Z"}, "message": "__builtin_<add/sub>_overflow issues on AArch64 (redux) (cont)\n\nAnd the ChangeLog for PR target/86891 fix.\n\nFrom-SVN: r267972", "tree": {"sha": "b12c84375da1d94a4bb7f8e1ee112aabf7c6bbc6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b12c84375da1d94a4bb7f8e1ee112aabf7c6bbc6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/638b5fcaa0dd5b3ee5f3fd430f4c27d9a847fa07", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/638b5fcaa0dd5b3ee5f3fd430f4c27d9a847fa07", "html_url": "https://github.com/Rust-GCC/gccrs/commit/638b5fcaa0dd5b3ee5f3fd430f4c27d9a847fa07", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/638b5fcaa0dd5b3ee5f3fd430f4c27d9a847fa07/comments", "author": null, "committer": null, "parents": [{"sha": "f7343f20c56b54e11d965d34e5f88be7ceaf095b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f7343f20c56b54e11d965d34e5f88be7ceaf095b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f7343f20c56b54e11d965d34e5f88be7ceaf095b"}], "stats": {"total": 29, "additions": 29, "deletions": 0}, "files": [{"sha": "78983572b236699225b0986dca16789001651090", "filename": "gcc/ChangeLog", "status": "modified", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/638b5fcaa0dd5b3ee5f3fd430f4c27d9a847fa07/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/638b5fcaa0dd5b3ee5f3fd430f4c27d9a847fa07/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=638b5fcaa0dd5b3ee5f3fd430f4c27d9a847fa07", "patch": "@@ -1,3 +1,32 @@\n+2019-01-16  Richard Earnshaw  <rearnsha@arm.com>\n+\n+\tPR target/86891\n+\t* config/aarch64/aarch64-modes.def: Add comment about how the carry\n+\tbit is set by add and compare.\n+\t(CC_ADC): New CC_MODE.\n+\t* config/aarch64/aarch64.c (aarch64_select_cc_mode): Use variables\n+\tto cache the code and mode of X.  Adjust the shape of a CC_Cmode\n+\tcomparison.  Add detection for CC_ADCmode.\n+\t(aarch64_get_condition_code_1): Update code support for CC_Cmode.  Add\n+\tCC_ADCmode.\n+\t* config/aarch64/aarch64.md (uaddv<mode>4): Use LTU with CCmode.\n+\t(uaddvti4): Comparison result is in CC_ADCmode and the condition is GEU.\n+\t(add<mode>3_compareC_cconly_imm): Delete.  Merge into...\n+\t(add<mode>3_compareC_cconly): ... this.  Restructure the comparison\n+\tto eliminate the need for zero-extending the operands.\n+\t(add<mode>3_compareC_imm): Delete.  Merge into ...\n+\t(add<mode>3_compareC): ... this.  Restructure the comparison to\n+\teliminate the need for zero-extending the operands.\n+\t(add<mode>3_carryin): Use LTU for the overflow detection.\n+\t(add<mode>3_carryinC): Use CC_ADCmode for the result of the carry out.\n+\tReexpress comparison for overflow.\n+\t(add<mode>3_carryinC_zero): Update for change to add<mode>3_carryinC.\n+\t(add<mode>3_carryinC): Likewise.\n+\t(add<mode>3_carryinV): Use LTU for carry between partials.\n+\t* config/aarch64/predicates.md (aarch64_carry_operation): Update\n+\thandling of CC_Cmode and add CC_ADCmode.\n+\t(aarch64_borrow_operation): Likewise.\n+\n 2019-01-16  Tamar Christina  <tamar.christina@arm.com>\n \n \t* config/arm/arm-protos.h (neon_vcmla_lane_prepare_operands): Remove patternmode."}]}