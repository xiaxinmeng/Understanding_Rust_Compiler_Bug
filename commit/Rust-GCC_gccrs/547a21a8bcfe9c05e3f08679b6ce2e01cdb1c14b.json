{"sha": "547a21a8bcfe9c05e3f08679b6ce2e01cdb1c14b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTQ3YTIxYThiY2ZlOWMwNWUzZjA4Njc5YjZjZTJlMDFjZGIxYzE0Yg==", "commit": {"author": {"name": "Bruce Korb", "email": "bkorb@gnu.org", "date": "2000-02-10T15:00:06Z"}, "committer": {"name": "Bruce Korb", "email": "korbb@gcc.gnu.org", "date": "2000-02-10T15:00:06Z"}, "message": "old fixincludes coup des gras\n\nFrom-SVN: r31892", "tree": {"sha": "675a506bf522e7d8b2843a88bddcff83253c6a4d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/675a506bf522e7d8b2843a88bddcff83253c6a4d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/547a21a8bcfe9c05e3f08679b6ce2e01cdb1c14b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/547a21a8bcfe9c05e3f08679b6ce2e01cdb1c14b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/547a21a8bcfe9c05e3f08679b6ce2e01cdb1c14b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/547a21a8bcfe9c05e3f08679b6ce2e01cdb1c14b/comments", "author": {"login": "brkorb", "id": 1242936, "node_id": "MDQ6VXNlcjEyNDI5MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1242936?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brkorb", "html_url": "https://github.com/brkorb", "followers_url": "https://api.github.com/users/brkorb/followers", "following_url": "https://api.github.com/users/brkorb/following{/other_user}", "gists_url": "https://api.github.com/users/brkorb/gists{/gist_id}", "starred_url": "https://api.github.com/users/brkorb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brkorb/subscriptions", "organizations_url": "https://api.github.com/users/brkorb/orgs", "repos_url": "https://api.github.com/users/brkorb/repos", "events_url": "https://api.github.com/users/brkorb/events{/privacy}", "received_events_url": "https://api.github.com/users/brkorb/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "89b80b3ecec4e1044b5fc9ecd524606edabedba2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/89b80b3ecec4e1044b5fc9ecd524606edabedba2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/89b80b3ecec4e1044b5fc9ecd524606edabedba2"}], "stats": {"total": 3499, "additions": 10, "deletions": 3489}, "files": [{"sha": "ab19ab15de3074bfcccf9b845e8eddae9cc73031", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/547a21a8bcfe9c05e3f08679b6ce2e01cdb1c14b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/547a21a8bcfe9c05e3f08679b6ce2e01cdb1c14b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=547a21a8bcfe9c05e3f08679b6ce2e01cdb1c14b", "patch": "@@ -1,3 +1,13 @@\n+2000-02-09  Bruce Korb  <bkorb@gnu.org>\n+\n+\t* gcc/fixincludes:  ** DELETED **\n+\t* gcc/fixcpp:  ** DELETED **\n+\t* gcc/fixinc-nt.sed:  ** DELETED **\n+\t* gcc/just-fixinc:  ** DELETED **\n+\t* gcc/Makefile.in:  Removed out-dated commentary\n+\t* gcc/configure.in: Removed fast-fixincludes disablement.\n+\t* MAINTAINERS(Ian Taylor) moved to \"Write after approval\" group.\n+\n 2000-02-09  Clinton Popetz  <cpopetz@cygnus.com>\n \t* function.c (thread_prologue_and_epilogue_insns): Uncomment\n \tlast change."}, {"sha": "f231557ee5712b9b4ce7cdc85a25275e9fdd5d58", "filename": "gcc/Makefile.in", "status": "modified", "additions": 0, "deletions": 20, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/547a21a8bcfe9c05e3f08679b6ce2e01cdb1c14b/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/547a21a8bcfe9c05e3f08679b6ce2e01cdb1c14b/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=547a21a8bcfe9c05e3f08679b6ce2e01cdb1c14b", "patch": "@@ -2182,26 +2182,6 @@ fixinc.sh: $(FIXINCSRCDIR)/mkfixinc.sh $(FIXINCSRCDIR)/fixincl.c \\\n \texport MAKE srcdir ; \\\n \tcd ./fixinc; $(SHELL) $${srcdir}/mkfixinc.sh $(target)\n \n-##stmp-fixinc: $(FIXINCLUDES) gsyslimits.h\n-##\trm -rf include\n-##\tmkdir include\n-##\tif [ x$(FIXINCLUDES) != xMakefile.in ]; \\\n-##\tthen \\\n-##\t  for dir in $(SYSTEM_HEADER_DIR) $(OTHER_FIXINCLUDES_DIRS); do \\\n-##\t    if [ -d $$dir ]; \\\n-##\t    then \\\n-##\t      $(SHELL) $(srcdir)/$(FIXINCLUDES) include $$dir; \\\n-##\t    else true; fi; \\\n-##\t  done; \\\n-##\t  if [ x$(INSTALL_ASSERT_H) != x ] ; \\\n-##\t  then \\\n-##\t    rm -f include/assert.h; \\\n-##\t    cp $(srcdir)/assert.h include/assert.h; \\\n-##\t    chmod a+r include/assert.h; \\\n-##\t  fi \\\n-##\telse true; \\\n-##\tfi\n-\n # Build fixed copies of system files.\n stmp-fixinc: fixinc.sh gsyslimits.h\n \trm -rf include; mkdir include"}, {"sha": "074e6455cbe9dbe78ecfe0e251e8b58765b331fb", "filename": "gcc/configure.in", "status": "modified", "additions": 0, "deletions": 15, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/547a21a8bcfe9c05e3f08679b6ce2e01cdb1c14b/gcc%2Fconfigure.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/547a21a8bcfe9c05e3f08679b6ce2e01cdb1c14b/gcc%2Fconfigure.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure.in?ref=547a21a8bcfe9c05e3f08679b6ce2e01cdb1c14b", "patch": "@@ -236,15 +236,6 @@ if test x$enable_c_cpplib != xno; then\n   cpp_main=cppmain\n fi)\n \n-# Disable fast fixincludes\n-AC_ARG_ENABLE(fast-fixincludes,\n-[  --disable-fast-fixincludes\n-                         Disable the new fast fixincludes.\n-                         Run the old fixincludes script unconditionally],\n-if test x$enable_fast_fixincludes = xno ; then\n-  cp $srcdir/fixincludes ./fixinc.sh\n-fi)\n-\n # Enable Multibyte Characters for C/C++\n AC_ARG_ENABLE(c-mbchar,\n [  --enable-c-mbchar       Enable multibyte characters for C and C++.],\n@@ -1132,28 +1123,24 @@ changequote([,])dnl\n \t\txmake_file=pa/x-pa-mpeix \n \t\techo \"You must use gas. Assuming it is already installed.\" \n \t\tinstall_headers_dir=install-headers-tar\n-\t\tfixincludes=Makefile.in\n \t\tuse_collect2=yes \n \t\t;; \n \ti370-*-opened*)\t\t\t # IBM 360/370/390 Architecture\n \t\txm_file=i370/xm-oe.h\n \t\ttm_file=i370/oe.h\n \t\txmake_file=i370/x-oe\n \t\ttmake_file=i370/t-oe\n-\t\tfixincludes=Makefile.in # Headers are wierd, don't mess with\n \t\t;;\n \ti370-*-mvs*)\n \t\txm_file=i370/xm-mvs.h\n \t\ttm_file=i370/mvs.h\n \t\ttmake_file=i370/t-mvs\n-\t\tfixincludes=Makefile.in # Headers are wierd, don't mess with\n \t\t;;\n \ti370-*-linux*)\n \t\txm_file=\"xm-linux.h i370/xm-linux.h\"\n \t\txmake_file=x-linux\n \t\ttm_file=\"i370/linux.h ${tm_file}\"\n \t\ttmake_file=\"t-linux i370/t-linux\"\n-\t\tfixincludes=Makefile.in # The headers are ok already.\n \t\t# broken_install=yes\n \t\textra_parts=\"crtbegin.o crtbeginS.o crtend.o crtendS.o\"\n \t\t# extra_parts=\"crtbegin.o crtend.o\"\n@@ -1295,7 +1282,6 @@ changequote([,])dnl\n \t\txmake_file=i386/x-beos\n \t\textra_objs=winnt.o\n \t\textra_parts='crtbegin.o crtend.o'\n-\t\tfixincludes=Makefile.in\n \t\t;;\n changequote(,)dnl\n \ti[34567]86-*-bsdi* | i[34567]86-*-bsd386*)\n@@ -4821,7 +4807,6 @@ AC_SUBST(extra_objs)\n AC_SUBST(extra_parts)\n AC_SUBST(extra_passes)\n AC_SUBST(extra_programs)\n-AC_SUBST(fixinc_defs)\n AC_SUBST(float_h_file)\n AC_SUBST(gcc_gxx_include_dir)\n AC_SUBST(gcc_version)"}, {"sha": "044353f3a43f5a1a18875c56a4a8761789885f7b", "filename": "gcc/fixcpp", "status": "removed", "additions": 0, "deletions": 109, "changes": 109, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/89b80b3ecec4e1044b5fc9ecd524606edabedba2/gcc%2Ffixcpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/89b80b3ecec4e1044b5fc9ecd524606edabedba2/gcc%2Ffixcpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffixcpp?ref=89b80b3ecec4e1044b5fc9ecd524606edabedba2", "patch": "@@ -1,109 +0,0 @@\n-#!/bin/sh\n-#\n-# NAME:\n-#\tfixcpp - fix CPP errors\n-#\n-# SYNOPSIS:\n-#\tfixcpp [-c][-p patch_file][-b bak_dir][-n new_dir] files(s)\n-#\n-# DESCRIPTION:\n-#\tFor each named file, use sed(1) to fixup any descriptive\n-#\ttext after #else or #endif or that is not properly\n-#\tcommented as this causes ANSI compilers to generate\n-#\tunnecessary warnings.\n-#\n-#\tNaturally this script is not guaranteed to be bullet\n-#\tproof, use of -n or -b is advisable!\n-#\n-#\t-c causes fixcpp to make sure that only files that\n-#\tneeded changing are affected by returning the original\n-#\tfile to its original location if no changes were needed.\n-#\n-#\t-p causes fixcpp to append to a patch file the context\n-#\tdiffs of the changes wrought.\n-#\n-# SEE ALSO:\n-#\tsed(1)\n-#\n-# AMENDED:\n-#\t90/08/08 22:46:32 (sjg)\n-#\n-# RELEASED:\n-#\t90/08/08 22:46:34 v1.4\n-#\n-# SCCSID:\n-#\t@(#)fixcpp.sh 1.4 90/08/08 22:46:32 (sjg)\n-#\n-#\t@(#)Copyright (c) 1990 Simon J. Gerraty\n-#\n-#       This is free software.  It comes with NO WARRANTY.\n-#       Everyone is granted permission to copy, modify and\n-#       redistribute this source code provided that all\n-#       recipients are given similar rights, and that the above\n-#       copyright notice and this notice are preserved in all\n-#       copies. \n-\n-TMPF=/tmp/fixcpp.$$\n-NEWDIR=\n-BAKDIR=\n-PATCHF=\n-CHECK=\n-\n-set -- `getopt \"cp:b:n:\" $*`\n-if [ $? != 0 ]; then\n-\techo \"$0 [-c][-p patch_file][-b bakup_dir][-n new_dir] file [file ...]\" >&2\n-\texit 1\n-fi\n-for i in $*\n-do\n-\tcase $i in\n-\t-c)\tCHECK=yes; shift;;\n-\t-p)\tPATCHF=$2; shift 2;;\n-\t-b)\tBAKDIR=$2; shift 2;;\n-\t-n)\tNEWDIR=$2; shift 2;;\n-\t--)\tshift; break;;\n-\tesac\n-done\n-NEWDIR=${NEWDIR:-.}\n-if [ $BAKDIR ]; then\n-\tif [ ! -d $BAKDIR ]; then\n-\t\techo \"$0: no such directory -- $BAKDIR\" >&2\n-\t\texit 1\n-\tfi\n-fi\n-\n-\n-\n-for i in $*\n-do\n-\tif [ $BAKDIR ]; then\n-\t\tmv $i $BAKDIR\n-\t\tinfile=$BAKDIR/$i\n-\telse\n-\t\tif [ \"$NEWDIR\" = \".\" ]; then\n-\t\t\tmv $i ${TMPF}\n-\t\t\tinfile=${TMPF}\n-\t\telse\n-\t\t\tinfile=$i\n-\t\tfi\n-\tfi\t\n-\tsed -e 's;^#\\([ \t]*e[nl][^ \t]*[ \t][ \t]*\\)\\([^/ \t][^\\*].*\\);#\\1/* \\2 */;' -e 's;^#\\([ \t]*e[nl][^ \t]*[ \t][ \t]*\\)\\([^/ \t]\\)$;#\\1/* \\2 */;' $infile >${NEWDIR}/$i\n-\tif [ \"${CHECK}\" = \"yes\" -o ${PATCHF} ]; then\n-\t\tif cmp -s $infile ${NEWDIR}/$i ; then\n-\t\t\tif [ \"${CHECK}\" = \"yes\" ]; then\n-\t\t\t\tif [ $BAKDIR ]; then\n-\t\t\t\t\tmv $infile ${NEWDIR}/$i\n-\t\t\t\telse\n-\t\t\t\t\trm ${NEWDIR}/$i\n-\t\t\t\tfi\n-\t\t\tfi\n-\t\telse\n-\t\t\tif [ $PATCHF ]; then\n-\t\t\t\tdiff -c $infile ${NEWDIR}/$i >> ${PATCHF}\n-\t\t\tfi\n-\t\tfi\n-\tfi\n-\n-done\n-\n-rm -f ${TMPF}"}, {"sha": "a8119b93030d0c8f27244f4384e83731fa8c9dfa", "filename": "gcc/fixinc-nt.sed", "status": "removed", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/89b80b3ecec4e1044b5fc9ecd524606edabedba2/gcc%2Ffixinc-nt.sed", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/89b80b3ecec4e1044b5fc9ecd524606edabedba2/gcc%2Ffixinc-nt.sed", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffixinc-nt.sed?ref=89b80b3ecec4e1044b5fc9ecd524606edabedba2", "patch": "@@ -1,5 +0,0 @@\n-s/!__STDC__/!defined (__STRICT_ANSI__)/g\n-s/getcwd(char \\*, int)/getcwd(char *, size_t)/\n-s/Format\\[\\]/Format\\[1\\]/\n-s/^#if !defined (__cplusplus)/#if 0/\n-s/^#define DECLSPEC_IMPORT __declspec(dllimport)/#define DECLSPEC_IMPORT/"}, {"sha": "2458a93155592be97bb09bd8356d69ba8aaed562", "filename": "gcc/fixincludes", "status": "removed", "additions": 0, "deletions": 3301, "changes": 3301, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/89b80b3ecec4e1044b5fc9ecd524606edabedba2/gcc%2Ffixincludes", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/89b80b3ecec4e1044b5fc9ecd524606edabedba2/gcc%2Ffixincludes", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffixincludes?ref=89b80b3ecec4e1044b5fc9ecd524606edabedba2"}, {"sha": "a7d1968ae5a34c12d80d10d8aa92a39a23c12d34", "filename": "gcc/just-fixinc", "status": "removed", "additions": 0, "deletions": 39, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/89b80b3ecec4e1044b5fc9ecd524606edabedba2/gcc%2Fjust-fixinc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/89b80b3ecec4e1044b5fc9ecd524606edabedba2/gcc%2Fjust-fixinc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjust-fixinc?ref=89b80b3ecec4e1044b5fc9ecd524606edabedba2", "patch": "@@ -1,39 +0,0 @@\n-#!/bin/sh\n-# $Id: just-fixinc,v 1.2 1998/04/03 16:35:58 law Exp $\n-# This script exists for use after installing\n-# the GCC binaries from a distribution tape/CD-ROM.\n-# Use it *after* copying the directory of binaries\n-# to the proper installed location.\n-# It runs fixincludes (or fixinc.svr4, if appropriate) to correct bugs in\n-# the system header files.\n-# This script needs to be customized for each type of installation so that\n-# others may run it after the installation-sans-fixincludes is completed.\n-\n-# The corrected header files go in the GCC installation directory\n-# so that only GCC sees them.\n-# This script does not modify the original header files in /usr/include.\n-# It only modifies copies in the GCC installation directory.\n-\n-installed=/opt/gnu/lib/gcc-lib/sparc-sun-solaris2/2.6.0\n-cd $installed/include\n-\n-rmdir tmpfoo > /dev/null 2>&1\n-mkdir tmpfoo\n-mv va-sparc.h varargs.h stdarg.h stddef.h limits.h float.h proto.h tmpfoo\n-\n-$installed/fixinc.svr4 $installed/include /usr/include $installed\n-\n-# Make sure fixed native limits.h gets renamed to syslimits.h before gcc's\n-# limits.h from tmpfoo is moved back.\n-rm -f syslimits.h\n-if test -f limits.h ; then\n-  mv limits.h syslimits.h\n-else\n-  cp $installed/gsyslimits.h syslimits.h\n-fi\n-chmod a+r syslimits.h\n-\n-mv tmpfoo/* .\n-rmdir tmpfoo\n-\n-# eof"}]}