{"sha": "c64d0e992972de157490985fa2fbc6aa4269a795", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzY0ZDBlOTkyOTcyZGUxNTc0OTA5ODVmYTJmYmM2YWE0MjY5YTc5NQ==", "commit": {"author": {"name": "Kelley Cook", "email": "kcook@gcc.gnu.org", "date": "2005-05-19T03:45:17Z"}, "committer": {"name": "R. Kelley Cook", "email": "kcook@gcc.gnu.org", "date": "2005-05-19T03:45:17Z"}, "message": "accross.m4: Delete file.\n\n2005-05-19  Kelley Cook  <kcook@gcc.gnu.org>\n\n\t* accross.m4: Delete file.\n\nFrom-SVN: r99946", "tree": {"sha": "bafdab15aceb3abb5163a0e4e0afadaed1fbc13f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bafdab15aceb3abb5163a0e4e0afadaed1fbc13f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c64d0e992972de157490985fa2fbc6aa4269a795", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c64d0e992972de157490985fa2fbc6aa4269a795", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c64d0e992972de157490985fa2fbc6aa4269a795", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c64d0e992972de157490985fa2fbc6aa4269a795/comments", "author": null, "committer": null, "parents": [{"sha": "08862f3c9732e5096e80e96fed3d916cb21ce399", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/08862f3c9732e5096e80e96fed3d916cb21ce399", "html_url": "https://github.com/Rust-GCC/gccrs/commit/08862f3c9732e5096e80e96fed3d916cb21ce399"}], "stats": {"total": 102, "additions": 4, "deletions": 98}, "files": [{"sha": "c773aadd4a93ed84f86dfaf5023e8861f8b97c41", "filename": "config/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c64d0e992972de157490985fa2fbc6aa4269a795/config%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c64d0e992972de157490985fa2fbc6aa4269a795/config%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/config%2FChangeLog?ref=c64d0e992972de157490985fa2fbc6aa4269a795", "patch": "@@ -1,3 +1,7 @@\n+2005-05-19  Kelley Cook  <kcook@gcc.gnu.org>\n+\n+\t* accross.m4: Delete file.\n+\n 2005-05-12  Ryota Kunisawa  <kunisawa@access.co.jp>\n \n \tPR bootstrap/21230"}, {"sha": "535a6f5c0368ed2609597234ffda69ccb31573f1", "filename": "config/accross.m4", "status": "removed", "additions": 0, "deletions": 98, "changes": 98, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08862f3c9732e5096e80e96fed3d916cb21ce399/config%2Faccross.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08862f3c9732e5096e80e96fed3d916cb21ce399/config%2Faccross.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/config%2Faccross.m4?ref=08862f3c9732e5096e80e96fed3d916cb21ce399", "patch": "@@ -1,98 +0,0 @@\n-AC_DEFUN([AC_COMPILE_CHECK_SIZEOF],\n-[changequote(<<, >>)dnl\n-dnl The name to #define.\n-define(<<AC_TYPE_NAME>>, translit(sizeof_$1, [a-z *], [A-Z_P]))dnl\n-dnl The cache variable name.\n-define(<<AC_CV_NAME>>, translit(ac_cv_sizeof_$1, [ *], [_p]))dnl\n-changequote([, ])dnl\n-AC_MSG_CHECKING(size of $1)\n-AC_CACHE_VAL(AC_CV_NAME,\n-[for ac_size in 4 8 1 2 16 12 $2 ; do # List sizes in rough order of prevalence.\n-  AC_TRY_COMPILE([#include \"confdefs.h\"\n-#include <sys/types.h>\n-$2\n-], [switch (0) case 0: case (sizeof ($1) == $ac_size):;], AC_CV_NAME=$ac_size)\n-  if test x$AC_CV_NAME != x ; then break; fi\n-done\n-])\n-if test x$AC_CV_NAME = x ; then\n-  AC_MSG_ERROR([cannot determine a size for $1])\n-fi\n-AC_MSG_RESULT($AC_CV_NAME)\n-AC_DEFINE_UNQUOTED(AC_TYPE_NAME, $AC_CV_NAME, [The number of bytes in type $1])\n-undefine([AC_TYPE_NAME])dnl\n-undefine([AC_CV_NAME])dnl\n-])\n-\n-AC_DEFUN([AC_C_BIGENDIAN_CROSS],\n-[AC_CACHE_CHECK(whether byte ordering is bigendian, ac_cv_c_bigendian,\n-[ac_cv_c_bigendian=unknown\n-# See if sys/param.h defines the BYTE_ORDER macro.\n-AC_TRY_COMPILE([#include <sys/types.h>\n-#include <sys/param.h>], [\n-#if !BYTE_ORDER || !BIG_ENDIAN || !LITTLE_ENDIAN\n- bogus endian macros\n-#endif], [# It does; now see whether it defined to BIG_ENDIAN or not.\n-AC_TRY_COMPILE([#include <sys/types.h>\n-#include <sys/param.h>], [\n-#if BYTE_ORDER != BIG_ENDIAN\n- not big endian\n-#endif], ac_cv_c_bigendian=yes, ac_cv_c_bigendian=no)])\n-if test $ac_cv_c_bigendian = unknown; then\n-AC_TRY_RUN([main () {\n-  /* Are we little or big endian?  From Harbison&Steele.  */\n-  union\n-  {\n-    long l;\n-    char c[sizeof (long)];\n-  } u;\n-  u.l = 1;\n-  exit (u.c[sizeof (long) - 1] == 1);\n-}], ac_cv_c_bigendian=no, ac_cv_c_bigendian=yes,\n-[ echo $ac_n \"cross-compiling... \" 2>&AC_FD_MSG ])\n-fi])\n-if test $ac_cv_c_bigendian = unknown; then\n-AC_MSG_CHECKING(to probe for byte ordering)\n-[\n-cat >conftest.c <<EOF\n-short ascii_mm[] = { 0x4249, 0x4765, 0x6E44, 0x6961, 0x6E53, 0x7953, 0 };\n-short ascii_ii[] = { 0x694C, 0x5454, 0x656C, 0x6E45, 0x6944, 0x6E61, 0 };\n-void _ascii() { char* s = (char*) ascii_mm; s = (char*) ascii_ii; }\n-short ebcdic_ii[] = { 0x89D3, 0xE3E3, 0x8593, 0x95C5, 0x89C4, 0x9581, 0 };\n-short ebcdic_mm[] = { 0xC2C9, 0xC785, 0x95C4, 0x8981, 0x95E2, 0xA8E2, 0 };\n-void _ebcdic() { char* s = (char*) ebcdic_mm; s = (char*) ebcdic_ii; }\n-int main() { _ascii (); _ebcdic (); return 0; }\n-EOF\n-] if test -f conftest.c ; then\n-     if ${CC-cc} ${CFLAGS} -c conftest.c -o conftest.o && test -f conftest.o ; then\n-        if test `grep -l BIGenDianSyS conftest.o` ; then\n-           echo $ac_n ' big endian probe OK, ' 1>&AC_FD_MSG\n-           ac_cv_c_bigendian=yes\n-        fi\n-        if test `grep -l LiTTleEnDian conftest.o` ; then\n-           echo $ac_n ' little endian probe OK, ' 1>&AC_FD_MSG\n-           if test $ac_cv_c_bigendian = yes ; then\n-            ac_cv_c_bigendian=unknown;\n-           else\n-            ac_cv_c_bigendian=no\n-           fi\n-        fi\n-        echo $ac_n 'guessing bigendian ...  ' >&AC_FD_MSG\n-     fi\n-  fi\n-AC_MSG_RESULT($ac_cv_c_bigendian)\n-fi\n-if test $ac_cv_c_bigendian = yes; then\n-  AC_DEFINE(WORDS_BIGENDIAN, 1, [whether byteorder is bigendian])\n-  AC_DEFINE(HOST_WORDS_BIG_ENDIAN, 1,\n-  [Define if the host machine stores words of multi-word integers in\n-   big-endian order.])\n-  BYTEORDER=4321\n-else\n-  BYTEORDER=1234\n-fi\n-AC_DEFINE_UNQUOTED(BYTEORDER, $BYTEORDER, [1234 = LIL_ENDIAN, 4321 = BIGENDIAN])\n-if test $ac_cv_c_bigendian = unknown; then\n-  AC_MSG_ERROR([unknown endianess - sorry, please pre-set ac_cv_c_bigendian])\n-fi\n-])"}]}