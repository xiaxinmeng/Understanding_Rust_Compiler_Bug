{"sha": "1f5700e95225d0a95cae2f96c17699c4d133f5e0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWY1NzAwZTk1MjI1ZDBhOTVjYWUyZjk2YzE3Njk5YzRkMTMzZjVlMA==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2016-10-28T14:09:33Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2016-10-28T14:09:33Z"}, "message": "Implement std::launder for C++17\n\n\t* doc/xml/manual/status_cxx2017.xml: Update status.\n\t* doc/html/*: Regenerate.\n\t* include/std/type_traits (has_unique_object_representations): Guard\n\twith __has_builtin check.\n\t* libsupc++/new (launder): Define for C++17.\n\t* testsuite/18_support/launder/1.cc: New test.\n\t* testsuite/18_support/launder/requirements.cc: New test.\n\t* testsuite/18_support/launder/requirements_neg.cc: New test.\n\nFrom-SVN: r241648", "tree": {"sha": "ecd360db0a445c1fa95554f352767c2d6d3cbf9a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ecd360db0a445c1fa95554f352767c2d6d3cbf9a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1f5700e95225d0a95cae2f96c17699c4d133f5e0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1f5700e95225d0a95cae2f96c17699c4d133f5e0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1f5700e95225d0a95cae2f96c17699c4d133f5e0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1f5700e95225d0a95cae2f96c17699c4d133f5e0/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0faf9ab4d6abd4f5b74ec2ca46a59a0c4b85f6a4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0faf9ab4d6abd4f5b74ec2ca46a59a0c4b85f6a4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0faf9ab4d6abd4f5b74ec2ca46a59a0c4b85f6a4"}], "stats": {"total": 193, "additions": 185, "deletions": 8}, "files": [{"sha": "61afd6b78d70cd620aae9566811c1164a9759bd2", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f5700e95225d0a95cae2f96c17699c4d133f5e0/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f5700e95225d0a95cae2f96c17699c4d133f5e0/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=1f5700e95225d0a95cae2f96c17699c4d133f5e0", "patch": "@@ -1,3 +1,14 @@\n+2016-10-28  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* doc/xml/manual/status_cxx2017.xml: Update status.\n+\t* doc/html/*: Regenerate.\n+\t* include/std/type_traits (has_unique_object_representations): Guard\n+\twith __has_builtin check.\n+\t* libsupc++/new (launder): Define for C++17.\n+\t* testsuite/18_support/launder/1.cc: New test.\n+\t* testsuite/18_support/launder/requirements.cc: New test.\n+\t* testsuite/18_support/launder/requirements_neg.cc: New test.\n+\n 2016-10-27  Uros Bizjak  <ubizjak@gmail.com>\n \n \tPR libstdc++/70975"}, {"sha": "554d519a0a64cbcfc814d99bcb3c85d4223b62b4", "filename": "libstdc++-v3/doc/html/manual/status.html", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f5700e95225d0a95cae2f96c17699c4d133f5e0/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fstatus.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f5700e95225d0a95cae2f96c17699c4d133f5e0/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fstatus.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fstatus.html?ref=1f5700e95225d0a95cae2f96c17699c4d133f5e0", "patch": "@@ -533,11 +533,11 @@\n \t<a class=\"link\" href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2016/p0154r1.html\" target=\"_top\">\n \tP0154R1\n \t</a>\n-      </td><td align=\"center\"> No </td><td align=\"left\"> <code class=\"code\">__cpp_lib_hardware_interference_size &gt;= 201603</code> </td></tr><tr bgcolor=\"#C8B0B0\"><td align=\"left\"> Core Issue 1776: Replacement of class objects containing reference members</td><td align=\"left\">\n+      </td><td align=\"center\"> No </td><td align=\"left\"> <code class=\"code\">__cpp_lib_hardware_interference_size &gt;= 201603</code> </td></tr><tr><td align=\"left\"> Core Issue 1776: Replacement of class objects containing reference members</td><td align=\"left\">\n \t<a class=\"link\" href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2016/p0137r1.html\" target=\"_top\">\n \tP0137R1\n \t</a>\n-      </td><td align=\"center\"> No </td><td align=\"left\"> <code class=\"code\">__cpp_lib_launder &gt;= 201606</code> </td></tr><tr><td align=\"left\">Wording for <code class=\"code\">std::uncaught_exceptions</code></td><td align=\"left\">\n+      </td><td align=\"center\"> 7 </td><td align=\"left\"> <code class=\"code\">__cpp_lib_launder &gt;= 201606</code> </td></tr><tr><td align=\"left\">Wording for <code class=\"code\">std::uncaught_exceptions</code></td><td align=\"left\">\n \t<a class=\"link\" href=\"http://www.open-std.org/JTC1/sc22/WG21/docs/papers/2014/n4259.pdf\" target=\"_top\">\n \t  N4259\n \t</a>\n@@ -612,11 +612,11 @@\n \t<a class=\"link\" href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2014/n4089.pdf\" target=\"_top\">\n \tN4089\n \t</a>\n-      </td><td align=\"center\"> 5 ? </td><td align=\"left\">\u00a0</td></tr><tr><td align=\"left\"> LWG 2228: Missing SFINAE rule in unique_ptr templated assignment </td><td align=\"left\">\n+      </td><td align=\"center\"> 6 </td><td align=\"left\">\u00a0</td></tr><tr><td align=\"left\"> LWG 2228: Missing SFINAE rule in unique_ptr templated assignment </td><td align=\"left\">\n \t<a class=\"link\" href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2015/n4366.html\" target=\"_top\">\n \t  N4366\n \t</a>\n-      </td><td align=\"center\"> 5 ? </td><td align=\"left\">\u00a0</td></tr><tr><td align=\"left\"> Re-enabling <code class=\"code\">shared_from_this</code></td><td align=\"left\">\n+      </td><td align=\"center\"> 6 </td><td align=\"left\">\u00a0</td></tr><tr><td align=\"left\"> Re-enabling <code class=\"code\">shared_from_this</code></td><td align=\"left\">\n \t<a class=\"link\" href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2016/p0033r1.html\" target=\"_top\">\n \tP0033R1\n \t</a>"}, {"sha": "d008bd9eb9b04ee3fa90d1a2202ee35ca65a4517", "filename": "libstdc++-v3/doc/xml/manual/status_cxx2017.xml", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f5700e95225d0a95cae2f96c17699c4d133f5e0/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fstatus_cxx2017.xml", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f5700e95225d0a95cae2f96c17699c4d133f5e0/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fstatus_cxx2017.xml", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fstatus_cxx2017.xml?ref=1f5700e95225d0a95cae2f96c17699c4d133f5e0", "patch": "@@ -69,14 +69,13 @@ Feature-testing recommendations for C++</link>.\n     </row>\n \n     <row>\n-      <?dbhtml bgcolor=\"#C8B0B0\" ?>\n       <entry> Core Issue 1776: Replacement of class objects containing reference members</entry>\n       <entry>\n \t<link xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2016/p0137r1.html\">\n \tP0137R1\n \t</link>\n       </entry>\n-      <entry align=\"center\"> No </entry>\n+      <entry align=\"center\"> 7 </entry>\n       <entry> <code>__cpp_lib_launder >= 201606</code> </entry>\n     </row>\n \n@@ -281,7 +280,7 @@ Feature-testing recommendations for C++</link>.\n \tN4089\n \t</link>\n       </entry>\n-      <entry align=\"center\"> 5 ? </entry>\n+      <entry align=\"center\"> 6 </entry>\n       <entry/>\n     </row>\n \n@@ -292,7 +291,7 @@ Feature-testing recommendations for C++</link>.\n \t  N4366\n \t</link>\n       </entry>\n-      <entry align=\"center\"> 5 ? </entry>\n+      <entry align=\"center\"> 6 </entry>\n       <entry/>\n     </row>\n "}, {"sha": "6824c9eb27e3d25b9c58a0630c9f20f5163a2925", "filename": "libstdc++-v3/include/std/type_traits", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f5700e95225d0a95cae2f96c17699c4d133f5e0/libstdc%2B%2B-v3%2Finclude%2Fstd%2Ftype_traits", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f5700e95225d0a95cae2f96c17699c4d133f5e0/libstdc%2B%2B-v3%2Finclude%2Fstd%2Ftype_traits", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Ftype_traits?ref=1f5700e95225d0a95cae2f96c17699c4d133f5e0", "patch": "@@ -3041,6 +3041,14 @@ template <typename _Base, typename _Derived>\n template <typename _From, typename _To>\n   constexpr bool is_convertible_v = is_convertible<_From, _To>::value;\n \n+#ifdef __has_builtin\n+# if !__has_builtin(__has_unique_object_representations)\n+// Try not to break non-GNU compilers that don't support the built-in:\n+#  define _GLIBCXX_NO_BUILTIN_HAS_UNIQ_OBJ_REP 1\n+# endif\n+#endif\n+\n+#ifndef _GLIBCXX_NO_BUILTIN_HAS_UNIQ_OBJ_REP\n # define __cpp_lib_has_unique_object_representations 201606\n   /// has_unique_object_representations\n   template<typename _Tp>\n@@ -3049,6 +3057,8 @@ template <typename _From, typename _To>\n       remove_cv_t<remove_all_extents_t<_Tp>>\n       )>\n     { };\n+#endif\n+#undef _GLIBCXX_NO_BUILTIN_HAS_UNIQ_OBJ_REP\n \n #endif // C++17\n "}, {"sha": "6bc6c008c187dda2ba990440b5b7e06b27153034", "filename": "libstdc++-v3/libsupc++/new", "status": "modified", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f5700e95225d0a95cae2f96c17699c4d133f5e0/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Fnew", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f5700e95225d0a95cae2f96c17699c4d133f5e0/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Fnew", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Fnew?ref=1f5700e95225d0a95cae2f96c17699c4d133f5e0", "patch": "@@ -176,6 +176,41 @@ inline void operator delete[](void*, void*) _GLIBCXX_USE_NOEXCEPT { }\n //@}\n } // extern \"C++\"\n \n+#if __cplusplus > 201402L\n+#ifdef __has_builtin\n+# if !__has_builtin(__builtin_launder)\n+// Try not to break non-GNU compilers that don't support the built-in:\n+#  define _GLIBCXX_NO_BUILTIN_LAUNDER 1\n+# endif\n+#endif\n+\n+#ifndef _GLIBCXX_NO_BUILTIN_LAUNDER\n+namespace std\n+{\n+#define __cpp_lib_launder 201606\n+  /// Pointer optimization barrier [ptr.launder]\n+  template<typename _Tp>\n+    constexpr _Tp*\n+    launder(_Tp* __p) noexcept\n+    { return __builtin_launder(__p); }\n+\n+  // The program is ill-formed if T is a function type or\n+  // (possibly cv-qualified) void.\n+\n+  template<typename _Ret, typename... _Args>\n+    void launder(_Ret (*)(_Args...)) = delete;\n+  template<typename _Ret, typename... _Args>\n+    void launder(_Ret (*)(_Args......)) = delete;\n+\n+  void launder(void*) = delete;\n+  void launder(const void*) = delete;\n+  void launder(volatile void*) = delete;\n+  void launder(const volatile void*) = delete;\n+}\n+#endif // _GLIBCXX_NO_BUILTIN_LAUNDER\n+#undef _GLIBCXX_NO_BUILTIN_LAUNDER\n+#endif // C++17\n+\n #pragma GCC visibility pop\n \n #endif"}, {"sha": "51096a3563d8d773f429fadf1d190f91a5b6d204", "filename": "libstdc++-v3/testsuite/18_support/launder/1.cc", "status": "added", "additions": 56, "deletions": 0, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f5700e95225d0a95cae2f96c17699c4d133f5e0/libstdc%2B%2B-v3%2Ftestsuite%2F18_support%2Flaunder%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f5700e95225d0a95cae2f96c17699c4d133f5e0/libstdc%2B%2B-v3%2Ftestsuite%2F18_support%2Flaunder%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F18_support%2Flaunder%2F1.cc?ref=1f5700e95225d0a95cae2f96c17699c4d133f5e0", "patch": "@@ -0,0 +1,56 @@\n+// Copyright (C) 2016 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// { dg-options \"-std=gnu++17\" }\n+// { dg-do run { target c++1z } }\n+\n+#include <new>\n+#include <testsuite_hooks.h>\n+#include <testsuite_tr1.h>\n+\n+void\n+test01()\n+{\n+  struct S {\n+    int i;\n+  } s;\n+  auto p = std::launder( &s.i );\n+  VERIFY( p == &s.i );\n+}\n+\n+\n+void\n+test02()\n+{\n+  // C++1z 1.8 [intro.object]\n+  struct X { const int n; };\n+  union U { X x; float f; };\n+\n+  U u = {{ 1 }};\n+  u.f = 5.f; // OK, creates new subobject of u (9.3)\n+  X *p = new (&u.x) X {2}; // OK, creates new subobject of u\n+  VERIFY(p->n == 2); // OK\n+  VERIFY(*std::launder(&u.x.n) == 2); // OK\n+  // assert(u.x.n == 2); undefined behavior, u.x does not name new subobject\n+}\n+\n+int\n+main()\n+{\n+  test01();\n+  test02();\n+}"}, {"sha": "c1bf5adf2ef0c13695d48b1a7ddf80b761728579", "filename": "libstdc++-v3/testsuite/18_support/launder/requirements.cc", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f5700e95225d0a95cae2f96c17699c4d133f5e0/libstdc%2B%2B-v3%2Ftestsuite%2F18_support%2Flaunder%2Frequirements.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f5700e95225d0a95cae2f96c17699c4d133f5e0/libstdc%2B%2B-v3%2Ftestsuite%2F18_support%2Flaunder%2Frequirements.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F18_support%2Flaunder%2Frequirements.cc?ref=1f5700e95225d0a95cae2f96c17699c4d133f5e0", "patch": "@@ -0,0 +1,27 @@\n+// Copyright (C) 2016 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// { dg-options \"-std=gnu++17\" }\n+// { dg-do compile { target c++1z } }\n+\n+// NB: This file is for testing new with NO OTHER INCLUDES.\n+#include <new>\n+\n+namespace std {\n+  template <class T>\n+    constexpr T* launder(T* p) noexcept;\n+}"}, {"sha": "87180ea819acb2c9c877e8194b6855ff70cf2f73", "filename": "libstdc++-v3/testsuite/18_support/launder/requirements_neg.cc", "status": "added", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f5700e95225d0a95cae2f96c17699c4d133f5e0/libstdc%2B%2B-v3%2Ftestsuite%2F18_support%2Flaunder%2Frequirements_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f5700e95225d0a95cae2f96c17699c4d133f5e0/libstdc%2B%2B-v3%2Ftestsuite%2F18_support%2Flaunder%2Frequirements_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F18_support%2Flaunder%2Frequirements_neg.cc?ref=1f5700e95225d0a95cae2f96c17699c4d133f5e0", "patch": "@@ -0,0 +1,39 @@\n+// Copyright (C) 2016 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// { dg-options \"-std=gnu++17\" }\n+// { dg-do compile { target c++1z } }\n+\n+#include <new>\n+\n+void f1(int) noexcept;\n+int f2(const char*, ...);\n+\n+void\n+test01()\n+{\n+  std::launder( &f1 ); // { dg-error \"deleted function\" }\n+  std::launder( &f2 ); // { dg-error \"deleted function\" }\n+  void* p = nullptr;\n+  std::launder( p );  // { dg-error \"deleted function\" }\n+  const void* cp = nullptr;\n+  std::launder( cp );  // { dg-error \"deleted function\" }\n+  volatile void* vp = nullptr;\n+  std::launder( vp );  // { dg-error \"deleted function\" }\n+  const volatile void* cvp = nullptr;\n+  std::launder( cvp );  // { dg-error \"deleted function\" }\n+}"}]}