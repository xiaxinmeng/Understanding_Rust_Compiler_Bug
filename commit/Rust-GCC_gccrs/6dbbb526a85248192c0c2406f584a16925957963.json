{"sha": "6dbbb526a85248192c0c2406f584a16925957963", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmRiYmI1MjZhODUyNDgxOTJjMGMyNDA2ZjU4NGExNjkyNTk1Nzk2Mw==", "commit": {"author": {"name": "John David Anglin", "email": "danglin@gcc.gnu.org", "date": "2019-05-28T23:24:23Z"}, "committer": {"name": "John David Anglin", "email": "danglin@gcc.gnu.org", "date": "2019-05-28T23:24:23Z"}, "message": "pa.c (hppa_profile_hook): Remove offset adjustment.\n\n\t* config/pa/pa.c (hppa_profile_hook): Remove offset adjustment.\n\nFrom-SVN: r271720", "tree": {"sha": "10706a5bb29e0634fe699986f1b1eb58fd959d8e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/10706a5bb29e0634fe699986f1b1eb58fd959d8e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6dbbb526a85248192c0c2406f584a16925957963", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6dbbb526a85248192c0c2406f584a16925957963", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6dbbb526a85248192c0c2406f584a16925957963", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6dbbb526a85248192c0c2406f584a16925957963/comments", "author": null, "committer": null, "parents": [{"sha": "441ed45ca2abe83f78be48e6ca816e9ec6e27222", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/441ed45ca2abe83f78be48e6ca816e9ec6e27222", "html_url": "https://github.com/Rust-GCC/gccrs/commit/441ed45ca2abe83f78be48e6ca816e9ec6e27222"}], "stats": {"total": 23, "additions": 9, "deletions": 14}, "files": [{"sha": "094e175f7975685115aa269751701c30301160b0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6dbbb526a85248192c0c2406f584a16925957963/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6dbbb526a85248192c0c2406f584a16925957963/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6dbbb526a85248192c0c2406f584a16925957963", "patch": "@@ -1,3 +1,7 @@\n+2019-05-28  John David Anglin  <danglin@gcc.gnu.org>\n+\n+\t* config/pa/pa.c (hppa_profile_hook): Remove offset adjustment.\n+\n 2019-05-28  Alejandro Martinez  <alejandro.martinezvicente@arm.com>\n \n \t* internal-fn.c: Marked mask_load_direct as vectorizable."}, {"sha": "51c879d5a0a58dcd41f48216946f6da5320bdb23", "filename": "gcc/config/pa/pa.c", "status": "modified", "additions": 5, "deletions": 14, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6dbbb526a85248192c0c2406f584a16925957963/gcc%2Fconfig%2Fpa%2Fpa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6dbbb526a85248192c0c2406f584a16925957963/gcc%2Fconfig%2Fpa%2Fpa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa.c?ref=6dbbb526a85248192c0c2406f584a16925957963", "patch": "@@ -4569,10 +4569,6 @@ output_deferred_profile_counters (void)\n void\n hppa_profile_hook (int label_no)\n {\n-  /* We use SImode for the address of the function in both 32 and\n-     64-bit code to avoid having to provide DImode versions of the\n-     lcla2 and load_offset_label_address insn patterns.  */\n-  rtx reg = gen_reg_rtx (SImode);\n   rtx_code_label *label_rtx = gen_label_rtx ();\n   int reg_parm_stack_space = REG_PARM_STACK_SPACE (NULL_TREE);\n   rtx arg_bytes, begin_label_rtx, mcount, sym;\n@@ -4604,18 +4600,13 @@ hppa_profile_hook (int label_no)\n   if (!use_mcount_pcrel_call)\n     {\n       /* The address of the function is loaded into %r25 with an instruction-\n-\t relative sequence that avoids the use of relocations.  The sequence\n-\t is split so that the load_offset_label_address instruction can\n-\t occupy the delay slot of the call to _mcount.  */\n+\t relative sequence that avoids the use of relocations.  We use SImode\n+\t for the address of the function in both 32 and 64-bit code to avoid\n+\t having to provide DImode versions of the lcla2 pattern.  */\n       if (TARGET_PA_20)\n-\temit_insn (gen_lcla2 (reg, label_rtx));\n+\temit_insn (gen_lcla2 (gen_rtx_REG (SImode, 25), label_rtx));\n       else\n-\temit_insn (gen_lcla1 (reg, label_rtx));\n-\n-      emit_insn (gen_load_offset_label_address (gen_rtx_REG (SImode, 25), \n-\t\t\t\t\t\treg,\n-\t\t\t\t\t\tbegin_label_rtx,\n-\t\t\t\t\t\tlabel_rtx));\n+\temit_insn (gen_lcla1 (gen_rtx_REG (SImode, 25), label_rtx));\n     }\n \n   if (!NO_DEFERRED_PROFILE_COUNTERS)"}]}