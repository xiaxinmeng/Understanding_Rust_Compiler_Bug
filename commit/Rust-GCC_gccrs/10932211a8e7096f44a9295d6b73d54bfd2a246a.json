{"sha": "10932211a8e7096f44a9295d6b73d54bfd2a246a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTA5MzIyMTFhOGU3MDk2ZjQ0YTkyOTVkNmI3M2Q1NGJmZDJhMjQ2YQ==", "commit": {"author": {"name": "Joseph Myers", "email": "joseph@codesourcery.com", "date": "2008-07-08T20:23:56Z"}, "committer": {"name": "Joseph Myers", "email": "jsm28@gcc.gnu.org", "date": "2008-07-08T20:23:56Z"}, "message": "reload.c (find_reloads_subreg_address): Do not require validity of address in original mode before reloading address.\n\n\t* reload.c (find_reloads_subreg_address): Do not require validity\n\tof address in original mode before reloading address.\n\nFrom-SVN: r137639", "tree": {"sha": "c54e05c56fc9658609f5554851b85f2246026263", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c54e05c56fc9658609f5554851b85f2246026263"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/10932211a8e7096f44a9295d6b73d54bfd2a246a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/10932211a8e7096f44a9295d6b73d54bfd2a246a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/10932211a8e7096f44a9295d6b73d54bfd2a246a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/10932211a8e7096f44a9295d6b73d54bfd2a246a/comments", "author": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "87bd23b8e99eaabd98d7ec624ad779c4c00d74e0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/87bd23b8e99eaabd98d7ec624ad779c4c00d74e0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/87bd23b8e99eaabd98d7ec624ad779c4c00d74e0"}], "stats": {"total": 11, "additions": 8, "deletions": 3}, "files": [{"sha": "5ba91fc8e35881a65212cdcc3cde964c067a23fc", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/10932211a8e7096f44a9295d6b73d54bfd2a246a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/10932211a8e7096f44a9295d6b73d54bfd2a246a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=10932211a8e7096f44a9295d6b73d54bfd2a246a", "patch": "@@ -1,3 +1,8 @@\n+2008-07-08  Joseph Myers  <joseph@codesourcery.com>\n+\n+\t* reload.c (find_reloads_subreg_address): Do not require validity\n+\tof address in original mode before reloading address.\n+\n 2008-07-07  Tianwei Sheng  <tianweis@google.com>\n \n \t* df-core.c (df_remove_problem): Adjust the access to avoid out of"}, {"sha": "5a128f9fb81b97e0d722e498e76493f94e4d0bb9", "filename": "gcc/reload.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/10932211a8e7096f44a9295d6b73d54bfd2a246a/gcc%2Freload.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/10932211a8e7096f44a9295d6b73d54bfd2a246a/gcc%2Freload.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freload.c?ref=10932211a8e7096f44a9295d6b73d54bfd2a246a", "patch": "@@ -6049,7 +6049,6 @@ find_reloads_subreg_address (rtx x, int force_replace, int opnum,\n \t      unsigned inner_size = GET_MODE_SIZE (GET_MODE (SUBREG_REG (x)));\n \t      int offset;\n \t      rtx orig = tem;\n-\t      enum machine_mode orig_mode = GET_MODE (orig);\n \t      int reloaded;\n \n \t      /* For big-endian paradoxical subregs, SUBREG_BYTE does not\n@@ -6095,15 +6094,16 @@ find_reloads_subreg_address (rtx x, int force_replace, int opnum,\n \t      /* For some processors an address may be valid in the\n \t\t original mode but not in a smaller mode.  For\n \t\t example, ARM accepts a scaled index register in\n-\t\t SImode but not in HImode.  find_reloads_address\n+\t\t SImode but not in HImode.  Similarly, the address may\n+\t\t have been valid before the subreg offset was added,\n+\t\t but not afterwards.  find_reloads_address\n \t\t assumes that we pass it a valid address, and doesn't\n \t\t force a reload.  This will probably be fine if\n \t\t find_reloads_address finds some reloads.  But if it\n \t\t doesn't find any, then we may have just converted a\n \t\t valid address into an invalid one.  Check for that\n \t\t here.  */\n \t      if (reloaded != 1\n-\t\t  && strict_memory_address_p (orig_mode, XEXP (tem, 0))\n \t\t  && !strict_memory_address_p (GET_MODE (tem),\n \t\t\t\t\t       XEXP (tem, 0)))\n \t\tpush_reload (XEXP (tem, 0), NULL_RTX, &XEXP (tem, 0), (rtx*) 0,"}]}