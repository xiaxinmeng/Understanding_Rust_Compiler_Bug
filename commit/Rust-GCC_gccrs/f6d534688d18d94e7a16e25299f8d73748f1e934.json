{"sha": "f6d534688d18d94e7a16e25299f8d73748f1e934", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjZkNTM0Njg4ZDE4ZDk0ZTdhMTZlMjUyOTlmOGQ3Mzc0OGYxZTkzNA==", "commit": {"author": {"name": "Ulrich Weigand", "email": "uweigand@de.ibm.com", "date": "2009-03-30T17:37:02Z"}, "committer": {"name": "Ulrich Weigand", "email": "uweigand@gcc.gnu.org", "date": "2009-03-30T17:37:02Z"}, "message": "f95-lang.c (gfc_init_builtin_functions): Define BUILT_IN_HUGE_VAL family of intrinsics instead of BUILT_IN_INF family.\n\n\t* f95-lang.c (gfc_init_builtin_functions): Define BUILT_IN_HUGE_VAL\n\tfamily of intrinsics instead of BUILT_IN_INF family.\n\t* trans-intrinsics.c (gfc_conv_intrinsic_nearest): Use\n\tBUILT_IN_HUGE_VAL instead of BUILT_IN_INF.\n\nFrom-SVN: r145307", "tree": {"sha": "5c51010d83e2fa964bc90dfec59ff25dafa3a114", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5c51010d83e2fa964bc90dfec59ff25dafa3a114"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f6d534688d18d94e7a16e25299f8d73748f1e934", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f6d534688d18d94e7a16e25299f8d73748f1e934", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f6d534688d18d94e7a16e25299f8d73748f1e934", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f6d534688d18d94e7a16e25299f8d73748f1e934/comments", "author": null, "committer": null, "parents": [{"sha": "4c936d4f4cf6a3ba7fc404a990f1975182e9fdda", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4c936d4f4cf6a3ba7fc404a990f1975182e9fdda", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4c936d4f4cf6a3ba7fc404a990f1975182e9fdda"}], "stats": {"total": 31, "additions": 19, "deletions": 12}, "files": [{"sha": "51f82c5a39b7da589997004387b7ac099e7cd7af", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f6d534688d18d94e7a16e25299f8d73748f1e934/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f6d534688d18d94e7a16e25299f8d73748f1e934/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=f6d534688d18d94e7a16e25299f8d73748f1e934", "patch": "@@ -1,3 +1,10 @@\n+2009-03-30  Ulrich Weigand  <Ulrich.Weigand@de.ibm.com>\n+\n+\t* f95-lang.c (gfc_init_builtin_functions): Define BUILT_IN_HUGE_VAL\n+\tfamily of intrinsics instead of BUILT_IN_INF family.\n+\t* trans-intrinsics.c (gfc_conv_intrinsic_nearest): Use\n+\tBUILT_IN_HUGE_VAL instead of BUILT_IN_INF.\n+\n 2009-03-30  Jakub Jelinek  <jakub@redhat.com>\n \n \t* trans-types.c (gfc_sym_type, gfc_return_by_reference): For"}, {"sha": "b8f2d221801f407f0be16b61651bc9e167305baa", "filename": "gcc/fortran/f95-lang.c", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f6d534688d18d94e7a16e25299f8d73748f1e934/gcc%2Ffortran%2Ff95-lang.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f6d534688d18d94e7a16e25299f8d73748f1e934/gcc%2Ffortran%2Ff95-lang.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ff95-lang.c?ref=f6d534688d18d94e7a16e25299f8d73748f1e934", "patch": "@@ -917,12 +917,12 @@ gfc_init_builtin_functions (void)\n   gfc_define_builtin (\"__builtin_fmodf\", mfunc_float[1], \n \t\t      BUILT_IN_FMODF, \"fmodf\", true);\n \n-  gfc_define_builtin (\"__builtin_infl\", mfunc_longdouble[3], \n-\t\t      BUILT_IN_INFL, \"__builtin_infl\", true);\n-  gfc_define_builtin (\"__builtin_inf\", mfunc_double[3], \n-\t\t      BUILT_IN_INF, \"__builtin_inf\", true);\n-  gfc_define_builtin (\"__builtin_inff\", mfunc_float[3], \n-\t\t      BUILT_IN_INFF, \"__builtin_inff\", true);\n+  gfc_define_builtin (\"__builtin_huge_vall\", mfunc_longdouble[3], \n+\t\t      BUILT_IN_HUGE_VALL, \"__builtin_huge_vall\", true);\n+  gfc_define_builtin (\"__builtin_huge_val\", mfunc_double[3], \n+\t\t      BUILT_IN_HUGE_VAL, \"__builtin_huge_val\", true);\n+  gfc_define_builtin (\"__builtin_huge_valf\", mfunc_float[3], \n+\t\t      BUILT_IN_HUGE_VALF, \"__builtin_huge_valf\", true);\n \n   /* lround{f,,l} and llround{f,,l} */\n   type = tree_cons (NULL_TREE, float_type_node, void_list_node);"}, {"sha": "a8ac42ea74fb569f68ab70a3991b1cb907e4f668", "filename": "gcc/fortran/trans-intrinsic.c", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f6d534688d18d94e7a16e25299f8d73748f1e934/gcc%2Ffortran%2Ftrans-intrinsic.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f6d534688d18d94e7a16e25299f8d73748f1e934/gcc%2Ffortran%2Ftrans-intrinsic.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-intrinsic.c?ref=f6d534688d18d94e7a16e25299f8d73748f1e934", "patch": "@@ -3130,32 +3130,32 @@ gfc_conv_intrinsic_fraction (gfc_se * se, gfc_expr * expr)\n \n \n /* NEAREST (s, dir) is translated into\n-     tmp = copysign (INF, dir);\n+     tmp = copysign (HUGE_VAL, dir);\n      return nextafter (s, tmp);\n  */\n static void\n gfc_conv_intrinsic_nearest (gfc_se * se, gfc_expr * expr)\n {\n   tree args[2], type, tmp;\n-  int nextafter, copysign, inf;\n+  int nextafter, copysign, huge_val;\n \n   switch (expr->ts.kind)\n     {\n       case 4:\n \tnextafter = BUILT_IN_NEXTAFTERF;\n \tcopysign = BUILT_IN_COPYSIGNF;\n-\tinf = BUILT_IN_INFF;\n+\thuge_val = BUILT_IN_HUGE_VALF;\n \tbreak;\n       case 8:\n \tnextafter = BUILT_IN_NEXTAFTER;\n \tcopysign = BUILT_IN_COPYSIGN;\n-\tinf = BUILT_IN_INF;\n+\thuge_val = BUILT_IN_HUGE_VAL;\n \tbreak;\n       case 10:\n       case 16:\n \tnextafter = BUILT_IN_NEXTAFTERL;\n \tcopysign = BUILT_IN_COPYSIGNL;\n-\tinf = BUILT_IN_INFL;\n+\thuge_val = BUILT_IN_HUGE_VALL;\n \tbreak;\n       default:\n \tgcc_unreachable ();\n@@ -3164,7 +3164,7 @@ gfc_conv_intrinsic_nearest (gfc_se * se, gfc_expr * expr)\n   type = gfc_typenode_for_spec (&expr->ts);\n   gfc_conv_intrinsic_function_args (se, expr, args, 2);\n   tmp = build_call_expr (built_in_decls[copysign], 2,\n-\t\t\t build_call_expr (built_in_decls[inf], 0),\n+\t\t\t build_call_expr (built_in_decls[huge_val], 0),\n \t\t\t fold_convert (type, args[1]));\n   se->expr = build_call_expr (built_in_decls[nextafter], 2,\n \t\t\t      fold_convert (type, args[0]), tmp);"}]}