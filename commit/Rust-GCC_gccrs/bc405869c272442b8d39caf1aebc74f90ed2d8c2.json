{"sha": "bc405869c272442b8d39caf1aebc74f90ed2d8c2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmM0MDU4NjljMjcyNDQyYjhkMzljYWYxYWViYzc0ZjkwZWQyZDhjMg==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2019-05-28T12:05:50Z"}, "committer": {"name": "Martin Liska", "email": "marxin@gcc.gnu.org", "date": "2019-05-28T12:05:50Z"}, "message": "Support again multiple --help options (PR other/90315).\n\n2019-05-28  Martin Liska  <mliska@suse.cz>\n\n\tPR other/90315\n\t* opts-global.c (decode_options): Print help for all\n\thelp_option_arguments.\n\t* opts.c (print_help): Add new argument.\n\t(common_handle_option): Remember all values into\n\thelp_option_arguments.\n\t* opts.h (print_help): Add new argument.\n\nFrom-SVN: r271700", "tree": {"sha": "c58ae5a68e9bdbca68c6897f5d70c6e553ff6108", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c58ae5a68e9bdbca68c6897f5d70c6e553ff6108"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bc405869c272442b8d39caf1aebc74f90ed2d8c2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bc405869c272442b8d39caf1aebc74f90ed2d8c2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bc405869c272442b8d39caf1aebc74f90ed2d8c2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bc405869c272442b8d39caf1aebc74f90ed2d8c2/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "392d2ff3bd6fc66a6683540fc33910ddef9bf6f1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/392d2ff3bd6fc66a6683540fc33910ddef9bf6f1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/392d2ff3bd6fc66a6683540fc33910ddef9bf6f1"}], "stats": {"total": 29, "additions": 22, "deletions": 7}, "files": [{"sha": "ad36bddd894952f2fb538f57b5e1b6c33d962039", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bc405869c272442b8d39caf1aebc74f90ed2d8c2/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bc405869c272442b8d39caf1aebc74f90ed2d8c2/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=bc405869c272442b8d39caf1aebc74f90ed2d8c2", "patch": "@@ -1,3 +1,13 @@\n+2019-05-28  Martin Liska  <mliska@suse.cz>\n+\n+\tPR other/90315\n+\t* opts-global.c (decode_options): Print help for all\n+\thelp_option_arguments.\n+\t* opts.c (print_help): Add new argument.\n+\t(common_handle_option): Remember all values into\n+\thelp_option_arguments.\n+\t* opts.h (print_help): Add new argument.\n+\n 2019-05-28  Martin Liska  <mliska@suse.cz>\n \n \tPR ipa/90555"}, {"sha": "4aca400b815ff5a042da3dcb837f716e142ff046", "filename": "gcc/opts-global.c", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bc405869c272442b8d39caf1aebc74f90ed2d8c2/gcc%2Fopts-global.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bc405869c272442b8d39caf1aebc74f90ed2d8c2/gcc%2Fopts-global.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fopts-global.c?ref=bc405869c272442b8d39caf1aebc74f90ed2d8c2", "patch": "@@ -317,8 +317,11 @@ decode_options (struct gcc_options *opts, struct gcc_options *opts_set,\n   finish_options (opts, opts_set, loc);\n \n   /* Print --help=* if used.  */\n-  if (help_option_argument != NULL)\n-    print_help (opts, lang_mask);\n+  unsigned i;\n+  const char *arg;\n+\n+  FOR_EACH_VEC_ELT (help_option_arguments, i, arg)\n+    print_help (opts, lang_mask, arg);\n }\n \n /* Hold command-line options associated with stack limitation.  */"}, {"sha": "9e396f8571478e4cee4a38b5fa7fef59528b2292", "filename": "gcc/opts.c", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bc405869c272442b8d39caf1aebc74f90ed2d8c2/gcc%2Fopts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bc405869c272442b8d39caf1aebc74f90ed2d8c2/gcc%2Fopts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fopts.c?ref=bc405869c272442b8d39caf1aebc74f90ed2d8c2", "patch": "@@ -856,7 +856,7 @@ control_options_for_live_patching (struct gcc_options *opts,\n }\n \n /* --help option argument if set.  */\n-const char *help_option_argument = NULL;\n+vec<const char *> help_option_arguments;\n \n \n /* After all options at LOC have been read into OPTS and OPTS_SET,\n@@ -2062,7 +2062,8 @@ check_alignment_argument (location_t loc, const char *flag, const char *name)\n /* Print help when OPT__help_ is set.  */\n \n void\n-print_help (struct gcc_options *opts, unsigned int lang_mask)\n+print_help (struct gcc_options *opts, unsigned int lang_mask,\n+\t    const char *help_option_argument)\n {\n   const char *a = help_option_argument;\n   unsigned int include_flags = 0;\n@@ -2255,7 +2256,7 @@ common_handle_option (struct gcc_options *opts,\n \n     case OPT__help_:\n       {\n-\thelp_option_argument = arg;\n+\thelp_option_arguments.safe_push (arg);\n \topts->x_exit_after_options = true;\n \tbreak;\n       }"}, {"sha": "e5723a946f7b4417c4cecf4773df683783aa82ff", "filename": "gcc/opts.h", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bc405869c272442b8d39caf1aebc74f90ed2d8c2/gcc%2Fopts.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bc405869c272442b8d39caf1aebc74f90ed2d8c2/gcc%2Fopts.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fopts.h?ref=bc405869c272442b8d39caf1aebc74f90ed2d8c2", "patch": "@@ -419,7 +419,8 @@ extern bool target_handle_option (struct gcc_options *opts,\n extern void finish_options (struct gcc_options *opts,\n \t\t\t    struct gcc_options *opts_set,\n \t\t\t    location_t loc);\n-extern void print_help (struct gcc_options *opts, unsigned int lang_mask);\n+extern void print_help (struct gcc_options *opts, unsigned int lang_mask, const\n+\t\t\tchar *help_option_argument);\n extern void default_options_optimization (struct gcc_options *opts,\n \t\t\t\t\t  struct gcc_options *opts_set,\n \t\t\t\t\t  struct cl_decoded_option *decoded_options,\n@@ -443,7 +444,7 @@ extern const struct sanitizer_opts_s\n   bool can_recover;\n } sanitizer_opts[];\n \n-extern const char *help_option_argument;\n+extern vec<const char *> help_option_arguments;\n \n extern void add_misspelling_candidates (auto_vec<char *> *candidates,\n \t\t\t\t\tconst struct cl_option *option,"}]}