{"sha": "c4b9b2916ceb22b57d72fee8f775e02a8851d086", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzRiOWIyOTE2Y2ViMjJiNTdkNzJmZWU4Zjc3NWUwMmE4ODUxZDA4Ng==", "commit": {"author": {"name": "Yannick Moy", "email": "moy@adacore.com", "date": "2018-08-21T14:46:07Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2018-08-21T14:46:07Z"}, "message": "[Ada] Define versions of dimension system for Float and Long_Float\n\nThe dimension system in System.Dim.Mks is based on Long_Long_Float,\nwhich may not be convenient to people who want to use Float or\nLong_Float as basis. These new files provide units that define the\ndimension system based on Float in System.Dim.Float_Mks and on\nLong_Float in System.Dim.Long_Mks.\n\nChild packages Other_Prefixes and Mks_IO are also defined appropriately,\nwith new instantiations for the various sizes of floating-point types.\n\n2018-08-21  Yannick Moy  <moy@adacore.com>\n\ngcc/ada/\n\n\t* doc/gnat_ugn/gnat_and_program_execution.rst: Update\n\tdocumentation of dimensionality analysis.\n\t* gnat_ugn.texi: Regenerate.\n\t* Makefile.rtl, impunit.adb: Consider the new units.\n\t* libgnat/s-dfmkio.ads, libgnat/s-dfmopr.ads,\n\tlibgnat/s-diflmk.ads: New units based on Float.\n\t* libgnat/s-dilomk.ads, libgnat/s-dlmkio.ads,\n\tlibgnat/s-dlmopr.ads: New units based on Long_Float.\n\t* libgnat/s-dmotpr.ads: Rename to libgnat/s-dgmgop.ads and turn\n\tinto an instance of\n\tSystem.Dim.Generic_Mks.Generic_Other_Prefixes.\n\t* libgnat/s-dimmks.ads: Rename to libgnat/s-digemk.ads and turn\n\tinto an instance of System.Dim.Generic_Mks.\n\nFrom-SVN: r263715", "tree": {"sha": "aac40a67cb132252b909db882e2c2b091a517caf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/aac40a67cb132252b909db882e2c2b091a517caf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c4b9b2916ceb22b57d72fee8f775e02a8851d086", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c4b9b2916ceb22b57d72fee8f775e02a8851d086", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c4b9b2916ceb22b57d72fee8f775e02a8851d086", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c4b9b2916ceb22b57d72fee8f775e02a8851d086/comments", "author": {"login": "yannickmoy", "id": 859440, "node_id": "MDQ6VXNlcjg1OTQ0MA==", "avatar_url": "https://avatars.githubusercontent.com/u/859440?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yannickmoy", "html_url": "https://github.com/yannickmoy", "followers_url": "https://api.github.com/users/yannickmoy/followers", "following_url": "https://api.github.com/users/yannickmoy/following{/other_user}", "gists_url": "https://api.github.com/users/yannickmoy/gists{/gist_id}", "starred_url": "https://api.github.com/users/yannickmoy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yannickmoy/subscriptions", "organizations_url": "https://api.github.com/users/yannickmoy/orgs", "repos_url": "https://api.github.com/users/yannickmoy/repos", "events_url": "https://api.github.com/users/yannickmoy/events{/privacy}", "received_events_url": "https://api.github.com/users/yannickmoy/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "2201fa7bd34d215e4aeeb961d41f60f3fb80f101", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2201fa7bd34d215e4aeeb961d41f60f3fb80f101", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2201fa7bd34d215e4aeeb961d41f60f3fb80f101"}], "stats": {"total": 1394, "additions": 866, "deletions": 528}, "files": [{"sha": "2b17d4af5630c9da9549a66a4724150e6c6deee1", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c4b9b2916ceb22b57d72fee8f775e02a8851d086/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c4b9b2916ceb22b57d72fee8f775e02a8851d086/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=c4b9b2916ceb22b57d72fee8f775e02a8851d086", "patch": "@@ -1,3 +1,19 @@\n+2018-08-21  Yannick Moy  <moy@adacore.com>\n+\n+\t* doc/gnat_ugn/gnat_and_program_execution.rst: Update\n+\tdocumentation of dimensionality analysis.\n+\t* gnat_ugn.texi: Regenerate.\n+\t* Makefile.rtl, impunit.adb: Consider the new units.\n+\t* libgnat/s-dfmkio.ads, libgnat/s-dfmopr.ads,\n+\tlibgnat/s-diflmk.ads: New units based on Float.\n+\t* libgnat/s-dilomk.ads, libgnat/s-dlmkio.ads,\n+\tlibgnat/s-dlmopr.ads: New units based on Long_Float.\n+\t* libgnat/s-dmotpr.ads: Rename to libgnat/s-dgmgop.ads and turn\n+\tinto an instance of\n+\tSystem.Dim.Generic_Mks.Generic_Other_Prefixes.\n+\t* libgnat/s-dimmks.ads: Rename to libgnat/s-digemk.ads and turn\n+\tinto an instance of System.Dim.Generic_Mks.\n+\n 2018-08-21  Hristian Kirtchev  <kirtchev@adacore.com>\n \n \t* impunit.adb: Add g-lists to the set of non-implementation"}, {"sha": "9542fe0c9ad5d965e050d9e18d6f3dca546253b1", "filename": "gcc/ada/Makefile.rtl", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c4b9b2916ceb22b57d72fee8f775e02a8851d086/gcc%2Fada%2FMakefile.rtl", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c4b9b2916ceb22b57d72fee8f775e02a8851d086/gcc%2Fada%2FMakefile.rtl", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FMakefile.rtl?ref=c4b9b2916ceb22b57d72fee8f775e02a8851d086", "patch": "@@ -523,12 +523,20 @@ GNATRTL_NONTASKING_OBJS= \\\n   s-conca9$(objext) \\\n   s-crc32$(objext)  \\\n   s-crtl$(objext)   \\\n+  s-dfmkio$(objext) \\\n+  s-dfmopr$(objext) \\\n+  s-dgmgop$(objext) \\\n+  s-dlmopr$(objext) \\\n   s-diflio$(objext) \\\n+  s-diflmk$(objext) \\\n+  s-digemk$(objext) \\\n   s-diinio$(objext) \\\n+  s-dilomk$(objext) \\\n   s-dim$(objext)    \\\n   s-dimkio$(objext) \\\n   s-dimmks$(objext) \\\n   s-direio$(objext) \\\n+  s-dlmkio$(objext) \\\n   s-dmotpr$(objext) \\\n   s-dsaser$(objext) \\\n   s-elaall$(objext) \\\n@@ -2762,4 +2770,3 @@ a-tags.o  : a-tags.adb a-tags.ads\n s-memory.o  : s-memory.adb s-memory.ads\n \t$(ADAC) -c $(ALL_ADAFLAGS) $(NO_SIBLING_ADAFLAGS) $(ADA_INCLUDES) \\\n \t  $< $(OUTPUT_OPTION)\n-"}, {"sha": "9cbdb15cf22ad9b1db0ab1cc2568b610de675dfb", "filename": "gcc/ada/doc/gnat_ugn/gnat_and_program_execution.rst", "status": "modified", "additions": 18, "deletions": 13, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c4b9b2916ceb22b57d72fee8f775e02a8851d086/gcc%2Fada%2Fdoc%2Fgnat_ugn%2Fgnat_and_program_execution.rst", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c4b9b2916ceb22b57d72fee8f775e02a8851d086/gcc%2Fada%2Fdoc%2Fgnat_ugn%2Fgnat_and_program_execution.rst", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fdoc%2Fgnat_ugn%2Fgnat_and_program_execution.rst?ref=c4b9b2916ceb22b57d72fee8f775e02a8851d086", "patch": "@@ -3280,19 +3280,18 @@ to use the proper subtypes in object declarations.\n .. index:: MKS_Type type\n \n The simplest way to impose dimensionality checking on a computation is to make\n-use of the package ``System.Dim.Mks``,\n-which is part of the GNAT library. This\n-package defines a floating-point type ``MKS_Type``,\n-for which a sequence of\n-dimension names are specified, together with their conventional abbreviations.\n-The following should be read together with the full specification of the\n-package, in file :file:`s-dimmks.ads`.\n+use of one of the instantiations of the package ``System.Dim.Generic_Mks``, which\n+are part of the GNAT library. This generic package defines a floating-point\n+type ``MKS_Type``, for which a sequence of dimension names are specified,\n+together with their conventional abbreviations.  The following should be read\n+together with the full specification of the package, in file\n+:file:`s-digemk.ads`.\n \n-  .. index:: s-dimmks.ads file\n+  .. index:: s-digemk.ads file\n \n   .. code-block:: ada\n \n-     type Mks_Type is new Long_Long_Float\n+     type Mks_Type is new Float_Type\n        with\n         Dimension_System => (\n           (Unit_Name => Meter,    Unit_Symbol => 'm',   Dim_Symbol => 'L'),\n@@ -3336,10 +3335,16 @@ as well as useful multiples of these units:\n      day : constant Time   := 60.0 * 24.0 * min;\n     ...\n \n-Using this package, you can then define a derived unit by\n-providing the aspect that\n-specifies its dimensions within the MKS system, as well as the string to\n-be used for output of a value of that unit:\n+There are three instantiations of ``System.Dim.Generic_Mks`` defined in the\n+GNAT library:\n+\n+* ``System.Dim.Float_Mks`` based on ``Float`` defined in :file:`s-diflmk.ads`.\n+* ``System.Dim.Long_Mks`` based on ``Long_Float`` defined in :file:`s-dilomk.ads`.\n+* ``System.Dim.Mks`` based on ``Long_Long_Float`` defined in :file:`s-dimmks.ads`.\n+\n+Using one of these packages, you can then define a derived unit by providing\n+the aspect that specifies its dimensions within the MKS system, as well as the\n+string to be used for output of a value of that unit:\n \n   .. code-block:: ada\n "}, {"sha": "dfff37d3d65c9510e9d604993a0fa2050b4846e4", "filename": "gcc/ada/gnat_ugn.texi", "status": "modified", "additions": 28, "deletions": 14, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c4b9b2916ceb22b57d72fee8f775e02a8851d086/gcc%2Fada%2Fgnat_ugn.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c4b9b2916ceb22b57d72fee8f775e02a8851d086/gcc%2Fada%2Fgnat_ugn.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_ugn.texi?ref=c4b9b2916ceb22b57d72fee8f775e02a8851d086", "patch": "@@ -21,7 +21,7 @@\n \n @copying\n @quotation\n-GNAT User's Guide for Native Platforms , Jul 13, 2018\n+GNAT User's Guide for Native Platforms , Aug 17, 2018\n \n AdaCore\n \n@@ -22606,20 +22606,19 @@ to use the proper subtypes in object declarations.\n @geindex MKS_Type type\n \n The simplest way to impose dimensionality checking on a computation is to make\n-use of the package @code{System.Dim.Mks},\n-which is part of the GNAT library. This\n-package defines a floating-point type @code{MKS_Type},\n-for which a sequence of\n-dimension names are specified, together with their conventional abbreviations.\n-The following should be read together with the full specification of the\n-package, in file @code{s-dimmks.ads}.\n+use of one of the instantiations of the package @code{System.Dim.Generic_Mks}, which\n+are part of the GNAT library. This generic package defines a floating-point\n+type @code{MKS_Type}, for which a sequence of dimension names are specified,\n+together with their conventional abbreviations.  The following should be read\n+together with the full specification of the package, in file\n+@code{s-digemk.ads}.\n \n @quotation\n \n-@geindex s-dimmks.ads file\n+@geindex s-digemk.ads file\n \n @example\n-type Mks_Type is new Long_Long_Float\n+type Mks_Type is new Float_Type\n   with\n    Dimension_System => (\n      (Unit_Name => Meter,    Unit_Symbol => 'm',   Dim_Symbol => 'L'),\n@@ -22674,10 +22673,25 @@ as well as useful multiples of these units:\n @end example\n @end quotation\n \n-Using this package, you can then define a derived unit by\n-providing the aspect that\n-specifies its dimensions within the MKS system, as well as the string to\n-be used for output of a value of that unit:\n+There are three instantiations of @code{System.Dim.Generic_Mks} defined in the\n+GNAT library:\n+\n+\n+@itemize *\n+\n+@item \n+@code{System.Dim.Float_Mks} based on @code{Float} defined in @code{s-diflmk.ads}.\n+\n+@item \n+@code{System.Dim.Long_Mks} based on @code{Long_Float} defined in @code{s-dilomk.ads}.\n+\n+@item \n+@code{System.Dim.Mks} based on @code{Long_Long_Float} defined in @code{s-dimmks.ads}.\n+@end itemize\n+\n+Using one of these packages, you can then define a derived unit by providing\n+the aspect that specifies its dimensions within the MKS system, as well as the\n+string to be used for output of a value of that unit:\n \n @quotation\n "}, {"sha": "3e5fbe07e7ccc46c9fb69bc0b5e987ae254c496e", "filename": "gcc/ada/impunit.adb", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c4b9b2916ceb22b57d72fee8f775e02a8851d086/gcc%2Fada%2Fimpunit.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c4b9b2916ceb22b57d72fee8f775e02a8851d086/gcc%2Fada%2Fimpunit.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fimpunit.adb?ref=c4b9b2916ceb22b57d72fee8f775e02a8851d086", "patch": "@@ -373,10 +373,18 @@ package body Impunit is\n     (\"s-addima\", F),  -- System.Address_Image\n     (\"s-atocou\", F),  -- System.Atomic_Counters\n     (\"s-assert\", F),  -- System.Assertions\n+    (\"s-dfmkio\", F),  -- System.Dim.Float_Mks_IO\n+    (\"s-dfmopr\", F),  -- System.Dim.Float_Mks.Other_Prefixes\n+    (\"s-dgmgop\", F),  -- System.Dim.Generic_Mks.Generic_Other_Prefixes\n+    (\"s-dlmopr\", F),  -- System.Dim.Long_Mks.Other_Prefixes\n     (\"s-diflio\", F),  -- System.Dim.Float_IO\n+    (\"s-diflmk\", F),  -- System.Dim.Float_Mks\n+    (\"s-digemk\", F),  -- System.Dim.Generic_Mks\n     (\"s-diinio\", F),  -- System.Dim.Integer_IO\n+    (\"s-dilomk\", F),  -- System.Dim.Long_Mks\n     (\"s-dimkio\", F),  -- System.Dim.Mks_IO\n     (\"s-dimmks\", F),  -- System.Dim.Mks\n+    (\"s-dlmkio\", F),  -- System.Dim.Long_Mks_IO\n     (\"s-dmotpr\", F),  -- System.Dim.Mks.Other_Prefixes\n     (\"s-memory\", F),  -- System.Memory\n     (\"s-parint\", F),  -- System.Partition_Interface"}, {"sha": "c9a96c225ad9f7807927feef6edebf17db87e24f", "filename": "gcc/ada/libgnat/s-dfmkio.ads", "status": "added", "additions": 38, "deletions": 0, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c4b9b2916ceb22b57d72fee8f775e02a8851d086/gcc%2Fada%2Flibgnat%2Fs-dfmkio.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c4b9b2916ceb22b57d72fee8f775e02a8851d086/gcc%2Fada%2Flibgnat%2Fs-dfmkio.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fs-dfmkio.ads?ref=c4b9b2916ceb22b57d72fee8f775e02a8851d086", "patch": "@@ -0,0 +1,38 @@\n+------------------------------------------------------------------------------\n+--                                                                          --\n+--                         GNAT RUN-TIME COMPONENTS                         --\n+--                                                                          --\n+--               S Y S T E M . D I M . F L O A T _ M K S _ I O              --\n+--                                                                          --\n+--                                  S p e c                                 --\n+--                                                                          --\n+--             Copyright (C) 2018, Free Software Foundation, Inc.           --\n+--                                                                          --\n+-- GNAT is free software;  you can  redistribute it  and/or modify it under --\n+-- terms of the  GNU General Public License as published  by the Free Soft- --\n+-- ware  Foundation;  either version 3,  or (at your option) any later ver- --\n+-- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --\n+-- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n+-- or FITNESS FOR A PARTICULAR PURPOSE.                                     --\n+--                                                                          --\n+-- As a special exception under Section 7 of GPL version 3, you are granted --\n+-- additional permissions described in the GCC Runtime Library Exception,   --\n+-- version 3.1, as published by the Free Software Foundation.               --\n+--                                                                          --\n+-- You should have received a copy of the GNU General Public License and    --\n+-- a copy of the GCC Runtime Library Exception along with this program;     --\n+-- see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see    --\n+-- <http://www.gnu.org/licenses/>.                                          --\n+--                                                                          --\n+-- GNAT was originally developed  by the GNAT team at  New York University. --\n+-- Extensive contributions were provided by Ada Core Technologies Inc.      --\n+--                                                                          --\n+------------------------------------------------------------------------------\n+\n+--  Provides output facilities for the Float MKS dimension system (see\n+--  System.Dim.Float_Mks and System.Dim.Float_IO).\n+\n+with System.Dim.Float_Mks; use System.Dim.Float_Mks;\n+with System.Dim.Float_IO;\n+\n+package System.Dim.Float_Mks_IO is new System.Dim.Float_IO (Mks_Type);"}, {"sha": "6938feb8545f10c83d0f16d43a9f9c57477372fb", "filename": "gcc/ada/libgnat/s-dfmopr.ads", "status": "added", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c4b9b2916ceb22b57d72fee8f775e02a8851d086/gcc%2Fada%2Flibgnat%2Fs-dfmopr.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c4b9b2916ceb22b57d72fee8f775e02a8851d086/gcc%2Fada%2Flibgnat%2Fs-dfmopr.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fs-dfmopr.ads?ref=c4b9b2916ceb22b57d72fee8f775e02a8851d086", "patch": "@@ -0,0 +1,35 @@\n+------------------------------------------------------------------------------\n+--                                                                          --\n+--                         GNAT RUN-TIME COMPONENTS                         --\n+--                                                                          --\n+--   S Y S T E M . D I M . F L O A T _ M K S . O T H E R _ P R E F I X E S  --\n+--                                                                          --\n+--                                  S p e c                                 --\n+--                                                                          --\n+--              Copyright (C) 2018, Free Software Foundation, Inc.          --\n+--                                                                          --\n+-- GNAT is free software;  you can  redistribute it  and/or modify it under --\n+-- terms of the  GNU General Public License as published  by the Free Soft- --\n+-- ware  Foundation;  either version 3,  or (at your option) any later ver- --\n+-- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --\n+-- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n+-- or FITNESS FOR A PARTICULAR PURPOSE.                                     --\n+--                                                                          --\n+-- As a special exception under Section 7 of GPL version 3, you are granted --\n+-- additional permissions described in the GCC Runtime Library Exception,   --\n+-- version 3.1, as published by the Free Software Foundation.               --\n+--                                                                          --\n+-- You should have received a copy of the GNU General Public License and    --\n+-- a copy of the GCC Runtime Library Exception along with this program;     --\n+-- see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see    --\n+-- <http://www.gnu.org/licenses/>.                                          --\n+--                                                                          --\n+-- GNAT was originally developed  by the GNAT team at  New York University. --\n+-- Extensive contributions were provided by Ada Core Technologies Inc.      --\n+--                                                                          --\n+------------------------------------------------------------------------------\n+\n+with System.Dim.Generic_Mks.Generic_Other_Prefixes;\n+\n+package System.Dim.Float_Mks.Other_Prefixes is\n+   new System.Dim.Float_Mks.Generic_Other_Prefixes;"}, {"sha": "496056d89960dcc9f66dd55dcd995c52a2a40b3b", "filename": "gcc/ada/libgnat/s-dgmgop.ads", "status": "added", "additions": 174, "deletions": 0, "changes": 174, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c4b9b2916ceb22b57d72fee8f775e02a8851d086/gcc%2Fada%2Flibgnat%2Fs-dgmgop.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c4b9b2916ceb22b57d72fee8f775e02a8851d086/gcc%2Fada%2Flibgnat%2Fs-dgmgop.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fs-dgmgop.ads?ref=c4b9b2916ceb22b57d72fee8f775e02a8851d086", "patch": "@@ -0,0 +1,174 @@\n+------------------------------------------------------------------------------\n+--                                                                          --\n+--                         GNAT RUN-TIME COMPONENTS                         --\n+--                                                                          --\n+--              S Y S T E M . D I M . G E N E R I C _ M K S                 --\n+--            . G E N E R I C _ O T H E R _ P R E F I X E S                 --\n+--                                                                          --\n+--                                  S p e c                                 --\n+--                                                                          --\n+--           Copyright (C) 2011-2018, Free Software Foundation, Inc.        --\n+--                                                                          --\n+-- GNAT is free software;  you can  redistribute it  and/or modify it under --\n+-- terms of the  GNU General Public License as published  by the Free Soft- --\n+-- ware  Foundation;  either version 3,  or (at your option) any later ver- --\n+-- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --\n+-- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n+-- or FITNESS FOR A PARTICULAR PURPOSE.                                     --\n+--                                                                          --\n+-- As a special exception under Section 7 of GPL version 3, you are granted --\n+-- additional permissions described in the GCC Runtime Library Exception,   --\n+-- version 3.1, as published by the Free Software Foundation.               --\n+--                                                                          --\n+-- You should have received a copy of the GNU General Public License and    --\n+-- a copy of the GCC Runtime Library Exception along with this program;     --\n+-- see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see    --\n+-- <http://www.gnu.org/licenses/>.                                          --\n+--                                                                          --\n+-- GNAT was originally developed  by the GNAT team at  New York University. --\n+-- Extensive contributions were provided by Ada Core Technologies Inc.      --\n+--                                                                          --\n+------------------------------------------------------------------------------\n+\n+--  Package that defines some other prefixes for the MKS base unit system.\n+\n+--  These prefixes have been defined in a child package in order to avoid too\n+--  many constant declarations in System.Dim.Generic_Mks.\n+\n+generic\n+package System.Dim.Generic_Mks.Generic_Other_Prefixes is\n+\n+   --  SI prefixes for Meter\n+\n+   pragma Warnings (Off);\n+   --  Turn off the all the dimension warnings\n+\n+   ym  : constant Length := 1.0E-24;  -- yocto\n+   zm  : constant Length := 1.0E-21;  -- zepto\n+   am  : constant Length := 1.0E-18;  -- atto\n+   fm  : constant Length := 1.0E-15;  -- femto\n+   pm  : constant Length := 1.0E-12;  -- pico\n+   nm  : constant Length := 1.0E-09;  -- nano\n+   Gm  : constant Length := 1.0E+09;  -- giga\n+   Tm  : constant Length := 1.0E+12;  -- tera\n+   Pem : constant Length := 1.0E+15;  -- peta\n+   Em  : constant Length := 1.0E+18;  -- exa\n+   Zem : constant Length := 1.0E+21;  -- zetta\n+   Yom : constant Length := 1.0E+24;  -- yotta\n+\n+   --  SI prefixes for Kilogram\n+\n+   yg  : constant Mass := 1.0E-27;  -- yocto\n+   zg  : constant Mass := 1.0E-24;  -- zepto\n+   ag  : constant Mass := 1.0E-21;  -- atto\n+   fg  : constant Mass := 1.0E-18;  -- femto\n+   pg  : constant Mass := 1.0E-15;  -- pico\n+   ng  : constant Mass := 1.0E-12;  -- nano\n+   Gg  : constant Mass := 1.0E+06;  -- giga\n+   Tg  : constant Mass := 1.0E+09;  -- tera\n+   Peg : constant Mass := 1.0E+13;  -- peta\n+   Eg  : constant Mass := 1.0E+15;  -- exa\n+   Zeg : constant Mass := 1.0E+18;  -- zetta\n+   Yog : constant Mass := 1.0E+21;  -- yotta\n+\n+   --  SI prefixes for Second\n+\n+   ys  : constant Time := 1.0E-24;  -- yocto\n+   zs  : constant Time := 1.0E-21;  -- zepto\n+   as  : constant Time := 1.0E-18;  -- atto\n+   fs  : constant Time := 1.0E-15;  -- femto\n+   ps  : constant Time := 1.0E-12;  -- pico\n+   ns  : constant Time := 1.0E-09;  -- nano\n+   Gs  : constant Time := 1.0E+09;  -- giga\n+   Ts  : constant Time := 1.0E+12;  -- tera\n+   Pes : constant Time := 1.0E+15;  -- peta\n+   Es  : constant Time := 1.0E+18;  -- exa\n+   Zes : constant Time := 1.0E+21;  -- zetta\n+   Yos : constant Time := 1.0E+24;  -- yotta\n+\n+   --  SI prefixes for Ampere\n+\n+   yA  : constant Electric_Current := 1.0E-24;  -- yocto\n+   zA  : constant Electric_Current := 1.0E-21;  -- zepto\n+   aA  : constant Electric_Current := 1.0E-18;  -- atto\n+   fA  : constant Electric_Current := 1.0E-15;  -- femto\n+   nA  : constant Electric_Current := 1.0E-09;  -- nano\n+   uA  : constant Electric_Current := 1.0E-06;  -- micro (u)\n+   GA  : constant Electric_Current := 1.0E+09;  -- giga\n+   TA  : constant Electric_Current := 1.0E+12;  -- tera\n+   PeA : constant Electric_Current := 1.0E+15;  -- peta\n+   EA  : constant Electric_Current := 1.0E+18;  -- exa\n+   ZeA : constant Electric_Current := 1.0E+21;  -- zetta\n+   YoA : constant Electric_Current := 1.0E+24;  -- yotta\n+\n+   --  SI prefixes for Kelvin\n+\n+   yK  : constant Thermodynamic_Temperature := 1.0E-24;  -- yocto\n+   zK  : constant Thermodynamic_Temperature := 1.0E-21;  -- zepto\n+   aK  : constant Thermodynamic_Temperature := 1.0E-18;  -- atto\n+   fK  : constant Thermodynamic_Temperature := 1.0E-15;  -- femto\n+   pK  : constant Thermodynamic_Temperature := 1.0E-12;  -- pico\n+   nK  : constant Thermodynamic_Temperature := 1.0E-09;  -- nano\n+   uK  : constant Thermodynamic_Temperature := 1.0E-06;  -- micro (u)\n+   mK  : constant Thermodynamic_Temperature := 1.0E-03;  -- milli\n+   cK  : constant Thermodynamic_Temperature := 1.0E-02;  -- centi\n+   dK  : constant Thermodynamic_Temperature := 1.0E-01;  -- deci\n+   daK : constant Thermodynamic_Temperature := 1.0E+01;  -- deka\n+   hK  : constant Thermodynamic_Temperature := 1.0E+02;  -- hecto\n+   kK  : constant Thermodynamic_Temperature := 1.0E+03;  -- kilo\n+   MeK : constant Thermodynamic_Temperature := 1.0E+06;  -- mega\n+   GK  : constant Thermodynamic_Temperature := 1.0E+09;  -- giga\n+   TK  : constant Thermodynamic_Temperature := 1.0E+12;  -- tera\n+   PeK : constant Thermodynamic_Temperature := 1.0E+15;  -- peta\n+   EK  : constant Thermodynamic_Temperature := 1.0E+18;  -- exa\n+   ZeK : constant Thermodynamic_Temperature := 1.0E+21;  -- zetta\n+   YoK : constant Thermodynamic_Temperature := 1.0E+24;  -- yotta\n+\n+   --  SI prefixes for Mole\n+\n+   ymol  : constant Amount_Of_Substance := 1.0E-24;  -- yocto\n+   zmol  : constant Amount_Of_Substance := 1.0E-21;  -- zepto\n+   amol  : constant Amount_Of_Substance := 1.0E-18;  -- atto\n+   fmol  : constant Amount_Of_Substance := 1.0E-15;  -- femto\n+   pmol  : constant Amount_Of_Substance := 1.0E-12;  -- pico\n+   nmol  : constant Amount_Of_Substance := 1.0E-09;  -- nano\n+   umol  : constant Amount_Of_Substance := 1.0E-06;  -- micro (u)\n+   mmol  : constant Amount_Of_Substance := 1.0E-03;  -- milli\n+   cmol  : constant Amount_Of_Substance := 1.0E-02;  -- centi\n+   dmol  : constant Amount_Of_Substance := 1.0E-01;  -- deci\n+   damol : constant Amount_Of_Substance := 1.0E+01;  -- deka\n+   hmol  : constant Amount_Of_Substance := 1.0E+02;  -- hecto\n+   kmol  : constant Amount_Of_Substance := 1.0E+03;  -- kilo\n+   Memol : constant Amount_Of_Substance := 1.0E+06;  -- mega\n+   Gmol  : constant Amount_Of_Substance := 1.0E+09;  -- giga\n+   Tmol  : constant Amount_Of_Substance := 1.0E+12;  -- tera\n+   Pemol : constant Amount_Of_Substance := 1.0E+15;  -- peta\n+   Emol  : constant Amount_Of_Substance := 1.0E+18;  -- exa\n+   Zemol : constant Amount_Of_Substance := 1.0E+21;  -- zetta\n+   Yomol : constant Amount_Of_Substance := 1.0E+24;  -- yotta\n+\n+   --  SI prefixes for Candela\n+\n+   ycd  : constant Luminous_Intensity := 1.0E-24;  -- yocto\n+   zcd  : constant Luminous_Intensity := 1.0E-21;  -- zepto\n+   acd  : constant Luminous_Intensity := 1.0E-18;  -- atto\n+   fcd  : constant Luminous_Intensity := 1.0E-15;  -- femto\n+   pcd  : constant Luminous_Intensity := 1.0E-12;  -- pico\n+   ncd  : constant Luminous_Intensity := 1.0E-09;  -- nano\n+   ucd  : constant Luminous_Intensity := 1.0E-06;  -- micro (u)\n+   mcd  : constant Luminous_Intensity := 1.0E-03;  -- milli\n+   ccd  : constant Luminous_Intensity := 1.0E-02;  -- centi\n+   dcd  : constant Luminous_Intensity := 1.0E-01;  -- deci\n+   dacd : constant Luminous_Intensity := 1.0E+01;  -- deka\n+   hcd  : constant Luminous_Intensity := 1.0E+02;  -- hecto\n+   kcd  : constant Luminous_Intensity := 1.0E+03;  -- kilo\n+   Mecd : constant Luminous_Intensity := 1.0E+06;  -- mega\n+   Gcd  : constant Luminous_Intensity := 1.0E+09;  -- giga\n+   Tcd  : constant Luminous_Intensity := 1.0E+12;  -- tera\n+   Pecd : constant Luminous_Intensity := 1.0E+15;  -- peta\n+   Ecd  : constant Luminous_Intensity := 1.0E+18;  -- exa\n+   Zecd : constant Luminous_Intensity := 1.0E+21;  -- zetta\n+   Yocd : constant Luminous_Intensity := 1.0E+24;  -- yotta\n+\n+   pragma Warnings (On);\n+end System.Dim.Generic_Mks.Generic_Other_Prefixes;"}, {"sha": "435948e283e4e9b9ee716a64202bdb854b281acf", "filename": "gcc/ada/libgnat/s-diflmk.ads", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c4b9b2916ceb22b57d72fee8f775e02a8851d086/gcc%2Fada%2Flibgnat%2Fs-diflmk.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c4b9b2916ceb22b57d72fee8f775e02a8851d086/gcc%2Fada%2Flibgnat%2Fs-diflmk.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fs-diflmk.ads?ref=c4b9b2916ceb22b57d72fee8f775e02a8851d086", "patch": "@@ -0,0 +1,34 @@\n+------------------------------------------------------------------------------\n+--                                                                          --\n+--                         GNAT RUN-TIME COMPONENTS                         --\n+--                                                                          --\n+--                  S Y S T E M . D I M . F L O A T _ M K S                 --\n+--                                                                          --\n+--                                  S p e c                                 --\n+--                                                                          --\n+--             Copyright (C) 2018, Free Software Foundation, Inc.           --\n+--                                                                          --\n+-- GNAT is free software;  you can  redistribute it  and/or modify it under --\n+-- terms of the  GNU General Public License as published  by the Free Soft- --\n+-- ware  Foundation;  either version 3,  or (at your option) any later ver- --\n+-- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --\n+-- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n+-- or FITNESS FOR A PARTICULAR PURPOSE.                                     --\n+--                                                                          --\n+-- As a special exception under Section 7 of GPL version 3, you are granted --\n+-- additional permissions described in the GCC Runtime Library Exception,   --\n+-- version 3.1, as published by the Free Software Foundation.               --\n+--                                                                          --\n+-- You should have received a copy of the GNU General Public License and    --\n+-- a copy of the GCC Runtime Library Exception along with this program;     --\n+-- see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see    --\n+-- <http://www.gnu.org/licenses/>.                                          --\n+--                                                                          --\n+-- GNAT was originally developed  by the GNAT team at  New York University. --\n+-- Extensive contributions were provided by Ada Core Technologies Inc.      --\n+--                                                                          --\n+------------------------------------------------------------------------------\n+\n+with System.Dim.Generic_Mks;\n+\n+package System.Dim.Float_Mks is new System.Dim.Generic_Mks (Float);"}, {"sha": "4f55ad4bc3f17b03eb2fa0200338482b2cad8115", "filename": "gcc/ada/libgnat/s-digemk.ads", "status": "added", "additions": 396, "deletions": 0, "changes": 396, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c4b9b2916ceb22b57d72fee8f775e02a8851d086/gcc%2Fada%2Flibgnat%2Fs-digemk.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c4b9b2916ceb22b57d72fee8f775e02a8851d086/gcc%2Fada%2Flibgnat%2Fs-digemk.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fs-digemk.ads?ref=c4b9b2916ceb22b57d72fee8f775e02a8851d086", "patch": "@@ -0,0 +1,396 @@\n+------------------------------------------------------------------------------\n+--                                                                          --\n+--                         GNAT RUN-TIME COMPONENTS                         --\n+--                                                                          --\n+--               S Y S T E M . D I M . G E N E R I C _ M K S                --\n+--                                                                          --\n+--                                  S p e c                                 --\n+--                                                                          --\n+--          Copyright (C) 2011-2018, Free Software Foundation, Inc.         --\n+--                                                                          --\n+-- GNAT is free software;  you can  redistribute it  and/or modify it under --\n+-- terms of the  GNU General Public License as published  by the Free Soft- --\n+-- ware  Foundation;  either version 3,  or (at your option) any later ver- --\n+-- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --\n+-- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n+-- or FITNESS FOR A PARTICULAR PURPOSE.                                     --\n+--                                                                          --\n+-- As a special exception under Section 7 of GPL version 3, you are granted --\n+-- additional permissions described in the GCC Runtime Library Exception,   --\n+-- version 3.1, as published by the Free Software Foundation.               --\n+--                                                                          --\n+-- You should have received a copy of the GNU General Public License and    --\n+-- a copy of the GCC Runtime Library Exception along with this program;     --\n+-- see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see    --\n+-- <http://www.gnu.org/licenses/>.                                          --\n+--                                                                          --\n+-- GNAT was originally developed  by the GNAT team at  New York University. --\n+-- Extensive contributions were provided by Ada Core Technologies Inc.      --\n+--                                                                          --\n+------------------------------------------------------------------------------\n+\n+--  Defines the MKS dimension system which is the SI system of units\n+\n+--  Some other prefixes of this system are defined in a child package (see\n+--  System.Dim.Generic_Mks.Generic_Other_Prefixes) in order to avoid too many\n+--  constant declarations in this package.\n+\n+--  The dimension terminology is defined in System.Dim package\n+\n+with Ada.Numerics;\n+\n+generic\n+   type Float_Type is digits <>;\n+\n+package System.Dim.Generic_Mks is\n+\n+   e  : constant := Ada.Numerics.e;\n+   Pi : constant := Ada.Numerics.Pi;\n+\n+   --  Dimensioned type Mks_Type\n+\n+   type Mks_Type is new Float_Type\n+     with\n+      Dimension_System => (\n+        (Unit_Name => Meter,    Unit_Symbol => 'm',   Dim_Symbol => 'L'),\n+        (Unit_Name => Kilogram, Unit_Symbol => \"kg\",  Dim_Symbol => 'M'),\n+        (Unit_Name => Second,   Unit_Symbol => 's',   Dim_Symbol => 'T'),\n+        (Unit_Name => Ampere,   Unit_Symbol => 'A',   Dim_Symbol => 'I'),\n+        (Unit_Name => Kelvin,   Unit_Symbol => 'K',   Dim_Symbol => '@'),\n+        (Unit_Name => Mole,     Unit_Symbol => \"mol\", Dim_Symbol => 'N'),\n+        (Unit_Name => Candela,  Unit_Symbol => \"cd\",  Dim_Symbol => 'J'));\n+\n+   --  SI Base dimensioned subtypes\n+\n+   subtype Length is Mks_Type\n+     with\n+      Dimension => (Symbol => 'm',\n+        Meter  => 1,\n+        others => 0);\n+\n+   subtype Mass is Mks_Type\n+     with\n+      Dimension => (Symbol => \"kg\",\n+        Kilogram => 1,\n+        others   => 0);\n+\n+   subtype Time is Mks_Type\n+     with\n+      Dimension => (Symbol => 's',\n+        Second => 1,\n+        others => 0);\n+\n+   subtype Electric_Current is Mks_Type\n+     with\n+      Dimension => (Symbol => 'A',\n+        Ampere => 1,\n+        others => 0);\n+\n+   subtype Thermodynamic_Temperature is Mks_Type\n+     with\n+      Dimension => (Symbol => 'K',\n+        Kelvin => 1,\n+        others => 0);\n+\n+   subtype Amount_Of_Substance is Mks_Type\n+     with\n+      Dimension => (Symbol => \"mol\",\n+        Mole   => 1,\n+        others => 0);\n+\n+   subtype Luminous_Intensity is Mks_Type\n+     with\n+      Dimension => (Symbol => \"cd\",\n+        Candela => 1,\n+        others  => 0);\n+\n+   --  Initialize SI Base unit values\n+\n+   --  Turn off the all the dimension warnings for these basic assignments\n+   --  since otherwise we would get complaints about assigning dimensionless\n+   --  values to dimensioned subtypes (we can't assign 1.0*m to m).\n+\n+   pragma Warnings (Off, \"*assumed to be*\");\n+\n+   m   : constant Length                    := 1.0;\n+   kg  : constant Mass                      := 1.0;\n+   s   : constant Time                      := 1.0;\n+   A   : constant Electric_Current          := 1.0;\n+   K   : constant Thermodynamic_Temperature := 1.0;\n+   mol : constant Amount_Of_Substance       := 1.0;\n+   cd  : constant Luminous_Intensity        := 1.0;\n+\n+   pragma Warnings (On, \"*assumed to be*\");\n+\n+   --  SI Derived dimensioned subtypes\n+\n+   subtype Absorbed_Dose is Mks_Type\n+     with\n+      Dimension => (Symbol => \"Gy\",\n+        Meter  =>  2,\n+        Second => -2,\n+        others =>  0);\n+\n+   subtype Angle is Mks_Type\n+     with\n+      Dimension => (Symbol => \"rad\",\n+        others => 0);\n+\n+   subtype Area is Mks_Type\n+     with\n+      Dimension => (\n+        Meter  => 2,\n+        others => 0);\n+\n+   subtype Catalytic_Activity is Mks_Type\n+     with\n+      Dimension => (Symbol => \"kat\",\n+        Second => -1,\n+        Mole   => 1,\n+        others => 0);\n+\n+   subtype Celsius_Temperature is Mks_Type\n+     with\n+      Dimension => (Symbol => \"\u00b0C\",\n+        Kelvin => 1,\n+        others => 0);\n+\n+   subtype Electric_Capacitance is Mks_Type\n+     with\n+      Dimension => (Symbol => 'F',\n+        Meter    => -2,\n+        Kilogram => -1,\n+        Second   =>  4,\n+        Ampere   =>  2,\n+        others   =>  0);\n+\n+   subtype Electric_Charge is Mks_Type\n+     with\n+      Dimension => (Symbol => 'C',\n+        Second => 1,\n+        Ampere => 1,\n+        others => 0);\n+\n+   subtype Electric_Conductance is Mks_Type\n+     with\n+      Dimension => (Symbol => 'S',\n+        Meter    => -2,\n+        Kilogram => -1,\n+        Second   =>  3,\n+        Ampere   =>  2,\n+        others   =>  0);\n+\n+   subtype Electric_Potential_Difference is Mks_Type\n+     with\n+      Dimension => (Symbol => 'V',\n+        Meter    =>  2,\n+        Kilogram =>  1,\n+        Second   => -3,\n+        Ampere   => -1,\n+        others   =>  0);\n+\n+   --  Note the type punning below. The Symbol is a single \"ohm\" character\n+   --  encoded in UTF-8 (ce a9 in hexadecimal), but this file is not compiled\n+   --  with -gnatW8, so we're treating the string literal as a two-character\n+   --  String.\n+\n+   subtype Electric_Resistance is Mks_Type\n+     with\n+      Dimension => (Symbol => \"\u03a9\",\n+        Meter    =>  2,\n+        Kilogram =>  1,\n+        Second   => -3,\n+        Ampere   => -2,\n+        others   =>  0);\n+\n+   subtype Energy is Mks_Type\n+     with\n+      Dimension => (Symbol => 'J',\n+        Meter    =>  2,\n+        Kilogram =>  1,\n+        Second   => -2,\n+        others   =>  0);\n+\n+   subtype Equivalent_Dose is Mks_Type\n+     with\n+      Dimension => (Symbol => \"Sv\",\n+        Meter  =>  2,\n+        Second => -2,\n+        others =>  0);\n+\n+   subtype Force is Mks_Type\n+     with\n+      Dimension => (Symbol => 'N',\n+        Meter    => 1,\n+        Kilogram => 1,\n+        Second   => -2,\n+        others   => 0);\n+\n+   subtype Frequency is Mks_Type\n+     with\n+      Dimension => (Symbol => \"Hz\",\n+        Second => -1,\n+        others =>  0);\n+\n+   subtype Illuminance is Mks_Type\n+     with\n+      Dimension => (Symbol => \"lx\",\n+        Meter   => -2,\n+        Candela =>  1,\n+        others  =>  0);\n+\n+   subtype Inductance is Mks_Type\n+     with\n+      Dimension => (Symbol => 'H',\n+        Meter    =>  2,\n+        Kilogram =>  1,\n+        Second   => -2,\n+        Ampere   => -2,\n+        others   =>  0);\n+\n+   subtype Luminous_Flux is Mks_Type\n+     with\n+      Dimension => (Symbol => \"lm\",\n+        Candela => 1,\n+        others  => 0);\n+\n+   subtype Magnetic_Flux is Mks_Type\n+     with\n+      Dimension => (Symbol => \"Wb\",\n+        Meter    =>  2,\n+        Kilogram =>  1,\n+        Second   => -2,\n+        Ampere   => -1,\n+        others   =>  0);\n+\n+   subtype Magnetic_Flux_Density is Mks_Type\n+     with\n+      Dimension => (Symbol => 'T',\n+        Kilogram =>  1,\n+        Second   => -2,\n+        Ampere   => -1,\n+        others   =>  0);\n+\n+   subtype Power is Mks_Type\n+     with\n+      Dimension => (Symbol => 'W',\n+        Meter    =>  2,\n+        Kilogram =>  1,\n+        Second   => -3,\n+        others   =>  0);\n+\n+   subtype Pressure is Mks_Type\n+     with\n+      Dimension => (Symbol => \"Pa\",\n+        Meter    => -1,\n+        Kilogram =>  1,\n+        Second   => -2,\n+        others   =>  0);\n+\n+   subtype Radioactivity is Mks_Type\n+     with\n+      Dimension => (Symbol => \"Bq\",\n+        Second => -1,\n+        others =>  0);\n+\n+   subtype Solid_Angle is Mks_Type\n+     with\n+      Dimension => (Symbol => \"sr\",\n+        others => 0);\n+\n+   subtype Speed is Mks_Type\n+     with\n+      Dimension => (\n+        Meter  =>  1,\n+        Second => -1,\n+        others =>  0);\n+\n+   subtype Volume is Mks_Type\n+     with\n+      Dimension => (\n+        Meter  => 3,\n+        others => 0);\n+\n+   --  Initialize derived dimension values\n+\n+   --  Turn off the all the dimension warnings for these basic assignments\n+   --  since otherwise we would get complaints about assigning dimensionless\n+   --  values to dimensioned subtypes.\n+\n+   pragma Warnings (Off, \"*assumed to be*\");\n+\n+   rad : constant Angle                         := 1.0;\n+   sr  : constant Solid_Angle                   := 1.0;\n+   Hz  : constant Frequency                     := 1.0;\n+   N   : constant Force                         := 1.0;\n+   Pa  : constant Pressure                      := 1.0;\n+   J   : constant Energy                        := 1.0;\n+   W   : constant Power                         := 1.0;\n+   C   : constant Electric_Charge               := 1.0;\n+   V   : constant Electric_Potential_Difference := 1.0;\n+   F   : constant Electric_Capacitance          := 1.0;\n+   Ohm : constant Electric_Resistance           := 1.0;\n+   Si  : constant Electric_Conductance          := 1.0;\n+   Wb  : constant Magnetic_Flux                 := 1.0;\n+   T   : constant Magnetic_Flux_Density         := 1.0;\n+   H   : constant Inductance                    := 1.0;\n+   dC  : constant Celsius_Temperature           := 273.15;\n+   lm  : constant Luminous_Flux                 := 1.0;\n+   lx  : constant Illuminance                   := 1.0;\n+   Bq  : constant Radioactivity                 := 1.0;\n+   Gy  : constant Absorbed_Dose                 := 1.0;\n+   Sv  : constant Equivalent_Dose               := 1.0;\n+   kat : constant Catalytic_Activity            := 1.0;\n+\n+   --  SI prefixes for Meter\n+\n+   um  : constant Length := 1.0E-06;  -- micro (u)\n+   mm  : constant Length := 1.0E-03;  -- milli\n+   cm  : constant Length := 1.0E-02;  -- centi\n+   dm  : constant Length := 1.0E-01;  -- deci\n+   dam : constant Length := 1.0E+01;  -- deka\n+   hm  : constant Length := 1.0E+02;  -- hecto\n+   km  : constant Length := 1.0E+03;  -- kilo\n+   Mem : constant Length := 1.0E+06;  -- mega\n+\n+   --  SI prefixes for Kilogram\n+\n+   ug  : constant Mass := 1.0E-09;  -- micro (u)\n+   mg  : constant Mass := 1.0E-06;  -- milli\n+   cg  : constant Mass := 1.0E-05;  -- centi\n+   dg  : constant Mass := 1.0E-04;  -- deci\n+   g   : constant Mass := 1.0E-03;  -- gram\n+   dag : constant Mass := 1.0E-02;  -- deka\n+   hg  : constant Mass := 1.0E-01;  -- hecto\n+   Meg : constant Mass := 1.0E+03;  -- mega\n+\n+   --  SI prefixes for Second\n+\n+   us  : constant Time := 1.0E-06;  -- micro (u)\n+   ms  : constant Time := 1.0E-03;  -- milli\n+   cs  : constant Time := 1.0E-02;  -- centi\n+   ds  : constant Time := 1.0E-01;  -- deci\n+   das : constant Time := 1.0E+01;  -- deka\n+   hs  : constant Time := 1.0E+02;  -- hecto\n+   ks  : constant Time := 1.0E+03;  -- kilo\n+   Mes : constant Time := 1.0E+06;  -- mega\n+\n+   --  Other constants for Second\n+\n+   min  : constant Time := 60.0 * s;\n+   hour : constant Time := 60.0 * min;\n+   day  : constant Time := 24.0 * hour;\n+   year : constant Time := 365.25 * day;\n+\n+   --  SI prefixes for Ampere\n+\n+   mA  : constant Electric_Current := 1.0E-03;  -- milli\n+   cA  : constant Electric_Current := 1.0E-02;  -- centi\n+   dA  : constant Electric_Current := 1.0E-01;  -- deci\n+   daA : constant Electric_Current := 1.0E+01;  -- deka\n+   hA  : constant Electric_Current := 1.0E+02;  -- hecto\n+   kA  : constant Electric_Current := 1.0E+03;  -- kilo\n+   MeA : constant Electric_Current := 1.0E+06;  -- mega\n+\n+   pragma Warnings (On, \"*assumed to be*\");\n+end System.Dim.Generic_Mks;"}, {"sha": "2aaecaebc7640a231bd625ae1b0f7b4f1f9f8cbc", "filename": "gcc/ada/libgnat/s-dilomk.ads", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c4b9b2916ceb22b57d72fee8f775e02a8851d086/gcc%2Fada%2Flibgnat%2Fs-dilomk.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c4b9b2916ceb22b57d72fee8f775e02a8851d086/gcc%2Fada%2Flibgnat%2Fs-dilomk.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fs-dilomk.ads?ref=c4b9b2916ceb22b57d72fee8f775e02a8851d086", "patch": "@@ -0,0 +1,34 @@\n+------------------------------------------------------------------------------\n+--                                                                          --\n+--                         GNAT RUN-TIME COMPONENTS                         --\n+--                                                                          --\n+--                   S Y S T E M . D I M . L O N G _ M K S                  --\n+--                                                                          --\n+--                                  S p e c                                 --\n+--                                                                          --\n+--             Copyright (C) 2018, Free Software Foundation, Inc.           --\n+--                                                                          --\n+-- GNAT is free software;  you can  redistribute it  and/or modify it under --\n+-- terms of the  GNU General Public License as published  by the Free Soft- --\n+-- ware  Foundation;  either version 3,  or (at your option) any later ver- --\n+-- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --\n+-- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n+-- or FITNESS FOR A PARTICULAR PURPOSE.                                     --\n+--                                                                          --\n+-- As a special exception under Section 7 of GPL version 3, you are granted --\n+-- additional permissions described in the GCC Runtime Library Exception,   --\n+-- version 3.1, as published by the Free Software Foundation.               --\n+--                                                                          --\n+-- You should have received a copy of the GNU General Public License and    --\n+-- a copy of the GCC Runtime Library Exception along with this program;     --\n+-- see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see    --\n+-- <http://www.gnu.org/licenses/>.                                          --\n+--                                                                          --\n+-- GNAT was originally developed  by the GNAT team at  New York University. --\n+-- Extensive contributions were provided by Ada Core Technologies Inc.      --\n+--                                                                          --\n+------------------------------------------------------------------------------\n+\n+with System.Dim.Generic_Mks;\n+\n+package System.Dim.Long_Mks is new System.Dim.Generic_Mks (Long_Float);"}, {"sha": "bf89f1b2fda89245263527f47c6f1b42c9c81c0d", "filename": "gcc/ada/libgnat/s-dimmks.ads", "status": "modified", "additions": 2, "deletions": 361, "changes": 363, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c4b9b2916ceb22b57d72fee8f775e02a8851d086/gcc%2Fada%2Flibgnat%2Fs-dimmks.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c4b9b2916ceb22b57d72fee8f775e02a8851d086/gcc%2Fada%2Flibgnat%2Fs-dimmks.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fs-dimmks.ads?ref=c4b9b2916ceb22b57d72fee8f775e02a8851d086", "patch": "@@ -29,365 +29,6 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n---  Defines the MKS dimension system which is the SI system of units\n+with System.Dim.Generic_Mks;\n \n---  Some other prefixes of this system are defined in a child package (see\n---  System.Dim_Mks.Other_Prefixes) in order to avoid too many constant\n---  declarations in this package.\n-\n---  The dimension terminology is defined in System.Dim_IO package\n-\n-with Ada.Numerics;\n-\n-package System.Dim.Mks is\n-\n-   e  : constant := Ada.Numerics.e;\n-   Pi : constant := Ada.Numerics.Pi;\n-\n-   --  Dimensioned type Mks_Type\n-\n-   type Mks_Type is new Long_Long_Float\n-     with\n-      Dimension_System => (\n-        (Unit_Name => Meter,    Unit_Symbol => 'm',   Dim_Symbol => 'L'),\n-        (Unit_Name => Kilogram, Unit_Symbol => \"kg\",  Dim_Symbol => 'M'),\n-        (Unit_Name => Second,   Unit_Symbol => 's',   Dim_Symbol => 'T'),\n-        (Unit_Name => Ampere,   Unit_Symbol => 'A',   Dim_Symbol => 'I'),\n-        (Unit_Name => Kelvin,   Unit_Symbol => 'K',   Dim_Symbol => '@'),\n-        (Unit_Name => Mole,     Unit_Symbol => \"mol\", Dim_Symbol => 'N'),\n-        (Unit_Name => Candela,  Unit_Symbol => \"cd\",  Dim_Symbol => 'J'));\n-\n-   --  SI Base dimensioned subtypes\n-\n-   subtype Length is Mks_Type\n-     with\n-      Dimension => (Symbol => 'm',\n-        Meter  => 1,\n-        others => 0);\n-\n-   subtype Mass is Mks_Type\n-     with\n-      Dimension => (Symbol => \"kg\",\n-        Kilogram => 1,\n-        others   => 0);\n-\n-   subtype Time is Mks_Type\n-     with\n-      Dimension => (Symbol => 's',\n-        Second => 1,\n-        others => 0);\n-\n-   subtype Electric_Current is Mks_Type\n-     with\n-      Dimension => (Symbol => 'A',\n-        Ampere => 1,\n-        others => 0);\n-\n-   subtype Thermodynamic_Temperature is Mks_Type\n-     with\n-      Dimension => (Symbol => 'K',\n-        Kelvin => 1,\n-        others => 0);\n-\n-   subtype Amount_Of_Substance is Mks_Type\n-     with\n-      Dimension => (Symbol => \"mol\",\n-        Mole   => 1,\n-        others => 0);\n-\n-   subtype Luminous_Intensity is Mks_Type\n-     with\n-      Dimension => (Symbol => \"cd\",\n-        Candela => 1,\n-        others  => 0);\n-\n-   --  Initialize SI Base unit values\n-\n-   --  Turn off the all the dimension warnings for these basic assignments\n-   --  since otherwise we would get complaints about assigning dimensionless\n-   --  values to dimensioned subtypes (we can't assign 1.0*m to m).\n-\n-   pragma Warnings (Off, \"*assumed to be*\");\n-\n-   m   : constant Length                    := 1.0;\n-   kg  : constant Mass                      := 1.0;\n-   s   : constant Time                      := 1.0;\n-   A   : constant Electric_Current          := 1.0;\n-   K   : constant Thermodynamic_Temperature := 1.0;\n-   mol : constant Amount_Of_Substance       := 1.0;\n-   cd  : constant Luminous_Intensity        := 1.0;\n-\n-   pragma Warnings (On, \"*assumed to be*\");\n-\n-   --  SI Derived dimensioned subtypes\n-\n-   subtype Absorbed_Dose is Mks_Type\n-     with\n-      Dimension => (Symbol => \"Gy\",\n-        Meter  =>  2,\n-        Second => -2,\n-        others =>  0);\n-\n-   subtype Angle is Mks_Type\n-     with\n-      Dimension => (Symbol => \"rad\",\n-        others => 0);\n-\n-   subtype Area is Mks_Type\n-     with\n-      Dimension => (\n-        Meter  => 2,\n-        others => 0);\n-\n-   subtype Catalytic_Activity is Mks_Type\n-     with\n-      Dimension => (Symbol => \"kat\",\n-        Second => -1,\n-        Mole   => 1,\n-        others => 0);\n-\n-   subtype Celsius_Temperature is Mks_Type\n-     with\n-      Dimension => (Symbol => \"\u00b0C\",\n-        Kelvin => 1,\n-        others => 0);\n-\n-   subtype Electric_Capacitance is Mks_Type\n-     with\n-      Dimension => (Symbol => 'F',\n-        Meter    => -2,\n-        Kilogram => -1,\n-        Second   =>  4,\n-        Ampere   =>  2,\n-        others   =>  0);\n-\n-   subtype Electric_Charge is Mks_Type\n-     with\n-      Dimension => (Symbol => 'C',\n-        Second => 1,\n-        Ampere => 1,\n-        others => 0);\n-\n-   subtype Electric_Conductance is Mks_Type\n-     with\n-      Dimension => (Symbol => 'S',\n-        Meter    => -2,\n-        Kilogram => -1,\n-        Second   =>  3,\n-        Ampere   =>  2,\n-        others   =>  0);\n-\n-   subtype Electric_Potential_Difference is Mks_Type\n-     with\n-      Dimension => (Symbol => 'V',\n-        Meter    =>  2,\n-        Kilogram =>  1,\n-        Second   => -3,\n-        Ampere   => -1,\n-        others   =>  0);\n-\n-   --  Note the type punning below. The Symbol is a single \"ohm\" character\n-   --  encoded in UTF-8 (ce a9 in hexadecimal), but this file is not compiled\n-   --  with -gnatW8, so we're treating the string literal as a two-character\n-   --  String.\n-\n-   subtype Electric_Resistance is Mks_Type\n-     with\n-      Dimension => (Symbol => \"\u03a9\",\n-        Meter    =>  2,\n-        Kilogram =>  1,\n-        Second   => -3,\n-        Ampere   => -2,\n-        others   =>  0);\n-\n-   subtype Energy is Mks_Type\n-     with\n-      Dimension => (Symbol => 'J',\n-        Meter    =>  2,\n-        Kilogram =>  1,\n-        Second   => -2,\n-        others   =>  0);\n-\n-   subtype Equivalent_Dose is Mks_Type\n-     with\n-      Dimension => (Symbol => \"Sv\",\n-        Meter  =>  2,\n-        Second => -2,\n-        others =>  0);\n-\n-   subtype Force is Mks_Type\n-     with\n-      Dimension => (Symbol => 'N',\n-        Meter    => 1,\n-        Kilogram => 1,\n-        Second   => -2,\n-        others   => 0);\n-\n-   subtype Frequency is Mks_Type\n-     with\n-      Dimension => (Symbol => \"Hz\",\n-        Second => -1,\n-        others =>  0);\n-\n-   subtype Illuminance is Mks_Type\n-     with\n-      Dimension => (Symbol => \"lx\",\n-        Meter   => -2,\n-        Candela =>  1,\n-        others  =>  0);\n-\n-   subtype Inductance is Mks_Type\n-     with\n-      Dimension => (Symbol => 'H',\n-        Meter    =>  2,\n-        Kilogram =>  1,\n-        Second   => -2,\n-        Ampere   => -2,\n-        others   =>  0);\n-\n-   subtype Luminous_Flux is Mks_Type\n-     with\n-      Dimension => (Symbol => \"lm\",\n-        Candela => 1,\n-        others  => 0);\n-\n-   subtype Magnetic_Flux is Mks_Type\n-     with\n-      Dimension => (Symbol => \"Wb\",\n-        Meter    =>  2,\n-        Kilogram =>  1,\n-        Second   => -2,\n-        Ampere   => -1,\n-        others   =>  0);\n-\n-   subtype Magnetic_Flux_Density is Mks_Type\n-     with\n-      Dimension => (Symbol => 'T',\n-        Kilogram =>  1,\n-        Second   => -2,\n-        Ampere   => -1,\n-        others   =>  0);\n-\n-   subtype Power is Mks_Type\n-     with\n-      Dimension => (Symbol => 'W',\n-        Meter    =>  2,\n-        Kilogram =>  1,\n-        Second   => -3,\n-        others   =>  0);\n-\n-   subtype Pressure is Mks_Type\n-     with\n-      Dimension => (Symbol => \"Pa\",\n-        Meter    => -1,\n-        Kilogram =>  1,\n-        Second   => -2,\n-        others   =>  0);\n-\n-   subtype Radioactivity is Mks_Type\n-     with\n-      Dimension => (Symbol => \"Bq\",\n-        Second => -1,\n-        others =>  0);\n-\n-   subtype Solid_Angle is Mks_Type\n-     with\n-      Dimension => (Symbol => \"sr\",\n-        others => 0);\n-\n-   subtype Speed is Mks_Type\n-     with\n-      Dimension => (\n-        Meter  =>  1,\n-        Second => -1,\n-        others =>  0);\n-\n-   subtype Volume is Mks_Type\n-     with\n-      Dimension => (\n-        Meter  => 3,\n-        others => 0);\n-\n-   --  Initialize derived dimension values\n-\n-   --  Turn off the all the dimension warnings for these basic assignments\n-   --  since otherwise we would get complaints about assigning dimensionless\n-   --  values to dimensioned subtypes.\n-\n-   pragma Warnings (Off, \"*assumed to be*\");\n-\n-   rad : constant Angle                         := 1.0;\n-   sr  : constant Solid_Angle                   := 1.0;\n-   Hz  : constant Frequency                     := 1.0;\n-   N   : constant Force                         := 1.0;\n-   Pa  : constant Pressure                      := 1.0;\n-   J   : constant Energy                        := 1.0;\n-   W   : constant Power                         := 1.0;\n-   C   : constant Electric_Charge               := 1.0;\n-   V   : constant Electric_Potential_Difference := 1.0;\n-   F   : constant Electric_Capacitance          := 1.0;\n-   Ohm : constant Electric_Resistance           := 1.0;\n-   Si  : constant Electric_Conductance          := 1.0;\n-   Wb  : constant Magnetic_Flux                 := 1.0;\n-   T   : constant Magnetic_Flux_Density         := 1.0;\n-   H   : constant Inductance                    := 1.0;\n-   dC  : constant Celsius_Temperature           := 273.15;\n-   lm  : constant Luminous_Flux                 := 1.0;\n-   lx  : constant Illuminance                   := 1.0;\n-   Bq  : constant Radioactivity                 := 1.0;\n-   Gy  : constant Absorbed_Dose                 := 1.0;\n-   Sv  : constant Equivalent_Dose               := 1.0;\n-   kat : constant Catalytic_Activity            := 1.0;\n-\n-   --  SI prefixes for Meter\n-\n-   um  : constant Length := 1.0E-06;  -- micro (u)\n-   mm  : constant Length := 1.0E-03;  -- milli\n-   cm  : constant Length := 1.0E-02;  -- centi\n-   dm  : constant Length := 1.0E-01;  -- deci\n-   dam : constant Length := 1.0E+01;  -- deka\n-   hm  : constant Length := 1.0E+02;  -- hecto\n-   km  : constant Length := 1.0E+03;  -- kilo\n-   Mem : constant Length := 1.0E+06;  -- mega\n-\n-   --  SI prefixes for Kilogram\n-\n-   ug  : constant Mass := 1.0E-09;  -- micro (u)\n-   mg  : constant Mass := 1.0E-06;  -- milli\n-   cg  : constant Mass := 1.0E-05;  -- centi\n-   dg  : constant Mass := 1.0E-04;  -- deci\n-   g   : constant Mass := 1.0E-03;  -- gram\n-   dag : constant Mass := 1.0E-02;  -- deka\n-   hg  : constant Mass := 1.0E-01;  -- hecto\n-   Meg : constant Mass := 1.0E+03;  -- mega\n-\n-   --  SI prefixes for Second\n-\n-   us  : constant Time := 1.0E-06;  -- micro (u)\n-   ms  : constant Time := 1.0E-03;  -- milli\n-   cs  : constant Time := 1.0E-02;  -- centi\n-   ds  : constant Time := 1.0E-01;  -- deci\n-   das : constant Time := 1.0E+01;  -- deka\n-   hs  : constant Time := 1.0E+02;  -- hecto\n-   ks  : constant Time := 1.0E+03;  -- kilo\n-   Mes : constant Time := 1.0E+06;  -- mega\n-\n-   --  Other constants for Second\n-\n-   min  : constant Time := 60.0 * s;\n-   hour : constant Time := 60.0 * min;\n-   day  : constant Time := 24.0 * hour;\n-   year : constant Time := 365.25 * day;\n-\n-   --  SI prefixes for Ampere\n-\n-   mA  : constant Electric_Current := 1.0E-03;  -- milli\n-   cA  : constant Electric_Current := 1.0E-02;  -- centi\n-   dA  : constant Electric_Current := 1.0E-01;  -- deci\n-   daA : constant Electric_Current := 1.0E+01;  -- deka\n-   hA  : constant Electric_Current := 1.0E+02;  -- hecto\n-   kA  : constant Electric_Current := 1.0E+03;  -- kilo\n-   MeA : constant Electric_Current := 1.0E+06;  -- mega\n-\n-   pragma Warnings (On, \"*assumed to be*\");\n-end System.Dim.Mks;\n+package System.Dim.Mks is new System.Dim.Generic_Mks (Long_Long_Float);"}, {"sha": "088727ae84ae53fb9a07f0714d8dabd299c5017f", "filename": "gcc/ada/libgnat/s-dlmkio.ads", "status": "added", "additions": 38, "deletions": 0, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c4b9b2916ceb22b57d72fee8f775e02a8851d086/gcc%2Fada%2Flibgnat%2Fs-dlmkio.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c4b9b2916ceb22b57d72fee8f775e02a8851d086/gcc%2Fada%2Flibgnat%2Fs-dlmkio.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fs-dlmkio.ads?ref=c4b9b2916ceb22b57d72fee8f775e02a8851d086", "patch": "@@ -0,0 +1,38 @@\n+------------------------------------------------------------------------------\n+--                                                                          --\n+--                         GNAT RUN-TIME COMPONENTS                         --\n+--                                                                          --\n+--                S Y S T E M . D I M . L O N G _ M K S _ I O               --\n+--                                                                          --\n+--                                  S p e c                                 --\n+--                                                                          --\n+--             Copyright (C) 2018, Free Software Foundation, Inc.           --\n+--                                                                          --\n+-- GNAT is free software;  you can  redistribute it  and/or modify it under --\n+-- terms of the  GNU General Public License as published  by the Free Soft- --\n+-- ware  Foundation;  either version 3,  or (at your option) any later ver- --\n+-- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --\n+-- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n+-- or FITNESS FOR A PARTICULAR PURPOSE.                                     --\n+--                                                                          --\n+-- As a special exception under Section 7 of GPL version 3, you are granted --\n+-- additional permissions described in the GCC Runtime Library Exception,   --\n+-- version 3.1, as published by the Free Software Foundation.               --\n+--                                                                          --\n+-- You should have received a copy of the GNU General Public License and    --\n+-- a copy of the GCC Runtime Library Exception along with this program;     --\n+-- see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see    --\n+-- <http://www.gnu.org/licenses/>.                                          --\n+--                                                                          --\n+-- GNAT was originally developed  by the GNAT team at  New York University. --\n+-- Extensive contributions were provided by Ada Core Technologies Inc.      --\n+--                                                                          --\n+------------------------------------------------------------------------------\n+\n+--  Provides output facilities for the Long_Float MKS dimension system (see\n+--  System.Dim.Long_Mks and System.Dim.Float_IO).\n+\n+with System.Dim.Long_Mks; use System.Dim.Long_Mks;\n+with System.Dim.Float_IO;\n+\n+package System.Dim.Long_Mks_IO is new System.Dim.Float_IO (Mks_Type);"}, {"sha": "c9280b4e39b44a5bc48cbe33ca90fda9684ff4db", "filename": "gcc/ada/libgnat/s-dlmopr.ads", "status": "added", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c4b9b2916ceb22b57d72fee8f775e02a8851d086/gcc%2Fada%2Flibgnat%2Fs-dlmopr.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c4b9b2916ceb22b57d72fee8f775e02a8851d086/gcc%2Fada%2Flibgnat%2Fs-dlmopr.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fs-dlmopr.ads?ref=c4b9b2916ceb22b57d72fee8f775e02a8851d086", "patch": "@@ -0,0 +1,35 @@\n+------------------------------------------------------------------------------\n+--                                                                          --\n+--                         GNAT RUN-TIME COMPONENTS                         --\n+--                                                                          --\n+--    S Y S T E M . D I M . L O N G _ M K S . O T H E R _ P R E F I X E S   --\n+--                                                                          --\n+--                                  S p e c                                 --\n+--                                                                          --\n+--              Copyright (C) 2018, Free Software Foundation, Inc.          --\n+--                                                                          --\n+-- GNAT is free software;  you can  redistribute it  and/or modify it under --\n+-- terms of the  GNU General Public License as published  by the Free Soft- --\n+-- ware  Foundation;  either version 3,  or (at your option) any later ver- --\n+-- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --\n+-- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n+-- or FITNESS FOR A PARTICULAR PURPOSE.                                     --\n+--                                                                          --\n+-- As a special exception under Section 7 of GPL version 3, you are granted --\n+-- additional permissions described in the GCC Runtime Library Exception,   --\n+-- version 3.1, as published by the Free Software Foundation.               --\n+--                                                                          --\n+-- You should have received a copy of the GNU General Public License and    --\n+-- a copy of the GCC Runtime Library Exception along with this program;     --\n+-- see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see    --\n+-- <http://www.gnu.org/licenses/>.                                          --\n+--                                                                          --\n+-- GNAT was originally developed  by the GNAT team at  New York University. --\n+-- Extensive contributions were provided by Ada Core Technologies Inc.      --\n+--                                                                          --\n+------------------------------------------------------------------------------\n+\n+with System.Dim.Generic_Mks.Generic_Other_Prefixes;\n+\n+package System.Dim.Long_Mks.Other_Prefixes is\n+  new System.Dim.Long_Mks.Generic_Other_Prefixes;"}, {"sha": "041ce37a724406835b69b2aac8149c95c4b3ff1e", "filename": "gcc/ada/libgnat/s-dmotpr.ads", "status": "modified", "additions": 2, "deletions": 139, "changes": 141, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c4b9b2916ceb22b57d72fee8f775e02a8851d086/gcc%2Fada%2Flibgnat%2Fs-dmotpr.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c4b9b2916ceb22b57d72fee8f775e02a8851d086/gcc%2Fada%2Flibgnat%2Fs-dmotpr.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fs-dmotpr.ads?ref=c4b9b2916ceb22b57d72fee8f775e02a8851d086", "patch": "@@ -29,144 +29,7 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n---  Package that defines some other prefixes for the MKS base unit system.\n-\n---  These prefixes have been defined in a child package in order to avoid too\n---  many constant declarations in System.Dim_Mks.\n+with System.Dim.Generic_Mks.Generic_Other_Prefixes;\n \n package System.Dim.Mks.Other_Prefixes is\n-\n-   --  SI prefixes for Meter\n-\n-   pragma Warnings (Off);\n-   --  Turn off the all the dimension warnings\n-\n-   ym  : constant Length := 1.0E-24;  -- yocto\n-   zm  : constant Length := 1.0E-21;  -- zepto\n-   am  : constant Length := 1.0E-18;  -- atto\n-   fm  : constant Length := 1.0E-15;  -- femto\n-   pm  : constant Length := 1.0E-12;  -- pico\n-   nm  : constant Length := 1.0E-09;  -- nano\n-   Gm  : constant Length := 1.0E+09;  -- giga\n-   Tm  : constant Length := 1.0E+12;  -- tera\n-   Pem : constant Length := 1.0E+15;  -- peta\n-   Em  : constant Length := 1.0E+18;  -- exa\n-   Zem : constant Length := 1.0E+21;  -- zetta\n-   Yom : constant Length := 1.0E+24;  -- yotta\n-\n-   --  SI prefixes for Kilogram\n-\n-   yg  : constant Mass := 1.0E-27;  -- yocto\n-   zg  : constant Mass := 1.0E-24;  -- zepto\n-   ag  : constant Mass := 1.0E-21;  -- atto\n-   fg  : constant Mass := 1.0E-18;  -- femto\n-   pg  : constant Mass := 1.0E-15;  -- pico\n-   ng  : constant Mass := 1.0E-12;  -- nano\n-   Gg  : constant Mass := 1.0E+06;  -- giga\n-   Tg  : constant Mass := 1.0E+09;  -- tera\n-   Peg : constant Mass := 1.0E+13;  -- peta\n-   Eg  : constant Mass := 1.0E+15;  -- exa\n-   Zeg : constant Mass := 1.0E+18;  -- zetta\n-   Yog : constant Mass := 1.0E+21;  -- yotta\n-\n-   --  SI prefixes for Second\n-\n-   ys  : constant Time := 1.0E-24;  -- yocto\n-   zs  : constant Time := 1.0E-21;  -- zepto\n-   as  : constant Time := 1.0E-18;  -- atto\n-   fs  : constant Time := 1.0E-15;  -- femto\n-   ps  : constant Time := 1.0E-12;  -- pico\n-   ns  : constant Time := 1.0E-09;  -- nano\n-   Gs  : constant Time := 1.0E+09;  -- giga\n-   Ts  : constant Time := 1.0E+12;  -- tera\n-   Pes : constant Time := 1.0E+15;  -- peta\n-   Es  : constant Time := 1.0E+18;  -- exa\n-   Zes : constant Time := 1.0E+21;  -- zetta\n-   Yos : constant Time := 1.0E+24;  -- yotta\n-\n-   --  SI prefixes for Ampere\n-\n-   yA  : constant Electric_Current := 1.0E-24;  -- yocto\n-   zA  : constant Electric_Current := 1.0E-21;  -- zepto\n-   aA  : constant Electric_Current := 1.0E-18;  -- atto\n-   fA  : constant Electric_Current := 1.0E-15;  -- femto\n-   nA  : constant Electric_Current := 1.0E-09;  -- nano\n-   uA  : constant Electric_Current := 1.0E-06;  -- micro (u)\n-   GA  : constant Electric_Current := 1.0E+09;  -- giga\n-   TA  : constant Electric_Current := 1.0E+12;  -- tera\n-   PeA : constant Electric_Current := 1.0E+15;  -- peta\n-   EA  : constant Electric_Current := 1.0E+18;  -- exa\n-   ZeA : constant Electric_Current := 1.0E+21;  -- zetta\n-   YoA : constant Electric_Current := 1.0E+24;  -- yotta\n-\n-   --  SI prefixes for Kelvin\n-\n-   yK  : constant Thermodynamic_Temperature := 1.0E-24;  -- yocto\n-   zK  : constant Thermodynamic_Temperature := 1.0E-21;  -- zepto\n-   aK  : constant Thermodynamic_Temperature := 1.0E-18;  -- atto\n-   fK  : constant Thermodynamic_Temperature := 1.0E-15;  -- femto\n-   pK  : constant Thermodynamic_Temperature := 1.0E-12;  -- pico\n-   nK  : constant Thermodynamic_Temperature := 1.0E-09;  -- nano\n-   uK  : constant Thermodynamic_Temperature := 1.0E-06;  -- micro (u)\n-   mK  : constant Thermodynamic_Temperature := 1.0E-03;  -- milli\n-   cK  : constant Thermodynamic_Temperature := 1.0E-02;  -- centi\n-   dK  : constant Thermodynamic_Temperature := 1.0E-01;  -- deci\n-   daK : constant Thermodynamic_Temperature := 1.0E+01;  -- deka\n-   hK  : constant Thermodynamic_Temperature := 1.0E+02;  -- hecto\n-   kK  : constant Thermodynamic_Temperature := 1.0E+03;  -- kilo\n-   MeK : constant Thermodynamic_Temperature := 1.0E+06;  -- mega\n-   GK  : constant Thermodynamic_Temperature := 1.0E+09;  -- giga\n-   TK  : constant Thermodynamic_Temperature := 1.0E+12;  -- tera\n-   PeK : constant Thermodynamic_Temperature := 1.0E+15;  -- peta\n-   EK  : constant Thermodynamic_Temperature := 1.0E+18;  -- exa\n-   ZeK : constant Thermodynamic_Temperature := 1.0E+21;  -- zetta\n-   YoK : constant Thermodynamic_Temperature := 1.0E+24;  -- yotta\n-\n-   --  SI prefixes for Mole\n-\n-   ymol  : constant Amount_Of_Substance := 1.0E-24;  -- yocto\n-   zmol  : constant Amount_Of_Substance := 1.0E-21;  -- zepto\n-   amol  : constant Amount_Of_Substance := 1.0E-18;  -- atto\n-   fmol  : constant Amount_Of_Substance := 1.0E-15;  -- femto\n-   pmol  : constant Amount_Of_Substance := 1.0E-12;  -- pico\n-   nmol  : constant Amount_Of_Substance := 1.0E-09;  -- nano\n-   umol  : constant Amount_Of_Substance := 1.0E-06;  -- micro (u)\n-   mmol  : constant Amount_Of_Substance := 1.0E-03;  -- milli\n-   cmol  : constant Amount_Of_Substance := 1.0E-02;  -- centi\n-   dmol  : constant Amount_Of_Substance := 1.0E-01;  -- deci\n-   damol : constant Amount_Of_Substance := 1.0E+01;  -- deka\n-   hmol  : constant Amount_Of_Substance := 1.0E+02;  -- hecto\n-   kmol  : constant Amount_Of_Substance := 1.0E+03;  -- kilo\n-   Memol : constant Amount_Of_Substance := 1.0E+06;  -- mega\n-   Gmol  : constant Amount_Of_Substance := 1.0E+09;  -- giga\n-   Tmol  : constant Amount_Of_Substance := 1.0E+12;  -- tera\n-   Pemol : constant Amount_Of_Substance := 1.0E+15;  -- peta\n-   Emol  : constant Amount_Of_Substance := 1.0E+18;  -- exa\n-   Zemol : constant Amount_Of_Substance := 1.0E+21;  -- zetta\n-   Yomol : constant Amount_Of_Substance := 1.0E+24;  -- yotta\n-\n-   --  SI prefixes for Candela\n-\n-   ycd  : constant Luminous_Intensity := 1.0E-24;  -- yocto\n-   zcd  : constant Luminous_Intensity := 1.0E-21;  -- zepto\n-   acd  : constant Luminous_Intensity := 1.0E-18;  -- atto\n-   fcd  : constant Luminous_Intensity := 1.0E-15;  -- femto\n-   pcd  : constant Luminous_Intensity := 1.0E-12;  -- pico\n-   ncd  : constant Luminous_Intensity := 1.0E-09;  -- nano\n-   ucd  : constant Luminous_Intensity := 1.0E-06;  -- micro (u)\n-   mcd  : constant Luminous_Intensity := 1.0E-03;  -- milli\n-   ccd  : constant Luminous_Intensity := 1.0E-02;  -- centi\n-   dcd  : constant Luminous_Intensity := 1.0E-01;  -- deci\n-   dacd : constant Luminous_Intensity := 1.0E+01;  -- deka\n-   hcd  : constant Luminous_Intensity := 1.0E+02;  -- hecto\n-   kcd  : constant Luminous_Intensity := 1.0E+03;  -- kilo\n-   Mecd : constant Luminous_Intensity := 1.0E+06;  -- mega\n-   Gcd  : constant Luminous_Intensity := 1.0E+09;  -- giga\n-   Tcd  : constant Luminous_Intensity := 1.0E+12;  -- tera\n-   Pecd : constant Luminous_Intensity := 1.0E+15;  -- peta\n-   Ecd  : constant Luminous_Intensity := 1.0E+18;  -- exa\n-   Zecd : constant Luminous_Intensity := 1.0E+21;  -- zetta\n-   Yocd : constant Luminous_Intensity := 1.0E+24;  -- yotta\n-\n-   pragma Warnings (On);\n-end System.Dim.Mks.Other_Prefixes;\n+   new System.Dim.Mks.Generic_Other_Prefixes;"}]}