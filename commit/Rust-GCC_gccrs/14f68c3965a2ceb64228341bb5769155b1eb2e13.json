{"sha": "14f68c3965a2ceb64228341bb5769155b1eb2e13", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTRmNjhjMzk2NWEyY2ViNjQyMjgzNDFiYjU3NjkxNTViMWViMmUxMw==", "commit": {"author": {"name": "Andi Kleen", "email": "ak@linux.intel.com", "date": "2014-11-11T05:11:09Z"}, "committer": {"name": "Andi Kleen", "email": "ak@gcc.gnu.org", "date": "2014-11-11T05:11:09Z"}, "message": "Add illegal cilk checks to C++ front.\n\nAdd calls for several illegal Cilk cases to the C++ frontend.\nC++ usually doesn't ICE unlike C on illegal cilk, but it's\nbetter to match C in what is allowed and what is not.\n\nif (_Cilk_spawn ...) is still not errored, but at least it doesn't ICE.\n\ngcc/cp/:\n\n2014-11-10  Andi Kleen  <ak@linux.intel.com>\n\n\t* semantics.c (finish_goto_stmt): Call check_no_cilk.\n\t(finish_while_stmt_cond): Dito.\n\t(finish_do_stmt): Dito.\n\t(finish_for_cond): Dito.\n\t(finish_switch_cond): Dito.\n\nFrom-SVN: r217337", "tree": {"sha": "a73789fd2207b78d7d1e3be7c1f09c1b415ce99d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a73789fd2207b78d7d1e3be7c1f09c1b415ce99d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/14f68c3965a2ceb64228341bb5769155b1eb2e13", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/14f68c3965a2ceb64228341bb5769155b1eb2e13", "html_url": "https://github.com/Rust-GCC/gccrs/commit/14f68c3965a2ceb64228341bb5769155b1eb2e13", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/14f68c3965a2ceb64228341bb5769155b1eb2e13/comments", "author": null, "committer": null, "parents": [{"sha": "e5e442524724592b9f6e969354ba33c4f20f6ab2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e5e442524724592b9f6e969354ba33c4f20f6ab2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e5e442524724592b9f6e969354ba33c4f20f6ab2"}], "stats": {"total": 30, "additions": 30, "deletions": 0}, "files": [{"sha": "9420908683d09396f926fe5153b1916952765b45", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/14f68c3965a2ceb64228341bb5769155b1eb2e13/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/14f68c3965a2ceb64228341bb5769155b1eb2e13/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=14f68c3965a2ceb64228341bb5769155b1eb2e13", "patch": "@@ -1,3 +1,11 @@\n+2014-11-10  Andi Kleen  <ak@linux.intel.com>\n+\n+\t* semantics.c (finish_goto_stmt): Call check_no_cilk.\n+\t(finish_while_stmt_cond): Dito.\n+\t(finish_do_stmt): Dito.\n+\t(finish_for_cond): Dito.\n+\t(finish_switch_cond): Dito.\n+\n 2014-11-10  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \t* typeck.c (cp_build_binary_op): Use OPT_Wshift_count_negative and"}, {"sha": "ebd9a43b949e290981b0b3debdda24e32dd81e83", "filename": "gcc/cp/semantics.c", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/14f68c3965a2ceb64228341bb5769155b1eb2e13/gcc%2Fcp%2Fsemantics.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/14f68c3965a2ceb64228341bb5769155b1eb2e13/gcc%2Fcp%2Fsemantics.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsemantics.c?ref=14f68c3965a2ceb64228341bb5769155b1eb2e13", "patch": "@@ -625,6 +625,10 @@ finish_goto_stmt (tree destination)\n     TREE_USED (destination) = 1;\n   else\n     {\n+      if (check_no_cilk (destination,\n+\t \"Cilk array notation cannot be used as a computed goto expression\",\n+\t \"%<_Cilk_spawn%> statement cannot be used as a computed goto expression\"))\n+\tdestination = error_mark_node;\n       destination = mark_rvalue_use (destination);\n       if (!processing_template_decl)\n \t{\n@@ -796,6 +800,10 @@ begin_while_stmt (void)\n void\n finish_while_stmt_cond (tree cond, tree while_stmt, bool ivdep)\n {\n+  if (check_no_cilk (cond,\n+      \"Cilk array notation cannot be used as a condition for while statement\",\n+      \"%<_Cilk_spawn%> statement cannot be used as a condition for while statement\"))\n+    cond = error_mark_node;\n   cond = maybe_convert_cond (cond);\n   finish_cond (&WHILE_COND (while_stmt), cond);\n   begin_maybe_infinite_loop (cond);\n@@ -851,6 +859,10 @@ finish_do_body (tree do_stmt)\n void\n finish_do_stmt (tree cond, tree do_stmt, bool ivdep)\n {\n+  if (check_no_cilk (cond,\n+  \"Cilk array notation cannot be used as a condition for a do-while statement\",\n+  \"%<_Cilk_spawn%> statement cannot be used as a condition for a do-while statement\"))\n+    cond = error_mark_node;\n   cond = maybe_convert_cond (cond);\n   end_maybe_infinite_loop (cond);\n   if (ivdep && cond != error_mark_node)\n@@ -960,6 +972,10 @@ finish_for_init_stmt (tree for_stmt)\n void\n finish_for_cond (tree cond, tree for_stmt, bool ivdep)\n {\n+  if (check_no_cilk (cond,\n+\t \"Cilk array notation cannot be used in a condition for a for-loop\",\n+\t \"%<_Cilk_spawn%> statement cannot be used in a condition for a for-loop\"))\n+    cond = error_mark_node;\n   cond = maybe_convert_cond (cond);\n   finish_cond (&FOR_COND (for_stmt), cond);\n   begin_maybe_infinite_loop (cond);\n@@ -1122,6 +1138,12 @@ void\n finish_switch_cond (tree cond, tree switch_stmt)\n {\n   tree orig_type = NULL;\n+\n+  if (check_no_cilk (cond,\n+\t\"Cilk array notation cannot be used as a condition for switch statement\",\n+\t\"%<_Cilk_spawn%> statement cannot be used as a condition for switch statement\"))\n+    cond = error_mark_node;\n+\n   if (!processing_template_decl)\n     {\n       /* Convert the condition to an integer or enumeration type.  */"}]}