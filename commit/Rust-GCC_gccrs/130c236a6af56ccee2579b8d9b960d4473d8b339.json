{"sha": "130c236a6af56ccee2579b8d9b960d4473d8b339", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTMwYzIzNmE2YWY1NmNjZWUyNTc5YjhkOWI5NjBkNDQ3M2Q4YjMzOQ==", "commit": {"author": {"name": "Thomas Quinot", "email": "quinot@act-europe.fr", "date": "2004-10-27T13:54:52Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2004-10-27T13:54:52Z"}, "message": "sem_util.adb (Is_Aliased_View): Defend against the case where this subprogram is called with a parameter that...\n\n2004-10-26  Thomas Quinot  <quinot@act-europe.fr>\n\t    Ed Schonberg   <schonberg@gnat.com>\n\n\t* sem_util.adb (Is_Aliased_View): Defend against the case where this\n\tsubprogram is called with a parameter that is not an object name. This\n\tsituation arises for some cases of illegal code, which is diagnosed\n\tlater, and in this case it is wrong to call Is_Aliased, as that might\n\tcause a compiler crash.\n\t(Explain_Limited_Type): Refine previous fix to include\n\tinherited components of derived types, to provide complete information.\n\n\t* exp_ch9.adb (Set_Privals): Set the Ekind of the actual object that\n\tis the prival for a protected object.\n\tIt is necessary to mark this entity as a variable, in addition to\n\tflagging it as Aliased, because Sem_Util.Is_Aliased_View has been\n\tmodified to avoid checking the Aliased flag on entities that are not\n\tobjects. (Checking that flag for non-objects is erroneous and could\n\tlead to a compiler crash).\n\nFrom-SVN: r89674", "tree": {"sha": "4f442f9f47f7101c623fbfb3e03dc8ea8420e42c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4f442f9f47f7101c623fbfb3e03dc8ea8420e42c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/130c236a6af56ccee2579b8d9b960d4473d8b339", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/130c236a6af56ccee2579b8d9b960d4473d8b339", "html_url": "https://github.com/Rust-GCC/gccrs/commit/130c236a6af56ccee2579b8d9b960d4473d8b339", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/130c236a6af56ccee2579b8d9b960d4473d8b339/comments", "author": null, "committer": null, "parents": [{"sha": "65b03d7d594f24807a36b96e1c52c061817cc307", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/65b03d7d594f24807a36b96e1c52c061817cc307", "html_url": "https://github.com/Rust-GCC/gccrs/commit/65b03d7d594f24807a36b96e1c52c061817cc307"}], "stats": {"total": 56, "additions": 32, "deletions": 24}, "files": [{"sha": "fc8e73020e82ae993d8460ce0f792144371a2f76", "filename": "gcc/ada/exp_ch9.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/130c236a6af56ccee2579b8d9b960d4473d8b339/gcc%2Fada%2Fexp_ch9.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/130c236a6af56ccee2579b8d9b960d4473d8b339/gcc%2Fada%2Fexp_ch9.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch9.adb?ref=130c236a6af56ccee2579b8d9b960d4473d8b339", "patch": "@@ -8745,6 +8745,7 @@ package body Exp_Ch9 is\n       end loop;\n \n       P_Subtype  := Etype (Defining_Identifier (Obj_Decl));\n+      Set_Ekind (Priv, E_Variable);\n       Set_Etype (Priv, P_Subtype);\n       Set_Is_Aliased (Priv);\n       Set_Object_Ref (Body_Ent, Priv);"}, {"sha": "0fcad3ebcdd4828a69ffc90a3884704d82e25e2c", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 31, "deletions": 24, "changes": 55, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/130c236a6af56ccee2579b8d9b960d4473d8b339/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/130c236a6af56ccee2579b8d9b960d4473d8b339/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=130c236a6af56ccee2579b8d9b960d4473d8b339", "patch": "@@ -448,7 +448,7 @@ package body Sem_Util is\n          end loop;\n       end if;\n \n-      --  If none of the above, the actual and nominal subtypes are the same.\n+      --  If none of the above, the actual and nominal subtypes are the same\n \n       return Empty;\n    end Build_Actual_Subtype_Of_Component;\n@@ -609,7 +609,7 @@ package body Sem_Util is\n          end loop;\n       end if;\n \n-      --  If none of the above, the actual and nominal subtypes are the same.\n+      --  If none of the above, the actual and nominal subtypes are the same\n \n       return Empty;\n    end Build_Discriminal_Subtype_Of_Component;\n@@ -1929,12 +1929,19 @@ package body Sem_Util is\n             return;\n          end if;\n \n-         --  Otherwise find a limited component\n+         --  Otherwise find a limited component. Check only components that\n+         --  come from source, or inherited components that appear in the\n+         --  source of the ancestor.\n \n          C := First_Component (T);\n          while Present (C) loop\n             if Is_Limited_Type (Etype (C))\n-              and then Comes_From_Source (C)\n+              and then\n+                (Comes_From_Source (C)\n+                   or else\n+                     (Present (Original_Record_Component (C))\n+                       and then\n+                         Comes_From_Source (Original_Record_Component (C))))\n             then\n                Error_Msg_Node_2 := T;\n                Error_Msg_NE (\"\\component& of type& has limited type\", N, C);\n@@ -2106,7 +2113,7 @@ package body Sem_Util is\n       pragma Warnings (Off, Res);\n \n       function Internal_Full_Qualified_Name (E : Entity_Id) return String_Id;\n-      --  Compute recursively the qualified name without NUL at the end.\n+      --  Compute recursively the qualified name without NUL at the end\n \n       ----------------------------------\n       -- Internal_Full_Qualified_Name --\n@@ -2606,7 +2613,7 @@ package body Sem_Util is\n          end if;\n \n       else\n-         --  N is an expression, indicating a range with one value.\n+         --  N is an expression, indicating a range with one value\n \n          L := N;\n          H := N;\n@@ -3153,22 +3160,22 @@ package body Sem_Util is\n    begin\n       if Is_Entity_Name (Obj) then\n \n-         --  Shouldn't we check that we really have an object here?\n-         --  If we do, then a-caldel.adb blows up mysteriously ???\n-\n          E := Entity (Obj);\n \n-         return Is_Aliased (E)\n-           or else (Present (Renamed_Object (E))\n-                     and then Is_Aliased_View (Renamed_Object (E)))\n+         return\n+           (Is_Object (E)\n+             and then\n+               (Is_Aliased (E)\n+                  or else (Present (Renamed_Object (E))\n+                             and then Is_Aliased_View (Renamed_Object (E)))))\n \n            or else ((Is_Formal (E)\n                       or else Ekind (E) = E_Generic_In_Out_Parameter\n                       or else Ekind (E) = E_Generic_In_Parameter)\n                     and then Is_Tagged_Type (Etype (E)))\n \n-           or else ((Ekind (E) = E_Task_Type or else\n-                     Ekind (E) = E_Protected_Type)\n+           or else ((Ekind (E) = E_Task_Type\n+                      or else Ekind (E) = E_Protected_Type)\n                     and then In_Open_Scopes (E))\n \n             --  Current instance of type\n@@ -3237,7 +3244,7 @@ package body Sem_Util is\n       --  Determines if given object has atomic components\n \n       function Is_Atomic_Prefix (N : Node_Id) return Boolean;\n-      --  If prefix is an implicit dereference, examine designated type.\n+      --  If prefix is an implicit dereference, examine designated type\n \n       function Is_Atomic_Prefix (N : Node_Id) return Boolean is\n       begin\n@@ -3307,7 +3314,7 @@ package body Sem_Util is\n       --  that depends on a discriminant.\n \n       function Is_Declared_Within_Variant (Comp : Entity_Id) return Boolean;\n-      --  Returns True if and only if Comp is declared within a variant part.\n+      --  Returns True if and only if Comp is declared within a variant part\n \n       ------------------------------\n       -- Has_Dependent_Constraint --\n@@ -3608,7 +3615,7 @@ package body Sem_Util is\n                   if Etype (Indx) = Any_Type then\n                      return False;\n \n-                  --  If index is a range, use directly.\n+                  --  If index is a range, use directly\n \n                   elsif Nkind (Indx) = N_Range then\n                      Lbd := Low_Bound  (Indx);\n@@ -3798,7 +3805,7 @@ package body Sem_Util is\n             Into          => Components,\n             Report_Errors => Report_Errors);\n \n-         --  Check that each component present is fully initialized.\n+         --  Check that each component present is fully initialized\n \n          Comp_Elmt := First_Elmt (Components);\n \n@@ -3984,7 +3991,7 @@ package body Sem_Util is\n             when N_Explicit_Dereference =>\n                return True;\n \n-            --  A view conversion of a tagged object is an object reference.\n+            --  A view conversion of a tagged object is an object reference\n \n             when N_Type_Conversion =>\n                return Is_Tagged_Type (Etype (Subtype_Mark (N)))\n@@ -4628,7 +4635,7 @@ package body Sem_Util is\n       --  Determines if given object has volatile components\n \n       function Is_Volatile_Prefix (N : Node_Id) return Boolean;\n-      --  If prefix is an implicit dereference, examine designated type.\n+      --  If prefix is an implicit dereference, examine designated type\n \n       ------------------------\n       -- Is_Volatile_Prefix --\n@@ -4939,7 +4946,7 @@ package body Sem_Util is\n       begin\n          if No (Last) then\n \n-            --  Call node points to first actual in list.\n+            --  Call node points to first actual in list\n \n             Set_First_Named_Actual (N, Explicit_Actual_Parameter (A));\n \n@@ -5012,7 +5019,7 @@ package body Sem_Util is\n \n       elsif Actuals_To_Match > Formals_To_Match then\n \n-         --  Too many actuals: will not work.\n+         --  Too many actuals: will not work\n \n          if Reporting then\n             if Is_Entity_Name (Name (N)) then\n@@ -5442,7 +5449,7 @@ package body Sem_Util is\n             Component := First_Entity (Btype);\n             while Present (Component) loop\n \n-               --  skip anonymous types generated by constrained components.\n+               --  Skip anonymous types generated by constrained components\n \n                if not Is_Type (Component) then\n                   P := Trace_Components (Etype (Component), True);\n@@ -6374,7 +6381,7 @@ package body Sem_Util is\n       N : Node_Id := Parent (Unit_Id);\n \n    begin\n-      --  Predefined operators do not have a full function declaration.\n+      --  Predefined operators do not have a full function declaration\n \n       if Ekind (Unit_Id) = E_Operator then\n          return N;"}]}