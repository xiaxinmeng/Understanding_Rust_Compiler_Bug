{"sha": "4bc20f3a3f95e0aceb4800fb3992d9eeec41b199", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGJjMjBmM2EzZjk1ZTBhY2ViNDgwMGZiMzk5MmQ5ZWVlYzQxYjE5OQ==", "commit": {"author": {"name": "Mikael Morin", "email": "mikael@gcc.gnu.org", "date": "2010-08-04T14:17:31Z"}, "committer": {"name": "Mikael Morin", "email": "mikael@gcc.gnu.org", "date": "2010-08-04T14:17:31Z"}, "message": "re PR fortran/42051 ([OOP] ICE on array-valued function with CLASS formal argument)\n\n2010-08-04  Mikael Morin  <mikael@gcc.gnu.org>\n\n\tPR fortran/42051\n\tPR fortran/44064\n\t* symbol.c (changed_syms): Made static again.\n\t(gfc_symbol_state): Don't conditionalize on GFC_DEBUG. \n\tChanged conditional internal error into assert.\n\tRename function to ...\n\t(gfc_enforce_clean_symbol_state): ... this.\n\t* gfortran.h (gfc_symbol_state, gfc_enforce_clean_symbol_state): \n\tRename the former to the latter.\n\t* parse.c (decode_statement, decode_omp_directive,\n\tdecode_gcc_attribute): Update callers accordingly. Don't conditionalize\n\ton GFC_DEBUG.\n\t(changed_syms): Remove declaration.\n\t(next_statement): Use gfc_enforce_clean_symbol_state.\n\nFrom-SVN: r162865", "tree": {"sha": "0a936edc696b208450d6f74b52a070d1b105b8f1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0a936edc696b208450d6f74b52a070d1b105b8f1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4bc20f3a3f95e0aceb4800fb3992d9eeec41b199", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4bc20f3a3f95e0aceb4800fb3992d9eeec41b199", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4bc20f3a3f95e0aceb4800fb3992d9eeec41b199", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4bc20f3a3f95e0aceb4800fb3992d9eeec41b199/comments", "author": null, "committer": null, "parents": [{"sha": "455e6d5ba7c8c2501cad22f3ecee229cc130b87f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/455e6d5ba7c8c2501cad22f3ecee229cc130b87f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/455e6d5ba7c8c2501cad22f3ecee229cc130b87f"}], "stats": {"total": 49, "additions": 28, "deletions": 21}, "files": [{"sha": "ecf0ff257f295637e80f5c308e0613cf69b28751", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 18, "deletions": 1, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4bc20f3a3f95e0aceb4800fb3992d9eeec41b199/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4bc20f3a3f95e0aceb4800fb3992d9eeec41b199/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=4bc20f3a3f95e0aceb4800fb3992d9eeec41b199", "patch": "@@ -1,8 +1,25 @@\n+2010-08-04  Mikael Morin  <mikael@gcc.gnu.org>\n+\n+\tPR fortran/42051\n+\tPR fortran/44064\n+\t* symbol.c (changed_syms): Made static again.\n+\t(gfc_symbol_state): Don't conditionalize on GFC_DEBUG. \n+\tChanged conditional internal error into assert.\n+\tRename function to ...\n+\t(gfc_enforce_clean_symbol_state): ... this.\n+\t* gfortran.h (gfc_symbol_state, gfc_enforce_clean_symbol_state): \n+\tRename the former to the latter.\n+\t* parse.c (decode_statement, decode_omp_directive,\n+\tdecode_gcc_attribute): Update callers accordingly. Don't conditionalize\n+\ton GFC_DEBUG.\n+\t(changed_syms): Remove declaration.\n+\t(next_statement): Use gfc_enforce_clean_symbol_state.\n+\n 2010-08-04  Tobias Burnus  <burnus@net-b.de>\n \n \tPR fortran/44857\n \t* resolve.c (resolve_structure_cons): Fix handling of\n-\tinitialization structcture constructors with character\n+\tinitialization structure constructors with character\n \telements of the wrong length.\n \t* array.c (gfc_check_iter_variable): Add NULL check.\n \t(gfc_resolve_character_array_constructor): Also truncate"}, {"sha": "713533d711e6629cf9bc34308a24e33b411bb75e", "filename": "gcc/fortran/gfortran.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4bc20f3a3f95e0aceb4800fb3992d9eeec41b199/gcc%2Ffortran%2Fgfortran.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4bc20f3a3f95e0aceb4800fb3992d9eeec41b199/gcc%2Ffortran%2Fgfortran.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fgfortran.h?ref=4bc20f3a3f95e0aceb4800fb3992d9eeec41b199", "patch": "@@ -2557,7 +2557,7 @@ void gfc_traverse_ns (gfc_namespace *, void (*)(gfc_symbol *));\n void gfc_traverse_user_op (gfc_namespace *, void (*)(gfc_user_op *));\n void gfc_save_all (gfc_namespace *);\n \n-void gfc_symbol_state (void);\n+void gfc_enforce_clean_symbol_state (void);\n void gfc_free_dt_list (void);\n \n "}, {"sha": "c7f55c9ac4d92b32a798e768bdeb43c8d675ab1c", "filename": "gcc/fortran/parse.c", "status": "modified", "additions": 4, "deletions": 12, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4bc20f3a3f95e0aceb4800fb3992d9eeec41b199/gcc%2Ffortran%2Fparse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4bc20f3a3f95e0aceb4800fb3992d9eeec41b199/gcc%2Ffortran%2Fparse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fparse.c?ref=4bc20f3a3f95e0aceb4800fb3992d9eeec41b199", "patch": "@@ -236,9 +236,7 @@ decode_statement (void)\n   match m;\n   char c;\n \n-#ifdef GFC_DEBUG\n-  gfc_symbol_state ();\n-#endif\n+  gfc_enforce_clean_symbol_state ();\n \n   gfc_clear_error ();\t/* Clear any pending errors.  */\n   gfc_clear_warning ();\t/* Clear any pending warnings.  */\n@@ -484,9 +482,7 @@ decode_omp_directive (void)\n   locus old_locus;\n   char c;\n \n-#ifdef GFC_DEBUG\n-  gfc_symbol_state ();\n-#endif\n+  gfc_enforce_clean_symbol_state ();\n \n   gfc_clear_error ();\t/* Clear any pending errors.  */\n   gfc_clear_warning ();\t/* Clear any pending warnings.  */\n@@ -588,9 +584,7 @@ decode_gcc_attribute (void)\n {\n   locus old_locus;\n \n-#ifdef GFC_DEBUG\n-  gfc_symbol_state ();\n-#endif\n+  gfc_enforce_clean_symbol_state ();\n \n   gfc_clear_error ();\t/* Clear any pending errors.  */\n   gfc_clear_warning ();\t/* Clear any pending warnings.  */\n@@ -879,7 +873,6 @@ next_fixed (void)\n   return ST_NONE;\n }\n \n-extern gfc_symbol *changed_syms;\n \n /* Return the next non-ST_NONE statement to the caller.  We also worry\n    about including files and the ends of include files at this stage.  */\n@@ -890,8 +883,7 @@ next_statement (void)\n   gfc_statement st;\n   locus old_locus;\n \n-  /* We start with a clean state.  */\n-  gcc_assert (changed_syms == NULL);\n+  gfc_enforce_clean_symbol_state ();\n \n   gfc_new_block = NULL;\n "}, {"sha": "87e94e78de74b77d89b583971b0d0c0b0febccd2", "filename": "gcc/fortran/symbol.c", "status": "modified", "additions": 5, "deletions": 7, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4bc20f3a3f95e0aceb4800fb3992d9eeec41b199/gcc%2Ffortran%2Fsymbol.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4bc20f3a3f95e0aceb4800fb3992d9eeec41b199/gcc%2Ffortran%2Fsymbol.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fsymbol.c?ref=4bc20f3a3f95e0aceb4800fb3992d9eeec41b199", "patch": "@@ -98,7 +98,7 @@ gfc_namespace *gfc_global_ns_list;\n \n gfc_gsymbol *gfc_gsym_root = NULL;\n \n-gfc_symbol *changed_syms = NULL;\n+static gfc_symbol *changed_syms = NULL;\n \n gfc_dt_list *gfc_derived_types;\n \n@@ -2503,6 +2503,7 @@ gfc_free_symbol (gfc_symbol *sym)\n \n \n /* Decrease the reference counter and free memory when we reach zero.  */\n+\n void\n gfc_release_symbol (gfc_symbol *sym)\n {\n@@ -3442,16 +3443,13 @@ gfc_save_all (gfc_namespace *ns)\n }\n \n \n-#ifdef GFC_DEBUG\n /* Make sure that no changes to symbols are pending.  */\n \n void\n-gfc_symbol_state(void) {\n-\n-  if (changed_syms != NULL)\n-    gfc_internal_error(\"Symbol changes still pending!\");\n+gfc_enforce_clean_symbol_state(void)\n+{\n+  gcc_assert (changed_syms == NULL);\n }\n-#endif\n \n \n /************** Global symbol handling ************/"}]}