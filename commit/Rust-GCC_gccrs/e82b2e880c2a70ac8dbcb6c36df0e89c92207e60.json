{"sha": "e82b2e880c2a70ac8dbcb6c36df0e89c92207e60", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTgyYjJlODgwYzJhNzBhYzhkYmNiNmMzNmRmMGU4OWM5MjIwN2U2MA==", "commit": {"author": {"name": "Dodji Seketeli", "email": "dodji@redhat.com", "date": "2012-10-31T08:55:43Z"}, "committer": {"name": "Dodji Seketeli", "email": "dodji@gcc.gnu.org", "date": "2012-10-31T08:55:43Z"}, "message": "PR c++/54955 - Fail to parse alignas expr at the beginning of a declaration\n\nIn this PR, g++ embarrassingly fails to parse the simple alignas\nexpression below:\n\n    alignas(double) int f;\n\neven though the simple-declaration production in Clause 7 suggests\notherwise.\n\nFixed thus and tested on x86_64-unknown-linux-gnu against trunk.\n\ngcc/cp\n\n\tPR c++/54955\n\t* parser.c (cp_nth_tokens_can_be_std_attribute_p): Recognize the\n\t'Alignas' keyword as the beginning of a c++11 attribute specifier.\n\tUpdate the comment of the function.\n\t(cp_next_tokens_can_be_gnu_attribute_p): Update the comment of the\n\tfunction.\n\ngcc/testsuite/\n\n\tPR c++/54955\n\t* g++.dg/cpp0x/gen-attrs-48-2.C: New test.\n\nFrom-SVN: r193029", "tree": {"sha": "61626b5c962af926be3f6e96b3f80958e0255a68", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/61626b5c962af926be3f6e96b3f80958e0255a68"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e82b2e880c2a70ac8dbcb6c36df0e89c92207e60", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e82b2e880c2a70ac8dbcb6c36df0e89c92207e60", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e82b2e880c2a70ac8dbcb6c36df0e89c92207e60", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e82b2e880c2a70ac8dbcb6c36df0e89c92207e60/comments", "author": null, "committer": null, "parents": [{"sha": "d578e863b08e64789f767c95f85acd10dc477bdf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d578e863b08e64789f767c95f85acd10dc477bdf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d578e863b08e64789f767c95f85acd10dc477bdf"}], "stats": {"total": 29, "additions": 24, "deletions": 5}, "files": [{"sha": "a1abdde3f3d67809c5450f0325184a55a24f1cac", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e82b2e880c2a70ac8dbcb6c36df0e89c92207e60/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e82b2e880c2a70ac8dbcb6c36df0e89c92207e60/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=e82b2e880c2a70ac8dbcb6c36df0e89c92207e60", "patch": "@@ -1,3 +1,12 @@\n+2012-10-31  Dodji Seketeli  <dodji@redhat.com>\n+\n+\tPR c++/54955\n+\t* parser.c (cp_nth_tokens_can_be_std_attribute_p): Recognize the\n+\t'Alignas' keyword as the beginning of a c++11 attribute specifier.\n+\tUpdate the comment of the function.\n+\t(cp_next_tokens_can_be_gnu_attribute_p): Update the comment of the\n+\tfunction.\n+\n 2012-10-29  Jonathan Wakely  <jwakely.gcc@gmail.com>\n \n \tPR c++/54930"}, {"sha": "f2642aba33a55c7d1f85d4726839643013de3395", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e82b2e880c2a70ac8dbcb6c36df0e89c92207e60/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e82b2e880c2a70ac8dbcb6c36df0e89c92207e60/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=e82b2e880c2a70ac8dbcb6c36df0e89c92207e60", "patch": "@@ -20324,7 +20324,7 @@ cp_next_tokens_can_be_gnu_attribute_p (cp_parser *parser)\n }\n \n /* Return TRUE iff the next tokens in the stream are possibly the\n-   beginning of a standard C++-11 attribute.  */\n+   beginning of a standard C++-11 attribute specifier.  */\n \n static bool\n cp_next_tokens_can_be_std_attribute_p (cp_parser *parser)\n@@ -20333,17 +20333,18 @@ cp_next_tokens_can_be_std_attribute_p (cp_parser *parser)\n }\n \n /* Return TRUE iff the next Nth tokens in the stream are possibly the\n-   beginning of a standard C++-11 attribute.  */\n+   beginning of a standard C++-11 attribute specifier.  */\n \n static bool\n cp_nth_tokens_can_be_std_attribute_p (cp_parser *parser, size_t n)\n {\n   cp_token *token = cp_lexer_peek_nth_token (parser->lexer, n);\n \n   return (cxx_dialect >= cxx0x\n-\t  && token->type == CPP_OPEN_SQUARE\n-\t  && (token = cp_lexer_peek_nth_token (parser->lexer, n + 1))\n-\t  && token->type == CPP_OPEN_SQUARE);\n+\t  && ((token->type == CPP_KEYWORD && token->keyword == RID_ALIGNAS)\n+\t      || (token->type == CPP_OPEN_SQUARE\n+\t\t  && (token = cp_lexer_peek_nth_token (parser->lexer, n + 1))\n+\t\t  && token->type == CPP_OPEN_SQUARE)));\n }\n \n /* Return TRUE iff the next Nth tokens in the stream are possibly the"}, {"sha": "10f98bc76c022e8d65837bc22255685ff841ef14", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e82b2e880c2a70ac8dbcb6c36df0e89c92207e60/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e82b2e880c2a70ac8dbcb6c36df0e89c92207e60/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=e82b2e880c2a70ac8dbcb6c36df0e89c92207e60", "patch": "@@ -1,3 +1,8 @@\n+2012-10-31  Dodji Seketeli  <dodji@redhat.com>\n+\n+\tPR c++/54955\n+\t* g++.dg/cpp0x/gen-attrs-48-2.C: New test.\n+\n 2012-10-31  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR tree-optimization/19105"}, {"sha": "3cc58976b03d29ea586f1531907415ba46ec5169", "filename": "gcc/testsuite/g++.dg/cpp0x/gen-attrs-48-2.C", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e82b2e880c2a70ac8dbcb6c36df0e89c92207e60/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fgen-attrs-48-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e82b2e880c2a70ac8dbcb6c36df0e89c92207e60/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fgen-attrs-48-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fgen-attrs-48-2.C?ref=e82b2e880c2a70ac8dbcb6c36df0e89c92207e60", "patch": "@@ -0,0 +1,4 @@\n+// Origin: PR c++/54955\n+// { dg-do compile { target c++11 } }\n+\n+alignas(double) int f;"}]}