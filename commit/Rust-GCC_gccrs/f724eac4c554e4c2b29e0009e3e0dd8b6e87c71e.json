{"sha": "f724eac4c554e4c2b29e0009e3e0dd8b6e87c71e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjcyNGVhYzRjNTU0ZTRjMmIyOWUwMDA5ZTNlMGRkOGI2ZTg3YzcxZQ==", "commit": {"author": {"name": "Mark Mitchell", "email": "mark@codesourcery.com", "date": "2006-10-12T04:35:56Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "2006-10-12T04:35:56Z"}, "message": "re PR c++/29175 (ICE on invalid C++ variable length array)\n\n\tPR c++/29175\n\t* decl.c (check_initializer): Issue errors about trying to\n\tinitialize arrays whose elements have variable size.\n\tPR c++/29175\n\t* g++.dg/init/array24.C: New test.\n\nFrom-SVN: r117658", "tree": {"sha": "96f4f1c81af000b0bbabeeff0e01537893b6f984", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/96f4f1c81af000b0bbabeeff0e01537893b6f984"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f724eac4c554e4c2b29e0009e3e0dd8b6e87c71e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f724eac4c554e4c2b29e0009e3e0dd8b6e87c71e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f724eac4c554e4c2b29e0009e3e0dd8b6e87c71e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f724eac4c554e4c2b29e0009e3e0dd8b6e87c71e/comments", "author": null, "committer": null, "parents": [{"sha": "8c166806c82b6dab5be1db904867f9a0cd315807", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8c166806c82b6dab5be1db904867f9a0cd315807", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8c166806c82b6dab5be1db904867f9a0cd315807"}], "stats": {"total": 66, "additions": 49, "deletions": 17}, "files": [{"sha": "1ac313bbf2b53e130e252d3d51d6135c0d848566", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f724eac4c554e4c2b29e0009e3e0dd8b6e87c71e/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f724eac4c554e4c2b29e0009e3e0dd8b6e87c71e/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=f724eac4c554e4c2b29e0009e3e0dd8b6e87c71e", "patch": "@@ -1,3 +1,9 @@\n+2006-10-11  Mark Mitchell  <mark@codesourcery.com>\n+\n+\tPR c++/29175\n+\t* decl.c (check_initializer): Issue errors about trying to\n+\tinitialize arrays whose elements have variable size.\n+\n 2006-10-11  Lee Millward  <lee.millward@codesourcery.com>\n \n \tPR c++/29024"}, {"sha": "e95870dc6cf2649ca30bb28515ee368074689916", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 31, "deletions": 17, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f724eac4c554e4c2b29e0009e3e0dd8b6e87c71e/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f724eac4c554e4c2b29e0009e3e0dd8b6e87c71e/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=f724eac4c554e4c2b29e0009e3e0dd8b6e87c71e", "patch": "@@ -4703,32 +4703,46 @@ check_initializer (tree decl, tree init, int flags, tree *cleanup)\n \n   if (type == error_mark_node)\n     /* We will have already complained.  */\n-    init = NULL_TREE;\n-  else if (init && COMPLETE_TYPE_P (type)\n-\t   && !TREE_CONSTANT (TYPE_SIZE (type)))\n-    {\n-      error (\"variable-sized object %qD may not be initialized\", decl);\n-      init = NULL_TREE;\n-    }\n-  else if (TREE_CODE (type) == ARRAY_TYPE\n-\t   && !COMPLETE_TYPE_P (complete_type (TREE_TYPE (type))))\n+    return NULL_TREE;\n+\n+  if (TREE_CODE (type) == ARRAY_TYPE)\n     {\n-      error (\"elements of array %q#D have incomplete type\", decl);\n-      init = NULL_TREE;\n+      tree element_type = TREE_TYPE (type);\n+\n+      /* The array type itself need not be complete, because the\n+\t initializer may tell us how many elements are in the array.\n+\t But, the elements of the array must be complete.  */\n+      if (!COMPLETE_TYPE_P (complete_type (element_type)))\n+\t{\n+\t  error (\"elements of array %q#D have incomplete type\", decl);\n+\t  return NULL_TREE;\n+\t}\n+      /* It is not valid to initialize an a VLA.  */\n+      if (init\n+\t  && ((COMPLETE_TYPE_P (type) && !TREE_CONSTANT (TYPE_SIZE (type)))\n+\t      || !TREE_CONSTANT (TYPE_SIZE (element_type))))\n+\t{\n+\t  error (\"variable-sized object %qD may not be initialized\", decl);\n+\t  return NULL_TREE;\n+\t}\n     }\n-  else if (TREE_CODE (type) != ARRAY_TYPE && !COMPLETE_TYPE_P (type))\n+  else if (!COMPLETE_TYPE_P (type))\n     {\n       error (\"%qD has incomplete type\", decl);\n       TREE_TYPE (decl) = error_mark_node;\n-      init = NULL_TREE;\n+      return NULL_TREE;\n     }\n-  else if (!CP_AGGREGATE_TYPE_P (type)\n-\t   && init && BRACE_ENCLOSED_INITIALIZER_P (init)\n-\t   && VEC_length (constructor_elt, CONSTRUCTOR_ELTS (init)) != 1)\n+  else\n+    /* There is no way to make a variable-sized class type in GNU C++.  */\n+    gcc_assert (TREE_CONSTANT (TYPE_SIZE (type)));\n+  \n+  if (!CP_AGGREGATE_TYPE_P (type)\n+      && init && BRACE_ENCLOSED_INITIALIZER_P (init)\n+      && VEC_length (constructor_elt, CONSTRUCTOR_ELTS (init)) != 1)\n     {\n       error (\"scalar object %qD requires one element in initializer\", decl);\n       TREE_TYPE (decl) = error_mark_node;\n-      init = NULL_TREE;\n+      return NULL_TREE;\n     }\n \n   if (TREE_CODE (decl) == CONST_DECL)"}, {"sha": "3de03fb69c492103094afd6da7d66819bcf6af70", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f724eac4c554e4c2b29e0009e3e0dd8b6e87c71e/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f724eac4c554e4c2b29e0009e3e0dd8b6e87c71e/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=f724eac4c554e4c2b29e0009e3e0dd8b6e87c71e", "patch": "@@ -1,3 +1,8 @@\n+2006-10-11  Mark Mitchell  <mark@codesourcery.com>\n+\n+\tPR c++/29175\n+\t* g++.dg/init/array24.C: New test.\n+\n 2006-10-11  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n \t* gcc.dg/builtins-config.h: Move Solaris section after inclusion"}, {"sha": "ed4c1d881fe3f6305c6f3f22daf19700a1dca704", "filename": "gcc/testsuite/g++.dg/init/array24.C", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f724eac4c554e4c2b29e0009e3e0dd8b6e87c71e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finit%2Farray24.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f724eac4c554e4c2b29e0009e3e0dd8b6e87c71e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finit%2Farray24.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finit%2Farray24.C?ref=f724eac4c554e4c2b29e0009e3e0dd8b6e87c71e", "patch": "@@ -0,0 +1,7 @@\n+// PR c++/29175\n+// { dg-options \"\" }\n+\n+void foo(int i)\n+{\n+  int x[][i] = { 0 }; // { dg-error \"variable-sized|storage size\" }\n+}"}]}