{"sha": "04ab45732d614e660f0c82cfdf488b93e87a730b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDRhYjQ1NzMyZDYxNGU2NjBmMGM4MmNmZGY0ODhiOTNlODdhNzMwYg==", "commit": {"author": {"name": "Kyle Galloway", "email": "kgallowa@redhat.com", "date": "2007-02-07T23:28:04Z"}, "committer": {"name": "Kyle Galloway", "email": "kgallowa@gcc.gnu.org", "date": "2007-02-07T23:28:04Z"}, "message": "jvmti.cc (CHECK_FOR_NATIVE_METHOD): New macro.\n\n2007-02-07  Kyle Galloway  <kgallowa@redhat.com>\n\n    * jvmti.cc (CHECK_FOR_NATIVE_METHOD): New macro.\n    (_Jv_JVMTI_GetMaxLocals): New method.\n    * include/java-interp.h\n    (_Jv_InterpMethod::get_max_locals): New method.\n\nFrom-SVN: r121700", "tree": {"sha": "2038b56ebfb3636da8769eab3a6f9a836e9d878c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2038b56ebfb3636da8769eab3a6f9a836e9d878c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/04ab45732d614e660f0c82cfdf488b93e87a730b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/04ab45732d614e660f0c82cfdf488b93e87a730b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/04ab45732d614e660f0c82cfdf488b93e87a730b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/04ab45732d614e660f0c82cfdf488b93e87a730b/comments", "author": null, "committer": null, "parents": [{"sha": "304237321beb69a8b617f4118fbde440e7b8415a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/304237321beb69a8b617f4118fbde440e7b8415a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/304237321beb69a8b617f4118fbde440e7b8415a"}], "stats": {"total": 51, "additions": 50, "deletions": 1}, "files": [{"sha": "3ced148aa4c4b21b52764ff7ede44d4912fb90cc", "filename": "libjava/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/04ab45732d614e660f0c82cfdf488b93e87a730b/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/04ab45732d614e660f0c82cfdf488b93e87a730b/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=04ab45732d614e660f0c82cfdf488b93e87a730b", "patch": "@@ -1,3 +1,10 @@\n+2007-02-07  Kyle Galloway  <kgallowa@redhat.com>\n+\n+    * jvmti.cc (CHECK_FOR_NATIVE_METHOD): New macro.\n+    (_Jv_JVMTI_GetMaxLocals): New method.\n+    * include/java-interp.h\n+    (_Jv_InterpMethod::get_max_locals): New method.\n+\n 2007-02-01 Marco Trudel <mtrudel@gmx.ch>\n \n \t* jni.cc (_Jv_JNI_DeleteWeakGlobalRef): Check for NULL objects."}, {"sha": "1370ef1de50e44f306f987fe2c6c3d809b8aee9f", "filename": "libjava/include/java-interp.h", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/04ab45732d614e660f0c82cfdf488b93e87a730b/libjava%2Finclude%2Fjava-interp.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/04ab45732d614e660f0c82cfdf488b93e87a730b/libjava%2Finclude%2Fjava-interp.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Finclude%2Fjava-interp.h?ref=04ab45732d614e660f0c82cfdf488b93e87a730b", "patch": "@@ -219,6 +219,11 @@ class _Jv_InterpMethod : public _Jv_MethodBase\n    */\n   void get_line_table (jlong& start, jlong& end, jintArray& line_numbers,\n \t\t       jlongArray& code_indices);\n+  \n+  int get_max_locals ()\n+  {\n+    return static_cast<int> (max_locals);\n+  }\n \n   /* Installs a break instruction at the given code index. Returns\n      the pc_t of the breakpoint or NULL if index is invalid. */"}, {"sha": "ba4ee817d4726d99faa4c9994c5550d679fe6ccc", "filename": "libjava/jvmti.cc", "status": "modified", "additions": 38, "deletions": 1, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/04ab45732d614e660f0c82cfdf488b93e87a730b/libjava%2Fjvmti.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/04ab45732d614e660f0c82cfdf488b93e87a730b/libjava%2Fjvmti.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjvmti.cc?ref=04ab45732d614e660f0c82cfdf488b93e87a730b", "patch": "@@ -155,6 +155,18 @@ ReentrantReadWriteLock *_envListLock = NULL;\n     }\t\t\t\t\t\t\\\n   while (0)\n \n+#define CHECK_FOR_NATIVE_METHOD(AjmethodID)\t\\\n+  do\t\t\t\t\t\\\n+    {\t\t\t\t\t\\\n+      jboolean is_native;\t\t\\\n+      jvmtiError jerr = env->IsMethodNative (AjmethodID, &is_native);\t\\\n+      if (jerr != JVMTI_ERROR_NONE)\t\t\t\t\t\\\n+        return jerr;\t\t\t\t\t\t\t\\\n+      if (is_native)\t\t\t\t\t\t\t\\\n+        return JVMTI_ERROR_NATIVE_METHOD;\t\t\t        \\\n+    }\t\t\t\t\t\t\t\t\t\\\n+  while (0)\n+\n static jvmtiError JNICALL\n _Jv_JVMTI_SuspendThread (MAYBE_UNUSED jvmtiEnv *env, jthread thread)\n {\n@@ -729,6 +741,31 @@ _Jv_JVMTI_IsMethodSynthetic (MAYBE_UNUSED jvmtiEnv *env, jmethodID method,\n   return JVMTI_ERROR_NONE;\n }\n \n+static jvmtiError JNICALL\n+_Jv_JVMTI_GetMaxLocals (MAYBE_UNUSED jvmtiEnv *env, jmethodID method,\n+                        jint *max_locals)\n+{\n+  REQUIRE_PHASE (env, JVMTI_PHASE_START | JVMTI_PHASE_LIVE);\n+  NULL_CHECK (max_locals);\n+  \n+  CHECK_FOR_NATIVE_METHOD (method);\n+  \n+  jclass klass;\n+  jvmtiError jerr = env->GetMethodDeclaringClass (method, &klass);\n+  if (jerr != JVMTI_ERROR_NONE)\n+    return jerr;\n+\n+  _Jv_InterpMethod *imeth = reinterpret_cast<_Jv_InterpMethod *> \n+                              (_Jv_FindInterpreterMethod (klass, method));\n+    \n+  if (imeth == NULL)\n+    return JVMTI_ERROR_INVALID_METHODID;\n+  \n+  *max_locals = imeth->get_max_locals ();\n+  \n+  return JVMTI_ERROR_NONE;\n+}\n+\n static jvmtiError JNICALL\n _Jv_JVMTI_GetMethodDeclaringClass (MAYBE_UNUSED jvmtiEnv *env,\n \t\t\t\t   jmethodID method,\n@@ -1656,7 +1693,7 @@ struct _Jv_jvmtiEnv _Jv_JVMTI_Interface =\n   _Jv_JVMTI_GetMethodDeclaringClass,  // GetMethodDeclaringClass\n   _Jv_JVMTI_GetMethodModifiers,\t// GetMethodModifers\n   RESERVED,\t\t\t// reserved67\n-  UNIMPLEMENTED,\t\t// GetMaxLocals\n+  _Jv_JVMTI_GetMaxLocals,\t\t// GetMaxLocals\n   UNIMPLEMENTED,\t\t// GetArgumentsSize\n   _Jv_JVMTI_GetLineNumberTable,\t// GetLineNumberTable\n   UNIMPLEMENTED,\t\t// GetMethodLocation"}]}