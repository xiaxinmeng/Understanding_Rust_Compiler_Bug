{"sha": "373577962c7c6324ce0aa967088a736568a48e0c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzczNTc3OTYyYzdjNjMyNGNlMGFhOTY3MDg4YTczNjU2OGE0OGUwYw==", "commit": {"author": {"name": "Richard Earnshaw", "email": "rearnsha@arm.com", "date": "2000-11-13T13:35:26Z"}, "committer": {"name": "Richard Earnshaw", "email": "rearnsha@gcc.gnu.org", "date": "2000-11-13T13:35:26Z"}, "message": "varasm.c (struct constant_descriptor): Put CONTENTS inside a union to make it well-aligned.\n\n* varasm.c (struct constant_descriptor): Put CONTENTS inside a\nunion to make it well-aligned.  Update all uses.\n\nFrom-SVN: r37422", "tree": {"sha": "43f40ee6c0644a2670e655822e337fdf50fb05d6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/43f40ee6c0644a2670e655822e337fdf50fb05d6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/373577962c7c6324ce0aa967088a736568a48e0c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/373577962c7c6324ce0aa967088a736568a48e0c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/373577962c7c6324ce0aa967088a736568a48e0c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/373577962c7c6324ce0aa967088a736568a48e0c/comments", "author": null, "committer": null, "parents": [{"sha": "26d4fec72e0319f2af9416ceaa9c76430b9e808d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/26d4fec72e0319f2af9416ceaa9c76430b9e808d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/26d4fec72e0319f2af9416ceaa9c76430b9e808d"}], "stats": {"total": 27, "additions": 20, "deletions": 7}, "files": [{"sha": "85cc062cda4ba37a82cf1128717c483bab9efcd7", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/373577962c7c6324ce0aa967088a736568a48e0c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/373577962c7c6324ce0aa967088a736568a48e0c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=373577962c7c6324ce0aa967088a736568a48e0c", "patch": "@@ -1,3 +1,8 @@\n+2000-11-13  Richard Earnshaw  <rearnsha@arm.com>\n+\n+\t* varasm.c (struct constant_descriptor): Put CONTENTS inside a\n+\tunion to make it well-aligned.  Update all uses.\n+\n 2000-11-13  Joseph S. Myers  <jsm28@cam.ac.uk>\n \n \t* c-parse.in (initelt): Give appropriate pedantic warnings,"}, {"sha": "a6e65fd240035356163029be77314b67e07d0139", "filename": "gcc/varasm.c", "status": "modified", "additions": 15, "deletions": 7, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/373577962c7c6324ce0aa967088a736568a48e0c/gcc%2Fvarasm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/373577962c7c6324ce0aa967088a736568a48e0c/gcc%2Fvarasm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvarasm.c?ref=373577962c7c6324ce0aa967088a736568a48e0c", "patch": "@@ -2327,7 +2327,16 @@ struct constant_descriptor\n   struct constant_descriptor *next;\n   char *label;\n   rtx rtl;\n-  unsigned char contents[1];\n+  /* Make sure the data is reasonably aligned.  */\n+  union \n+  {\n+    unsigned char contents[1];\n+#ifdef HAVE_LONG_DOUBLE\n+    long double d;\n+#else\n+    double d;\n+#endif\n+  } u;\n };\n \n #define HASHBITS 30\n@@ -2477,7 +2486,7 @@ compare_constant (exp, desc)\n      tree exp;\n      struct constant_descriptor *desc;\n {\n-  return 0 != compare_constant_1 (exp, desc->contents);\n+  return 0 != compare_constant_1 (exp, desc->u.contents);\n }\n \n /* Compare constant expression EXP with a substring P of a constant descriptor.\n@@ -3475,7 +3484,7 @@ compare_constant_rtx (mode, x, desc)\n      rtx x;\n      struct constant_descriptor *desc;\n {\n-  register int *p = (int *) desc->contents;\n+  register int *p = (int *) desc->u.contents;\n   register int *strp;\n   register int len;\n   struct rtx_const value;\n@@ -3503,10 +3512,9 @@ record_constant_rtx (mode, x)\n   struct constant_descriptor *ptr;\n \n   ptr = ((struct constant_descriptor *) \n-\t xcalloc (1, \n-\t\t  (sizeof (struct constant_descriptor) \n-\t\t   + sizeof (struct rtx_const) - 1)));\n-  decode_rtx_const (mode, x, (struct rtx_const *) ptr->contents);\n+\t xcalloc (1, (offsetof (struct constant_descriptor, u)\n+\t\t      + sizeof (struct rtx_const))));\n+  decode_rtx_const (mode, x, (struct rtx_const *) ptr->u.contents);\n \n   return ptr;\n }"}]}