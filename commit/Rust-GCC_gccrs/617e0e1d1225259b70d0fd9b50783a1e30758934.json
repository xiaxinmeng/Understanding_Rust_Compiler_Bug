{"sha": "617e0e1d1225259b70d0fd9b50783a1e30758934", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjE3ZTBlMWQxMjI1MjU5YjcwZDBmZDliNTA3ODNhMWUzMDc1ODkzNA==", "commit": {"author": {"name": "Daniel Berlin", "email": "dan@cgsoftware.com", "date": "2001-12-09T18:49:30Z"}, "committer": {"name": "Daniel Berlin", "email": "dberlin@gcc.gnu.org", "date": "2001-12-09T18:49:30Z"}, "message": "rs6000.h (enum rs6000_builtins): Add remaining altivec builtins (VCF?X, VCT?XS, VSEL, V*EFP, VRFI*).\n\n2001-12-09  Daniel Berlin  <dan@cgsoftware.com>\n\n\t* config/rs6000/rs6000.h (enum rs6000_builtins): Add remaining\n\taltivec builtins (VCF?X, VCT?XS, VSEL, V*EFP, VRFI*).\n\n\t* config/rs6000/rs6000.c: Ditto.\n\n\t* config/rs6000/rs6000.md: Ditto.\n\nFrom-SVN: r47814", "tree": {"sha": "b415cc905d0411373535cf3a7b48b55d2621d0dd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b415cc905d0411373535cf3a7b48b55d2621d0dd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/617e0e1d1225259b70d0fd9b50783a1e30758934", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/617e0e1d1225259b70d0fd9b50783a1e30758934", "html_url": "https://github.com/Rust-GCC/gccrs/commit/617e0e1d1225259b70d0fd9b50783a1e30758934", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/617e0e1d1225259b70d0fd9b50783a1e30758934/comments", "author": null, "committer": null, "parents": [{"sha": "271e6f02a18b2d480c55b7bdee57bc4de7edc02a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/271e6f02a18b2d480c55b7bdee57bc4de7edc02a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/271e6f02a18b2d480c55b7bdee57bc4de7edc02a"}], "stats": {"total": 225, "additions": 212, "deletions": 13}, "files": [{"sha": "a94566044f389071b8f373251d23420d18c3b86c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/617e0e1d1225259b70d0fd9b50783a1e30758934/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/617e0e1d1225259b70d0fd9b50783a1e30758934/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=617e0e1d1225259b70d0fd9b50783a1e30758934", "patch": "@@ -1,3 +1,12 @@\n+2001-12-09  Daniel Berlin  <dan@cgsoftware.com>\n+\n+\t* config/rs6000/rs6000.h (enum rs6000_builtins): Add remaining\n+\taltivec builtins (VCF?X, VCT?XS, VSEL, V*EFP, VRFI*).\n+\n+\t* config/rs6000/rs6000.c: Ditto.\n+\n+\t* config/rs6000/rs6000.md: Ditto.\n+\n 2001-12-09  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n \t* 1750a.md: Add default case in switch."}, {"sha": "0203ff45580256555294fdc5361fb8121d4a39f6", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 63, "deletions": 8, "changes": 71, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/617e0e1d1225259b70d0fd9b50783a1e30758934/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/617e0e1d1225259b70d0fd9b50783a1e30758934/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=617e0e1d1225259b70d0fd9b50783a1e30758934", "patch": "@@ -3021,11 +3021,15 @@ static const struct builtin_description bdesc_3arg[] =\n     { MASK_ALTIVEC, CODE_FOR_altivec_vmsumshm, \"__builtin_altivec_vmsumshm\", ALTIVEC_BUILTIN_VMSUMSHM },\n     { MASK_ALTIVEC, CODE_FOR_altivec_vmsumuhs, \"__builtin_altivec_vmsumuhs\", ALTIVEC_BUILTIN_VMSUMUHS },\n     { MASK_ALTIVEC, CODE_FOR_altivec_vmsumshs, \"__builtin_altivec_vmsumshs\", ALTIVEC_BUILTIN_VMSUMSHS },\n-    { MASK_ALTIVEC, CODE_FOR_altivec_vnmsubfp, \"__builtin_altivec_vnmsubfp\", ALTIVEC_BUILTIN_VNMSUBFP },\n+    { MASK_ALTIVEC, CODE_FOR_altivec_vnmsubfp, \"__builtin_altivec_vnmsubfp\", ALTIVEC_BUILTIN_VNMSUBFP }, \n     { MASK_ALTIVEC, CODE_FOR_altivec_vperm_4sf, \"__builtin_altivec_vperm_4sf\", ALTIVEC_BUILTIN_VPERM_4SF },\n     { MASK_ALTIVEC, CODE_FOR_altivec_vperm_4si, \"__builtin_altivec_vperm_4si\", ALTIVEC_BUILTIN_VPERM_4SI },\n     { MASK_ALTIVEC, CODE_FOR_altivec_vperm_8hi, \"__builtin_altivec_vperm_8hi\", ALTIVEC_BUILTIN_VPERM_8HI },\n     { MASK_ALTIVEC, CODE_FOR_altivec_vperm_16qi, \"__builtin_altivec_vperm_16qi\", ALTIVEC_BUILTIN_VPERM_16QI },\n+    { MASK_ALTIVEC, CODE_FOR_altivec_vsel_4sf, \"__builtin_altivec_vsel_4sf\", ALTIVEC_BUILTIN_VSEL_4SF },\n+    { MASK_ALTIVEC, CODE_FOR_altivec_vsel_4si, \"__builtin_altivec_vsel_4si\", ALTIVEC_BUILTIN_VSEL_4SI },\n+    { MASK_ALTIVEC, CODE_FOR_altivec_vsel_8hi, \"__builtin_altivec_vsel_8hi\", ALTIVEC_BUILTIN_VSEL_8HI },\n+    { MASK_ALTIVEC, CODE_FOR_altivec_vsel_16qi, \"__builtin_altivec_vsel_16qi\", ALTIVEC_BUILTIN_VSEL_16QI },\n   };\n \n /* Simple binary operations: VECc = foo (VECa, VECb).  */\n@@ -3050,6 +3054,8 @@ static const struct builtin_description bdesc_2arg[] =\n   { MASK_ALTIVEC, CODE_FOR_altivec_vavgsh, \"__builtin_altivec_vavgsh\", ALTIVEC_BUILTIN_VAVGSH },\n   { MASK_ALTIVEC, CODE_FOR_altivec_vavguw, \"__builtin_altivec_vavguw\", ALTIVEC_BUILTIN_VAVGUW },\n   { MASK_ALTIVEC, CODE_FOR_altivec_vavgsw, \"__builtin_altivec_vavgsw\", ALTIVEC_BUILTIN_VAVGSW },\n+  { MASK_ALTIVEC, CODE_FOR_altivec_vcfux, \"__builtin_altivec_vcfux\", ALTIVEC_BUILTIN_VCFUX },\n+  { MASK_ALTIVEC, CODE_FOR_altivec_vcfsx, \"__builtin_altivec_vcfsx\", ALTIVEC_BUILTIN_VCFSX },\n   { MASK_ALTIVEC, CODE_FOR_altivec_vcmpbfp, \"__builtin_altivec_vcmpbfp\", ALTIVEC_BUILTIN_VCMPBFP },\n   { MASK_ALTIVEC, CODE_FOR_altivec_vcmpequb, \"__builtin_altivec_vcmpequb\", ALTIVEC_BUILTIN_VCMPEQUB },\n   { MASK_ALTIVEC, CODE_FOR_altivec_vcmpequh, \"__builtin_altivec_vcmpequh\", ALTIVEC_BUILTIN_VCMPEQUH },\n@@ -3063,6 +3069,8 @@ static const struct builtin_description bdesc_2arg[] =\n   { MASK_ALTIVEC, CODE_FOR_altivec_vcmpgtuw, \"__builtin_altivec_vcmpgtuw\", ALTIVEC_BUILTIN_VCMPGTUW },\n   { MASK_ALTIVEC, CODE_FOR_altivec_vcmpgtsw, \"__builtin_altivec_vcmpgtsw\", ALTIVEC_BUILTIN_VCMPGTSW },\n   { MASK_ALTIVEC, CODE_FOR_altivec_vcmpgtfp, \"__builtin_altivec_vcmpgtfp\", ALTIVEC_BUILTIN_VCMPGTFP },\n+  { MASK_ALTIVEC, CODE_FOR_altivec_vctsxs, \"__builtin_altivec_vctsxs\", ALTIVEC_BUILTIN_VCTSXS },\n+  { MASK_ALTIVEC, CODE_FOR_altivec_vctuxs, \"__builtin_altivec_vctuxs\", ALTIVEC_BUILTIN_VCTUXS },\n   { MASK_ALTIVEC, CODE_FOR_umaxv16qi3, \"__builtin_altivec_vmaxub\", ALTIVEC_BUILTIN_VMAXUB },\n   { MASK_ALTIVEC, CODE_FOR_smaxv16qi3, \"__builtin_altivec_vmaxsb\", ALTIVEC_BUILTIN_VMAXSB },\n   { MASK_ALTIVEC, CODE_FOR_uminv8hi3, \"__builtin_altivec_vmaxuh\", ALTIVEC_BUILTIN_VMAXUH },\n@@ -3141,9 +3149,18 @@ static const struct builtin_description bdesc_2arg[] =\n   { MASK_ALTIVEC, CODE_FOR_altivec_vsumsws, \"__builtin_altivec_vsumsws\", ALTIVEC_BUILTIN_VSUMSWS },\n   { MASK_ALTIVEC, CODE_FOR_xorv4si3, \"__builtin_altivec_vxor\", ALTIVEC_BUILTIN_VXOR },\n };\n-/* Simple unary operations: VECb = foo (unsigned literal).  */\n+/* Simple unary operations: VECb = foo (unsigned literal) or VECb =\n+   foo (VECa).  */\n static const struct builtin_description bdesc_1arg[] =\n {\n+  { MASK_ALTIVEC, CODE_FOR_altivec_vexptefp, \"__builtin_altivec_vexptefp\", ALTIVEC_BUILTIN_VEXPTEFP },\n+  { MASK_ALTIVEC, CODE_FOR_altivec_vlogefp, \"__builtin_altivec_vlogefp\", ALTIVEC_BUILTIN_VLOGEFP },\n+  { MASK_ALTIVEC, CODE_FOR_altivec_vrefp, \"__builtin_altivec_vrefp\", ALTIVEC_BUILTIN_VREFP },\n+  { MASK_ALTIVEC, CODE_FOR_altivec_vrfim, \"__builtin_altivec_vrfim\", ALTIVEC_BUILTIN_VRFIM },\n+  { MASK_ALTIVEC, CODE_FOR_altivec_vrfin, \"__builtin_altivec_vrfin\", ALTIVEC_BUILTIN_VRFIN },\n+  { MASK_ALTIVEC, CODE_FOR_altivec_vrfip, \"__builtin_altivec_vrfip\", ALTIVEC_BUILTIN_VRFIP },\n+  { MASK_ALTIVEC, CODE_FOR_ftruncv4sf2, \"__builtin_altivec_vrfiz\", ALTIVEC_BUILTIN_VRFIZ },\n+  { MASK_ALTIVEC, CODE_FOR_altivec_vrsqrtefp, \"__builtin_altivec_vrsqrtefp\", ALTIVEC_BUILTIN_VRSQRTEFP },\n   { MASK_ALTIVEC, CODE_FOR_altivec_vspltisb, \"__builtin_altivec_vspltisb\", ALTIVEC_BUILTIN_VSPLTISB },\n   { MASK_ALTIVEC, CODE_FOR_altivec_vspltish, \"__builtin_altivec_vspltish\", ALTIVEC_BUILTIN_VSPLTISH },\n   { MASK_ALTIVEC, CODE_FOR_altivec_vspltisw, \"__builtin_altivec_vspltisw\", ALTIVEC_BUILTIN_VSPLTISW },\n@@ -3524,6 +3541,10 @@ altivec_init_builtins (void)\n   tree v16qi_ftype_char\n     = build_function_type (V16QI_type_node,\n \t\t           tree_cons (NULL_TREE, char_type_node, endlink));\n+  /* V4SF foo (V4SF) */\n+  tree v4sf_ftype_v4sf\n+    = build_function_type (V4SF_type_node,\n+\t\t\t   tree_cons (NULL_TREE, V4SF_type_node, endlink));\n \n   /* V4SI foo (int *).  */\n   tree v4si_ftype_pint\n@@ -3573,6 +3594,16 @@ altivec_init_builtins (void)\n \t\t\t\t      tree_cons (NULL_TREE, V4SI_type_node,\n \t\t\t\t\t\t endlink)));\n  /* These are really for the unsigned 5 bit literals */ \n+  tree v4sf_ftype_v4si_char\n+    = build_function_type (V4SF_type_node,\n+\t\t\t   tree_cons (NULL_TREE, V4SI_type_node,\n+\t\t\t\t      tree_cons (NULL_TREE, char_type_node,\n+\t\t\t\t\t\t endlink)));\n+  tree v4si_ftype_v4sf_char\n+    = build_function_type (V4SI_type_node,\n+\t\t\t   tree_cons (NULL_TREE, V4SF_type_node,\n+\t\t\t\t      tree_cons (NULL_TREE, char_type_node,\n+\t\t\t\t\t\t endlink)));\n   tree v4si_ftype_v4si_char\n     = build_function_type (V4SI_type_node,\n \t\t\t   tree_cons (NULL_TREE, V4SI_type_node,\n@@ -3594,14 +3625,27 @@ altivec_init_builtins (void)\n \t\t\t   tree_cons (NULL_TREE, V4SF_type_node,\n \t\t\t\t      tree_cons (NULL_TREE, V4SF_type_node,\n \t\t\t\t\t\t endlink)));\n-\n+  tree v4sf_ftype_v4sf_v4sf_v4si\n+    = build_function_type (V4SF_type_node,\n+\t\t\t   tree_cons (NULL_TREE, V4SF_type_node,\n+\t\t\t\t      tree_cons (NULL_TREE, V4SF_type_node,\n+\t\t\t\t\t\t tree_cons (NULL_TREE,\n+\t\t\t\t\t\t\t    V4SI_type_node,\n+\t\t\t\t\t\t\t    endlink))));\n   tree v4sf_ftype_v4sf_v4sf_v4sf\n     = build_function_type (V4SF_type_node,\n \t\t\t   tree_cons (NULL_TREE, V4SF_type_node,\n \t\t\t\t      tree_cons (NULL_TREE, V4SF_type_node,\n \t\t\t\t\t\t tree_cons (NULL_TREE, \n \t\t\t\t\t\t\t    V4SF_type_node,\n \t\t\t\t\t\t\t    endlink))));\n+  tree v4si_ftype_v4si_v4si_v4si \n+    = build_function_type (V4SI_type_node,\n+\t\t\t   tree_cons (NULL_TREE, V4SI_type_node,\n+\t\t\t\t      tree_cons (NULL_TREE, V4SI_type_node,\n+\t\t\t\t\t\t tree_cons (NULL_TREE,\n+\t\t\t\t\t\t\t    V4SI_type_node,\n+\t\t\t\t\t\t\t    endlink))));\n \n   tree v8hi_ftype_v8hi_v8hi\n     = build_function_type (V8HI_type_node,\n@@ -3732,6 +3776,9 @@ altivec_init_builtins (void)\n \t{\n \t  switch (mode0)\n \t    {\n+\t    case V4SImode:\n+\t      type = v4si_ftype_v4si_v4si_v4si;\n+\t      break;\n \t    case V4SFmode:\n \t      type = v4sf_ftype_v4sf_v4sf_v4sf;\n \t      break;\n@@ -3767,15 +3814,13 @@ altivec_init_builtins (void)\n \t}\n       else if (mode0 == V4SImode && mode1 == V16QImode && mode2 == V16QImode \n \t       && mode3 == V4SImode)\n-\t{\n \t  type = v4si_ftype_v16qi_v16qi_v4si;\n-\t}\n       else if (mode0 == V4SImode && mode1 == V8HImode && mode2 == V8HImode \n \t       && mode3 == V4SImode)\n-\t{\n \t  type = v4si_ftype_v8hi_v8hi_v4si;\n-\t}\n-      \n+      else if (mode0 == V4SFmode && mode1 == V4SFmode && mode2 == V4SFmode \n+\t       && mode3 == V4SImode)\n+\t  type = v4sf_ftype_v4sf_v4sf_v4si;\n       else\n \tabort ();\n \n@@ -3860,6 +3905,14 @@ altivec_init_builtins (void)\n       else if (mode0 == V16QImode && mode1 == V16QImode && mode2 == QImode)\n \ttype = v16qi_ftype_v16qi_char;\n \n+      /* vfloat, vint, 5 bit literal.  */\n+      else if (mode0 == V4SFmode && mode1 == V4SImode && mode2 == QImode)\n+\ttype = v4sf_ftype_v4si_char;\n+      \n+      /* vint, vfloat, 5 bit literal.  */\n+      else if (mode0 == V4SImode && mode1 == V4SFmode && mode2 == QImode)\n+\ttype = v4si_ftype_v4sf_char;\n+\n       /* fixme: aldyh */\n       /* int, x, x.  */\n       else if (mode0 == SImode)\n@@ -3907,6 +3960,8 @@ altivec_init_builtins (void)\n         type = v8hi_ftype_char;\n       else if (mode0 == V16QImode && mode1 == QImode)\n         type = v16qi_ftype_char;\n+      else if (mode0 == V4SFmode && mode1 == V4SFmode)\n+\ttype = v4sf_ftype_v4sf;\n       else\n \tabort ();\n "}, {"sha": "14f38a166c86ef35a77dc98d41eacd165863f1f2", "filename": "gcc/config/rs6000/rs6000.h", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/617e0e1d1225259b70d0fd9b50783a1e30758934/gcc%2Fconfig%2Frs6000%2Frs6000.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/617e0e1d1225259b70d0fd9b50783a1e30758934/gcc%2Fconfig%2Frs6000%2Frs6000.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.h?ref=617e0e1d1225259b70d0fd9b50783a1e30758934", "patch": "@@ -2909,6 +2909,10 @@ enum rs6000_builtins\n   ALTIVEC_BUILTIN_VAVGSH,\n   ALTIVEC_BUILTIN_VAVGUW,\n   ALTIVEC_BUILTIN_VAVGSW,\n+  ALTIVEC_BUILTIN_VCFUX,\n+  ALTIVEC_BUILTIN_VCFSX,\n+  ALTIVEC_BUILTIN_VCTSXS,\n+  ALTIVEC_BUILTIN_VCTUXS,\n   ALTIVEC_BUILTIN_VCMPBFP,\n   ALTIVEC_BUILTIN_VCMPEQUB,\n   ALTIVEC_BUILTIN_VCMPEQUH,\n@@ -2922,6 +2926,8 @@ enum rs6000_builtins\n   ALTIVEC_BUILTIN_VCMPGTUW,\n   ALTIVEC_BUILTIN_VCMPGTSW,\n   ALTIVEC_BUILTIN_VCMPGTFP,\n+  ALTIVEC_BUILTIN_VEXPTEFP,\n+  ALTIVEC_BUILTIN_VLOGEFP,\n   ALTIVEC_BUILTIN_VMADDFP,\n   ALTIVEC_BUILTIN_VMAXUB,\n   ALTIVEC_BUILTIN_VMAXSB,\n@@ -2963,6 +2969,10 @@ enum rs6000_builtins\n   ALTIVEC_BUILTIN_VNMSUBFP,\n   ALTIVEC_BUILTIN_VNOR,\n   ALTIVEC_BUILTIN_VOR,\n+  ALTIVEC_BUILTIN_VSEL_4SI,\n+  ALTIVEC_BUILTIN_VSEL_4SF,\n+  ALTIVEC_BUILTIN_VSEL_8HI,\n+  ALTIVEC_BUILTIN_VSEL_16QI,\n   ALTIVEC_BUILTIN_VPERM_4SI,\n   ALTIVEC_BUILTIN_VPERM_4SF,\n   ALTIVEC_BUILTIN_VPERM_8HI,\n@@ -2978,9 +2988,15 @@ enum rs6000_builtins\n   ALTIVEC_BUILTIN_VPKSHUS,\n   ALTIVEC_BUILTIN_VPKUWUS,\n   ALTIVEC_BUILTIN_VPKSWUS,\n+  ALTIVEC_BUILTIN_VREFP,\n+  ALTIVEC_BUILTIN_VRFIM,\n+  ALTIVEC_BUILTIN_VRFIN,\n+  ALTIVEC_BUILTIN_VRFIP,\n+  ALTIVEC_BUILTIN_VRFIZ,\n   ALTIVEC_BUILTIN_VRLB,\n   ALTIVEC_BUILTIN_VRLH,\n   ALTIVEC_BUILTIN_VRLW,\n+  ALTIVEC_BUILTIN_VRSQRTEFP,\n   ALTIVEC_BUILTIN_VSLB,\n   ALTIVEC_BUILTIN_VSLH,\n   ALTIVEC_BUILTIN_VSLW,"}, {"sha": "af9422bbbf858b159e17531e065e9c155aae135b", "filename": "gcc/config/rs6000/rs6000.md", "status": "modified", "additions": 124, "deletions": 5, "changes": 129, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/617e0e1d1225259b70d0fd9b50783a1e30758934/gcc%2Fconfig%2Frs6000%2Frs6000.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/617e0e1d1225259b70d0fd9b50783a1e30758934/gcc%2Fconfig%2Frs6000%2Frs6000.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.md?ref=617e0e1d1225259b70d0fd9b50783a1e30758934", "patch": "@@ -15046,11 +15046,11 @@\n   [(set_attr \"type\" \"vecsimple\")])\n \n (define_insn \"ftruncv4sf2\"\n-   [(set (match_operand:V4SF 0 \"register_operand\" \"=v\")\n-   \t (fix:V4SF (match_operand:V4SF 1 \"register_operand\" \"v\")))]\n-   \"TARGET_ALTIVEC\"\n-   \"vrfiz %0, %1\"\n-   [(set_attr \"type\" \"vecfloat\")])\n+  [(set (match_operand:V4SF 0 \"register_operand\" \"=v\")\n+  \t(fix:V4SF (match_operand:V4SF 1 \"register_operand\" \"v\")))]\n+  \"TARGET_ALTIVEC\"\n+  \"vrfiz %0, %1\"\n+  [(set_attr \"type\" \"vecfloat\")])\n \n (define_insn \"altivec_vperm_4si\"\n   [(set (match_operand:V4SI 0 \"register_operand\" \"=v\")\n@@ -15087,3 +15087,122 @@\n   \"TARGET_ALTIVEC\"\n   \"vperm %0,%1,%2,%3\"\n   [(set_attr \"type\" \"vecperm\")])\n+\n+(define_insn \"altivec_vrfip\"\n+  [(set (match_operand:V4SF 0 \"register_operand\" \"=v\")\n+        (unspec:V4SF [(match_operand:V4SF 1 \"register_operand\" \"v\")] 148))]\n+  \"TARGET_ALTIVEC\"\n+  \"vrfip %0, %1\"\n+  [(set_attr \"type\" \"vecfloat\")])\n+\n+(define_insn \"altivec_vrfin\"\n+  [(set (match_operand:V4SF 0 \"register_operand\" \"=v\")\n+        (unspec:V4SF [(match_operand:V4SF 1 \"register_operand\" \"v\")] 149))]\n+  \"TARGET_ALTIVEC\"\n+  \"vrfin %0, %1\"\n+  [(set_attr \"type\" \"vecfloat\")])\n+\n+(define_insn \"altivec_vrfim\"\n+  [(set (match_operand:V4SF 0 \"register_operand\" \"=v\")\n+        (unspec:V4SF [(match_operand:V4SF 1 \"register_operand\" \"v\")] 150))]\n+  \"TARGET_ALTIVEC\"\n+  \"vrfim %0, %1\"\n+  [(set_attr \"type\" \"vecfloat\")])\n+\n+(define_insn \"altivec_vcfux\"\n+  [(set (match_operand:V4SF 0 \"register_operand\" \"=v\")\n+        (unspec:V4SF [(match_operand:V4SI 1 \"register_operand\" \"v\")\n+\t              (match_operand:QI 2 \"immediate_operand\" \"i\")] 151))]\n+  \"TARGET_ALTIVEC\"\n+  \"vcfux %0, %1, %2\"\n+  [(set_attr \"type\" \"vecfloat\")])\n+\n+(define_insn \"altivec_vcfsx\"\n+  [(set (match_operand:V4SF 0 \"register_operand\" \"=v\")\n+        (unspec:V4SF [(match_operand:V4SI 1 \"register_operand\" \"v\")\n+\t              (match_operand:QI 2 \"immediate_operand\" \"i\")] 152))]\n+  \"TARGET_ALTIVEC\"\n+  \"vcfsx %0, %1, %2\"\n+  [(set_attr \"type\" \"vecfloat\")])\n+\n+(define_insn \"altivec_vctuxs\"\n+  [(set (match_operand:V4SI 0 \"register_operand\" \"=v\")\n+        (unspec:V4SI [(match_operand:V4SF 1 \"register_operand\" \"v\")\n+                      (match_operand:QI 2 \"immediate_operand\" \"i\")] 153))]\n+  \"TARGET_ALTIVEC\"\n+  \"vctusx %0, %1, %2\"\n+  [(set_attr \"type\" \"vecfloat\")])\n+\n+(define_insn \"altivec_vctsxs\"\n+  [(set (match_operand:V4SI 0 \"register_operand\" \"=v\")\n+        (unspec:V4SI [(match_operand:V4SF 1 \"register_operand\" \"v\")\n+                      (match_operand:QI 2 \"immediate_operand\" \"i\")] 154))]\n+  \"TARGET_ALTIVEC\"\n+  \"vctsxs %0, %1, %2\"\n+  [(set_attr \"type\" \"vecfloat\")])\n+\n+(define_insn \"altivec_vlogefp\"\n+  [(set (match_operand:V4SF 0 \"register_operand\" \"=v\")\n+        (unspec:V4SF [(match_operand:V4SF 1 \"register_operand\" \"v\")] 155))]\n+  \"TARGET_ALTIVEC\"\n+  \"vlogefp %0, %1\"\n+  [(set_attr \"type\" \"vecfloat\")])\n+\n+(define_insn \"altivec_vexptefp\"\n+  [(set (match_operand:V4SF 0 \"register_operand\" \"=v\")\n+        (unspec:V4SF [(match_operand:V4SF 1 \"register_operand\" \"v\")] 156))]\n+  \"TARGET_ALTIVEC\"\n+  \"vexptefp %0, %1\"\n+  [(set_attr \"type\" \"vecfloat\")])\n+\n+(define_insn \"altivec_vrsqrtefp\"\n+  [(set (match_operand:V4SF 0 \"register_operand\" \"=v\")\n+        (unspec:V4SF [(match_operand:V4SF 1 \"register_operand\" \"v\")] 157))]\n+  \"TARGET_ALTIVEC\"\n+  \"vrsqrtefp %0, %1\"\n+  [(set_attr \"type\" \"vecfloat\")])\n+\n+(define_insn \"altivec_vrefp\"\n+  [(set (match_operand:V4SF 0 \"register_operand\" \"=v\")\n+        (unspec:V4SF [(match_operand:V4SF 1 \"register_operand\" \"v\")] 158))]\n+  \"TARGET_ALTIVEC\"\n+  \"vrefp %0, %1\"\n+  [(set_attr \"type\" \"vecfloat\")])\n+\n+(define_insn \"altivec_vsel_4si\"\n+  [(set (match_operand:V4SI 0 \"register_operand\" \"=v\")\n+        (unspec:V4SI [(match_operand:V4SI 1 \"register_operand\" \"v\")\n+                      (match_operand:V4SI 2 \"register_operand\" \"v\")\n+                      (match_operand:V4SI 3 \"register_operand\" \"v\")] 159))]\n+  \"TARGET_ALTIVEC\"\n+  \"vsel %0,%1,%2,%3\"\n+  [(set_attr \"type\" \"vecperm\")])\n+\n+(define_insn \"altivec_vsel_4sf\"\n+  [(set (match_operand:V4SF 0 \"register_operand\" \"=v\")\n+        (unspec:V4SF [(match_operand:V4SF 1 \"register_operand\" \"v\")\n+                      (match_operand:V4SF 2 \"register_operand\" \"v\")\n+                      (match_operand:V4SI 3 \"register_operand\" \"v\")] 160))]\n+  \"TARGET_ALTIVEC\"\n+  \"vsel %0,%1,%2,%3\"\n+  [(set_attr \"type\" \"vecperm\")])\n+\n+(define_insn \"altivec_vsel_8hi\"\n+  [(set (match_operand:V8HI 0 \"register_operand\" \"=v\")\n+        (unspec:V8HI [(match_operand:V8HI 1 \"register_operand\" \"v\")\n+                      (match_operand:V8HI 2 \"register_operand\" \"v\")\n+                      (match_operand:V8HI 3 \"register_operand\" \"v\")] 161))]\n+  \"TARGET_ALTIVEC\"\n+  \"vsel %0,%1,%2,%3\"\n+  [(set_attr \"type\" \"vecperm\")])\n+\n+(define_insn \"altivec_vsel_16qi\"\n+  [(set (match_operand:V16QI 0 \"register_operand\" \"=v\")\n+        (unspec:V16QI [(match_operand:V16QI 1 \"register_operand\" \"v\")\n+                       (match_operand:V16QI 2 \"register_operand\" \"v\")\n+                       (match_operand:V16QI 3 \"register_operand\" \"v\")] 162))]\n+  \"TARGET_ALTIVEC\"\n+  \"vsel %0,%1,%2,%3\"\n+  [(set_attr \"type\" \"vecperm\")])\n+\n+"}]}