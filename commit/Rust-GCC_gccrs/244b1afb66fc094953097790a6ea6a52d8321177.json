{"sha": "244b1afb66fc094953097790a6ea6a52d8321177", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjQ0YjFhZmI2NmZjMDk0OTUzMDk3NzkwYTZlYTZhNTJkODMyMTE3Nw==", "commit": {"author": {"name": "Richard Earnshaw", "email": "rearnsha@arm.com", "date": "2003-10-24T08:47:18Z"}, "committer": {"name": "Richard Earnshaw", "email": "rearnsha@gcc.gnu.org", "date": "2003-10-24T08:47:18Z"}, "message": "arm.c (note_invalid_constants): Try to extract the constant pool value using avoid_constant_pool_reference...\n\n* arm.c (note_invalid_constants): Try to extract the constant\npool value using avoid_constant_pool_reference; only use\nget_pool_constant if that returns the original reference.\n\nFrom-SVN: r72883", "tree": {"sha": "938cb1276268aee27afea9ca9cf019afd17f5c4b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/938cb1276268aee27afea9ca9cf019afd17f5c4b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/244b1afb66fc094953097790a6ea6a52d8321177", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/244b1afb66fc094953097790a6ea6a52d8321177", "html_url": "https://github.com/Rust-GCC/gccrs/commit/244b1afb66fc094953097790a6ea6a52d8321177", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/244b1afb66fc094953097790a6ea6a52d8321177/comments", "author": null, "committer": null, "parents": [{"sha": "bb88593883c783c600c89b8d1e5d7973c90d3f5a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bb88593883c783c600c89b8d1e5d7973c90d3f5a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bb88593883c783c600c89b8d1e5d7973c90d3f5a"}], "stats": {"total": 26, "additions": 23, "deletions": 3}, "files": [{"sha": "794eb0190d29141fec40fe5a96bac13dfff0a40a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/244b1afb66fc094953097790a6ea6a52d8321177/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/244b1afb66fc094953097790a6ea6a52d8321177/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=244b1afb66fc094953097790a6ea6a52d8321177", "patch": "@@ -1,3 +1,9 @@\n+2003-10-24  Richard Earnshaw  <rearnsha@arm.com>\n+\n+\t* arm.c (note_invalid_constants): Try to extract the constant\n+\tpool value using avoid_constant_pool_reference; only use\n+\tget_pool_constant if that returns the original reference.\n+\n 2003-10-24  Jan Hubicka  <jh@suse.cz>\n \n \tPR c++/12624"}, {"sha": "2b1bf7a138986abbd0d6b70116a5ecd29cd69431", "filename": "gcc/config/arm/arm.c", "status": "modified", "additions": 17, "deletions": 3, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/244b1afb66fc094953097790a6ea6a52d8321177/gcc%2Fconfig%2Farm%2Farm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/244b1afb66fc094953097790a6ea6a52d8321177/gcc%2Fconfig%2Farm%2Farm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.c?ref=244b1afb66fc094953097790a6ea6a52d8321177", "patch": "@@ -6894,9 +6894,23 @@ note_invalid_constants (rtx insn, HOST_WIDE_INT address, int do_pushes)\n \t\t   && CONSTANT_POOL_ADDRESS_P (XEXP (op, 0)))\n \t    {\n \t      if (do_pushes)\n-\t\tpush_minipool_fix (insn, address, recog_data.operand_loc[opno],\n-\t\t\t\t   recog_data.operand_mode[opno],\n-\t\t\t\t   get_pool_constant (XEXP (op, 0)));\n+\t\t{\n+\t\t  rtx cop = avoid_constant_pool_reference (op);\n+\n+\t\t  /* Casting the address of something to a mode narrower\n+\t\t     than a word can cause avoid_constant_pool_reference()\n+\t\t     to return the pool reference itself.  That's no good to\n+\t\t     us here.  Lets just hope that we can use the \n+\t\t     constant pool value directly.  */\n+\t\t  if (op == cop)\n+\t\t    op = get_pool_constant (XEXP (op, 0));\n+\t\t  else\n+\t\t    op = cop;\n+\n+\t\t  push_minipool_fix (insn, address,\n+\t\t\t\t     recog_data.operand_loc[opno],\n+\t\t\t\t     recog_data.operand_mode[opno], op);\n+\t\t}\n \n \t      result = true;\n \t    }"}]}