{"sha": "f472a17cb413f5fedaa2647f885b681de8690dba", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjQ3MmExN2NiNDEzZjVmZWRhYTI2NDdmODg1YjY4MWRlODY5MGRiYQ==", "commit": {"author": {"name": "Andreas Schwab", "email": "schwab@suse.de", "date": "2000-09-06T14:45:28Z"}, "committer": {"name": "Andreas Schwab", "email": "schwab@gcc.gnu.org", "date": "2000-09-06T14:45:28Z"}, "message": "mklibgcc.in: Emit rule for libgcc-stage-start.\n\n* mklibgcc.in: Emit rule for libgcc-stage-start.\n* Makefile.in (stage1-start, stage2-start, stage3-start,\nstage4-start): Don't handle libgcc here, use libgcc.mk instead.\n\nFrom-SVN: r36200", "tree": {"sha": "f4cad65ecc15d38812cd280cf4b8a4e0766848e8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f4cad65ecc15d38812cd280cf4b8a4e0766848e8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f472a17cb413f5fedaa2647f885b681de8690dba", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f472a17cb413f5fedaa2647f885b681de8690dba", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f472a17cb413f5fedaa2647f885b681de8690dba", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f472a17cb413f5fedaa2647f885b681de8690dba/comments", "author": {"login": "andreas-schwab", "id": 2175493, "node_id": "MDQ6VXNlcjIxNzU0OTM=", "avatar_url": "https://avatars.githubusercontent.com/u/2175493?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andreas-schwab", "html_url": "https://github.com/andreas-schwab", "followers_url": "https://api.github.com/users/andreas-schwab/followers", "following_url": "https://api.github.com/users/andreas-schwab/following{/other_user}", "gists_url": "https://api.github.com/users/andreas-schwab/gists{/gist_id}", "starred_url": "https://api.github.com/users/andreas-schwab/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andreas-schwab/subscriptions", "organizations_url": "https://api.github.com/users/andreas-schwab/orgs", "repos_url": "https://api.github.com/users/andreas-schwab/repos", "events_url": "https://api.github.com/users/andreas-schwab/events{/privacy}", "received_events_url": "https://api.github.com/users/andreas-schwab/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "6d93bca4fe46bda40f97b51344b0b25580a98c8f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6d93bca4fe46bda40f97b51344b0b25580a98c8f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6d93bca4fe46bda40f97b51344b0b25580a98c8f"}], "stats": {"total": 38, "additions": 30, "deletions": 8}, "files": [{"sha": "22221c41a4dafe3c4de957acc1c4163c1a79e948", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f472a17cb413f5fedaa2647f885b681de8690dba/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f472a17cb413f5fedaa2647f885b681de8690dba/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f472a17cb413f5fedaa2647f885b681de8690dba", "patch": "@@ -1,3 +1,9 @@\n+2000-09-06  Andreas Schwab  <schwab@suse.de>\n+\n+\t* mklibgcc.in: Emit rule for libgcc-stage-start.\n+\t* Makefile.in (stage1-start, stage2-start, stage3-start,\n+\tstage4-start): Don't handle libgcc here, use libgcc.mk instead.\n+\n 2000-09-06  Bernd Schmidt  <bernds@redhat.co.uk>\n \n \t* local-alloc.c (local_alloc): Ignore CLASS_LIKELY_SPILLED."}, {"sha": "b6a59020fd35ad630f9373148d1866ffe0fbdc1c", "filename": "gcc/Makefile.in", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f472a17cb413f5fedaa2647f885b681de8690dba/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f472a17cb413f5fedaa2647f885b681de8690dba/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=f472a17cb413f5fedaa2647f885b681de8690dba", "patch": "@@ -2914,13 +2914,13 @@ gnucompare gnucompare3 gnucompare4 gnucompare-lean gnucompare3-lean gnucompare4-\n # Copy the object files from a particular stage into a subdirectory.\n stage1-start:\n \t-if [ -d stage1 ] ; then true ; else mkdir stage1 ; fi\n-\t-for dir in intl libgcc $(SUBDIRS) ; \\\n+\t$(MAKE) -f libgcc.mk libgcc-stage-start stage=stage1\n+\t-for dir in intl $(SUBDIRS) ; \\\n \t do \\\n \t   if [ -d stage1/$$dir ] ; then true ; else mkdir stage1/$$dir ; fi ; \\\n \t done\n \t-mv $(STAGESTUFF) stage1\n \t-mv intl/*$(objext) stage1/intl\n-\t-mv libgcc/*$(objext) stage1/libgcc\n # Copy as/ld if they exist to stage dir, so that running xgcc from the stage\n # dir will work properly.\n \t-if [ -f as$(exeext) ] ; then $(LN_S) ../as$(exeext) stage1 ; else true ; fi\n@@ -2939,13 +2939,13 @@ stage1: force stage1-start lang.stage1\n \n stage2-start:\n \t-if [ -d stage2 ] ; then true ; else mkdir stage2 ; fi\n-\t-for dir in intl libgcc $(SUBDIRS) ; \\\n+\t$(MAKE) -f libgcc.mk libgcc-stage-start stage=stage2\n+\t-for dir in intl $(SUBDIRS) ; \\\n \t do \\\n \t   if [ -d stage2/$$dir ] ; then true ; else mkdir stage2/$$dir ; fi ; \\\n \t done\n \t-mv $(STAGESTUFF) stage2\n \t-mv intl/*$(objext) stage2/intl\n-\t-mv libgcc/*$(objext) stage2/libgcc\n # Copy as/ld if they exist to stage dir, so that running xgcc from the stage\n # dir will work properly.\n \t-if [ -f as$(exeext) ] ; then $(LN_S) ../as$(exeext) stage2 ; else true ; fi\n@@ -2964,13 +2964,13 @@ stage2: force stage2-start lang.stage2\n \n stage3-start:\n \t-if [ -d stage3 ] ; then true ; else mkdir stage3 ; fi\n-\t-for dir in intl libgcc $(SUBDIRS) ; \\\n+\t$(MAKE) -f libgcc.mk libgcc-stage-start stage=stage3\n+\t-for dir in intl $(SUBDIRS) ; \\\n \t do \\\n \t   if [ -d stage3/$$dir ] ; then true ; else mkdir stage3/$$dir ; fi ; \\\n \t done\n \t-mv $(STAGESTUFF) stage3\n \t-mv intl/*$(objext) stage3/intl\n-\t-mv libgcc/*$(objext) stage3/libgcc\n # Copy as/ld if they exist to stage dir, so that running xgcc from the stage\n # dir will work properly.\n \t-if [ -f as$(exeext) ] ; then $(LN_S) ../as$(exeext) stage3 ; else true ; fi\n@@ -2989,13 +2989,13 @@ stage3: force stage3-start lang.stage3\n \n stage4-start:\n \t-if [ -d stage4 ] ; then true ; else mkdir stage4 ; fi\n-\t-for dir in intl libgcc $(SUBDIRS) ; \\\n+\t$(MAKE) -f libgcc.mk libgcc-stage-start stage=stage4\n+\t-for dir in intl $(SUBDIRS) ; \\\n \t do \\\n \t   if [ -d stage4/$$dir ] ; then true ; else mkdir stage4/$$dir ; fi ; \\\n \t done\n \t-mv $(STAGESTUFF) stage4\n \t-mv intl/*$(objext) stage4/intl\n-\t-mv libgcc/*$(objext) stage4/libgcc\n # Copy as/ld if they exist to stage dir, so that running xgcc from the stage\n # dir will work properly.\n \t-if [ -f as$(exeext) ] ; then $(LN_S) ../as$(exeext) stage4 ; else true ; fi"}, {"sha": "8d93141ac89231bdc83b4f4390f93d16208d7acc", "filename": "gcc/mklibgcc.in", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f472a17cb413f5fedaa2647f885b681de8690dba/gcc%2Fmklibgcc.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f472a17cb413f5fedaa2647f885b681de8690dba/gcc%2Fmklibgcc.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmklibgcc.in?ref=f472a17cb413f5fedaa2647f885b681de8690dba", "patch": "@@ -280,6 +280,22 @@ for ml in $MULTILIBS; do\n   echo '\telse true; fi;'\n done\n \n+dirs=libgcc\n+for ml in $MULTILIBS; do\n+  dir=`echo ${ml} | sed -e 's/;.*$//' -e 's/=/$(EQ)/g'`\n+  if [ $dir != . ]; then\n+    dirs=\"$dirs libgcc/${dir}\"\n+  fi\n+done\n+echo ''\n+echo 'libgcc-stage-start:'\n+echo '\tfor dir in '\"${dirs}\"'; do \\'\n+echo '\t  if [ -d $(stage)/$$dir ]; then true; else mkdir $(stage)/$$dir; fi; \\'\n+echo '\tdone'\n+echo '\t-for dir in '\"${dirs}\"'; do \\'\n+echo '\t  mv $$dir/*'\"${objext}\"' $(stage)/$$dir; \\'\n+echo '\tdone'\n+\n echo \"\"\n all=stmp-dirs\n dirs=libgcc"}]}