{"sha": "3aa71f9da012bd82ee327edeb03723d9ef951955", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2FhNzFmOWRhMDEyYmQ4MmVlMzI3ZWRlYjAzNzIzZDllZjk1MTk1NQ==", "commit": {"author": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2008-08-18T19:22:36Z"}, "committer": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2008-08-18T19:22:36Z"}, "message": "profile.h: Really add it.\n\n2008-08-18  H.J. Lu  <hongjiu.lu@intel.com>\n\n\t* profile.h: Really add it.\n\nFrom-SVN: r139210", "tree": {"sha": "060937b5df4e596feda6a76bda478cc327cf8644", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/060937b5df4e596feda6a76bda478cc327cf8644"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3aa71f9da012bd82ee327edeb03723d9ef951955", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3aa71f9da012bd82ee327edeb03723d9ef951955", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3aa71f9da012bd82ee327edeb03723d9ef951955", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3aa71f9da012bd82ee327edeb03723d9ef951955/comments", "author": null, "committer": null, "parents": [{"sha": "f7bc085cf155e800fe6ec86e01f2afd69ade6a2e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f7bc085cf155e800fe6ec86e01f2afd69ade6a2e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f7bc085cf155e800fe6ec86e01f2afd69ade6a2e"}], "stats": {"total": 52, "additions": 52, "deletions": 0}, "files": [{"sha": "690562bc24a86646424e28a3bed829bdaef5444a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3aa71f9da012bd82ee327edeb03723d9ef951955/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3aa71f9da012bd82ee327edeb03723d9ef951955/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3aa71f9da012bd82ee327edeb03723d9ef951955", "patch": "@@ -1,3 +1,7 @@\n+2008-08-18  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\t* profile.h: Really add it.\n+\n 2008-08-18  H.J. Lu  <hongjiu.lu@intel.com>\n \n \t* mcf.c: Really add it.\n@@ -14,6 +18,7 @@\n \tFollow check_counter parameter change.\n \t* common.opt (fprofile-correction): New option.\n \t* mcf.c: New file.\n+\t* profile.h: Likewise.\n \t* profile.c (edge_info, EDGE_INFO): Moved to new file profile.h.\n \t(sum_edge_counts, is_edge_inconsistent, correct_negative_edge_counts,\n \tis_inconsistent, set_bb_counts, read_profile_edge_counts): New"}, {"sha": "fe3c2f997b710390d1d2e529050751670165ce11", "filename": "gcc/profile.h", "status": "added", "additions": 47, "deletions": 0, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3aa71f9da012bd82ee327edeb03723d9ef951955/gcc%2Fprofile.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3aa71f9da012bd82ee327edeb03723d9ef951955/gcc%2Fprofile.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fprofile.h?ref=3aa71f9da012bd82ee327edeb03723d9ef951955", "patch": "@@ -0,0 +1,47 @@\n+/* Header file for minimum-cost maximal flow routines used to smooth basic\n+   block and edge frequency counts.\n+   Copyright (C) 2008\n+   Free Software Foundation, Inc.\n+   Contributed by Paul Yuan (yingbo.com@gmail.com)\n+       and Vinodha Ramasamy (vinodha@google.com).\n+\n+This file is part of GCC.\n+GCC is free software; you can redistribute it and/or modify it under\n+the terms of the GNU General Public License as published by the Free\n+Software Foundation; either version 3, or (at your option) any later\n+version.\n+\n+GCC is distributed in the hope that it will be useful, but WITHOUT ANY\n+WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GCC; see the file COPYING3.  If not see\n+<http://www.gnu.org/licenses/>.  */\n+\n+#ifndef PROFILE_H\n+#define PROFILE_H\n+\n+/* Additional information about edges. */\n+struct edge_info\n+{\n+  unsigned int count_valid:1;\n+\n+  /* Is on the spanning tree.  */\n+  unsigned int on_tree:1;\n+\n+  /* Pretend this edge does not exist (it is abnormal and we've\n+     inserted a fake to compensate).  */\n+  unsigned int ignore:1;\n+};\n+\n+#define EDGE_INFO(e)  ((struct edge_info *) (e)->aux)\n+\n+/* Smoothes the initial assigned basic block and edge counts using\n+   a minimum cost flow algorithm. */\n+extern void mcf_smooth_cfg (void);\n+\n+extern gcov_type sum_edge_counts (VEC (edge, gc) *edges);\n+\n+#endif /* PROFILE_H */"}]}