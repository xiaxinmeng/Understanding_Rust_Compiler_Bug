{"sha": "5806d4fd849871d77fdc9b5f6a1ef05d42039a52", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTgwNmQ0ZmQ4NDk4NzFkNzdmZGM5YjVmNmExZWYwNWQ0MjAzOWE1Mg==", "commit": {"author": {"name": "James E Wilson", "email": "wilson@specifixinc.com", "date": "2004-07-09T23:10:26Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "2004-07-09T23:10:26Z"}, "message": "Fix for IA-64 union/long double ICE.\n\nPR target/16364\n* config/ia64/ia64.c (ia64_function_arg): For a single element HFA,\ndo return a parallel if hfa_mode == XFmode and mode == TImode.\n* gcc.c-torture/compile/20040709-1.c: New.\n\nFrom-SVN: r84416", "tree": {"sha": "58bc880c604da698d9f6037a06dff53c0fdb7dd1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/58bc880c604da698d9f6037a06dff53c0fdb7dd1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5806d4fd849871d77fdc9b5f6a1ef05d42039a52", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5806d4fd849871d77fdc9b5f6a1ef05d42039a52", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5806d4fd849871d77fdc9b5f6a1ef05d42039a52", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5806d4fd849871d77fdc9b5f6a1ef05d42039a52/comments", "author": null, "committer": null, "parents": [{"sha": "2319a1d1f7308338e91ace8b30719347b91580e4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2319a1d1f7308338e91ace8b30719347b91580e4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2319a1d1f7308338e91ace8b30719347b91580e4"}], "stats": {"total": 29, "additions": 27, "deletions": 2}, "files": [{"sha": "3c59958f24d36e163eadf9acbd99f7728089f44f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5806d4fd849871d77fdc9b5f6a1ef05d42039a52/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5806d4fd849871d77fdc9b5f6a1ef05d42039a52/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5806d4fd849871d77fdc9b5f6a1ef05d42039a52", "patch": "@@ -1,3 +1,9 @@\n+2004-07-09  James E Wilson  <wilson@specifixinc.com>\n+\n+\tPR target/16364\n+\t* config/ia64/ia64.c (ia64_function_arg): For a single element HFA,\n+\tdo return a parallel if hfa_mode == XFmode and mode == TImode.\n+\n 2004-07-09 Jan Beulich <jbeulich@novell.com>\n \n \t* builtin-types.def (BT_UINT): Rename from BT_UNSIGNED."}, {"sha": "fdebfba19cd3f1e11ec172212af359cdc20b6094", "filename": "gcc/config/ia64/ia64.c", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5806d4fd849871d77fdc9b5f6a1ef05d42039a52/gcc%2Fconfig%2Fia64%2Fia64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5806d4fd849871d77fdc9b5f6a1ef05d42039a52/gcc%2Fconfig%2Fia64%2Fia64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fia64%2Fia64.c?ref=5806d4fd849871d77fdc9b5f6a1ef05d42039a52", "patch": "@@ -3746,8 +3746,12 @@ ia64_function_arg (CUMULATIVE_ARGS *cum, enum machine_mode mode, tree type,\n \t}\n \n       /* If we ended up using just one location, just return that one loc, but\n-\t change the mode back to the argument mode.  */\n-      if (i == 1)\n+\t change the mode back to the argument mode.  However, we can't do this\n+\t when hfa_mode is XFmode and mode is TImode.  In that case, we would\n+\t return a TImode reference to an FP reg, but FP regs can't hold TImode.\n+\t We need the PARALLEL to make this work.  This can happen for a union\n+\t containing a single __float80 member.  */\n+      if (i == 1 && ! (hfa_mode == XFmode && mode == TImode))\n \treturn gen_rtx_REG (mode, REGNO (XEXP (loc[0], 0)));\n       else\n \treturn gen_rtx_PARALLEL (mode, gen_rtvec_v (i, loc));"}, {"sha": "d82a14fd84456b048d1e279bdaf9e0d3e05d4f03", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5806d4fd849871d77fdc9b5f6a1ef05d42039a52/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5806d4fd849871d77fdc9b5f6a1ef05d42039a52/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=5806d4fd849871d77fdc9b5f6a1ef05d42039a52", "patch": "@@ -1,3 +1,8 @@\n+2004-07-09  James E Wilson  <wilson@specifixinc.com>\n+\n+\tPR target/16364\n+\t* gcc.c-torture/compile/20040709-1.c: New.\n+\n 2004-07-09  Tobias Schlueter  <tobias.schlueter@physik.uni-muenchen.de>\n \t\n \tPR fortran/14077"}, {"sha": "c8c9cc357fb2fc37df84e56f7395628e61ab4321", "filename": "gcc/testsuite/gcc.c-torture/compile/20040709-1.c", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5806d4fd849871d77fdc9b5f6a1ef05d42039a52/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20040709-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5806d4fd849871d77fdc9b5f6a1ef05d42039a52/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20040709-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20040709-1.c?ref=5806d4fd849871d77fdc9b5f6a1ef05d42039a52", "patch": "@@ -0,0 +1,10 @@\n+/* PR target/16364 */\n+union foo {\n+  long double ld;\n+} bar;\n+\n+double\n+sub (union foo baz)\n+{\n+  return baz.ld / 2;\n+}"}]}