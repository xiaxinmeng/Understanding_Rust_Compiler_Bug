{"sha": "a3f9da7084c378dddf7194e3a74208755c8796bd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTNmOWRhNzA4NGMzNzhkZGRmNzE5NGUzYTc0MjA4NzU1Yzg3OTZiZA==", "commit": {"author": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2017-11-16T15:44:12Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2017-11-16T15:44:12Z"}, "message": "[multiple changes]\n\n2017-11-16  Gary Dismukes  <dismukes@adacore.com>\n\n\t* doc/gnat_ugn/elaboration_order_handling_in_gnat.rst, sem_ch6.adb,\n\tsem_elab.adb: Minor editorial corrections.\n\t* gnat_ugn.texi: Regenerate.\n\n2017-11-16  Joel Brobecker  <brobecker@adacore.com>\n\n\t* doc/gnat_ugn/gnat_utility_programs.rst (GNAT UGN): Add\n\tgnatsymbolize documentation.\n\t* gnat_ugn.texi:\u00a0Regenerate.\n\n2017-11-16  Steve Baird  <baird@adacore.com>\n\n\t* sem_ch3.adb (Build_Derived_Record_Type): Replace all uses of\n\t\"Scope (Parent_Type)\" with \"Scope (Parent_Base)\".\n\nFrom-SVN: r254825", "tree": {"sha": "afdedb62165126c922e56e40c34a0717d212b9d2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/afdedb62165126c922e56e40c34a0717d212b9d2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a3f9da7084c378dddf7194e3a74208755c8796bd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a3f9da7084c378dddf7194e3a74208755c8796bd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a3f9da7084c378dddf7194e3a74208755c8796bd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a3f9da7084c378dddf7194e3a74208755c8796bd/comments", "author": null, "committer": null, "parents": [{"sha": "5f3682ffcef162363b783eb9ee702debff489fa8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5f3682ffcef162363b783eb9ee702debff489fa8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5f3682ffcef162363b783eb9ee702debff489fa8"}], "stats": {"total": 151, "additions": 140, "deletions": 11}, "files": [{"sha": "8a7b64963d6dca6e55c715d15dcf963c4ebf870b", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a3f9da7084c378dddf7194e3a74208755c8796bd/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a3f9da7084c378dddf7194e3a74208755c8796bd/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=a3f9da7084c378dddf7194e3a74208755c8796bd", "patch": "@@ -1,3 +1,20 @@\n+2017-11-16  Gary Dismukes  <dismukes@adacore.com>\n+\n+\t* doc/gnat_ugn/elaboration_order_handling_in_gnat.rst, sem_ch6.adb,\n+\tsem_elab.adb: Minor editorial corrections.\n+\t* gnat_ugn.texi: Regenerate.\n+\n+2017-11-16  Joel Brobecker  <brobecker@adacore.com>\n+\n+\t* doc/gnat_ugn/gnat_utility_programs.rst (GNAT UGN): Add\n+\tgnatsymbolize documentation.\n+\t* gnat_ugn.texi:\u00a0Regenerate.\n+\n+2017-11-16  Steve Baird  <baird@adacore.com>\n+\n+\t* sem_ch3.adb (Build_Derived_Record_Type): Replace all uses of\n+\t\"Scope (Parent_Type)\" with \"Scope (Parent_Base)\".\n+\n 2017-11-16  Hristian Kirtchev  <kirtchev@adacore.com>\n \n \t* opt.ads: Elaboration warnings are now on by default. Add a comment"}, {"sha": "d8c9aef5e15b76ba32be021187c0d10af2585a40", "filename": "gcc/ada/doc/gnat_ugn/elaboration_order_handling_in_gnat.rst", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a3f9da7084c378dddf7194e3a74208755c8796bd/gcc%2Fada%2Fdoc%2Fgnat_ugn%2Felaboration_order_handling_in_gnat.rst", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a3f9da7084c378dddf7194e3a74208755c8796bd/gcc%2Fada%2Fdoc%2Fgnat_ugn%2Felaboration_order_handling_in_gnat.rst", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fdoc%2Fgnat_ugn%2Felaboration_order_handling_in_gnat.rst?ref=a3f9da7084c378dddf7194e3a74208755c8796bd", "patch": "@@ -1687,7 +1687,7 @@ the elaboration order chosen by the binder.\n     14. end Selective_Suppression;\n \n   Note that suppressing elaboration warnings does not eliminate run-time\n-  checks. The example above will still fail at runtime with an ABE.\n+  checks. The example above will still fail at run time with an ABE.\n \n .. _Summary_of_Procedures_for_Elaboration_Control:\n "}, {"sha": "1122b70b1588c8414a7fb03db48f54559b3fcc0e", "filename": "gcc/ada/doc/gnat_ugn/gnat_utility_programs.rst", "status": "modified", "additions": 111, "deletions": 0, "changes": 111, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a3f9da7084c378dddf7194e3a74208755c8796bd/gcc%2Fada%2Fdoc%2Fgnat_ugn%2Fgnat_utility_programs.rst", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a3f9da7084c378dddf7194e3a74208755c8796bd/gcc%2Fada%2Fdoc%2Fgnat_ugn%2Fgnat_utility_programs.rst", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fdoc%2Fgnat_ugn%2Fgnat_utility_programs.rst?ref=a3f9da7084c378dddf7194e3a74208755c8796bd", "patch": "@@ -22,6 +22,7 @@ This chapter describes a number of utility programs:\n   * :ref:`The_GNAT_Pretty-Printer_gnatpp`\n   * :ref:`The_Body_Stub_Generator_gnatstub`\n   * :ref:`The_Unit_Test_Generator_gnattest`\n+  * :ref:`The_Backtrace_Symbolizer_gnatsymbolize`\n \n   It also describes how several of these tools can be used in conjunction\n   with project files: :ref:`Using_Project_Files_with_GNAT_Tools`\n@@ -5012,6 +5013,116 @@ Alternatively, you may run the script using the following command line:\n     aspects, and complex variable initializations that use Subprogram'Access,\n     may result in elaboration circularities in the generated harness.\n \n+\n+.. only:: PRO or GPL\n+\n+  .. _The_Backtrace_Symbolizer_gnatsymbolize:\n+\n+  Translating Code Addresses into Source Locations with ``gnatsymbolize``\n+  =======================================================================\n+\n+  .. index:: ! gnatsymbolize\n+\n+  ``gnatsymbolize`` is a program which translates addresses into\n+  their corresponding filename, line number, and function names.\n+\n+  Running ``gnatsymbolize``\n+  -------------------------\n+\n+  ::\n+\n+       $ gnatsymbolize filename [ addresses ]\n+\n+  For instance, consider the following Ada program:\n+\n+     .. code-block:: ada\n+\n+        package Pck is\n+           Global_Val : Integer := 0;\n+           procedure Call_Me_First;\n+        end Pck;\n+\n+        with GNAT.IO; use GNAT.IO;\n+        with GNAT.Traceback; use GNAT.Traceback;\n+        with GNAT.Debug_Utilities;\n+        package body Pck is\n+           procedure Call_Me_Third is\n+              TB : Tracebacks_Array (1 .. 5);\n+              TB_len : Natural;\n+           begin\n+              Global_Val := Global_Val + 1;\n+\n+              Call_Chain (TB, TB_Len);\n+              for K in 1 .. TB_Len loop\n+                 Put_Line (GNAT.Debug_Utilities.Image_C (TB (K)));\n+              end loop;\n+           end Call_Me_Third;\n+\n+           procedure Call_Me_Second is\n+           begin\n+              Call_Me_Third;\n+           end Call_Me_Second;\n+\n+           procedure Call_Me_First is\n+           begin\n+              Call_Me_Second;\n+           end Call_Me_First;\n+        end Pck;\n+        with Pck; use Pck;\n+\n+        procedure Foo is\n+        begin\n+           Global_Val := 123;\n+           Call_Me_First;\n+        end Foo;\n+\n+  This program, when built and run, prints a list of addresses which\n+  correspond to the traceback when inside function ``Call_Me_Third``.\n+  For instance, on x86_64 GNU/Linux:\n+\n+    ::\n+\n+       $ gnatmake -g -q foo.adb\n+       $ ./foo\n+       0x0000000000402561\n+       0x00000000004025EF\n+       0x00000000004025FB\n+       0x0000000000402611\n+       0x00000000004024C7\n+\n+  ``gnatsymbolize`` can be used to translate those addresses into\n+  code locations as follow:\n+\n+    ::\n+\n+       $ gnatsymbolize foo 0x0000000000402561 0x00000000004025EF \\\n+           0x00000000004025FB 0x0000000000402611 0x00000000004024C7\n+       Pck.Call_Me_Third at pck.adb:12\n+       Pck.Call_Me_Second at pck.adb:20\n+       Pck.Call_Me_First at pck.adb:25\n+       Foo at foo.adb:6\n+       Main at b~foo.adb:184\n+\n+  Requirements for Correct Operation\n+  ----------------------------------\n+\n+  The translation is performed by reading the DWARF debugging\n+  information produced by the compiler for each unit. All units\n+  for which the translation is to be done must therefore be compiled\n+  such that DWARF debugging information is produced. In most cases,\n+  this is done by simply compiling with ``-g``.\n+\n+  This program provides a functionality similar to ``addr2line``.\n+  It has fewer options to tailor its output, but has been designed\n+  to require fewer of the DWARF sections to be present in the\n+  executable. In particular, the following sections can be\n+  stripped from the executable without impact to ``gnatsymbolize``'s\n+  functionality:\n+\n+    * ``.debug_str``\n+    * ``.debug_ranges``\n+\n+\n .. only:: PRO or GPL\n \n    .. _Using_Project_Files_with_GNAT_Tools:"}, {"sha": "261b410edd121d4a0b5471d5617b78ba7c731a27", "filename": "gcc/ada/gnat_ugn.texi", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a3f9da7084c378dddf7194e3a74208755c8796bd/gcc%2Fada%2Fgnat_ugn.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a3f9da7084c378dddf7194e3a74208755c8796bd/gcc%2Fada%2Fgnat_ugn.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_ugn.texi?ref=a3f9da7084c378dddf7194e3a74208755c8796bd", "patch": "@@ -18918,6 +18918,7 @@ $ perl gnathtml.pl [ switches ] files\n \n \n \n+\n @c -- Example: A |withing| unit has a |with| clause, it |withs| a |withed| unit\n \n @node GNAT and Program Execution,Platform-Specific Information,GNAT Utility Programs,Top\n@@ -29003,7 +29004,7 @@ using @code{pragma Warnings (Off)}.\n @end example\n \n Note that suppressing elaboration warnings does not eliminate run-time\n-checks. The example above will still fail at runtime with an ABE.\n+checks. The example above will still fail at run time with an ABE.\n @end table\n \n @node Summary of Procedures for Elaboration Control,Inspecting the Chosen Elaboration Order,Elaboration-related Compiler Switches,Elaboration Order Handling in GNAT"}, {"sha": "7edac03f230f41cd3f548657676cdc509b900668", "filename": "gcc/ada/sem_ch3.adb", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a3f9da7084c378dddf7194e3a74208755c8796bd/gcc%2Fada%2Fsem_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a3f9da7084c378dddf7194e3a74208755c8796bd/gcc%2Fada%2Fsem_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch3.adb?ref=a3f9da7084c378dddf7194e3a74208755c8796bd", "patch": "@@ -8519,11 +8519,11 @@ package body Sem_Ch3 is\n       --  type, mark it accordingly.\n \n       if Is_Private_Type (Parent_Type) then\n-         if Scope (Parent_Type) = Scope (Derived_Type) then\n+         if Scope (Parent_Base) = Scope (Derived_Type) then\n             null;\n \n-         elsif In_Open_Scopes (Scope (Parent_Type))\n-           and then In_Private_Part (Scope (Parent_Type))\n+         elsif In_Open_Scopes (Scope (Parent_Base))\n+           and then In_Private_Part (Scope (Parent_Base))\n          then\n             null;\n \n@@ -9126,7 +9126,7 @@ package body Sem_Ch3 is\n          elsif Has_Unknown_Discriminants (Parent_Type)\n            and then\n             (not Has_Discriminants (Parent_Type)\n-              or else not In_Open_Scopes (Scope (Parent_Type)))\n+              or else not In_Open_Scopes (Scope (Parent_Base)))\n          then\n             Set_Has_Unknown_Discriminants (Derived_Type);\n          end if;"}, {"sha": "01c1b5484e003b81e77b53f0510ec5fe98f4b5f5", "filename": "gcc/ada/sem_ch6.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a3f9da7084c378dddf7194e3a74208755c8796bd/gcc%2Fada%2Fsem_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a3f9da7084c378dddf7194e3a74208755c8796bd/gcc%2Fada%2Fsem_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch6.adb?ref=a3f9da7084c378dddf7194e3a74208755c8796bd", "patch": "@@ -4902,7 +4902,7 @@ package body Sem_Ch6 is\n \n       --  Proceed with analysis. Do not emit a cross-reference entry if the\n       --  specification comes from an expression function, because it may be\n-      --  the completion of a previous declaration. It is not, the cross-\n+      --  the completion of a previous declaration. If it is not, the cross-\n       --  reference entry will be emitted for the new subprogram declaration.\n \n       if Nkind (Parent (N)) /= N_Expression_Function then"}, {"sha": "23e6a107f6944426ce9a083f470a490242923d4c", "filename": "gcc/ada/sem_elab.adb", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a3f9da7084c378dddf7194e3a74208755c8796bd/gcc%2Fada%2Fsem_elab.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a3f9da7084c378dddf7194e3a74208755c8796bd/gcc%2Fada%2Fsem_elab.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_elab.adb?ref=a3f9da7084c378dddf7194e3a74208755c8796bd", "patch": "@@ -442,7 +442,7 @@ package body Sem_Elab is\n    --\n    --  -gnateL  turn off info messages on generated Elaborate[_All] pragmas\n    --\n-   --           The complimentary switch for -gnatel.\n+   --           The complementary switch for -gnatel.\n    --\n    --  -gnatw.f turn on warnings for suspicious Subp'Access\n    --\n@@ -452,16 +452,16 @@ package body Sem_Elab is\n    --\n    --  -gnatw.F turn off warnings for suspicious Subp'Access\n    --\n-   --           The complimentary switch for -gnatw.f.\n+   --           The complementary switch for -gnatw.f.\n    --\n    --  -gnatwl  turn on warnings for elaboration problems\n    --\n    --           The ABE mechanism produces warnings on detected ABEs along with\n-   --           traceback showing the graph of the ABE.\n+   --           a traceback showing the graph of the ABE.\n    --\n    --  -gnatwL  turn off warnings for elaboration problems\n    --\n-   --           The complimentary switch for -gnatwl.\n+   --           The complementary switch for -gnatwl.\n \n    ---------------------------\n    -- Adding a new scenario --"}]}