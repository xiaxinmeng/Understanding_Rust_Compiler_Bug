{"sha": "5dc8d5361697ad7378b9ff360aaaec980091d6b4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWRjOGQ1MzYxNjk3YWQ3Mzc4YjlmZjM2MGFhYWVjOTgwMDkxZDZiNA==", "commit": {"author": {"name": "Aldy Hernandez", "email": "aldyh@redhat.com", "date": "2002-06-12T00:27:03Z"}, "committer": {"name": "Aldy Hernandez", "email": "aldyh@gcc.gnu.org", "date": "2002-06-12T00:27:03Z"}, "message": "rs6000.c (rs6000_emit_minmax): Treat unsigned max/mins as unsigned GE compares.\n\n2002-06-11  Aldy Hernandez  <aldyh@redhat.com>\n\n        * config/rs6000/rs6000.c (rs6000_emit_minmax): Treat unsigned\n        max/mins as unsigned GE compares.\n\nFrom-SVN: r54539", "tree": {"sha": "0c602a8e78c7e125321e4c564bea10ab0235bb82", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0c602a8e78c7e125321e4c564bea10ab0235bb82"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5dc8d5361697ad7378b9ff360aaaec980091d6b4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5dc8d5361697ad7378b9ff360aaaec980091d6b4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5dc8d5361697ad7378b9ff360aaaec980091d6b4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5dc8d5361697ad7378b9ff360aaaec980091d6b4/comments", "author": {"login": "aldyh", "id": 12937877, "node_id": "MDQ6VXNlcjEyOTM3ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/12937877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aldyh", "html_url": "https://github.com/aldyh", "followers_url": "https://api.github.com/users/aldyh/followers", "following_url": "https://api.github.com/users/aldyh/following{/other_user}", "gists_url": "https://api.github.com/users/aldyh/gists{/gist_id}", "starred_url": "https://api.github.com/users/aldyh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aldyh/subscriptions", "organizations_url": "https://api.github.com/users/aldyh/orgs", "repos_url": "https://api.github.com/users/aldyh/repos", "events_url": "https://api.github.com/users/aldyh/events{/privacy}", "received_events_url": "https://api.github.com/users/aldyh/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "169274cd2e214ea06a3478bd9dc14d83acd7fb9f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/169274cd2e214ea06a3478bd9dc14d83acd7fb9f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/169274cd2e214ea06a3478bd9dc14d83acd7fb9f"}], "stats": {"total": 16, "additions": 14, "deletions": 2}, "files": [{"sha": "5b1831130f63ca79fb4f648c7d9076d952f42fc8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5dc8d5361697ad7378b9ff360aaaec980091d6b4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5dc8d5361697ad7378b9ff360aaaec980091d6b4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5dc8d5361697ad7378b9ff360aaaec980091d6b4", "patch": "@@ -1,3 +1,8 @@\n+2002-06-11  Aldy Hernandez  <aldyh@redhat.com>\n+\n+        * config/rs6000/rs6000.c (rs6000_emit_minmax): Treat unsigned\n+        max/mins as unsigned GE compares.\n+\n 2002-06-11  Jason Thorpe  <thorpej@wasabisystems.com>\n \n \t* config.gcc (vax-*-bsd*): Add vax/bsd.h to ${tm_file}. "}, {"sha": "00f9aa76754fa65fddff62fcb94cec0ec7becece", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5dc8d5361697ad7378b9ff360aaaec980091d6b4/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5dc8d5361697ad7378b9ff360aaaec980091d6b4/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=5dc8d5361697ad7378b9ff360aaaec980091d6b4", "patch": "@@ -7534,12 +7534,19 @@ rs6000_emit_minmax (dest, code, op0, op1)\n      rtx op1;\n {\n   enum machine_mode mode = GET_MODE (op0);\n+  enum rtx_code c;\n   rtx target;\n+\n+  if (code == SMAX || code == SMIN)\n+    c = GE;\n+  else\n+    c = GEU;\n+\n   if (code == SMAX || code == UMAX)\n-    target = emit_conditional_move (dest, GE, op0, op1, mode, \n+    target = emit_conditional_move (dest, c, op0, op1, mode, \n \t\t\t\t    op0, op1, mode, 0);\n   else\n-    target = emit_conditional_move (dest, GE, op0, op1, mode, \n+    target = emit_conditional_move (dest, c, op0, op1, mode, \n \t\t\t\t    op1, op0, mode, 0);\n   if (target == NULL_RTX)\n     abort ();"}]}