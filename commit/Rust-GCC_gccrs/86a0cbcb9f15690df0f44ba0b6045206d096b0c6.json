{"sha": "86a0cbcb9f15690df0f44ba0b6045206d096b0c6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODZhMGNiY2I5ZjE1NjkwZGYwZjQ0YmEwYjYwNDUyMDZkMDk2YjBjNg==", "commit": {"author": {"name": "Bernd Schmidt", "email": "bernds@redhat.com", "date": "2002-08-04T21:07:49Z"}, "committer": {"name": "Bernd Schmidt", "email": "bernds@gcc.gnu.org", "date": "2002-08-04T21:07:49Z"}, "message": "Remove one of the files checked in previously\n\nFrom-SVN: r56033", "tree": {"sha": "d7a3fe07608761717bf0dbd2b903bfb5b1462a58", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d7a3fe07608761717bf0dbd2b903bfb5b1462a58"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/86a0cbcb9f15690df0f44ba0b6045206d096b0c6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/86a0cbcb9f15690df0f44ba0b6045206d096b0c6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/86a0cbcb9f15690df0f44ba0b6045206d096b0c6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/86a0cbcb9f15690df0f44ba0b6045206d096b0c6/comments", "author": null, "committer": null, "parents": [{"sha": "2ff34870322184e4a87199962b0f4e8f99e66dfb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2ff34870322184e4a87199962b0f4e8f99e66dfb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2ff34870322184e4a87199962b0f4e8f99e66dfb"}], "stats": {"total": 260, "additions": 3, "deletions": 257}, "files": [{"sha": "bf0c62312b22ca5ddebeae4ce6845bcd6fe3333e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/86a0cbcb9f15690df0f44ba0b6045206d096b0c6/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/86a0cbcb9f15690df0f44ba0b6045206d096b0c6/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=86a0cbcb9f15690df0f44ba0b6045206d096b0c6", "patch": "@@ -25,7 +25,9 @@\n \t* config/frv/ulltof.c: New file.\n \t* config/frv/umodi.c: New file.\n \t* config/frv/xm-frv.h: New file.\n-\t\t\n+\n+\t* config/frv/media.h: Removed again.\n+\n 2002-08-04  Nathan Sidwell  <nathan@codesourcery.com>\n \n \t* gcov.c (bb_file_time): New static variable."}, {"sha": "9b0c70ed3e60bb6fc1acf529425c059a8c039143", "filename": "gcc/config/frv/media.h", "status": "removed", "additions": 0, "deletions": 256, "changes": 256, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ff34870322184e4a87199962b0f4e8f99e66dfb/gcc%2Fconfig%2Ffrv%2Fmedia.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ff34870322184e4a87199962b0f4e8f99e66dfb/gcc%2Fconfig%2Ffrv%2Fmedia.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Ffrv%2Fmedia.h?ref=2ff34870322184e4a87199962b0f4e8f99e66dfb", "patch": "@@ -1,256 +0,0 @@\n-/*      VENUS Family C Library V40L00                                   */\n-/*      COPYRIGHT(C) FUJITSU LIMITED 1993-1999                          */\n-\n-#ifndef __MEDIA_H__\n-#define __MEDIA_H__\n-\n-#ifdef __STDC__\n-#define __MEDIA_PASTE__(A,B) __MEDIA_XPASTE__(A,B)\n-#define __MEDIA_XPASTE__(A,B) A ## B\n-#else\n-#define __MEDIA_PASTE__(A,B) A/**/B\n-#endif\n-\n-/* Floating Point Condition Code Field Type */\n-typedef enum\n-{\n-  FCC0 = 0,\n-  FCC1,\n-  FCC2, \n-  FCC3\n-} FCC_T;\n-\n-/* Accumulator Type */\n-#define ACC0\t0\n-#define ACC1\t1\n-#define ACC2\t2\n-#define ACC3\t3\n-#define ACC4\t4\n-#define ACC5\t5\n-#define ACC6\t6\n-#define ACC7\t7\n-\n-typedef unsigned char      __mubyte;\n-typedef unsigned short\t   __muhalf;\n-typedef unsigned long      __muword1;\n-typedef unsigned long long __muword2;\n-\n-typedef signed short\t   __mshalf;\n-typedef signed long        __msword1;\n-typedef signed long long   __msword2;\n-\n-typedef int ACC_T;\n-\n-register __muword1 __acc0 __asm__(\"acc0\");\n-register __muword1 __acc1 __asm__(\"acc1\");\n-register __muword1 __acc2 __asm__(\"acc2\");\n-register __muword1 __acc3 __asm__(\"acc3\");\n-register __muword1 __acc4 __asm__(\"acc4\");\n-register __muword1 __acc5 __asm__(\"acc5\");\n-register __muword1 __acc6 __asm__(\"acc6\");\n-register __muword1 __acc7 __asm__(\"acc7\");\n-\n-#define __ACC(N) __MEDIA_PASTE__(__acc,N)\n-\n-/* Accumulator Guard Type */\n-#define ACCG0\t0\n-#define ACCG1\t1\n-#define ACCG2\t2\n-#define ACCG3\t3\n-#define ACCG4\t4\n-#define ACCG5\t5\n-#define ACCG6\t6\n-#define ACCG7\t7\n-\n-typedef int ACCG_T;\n-\n-register __mubyte __accg0 __asm__(\"accg0\");\n-register __mubyte __accg1 __asm__(\"accg1\");\n-register __mubyte __accg2 __asm__(\"accg2\");\n-register __mubyte __accg3 __asm__(\"accg3\");\n-register __mubyte __accg4 __asm__(\"accg4\");\n-register __mubyte __accg5 __asm__(\"accg5\");\n-register __mubyte __accg6 __asm__(\"accg6\");\n-register __mubyte __accg7 __asm__(\"accg7\");\n-\n-#define __ACCG(N) __MEDIA_PASTE__(__accg,N)\n-\n-/* 12-bit Immediate Type */\n-typedef int IMM12;\n-\n-/* 6-bit Immediate Type */\n-typedef int IMM6;\n-\n-/* 5-bit Immediate Type */\n-typedef int IMM5;\n-\n-/* 5-bit Unsigned Immediate Type */\n-typedef int UIMM5;\n-\n-/* 4-bit Unsigned Immediate Type */\n-typedef int UIMM4;\n-\n-/* 1-bit Unsigned Immediate Type */\n-typedef int UIMM1;\n-\n-/* Media Logical (Word) */\n-extern __muword1 __MAND(__muword1, __muword1);\n-extern __muword1 __MOR(__muword1, __muword1);\n-extern __muword1 __MXOR(__muword1, __muword1);\n-extern __muword1 __MNOT(__muword1);\n-\n-/* Media Rotate (Word) */\n-extern __muword1 __MROTLI(__muword1, UIMM5);\n-extern __muword1 __MROTRI(__muword1, UIMM5);\n-\n-/* Media Word Cut */\n-extern __muword1 __MWCUT(__muword2, __muword1);\n-\n-/* Media Average (Halfword Dual) */\n-extern __muword1 __MAVEH(__muword1, __muword1);\n-\n-/* Media Shift (Halfword Dual) */\n-extern __muword1 __MSLLHI(__muword1, UIMM4);\n-extern __muword1 __MSRLHI(__muword1, UIMM4);\n-extern __msword1 __MSRAHI(__msword1, UIMM4);\n-\n-/* Media Saturation (Halfword Dual) */\n-extern __msword1 __MSATHS(__msword1, __msword1);\n-extern __muword1 __MSATHU(__muword1, __muword1);\n-\n-#if 0 /* These are not supported. */\n-/* Media Dual Compare (Halfword Dual) */\n-extern void __MCMPSH(FCC_T, __msword1, __msword1);\n-extern void __MCMPUH(FCC_T, __muword1, __muword1);\n-#endif\n-\n-/* Media Dual Saturation Add/Sub (Halfword Dual) */\n-extern __msword1 __MADDHSS(__msword1, __msword1);\n-extern __muword1 __MADDHUS(__muword1, __muword1);\n-extern __msword1 __MSUBHSS(__msword1, __msword1);\n-extern __muword1 __MSUBHUS(__muword1, __muword1);\n-\n-/* Media Dual Mult (Halfword Dual) */\n-extern void __MMULHS(ACC_T, __msword1, __msword1);\n-extern void __MMULHU(ACC_T, __muword1, __muword1);\n-\n-/* Media Dual Cross Mult (Halfword Dual) */\n-extern void __MMULXHS(ACC_T, __msword1, __msword1);\n-extern void __MMULXHU(ACC_T, __muword1, __muword1);\n-\n-/* Media Dual Mult & Add (Halfword Dual) */\n-extern void __MMACHS(ACC_T, __msword1, __msword1);\n-extern void __MMACHU(ACC_T, __muword1, __muword1);\n-\n-/* Media Dual Mult & Sub (Halfword Dual) */\n-extern void __MMRDHS(ACC_T, __msword1, __msword1);\n-extern void __MMRDHU(ACC_T, __muword1, __muword1);\n-\n-/* Media Quad Saturation Add/Sub (Halfword Quad) */\n-extern __msword2 __MQADDHSS(__msword2, __msword2);\n-extern __muword2 __MQADDHUS(__muword2, __muword2);\n-extern __msword2 __MQSUBHSS(__msword2, __msword2);\n-extern __muword2 __MQSUBHUS(__muword2, __muword2);\n-\n-/* Media Quad Mult (Halfword Quad) */\n-extern void __MQMULHS(ACC_T, __msword2, __msword2);\n-extern void __MQMULHU(ACC_T, __muword2, __muword2);\n-\n-/* Media Quad Cross Mult (Halfword Quad) */\n-extern void __MQMULXHS(ACC_T, __msword2, __msword2);\n-extern void __MQMULXHU(ACC_T, __muword2, __muword2);\n-\n-/* Media Quad Mult & Add (Halfword Quad) */\n-extern void __MQMACHS(ACC_T, __msword2, __msword2);\n-extern void __MQMACHU(ACC_T, __muword2, __muword2);\n-\n-/* Media Dual Mult & Add for Complex (Halfword Dual) */\n-extern void __MCPXRS(ACC_T, __msword1, __msword1);\n-extern void __MCPXRU(ACC_T, __muword1, __muword1);\n-extern void __MCPXIS(ACC_T, __msword1, __msword1);\n-extern void __MCPXIU(ACC_T, __muword1, __muword1);\n-\n-/* Media Quad Mult & Add for Complex (Halfword Quad) */\n-extern void __MQCPXRS(ACC_T, __msword2, __msword2);\n-extern void __MQCPXRU(ACC_T, __muword2, __muword2);\n-extern void __MQCPXIS(ACC_T, __msword2, __msword2);\n-extern void __MQCPXIU(ACC_T, __muword2, __muword2);\n-\n-/* Media Cut */\n-extern __muword1 __MCUT(ACC_T, __muword1);\n-extern __muword1 __MCUTSS(ACC_T, __msword1);\n-\n-/* Media Halfword Expand */\n-extern __muword1 __MEXPDHW(__muword1, UIMM1);\n-extern __muword2 __MEXPDHD(__muword1, UIMM1);\n-\n-/* Media Halfword Pack/Unpack */\n-extern __muword1 __MPACKH(__muhalf, __muhalf);\n-extern __muword2 __MUNPACKH(__muword1);\n-\n-/* Media Halfword Pack/Unpack (Dual) */\n-extern __muword2 __MDPACKH(__muword2, __muword2);\n-extern void __MDUNPACKH(__muword1[4], __muword2);\n-\n-/* Media Byte-Halfword Convert */\n-extern __muword2 __MBTOH(__muword1);\n-extern __muword1 __MHTOB(__muword2);\n-extern void __MBTOHE(__muword1[4], __muword1);\n-\n-/* Media Accumulator Clear */\n-extern void __MCLRACC(ACC_T);      \n-extern void __MCLRACCA(void);\n-\n-/* Media Accumlator Read/Write */\n-extern __muword1 __MRDACC(ACC_T);\n-extern __muword1 __MRDACCG(ACCG_T);\n-extern void __MWTACC(ACC_T, __muword1);\n-extern void __MWTACCG(ACCG_T, __muword1);\n-\n-/* Media Custom */\n-extern __muword1 __Mcop1(__muword1, __muword1);\n-extern __muword1 __Mcop2(__muword1, __muword1);\n-\n-/* Media Trap */\n-extern void __MTRAP(void);\n-\n-/* The following are available on the FR400.  The compiler will report an\n-   error if an attempt is made to use them in FR500 code.  */\n-\n-/* Media Multiply And Add (Halfword) */\n-extern void __MQXMACHS(ACC_T, __msword2, __msword2);\n-extern void __MQXMACXHS(ACC_T, __msword2, __msword2);\n-extern void __MQMACXHS(ACC_T, __msword2, __msword2);\n-\n-/* Media Accumulator Addition/Subtraction */\n-extern void __MADDACCS(ACC_T, ACC_T);\n-extern void __MSUBACCS(ACC_T, ACC_T);\n-extern void __MASACCS(ACC_T, ACC_T);\n-extern void __MDADDACCS(ACC_T, ACC_T);\n-extern void __MDSUBACCS(ACC_T, ACC_T);\n-extern void __MDASACCS(ACC_T, ACC_T);\n-\n-/* Media Dual Absolute (Halfword) */\n-extern __muword1 __MABSHS(__msword1);\n-\n-/* Media Dual Rotate Left */\n-extern __muword2 __MDROTLI(__muword2, UIMM5);\n-\n-/* Media Dual Coupling */\n-extern __muword1 __MCPLHI(__muword2, UIMM4);\n-extern __muword1 __MCPLI(__muword2, UIMM5);\n-\n-/* Media Dual Cut And Signed Saturation */\n-extern __muword2 __MDCUTSSI(ACC_T, IMM6);\n-\n-/* Media Quad Saturation (Halfword) */\n-extern __msword2 __MQSATHS(__msword2, __msword2);\n-\n-/* Media SETHI/SETLO */\n-extern __msword1 __MHSETLOS(__msword1, IMM12);\n-extern __msword1 __MHSETHIS(__msword1, IMM12);\n-extern __msword1 __MHDSETS(IMM12);\n-extern __muword1 __MHSETLOH(__muword1, IMM5);\n-extern __muword1 __MHSETHIH(__muword1, IMM5);\n-extern __muword1 __MHDSETH(__muword1, IMM5);\n-#endif /* __MEDIA_H__ */"}]}