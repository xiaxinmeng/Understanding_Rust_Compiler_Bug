{"sha": "12422bc85c33040992711bd0c2afe55672206341", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTI0MjJiYzg1YzMzMDQwOTkyNzExYmQwYzJhZmU1NTY3MjIwNjM0MQ==", "commit": {"author": {"name": "Vladimir Makarov", "email": "vmakarov@redhat.com", "date": "2018-11-25T05:46:44Z"}, "committer": {"name": "Vladimir Makarov", "email": "vmakarov@gcc.gnu.org", "date": "2018-11-25T05:46:44Z"}, "message": "re PR bootstrap/88157 (ICE when building libgo encoding/gob.lo starting with r266385)\n\n2018-11-25  Vladimir Makarov  <vmakarov@redhat.com>\n\n\tPR bootstrap/88157\n\t* ira-costs.c (record_operand_costs): Initiate register move cost\n\tfor mode.\n\nFrom-SVN: r266435", "tree": {"sha": "a23c1755370318d7615fd847eb5ac404e1ae1657", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a23c1755370318d7615fd847eb5ac404e1ae1657"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/12422bc85c33040992711bd0c2afe55672206341", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/12422bc85c33040992711bd0c2afe55672206341", "html_url": "https://github.com/Rust-GCC/gccrs/commit/12422bc85c33040992711bd0c2afe55672206341", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/12422bc85c33040992711bd0c2afe55672206341/comments", "author": {"login": "vnmakarov", "id": 9855671, "node_id": "MDQ6VXNlcjk4NTU2NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/9855671?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vnmakarov", "html_url": "https://github.com/vnmakarov", "followers_url": "https://api.github.com/users/vnmakarov/followers", "following_url": "https://api.github.com/users/vnmakarov/following{/other_user}", "gists_url": "https://api.github.com/users/vnmakarov/gists{/gist_id}", "starred_url": "https://api.github.com/users/vnmakarov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vnmakarov/subscriptions", "organizations_url": "https://api.github.com/users/vnmakarov/orgs", "repos_url": "https://api.github.com/users/vnmakarov/repos", "events_url": "https://api.github.com/users/vnmakarov/events{/privacy}", "received_events_url": "https://api.github.com/users/vnmakarov/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "30bf4f8e5cc16e5046edba59e82aeda789298969", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/30bf4f8e5cc16e5046edba59e82aeda789298969", "html_url": "https://github.com/Rust-GCC/gccrs/commit/30bf4f8e5cc16e5046edba59e82aeda789298969"}], "stats": {"total": 7, "additions": 7, "deletions": 0}, "files": [{"sha": "2bff937cbcfec8289a91ba3c395a0a0df71ef290", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/12422bc85c33040992711bd0c2afe55672206341/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/12422bc85c33040992711bd0c2afe55672206341/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=12422bc85c33040992711bd0c2afe55672206341", "patch": "@@ -1,3 +1,9 @@\n+2018-11-25  Vladimir Makarov  <vmakarov@redhat.com>\n+\n+\tPR bootstrap/88157\n+\t* ira-costs.c (record_operand_costs): Initiate register move cost\n+\tfor mode.\n+\n 2018-11-23  Jeff Law  <law@redhat.com>\n \n \tPR rtl-optimization/87468"}, {"sha": "83dfdcd86ae7635b26476b0389febe2cbe138030", "filename": "gcc/ira-costs.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/12422bc85c33040992711bd0c2afe55672206341/gcc%2Fira-costs.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/12422bc85c33040992711bd0c2afe55672206341/gcc%2Fira-costs.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fira-costs.c?ref=12422bc85c33040992711bd0c2afe55672206341", "patch": "@@ -1318,6 +1318,7 @@ record_operand_costs (rtx_insn *insn, enum reg_class *pref)\n \t  int cost, k;\n \t  bool dead_p = find_regno_note (insn, REG_DEAD, REGNO (src));\n \n+\t  ira_init_register_move_cost_if_necessary (mode);\n \t  hard_reg_class = REGNO_REG_CLASS (other_regno);\n \t  /* Target code may return any cost for mode which does not\n \t     fit the the hard reg class (e.g. DImode for AREG on"}]}