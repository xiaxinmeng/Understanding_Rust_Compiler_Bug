{"sha": "7fe6899fb7d5a9651177de41dd92032a6b5f7f63", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2ZlNjg5OWZiN2Q1YTk2NTExNzdkZTQxZGQ5MjAzMmE2YjVmN2Y2Mw==", "commit": {"author": {"name": "Mark Mitchell", "email": "mmitchell@usa.net", "date": "1998-03-27T13:23:03Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "1998-03-27T13:23:03Z"}, "message": "pt.c (redeclare_class_template): New function.\n\n\t* pt.c (redeclare_class_template): New function.\n\t* cp_tree.h (redeclare_class_template): Declare it.\n\t* decl.c (xref_tag): Use it.\n\nFrom-SVN: r18855", "tree": {"sha": "6496943e636a190747309a2835840c217fba8d41", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6496943e636a190747309a2835840c217fba8d41"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7fe6899fb7d5a9651177de41dd92032a6b5f7f63", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7fe6899fb7d5a9651177de41dd92032a6b5f7f63", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7fe6899fb7d5a9651177de41dd92032a6b5f7f63", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7fe6899fb7d5a9651177de41dd92032a6b5f7f63/comments", "author": null, "committer": null, "parents": [{"sha": "7daa142bd6b311e464766a803c8ff08deb7b7816", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7daa142bd6b311e464766a803c8ff08deb7b7816", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7daa142bd6b311e464766a803c8ff08deb7b7816"}], "stats": {"total": 108, "additions": 108, "deletions": 0}, "files": [{"sha": "0b0971f3c46c8bc85553dd00031838ff2bef8b5c", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7fe6899fb7d5a9651177de41dd92032a6b5f7f63/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7fe6899fb7d5a9651177de41dd92032a6b5f7f63/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=7fe6899fb7d5a9651177de41dd92032a6b5f7f63", "patch": "@@ -1,3 +1,9 @@\n+Fri Mar 27 13:22:18 1998  Mark Mitchell  <mmitchell@usa.net>\n+\n+\t* pt.c (redeclare_class_template): New function.\n+\t* cp_tree.h (redeclare_class_template): Declare it.\n+\t* decl.c (xref_tag): Use it.\n+\n Thu Mar 26 11:16:30 1998  Jason Merrill  <jason@yorick.cygnus.com>\n \n \t* call.c (build_over_call): Check IS_AGGR_TYPE, not "}, {"sha": "4a65a4875fae9c894e53cd50b8e938345b25d42e", "filename": "gcc/cp/cp-tree.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7fe6899fb7d5a9651177de41dd92032a6b5f7f63/gcc%2Fcp%2Fcp-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7fe6899fb7d5a9651177de41dd92032a6b5f7f63/gcc%2Fcp%2Fcp-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.h?ref=7fe6899fb7d5a9651177de41dd92032a6b5f7f63", "patch": "@@ -2457,6 +2457,7 @@ extern tree end_template_parm_list\t\tPROTO((tree));\n extern void end_template_decl\t\t\tPROTO((void));\n extern tree current_template_args\t\tPROTO((void));\n extern tree push_template_decl\t\t\tPROTO((tree));\n+extern void redeclare_class_template            PROTO((tree));\n extern tree lookup_template_class\t\tPROTO((tree, tree, tree, tree));\n extern tree lookup_template_function            PROTO((tree, tree));\n extern int uses_template_parms\t\t\tPROTO((tree));"}, {"sha": "b3f065b24ec5e04ec353559bd57c56200e5372bd", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7fe6899fb7d5a9651177de41dd92032a6b5f7f63/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7fe6899fb7d5a9651177de41dd92032a6b5f7f63/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=7fe6899fb7d5a9651177de41dd92032a6b5f7f63", "patch": "@@ -10889,6 +10889,9 @@ xref_tag (code_type_node, name, binfo, globalize)\n \t  if (BINDING_VALUE (binding) == NULL_TREE)\n \t    BINDING_VALUE (binding) = TYPE_NAME (ref);\n \t}\n+\n+      if (!globalize && processing_template_decl && IS_AGGR_TYPE (ref))\n+\tredeclare_class_template (ref);\n     }\n \n   if (binfo)"}, {"sha": "a529f236e247292aad9781420f6817a04634dcc6", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 60, "deletions": 0, "changes": 60, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7fe6899fb7d5a9651177de41dd92032a6b5f7f63/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7fe6899fb7d5a9651177de41dd92032a6b5f7f63/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=7fe6899fb7d5a9651177de41dd92032a6b5f7f63", "patch": "@@ -1792,6 +1792,66 @@ push_template_decl (decl)\n   return DECL_TEMPLATE_RESULT (tmpl);\n }\n \n+/* Called when a class template TYPE is redeclared, e.g.:\n+\n+     template <class T> struct S;\n+     template <class T> struct S {};  */\n+\n+void \n+redeclare_class_template (type)\n+     tree type;\n+{\n+  tree tmpl = CLASSTYPE_TI_TEMPLATE (type);\n+  tree tmpl_parms = DECL_INNERMOST_TEMPLATE_PARMS (tmpl);\n+  tree parms = INNERMOST_TEMPLATE_PARMS (current_template_parms);\n+  int i;\n+\n+  if (!PRIMARY_TEMPLATE_P (tmpl))\n+    /* The type is nested in some template class.  Nothing to worry\n+       about here; there are no new template parameters for the nested\n+       type.  */\n+    return;\n+\n+  if (TREE_VEC_LENGTH (parms) != TREE_VEC_LENGTH (tmpl_parms))\n+    {\n+      cp_error_at (\"previous declaration `%D'\", tmpl);\n+      cp_error (\"used %d template parameter%s instead of %d\",\n+\t\tTREE_VEC_LENGTH (tmpl_parms), \n+\t\tTREE_VEC_LENGTH (tmpl_parms) == 1 ? \"\" : \"s\",\n+\t\tTREE_VEC_LENGTH (parms));\n+      return;\n+    }\n+\n+  for (i = 0; i < TREE_VEC_LENGTH (tmpl_parms); ++i)\n+    {\n+      tree tmpl_parm = TREE_VALUE (TREE_VEC_ELT (tmpl_parms, i));\n+      tree parm = TREE_VALUE (TREE_VEC_ELT (parms, i));\n+      tree tmpl_default = TREE_PURPOSE (TREE_VEC_ELT (tmpl_parms, i));\n+      tree parm_default = TREE_PURPOSE (TREE_VEC_ELT (parms, i));\n+\n+      if (TREE_CODE (tmpl_parm) != TREE_CODE (parm))\n+\t{\n+\t  cp_error_at (\"template parameter `%#D'\", tmpl_parm);\n+\t  cp_error (\"redeclared here as `%#D'\", parm);\n+\t  return;\n+\t}\n+\n+      if (tmpl_default != NULL_TREE && parm_default != NULL_TREE)\n+\t{\n+\t  /* We have in [temp.param]:\n+\n+\t     A template-parameter may not be given default arguments\n+\t     by two different declarations in the same scope.  */\n+\t  cp_error (\"redefinition of default argument for `%#D'\", parm);\n+\t  return;\n+\t}\n+\n+      if (parm_default != NULL_TREE)\n+\t/* Update the previous template parameters (which are the ones\n+\t   that will really count) with the new default value.  */\n+\tTREE_PURPOSE (TREE_VEC_ELT (tmpl_parms, i)) = parm_default;\n+    }\n+}\n \n /* Attempt to convert the non-type template parameter EXPR to the\n    indicated TYPE.  If the conversion is successful, return the"}, {"sha": "9a7e0460497f3ced6239218555cd27d57f47b573", "filename": "gcc/testsuite/g++.old-deja/g++.pt/defarg3.C", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7fe6899fb7d5a9651177de41dd92032a6b5f7f63/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fdefarg3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7fe6899fb7d5a9651177de41dd92032a6b5f7f63/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fdefarg3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fdefarg3.C?ref=7fe6899fb7d5a9651177de41dd92032a6b5f7f63", "patch": "@@ -0,0 +1,16 @@\n+// Build don't link:\n+\n+template <class T> \n+struct S;\n+\n+template <class T = int>\n+struct S {};\n+\n+template <class T> \n+struct S;\n+\n+void f()\n+{\n+  S<> s;\n+}\n+"}, {"sha": "7bc3eaae26b3f62e4261dc3ae1f98bf0a7e3df64", "filename": "gcc/testsuite/g++.old-deja/g++.pt/redecl1.C", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7fe6899fb7d5a9651177de41dd92032a6b5f7f63/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fredecl1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7fe6899fb7d5a9651177de41dd92032a6b5f7f63/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fredecl1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fredecl1.C?ref=7fe6899fb7d5a9651177de41dd92032a6b5f7f63", "patch": "@@ -0,0 +1,22 @@\n+// Build don't link:\n+\n+template <class T>\n+struct S1; // ERROR - previous declaration\n+\n+template <class T, class U>\n+struct S1 {}; // ERROR - used 1 template parameter\n+\n+template <class T = int>\n+struct S2; \n+\n+template <class T = int>\n+struct S2; // ERROR - redefinition of default\n+\n+template <class T> // ERROR - template parameter\n+struct S3;\n+\n+template <int I>\n+struct S3; // ERROR - redeclared here\n+\n+template <template <class T> class C>\n+struct S3; // ERROR - redeclared here"}]}