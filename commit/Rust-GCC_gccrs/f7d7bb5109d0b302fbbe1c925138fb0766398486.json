{"sha": "f7d7bb5109d0b302fbbe1c925138fb0766398486", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjdkN2JiNTEwOWQwYjMwMmZiYmUxYzkyNTEzOGZiMDc2NjM5ODQ4Ng==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-04-09T12:34:42Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-04-09T12:34:42Z"}, "message": "[multiple changes]\n\n2009-04-09  Robert Dewar  <dewar@adacore.com>\n\n\t* switch-c.adb, gnat_ugn.texi, vms_data.ads, switch.adb,\n\tswitch.ads: for numeric switches, an optional equal sign is always\n\tallowed.\n\n2009-04-09  Vincent Celier  <celier@adacore.com>\n\n\t* prj-nmsc.adb (Get_Unit): Do not consider Casing on platform where\n\tthe case of file names is not significant.\n\nFrom-SVN: r145834", "tree": {"sha": "4b1a85e6820d8dc4ff9dcae0248320ec913ec88b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4b1a85e6820d8dc4ff9dcae0248320ec913ec88b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f7d7bb5109d0b302fbbe1c925138fb0766398486", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f7d7bb5109d0b302fbbe1c925138fb0766398486", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f7d7bb5109d0b302fbbe1c925138fb0766398486", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f7d7bb5109d0b302fbbe1c925138fb0766398486/comments", "author": null, "committer": null, "parents": [{"sha": "5e781161bab5a1f425f534c9dfa71e4f481daf71", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5e781161bab5a1f425f534c9dfa71e4f481daf71", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5e781161bab5a1f425f534c9dfa71e4f481daf71"}], "stats": {"total": 160, "additions": 98, "deletions": 62}, "files": [{"sha": "0d2b8a06d28f0b74c34c1d13780f881849b1ee75", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f7d7bb5109d0b302fbbe1c925138fb0766398486/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f7d7bb5109d0b302fbbe1c925138fb0766398486/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=f7d7bb5109d0b302fbbe1c925138fb0766398486", "patch": "@@ -1,3 +1,14 @@\n+2009-04-09  Robert Dewar  <dewar@adacore.com>\n+\n+\t* switch-c.adb, gnat_ugn.texi, vms_data.ads, switch.adb,\n+\tswitch.ads: for numeric switches, an optional equal sign is always\n+\tallowed.\n+\n+2009-04-09  Vincent Celier  <celier@adacore.com>\n+\n+\t* prj-nmsc.adb (Get_Unit): Do not consider Casing on platform where\n+\tthe case of file names is not significant.\n+\n 2009-04-09  Vincent Celier  <celier@adacore.com>\n \n \t* errout.adb: Remove dependency on package Style"}, {"sha": "9275c22506c22748c0ab783fc9504d55ac96b615", "filename": "gcc/ada/gnat_ugn.texi", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f7d7bb5109d0b302fbbe1c925138fb0766398486/gcc%2Fada%2Fgnat_ugn.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f7d7bb5109d0b302fbbe1c925138fb0766398486/gcc%2Fada%2Fgnat_ugn.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_ugn.texi?ref=f7d7bb5109d0b302fbbe1c925138fb0766398486", "patch": "@@ -3949,7 +3949,7 @@ Note that @option{^-gnatg^/GNAT_INTERNAL^} implies\n so that all standard warnings and all standard style options are turned on.\n All warnings and style error messages are treated as errors.\n \n-@item -gnatGnn\n+@item -gnatG=nn\n @cindex @option{-gnatG[nn]} (@command{gcc})\n List generated expanded code in source form.\n \n@@ -6796,7 +6796,7 @@ switches in the body of the @code{Debug} unit in the compiler source\n file @file{debug.adb}.\n @end ifclear\n \n-@item -gnatG[nn]\n+@item -gnatG[=nn]\n @cindex @option{-gnatG} (@command{gcc})\n This switch causes the compiler to generate auxiliary output containing\n a pseudo-source listing of the generated expanded code. Like most Ada\n@@ -6814,7 +6814,7 @@ approach to improve efficiency.\n The optional parameter @code{nn} if present after -gnatG specifies an\n alternative maximum line length that overrides the normal default of 72.\n This value is in the range 40-999999, values less than 40 being silently\n-reset to 40.\n+reset to 40. The equal sign is optional.\n \n The format of the output is very similar to standard Ada source, and is\n easily understood by an Ada programmer. The following special syntactic\n@@ -6899,7 +6899,7 @@ representation in base 2-16 (for example, the result of compile time\n evaluation of the expression 1.0/27.0).\n @end table\n \n-@item -gnatD[nn]\n+@item -gnatD[=nn]\n @cindex @option{-gnatD} (@command{gcc})\n When used in conjunction with @option{-gnatG}, this switch causes\n the expanded source, as described above for\n@@ -6930,7 +6930,7 @@ in the expanded source (as comment lines with the original line number).\n The optional parameter @code{nn} if present after -gnatD specifies an\n alternative maximum line length that overrides the normal default of 72.\n This value is in the range 40-999999, values less than 40 being silently\n-reset to 40.\n+reset to 40. The equal sign is optional.\n \n @item -gnatr\n @cindex @option{-gnatr} (@command{gcc})"}, {"sha": "3de151f9583ec43931ffa0908ce799fae2e7fb9f", "filename": "gcc/ada/prj-nmsc.adb", "status": "modified", "additions": 26, "deletions": 22, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f7d7bb5109d0b302fbbe1c925138fb0766398486/gcc%2Fada%2Fprj-nmsc.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f7d7bb5109d0b302fbbe1c925138fb0766398486/gcc%2Fada%2Fprj-nmsc.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-nmsc.adb?ref=f7d7bb5109d0b302fbbe1c925138fb0766398486", "patch": "@@ -6779,38 +6779,42 @@ package body Prj.Nmsc is\n             end;\n          end if;\n \n-         --  Check if the casing is right\n+         --  Check if the file casing is right\n \n          declare\n             Src      : String := File (First .. Last);\n             Src_Last : Positive := Last;\n \n          begin\n-            case Naming.Casing is\n-               when All_Lower_Case =>\n-                  Fixed.Translate\n-                    (Source  => Src,\n-                     Mapping => Lower_Case_Map);\n-\n-               when All_Upper_Case =>\n-                  Fixed.Translate\n-                    (Source  => Src,\n-                     Mapping => Upper_Case_Map);\n-\n-               when Mixed_Case | Unknown =>\n-                  null;\n-            end case;\n+            --  If casing is significant, deal with upper/lower case translate\n+\n+            if File_Names_Case_Sensitive then\n+               case Naming.Casing is\n+                  when All_Lower_Case =>\n+                     Fixed.Translate\n+                       (Source  => Src,\n+                        Mapping => Lower_Case_Map);\n+\n+                  when All_Upper_Case =>\n+                     Fixed.Translate\n+                       (Source  => Src,\n+                        Mapping => Upper_Case_Map);\n+\n+                  when Mixed_Case | Unknown =>\n+                     null;\n+               end case;\n \n-            if Src /= File (First .. Last) then\n-               if Current_Verbosity = High then\n-                  Write_Line (\"   Not a valid file name (casing).\");\n-               end if;\n+               if Src /= File (First .. Last) then\n+                  if Current_Verbosity = High then\n+                     Write_Line (\"   Not a valid file name (casing).\");\n+                  end if;\n \n-               Unit_Name := No_Name;\n-               return;\n+                  Unit_Name := No_Name;\n+                  return;\n+               end if;\n             end if;\n \n-            --  We put the name in lower case\n+            --  Put the name in lower case\n \n             Fixed.Translate\n               (Source  => Src,"}, {"sha": "8178afc1b5ed984bbb2bb01a19c23a1b0d784987", "filename": "gcc/ada/switch-c.adb", "status": "modified", "additions": 2, "deletions": 16, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f7d7bb5109d0b302fbbe1c925138fb0766398486/gcc%2Fada%2Fswitch-c.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f7d7bb5109d0b302fbbe1c925138fb0766398486/gcc%2Fada%2Fswitch-c.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fswitch-c.adb?ref=f7d7bb5109d0b302fbbe1c925138fb0766398486", "patch": "@@ -280,7 +280,7 @@ package body Switch.C is\n \n                --  Scan optional integer line limit value\n \n-               if Ptr <= Max and then Switch_Chars (Ptr) in '0' .. '9' then\n+               if Nat_Present (Switch_Chars, Max, Ptr) then\n                   Scan_Nat (Switch_Chars, Max, Ptr, Sprint_Line_Limit, 'D');\n                   Sprint_Line_Limit := Nat'Max (Sprint_Line_Limit, 40);\n                end if;\n@@ -530,7 +530,7 @@ package body Switch.C is\n \n                --  Scan optional integer line limit value\n \n-               if Ptr <= Max and then Switch_Chars (Ptr) in '0' .. '9' then\n+               if Nat_Present (Switch_Chars, Max, Ptr) then\n                   Scan_Nat (Switch_Chars, Max, Ptr, Sprint_Line_Limit, 'G');\n                   Sprint_Line_Limit := Nat'Max (Sprint_Line_Limit, 40);\n                end if;\n@@ -582,13 +582,6 @@ package body Switch.C is\n \n             when 'j' =>\n                Ptr := Ptr + 1;\n-\n-               --  There may be an equal sign between -gnatj and the value\n-\n-               if Ptr <= Max and then Switch_Chars (Ptr) = '=' then\n-                  Ptr := Ptr + 1;\n-               end if;\n-\n                Scan_Nat (Switch_Chars, Max, Ptr, Error_Msg_Line_Length, C);\n \n             --  Processing for k switch\n@@ -626,13 +619,6 @@ package body Switch.C is\n \n             when 'm' =>\n                Ptr := Ptr + 1;\n-\n-               --  There may be an equal sign between -gnatm and the value\n-\n-               if Ptr <= Max and then Switch_Chars (Ptr) = '=' then\n-                  Ptr := Ptr + 1;\n-               end if;\n-\n                Scan_Nat (Switch_Chars, Max, Ptr, Maximum_Messages, C);\n \n             --  Processing for n switch"}, {"sha": "f318de7f19138a3a5f041b29ad44efdc40d7a8a3", "filename": "gcc/ada/switch.adb", "status": "modified", "additions": 33, "deletions": 11, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f7d7bb5109d0b302fbbe1c925138fb0766398486/gcc%2Fada%2Fswitch.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f7d7bb5109d0b302fbbe1c925138fb0766398486/gcc%2Fada%2Fswitch.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fswitch.adb?ref=f7d7bb5109d0b302fbbe1c925138fb0766398486", "patch": "@@ -148,6 +148,24 @@ package body Switch is\n         and then Switch_Chars (Switch_Chars'First) = '-';\n    end Is_Switch;\n \n+   -----------------\n+   -- Nat_Present --\n+   -----------------\n+\n+   function Nat_Present\n+     (Switch_Chars : String;\n+      Max          : Integer;\n+      Ptr          : Integer) return Boolean\n+   is\n+   begin\n+      return (Ptr <= Max\n+                and then Switch_Chars (Ptr) in '0' .. '9')\n+        or else\n+             (Ptr < Max\n+                and then Switch_Chars (Ptr) = '='\n+                and then Switch_Chars (Ptr + 1) in '0' .. '9');\n+   end Nat_Present;\n+\n    --------------\n    -- Scan_Nat --\n    --------------\n@@ -162,20 +180,24 @@ package body Switch is\n    begin\n       Result := 0;\n \n-      if Ptr > Max or else Switch_Chars (Ptr) not in '0' .. '9' then\n+      if not Nat_Present (Switch_Chars, Max, Ptr) then\n          Osint.Fail (\"missing numeric value for switch: \" & Switch);\n+      end if;\n \n-      else\n-         while Ptr <= Max and then Switch_Chars (Ptr) in '0' .. '9' loop\n-            Result := Result * 10 +\n-              Character'Pos (Switch_Chars (Ptr)) - Character'Pos ('0');\n-            Ptr := Ptr + 1;\n-\n-            if Result > Switch_Max_Value then\n-               Osint.Fail (\"numeric value out of range for switch: \" & Switch);\n-            end if;\n-         end loop;\n+      if Switch_Chars (Ptr) = '=' then\n+         Ptr := Ptr + 1;\n       end if;\n+\n+      while Ptr <= Max and then Switch_Chars (Ptr) in '0' .. '9' loop\n+         Result :=\n+           Result * 10 +\n+             Character'Pos (Switch_Chars (Ptr)) - Character'Pos ('0');\n+         Ptr := Ptr + 1;\n+\n+         if Result > Switch_Max_Value then\n+            Osint.Fail (\"numeric value out of range for switch: \" & Switch);\n+         end if;\n+      end loop;\n    end Scan_Nat;\n \n    --------------"}, {"sha": "9b6c7ea4552b64a856f0b8535e2a4d98c9bc38fe", "filename": "gcc/ada/switch.ads", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f7d7bb5109d0b302fbbe1c925138fb0766398486/gcc%2Fada%2Fswitch.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f7d7bb5109d0b302fbbe1c925138fb0766398486/gcc%2Fada%2Fswitch.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fswitch.ads?ref=f7d7bb5109d0b302fbbe1c925138fb0766398486", "patch": "@@ -81,6 +81,15 @@ private\n    Switch_Max_Value : constant := 999_999;\n    --  Maximum value permitted in switches that take a value\n \n+   function Nat_Present\n+     (Switch_Chars : String;\n+      Max          : Integer;\n+      Ptr          : Integer) return Boolean;\n+   --  Returns True if an integer is at the current scan location or an equal\n+   --  sign. This is used as a guard for calling Scan_Nat. Switch_Chars is the\n+   --  string containing the switch, and Ptr points just past the switch\n+   --  character. Max is the maximum alllowed value of Ptr.\n+\n    procedure Scan_Nat\n      (Switch_Chars : String;\n       Max          : Integer;\n@@ -91,7 +100,9 @@ private\n    --  past the switch character, on exit it points past the last digit of the\n    --  integer value. Max is the maximum allowed value of Ptr, so the scan is\n    --  restricted to Switch_Chars (Ptr .. Max). It is posssible for Ptr to be\n-   --  one greater than Max on return if the entire string is digits.\n+   --  one greater than Max on return if the entire string is digits. Scan_Nat\n+   --  will skip an optional equal sign if it is present. Nat_Present must be\n+   --  True, or an error will be signalled.\n \n    procedure Scan_Pos\n      (Switch_Chars : String;"}, {"sha": "290976591aad43bed250913421ee148f52805f4b", "filename": "gcc/ada/vms_data.ads", "status": "modified", "additions": 9, "deletions": 7, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f7d7bb5109d0b302fbbe1c925138fb0766398486/gcc%2Fada%2Fvms_data.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f7d7bb5109d0b302fbbe1c925138fb0766398486/gcc%2Fada%2Fvms_data.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fvms_data.ads?ref=f7d7bb5109d0b302fbbe1c925138fb0766398486", "patch": "@@ -131,7 +131,7 @@ package VMS_Data is\n    --  no space is inserted between the switch and the file name.\n \n    --  The NUMERIC_TRANSLATION format is similar to the FILE_TRANSLATION case\n-   --  except that the parameter is a decimal integer in the range 0 to 999.\n+   --  except that the parameter is a decimal integer in the range 0 to 999999.\n \n    --  For the OPTIONS_TRANSLATION case, GNATCmd similarly permits one or\n    --  more options to appear (although only in some cases does the use of\n@@ -1484,14 +1484,15 @@ package VMS_Data is\n                                             \"-gnatm999999\";\n    --  NODOC (see /ERROR_LIMIT)\n \n-   S_GCC_Expand  : aliased constant S := \"/EXPAND_SOURCE \"                 &\n+   S_GCC_Expand  : aliased constant S := \"/EXPAND_SOURCE=#\"                 &\n                                             \"-gnatG\";\n-   --        /NOEXPAND_SOURCE (D)\n+   --        /NOEXPAND_SOURCE[=nnn] (D)\n    --        /EXPAND_SOURCE\n    --\n    --   Produces a listing of the expanded code in Ada source form. For\n    --   example, all tasking constructs are reduced to appropriate run-time\n-   --   library calls.\n+   --   library calls. The parameter is the maximum line length for the\n+   --   listing (default is 72).\n \n    S_GCC_Extend  : aliased constant S := \"/EXTENSIONS_ALLOWED \"            &\n                                             \"-gnatX\";\n@@ -3329,9 +3330,9 @@ package VMS_Data is\n                                              \"-gnatWn\";\n    --  NODOC (see /WIDE_CHARACTER_ENCODING)\n \n-   S_GCC_Xdebug  : aliased constant S := \"/XDEBUG \"                        &\n+   S_GCC_Xdebug  : aliased constant S := \"/XDEBUG=#\"                        &\n                                              \"-gnatD\";\n-   --        /NOXDEBUG (D)\n+   --        /NOXDEBUG[=nnn] (D)\n    --        /XDEBUG\n    --\n    --   Output expanded source files for source level debugging.\n@@ -3341,7 +3342,8 @@ package VMS_Data is\n    --   refer to the generated file. This allows source level debugging using\n    --   the generated code which is sometimes useful for complex code, for\n    --   example to find out exactly which part of a complex construction\n-   --   raised an exception.\n+   --   raised an exception. The parameter if present is the maximum line\n+   --   length for the output (default 72).\n \n    S_GCC_Xref    : aliased constant S := \"/XREF=\"                          &\n                                             \"GENERATE \"                    &"}]}