{"sha": "9cad5fe7b54a032107af1bdbaaf97e6fee98e14c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWNhZDVmZTdiNTRhMDMyMTA3YWYxYmRiYWFmOTdlNmZlZTk4ZTE0Yw==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2010-09-21T15:19:02Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2010-09-21T15:19:02Z"}, "message": "dwarf2out.c (dwarf2out_decl): Do not always generate a DIE for bool for C++.\n\n2010-09-21  Richard Guenther  <rguenther@suse.de>\n\n\t* dwarf2out.c (dwarf2out_decl): Do not always generate a DIE\n\tfor bool for C++.\n\nFrom-SVN: r164483", "tree": {"sha": "a1105d737399e0ff992654f583951355243dc73f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a1105d737399e0ff992654f583951355243dc73f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9cad5fe7b54a032107af1bdbaaf97e6fee98e14c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9cad5fe7b54a032107af1bdbaaf97e6fee98e14c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9cad5fe7b54a032107af1bdbaaf97e6fee98e14c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9cad5fe7b54a032107af1bdbaaf97e6fee98e14c/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "5b50fc0c883adcc707ea281df677e602a4b5a96d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5b50fc0c883adcc707ea281df677e602a4b5a96d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5b50fc0c883adcc707ea281df677e602a4b5a96d"}], "stats": {"total": 16, "additions": 6, "deletions": 10}, "files": [{"sha": "804bbf74a44f73bdf6291998fde51bfe44035113", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9cad5fe7b54a032107af1bdbaaf97e6fee98e14c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9cad5fe7b54a032107af1bdbaaf97e6fee98e14c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9cad5fe7b54a032107af1bdbaaf97e6fee98e14c", "patch": "@@ -1,3 +1,8 @@\n+2010-09-21  Richard Guenther  <rguenther@suse.de>\n+\n+\t* dwarf2out.c (dwarf2out_decl): Do not always generate a DIE\n+\tfor bool for C++.\n+\n 2010-09-21  Bernd Schmidt  <bernds@codesourcery.com>\n \n \t* config/arm/iterators.md (qhs_extenddi_op): New mode_attr."}, {"sha": "25104fba58234874e98c293a8956e36db27dc477", "filename": "gcc/dwarf2out.c", "status": "modified", "additions": 1, "deletions": 10, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9cad5fe7b54a032107af1bdbaaf97e6fee98e14c/gcc%2Fdwarf2out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9cad5fe7b54a032107af1bdbaaf97e6fee98e14c/gcc%2Fdwarf2out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2out.c?ref=9cad5fe7b54a032107af1bdbaaf97e6fee98e14c", "patch": "@@ -21014,16 +21014,7 @@ dwarf2out_decl (tree decl)\n       /* Don't bother trying to generate any DIEs to represent any of the\n \t normal built-in types for the language we are compiling.  */\n       if (DECL_IS_BUILTIN (decl))\n-\t{\n-\t  /* OK, we need to generate one for `bool' so GDB knows what type\n-\t     comparisons have.  */\n-\t  if (is_cxx ()\n-\t      && TREE_CODE (TREE_TYPE (decl)) == BOOLEAN_TYPE\n-\t      && ! DECL_IGNORED_P (decl))\n-\t    modified_type_die (TREE_TYPE (decl), 0, 0, NULL);\n-\n-\t  return;\n-\t}\n+\treturn;\n \n       /* If we are in terse mode, don't generate any DIEs for types.  */\n       if (debug_info_level <= DINFO_LEVEL_TERSE)"}]}