{"sha": "86fcf7cebd484a1e4f595fa7951bf8ea17cf3566", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODZmY2Y3Y2ViZDQ4NGExZTRmNTk1ZmE3OTUxYmY4ZWExN2NmMzU2Ng==", "commit": {"author": {"name": "Trevor Saunders", "email": "tsaunders@mozilla.com", "date": "2014-06-25T16:02:04Z"}, "committer": {"name": "Trevor Saunders", "email": "tbsaunde@gcc.gnu.org", "date": "2014-06-25T16:02:04Z"}, "message": "fix checking=fold\n\ngcc/\n\n        PR bootstrap/61598\n        * fold-const.c (fold_checksum_tree): Use a hash_table of const\n        tree_node * instead of tree_node *.\n        (fold): Adjust.\n        (print_fold_checksum): Likewise.\n        (fold_check_failed): Likewise.\n        (debug_fold_checksum): Likewise.\n        (fold_build1_stat_loc): Likewise.\n        (fold_build2_stat_loc): Likewise.\n        (fold_build3_stat_loc): Likewise.\n        (fold_build_call_array_loc): Likewise.\n\nFrom-SVN: r211985", "tree": {"sha": "e68fd6aca3c293cec2ed92a0c0af5e784a02e7b1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e68fd6aca3c293cec2ed92a0c0af5e784a02e7b1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/86fcf7cebd484a1e4f595fa7951bf8ea17cf3566", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/86fcf7cebd484a1e4f595fa7951bf8ea17cf3566", "html_url": "https://github.com/Rust-GCC/gccrs/commit/86fcf7cebd484a1e4f595fa7951bf8ea17cf3566", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/86fcf7cebd484a1e4f595fa7951bf8ea17cf3566/comments", "author": null, "committer": null, "parents": [{"sha": "b36e833f1a28c18f801c299e8d103cf983b2932d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b36e833f1a28c18f801c299e8d103cf983b2932d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b36e833f1a28c18f801c299e8d103cf983b2932d"}], "stats": {"total": 36, "additions": 25, "deletions": 11}, "files": [{"sha": "9eb05243cbf0e3cd1fb0cb134ee7783744d806f0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/86fcf7cebd484a1e4f595fa7951bf8ea17cf3566/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/86fcf7cebd484a1e4f595fa7951bf8ea17cf3566/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=86fcf7cebd484a1e4f595fa7951bf8ea17cf3566", "patch": "@@ -1,3 +1,17 @@\n+2014-06-25  Trevor Saunders  <tsaunders@mozilla.com>\n+\n+\tPR bootstrap/61598\n+\t* fold-const.c (fold_checksum_tree): Use a hash_table of const\n+\ttree_node * instead of tree_node *.\n+\t(fold): Adjust.\n+\t(print_fold_checksum): Likewise.\n+\t(fold_check_failed): Likewise.\n+\t(debug_fold_checksum): Likewise.\n+\t(fold_build1_stat_loc): Likewise.\n+\t(fold_build2_stat_loc): Likewise.\n+\t(fold_build3_stat_loc): Likewise.\n+\t(fold_build_call_array_loc): Likewise.\n+\n 2014-06-25  David Edelsohn  <dje.gcc@gmail.com>\n \n \t* config/rs6000/xcoff.h (ASM_DECLARE_FUNCTION_NAME): Replace"}, {"sha": "d22eac15962a7abfb605bb79b6f9b7809228dab3", "filename": "gcc/fold-const.c", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/86fcf7cebd484a1e4f595fa7951bf8ea17cf3566/gcc%2Ffold-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/86fcf7cebd484a1e4f595fa7951bf8ea17cf3566/gcc%2Ffold-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const.c?ref=86fcf7cebd484a1e4f595fa7951bf8ea17cf3566", "patch": "@@ -14686,7 +14686,7 @@ fold (tree expr)\n #undef fold\n \n static void fold_checksum_tree (const_tree, struct md5_ctx *,\n-\t\t\t\thash_table<pointer_hash<tree_node> > *);\n+\t\t\t\thash_table<pointer_hash<const tree_node> > *);\n static void fold_check_failed (const_tree, const_tree);\n void print_fold_checksum (const_tree);\n \n@@ -14700,7 +14700,7 @@ fold (tree expr)\n   tree ret;\n   struct md5_ctx ctx;\n   unsigned char checksum_before[16], checksum_after[16];\n-  hash_table<pointer_hash<tree_node> > ht (32);\n+  hash_table<pointer_hash<const tree_node> > ht (32);\n \n   md5_init_ctx (&ctx);\n   fold_checksum_tree (expr, &ctx, &ht);\n@@ -14724,7 +14724,7 @@ print_fold_checksum (const_tree expr)\n {\n   struct md5_ctx ctx;\n   unsigned char checksum[16], cnt;\n-  hash_table<pointer_hash<tree_node> > ht (32);\n+  hash_table<pointer_hash<const tree_node> > ht (32);\n \n   md5_init_ctx (&ctx);\n   fold_checksum_tree (expr, &ctx, &ht);\n@@ -14742,9 +14742,9 @@ fold_check_failed (const_tree expr ATTRIBUTE_UNUSED, const_tree ret ATTRIBUTE_UN\n \n static void\n fold_checksum_tree (const_tree expr, struct md5_ctx *ctx,\n-\t\t    hash_table<pointer_hash <tree_node> > *ht)\n+\t\t    hash_table<pointer_hash <const tree_node> > *ht)\n {\n-  tree_node **slot;\n+  const tree_node **slot;\n   enum tree_code code;\n   union tree_node buf;\n   int i, len;\n@@ -14755,7 +14755,7 @@ fold_checksum_tree (const_tree expr, struct md5_ctx *ctx,\n   slot = ht->find_slot (expr, INSERT);\n   if (*slot != NULL)\n     return;\n-  *slot = CONST_CAST_TREE (expr);\n+  *slot = expr;\n   code = TREE_CODE (expr);\n   if (TREE_CODE_CLASS (code) == tcc_declaration\n       && DECL_ASSEMBLER_NAME_SET_P (expr))\n@@ -14899,7 +14899,7 @@ debug_fold_checksum (const_tree t)\n   int i;\n   unsigned char checksum[16];\n   struct md5_ctx ctx;\n-  hash_table<pointer_hash<tree_node> > ht (32);\n+  hash_table<pointer_hash<const tree_node> > ht (32);\n \n   md5_init_ctx (&ctx);\n   fold_checksum_tree (t, &ctx, &ht);\n@@ -14927,7 +14927,7 @@ fold_build1_stat_loc (location_t loc,\n #ifdef ENABLE_FOLD_CHECKING\n   unsigned char checksum_before[16], checksum_after[16];\n   struct md5_ctx ctx;\n-  hash_table<pointer_hash<tree_node> > ht (32);\n+  hash_table<pointer_hash<const tree_node> > ht (32);\n \n   md5_init_ctx (&ctx);\n   fold_checksum_tree (op0, &ctx, &ht);\n@@ -14968,7 +14968,7 @@ fold_build2_stat_loc (location_t loc,\n \t\tchecksum_after_op0[16],\n \t\tchecksum_after_op1[16];\n   struct md5_ctx ctx;\n-  hash_table<pointer_hash<tree_node> > ht (32);\n+  hash_table<pointer_hash<const tree_node> > ht (32);\n \n   md5_init_ctx (&ctx);\n   fold_checksum_tree (op0, &ctx, &ht);\n@@ -15022,7 +15022,7 @@ fold_build3_stat_loc (location_t loc, enum tree_code code, tree type,\n \t\tchecksum_after_op1[16],\n \t\tchecksum_after_op2[16];\n   struct md5_ctx ctx;\n-  hash_table<pointer_hash<tree_node> > ht (32);\n+  hash_table<pointer_hash<const tree_node> > ht (32);\n \n   md5_init_ctx (&ctx);\n   fold_checksum_tree (op0, &ctx, &ht);\n@@ -15088,7 +15088,7 @@ fold_build_call_array_loc (location_t loc, tree type, tree fn,\n \t\tchecksum_after_fn[16],\n \t\tchecksum_after_arglist[16];\n   struct md5_ctx ctx;\n-  hash_table<pointer_hash<tree_node> > ht (32);\n+  hash_table<pointer_hash<const tree_node> > ht (32);\n   int i;\n \n   md5_init_ctx (&ctx);"}]}