{"sha": "2a8ce4b52f5892a10a02b94d7be689e59a444ff6", "node_id": "C_kwDOANBUbNoAKDJhOGNlNGI1MmY1ODkyYTEwYTAyYjk0ZDdiZTY4OWU1OWE0NDRmZjY", "commit": {"author": {"name": "Richard Sandiford", "email": "richard.sandiford@arm.com", "date": "2023-03-02T10:30:20Z"}, "committer": {"name": "Richard Sandiford", "email": "richard.sandiford@arm.com", "date": "2023-03-02T10:30:20Z"}, "message": "vect: Fix voluntarily-masked negative conditionals [PR108430]\n\nvectorizable_condition checks whether a COND_EXPR condition is used\nelsewhere with a loop mask.  If so, it applies the loop mask to the\nCOND_EXPR too, to reduce the number of live masks and to increase the\nchance of combining the AND with the comparison.\n\nThere is also code to do this for inverted conditions.  E.g. if\nwe have a < b ? c : d and something else is conditional on !(a < b)\n(such as a load in d), we use !(a < b) ? d : c and apply the loop\nmask to !(a < b).\n\nThis inversion relied on the function's bitop1/bitop2 mechanism.\nHowever, that mechanism is skipped if the condition is split out of\nthe COND_EXPR as a separate statement.  This meant that we could end\nup using the inverse of the intended condition.\n\nThere is a separate way of negating the condition when a mask\nis being applied (which is also used for EXTRACT_LAST reductions).\nThis patch uses that instead.\n\nAs well as the testcase, this fixes aarch64/sve/vcond_{4,17}_run.c.\n\ngcc/\n\tPR tree-optimization/108430\n\t* tree-vect-stmts.cc (vectorizable_condition): Fix handling\n\tof inverted condition.\n\ngcc/testsuite/\n\tPR tree-optimization/108430\n\t* gcc.target/aarch64/sve/pr108430.c: New test.", "tree": {"sha": "b626f5a8e9ae3a6a7c6a286db63592fc004030dc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b626f5a8e9ae3a6a7c6a286db63592fc004030dc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2a8ce4b52f5892a10a02b94d7be689e59a444ff6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2a8ce4b52f5892a10a02b94d7be689e59a444ff6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2a8ce4b52f5892a10a02b94d7be689e59a444ff6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2a8ce4b52f5892a10a02b94d7be689e59a444ff6/comments", "author": {"login": "rsandifo-arm", "id": 28043039, "node_id": "MDQ6VXNlcjI4MDQzMDM5", "avatar_url": "https://avatars.githubusercontent.com/u/28043039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo-arm", "html_url": "https://github.com/rsandifo-arm", "followers_url": "https://api.github.com/users/rsandifo-arm/followers", "following_url": "https://api.github.com/users/rsandifo-arm/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo-arm/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo-arm/orgs", "repos_url": "https://api.github.com/users/rsandifo-arm/repos", "events_url": "https://api.github.com/users/rsandifo-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo-arm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rsandifo-arm", "id": 28043039, "node_id": "MDQ6VXNlcjI4MDQzMDM5", "avatar_url": "https://avatars.githubusercontent.com/u/28043039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo-arm", "html_url": "https://github.com/rsandifo-arm", "followers_url": "https://api.github.com/users/rsandifo-arm/followers", "following_url": "https://api.github.com/users/rsandifo-arm/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo-arm/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo-arm/orgs", "repos_url": "https://api.github.com/users/rsandifo-arm/repos", "events_url": "https://api.github.com/users/rsandifo-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo-arm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cc88366a80e35b3e53141f49d3071010ff3c2ef8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cc88366a80e35b3e53141f49d3071010ff3c2ef8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cc88366a80e35b3e53141f49d3071010ff3c2ef8"}], "stats": {"total": 24, "additions": 22, "deletions": 2}, "files": [{"sha": "e7ce0f6d79370f26ece2dde0e3268827adafabfa", "filename": "gcc/testsuite/gcc.target/aarch64/sve/pr108430.c", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2a8ce4b52f5892a10a02b94d7be689e59a444ff6/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Fpr108430.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2a8ce4b52f5892a10a02b94d7be689e59a444ff6/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Fpr108430.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Fpr108430.c?ref=2a8ce4b52f5892a10a02b94d7be689e59a444ff6", "patch": "@@ -0,0 +1,21 @@\n+/* { dg-do run { target aarch64_sve512_hw } } */\n+/* { dg-options \"-O3 -msve-vector-bits=512\" } */\n+\n+long d = 1;\n+static int i = 37;\n+static unsigned long a[22];\n+static unsigned short c[22];\n+static unsigned g[80];\n+static unsigned short *h = c;\n+static unsigned long *j = a;\n+int main() {\n+  for (long m = 0; m < 8; ++m)\n+    d = 1;\n+  for (unsigned char p = 0; p < 17; p += 2)\n+  {\n+    long t = h[p] ? i : j[p];\n+    g[p] = t;\n+  }\n+  if (g[0])\n+    __builtin_abort ();\n+}"}, {"sha": "77ad8b7850612044b3c9eaff57e1a4bccf276471", "filename": "gcc/tree-vect-stmts.cc", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2a8ce4b52f5892a10a02b94d7be689e59a444ff6/gcc%2Ftree-vect-stmts.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2a8ce4b52f5892a10a02b94d7be689e59a444ff6/gcc%2Ftree-vect-stmts.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-stmts.cc?ref=2a8ce4b52f5892a10a02b94d7be689e59a444ff6", "patch": "@@ -10756,11 +10756,10 @@ vectorizable_condition (vec_info *vinfo,\n \t\t  cond.code = orig_code;\n \t\t  if (loop_vinfo->scalar_cond_masked_set.contains (cond))\n \t\t    {\n-\t\t      bitop1 = orig_code;\n-\t\t      bitop2 = BIT_NOT_EXPR;\n \t\t      masks = &LOOP_VINFO_MASKS (loop_vinfo);\n \t\t      cond_code = cond.code;\n \t\t      swap_cond_operands = true;\n+\t\t      must_invert_cmp_result = true;\n \t\t    }\n \t\t}\n \t    }"}]}