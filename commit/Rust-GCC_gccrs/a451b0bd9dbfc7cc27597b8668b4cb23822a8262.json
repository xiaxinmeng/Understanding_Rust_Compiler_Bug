{"sha": "a451b0bd9dbfc7cc27597b8668b4cb23822a8262", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTQ1MWIwYmQ5ZGJmYzdjYzI3NTk3Yjg2NjhiNGNiMjM4MjJhODI2Mg==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@cs.umass.edu", "date": "2004-01-31T17:31:40Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2004-01-31T17:31:40Z"}, "message": "invoke.texi: Follow spelling conventions.\n\n\t* doc/invoke.texi: Follow spelling conventions.\n\t* doc/tm.texi: Likewise.\n\nFrom-SVN: r77040", "tree": {"sha": "25dedaa29bc5b80c8d0ef434180f9e0c06afd742", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/25dedaa29bc5b80c8d0ef434180f9e0c06afd742"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a451b0bd9dbfc7cc27597b8668b4cb23822a8262", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a451b0bd9dbfc7cc27597b8668b4cb23822a8262", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a451b0bd9dbfc7cc27597b8668b4cb23822a8262", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a451b0bd9dbfc7cc27597b8668b4cb23822a8262/comments", "author": null, "committer": null, "parents": [{"sha": "e53e0c56793c41fb4964db138f72359254b5e0a7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e53e0c56793c41fb4964db138f72359254b5e0a7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e53e0c56793c41fb4964db138f72359254b5e0a7"}], "stats": {"total": 11, "additions": 8, "deletions": 3}, "files": [{"sha": "4207bb0b62d45a34601e017b127108d00c51e223", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a451b0bd9dbfc7cc27597b8668b4cb23822a8262/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a451b0bd9dbfc7cc27597b8668b4cb23822a8262/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a451b0bd9dbfc7cc27597b8668b4cb23822a8262", "patch": "@@ -1,3 +1,8 @@\n+2004-01-31  Kazu Hirata  <kazu@cs.umass.edu>\n+\n+\t* doc/invoke.texi: Follow spelling conventions.\n+\t* doc/tm.texi: Likewise.\n+\n 2004-01-31  Kazu Hirata  <kazu@cs.umass.edu>\n \n \t* doc/install.texi: Fix typos."}, {"sha": "c49c44f45db3630281f97701b8d459a6010f0e4b", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a451b0bd9dbfc7cc27597b8668b4cb23822a8262/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a451b0bd9dbfc7cc27597b8668b4cb23822a8262/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=a451b0bd9dbfc7cc27597b8668b4cb23822a8262", "patch": "@@ -3578,7 +3578,7 @@ Turning on optimization flags makes the compiler attempt to improve\n the performance and/or code size at the expense of compilation time\n and possibly the ability to debug the program.\n \n-The compiler performs optimisation based on the knowledge it has of\n+The compiler performs optimization based on the knowledge it has of\n the program.  Using the @option{-funit-at-a-time} flag will allow the\n compiler to consider information gained from later functions in the\n file when compiling a function.  Compiling multiple files at once to a"}, {"sha": "fe43af94e0503cefa573e581a3033ee63cde2486", "filename": "gcc/doc/tm.texi", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a451b0bd9dbfc7cc27597b8668b4cb23822a8262/gcc%2Fdoc%2Ftm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a451b0bd9dbfc7cc27597b8668b4cb23822a8262/gcc%2Fdoc%2Ftm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Ftm.texi?ref=a451b0bd9dbfc7cc27597b8668b4cb23822a8262", "patch": "@@ -3304,7 +3304,7 @@ should return the .eh_frame register number.  The default is\n Define this macro to map register numbers held in the call frame info\n that gcc has collected using @code{DWARF_FRAME_REGNUM} to those that\n should be output in .debug_frame (@code{@var{for_eh}} is zero) and\n-.eh_frame (@code{@var{for_eh}} is non-zero).  The default is to \n+.eh_frame (@code{@var{for_eh}} is nonzero).  The default is to \n return @code{@var{regno}}.\n \n @end defmac\n@@ -8442,7 +8442,7 @@ and @code{TARGET_OPTIONS}.  It is given data which came from\n is no need for extensive validity checking).  It returns @code{NULL} if\n it is safe to load a PCH file with this data, or a suitable error message\n if not.  The error message will be presented to the user, so it should\n-be localised.\n+be localized.\n @end deftypefn\n \n @node Misc"}]}