{"sha": "3f0ae30efc3ebc8978440ff2137de65e194db99f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2YwYWUzMGVmYzNlYmM4OTc4NDQwZmYyMTM3ZGU2NWUxOTRkYjk5Zg==", "commit": {"author": {"name": "Toon Moene", "email": "toon@moene.indiv.nluug.nl", "date": "2001-06-10T13:23:19Z"}, "committer": {"name": "Toon Moene", "email": "toon@gcc.gnu.org", "date": "2001-06-10T13:23:19Z"}, "message": "g77install.texi: Remove.\n\n2001-06-10  Toon Moene  <toon@moene.indiv.nluug.nl>\n\n\t* g77install.texi: Remove.\n\t* Make-lang.in: Remove all mention of g77install.texi.\n\t* g77.texi: Add documentation on how to get output always\n\tflushed and how to increase the maximum unit number.\n\tRemove all mention of g77install.texi.\n\t* bugs.texi: Add documentation on how to change the threshold\n\tfor putting local arrays on the stack.\n\nFrom-SVN: r43139", "tree": {"sha": "46ffec4af95d883602925e35b5023023dff63176", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/46ffec4af95d883602925e35b5023023dff63176"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3f0ae30efc3ebc8978440ff2137de65e194db99f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3f0ae30efc3ebc8978440ff2137de65e194db99f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3f0ae30efc3ebc8978440ff2137de65e194db99f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3f0ae30efc3ebc8978440ff2137de65e194db99f/comments", "author": null, "committer": null, "parents": [{"sha": "9eee2c76b87aa978d6ee366d877d6dd32c17fe45", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9eee2c76b87aa978d6ee366d877d6dd32c17fe45", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9eee2c76b87aa978d6ee366d877d6dd32c17fe45"}], "stats": {"total": 714, "additions": 143, "deletions": 571}, "files": [{"sha": "85ba0e5f57b22229d25bd1c6080fd56e2045cfc6", "filename": "gcc/f/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f0ae30efc3ebc8978440ff2137de65e194db99f/gcc%2Ff%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f0ae30efc3ebc8978440ff2137de65e194db99f/gcc%2Ff%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2FChangeLog?ref=3f0ae30efc3ebc8978440ff2137de65e194db99f", "patch": "@@ -1,3 +1,13 @@\n+2001-06-10  Toon Moene  <toon@moene.indiv.nluug.nl>\n+\n+\t* g77install.texi: Remove.\n+\t* Make-lang.in: Remove all mention of g77install.texi.\n+\t* g77.texi: Add documentation on how to get output always\n+\tflushed and how to increase the maximum unit number.\n+\tRemove all mention of g77install.texi.\n+\t* bugs.texi: Add documentation on how to change the threshold\n+\tfor putting local arrays on the stack.\n+\n 2001-06-03  Toon Moene  <toon@moene.indiv.nluug.nl>\n \n \t* root.texi: Fix typo in patches e-mail address."}, {"sha": "14c1b8366ac5ab0c8cf6735c63ac5eac3c79cbfd", "filename": "gcc/f/Make-lang.in", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f0ae30efc3ebc8978440ff2137de65e194db99f/gcc%2Ff%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f0ae30efc3ebc8978440ff2137de65e194db99f/gcc%2Ff%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2FMake-lang.in?ref=3f0ae30efc3ebc8978440ff2137de65e194db99f", "patch": "@@ -170,7 +170,7 @@ f77.dvi: f/g77.dvi\n \n # g77 documentation.\n $(srcdir)/f/g77.info: $(srcdir)/f/g77.texi $(srcdir)/f/bugs.texi \\\n-\t\t$(srcdir)/f/ffe.texi $(srcdir)/f/g77install.texi \\\n+\t\t$(srcdir)/f/ffe.texi \\\n \t\t$(srcdir)/f/news.texi  $(srcdir)/f/intdoc.texi \\\n \t\t$(srcdir)/f/root.texi $(srcdir)/doc/fdl.texi\n \tcase \"$(LANGUAGES)\" in \\\n@@ -183,7 +183,7 @@ $(srcdir)/f/g77.info: $(srcdir)/f/g77.texi $(srcdir)/f/bugs.texi \\\n \telse true; fi\n \n f/g77.dvi: $(srcdir)/f/g77.texi $(srcdir)/f/bugs.texi \\\n-\t\t$(srcdir)/f/ffe.texi $(srcdir)/f/g77install.texi \\\n+\t\t$(srcdir)/f/ffe.texi \\\n \t\t$(srcdir)/f/news.texi  $(srcdir)/f/intdoc.texi \\\n \t\t$(srcdir)/f/root.texi $(srcdir)/doc/fdl.texi\n \tcase \"$(LANGUAGES)\" in \\"}, {"sha": "382ed08f6433b81a03ebf061606c0a72fd4ae730", "filename": "gcc/f/bugs.texi", "status": "modified", "additions": 36, "deletions": 17, "changes": 53, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f0ae30efc3ebc8978440ff2137de65e194db99f/gcc%2Ff%2Fbugs.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f0ae30efc3ebc8978440ff2137de65e194db99f/gcc%2Ff%2Fbugs.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Fbugs.texi?ref=3f0ae30efc3ebc8978440ff2137de65e194db99f", "patch": "@@ -1,4 +1,4 @@\n-@c Copyright (C) 1995, 1996, 1997, 1998, 1999, 2000 Free Software Foundation, Inc.\n+@c Copyright (C) 1995, 1996, 1997, 1998, 1999, 2000, 2001 Free Software Foundation, Inc.\n @c This is part of the G77 manual.\n @c For copying conditions, see the file g77.texi.\n \n@@ -9,7 +9,7 @@\n @c in the standalone derivations of this file (e.g. BUGS).\n @set copyrights-bugs 1995,1996,1997,1998,1999,2000,2001\n \n-@set last-update-bugs 2001-05-22\n+@set last-update-bugs 2001-06-10\n \n @include root.texi\n \n@@ -82,18 +82,6 @@ is available via\n @uref{http://www.gnu.org/software/gcc/onlinedocs/g77_bugs.html}.\n Follow the ``Known Bugs'' link.\n \n-@ifset DOC-G77\n-For information on bugs that might afflict people who\n-configure, port, build, and install @code{g77},\n-see @ref{Problems Installing}.\n-@end ifset\n-\n-@ifset DOC-BUGS\n-For information on bugs that might afflict people who\n-configure, port, build, and install @code{g77},\n-see \"Problems Installing\" in @file{@value{path-g77}/INSTALL}.\n-@end ifset\n-\n The following information was last updated on @value{last-update-bugs}:\n \n @itemize @bullet\n@@ -167,9 +155,40 @@ improvements to the compiler.)\n Note that @code{g77} does display a warning message to\n notify the user before the compiler appears to hang.\n @ifset DOC-G77\n-@xref{Large Initialization,,Initialization of Large Aggregate Areas},\n-for information on how to change the point at which\n-@code{g77} decides to issue this warning.\n+A warning message is issued when @code{g77} sees code that provides\n+initial values (e.g. via @code{DATA}) to an aggregate area (@code{COMMON}\n+or @code{EQUIVALENCE}, or even a large enough array or @code{CHARACTER}\n+variable)\n+that is large enough to increase @code{g77}'s compile time by roughly\n+a factor of 10.\n+\n+This size currently is quite small, since @code{g77}\n+currently has a known bug requiring too much memory\n+and time to handle such cases.\n+In @file{@value{path-g77}/data.c}, the macro\n+@code{FFEDATA_sizeTOO_BIG_INIT_} is defined\n+to the minimum size for the warning to appear.\n+The size is specified in storage units,\n+which can be bytes, words, or whatever, on a case-by-case basis.\n+\n+After changing this macro definition, you must\n+(of course) rebuild and reinstall @code{g77} for\n+the change to take effect.\n+\n+Note that, as of version 0.5.18, improvements have\n+reduced the scope of the problem for @emph{sparse}\n+initialization of large arrays, especially those\n+with large, contiguous uninitialized areas.\n+However, the warning is issued at a point prior to\n+when @code{g77} knows whether the initialization is sparse,\n+and delaying the warning could mean it is produced\n+too late to be helpful.\n+\n+Therefore, the macro definition should not be adjusted to\n+reflect sparse cases.\n+Instead, adjust it to generate the warning when densely\n+initialized arrays begin to cause responses noticeably slower\n+than linear performance would suggest.\n @end ifset\n \n @cindex code, displaying main source"}, {"sha": "60dc1b14a7729c958ca921225caf0efd7cd3e7b8", "filename": "gcc/f/g77.texi", "status": "modified", "additions": 95, "deletions": 41, "changes": 136, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f0ae30efc3ebc8978440ff2137de65e194db99f/gcc%2Ff%2Fg77.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f0ae30efc3ebc8978440ff2137de65e194db99f/gcc%2Ff%2Fg77.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Fg77.texi?ref=3f0ae30efc3ebc8978440ff2137de65e194db99f", "patch": "@@ -2,7 +2,7 @@\n @c %**start of header\n @setfilename g77.info\n \n-@set last-update 2001-06-03\n+@set last-update 2001-06-10\n @set copyrights-g77 1995,1996,1997,1998,1999,2000,2001\n \n @include root.texi\n@@ -244,7 +244,6 @@ most consistent with the @code{g77} product in that version.\n * Other Dialects::  Dialects of Fortran supported by @code{g77}.\n * Other Compilers:: Fortran compilers other than @code{g77}.\n * Other Languages:: Languages other than Fortran.\n-* Installation::    How to configure, compile and install GNU Fortran.\n * Debugging and Interfacing::  How @code{g77} generates code.\n * Collected Fortran Wisdom::  How to avoid Trouble.\n * Trouble::         If you have trouble with GNU Fortran.\n@@ -897,9 +896,6 @@ If you intend to write or otherwise compile code that is\n not already strictly conforming ANSI FORTRAN 77---and this\n is probably everyone---you should see @ref{Language}.\n \n-If you don't already have @code{g77} installed on your\n-system, you must see @ref{Installation}.\n-\n If you run into trouble getting Fortran code to compile,\n link, run, or work properly, you might find answers\n if you see @ref{Debugging and Interfacing},\n@@ -8356,8 +8352,6 @@ These are in @file{@value{path-libf2c}/libF77/}, named @file{main.c},\n Also, the file @file{@value{path-g77}/com.c} contains the code @code{g77}\n uses to open-code (inline) references to @code{IARGC}.\n \n-@include g77install.texi\n-\n @node Debugging and Interfacing\n @chapter Debugging and Interfacing\n @cindex debugging\n@@ -10225,9 +10219,46 @@ that a compile-time option to @code{g77} or @code{f2c} could\n result in generating the appropriate calls to flushing or\n non-flushing library routines.)\n \n-@xref{Always Flush Output}, for information on how to modify\n-the @code{g77} source tree so that a version of @code{libg2c}\n-can be built and installed with the @code{ALWAYS_FLUSH} macro defined.\n+Some Fortran programs require output\n+(writes) to be flushed to the operating system (under UNIX,\n+via the @code{fflush()} library call) so that errors,\n+such as disk full, are immediately flagged via the relevant\n+@code{ERR=} and @code{IOSTAT=} mechanism, instead of such\n+errors being flagged later as subsequent writes occur, forcing\n+the previously written data to disk, or when the file is\n+closed.\n+\n+Essentially, the difference can be viewed as synchronous error\n+reporting (immediate flagging of errors during writes) versus\n+asynchronous, or, more precisely, buffered error reporting\n+(detection of errors might be delayed).\n+\n+@code{libg2c} supports flagging write errors immediately when\n+it is built with the @code{ALWAYS_FLUSH} macro defined.\n+This results in a @code{libg2c} that runs slower, sometimes\n+quite a bit slower, under certain circumstances---for example,\n+accessing files via the networked file system NFS---but the\n+effect can be more reliable, robust file I/O.\n+\n+If you know that Fortran programs requiring this level of precision\n+of error reporting are to be compiled using the\n+version of @code{g77} you are building, you might wish to\n+modify the @code{g77} source tree so that the version of\n+@code{libg2c} is built with the @code{ALWAYS_FLUSH} macro\n+defined, enabling this behavior.\n+\n+To do this, find this line in @file{@value{path-libf2c}/f2c.h} in\n+your @code{g77} source tree:\n+\n+@example\n+/* #define ALWAYS_FLUSH */\n+@end example\n+\n+Remove the leading @samp{/*@w{ }},\n+so the line begins with @samp{#define},\n+and the trailing @samp{@w{ }*/}.\n+\n+Then build or rebuild @code{g77} as appropriate.\n \n @node Large File Unit Numbers\n @subsection Large File Unit Numbers\n@@ -10251,17 +10282,41 @@ macro named @code{MXUNIT}.\n If you can easily change your program to use unit numbers\n in the range 0 through 99, you should do so.\n \n-Otherwise, see @ref{Larger File Unit Numbers}, for information on how\n-to change @code{MXUNIT} in @code{libg2c} so you can build and\n-install a new version of @code{libg2c} that supports the larger\n-unit numbers you need.\n+As distributed, whether as part of @code{f2c} or @code{g77},\n+@code{libf2c} accepts file unit numbers only in the range\n+0 through 99.\n+For example, a statement such as @samp{WRITE (UNIT=100)} causes\n+a run-time crash in @code{libf2c}, because the unit number,\n+100, is out of range.\n \n-@emph{Note:} While @code{libg2c} places a limit on the range\n-of Fortran file-unit numbers, the underlying library and operating\n-system might impose different kinds of limits.\n-For example, some systems limit the number of files simultaneously\n-open by a running program.\n-Information on how to increase these limits should be found\n+If you know that Fortran programs at your installation require\n+the use of unit numbers higher than 99, you can change the\n+value of the @code{MXUNIT} macro, which represents the maximum unit\n+number, to an appropriately higher value.\n+\n+To do this, edit the file @file{@value{path-libf2c}/libI77/fio.h} in your\n+@code{g77} source tree, changing the following line:\n+\n+@example\n+#define MXUNIT 100\n+@end example\n+\n+Change the line so that the value of @code{MXUNIT} is defined to be\n+at least one @emph{greater} than the maximum unit number used by\n+the Fortran programs on your system.\n+\n+(For example, a program that does @samp{WRITE (UNIT=255)} would require\n+@code{MXUNIT} set to at least 256 to avoid crashing.)\n+\n+Then build or rebuild @code{g77} as appropriate.\n+\n+@emph{Note:} Changing this macro has @emph{no} effect on other limits\n+your system might place on the number of files open at the same time.\n+That is, the macro might allow a program to do @samp{WRITE (UNIT=100)},\n+but the library and operating system underlying @code{libf2c} might\n+disallow it if many other files have already been opened (via @code{OPEN} or\n+implicitly via @code{READ}, @code{WRITE}, and so on).\n+Information on how to increase these other limits should be found\n in your system's documentation.\n \n @node Floating-point precision\n@@ -10631,10 +10686,6 @@ Some of these problems are due to bugs in other software, some are\n missing features that are too much work to add, and some are places\n where people's opinions differ as to what is best.\n \n-Information on bugs that show up when configuring, porting, building,\n-or installing @code{g77} is not provided here.\n-@xref{Problems Installing}.\n-\n To find out about major bugs discovered in the current release and\n possible workarounds for them, see\n @uref{ftp://alpha.gnu.org/g77.plan}.\n@@ -10898,9 +10949,26 @@ You might be able to work around the problem by compiling with the\n @samp{-fno-automatic} option to reduce stack usage, probably at the\n expense of speed.\n \n-@xref{Maximum Stackable Size}, for information on patching\n-@code{g77} to use different criteria for placing local\n-non-automatic variables and arrays on the stack.\n+@code{g77}, on most machines, puts many variables and arrays on the stack\n+where possible, and can be configured (by changing\n+@code{FFECOM_sizeMAXSTACKITEM} in @file{@value{path-g77}/com.c}) to force\n+smaller-sized entities into static storage (saving\n+on stack space) or permit larger-sized entities to be put on the\n+stack (which can improve run-time performance, as it presents\n+more opportunities for the GBE to optimize the generated code).\n+\n+@emph{Note:} Putting more variables and arrays on the stack\n+might cause problems due to system-dependent limits on stack size.\n+Also, the value of @code{FFECOM_sizeMAXSTACKITEM} has no\n+effect on automatic variables and arrays.\n+@xref{But-bugs}, for more information.\n+@emph{Note:} While @code{libg2c} places a limit on the range\n+of Fortran file-unit numbers, the underlying library and operating\n+system might impose different kinds of limits.\n+For example, some systems limit the number of files simultaneously\n+open by a running program.\n+Information on how to increase these limits should be found\n+in your system's documentation.\n \n @cindex automatic arrays\n @cindex arrays, automatic\n@@ -14859,20 +14927,6 @@ without exhibiting any other outward manifestations of the bugs.\n @section @code{LINKFAIL}\n \n @noindent\n-@smallexample\n-If the above command failed due to an unresolved reference\n-to strtoul, _strtoul, bsearch, _bsearch, or similar, see\n-[info -f g77 M LINKFAIL] (a node in the g77 documentation)\n-for information on what causes this, how to work around\n-the problem by editing $@{srcdir@}/proj.c, and what else to do.\n-@end smallexample\n-\n-@xref{Missing strtoul or bsearch}, for more information on\n-this problem,\n-which occurs only in releases of @code{g77}\n-based on @code{gcc}.\n-(It did not occur in @code{egcs}.)\n-\n On AIX 4.1, @code{g77} might not build with the native (non-GNU) tools\n due to a linker bug in coping with the @samp{-bbigtoc} option which\n leads to a @samp{Relocation overflow} error.  The GNU linker is not"}, {"sha": "3161aee4e9af3acd276a272ec0550deb67a8e9aa", "filename": "gcc/f/g77install.texi", "status": "removed", "additions": 0, "deletions": 511, "changes": 511, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9eee2c76b87aa978d6ee366d877d6dd32c17fe45/gcc%2Ff%2Fg77install.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9eee2c76b87aa978d6ee366d877d6dd32c17fe45/gcc%2Ff%2Fg77install.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Fg77install.texi?ref=9eee2c76b87aa978d6ee366d877d6dd32c17fe45", "patch": "@@ -1,511 +0,0 @@\n-@c Copyright (C) 1995, 1996, 1997, 1998, 1999, 2000 Free Software Foundation, Inc.\n-@c This is part of the G77 manual.\n-@c For copying conditions, see the file g77.texi.\n-\n-@set last-update-install 2000-12-21\n-\n-@include root.texi\n-\n-@node Installation\n-@chapter Installing GNU Fortran\n-@cindex installing, GNU Fortran\n-\n-The following information describes how to install @code{g77}.\n-\n-Note that, for users of the @value{which-g77} version of @code{g77},\n-much of the information is obsolete,\n-and is superseded by the\n-@value{which-gcc} installation procedures.\n-Such information is accordingly omitted and flagged as such.\n-\n-@ifset DEVELOPMENT\n-@emph{Warning:} The information below is still under development,\n-and might not accurately reflect the @code{g77} code base\n-of which it is a part.\n-Efforts are made to keep it somewhat up-to-date,\n-but they are particularly concentrated\n-on any version of this information\n-that is distributed as part of a @emph{released} @code{g77}.\n-\n-In particular, while this information is intended to apply to\n-the @value{which-g77} version of @code{g77},\n-only an official @emph{release} of that version\n-is expected to contain documentation that is\n-most consistent with the @code{g77} product in that version.\n-@end ifset\n-\n-The following information was last updated on @value{last-update-install}:\n-\n-@menu\n-* Prerequisites::          Make sure your system is ready for @code{g77}.\n-* Problems Installing::    Known trouble areas.\n-* Settings::               Changing @code{g77} internals before building.\n-* Quick Start::            The easier procedure for non-experts.\n-* Complete Installation::  For experts, or those who want to be: the details.\n-* Distributing Binaries::  If you plan on distributing your @code{g77}.\n-@end menu\n-\n-@node Prerequisites\n-@section Prerequisites\n-@cindex prerequisites\n-\n-For users of the @value{which-g77} version of @code{g77},\n-this information is superseded by the\n-@value{which-gcc} installation instructions.\n-\n-@node Problems Installing\n-@section Problems Installing\n-@cindex problems installing\n-@cindex installation problems\n-\n-This is a list of problems (and some apparent problems which don't\n-really mean anything is wrong) that show up when configuring,\n-building, installing, or porting GNU Fortran.\n-\n-@xref{Installation Problems,,,gcc,Using and Porting GNU CC},\n-for more information on installation problems that can afflict\n-either @code{gcc} or @code{g77}.\n-\n-@menu\n-* General Problems::         Problems afflicting most or all systems.\n-* System-specific Problems:: Problems afflicting particular systems.\n-* Cross-compiler Problems::  Problems afflicting cross-compilation setups.\n-@end menu\n-\n-@node General Problems\n-@subsection General Problems\n-\n-These problems can occur on most or all systems.\n-\n-@menu\n-* GNU C Required::             Why even ANSI C is not enough.\n-* Patching GNU CC::            Why @code{gcc} needn't be patched.\n-* Building GNU CC Necessary::  Why you can't build @emph{just} Fortran.\n-* Missing strtoul or bsearch:: When linking @code{f771} fails.\n-* Cleanup Kills Stage Directories::  For @code{g77} developers.\n-* LANGUAGES Macro Ignored::    Sometimes @code{LANGUAGES} is ignored.\n-@end menu\n-\n-@node GNU C Required\n-@subsubsection GNU C Required\n-@cindex GNU C required\n-@cindex requirements, GNU C\n-\n-Compiling @code{g77} requires GNU C, not just ANSI C.\n-Fixing this wouldn't\n-be very hard (just tedious), but the code using GNU extensions to\n-the C language is expected to be rewritten for 0.6 anyway,\n-so there are no plans for an interim fix.\n-\n-This requirement does not mean you must already have @code{gcc}\n-installed to build @code{g77}.\n-As long as you have a working C compiler, you can use a\n-``bootstrap'' build to automate the process of first building\n-@code{gcc} using the working C compiler you have, then building\n-@code{g77} and rebuilding @code{gcc} using that just-built @code{gcc},\n-and so on.\n-\n-@node Patching GNU CC\n-@subsubsection Patching GNU CC\n-@cindex patch files\n-@cindex GBE\n-\n-@code{g77} no longer requires application of a patch file\n-to the @code{gcc} compiler tree.\n-In fact, no such patch file is distributed with @code{g77}.\n-This is as of version 0.5.23\n-and @code{egcs} version 1.0.\n-\n-@node Building GNU CC Necessary\n-@subsubsection Building GNU CC Necessary\n-@cindex @code{gcc}, building\n-@cindex building gcc\n-\n-It should be possible to build the runtime without building @code{cc1}\n-and other non-Fortran items, but, for now, an easy way to do that\n-is not yet established.\n-\n-@node Missing strtoul or bsearch\n-@subsubsection Missing strtoul or bsearch\n-@cindex bsearch\n-@cindex _bsearch\n-@cindex strtoul\n-@cindex _strtoul\n-@cindex undefined reference (_bsearch)\n-@cindex undefined reference (_strtoul)\n-@cindex f771, linking error for\n-@cindex linking error for f771\n-@cindex @code{ld}, error linking f771\n-@cindex @code{ld}, can't find _bsearch\n-@cindex @code{ld}, can't find _strtoul\n-@cindex SunOS4\n-\n-This information does not apply to\n-the @value{which-g77} version of @code{g77},\n-\n-@node Cleanup Kills Stage Directories\n-@subsubsection Cleanup Kills Stage Directories\n-@cindex stage directories\n-@cindex make clean\n-\n-It'd be helpful if @code{g77}'s @file{Makefile.in} or @file{Make-lang.in}\n-would create the various @file{stage@var{n}} directories and their\n-subdirectories, so developers and expert installers wouldn't have to\n-reconfigure after cleaning up.\n-\n-That help has arrived as of version 0.5.23 of @code{g77}\n-and version 1.1 of @code{egcs}.\n-Configuration itself no longer creates any particular directories\n-that are unique to @code{g77}.\n-The build procedures in @file{Make-lang.in} take care of\n-that, on demand.\n-\n-@node LANGUAGES Macro Ignored\n-@subsubsection LANGUAGES Macro Ignored\n-@cindex @code{LANGUAGES} macro ignored\n-@cindex ignoring @code{LANGUAGES} macro\n-\n-Prior to version 0.5.23 of @code{g77}\n-and version 1.1 of @code{egcs},\n-@code{g77} would sometimes ignore\n-the absence of @code{f77} and @code{F77} in the\n-@code{LANGUAGES} macro definition used for the\n-@code{make} command being processed.\n-\n-As of @code{g77} version 0.5.23\n-and @code{egcs} version 1.1,\n-@code{g77} now obeys this macro\n-in all relevant situations.\n-\n-However, in versions of @code{gcc} through 2.8.1,\n-non-@code{g77} portions of @code{gcc},\n-such as @code{g++},\n-are known to go ahead and perform various\n-language-specific activities when their\n-respective language strings do not appear\n-in the @code{LANGUAGES} macro in effect\n-during that invocation of @code{make}.\n-\n-It is expected that these remaining problems will\n-be fixed in a future version of @code{gcc}.\n-\n-@node System-specific Problems\n-@subsection System-specific Problems\n-\n-@cindex AIX\n-A linker bug on some versions of AIX 4.1 might prevent building\n-when @code{g77} is built within @code{gcc}.\n-@xref{LINKFAIL}.\n-\n-@node Cross-compiler Problems\n-@subsection Cross-compiler Problems\n-@cindex cross-compiler, problems\n-\n-@code{g77} has been in alpha testing since September of\n-1992, and in public beta testing since February of 1995.\n-Alpha testing was done by a small number of people worldwide on a fairly\n-wide variety of machines, involving self-compilation in most or\n-all cases.\n-Beta testing has been done primarily via self-compilation,\n-but in more and more cases, cross-compilation (and ``criss-cross\n-compilation'', where a version of a compiler is built on one machine\n-to run on a second and generate code that runs on a third) has\n-been tried and has succeeded, to varying extents.\n-\n-Generally, @code{g77} can be ported to any configuration to which\n-@code{gcc}, @code{f2c}, and @code{libf2c} can be ported and made\n-to work together, aside from the known problems described in this\n-manual.\n-If you want to port @code{g77} to a particular configuration,\n-you should first make sure @code{gcc} and @code{libf2c} can be\n-ported to that configuration before focusing on @code{g77}, because\n-@code{g77} is so dependent on them.\n-\n-Even for cases where @code{gcc} and @code{libf2c} work,\n-you might run into problems with cross-compilation on certain machines,\n-for several reasons.\n-\n-@itemize @bullet\n-@item\n-There is one known bug\n-(a design bug to be fixed in 0.6) that prevents configuration of\n-@code{g77} as a cross-compiler in some cases,\n-though there are assumptions made during\n-configuration that probably make doing non-self-hosting builds\n-a hassle, requiring manual intervention.\n-\n-@item\n-@code{gcc} might still have some trouble being configured\n-for certain combinations of machines.\n-For example, it might not know how to handle floating-point\n-constants.\n-\n-@item\n-Improvements to the way @code{libg2c} is built could make\n-building @code{g77} as a cross-compiler easier---for example,\n-passing and using @samp{$(LD)} and @samp{$(AR)} in the appropriate\n-ways.\n-(This was improved in the @code{egcs} version of @code{g77},\n-especially as of version 1.1.)\n-\n-@item\n-There are still some challenges putting together the right\n-run-time libraries (needed by @code{libg2c}) for a target\n-system, depending on the systems involved in the configuration.\n-(This is a general problem with cross-compilation, and with\n-@code{gcc} in particular.)\n-@end itemize\n-\n-@node Settings\n-@section Changing Settings Before Building\n-\n-Here are some internal @code{g77} settings that can be changed\n-by editing source files in @file{@value{path-g77}/} before building.\n-\n-This information, and perhaps even these settings, represent\n-stop-gap solutions to problems people doing various ports\n-of @code{g77} have encountered.\n-As such, none of the following information is expected to\n-be pertinent in future versions of @code{g77}.\n-\n-@menu\n-* Larger File Unit Numbers::     Raising @code{MXUNIT}.\n-* Always Flush Output::          Synchronizing write errors.\n-* Maximum Stackable Size::       Large arrays forced off the stack.\n-* Floating-point Bit Patterns::  Possible programs building @code{g77}\n-                                   as a cross-compiler.\n-* Large Initialization::         Large arrays with @code{DATA}\n-                                   initialization.\n-* Alpha Problems Fixed::         Problems with 64-bit systems like\n-                                   Alphas now fixed?\n-@end menu\n-\n-@node Larger File Unit Numbers\n-@subsection Larger File Unit Numbers\n-@cindex MXUNIT\n-@cindex unit numbers\n-@cindex maximum unit number\n-@cindex illegal unit number\n-@cindex increasing maximum unit number\n-\n-As distributed, whether as part of @code{f2c} or @code{g77},\n-@code{libf2c} accepts file unit numbers only in the range\n-0 through 99.\n-For example, a statement such as @samp{WRITE (UNIT=100)} causes\n-a run-time crash in @code{libf2c}, because the unit number,\n-100, is out of range.\n-\n-If you know that Fortran programs at your installation require\n-the use of unit numbers higher than 99, you can change the\n-value of the @code{MXUNIT} macro, which represents the maximum unit\n-number, to an appropriately higher value.\n-\n-To do this, edit the file @file{@value{path-libf2c}/libI77/fio.h} in your\n-@code{g77} source tree, changing the following line:\n-\n-@example\n-#define MXUNIT 100\n-@end example\n-\n-Change the line so that the value of @code{MXUNIT} is defined to be\n-at least one @emph{greater} than the maximum unit number used by\n-the Fortran programs on your system.\n-\n-(For example, a program that does @samp{WRITE (UNIT=255)} would require\n-@code{MXUNIT} set to at least 256 to avoid crashing.)\n-\n-Then build or rebuild @code{g77} as appropriate.\n-\n-@emph{Note:} Changing this macro has @emph{no} effect on other limits\n-your system might place on the number of files open at the same time.\n-That is, the macro might allow a program to do @samp{WRITE (UNIT=100)},\n-but the library and operating system underlying @code{libf2c} might\n-disallow it if many other files have already been opened (via @code{OPEN} or\n-implicitly via @code{READ}, @code{WRITE}, and so on).\n-Information on how to increase these other limits should be found\n-in your system's documentation.\n-\n-@node Always Flush Output\n-@subsection Always Flush Output\n-@cindex ALWAYS_FLUSH\n-@cindex synchronous write errors\n-@cindex disk full\n-@cindex flushing output\n-@cindex fflush()\n-@cindex I/O, flushing\n-@cindex output, flushing\n-@cindex writes, flushing\n-@cindex NFS\n-@cindex network file system\n-\n-Some Fortran programs require output\n-(writes) to be flushed to the operating system (under UNIX,\n-via the @code{fflush()} library call) so that errors,\n-such as disk full, are immediately flagged via the relevant\n-@code{ERR=} and @code{IOSTAT=} mechanism, instead of such\n-errors being flagged later as subsequent writes occur, forcing\n-the previously written data to disk, or when the file is\n-closed.\n-\n-Essentially, the difference can be viewed as synchronous error\n-reporting (immediate flagging of errors during writes) versus\n-asynchronous, or, more precisely, buffered error reporting\n-(detection of errors might be delayed).\n-\n-@code{libg2c} supports flagging write errors immediately when\n-it is built with the @code{ALWAYS_FLUSH} macro defined.\n-This results in a @code{libg2c} that runs slower, sometimes\n-quite a bit slower, under certain circumstances---for example,\n-accessing files via the networked file system NFS---but the\n-effect can be more reliable, robust file I/O.\n-\n-If you know that Fortran programs requiring this level of precision\n-of error reporting are to be compiled using the\n-version of @code{g77} you are building, you might wish to\n-modify the @code{g77} source tree so that the version of\n-@code{libg2c} is built with the @code{ALWAYS_FLUSH} macro\n-defined, enabling this behavior.\n-\n-To do this, find this line in @file{@value{path-libf2c}/f2c.h} in\n-your @code{g77} source tree:\n-\n-@example\n-/* #define ALWAYS_FLUSH */\n-@end example\n-\n-Remove the leading @samp{/*@w{ }},\n-so the line begins with @samp{#define},\n-and the trailing @samp{@w{ }*/}.\n-\n-Then build or rebuild @code{g77} as appropriate.\n-\n-@node Maximum Stackable Size\n-@subsection Maximum Stackable Size\n-@vindex FFECOM_sizeMAXSTACKITEM\n-@cindex code, stack variables\n-@cindex maximum stackable size\n-@cindex stack, allocation\n-@cindex segmentation violation\n-@code{g77}, on most machines, puts many variables and arrays on the stack\n-where possible, and can be configured (by changing\n-@code{FFECOM_sizeMAXSTACKITEM} in @file{@value{path-g77}/com.c}) to force\n-smaller-sized entities into static storage (saving\n-on stack space) or permit larger-sized entities to be put on the\n-stack (which can improve run-time performance, as it presents\n-more opportunities for the GBE to optimize the generated code).\n-\n-@emph{Note:} Putting more variables and arrays on the stack\n-might cause problems due to system-dependent limits on stack size.\n-Also, the value of @code{FFECOM_sizeMAXSTACKITEM} has no\n-effect on automatic variables and arrays.\n-@xref{But-bugs}, for more information.\n-\n-@node Floating-point Bit Patterns\n-@subsection Floating-point Bit Patterns\n-\n-@cindex cross-compiler, building\n-@cindex floating-point bit patterns\n-@cindex bit patterns\n-The @code{g77} build will crash if an attempt is made to build\n-it as a cross-compiler\n-for a target when @code{g77} cannot reliably determine the bit pattern of\n-floating-point constants for the target.\n-Planned improvements for version 0.6 of @code{g77}\n-will give it the capabilities it needs to not have to crash the build\n-but rather generate correct code for the target.\n-(Currently, @code{g77}\n-would generate bad code under such circumstances if it didn't crash\n-during the build, e.g. when compiling a source file that does\n-something like @samp{EQUIVALENCE (I,R)} and @samp{DATA R/9.43578/}.)\n-\n-@node Large Initialization\n-@subsection Initialization of Large Aggregate Areas\n-\n-@cindex speed, of compiler\n-@cindex slow compiler\n-@cindex memory utilization\n-@cindex large initialization\n-@cindex aggregate initialization\n-A warning message is issued when @code{g77} sees code that provides\n-initial values (e.g. via @code{DATA}) to an aggregate area (@code{COMMON}\n-or @code{EQUIVALENCE}, or even a large enough array or @code{CHARACTER}\n-variable)\n-that is large enough to increase @code{g77}'s compile time by roughly\n-a factor of 10.\n-\n-This size currently is quite small, since @code{g77}\n-currently has a known bug requiring too much memory\n-and time to handle such cases.\n-In @file{@value{path-g77}/data.c}, the macro\n-@code{FFEDATA_sizeTOO_BIG_INIT_} is defined\n-to the minimum size for the warning to appear.\n-The size is specified in storage units,\n-which can be bytes, words, or whatever, on a case-by-case basis.\n-\n-After changing this macro definition, you must\n-(of course) rebuild and reinstall @code{g77} for\n-the change to take effect.\n-\n-Note that, as of version 0.5.18, improvements have\n-reduced the scope of the problem for @emph{sparse}\n-initialization of large arrays, especially those\n-with large, contiguous uninitialized areas.\n-However, the warning is issued at a point prior to\n-when @code{g77} knows whether the initialization is sparse,\n-and delaying the warning could mean it is produced\n-too late to be helpful.\n-\n-Therefore, the macro definition should not be adjusted to\n-reflect sparse cases.\n-Instead, adjust it to generate the warning when densely\n-initialized arrays begin to cause responses noticeably slower\n-than linear performance would suggest.\n-\n-@node Alpha Problems Fixed\n-@subsection Alpha Problems Fixed\n-\n-@cindex Alpha, support\n-@cindex 64-bit systems\n-@code{g77} used to warn when it was used to compile Fortran code\n-for a target configuration that is not basically a 32-bit\n-machine (such as an Alpha, which is a 64-bit machine, especially\n-if it has a 64-bit operating system running on it).\n-That was because @code{g77} was known to not work\n-properly on such configurations.\n-\n-As of version 0.5.20, @code{g77} is believed to work well\n-enough on such systems.\n-So, the warning is no longer needed or provided.\n-\n-However, support for 64-bit systems, especially in\n-areas such as cross-compilation and handling of\n-intrinsics, is still incomplete.\n-The symptoms\n-are believed to be compile-time diagnostics rather\n-than the generation of bad code.\n-It is hoped that version 0.6 will completely support 64-bit\n-systems.\n-\n-@node Quick Start\n-@section Quick Start\n-@cindex quick start\n-\n-For users of the @value{which-g77} version of @code{g77},\n-this information is superseded by the\n-@value{which-gcc} installation instructions.\n-\n-@node Complete Installation\n-@section Complete Installation\n-\n-For users of the @value{which-g77} version of @code{g77},\n-this information is superseded by the\n-@value{which-gcc} installation instructions.\n-\n-@node Distributing Binaries\n-@section Distributing Binaries\n-@cindex binaries, distributing\n-@cindex code, distributing\n-\n-For users of the @value{which-g77} version of @code{g77},\n-this information is superseded by the\n-@value{which-gcc} installation instructions."}]}