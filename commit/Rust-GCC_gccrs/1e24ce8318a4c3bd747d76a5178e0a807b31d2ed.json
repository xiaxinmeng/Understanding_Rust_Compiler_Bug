{"sha": "1e24ce8318a4c3bd747d76a5178e0a807b31d2ed", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWUyNGNlODMxOGE0YzNiZDc0N2Q3NmE1MTc4ZTBhODA3YjMxZDJlZA==", "commit": {"author": {"name": "David Edelsohn", "email": "dje@gcc.gnu.org", "date": "2005-08-18T16:36:23Z"}, "committer": {"name": "David Edelsohn", "email": "dje@gcc.gnu.org", "date": "2005-08-18T16:36:23Z"}, "message": "rs6000.md (ltu<mode>_compare): Convert to define_insn_and_split.\n\n\t* config/rs6000/rs6000.md (ltu<mode>_compare): Convert to\n\tdefine_insn_and_split.\n\t(plus_ltu<mode>_compare): Same.\n\t(gtu<mode>_compare): Same.\n\t(plus_gtu<mode>_compare): Same.\n\nFrom-SVN: r103253", "tree": {"sha": "c825f28efaf6ef8f55baf613fc3788ca9b1d6c97", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c825f28efaf6ef8f55baf613fc3788ca9b1d6c97"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1e24ce8318a4c3bd747d76a5178e0a807b31d2ed", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1e24ce8318a4c3bd747d76a5178e0a807b31d2ed", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1e24ce8318a4c3bd747d76a5178e0a807b31d2ed", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1e24ce8318a4c3bd747d76a5178e0a807b31d2ed/comments", "author": null, "committer": null, "parents": [{"sha": "90ff949ff7d9944c5a74314de7765046c96898a8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/90ff949ff7d9944c5a74314de7765046c96898a8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/90ff949ff7d9944c5a74314de7765046c96898a8"}], "stats": {"total": 302, "additions": 56, "deletions": 246}, "files": [{"sha": "c384e668297fe1ed23ebb8f4ae1e5e4c9e631a10", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e24ce8318a4c3bd747d76a5178e0a807b31d2ed/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e24ce8318a4c3bd747d76a5178e0a807b31d2ed/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1e24ce8318a4c3bd747d76a5178e0a807b31d2ed", "patch": "@@ -1,7 +1,16 @@\n+2005-08-18  David Edelsohn  <edelsohn@gnu.org>\n+\n+\t* config/rs6000/rs6000.md (ltu<mode>_compare): Convert to\n+\tdefine_insn_and_split.\n+\t(plus_ltu<mode>_compare): Same.\n+\t(gtu<mode>_compare): Same.\n+\t(plus_gtu<mode>_compare): Same.\n+\n 2005-08-18  Dorit Nuzman  <dorit@il.ibm.com>\n \n \tPR tree-optimization/22228\n-\t* tree-ssa-loop (pass_vectorize): Add TODO_verify_loops to todo_flags_start.\n+\t* tree-ssa-loop (pass_vectorize): Add TODO_verify_loops to\n+\ttodo_flags_start.\n \t* tree-vect-transform.c (vect_transform_loop): Mark the variables that\n \tare recorded in vect_vnames_to_rename for renaming.\n \t* tree-vectorizer.c (vect_vnames_to_rename): New global bitmap."}, {"sha": "dcbe3a0278d0f84a8acfe20ea139e200cc7463b8", "filename": "gcc/config/rs6000/rs6000.md", "status": "modified", "additions": 46, "deletions": 245, "changes": 291, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e24ce8318a4c3bd747d76a5178e0a807b31d2ed/gcc%2Fconfig%2Frs6000%2Frs6000.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e24ce8318a4c3bd747d76a5178e0a807b31d2ed/gcc%2Fconfig%2Frs6000%2Frs6000.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.md?ref=1e24ce8318a4c3bd747d76a5178e0a807b31d2ed", "patch": "@@ -11995,7 +11995,7 @@\n    (set (match_dup 0) (neg:P (match_dup 0)))]\n   \"\")\n \n-(define_insn \"*ltu<mode>_compare\"\n+(define_insn_and_split \"*ltu<mode>_compare\"\n   [(set (match_operand:CC 3 \"cc_reg_operand\" \"=x,x,?y,?y\")\n \t(compare:CC\n \t (ltu:P (match_operand:P 1 \"gpc_reg_operand\" \"r,r,r,r\")\n@@ -12004,109 +12004,43 @@\n    (set (match_operand:P 0 \"gpc_reg_operand\" \"=r,r,r,r\")\n \t(ltu:P (match_dup 1) (match_dup 2)))]\n   \"\"\n-  \"@\n-   {sf|subfc} %0,%2,%1\\;{sfe|subfe} %0,%0,%0\\;neg. %0,%0\n-   {ai|addic} %0,%1,%n2\\;{sfe|subfe} %0,%0,%0\\;neg. %0,%0\n-   #\n-   #\"\n-  [(set_attr \"type\" \"compare\")\n-   (set_attr \"length\" \"12,12,16,16\")])\n-\n-(define_split\n-  [(set (match_operand:CC 3 \"cc_reg_not_cr0_operand\" \"\")\n-\t(compare:CC\n-\t (ltu:P (match_operand:P 1 \"gpc_reg_operand\" \"\")\n-\t\t(match_operand:P 2 \"reg_or_neg_short_operand\" \"\"))\n-\t (const_int 0)))\n-   (set (match_operand:P 0 \"gpc_reg_operand\" \"\")\n-\t(ltu:P (match_dup 1) (match_dup 2)))]\n-  \"reload_completed\"\n-  [(set (match_dup 0)\n-\t(ltu:P (match_dup 1) (match_dup 2)))\n-   (set (match_dup 3)\n-\t(compare:CC (match_dup 0)\n-\t\t    (const_int 0)))]\n+  \"#\"\n+  \"\"\n+  [(set (match_dup 0) (neg:P (ltu:P (match_dup 1) (match_dup 2))))\n+   (parallel [(set (match_dup 3)\n+\t\t   (compare:CC (neg:P (match_dup 0)) (const_int 0)))\n+\t      (set (match_dup 0) (neg:P (match_dup 0)))])]\n   \"\")\n \n (define_insn_and_split \"*plus_ltu<mode>\"\n   [(set (match_operand:P 0 \"gpc_reg_operand\" \"=&r,r\")\n \t(plus:P (ltu:P (match_operand:P 1 \"gpc_reg_operand\" \"r,r\")\n \t\t       (match_operand:P 2 \"reg_or_neg_short_operand\" \"r,P\"))\n-\t\t (match_operand:P 3 \"reg_or_short_operand\" \"rI,rI\")))]\n+\t\t(match_operand:P 3 \"reg_or_short_operand\" \"rI,rI\")))]\n   \"\"\n   \"#\"\n   \"&& !reg_overlap_mentioned_p (operands[0], operands[3])\"\n   [(set (match_dup 0) (neg:P (ltu:P (match_dup 1) (match_dup 2))))\n    (set (match_dup 0) (minus:P (match_dup 3) (match_dup 0)))]\n   \"\")\n \n-(define_insn \"\"\n-  [(set (match_operand:CC 0 \"cc_reg_operand\" \"=x,x,?y,?y\")\n-\t(compare:CC\n-\t (plus:SI (ltu:SI (match_operand:SI 1 \"gpc_reg_operand\" \"r,r,r,r\")\n-\t\t\t  (match_operand:SI 2 \"reg_or_neg_short_operand\" \"r,P,r,P\"))\n-\t\t  (match_operand:SI 3 \"gpc_reg_operand\" \"r,r,r,r\"))\n-\t (const_int 0)))\n-   (clobber (match_scratch:SI 4 \"=&r,&r,&r,&r\"))]\n-  \"TARGET_32BIT\"\n-  \"@\n-   {sf|subfc} %4,%2,%1\\;{sfe|subfe} %4,%4,%4\\;{sf.|subf.} %4,%4,%3\n-   {ai|addic} %4,%1,%n2\\;{sfe|subfe} %4,%4,%4\\;{sf.|subf.} %4,%4,%3\n-   #\n-   #\"\n-  [(set_attr \"type\" \"compare\")\n-   (set_attr \"length\" \"12,12,16,16\")])\n-\n-(define_split\n-  [(set (match_operand:CC 0 \"cc_reg_not_cr0_operand\" \"\")\n-\t(compare:CC\n-\t (plus:SI (ltu:SI (match_operand:SI 1 \"gpc_reg_operand\" \"\")\n-\t\t\t  (match_operand:SI 2 \"reg_or_neg_short_operand\" \"\"))\n-\t\t  (match_operand:SI 3 \"gpc_reg_operand\" \"\"))\n-\t (const_int 0)))\n-   (clobber (match_scratch:SI 4 \"\"))]\n-  \"TARGET_32BIT && reload_completed\"\n-  [(set (match_dup 4)\n-\t(plus:SI (ltu:SI (match_dup 1) (match_dup 2))\n-\t\t (match_dup 3)))\n-   (set (match_dup 0)\n-\t(compare:CC (match_dup 4)\n-\t\t    (const_int 0)))]\n-  \"\")\n-\n-(define_insn \"\"\n+(define_insn_and_split \"*plus_ltu<mode>_compare\"\n   [(set (match_operand:CC 4 \"cc_reg_operand\" \"=x,x,?y,?y\")\n \t(compare:CC\n-\t (plus:SI (ltu:SI (match_operand:SI 1 \"gpc_reg_operand\" \"r,r,r,r\")\n-\t\t\t  (match_operand:SI 2 \"reg_or_neg_short_operand\" \"r,P,r,P\"))\n-\t\t  (match_operand:SI 3 \"gpc_reg_operand\" \"r,r,r,r\"))\n+\t (plus:P (ltu:P (match_operand:P 1 \"gpc_reg_operand\" \"r,r,r,r\")\n+\t\t\t(match_operand:P 2 \"reg_or_neg_short_operand\" \"r,P,r,P\"))\n+\t\t (match_operand:P 3 \"gpc_reg_operand\" \"r,r,r,r\"))\n \t (const_int 0)))\n-   (set (match_operand:SI 0 \"gpc_reg_operand\" \"=&r,&r,&r,&r\")\n-\t(plus:SI (ltu:SI (match_dup 1) (match_dup 2)) (match_dup 3)))]\n-  \"TARGET_32BIT\"\n-  \"@\n-   {sf|subfc} %0,%2,%1\\;{sfe|subfe} %0,%0,%0\\;{sf.|subf.} %0,%0,%3\n-   {ai|addic} %0,%1,%n2\\;{sfe|subfe} %0,%0,%0\\;{sf.|subf.} %0,%0,%3\n-   #\n-   #\"\n-  [(set_attr \"type\" \"compare\")\n-   (set_attr \"length\" \"12,12,16,16\")])\n-\n-(define_split\n-  [(set (match_operand:CC 4 \"cc_reg_not_cr0_operand\" \"\")\n-\t(compare:CC\n-\t (plus:SI (ltu:SI (match_operand:SI 1 \"gpc_reg_operand\" \"\")\n-\t\t\t  (match_operand:SI 2 \"reg_or_neg_short_operand\" \"\"))\n-\t\t  (match_operand:SI 3 \"gpc_reg_operand\" \"\"))\n-\t (const_int 0)))\n-   (set (match_operand:SI 0 \"gpc_reg_operand\" \"\")\n-\t(plus:SI (ltu:SI (match_dup 1) (match_dup 2)) (match_dup 3)))]\n-  \"TARGET_32BIT && reload_completed\"\n-  [(set (match_dup 0)\n-\t(plus:SI (ltu:SI (match_dup 1) (match_dup 2)) (match_dup 3)))\n-   (set (match_dup 4)\n-\t(compare:CC (match_dup 0)\n-\t\t    (const_int 0)))]\n+   (set (match_operand:P 0 \"gpc_reg_operand\" \"=&r,&r,&r,&r\")\n+\t(plus:P (ltu:P (match_dup 1) (match_dup 2)) (match_dup 3)))]\n+  \"\"\n+  \"#\"\n+  \"&& !reg_overlap_mentioned_p (operands[0], operands[3])\"\n+  [(set (match_dup 0) (neg:P (ltu:P (match_dup 1) (match_dup 2))))\n+   (parallel [(set (match_dup 4)\n+\t\t   (compare:CC (minus:P (match_dup 3) (match_dup 0))\n+\t\t\t       (const_int 0)))\n+\t      (set (match_dup 0) (minus:P (match_dup 3) (match_dup 0)))])]\n   \"\")\n \n (define_insn \"*neg_ltu<mode>\"\n@@ -12799,7 +12733,7 @@\n \t\t    (const_int 0)))]\n   \"\")\n \n-(define_insn \"\"\n+(define_insn \"*neg_gt0si\"\n   [(set (match_operand:SI 0 \"gpc_reg_operand\" \"=r\")\n \t(neg:SI (gt:SI (match_operand:SI 1 \"gpc_reg_operand\" \"r\")\n \t\t       (const_int 0))))]\n@@ -12808,7 +12742,7 @@\n   [(set_attr \"type\" \"three\")\n    (set_attr \"length\" \"12\")])\n \n-(define_insn \"\"\n+(define_insn \"neg_gt0di\"\n   [(set (match_operand:DI 0 \"gpc_reg_operand\" \"=r\")\n \t(neg:DI (gt:DI (match_operand:DI 1 \"gpc_reg_operand\" \"r\")\n \t\t       (const_int 0))))]\n@@ -12836,7 +12770,7 @@\n    (set (match_dup 0) (neg:P (match_dup 0)))]\n   \"\")\n \n-(define_insn \"*gtu<mode>_compare\"\n+(define_insn_and_split \"*gtu<mode>_compare\"\n   [(set (match_operand:CC 3 \"cc_reg_operand\" \"=x,?y\")\n \t(compare:CC\n \t (gtu:P (match_operand:P 1 \"gpc_reg_operand\" \"r,r\")\n@@ -12845,29 +12779,15 @@\n    (set (match_operand:P 0 \"gpc_reg_operand\" \"=r,r\")\n \t(gtu:P (match_dup 1) (match_dup 2)))]\n   \"\"\n-  \"@\n-   {sf%I2|subf%I2c} %0,%1,%2\\;{sfe|subfe} %0,%0,%0\\;neg. %0,%0\n-   #\"\n-  [(set_attr \"type\" \"compare\")\n-   (set_attr \"length\" \"12,16\")])\n-\n-(define_split\n-  [(set (match_operand:CC 3 \"cc_reg_not_cr0_operand\" \"\")\n-\t(compare:CC\n-\t (gtu:P (match_operand:P 1 \"gpc_reg_operand\" \"\")\n-\t\t(match_operand:P 2 \"reg_or_short_operand\" \"\"))\n-\t (const_int 0)))\n-   (set (match_operand:P 0 \"gpc_reg_operand\" \"\")\n-\t(gtu:P (match_dup 1) (match_dup 2)))]\n-  \"reload_completed\"\n-  [(set (match_dup 0)\n-\t(gtu:P (match_dup 1) (match_dup 2)))\n-   (set (match_dup 3)\n-\t(compare:CC (match_dup 0)\n-\t\t    (const_int 0)))]\n+  \"#\"\n+  \"\"\n+  [(set (match_dup 0) (neg:P (gtu:P (match_dup 1) (match_dup 2))))\n+   (parallel [(set (match_dup 3)\n+\t\t   (compare:CC (neg:P (match_dup 0)) (const_int 0)))\n+\t      (set (match_dup 0) (neg:P (match_dup 0)))])]\n   \"\")\n \n-(define_insn_and_split \"plus_gtu<mode>\"\n+(define_insn_and_split \"*plus_gtu<mode>\"\n   [(set (match_operand:P 0 \"gpc_reg_operand\" \"=&r\")\n         (plus:P (gtu:P (match_operand:P 1 \"gpc_reg_operand\" \"r\")\n \t\t       (match_operand:P 2 \"reg_or_short_operand\" \"rI\"))\n@@ -12879,142 +12799,23 @@\n    (set (match_dup 0) (minus:P (match_dup 3) (match_dup 0)))]\n   \"\")\n \n-(define_insn \"\"\n-  [(set (match_operand:CC 0 \"cc_reg_operand\" \"=x,x,?y,?y\")\n-\t(compare:CC\n-\t (plus:SI (gtu:SI (match_operand:SI 1 \"gpc_reg_operand\" \"r,r,r,r\")\n-\t\t\t  (match_operand:SI 2 \"reg_or_short_operand\" \"I,r,I,r\"))\n-\t\t  (match_operand:SI 3 \"gpc_reg_operand\" \"r,r,r,r\"))\n-\t (const_int 0)))\n-   (clobber (match_scratch:SI 4 \"=&r,&r,&r,&r\"))]\n-  \"TARGET_32BIT\"\n-  \"@\n-   {ai|addic} %4,%1,%k2\\;{aze.|addze.} %4,%3\n-   {sf%I2|subf%I2c} %4,%1,%2\\;{sfe|subfe} %4,%4,%4\\;{sf.|subf.} %4,%4,%3\n-   #\n-   #\"\n-  [(set_attr \"type\" \"compare\")\n-   (set_attr \"length\" \"8,12,12,16\")])\n-\n-(define_split\n-  [(set (match_operand:CC 0 \"cc_reg_not_cr0_operand\" \"\")\n-\t(compare:CC\n-\t (plus:SI (gtu:SI (match_operand:SI 1 \"gpc_reg_operand\" \"\")\n-\t\t\t  (match_operand:SI 2 \"reg_or_short_operand\" \"\"))\n-\t\t  (match_operand:SI 3 \"gpc_reg_operand\" \"\"))\n-\t (const_int 0)))\n-   (clobber (match_scratch:SI 4 \"\"))]\n-  \"TARGET_32BIT && reload_completed\"\n-  [(set (match_dup 4)\n-\t(plus:SI (gtu:SI (match_dup 1) (match_dup 2))\n-\t\t (match_dup 3)))\n-   (set (match_dup 0)\n-\t(compare:CC (match_dup 4)\n-\t\t    (const_int 0)))]\n-  \"\")\n-\n-(define_insn \"\"\n-  [(set (match_operand:CC 0 \"cc_reg_operand\" \"=x,x,?y,?y\")\n-\t(compare:CC\n-\t (plus:DI (gtu:DI (match_operand:DI 1 \"gpc_reg_operand\" \"r,r,r,r\")\n-\t\t\t  (match_operand:DI 2 \"reg_or_short_operand\" \"I,r,I,r\"))\n-\t\t  (match_operand:DI 3 \"gpc_reg_operand\" \"r,r,r,r\"))\n-\t (const_int 0)))\n-   (clobber (match_scratch:DI 4 \"=&r,&r,&r,&r\"))]\n-  \"TARGET_64BIT\"\n-  \"@\n-   addic %4,%1,%k2\\;addze. %4,%3\n-   subf%I2c %4,%1,%2\\;subfe %4,%4,%4\\;subf. %4,%4,%3\n-   #\n-   #\"\n-  [(set_attr \"type\" \"compare\")\n-   (set_attr \"length\" \"8,12,12,16\")])\n-\n-(define_split\n-  [(set (match_operand:CC 0 \"cc_reg_not_cr0_operand\" \"\")\n-\t(compare:CC\n-\t (plus:DI (gtu:DI (match_operand:DI 1 \"gpc_reg_operand\" \"\")\n-\t\t\t  (match_operand:DI 2 \"reg_or_short_operand\" \"\"))\n-\t\t  (match_operand:DI 3 \"gpc_reg_operand\" \"\"))\n-\t (const_int 0)))\n-   (clobber (match_scratch:DI 4 \"\"))]\n-  \"TARGET_64BIT && reload_completed\"\n-  [(set (match_dup 4)\n-\t(plus:DI (gtu:DI (match_dup 1) (match_dup 2))\n-\t\t  (match_dup 3)))\n-   (set (match_dup 0)\n-\t(compare:CC (match_dup 4)\n-\t\t    (const_int 0)))]\n-  \"\")\n-\n-(define_insn \"\"\n-  [(set (match_operand:CC 4 \"cc_reg_operand\" \"=x,x,?y,?y\")\n-\t(compare:CC\n-\t (plus:SI (gtu:SI (match_operand:SI 1 \"gpc_reg_operand\" \"r,r,r,r\")\n-\t\t\t  (match_operand:SI 2 \"reg_or_short_operand\" \"I,r,I,r\"))\n-\t\t  (match_operand:SI 3 \"gpc_reg_operand\" \"r,r,r,r\"))\n-\t (const_int 0)))\n-   (set (match_operand:SI 0 \"gpc_reg_operand\" \"=&r,&r,&r,&r\")\n-\t(plus:SI (gtu:SI (match_dup 1) (match_dup 2)) (match_dup 3)))]\n-  \"TARGET_32BIT\"\n-  \"@\n-   {ai|addic} %0,%1,%k2\\;{aze.|addze.} %0,%3\n-   {sf%I2|subf%I2c} %0,%1,%2\\;{sfe|subfe} %0,%0,%0\\;{sf.|subf.} %0,%0,%3\n-   #\n-   #\"\n-  [(set_attr \"type\" \"compare\")\n-   (set_attr \"length\" \"8,12,12,16\")])\n-\n-(define_split\n-  [(set (match_operand:CC 4 \"cc_reg_not_cr0_operand\" \"\")\n-\t(compare:CC\n-\t (plus:SI (gtu:SI (match_operand:SI 1 \"gpc_reg_operand\" \"\")\n-\t\t\t  (match_operand:SI 2 \"reg_or_short_operand\" \"\"))\n-\t\t  (match_operand:SI 3 \"gpc_reg_operand\" \"\"))\n-\t (const_int 0)))\n-   (set (match_operand:SI 0 \"gpc_reg_operand\" \"\")\n-\t(plus:SI (gtu:SI (match_dup 1) (match_dup 2)) (match_dup 3)))]\n-  \"TARGET_32BIT && reload_completed\"\n-  [(set (match_dup 0)\n-\t(plus:SI (gtu:SI (match_dup 1) (match_dup 2)) (match_dup 3)))\n-   (set (match_dup 4)\n-\t(compare:CC (match_dup 0)\n-\t\t    (const_int 0)))]\n-  \"\")\n-\n-(define_insn \"\"\n+(define_insn_and_split \"*plus_gtu<mode>_compare\"\n   [(set (match_operand:CC 4 \"cc_reg_operand\" \"=x,x,?y,?y\")\n \t(compare:CC\n-\t (plus:DI (gtu:DI (match_operand:DI 1 \"gpc_reg_operand\" \"r,r,r,r\")\n-\t\t\t  (match_operand:DI 2 \"reg_or_short_operand\" \"I,r,I,r\"))\n-\t\t  (match_operand:DI 3 \"gpc_reg_operand\" \"r,r,r,r\"))\n+\t (plus:P (gtu:P (match_operand:P 1 \"gpc_reg_operand\" \"r,r,r,r\")\n+\t\t\t(match_operand:P 2 \"reg_or_short_operand\" \"I,r,I,r\"))\n+\t\t (match_operand:P 3 \"gpc_reg_operand\" \"r,r,r,r\"))\n \t (const_int 0)))\n-   (set (match_operand:DI 0 \"gpc_reg_operand\" \"=&r,&r,&r,&r\")\n-\t(plus:DI (gtu:DI (match_dup 1) (match_dup 2)) (match_dup 3)))]\n-  \"TARGET_64BIT\"\n-  \"@\n-   addic %0,%1,%k2\\;addze. %0,%3\n-   subf%I2c %0,%1,%2\\;subfe %0,%0,%0\\;subf. %0,%0,%3\n-   #\n-   #\"\n-  [(set_attr \"type\" \"compare\")\n-   (set_attr \"length\" \"8,12,12,16\")])\n-\n-(define_split\n-  [(set (match_operand:CC 4 \"cc_reg_not_cr0_operand\" \"\")\n-\t(compare:CC\n-\t (plus:DI (gtu:DI (match_operand:DI 1 \"gpc_reg_operand\" \"\")\n-\t\t\t  (match_operand:DI 2 \"reg_or_short_operand\" \"\"))\n-\t\t  (match_operand:DI 3 \"gpc_reg_operand\" \"\"))\n-\t (const_int 0)))\n-   (set (match_operand:DI 0 \"gpc_reg_operand\" \"\")\n-\t(plus:DI (gtu:DI (match_dup 1) (match_dup 2)) (match_dup 3)))]\n-  \"TARGET_64BIT && reload_completed\"\n-  [(set (match_dup 0)\n-\t(plus:DI (gtu:DI (match_dup 1) (match_dup 2)) (match_dup 3)))\n-   (set (match_dup 4)\n-\t(compare:CC (match_dup 0)\n-\t\t    (const_int 0)))]\n+   (set (match_operand:P 0 \"gpc_reg_operand\" \"=&r,&r,&r,&r\")\n+\t(plus:P (gtu:P (match_dup 1) (match_dup 2)) (match_dup 3)))]\n+  \"\"\n+  \"#\"\n+  \"&& !reg_overlap_mentioned_p (operands[0], operands[3])\"\n+  [(set (match_dup 0) (neg:P (gtu:P (match_dup 1) (match_dup 2))))\n+   (parallel [(set (match_dup 4)\n+\t\t   (compare:CC (minus:P (match_dup 3) (match_dup 0))\n+\t\t\t       (const_int 0)))\n+\t      (set (match_dup 0) (minus:P (match_dup 3) (match_dup 0)))])]\n   \"\")\n \n (define_insn \"*neg_gtu<mode>\""}]}