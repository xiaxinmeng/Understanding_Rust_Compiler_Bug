{"sha": "6585b2e2dd63bb2e1ccc1390a7a52970152cd34d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjU4NWIyZTJkZDYzYmIyZTFjY2MxMzkwYTdhNTI5NzAxNTJjZDM0ZA==", "commit": {"author": {"name": "Alan Modra", "email": "amodra@gmail.com", "date": "2016-03-15T22:04:42Z"}, "committer": {"name": "Alan Modra", "email": "amodra@gcc.gnu.org", "date": "2016-03-15T22:04:42Z"}, "message": "Fix thinko in indirect_jump_optimize\n\n\tPR rtl-optimization/69195\n\tPR rtl-optimization/47992\n\t* ira.c (indirect_jump_optimize): Ignore artificial defs.\n\tAdd comments.\n\nFrom-SVN: r234235", "tree": {"sha": "a4b27532087917fcfbf35124aeb52422b5530c80", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a4b27532087917fcfbf35124aeb52422b5530c80"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6585b2e2dd63bb2e1ccc1390a7a52970152cd34d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6585b2e2dd63bb2e1ccc1390a7a52970152cd34d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6585b2e2dd63bb2e1ccc1390a7a52970152cd34d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6585b2e2dd63bb2e1ccc1390a7a52970152cd34d/comments", "author": {"login": "amodra", "id": 6006325, "node_id": "MDQ6VXNlcjYwMDYzMjU=", "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amodra", "html_url": "https://github.com/amodra", "followers_url": "https://api.github.com/users/amodra/followers", "following_url": "https://api.github.com/users/amodra/following{/other_user}", "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}", "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amodra/subscriptions", "organizations_url": "https://api.github.com/users/amodra/orgs", "repos_url": "https://api.github.com/users/amodra/repos", "events_url": "https://api.github.com/users/amodra/events{/privacy}", "received_events_url": "https://api.github.com/users/amodra/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "42c729c52e91374b3af861eeff7b6cfaa77d9712", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/42c729c52e91374b3af861eeff7b6cfaa77d9712", "html_url": "https://github.com/Rust-GCC/gccrs/commit/42c729c52e91374b3af861eeff7b6cfaa77d9712"}], "stats": {"total": 33, "additions": 25, "deletions": 8}, "files": [{"sha": "7359f0b483e96f2a0fe644812986d12bb7f41827", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6585b2e2dd63bb2e1ccc1390a7a52970152cd34d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6585b2e2dd63bb2e1ccc1390a7a52970152cd34d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6585b2e2dd63bb2e1ccc1390a7a52970152cd34d", "patch": "@@ -1,3 +1,10 @@\n+2016-03-16  Alan Modra  <amodra@gmail.com>\n+\n+\tPR rtl-optimization/69195\n+\tPR rtl-optimization/47992\n+\t* ira.c (indirect_jump_optimize): Ignore artificial defs.\n+\tAdd comments.\n+\n 2016-03-15  Eric Botcazou  <ebotcazou@adacore.com>\n \n \tPR bootstrap/69513"}, {"sha": "062b8a4d4b8ca177b592d3de119bce729cc295e5", "filename": "gcc/ira.c", "status": "modified", "additions": 18, "deletions": 8, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6585b2e2dd63bb2e1ccc1390a7a52970152cd34d/gcc%2Fira.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6585b2e2dd63bb2e1ccc1390a7a52970152cd34d/gcc%2Fira.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fira.c?ref=6585b2e2dd63bb2e1ccc1390a7a52970152cd34d", "patch": "@@ -3842,7 +3842,8 @@ update_equiv_regs (void)\n   free (pdx_subregs);\n }\n \n-/* A pass over indirect jumps, converting simple cases to direct jumps.  */\n+/* A pass over indirect jumps, converting simple cases to direct jumps.\n+   Combine does this optimization too, but only within a basic block.  */\n static void\n indirect_jump_optimize (void)\n {\n@@ -3862,14 +3863,23 @@ indirect_jump_optimize (void)\n       int regno = REGNO (SET_SRC (x));\n       if (DF_REG_DEF_COUNT (regno) == 1)\n \t{\n-\t  rtx_insn *def_insn = DF_REF_INSN (DF_REG_DEF_CHAIN (regno));\n-\t  rtx note = find_reg_note (def_insn, REG_LABEL_OPERAND, NULL_RTX);\n-\n-\t  if (note)\n+\t  df_ref def = DF_REG_DEF_CHAIN (regno);\n+\t  if (!DF_REF_IS_ARTIFICIAL (def))\n \t    {\n-\t      rtx lab = gen_rtx_LABEL_REF (Pmode, XEXP (note, 0));\n-\t      if (validate_replace_rtx (SET_SRC (x), lab, insn))\n-\t\trebuild_p = true;\n+\t      rtx_insn *def_insn = DF_REF_INSN (def);\n+\t      rtx note = find_reg_note (def_insn, REG_LABEL_OPERAND, NULL_RTX);\n+\n+\t      if (note)\n+\t\t{\n+\t\t  /* Substitute a LABEL_REF to the label given by the\n+\t\t     note rather than using SET_SRC of DEF_INSN.\n+\t\t     DEF_INSN might be loading the label constant from\n+\t\t     a constant pool, which isn't what we want in a\n+\t\t     direct branch.  */\n+\t\t  rtx lab = gen_rtx_LABEL_REF (Pmode, XEXP (note, 0));\n+\t\t  if (validate_replace_rtx (SET_SRC (x), lab, insn))\n+\t\t    rebuild_p = true;\n+\t\t}\n \t    }\n \t}\n     }"}]}