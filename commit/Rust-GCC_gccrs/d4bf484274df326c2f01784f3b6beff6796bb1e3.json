{"sha": "d4bf484274df326c2f01784f3b6beff6796bb1e3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDRiZjQ4NDI3NGRmMzI2YzJmMDE3ODRmM2I2YmVmZjY3OTZiYjFlMw==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2000-01-31T17:20:39Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2000-01-31T17:20:39Z"}, "message": "tinfo.h: Rename USItype to myint32, depend on BITS_PER_UNIT.\n\n\t* tinfo.h: Rename USItype to myint32, depend on BITS_PER_UNIT.\n\n\t* exception.cc (__throw_bad_typeid): Add missing std::.\n\nFrom-SVN: r31718", "tree": {"sha": "a032c10b810b477fcd5a41bc6d8fc88cbfefce0e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a032c10b810b477fcd5a41bc6d8fc88cbfefce0e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d4bf484274df326c2f01784f3b6beff6796bb1e3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d4bf484274df326c2f01784f3b6beff6796bb1e3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d4bf484274df326c2f01784f3b6beff6796bb1e3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d4bf484274df326c2f01784f3b6beff6796bb1e3/comments", "author": null, "committer": null, "parents": [{"sha": "02e59efb699c682a8cd49e631e1aa3d7682963d8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/02e59efb699c682a8cd49e631e1aa3d7682963d8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/02e59efb699c682a8cd49e631e1aa3d7682963d8"}], "stats": {"total": 24, "additions": 19, "deletions": 5}, "files": [{"sha": "2969fe4113d90c7c6306fd03325ae3adbfef5a06", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4bf484274df326c2f01784f3b6beff6796bb1e3/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4bf484274df326c2f01784f3b6beff6796bb1e3/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=d4bf484274df326c2f01784f3b6beff6796bb1e3", "patch": "@@ -1,3 +1,12 @@\n+2000-01-31  Herman A.J. ten Brugge <Haj.Ten.Brugge@net.HCC.nl>\n+\t    Jason Merrill  <jason@yorick.cygnus.com>\n+\n+\t* tinfo.h: Rename USItype to myint32, depend on BITS_PER_UNIT.\n+\n+2000-01-31  Alfred Minarik <a8601248@unet.univie.ac.at>\n+\n+\t* exception.cc (__throw_bad_typeid): Add missing std::.\n+\n 2000-01-31  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n \t* cp-tree.h (make_thunk): PROTO -> PARAMS."}, {"sha": "82bc5f9be160994487b6e4a7ddbb8e64ed88b1bd", "filename": "gcc/cp/exception.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4bf484274df326c2f01784f3b6beff6796bb1e3/gcc%2Fcp%2Fexception.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4bf484274df326c2f01784f3b6beff6796bb1e3/gcc%2Fcp%2Fexception.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fexception.cc?ref=d4bf484274df326c2f01784f3b6beff6796bb1e3", "patch": "@@ -331,7 +331,7 @@ __throw_bad_cast ()\n   return 0;\n }\n \n-extern \"C\" type_info const &\n+extern \"C\" std::type_info const &\n __throw_bad_typeid ()\n {\n   throw std::bad_typeid ();"}, {"sha": "4753e719bc1e29894fbed5a58d0d6a63e59c6b9a", "filename": "gcc/cp/tinfo.h", "status": "modified", "additions": 9, "deletions": 4, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4bf484274df326c2f01784f3b6beff6796bb1e3/gcc%2Fcp%2Ftinfo.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4bf484274df326c2f01784f3b6beff6796bb1e3/gcc%2Fcp%2Ftinfo.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftinfo.h?ref=d4bf484274df326c2f01784f3b6beff6796bb1e3", "patch": "@@ -170,14 +170,21 @@ class __si_type_info : public __user_type_info {\n \n // type_info for a general class.\n \n-typedef int USItype __attribute__ ((mode (SI)));\n+// Kludge, kludge, kludge.\n+#if BITS_PER_UNIT == 8\n+typedef int myint32 __attribute__ ((mode (SI)));\n+#elif BITS_PER_UNIT == 16\n+typedef int myint32 __attribute__ ((mode (HI)));\n+#elif BITS_PER_UNIT == 32\n+typedef int myint32 __attribute__ ((mode (QI)));\n+#endif\n \n struct __class_type_info : public __user_type_info {\n   enum access { PUBLIC = 1, PROTECTED = 2, PRIVATE = 3 };\n \n   struct base_info {\n     const __user_type_info *base;\n-    USItype offset: 29;\n+    myint32 offset: 29;\n     bool is_virtual: 1;\n     enum access access: 2;\n   };\n@@ -203,8 +210,6 @@ struct __class_type_info : public __user_type_info {\n // new abi\n #include \"stddef.h\"\n \n-typedef int USItype __attribute__ ((mode (SI)));\n-\n namespace std {\n \n class __class_type_info;"}]}