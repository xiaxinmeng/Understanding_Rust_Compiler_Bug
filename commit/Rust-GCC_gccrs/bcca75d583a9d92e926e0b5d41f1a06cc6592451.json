{"sha": "bcca75d583a9d92e926e0b5d41f1a06cc6592451", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmNjYTc1ZDU4M2E5ZDkyZTkyNmUwYjVkNDFmMWEwNmNjNjU5MjQ1MQ==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1991-12-19T21:04:58Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1991-12-19T21:04:58Z"}, "message": "Initial revision\n\nFrom-SVN: r125", "tree": {"sha": "0c4d0b48512ce285a43a38910d81ab3d588703ec", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0c4d0b48512ce285a43a38910d81ab3d588703ec"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bcca75d583a9d92e926e0b5d41f1a06cc6592451", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bcca75d583a9d92e926e0b5d41f1a06cc6592451", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bcca75d583a9d92e926e0b5d41f1a06cc6592451", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bcca75d583a9d92e926e0b5d41f1a06cc6592451/comments", "author": null, "committer": null, "parents": [{"sha": "f76e1adf7ae0747d37fc03ddae7aff78e543fb0d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f76e1adf7ae0747d37fc03ddae7aff78e543fb0d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f76e1adf7ae0747d37fc03ddae7aff78e543fb0d"}], "stats": {"total": 44, "additions": 44, "deletions": 0}, "files": [{"sha": "04278d8d013d22bd972c3adc4beb5ac28b426c2e", "filename": "gcc/config/i386/sco.h", "status": "added", "additions": 44, "deletions": 0, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bcca75d583a9d92e926e0b5d41f1a06cc6592451/gcc%2Fconfig%2Fi386%2Fsco.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bcca75d583a9d92e926e0b5d41f1a06cc6592451/gcc%2Fconfig%2Fi386%2Fsco.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsco.h?ref=bcca75d583a9d92e926e0b5d41f1a06cc6592451", "patch": "@@ -0,0 +1,44 @@\n+/* Definitions for Intel 386 running SCO Unix System V.  */\n+\n+\n+/* Mostly it's like AT&T Unix System V. */\n+\n+#include \"i386v.h\"\n+\n+/* Use crt1.o as a startup file and crtn.o as a closing file.  */\n+\n+#undef STARTFILE_SPEC\n+#define STARTFILE_SPEC  \"%{pg:gcrt1.o%s}%{!pg:%{p:mcrt1.o%s}%{!p:crt1.o%s}}\"\n+\n+#define ENDFILE_SPEC \"crtn.o%s\"\n+\n+/* Library spec, including SCO international language support. */\n+\n+#undef LIB_SPEC\n+#define LIB_SPEC \\\n+ \"%{p:-L/usr/lib/libp}%{pg:-L/usr/lib/libp} %{scointl:libintl.a%s} -lc\"\n+\n+/* Specify predefined symbols in preprocessor.  */\n+\n+#undef CPP_PREDEFINES\n+#define CPP_PREDEFINES \"-Dunix -Di386 -DM_UNIX -DM_I386 -DM_COFF -DM_WORDSWAP\"\n+\n+#define CPP_SPEC \"%{scointl:-DM_INTERNAT}\"\n+\n+#if 0 /* Not yet certain whether this is needed.  */\n+/* If no 387, use the general regs to return floating values,\n+   since this system does not emulate the 80387.  */\n+\n+#define VALUE_REGNO(MODE) \\\n+  ((TARGET_80387 && ((MODE) == SFmode || (MODE) == DFmode))\n+   ? FIRST_FLOAT_REG : 0)\n+\n+#define HARD_REGNO_MODE_OK(REGNO, MODE) \\\n+  ((REGNO) < 2 ? 1\t\t\t\t\t\t\t\\\n+   : (REGNO) < 4 ? 1\t\t\t\t\t\t\t\\\n+   : (REGNO) >= 8 ? ((GET_MODE_CLASS (MODE) == MODE_FLOAT\t\t\\\n+\t\t      || GET_MODE_CLASS (MODE) == MODE_COMPLEX_FLOAT)\t\\\n+\t\t     && TARGET_80387\t\t\t\t\t\\\n+\t\t     && GET_MODE_UNIT_SIZE (MODE) <= 8)\t\t\t\\\n+   : (MODE) != QImode)\n+#endif"}]}