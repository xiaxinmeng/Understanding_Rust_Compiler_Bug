{"sha": "c4405dfe1ddddff2f5635e3d220c5c59a4c61a92", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzQ0MDVkZmUxZGRkZGZmMmY1NjM1ZTNkMjIwYzVjNTlhNGM2MWE5Mg==", "commit": {"author": {"name": "Ed Schonberg", "email": "schonberg@adacore.com", "date": "2016-05-02T09:44:54Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2016-05-02T09:44:54Z"}, "message": "sem_util.adb (Normalize_Actuals): Take into account extra actuals that may have been introduced previously.\n\n2016-05-02  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_util.adb (Normalize_Actuals): Take into account extra\n\tactuals that may have been introduced previously. Normally extra\n\tactuals are introduced when a call is expanded, but a validity\n\tcheck may copy and reanalyze a call that carries an extra actual\n\t(e.g. an accessibility parameter) before the call itself is\n\tmarked Analzyed, and the analysis of the copy has to be able to\n\tcope with the added actual.\n\nFrom-SVN: r235723", "tree": {"sha": "a773971596477f3017235cfecf947dc7603070bd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a773971596477f3017235cfecf947dc7603070bd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c4405dfe1ddddff2f5635e3d220c5c59a4c61a92", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c4405dfe1ddddff2f5635e3d220c5c59a4c61a92", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c4405dfe1ddddff2f5635e3d220c5c59a4c61a92", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c4405dfe1ddddff2f5635e3d220c5c59a4c61a92/comments", "author": {"login": "Edschonberg", "id": 6352375, "node_id": "MDQ6VXNlcjYzNTIzNzU=", "avatar_url": "https://avatars.githubusercontent.com/u/6352375?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Edschonberg", "html_url": "https://github.com/Edschonberg", "followers_url": "https://api.github.com/users/Edschonberg/followers", "following_url": "https://api.github.com/users/Edschonberg/following{/other_user}", "gists_url": "https://api.github.com/users/Edschonberg/gists{/gist_id}", "starred_url": "https://api.github.com/users/Edschonberg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Edschonberg/subscriptions", "organizations_url": "https://api.github.com/users/Edschonberg/orgs", "repos_url": "https://api.github.com/users/Edschonberg/repos", "events_url": "https://api.github.com/users/Edschonberg/events{/privacy}", "received_events_url": "https://api.github.com/users/Edschonberg/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "05ff4c5fa71037322916d2936dce3f762357c647", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/05ff4c5fa71037322916d2936dce3f762357c647", "html_url": "https://github.com/Rust-GCC/gccrs/commit/05ff4c5fa71037322916d2936dce3f762357c647"}], "stats": {"total": 31, "additions": 28, "deletions": 3}, "files": [{"sha": "72a1ae50a764bd7efe6fe4f773ccec0dd3a2ae23", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c4405dfe1ddddff2f5635e3d220c5c59a4c61a92/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c4405dfe1ddddff2f5635e3d220c5c59a4c61a92/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=c4405dfe1ddddff2f5635e3d220c5c59a4c61a92", "patch": "@@ -1,3 +1,13 @@\n+2016-05-02  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_util.adb (Normalize_Actuals): Take into account extra\n+\tactuals that may have been introduced previously. Normally extra\n+\tactuals are introduced when a call is expanded, but a validity\n+\tcheck may copy and reanalyze a call that carries an extra actual\n+\t(e.g. an accessibility parameter) before the call itself is\n+\tmarked Analzyed, and the analysis of the copy has to be able to\n+\tcope with the added actual.\n+\n 2016-05-02  Bob Duff  <duff@adacore.com>\n \n \t* sem_ch10.adb (Analyze_Compilation_Unit): Preserve"}, {"sha": "4fc783f511dcae489dedea34e22fc8c2ce6fe10c", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 18, "deletions": 3, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c4405dfe1ddddff2f5635e3d220c5c59a4c61a92/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c4405dfe1ddddff2f5635e3d220c5c59a4c61a92/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=c4405dfe1ddddff2f5635e3d220c5c59a4c61a92", "patch": "@@ -17088,9 +17088,24 @@ package body Sem_Util is\n                  and then Actual /= Last\n                  and then No (Next_Named_Actual (Actual))\n                then\n-                  Error_Msg_N (\"unmatched actual & in call\",\n-                    Selector_Name (Actual));\n-                  exit;\n+                  --  A validity check may introduce a copy of a call that\n+                  --  includes an extra actual (for example for an unrelated\n+                  --  accessibility check). Check that the extra actual matches\n+                  --  some extra formal, which must exist already because\n+                  --  subprogram must be frozen at this point.\n+\n+                  if Present (Extra_Formals (S))\n+                    and then not Comes_From_Source (Actual)\n+                    and then Nkind (Actual) = N_Parameter_Association\n+                    and then Chars (Extra_Formals (S)) =\n+                               Chars (Selector_Name (Actual))\n+                  then\n+                     null;\n+                  else\n+                     Error_Msg_N\n+                       (\"unmatched actual & in call\", Selector_Name (Actual));\n+                     exit;\n+                  end if;\n                end if;\n \n                Next (Actual);"}]}