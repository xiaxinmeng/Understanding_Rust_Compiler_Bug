{"sha": "ab04f5cd791971f5b6560cd984fd4bc70e0cafcd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWIwNGY1Y2Q3OTE5NzFmNWI2NTYwY2Q5ODRmZDRiYzcwZTBjYWZjZA==", "commit": {"author": {"name": "Ilya Enkovich", "email": "ilya.enkovich@intel.com", "date": "2016-04-20T11:47:13Z"}, "committer": {"name": "Ilya Enkovich", "email": "ienkovich@gcc.gnu.org", "date": "2016-04-20T11:47:13Z"}, "message": "sse.md (vec_unpacks_lo_hi): Always use kmovw to support AVX512F target.\n\ngcc/\n\n\t* config/i386/sse.md (vec_unpacks_lo_hi): Always\n\tuse kmovw to support AVX512F target.\n\nFrom-SVN: r235270", "tree": {"sha": "6c7c404abb99dfe64f150cf15e419988c060b6ae", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6c7c404abb99dfe64f150cf15e419988c060b6ae"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ab04f5cd791971f5b6560cd984fd4bc70e0cafcd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ab04f5cd791971f5b6560cd984fd4bc70e0cafcd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ab04f5cd791971f5b6560cd984fd4bc70e0cafcd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ab04f5cd791971f5b6560cd984fd4bc70e0cafcd/comments", "author": {"login": "ienkovich", "id": 18308708, "node_id": "MDQ6VXNlcjE4MzA4NzA4", "avatar_url": "https://avatars.githubusercontent.com/u/18308708?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ienkovich", "html_url": "https://github.com/ienkovich", "followers_url": "https://api.github.com/users/ienkovich/followers", "following_url": "https://api.github.com/users/ienkovich/following{/other_user}", "gists_url": "https://api.github.com/users/ienkovich/gists{/gist_id}", "starred_url": "https://api.github.com/users/ienkovich/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ienkovich/subscriptions", "organizations_url": "https://api.github.com/users/ienkovich/orgs", "repos_url": "https://api.github.com/users/ienkovich/repos", "events_url": "https://api.github.com/users/ienkovich/events{/privacy}", "received_events_url": "https://api.github.com/users/ienkovich/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e6d62b46c8d124c708ef6fd7cb038d785c69cc7d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e6d62b46c8d124c708ef6fd7cb038d785c69cc7d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e6d62b46c8d124c708ef6fd7cb038d785c69cc7d"}], "stats": {"total": 11, "additions": 8, "deletions": 3}, "files": [{"sha": "368feb99c8a72cda17f0ee0bca421d6d2988c38d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab04f5cd791971f5b6560cd984fd4bc70e0cafcd/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab04f5cd791971f5b6560cd984fd4bc70e0cafcd/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ab04f5cd791971f5b6560cd984fd4bc70e0cafcd", "patch": "@@ -1,3 +1,8 @@\n+2016-04-20  Ilya Enkovich  <ilya.enkovich@intel.com>\n+\n+\t* config/i386/sse.md (vec_unpacks_lo_hi): Always\n+\tuse kmovw to support AVX512F target.\n+\n 2016-04-20  Bin Cheng  <bin.cheng@arm.com>\n \n \t* tree-scalar-evolution.c (interpret_rhs_expr): Handle BIT_AND_EXPR."}, {"sha": "9a8446865f1d6a59ea5ee173e92dd477857258de", "filename": "gcc/config/i386/sse.md", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab04f5cd791971f5b6560cd984fd4bc70e0cafcd/gcc%2Fconfig%2Fi386%2Fsse.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab04f5cd791971f5b6560cd984fd4bc70e0cafcd/gcc%2Fconfig%2Fi386%2Fsse.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsse.md?ref=ab04f5cd791971f5b6560cd984fd4bc70e0cafcd", "patch": "@@ -13233,9 +13233,9 @@\n   \"ix86_expand_sse_unpack (operands[0], operands[1], true, false); DONE;\")\n \n (define_expand \"vec_unpacks_lo_hi\"\n-  [(set (match_operand:QI 0 \"register_operand\")\n-        (subreg:QI (match_operand:HI 1 \"register_operand\") 0))]\n-  \"TARGET_AVX512DQ\")\n+  [(set (subreg:HI (match_operand:QI 0 \"register_operand\") 0)\n+        (match_operand:HI 1 \"register_operand\"))]\n+  \"TARGET_AVX512F\")\n \n (define_expand \"vec_unpacks_lo_si\"\n   [(set (match_operand:HI 0 \"register_operand\")"}]}