{"sha": "cc3a298607f8b33c06cbf5163c8eaf07f138d6c0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2MzYTI5ODYwN2Y4YjMzYzA2Y2JmNTE2M2M4ZWFmMDdmMTM4ZDZjMA==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2017-09-08T09:13:07Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2017-09-08T09:13:07Z"}, "message": "[multiple changes]\n\n2017-09-08  Hristian Kirtchev  <kirtchev@adacore.com>\n\n\t* sem_util.adb (Copy_Node_With_Replacement):\n\tUpdate the Renamed_Object field of a replicated object renaming\n\tdeclaration.\n\n2017-09-08  Patrick Bernardi  <bernardi@adacore.com>\n\n\t* exp_ch9.adb (Is_Pure_Barrier): Allow type\n\tconversions and components of objects. Simplified the detection\n\tof the Count attribute by identifying the corresponding run-time\n\tcalls.\n\n2017-09-08  Yannick Moy  <moy@adacore.com>\n\n\t* exp_ch9.adb, exp_disp.adb, repinfo.adb, sem_ch12.adb, sem_dim.adb,\n\tsem_type.adb, sinfo.ads: Minor reformatting.\n\n2017-09-08  Ed Schonberg  <schonberg@adacore.com>\n\n\t* freeze.adb (Has_Incomplete_Compoent): New predicate, subsidiary\n\tof Freeze_Profile, used to inhibit the freezing of the profile\n\tof an expression function declared within a nested package, when\n\tsome type in the profile depends on a private type declared in\n\tan enclosing package.\n\n2017-09-08  Bob Duff  <duff@adacore.com>\n\n\t* gnat1drv.adb (Gnat1drv): Do not set the Force_ALI_Tree_File flag in\n\tthe subunit case. It's still OK to set it in the \"missing subunits\"\n\tcase, because that won't cause the obsolete .ali files that cause\n\tconfusion.\n\n2017-09-08  Bob Duff  <duff@adacore.com>\n\n\t* sinput-l.adb: Remove unused \"with Unchecked_Conversion;\". It's\n\tunclear why this didn't cause a warning.\n\t* a-uncdea.ads, a-unccon.ads: Add \"Ada.\" to names in the\n\tpragmas. It's unclear why this didn't cause an error.\n\nFrom-SVN: r251869", "tree": {"sha": "0bfb807dd59b93e08be19bb16347f2b8856c3d27", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0bfb807dd59b93e08be19bb16347f2b8856c3d27"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cc3a298607f8b33c06cbf5163c8eaf07f138d6c0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cc3a298607f8b33c06cbf5163c8eaf07f138d6c0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cc3a298607f8b33c06cbf5163c8eaf07f138d6c0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cc3a298607f8b33c06cbf5163c8eaf07f138d6c0/comments", "author": null, "committer": null, "parents": [{"sha": "74a78a4f1c273094fbddf9235afc092a3aaadd69", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/74a78a4f1c273094fbddf9235afc092a3aaadd69", "html_url": "https://github.com/Rust-GCC/gccrs/commit/74a78a4f1c273094fbddf9235afc092a3aaadd69"}], "stats": {"total": 288, "additions": 209, "deletions": 79}, "files": [{"sha": "e4501eae9ed1eb77c8e9f8467b9f51c8ba155c7c", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc3a298607f8b33c06cbf5163c8eaf07f138d6c0/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc3a298607f8b33c06cbf5163c8eaf07f138d6c0/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=cc3a298607f8b33c06cbf5163c8eaf07f138d6c0", "patch": "@@ -1,3 +1,43 @@\n+2017-09-08  Hristian Kirtchev  <kirtchev@adacore.com>\n+\n+\t* sem_util.adb (Copy_Node_With_Replacement):\n+\tUpdate the Renamed_Object field of a replicated object renaming\n+\tdeclaration.\n+\n+2017-09-08  Patrick Bernardi  <bernardi@adacore.com>\n+\n+\t* exp_ch9.adb (Is_Pure_Barrier): Allow type\n+\tconversions and components of objects. Simplified the detection\n+\tof the Count attribute by identifying the corresponding run-time\n+\tcalls.\n+\n+2017-09-08  Yannick Moy  <moy@adacore.com>\n+\n+\t* exp_ch9.adb, exp_disp.adb, repinfo.adb, sem_ch12.adb, sem_dim.adb,\n+\tsem_type.adb, sinfo.ads: Minor reformatting.\n+\n+2017-09-08  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* freeze.adb (Has_Incomplete_Compoent): New predicate, subsidiary\n+\tof Freeze_Profile, used to inhibit the freezing of the profile\n+\tof an expression function declared within a nested package, when\n+\tsome type in the profile depends on a private type declared in\n+\tan enclosing package.\n+\n+2017-09-08  Bob Duff  <duff@adacore.com>\n+\n+\t* gnat1drv.adb (Gnat1drv): Do not set the Force_ALI_Tree_File flag in\n+\tthe subunit case. It's still OK to set it in the \"missing subunits\"\n+\tcase, because that won't cause the obsolete .ali files that cause\n+\tconfusion.\n+\n+2017-09-08  Bob Duff  <duff@adacore.com>\n+\n+\t* sinput-l.adb: Remove unused \"with Unchecked_Conversion;\". It's\n+\tunclear why this didn't cause a warning.\n+\t* a-uncdea.ads, a-unccon.ads: Add \"Ada.\" to names in the\n+\tpragmas. It's unclear why this didn't cause an error.\n+\n 2017-09-08  Hristian Kirtchev  <kirtchev@adacore.com>\n \n \t* exp_spark.adb (Expand_SPARK_N_Object_Renaming_Declaration):"}, {"sha": "a8429c16a41689de40335b3033b55492127b089b", "filename": "gcc/ada/a-unccon.ads", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc3a298607f8b33c06cbf5163c8eaf07f138d6c0/gcc%2Fada%2Fa-unccon.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc3a298607f8b33c06cbf5163c8eaf07f138d6c0/gcc%2Fada%2Fa-unccon.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-unccon.ads?ref=cc3a298607f8b33c06cbf5163c8eaf07f138d6c0", "patch": "@@ -19,6 +19,6 @@ generic\n \n function Ada.Unchecked_Conversion (S : Source) return Target;\n \n-pragma No_Elaboration_Code_All (Unchecked_Conversion);\n-pragma Pure (Unchecked_Conversion);\n-pragma Import (Intrinsic, Unchecked_Conversion);\n+pragma No_Elaboration_Code_All (Ada.Unchecked_Conversion);\n+pragma Pure (Ada.Unchecked_Conversion);\n+pragma Import (Intrinsic, Ada.Unchecked_Conversion);"}, {"sha": "a61cd5003f98cbe37cd3129c70798b44a2ab860e", "filename": "gcc/ada/a-uncdea.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc3a298607f8b33c06cbf5163c8eaf07f138d6c0/gcc%2Fada%2Fa-uncdea.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc3a298607f8b33c06cbf5163c8eaf07f138d6c0/gcc%2Fada%2Fa-uncdea.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-uncdea.ads?ref=cc3a298607f8b33c06cbf5163c8eaf07f138d6c0", "patch": "@@ -20,4 +20,4 @@ generic\n procedure Ada.Unchecked_Deallocation (X : in out Name);\n pragma Preelaborate (Unchecked_Deallocation);\n \n-pragma Import (Intrinsic, Unchecked_Deallocation);\n+pragma Import (Intrinsic, Ada.Unchecked_Deallocation);"}, {"sha": "64bc84a9151dc3e75ffaf62b3efa3c1eb11fea46", "filename": "gcc/ada/exp_ch9.adb", "status": "modified", "additions": 45, "deletions": 34, "changes": 79, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc3a298607f8b33c06cbf5163c8eaf07f138d6c0/gcc%2Fada%2Fexp_ch9.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc3a298607f8b33c06cbf5163c8eaf07f138d6c0/gcc%2Fada%2Fexp_ch9.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch9.adb?ref=cc3a298607f8b33c06cbf5163c8eaf07f138d6c0", "patch": "@@ -5999,8 +5999,9 @@ package body Exp_Ch9 is\n          Renamed : Node_Id;\n \n       begin\n-         --  Check for case of _object.all.field (note that the explicit\n-         --  dereference gets inserted by analyze/expand of _object.field).\n+         --  Check if the name is a component of the protected object. If\n+         --  the expander is active, the component has been transformed into\n+         --  a renaming of _object.all.component.\n \n          if Expander_Active then\n             Renamed := Renamed_Object (Entity (N));\n@@ -6010,7 +6011,7 @@ package body Exp_Ch9 is\n                 and then Nkind (Renamed) = N_Selected_Component\n                 and then Chars (Prefix (Prefix (Renamed))) = Name_uObject;\n          else\n-            return Scope (Entity (N)) = Current_Scope;\n+            return Is_Protected_Component (Entity (N));\n          end if;\n       end Is_Simple_Barrier_Name;\n \n@@ -6019,37 +6020,15 @@ package body Exp_Ch9 is\n       ---------------------\n \n       function Is_Pure_Barrier (N : Node_Id) return Traverse_Result is\n-         function Is_Count_Attribute (N : Node_Id) return Boolean;\n-         --  Check whether N is part of an expansion of the Count attribute.\n-         --  Return True if N represents the expanded function call.\n-\n-         ------------------------\n-         -- Is_Count_Attribute --\n-         ------------------------\n-\n-         function Is_Count_Attribute (N : Node_Id) return Boolean is\n-         begin\n-            return\n-              Nkind (N) = N_Function_Call\n-                and then Present (Original_Node (N))\n-                and then Nkind (Original_Node (N)) = N_Attribute_Reference\n-                and then Attribute_Name (Original_Node (N)) = Name_Count;\n-         end Is_Count_Attribute;\n-\n-      --  Start of processing for Is_Pure_Barrier\n-\n       begin\n          case Nkind (N) is\n             when N_Expanded_Name\n                | N_Identifier\n             =>\n                if No (Entity (N)) then\n                   return Abandon;\n-               end if;\n \n-               if Present (Parent (N))\n-                 and then Is_Count_Attribute (Parent (N))\n-               then\n+               elsif Is_Universal_Numeric_Type (Entity (N)) then\n                   return OK;\n                end if;\n \n@@ -6062,24 +6041,35 @@ package body Exp_Ch9 is\n                   =>\n                      return OK;\n \n-                  when E_Component\n-                     | E_Variable\n-                  =>\n-                     --  A variable in the protected type is expanded as a\n-                     --  component.\n+                  when E_Component =>\n+                     return OK;\n \n+                  when E_Variable =>\n                      if Is_Simple_Barrier_Name (N) then\n                         return OK;\n                      end if;\n \n+                  when E_Function =>\n+\n+                     --  The count attribute has been transformed into run-time\n+                     --  calls.\n+\n+                     if Is_RTE (Entity (N), RE_Protected_Count)\n+                       or else Is_RTE (Entity (N), RE_Protected_Count_Entry)\n+                     then\n+                        return OK;\n+                     end if;\n+\n                   when others =>\n                      null;\n                end case;\n \n             when N_Function_Call =>\n-               if Is_Count_Attribute (N) then\n-                  return OK;\n-               end if;\n+\n+               --  Function call checks are carried out as part of the analysis\n+               --  of the function call name.\n+\n+               return OK;\n \n             when N_Character_Literal\n                | N_Integer_Literal\n@@ -6097,6 +6087,27 @@ package body Exp_Ch9 is\n             when N_Short_Circuit =>\n                return OK;\n \n+            when N_Indexed_Component\n+               | N_Selected_Component\n+            =>\n+               if not Is_Access_Type (Etype (Prefix (N))) then\n+                  return OK;\n+               end if;\n+\n+            when N_Type_Conversion =>\n+\n+               --  Conversions to Universal_Integer will not raise constraint\n+               --  errors.\n+\n+               if Cannot_Raise_Constraint_Error (N)\n+                 or else Etype (N) = Universal_Integer\n+               then\n+                  return OK;\n+               end if;\n+\n+            when N_Unchecked_Type_Conversion =>\n+               return OK;\n+\n             when others =>\n                null;\n          end case;"}, {"sha": "872ac6488b66dd4c3e363d17d91da8695555dc0a", "filename": "gcc/ada/exp_disp.adb", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc3a298607f8b33c06cbf5163c8eaf07f138d6c0/gcc%2Fada%2Fexp_disp.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc3a298607f8b33c06cbf5163c8eaf07f138d6c0/gcc%2Fada%2Fexp_disp.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_disp.adb?ref=cc3a298607f8b33c06cbf5163c8eaf07f138d6c0", "patch": "@@ -5895,7 +5895,7 @@ package body Exp_Disp is\n                   --  Retrieve the ultimate alias of the primitive for proper\n                   --  handling of renamings and eliminated primitives.\n \n-                  E        := Ultimate_Alias (Prim);\n+                  E := Ultimate_Alias (Prim);\n \n                   --  If the alias is not a primitive operation then Prim does\n                   --  not rename another primitive, but rather an operation\n@@ -7806,7 +7806,8 @@ package body Exp_Disp is\n             then\n                declare\n                   Par_Type : constant Entity_Id :=\n-                    Find_Dispatching_Type (Alias (Prim));\n+                               Find_Dispatching_Type (Alias (Prim));\n+\n                begin\n                   if Present (Par_Type)\n                     and then Par_Type /= Typ"}, {"sha": "8a3bf36fac293a1aa84835fe68fb0d562901ab23", "filename": "gcc/ada/freeze.adb", "status": "modified", "additions": 60, "deletions": 0, "changes": 60, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc3a298607f8b33c06cbf5163c8eaf07f138d6c0/gcc%2Fada%2Ffreeze.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc3a298607f8b33c06cbf5163c8eaf07f138d6c0/gcc%2Fada%2Ffreeze.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffreeze.adb?ref=cc3a298607f8b33c06cbf5163c8eaf07f138d6c0", "patch": "@@ -3427,6 +3427,60 @@ package body Freeze is\n          R_Type    : Entity_Id;\n          Warn_Node : Node_Id;\n \n+         function Has_Incomplete_Component (T : Entity_Id) return Boolean;\n+         --  If a type includes a private component from an enclosing scope\n+         --  it cannot be frozen yet. This can happen in a package nested\n+         --  within another, when freezing an expression function whose\n+         --  profile depends on a type in some outer scope. Those types will\n+         --  be frozen at a later time in the enclosing unit.\n+\n+         ------------------------------\n+         -- Has_Incomplete_Component --\n+         ------------------------------\n+\n+         function Has_Incomplete_Component (T : Entity_Id) return Boolean is\n+            Comp     : Entity_Id;\n+            Comp_Typ : Entity_Id;\n+\n+         begin\n+            if Nkind (N) /= N_Subprogram_Body\n+              or else not Was_Expression_Function (N)\n+            then\n+               return False;\n+\n+            elsif In_Instance then\n+               return False;\n+\n+            elsif Is_Record_Type (T) then\n+               Comp := First_Entity (T);\n+\n+               while Present (Comp) loop\n+                  Comp_Typ := Etype (Comp);\n+                  if Ekind_In (Comp, E_Component, E_Discriminant)\n+                    and then Is_Private_Type (Comp_Typ)\n+                    and then No (Full_View (Comp_Typ))\n+                    and then In_Open_Scopes (Scope (Comp_Typ))\n+                    and then Scope (Comp_Typ) /= Current_Scope\n+                  then\n+                     return True;\n+                  end if;\n+                  Comp := Next_Entity (Comp);\n+               end loop;\n+\n+               return False;\n+\n+            elsif Is_Array_Type (T) then\n+               Comp_Typ := Component_Type (T);\n+               return Is_Private_Type (Comp_Typ)\n+                 and then No (Full_View (Comp_Typ))\n+                 and then In_Open_Scopes (Scope (Comp_Typ))\n+                 and then Scope (Comp_Typ) /= Current_Scope;\n+\n+            else\n+               return False;\n+            end if;\n+         end Has_Incomplete_Component;\n+\n       begin\n          --  Loop through formals\n \n@@ -3446,6 +3500,12 @@ package body Freeze is\n                Set_Etype (Formal, F_Type);\n             end if;\n \n+            if Has_Incomplete_Component (F_Type) then\n+               Set_Is_Frozen (E, False);\n+               Result := No_List;\n+               return False;\n+            end if;\n+\n             if not From_Limited_With (F_Type) then\n                Freeze_And_Append (F_Type, N, Result);\n             end if;"}, {"sha": "b1bbea90b741876b03f164379f2ac136f4987962", "filename": "gcc/ada/gnat1drv.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc3a298607f8b33c06cbf5163c8eaf07f138d6c0/gcc%2Fada%2Fgnat1drv.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc3a298607f8b33c06cbf5163c8eaf07f138d6c0/gcc%2Fada%2Fgnat1drv.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat1drv.adb?ref=cc3a298607f8b33c06cbf5163c8eaf07f138d6c0", "patch": "@@ -1353,9 +1353,9 @@ begin\n                Write_Str (\" (subunit)\");\n                Write_Eol;\n \n-               --  Force generation of ALI file, for backward compatibility\n-\n-               Opt.Force_ALI_Tree_File := True;\n+               --  Do not generate an ALI file in this case, because it would\n+               --  become obsolete when the parent is compiled, and thus\n+               --  confuse tools such as gnatfind.\n \n             elsif Main_Unit_Kind = N_Subprogram_Declaration then\n                Write_Str (\" (subprogram spec)\");"}, {"sha": "c42de8c1ac6e48b87feb771fad589069db7ac5ad", "filename": "gcc/ada/repinfo.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc3a298607f8b33c06cbf5163c8eaf07f138d6c0/gcc%2Fada%2Frepinfo.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc3a298607f8b33c06cbf5163c8eaf07f138d6c0/gcc%2Fada%2Frepinfo.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Frepinfo.adb?ref=cc3a298607f8b33c06cbf5163c8eaf07f138d6c0", "patch": "@@ -894,6 +894,7 @@ package body Repinfo is\n             Cfbit := Component_Bit_Offset (Comp);\n \n             if Rep_Not_Constant (Cfbit) then\n+\n                --  If the record is not packed, then we know that all fields\n                --  whose position is not specified have a starting normalized\n                --  bit position of zero."}, {"sha": "6e4a4f926f0ecde0db7596a5781ed1669a14f99a", "filename": "gcc/ada/sem_ch12.adb", "status": "modified", "additions": 19, "deletions": 13, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc3a298607f8b33c06cbf5163c8eaf07f138d6c0/gcc%2Fada%2Fsem_ch12.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc3a298607f8b33c06cbf5163c8eaf07f138d6c0/gcc%2Fada%2Fsem_ch12.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch12.adb?ref=cc3a298607f8b33c06cbf5163c8eaf07f138d6c0", "patch": "@@ -1902,7 +1902,7 @@ package body Sem_Ch12 is\n                      --  only uses them to elaborate entities in a package\n                      --  body.\n \n-                     declare\n+                     Explicit_Freeze_Check : declare\n                         Actual : constant Entity_Id := Entity (Match);\n \n                         Needs_Freezing : Boolean;\n@@ -1920,33 +1920,39 @@ package body Sem_Ch12 is\n                         --------------------------\n \n                         procedure Check_Generic_Parent is\n-                           Par            : Entity_Id;\n+                           Par : Entity_Id;\n+\n                         begin\n-                           if Nkind (Parent (Actual)) = N_Package_Specification\n+                           if Nkind (Parent (Actual)) =\n+                                N_Package_Specification\n                            then\n                               Par := Scope (Generic_Parent (Parent (Actual)));\n+\n                               if Is_Generic_Instance (Par)\n                                 and then Scope (Par) = Current_Scope\n-                                and then (No (Freeze_Node (Par))\n-                                  or else\n-                                    not Is_List_Member (Freeze_Node (Par)))\n+                                and then\n+                                  (No (Freeze_Node (Par))\n+                                    or else\n+                                      not Is_List_Member (Freeze_Node (Par)))\n                               then\n                                  Set_Has_Delayed_Freeze (Par);\n                                  Append_Elmt (Par, Actuals_To_Freeze);\n                               end if;\n                            end if;\n                         end Check_Generic_Parent;\n \n+                     --  Start of processing for Explicit_Freeze_Check\n+\n                      begin\n                         if not Expander_Active\n                           or else not Has_Completion (Actual)\n                           or else not In_Same_Source_Unit (I_Node, Actual)\n                           or else Is_Frozen (Actual)\n                           or else\n                             (Present (Renamed_Entity (Actual))\n-                              and then not\n-                                In_Same_Source_Unit\n-                                  (I_Node, (Renamed_Entity (Actual))))\n+                              and then\n+                                not In_Same_Source_Unit\n+                                      (I_Node, (Renamed_Entity (Actual))))\n                         then\n                            null;\n \n@@ -1978,7 +1984,7 @@ package body Sem_Ch12 is\n                               Append_Elmt (Actual, Actuals_To_Freeze);\n                            end if;\n                         end if;\n-                     end;\n+                     end Explicit_Freeze_Check;\n                   end if;\n \n                --  For use type and use package appearing in the generic part,\n@@ -9297,8 +9303,8 @@ package body Sem_Ch12 is\n           and then (Nkind_In (Gen_Unit, N_Generic_Package_Declaration,\n                                         N_Package_Declaration)\n                      or else (Gen_Unit = Body_Unit\n-                               and then True_Sloc (N, Act_Unit)\n-                                          < Sloc (Orig_Body)))\n+                               and then True_Sloc (N, Act_Unit) <\n+                                          Sloc (Orig_Body)))\n           and then Is_In_Main_Unit (Original_Node (Gen_Unit))\n           and then In_Same_Scope (Gen_Id, Act_Id));\n \n@@ -9314,7 +9320,7 @@ package body Sem_Ch12 is\n \n       if Expander_Active\n         and then (No (Freeze_Node (Act_Id))\n-          or else not Is_List_Member (Freeze_Node (Act_Id)))\n+                   or else not Is_List_Member (Freeze_Node (Act_Id)))\n       then\n          Ensure_Freeze_Node (Act_Id);\n          F_Node := Freeze_Node (Act_Id);"}, {"sha": "6330703e071bc868b79d624dac86b68ee9abb7e3", "filename": "gcc/ada/sem_dim.adb", "status": "modified", "additions": 17, "deletions": 12, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc3a298607f8b33c06cbf5163c8eaf07f138d6c0/gcc%2Fada%2Fsem_dim.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc3a298607f8b33c06cbf5163c8eaf07f138d6c0/gcc%2Fada%2Fsem_dim.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_dim.adb?ref=cc3a298607f8b33c06cbf5163c8eaf07f138d6c0", "patch": "@@ -195,12 +195,12 @@ package body Sem_Dim is\n    OK_For_Dimension : constant array (Node_Kind) of Boolean :=\n      (N_Attribute_Reference       => True,\n       N_Case_Expression           => True,\n-      N_If_Expression             => True,\n       N_Expanded_Name             => True,\n       N_Explicit_Dereference      => True,\n       N_Defining_Identifier       => True,\n       N_Function_Call             => True,\n       N_Identifier                => True,\n+      N_If_Expression             => True,\n       N_Indexed_Component         => True,\n       N_Integer_Literal           => True,\n       N_Op_Abs                    => True,\n@@ -1169,6 +1169,9 @@ package body Sem_Dim is\n          when N_Binary_Op =>\n             Analyze_Dimension_Binary_Op (N);\n \n+         when N_Case_Expression =>\n+            Analyze_Dimension_Case_Expression (N);\n+\n          when N_Component_Declaration =>\n             Analyze_Dimension_Component_Declaration (N);\n \n@@ -1187,20 +1190,17 @@ package body Sem_Dim is\n          =>\n             Analyze_Dimension_Has_Etype (N);\n \n-         when N_Case_Expression =>\n-            Analyze_Dimension_Case_Expression (N);\n-\n-         when N_If_Expression =>\n-            Analyze_Dimension_If_Expression (N);\n-\n-         --  In the presence of a repaired syntax error, an identifier\n-         --  may be introduced without a usable type.\n+         --  In the presence of a repaired syntax error, an identifier may be\n+         --  introduced without a usable type.\n \n          when N_Identifier =>\n             if Present (Etype (N)) then\n                Analyze_Dimension_Has_Etype (N);\n             end if;\n \n+         when N_If_Expression =>\n+            Analyze_Dimension_If_Expression (N);\n+\n          when N_Number_Declaration =>\n             Analyze_Dimension_Number_Declaration (N);\n \n@@ -1787,9 +1787,12 @@ package body Sem_Dim is\n    ---------------------------------------\n \n    procedure Analyze_Dimension_Case_Expression (N : Node_Id) is\n+      Frst      : constant Node_Id        := First (Alternatives (N));\n+      Frst_Expr : constant Node_Id        := Expression (Frst);\n+      Dims      : constant Dimension_Type := Dimensions_Of (Frst_Expr);\n+\n       Alt : Node_Id;\n-      Frst : constant Node_Id := First (Alternatives (N));\n-      Dims : constant Dimension_Type := Dimensions_Of (Expression (Frst));\n+\n    begin\n       Alt := Next (Frst);\n       while Present (Alt) loop\n@@ -1800,7 +1803,8 @@ package body Sem_Dim is\n \n          Next (Alt);\n       end loop;\n-      Copy_Dimensions (Expression (Frst), N);\n+\n+      Copy_Dimensions (Frst_Expr, N);\n    end Analyze_Dimension_Case_Expression;\n \n    ---------------------------------------------\n@@ -2144,6 +2148,7 @@ package body Sem_Dim is\n    procedure Analyze_Dimension_If_Expression (N : Node_Id) is\n       Then_Expr : constant Node_Id := Next (First (Expressions (N)));\n       Else_Expr : constant Node_Id := Next (Then_Expr);\n+\n    begin\n       if Dimensions_Of (Then_Expr) /= Dimensions_Of (Else_Expr) then\n          Error_Msg_N (\"dimensions mismatch in conditional expression\", N);"}, {"sha": "c70d892bf0bf9fe79aad4751b0cf681dcc06a912", "filename": "gcc/ada/sem_type.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc3a298607f8b33c06cbf5163c8eaf07f138d6c0/gcc%2Fada%2Fsem_type.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc3a298607f8b33c06cbf5163c8eaf07f138d6c0/gcc%2Fada%2Fsem_type.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_type.adb?ref=cc3a298607f8b33c06cbf5163c8eaf07f138d6c0", "patch": "@@ -2947,9 +2947,9 @@ package body Sem_Type is\n             --  Continue climbing\n \n             else\n-               --  Use the full-view of private types (if allowed).\n-               --  Guard against infinite loops when full view has same\n-               --  type as parent, as can happen with interface extensions,\n+               --  Use the full-view of private types (if allowed). Guard\n+               --  against infinite loops when full view has same type as\n+               --  parent, as can happen with interface extensions.\n \n                if Use_Full_View\n                  and then Is_Private_Type (Par)"}, {"sha": "f57b7c5820877783f86b64d534f7ce8c7aaf2c0b", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 12, "deletions": 4, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc3a298607f8b33c06cbf5163c8eaf07f138d6c0/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc3a298607f8b33c06cbf5163c8eaf07f138d6c0/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=cc3a298607f8b33c06cbf5163c8eaf07f138d6c0", "patch": "@@ -17659,15 +17659,22 @@ package body Sem_Util is\n                  (New_Node, Default_Node.Comes_From_Source);\n             end if;\n \n-            --  If the node is a call and has named associations, set the\n-            --  corresponding links in the copy.\n+            --  Update the named association links for calls to mention the\n+            --  copied actual parameters.\n \n             if Nkind_In (Old_Node, N_Entry_Call_Statement,\n                                    N_Function_Call,\n                                    N_Procedure_Call_Statement)\n               and then Present (First_Named_Actual (Old_Node))\n             then\n                Adjust_Named_Associations (Old_Node, New_Node);\n+\n+            --  Update the Renamed_Object attribute of an object renaming\n+            --  declaration to mention the replicated name.\n+\n+            elsif Nkind (Old_Node) = N_Object_Renaming_Declaration then\n+               Set_Renamed_Object\n+                 (Defining_Entity (New_Node), Name (New_Node));\n             end if;\n \n             --  Reset First_Real_Statement for Handled_Sequence_Of_Statements.\n@@ -17679,8 +17686,9 @@ package body Sem_Util is\n               and then Present (First_Real_Statement (Old_Node))\n             then\n                declare\n-                  Old_F  : constant Node_Id := First_Real_Statement (Old_Node);\n-                  N1, N2 : Node_Id;\n+                  Old_F : constant Node_Id := First_Real_Statement (Old_Node);\n+                  N1    : Node_Id;\n+                  N2    : Node_Id;\n \n                begin\n                   N1 := First (Statements (Old_Node));"}, {"sha": "0aef4b6f72375a0bc8cd45d9ba82f27c39da349b", "filename": "gcc/ada/sinfo.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc3a298607f8b33c06cbf5163c8eaf07f138d6c0/gcc%2Fada%2Fsinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc3a298607f8b33c06cbf5163c8eaf07f138d6c0/gcc%2Fada%2Fsinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsinfo.ads?ref=cc3a298607f8b33c06cbf5163c8eaf07f138d6c0", "patch": "@@ -11852,8 +11852,8 @@ package Sinfo is\n      N_Case_Expression_Alternative =>\n        (1 => False,   --  Actions (List1-Sem)\n         2 => False,   --  unused\n-        3 => True,    --  Statements (List3)\n-        4 => True,    --  Expression (Node4)\n+        3 => True,    --  Expression (Node3)\n+        4 => True,    --  Discrete_Choices (List4)\n         5 => False),  --  unused\n \n      N_Case_Statement =>"}, {"sha": "360e7117e45f2db3d66ea63a0c500a5d9262f5e6", "filename": "gcc/ada/sinput-l.adb", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc3a298607f8b33c06cbf5163c8eaf07f138d6c0/gcc%2Fada%2Fsinput-l.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc3a298607f8b33c06cbf5163c8eaf07f138d6c0/gcc%2Fada%2Fsinput-l.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsinput-l.adb?ref=cc3a298607f8b33c06cbf5163c8eaf07f138d6c0", "patch": "@@ -45,8 +45,6 @@ with System;   use System;\n \n with System.OS_Lib; use System.OS_Lib;\n \n-with Unchecked_Conversion;\n-\n package body Sinput.L is\n \n    Prep_Buffer : Text_Buffer_Ptr := null;"}]}