{"sha": "0423421f6f73c7375200a3a59da5269b31c6af28", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDQyMzQyMWY2ZjczYzczNzUyMDBhM2E1OWRhNTI2OWIzMWM2YWYyOA==", "commit": {"author": {"name": "Alan Modra", "email": "amodra@bigpond.net.au", "date": "2004-08-26T01:20:25Z"}, "committer": {"name": "Alan Modra", "email": "amodra@gcc.gnu.org", "date": "2004-08-26T01:20:25Z"}, "message": "re PR target/16480 (using -msdata causes internal compiler error)\n\n\tPR target/16480\n\t* config/rs6000/rs6000.c (rs6000_split_multireg_move): Don't abort\n\ton \"(mem (symbol_ref ..))\" rtl.  Look at LO_SUM base regs as well\n\tas PLUS base regs.\n\nFrom-SVN: r86598", "tree": {"sha": "b44be8bdd6d43905e67744d3cddf0ca5b88cb2f9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b44be8bdd6d43905e67744d3cddf0ca5b88cb2f9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0423421f6f73c7375200a3a59da5269b31c6af28", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0423421f6f73c7375200a3a59da5269b31c6af28", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0423421f6f73c7375200a3a59da5269b31c6af28", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0423421f6f73c7375200a3a59da5269b31c6af28/comments", "author": null, "committer": null, "parents": [{"sha": "37d5a9a5ad9a7f43fa0331d993f4235576dd376d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/37d5a9a5ad9a7f43fa0331d993f4235576dd376d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/37d5a9a5ad9a7f43fa0331d993f4235576dd376d"}], "stats": {"total": 27, "additions": 15, "deletions": 12}, "files": [{"sha": "4af8f57b048d5114db823e397f9711d26a45b931", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0423421f6f73c7375200a3a59da5269b31c6af28/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0423421f6f73c7375200a3a59da5269b31c6af28/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0423421f6f73c7375200a3a59da5269b31c6af28", "patch": "@@ -1,3 +1,10 @@\n+2004-08-26  Alan Modra  <amodra@bigpond.net.au>\n+\n+\tPR target/16480\n+\t* config/rs6000/rs6000.c (rs6000_split_multireg_move): Don't abort\n+\ton \"(mem (symbol_ref ..))\" rtl.  Look at LO_SUM base regs as well\n+\tas PLUS base regs.\n+\n 2005-08-28  Paul Brook  <paul@codesourcery.com>\n \n \t* config/arm/symbian.h (SUBTARGET_ASM_FLOAT_SPEC): Default to"}, {"sha": "745b4759d3b91c6582d47b660da329b64f89b8ca", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 8, "deletions": 12, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0423421f6f73c7375200a3a59da5269b31c6af28/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0423421f6f73c7375200a3a59da5269b31c6af28/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=0423421f6f73c7375200a3a59da5269b31c6af28", "patch": "@@ -11352,18 +11352,14 @@ rs6000_split_multireg_move (rtx dst, rtx src)\n \t      src = newsrc;\n \t    }\n \n-\t  /* We have now address involving an base register only.\n-\t     If we use one of the registers to address memory,\n-\t     we have change that register last.  */\n-\n-\t  breg = (GET_CODE (XEXP (src, 0)) == PLUS\n-\t\t  ? XEXP (XEXP (src, 0), 0)\n-\t\t  : XEXP (src, 0));\n-\n-\t  if (!REG_P (breg))\n-\t      abort();\n-\n-\t  if (REGNO (breg) >= REGNO (dst)\n+\t  breg = XEXP (src, 0);\n+\t  if (GET_CODE (breg) == PLUS || GET_CODE (breg) == LO_SUM)\n+\t    breg = XEXP (breg, 0);\n+\n+\t  /* If the base register we are using to address memory is\n+\t     also a destination reg, then change that register last.  */\n+\t  if (REG_P (breg)\n+\t      && REGNO (breg) >= REGNO (dst)\n \t      && REGNO (breg) < REGNO (dst) + nregs)\n \t    j = REGNO (breg) - REGNO (dst);\n         }"}]}