{"sha": "26d476cd52837de43ed783288af5d4d68bd93c19", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjZkNDc2Y2Q1MjgzN2RlNDNlZDc4MzI4OGFmNWQ0ZDY4YmQ5M2MxOQ==", "commit": {"author": {"name": "James Greenhalgh", "email": "james.greenhalgh@arm.com", "date": "2017-08-01T12:59:05Z"}, "committer": {"name": "James Greenhalgh", "email": "jgreenhalgh@gcc.gnu.org", "date": "2017-08-01T12:59:05Z"}, "message": "Remove flag_tree_vectorize\n\ngcc/\n\n\t* common.opt (ftree-vectorize): No longer set flag_tree_vectorize.\n\t(ftree-loop-vectorize): Set as EnabledBy ftree-vectorize.\n\t(ftree-slp-vectorize): Likewise.\n\t* omp-expand (expand_omp_simd): Remove flag_tree_vectorize, as it\n\tcan no longer be set independent of flag_tree_loop_vectorize.\n\t* omp-general.c (emp_max_vf): Likewise.\n\t* opts.c (enable_fdo_optimizations): Remove references to\n\tflag_tree_vectorize, these are now implicit.\n\t(common_handle_option): Remove handling for OPT_ftree_vectorize,\n\tand leave it for the options machinery.\n\nFrom-SVN: r250774", "tree": {"sha": "676ab1192c160e8f22558acd28fc92381a594718", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/676ab1192c160e8f22558acd28fc92381a594718"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/26d476cd52837de43ed783288af5d4d68bd93c19", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/26d476cd52837de43ed783288af5d4d68bd93c19", "html_url": "https://github.com/Rust-GCC/gccrs/commit/26d476cd52837de43ed783288af5d4d68bd93c19", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/26d476cd52837de43ed783288af5d4d68bd93c19/comments", "author": {"login": "jgreenhalgh-arm", "id": 6104025, "node_id": "MDQ6VXNlcjYxMDQwMjU=", "avatar_url": "https://avatars.githubusercontent.com/u/6104025?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jgreenhalgh-arm", "html_url": "https://github.com/jgreenhalgh-arm", "followers_url": "https://api.github.com/users/jgreenhalgh-arm/followers", "following_url": "https://api.github.com/users/jgreenhalgh-arm/following{/other_user}", "gists_url": "https://api.github.com/users/jgreenhalgh-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/jgreenhalgh-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jgreenhalgh-arm/subscriptions", "organizations_url": "https://api.github.com/users/jgreenhalgh-arm/orgs", "repos_url": "https://api.github.com/users/jgreenhalgh-arm/repos", "events_url": "https://api.github.com/users/jgreenhalgh-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/jgreenhalgh-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "225dcdec6ffefc3808743c6eb6f2a7317d0d19ba", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/225dcdec6ffefc3808743c6eb6f2a7317d0d19ba", "html_url": "https://github.com/Rust-GCC/gccrs/commit/225dcdec6ffefc3808743c6eb6f2a7317d0d19ba"}], "stats": {"total": 38, "additions": 23, "deletions": 15}, "files": [{"sha": "d5fc875705e08dee87e1f37b5f518337ce604f85", "filename": "gcc/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/26d476cd52837de43ed783288af5d4d68bd93c19/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/26d476cd52837de43ed783288af5d4d68bd93c19/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=26d476cd52837de43ed783288af5d4d68bd93c19", "patch": "@@ -1,3 +1,16 @@\n+2017-08-01  James Greenhalgh  <james.greenhalgh@arm.com>\n+\n+\t* common.opt (ftree-vectorize): No longer set flag_tree_vectorize.\n+\t(ftree-loop-vectorize): Set as EnabledBy ftree-vectorize.\n+\t(ftree-slp-vectorize): Likewise.\n+\t* omp-expand (expand_omp_simd): Remove flag_tree_vectorize, as it\n+\tcan no longer be set independent of flag_tree_loop_vectorize.\n+\t* omp-general.c (emp_max_vf): Likewise.\n+\t* opts.c (enable_fdo_optimizations): Remove references to\n+\tflag_tree_vectorize, these are now implicit.\n+\t(common_handle_option): Remove handling for OPT_ftree_vectorize,\n+\tand leave it for the options machinery.\n+\n 2017-08-01  Martin Liska  <mliska@suse.cz>\n \n \tPR middle-end/70140"}, {"sha": "1cb1c83d3065039fcd0d00f332ec74c10940f04e", "filename": "gcc/common.opt", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/26d476cd52837de43ed783288af5d4d68bd93c19/gcc%2Fcommon.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/26d476cd52837de43ed783288af5d4d68bd93c19/gcc%2Fcommon.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcommon.opt?ref=26d476cd52837de43ed783288af5d4d68bd93c19", "patch": "@@ -2691,20 +2691,21 @@ fvar-tracking-uninit\n Common Report Var(flag_var_tracking_uninit) PerFunction\n Perform variable tracking and also tag variables that are uninitialized.\n \n+; Alias to enable both -ftree-loop-vectorize and -ftree-slp-vectorize.\n ftree-vectorize\n-Common Report Var(flag_tree_vectorize) Optimization\n+Common Report Optimization\n Enable vectorization on trees.\n \n ftree-vectorizer-verbose=\n Common Joined RejectNegative Ignore\n Does nothing.  Preserved for backward compatibility.\n \n ftree-loop-vectorize\n-Common Report Var(flag_tree_loop_vectorize) Optimization\n+Common Report Var(flag_tree_loop_vectorize) Optimization EnabledBy(ftree-vectorize)\n Enable loop vectorization on trees.\n \n ftree-slp-vectorize\n-Common Report Var(flag_tree_slp_vectorize) Optimization\n+Common Report Var(flag_tree_slp_vectorize) Optimization EnabledBy(ftree-vectorize)\n Enable basic block vectorization (SLP) on trees.\n \n fvect-cost-model="}, {"sha": "970e04f71f8f1019474f47987ca8723a6c3d3575", "filename": "gcc/omp-expand.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/26d476cd52837de43ed783288af5d4d68bd93c19/gcc%2Fomp-expand.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/26d476cd52837de43ed783288af5d4d68bd93c19/gcc%2Fomp-expand.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fomp-expand.c?ref=26d476cd52837de43ed783288af5d4d68bd93c19", "patch": "@@ -4851,8 +4851,7 @@ expand_omp_simd (struct omp_region *region, struct omp_for_data *fd)\n       /* If not -fno-tree-loop-vectorize, hint that we want to vectorize\n \t the loop.  */\n       if ((flag_tree_loop_vectorize\n-\t   || (!global_options_set.x_flag_tree_loop_vectorize\n-\t       && !global_options_set.x_flag_tree_vectorize))\n+\t   || !global_options_set.x_flag_tree_loop_vectorize)\n \t  && flag_tree_loop_optimize\n \t  && loop->safelen > 1)\n \t{"}, {"sha": "ed94668559b3babf672dba328a79e671b8a016af", "filename": "gcc/omp-general.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/26d476cd52837de43ed783288af5d4d68bd93c19/gcc%2Fomp-general.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/26d476cd52837de43ed783288af5d4d68bd93c19/gcc%2Fomp-general.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fomp-general.c?ref=26d476cd52837de43ed783288af5d4d68bd93c19", "patch": "@@ -429,8 +429,7 @@ omp_max_vf (void)\n       || optimize_debug\n       || !flag_tree_loop_optimize\n       || (!flag_tree_loop_vectorize\n-\t  && (global_options_set.x_flag_tree_loop_vectorize\n-\t      || global_options_set.x_flag_tree_vectorize)))\n+\t  && global_options_set.x_flag_tree_loop_vectorize))\n     return 1;\n \n   int vf = 1;"}, {"sha": "989cc6b6dec6377280958178a120dfa1470d1704", "filename": "gcc/opts.c", "status": "modified", "additions": 4, "deletions": 8, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/26d476cd52837de43ed783288af5d4d68bd93c19/gcc%2Fopts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/26d476cd52837de43ed783288af5d4d68bd93c19/gcc%2Fopts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fopts.c?ref=26d476cd52837de43ed783288af5d4d68bd93c19", "patch": "@@ -1477,11 +1477,9 @@ enable_fdo_optimizations (struct gcc_options *opts,\n     opts->x_flag_unswitch_loops = value;\n   if (!opts_set->x_flag_gcse_after_reload)\n     opts->x_flag_gcse_after_reload = value;\n-  if (!opts_set->x_flag_tree_loop_vectorize\n-      && !opts_set->x_flag_tree_vectorize)\n+  if (!opts_set->x_flag_tree_loop_vectorize)\n     opts->x_flag_tree_loop_vectorize = value;\n-  if (!opts_set->x_flag_tree_slp_vectorize\n-      && !opts_set->x_flag_tree_vectorize)\n+  if (!opts_set->x_flag_tree_slp_vectorize)\n     opts->x_flag_tree_slp_vectorize = value;\n   if (!opts_set->x_flag_vect_cost_model)\n     opts->x_flag_vect_cost_model = VECT_COST_MODEL_DYNAMIC;\n@@ -2236,10 +2234,8 @@ common_handle_option (struct gcc_options *opts,\n       break;\n \n     case OPT_ftree_vectorize:\n-      if (!opts_set->x_flag_tree_loop_vectorize)\n-        opts->x_flag_tree_loop_vectorize = value;\n-      if (!opts_set->x_flag_tree_slp_vectorize)\n-        opts->x_flag_tree_slp_vectorize = value;\n+      /* Automatically sets -ftree-loop-vectorize and\n+\t -ftree-slp-vectorize.  Nothing more to do here.  */\n       break;\n     case OPT_fshow_column:\n       dc->show_column = value;"}]}