{"sha": "e886224be7e4e75c06abf95676c1b408aa2583ef", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTg4NjIyNGJlN2U0ZTc1YzA2YWJmOTU2NzZjMWI0MDhhYTI1ODNlZg==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@acm.org", "date": "2017-06-30T16:10:13Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2017-06-30T16:10:13Z"}, "message": "ggc.h: Replace all 'static inline' with plain 'inline'.\n\n\t* ggc.h: Replace all 'static inline' with plain 'inline'.  Fix\n\tsome formatting.\n\nFrom-SVN: r249848", "tree": {"sha": "8e458a0b9a5c148cfb6a3799aec5e43b5b4ef2ae", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8e458a0b9a5c148cfb6a3799aec5e43b5b4ef2ae"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e886224be7e4e75c06abf95676c1b408aa2583ef", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e886224be7e4e75c06abf95676c1b408aa2583ef", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e886224be7e4e75c06abf95676c1b408aa2583ef", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e886224be7e4e75c06abf95676c1b408aa2583ef/comments", "author": {"login": "urnathan", "id": 13103001, "node_id": "MDQ6VXNlcjEzMTAzMDAx", "avatar_url": "https://avatars.githubusercontent.com/u/13103001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/urnathan", "html_url": "https://github.com/urnathan", "followers_url": "https://api.github.com/users/urnathan/followers", "following_url": "https://api.github.com/users/urnathan/following{/other_user}", "gists_url": "https://api.github.com/users/urnathan/gists{/gist_id}", "starred_url": "https://api.github.com/users/urnathan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/urnathan/subscriptions", "organizations_url": "https://api.github.com/users/urnathan/orgs", "repos_url": "https://api.github.com/users/urnathan/repos", "events_url": "https://api.github.com/users/urnathan/events{/privacy}", "received_events_url": "https://api.github.com/users/urnathan/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "39426ab74f5ca34a413e45efc8b5d461479e3c5a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/39426ab74f5ca34a413e45efc8b5d461479e3c5a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/39426ab74f5ca34a413e45efc8b5d461479e3c5a"}], "stats": {"total": 43, "additions": 23, "deletions": 20}, "files": [{"sha": "594b2472eaaf25c9a8d5ce440f0b3707d56d812c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e886224be7e4e75c06abf95676c1b408aa2583ef/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e886224be7e4e75c06abf95676c1b408aa2583ef/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e886224be7e4e75c06abf95676c1b408aa2583ef", "patch": "@@ -1,3 +1,8 @@\n+2017-06-30  Nathan Sidwell  <nathan@acm.org>\n+\n+\t* ggc.h: Replace all 'static inline' with plain 'inline'.  Fix\n+\tsome formatting.\n+\n 2017-06-30  Peter Bergner  <bergner@vnet.ibm.com>\n \n \t* tree-cfg.c (group_case_labels_stmt): Merge scanning and compressing"}, {"sha": "2f4fa0fcbe1868f6ca00742c1bac209eb365a03f", "filename": "gcc/ggc.h", "status": "modified", "additions": 18, "deletions": 20, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e886224be7e4e75c06abf95676c1b408aa2583ef/gcc%2Fggc.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e886224be7e4e75c06abf95676c1b408aa2583ef/gcc%2Fggc.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fggc.h?ref=e886224be7e4e75c06abf95676c1b408aa2583ef", "patch": "@@ -127,9 +127,8 @@ extern void *ggc_internal_alloc (size_t, void (*)(void *), size_t,\n \t\t\t\t size_t CXX_MEM_STAT_INFO)\n      ATTRIBUTE_MALLOC;\n \n-     static inline\n-     void *\n-     ggc_internal_alloc (size_t s CXX_MEM_STAT_INFO)\n+inline void *\n+ggc_internal_alloc (size_t s CXX_MEM_STAT_INFO)\n {\n   return ggc_internal_alloc (s, NULL, 0, 1 PASS_MEM_STAT);\n }\n@@ -141,8 +140,7 @@ extern void *ggc_internal_cleared_alloc (size_t, void (*)(void *),\n \t\t\t\t\t size_t, size_t\n \t\t\t\t\t CXX_MEM_STAT_INFO) ATTRIBUTE_MALLOC;\n \n-static inline\n-void *\n+inline void *\n ggc_internal_cleared_alloc (size_t s CXX_MEM_STAT_INFO)\n {\n   return ggc_internal_cleared_alloc (s, NULL, 0, 1 PASS_MEM_STAT);\n@@ -168,7 +166,7 @@ finalize (void *p)\n }\n \n template<typename T>\n-static inline bool\n+inline bool\n need_finalization_p ()\n {\n #if GCC_VERSION >= 4003\n@@ -179,7 +177,7 @@ need_finalization_p ()\n }\n \n template<typename T>\n-static inline T *\n+inline T *\n ggc_alloc (ALONE_CXX_MEM_STAT_INFO)\n {\n   if (need_finalization_p<T> ())\n@@ -191,7 +189,7 @@ ggc_alloc (ALONE_CXX_MEM_STAT_INFO)\n }\n \n template<typename T>\n-static inline T *\n+inline T *\n ggc_cleared_alloc (ALONE_CXX_MEM_STAT_INFO)\n {\n   if (need_finalization_p<T> ())\n@@ -204,7 +202,7 @@ ggc_cleared_alloc (ALONE_CXX_MEM_STAT_INFO)\n }\n \n template<typename T>\n-static inline T *\n+inline T *\n ggc_vec_alloc (size_t c CXX_MEM_STAT_INFO)\n {\n   if (need_finalization_p<T> ())\n@@ -216,7 +214,7 @@ ggc_vec_alloc (size_t c CXX_MEM_STAT_INFO)\n }\n \n template<typename T>\n-static inline T *\n+inline T *\n ggc_cleared_vec_alloc (size_t c CXX_MEM_STAT_INFO)\n {\n   if (need_finalization_p<T> ())\n@@ -229,7 +227,7 @@ ggc_cleared_vec_alloc (size_t c CXX_MEM_STAT_INFO)\n \t\t\t\t\t\t\t 0, 0 PASS_MEM_STAT));\n }\n \n-static inline void *\n+inline void *\n ggc_alloc_atomic (size_t s CXX_MEM_STAT_INFO)\n {\n     return ggc_internal_alloc (s PASS_MEM_STAT);\n@@ -274,52 +272,52 @@ extern void init_ggc_heuristics (void);\n \n /* Memory statistics passing versions of some allocators.  Too few of them to\n    make gengtype produce them, so just define the needed ones here.  */\n-static inline struct rtx_def *\n+inline struct rtx_def *\n ggc_alloc_rtx_def_stat (size_t s CXX_MEM_STAT_INFO)\n {\n   return (struct rtx_def *) ggc_internal_alloc (s PASS_MEM_STAT);\n }\n \n-static inline union tree_node *\n+inline union tree_node *\n ggc_alloc_tree_node_stat (size_t s CXX_MEM_STAT_INFO)\n {\n   return (union tree_node *) ggc_internal_alloc (s PASS_MEM_STAT);\n }\n \n-static inline union tree_node *\n+inline union tree_node *\n ggc_alloc_cleared_tree_node_stat (size_t s CXX_MEM_STAT_INFO)\n {\n   return (union tree_node *) ggc_internal_cleared_alloc (s PASS_MEM_STAT);\n }\n \n-static inline gimple *\n+inline gimple *\n ggc_alloc_cleared_gimple_statement_stat (size_t s CXX_MEM_STAT_INFO)\n {\n   return (gimple *) ggc_internal_cleared_alloc (s PASS_MEM_STAT);\n }\n \n-static inline void\n+inline void\n gt_ggc_mx (const char *s)\n {\n   ggc_test_and_set_mark (const_cast<char *> (s));\n }\n \n-static inline void\n+inline void\n gt_pch_nx (const char *)\n {\n }\n \n-static inline void\n+inline void\n gt_ggc_mx (int)\n {\n }\n \n-static inline void\n+inline void\n gt_pch_nx (int)\n {\n }\n \n-static inline void\n+inline void\n gt_pch_nx (unsigned int)\n {\n }"}]}