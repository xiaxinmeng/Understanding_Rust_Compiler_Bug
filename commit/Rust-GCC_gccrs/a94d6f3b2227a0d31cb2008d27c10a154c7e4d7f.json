{"sha": "a94d6f3b2227a0d31cb2008d27c10a154c7e4d7f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTk0ZDZmM2IyMjI3YTBkMzFjYjIwMDhkMjdjMTBhMTU0YzdlNGQ3Zg==", "commit": {"author": {"name": "Kaveh R. Ghazi", "email": "ghazi@caip.rutgers.edu", "date": "2005-12-09T23:46:42Z"}, "committer": {"name": "Kaveh Ghazi", "email": "ghazi@gcc.gnu.org", "date": "2005-12-09T23:46:42Z"}, "message": "re PR testsuite/20772 (x86 tests should run on both i?86 and x86_64)\n\n\tPR testsuite/20772\n\t* g++.dg/eh/simd-1.C, g++.dg/eh/simd-2.C, g++.dg/opt/inline9.C,\n\tgcc.dg/20020418-1.c, gcc.dg/20031102-1.c, gcc.dg/ia64-sync-1.c,\n\tgcc.dg/ia64-sync-2.c, gcc.dg/ia64-sync-3.c, gcc.dg/ia64-sync-4.c,\n\tgcc.dg/ifcvt-fabs-1.c, gcc.dg/loop-3.c, gcc.dg/nested-calls-1.c,\n\tgcc.dg/pr20017.c, gcc.dg/smod-1.c, gcc.dg/sync-2.c,\n\tgcc.dg/tls/opt-3.c, gcc.dg/torture/badshift.c: Add x86_64 cases\n\tand/or merge with i?86 cases.\n\n\t* gcc.dg/tls/opt-3.c: Require effective target fpic.\n\nFrom-SVN: r108324", "tree": {"sha": "34c2196454ca057fb81bf3f075e127441135285c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/34c2196454ca057fb81bf3f075e127441135285c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a94d6f3b2227a0d31cb2008d27c10a154c7e4d7f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a94d6f3b2227a0d31cb2008d27c10a154c7e4d7f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a94d6f3b2227a0d31cb2008d27c10a154c7e4d7f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a94d6f3b2227a0d31cb2008d27c10a154c7e4d7f/comments", "author": null, "committer": null, "parents": [{"sha": "27b7cbdfbde9015a43ac70005eddfcb006a169ec", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/27b7cbdfbde9015a43ac70005eddfcb006a169ec", "html_url": "https://github.com/Rust-GCC/gccrs/commit/27b7cbdfbde9015a43ac70005eddfcb006a169ec"}], "stats": {"total": 53, "additions": 29, "deletions": 24}, "files": [{"sha": "c0944be98663ed3e372e96e8855edf990e0d2a53", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a94d6f3b2227a0d31cb2008d27c10a154c7e4d7f/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a94d6f3b2227a0d31cb2008d27c10a154c7e4d7f/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=a94d6f3b2227a0d31cb2008d27c10a154c7e4d7f", "patch": "@@ -1,5 +1,16 @@\n 2005-12-09  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n+\tPR testsuite/20772\n+\t* g++.dg/eh/simd-1.C, g++.dg/eh/simd-2.C, g++.dg/opt/inline9.C,\n+\tgcc.dg/20020418-1.c, gcc.dg/20031102-1.c, gcc.dg/ia64-sync-1.c,\n+\tgcc.dg/ia64-sync-2.c, gcc.dg/ia64-sync-3.c, gcc.dg/ia64-sync-4.c,\n+\tgcc.dg/ifcvt-fabs-1.c, gcc.dg/loop-3.c, gcc.dg/nested-calls-1.c,\n+\tgcc.dg/pr20017.c, gcc.dg/smod-1.c, gcc.dg/sync-2.c,\n+\tgcc.dg/tls/opt-3.c, gcc.dg/torture/badshift.c: Add x86_64 cases\n+\tand/or merge with i?86 cases.\n+\n+\t* gcc.dg/tls/opt-3.c: Require effective target fpic.\n+\n \tPR testsuite/20772\n \t* g++.dg/opt/life1.C, g++.old-deja/g++.abi/aggregates.C,\n \tg++.old-deja/g++.abi/align.C, g++.old-deja/g++.abi/bitfields.C,"}, {"sha": "465b7826da09b516abe97a66914d6c40b720f7c9", "filename": "gcc/testsuite/g++.dg/eh/simd-1.C", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a94d6f3b2227a0d31cb2008d27c10a154c7e4d7f/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Feh%2Fsimd-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a94d6f3b2227a0d31cb2008d27c10a154c7e4d7f/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Feh%2Fsimd-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Feh%2Fsimd-1.C?ref=a94d6f3b2227a0d31cb2008d27c10a154c7e4d7f", "patch": "@@ -1,8 +1,7 @@\n // Test EH when V2SI SIMD registers are involved.\n // Contributed by Aldy Hernandez (aldy@quesejoda.com).\n // { dg-options \"-O\" }\n-// { dg-options \"-O -w\" { target i?86-*-* } }\n-// { dg-options \"-O -w\" { target { x86_64-*-* && ilp32 } } }\n+// { dg-options \"-O -w\" { target { { i?86-*-* x86_64-*-* } && ilp32 } } }\n // { dg-do run }\n \n typedef int __attribute__((vector_size (8))) vecint;"}, {"sha": "813930faebae13afebffdc85f8f61fa7ba639617", "filename": "gcc/testsuite/g++.dg/eh/simd-2.C", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a94d6f3b2227a0d31cb2008d27c10a154c7e4d7f/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Feh%2Fsimd-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a94d6f3b2227a0d31cb2008d27c10a154c7e4d7f/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Feh%2Fsimd-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Feh%2Fsimd-2.C?ref=a94d6f3b2227a0d31cb2008d27c10a154c7e4d7f", "patch": "@@ -1,8 +1,7 @@\n // Test EH when V4SI SIMD registers are involved.\n // Contributed by Aldy Hernandez (aldy@quesejoda.com).\n // { dg-options \"-O\" }\n-// { dg-options \"-O -w\" { target i?86-*-* } }\n-// { dg-options \"-O -w\" { target { x86_64-*-* && ilp32 } } }\n+// { dg-options \"-O -w\" { target { { i?86-*-* x86_64-*-* } && ilp32 } } }\n // { dg-options \"-O -w -maltivec\" { target powerpc*-*-linux* } }\n // { dg-xfail-if \"\" { \"powerpc-*-eabispe*\" \"powerpc-ibm-aix*\" } { \"*\" } { \"\" } }\n // { dg-do run }"}, {"sha": "10bc54ccd95ded0650ed5a67a20d5ce225624b5b", "filename": "gcc/testsuite/g++.dg/opt/inline9.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a94d6f3b2227a0d31cb2008d27c10a154c7e4d7f/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Finline9.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a94d6f3b2227a0d31cb2008d27c10a154c7e4d7f/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Finline9.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Finline9.C?ref=a94d6f3b2227a0d31cb2008d27c10a154c7e4d7f", "patch": "@@ -3,7 +3,7 @@\n // Testcase by Alan Modra <amodra@bigpond.net.au>\n // { dg-do run }\n // { dg-options \"-O\" }\n-// { dg-options \"-O -mtune=i686\" { target i?86-*-* } }\n+// { dg-options \"-O -mtune=i686\" { target { { i?86-*-* x86_64-*-* } && ilp32 } } }\n \n struct thread_info\n {"}, {"sha": "7314ec000ef2aedf85c33a6d12a343cbd501590c", "filename": "gcc/testsuite/gcc.dg/20020418-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a94d6f3b2227a0d31cb2008d27c10a154c7e4d7f/gcc%2Ftestsuite%2Fgcc.dg%2F20020418-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a94d6f3b2227a0d31cb2008d27c10a154c7e4d7f/gcc%2Ftestsuite%2Fgcc.dg%2F20020418-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2F20020418-1.c?ref=a94d6f3b2227a0d31cb2008d27c10a154c7e4d7f", "patch": "@@ -1,7 +1,7 @@\n /* PR optimization/5887 */\n /* { dg-do compile } */\n /* { dg-options \"-O2\" } */\n-/* { dg-options \"-O2 -msse -ffast-math\" { target i?86-*-* } } */\n+/* { dg-options \"-O2 -msse -ffast-math\" { target i?86-*-* x86_64-*-* } } */\n \n void bar (float *a, float *b);\n "}, {"sha": "5a02a704a26f7c6c9d2c0c829293bce2208023ef", "filename": "gcc/testsuite/gcc.dg/20031102-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a94d6f3b2227a0d31cb2008d27c10a154c7e4d7f/gcc%2Ftestsuite%2Fgcc.dg%2F20031102-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a94d6f3b2227a0d31cb2008d27c10a154c7e4d7f/gcc%2Ftestsuite%2Fgcc.dg%2F20031102-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2F20031102-1.c?ref=a94d6f3b2227a0d31cb2008d27c10a154c7e4d7f", "patch": "@@ -3,7 +3,7 @@\n \n /* { dg-do run } */\n /* { dg-options \"-O2\" } */\n-/* { dg-options \"-O2 -march=i686\" { target i686-*-* } } */\n+/* { dg-options \"-O2 -march=i686\" { target { { i686-*-* x86_64-*-* } && ilp32 } } } */\n \n /* Verify that reload_cse_move2add doesn't add unexpected CLOBBERs. */\n "}, {"sha": "af1411c81a88042a4b40df51e2ea4b83d616eeb5", "filename": "gcc/testsuite/gcc.dg/ia64-sync-1.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a94d6f3b2227a0d31cb2008d27c10a154c7e4d7f/gcc%2Ftestsuite%2Fgcc.dg%2Fia64-sync-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a94d6f3b2227a0d31cb2008d27c10a154c7e4d7f/gcc%2Ftestsuite%2Fgcc.dg%2Fia64-sync-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fia64-sync-1.c?ref=a94d6f3b2227a0d31cb2008d27c10a154c7e4d7f", "patch": "@@ -1,8 +1,7 @@\n /* { dg-do run } */\n /* { dg-require-effective-target sync_int_long } */\n /* { dg-options } */\n-/* { dg-options \"-march=i486\" { target i?86-*-* } } */\n-/* { dg-options \"-march=i486\" { target { x86_64-*-* && ilp32 } } } */\n+/* { dg-options \"-march=i486\" { target { { i?86-*-* x86_64-*-* } && ilp32 } } } */\n \n /* Test basic functionality of the intrinsics.  The operations should\n    not be optimized away if no one checks the return values.  */"}, {"sha": "73e793f91c728db14347f7335461711927bdcf5a", "filename": "gcc/testsuite/gcc.dg/ia64-sync-2.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a94d6f3b2227a0d31cb2008d27c10a154c7e4d7f/gcc%2Ftestsuite%2Fgcc.dg%2Fia64-sync-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a94d6f3b2227a0d31cb2008d27c10a154c7e4d7f/gcc%2Ftestsuite%2Fgcc.dg%2Fia64-sync-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fia64-sync-2.c?ref=a94d6f3b2227a0d31cb2008d27c10a154c7e4d7f", "patch": "@@ -1,8 +1,7 @@\n /* { dg-do run } */\n /* { dg-require-effective-target sync_int_long } */\n /* { dg-options } */\n-/* { dg-options \"-march=i486\" { target i?86-*-* } } */\n-/* { dg-options \"-march=i486\" { target { x86_64-*-* && ilp32 } } } */\n+/* { dg-options \"-march=i486\" { target { { i?86-*-* x86_64-*-* } && ilp32 } } } */\n \n /* Test basic functionality of the intrinsics.  */\n "}, {"sha": "9e8d40c91687e9ac94d8eaf87fef12ae59238f86", "filename": "gcc/testsuite/gcc.dg/ia64-sync-3.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a94d6f3b2227a0d31cb2008d27c10a154c7e4d7f/gcc%2Ftestsuite%2Fgcc.dg%2Fia64-sync-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a94d6f3b2227a0d31cb2008d27c10a154c7e4d7f/gcc%2Ftestsuite%2Fgcc.dg%2Fia64-sync-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fia64-sync-3.c?ref=a94d6f3b2227a0d31cb2008d27c10a154c7e4d7f", "patch": "@@ -1,8 +1,7 @@\n /* { dg-do run } */\n /* { dg-require-effective-target sync_int_long } */\n /* { dg-options } */\n-/* { dg-options \"-march=i486\" { target i?86-*-* } } */\n-/* { dg-options \"-march=i486\" { target { x86_64-*-* && ilp32 } } } */\n+/* { dg-options \"-march=i486\" { target { { i?86-*-* x86_64-*-* } && ilp32 } } } */\n \n /* Test basic functionality of the intrinsics.  */\n "}, {"sha": "8cd3940a89c101bdae53f9dbb27bdde2f21b3939", "filename": "gcc/testsuite/gcc.dg/ia64-sync-4.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a94d6f3b2227a0d31cb2008d27c10a154c7e4d7f/gcc%2Ftestsuite%2Fgcc.dg%2Fia64-sync-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a94d6f3b2227a0d31cb2008d27c10a154c7e4d7f/gcc%2Ftestsuite%2Fgcc.dg%2Fia64-sync-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fia64-sync-4.c?ref=a94d6f3b2227a0d31cb2008d27c10a154c7e4d7f", "patch": "@@ -1,8 +1,7 @@\n /* { dg-do compile } */\n /* { dg-require-effective-target sync_int_long } */\n /* { dg-options \"-O2 -finline-functions\" } */\n-/* { dg-options \"-march=i486\" { target i?86-*-* } } */\n-/* { dg-options \"-march=i486\" { target { x86_64-*-* && ilp32 } } } */\n+/* { dg-options \"-march=i486\" { target { { i?86-*-* x86_64-*-* } && ilp32 } } } */\n \n /* Test inlining __sync_bool_compare_and_swap.  */\n "}, {"sha": "bdf6b3975a29fa78df6ad1f3bab8c9f46c8a6187", "filename": "gcc/testsuite/gcc.dg/ifcvt-fabs-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a94d6f3b2227a0d31cb2008d27c10a154c7e4d7f/gcc%2Ftestsuite%2Fgcc.dg%2Fifcvt-fabs-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a94d6f3b2227a0d31cb2008d27c10a154c7e4d7f/gcc%2Ftestsuite%2Fgcc.dg%2Fifcvt-fabs-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fifcvt-fabs-1.c?ref=a94d6f3b2227a0d31cb2008d27c10a154c7e4d7f", "patch": "@@ -1,6 +1,6 @@\n /* { dg-do run } */\n /* { dg-options \"-O\" } */\n-/* { dg-options \"-O -march=i686\" { target i686-*-* } } */\n+/* { dg-options \"-O -march=i686\" { target { { i686-*-* x86_64-*-* } && ilp32 } } } */\n \n extern void abort(void);\n "}, {"sha": "06428d92feb8e6778b60bb788d74c020c8835e27", "filename": "gcc/testsuite/gcc.dg/loop-3.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a94d6f3b2227a0d31cb2008d27c10a154c7e4d7f/gcc%2Ftestsuite%2Fgcc.dg%2Floop-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a94d6f3b2227a0d31cb2008d27c10a154c7e4d7f/gcc%2Ftestsuite%2Fgcc.dg%2Floop-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Floop-3.c?ref=a94d6f3b2227a0d31cb2008d27c10a154c7e4d7f", "patch": "@@ -3,7 +3,7 @@\n \n /* { dg-do compile } */\n /* { dg-options \"-O3\" } */\n-/* { dg-options \"-O3 -mtune=i386\" { target { i?86-*-* && ilp32 } } } */\n+/* { dg-options \"-O3 -mtune=i386\" { target { { i?86-*-* x86_64-*-* } && ilp32 } } } */\n \n #if defined(STACK_SIZE) && (STACK_SIZE < 65536)\n # define BYTEMEM_SIZE 10000L"}, {"sha": "89fdc88c6302b2282146b254a7c1a27295a3a7d9", "filename": "gcc/testsuite/gcc.dg/nested-calls-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a94d6f3b2227a0d31cb2008d27c10a154c7e4d7f/gcc%2Ftestsuite%2Fgcc.dg%2Fnested-calls-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a94d6f3b2227a0d31cb2008d27c10a154c7e4d7f/gcc%2Ftestsuite%2Fgcc.dg%2Fnested-calls-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fnested-calls-1.c?ref=a94d6f3b2227a0d31cb2008d27c10a154c7e4d7f", "patch": "@@ -3,7 +3,7 @@\n \n /* { dg-do run } */\n /* { dg-options \"-std=c99 -O -fno-inline\" } */\n-/* { dg-options \"-std=c99 -O -fno-inline -mtune=i686\" { target { i?86-*-* && ilp32 } } } */\n+/* { dg-options \"-std=c99 -O -fno-inline -mtune=i686\" { target { { i?86-*-* x86_64-*-* } && ilp32 } } } */\n \n #include <limits.h>\n "}, {"sha": "1fd6d586ec75e21651b1da86c70bb6fea8411b2d", "filename": "gcc/testsuite/gcc.dg/pr20017.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a94d6f3b2227a0d31cb2008d27c10a154c7e4d7f/gcc%2Ftestsuite%2Fgcc.dg%2Fpr20017.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a94d6f3b2227a0d31cb2008d27c10a154c7e4d7f/gcc%2Ftestsuite%2Fgcc.dg%2Fpr20017.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr20017.c?ref=a94d6f3b2227a0d31cb2008d27c10a154c7e4d7f", "patch": "@@ -6,7 +6,7 @@\n \n /* { dg-do compile } */\n /* { dg-options \"-O1\" } */\n-/* { dg-options \"-O1 -march=i386\" { target { i?86-*-* && ilp32 } } } */\n+/* { dg-options \"-O1 -march=i386\" { target { { i?86-*-* x86_64-*-* } && ilp32 } } } */\n \n int\n foo (int *buf, int *p)"}, {"sha": "8ff60de136281853c97b465036993d561ff31098", "filename": "gcc/testsuite/gcc.dg/smod-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a94d6f3b2227a0d31cb2008d27c10a154c7e4d7f/gcc%2Ftestsuite%2Fgcc.dg%2Fsmod-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a94d6f3b2227a0d31cb2008d27c10a154c7e4d7f/gcc%2Ftestsuite%2Fgcc.dg%2Fsmod-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fsmod-1.c?ref=a94d6f3b2227a0d31cb2008d27c10a154c7e4d7f", "patch": "@@ -3,7 +3,7 @@\n \n /* { dg-do run } */\n /* { dg-options \"-std=c99\" } */\n-/* { dg-options \"-std=c99 -mtune=i486\" { target { i?86-*-* && ilp32 } } } */\n+/* { dg-options \"-std=c99 -mtune=i486\" { target { { i?86-*-* x86_64-*-* } && ilp32 } } } */\n \n #include <limits.h>\n "}, {"sha": "ab2e27632a1fc02c627c06f0c0acdf5378d13eb4", "filename": "gcc/testsuite/gcc.dg/sync-2.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a94d6f3b2227a0d31cb2008d27c10a154c7e4d7f/gcc%2Ftestsuite%2Fgcc.dg%2Fsync-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a94d6f3b2227a0d31cb2008d27c10a154c7e4d7f/gcc%2Ftestsuite%2Fgcc.dg%2Fsync-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fsync-2.c?ref=a94d6f3b2227a0d31cb2008d27c10a154c7e4d7f", "patch": "@@ -1,7 +1,6 @@\n /* { dg-do run } */\n /* { dg-require-effective-target sync_char_short } */\n-/* { dg-options \"-march=i486\" { target i?86-*-* } } */\n-/* { dg-options \"-march=i486\" { target { x86_64-*-* && ilp32 } } } */\n+/* { dg-options \"-march=i486\" { target { { i?86-*-* x86_64-*-* } && ilp32 } } } */\n \n /* Test functionality of the intrinsics for 'short' and 'char'.  */\n "}, {"sha": "0bec5303c2828d0469187b15074e7f63a4299333", "filename": "gcc/testsuite/gcc.dg/tls/opt-3.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a94d6f3b2227a0d31cb2008d27c10a154c7e4d7f/gcc%2Ftestsuite%2Fgcc.dg%2Ftls%2Fopt-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a94d6f3b2227a0d31cb2008d27c10a154c7e4d7f/gcc%2Ftestsuite%2Fgcc.dg%2Ftls%2Fopt-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftls%2Fopt-3.c?ref=a94d6f3b2227a0d31cb2008d27c10a154c7e4d7f", "patch": "@@ -1,7 +1,8 @@\n /* { dg-do compile } */\n /* { dg-options \"-O2 -fpic\" } */\n-/* { dg-options \"-O2 -fpic -mregparm=3\" { target i?86-*-* } } */\n+/* { dg-options \"-O2 -fpic -mregparm=3\" { target i?86-*-* x86_64-*-* } } */\n /* { dg-require-effective-target tls } */\n+/* { dg-require-effective-target fpic } */\n \n extern __thread int i, j, k;\n extern void bar(int *, int *, int *);"}, {"sha": "7288a374576cb0495580b5743799fcb8e55dc587", "filename": "gcc/testsuite/gcc.dg/torture/badshift.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a94d6f3b2227a0d31cb2008d27c10a154c7e4d7f/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fbadshift.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a94d6f3b2227a0d31cb2008d27c10a154c7e4d7f/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fbadshift.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fbadshift.c?ref=a94d6f3b2227a0d31cb2008d27c10a154c7e4d7f", "patch": "@@ -2,7 +2,7 @@\n \n /* { dg-do run } */\n /* { dg-options \"\" } */\n-/* { dg-options \"-march=i386\" { target { i?86-*-* && ilp32 } } } */\n+/* { dg-options \"-march=i386\" { target { { i?86-*-* x86_64-*-* } && ilp32 } } } */\n \n /* We used to optimize the DImode shift-by-32 to zero because in combine\n    we turned:"}]}