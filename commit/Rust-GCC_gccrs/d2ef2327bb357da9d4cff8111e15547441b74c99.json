{"sha": "d2ef2327bb357da9d4cff8111e15547441b74c99", "node_id": "C_kwDOANBUbNoAKGQyZWYyMzI3YmIzNTdkYTlkNGNmZjgxMTFlMTU1NDc0NDFiNzRjOTk", "commit": {"author": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2022-12-20T00:17:00Z"}, "committer": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2022-12-20T00:17:00Z"}, "message": "Daily bump.", "tree": {"sha": "e0dc7595b9932d0a4fc7a190d902447ca5c25e38", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e0dc7595b9932d0a4fc7a190d902447ca5c25e38"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d2ef2327bb357da9d4cff8111e15547441b74c99", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d2ef2327bb357da9d4cff8111e15547441b74c99", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d2ef2327bb357da9d4cff8111e15547441b74c99", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d2ef2327bb357da9d4cff8111e15547441b74c99/comments", "author": null, "committer": null, "parents": [{"sha": "1e007fa5c92ae2d6b64854a6faad7e85b43d64f2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1e007fa5c92ae2d6b64854a6faad7e85b43d64f2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1e007fa5c92ae2d6b64854a6faad7e85b43d64f2"}], "stats": {"total": 524, "additions": 523, "deletions": 1}, "files": [{"sha": "f70333f344452fd0ab5a74721bc8bc3dabc51b47", "filename": "contrib/ChangeLog", "status": "modified", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2ef2327bb357da9d4cff8111e15547441b74c99/contrib%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2ef2327bb357da9d4cff8111e15547441b74c99/contrib%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2FChangeLog?ref=d2ef2327bb357da9d4cff8111e15547441b74c99", "patch": "@@ -1,3 +1,34 @@\n+2022-12-19  Martin Liska  <mliska@suse.cz>\n+\n+\t* gcc-changelog/git_commit.py: Support digits in PR's\n+\tcomponent in subject.\n+\n+2022-12-19  Martin Liska  <mliska@suse.cz>\n+\n+\t* gcc-changelog/test_email.py: Add new test.\n+\t* gcc-changelog/test_patches.txt: Add new patch.\n+\n+2022-12-19  Martin Liska  <mliska@suse.cz>\n+\n+\t* gcc-changelog/git_commit.py: Allow digit in component name.\n+\n+2022-12-19  Tobias Burnus  <tobias@codesourcery.com>\n+\n+\t* gcc-changelog/git_check_commit.py (__main__): With -v print a\n+\twarning for the auto-added files.\n+\t* gcc-changelog/git_commit.py (GitCommit.__init__): Add self.warnings.\n+\t(GitCommit.check_mentioned_files): Add warning for auto-added files.\n+\t(GitCommit.print_warnings): New function.\n+\t* gcc-changelog/git_email.py (__main__): Remove bogus argument to\n+\tGitEmail constructor; print auto-added-files warning.\n+\t* gcc-changelog/test_email.py (test_auto_add_file_1,\n+\ttest_auto_add_file_2): New tests.\n+\t* gcc-changelog/test_patches.txt: Add two test cases.\n+\n+2022-12-19  Martin Liska  <mliska@suse.cz>\n+\n+\t* gcc-changelog/setup.cfg: Do not use flake8 pytest plug-in.\n+\n 2022-12-16  Martin Liska  <mliska@suse.cz>\n \n \t* filter-clang-warnings.py: Print each warning only one time."}, {"sha": "bc11164bcc856c89c4822e7c21bf8b3f25c57678", "filename": "gcc/ChangeLog", "status": "modified", "additions": 93, "deletions": 0, "changes": 93, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2ef2327bb357da9d4cff8111e15547441b74c99/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2ef2327bb357da9d4cff8111e15547441b74c99/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d2ef2327bb357da9d4cff8111e15547441b74c99", "patch": "@@ -1,3 +1,96 @@\n+2022-12-19  Jason Merrill  <jason@redhat.com>\n+\n+\t* sort.cc: Disable -Wconditionally-supported in\n+\tCHECKING_P code.\n+\n+2022-12-19  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/64867\n+\t* configure.ac (strict_warn): Add -Wconditionally-supported.\n+\t* configure: Regenerate.\n+\n+2022-12-19  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/108164\n+\t* tree-vect-loop-manip.cc (vect_update_ivs_after_vectorizer):\n+\tPerform vect_step_op_add update in the appropriate type.\n+\n+2022-12-19  Richard Earnshaw  <rearnsha@arm.com>\n+\n+\t* config/arm/arm-c.cc (__ARM_FEATURE_CLZ): Fix definition of\n+\tpreprocessor macro when target has CLZ in another ISA.\n+\n+2022-12-19  Ju-Zhe Zhong  <juzhe.zhong@rivai.ai>\n+\n+\t* config/riscv/vector.md: Remove vste.\n+\n+2022-12-19  Ju-Zhe Zhong  <juzhe.zhong@rivai.ai>\n+\n+\t* config.gcc: Add riscv-vsetvl.o.\n+\t* config/riscv/riscv-passes.def (INSERT_PASS_BEFORE): Add VSETVL PASS\n+\tlocation.\n+\t* config/riscv/riscv-protos.h (make_pass_vsetvl): New function.\n+\t(enum avl_type): New enum.\n+\t(get_ta): New function.\n+\t(get_ma): Ditto.\n+\t(get_avl_type): Ditto.\n+\t(calculate_ratio): Ditto.\n+\t(enum tail_policy): New enum.\n+\t(enum mask_policy): Ditto.\n+\t* config/riscv/riscv-v.cc (calculate_ratio): New function.\n+\t(emit_pred_op): change the VLMAX mov codgen.\n+\t(get_ta): New function.\n+\t(get_ma): Ditto.\n+\t(enum tail_policy): Change enum.\n+\t(get_prefer_tail_policy): New function.\n+\t(enum mask_policy): Change enum.\n+\t(get_prefer_mask_policy): New function.\n+\t* config/riscv/t-riscv: Add riscv-vsetvl.o\n+\t* config/riscv/vector.md: Adjust attribute and pattern for VSETVL\n+\tPASS.\n+\t(@vlmax_avl<mode>): Ditto.\n+\t(@vsetvl<mode>_no_side_effects): Delete.\n+\t(vsetvl_vtype_change_only): New MD pattern.\n+\t(@vsetvl_discard_result<mode>): Ditto.\n+\t* config/riscv/riscv-vsetvl.cc: New file.\n+\t* config/riscv/riscv-vsetvl.h: New file.\n+\n+2022-12-19  Ju-Zhe Zhong  <juzhe.zhong@rivai.ai>\n+\n+\t* config/riscv/riscv-vector-switch.def (ENTRY): Correct attributes.\n+\n+2022-12-19  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n+\n+\tPR target/108140\n+\t* config/aarch64/aarch64-builtins.cc\n+\t(aarch64_expand_builtin_data_intrinsic): Handle NULL target.\n+\n+2022-12-19  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* config/gnu-user.h (LIBHWASAN_EARLY_SPEC): Add libhwasan_preinit.o\n+\tto link spec if not -shared.\n+\n+2022-12-19  Ju-Zhe Zhong  <juzhe.zhong@rivai.ai>\n+\n+\t* config/riscv/riscv-v.cc (emit_vlmax_vsetvl): Pass through VLMUL enum\n+\tinstead of machine mode.\n+\t* config/riscv/riscv-vector-builtins-bases.cc: Ditto.\n+\t* config/riscv/riscv.cc (riscv_print_operand): Print LMUL by enum vlmul\n+\tinstead of machine mode.\n+\n+2022-12-19  Jiufu Guo  <guojiufu@linux.ibm.com>\n+\n+\tPR target/106708\n+\t* config/rs6000/rs6000.cc (rs6000_emit_set_long_const): Add using\n+\t\"li; x?oris\" to build constant.\n+\n+2022-12-19  liuhongt  <hongtao.liu@intel.com>\n+\n+\tPR target/55522\n+\t* config/i386/gnu-user-common.h (GNU_USER_TARGET_MATHFILE_SPEC):\n+\tDon't add crtfastmath.o for -shared.\n+\t* doc/invoke.texi (-shared): Add related documentation.\n+\n 2022-12-18  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n \n \t* config.gcc: Determine Solaris minor version."}, {"sha": "142f05d435412b82322863ab7f1b5fbc25203433", "filename": "gcc/DATESTAMP", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2ef2327bb357da9d4cff8111e15547441b74c99/gcc%2FDATESTAMP", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2ef2327bb357da9d4cff8111e15547441b74c99/gcc%2FDATESTAMP", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FDATESTAMP?ref=d2ef2327bb357da9d4cff8111e15547441b74c99", "patch": "@@ -1 +1 @@\n-20221219\n+20221220"}, {"sha": "da43a2542ed59b62845a75367c1f0224ab636911", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2ef2327bb357da9d4cff8111e15547441b74c99/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2ef2327bb357da9d4cff8111e15547441b74c99/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=d2ef2327bb357da9d4cff8111e15547441b74c99", "patch": "@@ -1,3 +1,8 @@\n+2022-12-19  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c/98487\n+\t* c-format.cc (check_function_format): Use get_attribute_name.\n+\n 2022-12-16  Qing Zhao  <qing.zhao@oracle.com>\n \n \t* c.opt (Wstrict-flex-arrays): New option."}, {"sha": "62e484f45b49c6dda945f6c22108dd3e33315fb0", "filename": "gcc/c/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2ef2327bb357da9d4cff8111e15547441b74c99/gcc%2Fc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2ef2327bb357da9d4cff8111e15547441b74c99/gcc%2Fc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2FChangeLog?ref=d2ef2327bb357da9d4cff8111e15547441b74c99", "patch": "@@ -1,3 +1,9 @@\n+2022-12-19  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c/108043\n+\t* c-parser.cc (c_parser_postfix_expression_after_paren_type): Diagnose\n+\tcompound literals with function type.\n+\n 2022-12-07  Joseph Myers  <joseph@codesourcery.com>\n \n \t* c-decl.cc (declspecs_add_type, declspecs_add_scspec): Check for"}, {"sha": "73f1c54dec71c1fdd48b2362699cc86fd486407b", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2ef2327bb357da9d4cff8111e15547441b74c99/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2ef2327bb357da9d4cff8111e15547441b74c99/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=d2ef2327bb357da9d4cff8111e15547441b74c99", "patch": "@@ -1,3 +1,37 @@\n+2022-12-19  Patrick Palka  <ppalka@redhat.com>\n+\n+\tPR c++/100881\n+\t* constexpr.cc (cxx_eval_builtin_function_call): Adjust calls\n+\tto fold_builtin_source_location.\n+\t* cp-gimplify.cc (cp_gimplify_expr): Likewise.\n+\t(cp_fold): Likewise.\n+\t(get_source_location_impl_type): Remove location_t parameter and\n+\tadjust accordingly.  No longer static.\n+\t(fold_builtin_source_location): Take a CALL_EXPR tree instead of a\n+\tlocation and obtain the impl type from its return type.\n+\t* cp-tree.h (enum cp_tree_index): Remove CPTI_SOURCE_LOCATION_IMPL\n+\tenumerator.\n+\t(source_location_impl): Remove.\n+\t(fold_builtin_source_location): Adjust parameter type.\n+\t(get_source_location_impl_type): Declare.\n+\t* decl.cc (cxx_init_decl_processing): Declare\n+\t__builtin_source_location with auto return type instead of\n+\tconst void*.\n+\t(require_deduced_type): Update the return type of\n+\t__builtin_source_location.\n+\n+2022-12-19  Patrick Palka  <ppalka@redhat.com>\n+\n+\tPR c++/101886\n+\t* pt.cc (extract_autos_r): Recompute TYPE_CANONICAL after\n+\tadjusting the template type parameter's index.  Simplify\n+\tby using TEMPLATE_TYPE_IDX.  Add some sanity checks.\n+\n+2022-12-19  Arsen Arsenovi\u0107  <arsen@aarsen.me>\n+\n+\t* contracts.cc: Rename references to\n+\tcontract_violation_continuation_mode constants to be lowercase.\n+\n 2022-12-17  Patrick Palka  <ppalka@redhat.com>\n \n \tPR c++/107437"}, {"sha": "6ed8eb69032b912fb4e293ba80e04d270d6f5d97", "filename": "gcc/m2/ChangeLog", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2ef2327bb357da9d4cff8111e15547441b74c99/gcc%2Fm2%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2ef2327bb357da9d4cff8111e15547441b74c99/gcc%2Fm2%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2FChangeLog?ref=d2ef2327bb357da9d4cff8111e15547441b74c99", "patch": "@@ -1,3 +1,25 @@\n+2022-12-19  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* gm2-gcc/m2linemap.cc (m2linemap_ErrorAt, m2linemap_ErrorAtf,\n+\tm2linemap_WarningAtf, m2linemap_NoteAtf, m2linemap_internal_error):\n+\tCall functions with \"%s\", message rather than just message, so that\n+\t% chars in message aren't treated as format specifiers.\n+\n+2022-12-19  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR modula2/108147\n+\t* gm2-gcc/m2linemap.def (ErrorAtf, WarningAtf, NoteAtf):\n+\tComment out prototypes with varargs.\n+\t* gm2-gcc/m2linemap.h (m2linemap_ErrorAtf, m2linemap_WarningAtf,\n+\tm2linemap_NoteAtf): No longer varargs.\n+\t* gm2-gcc/m2linemap.cc (m2linemap_ErrorAtf): Turned into a\n+\tnon-varargs wrapper around ...\n+\t(m2linemap_ErrorAtf_1): ... this.  New static function.\n+\t(m2linemap_WarningAtf): Turned into a non-varargs wrapper around ...\n+\t(m2linemap_WarningAtf_1): ... this.  New static function.\n+\t(m2linemap_NoteAtf): Turned into a non-varargs wrapper around ...\n+\t(m2linemap_NoteAtf_1): ... this.  New static function.\n+\n 2022-12-15  Gaius Mulley  <gaiusmod2@gmail.com>\n \n \t* configure.ac: Stop probing for realpath."}, {"sha": "fdb864b0ccac26bb6ec9c97d8767bb30581d68dd", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 318, "deletions": 0, "changes": 318, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2ef2327bb357da9d4cff8111e15547441b74c99/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2ef2327bb357da9d4cff8111e15547441b74c99/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=d2ef2327bb357da9d4cff8111e15547441b74c99", "patch": "@@ -1,3 +1,321 @@\n+2022-12-19  Patrick Palka  <ppalka@redhat.com>\n+\n+\tPR c++/100881\n+\t* g++.dg/cpp2a/srcloc3.C: Adjust expected note s/evaluating/using.\n+\t* g++.dg/cpp2a/srcloc4.C: Likewise.\n+\t* g++.dg/cpp2a/srcloc5.C: Likewise.\n+\t* g++.dg/cpp2a/srcloc6.C: Likewise.\n+\t* g++.dg/cpp2a/srcloc7.C: Likewise.\n+\t* g++.dg/cpp2a/srcloc8.C: Likewise.\n+\t* g++.dg/cpp2a/srcloc9.C: Likewise.\n+\t* g++.dg/cpp2a/srcloc10.C: Likewise.\n+\t* g++.dg/cpp2a/srcloc11.C: Likewise.\n+\t* g++.dg/cpp2a/srcloc12.C: Likewise.\n+\t* g++.dg/cpp2a/srcloc13.C: Likewise.\n+\t* g++.dg/modules/pr100881_a.C: New test.\n+\t* g++.dg/modules/pr100881_b.C: New test.\n+\n+2022-12-19  Patrick Palka  <ppalka@redhat.com>\n+\n+\tPR c++/101886\n+\t* g++.dg/concepts/auto5.C: New test.\n+\n+2022-12-19  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c/108043\n+\t* gcc.dg/pr108043.c: New test.\n+\t* gcc.dg/c99-complit-2.c (foo): Adjust expected diagnostics for\n+\tcomplit with function type.\n+\n+2022-12-19  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c/98487\n+\t* c-c++-common/Wsuggest-attribute-1.c: New test.\n+\n+2022-12-19  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/108164\n+\t* gcc.dg/pr108164.c: New testcase.\n+\n+2022-12-19  Ju-Zhe Zhong  <juzhe.zhong@rivai.ai>\n+\n+\t* gcc.target/riscv/rvv/vsetvl/vlmax_back_prop-1.c: New test.\n+\t* gcc.target/riscv/rvv/vsetvl/vlmax_back_prop-10.c: New test.\n+\t* gcc.target/riscv/rvv/vsetvl/vlmax_back_prop-11.c: New test.\n+\t* gcc.target/riscv/rvv/vsetvl/vlmax_back_prop-12.c: New test.\n+\t* gcc.target/riscv/rvv/vsetvl/vlmax_back_prop-13.c: New test.\n+\t* gcc.target/riscv/rvv/vsetvl/vlmax_back_prop-14.c: New test.\n+\t* gcc.target/riscv/rvv/vsetvl/vlmax_back_prop-15.c: New test.\n+\t* gcc.target/riscv/rvv/vsetvl/vlmax_back_prop-16.c: New test.\n+\t* gcc.target/riscv/rvv/vsetvl/vlmax_back_prop-17.c: New test.\n+\t* gcc.target/riscv/rvv/vsetvl/vlmax_back_prop-18.c: New test.\n+\t* gcc.target/riscv/rvv/vsetvl/vlmax_back_prop-19.c: New test.\n+\t* gcc.target/riscv/rvv/vsetvl/vlmax_back_prop-2.c: New test.\n+\t* gcc.target/riscv/rvv/vsetvl/vlmax_back_prop-20.c: New test.\n+\t* gcc.target/riscv/rvv/vsetvl/vlmax_back_prop-21.c: New test.\n+\t* gcc.target/riscv/rvv/vsetvl/vlmax_back_prop-22.c: New test.\n+\t* gcc.target/riscv/rvv/vsetvl/vlmax_back_prop-23.c: New test.\n+\t* gcc.target/riscv/rvv/vsetvl/vlmax_back_prop-24.c: New test.\n+\t* gcc.target/riscv/rvv/vsetvl/vlmax_back_prop-25.c: New test.\n+\t* gcc.target/riscv/rvv/vsetvl/vlmax_back_prop-26.c: New test.\n+\t* gcc.target/riscv/rvv/vsetvl/vlmax_back_prop-27.c: New test.\n+\t* gcc.target/riscv/rvv/vsetvl/vlmax_back_prop-28.c: New test.\n+\t* gcc.target/riscv/rvv/vsetvl/vlmax_back_prop-29.c: New test.\n+\t* gcc.target/riscv/rvv/vsetvl/vlmax_back_prop-3.c: New test.\n+\t* gcc.target/riscv/rvv/vsetvl/vlmax_back_prop-30.c: New test.\n+\t* gcc.target/riscv/rvv/vsetvl/vlmax_back_prop-31.c: New test.\n+\t* gcc.target/riscv/rvv/vsetvl/vlmax_back_prop-32.c: New test.\n+\t* gcc.target/riscv/rvv/vsetvl/vlmax_back_prop-33.c: New test.\n+\t* gcc.target/riscv/rvv/vsetvl/vlmax_back_prop-34.c: New test.\n+\t* gcc.target/riscv/rvv/vsetvl/vlmax_back_prop-35.c: New test.\n+\t* gcc.target/riscv/rvv/vsetvl/vlmax_back_prop-36.c: New test.\n+\t* gcc.target/riscv/rvv/vsetvl/vlmax_back_prop-37.c: New test.\n+\t* gcc.target/riscv/rvv/vsetvl/vlmax_back_prop-38.c: New test.\n+\t* gcc.target/riscv/rvv/vsetvl/vlmax_back_prop-39.c: New test.\n+\t* gcc.target/riscv/rvv/vsetvl/vlmax_back_prop-4.c: New test.\n+\t* gcc.target/riscv/rvv/vsetvl/vlmax_back_prop-40.c: New test.\n+\t* gcc.target/riscv/rvv/vsetvl/vlmax_back_prop-41.c: New test.\n+\t* gcc.target/riscv/rvv/vsetvl/vlmax_back_prop-42.c: New test.\n+\t* gcc.target/riscv/rvv/vsetvl/vlmax_back_prop-43.c: New test.\n+\t* gcc.target/riscv/rvv/vsetvl/vlmax_back_prop-44.c: New test.\n+\t* gcc.target/riscv/rvv/vsetvl/vlmax_back_prop-45.c: New test.\n+\t* gcc.target/riscv/rvv/vsetvl/vlmax_back_prop-46.c: New test.\n+\t* gcc.target/riscv/rvv/vsetvl/vlmax_back_prop-5.c: New test.\n+\t* gcc.target/riscv/rvv/vsetvl/vlmax_back_prop-6.c: New test.\n+\t* gcc.target/riscv/rvv/vsetvl/vlmax_back_prop-7.c: New test.\n+\t* gcc.target/riscv/rvv/vsetvl/vlmax_back_prop-8.c: New test.\n+\t* gcc.target/riscv/rvv/vsetvl/vlmax_back_prop-9.c: New test.\n+\n+2022-12-19  Ju-Zhe Zhong  <juzhe.zhong@rivai.ai>\n+\n+\t* gcc.target/riscv/rvv/vsetvl/vlmax_bb_prop-1.c: New test.\n+\t* gcc.target/riscv/rvv/vsetvl/vlmax_bb_prop-10.c: New test.\n+\t* gcc.target/riscv/rvv/vsetvl/vlmax_bb_prop-11.c: New test.\n+\t* gcc.target/riscv/rvv/vsetvl/vlmax_bb_prop-12.c: New test.\n+\t* gcc.target/riscv/rvv/vsetvl/vlmax_bb_prop-13.c: New test.\n+\t* gcc.target/riscv/rvv/vsetvl/vlmax_bb_prop-14.c: New test.\n+\t* gcc.target/riscv/rvv/vsetvl/vlmax_bb_prop-15.c: New test.\n+\t* gcc.target/riscv/rvv/vsetvl/vlmax_bb_prop-16.c: New test.\n+\t* gcc.target/riscv/rvv/vsetvl/vlmax_bb_prop-17.c: New test.\n+\t* gcc.target/riscv/rvv/vsetvl/vlmax_bb_prop-18.c: New test.\n+\t* gcc.target/riscv/rvv/vsetvl/vlmax_bb_prop-19.c: New test.\n+\t* gcc.target/riscv/rvv/vsetvl/vlmax_bb_prop-2.c: New test.\n+\t* gcc.target/riscv/rvv/vsetvl/vlmax_bb_prop-20.c: New test.\n+\t* gcc.target/riscv/rvv/vsetvl/vlmax_bb_prop-21.c: New test.\n+\t* gcc.target/riscv/rvv/vsetvl/vlmax_bb_prop-22.c: New test.\n+\t* gcc.target/riscv/rvv/vsetvl/vlmax_bb_prop-23.c: New test.\n+\t* gcc.target/riscv/rvv/vsetvl/vlmax_bb_prop-24.c: New test.\n+\t* gcc.target/riscv/rvv/vsetvl/vlmax_bb_prop-25.c: New test.\n+\t* gcc.target/riscv/rvv/vsetvl/vlmax_bb_prop-26.c: New test.\n+\t* gcc.target/riscv/rvv/vsetvl/vlmax_bb_prop-27.c: New test.\n+\t* gcc.target/riscv/rvv/vsetvl/vlmax_bb_prop-28.c: New test.\n+\t* gcc.target/riscv/rvv/vsetvl/vlmax_bb_prop-3.c: New test.\n+\t* gcc.target/riscv/rvv/vsetvl/vlmax_bb_prop-4.c: New test.\n+\t* gcc.target/riscv/rvv/vsetvl/vlmax_bb_prop-5.c: New test.\n+\t* gcc.target/riscv/rvv/vsetvl/vlmax_bb_prop-6.c: New test.\n+\t* gcc.target/riscv/rvv/vsetvl/vlmax_bb_prop-7.c: New test.\n+\t* gcc.target/riscv/rvv/vsetvl/vlmax_bb_prop-8.c: New test.\n+\t* gcc.target/riscv/rvv/vsetvl/vlmax_bb_prop-9.c: New test.\n+\t* gcc.target/riscv/rvv/vsetvl/vlmax_call-1.c: New test.\n+\t* gcc.target/riscv/rvv/vsetvl/vlmax_call-2.c: New test.\n+\t* gcc.target/riscv/rvv/vsetvl/vlmax_call-3.c: New test.\n+\t* gcc.target/riscv/rvv/vsetvl/vlmax_call-4.c: New test.\n+\t* gcc.target/riscv/rvv/vsetvl/vlmax_complex_loop-1.c: New test.\n+\t* gcc.target/riscv/rvv/vsetvl/vlmax_complex_loop-2.c: New test.\n+\t* gcc.target/riscv/rvv/vsetvl/vlmax_conflict-1.c: New test.\n+\t* gcc.target/riscv/rvv/vsetvl/vlmax_conflict-10.c: New test.\n+\t* gcc.target/riscv/rvv/vsetvl/vlmax_conflict-11.c: New test.\n+\t* gcc.target/riscv/rvv/vsetvl/vlmax_conflict-12.c: New test.\n+\t* gcc.target/riscv/rvv/vsetvl/vlmax_conflict-2.c: New test.\n+\t* gcc.target/riscv/rvv/vsetvl/vlmax_conflict-3.c: New test.\n+\t* gcc.target/riscv/rvv/vsetvl/vlmax_conflict-4.c: New test.\n+\t* gcc.target/riscv/rvv/vsetvl/vlmax_conflict-5.c: New test.\n+\t* gcc.target/riscv/rvv/vsetvl/vlmax_conflict-6.c: New test.\n+\t* gcc.target/riscv/rvv/vsetvl/vlmax_conflict-7.c: New test.\n+\t* gcc.target/riscv/rvv/vsetvl/vlmax_conflict-8.c: New test.\n+\t* gcc.target/riscv/rvv/vsetvl/vlmax_conflict-9.c: New test.\n+\n+2022-12-19  Ju-Zhe Zhong  <juzhe.zhong@rivai.ai>\n+\n+\t* gcc.target/riscv/rvv/vsetvl/vlmax_miss_default-1.c: New test.\n+\t* gcc.target/riscv/rvv/vsetvl/vlmax_miss_default-10.c: New test.\n+\t* gcc.target/riscv/rvv/vsetvl/vlmax_miss_default-11.c: New test.\n+\t* gcc.target/riscv/rvv/vsetvl/vlmax_miss_default-12.c: New test.\n+\t* gcc.target/riscv/rvv/vsetvl/vlmax_miss_default-13.c: New test.\n+\t* gcc.target/riscv/rvv/vsetvl/vlmax_miss_default-14.c: New test.\n+\t* gcc.target/riscv/rvv/vsetvl/vlmax_miss_default-15.c: New test.\n+\t* gcc.target/riscv/rvv/vsetvl/vlmax_miss_default-16.c: New test.\n+\t* gcc.target/riscv/rvv/vsetvl/vlmax_miss_default-17.c: New test.\n+\t* gcc.target/riscv/rvv/vsetvl/vlmax_miss_default-18.c: New test.\n+\t* gcc.target/riscv/rvv/vsetvl/vlmax_miss_default-19.c: New test.\n+\t* gcc.target/riscv/rvv/vsetvl/vlmax_miss_default-2.c: New test.\n+\t* gcc.target/riscv/rvv/vsetvl/vlmax_miss_default-20.c: New test.\n+\t* gcc.target/riscv/rvv/vsetvl/vlmax_miss_default-21.c: New test.\n+\t* gcc.target/riscv/rvv/vsetvl/vlmax_miss_default-22.c: New test.\n+\t* gcc.target/riscv/rvv/vsetvl/vlmax_miss_default-23.c: New test.\n+\t* gcc.target/riscv/rvv/vsetvl/vlmax_miss_default-24.c: New test.\n+\t* gcc.target/riscv/rvv/vsetvl/vlmax_miss_default-25.c: New test.\n+\t* gcc.target/riscv/rvv/vsetvl/vlmax_miss_default-26.c: New test.\n+\t* gcc.target/riscv/rvv/vsetvl/vlmax_miss_default-27.c: New test.\n+\t* gcc.target/riscv/rvv/vsetvl/vlmax_miss_default-28.c: New test.\n+\t* gcc.target/riscv/rvv/vsetvl/vlmax_miss_default-3.c: New test.\n+\t* gcc.target/riscv/rvv/vsetvl/vlmax_miss_default-4.c: New test.\n+\t* gcc.target/riscv/rvv/vsetvl/vlmax_miss_default-5.c: New test.\n+\t* gcc.target/riscv/rvv/vsetvl/vlmax_miss_default-6.c: New test.\n+\t* gcc.target/riscv/rvv/vsetvl/vlmax_miss_default-7.c: New test.\n+\t* gcc.target/riscv/rvv/vsetvl/vlmax_miss_default-8.c: New test.\n+\t* gcc.target/riscv/rvv/vsetvl/vlmax_miss_default-9.c: New test.\n+\n+2022-12-19  Ju-Zhe Zhong  <juzhe.zhong@rivai.ai>\n+\n+\t* gcc.target/riscv/rvv/vsetvl/vlmax_phi-1.c: New test.\n+\t* gcc.target/riscv/rvv/vsetvl/vlmax_phi-10.c: New test.\n+\t* gcc.target/riscv/rvv/vsetvl/vlmax_phi-11.c: New test.\n+\t* gcc.target/riscv/rvv/vsetvl/vlmax_phi-12.c: New test.\n+\t* gcc.target/riscv/rvv/vsetvl/vlmax_phi-13.c: New test.\n+\t* gcc.target/riscv/rvv/vsetvl/vlmax_phi-14.c: New test.\n+\t* gcc.target/riscv/rvv/vsetvl/vlmax_phi-15.c: New test.\n+\t* gcc.target/riscv/rvv/vsetvl/vlmax_phi-16.c: New test.\n+\t* gcc.target/riscv/rvv/vsetvl/vlmax_phi-17.c: New test.\n+\t* gcc.target/riscv/rvv/vsetvl/vlmax_phi-18.c: New test.\n+\t* gcc.target/riscv/rvv/vsetvl/vlmax_phi-19.c: New test.\n+\t* gcc.target/riscv/rvv/vsetvl/vlmax_phi-2.c: New test.\n+\t* gcc.target/riscv/rvv/vsetvl/vlmax_phi-20.c: New test.\n+\t* gcc.target/riscv/rvv/vsetvl/vlmax_phi-21.c: New test.\n+\t* gcc.target/riscv/rvv/vsetvl/vlmax_phi-22.c: New test.\n+\t* gcc.target/riscv/rvv/vsetvl/vlmax_phi-23.c: New test.\n+\t* gcc.target/riscv/rvv/vsetvl/vlmax_phi-24.c: New test.\n+\t* gcc.target/riscv/rvv/vsetvl/vlmax_phi-25.c: New test.\n+\t* gcc.target/riscv/rvv/vsetvl/vlmax_phi-26.c: New test.\n+\t* gcc.target/riscv/rvv/vsetvl/vlmax_phi-27.c: New test.\n+\t* gcc.target/riscv/rvv/vsetvl/vlmax_phi-28.c: New test.\n+\t* gcc.target/riscv/rvv/vsetvl/vlmax_phi-3.c: New test.\n+\t* gcc.target/riscv/rvv/vsetvl/vlmax_phi-4.c: New test.\n+\t* gcc.target/riscv/rvv/vsetvl/vlmax_phi-5.c: New test.\n+\t* gcc.target/riscv/rvv/vsetvl/vlmax_phi-6.c: New test.\n+\t* gcc.target/riscv/rvv/vsetvl/vlmax_phi-7.c: New test.\n+\t* gcc.target/riscv/rvv/vsetvl/vlmax_phi-8.c: New test.\n+\t* gcc.target/riscv/rvv/vsetvl/vlmax_phi-9.c: New test.\n+\t* gcc.target/riscv/rvv/vsetvl/vlmax_switch_vtype-1.c: New test.\n+\t* gcc.target/riscv/rvv/vsetvl/vlmax_switch_vtype-10.c: New test.\n+\t* gcc.target/riscv/rvv/vsetvl/vlmax_switch_vtype-11.c: New test.\n+\t* gcc.target/riscv/rvv/vsetvl/vlmax_switch_vtype-12.c: New test.\n+\t* gcc.target/riscv/rvv/vsetvl/vlmax_switch_vtype-13.c: New test.\n+\t* gcc.target/riscv/rvv/vsetvl/vlmax_switch_vtype-14.c: New test.\n+\t* gcc.target/riscv/rvv/vsetvl/vlmax_switch_vtype-15.c: New test.\n+\t* gcc.target/riscv/rvv/vsetvl/vlmax_switch_vtype-16.c: New test.\n+\t* gcc.target/riscv/rvv/vsetvl/vlmax_switch_vtype-2.c: New test.\n+\t* gcc.target/riscv/rvv/vsetvl/vlmax_switch_vtype-3.c: New test.\n+\t* gcc.target/riscv/rvv/vsetvl/vlmax_switch_vtype-4.c: New test.\n+\t* gcc.target/riscv/rvv/vsetvl/vlmax_switch_vtype-5.c: New test.\n+\t* gcc.target/riscv/rvv/vsetvl/vlmax_switch_vtype-6.c: New test.\n+\t* gcc.target/riscv/rvv/vsetvl/vlmax_switch_vtype-7.c: New test.\n+\t* gcc.target/riscv/rvv/vsetvl/vlmax_switch_vtype-8.c: New test.\n+\t* gcc.target/riscv/rvv/vsetvl/vlmax_switch_vtype-9.c: New test.\n+\n+2022-12-19  Ju-Zhe Zhong  <juzhe.zhong@rivai.ai>\n+\n+\t* gcc.target/riscv/rvv/rvv.exp: Adjust to enable tests for VSETVL PASS.\n+\t* gcc.target/riscv/rvv/vsetvl/dump-1.c: New test.\n+\t* gcc.target/riscv/rvv/vsetvl/vlmax_single_block-1.c: New test.\n+\t* gcc.target/riscv/rvv/vsetvl/vlmax_single_block-10.c: New test.\n+\t* gcc.target/riscv/rvv/vsetvl/vlmax_single_block-11.c: New test.\n+\t* gcc.target/riscv/rvv/vsetvl/vlmax_single_block-12.c: New test.\n+\t* gcc.target/riscv/rvv/vsetvl/vlmax_single_block-13.c: New test.\n+\t* gcc.target/riscv/rvv/vsetvl/vlmax_single_block-14.c: New test.\n+\t* gcc.target/riscv/rvv/vsetvl/vlmax_single_block-15.c: New test.\n+\t* gcc.target/riscv/rvv/vsetvl/vlmax_single_block-16.c: New test.\n+\t* gcc.target/riscv/rvv/vsetvl/vlmax_single_block-17.c: New test.\n+\t* gcc.target/riscv/rvv/vsetvl/vlmax_single_block-18.c: New test.\n+\t* gcc.target/riscv/rvv/vsetvl/vlmax_single_block-19.c: New test.\n+\t* gcc.target/riscv/rvv/vsetvl/vlmax_single_block-2.c: New test.\n+\t* gcc.target/riscv/rvv/vsetvl/vlmax_single_block-3.c: New test.\n+\t* gcc.target/riscv/rvv/vsetvl/vlmax_single_block-4.c: New test.\n+\t* gcc.target/riscv/rvv/vsetvl/vlmax_single_block-5.c: New test.\n+\t* gcc.target/riscv/rvv/vsetvl/vlmax_single_block-6.c: New test.\n+\t* gcc.target/riscv/rvv/vsetvl/vlmax_single_block-7.c: New test.\n+\t* gcc.target/riscv/rvv/vsetvl/vlmax_single_block-8.c: New test.\n+\t* gcc.target/riscv/rvv/vsetvl/vlmax_single_block-9.c: New test.\n+\t* gcc.target/riscv/rvv/vsetvl/vlmax_single_vtype-1.c: New test.\n+\t* gcc.target/riscv/rvv/vsetvl/vlmax_single_vtype-2.c: New test.\n+\t* gcc.target/riscv/rvv/vsetvl/vlmax_single_vtype-3.c: New test.\n+\t* gcc.target/riscv/rvv/vsetvl/vlmax_single_vtype-4.c: New test.\n+\t* gcc.target/riscv/rvv/vsetvl/vlmax_single_vtype-5.c: New test.\n+\t* gcc.target/riscv/rvv/vsetvl/vlmax_single_vtype-6.c: New test.\n+\t* gcc.target/riscv/rvv/vsetvl/vlmax_single_vtype-7.c: New test.\n+\t* gcc.target/riscv/rvv/vsetvl/vlmax_single_vtype-8.c: New test.\n+\n+2022-12-19  Kito Cheng  <kito.cheng@sifive.com>\n+\n+\t* gcc.target/riscv/rvv/base/mov-1.c: Simplify operand check.\n+\t* gcc.target/riscv/rvv/base/mov-10.c: Ditto.\n+\t* gcc.target/riscv/rvv/base/mov-11.c: Ditto.\n+\t* gcc.target/riscv/rvv/base/mov-12.c: Ditto.\n+\t* gcc.target/riscv/rvv/base/mov-2.c: Ditto.\n+\t* gcc.target/riscv/rvv/base/mov-3.c: Ditto.\n+\t* gcc.target/riscv/rvv/base/mov-4.c: Ditto.\n+\t* gcc.target/riscv/rvv/base/mov-5.c: Ditto.\n+\t* gcc.target/riscv/rvv/base/mov-6.c: Ditto.\n+\t* gcc.target/riscv/rvv/base/mov-8.c: Ditto.\n+\t* gcc.target/riscv/rvv/base/mov-9.c: Ditto.\n+\t* gcc.target/riscv/rvv/base/vread_csr.c: Ditto.\n+\t* gcc.target/riscv/rvv/base/vsetvl-1.c: Ditto.\n+\t* gcc.target/riscv/rvv/base/vwrite_csr.c: Ditto.\n+\n+2022-12-19  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR testsuite/108151\n+\t* gcc.dg/pr64536.c (bar): Cast long to __INTPTR_TYPE__\n+\tbefore casting to long *.\n+\n+2022-12-19  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR testsuite/108151\n+\t* gcc.dg/pr64536.c (bar): Use casts to __INTPTR_TYPE__ rather than\n+\tlong when casting pointer to integral type.\n+\n+2022-12-19  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n+\n+\tPR target/108140\n+\t* gcc.target/aarch64/acle/pr108140.c: New test.\n+\n+2022-12-19  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR fortran/107397\n+\t* gfortran.dg/pr107397.f90: Adjust expected diagnostic wording and\n+\tadd space between dg-error string and closing }.\n+\n+2022-12-19  Kito Cheng  <kito.cheng@sifive.com>\n+\n+\t* gcc.target/riscv/rvv/base/vread_csr.c: Use specific option\n+\tinstead.\n+\t* gcc.target/riscv/rvv/base/vwrite_csr.c: Ditto.\n+\n+2022-12-19  Jiufu Guo  <guojiufu@linux.ibm.com>\n+\n+\tPR target/106708\n+\t* gcc.target/powerpc/pr106708.c: New test.\n+\n+2022-12-19  Kito Cheng  <kito.cheng@sifive.com>\n+\n+\t* gcc.target/riscv/rvv/base/mov-1.c: Use double quotes to\n+\tinclude riscv_vector.h rather than angle brackets.\n+\t* gcc.target/riscv/rvv/base/mov-10.c: Ditto.\n+\t* gcc.target/riscv/rvv/base/mov-11.c: Ditto.\n+\t* gcc.target/riscv/rvv/base/mov-12.c: Ditto.\n+\t* gcc.target/riscv/rvv/base/mov-13.c: Ditto.\n+\t* gcc.target/riscv/rvv/base/mov-2.c: Ditto.\n+\t* gcc.target/riscv/rvv/base/mov-3.c: Ditto.\n+\t* gcc.target/riscv/rvv/base/mov-4.c: Ditto.\n+\t* gcc.target/riscv/rvv/base/mov-5.c: Ditto.\n+\t* gcc.target/riscv/rvv/base/mov-6.c: Ditto.\n+\t* gcc.target/riscv/rvv/base/mov-7.c: Ditto.\n+\t* gcc.target/riscv/rvv/base/mov-8.c: Ditto.\n+\t* gcc.target/riscv/rvv/base/mov-9.c: Ditto.\n+\t* gcc.target/riscv/rvv/base/vread_csr.c: Ditto.\n+\t* gcc.target/riscv/rvv/base/vsetvl-1.c: Ditto.\n+\t* gcc.target/riscv/rvv/base/vwrite_csr.c: Ditto.\n+\n 2022-12-18  Gaius Mulley  <gaiusmod2@gmail.com>\n \n \t* gm2/pimcoroutines/run/pass/testtime.mod: Reduce sleep times in"}, {"sha": "76857414654ea8bf299924b230ac8db52ba1d1c4", "filename": "libsanitizer/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2ef2327bb357da9d4cff8111e15547441b74c99/libsanitizer%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2ef2327bb357da9d4cff8111e15547441b74c99/libsanitizer%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libsanitizer%2FChangeLog?ref=d2ef2327bb357da9d4cff8111e15547441b74c99", "patch": "@@ -1,3 +1,11 @@\n+2022-12-19  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* hwasan/Makefile.am (nodist_toolexeclib_HEADERS): Set to\n+\tlibhwasan_preinit.o.\n+\t(hwasan_files): Remove hwasan_preinit.cpp.\n+\t(libhwasan_preinit.o): Copy from hwasan_preinit.o.\n+\t* hwasan/Makefile.in: Regenerated.\n+\n 2022-12-13  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR sanitizer/108072"}, {"sha": "3d5af68849e955a763e75380d0d366492a23e98d", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2ef2327bb357da9d4cff8111e15547441b74c99/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2ef2327bb357da9d4cff8111e15547441b74c99/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=d2ef2327bb357da9d4cff8111e15547441b74c99", "patch": "@@ -1,3 +1,8 @@\n+2022-12-19  Arsen Arsenovi\u0107  <arsen@aarsen.me>\n+\n+\t* include/experimental/contract: Lowercase the constants in\n+\tcontract_violation_continuation_mode.\n+\n 2022-12-16  John David Anglin  <danglin@gcc.gnu.org>\n \n \t* config/abi/post/hppa-linux-gnu/baseline_symbols.txt: Update."}]}