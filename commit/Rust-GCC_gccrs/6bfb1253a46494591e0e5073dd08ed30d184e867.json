{"sha": "6bfb1253a46494591e0e5073dd08ed30d184e867", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmJmYjEyNTNhNDY0OTQ1OTFlMGU1MDczZGQwOGVkMzBkMTg0ZTg2Nw==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2014-12-15T16:16:29Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2014-12-15T16:16:29Z"}, "message": "re PR c++/58882 (ICE with invalid C99 style designated initializers)\n\n/cp\n2014-12-15  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR c++/58882\n\t* decl.c (check_array_designated_initializer): Diagnose gracefully\n\tC99 designators which aren't integral constant-expressions; allow\n\tconstexpr user-defined type conversion operators.\n\n/testsuite\n2014-12-15  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR c++/58882\n\t* g++.dg/ext/desig8.C: New.\n\t* g++.dg/cpp0x/desig1.C: Likewise.\n\nFrom-SVN: r218752", "tree": {"sha": "d0e50a626b6c10c71461ed44a9cd555e72700f32", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d0e50a626b6c10c71461ed44a9cd555e72700f32"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6bfb1253a46494591e0e5073dd08ed30d184e867", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6bfb1253a46494591e0e5073dd08ed30d184e867", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6bfb1253a46494591e0e5073dd08ed30d184e867", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6bfb1253a46494591e0e5073dd08ed30d184e867/comments", "author": null, "committer": null, "parents": [{"sha": "d06790a0b2e733c39033a32d00fa522ecb0308b1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d06790a0b2e733c39033a32d00fa522ecb0308b1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d06790a0b2e733c39033a32d00fa522ecb0308b1"}], "stats": {"total": 62, "additions": 55, "deletions": 7}, "files": [{"sha": "4eb762c91abf1289c57ba5030a033044c95e39b0", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6bfb1253a46494591e0e5073dd08ed30d184e867/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6bfb1253a46494591e0e5073dd08ed30d184e867/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=6bfb1253a46494591e0e5073dd08ed30d184e867", "patch": "@@ -1,3 +1,10 @@\n+2014-12-15  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR c++/58882\n+\t* decl.c (check_array_designated_initializer): Diagnose gracefully\n+\tC99 designators which aren't integral constant-expressions; allow\n+\tconstexpr user-defined type conversion operators.\n+\n 2014-12-12  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR c++/59628"}, {"sha": "d47865287a83c2ded66aa424a465b307d842990c", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 9, "deletions": 5, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6bfb1253a46494591e0e5073dd08ed30d184e867/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6bfb1253a46494591e0e5073dd08ed30d184e867/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=6bfb1253a46494591e0e5073dd08ed30d184e867", "patch": "@@ -4996,18 +4996,22 @@ check_array_designated_initializer (constructor_elt *ce,\n \t  return false;\n \t}\n \n-      ce->index = cxx_constant_value (ce->index);\n-\n-      if (TREE_CODE (ce->index) == INTEGER_CST)\n+      tree ce_index = build_expr_type_conversion (WANT_INT | WANT_ENUM,\n+\t\t\t\t\t\t  ce->index, true);\n+      if (ce_index\n+\t  && INTEGRAL_OR_UNSCOPED_ENUMERATION_TYPE_P (TREE_TYPE (ce_index))\n+\t  && (TREE_CODE (ce_index = maybe_constant_value (ce_index))\n+\t      == INTEGER_CST))\n \t{\n \t  /* A C99 designator is OK if it matches the current index.  */\n-\t  if (wi::eq_p (ce->index, index))\n+\t  if (wi::eq_p (ce_index, index))\n \t    return true;\n \t  else\n \t    sorry (\"non-trivial designated initializers not supported\");\n \t}\n       else\n-\tgcc_unreachable ();\n+\terror (\"C99 designator %qE is not an integral constant-expression\",\n+\t       ce->index);\n \n       return false;\n     }"}, {"sha": "75e15d034c7809aeffb91ef55a36bafeb4a12f80", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6bfb1253a46494591e0e5073dd08ed30d184e867/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6bfb1253a46494591e0e5073dd08ed30d184e867/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=6bfb1253a46494591e0e5073dd08ed30d184e867", "patch": "@@ -1,3 +1,9 @@\n+2014-12-15  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR c++/58882\n+\t* g++.dg/ext/desig8.C: New.\n+\t* g++.dg/cpp0x/desig1.C: Likewise.\n+\n 2014-12-15  Janus Weil  <janus@gcc.gnu.org>\n \n \tPR fortran/63727\n@@ -23,8 +29,9 @@\n \tinstead of %e in regexps trying to match 32-bit GPR.\n \t* gcc.target/i386/avx512f-vpbroadcastd-1.c: Likewise.\n \t* gcc.target/i386/avx512vl-vpbroadcastd-1.c: Likewise.\n-\t* gcc.target/i386/avx512vl-vmovdqa64-1.c: Restrict some scan-assembler-times\n-\tlines to nonpic targets only.  Fix up \\[^\\n^x^y\\] to \\[^\\nxy\\].\n+\t* gcc.target/i386/avx512vl-vmovdqa64-1.c: Restrict some\n+\tscan-assembler-times lines to nonpic targets only.\n+\tFix up \\[^\\n^x^y\\] to \\[^\\nxy\\].\n \n 2014-12-15  Paolo Carlini  <paolo.carlini@oracle.com>\n "}, {"sha": "cc527308f0d7f55574ab330e769dc6ac392fe438", "filename": "gcc/testsuite/g++.dg/cpp0x/desig1.C", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6bfb1253a46494591e0e5073dd08ed30d184e867/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fdesig1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6bfb1253a46494591e0e5073dd08ed30d184e867/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fdesig1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fdesig1.C?ref=6bfb1253a46494591e0e5073dd08ed30d184e867", "patch": "@@ -0,0 +1,27 @@\n+// PR c++/58882\n+// { dg-do compile { target c++11 } }\n+\n+struct A\n+{\n+  constexpr operator int() const { return 0; }\n+};\n+\n+int a[] = { [A()] = 0 };\n+\n+enum E { e0 };\n+\n+struct B\n+{\n+  constexpr operator E() const { return E::e0; }\n+};\n+\n+int b[] = { [B()] = 0 };\n+\n+enum class SE { se0 };\n+\n+struct C\n+{\n+  constexpr operator SE() const { return SE::se0; }\n+};\n+\n+int c[] = { [C()] = 0 }; // { dg-error \"integral constant-expression\" }"}, {"sha": "98e7bfdca46bb550ab10c786b602b895a4515b2b", "filename": "gcc/testsuite/g++.dg/ext/desig8.C", "status": "added", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6bfb1253a46494591e0e5073dd08ed30d184e867/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fdesig8.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6bfb1253a46494591e0e5073dd08ed30d184e867/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fdesig8.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fdesig8.C?ref=6bfb1253a46494591e0e5073dd08ed30d184e867", "patch": "@@ -0,0 +1,3 @@\n+// PR c++/58882\n+\n+int a[] = { [0.] = 0 }; // { dg-error \"integral constant-expression\" }"}]}