{"sha": "a96c39eaa1343c2b8ec2ba9529ea9e88722a2619", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTk2YzM5ZWFhMTM0M2MyYjhlYzJiYTk1MjllYTllODg3MjJhMjYxOQ==", "commit": {"author": {"name": "Manuel L\u00f3pez-Ib\u00e1\u00f1ez", "email": "manu@gcc.gnu.org", "date": "2014-11-23T23:47:42Z"}, "committer": {"name": "Manuel L\u00f3pez-Ib\u00e1\u00f1ez", "email": "manu@gcc.gnu.org", "date": "2014-11-23T23:47:42Z"}, "message": "re PR fortran/44054 (Handle -Werror, -Werror=, -fdiagnostics-show-option, !GCC$ diagnostic (pragmas) and color)\n\ngcc/fortran/ChangeLog:\n\n2014-11-23  Manuel L\u00f3pez-Ib\u00e1\u00f1ez  <manu@gcc.gnu.org>\n\n\tPR fortran/44054\n\t* decl.c (gfc_verify_c_interop_param): Use gfc_error_now_2.\n\t(gfc_set_constant_character_len): Use gfc_warning_now_2.\n\t* resolve.c (resolve_ordinary_assign): Likewise.\n\t* gfortran.h (warn_character_truncation): Do not declare here.\n\t* error.c (gfc_format_decoder): Handle %L.\n\t* lang.opt (Wcharacter-truncation): Add Var and LangEnabledBy.\n\t* options.c (gfc_init_options): Do not handle\n\twarn_character_truncation explicitly.\n\t(set_Wall): Likewise.\n\t(gfc_handle_option): Likewise.\n\nFrom-SVN: r217992", "tree": {"sha": "f611b28dd269fb7e389fd5408fb94d4f9fe5416f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f611b28dd269fb7e389fd5408fb94d4f9fe5416f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a96c39eaa1343c2b8ec2ba9529ea9e88722a2619", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a96c39eaa1343c2b8ec2ba9529ea9e88722a2619", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a96c39eaa1343c2b8ec2ba9529ea9e88722a2619", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a96c39eaa1343c2b8ec2ba9529ea9e88722a2619/comments", "author": null, "committer": null, "parents": [{"sha": "875d4ba74588d8c937e553432bf52b655d488056", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/875d4ba74588d8c937e553432bf52b655d488056", "html_url": "https://github.com/Rust-GCC/gccrs/commit/875d4ba74588d8c937e553432bf52b655d488056"}], "stats": {"total": 61, "additions": 38, "deletions": 23}, "files": [{"sha": "b79f9c23be55264f2c1566312fe6cb6b583799c2", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a96c39eaa1343c2b8ec2ba9529ea9e88722a2619/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a96c39eaa1343c2b8ec2ba9529ea9e88722a2619/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=a96c39eaa1343c2b8ec2ba9529ea9e88722a2619", "patch": "@@ -1,3 +1,17 @@\n+2014-11-23  Manuel L\u00f3pez-Ib\u00e1\u00f1ez  <manu@gcc.gnu.org>\n+\n+\tPR fortran/44054\n+\t* decl.c (gfc_verify_c_interop_param): Use gfc_error_now_2.\n+\t(gfc_set_constant_character_len): Use gfc_warning_now_2.\n+\t* resolve.c (resolve_ordinary_assign): Likewise.\n+\t* gfortran.h (warn_character_truncation): Do not declare here.\n+\t* error.c (gfc_format_decoder): Handle %L.\n+\t* lang.opt (Wcharacter-truncation): Add Var and LangEnabledBy.\n+\t* options.c (gfc_init_options): Do not handle\n+\twarn_character_truncation explicitly.\n+\t(set_Wall): Likewise.\n+\t(gfc_handle_option): Likewise.\n+\n 2014-11-23  Tobias Burnus  <burnus@net-b.de>\n \n \t* invoke.texi (-Wtabs): Swap -Wtabs/-Wno-tabs now that"}, {"sha": "45e5b6c2cd9d06d3317f80e7e052270e15ea714e", "filename": "gcc/fortran/decl.c", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a96c39eaa1343c2b8ec2ba9529ea9e88722a2619/gcc%2Ffortran%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a96c39eaa1343c2b8ec2ba9529ea9e88722a2619/gcc%2Ffortran%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fdecl.c?ref=a96c39eaa1343c2b8ec2ba9529ea9e88722a2619", "patch": "@@ -990,10 +990,9 @@ gfc_verify_c_interop_param (gfc_symbol *sym)\n     {\n       if (sym->attr.is_bind_c == 0)\n         {\n-          gfc_error_now (\"Procedure '%s' at %L must have the BIND(C) \"\n-                         \"attribute to be C interoperable\", sym->name,\n-                         &(sym->declared_at));\n-\n+          gfc_error_now_2 (\"Procedure %qs at %L must have the BIND(C) \"\n+\t\t\t   \"attribute to be C interoperable\", sym->name,\n+\t\t\t   &(sym->declared_at));\n           return false;\n         }\n       else\n@@ -1224,9 +1223,10 @@ gfc_set_constant_character_len (int len, gfc_expr *expr, int check_len)\n       if (len > slen)\n \tgfc_wide_memset (&s[slen], ' ', len - slen);\n \n-      if (gfc_option.warn_character_truncation && slen > len)\n-\tgfc_warning_now (\"CHARACTER expression at %L is being truncated \"\n-\t\t\t \"(%d/%d)\", &expr->where, slen, len);\n+      if (warn_character_truncation && slen > len)\n+\tgfc_warning_now_2 (OPT_Wcharacter_truncation,\n+\t\t\t   \"CHARACTER expression at %L is being truncated \"\n+\t\t\t   \"(%d/%d)\", &expr->where, slen, len);\n \n       /* Apply the standard by 'hand' otherwise it gets cleared for\n \t initializers.  */"}, {"sha": "471e0ecc86061976fb4fb3c9bedd479a859a9674", "filename": "gcc/fortran/error.c", "status": "modified", "additions": 11, "deletions": 4, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a96c39eaa1343c2b8ec2ba9529ea9e88722a2619/gcc%2Ffortran%2Ferror.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a96c39eaa1343c2b8ec2ba9529ea9e88722a2619/gcc%2Ffortran%2Ferror.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ferror.c?ref=a96c39eaa1343c2b8ec2ba9529ea9e88722a2619", "patch": "@@ -964,6 +964,7 @@ gfc_warning_now (const char *gmsgid, ...)\n    to handle Fortran specific format specifiers with the following meanings:\n \n    %C  Current locus (no argument)\n+   %L  Takes locus argument\n */\n static bool\n gfc_format_decoder (pretty_printer *pp,\n@@ -974,15 +975,21 @@ gfc_format_decoder (pretty_printer *pp,\n   switch (*spec)\n     {\n     case 'C':\n+    case 'L':\n       {\n \tstatic const char *result = \"(1)\";\n-\tgcc_assert (gfc_current_locus.nextc - gfc_current_locus.lb->line >= 0);\n-\tunsigned int c1 = gfc_current_locus.nextc - gfc_current_locus.lb->line;\n+\tlocus *loc;\n+\tif (*spec == 'C')\n+\t  loc = &gfc_current_locus;\n+\telse\n+\t  loc = va_arg (*text->args_ptr, locus *);\n+\tgcc_assert (loc->nextc - loc->lb->line >= 0);\n+\tunsigned int offset = loc->nextc - loc->lb->line;\n \tgcc_assert (text->locus);\n \t*text->locus\n \t  = linemap_position_for_loc_and_offset (line_table,\n-\t\t\t\t\t\t gfc_current_locus.lb->location,\n-\t\t\t\t\t\t c1);\n+\t\t\t\t\t\t loc->lb->location,\n+\t\t\t\t\t\t offset);\n \tglobal_dc->caret_char = '1';\n \tpp_string (pp, result);\n \treturn true;"}, {"sha": "63a8d1508ad306449140fc916e28036be2875cf9", "filename": "gcc/fortran/gfortran.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a96c39eaa1343c2b8ec2ba9529ea9e88722a2619/gcc%2Ffortran%2Fgfortran.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a96c39eaa1343c2b8ec2ba9529ea9e88722a2619/gcc%2Ffortran%2Fgfortran.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fgfortran.h?ref=a96c39eaa1343c2b8ec2ba9529ea9e88722a2619", "patch": "@@ -2455,7 +2455,6 @@ typedef struct\n   int warn_underflow;\n   int warn_intrinsic_shadow;\n   int warn_intrinsics_std;\n-  int warn_character_truncation;\n   int warn_array_temp;\n   int warn_align_commons;\n   int warn_real_q_constant;"}, {"sha": "bac7dce8040fab68d89c1da34020a03fc5cd4e61", "filename": "gcc/fortran/lang.opt", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a96c39eaa1343c2b8ec2ba9529ea9e88722a2619/gcc%2Ffortran%2Flang.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a96c39eaa1343c2b8ec2ba9529ea9e88722a2619/gcc%2Ffortran%2Flang.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Flang.opt?ref=a96c39eaa1343c2b8ec2ba9529ea9e88722a2619", "patch": "@@ -218,7 +218,7 @@ Fortran\n ; Documented in C\n \n Wcharacter-truncation\n-Fortran Warning\n+Fortran Var(warn_character_truncation) Warning LangEnabledBy(Fortran,Wall)\n Warn about truncated character expressions\n \n Wcompare-reals"}, {"sha": "0dd0118cdd4d0b1dbb883f577c5bd0a92f7d2316", "filename": "gcc/fortran/options.c", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a96c39eaa1343c2b8ec2ba9529ea9e88722a2619/gcc%2Ffortran%2Foptions.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a96c39eaa1343c2b8ec2ba9529ea9e88722a2619/gcc%2Ffortran%2Foptions.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Foptions.c?ref=a96c39eaa1343c2b8ec2ba9529ea9e88722a2619", "patch": "@@ -95,7 +95,6 @@ gfc_init_options (unsigned int decoded_options_count,\n \n   gfc_option.warn_aliasing = 0;\n   gfc_option.warn_ampersand = 0;\n-  gfc_option.warn_character_truncation = 0;\n   gfc_option.warn_array_temp = 0;\n   gfc_option.warn_c_binding_type = 0;\n   gfc_option.gfc_warn_conversion = 0;\n@@ -460,7 +459,6 @@ set_Wall (int setting)\n   gfc_option.warn_underflow = setting;\n   gfc_option.warn_intrinsic_shadow = setting;\n   gfc_option.warn_intrinsics_std = setting;\n-  gfc_option.warn_character_truncation = setting;\n   gfc_option.warn_real_q_constant = setting;\n   gfc_option.warn_unused_dummy_argument = setting;\n   gfc_option.warn_target_lifetime = setting;\n@@ -663,10 +661,6 @@ gfc_handle_option (size_t scode, const char *arg, int value,\n       gfc_option.warn_c_binding_type = value;\n       break;\n \n-    case OPT_Wcharacter_truncation:\n-      gfc_option.warn_character_truncation = value;\n-      break;\n-\n     case OPT_Wcompare_reals:\n       gfc_option.warn_compare_reals = value;\n       break;"}, {"sha": "6dc15857559b003c5b3ba7f54c2700fb1b667f4d", "filename": "gcc/fortran/resolve.c", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a96c39eaa1343c2b8ec2ba9529ea9e88722a2619/gcc%2Ffortran%2Fresolve.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a96c39eaa1343c2b8ec2ba9529ea9e88722a2619/gcc%2Ffortran%2Fresolve.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fresolve.c?ref=a96c39eaa1343c2b8ec2ba9529ea9e88722a2619", "patch": "@@ -9208,7 +9208,7 @@ resolve_ordinary_assign (gfc_code *code, gfc_namespace *ns)\n     }\n \n   if (lhs->ts.type == BT_CHARACTER\n-\t&& gfc_option.warn_character_truncation)\n+\t&& warn_character_truncation)\n     {\n       if (lhs->ts.u.cl != NULL\n \t    && lhs->ts.u.cl->length != NULL\n@@ -9224,9 +9224,10 @@ resolve_ordinary_assign (gfc_code *code, gfc_namespace *ns)\n \trlen = mpz_get_si (rhs->ts.u.cl->length->value.integer);\n \n       if (rlen && llen && rlen > llen)\n-\tgfc_warning_now (\"CHARACTER expression will be truncated \"\n-\t\t\t \"in assignment (%d/%d) at %L\",\n-\t\t\t llen, rlen, &code->loc);\n+\tgfc_warning_now_2 (OPT_Wcharacter_truncation,\n+\t\t\t   \"CHARACTER expression will be truncated \"\n+\t\t\t   \"in assignment (%d/%d) at %L\",\n+\t\t\t   llen, rlen, &code->loc);\n     }\n \n   /* Ensure that a vector index expression for the lvalue is evaluated"}]}