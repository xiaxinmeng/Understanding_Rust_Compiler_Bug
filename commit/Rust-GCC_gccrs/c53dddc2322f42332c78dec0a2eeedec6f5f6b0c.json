{"sha": "c53dddc2322f42332c78dec0a2eeedec6f5f6b0c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzUzZGRkYzIzMjJmNDIzMzJjNzhkZWMwYTJlZWVkZWM2ZjVmNmIwYw==", "commit": {"author": {"name": "Kaveh R. Ghazi", "email": "ghazi@caip.rutgers.edu", "date": "2003-06-04T21:18:48Z"}, "committer": {"name": "Kaveh Ghazi", "email": "ghazi@gcc.gnu.org", "date": "2003-06-04T21:18:48Z"}, "message": "aout.h (ASM_OUTPUT_SKIP): Fix cast for format specifier warning.\n\n\t* arm/aout.h (ASM_OUTPUT_SKIP): Fix cast for format specifier warning.\n\t* arm.c (arm_output_function_prologue): Fix format specifiers.\n\t* arm.h (ARM_PRINT_OPERAND_ADDRESS): Likewise.\n\t* m68k.c (m68k_output_mi_thunk): Use more readable %wd instead of\n\tHOST_WIDE_INT_PRINT_DEC.\n\t* vax.c (vax_output_function_prologue): Fix format specifiers.\n\nFrom-SVN: r67464", "tree": {"sha": "d9dda02bdd845fbe2d66ddea44b76f0cbd845d8c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d9dda02bdd845fbe2d66ddea44b76f0cbd845d8c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c53dddc2322f42332c78dec0a2eeedec6f5f6b0c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c53dddc2322f42332c78dec0a2eeedec6f5f6b0c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c53dddc2322f42332c78dec0a2eeedec6f5f6b0c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c53dddc2322f42332c78dec0a2eeedec6f5f6b0c/comments", "author": null, "committer": null, "parents": [{"sha": "7b9c108f639ad6d2488912704c893c8b4040e26c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7b9c108f639ad6d2488912704c893c8b4040e26c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7b9c108f639ad6d2488912704c893c8b4040e26c"}], "stats": {"total": 26, "additions": 17, "deletions": 9}, "files": [{"sha": "8db32a254186d1015810efa6c84e4c93ec939e0d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c53dddc2322f42332c78dec0a2eeedec6f5f6b0c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c53dddc2322f42332c78dec0a2eeedec6f5f6b0c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c53dddc2322f42332c78dec0a2eeedec6f5f6b0c", "patch": "@@ -1,3 +1,12 @@\n+2003-06-04  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n+\n+\t* arm/aout.h (ASM_OUTPUT_SKIP): Fix cast for format specifier warning.\n+\t* arm.c (arm_output_function_prologue): Fix format specifiers.\n+\t* arm.h (ARM_PRINT_OPERAND_ADDRESS): Likewise.\n+\t* m68k.c (m68k_output_mi_thunk): Use more readable %wd instead of\n+\tHOST_WIDE_INT_PRINT_DEC.\n+\t* vax.c (vax_output_function_prologue): Fix format specifiers.\n+\n 2003-06-04  Richard Henderson  <rth@redhat.com>\n \n         * cse.c (find_best_addr): Consider binary operators even if second"}, {"sha": "71fa43b496424c088873f8bd84de5165c53c979c", "filename": "gcc/config/arm/aout.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c53dddc2322f42332c78dec0a2eeedec6f5f6b0c/gcc%2Fconfig%2Farm%2Faout.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c53dddc2322f42332c78dec0a2eeedec6f5f6b0c/gcc%2Fconfig%2Farm%2Faout.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Faout.h?ref=c53dddc2322f42332c78dec0a2eeedec6f5f6b0c", "patch": "@@ -240,7 +240,7 @@\n /* Output a gap.  In fact we fill it with nulls.  */\n #undef  ASM_OUTPUT_SKIP\n #define ASM_OUTPUT_SKIP(STREAM, NBYTES) \t\\\n-  fprintf (STREAM, \"\\t.space\\t%d\\n\", (int)NBYTES)\n+  fprintf (STREAM, \"\\t.space\\t%d\\n\", (int)(NBYTES))\n \n /* Align output to a power of two.  Horrible /bin/as.  */\n #ifndef ASM_OUTPUT_ALIGN  "}, {"sha": "f28362af4800783724c00e648bdad1868810425f", "filename": "gcc/config/arm/arm.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c53dddc2322f42332c78dec0a2eeedec6f5f6b0c/gcc%2Fconfig%2Farm%2Farm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c53dddc2322f42332c78dec0a2eeedec6f5f6b0c/gcc%2Fconfig%2Farm%2Farm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.c?ref=c53dddc2322f42332c78dec0a2eeedec6f5f6b0c", "patch": "@@ -8422,7 +8422,7 @@ arm_output_function_prologue (f, frame_size)\n   if (IS_NESTED (func_type))\n     asm_fprintf (f, \"\\t%@ Nested: function declared inside another function.\\n\");\n     \n-  asm_fprintf (f, \"\\t%@ args = %d, pretend = %d, frame = %d\\n\",\n+  asm_fprintf (f, \"\\t%@ args = %d, pretend = %d, frame = %wd\\n\",\n \t       current_function_args_size,\n \t       current_function_pretend_args_size, frame_size);\n "}, {"sha": "5af2cb86ee25f427e4a5e85ff966cd76861fea31", "filename": "gcc/config/arm/arm.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c53dddc2322f42332c78dec0a2eeedec6f5f6b0c/gcc%2Fconfig%2Farm%2Farm.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c53dddc2322f42332c78dec0a2eeedec6f5f6b0c/gcc%2Fconfig%2Farm%2Farm.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.h?ref=c53dddc2322f42332c78dec0a2eeedec6f5f6b0c", "patch": "@@ -2391,7 +2391,7 @@ extern int making_const_table;\n \t    offset = INTVAL (index);\t\t\t\t\t\\\n \t    if (is_minus)\t\t\t\t\t\t\\\n \t      offset = -offset;\t\t\t\t\t\t\\\n-\t    asm_fprintf (STREAM, \"[%r, #%d]\",\t\t\t\t\\\n+\t    asm_fprintf (STREAM, \"[%r, #%wd]\",\t\t\t\t\\\n \t\t         REGNO (base), offset);\t\t\t\t\\\n \t    break;\t\t\t\t\t\t\t\\\n \t\t\t\t\t\t\t\t\t\\\n@@ -2442,7 +2442,7 @@ extern int making_const_table;\n     {\t\t\t\t\t\t\t\t\t\\\n       asm_fprintf (STREAM, \"[%r, \", REGNO (XEXP (X, 0)));\t\t\\\n       if (GET_CODE (XEXP (XEXP (X, 1), 1)) == CONST_INT)\t\t\\\n-\tasm_fprintf (STREAM, \"#%d]!\", \t\t\t\t\t\\\n+\tasm_fprintf (STREAM, \"#%wd]!\", \t\t\t\t\t\\\n \t\t     INTVAL (XEXP (XEXP (X, 1), 1)));\t\t\t\\\n       else\t\t\t\t\t\t\t\t\\\n \tasm_fprintf (STREAM, \"%r]!\", \t\t\t\t\t\\\n@@ -2452,7 +2452,7 @@ extern int making_const_table;\n     {\t\t\t\t\t\t\t\t\t\\\n       asm_fprintf (STREAM, \"[%r], \", REGNO (XEXP (X, 0)));\t\t\\\n       if (GET_CODE (XEXP (XEXP (X, 1), 1)) == CONST_INT)\t\t\\\n-\tasm_fprintf (STREAM, \"#%d\", \t\t\t\t\t\\\n+\tasm_fprintf (STREAM, \"#%wd\", \t\t\t\t\t\\\n \t\t     INTVAL (XEXP (XEXP (X, 1), 1)));\t\t\t\\\n       else\t\t\t\t\t\t\t\t\\\n \tasm_fprintf (STREAM, \"%r\", \t\t\t\t\t\\"}, {"sha": "02b09117d6e56e126d233a02088423e718ae275f", "filename": "gcc/config/m68k/m68k.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c53dddc2322f42332c78dec0a2eeedec6f5f6b0c/gcc%2Fconfig%2Fm68k%2Fm68k.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c53dddc2322f42332c78dec0a2eeedec6f5f6b0c/gcc%2Fconfig%2Fm68k%2Fm68k.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fm68k.c?ref=c53dddc2322f42332c78dec0a2eeedec6f5f6b0c", "patch": "@@ -3681,8 +3681,7 @@ m68k_output_mi_thunk (file, thunk, delta, vcall_offset, function)\n   else if (delta < 0 && delta >= -8)\n     asm_fprintf (file, \"\\tsubq.l %I%d,4(%Rsp)\\n\", (int) -delta);\n   else\n-    asm_fprintf (file, \"\\tadd.l %I\" HOST_WIDE_INT_PRINT_DEC \",4(%Rsp)\\n\",\n-\t\t delta);\n+    asm_fprintf (file, \"\\tadd.l %I%wd,4(%Rsp)\\n\", delta);\n \n   xops[0] = DECL_RTL (function);\n "}, {"sha": "66b943be5f8b151437400088d03c55b7ace55215", "filename": "gcc/config/vax/vax.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c53dddc2322f42332c78dec0a2eeedec6f5f6b0c/gcc%2Fconfig%2Fvax%2Fvax.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c53dddc2322f42332c78dec0a2eeedec6f5f6b0c/gcc%2Fconfig%2Fvax%2Fvax.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fvax%2Fvax.c?ref=c53dddc2322f42332c78dec0a2eeedec6f5f6b0c", "patch": "@@ -121,9 +121,9 @@ vax_output_function_prologue (file, size)\n \n   size -= STARTING_FRAME_OFFSET;\n   if (size >= 64)\n-    asm_fprintf (file, \"\\tmovab %d(%Rsp),%Rsp\\n\", -size);\n+    asm_fprintf (file, \"\\tmovab %wd(%Rsp),%Rsp\\n\", -size);\n   else if (size)\n-    asm_fprintf (file, \"\\tsubl2 $%d,%Rsp\\n\", size);\n+    asm_fprintf (file, \"\\tsubl2 $%wd,%Rsp\\n\", size);\n }\n \n /* This is like nonimmediate_operand with a restriction on the type of MEM.  */"}]}