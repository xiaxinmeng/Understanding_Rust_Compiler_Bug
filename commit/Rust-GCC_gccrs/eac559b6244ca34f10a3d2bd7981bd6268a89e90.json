{"sha": "eac559b6244ca34f10a3d2bd7981bd6268a89e90", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWFjNTU5YjYyNDRjYTM0ZjEwYTNkMmJkNzk4MWJkNjI2OGE4OWU5MA==", "commit": {"author": {"name": "Jeff Sturm", "email": "jsturm@one-point.com", "date": "2003-09-26T03:50:45Z"}, "committer": {"name": "Jeff Sturm", "email": "jsturm@gcc.gnu.org", "date": "2003-09-26T03:50:45Z"}, "message": "Fix build failure.\n\n* gnu/java/nio/SelectorImpl.java (getFDsAsArray): Use getNativeFD().\n(select): Likewise.\n(register): Use DatagramChannelSelectionKey, SocketChannelSelectionKey.\n\nFrom-SVN: r71812", "tree": {"sha": "59d8186bc992d2f26e423d449e4f1099cac658ba", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/59d8186bc992d2f26e423d449e4f1099cac658ba"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/eac559b6244ca34f10a3d2bd7981bd6268a89e90", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eac559b6244ca34f10a3d2bd7981bd6268a89e90", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eac559b6244ca34f10a3d2bd7981bd6268a89e90", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eac559b6244ca34f10a3d2bd7981bd6268a89e90/comments", "author": null, "committer": null, "parents": [{"sha": "188fc5b50df0eac45c7a294b453facc4f25481eb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/188fc5b50df0eac45c7a294b453facc4f25481eb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/188fc5b50df0eac45c7a294b453facc4f25481eb"}], "stats": {"total": 18, "additions": 12, "deletions": 6}, "files": [{"sha": "98ac223d343db1c9c990c971b6bb965816de8464", "filename": "libjava/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eac559b6244ca34f10a3d2bd7981bd6268a89e90/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eac559b6244ca34f10a3d2bd7981bd6268a89e90/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=eac559b6244ca34f10a3d2bd7981bd6268a89e90", "patch": "@@ -1,3 +1,9 @@\n+2003-09-25  Jeff Sturm  <jsturm@one-point.com>\n+\n+\t* gnu/java/nio/SelectorImpl.java (getFDsAsArray): Use getNativeFD().\n+\t(select): Likewise.\n+\t(register): Use DatagramChannelSelectionKey, SocketChannelSelectionKey.\n+\n 2003-09-25  Michael Koch  <konqueror@gmx.de>\n \n \t* gnu/java/nio/DatagramChannelImpl.java"}, {"sha": "08531ef449a4bfef0585518d09482fbc0bd48fe2", "filename": "libjava/gnu/java/nio/SelectorImpl.java", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eac559b6244ca34f10a3d2bd7981bd6268a89e90/libjava%2Fgnu%2Fjava%2Fnio%2FSelectorImpl.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eac559b6244ca34f10a3d2bd7981bd6268a89e90/libjava%2Fgnu%2Fjava%2Fnio%2FSelectorImpl.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fnio%2FSelectorImpl.java?ref=eac559b6244ca34f10a3d2bd7981bd6268a89e90", "patch": "@@ -125,7 +125,7 @@ private final int[] getFDsAsArray (int ops)\n \n         if ((key.interestOps () & ops) != 0)\n           {\n-            result[counter] = key.fd;\n+            result[counter] = key.getNativeFD();\n             counter++;\n           }\n       }\n@@ -172,7 +172,7 @@ public int select (long timeout)\n         // Set new ready read/accept ops\n         for (int i = 0; i < read.length; i++)\n           {\n-            if (key.fd == read[i])\n+            if (key.getNativeFD() == read[i])\n               {\n                 if (key.channel () instanceof ServerSocketChannelImpl)\n                   {\n@@ -188,7 +188,7 @@ public int select (long timeout)\n         // Set new ready write ops\n         for (int i = 0; i < write.length; i++)\n           {\n-            if (key.fd == write[i])\n+            if (key.getNativeFD() == write[i])\n               {\n                 ops = ops | SelectionKey.OP_WRITE;\n                 \n@@ -253,17 +253,17 @@ protected final SelectionKey register (AbstractSelectableChannel ch, int ops,\n     if (ch instanceof SocketChannelImpl)\n       {\n         SocketChannelImpl sc = (SocketChannelImpl) ch;\n-        result = new SelectionKeyImpl (ch, this, 0); // FIXME: last argument\n+        result = new SocketChannelSelectionKey (ch, this); // FIXME: last argument\n       }\n     else if (ch instanceof DatagramChannelImpl)\n       {\n         DatagramChannelImpl dc = (DatagramChannelImpl) ch;\n-        result = new SelectionKeyImpl (ch, this, 0); // FIXME: last argument\n+        result = new DatagramChannelSelectionKey (ch, this); // FIXME: last argument\n       }\n     else if (ch instanceof ServerSocketChannelImpl)\n       {\n         ServerSocketChannelImpl ssc = (ServerSocketChannelImpl) ch;\n-        result = new SelectionKeyImpl (ch, this, 0); // FIXME: last argument\n+        result = new SocketChannelSelectionKey (ch, this); // FIXME: last argument\n       }\n     else\n       {"}]}