{"sha": "89774469f36bdee16b9c676a55cefb4724998dd5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODk3NzQ0NjlmMzZiZGVlMTZiOWM2NzZhNTVjZWZiNDcyNDk5OGRkNQ==", "commit": {"author": {"name": "Steve Ellcey", "email": "sje@cup.hp.com", "date": "2010-10-18T21:34:46Z"}, "committer": {"name": "Steve Ellcey", "email": "sje@gcc.gnu.org", "date": "2010-10-18T21:34:46Z"}, "message": "re PR target/36898 (Insufficient qp-mutex declarations)\n\n2010-10-18  Steve Ellcey  <sje@cup.hp.com>\n\n\tPR target/36898\n\tPR middle-end/43760\n\t* config/ia64/ia64.c (rws_access_regno): Remove predicate check.\n\nFrom-SVN: r165664", "tree": {"sha": "9833f5bd49ad250fe03a924c577b832541c9f92e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9833f5bd49ad250fe03a924c577b832541c9f92e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/89774469f36bdee16b9c676a55cefb4724998dd5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/89774469f36bdee16b9c676a55cefb4724998dd5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/89774469f36bdee16b9c676a55cefb4724998dd5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/89774469f36bdee16b9c676a55cefb4724998dd5/comments", "author": null, "committer": null, "parents": [{"sha": "b69da3d839be206c4c1fb206b4d56cc55aba44f4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b69da3d839be206c4c1fb206b4d56cc55aba44f4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b69da3d839be206c4c1fb206b4d56cc55aba44f4"}], "stats": {"total": 24, "additions": 13, "deletions": 11}, "files": [{"sha": "a27d06471db05483ffb7eb71327e582b37a8ffdf", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/89774469f36bdee16b9c676a55cefb4724998dd5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/89774469f36bdee16b9c676a55cefb4724998dd5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=89774469f36bdee16b9c676a55cefb4724998dd5", "patch": "@@ -1,3 +1,9 @@\n+2010-10-18  Steve Ellcey  <sje@cup.hp.com>\n+\n+\tPR target/36898\n+\tPR middle-end/43760\n+\t* config/ia64/ia64.c (rws_access_regno): Remove predicate check.\n+\n 2010-10-18  Joseph Myers  <joseph@codesourcery.com>\n \n \t* config/i386/i386.c (ix86_option_override_internal): Define and"}, {"sha": "c1135f996b28772c182292287013fdcbf716607e", "filename": "gcc/config/ia64/ia64.c", "status": "modified", "additions": 7, "deletions": 11, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/89774469f36bdee16b9c676a55cefb4724998dd5/gcc%2Fconfig%2Fia64%2Fia64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/89774469f36bdee16b9c676a55cefb4724998dd5/gcc%2Fconfig%2Fia64%2Fia64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fia64%2Fia64.c?ref=89774469f36bdee16b9c676a55cefb4724998dd5", "patch": "@@ -5875,15 +5875,14 @@ rws_access_regno (int regno, struct reg_flags flags, int pred)\n \t  break;\n \n \tcase 1:\n-\t  /* The register has been written via a predicate.  If this is\n-\t     not a complementary predicate, then we need a barrier.  */\n-\t  /* ??? This assumes that P and P+1 are always complementary\n-\t     predicates for P even.  */\n+\t  /* The register has been written via a predicate.  Treat\n+\t     it like a unconditional write and do not try to check\n+\t     for complementary pred reg in earlier write.  */\n \t  if (flags.is_and && rws_sum[regno].written_by_and)\n \t    ;\n \t  else if (flags.is_or && rws_sum[regno].written_by_or)\n \t    ;\n-\t  else if ((rws_sum[regno].first_pred ^ 1) != pred)\n+\t  else\n \t    need_barrier = 1;\n \t  if (!in_safe_group_barrier)\n \t    rws_update (regno, flags, pred);\n@@ -5944,12 +5943,9 @@ rws_access_regno (int regno, struct reg_flags flags, int pred)\n \t  break;\n \n \tcase 1:\n-\t  /* The register has been written via a predicate.  If this is\n-\t     not a complementary predicate, then we need a barrier.  */\n-\t  /* ??? This assumes that P and P+1 are always complementary\n-\t     predicates for P even.  */\n-\t  if ((rws_sum[regno].first_pred ^ 1) != pred)\n-\t    need_barrier = 1;\n+\t  /* The register has been written via a predicate, assume we\n+\t     need a barrier (don't check for complementary regs).  */\n+\t  need_barrier = 1;\n \t  break;\n \n \tcase 2:"}]}