{"sha": "96e90ac1ec8cb9261093e434c88cced5d5675e2b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTZlOTBhYzFlYzhjYjkyNjEwOTNlNDM0Yzg4Y2NlZDVkNTY3NWUyYg==", "commit": {"author": {"name": "Robert Dewar", "email": "dewar@adacore.com", "date": "2014-07-29T13:00:08Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-07-29T13:00:08Z"}, "message": "gnat_rm.texi: Document pragma Unevaluated_Use_Of_Old.\n\n2014-07-29  Robert Dewar  <dewar@adacore.com>\n\n\t* gnat_rm.texi: Document pragma Unevaluated_Use_Of_Old.\n\t* opt.adb: Handle Uneval_Old.\n\t* opt.ads (Uneval_Old, Uneval_Old_Config): New variables.\n\t* par-prag.adb: Add dummy entry for pragma Unevaluated_Use_Of_Old.\n\t* sem.ads (Save_Uneval_Old): New field in Scope_Stack_Entry.\n\t* sem_attr.adb (Uneval_Old_Msg): New procedure.\n\t* sem_ch8.adb (Push_Scope): Save Uneval_Old.\n\t(Pop_Scope): Restore Uneval_Old.\n\t* sem_prag.adb (Analyze_Pragma, case Unevaluated_Use_Of_Old):\n\tImplemented.\n\t* snames.ads-tmpl: Add entries for pragma Unevaluated_Use_Of_Old\n\tAdd entries for Name_Warn, Name_Allow.\n\nFrom-SVN: r213160", "tree": {"sha": "3e0836e2432482756fcd199eecdab0169bd974f4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3e0836e2432482756fcd199eecdab0169bd974f4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/96e90ac1ec8cb9261093e434c88cced5d5675e2b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/96e90ac1ec8cb9261093e434c88cced5d5675e2b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/96e90ac1ec8cb9261093e434c88cced5d5675e2b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/96e90ac1ec8cb9261093e434c88cced5d5675e2b/comments", "author": null, "committer": null, "parents": [{"sha": "edab608853d34224b204dc42d751a3f90daabe39", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/edab608853d34224b204dc42d751a3f90daabe39", "html_url": "https://github.com/Rust-GCC/gccrs/commit/edab608853d34224b204dc42d751a3f90daabe39"}], "stats": {"total": 288, "additions": 251, "deletions": 37}, "files": [{"sha": "8b3e285f329a07e669e90071cd994160f1791e6d", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96e90ac1ec8cb9261093e434c88cced5d5675e2b/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96e90ac1ec8cb9261093e434c88cced5d5675e2b/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=96e90ac1ec8cb9261093e434c88cced5d5675e2b", "patch": "@@ -1,3 +1,18 @@\n+2014-07-29  Robert Dewar  <dewar@adacore.com>\n+\n+\t* gnat_rm.texi: Document pragma Unevaluated_Use_Of_Old.\n+\t* opt.adb: Handle Uneval_Old.\n+\t* opt.ads (Uneval_Old, Uneval_Old_Config): New variables.\n+\t* par-prag.adb: Add dummy entry for pragma Unevaluated_Use_Of_Old.\n+\t* sem.ads (Save_Uneval_Old): New field in Scope_Stack_Entry.\n+\t* sem_attr.adb (Uneval_Old_Msg): New procedure.\n+\t* sem_ch8.adb (Push_Scope): Save Uneval_Old.\n+\t(Pop_Scope): Restore Uneval_Old.\n+\t* sem_prag.adb (Analyze_Pragma, case Unevaluated_Use_Of_Old):\n+\tImplemented.\n+\t* snames.ads-tmpl: Add entries for pragma Unevaluated_Use_Of_Old\n+\tAdd entries for Name_Warn, Name_Allow.\n+\n 2014-07-29  Robert Dewar  <dewar@adacore.com>\n \n \t* sem_aggr.adb (Resolve_Array_Aggregate): Change Is_Static_Range"}, {"sha": "b0538d8fd689f2416e1f16500893453447ebe3a7", "filename": "gcc/ada/checks.adb", "status": "modified", "additions": 17, "deletions": 3, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96e90ac1ec8cb9261093e434c88cced5d5675e2b/gcc%2Fada%2Fchecks.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96e90ac1ec8cb9261093e434c88cced5d5675e2b/gcc%2Fada%2Fchecks.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fchecks.adb?ref=96e90ac1ec8cb9261093e434c88cced5d5675e2b", "patch": "@@ -5973,13 +5973,18 @@ package body Checks is\n       --  cases are like this. Notably conversions can involve two types.\n \n       if Source_Base_Type = Target_Base_Type then\n+\n+         --  Insert the explicit range check. Note that we suppress checks for\n+         --  this code, since we don't want a recursive range check popping up.\n+\n          Insert_Action (N,\n            Make_Raise_Constraint_Error (Loc,\n              Condition =>\n                Make_Not_In (Loc,\n                  Left_Opnd  => Duplicate_Subexpr (N),\n                  Right_Opnd => New_Occurrence_Of (Target_Type, Loc)),\n-             Reason => Reason));\n+             Reason => Reason),\n+           Suppress => All_Checks);\n \n       --  Next test for the case where the target type is within the bounds\n       --  of the base type of the source type, since in this case we can\n@@ -5999,6 +6004,10 @@ package body Checks is\n       --  itself does not require a check.\n \n       elsif In_Subrange_Of (Target_Type, Source_Base_Type) then\n+\n+         --  Insert the explicit range check. Note that we suppress checks for\n+         --  this code, since we don't want a recursive range check popping up.\n+\n          Insert_Action (N,\n            Make_Raise_Constraint_Error (Loc,\n              Condition =>\n@@ -6020,7 +6029,8 @@ package body Checks is\n                            Prefix =>\n                              New_Occurrence_Of (Target_Type, Loc),\n                            Attribute_Name => Name_Last)))),\n-             Reason => Reason));\n+             Reason => Reason),\n+           Suppress => All_Checks);\n \n       --  Note that at this stage we now that the Target_Base_Type is not in\n       --  the range of the Source_Base_Type (since even the Target_Type itself\n@@ -6041,6 +6051,9 @@ package body Checks is\n \n          --  Then the conversion itself is replaced by an occurrence of Tnn\n \n+         --  Insert the explicit range check. Note that we suppress checks for\n+         --  this code, since we don't want a recursive range check popping up.\n+\n          declare\n             Tnn : constant Entity_Id := Make_Temporary (Loc, 'T', N);\n \n@@ -6062,7 +6075,8 @@ package body Checks is\n                     Left_Opnd  => New_Occurrence_Of (Tnn, Loc),\n                     Right_Opnd => New_Occurrence_Of (Target_Type, Loc)),\n \n-                Reason => Reason)));\n+                Reason => Reason)),\n+              Suppress => All_Checks);\n \n             Rewrite (N, New_Occurrence_Of (Tnn, Loc));\n "}, {"sha": "8c967d3482f670a4094c7f6f0d58c118fafd3c22", "filename": "gcc/ada/einfo.adb", "status": "modified", "additions": 13, "deletions": 1, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96e90ac1ec8cb9261093e434c88cced5d5675e2b/gcc%2Fada%2Feinfo.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96e90ac1ec8cb9261093e434c88cced5d5675e2b/gcc%2Fada%2Feinfo.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.adb?ref=96e90ac1ec8cb9261093e434c88cced5d5675e2b", "patch": "@@ -562,11 +562,12 @@ package body Einfo is\n    --    Has_Static_Predicate            Flag269\n    --    Stores_Attribute_Old_Prefix     Flag270\n \n+   --    (Has_Protected)                 Flag271\n+\n    --    (unused)                        Flag1\n    --    (unused)                        Flag2\n    --    (unused)                        Flag3\n \n-   --    (unused)                        Flag271\n    --    (unused)                        Flag272\n    --    (unused)                        Flag273\n    --    (unused)                        Flag274\n@@ -1643,6 +1644,11 @@ package body Einfo is\n       return Flag155 (Id);\n    end Has_Private_Declaration;\n \n+   function Has_Protected (Id : E) return B is\n+   begin\n+      return Flag271 (Id);\n+   end Has_Protected;\n+\n    function Has_Qualified_Name (Id : E) return B is\n    begin\n       return Flag161 (Id);\n@@ -4372,6 +4378,11 @@ package body Einfo is\n       Set_Flag155 (Id, V);\n    end Set_Has_Private_Declaration;\n \n+   procedure Set_Has_Protected (Id : E; V : B := True) is\n+   begin\n+      Set_Flag271 (Id, V);\n+   end Set_Has_Protected;\n+\n    procedure Set_Has_Qualified_Name (Id : E; V : B := True) is\n    begin\n       Set_Flag161 (Id, V);\n@@ -8252,6 +8263,7 @@ package body Einfo is\n       W (\"Has_Primitive_Operations\",        Flag120 (Id));\n       W (\"Has_Private_Ancestor\",            Flag151 (Id));\n       W (\"Has_Private_Declaration\",         Flag155 (Id));\n+      W (\"Has_Protected\",                   Flag271 (Id));\n       W (\"Has_Qualified_Name\",              Flag161 (Id));\n       W (\"Has_RACW\",                        Flag214 (Id));\n       W (\"Has_Record_Rep_Clause\",           Flag65  (Id));"}, {"sha": "141ad09e311e2b4bae5ac0df4a5f8560254f45f8", "filename": "gcc/ada/einfo.ads", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96e90ac1ec8cb9261093e434c88cced5d5675e2b/gcc%2Fada%2Feinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96e90ac1ec8cb9261093e434c88cced5d5675e2b/gcc%2Fada%2Feinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.ads?ref=96e90ac1ec8cb9261093e434c88cced5d5675e2b", "patch": "@@ -1808,6 +1808,14 @@ package Einfo is\n --       indicate if a full type declaration is a completion. Used for semantic\n --       checks in E.4(18) and elsewhere.\n \n+--    Has_Protected (Flag271) [base type only]\n+--       Defined in all type entities. Set on protected types themselves, and\n+--       also (recursively) on any composite type which has a component for\n+--       which Has_Protected is set. The meaning is that an allocator for\n+--       or declaration of such an object must create the required protected\n+--       objects. Note: the flag is not set on access types, even if they\n+--       designate an object that Has_Protected.\n+\n --    Has_Qualified_Name (Flag161)\n --       Defined in all entities. Set if the name in the Chars field has\n --       been replaced by its qualified name, as used for debug output. See\n@@ -5203,6 +5211,7 @@ package Einfo is\n    --    Has_Pragma_Unreferenced_Objects     (Flag212)\n    --    Has_Predicates                      (Flag250)\n    --    Has_Primitive_Operations            (Flag120)  (base type only)\n+   --    Has_Protected                       (Flag271)  (base type only)\n    --    Has_Size_Clause                     (Flag29)\n    --    Has_Specified_Layout                (Flag100)  (base type only)\n    --    Has_Specified_Stream_Input          (Flag190)\n@@ -6551,6 +6560,7 @@ package Einfo is\n    function Has_Primitive_Operations            (Id : E) return B;\n    function Has_Private_Ancestor                (Id : E) return B;\n    function Has_Private_Declaration             (Id : E) return B;\n+   function Has_Protected                       (Id : E) return B;\n    function Has_Qualified_Name                  (Id : E) return B;\n    function Has_RACW                            (Id : E) return B;\n    function Has_Record_Rep_Clause               (Id : E) return B;\n@@ -7179,6 +7189,7 @@ package Einfo is\n    procedure Set_Has_Primitive_Operations        (Id : E; V : B := True);\n    procedure Set_Has_Private_Ancestor            (Id : E; V : B := True);\n    procedure Set_Has_Private_Declaration         (Id : E; V : B := True);\n+   procedure Set_Has_Protected                   (Id : E; V : B := True);\n    procedure Set_Has_Qualified_Name              (Id : E; V : B := True);\n    procedure Set_Has_RACW                        (Id : E; V : B := True);\n    procedure Set_Has_Record_Rep_Clause           (Id : E; V : B := True);\n@@ -7920,6 +7931,7 @@ package Einfo is\n    pragma Inline (Has_Primitive_Operations);\n    pragma Inline (Has_Private_Ancestor);\n    pragma Inline (Has_Private_Declaration);\n+   pragma Inline (Has_Protected);\n    pragma Inline (Has_Qualified_Name);\n    pragma Inline (Has_RACW);\n    pragma Inline (Has_Record_Rep_Clause);\n@@ -8395,6 +8407,7 @@ package Einfo is\n    pragma Inline (Set_Has_Primitive_Operations);\n    pragma Inline (Set_Has_Private_Ancestor);\n    pragma Inline (Set_Has_Private_Declaration);\n+   pragma Inline (Set_Has_Protected);\n    pragma Inline (Set_Has_Qualified_Name);\n    pragma Inline (Set_Has_RACW);\n    pragma Inline (Set_Has_Record_Rep_Clause);"}, {"sha": "19931e83236010b0c344a027ddb4dded623b56a5", "filename": "gcc/ada/errout.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96e90ac1ec8cb9261093e434c88cced5d5675e2b/gcc%2Fada%2Ferrout.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96e90ac1ec8cb9261093e434c88cced5d5675e2b/gcc%2Fada%2Ferrout.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ferrout.ads?ref=96e90ac1ec8cb9261093e434c88cced5d5675e2b", "patch": "@@ -836,7 +836,7 @@ package Errout is\n    procedure Remove_Warning_Messages (N : Node_Id);\n    --  Remove any warning messages corresponding to the Sloc of N or any\n    --  of its descendent nodes. No effect if no such warnings. Note that\n-   --  style messages (identified by the fact that they start with \"(style)\"\n+   --  style messages (identified by the fact that they start with \"(style)\")\n    --  are not removed by this call. Basically the idea behind this procedure\n    --  is to remove warnings about execution conditions from known dead code.\n "}, {"sha": "bd5aef94245a02e66ad01e7366e108bb38e0471a", "filename": "gcc/ada/exp_ch3.adb", "status": "modified", "additions": 19, "deletions": 10, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96e90ac1ec8cb9261093e434c88cced5d5675e2b/gcc%2Fada%2Fexp_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96e90ac1ec8cb9261093e434c88cced5d5675e2b/gcc%2Fada%2Fexp_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch3.adb?ref=96e90ac1ec8cb9261093e434c88cced5d5675e2b", "patch": "@@ -6160,12 +6160,15 @@ package body Exp_Ch3 is\n          --  If the component contains tasks, so does the array type. This may\n          --  not be indicated in the array type because the component may have\n          --  been a private type at the point of definition. Same if component\n-         --  type is controlled.\n+         --  type is controlled or contains protected objects.\n \n-         Set_Has_Task (Base, Has_Task (Comp_Typ));\n-         Set_Has_Controlled_Component (Base,\n-           Has_Controlled_Component (Comp_Typ)\n-             or else Is_Controlled (Comp_Typ));\n+         Set_Has_Task       (Base, Has_Task      (Comp_Typ));\n+         Set_Has_Protected  (Base, Has_Protected (Comp_Typ));\n+         Set_Has_Controlled_Component\n+                            (Base, Has_Controlled_Component\n+                                                 (Comp_Typ)\n+                                     or else\n+                                   Is_Controlled (Comp_Typ));\n \n          if No (Init_Proc (Base)) then\n \n@@ -6719,9 +6722,9 @@ package body Exp_Ch3 is\n          Check_Stream_Attributes (Def_Id);\n       end if;\n \n-      --  Update task and controlled component flags, because some of the\n-      --  component types may have been private at the point of the record\n-      --  declaration. Detect anonymous access-to-controlled components.\n+      --  Update task, protected, and controlled component flags, because some\n+      --  of the component types may have been private at the point of the\n+      --  record declaration. Detect anonymous access-to-controlled components.\n \n       Has_AACC := False;\n \n@@ -6731,20 +6734,26 @@ package body Exp_Ch3 is\n \n          if Has_Task (Comp_Typ) then\n             Set_Has_Task (Def_Id);\n+         end if;\n+\n+         if Has_Protected (Comp_Typ) then\n+            Set_Has_Protected (Def_Id);\n+         end if;\n \n          --  Do not set Has_Controlled_Component on a class-wide equivalent\n          --  type. See Make_CW_Equivalent_Type.\n \n-         elsif not Is_Class_Wide_Equivalent_Type (Def_Id)\n+         if not Is_Class_Wide_Equivalent_Type (Def_Id)\n            and then (Has_Controlled_Component (Comp_Typ)\n                       or else (Chars (Comp) /= Name_uParent\n                                 and then Is_Controlled (Comp_Typ)))\n          then\n             Set_Has_Controlled_Component (Def_Id);\n+         end if;\n \n          --  Non-self-referential anonymous access-to-controlled component\n \n-         elsif Ekind (Comp_Typ) = E_Anonymous_Access_Type\n+         if Ekind (Comp_Typ) = E_Anonymous_Access_Type\n            and then Needs_Finalization (Designated_Type (Comp_Typ))\n            and then Designated_Type (Comp_Typ) /= Def_Id\n          then"}, {"sha": "eb762b698986d67822d335517c6434c7710b14fc", "filename": "gcc/ada/gnat_rm.texi", "status": "modified", "additions": 55, "deletions": 0, "changes": 55, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96e90ac1ec8cb9261093e434c88cced5d5675e2b/gcc%2Fada%2Fgnat_rm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96e90ac1ec8cb9261093e434c88cced5d5675e2b/gcc%2Fada%2Fgnat_rm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_rm.texi?ref=96e90ac1ec8cb9261093e434c88cced5d5675e2b", "patch": "@@ -270,6 +270,7 @@ Implementation Defined Pragmas\n * Pragma Type_Invariant::\n * Pragma Type_Invariant_Class::\n * Pragma Unchecked_Union::\n+* Pragma Unevaluated_Use_Of_Old::\n * Pragma Unimplemented_Unit::\n * Pragma Universal_Aliasing ::\n * Pragma Universal_Data::\n@@ -1119,6 +1120,7 @@ consideration, the use of these pragmas should be minimized.\n * Pragma Type_Invariant::\n * Pragma Type_Invariant_Class::\n * Pragma Unchecked_Union::\n+* Pragma Unevaluated_Use_Of_Old::\n * Pragma Unimplemented_Unit::\n * Pragma Universal_Aliasing ::\n * Pragma Universal_Data::\n@@ -7242,6 +7244,59 @@ pragma, making it language defined, and GNAT fully implements this extended\n version in all language modes (Ada 83, Ada 95, and Ada 2005). For full\n details, consult the Ada 2012 Reference Manual, section B.3.3.\n \n+@node Pragma Unevaluated_Use_Of_Old\n+@unnumberedsec Pragma Unevaluated_Use_Of_Old\n+@cindex Attribute Old\n+@cindex Attribute Loop_Entry\n+@cindex Unevaluated_Use_Of_Old\n+@findex Unevaluated_Use_Of_Old\n+@noindent\n+Syntax:\n+\n+@smallexample @c ada\n+pragma Unevaluated_Use_Of_Old (Error | Warn | Allow);\n+@end smallexample\n+\n+@noindent\n+This pragma controls the processing of attributes Old and Loop_Entry.\n+If either of these attributes is used in a potentially unevaluated\n+expression  (e.g. the then or else parts of an if expression), then\n+normally this usage is considered illegal if the prefix of the attribute\n+is other than an entity name. The language requires this\n+behavior for Old, and GNAT copies the same rule for Loop_Entry.\n+\n+The reason for this rule is that otherwise, we can have a situation\n+where we save the Old value, and this results in an exception, even\n+though we might not evaluate the attribute. Consider this example:\n+\n+@smallexample @c ada\n+package UnevalOld is\n+   K : Character;\n+   procedure U (A : String; C : Boolean)  -- ERROR\n+     with Post => (if C then A(1)'Old = K else True);\n+end;\n+@end smallexample\n+\n+@noindent\n+If procedure U is called with a string with a lower bound of 2, and\n+C false, then an exception would be raised trying to evaluate A(1)\n+on entry even though the value would not be actually used.\n+\n+Although the rule guarantees against this possibility, it is sometimes\n+too restrictive. For example if we know that the string has a lower\n+bound of 1, then we will never raise an exception.\n+The pragma @code{Unevaluated_Use_Of_Old} can be\n+used to modify this behavior. If the argument is @code{Error} then an\n+error is given (this is the default RM behavior). If the argument is\n+@code{Warn} then the usage is allowed as legal but with a warning\n+that an exception might be raised. If the argument is @code{Allow}\n+then the usage is allowed as legal without generating a warning.\n+\n+This pragma may appear as a configuration pragma, or in a declarative\n+part or package specification. In the latter case it applies to\n+uses up to the end of the corresponding statement sequence or\n+sequence of package declarations.\n+\n @node Pragma Unimplemented_Unit\n @unnumberedsec Pragma Unimplemented_Unit\n @findex Unimplemented_Unit"}, {"sha": "68944c7cc3cf2a313b60c51dd83853178f930177", "filename": "gcc/ada/opt.adb", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96e90ac1ec8cb9261093e434c88cced5d5675e2b/gcc%2Fada%2Fopt.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96e90ac1ec8cb9261093e434c88cced5d5675e2b/gcc%2Fada%2Fopt.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fopt.adb?ref=96e90ac1ec8cb9261093e434c88cced5d5675e2b", "patch": "@@ -65,6 +65,7 @@ package body Opt is\n       Short_Descriptors_Config              := Short_Descriptors;\n       SPARK_Mode_Config                     := SPARK_Mode;\n       SPARK_Mode_Pragma_Config              := SPARK_Mode_Pragma;\n+      Uneval_Old_Config                     := Uneval_Old;\n       Use_VADS_Size_Config                  := Use_VADS_Size;\n       Warnings_As_Errors_Count_Config       := Warnings_As_Errors_Count;\n \n@@ -103,6 +104,7 @@ package body Opt is\n       Short_Descriptors              := Save.Short_Descriptors;\n       SPARK_Mode                     := Save.SPARK_Mode;\n       SPARK_Mode_Pragma              := Save.SPARK_Mode_Pragma;\n+      Uneval_Old                     := Save.Uneval_Old;\n       Use_VADS_Size                  := Save.Use_VADS_Size;\n       Warnings_As_Errors_Count       := Save.Warnings_As_Errors_Count;\n \n@@ -142,6 +144,7 @@ package body Opt is\n       Save.Short_Descriptors              := Short_Descriptors;\n       Save.SPARK_Mode                     := SPARK_Mode;\n       Save.SPARK_Mode_Pragma              := SPARK_Mode_Pragma;\n+      Save.Uneval_Old                     := Uneval_Old;\n       Save.Use_VADS_Size                  := Use_VADS_Size;\n       Save.Warnings_As_Errors_Count       := Warnings_As_Errors_Count;\n    end Save_Opt_Config_Switches;\n@@ -171,6 +174,7 @@ package body Opt is\n          External_Name_Imp_Casing    := Lowercase;\n          Optimize_Alignment          := 'O';\n          Persistent_BSS_Mode         := False;\n+         Uneval_Old                  := 'E';\n          Use_VADS_Size               := False;\n          Optimize_Alignment_Local    := True;\n \n@@ -217,6 +221,7 @@ package body Opt is\n          Persistent_BSS_Mode         := Persistent_BSS_Mode_Config;\n          SPARK_Mode                  := SPARK_Mode_Config;\n          SPARK_Mode_Pragma           := SPARK_Mode_Pragma_Config;\n+         Uneval_Old                  := Uneval_Old_Config;\n          Use_VADS_Size               := Use_VADS_Size_Config;\n          Warnings_As_Errors_Count    := Warnings_As_Errors_Count_Config;\n "}, {"sha": "4f882105364ccf303f464826785f0313d7c959a4", "filename": "gcc/ada/opt.ads", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96e90ac1ec8cb9261093e434c88cced5d5675e2b/gcc%2Fada%2Fopt.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96e90ac1ec8cb9261093e434c88cced5d5675e2b/gcc%2Fada%2Fopt.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fopt.ads?ref=96e90ac1ec8cb9261093e434c88cced5d5675e2b", "patch": "@@ -1487,6 +1487,11 @@ package Opt is\n    --  file for the compiler. Indicates that while preprocessing sources,\n    --  symbols that are not defined have the value FALSE.\n \n+   Uneval_Old : Character := 'E';\n+   --  GNAT\n+   --  Set to 'E'/'W'/'A' for use of Error/Warn/Allow in a valid pragma\n+   --  Unevaluated_Use_Of_Old.\n+\n    Unique_Error_Tag : Boolean := Tag_Errors;\n    --  GNAT\n    --  Indicates if error messages are to be prefixed by the string error:\n@@ -1952,6 +1957,10 @@ package Opt is\n    --  If a SPARK_Mode pragma appeared in the configuration pragmas (setting\n    --  SPARK_Mode_Config appropriately), then this points to the N_Pragma node.\n \n+   Uneval_Old_Config : Character;\n+   --  GNAT\n+   --  The setting of Uneval_Old from configuration pragmas\n+\n    Use_VADS_Size_Config : Boolean;\n    --  GNAT\n    --  This is the value of the configuration switch that controls the use of\n@@ -2122,6 +2131,7 @@ private\n       Short_Descriptors              : Boolean;\n       SPARK_Mode                     : SPARK_Mode_Type;\n       SPARK_Mode_Pragma              : Node_Id;\n+      Uneval_Old                     : Character;\n       Use_VADS_Size                  : Boolean;\n       Warnings_As_Errors_Count       : Natural;\n    end record;"}, {"sha": "f755611c1f60034f8d95058946aefa40055701ca", "filename": "gcc/ada/par-prag.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96e90ac1ec8cb9261093e434c88cced5d5675e2b/gcc%2Fada%2Fpar-prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96e90ac1ec8cb9261093e434c88cced5d5675e2b/gcc%2Fada%2Fpar-prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-prag.adb?ref=96e90ac1ec8cb9261093e434c88cced5d5675e2b", "patch": "@@ -1337,6 +1337,7 @@ begin\n            Pragma_Type_Invariant                 |\n            Pragma_Type_Invariant_Class           |\n            Pragma_Unchecked_Union                |\n+           Pragma_Unevaluated_Use_Of_Old         |\n            Pragma_Unimplemented_Unit             |\n            Pragma_Universal_Aliasing             |\n            Pragma_Universal_Data                 |"}, {"sha": "5a6ebcda8b599238d3a0094c6c984993669e7b5e", "filename": "gcc/ada/sem.ads", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96e90ac1ec8cb9261093e434c88cced5d5675e2b/gcc%2Fada%2Fsem.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96e90ac1ec8cb9261093e434c88cced5d5675e2b/gcc%2Fada%2Fsem.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem.ads?ref=96e90ac1ec8cb9261093e434c88cced5d5675e2b", "patch": "@@ -486,6 +486,9 @@ package Sem is\n       Save_SPARK_Mode_Pragma : Node_Id;\n       --  Setting of SPARK_Mode_Pragma on entry to restore on exit\n \n+      Save_Uneval_Old : Character;\n+      --  Setting of Uneval_Old on entry to restore on exit\n+\n       Is_Transient : Boolean;\n       --  Marks transient scopes (see Exp_Ch7 body for details)\n "}, {"sha": "1619d6f0ece1f8304e6766b1966d4ca9ef54ab82", "filename": "gcc/ada/sem_attr.adb", "status": "modified", "additions": 33, "deletions": 6, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96e90ac1ec8cb9261093e434c88cced5d5675e2b/gcc%2Fada%2Fsem_attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96e90ac1ec8cb9261093e434c88cced5d5675e2b/gcc%2Fada%2Fsem_attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_attr.adb?ref=96e90ac1ec8cb9261093e434c88cced5d5675e2b", "patch": "@@ -409,6 +409,12 @@ package body Sem_Attr is\n       --  node is rewritten with an integer literal of the given value which\n       --  is marked as static.\n \n+      procedure Uneval_Old_Msg;\n+      --  Called when Loop_Entry or Old is used in a potentially unevaluated\n+      --  expression. Generates appropriate message or warning depending on\n+      --  the setting of Opt.Uneval_Old. The caller has put the Name_Id of\n+      --  the attribute in Error_Msg_Name_1 prior to the call.\n+\n       procedure Unexpected_Argument (En : Node_Id);\n       --  Signal unexpected attribute argument (En is the argument)\n \n@@ -2264,6 +2270,31 @@ package body Sem_Attr is\n          Set_Is_Static_Expression (N, True);\n       end Standard_Attribute;\n \n+      --------------------\n+      -- Uneval_Old_Msg --\n+      --------------------\n+\n+      procedure Uneval_Old_Msg is\n+      begin\n+         case Uneval_Old is\n+            when 'E' =>\n+               Error_Attr_P\n+                 (\"prefix of attribute % that is potentially \"\n+                  & \"unevaluated must denote an entity\");\n+\n+            when 'W' =>\n+               Error_Attr_P\n+                 (\"??prefix of attribute % appears in potentially \"\n+                  & \"unevaluated context, exception may be raised\");\n+\n+            when 'A' =>\n+               null;\n+\n+            when others =>\n+               raise Program_Error;\n+         end case;\n+      end Uneval_Old_Msg;\n+\n       -------------------------\n       -- Unexpected Argument --\n       -------------------------\n@@ -4108,9 +4139,7 @@ package body Sem_Attr is\n                & \"outer loop must denote an entity\");\n \n          elsif Is_Potentially_Unevaluated (P) then\n-            Error_Attr_P\n-              (\"prefix of attribute % that is potentially \"\n-               & \"unevaluated must denote an entity\");\n+            Uneval_Old_Msg;\n          end if;\n \n          --  Finally, if the Loop_Entry attribute appears within a pragma\n@@ -4751,9 +4780,7 @@ package body Sem_Attr is\n            and then Is_Potentially_Unevaluated (N)\n            and then not Is_Entity_Name (P)\n          then\n-            Error_Attr_P\n-              (\"prefix of attribute % that is potentially unevaluated must \"\n-               & \"denote an entity\");\n+            Uneval_Old_Msg;\n          end if;\n \n          --  The attribute appears within a pre/postcondition, but refers to"}, {"sha": "9eb1618a09992513e25c23c8222f7de0e5218ef8", "filename": "gcc/ada/sem_ch3.adb", "status": "modified", "additions": 19, "deletions": 6, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96e90ac1ec8cb9261093e434c88cced5d5675e2b/gcc%2Fada%2Fsem_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96e90ac1ec8cb9261093e434c88cced5d5675e2b/gcc%2Fada%2Fsem_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch3.adb?ref=96e90ac1ec8cb9261093e434c88cced5d5675e2b", "patch": "@@ -1374,10 +1374,12 @@ package body Sem_Ch3 is\n \n       --  Note that Has_Task is always false, since the access type itself\n       --  is not a task type. See Einfo for more description on this point.\n-      --  Exactly the same consideration applies to Has_Controlled_Component.\n+      --  Exactly the same consideration applies to Has_Controlled_Component\n+      --  and to Has_Protected.\n \n-      Set_Has_Task (T, False);\n+      Set_Has_Task                 (T, False);\n       Set_Has_Controlled_Component (T, False);\n+      Set_Has_Protected            (T, False);\n \n       --  Initialize field Finalization_Master explicitly to Empty, to avoid\n       --  problems where an incomplete view of this entity has been previously\n@@ -4177,6 +4179,7 @@ package body Sem_Ch3 is\n \n       Set_Etype            (T,            Parent_Base);\n       Set_Has_Task         (T, Has_Task  (Parent_Base));\n+      Set_Has_Protected    (T, Has_Task  (Parent_Base));\n \n       Set_Convention       (T, Convention     (Parent_Type));\n       Set_First_Rep_Item   (T, First_Rep_Item (Parent_Type));\n@@ -5167,6 +5170,7 @@ package body Sem_Ch3 is\n          Set_First_Index       (Implicit_Base, First_Index (T));\n          Set_Component_Type    (Implicit_Base, Element_Type);\n          Set_Has_Task          (Implicit_Base, Has_Task (Element_Type));\n+         Set_Has_Protected     (Implicit_Base, Has_Protected (Element_Type));\n          Set_Component_Size    (Implicit_Base, Uint_0);\n          Set_Packed_Array_Impl_Type (Implicit_Base, Empty);\n          Set_Has_Controlled_Component\n@@ -5190,6 +5194,7 @@ package body Sem_Ch3 is\n          Set_First_Index              (T, First (Subtype_Marks (Def)));\n          Set_Has_Delayed_Freeze       (T, True);\n          Set_Has_Task                 (T, Has_Task      (Element_Type));\n+         Set_Has_Protected            (T, Has_Protected (Element_Type));\n          Set_Has_Controlled_Component (T, Has_Controlled_Component\n                                                         (Element_Type)\n                                             or else\n@@ -8451,9 +8456,10 @@ package body Sem_Ch3 is\n \n       Set_Scope          (Derived_Type, Current_Scope);\n \n-      Set_Ekind          (Derived_Type, Ekind    (Parent_Base));\n-      Set_Etype          (Derived_Type,           Parent_Base);\n-      Set_Has_Task       (Derived_Type, Has_Task (Parent_Base));\n+      Set_Etype          (Derived_Type,                Parent_Base);\n+      Set_Ekind          (Derived_Type, Ekind         (Parent_Base));\n+      Set_Has_Task       (Derived_Type, Has_Task      (Parent_Base));\n+      Set_Has_Protected  (Derived_Type, Has_Protected (Parent_Base));\n \n       Set_Size_Info      (Derived_Type,                 Parent_Type);\n       Set_RM_Size        (Derived_Type, RM_Size        (Parent_Type));\n@@ -12755,6 +12761,7 @@ package body Sem_Ch3 is\n       Set_Component_Size           (T1, Component_Size           (T2));\n       Set_Has_Controlled_Component (T1, Has_Controlled_Component (T2));\n       Set_Has_Non_Standard_Rep     (T1, Has_Non_Standard_Rep     (T2));\n+      Set_Has_Protected            (T1, Has_Protected            (T2));\n       Set_Has_Task                 (T1, Has_Task                 (T2));\n       Set_Is_Packed                (T1, Is_Packed                (T2));\n       Set_Has_Aliased_Components   (T1, Has_Aliased_Components   (T2));\n@@ -18762,7 +18769,9 @@ package body Sem_Ch3 is\n                Set_Class_Wide_Type\n                  (Base_Type (Full_T), Class_Wide_Type (Priv_T));\n \n-               Set_Has_Task (Class_Wide_Type (Priv_T), Has_Task (Full_T));\n+               Set_Has_Task (Class_Wide_Type (Priv_T), Has_Task      (Full_T));\n+               Set_Has_Protected\n+                            (Class_Wide_Type (Priv_T), Has_Protected (Full_T));\n             end if;\n          end;\n       end if;\n@@ -20309,6 +20318,10 @@ package body Sem_Ch3 is\n             Set_Has_Task (T);\n          end if;\n \n+         if Has_Protected (Etype (Component)) then\n+            Set_Has_Protected (T);\n+         end if;\n+\n          if Ekind (Component) /= E_Component then\n             null;\n "}, {"sha": "7f9f086ad8ce71f3a5f359af6fd4a50eb859e203", "filename": "gcc/ada/sem_ch4.adb", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96e90ac1ec8cb9261093e434c88cced5d5675e2b/gcc%2Fada%2Fsem_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96e90ac1ec8cb9261093e434c88cced5d5675e2b/gcc%2Fada%2Fsem_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch4.adb?ref=96e90ac1ec8cb9261093e434c88cced5d5675e2b", "patch": "@@ -644,7 +644,7 @@ package body Sem_Ch4 is\n             --  a similar test should be applied to an allocator with a\n             --  qualified expression ???\n \n-            if Is_Protected_Type (Type_Id) then\n+            if Has_Protected (Type_Id) then\n                Check_Restriction (No_Protected_Type_Allocators, N);\n             end if;\n \n@@ -737,11 +737,8 @@ package body Sem_Ch4 is\n \n       --  Check that an allocator of a nested access type doesn't create a\n       --  protected object when restriction No_Local_Protected_Objects applies.\n-      --  We don't have an equivalent to Has_Task for protected types, so only\n-      --  cases where the designated type itself is a protected type are\n-      --  currently checked. ???\n \n-      if Is_Protected_Type (Designated_Type (Acc_Type))\n+      if Has_Protected (Designated_Type (Acc_Type))\n         and then not Is_Library_Level_Entity (Acc_Type)\n       then\n          Check_Restriction (No_Local_Protected_Objects, N);"}, {"sha": "418e2166b4f16e06b4bc3c5d61499623b8439a59", "filename": "gcc/ada/sem_ch7.adb", "status": "modified", "additions": 8, "deletions": 5, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96e90ac1ec8cb9261093e434c88cced5d5675e2b/gcc%2Fada%2Fsem_ch7.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96e90ac1ec8cb9261093e434c88cced5d5675e2b/gcc%2Fada%2Fsem_ch7.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch7.adb?ref=96e90ac1ec8cb9261093e434c88cced5d5675e2b", "patch": "@@ -2369,11 +2369,14 @@ package body Sem_Ch7 is\n \n          if Priv_Is_Base_Type then\n             Set_Is_Controlled (Priv, Is_Controlled (Base_Type (Full)));\n-            Set_Finalize_Storage_Only (Priv, Finalize_Storage_Only\n-                                                           (Base_Type (Full)));\n-            Set_Has_Task (Priv, Has_Task (Base_Type (Full)));\n-            Set_Has_Controlled_Component (Priv, Has_Controlled_Component\n-                                                           (Base_Type (Full)));\n+            Set_Finalize_Storage_Only\n+                              (Priv, Finalize_Storage_Only\n+                                                   (Base_Type (Full)));\n+            Set_Has_Task      (Priv, Has_Task      (Base_Type (Full)));\n+            Set_Has_Protected (Priv, Has_Protected (Base_Type (Full)));\n+            Set_Has_Controlled_Component\n+                              (Priv, Has_Controlled_Component\n+                                                   (Base_Type (Full)));\n          end if;\n \n          Set_Freeze_Node (Priv, Freeze_Node (Full));"}, {"sha": "f2f03f0e39300e6d65d988b43e664df631491ebd", "filename": "gcc/ada/sem_ch8.adb", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96e90ac1ec8cb9261093e434c88cced5d5675e2b/gcc%2Fada%2Fsem_ch8.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96e90ac1ec8cb9261093e434c88cced5d5675e2b/gcc%2Fada%2Fsem_ch8.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch8.adb?ref=96e90ac1ec8cb9261093e434c88cced5d5675e2b", "patch": "@@ -7533,6 +7533,7 @@ package body Sem_Ch8 is\n       Default_Pool             := SST.Save_Default_Storage_Pool;\n       SPARK_Mode               := SST.Save_SPARK_Mode;\n       SPARK_Mode_Pragma        := SST.Save_SPARK_Mode_Pragma;\n+      Uneval_Old               := SST.Save_Uneval_Old;\n \n       if Debug_Flag_W then\n          Write_Str (\"<-- exiting scope: \");\n@@ -7605,6 +7606,7 @@ package body Sem_Ch8 is\n          SST.Save_Default_Storage_Pool     := Default_Pool;\n          SST.Save_SPARK_Mode               := SPARK_Mode;\n          SST.Save_SPARK_Mode_Pragma        := SPARK_Mode_Pragma;\n+         SST.Save_Uneval_Old               := Uneval_Old;\n \n          if Scope_Stack.Last > Scope_Stack.First then\n             SST.Component_Alignment_Default := Scope_Stack.Table"}, {"sha": "82fa38a99178f4cf8ffebe2bcf852eb81c4500f3", "filename": "gcc/ada/sem_ch9.adb", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96e90ac1ec8cb9261093e434c88cced5d5675e2b/gcc%2Fada%2Fsem_ch9.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96e90ac1ec8cb9261093e434c88cced5d5675e2b/gcc%2Fada%2Fsem_ch9.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch9.adb?ref=96e90ac1ec8cb9261093e434c88cced5d5675e2b", "patch": "@@ -1912,6 +1912,11 @@ package body Sem_Ch9 is\n            or else Has_Task (Etype (E))\n          then\n             Set_Has_Task (Current_Scope);\n+\n+         elsif Is_Protected_Type (Etype (E))\n+           or else Has_Protected (Etype (E))\n+         then\n+            Set_Has_Protected (Current_Scope);\n          end if;\n \n          Next_Entity (E);\n@@ -1958,6 +1963,7 @@ package body Sem_Ch9 is\n \n       Set_Ekind              (T, E_Protected_Type);\n       Set_Is_First_Subtype   (T, True);\n+      Set_Has_Protected      (T, True);\n       Init_Size_Align        (T);\n       Set_Etype              (T, T);\n       Set_Has_Delayed_Freeze (T, True);"}, {"sha": "136a664ffe9ca0e9107847daf470401038839e5c", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96e90ac1ec8cb9261093e434c88cced5d5675e2b/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96e90ac1ec8cb9261093e434c88cced5d5675e2b/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=96e90ac1ec8cb9261093e434c88cced5d5675e2b", "patch": "@@ -21182,6 +21182,30 @@ package body Sem_Prag is\n             Ada_2005_Pragma;\n             Process_Suppress_Unsuppress (False);\n \n+         ----------------------------\n+         -- Unevaluated_Use_Of_Old --\n+         ----------------------------\n+\n+         --  pragma Unevaluated_Use_Of_Old (Error | Warn | Allow);\n+\n+         when Pragma_Unevaluated_Use_Of_Old =>\n+            GNAT_Pragma;\n+            Check_Arg_Count (1);\n+            Check_No_Identifiers;\n+            Check_Arg_Is_One_Of (Arg1, Name_Error, Name_Warn, Name_Allow);\n+\n+            --  Suppress/Unsuppress can appear as a configuration pragma, or in\n+            --  a declarative part or a package spec.\n+\n+            if not Is_Configuration_Pragma then\n+               Check_Is_In_Decl_Part_Or_Package_Spec;\n+            end if;\n+\n+            --  Store proper setting of Uneval_Old\n+\n+            Get_Name_String (Chars (Get_Pragma_Arg (Arg1)));\n+            Uneval_Old := Fold_Upper (Name_Buffer (1));\n+\n          -------------------\n          -- Use_VADS_Size --\n          -------------------\n@@ -25442,6 +25466,7 @@ package body Sem_Prag is\n       Pragma_Unreferenced_Objects           => -1,\n       Pragma_Unreserve_All_Interrupts       => -1,\n       Pragma_Unsuppress                     =>  0,\n+      Pragma_Unevaluated_Use_Of_Old         =>  0,\n       Pragma_Use_VADS_Size                  => -1,\n       Pragma_Validity_Checks                => -1,\n       Pragma_Volatile                       =>  0,"}, {"sha": "8315566a155aada9dae2b802c2bc9e9b2c101257", "filename": "gcc/ada/snames.ads-tmpl", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96e90ac1ec8cb9261093e434c88cced5d5675e2b/gcc%2Fada%2Fsnames.ads-tmpl", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96e90ac1ec8cb9261093e434c88cced5d5675e2b/gcc%2Fada%2Fsnames.ads-tmpl", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsnames.ads-tmpl?ref=96e90ac1ec8cb9261093e434c88cced5d5675e2b", "patch": "@@ -442,6 +442,7 @@ package Snames is\n    Name_Suppress                       : constant Name_Id := N + $;\n    Name_Suppress_Exception_Locations   : constant Name_Id := N + $; -- GNAT\n    Name_Task_Dispatching_Policy        : constant Name_Id := N + $;\n+   Name_Unevaluated_Use_Of_Old         : constant Name_Id := N + $; -- GNAT\n    Name_Universal_Data                 : constant Name_Id := N + $; -- AAMP\n    Name_Unsuppress                     : constant Name_Id := N + $; -- Ada 05\n    Name_Use_VADS_Size                  : constant Name_Id := N + $; -- GNAT\n@@ -687,6 +688,7 @@ package Snames is\n \n    --  Other special names used in processing pragmas\n \n+   Name_Allow                          : constant Name_Id := N + $;\n    Name_Amount                         : constant Name_Id := N + $;\n    Name_As_Is                          : constant Name_Id := N + $;\n    Name_Assertion                      : constant Name_Id := N + $;\n@@ -811,6 +813,7 @@ package Snames is\n    Name_Vector                         : constant Name_Id := N + $;\n    Name_VMS                            : constant Name_Id := N + $;\n    Name_Vtable_Ptr                     : constant Name_Id := N + $;\n+   Name_Warn                           : constant Name_Id := N + $;\n    Name_Working_Storage                : constant Name_Id := N + $;\n \n    --  Names of recognized attributes. The entries with the comment \"Ada 83\"\n@@ -1791,6 +1794,7 @@ package Snames is\n       Pragma_Suppress,\n       Pragma_Suppress_Exception_Locations,\n       Pragma_Task_Dispatching_Policy,\n+      Pragma_Unevaluated_Use_Of_Old,\n       Pragma_Universal_Data,\n       Pragma_Unsuppress,\n       Pragma_Use_VADS_Size,"}]}