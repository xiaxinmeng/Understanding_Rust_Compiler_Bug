{"sha": "87fb500b9377df6eddfc8efd0b5aa186e075951e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODdmYjUwMGI5Mzc3ZGY2ZWRkZmM4ZWZkMGI1YWExODZlMDc1OTUxZQ==", "commit": {"author": {"name": "Rainer Orth", "email": "ro@CeBiTec.Uni-Bielefeld.DE", "date": "2011-10-19T16:02:30Z"}, "committer": {"name": "Rainer Orth", "email": "ro@gcc.gnu.org", "date": "2011-10-19T16:02:30Z"}, "message": "Properly test for madvise on Solaris 10 (PR bootstrap/50777)\n\n\tPR bootstrap/50777\n\t* configure.ac: Save and restore CXXFLAGS around\n\tgcc_AC_CHECK_DECLS uses.\n\tCheck for madvise() declaration with g++ if --enable-build-with-cxx.\n\t* configure: Regenerate.\n\t* config.in: Regenerate.\n\t* ggc-page.c (USING_MADVISE): Also check HAVE_DECL_MADVISE.\n\nFrom-SVN: r180195", "tree": {"sha": "ff885ca14bd208f4f68df8f5bac6ccd4ad83387b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ff885ca14bd208f4f68df8f5bac6ccd4ad83387b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/87fb500b9377df6eddfc8efd0b5aa186e075951e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/87fb500b9377df6eddfc8efd0b5aa186e075951e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/87fb500b9377df6eddfc8efd0b5aa186e075951e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/87fb500b9377df6eddfc8efd0b5aa186e075951e/comments", "author": {"login": "rorth", "id": 3930951, "node_id": "MDQ6VXNlcjM5MzA5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/3930951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rorth", "html_url": "https://github.com/rorth", "followers_url": "https://api.github.com/users/rorth/followers", "following_url": "https://api.github.com/users/rorth/following{/other_user}", "gists_url": "https://api.github.com/users/rorth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rorth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rorth/subscriptions", "organizations_url": "https://api.github.com/users/rorth/orgs", "repos_url": "https://api.github.com/users/rorth/repos", "events_url": "https://api.github.com/users/rorth/events{/privacy}", "received_events_url": "https://api.github.com/users/rorth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "09dbcd96d6b668e325e3b34297648d12f25e51b9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/09dbcd96d6b668e325e3b34297648d12f25e51b9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/09dbcd96d6b668e325e3b34297648d12f25e51b9"}], "stats": {"total": 172, "additions": 166, "deletions": 6}, "files": [{"sha": "e67dcbf24c0b7c812789fc3937a47fb8cae83ce1", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87fb500b9377df6eddfc8efd0b5aa186e075951e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87fb500b9377df6eddfc8efd0b5aa186e075951e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=87fb500b9377df6eddfc8efd0b5aa186e075951e", "patch": "@@ -1,3 +1,13 @@\n+2011-10-19  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n+\n+\tPR bootstrap/50777\n+\t* configure.ac: Save and restore CXXFLAGS around\n+\tgcc_AC_CHECK_DECLS uses.\n+\tCheck for madvise() declaration with g++ if --enable-build-with-cxx.\n+\t* configure: Regenerate.\n+\t* config.in: Regenerate.\n+\t* ggc-page.c (USING_MADVISE): Also check HAVE_DECL_MADVISE.\n+\n 2011-10-19  Alexandre Oliva  <aoliva@redhat.com>\n \n \tPR debug/49310"}, {"sha": "3950e289b7c43dffd98c0674ffececb78c1970ef", "filename": "gcc/config.in", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87fb500b9377df6eddfc8efd0b5aa186e075951e/gcc%2Fconfig.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87fb500b9377df6eddfc8efd0b5aa186e075951e/gcc%2Fconfig.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.in?ref=87fb500b9377df6eddfc8efd0b5aa186e075951e", "patch": "@@ -753,6 +753,13 @@\n #endif\n \n \n+/* Define to 1 if we found a declaration for 'madvise', otherwise define to 0.\n+   */\n+#ifndef USED_FOR_TARGET\n+#undef HAVE_DECL_MADVISE\n+#endif\n+\n+\n /* Define to 1 if we found a declaration for 'malloc', otherwise define to 0.\n    */\n #ifndef USED_FOR_TARGET"}, {"sha": "0540430dc2075c1f7913dcd8459cea9052f10086", "filename": "gcc/configure", "status": "modified", "additions": 127, "deletions": 3, "changes": 130, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87fb500b9377df6eddfc8efd0b5aa186e075951e/gcc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87fb500b9377df6eddfc8efd0b5aa186e075951e/gcc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure?ref=87fb500b9377df6eddfc8efd0b5aa186e075951e", "patch": "@@ -10415,6 +10415,8 @@ $as_echo \"#define HAVE_LANGINFO_CODESET 1\" >>confdefs.h\n # We will need to find libiberty.h and ansidecl.h\n saved_CFLAGS=\"$CFLAGS\"\n CFLAGS=\"$CFLAGS -I${srcdir} -I${srcdir}/../include\"\n+saved_CXXFLAGS=\"$CXXFLAGS\"\n+CXXFLAGS=\"$CXXFLAGS -I${srcdir} -I${srcdir}/../include\"\n for ac_func in getenv atol asprintf sbrk abort atof getcwd getwd \\\n \tstrsignal strstr strverscmp \\\n \terrno snprintf vsnprintf vasprintf malloc realloc calloc \\\n@@ -10719,6 +10721,127 @@ fi\n done\n \n \n+# g++ on Solaris 10+ defines _XOPEN_SOURCE=600, which hides the madvise()\n+# prototype.\n+if test \"$ENABLE_BUILD_WITH_CXX\" = \"yes\"; then :\n+  ac_ext=cpp\n+ac_cpp='$CXXCPP $CPPFLAGS'\n+ac_compile='$CXX -c $CXXFLAGS $CPPFLAGS conftest.$ac_ext >&5'\n+ac_link='$CXX -o conftest$ac_exeext $CXXFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'\n+ac_compiler_gnu=$ac_cv_cxx_compiler_gnu\n+\n+   for ac_func in madvise\n+do\n+  ac_tr_decl=`$as_echo \"HAVE_DECL_$ac_func\" | $as_tr_cpp`\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether $ac_func is declared\" >&5\n+$as_echo_n \"checking whether $ac_func is declared... \" >&6; }\n+if { as_var=gcc_cv_have_decl_$ac_func; eval \"test \\\"\\${$as_var+set}\\\" = set\"; }; then :\n+  $as_echo_n \"(cached) \" >&6\n+else\n+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+#undef $ac_tr_decl\n+#define $ac_tr_decl 1\n+\n+     #include \"ansidecl.h\"\n+     #include \"system.h\"\n+\n+\n+int\n+main ()\n+{\n+#ifndef $ac_func\n+char *(*pfn) = (char *(*)) $ac_func ;\n+#endif\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+if ac_fn_cxx_try_compile \"$LINENO\"; then :\n+  eval \"gcc_cv_have_decl_$ac_func=yes\"\n+else\n+  eval \"gcc_cv_have_decl_$ac_func=no\"\n+fi\n+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n+fi\n+\n+if eval \"test \\\"`echo '$gcc_cv_have_decl_'$ac_func`\\\" = yes\"; then\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: yes\" >&5\n+$as_echo \"yes\" >&6; } ; cat >>confdefs.h <<_ACEOF\n+#define $ac_tr_decl 1\n+_ACEOF\n+\n+else\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n+$as_echo \"no\" >&6; } ; cat >>confdefs.h <<_ACEOF\n+#define $ac_tr_decl 0\n+_ACEOF\n+\n+fi\n+\n+done\n+\n+   ac_ext=c\n+ac_cpp='$CPP $CPPFLAGS'\n+ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'\n+ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'\n+ac_compiler_gnu=$ac_cv_c_compiler_gnu\n+\n+else\n+  for ac_func in madvise\n+do\n+  ac_tr_decl=`$as_echo \"HAVE_DECL_$ac_func\" | $as_tr_cpp`\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether $ac_func is declared\" >&5\n+$as_echo_n \"checking whether $ac_func is declared... \" >&6; }\n+if { as_var=gcc_cv_have_decl_$ac_func; eval \"test \\\"\\${$as_var+set}\\\" = set\"; }; then :\n+  $as_echo_n \"(cached) \" >&6\n+else\n+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+#undef $ac_tr_decl\n+#define $ac_tr_decl 1\n+\n+     #include \"ansidecl.h\"\n+     #include \"system.h\"\n+\n+\n+int\n+main ()\n+{\n+#ifndef $ac_func\n+char *(*pfn) = (char *(*)) $ac_func ;\n+#endif\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+if ac_fn_c_try_compile \"$LINENO\"; then :\n+  eval \"gcc_cv_have_decl_$ac_func=yes\"\n+else\n+  eval \"gcc_cv_have_decl_$ac_func=no\"\n+fi\n+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n+fi\n+\n+if eval \"test \\\"`echo '$gcc_cv_have_decl_'$ac_func`\\\" = yes\"; then\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: yes\" >&5\n+$as_echo \"yes\" >&6; } ; cat >>confdefs.h <<_ACEOF\n+#define $ac_tr_decl 1\n+_ACEOF\n+\n+else\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n+$as_echo \"no\" >&6; } ; cat >>confdefs.h <<_ACEOF\n+#define $ac_tr_decl 0\n+_ACEOF\n+\n+fi\n+\n+done\n+\n+\n+fi\n+\n # More time-related stuff.\n { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for struct tms\" >&5\n $as_echo_n \"checking for struct tms... \" >&6; }\n@@ -10795,8 +10918,9 @@ $as_echo \"#define HAVE_CLOCK_T 1\" >>confdefs.h\n \n fi\n \n-# Restore CFLAGS from before the gcc_AC_NEED_DECLARATIONS tests.\n+# Restore CFLAGS, CXXFLAGS from before the gcc_AC_NEED_DECLARATIONS tests.\n CFLAGS=\"$saved_CFLAGS\"\n+CXXFLAGS=\"$saved_CXXFLAGS\"\n \n # Check whether --enable-initfini-array was given.\n if test \"${enable_initfini_array+set}\" = set; then :\n@@ -17948,7 +18072,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 17951 \"configure\"\n+#line 18075 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -18054,7 +18178,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 18057 \"configure\"\n+#line 18181 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H"}, {"sha": "d63acea68f5c7afc434adeee03f5828ee7558593", "filename": "gcc/configure.ac", "status": "modified", "additions": 19, "deletions": 1, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87fb500b9377df6eddfc8efd0b5aa186e075951e/gcc%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87fb500b9377df6eddfc8efd0b5aa186e075951e/gcc%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure.ac?ref=87fb500b9377df6eddfc8efd0b5aa186e075951e", "patch": "@@ -1094,6 +1094,8 @@ AM_LANGINFO_CODESET\n # We will need to find libiberty.h and ansidecl.h\n saved_CFLAGS=\"$CFLAGS\"\n CFLAGS=\"$CFLAGS -I${srcdir} -I${srcdir}/../include\"\n+saved_CXXFLAGS=\"$CXXFLAGS\"\n+CXXFLAGS=\"$CXXFLAGS -I${srcdir} -I${srcdir}/../include\"\n gcc_AC_CHECK_DECLS(getenv atol asprintf sbrk abort atof getcwd getwd \\\n \tstrsignal strstr strverscmp \\\n \terrno snprintf vsnprintf vasprintf malloc realloc calloc \\\n@@ -1146,6 +1148,21 @@ gcc_AC_CHECK_DECLS(sigaltstack, , ,[\n #include <signal.h>\n ])\n \n+# g++ on Solaris 10+ defines _XOPEN_SOURCE=600, which hides the madvise()\n+# prototype.\n+AS_IF([test \"$ENABLE_BUILD_WITH_CXX\" = \"yes\"],\n+  [AC_LANG_PUSH([C++])\n+   gcc_AC_CHECK_DECLS(madvise, , ,[\n+     #include \"ansidecl.h\"\n+     #include \"system.h\"\n+   ])\n+   AC_LANG_POP([C++])],\n+  [gcc_AC_CHECK_DECLS(madvise, , ,[\n+     #include \"ansidecl.h\"\n+     #include \"system.h\"\n+   ])\n+])\n+\n # More time-related stuff.\n AC_CACHE_CHECK(for struct tms, ac_cv_struct_tms, [\n AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[\n@@ -1172,8 +1189,9 @@ if test $gcc_cv_type_clock_t = yes; then\n   [Define if <time.h> defines clock_t.])\n fi\n \n-# Restore CFLAGS from before the gcc_AC_NEED_DECLARATIONS tests.\n+# Restore CFLAGS, CXXFLAGS from before the gcc_AC_NEED_DECLARATIONS tests.\n CFLAGS=\"$saved_CFLAGS\"\n+CXXFLAGS=\"$saved_CXXFLAGS\"\n \n gcc_AC_INITFINI_ARRAY\n "}, {"sha": "617a49348d77dd3155f336e1f8d6ed8787c0af9f", "filename": "gcc/ggc-page.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87fb500b9377df6eddfc8efd0b5aa186e075951e/gcc%2Fggc-page.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87fb500b9377df6eddfc8efd0b5aa186e075951e/gcc%2Fggc-page.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fggc-page.c?ref=87fb500b9377df6eddfc8efd0b5aa186e075951e", "patch": "@@ -1,6 +1,6 @@\n /* \"Bag-of-pages\" garbage collector for the GNU compiler.\n    Copyright (C) 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2007, 2008, 2009,\n-   2010 Free Software Foundation, Inc.\n+   2010, 2011 Free Software Foundation, Inc.\n \n This file is part of GCC.\n \n@@ -50,7 +50,8 @@ along with GCC; see the file COPYING3.  If not see\n #define USING_MALLOC_PAGE_GROUPS\n #endif\n \n-#if defined(HAVE_MADVISE) && defined(MADV_DONTNEED) && defined(USING_MMAP)\n+#if defined(HAVE_MADVISE) && HAVE_DECL_MADVISE && defined(MADV_DONTNEED) \\\n+    && defined(USING_MMAP)\n # define USING_MADVISE\n #endif\n "}]}