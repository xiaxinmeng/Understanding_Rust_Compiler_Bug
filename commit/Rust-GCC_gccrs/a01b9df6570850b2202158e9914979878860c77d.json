{"sha": "a01b9df6570850b2202158e9914979878860c77d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTAxYjlkZjY1NzA4NTBiMjIwMjE1OGU5OTE0OTc5ODc4ODYwYzc3ZA==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-08-02T13:16:09Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-08-02T13:16:09Z"}, "message": "[multiple changes]\n\n2011-08-02  Robert Dewar  <dewar@adacore.com>\n\n\t* sem_attr.adb: Minor reformatting.\n\n2011-08-02  Ed Falis  <falis@adacore.com>\n\n\t* init.c: Revert previous change.\n\n2011-08-02  Robert Dewar  <dewar@adacore.com>\n\n\t* einfo.adb (Has_Default_Aspect): Replaces Has_Default_Value\n\t(Has_Default_Component_Value): Removed\n\t* einfo.ads Comment updates\n\t(Has_Default_Aspect): Replaces Has_Default_Value\n\t(Has_Default_Component_Value): Removed\n\t* exp_ch13.adb\n\t(Expand_N_Freeze_Entity): Handle Default[_Component]_Value aspects\n\t* exp_ch3.adb\n\t(Build_Array_Init_Proc): Handle Default_[Component_]Value aspects\n\t(Get_Simple_Init_Val): Handle Default_Value aspect\n\t(Needs_Simple_Initialization): Handle Default_Value aspect\n\t* exp_ch3.ads: Needs_Simple_Initialization\n\t* freeze.adb (Freeze_Entity): Handle Default_[Component_]Value aspect\n\t* par-prag.adb (Pragma_Default[_Component]Value) Removed\n\t* sem_ch13.adb\n\t(Analyze_Aspect_Specifications): Fix Default[_Component]_Value aspects\n\t* sem_prag.adb (Pragma_Default[_Component]Value) Removed\n\t* snames.ads-tmpl (Pragma_Default[_Component]Value) Removed\n\n2011-08-02  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_ch5.adb (Analyze_Iterator_Specification): use base type to locate\n\tpackage containing iteration primitives.\n\texp_ch5.adb (Expand_Iterator_Loop): ditto.\n\nFrom-SVN: r177147", "tree": {"sha": "773eb151a7ff5a482f17f55044345839ad0b89d3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/773eb151a7ff5a482f17f55044345839ad0b89d3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a01b9df6570850b2202158e9914979878860c77d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a01b9df6570850b2202158e9914979878860c77d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a01b9df6570850b2202158e9914979878860c77d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a01b9df6570850b2202158e9914979878860c77d/comments", "author": null, "committer": null, "parents": [{"sha": "75c907757cbfa48b37eaee5fde2769eae2fd204d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/75c907757cbfa48b37eaee5fde2769eae2fd204d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/75c907757cbfa48b37eaee5fde2769eae2fd204d"}], "stats": {"total": 714, "additions": 348, "deletions": 366}, "files": [{"sha": "09f5a9552c2a011506449615570b9a59715e0315", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 31, "deletions": 5, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a01b9df6570850b2202158e9914979878860c77d/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a01b9df6570850b2202158e9914979878860c77d/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=a01b9df6570850b2202158e9914979878860c77d", "patch": "@@ -1,3 +1,34 @@\n+2011-08-02  Robert Dewar  <dewar@adacore.com>\n+\n+\t* sem_attr.adb: Minor reformatting.\n+\n+2011-08-02  Robert Dewar  <dewar@adacore.com>\n+\n+\t* einfo.adb (Has_Default_Aspect): Replaces Has_Default_Value\n+\t(Has_Default_Component_Value): Removed\n+\t* einfo.ads Comment updates\n+\t(Has_Default_Aspect): Replaces Has_Default_Value\n+\t(Has_Default_Component_Value): Removed\n+\t* exp_ch13.adb\n+\t(Expand_N_Freeze_Entity): Handle Default[_Component]_Value aspects\n+\t* exp_ch3.adb\n+\t(Build_Array_Init_Proc): Handle Default_[Component_]Value aspects\n+\t(Get_Simple_Init_Val): Handle Default_Value aspect\n+\t(Needs_Simple_Initialization): Handle Default_Value aspect\n+\t* exp_ch3.ads: Needs_Simple_Initialization\n+\t* freeze.adb (Freeze_Entity): Handle Default_[Component_]Value aspect\n+\t* par-prag.adb (Pragma_Default[_Component]Value) Removed\n+\t* sem_ch13.adb\n+\t(Analyze_Aspect_Specifications): Fix Default[_Component]_Value aspects\n+\t* sem_prag.adb (Pragma_Default[_Component]Value) Removed\n+\t* snames.ads-tmpl (Pragma_Default[_Component]Value) Removed\n+\n+2011-08-02  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_ch5.adb (Analyze_Iterator_Specification): use base type to locate\n+\tpackage containing iteration primitives.\n+\texp_ch5.adb (Expand_Iterator_Loop): ditto.\n+\n 2011-08-02  Ed Schonberg  <schonberg@adacore.com>\n \n \t* sem_ch5.adb (Analyze_Iteration_Scheme): For an Ada2012 iterator with\n@@ -182,11 +213,6 @@\n \t* s-stusta.adb (Print): Make sure Pos is always initialized to a\n \tsuitable value.\n \n-2011-08-02  Ed Falis  <falis@adacore.com>\n-\n-\t* init.c: Fix conditional compilation so that the fp initialization is\n-\tpeformed for the MILS VxWorks Guest OS.\n-\n 2011-08-02  Geert Bosch  <bosch@adacore.com>\n \n \t* a-calfor.adb (Image): Simplify, removing unnecessary uses of 'Image."}, {"sha": "fedf63b70dae39da87a833e20b00befae070faf3", "filename": "gcc/ada/einfo.adb", "status": "modified", "additions": 10, "deletions": 22, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a01b9df6570850b2202158e9914979878860c77d/gcc%2Fada%2Feinfo.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a01b9df6570850b2202158e9914979878860c77d/gcc%2Fada%2Feinfo.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.adb?ref=a01b9df6570850b2202158e9914979878860c77d", "patch": "@@ -284,7 +284,7 @@ package body Einfo is\n    --    Referenced_As_LHS               Flag36\n    --    Is_Known_Non_Null               Flag37\n    --    Can_Never_Be_Null               Flag38\n-   --    Has_Default_Value               Flag39\n+   --    Has_Default_Aspect              Flag39\n    --    Body_Needed_For_SAL             Flag40\n \n    --    Treat_As_Volatile               Flag41\n@@ -408,7 +408,6 @@ package body Einfo is\n    --    Is_Compilation_Unit             Flag149\n    --    Has_Pragma_Elaborate_Body       Flag150\n \n-   --    Has_Default_Component_Value     Flag151\n    --    Entry_Accepted                  Flag152\n    --    Is_Obsolescent                  Flag153\n    --    Has_Per_Object_Constraint       Flag154\n@@ -518,6 +517,7 @@ package body Einfo is\n    --    Is_Safe_To_Reevaluate           Flag249\n    --    Has_Predicates                  Flag250\n \n+   --    (unused)                        Flag151\n    --    (unused)                        Flag251\n    --    (unused)                        Flag252\n    --    (unused)                        Flag253\n@@ -1227,17 +1227,10 @@ package body Einfo is\n       return Flag119 (Id);\n    end Has_Convention_Pragma;\n \n-   function Has_Default_Component_Value (Id : E) return B is\n+   function Has_Default_Aspect (Id : E) return B is\n    begin\n-      pragma Assert (Is_Array_Type (Id));\n-      return Flag151 (Base_Type (Id));\n-   end Has_Default_Component_Value;\n-\n-   function Has_Default_Value (Id : E) return B is\n-   begin\n-      pragma Assert (Is_Scalar_Type (Id));\n       return Flag39 (Base_Type (Id));\n-   end Has_Default_Value;\n+   end Has_Default_Aspect;\n \n    function Has_Delayed_Aspects (Id : E) return B is\n    begin\n@@ -3687,17 +3680,13 @@ package body Einfo is\n       Set_Flag119 (Id, V);\n    end Set_Has_Convention_Pragma;\n \n-   procedure Set_Has_Default_Component_Value (Id : E; V : B := True) is\n+   procedure Set_Has_Default_Aspect (Id : E; V : B := True) is\n    begin\n-      pragma Assert (Is_Array_Type (Id) and then Is_Base_Type (Id));\n-      Set_Flag151 (Id, V);\n-   end Set_Has_Default_Component_Value;\n-\n-   procedure Set_Has_Default_Value (Id : E; V : B := True) is\n-   begin\n-      pragma Assert (Is_Scalar_Type (Id) and then Is_Base_Type (Id));\n+      pragma Assert\n+        ((Is_Scalar_Type (Id) or else Is_Array_Type (Id))\n+           and then Is_Base_Type (Id));\n       Set_Flag39 (Id, V);\n-   end Set_Has_Default_Value;\n+   end Set_Has_Default_Aspect;\n \n    procedure Set_Has_Delayed_Aspects (Id : E; V : B := True) is\n    begin\n@@ -7379,8 +7368,7 @@ package body Einfo is\n       W (\"Has_Controlled_Component\",        Flag43  (Id));\n       W (\"Has_Controlling_Result\",          Flag98  (Id));\n       W (\"Has_Convention_Pragma\",           Flag119 (Id));\n-      W (\"Has_Default_Component_Value\",     Flag151 (Id));\n-      W (\"Has_Default_Value\",               Flag39  (Id));\n+      W (\"Has_Default_Aspect\",              Flag39  (Id));\n       W (\"Has_Delayed_Aspects\",             Flag200 (Id));\n       W (\"Has_Delayed_Freeze\",              Flag18  (Id));\n       W (\"Has_Discriminants\",               Flag5   (Id));"}, {"sha": "b319cf4b578d477e4c7ddda0b723a958de9f500d", "filename": "gcc/ada/einfo.ads", "status": "modified", "additions": 29, "deletions": 44, "changes": 73, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a01b9df6570850b2202158e9914979878860c77d/gcc%2Fada%2Feinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a01b9df6570850b2202158e9914979878860c77d/gcc%2Fada%2Feinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.ads?ref=a01b9df6570850b2202158e9914979878860c77d", "patch": "@@ -462,15 +462,15 @@ package Einfo is\n --       the value of the entry barrier.\n \n --    Base_Type (synthesized)\n---       Applies to all type entities. Returns the base type of a type or\n---       subtype. The base type of a type is the type itself. The base type\n---       of a subtype is the type that it constrains (which is always a type\n---       entity, not some other subtype). Note that in the case of a subtype\n---       of a private type, it is possible for the base type attribute to\n---       return a private type, even if the subtype to which it applies is\n---       non-private. See also Implementation_Base_Type. Note: it is allowed\n---       to apply Base_Type to other than a type, in which case it simply\n---       returns the entity unchanged.\n+--       Applies to all type and subtype entities. Returns the base type of a\n+--       type or subtype. The base type of a type is the type itself. The base\n+--       type of a subtype is the type that it constrains (which is always\n+--       a type entity, not some other subtype). Note that in the case of a\n+--       subtype of a private type, it is possible for the base type attribute\n+--       to return a private type, even if the subtype to which it applies is\n+--       non-private. See also Implementation_Base_Type. Note: it is allowed to\n+--       apply Base_Type to other than a type, in which case it simply returns\n+--       the entity unchanged.\n \n --    Block_Node (Node11)\n --       Present in block entities. Points to the identifier in the\n@@ -1407,10 +1407,10 @@ package Einfo is\n --       function of a tagged type which can dispatch on result.\n \n --    Has_Controlled_Component (Flag43) [base type only]\n---       Present in all entities. Set only for composite type entities which\n---       contain a component that either is a controlled type, or itself\n---       contains controlled component (i.e. either Has_Controlled_Component\n---       or Is_Controlled is set for at least one component).\n+--       Present in all type and subtype entities. Set only for composite type\n+--       entities which contain a component that either is a controlled type,\n+--       or itself contains controlled component (i.e. either Is_Controlled or\n+--       Has_Controlled_Component is set for at least one component).\n \n --    Has_Convention_Pragma (Flag119)\n --       Present in all entities. Set true for an entity for which a valid\n@@ -1428,17 +1428,11 @@ package Einfo is\n --       node must be generated for the entity at its freezing point. See\n --       separate section (\"Delayed Freezing and Elaboration\") for details.\n \n---    Has_Default_Component_Value (Flag151) [root type only]\n---       Present in array types. Set on a base type to indicate that the base\n---       type and all its subtypes have a Default_Component_Value aspect. If\n---       this flag is True, then there will be a pragma Default_Component_Value\n---       chained to the Rep_Item list for the base type.\n-\n---    Has_Default_Value (Flag39) [base type only]\n---       Present in scalar types. Set on a base type to indicate that the base\n---       type and all its subtypes have a Default_Value aspect. If this flag is\n---       True, then there will always be a pragma Default_Value chained to the\n---       Rep_Item list for the base type.\n+--    Has_Default_Aspect (Flag39) [base type only]\n+--       Present in entities for types and subtypes, set for scalar types with\n+--       a Default_Value aspect and array types with a Default_Component_Value\n+--       apsect. If this flag is set, then a corresponding aspect specification\n+--       node will be present on the rep item chain for the entity.\n \n --    Has_Discriminants (Flag5)\n --       Present in all types and subtypes. For types that are allowed to have\n@@ -1650,9 +1644,9 @@ package Einfo is\n --       case since we allow multiple occurrences of this pragma anyway.\n \n --    Has_Pragma_Pack (Flag121) [implementation base type only]\n---       Present in all entities. If set, indicates that a valid pragma Pack\n---       was given for the type. Note that this flag is not inherited by\n---       derived type. See also the Is_Packed flag.\n+--       Present in array and record type entities. If set, indicates that a\n+--       valid pragma Pack was given for the type. Note that this flag is not\n+--       inherited by derived type. See also the Is_Packed flag.\n \n --    Has_Pragma_Pure (Flag203)\n --       Present in all entities. If set, indicates that a valid pragma Pure\n@@ -4690,7 +4684,6 @@ package Einfo is\n    --    Checks_May_Be_Suppressed            (Flag31)\n    --    Debug_Info_Off                      (Flag166)\n    --    Has_Anon_Block_Suffix               (Flag201)\n-   --    Has_Controlled_Component            (Flag43)   (base type only)\n    --    Has_Convention_Pragma               (Flag119)\n    --    Has_Delayed_Aspects                 (Flag200)\n    --    Has_Delayed_Freeze                  (Flag18)\n@@ -4701,7 +4694,6 @@ package Einfo is\n    --    Has_Pragma_Elaborate_Body           (Flag150)\n    --    Has_Pragma_Inline                   (Flag157)\n    --    Has_Pragma_Inline_Always            (Flag230)\n-   --    Has_Pragma_Pack                     (Flag121)  (base type only)\n    --    Has_Pragma_Pure                     (Flag203)\n    --    Has_Pragma_Pure_Function            (Flag179)\n    --    Has_Pragma_Thread_Local_Storage     (Flag169)\n@@ -4813,6 +4805,8 @@ package Einfo is\n    --    Has_Completion_In_Body              (Flag71)\n    --    Has_Complex_Representation          (Flag140)  (base type only)\n    --    Has_Constrained_Partial_View        (Flag187)\n+   --    Has_Controlled_Component            (Flag43)   (base type only)\n+   --    Has_Default_Aspect                  (Flag39)   (base type only)\n    --    Has_Discriminants                   (Flag5)\n    --    Has_Inheritable_Invariants          (Flag248)\n    --    Has_Invariants                      (Flag232)\n@@ -4935,7 +4929,7 @@ package Einfo is\n    --    Packed_Array_Type                   (Node23)\n    --    Component_Alignment                 (special)  (base type only)\n    --    Has_Component_Size_Clause           (Flag68)   (base type only)\n-   --    Has_Default_Component_Value         (Flag151)  (base type only)\n+   --    Has_Pragma_Pack                     (Flag121)  (impl base type only)\n    --    Is_Aliased                          (Flag15)\n    --    Is_Constrained                      (Flag12)\n    --    Next_Index                          (synth)\n@@ -5035,7 +5029,6 @@ package Einfo is\n    --    Scalar_Range                        (Node20)\n    --    Delta_Value                         (Ureal18)\n    --    Small_Value                         (Ureal21)\n-   --    Has_Default_Value                   (Flag39)   (base type only)\n    --    Has_Machine_Radix_Clause            (Flag83)\n    --    Machine_Radix_10                    (Flag84)\n    --    Aft_Value                           (synth)\n@@ -5112,7 +5105,6 @@ package Einfo is\n    --    Static_Predicate                    (List25)\n    --    Has_Biased_Representation           (Flag139)\n    --    Has_Contiguous_Rep                  (Flag181)\n-   --    Has_Default_Value                   (Flag39)   (base type only)\n    --    Has_Enumeration_Rep_Clause          (Flag66)\n    --    Has_Pragma_Ordered                  (Flag198)  (base type only)\n    --    Nonzero_Is_True                     (Flag162)  (base type only)\n@@ -5140,7 +5132,6 @@ package Einfo is\n    --    Digits_Value                        (Uint17)\n    --    Float_Rep                           (Uint10)   (Float_Rep_Kind)\n    --    Scalar_Range                        (Node20)\n-   --    Has_Default_Value                   (Flag39)   (base type only)\n    --    Machine_Emax_Value                  (synth)\n    --    Machine_Emin_Value                  (synth)\n    --    Machine_Mantissa_Value              (synth)\n@@ -5315,7 +5306,6 @@ package Einfo is\n    --    Static_Predicate                    (List25)\n    --    Non_Binary_Modulus                  (Flag58)   (base type only)\n    --    Has_Biased_Representation           (Flag139)\n-   --    Has_Default_Value                   (Flag39)   (base type only)\n    --    Type_Low_Bound                      (synth)\n    --    Type_High_Bound                     (synth)\n    --    (plus type attributes)\n@@ -5346,7 +5336,6 @@ package Einfo is\n    --    Delta_Value                         (Ureal18)\n    --    Scalar_Range                        (Node20)\n    --    Small_Value                         (Ureal21)\n-   --    Has_Default_Value                   (Flag39)   (base type only)\n    --    Has_Small_Clause                    (Flag67)\n    --    Aft_Value                           (synth)\n    --    Type_Low_Bound                      (synth)\n@@ -5535,6 +5524,7 @@ package Einfo is\n    --    C_Pass_By_Copy                      (Flag125)  (base type only)\n    --    Has_Dispatch_Table                  (Flag220)  (base tagged type only)\n    --    Has_External_Tag_Rep_Clause         (Flag110)\n+   --    Has_Pragma_Pack                     (Flag121)  (impl base type only)\n    --    Has_Record_Rep_Clause               (Flag65)   (base type only)\n    --    Has_Static_Discriminants            (Flag211)  (subtype only)\n    --    Is_Class_Wide_Equivalent_Type       (Flag35)\n@@ -5583,7 +5573,6 @@ package Einfo is\n    --    Scalar_Range                        (Node20)\n    --    Static_Predicate                    (List25)\n    --    Has_Biased_Representation           (Flag139)\n-   --    Has_Default_Value                   (Flag39)   (base type only)\n    --    Type_Low_Bound                      (synth)\n    --    Type_High_Bound                     (synth)\n    --    (plus type attributes)\n@@ -6034,8 +6023,7 @@ package Einfo is\n    function Has_Controlled_Component            (Id : E) return B;\n    function Has_Controlling_Result              (Id : E) return B;\n    function Has_Convention_Pragma               (Id : E) return B;\n-   function Has_Default_Component_Value         (Id : E) return B;\n-   function Has_Default_Value                   (Id : E) return B;\n+   function Has_Default_Aspect                  (Id : E) return B;\n    function Has_Delayed_Aspects                 (Id : E) return B;\n    function Has_Delayed_Freeze                  (Id : E) return B;\n    function Has_Discriminants                   (Id : E) return B;\n@@ -6618,8 +6606,7 @@ package Einfo is\n    procedure Set_Has_Controlled_Component        (Id : E; V : B := True);\n    procedure Set_Has_Controlling_Result          (Id : E; V : B := True);\n    procedure Set_Has_Convention_Pragma           (Id : E; V : B := True);\n-   procedure Set_Has_Default_Component_Value     (Id : E; V : B := True);\n-   procedure Set_Has_Default_Value               (Id : E; V : B := True);\n+   procedure Set_Has_Default_Aspect              (Id : E; V : B := True);\n    procedure Set_Has_Delayed_Aspects             (Id : E; V : B := True);\n    procedure Set_Has_Delayed_Freeze              (Id : E; V : B := True);\n    procedure Set_Has_Discriminants               (Id : E; V : B := True);\n@@ -7311,8 +7298,7 @@ package Einfo is\n    pragma Inline (Has_Controlled_Component);\n    pragma Inline (Has_Controlling_Result);\n    pragma Inline (Has_Convention_Pragma);\n-   pragma Inline (Has_Default_Component_Value);\n-   pragma Inline (Has_Default_Value);\n+   pragma Inline (Has_Default_Aspect);\n    pragma Inline (Has_Delayed_Aspects);\n    pragma Inline (Has_Delayed_Freeze);\n    pragma Inline (Has_Discriminants);\n@@ -7751,8 +7737,7 @@ package Einfo is\n    pragma Inline (Set_Has_Controlled_Component);\n    pragma Inline (Set_Has_Controlling_Result);\n    pragma Inline (Set_Has_Convention_Pragma);\n-   pragma Inline (Set_Has_Default_Component_Value);\n-   pragma Inline (Set_Has_Default_Value);\n+   pragma Inline (Set_Has_Default_Aspect);\n    pragma Inline (Set_Has_Delayed_Aspects);\n    pragma Inline (Set_Has_Delayed_Freeze);\n    pragma Inline (Set_Has_Discriminants);"}, {"sha": "39b32cec46dfcc8aaf0a56f8bb9493cf0de1263b", "filename": "gcc/ada/exp_ch13.adb", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a01b9df6570850b2202158e9914979878860c77d/gcc%2Fada%2Fexp_ch13.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a01b9df6570850b2202158e9914979878860c77d/gcc%2Fada%2Fexp_ch13.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch13.adb?ref=a01b9df6570850b2202158e9914979878860c77d", "patch": "@@ -240,8 +240,14 @@ package body Exp_Ch13 is\n                  and then Entity (Ritem) = E\n                then\n                   Aitem := Aspect_Rep_Item (Ritem);\n-                  pragma Assert (Is_Delayed_Aspect (Aitem));\n-                  Insert_Before (N, Aitem);\n+\n+                  --  Skip this for aspects (e.g. Current_Value) for which\n+                  --  there is no corresponding pragma or attribute.\n+\n+                  if Present (Aitem) then\n+                     pragma Assert (Is_Delayed_Aspect (Aitem));\n+                     Insert_Before (N, Aitem);\n+                  end if;\n                end if;\n \n                Next_Rep_Item (Ritem);"}, {"sha": "99a14fdfffc0cf97b705980a4face7d2b7384435", "filename": "gcc/ada/exp_ch3.adb", "status": "modified", "additions": 40, "deletions": 11, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a01b9df6570850b2202158e9914979878860c77d/gcc%2Fada%2Fexp_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a01b9df6570850b2202158e9914979878860c77d/gcc%2Fada%2Fexp_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch3.adb?ref=a01b9df6570850b2202158e9914979878860c77d", "patch": "@@ -583,11 +583,23 @@ package body Exp_Ch3 is\n              Prefix      => Make_Identifier (Loc, Name_uInit),\n              Expressions => Index_List);\n \n-         if Needs_Simple_Initialization (Comp_Type) then\n+         if Has_Default_Aspect (A_Type) then\n             Set_Assignment_OK (Comp);\n             return New_List (\n               Make_Assignment_Statement (Loc,\n-                Name => Comp,\n+                Name       => Comp,\n+                Expression =>\n+                  Convert_To (Comp_Type,\n+                    Expression\n+                      (Get_Rep_Item_For_Entity\n+                        (First_Subtype (A_Type),\n+                         Name_Default_Component_Value)))));\n+\n+         elsif Needs_Simple_Initialization (Comp_Type) then\n+            Set_Assignment_OK (Comp);\n+            return New_List (\n+              Make_Assignment_Statement (Loc,\n+                Name       => Comp,\n                 Expression =>\n                   Get_Simple_Init_Val\n                     (Comp_Type, Nod, Component_Size (A_Type))));\n@@ -617,6 +629,7 @@ package body Exp_Ch3 is\n          if not Has_Non_Null_Base_Init_Proc (Comp_Type)\n            and then not Needs_Simple_Initialization (Comp_Type)\n            and then not Has_Task (Comp_Type)\n+           and then not Has_Default_Aspect (A_Type)\n          then\n             return New_List (Make_Null_Statement (Loc));\n \n@@ -678,6 +691,7 @@ package body Exp_Ch3 is\n       --    2. The component type needs simple initialization\n       --    3. Tasks are present\n       --    4. The type is marked as a public entity\n+      --    5. The array type has a Default_Component_Value aspect\n \n       --  The reason for the public entity test is to deal properly with the\n       --  Initialize_Scalars pragma. This pragma can be set in the client and\n@@ -695,7 +709,8 @@ package body Exp_Ch3 is\n \n       Has_Default_Init := Has_Non_Null_Base_Init_Proc (Comp_Type)\n                             or else Needs_Simple_Initialization (Comp_Type)\n-                            or else Has_Task (Comp_Type);\n+                            or else Has_Task (Comp_Type)\n+                            or else Has_Default_Aspect (A_Type);\n \n       if Has_Default_Init\n         or else (not Restriction_Active (No_Initialize_Scalars)\n@@ -777,7 +792,7 @@ package body Exp_Ch3 is\n             Set_Is_Null_Init_Proc (Proc_Id);\n \n          else\n-            --  Try to build a static aggregate to initialize statically\n+            --  Try to build a static aggregate to statically initialize\n             --  objects of the type. This can only be done for constrained\n             --  one-dimensional arrays with static bounds.\n \n@@ -4831,11 +4846,11 @@ package body Exp_Ch3 is\n \n                begin\n                   --  If the original node of the expression was a conversion\n-                  --  to this specific class-wide interface type then we\n-                  --  restore the original node because we must copy the object\n-                  --  before displacing the pointer to reference the secondary\n-                  --  tag component. This code must be kept synchronized with\n-                  --  the expansion done by routine Expand_Interface_Conversion\n+                  --  to this specific class-wide interface type then restore\n+                  --  the original node because we must copy the object before\n+                  --  displacing the pointer to reference the secondary tag\n+                  --  component. This code must be kept synchronized with the\n+                  --  expansion done by routine Expand_Interface_Conversion\n \n                   if not Comes_From_Source (Expr_N)\n                     and then Nkind (Expr_N) = N_Explicit_Dereference\n@@ -6885,8 +6900,17 @@ package body Exp_Ch3 is\n \n          return Result;\n \n-      --  For scalars, we must have normalize/initialize scalars case, or\n-      --  if the node N is an 'Invalid_Value attribute node.\n+      --  Scalars with Default_Value aspect\n+\n+      elsif Is_Scalar_Type (T) and then Has_Default_Aspect (T) then\n+         return\n+           Convert_To (T,\n+             Expression\n+               (Get_Rep_Item_For_Entity\n+                 (First_Subtype (T), Name_Default_Value)));\n+\n+      --  Othersie, for scalars, we must have normalize/initialize scalars\n+      --  case, or if the node N is an 'Invalid_Value attribute node.\n \n       elsif Is_Scalar_Type (T) then\n          pragma Assert (Init_Or_Norm_Scalars or IV_Attribute);\n@@ -8522,6 +8546,11 @@ package body Exp_Ch3 is\n             end if;\n          end;\n \n+      --  Scalar type with Default_Value aspect requires initialization\n+\n+      elsif Is_Scalar_Type (T) and then Has_Default_Aspect (T) then\n+         return True;\n+\n       --  Cases needing simple initialization are access types, and, if pragma\n       --  Normalize_Scalars or Initialize_Scalars is in effect, then all scalar\n       --  types."}, {"sha": "91431efc680b0088e254de6d774e030fdb15c18a", "filename": "gcc/ada/exp_ch3.ads", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a01b9df6570850b2202158e9914979878860c77d/gcc%2Fada%2Fexp_ch3.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a01b9df6570850b2202158e9914979878860c77d/gcc%2Fada%2Fexp_ch3.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch3.ads?ref=a01b9df6570850b2202158e9914979878860c77d", "patch": "@@ -130,14 +130,14 @@ package Exp_Ch3 is\n      (T           : Entity_Id;\n       Consider_IS : Boolean := True) return Boolean;\n    --  Certain types need initialization even though there is no specific\n-   --  initialization routine. In this category are access types (which need\n-   --  initializing to null), packed array types whose implementation is a\n-   --  modular type, and all scalar types if Normalize_Scalars is set, as well\n-   --  as private types whose underlying type is present and meets any of these\n-   --  criteria. Finally, descendants of String and Wide_String also need\n-   --  initialization in Initialize/Normalize_Scalars mode. Consider_IS is\n-   --  normally True. If it is False, the Initialize_Scalars is not considered\n-   --  in determining whether simple initialization is needed.\n+   --  initialization routine:\n+   --    Access types (which need initializing to null)\n+   --    All scalar types if Normalize_Scalars mode set\n+   --    Descendents of standard string types if Normalize_Scalars mode set\n+   --    Scalar types having a Default_Value attribute\n+   --  Regarding Initialize_Scalars mode, this is ignored if Consider_IS is\n+   --  set to False, but if Consider_IS is set to True, then the cases above\n+   --  mentioning Normalize_Scalars also apply for Initialize_Scalars mode.\n \n    function Get_Simple_Init_Val\n      (T    : Entity_Id;"}, {"sha": "854b1a0ca89b39d3b94ca584a869b01d59618ad6", "filename": "gcc/ada/exp_ch5.adb", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a01b9df6570850b2202158e9914979878860c77d/gcc%2Fada%2Fexp_ch5.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a01b9df6570850b2202158e9914979878860c77d/gcc%2Fada%2Fexp_ch5.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch5.adb?ref=a01b9df6570850b2202158e9914979878860c77d", "patch": "@@ -2860,7 +2860,7 @@ package body Exp_Ch5 is\n \n          declare\n             Element_Type  : constant Entity_Id := Etype (Id);\n-            Pack          : constant Entity_Id := Scope (Etype (Container));\n+            Pack          : constant Entity_Id := Scope (Base_Type (Typ));\n             Name_Init     : Name_Id;\n             Name_Step     : Name_Id;\n             Cond          : Node_Id;\n@@ -2915,7 +2915,11 @@ package body Exp_Ch5 is\n \n             if Of_Present (I_Spec) then\n \n-               --  Id : Element_Type renames Pack.Element (Cursor);\n+               --  Id : Element_Type renames Container.Element (Cursor);\n+\n+               --  The code below only handles containers where Element is not\n+               --  a primitive operation of the container. This excludes\n+               --  for now the Hi-Lite formal containers.\n \n                Renaming_Decl :=\n                  Make_Object_Renaming_Declaration (Loc,"}, {"sha": "06313c84e2f77b3938efea0ce62717f53c447830", "filename": "gcc/ada/freeze.adb", "status": "modified", "additions": 49, "deletions": 7, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a01b9df6570850b2202158e9914979878860c77d/gcc%2Fada%2Ffreeze.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a01b9df6570850b2202158e9914979878860c77d/gcc%2Fada%2Ffreeze.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffreeze.adb?ref=a01b9df6570850b2202158e9914979878860c77d", "patch": "@@ -2423,8 +2423,14 @@ package body Freeze is\n                  and then Is_Delayed_Aspect (Ritem)\n                then\n                   Aitem := Aspect_Rep_Item (Ritem);\n-                  Set_Parent (Aitem, Ritem);\n-                  Analyze (Aitem);\n+\n+                  --  Skip if this is an aspect with no corresponding pragma\n+                  --  or attribute definition node (such as Default_Value).\n+\n+                  if Present (Aitem) then\n+                     Set_Parent (Aitem, Ritem);\n+                     Analyze (Aitem);\n+                  end if;\n                end if;\n \n                Next_Rep_Item (Ritem);\n@@ -4018,11 +4024,11 @@ package body Freeze is\n             end if;\n          end if;\n \n-         --  Remaining process is to set/verify the representation information,\n-         --  in particular the size and alignment values. This processing is\n-         --  not required for generic types, since generic types do not play\n-         --  any part in code generation, and so the size and alignment values\n-         --  for such types are irrelevant.\n+         --  Now we set/verify the representation information, in particular\n+         --  the size and alignment values. This processing is not required for\n+         --  generic types, since generic types do not play any part in code\n+         --  generation, and so the size and alignment values for such types\n+         --  are irrelevant.\n \n          if Is_Generic_Type (E) then\n             return Result;\n@@ -4033,6 +4039,42 @@ package body Freeze is\n             Layout_Type (E);\n          end if;\n \n+         --  If the type has a Defaut_Value/Default_Component_Value aspect,\n+         --  this is where we analye the expression (after the type is frozen,\n+         --  since in the case of Default_Value, we are analyzing with the\n+         --  type itself, and we treat Default_Component_Value similarly for\n+         --  the sake of uniformity.\n+\n+         if Is_First_Subtype (E) and then Has_Default_Aspect (E) then\n+            declare\n+               Nam    : Name_Id;\n+               Aspect : Node_Id;\n+               Exp    : Node_Id;\n+               Typ    : Entity_Id;\n+\n+            begin\n+               if Is_Scalar_Type (E) then\n+                  Nam := Name_Default_Value;\n+                  Typ := E;\n+               else\n+                  Nam := Name_Default_Component_Value;\n+                  Typ := Component_Type (E);\n+               end if;\n+\n+               Aspect := Get_Rep_Item_For_Entity (E, Nam);\n+               Exp := Expression (Aspect);\n+               Analyze_And_Resolve (Exp, Typ);\n+\n+               if Etype (Exp) /= Any_Type then\n+                  if not Is_Static_Expression (Exp) then\n+                     Error_Msg_Name_1 := Nam;\n+                     Flag_Non_Static_Expr\n+                       (\"aspect% requires static expression\", Exp);\n+                  end if;\n+               end if;\n+            end;\n+         end if;\n+\n          --  End of freeze processing for type entities\n       end if;\n "}, {"sha": "822837c0d19cbb2a3c5824a3ed85bdfa09916688", "filename": "gcc/ada/init.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a01b9df6570850b2202158e9914979878860c77d/gcc%2Fada%2Finit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a01b9df6570850b2202158e9914979878860c77d/gcc%2Fada%2Finit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Finit.c?ref=a01b9df6570850b2202158e9914979878860c77d", "patch": "@@ -2026,7 +2026,7 @@ __gnat_init_float (void)\n      to get correct Ada semantics.  Note that for AE653 vThreads, the HW\n      overflow settings are an OS configuration issue.  The instructions\n      below have no effect.  */\n-#if defined (_ARCH_PPC) && !defined (_SOFT_FLOAT) && (!defined (VTHREADS) || defined (__VXWORKSMILS__))\n+#if defined (_ARCH_PPC) && !defined (_SOFT_FLOAT) && !defined (VTHREADS)\n #if defined (__SPE__)\n   {\n      const unsigned long spefscr_mask = 0xfffffff3;"}, {"sha": "10237a551278e418f1dff17a4140d5f94a49aef8", "filename": "gcc/ada/par-prag.adb", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a01b9df6570850b2202158e9914979878860c77d/gcc%2Fada%2Fpar-prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a01b9df6570850b2202158e9914979878860c77d/gcc%2Fada%2Fpar-prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-prag.adb?ref=a01b9df6570850b2202158e9914979878860c77d", "patch": "@@ -1136,8 +1136,6 @@ begin\n            Pragma_Controlled                    |\n            Pragma_Convention                    |\n            Pragma_Debug_Policy                  |\n-           Pragma_Default_Value                 |\n-           Pragma_Default_Component_Value       |\n            Pragma_Detect_Blocking               |\n            Pragma_Default_Storage_Pool          |\n            Pragma_Dimension                     |"}, {"sha": "08761d8fd6049f22cd413106d08ab8329d4b3f75", "filename": "gcc/ada/sem_attr.adb", "status": "modified", "additions": 66, "deletions": 68, "changes": 134, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a01b9df6570850b2202158e9914979878860c77d/gcc%2Fada%2Fsem_attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a01b9df6570850b2202158e9914979878860c77d/gcc%2Fada%2Fsem_attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_attr.adb?ref=a01b9df6570850b2202158e9914979878860c77d", "patch": "@@ -85,75 +85,75 @@ package body Sem_Attr is\n    --  that are not included in Ada 95, but still get recognized in GNAT.\n \n    Attribute_83 : constant Attribute_Class_Array := Attribute_Class_Array'(\n-      Attribute_Address           |\n-      Attribute_Aft               |\n-      Attribute_Alignment         |\n-      Attribute_Base              |\n-      Attribute_Callable          |\n-      Attribute_Constrained       |\n-      Attribute_Count             |\n-      Attribute_Delta             |\n-      Attribute_Digits            |\n-      Attribute_Emax              |\n-      Attribute_Epsilon           |\n-      Attribute_First             |\n-      Attribute_First_Bit         |\n-      Attribute_Fore              |\n-      Attribute_Image             |\n-      Attribute_Large             |\n-      Attribute_Last              |\n-      Attribute_Last_Bit          |\n-      Attribute_Leading_Part      |\n-      Attribute_Length            |\n-      Attribute_Machine_Emax      |\n-      Attribute_Machine_Emin      |\n-      Attribute_Machine_Mantissa  |\n-      Attribute_Machine_Overflows |\n-      Attribute_Machine_Radix     |\n-      Attribute_Machine_Rounds    |\n-      Attribute_Mantissa          |\n-      Attribute_Pos               |\n-      Attribute_Position          |\n-      Attribute_Pred              |\n-      Attribute_Range             |\n-      Attribute_Safe_Emax         |\n-      Attribute_Safe_Large        |\n-      Attribute_Safe_Small        |\n-      Attribute_Size              |\n-      Attribute_Small             |\n-      Attribute_Storage_Size      |\n-      Attribute_Succ              |\n-      Attribute_Terminated        |\n-      Attribute_Val               |\n-      Attribute_Value             |\n-      Attribute_Width             => True,\n-      others                      => False);\n+      Attribute_Address                |\n+      Attribute_Aft                    |\n+      Attribute_Alignment              |\n+      Attribute_Base                   |\n+      Attribute_Callable               |\n+      Attribute_Constrained            |\n+      Attribute_Count                  |\n+      Attribute_Delta                  |\n+      Attribute_Digits                 |\n+      Attribute_Emax                   |\n+      Attribute_Epsilon                |\n+      Attribute_First                  |\n+      Attribute_First_Bit              |\n+      Attribute_Fore                   |\n+      Attribute_Image                  |\n+      Attribute_Large                  |\n+      Attribute_Last                   |\n+      Attribute_Last_Bit               |\n+      Attribute_Leading_Part           |\n+      Attribute_Length                 |\n+      Attribute_Machine_Emax           |\n+      Attribute_Machine_Emin           |\n+      Attribute_Machine_Mantissa       |\n+      Attribute_Machine_Overflows      |\n+      Attribute_Machine_Radix          |\n+      Attribute_Machine_Rounds         |\n+      Attribute_Mantissa               |\n+      Attribute_Pos                    |\n+      Attribute_Position               |\n+      Attribute_Pred                   |\n+      Attribute_Range                  |\n+      Attribute_Safe_Emax              |\n+      Attribute_Safe_Large             |\n+      Attribute_Safe_Small             |\n+      Attribute_Size                   |\n+      Attribute_Small                  |\n+      Attribute_Storage_Size           |\n+      Attribute_Succ                   |\n+      Attribute_Terminated             |\n+      Attribute_Val                    |\n+      Attribute_Value                  |\n+      Attribute_Width                  => True,\n+      others                           => False);\n \n    --  The following array is the list of attributes defined in the Ada 2005\n    --  RM which are not defined in Ada 95. These are recognized in Ada 95 mode,\n    --  but in Ada 95 they are considered to be implementation defined.\n \n    Attribute_05 : constant Attribute_Class_Array := Attribute_Class_Array'(\n-      Attribute_Machine_Rounding  |\n-      Attribute_Mod               |\n-      Attribute_Priority          |\n-      Attribute_Stream_Size       |\n-      Attribute_Wide_Wide_Width   => True,\n-      others                      => False);\n+      Attribute_Machine_Rounding       |\n+      Attribute_Mod                    |\n+      Attribute_Priority               |\n+      Attribute_Stream_Size            |\n+      Attribute_Wide_Wide_Width        => True,\n+      others                           => False);\n \n    --  The following array contains all attributes that imply a modification\n    --  of their prefixes or result in an access value. Such prefixes can be\n    --  considered as lvalues.\n \n    Attribute_Name_Implies_Lvalue_Prefix : constant Attribute_Class_Array :=\n       Attribute_Class_Array'(\n-      Attribute_Access              |\n-      Attribute_Address             |\n-      Attribute_Input               |\n-      Attribute_Read                |\n-      Attribute_Unchecked_Access    |\n-      Attribute_Unrestricted_Access => True,\n-      others                        => False);\n+      Attribute_Access                 |\n+      Attribute_Address                |\n+      Attribute_Input                  |\n+      Attribute_Read                   |\n+      Attribute_Unchecked_Access       |\n+      Attribute_Unrestricted_Access    => True,\n+      others                           => False);\n \n    -----------------------\n    -- Local_Subprograms --\n@@ -1870,9 +1870,7 @@ package body Sem_Attr is\n          end if;\n       end Validate_Non_Static_Attribute_Function_Call;\n \n-   -----------------------------------------------\n-   -- Start of Processing for Analyze_Attribute --\n-   -----------------------------------------------\n+   --   Start of processing for Analyze_Attribute\n \n    begin\n       --  Immediate return if unrecognized attribute (already diagnosed\n@@ -1897,9 +1895,9 @@ package body Sem_Attr is\n          end if;\n       end if;\n \n-      --  Deal with Ada 2005 issues\n+      --  Deal with Ada 2005 attributes that are\n \n-      if Attribute_05 (Attr_Id) and then Ada_Version <= Ada_95 then\n+      if Attribute_05 (Attr_Id) and then Ada_Version < Ada_2005 then\n          Check_Restriction (No_Implementation_Attributes, N);\n       end if;\n \n@@ -6016,13 +6014,6 @@ package body Sem_Attr is\n            Eval_Fat.Copy_Sign\n              (P_Root_Type, Expr_Value_R (E1), Expr_Value_R (E2)), Static);\n \n-      -----------\n-      -- Delta --\n-      -----------\n-\n-      when Attribute_Delta =>\n-         Fold_Ureal (N, Delta_Value (P_Type), True);\n-\n       --------------\n       -- Definite --\n       --------------\n@@ -6032,6 +6023,13 @@ package body Sem_Attr is\n            Boolean_Literals (not Is_Indefinite_Subtype (P_Entity)), Loc));\n          Analyze_And_Resolve (N, Standard_Boolean);\n \n+      -----------\n+      -- Delta --\n+      -----------\n+\n+      when Attribute_Delta =>\n+         Fold_Ureal (N, Delta_Value (P_Type), True);\n+\n       ------------\n       -- Denorm --\n       ------------"}, {"sha": "2a1134f4e99161037863ef91f792c796f3a28669", "filename": "gcc/ada/sem_ch13.adb", "status": "modified", "additions": 96, "deletions": 53, "changes": 149, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a01b9df6570850b2202158e9914979878860c77d/gcc%2Fada%2Fsem_ch13.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a01b9df6570850b2202158e9914979878860c77d/gcc%2Fada%2Fsem_ch13.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch13.adb?ref=a01b9df6570850b2202158e9914979878860c77d", "patch": "@@ -536,7 +536,7 @@ package body Sem_Ch13 is\n                      if Present (CC)\n                        and then not Error_Posted (Last_Bit (CC))\n                        and then Static_Integer (Last_Bit (CC)) <\n-                                Max_Machine_Scalar_Size\n+                                                    Max_Machine_Scalar_Size\n                      then\n                         Num_CC := Num_CC + 1;\n                         Comps (Num_CC) := Comp;\n@@ -981,29 +981,6 @@ package body Sem_Ch13 is\n                      Set_Is_Delayed_Aspect (Aspect);\n                   end if;\n \n-               --  Aspects corresponding to pragmas with two arguments, where\n-               --  the first argument is a local name referring to the entity,\n-               --  and the second argument is the aspect definition expression\n-               --  which is an expression which must be delayed and analyzed.\n-\n-               when Aspect_Default_Component_Value |\n-                    Aspect_Default_Value           =>\n-\n-                  --  Construct the pragma\n-\n-                  Aitem :=\n-                    Make_Pragma (Loc,\n-                      Pragma_Argument_Associations => New_List (\n-                        New_Occurrence_Of (E, Loc),\n-                        Relocate_Node (Expr)),\n-                      Pragma_Identifier            =>\n-                        Make_Identifier (Sloc (Id), Chars (Id)));\n-\n-                  --  These aspects do require delaying\n-\n-                  Delay_Required := True;\n-                  Set_Is_Delayed_Aspect (Aspect);\n-\n                --  Aspects corresponding to pragmas with two arguments, where\n                --  the first argument is a local name referring to the entity,\n                --  and the second argument is the aspect definition expression\n@@ -1049,6 +1026,45 @@ package body Sem_Ch13 is\n \n                   Delay_Required := False;\n \n+               --  Default_Value and Default_Component_Value aspects. These\n+               --  are specially handled because they have no corresponding\n+               --  pragmas or attributes.\n+\n+               when Aspect_Default_Value | Aspect_Default_Component_Value =>\n+                  Error_Msg_Name_1 := Chars (Id);\n+\n+                  if not Is_Type (E) then\n+                     Error_Msg_N (\"aspect% can only apply to a type\", Id);\n+                     goto Continue;\n+\n+                  elsif not Is_First_Subtype (E) then\n+                     Error_Msg_N (\"aspect% cannot apply to subtype\", Id);\n+                     goto Continue;\n+\n+                  elsif A_Id = Aspect_Default_Value\n+                    and then not Is_Scalar_Type (E)\n+                  then\n+                     Error_Msg_N\n+                       (\"aspect% can only be applied to scalar type\", Id);\n+                     goto Continue;\n+\n+                  elsif A_Id = Aspect_Default_Component_Value then\n+                     if not Is_Array_Type (E) then\n+                        Error_Msg_N\n+                          (\"aspect% can only be applied to array type\", Id);\n+                        goto Continue;\n+                     elsif not Is_Scalar_Type (Component_Type (E)) then\n+                        Error_Msg_N\n+                          (\"aspect% requires scalar components\", Id);\n+                        goto Continue;\n+                     end if;\n+                  end if;\n+\n+                  Aitem := Empty;\n+                  Delay_Required := True;\n+                  Set_Is_Delayed_Aspect (Aspect);\n+                  Set_Has_Default_Aspect (Base_Type (Entity (Ent)));\n+\n                --  Aspects Pre/Post generate Precondition/Postcondition pragmas\n                --  with a first argument that is the expression, and a second\n                --  argument that is an informative message if the test fails.\n@@ -1218,23 +1234,27 @@ package body Sem_Ch13 is\n                   Delay_Required := True;\n             end case;\n \n-            Set_From_Aspect_Specification (Aitem, True);\n-\n             --  If a delay is required, we delay the freeze (not much point in\n             --  delaying the aspect if we don't delay the freeze!). The pragma\n-            --  or clause is then attached to the aspect specification which\n-            --  is placed in the rep item list.\n+            --  or attribute clause if there is one is then attached to the\n+            --  aspect specification which is placed in the rep item list.\n \n             if Delay_Required then\n+               if Present (Aitem) then\n+                  Set_From_Aspect_Specification (Aitem, True);\n+                  Set_Is_Delayed_Aspect (Aitem);\n+                  Set_Aspect_Rep_Item (Aspect, Aitem);\n+               end if;\n+\n                Ensure_Freeze_Node (E);\n-               Set_Is_Delayed_Aspect (Aitem);\n                Set_Has_Delayed_Aspects (E);\n-               Set_Aspect_Rep_Item (Aspect, Aitem);\n                Record_Rep_Item (E, Aspect);\n \n             --  If no delay required, insert the pragma/clause in the tree\n \n             else\n+               Set_From_Aspect_Specification (Aitem, True);\n+\n                --  If this is a compilation unit, we will put the pragma in\n                --  the Pragmas_After list of the N_Compilation_Unit_Aux node.\n \n@@ -1278,8 +1298,8 @@ package body Sem_Ch13 is\n             end if;\n          end;\n \n-         <<Continue>>\n-            Next (Aspect);\n+      <<Continue>>\n+         Next (Aspect);\n       end loop Aspect_Loop;\n    end Analyze_Aspect_Specifications;\n \n@@ -1333,8 +1353,16 @@ package body Sem_Ch13 is\n       Attr  : constant Name_Id      := Chars (N);\n       Expr  : constant Node_Id      := Expression (N);\n       Id    : constant Attribute_Id := Get_Attribute_Id (Attr);\n-      Ent   : Entity_Id;\n+\n+      Ent : Entity_Id;\n+      --  The entity of Nam after it is analyzed. In the case of an incomplete\n+      --  type, this is the underlying type.\n+\n       U_Ent : Entity_Id;\n+      --  The underlying entity to which the attribute applies. Generally this\n+      --  is the Underlying_Type of Ent, except in the case where the clause\n+      --  applies to full view of incomplete type or private type in which case\n+      --  U_Ent is just a copy of Ent.\n \n       FOnly : Boolean := False;\n       --  Reset to True for subtype specific attribute (Alignment, Size)\n@@ -1366,6 +1394,7 @@ package body Sem_Ch13 is\n          Pnam : Entity_Id;\n \n          Is_Read : constant Boolean := (TSS_Nam = TSS_Stream_Read);\n+         --  True for Read attribute, false for other attributes\n \n          function Has_Good_Profile (Subp : Entity_Id) return Boolean;\n          --  Return true if the entity is a subprogram with an appropriate\n@@ -1528,6 +1557,16 @@ package body Sem_Ch13 is\n    --  Start of processing for Analyze_Attribute_Definition_Clause\n \n    begin\n+      --  The following code is a defense against recursion. Not clear that\n+      --  this can happen legitimately, but perhaps some error situations\n+      --  can cause it, and we did see this recursion during testing.\n+\n+      if Analyzed (N) then\n+         return;\n+      else\n+         Set_Analyzed (N, True);\n+      end if;\n+\n       --  Process Ignore_Rep_Clauses option\n \n       if Ignore_Rep_Clauses then\n@@ -1558,13 +1597,13 @@ package body Sem_Ch13 is\n             --  legality, e.g. failing to provide a stream attribute for a\n             --  type may make a program illegal.\n \n-            when Attribute_External_Tag   |\n-                 Attribute_Input          |\n-                 Attribute_Output         |\n-                 Attribute_Read           |\n-                 Attribute_Storage_Pool   |\n-                 Attribute_Storage_Size   |\n-                 Attribute_Write          =>\n+            when Attribute_External_Tag            |\n+                 Attribute_Input                   |\n+                 Attribute_Output                  |\n+                 Attribute_Read                    |\n+                 Attribute_Storage_Pool            |\n+                 Attribute_Storage_Size            |\n+                 Attribute_Write                   =>\n                null;\n \n             --  Other cases are errors (\"attribute& cannot be set with\n@@ -1890,6 +1929,7 @@ package body Sem_Ch13 is\n                   --  check till after code generation to take full advantage\n                   --  of the annotation done by the back end. This entry is\n                   --  only made if the address clause comes from source.\n+\n                   --  If the entity has a generic type, the check will be\n                   --  performed in the instance if the actual type justifies\n                   --  it, and we do not insert the clause in the table to\n@@ -2253,7 +2293,6 @@ package body Sem_Ch13 is\n                  (\"size cannot be given for unconstrained array\", Nam);\n \n             elsif Size /= No_Uint then\n-\n                if VM_Target /= No_VM and then not GNAT_Mode then\n \n                   --  Size clause is not handled properly on VM targets.\n@@ -2443,9 +2482,10 @@ package body Sem_Ch13 is\n             end if;\n \n             --  The Stack_Bounded_Pool is used internally for implementing\n-            --  access types with a Storage_Size. Since it only work\n-            --  properly when used on one specific type, we need to check\n-            --  that it is not hijacked improperly:\n+            --  access types with a Storage_Size. Since it only work properly\n+            --  when used on one specific type, we need to check that it is not\n+            --  hijacked improperly:\n+\n             --    type T is access Integer;\n             --    for T'Storage_Size use n;\n             --    type Q is access Float;\n@@ -2673,9 +2713,9 @@ package body Sem_Ch13 is\n               (\"attribute& cannot be set with definition clause\", N);\n       end case;\n \n-      --  The test for the type being frozen must be performed after\n-      --  any expression the clause has been analyzed since the expression\n-      --  itself might cause freezing that makes the clause illegal.\n+      --  The test for the type being frozen must be performed after any\n+      --  expression the clause has been analyzed since the expression itself\n+      --  might cause freezing that makes the clause illegal.\n \n       if Rep_Item_Too_Late (U_Ent, N, FOnly) then\n          return;\n@@ -3198,11 +3238,12 @@ package body Sem_Ch13 is\n          Build_Predicate_Function (E, N);\n       end if;\n \n-      --  If type has delayed aspects, this is where we do the preanalysis\n-      --  at the freeze point, as part of the consistent visibility check.\n-      --  Note that this must be done after calling Build_Predicate_Function,\n-      --  since that call marks occurrences of the subtype name in the saved\n-      --  expression so that they will not cause trouble in the preanalysis.\n+      --  If type has delayed aspects, this is where we do the preanalysis at\n+      --  the freeze point, as part of the consistent visibility check. Note\n+      --  that this must be done after calling Build_Predicate_Function or\n+      --  Build_Invariant_Procedure since these subprograms fix occurrences of\n+      --  the subtype name in the saved expression so that they will not cause\n+      --  trouble in the preanalysis.\n \n       if Has_Delayed_Aspects (E) then\n          declare\n@@ -6959,7 +7000,9 @@ package body Sem_Ch13 is\n \n       if Is_Incomplete_Or_Private_Type (T)\n         and then No (Underlying_Type (T))\n-        and then Get_Pragma_Id (N) /= Pragma_Import\n+        and then\n+          (Nkind (N) /= N_Pragma\n+             or else Get_Pragma_Id (N) /= Pragma_Import)\n       then\n          Error_Msg_N\n            (\"representation item must be after full type declaration\", N);"}, {"sha": "562fad6affa412ff5403d7010fce2ac8f169b68c", "filename": "gcc/ada/sem_ch5.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a01b9df6570850b2202158e9914979878860c77d/gcc%2Fada%2Fsem_ch5.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a01b9df6570850b2202158e9914979878860c77d/gcc%2Fada%2Fsem_ch5.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch5.adb?ref=a01b9df6570850b2202158e9914979878860c77d", "patch": "@@ -2261,7 +2261,7 @@ package body Sem_Ch5 is\n             --  Find the Element_Type in the package instance that defines the\n             --  container type.\n \n-            Ent := First_Entity (Scope (Typ));\n+            Ent := First_Entity (Scope (Base_Type (Typ)));\n             while Present (Ent) loop\n                if Chars (Ent) = Name_Element_Type then\n                   Set_Etype (Def_Id, Ent);\n@@ -2274,7 +2274,7 @@ package body Sem_Ch5 is\n          else\n             --  Find the Cursor type in similar fashion\n \n-            Ent := First_Entity (Scope (Typ));\n+            Ent := First_Entity (Scope (Base_Type (Typ)));\n             while Present (Ent) loop\n                if Chars (Ent) = Name_Cursor then\n                   Set_Etype (Def_Id, Ent);"}, {"sha": "328c2f95a9beeb417935b6ee6cc55e078161f4cc", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 0, "deletions": 135, "changes": 135, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a01b9df6570850b2202158e9914979878860c77d/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a01b9df6570850b2202158e9914979878860c77d/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=a01b9df6570850b2202158e9914979878860c77d", "patch": "@@ -7352,139 +7352,6 @@ package body Sem_Prag is\n             Debug_Pragmas_Enabled :=\n               Chars (Get_Pragma_Arg (Arg1)) = Name_Check;\n \n-         -----------------------------\n-         -- Default_Component_Value --\n-         -----------------------------\n-\n-         when Pragma_Default_Component_Value => declare\n-            Arg : Node_Id;\n-            E   : Entity_Id;\n-\n-         begin\n-            GNAT_Pragma;\n-            Check_Arg_Count (2);\n-            Check_Arg_Is_Local_Name (Arg1);\n-\n-            Arg := Get_Pragma_Arg (Arg1);\n-            Analyze (Arg);\n-\n-            if Etype (Arg) = Any_Type then\n-               return;\n-            end if;\n-\n-            if not Is_Entity_Name (Arg)\n-              or else not Is_Array_Type (Entity (Arg))\n-            then\n-               Error_Pragma_Arg (\"pragma% requires an array type\", Arg1);\n-            end if;\n-\n-            Check_First_Subtype (Arg1);\n-\n-            E := Entity (Arg);\n-            Check_Duplicate_Pragma (E);\n-\n-            --  Check for rep item too early or too late, but skip this if\n-            --  the pragma comes from the corresponding aspect, since we do\n-            --  not need the checks, and more importantly, the pragma is on\n-            --  the rep item chain alreay, and must not be put there twice!\n-\n-            if not From_Aspect_Specification (N) then\n-               if Rep_Item_Too_Early (E, N)\n-                    or else\n-                  Rep_Item_Too_Late (E, N)\n-               then\n-                  return;\n-               end if;\n-            end if;\n-\n-            --  Analyze the default value\n-\n-            Arg := Get_Pragma_Arg (Arg2);\n-            Analyze_And_Resolve (Arg, Component_Type (E));\n-\n-            if not Is_OK_Static_Expression (Arg) then\n-               Flag_Non_Static_Expr\n-                 (\"non-static expression not allowed for \" &\n-                  \"Default_Component_Value\",\n-                  Arg2);\n-               raise Pragma_Exit;\n-            end if;\n-\n-            --  Set the flag on the root type and then check for Rep_Item too\n-            --  early or too late, the latter call chains the pragma onto the\n-            --  Rep_Item chain.\n-\n-            Set_Has_Default_Component_Value (Base_Type (E));\n-         end;\n-\n-         -------------------\n-         -- Default_Value --\n-         -------------------\n-\n-         when Pragma_Default_Value => declare\n-            Arg : Node_Id;\n-            E   : Entity_Id;\n-\n-         begin\n-            --  Error checks\n-\n-            GNAT_Pragma;\n-            Check_Arg_Count (2);\n-            Check_Arg_Is_Local_Name (Arg1);\n-\n-            Arg := Get_Pragma_Arg (Arg1);\n-            Analyze (Arg);\n-\n-            if Etype (Arg) = Any_Type then\n-               return;\n-            end if;\n-\n-            if not Is_Entity_Name (Arg)\n-              or else not Is_Scalar_Type (Entity (Arg))\n-            then\n-               Error_Pragma_Arg (\"pragma% requires a scalar type\", Arg1);\n-            end if;\n-\n-            Check_First_Subtype (Arg1);\n-\n-            E := Entity (Arg);\n-            Check_Duplicate_Pragma (E);\n-\n-            --  Check for rep item too early or too late, but skip this if\n-            --  the pragma comes from the corresponding aspect, since we do\n-            --  not need the checks, and more importantly, the pragma is on\n-            --  the rep item chain alreay, and must not be put there twice!\n-\n-            if not From_Aspect_Specification (N) then\n-               if Rep_Item_Too_Early (E, N)\n-                    or else\n-                  Rep_Item_Too_Late (E, N)\n-               then\n-                  return;\n-               end if;\n-            end if;\n-\n-            --  Analyze the default value. Note that we must do that after\n-            --  checking for Rep_Item_Too_Late since this resolution will\n-            --  freeze the type involved.\n-\n-            Arg := Get_Pragma_Arg (Arg2);\n-            Analyze_And_Resolve (Arg, E);\n-\n-            if not Is_OK_Static_Expression (Arg) then\n-               Flag_Non_Static_Expr\n-                 (\"non-static expression not allowed for Default_Value\",\n-                  Arg2);\n-               raise Pragma_Exit;\n-            end if;\n-\n-            --  Set the flag on the root type and then check for Rep_Item too\n-            --  early or too late, the latter call chains the pragma onto the\n-            --  Rep_Item chain.\n-\n-            Set_Has_Default_Value (Base_Type (E));\n-         end;\n-\n          ---------------------\n          -- Detect_Blocking --\n          ---------------------\n@@ -14111,8 +13978,6 @@ package body Sem_Prag is\n       Pragma_Convention_Identifier         =>  0,\n       Pragma_Debug                         => -1,\n       Pragma_Debug_Policy                  =>  0,\n-      Pragma_Default_Value                 => -1,\n-      Pragma_Default_Component_Value       => -1,\n       Pragma_Detect_Blocking               => -1,\n       Pragma_Default_Storage_Pool          => -1,\n       Pragma_Dimension                     => -1,"}, {"sha": "5360f4eaa1f6f8a774fc5e817d9d04071237bab8", "filename": "gcc/ada/snames.ads-tmpl", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a01b9df6570850b2202158e9914979878860c77d/gcc%2Fada%2Fsnames.ads-tmpl", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a01b9df6570850b2202158e9914979878860c77d/gcc%2Fada%2Fsnames.ads-tmpl", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsnames.ads-tmpl?ref=a01b9df6570850b2202158e9914979878860c77d", "patch": "@@ -137,6 +137,8 @@ package Snames is\n    --  Names of aspects for which there are no matching pragmas or attributes\n    --  so that they need to be included for aspect specification use.\n \n+   Name_Default_Value                  : constant Name_Id := N + $;\n+   Name_Default_Component_Value        : constant Name_Id := N + $;\n    Name_Dynamic_Predicate              : constant Name_Id := N + $;\n    Name_Post                           : constant Name_Id := N + $;\n    Name_Pre                            : constant Name_Id := N + $;\n@@ -447,8 +449,6 @@ package Snames is\n    Name_CPP_Vtable                     : constant Name_Id := N + $; -- GNAT\n    Name_CPU                            : constant Name_Id := N + $; -- Ada 12\n    Name_Debug                          : constant Name_Id := N + $; -- GNAT\n-   Name_Default_Value                  : constant Name_Id := N + $; -- GNAT\n-   Name_Default_Component_Value        : constant Name_Id := N + $; -- GNAT\n    Name_Dimension                      : constant Name_Id := N + $; -- GNAT\n    Name_Elaborate                      : constant Name_Id := N + $; -- Ada 83\n    Name_Elaborate_All                  : constant Name_Id := N + $;\n@@ -1554,8 +1554,6 @@ package Snames is\n       Pragma_CPP_Vtable,\n       Pragma_CPU,\n       Pragma_Debug,\n-      Pragma_Default_Value,\n-      Pragma_Default_Component_Value,\n       Pragma_Dimension,\n       Pragma_Elaborate,\n       Pragma_Elaborate_All,"}]}