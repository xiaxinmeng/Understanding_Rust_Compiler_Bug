{"sha": "46c1cff63f942e715c53739610951ea58ab8c228", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDZjMWNmZjYzZjk0MmU3MTVjNTM3Mzk2MTA5NTFlYTU4YWI4YzIyOA==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2016-06-13T10:00:17Z"}, "committer": {"name": "Martin Liska", "email": "marxin@gcc.gnu.org", "date": "2016-06-13T10:00:17Z"}, "message": "Change enum value to not to clash with a MSP430 private enum\n\n\t* predict.c (enum predictor_reason): Prefix enum with REASON_.\n\t(combine_predictions_for_insn): Likewise.\n\t(prune_predictions_for_bb): Likewise.\n\t(combine_predictions_for_bb): Likewise.\n\nFrom-SVN: r237370", "tree": {"sha": "3012821165c72a40373e470645149e4a3845e810", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3012821165c72a40373e470645149e4a3845e810"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/46c1cff63f942e715c53739610951ea58ab8c228", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/46c1cff63f942e715c53739610951ea58ab8c228", "html_url": "https://github.com/Rust-GCC/gccrs/commit/46c1cff63f942e715c53739610951ea58ab8c228", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/46c1cff63f942e715c53739610951ea58ab8c228/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "7a5824c6d7145af4ace36c6ec60660248c3cb57f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7a5824c6d7145af4ace36c6ec60660248c3cb57f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7a5824c6d7145af4ace36c6ec60660248c3cb57f"}], "stats": {"total": 35, "additions": 21, "deletions": 14}, "files": [{"sha": "88506a587ebf5a66ad2e99db6df49a65494f1d92", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/46c1cff63f942e715c53739610951ea58ab8c228/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/46c1cff63f942e715c53739610951ea58ab8c228/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=46c1cff63f942e715c53739610951ea58ab8c228", "patch": "@@ -1,3 +1,10 @@\n+2016-06-13  Martin Liska  <mliska@suse.cz>\n+\n+\t* predict.c (enum predictor_reason): Prefix enum with REASON_.\n+\t(combine_predictions_for_insn): Likewise.\n+\t(prune_predictions_for_bb): Likewise.\n+\t(combine_predictions_for_bb): Likewise.\n+\n 2016-06-13  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/71505"}, {"sha": "7d55ff7c71c7822a0b1dab4b14d51f50fa62751e", "filename": "gcc/predict.c", "status": "modified", "additions": 14, "deletions": 14, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/46c1cff63f942e715c53739610951ea58ab8c228/gcc%2Fpredict.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/46c1cff63f942e715c53739610951ea58ab8c228/gcc%2Fpredict.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpredict.c?ref=46c1cff63f942e715c53739610951ea58ab8c228", "patch": "@@ -59,10 +59,10 @@ along with GCC; see the file COPYING3.  If not see\n \n enum predictor_reason\n {\n-  NONE,\n-  IGNORED,\n-  SINGLE_EDGE_DUPLICATE,\n-  EDGE_PAIR_DUPLICATE\n+  REASON_NONE,\n+  REASON_IGNORED,\n+  REASON_SINGLE_EDGE_DUPLICATE,\n+  REASON_EDGE_PAIR_DUPLICATE\n };\n \n /* String messages for the aforementioned enum.  */\n@@ -739,7 +739,7 @@ invert_br_probabilities (rtx insn)\n \n static void\n dump_prediction (FILE *file, enum br_predictor predictor, int probability,\n-\t\t basic_block bb, enum predictor_reason reason = NONE,\n+\t\t basic_block bb, enum predictor_reason reason = REASON_NONE,\n \t\t edge ep_edge = NULL)\n {\n   edge e = ep_edge;\n@@ -864,9 +864,9 @@ combine_predictions_for_insn (rtx_insn *insn, basic_block bb)\n   else\n     {\n       dump_prediction (dump_file, PRED_DS_THEORY, combined_probability,\n-\t\t       bb, !first_match ? NONE : IGNORED);\n+\t\t       bb, !first_match ? REASON_NONE : REASON_IGNORED);\n       dump_prediction (dump_file, PRED_FIRST_MATCH, best_probability,\n-\t\t       bb, first_match ? NONE: IGNORED);\n+\t\t       bb, first_match ? REASON_NONE : REASON_IGNORED);\n     }\n \n   if (first_match)\n@@ -883,7 +883,7 @@ combine_predictions_for_insn (rtx_insn *insn, basic_block bb)\n \n \t  dump_prediction (dump_file, predictor, probability, bb,\n \t\t\t   (!first_match || best_predictor == predictor)\n-\t\t\t   ? NONE : IGNORED);\n+\t\t\t   ? REASON_NONE : REASON_IGNORED);\n \t  *pnote = XEXP (*pnote, 1);\n \t}\n       else\n@@ -996,7 +996,7 @@ prune_predictions_for_bb (basic_block bb)\n \t\t  /* Remove a duplicate predictor.  */\n \t\t  dump_prediction (dump_file, pred->ep_predictor,\n \t\t\t\t   pred->ep_probability, bb,\n-\t\t\t\t   SINGLE_EDGE_DUPLICATE, pred->ep_edge);\n+\t\t\t\t   REASON_SINGLE_EDGE_DUPLICATE, pred->ep_edge);\n \n \t\t  remove.add (pred);\n \t\t}\n@@ -1008,11 +1008,11 @@ prune_predictions_for_bb (basic_block bb)\n \t\t     for both edges.  */\n \t\t  dump_prediction (dump_file, existing->ep_predictor,\n \t\t\t\t   pred->ep_probability, bb,\n-\t\t\t\t   EDGE_PAIR_DUPLICATE,\n+\t\t\t\t   REASON_EDGE_PAIR_DUPLICATE,\n \t\t\t\t   existing->ep_edge);\n \t\t  dump_prediction (dump_file, pred->ep_predictor,\n \t\t\t\t   pred->ep_probability, bb,\n-\t\t\t\t   EDGE_PAIR_DUPLICATE,\n+\t\t\t\t   REASON_EDGE_PAIR_DUPLICATE,\n \t\t\t\t   pred->ep_edge);\n \n \t\t  remove.add (existing);\n@@ -1150,9 +1150,9 @@ combine_predictions_for_bb (basic_block bb, bool dry_run)\n   else\n     {\n       dump_prediction (dump_file, PRED_DS_THEORY, combined_probability, bb,\n-\t\t       !first_match ? NONE : IGNORED);\n+\t\t       !first_match ? REASON_NONE : REASON_IGNORED);\n       dump_prediction (dump_file, PRED_FIRST_MATCH, best_probability, bb,\n-\t\t       first_match ? NONE : IGNORED);\n+\t\t       first_match ? REASON_NONE : REASON_IGNORED);\n     }\n \n   if (first_match)\n@@ -1168,7 +1168,7 @@ combine_predictions_for_bb (basic_block bb, bool dry_run)\n \n \t  dump_prediction (dump_file, predictor, probability, bb,\n \t\t\t   (!first_match || best_predictor == predictor)\n-\t\t\t   ? NONE : IGNORED, pred->ep_edge);\n+\t\t\t   ? REASON_NONE : REASON_IGNORED, pred->ep_edge);\n \t}\n     }\n   clear_bb_predictions (bb);"}]}