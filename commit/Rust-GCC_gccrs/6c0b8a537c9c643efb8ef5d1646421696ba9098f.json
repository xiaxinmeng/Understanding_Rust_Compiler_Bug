{"sha": "6c0b8a537c9c643efb8ef5d1646421696ba9098f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmMwYjhhNTM3YzljNjQzZWZiOGVmNWQxNjQ2NDIxNjk2YmE5MDk4Zg==", "commit": {"author": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2015-05-02T15:18:36Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2015-05-02T15:18:36Z"}, "message": "numeric: New.\n\n\t* include/experimental/numeric: New. Define gcd and lcm.\n\t* include/Makefile.am: Add new header.\n\t* include/Makefile.in: Regenerate.\n\t* testsuite/experimental/numeric/gcd.cc: New.\n\t* testsuite/experimental/numeric/lcm.cc: New.\n\t* doc/xml/manual/status_cxx2017.xml: Update status.\n\t* doc/html/manual/status.html: Regenerate.\n\nFrom-SVN: r222724", "tree": {"sha": "ce021334715a4994a2b8bf999c0c57c584673d57", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ce021334715a4994a2b8bf999c0c57c584673d57"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6c0b8a537c9c643efb8ef5d1646421696ba9098f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6c0b8a537c9c643efb8ef5d1646421696ba9098f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6c0b8a537c9c643efb8ef5d1646421696ba9098f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6c0b8a537c9c643efb8ef5d1646421696ba9098f/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fe4b6acbff5c844ae544e178664bbe0c855c1161", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fe4b6acbff5c844ae544e178664bbe0c855c1161", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fe4b6acbff5c844ae544e178664bbe0c855c1161"}], "stats": {"total": 183, "additions": 171, "deletions": 12}, "files": [{"sha": "9d790b207710f550c51013cdcd5b4debcb266baa", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 18, "deletions": 8, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c0b8a537c9c643efb8ef5d1646421696ba9098f/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c0b8a537c9c643efb8ef5d1646421696ba9098f/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=6c0b8a537c9c643efb8ef5d1646421696ba9098f", "patch": "@@ -1,14 +1,24 @@\n+2015-05-02  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* include/experimental/numeric: New. Define gcd and lcm.\n+\t* include/Makefile.am: Add new header.\n+\t* include/Makefile.in: Regenerate.\n+\t* testsuite/experimental/numeric/gcd.cc: New.\n+\t* testsuite/experimental/numeric/lcm.cc: New.\n+\t* doc/xml/manual/status_cxx2017.xml: Update status.\n+\t* doc/html/manual/status.html: Regenerate.\n+\n 2015-05-02  Edward Smith-Rowland  <3dw4rd@verizon.net>\n \n \tRevert addition of feature macros from other headers per latest SD-6.\n-        * include/experimental/deque: Remove feature-test macro.\n-        * include/experimental/forward_list: Ditto.\n-        * include/experimental/list: Ditto.\n-        * include/experimental/map: Ditto.\n-        * include/experimental/set: Ditto.\n-        * include/experimental/string: Ditto.\n-        * include/experimental/unordered_map: Ditto.\n-        * include/experimental/unordered_set: Ditto.\n+\t* include/experimental/deque: Remove feature-test macro.\n+\t* include/experimental/forward_list: Ditto.\n+\t* include/experimental/list: Ditto.\n+\t* include/experimental/map: Ditto.\n+\t* include/experimental/set: Ditto.\n+\t* include/experimental/string: Ditto.\n+\t* include/experimental/unordered_map: Ditto.\n+\t* include/experimental/unordered_set: Ditto.\n \n 2015-05-02  Jonathan Wakely  <jwakely@redhat.com>\n "}, {"sha": "413deae6d7414110c5d100feee86ef158a0ab0d7", "filename": "libstdc++-v3/doc/html/manual/status.html", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c0b8a537c9c643efb8ef5d1646421696ba9098f/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fstatus.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c0b8a537c9c643efb8ef5d1646421696ba9098f/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fstatus.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fstatus.html?ref=6c0b8a537c9c643efb8ef5d1646421696ba9098f", "patch": "@@ -516,11 +516,11 @@\n \t<a class=\"link\" href=\"http://www.open-std.org/JTC1/SC22/WG21/docs/papers/2014/n4273.htm\" target=\"_top\">\n \t  N4273\n \t</a>\n-      </td><td align=\"left\">Uniform Container Erasure</td><td align=\"left\">Y</td><td align=\"left\">Library Fundamentals 2 TS</td></tr><tr bgcolor=\"#C8B0B0\"><td align=\"left\">\n+      </td><td align=\"left\">Uniform Container Erasure</td><td align=\"left\">Y</td><td align=\"left\">Library Fundamentals 2 TS</td></tr><tr><td align=\"left\">\n \t<a class=\"link\" href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2014/n4061.pdf\" target=\"_top\">\n \t  N4061\n \t</a>\n-      </td><td align=\"left\">Greatest Common Divisor and Least Common Multiple</td><td align=\"left\">N</td><td align=\"left\">Library Fundamentals 2 TS</td></tr><tr bgcolor=\"#C8B0B0\"><td align=\"left\">\n+      </td><td align=\"left\">Greatest Common Divisor and Least Common Multiple</td><td align=\"left\">Y</td><td align=\"left\">Library Fundamentals 2 TS</td></tr><tr bgcolor=\"#C8B0B0\"><td align=\"left\">\n \t<a class=\"link\" href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2014/n4257.html\" target=\"_top\">\n \t  N4257\n \t</a>"}, {"sha": "c30bf09cdf4662530072cbe36f8fe8c6e213073a", "filename": "libstdc++-v3/doc/xml/manual/status_cxx2017.xml", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c0b8a537c9c643efb8ef5d1646421696ba9098f/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fstatus_cxx2017.xml", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c0b8a537c9c643efb8ef5d1646421696ba9098f/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fstatus_cxx2017.xml", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fstatus_cxx2017.xml?ref=6c0b8a537c9c643efb8ef5d1646421696ba9098f", "patch": "@@ -209,14 +209,13 @@ not in any particular release.\n     </row>\n \n     <row>\n-      <?dbhtml bgcolor=\"#C8B0B0\" ?>\n       <entry>\n \t<link xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2014/n4061.pdf\">\n \t  N4061\n \t</link>\n       </entry>\n       <entry>Greatest Common Divisor and Least Common Multiple</entry>\n-      <entry>N</entry>\n+      <entry>Y</entry>\n       <entry>Library Fundamentals 2 TS</entry>\n     </row>\n "}, {"sha": "92b386a1adb077f3c6ccfb5e1d8b5adcf9ab0ea4", "filename": "libstdc++-v3/include/Makefile.am", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c0b8a537c9c643efb8ef5d1646421696ba9098f/libstdc%2B%2B-v3%2Finclude%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c0b8a537c9c643efb8ef5d1646421696ba9098f/libstdc%2B%2B-v3%2Finclude%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2FMakefile.am?ref=6c0b8a537c9c643efb8ef5d1646421696ba9098f", "patch": "@@ -654,6 +654,7 @@ experimental_headers = \\\n \t${experimental_srcdir}/list \\\n \t${experimental_srcdir}/map \\\n \t${experimental_srcdir}/memory \\\n+\t${experimental_srcdir}/numeric \\\n \t${experimental_srcdir}/optional \\\n \t${experimental_srcdir}/ratio \\\n \t${experimental_srcdir}/set \\"}, {"sha": "4a721a296c8ce7b7f56b63a2ffacea01dc02bc74", "filename": "libstdc++-v3/include/Makefile.in", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c0b8a537c9c643efb8ef5d1646421696ba9098f/libstdc%2B%2B-v3%2Finclude%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c0b8a537c9c643efb8ef5d1646421696ba9098f/libstdc%2B%2B-v3%2Finclude%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2FMakefile.in?ref=6c0b8a537c9c643efb8ef5d1646421696ba9098f", "patch": "@@ -921,6 +921,7 @@ experimental_headers = \\\n \t${experimental_srcdir}/list \\\n \t${experimental_srcdir}/map \\\n \t${experimental_srcdir}/memory \\\n+\t${experimental_srcdir}/numeric \\\n \t${experimental_srcdir}/optional \\\n \t${experimental_srcdir}/ratio \\\n \t${experimental_srcdir}/set \\"}, {"sha": "a11516b4432506d58680760db1276c0c93d81e67", "filename": "libstdc++-v3/include/experimental/numeric", "status": "added", "additions": 88, "deletions": 0, "changes": 88, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c0b8a537c9c643efb8ef5d1646421696ba9098f/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Fnumeric", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c0b8a537c9c643efb8ef5d1646421696ba9098f/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Fnumeric", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Fnumeric?ref=6c0b8a537c9c643efb8ef5d1646421696ba9098f", "patch": "@@ -0,0 +1,88 @@\n+// <experimental/numeric> -*- C++ -*-\n+\n+// Copyright (C) 2015 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// Under Section 7 of GPL version 3, you are granted additional\n+// permissions described in the GCC Runtime Library Exception, version\n+// 3.1, as published by the Free Software Foundation.\n+\n+// You should have received a copy of the GNU General Public License and\n+// a copy of the GCC Runtime Library Exception along with this program;\n+// see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+// <http://www.gnu.org/licenses/>.\n+\n+/** @file experimental/numeric\n+ *  This is a TS C++ Library header.\n+ */\n+\n+//\n+// N4336 Working Draft, C++ Extensions for Library Fundamentals, Version 2\n+//\n+\n+#ifndef _GLIBCXX_EXPERIMENTAL_NUMERIC\n+#define _GLIBCXX_EXPERIMENTAL_NUMERIC 1\n+\n+#pragma GCC system_header\n+\n+#if __cplusplus <= 201103L\n+# include <bits/c++14_warning.h>\n+#else\n+\n+#include <experimental/type_traits>\n+#include <cmath>\n+\n+namespace std _GLIBCXX_VISIBILITY(default)\n+{\n+namespace experimental\n+{\n+inline namespace fundamentals_v2\n+{\n+_GLIBCXX_BEGIN_NAMESPACE_VERSION\n+\n+#define __cpp_lib_experimental_gcd_lcm 201411\n+\n+  // Greatest common divisor\n+  template<typename _Mn, typename _Nn>\n+    constexpr common_type_t<_Mn, _Nn>\n+    gcd(_Mn __m, _Nn __n)\n+    {\n+      static_assert(is_integral<_Mn>::value, \"arguments to gcd are integers\");\n+      static_assert(is_integral<_Nn>::value, \"arguments to gcd are integers\");\n+\n+      return __m == 0 ? std::abs(__n)\n+\t: __n == 0 ? std::abs(__m)\n+\t: fundamentals_v2::gcd(__n, __m % __n);\n+    }\n+\n+  // Least common multiple\n+  template<typename _Mn, typename _Nn>\n+    constexpr common_type_t<_Mn, _Nn>\n+    lcm(_Mn __m, _Nn __n)\n+    {\n+      static_assert(is_integral<_Mn>::value, \"arguments to lcm are integers\");\n+      static_assert(is_integral<_Nn>::value, \"arguments to lcm are integers\");\n+\n+      return (__m != 0 && __n != 0)\n+\t? (std::abs(__m) / fundamentals_v2::gcd(__m, __n)) * std::abs(__n)\n+\t: 0;\n+    }\n+\n+_GLIBCXX_END_NAMESPACE_VERSION\n+} // namespace fundamentals_v2\n+} // namespace experimental\n+} // namespace std\n+\n+#endif // __cplusplus <= 201103L\n+\n+#endif // _GLIBCXX_EXPERIMENTAL_NUMERIC"}, {"sha": "efbe273523f084400b7a4f8240641b28a7e93229", "filename": "libstdc++-v3/testsuite/experimental/numeric/gcd.cc", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c0b8a537c9c643efb8ef5d1646421696ba9098f/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fnumeric%2Fgcd.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c0b8a537c9c643efb8ef5d1646421696ba9098f/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fnumeric%2Fgcd.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fnumeric%2Fgcd.cc?ref=6c0b8a537c9c643efb8ef5d1646421696ba9098f", "patch": "@@ -0,0 +1,28 @@\n+// Copyright (C) 2015 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// { dg-options \"-std=gnu++14\" }\n+// { dg-do compile }\n+\n+#include <experimental/numeric>\n+\n+using std::experimental::fundamentals_v2::lcm;\n+\n+static_assert(lcm(21, 6) == 42, \"\");\n+static_assert(lcm(41, 0) == 0, \"LCD with zero is zero\");\n+static_assert(lcm(0, 7) == 0, \"LCD with zero is zero\");\n+static_assert(lcm(0, 0) == 0, \"no division by zero\");"}, {"sha": "359fa09fb8a83cd69a0f0ab82af62a609e7ed732", "filename": "libstdc++-v3/testsuite/experimental/numeric/lcm.cc", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c0b8a537c9c643efb8ef5d1646421696ba9098f/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fnumeric%2Flcm.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c0b8a537c9c643efb8ef5d1646421696ba9098f/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fnumeric%2Flcm.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fnumeric%2Flcm.cc?ref=6c0b8a537c9c643efb8ef5d1646421696ba9098f", "patch": "@@ -0,0 +1,32 @@\n+// Copyright (C) 2015 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// { dg-options \"-std=gnu++14\" }\n+// { dg-do compile }\n+\n+#include <experimental/numeric>\n+\n+using std::experimental::fundamentals_v2::gcd;\n+\n+static_assert( gcd(1071, 462) == 21, \"\" );\n+static_assert( gcd(2000, 20) == 20, \"\" );\n+static_assert( gcd(2011, 17) == 1, \"GCD of two primes is 1\" );\n+static_assert( gcd(200, 200) == 200, \"GCD of equal numbers is that number\" );\n+static_assert( gcd(0, 13) == 13, \"GCD of any number and 0 is that number\" );\n+static_assert( gcd(29, 0) == 29, \"GCD of any number and 0 is that number\" );\n+static_assert( gcd(0, 0) == 0, \"\" );\n+"}]}