{"sha": "9f8373c352f82b3fea1df0544f4cb1cf6dcc6251", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWY4MzczYzM1MmY4MmIzZmVhMWRmMDU0NGY0Y2IxY2Y2ZGNjNjI1MQ==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-07-02T00:56:37Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-07-02T00:56:37Z"}, "message": "(eliminate_regs): Fix typo in BYTE_LOADS_ZERO_EXTEND.\n\nFrom-SVN: r4823", "tree": {"sha": "8a1cd7fda28b4019004ff833c1844aab202a665e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8a1cd7fda28b4019004ff833c1844aab202a665e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9f8373c352f82b3fea1df0544f4cb1cf6dcc6251", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9f8373c352f82b3fea1df0544f4cb1cf6dcc6251", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9f8373c352f82b3fea1df0544f4cb1cf6dcc6251", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9f8373c352f82b3fea1df0544f4cb1cf6dcc6251/comments", "author": null, "committer": null, "parents": [{"sha": "1e72f68fc5cef7fe170987cce9df0dc52c6b3f4e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1e72f68fc5cef7fe170987cce9df0dc52c6b3f4e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1e72f68fc5cef7fe170987cce9df0dc52c6b3f4e"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "637e89421a085b09409d572196bdbf0985477bc9", "filename": "gcc/reload1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f8373c352f82b3fea1df0544f4cb1cf6dcc6251/gcc%2Freload1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f8373c352f82b3fea1df0544f4cb1cf6dcc6251/gcc%2Freload1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freload1.c?ref=9f8373c352f82b3fea1df0544f4cb1cf6dcc6251", "patch": "@@ -2869,7 +2869,7 @@ eliminate_regs (x, mem_mode, insn)\n \t  if (GET_CODE (new) == MEM\n \t      && (GET_MODE_SIZE (GET_MODE (x))\n \t\t  <= GET_MODE_SIZE (GET_MODE (new)))\n-#if defined(BYTES_LOADS_ZERO_EXTEND) || defined(BYTE_LOADS_SIGN_EXTEND)\n+#if defined(BYTE_LOADS_ZERO_EXTEND) || defined(BYTE_LOADS_SIGN_EXTEND)\n \t      /* On these machines we will be reloading what is\n \t\t inside the SUBREG if it originally was a pseudo and\n \t\t the inner and outer modes are both a word or"}]}