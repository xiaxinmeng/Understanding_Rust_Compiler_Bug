{"sha": "2e66e53b1efb98f5cf6b0a123990c1ca999affd7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmU2NmU1M2IxZWZiOThmNWNmNmIwYTEyMzk5MGMxY2E5OTlhZmZkNw==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@acm.org", "date": "2020-09-24T13:17:00Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@acm.org", "date": "2020-09-24T13:21:54Z"}, "message": "c++: local-decls are never member fns [PR97186]\n\nThis fixes an ICE in noexcept instantiation.  It was presuming\nfunctions always have template_info, but that changed with my\nDECL_LOCAL_DECL_P changes.  Fortunately DECL_LOCAL_DECL_P fns are\nnever member fns, so we don't need to go fishing out a this pointer.\n\nAlso I realized I'd misnamed local10.C, so renaming it local-fn3.C,\nand while there adding the effective-target lto that David E pointed\nout was missing.\n\n\tPR c++/97186\n\tgcc/cp/\n\t* pt.c (maybe_instantiate_noexcept): Local externs are never\n\tmember fns.\n\tgcc/testsuite/\n\t* g++.dg/template/local10.C: Rename ...\n\t* g++.dg/template/local-fn3.C: .. here.  Require lto.\n\t* g++.dg/template/local-fn4.C: New.", "tree": {"sha": "66754b09c5129df8e0f1e119c65e7640a0885c58", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/66754b09c5129df8e0f1e119c65e7640a0885c58"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2e66e53b1efb98f5cf6b0a123990c1ca999affd7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2e66e53b1efb98f5cf6b0a123990c1ca999affd7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2e66e53b1efb98f5cf6b0a123990c1ca999affd7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2e66e53b1efb98f5cf6b0a123990c1ca999affd7/comments", "author": {"login": "urnathan", "id": 13103001, "node_id": "MDQ6VXNlcjEzMTAzMDAx", "avatar_url": "https://avatars.githubusercontent.com/u/13103001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/urnathan", "html_url": "https://github.com/urnathan", "followers_url": "https://api.github.com/users/urnathan/followers", "following_url": "https://api.github.com/users/urnathan/following{/other_user}", "gists_url": "https://api.github.com/users/urnathan/gists{/gist_id}", "starred_url": "https://api.github.com/users/urnathan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/urnathan/subscriptions", "organizations_url": "https://api.github.com/users/urnathan/orgs", "repos_url": "https://api.github.com/users/urnathan/repos", "events_url": "https://api.github.com/users/urnathan/events{/privacy}", "received_events_url": "https://api.github.com/users/urnathan/received_events", "type": "User", "site_admin": false}, "committer": {"login": "urnathan", "id": 13103001, "node_id": "MDQ6VXNlcjEzMTAzMDAx", "avatar_url": "https://avatars.githubusercontent.com/u/13103001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/urnathan", "html_url": "https://github.com/urnathan", "followers_url": "https://api.github.com/users/urnathan/followers", "following_url": "https://api.github.com/users/urnathan/following{/other_user}", "gists_url": "https://api.github.com/users/urnathan/gists{/gist_id}", "starred_url": "https://api.github.com/users/urnathan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/urnathan/subscriptions", "organizations_url": "https://api.github.com/users/urnathan/orgs", "repos_url": "https://api.github.com/users/urnathan/repos", "events_url": "https://api.github.com/users/urnathan/events{/privacy}", "received_events_url": "https://api.github.com/users/urnathan/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9de8fa8052154a83b82f8b3785ec100d8cb24261", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9de8fa8052154a83b82f8b3785ec100d8cb24261", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9de8fa8052154a83b82f8b3785ec100d8cb24261"}], "stats": {"total": 44, "additions": 36, "deletions": 8}, "files": [{"sha": "62e85095bc4adfe906d56276a8c4c1d671e967cf", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 13, "deletions": 8, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e66e53b1efb98f5cf6b0a123990c1ca999affd7/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e66e53b1efb98f5cf6b0a123990c1ca999affd7/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=2e66e53b1efb98f5cf6b0a123990c1ca999affd7", "patch": "@@ -25397,15 +25397,20 @@ maybe_instantiate_noexcept (tree fn, tsubst_flags_t complain)\n \t  push_deferring_access_checks (dk_no_deferred);\n \t  input_location = DECL_SOURCE_LOCATION (fn);\n \n-\t  /* If needed, set current_class_ptr for the benefit of\n-\t     tsubst_copy/PARM_DECL.  */\n-\t  tree tdecl = DECL_TEMPLATE_RESULT (DECL_TI_TEMPLATE (fn));\n-\t  if (DECL_NONSTATIC_MEMBER_FUNCTION_P (tdecl))\n+\t  if (!DECL_LOCAL_DECL_P (fn))\n \t    {\n-\t      tree this_parm = DECL_ARGUMENTS (tdecl);\n-\t      current_class_ptr = NULL_TREE;\n-\t      current_class_ref = cp_build_fold_indirect_ref (this_parm);\n-\t      current_class_ptr = this_parm;\n+\t      /* If needed, set current_class_ptr for the benefit of\n+\t\t tsubst_copy/PARM_DECL.  The exception pattern will\n+\t\t refer to the parm of the template, not the\n+\t\t instantiation.  */\n+\t      tree tdecl = DECL_TEMPLATE_RESULT (DECL_TI_TEMPLATE (fn));\n+\t      if (DECL_NONSTATIC_MEMBER_FUNCTION_P (tdecl))\n+\t\t{\n+\t\t  tree this_parm = DECL_ARGUMENTS (tdecl);\n+\t\t  current_class_ptr = NULL_TREE;\n+\t\t  current_class_ref = cp_build_fold_indirect_ref (this_parm);\n+\t\t  current_class_ptr = this_parm;\n+\t\t}\n \t    }\n \n \t  /* If this function is represented by a TEMPLATE_DECL, then"}, {"sha": "2affe235bd381070577976f6f93be3a0785c02ef", "filename": "gcc/testsuite/g++.dg/template/local-fn3.C", "status": "renamed", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e66e53b1efb98f5cf6b0a123990c1ca999affd7/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Flocal-fn3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e66e53b1efb98f5cf6b0a123990c1ca999affd7/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Flocal-fn3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Flocal-fn3.C?ref=2e66e53b1efb98f5cf6b0a123990c1ca999affd7", "patch": "@@ -1,4 +1,6 @@\n // PR c++/97171\n+\n+// { dg-require-effective-target lto }\n // { dg-additional-options -flto }\n \n template <typename _UnaryOperation>", "previous_filename": "gcc/testsuite/g++.dg/template/local10.C"}, {"sha": "4699012acccf1e6db4bcbb656f64817aa61b2449", "filename": "gcc/testsuite/g++.dg/template/local-fn4.C", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e66e53b1efb98f5cf6b0a123990c1ca999affd7/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Flocal-fn4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e66e53b1efb98f5cf6b0a123990c1ca999affd7/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Flocal-fn4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Flocal-fn4.C?ref=2e66e53b1efb98f5cf6b0a123990c1ca999affd7", "patch": "@@ -0,0 +1,21 @@\n+// PR c++/97186\n+// ICE in exception spec substitution\n+\n+\n+template <class GG>\n+struct no {\n+  static void\n+  tg ()\n+  {\n+    void\n+      hk () noexcept (tg); // { dg-error \"convert\" }\n+\n+    hk ();\n+  }\n+};\n+\n+void\n+os ()\n+{\n+  no<int> ().tg ();\n+}"}]}