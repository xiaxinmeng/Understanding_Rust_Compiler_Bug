{"sha": "239b7deaef30a58050dca4a69ca8ef34ae3f2194", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjM5YjdkZWFlZjMwYTU4MDUwZGNhNGE2OWNhOGVmMzRhZTNmMjE5NA==", "commit": {"author": {"name": "Mark Mitchell", "email": "mark@codesourcery.com", "date": "2002-12-28T06:29:24Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "2002-12-28T06:29:24Z"}, "message": "gjavah.c (print_name_for_stub_or_jni): Adjust call to print_cxx_classname.\n\n\t* gjavah.c (print_name_for_stub_or_jni): Adjust call to\n\tprint_cxx_classname.\n\t(print_cxx_classname): Add add_scope parameter.\n\t(print_class_decls): Do not emit a semicolon after the extern\n\t\"Java\" block.\n\t(process_file): Adjust calls to print_cxx_classname.\n\nFrom-SVN: r60555", "tree": {"sha": "64c467eec12b4a04912a915aa3ec1bc034665ebd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/64c467eec12b4a04912a915aa3ec1bc034665ebd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/239b7deaef30a58050dca4a69ca8ef34ae3f2194", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/239b7deaef30a58050dca4a69ca8ef34ae3f2194", "html_url": "https://github.com/Rust-GCC/gccrs/commit/239b7deaef30a58050dca4a69ca8ef34ae3f2194", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/239b7deaef30a58050dca4a69ca8ef34ae3f2194/comments", "author": null, "committer": null, "parents": [{"sha": "62fbd434b0b16582c108561c7cd70319d5a32b17", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/62fbd434b0b16582c108561c7cd70319d5a32b17", "html_url": "https://github.com/Rust-GCC/gccrs/commit/62fbd434b0b16582c108561c7cd70319d5a32b17"}], "stats": {"total": 25, "additions": 18, "deletions": 7}, "files": [{"sha": "7fb17a8b7981cddbd3a4ffb564262474d0c55a56", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/239b7deaef30a58050dca4a69ca8ef34ae3f2194/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/239b7deaef30a58050dca4a69ca8ef34ae3f2194/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=239b7deaef30a58050dca4a69ca8ef34ae3f2194", "patch": "@@ -1,3 +1,12 @@\n+2002-12-27  Mark Mitchell  <mark@codesourcery.com>\n+\n+\t* gjavah.c (print_name_for_stub_or_jni): Adjust call to\n+\tprint_cxx_classname.\n+\t(print_cxx_classname): Add add_scope parameter.\n+\t(print_class_decls): Do not emit a semicolon after the extern\n+\t\"Java\" block.\n+\t(process_file): Adjust calls to print_cxx_classname.\t\n+\n 2002-12-23  Joseph S. Myers  <jsm@polyomino.org.uk>\n \n \t* gcj.texi: Include Cover Texts in man page."}, {"sha": "b1dc55ffa522f4a9f24539752e72c04cc2a2ac34", "filename": "gcc/java/gjavah.c", "status": "modified", "additions": 9, "deletions": 7, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/239b7deaef30a58050dca4a69ca8ef34ae3f2194/gcc%2Fjava%2Fgjavah.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/239b7deaef30a58050dca4a69ca8ef34ae3f2194/gcc%2Fjava%2Fgjavah.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fgjavah.c?ref=239b7deaef30a58050dca4a69ca8ef34ae3f2194", "patch": "@@ -122,7 +122,7 @@ static struct method_name *method_name_list;\n \n static void print_field_info PARAMS ((FILE*, JCF*, int, int, JCF_u2));\n static void print_mangled_classname PARAMS ((FILE*, JCF*, const char*, int));\n-static int  print_cxx_classname PARAMS ((FILE*, const char*, JCF*, int));\n+static int  print_cxx_classname PARAMS ((FILE*, const char*, JCF*, int, int));\n static void print_method_info PARAMS ((FILE*, JCF*, int, int, JCF_u2));\n static void print_c_decl PARAMS ((FILE*, JCF*, int, int, int, const char *,\n \t\t\t\t  int));\n@@ -1533,7 +1533,7 @@ DEFUN (print_name_for_stub_or_jni, (stream, jcf, name_index, signature_index,\n        AND int is_init AND const char *name_override AND int flags)\n {\n   const char *const prefix = flag_jni ? \"Java_\" : \"\";\n-  print_cxx_classname (stream, prefix, jcf, jcf->this_class);\n+  print_cxx_classname (stream, prefix, jcf, jcf->this_class, 1);\n   fputs (flag_jni ? \"_\" : \"::\", stream);\n   print_full_cxx_name (stream, jcf, name_index, \n \t\t       signature_index, is_init, name_override,\n@@ -1641,11 +1641,12 @@ DEFUN(print_mangled_classname, (stream, jcf, prefix, index),\n    to an array, ignore it and don't print PREFIX.  Returns 1 if\n    something was printed, 0 otherwise.  */\n static int\n-print_cxx_classname (stream, prefix, jcf, index)\n+print_cxx_classname (stream, prefix, jcf, index, add_scope)\n      FILE *stream;\n      const char *prefix;\n      JCF *jcf;\n      int index;\n+     int add_scope;\n {\n   int name_index = JPOOL_USHORT1 (jcf, index);\n   int len, c;\n@@ -1664,7 +1665,7 @@ print_cxx_classname (stream, prefix, jcf, index)\n   fputs (prefix, stream);\n \n   /* Print a leading \"::\" so we look in the right namespace.  */\n-  if (! flag_jni && ! stubs)\n+  if (! flag_jni && ! stubs && add_scope)\n     fputs (\"::\", stream);\n \n   while (s < limit)\n@@ -1954,7 +1955,7 @@ print_class_decls (out, jcf, self)\n       /* We use an initial offset of 0 because the root namelet\n \t doesn't cause anything to print.  */\n       print_namelet (out, &root, 0);\n-      fputs (\"};\\n\\n\", out);\n+      fputs (\"}\\n\\n\", out);\n     }\n }\n \n@@ -2130,7 +2131,8 @@ DEFUN(process_file, (jcf, out),\n \n       if (! stubs)\n \t{\n-\t  if (! print_cxx_classname (out, \"class \", jcf, jcf->this_class))\n+\t  if (! print_cxx_classname (out, \"class \", jcf,\n+\t\t\t\t     jcf->this_class, 0))\n \t    {\n \t      fprintf (stderr, \"class is of array type\\n\");\n \t      found_error = 1;\n@@ -2139,7 +2141,7 @@ DEFUN(process_file, (jcf, out),\n \t  if (jcf->super_class)\n \t    {\n \t      if (! print_cxx_classname (out, \" : public \", \n-\t\t\t\t\t jcf, jcf->super_class))\n+\t\t\t\t\t jcf, jcf->super_class, 1))\n \t\t{\n \t\t  fprintf (stderr, \"base class is of array type\\n\");\n \t\t  found_error = 1;"}]}