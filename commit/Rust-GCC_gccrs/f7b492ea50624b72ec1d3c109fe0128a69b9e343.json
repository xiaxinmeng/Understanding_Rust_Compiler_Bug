{"sha": "f7b492ea50624b72ec1d3c109fe0128a69b9e343", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjdiNDkyZWE1MDYyNGI3MmVjMWQzYzEwOWZlMDEyOGE2OWI5ZTM0Mw==", "commit": {"author": {"name": "Jiong Wang", "email": "jiwang@gcc.gnu.org", "date": "2015-11-23T12:14:05Z"}, "committer": {"name": "Jiong Wang", "email": "jiwang@gcc.gnu.org", "date": "2015-11-23T12:14:05Z"}, "message": "[Patch] Drop constant overflow flag in adjust_range_with_scev when possible\n\n2015-11-23  Richard Biener  <rguenth@gcc.gnu.com>\n            Jiong Wang  <jiong.wang@arm.com>\n\ngcc/\n  PR tree-optimization/68317\n  PR tree-optimization/68326\n  * tree-vrp.c (adjust_range_with_scev): Call drop_tree_overflow if the\n  final min and max are not infinity.\n\ngcc/testsuite/\n  * gcc.dg/pr68317.c: New testcase.\n\nFrom-SVN: r230754", "tree": {"sha": "87ac82b67ee566ffc72ae143a1af2161f5edf2a2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/87ac82b67ee566ffc72ae143a1af2161f5edf2a2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f7b492ea50624b72ec1d3c109fe0128a69b9e343", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f7b492ea50624b72ec1d3c109fe0128a69b9e343", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f7b492ea50624b72ec1d3c109fe0128a69b9e343", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f7b492ea50624b72ec1d3c109fe0128a69b9e343/comments", "author": null, "committer": null, "parents": [{"sha": "a789b24062605aee7cdf3cc20a79524e3984edc5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a789b24062605aee7cdf3cc20a79524e3984edc5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a789b24062605aee7cdf3cc20a79524e3984edc5"}], "stats": {"total": 41, "additions": 41, "deletions": 0}, "files": [{"sha": "b1d0918ced97b4b308e3e35929e612f21cc4e439", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f7b492ea50624b72ec1d3c109fe0128a69b9e343/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f7b492ea50624b72ec1d3c109fe0128a69b9e343/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f7b492ea50624b72ec1d3c109fe0128a69b9e343", "patch": "@@ -1,3 +1,11 @@\n+2015-11-23  Richard Biener  <rguenth@gcc.gnu.org>\n+\t    Jiong Wang  <jiong.wang@arm.com>\n+\n+\tPR tree-optimization/68317\n+\tPR tree-optimization/68326\n+\t* tree-vrp.c (adjust_range_with_scev): Call drop_tree_overflow if the\n+\tfinal min and max are not infinity.\n+\n 2015-11-23  Ilya Enkovich  <enkovich.gnu@gmail.com>\n \t    Richard Biener  <rguenther@suse.de>\n "}, {"sha": "1c60e503b99273cc0c697951b09909d51a1a2955", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f7b492ea50624b72ec1d3c109fe0128a69b9e343/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f7b492ea50624b72ec1d3c109fe0128a69b9e343/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=f7b492ea50624b72ec1d3c109fe0128a69b9e343", "patch": "@@ -1,3 +1,10 @@\n+2015-11-23  Richard Biener  <rguenther@suse.de>\n+\t    Jiong Wang  <jiong.wang@arm.com>\n+\n+\tPR tree-optimization/68317\n+\tPR tree-optimization/68326\n+\t* gcc.dg/pr68317.c: New testcase.\n+\n 2015-11-23  Ilya Enkovich  <enkovich.gnu@gmail.com>\n \n \tPR tree-optimization/68327"}, {"sha": "7b5656395886e18a71d8815eca03292cfb50be12", "filename": "gcc/testsuite/gcc.dg/pr68317.c", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f7b492ea50624b72ec1d3c109fe0128a69b9e343/gcc%2Ftestsuite%2Fgcc.dg%2Fpr68317.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f7b492ea50624b72ec1d3c109fe0128a69b9e343/gcc%2Ftestsuite%2Fgcc.dg%2Fpr68317.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr68317.c?ref=f7b492ea50624b72ec1d3c109fe0128a69b9e343", "patch": "@@ -0,0 +1,15 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2\" } */\n+\n+void bar (int);\n+\n+void\n+foo ()\n+{\n+ int index = 0;\n+\n+ for (index; index <= 10; index--)\n+   /* Result of the following multiply will overflow\n+      when converted to signed int.  */\n+   bar ((0xcafe + index) * 0xdead);\n+}"}, {"sha": "70011908acbf9adcaeb563661e66d00c88352c40", "filename": "gcc/tree-vrp.c", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f7b492ea50624b72ec1d3c109fe0128a69b9e343/gcc%2Ftree-vrp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f7b492ea50624b72ec1d3c109fe0128a69b9e343/gcc%2Ftree-vrp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vrp.c?ref=f7b492ea50624b72ec1d3c109fe0128a69b9e343", "patch": "@@ -4323,6 +4323,17 @@ adjust_range_with_scev (value_range *vr, struct loop *loop,\n \t  && is_positive_overflow_infinity (max)))\n     return;\n \n+  /* Even for valid range info, sometimes overflow flag will leak in.\n+     As GIMPLE IL should have no constants with TREE_OVERFLOW set, we\n+     drop them except for +-overflow_infinity which still need special\n+     handling in vrp pass.  */\n+  if (TREE_OVERFLOW_P (min)\n+      && ! is_negative_overflow_infinity (min))\n+    min = drop_tree_overflow (min);\n+  if (TREE_OVERFLOW_P (max)\n+      && ! is_positive_overflow_infinity (max))\n+    max = drop_tree_overflow (max);\n+\n   set_value_range (vr, VR_RANGE, min, max, vr->equiv);\n }\n "}]}