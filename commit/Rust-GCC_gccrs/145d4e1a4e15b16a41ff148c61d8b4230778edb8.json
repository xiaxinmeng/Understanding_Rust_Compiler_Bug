{"sha": "145d4e1a4e15b16a41ff148c61d8b4230778edb8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTQ1ZDRlMWE0ZTE1YjE2YTQxZmYxNDhjNjFkOGI0MjMwNzc4ZWRiOA==", "commit": {"author": {"name": "Andre Vieira", "email": "andre.simoesdiasvieira@arm.com", "date": "2019-02-20T14:11:43Z"}, "committer": {"name": "Andre Vieira", "email": "avieira@gcc.gnu.org", "date": "2019-02-20T14:11:43Z"}, "message": "[GCC] PR target/86487: fix the way 'uses_hard_regs_p' handles paradoxical\nsubregs\n\ngcc/ChangeLog:\n2019-02-20 Andre Vieira  <andre.simoesdiasvieira@arm.com>\n\n\tPR target/86487\n\t* lra-constraints.c(uses_hard_regs_p): Fix handling of\n\tparadoxical SUBREGS.\n\ngcc/testsuite/ChangeLog:\n2019-02-20 Andre Vieira  <andre.simoesdiasvieira@arm.com>\n\n\tPR target/86487\n\t* gcc.target/arm/pr86487.c: New.\n\nFrom-SVN: r269039", "tree": {"sha": "15e857c5548cc7cba473893bc803632ca9107f4e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/15e857c5548cc7cba473893bc803632ca9107f4e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/145d4e1a4e15b16a41ff148c61d8b4230778edb8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/145d4e1a4e15b16a41ff148c61d8b4230778edb8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/145d4e1a4e15b16a41ff148c61d8b4230778edb8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/145d4e1a4e15b16a41ff148c61d8b4230778edb8/comments", "author": {"login": "avieira-arm", "id": 68072104, "node_id": "MDQ6VXNlcjY4MDcyMTA0", "avatar_url": "https://avatars.githubusercontent.com/u/68072104?v=4", "gravatar_id": "", "url": "https://api.github.com/users/avieira-arm", "html_url": "https://github.com/avieira-arm", "followers_url": "https://api.github.com/users/avieira-arm/followers", "following_url": "https://api.github.com/users/avieira-arm/following{/other_user}", "gists_url": "https://api.github.com/users/avieira-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/avieira-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/avieira-arm/subscriptions", "organizations_url": "https://api.github.com/users/avieira-arm/orgs", "repos_url": "https://api.github.com/users/avieira-arm/repos", "events_url": "https://api.github.com/users/avieira-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/avieira-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c9ea5b639bac7750bb1a3ba03a1c6c72e1abe4ad", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c9ea5b639bac7750bb1a3ba03a1c6c72e1abe4ad", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c9ea5b639bac7750bb1a3ba03a1c6c72e1abe4ad"}], "stats": {"total": 37, "additions": 34, "deletions": 3}, "files": [{"sha": "b544e089e57475f12ee63af4075b50a0f534b0c3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/145d4e1a4e15b16a41ff148c61d8b4230778edb8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/145d4e1a4e15b16a41ff148c61d8b4230778edb8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=145d4e1a4e15b16a41ff148c61d8b4230778edb8", "patch": "@@ -1,3 +1,9 @@\n+2019-02-20 Andre Vieira  <andre.simoesdiasvieira@arm.com>\n+\n+\tPR target/86487\n+\t* lra-constraints.c(uses_hard_regs_p): Fix handling of\n+\tparadoxical SUBREGS.\n+\n 2019-02-20  Li Jia He  <helijia@linux.ibm.com>\n \n \tPR target/88100"}, {"sha": "629dc5dae1f7515d0073103e128b14954a8fb472", "filename": "gcc/lra-constraints.c", "status": "modified", "additions": 13, "deletions": 3, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/145d4e1a4e15b16a41ff148c61d8b4230778edb8/gcc%2Flra-constraints.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/145d4e1a4e15b16a41ff148c61d8b4230778edb8/gcc%2Flra-constraints.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flra-constraints.c?ref=145d4e1a4e15b16a41ff148c61d8b4230778edb8", "patch": "@@ -1770,14 +1770,24 @@ uses_hard_regs_p (rtx x, HARD_REG_SET set)\n     return false;\n   code = GET_CODE (x);\n   mode = GET_MODE (x);\n+\n   if (code == SUBREG)\n     {\n+      /* For all SUBREGs we want to check whether the full multi-register\n+\t overlaps the set.  For normal SUBREGs this means 'get_hard_regno' of\n+\t the inner register, for paradoxical SUBREGs this means the\n+\t 'get_hard_regno' of the full SUBREG and for complete SUBREGs either is\n+\t fine.  Use the wider mode for all cases.  */\n+      rtx subreg = SUBREG_REG (x);\n       mode = wider_subreg_mode (x);\n-      x = SUBREG_REG (x);\n-      code = GET_CODE (x);\n+      if (mode == GET_MODE (subreg))\n+\t{\n+\t  x = subreg;\n+\t  code = GET_CODE (x);\n+\t}\n     }\n \n-  if (REG_P (x))\n+  if (REG_P (x) || SUBREG_P (x))\n     {\n       x_hard_regno = get_hard_regno (x, true);\n       return (x_hard_regno >= 0"}, {"sha": "3b415cd2564a8e691884b8e2a22553412b106689", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/145d4e1a4e15b16a41ff148c61d8b4230778edb8/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/145d4e1a4e15b16a41ff148c61d8b4230778edb8/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=145d4e1a4e15b16a41ff148c61d8b4230778edb8", "patch": "@@ -1,3 +1,8 @@\n+2019-02-20 Andre Vieira  <andre.simoesdiasvieira@arm.com>\n+\n+\tPR target/86487\n+\t* gcc.target/arm/pr86487.c: New.\n+\n 2019-02-20  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR c++/84536"}, {"sha": "1c1db7852d91a82a1d2b6eaa4f3d4c6dbef107f5", "filename": "gcc/testsuite/gcc.target/arm/pr86487.c", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/145d4e1a4e15b16a41ff148c61d8b4230778edb8/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fpr86487.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/145d4e1a4e15b16a41ff148c61d8b4230778edb8/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fpr86487.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fpr86487.c?ref=145d4e1a4e15b16a41ff148c61d8b4230778edb8", "patch": "@@ -0,0 +1,10 @@\n+/* { dg-skip-if \"\" { *-*-* } { \"-march=armv[0-6]*\" \"-mthumb\" } { \"\" } } */\n+/* { dg-require-effective-target arm_neon_hw } */\n+/* { dg-options \"-O1 -mbig-endian\" } */\n+/* { dg-add-options arm_neon } */\n+int a, b, c, d;\n+long long fn1(long long p2) { return p2 == 0 ? -1 : -1 % p2; }\n+void fn2(long long p1, short p2, long p3) {\n+  b = fn1((d || 6) & a);\n+  c = b | p3;\n+}"}]}