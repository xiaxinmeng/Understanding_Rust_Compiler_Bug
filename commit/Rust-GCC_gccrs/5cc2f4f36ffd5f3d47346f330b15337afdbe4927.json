{"sha": "5cc2f4f36ffd5f3d47346f330b15337afdbe4927", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWNjMmY0ZjM2ZmZkNWYzZDQ3MzQ2ZjMzMGIxNTMzN2FmZGJlNDkyNw==", "commit": {"author": {"name": "Kaveh R. Ghazi", "email": "ghazi@caip.rutgers.edu", "date": "2003-04-26T20:44:30Z"}, "committer": {"name": "Kaveh Ghazi", "email": "ghazi@gcc.gnu.org", "date": "2003-04-26T20:44:30Z"}, "message": "md.texi (cmpstr): Document additional restrictions.\n\ngcc:\n\t* doc/md.texi (cmpstr): Document additional restrictions.\n\ntestsuite:\n\t* gcc.c-torture/execute/string-opt-8.c: Don't perform cmpstr\n\tchecks for __pj__, but do them for !__OPTIMIZE__ and __s390__.\n\nFrom-SVN: r66116", "tree": {"sha": "bfbdbe4fa86ef8e6019e8119026700d36ca99abe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bfbdbe4fa86ef8e6019e8119026700d36ca99abe"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5cc2f4f36ffd5f3d47346f330b15337afdbe4927", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5cc2f4f36ffd5f3d47346f330b15337afdbe4927", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5cc2f4f36ffd5f3d47346f330b15337afdbe4927", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5cc2f4f36ffd5f3d47346f330b15337afdbe4927/comments", "author": null, "committer": null, "parents": [{"sha": "e2b694230a73dbc6e0a2248fb8aba226ebdbc678", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e2b694230a73dbc6e0a2248fb8aba226ebdbc678", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e2b694230a73dbc6e0a2248fb8aba226ebdbc678"}], "stats": {"total": 23, "additions": 18, "deletions": 5}, "files": [{"sha": "0f83a2bdd4e14881fa18677f25d9d9610057b4ab", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5cc2f4f36ffd5f3d47346f330b15337afdbe4927/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5cc2f4f36ffd5f3d47346f330b15337afdbe4927/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5cc2f4f36ffd5f3d47346f330b15337afdbe4927", "patch": "@@ -1,3 +1,7 @@\n+2003-04-26  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n+\n+\t* doc/md.texi (cmpstr): Document additional restrictions.\n+\n 2003-04-26  Neil Booth  <neil@daikokuya.co.uk>\n \n \t* flags.h (time_report): Remove."}, {"sha": "c808d494e9aba68722e6baad1b1b31a1c0054788", "filename": "gcc/doc/md.texi", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5cc2f4f36ffd5f3d47346f330b15337afdbe4927/gcc%2Fdoc%2Fmd.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5cc2f4f36ffd5f3d47346f330b15337afdbe4927/gcc%2Fdoc%2Fmd.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fmd.texi?ref=5cc2f4f36ffd5f3d47346f330b15337afdbe4927", "patch": "@@ -2788,9 +2788,12 @@ The use for multiple @code{clrstr@var{m}} is as for @code{movstr@var{m}}.\n Block compare instruction, with five operands.  Operand 0 is the output;\n it has mode @var{m}.  The remaining four operands are like the operands\n of @samp{movstr@var{m}}.  The two memory blocks specified are compared\n-byte by byte in lexicographic order.  The effect of the instruction is\n-to store a value in operand 0 whose sign indicates the result of the\n-comparison.\n+byte by byte in lexicographic order starting at the beginning of each\n+string.  The instruction is not allowed to prefetch more than one byte\n+at a time since either string may end in the first byte and reading past\n+that may access an invalid page or segment and cause a fault.  The\n+effect of the instruction is to store a value in operand 0 whose sign\n+indicates the result of the comparison.\n \n @cindex @code{strlen@var{m}} instruction pattern\n @item @samp{strlen@var{m}}"}, {"sha": "9c0ef12870c281000f40bf7dc02f919bb2d59887", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5cc2f4f36ffd5f3d47346f330b15337afdbe4927/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5cc2f4f36ffd5f3d47346f330b15337afdbe4927/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=5cc2f4f36ffd5f3d47346f330b15337afdbe4927", "patch": "@@ -1,3 +1,8 @@\n+2003-04-26  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n+\n+\t* gcc.c-torture/execute/string-opt-8.c: Don't perform cmpstr\n+\tchecks for __pj__, but do them for !__OPTIMIZE__ and __s390__.\n+\n 2003-04-25  Mark Mitchell  <mark@codesourcery.com>\n \n \t* g++.old-deja/g++.pt/instantiate12.C: Explicit instantiate"}, {"sha": "5ab3a99c5e0041692af099cdf08cb702f40b985e", "filename": "gcc/testsuite/gcc.c-torture/execute/string-opt-8.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5cc2f4f36ffd5f3d47346f330b15337afdbe4927/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fstring-opt-8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5cc2f4f36ffd5f3d47346f330b15337afdbe4927/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fstring-opt-8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fstring-opt-8.c?ref=5cc2f4f36ffd5f3d47346f330b15337afdbe4927", "patch": "@@ -65,8 +65,9 @@ int main ()\n   s2 = s1; s3 = s1+4;\n   if (strncmp (++s2, ++s3+2, 1) >= 0 || s2 != s1+1 || s3 != s1+5)\n     abort();\n-#if defined(__i386__) || defined (__pj__) || defined (__i370__)\n-  /* These tests work on platforms which support cmpstrsi.  */\n+#if !defined(__OPTIMIZE__) || defined(__i386__) || defined (__i370__) || defined (__s390__)\n+  /* These tests work on platforms which support cmpstrsi.  We test it\n+     at -O0 on all platforms to ensure the strncmp logic is correct.  */\n   s2 = s1;\n   if (strncmp (++s2, \"ello\", 3) != 0 || s2 != s1+1)\n     abort();"}]}