{"sha": "cb038fd20d3d744471b887658786e7a765fb3e1b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2IwMzhmZDIwZDNkNzQ0NDcxYjg4NzY1ODc4NmU3YTc2NWZiM2UxYg==", "commit": {"author": {"name": "Richard Sandiford", "email": "rdsandiford@googlemail.com", "date": "2012-08-27T16:25:47Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2012-08-27T16:25:47Z"}, "message": "mips.c (mips_pic_call_symbol_from_set): Check for SYMBOL_REF SET_SRCs.\n\ngcc/\n\t* config/mips/mips.c (mips_pic_call_symbol_from_set): Check for\n\tSYMBOL_REF SET_SRCs.\n\nFrom-SVN: r190717", "tree": {"sha": "3136191e2b55124155aee6fe1a205646a0f00475", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3136191e2b55124155aee6fe1a205646a0f00475"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cb038fd20d3d744471b887658786e7a765fb3e1b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cb038fd20d3d744471b887658786e7a765fb3e1b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cb038fd20d3d744471b887658786e7a765fb3e1b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cb038fd20d3d744471b887658786e7a765fb3e1b/comments", "author": {"login": "rsandifo", "id": 4235983, "node_id": "MDQ6VXNlcjQyMzU5ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/4235983?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo", "html_url": "https://github.com/rsandifo", "followers_url": "https://api.github.com/users/rsandifo/followers", "following_url": "https://api.github.com/users/rsandifo/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo/orgs", "repos_url": "https://api.github.com/users/rsandifo/repos", "events_url": "https://api.github.com/users/rsandifo/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d8c5157261ce99adf33da209c6ba73f41cb9419b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d8c5157261ce99adf33da209c6ba73f41cb9419b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d8c5157261ce99adf33da209c6ba73f41cb9419b"}], "stats": {"total": 23, "additions": 17, "deletions": 6}, "files": [{"sha": "ac457722dd4ec8d1c61eb35e46348215c64d8eaf", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb038fd20d3d744471b887658786e7a765fb3e1b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb038fd20d3d744471b887658786e7a765fb3e1b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=cb038fd20d3d744471b887658786e7a765fb3e1b", "patch": "@@ -1,3 +1,8 @@\n+2012-08-27  Richard Sandiford  <rdsandiford@googlemail.com>\n+\n+\t* config/mips/mips.c (mips_pic_call_symbol_from_set): Check for\n+\tSYMBOL_REF SET_SRCs.\n+\n 2012-08-27  Richard Sandiford  <rdsandiford@googlemail.com>\n \n \t* config/mips/mips.c (vr4130_align_insns): Don't simulate"}, {"sha": "7721a7c1ce10424c17fc5fe82f45ef80aede8984", "filename": "gcc/config/mips/mips.c", "status": "modified", "additions": 12, "deletions": 6, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb038fd20d3d744471b887658786e7a765fb3e1b/gcc%2Fconfig%2Fmips%2Fmips.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb038fd20d3d744471b887658786e7a765fb3e1b/gcc%2Fconfig%2Fmips%2Fmips.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.c?ref=cb038fd20d3d744471b887658786e7a765fb3e1b", "patch": "@@ -14706,20 +14706,26 @@ mips_pic_call_symbol_from_set (df_ref def, rtx reg, bool recurse_p)\n     {\n       rtx note, src, symbol;\n \n-      /* First, look at REG_EQUAL/EQUIV notes.  */\n-      note = find_reg_equal_equiv_note (def_insn);\n-      if (note && GET_CODE (XEXP (note, 0)) == SYMBOL_REF)\n-\treturn XEXP (note, 0);\n-\n-      /* For %call16 references we don't have REG_EQUAL.  */\n+      /* First see whether the source is a plain symbol.  This is used\n+\t when calling symbols that are not lazily bound.  */\n       src = SET_SRC (set);\n+      if (GET_CODE (src) == SYMBOL_REF)\n+\treturn src;\n+\n+      /* Handle %call16 references.  */\n       symbol = mips_strip_unspec_call (src);\n       if (symbol)\n \t{\n \t  gcc_assert (GET_CODE (symbol) == SYMBOL_REF);\n \t  return symbol;\n \t}\n \n+      /* If we have something more complicated, look for a\n+\t REG_EQUAL or REG_EQUIV note.  */\n+      note = find_reg_equal_equiv_note (def_insn);\n+      if (note && GET_CODE (XEXP (note, 0)) == SYMBOL_REF)\n+\treturn XEXP (note, 0);\n+\n       /* Follow at most one simple register copy.  Such copies are\n \t interesting in cases like:\n "}]}