{"sha": "429ec7dc9b70e5eebcdd7abf328e90c76b4a55bc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDI5ZWM3ZGM5YjcwZTVlZWJjZGQ3YWJmMzI4ZTkwYzc2YjRhNTViYw==", "commit": {"author": {"name": "David Edelsohn", "email": "edelsohn@gnu.org", "date": "2006-07-06T18:59:58Z"}, "committer": {"name": "David Edelsohn", "email": "dje@gcc.gnu.org", "date": "2006-07-06T18:59:58Z"}, "message": "re PR target/28150 (ICE in reload_cse_simplify_operands, at postreload.c:394)\n\n2006-07-06  David Edelsohn  <edelsohn@gnu.org>\n\n        PR target/28150\n        * config/rs6000/rs6000.c (rs6000_legitimate_address): Do not allow\n        PRE_{INC,DEC} of TFmode.\n\n2006-07-06  David Edelsohn  <edelsohn@gnu.org>\n            Alan Modra  <amodra@bigpond.net.au>\n\n        PR target/28170\n        * config/rs6000/rs6000.c (insvdi_rshift_rlwimi_p): Correct shiftop\n        bounds. Simplify.\n\nCo-Authored-By: Alan Modra <amodra@bigpond.net.au>\n\nFrom-SVN: r115229", "tree": {"sha": "bc0244f73022f1392df38795b46228396ee7f37a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bc0244f73022f1392df38795b46228396ee7f37a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/429ec7dc9b70e5eebcdd7abf328e90c76b4a55bc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/429ec7dc9b70e5eebcdd7abf328e90c76b4a55bc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/429ec7dc9b70e5eebcdd7abf328e90c76b4a55bc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/429ec7dc9b70e5eebcdd7abf328e90c76b4a55bc/comments", "author": null, "committer": null, "parents": [{"sha": "1f0b926a1fe14a4ec094be7343aa7c8cf9b70716", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1f0b926a1fe14a4ec094be7343aa7c8cf9b70716", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1f0b926a1fe14a4ec094be7343aa7c8cf9b70716"}], "stats": {"total": 26, "additions": 20, "deletions": 6}, "files": [{"sha": "c29617590f2801248ae3599db616820c6646b7ce", "filename": "gcc/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/429ec7dc9b70e5eebcdd7abf328e90c76b4a55bc/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/429ec7dc9b70e5eebcdd7abf328e90c76b4a55bc/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=429ec7dc9b70e5eebcdd7abf328e90c76b4a55bc", "patch": "@@ -1,3 +1,16 @@\n+2006-07-06  David Edelsohn  <edelsohn@gnu.org>\n+\n+\tPR target/28150\n+\t* config/rs6000/rs6000.c (rs6000_legitimate_address): Do not allow\n+\tPRE_{INC,DEC} of TFmode.\n+\n+2006-07-06  David Edelsohn  <edelsohn@gnu.org>\n+\t    Alan Modra  <amodra@bigpond.net.au>\n+\n+\tPR target/28170\n+\t* config/rs6000/rs6000.c (insvdi_rshift_rlwimi_p): Correct shiftop\n+\tbounds. Simplify.\n+\n 2006-07-06  Rainer Orth  <ro@TechFak.Uni-Bielefeld.DE>\n \n \tPR target/28285"}, {"sha": "c42bb9f1e63e985dedca536b3544c0d0f4184574", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 7, "deletions": 6, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/429ec7dc9b70e5eebcdd7abf328e90c76b4a55bc/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/429ec7dc9b70e5eebcdd7abf328e90c76b4a55bc/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=429ec7dc9b70e5eebcdd7abf328e90c76b4a55bc", "patch": "@@ -3522,6 +3522,7 @@ rs6000_legitimate_address (enum machine_mode mode, rtx x, int reg_ok_strict)\n   if ((GET_CODE (x) == PRE_INC || GET_CODE (x) == PRE_DEC)\n       && !ALTIVEC_VECTOR_MODE (mode)\n       && !SPE_VECTOR_MODE (mode)\n+      && mode != TFmode\n       /* Restrict addressing for DI because of our SUBREG hackery.  */\n       && !(TARGET_E500_DOUBLE && (mode == DFmode || mode == DImode))\n       && TARGET_UPDATE\n@@ -9799,12 +9800,12 @@ effects of instruction do not correspond to semantics of RTL insn.  */\n int\n insvdi_rshift_rlwimi_p (rtx sizeop, rtx startop, rtx shiftop)\n {\n-  if (INTVAL (startop) < 64\n-      && INTVAL (startop) > 32\n-      && (INTVAL (sizeop) + INTVAL (startop) < 64)\n-      && (INTVAL (sizeop) + INTVAL (startop) > 33)\n-      && (INTVAL (sizeop) + INTVAL (startop) + INTVAL (shiftop) < 96)\n-      && (INTVAL (sizeop) + INTVAL (startop) + INTVAL (shiftop) >= 64)\n+  if (INTVAL (startop) > 32\n+      && INTVAL (startop) < 64\n+      && INTVAL (sizeop) > 1\n+      && INTVAL (sizeop) + INTVAL (startop) < 64\n+      && INTVAL (shiftop) > 0\n+      && INTVAL (sizeop) + INTVAL (shiftop) < 32\n       && (64 - (INTVAL (shiftop) & 63)) >= INTVAL (sizeop))\n     return 1;\n "}]}