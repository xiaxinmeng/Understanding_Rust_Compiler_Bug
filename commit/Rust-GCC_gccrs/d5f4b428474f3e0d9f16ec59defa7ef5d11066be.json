{"sha": "d5f4b428474f3e0d9f16ec59defa7ef5d11066be", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDVmNGI0Mjg0NzRmM2UwZDlmMTZlYzU5ZGVmYTdlZjVkMTEwNjZiZQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2000-07-24T17:43:42Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2000-07-24T17:43:42Z"}, "message": "* Makefile.in (bootstrap): Move -BstageN/ to the end.\n\nFrom-SVN: r35231", "tree": {"sha": "18165d79b80ebc1cb98e95fceee5a3b43a609e71", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/18165d79b80ebc1cb98e95fceee5a3b43a609e71"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d5f4b428474f3e0d9f16ec59defa7ef5d11066be", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d5f4b428474f3e0d9f16ec59defa7ef5d11066be", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d5f4b428474f3e0d9f16ec59defa7ef5d11066be", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d5f4b428474f3e0d9f16ec59defa7ef5d11066be/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "cd3165f5c39da91770fbc1e3c9cbe518efbc48ad", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cd3165f5c39da91770fbc1e3c9cbe518efbc48ad", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cd3165f5c39da91770fbc1e3c9cbe518efbc48ad"}], "stats": {"total": 16, "additions": 10, "deletions": 6}, "files": [{"sha": "ce74ef2676a5906f80950c972544a01639a1da81", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d5f4b428474f3e0d9f16ec59defa7ef5d11066be/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d5f4b428474f3e0d9f16ec59defa7ef5d11066be/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d5f4b428474f3e0d9f16ec59defa7ef5d11066be", "patch": "@@ -1,3 +1,7 @@\n+2000-07-24  Jason Merrill  <jason@redhat.com>\n+\n+\t* Makefile.in (bootstrap): Move -BstageN/ to the end.\n+\n 2000-07-24  Jakub Jelinek  <jakub@redhat.com>\n \n \t* tradcpp.c (main): Update max_include_len for cpp_include_defaults"}, {"sha": "b16b0aaeda8b3363fe8edc146b675887fed9ff26", "filename": "gcc/Makefile.in", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d5f4b428474f3e0d9f16ec59defa7ef5d11066be/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d5f4b428474f3e0d9f16ec59defa7ef5d11066be/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=d5f4b428474f3e0d9f16ec59defa7ef5d11066be", "patch": "@@ -2763,22 +2763,22 @@ bootstrap bootstrap-lean: force\n # To prevent `make install' from compiling alloca.o and then relinking cc1\n # because alloca.o is newer, we permit these recursive makes to compile\n # alloca.o.  Then cc1 is newer, so it won't have to be relinked.\n-\t$(MAKE) CC=\"stage1/xgcc$(exeext) -Bstage1/ -B$(build_tooldir)/bin/\" CFLAGS=\"$(WARN_CFLAGS) $(BOOT_CFLAGS)\" LDFLAGS=\"$(BOOT_LDFLAGS)\" libdir=$(libdir) STAGE_PREFIX=stage1/ LANGUAGES=\"$(LANGUAGES)\"\n+\t$(MAKE) CC=\"stage1/xgcc$(exeext) -B$(build_tooldir)/bin/ -Bstage1/\" CFLAGS=\"$(WARN_CFLAGS) $(BOOT_CFLAGS)\" LDFLAGS=\"$(BOOT_LDFLAGS)\" libdir=$(libdir) STAGE_PREFIX=stage1/ LANGUAGES=\"$(LANGUAGES)\"\n \t$(MAKE) stage2\n \t-if test $@ = bootstrap-lean; then rm -rf stage1; cd stage2 ; rm -f $(VOL_FILES); else true; fi\n-\t$(MAKE) CC=\"stage2/xgcc$(exeext) -Bstage2/ -B$(build_tooldir)/bin/\" CFLAGS=\"$(WARN_CFLAGS) $(BOOT_CFLAGS)\" LDFLAGS=\"$(BOOT_LDFLAGS)\" libdir=$(libdir) STAGE_PREFIX=stage2/ LANGUAGES=\"$(LANGUAGES)\"\n+\t$(MAKE) CC=\"stage2/xgcc$(exeext) -B$(build_tooldir)/bin/ -Bstage2/\" CFLAGS=\"$(WARN_CFLAGS) $(BOOT_CFLAGS)\" LDFLAGS=\"$(BOOT_LDFLAGS)\" libdir=$(libdir) STAGE_PREFIX=stage2/ LANGUAGES=\"$(LANGUAGES)\"\n \n bootstrap2 bootstrap2-lean: force\n-\t$(MAKE) CC=\"stage1/xgcc$(exeext) -Bstage1/ -B$(build_tooldir)/bin/\" CFLAGS=\"$(WARN_CFLAGS) $(BOOT_CFLAGS)\" LDFLAGS=\"$(BOOT_LDFLAGS)\" libdir=$(libdir) STAGE_PREFIX=stage1/ LANGUAGES=\"$(LANGUAGES)\"\n+\t$(MAKE) CC=\"stage1/xgcc$(exeext) -B$(build_tooldir)/bin/ -Bstage1/\" CFLAGS=\"$(WARN_CFLAGS) $(BOOT_CFLAGS)\" LDFLAGS=\"$(BOOT_LDFLAGS)\" libdir=$(libdir) STAGE_PREFIX=stage1/ LANGUAGES=\"$(LANGUAGES)\"\n \t$(MAKE) stage2\n \t-if test $@ = bootstrap2-lean; then rm -rf stage1; cd stage2 ; rm -f $(VOL_FILES); else true; fi\n-\t$(MAKE) CC=\"stage2/xgcc$(exeext) -Bstage2/ -B$(build_tooldir)/bin/\" CFLAGS=\"$(WARN_CFLAGS) $(BOOT_CFLAGS)\" LDFLAGS=\"$(BOOT_LDFLAGS)\" libdir=$(libdir) STAGE_PREFIX=stage2/ LANGUAGES=\"$(LANGUAGES)\"\n+\t$(MAKE) CC=\"stage2/xgcc$(exeext) -B$(build_tooldir)/bin/ -Bstage2/\" CFLAGS=\"$(WARN_CFLAGS) $(BOOT_CFLAGS)\" LDFLAGS=\"$(BOOT_LDFLAGS)\" libdir=$(libdir) STAGE_PREFIX=stage2/ LANGUAGES=\"$(LANGUAGES)\"\n \n bootstrap3 bootstrap3-lean: force\n-\t$(MAKE) CC=\"stage2/xgcc$(exeext) -Bstage2/ -B$(build_tooldir)/bin/\" CFLAGS=\"$(WARN_CFLAGS) $(BOOT_CFLAGS)\" LDFLAGS=\"$(BOOT_LDFLAGS)\" libdir=$(libdir) STAGE_PREFIX=stage2/ LANGUAGES=\"$(LANGUAGES)\"\n+\t$(MAKE) CC=\"stage2/xgcc$(exeext) -B$(build_tooldir)/bin/ -Bstage2/\" CFLAGS=\"$(WARN_CFLAGS) $(BOOT_CFLAGS)\" LDFLAGS=\"$(BOOT_LDFLAGS)\" libdir=$(libdir) STAGE_PREFIX=stage2/ LANGUAGES=\"$(LANGUAGES)\"\n \n bootstrap4 bootstrap4-lean: force\n-\t$(MAKE) CC=\"stage3/xgcc$(exeext) -Bstage3/ -B$(build_tooldir)/bin/\" CFLAGS=\"$(WARN_CFLAGS) $(BOOT_CFLAGS)\" LDFLAGS=\"$(BOOT_LDFLAGS)\" libdir=$(libdir) STAGE_PREFIX=stage3/ LANGUAGES=\"$(LANGUAGES)\"\n+\t$(MAKE) CC=\"stage3/xgcc$(exeext) -B$(build_tooldir)/bin/ -Bstage3/\" CFLAGS=\"$(WARN_CFLAGS) $(BOOT_CFLAGS)\" LDFLAGS=\"$(BOOT_LDFLAGS)\" libdir=$(libdir) STAGE_PREFIX=stage3/ LANGUAGES=\"$(LANGUAGES)\"\n \n # Compare the object files in the current directory with those in the\n # stage2 directory."}]}