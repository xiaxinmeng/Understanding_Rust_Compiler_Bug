{"sha": "1f5f81da4e3b9f47f2edcec098933237788ed73d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWY1ZjgxZGE0ZTNiOWY0N2YyZWRjZWMwOTg5MzMyMzc3ODhlZDczZA==", "commit": {"author": {"name": "Michael Koch", "email": "konqueror@gmx.de", "date": "2003-03-10T14:48:09Z"}, "committer": {"name": "Michael Koch", "email": "mkoch@gcc.gnu.org", "date": "2003-03-10T14:48:09Z"}, "message": "DatagramSocket.java, [...]: Fixed some documentation tags to make javadoc and friends happy.\n\n2003-03-10  Michael Koch  <konqueror@gmx.de>\n\n\t* java/net/DatagramSocket.java,\n\tjava/net/MulticastSocket.java,\n\tjava/net/Socket.java,\n\tjava/net/URL.java,\n\tjava/net/URLConnection.java:\n\tFixed some documentation tags to make javadoc and friends happy.\n\nFrom-SVN: r64083", "tree": {"sha": "96d1410c67a72ad918a62d2f4e97cbd662dda0f0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/96d1410c67a72ad918a62d2f4e97cbd662dda0f0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1f5f81da4e3b9f47f2edcec098933237788ed73d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1f5f81da4e3b9f47f2edcec098933237788ed73d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1f5f81da4e3b9f47f2edcec098933237788ed73d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1f5f81da4e3b9f47f2edcec098933237788ed73d/comments", "author": null, "committer": null, "parents": [{"sha": "4c5154c0c601dacfac9cff1d297ab692fe4f85ea", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4c5154c0c601dacfac9cff1d297ab692fe4f85ea", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4c5154c0c601dacfac9cff1d297ab692fe4f85ea"}], "stats": {"total": 53, "additions": 31, "deletions": 22}, "files": [{"sha": "f744cf9c5d8e8b465ff789df015908ae51847dc9", "filename": "libjava/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f5f81da4e3b9f47f2edcec098933237788ed73d/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f5f81da4e3b9f47f2edcec098933237788ed73d/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=1f5f81da4e3b9f47f2edcec098933237788ed73d", "patch": "@@ -1,3 +1,12 @@\n+2003-03-10  Michael Koch  <konqueror@gmx.de>\n+\n+\t* java/net/DatagramSocket.java,\n+\tjava/net/MulticastSocket.java,\n+\tjava/net/Socket.java,\n+\tjava/net/URL.java,\n+\tjava/net/URLConnection.java:\n+\tFixed some documentation tags to make javadoc and friends happy.\n+\n 2003-03-10  Michael Koch  <koqnueror@gmx.de>\n \n \t* java/beans/beancontext/BeanContextServicesSupport.java,"}, {"sha": "518b6a6d2b8675662d7d2df71bc62d12cc2d1cfd", "filename": "libjava/java/net/DatagramSocket.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f5f81da4e3b9f47f2edcec098933237788ed73d/libjava%2Fjava%2Fnet%2FDatagramSocket.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f5f81da4e3b9f47f2edcec098933237788ed73d/libjava%2Fjava%2Fnet%2FDatagramSocket.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fnet%2FDatagramSocket.java?ref=1f5f81da4e3b9f47f2edcec098933237788ed73d", "patch": "@@ -781,7 +781,7 @@ public boolean getBroadcast() throws SocketException\n    * @exception SocketException If an error occurs\n    * @exception IllegalArgumentException If tc value is illegal\n    *\n-   * @see DatagramSocket:getTrafficClass\n+   * @see DatagramSocket#getTrafficClass()\n    * \n    * @since 1.4\n    */\n@@ -800,7 +800,7 @@ public void setTrafficClass(int tc)\n   /**\n    * Returns the current traffic class\n    * \n-   * @see DatagramSocket:setTrafficClass\n+   * @see DatagramSocket#setTrafficClass(int tc)\n    *\n    * @exception SocketException If an error occurs\n    * "}, {"sha": "a6dca948c8b76bba4df6c6635d1a24ee1f5191ce", "filename": "libjava/java/net/MulticastSocket.java", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f5f81da4e3b9f47f2edcec098933237788ed73d/libjava%2Fjava%2Fnet%2FMulticastSocket.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f5f81da4e3b9f47f2edcec098933237788ed73d/libjava%2Fjava%2Fnet%2FMulticastSocket.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fnet%2FMulticastSocket.java?ref=1f5f81da4e3b9f47f2edcec098933237788ed73d", "patch": "@@ -136,7 +136,7 @@ public InetAddress getInterface() throws SocketException\n    *\n    * @deprecated 1.2 Replaced by getTimeToLive()\n    *\n-   * @see Multicastsocket:getTimeToLive\n+   * @see MulticastSocket#getTimeToLive()\n    */\n   public byte getTTL() throws IOException\n   {\n@@ -182,7 +182,7 @@ public void setInterface(InetAddress addr) throws SocketException\n    * \n    * @exception SocketException If an error occurs\n    * \n-   * @see MulticastSocket:getNetworkInterface\n+   * @see MulticastSocket#getNetworkInterface()\n    * \n    * @since 1.4\n    */\n@@ -209,7 +209,7 @@ public void setNetworkInterface(NetworkInterface netIf)\n    *\n    * @exception SocketException If an error occurs\n    *\n-   * @see MulticastSocket:setNetworkInterface\n+   * @see MulticastSocket#setNetworkInterface(NetworkInterface netIf)\n    * \n    * @since 1.4\n    */\n@@ -277,7 +277,7 @@ public boolean getLoopbackMode() throws SocketException\n    *\n    * @deprecated 1.2 Replaced by <code>setTimeToLive</code>\n    *\n-   * @see MulticastSocket:setTimeToLive\n+   * @see MulticastSocket#setTimeToLive(int ttl)\n    */\n   public void setTTL(byte ttl) throws IOException\n   {\n@@ -360,8 +360,8 @@ public void leaveGroup(InetAddress mcastaddr) throws IOException\n    * @exception SecurityException If a security manager exists and its\n    * checkMulticast method doesn't allow the operation\n    *\n-   * @see MulticastSocket:setInterface\n-   * @see MulticastSocket:setNetworkInterface\n+   * @see MulticastSocket#setInterface(InetAddress addr)\n+   * @see MulticastSocket#setNetworkInterface(NetworkInterface netIf)\n    *\n    * @since 1.4\n    */\n@@ -395,8 +395,8 @@ public void joinGroup(SocketAddress mcastaddr, NetworkInterface netIf)\n    * @exception SecurityException If a security manager exists and its\n    * checkMulticast method doesn't allow the operation\n    *\n-   * @see MulticastSocket:setInterface\n-   * @see MulticastSocket:setNetworkInterface\n+   * @see MulticastSocket#setInterface(InetAddress addr)\n+   * @see MulticastSocket#setNetworkInterface(NetworkInterface netIf)\n    *\n    * @since 1.4\n    */"}, {"sha": "7070838c7e8f4a98783430487490cfbc066b597b", "filename": "libjava/java/net/Socket.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f5f81da4e3b9f47f2edcec098933237788ed73d/libjava%2Fjava%2Fnet%2FSocket.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f5f81da4e3b9f47f2edcec098933237788ed73d/libjava%2Fjava%2Fnet%2FSocket.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fnet%2FSocket.java?ref=1f5f81da4e3b9f47f2edcec098933237788ed73d", "patch": "@@ -1017,7 +1017,7 @@ public void setReuseAddress (boolean on) throws SocketException\n    *\n    * @exception SocketException If an error occurs\n    *\n-   * @see Socket:setTrafficClass\n+   * @see Socket#setTrafficClass(int tc)\n    *\n    * @since 1.4\n    */\n@@ -1042,7 +1042,7 @@ public int getTrafficClass () throws SocketException\n    * @exception SocketException If an error occurs\n    * @exception IllegalArgumentException If tc value is illegal\n    *\n-   * @see Socket:getTrafficClass\n+   * @see Socket#getTrafficClass()\n    *\n    * @since 1.4\n    */"}, {"sha": "33e42ef9a7da5c1a45feb203cd85855f56180a1e", "filename": "libjava/java/net/URL.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f5f81da4e3b9f47f2edcec098933237788ed73d/libjava%2Fjava%2Fnet%2FURL.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f5f81da4e3b9f47f2edcec098933237788ed73d/libjava%2Fjava%2Fnet%2FURL.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fnet%2FURL.java?ref=1f5f81da4e3b9f47f2edcec098933237788ed73d", "patch": "@@ -552,7 +552,7 @@ public String getUserInfo ()\n    * Returns the query of the URL. This is the part of the file before the\n    * '?'.\n    *\n-   * @ return the query part of the file, or null when there is no query part.\n+   * @return the query part of the file, or null when there is no query part.\n    */\n   public String getQuery ()\n   {"}, {"sha": "cc65ecb0fa7e7b814102cf87443cc8bbf1bcda80", "filename": "libjava/java/net/URLConnection.java", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f5f81da4e3b9f47f2edcec098933237788ed73d/libjava%2Fjava%2Fnet%2FURLConnection.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f5f81da4e3b9f47f2edcec098933237788ed73d/libjava%2Fjava%2Fnet%2FURLConnection.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fnet%2FURLConnection.java?ref=1f5f81da4e3b9f47f2edcec098933237788ed73d", "patch": "@@ -60,7 +60,7 @@\n    *\n    * @param url The Object to create the URL connection to\n    *\n-   * @see URLConnection:connect\n+   * @see URLConnection#connect()\n    */\n   protected URLConnection(URL url)\n   {\n@@ -472,8 +472,8 @@ public void setDefaultUseCaches(boolean defaultusecaches)\n    * @exception IllegalStateException If already connected\n    * @exception NullPointerException If key is null\n    *\n-   * @see URLConnection:getRequestProperty(String key)\n-   * @see URLConnection:addRequestProperty(String key, String value)\n+   * @see URLConnection#getRequestProperty(String key)\n+   * @see URLConnection#addRequestProperty(String key, String value)\n    */\n   public void setRequestProperty(String key, String value)\n   {\n@@ -494,8 +494,8 @@ public void setRequestProperty(String key, String value)\n    * @exception IllegalStateException If already connected\n    * @exception NullPointerException If key is null\n    * \n-   * @see URLConnection:getRequestProperty(String key)\n-   * @see URLConnection:setRequestProperty(String key, String value)\n+   * @see URLConnection#getRequestProperty(String key)\n+   * @see URLConnection#setRequestProperty(String key, String value)\n    * \n    * @since 1.4\n    */\n@@ -517,8 +517,8 @@ public void addRequestProperty(String key, String value)\n    *\n    * @exception IllegalStateException If already connected\n    *\n-   * @see URLConnection:setRequestProperty(String key, String value)\n-   * @see URLConnection:addRequestProperty(String key, String value)\n+   * @see URLConnection#setRequestProperty(String key, String value)\n+   * @see URLConnection#addRequestProperty(String key, String value)\n    * \n    * @return Value of the property.\n    */\n@@ -554,7 +554,7 @@ public Map getRequestProperties()\n    *\n    * @deprecated 1.3 The method setRequestProperty should be used instead\n    *\n-   * @see URLConnection:setRequestProperty\n+   * @see URLConnectionr#setRequestProperty(String key, String value)\n    */\n   public static void setDefaultRequestProperty(String key, String value)\n   {\n@@ -571,7 +571,7 @@ public static void setDefaultRequestProperty(String key, String value)\n    * \n    * @deprecated 1.3 The method getRequestProperty should be used instead\n    *\n-   * @see URLConnection:getRequestProperty\n+   * @see URLConnection#getRequestProperty(String key)\n    */\n   public static String getDefaultRequestProperty(String key)\n   {"}]}