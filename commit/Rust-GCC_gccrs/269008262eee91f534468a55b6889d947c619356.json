{"sha": "269008262eee91f534468a55b6889d947c619356", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjY5MDA4MjYyZWVlOTFmNTM0NDY4YTU1YjY4ODlkOTQ3YzYxOTM1Ng==", "commit": {"author": {"name": "Kaz Kojima", "email": "kkojima@gcc.gnu.org", "date": "2007-01-09T10:50:23Z"}, "committer": {"name": "Kaz Kojima", "email": "kkojima@gcc.gnu.org", "date": "2007-01-09T10:50:23Z"}, "message": "t-linux (TARGET_LIBGCC2_CFLAGS): Delete.\n\ngcc/\n\t* config/sh/t-linux (TARGET_LIBGCC2_CFLAGS): Delete.\n\t(SHLIB_MAPFILES, SHLIB_LINK, SHLIB_INSTALL): Likewise.\nlibgcc/\n\t* config/sh/t-linux: New.\n\t* config.host (sh*-*-linux*): Set tmake_file.\n\nFrom-SVN: r120619", "tree": {"sha": "229ae6c189cf97a363f5928df5510ac67a6e5098", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/229ae6c189cf97a363f5928df5510ac67a6e5098"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/269008262eee91f534468a55b6889d947c619356", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/269008262eee91f534468a55b6889d947c619356", "html_url": "https://github.com/Rust-GCC/gccrs/commit/269008262eee91f534468a55b6889d947c619356", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/269008262eee91f534468a55b6889d947c619356/comments", "author": null, "committer": null, "parents": [{"sha": "1ba008b77297c37a4667d27a9d365805a9bfd848", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1ba008b77297c37a4667d27a9d365805a9bfd848", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1ba008b77297c37a4667d27a9d365805a9bfd848"}], "stats": {"total": 88, "additions": 52, "deletions": 36}, "files": [{"sha": "bd58d3a042929464c3b04abfe02490dc68491ed5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/269008262eee91f534468a55b6889d947c619356/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/269008262eee91f534468a55b6889d947c619356/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=269008262eee91f534468a55b6889d947c619356", "patch": "@@ -1,3 +1,8 @@\n+2007-01-09  Kaz Kojima  <kkojima@gcc.gnu.org>\n+\n+\t* config/sh/t-linux (TARGET_LIBGCC2_CFLAGS): Delete.\n+\t(SHLIB_MAPFILES, SHLIB_LINK, SHLIB_INSTALL): Likewise.\n+\n 2007-01-09  Nicolas Pitre  <nico@cam.org>\n \n \tPR target/30173"}, {"sha": "b7a3d7c977b984a140eefc5ec06049346a407e46", "filename": "gcc/config/sh/t-linux", "status": "modified", "additions": 0, "deletions": 36, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/269008262eee91f534468a55b6889d947c619356/gcc%2Fconfig%2Fsh%2Ft-linux", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/269008262eee91f534468a55b6889d947c619356/gcc%2Fconfig%2Fsh%2Ft-linux", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Ft-linux?ref=269008262eee91f534468a55b6889d947c619356", "patch": "@@ -1,4 +1,3 @@\n-TARGET_LIBGCC2_CFLAGS = -fpic -DNO_FPSCR_VALUES\n LIB1ASMFUNCS_CACHE = _ic_invalidate _ic_invalidate_array\n \n LIB2FUNCS_EXTRA= $(srcdir)/config/sh/linux-atomic.asm\n@@ -8,38 +7,3 @@ MULTILIB_MATCHES =\n MULTILIB_EXCEPTIONS=\n \n EXTRA_MULTILIB_PARTS= crtbegin.o crtend.o crtbeginS.o crtendS.o crtbeginT.o\n-\n-# Override t-slibgcc-elf-ver to export some libgcc symbols with\n-# the symbol versions that glibc used, and hide some lib1func\n-# routines which should not be called via PLT.  We have to create\n-# the list from scratch.\n-SHLIB_MAPFILES = \\\n-\t$(srcdir)/libgcc-std.ver \\\n-\t$(srcdir)/config/sh/libgcc-excl.ver \\\n-\t$(srcdir)/config/sh/libgcc-glibc.ver\n-\n-# Override SHLIB_LINK and SHLIB_INSTALL to use linker script\n-# libgcc_s.so.\n-SHLIB_LINK = $(GCC_FOR_TARGET) $(LIBGCC2_CFLAGS) -shared -nodefaultlibs \\\n-\t-Wl,--soname=$(SHLIB_SONAME) \\\n-\t-Wl,--version-script=$(SHLIB_MAP) \\\n-\t-o $(SHLIB_DIR)/$(SHLIB_SONAME).tmp @multilib_flags@ \\\n-\t$(SHLIB_OBJS) $(SHLIB_LC) && \\\n-\trm -f $(SHLIB_DIR)/$(SHLIB_SOLINK) && \\\n-\tif [ -f $(SHLIB_DIR)/$(SHLIB_SONAME) ]; then \\\n-\t  mv -f $(SHLIB_DIR)/$(SHLIB_SONAME) \\\n-\t\t$(SHLIB_DIR)/$(SHLIB_SONAME).backup; \\\n-\telse true; fi && \\\n-\tmv $(SHLIB_DIR)/$(SHLIB_SONAME).tmp $(SHLIB_DIR)/$(SHLIB_SONAME) && \\\n-\t(echo \"/* GNU ld script\"; \\\n-\t echo \"   Use the shared library, but some functions are only in\"; \\\n-\t echo \"   the static library.  */\"; \\\n-\t echo \"GROUP ( $(SHLIB_SONAME) libgcc.a )\" \\\n-\t) > $(SHLIB_DIR)/$(SHLIB_SOLINK)\n-SHLIB_INSTALL = \\\n-\t$$(mkinstalldirs) $$(DESTDIR)$$(slibdir)$(SHLIB_SLIBDIR_QUAL); \\\n-\t$(INSTALL_DATA) $(SHLIB_DIR)/$(SHLIB_SONAME) \\\n-\t  $$(DESTDIR)$$(slibdir)$(SHLIB_SLIBDIR_QUAL)/$(SHLIB_SONAME); \\\n-\trm -f $$(DESTDIR)$$(slibdir)$(SHLIB_SLIBDIR_QUAL)/$(SHLIB_SOLINK); \\\n-\t$(INSTALL_DATA) $(SHLIB_DIR)/$(SHLIB_SOLINK) \\\n-\t  $$(DESTDIR)$$(slibdir)$(SHLIB_SLIBDIR_QUAL)/$(SHLIB_SOLINK)"}, {"sha": "a1f3b931071b91b5d6e8fc51179506325e732d5d", "filename": "libgcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/269008262eee91f534468a55b6889d947c619356/libgcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/269008262eee91f534468a55b6889d947c619356/libgcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2FChangeLog?ref=269008262eee91f534468a55b6889d947c619356", "patch": "@@ -1,3 +1,8 @@\n+2007-01-09  Kaz Kojima  <kkojima@gcc.gnu.org>\n+\n+\t* config/sh/t-linux: New.\n+\t* config.host (sh*-*-linux*): Set tmake_file.\n+\n 2007-01-05  Daniel Jacobowitz  <dan@codesourcery.com>\n \n \t* Makefile.in (install): Handle multilibs."}, {"sha": "a6e6a101480699cc0834bd86ce68c003c9920c2b", "filename": "libgcc/config.host", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/269008262eee91f534468a55b6889d947c619356/libgcc%2Fconfig.host", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/269008262eee91f534468a55b6889d947c619356/libgcc%2Fconfig.host", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig.host?ref=269008262eee91f534468a55b6889d947c619356", "patch": "@@ -548,6 +548,11 @@ sh-*-symbianelf* | sh[12346l]*-*-symbianelf* | \\\n   sh-*-linux* | sh[346lbe]*-*-linux* | \\\n   sh-*-netbsdelf* | shl*-*-netbsdelf* | sh5-*-netbsd* | sh5l*-*-netbsd* | \\\n    sh64-*-netbsd* | sh64l*-*-netbsd*)\n+\tcase ${host} in\n+\tsh*-*-linux*)\n+\t\ttmake_file=\"${tmake_file} sh/t-linux\"\n+\t\t;;\n+\tesac\n \t;;\n sh-*-rtemscoff*)\n \t;;"}, {"sha": "be0b12824314da0a0ea0cf9f3cac3833a044e8e9", "filename": "libgcc/config/sh/t-linux", "status": "added", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/269008262eee91f534468a55b6889d947c619356/libgcc%2Fconfig%2Fsh%2Ft-linux", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/269008262eee91f534468a55b6889d947c619356/libgcc%2Fconfig%2Fsh%2Ft-linux", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fsh%2Ft-linux?ref=269008262eee91f534468a55b6889d947c619356", "patch": "@@ -0,0 +1,37 @@\n+HOST_LIBGCC2_CFLAGS = -fpic -DNO_FPSCR_VALUES\n+\n+# Override t-slibgcc-elf-ver to export some libgcc symbols with\n+# the symbol versions that glibc used, and hide some lib1func\n+# routines which should not be called via PLT.  We have to create\n+# the list from scratch.\n+SHLIB_MAPFILES = \\\n+\t$(gcc_srcdir)/libgcc-std.ver \\\n+\t$(gcc_srcdir)/config/sh/libgcc-excl.ver \\\n+\t$(gcc_srcdir)/config/sh/libgcc-glibc.ver\n+\n+# Override SHLIB_LINK and SHLIB_INSTALL to use linker script\n+# libgcc_s.so.\n+SHLIB_LINK = $(CC) $(LIBGCC2_CFLAGS) -shared -nodefaultlibs \\\n+\t-Wl,--soname=@shlib_base_name@.so.1 \\\n+\t-Wl,--version-script=@shlib_map_file@ \\\n+\t-o @multilib_dir@/@shlib_base_name@.so.1.tmp @multilib_flags@ \\\n+\t@shlib_objs@ -lc && \\\n+\trm -f @multilib_dir@/@shlib_base_name@.so && \\\n+\tif [ -f @multilib_dir@/@shlib_base_name@.so.1 ]; then \\\n+\t  mv -f @multilib_dir@/@shlib_base_name@.so.1 \\\n+\t\t@multilib_dir@/@shlib_base_name@.so.1.backup; \\\n+\telse true; fi && \\\n+\tmv @multilib_dir@/@shlib_base_name@.so.1.tmp \\\n+\t   @multilib_dir@/@shlib_base_name@.so.1 && \\\n+\t(echo \"/* GNU ld script\"; \\\n+\t echo \"   Use the shared library, but some functions are only in\"; \\\n+\t echo \"   the static library.  */\"; \\\n+\t echo \"GROUP ( @shlib_base_name@.so.1 libgcc.a )\" \\\n+\t) > @multilib_dir@/@shlib_base_name@.so\n+SHLIB_INSTALL = \\\n+\t$(mkinstalldirs) $(DESTDIR)$(slibdir)@shlib_slibdir_qual@; \\\n+\t$(INSTALL_DATA) @multilib_dir@/@shlib_base_name@.so.1 \\\n+\t  $(DESTDIR)$(slibdir)@shlib_slibdir_qual@/@shlib_base_name@.so.1; \\\n+\trm -f $(DESTDIR)$(slibdir)@shlib_slibdir_qual@/@shlib_base_name@.so; \\\n+\t$(INSTALL_DATA) @multilib_dir@/@shlib_base_name@.so \\\n+\t  $(DESTDIR)$(slibdir)@shlib_slibdir_qual@/@shlib_base_name@.so"}]}