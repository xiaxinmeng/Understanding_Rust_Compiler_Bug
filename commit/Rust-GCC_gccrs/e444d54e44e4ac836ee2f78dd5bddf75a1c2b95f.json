{"sha": "e444d54e44e4ac836ee2f78dd5bddf75a1c2b95f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTQ0NGQ1NGU0NGU0YWM4MzZlZTJmNzhkZDViZGRmNzVhMWMyYjk1Zg==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@codesourcery.com", "date": "2007-01-18T19:49:59Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2007-01-18T19:49:59Z"}, "message": "200x-xx-xx Nathan Sidwell <nathan@codesourcery.com>\n\ngcc/\n200x-xx-xx  Nathan Sidwell  <nathan@codesourcery.com>\n\n\t* config/m68k/fpgnulib.c (__truncdfsf2): Implement round to\n\tnearest even, fix denormal rounding overflow.\n\nFrom-SVN: r120925", "tree": {"sha": "dd09592ee23041e2582c2bbdf6b2f384cb0efdc5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dd09592ee23041e2582c2bbdf6b2f384cb0efdc5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e444d54e44e4ac836ee2f78dd5bddf75a1c2b95f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e444d54e44e4ac836ee2f78dd5bddf75a1c2b95f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e444d54e44e4ac836ee2f78dd5bddf75a1c2b95f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e444d54e44e4ac836ee2f78dd5bddf75a1c2b95f/comments", "author": null, "committer": null, "parents": [{"sha": "17e143a1730125d9630c8fb1b0ec9a334330a1c0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/17e143a1730125d9630c8fb1b0ec9a334330a1c0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/17e143a1730125d9630c8fb1b0ec9a334330a1c0"}], "stats": {"total": 45, "additions": 34, "deletions": 11}, "files": [{"sha": "4d95624c9b49e4198afef4e20fbc20a1292fbf4f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e444d54e44e4ac836ee2f78dd5bddf75a1c2b95f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e444d54e44e4ac836ee2f78dd5bddf75a1c2b95f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e444d54e44e4ac836ee2f78dd5bddf75a1c2b95f", "patch": "@@ -1,3 +1,8 @@\n+2007-01-18  Nathan Sidwell  <nathan@codesourcery.com>\n+\n+\t* config/m68k/fpgnulib.c (__truncdfsf2): Implement round to\n+\tnearest even, fix denormal rounding overflow.\n+\n 2007-01-18  Richard Sandiford  <richard@codesourcery.com>\n \n \t* config/m68k/m68k.md (movsf_cf_hard): Use fsmove instead of"}, {"sha": "2a7f6c75d11ac7c60d2df29a0400c353254e78a9", "filename": "gcc/config/m68k/fpgnulib.c", "status": "modified", "additions": 29, "deletions": 11, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e444d54e44e4ac836ee2f78dd5bddf75a1c2b95f/gcc%2Fconfig%2Fm68k%2Ffpgnulib.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e444d54e44e4ac836ee2f78dd5bddf75a1c2b95f/gcc%2Fconfig%2Fm68k%2Ffpgnulib.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Ffpgnulib.c?ref=e444d54e44e4ac836ee2f78dd5bddf75a1c2b95f", "patch": "@@ -277,6 +277,8 @@ __truncdfsf2 (double a1)\n   register long mant;\n   register union float_long fl;\n   register union double_long dl1;\n+  int sticky;\n+  int shift;\n \n   dl1.d = a1;\n \n@@ -288,29 +290,45 @@ __truncdfsf2 (double a1)\n \n   exp = EXPD (dl1) - EXCESSD + EXCESS;\n \n+  sticky = dl1.l.lower & ((1 << 22) - 1);\n+  mant = MANTD (dl1);\n   /* shift double mantissa 6 bits so we can round */\n-  mant = MANTD (dl1) >> 6;\n+  sticky |= mant & ((1 << 6) - 1);\n+  mant >>= 6;\n \n   /* Check for underflow and denormals.  */\n   if (exp <= 0)\n     {\n       if (exp < -24)\n-\tmant = 0;\n+\t{\n+\t  sticky |= mant;\n+\t  mant = 0;\n+\t}\n       else\n-\tmant >>= 1 - exp;\n+\t{\n+\t  sticky |= mant & ((1 << (1 - exp)) - 1);\n+\t  mant >>= 1 - exp;\n+\t}\n       exp = 0;\n     }\n   \n-  /* now round and shift down */\n-  mant += 1;\n-  mant >>= 1;\n-\n-  /* did the round overflow? */\n-  if (mant & 0xFF000000L)\n+  /* now round */\n+  shift = 1;\n+  if ((mant & 1) && (sticky || (mant & 2)))\n     {\n-      mant >>= 1;\n-      exp++;\n+      int rounding = exp ? 2 : 1;\n+\n+      mant += 1;\n+\n+      /* did the round overflow? */\n+      if (mant >= (HIDDEN << rounding))\n+\t{\n+\t  exp++;\n+\t  shift = rounding;\n+\t}\n     }\n+  /* shift down */\n+  mant >>= shift;\n \n   mant &= ~HIDDEN;\n "}]}