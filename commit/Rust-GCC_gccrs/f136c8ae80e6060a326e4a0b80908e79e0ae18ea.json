{"sha": "f136c8ae80e6060a326e4a0b80908e79e0ae18ea", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjEzNmM4YWU4MGU2MDYwYTMyNmU0YTBiODA5MDhlNzllMGFlMThlYQ==", "commit": {"author": {"name": "Rafael Avila de Espindola", "email": "espindola@google.com", "date": "2009-04-30T16:24:31Z"}, "committer": {"name": "Rafael Espindola", "email": "espindola@gcc.gnu.org", "date": "2009-04-30T16:24:31Z"}, "message": "alloc-pool.c (alloc_pool_descriptor): Use an insert_opion value instead of an int.\n\n2009-04-30  Rafael Avila de Espindola  <espindola@google.com>\n\n\t* alloc-pool.c (alloc_pool_descriptor): Use an insert_opion value\n\tinstead of an int.\n\t* bitmap.c (bitmap_descriptor): Likewise.\n\t* ggc-common.c (loc_descriptor): Likewise.\n\t* varray.c (varray_descriptor): Likewise.\n\t* vec.c (vec_descriptor): Likewise.\n\nFrom-SVN: r147009", "tree": {"sha": "ec649a5e2e4e14a600abaaaabf117f1cd7e12abf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ec649a5e2e4e14a600abaaaabf117f1cd7e12abf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f136c8ae80e6060a326e4a0b80908e79e0ae18ea", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f136c8ae80e6060a326e4a0b80908e79e0ae18ea", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f136c8ae80e6060a326e4a0b80908e79e0ae18ea", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f136c8ae80e6060a326e4a0b80908e79e0ae18ea/comments", "author": null, "committer": null, "parents": [{"sha": "512e7d7fb0d968c92c85f3cc3c73c3eaea993dfe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/512e7d7fb0d968c92c85f3cc3c73c3eaea993dfe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/512e7d7fb0d968c92c85f3cc3c73c3eaea993dfe"}], "stats": {"total": 20, "additions": 15, "deletions": 5}, "files": [{"sha": "2e6fec8d969645b1bcb4087ac8d912b338f2d485", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f136c8ae80e6060a326e4a0b80908e79e0ae18ea/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f136c8ae80e6060a326e4a0b80908e79e0ae18ea/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f136c8ae80e6060a326e4a0b80908e79e0ae18ea", "patch": "@@ -1,3 +1,12 @@\n+2009-04-30  Rafael Avila de Espindola  <espindola@google.com>\n+\n+\t* alloc-pool.c (alloc_pool_descriptor): Use an insert_opion value\n+\tinstead of an int.\n+\t* bitmap.c (bitmap_descriptor): Likewise.\n+\t* ggc-common.c (loc_descriptor): Likewise.\n+\t* varray.c (varray_descriptor): Likewise.\n+\t* vec.c (vec_descriptor): Likewise.\n+\n 2009-04-30  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* Makefile.in (dce.o): Add $(EXCEPT_H)."}, {"sha": "c9d990464ad6d4919876cad430c419cdd3bb0aea", "filename": "gcc/alloc-pool.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f136c8ae80e6060a326e4a0b80908e79e0ae18ea/gcc%2Falloc-pool.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f136c8ae80e6060a326e4a0b80908e79e0ae18ea/gcc%2Falloc-pool.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Falloc-pool.c?ref=f136c8ae80e6060a326e4a0b80908e79e0ae18ea", "patch": "@@ -116,7 +116,7 @@ alloc_pool_descriptor (const char *name)\n   slot = (struct alloc_pool_descriptor **)\n     htab_find_slot_with_hash (alloc_pool_hash, name,\n \t\t\t      htab_hash_pointer (name),\n-\t\t\t      1);\n+\t\t\t      INSERT);\n   if (*slot)\n     return *slot;\n   *slot = XCNEW (struct alloc_pool_descriptor);"}, {"sha": "c9a226a5a2ce281e2a218ab014dedd5a9018544c", "filename": "gcc/bitmap.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f136c8ae80e6060a326e4a0b80908e79e0ae18ea/gcc%2Fbitmap.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f136c8ae80e6060a326e4a0b80908e79e0ae18ea/gcc%2Fbitmap.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbitmap.c?ref=f136c8ae80e6060a326e4a0b80908e79e0ae18ea", "patch": "@@ -87,7 +87,7 @@ bitmap_descriptor (const char *file, const char *function, int line)\n   slot = (struct bitmap_descriptor **)\n     htab_find_slot_with_hash (bitmap_desc_hash, &loc,\n \t\t\t      htab_hash_pointer (file) + line,\n-\t\t\t      1);\n+\t\t\t      INSERT);\n   if (*slot)\n     return *slot;\n   *slot = XCNEW (struct bitmap_descriptor);"}, {"sha": "b6b9e1e340017d9fc228ce12545ebf28e0b2b31b", "filename": "gcc/ggc-common.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f136c8ae80e6060a326e4a0b80908e79e0ae18ea/gcc%2Fggc-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f136c8ae80e6060a326e4a0b80908e79e0ae18ea/gcc%2Fggc-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fggc-common.c?ref=f136c8ae80e6060a326e4a0b80908e79e0ae18ea", "patch": "@@ -845,7 +845,7 @@ loc_descriptor (const char *name, int line, const char *function)\n   if (!loc_hash)\n     loc_hash = htab_create (10, hash_descriptor, eq_descriptor, NULL);\n \n-  slot = (struct loc_descriptor **) htab_find_slot (loc_hash, &loc, 1);\n+  slot = (struct loc_descriptor **) htab_find_slot (loc_hash, &loc, INSERT);\n   if (*slot)\n     return *slot;\n   *slot = XCNEW (struct loc_descriptor);"}, {"sha": "91e5b5d588a0deb0ce32b12ccee9a9aaded85c24", "filename": "gcc/varray.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f136c8ae80e6060a326e4a0b80908e79e0ae18ea/gcc%2Fvarray.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f136c8ae80e6060a326e4a0b80908e79e0ae18ea/gcc%2Fvarray.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvarray.c?ref=f136c8ae80e6060a326e4a0b80908e79e0ae18ea", "patch": "@@ -71,7 +71,7 @@ varray_descriptor (const char *name)\n   slot = (struct varray_descriptor **)\n     htab_find_slot_with_hash (varray_hash, name,\n \t\t    \t      htab_hash_pointer (name),\n-\t\t\t      1);\n+\t\t\t      INSERT);\n   if (*slot)\n     return *slot;\n   *slot = XCNEW (struct varray_descriptor);"}, {"sha": "530cd1abc4bc4714d2070a1ff34f19969d2fbc4c", "filename": "gcc/vec.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f136c8ae80e6060a326e4a0b80908e79e0ae18ea/gcc%2Fvec.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f136c8ae80e6060a326e4a0b80908e79e0ae18ea/gcc%2Fvec.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvec.c?ref=f136c8ae80e6060a326e4a0b80908e79e0ae18ea", "patch": "@@ -113,7 +113,8 @@ vec_descriptor (const char *name, int line, const char *function)\n   if (!vec_desc_hash)\n     vec_desc_hash = htab_create (10, hash_descriptor, eq_descriptor, NULL);\n \n-  slot = (struct vec_descriptor **) htab_find_slot (vec_desc_hash, &loc, 1);\n+  slot = (struct vec_descriptor **) htab_find_slot (vec_desc_hash, &loc,\n+\t\t\t\t\t\t    INSERT);\n   if (*slot)\n     return *slot;\n   *slot = XCNEW (struct vec_descriptor);"}]}