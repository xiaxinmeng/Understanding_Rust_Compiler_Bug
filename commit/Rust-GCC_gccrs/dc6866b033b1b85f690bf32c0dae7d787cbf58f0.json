{"sha": "dc6866b033b1b85f690bf32c0dae7d787cbf58f0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGM2ODY2YjAzM2IxYjg1ZjY5MGJmMzJjMGRhZTdkNzg3Y2JmNThmMA==", "commit": {"author": {"name": "Jan-Benedict Glaw", "email": "jbglaw@getslash.de", "date": "2021-06-29T07:23:07Z"}, "committer": {"name": "Jan-Benedict Glaw", "email": "jbglaw@getslash.de", "date": "2021-06-29T07:26:56Z"}, "message": "pdp11: Fix signednedd warnings, remove \"register\" keywords\n\ngcc/ChangeLog:\n\t* config/pdp11/pdp11.h (ASM_OUTPUT_SKIP): Fix signedness warning.\n\t* config/pdp11/pdp11.c (pdp11_asm_print_operand_punct_valid_p): Remove\n\t\"register\" keyword.\n\t(pdp11_initial_elimination_offset) Remove unused variable.\n\t(pdp11_cmp_length) Ditto.\n\t(pdp11_insn_cost): Ditto, and fix signedness warning.", "tree": {"sha": "ef5ca0a7472a65fae6431272411d342c978f205c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ef5ca0a7472a65fae6431272411d342c978f205c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dc6866b033b1b85f690bf32c0dae7d787cbf58f0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dc6866b033b1b85f690bf32c0dae7d787cbf58f0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dc6866b033b1b85f690bf32c0dae7d787cbf58f0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dc6866b033b1b85f690bf32c0dae7d787cbf58f0/comments", "author": null, "committer": null, "parents": [{"sha": "095a01cf6e3883b3083cf339b680cdb39910f529", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/095a01cf6e3883b3083cf339b680cdb39910f529", "html_url": "https://github.com/Rust-GCC/gccrs/commit/095a01cf6e3883b3083cf339b680cdb39910f529"}], "stats": {"total": 37, "additions": 18, "deletions": 19}, "files": [{"sha": "4cab3aee598b54383dee48f60561193a3448af6f", "filename": "gcc/config/pdp11/pdp11.c", "status": "modified", "additions": 12, "deletions": 15, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dc6866b033b1b85f690bf32c0dae7d787cbf58f0/gcc%2Fconfig%2Fpdp11%2Fpdp11.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dc6866b033b1b85f690bf32c0dae7d787cbf58f0/gcc%2Fconfig%2Fpdp11%2Fpdp11.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpdp11%2Fpdp11.c?ref=dc6866b033b1b85f690bf32c0dae7d787cbf58f0", "patch": "@@ -829,12 +829,12 @@ pdp11_asm_print_operand_punct_valid_p (unsigned char c)\n }\n \n void\n-print_operand_address (FILE *file, register rtx addr)\n+print_operand_address (FILE *file, rtx addr)\n {\n-  register rtx breg;\n+  rtx breg;\n   rtx offset;\n   int again = 0;\n-  \n+\n  retry:\n \n   switch (GET_CODE (addr))\n@@ -1160,12 +1160,11 @@ pdp11_addr_cost (rtx addr, machine_mode mode, addr_space_t as ATTRIBUTE_UNUSED,\n static int\n pdp11_insn_cost (rtx_insn *insn, bool speed)\n {\n-  int base_cost, i;\n+  int base_cost;\n   rtx pat, set, dest, src, src2;\n   machine_mode mode;\n-  const char *fmt;\n   enum rtx_code op;\n-  \n+\n   if (recog_memoized (insn) < 0)\n     return 0;\n \n@@ -1462,24 +1461,24 @@ bool\n pushpop_regeq (rtx op, int regno)\n {\n   rtx addr;\n-  \n+\n   /* False if not memory reference.  */\n   if (GET_CODE (op) != MEM)\n     return FALSE;\n-  \n+\n   /* Get the address of the memory reference.  */\n   addr = XEXP (op, 0);\n \n   if (GET_CODE (addr) == MEM)\n     addr = XEXP (addr, 0);\n-    \n+\n   switch (GET_CODE (addr))\n     {\n     case PRE_DEC:\n     case POST_INC:\n     case PRE_MODIFY:\n     case POST_MODIFY:\n-      return REGNO (XEXP (addr, 0)) == regno;\n+      return REGNO (XEXP (addr, 0)) == (unsigned) regno;\n     default:\n       return FALSE;\n     }\n@@ -1771,8 +1770,7 @@ int\n pdp11_initial_elimination_offset (int from, int to)\n {\n   /* Get the size of the register save area.  */\n-  int spoff;\n-  \n+\n   if (from == FRAME_POINTER_REGNUM && to == STACK_POINTER_REGNUM)\n     return get_frame_size ();\n   else if (from == ARG_POINTER_REGNUM && to == FRAME_POINTER_REGNUM)\n@@ -2106,15 +2104,14 @@ pdp11_cmp_length (rtx *operands, int words)\n {\n   rtx inops[2];\n   rtx exops[4][2];\n-  rtx lb[1];\n   int i, len = 0;\n \n   if (!reload_completed)\n     return 2;\n-  \n+\n   inops[0] = operands[0];\n   inops[1] = operands[1];\n-  \n+\n   pdp11_expand_operands (inops, exops, 2, words, NULL, big);\n \n   for (i = 0; i < words; i++)"}, {"sha": "9bc5e089f4938904e5b0faf3b0684214ee035702", "filename": "gcc/config/pdp11/pdp11.h", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dc6866b033b1b85f690bf32c0dae7d787cbf58f0/gcc%2Fconfig%2Fpdp11%2Fpdp11.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dc6866b033b1b85f690bf32c0dae7d787cbf58f0/gcc%2Fconfig%2Fpdp11%2Fpdp11.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpdp11%2Fpdp11.h?ref=dc6866b033b1b85f690bf32c0dae7d787cbf58f0", "patch": "@@ -618,10 +618,12 @@ extern int current_first_parm_offset;\n     fprintf (FILE, \"\\t.even\\n\")\n \n #define ASM_OUTPUT_SKIP(FILE,SIZE)  \\\n-  if (TARGET_DEC_ASM) \\\n-    fprintf (FILE, \"\\t.blkb\\t%o\\n\", (SIZE) & 0xffff);\t\\\n-  else\t\t\t\t\t\t\t\\\n-    fprintf (FILE, \"\\t.=.+ %#o\\n\", (SIZE) & 0xffff);\n+  do {\t\t\t\t\t\t\t\t\\\n+    if (TARGET_DEC_ASM)\t\t\t\t\t\t\\\n+      fprintf (FILE, \"\\t.blkb\\t%o\\n\", (int) ((SIZE) & 0xffff));\t\\\n+    else\t\t\t\t\t\t\t\\\n+      fprintf (FILE, \"\\t.=.+ %#o\\n\", (int) ((SIZE) & 0xffff));\t\\\n+  } while (0)\n \n /* This says how to output an assembler line\n    to define a global common symbol.  */"}]}