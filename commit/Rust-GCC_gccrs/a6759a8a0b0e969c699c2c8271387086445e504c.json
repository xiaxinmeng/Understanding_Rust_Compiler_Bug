{"sha": "a6759a8a0b0e969c699c2c8271387086445e504c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTY3NTlhOGEwYjBlOTY5YzY5OWMyYzgyNzEzODcwODY0NDVlNTA0Yw==", "commit": {"author": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2010-11-17T20:35:46Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2010-11-17T20:35:46Z"}, "message": "nop.h: Move from ...\n\n\t* gcc.dg/nop.h: Move from ...\n\t* gcc.dg/guality/nop.h: ... here.\n\t* gcc.dg/lto/20091216-1_0.c: Include nop.h and use NOP macro.\n\t* gcc.dg/guality/asm-1.c: Update nop.h include.\n\t* gcc.dg/guality/pr43329-1.c: Ditto.\n\nFrom-SVN: r166877", "tree": {"sha": "b4d99c4efe3e6659e0679119c923d6c987e6e31a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b4d99c4efe3e6659e0679119c923d6c987e6e31a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a6759a8a0b0e969c699c2c8271387086445e504c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a6759a8a0b0e969c699c2c8271387086445e504c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a6759a8a0b0e969c699c2c8271387086445e504c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a6759a8a0b0e969c699c2c8271387086445e504c/comments", "author": null, "committer": null, "parents": [{"sha": "f725e72170f4db044404007b3c33bebf3cc7600c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f725e72170f4db044404007b3c33bebf3cc7600c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f725e72170f4db044404007b3c33bebf3cc7600c"}], "stats": {"total": 97, "additions": 48, "deletions": 49}, "files": [{"sha": "49c0c2a5031fd35956e6f3ef74d542aaa325c76a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 20, "deletions": 28, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6759a8a0b0e969c699c2c8271387086445e504c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6759a8a0b0e969c699c2c8271387086445e504c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a6759a8a0b0e969c699c2c8271387086445e504c", "patch": "@@ -12,8 +12,7 @@\n \n 2010-11-17  Richard Guenther  <rguenther@suse.de>\n \n-\t* value-prof.c (gimple_divmod_fixed_value_transform): Update\n-\tthe stmt.\n+\t* value-prof.c (gimple_divmod_fixed_value_transform): Update the stmt.\n \t(gimple_mod_pow2_value_transform): Likewise.\n \t(gimple_mod_subtract_transform): Likewise.\n \n@@ -34,8 +33,7 @@\n \t* cgraphbuild.c (pass_rebuild_cgraph): Use timevar.\n \t* tree-ssa-loop-manip.c (verify_loop_closed_ssa): Use timevar.\n \t* tree-emutls.c (pass_ipa_lower_emutls): Ditto.\n-\t* df-core.c (pass_df_initialize_opt,\n-\tpass_df_initialize_no_opt): Ditto.\n+\t* df-core.c (pass_df_initialize_opt, pass_df_initialize_no_opt): Ditto.\n \t* predict.c (rebuild_frequencies): Ditto.\n \t* tree-vectorizer.c (pass_ipa_increase_alignment): Ditto.\n \t* emit-rtl.c (verify_rtl_sharing): Ditto.\n@@ -230,10 +228,11 @@\n \t* ipa.c (varpool_can_remove_if_no_refs): ... here.\n \t(cgraph_remove_unreachable_nodes): Only analyzed nodes needs to stay.\n \t* cgraphunit.c (cgraph_analyze_functions): Dump varpool, too.\n-\t* varpool.c (decide_is_variable_needed): Do not handle visibility issues.\n+\t* varpool.c (decide_is_variable_needed): Do not handle visibility\n+\tissues.\n \t(varpool_finalize_decl): Likewise.\n-\t(varpool_remove_unreferenced_decls): Use varpool_mark_needed_node; update\n-\toutdated comment on DECL_RTL_SET_P check.\n+\t(varpool_remove_unreferenced_decls): Use varpool_mark_needed_node;\n+\tupdate outdated comment on DECL_RTL_SET_P check.\n \n 2010-11-16  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n \n@@ -243,8 +242,7 @@\n \n 2010-11-16  Nick Clifton  <nickc@redhat.com>\n \n-\t* config/v850/v850.md (maddsf4): Rename to fmasf4 and use fma\n-\trtx_code.\n+\t* config/v850/v850.md (maddsf4): Rename to fmasf4 and use fma rtx_code.\n \t(msubsf4): Rename to fmssf4, and use fma.\n \t(nmaddsf4): Rename to fnmasf4 and use fma.\n \t(nmsubsf4): Rename to fnmssf4 and use fma.\n@@ -305,8 +303,7 @@\n \n 2010-11-16  Andreas Krebbel  <Andreas.Krebbel@de.ibm.com>\n \n-\t* gensupport.c (MNEMONIC_ATTR_NAME, MNEMONIC_HTAB_SIZE): New\n-\tmacros.\n+\t* gensupport.c (MNEMONIC_ATTR_NAME, MNEMONIC_HTAB_SIZE): New macros.\n \t(htab_eq_string, add_mnemonic_string, gen_mnemonic_setattr)\n \t(mnemonic_htab_callback, gen_mnemonic_attr): New functions.\n \t(init_rtx_reader_args_cb): Invoke gen_mnemonic_attr.\n@@ -411,8 +408,7 @@\n \n 2010-11-16  Nathan Froyd  <froydnj@codesourcery.com>\n \n-\t* Makefile.in (bitmap.o, ebitmap.o, et-forest.o): Update\n-\tdependencies.\n+\t* Makefile.in (bitmap.o, ebitmap.o, et-forest.o): Update dependencies.\n \t(sreal.o, statistics.o, stringpool.o): Likewise.\n \n 2010-11-16  Richard Guenther  <rguenther@suse.de>\n@@ -442,8 +438,7 @@\n 2010-11-16  Richard Guenther  <rguenther@suse.de>\n \n \tPR middle-end/45172\n-\t* tree-eh.c (cleanup_empty_eh_unsplit): Avoid creating duplicate\n-\tedges.\n+\t* tree-eh.c (cleanup_empty_eh_unsplit): Avoid creating duplicate edges.\n \n 2010-11-16  Nick Clifton  <nickc@redhat.com>\n \n@@ -453,7 +448,7 @@\n 2010-11-15  Richard Henderson  <rth@redhat.com>\n \n \t* fold-const.c (operand_equal_for_comparison_p): Handle FMA_EXPR,\n-\tWIDEN_MULT_PLUS_EXPR, WIDEN_MULT_MINUS_EXPR, VEC_COND_EXPR,\n+\tWIDEN_MULT_PLUS_EXPR, WIDEN_MULT_MINUS_EXPR, VEC_COND_EXPR and\n \tDOT_PROD_EXPR.\n \n 2010-11-15  Richard Henderson  <rth@redhat.com>\n@@ -474,8 +469,7 @@\n \t(argbuf_length, argbuf_index): Remove.\n \t(alloc_args, clear_args, store_arg, execute, insert_wrapper,\n \tdo_spec, do_self_spec, do_spec_1, eval_spec_function, main,\n-\tcompare_debug_dump_opt_spec_function: Use VEC interfaces on\n-\targbuf.\n+\tcompare_debug_dump_opt_spec_function: Use VEC interfaces on argbuf.\n \t* Makefile.in (GCC_OBJS): Add vec.o and ggc-none.o.\n \t(gcc.o): Depend on $(VEC_H).\n \n@@ -947,8 +941,7 @@\n \t* config/avr/avr.c (avr_num_arg_regs): Constify type.\n \t(avr_return_addr_rtx): De-constify tem.\n \t(avr_rotate_bytes): Move declarations to start of block.\n-\tDon't use variable length array.\n-\tPut nested if/else into block.\n+\tDon't use variable length array.  Put nested if/else into block.\n \n \tPR rtl-optimization/46433\n \t* var-tracking.c: Include tm_p.h .\n@@ -981,8 +974,7 @@\n \t(trapping_loads_p): Remove unused variable pat.\n \t(bfin_expand_binop_builtin): Use expand_normal.\n \t(bfin_expand_unop_builtin): Likewise.\n-\t(bfin_expand_builtin): Likewise.\n-\tSet tmode before use.\n+\t(bfin_expand_builtin): Likewise.  Set tmode before use.\n \n \tPR middle-end/44769\n \t* final.c (split_double): Don't use BITS_PER_WORD directly in\n@@ -1074,10 +1066,11 @@\n \n \tPR tree-optimize/40436\n \t* ipa-inline.c (likely_eliminated_by_inlining_p): Rename to ...\n-\t(eliminated_by_inlining_prob): ... this one; return 50% probability for\n-\tSRA.\n-\t(estimate_function_body_sizes): Update use of eliminated_by_inlining_prob;\n-\testimate static function size for 2 instructions.\n+\t(eliminated_by_inlining_prob): ... this one; return 50% probability\n+\tfor SRA.\n+\t(estimate_function_body_sizes): Update use of\n+\teliminated_by_inlining_prob; estimate static function size\n+\tfor 2 instructions.\n \n 2010-11-11  Joern Rennecke  <amylaar@spamcop.net>\n \n@@ -1276,8 +1269,7 @@\n \t* opts.c (finish_options, common_handle_option): Start diagnostics\n \twith lowercase letters and remove trailing '.'.  Fix typo in\n \tdiagnostic.\n-\t* passes.c (position_pass): Start diagnostic with lowercase\n-\tletter.\n+\t* passes.c (position_pass): Start diagnostic with lowercase letter.\n \t* plugin.c (add_new_plugin, parse_plugin_arg_opt,\n \tregister_callback, try_init_one_plugin): Start diagnostics with\n \tlowercase letters."}, {"sha": "cb564c1e196a4963ef88962dc57e4bc3c8faee4a", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 23, "deletions": 14, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6759a8a0b0e969c699c2c8271387086445e504c/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6759a8a0b0e969c699c2c8271387086445e504c/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=a6759a8a0b0e969c699c2c8271387086445e504c", "patch": "@@ -1,3 +1,11 @@\n+2010-11-17  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* gcc.dg/nop.h: Move from ...\n+\t* gcc.dg/guality/nop.h: ... here.\n+\t* gcc.dg/lto/20091216-1_0.c: Include nop.h and use NOP macro.\n+\t* gcc.dg/guality/asm-1.c: Update nop.h include.\n+\t* gcc.dg/guality/pr43329-1.c: Ditto.\n+\n 2010-11-17  Paolo Bonzini  <bonzini@gnu.org>\n \n \t* gcc.dg/two-types-1.c: New test.\n@@ -129,19 +137,20 @@\n \t* objc.dg/property/dotsyntax-19.m: New.\n \t* objc.dg/property/dotsyntax-20.m: New.\n \t* obj-c++.dg/property/dotsyntax-18.mm: New.\n-\t* obj-c++.dg/property/dotsyntax-19.mm: New.\t\n+\t* obj-c++.dg/property/dotsyntax-19.mm: New.\n \t* obj-c++.dg/property/dotsyntax-20.mm: New.\n-\t* objc.dg/property/dotsyntax-4.m: Removed some unused variables and code.\n+\t* objc.dg/property/dotsyntax-4.m: Removed some unused\n+\tvariables and code.\n \t* objc.dg/property/dotsyntax-6.m: Same change.\n-\t* objc.dg/property/dotsyntax-16.m: Same change. \n+\t* objc.dg/property/dotsyntax-16.m: Same change.\n \t* objc.dg/property/dotsyntax-17.m: Same change.\n \t* obj-c++.dg/property/dotsyntax-4.mm: Same change.\n \t* obj-c++.dg/property/dotsyntax-6.mm: Same change.\n-\t* obj-c++.dg/property/dotsyntax-16.mm: Same change. \n+\t* obj-c++.dg/property/dotsyntax-16.mm: Same change.\n \t* obj-c++.dg/property/dotsyntax-17.mm: Same change.\n \t* objc.dg/property/at-property-22.m: Added missing casts.\n \t* obj-c++.dg/property/at-property-22.mm: Same change.\n-\t\n+\n 2010-11-15  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR tree-optimization/46491\n@@ -154,7 +163,8 @@\n \n \tPR fortran/46484\n \t* gfortran.dg/allocatable_scalar_11.f90: New.\n-\t* gfortran.dg/allocatable_scalar_5.f90: Make test case standard conform.\n+\t* gfortran.dg/allocatable_scalar_5.f90: Make test case\n+\tstandard conform.\n \n 2010-11-15  Jakub Jelinek  <jakub@redhat.com>\n \n@@ -167,13 +177,13 @@\n 2010-11-15  Nicola Pero  <nicola.pero@meta-innovation.com>\n \n \t* objc.dg/property/dotsyntax-16.m: New.\n-\t* objc.dg/property/dotsyntax-17.m: New.\t\n+\t* objc.dg/property/dotsyntax-17.m: New.\n \t* obj-c++.dg/property/dotsyntax-16.mm: New.\n-\t* obj-c++.dg/property/dotsyntax-17.mm: New.\t\n+\t* obj-c++.dg/property/dotsyntax-17.mm: New.\n \t* objc.dg/property/at-property-10.m: Uncommented using 'x++'\n \tsyntax with properties, which now works.\n \t* obj-c++.dg/property/at-property-10.mm: Same change.\n-\t\n+\n 2010-11-15  Martin Jambor  <mjambor@suse.cz>\n \n \tPR tree-optimization/46349\n@@ -325,7 +335,7 @@\n \tPR fortran/45794\n \t* gfortran.dg/optional_mask.f90: New test.\n \n-2010-11-13  Ville Voutilainen <ville.voutilainen@gmail.com> <ville.voutilainen@symbio.com>\n+2010-11-13  Ville Voutilainen  <ville.voutilainen@gmail.com>\n \n \t* g++.dg/cpp0x/defaulted15.C: Adjust.\n \n@@ -566,8 +576,7 @@\n 2010-11-10  H.J. Lu  <hongjiu.lu@intel.com>\n \n \tPR tree-optimization/46414\n-\t* gcc.target/i386/recip-vec-sqrtf-avx.c: Updated for loop\n-\tunrolling.\n+\t* gcc.target/i386/recip-vec-sqrtf-avx.c: Updated for loop unrolling.\n \n 2010-11-10  Tobias Burnus  <burnus@net-b.de>\n \n@@ -677,8 +686,8 @@\n 2010-10-09  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR middle-end/45663\n-\t* gcc.dg/guality/sra-1.c: Move all gdb-test lines to the second bar invocation\n-\tinstead of first.\n+\t* gcc.dg/guality/sra-1.c: Move all gdb-test lines to the second\n+\tbar invocation instead of first.\n \n \tPR debug/46171\n \t* gcc.dg/pr46171.c: New test."}, {"sha": "e9cf4a167aab16e0552f76d4a16ae66e0f7b2933", "filename": "gcc/testsuite/gcc.dg/guality/asm-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6759a8a0b0e969c699c2c8271387086445e504c/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fasm-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6759a8a0b0e969c699c2c8271387086445e504c/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fasm-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fasm-1.c?ref=a6759a8a0b0e969c699c2c8271387086445e504c", "patch": "@@ -1,7 +1,7 @@\n /* { dg-do run } */\n /* { dg-options \"-g\" } */\n \n-#include \"nop.h\"\n+#include \"../nop.h\"\n \n struct A { int x; unsigned short y; char z[64]; };\n "}, {"sha": "5e27adfca30b314544d2f079f4cfff9b4ffe54db", "filename": "gcc/testsuite/gcc.dg/guality/pr43329-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6759a8a0b0e969c699c2c8271387086445e504c/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fpr43329-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6759a8a0b0e969c699c2c8271387086445e504c/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fpr43329-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fpr43329-1.c?ref=a6759a8a0b0e969c699c2c8271387086445e504c", "patch": "@@ -2,7 +2,7 @@\n /* { dg-do run } */\n /* { dg-options \"-g\" } */\n \n-#include \"nop.h\"\n+#include \"../nop.h\"\n \n static inline void\n foo (int argx)"}, {"sha": "7bcf1f38ddf13114a6b3ea01f82882f9dc175ee7", "filename": "gcc/testsuite/gcc.dg/lto/20091216-1_0.c", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6759a8a0b0e969c699c2c8271387086445e504c/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2F20091216-1_0.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6759a8a0b0e969c699c2c8271387086445e504c/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2F20091216-1_0.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2F20091216-1_0.c?ref=a6759a8a0b0e969c699c2c8271387086445e504c", "patch": "@@ -1,10 +1,8 @@\n /* { dg-lto-do run } */\n \n-#ifdef __ia64\n-asm (\".globl start_\\nstart_: nop 0\");\n-#else\n-asm (\".globl start_\\nstart_: nop\");\n-#endif\n+#include \"../nop.h\"\n+\n+asm (\".globl start_\\nstart_: \" NOP);\n \n int\n main ()"}, {"sha": "a0c19a344141c26a0a297fe1e8642614c3254adc", "filename": "gcc/testsuite/gcc.dg/nop.h", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6759a8a0b0e969c699c2c8271387086445e504c/gcc%2Ftestsuite%2Fgcc.dg%2Fnop.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6759a8a0b0e969c699c2c8271387086445e504c/gcc%2Ftestsuite%2Fgcc.dg%2Fnop.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fnop.h?ref=a6759a8a0b0e969c699c2c8271387086445e504c", "previous_filename": "gcc/testsuite/gcc.dg/guality/nop.h"}]}