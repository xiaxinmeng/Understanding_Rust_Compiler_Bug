{"sha": "3769ad4ccea9589b3f7edaef901cb542aa10f49a", "node_id": "C_kwDOANBUbNoAKDM3NjlhZDRjY2VhOTU4OWIzZjdlZGFlZjkwMWNiNTQyYWExMGY0OWE", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2022-07-04T11:53:24Z"}, "committer": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2022-07-04T11:56:45Z"}, "message": "Revert update-ssa assert in vectorizer\n\nThe following reverts the just added assert that virtual SSA does not\nneed updating.  It instead goes for a select whitelist of transforms\nknown to be prone to difficulties with virtual SSA update.\n\n\t* tree-vect-loop-manip.cc (vect_do_peeling): Revert assert\n\tand update virtual SSA form again.  Assert we do so for\n\ta known set of transforms only.\n\t* tree-vectorizer.h (vec_info::any_known_not_updated_vssa): New.\n\t* tree-vect-stmts.cc (vectorizable_load): When vectorizing\n\tusing load-lanes allow virtual SSA update.", "tree": {"sha": "29cc23eb0ebd0a84e4032db3fc3396143bdfddea", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/29cc23eb0ebd0a84e4032db3fc3396143bdfddea"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3769ad4ccea9589b3f7edaef901cb542aa10f49a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3769ad4ccea9589b3f7edaef901cb542aa10f49a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3769ad4ccea9589b3f7edaef901cb542aa10f49a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3769ad4ccea9589b3f7edaef901cb542aa10f49a/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "683f11843974f0bdf42f79cdcbb0c2b43c7b81b0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/683f11843974f0bdf42f79cdcbb0c2b43c7b81b0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/683f11843974f0bdf42f79cdcbb0c2b43c7b81b0"}], "stats": {"total": 18, "additions": 13, "deletions": 5}, "files": [{"sha": "5c31f0a809174b9c6fa5ea6fe487b47226be0ad9", "filename": "gcc/tree-vect-loop-manip.cc", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3769ad4ccea9589b3f7edaef901cb542aa10f49a/gcc%2Ftree-vect-loop-manip.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3769ad4ccea9589b3f7edaef901cb542aa10f49a/gcc%2Ftree-vect-loop-manip.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-loop-manip.cc?ref=3769ad4ccea9589b3f7edaef901cb542aa10f49a", "patch": "@@ -2683,11 +2683,12 @@ vect_do_peeling (loop_vec_info loop_vinfo, tree niters, tree nitersm1,\n   class loop *first_loop = loop;\n   bool irred_flag = loop_preheader_edge (loop)->flags & EDGE_IRREDUCIBLE_LOOP;\n \n-  /* Historically we might have a queued need to update virtual SSA form.\n-     As we delete the update SSA machinery below after doing a regular\n-     incremental SSA update during loop copying make sure we don't\n-     lose that fact.  */\n-  gcc_assert (!need_ssa_update_p (cfun));\n+  /* We should not have to update virtual SSA form here but some\n+     transforms involve creating new virtual definitions which makes\n+     updating difficult.  */\n+  gcc_assert (!need_ssa_update_p (cfun)\n+\t      || loop_vinfo->any_known_not_updated_vssa);\n+  update_ssa (TODO_update_ssa_only_virtuals);\n \n   create_lcssa_for_virtual_phi (loop);\n "}, {"sha": "72107afc883649f96569816d099763a54f959ab0", "filename": "gcc/tree-vect-stmts.cc", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3769ad4ccea9589b3f7edaef901cb542aa10f49a/gcc%2Ftree-vect-stmts.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3769ad4ccea9589b3f7edaef901cb542aa10f49a/gcc%2Ftree-vect-stmts.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-stmts.cc?ref=3769ad4ccea9589b3f7edaef901cb542aa10f49a", "patch": "@@ -8979,6 +8979,9 @@ vectorizable_load (vec_info *vinfo,\n \tdump_printf_loc (MSG_NOTE, vect_location,\n \t\t\t \"Vectorizing an unaligned access.\\n\");\n \n+      if (memory_access_type == VMAT_LOAD_STORE_LANES)\n+\tvinfo->any_known_not_updated_vssa = true;\n+\n       STMT_VINFO_TYPE (stmt_info) = load_vec_info_type;\n       vect_model_load_cost (vinfo, stmt_info, ncopies, vf, memory_access_type,\n \t\t\t    alignment_support_scheme, misalignment,"}, {"sha": "e5fdc9e0a14ddf4f8d0574d9a610b5db30e30ffa", "filename": "gcc/tree-vectorizer.h", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3769ad4ccea9589b3f7edaef901cb542aa10f49a/gcc%2Ftree-vectorizer.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3769ad4ccea9589b3f7edaef901cb542aa10f49a/gcc%2Ftree-vectorizer.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vectorizer.h?ref=3769ad4ccea9589b3f7edaef901cb542aa10f49a", "patch": "@@ -444,6 +444,10 @@ class vec_info {\n   /* Whether the above mapping is complete.  */\n   bool stmt_vec_info_ro;\n \n+  /* Whether we've done a transform we think OK to not update virtual\n+     SSA form.  */\n+  bool any_known_not_updated_vssa;\n+\n   /* The SLP graph.  */\n   auto_vec<slp_instance> slp_instances;\n "}]}