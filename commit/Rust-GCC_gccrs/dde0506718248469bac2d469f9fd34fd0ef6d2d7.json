{"sha": "dde0506718248469bac2d469f9fd34fd0ef6d2d7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGRlMDUwNjcxODI0ODQ2OWJhYzJkNDY5ZjlmZDM0ZmQwZWY2ZDJkNw==", "commit": {"author": {"name": "Nathan Froyd", "email": "froydnj@codesourcery.com", "date": "2011-05-23T14:20:49Z"}, "committer": {"name": "Nathan Froyd", "email": "froydnj@gcc.gnu.org", "date": "2011-05-23T14:20:49Z"}, "message": "don't use TYPE_ARG_TYPES when calling c-family:check_function_arguments\n\ndon't use TYPE_ARG_TYPES when calling c-family:check_function_arguments\ngcc/\n\t* c-typeck.c (build_function_call_vec): Tweak call to\n\tcheck_function_arguments.\n\ngcc/c-family/\n\t* c-common.h (check_function_arguments): Tweak prototype of\n\tcheck_function_arguments.\n\t* c-common.c (check_function_arguments): Likewise.  Adjust\n\tcalls to check_function_nonnull, check_function_format, and\n\tcheck_function_sentinel.\n\t(check_function_sentinel): Take a FUNCTION_TYPE rather than\n\tseparate attributes and typelist arguments.  Use\n\tFOREACH_FUNCTION_ARGS to iterate over argument types.\n\ngcc/cp/\n\t* call.c (build_over_call): Tweak call to check_function_arguments.\n\t* typeck.c (cp_build_function_call_vec): Likewise.\n\nFrom-SVN: r174067", "tree": {"sha": "b9bfe00973240a820a89bed01fbb2ba41bc453ca", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b9bfe00973240a820a89bed01fbb2ba41bc453ca"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dde0506718248469bac2d469f9fd34fd0ef6d2d7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dde0506718248469bac2d469f9fd34fd0ef6d2d7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dde0506718248469bac2d469f9fd34fd0ef6d2d7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dde0506718248469bac2d469f9fd34fd0ef6d2d7/comments", "author": null, "committer": null, "parents": [{"sha": "094f6ab3d5aa9753f5fc0c36a8cdfef4c2938140", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/094f6ab3d5aa9753f5fc0c36a8cdfef4c2938140", "html_url": "https://github.com/Rust-GCC/gccrs/commit/094f6ab3d5aa9753f5fc0c36a8cdfef4c2938140"}], "stats": {"total": 57, "additions": 38, "deletions": 19}, "files": [{"sha": "d045f3f5f92b165a410b8fa10cad44c6fef82171", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dde0506718248469bac2d469f9fd34fd0ef6d2d7/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dde0506718248469bac2d469f9fd34fd0ef6d2d7/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=dde0506718248469bac2d469f9fd34fd0ef6d2d7", "patch": "@@ -1,3 +1,8 @@\n+2011-05-23  Nathan Froyd  <froydnj@codesourcery.com>\n+\n+\t* c-typeck.c (build_function_call_vec): Tweak call to\n+\tcheck_function_arguments.\n+\n 2011-05-23  Richard Guenther  <rguenther@suse.de>\n \n \tPR tree-optimization/49115"}, {"sha": "5044c076833a20ee656d57b2046a53d32bfa0e51", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dde0506718248469bac2d469f9fd34fd0ef6d2d7/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dde0506718248469bac2d469f9fd34fd0ef6d2d7/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=dde0506718248469bac2d469f9fd34fd0ef6d2d7", "patch": "@@ -1,3 +1,14 @@\n+2011-05-23  Nathan Froyd  <froydnj@codesourcery.com>\n+\n+\t* c-common.h (check_function_arguments): Tweak prototype of\n+\tcheck_function_arguments.\n+\t* c-common.c (check_function_arguments): Likewise.  Adjust\n+\tcalls to check_function_nonnull, check_function_format, and\n+\tcheck_function_sentinel.\n+\t(check_function_sentinel): Take a FUNCTION_TYPE rather than\n+\tseparate attributes and typelist arguments.  Use\n+\tFOREACH_FUNCTION_ARGS to iterate over argument types.\n+\n 2011-05-15  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \t* c-common.c (c_common_reswords): Reorder."}, {"sha": "fef8ded203fec27898862b75a9c4ee6eb6bf2a50", "filename": "gcc/c-family/c-common.c", "status": "modified", "additions": 13, "deletions": 12, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dde0506718248469bac2d469f9fd34fd0ef6d2d7/gcc%2Fc-family%2Fc-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dde0506718248469bac2d469f9fd34fd0ef6d2d7/gcc%2Fc-family%2Fc-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-common.c?ref=dde0506718248469bac2d469f9fd34fd0ef6d2d7", "patch": "@@ -7479,20 +7479,23 @@ check_function_nonnull (tree attrs, int nargs, tree *argarray)\n    array ARGARRAY.  */\n \n static void\n-check_function_sentinel (tree attrs, int nargs, tree *argarray, tree typelist)\n+check_function_sentinel (const_tree fntype, int nargs, tree *argarray)\n {\n-  tree attr = lookup_attribute (\"sentinel\", attrs);\n+  tree attr = lookup_attribute (\"sentinel\", TYPE_ATTRIBUTES (fntype));\n \n   if (attr)\n     {\n       int len = 0;\n       int pos = 0;\n       tree sentinel;\n+      function_args_iterator iter;\n+      tree t;\n \n       /* Skip over the named arguments.  */\n-      while (typelist && len < nargs)\n+      FOREACH_FUNCTION_ARGS (fntype, t, iter)\n \t{\n-\t  typelist = TREE_CHAIN (typelist);\n+\t  if (len == nargs)\n+\t    break;\n \t  len++;\n \t}\n \n@@ -7937,26 +7940,24 @@ handle_no_split_stack_attribute (tree *node, tree name,\n   return NULL_TREE;\n }\n \f\n-/* Check for valid arguments being passed to a function.\n-   ATTRS is a list of attributes.  There are NARGS arguments in the array\n-   ARGARRAY.  TYPELIST is the list of argument types for the function.\n- */\n+/* Check for valid arguments being passed to a function with FNTYPE.\n+   There are NARGS arguments in the array ARGARRAY.  */\n void\n-check_function_arguments (tree attrs, int nargs, tree *argarray, tree typelist)\n+check_function_arguments (const_tree fntype, int nargs, tree *argarray)\n {\n   /* Check for null being passed in a pointer argument that must be\n      non-null.  We also need to do this if format checking is enabled.  */\n \n   if (warn_nonnull)\n-    check_function_nonnull (attrs, nargs, argarray);\n+    check_function_nonnull (TYPE_ATTRIBUTES (fntype), nargs, argarray);\n \n   /* Check for errors in format strings.  */\n \n   if (warn_format || warn_missing_format_attribute)\n-    check_function_format (attrs, nargs, argarray);\n+    check_function_format (TYPE_ATTRIBUTES (fntype), nargs, argarray);\n \n   if (warn_format)\n-    check_function_sentinel (attrs, nargs, argarray, typelist);\n+    check_function_sentinel (fntype, nargs, argarray);\n }\n \n /* Generic argument checking recursion routine.  PARAM is the argument to"}, {"sha": "89d4b80bdedda529d7f4320a8c4daa2d43b3bf81", "filename": "gcc/c-family/c-common.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dde0506718248469bac2d469f9fd34fd0ef6d2d7/gcc%2Fc-family%2Fc-common.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dde0506718248469bac2d469f9fd34fd0ef6d2d7/gcc%2Fc-family%2Fc-common.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-common.h?ref=dde0506718248469bac2d469f9fd34fd0ef6d2d7", "patch": "@@ -687,7 +687,7 @@ extern void finish_fname_decls (void);\n extern const char *fname_as_string (int);\n extern tree fname_decl (location_t, unsigned, tree);\n \n-extern void check_function_arguments (tree, int, tree *, tree);\n+extern void check_function_arguments (const_tree, int, tree *);\n extern void check_function_arguments_recurse (void (*)\n \t\t\t\t\t      (void *, tree,\n \t\t\t\t\t       unsigned HOST_WIDE_INT),"}, {"sha": "e609611ab583348c0304adc32eacfe12fd7ba0a5", "filename": "gcc/c-typeck.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dde0506718248469bac2d469f9fd34fd0ef6d2d7/gcc%2Fc-typeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dde0506718248469bac2d469f9fd34fd0ef6d2d7/gcc%2Fc-typeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-typeck.c?ref=dde0506718248469bac2d469f9fd34fd0ef6d2d7", "patch": "@@ -2808,8 +2808,7 @@ build_function_call_vec (location_t loc, tree function, VEC(tree,gc) *params,\n     return error_mark_node;\n \n   /* Check that the arguments to the function are valid.  */\n-  check_function_arguments (TYPE_ATTRIBUTES (fntype), nargs, argarray,\n-\t\t\t    TYPE_ARG_TYPES (fntype));\n+  check_function_arguments (fntype, nargs, argarray);\n \n   if (name != NULL_TREE\n       && !strncmp (IDENTIFIER_POINTER (name), \"__builtin_\", 10))"}, {"sha": "168f43a245d220023318f65e1583bf31eeed7c91", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dde0506718248469bac2d469f9fd34fd0ef6d2d7/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dde0506718248469bac2d469f9fd34fd0ef6d2d7/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=dde0506718248469bac2d469f9fd34fd0ef6d2d7", "patch": "@@ -1,3 +1,8 @@\n+2011-05-23  Nathan Froyd  <froydnj@codesourcery.com>\n+\n+\t* call.c (build_over_call): Tweak call to check_function_arguments.\n+\t* typeck.c (cp_build_function_call_vec): Likewise.\n+\n 2011-05-23  Jonathan Wakely  <jwakely.gcc@gmail.com>\n \n \tPR c++/18016"}, {"sha": "972dca376eee61f397c323d4fe845458e3a796b9", "filename": "gcc/cp/call.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dde0506718248469bac2d469f9fd34fd0ef6d2d7/gcc%2Fcp%2Fcall.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dde0506718248469bac2d469f9fd34fd0ef6d2d7/gcc%2Fcp%2Fcall.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcall.c?ref=dde0506718248469bac2d469f9fd34fd0ef6d2d7", "patch": "@@ -6477,8 +6477,7 @@ build_over_call (struct z_candidate *cand, int flags, tsubst_flags_t complain)\n   gcc_assert (j <= nargs);\n   nargs = j;\n \n-  check_function_arguments (TYPE_ATTRIBUTES (TREE_TYPE (fn)),\n-\t\t\t    nargs, argarray, TYPE_ARG_TYPES (TREE_TYPE (fn)));\n+  check_function_arguments (TREE_TYPE (fn), nargs, argarray);\n \n   /* Avoid actually calling copy constructors and copy assignment operators,\n      if possible.  */"}, {"sha": "81ee63d7efdd4d1790b933dae1294430efef79bd", "filename": "gcc/cp/typeck.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dde0506718248469bac2d469f9fd34fd0ef6d2d7/gcc%2Fcp%2Ftypeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dde0506718248469bac2d469f9fd34fd0ef6d2d7/gcc%2Fcp%2Ftypeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck.c?ref=dde0506718248469bac2d469f9fd34fd0ef6d2d7", "patch": "@@ -3271,8 +3271,7 @@ cp_build_function_call_vec (tree function, VEC(tree,gc) **params,\n \n   /* Check for errors in format strings and inappropriately\n      null parameters.  */\n-  check_function_arguments (TYPE_ATTRIBUTES (fntype), nargs, argarray,\n-\t\t\t    parm_types);\n+  check_function_arguments (fntype, nargs, argarray);\n \n   ret = build_cxx_call (function, nargs, argarray);\n "}]}