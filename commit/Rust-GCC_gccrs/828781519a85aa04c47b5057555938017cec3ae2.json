{"sha": "828781519a85aa04c47b5057555938017cec3ae2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODI4NzgxNTE5YTg1YWEwNGM0N2I1MDU3NTU1OTM4MDE3Y2VjM2FlMg==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-11-30T11:55:21Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-11-30T11:55:21Z"}, "message": "[multiple changes]\n\n2009-11-30  Vincent Celier  <celier@adacore.com>\n\n\t* gnatlink.adb (Process_Args): Call Executable_Name on argument of -o\n\twith Only_If_No_Suffix set to True.\n\t* osint.adb (Executable_Name): Do not add executable suffix if there is\n\talready a suffix and Only_If_No_Suffix is True.\n\t* osint.ads (Executable_Name): New Boolean parameter Only_If_No_Suffix,\n\tdefaulted to False.\n\n2009-11-30  Javier Miranda  <miranda@adacore.com>\n\n\t* exp_atag.adb (Build_TSD): Change argument name because the actual is\n\tnow the address of a tag (instead of the tag). Update implementation\n\taccordingly.\n\t(Build_CW_Membership): New implementation. Converted into a procedure\n\tbecause it has an additional out mode parameter. Its implementation has\n\tbeen rewritten to improve the generated code but also to facilitate\n\treferencing the relocated object node in the caller.\n\t* exp_atag.ads (Build_CW_Membership): Update profile and documentation.\n\t* sinfo.ads (N_SCIL_Membership_Test) New_Node.\n\t(SCIL_Tag_Value): New field of N_SCIL_Membership_Test nodes.\n\t(Is_Syntactic_Field): Add entry of new node.\n\t(SCIL_Tag_Value/Set_SCIL_Tag_Value): New subprograms.\n\t* sinfo.adb (SCIL_Related_Node, SCIL_Entity): Update assertions to\n\thandle N_SCIL_Membership_Test nodes.\n\t(SCIL_Tag_Value/Set_SCIL_Tag_Value): New subprograms.\n\t* sem.adb (Analyze): Add null management for new node.\n\t* sem_scil.adb (Find_SCIL_Node): Add null management for new node.\n\t(Check_SCIL_Node): Add checks of N_SCIL_Membership_Test nodes.\n\t* exp_ch4.adb (Tagged_Membership): Change profile from function to\n\tprocedure. Add generation of SCIL node associated with class-wide\n\tmembership test.\n\t(Expand_N_In): Complete decoration of SCIL nodes.\n\t* exp_intr.adb (Expand_Dispatching_Constructor_Call): Tune call to\n\tBuild_CW_Membership because its profile has been changed.\n\t* exp_util.adb (Insert_Actions): Add null management for new node.\n\t* sprint.adb (Sprint_Node_Actual): Handle new node.\n\t* gcc-interface/trans.c Add no processing for N_SCIL_Membership_Test\n\tnodes.\n\t* gcc-interface/Make-lang.in: Update dependencies.\n\n2009-11-30  Ed Schonberg  <schonberg@adacore.com>\n\n\t* opt.ads: New flags Init_Or_Norm_Scalars_Config,\n\tInitialize_Scalars_Config, to capture the presence of the corresponding\n\tpragmas in a configuration file.\n\t* opt.adb (Register_, Save_, Set_, Restore_Opt_Configuration_Switches):\n\thandle new flags so that they are restored for each compilation unit.\n\t* frontend.adb: At the end of compilation, scan the context of the main\n\tunit to recover occurrences of pragma Initialize_Scalars, to annotate\n\tthe ALI file accordingly.\n\nFrom-SVN: r154792", "tree": {"sha": "59148f8fcc8d5a03432b0b4f1157f9066894a5d2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/59148f8fcc8d5a03432b0b4f1157f9066894a5d2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/828781519a85aa04c47b5057555938017cec3ae2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/828781519a85aa04c47b5057555938017cec3ae2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/828781519a85aa04c47b5057555938017cec3ae2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/828781519a85aa04c47b5057555938017cec3ae2/comments", "author": null, "committer": null, "parents": [{"sha": "fd0d899b57a1c3283bf47e414cad99e0f1bd3a2c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fd0d899b57a1c3283bf47e414cad99e0f1bd3a2c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fd0d899b57a1c3283bf47e414cad99e0f1bd3a2c"}], "stats": {"total": 592, "additions": 468, "deletions": 124}, "files": [{"sha": "3808ff7063a09d0ea3ddf45a30df14abf2eeab45", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 52, "deletions": 0, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/828781519a85aa04c47b5057555938017cec3ae2/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/828781519a85aa04c47b5057555938017cec3ae2/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=828781519a85aa04c47b5057555938017cec3ae2", "patch": "@@ -1,3 +1,55 @@\n+2009-11-30  Vincent Celier  <celier@adacore.com>\n+\n+\t* gnatlink.adb (Process_Args): Call Executable_Name on argument of -o\n+\twith Only_If_No_Suffix set to True.\n+\t* osint.adb (Executable_Name): Do not add executable suffix if there is\n+\talready a suffix and Only_If_No_Suffix is True.\n+\t* osint.ads (Executable_Name): New Boolean parameter Only_If_No_Suffix,\n+\tdefaulted to False.\n+\n+2009-11-30  Javier Miranda  <miranda@adacore.com>\n+\n+\t* exp_atag.adb (Build_TSD): Change argument name because the actual is\n+\tnow the address of a tag (instead of the tag). Update implementation\n+\taccordingly.\n+\t(Build_CW_Membership): New implementation. Converted into a procedure\n+\tbecause it has an additional out mode parameter. Its implementation has\n+\tbeen rewritten to improve the generated code but also to facilitate\n+\treferencing the relocated object node in the caller.\n+\t* exp_atag.ads (Build_CW_Membership): Update profile and documentation.\n+\t* sinfo.ads (N_SCIL_Membership_Test) New_Node.\n+\t(SCIL_Tag_Value): New field of N_SCIL_Membership_Test nodes.\n+\t(Is_Syntactic_Field): Add entry of new node.\n+\t(SCIL_Tag_Value/Set_SCIL_Tag_Value): New subprograms.\n+\t* sinfo.adb (SCIL_Related_Node, SCIL_Entity): Update assertions to\n+\thandle N_SCIL_Membership_Test nodes.\n+\t(SCIL_Tag_Value/Set_SCIL_Tag_Value): New subprograms.\n+\t* sem.adb (Analyze): Add null management for new node.\n+\t* sem_scil.adb (Find_SCIL_Node): Add null management for new node.\n+\t(Check_SCIL_Node): Add checks of N_SCIL_Membership_Test nodes.\n+\t* exp_ch4.adb (Tagged_Membership): Change profile from function to\n+\tprocedure. Add generation of SCIL node associated with class-wide\n+\tmembership test.\n+\t(Expand_N_In): Complete decoration of SCIL nodes.\n+\t* exp_intr.adb (Expand_Dispatching_Constructor_Call): Tune call to\n+\tBuild_CW_Membership because its profile has been changed.\n+\t* exp_util.adb (Insert_Actions): Add null management for new node.\n+\t* sprint.adb (Sprint_Node_Actual): Handle new node.\n+\t* gcc-interface/trans.c Add no processing for N_SCIL_Membership_Test\n+\tnodes.\n+\t* gcc-interface/Make-lang.in: Update dependencies.\n+\n+2009-11-30  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* opt.ads: New flags Init_Or_Norm_Scalars_Config,\n+\tInitialize_Scalars_Config, to capture the presence of the corresponding\n+\tpragmas in a configuration file.\n+\t* opt.adb (Register_, Save_, Set_, Restore_Opt_Configuration_Switches):\n+\thandle new flags so that they are restored for each compilation unit.\n+\t* frontend.adb: At the end of compilation, scan the context of the main\n+\tunit to recover occurrences of pragma Initialize_Scalars, to annotate\n+\tthe ALI file accordingly.\n+\n 2009-11-30  Vincent Celier  <celier@adacore.com>\n \n \t* prj-tree.ads: Minor comment updates"}, {"sha": "d5cdf0b79b7399053d59683be211f0181f13645f", "filename": "gcc/ada/exp_atag.adb", "status": "modified", "additions": 96, "deletions": 33, "changes": 129, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/828781519a85aa04c47b5057555938017cec3ae2/gcc%2Fada%2Fexp_atag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/828781519a85aa04c47b5057555938017cec3ae2/gcc%2Fada%2Fexp_atag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_atag.adb?ref=828781519a85aa04c47b5057555938017cec3ae2", "patch": "@@ -23,6 +23,7 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n+with Atree;    use Atree;\n with Einfo;    use Einfo;\n with Elists;   use Elists;\n with Exp_Util; use Exp_Util;\n@@ -53,12 +54,14 @@ package body Exp_Atag is\n    --    To_Dispatch_Table_Ptr\n    --      (To_Address (Tag_Node) - Tag_Node.Prims_Ptr'Position);\n \n-   function Build_TSD (Loc : Source_Ptr; Tag_Node : Node_Id) return Node_Id;\n+   function Build_TSD\n+     (Loc           : Source_Ptr;\n+      Tag_Node_Addr : Node_Id) return Node_Id;\n    --  Build code that retrieves the address of the record containing the Type\n    --  Specific Data generated by GNAT.\n    --\n    --  Generate: To_Type_Specific_Data_Ptr\n-   --              (To_Addr_Ptr (To_Address (Tag) - Typeinfo_Offset).all);\n+   --              (To_Addr_Ptr (Tag_Node_Addr - Typeinfo_Offset).all);\n \n    ------------------------------------------------\n    -- Build_Common_Dispatching_Select_Statements --\n@@ -140,39 +143,90 @@ package body Exp_Atag is\n    -- Build_CW_Membership --\n    -------------------------\n \n-   function Build_CW_Membership\n+   procedure Build_CW_Membership\n      (Loc          : Source_Ptr;\n-      Obj_Tag_Node : Node_Id;\n-      Typ_Tag_Node : Node_Id) return Node_Id\n+      Obj_Tag_Node : in out Node_Id;\n+      Typ_Tag_Node : Node_Id;\n+      Related_Nod  : Node_Id;\n+      New_Node     : out Node_Id)\n    is\n-      function Build_Pos return Node_Id;\n-      --  Generate TSD (Obj_Tag).Idepth - TSD (Typ_Tag).Idepth;\n+      Tag_Addr : constant Entity_Id := Make_Defining_Identifier (Loc,\n+                                         New_Internal_Name ('D'));\n+      Obj_TSD  : constant Entity_Id := Make_Defining_Identifier (Loc,\n+                                         New_Internal_Name ('D'));\n+      Typ_TSD  : constant Entity_Id := Make_Defining_Identifier (Loc,\n+                                         New_Internal_Name ('D'));\n+      Index    : constant Entity_Id := Make_Defining_Identifier (Loc,\n+                                         New_Internal_Name ('D'));\n \n-      function Build_Pos return Node_Id is\n-      begin\n-         return\n+   begin\n+      --  Generate:\n+\n+      --    Tag_Addr : constant Tag := Address!(Obj_Tag);\n+      --    Obj_TSD  : constant Type_Specific_Data_Ptr\n+      --                          := Build_TSD (Tag_Addr);\n+      --    Typ_TSD  : constant Type_Specific_Data_Ptr\n+      --                          := Build_TSD (Address!(Typ_Tag));\n+      --    Index    : constant Integer := Obj_TSD.Idepth - Typ_TSD.Idepth\n+      --    Index > 0 and then Obj_TSD.Tags_Table (Index) = Typ'Tag\n+\n+      Insert_Action (Related_Nod,\n+        Make_Object_Declaration (Loc,\n+          Defining_Identifier => Tag_Addr,\n+          Constant_Present    => True,\n+          Object_Definition   => New_Reference_To (RTE (RE_Address), Loc),\n+          Expression          => Unchecked_Convert_To\n+                                   (RTE (RE_Address), Obj_Tag_Node)));\n+\n+      --  Unchecked_Convert_To relocates Obj_Tag_Node and therefore we must\n+      --  update it.\n+\n+      Obj_Tag_Node := Expression (Expression (Parent (Tag_Addr)));\n+\n+      Insert_Action (Related_Nod,\n+        Make_Object_Declaration (Loc,\n+          Defining_Identifier => Obj_TSD,\n+          Constant_Present    => True,\n+          Object_Definition   => New_Reference_To\n+                                   (RTE (RE_Type_Specific_Data_Ptr), Loc),\n+          Expression => Build_TSD (Loc, New_Reference_To (Tag_Addr, Loc))));\n+\n+      Insert_Action (Related_Nod,\n+        Make_Object_Declaration (Loc,\n+          Defining_Identifier => Typ_TSD,\n+          Constant_Present    => True,\n+          Object_Definition   => New_Reference_To\n+                                   (RTE (RE_Type_Specific_Data_Ptr), Loc),\n+          Expression => Build_TSD (Loc,\n+                          Unchecked_Convert_To (RTE (RE_Address),\n+                            Typ_Tag_Node))));\n+\n+      Insert_Action (Related_Nod,\n+        Make_Object_Declaration (Loc,\n+          Defining_Identifier => Index,\n+          Constant_Present    => True,\n+          Object_Definition   => New_Occurrence_Of (Standard_Integer, Loc),\n+          Expression =>\n             Make_Op_Subtract (Loc,\n               Left_Opnd =>\n                 Make_Selected_Component (Loc,\n-                  Prefix => Build_TSD (Loc, Duplicate_Subexpr (Obj_Tag_Node)),\n-                  Selector_Name =>\n-                    New_Reference_To (RTE_Record_Component (RE_Idepth), Loc)),\n-\n-              Right_Opnd =>\n-                Make_Selected_Component (Loc,\n-                  Prefix => Build_TSD (Loc, Duplicate_Subexpr (Typ_Tag_Node)),\n+                  Prefix        => New_Reference_To (Obj_TSD, Loc),\n                   Selector_Name =>\n-                    New_Reference_To (RTE_Record_Component (RE_Idepth), Loc)));\n-      end Build_Pos;\n+                     New_Reference_To\n+                       (RTE_Record_Component (RE_Idepth), Loc)),\n \n-   --  Start of processing for Build_CW_Membership\n+               Right_Opnd =>\n+                 Make_Selected_Component (Loc,\n+                   Prefix        => New_Reference_To (Typ_TSD, Loc),\n+                   Selector_Name =>\n+                     New_Reference_To\n+                       (RTE_Record_Component (RE_Idepth), Loc)))));\n \n-   begin\n-      return\n+      New_Node :=\n         Make_And_Then (Loc,\n           Left_Opnd =>\n             Make_Op_Ge (Loc,\n-              Left_Opnd  => Build_Pos,\n+              Left_Opnd  => New_Occurrence_Of (Index, Loc),\n               Right_Opnd => Make_Integer_Literal (Loc, Uint_0)),\n \n           Right_Opnd =>\n@@ -181,12 +235,12 @@ package body Exp_Atag is\n                 Make_Indexed_Component (Loc,\n                   Prefix =>\n                     Make_Selected_Component (Loc,\n-                      Prefix => Build_TSD (Loc, Obj_Tag_Node),\n+                      Prefix        => New_Reference_To (Obj_TSD, Loc),\n                       Selector_Name =>\n                         New_Reference_To\n                           (RTE_Record_Component (RE_Tags_Table), Loc)),\n                   Expressions =>\n-                    New_List (Build_Pos)),\n+                    New_List (New_Occurrence_Of (Index, Loc))),\n \n               Right_Opnd => Typ_Tag_Node));\n    end Build_CW_Membership;\n@@ -197,7 +251,8 @@ package body Exp_Atag is\n \n    function Build_DT\n      (Loc      : Source_Ptr;\n-      Tag_Node : Node_Id) return Node_Id is\n+      Tag_Node : Node_Id) return Node_Id\n+   is\n    begin\n       return\n         Make_Function_Call (Loc,\n@@ -217,7 +272,9 @@ package body Exp_Atag is\n    begin\n       return\n         Make_Selected_Component (Loc,\n-          Prefix => Build_TSD (Loc, Tag_Node),\n+          Prefix =>\n+            Build_TSD (Loc,\n+              Unchecked_Convert_To (RTE (RE_Address), Tag_Node)),\n           Selector_Name =>\n             New_Reference_To\n               (RTE_Record_Component (RE_Access_Level), Loc));\n@@ -390,7 +447,9 @@ package body Exp_Atag is\n    begin\n       return\n         Make_Selected_Component (Loc,\n-          Prefix => Build_TSD (Loc, Tag_Node),\n+          Prefix =>\n+            Build_TSD (Loc,\n+              Unchecked_Convert_To (RTE (RE_Address), Tag_Node)),\n           Selector_Name =>\n             New_Reference_To\n               (RTE_Record_Component (RE_Transportable), Loc));\n@@ -529,7 +588,9 @@ package body Exp_Atag is\n         Make_Assignment_Statement (Loc,\n           Name =>\n             Make_Selected_Component (Loc,\n-              Prefix => Build_TSD (Loc, Tag_Node),\n+              Prefix =>\n+                Build_TSD (Loc,\n+                  Unchecked_Convert_To (RTE (RE_Address), Tag_Node)),\n               Selector_Name =>\n                 New_Reference_To\n                   (RTE_Record_Component (RE_Size_Func), Loc)),\n@@ -572,7 +633,9 @@ package body Exp_Atag is\n    -- Build_TSD --\n    ---------------\n \n-   function Build_TSD (Loc : Source_Ptr; Tag_Node : Node_Id) return Node_Id is\n+   function Build_TSD\n+     (Loc           : Source_Ptr;\n+      Tag_Node_Addr : Node_Id) return Node_Id is\n    begin\n       return\n         Unchecked_Convert_To (RTE (RE_Type_Specific_Data_Ptr),\n@@ -590,9 +653,9 @@ package body Exp_Atag is\n                         Chars => Name_Op_Subtract)),\n \n                 Parameter_Associations => New_List (\n-                  Unchecked_Convert_To (RTE (RE_Address), Tag_Node),\n-                    New_Reference_To\n-                      (RTE (RE_DT_Typeinfo_Ptr_Size), Loc))))));\n+                  Tag_Node_Addr,\n+                  New_Reference_To\n+                    (RTE (RE_DT_Typeinfo_Ptr_Size), Loc))))));\n    end Build_TSD;\n \n end Exp_Atag;"}, {"sha": "1fa243cf91f67c11cbf250d24e5525ac953e4815", "filename": "gcc/ada/exp_atag.ads", "status": "modified", "additions": 10, "deletions": 5, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/828781519a85aa04c47b5057555938017cec3ae2/gcc%2Fada%2Fexp_atag.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/828781519a85aa04c47b5057555938017cec3ae2/gcc%2Fada%2Fexp_atag.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_atag.ads?ref=828781519a85aa04c47b5057555938017cec3ae2", "patch": "@@ -41,18 +41,23 @@ package Exp_Atag is\n    --  Ada 2005 (AI-345): Generate statements that are common between timed,\n    --  asynchronous, and conditional select expansion.\n \n-   function Build_CW_Membership\n+   procedure Build_CW_Membership\n      (Loc          : Source_Ptr;\n-      Obj_Tag_Node : Node_Id;\n-      Typ_Tag_Node : Node_Id) return Node_Id;\n+      Obj_Tag_Node : in out Node_Id;\n+      Typ_Tag_Node : Node_Id;\n+      Related_Nod  : Node_Id;\n+      New_Node     : out Node_Id);\n    --  Build code that returns true if Obj_Tag is in Typ_Tag'Class. Each DT\n    --  has a table of ancestors and its inheritance level (Idepth). Obj is in\n    --  Typ'Class if Typ'Tag is found in the table of ancestors referenced by\n    --  Obj'Tag. Knowing the level of inheritance of both types, this can be\n    --  computed in constant time by the formula:\n    --\n-   --   TSD (Obj'tag).Tags_Table (TSD (Obj'tag).Idepth - TSD (Typ'tag).Idepth)\n-   --     = Typ'tag\n+   --   Index := TSD (Obj'Tag).Idepth - TSD (Typ'Tag).Idepth;\n+   --   Index > 0 and then TSD (Obj'Tag).Tags_Table (Index) = Typ'Tag\n+   --\n+   --  Related_Nod is the node where the implicit declaration of variable Index\n+   --  is inserted. Obj_Tag_Node is relocated.\n \n    function Build_Get_Access_Level\n      (Loc      : Source_Ptr;"}, {"sha": "4f0ef91a4194d42e4c4a19e72379bc22816c2c13", "filename": "gcc/ada/exp_ch4.adb", "status": "modified", "additions": 58, "deletions": 20, "changes": 78, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/828781519a85aa04c47b5057555938017cec3ae2/gcc%2Fada%2Fexp_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/828781519a85aa04c47b5057555938017cec3ae2/gcc%2Fada%2Fexp_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch4.adb?ref=828781519a85aa04c47b5057555938017cec3ae2", "patch": "@@ -205,7 +205,10 @@ package body Exp_Ch4 is\n    --  its expression. If N is neither comparison nor a type conversion, the\n    --  call has no effect.\n \n-   function Tagged_Membership (N : Node_Id) return Node_Id;\n+   procedure Tagged_Membership\n+     (N         : Node_Id;\n+      SCIL_Node : out Node_Id;\n+      Result    : out Node_Id);\n    --  Construct the expression corresponding to the tagged membership test.\n    --  Deals with a second operand being (or not) a class-wide type.\n \n@@ -4503,10 +4506,12 @@ package body Exp_Ch4 is\n \n       else\n          declare\n-            Typ    : Entity_Id        := Etype (Rop);\n-            Is_Acc : constant Boolean := Is_Access_Type (Typ);\n-            Obj    : Node_Id          := Lop;\n-            Cond   : Node_Id          := Empty;\n+            Typ       : Entity_Id        := Etype (Rop);\n+            Is_Acc    : constant Boolean := Is_Access_Type (Typ);\n+            Cond      : Node_Id          := Empty;\n+            New_N     : Node_Id;\n+            Obj       : Node_Id          := Lop;\n+            SCIL_Node : Node_Id;\n \n          begin\n             Remove_Side_Effects (Obj);\n@@ -4521,8 +4526,19 @@ package body Exp_Ch4 is\n                --  normal tagged membership expansion is not what we want).\n \n                if Tagged_Type_Expansion then\n-                  Rewrite (N, Tagged_Membership (N));\n+                  Tagged_Membership (N, SCIL_Node, New_N);\n+                  Rewrite (N, New_N);\n                   Analyze_And_Resolve (N, Rtyp);\n+\n+                  --  Update decoration of relocated node referenced by the\n+                  --  SCIL node.\n+\n+                  if Generate_SCIL\n+                    and then Present (SCIL_Node)\n+                  then\n+                     Set_SCIL_Related_Node (SCIL_Node, N);\n+                     Insert_Action (N, SCIL_Node);\n+                  end if;\n                end if;\n \n                return;\n@@ -9857,16 +9873,23 @@ package body Exp_Ch4 is\n    --  table of abstract interface types plus the ancestor table contained in\n    --  the dispatch table pointed by Left_Expr.Tag for Typ'Tag\n \n-   function Tagged_Membership (N : Node_Id) return Node_Id is\n+   procedure Tagged_Membership\n+     (N         : Node_Id;\n+      SCIL_Node : out Node_Id;\n+      Result    : out Node_Id)\n+   is\n       Left  : constant Node_Id    := Left_Opnd  (N);\n       Right : constant Node_Id    := Right_Opnd (N);\n       Loc   : constant Source_Ptr := Sloc (N);\n \n       Left_Type  : Entity_Id;\n+      New_Node   : Node_Id;\n       Right_Type : Entity_Id;\n       Obj_Tag    : Node_Id;\n \n    begin\n+      SCIL_Node := Empty;\n+\n       --  Handle entities from the limited view\n \n       Left_Type  := Available_View (Etype (Left));\n@@ -9914,7 +9937,8 @@ package body Exp_Ch4 is\n                                            (Typ   => Left_Type,\n                                             Iface => Etype (Right_Type))))\n          then\n-            return New_Reference_To (Standard_True, Loc);\n+            Result := New_Reference_To (Standard_True, Loc);\n+            return;\n          end if;\n \n          --  Ada 2005 (AI-251): Class-wide applied to interfaces\n@@ -9931,10 +9955,11 @@ package body Exp_Ch4 is\n             if not RTE_Available (RE_IW_Membership) then\n                Error_Msg_CRT\n                  (\"dynamic membership test on interface types\", N);\n-               return Empty;\n+               Result := Empty;\n+               return;\n             end if;\n \n-            return\n+            Result :=\n               Make_Function_Call (Loc,\n                  Name => New_Occurrence_Of (RTE (RE_IW_Membership), Loc),\n                  Parameter_Associations => New_List (\n@@ -9949,14 +9974,27 @@ package body Exp_Ch4 is\n          --  Ada 95: Normal case\n \n          else\n-            return\n-              Build_CW_Membership (Loc,\n-                Obj_Tag_Node => Obj_Tag,\n-                Typ_Tag_Node =>\n-                   New_Reference_To (\n-                     Node (First_Elmt\n-                            (Access_Disp_Table (Root_Type (Right_Type)))),\n-                     Loc));\n+            Build_CW_Membership (Loc,\n+              Obj_Tag_Node => Obj_Tag,\n+              Typ_Tag_Node =>\n+                 New_Reference_To (\n+                   Node (First_Elmt\n+                          (Access_Disp_Table (Root_Type (Right_Type)))),\n+                   Loc),\n+              Related_Nod => N,\n+              New_Node    => New_Node);\n+\n+            --  Generate the SCIL node for this class-wide membership test.\n+            --  Done here because the previous call to Build_CW_Membership\n+            --  relocates Obj_Tag.\n+\n+            if Generate_SCIL then\n+               SCIL_Node := Make_SCIL_Membership_Test (Sloc (N));\n+               Set_SCIL_Entity (SCIL_Node, Etype (Right_Type));\n+               Set_SCIL_Tag_Value (SCIL_Node, Obj_Tag);\n+            end if;\n+\n+            Result := New_Node;\n          end if;\n \n       --  Right_Type is not a class-wide type\n@@ -9965,10 +10003,10 @@ package body Exp_Ch4 is\n          --  No need to check the tag of the object if Right_Typ is abstract\n \n          if Is_Abstract_Type (Right_Type) then\n-            return New_Reference_To (Standard_False, Loc);\n+            Result := New_Reference_To (Standard_False, Loc);\n \n          else\n-            return\n+            Result :=\n               Make_Op_Eq (Loc,\n                 Left_Opnd  => Obj_Tag,\n                 Right_Opnd =>"}, {"sha": "da6cf5a988c8ad4d41af9b60dab678964bb7ae07", "filename": "gcc/ada/exp_intr.adb", "status": "modified", "additions": 22, "deletions": 13, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/828781519a85aa04c47b5057555938017cec3ae2/gcc%2Fada%2Fexp_intr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/828781519a85aa04c47b5057555938017cec3ae2/gcc%2Fada%2Fexp_intr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_intr.adb?ref=828781519a85aa04c47b5057555938017cec3ae2", "patch": "@@ -234,19 +234,28 @@ package body Exp_Intr is\n       --  the tag in the table of ancestor tags.\n \n       elsif not Is_Interface (Result_Typ) then\n-         Insert_Action (N,\n-           Make_Implicit_If_Statement (N,\n-             Condition =>\n-               Make_Op_Not (Loc,\n-                 Build_CW_Membership (Loc,\n-                   Obj_Tag_Node => Duplicate_Subexpr (Tag_Arg),\n-                   Typ_Tag_Node =>\n-                     New_Reference_To (\n-                        Node (First_Elmt (Access_Disp_Table (\n-                                            Root_Type (Result_Typ)))), Loc))),\n-             Then_Statements =>\n-               New_List (Make_Raise_Statement (Loc,\n-                           New_Occurrence_Of (RTE (RE_Tag_Error), Loc)))));\n+         declare\n+            Obj_Tag_Node : Node_Id := Duplicate_Subexpr (Tag_Arg);\n+            CW_Test_Node : Node_Id;\n+\n+         begin\n+            Build_CW_Membership (Loc,\n+              Obj_Tag_Node => Obj_Tag_Node,\n+              Typ_Tag_Node =>\n+                New_Reference_To (\n+                   Node (First_Elmt (Access_Disp_Table (\n+                                       Root_Type (Result_Typ)))), Loc),\n+              Related_Nod => N,\n+              New_Node    => CW_Test_Node);\n+\n+            Insert_Action (N,\n+              Make_Implicit_If_Statement (N,\n+                Condition =>\n+                  Make_Op_Not (Loc, CW_Test_Node),\n+                Then_Statements =>\n+                  New_List (Make_Raise_Statement (Loc,\n+                              New_Occurrence_Of (RTE (RE_Tag_Error), Loc)))));\n+         end;\n \n       --  Call IW_Membership test if the Result_Type is an abstract interface\n       --  to look for the tag in the table of interface tags."}, {"sha": "bd1748b1de27e03054333aaca9022a4b682addc4", "filename": "gcc/ada/exp_util.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/828781519a85aa04c47b5057555938017cec3ae2/gcc%2Fada%2Fexp_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/828781519a85aa04c47b5057555938017cec3ae2/gcc%2Fada%2Fexp_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_util.adb?ref=828781519a85aa04c47b5057555938017cec3ae2", "patch": "@@ -2761,6 +2761,7 @@ package body Exp_Util is\n                N_SCIL_Dispatch_Table_Object_Init        |\n                N_SCIL_Dispatch_Table_Tag_Init           |\n                N_SCIL_Dispatching_Call                  |\n+               N_SCIL_Membership_Test                   |\n                N_SCIL_Tag_Init                          |\n                N_Selected_Component                     |\n                N_Signed_Integer_Type_Definition         |"}, {"sha": "5832a2cb1fe298c3b5e7515b54d268f99be83c9b", "filename": "gcc/ada/frontend.adb", "status": "modified", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/828781519a85aa04c47b5057555938017cec3ae2/gcc%2Fada%2Ffrontend.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/828781519a85aa04c47b5057555938017cec3ae2/gcc%2Fada%2Ffrontend.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffrontend.adb?ref=828781519a85aa04c47b5057555938017cec3ae2", "patch": "@@ -47,6 +47,7 @@ with Prepcomp;\n with Restrict; use Restrict;\n with Rident;   use Rident;\n with Rtsfind;  use Rtsfind;\n+with Snames;   use Snames;\n with Sprint;\n with Scn;      use Scn;\n with Sem;      use Sem;\n@@ -381,6 +382,28 @@ begin\n \n    Sprint.Source_Dump;\n \n+   --  Check again for configuration pragmas that appear in the context of\n+   --  the main unit. These pragmas only affect the main unit, and the\n+   --  corresponding flag is reset after each call to Semantics, but they\n+   --  may affect the generated ali for the unit, and therefore the flag\n+   --  must be set properly after compilation. Currently we only check for\n+   --  Initialize_Scalars, but others should be checked: as well???\n+\n+   declare\n+      Item  : Node_Id;\n+\n+   begin\n+      Item := First (Context_Items (Cunit (Main_Unit)));\n+      while Present (Item) loop\n+         if Nkind (Item) = N_Pragma\n+           and then Pragma_Name (Item) = Name_Initialize_Scalars\n+         then\n+            Initialize_Scalars := True;\n+         end if;\n+         Next (Item);\n+      end loop;\n+   end;\n+\n    --  If a mapping file has been specified by a -gnatem switch, update\n    --  it if there has been some sources that were not in the mappings.\n "}, {"sha": "d57c1f0032c536e2ff96ad99641447852d114907", "filename": "gcc/ada/gcc-interface/Make-lang.in", "status": "modified", "additions": 14, "deletions": 18, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/828781519a85aa04c47b5057555938017cec3ae2/gcc%2Fada%2Fgcc-interface%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/828781519a85aa04c47b5057555938017cec3ae2/gcc%2Fada%2Fgcc-interface%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2FMake-lang.in?ref=828781519a85aa04c47b5057555938017cec3ae2", "patch": "@@ -1663,28 +1663,24 @@ ada/exp_aggr.o : ada/ada.ads ada/a-except.ads ada/a-unccon.ads \\\n \n ada/exp_atag.o : ada/ada.ads ada/a-except.ads ada/a-unccon.ads \\\n    ada/a-uncdea.ads ada/alloc.ads ada/atree.ads ada/atree.adb \\\n-   ada/casing.ads ada/checks.ads ada/csets.ads ada/debug.ads ada/einfo.ads \\\n-   ada/einfo.adb ada/elists.ads ada/elists.adb ada/err_vars.ads \\\n-   ada/errout.ads ada/erroutc.ads ada/exp_aggr.ads ada/exp_atag.ads \\\n-   ada/exp_atag.adb ada/exp_ch6.ads ada/exp_ch7.ads ada/exp_dist.ads \\\n-   ada/exp_tss.ads ada/exp_util.ads ada/exp_util.adb ada/fname.ads \\\n-   ada/fname-uf.ads ada/get_targ.ads ada/gnat.ads ada/g-htable.ads \\\n-   ada/hostparm.ads ada/inline.ads ada/itypes.ads ada/lib.ads \\\n+   ada/casing.ads ada/csets.ads ada/debug.ads ada/einfo.ads ada/einfo.adb \\\n+   ada/elists.ads ada/elists.adb ada/err_vars.ads ada/errout.ads \\\n+   ada/erroutc.ads ada/exp_atag.ads ada/exp_atag.adb ada/exp_dist.ads \\\n+   ada/exp_tss.ads ada/exp_util.ads ada/fname.ads ada/fname-uf.ads \\\n+   ada/gnat.ads ada/g-htable.ads ada/hostparm.ads ada/lib.ads \\\n    ada/lib-load.ads ada/namet.ads ada/nlists.ads ada/nlists.adb \\\n    ada/nmake.ads ada/nmake.adb ada/opt.ads ada/output.ads ada/restrict.ads \\\n    ada/rident.ads ada/rtsfind.ads ada/rtsfind.adb ada/sem.ads \\\n-   ada/sem_aux.ads ada/sem_ch7.ads ada/sem_ch8.ads ada/sem_dist.ads \\\n-   ada/sem_eval.ads ada/sem_res.ads ada/sem_scil.ads ada/sem_type.ads \\\n-   ada/sem_util.ads ada/sinfo.ads ada/sinfo.adb ada/sinput.ads \\\n-   ada/snames.ads ada/stand.ads ada/stringt.ads ada/system.ads \\\n-   ada/s-exctab.ads ada/s-htable.ads ada/s-imenne.ads ada/s-memory.ads \\\n-   ada/s-os_lib.ads ada/s-parame.ads ada/s-rident.ads ada/s-soflin.ads \\\n-   ada/s-stache.ads ada/s-stalib.ads ada/s-stoele.ads ada/s-stoele.adb \\\n-   ada/s-string.ads ada/s-traent.ads ada/s-unstyp.ads ada/s-wchcon.ads \\\n-   ada/table.ads ada/table.adb ada/targparm.ads ada/tbuild.ads \\\n-   ada/tbuild.adb ada/tree_io.ads ada/ttypes.ads ada/types.ads \\\n+   ada/sem_aux.ads ada/sem_ch7.ads ada/sem_dist.ads ada/sem_util.ads \\\n+   ada/sinfo.ads ada/sinfo.adb ada/sinput.ads ada/snames.ads ada/stand.ads \\\n+   ada/stringt.ads ada/system.ads ada/s-exctab.ads ada/s-htable.ads \\\n+   ada/s-imenne.ads ada/s-memory.ads ada/s-os_lib.ads ada/s-parame.ads \\\n+   ada/s-rident.ads ada/s-soflin.ads ada/s-stache.ads ada/s-stalib.ads \\\n+   ada/s-stoele.ads ada/s-stoele.adb ada/s-string.ads ada/s-traent.ads \\\n+   ada/s-unstyp.ads ada/s-wchcon.ads ada/table.ads ada/table.adb \\\n+   ada/tbuild.ads ada/tbuild.adb ada/tree_io.ads ada/types.ads \\\n    ada/uintp.ads ada/uintp.adb ada/uname.ads ada/unchconv.ads \\\n-   ada/unchdeal.ads ada/urealp.ads ada/validsw.ads \n+   ada/unchdeal.ads ada/urealp.ads \n \n ada/exp_attr.o : ada/ada.ads ada/a-except.ads ada/a-unccon.ads \\\n    ada/a-uncdea.ads ada/alloc.ads ada/atree.ads ada/atree.adb \\"}, {"sha": "eff96837653ed82d61ac93f7c117e00c73aadb36", "filename": "gcc/ada/gcc-interface/trans.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/828781519a85aa04c47b5057555938017cec3ae2/gcc%2Fada%2Fgcc-interface%2Ftrans.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/828781519a85aa04c47b5057555938017cec3ae2/gcc%2Fada%2Fgcc-interface%2Ftrans.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Ftrans.c?ref=828781519a85aa04c47b5057555938017cec3ae2", "patch": "@@ -5321,6 +5321,7 @@ gnat_to_gnu (Node_Id gnat_node)\n     case N_SCIL_Dispatch_Table_Object_Init:\n     case N_SCIL_Dispatch_Table_Tag_Init:\n     case N_SCIL_Dispatching_Call:\n+    case N_SCIL_Membership_Test:\n     case N_SCIL_Tag_Init:\n       /* SCIL nodes require no processing for GCC.  */\n       gnu_result = alloc_stmt_list ();"}, {"sha": "201e11d126ce223b80203f0baa3542e95d809757", "filename": "gcc/ada/gnatlink.adb", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/828781519a85aa04c47b5057555938017cec3ae2/gcc%2Fada%2Fgnatlink.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/828781519a85aa04c47b5057555938017cec3ae2/gcc%2Fada%2Fgnatlink.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnatlink.adb?ref=828781519a85aa04c47b5057555938017cec3ae2", "patch": "@@ -445,7 +445,10 @@ procedure Gnatlink is\n                            Exit_With_Error (\"Missing argument for -o\");\n                         end if;\n \n-                        Output_File_Name := new String'(Argument (Next_Arg));\n+                        Output_File_Name :=\n+                          new String'(Executable_Name\n+                            (Argument (Next_Arg),\n+                             Only_If_No_Suffix => True));\n \n                      when 'R' =>\n                         Opt.Run_Path_Option := False;"}, {"sha": "a1528962b0192c44c1a581baac4cfc02e9ee5d21", "filename": "gcc/ada/opt.adb", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/828781519a85aa04c47b5057555938017cec3ae2/gcc%2Fada%2Fopt.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/828781519a85aa04c47b5057555938017cec3ae2/gcc%2Fada%2Fopt.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fopt.adb?ref=828781519a85aa04c47b5057555938017cec3ae2", "patch": "@@ -56,6 +56,8 @@ package body Opt is\n       External_Name_Exp_Casing_Config       := External_Name_Exp_Casing;\n       External_Name_Imp_Casing_Config       := External_Name_Imp_Casing;\n       Fast_Math_Config                      := Fast_Math;\n+      Init_Or_Norm_Scalars_Config           := Init_Or_Norm_Scalars;\n+      Initialize_Scalars_Config             := Initialize_Scalars;\n       Optimize_Alignment_Config             := Optimize_Alignment;\n       Persistent_BSS_Mode_Config            := Persistent_BSS_Mode;\n       Polling_Required_Config               := Polling_Required;\n@@ -86,6 +88,8 @@ package body Opt is\n       External_Name_Exp_Casing       := Save.External_Name_Exp_Casing;\n       External_Name_Imp_Casing       := Save.External_Name_Imp_Casing;\n       Fast_Math                      := Save.Fast_Math;\n+      Init_Or_Norm_Scalars           := Save.Init_Or_Norm_Scalars;\n+      Initialize_Scalars             := Save.Initialize_Scalars;\n       Optimize_Alignment             := Save.Optimize_Alignment;\n       Optimize_Alignment_Local       := Save.Optimize_Alignment_Local;\n       Persistent_BSS_Mode            := Save.Persistent_BSS_Mode;\n@@ -111,6 +115,8 @@ package body Opt is\n       Save.External_Name_Exp_Casing       := External_Name_Exp_Casing;\n       Save.External_Name_Imp_Casing       := External_Name_Imp_Casing;\n       Save.Fast_Math                      := Fast_Math;\n+      Save.Init_Or_Norm_Scalars           := Init_Or_Norm_Scalars;\n+      Save.Initialize_Scalars             := Initialize_Scalars;\n       Save.Optimize_Alignment             := Optimize_Alignment;\n       Save.Optimize_Alignment_Local       := Optimize_Alignment_Local;\n       Save.Persistent_BSS_Mode            := Persistent_BSS_Mode;\n@@ -175,6 +181,8 @@ package body Opt is\n          External_Name_Exp_Casing    := External_Name_Exp_Casing_Config;\n          External_Name_Imp_Casing    := External_Name_Imp_Casing_Config;\n          Fast_Math                   := Fast_Math_Config;\n+         Init_Or_Norm_Scalars        := Init_Or_Norm_Scalars_Config;\n+         Initialize_Scalars          := Initialize_Scalars_Config;\n          Optimize_Alignment          := Optimize_Alignment_Config;\n          Optimize_Alignment_Local    := False;\n          Persistent_BSS_Mode         := Persistent_BSS_Mode_Config;"}, {"sha": "1bb837a467b4263a9b0fa225967e68e8095aade3", "filename": "gcc/ada/opt.ads", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/828781519a85aa04c47b5057555938017cec3ae2/gcc%2Fada%2Fopt.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/828781519a85aa04c47b5057555938017cec3ae2/gcc%2Fada%2Fopt.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fopt.ads?ref=828781519a85aa04c47b5057555938017cec3ae2", "patch": "@@ -1551,6 +1551,18 @@ package Opt is\n    --  used to set the initial value of Fast_Math at the start of each new\n    --  compilation unit.\n \n+   Init_Or_Norm_Scalars_Config : Boolean;\n+   --  GNAT\n+   --  This is the value of the configuration switch that is set by one\n+   --  of the pragmas Initialize_Scalars or Normalize_Scalars.\n+\n+   Initialize_Scalars_Config : Boolean;\n+   --  GNAT\n+   --  This is the value of the configuration switch that is set by the\n+   --  pragma Initialize_Scalars when it appears in the gnat.adc file.\n+   --  This switch is not set when the pragma appears ahead of a given\n+   --  unit, so it does not affect the compilation of other units.\n+\n    Optimize_Alignment_Config : Character;\n    --  GNAT\n    --  This is the value of the configuration switch that controls the\n@@ -1699,6 +1711,8 @@ private\n       External_Name_Exp_Casing       : External_Casing_Type;\n       External_Name_Imp_Casing       : External_Casing_Type;\n       Fast_Math                      : Boolean;\n+      Init_Or_Norm_Scalars           : Boolean;\n+      Initialize_Scalars             : Boolean;\n       Optimize_Alignment             : Character;\n       Optimize_Alignment_Local       : Boolean;\n       Persistent_BSS_Mode            : Boolean;"}, {"sha": "523852a2b1df9ffbaeedc986aa2fec0965a2d9c5", "filename": "gcc/ada/osint.adb", "status": "modified", "additions": 61, "deletions": 28, "changes": 89, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/828781519a85aa04c47b5057555938017cec3ae2/gcc%2Fada%2Fosint.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/828781519a85aa04c47b5057555938017cec3ae2/gcc%2Fada%2Fosint.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fosint.adb?ref=828781519a85aa04c47b5057555938017cec3ae2", "patch": "@@ -793,8 +793,12 @@ package body Osint is\n    -- Executable_Name --\n    ---------------------\n \n-   function Executable_Name (Name : File_Name_Type) return File_Name_Type is\n+   function Executable_Name\n+     (Name              : File_Name_Type;\n+      Only_If_No_Suffix : Boolean := False) return File_Name_Type\n+   is\n       Exec_Suffix : String_Access;\n+      Add_Suffix  : Boolean;\n \n    begin\n       if Name = No_File then\n@@ -808,40 +812,59 @@ package body Osint is\n          Exec_Suffix := new String'(Name_Buffer (1 .. Name_Len));\n       end if;\n \n-      Get_Name_String (Name);\n-\n       if Exec_Suffix'Length /= 0 then\n-         declare\n-            Buffer : String := Name_Buffer (1 .. Name_Len);\n+         Add_Suffix := not Only_If_No_Suffix;\n \n-         begin\n-            --  Get the file name in canonical case to accept as is names\n-            --  ending with \".EXE\" on VMS and Windows.\n+         if not Add_Suffix then\n+            for J in 1 .. Name_Len loop\n+               if Name_Buffer (J) = '.' then\n+                  Add_Suffix := True;\n+                  exit;\n+               end if;\n+            end loop;\n+         end if;\n \n-            Canonical_Case_File_Name (Buffer);\n+         if Add_Suffix then\n+            Get_Name_String (Name);\n \n-            --  If Executable does not end with the executable suffix, add it\n+            declare\n+               Buffer : String := Name_Buffer (1 .. Name_Len);\n \n-            if Buffer'Length <= Exec_Suffix'Length\n-              or else\n-                Buffer (Buffer'Last - Exec_Suffix'Length + 1 .. Buffer'Last)\n-                  /= Exec_Suffix.all\n-            then\n-               Name_Buffer (Name_Len + 1 .. Name_Len + Exec_Suffix'Length) :=\n-                 Exec_Suffix.all;\n-               Name_Len := Name_Len + Exec_Suffix'Length;\n-               Free (Exec_Suffix);\n-               return Name_Find;\n-            end if;\n-         end;\n+            begin\n+               --  Get the file name in canonical case to accept as is names\n+               --  ending with \".EXE\" on VMS and Windows.\n+\n+               Canonical_Case_File_Name (Buffer);\n+\n+               --  If Executable does not end with the executable suffix, add\n+               --  it.\n+\n+               if Buffer'Length <= Exec_Suffix'Length\n+                 or else\n+                   Buffer (Buffer'Last - Exec_Suffix'Length + 1 .. Buffer'Last)\n+                   /= Exec_Suffix.all\n+               then\n+                  Name_Buffer\n+                    (Name_Len + 1 .. Name_Len + Exec_Suffix'Length) :=\n+                    Exec_Suffix.all;\n+                  Name_Len := Name_Len + Exec_Suffix'Length;\n+                  Free (Exec_Suffix);\n+                  return Name_Find;\n+               end if;\n+            end;\n+         end if;\n       end if;\n \n       Free (Exec_Suffix);\n       return Name;\n    end Executable_Name;\n \n-   function Executable_Name (Name : String) return String is\n+   function Executable_Name\n+     (Name              : String;\n+      Only_If_No_Suffix : Boolean := False) return String\n+   is\n       Exec_Suffix    : String_Access;\n+      Add_Suffix     : Boolean;\n       Canonical_Name : String := Name;\n \n    begin\n@@ -858,12 +881,22 @@ package body Osint is\n       begin\n          Free (Exec_Suffix);\n          Canonical_Case_File_Name (Canonical_Name);\n+         Add_Suffix := not Only_If_No_Suffix;\n+\n+         if not Add_Suffix then\n+            for J in 1 .. Name_Len loop\n+               if Name_Buffer (J) = '.' then\n+                  Add_Suffix := True;\n+                  exit;\n+               end if;\n+            end loop;\n+         end if;\n \n-         if Suffix'Length /= 0\n-           and then\n-             (Canonical_Name'Length <= Suffix'Length\n-               or else Canonical_Name (Canonical_Name'Last - Suffix'Length + 1\n-                                         .. Canonical_Name'Last) /= Suffix)\n+         if Suffix'Length = 0 and then\n+           Add_Suffix and then\n+           (Canonical_Name'Length <= Suffix'Length\n+            or else Canonical_Name (Canonical_Name'Last - Suffix'Length + 1\n+                                    .. Canonical_Name'Last) /= Suffix)\n          then\n             declare\n                Result : String (1 .. Name'Length + Suffix'Length);"}, {"sha": "f4993efe0f980e79e9f83559b6d2e9f857fa3f3a", "filename": "gcc/ada/osint.ads", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/828781519a85aa04c47b5057555938017cec3ae2/gcc%2Fada%2Fosint.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/828781519a85aa04c47b5057555938017cec3ae2/gcc%2Fada%2Fosint.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fosint.ads?ref=828781519a85aa04c47b5057555938017cec3ae2", "patch": "@@ -147,13 +147,17 @@ package Osint is\n    --  Strips the suffix (the last '.' and whatever comes after it) from Name.\n    --  Returns the stripped name.\n \n-   function Executable_Name (Name : File_Name_Type) return File_Name_Type;\n+   function Executable_Name\n+     (Name              : File_Name_Type;\n+      Only_If_No_Suffix : Boolean := False) return File_Name_Type;\n    --  Given a file name it adds the appropriate suffix at the end so that\n    --  it becomes the name of the executable on the system at end. For\n    --  instance under DOS it adds the \".exe\" suffix, whereas under UNIX no\n    --  suffix is added.\n \n-   function Executable_Name (Name : String) return String;\n+   function Executable_Name\n+     (Name              : String;\n+      Only_If_No_Suffix : Boolean := False) return String;\n    --  Same as above, with String parameters\n \n    function File_Stamp (Name : File_Name_Type) return Time_Stamp_Type;"}, {"sha": "caa73a0b82c143bc73d1685617efd73eca67a7ed", "filename": "gcc/ada/sem.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/828781519a85aa04c47b5057555938017cec3ae2/gcc%2Fada%2Fsem.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/828781519a85aa04c47b5057555938017cec3ae2/gcc%2Fada%2Fsem.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem.adb?ref=828781519a85aa04c47b5057555938017cec3ae2", "patch": "@@ -612,6 +612,7 @@ package body Sem is\n            N_SCIL_Dispatch_Table_Object_Init        |\n            N_SCIL_Dispatch_Table_Tag_Init           |\n            N_SCIL_Dispatching_Call                  |\n+           N_SCIL_Membership_Test                   |\n            N_SCIL_Tag_Init                          =>\n             null;\n "}, {"sha": "977c07d6ddfe1cf37c397cb44bed0a2e7563971b", "filename": "gcc/ada/sem_scil.adb", "status": "modified", "additions": 48, "deletions": 4, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/828781519a85aa04c47b5057555938017cec3ae2/gcc%2Fada%2Fsem_scil.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/828781519a85aa04c47b5057555938017cec3ae2/gcc%2Fada%2Fsem_scil.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_scil.adb?ref=828781519a85aa04c47b5057555938017cec3ae2", "patch": "@@ -101,15 +101,58 @@ package body Sem_SCIL is\n    -- Check_SCIL_Node --\n    ---------------------\n \n-   --  Is this a good name for the function, given it only deals with\n-   --  N_SCIL_Dispatching_Call case ???\n-\n    function Check_SCIL_Node (N : Node_Id) return Traverse_Result is\n       Ctrl_Tag : Node_Id;\n       Ctrl_Typ : Entity_Id;\n \n    begin\n-      if Nkind (N) = N_SCIL_Dispatching_Call then\n+      if Nkind (N) = N_SCIL_Membership_Test then\n+\n+         --  Check contents of the boolean expression associated with the\n+         --  membership test.\n+\n+         pragma Assert (Nkind (SCIL_Related_Node (N)) = N_Identifier\n+           and then Etype (SCIL_Related_Node (N)) = Standard_Boolean);\n+\n+         --  Check the entity identifier of the associated tagged type (that\n+         --  is, in testing for membership in T'Class, the entity id of the\n+         --  specific type T).\n+\n+         --  Note: When the SCIL node is generated the private and full-view\n+         --    of the tagged types may have been swapped and hence the node\n+         --    referenced by attribute SCIL_Entity may be the private view.\n+         --    Therefore, in order to uniformily locate the full-view we use\n+         --    attribute Underlying_Type.\n+\n+         pragma Assert (Is_Tagged_Type (Underlying_Type (SCIL_Entity (N))));\n+\n+         --  Interface types are unsupported\n+\n+         pragma Assert (not Is_Interface (Underlying_Type (SCIL_Entity (N))));\n+\n+         --  Check the decoration of the expression that denotes the tag value\n+         --  being tested\n+\n+         Ctrl_Tag := SCIL_Tag_Value (N);\n+\n+         case Nkind (Ctrl_Tag) is\n+\n+            --  For class-wide membership tests the SCIL tag value is the tag\n+            --  of the tested object (i.e. Obj.Tag).\n+\n+            when N_Selected_Component =>\n+               pragma Assert (Etype (Ctrl_Tag) = RTE (RE_Tag));\n+               null;\n+\n+            when others =>\n+               pragma Assert (False);\n+               null;\n+\n+         end case;\n+\n+         return Skip;\n+\n+      elsif Nkind (N) = N_SCIL_Dispatching_Call then\n          Ctrl_Tag := SCIL_Controlling_Tag (N);\n \n          --  SCIL_Related_Node of SCIL dispatching call nodes MUST reference\n@@ -452,6 +495,7 @@ package body Sem_SCIL is\n                N_SCIL_Dispatch_Table_Object_Init        |\n                N_SCIL_Dispatch_Table_Tag_Init           |\n                N_SCIL_Dispatching_Call                  |\n+               N_SCIL_Membership_Test                   |\n                N_SCIL_Tag_Init\n             =>\n                pragma Assert (False);"}, {"sha": "dcb20e80572d15b1729423f7b844b922faf62c44", "filename": "gcc/ada/sinfo.adb", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/828781519a85aa04c47b5057555938017cec3ae2/gcc%2Fada%2Fsinfo.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/828781519a85aa04c47b5057555938017cec3ae2/gcc%2Fada%2Fsinfo.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsinfo.adb?ref=828781519a85aa04c47b5057555938017cec3ae2", "patch": "@@ -2556,6 +2556,7 @@ package body Sinfo is\n         or else NT (N).Nkind = N_SCIL_Dispatch_Table_Object_Init\n         or else NT (N).Nkind = N_SCIL_Dispatch_Table_Tag_Init\n         or else NT (N).Nkind = N_SCIL_Dispatching_Call\n+        or else NT (N).Nkind = N_SCIL_Membership_Test\n         or else NT (N).Nkind = N_SCIL_Tag_Init);\n       return Node4 (N);\n    end SCIL_Entity;\n@@ -2567,10 +2568,19 @@ package body Sinfo is\n         or else NT (N).Nkind = N_SCIL_Dispatch_Table_Object_Init\n         or else NT (N).Nkind = N_SCIL_Dispatch_Table_Tag_Init\n         or else NT (N).Nkind = N_SCIL_Dispatching_Call\n+        or else NT (N).Nkind = N_SCIL_Membership_Test\n         or else NT (N).Nkind = N_SCIL_Tag_Init);\n       return Node1 (N);\n    end SCIL_Related_Node;\n \n+   function SCIL_Tag_Value\n+      (N : Node_Id) return Node_Id is\n+   begin\n+      pragma Assert (False\n+        or else NT (N).Nkind = N_SCIL_Membership_Test);\n+      return Node5 (N);\n+   end SCIL_Tag_Value;\n+\n    function SCIL_Target_Prim\n       (N : Node_Id) return Node_Id is\n    begin\n@@ -5416,6 +5426,7 @@ package body Sinfo is\n         or else NT (N).Nkind = N_SCIL_Dispatch_Table_Object_Init\n         or else NT (N).Nkind = N_SCIL_Dispatch_Table_Tag_Init\n         or else NT (N).Nkind = N_SCIL_Dispatching_Call\n+        or else NT (N).Nkind = N_SCIL_Membership_Test\n         or else NT (N).Nkind = N_SCIL_Tag_Init);\n       Set_Node4 (N, Val); -- semantic field, no parent set\n    end Set_SCIL_Entity;\n@@ -5427,10 +5438,19 @@ package body Sinfo is\n         or else NT (N).Nkind = N_SCIL_Dispatch_Table_Object_Init\n         or else NT (N).Nkind = N_SCIL_Dispatch_Table_Tag_Init\n         or else NT (N).Nkind = N_SCIL_Dispatching_Call\n+        or else NT (N).Nkind = N_SCIL_Membership_Test\n         or else NT (N).Nkind = N_SCIL_Tag_Init);\n       Set_Node1 (N, Val); -- semantic field, no parent set\n    end Set_SCIL_Related_Node;\n \n+   procedure Set_SCIL_Tag_Value\n+      (N : Node_Id; Val : Node_Id) is\n+   begin\n+      pragma Assert (False\n+        or else NT (N).Nkind = N_SCIL_Membership_Test);\n+      Set_Node5 (N, Val); -- semantic field, no parent set\n+   end Set_SCIL_Tag_Value;\n+\n    procedure Set_SCIL_Target_Prim\n       (N : Node_Id; Val : Node_Id) is\n    begin"}, {"sha": "886554850199465a4cfbd4b89c30c4f6e749a5b4", "filename": "gcc/ada/sinfo.ads", "status": "modified", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/828781519a85aa04c47b5057555938017cec3ae2/gcc%2Fada%2Fsinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/828781519a85aa04c47b5057555938017cec3ae2/gcc%2Fada%2Fsinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsinfo.ads?ref=828781519a85aa04c47b5057555938017cec3ae2", "patch": "@@ -1608,6 +1608,10 @@ package Sinfo is\n    --    Present in N_SCIL_Dispatching_Call nodes. Used to reference the\n    --    controlling tag of a dispatching call.\n \n+   --  SCIL_Tag_Value (Node5-Sem)\n+   --    Present in N_SCIL_Membership_Test nodes. Used to reference the tag\n+   --    value that is being tested.\n+\n    --  SCIL_Target_Prim (Node2-Sem)\n    --    Present in N_SCIL_Dispatching_Call nodes. Used to reference the tagged\n    --    type primitive associated with the SCIL node.\n@@ -6886,6 +6890,12 @@ package Sinfo is\n       --  SCIL_Entity (Node4-Sem)\n       --  SCIL_Controlling_Tag (Node5-Sem)\n \n+      --  N_SCIL_Membership_Test\n+      --  Sloc references the node of a membership test\n+      --  SCIL_Related_Node (Node1-Sem)\n+      --  SCIL_Tag_Value (Node5-Sem)\n+      --  SCIL_Entity (Node4-Sem)\n+\n       --  N_SCIL_Tag_Init\n       --  Sloc references the node of a tag component initialization\n       --  SCIL_Related_Node (Node1-Sem)\n@@ -7333,6 +7343,7 @@ package Sinfo is\n       N_SCIL_Dispatch_Table_Object_Init,\n       N_SCIL_Dispatch_Table_Tag_Init,\n       N_SCIL_Dispatching_Call,\n+      N_SCIL_Membership_Test,\n       N_SCIL_Tag_Init,\n \n       --  Other nodes (not part of any subtype class)\n@@ -8390,6 +8401,9 @@ package Sinfo is\n    function SCIL_Related_Node\n      (N : Node_Id) return Node_Id;    -- Node1\n \n+   function SCIL_Tag_Value\n+     (N : Node_Id) return Node_Id;    -- Node5\n+\n    function SCIL_Target_Prim\n      (N : Node_Id) return Node_Id;    -- Node2\n \n@@ -9302,6 +9316,9 @@ package Sinfo is\n    procedure Set_SCIL_Related_Node\n      (N : Node_Id; Val : Node_Id);            -- Node1\n \n+   procedure Set_SCIL_Tag_Value\n+     (N : Node_Id; Val : Node_Id);            -- Node5\n+\n    procedure Set_SCIL_Target_Prim\n      (N : Node_Id; Val : Node_Id);            -- Node2\n \n@@ -11056,6 +11073,13 @@ package Sinfo is\n         4 => False,   --  SCIL_Entity (Node4-Sem)\n         5 => False),  --  SCIL_Controlling_Tag (Node5-Sem)\n \n+     N_SCIL_Membership_Test =>\n+       (1 => False,   --  SCIL_Related_Node (Node1-Sem)\n+        2 => False,   --  unused\n+        3 => False,   --  unused\n+        4 => False,   --  SCIL_Entity (Node4-Sem)\n+        5 => False),  --  SCIL_Tag_Value (Node5-Sem)\n+\n      N_SCIL_Tag_Init =>\n        (1 => False,   --  SCIL_Related_Node (Node1-Sem)\n         2 => False,   --  unused\n@@ -11364,6 +11388,7 @@ package Sinfo is\n    pragma Inline (SCIL_Controlling_Tag);\n    pragma Inline (SCIL_Entity);\n    pragma Inline (SCIL_Related_Node);\n+   pragma Inline (SCIL_Tag_Value);\n    pragma Inline (SCIL_Target_Prim);\n    pragma Inline (Scope);\n    pragma Inline (Select_Alternatives);\n@@ -11664,6 +11689,7 @@ package Sinfo is\n    pragma Inline (Set_SCIL_Controlling_Tag);\n    pragma Inline (Set_SCIL_Entity);\n    pragma Inline (Set_SCIL_Related_Node);\n+   pragma Inline (Set_SCIL_Tag_Value);\n    pragma Inline (Set_SCIL_Target_Prim);\n    pragma Inline (Set_Scope);\n    pragma Inline (Set_Select_Alternatives);"}, {"sha": "cc9d5a081f118b4612fced867dcd23e8aeeebc50", "filename": "gcc/ada/sprint.adb", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/828781519a85aa04c47b5057555938017cec3ae2/gcc%2Fada%2Fsprint.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/828781519a85aa04c47b5057555938017cec3ae2/gcc%2Fada%2Fsprint.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsprint.adb?ref=828781519a85aa04c47b5057555938017cec3ae2", "patch": "@@ -2652,6 +2652,9 @@ package body Sprint is\n          when N_SCIL_Dispatching_Call =>\n             Write_Indent_Str (\"[N_SCIL_Dispatching_Node]\");\n \n+         when N_SCIL_Membership_Test =>\n+            Write_Indent_Str (\"[N_SCIL_Membership_Test]\");\n+\n          when N_SCIL_Tag_Init =>\n             Write_Indent_Str (\"[N_SCIL_Dispatch_Table_Tag_Init]\");\n "}]}