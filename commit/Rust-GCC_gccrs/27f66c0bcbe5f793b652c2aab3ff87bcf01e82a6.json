{"sha": "27f66c0bcbe5f793b652c2aab3ff87bcf01e82a6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjdmNjZjMGJjYmU1Zjc5M2I2NTJjMmFhYjNmZjg3YmNmMDFlODJhNg==", "commit": {"author": {"name": "Kaveh R. Ghazi", "email": "ghazi@caip.rutgers.edu", "date": "2001-03-28T04:10:24Z"}, "committer": {"name": "Kaveh Ghazi", "email": "ghazi@gcc.gnu.org", "date": "2001-03-28T04:10:24Z"}, "message": "* memchr.c (memchr): Adjust condition to avoid infinite loop.\n\nFrom-SVN: r40899", "tree": {"sha": "8ea830dc46b128a20488184542dbb60273379f2c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8ea830dc46b128a20488184542dbb60273379f2c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/27f66c0bcbe5f793b652c2aab3ff87bcf01e82a6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/27f66c0bcbe5f793b652c2aab3ff87bcf01e82a6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/27f66c0bcbe5f793b652c2aab3ff87bcf01e82a6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/27f66c0bcbe5f793b652c2aab3ff87bcf01e82a6/comments", "author": null, "committer": null, "parents": [{"sha": "8e9449099d44be617db4eadd9bde42eed41f883b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8e9449099d44be617db4eadd9bde42eed41f883b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8e9449099d44be617db4eadd9bde42eed41f883b"}], "stats": {"total": 6, "additions": 5, "deletions": 1}, "files": [{"sha": "f4ec6e15c2f7286dbd986e65d20ae9c557b07e7e", "filename": "libiberty/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27f66c0bcbe5f793b652c2aab3ff87bcf01e82a6/libiberty%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27f66c0bcbe5f793b652c2aab3ff87bcf01e82a6/libiberty%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2FChangeLog?ref=27f66c0bcbe5f793b652c2aab3ff87bcf01e82a6", "patch": "@@ -1,3 +1,7 @@\n+2001-03-27  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n+\n+\t* memchr.c (memchr): Adjust condition to avoid infinite loop.\n+\n 2001-03-23  Jakub Jelinek  <jakub@redhat.com>\n \n \t* cp-demangle.c (demangle_discriminator): `_0' is discriminator #1,"}, {"sha": "89aa98f1d94662b9e194ce90177b0e8e9db9a24b", "filename": "libiberty/memchr.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27f66c0bcbe5f793b652c2aab3ff87bcf01e82a6/libiberty%2Fmemchr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27f66c0bcbe5f793b652c2aab3ff87bcf01e82a6/libiberty%2Fmemchr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Fmemchr.c?ref=27f66c0bcbe5f793b652c2aab3ff87bcf01e82a6", "patch": "@@ -50,7 +50,7 @@ memchr (src_void, c, length)\n {\n   const unsigned char *src = (const unsigned char *)src_void;\n   \n-  while (--length >= 0)\n+  while (length-- > 0)\n   {\n     if (*src == c)\n      return (PTR)src;"}]}