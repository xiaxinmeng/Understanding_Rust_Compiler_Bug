{"sha": "a2dcfada8a9f5a4d1b53a6b43873e4b807d8f166", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTJkY2ZhZGE4YTlmNWE0ZDFiNTNhNmI0Mzg3M2U0YjgwN2Q4ZjE2Ng==", "commit": {"author": {"name": "Paolo Carlini", "email": "pcarlini@suse.de", "date": "2003-11-13T23:13:22Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2003-11-13T23:13:22Z"}, "message": "re PR libstdc++/13007 (basic_streambuf::pubimbue, imbue wrong)\n\n2003-11-13  Paolo Carlini  <pcarlini@suse.de>\n\t    Petur Runolfsson  <peturr02@ru.is>\n\n\tPR libstdc++/13007\n\t* include/bits/fstream.tcc (imbue): Don't touch the stored\n\tlocale.\n\t* include/std/std_streambuf.h (imbue): According to the\n\tstandard, base class version does nothing.\n\t(pubimbue): Store the locale.\n\t* testsuite/27_io/basic_filebuf/imbue/char/13007.cc: New.\n\t* testsuite/27_io/basic_filebuf/imbue/wchar_t/13007.cc: New.\n\t* testsuite/27_io/basic_filebuf/imbue/char/2.cc: Tweak.\n\t* testsuite/27_io/basic_filebuf/imbue/wchar_t/2.cc: Likewise.\n\t* testsuite/27_io/basic_streambuf/imbue/char/13007-1.cc: New.\n\t* testsuite/27_io/basic_streambuf/imbue/char/13007-2.cc: New.\n\t* testsuite/27_io/basic_streambuf/imbue/wchar_t/13007-1.cc: New.\n\t* testsuite/27_io/basic_streambuf/imbue/wchar_t/13007-2.cc: New.\n\nCo-Authored-By: Petur Runolfsson <peturr02@ru.is>\n\nFrom-SVN: r73563", "tree": {"sha": "5c959e2e8caa71fa3dc02e39e48244bdea4608ee", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5c959e2e8caa71fa3dc02e39e48244bdea4608ee"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a2dcfada8a9f5a4d1b53a6b43873e4b807d8f166", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a2dcfada8a9f5a4d1b53a6b43873e4b807d8f166", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a2dcfada8a9f5a4d1b53a6b43873e4b807d8f166", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a2dcfada8a9f5a4d1b53a6b43873e4b807d8f166/comments", "author": null, "committer": null, "parents": [{"sha": "ab7c6efde002ac6bdc13dd04a7273ccf9af3c62d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ab7c6efde002ac6bdc13dd04a7273ccf9af3c62d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ab7c6efde002ac6bdc13dd04a7273ccf9af3c62d"}], "stats": {"total": 388, "additions": 375, "deletions": 13}, "files": [{"sha": "7d84d46fb864b5d60674722f0d210fc525f23a16", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2dcfada8a9f5a4d1b53a6b43873e4b807d8f166/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2dcfada8a9f5a4d1b53a6b43873e4b807d8f166/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=a2dcfada8a9f5a4d1b53a6b43873e4b807d8f166", "patch": "@@ -1,3 +1,21 @@\n+2003-11-13  Paolo Carlini  <pcarlini@suse.de>\n+\t    Petur Runolfsson  <peturr02@ru.is>\n+\n+\tPR libstdc++/13007\n+\t* include/bits/fstream.tcc (imbue): Don't touch the stored\n+\tlocale.\n+\t* include/std/std_streambuf.h (imbue): According to the\n+\tstandard, base class version does nothing.\n+\t(pubimbue): Store the locale.\n+\t* testsuite/27_io/basic_filebuf/imbue/char/13007.cc: New.\n+\t* testsuite/27_io/basic_filebuf/imbue/wchar_t/13007.cc: New.\n+\t* testsuite/27_io/basic_filebuf/imbue/char/2.cc: Tweak.\n+\t* testsuite/27_io/basic_filebuf/imbue/wchar_t/2.cc: Likewise.\n+\t* testsuite/27_io/basic_streambuf/imbue/char/13007-1.cc: New.\n+\t* testsuite/27_io/basic_streambuf/imbue/char/13007-2.cc: New.\n+\t* testsuite/27_io/basic_streambuf/imbue/wchar_t/13007-1.cc: New.\n+\t* testsuite/27_io/basic_streambuf/imbue/wchar_t/13007-2.cc: New.\n+\n 2003-11-13  Petur Runolfsson  <peturr02@ru.is>\n \n \tPR libstdc++/12594"}, {"sha": "01047111b16e782b2333e128ab33432471999856", "filename": "libstdc++-v3/include/bits/fstream.tcc", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2dcfada8a9f5a4d1b53a6b43873e4b807d8f166/libstdc%2B%2B-v3%2Finclude%2Fbits%2Ffstream.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2dcfada8a9f5a4d1b53a6b43873e4b807d8f166/libstdc%2B%2B-v3%2Finclude%2Fbits%2Ffstream.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Ffstream.tcc?ref=a2dcfada8a9f5a4d1b53a6b43873e4b807d8f166", "patch": "@@ -742,7 +742,7 @@ namespace std\n     basic_filebuf<_CharT, _Traits>::\n     imbue(const locale& __loc)\n     {\n-      if (this->_M_buf_locale != __loc)\n+      if (this->getloc() != __loc)\n \t{\n \t  bool __testfail = false;\n \t  if (this->is_open())\n@@ -758,7 +758,6 @@ namespace std\n \n \t  if (!__testfail)\n \t    {\n-\t      this->_M_buf_locale = __loc;\n \t      if (__builtin_expect(has_facet<__codecvt_type>(__loc), true))\n \t\t_M_codecvt = &use_facet<__codecvt_type>(__loc);\n \t      else"}, {"sha": "23b982193def105da805cb6955f22703b23d8da0", "filename": "libstdc++-v3/include/std/std_streambuf.h", "status": "modified", "additions": 6, "deletions": 7, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2dcfada8a9f5a4d1b53a6b43873e4b807d8f166/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_streambuf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2dcfada8a9f5a4d1b53a6b43873e4b807d8f166/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_streambuf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_streambuf.h?ref=a2dcfada8a9f5a4d1b53a6b43873e4b807d8f166", "patch": "@@ -200,6 +200,7 @@ namespace std\n       {\n \tlocale __tmp(this->getloc());\n \tthis->imbue(__loc);\n+\t_M_buf_locale = __loc;\n \treturn __tmp;\n       }\n \n@@ -538,15 +539,13 @@ namespace std\n        *  are changed by this call.  The standard adds, \"Between invocations\n        *  of this function a class derived from streambuf can safely cache\n        *  results of calls to locale functions and to members of facets\n-       *  so obtained.\"  This function simply stores the new locale for use\n-       *  by derived classes.\n+       *  so obtained.\"\n+       *\n+       *  @note  Base class version does nothing.\n       */\n       virtual void \n-      imbue(const locale& __loc) \n-      { \n-\tif (_M_buf_locale != __loc)\n-\t  _M_buf_locale = __loc;\n-      }\n+      imbue(const locale&) \n+      { }\n \n       // [27.5.2.4.2] buffer management and positioning\n       /**"}, {"sha": "6eb5d9ae799c6fedce76b687eba1db80ba88f71d", "filename": "libstdc++-v3/testsuite/27_io/basic_filebuf/imbue/char/13007.cc", "status": "added", "additions": 61, "deletions": 0, "changes": 61, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2dcfada8a9f5a4d1b53a6b43873e4b807d8f166/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_filebuf%2Fimbue%2Fchar%2F13007.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2dcfada8a9f5a4d1b53a6b43873e4b807d8f166/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_filebuf%2Fimbue%2Fchar%2F13007.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_filebuf%2Fimbue%2Fchar%2F13007.cc?ref=a2dcfada8a9f5a4d1b53a6b43873e4b807d8f166", "patch": "@@ -0,0 +1,61 @@\n+// Copyright (C) 2003 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// 27.8.1.4 Overridden virtual functions\n+\n+#include <fstream>\n+#include <locale>\n+#include <testsuite_hooks.h>\n+\n+class Buf : public std::filebuf\n+{\n+public:\n+  std::locale before;\n+  std::locale after;\n+\n+protected:\n+  void imbue(const std::locale& loc)\n+  {\n+    before = getloc();\n+\n+    std::filebuf::imbue(loc);\n+\n+    after = getloc();\n+  }\n+};\n+\n+// libstdc++/13007\n+void test01()\n+{\n+  bool test __attribute__((unused)) = true;\n+\n+  Buf buf;\n+  std::locale loc(__gnu_test::try_named_locale(\"fr_FR\"));\n+\n+  buf.pubimbue(loc);\n+\n+  VERIFY( buf.getloc() == loc );\n+  VERIFY( buf.before == std::locale::classic() );\n+  VERIFY( buf.after == std::locale::classic() );\n+}\n+\n+int main()\n+{\n+  test01();\n+  return 0;\n+}"}, {"sha": "422ec85c0b614ccffe2d89853c9920a05d09e8e5", "filename": "libstdc++-v3/testsuite/27_io/basic_filebuf/imbue/char/2.cc", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2dcfada8a9f5a4d1b53a6b43873e4b807d8f166/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_filebuf%2Fimbue%2Fchar%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2dcfada8a9f5a4d1b53a6b43873e4b807d8f166/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_filebuf%2Fimbue%2Fchar%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_filebuf%2Fimbue%2Fchar%2F2.cc?ref=a2dcfada8a9f5a4d1b53a6b43873e4b807d8f166", "patch": "@@ -41,10 +41,12 @@ void test02()\n   pos_type p = ob.pubseekoff(2, ios_base::beg, ios_base::in);\n   VERIFY( p != bad);\n \n-  // 1 \"if file is not positioned at its beginning\" fails...\n+  // \"if file is not positioned at its beginning\" imbue fails\n+  // but, according to 27.5.2.2.1, p1, still loc == getloc()\n+  // after pubimbue(loc).\n   locale loc_de = __gnu_test::try_named_locale(\"de_DE\");\n   locale ret = ob.pubimbue(loc_de);\n-  VERIFY( ob.getloc() == loc );\n+  VERIFY( ob.getloc() == loc_de );\n }\n \n int main() "}, {"sha": "db3e5360a06bfc12c36d7520567048ae41afae14", "filename": "libstdc++-v3/testsuite/27_io/basic_filebuf/imbue/wchar_t/13007.cc", "status": "added", "additions": 61, "deletions": 0, "changes": 61, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2dcfada8a9f5a4d1b53a6b43873e4b807d8f166/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_filebuf%2Fimbue%2Fwchar_t%2F13007.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2dcfada8a9f5a4d1b53a6b43873e4b807d8f166/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_filebuf%2Fimbue%2Fwchar_t%2F13007.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_filebuf%2Fimbue%2Fwchar_t%2F13007.cc?ref=a2dcfada8a9f5a4d1b53a6b43873e4b807d8f166", "patch": "@@ -0,0 +1,61 @@\n+// Copyright (C) 2003 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// 27.8.1.4 Overridden virtual functions\n+\n+#include <fstream>\n+#include <locale>\n+#include <testsuite_hooks.h>\n+\n+class Buf : public std::wfilebuf\n+{\n+public:\n+  std::locale before;\n+  std::locale after;\n+\n+protected:\n+  void imbue(const std::locale& loc)\n+  {\n+    before = getloc();\n+\n+    std::wfilebuf::imbue(loc);\n+\n+    after = getloc();\n+  }\n+};\n+\n+// libstdc++/13007\n+void test01()\n+{\n+  bool test __attribute__((unused)) = true;\n+\n+  Buf buf;\n+  std::locale loc(__gnu_test::try_named_locale(\"fr_FR\"));\n+\n+  buf.pubimbue(loc);\n+\n+  VERIFY( buf.getloc() == loc );\n+  VERIFY( buf.before == std::locale::classic() );\n+  VERIFY( buf.after == std::locale::classic() );\n+}\n+\n+int main()\n+{\n+  test01();\n+  return 0;\n+}"}, {"sha": "0879de899a820fbe9bbabf24574b21e6ea012580", "filename": "libstdc++-v3/testsuite/27_io/basic_filebuf/imbue/wchar_t/2.cc", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2dcfada8a9f5a4d1b53a6b43873e4b807d8f166/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_filebuf%2Fimbue%2Fwchar_t%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2dcfada8a9f5a4d1b53a6b43873e4b807d8f166/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_filebuf%2Fimbue%2Fwchar_t%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_filebuf%2Fimbue%2Fwchar_t%2F2.cc?ref=a2dcfada8a9f5a4d1b53a6b43873e4b807d8f166", "patch": "@@ -41,10 +41,12 @@ void test02()\n   pos_type p = ob.pubseekoff(2, ios_base::beg, ios_base::in);\n   VERIFY( p != bad);\n \n-  // 1 \"if file is not positioned at its beginning\" fails...\n+  // \"if file is not positioned at its beginning\" imbue fails\n+  // but, according to 27.5.2.2.1, p1, still loc == getloc()\n+  // after pubimbue(loc).\n   locale loc_de = __gnu_test::try_named_locale(\"de_DE\");\n   locale ret = ob.pubimbue(loc_de);\n-  VERIFY( ob.getloc() == loc );\n+  VERIFY( ob.getloc() == loc_de );\n }\n \n int main() "}, {"sha": "4f5c0466f1a9535f91fa7e1641ad120723d6b16b", "filename": "libstdc++-v3/testsuite/27_io/basic_streambuf/imbue/char/13007-1.cc", "status": "added", "additions": 49, "deletions": 0, "changes": 49, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2dcfada8a9f5a4d1b53a6b43873e4b807d8f166/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_streambuf%2Fimbue%2Fchar%2F13007-1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2dcfada8a9f5a4d1b53a6b43873e4b807d8f166/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_streambuf%2Fimbue%2Fchar%2F13007-1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_streambuf%2Fimbue%2Fchar%2F13007-1.cc?ref=a2dcfada8a9f5a4d1b53a6b43873e4b807d8f166", "patch": "@@ -0,0 +1,49 @@\n+// Copyright (C) 2003 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// 27.5.2.4.1 Locales\n+\n+#include <streambuf>\n+#include <locale>\n+#include <testsuite_hooks.h>\n+\n+class Buf1 : public std::streambuf\n+{\n+protected:\n+  void imbue(const std::locale&)\n+  { }\n+};\n+\n+// libstdc++/13007\n+void test01()\n+{\n+  bool test __attribute__((unused)) = true;\n+  \n+  Buf1 buf;\n+  std::locale loc(__gnu_test::try_named_locale(\"is_IS.UTF-8\"));\n+\n+  buf.pubimbue(loc);\n+\n+  VERIFY( buf.getloc() == loc );\n+}\n+\n+int main()\n+{\n+  test01();\n+  return 0;\n+}"}, {"sha": "812d822cccabe3b8d06d2ee3526d7708fd2fb220", "filename": "libstdc++-v3/testsuite/27_io/basic_streambuf/imbue/char/13007-2.cc", "status": "added", "additions": 61, "deletions": 0, "changes": 61, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2dcfada8a9f5a4d1b53a6b43873e4b807d8f166/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_streambuf%2Fimbue%2Fchar%2F13007-2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2dcfada8a9f5a4d1b53a6b43873e4b807d8f166/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_streambuf%2Fimbue%2Fchar%2F13007-2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_streambuf%2Fimbue%2Fchar%2F13007-2.cc?ref=a2dcfada8a9f5a4d1b53a6b43873e4b807d8f166", "patch": "@@ -0,0 +1,61 @@\n+// Copyright (C) 2003 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// 27.5.2.4.1 Locales\n+\n+#include <streambuf>\n+#include <locale>\n+#include <testsuite_hooks.h>\n+\n+class Buf2 : public std::streambuf\n+{\n+public:\n+  std::locale before;\n+  std::locale after;\n+\n+protected:\n+  void imbue(const std::locale& loc)\n+  {\n+    before = getloc();\n+\n+    std::streambuf::imbue(loc);\n+\n+    after = getloc();\n+  }\n+};\n+\n+// libstdc++/13007\n+void test02()\n+{\n+  bool test __attribute__((unused)) = true;\n+\n+  Buf2 buf;\n+  std::locale loc(__gnu_test::try_named_locale(\"en_US\"));\n+\n+  buf.pubimbue(loc);\n+\n+  VERIFY( buf.getloc() == loc );\n+  VERIFY( buf.before == std::locale::classic() );\n+  VERIFY( buf.after == std::locale::classic() );\n+}\n+\n+int main()\n+{\n+  test02();\n+  return 0;\n+}"}, {"sha": "9410a47f063be40631eb2d9053d924f5e3f1aa1b", "filename": "libstdc++-v3/testsuite/27_io/basic_streambuf/imbue/wchar_t/13007-1.cc", "status": "added", "additions": 49, "deletions": 0, "changes": 49, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2dcfada8a9f5a4d1b53a6b43873e4b807d8f166/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_streambuf%2Fimbue%2Fwchar_t%2F13007-1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2dcfada8a9f5a4d1b53a6b43873e4b807d8f166/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_streambuf%2Fimbue%2Fwchar_t%2F13007-1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_streambuf%2Fimbue%2Fwchar_t%2F13007-1.cc?ref=a2dcfada8a9f5a4d1b53a6b43873e4b807d8f166", "patch": "@@ -0,0 +1,49 @@\n+// Copyright (C) 2003 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// 27.5.2.4.1 Locales\n+\n+#include <streambuf>\n+#include <locale>\n+#include <testsuite_hooks.h>\n+\n+class Buf1 : public std::wstreambuf\n+{\n+protected:\n+  void imbue(const std::locale&)\n+  { }\n+};\n+\n+// libstdc++/13007\n+void test01()\n+{\n+  bool test __attribute__((unused)) = true;\n+  \n+  Buf1 buf;\n+  std::locale loc(__gnu_test::try_named_locale(\"is_IS.UTF-8\"));\n+\n+  buf.pubimbue(loc);\n+\n+  VERIFY( buf.getloc() == loc );\n+}\n+\n+int main()\n+{\n+  test01();\n+  return 0;\n+}"}, {"sha": "0fa76d5e5e452e3ae0d44807becb61de5fda273f", "filename": "libstdc++-v3/testsuite/27_io/basic_streambuf/imbue/wchar_t/13007-2.cc", "status": "added", "additions": 61, "deletions": 0, "changes": 61, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2dcfada8a9f5a4d1b53a6b43873e4b807d8f166/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_streambuf%2Fimbue%2Fwchar_t%2F13007-2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2dcfada8a9f5a4d1b53a6b43873e4b807d8f166/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_streambuf%2Fimbue%2Fwchar_t%2F13007-2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_streambuf%2Fimbue%2Fwchar_t%2F13007-2.cc?ref=a2dcfada8a9f5a4d1b53a6b43873e4b807d8f166", "patch": "@@ -0,0 +1,61 @@\n+// Copyright (C) 2003 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// 27.5.2.4.1 Locales\n+\n+#include <streambuf>\n+#include <locale>\n+#include <testsuite_hooks.h>\n+\n+class Buf2 : public std::wstreambuf\n+{\n+public:\n+  std::locale before;\n+  std::locale after;\n+\n+protected:\n+  void imbue(const std::locale& loc)\n+  {\n+    before = getloc();\n+\n+    std::wstreambuf::imbue(loc);\n+\n+    after = getloc();\n+  }\n+};\n+\n+// libstdc++/13007\n+void test02()\n+{\n+  bool test __attribute__((unused)) = true;\n+\n+  Buf2 buf;\n+  std::locale loc(__gnu_test::try_named_locale(\"en_US\"));\n+\n+  buf.pubimbue(loc);\n+\n+  VERIFY( buf.getloc() == loc );\n+  VERIFY( buf.before == std::locale::classic() );\n+  VERIFY( buf.after == std::locale::classic() );\n+}\n+\n+int main()\n+{\n+  test02();\n+  return 0;\n+}"}]}