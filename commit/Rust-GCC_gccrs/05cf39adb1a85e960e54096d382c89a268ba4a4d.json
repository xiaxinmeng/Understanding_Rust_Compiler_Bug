{"sha": "05cf39adb1a85e960e54096d382c89a268ba4a4d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDVjZjM5YWRiMWE4NWU5NjBlNTQwOTZkMzgyYzg5YTI2OGJhNGE0ZA==", "commit": {"author": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2017-05-16T14:55:17Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2017-05-16T14:55:17Z"}, "message": "i386.i386.md (*movsi_internal): Split (?rm,*y) alternative to (?r,*Yn) and (?m,*y) alternatives...\n\n\t* config/i386.i386.md (*movsi_internal): Split (?rm,*y) alternative\n\tto (?r,*Yn) and (?m,*y) alternatives, and (?*y,rm) to (?*Ym,r)\n\tand (?*y,m).  Update insn attributes.\n\nFrom-SVN: r248114", "tree": {"sha": "0018c368195cc94f9c4dcf287d77b726883e1b38", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0018c368195cc94f9c4dcf287d77b726883e1b38"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/05cf39adb1a85e960e54096d382c89a268ba4a4d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/05cf39adb1a85e960e54096d382c89a268ba4a4d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/05cf39adb1a85e960e54096d382c89a268ba4a4d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/05cf39adb1a85e960e54096d382c89a268ba4a4d/comments", "author": null, "committer": null, "parents": [{"sha": "ef6cb4c716b9ceb467282357e5ba0c16fe71c6f6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ef6cb4c716b9ceb467282357e5ba0c16fe71c6f6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ef6cb4c716b9ceb467282357e5ba0c16fe71c6f6"}], "stats": {"total": 45, "additions": 27, "deletions": 18}, "files": [{"sha": "d1260740b0510cb88227f5fdcc7dfe1f370d512d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 15, "deletions": 6, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/05cf39adb1a85e960e54096d382c89a268ba4a4d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/05cf39adb1a85e960e54096d382c89a268ba4a4d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=05cf39adb1a85e960e54096d382c89a268ba4a4d", "patch": "@@ -1,7 +1,13 @@\n+2017-05-16  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* config/i386.i386.md (*movsi_internal): Split (?rm,*y) alternative\n+\tto (?r,*Yn) and (?m,*y) alternatives, and (?*y,rm) to (?*Ym,r)\n+\tand (?*y,m).  Update insn attributes.\n+\n 2017-05-16  Martin Liska  <mliska@suse.cz>\n \n-\t* cgraph.c (cgraph_edge::resolve_speculation): Add default value for flags\n-\targument of print_gimple_stmt, print_gimple_expr,\n+\t* cgraph.c (cgraph_edge::resolve_speculation): Add default value for\n+\tflags argument of print_gimple_stmt, print_gimple_expr,\n \tprint_generic_stmt and print_generic_expr.\n \t* cgraphclones.c (symbol_table::materialize_all_clones): Likewise.\n \t* coretypes.h: Likewise.\n@@ -14,7 +20,8 @@\n \t(backprop::process_use): Likewise.\n \t(backprop::intersect_uses): Likewise.\n \t(note_replacement): Likewise.\n-\t* gimple-ssa-store-merging.c (pass_store_merging::terminate_all_aliasing_chains): Likewise.\n+\t* gimple-ssa-store-merging.c\n+\t(pass_store_merging::terminate_all_aliasing_chains): Likewise.\n \t(imm_store_chain_info::coalesce_immediate_stores): Likewise.\n \t(pass_store_merging::execute): Likewise.\n \t* gimple-ssa-strength-reduction.c (dump_candidate): Likewise.\n@@ -144,7 +151,8 @@\n \t(forward_propagate_into_cond): Likewise.\n \t(pass_forwprop::execute): Likewise.\n \t* tree-ssa-ifcombine.c (ifcombine_ifandif): Likewise.\n-\t* tree-ssa-loop-im.c (invariantness_dom_walker::before_dom_children): Likewise.\n+\t* tree-ssa-loop-im.c (invariantness_dom_walker::before_dom_children):\n+\tLikewise.\n \t(move_computations_worker): Likewise.\n \t(execute_sm): Likewise.\n \t* tree-ssa-loop-ivcanon.c (tree_estimate_loop_size): Likewise.\n@@ -191,7 +199,8 @@\n \t(visit_use): Likewise.\n \t(sccvn_dom_walker::before_dom_children): Likewise.\n \t(run_scc_vn): Likewise.\n-\t* tree-ssa-scopedtables.c (avail_exprs_stack::lookup_avail_expr): Likewise.\n+\t* tree-ssa-scopedtables.c (avail_exprs_stack::lookup_avail_expr):\n+\tLikewise.\n \t(expr_hash_elt::print): Likewise.\n \t(const_and_copies::pop_to_marker): Likewise.\n \t(const_and_copies::record_const_or_copy_raw): Likewise.\n@@ -254,7 +263,7 @@\n \n 2017-05-15  Sylvestre Ledru  <sylvestre@debian.org>\n \n-\tplugin.c (try_init_one_plugin): Fix ressource leaks (CID 726637)\n+\t* plugin.c (try_init_one_plugin): Fix ressource leaks (CID 726637).\n \n 2017-05-15  Uros Bizjak  <ubizjak@gmail.com>\n "}, {"sha": "ff2bb1efc2666375447f0b179d1df04e26e382fe", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/05cf39adb1a85e960e54096d382c89a268ba4a4d/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/05cf39adb1a85e960e54096d382c89a268ba4a4d/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=05cf39adb1a85e960e54096d382c89a268ba4a4d", "patch": "@@ -2328,9 +2328,9 @@\n \n (define_insn \"*movsi_internal\"\n   [(set (match_operand:SI 0 \"nonimmediate_operand\"\n-\t\t\t\"=r,m ,*y,*y,?rm,?*y,*v,*v,*v,m ,?r ,?r,?*Yi,*k,*k ,*rm\")\n+    \"=r,m ,*y,*y,?*y,?m,?r ,?*Ym,*v,*v,*v,m ,?r ,?r,?*Yi,*k,*k ,*rm\")\n \t(match_operand:SI 1 \"general_operand\"\n-\t\t\t\"g ,re,C ,*y,*y ,rm ,C ,*v,m ,*v,*Yj,*v,r   ,*r,*km,*k\"))]\n+    \"g ,re,C ,*y,m  ,*y,*Yn,r   ,C ,*v,m ,*v,*Yj,*v,r   ,*r,*km,*k\"))]\n   \"!(MEM_P (operands[0]) && MEM_P (operands[1]))\"\n {\n   switch (get_attr_type (insn))\n@@ -2395,31 +2395,31 @@\n     }\n }\n   [(set (attr \"isa\")\n-     (if_then_else (eq_attr \"alternative\" \"11\")\n+     (if_then_else (eq_attr \"alternative\" \"13\")\n        (const_string \"sse4\")\n        (const_string \"*\")))\n    (set (attr \"type\")\n      (cond [(eq_attr \"alternative\" \"2\")\n \t      (const_string \"mmx\")\n-\t    (eq_attr \"alternative\" \"3,4,5\")\n+\t    (eq_attr \"alternative\" \"3,4,5,6,7\")\n \t      (const_string \"mmxmov\")\n-\t    (eq_attr \"alternative\" \"6,11\")\n+\t    (eq_attr \"alternative\" \"8,13\")\n \t      (const_string \"sselog1\")\n-\t    (eq_attr \"alternative\" \"7,8,9,10,12\")\n+\t    (eq_attr \"alternative\" \"9,10,11,12,14\")\n \t      (const_string \"ssemov\")\n-\t    (eq_attr \"alternative\" \"13,14,15\")\n+\t    (eq_attr \"alternative\" \"15,16,17\")\n \t      (const_string \"mskmov\")\n \t    (and (match_operand 0 \"register_operand\")\n \t\t (match_operand 1 \"pic_32bit_operand\"))\n \t      (const_string \"lea\")\n \t   ]\n \t   (const_string \"imov\")))\n    (set (attr \"length_immediate\")\n-     (if_then_else (eq_attr \"alternative\" \"11\")\n+     (if_then_else (eq_attr \"alternative\" \"13\")\n        (const_string \"1\")\n        (const_string \"*\")))\n    (set (attr \"prefix_extra\")\n-     (if_then_else (eq_attr \"alternative\" \"11\")\n+     (if_then_else (eq_attr \"alternative\" \"13\")\n        (const_string \"1\")\n        (const_string \"*\")))\n    (set (attr \"prefix\")\n@@ -2433,7 +2433,7 @@\n    (set (attr \"mode\")\n      (cond [(eq_attr \"alternative\" \"2,3\")\n \t      (const_string \"DI\")\n-\t    (eq_attr \"alternative\" \"6,7\")\n+\t    (eq_attr \"alternative\" \"8,9\")\n \t      (cond [(ior (match_operand 0 \"ext_sse_reg_operand\")\n \t\t\t  (match_operand 1 \"ext_sse_reg_operand\"))\n \t\t       (const_string \"XI\")\n@@ -2447,10 +2447,10 @@\n \t\t    ]\n \t\t    (const_string \"TI\"))\n \n-\t    (and (eq_attr \"alternative\" \"8,9\")\n+\t    (and (eq_attr \"alternative\" \"10,11\")\n \t         (not (match_test \"TARGET_SSE2\")))\n \t      (const_string \"SF\")\n-\t    (eq_attr \"alternative\" \"11\")\n+\t    (eq_attr \"alternative\" \"13\")\n \t      (const_string \"TI\")\n \t   ]\n \t   (const_string \"SI\")))])"}]}