{"sha": "180eeeaeb200a07f7f24e1f203cd026880ff861c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTgwZWVlYWViMjAwYTA3ZjdmMjRlMWYyMDNjZDAyNjg4MGZmODYxYw==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2020-03-06T11:27:34Z"}, "committer": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2020-03-06T11:30:56Z"}, "message": "libstdc++: Fix failing filesystem::path tests (PR 93244)\n\nThe checks for PR 93244 don't actually pass on Windows (which is the\ntarget where the bug is present) because of a different bug, PR 94063.\n\nThis adjusts the tests to not be affected by 94063 so that they verify\nthat 93244 was fixed.\n\n\tPR libstdc++/93244\n\t* testsuite/27_io/filesystem/path/generic/generic_string.cc: Adjust\n\ttest to not fail due to PR 94063.\n\t* testsuite/27_io/filesystem/path/generic/utf.cc: Likewise.\n\t* testsuite/27_io/filesystem/path/generic/wchar_t.cc: Likewise.", "tree": {"sha": "19f250aca14b6a7d3968560c5efcc33d3aaa99b7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/19f250aca14b6a7d3968560c5efcc33d3aaa99b7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/180eeeaeb200a07f7f24e1f203cd026880ff861c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/180eeeaeb200a07f7f24e1f203cd026880ff861c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/180eeeaeb200a07f7f24e1f203cd026880ff861c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/180eeeaeb200a07f7f24e1f203cd026880ff861c/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "28119fba7f1a3c96dde58905277eac4de148f210", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/28119fba7f1a3c96dde58905277eac4de148f210", "html_url": "https://github.com/Rust-GCC/gccrs/commit/28119fba7f1a3c96dde58905277eac4de148f210"}], "stats": {"total": 41, "additions": 26, "deletions": 15}, "files": [{"sha": "b9ea649eed6c3bd814e8ebab7321df6f4581868b", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/180eeeaeb200a07f7f24e1f203cd026880ff861c/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/180eeeaeb200a07f7f24e1f203cd026880ff861c/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=180eeeaeb200a07f7f24e1f203cd026880ff861c", "patch": "@@ -1,3 +1,11 @@\n+2020-03-06  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\tPR libstdc++/93244\n+\t* testsuite/27_io/filesystem/path/generic/generic_string.cc: Adjust\n+\ttest to not fail due to PR 94063.\n+\t* testsuite/27_io/filesystem/path/generic/utf.cc: Likewise.\n+\t* testsuite/27_io/filesystem/path/generic/wchar_t.cc: Likewise.\n+\n 2020-03-06  Andreas Krebbel  <krebbel@linux.ibm.com>\n \n \t* src/c++11/system_error.cc: Omit the ENOTSUP case statement if it"}, {"sha": "5caf079ed9b41b0f35cd9b6bea0b380f0120dad5", "filename": "libstdc++-v3/testsuite/27_io/filesystem/path/generic/generic_string.cc", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/180eeeaeb200a07f7f24e1f203cd026880ff861c/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Ffilesystem%2Fpath%2Fgeneric%2Fgeneric_string.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/180eeeaeb200a07f7f24e1f203cd026880ff861c/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Ffilesystem%2Fpath%2Fgeneric%2Fgeneric_string.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Ffilesystem%2Fpath%2Fgeneric%2Fgeneric_string.cc?ref=180eeeaeb200a07f7f24e1f203cd026880ff861c", "patch": "@@ -49,11 +49,12 @@ test01()\n void\n test02()\n {\n-  // PR libstdc++/93244\n-  path p(\"C:\");\n-  p += path::preferred_separator;\n-  p += \"foo/bar\";\n-  VERIFY( p.generic_string() == \"C:/foo/bar\" );\n+  if constexpr (path::preferred_separator == L'\\\\')\n+  {\n+    // PR libstdc++/93244\n+    VERIFY( path(\"C:\\\\foo\\\\bar\").generic_string() == \"C:/foo/bar\" );\n+    VERIFY( path(\"C://foo//bar\").generic_string() == \"C:/foo/bar\" );\n+  }\n }\n \n int"}, {"sha": "52afdb4497b90da6a732d7df7c4453d7d3a8ab9f", "filename": "libstdc++-v3/testsuite/27_io/filesystem/path/generic/utf.cc", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/180eeeaeb200a07f7f24e1f203cd026880ff861c/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Ffilesystem%2Fpath%2Fgeneric%2Futf.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/180eeeaeb200a07f7f24e1f203cd026880ff861c/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Ffilesystem%2Fpath%2Fgeneric%2Futf.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Ffilesystem%2Fpath%2Fgeneric%2Futf.cc?ref=180eeeaeb200a07f7f24e1f203cd026880ff861c", "patch": "@@ -49,11 +49,12 @@ test01()\n void\n test02()\n {\n-  // PR libstdc++/93244\n-  path p(\"C:\");\n-  p += path::preferred_separator;\n-  p += \"foo/bar\";\n-  VERIFY( p.generic_u32string() == U\"C:/foo/bar\" );\n+  if constexpr (path::preferred_separator == L'\\\\')\n+  {\n+    // PR libstdc++/93244\n+    VERIFY( path(\"C:\\\\foo\\\\bar\").generic_u32string() == U\"C:/foo/bar\" );\n+    VERIFY( path(\"C://foo//bar\").generic_u32string() == U\"C:/foo/bar\" );\n+  }\n }\n \n int"}, {"sha": "7bb2f643043d7e1c4346634b74856512644b509d", "filename": "libstdc++-v3/testsuite/27_io/filesystem/path/generic/wchar_t.cc", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/180eeeaeb200a07f7f24e1f203cd026880ff861c/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Ffilesystem%2Fpath%2Fgeneric%2Fwchar_t.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/180eeeaeb200a07f7f24e1f203cd026880ff861c/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Ffilesystem%2Fpath%2Fgeneric%2Fwchar_t.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Ffilesystem%2Fpath%2Fgeneric%2Fwchar_t.cc?ref=180eeeaeb200a07f7f24e1f203cd026880ff861c", "patch": "@@ -49,11 +49,12 @@ test01()\n void\n test02()\n {\n-  // PR libstdc++/93244\n-  path p(\"C:\");\n-  p += path::preferred_separator;\n-  p += \"foo/bar\";\n-  VERIFY( p.generic_wstring() == L\"C:/foo/bar\" );\n+  if constexpr (path::preferred_separator == L'\\\\')\n+  {\n+    // PR libstdc++/93244\n+    VERIFY( path(\"C:\\\\foo\\\\bar\").generic_wstring() == L\"C:/foo/bar\" );\n+    VERIFY( path(\"C://foo//bar\").generic_wstring() == L\"C:/foo/bar\" );\n+  }\n }\n \n int"}]}