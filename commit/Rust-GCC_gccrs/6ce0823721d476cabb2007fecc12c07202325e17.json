{"sha": "6ce0823721d476cabb2007fecc12c07202325e17", "node_id": "C_kwDOANBUbNoAKDZjZTA4MjM3MjFkNDc2Y2FiYjIwMDdmZWNjMTJjMDcyMDIzMjVlMTc", "commit": {"author": {"name": "Aldy Hernandez", "email": "aldyh@redhat.com", "date": "2022-10-11T17:20:47Z"}, "committer": {"name": "Aldy Hernandez", "email": "aldyh@redhat.com", "date": "2022-10-12T06:48:59Z"}, "message": "Disable tree to bool conversion in frange::update_nan.\n\nWe have a set_nan(type) method which can be confused with\nupdate_nan(bool) because of the silent conversion of pointers to bool.\nCurrently, if you call update_nan(tree), you'll set the possibility of\nNAN with a sign of true if tree is non-null.  This is prone to error\nand this patch disallows this behavior.\n\ngcc/ChangeLog:\n\n\t* value-range.cc (frange::set_nonnegative): Pass bool to\n\tupdate_nan.\n\t* value-range.h: Disallow conversion to bool in update_nan().", "tree": {"sha": "741adf98138662f0189da74818e4c9c6a0cfaf3a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/741adf98138662f0189da74818e4c9c6a0cfaf3a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6ce0823721d476cabb2007fecc12c07202325e17", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6ce0823721d476cabb2007fecc12c07202325e17", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6ce0823721d476cabb2007fecc12c07202325e17", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6ce0823721d476cabb2007fecc12c07202325e17/comments", "author": {"login": "aldyh", "id": 12937877, "node_id": "MDQ6VXNlcjEyOTM3ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/12937877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aldyh", "html_url": "https://github.com/aldyh", "followers_url": "https://api.github.com/users/aldyh/followers", "following_url": "https://api.github.com/users/aldyh/following{/other_user}", "gists_url": "https://api.github.com/users/aldyh/gists{/gist_id}", "starred_url": "https://api.github.com/users/aldyh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aldyh/subscriptions", "organizations_url": "https://api.github.com/users/aldyh/orgs", "repos_url": "https://api.github.com/users/aldyh/repos", "events_url": "https://api.github.com/users/aldyh/events{/privacy}", "received_events_url": "https://api.github.com/users/aldyh/received_events", "type": "User", "site_admin": false}, "committer": {"login": "aldyh", "id": 12937877, "node_id": "MDQ6VXNlcjEyOTM3ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/12937877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aldyh", "html_url": "https://github.com/aldyh", "followers_url": "https://api.github.com/users/aldyh/followers", "following_url": "https://api.github.com/users/aldyh/following{/other_user}", "gists_url": "https://api.github.com/users/aldyh/gists{/gist_id}", "starred_url": "https://api.github.com/users/aldyh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aldyh/subscriptions", "organizations_url": "https://api.github.com/users/aldyh/orgs", "repos_url": "https://api.github.com/users/aldyh/repos", "events_url": "https://api.github.com/users/aldyh/events{/privacy}", "received_events_url": "https://api.github.com/users/aldyh/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a901343aa314eb08b362fc6878456d12f96e49b7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a901343aa314eb08b362fc6878456d12f96e49b7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a901343aa314eb08b362fc6878456d12f96e49b7"}], "stats": {"total": 3, "additions": 2, "deletions": 1}, "files": [{"sha": "26a2b782e2cc70aed8f83f4d8805a082cf9cf0c1", "filename": "gcc/value-range.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6ce0823721d476cabb2007fecc12c07202325e17/gcc%2Fvalue-range.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6ce0823721d476cabb2007fecc12c07202325e17/gcc%2Fvalue-range.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvalue-range.cc?ref=6ce0823721d476cabb2007fecc12c07202325e17", "patch": "@@ -779,7 +779,7 @@ frange::set_nonnegative (tree type)\n \n   // Set +NAN as the only possibility.\n   if (HONOR_NANS (type))\n-    update_nan (/*sign=*/0);\n+    update_nan (/*sign=*/false);\n }\n \n // Here we copy between any two irange's.  The ranges can be legacy or"}, {"sha": "cb5e9d0522ccba14a70d175fd76710b698b52c32", "filename": "gcc/value-range.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6ce0823721d476cabb2007fecc12c07202325e17/gcc%2Fvalue-range.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6ce0823721d476cabb2007fecc12c07202325e17/gcc%2Fvalue-range.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvalue-range.h?ref=6ce0823721d476cabb2007fecc12c07202325e17", "patch": "@@ -317,6 +317,7 @@ class frange : public vrange\n   const REAL_VALUE_TYPE &upper_bound () const;\n   void update_nan ();\n   void update_nan (bool sign);\n+  void update_nan (tree) = delete; // Disallow silent conversion to bool.\n   void clear_nan ();\n \n   // fpclassify like API"}]}