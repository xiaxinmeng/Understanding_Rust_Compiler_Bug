{"sha": "55c5c0ad3c32a5c9e5be4a606b9c9925f5416046", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTVjNWMwYWQzYzMyYTVjOWU1YmU0YTYwNmI5Yzk5MjVmNTQxNjA0Ng==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2017-06-09T20:13:38Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2017-06-09T20:13:38Z"}, "message": "PR c++/80384 - ICE with dependent noexcept-specifier\n\n\t* pt.c (dependent_type_p_r) [FUNCTION_TYPE]: Check for dependent\n\tnoexcept-specifier.\n\nFrom-SVN: r249078", "tree": {"sha": "dc56334445825e69cbe60b54cc6959e8883f9911", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dc56334445825e69cbe60b54cc6959e8883f9911"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/55c5c0ad3c32a5c9e5be4a606b9c9925f5416046", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/55c5c0ad3c32a5c9e5be4a606b9c9925f5416046", "html_url": "https://github.com/Rust-GCC/gccrs/commit/55c5c0ad3c32a5c9e5be4a606b9c9925f5416046", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/55c5c0ad3c32a5c9e5be4a606b9c9925f5416046/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "948d0d9137b8df8320cae815fd8b8aba86bcc160", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/948d0d9137b8df8320cae815fd8b8aba86bcc160", "html_url": "https://github.com/Rust-GCC/gccrs/commit/948d0d9137b8df8320cae815fd8b8aba86bcc160"}], "stats": {"total": 23, "additions": 23, "deletions": 0}, "files": [{"sha": "944b69596fe319c1b1e17d26198a0767b0a79deb", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/55c5c0ad3c32a5c9e5be4a606b9c9925f5416046/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/55c5c0ad3c32a5c9e5be4a606b9c9925f5416046/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=55c5c0ad3c32a5c9e5be4a606b9c9925f5416046", "patch": "@@ -1,5 +1,9 @@\n 2017-06-09  Jason Merrill  <jason@redhat.com>\n \n+\tPR c++/80384 - ICE with dependent noexcept-specifier\n+\t* pt.c (dependent_type_p_r) [FUNCTION_TYPE]: Check for dependent\n+\tnoexcept-specifier.\n+\n \t* constexpr.c (potential_constant_expression_1): Allow 'this' capture.\n \n 2017-06-09  Jan Hubicka  <hubicka@ucw.cz>"}, {"sha": "99f5b123a84ef0e6a266d55ce7b482d66e999b39", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/55c5c0ad3c32a5c9e5be4a606b9c9925f5416046/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/55c5c0ad3c32a5c9e5be4a606b9c9925f5416046/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=55c5c0ad3c32a5c9e5be4a606b9c9925f5416046", "patch": "@@ -23438,6 +23438,14 @@ dependent_type_p_r (tree type)\n \t   arg_type = TREE_CHAIN (arg_type))\n \tif (dependent_type_p (TREE_VALUE (arg_type)))\n \t  return true;\n+      if (cxx_dialect >= cxx1z)\n+\t{\n+\t  /* A value-dependent noexcept-specifier makes the type dependent.  */\n+\t  tree spec = TYPE_RAISES_EXCEPTIONS (type);\n+\t  if (spec && TREE_PURPOSE (spec)\n+\t      && value_dependent_expression_p (TREE_PURPOSE (spec)))\n+\t    return true;\n+\t}\n       return false;\n     }\n   /* -- an array type constructed from any dependent type or whose"}, {"sha": "cc5a3edf1e4b64bb62c5ba65457a41d777e323b9", "filename": "gcc/testsuite/g++.dg/cpp1z/noexcept-type15.C", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/55c5c0ad3c32a5c9e5be4a606b9c9925f5416046/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fnoexcept-type15.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/55c5c0ad3c32a5c9e5be4a606b9c9925f5416046/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fnoexcept-type15.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fnoexcept-type15.C?ref=55c5c0ad3c32a5c9e5be4a606b9c9925f5416046", "patch": "@@ -0,0 +1,11 @@\n+// PR c++/80384\n+// { dg-options -std=c++17 }\n+\n+template<class> struct foo;\n+template<bool B>\n+struct foo<int() noexcept(B)> {\n+    static const bool value = B; \n+};\n+\n+static_assert(!foo<int()>::value);\n+static_assert(foo<int() noexcept>::value);"}]}