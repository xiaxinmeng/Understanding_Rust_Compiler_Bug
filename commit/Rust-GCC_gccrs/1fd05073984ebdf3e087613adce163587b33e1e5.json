{"sha": "1fd05073984ebdf3e087613adce163587b33e1e5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWZkMDUwNzM5ODRlYmRmM2UwODc2MTNhZGNlMTYzNTg3YjMzZTFlNQ==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@libertysurf.fr", "date": "2004-01-22T09:33:24Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2004-01-22T09:33:24Z"}, "message": "re PR target/13559 (deviation from the psABI for small structures)\n\n\tPR target/13559\n\t* config/sparc/sparc.c (function_arg_record_value_3): Revert\n\tto 'word_mode' once the first slot has been filled.\n\nFrom-SVN: r76342", "tree": {"sha": "bba1cfa3da2367fff9c8dd448d57ba93e3262348", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bba1cfa3da2367fff9c8dd448d57ba93e3262348"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1fd05073984ebdf3e087613adce163587b33e1e5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1fd05073984ebdf3e087613adce163587b33e1e5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1fd05073984ebdf3e087613adce163587b33e1e5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1fd05073984ebdf3e087613adce163587b33e1e5/comments", "author": {"login": "ebotcazou", "id": 48091907, "node_id": "MDQ6VXNlcjQ4MDkxOTA3", "avatar_url": "https://avatars.githubusercontent.com/u/48091907?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ebotcazou", "html_url": "https://github.com/ebotcazou", "followers_url": "https://api.github.com/users/ebotcazou/followers", "following_url": "https://api.github.com/users/ebotcazou/following{/other_user}", "gists_url": "https://api.github.com/users/ebotcazou/gists{/gist_id}", "starred_url": "https://api.github.com/users/ebotcazou/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ebotcazou/subscriptions", "organizations_url": "https://api.github.com/users/ebotcazou/orgs", "repos_url": "https://api.github.com/users/ebotcazou/repos", "events_url": "https://api.github.com/users/ebotcazou/events{/privacy}", "received_events_url": "https://api.github.com/users/ebotcazou/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b2f24c85c8b21cd649d11da2eb8c65079d3f21b7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b2f24c85c8b21cd649d11da2eb8c65079d3f21b7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b2f24c85c8b21cd649d11da2eb8c65079d3f21b7"}], "stats": {"total": 10, "additions": 9, "deletions": 1}, "files": [{"sha": "5a199711ffa437501d17151c44d31565fd9150b4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1fd05073984ebdf3e087613adce163587b33e1e5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1fd05073984ebdf3e087613adce163587b33e1e5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1fd05073984ebdf3e087613adce163587b33e1e5", "patch": "@@ -1,3 +1,9 @@\n+2004-01-22  Eric Botcazou  <ebotcazou@libertysurf.fr>\n+\n+\tPR target/13559\n+\t* config/sparc/sparc.c (function_arg_record_value_3): Revert\n+\tto 'word_mode' once the first slot has been filled.\n+\n 2004-01-22  Olivier Hainque  <hainque@act-europe.fr>\n \n \t* config/sparc/sparc.c (function_arg_record_value_1): Fix"}, {"sha": "8805bbeb4dc211540d61d451527b1bfb714b087e", "filename": "gcc/config/sparc/sparc.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1fd05073984ebdf3e087613adce163587b33e1e5/gcc%2Fconfig%2Fsparc%2Fsparc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1fd05073984ebdf3e087613adce163587b33e1e5/gcc%2Fconfig%2Fsparc%2Fsparc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsparc.c?ref=1fd05073984ebdf3e087613adce163587b33e1e5", "patch": "@@ -4972,7 +4972,7 @@ struct function_arg_record_value_parms\n   int named;\t\t/* whether the argument is named.  */\n   int regbase;\t\t/* regno of the base register.  */\n   int stack;\t\t/* 1 if part of the argument is on the stack.  */\n-  int intoffset;\t/* offset of the pending integer field.  */\n+  int intoffset;\t/* offset of the first pending integer field.  */\n   unsigned int nregs;\t/* number of words passed in registers.  */\n };\n \n@@ -5124,6 +5124,7 @@ function_arg_record_value_3 (HOST_WIDE_INT bitpos,\n \n       this_slotno += 1;\n       intoffset = (intoffset | (UNITS_PER_WORD-1)) + 1;\n+      mode = word_mode;\n       parms->nregs += 1;\n       intslots -= 1;\n     }\n@@ -5251,6 +5252,7 @@ function_arg_record_value (tree type, enum machine_mode mode,\n   parms.intoffset = 0;\n   function_arg_record_value_1 (type, 0, &parms, false);\n \n+  /* Take into account pending integer fields.  */\n   if (parms.intoffset != -1)\n     {\n       unsigned int startbit, endbit;"}]}