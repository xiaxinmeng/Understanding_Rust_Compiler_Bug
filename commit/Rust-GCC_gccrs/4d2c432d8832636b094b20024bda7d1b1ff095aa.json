{"sha": "4d2c432d8832636b094b20024bda7d1b1ff095aa", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGQyYzQzMmQ4ODMyNjM2YjA5NGIyMDAyNGJkYTdkMWIxZmYwOTVhYQ==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1997-02-15T13:15:55Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1997-02-15T13:15:55Z"}, "message": "Update comments.\n\nFrom-SVN: r13636", "tree": {"sha": "2eb7cc1ad698a7fa455f5ad9e17a018e802f94ce", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2eb7cc1ad698a7fa455f5ad9e17a018e802f94ce"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4d2c432d8832636b094b20024bda7d1b1ff095aa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4d2c432d8832636b094b20024bda7d1b1ff095aa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4d2c432d8832636b094b20024bda7d1b1ff095aa", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4d2c432d8832636b094b20024bda7d1b1ff095aa/comments", "author": null, "committer": null, "parents": [{"sha": "3e6e075c892f3cb569311f0afdab783545275f45", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3e6e075c892f3cb569311f0afdab783545275f45", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3e6e075c892f3cb569311f0afdab783545275f45"}], "stats": {"total": 7, "additions": 6, "deletions": 1}, "files": [{"sha": "2265eb3e53771567db0fd941ed0f89ef952d69d8", "filename": "gcc/combine.c", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d2c432d8832636b094b20024bda7d1b1ff095aa/gcc%2Fcombine.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d2c432d8832636b094b20024bda7d1b1ff095aa/gcc%2Fcombine.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcombine.c?ref=4d2c432d8832636b094b20024bda7d1b1ff095aa", "patch": "@@ -952,7 +952,12 @@ can_combine_p (insn, i3, pred, succ, pdest, psrc)\n \t insns.  Eliminate this problem by not combining with such an insn.\n \n \t Also, on some machines we don't want to extend the life of a hard\n-\t register.  */\n+\t register.\n+\n+\t This is the same test done in can_combine except that we don't test\n+\t if SRC is a CALL operation to permit a hard register with\n+\t SMALL_REGISTER_CLASSES, and that we have to take all_adjacent\n+\t into account.  */\n \n       if (GET_CODE (src) == REG\n \t  && ((REGNO (dest) < FIRST_PSEUDO_REGISTER"}]}