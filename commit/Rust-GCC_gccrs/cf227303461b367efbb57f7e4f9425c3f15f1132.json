{"sha": "cf227303461b367efbb57f7e4f9425c3f15f1132", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2YyMjczMDM0NjFiMzY3ZWZiYjU3ZjdlNGY5NDI1YzNmMTVmMTEzMg==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2007-01-24T12:13:45Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2007-01-24T12:13:45Z"}, "message": "pr23382.c: Avoid DCE from eliminating dead variable.\n\n\t* gcc.dg/tree-ssa/pr23382.c: Avoid DCE from eliminating dead variable.\n\t* tree-ssa-dce.c (eliminate_unnecesary_stmts): Remove dead LHS of calls.\n\nFrom-SVN: r121108", "tree": {"sha": "9f6dcc9f0199cf56118ddb5bed8a117a7de8be67", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9f6dcc9f0199cf56118ddb5bed8a117a7de8be67"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cf227303461b367efbb57f7e4f9425c3f15f1132", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cf227303461b367efbb57f7e4f9425c3f15f1132", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cf227303461b367efbb57f7e4f9425c3f15f1132", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cf227303461b367efbb57f7e4f9425c3f15f1132/comments", "author": null, "committer": null, "parents": [{"sha": "024a85aeb6a912811d917f737eaad39140c2fb0c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/024a85aeb6a912811d917f737eaad39140c2fb0c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/024a85aeb6a912811d917f737eaad39140c2fb0c"}], "stats": {"total": 38, "additions": 36, "deletions": 2}, "files": [{"sha": "de64b881792a1d8755e45d3e89277f95afb5855f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf227303461b367efbb57f7e4f9425c3f15f1132/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf227303461b367efbb57f7e4f9425c3f15f1132/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=cf227303461b367efbb57f7e4f9425c3f15f1132", "patch": "@@ -1,3 +1,7 @@\n+2007-01-24  Jan Hubicka  <jh@suse.cz>\n+\n+\t* tree-ssa-dce.c (eliminate_unnecesary_stmts): Remove dead LHS of calls.\n+\n 2007-01-24  Andreas Krebbel  <krebbel1@de.ibm.com>\n \n \t* c-cppbuiltin.c (builtin_define_type_sizeof): New function."}, {"sha": "b75e059166309cc0655d6372457c1a3983f1fcb0", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf227303461b367efbb57f7e4f9425c3f15f1132/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf227303461b367efbb57f7e4f9425c3f15f1132/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=cf227303461b367efbb57f7e4f9425c3f15f1132", "patch": "@@ -1,3 +1,7 @@\n+2007-01-24  Jan Hubicka  <jh@suse.cz>\n+\n+\t* gcc.dg/tree-ssa/pr23382.c: Avoid DCE from eliminating dead variable.\n+\n 2007-01-24  Andreas Krebbel  <krebbel1@de.ibm.com>\n \n \t* gcc.c-torture/compile/sizeof-macros-1.c: New testcase."}, {"sha": "bd4b9a0ac947cf9436367b756ba73cb1a6ec8325", "filename": "gcc/testsuite/gcc.dg/tree-ssa/pr23382.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf227303461b367efbb57f7e4f9425c3f15f1132/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr23382.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf227303461b367efbb57f7e4f9425c3f15f1132/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr23382.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr23382.c?ref=cf227303461b367efbb57f7e4f9425c3f15f1132", "patch": "@@ -8,9 +8,10 @@ struct a\n \n void *malloc(__SIZE_TYPE__ size) __attribute__((malloc));\n \n-void f(void)\n+int f(void)\n {\n    struct a *a = malloc(sizeof(struct a));\n+   return a.length;\n }\n /* { dg-final { scan-tree-dump-times \"VDEF <HEAP\" 1 \"alias1\"} } */\n /* { dg-final { scan-tree-dump-times \"VDEF <HEAP\" 1 \"alias2\"} } */"}, {"sha": "3631add456f7b9e6f29644b71a3dee7882bdf998", "filename": "gcc/tree-ssa-dce.c", "status": "modified", "additions": 26, "deletions": 1, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf227303461b367efbb57f7e4f9425c3f15f1132/gcc%2Ftree-ssa-dce.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf227303461b367efbb57f7e4f9425c3f15f1132/gcc%2Ftree-ssa-dce.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-dce.c?ref=cf227303461b367efbb57f7e4f9425c3f15f1132", "patch": "@@ -688,7 +688,32 @@ eliminate_unnecessary_stmts (void)\n \t    {\n \t      tree call = get_call_expr_in (t);\n \t      if (call)\n-\t\tnotice_special_calls (call);\n+\t\t{\n+\t\t  tree name;\n+\n+\t\t  /* When LHS of var = call (); is dead, simplify it into\n+\t\t     call (); saving one operand.  */\n+\t\t  if (TREE_CODE (t) == GIMPLE_MODIFY_STMT\n+\t\t      && (TREE_CODE ((name = GIMPLE_STMT_OPERAND (t, 0)))\n+\t\t\t  == SSA_NAME)\n+\t\t      && !TEST_BIT (processed, SSA_NAME_VERSION (name)))\n+\t\t    {\n+\t\t      something_changed = true;\n+\t\t      if (dump_file && (dump_flags & TDF_DETAILS))\n+\t\t\t{\n+\t\t\t  fprintf (dump_file, \"Deleting LHS of call: \");\n+\t\t\t  print_generic_stmt (dump_file, t, TDF_SLIM);\n+\t\t\t  fprintf (dump_file, \"\\n\");\n+\t\t\t}\n+\t\t      push_stmt_changes (bsi_stmt_ptr (i));\n+\t\t      TREE_BLOCK (call) = TREE_BLOCK (t);\n+\t\t      bsi_replace (&i, call, false);\n+\t\t      maybe_clean_or_replace_eh_stmt (t, call);\n+\t\t      mark_symbols_for_renaming (call);\n+\t\t      pop_stmt_changes (bsi_stmt_ptr (i));\n+\t\t    }\n+\t\t  notice_special_calls (call);\n+\t\t}\n \t      bsi_next (&i);\n \t    }\n \t}"}]}