{"sha": "73aa401ecf498ad3d739bde4127da73e2eb01932", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzNhYTQwMWVjZjQ5OGFkM2Q3MzliZGU0MTI3ZGE3M2UyZWIwMTkzMg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2017-01-21T08:47:11Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2017-01-21T08:47:11Z"}, "message": "re PR other/79046 (g++ -print-file-name=plugin uses full version number in path)\n\n\tPR other/79046\nlibatomic/\n\t* testsuite/Makefile.am (gcc_version): Use @get_gcc_base_ver@ instead\n\tof cat to get version from BASE-VER file.\n\t* testsuite/Makefile.in: Regenerated.\nlibffi/\n\t* configure.ac: Add GCC_BASE_VER.\n\t* include/Makefile.am (gcc_version): Use @get_gcc_base_ver@ instead\n\tof cat to get version from BASE-VER file.\n\t* configure: Regenerated.\n\t* testsuite/Makefile.in: Regenerated.\n\t* include/Makefile.in: Regenerated.\n\t* Makefile.in: Regenerated.\n\t* man/Makefile.in: Regenerated.\nlibgomp/\n\t* testsuite/Makefile.am (gcc_version): Use @get_gcc_base_ver@ instead\n\tof cat to get version from BASE-VER file.\n\t* testsuite/Makefile.in: Regenerated.\nlibitm/\n\t* testsuite/Makefile.am (gcc_version): Use @get_gcc_base_ver@ instead\n\tof cat to get version from BASE-VER file.\n\t* testsuite/Makefile.in: Regenerated.\nlibmpx/\n\t* mpxrt/Makefile.am (gcc_version): Use @get_gcc_base_ver@ instead\n\tof cat to get version from BASE-VER file.\n\t* mpxwrap/Makefile.am (gcc_version): Likewise.\n\t* mpxrt/Makefile.in: Regenerated.\n\t* mpxwrap/Makefile.in: Regenerated.\nliboffloadmic/\n\t* plugin/configure.ac: Add GCC_BASE_VER.\n\t* plugin/Makefile.am (gcc_version): Use @get_gcc_base_ver@ instead\n\tof cat to get version from BASE-VER file.\n\t* plugin/configure: Regenerated.\n\t* plugin/aclocal.m4: Regenerated.\n\t* plugin/Makefile.in: Regenerated.\nlibsanitizer/\n\t* interception/Makefile.am (gcc_version): Use @get_gcc_base_ver@\n\tinstead of cat to get version from BASE-VER file.\n\t* asan/Makefile.am (gcc_version): Likewise.\n\t* ubsan/Makefile.am (gcc_version): Likewise.\n\t* sanitizer_common/Makefile.am (gcc_version): Likewise.\n\t* lsan/Makefile.am (gcc_version): Likewise.\n\t* tsan/Makefile.am (gcc_version): Likewise.\n\t* interception/Makefile.in: Regenerated.\n\t* asan/Makefile.in: Regenerated.\n\t* ubsan/Makefile.in: Regenerated.\n\t* sanitizer_common/Makefile.in: Regenerated.\n\t* lsan/Makefile.in: Regenerated.\n\t* tsan/Makefile.in: Regenerated.\nlibvtv/\n\t* testsuite/Makefile.am (gcc_version): Use @get_gcc_base_ver@ instead\n\tof cat to get version from BASE-VER file.\n\t* testsuite/Makefile.in: Regenerated.\n\nFrom-SVN: r244742", "tree": {"sha": "6a14b97f2fe0573dfa5371387fc81ee79e32e653", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6a14b97f2fe0573dfa5371387fc81ee79e32e653"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/73aa401ecf498ad3d739bde4127da73e2eb01932", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/73aa401ecf498ad3d739bde4127da73e2eb01932", "html_url": "https://github.com/Rust-GCC/gccrs/commit/73aa401ecf498ad3d739bde4127da73e2eb01932", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/73aa401ecf498ad3d739bde4127da73e2eb01932/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ea9f867b7b5985b98e9f5c6ff9a2239f3a9e8496", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ea9f867b7b5985b98e9f5c6ff9a2239f3a9e8496", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ea9f867b7b5985b98e9f5c6ff9a2239f3a9e8496"}], "stats": {"total": 202, "additions": 164, "deletions": 38}, "files": [{"sha": "f87859d3c517c58c1530a9ad56393e22325e8fdf", "filename": "libatomic/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73aa401ecf498ad3d739bde4127da73e2eb01932/libatomic%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73aa401ecf498ad3d739bde4127da73e2eb01932/libatomic%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libatomic%2FChangeLog?ref=73aa401ecf498ad3d739bde4127da73e2eb01932", "patch": "@@ -1,3 +1,10 @@\n+2017-01-21  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR other/79046\n+\t* testsuite/Makefile.am (gcc_version): Use @get_gcc_base_ver@ instead\n+\tof cat to get version from BASE-VER file.\n+\t* testsuite/Makefile.in: Regenerated.\n+\n 2017-01-17  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR other/79046"}, {"sha": "a9a0144185abd39efd4b33cc2ea27eac637d2899", "filename": "libatomic/testsuite/Makefile.am", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73aa401ecf498ad3d739bde4127da73e2eb01932/libatomic%2Ftestsuite%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73aa401ecf498ad3d739bde4127da73e2eb01932/libatomic%2Ftestsuite%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libatomic%2Ftestsuite%2FMakefile.am?ref=73aa401ecf498ad3d739bde4127da73e2eb01932", "patch": "@@ -3,7 +3,7 @@\n AUTOMAKE_OPTIONS = foreign dejagnu\n \n # May be used by various substitution variables.\n-gcc_version := $(shell cat $(top_srcdir)/../gcc/BASE-VER)\n+gcc_version := $(shell @get_gcc_base_ver@ $(top_srcdir)/../gcc/BASE-VER)\n \n EXPECT = $(shell if test -f $(top_builddir)/../expect/expect; then \\\n \t   echo $(top_builddir)/../expect/expect; else echo expect; fi)"}, {"sha": "adfc231484a6c81a3ea9bac8a6efce276e610647", "filename": "libatomic/testsuite/Makefile.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73aa401ecf498ad3d739bde4127da73e2eb01932/libatomic%2Ftestsuite%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73aa401ecf498ad3d739bde4127da73e2eb01932/libatomic%2Ftestsuite%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libatomic%2Ftestsuite%2FMakefile.in?ref=73aa401ecf498ad3d739bde4127da73e2eb01932", "patch": "@@ -215,7 +215,7 @@ top_srcdir = @top_srcdir@\n AUTOMAKE_OPTIONS = foreign dejagnu\n \n # May be used by various substitution variables.\n-gcc_version := $(shell cat $(top_srcdir)/../gcc/BASE-VER)\n+gcc_version := $(shell @get_gcc_base_ver@ $(top_srcdir)/../gcc/BASE-VER)\n EXPECT = $(shell if test -f $(top_builddir)/../expect/expect; then \\\n \t   echo $(top_builddir)/../expect/expect; else echo expect; fi)\n "}, {"sha": "e73b93b5470f2b760abfce0dbf82bfd0cfad50a3", "filename": "libffi/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73aa401ecf498ad3d739bde4127da73e2eb01932/libffi%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73aa401ecf498ad3d739bde4127da73e2eb01932/libffi%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2FChangeLog?ref=73aa401ecf498ad3d739bde4127da73e2eb01932", "patch": "@@ -1,3 +1,15 @@\n+2017-01-21  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR other/79046\n+\t* configure.ac: Add GCC_BASE_VER.\n+\t* include/Makefile.am (gcc_version): Use @get_gcc_base_ver@ instead\n+\tof cat to get version from BASE-VER file.\n+\t* configure: Regenerated.\n+\t* testsuite/Makefile.in: Regenerated.\n+\t* include/Makefile.in: Regenerated.\n+\t* Makefile.in: Regenerated.\n+\t* man/Makefile.in: Regenerated.\n+\n 2016-11-15  Matthias Klose  <doko@ubuntu.com>\n \n \t* configure: Regenerate."}, {"sha": "8a99ee58b68da65f0360ce7c5b8eb91adb12dab8", "filename": "libffi/Makefile.in", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73aa401ecf498ad3d739bde4127da73e2eb01932/libffi%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73aa401ecf498ad3d739bde4127da73e2eb01932/libffi%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2FMakefile.in?ref=73aa401ecf498ad3d739bde4127da73e2eb01932", "patch": "@@ -293,6 +293,7 @@ datarootdir = @datarootdir@\n docdir = @docdir@\n dvidir = @dvidir@\n exec_prefix = @exec_prefix@\n+get_gcc_base_ver = @get_gcc_base_ver@\n host = @host@\n host_alias = @host_alias@\n host_cpu = @host_cpu@"}, {"sha": "74b747b3b7e89e2c7e08154f20e75e27b35f4717", "filename": "libffi/configure", "status": "modified", "additions": 21, "deletions": 2, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73aa401ecf498ad3d739bde4127da73e2eb01932/libffi%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73aa401ecf498ad3d739bde4127da73e2eb01932/libffi%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Fconfigure?ref=73aa401ecf498ad3d739bde4127da73e2eb01932", "patch": "@@ -604,6 +604,7 @@ ac_subst_vars='am__EXEEXT_FALSE\n am__EXEEXT_TRUE\n LTLIBOBJS\n LIBOBJS\n+get_gcc_base_ver\n LIBAT_BUILD_VERSIONED_SHLIB_SUN_FALSE\n LIBAT_BUILD_VERSIONED_SHLIB_SUN_TRUE\n LIBAT_BUILD_VERSIONED_SHLIB_GNU_FALSE\n@@ -777,6 +778,7 @@ enable_structs\n enable_raw_api\n enable_purify_safety\n enable_symvers\n+with_gcc_major_version_only\n '\n       ac_precious_vars='build_alias\n host_alias\n@@ -1434,6 +1436,8 @@ Optional Packages:\n   --with-pic              try to use only PIC/non-PIC objects [default=use\n                           both]\n   --with-gnu-ld           assume the C compiler uses GNU ld [default=no]\n+  --with-gcc-major-version-only\n+                          use only GCC major number in filesystem paths\n \n Some influential environment variables:\n   CC          C compiler command\n@@ -11386,7 +11390,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 11389 \"configure\"\n+#line 11393 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -11492,7 +11496,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 11495 \"configure\"\n+#line 11499 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -16433,6 +16437,21 @@ fi\n $as_echo \"$as_me: versioning on shared library symbols is $enable_symvers\" >&6;}\n \n \n+# Determine what GCC version number to use in filesystem paths.\n+\n+  get_gcc_base_ver=\"cat\"\n+\n+# Check whether --with-gcc-major-version-only was given.\n+if test \"${with_gcc_major_version_only+set}\" = set; then :\n+  withval=$with_gcc_major_version_only; if test x$with_gcc_major_version_only = xyes ; then\n+        get_gcc_base_ver=\"sed -e 's/^\\([0-9]*\\).*\\$\\$/\\1/'\"\n+      fi\n+\n+fi\n+\n+\n+\n+\n ac_config_commands=\"$ac_config_commands include\"\n \n ac_config_commands=\"$ac_config_commands src\""}, {"sha": "a01d8ac16b0ff8b01746f6ec330dd28366b9086e", "filename": "libffi/configure.ac", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73aa401ecf498ad3d739bde4127da73e2eb01932/libffi%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73aa401ecf498ad3d739bde4127da73e2eb01932/libffi%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Fconfigure.ac?ref=73aa401ecf498ad3d739bde4127da73e2eb01932", "patch": "@@ -358,6 +358,9 @@ fi\n # Check linker support.\n LIBAT_ENABLE_SYMVERS\n \n+# Determine what GCC version number to use in filesystem paths.\n+GCC_BASE_VER\n+\n AC_CONFIG_COMMANDS(include, [test -d include || mkdir include])\n AC_CONFIG_COMMANDS(src, [\n test -d src || mkdir src"}, {"sha": "37fde6e968066a66576020683c48e05be390c2cf", "filename": "libffi/include/Makefile.am", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73aa401ecf498ad3d739bde4127da73e2eb01932/libffi%2Finclude%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73aa401ecf498ad3d739bde4127da73e2eb01932/libffi%2Finclude%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Finclude%2FMakefile.am?ref=73aa401ecf498ad3d739bde4127da73e2eb01932", "patch": "@@ -7,7 +7,7 @@ noinst_HEADERS=ffi_common.h ffi_cfi.h\n EXTRA_DIST=ffi.h.in\n \n # Where generated headers like ffitarget.h get installed.\n-gcc_version   := $(shell cat $(top_srcdir)/../gcc/BASE-VER)\n+gcc_version   := $(shell @get_gcc_base_ver@ $(top_srcdir)/../gcc/BASE-VER)\n toollibffidir := $(libdir)/gcc/$(target_alias)/$(gcc_version)/include\n \n toollibffi_HEADERS = ffi.h ffitarget.h"}, {"sha": "e0c75992327498b3d969fe38aed22141ae42da3d", "filename": "libffi/include/Makefile.in", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73aa401ecf498ad3d739bde4127da73e2eb01932/libffi%2Finclude%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73aa401ecf498ad3d739bde4127da73e2eb01932/libffi%2Finclude%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Finclude%2FMakefile.in?ref=73aa401ecf498ad3d739bde4127da73e2eb01932", "patch": "@@ -211,6 +211,7 @@ datarootdir = @datarootdir@\n docdir = @docdir@\n dvidir = @dvidir@\n exec_prefix = @exec_prefix@\n+get_gcc_base_ver = @get_gcc_base_ver@\n host = @host@\n host_alias = @host_alias@\n host_cpu = @host_cpu@\n@@ -252,7 +253,7 @@ noinst_HEADERS = ffi_common.h ffi_cfi.h\n EXTRA_DIST = ffi.h.in\n \n # Where generated headers like ffitarget.h get installed.\n-gcc_version := $(shell cat $(top_srcdir)/../gcc/BASE-VER)\n+gcc_version := $(shell @get_gcc_base_ver@ $(top_srcdir)/../gcc/BASE-VER)\n toollibffidir := $(libdir)/gcc/$(target_alias)/$(gcc_version)/include\n toollibffi_HEADERS = ffi.h ffitarget.h\n all: all-am"}, {"sha": "0243bdbedfa21a3ca7be41cb1db6db70d3c8ed19", "filename": "libffi/man/Makefile.in", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73aa401ecf498ad3d739bde4127da73e2eb01932/libffi%2Fman%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73aa401ecf498ad3d739bde4127da73e2eb01932/libffi%2Fman%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Fman%2FMakefile.in?ref=73aa401ecf498ad3d739bde4127da73e2eb01932", "patch": "@@ -209,6 +209,7 @@ datarootdir = @datarootdir@\n docdir = @docdir@\n dvidir = @dvidir@\n exec_prefix = @exec_prefix@\n+get_gcc_base_ver = @get_gcc_base_ver@\n host = @host@\n host_alias = @host_alias@\n host_cpu = @host_cpu@"}, {"sha": "b7da4b0b3e7248899a1efa5d418f1e20c3a653bf", "filename": "libffi/testsuite/Makefile.in", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73aa401ecf498ad3d739bde4127da73e2eb01932/libffi%2Ftestsuite%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73aa401ecf498ad3d739bde4127da73e2eb01932/libffi%2Ftestsuite%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Ftestsuite%2FMakefile.in?ref=73aa401ecf498ad3d739bde4127da73e2eb01932", "patch": "@@ -180,6 +180,7 @@ datarootdir = @datarootdir@\n docdir = @docdir@\n dvidir = @dvidir@\n exec_prefix = @exec_prefix@\n+get_gcc_base_ver = @get_gcc_base_ver@\n host = @host@\n host_alias = @host_alias@\n host_cpu = @host_cpu@"}, {"sha": "806c4f2f2bdb3a3b1f6a6c39437f18637d040c5b", "filename": "libgomp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73aa401ecf498ad3d739bde4127da73e2eb01932/libgomp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73aa401ecf498ad3d739bde4127da73e2eb01932/libgomp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2FChangeLog?ref=73aa401ecf498ad3d739bde4127da73e2eb01932", "patch": "@@ -1,3 +1,10 @@\n+2017-01-21  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR other/79046\n+\t* testsuite/Makefile.am (gcc_version): Use @get_gcc_base_ver@ instead\n+\tof cat to get version from BASE-VER file.\n+\t* testsuite/Makefile.in: Regenerated.\n+\n 2017-01-19  Jakub Jelinek  <jakub@redhat.com>\n \n \t* plugin/cuda/cuda.h (CUdeviceptr): Typedef to unsigned long long even"}, {"sha": "e2a3f460eb0fe89f8e09f3378c4ca8da0e9b0646", "filename": "libgomp/testsuite/Makefile.am", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73aa401ecf498ad3d739bde4127da73e2eb01932/libgomp%2Ftestsuite%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73aa401ecf498ad3d739bde4127da73e2eb01932/libgomp%2Ftestsuite%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2FMakefile.am?ref=73aa401ecf498ad3d739bde4127da73e2eb01932", "patch": "@@ -3,7 +3,7 @@\n AUTOMAKE_OPTIONS = foreign dejagnu\n \n # May be used by various substitution variables.\n-gcc_version := $(shell cat $(top_srcdir)/../gcc/BASE-VER)\n+gcc_version := $(shell @get_gcc_base_ver@ $(top_srcdir)/../gcc/BASE-VER)\n \n EXPECT = $(shell if test -f $(top_builddir)/../expect/expect; then \\\n \t   echo $(top_builddir)/../expect/expect; else echo expect; fi)"}, {"sha": "6edb7ae7ade7b487cfa8b835cec983ea23c09355", "filename": "libgomp/testsuite/Makefile.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73aa401ecf498ad3d739bde4127da73e2eb01932/libgomp%2Ftestsuite%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73aa401ecf498ad3d739bde4127da73e2eb01932/libgomp%2Ftestsuite%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2FMakefile.in?ref=73aa401ecf498ad3d739bde4127da73e2eb01932", "patch": "@@ -246,7 +246,7 @@ top_srcdir = @top_srcdir@\n AUTOMAKE_OPTIONS = foreign dejagnu\n \n # May be used by various substitution variables.\n-gcc_version := $(shell cat $(top_srcdir)/../gcc/BASE-VER)\n+gcc_version := $(shell @get_gcc_base_ver@ $(top_srcdir)/../gcc/BASE-VER)\n EXPECT = $(shell if test -f $(top_builddir)/../expect/expect; then \\\n \t   echo $(top_builddir)/../expect/expect; else echo expect; fi)\n "}, {"sha": "f930cf38797def8526c07e708be283780e218512", "filename": "libitm/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73aa401ecf498ad3d739bde4127da73e2eb01932/libitm%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73aa401ecf498ad3d739bde4127da73e2eb01932/libitm%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libitm%2FChangeLog?ref=73aa401ecf498ad3d739bde4127da73e2eb01932", "patch": "@@ -1,3 +1,10 @@\n+2017-01-21  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR other/79046\n+\t* testsuite/Makefile.am (gcc_version): Use @get_gcc_base_ver@ instead\n+\tof cat to get version from BASE-VER file.\n+\t* testsuite/Makefile.in: Regenerated.\n+\n 2017-01-19  Uros Bizjak  <ubizjak@gmail.com>\n \n \t* config/x86/target.h (htm_available): Determine vendor from"}, {"sha": "a9a0144185abd39efd4b33cc2ea27eac637d2899", "filename": "libitm/testsuite/Makefile.am", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73aa401ecf498ad3d739bde4127da73e2eb01932/libitm%2Ftestsuite%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73aa401ecf498ad3d739bde4127da73e2eb01932/libitm%2Ftestsuite%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libitm%2Ftestsuite%2FMakefile.am?ref=73aa401ecf498ad3d739bde4127da73e2eb01932", "patch": "@@ -3,7 +3,7 @@\n AUTOMAKE_OPTIONS = foreign dejagnu\n \n # May be used by various substitution variables.\n-gcc_version := $(shell cat $(top_srcdir)/../gcc/BASE-VER)\n+gcc_version := $(shell @get_gcc_base_ver@ $(top_srcdir)/../gcc/BASE-VER)\n \n EXPECT = $(shell if test -f $(top_builddir)/../expect/expect; then \\\n \t   echo $(top_builddir)/../expect/expect; else echo expect; fi)"}, {"sha": "eb9e992279ddfccac3c5795eda095c4af6a752d9", "filename": "libitm/testsuite/Makefile.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73aa401ecf498ad3d739bde4127da73e2eb01932/libitm%2Ftestsuite%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73aa401ecf498ad3d739bde4127da73e2eb01932/libitm%2Ftestsuite%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libitm%2Ftestsuite%2FMakefile.in?ref=73aa401ecf498ad3d739bde4127da73e2eb01932", "patch": "@@ -226,7 +226,7 @@ top_srcdir = @top_srcdir@\n AUTOMAKE_OPTIONS = foreign dejagnu\n \n # May be used by various substitution variables.\n-gcc_version := $(shell cat $(top_srcdir)/../gcc/BASE-VER)\n+gcc_version := $(shell @get_gcc_base_ver@ $(top_srcdir)/../gcc/BASE-VER)\n EXPECT = $(shell if test -f $(top_builddir)/../expect/expect; then \\\n \t   echo $(top_builddir)/../expect/expect; else echo expect; fi)\n "}, {"sha": "82daa1fc946549d57d6af833d0ec29890bfe7e00", "filename": "libmpx/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73aa401ecf498ad3d739bde4127da73e2eb01932/libmpx%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73aa401ecf498ad3d739bde4127da73e2eb01932/libmpx%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libmpx%2FChangeLog?ref=73aa401ecf498ad3d739bde4127da73e2eb01932", "patch": "@@ -1,3 +1,12 @@\n+2017-01-21  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR other/79046\n+\t* mpxrt/Makefile.am (gcc_version): Use @get_gcc_base_ver@ instead\n+\tof cat to get version from BASE-VER file.\n+\t* mpxwrap/Makefile.am (gcc_version): Likewise.\n+\t* mpxrt/Makefile.in: Regenerated.\n+\t* mpxwrap/Makefile.in: Regenerated.\n+\n 2017-01-19  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR other/79046"}, {"sha": "41c806f97228b2bc7537c27aee0b651826e16421", "filename": "libmpx/mpxrt/Makefile.am", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73aa401ecf498ad3d739bde4127da73e2eb01932/libmpx%2Fmpxrt%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73aa401ecf498ad3d739bde4127da73e2eb01932/libmpx%2Fmpxrt%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libmpx%2Fmpxrt%2FMakefile.am?ref=73aa401ecf498ad3d739bde4127da73e2eb01932", "patch": "@@ -2,7 +2,7 @@ ACLOCAL_AMFLAGS = -I $(top_srcdir) -I $(top_srcdir)/config\n \n if LIBMPX_SUPPORTED\n # May be used by toolexeclibdir.\n-gcc_version := $(shell cat $(top_srcdir)/../gcc/BASE-VER)\n+gcc_version := $(shell @get_gcc_base_ver@ $(top_srcdir)/../gcc/BASE-VER)\n \n AM_CPPFLAGS = -I$(top_srcdir)/..\n AM_CFLAGS = $(XCFLAGS)"}, {"sha": "4c55d20c13ebf7ac4ebb3dc2c5a85d24970ed260", "filename": "libmpx/mpxrt/Makefile.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73aa401ecf498ad3d739bde4127da73e2eb01932/libmpx%2Fmpxrt%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73aa401ecf498ad3d739bde4127da73e2eb01932/libmpx%2Fmpxrt%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libmpx%2Fmpxrt%2FMakefile.in?ref=73aa401ecf498ad3d739bde4127da73e2eb01932", "patch": "@@ -251,7 +251,7 @@ top_srcdir = @top_srcdir@\n ACLOCAL_AMFLAGS = -I $(top_srcdir) -I $(top_srcdir)/config\n \n # May be used by toolexeclibdir.\n-@LIBMPX_SUPPORTED_TRUE@gcc_version := $(shell cat $(top_srcdir)/../gcc/BASE-VER)\n+@LIBMPX_SUPPORTED_TRUE@gcc_version := $(shell @get_gcc_base_ver@ $(top_srcdir)/../gcc/BASE-VER)\n @LIBMPX_SUPPORTED_TRUE@AM_CPPFLAGS = -I$(top_srcdir)/..\n @LIBMPX_SUPPORTED_TRUE@AM_CFLAGS = $(XCFLAGS)\n @LIBMPX_SUPPORTED_TRUE@toolexeclib_LTLIBRARIES = libmpx.la"}, {"sha": "d9e84ae66219d117e55cbc6be9dee18b55d573f6", "filename": "libmpx/mpxwrap/Makefile.am", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73aa401ecf498ad3d739bde4127da73e2eb01932/libmpx%2Fmpxwrap%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73aa401ecf498ad3d739bde4127da73e2eb01932/libmpx%2Fmpxwrap%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libmpx%2Fmpxwrap%2FMakefile.am?ref=73aa401ecf498ad3d739bde4127da73e2eb01932", "patch": "@@ -2,7 +2,7 @@ ALCLOCAL_AMFLAGS = -I .. -I ../config\n AM_CPPFLAGS = -I $(top_srcdir)\n \n # May be used by toolexeclibdir.\n-gcc_version := $(shell cat $(top_srcdir)/../gcc/BASE-VER)\n+gcc_version := $(shell @get_gcc_base_ver@ $(top_srcdir)/../gcc/BASE-VER)\n \n libmpxwrappers_la_CFLAGS = -fcheck-pointer-bounds -mmpx -fno-chkp-check-read \\\n \t\t\t   -fno-chkp-check-write -fno-chkp-use-wrappers -fPIC"}, {"sha": "1b929b9f59810fc679a0dc13a94be1018aa80fb6", "filename": "libmpx/mpxwrap/Makefile.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73aa401ecf498ad3d739bde4127da73e2eb01932/libmpx%2Fmpxwrap%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73aa401ecf498ad3d739bde4127da73e2eb01932/libmpx%2Fmpxwrap%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libmpx%2Fmpxwrap%2FMakefile.in?ref=73aa401ecf498ad3d739bde4127da73e2eb01932", "patch": "@@ -251,7 +251,7 @@ ALCLOCAL_AMFLAGS = -I .. -I ../config\n AM_CPPFLAGS = -I $(top_srcdir)\n \n # May be used by toolexeclibdir.\n-gcc_version := $(shell cat $(top_srcdir)/../gcc/BASE-VER)\n+gcc_version := $(shell @get_gcc_base_ver@ $(top_srcdir)/../gcc/BASE-VER)\n libmpxwrappers_la_CFLAGS = -fcheck-pointer-bounds -mmpx -fno-chkp-check-read \\\n \t\t\t   -fno-chkp-check-write -fno-chkp-use-wrappers -fPIC\n "}, {"sha": "3d8ad67d2d4b66e7171fbd83d26444f786ad3585", "filename": "liboffloadmic/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73aa401ecf498ad3d739bde4127da73e2eb01932/liboffloadmic%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73aa401ecf498ad3d739bde4127da73e2eb01932/liboffloadmic%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/liboffloadmic%2FChangeLog?ref=73aa401ecf498ad3d739bde4127da73e2eb01932", "patch": "@@ -1,3 +1,13 @@\n+2017-01-21  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR other/79046\n+\t* plugin/configure.ac: Add GCC_BASE_VER.\n+\t* plugin/Makefile.am (gcc_version): Use @get_gcc_base_ver@ instead\n+\tof cat to get version from BASE-VER file.\n+\t* plugin/configure: Regenerated.\n+\t* plugin/aclocal.m4: Regenerated.\n+\t* plugin/Makefile.in: Regenerated.\n+\n 2017-01-20  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR other/79046"}, {"sha": "7a42238581a4a8d9e398b8a56a1c7b36dc448f08", "filename": "liboffloadmic/plugin/Makefile.am", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73aa401ecf498ad3d739bde4127da73e2eb01932/liboffloadmic%2Fplugin%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73aa401ecf498ad3d739bde4127da73e2eb01932/liboffloadmic%2Fplugin%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/liboffloadmic%2Fplugin%2FMakefile.am?ref=73aa401ecf498ad3d739bde4127da73e2eb01932", "patch": "@@ -1,6 +1,6 @@\n # Plugin for offload execution on Intel MIC devices.\n #\n-# Copyright (C) 2014 Free Software Foundation, Inc.\n+# Copyright (C) 2014-2017 Free Software Foundation, Inc.\n #\n # Contributed by Ilya Verbin <ilya.verbin@intel.com> and\n # Andrey Turetskiy <andrey.turetskiy@intel.com>.\n@@ -42,7 +42,7 @@ liboffload_src_dir = $(top_srcdir)/../runtime\n liboffload_dir = $(top_builddir)/..\n \n # May be used by toolexeclibdir.\n-gcc_version := $(shell cat $(top_srcdir)/../../gcc/BASE-VER)\n+gcc_version := $(shell @get_gcc_base_ver@ $(top_srcdir)/../../gcc/BASE-VER)\n libsubincludedir = $(libdir)/gcc/$(target_alias)/$(gcc_version)$(MULTISUBDIR)/include\n # Search for main_target_image.h in these directories\n target_prefix_dir = $(libdir)/gcc/$(accel_target)/$(gcc_version)$(MULTISUBDIR)"}, {"sha": "2a7c8d2ec6c8fff9fac13d09d44f5c29c8443353", "filename": "liboffloadmic/plugin/Makefile.in", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73aa401ecf498ad3d739bde4127da73e2eb01932/liboffloadmic%2Fplugin%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73aa401ecf498ad3d739bde4127da73e2eb01932/liboffloadmic%2Fplugin%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/liboffloadmic%2Fplugin%2FMakefile.in?ref=73aa401ecf498ad3d739bde4127da73e2eb01932", "patch": "@@ -17,7 +17,7 @@\n \n # Plugin for offload execution on Intel MIC devices.\n #\n-# Copyright (C) 2014 Free Software Foundation, Inc.\n+# Copyright (C) 2014-2017 Free Software Foundation, Inc.\n #\n # Contributed by Ilya Verbin <ilya.verbin@intel.com> and\n # Andrey Turetskiy <andrey.turetskiy@intel.com>.\n@@ -88,7 +88,8 @@ DIST_COMMON = $(srcdir)/Makefile.in $(srcdir)/Makefile.am \\\n \t$(srcdir)/../../mkinstalldirs $(srcdir)/../../depcomp \\\n \t$(am__plugin_include_HEADERS_DIST)\n ACLOCAL_M4 = $(top_srcdir)/aclocal.m4\n-am__aclocal_m4_deps = $(top_srcdir)/../../config/depstand.m4 \\\n+am__aclocal_m4_deps = $(top_srcdir)/../../config/acx.m4 \\\n+\t$(top_srcdir)/../../config/depstand.m4 \\\n \t$(top_srcdir)/../../config/lead-dot.m4 \\\n \t$(top_srcdir)/../../config/multi.m4 \\\n \t$(top_srcdir)/../../config/override.m4 \\\n@@ -263,6 +264,7 @@ datarootdir = @datarootdir@\n docdir = @docdir@\n dvidir = @dvidir@\n exec_prefix = @exec_prefix@\n+get_gcc_base_ver = @get_gcc_base_ver@\n host = @host@\n host_alias = @host_alias@\n host_cpu = @host_cpu@\n@@ -312,7 +314,7 @@ liboffload_src_dir = $(top_srcdir)/../runtime\n liboffload_dir = $(top_builddir)/..\n \n # May be used by toolexeclibdir.\n-gcc_version := $(shell cat $(top_srcdir)/../../gcc/BASE-VER)\n+gcc_version := $(shell @get_gcc_base_ver@ $(top_srcdir)/../../gcc/BASE-VER)\n libsubincludedir = $(libdir)/gcc/$(target_alias)/$(gcc_version)$(MULTISUBDIR)/include\n # Search for main_target_image.h in these directories\n target_prefix_dir = $(libdir)/gcc/$(accel_target)/$(gcc_version)$(MULTISUBDIR)"}, {"sha": "a4179ef40ac88c16597d8e9ae3dd03ba0c2fdec9", "filename": "liboffloadmic/plugin/aclocal.m4", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73aa401ecf498ad3d739bde4127da73e2eb01932/liboffloadmic%2Fplugin%2Faclocal.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73aa401ecf498ad3d739bde4127da73e2eb01932/liboffloadmic%2Fplugin%2Faclocal.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/liboffloadmic%2Fplugin%2Faclocal.m4?ref=73aa401ecf498ad3d739bde4127da73e2eb01932", "patch": "@@ -988,6 +988,7 @@ AC_SUBST([am__tar])\n AC_SUBST([am__untar])\n ]) # _AM_PROG_TAR\n \n+m4_include([../../config/acx.m4])\n m4_include([../../config/depstand.m4])\n m4_include([../../config/lead-dot.m4])\n m4_include([../../config/multi.m4])"}, {"sha": "8b8c041d2bf87d001ce352387ec6017f7969559e", "filename": "liboffloadmic/plugin/configure", "status": "modified", "additions": 23, "deletions": 5, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73aa401ecf498ad3d739bde4127da73e2eb01932/liboffloadmic%2Fplugin%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73aa401ecf498ad3d739bde4127da73e2eb01932/liboffloadmic%2Fplugin%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/liboffloadmic%2Fplugin%2Fconfigure?ref=73aa401ecf498ad3d739bde4127da73e2eb01932", "patch": "@@ -601,6 +601,7 @@ ac_subst_vars='am__EXEEXT_FALSE\n am__EXEEXT_TRUE\n LTLIBOBJS\n LIBOBJS\n+get_gcc_base_ver\n toolexeclibdir\n toolexecdir\n CXXCPP\n@@ -740,6 +741,7 @@ with_pic\n enable_fast_install\n with_gnu_ld\n enable_libtool_lock\n+with_gcc_major_version_only\n '\n       ac_precious_vars='build_alias\n host_alias\n@@ -1395,6 +1397,8 @@ Optional Packages:\n   --with-pic              try to use only PIC/non-PIC objects [default=use\n                           both]\n   --with-gnu-ld           assume the C compiler uses GNU ld [default=no]\n+  --with-gcc-major-version-only\n+                          use only GCC major number in filesystem paths\n \n Some influential environment variables:\n   CC          C compiler command\n@@ -8783,7 +8787,7 @@ _LT_EOF\n \tif $NM -V 2>&1 | $GREP 'GNU' > /dev/null; then\n \t  export_symbols_cmds='$NM -Bpg $libobjs $convenience | awk '\\''{ if (((\\$ 2 == \"T\") || (\\$ 2 == \"D\") || (\\$ 2 == \"B\") || (\\$ 2 == \"W\")) && (substr(\\$ 3,1,1) != \".\")) { print \\$ 3 } }'\\'' | sort -u > $export_symbols'\n \telse\n-\t  export_symbols_cmds='$NM -BCpg $libobjs $convenience | awk '\\''{ if (((\\$ 2 == \"T\") || (\\$ 2 == \"D\") || (\\$ 2 == \"B\")) && (substr(\\$ 3,1,1) != \".\")) { print \\$ 3 } }'\\'' | sort -u > $export_symbols'\n+\t  export_symbols_cmds='$NM -BCpg $libobjs $convenience | awk '\\''{ if (((\\$ 2 == \"T\") || (\\$ 2 == \"D\") || (\\$ 2 == \"B\") || (\\$ 2 == \"L\")) && (substr(\\$ 3,1,1) != \".\")) { print \\$ 3 } }'\\'' | sort -u > $export_symbols'\n \tfi\n \taix_use_runtimelinking=no\n \n@@ -10811,7 +10815,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 10814 \"configure\"\n+#line 10818 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -10917,7 +10921,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 10920 \"configure\"\n+#line 10924 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -13269,7 +13273,7 @@ $as_echo_n \"checking whether the $compiler linker ($LD) supports shared librarie\n     if $NM -V 2>&1 | $GREP 'GNU' > /dev/null; then\n       export_symbols_cmds_CXX='$NM -Bpg $libobjs $convenience | awk '\\''{ if (((\\$ 2 == \"T\") || (\\$ 2 == \"D\") || (\\$ 2 == \"B\") || (\\$ 2 == \"W\")) && (substr(\\$ 3,1,1) != \".\")) { print \\$ 3 } }'\\'' | sort -u > $export_symbols'\n     else\n-      export_symbols_cmds_CXX='$NM -BCpg $libobjs $convenience | awk '\\''{ if (((\\$ 2 == \"T\") || (\\$ 2 == \"D\") || (\\$ 2 == \"B\")) && (substr(\\$ 3,1,1) != \".\")) { print \\$ 3 } }'\\'' | sort -u > $export_symbols'\n+      export_symbols_cmds_CXX='$NM -BCpg $libobjs $convenience | awk '\\''{ if (((\\$ 2 == \"T\") || (\\$ 2 == \"D\") || (\\$ 2 == \"B\") || (\\$ 2 == \"L\")) && (substr(\\$ 3,1,1) != \".\")) { print \\$ 3 } }'\\'' | sort -u > $export_symbols'\n     fi\n     ;;\n   pw32*)\n@@ -14176,6 +14180,21 @@ hardcode_into_libs=no\n \n \n \n+# Determine what GCC version number to use in filesystem paths.\n+\n+  get_gcc_base_ver=\"cat\"\n+\n+# Check whether --with-gcc-major-version-only was given.\n+if test \"${with_gcc_major_version_only+set}\" = set; then :\n+  withval=$with_gcc_major_version_only; if test x$with_gcc_major_version_only = xyes ; then\n+        get_gcc_base_ver=\"sed -e 's/^\\([0-9]*\\).*\\$\\$/\\1/'\"\n+      fi\n+\n+fi\n+\n+\n+\n+\n # Must be last\n cat >confcache <<\\_ACEOF\n # This file is a shell script that caches the results of configure\n@@ -14915,7 +14934,6 @@ CONFIG_SHELL=${CONFIG_SHELL-/bin/sh}\n CC=\"$CC\"\n CXX=\"$CXX\"\n GFORTRAN=\"$GFORTRAN\"\n-GCJ=\"$GCJ\"\n \n \n # The HP-UX ksh and POSIX shell print the target directory to stdout"}, {"sha": "9c48cafd38b1ca5457da27895d491e59f8fffeda", "filename": "liboffloadmic/plugin/configure.ac", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73aa401ecf498ad3d739bde4127da73e2eb01932/liboffloadmic%2Fplugin%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73aa401ecf498ad3d739bde4127da73e2eb01932/liboffloadmic%2Fplugin%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/liboffloadmic%2Fplugin%2Fconfigure.ac?ref=73aa401ecf498ad3d739bde4127da73e2eb01932", "patch": "@@ -132,5 +132,8 @@ hardcode_into_libs=no\n AC_SUBST(toolexecdir)\n AC_SUBST(toolexeclibdir)\n \n+# Determine what GCC version number to use in filesystem paths.\n+GCC_BASE_VER\n+\n # Must be last\n AC_OUTPUT"}, {"sha": "bdc4fb106a2f0061f8805e14f3d1aaab249e53ba", "filename": "libsanitizer/ChangeLog", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73aa401ecf498ad3d739bde4127da73e2eb01932/libsanitizer%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73aa401ecf498ad3d739bde4127da73e2eb01932/libsanitizer%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libsanitizer%2FChangeLog?ref=73aa401ecf498ad3d739bde4127da73e2eb01932", "patch": "@@ -1,3 +1,20 @@\n+2017-01-21  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR other/79046\n+\t* interception/Makefile.am (gcc_version): Use @get_gcc_base_ver@\n+\tinstead of cat to get version from BASE-VER file.\n+\t* asan/Makefile.am (gcc_version): Likewise.\n+\t* ubsan/Makefile.am (gcc_version): Likewise.\n+\t* sanitizer_common/Makefile.am (gcc_version): Likewise.\n+\t* lsan/Makefile.am (gcc_version): Likewise.\n+\t* tsan/Makefile.am (gcc_version): Likewise.\n+\t* interception/Makefile.in: Regenerated.\n+\t* asan/Makefile.in: Regenerated.\n+\t* ubsan/Makefile.in: Regenerated.\n+\t* sanitizer_common/Makefile.in: Regenerated.\n+\t* lsan/Makefile.in: Regenerated.\n+\t* tsan/Makefile.in: Regenerated.\n+\n 2017-01-17  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR other/79046"}, {"sha": "43377a95622743bafd8329d86b50567876e41f3b", "filename": "libsanitizer/asan/Makefile.am", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73aa401ecf498ad3d739bde4127da73e2eb01932/libsanitizer%2Fasan%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73aa401ecf498ad3d739bde4127da73e2eb01932/libsanitizer%2Fasan%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libsanitizer%2Fasan%2FMakefile.am?ref=73aa401ecf498ad3d739bde4127da73e2eb01932", "patch": "@@ -1,7 +1,7 @@\n AM_CPPFLAGS = -I $(top_srcdir)/include -I $(top_srcdir)\n  \n # May be used by toolexeclibdir.\n-gcc_version := $(shell cat $(top_srcdir)/../gcc/BASE-VER)\n+gcc_version := $(shell @get_gcc_base_ver@ $(top_srcdir)/../gcc/BASE-VER)\n \n DEFS = -D_GNU_SOURCE -D_DEBUG -D__STDC_CONSTANT_MACROS -D__STDC_FORMAT_MACROS -D__STDC_LIMIT_MACROS -DASAN_HAS_EXCEPTIONS=1 -DASAN_NEEDS_SEGV=1 -DCAN_SANITIZE_UB=0\n if USING_MAC_INTERPOSE"}, {"sha": "4dad60ba1ae10f2dc079de15809648b8d1b81210", "filename": "libsanitizer/asan/Makefile.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73aa401ecf498ad3d739bde4127da73e2eb01932/libsanitizer%2Fasan%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73aa401ecf498ad3d739bde4127da73e2eb01932/libsanitizer%2Fasan%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libsanitizer%2Fasan%2FMakefile.in?ref=73aa401ecf498ad3d739bde4127da73e2eb01932", "patch": "@@ -298,7 +298,7 @@ top_srcdir = @top_srcdir@\n AM_CPPFLAGS = -I $(top_srcdir)/include -I $(top_srcdir)\n \n # May be used by toolexeclibdir.\n-gcc_version := $(shell cat $(top_srcdir)/../gcc/BASE-VER)\n+gcc_version := $(shell @get_gcc_base_ver@ $(top_srcdir)/../gcc/BASE-VER)\n AM_CXXFLAGS = -Wall -W -Wno-unused-parameter -Wwrite-strings -pedantic \\\n \t-Wno-long-long -fPIC -fno-builtin -fno-exceptions -fno-rtti \\\n \t-fomit-frame-pointer -funwind-tables -fvisibility=hidden \\"}, {"sha": "bd3172309bd060b6b2246ae9e944ad4e48378f53", "filename": "libsanitizer/interception/Makefile.am", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73aa401ecf498ad3d739bde4127da73e2eb01932/libsanitizer%2Finterception%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73aa401ecf498ad3d739bde4127da73e2eb01932/libsanitizer%2Finterception%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libsanitizer%2Finterception%2FMakefile.am?ref=73aa401ecf498ad3d739bde4127da73e2eb01932", "patch": "@@ -1,7 +1,7 @@\n AM_CPPFLAGS = -I $(top_srcdir)/include -I $(top_srcdir)\n  \n # May be used by toolexeclibdir.\n-gcc_version := $(shell cat $(top_srcdir)/../gcc/BASE-VER)\n+gcc_version := $(shell @get_gcc_base_ver@ $(top_srcdir)/../gcc/BASE-VER)\n \n DEFS = -D_GNU_SOURCE -D_DEBUG -D__STDC_CONSTANT_MACROS -D__STDC_FORMAT_MACROS -D__STDC_LIMIT_MACROS \n AM_CXXFLAGS = -Wall -W -Wno-unused-parameter -Wwrite-strings -pedantic -Wno-long-long  -fPIC -fno-builtin -fno-exceptions -fno-rtti -fomit-frame-pointer -funwind-tables -fvisibility=hidden -Wno-variadic-macros"}, {"sha": "c71fb57b8b839bcbe6a756d2f3ea9a9ebff79c8e", "filename": "libsanitizer/interception/Makefile.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73aa401ecf498ad3d739bde4127da73e2eb01932/libsanitizer%2Finterception%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73aa401ecf498ad3d739bde4127da73e2eb01932/libsanitizer%2Finterception%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libsanitizer%2Finterception%2FMakefile.in?ref=73aa401ecf498ad3d739bde4127da73e2eb01932", "patch": "@@ -247,7 +247,7 @@ top_srcdir = @top_srcdir@\n AM_CPPFLAGS = -I $(top_srcdir)/include -I $(top_srcdir)\n \n # May be used by toolexeclibdir.\n-gcc_version := $(shell cat $(top_srcdir)/../gcc/BASE-VER)\n+gcc_version := $(shell @get_gcc_base_ver@ $(top_srcdir)/../gcc/BASE-VER)\n AM_CXXFLAGS = -Wall -W -Wno-unused-parameter -Wwrite-strings -pedantic \\\n \t-Wno-long-long -fPIC -fno-builtin -fno-exceptions -fno-rtti \\\n \t-fomit-frame-pointer -funwind-tables -fvisibility=hidden \\"}, {"sha": "294342b1926994edde41030b175c2261c53103ff", "filename": "libsanitizer/lsan/Makefile.am", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73aa401ecf498ad3d739bde4127da73e2eb01932/libsanitizer%2Flsan%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73aa401ecf498ad3d739bde4127da73e2eb01932/libsanitizer%2Flsan%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libsanitizer%2Flsan%2FMakefile.am?ref=73aa401ecf498ad3d739bde4127da73e2eb01932", "patch": "@@ -1,7 +1,7 @@\n AM_CPPFLAGS = -I $(top_srcdir)/include -I $(top_srcdir)\n  \n # May be used by toolexeclibdir.\n-gcc_version := $(shell cat $(top_srcdir)/../gcc/BASE-VER)\n+gcc_version := $(shell @get_gcc_base_ver@ $(top_srcdir)/../gcc/BASE-VER)\n \n DEFS = -D_GNU_SOURCE -D_DEBUG -D__STDC_CONSTANT_MACROS -D__STDC_FORMAT_MACROS -D__STDC_LIMIT_MACROS \n AM_CXXFLAGS = -Wall -W -Wno-unused-parameter -Wwrite-strings -pedantic -Wno-long-long  -fPIC -fno-builtin -fno-exceptions -fno-rtti -fomit-frame-pointer -funwind-tables -fvisibility=hidden -Wno-variadic-macros"}, {"sha": "d951741c300df3841ec8215163c17f2a4cb729ab", "filename": "libsanitizer/lsan/Makefile.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73aa401ecf498ad3d739bde4127da73e2eb01932/libsanitizer%2Flsan%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73aa401ecf498ad3d739bde4127da73e2eb01932/libsanitizer%2Flsan%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libsanitizer%2Flsan%2FMakefile.in?ref=73aa401ecf498ad3d739bde4127da73e2eb01932", "patch": "@@ -288,7 +288,7 @@ top_srcdir = @top_srcdir@\n AM_CPPFLAGS = -I $(top_srcdir)/include -I $(top_srcdir)\n \n # May be used by toolexeclibdir.\n-gcc_version := $(shell cat $(top_srcdir)/../gcc/BASE-VER)\n+gcc_version := $(shell @get_gcc_base_ver@ $(top_srcdir)/../gcc/BASE-VER)\n AM_CXXFLAGS = -Wall -W -Wno-unused-parameter -Wwrite-strings -pedantic \\\n \t-Wno-long-long -fPIC -fno-builtin -fno-exceptions -fno-rtti \\\n \t-fomit-frame-pointer -funwind-tables -fvisibility=hidden \\"}, {"sha": "92c8419f33d44783bf310013227645662d882dfe", "filename": "libsanitizer/sanitizer_common/Makefile.am", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73aa401ecf498ad3d739bde4127da73e2eb01932/libsanitizer%2Fsanitizer_common%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73aa401ecf498ad3d739bde4127da73e2eb01932/libsanitizer%2Fsanitizer_common%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libsanitizer%2Fsanitizer_common%2FMakefile.am?ref=73aa401ecf498ad3d739bde4127da73e2eb01932", "patch": "@@ -1,7 +1,7 @@\n AM_CPPFLAGS = -I $(top_srcdir)/include -isystem $(top_srcdir)/include/system\n \n # May be used by toolexeclibdir.\n-gcc_version := $(shell cat $(top_srcdir)/../gcc/BASE-VER)\n+gcc_version := $(shell @get_gcc_base_ver@ $(top_srcdir)/../gcc/BASE-VER)\n \n DEFS = -D_GNU_SOURCE -D_DEBUG -D__STDC_CONSTANT_MACROS -D__STDC_FORMAT_MACROS -D__STDC_LIMIT_MACROS @RPC_DEFS@\n AM_CXXFLAGS = -Wall -W -Wno-unused-parameter -Wwrite-strings -pedantic -Wno-long-long  -fPIC -fno-builtin -fno-exceptions -fno-rtti -fomit-frame-pointer -funwind-tables -fvisibility=hidden -Wno-variadic-macros"}, {"sha": "c375f63a3806dee2d6ee12a4df2d3ba5f633cfbd", "filename": "libsanitizer/sanitizer_common/Makefile.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73aa401ecf498ad3d739bde4127da73e2eb01932/libsanitizer%2Fsanitizer_common%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73aa401ecf498ad3d739bde4127da73e2eb01932/libsanitizer%2Fsanitizer_common%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libsanitizer%2Fsanitizer_common%2FMakefile.in?ref=73aa401ecf498ad3d739bde4127da73e2eb01932", "patch": "@@ -291,7 +291,7 @@ top_srcdir = @top_srcdir@\n AM_CPPFLAGS = -I $(top_srcdir)/include -isystem $(top_srcdir)/include/system\n \n # May be used by toolexeclibdir.\n-gcc_version := $(shell cat $(top_srcdir)/../gcc/BASE-VER)\n+gcc_version := $(shell @get_gcc_base_ver@ $(top_srcdir)/../gcc/BASE-VER)\n AM_CXXFLAGS = -Wall -W -Wno-unused-parameter -Wwrite-strings -pedantic \\\n \t-Wno-long-long -fPIC -fno-builtin -fno-exceptions -fno-rtti \\\n \t-fomit-frame-pointer -funwind-tables -fvisibility=hidden \\"}, {"sha": "53a8d1cb0cd06c07c4dfd03e005d2fa4ea295a16", "filename": "libsanitizer/tsan/Makefile.am", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73aa401ecf498ad3d739bde4127da73e2eb01932/libsanitizer%2Ftsan%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73aa401ecf498ad3d739bde4127da73e2eb01932/libsanitizer%2Ftsan%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libsanitizer%2Ftsan%2FMakefile.am?ref=73aa401ecf498ad3d739bde4127da73e2eb01932", "patch": "@@ -1,7 +1,7 @@\n AM_CPPFLAGS = -I $(top_srcdir) -I $(top_srcdir)/include\n \n # May be used by toolexeclibdir.\n-gcc_version := $(shell cat $(top_srcdir)/../gcc/BASE-VER)\n+gcc_version := $(shell @get_gcc_base_ver@ $(top_srcdir)/../gcc/BASE-VER)\n \n DEFS = -D_GNU_SOURCE -D_DEBUG -D__STDC_CONSTANT_MACROS -D__STDC_FORMAT_MACROS -D__STDC_LIMIT_MACROS -DCAN_SANITIZE_UB=0\n AM_CXXFLAGS = -Wall -W -Wno-unused-parameter -Wwrite-strings -pedantic -Wno-long-long  -fPIC -fno-builtin -fno-exceptions -fno-rtti -fomit-frame-pointer -funwind-tables -fvisibility=hidden -Wno-variadic-macros"}, {"sha": "770c053e64f608aee698df91a744314eca3990e7", "filename": "libsanitizer/tsan/Makefile.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73aa401ecf498ad3d739bde4127da73e2eb01932/libsanitizer%2Ftsan%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73aa401ecf498ad3d739bde4127da73e2eb01932/libsanitizer%2Ftsan%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libsanitizer%2Ftsan%2FMakefile.in?ref=73aa401ecf498ad3d739bde4127da73e2eb01932", "patch": "@@ -307,7 +307,7 @@ top_srcdir = @top_srcdir@\n AM_CPPFLAGS = -I $(top_srcdir) -I $(top_srcdir)/include\n \n # May be used by toolexeclibdir.\n-gcc_version := $(shell cat $(top_srcdir)/../gcc/BASE-VER)\n+gcc_version := $(shell @get_gcc_base_ver@ $(top_srcdir)/../gcc/BASE-VER)\n AM_CXXFLAGS = -Wall -W -Wno-unused-parameter -Wwrite-strings -pedantic \\\n \t-Wno-long-long -fPIC -fno-builtin -fno-exceptions -fno-rtti \\\n \t-fomit-frame-pointer -funwind-tables -fvisibility=hidden \\"}, {"sha": "cb27091137a03e29378469d8b0edc5009f28fb75", "filename": "libsanitizer/ubsan/Makefile.am", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73aa401ecf498ad3d739bde4127da73e2eb01932/libsanitizer%2Fubsan%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73aa401ecf498ad3d739bde4127da73e2eb01932/libsanitizer%2Fubsan%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libsanitizer%2Fubsan%2FMakefile.am?ref=73aa401ecf498ad3d739bde4127da73e2eb01932", "patch": "@@ -1,7 +1,7 @@\n AM_CPPFLAGS = -I $(top_srcdir) -I $(top_srcdir)/include\n \n # May be used by toolexeclibdir.\n-gcc_version := $(shell cat $(top_srcdir)/../gcc/BASE-VER)\n+gcc_version := $(shell @get_gcc_base_ver@ $(top_srcdir)/../gcc/BASE-VER)\n \n DEFS = -D_GNU_SOURCE -D_DEBUG -D__STDC_CONSTANT_MACROS -D__STDC_FORMAT_MACROS -D__STDC_LIMIT_MACROS -DPIC -DCAN_SANITIZE_UB=1\n AM_CXXFLAGS = -Wall -W -Wno-unused-parameter -Wwrite-strings -pedantic -Wno-long-long  -fPIC -fno-builtin -fno-exceptions -fno-rtti -fomit-frame-pointer -funwind-tables -fvisibility=hidden -Wno-variadic-macros"}, {"sha": "1664ce9497e7104a162a62c5b377d29515379e86", "filename": "libsanitizer/ubsan/Makefile.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73aa401ecf498ad3d739bde4127da73e2eb01932/libsanitizer%2Fubsan%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73aa401ecf498ad3d739bde4127da73e2eb01932/libsanitizer%2Fubsan%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libsanitizer%2Fubsan%2FMakefile.in?ref=73aa401ecf498ad3d739bde4127da73e2eb01932", "patch": "@@ -286,7 +286,7 @@ top_srcdir = @top_srcdir@\n AM_CPPFLAGS = -I $(top_srcdir) -I $(top_srcdir)/include\n \n # May be used by toolexeclibdir.\n-gcc_version := $(shell cat $(top_srcdir)/../gcc/BASE-VER)\n+gcc_version := $(shell @get_gcc_base_ver@ $(top_srcdir)/../gcc/BASE-VER)\n AM_CXXFLAGS = -Wall -W -Wno-unused-parameter -Wwrite-strings -pedantic \\\n \t-Wno-long-long -fPIC -fno-builtin -fno-exceptions -fno-rtti \\\n \t-fomit-frame-pointer -funwind-tables -fvisibility=hidden \\"}, {"sha": "be5d9930ecc7cb81534b0e8fe3d350a9f27cf59b", "filename": "libvtv/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73aa401ecf498ad3d739bde4127da73e2eb01932/libvtv%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73aa401ecf498ad3d739bde4127da73e2eb01932/libvtv%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libvtv%2FChangeLog?ref=73aa401ecf498ad3d739bde4127da73e2eb01932", "patch": "@@ -1,3 +1,10 @@\n+2017-01-21  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR other/79046\n+\t* testsuite/Makefile.am (gcc_version): Use @get_gcc_base_ver@ instead\n+\tof cat to get version from BASE-VER file.\n+\t* testsuite/Makefile.in: Regenerated.\n+\n 2017-01-17  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR other/79046"}, {"sha": "a9a0144185abd39efd4b33cc2ea27eac637d2899", "filename": "libvtv/testsuite/Makefile.am", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73aa401ecf498ad3d739bde4127da73e2eb01932/libvtv%2Ftestsuite%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73aa401ecf498ad3d739bde4127da73e2eb01932/libvtv%2Ftestsuite%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libvtv%2Ftestsuite%2FMakefile.am?ref=73aa401ecf498ad3d739bde4127da73e2eb01932", "patch": "@@ -3,7 +3,7 @@\n AUTOMAKE_OPTIONS = foreign dejagnu\n \n # May be used by various substitution variables.\n-gcc_version := $(shell cat $(top_srcdir)/../gcc/BASE-VER)\n+gcc_version := $(shell @get_gcc_base_ver@ $(top_srcdir)/../gcc/BASE-VER)\n \n EXPECT = $(shell if test -f $(top_builddir)/../expect/expect; then \\\n \t   echo $(top_builddir)/../expect/expect; else echo expect; fi)"}, {"sha": "b5dfd29973ce8afad2af63ec50a1717d2360078c", "filename": "libvtv/testsuite/Makefile.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73aa401ecf498ad3d739bde4127da73e2eb01932/libvtv%2Ftestsuite%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73aa401ecf498ad3d739bde4127da73e2eb01932/libvtv%2Ftestsuite%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libvtv%2Ftestsuite%2FMakefile.in?ref=73aa401ecf498ad3d739bde4127da73e2eb01932", "patch": "@@ -220,7 +220,7 @@ toplevel_srcdir = @toplevel_srcdir@\n AUTOMAKE_OPTIONS = foreign dejagnu\n \n # May be used by various substitution variables.\n-gcc_version := $(shell cat $(top_srcdir)/../gcc/BASE-VER)\n+gcc_version := $(shell @get_gcc_base_ver@ $(top_srcdir)/../gcc/BASE-VER)\n EXPECT = $(shell if test -f $(top_builddir)/../expect/expect; then \\\n \t   echo $(top_builddir)/../expect/expect; else echo expect; fi)\n "}]}