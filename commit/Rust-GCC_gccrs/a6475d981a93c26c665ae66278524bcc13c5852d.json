{"sha": "a6475d981a93c26c665ae66278524bcc13c5852d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTY0NzVkOTgxYTkzYzI2YzY2NWFlNjYyNzg1MjRiY2MxM2M1ODUyZA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "1998-01-20T00:57:39Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "1998-01-20T00:57:39Z"}, "message": "tests from mark\n\nFrom-SVN: r17427", "tree": {"sha": "72d843a75d4a103f7a6f370927e21fbaa0103261", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/72d843a75d4a103f7a6f370927e21fbaa0103261"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a6475d981a93c26c665ae66278524bcc13c5852d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a6475d981a93c26c665ae66278524bcc13c5852d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a6475d981a93c26c665ae66278524bcc13c5852d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a6475d981a93c26c665ae66278524bcc13c5852d/comments", "author": null, "committer": null, "parents": [{"sha": "756506468674bd03d9a3b8fa25f8b33bd49878b3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/756506468674bd03d9a3b8fa25f8b33bd49878b3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/756506468674bd03d9a3b8fa25f8b33bd49878b3"}], "stats": {"total": 682, "additions": 660, "deletions": 22}, "files": [{"sha": "53b9510102f547ebf7e15292654019a73942fe55", "filename": "gcc/testsuite/g++.old-deja/g++.mike/p5840.C", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6475d981a93c26c665ae66278524bcc13c5852d/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Fp5840.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6475d981a93c26c665ae66278524bcc13c5852d/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Fp5840.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Fp5840.C?ref=a6475d981a93c26c665ae66278524bcc13c5852d", "patch": "@@ -17,17 +17,19 @@ public:\n   int value (Foo* a) { return (a->*Id)(); }\n };\n \n-template class Bar <Derived, &Signal::Name>;\n+/* The following line is illegal under the new rules for non-type\n+   template arguments in the standard, so it is commented out.  */\n+/* template class Bar <Derived, &Signal::Name>; */\n template class Bar <Signal, &Signal::Name>;\n template class Bar <Derived, &Derived::Name>;\n \n Derived a;\n \n-Bar<Derived, &Signal::Name> dispatcher1;\n+/* Bar<Derived, &Signal::Name> dispatcher1; */\n Bar<Derived, &Derived::Name> dispatcher2;\n \n main() {\n-  int i1 = dispatcher1.value(&a);\n+  /* int i1 = dispatcher1.value(&a); */\n   int i2 = dispatcher2.value(&a);\n-  return i1 != 1 || i2 != 2;\n+  return /* i1 != 1 || */ i2 != 2;\n }"}, {"sha": "a61d9023f8cc91eb537ba888d7aa143ceac05111", "filename": "gcc/testsuite/g++.old-deja/g++.mike/pt3.C", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6475d981a93c26c665ae66278524bcc13c5852d/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Fpt3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6475d981a93c26c665ae66278524bcc13c5852d/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Fpt3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Fpt3.C?ref=a6475d981a93c26c665ae66278524bcc13c5852d", "patch": "@@ -15,11 +15,14 @@ syHandle<Repr>::~syHandle()\n }\n \n typedef char * char_ptr_t;\n+\n+template <>\n syHandle<char_ptr_t>::syHandle() \n {\n     _repr = 0;\n }\n \n+template <>\n syHandle<char_ptr_t>::~syHandle() \n {\n     _repr = 0;"}, {"sha": "7c1563e93a7cceb050b856e3bd2c6fa37ff93705", "filename": "gcc/testsuite/g++.old-deja/g++.mike/pt4.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6475d981a93c26c665ae66278524bcc13c5852d/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Fpt4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6475d981a93c26c665ae66278524bcc13c5852d/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Fpt4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Fpt4.C?ref=a6475d981a93c26c665ae66278524bcc13c5852d", "patch": "@@ -1,4 +1,4 @@\n // Build don't link:\n \n template <char* c> struct B { B() { } };\n-B<0> bnull; \n+B<0> bnull; // ERROR - could not convert template argument"}, {"sha": "c18e55c63dc40a3cdf382eeb22939ac8099db690", "filename": "gcc/testsuite/g++.old-deja/g++.other/static1.C", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6475d981a93c26c665ae66278524bcc13c5852d/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fstatic1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6475d981a93c26c665ae66278524bcc13c5852d/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fstatic1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fstatic1.C?ref=a6475d981a93c26c665ae66278524bcc13c5852d", "patch": "@@ -0,0 +1,8 @@\n+extern \"C\" void abort();\n+\n+struct S\n+{\n+  static const int i = 3;\n+};\n+\n+const int S::i = 2; // ERROR - duplicate initialization"}, {"sha": "6b22b86a30f4a2129fd437919899c9f94c326653", "filename": "gcc/testsuite/g++.old-deja/g++.pt/bad-type.C", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6475d981a93c26c665ae66278524bcc13c5852d/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fbad-type.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6475d981a93c26c665ae66278524bcc13c5852d/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fbad-type.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fbad-type.C?ref=a6475d981a93c26c665ae66278524bcc13c5852d", "patch": "@@ -0,0 +1,19 @@\n+template<class Type>\n+class A\n+{\n+public:\n+  Type m;\n+};\n+\n+template<class Type>\n+void f(A<Type>& a, Type d)\n+{\n+  A.m=d; // ERROR - invalid use of template\n+}\n+\n+int main()\n+{\n+  A<int> a;\n+  f(a,2);\n+}\n+ "}, {"sha": "5942fe744b6c9b5a3f78e0064d24db907ac14eda", "filename": "gcc/testsuite/g++.old-deja/g++.pt/explicit32.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6475d981a93c26c665ae66278524bcc13c5852d/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fexplicit32.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6475d981a93c26c665ae66278524bcc13c5852d/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fexplicit32.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fexplicit32.C?ref=a6475d981a93c26c665ae66278524bcc13c5852d", "patch": "@@ -12,7 +12,7 @@ struct S<int>\n   void foo();\n };\n \n-template <>\n+\n void S<int>::foo()\n {\n }"}, {"sha": "487525eb933237863c651701e78060268d8cf0da", "filename": "gcc/testsuite/g++.old-deja/g++.pt/explicit34.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6475d981a93c26c665ae66278524bcc13c5852d/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fexplicit34.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6475d981a93c26c665ae66278524bcc13c5852d/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fexplicit34.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fexplicit34.C?ref=a6475d981a93c26c665ae66278524bcc13c5852d", "patch": "@@ -4,7 +4,7 @@ template <class T>\n void foo(T t);\n \n template <>\n-void foo(int) {}; // ERROR - redefinition.\n+void foo(int) {}; \n \n template <>\n-void foo<int>(int) {} // ERROR - redefinition.\n+void foo<int>(int) {} // ERROR - duplicate specialization."}, {"sha": "27121b667b2af70dc805d66c59237226a3b60b73", "filename": "gcc/testsuite/g++.old-deja/g++.pt/explicit38.C", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6475d981a93c26c665ae66278524bcc13c5852d/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fexplicit38.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6475d981a93c26c665ae66278524bcc13c5852d/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fexplicit38.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fexplicit38.C?ref=a6475d981a93c26c665ae66278524bcc13c5852d", "patch": "@@ -0,0 +1,7 @@\n+template <int I>\n+void f(int j);\n+\n+void g()\n+{\n+  f<7, 12>(3); // ERROR - no matching function.\n+}"}, {"sha": "906ef30aab103ce44c29438f0f7bebd674c66f2a", "filename": "gcc/testsuite/g++.old-deja/g++.pt/explicit39.C", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6475d981a93c26c665ae66278524bcc13c5852d/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fexplicit39.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6475d981a93c26c665ae66278524bcc13c5852d/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fexplicit39.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fexplicit39.C?ref=a6475d981a93c26c665ae66278524bcc13c5852d", "patch": "@@ -0,0 +1,7 @@\n+template <class T>\n+void f(int i);\n+\n+void g()\n+{\n+  f<7>(3); // ERROR - no matching function.\n+}"}, {"sha": "d237924902ea3e85cc18b01e3f810a4dd67a28ef", "filename": "gcc/testsuite/g++.old-deja/g++.pt/explicit40.C", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6475d981a93c26c665ae66278524bcc13c5852d/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fexplicit40.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6475d981a93c26c665ae66278524bcc13c5852d/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fexplicit40.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fexplicit40.C?ref=a6475d981a93c26c665ae66278524bcc13c5852d", "patch": "@@ -0,0 +1,27 @@\n+extern \"C\" void abort();\n+\n+template <void* P>\n+void f(int j);\n+\n+template <unsigned int I>\n+void f(int j);\n+\n+\n+template <void* P>\n+void f(int j)\n+{\n+  abort();\n+}\n+\n+\n+template <unsigned int I>\n+void f(int j)\n+{\n+}\n+\n+\n+int main()\n+{\n+  f<3>(7);\n+}\n+"}, {"sha": "b5ca475462a5254b8550e3dcc2b100af43edab52", "filename": "gcc/testsuite/g++.old-deja/g++.pt/explicit41.C", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6475d981a93c26c665ae66278524bcc13c5852d/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fexplicit41.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6475d981a93c26c665ae66278524bcc13c5852d/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fexplicit41.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fexplicit41.C?ref=a6475d981a93c26c665ae66278524bcc13c5852d", "patch": "@@ -0,0 +1,8 @@\n+template <int I>\n+void f(int i);\n+\n+void g()\n+{\n+  int i;\n+  f<i>(7); // ERROR - template argument 1 is invalid.\n+}"}, {"sha": "c19ffd025633d3d96a65abffd69feeb0b5820c96", "filename": "gcc/testsuite/g++.old-deja/g++.pt/explicit42.C", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6475d981a93c26c665ae66278524bcc13c5852d/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fexplicit42.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6475d981a93c26c665ae66278524bcc13c5852d/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fexplicit42.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fexplicit42.C?ref=a6475d981a93c26c665ae66278524bcc13c5852d", "patch": "@@ -0,0 +1,17 @@\n+extern \"C\" void abort(void);\n+\n+template <int I>\n+void f(int i)\n+{\n+}\n+\n+template <void*>\n+void f(int i) \n+{ \n+  abort();\n+}\n+\n+int main()\n+{\n+  f<0>(3);\n+}"}, {"sha": "6396f09dde663d1c674e67afed7f7dcaac4b65ee", "filename": "gcc/testsuite/g++.old-deja/g++.pt/explicit43.C", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6475d981a93c26c665ae66278524bcc13c5852d/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fexplicit43.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6475d981a93c26c665ae66278524bcc13c5852d/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fexplicit43.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fexplicit43.C?ref=a6475d981a93c26c665ae66278524bcc13c5852d", "patch": "@@ -0,0 +1,23 @@\n+extern \"C\" void abort(void);\n+\n+void F(int)\n+{\n+}\n+\n+\n+void F(double)\n+{\n+  abort();\n+}\n+\n+template <void (*F)(int)> \n+void g()\n+{\n+  (*F)(3);\n+}\n+\n+\n+int main()\n+{\n+  g<&F>();\n+}"}, {"sha": "1d9c7580a68ad11fda26913f9ae3f51dc944fb11", "filename": "gcc/testsuite/g++.old-deja/g++.pt/instantiate1.C", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6475d981a93c26c665ae66278524bcc13c5852d/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Finstantiate1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6475d981a93c26c665ae66278524bcc13c5852d/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Finstantiate1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Finstantiate1.C?ref=a6475d981a93c26c665ae66278524bcc13c5852d", "patch": "@@ -0,0 +1,22 @@\n+// Build don't link:\n+\n+template <class T>\n+void f(T t);\n+\n+template void f<int>(int);\n+template void f<>(long);\n+\n+template <class T>\n+struct S\n+{\n+  void bar(int) {}\n+  \n+  template <class U>\n+  void baz(U u) {}\n+};\n+\n+\n+template S<char>;\n+template void S<int>::bar(int);\n+template void S<double>::baz<short>(short);\n+template void S<long>::baz<>(char);"}, {"sha": "1b9e5155b520421704a18cf97c0fad7a392bb461", "filename": "gcc/testsuite/g++.old-deja/g++.pt/local1.C", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6475d981a93c26c665ae66278524bcc13c5852d/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Flocal1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6475d981a93c26c665ae66278524bcc13c5852d/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Flocal1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Flocal1.C?ref=a6475d981a93c26c665ae66278524bcc13c5852d", "patch": "@@ -0,0 +1,21 @@\n+template <class STRUCT, class MEMBER> inline STRUCT *\n+setback(MEMBER *bp, MEMBER STRUCT::*offset)\n+{\n+        if(!bp) return 0;\n+        union { int i; MEMBER STRUCT::*of; } u;\n+        u.of = offset;\n+        return (STRUCT *) ((int) bp - u.i);\n+}\n+ \n+\n+struct S\n+{\n+  int i;\n+};\n+\n+int main()\n+{\n+  S s;\n+\n+  S* sp = setback (&s.i, &S::i);\n+}"}, {"sha": "4aafc69548664d1c7924522251dcaa209d2f28ff", "filename": "gcc/testsuite/g++.old-deja/g++.pt/local2.C", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6475d981a93c26c665ae66278524bcc13c5852d/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Flocal2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6475d981a93c26c665ae66278524bcc13c5852d/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Flocal2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Flocal2.C?ref=a6475d981a93c26c665ae66278524bcc13c5852d", "patch": "@@ -0,0 +1,20 @@\n+extern \"C\" void abort();\n+\n+template <class T>\n+void f(T)\n+{\n+  struct S {\n+    int i;\n+  } s;\n+\n+  s.i = 3;\n+\n+  if (s.i != 3)\n+    abort();\n+}\n+\n+\n+int main()\n+{\n+  f(7);\n+}"}, {"sha": "58c2627cb3c64fe3b7a31dcd62ba88cca91a186a", "filename": "gcc/testsuite/g++.old-deja/g++.pt/local3.C", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6475d981a93c26c665ae66278524bcc13c5852d/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Flocal3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6475d981a93c26c665ae66278524bcc13c5852d/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Flocal3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Flocal3.C?ref=a6475d981a93c26c665ae66278524bcc13c5852d", "patch": "@@ -0,0 +1,22 @@\n+extern \"C\" void abort();\n+\n+template <class T>\n+void f(T)\n+{\n+  struct S {\n+    int i;\n+  };\n+\n+  S s;\n+\n+  s.i = 3;\n+\n+  if (s.i != 3)\n+    abort();\n+}\n+\n+\n+int main()\n+{\n+  f(7);\n+}"}, {"sha": "6a7eb341e5b9353116cfa962cb735d051acb09d2", "filename": "gcc/testsuite/g++.old-deja/g++.pt/local4.C", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6475d981a93c26c665ae66278524bcc13c5852d/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Flocal4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6475d981a93c26c665ae66278524bcc13c5852d/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Flocal4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Flocal4.C?ref=a6475d981a93c26c665ae66278524bcc13c5852d", "patch": "@@ -0,0 +1,25 @@\n+extern \"C\" void abort();\n+\n+template <class T>\n+struct S {};\n+\n+S<int> si;\n+\n+template <class T>\n+int f(T t)\n+{\n+  struct S { \n+    int g(int i) { return i + 2; }\n+  };\n+\n+  S s;\n+\n+  return s.g(t) + s.g(t);\n+}\n+\n+\n+int main()\n+{\n+  if (f(3) != 10)\n+    abort();\n+}"}, {"sha": "b49525c34841781a562b32203b417b08c253ad55", "filename": "gcc/testsuite/g++.old-deja/g++.pt/local5.C", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6475d981a93c26c665ae66278524bcc13c5852d/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Flocal5.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6475d981a93c26c665ae66278524bcc13c5852d/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Flocal5.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Flocal5.C?ref=a6475d981a93c26c665ae66278524bcc13c5852d", "patch": "@@ -0,0 +1,24 @@\n+template <class INT>\n+class b\n+{\n+private:\n+  char a(int x)\n+  {\n+    union {\n+      int i;\n+      char c;\n+    } val;\n+    val.i = x;\n+    return val.c;\n+  };\n+\n+public:\n+  b()  {\n+  }\n+};\n+\n+int main() {\n+  b<int> n;\n+  return 0;\n+}\n+   "}, {"sha": "37e79c8cfef231907207180cf00002bb9a276f2c", "filename": "gcc/testsuite/g++.old-deja/g++.pt/memtemp28.C", "status": "modified", "additions": 8, "deletions": 5, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6475d981a93c26c665ae66278524bcc13c5852d/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fmemtemp28.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6475d981a93c26c665ae66278524bcc13c5852d/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fmemtemp28.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fmemtemp28.C?ref=a6475d981a93c26c665ae66278524bcc13c5852d", "patch": "@@ -1,17 +1,17 @@\n-// Build don't run:\n-// GROUPS passed templates membertemplates\n-extern \"C\" int printf(const char*, ...);\n+extern \"C\" void abort();\n+\n+int k;\n \n template <class X>\n struct S\n {\n   template <class U>\n   void f(U u)\n-  { printf (\"In S::f(U)\\n\"); g(u); }\n+  { ++k; g(u); }\n \n   template <class U>\n   void g(U u)\n-  { printf (\"In S::g(U)\\n\"); }\n+  { ++k; }\n \n   int c[16];\n };\n@@ -21,4 +21,7 @@ int main()\n   S<char*> s;\n   s.f(3);\n   s.f(\"adf\");\n+\n+  if (k != 4)\n+    abort();\n }"}, {"sha": "ef49d84317e0562e7ea273054b9fcfbb17e662af", "filename": "gcc/testsuite/g++.old-deja/g++.pt/memtemp65.C", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6475d981a93c26c665ae66278524bcc13c5852d/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fmemtemp65.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6475d981a93c26c665ae66278524bcc13c5852d/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fmemtemp65.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fmemtemp65.C?ref=a6475d981a93c26c665ae66278524bcc13c5852d", "patch": "@@ -0,0 +1,23 @@\n+// Build don't link:\n+\n+template<unsigned int n> struct PartialDotProduct {\n+    template<class T>\n+    static T Expand(T* a, T* b) { return T(); }\n+};\n+\n+const int N = 10;\n+\n+template<class In1, class In2>\n+void\n+dot(In1 f1, In2 f2)\n+{\n+  PartialDotProduct<N>::Expand(f1, f2);\n+\n+}\n+\n+int main()\n+{\n+  double a[N], b[N];\n+  \n+  dot(&a[0], &b[0]);\n+}"}, {"sha": "d7c1f57fc6caa3a169a2693a4d4b23eddab713eb", "filename": "gcc/testsuite/g++.old-deja/g++.pt/memtemp66.C", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6475d981a93c26c665ae66278524bcc13c5852d/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fmemtemp66.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6475d981a93c26c665ae66278524bcc13c5852d/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fmemtemp66.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fmemtemp66.C?ref=a6475d981a93c26c665ae66278524bcc13c5852d", "patch": "@@ -0,0 +1,15 @@\n+// Build don't link:\n+\n+template <class T>\n+struct S\n+{\n+  template <class U>\n+  void f(U u) { this->template f<>(3); }\n+};\n+\n+\n+void g()\n+{\n+  S<char> s;\n+  s.f(1.0);\n+}"}, {"sha": "bcf5960638441c92980667207feb5da3dd1d5b09", "filename": "gcc/testsuite/g++.old-deja/g++.pt/memtemp67.C", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6475d981a93c26c665ae66278524bcc13c5852d/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fmemtemp67.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6475d981a93c26c665ae66278524bcc13c5852d/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fmemtemp67.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fmemtemp67.C?ref=a6475d981a93c26c665ae66278524bcc13c5852d", "patch": "@@ -0,0 +1,19 @@\n+template <class T>\n+struct A\n+{\n+  template <class T2>\n+  operator A<T2>() const { return A<T2>(); }\n+};\n+\n+main()\n+{\n+  A<int> a1;\n+  A<long> a2;    \n+  A<double> a3;\n+  A<char> a4;\n+\n+  a2 = a1.operator A<long>();\n+  a3 = (A<double>) a1;                   \n+  a4 = a1;\n+}\n+ "}, {"sha": "7efaeb059c0e53d882ad3e4a11dd7b9ee6f9ba5b", "filename": "gcc/testsuite/g++.old-deja/g++.pt/recursion.C", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6475d981a93c26c665ae66278524bcc13c5852d/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Frecursion.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6475d981a93c26c665ae66278524bcc13c5852d/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Frecursion.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Frecursion.C?ref=a6475d981a93c26c665ae66278524bcc13c5852d", "patch": "@@ -0,0 +1,31 @@\n+// Build don't link:\n+\n+const double M_PI=3.14159265358979323846;\n+\n+template<int N,int I,int J,int K>\n+inline double SineSeries()\n+{\n+  const double x=I*2*M_PI/N;\n+  const bool go=K+1!=J;\n+  return 1.0-x*x/(2*K+2)/(2*K+3)*SineSeries<N*go,I*go,J*go,(K+1)*go>();\n+}\n+\n+template<>\n+inline double SineSeries<0,0,0,0>()\n+{\n+  return 1.0;\n+}\n+\n+template<int N,int I>\n+inline double Sine()\n+{\n+  const double x=(I*2*M_PI/N);\n+  return x * SineSeries<N,I,10,0>();\n+}\n+\n+int main()\n+{\n+  double f=Sine<32,5>();\n+  return 0;\n+}\n+ "}, {"sha": "8cb3a2b30c7a3d9452d04abfbdd45ee84aca9d87", "filename": "gcc/testsuite/g++.old-deja/g++.pt/recursion2.C", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6475d981a93c26c665ae66278524bcc13c5852d/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Frecursion2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6475d981a93c26c665ae66278524bcc13c5852d/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Frecursion2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Frecursion2.C?ref=a6475d981a93c26c665ae66278524bcc13c5852d", "patch": "@@ -0,0 +1,25 @@\n+template< int i > struct T :\n+public T< i-1 >\n+{\n+};\n+\n+template<> struct T< 0 >\n+{\n+};\n+\n+template< class F > struct T1 :\n+public T< F::dim >\n+{\n+};\n+\n+template< int i > struct S\n+{\n+  enum { dim = i } ;\n+};\n+\n+int main()\n+{\n+  T1< S< 4 > > t ;\n+  return( 0 ) ;\n+}\n+"}, {"sha": "10947aa8e8cfed7ba5429e5370bc39eaeb312e29", "filename": "gcc/testsuite/g++.old-deja/g++.pt/spec10.C", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6475d981a93c26c665ae66278524bcc13c5852d/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fspec10.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6475d981a93c26c665ae66278524bcc13c5852d/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fspec10.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fspec10.C?ref=a6475d981a93c26c665ae66278524bcc13c5852d", "patch": "@@ -0,0 +1,26 @@\n+extern \"C\" void abort();\n+\n+template <class T>\n+struct S\n+{\n+  template <int i>\n+  int f(int j) { abort(); return 0; }\n+\n+  template <>\n+  int f<7>(int j) { return j + 7; }\n+\n+  template <>\n+  int f<8>(int j) { return j + 8; }\n+};\n+\n+\n+int main()\n+{\n+  S<double> s;\n+\n+  if (s.template f<7>(3) != 10)\n+    abort();\n+\n+  if (s.template f<8>(3) != 11)\n+    abort();\n+}"}, {"sha": "4369f18f15abf5c7fd99ad9fe4231ce2738479cb", "filename": "gcc/testsuite/g++.old-deja/g++.pt/spec11.C", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6475d981a93c26c665ae66278524bcc13c5852d/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fspec11.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6475d981a93c26c665ae66278524bcc13c5852d/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fspec11.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fspec11.C?ref=a6475d981a93c26c665ae66278524bcc13c5852d", "patch": "@@ -0,0 +1,20 @@\n+extern \"C\" void abort();\n+\n+template <class T>\n+struct S\n+{\n+  template <class U>\n+  int f(U u);\n+};\n+\n+template <class T>\n+template <>\n+int S<T>::f(int i) { return 1; }\n+\n+int main()\n+{\n+  S<char> sc;\n+\n+  if (sc.f(3) != 1)\n+    abort();\n+}"}, {"sha": "338c69ef31c31f6e38aa2d3a1c9098d25dacc45f", "filename": "gcc/testsuite/g++.old-deja/g++.pt/spec2.C", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6475d981a93c26c665ae66278524bcc13c5852d/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fspec2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6475d981a93c26c665ae66278524bcc13c5852d/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fspec2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fspec2.C?ref=a6475d981a93c26c665ae66278524bcc13c5852d", "patch": "@@ -0,0 +1,27 @@\n+// Build don't link:\n+\n+class X\n+{\n+  public:\n+    virtual void f() const = 0;\n+};\n+\n+template <class T>\n+class Y: public X\n+{\n+  public:\n+    virtual void f() const;\n+};\n+\n+template <class T>\n+void Y<T>::f() const\n+{\n+}\n+\n+template <>\n+void Y<bool>::f() const;\n+\n+template <>\n+void Y<bool>::f() const\n+{\n+}"}, {"sha": "b0e710f3b0128296ef4c170e25017f64fa68f392", "filename": "gcc/testsuite/g++.old-deja/g++.pt/spec3.C", "status": "added", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6475d981a93c26c665ae66278524bcc13c5852d/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fspec3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6475d981a93c26c665ae66278524bcc13c5852d/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fspec3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fspec3.C?ref=a6475d981a93c26c665ae66278524bcc13c5852d", "patch": "@@ -0,0 +1,37 @@\n+extern \"C\" void abort();\n+\n+class X\n+{\n+  public:\n+    virtual int f() const = 0;\n+};\n+\n+template <class T>\n+class Y: public X\n+{\n+  public:\n+    virtual int f() const;\n+};\n+\n+template <class T>\n+int Y<T>::f() const\n+{\n+  abort();\n+  return 0;\n+}\n+\n+template <>\n+int Y<bool>::f() const;\n+\n+template <>\n+int Y<bool>::f() const\n+{\n+  return 0;\n+}\n+\n+int main()\n+{\n+  Y<bool> yb;\n+\n+  yb.f();\n+}"}, {"sha": "b6e6858e0a05a92b06edc818ccc028f15f38c7c0", "filename": "gcc/testsuite/g++.old-deja/g++.pt/spec4.C", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6475d981a93c26c665ae66278524bcc13c5852d/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fspec4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6475d981a93c26c665ae66278524bcc13c5852d/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fspec4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fspec4.C?ref=a6475d981a93c26c665ae66278524bcc13c5852d", "patch": "@@ -0,0 +1,16 @@\n+// Build don't link:\n+\n+template <class T>\n+struct S {};\n+\n+template <>\n+struct S<int>\n+{\n+  void f();\n+  void g();\n+};\n+\n+void S<int>::f() {}\n+\n+template <>\n+void S<int>::g() {} // ERROR - does not match any template declaration"}, {"sha": "553d95659f00dd2369f225e2cacaad7df766b970", "filename": "gcc/testsuite/g++.old-deja/g++.pt/spec5.C", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6475d981a93c26c665ae66278524bcc13c5852d/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fspec5.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6475d981a93c26c665ae66278524bcc13c5852d/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fspec5.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fspec5.C?ref=a6475d981a93c26c665ae66278524bcc13c5852d", "patch": "@@ -0,0 +1,20 @@\n+// Build don't link:\n+\n+template <class T>\n+void f(T t1, T t2);\n+\n+template <>\n+void f(int i, int j);\n+\n+template <class T>\n+void g(T t1, T t2) {}\n+\n+template void g(int i, int j);\n+\n+void h()\n+{\n+  f(3, 'c'); // ERROR - no matching function\n+  g(3, 'c'); // ERROR - no matching function\n+}\n+\n+"}, {"sha": "b41ad9d8da685dc7caeba2b8bb1bcabb238f73b1", "filename": "gcc/testsuite/g++.old-deja/g++.pt/spec6.C", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6475d981a93c26c665ae66278524bcc13c5852d/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fspec6.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6475d981a93c26c665ae66278524bcc13c5852d/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fspec6.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fspec6.C?ref=a6475d981a93c26c665ae66278524bcc13c5852d", "patch": "@@ -0,0 +1,29 @@\n+// Build don't link:\n+\n+struct S1\n+{\n+  template <class T>\n+  void f(T t1, T t2);\n+\n+  template <>\n+  void f(int i1, int i2);\n+};\n+\n+template <class U>\n+struct S2\n+{\n+  template <class T>\n+  void f(T t1, T t2);\n+\n+  template <>\n+  void f(int i1, int i2);\n+};\n+\n+void h()\n+{\n+  S1 s1;\n+  s1.f(3, 'c'); // ERROR - no matching function\n+\n+  S2<char> s2;\n+  s2.f(3, 'c'); // ERROR - no matching function\n+}"}, {"sha": "81358d9ccca234b507f816747c04ac099ff939dd", "filename": "gcc/testsuite/g++.old-deja/g++.pt/spec7.C", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6475d981a93c26c665ae66278524bcc13c5852d/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fspec7.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6475d981a93c26c665ae66278524bcc13c5852d/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fspec7.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fspec7.C?ref=a6475d981a93c26c665ae66278524bcc13c5852d", "patch": "@@ -0,0 +1,19 @@\n+extern \"C\" void abort();\n+\n+template <class T>\n+void f(T t1, T t2);\n+\n+template <>\n+void f(int i, int j) \n+{\n+  abort();\n+}\n+\n+void f(short s, char c)\n+{\n+}\n+\n+int main()\n+{\n+  f(3, 'c');\n+}"}, {"sha": "966f69f2ee465df0f68240322051914811cc56a7", "filename": "gcc/testsuite/g++.old-deja/g++.pt/spec8.C", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6475d981a93c26c665ae66278524bcc13c5852d/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fspec8.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6475d981a93c26c665ae66278524bcc13c5852d/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fspec8.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fspec8.C?ref=a6475d981a93c26c665ae66278524bcc13c5852d", "patch": "@@ -0,0 +1,27 @@\n+extern \"C\" void abort();\n+\n+template <void* P>\n+void f(int j);\n+\n+template <int I>\n+void f(int j);\n+\n+\n+template <void* P>\n+void f(int j)\n+{\n+  abort();\n+}\n+\n+\n+template <int I>\n+void f(int j)\n+{\n+}\n+\n+\n+int main()\n+{\n+  f<3>(7);\n+}\n+"}, {"sha": "e2a220819a17d84324574f23e349768cd21b008f", "filename": "gcc/testsuite/g++.old-deja/g++.pt/spec9.C", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6475d981a93c26c665ae66278524bcc13c5852d/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fspec9.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6475d981a93c26c665ae66278524bcc13c5852d/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fspec9.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fspec9.C?ref=a6475d981a93c26c665ae66278524bcc13c5852d", "patch": "@@ -0,0 +1,21 @@\n+extern \"C\" void abort();\n+\n+template <class T>\n+inline int f(T t) \n+{\n+  return 0;\n+}\n+\n+int main()\n+{\n+  if (!f(3))\n+    abort();\n+}\n+\n+template <>\n+int f(int i) \n+{             // ERROR - specialization of f<int>(int) after instantiation\n+  return 1;\n+}\n+\n+"}, {"sha": "f4c334eaf5dae69f97c2df7b4a8c50fbcb764cd1", "filename": "gcc/testsuite/g++.old-deja/g++.pt/static_cast.C", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6475d981a93c26c665ae66278524bcc13c5852d/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fstatic_cast.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6475d981a93c26c665ae66278524bcc13c5852d/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fstatic_cast.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fstatic_cast.C?ref=a6475d981a93c26c665ae66278524bcc13c5852d", "patch": "@@ -0,0 +1,22 @@\n+// Build don't link:\n+\n+template <class InputIterator, class BinaryOperation>\n+void accumulate(InputIterator first, \n+    \t         BinaryOperation binary_op) {\n+}\n+\n+\n+template<class R> int p( int val, R& r )\n+{\n+   return val + r;\n+}\n+\n+template<class R> void f(R)\n+{\n+   accumulate(0, static_cast<int (*)(int, R&)>(p) );\n+}\n+\n+main()\n+{\n+   f(0);\n+}"}, {"sha": "4a8f05b08e32f368b0ff29681f344563eace88db", "filename": "gcc/testsuite/g++.old-deja/g++.pt/typename3.C", "status": "modified", "additions": 12, "deletions": 9, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6475d981a93c26c665ae66278524bcc13c5852d/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Ftypename3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6475d981a93c26c665ae66278524bcc13c5852d/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Ftypename3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Ftypename3.C?ref=a6475d981a93c26c665ae66278524bcc13c5852d", "patch": "@@ -1,17 +1,20 @@\n // Build don't link:\n-// GROUPS passed templates\n+\n template <class T>\n-struct bar { \n-  typedef typename T::baz baz;\n+struct A\n+{\n+  typedef T A_Type;\n };\n \n-template <class T>\n-void foo(T)\n+\n+template <class U>\n+struct B : public A<U>\n {\n-  bar<T>::baz(); // ERROR - T is int.\n-}\n+  A_Type Func();\n+};\n+\n \n-void foobar()\n+template <class U>\n+A<U>::A_Type B<U>::Func()\n {\n-  foo(3);\n }"}]}