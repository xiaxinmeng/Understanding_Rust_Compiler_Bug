{"sha": "22a08dd1269d6f5317dbb6e3a23365bb5c4e82a3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjJhMDhkZDEyNjlkNmY1MzE3ZGJiNmUzYTIzMzY1YmI1YzRlODJhMw==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2016-01-26T11:51:01Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2016-01-26T11:51:01Z"}, "message": "re PR tree-optimization/69452 (gcc ICE at -O3 on x86_64-linux-gnu in with verify_ssa failed)\n\n2016-01-26  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/69452\n\t* tree-ssa-loop-im.c (move_computations_dom_walker): Remove.\n\t(move_computations_dom_walker::before_dom_children): Rename\n\tto ...\n\t(move_computations_worker): This.\n\t(move_computations): Perform an RPO rather than a DOM walk.\n\n\t* gcc.dg/torture/pr69452.c: New testcase.\n\nFrom-SVN: r232820", "tree": {"sha": "71c8cc5082d02f37addd25e680deb148b456b7ef", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/71c8cc5082d02f37addd25e680deb148b456b7ef"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/22a08dd1269d6f5317dbb6e3a23365bb5c4e82a3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/22a08dd1269d6f5317dbb6e3a23365bb5c4e82a3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/22a08dd1269d6f5317dbb6e3a23365bb5c4e82a3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/22a08dd1269d6f5317dbb6e3a23365bb5c4e82a3/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "6c06e0e822db96b71c80e268260d2b4b4c1bc1f5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6c06e0e822db96b71c80e268260d2b4b4c1bc1f5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6c06e0e822db96b71c80e268260d2b4b4c1bc1f5"}], "stats": {"total": 73, "additions": 65, "deletions": 8}, "files": [{"sha": "65b1fb359cf33ebde019309d33cf04f086b2f425", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/22a08dd1269d6f5317dbb6e3a23365bb5c4e82a3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/22a08dd1269d6f5317dbb6e3a23365bb5c4e82a3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=22a08dd1269d6f5317dbb6e3a23365bb5c4e82a3", "patch": "@@ -1,3 +1,12 @@\n+2016-01-26  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/69452\n+\t* tree-ssa-loop-im.c (move_computations_dom_walker): Remove.\n+\t(move_computations_dom_walker::before_dom_children): Rename\n+\tto ...\n+\t(move_computations_worker): This.\n+\t(move_computations): Perform an RPO rather than a DOM walk.\n+\n 2016-01-26  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR target/69442"}, {"sha": "ec6456afc32c047f89ec05b6952c7fe2e10d1a1d", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/22a08dd1269d6f5317dbb6e3a23365bb5c4e82a3/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/22a08dd1269d6f5317dbb6e3a23365bb5c4e82a3/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=22a08dd1269d6f5317dbb6e3a23365bb5c4e82a3", "patch": "@@ -1,3 +1,8 @@\n+2016-01-26  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/69452\n+\t* gcc.dg/torture/pr69452.c: New testcase.\n+\n 2016-01-26  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR target/69442"}, {"sha": "8bd931dd45727e98a0b642063273a2e0595b742c", "filename": "gcc/testsuite/gcc.dg/torture/pr69452.c", "status": "added", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/22a08dd1269d6f5317dbb6e3a23365bb5c4e82a3/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr69452.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/22a08dd1269d6f5317dbb6e3a23365bb5c4e82a3/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr69452.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr69452.c?ref=22a08dd1269d6f5317dbb6e3a23365bb5c4e82a3", "patch": "@@ -0,0 +1,35 @@\n+/* { dg-do compile } */\n+\n+short a, f, h;\n+struct S0 {\n+    int f0;\n+} b;\n+char c, d, e, j, k;\n+int g;\n+char fn1(char p1, int p2) { return 7 >> p2 ? p1 : p2; }\n+void fn2() {\n+    int l, m, n;\n+    struct S0 o = {0};\n+    for (;;) {\n+\tint p = 1, r = e;\n+\tunsigned q = 6;\n+\tl = r == 0 ? q : q % r;\n+\tn = l;\n+\tc = f;\n+\tk = fn1(p, n ^ e);\n+\tchar s = k;\n+\tj = s / 6;\n+\tif (j) {\n+\t    int t = d, u = m = d ? t : t / d;\n+\t    h = a || u;\n+\t    b.f0 = h;\n+\t    for (; d;)\n+\t      ;\n+\t} else {\n+\t    b = o;\n+\t    if (d != g)\n+\t      for (;;)\n+\t\t;\n+\t}\n+    }\n+}"}, {"sha": "ec0fb7fcb463f45da17bcb8f6e95145654f90a4a", "filename": "gcc/tree-ssa-loop-im.c", "status": "modified", "additions": 16, "deletions": 8, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/22a08dd1269d6f5317dbb6e3a23365bb5c4e82a3/gcc%2Ftree-ssa-loop-im.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/22a08dd1269d6f5317dbb6e3a23365bb5c4e82a3/gcc%2Ftree-ssa-loop-im.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-loop-im.c?ref=22a08dd1269d6f5317dbb6e3a23365bb5c4e82a3", "patch": "@@ -1112,15 +1112,16 @@ class move_computations_dom_walker : public dom_walker\n    data stored in LIM_DATA structures associated with each statement.  Callback\n    for walk_dominator_tree.  */\n \n-edge\n-move_computations_dom_walker::before_dom_children (basic_block bb)\n+unsigned int\n+move_computations_worker (basic_block bb)\n {\n   struct loop *level;\n   unsigned cost = 0;\n   struct lim_aux_data *lim_data;\n+  unsigned int todo = 0;\n \n   if (!loop_outer (bb->loop_father))\n-    return NULL;\n+    return todo;\n \n   for (gphi_iterator bsi = gsi_start_phis (bb); !gsi_end_p (bsi); )\n     {\n@@ -1171,7 +1172,7 @@ move_computations_dom_walker::before_dom_children (basic_block bb)\n \t\t      gimple_cond_lhs (cond), gimple_cond_rhs (cond));\n \t  new_stmt = gimple_build_assign (gimple_phi_result (stmt),\n \t\t\t\t\t  COND_EXPR, t, arg0, arg1);\n-\t  todo_ |= TODO_cleanup_cfg;\n+\t  todo |= TODO_cleanup_cfg;\n \t}\n       if (INTEGRAL_TYPE_P (TREE_TYPE (gimple_assign_lhs (new_stmt)))\n \t  && (!ALWAYS_EXECUTED_IN (bb)\n@@ -1266,7 +1267,8 @@ move_computations_dom_walker::before_dom_children (basic_block bb)\n       else\n \tgsi_insert_on_edge (e, stmt);\n     }\n-  return NULL;\n+\n+  return todo;\n }\n \n /* Hoist the statements out of the loops prescribed by data stored in\n@@ -1275,14 +1277,20 @@ move_computations_dom_walker::before_dom_children (basic_block bb)\n static unsigned int\n move_computations (void)\n {\n-  move_computations_dom_walker walker (CDI_DOMINATORS);\n-  walker.walk (cfun->cfg->x_entry_block_ptr);\n+  int *rpo = XNEWVEC (int, last_basic_block_for_fn (cfun));\n+  int n = pre_and_rev_post_order_compute_fn (cfun, NULL, rpo, false);\n+  unsigned todo = 0;\n+\n+  for (int i = 0; i < n; ++i)\n+    todo |= move_computations_worker (BASIC_BLOCK_FOR_FN (cfun, rpo[i]));\n+\n+  free (rpo);\n \n   gsi_commit_edge_inserts ();\n   if (need_ssa_update_p (cfun))\n     rewrite_into_loop_closed_ssa (NULL, TODO_update_ssa);\n \n-  return walker.todo_;\n+  return todo;\n }\n \n /* Checks whether the statement defining variable *INDEX can be hoisted"}]}