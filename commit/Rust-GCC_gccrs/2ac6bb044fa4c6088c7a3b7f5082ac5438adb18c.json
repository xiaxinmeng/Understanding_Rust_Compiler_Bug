{"sha": "2ac6bb044fa4c6088c7a3b7f5082ac5438adb18c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmFjNmJiMDQ0ZmE0YzYwODhjN2EzYjdmNTA4MmFjNTQzOGFkYjE4Yw==", "commit": {"author": {"name": "Anatoly Sokolov", "email": "aesok@post.ru", "date": "2011-01-07T13:45:04Z"}, "committer": {"name": "Anatoly Sokolov", "email": "aesok@gcc.gnu.org", "date": "2011-01-07T13:45:04Z"}, "message": "xtensa.h (OUTPUT_ADDR_CONST_EXTRA): Remove.\n\n\t* config/xtensa/xtensa.h (OUTPUT_ADDR_CONST_EXTRA): Remove.\n\t* config/xtensa/xtensa-protos.h (xtensa_output_addr_const_extra):\n\tRemove.\n\t* config/xtensa/xtensa.c (xtensa_output_addr_const_extra): Make static.\n\t(TARGET_ASM_OUTPUT_ADDR_CONST_EXTRA): Define.\n\nFrom-SVN: r168568", "tree": {"sha": "711671a91b2a7606e5eb0f3825877e88c666495f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/711671a91b2a7606e5eb0f3825877e88c666495f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2ac6bb044fa4c6088c7a3b7f5082ac5438adb18c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2ac6bb044fa4c6088c7a3b7f5082ac5438adb18c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2ac6bb044fa4c6088c7a3b7f5082ac5438adb18c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2ac6bb044fa4c6088c7a3b7f5082ac5438adb18c/comments", "author": null, "committer": null, "parents": [{"sha": "0d87fa8ca8f0ccf7184e7606d60693530d0c4a13", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0d87fa8ca8f0ccf7184e7606d60693530d0c4a13", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0d87fa8ca8f0ccf7184e7606d60693530d0c4a13"}], "stats": {"total": 24, "additions": 14, "deletions": 10}, "files": [{"sha": "2c8ec555ba2feba7d5ce0f9a77000e9cd90b7c3f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ac6bb044fa4c6088c7a3b7f5082ac5438adb18c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ac6bb044fa4c6088c7a3b7f5082ac5438adb18c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2ac6bb044fa4c6088c7a3b7f5082ac5438adb18c", "patch": "@@ -1,3 +1,11 @@\n+2011-01-07  Anatoly Sokolov  <aesok@post.ru>\n+\n+\t* config/xtensa/xtensa.h (OUTPUT_ADDR_CONST_EXTRA): Remove.\n+\t* config/xtensa/xtensa-protos.h (xtensa_output_addr_const_extra):\n+\tRemove.\n+\t* config/xtensa/xtensa.c (xtensa_output_addr_const_extra): Make static.\n+\t(TARGET_ASM_OUTPUT_ADDR_CONST_EXTRA): Define.\n+\n 2011-01-06  Eric Botcazou  <ebotcazou@adacore.com>\n \n \tPR debug/46704"}, {"sha": "356e0f12074013768e2bcdc8ba766c9d9eb6de95", "filename": "gcc/config/xtensa/xtensa-protos.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ac6bb044fa4c6088c7a3b7f5082ac5438adb18c/gcc%2Fconfig%2Fxtensa%2Fxtensa-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ac6bb044fa4c6088c7a3b7f5082ac5438adb18c/gcc%2Fconfig%2Fxtensa%2Fxtensa-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fxtensa%2Fxtensa-protos.h?ref=2ac6bb044fa4c6088c7a3b7f5082ac5438adb18c", "patch": "@@ -62,7 +62,6 @@ extern void init_cumulative_args (CUMULATIVE_ARGS *, int);\n \n extern void print_operand (FILE *, rtx, int);\n extern void print_operand_address (FILE *, rtx);\n-extern bool xtensa_output_addr_const_extra (FILE *, rtx);\n extern void xtensa_output_literal (FILE *, rtx, enum machine_mode, int);\n extern rtx xtensa_return_addr (int, rtx);\n extern enum reg_class xtensa_preferred_reload_class (rtx, enum reg_class, int);"}, {"sha": "0a6f34bbb8581ae35aaa3890a729aac8568b788d", "filename": "gcc/config/xtensa/xtensa.c", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ac6bb044fa4c6088c7a3b7f5082ac5438adb18c/gcc%2Fconfig%2Fxtensa%2Fxtensa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ac6bb044fa4c6088c7a3b7f5082ac5438adb18c/gcc%2Fconfig%2Fxtensa%2Fxtensa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fxtensa%2Fxtensa.c?ref=2ac6bb044fa4c6088c7a3b7f5082ac5438adb18c", "patch": "@@ -157,6 +157,7 @@ static bool xtensa_frame_pointer_required (void);\n static rtx xtensa_static_chain (const_tree, bool);\n static void xtensa_asm_trampoline_template (FILE *);\n static void xtensa_trampoline_init (rtx, tree, rtx);\n+static bool xtensa_output_addr_const_extra (FILE *, rtx);\n \n static const int reg_nonleaf_alloc_order[FIRST_PSEUDO_REGISTER] =\n   REG_ALLOC_ORDER;\n@@ -274,6 +275,9 @@ static const struct default_options xtensa_option_optimization_table[] =\n #undef TARGET_OPTION_OPTIMIZATION_TABLE\n #define TARGET_OPTION_OPTIMIZATION_TABLE xtensa_option_optimization_table\n \n+#undef TARGET_ASM_OUTPUT_ADDR_CONST_EXTRA\n+#define TARGET_ASM_OUTPUT_ADDR_CONST_EXTRA xtensa_output_addr_const_extra\n+\n struct gcc_target targetm = TARGET_INITIALIZER;\n \n \f\n@@ -2437,8 +2441,9 @@ print_operand_address (FILE *file, rtx addr)\n     }\n }\n \n+/* Implement TARGET_ASM_OUTPUT_ADDR_CONST_EXTRA.  */\n \n-bool\n+static bool\n xtensa_output_addr_const_extra (FILE *fp, rtx x)\n {\n   if (GET_CODE (x) == UNSPEC && XVECLEN (x, 0) == 1)"}, {"sha": "ab1738333f214eafbcefc1abfb2cb02e7a81179b", "filename": "gcc/config/xtensa/xtensa.h", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ac6bb044fa4c6088c7a3b7f5082ac5438adb18c/gcc%2Fconfig%2Fxtensa%2Fxtensa.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ac6bb044fa4c6088c7a3b7f5082ac5438adb18c/gcc%2Fconfig%2Fxtensa%2Fxtensa.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fxtensa%2Fxtensa.h?ref=2ac6bb044fa4c6088c7a3b7f5082ac5438adb18c", "patch": "@@ -816,14 +816,6 @@ typedef struct xtensa_args\n #define PRINT_OPERAND(FILE, X, CODE) print_operand (FILE, X, CODE)\n #define PRINT_OPERAND_ADDRESS(FILE, ADDR) print_operand_address (FILE, ADDR)\n \n-/* Recognize machine-specific patterns that may appear within\n-   constants.  Used for PIC-specific UNSPECs.  */\n-#define OUTPUT_ADDR_CONST_EXTRA(STREAM, X, FAIL)\t\t\t\\\n-  do {\t\t\t\t\t\t\t\t\t\\\n-    if (xtensa_output_addr_const_extra (STREAM, X) == FALSE)\t\t\\\n-      goto FAIL;\t\t\t\t\t\t\t\\\n-  } while (0)\n-\n /* Globalizing directive for a label.  */\n #define GLOBAL_ASM_OP \"\\t.global\\t\"\n "}]}