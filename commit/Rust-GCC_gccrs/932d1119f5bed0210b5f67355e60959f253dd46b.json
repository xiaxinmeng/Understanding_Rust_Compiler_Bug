{"sha": "932d1119f5bed0210b5f67355e60959f253dd46b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTMyZDExMTlmNWJlZDAyMTBiNWY2NzM1NWU2MDk1OWYyNTNkZDQ2Yg==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-10-19T22:44:41Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-10-19T22:44:41Z"}, "message": "(distribute_notes): When search for new place to put REG_DEAD note,\n\ncall distribute_links if this new place is between i2 and i3, and i2\nuses the register.\n\nFrom-SVN: r10475", "tree": {"sha": "872c26833b33b0e37d4c2aa5d4e512c448aaee18", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/872c26833b33b0e37d4c2aa5d4e512c448aaee18"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/932d1119f5bed0210b5f67355e60959f253dd46b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/932d1119f5bed0210b5f67355e60959f253dd46b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/932d1119f5bed0210b5f67355e60959f253dd46b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/932d1119f5bed0210b5f67355e60959f253dd46b/comments", "author": null, "committer": null, "parents": [{"sha": "5918c8534aead231920714bacbef7fd458bc353c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5918c8534aead231920714bacbef7fd458bc353c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5918c8534aead231920714bacbef7fd458bc353c"}], "stats": {"total": 15, "additions": 15, "deletions": 0}, "files": [{"sha": "cd7dc12eb3e6b9afbcff54e08e504f128a95a310", "filename": "gcc/combine.c", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/932d1119f5bed0210b5f67355e60959f253dd46b/gcc%2Fcombine.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/932d1119f5bed0210b5f67355e60959f253dd46b/gcc%2Fcombine.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcombine.c?ref=932d1119f5bed0210b5f67355e60959f253dd46b", "patch": "@@ -10779,6 +10779,21 @@ distribute_notes (notes, from_insn, i3, i2, elim_i2, elim_i1)\n \t\t\t     && find_reg_fusage (tem, USE, XEXP (note, 0))))\n \t\t  {\n \t\t    place = tem;\n+\n+\t\t    /* If we are doing a 3->2 combination, and we have a\n+\t\t       register which formerly died in i3 and was not used\n+\t\t       by i2, which now no longer dies in i3 and is used in\n+\t\t       i2 but does not die in i2, and place is between i2\n+\t\t       and i3, then we may need to move a link from place to\n+\t\t       i2.  */\n+\t\t    if (i2 && INSN_CUID (place) > INSN_CUID (i2)\n+\t\t\t&& from_insn && INSN_CUID (from_insn) > INSN_CUID (i2)\n+\t\t\t&& reg_referenced_p (XEXP (note, 0), PATTERN (i2)))\n+\t\t      {\n+\t\t\trtx links = LOG_LINKS (place);\n+\t\t\tLOG_LINKS (place) = 0;\n+\t\t\tdistribute_links (links);\n+\t\t      }\n \t\t    break;\n \t\t  }\n \t\t}"}]}