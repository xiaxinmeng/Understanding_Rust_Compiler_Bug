{"sha": "2ccc703d2ee849e502ebcf9fec62e57a14a9bc18", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmNjYzcwM2QyZWU4NDllNTAyZWJjZjlmZWM2MmU1N2ExNGE5YmMxOA==", "commit": {"author": {"name": "Joern Rennecke", "email": "joern.rennecke@embecosm.com", "date": "2013-04-08T15:59:41Z"}, "committer": {"name": "Joern Rennecke", "email": "amylaar@gcc.gnu.org", "date": "2013-04-08T15:59:41Z"}, "message": "epiphany.md (mov_f+2): New peephole2 pattern.\n\n        * config/epiphany/epiphany.md (mov_f+2): New peephole2 pattern.\n        (cstoresi4): Also allow re-use of zero result when doing a NE\n        comparison to a non-zero operand.\n        Use (clobber (sratch)) for first insn if the gpr output is not needed.\n\nFrom-SVN: r197590", "tree": {"sha": "46d47865b1a985bd60629f4fb1cb063bc1ba1864", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/46d47865b1a985bd60629f4fb1cb063bc1ba1864"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2ccc703d2ee849e502ebcf9fec62e57a14a9bc18", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2ccc703d2ee849e502ebcf9fec62e57a14a9bc18", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2ccc703d2ee849e502ebcf9fec62e57a14a9bc18", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2ccc703d2ee849e502ebcf9fec62e57a14a9bc18/comments", "author": {"login": "amylaar", "id": 1663475, "node_id": "MDQ6VXNlcjE2NjM0NzU=", "avatar_url": "https://avatars.githubusercontent.com/u/1663475?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amylaar", "html_url": "https://github.com/amylaar", "followers_url": "https://api.github.com/users/amylaar/followers", "following_url": "https://api.github.com/users/amylaar/following{/other_user}", "gists_url": "https://api.github.com/users/amylaar/gists{/gist_id}", "starred_url": "https://api.github.com/users/amylaar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amylaar/subscriptions", "organizations_url": "https://api.github.com/users/amylaar/orgs", "repos_url": "https://api.github.com/users/amylaar/repos", "events_url": "https://api.github.com/users/amylaar/events{/privacy}", "received_events_url": "https://api.github.com/users/amylaar/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "5138e18df36445c37b8d46809e7a58617363abc5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5138e18df36445c37b8d46809e7a58617363abc5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5138e18df36445c37b8d46809e7a58617363abc5"}], "stats": {"total": 43, "additions": 35, "deletions": 8}, "files": [{"sha": "0ff91d8afe489ea9abd1dadc34942946a307e2b2", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ccc703d2ee849e502ebcf9fec62e57a14a9bc18/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ccc703d2ee849e502ebcf9fec62e57a14a9bc18/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2ccc703d2ee849e502ebcf9fec62e57a14a9bc18", "patch": "@@ -25,6 +25,11 @@\n \t(<op_mnc>_f, mov_f, cstoresi4): New patterns.\n \t(mov_f+1, mov_f+2): New peephole2 patterns.\n \n+\t* config/epiphany/epiphany.md (mov_f+2): New peephole2 pattern.\n+\t(cstoresi4): Also allow re-use of zero result when doing a NE\n+\tcomparison to a non-zero operand.\n+\tUse (clobber (sratch)) for first insn if the gpr output is not needed.\n+\n 2013-04-08  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c++/34949"}, {"sha": "4bb8da395115c0a8c676119e2dc261dd64f505c7", "filename": "gcc/config/epiphany/epiphany.md", "status": "modified", "additions": 30, "deletions": 8, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ccc703d2ee849e502ebcf9fec62e57a14a9bc18/gcc%2Fconfig%2Fepiphany%2Fepiphany.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ccc703d2ee849e502ebcf9fec62e57a14a9bc18/gcc%2Fconfig%2Fepiphany%2Fepiphany.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fepiphany%2Fepiphany.md?ref=2ccc703d2ee849e502ebcf9fec62e57a14a9bc18", "patch": "@@ -1789,14 +1789,30 @@\n \t\t      (const_int 0)))\n      (set (match_dup 0) (logical_op:SI (match_dup 1) (match_dup 2)))])])\n \n+(define_peephole2\n+  [(parallel\n+    [(set (match_operand:SI 0 \"gpr_operand\" \"=r\")\n+\t  (logical_op:SI (match_operand:SI 1 \"gpr_operand\"  \"r\")\n+\t\t\t (match_operand:SI 2 \"gpr_operand\" \"%r\")))\n+     (clobber (reg:CC CC_REGNUM))])\n+   (parallel\n+    [(set (reg:CC CC_REGNUM)\n+\t  (compare:CC (match_dup 0) (const_int 0)))\n+     (clobber (match_operand:SI 3 \"gpr_operand\" \"=r\"))])]\n+  \"\"\n+  [(parallel\n+    [(set (reg:CC CC_REGNUM)\n+\t  (compare:CC (logical_op:SI (match_dup 1) (match_dup 2))\n+\t\t      (const_int 0)))\n+     (set (match_dup 0) (logical_op:SI (match_dup 1) (match_dup 2)))])])\n+\n (define_expand \"cstoresi4\"\n   [(parallel\n     [(set (reg:CC CC_REGNUM)\n           (match_operand:SI 1 \"comparison_operator\"))\n-     (set (match_operand:SI 0 \"gpr_operand\" \"=r\")\n-\t  (match_operand:SI 2 \"\" \"\"))])\n+     (match_operand:SI 2 \"\" \"\")])\n    (set (match_dup 0) (match_operand:SI 3 \"arith_operand\" \"\"))\n-   (set (match_dup 0)\n+   (set (match_operand:SI 0 \"gpr_operand\" \"=r\")\n \t(if_then_else:SI (match_dup 4) (match_dup 5) (match_dup 0)))]\n   \"\"\n {\n@@ -1813,12 +1829,18 @@\n   else\n     operands[2] = force_reg (SImode, operands[2]);\n   operands[1] = gen_rtx_COMPARE (CCmode, operands[2], operands[3]);\n-  if (operands[3] != const0_rtx)\n-    operands[2] = gen_rtx_MINUS (SImode, operands[2], operands[3]);\n-  if (cmp_code != NE || operands[3] != const0_rtx)\n-    operands[3] = const0_rtx;\n+  if (cmp_code != NE)\n+    {\n+      operands[2] = gen_rtx_CLOBBER (VOIDmode, gen_rtx_SCRATCH (SImode));\n+      operands[3] = const0_rtx;\n+    }\n   else\n-    operands[3] = operands[0];\n+    {\n+      if (operands[3] != const0_rtx)\n+\toperands[2] = gen_rtx_MINUS (SImode, operands[2], operands[3]);\n+      operands[2] = gen_rtx_SET (VOIDmode, operands[0], operands[2]);\n+      operands[3] = operands[0];\n+    }\n   operands[4] = gen_rtx_fmt_ee (cmp_code, SImode,\n \t\t\t\tgen_rtx_REG (CCmode, CC_REGNUM), const0_rtx);\n   operands[5] = force_reg (SImode, GEN_INT (STORE_FLAG_VALUE));"}]}