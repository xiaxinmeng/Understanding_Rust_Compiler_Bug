{"sha": "57512331dae302ff19f29f6ca043fee2bfb1587d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTc1MTIzMzFkYWUzMDJmZjE5ZjI5ZjZjYTA0M2ZlZTJiZmIxNTg3ZA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2004-06-29T19:31:55Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2004-06-29T19:31:55Z"}, "message": "vector-defs.h: Use vector_size attribute only for GCC 3.5+...\n\n\t* gcc.dg/compat/vector-defs.h: Use vector_size attribute\n\tonly for GCC 3.5+, for GCC up to 3.4 mode(V*) attribute instead.\n\nFrom-SVN: r83873", "tree": {"sha": "75ae6779923e2c31db77c88aed99999d1898e704", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/75ae6779923e2c31db77c88aed99999d1898e704"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/57512331dae302ff19f29f6ca043fee2bfb1587d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/57512331dae302ff19f29f6ca043fee2bfb1587d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/57512331dae302ff19f29f6ca043fee2bfb1587d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/57512331dae302ff19f29f6ca043fee2bfb1587d/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b4db40bf1d01d70605906d9c6a5274acba677668", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b4db40bf1d01d70605906d9c6a5274acba677668", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b4db40bf1d01d70605906d9c6a5274acba677668"}], "stats": {"total": 71, "additions": 50, "deletions": 21}, "files": [{"sha": "f02a5bbd83d5b416aa003cc6263627d2daa9faee", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57512331dae302ff19f29f6ca043fee2bfb1587d/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57512331dae302ff19f29f6ca043fee2bfb1587d/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=57512331dae302ff19f29f6ca043fee2bfb1587d", "patch": "@@ -1,5 +1,8 @@\n 2004-06-29  Jakub Jelinek  <jakub@redhat.com>\n \n+\t* gcc.dg/compat/vector-defs.h: Use vector_size attribute\n+\tonly for GCC 3.5+, for GCC up to 3.4 mode(V*) attribute instead.\n+\n \tPR target/16195\n \t* gcc.dg/20040625-1.c: New test.\n "}, {"sha": "57140f115cd02596aec770613570324b0a72b525", "filename": "gcc/testsuite/gcc.dg/compat/vector-defs.h", "status": "modified", "additions": 47, "deletions": 21, "changes": 68, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57512331dae302ff19f29f6ca043fee2bfb1587d/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fvector-defs.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57512331dae302ff19f29f6ca043fee2bfb1587d/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fvector-defs.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fvector-defs.h?ref=57512331dae302ff19f29f6ca043fee2bfb1587d", "patch": "@@ -1,46 +1,72 @@\n /* This includes all of the vector modes that are recognized by\n-   c_common_type_for_mode, grouped by base mode.  */\n+   c_common_type_for_mode.  */\n \n typedef int __attribute__((mode(QI))) qi;\n+typedef int __attribute__((mode(HI))) hi;\n+typedef int __attribute__((mode(SI))) si;\n+typedef int __attribute__((mode(DI))) di;\n+typedef float __attribute__((mode(SF))) sf;\n+typedef float __attribute__((mode(DF))) df;\n+\n+#if __GNUC__ > 3 || (__GNUC__ == 3 && __GNUC_MINOR__ >= 5)\n+\n typedef qi __attribute__((vector_size (8))) v8qi;\n typedef qi __attribute__((vector_size (16))) v16qi;\n \n-typedef union U8QI { v8qi v; qi a[8]; } u8qi;\n-typedef union U16QI { v16qi v; qi a[16]; } u16qi;\n-\n-typedef int __attribute__((mode(HI))) hi;\n typedef hi __attribute__((vector_size (4))) v2hi;\n typedef hi __attribute__((vector_size (8))) v4hi;\n typedef hi __attribute__((vector_size (16))) v8hi;\n \n-typedef union U2HI { v2hi v; hi a[2]; } u2hi;\n-typedef union U4HI { v4hi v; hi a[4]; } u4hi;\n-typedef union U8HI { v8hi v; hi a[8]; } u8hi;\n-\n-typedef int __attribute__((mode(SI))) si;\n typedef si __attribute__((vector_size (8))) v2si;\n typedef si __attribute__((vector_size (16))) v4si;\n \n-typedef union U2SI { v2si v; si a[2]; } u2si;\n-typedef union U4SI { v4si v; si a[4]; } u4si;\n-\n-typedef int __attribute__((mode(DI))) di;\n typedef di __attribute__((vector_size (8))) v1di;\n typedef di __attribute__((vector_size (16))) v2di;\n \n-typedef union U1DI { v1di v; di a[1]; } u1di;\n-typedef union U2DI { v2di v; di a[2]; } u2di;\n-\n-typedef float __attribute__((mode(SF))) sf;\n typedef sf __attribute__((vector_size (8))) v2sf;\n typedef sf __attribute__((vector_size (16))) v4sf;\n typedef sf __attribute__((vector_size (64))) v16sf;\n \n+typedef df __attribute__((vector_size (16))) v2df;\n+\n+#else\n+\n+typedef int __attribute__((mode(V8QI))) v8qi;\n+typedef int __attribute__((mode(V16QI))) v16qi;\n+\n+typedef int __attribute__((mode(V2HI))) v2hi;\n+typedef int __attribute__((mode(V4HI))) v4hi;\n+typedef int __attribute__((mode(V8HI))) v8hi;\n+\n+typedef int __attribute__((mode(V2SI))) v2si;\n+typedef int __attribute__((mode(V4SI))) v4si;\n+\n+typedef int __attribute__((mode(V1DI))) v1di;\n+typedef int __attribute__((mode(V2DI))) v2di;\n+\n+typedef float __attribute__((mode(V2SF))) v2sf;\n+typedef float __attribute__((mode(V4SF))) v4sf;\n+typedef float __attribute__((mode(V16SF))) v16sf;\n+\n+typedef float __attribute__((mode(V2DF))) v2df;\n+\n+#endif\n+\n+typedef union U8QI { v8qi v; qi a[8]; } u8qi;\n+typedef union U16QI { v16qi v; qi a[16]; } u16qi;\n+\n+typedef union U2HI { v2hi v; hi a[2]; } u2hi;\n+typedef union U4HI { v4hi v; hi a[4]; } u4hi;\n+typedef union U8HI { v8hi v; hi a[8]; } u8hi;\n+\n+typedef union U2SI { v2si v; si a[2]; } u2si;\n+typedef union U4SI { v4si v; si a[4]; } u4si;\n+\n+typedef union U1DI { v1di v; di a[1]; } u1di;\n+typedef union U2DI { v2di v; di a[2]; } u2di;\n+\n typedef union U2SF { v2sf v; sf a[2]; } u2sf;\n typedef union U4SF { v4sf v; sf a[4]; } u4sf;\n typedef union U16SF { v16sf v; sf a[16]; } u16sf;\n \n-typedef float __attribute__((mode(DF))) df;\n-typedef df __attribute__((vector_size (16))) v2df;\n-\n typedef union U2DF { v2df v; df a[2]; } u2df;"}]}