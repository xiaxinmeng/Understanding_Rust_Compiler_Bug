{"sha": "337bde9139c0a7e535acc4a93cb65cdf8e05e222", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzM3YmRlOTEzOWMwYTdlNTM1YWNjNGE5M2NiNjVjZGY4ZTA1ZTIyMg==", "commit": {"author": {"name": "David Edelsohn", "email": "edelsohn@gnu.org", "date": "2006-02-04T14:18:17Z"}, "committer": {"name": "David Edelsohn", "email": "dje@gcc.gnu.org", "date": "2006-02-04T14:18:17Z"}, "message": "rs6000.c (rs6000_mangle_fundamental_type): Mangle IBM extended float format long double as \"g\" on powerpc*-linux.\n\n        * config/rs6000/rs6000.c (rs6000_mangle_fundamental_type): Mangle\n        IBM extended float format long double as \"g\" on powerpc*-linux.\n\nCo-Authored-By: Jakub Jelinek <jakub@redhat.com>\n\nFrom-SVN: r110589", "tree": {"sha": "c57890415a0f81094e9f8f91cff77e7ddada331e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c57890415a0f81094e9f8f91cff77e7ddada331e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/337bde9139c0a7e535acc4a93cb65cdf8e05e222", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/337bde9139c0a7e535acc4a93cb65cdf8e05e222", "html_url": "https://github.com/Rust-GCC/gccrs/commit/337bde9139c0a7e535acc4a93cb65cdf8e05e222", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/337bde9139c0a7e535acc4a93cb65cdf8e05e222/comments", "author": null, "committer": null, "parents": [{"sha": "eef5c0ca8dae527ead97eee8de461c94cc23fd7a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eef5c0ca8dae527ead97eee8de461c94cc23fd7a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eef5c0ca8dae527ead97eee8de461c94cc23fd7a"}], "stats": {"total": 18, "additions": 16, "deletions": 2}, "files": [{"sha": "23e9d84a607617b7415838801f7a9f0f318ca9d3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/337bde9139c0a7e535acc4a93cb65cdf8e05e222/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/337bde9139c0a7e535acc4a93cb65cdf8e05e222/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=337bde9139c0a7e535acc4a93cb65cdf8e05e222", "patch": "@@ -1,3 +1,9 @@\n+2006-02-04  David Edelsohn  <edelsohn@gnu.org>\n+\t    Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* config/rs6000/rs6000.c (rs6000_mangle_fundamental_type): Mangle\n+\tIBM extended float format long double as \"g\" on powerpc*-linux.\n+\n 2006-02-03  John David Anglin  <dave.anglin@nrc-cnrc.gc.ca>\n \n \tPR target/25926"}, {"sha": "c963c6416339d3ad898957369b2a5c21e946ae66", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/337bde9139c0a7e535acc4a93cb65cdf8e05e222/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/337bde9139c0a7e535acc4a93cb65cdf8e05e222/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=337bde9139c0a7e535acc4a93cb65cdf8e05e222", "patch": "@@ -1,7 +1,7 @@\n /* Subroutines used for code generation on IBM RS/6000.\n    Copyright (C) 1991, 1993, 1994, 1995, 1996, 1997, 1998, 1999,\n-   2000, 2001, 2002, 2003, 2004, 2005, 2006 Free Software Foundation,\n-   Inc.\n+   2000, 2001, 2002, 2003, 2004, 2005, 2006\n+   Free Software Foundation, Inc.\n    Contributed by Richard Kenner (kenner@vlsi1.ultra.nyu.edu)\n \n    This file is part of GCC.\n@@ -17410,6 +17410,14 @@ rs6000_mangle_fundamental_type (tree type)\n   if (type == pixel_type_node) return \"u7__pixel\";\n   if (type == bool_int_type_node) return \"U6__booli\";\n \n+  /* Mangle IBM extended float long double as `g' (__float128) on\n+     powerpc*-linux where long-double-64 previously was the default.  */\n+  if (TYPE_MAIN_VARIANT (type) == long_double_type_node\n+      && TARGET_ELF\n+      && TARGET_LONG_DOUBLE_128\n+      && !TARGET_IEEEQUAD)\n+    return \"g\";\n+\n   /* For all other types, use normal C++ mangling.  */\n   return NULL;\n }"}]}