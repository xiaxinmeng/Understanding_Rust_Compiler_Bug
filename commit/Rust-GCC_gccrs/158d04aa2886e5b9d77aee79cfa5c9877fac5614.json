{"sha": "158d04aa2886e5b9d77aee79cfa5c9877fac5614", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTU4ZDA0YWEyODg2ZTViOWQ3N2FlZTc5Y2ZhNWM5ODc3ZmFjNTYxNA==", "commit": {"author": {"name": "Loren J. Rittle", "email": "ljrittle@acm.org", "date": "2002-06-10T20:52:12Z"}, "committer": {"name": "Loren J. Rittle", "email": "ljrittle@gcc.gnu.org", "date": "2002-06-10T20:52:12Z"}, "message": "acinclude.m4 (GLIBCPP_CHECK_SETRLIMIT_ancilliary): Reorder and include all required headers for test against older POSIX standard.\n\n\t* acinclude.m4 (GLIBCPP_CHECK_SETRLIMIT_ancilliary): Reorder and\n\tinclude all required headers for test against older POSIX standard.\n\t(GLIBCPP_CHECK_SETRLIMIT): Likewise.\n\t(ac_setrlimit): Likewise.\n\t* aclocal.m4: Regenerate.\n\t* configure: Regenerate.\n\t* testsuite/testsuite_hooks.cc: Reorder and include all\n\trequired headers for use against older POSIX standard.\n\nFrom-SVN: r54452", "tree": {"sha": "b5c0ba17de37da1beb5d2813db1b02429dffd7e3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b5c0ba17de37da1beb5d2813db1b02429dffd7e3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/158d04aa2886e5b9d77aee79cfa5c9877fac5614", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/158d04aa2886e5b9d77aee79cfa5c9877fac5614", "html_url": "https://github.com/Rust-GCC/gccrs/commit/158d04aa2886e5b9d77aee79cfa5c9877fac5614", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/158d04aa2886e5b9d77aee79cfa5c9877fac5614/comments", "author": null, "committer": null, "parents": [{"sha": "fce5a9f29b556fbc6db108b645269f7729011859", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fce5a9f29b556fbc6db108b645269f7729011859", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fce5a9f29b556fbc6db108b645269f7729011859"}], "stats": {"total": 2346, "additions": 1160, "deletions": 1186}, "files": [{"sha": "fa338f267e3667f47c02c592feaaed53b39c030b", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/158d04aa2886e5b9d77aee79cfa5c9877fac5614/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/158d04aa2886e5b9d77aee79cfa5c9877fac5614/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=158d04aa2886e5b9d77aee79cfa5c9877fac5614", "patch": "@@ -1,3 +1,14 @@\n+2002-06-10  Loren J. Rittle <ljrittle@acm.org>\n+\n+\t* acinclude.m4 (GLIBCPP_CHECK_SETRLIMIT_ancilliary): Reorder and\n+\tinclude all required headers for test against older POSIX standard.\n+\t(GLIBCPP_CHECK_SETRLIMIT): Likewise.\n+\t(ac_setrlimit): Likewise.\n+\t* aclocal.m4: Regenerate.\n+\t* configure: Regenerate.\n+\t* testsuite/testsuite_hooks.cc: Reorder and include all\n+\trequired headers for use against older POSIX standard.\n+\n 2002-06-08  Paolo Carlini  <pcarlini@unitus.it>\n \n \t* testsuite/backwards/strstream_members.cc: New."}, {"sha": "7197f5d658570c8fc8b81954ff915e9acddd4f67", "filename": "libstdc++-v3/acinclude.m4", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/158d04aa2886e5b9d77aee79cfa5c9877fac5614/libstdc%2B%2B-v3%2Facinclude.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/158d04aa2886e5b9d77aee79cfa5c9877fac5614/libstdc%2B%2B-v3%2Facinclude.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Facinclude.m4?ref=158d04aa2886e5b9d77aee79cfa5c9877fac5614", "patch": "@@ -1971,16 +1971,17 @@ dnl string, '#' otherwise\n dnl Check for headers for, and arguments to, the setrlimit() function.\n dnl Used only in testsuite_hooks.h.\n AC_DEFUN(GLIBCPP_CHECK_SETRLIMIT_ancilliary, [\n-  AC_TRY_COMPILE([#include <sys/resource.h>\n-                  #include <unistd.h>\n+  AC_TRY_COMPILE([#include <unistd.h>\n+                  #include <sys/time.h>\n+                  #include <sys/resource.h>\n                  ], [ int f = RLIMIT_$1 ; ],\n                  [glibcpp_mresult=1], [glibcpp_mresult=0])\n   AC_DEFINE_UNQUOTED(HAVE_MEMLIMIT_$1, $glibcpp_mresult,\n                      [Only used in build directory testsuite_hooks.h.])\n ])\n AC_DEFUN(GLIBCPP_CHECK_SETRLIMIT, [\n   setrlimit_have_headers=yes\n-  AC_CHECK_HEADERS(sys/resource.h unistd.h,\n+  AC_CHECK_HEADERS(unistd.h sys/time.h sys/resource.h,\n                    [],\n                    setrlimit_have_headers=no)\n   # If don't have the headers, then we can't run the tests now, and we\n@@ -1994,8 +1995,9 @@ AC_DEFUN(GLIBCPP_CHECK_SETRLIMIT, [\n \n     # Check for rlimit, setrlimit.\n     AC_CACHE_VAL(ac_setrlimit, [\n-      AC_TRY_COMPILE([#include <sys/resource.h>\n-\t\t      #include <unistd.h>\n+      AC_TRY_COMPILE([#include <unistd.h>\n+                  #include <sys/time.h>\n+                  #include <sys/resource.h>\n \t\t     ], \n                      [ struct rlimit r; setrlimit(0, &r);], \n                      [ac_setrlimit=yes], [ac_setrlimit=no])"}, {"sha": "372c5fbe0249354f84ca4e4fee9b6a1819d5b5e9", "filename": "libstdc++-v3/aclocal.m4", "status": "modified", "additions": 7, "deletions": 30, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/158d04aa2886e5b9d77aee79cfa5c9877fac5614/libstdc%2B%2B-v3%2Faclocal.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/158d04aa2886e5b9d77aee79cfa5c9877fac5614/libstdc%2B%2B-v3%2Faclocal.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Faclocal.m4?ref=158d04aa2886e5b9d77aee79cfa5c9877fac5614", "patch": "@@ -1983,16 +1983,17 @@ dnl string, '#' otherwise\n dnl Check for headers for, and arguments to, the setrlimit() function.\n dnl Used only in testsuite_hooks.h.\n AC_DEFUN(GLIBCPP_CHECK_SETRLIMIT_ancilliary, [\n-  AC_TRY_COMPILE([#include <sys/resource.h>\n-                  #include <unistd.h>\n+  AC_TRY_COMPILE([#include <unistd.h>\n+                  #include <sys/time.h>\n+                  #include <sys/resource.h>\n                  ], [ int f = RLIMIT_$1 ; ],\n                  [glibcpp_mresult=1], [glibcpp_mresult=0])\n   AC_DEFINE_UNQUOTED(HAVE_MEMLIMIT_$1, $glibcpp_mresult,\n                      [Only used in build directory testsuite_hooks.h.])\n ])\n AC_DEFUN(GLIBCPP_CHECK_SETRLIMIT, [\n   setrlimit_have_headers=yes\n-  AC_CHECK_HEADERS(sys/resource.h unistd.h,\n+  AC_CHECK_HEADERS(unistd.h sys/time.h sys/resource.h,\n                    [],\n                    setrlimit_have_headers=no)\n   # If don't have the headers, then we can't run the tests now, and we\n@@ -2006,8 +2007,9 @@ AC_DEFUN(GLIBCPP_CHECK_SETRLIMIT, [\n \n     # Check for rlimit, setrlimit.\n     AC_CACHE_VAL(ac_setrlimit, [\n-      AC_TRY_COMPILE([#include <sys/resource.h>\n-\t\t      #include <unistd.h>\n+      AC_TRY_COMPILE([#include <unistd.h>\n+                  #include <sys/time.h>\n+                  #include <sys/resource.h>\n \t\t     ], \n                      [ struct rlimit r; setrlimit(0, &r);], \n                      [ac_setrlimit=yes], [ac_setrlimit=no])\n@@ -2196,31 +2198,6 @@ AC_MSG_RESULT($enable_symvers)\n ])\n \n \n-# isc-posix.m4 serial 1 (gettext-0.10.40)\n-dnl Copyright (C) 1995-2002 Free Software Foundation, Inc.\n-dnl This file is free software, distributed under the terms of the GNU\n-dnl General Public License.  As a special exception to the GNU General\n-dnl Public License, this file may be distributed as part of a program\n-dnl that contains a configuration script generated by Autoconf, under\n-dnl the same distribution terms as the rest of that program.\n-\n-# This test replaces the one in autoconf.\n-# Currently this macro should have the same name as the autoconf macro\n-# because gettext's gettext.m4 (distributed in the automake package)\n-# still uses it.  Otherwise, the use in gettext.m4 makes autoheader\n-# give these diagnostics:\n-#   configure.in:556: AC_TRY_COMPILE was called before AC_ISC_POSIX\n-#   configure.in:556: AC_TRY_RUN was called before AC_ISC_POSIX\n-\n-undefine([AC_ISC_POSIX])\n-\n-AC_DEFUN([AC_ISC_POSIX],\n-  [\n-    dnl This test replaces the obsolescent AC_ISC_POSIX kludge.\n-    AC_CHECK_LIB(cposix, strerror, [LIBS=\"$LIBS -lcposix\"])\n-  ]\n-)\n-\n # Add --enable-maintainer-mode option to configure.\n # From Jim Meyering\n "}, {"sha": "b16f1de8aa614a355c76d6ddbc521057f94b5f9e", "filename": "libstdc++-v3/configure", "status": "modified", "additions": 1133, "deletions": 1150, "changes": 2283, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/158d04aa2886e5b9d77aee79cfa5c9877fac5614/libstdc%2B%2B-v3%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/158d04aa2886e5b9d77aee79cfa5c9877fac5614/libstdc%2B%2B-v3%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfigure?ref=158d04aa2886e5b9d77aee79cfa5c9877fac5614"}, {"sha": "4e6c8319637ed13f1077d7e5605266e29ed376cf", "filename": "libstdc++-v3/testsuite/testsuite_hooks.cc", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/158d04aa2886e5b9d77aee79cfa5c9877fac5614/libstdc%2B%2B-v3%2Ftestsuite%2Ftestsuite_hooks.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/158d04aa2886e5b9d77aee79cfa5c9877fac5614/libstdc%2B%2B-v3%2Ftestsuite%2Ftestsuite_hooks.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftestsuite_hooks.cc?ref=158d04aa2886e5b9d77aee79cfa5c9877fac5614", "patch": "@@ -30,8 +30,9 @@\n #include <testsuite_hooks.h>\n \n #ifdef _GLIBCPP_MEM_LIMITS\n-#include <sys/resource.h>\n #include <unistd.h>\n+#include <sys/time.h>\n+#include <sys/resource.h>\n \n void\n __set_testsuite_memlimit(float __size)"}]}