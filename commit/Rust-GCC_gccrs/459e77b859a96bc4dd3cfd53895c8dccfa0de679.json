{"sha": "459e77b859a96bc4dd3cfd53895c8dccfa0de679", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDU5ZTc3Yjg1OWE5NmJjNGRkM2NmZDUzODk1YzhkY2NmYTBkZTY3OQ==", "commit": {"author": {"name": "Paul Thomas", "email": "pault@gcc.gnu.org", "date": "2017-12-29T14:27:59Z"}, "committer": {"name": "Paul Thomas", "email": "pault@gcc.gnu.org", "date": "2017-12-29T14:27:59Z"}, "message": "re PR fortran/83567 (Parametrized derived types: Segmentation fault when assigning a function return value)\n\n2017-12-28  Paul Thomas  <pault@gcc.gnu.org>\n\n\tPR fortran/83567\n\t* trans-expr.c (gfc_trans_assignment_1): Free parameterized\n\tcomponents of the lhs if dealloc is set.\n\t*trans-decl.c (gfc_trans_deferred_vars): Do not free the\n\tparameterized components of function results on leaving scope.\n\n\n2017-12-28  Paul Thomas  <pault@gcc.gnu.org>\n\n\tPR fortran/83567\n\t* gfortran.dg/pdt_26.f90 : New test.\n\nFrom-SVN: r256033", "tree": {"sha": "add05e019b36c6e52da0f6a470d7f6c142c7de2b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/add05e019b36c6e52da0f6a470d7f6c142c7de2b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/459e77b859a96bc4dd3cfd53895c8dccfa0de679", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/459e77b859a96bc4dd3cfd53895c8dccfa0de679", "html_url": "https://github.com/Rust-GCC/gccrs/commit/459e77b859a96bc4dd3cfd53895c8dccfa0de679", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/459e77b859a96bc4dd3cfd53895c8dccfa0de679/comments", "author": null, "committer": null, "parents": [{"sha": "ec3131c5c3919a759631b28a874293a7a9681629", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ec3131c5c3919a759631b28a874293a7a9681629", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ec3131c5c3919a759631b28a874293a7a9681629"}], "stats": {"total": 3, "additions": 2, "deletions": 1}, "files": [{"sha": "756fd6ab85a3826538d609a8a2d468498df16d1b", "filename": "gcc/fortran/trans-expr.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/459e77b859a96bc4dd3cfd53895c8dccfa0de679/gcc%2Ffortran%2Ftrans-expr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/459e77b859a96bc4dd3cfd53895c8dccfa0de679/gcc%2Ffortran%2Ftrans-expr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-expr.c?ref=459e77b859a96bc4dd3cfd53895c8dccfa0de679", "patch": "@@ -10078,7 +10078,8 @@ gfc_trans_assignment_1 (gfc_expr * expr1, gfc_expr * expr2, bool init_flag,\n \t}\n \n       /* Deallocate the lhs parameterized components if required.  */ \n-      if (dealloc && expr2->expr_type == EXPR_FUNCTION)\n+      if (dealloc && expr2->expr_type == EXPR_FUNCTION\n+\t  && !expr1->symtree->n.sym->attr.associate_var)\n \t{\n \t  if (expr1->ts.type == BT_DERIVED\n \t      && expr1->ts.u.derived"}]}