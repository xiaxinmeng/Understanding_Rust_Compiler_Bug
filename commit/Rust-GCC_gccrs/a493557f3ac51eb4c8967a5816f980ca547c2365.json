{"sha": "a493557f3ac51eb4c8967a5816f980ca547c2365", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTQ5MzU1N2YzYWM1MWViNGM4OTY3YTU4MTZmOTgwY2E1NDdjMjM2NQ==", "commit": {"author": {"name": "Vincent Celier", "email": "celier@adacore.com", "date": "2005-06-16T08:44:38Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2005-06-16T08:44:38Z"}, "message": "prj-part.adb (Pre_Parse_Context_Clause): Call Set_Is_Not_Last_In_List when the project file in a with clause is not the...\n\n2005-06-14  Vincent Celier  <celier@adacore.com>\n\n\t* prj-part.adb (Pre_Parse_Context_Clause): Call Set_Is_Not_Last_In_List\n\twhen the project file in a with clause is not the last one, that is the\n\tproject file name is followed by a comma.\n\t* prj-pp.adb: (First_With_In_List): New Boolean global variable\n\t(Print): Issue list of project files separated by commas in with clauses\n\taccording to the values returned by Is_Not_Last_In_List.\n\t* prj-tree.ads, prj-tree.adb: (Is_Not_Last_In_List): New function\n\t(Set_Is_Not_Last_In_List): New procedure\n\nFrom-SVN: r101054", "tree": {"sha": "3390ad3df2d970f1a21ad81883e24f66f98535e1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3390ad3df2d970f1a21ad81883e24f66f98535e1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a493557f3ac51eb4c8967a5816f980ca547c2365", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a493557f3ac51eb4c8967a5816f980ca547c2365", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a493557f3ac51eb4c8967a5816f980ca547c2365", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a493557f3ac51eb4c8967a5816f980ca547c2365/comments", "author": {"login": "vcelier", "id": 8888056, "node_id": "MDQ6VXNlcjg4ODgwNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/8888056?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vcelier", "html_url": "https://github.com/vcelier", "followers_url": "https://api.github.com/users/vcelier/followers", "following_url": "https://api.github.com/users/vcelier/following{/other_user}", "gists_url": "https://api.github.com/users/vcelier/gists{/gist_id}", "starred_url": "https://api.github.com/users/vcelier/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vcelier/subscriptions", "organizations_url": "https://api.github.com/users/vcelier/orgs", "repos_url": "https://api.github.com/users/vcelier/repos", "events_url": "https://api.github.com/users/vcelier/events{/privacy}", "received_events_url": "https://api.github.com/users/vcelier/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "88664966ce2f31c5200f94b0a45c6abe2d41de1f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/88664966ce2f31c5200f94b0a45c6abe2d41de1f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/88664966ce2f31c5200f94b0a45c6abe2d41de1f"}], "stats": {"total": 95, "additions": 81, "deletions": 14}, "files": [{"sha": "fe2830a58a749b9ddf695451ef649846d5821d22", "filename": "gcc/ada/prj-part.adb", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a493557f3ac51eb4c8967a5816f980ca547c2365/gcc%2Fada%2Fprj-part.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a493557f3ac51eb4c8967a5816f980ca547c2365/gcc%2Fada%2Fprj-part.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-part.adb?ref=a493557f3ac51eb4c8967a5816f980ca547c2365", "patch": "@@ -667,7 +667,10 @@ package body Prj.Part is\n                Scan (In_Tree); -- scan past the semicolon.\n                exit Comma_Loop;\n \n-            elsif Token /= Tok_Comma then\n+            elsif Token = Tok_Comma then\n+               Set_Is_Not_Last_In_List (Current_With_Node, In_Tree);\n+\n+            else\n                Error_Msg (\"expected comma or semi colon\", Token_Ptr);\n                exit Comma_Loop;\n             end if;\n@@ -679,7 +682,6 @@ package body Prj.Part is\n       end loop With_Loop;\n    end Pre_Parse_Context_Clause;\n \n-\n    -------------------------------\n    -- Post_Parse_Context_Clause --\n    -------------------------------\n@@ -1472,7 +1474,7 @@ package body Prj.Part is\n          then\n             --  Invalid name: report an error\n \n-            Error_Msg (\"Expected \"\"\" &\n+            Error_Msg (\"expected \"\"\" &\n                        Get_Name_String (Name_Of (Project, In_Tree)) & \"\"\"\",\n                        Token_Ptr);\n          end if;\n@@ -1489,7 +1491,7 @@ package body Prj.Part is\n \n          if Token /= Tok_EOF then\n             Error_Msg\n-              (\"Unexpected text following end of project\", Token_Ptr);\n+              (\"unexpected text following end of project\", Token_Ptr);\n          end if;\n       end if;\n "}, {"sha": "9dd7a0a399507b8fcfde8fb6a4f088cb7628192d", "filename": "gcc/ada/prj-pp.adb", "status": "modified", "additions": 27, "deletions": 10, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a493557f3ac51eb4c8967a5816f980ca547c2365/gcc%2Fada%2Fprj-pp.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a493557f3ac51eb4c8967a5816f980ca547c2365/gcc%2Fada%2Fprj-pp.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-pp.adb?ref=a493557f3ac51eb4c8967a5816f980ca547c2365", "patch": "@@ -44,6 +44,11 @@ package body Prj.PP is\n    --  Column number of the last character in the line. Used to avoid\n    --  outputing lines longer than Max_Line_Length.\n \n+   First_With_In_List : Boolean := True;\n+   --  Indicate that the next with clause is first in a list such as\n+   --    with \"A\", \"B\";\n+   --  First_With_In_List will be True for \"A\", but not for \"B\".\n+\n    procedure Indicate_Tested (Kind : Project_Node_Kind);\n    --  Set the corresponding component of array Not_Tested to False.\n    --  Only called by pragmas Debug.\n@@ -318,6 +323,7 @@ package body Prj.PP is\n \n                      --  with clause(s)\n \n+                     First_With_In_List := True;\n                      Print (First_With_Clause_Of (Node, In_Tree), Indent);\n                      Write_Empty_Line (Always => True);\n                   end if;\n@@ -356,20 +362,31 @@ package body Prj.PP is\n                   pragma Debug (Indicate_Tested (N_With_Clause));\n \n                   if Name_Of (Node, In_Tree) /= No_Name then\n-                     Print (First_Comment_Before (Node, In_Tree), Indent);\n-                     Start_Line (Indent);\n+                     if First_With_In_List then\n+                        Print (First_Comment_Before (Node, In_Tree), Indent);\n+                        Start_Line (Indent);\n \n-                     if Non_Limited_Project_Node_Of (Node, In_Tree) =\n-                          Empty_Node\n-                     then\n-                        Write_String (\"limited \");\n+                        if Non_Limited_Project_Node_Of (Node, In_Tree) =\n+                             Empty_Node\n+                        then\n+                           Write_String (\"limited \");\n+                        end if;\n+\n+                        Write_String (\"with \");\n                      end if;\n \n-                     Write_String (\"with \");\n                      Output_String (String_Value_Of (Node, In_Tree));\n-                     Write_String (\";\");\n-                     Write_End_Of_Line_Comment (Node);\n-                     Print (First_Comment_After (Node, In_Tree), Indent);\n+\n+                     if Is_Not_Last_In_List (Node, In_Tree) then\n+                        Write_String (\", \");\n+                        First_With_In_List := False;\n+\n+                     else\n+                        Write_String (\";\");\n+                        Write_End_Of_Line_Comment (Node);\n+                        Print (First_Comment_After (Node, In_Tree), Indent);\n+                        First_With_In_List := True;\n+                     end if;\n                   end if;\n \n                   Print (Next_With_Clause_Of (Node, In_Tree), Indent);"}, {"sha": "f66db3717dc3f747fe88ca38dfcd59a2c751d0fe", "filename": "gcc/ada/prj-tree.adb", "status": "modified", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a493557f3ac51eb4c8967a5816f980ca547c2365/gcc%2Fada%2Fprj-tree.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a493557f3ac51eb4c8967a5816f980ca547c2365/gcc%2Fada%2Fprj-tree.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-tree.adb?ref=a493557f3ac51eb4c8967a5816f980ca547c2365", "patch": "@@ -1006,6 +1006,21 @@ package body Prj.Tree is\n       return In_Tree.Project_Nodes.Table (Node).Flag2;\n    end Is_Extending_All;\n \n+   -------------------------\n+   -- Is_Not_Last_In_List --\n+   -------------------------\n+\n+   function Is_Not_Last_In_List\n+     (Node    : Project_Node_Id;\n+      In_Tree : Project_Node_Tree_Ref) return Boolean is\n+   begin\n+      pragma Assert\n+        (Node /= Empty_Node\n+          and then\n+            In_Tree.Project_Nodes.Table (Node).Kind = N_With_Clause);\n+      return In_Tree.Project_Nodes.Table (Node).Flag1;\n+   end Is_Not_Last_In_List;\n+\n    -------------------------------------\n    -- Imported_Or_Extended_Project_Of --\n    -------------------------------------\n@@ -2104,6 +2119,22 @@ package body Prj.Tree is\n       In_Tree.Project_Nodes.Table (Node).Flag2 := True;\n    end Set_Is_Extending_All;\n \n+   -----------------------------\n+   -- Set_Is_Not_Last_In_List --\n+   -----------------------------\n+\n+   procedure Set_Is_Not_Last_In_List\n+     (Node    : Project_Node_Id;\n+      In_Tree : Project_Node_Tree_Ref)\n+   is\n+   begin\n+      pragma Assert\n+        (Node /= Empty_Node\n+          and then\n+             In_Tree.Project_Nodes.Table (Node).Kind = N_With_Clause);\n+      In_Tree.Project_Nodes.Table (Node).Flag1 := True;\n+   end Set_Is_Not_Last_In_List;\n+\n    -----------------\n    -- Set_Kind_Of --\n    -----------------"}, {"sha": "5ed45b48f73bd92d34242d18944c3b76e64b3e38", "filename": "gcc/ada/prj-tree.ads", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a493557f3ac51eb4c8967a5816f980ca547c2365/gcc%2Fada%2Fprj-tree.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a493557f3ac51eb4c8967a5816f980ca547c2365/gcc%2Fada%2Fprj-tree.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-tree.ads?ref=a493557f3ac51eb4c8967a5816f980ca547c2365", "patch": "@@ -281,6 +281,12 @@ package Prj.Tree is\n    pragma Inline (Is_Extending_All);\n    --  Only valid for N_Project and N_With_Clause\n \n+   function Is_Not_Last_In_List\n+     (Node    : Project_Node_Id;\n+      In_Tree : Project_Node_Tree_Ref) return Boolean;\n+   pragma Inline (Is_Not_Last_In_List);\n+   --  Only valid for N_With_Clause\n+\n    function First_Variable_Of\n      (Node    : Project_Node_Id;\n       In_Tree : Project_Node_Tree_Ref) return Variable_Node_Id;\n@@ -632,6 +638,11 @@ package Prj.Tree is\n       In_Tree : Project_Node_Tree_Ref);\n    pragma Inline (Set_Is_Extending_All);\n \n+   procedure Set_Is_Not_Last_In_List\n+     (Node    : Project_Node_Id;\n+      In_Tree : Project_Node_Tree_Ref);\n+   pragma Inline (Set_Is_Not_Last_In_List);\n+\n    procedure Set_First_Variable_Of\n      (Node    : Project_Node_Id;\n       In_Tree : Project_Node_Tree_Ref;\n@@ -949,6 +960,12 @@ package Prj.Tree is\n          --    N_Project_Declaration\n          --              - it indicates that there are unkept comments in the\n          --                project.\n+         --    N_With_Clause\n+         --              - it indicates that this is not the last with in a\n+         --                with clause. It is set for \"A\", but not for \"B\" in\n+         --                    with \"B\";\n+         --                  and\n+         --                    with \"A\", \"B\";\n \n          Flag2 : Boolean := False;\n          --  This flag is significant only for:"}]}