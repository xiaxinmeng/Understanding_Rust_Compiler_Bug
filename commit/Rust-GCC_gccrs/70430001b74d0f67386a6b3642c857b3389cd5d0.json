{"sha": "70430001b74d0f67386a6b3642c857b3389cd5d0", "node_id": "C_kwDOANBUbNoAKDcwNDMwMDAxYjc0ZDBmNjczODZhNmIzNjQyYzg1N2IzMzg5Y2Q1ZDA", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2022-02-07T08:31:07Z"}, "committer": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2022-02-07T08:37:59Z"}, "message": "middle-end/104402 - split out _Complex compares from COND_EXPRs\n\nThis makes sure we always have a _Complex compare split to a\ndifferent stmt for the compare operand in a COND_EXPR on GIMPLE.\nComplex lowering doesn't handle this and the change is something\nwe want for all kind of compares at some point.\n\n2022-02-07  Richard Biener  <rguenther@suse.de>\n\n\tPR middle-end/104402\n\t* gimple-expr.cc (is_gimple_condexpr): _Complex typed\n\tcompares are not valid.\n\t* tree-cfg.cc (verify_gimple_assign_ternary): For COND_EXPR\n\tcheck is_gimple_condexpr.\n\n\t* gcc.dg/torture/pr104402.c: New testcase.", "tree": {"sha": "29c05d2c608dd767b103751694248e4d21d8682b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/29c05d2c608dd767b103751694248e4d21d8682b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/70430001b74d0f67386a6b3642c857b3389cd5d0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/70430001b74d0f67386a6b3642c857b3389cd5d0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/70430001b74d0f67386a6b3642c857b3389cd5d0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/70430001b74d0f67386a6b3642c857b3389cd5d0/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e66ba0f55c000152df63fc67c11a64f79122ef86", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e66ba0f55c000152df63fc67c11a64f79122ef86", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e66ba0f55c000152df63fc67c11a64f79122ef86"}], "stats": {"total": 37, "additions": 26, "deletions": 11}, "files": [{"sha": "f9a650b5dafb6ddfdb98b9089a59bdb45751ff2b", "filename": "gcc/gimple-expr.cc", "status": "modified", "additions": 13, "deletions": 7, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/70430001b74d0f67386a6b3642c857b3389cd5d0/gcc%2Fgimple-expr.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/70430001b74d0f67386a6b3642c857b3389cd5d0/gcc%2Fgimple-expr.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-expr.cc?ref=70430001b74d0f67386a6b3642c857b3389cd5d0", "patch": "@@ -602,28 +602,34 @@ is_gimple_lvalue (tree t)\n /* Helper for is_gimple_condexpr and is_gimple_condexpr_for_cond.  */\n \n static bool\n-is_gimple_condexpr_1 (tree t, bool allow_traps)\n+is_gimple_condexpr_1 (tree t, bool allow_traps, bool allow_cplx)\n {\n-  return (is_gimple_val (t) || (COMPARISON_CLASS_P (t)\n-\t\t\t\t&& (allow_traps || !tree_could_throw_p (t))\n-\t\t\t\t&& is_gimple_val (TREE_OPERAND (t, 0))\n-\t\t\t\t&& is_gimple_val (TREE_OPERAND (t, 1))));\n+  tree op0;\n+  return (is_gimple_val (t)\n+\t  || (COMPARISON_CLASS_P (t)\n+\t      && (allow_traps || !tree_could_throw_p (t))\n+\t      && ((op0 = TREE_OPERAND (t, 0)), true)\n+\t      && (allow_cplx || TREE_CODE (TREE_TYPE (op0)) != COMPLEX_TYPE)\n+\t      && is_gimple_val (op0)\n+\t      && is_gimple_val (TREE_OPERAND (t, 1))));\n }\n \n /* Return true if T is a GIMPLE condition.  */\n \n bool\n is_gimple_condexpr (tree t)\n {\n-  return is_gimple_condexpr_1 (t, true);\n+  /* Always split out _Complex type compares since complex lowering\n+     doesn't handle this case.  */\n+  return is_gimple_condexpr_1 (t, true, false);\n }\n \n /* Like is_gimple_condexpr, but does not allow T to trap.  */\n \n bool\n is_gimple_condexpr_for_cond (tree t)\n {\n-  return is_gimple_condexpr_1 (t, false);\n+  return is_gimple_condexpr_1 (t, false, true);\n }\n \n /* Return true if T is a gimple address.  */"}, {"sha": "1cb0370e9b25aca5450f72f1e751998e691ca217", "filename": "gcc/testsuite/gcc.dg/torture/pr104402.c", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/70430001b74d0f67386a6b3642c857b3389cd5d0/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr104402.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/70430001b74d0f67386a6b3642c857b3389cd5d0/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr104402.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr104402.c?ref=70430001b74d0f67386a6b3642c857b3389cd5d0", "patch": "@@ -0,0 +1,8 @@\n+/* { dg-do compile } */\n+\n+_Complex int a;\n+char b;\n+void c() {\n+  if (b != 2 + (long)(a != 0 ^ 0))\n+    __builtin_abort();\n+}"}, {"sha": "e321d929fd0cd3dfe81b079674ece6d98f9c5af1", "filename": "gcc/tree-cfg.cc", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/70430001b74d0f67386a6b3642c857b3389cd5d0/gcc%2Ftree-cfg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/70430001b74d0f67386a6b3642c857b3389cd5d0/gcc%2Ftree-cfg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-cfg.cc?ref=70430001b74d0f67386a6b3642c857b3389cd5d0", "patch": "@@ -4289,10 +4289,11 @@ verify_gimple_assign_ternary (gassign *stmt)\n       /* Fallthrough.  */\n     case COND_EXPR:\n       if (!is_gimple_val (rhs1)\n-\t  && verify_gimple_comparison (TREE_TYPE (rhs1),\n-\t\t\t\t       TREE_OPERAND (rhs1, 0),\n-\t\t\t\t       TREE_OPERAND (rhs1, 1),\n-\t\t\t\t       TREE_CODE (rhs1)))\n+\t  && (!is_gimple_condexpr (rhs1)\n+\t      || verify_gimple_comparison (TREE_TYPE (rhs1),\n+\t\t\t\t\t   TREE_OPERAND (rhs1, 0),\n+\t\t\t\t\t   TREE_OPERAND (rhs1, 1),\n+\t\t\t\t\t   TREE_CODE (rhs1))))\n \treturn true;\n       if (!useless_type_conversion_p (lhs_type, rhs2_type)\n \t  || !useless_type_conversion_p (lhs_type, rhs3_type))"}]}