{"sha": "935b561e7fb6471773e2a7e860011b76702cd563", "node_id": "C_kwDOANBUbNoAKDkzNWI1NjFlN2ZiNjQ3MTc3M2UyYTdlODYwMDExYjc2NzAyY2Q1NjM", "commit": {"author": {"name": "Arthur Cohen", "email": "arthur.cohen@embecosm.com", "date": "2022-03-15T08:12:37Z"}, "committer": {"name": "Arthur Cohen", "email": "arthur.cohen@embecosm.com", "date": "2022-03-17T14:51:09Z"}, "message": "macros: Add test cases for remaining expansion contexts", "tree": {"sha": "9dd32d8d9383de1b52707f723b9990c8c0835bef", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9dd32d8d9383de1b52707f723b9990c8c0835bef"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/935b561e7fb6471773e2a7e860011b76702cd563", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/935b561e7fb6471773e2a7e860011b76702cd563", "html_url": "https://github.com/Rust-GCC/gccrs/commit/935b561e7fb6471773e2a7e860011b76702cd563", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/935b561e7fb6471773e2a7e860011b76702cd563/comments", "author": {"login": "CohenArthur", "id": 43524065, "node_id": "MDQ6VXNlcjQzNTI0MDY1", "avatar_url": "https://avatars.githubusercontent.com/u/43524065?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CohenArthur", "html_url": "https://github.com/CohenArthur", "followers_url": "https://api.github.com/users/CohenArthur/followers", "following_url": "https://api.github.com/users/CohenArthur/following{/other_user}", "gists_url": "https://api.github.com/users/CohenArthur/gists{/gist_id}", "starred_url": "https://api.github.com/users/CohenArthur/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CohenArthur/subscriptions", "organizations_url": "https://api.github.com/users/CohenArthur/orgs", "repos_url": "https://api.github.com/users/CohenArthur/repos", "events_url": "https://api.github.com/users/CohenArthur/events{/privacy}", "received_events_url": "https://api.github.com/users/CohenArthur/received_events", "type": "User", "site_admin": false}, "committer": {"login": "CohenArthur", "id": 43524065, "node_id": "MDQ6VXNlcjQzNTI0MDY1", "avatar_url": "https://avatars.githubusercontent.com/u/43524065?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CohenArthur", "html_url": "https://github.com/CohenArthur", "followers_url": "https://api.github.com/users/CohenArthur/followers", "following_url": "https://api.github.com/users/CohenArthur/following{/other_user}", "gists_url": "https://api.github.com/users/CohenArthur/gists{/gist_id}", "starred_url": "https://api.github.com/users/CohenArthur/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CohenArthur/subscriptions", "organizations_url": "https://api.github.com/users/CohenArthur/orgs", "repos_url": "https://api.github.com/users/CohenArthur/repos", "events_url": "https://api.github.com/users/CohenArthur/events{/privacy}", "received_events_url": "https://api.github.com/users/CohenArthur/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1a2ef9cae90db5bdb18723b6adafe2750a95ed76", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1a2ef9cae90db5bdb18723b6adafe2750a95ed76", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1a2ef9cae90db5bdb18723b6adafe2750a95ed76"}], "stats": {"total": 60, "additions": 60, "deletions": 0}, "files": [{"sha": "9f3cbca012ceb5beddf97417f983d1f169cfea74", "filename": "gcc/testsuite/rust/compile/macro20.rs", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/935b561e7fb6471773e2a7e860011b76702cd563/gcc%2Ftestsuite%2Frust%2Fcompile%2Fmacro20.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/935b561e7fb6471773e2a7e860011b76702cd563/gcc%2Ftestsuite%2Frust%2Fcompile%2Fmacro20.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust%2Fcompile%2Fmacro20.rs?ref=935b561e7fb6471773e2a7e860011b76702cd563", "patch": "@@ -0,0 +1,16 @@\n+macro_rules! define_trait {\n+    ($assoc:ident, $i:item) => {\n+        type $assoc;\n+\n+        $i\n+    };\n+}\n+\n+trait DefinedThroughMacros {\n+    define_trait!(\n+        Inner,\n+        fn takes_inner(i: Self::Inner) -> Self::Inner {\n+            i\n+        }\n+    );\n+}"}, {"sha": "9a1d773ec4b07835bf8e728fa3698eb77ba2ffdb", "filename": "gcc/testsuite/rust/compile/macro21.rs", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/935b561e7fb6471773e2a7e860011b76702cd563/gcc%2Ftestsuite%2Frust%2Fcompile%2Fmacro21.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/935b561e7fb6471773e2a7e860011b76702cd563/gcc%2Ftestsuite%2Frust%2Fcompile%2Fmacro21.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust%2Fcompile%2Fmacro21.rs?ref=935b561e7fb6471773e2a7e860011b76702cd563", "patch": "@@ -0,0 +1,9 @@\n+macro_rules! c_fn {\n+    {$name:ident ($($arg_name:ident $arg_ty:ty),*) -> $ret_ty:ty} => {\n+        fn $name($($arg_name: $arg_ty)*) -> $ret_ty;\n+    };\n+}\n+\n+extern \"C\" {\n+    c_fn! {puts (s *const i8) -> i64}\n+}"}, {"sha": "bdc4bada2704bafadb8bdb7e32935bdfc584b8dc", "filename": "gcc/testsuite/rust/compile/macro22.rs", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/935b561e7fb6471773e2a7e860011b76702cd563/gcc%2Ftestsuite%2Frust%2Fcompile%2Fmacro22.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/935b561e7fb6471773e2a7e860011b76702cd563/gcc%2Ftestsuite%2Frust%2Fcompile%2Fmacro22.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust%2Fcompile%2Fmacro22.rs?ref=935b561e7fb6471773e2a7e860011b76702cd563", "patch": "@@ -0,0 +1,10 @@\n+macro_rules! print {\n+    () => {\n+        fn puts(s: *const i8);\n+        fn printf(fmt: *const i8, ...);\n+    };\n+}\n+\n+extern \"C\" {\n+    print! {}\n+}"}, {"sha": "afaca9bc96b1f104f7b78ae993c2e7ab6ee00acf", "filename": "gcc/testsuite/rust/compile/macro23.rs", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/935b561e7fb6471773e2a7e860011b76702cd563/gcc%2Ftestsuite%2Frust%2Fcompile%2Fmacro23.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/935b561e7fb6471773e2a7e860011b76702cd563/gcc%2Ftestsuite%2Frust%2Fcompile%2Fmacro23.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust%2Fcompile%2Fmacro23.rs?ref=935b561e7fb6471773e2a7e860011b76702cd563", "patch": "@@ -0,0 +1,25 @@\n+macro_rules! maybe_impl {\n+    ($left:ident, $right:ident, $l_fn:ident, $r_fn:ident) => {\n+        fn $l_fn(value: T) -> Maybe<T> {\n+            Maybe::$left(value)\n+        }\n+\n+        fn $r_fn() -> Maybe<T> {\n+            Maybe::$right\n+        }\n+    };\n+}\n+\n+enum Maybe<T> {\n+    Just(T),\n+    Nothing,\n+}\n+\n+impl<T> Maybe<T> {\n+    maybe_impl!(Just, Nothing, just, nothing);\n+}\n+\n+fn main() {\n+    let _ = Maybe::just(14);\n+    let _: Maybe<i32> = Maybe::nothing();\n+}"}]}