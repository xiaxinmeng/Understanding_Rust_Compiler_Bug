{"sha": "a300e4591c24487929d384141c3294793e37e93a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTMwMGU0NTkxYzI0NDg3OTI5ZDM4NDE0MWMzMjk0NzkzZTM3ZTkzYQ==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2012-06-22T06:41:09Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2012-06-22T06:41:09Z"}, "message": "tree-ssa-live.c (remove_unused_scope_block_p): Remove again DECL_IGNORED_P non-reg vars even if they are used.\n\n\t* tree-ssa-live.c (remove_unused_scope_block_p): Remove again\n\tDECL_IGNORED_P non-reg vars even if they are used.\n\nFrom-SVN: r188872", "tree": {"sha": "5ec3fdfb6ee6190965fcf815e9b89611e6eed89d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5ec3fdfb6ee6190965fcf815e9b89611e6eed89d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a300e4591c24487929d384141c3294793e37e93a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a300e4591c24487929d384141c3294793e37e93a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a300e4591c24487929d384141c3294793e37e93a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a300e4591c24487929d384141c3294793e37e93a/comments", "author": null, "committer": null, "parents": [{"sha": "61806a93f3572dae7f2283d12207fc4f6a737a0f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/61806a93f3572dae7f2283d12207fc4f6a737a0f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/61806a93f3572dae7f2283d12207fc4f6a737a0f"}], "stats": {"total": 40, "additions": 34, "deletions": 6}, "files": [{"sha": "8326b55101a242c774367b64865a889f54fdf35b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a300e4591c24487929d384141c3294793e37e93a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a300e4591c24487929d384141c3294793e37e93a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a300e4591c24487929d384141c3294793e37e93a", "patch": "@@ -1,3 +1,8 @@\n+2012-06-22  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* tree-ssa-live.c (remove_unused_scope_block_p): Remove again\n+\tDECL_IGNORED_P non-reg vars even if they are used.\n+\n 2012-06-21  Alexandre Oliva  <aoliva@redhat.com>\n \n \tPR debug/53671\n@@ -48,7 +53,7 @@\n \tx_cur_stmt_list field of the restored language function.\n \n 2012-06-21   Sterling Augustine  <saugustine@google.com>\n-        Cary Coutant  <ccoutant@google.com>\n+             Cary Coutant  <ccoutant@google.com>\n \n \t* dwarf2out.c (is_cu_die, is_namespace_die, is_class_die,\n \tadd_AT_pubnames, add_enumerator_pubname, want_pubnames): New functions."}, {"sha": "fe32345683805ec28eb34fabae1dc5c626628015", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a300e4591c24487929d384141c3294793e37e93a/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a300e4591c24487929d384141c3294793e37e93a/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=a300e4591c24487929d384141c3294793e37e93a", "patch": "@@ -1,3 +1,7 @@\n+2012-06-22  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gnat.dg/lto15.ad[sb]: New test.\n+\n 2012-06-21  Meador Inge  <meadori@codesourcery.com>\n \n \tPR c/53702"}, {"sha": "b1bc25196f190ae75f026c3f13640d101da98d4f", "filename": "gcc/testsuite/gnat.dg/lto15.adb", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a300e4591c24487929d384141c3294793e37e93a/gcc%2Ftestsuite%2Fgnat.dg%2Flto15.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a300e4591c24487929d384141c3294793e37e93a/gcc%2Ftestsuite%2Fgnat.dg%2Flto15.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Flto15.adb?ref=a300e4591c24487929d384141c3294793e37e93a", "patch": "@@ -0,0 +1,11 @@\n+-- { dg-do compile }\n+-- { dg-options \"-O -flto -g\" }\n+\n+package body Lto15 is\n+\n+   function Proc (Data : Arr) return R is\n+   begin\n+      return (Data'Length, Data);\n+   end;\n+\n+end Lto15;"}, {"sha": "297ea0c58e07245a7b6bda53206838b8ce7ec28d", "filename": "gcc/testsuite/gnat.dg/lto15.ads", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a300e4591c24487929d384141c3294793e37e93a/gcc%2Ftestsuite%2Fgnat.dg%2Flto15.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a300e4591c24487929d384141c3294793e37e93a/gcc%2Ftestsuite%2Fgnat.dg%2Flto15.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Flto15.ads?ref=a300e4591c24487929d384141c3294793e37e93a", "patch": "@@ -0,0 +1,11 @@\n+package Lto15 is\n+\n+   type Arr is array (Positive range <>) of Integer;\n+\n+   type R(Size : Positive) is record\n+      Data : Arr (1 .. Size);\n+   end record;\n+\n+   function Proc (Data : Arr) return R;\n+\n+end Lto15;"}, {"sha": "8f504f005fe39dfbde1817db95728e889561431c", "filename": "gcc/tree-ssa-live.c", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a300e4591c24487929d384141c3294793e37e93a/gcc%2Ftree-ssa-live.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a300e4591c24487929d384141c3294793e37e93a/gcc%2Ftree-ssa-live.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-live.c?ref=a300e4591c24487929d384141c3294793e37e93a", "patch": "@@ -458,11 +458,8 @@ remove_unused_scope_block_p (tree scope, bitmap global_unused_vars)\n       else if (TREE_CODE (*t) == VAR_DECL && DECL_HAS_VALUE_EXPR_P (*t))\n \tunused = false;\n \n-      /* Remove everything we don't generate debug info for.\n-\t Don't remove larger vars though, because BLOCK_VARS are\n-\t used also during expansion to determine which variables\n-\t might share stack space.  */\n-      else if (DECL_IGNORED_P (*t) && is_gimple_reg (*t))\n+      /* Remove everything we don't generate debug info for.  */\n+      else if (DECL_IGNORED_P (*t))\n \t{\n \t  *t = DECL_CHAIN (*t);\n \t  next = t;"}]}