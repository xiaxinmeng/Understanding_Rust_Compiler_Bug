{"sha": "f98e603e09daa98f71247d484ccf747031c2ab89", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Zjk4ZTYwM2UwOWRhYTk4ZjcxMjQ3ZDQ4NGNjZjc0NzAzMWMyYWI4OQ==", "commit": {"author": {"name": "Jason Merrill", "email": "merrill@gnu.org", "date": "1994-04-04T21:21:02Z"}, "committer": {"name": "Jason Merrill", "email": "merrill@gnu.org", "date": "1994-04-04T21:21:02Z"}, "message": "cccp.c (special_symbol, [...]): Output \"__wchar_t\" for C++.\n\n        * cccp.c (special_symbol, case T_WCHAR_TYPE): Output \"__wchar_t\"\n        for C++.\n\nFrom-SVN: r6959", "tree": {"sha": "588ec16773d35c6eee82aae0e152590b7ffbe9f5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/588ec16773d35c6eee82aae0e152590b7ffbe9f5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f98e603e09daa98f71247d484ccf747031c2ab89", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f98e603e09daa98f71247d484ccf747031c2ab89", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f98e603e09daa98f71247d484ccf747031c2ab89", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f98e603e09daa98f71247d484ccf747031c2ab89/comments", "author": null, "committer": null, "parents": [{"sha": "4563275aa69c581ed14801e31603407db1a18d0e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4563275aa69c581ed14801e31603407db1a18d0e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4563275aa69c581ed14801e31603407db1a18d0e"}], "stats": {"total": 11, "additions": 9, "deletions": 2}, "files": [{"sha": "1901cf6059ccd716c687581c4b12263bd5d1eec8", "filename": "gcc/cccp.c", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f98e603e09daa98f71247d484ccf747031c2ab89/gcc%2Fcccp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f98e603e09daa98f71247d484ccf747031c2ab89/gcc%2Fcccp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcccp.c?ref=f98e603e09daa98f71247d484ccf747031c2ab89", "patch": "@@ -3820,8 +3820,15 @@ special_symbol (hp, op)\n #endif\n \n   case T_WCHAR_TYPE:\n-    buf = (char *) alloca (3 + strlen (WCHAR_TYPE));\n-    sprintf (buf, \"%s\", WCHAR_TYPE);\n+    /* In C++, wchar_t is a distinct basic type, and we can expect\n+       __wchar_t to be defined by cc1plus.  */\n+    if (cplusplus)\n+      buf = \"__wchar_t\";\n+    else\n+      {\n+\tbuf = (char *) alloca (3 + strlen (WCHAR_TYPE));\n+\tsprintf (buf, \"%s\", WCHAR_TYPE);\n+      }\n     break;\n \n   case T_USER_LABEL_PREFIX_TYPE:"}]}