{"sha": "7dca85bf15de2cdb18cc1c3f1706c603fb91f8fb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2RjYTg1YmYxNWRlMmNkYjE4Y2MxYzNmMTcwNmM2MDNmYjkxZjhmYg==", "commit": {"author": {"name": "Segher Boessenkool", "email": "segher@kernel.crashing.org", "date": "2016-10-13T18:25:15Z"}, "committer": {"name": "Segher Boessenkool", "email": "segher@gcc.gnu.org", "date": "2016-10-13T18:25:15Z"}, "message": "Create the *logue in the same order as before (PR77962)\n\nPR77962 shows Go failing on 32-bit x86.  This happens because the i386\nport requires the split stack prologue to be created before the normal\nprologue, and my previous patch changed it to be the other way around.\n\nThis patch changes it back.  Things will be exactly as before for targets\nthat do not do shrink-wrapping for separate components.  For targets\nthat *do* support it, all three prologue/epilogue creation functions\nwill now be called twice for functions that have anything wrapped\nseparately (instead of just the prologue created twice).\n\n\n\tPR bootstrap/77962\n\t* function.c (thread_prologue_and_epilogue_insns): Call all\n\tmake_*logue_seq in the same order as traditional.  Call them\n\tall a second time if shrink_wrapped-separate.\n\nFrom-SVN: r241135", "tree": {"sha": "80b08ba8169eefc90b1543b1221d2a682bbf3ef9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/80b08ba8169eefc90b1543b1221d2a682bbf3ef9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7dca85bf15de2cdb18cc1c3f1706c603fb91f8fb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7dca85bf15de2cdb18cc1c3f1706c603fb91f8fb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7dca85bf15de2cdb18cc1c3f1706c603fb91f8fb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7dca85bf15de2cdb18cc1c3f1706c603fb91f8fb/comments", "author": {"login": "segher", "id": 417629, "node_id": "MDQ6VXNlcjQxNzYyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/417629?v=4", "gravatar_id": "", "url": "https://api.github.com/users/segher", "html_url": "https://github.com/segher", "followers_url": "https://api.github.com/users/segher/followers", "following_url": "https://api.github.com/users/segher/following{/other_user}", "gists_url": "https://api.github.com/users/segher/gists{/gist_id}", "starred_url": "https://api.github.com/users/segher/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/segher/subscriptions", "organizations_url": "https://api.github.com/users/segher/orgs", "repos_url": "https://api.github.com/users/segher/repos", "events_url": "https://api.github.com/users/segher/events{/privacy}", "received_events_url": "https://api.github.com/users/segher/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c3e8838989fb2b0f5c26fc67bc60a92574dff9c2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c3e8838989fb2b0f5c26fc67bc60a92574dff9c2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c3e8838989fb2b0f5c26fc67bc60a92574dff9c2"}], "stats": {"total": 25, "additions": 19, "deletions": 6}, "files": [{"sha": "73e988ab9dad56cba6847adad81338ec0faace02", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7dca85bf15de2cdb18cc1c3f1706c603fb91f8fb/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7dca85bf15de2cdb18cc1c3f1706c603fb91f8fb/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7dca85bf15de2cdb18cc1c3f1706c603fb91f8fb", "patch": "@@ -1,3 +1,10 @@\n+2016-10-13  Segher Boessenkool  <segher@kernel.crashing.org>\n+\n+\tPR bootstrap/77962\n+\t* function.c (thread_prologue_and_epilogue_insns): Call all\n+\tmake_*logue_seq in the same order as traditional.  Call them\n+\tall a second time if shrink_wrapped_separate.\n+\n 2016-10-13  Marek Polacek  <polacek@redhat.com>\n \n \t* Makefile.in (insn-attrtab.o-warn, insn-dfatab.o-warn,"}, {"sha": "ea40ad1be892aa1b4532bccbe6837a9c43ab5b40", "filename": "gcc/function.c", "status": "modified", "additions": 12, "deletions": 6, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7dca85bf15de2cdb18cc1c3f1706c603fb91f8fb/gcc%2Ffunction.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7dca85bf15de2cdb18cc1c3f1706c603fb91f8fb/gcc%2Ffunction.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffunction.c?ref=7dca85bf15de2cdb18cc1c3f1706c603fb91f8fb", "patch": "@@ -5923,7 +5923,9 @@ thread_prologue_and_epilogue_insns (void)\n   edge entry_edge = single_succ_edge (ENTRY_BLOCK_PTR_FOR_FN (cfun));\n   edge orig_entry_edge = entry_edge;\n \n+  rtx_insn *split_prologue_seq = make_split_prologue_seq ();\n   rtx_insn *prologue_seq = make_prologue_seq ();\n+  rtx_insn *epilogue_seq = make_epilogue_seq ();\n \n   /* Try to perform a kind of shrink-wrapping, making sure the\n      prologue/epilogue is emitted only around those parts of the\n@@ -5935,13 +5937,17 @@ thread_prologue_and_epilogue_insns (void)\n   try_shrink_wrapping_separate (entry_edge->dest);\n \n   /* If that did anything for any component we now need the generate the\n-     \"main\" prologue again.  If that does not work for some target then\n-     that target should not enable separate shrink-wrapping.  */\n+     \"main\" prologue again.  Because some targets require some of these\n+     to be called in a specific order (i386 requires the split prologue\n+     to be first, for example), we create all three sequences again here.\n+     If this does not work for some target, that target should not enable\n+     separate shrink-wrapping.  */\n   if (crtl->shrink_wrapped_separate)\n-    prologue_seq = make_prologue_seq ();\n-\n-  rtx_insn *split_prologue_seq = make_split_prologue_seq ();\n-  rtx_insn *epilogue_seq = make_epilogue_seq ();\n+    {\n+      split_prologue_seq = make_split_prologue_seq ();\n+      prologue_seq = make_prologue_seq ();\n+      epilogue_seq = make_epilogue_seq ();\n+    }\n \n   rtl_profile_for_bb (EXIT_BLOCK_PTR_FOR_FN (cfun));\n "}]}