{"sha": "b56ac9d5f41fc799b25397d2236e76c47893e128", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjU2YWM5ZDVmNDFmYzc5OWIyNTM5N2QyMjM2ZTc2YzQ3ODkzZTEyOA==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2015-02-20T19:01:46Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2015-02-20T19:01:46Z"}, "message": "status_cxx2011.xml: Document implementation-defined behavior.\n\n\t* doc/xml/manual/status_cxx2011.xml: Document implementation-defined\n\tbehavior.\n\t* doc/html/manual/status.html: Regenerate.\n\nFrom-SVN: r220878", "tree": {"sha": "246e6a73815682b598c7e69c664535b0c4cf932c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/246e6a73815682b598c7e69c664535b0c4cf932c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b56ac9d5f41fc799b25397d2236e76c47893e128", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b56ac9d5f41fc799b25397d2236e76c47893e128", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b56ac9d5f41fc799b25397d2236e76c47893e128", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b56ac9d5f41fc799b25397d2236e76c47893e128/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3c20c9bc8a2eb19e97c9d04952d696e7d90a1d63", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3c20c9bc8a2eb19e97c9d04952d696e7d90a1d63", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3c20c9bc8a2eb19e97c9d04952d696e7d90a1d63"}], "stats": {"total": 152, "additions": 152, "deletions": 0}, "files": [{"sha": "e846e796c9b0ebd2a03b8e92f61f7f591d9b33a0", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b56ac9d5f41fc799b25397d2236e76c47893e128/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b56ac9d5f41fc799b25397d2236e76c47893e128/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=b56ac9d5f41fc799b25397d2236e76c47893e128", "patch": "@@ -4,6 +4,10 @@\n \t* python/libstdcxx/v6/printers.py (StdTuplePrinter): Handle new\n \ttuple layout.\n \n+\t* doc/xml/manual/status_cxx2011.xml: Document implementation-defined\n+\tbehavior.\n+\t* doc/html/manual/status.html: Regenerate.\n+\n 2015-02-19  Jonathan Wakely  <jwakely@redhat.com>\n \n \tPR libstdc++/58357"}, {"sha": "289c5623e63739a88fc6267d2ceca8ee0ee8b4db", "filename": "libstdc++-v3/doc/html/manual/status.html", "status": "modified", "additions": 62, "deletions": 0, "changes": 62, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b56ac9d5f41fc799b25397d2236e76c47893e128/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fstatus.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b56ac9d5f41fc799b25397d2236e76c47893e128/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fstatus.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fstatus.html?ref=b56ac9d5f41fc799b25397d2236e76c47893e128", "patch": "@@ -227,17 +227,79 @@\n       see <a class=\"link\" href=\"status.html#iso.1998.specific\" title=\"Implementation Specific Behavior\">C++ 1998/2003 Implementation\n       Specific Behavior</a>. This section only documents behaviour which\n       is new in the 2011 standard.\n+   </p><p>\n+      <span class=\"emphasis\"><em>20.7.2.2.1 [util.smartptr.shared.const]</em></span>\n+      Only <code class=\"classname\">bad_alloc</code> (or types derived from it) will\n+      be thrown.\n    </p><p>\n       <span class=\"emphasis\"><em>20.8.9.1.3 [func.bind.place]/1</em></span> There are 29\n       placeholders defined and the placeholder types are\n       <code class=\"literal\">CopyAssignable</code>.\n+   </p><p>\n+      <span class=\"emphasis\"><em>21.2.3.2 [char.traits.specializations.char16_t]</em></span>,\n+      <span class=\"emphasis\"><em>21.2.3.3 [char.traits.specializations.char32_t]</em></span>\n+      The types <code class=\"classname\">u16streampos</code> and\n+      <code class=\"classname\">u32streampos</code> are both synonyms for\n+      <code class=\"classname\">fpos&lt;mbstate_t&gt;</code>.\n+      The function <code class=\"function\">eof</code> returns <code class=\"code\">int_type(-1)</code>.\n+   </p><p>\n+      <span class=\"emphasis\"><em>21.2.3.2 [char.traits.specializations.char16_t]</em></span>\n+      The type <code class=\"classname\">u16streampos</code> is a synonym for\n+      <code class=\"classname\">fpos&lt;mbstate_t&gt;</code>.\n+      The function <code class=\"function\">eof</code> returns <code class=\"code\">int_type(-1)</code>.\n+   </p><p>\n+      <span class=\"emphasis\"><em>22.4.5.1.2 [locale.time.get.virtuals]</em></span>,\n+      <span class=\"emphasis\"><em>22.4.5.3.2 [locale.time.put.virtuals]</em></span>\n+      Additional supported formats should be documented here.\n+   </p><p>\n+      <span class=\"emphasis\"><em> 22.4.7.1.2 [locale.messages.virtuals]</em></span>\n+      The mapping should be documented here.\n    </p><p>\n       <span class=\"emphasis\"><em>23.5.4.2 [unord.map.cnstr]</em></span>,\n       <span class=\"emphasis\"><em>23.5.5.2 [unord.multimap.cnstr]</em></span>,\n       <span class=\"emphasis\"><em>23.5.6.2 [unord.set.cnstr]</em></span>,\n       <span class=\"emphasis\"><em>23.5.7.2 [unord.multiset.cnstr]</em></span>\n       The default minimal bucket count is 0 for the default constructors, range\n       constructors and initializer-list constructors.\n+   </p><p>\n+      <span class=\"emphasis\"><em>25.3.12 [alg.random.shuffle]</em></span>\n+      The two-argument overload of <code class=\"function\">random_shuffle</code>\n+      uses <code class=\"function\">rand</code> as the source of randomness.\n+   </p><p>\n+      <span class=\"emphasis\"><em>26.5.5 [rand.predef]</em></span>\n+      The type <code class=\"classname\">default_random_engine</code> is a synonym for\n+      <code class=\"classname\">minstd_rand0</code>.\n+   </p><p>\n+      <span class=\"emphasis\"><em> 26.5.6 [rand.device] </em></span>\n+      The default <code class=\"code\">token</code> argument to the\n+      <code class=\"classname\">random_device</code> constructor is\n+      <code class=\"literal\">\"default\"</code>. Other valid arguments are\n+      <code class=\"literal\">\"/dev/random\"</code> and <code class=\"literal\">\"/dev/urandom\"</code>,\n+      which determine the character special file to read random bytes from.\n+      The <code class=\"literal\">\"default\"</code> token will read bytes from a hardware\n+      RNG if available (currently this only supports the IA-32 RDRAND\n+      instruction) otherwise it is equivalent to\n+      <code class=\"literal\">\"/dev/urandom\"</code>.\n+      An exception of type <code class=\"classname\">runtime_error</code> will be\n+      thrown if a <code class=\"classname\">random_device</code> object cannot open\n+      or read from the source of random bytes.\n+   </p><p>\n+      <span class=\"emphasis\"><em>26.5.8.1 [rand.dist.general]</em></span>\n+      The algorithms used by the distributions should be documented here.\n+   </p><p>\n+      <span class=\"emphasis\"><em>26.8 [c.math]</em></span> Whether the\n+      <code class=\"function\">rand</code> function introduces data races depends on\n+      the C library as the function is not provided by libstdc++.\n+   </p><p>\n+      <span class=\"emphasis\"><em>28.5.1 [re.synopt]</em></span>,\n+      <span class=\"emphasis\"><em> 28.5.2 [re.matchflag] </em></span>,\n+      <span class=\"emphasis\"><em> 28.5.3 [re.err] </em></span>\n+      <code class=\"code\">syntax_option_type</code>, <code class=\"code\">match_flag_type</code>\n+      and <code class=\"code\">error_type</code> are unscoped enumeration types.\n+   </p><p>\n+      <span class=\"emphasis\"><em>28.7 [re.traits]</em></span>\n+      The <code class=\"literal\">blank</code> character class corresponds to the\n+      <code class=\"code\">ctype_base::blank</code> mask.\n    </p><p>\n       <span class=\"emphasis\"><em>30.2.3 [thread.req.native]/1</em></span>\n       <code class=\"classname\">native_handle_type</code> and"}, {"sha": "72d73c1b064c1c04d190fbd0b9a55480dd706afd", "filename": "libstdc++-v3/doc/xml/manual/status_cxx2011.xml", "status": "modified", "additions": 86, "deletions": 0, "changes": 86, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b56ac9d5f41fc799b25397d2236e76c47893e128/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fstatus_cxx2011.xml", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b56ac9d5f41fc799b25397d2236e76c47893e128/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fstatus_cxx2011.xml", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fstatus_cxx2011.xml?ref=b56ac9d5f41fc799b25397d2236e76c47893e128", "patch": "@@ -2575,12 +2575,45 @@ particular release.\n       is new in the 2011 standard.\n    </para>\n \n+   <para>\n+      <emphasis>20.7.2.2.1 [util.smartptr.shared.const]</emphasis>\n+      Only <classname>bad_alloc</classname> (or types derived from it) will\n+      be thrown.\n+   </para>\n+\n    <para>\n       <emphasis>20.8.9.1.3 [func.bind.place]/1</emphasis> There are 29\n       placeholders defined and the placeholder types are\n       <literal>CopyAssignable</literal>.\n    </para>\n \n+   <para>\n+      <emphasis>21.2.3.2 [char.traits.specializations.char16_t]</emphasis>,\n+      <emphasis>21.2.3.3 [char.traits.specializations.char32_t]</emphasis>\n+      The types <classname>u16streampos</classname> and\n+      <classname>u32streampos</classname> are both synonyms for\n+      <classname>fpos&lt;mbstate_t&gt;</classname>.\n+      The function <function>eof</function> returns <code>int_type(-1)</code>.\n+   </para>\n+\n+   <para>\n+      <emphasis>21.2.3.2 [char.traits.specializations.char16_t]</emphasis>\n+      The type <classname>u16streampos</classname> is a synonym for\n+      <classname>fpos&lt;mbstate_t&gt;</classname>.\n+      The function <function>eof</function> returns <code>int_type(-1)</code>.\n+   </para>\n+\n+   <para>\n+      <emphasis>22.4.5.1.2 [locale.time.get.virtuals]</emphasis>,\n+      <emphasis>22.4.5.3.2 [locale.time.put.virtuals]</emphasis>\n+      Additional supported formats should be documented here.\n+   </para>\n+\n+   <para>\n+      <emphasis> 22.4.7.1.2 [locale.messages.virtuals]</emphasis>\n+      The mapping should be documented here.\n+   </para>\n+\n    <para>\n       <emphasis>23.5.4.2 [unord.map.cnstr]</emphasis>,\n       <emphasis>23.5.5.2 [unord.multimap.cnstr]</emphasis>,\n@@ -2590,6 +2623,59 @@ particular release.\n       constructors and initializer-list constructors.\n    </para>\n \n+   <para>\n+      <emphasis>25.3.12 [alg.random.shuffle]</emphasis>\n+      The two-argument overload of <function>random_shuffle</function>\n+      uses <function>rand</function> as the source of randomness.\n+   </para>\n+\n+   <para>\n+      <emphasis>26.5.5 [rand.predef]</emphasis>\n+      The type <classname>default_random_engine</classname> is a synonym for\n+      <classname>minstd_rand0</classname>.\n+   </para>\n+\n+   <para>\n+      <emphasis> 26.5.6 [rand.device] </emphasis>\n+      The default <code>token</code> argument to the\n+      <classname>random_device</classname> constructor is\n+      <literal>\"default\"</literal>. Other valid arguments are\n+      <literal>\"/dev/random\"</literal> and <literal>\"/dev/urandom\"</literal>,\n+      which determine the character special file to read random bytes from.\n+      The <literal>\"default\"</literal> token will read bytes from a hardware\n+      RNG if available (currently this only supports the IA-32 RDRAND\n+      instruction) otherwise it is equivalent to\n+      <literal>\"/dev/urandom\"</literal>.\n+      An exception of type <classname>runtime_error</classname> will be\n+      thrown if a <classname>random_device</classname> object cannot open\n+      or read from the source of random bytes.\n+   </para>\n+\n+   <para>\n+      <emphasis>26.5.8.1 [rand.dist.general]</emphasis>\n+      The algorithms used by the distributions should be documented here.\n+   </para>\n+\n+   <para>\n+      <emphasis>26.8 [c.math]</emphasis> Whether the\n+      <function>rand</function> function introduces data races depends on\n+      the C library as the function is not provided by libstdc++.\n+   </para>\n+\n+   <para>\n+      <emphasis>28.5.1 [re.synopt]</emphasis>,\n+      <emphasis> 28.5.2 [re.matchflag] </emphasis>,\n+      <emphasis> 28.5.3 [re.err] </emphasis>\n+      <code>syntax_option_type</code>, <code>match_flag_type</code>\n+      and <code>error_type</code> are unscoped enumeration types.\n+   </para>\n+\n+   <para>\n+      <emphasis>28.7 [re.traits]</emphasis>\n+      The <literal>blank</literal> character class corresponds to the\n+      <code>ctype_base::blank</code> mask.\n+   </para>\n+\n    <para>\n       <emphasis>30.2.3 [thread.req.native]/1</emphasis>\n       <classname>native_handle_type</classname> and"}]}