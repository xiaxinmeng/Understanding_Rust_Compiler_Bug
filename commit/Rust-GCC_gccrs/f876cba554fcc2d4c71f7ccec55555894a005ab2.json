{"sha": "f876cba554fcc2d4c71f7ccec55555894a005ab2", "node_id": "C_kwDOANBUbNoAKGY4NzZjYmE1NTRmY2MyZDRjNzFmN2NjZWM1NTU1NTg5NGEwMDVhYjI", "commit": {"author": {"name": "liushuyu", "email": "liushuyu011@gmail.com", "date": "2022-04-18T09:36:02Z"}, "committer": {"name": "liushuyu", "email": "liushuyu011@gmail.com", "date": "2022-04-19T07:46:26Z"}, "message": "macros: save included filename into session manager", "tree": {"sha": "b2d0cb6fbe29b3e38b29557b9090464bea927168", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b2d0cb6fbe29b3e38b29557b9090464bea927168"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f876cba554fcc2d4c71f7ccec55555894a005ab2", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE6x/rcKrl3aOwzUVJI9HORTRBlDcFAmJeaNMACgkQI9HORTRB\nlDflYQ/9GxqFDd1X8yecWAwlctaCuqgLJ5I8j8D1hpKUwJnPCtHH3UrTWHUSofKj\n3zyWchX6YD/6AP5mH4s6QSh3kVInG/iNWqKYgd6uizDETh3o57+Y3RaO9jDnI/Ej\n3/XeMk1yUtvAemb5UDYKWqzK2slnqUNcB2kcrVT/AOppHtpfhKnEu9jBH6sh2oFV\nkNxf/QIn4/BgkfdQiPCjFngoNDCfpkLB+cnLpn+KT6waNkEEdVsIUw9XtsVWSmbP\nHj5KkkzwlZah1AYyqLM7XoxFRhTFMhKA4wIjGrLvy1L6SjESbhM+w0XYOr+DcS4P\nBTxvQ2Unt5Iow0UICDd5XTiR8H1SHc8xvGwb6FmMZFcINx7JGiUTFxZGWlCinoro\nFCv6Mw0zURZ5bdzBfQ3GGVE8BhwZtQ9FtHCMmqQhBkICn3xmMECcp4ljZx7owGx6\ndmncdWyQlxvecXidX0ZkYeuyzkfeibjMgl7E9YD/a3CqMho0AfaJNzOsiPZs9IZH\nNKxwXcdztF92I3/vHALiu1ppckC4rfK6lo5hnOyOJn50HU2ahHDvLDbcydLxcOxC\nolxcQ+AtEcEwKAh0Pv7ov9ff9klve2P6iR9znJKxwiUn2WWOLxJHiT/iKRqviIiK\nXQEsVDLC2rT+lSse5FS08qahkxEh7R27EAUjXhKrNSLwvrEf3lQ=\n=HCMr\n-----END PGP SIGNATURE-----", "payload": "tree b2d0cb6fbe29b3e38b29557b9090464bea927168\nparent e753fa4e3633c6e6158ca26d930f0d1aaca15a6a\nauthor liushuyu <liushuyu011@gmail.com> 1650274562 -0600\ncommitter liushuyu <liushuyu011@gmail.com> 1650354386 -0600\n\nmacros: save included filename into session manager\n"}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f876cba554fcc2d4c71f7ccec55555894a005ab2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f876cba554fcc2d4c71f7ccec55555894a005ab2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f876cba554fcc2d4c71f7ccec55555894a005ab2/comments", "author": {"login": "liushuyu", "id": 6829345, "node_id": "MDQ6VXNlcjY4MjkzNDU=", "avatar_url": "https://avatars.githubusercontent.com/u/6829345?v=4", "gravatar_id": "", "url": "https://api.github.com/users/liushuyu", "html_url": "https://github.com/liushuyu", "followers_url": "https://api.github.com/users/liushuyu/followers", "following_url": "https://api.github.com/users/liushuyu/following{/other_user}", "gists_url": "https://api.github.com/users/liushuyu/gists{/gist_id}", "starred_url": "https://api.github.com/users/liushuyu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/liushuyu/subscriptions", "organizations_url": "https://api.github.com/users/liushuyu/orgs", "repos_url": "https://api.github.com/users/liushuyu/repos", "events_url": "https://api.github.com/users/liushuyu/events{/privacy}", "received_events_url": "https://api.github.com/users/liushuyu/received_events", "type": "User", "site_admin": false}, "committer": {"login": "liushuyu", "id": 6829345, "node_id": "MDQ6VXNlcjY4MjkzNDU=", "avatar_url": "https://avatars.githubusercontent.com/u/6829345?v=4", "gravatar_id": "", "url": "https://api.github.com/users/liushuyu", "html_url": "https://github.com/liushuyu", "followers_url": "https://api.github.com/users/liushuyu/followers", "following_url": "https://api.github.com/users/liushuyu/following{/other_user}", "gists_url": "https://api.github.com/users/liushuyu/gists{/gist_id}", "starred_url": "https://api.github.com/users/liushuyu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/liushuyu/subscriptions", "organizations_url": "https://api.github.com/users/liushuyu/orgs", "repos_url": "https://api.github.com/users/liushuyu/repos", "events_url": "https://api.github.com/users/liushuyu/events{/privacy}", "received_events_url": "https://api.github.com/users/liushuyu/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e753fa4e3633c6e6158ca26d930f0d1aaca15a6a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e753fa4e3633c6e6158ca26d930f0d1aaca15a6a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e753fa4e3633c6e6158ca26d930f0d1aaca15a6a"}], "stats": {"total": 27, "additions": 21, "deletions": 6}, "files": [{"sha": "fb302416fffdfc28d19d41fcceea06dbc675f709", "filename": "gcc/rust/expand/rust-macro-builtins.cc", "status": "modified", "additions": 8, "deletions": 6, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f876cba554fcc2d4c71f7ccec55555894a005ab2/gcc%2Frust%2Fexpand%2Frust-macro-builtins.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f876cba554fcc2d4c71f7ccec55555894a005ab2/gcc%2Frust%2Fexpand%2Frust-macro-builtins.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fexpand%2Frust-macro-builtins.cc?ref=f876cba554fcc2d4c71f7ccec55555894a005ab2", "patch": "@@ -425,22 +425,24 @@ MacroBuiltin::include (Location invoc_locus, AST::MacroInvocData &invoc)\n   if (lit_expr == nullptr)\n     return AST::ASTFragment::create_error ();\n \n-  std::string target_filename\n+  std::string filename\n     = source_relative_path (lit_expr->as_string (), invoc_locus);\n+  auto target_filename\n+    = Rust::Session::get_instance ().include_extra_file (std::move (filename));\n \n-  RAIIFile target_file (target_filename.c_str ());\n+  RAIIFile target_file (target_filename);\n   Linemap *linemap = Session::get_instance ().linemap;\n \n   if (target_file.get_raw () == nullptr)\n     {\n-      rust_error_at (lit_expr->get_locus (), \"cannot open included file %s: %m\",\n-\t\t     target_filename.c_str ());\n+      rust_error_at (lit_expr->get_locus (),\n+\t\t     \"cannot open included file %qs: %m\", target_filename);\n       return AST::ASTFragment::create_error ();\n     }\n \n-  rust_debug (\"Attempting to parse included file %s\", target_filename.c_str ());\n+  rust_debug (\"Attempting to parse included file %s\", target_filename);\n \n-  Lexer lex (target_filename.c_str (), std::move (target_file), linemap);\n+  Lexer lex (target_filename, std::move (target_file), linemap);\n   Parser<Lexer> parser (std::move (lex));\n \n   auto parsed_items = parser.parse_items ();"}, {"sha": "0c15711ab0ef8567392c8e54f72bcaf4e478af5c", "filename": "gcc/rust/rust-session-manager.h", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f876cba554fcc2d4c71f7ccec55555894a005ab2/gcc%2Frust%2Frust-session-manager.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f876cba554fcc2d4c71f7ccec55555894a005ab2/gcc%2Frust%2Frust-session-manager.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Frust-session-manager.h?ref=f876cba554fcc2d4c71f7ccec55555894a005ab2", "patch": "@@ -235,6 +235,10 @@ struct Session\n    * every file so eh. */\n   std::string injected_crate_name;\n \n+  /* extra files get included during late stages of compilation (e.g. macro\n+   * expansion) */\n+  std::vector<std::string> extra_files;\n+\n   // backend wrapper to GCC GENERIC\n   Backend *backend;\n \n@@ -267,6 +271,15 @@ struct Session\n   void parse_files (int num_files, const char **files);\n   void init_options ();\n \n+  /* This function saves the filename data into the session manager using the\n+   * `move` semantics, and returns a C-style string referencing the input\n+   * std::string */\n+  inline const char *include_extra_file (std::string filename)\n+  {\n+    extra_files.push_back (std::move (filename));\n+    return extra_files.back ().c_str ();\n+  }\n+\n private:\n   Session () = default;\n   void parse_file (const char *filename);"}]}