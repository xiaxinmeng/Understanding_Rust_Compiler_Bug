{"sha": "0603a39d29a6d2edde51c9587802fb284690d781", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDYwM2EzOWQyOWE2ZDJlZGRlNTFjOTU4NzgwMmZiMjg0NjkwZDc4MQ==", "commit": {"author": {"name": "J\"orn Rennecke", "email": "amylaar@cygnus.co.uk", "date": "1999-02-11T07:48:50Z"}, "committer": {"name": "Joern Rennecke", "email": "amylaar@gcc.gnu.org", "date": "1999-02-11T07:48:50Z"}, "message": "sh.md (is_sfunc): New attribute.\n\n\t* sh.md (is_sfunc): New attribute.\n\t* sh.h (INSN_SETS_ARE_DELAYED, INSN_REFERENCES_ARE_DELAYED): Use it.\n\nFrom-SVN: r25152", "tree": {"sha": "02c1b9612ad23ea772f19a9904c9bc038bee0c4b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/02c1b9612ad23ea772f19a9904c9bc038bee0c4b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0603a39d29a6d2edde51c9587802fb284690d781", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0603a39d29a6d2edde51c9587802fb284690d781", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0603a39d29a6d2edde51c9587802fb284690d781", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0603a39d29a6d2edde51c9587802fb284690d781/comments", "author": null, "committer": null, "parents": [{"sha": "9a95b64adf0a6feb29ac7b912807f69bdc85af83", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9a95b64adf0a6feb29ac7b912807f69bdc85af83", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9a95b64adf0a6feb29ac7b912807f69bdc85af83"}], "stats": {"total": 14, "additions": 11, "deletions": 3}, "files": [{"sha": "b86e61196f5a3fa7ff9c054a4a90e2dc7816b75a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0603a39d29a6d2edde51c9587802fb284690d781/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0603a39d29a6d2edde51c9587802fb284690d781/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0603a39d29a6d2edde51c9587802fb284690d781", "patch": "@@ -1,3 +1,8 @@\n+Thu Feb 11 15:20:49 1999  J\"orn Rennecke <amylaar@cygnus.co.uk>\n+\n+\t* sh.md (is_sfunc): New attribute.\n+\t* sh.h (INSN_SETS_ARE_DELAYED, INSN_REFERENCES_ARE_DELAYED): Use it.\n+\n Thu Feb 11 01:06:49 1999  Nathan Sidwell  <nathan@acm.org>\n \n \t* fold-const.c (range_binop): Take account of the bounded nature"}, {"sha": "db07aaea9c2555cbd7a2cf856ceead15579768ca", "filename": "gcc/config/sh/sh.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0603a39d29a6d2edde51c9587802fb284690d781/gcc%2Fconfig%2Fsh%2Fsh.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0603a39d29a6d2edde51c9587802fb284690d781/gcc%2Fconfig%2Fsh%2Fsh.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh.h?ref=0603a39d29a6d2edde51c9587802fb284690d781", "patch": "@@ -1636,7 +1636,7 @@ extern struct rtx_def *sh_builtin_saveregs ();\n    which set the argument registers into the delay slot of the millicode\n    call -- thus they act more like traditional CALL_INSNs.\n \n-   get_attr_type will try to recognize the given insn, so make sure to\n+   get_attr_is_sfunc will try to recognize the given insn, so make sure to\n    filter out things it will not accept -- SEQUENCE, USE and CLOBBER insns\n    in particular.  */\n \n@@ -1645,14 +1645,14 @@ extern struct rtx_def *sh_builtin_saveregs ();\n     && GET_CODE (PATTERN (X)) != SEQUENCE\t\\\n     && GET_CODE (PATTERN (X)) != USE\t\t\\\n     && GET_CODE (PATTERN (X)) != CLOBBER\t\\\n-    && get_attr_type (X) == TYPE_SFUNC))\n+    && get_attr_is_sfunc (X)))\n \n #define INSN_REFERENCES_ARE_DELAYED(X) \t\t\\\n   ((GET_CODE (X) == INSN\t\t\t\\\n     && GET_CODE (PATTERN (X)) != SEQUENCE\t\\\n     && GET_CODE (PATTERN (X)) != USE\t\t\\\n     && GET_CODE (PATTERN (X)) != CLOBBER\t\\\n-    && get_attr_type (X) == TYPE_SFUNC))\n+    && get_attr_is_sfunc (X)))\n \n /* Compute the cost of an address.  For the SH, all valid addresses are\n    the same cost.  */"}, {"sha": "8dc823cef765d03c6543617870fa50938a40598d", "filename": "gcc/config/sh/sh.md", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0603a39d29a6d2edde51c9587802fb284690d781/gcc%2Fconfig%2Fsh%2Fsh.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0603a39d29a6d2edde51c9587802fb284690d781/gcc%2Fconfig%2Fsh%2Fsh.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh.md?ref=0603a39d29a6d2edde51c9587802fb284690d781", "patch": "@@ -482,6 +482,9 @@\n \t (eq_attr \"length\" \"2\") (const_string \"yes\")\n \t ] (const_string \"no\")))\n \n+(define_attr \"is_sfunc\" \"\"\n+  (if_then_else (eq_attr \"type\" \"sfunc\") (const_int 1) (const_int 0)))\n+\n (define_delay\n   (eq_attr \"needs_delay_slot\" \"yes\")\n   [(eq_attr \"in_delay_slot\" \"yes\") (nil) (nil)])"}]}