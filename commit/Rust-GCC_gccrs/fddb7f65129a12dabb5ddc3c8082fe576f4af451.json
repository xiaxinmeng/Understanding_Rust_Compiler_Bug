{"sha": "fddb7f65129a12dabb5ddc3c8082fe576f4af451", "node_id": "C_kwDOANBUbNoAKGZkZGI3ZjY1MTI5YTEyZGFiYjVkZGMzYzgwODJmZTU3NmY0YWY0NTE", "commit": {"author": {"name": "Michael Meissner", "email": "meissner@linux.ibm.com", "date": "2022-06-11T04:40:16Z"}, "committer": {"name": "Michael Meissner", "email": "meissner@linux.ibm.com", "date": "2022-06-11T04:40:16Z"}, "message": "Disable generating load/store vector pairs for block copies.\n\nTesting has found that using load and store vector pair for block copies\ncan result in a slow down on power10.  This patch disables using the\nvector pair instructions for block copies if we are tuning for power10.\n\n2022-06-11   Michael Meissner  <meissner@linux.ibm.com>\n\ngcc/\n\t* config/rs6000/rs6000.cc (rs6000_option_override_internal): Do\n\tnot generate block copies with vector pair instructions if we are\n\ttuning for power10.", "tree": {"sha": "26dd0ddc7e3b78af4607d570e3cd56b72431ea57", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/26dd0ddc7e3b78af4607d570e3cd56b72431ea57"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fddb7f65129a12dabb5ddc3c8082fe576f4af451", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fddb7f65129a12dabb5ddc3c8082fe576f4af451", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fddb7f65129a12dabb5ddc3c8082fe576f4af451", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fddb7f65129a12dabb5ddc3c8082fe576f4af451/comments", "author": null, "committer": null, "parents": [{"sha": "ef1e4d80dd30e7c46849fbb8b1ac49e672df1bbd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ef1e4d80dd30e7c46849fbb8b1ac49e672df1bbd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ef1e4d80dd30e7c46849fbb8b1ac49e672df1bbd"}], "stats": {"total": 5, "additions": 4, "deletions": 1}, "files": [{"sha": "59481d9ac7082fe664e0e8b7773288756747b2df", "filename": "gcc/config/rs6000/rs6000.cc", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fddb7f65129a12dabb5ddc3c8082fe576f4af451/gcc%2Fconfig%2Frs6000%2Frs6000.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fddb7f65129a12dabb5ddc3c8082fe576f4af451/gcc%2Fconfig%2Frs6000%2Frs6000.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.cc?ref=fddb7f65129a12dabb5ddc3c8082fe576f4af451", "patch": "@@ -4141,7 +4141,10 @@ rs6000_option_override_internal (bool global_init_p)\n \n   if (!(rs6000_isa_flags_explicit & OPTION_MASK_BLOCK_OPS_VECTOR_PAIR))\n     {\n-      if (TARGET_MMA && TARGET_EFFICIENT_UNALIGNED_VSX)\n+      /* Do not generate lxvp and stxvp on power10 since there are some\n+\t performance issues.  */\n+      if (TARGET_MMA && TARGET_EFFICIENT_UNALIGNED_VSX\n+\t  && rs6000_tune != PROCESSOR_POWER10)\n \trs6000_isa_flags |= OPTION_MASK_BLOCK_OPS_VECTOR_PAIR;\n       else\n \trs6000_isa_flags &= ~OPTION_MASK_BLOCK_OPS_VECTOR_PAIR;"}]}