{"sha": "cfa66dc16fb1508fc3050646a43bfa221ce50d7a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2ZhNjZkYzE2ZmIxNTA4ZmMzMDUwNjQ2YTQzYmZhMjIxY2U1MGQ3YQ==", "commit": {"author": {"name": "Diego Novillo", "email": "dnovillo@google.com", "date": "2007-08-10T20:02:33Z"}, "committer": {"name": "Diego Novillo", "email": "dnovillo@gcc.gnu.org", "date": "2007-08-10T20:02:33Z"}, "message": "tree-ssa.doxy: Update for doxygen 1.5.\n\n\n\t* tree-ssa.doxy: Update for doxygen 1.5.\n\tInclude all the files in the middle and back ends.\n\nFrom-SVN: r127349", "tree": {"sha": "48678a5bb1a44ae56b89c38d40f10625b29938ff", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/48678a5bb1a44ae56b89c38d40f10625b29938ff"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cfa66dc16fb1508fc3050646a43bfa221ce50d7a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cfa66dc16fb1508fc3050646a43bfa221ce50d7a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cfa66dc16fb1508fc3050646a43bfa221ce50d7a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cfa66dc16fb1508fc3050646a43bfa221ce50d7a/comments", "author": {"login": "dnovillo", "id": 7295335, "node_id": "MDQ6VXNlcjcyOTUzMzU=", "avatar_url": "https://avatars.githubusercontent.com/u/7295335?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dnovillo", "html_url": "https://github.com/dnovillo", "followers_url": "https://api.github.com/users/dnovillo/followers", "following_url": "https://api.github.com/users/dnovillo/following{/other_user}", "gists_url": "https://api.github.com/users/dnovillo/gists{/gist_id}", "starred_url": "https://api.github.com/users/dnovillo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dnovillo/subscriptions", "organizations_url": "https://api.github.com/users/dnovillo/orgs", "repos_url": "https://api.github.com/users/dnovillo/repos", "events_url": "https://api.github.com/users/dnovillo/events{/privacy}", "received_events_url": "https://api.github.com/users/dnovillo/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "656ca3addf8c63822213a5673f60bff775180c45", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/656ca3addf8c63822213a5673f60bff775180c45", "html_url": "https://github.com/Rust-GCC/gccrs/commit/656ca3addf8c63822213a5673f60bff775180c45"}], "stats": {"total": 329, "additions": 244, "deletions": 85}, "files": [{"sha": "a02afbab58841562be06dc865c0a9b921629ac39", "filename": "contrib/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cfa66dc16fb1508fc3050646a43bfa221ce50d7a/contrib%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cfa66dc16fb1508fc3050646a43bfa221ce50d7a/contrib%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2FChangeLog?ref=cfa66dc16fb1508fc3050646a43bfa221ce50d7a", "patch": "@@ -1,3 +1,8 @@\n+2007-08-10  Diego Novillo  <dnovillo@google.com>\n+\n+\t* tree-ssa.doxy: Update for doxygen 1.5.\n+\tInclude all the files in the middle and back ends.\n+\n 2007-06-30  Hans-Peter Nilsson  <hp@axis.com>\n \n \t* gcc_update (files_and_dependencies): Handle"}, {"sha": "7a284e754aa5e98beb85058613c5e2a855919f58", "filename": "contrib/tree-ssa.doxy", "status": "modified", "additions": 239, "deletions": 85, "changes": 324, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cfa66dc16fb1508fc3050646a43bfa221ce50d7a/contrib%2Ftree-ssa.doxy", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cfa66dc16fb1508fc3050646a43bfa221ce50d7a/contrib%2Ftree-ssa.doxy", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Ftree-ssa.doxy?ref=cfa66dc16fb1508fc3050646a43bfa221ce50d7a", "patch": "@@ -1,4 +1,4 @@\n-# Doxyfile 1.3.5\n+# Doxyfile 1.5.2\n \n # This file describes the settings to be used by the documentation system\n # doxygen (www.doxygen.org) for a project\n@@ -27,7 +27,8 @@ OUTPUT_DIRECTORY       = @OUTPUT_DIRECTORY@\n # by executing (via popen()) the command <filter> <input-file>, where <filter> \n # is the value of the INPUT_FILTER tag, and <input-file> is the name of an \n # input file. Doxygen will then use the output that the filter program writes \n-# to standard output.\n+# to standard output.  If FILTER_PATTERNS is specified, this tag will be \n+# ignored.\n \n INPUT_FILTER           = @INPUT_FILTER@\n \n@@ -40,39 +41,46 @@ INPUT_FILTER           = @INPUT_FILTER@\n # Project related configuration options\n #---------------------------------------------------------------------------\n \n+# This tag specifies the encoding used for all characters in the config file that \n+# follow. The default is UTF-8 which is also the encoding used for all text before \n+# the first occurrence of this tag. Doxygen uses libiconv (or the iconv built into \n+# libc) for the transcoding. See http://www.gnu.org/software/libiconv for the list of \n+# possible encodings.\n+\n+DOXYFILE_ENCODING      = UTF-8\n+\n # The PROJECT_NAME tag is a single word (or a sequence of words surrounded \n # by quotes) that should identify the project.\n \n-PROJECT_NAME           = \"Tree SSA\"\n+PROJECT_NAME           = \"GCC Middle and Back End API Reference\"\n \n # The PROJECT_NUMBER tag can be used to enter a project or revision number. \n # This could be handy for archiving the generated documentation or \n # if some version control system is used.\n \n PROJECT_NUMBER         = \n \n+# If the CREATE_SUBDIRS tag is set to YES, then doxygen will create \n+# 4096 sub-directories (in 2 levels) under the output directory of each output \n+# format and will distribute the generated files over these directories. \n+# Enabling this option can be useful when feeding doxygen a huge amount of \n+# source files, where putting all generated files in the same directory would \n+# otherwise cause performance problems for the file system.\n+\n+CREATE_SUBDIRS         = NO\n \n # The OUTPUT_LANGUAGE tag is used to specify the language in which all \n # documentation generated by doxygen is written. Doxygen will use this \n # information to generate all constant output in the proper language. \n # The default language is English, other supported languages are: \n-# Brazilian, Catalan, Chinese, Chinese-Traditional, Croatian, Czech, Danish, Dutch, \n-# Finnish, French, German, Greek, Hungarian, Italian, Japanese, Japanese-en \n-# (Japanese with English messages), Korean, Norwegian, Polish, Portuguese, \n-# Romanian, Russian, Serbian, Slovak, Slovene, Spanish, Swedish, and Ukrainian.\n+# Afrikaans, Arabic, Brazilian, Catalan, Chinese, Chinese-Traditional, \n+# Croatian, Czech, Danish, Dutch, Finnish, French, German, Greek, Hungarian, \n+# Italian, Japanese, Japanese-en (Japanese with English messages), Korean, \n+# Korean-en, Lithuanian, Norwegian, Polish, Portuguese, Romanian, Russian, \n+# Serbian, Slovak, Slovene, Spanish, Swedish, and Ukrainian.\n \n OUTPUT_LANGUAGE        = English\n \n-# This tag can be used to specify the encoding used in the generated output. \n-# The encoding is not always determined by the language that is chosen, \n-# but also whether or not the output is meant for Windows or non-Windows users. \n-# In case there is a difference, setting the USE_WINDOWS_ENCODING tag to YES \n-# forces the Windows encoding (this is the default for the Windows binary), \n-# whereas setting the tag to NO uses a Unix-style encoding (the default for \n-# all platforms other than Windows).\n-\n-USE_WINDOWS_ENCODING   = NO\n-\n # If the BRIEF_MEMBER_DESC tag is set to YES (the default) Doxygen will \n # include brief member descriptions after the members that are listed in \n # the file and class documentation (similar to JavaDoc). \n@@ -90,11 +98,12 @@ REPEAT_BRIEF           = YES\n # This tag implements a quasi-intelligent brief description abbreviator \n # that is used to form the text in various listings. Each string \n # in this list, if found as the leading text of the brief description, will be \n-# stripped from the text and the result after processing the whole list, is used \n-# as the annotated text. Otherwise, the brief description is used as-is. If left \n-# blank, the following values are used (\"$name\" is automatically replaced with the \n-# name of the entity): \"The $name class\" \"The $name widget\" \"The $name file\" \n-# \"is\" \"provides\" \"specifies\" \"contains\" \"represents\" \"a\" \"an\" \"the\"\n+# stripped from the text and the result after processing the whole list, is \n+# used as the annotated text. Otherwise, the brief description is used as-is. \n+# If left blank, the following values are used (\"$name\" is automatically \n+# replaced with the name of the entity): \"The $name class\" \"The $name widget\" \n+# \"The $name file\" \"is\" \"provides\" \"specifies\" \"contains\" \n+# \"represents\" \"a\" \"an\" \"the\"\n \n ABBREVIATE_BRIEF       = \n \n@@ -104,10 +113,10 @@ ABBREVIATE_BRIEF       =\n \n ALWAYS_DETAILED_SEC    = YES\n \n-# If the INLINE_INHERITED_MEMB tag is set to YES, doxygen will show all inherited \n-# members of a class in the documentation of that class as if those members were \n-# ordinary class members. Constructors, destructors and assignment operators of \n-# the base classes will not be shown.\n+# If the INLINE_INHERITED_MEMB tag is set to YES, doxygen will show all \n+# inherited members of a class in the documentation of that class as if those \n+# members were ordinary class members. Constructors, destructors and assignment \n+# operators of the base classes will not be shown.\n \n INLINE_INHERITED_MEMB  = YES\n \n@@ -120,10 +129,21 @@ FULL_PATH_NAMES        = NO\n # If the FULL_PATH_NAMES tag is set to YES then the STRIP_FROM_PATH tag \n # can be used to strip a user-defined part of the path. Stripping is \n # only done if one of the specified strings matches the left-hand part of \n-# the path. It is allowed to use relative paths in the argument list.\n+# the path. The tag can be used to show relative paths in the file list. \n+# If left blank the directory from which doxygen is run is used as the \n+# path to strip.\n \n STRIP_FROM_PATH        = \n \n+# The STRIP_FROM_INC_PATH tag can be used to strip a user-defined part of \n+# the path mentioned in the documentation of a class, which tells \n+# the reader which header file to include in order to use a class. \n+# If left blank only the name of the header file containing the class \n+# definition is used. Otherwise one should specify the include paths that \n+# are normally passed to the compiler using the -I flag.\n+\n+STRIP_FROM_INC_PATH    = \n+\n # If the SHORT_NAMES tag is set to YES, doxygen will generate much shorter \n # (but less readable) file names. This can be useful is your file systems \n # doesn't support long names like on DOS, Mac, or CD-ROM.\n@@ -159,12 +179,11 @@ DETAILS_AT_TOP         = NO\n \n INHERIT_DOCS           = YES\n \n-# If member grouping is used in the documentation and the DISTRIBUTE_GROUP_DOC \n-# tag is set to YES, then doxygen will reuse the documentation of the first \n-# member in the group (if any) for the other members of the group. By default \n-# all members of a group must be documented explicitly.\n+# If the SEPARATE_MEMBER_PAGES tag is set to YES, then doxygen will produce \n+# a new page for each member. If set to NO, the documentation of a member will \n+# be part of the file/class/namespace that contains it.\n \n-DISTRIBUTE_GROUP_DOC   = NO\n+SEPARATE_MEMBER_PAGES  = NO\n \n # The TAB_SIZE tag can be used to set the number of spaces in a tab. \n # Doxygen uses this value to replace tabs by spaces in code fragments.\n@@ -180,20 +199,41 @@ TAB_SIZE               = 8\n \n ALIASES                = \n \n-# Set the OPTIMIZE_OUTPUT_FOR_C tag to YES if your project consists of C sources \n-# only. Doxygen will then generate output that is more tailored for C. \n+# Set the OPTIMIZE_OUTPUT_FOR_C tag to YES if your project consists of C \n+# sources only. Doxygen will then generate output that is more tailored for C. \n # For instance, some of the names that are used will be different. The list \n # of all members will be omitted, etc.\n \n OPTIMIZE_OUTPUT_FOR_C  = YES\n \n-# Set the OPTIMIZE_OUTPUT_JAVA tag to YES if your project consists of Java sources \n-# only. Doxygen will then generate output that is more tailored for Java. \n+# Set the OPTIMIZE_OUTPUT_JAVA tag to YES if your project consists of Java \n+# sources only. Doxygen will then generate output that is more tailored for Java. \n # For instance, namespaces will be presented as packages, qualified scopes \n # will look different, etc.\n \n OPTIMIZE_OUTPUT_JAVA   = NO\n \n+# If you use STL classes (i.e. std::string, std::vector, etc.) but do not want to \n+# include (a tag file for) the STL sources as input, then you should \n+# set this tag to YES in order to let doxygen match functions declarations and \n+# definitions whose arguments contain STL classes (e.g. func(std::string); v.s. \n+# func(std::string) {}). This also make the inheritance and collaboration \n+# diagrams that involve STL classes more complete and accurate.\n+\n+BUILTIN_STL_SUPPORT    = NO\n+\n+# If you use Microsoft's C++/CLI language, you should set this option to YES to\n+# enable parsing support.\n+\n+CPP_CLI_SUPPORT        = NO\n+\n+# If member grouping is used in the documentation and the DISTRIBUTE_GROUP_DOC \n+# tag is set to YES, then doxygen will reuse the documentation of the first \n+# member in the group (if any) for the other members of the group. By default \n+# all members of a group must be documented explicitly.\n+\n+DISTRIBUTE_GROUP_DOC   = NO\n+\n # Set the SUBGROUPING tag to YES (the default) to allow class member groups of \n # the same type (for instance a group of public functions) to be put as a \n # subgroup of that type (e.g. under the Public Functions section). Set it to \n@@ -229,6 +269,13 @@ EXTRACT_STATIC         = YES\n \n EXTRACT_LOCAL_CLASSES  = YES\n \n+# This flag is only useful for Objective-C code. When set to YES local \n+# methods, which are defined in the implementation section but not in \n+# the interface are included in the documentation. \n+# If set to NO (the default) only methods in the interface are included.\n+\n+EXTRACT_LOCAL_METHODS  = NO\n+\n # If the HIDE_UNDOC_MEMBERS tag is set to YES, Doxygen will hide all \n # undocumented members of documented classes, files or namespaces. \n # If set to NO (the default) these members will be included in the \n@@ -269,7 +316,7 @@ INTERNAL_DOCS          = NO\n # file names in lower-case letters. If set to YES upper-case letters are also \n # allowed. This is useful if you have classes or files whose names only differ \n # in case and if your file system supports case sensitive file names. Windows \n-# users are advised to set this option to NO.\n+# and Mac users are advised to set this option to NO.\n \n CASE_SENSE_NAMES       = YES\n \n@@ -297,6 +344,23 @@ INLINE_INFO            = YES\n \n SORT_MEMBER_DOCS       = YES\n \n+# If the SORT_BRIEF_DOCS tag is set to YES then doxygen will sort the \n+# brief documentation of file, namespace and class members alphabetically \n+# by member name. If set to NO (the default) the members will appear in \n+# declaration order.\n+\n+SORT_BRIEF_DOCS        = NO\n+\n+# If the SORT_BY_SCOPE_NAME tag is set to YES, the class list will be \n+# sorted by fully-qualified names, including namespaces. If set to \n+# NO (the default), the class list will be sorted only by class name, \n+# not including the namespace part. \n+# Note: This option is not very useful if HIDE_SCOPE_NAMES is set to YES.\n+# Note: This option applies only to the class list, not to the \n+# alphabetical list.\n+\n+SORT_BY_SCOPE_NAME     = NO\n+\n # The GENERATE_TODOLIST tag can be used to enable (YES) or \n # disable (NO) the todo list. This list is created by putting \\todo \n # commands in the documentation.\n@@ -342,6 +406,22 @@ MAX_INITIALIZER_LINES  = 30\n \n SHOW_USED_FILES        = YES\n \n+# If the sources in your project are distributed over multiple directories \n+# then setting the SHOW_DIRECTORIES tag to YES will show the directory hierarchy \n+# in the documentation. The default is NO.\n+\n+SHOW_DIRECTORIES       = NO\n+\n+# The FILE_VERSION_FILTER tag can be used to specify a program or script that \n+# doxygen should invoke to get the current version for each file (typically from the \n+# version control system). Doxygen will invoke the program by executing (via \n+# popen()) the command <command> <input-file>, where <command> is the value of \n+# the FILE_VERSION_FILTER tag, and <input-file> is the name of an input file \n+# provided by doxygen. Whatever the program writes to standard output \n+# is used as the file version. See the manual for examples.\n+\n+FILE_VERSION_FILTER    = \n+\n #---------------------------------------------------------------------------\n # configuration options related to warning and progress messages\n #---------------------------------------------------------------------------\n@@ -370,10 +450,20 @@ WARN_IF_UNDOCUMENTED   = YES\n \n WARN_IF_DOC_ERROR      = YES\n \n+# This WARN_NO_PARAMDOC option can be abled to get warnings for \n+# functions that are documented, but have no documentation for their parameters \n+# or return value. If set to NO (the default) doxygen will only warn about \n+# wrong or incomplete parameter documentation, but not about the absence of \n+# documentation.\n+\n+WARN_NO_PARAMDOC       = NO\n+\n # The WARN_FORMAT tag determines the format of the warning messages that \n # doxygen can produce. The string should contain the $file, $line, and $text \n # tags, which will be replaced by the file and line number from which the \n-# warning originated and the warning text.\n+# warning originated and the warning text. Optionally the format may contain \n+# $version, which will be replaced by the version of the file (if it could \n+# be obtained via FILE_VERSION_FILTER)\n \n WARN_FORMAT            = \"$file:$line: $text\"\n \n@@ -392,20 +482,23 @@ WARN_LOGFILE           =\n # directories like \"/usr/src/myproject\". Separate the files or directories \n # with spaces.\n \n-INPUT                  = .\n+INPUT                  = gcc\n+\n+# This tag can be used to specify the character encoding of the source files that \n+# doxygen parses. Internally doxygen uses the UTF-8 encoding, which is also the default \n+# input encoding. Doxygen uses libiconv (or the iconv built into libc) for the transcoding. \n+# See http://www.gnu.org/software/libiconv for the list of possible encodings.\n+\n+INPUT_ENCODING         = UTF-8\n \n # If the value of the INPUT tag contains directories, you can use the \n # FILE_PATTERNS tag to specify one or more wildcard pattern (like *.cpp \n # and *.h) to filter out the source-files in the directories. If left \n # blank the following patterns are tested: \n-# *.c *.cc *.cxx *.cpp *.c++ *.java *.ii *.ixx *.ipp *.i++ *.inl *.h *.hh *.hxx *.hpp \n-# *.h++ *.idl *.odl *.cs *.php *.php3 *.inc\n+# *.c *.cc *.cxx *.cpp *.c++ *.java *.ii *.ixx *.ipp *.i++ *.inl *.h *.hh *.hxx \n+# *.hpp *.h++ *.idl *.odl *.cs *.php *.php3 *.inc *.m *.mm *.py\n \n-FILE_PATTERNS          = tree* \\\n-                         *mudflap* \\\n-                         c-simplify.c \\\n-                         gimpl* \\\n-                         domwalk*\n+FILE_PATTERNS          =\n \n # The RECURSIVE tag can be used to turn specify whether or not subdirectories \n # should be searched for input files as well. Possible values are YES and NO. \n@@ -419,16 +512,26 @@ RECURSIVE              = NO\n \n EXCLUDE                = \n \n-# The EXCLUDE_SYMLINKS tag can be used select whether or not files or directories \n-# that are symbolic links (a Unix filesystem feature) are excluded from the input.\n+# The EXCLUDE_SYMLINKS tag can be used select whether or not files or \n+# directories that are symbolic links (a Unix filesystem feature) are excluded \n+# from the input.\n \n EXCLUDE_SYMLINKS       = NO\n \n # If the value of the INPUT tag contains directories, you can use the \n # EXCLUDE_PATTERNS tag to specify one or more wildcard patterns to exclude \n-# certain files from those directories.\n+# certain files from those directories. Note that the wildcards are matched \n+# against the file with absolute path, so to exclude all test directories \n+# for example use the pattern */test/*\n \n-EXCLUDE_PATTERNS       = \n+EXCLUDE_PATTERNS       = c-* */testsuite/* */config/* */.svn/* */po/*\n+\n+# The EXCLUDE_SYMBOLS tag can be used to specify one or more symbol names \n+# (namespaces, classes, functions, etc.) that should be excluded from the output. \n+# The symbol name can be a fully qualified name, a word, or if the wildcard * is used, \n+# a substring. Examples: ANamespace, AClass, AClass::ANamespace, ANamespace::*Test\n+\n+EXCLUDE_SYMBOLS        = \n \n # The EXAMPLE_PATH tag can be used to specify one or more files or \n # directories that contain example code fragments that are included (see \n@@ -456,6 +559,15 @@ EXAMPLE_RECURSIVE      = NO\n \n IMAGE_PATH             = \n \n+# The FILTER_PATTERNS tag can be used to specify filters on a per file pattern \n+# basis.  Doxygen will compare the file name with each pattern and apply the \n+# filter if there is a match.  The filters are a list of the form: \n+# pattern=filter (like *.cpp=my_cpp_filter). See INPUT_FILTER for further \n+# info on how filters are used. If FILTER_PATTERNS is empty, INPUT_FILTER \n+# is applied to all files.\n+\n+FILTER_PATTERNS        = \n+\n # If the FILTER_SOURCE_FILES tag is set to YES, the input filter (if set using \n # INPUT_FILTER) will be used to filter the input files when producing source \n # files to browse (i.e. when SOURCE_BROWSER is set to YES).\n@@ -471,12 +583,12 @@ FILTER_SOURCE_FILES    = NO\n # Note: To get rid of all source code in the generated output, make sure also \n # VERBATIM_HEADERS is set to NO.\n \n-SOURCE_BROWSER         = YES\n+SOURCE_BROWSER         = NO\n \n # Setting the INLINE_SOURCES tag to YES will include the body \n # of functions and classes directly in the documentation.\n \n-INLINE_SOURCES         = YES\n+INLINE_SOURCES         = NO\n \n # Setting the STRIP_CODE_COMMENTS tag to YES (the default) will instruct \n # doxygen to hide any special comment blocks from generated source code \n@@ -496,6 +608,21 @@ REFERENCED_BY_RELATION = YES\n \n REFERENCES_RELATION    = YES\n \n+# If the REFERENCES_LINK_SOURCE tag is set to YES (the default)\n+# and SOURCE_BROWSER tag is set to YES, then the hyperlinks from\n+# functions in REFERENCES_RELATION and REFERENCED_BY_RELATION lists will\n+# link to the source code.  Otherwise they will link to the documentstion.\n+\n+REFERENCES_LINK_SOURCE = YES\n+\n+# If the USE_HTAGS tag is set to YES then the references to source code \n+# will point to the HTML generated by the htags(1) tool instead of doxygen \n+# built-in source browser. The htags tool is part of GNU's global source \n+# tagging system (see http://www.gnu.org/software/global/global.html). You \n+# will need version 4.8.6 or higher.\n+\n+USE_HTAGS              = NO\n+\n # If the VERBATIM_HEADERS tag is set to YES (the default) then Doxygen \n # will generate a verbatim copy of the header file for each class for \n # which an include is specified. Set to NO to disable this.\n@@ -629,7 +756,7 @@ ENUM_VALUES_PER_LINE   = 4\n # Netscape 6.0+, Internet explorer 5.0+, or Konqueror). Windows users are \n # probably better off using the HTML help feature.\n \n-GENERATE_TREEVIEW      = NO\n+GENERATE_TREEVIEW      = YES\n \n # If the treeview is enabled (see GENERATE_TREEVIEW) then this tag can be \n # used to set the initial width (in pixels) of the frame in which the tree \n@@ -882,7 +1009,7 @@ MACRO_EXPANSION        = NO\n \n # If the EXPAND_ONLY_PREDEF and MACRO_EXPANSION tags are both set to YES \n # then the macro expansion is limited to the macros specified with the \n-# PREDEFINED and EXPAND_AS_PREDEFINED tags.\n+# PREDEFINED and EXPAND_AS_DEFINED tags.\n \n EXPAND_ONLY_PREDEF     = NO\n \n@@ -908,7 +1035,9 @@ INCLUDE_FILE_PATTERNS  =\n # are defined before the preprocessor is started (similar to the -D option of \n # gcc). The argument of the tag is a list of macros of the form: name \n # or name=definition (no spaces). If the definition and the = are \n-# omitted =1 is assumed.\n+# omitted =1 is assumed. To prevent a macro definition from being \n+# undefined via #undef or recursively expanded use the := operator \n+# instead of the = operator.\n \n PREDEFINED             = \n \n@@ -922,13 +1051,13 @@ EXPAND_AS_DEFINED      =\n # If the SKIP_FUNCTION_MACROS tag is set to YES (the default) then \n # doxygen's preprocessor will remove all function-like macros that are alone \n # on a line, have an all uppercase name, and do not end with a semicolon. Such \n-# function macros are typically used for boiler-plate code, and will confuse the \n-# parser if not removed.\n+# function macros are typically used for boiler-plate code, and will confuse \n+# the parser if not removed.\n \n SKIP_FUNCTION_MACROS   = YES\n \n #---------------------------------------------------------------------------\n-# Configuration::addtions related to external references   \n+# Configuration::additions related to external references   \n #---------------------------------------------------------------------------\n \n # The TAGFILES option can be used to specify one or more tagfiles. \n@@ -975,13 +1104,22 @@ PERL_PATH              = /usr/bin/perl\n #---------------------------------------------------------------------------\n \n # If the CLASS_DIAGRAMS tag is set to YES (the default) Doxygen will \n-# generate a inheritance diagram (in HTML, RTF and LaTeX) for classes with base or \n-# super classes. Setting the tag to NO turns the diagrams off. Note that this \n-# option is superseded by the HAVE_DOT option below. This is only a fallback. It is \n-# recommended to install and use dot, since it yields more powerful graphs.\n+# generate a inheritance diagram (in HTML, RTF and LaTeX) for classes with base \n+# or super classes. Setting the tag to NO turns the diagrams off. Note that \n+# this option is superseded by the HAVE_DOT option below. This is only a \n+# fallback. It is recommended to install and use dot, since it yields more \n+# powerful graphs.\n \n CLASS_DIAGRAMS         = YES\n \n+# You can define message sequence charts within doxygen comments using the \\msc \n+# command. Doxygen will then run the mscgen tool (see http://www.mcternan.me.uk/mscgen/) to \n+# produce the chart and insert it in the documentation. The MSCGEN_PATH tag allows you to \n+# specify the directory where the mscgen tool resides. If left empty the tool is assumed to \n+# be found in the default search path.\n+\n+MSCGEN_PATH            = \n+\n # If set to YES, the inheritance and collaboration graphs will hide \n # inheritance and usage relations if the target is undocumented \n # or is not a class.\n@@ -1009,6 +1147,11 @@ CLASS_GRAPH            = YES\n \n COLLABORATION_GRAPH    = YES\n \n+# If the GROUP_GRAPHS and HAVE_DOT tags are set to YES then doxygen \n+# will generate a graph for groups, showing the direct groups dependencies\n+\n+GROUP_GRAPHS           = YES\n+\n # If the UML_LOOK tag is set to YES doxygen will generate inheritance and \n # collaboration diagrams in a style similar to the OMG's Unified Modeling \n # Language.\n@@ -1042,19 +1185,34 @@ INCLUDED_BY_GRAPH      = YES\n \n CALL_GRAPH             = NO\n \n+# If the CALLER_GRAPH and HAVE_DOT tags are set to YES then doxygen will \n+# generate a caller dependency graph for every global function or class method. \n+# Note that enabling this option will significantly increase the time of a run. \n+# So in most cases it will be better to enable caller graphs for selected \n+# functions only using the \\callergraph command.\n+\n+CALLER_GRAPH           = NO\n+\n # If the GRAPHICAL_HIERARCHY and HAVE_DOT tags are set to YES then doxygen \n # will graphical hierarchy of all classes instead of a textual one.\n \n GRAPHICAL_HIERARCHY    = YES\n \n+# If the DIRECTORY_GRAPH, SHOW_DIRECTORIES and HAVE_DOT tags are set to YES \n+# then doxygen will show the dependencies a directory has on other directories \n+# in a graphical way. The dependency relations are determined by the #include\n+# relations between the files in the directories.\n+\n+DIRECTORY_GRAPH        = YES\n+\n # The DOT_IMAGE_FORMAT tag can be used to set the image format of the images \n # generated by dot. Possible values are png, jpg, or gif\n # If left blank png will be used.\n \n DOT_IMAGE_FORMAT       = png\n \n # The tag DOT_PATH can be used to specify the path where the dot tool can be \n-# found. If left blank, it is assumed the dot tool can be found on the path.\n+# found. If left blank, it is assumed the dot tool can be found in the path.\n \n DOT_PATH               = \n \n@@ -1064,32 +1222,28 @@ DOT_PATH               =\n \n DOTFILE_DIRS           = \n \n-# The MAX_DOT_GRAPH_WIDTH tag can be used to set the maximum allowed width \n-# (in pixels) of the graphs generated by dot. If a graph becomes larger than \n-# this value, doxygen will try to truncate the graph, so that it fits within \n-# the specified constraint. Beware that most browsers cannot cope with very \n-# large images.\n+# The MAX_DOT_GRAPH_MAX_NODES tag can be used to set the maximum number of \n+# nodes that will be shown in the graph. If the number of nodes in a graph \n+# becomes larger than this value, doxygen will truncate the graph, which is \n+# visualized by representing a node as a red box. Note that doxygen will always \n+# show the root nodes and its direct children regardless of this setting.\n \n-MAX_DOT_GRAPH_WIDTH    = 1024\n+DOT_GRAPH_MAX_NODES    = 50\n \n-# The MAX_DOT_GRAPH_HEIGHT tag can be used to set the maximum allows height \n-# (in pixels) of the graphs generated by dot. If a graph becomes larger than \n-# this value, doxygen will try to truncate the graph, so that it fits within \n-# the specified constraint. Beware that most browsers cannot cope with very \n-# large images.\n+# Set the DOT_TRANSPARENT tag to YES to generate images with a transparent \n+# background. This is disabled by default, which results in a white background. \n+# Warning: Depending on the platform used, enabling this option may lead to \n+# badly anti-aliased labels on the edges of a graph (i.e. they become hard to \n+# read).\n \n-MAX_DOT_GRAPH_HEIGHT   = 1024\n+DOT_TRANSPARENT        = NO\n \n-# The MAX_DOT_GRAPH_DEPTH tag can be used to set the maximum depth of the \n-# graphs generated by dot. A depth value of 3 means that only nodes reachable \n-# from the root by following a path via at most 3 edges will be shown. Nodes that \n-# lay further from the root node will be omitted. Note that setting this option to \n-# 1 or 2 may greatly reduce the computation time needed for large code bases. Also \n-# note that a graph may be further truncated if the graph's image dimensions are \n-# not sufficient to fit the graph (see MAX_DOT_GRAPH_WIDTH and MAX_DOT_GRAPH_HEIGHT). \n-# If 0 is used for the depth value (the default), the graph is not depth-constrained.\n+# Set the DOT_MULTI_TARGETS tag to YES allow dot to generate multiple output \n+# files in one run (i.e. multiple -o and -T options on the command line). This \n+# makes dot run faster, but since only newer versions of dot (>1.8.10) \n+# support this, this feature is disabled by default.\n \n-MAX_DOT_GRAPH_DEPTH    = 0\n+DOT_MULTI_TARGETS      = NO\n \n # If the GENERATE_LEGEND tag is set to YES (the default) Doxygen will \n # generate a legend page explaining the meaning of the various boxes and \n@@ -1104,7 +1258,7 @@ GENERATE_LEGEND        = YES\n DOT_CLEANUP            = YES\n \n #---------------------------------------------------------------------------\n-# Configuration::addtions related to the search engine   \n+# Configuration::additions related to the search engine   \n #---------------------------------------------------------------------------\n \n # The SEARCHENGINE tag specifies whether or not a search engine should be "}]}