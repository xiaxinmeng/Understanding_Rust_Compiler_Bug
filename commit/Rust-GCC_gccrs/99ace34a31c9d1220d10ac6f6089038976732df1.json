{"sha": "99ace34a31c9d1220d10ac6f6089038976732df1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTlhY2UzNGEzMWM5ZDEyMjBkMTBhYzZmNjA4OTAzODk3NjczMmRmMQ==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely.gcc@gmail.com", "date": "2012-11-14T23:33:01Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2012-11-14T23:33:01Z"}, "message": "re PR libstdc++/55320 (Invalid delete with throwing copy-c'tor passed to std::function)\n\n\tPR libstdc++/55320\n\t* include/std/functional (function::function(F)): Set _M_manager after\n\toperations that could throw.\n\t(_Function_base::_Ref_manager::_M_init_functor): Use addressof.\n\t* include/tr1/functional\n\t(_Function_base::_Ref_manager::_M_init_functor): Use addressof.\n\t(_Function_base::_Base_manager::_M_get_pointer): Likewise.\n\t* testsuite/20_util/function/cons/55320.cc: New.\n\t* testsuite/20_util/function/cons/addressof.cc: New.\n\t* testsuite/20_util/function/cons/callable.cc: Remove header.\n\t* testsuite/20_util/bind/ref_neg.cc: Adjust dg-error line numbers.\n\t* testsuite/tr1/3_function_objects/function/10.cc: New.\n\nFrom-SVN: r193514", "tree": {"sha": "61c548f3b9eeb6c0a2b15a23e063290fb69cd049", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/61c548f3b9eeb6c0a2b15a23e063290fb69cd049"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/99ace34a31c9d1220d10ac6f6089038976732df1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/99ace34a31c9d1220d10ac6f6089038976732df1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/99ace34a31c9d1220d10ac6f6089038976732df1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/99ace34a31c9d1220d10ac6f6089038976732df1/comments", "author": null, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3aac5aad16e7e77dcd3885089c6b2566df29feb9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3aac5aad16e7e77dcd3885089c6b2566df29feb9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3aac5aad16e7e77dcd3885089c6b2566df29feb9"}], "stats": {"total": 169, "additions": 154, "deletions": 15}, "files": [{"sha": "c9c63174a5101c784d2b47512c522d09ffbc7e1f", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/99ace34a31c9d1220d10ac6f6089038976732df1/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/99ace34a31c9d1220d10ac6f6089038976732df1/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=99ace34a31c9d1220d10ac6f6089038976732df1", "patch": "@@ -1,3 +1,18 @@\n+2012-11-14  Jonathan Wakely  <jwakely.gcc@gmail.com>\n+\n+\tPR libstdc++/55320\n+\t* include/std/functional (function::function(F)): Set _M_manager after\n+\toperations that could throw.\n+\t(_Function_base::_Ref_manager::_M_init_functor): Use addressof.\n+\t* include/tr1/functional\n+\t(_Function_base::_Ref_manager::_M_init_functor): Use addressof.\n+\t(_Function_base::_Base_manager::_M_get_pointer): Likewise.\n+\t* testsuite/20_util/function/cons/55320.cc: New.\n+\t* testsuite/20_util/function/cons/addressof.cc: New.\n+\t* testsuite/20_util/function/cons/callable.cc: Remove header.\n+\t* testsuite/20_util/bind/ref_neg.cc: Adjust dg-error line numbers.\n+\t* testsuite/tr1/3_function_objects/function/10.cc: New.\n+\n 2012-11-14  Uros Bizjak  <ubizjak@gmail.com>\n \n \t* testsuite/26_numerics/complex/abi_tag.cc: Adjust expected"}, {"sha": "561359c47798a7a7e2cd617017121c5ededaf97a", "filename": "libstdc++-v3/include/std/functional", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/99ace34a31c9d1220d10ac6f6089038976732df1/libstdc%2B%2B-v3%2Finclude%2Fstd%2Ffunctional", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/99ace34a31c9d1220d10ac6f6089038976732df1/libstdc%2B%2B-v3%2Finclude%2Fstd%2Ffunctional", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Ffunctional?ref=99ace34a31c9d1220d10ac6f6089038976732df1", "patch": "@@ -1,7 +1,6 @@\n // <functional> -*- C++ -*-\n \n-// Copyright (C) 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010,\n-// 2011, 2012 Free Software Foundation, Inc.\n+// Copyright (C) 2001-2012 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -1882,8 +1881,7 @@ _GLIBCXX_HAS_NESTED_TYPE(result_type)\n \tstatic void\n \t_M_init_functor(_Any_data& __functor, reference_wrapper<_Functor> __f)\n \t{\n-\t  // TBD: Use address_of function instead.\n-\t  _Base::_M_init_functor(__functor, &__f.get());\n+\t  _Base::_M_init_functor(__functor, std::__addressof(__f.get()));\n \t}\n       };\n \n@@ -2317,9 +2315,9 @@ _GLIBCXX_HAS_NESTED_TYPE(result_type)\n \n \tif (_My_handler::_M_not_empty_function(__f))\n \t  {\n+\t    _My_handler::_M_init_functor(_M_functor, std::move(__f));\n \t    _M_invoker = &_My_handler::_M_invoke;\n \t    _M_manager = &_My_handler::_M_manager;\n-\t    _My_handler::_M_init_functor(_M_functor, std::move(__f));\n \t  }\n       }\n "}, {"sha": "61d6455bc1d271a00627eae1d81c32c5506eb803", "filename": "libstdc++-v3/include/tr1/functional", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/99ace34a31c9d1220d10ac6f6089038976732df1/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Ffunctional", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/99ace34a31c9d1220d10ac6f6089038976732df1/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Ffunctional", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Ffunctional?ref=99ace34a31c9d1220d10ac6f6089038976732df1", "patch": "@@ -1615,7 +1615,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \t_M_get_pointer(const _Any_data& __source)\n \t{\n \t  const _Functor* __ptr =\n-\t    __stored_locally? &__source._M_access<_Functor>()\n+\t    __stored_locally? std::__addressof(__source._M_access<_Functor>())\n \t    /* have stored a pointer */ : __source._M_access<_Functor*>();\n \t  return const_cast<_Functor*>(__ptr);\n \t}\n@@ -1744,8 +1744,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \tstatic void\n \t_M_init_functor(_Any_data& __functor, reference_wrapper<_Functor> __f)\n \t{\n-\t  // TBD: Use address_of function instead.\n-\t  _Base::_M_init_functor(__functor, &__f.get());\n+\t  _Base::_M_init_functor(__functor, std::__addressof(__f.get()));\n \t}\n       };\n "}, {"sha": "f5b5a01933097df983339f2c74a88532cfcb772c", "filename": "libstdc++-v3/testsuite/20_util/bind/ref_neg.cc", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/99ace34a31c9d1220d10ac6f6089038976732df1/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fbind%2Fref_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/99ace34a31c9d1220d10ac6f6089038976732df1/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fbind%2Fref_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fbind%2Fref_neg.cc?ref=99ace34a31c9d1220d10ac6f6089038976732df1", "patch": "@@ -1,4 +1,4 @@\n-// Copyright (C) 2010, 2011 Free Software Foundation, Inc.\n+// Copyright (C) 2010-2012 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -15,7 +15,7 @@\n // with this library; see the file COPYING3.  If not see\n // <http://www.gnu.org/licenses/>.\n \n-// 20.7.11 Function template bind\n+// 20.8.9 Function template bind\n \n // { dg-do compile }\n // { dg-options \"-std=gnu++0x\" }\n@@ -30,10 +30,10 @@ void test01()\n {\n   const int dummy = 0;\n   std::bind(&inc, _1)(0);               // { dg-error  \"no match\" }\n-  // { dg-error \"rvalue|const\" \"\" { target *-*-* } 1207 }\n-  // { dg-error \"rvalue|const\" \"\" { target *-*-* } 1221 }\n-  // { dg-error \"rvalue|const\" \"\" { target *-*-* } 1235 }\n-  // { dg-error \"rvalue|const\" \"\" { target *-*-* } 1249 }\n+  // { dg-error \"rvalue|const\" \"\" { target *-*-* } 1206 }\n+  // { dg-error \"rvalue|const\" \"\" { target *-*-* } 1220 }\n+  // { dg-error \"rvalue|const\" \"\" { target *-*-* } 1234 }\n+  // { dg-error \"rvalue|const\" \"\" { target *-*-* } 1248 }\n   std::bind(&inc, std::ref(dummy))();\t// { dg-error  \"no match\" }\n }\n "}, {"sha": "611e8acbbf40415d63ce659615d51229ee5f1739", "filename": "libstdc++-v3/testsuite/20_util/function/cons/55320.cc", "status": "added", "additions": 46, "deletions": 0, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/99ace34a31c9d1220d10ac6f6089038976732df1/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ffunction%2Fcons%2F55320.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/99ace34a31c9d1220d10ac6f6089038976732df1/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ffunction%2Fcons%2F55320.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ffunction%2Fcons%2F55320.cc?ref=99ace34a31c9d1220d10ac6f6089038976732df1", "patch": "@@ -0,0 +1,46 @@\n+// Copyright (C) 2012 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+//\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+//\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// libstdc++/55320\n+\n+// { dg-options \"-std=gnu++0x\" }\n+\n+#include <functional>\n+#include <testsuite_hooks.h>\n+\n+struct X\n+{\n+  X() { ++count; }\n+  X(const X&) { throw 1; }\n+  ~X() { --count; }\n+  void operator()() { }\n+  static int count;\n+};\n+\n+int X::count = 0;\n+\n+int main()\n+{\n+  try\n+  {\n+    std::function<void()> f = X();\n+  }\n+  catch (int)\n+  {\n+    VERIFY( X::count == 0 );\n+  }\n+}"}, {"sha": "25b6fb84becee550c06999ef852f7651795ef352", "filename": "libstdc++-v3/testsuite/20_util/function/cons/addressof.cc", "status": "added", "additions": 41, "deletions": 0, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/99ace34a31c9d1220d10ac6f6089038976732df1/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ffunction%2Fcons%2Faddressof.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/99ace34a31c9d1220d10ac6f6089038976732df1/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ffunction%2Fcons%2Faddressof.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ffunction%2Fcons%2Faddressof.cc?ref=99ace34a31c9d1220d10ac6f6089038976732df1", "patch": "@@ -0,0 +1,41 @@\n+// Copyright (C) 2012 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// { dg-options \"-std=gnu++0x\" }\n+// { dg-do compile }\n+\n+#include <functional>\n+\n+struct F\n+{\n+  void operator()() { }\n+  void operator&() const { }\n+};\n+\n+void test01()\n+{\n+  F f;\n+  std::function<void()> f1 = f;\n+  std::function<void()> f2 = std::ref(f);\n+}\n+\n+int main()\n+{\n+  test01();\n+\n+  return 0;\n+}"}, {"sha": "9f16125402c8f0e2660245e94f0e220a54060865", "filename": "libstdc++-v3/testsuite/20_util/function/cons/callable.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/99ace34a31c9d1220d10ac6f6089038976732df1/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ffunction%2Fcons%2Fcallable.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/99ace34a31c9d1220d10ac6f6089038976732df1/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ffunction%2Fcons%2Fcallable.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ffunction%2Fcons%2Fcallable.cc?ref=99ace34a31c9d1220d10ac6f6089038976732df1", "patch": "@@ -19,7 +19,6 @@\n // <http://www.gnu.org/licenses/>.\n \n #include <functional>\n-#include <testsuite_hooks.h>\n \n void* f(std::function<void()>) { return nullptr; }\n int f(std::function<void(int)>) { return 1; }"}, {"sha": "ca29e3cc3fbe9841e8023cf958154b8b6ce47b4c", "filename": "libstdc++-v3/testsuite/tr1/3_function_objects/function/10.cc", "status": "added", "additions": 41, "deletions": 0, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/99ace34a31c9d1220d10ac6f6089038976732df1/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F3_function_objects%2Ffunction%2F10.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/99ace34a31c9d1220d10ac6f6089038976732df1/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F3_function_objects%2Ffunction%2F10.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F3_function_objects%2Ffunction%2F10.cc?ref=99ace34a31c9d1220d10ac6f6089038976732df1", "patch": "@@ -0,0 +1,41 @@\n+// Copyright (C) 2012 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// { dg-options \"-std=gnu++0x\" }\n+// { dg-do compile }\n+\n+#include <tr1/functional>\n+\n+struct F\n+{\n+  void operator()() { }\n+  void operator&() const { }\n+};\n+\n+void test01()\n+{\n+  F f;\n+  std::tr1::function<void()> f1 = f;\n+  std::tr1::function<void()> f2 = std::tr1::ref(f);\n+}\n+\n+int main()\n+{\n+  test01();\n+\n+  return 0;\n+}"}]}