{"sha": "f99098233b944542b3f78de9da395f220fe9d0cf", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Zjk5MDk4MjMzYjk0NDU0MmIzZjc4ZGU5ZGEzOTVmMjIwZmU5ZDBjZg==", "commit": {"author": {"name": "Janus Weil", "email": "janus@gcc.gnu.org", "date": "2009-06-18T08:09:40Z"}, "committer": {"name": "Janus Weil", "email": "janus@gcc.gnu.org", "date": "2009-06-18T08:09:40Z"}, "message": "re PR fortran/40451 ([F03] procedure pointer assignment rejected)\n\n2009-06-18  Janus Weil  <janus@gcc.gnu.org>\n\n\tPR fortran/40451\n\t* resolve.c (resolve_contained_fntype): Prevent implicit typing for\n\tprocedures with explicit interface.\n\t* symbol.c (gfc_check_function_type): Ditto.\n\n2009-06-18  Janus Weil  <janus@gcc.gnu.org>\n\n\tPR fortran/40451\n\t* gfortran.dg/proc_ptr_result_4.f90: New.\n\nFrom-SVN: r148652", "tree": {"sha": "c719ee3a6c2eda57fcc2fbb5cacd5dd18d96529b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c719ee3a6c2eda57fcc2fbb5cacd5dd18d96529b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f99098233b944542b3f78de9da395f220fe9d0cf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f99098233b944542b3f78de9da395f220fe9d0cf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f99098233b944542b3f78de9da395f220fe9d0cf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f99098233b944542b3f78de9da395f220fe9d0cf/comments", "author": {"login": "janusw", "id": 484108, "node_id": "MDQ6VXNlcjQ4NDEwOA==", "avatar_url": "https://avatars.githubusercontent.com/u/484108?v=4", "gravatar_id": "", "url": "https://api.github.com/users/janusw", "html_url": "https://github.com/janusw", "followers_url": "https://api.github.com/users/janusw/followers", "following_url": "https://api.github.com/users/janusw/following{/other_user}", "gists_url": "https://api.github.com/users/janusw/gists{/gist_id}", "starred_url": "https://api.github.com/users/janusw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/janusw/subscriptions", "organizations_url": "https://api.github.com/users/janusw/orgs", "repos_url": "https://api.github.com/users/janusw/repos", "events_url": "https://api.github.com/users/janusw/events{/privacy}", "received_events_url": "https://api.github.com/users/janusw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "janusw", "id": 484108, "node_id": "MDQ6VXNlcjQ4NDEwOA==", "avatar_url": "https://avatars.githubusercontent.com/u/484108?v=4", "gravatar_id": "", "url": "https://api.github.com/users/janusw", "html_url": "https://github.com/janusw", "followers_url": "https://api.github.com/users/janusw/followers", "following_url": "https://api.github.com/users/janusw/following{/other_user}", "gists_url": "https://api.github.com/users/janusw/gists{/gist_id}", "starred_url": "https://api.github.com/users/janusw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/janusw/subscriptions", "organizations_url": "https://api.github.com/users/janusw/orgs", "repos_url": "https://api.github.com/users/janusw/repos", "events_url": "https://api.github.com/users/janusw/events{/privacy}", "received_events_url": "https://api.github.com/users/janusw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c637b0fa0df8a3e7b03ccf7da8a6ad249b232d59", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c637b0fa0df8a3e7b03ccf7da8a6ad249b232d59", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c637b0fa0df8a3e7b03ccf7da8a6ad249b232d59"}], "stats": {"total": 32, "additions": 30, "deletions": 2}, "files": [{"sha": "d6a608285b92cff49a5c910e086896dbf2058aa6", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f99098233b944542b3f78de9da395f220fe9d0cf/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f99098233b944542b3f78de9da395f220fe9d0cf/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=f99098233b944542b3f78de9da395f220fe9d0cf", "patch": "@@ -1,3 +1,10 @@\n+2009-06-18  Janus Weil  <janus@gcc.gnu.org>\n+\n+\tPR fortran/40451\n+\t* resolve.c (resolve_contained_fntype): Prevent implicit typing for\n+\tprocedures with explicit interface.\n+\t* symbol.c (gfc_check_function_type): Ditto.\n+\n 2009-06-16  Ian Lance Taylor  <iant@google.com>\n \n \t* decl.c (build_struct): Rewrite loop over constructor elements."}, {"sha": "4117d80f994acdefa41320b56cbdcd997ed7526f", "filename": "gcc/fortran/resolve.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f99098233b944542b3f78de9da395f220fe9d0cf/gcc%2Ffortran%2Fresolve.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f99098233b944542b3f78de9da395f220fe9d0cf/gcc%2Ffortran%2Fresolve.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fresolve.c?ref=f99098233b944542b3f78de9da395f220fe9d0cf", "patch": "@@ -347,7 +347,7 @@ resolve_contained_fntype (gfc_symbol *sym, gfc_namespace *ns)\n     return;\n \n   /* Try to find out of what the return type is.  */\n-  if (sym->result->ts.type == BT_UNKNOWN)\n+  if (sym->result->ts.type == BT_UNKNOWN && sym->result->ts.interface == NULL)\n     {\n       t = gfc_set_default_type (sym->result, 0, ns);\n "}, {"sha": "71062fb08ca3d9afb29a6b4273c9054b998e69a7", "filename": "gcc/fortran/symbol.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f99098233b944542b3f78de9da395f220fe9d0cf/gcc%2Ffortran%2Fsymbol.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f99098233b944542b3f78de9da395f220fe9d0cf/gcc%2Ffortran%2Fsymbol.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fsymbol.c?ref=f99098233b944542b3f78de9da395f220fe9d0cf", "patch": "@@ -317,7 +317,7 @@ gfc_check_function_type (gfc_namespace *ns)\n   if (!proc->attr.contained || proc->result->attr.implicit_type)\n     return;\n \n-  if (proc->result->ts.type == BT_UNKNOWN)\n+  if (proc->result->ts.type == BT_UNKNOWN && proc->result->ts.interface == NULL)\n     {\n       if (gfc_set_default_type (proc->result, 0, gfc_current_ns)\n \t\t== SUCCESS)"}, {"sha": "c16ecd047955200aef5e094c291a2c44659993dc", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f99098233b944542b3f78de9da395f220fe9d0cf/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f99098233b944542b3f78de9da395f220fe9d0cf/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=f99098233b944542b3f78de9da395f220fe9d0cf", "patch": "@@ -1,3 +1,8 @@\n+2009-06-18  Janus Weil  <janus@gcc.gnu.org>\n+\n+\tPR fortran/40451\n+\t* gfortran.dg/proc_ptr_result_4.f90: New.\n+\n 2009-06-17  Adam Nemet  <anemet@caviumnetworks.com>\n \n \t* gcc.c-torture/execute/bitfld-5.c: New test."}, {"sha": "97e67e558efc8f756ccebe3557622e85fc21a08a", "filename": "gcc/testsuite/gfortran.dg/proc_ptr_result_4.f90", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f99098233b944542b3f78de9da395f220fe9d0cf/gcc%2Ftestsuite%2Fgfortran.dg%2Fproc_ptr_result_4.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f99098233b944542b3f78de9da395f220fe9d0cf/gcc%2Ftestsuite%2Fgfortran.dg%2Fproc_ptr_result_4.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fproc_ptr_result_4.f90?ref=f99098233b944542b3f78de9da395f220fe9d0cf", "patch": "@@ -0,0 +1,16 @@\n+! { dg-do compile }\n+!\n+! PR 40451: [F03] procedure pointer assignment rejected \n+!\n+! Contributed by Tobias Burnus <burnus@gcc.gnu.org>\n+\n+contains\n+\n+  function f()\n+    intrinsic :: sin\n+    procedure(sin), pointer :: f\n+    f => sin\n+  end function f\n+\n+end\n+"}]}