{"sha": "242c13b000c85528a7bc8db97ad9a1bc325ce022", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjQyYzEzYjAwMGM4NTUyOGE3YmM4ZGI5N2FkOWExYmMzMjVjZTAyMg==", "commit": {"author": {"name": "Jeffrey A Law", "email": "law@cygnus.com", "date": "1998-04-16T22:57:50Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1998-04-16T22:57:50Z"}, "message": "except.c (push_eh_entry): Add prototype.\n\n        * except.c (push_eh_entry): Add prototype.\n        (pop_eh_entry, enqueue_eh_entry, dequeu_eh_entry): Likewise.\n        (call_get_eh_context, start_dynamic_cleanup): Likewise.\n        (start_dynamic_handler, can_throw): Likewise.\n        (output_exception_table_entry, scan_region): Likewise.\n        (eh_regs, set_insn_eh_region): Likewise.\nAlso fix typo in previous dwarfout change.\n\nFrom-SVN: r19249", "tree": {"sha": "39818443f85a5e9bf37760f29433bdab6032e0e6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/39818443f85a5e9bf37760f29433bdab6032e0e6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/242c13b000c85528a7bc8db97ad9a1bc325ce022", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/242c13b000c85528a7bc8db97ad9a1bc325ce022", "html_url": "https://github.com/Rust-GCC/gccrs/commit/242c13b000c85528a7bc8db97ad9a1bc325ce022", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/242c13b000c85528a7bc8db97ad9a1bc325ce022/comments", "author": null, "committer": null, "parents": [{"sha": "1ad4f46be6e110470125bb53ad87661afe776fbe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1ad4f46be6e110470125bb53ad87661afe776fbe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1ad4f46be6e110470125bb53ad87661afe776fbe"}], "stats": {"total": 27, "additions": 25, "deletions": 2}, "files": [{"sha": "3bf2f87d353760813884e65751cea48d32d2edbf", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/242c13b000c85528a7bc8db97ad9a1bc325ce022/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/242c13b000c85528a7bc8db97ad9a1bc325ce022/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=242c13b000c85528a7bc8db97ad9a1bc325ce022", "patch": "@@ -1,5 +1,12 @@\n Thu Apr 16 22:41:02 1998  Jeffrey A Law  (law@cygnus.com)\n \n+\t* except.c (push_eh_entry): Add prototype.\n+\t(pop_eh_entry, enqueue_eh_entry, dequeu_eh_entry): Likewise.\n+\t(call_get_eh_context, start_dynamic_cleanup): Likewise.\n+\t(start_dynamic_handler, can_throw): Likewise.\n+\t(output_exception_table_entry, scan_region): Likewise.\n+\t(eh_regs, set_insn_eh_region): Likewise.\n+\n \t* dwarfout.c (decl_class_context): Add prototype.\n \t(output_inheritance_die, type_ok_for_scope): Likewise.\n "}, {"sha": "8e1f2067f523ce6bb8559d2492d1e6ab69f92e2e", "filename": "gcc/dwarfout.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/242c13b000c85528a7bc8db97ad9a1bc325ce022/gcc%2Fdwarfout.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/242c13b000c85528a7bc8db97ad9a1bc325ce022/gcc%2Fdwarfout.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarfout.c?ref=242c13b000c85528a7bc8db97ad9a1bc325ce022", "patch": "@@ -311,6 +311,7 @@ static char *dwarf_fmt_byte_name\tPROTO((unsigned));\n static char *dwarf_fund_type_name\tPROTO((unsigned));\n static tree decl_ultimate_origin\tPROTO((tree));\n static tree block_ultimate_origin\tPROTO((tree));\n+static tree decl_class_context \t\tPROTO((tree));\n static void output_unsigned_leb128\tPROTO((unsigned long));\n static void output_signed_leb128\tPROTO((long));\n static inline int is_body_block\t\tPROTO((tree));\n@@ -402,6 +403,7 @@ static void output_reference_type_die\tPROTO((void *));\n static void output_ptr_to_mbr_type_die\tPROTO((void *));\n static void output_compile_unit_die\tPROTO((void *));\n static void output_string_type_die\tPROTO((void *));\n+static void output_inheritance_die\tPROTO((void *));\n static void output_structure_type_die\tPROTO((void *));\n static void output_local_subroutine_die PROTO((void *));\n static void output_subroutine_type_die\tPROTO((void *));\n@@ -413,6 +415,7 @@ static void output_die\t\t\tPROTO((void (*) (), void *));\n static void end_sibling_chain\t\tPROTO((void));\n static void output_formal_types\t\tPROTO((tree));\n static void pend_type\t\t\tPROTO((tree));\n+static int type_ok_for_scope\t\tPROTO((tree, tree));\n static void output_pending_types_for_scope PROTO((tree));\n static void output_type\t\t\tPROTO((tree, tree));\n static void output_tagged_type_instantiation PROTO((tree));"}, {"sha": "a434b2786422373828d9171f621975de3bf0e774", "filename": "gcc/except.c", "status": "modified", "additions": 15, "deletions": 2, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/242c13b000c85528a7bc8db97ad9a1bc325ce022/gcc%2Fexcept.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/242c13b000c85528a7bc8db97ad9a1bc325ce022/gcc%2Fexcept.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexcept.c?ref=242c13b000c85528a7bc8db97ad9a1bc325ce022", "patch": "@@ -482,9 +482,21 @@ struct label_node *outer_context_label_stack = NULL;\n \n struct label_node *false_label_stack = NULL;\n \n-rtx expand_builtin_return_addr\tPROTO((enum built_in_function, int, rtx));\n+static void push_eh_entry\tPROTO((struct eh_stack *));\n+static struct eh_entry * pop_eh_entry\t\tPROTO((struct eh_stack *));\n+static void enqueue_eh_entry\tPROTO((struct eh_queue *, struct eh_entry *));\n+static struct eh_entry * dequeue_eh_entry\tPROTO((struct eh_queue *));\n+static rtx call_get_eh_context\tPROTO((void));\n+static void start_dynamic_cleanup\t\tPROTO((tree, tree));\n+static void start_dynamic_handler\t\tPROTO((void));\n static void expand_rethrow\tPROTO((rtx));\n+static void output_exception_table_entry\tPROTO((FILE *, int));\n+static int can_throw\t\tPROTO((rtx));\n+static rtx scan_region\t\tPROTO((rtx, int, int *));\n+static void eh_regs\t\tPROTO((rtx *, rtx *, int));\n+static void set_insn_eh_region\tPROTO((rtx *, int));\n \n+rtx expand_builtin_return_addr\tPROTO((enum built_in_function, int, rtx));\n \f\n /* Various support routines to manipulate the various data structures\n    used by the exception handling code.  */\n@@ -2170,7 +2182,8 @@ expand_builtin_set_eh_regs (handler, offset)\n static int *insn_eh_region = (int *)0;\n static int maximum_uid;\n \n-static void set_insn_eh_region (first, region_num)\n+static void\n+set_insn_eh_region (first, region_num)\n      rtx *first;\n      int region_num;\n {"}]}