{"sha": "5efa4d68915c637598065a54e8721bfdbad47d17", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWVmYTRkNjg5MTVjNjM3NTk4MDY1YTU0ZTg3MjFiZmRiYWQ0N2QxNw==", "commit": {"author": {"name": "Pascal Obry", "email": "obry@adacore.com", "date": "2008-08-05T13:23:44Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2008-08-05T13:23:44Z"}, "message": "a-coinve.adb: Reorder the code to avoid uninitialized warning.\n\n2008-08-05  Pascal Obry  <obry@adacore.com>\n\n\t* a-coinve.adb: Reorder the code to avoid uninitialized warning.\n\nFrom-SVN: r138701", "tree": {"sha": "aad647caea33529ca623460990d215b590f5908e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/aad647caea33529ca623460990d215b590f5908e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5efa4d68915c637598065a54e8721bfdbad47d17", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5efa4d68915c637598065a54e8721bfdbad47d17", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5efa4d68915c637598065a54e8721bfdbad47d17", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5efa4d68915c637598065a54e8721bfdbad47d17/comments", "author": {"login": "TurboGit", "id": 467069, "node_id": "MDQ6VXNlcjQ2NzA2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/467069?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TurboGit", "html_url": "https://github.com/TurboGit", "followers_url": "https://api.github.com/users/TurboGit/followers", "following_url": "https://api.github.com/users/TurboGit/following{/other_user}", "gists_url": "https://api.github.com/users/TurboGit/gists{/gist_id}", "starred_url": "https://api.github.com/users/TurboGit/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TurboGit/subscriptions", "organizations_url": "https://api.github.com/users/TurboGit/orgs", "repos_url": "https://api.github.com/users/TurboGit/repos", "events_url": "https://api.github.com/users/TurboGit/events{/privacy}", "received_events_url": "https://api.github.com/users/TurboGit/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "78d0a2ec2b661800059f30dfdf72ce64e846dfaf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/78d0a2ec2b661800059f30dfdf72ce64e846dfaf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/78d0a2ec2b661800059f30dfdf72ce64e846dfaf"}], "stats": {"total": 5, "additions": 2, "deletions": 3}, "files": [{"sha": "0f107be4356a511cf3e6befe3767c8fe77f3cd2d", "filename": "gcc/ada/a-coinve.adb", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5efa4d68915c637598065a54e8721bfdbad47d17/gcc%2Fada%2Fa-coinve.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5efa4d68915c637598065a54e8721bfdbad47d17/gcc%2Fada%2Fa-coinve.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-coinve.adb?ref=5efa4d68915c637598065a54e8721bfdbad47d17", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2004-2007, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2004-2008, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -1124,13 +1124,12 @@ package body Ada.Containers.Indefinite_Vectors is\n \n                   Index : constant Index_Type := Index_Type (Index_As_Int);\n \n-                  J : Index_Type'Base;\n+                  J : Index_Type'Base := Before;\n \n                begin\n                   E (Index .. New_Last) := E (Before .. Container.Last);\n                   Container.Last := New_Last;\n \n-                  J := Before;\n                   while J < Index loop\n                      E (J) := new Element_Type'(New_Item);\n                      J := J + 1;"}]}