{"sha": "5478d8a7aefbec4d93d32237fb29b9fdb8347b6b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTQ3OGQ4YTdhZWZiZWM0ZDkzZDMyMjM3ZmIyOWI5ZmRiODM0N2I2Yg==", "commit": {"author": {"name": "Steve Baird", "email": "baird@adacore.com", "date": "2021-05-24T21:38:07Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2021-07-08T13:34:18Z"}, "message": "[Ada] Unsynchronized concurrent access to a Boolean variable\n\ngcc/ada/\n\n\t* rtsfind.ads, rtsfind.adb: Add support for finding the packages\n\tSystem.Atomic_Operations and\n\tSystem.Atomic_Operations.Test_And_Set and the declarations\n\twithin that latter package of the type Test_And_Set_Flag and the\n\tfunction Atomic_Test_And_Set.\n\t* exp_ch11.adb (Expand_N_Exception_Declaration): If an exception\n\tis declared other than at library level, then we need to call\n\tRegister_Exception the first time (and only the first time) the\n\tdeclaration is elaborated.  In order to decide whether to\n\tperform this call for a given elaboration of the declaration, we\n\tused to unconditionally use a (library-level) Boolean variable.\n\tNow we instead use a variable of type\n\tSystem.Atomic_Operations.Test_And_Set.Test_And_Set_Flag unless\n\teither that type is unavailable or a No_Tasking restriction is\n\tin effect (in which case we use a Boolean variable as before).", "tree": {"sha": "bcb2b5e4c70a293b89ab1518d970c3c9f4fd3e01", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bcb2b5e4c70a293b89ab1518d970c3c9f4fd3e01"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5478d8a7aefbec4d93d32237fb29b9fdb8347b6b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5478d8a7aefbec4d93d32237fb29b9fdb8347b6b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5478d8a7aefbec4d93d32237fb29b9fdb8347b6b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5478d8a7aefbec4d93d32237fb29b9fdb8347b6b/comments", "author": {"login": "swbaird", "id": 50751052, "node_id": "MDQ6VXNlcjUwNzUxMDUy", "avatar_url": "https://avatars.githubusercontent.com/u/50751052?v=4", "gravatar_id": "", "url": "https://api.github.com/users/swbaird", "html_url": "https://github.com/swbaird", "followers_url": "https://api.github.com/users/swbaird/followers", "following_url": "https://api.github.com/users/swbaird/following{/other_user}", "gists_url": "https://api.github.com/users/swbaird/gists{/gist_id}", "starred_url": "https://api.github.com/users/swbaird/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/swbaird/subscriptions", "organizations_url": "https://api.github.com/users/swbaird/orgs", "repos_url": "https://api.github.com/users/swbaird/repos", "events_url": "https://api.github.com/users/swbaird/events{/privacy}", "received_events_url": "https://api.github.com/users/swbaird/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "076c1a91574d5abcd32898ec1a1a5975254c32a3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/076c1a91574d5abcd32898ec1a1a5975254c32a3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/076c1a91574d5abcd32898ec1a1a5975254c32a3"}], "stats": {"total": 102, "additions": 81, "deletions": 21}, "files": [{"sha": "40288e47c966cacf965fa3e083f5d5e22efd30b2", "filename": "gcc/ada/exp_ch11.adb", "status": "modified", "additions": 62, "deletions": 21, "changes": 83, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5478d8a7aefbec4d93d32237fb29b9fdb8347b6b/gcc%2Fada%2Fexp_ch11.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5478d8a7aefbec4d93d32237fb29b9fdb8347b6b/gcc%2Fada%2Fexp_ch11.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch11.adb?ref=5478d8a7aefbec4d93d32237fb29b9fdb8347b6b", "patch": "@@ -1088,10 +1088,19 @@ package body Exp_Ch11 is\n \n    --  (protecting test only needed if not at library level)\n \n-   --     exceptF : Boolean := True --  static data\n+   --     exceptF : aliased System.Atomic_Operations.Test_And_Set.\n+   --                         .Test_And_Set_Flag := 0; --  static data\n+   --     if not Atomic_Test_And_Set (exceptF) then\n+   --        Register_Exception (except'Unrestricted_Access);\n+   --     end if;\n+\n+   --  If a No_Tasking restriction is in effect, or if Test_And_Set_Flag\n+   --  is unavailable, then use Boolean instead. In that case, we generate:\n+   --\n+   --     exceptF : Boolean := True; --  static data\n    --     if exceptF then\n-   --        exceptF := False;\n-   --        Register_Exception (except'Unchecked_Access);\n+   --        ExceptF := False;\n+   --        Register_Exception (except'Unrestricted_Access);\n    --     end if;\n \n    procedure Expand_N_Exception_Declaration (N : Node_Id) is\n@@ -1275,7 +1284,7 @@ package body Exp_Ch11 is\n \n       Force_Static_Allocation_Of_Referenced_Objects (Expression (N));\n \n-      --  Register_Exception (except'Unchecked_Access);\n+      --  Register_Exception (except'Unrestricted_Access);\n \n       if not No_Exception_Handlers_Set\n         and then not Restriction_Active (No_Exception_Registration)\n@@ -1296,27 +1305,59 @@ package body Exp_Ch11 is\n             Flag_Id :=\n               Make_Defining_Identifier (Loc,\n                 Chars => New_External_Name (Chars (Id), 'F'));\n-\n-            Insert_Action (N,\n-              Make_Object_Declaration (Loc,\n-                Defining_Identifier => Flag_Id,\n-                Object_Definition   =>\n-                  New_Occurrence_Of (Standard_Boolean, Loc),\n-                Expression          =>\n-                  New_Occurrence_Of (Standard_True, Loc)));\n-\n             Set_Is_Statically_Allocated (Flag_Id);\n \n-            Append_To (L,\n-              Make_Assignment_Statement (Loc,\n-                Name       => New_Occurrence_Of (Flag_Id, Loc),\n-                Expression => New_Occurrence_Of (Standard_False, Loc)));\n+            declare\n+               Use_Test_And_Set_Flag : constant Boolean :=\n+                 (not Global_No_Tasking)\n+                 and then RTE_Available (RE_Test_And_Set_Flag);\n+\n+               Flag_Decl : Node_Id;\n+               Condition : Node_Id;\n+            begin\n+               if Use_Test_And_Set_Flag then\n+                  Flag_Decl :=\n+                    Make_Object_Declaration (Loc,\n+                      Defining_Identifier => Flag_Id,\n+                      Aliased_Present     => True,\n+                      Object_Definition   =>\n+                        New_Occurrence_Of (RTE (RE_Test_And_Set_Flag), Loc),\n+                      Expression          =>\n+                        Make_Integer_Literal (Loc, 0));\n+               else\n+                  Flag_Decl :=\n+                    Make_Object_Declaration (Loc,\n+                      Defining_Identifier => Flag_Id,\n+                      Object_Definition   =>\n+                        New_Occurrence_Of (Standard_Boolean, Loc),\n+                      Expression          =>\n+                        New_Occurrence_Of (Standard_True, Loc));\n+               end if;\n \n-            Insert_After_And_Analyze (N,\n-              Make_Implicit_If_Statement (N,\n-                Condition       => New_Occurrence_Of (Flag_Id, Loc),\n-                Then_Statements => L));\n+               Insert_Action (N, Flag_Decl);\n+\n+               if Use_Test_And_Set_Flag then\n+                  Condition :=\n+                    Make_Op_Not (Loc,\n+                      Make_Function_Call (Loc,\n+                        Name => New_Occurrence_Of\n+                                  (RTE (RE_Atomic_Test_And_Set), Loc),\n+                        Parameter_Associations =>\n+                          New_List (New_Occurrence_Of (Flag_Id, Loc))));\n+               else\n+                  Condition := New_Occurrence_Of (Flag_Id, Loc);\n+\n+                  Append_To (L,\n+                    Make_Assignment_Statement (Loc,\n+                    Name       => New_Occurrence_Of (Flag_Id, Loc),\n+                    Expression => New_Occurrence_Of (Standard_False, Loc)));\n+               end if;\n \n+               Insert_After_And_Analyze (N,\n+                 Make_Implicit_If_Statement (N,\n+                   Condition       => Condition,\n+                   Then_Statements => L));\n+            end;\n          else\n             Insert_List_After_And_Analyze (N, L);\n          end if;"}, {"sha": "5a89076dfb1626f155d32c4139b6d5fd462d8262", "filename": "gcc/ada/rtsfind.adb", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5478d8a7aefbec4d93d32237fb29b9fdb8347b6b/gcc%2Fada%2Frtsfind.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5478d8a7aefbec4d93d32237fb29b9fdb8347b6b/gcc%2Fada%2Frtsfind.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Frtsfind.adb?ref=5478d8a7aefbec4d93d32237fb29b9fdb8347b6b", "patch": "@@ -602,6 +602,10 @@ package body Rtsfind is\n    subtype System_Descendant is RTU_Id\n      range System_Address_Image .. System_Tasking_Stages;\n \n+   subtype System_Atomic_Operations_Descendant is System_Descendant\n+     range System_Atomic_Operations_Test_And_Set ..\n+           System_Atomic_Operations_Test_And_Set;\n+\n    subtype System_Dim_Descendant is System_Descendant\n      range System_Dim_Float_IO .. System_Dim_Integer_IO;\n \n@@ -689,6 +693,10 @@ package body Rtsfind is\n       elsif U_Id in System_Descendant then\n          Name_Buffer (7) := '.';\n \n+         if U_Id in System_Atomic_Operations_Descendant then\n+            Name_Buffer (25) := '.';\n+         end if;\n+\n          if U_Id in System_Dim_Descendant then\n             Name_Buffer (11) := '.';\n          end if;"}, {"sha": "99f870ad9ea34019b1f6e2c4453ee3cfba1ad04f", "filename": "gcc/ada/rtsfind.ads", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5478d8a7aefbec4d93d32237fb29b9fdb8347b6b/gcc%2Fada%2Frtsfind.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5478d8a7aefbec4d93d32237fb29b9fdb8347b6b/gcc%2Fada%2Frtsfind.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Frtsfind.ads?ref=5478d8a7aefbec4d93d32237fb29b9fdb8347b6b", "patch": "@@ -195,6 +195,7 @@ package Rtsfind is\n       System_Arith_128,\n       System_AST_Handling,\n       System_Assertions,\n+      System_Atomic_Operations,\n       System_Atomic_Primitives,\n       System_Aux_DEC,\n       System_Bignums,\n@@ -468,6 +469,10 @@ package Rtsfind is\n       System_WWd_Enum,\n       System_WWd_Wchar,\n \n+      --  Children of System.Atomic_Operations\n+\n+       System_Atomic_Operations_Test_And_Set,\n+\n       --  Children of System.Dim\n \n       System_Dim_Float_IO,\n@@ -800,6 +805,9 @@ package Rtsfind is\n      RE_Uint32,                          -- System.Atomic_Primitives\n      RE_Uint64,                          -- System.Atomic_Primitives\n \n+     RE_Test_And_Set_Flag,             -- System.Atomic_Operations.Test_And_Set\n+     RE_Atomic_Test_And_Set,           -- System.Atomic_Operations.Test_And_Set\n+\n      RE_AST_Handler,                     -- System.Aux_DEC\n      RE_Import_Address,                  -- System.Aux_DEC\n      RE_Import_Value,                    -- System.Aux_DEC\n@@ -2482,6 +2490,9 @@ package Rtsfind is\n      RE_Uint32                           => System_Atomic_Primitives,\n      RE_Uint64                           => System_Atomic_Primitives,\n \n+     RE_Test_And_Set_Flag             => System_Atomic_Operations_Test_And_Set,\n+     RE_Atomic_Test_And_Set           => System_Atomic_Operations_Test_And_Set,\n+\n      RE_AST_Handler                      => System_Aux_DEC,\n      RE_Import_Address                   => System_Aux_DEC,\n      RE_Import_Value                     => System_Aux_DEC,"}]}