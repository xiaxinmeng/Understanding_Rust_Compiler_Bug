{"sha": "d61ce6ab04ee98f1f64b54436bca96054cc62329", "node_id": "C_kwDOANBUbNoAKGQ2MWNlNmFiMDRlZTk4ZjFmNjRiNTQ0MzZiY2E5NjA1NGNjNjIzMjk", "commit": {"author": {"name": "liuhongt", "email": "hongtao.liu@intel.com", "date": "2021-10-11T02:05:03Z"}, "committer": {"name": "liuhongt", "email": "hongtao.liu@intel.com", "date": "2021-10-12T07:24:12Z"}, "message": "Adjust testcase for O2 vectorization enabling\n\nThis issue was observed in rs6000 specific PR102658 as well.\n\nI've looked into it a bit, it's caused by the \"conditional store replacement\" which\nis originally disabled without vectorization as below code.\n\n  /* If either vectorization or if-conversion is disabled then do\n     not sink any stores.  */\n  if (param_max_stores_to_sink == 0\n      || (!flag_tree_loop_vectorize && !flag_tree_slp_vectorize)\n      || !flag_tree_loop_if_convert)\n    return false;\n\nThe new change makes the innermost loop look like\n\nfor (int c1 = 0; c1 <= 1499; c1 += 1) {\n  if (c1 <= 500) {\n     S_10(c0, c1);\n  } else {\n      S_9(c0, c1);\n  }\n  S_11(c0, c1);\n}\n\nand can not be splitted as:\n\nfor (int c1 = 0; c1 <= 500; c1 += 1)\n  S_10(c0, c1);\n\nfor (int c1 = 501; c1 <= 1499; c1 += 1)\n  S_9(c0, c1);\n\nSo instead of disabling vectorization, could we just disable this cs replacement\nwith parameter \"--param max-stores-to-sink=0\"?\n\nI tested this proposal on ppc64le, it should work as well.\n\n2021-10-11  Kewen Lin  <linkw@linux.ibm.com>\n\nlibgomp/ChangeLog:\n\n\t* testsuite/libgomp.graphite/force-parallel-8.c: Add --param max-stores-to-sink=0.", "tree": {"sha": "af64900f2ff56911061ce1a61ce2ec48e8b971c9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/af64900f2ff56911061ce1a61ce2ec48e8b971c9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d61ce6ab04ee98f1f64b54436bca96054cc62329", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d61ce6ab04ee98f1f64b54436bca96054cc62329", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d61ce6ab04ee98f1f64b54436bca96054cc62329", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d61ce6ab04ee98f1f64b54436bca96054cc62329/comments", "author": {"login": "algebra84", "id": 22926165, "node_id": "MDQ6VXNlcjIyOTI2MTY1", "avatar_url": "https://avatars.githubusercontent.com/u/22926165?v=4", "gravatar_id": "", "url": "https://api.github.com/users/algebra84", "html_url": "https://github.com/algebra84", "followers_url": "https://api.github.com/users/algebra84/followers", "following_url": "https://api.github.com/users/algebra84/following{/other_user}", "gists_url": "https://api.github.com/users/algebra84/gists{/gist_id}", "starred_url": "https://api.github.com/users/algebra84/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/algebra84/subscriptions", "organizations_url": "https://api.github.com/users/algebra84/orgs", "repos_url": "https://api.github.com/users/algebra84/repos", "events_url": "https://api.github.com/users/algebra84/events{/privacy}", "received_events_url": "https://api.github.com/users/algebra84/received_events", "type": "User", "site_admin": false}, "committer": {"login": "algebra84", "id": 22926165, "node_id": "MDQ6VXNlcjIyOTI2MTY1", "avatar_url": "https://avatars.githubusercontent.com/u/22926165?v=4", "gravatar_id": "", "url": "https://api.github.com/users/algebra84", "html_url": "https://github.com/algebra84", "followers_url": "https://api.github.com/users/algebra84/followers", "following_url": "https://api.github.com/users/algebra84/following{/other_user}", "gists_url": "https://api.github.com/users/algebra84/gists{/gist_id}", "starred_url": "https://api.github.com/users/algebra84/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/algebra84/subscriptions", "organizations_url": "https://api.github.com/users/algebra84/orgs", "repos_url": "https://api.github.com/users/algebra84/repos", "events_url": "https://api.github.com/users/algebra84/events{/privacy}", "received_events_url": "https://api.github.com/users/algebra84/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "82bc9355eebd6f92fecdee464ea36f6f75994780", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/82bc9355eebd6f92fecdee464ea36f6f75994780", "html_url": "https://github.com/Rust-GCC/gccrs/commit/82bc9355eebd6f92fecdee464ea36f6f75994780"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "6868dd291471400b62a2b1f6e59ae61aed0b24d7", "filename": "libgomp/testsuite/libgomp.graphite/force-parallel-8.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d61ce6ab04ee98f1f64b54436bca96054cc62329/libgomp%2Ftestsuite%2Flibgomp.graphite%2Fforce-parallel-8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d61ce6ab04ee98f1f64b54436bca96054cc62329/libgomp%2Ftestsuite%2Flibgomp.graphite%2Fforce-parallel-8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.graphite%2Fforce-parallel-8.c?ref=d61ce6ab04ee98f1f64b54436bca96054cc62329", "patch": "@@ -1,4 +1,4 @@\n-/* { dg-additional-options \"-fdisable-tree-thread1 -fdisable-tree-vrp-thread1\" } */\n+/* { dg-additional-options \"-fdisable-tree-thread1 -fdisable-tree-vrp-thread1 --param max-stores-to-sink=0\" } */\n \n #define N 1500\n "}]}