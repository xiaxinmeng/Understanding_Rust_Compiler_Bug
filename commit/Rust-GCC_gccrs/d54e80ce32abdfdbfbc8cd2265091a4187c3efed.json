{"sha": "d54e80ce32abdfdbfbc8cd2265091a4187c3efed", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDU0ZTgwY2UzMmFiZGZkYmZiYzhjZDIyNjUwOTFhNDE4N2MzZWZlZA==", "commit": {"author": {"name": "Mikael Morin", "email": "mikael@gcc.gnu.org", "date": "2011-08-25T19:10:06Z"}, "committer": {"name": "Mikael Morin", "email": "mikael@gcc.gnu.org", "date": "2011-08-25T19:10:06Z"}, "message": "re PR fortran/50050 (Internal compiler error free_expr0 at expr.c:3709 via gfc_done_2)\n\n2011-08-25  Mikael Morin  <mikael.morin@gcc.gnu.org>\n\n\tPR fortran/50050\n\t* expr.c (gfc_free_shape): Do nothing if shape is NULL.\n\t(free_expr0): Remove redundant NULL shape check.\n\t* resolve.c (check_host_association): Ditto.\n\t* trans-expr.c (gfc_trans_subarray_assign): Assert that shape is\n\tnon-NULL.\n\t* trans-io.c (transfer_array_component): Ditto.\n\n2011-08-25  Mikael Morin  <mikael.morin@gcc.gnu.org>\n\n\tPR fortran/50050\n\t* gfortran.dg/pointer_comp_init_1.f90: New test.\n\nFrom-SVN: r178086", "tree": {"sha": "be3ae41029778855998bde1d67e542a10f66ae45", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/be3ae41029778855998bde1d67e542a10f66ae45"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d54e80ce32abdfdbfbc8cd2265091a4187c3efed", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d54e80ce32abdfdbfbc8cd2265091a4187c3efed", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d54e80ce32abdfdbfbc8cd2265091a4187c3efed", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d54e80ce32abdfdbfbc8cd2265091a4187c3efed/comments", "author": null, "committer": null, "parents": [{"sha": "42aa5124f7a7173d1972668378a9531949f92599", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/42aa5124f7a7173d1972668378a9531949f92599", "html_url": "https://github.com/Rust-GCC/gccrs/commit/42aa5124f7a7173d1972668378a9531949f92599"}], "stats": {"total": 56, "additions": 52, "deletions": 4}, "files": [{"sha": "be796bae6e150584f79af5f5e8d7ab3dff31afe1", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d54e80ce32abdfdbfbc8cd2265091a4187c3efed/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d54e80ce32abdfdbfbc8cd2265091a4187c3efed/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=d54e80ce32abdfdbfbc8cd2265091a4187c3efed", "patch": "@@ -1,3 +1,13 @@\n+2011-08-25  Mikael Morin  <mikael.morin@gcc.gnu.org>\n+\n+\tPR fortran/50050\n+\t* expr.c (gfc_free_shape): Do nothing if shape is NULL.\n+\t(free_expr0): Remove redundant NULL shape check.\n+\t* resolve.c (check_host_association): Ditto.\n+\t* trans-expr.c (gfc_trans_subarray_assign): Assert that shape is\n+\tnon-NULL.\n+\t* trans-io.c (transfer_array_component): Ditto.\n+\n 2011-08-25  Tobias Burnus  <burnus@net-b.de>\n \n \t* trans-array.c (gfc_conv_descriptor_token): Add assert."}, {"sha": "3c09a2a99c4b11a7b459170e25860977900be76f", "filename": "gcc/fortran/expr.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d54e80ce32abdfdbfbc8cd2265091a4187c3efed/gcc%2Ffortran%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d54e80ce32abdfdbfbc8cd2265091a4187c3efed/gcc%2Ffortran%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fexpr.c?ref=d54e80ce32abdfdbfbc8cd2265091a4187c3efed", "patch": "@@ -409,6 +409,9 @@ gfc_clear_shape (mpz_t *shape, int rank)\n void\n gfc_free_shape (mpz_t **shape, int rank)\n {\n+  if (*shape == NULL)\n+    return;\n+\n   gfc_clear_shape (*shape, rank);\n   free (*shape);\n   *shape = NULL;\n@@ -490,8 +493,7 @@ free_expr0 (gfc_expr *e)\n     }\n \n   /* Free a shape array.  */\n-  if (e->shape != NULL)\n-    gfc_free_shape (&e->shape, e->rank);\n+  gfc_free_shape (&e->shape, e->rank);\n \n   gfc_free_ref_list (e->ref);\n "}, {"sha": "436c16045cbe4c26065e2fb741ea5a849c03573e", "filename": "gcc/fortran/resolve.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d54e80ce32abdfdbfbc8cd2265091a4187c3efed/gcc%2Ffortran%2Fresolve.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d54e80ce32abdfdbfbc8cd2265091a4187c3efed/gcc%2Ffortran%2Fresolve.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fresolve.c?ref=d54e80ce32abdfdbfbc8cd2265091a4187c3efed", "patch": "@@ -5198,8 +5198,7 @@ check_host_association (gfc_expr *e)\n \t      && sym->attr.contained)\n \t{\n \t  /* Clear the shape, since it might not be valid.  */\n-\t  if (e->shape != NULL)\n-\t    gfc_free_shape (&e->shape, e->rank);\n+\t  gfc_free_shape (&e->shape, e->rank);\n \n \t  /* Give the expression the right symtree!  */\n \t  gfc_find_sym_tree (e->symtree->name, NULL, 1, &st);"}, {"sha": "ea65c022cf57baebf0abda5fbebf784d4373dc72", "filename": "gcc/fortran/trans-expr.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d54e80ce32abdfdbfbc8cd2265091a4187c3efed/gcc%2Ffortran%2Ftrans-expr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d54e80ce32abdfdbfbc8cd2265091a4187c3efed/gcc%2Ffortran%2Ftrans-expr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-expr.c?ref=d54e80ce32abdfdbfbc8cd2265091a4187c3efed", "patch": "@@ -4428,6 +4428,7 @@ gfc_trans_subarray_assign (tree dest, gfc_component * cm, gfc_expr * expr)\n   gfc_add_block_to_block (&block, &loop.pre);\n   gfc_add_block_to_block (&block, &loop.post);\n \n+  gcc_assert (lss->shape != NULL);\n   gfc_free_shape (&lss->shape, cm->as->rank);\n   gfc_cleanup_loop (&loop);\n "}, {"sha": "931565d72fe147d78772876df1c15ba6cf7b2873", "filename": "gcc/fortran/trans-io.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d54e80ce32abdfdbfbc8cd2265091a4187c3efed/gcc%2Ffortran%2Ftrans-io.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d54e80ce32abdfdbfbc8cd2265091a4187c3efed/gcc%2Ffortran%2Ftrans-io.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-io.c?ref=d54e80ce32abdfdbfbc8cd2265091a4187c3efed", "patch": "@@ -1999,6 +1999,7 @@ transfer_array_component (tree expr, gfc_component * cm, locus * where)\n   gfc_add_block_to_block (&block, &loop.pre);\n   gfc_add_block_to_block (&block, &loop.post);\n \n+  gcc_assert (ss->shape != NULL);\n   gfc_free_shape (&ss->shape, cm->as->rank);\n   gfc_cleanup_loop (&loop);\n "}, {"sha": "417f0f124ca499f1b09e9ded97f67226fddc86cf", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d54e80ce32abdfdbfbc8cd2265091a4187c3efed/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d54e80ce32abdfdbfbc8cd2265091a4187c3efed/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=d54e80ce32abdfdbfbc8cd2265091a4187c3efed", "patch": "@@ -1,3 +1,8 @@\n+2011-08-25  Mikael Morin  <mikael.morin@gcc.gnu.org>\n+\n+\tPR fortran/50050\n+\t* gfortran.dg/pointer_comp_init_1.f90: New test.\n+\n 2011-08-25  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/50157"}, {"sha": "44f360e982612ced074b66b25d70366313f3e22c", "filename": "gcc/testsuite/gfortran.dg/pointer_comp_init_1.f90", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d54e80ce32abdfdbfbc8cd2265091a4187c3efed/gcc%2Ftestsuite%2Fgfortran.dg%2Fpointer_comp_init_1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d54e80ce32abdfdbfbc8cd2265091a4187c3efed/gcc%2Ftestsuite%2Fgfortran.dg%2Fpointer_comp_init_1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fpointer_comp_init_1.f90?ref=d54e80ce32abdfdbfbc8cd2265091a4187c3efed", "patch": "@@ -0,0 +1,30 @@\n+! { dg-do compile }\n+!\n+! PR fortran/50050\n+! ICE whilst trying to access NULL shape.\n+\n+! Reduced from the FoX library http://www1.gly.bris.ac.uk/~walker/FoX/\n+! Contributed by Andrew Benson <abenson@its.caltech.edu>\n+\n+module m_common_attrs\n+  implicit none\n+\n+  type dict_item\n+  end type dict_item\n+\n+  type dict_item_ptr\n+     type(dict_item), pointer :: d => null()\n+  end type dict_item_ptr\n+\n+contains\n+\n+  subroutine add_item_to_dict()\n+    type(dict_item_ptr), pointer :: tempList(:)\n+    integer :: n\n+\n+    allocate(tempList(0:n+1)) \n+  end subroutine add_item_to_dict\n+\n+end module m_common_attrs\n+\n+! { dg-final { cleanup-modules \"m_common_attrs\" } }"}]}