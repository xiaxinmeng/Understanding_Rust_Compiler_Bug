{"sha": "8e352cd32ce32dc689cd716921428709143f8920", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGUzNTJjZDMyY2UzMmRjNjg5Y2Q3MTY5MjE0Mjg3MDkxNDNmODkyMA==", "commit": {"author": {"name": "Basile Starynkevitch", "email": "bstarynk@gcc.gnu.org", "date": "2008-08-01T05:19:40Z"}, "committer": {"name": "Basile Starynkevitch", "email": "bstarynk@gcc.gnu.org", "date": "2008-08-01T05:19:40Z"}, "message": "tree-pass.h: Added comment about not dumping passes with name starting with star in struct...\n\n2008-08-01  Basile Starynkevitch  <basile@starynkevitch>\n\t* gcc/tree-pass.h: Added comment about not dumping passes with name\n\tstarting with star in struct opt_pass.\n\t* gcc/passes.c (register_dump_files_1): Don't do dump for a pass with\n\tname starting with star.\n\t* gcc/doc/passes.texi (Pass manager): Mention pass names and special\n\tmeaning of star prefix to avoid dump.\n\nFrom-SVN: r138450", "tree": {"sha": "9484ffe873ca8d908800e707f82562aafe746b99", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9484ffe873ca8d908800e707f82562aafe746b99"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8e352cd32ce32dc689cd716921428709143f8920", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8e352cd32ce32dc689cd716921428709143f8920", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8e352cd32ce32dc689cd716921428709143f8920", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8e352cd32ce32dc689cd716921428709143f8920/comments", "author": null, "committer": null, "parents": [{"sha": "f2d6ca5081ba8fb31b5d03545f45cce12ac67b3f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f2d6ca5081ba8fb31b5d03545f45cce12ac67b3f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f2d6ca5081ba8fb31b5d03545f45cce12ac67b3f"}], "stats": {"total": 18, "additions": 16, "deletions": 2}, "files": [{"sha": "cbaed89e428df6d39d9075cc18d1bfc9b4f6b620", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e352cd32ce32dc689cd716921428709143f8920/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e352cd32ce32dc689cd716921428709143f8920/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8e352cd32ce32dc689cd716921428709143f8920", "patch": "@@ -1,3 +1,11 @@\n+2008-08-01  Basile Starynkevitch  <basile@starynkevitch>\n+\t* tree-pass.h: Added comment about not dumping passes with name\n+\tstarting with star in struct opt_pass.\n+\t* passes.c (register_dump_files_1): Don't do dump for a pass with\n+\tname starting with star.\n+\t* doc/passes.texi (Pass manager): Mention pass names and special\n+\tmeaning of star prefix to avoid dump.\n+\n 2008-07-31  Adam Nemet  <anemet@caviumnetworks.com>\n \n \t* config.gcc (mipsisa64r2*-*-linux*): New configuration.  Set ISA\n@@ -68,6 +76,7 @@\n \t(dwarf2out_stack_adjust): Use it.\n \t(dwarf2out_frame_debug_expr): Likewise.\n \n+>>>>>>> .r138449\n 2008-07-31  Richard Guenther  <rguenther@suse.de>\n \n \tPR tree-optimization/36978"}, {"sha": "daeaf9520e12d108d44a3d33d5e9cceac0599d45", "filename": "gcc/doc/passes.texi", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e352cd32ce32dc689cd716921428709143f8920/gcc%2Fdoc%2Fpasses.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e352cd32ce32dc689cd716921428709143f8920/gcc%2Fdoc%2Fpasses.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fpasses.texi?ref=8e352cd32ce32dc689cd716921428709143f8920", "patch": "@@ -166,6 +166,10 @@ not attempt to (re-)generate data structures or lower intermediate\n language form based on the requirements of the next pass.  Nevertheless,\n what is present is useful, and a far sight better than nothing at all.\n \n+Each pass may have its own dump file (for GCC debugging purposes).\n+Passes without any names, or with a name starting with a star, do not\n+dump anything.\n+\n TODO: describe the global variables set up by the pass manager,\n and a brief description of how a new pass should use it.\n I need to look at what info rtl passes use first@enddots{}"}, {"sha": "400717f79b7f6035c97bc341e4a552773d44434b", "filename": "gcc/passes.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e352cd32ce32dc689cd716921428709143f8920/gcc%2Fpasses.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e352cd32ce32dc689cd716921428709143f8920/gcc%2Fpasses.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpasses.c?ref=8e352cd32ce32dc689cd716921428709143f8920", "patch": "@@ -406,7 +406,7 @@ register_dump_files_1 (struct opt_pass *pass, int properties)\n       int new_properties = (properties | pass->properties_provided)\n \t\t\t   & ~pass->properties_destroyed;\n \n-      if (pass->name)\n+      if (pass->name && pass->name[0] != '*')\n         register_one_dump_file (pass);\n \n       if (pass->sub)"}, {"sha": "ea7e34334ee890c4aac99faad69df46617cf396a", "filename": "gcc/tree-pass.h", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e352cd32ce32dc689cd716921428709143f8920/gcc%2Ftree-pass.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e352cd32ce32dc689cd716921428709143f8920/gcc%2Ftree-pass.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-pass.h?ref=8e352cd32ce32dc689cd716921428709143f8920", "patch": "@@ -104,7 +104,8 @@ struct opt_pass\n     SIMPLE_IPA_PASS,\n     IPA_PASS\n   } type;\n-  /* Terse name of the pass used as a fragment of the dump file name.  */\n+  /* Terse name of the pass used as a fragment of the dump file\n+     name.  If the name starts with a star, no dump happens. */\n   const char *name;\n \n   /* If non-null, this pass and all sub-passes are executed only if"}]}