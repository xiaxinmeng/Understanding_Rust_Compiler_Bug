{"sha": "c63f730e5e1b44755a34defcc52a3921c4fd4bb2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzYzZjczMGU1ZTFiNDQ3NTVhMzRkZWZjYzUyYTM5MjFjNGZkNGJiMg==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2006-02-17T16:09:32Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2006-02-17T16:09:32Z"}, "message": "Resync.\n\nFrom-SVN: r111200", "tree": {"sha": "f279547eb90045a8c7f36db8bffaf051d4a9e2d9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f279547eb90045a8c7f36db8bffaf051d4a9e2d9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c63f730e5e1b44755a34defcc52a3921c4fd4bb2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c63f730e5e1b44755a34defcc52a3921c4fd4bb2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c63f730e5e1b44755a34defcc52a3921c4fd4bb2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c63f730e5e1b44755a34defcc52a3921c4fd4bb2/comments", "author": null, "committer": null, "parents": [{"sha": "47dd40babb7af080ee9935406111a17ec3f87a0b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/47dd40babb7af080ee9935406111a17ec3f87a0b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/47dd40babb7af080ee9935406111a17ec3f87a0b"}], "stats": {"total": 175, "additions": 175, "deletions": 0}, "files": [{"sha": "eb96f1f28e2068639962f02c01e61692937e0885", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 175, "deletions": 0, "changes": 175, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c63f730e5e1b44755a34defcc52a3921c4fd4bb2/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c63f730e5e1b44755a34defcc52a3921c4fd4bb2/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=c63f730e5e1b44755a34defcc52a3921c4fd4bb2", "patch": "@@ -1,3 +1,178 @@\n+2006-02-17  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_ch4.adb (Find_Boolean_Types): If one of the operands is an\n+\taggregate, check the interpretations of the other operand to find one\n+\tthat may be a boolean array.\n+\n+\t(Analyze_Selected_Component): Fix flow-of-control typo in case where\n+\tthe prefix is a private extension.\n+\n+2006-02-17  Eric Botcazou  <botcazou@adacore.com>\n+\n+\tPR ada/26315\n+\n+\t* utils2.c (find_common_type): If both input types are BLKmode and\n+\thave the same constant size, keep using the first one.\n+\n+\t* bindgen.adb: (Gen_Versions_Ada): Revert previous workaround.\n+\n+\t* decl.c (gnat_to_gnu_entity): Only check TREE_OVERFLOW for a constant.\n+\n+\t* misc.c (gnat_handle_option): New case for -Woverlength-strings.\n+\n+2006-02-17  Jose Ruiz  <ruiz@adacore.com>\n+\n+\t* s-taprop-irix.adb, s-taprop-hpux-dce.adb, s-taprop-linux.adb, \n+\ts-taprop-solaris.adb, s-taprop-vms.adb, s-taprop-mingw.adb, \n+\ts-taprop-posix.adb, s-taprop-vxworks.adb, s-taprop-lynxos.adb, \n+\ts-taprop-tru64.adb (Set_False, Set_True, Suspend_Until_True): Add\n+\tAbort_Defer/Undefer pairs to avoid the possibility of a task being\n+\taborted while owning a lock.\n+\n+2006-02-17  Javier Miranda  <miranda@adacore.com>\n+\t    Robert Dewar  <dewar@adacore.com>\n+\n+\t* exp_ch4.adb (Expand_N_Allocator): If the allocated object is accessed\n+\tthrough an access to class-wide interface we force the displacement of\n+\tthe pointer to the allocated object to reference the corresponding\n+\tsecondary dispatch table.\n+\t(Expand_N_Op_Divide): Allow 64 bit divisions by small power of 2,\n+\tif Long_Shifts are supported on the target, even if 64 bit divides\n+\tare not supported (configurable run time mode).\n+\t(Expand_N_Type_Conversion): Do validity check if validity checks on\n+\toperands are enabled.\n+\t(Expand_N_Qualified_Expression): Do validity check if validity checks\n+\ton operands are enabled.\n+\n+2006-02-17  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* exp_dbug.adb (Debug_Renaming_Declaration): Indicate that the entity\n+\tmust be materialized when the renamed expression is an explicit\n+\tdereference.\n+\n+2006-02-17  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* freeze.adb (Statically_Discriminated_Components): Return false if\n+\tthe bounds of the type of the discriminant are not static expressions.\n+\n+\t* sem_aggr.adb (Check_Static_Discriminated_Subtype): Return false if\n+\tthe bounds of the discriminant type are not static.\n+\n+2006-02-17  Robert Dewar  <dewar@adacore.com>\n+\n+\t* g-os_lib.adb (Copy_File): Make sure that if From has an Invalid_FD,\n+\tthen we close To if it is valid.\n+\n+2006-02-17  Vasiliy Fofanov  <fofanov@adacore.com>\n+\n+\t* init.c (facility_resignal_table): new array\n+\t(__gnat_default_resignal_p): enhance default predicate to resignal if\n+\tVMS condition has one of the predefined facility codes.\n+\n+2006-02-17  Vasiliy Fofanov  <fofanov@adacore.com>\n+\n+\t* Makefile.in: Use VMS64 specialized versions of several units in\n+\tInterfaces.C hierarchy to be compatible with HP C default size choices.\n+\tUse the default version of Ada.Synchronous_Task_Control for VxWorks 653.\n+\n+2006-02-17  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_ch10.adb (Analyze_With_Clause): If the unit is a subprogram\n+\tinstantiation, the corresponding entity is the related_instance of the\n+\twrapper package created for the instance.\n+\n+2006-02-17  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_ch12.adb (Analyze_Package_Instantiation): Inline_Now is false if\n+\tthe current instance is nested within another instance in a child unit.\n+\n+2006-02-17  Javier Miranda  <miranda@adacore.com>\n+\t    Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_ch3.adb (Build_Discriminated_Subtype): In case of concurrent\n+\ttype we cannot inherit the primitive operations; we inherit the\n+\tCorresponding_Record_Type (which has the list of primitive operations).\n+\t(Check_Anonymous_Access_Types): When creating anonymous access types for\n+\taccess components, use Rewrite in order to preserve the tree structure,\n+\tfor ASIS use.\n+\t(Analyze_Object_Declaration): For limited types with access\n+\tdiscriminants with defaults initialized by an aggregate, obtain\n+\tsubtype from aggregate as for other mutable types.\n+\t(Derived_Type_Declaration): If the derived type is a limited interface,\n+\tset the corresponding flag (Is_Limited_Record is not sufficient).\n+\n+2006-02-17  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_ch6.adb (Build_Body_To_Inline): Enforce the rule that in order\n+\tto inline a function that returns an unconstrained type, the return\n+\texpression must be the first variable declared in the body of the\n+\tfunction.\n+\n+2006-02-17  Javier Miranda  <miranda@adacore.com>\n+\n+\t* sem_res.adb (Resolve_Type_Conversion): In case of conversion to an\n+\tabstract interface type, the static analysis is not enough to know if\n+\tthe interface is implemented or not by the source tagged type. Hence\n+\twe must pass the work to the expander to generate the required code to\n+\tevaluate the conversion at run-time.\n+\t(Resolve_Equality_Op): Do not apply previous\n+\ttransformation if expansion is disasbled, to prevent anomalies when\n+\tlocating global references in a generic unit.\n+\n+2006-02-17  Vincent Celier  <celier@adacore.com>\n+\n+\t* snames.ads, snames.adb: New standard names for new project attributes:\n+\tarchive_builder, archive_indexer, compiler_pic_option,\n+\tconfig_body_file_name, config_body_file_name_pattern,\n+\tconfig_file_switches, config_file_unique, config_spec_file_name,\n+\tconfig_spec_file_name_pattern, default_builder_switches,\n+\tdefault_global_compiler_switches, default_language,\n+\tdependency_file_kind, global_compiler_switches, include_path,\n+\tinclude_path_file, language_kind, linker_executable_option,\n+\tlinker_lib_dir_option, linker_lib_name_option, mapping_file_switches,\n+\troots, runtime_project.\n+\n+2006-02-17  Matthew Heaney  <heaney@adacore.com>\n+\n+\t* a-convec.ads, a-convec.adb: \n+\t(operator \"&\"): handle potential overflow for large index types\n+\t(Insert): removed Contraint_Error when using large index types\n+\t(Insert_Space): removed Constraint_Error for large index types\n+\t(Length): moved constraint check from Length to Insert\n+\n+\t* a-coinve.ads, a-coinve.adb: Stream attribute procedures are declared\n+\tas not null access.\n+\tExplicit raise statements now include an exception message.\n+\t(operator \"&\"): handle potential overflow for large index types\n+\t(Insert): removed Contraint_Error when using large index types\n+\t(Insert_Space): removed Constraint_Error for large index types\n+\t(Length): moved constraint check from Length to Insert\n+\n+2006-02-17  Robert Dewar  <dewar@adacore.com>\n+\n+\t* s-wchcnv.adb: Document handling of [ on output (we do not change\n+\tthis to [\"5B\"] and the new comments say why not.\n+\n+\t* gnat_ugn.texi: \n+\tAdd note for -gnatVo that this now includes the cases of type\n+\tconversions and qualified expressions.\n+\tAdd comments on handling of brackets encoding for Text_IO\n+\n+2006-02-17  Ramon Fernandez  <fernandez@adacore.com>\n+\t    Thomas Quinot  <quinot@adacore.com>\n+\t    Robert Dewar  <dewar@adacore.com>\n+\t    Javier Miranda  <miranda@adacore.com>\n+\n+\t* expander.adb: Fix typo in comment\n+\n+\t* exp_pakd.adb: Fix typo\n+\tMinor comment reformatting.\n+\n+\t* g-dyntab.adb: Minor reformatting\n+\n+\t* exp_ch6.adb (Register_Interface_DT_Entry): Traverse the list of\n+\taliased subprograms to look for the abstract interface subprogram.\n+\n 2006-02-16  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* env.c (__gnat_setenv): Use size_t."}]}