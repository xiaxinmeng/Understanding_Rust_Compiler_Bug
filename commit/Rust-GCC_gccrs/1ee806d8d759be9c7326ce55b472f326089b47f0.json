{"sha": "1ee806d8d759be9c7326ce55b472f326089b47f0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWVlODA2ZDhkNzU5YmU5YzczMjZjZTU1YjQ3MmYzMjYwODliNDdmMA==", "commit": {"author": {"name": "Svante Signell", "email": "svante.signell@gmail.com", "date": "2016-04-27T07:38:41Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2016-04-27T07:38:41Z"}, "message": "Makefile.in (x86 GNU/Hurd): Use s-osinte-gnu.adb.\n\n\t* gcc-interface/Makefile.in (x86 GNU/Hurd): Use s-osinte-gnu.adb.\n\t* s-osinte-gnu.ads: Small tweaks.\n\t* s-osinte-gnu.adb: New file.\n\nFrom-SVN: r235467", "tree": {"sha": "56feb5162cf8eb96567b69a67d02eaa90ec07bd4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/56feb5162cf8eb96567b69a67d02eaa90ec07bd4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1ee806d8d759be9c7326ce55b472f326089b47f0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1ee806d8d759be9c7326ce55b472f326089b47f0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1ee806d8d759be9c7326ce55b472f326089b47f0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1ee806d8d759be9c7326ce55b472f326089b47f0/comments", "author": {"login": "gnu-srs", "id": 8969044, "node_id": "MDQ6VXNlcjg5NjkwNDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/8969044?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gnu-srs", "html_url": "https://github.com/gnu-srs", "followers_url": "https://api.github.com/users/gnu-srs/followers", "following_url": "https://api.github.com/users/gnu-srs/following{/other_user}", "gists_url": "https://api.github.com/users/gnu-srs/gists{/gist_id}", "starred_url": "https://api.github.com/users/gnu-srs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gnu-srs/subscriptions", "organizations_url": "https://api.github.com/users/gnu-srs/orgs", "repos_url": "https://api.github.com/users/gnu-srs/repos", "events_url": "https://api.github.com/users/gnu-srs/events{/privacy}", "received_events_url": "https://api.github.com/users/gnu-srs/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c47194d2ab2e3ce6c760ea44de3ec00bf18976ee", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c47194d2ab2e3ce6c760ea44de3ec00bf18976ee", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c47194d2ab2e3ce6c760ea44de3ec00bf18976ee"}], "stats": {"total": 166, "additions": 158, "deletions": 8}, "files": [{"sha": "1c41831e4d2b339e1811d51f7e3f048d5f3678d8", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ee806d8d759be9c7326ce55b472f326089b47f0/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ee806d8d759be9c7326ce55b472f326089b47f0/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=1ee806d8d759be9c7326ce55b472f326089b47f0", "patch": "@@ -1,3 +1,9 @@\n+2016-04-27  Svante Signell  <svante.signell@gmail.com>\n+\n+\t* gcc-interface/Makefile.in (x86 GNU/Hurd): Use s-osinte-gnu.adb.\n+\t* s-osinte-gnu.ads: Small tweaks.\n+\t* s-osinte-gnu.adb: New file.\n+\n 2016-04-21  Hristian Kirtchev  <kirtchev@adacore.com>\n \n \t* sem_prag.adb (Match_Constituent): Treat a constant as a legal"}, {"sha": "d9ede9f4260f3e794af09a98c7b9e53ba3ee86f7", "filename": "gcc/ada/gcc-interface/Makefile.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ee806d8d759be9c7326ce55b472f326089b47f0/gcc%2Fada%2Fgcc-interface%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ee806d8d759be9c7326ce55b472f326089b47f0/gcc%2Fada%2Fgcc-interface%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2FMakefile.in?ref=1ee806d8d759be9c7326ce55b472f326089b47f0", "patch": "@@ -1426,7 +1426,7 @@ ifeq ($(strip $(filter-out %86 pc gnu,$(target_cpu) $(target_vendor) $(target_os\n   a-intnam.ads<a-intnam-freebsd.ads \\\n   s-inmaop.adb<s-inmaop-posix.adb \\\n   s-intman.adb<s-intman-posix.adb \\\n-  s-osinte.adb<s-osinte-posix.adb \\\n+  s-osinte.adb<s-osinte-gnu.adb \\\n   s-osinte.ads<s-osinte-gnu.ads \\\n   s-osprim.adb<s-osprim-posix.adb \\\n   s-taprop.adb<s-taprop-posix.adb \\"}, {"sha": "fb099acfc7d7e0b86128ece07008d7a0cfc0ac96", "filename": "gcc/ada/s-osinte-gnu.adb", "status": "added", "additions": 144, "deletions": 0, "changes": 144, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ee806d8d759be9c7326ce55b472f326089b47f0/gcc%2Fada%2Fs-osinte-gnu.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ee806d8d759be9c7326ce55b472f326089b47f0/gcc%2Fada%2Fs-osinte-gnu.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-osinte-gnu.adb?ref=1ee806d8d759be9c7326ce55b472f326089b47f0", "patch": "@@ -0,0 +1,144 @@\n+------------------------------------------------------------------------------\n+--                                                                          --\n+--                 GNAT RUN-TIME LIBRARY (GNARL) COMPONENTS                 --\n+--                                                                          --\n+--                   S Y S T E M . O S _ I N T E R F A C E                  --\n+--                                                                          --\n+--                                   B o d y                                --\n+--                                                                          --\n+--          Copyright (C) 2015-2016, Free Software Foundation, Inc.         --\n+--                                                                          --\n+-- GNAT is free software;  you can  redistribute it  and/or modify it under --\n+-- terms of the  GNU General Public License as published  by the Free Soft- --\n+-- ware  Foundation;  either version 3,  or (at your option) any later ver- --\n+-- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --\n+-- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n+-- or FITNESS FOR A PARTICULAR PURPOSE.                                     --\n+--                                                                          --\n+-- As a special exception under Section 7 of GPL version 3, you are granted --\n+-- additional permissions described in the GCC Runtime Library Exception,   --\n+-- version 3.1, as published by the Free Software Foundation.               --\n+--                                                                          --\n+-- You should have received a copy of the GNU General Public License and    --\n+-- a copy of the GCC Runtime Library Exception along with this program;     --\n+-- see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see    --\n+-- <http://www.gnu.org/licenses/>.                                          --\n+--                                                                          --\n+-- GNARL was developed by the GNARL team at Florida State University.       --\n+-- Extensive contributions were provided by Ada Core Technologies, Inc.     --\n+--                                                                          --\n+------------------------------------------------------------------------------\n+\n+--  This is the GNU/Hurd version of this package.\n+\n+pragma Polling (Off);\n+--  Turn off polling, we do not want ATC polling to take place during\n+--  tasking operations. It causes infinite loops and other problems.\n+\n+--  This package encapsulates all direct interfaces to OS services\n+--  that are needed by children of System.\n+\n+package body System.OS_Interface is\n+\n+   --------------------\n+   -- Get_Stack_Base --\n+   --------------------\n+\n+   function Get_Stack_Base (thread : pthread_t) return Address is\n+      pragma Warnings (Off, thread);\n+\n+   begin\n+      return Null_Address;\n+   end Get_Stack_Base;\n+\n+   ------------------\n+   -- pthread_init --\n+   ------------------\n+\n+   procedure pthread_init is\n+   begin\n+      null;\n+   end pthread_init;\n+\n+   --------------------------------------\n+   -- pthread_mutexattr_setprioceiling --\n+   --------------------------------------\n+\n+   function pthread_mutexattr_setprioceiling\n+     (attr     : access pthread_mutexattr_t;\n+      prioceiling : int) return int is\n+      pragma Unreferenced (attr, prioceiling);\n+   begin\n+      return 0;\n+   end pthread_mutexattr_setprioceiling;\n+\n+   --------------------------------------\n+   -- pthread_mutexattr_getprioceiling --\n+   --------------------------------------\n+\n+   function pthread_mutexattr_getprioceiling\n+     (attr     : access pthread_mutexattr_t;\n+      prioceiling : access int) return int is\n+      pragma Unreferenced (attr, prioceiling);\n+   begin\n+      return 0;\n+   end pthread_mutexattr_getprioceiling;\n+\n+   ---------------------------\n+   -- pthread_setschedparam --\n+   ---------------------------\n+\n+   function pthread_setschedparam\n+     (thread : pthread_t;\n+      policy : int;\n+      param : access struct_sched_param) return int is\n+      pragma Unreferenced (thread, policy, param);\n+   begin\n+      return 0;\n+   end pthread_setschedparam;\n+\n+   -----------------\n+   -- To_Duration --\n+   -----------------\n+\n+   function To_Duration (TS : timespec) return Duration is\n+   begin\n+      return Duration (TS.tv_sec) + Duration (TS.tv_nsec) / 10#1#E9;\n+   end To_Duration;\n+\n+   ------------------------\n+   -- To_Target_Priority --\n+   ------------------------\n+\n+   function To_Target_Priority\n+     (Prio : System.Any_Priority) return Interfaces.C.int\n+   is\n+   begin\n+      return Interfaces.C.int (Prio);\n+   end To_Target_Priority;\n+\n+   -----------------\n+   -- To_Timespec --\n+   -----------------\n+\n+   function To_Timespec (D : Duration) return timespec is\n+      S : time_t;\n+      F : Duration;\n+\n+   begin\n+      S := time_t (Long_Long_Integer (D));\n+      F := D - Duration (S);\n+\n+      --  If F has negative value due to a round-up, adjust for positive F\n+      --  value.\n+\n+      if F < 0.0 then\n+         S := S - 1;\n+         F := F + 1.0;\n+      end if;\n+\n+      return timespec'(tv_sec => S,\n+                       tv_nsec => long (Long_Long_Integer (F * 10#1#E9)));\n+   end To_Timespec;\n+\n+end System.OS_Interface;"}, {"sha": "6cac9b9b88005ac29a173eb1960ec6d959337b06", "filename": "gcc/ada/s-osinte-gnu.ads", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ee806d8d759be9c7326ce55b472f326089b47f0/gcc%2Fada%2Fs-osinte-gnu.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ee806d8d759be9c7326ce55b472f326089b47f0/gcc%2Fada%2Fs-osinte-gnu.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-osinte-gnu.ads?ref=1ee806d8d759be9c7326ce55b472f326089b47f0", "patch": "@@ -344,8 +344,9 @@ package System.OS_Interface is\n    --  returns the stack base of the specified thread. Only call this function\n    --  when Stack_Base_Available is True.\n \n-   --  From: /usr/include/unistd.h __getpagesize or getpagesize??\n-   function Get_Page_Size return int;\n+   --  From: /usr/include/i386-gnu/bits/shm.h __getpagesize or getpagesize??\n+   function Get_Page_Size return size_t;\n+   function Get_Page_Size return Address;\n    pragma Import (C, Get_Page_Size, \"__getpagesize\");\n    --  Returns the size of a page\n \n@@ -498,7 +499,11 @@ package System.OS_Interface is\n    PTHREAD_PRIO_PROTECT : constant := 2;\n    PTHREAD_PRIO_INHERIT : constant := 1;\n \n+   --  GNU/Hurd does not support Thread Priority Protection or Thread\n+   --  Priority Inheritance and lacks some pthread_mutexattr_* functions.\n+   --  Replace them with dummy versions.\n    --  From: /usr/include/pthread/pthread.h\n+\n    function pthread_mutexattr_setprotocol\n      (attr     : access pthread_mutexattr_t;\n       protocol : int) return int;\n@@ -514,14 +519,10 @@ package System.OS_Interface is\n    function pthread_mutexattr_setprioceiling\n      (attr     : access pthread_mutexattr_t;\n       prioceiling : int) return int;\n-   pragma Import (C, pthread_mutexattr_setprioceiling,\n-     \"pthread_mutexattr_setprioceiling\");\n \n    function pthread_mutexattr_getprioceiling\n      (attr     : access pthread_mutexattr_t;\n       prioceiling : access int) return int;\n-   pragma Import (C, pthread_mutexattr_getprioceiling,\n-     \"pthread_mutexattr_getprioceiling\");\n \n    type struct_sched_param is record\n       sched_priority : int;  --  scheduling priority\n@@ -532,7 +533,6 @@ package System.OS_Interface is\n      (thread : pthread_t;\n       policy : int;\n       param  : access struct_sched_param) return int;\n-   pragma Import (C, pthread_setschedparam, \"pthread_setschedparam\");\n \n    function pthread_attr_setscope\n      (attr            : access pthread_attr_t;"}]}