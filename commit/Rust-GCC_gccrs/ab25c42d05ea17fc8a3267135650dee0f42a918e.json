{"sha": "ab25c42d05ea17fc8a3267135650dee0f42a918e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWIyNWM0MmQwNWVhMTdmYzhhMzI2NzEzNTY1MGRlZTBmNDJhOTE4ZQ==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2018-12-03T20:25:11Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2018-12-03T20:25:11Z"}, "message": "cmd/go: allow buildmode c-archive for gccgo on ppc64\n    \n    In buildmodeinit, the c-archive buildmode is flagged as invalid\n    on linux/ppc64 for gccgo when it should be valid. This happens\n    because the check against the gccgo flag is done after the checks\n    for valid GOOS/GOARCH pairs instead of before as is done for all\n    other buildmode cases in this switch. This corrects the problem and\n    allows several of the gccgo gotools testcases to pass on linux/ppc64.\n    \n    Updates #29046\n    \n    Reviewed-on: https://go-review.googlesource.com/c/152137\n\nFrom-SVN: r266764", "tree": {"sha": "187ef807591432ad9384483cad84243f6d9de617", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/187ef807591432ad9384483cad84243f6d9de617"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ab25c42d05ea17fc8a3267135650dee0f42a918e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ab25c42d05ea17fc8a3267135650dee0f42a918e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ab25c42d05ea17fc8a3267135650dee0f42a918e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ab25c42d05ea17fc8a3267135650dee0f42a918e/comments", "author": null, "committer": null, "parents": [{"sha": "d89057777e7468b3089afdb64a534e38d1a13680", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d89057777e7468b3089afdb64a534e38d1a13680", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d89057777e7468b3089afdb64a534e38d1a13680"}], "stats": {"total": 33, "additions": 17, "deletions": 16}, "files": [{"sha": "07381f423b21b16f01cc9078975812939cba3f89", "filename": "gcc/go/gofrontend/MERGE", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab25c42d05ea17fc8a3267135650dee0f42a918e/gcc%2Fgo%2Fgofrontend%2FMERGE", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab25c42d05ea17fc8a3267135650dee0f42a918e/gcc%2Fgo%2Fgofrontend%2FMERGE", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2FMERGE?ref=ab25c42d05ea17fc8a3267135650dee0f42a918e", "patch": "@@ -1,4 +1,4 @@\n-a8f768d68760768da5e86a8e63ef1ad5691c3ae8\n+9e016dfe198152f870005ac844fe22c02e5349e3\n \n The first line of this file holds the git revision number of the last\n merge done from the gofrontend repository."}, {"sha": "56f1ff229cb120597de61d870c280dd33059a7e1", "filename": "libgo/go/cmd/go/internal/work/init.go", "status": "modified", "additions": 16, "deletions": 15, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab25c42d05ea17fc8a3267135650dee0f42a918e/libgo%2Fgo%2Fcmd%2Fgo%2Finternal%2Fwork%2Finit.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab25c42d05ea17fc8a3267135650dee0f42a918e/libgo%2Fgo%2Fcmd%2Fgo%2Finternal%2Fwork%2Finit.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fcmd%2Fgo%2Finternal%2Fwork%2Finit.go?ref=ab25c42d05ea17fc8a3267135650dee0f42a918e", "patch": "@@ -85,23 +85,24 @@ func buildModeInit() {\n \t\tpkgsFilter = pkgsNotMain\n \tcase \"c-archive\":\n \t\tpkgsFilter = oneMainPkg\n-\t\tswitch platform {\n-\t\tcase \"darwin/arm\", \"darwin/arm64\":\n-\t\t\tcodegenArg = \"-shared\"\n-\t\tdefault:\n-\t\t\tswitch cfg.Goos {\n-\t\t\tcase \"dragonfly\", \"freebsd\", \"linux\", \"netbsd\", \"openbsd\", \"solaris\":\n-\t\t\t\tif platform == \"linux/ppc64\" {\n-\t\t\t\t\tbase.Fatalf(\"-buildmode=c-archive not supported on %s\\n\", platform)\n-\t\t\t\t}\n-\t\t\t\t// Use -shared so that the result is\n-\t\t\t\t// suitable for inclusion in a PIE or\n-\t\t\t\t// shared library.\n-\t\t\t\tcodegenArg = \"-shared\"\n-\t\t\t}\n-\t\t}\n \t\tif gccgo {\n \t\t\tcodegenArg = \"-fPIC\"\n+\t\t} else {\n+\t\t\tswitch platform {\n+\t\t\tcase \"darwin/arm\", \"darwin/arm64\":\n+\t\t\t\tcodegenArg = \"-shared\"\n+\t\t\tdefault:\n+\t\t\t\tswitch cfg.Goos {\n+\t\t\t\tcase \"dragonfly\", \"freebsd\", \"linux\", \"netbsd\", \"openbsd\", \"solaris\":\n+\t\t\t\t\tif platform == \"linux/ppc64\" {\n+\t\t\t\t\t\tbase.Fatalf(\"-buildmode=c-archive not supported on %s\\n\", platform)\n+\t\t\t\t\t}\n+\t\t\t\t\t// Use -shared so that the result is\n+\t\t\t\t\t// suitable for inclusion in a PIE or\n+\t\t\t\t\t// shared library.\n+\t\t\t\t\tcodegenArg = \"-shared\"\n+\t\t\t\t}\n+\t\t\t}\n \t\t}\n \t\tcfg.ExeSuffix = \".a\"\n \t\tldBuildmode = \"c-archive\""}]}