{"sha": "5f809982e8e05c39029431363e08759d6c750f0e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWY4MDk5ODJlOGUwNWMzOTAyOTQzMTM2M2UwODc1OWQ2Yzc1MGYwZQ==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@acm.org", "date": "2020-07-14T15:19:36Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@acm.org", "date": "2020-07-14T15:20:38Z"}, "message": "c++: tree dumper\n\nA couple of C++ nodes were unknown to the tree dumper.\n\n\tgcc/cp/\n\t* ptree.c (cxx_print_type): Add TYPEOF_TYPE and BASES.", "tree": {"sha": "a7f146120e3a26bbac587e7c9228c37313b8e861", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a7f146120e3a26bbac587e7c9228c37313b8e861"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5f809982e8e05c39029431363e08759d6c750f0e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5f809982e8e05c39029431363e08759d6c750f0e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5f809982e8e05c39029431363e08759d6c750f0e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5f809982e8e05c39029431363e08759d6c750f0e/comments", "author": {"login": "urnathan", "id": 13103001, "node_id": "MDQ6VXNlcjEzMTAzMDAx", "avatar_url": "https://avatars.githubusercontent.com/u/13103001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/urnathan", "html_url": "https://github.com/urnathan", "followers_url": "https://api.github.com/users/urnathan/followers", "following_url": "https://api.github.com/users/urnathan/following{/other_user}", "gists_url": "https://api.github.com/users/urnathan/gists{/gist_id}", "starred_url": "https://api.github.com/users/urnathan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/urnathan/subscriptions", "organizations_url": "https://api.github.com/users/urnathan/orgs", "repos_url": "https://api.github.com/users/urnathan/repos", "events_url": "https://api.github.com/users/urnathan/events{/privacy}", "received_events_url": "https://api.github.com/users/urnathan/received_events", "type": "User", "site_admin": false}, "committer": {"login": "urnathan", "id": 13103001, "node_id": "MDQ6VXNlcjEzMTAzMDAx", "avatar_url": "https://avatars.githubusercontent.com/u/13103001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/urnathan", "html_url": "https://github.com/urnathan", "followers_url": "https://api.github.com/users/urnathan/followers", "following_url": "https://api.github.com/users/urnathan/following{/other_user}", "gists_url": "https://api.github.com/users/urnathan/gists{/gist_id}", "starred_url": "https://api.github.com/users/urnathan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/urnathan/subscriptions", "organizations_url": "https://api.github.com/users/urnathan/orgs", "repos_url": "https://api.github.com/users/urnathan/repos", "events_url": "https://api.github.com/users/urnathan/events{/privacy}", "received_events_url": "https://api.github.com/users/urnathan/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4d4a0aa42322c84b472c299f4e33c0044650cc2e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4d4a0aa42322c84b472c299f4e33c0044650cc2e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4d4a0aa42322c84b472c299f4e33c0044650cc2e"}], "stats": {"total": 10, "additions": 10, "deletions": 0}, "files": [{"sha": "224cf14edb5afe58e87a25a4a665acefc47e0910", "filename": "gcc/cp/ptree.c", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f809982e8e05c39029431363e08759d6c750f0e/gcc%2Fcp%2Fptree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f809982e8e05c39029431363e08759d6c750f0e/gcc%2Fcp%2Fptree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fptree.c?ref=5f809982e8e05c39029431363e08759d6c750f0e", "patch": "@@ -106,6 +106,16 @@ cxx_print_type (FILE *file, tree node, int indent)\n \t\t  indent + 4);\n       return;\n \n+    case TYPEOF_TYPE:\n+      print_node (file, \"expr\", TYPEOF_TYPE_EXPR (node), indent + 4);\n+      return;\n+\n+    case BASES:\n+      if (BASES_DIRECT (node))\n+\tfputs (\" direct\", file);\n+      print_node (file, \"type\", BASES_TYPE (node), indent + 4);\n+      return;\n+\n     case TYPE_PACK_EXPANSION:\n       print_node (file, \"args\", PACK_EXPANSION_EXTRA_ARGS (node), indent + 4);\n       return;"}]}