{"sha": "a494ed43ab2c384d58b403e38be9109ad2978de1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTQ5NGVkNDNhYjJjMzg0ZDU4YjQwM2UzOGJlOTEwOWFkMjk3OGRlMQ==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@libertysurf.fr", "date": "2004-10-18T22:06:36Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2004-10-18T22:06:36Z"}, "message": "re PR middle-end/17813 (ada bootstrap failure on i486-linux)\n\n\tPR middle-end/17813\n\t* dojump.c (discard_pending_stack_adjust): New function.\n\t(clear_pending_stack_adjust): Call it.\n\t* expr.h (discard_pending_stack_adjust): Declare it.\n\t* explow.c (emit_stack_save): Emit pending stack adjustments\n\tbefore saving the stack pointer.\n\t(emit_stack_restore): Discard pending stack adjustments before\n\trestoring the stack pointer.\n\nCo-Authored-By: Roger Sayle <roger@eyesopen.com>\n\nFrom-SVN: r89251", "tree": {"sha": "fbc2c77e2ddf6b70e1a93ba6afc611f8b36b9730", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fbc2c77e2ddf6b70e1a93ba6afc611f8b36b9730"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a494ed43ab2c384d58b403e38be9109ad2978de1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a494ed43ab2c384d58b403e38be9109ad2978de1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a494ed43ab2c384d58b403e38be9109ad2978de1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a494ed43ab2c384d58b403e38be9109ad2978de1/comments", "author": {"login": "ebotcazou", "id": 48091907, "node_id": "MDQ6VXNlcjQ4MDkxOTA3", "avatar_url": "https://avatars.githubusercontent.com/u/48091907?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ebotcazou", "html_url": "https://github.com/ebotcazou", "followers_url": "https://api.github.com/users/ebotcazou/followers", "following_url": "https://api.github.com/users/ebotcazou/following{/other_user}", "gists_url": "https://api.github.com/users/ebotcazou/gists{/gist_id}", "starred_url": "https://api.github.com/users/ebotcazou/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ebotcazou/subscriptions", "organizations_url": "https://api.github.com/users/ebotcazou/orgs", "repos_url": "https://api.github.com/users/ebotcazou/repos", "events_url": "https://api.github.com/users/ebotcazou/events{/privacy}", "received_events_url": "https://api.github.com/users/ebotcazou/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "829acd784a11c16452dddf656ae2f63c5670bf7d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/829acd784a11c16452dddf656ae2f63c5670bf7d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/829acd784a11c16452dddf656ae2f63c5670bf7d"}], "stats": {"total": 33, "additions": 29, "deletions": 4}, "files": [{"sha": "d767472eedb67ddbbab77c7ab4a026cd75f953c2", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a494ed43ab2c384d58b403e38be9109ad2978de1/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a494ed43ab2c384d58b403e38be9109ad2978de1/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a494ed43ab2c384d58b403e38be9109ad2978de1", "patch": "@@ -1,3 +1,15 @@\n+2004-10-18  Eric Botcazou  <ebotcazou@libertysurf.fr>\n+            Roger Sayle  <roger@eyesopen.com>\n+\n+\tPR middle-end/17813\n+\t* dojump.c (discard_pending_stack_adjust): New function.\n+\t(clear_pending_stack_adjust): Call it.\n+\t* expr.h (discard_pending_stack_adjust): Declare it.\n+\t* explow.c (emit_stack_save): Emit pending stack adjustments\n+\tbefore saving the stack pointer.\n+\t(emit_stack_restore): Discard pending stack adjustments before\n+\trestoring the stack pointer.\n+\n 2004-10-18  Richard Henderson  <rth@redhat.com>\n \n \t* c-common.c (handle_mode_attribute): Allow scalar->vector "}, {"sha": "e506684f41d7b634e6044317a6d3951be4948f9d", "filename": "gcc/dojump.c", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a494ed43ab2c384d58b403e38be9109ad2978de1/gcc%2Fdojump.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a494ed43ab2c384d58b403e38be9109ad2978de1/gcc%2Fdojump.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdojump.c?ref=a494ed43ab2c384d58b403e38be9109ad2978de1", "patch": "@@ -50,6 +50,15 @@ init_pending_stack_adjust (void)\n   pending_stack_adjust = 0;\n }\n \n+/* Discard any pending stack adjustment.  This avoid relying on the\n+   RTL optimizers to remove useless adjustments when we know the\n+   stack pointer value is dead.  */\n+void discard_pending_stack_adjust (void)\n+{\n+  stack_pointer_delta -= pending_stack_adjust;\n+  pending_stack_adjust = 0;\n+}\n+\n /* When exiting from function, if safe, clear out any pending stack adjust\n    so the adjustment won't get done.\n \n@@ -64,10 +73,7 @@ clear_pending_stack_adjust (void)\n       && EXIT_IGNORE_STACK\n       && ! (DECL_INLINE (current_function_decl) && ! flag_no_inline)\n       && ! flag_inline_functions)\n-    {\n-      stack_pointer_delta -= pending_stack_adjust,\n-      pending_stack_adjust = 0;\n-    }\n+    discard_pending_stack_adjust ();\n }\n \n /* Pop any previously-pushed arguments that have not been popped yet.  */"}, {"sha": "45126f6c420c1da324cd46edc8416b6befe4ba27", "filename": "gcc/explow.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a494ed43ab2c384d58b403e38be9109ad2978de1/gcc%2Fexplow.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a494ed43ab2c384d58b403e38be9109ad2978de1/gcc%2Fexplow.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexplow.c?ref=a494ed43ab2c384d58b403e38be9109ad2978de1", "patch": "@@ -965,6 +965,7 @@ emit_stack_save (enum save_level save_level, rtx *psave, rtx after)\n       rtx seq;\n \n       start_sequence ();\n+      do_pending_stack_adjust ();\n       /* We must validize inside the sequence, to ensure that any instructions\n \t created by the validize call also get moved to the right place.  */\n       if (sa != 0)\n@@ -976,6 +977,7 @@ emit_stack_save (enum save_level save_level, rtx *psave, rtx after)\n     }\n   else\n     {\n+      do_pending_stack_adjust ();\n       if (sa != 0)\n \tsa = validize_mem (sa);\n       emit_insn (fcn (sa, stack_pointer_rtx));\n@@ -1032,6 +1034,8 @@ emit_stack_restore (enum save_level save_level, rtx sa, rtx after)\n \t\t    gen_rtx_MEM (BLKmode, stack_pointer_rtx)));\n     }\n \n+  discard_pending_stack_adjust ();\n+\n   if (after)\n     {\n       rtx seq;"}, {"sha": "dc66239f2403f9ca8fd91084b8e46b4cac117331", "filename": "gcc/expr.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a494ed43ab2c384d58b403e38be9109ad2978de1/gcc%2Fexpr.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a494ed43ab2c384d58b403e38be9109ad2978de1/gcc%2Fexpr.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.h?ref=a494ed43ab2c384d58b403e38be9109ad2978de1", "patch": "@@ -499,6 +499,9 @@ extern void expand_var (tree);\n    arguments waiting to be popped.  */\n extern void init_pending_stack_adjust (void);\n \n+/* Discard any pending stack adjustment.  */\n+extern void discard_pending_stack_adjust (void);\n+\n /* When exiting from function, if safe, clear out any pending stack adjust\n    so the adjustment won't get done.  */\n extern void clear_pending_stack_adjust (void);"}]}