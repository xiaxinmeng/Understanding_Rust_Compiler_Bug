{"sha": "a6b3db3e8625a3cba1240f0b5e1a29bd6c68b8ca", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTZiM2RiM2U4NjI1YTNjYmExMjQwZjBiNWUxYTI5YmQ2YzY4YjhjYQ==", "commit": {"author": {"name": "Patrick Palka", "email": "ppalka@redhat.com", "date": "2021-08-18T12:37:42Z"}, "committer": {"name": "Patrick Palka", "email": "ppalka@redhat.com", "date": "2021-08-18T12:37:42Z"}, "message": "c++: ignore explicit dguides during NTTP CTAD [PR101883]\n\nSince (template) argument passing is a copy-initialization context,\nwe mustn't consider explicit deduction guides when deducing a CTAD\nplaceholder type of an NTTP.\n\n\tPR c++/101883\n\ngcc/cp/ChangeLog:\n\n\t* pt.c (convert_template_argument): Pass LOOKUP_IMPLICIT to\n\tdo_auto_deduction.\n\ngcc/testsuite/ChangeLog:\n\n\t* g++.dg/cpp2a/nontype-class49.C: New test.", "tree": {"sha": "2a1372b13a22a9315890a6cb9d2aabc56f2e9a0c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2a1372b13a22a9315890a6cb9d2aabc56f2e9a0c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a6b3db3e8625a3cba1240f0b5e1a29bd6c68b8ca", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a6b3db3e8625a3cba1240f0b5e1a29bd6c68b8ca", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a6b3db3e8625a3cba1240f0b5e1a29bd6c68b8ca", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a6b3db3e8625a3cba1240f0b5e1a29bd6c68b8ca/comments", "author": null, "committer": null, "parents": [{"sha": "88ef1a14bb4ba2bb9e6742bb5ed29d83b30723d0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/88ef1a14bb4ba2bb9e6742bb5ed29d83b30723d0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/88ef1a14bb4ba2bb9e6742bb5ed29d83b30723d0"}], "stats": {"total": 11, "additions": 10, "deletions": 1}, "files": [{"sha": "0c1496693e21eaacf5b31c50254878872d95db32", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6b3db3e8625a3cba1240f0b5e1a29bd6c68b8ca/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6b3db3e8625a3cba1240f0b5e1a29bd6c68b8ca/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=a6b3db3e8625a3cba1240f0b5e1a29bd6c68b8ca", "patch": "@@ -8486,7 +8486,8 @@ convert_template_argument (tree parm,\n \t   can happen in the context of -fnew-ttp-matching.  */;\n       else if (tree a = type_uses_auto (t))\n \t{\n-\t  t = do_auto_deduction (t, arg, a, complain, adc_unify, args);\n+\t  t = do_auto_deduction (t, arg, a, complain, adc_unify, args,\n+\t\t\t\t LOOKUP_IMPLICIT);\n \t  if (t == error_mark_node)\n \t    return error_mark_node;\n \t}"}, {"sha": "c83e4075ed070f12845cf76734dc6233b22f27e1", "filename": "gcc/testsuite/g++.dg/cpp2a/nontype-class49.C", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6b3db3e8625a3cba1240f0b5e1a29bd6c68b8ca/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fnontype-class49.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6b3db3e8625a3cba1240f0b5e1a29bd6c68b8ca/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fnontype-class49.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fnontype-class49.C?ref=a6b3db3e8625a3cba1240f0b5e1a29bd6c68b8ca", "patch": "@@ -0,0 +1,8 @@\n+// PR c++/101883\n+// { dg-do compile { target c++20 } }\n+\n+template<class T> struct C { constexpr C(int) { } };\n+explicit C(int) -> C<int>;\n+\n+template<C c> struct X { };\n+X<1> x; // { dg-error \"deduction|no match\" }"}]}