{"sha": "cd9ba4ca3051a5ca411f9d333f2a4cc170136740", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2Q5YmE0Y2EzMDUxYTVjYTQxMWY5ZDMzM2YyYTRjYzE3MDEzNjc0MA==", "commit": {"author": {"name": "Segher Boessenkool", "email": "segher@kernel.crashing.org", "date": "2018-05-09T12:51:00Z"}, "committer": {"name": "Segher Boessenkool", "email": "segher@gcc.gnu.org", "date": "2018-05-09T12:51:00Z"}, "message": "rs6000: Give an argument to every REG_CFA_REGISTER (PR85645)\n\nThe one for the prologue mflr did not have any value set, which means\nuse the SET that is in the insn pattern.  This works fine, except when\nsome late pass decides to replace the SET_SRC -- this changes the\nmeaning of the REG_CFA_REGISTER!  Such passes should not do these\nthings, but let's be more explicit here, for extra robustness.  It\ncould be argued that this defaulting is a design misfeature (it does\nnot save much space either, etc.)\n\n\n\tPR rtl-optimization/85645\n\t* config/rs6000/rs6000.c (rs6000_emit_prologue_components): Put a SET\n\tin the REG_CFA_REGISTER note for LR, don't leave it empty.\n\nFrom-SVN: r260077", "tree": {"sha": "bd1121bfb8c3e9cff91497b72d52f2269f50df7d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bd1121bfb8c3e9cff91497b72d52f2269f50df7d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cd9ba4ca3051a5ca411f9d333f2a4cc170136740", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cd9ba4ca3051a5ca411f9d333f2a4cc170136740", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cd9ba4ca3051a5ca411f9d333f2a4cc170136740", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cd9ba4ca3051a5ca411f9d333f2a4cc170136740/comments", "author": {"login": "segher", "id": 417629, "node_id": "MDQ6VXNlcjQxNzYyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/417629?v=4", "gravatar_id": "", "url": "https://api.github.com/users/segher", "html_url": "https://github.com/segher", "followers_url": "https://api.github.com/users/segher/followers", "following_url": "https://api.github.com/users/segher/following{/other_user}", "gists_url": "https://api.github.com/users/segher/gists{/gist_id}", "starred_url": "https://api.github.com/users/segher/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/segher/subscriptions", "organizations_url": "https://api.github.com/users/segher/orgs", "repos_url": "https://api.github.com/users/segher/repos", "events_url": "https://api.github.com/users/segher/events{/privacy}", "received_events_url": "https://api.github.com/users/segher/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "826f35d8124731d0f4f5415c84fb59d2b6adf58b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/826f35d8124731d0f4f5415c84fb59d2b6adf58b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/826f35d8124731d0f4f5415c84fb59d2b6adf58b"}], "stats": {"total": 12, "additions": 9, "deletions": 3}, "files": [{"sha": "0acd815b35c8457929282fbd60dbbf0ae0861e0f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd9ba4ca3051a5ca411f9d333f2a4cc170136740/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd9ba4ca3051a5ca411f9d333f2a4cc170136740/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=cd9ba4ca3051a5ca411f9d333f2a4cc170136740", "patch": "@@ -1,3 +1,9 @@\n+2018-05-09  Segher Boessenkool  <segher@kernel.crashing.org>\n+\n+\tPR rtl-optimization/85645\n+\t* config/rs6000/rs6000.c (rs6000_emit_prologue_components): Put a SET\n+\tin the REG_CFA_REGISTER note for LR, don't leave it empty.\n+\n 2018-05-09  Segher Boessenkool  <segher@kernel.crashing.org>\n \n \tPR rtl-optimization/85645"}, {"sha": "19913da9584ad8f508d99677f75ad312fb4bf6c1", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd9ba4ca3051a5ca411f9d333f2a4cc170136740/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd9ba4ca3051a5ca411f9d333f2a4cc170136740/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=cd9ba4ca3051a5ca411f9d333f2a4cc170136740", "patch": "@@ -26151,18 +26151,18 @@ rs6000_emit_prologue_components (sbitmap components)\n   /* Prologue for LR.  */\n   if (bitmap_bit_p (components, 0))\n     {\n+      rtx lr = gen_rtx_REG (reg_mode, LR_REGNO);\n       rtx reg = gen_rtx_REG (reg_mode, 0);\n-      rtx_insn *insn = emit_move_insn (reg, gen_rtx_REG (reg_mode, LR_REGNO));\n+      rtx_insn *insn = emit_move_insn (reg, lr);\n       RTX_FRAME_RELATED_P (insn) = 1;\n-      add_reg_note (insn, REG_CFA_REGISTER, NULL);\n+      add_reg_note (insn, REG_CFA_REGISTER, gen_rtx_SET (reg, lr));\n \n       int offset = info->lr_save_offset;\n       if (info->push_p)\n \toffset += info->total_size;\n \n       insn = emit_insn (gen_frame_store (reg, ptr_reg, offset));\n       RTX_FRAME_RELATED_P (insn) = 1;\n-      rtx lr = gen_rtx_REG (reg_mode, LR_REGNO);\n       rtx mem = copy_rtx (SET_DEST (single_set (insn)));\n       add_reg_note (insn, REG_CFA_OFFSET, gen_rtx_SET (mem, lr));\n     }"}]}