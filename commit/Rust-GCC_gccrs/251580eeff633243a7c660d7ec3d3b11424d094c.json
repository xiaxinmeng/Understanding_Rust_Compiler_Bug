{"sha": "251580eeff633243a7c660d7ec3d3b11424d094c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjUxNTgwZWVmZjYzMzI0M2E3YzY2MGQ3ZWMzZDNiMTE0MjRkMDk0Yw==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-05-22T21:37:40Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-05-22T21:37:40Z"}, "message": "(g++, g++-cross, cc1plus, DEMANGLER_PROG):\n\nUse $@ instead of output name so works even if have .exe.\n(cxxmain.o): Use cp if ln -s fails.\n(c++.install-man): Use $(exeext) in executable names.\n(c++.mostlyclean, stage[1-4]): Use $(objext) in object file names.\n\nFrom-SVN: r9767", "tree": {"sha": "39e9c00f90240f256d1024e64c6b8673ab732aa7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/39e9c00f90240f256d1024e64c6b8673ab732aa7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/251580eeff633243a7c660d7ec3d3b11424d094c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/251580eeff633243a7c660d7ec3d3b11424d094c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/251580eeff633243a7c660d7ec3d3b11424d094c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/251580eeff633243a7c660d7ec3d3b11424d094c/comments", "author": null, "committer": null, "parents": [{"sha": "f70165f69f33b7ae30f8dfba293475f622862f1e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f70165f69f33b7ae30f8dfba293475f622862f1e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f70165f69f33b7ae30f8dfba293475f622862f1e"}], "stats": {"total": 23, "additions": 12, "deletions": 11}, "files": [{"sha": "031966e97b3035188dedf676986c31151bea6d58", "filename": "gcc/cp/Make-lang.in", "status": "modified", "additions": 12, "deletions": 11, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/251580eeff633243a7c660d7ec3d3b11424d094c/gcc%2Fcp%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/251580eeff633243a7c660d7ec3d3b11424d094c/gcc%2Fcp%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FMake-lang.in?ref=251580eeff633243a7c660d7ec3d3b11424d094c", "patch": "@@ -63,22 +63,23 @@ C++ c++: cc1plus\n \n # Create the compiler driver for g++.\n g++: $(srcdir)/cp/g++.c $(CONFIG_H) $(LIBDEPS)\n-\t$(CC) $(ALL_CFLAGS) $(INCLUDES) $(LDFLAGS) -o g++ $(srcdir)/cp/g++.c $(LIBS)\n+\t$(CC) $(ALL_CFLAGS) $(INCLUDES) $(LDFLAGS) -o $@ $(srcdir)/cp/g++.c $(LIBS)\n \n # Create a version of the g++ driver which calls the cross-compiler.\n g++-cross: $(srcdir)/cp/g++.c version.o $(LIBDEPS)\n-\t$(CC) $(ALL_CFLAGS) $(INCLUDES) $(LDFLAGS) -o g++-cross \\\n+\t$(CC) $(ALL_CFLAGS) $(INCLUDES) $(LDFLAGS) -o $@ \\\n \t   -DGCC_NAME=\\\"$(GCC_CROSS_NAME)\\\" $(srcdir)/cp/g++.c version.o $(LIBS)\n \n cxxmain.o: cplus-dem.c demangle.h\n \trm -f cxxmain.c\n-\tln -s $(srcdir)/cplus-dem.c cxxmain.c\n+\tln -s $(srcdir)/cplus-dem.c cxxmain.c > /dev/null 2>&1 \\\n+\t || cp $(srcdir)/cplus-dem.c cxxmain.c\n \t$(CC) -c -DMAIN $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) \\\n \t  -DVERSION='\"$(version)\"' cxxmain.c\n \trm -f cxxmain.c\n \n $(DEMANGLER_PROG): cxxmain.o underscore.o getopt.o getopt1.o\n-\t$(CC) $(ALL_CFLAGS) $(LDFLAGS) -o $(DEMANGLER_PROG) \\\n+\t$(CC) $(ALL_CFLAGS) $(LDFLAGS) -o $@ \\\n \t  cxxmain.o underscore.o getopt.o getopt1.o\n \n CXX_SRCS = $(srcdir)/cp/call.c $(srcdir)/cp/decl2.c \\\n@@ -92,7 +93,7 @@ CXX_SRCS = $(srcdir)/cp/call.c $(srcdir)/cp/decl2.c \\\n  $(srcdir)/cp/sig.c $(srcdir)/cp/typeck2.c $(srcdir)/cp/repo.c\n \n cc1plus: $(P) $(CXX_SRCS) $(LIBDEPS) stamp-objlist c-common.o c-pragma.o\n-\tcd cp; $(MAKE) $(FLAGS_TO_PASS) $(CXX_FLAGS_TO_PASS) ../cc1plus\n+\tcd cp; $(MAKE) $(FLAGS_TO_PASS) $(CXX_FLAGS_TO_PASS) ../cc1plus$(exeext)\n \f\n # Build hooks:\n \n@@ -137,7 +138,7 @@ c++.install-info:\n \n c++.install-man: $(srcdir)/cp/g++.1\n \t-if [ -f cc1plus$(exeext) ] ; then \\\n-\t  if [ -f g++-cross ] ; then \\\n+\t  if [ -f g++-cross$(exeext) ] ; then \\\n \t    rm -f $(mandir)/$(GXX_CROSS_NAME)$(manext); \\\n \t    $(INSTALL_DATA) $(srcdir)/cp/g++.1 $(mandir)/$(GXX_CROSS_NAME)$(manext); \\\n \t    chmod a-x $(mandir)/$(GXX_CROSS_NAME)$(manext); \\\n@@ -161,7 +162,7 @@ c++.uninstall:\n # We just have to delete files specific to us.\n \n c++.mostlyclean:\n-\t-rm -f cp/*.o\n+\t-rm -f cp/*$(objext)\n c++.clean:\n c++.distclean:\n \t-rm -f cp/config.status cp/Makefile\n@@ -174,13 +175,13 @@ c++.maintainer-clean:\n # The main makefile has already created stage?/cp.\n \n c++.stage1:\n-\t-mv cp/*.o stage1/cp\n+\t-mv cp/*$(objext) stage1/cp\n c++.stage2:\n-\t-mv cp/*.o stage2/cp\n+\t-mv cp/*$(objext) stage2/cp\n c++.stage3:\n-\t-mv cp/*.o stage3/cp\n+\t-mv cp/*$(objext) stage3/cp\n c++.stage4:\n-\t-mv cp/*.o stage4/cp\n+\t-mv cp/*$(objext) stage4/cp\n \f\n # Maintenance hooks:\n "}]}