{"sha": "88636b62bc7fae0ef7eaac6a22e5cd8107e69be8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODg2MzZiNjJiYzdmYWUwZWY3ZWFhYzZhMjJlNWNkODEwN2U2OWJlOA==", "commit": {"author": {"name": "Jan Hubicka", "email": "hubicka@ucw.cz", "date": "2015-12-04T18:02:26Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2015-12-04T18:02:26Z"}, "message": "* ipa-inline.c (can_inline_edge_p) Use merged_comdat.\n\n\t* cgraphclones.c (cgraph_node::create_clone): Use merged_comdat.\n\t* cgraph.c (cgraph_node::dump): Dump merged_comdat.\n\t* ipa-icf.c (sem_function::merge): Drop merged_comdat when merging\n\tcomdat and non-comdat.\n\t* cgraph.h (cgraph_node): Rename merged to merged_comdat.\n\t* ipa-inline-analysis.c (simple_edge_hints): Check both merged_comdat\n\tand icf_merged.\n\n\t* lto-symtab.c (lto_cgraph_replace_node): Update code computing\n\tmerged_comdat.\n\nFrom-SVN: r231291", "tree": {"sha": "1f9f6f9c155b3d1c4819fc258a6fabfc90f13049", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1f9f6f9c155b3d1c4819fc258a6fabfc90f13049"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/88636b62bc7fae0ef7eaac6a22e5cd8107e69be8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/88636b62bc7fae0ef7eaac6a22e5cd8107e69be8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/88636b62bc7fae0ef7eaac6a22e5cd8107e69be8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/88636b62bc7fae0ef7eaac6a22e5cd8107e69be8/comments", "author": null, "committer": null, "parents": [{"sha": "c5404f1c2fc79761392acf49af2c46079d907756", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c5404f1c2fc79761392acf49af2c46079d907756", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c5404f1c2fc79761392acf49af2c46079d907756"}], "stats": {"total": 44, "additions": 34, "deletions": 10}, "files": [{"sha": "8b90447f1059a2c735351e47321f14505aa010f6", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88636b62bc7fae0ef7eaac6a22e5cd8107e69be8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88636b62bc7fae0ef7eaac6a22e5cd8107e69be8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=88636b62bc7fae0ef7eaac6a22e5cd8107e69be8", "patch": "@@ -1,3 +1,14 @@\n+2015-12-04  Jan Hubicka  <hubicka@ucw.cz>\n+\n+\t* ipa-inline.c (can_inline_edge_p) Use merged_comdat.\n+\t* cgraphclones.c (cgraph_node::create_clone): Use merged_comdat.\n+\t* cgraph.c (cgraph_node::dump): Dump merged_comdat.\n+\t* ipa-icf.c (sem_function::merge): Drop merged_comdat when merging\n+\tcomdat and non-comdat.\n+\t* cgraph.h (cgraph_node): Rename merged to merged_comdat.\n+\t* ipa-inline-analysis.c (simple_edge_hints): Check both merged_comdat\n+\tand icf_merged.\n+\n 2015-12-04  Paolo Bonzini  <bonzini@gnu.org>\n \n \t* c-family/c-common.c (maybe_warn_shift_overflow): Warn on all"}, {"sha": "2a559785bf8355eb24fdda608fd7a4a8da088b71", "filename": "gcc/cgraph.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88636b62bc7fae0ef7eaac6a22e5cd8107e69be8/gcc%2Fcgraph.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88636b62bc7fae0ef7eaac6a22e5cd8107e69be8/gcc%2Fcgraph.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcgraph.c?ref=88636b62bc7fae0ef7eaac6a22e5cd8107e69be8", "patch": "@@ -1994,6 +1994,8 @@ cgraph_node::dump (FILE *f)\n     fprintf (f, \" tm_clone\");\n   if (icf_merged)\n     fprintf (f, \" icf_merged\");\n+  if (merged_comdat)\n+    fprintf (f, \" merged_comdat\");\n   if (nonfreeing_fn)\n     fprintf (f, \" nonfreeing_fn\");\n   if (DECL_STATIC_CONSTRUCTOR (decl))"}, {"sha": "e689fcd09d1a41bf8d44c035f69f0873bb208905", "filename": "gcc/cgraph.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88636b62bc7fae0ef7eaac6a22e5cd8107e69be8/gcc%2Fcgraph.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88636b62bc7fae0ef7eaac6a22e5cd8107e69be8/gcc%2Fcgraph.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcgraph.h?ref=88636b62bc7fae0ef7eaac6a22e5cd8107e69be8", "patch": "@@ -1333,7 +1333,7 @@ struct GTY((tag (\"SYMTAB_FUNCTION\"))) cgraph_node : public symtab_node {\n      accesses trapping.  */\n   unsigned nonfreeing_fn : 1;\n   /* True if there was multiple COMDAT bodies merged by lto-symtab.  */\n-  unsigned merged : 1;\n+  unsigned merged_comdat : 1;\n   /* True if function was created to be executed in parallel.  */\n   unsigned parallelized_function : 1;\n   /* True if function is part split out by ipa-split.  */"}, {"sha": "f8a7d3763f8dc1cb3f6582246e7ad2ffcb203ab7", "filename": "gcc/cgraphclones.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88636b62bc7fae0ef7eaac6a22e5cd8107e69be8/gcc%2Fcgraphclones.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88636b62bc7fae0ef7eaac6a22e5cd8107e69be8/gcc%2Fcgraphclones.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcgraphclones.c?ref=88636b62bc7fae0ef7eaac6a22e5cd8107e69be8", "patch": "@@ -433,7 +433,7 @@ cgraph_node::create_clone (tree new_decl, gcov_type gcov_count, int freq,\n   new_node->tp_first_run = tp_first_run;\n   new_node->tm_clone = tm_clone;\n   new_node->icf_merged = icf_merged;\n-  new_node->merged = merged;\n+  new_node->merged_comdat = merged_comdat;\n \n   new_node->clone.tree_map = NULL;\n   new_node->clone.args_to_skip = args_to_skip;"}, {"sha": "18039ef7afd9062972f73302e2ef5e18cd6cb228", "filename": "gcc/ipa-icf.c", "status": "modified", "additions": 9, "deletions": 4, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88636b62bc7fae0ef7eaac6a22e5cd8107e69be8/gcc%2Fipa-icf.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88636b62bc7fae0ef7eaac6a22e5cd8107e69be8/gcc%2Fipa-icf.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-icf.c?ref=88636b62bc7fae0ef7eaac6a22e5cd8107e69be8", "patch": "@@ -1352,10 +1352,15 @@ sem_function::merge (sem_item *alias_item)\n   gcc_assert (alias->icf_merged || remove || redirect_callers);\n   original->icf_merged = true;\n \n-  /* Inform the inliner about cross-module merging.  */\n-  if ((original->lto_file_data || alias->lto_file_data)\n-      && original->lto_file_data != alias->lto_file_data)\n-    local_original->merged = original->merged = true;\n+  /* We use merged flag to track cases where COMDAT function is known to be\n+     compatible its callers.  If we merged in non-COMDAT, we need to give up\n+     on this optimization.  */\n+  if (original->merged_comdat && !alias->merged_comdat)\n+    {\n+      if (dump_file)\n+\tfprintf (dump_file, \"Dropping merged_comdat flag.\\n\\n\");\n+      local_original->merged_comdat = original->merged_comdat = false;\n+    }\n \n   if (remove)\n     {"}, {"sha": "6392083d6befc68edebd7f3a79bdb16a13b338da", "filename": "gcc/ipa-inline-analysis.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88636b62bc7fae0ef7eaac6a22e5cd8107e69be8/gcc%2Fipa-inline-analysis.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88636b62bc7fae0ef7eaac6a22e5cd8107e69be8/gcc%2Fipa-inline-analysis.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-inline-analysis.c?ref=88636b62bc7fae0ef7eaac6a22e5cd8107e69be8", "patch": "@@ -3708,7 +3708,7 @@ simple_edge_hints (struct cgraph_edge *edge)\n \n   if (callee->lto_file_data && edge->caller->lto_file_data\n       && edge->caller->lto_file_data != callee->lto_file_data\n-      && !callee->merged)\n+      && !callee->merged_comdat && !callee->icf_merged)\n     hints |= INLINE_HINT_cross_module;\n \n   return hints;"}, {"sha": "f2fd84ba66b296b8b4102537db71a45ea95f77f9", "filename": "gcc/ipa-inline.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88636b62bc7fae0ef7eaac6a22e5cd8107e69be8/gcc%2Fipa-inline.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88636b62bc7fae0ef7eaac6a22e5cd8107e69be8/gcc%2Fipa-inline.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-inline.c?ref=88636b62bc7fae0ef7eaac6a22e5cd8107e69be8", "patch": "@@ -466,7 +466,7 @@ can_inline_edge_p (struct cgraph_edge *e, bool report,\n          optimized with the optimization flags of module they are used in.\n \t Also do not care about mixing up size/speed optimization when\n \t DECL_DISREGARD_INLINE_LIMITS is set.  */\n-      else if ((callee->merged\n+      else if ((callee->merged_comdat\n \t        && !lookup_attribute (\"optimize\",\n \t\t\t\t      DECL_ATTRIBUTES (caller->decl)))\n \t       || DECL_DISREGARD_INLINE_LIMITS (callee->decl))"}, {"sha": "df2eaa9483e0617891347f4e3ca08efcf68bb94d", "filename": "gcc/lto/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88636b62bc7fae0ef7eaac6a22e5cd8107e69be8/gcc%2Flto%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88636b62bc7fae0ef7eaac6a22e5cd8107e69be8/gcc%2Flto%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto%2FChangeLog?ref=88636b62bc7fae0ef7eaac6a22e5cd8107e69be8", "patch": "@@ -1,3 +1,8 @@\n+2015-12-04  Jan Hubicka  <hubicka@ucw.cz>\n+\n+\t* lto-symtab.c (lto_cgraph_replace_node): Update code computing\n+\tmerged_comdat.\n+\n 2015-12-01  Jan Hubicka  <hubicka@ucw.cz>\n \n \t* lto.c (compare_tree_sccs_1): Do not compare TYPE_ALIAS_SET."}, {"sha": "e5055b593a8403ff068404446a2a2e1782512e84", "filename": "gcc/lto/lto-symtab.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88636b62bc7fae0ef7eaac6a22e5cd8107e69be8/gcc%2Flto%2Flto-symtab.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88636b62bc7fae0ef7eaac6a22e5cd8107e69be8/gcc%2Flto%2Flto-symtab.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto%2Flto-symtab.c?ref=88636b62bc7fae0ef7eaac6a22e5cd8107e69be8", "patch": "@@ -63,8 +63,9 @@ lto_cgraph_replace_node (struct cgraph_node *node,\n       gcc_assert (!prevailing_node->global.inlined_to);\n       prevailing_node->mark_address_taken ();\n     }\n-  if (node->definition && prevailing_node->definition)\n-    prevailing_node->merged = true;\n+  if (node->definition && prevailing_node->definition\n+      && DECL_COMDAT (node->decl) && DECL_COMDAT (prevailing_node->decl))\n+    prevailing_node->merged_comdat = true;\n \n   /* Redirect all incoming edges.  */\n   compatible_p"}]}