{"sha": "b8c9ec3da0d37a2b29715bb91b847b1e5dc188c5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjhjOWVjM2RhMGQzN2EyYjI5NzE1YmI5MWI4NDdiMWU1ZGMxODhjNQ==", "commit": {"author": {"name": "Hans-Peter Nilsson", "email": "hp@axis.com", "date": "2008-01-06T20:54:14Z"}, "committer": {"name": "Hans-Peter Nilsson", "email": "hp@gcc.gnu.org", "date": "2008-01-06T20:54:14Z"}, "message": "Revert last change.\n\nFrom-SVN: r131363", "tree": {"sha": "d948d4d60a95378f061cf1ff3a21618c0d70ac51", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d948d4d60a95378f061cf1ff3a21618c0d70ac51"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b8c9ec3da0d37a2b29715bb91b847b1e5dc188c5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b8c9ec3da0d37a2b29715bb91b847b1e5dc188c5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b8c9ec3da0d37a2b29715bb91b847b1e5dc188c5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b8c9ec3da0d37a2b29715bb91b847b1e5dc188c5/comments", "author": {"login": "hpataxisdotcom", "id": 80339731, "node_id": "MDQ6VXNlcjgwMzM5NzMx", "avatar_url": "https://avatars.githubusercontent.com/u/80339731?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hpataxisdotcom", "html_url": "https://github.com/hpataxisdotcom", "followers_url": "https://api.github.com/users/hpataxisdotcom/followers", "following_url": "https://api.github.com/users/hpataxisdotcom/following{/other_user}", "gists_url": "https://api.github.com/users/hpataxisdotcom/gists{/gist_id}", "starred_url": "https://api.github.com/users/hpataxisdotcom/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hpataxisdotcom/subscriptions", "organizations_url": "https://api.github.com/users/hpataxisdotcom/orgs", "repos_url": "https://api.github.com/users/hpataxisdotcom/repos", "events_url": "https://api.github.com/users/hpataxisdotcom/events{/privacy}", "received_events_url": "https://api.github.com/users/hpataxisdotcom/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d614540645fd4663db0d18f8754c7a27d3373005", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d614540645fd4663db0d18f8754c7a27d3373005", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d614540645fd4663db0d18f8754c7a27d3373005"}], "stats": {"total": 180, "additions": 9, "deletions": 171}, "files": [{"sha": "79168797a330bf61b00da6e238409fdd2ed65674", "filename": "fixincludes/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b8c9ec3da0d37a2b29715bb91b847b1e5dc188c5/fixincludes%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b8c9ec3da0d37a2b29715bb91b847b1e5dc188c5/fixincludes%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2FChangeLog?ref=b8c9ec3da0d37a2b29715bb91b847b1e5dc188c5", "patch": "@@ -1,3 +1,7 @@\n+2008-01-06  Hans-Peter Nilsson  <hp@axis.com>\n+\n+\tRevert last change.\n+\n 2007-12-18  Hans-Peter Nilsson  <hp@axis.com>\n \n \t* inclhack.def: (glibc_c99_inline_1a, glibc_c99_inline_5): New."}, {"sha": "a0daa2a6a4fcc7f67456c377860ea6db410eb10f", "filename": "fixincludes/fixincl.x", "status": "modified", "additions": 5, "deletions": 100, "changes": 105, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b8c9ec3da0d37a2b29715bb91b847b1e5dc188c5/fixincludes%2Ffixincl.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b8c9ec3da0d37a2b29715bb91b847b1e5dc188c5/fixincludes%2Ffixincl.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2Ffixincl.x?ref=b8c9ec3da0d37a2b29715bb91b847b1e5dc188c5", "patch": "@@ -2,11 +2,11 @@\n  * \n  * DO NOT EDIT THIS FILE   (fixincl.x)\n  * \n- * It has been AutoGen-ed  Tuesday December 18, 2007 at 03:28:19 AM CET\n+ * It has been AutoGen-ed  Sunday October 14, 2007 at 06:17:05 PM EDT\n  * From the definitions    inclhack.def\n  * and the template file   fixincl\n  */\n-/* DO NOT SVN-MERGE THIS FILE, EITHER Tue Dec 18 03:28:19 CET 2007\n+/* DO NOT SVN-MERGE THIS FILE, EITHER Sun Oct 14 18:17:05 EDT 2007\n  *\n  * You must regenerate it.  Use the ./genfixes script.\n  *\n@@ -15,7 +15,7 @@\n  * certain ANSI-incompatible system header files which are fixed to work\n  * correctly with ANSI C and placed in a directory that GNU C will search.\n  *\n- * This file contains 212 fixup descriptions.\n+ * This file contains 210 fixup descriptions.\n  *\n  * See README for more information.\n  *\n@@ -2263,43 +2263,6 @@ static const char* apzGlibc_C99_Inline_1Patch[] = {\n     \"%0 && (defined __extern_inline || defined __GNUC_GNU_INLINE__)\",\n     (char*)NULL };\n \n-/* * * * * * * * * * * * * * * * * * * * * * * * * *\n- *\n- *  Description of Glibc_C99_Inline_1a fix\n- */\n-tSCC zGlibc_C99_Inline_1aName[] =\n-     \"glibc_c99_inline_1a\";\n-\n-/*\n- *  File name selection pattern\n- */\n-tSCC zGlibc_C99_Inline_1aList[] =\n-  \"features.h\\0*/features.h\\0\";\n-/*\n- *  Machine/OS name selection pattern\n- */\n-#define apzGlibc_C99_Inline_1aMachs (const char**)NULL\n-\n-/*\n- *  content selection pattern - do fix if pattern found\n- */\n-tSCC zGlibc_C99_Inline_1aSelect0[] =\n-       \"(\\\\) && defined __OPTIMIZE__ && !defined __OPTIMIZE_SIZE__)\\n\\\n-(#[ \\t]*define[ \\t]*__USE_EXTERN_INLINES[ \\t]*1)\";\n-\n-#define    GLIBC_C99_INLINE_1A_TEST_CT  1\n-static tTestDesc aGlibc_C99_Inline_1aTests[] = {\n-  { TT_EGREP,    zGlibc_C99_Inline_1aSelect0, (regex_t*)NULL }, };\n-\n-/*\n- *  Fix Command Arguments for Glibc_C99_Inline_1a\n- */\n-static const char* apzGlibc_C99_Inline_1aPatch[] = {\n-    \"format\",\n-    \"%1 && (defined __extern_inline || defined __GNUC_GNU_INLINE__)\\n\\\n-%2\",\n-    (char*)NULL };\n-\n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n  *\n  *  Description of Glibc_C99_Inline_2 fix\n@@ -2434,52 +2397,6 @@ extern\\n\\\n     \"(^| )extern \",\n     (char*)NULL };\n \n-/* * * * * * * * * * * * * * * * * * * * * * * * * *\n- *\n- *  Description of Glibc_C99_Inline_5 fix\n- */\n-tSCC zGlibc_C99_Inline_5Name[] =\n-     \"glibc_c99_inline_5\";\n-\n-/*\n- *  File name selection pattern\n- */\n-tSCC zGlibc_C99_Inline_5List[] =\n-  \"wchar.h\\0*/wchar.h\\0\";\n-/*\n- *  Machine/OS name selection pattern\n- */\n-#define apzGlibc_C99_Inline_5Machs (const char**)NULL\n-\n-/*\n- *  content selection pattern - do fix if pattern found\n- */\n-tSCC zGlibc_C99_Inline_5Select0[] =\n-       \"(^| )extern __inline\";\n-\n-/*\n- *  content bypass pattern - skip fix if pattern found\n- */\n-tSCC zGlibc_C99_Inline_5Bypass0[] =\n-       \"__STDC_VERSION__\";\n-\n-#define    GLIBC_C99_INLINE_5_TEST_CT  2\n-static tTestDesc aGlibc_C99_Inline_5Tests[] = {\n-  { TT_NEGREP,   zGlibc_C99_Inline_5Bypass0, (regex_t*)NULL },\n-  { TT_EGREP,    zGlibc_C99_Inline_5Select0, (regex_t*)NULL }, };\n-\n-/*\n- *  Fix Command Arguments for Glibc_C99_Inline_5\n- */\n-static const char* apzGlibc_C99_Inline_5Patch[] = {\n-    \"format\",\n-    \"\\n\\\n-#ifdef __GNUC_GNU_INLINE__\\n\\\n-extern\\n\\\n-#endif\\n\\\n-__inline\",\n-    (char*)NULL };\n-\n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n  *\n  *  Description of Glibc_Mutex_Init fix\n@@ -8622,9 +8539,9 @@ static const char* apzX11_SprintfPatch[] = {\n  *\n  *  List of all fixes\n  */\n-#define REGEX_COUNT          256\n+#define REGEX_COUNT          253\n #define MACH_LIST_SIZE_LIMIT 261\n-#define FIX_COUNT            212\n+#define FIX_COUNT            210\n \n /*\n  *  Enumerate the fixes\n@@ -8682,11 +8599,9 @@ typedef enum {\n     FREEBSD_GCC3_BREAKAGE_FIXIDX,\n     FREEBSD_GCC4_BREAKAGE_FIXIDX,\n     GLIBC_C99_INLINE_1_FIXIDX,\n-    GLIBC_C99_INLINE_1A_FIXIDX,\n     GLIBC_C99_INLINE_2_FIXIDX,\n     GLIBC_C99_INLINE_3_FIXIDX,\n     GLIBC_C99_INLINE_4_FIXIDX,\n-    GLIBC_C99_INLINE_5_FIXIDX,\n     GLIBC_MUTEX_INIT_FIXIDX,\n     GNU_TYPES_FIXIDX,\n     HP_INLINE_FIXIDX,\n@@ -9105,11 +9020,6 @@ tFixDesc fixDescList[ FIX_COUNT ] = {\n      GLIBC_C99_INLINE_1_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n      aGlibc_C99_Inline_1Tests,   apzGlibc_C99_Inline_1Patch, 0 },\n \n-  {  zGlibc_C99_Inline_1aName,    zGlibc_C99_Inline_1aList,\n-     apzGlibc_C99_Inline_1aMachs,\n-     GLIBC_C99_INLINE_1A_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n-     aGlibc_C99_Inline_1aTests,   apzGlibc_C99_Inline_1aPatch, 0 },\n-\n   {  zGlibc_C99_Inline_2Name,    zGlibc_C99_Inline_2List,\n      apzGlibc_C99_Inline_2Machs,\n      GLIBC_C99_INLINE_2_TEST_CT, FD_MACH_ONLY,\n@@ -9125,11 +9035,6 @@ tFixDesc fixDescList[ FIX_COUNT ] = {\n      GLIBC_C99_INLINE_4_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n      aGlibc_C99_Inline_4Tests,   apzGlibc_C99_Inline_4Patch, 0 },\n \n-  {  zGlibc_C99_Inline_5Name,    zGlibc_C99_Inline_5List,\n-     apzGlibc_C99_Inline_5Machs,\n-     GLIBC_C99_INLINE_5_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n-     aGlibc_C99_Inline_5Tests,   apzGlibc_C99_Inline_5Patch, 0 },\n-\n   {  zGlibc_Mutex_InitName,    zGlibc_Mutex_InitList,\n      apzGlibc_Mutex_InitMachs,\n      GLIBC_MUTEX_INIT_TEST_CT, FD_MACH_ONLY,"}, {"sha": "75f83478f21980ccbe2f607e4ca07ca580e52d00", "filename": "fixincludes/inclhack.def", "status": "modified", "additions": 0, "deletions": 33, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b8c9ec3da0d37a2b29715bb91b847b1e5dc188c5/fixincludes%2Finclhack.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b8c9ec3da0d37a2b29715bb91b847b1e5dc188c5/fixincludes%2Finclhack.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2Finclhack.def?ref=b8c9ec3da0d37a2b29715bb91b847b1e5dc188c5", "patch": "@@ -1347,24 +1347,6 @@ EOT;\n };\n \n \n-/*\n- *  Similar, but a version that didn't have __NO_INLINE__\n- */\n-fix = {\n-    hackname  = glibc_c99_inline_1a;\n-    files     = features.h, '*/features.h';\n-    select    = \"(\\\\) && defined __OPTIMIZE__ && !defined __OPTIMIZE_SIZE__)\\n\"\n-\t\t\"(#[ \\t]*define[ \\t]*__USE_EXTERN_INLINES[ \\t]*1)\";\n-    c_fix     = format;\n-    c_fix_arg = \"%1 && (defined __extern_inline || defined __GNUC_GNU_INLINE__)\\n%2\";\n-    test_text = <<-EOT\n-#if __GNUC_PREREQ (2, 7) && defined __OPTIMIZE__ && !defined __OPTIMIZE_SIZE__\n-# define __USE_EXTERN_INLINES\t1\n-#endif\n-EOT;\n-};\n-\n-\n /*\n  * The glibc_c99_inline_1 fix should have fixed everything.  Unfortunately\n  * there are many glibc headers which do not respect __USE_EXTERN_INLINES.\n@@ -1426,21 +1408,6 @@ fix = {\n };\n \n \n-fix = {\n-    hackname  = glibc_c99_inline_5;\n-    files     = wchar.h, '*/wchar.h';\n-    bypass    = \"__STDC_VERSION__\";\n-    select    = \"(^| )extern __inline\";\n-    c_fix     = format;\n-    c_fix_arg = \"\\n#ifdef __GNUC_GNU_INLINE__\\nextern\\n#endif\\n__inline\";\n-    test_text = <<-EOT\n-\t__extension__ extern __inline double\n-\t__extension__ __extern_inline long\n-\textern __inline unsigned int\n-\tEOT;\n-};\n-\n-\n /*  glibc-2.3.5 defines pthread mutex initializers incorrectly,\n  *  so we replace them with versions that correspond to the\n  *  definition."}, {"sha": "93838c71253f2cd35a057d71f9cce28d46bf7577", "filename": "fixincludes/tests/base/features.h", "status": "removed", "additions": 0, "deletions": 23, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d614540645fd4663db0d18f8754c7a27d3373005/fixincludes%2Ftests%2Fbase%2Ffeatures.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d614540645fd4663db0d18f8754c7a27d3373005/fixincludes%2Ftests%2Fbase%2Ffeatures.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2Ftests%2Fbase%2Ffeatures.h?ref=d614540645fd4663db0d18f8754c7a27d3373005", "patch": "@@ -1,23 +0,0 @@\n-/*  DO NOT EDIT THIS FILE.\n-\n-    It has been auto-edited by fixincludes from:\n-\n-\t\"fixinc/tests/inc/features.h\"\n-\n-    This had to be done to correct non-standard usages in the\n-    original, manufacturer supplied header file.  */\n-\n-\n-\n-#if defined( GLIBC_C99_INLINE_1_CHECK )\n-#if __GNUC_PREREQ (2, 7) && defined __OPTIMIZE__     && !defined __OPTIMIZE_SIZE__ && !defined __NO_INLINE__\n-# define __USE_EXTERN_INLINES\t1\n-#endif\n-#endif  /* GLIBC_C99_INLINE_1_CHECK */\n-\n-\n-#if defined( GLIBC_C99_INLINE_1A_CHECK )\n-#if __GNUC_PREREQ (2, 7) && defined __OPTIMIZE__ && !defined __OPTIMIZE_SIZE__ && (defined __extern_inline || defined __GNUC_GNU_INLINE__)\n-# define __USE_EXTERN_INLINES\t1\n-#endif\n-#endif  /* GLIBC_C99_INLINE_1A_CHECK */"}, {"sha": "5c0b9dfe86adc3bdcfa8a2e2cab3928ebc548d53", "filename": "fixincludes/tests/base/wchar.h", "status": "modified", "additions": 0, "deletions": 15, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b8c9ec3da0d37a2b29715bb91b847b1e5dc188c5/fixincludes%2Ftests%2Fbase%2Fwchar.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b8c9ec3da0d37a2b29715bb91b847b1e5dc188c5/fixincludes%2Ftests%2Fbase%2Fwchar.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2Ftests%2Fbase%2Fwchar.h?ref=b8c9ec3da0d37a2b29715bb91b847b1e5dc188c5", "patch": "@@ -13,18 +13,3 @@\n extern wchar_t *wcstok __((wchar_t *, const wchar_t *, wchar_t **)) __asm__(\"wcstok_r\");\n extern size_t   wcsftime __((wchar_t *, size_t, const wchar_t *, const struct tm *)) __asm__(\"__wcsftime_isoc\");\n #endif  /* ALPHA_WCHAR_CHECK */\n-\n-\n-#if defined( GLIBC_C99_INLINE_5_CHECK )\n-__extension__\n-#ifdef __GNUC_GNU_INLINE__\n-extern\n-#endif\n-__inline double\n-__extension__ __extern_inline long\n-\n-#ifdef __GNUC_GNU_INLINE__\n-extern\n-#endif\n-__inline unsigned int\n-#endif  /* GLIBC_C99_INLINE_5_CHECK */"}]}