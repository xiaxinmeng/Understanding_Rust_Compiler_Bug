{"sha": "c9666c0180318a82a3ea58554118cd47da73e403", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Yzk2NjZjMDE4MDMxOGE4MmEzZWE1ODU1NDExOGNkNDdkYTczZTQwMw==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1997-04-13T16:50:58Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1997-04-13T16:50:58Z"}, "message": "(cpp_lex) New arg skip_evaluation.\n\n(cpp_parse_expr): Pass skip_evaluation to cpp_lex.\nAbort if cpp_lex returns NAME.\n(cpp_lex): Optionally warn about undefined identifiers that evaluate to 0.\n\nFrom-SVN: r13880", "tree": {"sha": "8037e1d99ae956e3c158179b4b9047694ea939e4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8037e1d99ae956e3c158179b4b9047694ea939e4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c9666c0180318a82a3ea58554118cd47da73e403", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c9666c0180318a82a3ea58554118cd47da73e403", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c9666c0180318a82a3ea58554118cd47da73e403", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c9666c0180318a82a3ea58554118cd47da73e403/comments", "author": null, "committer": null, "parents": [{"sha": "dfb45725c90e49a7b2f1301b33bbeb21ee6f67a1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dfb45725c90e49a7b2f1301b33bbeb21ee6f67a1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dfb45725c90e49a7b2f1301b33bbeb21ee6f67a1"}], "stats": {"total": 11, "additions": 7, "deletions": 4}, "files": [{"sha": "e4a0dcd5bffa1f88679df2ed9f54430890675e52", "filename": "gcc/cppexp.c", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9666c0180318a82a3ea58554118cd47da73e403/gcc%2Fcppexp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9666c0180318a82a3ea58554118cd47da73e403/gcc%2Fcppexp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcppexp.c?ref=c9666c0180318a82a3ea58554118cd47da73e403", "patch": "@@ -278,8 +278,9 @@ static struct token tokentab2[] = {\n /* Read one token.  */\n \n struct operation\n-cpp_lex (pfile)\n+cpp_lex (pfile, skip_evaluation)\n      cpp_reader *pfile;\n+     int skip_evaluation;\n {\n   register int c;\n   register int namelen;\n@@ -443,6 +444,9 @@ cpp_lex (pfile)\n       return op;\n \n     case CPP_NAME:\n+      if (CPP_WARN_UNDEF (pfile) && !skip_evaluation)\n+\tcpp_warning (pfile, \"`%.*s' is not defined\",\n+\t\t     (int) (tok_end - tok_start), tok_start);\n       return parse_number (pfile, \"0\", 0);\n \n     case CPP_OTHER:\n@@ -684,7 +688,7 @@ cpp_parse_expr (pfile)\n       char flags = 0;\n \n       /* Read a token */\n-      op =  cpp_lex (pfile);\n+      op =  cpp_lex (pfile, skip_evaluation);\n \n       /* See if the token is an operand, in which case go to set_value.\n \t If the token is an operator, figure out its left and right\n@@ -693,8 +697,7 @@ cpp_parse_expr (pfile)\n       switch (op.op)\n \t{\n \tcase NAME:\n-\t  top->value = 0, top->unsignedp = 0;\n-\t  goto set_value;\n+\t  abort ();\n \tcase INT:  case CHAR:\n \t  top->value = op.value;\n \t  top->unsignedp = op.unsignedp;"}]}