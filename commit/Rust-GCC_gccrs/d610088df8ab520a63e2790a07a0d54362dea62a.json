{"sha": "d610088df8ab520a63e2790a07a0d54362dea62a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDYxMDA4OGRmOGFiNTIwYTYzZTI3OTBhMDdhMGQ1NDM2MmRlYTYyYQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2010-01-25T14:53:51Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2010-01-25T14:53:51Z"}, "message": "[multiple changes]\n\n2010-01-25  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_aggr.adb (Resolve_Array_Aggregate): If the bounds in a choice\n\thave errors, do not continue resolution of the aggregate.\n\t* sem_eval.adb (Eval_Indexed_Component): Do not attempt to evaluate if\n\tthe array type indicates an error.\n\n2010-01-25  Bob Duff  <duff@adacore.com>\n\n\t* sinfo.ads: Minor comment fixes.\n\nFrom-SVN: r156212", "tree": {"sha": "1de77ca9c18ddb8c75a172fb11c9bee5551fd74c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1de77ca9c18ddb8c75a172fb11c9bee5551fd74c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d610088df8ab520a63e2790a07a0d54362dea62a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d610088df8ab520a63e2790a07a0d54362dea62a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d610088df8ab520a63e2790a07a0d54362dea62a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d610088df8ab520a63e2790a07a0d54362dea62a/comments", "author": null, "committer": null, "parents": [{"sha": "64425dffa1513abb8f542cd7e51cae8b5e35cd7c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/64425dffa1513abb8f542cd7e51cae8b5e35cd7c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/64425dffa1513abb8f542cd7e51cae8b5e35cd7c"}], "stats": {"total": 43, "additions": 30, "deletions": 13}, "files": [{"sha": "d7fb8cbc7cc8edc1c86e70062f7d00cd3c0cb30c", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d610088df8ab520a63e2790a07a0d54362dea62a/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d610088df8ab520a63e2790a07a0d54362dea62a/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=d610088df8ab520a63e2790a07a0d54362dea62a", "patch": "@@ -1,3 +1,14 @@\n+2010-01-25  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_aggr.adb (Resolve_Array_Aggregate): If the bounds in a choice\n+\thave errors, do not continue resolution of the aggregate.\n+\t* sem_eval.adb (Eval_Indexed_Component): Do not attempt to evaluate if\n+\tthe array type indicates an error.\n+\n+2010-01-25  Bob Duff  <duff@adacore.com>\n+\n+\t* sinfo.ads: Minor comment fixes.\n+\n 2010-01-25  Bob Duff  <duff@adacore.com>\n \n \t* exp_ch4.adb, exp_aggr.adb: Minor comment fixes and code clean up."}, {"sha": "d28389a6180ccc88c65db5a9653a4de0d59c42c8", "filename": "gcc/ada/sem_aggr.adb", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d610088df8ab520a63e2790a07a0d54362dea62a/gcc%2Fada%2Fsem_aggr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d610088df8ab520a63e2790a07a0d54362dea62a/gcc%2Fada%2Fsem_aggr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_aggr.adb?ref=d610088df8ab520a63e2790a07a0d54362dea62a", "patch": "@@ -1936,6 +1936,16 @@ package body Sem_Aggr is\n                     and then Compile_Time_Known_Value (Choices_Low)\n                     and then Compile_Time_Known_Value (Choices_High)\n                   then\n+\n+                     --  If the bounds have semantic errors, do not attempt\n+                     --  further resolution to prevent cascaded errors..\n+\n+                     if Error_Posted (Choices_Low)\n+                       or else Error_Posted (Choices_High)\n+                     then\n+                        return False;\n+                     end if;\n+\n                      declare\n                         ALo : constant Node_Id := Expr_Value_E (Aggr_Low);\n                         AHi : constant Node_Id := Expr_Value_E (Aggr_High);"}, {"sha": "c63a1cc5a8dc7d5f8e2457dd939a3fff94085645", "filename": "gcc/ada/sem_eval.adb", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d610088df8ab520a63e2790a07a0d54362dea62a/gcc%2Fada%2Fsem_eval.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d610088df8ab520a63e2790a07a0d54362dea62a/gcc%2Fada%2Fsem_eval.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_eval.adb?ref=d610088df8ab520a63e2790a07a0d54362dea62a", "patch": "@@ -1915,7 +1915,9 @@ package body Sem_Eval is\n             --  are error cases where this is not the case), then see if we\n             --  can do a constant evaluation of the array reference.\n \n-            if Is_Array_Type (Atyp) then\n+            if Is_Array_Type (Atyp)\n+              and then Atyp /= Any_Composite\n+            then\n                if Ekind (Atyp) = E_String_Literal_Subtype then\n                   Lbd := String_Literal_Low_Bound (Atyp);\n                else"}, {"sha": "7fc555a80ae6b443fb513c8be98deed7269c401c", "filename": "gcc/ada/sinfo.ads", "status": "modified", "additions": 6, "deletions": 12, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d610088df8ab520a63e2790a07a0d54362dea62a/gcc%2Fada%2Fsinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d610088df8ab520a63e2790a07a0d54362dea62a/gcc%2Fada%2Fsinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsinfo.ads?ref=d610088df8ab520a63e2790a07a0d54362dea62a", "patch": "@@ -576,15 +576,9 @@ package Sinfo is\n    --    issues. Used to inhibit multiple redundant messages.\n \n    --  Aggregate_Bounds (Node3-Sem)\n-   --    Present in array N_Aggregate nodes. If the aggregate contains\n-   --    component associations this field points to an N_Range node whose\n-   --    bounds give the lowest and highest discrete choice values. If the\n-   --    named aggregate contains a dynamic or null choice this field is empty.\n-   --    If the aggregate contains positional elements this field points to an\n-   --    N_Integer_Literal node giving the number of positional elements. Note\n-   --    that if the aggregate contains positional elements and an other choice\n-   --    the N_Integer_Literal only accounts for the number of positional\n-   --    elements.\n+   --    Present in array N_Aggregate nodes. If the bounds of the aggregate are\n+   --    known at compile time, this field points to an N_Range node with those\n+   --    bounds. Otherwise Empty.\n \n    --  All_Others (Flag11-Sem)\n    --    Present in an N_Others_Choice node. This flag is set for an others\n@@ -3302,10 +3296,10 @@ package Sinfo is\n       --  are not met, then the front end must translate the aggregate into\n       --  an appropriate set of assignments into a temporary.\n \n-      --  Note: for the record aggregate case, gigi/gcc can handle all cases\n-      --  of record aggregates, including those for packed, and rep-claused\n+      --  Note: for the record aggregate case, gigi/gcc can handle all cases of\n+      --  record aggregates, including those for packed, and rep-claused\n       --  records, and also variant records, providing that there are no\n-      --  variable length fields whose size is not known at runtime, and\n+      --  variable length fields whose size is not known at compile time, and\n       --  providing that the aggregate is presented in fully named form.\n \n       ----------------------------------------------"}]}