{"sha": "03a917017465b056b6ee73e2303b1e194c51fd1b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDNhOTE3MDE3NDY1YjA1NmI2ZWU3M2UyMzAzYjFlMTk0YzUxZmQxYg==", "commit": {"author": {"name": "Paolo Bonzini", "email": "bonzini@gnu.org", "date": "2004-04-24T06:42:54Z"}, "committer": {"name": "Paolo Bonzini", "email": "bonzini@gcc.gnu.org", "date": "2004-04-24T06:42:54Z"}, "message": "Makefile.tpl (all-stage1-gcc, [...]): Always relocate gcc and prev-gcc to the original names, even if the build fails.\n\n2004-04-23  Paolo Bonzini  <bonzini@gnu.org>\n\n\t* Makefile.tpl (all-stage1-gcc, all-stage2-gcc, all-stage3-gcc):\n\tAlways relocate gcc and prev-gcc to the original names, even\n\tif the build fails.\n\t(new-cleanstrap, new-restage1, new-restage2, new-restage3):\n\tNew targets.\n\nFrom-SVN: r81130", "tree": {"sha": "a996c64777c789969522cec419f9d16701da0869", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a996c64777c789969522cec419f9d16701da0869"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/03a917017465b056b6ee73e2303b1e194c51fd1b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/03a917017465b056b6ee73e2303b1e194c51fd1b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/03a917017465b056b6ee73e2303b1e194c51fd1b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/03a917017465b056b6ee73e2303b1e194c51fd1b/comments", "author": {"login": "bonzini", "id": 42082, "node_id": "MDQ6VXNlcjQyMDgy", "avatar_url": "https://avatars.githubusercontent.com/u/42082?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bonzini", "html_url": "https://github.com/bonzini", "followers_url": "https://api.github.com/users/bonzini/followers", "following_url": "https://api.github.com/users/bonzini/following{/other_user}", "gists_url": "https://api.github.com/users/bonzini/gists{/gist_id}", "starred_url": "https://api.github.com/users/bonzini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bonzini/subscriptions", "organizations_url": "https://api.github.com/users/bonzini/orgs", "repos_url": "https://api.github.com/users/bonzini/repos", "events_url": "https://api.github.com/users/bonzini/events{/privacy}", "received_events_url": "https://api.github.com/users/bonzini/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "44688022b31c3eafa49eaf01f542ff48d4cddc6f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/44688022b31c3eafa49eaf01f542ff48d4cddc6f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/44688022b31c3eafa49eaf01f542ff48d4cddc6f"}], "stats": {"total": 89, "additions": 75, "deletions": 14}, "files": [{"sha": "5101b2a3a240b8fec9535de4d1bedc94bbd1fccc", "filename": "ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/03a917017465b056b6ee73e2303b1e194c51fd1b/ChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/03a917017465b056b6ee73e2303b1e194c51fd1b/ChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/ChangeLog?ref=03a917017465b056b6ee73e2303b1e194c51fd1b", "patch": "@@ -1,3 +1,11 @@\n+2004-04-23  Paolo Bonzini  <bonzini@gnu.org>\n+\n+\t* Makefile.tpl (all-stage1-gcc, all-stage2-gcc, all-stage3-gcc):\n+\tAlways relocate gcc and prev-gcc to the original names, even\n+\tif the build fails.\n+\t(new-cleanstrap, new-restage1, new-restage2, new-restage3):\n+\tNew targets.\n+\n 2004-04-23  Laurent GUERBY <laurent@guerby.net>\n \n \t* MAINTAINERS: Update my email address."}, {"sha": "55ec68c5c587c3d17be776090c760b1b0bf15c1c", "filename": "Makefile.in", "status": "modified", "additions": 34, "deletions": 7, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/03a917017465b056b6ee73e2303b1e194c51fd1b/Makefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/03a917017465b056b6ee73e2303b1e194c51fd1b/Makefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/Makefile.in?ref=03a917017465b056b6ee73e2303b1e194c51fd1b", "patch": "@@ -24112,11 +24112,11 @@ all-stage1-gcc: configure-stage1-gcc prebootstrap\n \tmv stage1-gcc gcc ; \\\n \tcd gcc && \\\n \t$(MAKE) $(GCC_FLAGS_TO_PASS) \\\n-\t\tCFLAGS=\"$(STAGE1_CFLAGS)\" \\\n-\t\t|| exit 1 ; \\\n+\t\tCFLAGS=\"$(STAGE1_CFLAGS)\" && $(STAMP) ../all-stage1-gcc ; \\\n+\tresult=$$? ; \\\n \tcd .. ; \\\n \tmv gcc stage1-gcc ; \\\n-\t$(STAMP) all-stage1-gcc\n+\texit $$result\n \n # TODO: Deal with STAGE_PREFIX (which is only for ada, incidentally)\n # Possibly pass --enable-werror-always (depending on --enable-werror);\n@@ -24188,11 +24188,12 @@ all-stage2-gcc: all-stage1-gcc configure-stage2-gcc\n \t\tCC=\"$(STAGE_CC_WRAPPER) $$r/prev-gcc/xgcc$(exeext) -B$$r/prev-gcc/ -B$(build_tooldir)/bin/\" \\\n \t\tCC_FOR_BUILD=\"$(STAGE_CC_WRAPPER) $$r/prev-gcc/xgcc$(exeext) -B$$r/prev-gcc/ -B$(build_tooldir)/bin/\" \\\n \t\tSTAGE_PREFIX=$$r/prev-gcc/ \\\n-\t\t$(POSTSTAGE1_FLAGS_TO_PASS) || exit 1 ; \\\n+\t\t$(POSTSTAGE1_FLAGS_TO_PASS) && $(STAMP) ../all-stage2-gcc ; \\\n+\tresult=$$? ; \\\n \tcd .. ; \\\n \tmv prev-gcc stage1-gcc ; \\\n \tmv gcc stage2-gcc ; \\\n-\t$(STAMP) all-stage2-gcc\n+\texit $$result\n \n configure-stage3-gcc: all-stage2-gcc\n \techo configure-stage3-gcc > stage_last ; \\\n@@ -24255,11 +24256,12 @@ all-stage3-gcc: all-stage2-gcc configure-stage3-gcc\n \t\tCC=\"$(STAGE_CC_WRAPPER) $$r/prev-gcc/xgcc$(exeext) -B$$r/prev-gcc/ -B$(build_tooldir)/bin/\" \\\n \t\tCC_FOR_BUILD=\"$(STAGE_CC_WRAPPER) $$r/prev-gcc/xgcc$(exeext) -B$$r/prev-gcc/ -B$(build_tooldir)/bin/\" \\\n \t\tSTAGE_PREFIX=$$r/prev-gcc/ \\\n-\t\t$(POSTSTAGE1_FLAGS_TO_PASS) || exit 1 ; \\\n+\t\t$(POSTSTAGE1_FLAGS_TO_PASS) && $(STAMP) ../all-stage3-gcc \\\n+\tresult=$$? ; \\\n \tcd .. ; \\\n \tmv prev-gcc stage2-gcc ; \\\n \tmv gcc stage3-gcc ; \\\n-\t$(STAMP) all-stage3-gcc\n+\texit $$result\n \n # We only want to compare .o files, so set this!\n objext = .o\n@@ -24294,6 +24296,31 @@ new-bootstrap: compare\n \t$(MAKE) all ; \\\n \tmv gcc stage3-gcc\n \n+new-cleanstrap:\n+\trm -rf configure-stage1-gcc all-stage1-gcc stage1-gcc \\\n+\t  configure-stage2-gcc all-stage2-gcc stage2-gcc \\\n+\t  configure-stage3-gcc all-stage3-gcc stage3-gcc \\\n+\t  compare\n+\t$(MAKE) new-bootstrap\n+\n+new-restage1:\n+\trm -rf configure-stage1-gcc all-stage1-gcc stage1-gcc/Makefile \\\n+\t  configure-stage2-gcc all-stage2-gcc stage2-gcc \\\n+\t  configure-stage3-gcc all-stage3-gcc stage3-gcc \\\n+\t  compare\n+\t$(MAKE) all-stage1-gcc\n+\n+new-restage2: all-stage1-gcc\n+\trm -rf configure-stage2-gcc all-stage2-gcc stage2-gcc/Makefile \\\n+\t  configure-stage3-gcc all-stage3-gcc stage3-gcc \\\n+\t  compare\n+\t$(MAKE) all-stage2-gcc\n+\n+new-restage3: all-stage2-gcc\n+\trm -rf configure-stage3-gcc all-stage3-gcc stage3-gcc/Makefile \\\n+\t  compare\n+\t$(MAKE) compare\n+\n # --------------------------------------\n # Dependencies between different modules\n # --------------------------------------"}, {"sha": "d380616168830fa5c20b759475b9a792a703ca27", "filename": "Makefile.tpl", "status": "modified", "additions": 33, "deletions": 7, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/03a917017465b056b6ee73e2303b1e194c51fd1b/Makefile.tpl", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/03a917017465b056b6ee73e2303b1e194c51fd1b/Makefile.tpl", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/Makefile.tpl?ref=03a917017465b056b6ee73e2303b1e194c51fd1b", "patch": "@@ -1377,11 +1377,11 @@ all-stage1-gcc: configure-stage1-gcc prebootstrap\n \tmv stage1-gcc gcc ; \\\n \tcd gcc && \\\n \t$(MAKE) $(GCC_FLAGS_TO_PASS) \\\n-\t\tCFLAGS=\"$(STAGE1_CFLAGS)\" \\\n-\t\t|| exit 1 ; \\\n+\t\tCFLAGS=\"$(STAGE1_CFLAGS)\" && $(STAMP) ../all-stage1-gcc ; \\\n+\tresult=$$? ; \\\n \tcd .. ; \\\n \tmv gcc stage1-gcc ; \\\n-\t$(STAMP) all-stage1-gcc\n+\texit $$result\n \n # TODO: Deal with STAGE_PREFIX (which is only for ada, incidentally)\n # Possibly pass --enable-werror-always (depending on --enable-werror);\n@@ -1453,11 +1453,12 @@ all-stage2-gcc: all-stage1-gcc configure-stage2-gcc\n \t\tCC=\"$(STAGE_CC_WRAPPER) $$r/prev-gcc/xgcc$(exeext) -B$$r/prev-gcc/ -B$(build_tooldir)/bin/\" \\\n \t\tCC_FOR_BUILD=\"$(STAGE_CC_WRAPPER) $$r/prev-gcc/xgcc$(exeext) -B$$r/prev-gcc/ -B$(build_tooldir)/bin/\" \\\n \t\tSTAGE_PREFIX=$$r/prev-gcc/ \\\n-\t\t$(POSTSTAGE1_FLAGS_TO_PASS) || exit 1 ; \\\n+\t\t$(POSTSTAGE1_FLAGS_TO_PASS) && $(STAMP) ../all-stage2-gcc ; \\\n+\tresult=$$? ; \\\n \tcd .. ; \\\n \tmv prev-gcc stage1-gcc ; \\\n \tmv gcc stage2-gcc ; \\\n-\t$(STAMP) all-stage2-gcc\n+\texit $$result\n \n configure-stage3-gcc: all-stage2-gcc\n \techo configure-stage3-gcc > stage_last ; \\\n@@ -1520,11 +1521,12 @@ all-stage3-gcc: all-stage2-gcc configure-stage3-gcc\n \t\tCC=\"$(STAGE_CC_WRAPPER) $$r/prev-gcc/xgcc$(exeext) -B$$r/prev-gcc/ -B$(build_tooldir)/bin/\" \\\n \t\tCC_FOR_BUILD=\"$(STAGE_CC_WRAPPER) $$r/prev-gcc/xgcc$(exeext) -B$$r/prev-gcc/ -B$(build_tooldir)/bin/\" \\\n \t\tSTAGE_PREFIX=$$r/prev-gcc/ \\\n-\t\t$(POSTSTAGE1_FLAGS_TO_PASS) || exit 1 ; \\\n+\t\t$(POSTSTAGE1_FLAGS_TO_PASS) && $(STAMP) ../all-stage3-gcc \\\n+\tresult=$$? ; \\\n \tcd .. ; \\\n \tmv prev-gcc stage2-gcc ; \\\n \tmv gcc stage3-gcc ; \\\n-\t$(STAMP) all-stage3-gcc\n+\texit $$result\n \n # We only want to compare .o files, so set this!\n objext = .o\n@@ -1559,6 +1561,30 @@ new-bootstrap: compare\n \t$(MAKE) all ; \\\n \tmv gcc stage3-gcc\n \n+new-cleanstrap:\n+\trm -rf configure-stage1-gcc all-stage1-gcc stage1-gcc \\\n+\t  configure-stage2-gcc all-stage2-gcc stage2-gcc \\\n+\t  configure-stage3-gcc all-stage3-gcc stage3-gcc \\\n+\t  compare\n+\t$(MAKE) new-bootstrap\n+\n+new-restage1:\n+\trm -rf all-stage1-gcc \\\n+\t  configure-stage2-gcc all-stage2-gcc stage2-gcc \\\n+\t  configure-stage3-gcc all-stage3-gcc stage3-gcc \\\n+\t  compare\n+\t$(MAKE) all-stage1-gcc\n+\n+new-restage2: all-stage1-gcc\n+\trm -rf all-stage2-gcc \\\n+\t  configure-stage3-gcc all-stage3-gcc stage3-gcc \\\n+\t  compare\n+\t$(MAKE) all-stage2-gcc\n+\n+new-restage3: all-stage2-gcc\n+\trm -rf all-stage3-gcc compare\n+\t$(MAKE) compare\n+\n # --------------------------------------\n # Dependencies between different modules\n # --------------------------------------"}]}