{"sha": "86ff8230320d59988f7bb1fb8269bf067610c2f5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODZmZjgyMzAzMjBkNTk5ODhmN2JiMWZiODI2OWJmMDY3NjEwYzJmNQ==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1996-09-18T21:47:46Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1996-09-18T21:47:46Z"}, "message": "Add pattern for b%c with swapped comparisons with 0.\n\nDelete three unnamed cmp insns that are strict subsets of new insn.\n\nFrom-SVN: r12741", "tree": {"sha": "af19521c275926246148f9c2182173f3a6fdf310", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/af19521c275926246148f9c2182173f3a6fdf310"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/86ff8230320d59988f7bb1fb8269bf067610c2f5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/86ff8230320d59988f7bb1fb8269bf067610c2f5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/86ff8230320d59988f7bb1fb8269bf067610c2f5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/86ff8230320d59988f7bb1fb8269bf067610c2f5/comments", "author": null, "committer": null, "parents": [{"sha": "c3741733dbd0155d869ebfc9ead24a0d885fe27c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c3741733dbd0155d869ebfc9ead24a0d885fe27c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c3741733dbd0155d869ebfc9ead24a0d885fe27c"}], "stats": {"total": 38, "additions": 16, "deletions": 22}, "files": [{"sha": "5ece6079982f683696b7e79a95ab46ace6054657", "filename": "gcc/config/alpha/alpha.md", "status": "modified", "additions": 16, "deletions": 22, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/86ff8230320d59988f7bb1fb8269bf067610c2f5/gcc%2Fconfig%2Falpha%2Falpha.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/86ff8230320d59988f7bb1fb8269bf067610c2f5/gcc%2Fconfig%2Falpha%2Falpha.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Falpha.md?ref=86ff8230320d59988f7bb1fb8269bf067610c2f5", "patch": "@@ -1654,31 +1654,13 @@\n   \"cmp%C1 %r2,%3,%0\"\n   [(set_attr \"type\" \"icmp\")])\n \n-;; There are three important special-case that don't fit the above pattern\n-;; but which we want to handle here.\n-\n-(define_insn \"\"\n-  [(set (match_operand:DI 0 \"register_operand\" \"=r\")\n-\t(ne:DI (match_operand:DI 1 \"register_operand\" \"r\")\n-\t       (const_int 0)))]\n-  \"\"\n-  \"cmpult $31,%1,%0\"\n-  [(set_attr \"type\" \"icmp\")])\n-\n-(define_insn \"\"\n-  [(set (match_operand:DI 0 \"register_operand\" \"=r\")\n-\t(gt:DI (match_operand:DI 1 \"register_operand\" \"r\")\n-\t       (const_int 0)))]\n-  \"\"\n-  \"cmplt $31,%1,%0\"\n-  [(set_attr \"type\" \"icmp\")])\n-\n (define_insn \"\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=r\")\n-\t(ge:DI (match_operand:DI 1 \"register_operand\" \"r\")\n-\t       (const_int 0)))]\n+        (match_operator:DI 1 \"alpha_swapped_comparison_operator\"\n+\t\t\t   [(match_operand:DI 2 \"reg_or_8bit_operand\" \"rI\")\n+\t\t\t    (match_operand:DI 3 \"reg_or_0_operand\" \"rJ\")]))]\n   \"\"\n-  \"cmple $31,%1,%0\"\n+  \"cmp%c1 $r3,%2,%0\"\n   [(set_attr \"type\" \"icmp\")])\n \n ;; This pattern exists so conditional moves of SImode values are handled.\n@@ -2001,6 +1983,18 @@\n   \"b%C1 %r2,%0\"\n   [(set_attr \"type\" \"ibr\")])\n \n+(define_insn \"\"\n+  [(set (pc)\n+\t(if_then_else\n+\t (match_operator 1 \"signed_comparison_operator\"\n+\t\t\t [(const_int 0)\n+\t\t\t  (match_operand:DI 2 \"register_operand\" \"r\")])\n+\t (label_ref (match_operand 0 \"\" \"\"))\n+\t (pc)))]\n+  \"\"\n+  \"b%c1 %2,%0\"\n+  [(set_attr \"type\" \"ibr\")])\n+\n (define_insn \"\"\n   [(set (pc)\n \t(if_then_else"}]}