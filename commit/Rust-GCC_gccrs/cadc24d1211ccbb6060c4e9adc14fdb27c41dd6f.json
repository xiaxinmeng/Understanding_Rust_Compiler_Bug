{"sha": "cadc24d1211ccbb6060c4e9adc14fdb27c41dd6f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2FkYzI0ZDEyMTFjY2JiNjA2MGM0ZTlhZGMxNGZkYjI3YzQxZGQ2Zg==", "commit": {"author": {"name": "Stan Cox", "email": "coxs@gnu.org", "date": "1997-01-28T21:33:04Z"}, "committer": {"name": "Stan Cox", "email": "coxs@gnu.org", "date": "1997-01-28T21:33:04Z"}, "message": "Add code to handle alternate sections when\n\nFrom-SVN: r13558", "tree": {"sha": "1b040fd589497f01bf35e77061175c21c174a7d6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1b040fd589497f01bf35e77061175c21c174a7d6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cadc24d1211ccbb6060c4e9adc14fdb27c41dd6f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cadc24d1211ccbb6060c4e9adc14fdb27c41dd6f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cadc24d1211ccbb6060c4e9adc14fdb27c41dd6f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cadc24d1211ccbb6060c4e9adc14fdb27c41dd6f/comments", "author": null, "committer": null, "parents": [{"sha": "9788ff4d96e05a2700f51ca81a5d404451bf2f4a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9788ff4d96e05a2700f51ca81a5d404451bf2f4a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9788ff4d96e05a2700f51ca81a5d404451bf2f4a"}], "stats": {"total": 20, "additions": 7, "deletions": 13}, "files": [{"sha": "d6fc7d4e923b533472511137b3b720e0d1ebe274", "filename": "gcc/config/i386/sco5.h", "status": "modified", "additions": 7, "deletions": 13, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cadc24d1211ccbb6060c4e9adc14fdb27c41dd6f/gcc%2Fconfig%2Fi386%2Fsco5.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cadc24d1211ccbb6060c4e9adc14fdb27c41dd6f/gcc%2Fconfig%2Fi386%2Fsco5.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsco5.h?ref=cadc24d1211ccbb6060c4e9adc14fdb27c41dd6f", "patch": "@@ -134,9 +134,6 @@ Boston, MA 02111-1307, USA.  */\n \n #define SCO_DEFAULT_ASM_COFF(FILE,NAME)\t\t\t\t\t\\\n do {\t\t\t\t\t\t\t\t\t\\\n-    if (output_bytecode)\t\t\t\t\t\t\\\n-      BC_OUTPUT_LABEL (FILE, NAME);\t\t\t\t\t\\\n-    else\t\t\t\t\t\t\t\t\\\n       ASM_OUTPUT_LABEL (FILE, NAME);\t\t\t\t\t\\\n   } while (0)\n \n@@ -322,7 +319,6 @@ do {\t\t\t\t\t\t\t\t\t\\\n #undef ASM_OUTPUT_ASCII\n #define ASM_OUTPUT_ASCII(FILE, STR, LENGTH)\t\t\t\t\\\n do {\t\t\t\t\t\t\t\t\t\\\n-   if (TARGET_ELF) {\t\t\t\t\t\t\t\\\n       register unsigned char *_ascii_bytes = (unsigned char *) (STR);\t\\\n       register unsigned char *limit = _ascii_bytes + (LENGTH);\t\t\\\n       register unsigned bytes_in_chunk = 0;\t\t\t\t\\\n@@ -358,15 +354,7 @@ do {\t\t\t\t\t\t\t\t\t\\\n \t}\t\t\t\t\t\t\t\t\\\n       if (bytes_in_chunk > 0)\t\t\t\t\t\t\\\n         fprintf ((FILE), \"\\n\");\t\t\t\t\t\t\\\n-  } else {\t\t\t\t\t\t\t\t\\\n-   int i = 0; \t\t\t\t\t\t\t\t\\\n-   while (i < (LENGTH))\t\t\t\t\t\t\t\\\n-    { if (i%10 == 0) { if (i!=0) fprintf ((FILE), \"\\n\");\t\t\\\n-\t\t       fprintf ((FILE), \"%s \", ASM_BYTE_OP); }\t\t\\\n-      else fprintf ((FILE), \",\");\t\t\t\t\t\\\n-\tfprintf ((FILE), \"0x%x\", ((STR)[i++] & 0377)) ;}\t\t\\\n-      fprintf ((FILE), \"\\n\"); }\t\t\t\t\t\t\\\n-} while (0)\n+} while (0) \n \n #undef ASM_OUTPUT_CASE_LABEL\n #define ASM_OUTPUT_CASE_LABEL(FILE,PREFIX,NUM,JUMPTABLE)\t\t\\\n@@ -491,10 +479,16 @@ do {\t\t\t\t\t\t\t\t\t\\\n #undef ASM_OUTPUT_SECTION_NAME\n #define ASM_OUTPUT_SECTION_NAME(FILE, DECL, NAME) \\\n do {\t\t\t\t\t\t\t\t\t\\\n+  char *snam = NAME ;\t\t\t\t\t\t\t\\\n+  if (strcmp(NAME, \".gcc_except_table\") == 0) snam = \".gccexc\" ;\t\\\n   if (TARGET_ELF)\t\t\t\t\t\t\t\\\n     fprintf (FILE, \".section\\t%s,\\\"%s\\\",@progbits\\n\", NAME, \t\t\\\n \t   (DECL) && TREE_CODE (DECL) == FUNCTION_DECL ? \"ax\" : \t\\\n \t   (DECL) && TREE_READONLY (DECL) ? \"a\" : \"aw\");\t\t\\\n+  else\t\t\t\t\t\t\t\t\t\\\n+    fprintf (FILE, \".section\\t%s,\\\"%s\\\"\\n\", snam,\t\t\t\\\n+\t(DECL) && TREE_CODE (DECL) == FUNCTION_DECL ? \"x\" : \t\t\\\n+\t(DECL) && TREE_READONLY (DECL) ? \"a\" : \"w\");\t\t\t\\\n } while (0)\n \n #undef ASM_OUTPUT_SKIP"}]}