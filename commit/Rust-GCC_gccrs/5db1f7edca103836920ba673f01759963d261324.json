{"sha": "5db1f7edca103836920ba673f01759963d261324", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWRiMWY3ZWRjYTEwMzgzNjkyMGJhNjczZjAxNzU5OTYzZDI2MTMyNA==", "commit": {"author": {"name": "Alexandre Petit-Bianco", "email": "apbianco@cygnus.com", "date": "2000-12-09T01:39:21Z"}, "committer": {"name": "Alexandre Petit-Bianco", "email": "apbianco@gcc.gnu.org", "date": "2000-12-09T01:39:21Z"}, "message": "Makefile.in (TARGET_CONFIGDIRS): Added note about libjava.\n\n2000-12-08  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n\n        * Makefile.in (TARGET_CONFIGDIRS): Added note about libjava.\n        (ALL_MODULES): Added fastjar.\n        (NATIVE_CHECK_MODULES, INSTALL_MODULES, CLEAN_MODULES): Likewise.\n        (all-target-libjava): all-fastjar replaces all-zip.\n        (all-fastjar): Added.\n        (configure-target-fastjar, all-target-fastjar): Likewise.\n        * configure.in (host_tools): Added fastjar.\n\n(http://gcc.gnu.org/ml/gcc-patches/2000-12/msg00479.html)\n\nFrom-SVN: r38143", "tree": {"sha": "0d502f76b4f1dfb3e7789814b053b31f6ff9c6f4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0d502f76b4f1dfb3e7789814b053b31f6ff9c6f4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5db1f7edca103836920ba673f01759963d261324", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5db1f7edca103836920ba673f01759963d261324", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5db1f7edca103836920ba673f01759963d261324", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5db1f7edca103836920ba673f01759963d261324/comments", "author": null, "committer": null, "parents": [{"sha": "5a2eb52b169fea7dd6062142867f2510b1c16a65", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5a2eb52b169fea7dd6062142867f2510b1c16a65", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5a2eb52b169fea7dd6062142867f2510b1c16a65"}], "stats": {"total": 25, "additions": 23, "deletions": 2}, "files": [{"sha": "7c0efe865bf3c41b15fd8d91576dc15ce68a0a4f", "filename": "ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5db1f7edca103836920ba673f01759963d261324/ChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5db1f7edca103836920ba673f01759963d261324/ChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/ChangeLog?ref=5db1f7edca103836920ba673f01759963d261324", "patch": "@@ -1,3 +1,13 @@\n+2000-12-08  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n+\n+\t* Makefile.in (TARGET_CONFIGDIRS): Added note about libjava.\n+\t(ALL_MODULES): Added fastjar.\n+\t(NATIVE_CHECK_MODULES, INSTALL_MODULES, CLEAN_MODULES): Likewise.\n+\t(all-target-libjava): all-fastjar replaces all-zip.\n+\t(all-fastjar): Added.\n+\t(configure-target-fastjar, all-target-fastjar): Likewise.\n+\t* configure.in (host_tools): Added fastjar.\n+\n 2000-12-07  Mike Stump  <mrs@wrs.com>\n \n \t* Makefile.in (local-distclean): Remove leftover built files."}, {"sha": "4f770fb393493fa0d8c35ad6b8227ac2e94ea544", "filename": "Makefile.in", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5db1f7edca103836920ba673f01759963d261324/Makefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5db1f7edca103836920ba673f01759963d261324/Makefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/Makefile.in?ref=5db1f7edca103836920ba673f01759963d261324", "patch": "@@ -169,6 +169,10 @@ OTHERS =\n \n # This is set by the configure script to the list of directories which\n # should be built using the target tools.\n+# Temporary note: Java hackers: add `libjava' at the end of this list\n+# for a merged tree build. This limitation and this comment will go\n+# away when libjava will safely build without `--disable-new-gxx-abi'\n+# (Soon.)\n TARGET_CONFIGDIRS = libiberty libgloss $(SPECIAL_LIBS) newlib libio librx libstdc++ libg++ winsup opcodes bsp libstub cygmon libf2c libchill libobjc\n \n # Target libraries are put under this directory:\n@@ -485,6 +489,7 @@ ALL_MODULES = \\\n \tall-diff \\\n \tall-dosutils \\\n \tall-etc \\\n+\tall-fastjar \\\n \tall-fileutils \\\n \tall-findutils \\\n \tall-find \\\n@@ -545,6 +550,7 @@ ALL_MODULES = \\\n NATIVE_CHECK_MODULES = \\\n \tcheck-bison \\\n \tcheck-byacc \\\n+\tcheck-fastjar \\\n \tcheck-flex \\\n \tcheck-zip\n \n@@ -636,6 +642,7 @@ INSTALL_MODULES = \\\n \tinstall-diff \\\n \tinstall-dosutils \\\n \tinstall-etc \\\n+\tinstall-fastjar \\\n \tinstall-fileutils \\\n \tinstall-findutils \\\n \tinstall-find \\\n@@ -838,6 +845,7 @@ CLEAN_MODULES = \\\n \tclean-diff \\\n \tclean-dosutils \\\n \tclean-etc \\\n+\tclean-fastjar \\\n \tclean-fileutils \\\n \tclean-findutils \\\n \tclean-find \\\n@@ -1615,7 +1623,7 @@ all-libiberty:\n configure-target-libffi: $(ALL_GCC_C) \n all-target-libffi: configure-target-libffi\n configure-target-libjava: $(ALL_GCC_CXX) configure-target-zlib configure-target-boehm-gc configure-target-qthreads configure-target-libffi\n-all-target-libjava: configure-target-libjava all-zip all-target-zlib all-target-boehm-gc all-target-qthreads all-target-libffi\n+all-target-libjava: configure-target-libjava all-fastjar all-target-zlib all-target-boehm-gc all-target-qthreads all-target-libffi\n configure-target-librx: $(ALL_GCC_C)\n all-target-librx: configure-target-librx\n configure-target-libstdc++: $(ALL_GCC_C)\n@@ -1671,6 +1679,9 @@ all-zip:\n all-zlib:\n configure-target-zlib: $(ALL_GCC_C)\n all-target-zlib: configure-target-zlib\n+all-fastjar: all-zlib\n+configure-target-fastjar: configure-target-zlib\n+all-target-fastjar: configure-target-fastjar all-target-zlib\n configure-target-libiberty: $(ALL_GCC_C)\n all-target-libiberty: configure-target-libiberty\n all-target: $(ALL_TARGET_MODULES)"}, {"sha": "4236fe075a4811d9997ea3e531d7bd8e42b270d0", "filename": "configure.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5db1f7edca103836920ba673f01759963d261324/configure.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5db1f7edca103836920ba673f01759963d261324/configure.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/configure.in?ref=5db1f7edca103836920ba673f01759963d261324", "patch": "@@ -61,7 +61,7 @@ fi\n # these tools are built for the host environment\n # Note, the powerpc-eabi build depends on sim occurring before gdb in order to\n # know that we are building the simulator.\n-host_tools=\"texinfo byacc flex bison binutils ld gas gcc sim gdb make patch prms send-pr gprof gdbtest tgas etc expect dejagnu ash bash bzip2 m4 autoconf automake libtool ispell grep diff rcs cvssrc fileutils shellutils time textutils wdiff find emacs emacs19 uudecode hello tar gzip indent recode release sed utils guile perl apache inet gawk findutils snavigator libtool gettext zip\"\n+host_tools=\"texinfo byacc flex bison binutils ld gas gcc sim gdb make patch prms send-pr gprof gdbtest tgas etc expect dejagnu ash bash bzip2 m4 autoconf automake libtool ispell grep diff rcs cvssrc fileutils shellutils time textutils wdiff find emacs emacs19 uudecode hello tar gzip indent recode release sed utils guile perl apache inet gawk findutils snavigator libtool gettext zip fastjar\"\n \n # these libraries are built for the target environment, and are built after\n # the host libraries and the host tools (which may be a cross compiler)"}]}