{"sha": "ba3a053e4d99ff474186785de101999cb0f0e79e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmEzYTA1M2U0ZDk5ZmY0NzQxODY3ODVkZTEwMTk5OWNiMGYwZTc5ZQ==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1996-03-02T19:30:32Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1996-03-02T19:30:32Z"}, "message": "(expand_call): If passing by invisible ref, not const.\n\nFrom-SVN: r11404", "tree": {"sha": "645a08c513c2a73700b09a1a4fd013ea08c60396", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/645a08c513c2a73700b09a1a4fd013ea08c60396"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ba3a053e4d99ff474186785de101999cb0f0e79e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ba3a053e4d99ff474186785de101999cb0f0e79e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ba3a053e4d99ff474186785de101999cb0f0e79e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ba3a053e4d99ff474186785de101999cb0f0e79e/comments", "author": null, "committer": null, "parents": [{"sha": "a490482938c0e7ca7193571901dd16df9260a92a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a490482938c0e7ca7193571901dd16df9260a92a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a490482938c0e7ca7193571901dd16df9260a92a"}], "stats": {"total": 1, "additions": 1, "deletions": 0}, "files": [{"sha": "9a6b7fb75f96c6067ce7492703ae5d9a54defe16", "filename": "gcc/calls.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba3a053e4d99ff474186785de101999cb0f0e79e/gcc%2Fcalls.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba3a053e4d99ff474186785de101999cb0f0e79e/gcc%2Fcalls.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcalls.c?ref=ba3a053e4d99ff474186785de101999cb0f0e79e", "patch": "@@ -1086,6 +1086,7 @@ expand_call (exp, target, ignore)\n \t      MEM_IN_STRUCT_P (copy) = AGGREGATE_TYPE_P (type);\n \n \t      store_expr (args[i].tree_value, copy, 0);\n+\t      is_const = 0;\n \n \t      args[i].tree_value = build1 (ADDR_EXPR,\n \t\t\t\t\t   build_pointer_type (type),"}]}