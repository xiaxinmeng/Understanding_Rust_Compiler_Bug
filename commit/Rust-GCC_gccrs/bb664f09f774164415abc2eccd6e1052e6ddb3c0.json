{"sha": "bb664f09f774164415abc2eccd6e1052e6ddb3c0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmI2NjRmMDlmNzc0MTY0NDE1YWJjMmVjY2Q2ZTEwNTJlNmRkYjNjMA==", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2013-01-03T17:16:08Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2013-01-03T17:16:08Z"}, "message": "re PR target/55712 (cpuinfo.c doesn't compile for x86-64 with medium memory model)\n\n\tPR target/55712\n\t* config/i386/i386-c.c (ix86_target_macros_internal): Depending on\n\tselected code model, define __code_mode_small__, __code_model_medium__,\n\t__code_model_large__, __code_model_32__ or __code_model_kernel__.\n\t* config/i386/cpuid.h (__cpuid, __cpuid_count) [__i386__]: Prefix\n\txchg temporary register with %k.  Declare temporary register as\n\tearly clobbered.\n\t[__x86_64__]: For medium and large code models, preserve %rbx register.\n\nFrom-SVN: r194862", "tree": {"sha": "d62b57e5e7741281f539bb6486428f328cc1f7b6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d62b57e5e7741281f539bb6486428f328cc1f7b6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bb664f09f774164415abc2eccd6e1052e6ddb3c0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bb664f09f774164415abc2eccd6e1052e6ddb3c0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bb664f09f774164415abc2eccd6e1052e6ddb3c0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bb664f09f774164415abc2eccd6e1052e6ddb3c0/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "49c01f87ba0b28fa7021d75bfd4b68a75f15ab48", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/49c01f87ba0b28fa7021d75bfd4b68a75f15ab48", "html_url": "https://github.com/Rust-GCC/gccrs/commit/49c01f87ba0b28fa7021d75bfd4b68a75f15ab48"}], "stats": {"total": 78, "additions": 64, "deletions": 14}, "files": [{"sha": "740b8ac18d83c919dfb372fc85bfdd5fb39edf43", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb664f09f774164415abc2eccd6e1052e6ddb3c0/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb664f09f774164415abc2eccd6e1052e6ddb3c0/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=bb664f09f774164415abc2eccd6e1052e6ddb3c0", "patch": "@@ -1,3 +1,14 @@\n+2013-01-03  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\tPR target/55712\n+\t* config/i386/i386-c.c (ix86_target_macros_internal): Depending on\n+\tselected code model, define __code_mode_small__, __code_model_medium__,\n+\t__code_model_large__, __code_model_32__ or __code_model_kernel__.\n+\t* config/i386/cpuid.h (__cpuid, __cpuid_count) [__i386__]: Prefix\n+\txchg temporary register with %k.  Declare temporary register as\n+\tearly clobbered.\n+\t[__x86_64__]: For medium and large code models, preserve %rbx register.\n+\n 2013-01-03  Richard Biener  <rguenther@suse.de>\n \n \t* tree-data-ref.c (dump_conflict_function): Use less vertical"}, {"sha": "7711c9bd67b7eef11fbd92905c661c07e4da51c6", "filename": "gcc/config/i386/cpuid.h", "status": "modified", "additions": 28, "deletions": 13, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb664f09f774164415abc2eccd6e1052e6ddb3c0/gcc%2Fconfig%2Fi386%2Fcpuid.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb664f09f774164415abc2eccd6e1052e6ddb3c0/gcc%2Fconfig%2Fi386%2Fcpuid.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fcpuid.h?ref=bb664f09f774164415abc2eccd6e1052e6ddb3c0", "patch": "@@ -1,5 +1,5 @@\n /*\n- * Copyright (C) 2007, 2008, 2009, 2010, 2011, 2012\n+ * Copyright (C) 2007, 2008, 2009, 2010, 2011, 2012, 2013\n  * Free Software Foundation, Inc.\n  *\n  * This file is free software; you can redistribute it and/or modify it\n@@ -136,35 +136,50 @@\n /* %ebx may be the PIC register.  */\n #if __GNUC__ >= 3\n #define __cpuid(level, a, b, c, d)\t\t\t\\\n-  __asm__ (\"xchg{l}\\t{%%}ebx, %1\\n\\t\"\t\t\t\\\n+  __asm__ (\"xchg{l}\\t{%%}ebx, %k1\\n\\t\"\t\t\t\\\n \t   \"cpuid\\n\\t\"\t\t\t\t\t\\\n-\t   \"xchg{l}\\t{%%}ebx, %1\\n\\t\"\t\t\t\\\n-\t   : \"=a\" (a), \"=r\" (b), \"=c\" (c), \"=d\" (d)\t\\\n+\t   \"xchg{l}\\t{%%}ebx, %k1\\n\\t\"\t\t\t\\\n+\t   : \"=a\" (a), \"=&r\" (b), \"=c\" (c), \"=d\" (d)\t\\\n \t   : \"0\" (level))\n \n #define __cpuid_count(level, count, a, b, c, d)\t\t\\\n-  __asm__ (\"xchg{l}\\t{%%}ebx, %1\\n\\t\"\t\t\t\\\n+  __asm__ (\"xchg{l}\\t{%%}ebx, %k1\\n\\t\"\t\t\t\\\n \t   \"cpuid\\n\\t\"\t\t\t\t\t\\\n-\t   \"xchg{l}\\t{%%}ebx, %1\\n\\t\"\t\t\t\\\n-\t   : \"=a\" (a), \"=r\" (b), \"=c\" (c), \"=d\" (d)\t\\\n+\t   \"xchg{l}\\t{%%}ebx, %k1\\n\\t\"\t\t\t\\\n+\t   : \"=a\" (a), \"=&r\" (b), \"=c\" (c), \"=d\" (d)\t\\\n \t   : \"0\" (level), \"2\" (count))\n #else\n /* Host GCCs older than 3.0 weren't supporting Intel asm syntax\n    nor alternatives in i386 code.  */\n #define __cpuid(level, a, b, c, d)\t\t\t\\\n-  __asm__ (\"xchgl\\t%%ebx, %1\\n\\t\"\t\t\t\\\n+  __asm__ (\"xchgl\\t%%ebx, %k1\\n\\t\"\t\t\t\\\n \t   \"cpuid\\n\\t\"\t\t\t\t\t\\\n-\t   \"xchgl\\t%%ebx, %1\\n\\t\"\t\t\t\\\n-\t   : \"=a\" (a), \"=r\" (b), \"=c\" (c), \"=d\" (d)\t\\\n+\t   \"xchgl\\t%%ebx, %k1\\n\\t\"\t\t\t\\\n+\t   : \"=a\" (a), \"=&r\" (b), \"=c\" (c), \"=d\" (d)\t\\\n \t   : \"0\" (level))\n \n #define __cpuid_count(level, count, a, b, c, d)\t\t\\\n-  __asm__ (\"xchgl\\t%%ebx, %1\\n\\t\"\t\t\t\\\n+  __asm__ (\"xchgl\\t%%ebx, %k1\\n\\t\"\t\t\t\\\n \t   \"cpuid\\n\\t\"\t\t\t\t\t\\\n-\t   \"xchgl\\t%%ebx, %1\\n\\t\"\t\t\t\\\n-\t   : \"=a\" (a), \"=r\" (b), \"=c\" (c), \"=d\" (d)\t\\\n+\t   \"xchgl\\t%%ebx, %k1\\n\\t\"\t\t\t\\\n+\t   : \"=a\" (a), \"=&r\" (b), \"=c\" (c), \"=d\" (d)\t\\\n \t   : \"0\" (level), \"2\" (count))\n #endif\n+#elif defined(__x86_64__) && (defined(__code_model_medium__) || defined(__code_model_large__)) && defined(__PIC__)\n+/* %rbx may be the PIC register.  */\n+#define __cpuid(level, a, b, c, d)\t\t\t\\\n+  __asm__ (\"xchg{q}\\t{%%}rbx, %q1\\n\\t\"\t\t\t\\\n+\t   \"cpuid\\n\\t\"\t\t\t\t\t\\\n+\t   \"xchg{q}\\t{%%}rbx, %q1\\n\\t\"\t\t\t\\\n+\t   : \"=a\" (a), \"=&r\" (b), \"=c\" (c), \"=d\" (d)\t\\\n+\t   : \"0\" (level))\n+\n+#define __cpuid_count(level, count, a, b, c, d)\t\t\\\n+  __asm__ (\"xchg{q}\\t{%%}rbx, %q1\\n\\t\"\t\t\t\\\n+\t   \"cpuid\\n\\t\"\t\t\t\t\t\\\n+\t   \"xchg{q}\\t{%%}rbx, %q1\\n\\t\"\t\t\t\\\n+\t   : \"=a\" (a), \"=&r\" (b), \"=c\" (c), \"=d\" (d)\t\\\n+\t   : \"0\" (level), \"2\" (count))\n #else\n #define __cpuid(level, a, b, c, d)\t\t\t\\\n   __asm__ (\"cpuid\\n\\t\"\t\t\t\t\t\\"}, {"sha": "05a3476be330285bf6fbbc64364c47f88363c0cb", "filename": "gcc/config/i386/i386-c.c", "status": "modified", "additions": 25, "deletions": 1, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb664f09f774164415abc2eccd6e1052e6ddb3c0/gcc%2Fconfig%2Fi386%2Fi386-c.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb664f09f774164415abc2eccd6e1052e6ddb3c0/gcc%2Fconfig%2Fi386%2Fi386-c.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386-c.c?ref=bb664f09f774164415abc2eccd6e1052e6ddb3c0", "patch": "@@ -1,5 +1,5 @@\n /* Subroutines used for macro/preprocessor support on the ia-32.\n-   Copyright (C) 2008, 2009, 2010, 2011, 2012\n+   Copyright (C) 2008, 2009, 2010, 2011, 2012, 2013\n    Free Software Foundation, Inc.\n \n This file is part of GCC.\n@@ -243,6 +243,30 @@ ix86_target_macros_internal (HOST_WIDE_INT isa_flag,\n       break;\n     }\n \n+  switch (ix86_cmodel)\n+    {\n+    case CM_SMALL:\n+    case CM_SMALL_PIC:\n+      def_or_undef (parse_in, \"__code_model_small__\");\n+      break;\n+    case CM_MEDIUM:\n+    case CM_MEDIUM_PIC:\n+      def_or_undef (parse_in, \"__code_model_medium__\");\n+      break;\n+    case CM_LARGE:\n+    case CM_LARGE_PIC:\n+      def_or_undef (parse_in, \"__code_model_large__\");\n+      break;\n+    case CM_32:\n+      def_or_undef (parse_in, \"__code_model_32__\");\n+      break;\n+    case CM_KERNEL:\n+      def_or_undef (parse_in, \"__code_model_kernel__\");\n+      break;\n+    default:\n+      ;\n+    }\n+\n   if (isa_flag & OPTION_MASK_ISA_MMX)\n     def_or_undef (parse_in, \"__MMX__\");\n   if (isa_flag & OPTION_MASK_ISA_3DNOW)"}]}