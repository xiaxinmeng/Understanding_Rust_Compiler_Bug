{"sha": "52009fa79cdb497b9e410bb4a5b54960a4a44463", "node_id": "C_kwDOANBUbNoAKDUyMDA5ZmE3OWNkYjQ5N2I5ZTQxMGJiNGE1YjU0OTYwYTRhNDQ0NjM", "commit": {"author": {"name": "Jin Ma", "email": "jinma@linux.alibaba.com", "date": "2023-02-03T09:42:59Z"}, "committer": {"name": "Kito Cheng", "email": "kito.cheng@sifive.com", "date": "2023-02-12T11:31:25Z"}, "message": "RISC-V: Change the generation mode of ADJUST_SP_RTX from gen_insn to gen_SET.\n\nThe gen_insn method is used to generate ADJUST_SP_RTX here, which has certain\npotential risks:\n\nWhen the architecture adds pre-processing to `define_insn \"adddi3\"`, such as\n`define_expend \"adddi3\"`, the gen_expand will be automatically called here,\ncausing the patern to emit directly, which will cause insn to enter REG_NOTE\nfor `DWARF` instead of patern.\n\nThe following error REG_NOTE occurred:\nerror: invalid rtl sharing found in the insn:\n(insn 19 3 20 2 (parallel [\n        ...\n        ])\n    (expr_list:REG_CFA_ADJUST_CFA\n        (insn 18 0 0 (set (reg/f:DI 2 sp)\n            (plus:DI (reg/f:DI 2 sp)\n                (const_int -16 [0xfffffffffffffff0]))) -1\n        (nil))))\n\nIn fact, the correct one should be the following:\n(insn 19 3 20 2 (parallel [\n        ...\n        ])\n    (expr_list:REG_CFA_ADJUST_CFA\n        (set (reg/f:DI 2 sp)\n            (plus:DI (reg/f:DI 2 sp)\n                (const_int -16 [0xfffffffffffffff0])))))\n\nFollowing the treatment of arm or other architectures, it is more reasonable to\nuse gen_SET here.\n\ngcc/ChangeLog:\n\n\t* config/riscv/riscv.cc (riscv_adjust_libcall_cfi_prologue): Change\n\tgen_add3_insn to gen_rtx_SET.\n\t(riscv_adjust_libcall_cfi_epilogue): Likewise.", "tree": {"sha": "2f1034bdeb7b2bc5c3285bea655a772b416cf16f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2f1034bdeb7b2bc5c3285bea655a772b416cf16f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/52009fa79cdb497b9e410bb4a5b54960a4a44463", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/52009fa79cdb497b9e410bb4a5b54960a4a44463", "html_url": "https://github.com/Rust-GCC/gccrs/commit/52009fa79cdb497b9e410bb4a5b54960a4a44463", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/52009fa79cdb497b9e410bb4a5b54960a4a44463/comments", "author": {"login": "majin2020", "id": 57284757, "node_id": "MDQ6VXNlcjU3Mjg0NzU3", "avatar_url": "https://avatars.githubusercontent.com/u/57284757?v=4", "gravatar_id": "", "url": "https://api.github.com/users/majin2020", "html_url": "https://github.com/majin2020", "followers_url": "https://api.github.com/users/majin2020/followers", "following_url": "https://api.github.com/users/majin2020/following{/other_user}", "gists_url": "https://api.github.com/users/majin2020/gists{/gist_id}", "starred_url": "https://api.github.com/users/majin2020/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/majin2020/subscriptions", "organizations_url": "https://api.github.com/users/majin2020/orgs", "repos_url": "https://api.github.com/users/majin2020/repos", "events_url": "https://api.github.com/users/majin2020/events{/privacy}", "received_events_url": "https://api.github.com/users/majin2020/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kito-cheng", "id": 2723185, "node_id": "MDQ6VXNlcjI3MjMxODU=", "avatar_url": "https://avatars.githubusercontent.com/u/2723185?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kito-cheng", "html_url": "https://github.com/kito-cheng", "followers_url": "https://api.github.com/users/kito-cheng/followers", "following_url": "https://api.github.com/users/kito-cheng/following{/other_user}", "gists_url": "https://api.github.com/users/kito-cheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/kito-cheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kito-cheng/subscriptions", "organizations_url": "https://api.github.com/users/kito-cheng/orgs", "repos_url": "https://api.github.com/users/kito-cheng/repos", "events_url": "https://api.github.com/users/kito-cheng/events{/privacy}", "received_events_url": "https://api.github.com/users/kito-cheng/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2cd7cbaf51f0057d570406b2540796161af756a6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2cd7cbaf51f0057d570406b2540796161af756a6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2cd7cbaf51f0057d570406b2540796161af756a6"}], "stats": {"total": 10, "additions": 6, "deletions": 4}, "files": [{"sha": "de3e1f903c79539e0f7b2405b949780ffcee98a5", "filename": "gcc/config/riscv/riscv.cc", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/52009fa79cdb497b9e410bb4a5b54960a4a44463/gcc%2Fconfig%2Friscv%2Friscv.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/52009fa79cdb497b9e410bb4a5b54960a4a44463/gcc%2Fconfig%2Friscv%2Friscv.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Friscv%2Friscv.cc?ref=52009fa79cdb497b9e410bb4a5b54960a4a44463", "patch": "@@ -5082,8 +5082,9 @@ riscv_adjust_libcall_cfi_prologue ()\n       }\n \n   /* Debug info for adjust sp.  */\n-  adjust_sp_rtx = gen_add3_insn (stack_pointer_rtx,\n-\t\t\t\t stack_pointer_rtx, GEN_INT (-saved_size));\n+  adjust_sp_rtx =\n+    gen_rtx_SET (stack_pointer_rtx,\n+\t\t gen_rtx_PLUS (GET_MODE(stack_pointer_rtx), stack_pointer_rtx, GEN_INT (-saved_size)));\n   dwarf = alloc_reg_note (REG_CFA_ADJUST_CFA, adjust_sp_rtx,\n \t\t\t  dwarf);\n   return dwarf;\n@@ -5204,8 +5205,9 @@ riscv_adjust_libcall_cfi_epilogue ()\n   int saved_size = cfun->machine->frame.save_libcall_adjustment;\n \n   /* Debug info for adjust sp.  */\n-  adjust_sp_rtx = gen_add3_insn (stack_pointer_rtx,\n-\t\t\t\t stack_pointer_rtx, GEN_INT (saved_size));\n+  adjust_sp_rtx =\n+    gen_rtx_SET (stack_pointer_rtx,\n+\t\t gen_rtx_PLUS (GET_MODE(stack_pointer_rtx), stack_pointer_rtx, GEN_INT (saved_size)));\n   dwarf = alloc_reg_note (REG_CFA_ADJUST_CFA, adjust_sp_rtx,\n \t\t\t  dwarf);\n "}]}