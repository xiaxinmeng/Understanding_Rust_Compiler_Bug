{"sha": "8dffd0e9621d93faabb6676e7a018cb5267dfa22", "node_id": "C_kwDOANBUbNoAKDhkZmZkMGU5NjIxZDkzZmFhYmI2Njc2ZTdhMDE4Y2I1MjY3ZGZhMjI", "commit": {"author": {"name": "Olivier Hainque", "email": "hainque@adacore.com", "date": "2022-09-26T16:05:48Z"}, "committer": {"name": "Olivier Hainque", "email": "hainque@adacore.com", "date": "2022-10-07T06:53:30Z"}, "message": "Introduce DWARF_VERSION_DEFAULT and redefine for VxWorks\n\nThis change introduces a target overridable macro to replace\nthe hardcoded value used to initialize dwarf_version from common.opt.\n\nThe main advantage compared to special code in a target\noverride_options hook is that redefinitions by target config files\nare visible by both the compiler proper and by the driver, which\nmight refer to dwarf_version in ASM_DEBUG_SPECs and friends.\n\nThis is useful at least on VxWorks, where we usually need to\ndefault to dwarf 4 or even 2 to accommodate non-gdb debuggers\nprovided by the environment, including for assembly sources\nused in libgcc for some ports (witnessed with lse.S on aarch64).\n\n2022-02-28  Olivier Hainque  <hainque@adacore.com>\n\ngcc/\n\t* defaults.h (DWARF_DEFAULT_VERSION): Define if not\n\tdefined already.\n\t* common.opt (gdwarf-): Use it.\n\t* doc/tm.texi.in (DWARF_DEFAULT_VERSION): Document.\n\t* doc/tm.texi: Update accordingly.\n\n\t* config/vxworks.h (DWARF_DEFAULT_VERSION): Redefine.\n\t* config/vxworks.cc: Remove code setting dwarf_version, now\n\thandled by the DWARF_DEFAULT_VERSION redefinition.", "tree": {"sha": "d0a90802d2284ff8d65a684481447d2b5551c45c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d0a90802d2284ff8d65a684481447d2b5551c45c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8dffd0e9621d93faabb6676e7a018cb5267dfa22", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8dffd0e9621d93faabb6676e7a018cb5267dfa22", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8dffd0e9621d93faabb6676e7a018cb5267dfa22", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8dffd0e9621d93faabb6676e7a018cb5267dfa22/comments", "author": {"login": "hainque", "id": 18735142, "node_id": "MDQ6VXNlcjE4NzM1MTQy", "avatar_url": "https://avatars.githubusercontent.com/u/18735142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hainque", "html_url": "https://github.com/hainque", "followers_url": "https://api.github.com/users/hainque/followers", "following_url": "https://api.github.com/users/hainque/following{/other_user}", "gists_url": "https://api.github.com/users/hainque/gists{/gist_id}", "starred_url": "https://api.github.com/users/hainque/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hainque/subscriptions", "organizations_url": "https://api.github.com/users/hainque/orgs", "repos_url": "https://api.github.com/users/hainque/repos", "events_url": "https://api.github.com/users/hainque/events{/privacy}", "received_events_url": "https://api.github.com/users/hainque/received_events", "type": "User", "site_admin": false}, "committer": {"login": "hainque", "id": 18735142, "node_id": "MDQ6VXNlcjE4NzM1MTQy", "avatar_url": "https://avatars.githubusercontent.com/u/18735142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hainque", "html_url": "https://github.com/hainque", "followers_url": "https://api.github.com/users/hainque/followers", "following_url": "https://api.github.com/users/hainque/following{/other_user}", "gists_url": "https://api.github.com/users/hainque/gists{/gist_id}", "starred_url": "https://api.github.com/users/hainque/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hainque/subscriptions", "organizations_url": "https://api.github.com/users/hainque/orgs", "repos_url": "https://api.github.com/users/hainque/repos", "events_url": "https://api.github.com/users/hainque/events{/privacy}", "received_events_url": "https://api.github.com/users/hainque/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8307b7d6d0335da952a87bf56015f830072ac431", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8307b7d6d0335da952a87bf56015f830072ac431", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8307b7d6d0335da952a87bf56015f830072ac431"}], "stats": {"total": 38, "additions": 25, "deletions": 13}, "files": [{"sha": "3a97e6782ce52c703207c44793a4cadb2a241366", "filename": "gcc/common.opt", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8dffd0e9621d93faabb6676e7a018cb5267dfa22/gcc%2Fcommon.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8dffd0e9621d93faabb6676e7a018cb5267dfa22/gcc%2Fcommon.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcommon.opt?ref=8dffd0e9621d93faabb6676e7a018cb5267dfa22", "patch": "@@ -3317,7 +3317,7 @@ Common Driver JoinedOrMissing Negative(gdwarf-)\n Generate debug information in default version of DWARF format.\n \n gdwarf-\n-Common Driver Joined UInteger Var(dwarf_version) Init(5)\n+Common Driver Joined UInteger Var(dwarf_version) Init(DWARF_VERSION_DEFAULT)\n Generate debug information in DWARF v2 (or later) format.\n \n gdwarf32"}, {"sha": "f0c0df29367dc27f0f77c2e3c7c5d955b99831d0", "filename": "gcc/config/vxworks.cc", "status": "modified", "additions": 2, "deletions": 8, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8dffd0e9621d93faabb6676e7a018cb5267dfa22/gcc%2Fconfig%2Fvxworks.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8dffd0e9621d93faabb6676e7a018cb5267dfa22/gcc%2Fconfig%2Fvxworks.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fvxworks.cc?ref=8dffd0e9621d93faabb6676e7a018cb5267dfa22", "patch": "@@ -164,16 +164,10 @@ vxworks_override_options (void)\n   if (flag_pic > 0 && !TARGET_VXWORKS_RTP)\n     error (\"PIC is only supported for RTPs\");\n \n-  /* VxWorks comes with non-gdb debuggers which only support strict\n-     dwarf up to certain version.  Default dwarf control to friendly\n-     values for these.  */\n-\n+  /* VxWorks comes with non-gdb debuggers which only support strict dwarf\n+     up to certain versions, as controlled by DWARF_VERSION_DEFAULT.  */\n   if (!OPTION_SET_P (dwarf_strict))\n     dwarf_strict = 1;\n-\n-  if (!OPTION_SET_P (dwarf_version))\n-    dwarf_version = VXWORKS_DWARF_VERSION_DEFAULT;\n-\n }\n \n /* We don't want to use library symbol __clear_cache on SR0640.  Avoid"}, {"sha": "d6ac83b2bd2d6f0b86018e590fccf78657bcd28f", "filename": "gcc/config/vxworks.h", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8dffd0e9621d93faabb6676e7a018cb5267dfa22/gcc%2Fconfig%2Fvxworks.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8dffd0e9621d93faabb6676e7a018cb5267dfa22/gcc%2Fconfig%2Fvxworks.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fvxworks.h?ref=8dffd0e9621d93faabb6676e7a018cb5267dfa22", "patch": "@@ -376,11 +376,11 @@ extern void vxworks_asm_out_destructor (rtx symbol, int priority);\n   vxworks_emit_call_builtin___clear_cache\n extern void vxworks_emit_call_builtin___clear_cache (rtx begin, rtx end);\n \n-/* Default dwarf control values, for non-gdb debuggers that come with\n-   VxWorks.  */\n+/* Default dwarf control values, accounting for non-gdb debuggers that come\n+   with VxWorks.  */\n \n-#undef VXWORKS_DWARF_VERSION_DEFAULT\n-#define VXWORKS_DWARF_VERSION_DEFAULT (TARGET_VXWORKS7 ? 4 : 2)\n+#undef DWARF_VERSION_DEFAULT\n+#define DWARF_VERSION_DEFAULT (TARGET_VXWORKS7 ? 4 : 2)\n \n #undef DWARF_GNAT_ENCODINGS_DEFAULT\n #define DWARF_GNAT_ENCODINGS_DEFAULT \\"}, {"sha": "376687d91b13128c1d7dcf8001b7c2dcdaa2409b", "filename": "gcc/defaults.h", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8dffd0e9621d93faabb6676e7a018cb5267dfa22/gcc%2Fdefaults.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8dffd0e9621d93faabb6676e7a018cb5267dfa22/gcc%2Fdefaults.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdefaults.h?ref=8dffd0e9621d93faabb6676e7a018cb5267dfa22", "patch": "@@ -1441,6 +1441,12 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n #define DWARF_GNAT_ENCODINGS_DEFAULT DWARF_GNAT_ENCODINGS_GDB\n #endif\n \n+/* When generating dwarf info, the default standard version we'll honor\n+   and advertise in absence of -gdwarf-<N> on the command line.  */\n+#ifndef DWARF_VERSION_DEFAULT\n+#define DWARF_VERSION_DEFAULT 5\n+#endif\n+\n #ifndef USED_FOR_TARGET\n /* Done this way to keep gengtype happy.  */\n #if BITS_PER_UNIT == 8"}, {"sha": "110f8dfa0a9fc276e584ce4db2dfe2257409615e", "filename": "gcc/doc/tm.texi", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8dffd0e9621d93faabb6676e7a018cb5267dfa22/gcc%2Fdoc%2Ftm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8dffd0e9621d93faabb6676e7a018cb5267dfa22/gcc%2Fdoc%2Ftm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Ftm.texi?ref=8dffd0e9621d93faabb6676e7a018cb5267dfa22", "patch": "@@ -3294,6 +3294,12 @@ someone decided it was a good idea to use that register number to\n terminate the stack backtrace.  New ports should avoid this.\n @end defmac\n \n+@defmac DWARF_VERSION_DEFAULT\n+A C expression whose value is the default dwarf standard version we'll honor\n+and advertise when generating dwarf debug information, in absence of\n+an explicit @option{-gdwarf-@var{version}} option on the command line.\n+@end defmac\n+\n @deftypefn {Target Hook} void TARGET_DWARF_HANDLE_FRAME_UNSPEC (const char *@var{label}, rtx @var{pattern}, int @var{index})\n This target hook allows the backend to emit frame-related insns that\n contain UNSPECs or UNSPEC_VOLATILEs.  The DWARF 2 call frame debugging"}, {"sha": "501ddf147e40b68b757269f703f58d1091b9e06f", "filename": "gcc/doc/tm.texi.in", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8dffd0e9621d93faabb6676e7a018cb5267dfa22/gcc%2Fdoc%2Ftm.texi.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8dffd0e9621d93faabb6676e7a018cb5267dfa22/gcc%2Fdoc%2Ftm.texi.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Ftm.texi.in?ref=8dffd0e9621d93faabb6676e7a018cb5267dfa22", "patch": "@@ -2575,6 +2575,12 @@ someone decided it was a good idea to use that register number to\n terminate the stack backtrace.  New ports should avoid this.\n @end defmac\n \n+@defmac DWARF_VERSION_DEFAULT\n+A C expression whose value is the default dwarf standard version we'll honor\n+and advertise when generating dwarf debug information, in absence of\n+an explicit @option{-gdwarf-@var{version}} option on the command line.\n+@end defmac\n+\n @hook TARGET_DWARF_HANDLE_FRAME_UNSPEC\n \n @hook TARGET_DWARF_POLY_INDETERMINATE_VALUE"}]}