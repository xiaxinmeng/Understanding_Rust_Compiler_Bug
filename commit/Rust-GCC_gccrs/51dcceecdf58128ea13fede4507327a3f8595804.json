{"sha": "51dcceecdf58128ea13fede4507327a3f8595804", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTFkY2NlZWNkZjU4MTI4ZWExM2ZlZGU0NTA3MzI3YTNmODU5NTgwNA==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-08-04T12:51:00Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-08-04T12:51:00Z"}, "message": "[multiple changes]\n\n2014-08-04  Hristian Kirtchev  <kirtchev@adacore.com>\n\n\t* sem_prag.adb (Analyze_Pragma): Ensure that an\n\tinternally generated spec for a stand alone body is recognized\n\tas a proper context for pragma SPARK_Mode.\n\n2014-08-04  Robert Dewar  <dewar@adacore.com>\n\n\t* erroutc.adb (Delete_Msg): Do not decrement Warnings_Treated_As_Errors.\n\n2014-08-04  Arnaud Charlet  <charlet@adacore.com>\n\n\t* adabkend.adb (Scan_Back_End_Switches): Ignore extra -o\n\twhen -gnatO has already been specified, for compatibility\n\twith gcc driver.\n\t(Scan_Compiler_Args): Do not call Set_Output_Object_File_Name in\n\tcodepeer mode.\n\t* g-expect.ads: Fix typo.\n\n2014-08-04  Thomas Quinot  <quinot@adacore.com>\n\n\t* exp_ch4.adb (Insert_Dereference_Action): the actual Size\n\tmust account for the bounds template if the designated type is\n\tan unconstrained array.\n\nFrom-SVN: r213579", "tree": {"sha": "d7af2bc049447bc647f5bff8d75144874d2eba8d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d7af2bc049447bc647f5bff8d75144874d2eba8d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/51dcceecdf58128ea13fede4507327a3f8595804", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/51dcceecdf58128ea13fede4507327a3f8595804", "html_url": "https://github.com/Rust-GCC/gccrs/commit/51dcceecdf58128ea13fede4507327a3f8595804", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/51dcceecdf58128ea13fede4507327a3f8595804/comments", "author": null, "committer": null, "parents": [{"sha": "df9107226f53d4ba405c2fb4c5d5c9ee2aaaec1f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/df9107226f53d4ba405c2fb4c5d5c9ee2aaaec1f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/df9107226f53d4ba405c2fb4c5d5c9ee2aaaec1f"}], "stats": {"total": 111, "additions": 80, "deletions": 31}, "files": [{"sha": "02b59b2bc4cae9f9186a6995c0d03f1dabc66950", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/51dcceecdf58128ea13fede4507327a3f8595804/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/51dcceecdf58128ea13fede4507327a3f8595804/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=51dcceecdf58128ea13fede4507327a3f8595804", "patch": "@@ -1,3 +1,28 @@\n+2014-08-04  Hristian Kirtchev  <kirtchev@adacore.com>\n+\n+\t* sem_prag.adb (Analyze_Pragma): Ensure that an\n+\tinternally generated spec for a stand alone body is recognized\n+\tas a proper context for pragma SPARK_Mode.\n+\n+2014-08-04  Robert Dewar  <dewar@adacore.com>\n+\n+\t* erroutc.adb (Delete_Msg): Do not decrement Warnings_Treated_As_Errors.\n+\n+2014-08-04  Arnaud Charlet  <charlet@adacore.com>\n+\n+\t* adabkend.adb (Scan_Back_End_Switches): Ignore extra -o\n+\twhen -gnatO has already been specified, for compatibility\n+\twith gcc driver.\n+\t(Scan_Compiler_Args): Do not call Set_Output_Object_File_Name in\n+\tcodepeer mode.\n+\t* g-expect.ads: Fix typo.\n+\n+2014-08-04  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* exp_ch4.adb (Insert_Dereference_Action): the actual Size\n+\tmust account for the bounds template if the designated type is\n+\tan unconstrained array.\n+\n 2014-08-04  Hristian Kirtchev  <kirtchev@adacore.com>\n \n \t* a-cfhama.adb, a-cfhase.adb, a-cforma.adb, a-cforse.adb Add"}, {"sha": "1a420009100ed2f87e8dea803057c6e7eaf07a51", "filename": "gcc/ada/adabkend.adb", "status": "modified", "additions": 15, "deletions": 5, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/51dcceecdf58128ea13fede4507327a3f8595804/gcc%2Fada%2Fadabkend.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/51dcceecdf58128ea13fede4507327a3f8595804/gcc%2Fada%2Fadabkend.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fadabkend.adb?ref=51dcceecdf58128ea13fede4507327a3f8595804", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---                     Copyright (C) 2001-2013, AdaCore                     --\n+--                     Copyright (C) 2001-2014, AdaCore                     --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -108,7 +108,16 @@ package body Adabkend is\n \n          elsif Switch_Chars (First .. Last) = \"o\" then\n             if First = Last then\n-               Opt.Output_File_Name_Present := True;\n+               if Opt.Output_File_Name_Present then\n+\n+                  --  Ignore extra -o when -gnatO has already been specified\n+\n+                  Next_Arg := Next_Arg + 1;\n+\n+               else\n+                  Opt.Output_File_Name_Present := True;\n+               end if;\n+\n                return;\n             else\n                Fail (\"invalid switch: \" & Switch_Chars);\n@@ -237,10 +246,11 @@ package body Adabkend is\n \n                --  In GNATprove_Mode, such an object file is never written, and\n                --  the call to Set_Output_Object_File_Name may fail (e.g. when\n-               --  the object file name does not have the expected suffix). So\n-               --  we skip that call when GNATprove_Mode is set.\n+               --  the object file name does not have the expected suffix).\n+               --  So we skip that call when GNATprove_Mode is set. Same for\n+               --  CodePeer_Mode.\n \n-               elsif GNATprove_Mode then\n+               elsif GNATprove_Mode or CodePeer_Mode then\n                   Output_File_Name_Seen := True;\n \n                else"}, {"sha": "11eef8a9593ab82228e65b28497f3a8a7b4505a6", "filename": "gcc/ada/erroutc.adb", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/51dcceecdf58128ea13fede4507327a3f8595804/gcc%2Fada%2Ferroutc.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/51dcceecdf58128ea13fede4507327a3f8595804/gcc%2Fada%2Ferroutc.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ferroutc.adb?ref=51dcceecdf58128ea13fede4507327a3f8595804", "patch": "@@ -141,10 +141,9 @@ package body Erroutc is\n             if Errors.Table (D).Warn or else Errors.Table (D).Style then\n                Warnings_Detected := Warnings_Detected - 1;\n \n-               if Errors.Table (D).Warn_Err then\n-                  Warnings_Treated_As_Errors :=\n-                    Warnings_Treated_As_Errors - 1;\n-               end if;\n+               --  Note: we do not need to decrement Warnings_Treated_As_Errors\n+               --  because this only gets incremented if we actually output the\n+               --  message, which we won't do if we are deleting it here!\n \n             else\n                Total_Errors_Detected := Total_Errors_Detected - 1;"}, {"sha": "dfa22bd70aea7431ee3ea322f03245ab6fd06a2c", "filename": "gcc/ada/exp_ch4.adb", "status": "modified", "additions": 28, "deletions": 15, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/51dcceecdf58128ea13fede4507327a3f8595804/gcc%2Fada%2Fexp_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/51dcceecdf58128ea13fede4507327a3f8595804/gcc%2Fada%2Fexp_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch4.adb?ref=51dcceecdf58128ea13fede4507327a3f8595804", "patch": "@@ -11569,11 +11569,12 @@ package body Exp_Ch4 is\n       Pool  : constant Entity_Id  := Associated_Storage_Pool (Typ);\n       Pnod  : constant Node_Id    := Parent (N);\n \n-      Addr  : Entity_Id;\n-      Alig  : Entity_Id;\n-      Deref : Node_Id;\n-      Size  : Entity_Id;\n-      Stmt  : Node_Id;\n+      Addr      : Entity_Id;\n+      Alig      : Entity_Id;\n+      Deref     : Node_Id;\n+      Size      : Entity_Id;\n+      Size_Bits : Node_Id;\n+      Stmt      : Node_Id;\n \n    --  Start of processing for Insert_Dereference_Action\n \n@@ -11624,23 +11625,36 @@ package body Exp_Ch4 is\n           Prefix => Duplicate_Subexpr_Move_Checks (N));\n       Set_Has_Dereference_Action (Deref);\n \n-      Size := Make_Temporary (Loc, 'S');\n+      Size_Bits :=\n+        Make_Attribute_Reference (Loc,\n+          Prefix         => Deref,\n+          Attribute_Name => Name_Size);\n \n+      --  Special case of an unconstrained array: need to add descriptor size\n+\n+      if Is_Array_Type (Desig)\n+        and then not Is_Constrained (First_Subtype (Desig))\n+      then\n+         Size_Bits :=\n+           Make_Op_Add (Loc,\n+             Left_Opnd  =>\n+               Make_Attribute_Reference (Loc,\n+                 Prefix         =>\n+                   New_Occurrence_Of (First_Subtype (Desig), Loc),\n+                 Attribute_Name => Name_Descriptor_Size),\n+             Right_Opnd => Size_Bits);\n+      end if;\n+\n+      Size := Make_Temporary (Loc, 'S');\n       Insert_Action (N,\n         Make_Object_Declaration (Loc,\n           Defining_Identifier => Size,\n-\n           Object_Definition   =>\n             New_Occurrence_Of (RTE (RE_Storage_Count), Loc),\n-\n           Expression          =>\n             Make_Op_Divide (Loc,\n-              Left_Opnd   =>\n-                Make_Attribute_Reference (Loc,\n-                  Prefix         => Deref,\n-                  Attribute_Name => Name_Size),\n-               Right_Opnd =>\n-                 Make_Integer_Literal (Loc, System_Storage_Unit))));\n+              Left_Opnd  => Size_Bits,\n+              Right_Opnd => Make_Integer_Literal (Loc, System_Storage_Unit))));\n \n       --  Calculate the alignment of the dereferenced object. Generate:\n       --    Alig : constant Storage_Count := <N>.all'Alignment;\n@@ -11651,7 +11665,6 @@ package body Exp_Ch4 is\n       Set_Has_Dereference_Action (Deref);\n \n       Alig := Make_Temporary (Loc, 'A');\n-\n       Insert_Action (N,\n         Make_Object_Declaration (Loc,\n           Defining_Identifier => Alig,"}, {"sha": "0dc634110ee57253f3a5951aa846ad076c63e9df", "filename": "gcc/ada/g-expect.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/51dcceecdf58128ea13fede4507327a3f8595804/gcc%2Fada%2Fg-expect.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/51dcceecdf58128ea13fede4507327a3f8595804/gcc%2Fada%2Fg-expect.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-expect.ads?ref=51dcceecdf58128ea13fede4507327a3f8595804", "patch": "@@ -178,7 +178,7 @@ package GNAT.Expect is\n    --  till Expect matches), but this is slower.\n    --\n    --  If Err_To_Out is True, then the standard error of the spawned process is\n-   --  connected to the standard output. This is the only way to get the Except\n+   --  connected to the standard output. This is the only way to get the Expect\n    --  subprograms to also match on output on standard error.\n    --\n    --  Invalid_Process is raised if the process could not be spawned."}, {"sha": "dc084f9e13e7240cef0abc974cf77c62e56708bb", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 8, "deletions": 6, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/51dcceecdf58128ea13fede4507327a3f8595804/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/51dcceecdf58128ea13fede4507327a3f8595804/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=51dcceecdf58128ea13fede4507327a3f8595804", "patch": "@@ -19304,12 +19304,9 @@ package body Sem_Prag is\n                         raise Pragma_Exit;\n                      end if;\n \n-                  --  Skip internally generated code\n-\n-                  elsif not Comes_From_Source (Stmt) then\n-                     null;\n-\n-                  --  The pragma applies to a [generic] subprogram declaration\n+                  --  The pragma applies to a [generic] subprogram declaration.\n+                  --  Note that this case covers an internally generated spec\n+                  --  for a stand alone body.\n \n                   --    [generic]\n                   --    procedure Proc ...;\n@@ -19329,6 +19326,11 @@ package body Sem_Prag is\n                      Set_SPARK_Pragma_Inherited (Spec_Id, False);\n                      return;\n \n+                  --  Skip internally generated code\n+\n+                  elsif not Comes_From_Source (Stmt) then\n+                     null;\n+\n                   --  Otherwise the pragma does not apply to a legal construct\n                   --  or it does not appear at the top of a declarative or a\n                   --  statement list. Issue an error and stop the analysis."}]}