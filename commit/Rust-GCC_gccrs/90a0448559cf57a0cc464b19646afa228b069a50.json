{"sha": "90a0448559cf57a0cc464b19646afa228b069a50", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTBhMDQ0ODU1OWNmNTdhMGNjNDY0YjE5NjQ2YWZhMjI4YjA2OWE1MA==", "commit": {"author": {"name": "Kresten Krab Thorup", "email": "krab@gcc.gnu.org", "date": "1993-05-05T15:52:00Z"}, "committer": {"name": "Kresten Krab Thorup", "email": "krab@gcc.gnu.org", "date": "1993-05-05T15:52:00Z"}, "message": "undid freed+error patch\n\nFrom-SVN: r4336", "tree": {"sha": "4e271cb7eea35b03d3cc54c6b8aeacc39b6fdfc9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4e271cb7eea35b03d3cc54c6b8aeacc39b6fdfc9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/90a0448559cf57a0cc464b19646afa228b069a50", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/90a0448559cf57a0cc464b19646afa228b069a50", "html_url": "https://github.com/Rust-GCC/gccrs/commit/90a0448559cf57a0cc464b19646afa228b069a50", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/90a0448559cf57a0cc464b19646afa228b069a50/comments", "author": null, "committer": null, "parents": [{"sha": "6731a3e3a0a29ce66cc04e00526562246b80f16a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6731a3e3a0a29ce66cc04e00526562246b80f16a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6731a3e3a0a29ce66cc04e00526562246b80f16a"}], "stats": {"total": 60, "additions": 2, "deletions": 58}, "files": [{"sha": "66c2029ea878812eb3234a2484ba852cc008c397", "filename": "gcc/objc/Makefile.in", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/90a0448559cf57a0cc464b19646afa228b069a50/gcc%2Fobjc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/90a0448559cf57a0cc464b19646afa228b069a50/gcc%2Fobjc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2FMakefile.in?ref=90a0448559cf57a0cc464b19646afa228b069a50", "patch": "@@ -53,15 +53,15 @@ all:\n \tcd ..; $(MAKE) sublibobjc.a\n \n OBJC_O = hash.o sarray.o class.o sendmsg.o init.o archive.o \\\n-         selector.o objects.o misc.o Object.o Protocol.o FREED.o\n+         selector.o objects.o misc.o Object.o Protocol.o\n \n libobjc.a: $(OBJC_O)\n \t-rm -f libobjc.a\n \t$(AR) rc libobjc.a $(OBJC_O)\n # ranlib is run in the parent directory's makefile.\n \n OBJC_H = hash.h list.h sarray.h objc.h \\\n-         objc-api.h error.h \\\n+         objc-api.h \\\n \t Object.h Protocol.h mutex.h \\\n \t typedstream.h\n "}, {"sha": "917fed55a877310754571eec8cffefa4d573a8b6", "filename": "gcc/objc/Object.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/90a0448559cf57a0cc464b19646afa228b069a50/gcc%2Fobjc%2FObject.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/90a0448559cf57a0cc464b19646afa228b069a50/gcc%2Fobjc%2FObject.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2FObject.h?ref=90a0448559cf57a0cc464b19646afa228b069a50", "patch": "@@ -102,7 +102,6 @@ the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n         /* Enforcing intentions */\n - subclassResponsibility:(SEL)aSel;\n - notImplemented:(SEL)aSel;\n-- shouldNotImplement:(SEL)aSel;\n \n         /* Error handling */\n - doesNotRecognize:(SEL)aSel;"}, {"sha": "79bbdd8d72518a352a6c5ca8d7d0a98f3afb3cde", "filename": "gcc/objc/Object.m", "status": "modified", "additions": 0, "deletions": 11, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/90a0448559cf57a0cc464b19646afa228b069a50/gcc%2Fobjc%2FObject.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/90a0448559cf57a0cc464b19646afa228b069a50/gcc%2Fobjc%2FObject.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2FObject.m?ref=90a0448559cf57a0cc464b19646afa228b069a50", "patch": "@@ -27,8 +27,6 @@\n #include \"objc/Protocol.h\"\n #include \"objc/objc-api.h\"\n \n-@class FREED;\n-\n #include \"gstdarg.h\"\n extern void (*_objc_error)(id object, const char *format, va_list);\n \n@@ -60,10 +58,6 @@ @implementation Object\n \n - free\n {\n-  static Class* freedClass = 0;\n-  if (!freedClass)\n-    freedClass = [FREED class];\n-  isa = freedClass;\n   return object_dispose(self);\n }\n \n@@ -299,11 +293,6 @@ - (Class*)transmuteClassTo:(Class*)aClassObject\n                      object_get_class_name(self), sel_get_name(aSel)];\n }\n \n-- shouldNotImplement\n-{\n-  return [self error:\"should not implement %s\", sel_get_name(aSel)];\n-}\n-\n - error:(const char *)aString, ...\n {\n #define FMT \"error: %s (%s)\\n%s\\n\""}, {"sha": "6b6b3429822586cfc408b0ccced9cd34bb3e1ddc", "filename": "gcc/objc/misc.c", "status": "modified", "additions": 0, "deletions": 44, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/90a0448559cf57a0cc464b19646afa228b069a50/gcc%2Fobjc%2Fmisc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/90a0448559cf57a0cc464b19646afa228b069a50/gcc%2Fobjc%2Fmisc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2Fmisc.c?ref=90a0448559cf57a0cc464b19646afa228b069a50", "patch": "@@ -25,7 +25,6 @@ You should have received a copy of the GNU General Public License along with\n    covered by the GNU General Public License.  */\n \n #include \"runtime.h\"\n-#include \"error.h\"\n \n void objc_error(id object, const char* fmt, va_list);\n \n@@ -71,46 +70,3 @@ __objc_xcalloc(size_t nelem, size_t size)\n     objc_fatal(\"Virtual memory exhausted\\n\");\n   return res;\n }\n-\n-struct objc_ex_handler __ex_base_handler = {0, 0, 0, 0, 0 };\n-struct objc_ex_handler* __ex_last_handler = &__ex_base_handler;\n-\n-objc_uncaught_exception_handler _objc_uncaught_exception_handler = 0;\n-\n-void\n-__objc_add_handler(struct objc_ex_handler* hdlr)\n-{\n-  hdlr->ex_prev = __ex_last_handler;\n-  __ex_last_handler = hdlr;\n-}\n-\n-void \n-__objc_remove_handler(struct objc_ex_handler* hdlr)\n-{\n-  __ex_last_handler = hdlr->ex_prev;\n-}\n-\n-#ifndef __STRICT_ANSI__\n-__volatile\n-#endif\n-extern void __objc_raise_error(int code, const void* data1, const void* data2)\n-{\n-  if (__ex_last_handler->ex_prev) \n-    {\n-      __ex_last_handler->code = code;       \n-      __ex_last_handler->data1 = data1;     \n-      __ex_last_handler->data2 = data2;     \n-      longjmp (__ex_last_handler->ex_env, 1);\n-    } \n-  else\n-    {\n-      if (_objc_uncaught_exception_handler)\n-\t(*_objc_uncaught_exception_handler)(code, data1, data2);\n-      else\n-\t{\n-\t  printf (\"uncaught exception: code=%d, data1=%x, data2=%x\\n\",\n-\t\t  code, data1, data2);\n-\t  abort();\n-\t}\n-    }\n-}"}]}