{"sha": "8b1edcee4af696bbab9951d9864c9d3f0a636cf0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGIxZWRjZWU0YWY2OTZiYmFiOTk1MWQ5ODY0YzlkM2YwYTYzNmNmMA==", "commit": {"author": {"name": "Per Bothner", "email": "per@bothner.com", "date": "2001-03-19T16:41:59Z"}, "committer": {"name": "Per Bothner", "email": "bothner@gcc.gnu.org", "date": "2001-03-19T16:41:59Z"}, "message": "jvspec.c (lang_specific_driver): Check for .zip and .jar files.\n\n\n\t* jvspec.c (lang_specific_driver):  Check for .zip and .jar files.\n\tAdd constructed filelist-file at end, following -xjava.  Thus any .o\n\tand library files are not affected by the -xjava.  Also wrap\n\texplicut @FILE with -xjava and -xnone.\n\nFrom-SVN: r40621", "tree": {"sha": "ecaad04667f3b90564eab3e58a97d56f9d164aea", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ecaad04667f3b90564eab3e58a97d56f9d164aea"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8b1edcee4af696bbab9951d9864c9d3f0a636cf0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8b1edcee4af696bbab9951d9864c9d3f0a636cf0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8b1edcee4af696bbab9951d9864c9d3f0a636cf0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8b1edcee4af696bbab9951d9864c9d3f0a636cf0/comments", "author": {"login": "PerBothner", "id": 10293361, "node_id": "MDQ6VXNlcjEwMjkzMzYx", "avatar_url": "https://avatars.githubusercontent.com/u/10293361?v=4", "gravatar_id": "", "url": "https://api.github.com/users/PerBothner", "html_url": "https://github.com/PerBothner", "followers_url": "https://api.github.com/users/PerBothner/followers", "following_url": "https://api.github.com/users/PerBothner/following{/other_user}", "gists_url": "https://api.github.com/users/PerBothner/gists{/gist_id}", "starred_url": "https://api.github.com/users/PerBothner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/PerBothner/subscriptions", "organizations_url": "https://api.github.com/users/PerBothner/orgs", "repos_url": "https://api.github.com/users/PerBothner/repos", "events_url": "https://api.github.com/users/PerBothner/events{/privacy}", "received_events_url": "https://api.github.com/users/PerBothner/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "6bc5f6cb54247182dd405f10bd77033499bc13ad", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6bc5f6cb54247182dd405f10bd77033499bc13ad", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6bc5f6cb54247182dd405f10bd77033499bc13ad"}], "stats": {"total": 75, "additions": 45, "deletions": 30}, "files": [{"sha": "b5c1dcd3eab267bee0289299f3d5759e13874aa4", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 10, "deletions": 3, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8b1edcee4af696bbab9951d9864c9d3f0a636cf0/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8b1edcee4af696bbab9951d9864c9d3f0a636cf0/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=8b1edcee4af696bbab9951d9864c9d3f0a636cf0", "patch": "@@ -1,3 +1,10 @@\n+2001-03-19  Per Bothner  <per@bothner.com>\n+\n+\t* jvspec.c (lang_specific_driver):  Check for .zip and .jar files.\n+\tAdd constructed filelist-file at end, following -xjava.  Thus any .o\n+\tand library files are not affected by the -xjava.  Also wrap\n+\texplicut @FILE with -xjava and -xnone.\n+\n 2001-03-19  Andrew Haley  <aph@cambridge.redhat.com>\n \n         * class.c (build_static_field_ref): Call make_decl_rtl() after\n@@ -29,10 +36,10 @@\n \t* parse.h (BLOCK_EXPR_ORIGIN):  Removed macro.\n \t* parse.y (declare_local_variables, maybe_absorb_scoping_blocks):\n \tUse BLOCK_IS_IMPLICIT rather than BLOCK_EXPR_ORIGIN.\n-\t\n+\n \t* jcf-parse.c (yyparse):  Set/reset input_filename for source file.\n \t* parse.y (java_expand_classes):  Likewise.\n-\t\n+\n \t* parse.y (expand_start_java_method):  Was only called once and had a\n \tmisleading name, so inline in caller java_complete_expand_method.\n \t(enter_a_block):  Likewise inline in enter_block and remove.\n@@ -68,7 +75,7 @@\n \t(get_dispatch_table): Likewise.\n \n \t* decl.c (push_jvm_slot): Use COPY_DECL_RTL, DECL_RTL_SET_P, etc.\n-\t\n+\n 2001-03-07  Tom Tromey  <tromey@redhat.com>\n \n \t* config-lang.in (lang_requires): Define."}, {"sha": "9a3efeacd5f366b4d7e84bd4b9a995d35dfe628c", "filename": "gcc/java/jvspec.c", "status": "modified", "additions": 35, "deletions": 27, "changes": 62, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8b1edcee4af696bbab9951d9864c9d3f0a636cf0/gcc%2Fjava%2Fjvspec.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8b1edcee4af696bbab9951d9864c9d3f0a636cf0/gcc%2Fjava%2Fjvspec.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fjvspec.c?ref=8b1edcee4af696bbab9951d9864c9d3f0a636cf0", "patch": "@@ -38,8 +38,10 @@ The Free Software Foundation is independent of Sun Microsystems, Inc.  */\n #define JAVA_FILE_ARG\t(1<<3)\n /* True if this arg is a .class input file name. */\n #define CLASS_FILE_ARG\t(1<<4)\n+/* True if this arg is a .zip or .jar input file name. */\n+#define ZIP_FILE_ARG\t(1<<5)\n /* True if this arg is @FILE - where FILE contains a list of filenames. */\n-#define INDIRECT_FILE_ARG (1<<5)\n+#define INDIRECT_FILE_ARG (1<<6)\n \n static char *find_spec_file\tPARAMS ((const char *));\n \n@@ -117,21 +119,18 @@ lang_specific_driver (in_argc, in_argv, in_added_libraries)\n   /* Number of .java and .class source file arguments seen. */\n   int java_files_count = 0;\n   int class_files_count = 0;\n+  /* Number of .zip or .jar file arguments seen. */\n+  int zip_files_count = 0;\n   /* Number of '@FILES' arguments seen. */\n   int indirect_files_count = 0;\n \n-  /* Cumulative length of the  .java and .class source file names. */\n-  int java_files_length = 0;\n-  int class_files_length = 0;\n-\n   /* Name of file containing list of files to compile. */\n   char *filelist_filename;\n \n   FILE *filelist_file;\n \n   /* The number of arguments being added to what's in argv, other than\n-     libraries.  We use this to track the number of times we've inserted\n-     -xc++/-xnone.  */\n+     libraries.  */\n   int added = 2;\n \n   /* Used to track options that take arguments, so we don't go wrapping\n@@ -327,21 +326,28 @@ lang_specific_driver (in_argc, in_argv, in_added_libraries)\n \t    {\n \t      args[i] |= INDIRECT_FILE_ARG;\n \t      indirect_files_count++;\n+\t      added += 2;  /* for -xjava and -xnone */\n \t    }\n \n \t  len = strlen (argv[i]);\n \t  if (len > 5 && strcmp (argv[i] + len - 5, \".java\") == 0)\n \t    {\n \t      args[i] |= JAVA_FILE_ARG;\n \t      java_files_count++;\n-\t      java_files_length += len;\n \t      last_input_index = i;\n \t    }\n \t  if (len > 6 && strcmp (argv[i] + len - 6, \".class\") == 0)\n \t    {\n \t      args[i] |= CLASS_FILE_ARG;\n \t      class_files_count++;\n-\t      class_files_length += len;\n+\t      last_input_index = i;\n+\t    }\n+\t  if (len > 4\n+\t      && (strcmp (argv[i] + len - 4, \".zip\") == 0\n+\t\t  || strcmp (argv[i] + len - 4, \".jar\") == 0))\n+\t    {\n+\t      args[i] |= ZIP_FILE_ARG;\n+\t      zip_files_count++;\n \t      last_input_index = i;\n \t    }\n \t}\n@@ -357,20 +363,21 @@ lang_specific_driver (in_argc, in_argv, in_added_libraries)\n   if (saw_C)\n     {\n       num_args += 3;\n-      if (class_files_count > 0)\n+      if (class_files_count + zip_files_count > 0)\n \t{\n \t  error (\"Warning: already-compiled .class files ignored with -C\"); \n+\t  num_args -= class_files_count + zip_files_count;\n \t  class_files_count = 0;\n-\t  num_args -= class_files_count;\n+\t  zip_files_count = 0;\n \t}\n       num_args += 2;  /* For -o NONE. */\n       if (saw_o)\n \tfatal (\"cannot specify both -C and -o\");\n     }\n-  if ((saw_o && java_files_count + class_files_count > 1)\n-      || (saw_C && java_files_count > 1))\n-    combine_inputs = 1;\n-  if (class_files_count > 1)\n+  if ((saw_o && java_files_count + class_files_count + zip_files_count > 1)\n+      || (saw_C && java_files_count > 1)\n+      || (indirect_files_count > 0\n+\t  && java_files_count + class_files_count + zip_files_count > 0))\n     combine_inputs = 1;\n \n   if (combine_inputs)\n@@ -382,8 +389,8 @@ lang_specific_driver (in_argc, in_argv, in_added_libraries)\n       filelist_file = fopen (filelist_filename, \"w\");\n       if (filelist_file == NULL)\n \tpfatal_with_name (filelist_filename);\n-      num_args -= java_files_count + class_files_count;\n-      num_args++;  /* Add one for the combined arg. */\n+      num_args -= java_files_count + class_files_count + zip_files_count;\n+      num_args += 2;  /* for the combined arg and \"-xjava\" */\n     }\n   /* If we know we don't have to do anything, bail now.  */\n #if 0\n@@ -403,7 +410,7 @@ lang_specific_driver (in_argc, in_argv, in_added_libraries)\n   num_args++;\n \n   if (combine_inputs || indirect_files_count > 0)\n-    num_args += 2;\n+    num_args += 1; /* for \"-ffilelist-file\" */\n   if (combine_inputs && indirect_files_count > 0)\n     fatal(\"using both @FILE with multiple files not implemented\");\n \n@@ -420,12 +427,6 @@ lang_specific_driver (in_argc, in_argv, in_added_libraries)\n \n   for (i = 0; i < argc; i++, j++)\n     {\n-      if (i == 1 && (combine_inputs || indirect_files_count > 0))\n-\t{\n-\t  arglist[j++] = \"-ffilelist-file\";\n-\t  arglist[j++] = \"-xjava\";\n-\t}\n-\n       arglist[j] = argv[i];\n \n       if ((args[i] & PARAM_ARG) || i == 0)\n@@ -465,16 +466,19 @@ lang_specific_driver (in_argc, in_argv, in_added_libraries)\n \n       if ((args[i] & INDIRECT_FILE_ARG) != 0)\n \t{\n-\t  arglist[j] = argv[i]+1;  /* Drop '@'. */\n+\t  arglist[j++] = \"-xjava\";\n+\t  arglist[j++] = argv[i]+1;  /* Drop '@'. */\n+\t  arglist[j] = \"-xnone\";\n \t}\n \n-      if ((args[i] & CLASS_FILE_ARG) && saw_C)\n+      if ((args[i] & (CLASS_FILE_ARG|ZIP_FILE_ARG)) && saw_C)\n \t{\n \t  --j;\n \t  continue;\n \t}\n \n-      if (combine_inputs && (args[i] & (CLASS_FILE_ARG|JAVA_FILE_ARG)) != 0)\n+      if (combine_inputs\n+\t  && (args[i] & (CLASS_FILE_ARG|JAVA_FILE_ARG|ZIP_FILE_ARG)) != 0)\n \t{\n \t  fputs (argv[i], filelist_file);\n \t  fputc ('\\n', filelist_file);\n@@ -483,10 +487,14 @@ lang_specific_driver (in_argc, in_argv, in_added_libraries)\n \t}\n   }\n \n+  if (combine_inputs || indirect_files_count > 0)\n+    arglist[j++] = \"-ffilelist-file\";\n+\n   if (combine_inputs)\n     {\n       if (fclose (filelist_file))\n \tpfatal_with_name (filelist_filename);\n+      arglist[j++] = \"-xjava\";\n       arglist[j++] = filelist_filename;\n     }\n "}]}