{"sha": "651b8a50a6d1dddcf39c28f72110b82f7eae918d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjUxYjhhNTBhNmQxZGRkY2YzOWMyOGY3MjExMGI4MmY3ZWFlOTE4ZA==", "commit": {"author": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2021-01-06T00:16:55Z"}, "committer": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2021-01-06T00:16:55Z"}, "message": "Daily bump.", "tree": {"sha": "0c900fbb8f5c1e51c54076cc1e0e91887a781431", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0c900fbb8f5c1e51c54076cc1e0e91887a781431"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/651b8a50a6d1dddcf39c28f72110b82f7eae918d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/651b8a50a6d1dddcf39c28f72110b82f7eae918d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/651b8a50a6d1dddcf39c28f72110b82f7eae918d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/651b8a50a6d1dddcf39c28f72110b82f7eae918d/comments", "author": null, "committer": null, "parents": [{"sha": "ad92bf4b165935b58195825dc8f089f53fd2710b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ad92bf4b165935b58195825dc8f089f53fd2710b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ad92bf4b165935b58195825dc8f089f53fd2710b"}], "stats": {"total": 499, "additions": 498, "deletions": 1}, "files": [{"sha": "bd87d5fc6eeb7d517ea3cc9f3e63f438c1ae18ef", "filename": "ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/651b8a50a6d1dddcf39c28f72110b82f7eae918d/ChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/651b8a50a6d1dddcf39c28f72110b82f7eae918d/ChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/ChangeLog?ref=651b8a50a6d1dddcf39c28f72110b82f7eae918d", "patch": "@@ -1,3 +1,9 @@\n+2021-01-05  Samuel Thibault  <samuel.thibault@ens-lyon.org>\n+\n+\t* libtool.m4: Match gnu* along other GNU systems.\n+\t* libgo/config/libtool.m4: Match gnu* along other GNU systems.\n+\t* libgo/configure: Re-generate.\n+\n 2021-01-04  Philipp Tomsich  <philipp.tomsich@vrull.eu>\n \n \t* MAINTAINERS: Update my email address."}, {"sha": "9bc7e31b3d620f4677ec9251a346915a583093ab", "filename": "c++tools/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/651b8a50a6d1dddcf39c28f72110b82f7eae918d/c%2B%2Btools%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/651b8a50a6d1dddcf39c28f72110b82f7eae918d/c%2B%2Btools%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/c%2B%2Btools%2FChangeLog?ref=651b8a50a6d1dddcf39c28f72110b82f7eae918d", "patch": "@@ -1,3 +1,12 @@\n+2021-01-05  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n+\n+\tPR c++/98316\n+\t* configure.ac: Include ../config/ax_lib_socket_nsl.m4.\n+\t(NETLIBS): Determine using AX_LIB_SOCKET_NSL.\n+\t* configure: Regenerate.\n+\t* Makefile.in (NETLIBS): Define.\n+\t(g++-mapper-server$(exeext)): Add $(NETLIBS).\n+\n 2021-01-04  Nathan Sidwell  <nathan@acm.org>\n \n \t* resolver.cc (module_resolver::cmi_response): Remove"}, {"sha": "ccd13a89585abb5a783265012b20e3b632df4c15", "filename": "config/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/651b8a50a6d1dddcf39c28f72110b82f7eae918d/config%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/651b8a50a6d1dddcf39c28f72110b82f7eae918d/config%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/config%2FChangeLog?ref=651b8a50a6d1dddcf39c28f72110b82f7eae918d", "patch": "@@ -1,3 +1,8 @@\n+2021-01-05  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n+\n+\tPR c++/98316\n+\t* ax_lib_socket_nsl.m4: Import from autoconf-archive.\n+\n 2021-01-03  Mike Frysinger  <vapier@gentoo.org>\n \n \t* pkg.m4: New file from pkg-config-0.29.2."}, {"sha": "1bd59221284238b071ad11b8c657f111833f3c65", "filename": "gcc/ChangeLog", "status": "modified", "additions": 184, "deletions": 0, "changes": 184, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/651b8a50a6d1dddcf39c28f72110b82f7eae918d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/651b8a50a6d1dddcf39c28f72110b82f7eae918d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=651b8a50a6d1dddcf39c28f72110b82f7eae918d", "patch": "@@ -1,3 +1,187 @@\n+2021-01-06  Gerald Pfeifer  <gerald@pfeifer.com>\n+\n+\tRevert:\n+\t2020-12-28  Gerald Pfeifer  <gerald@pfeifer.com>\n+\n+\t* doc/standards.texi (HSAIL): Remove section.\n+\n+2021-01-05  Samuel Thibault  <samuel.thibault@ens-lyon.org>\n+\n+\t* configure: Re-generate.\n+\n+2021-01-05  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* doc/invoke.texi (-std=c++20): Adjust for the publication of\n+\tISO 14882:2020 standard.\n+\t* doc/standards.texi: Likewise.\n+\n+2021-01-05  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/94802\n+\t* expr.h (maybe_optimize_sub_cmp_0): Declare.\n+\t* expr.c: Include tree-pretty-print.h and flags.h.\n+\t(maybe_optimize_sub_cmp_0): New function.\n+\t(do_store_flag): Use it.\n+\t* cfgexpand.c (expand_gimple_cond): Likewise.\n+\n+2021-01-05  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\t* mux-utils.h (pointer_mux::m_ptr): Tweak description of contents.\n+\t* rtlanal.c (simple_regno_set): Tweak description to clarify the\n+\tRMW condition.\n+\n+2021-01-05  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/98516\n+\t* tree-vect-slp.c (vect_optimize_slp): Permute the incoming\n+\tlanes when materializing on a VEC_PERM node.\n+\t(vectorizable_slp_permutation): Dump the permute properly.\n+\n+2021-01-05  Richard Biener  <rguenther@suse.de>\n+\n+\t* tree-vect-slp.c (vect_slp_region): Move debug counter\n+\tto cover individual subgraphs.\n+\n+2021-01-05  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/98428\n+\t* tree-vect-slp.c (vect_build_slp_tree_1): Properly reject\n+\tvector lane extracts for loop vectorization.\n+\n+2021-01-05  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/98514\n+\t* tree-ssa-reassoc.c (bb_rank): Change type from long * to\n+\tint64_t *.\n+\t(operand_rank): Change type from hash_map<tree, long> to\n+\thash_map<tree, int64_t>.\n+\t(phi_rank): Change return type from long to int64_t.\n+\t(loop_carried_phi): Change block_rank variable type from long to\n+\tint64_t.\n+\t(propagate_rank): Change return type, rank parameter type and\n+\top_rank variable type from long to int64_t.\n+\t(find_operand_rank): Change return type from long to int64_t\n+\tand change slot variable type from long * to int64_t *.\n+\t(insert_operand_rank): Change rank parameter type from long to\n+\tint64_t.\n+\t(get_rank): Change return type and rank variable type from long to\n+\tint64_t.  Use PRId64 instead of ld to print the rank.\n+\t(init_reassoc): Change rank variable type from long to int64_t\n+\tand adjust correspondingly bb_rank and operand_rank initialization.\n+\n+2021-01-05  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/96928\n+\t* tree-ssa-phiopt.c (xor_replacement): New function.\n+\t(tree_ssa_phiopt_worker): Call it.\n+\n+2021-01-05  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/96930\n+\t* match.pd ((A / (1 << B)) -> (A >> B)): If A is extended\n+\tfrom narrower value which has the same type as 1 << B, perform\n+\tthe right shift on the narrower value followed by extension.\n+\n+2021-01-05  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/96239\n+\t* gimple-ssa-store-merging.c (maybe_optimize_vector_constructor): New\n+\tfunction.\n+\t(get_status_for_store_merging): Don't return BB_INVALID for blocks\n+\twith potential bswap optimizable CONSTRUCTORs.\n+\t(pass_store_merging::execute): Optimize vector CONSTRUCTORs with bswap\n+\tif possible.\n+\n+2021-01-05  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/98381\n+\t* tree.c (vector_element_bits): Properly compute bool vector\n+\telement size.\n+\t* tree-vect-loop.c (vectorizable_live_operation): Properly\n+\tcompute the last lane bit offset.\n+\n+2021-01-05  Uro\u0161 Bizjak  <ubizjak@gmail.com>\n+\n+\tPR target/98522\n+\t* config/i386/sse.md (sse_cvtps2pi): Redefine as define_insn_and_split.\n+\tClear the top 64 bytes of the input XMM register.\n+\t(sse_cvttps2pi): Ditto.\n+\n+2021-01-05  Uro\u0161 Bizjak  <ubizjak@gmail.com>\n+\n+\tPR target/98521\n+\t* config/i386/xopintrin.h (_mm256_cmov_si256): New.\n+\n+2021-01-05  H.J. Lu  <hjl.tools@gmail.com>\n+\n+\tPR target/98495\n+\t* config/i386/xmmintrin.h (_mm_extract_pi16): Cast to unsigned\n+\tshort first.\n+\n+2021-01-05  Claudiu Zissulescu  <claziss@synopsys.com>\n+\n+\t* config/arc/arc.md (maddsidi4_split): Use ACC_REG_FIRST.\n+\t(umaddsidi4_split): Likewise.\n+\n+2021-01-05  liuhongt  <hongtao.liu@intel.com>\n+\n+\tPR target/98461\n+\t* config/i386/sse.md (*sse2_pmovskb_zexthisi): New\n+\tdefine_insn_and_split for zero_extend of subreg HI of pmovskb\n+\tresult.\n+\t(*sse2_pmovskb_zexthisi): Add new combine splitters for\n+\tzero_extend of not of subreg HI of pmovskb result.\n+\n+2021-01-05  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\tPR target/97269\n+\t* explow.c (convert_memory_address_addr_space_1): Handle UNSPECs\n+\tnested in CONSTs.\n+\t* config/aarch64/aarch64.c (aarch64_expand_mov_immediate): Use\n+\tconvert_memory_address to convert symbolic immediates to ptr_mode\n+\tbefore forcing them to memory.\n+\n+2021-01-05  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\tPR rtl-optimization/97144\n+\t* recog.c (constrain_operands): Initialize matching_operand\n+\tfor each alternative, rather than only doing it once.\n+\n+2021-01-05  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\tPR rtl-optimization/98403\n+\t* rtl-ssa/changes.cc (function_info::finalize_new_accesses): Explain\n+\twhy we don't remove call clobbers.\n+\t(function_info::apply_changes_to_insn): Don't attempt to add\n+\tcall clobbers here.\n+\n+2021-01-05  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\tPR tree-optimization/98371\n+\t* tree-vect-loop.c (vect_reanalyze_as_main_loop): New function.\n+\t(vect_analyze_loop): If an epilogue loop appears to be cheaper\n+\tthan the main loop, re-analyze it as a main loop before adopting\n+\tit as a main loop.\n+\n+2021-01-05  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n+\n+\tPR c++/98316\n+\t* configure.ac (NETLIBS): Determine using AX_LIB_SOCKET_NSL.\n+\t* aclocal.m4, configure: Regenerate.\n+\t* Makefile.in (NETLIBS): Define.\n+\t(BACKEND): Remove $(CODYLIB).\n+\n+2021-01-05  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR rtl-optimization/98334\n+\t* simplify-rtx.c (simplify_context::simplify_binary_operation_1):\n+\tOptimize (X - 1) * Y + Y to X * Y or (X + 1) * Y - Y to X * Y.\n+\n+2021-01-05  Bernd Edlinger  <bernd.edlinger@hotmail.de>\n+\n+\t* tree-inline.c (expand_call_inline): Restore input_location.\n+\tReturn result from recursive call.\n+\n 2021-01-04  Richard Sandiford  <richard.sandiford@arm.com>\n \n \tPR tree-optimization/95401"}, {"sha": "c11ea6e377e837b9929975c66a6d51da3bef357c", "filename": "gcc/DATESTAMP", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/651b8a50a6d1dddcf39c28f72110b82f7eae918d/gcc%2FDATESTAMP", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/651b8a50a6d1dddcf39c28f72110b82f7eae918d/gcc%2FDATESTAMP", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FDATESTAMP?ref=651b8a50a6d1dddcf39c28f72110b82f7eae918d", "patch": "@@ -1 +1 @@\n-20210105\n+20210106"}, {"sha": "d5216e9edd8fa6ad4be675e7222814acfdb6eca9", "filename": "gcc/analyzer/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/651b8a50a6d1dddcf39c28f72110b82f7eae918d/gcc%2Fanalyzer%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/651b8a50a6d1dddcf39c28f72110b82f7eae918d/gcc%2Fanalyzer%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fanalyzer%2FChangeLog?ref=651b8a50a6d1dddcf39c28f72110b82f7eae918d", "patch": "@@ -1,3 +1,10 @@\n+2021-01-05  David Malcolm  <dmalcolm@redhat.com>\n+\n+\tPR analyzer/98293\n+\t* store.cc (binding_map::apply_ctor_to_region): When \"index\" is\n+\tNULL, iterate through the fields for RECORD_TYPEs, rather than\n+\tcreating an INTEGER_CST index.\n+\n 2020-11-30  David Malcolm  <dmalcolm@redhat.com>\n \n \t* analyzer-pass.cc: Include \"analyzer/analyzer.h\" for the"}, {"sha": "5f35ab78b45b5407996946987a6343afbc7edfa7", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/651b8a50a6d1dddcf39c28f72110b82f7eae918d/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/651b8a50a6d1dddcf39c28f72110b82f7eae918d/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=651b8a50a6d1dddcf39c28f72110b82f7eae918d", "patch": "@@ -1,3 +1,39 @@\n+2021-01-05  Patrick Palka  <ppalka@redhat.com>\n+\n+\t* pt.c (unify) <case TEMPLATE_PARM_INDEX>: After walking into\n+\tthe type of the NTTP, substitute into the type again.  If the\n+\ttype is still dependent, don't unify the NTTP.\n+\n+2021-01-05  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* Make-lang.in (cc1plus-checksum, cc1plus$(exeext): Add\n+\t$(CODYLIB) after $(BACKEND).\n+\n+2021-01-05  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/98469\n+\t* constexpr.c (cxx_eval_constant_expression) <case BIT_CAST_EXPR>:\n+\tPunt if lval is true.\n+\t* semantics.c (cp_build_bit_cast): Call get_target_expr_sfinae on\n+\tthe result if it has a class type.\n+\n+2021-01-05  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c++/82099\n+\t* pt.c (resolve_overloaded_unification): Call\n+\tmaybe_instantiate_noexcept after instantiating the function\n+\tdecl.\n+\n+2021-01-05  Nathan Sidwell  <nathan@acm.org>\n+\n+\t* parser.c (cp_parser_module_declaration): Alter diagnostic\n+\ttext to say where is permissable.\n+\n+2021-01-05  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n+\n+\tPR c++/98316\n+\t* Make-lang.in (cc1plus$(exeext)): Add $(CODYLIB), $(NETLIBS).\n+\n 2021-01-02  Jan Hubicka  <jh@suse.cz>\n \n \t* cp-tree.h (cp_tree_c_finish_parsing): Declare."}, {"sha": "50a95f1baea45756290350bc8944f42c6697b2e3", "filename": "gcc/d/ChangeLog", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/651b8a50a6d1dddcf39c28f72110b82f7eae918d/gcc%2Fd%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/651b8a50a6d1dddcf39c28f72110b82f7eae918d/gcc%2Fd%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2FChangeLog?ref=651b8a50a6d1dddcf39c28f72110b82f7eae918d", "patch": "@@ -1,3 +1,20 @@\n+2021-01-05  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* dmd/MERGE: Merge upstream dmd a5c86f5b9.\n+\t* d-builtins.cc (d_eval_constant_expression): Handle ADDR_EXPR trees\n+\tcreated by build_string_literal.\n+\t* d-frontend.cc (retStyle): Remove function.\n+\t* d-target.cc (d_language_target_info): New variable.\n+\t(d_target_info_table): Likewise.\n+\t(Target::_init): Initialize d_target_info_table.\n+\t(Target::isReturnOnStack): New function.\n+\t(d_add_target_info_handlers): Likewise.\n+\t(d_handle_target_cpp_std): Likewise.\n+\t(d_handle_target_cpp_runtime_library): Likewise.\n+\t(Target::getTargetInfo): Likewise.\n+\t* d-target.h (struct d_target_info_spec): New type.\n+\t(d_add_target_info_handlers): Declare.\n+\n 2021-01-01  Jakub Jelinek  <jakub@redhat.com>\n \n \t* gdc.texi: Bump @copyrights-d year."}, {"sha": "ddf550f1629d70a8ccf94e8eeb85e8a92a6877eb", "filename": "gcc/go/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/651b8a50a6d1dddcf39c28f72110b82f7eae918d/gcc%2Fgo%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/651b8a50a6d1dddcf39c28f72110b82f7eae918d/gcc%2Fgo%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2FChangeLog?ref=651b8a50a6d1dddcf39c28f72110b82f7eae918d", "patch": "@@ -1,3 +1,16 @@\n+2021-01-05  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* lang.opt (fgo-embedcfg=): Add full stop at the end of description.\n+\n+2021-01-05  Ian Lance Taylor  <iant@golang.org>\n+\n+\t* lang.opt (fgo-embedcfg): New option.\n+\t* go-c.h (struct go_create_gogo_args): Add embedcfg field.\n+\t* go-lang.c (go_embedcfg): New static variable.\n+\t(go_langhook_init): Set go_create_gogo_args embedcfg field.\n+\t(go_langhook_handle_option): Handle OPT_fgo_embedcfg_.\n+\t* gccgo.texi (Invoking gccgo): Document -fgo-embedcfg.\n+\n 2021-01-01  Jakub Jelinek  <jakub@redhat.com>\n \n \t* gccgo.texi: Bump @copyrights-go year."}, {"sha": "44b412b4379bd5dc948931721d894617afa9fa28", "filename": "gcc/objcp/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/651b8a50a6d1dddcf39c28f72110b82f7eae918d/gcc%2Fobjcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/651b8a50a6d1dddcf39c28f72110b82f7eae918d/gcc%2Fobjcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjcp%2FChangeLog?ref=651b8a50a6d1dddcf39c28f72110b82f7eae918d", "patch": "@@ -1,3 +1,13 @@\n+2021-01-05  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* Make-lang.in (cc1objplus-checksum, cc1objplus$(exeext): Add\n+\t$(CODYLIB) after $(BACKEND).\n+\n+2021-01-05  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n+\n+\tPR c++/98316\n+\t* Make-lang.in (cc1objplus$(exeext)): Add $(CODYLIB), $(NETLIBS).\n+\n 2020-11-20  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR other/97911"}, {"sha": "a5b1044af87d259dd512424d1443971c9e0c906d", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 113, "deletions": 0, "changes": 113, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/651b8a50a6d1dddcf39c28f72110b82f7eae918d/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/651b8a50a6d1dddcf39c28f72110b82f7eae918d/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=651b8a50a6d1dddcf39c28f72110b82f7eae918d", "patch": "@@ -1,3 +1,116 @@\n+2021-01-05  Ilya Leoshkevich  <iii@linux.ibm.com>\n+\n+\t* gcc.target/s390/s390.exp: Replace %% with %.\n+\n+2021-01-05  Steve Kargl  <sgk@troutmask.apl.washington.edu>\n+\n+\t* gfortran.dg/dec_math.f90: xfail on i?86-*-freebsd*\n+\n+2021-01-05  H.J. Lu  <hjl.tools@gmail.com>\n+\n+\tPR target/98495\n+\t* gcc.target/i386/sse2-mmx-pextrw.c (compute_correct_result): Use\n+\tunsigned short to compute pextrw result.\n+\n+2021-01-05  Patrick Palka  <ppalka@redhat.com>\n+\n+\t* g++.dg/template/partial5.C: Adjust directives to expect the\n+\tsame errors across all dialects.\n+\t* g++.dg/cpp1z/nontype-auto17.C: New test.\n+\t* g++.dg/cpp1z/nontype-auto18.C: New test.\n+\t* g++.dg/template/ttp33.C: New test.\n+\n+2021-01-05  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/94802\n+\t* gcc.target/i386/pr94802.c: New test.\n+\t* gcc.dg/Wstrict-overflow-25.c: Remove xfail.\n+\n+2021-01-05  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/98516\n+\t* gcc.dg/vect/bb-slp-pr98516-1.c: New testcase.\n+\t* gcc.dg/vect/bb-slp-pr98516-2.c: Likewise.\n+\n+2021-01-05  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/98469\n+\t* g++.dg/cpp2a/bit-cast8.C: New test.\n+\t* g++.dg/cpp2a/bit-cast9.C: New test.\n+\n+2021-01-05  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c++/82099\n+\t* g++.dg/cpp1z/class-deduction76.C: Remove dg-ice.\n+\t* g++.dg/cpp0x/noexcept61.C: New test.\n+\n+2021-01-05  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/96928\n+\t* gcc.dg/tree-ssa/pr96928.c: New test.\n+\t* gcc.target/i386/ifcvt-onecmpl-abs-1.c: Remove -fdump-rtl-ce1,\n+\tinstead of scanning rtl dump for ifcvt message check assembly\n+\tfor xor instruction.\n+\n+2021-01-05  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/96930\n+\t* g++.dg/tree-ssa/pr96930.C: New test.\n+\n+2021-01-05  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/96239\n+\t* gcc.dg/tree-ssa/pr96239.c: New test.\n+\n+2021-01-05  Uro\u0161 Bizjak  <ubizjak@gmail.com>\n+\n+\tPR target/98522\n+\t* gcc.target/i386/pr98522.c: New test.\n+\n+2021-01-05  Nathan Sidwell  <nathan@acm.org>\n+\n+\t* g++.dg/modules/mod-decl-1.C: Adjust.\n+\t* g++.dg/modules/p0713-2.C: Adjust.\n+\t* g++.dg/modules/p0713-3.C: Adjust.\n+\n+2021-01-05  H.J. Lu  <hjl.tools@gmail.com>\n+\n+\tPR target/98495\n+\t* gcc.target/i386/pr98495-1.c: New test.\n+\t* gcc.target/i386/pr98495-2.c: New test.\n+\t* gcc.target/i386/pr98495-3.c: New test.\n+\t* gcc.target/i386/pr98495-4.c: New test.\n+\t* gcc.target/i386/pr98495-5.c: New test.\n+\n+2021-01-05  liuhongt  <hongtao.liu@intel.com>\n+\n+\t* gcc.target/i386/sse2-pr98461-2.c: New test.\n+\n+2021-01-05  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\tPR rtl-optimization/97144\n+\t* gcc.c-torture/compile/pr97144.c: New test.\n+\t* gcc.target/aarch64/sve/pr97144.c: Likewise.\n+\n+2021-01-05  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\tPR rtl-optimization/98403\n+\t* g++.dg/opt/pr98403.C: New test.\n+\n+2021-01-05  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR rtl-optimization/98334\n+\t* gcc.target/i386/pr98334.c: New test.\n+\n+2021-01-05  Jerome Lambourg  <lambourg@adacore.com>\n+\n+\t* g++.dg/cpp1y/constexpr-66093.C: Fix bounds issue.\n+\n+2021-01-05  David Malcolm  <dmalcolm@redhat.com>\n+\n+\tPR analyzer/98293\n+\t* gcc.dg/analyzer/pr98293.c: New test.\n+\n 2021-01-04  Martin Uecker  <muecker@gwdg.de>\n \n \tPR c/98029"}, {"sha": "8a165fcb4e3d6925e19aaebfc700419b18fb743a", "filename": "libatomic/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/651b8a50a6d1dddcf39c28f72110b82f7eae918d/libatomic%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/651b8a50a6d1dddcf39c28f72110b82f7eae918d/libatomic%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libatomic%2FChangeLog?ref=651b8a50a6d1dddcf39c28f72110b82f7eae918d", "patch": "@@ -1,3 +1,7 @@\n+2021-01-05  Samuel Thibault  <samuel.thibault@ens-lyon.org>\n+\n+\t* configure: Re-generate.\n+\n 2020-12-05  Iain Sandoe  <iain@sandoe.co.uk>\n \n \tPR target/97865"}, {"sha": "c4fe0e4791282bda803dbf8c703ffaf356582777", "filename": "libbacktrace/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/651b8a50a6d1dddcf39c28f72110b82f7eae918d/libbacktrace%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/651b8a50a6d1dddcf39c28f72110b82f7eae918d/libbacktrace%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libbacktrace%2FChangeLog?ref=651b8a50a6d1dddcf39c28f72110b82f7eae918d", "patch": "@@ -1,3 +1,7 @@\n+2021-01-05  Samuel Thibault  <samuel.thibault@ens-lyon.org>\n+\n+\t* configure: Re-generate.\n+\n 2020-12-05  Iain Sandoe  <iain@sandoe.co.uk>\n \n \tPR target/97865"}, {"sha": "8151f12447b94a5e2f9117d5421c1fbe8eda846c", "filename": "libcc1/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/651b8a50a6d1dddcf39c28f72110b82f7eae918d/libcc1%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/651b8a50a6d1dddcf39c28f72110b82f7eae918d/libcc1%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcc1%2FChangeLog?ref=651b8a50a6d1dddcf39c28f72110b82f7eae918d", "patch": "@@ -1,3 +1,7 @@\n+2021-01-05  Samuel Thibault  <samuel.thibault@ens-lyon.org>\n+\n+\t* configure: Re-generate.\n+\n 2020-12-18  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR bootstrap/98380"}, {"sha": "58ce5724fe393fb0bb31cfa4fd0659e526d016a4", "filename": "libffi/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/651b8a50a6d1dddcf39c28f72110b82f7eae918d/libffi%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/651b8a50a6d1dddcf39c28f72110b82f7eae918d/libffi%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2FChangeLog?ref=651b8a50a6d1dddcf39c28f72110b82f7eae918d", "patch": "@@ -1,3 +1,7 @@\n+2021-01-05  Samuel Thibault  <samuel.thibault@ens-lyon.org>\n+\n+\t* configure: Re-generate.\n+\n 2020-12-05  Iain Sandoe  <iain@sandoe.co.uk>\n \n \tPR target/97865"}, {"sha": "77eafe0af9552d7d043a18806c3e7fc0fd67adbc", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/651b8a50a6d1dddcf39c28f72110b82f7eae918d/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/651b8a50a6d1dddcf39c28f72110b82f7eae918d/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=651b8a50a6d1dddcf39c28f72110b82f7eae918d", "patch": "@@ -1,3 +1,7 @@\n+2021-01-05  Samuel Thibault  <samuel.thibault@ens-lyon.org>\n+\n+\t* configure: Re-generate.\n+\n 2021-01-01  Jakub Jelinek  <jakub@redhat.com>\n \n \t* ChangeLog-2020: Rotate ChangeLog.  New file."}, {"sha": "c25ceabf5f1b4fbdddc3a381377ce8996877efb1", "filename": "libgomp/ChangeLog", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/651b8a50a6d1dddcf39c28f72110b82f7eae918d/libgomp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/651b8a50a6d1dddcf39c28f72110b82f7eae918d/libgomp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2FChangeLog?ref=651b8a50a6d1dddcf39c28f72110b82f7eae918d", "patch": "@@ -1,3 +1,27 @@\n+2021-01-05  Samuel Thibault  <samuel.thibault@ens-lyon.org>\n+\n+\t* configure: Re-generate.\n+\n+2021-01-05  Samuel Thibault  <samuel.thibault@ens-lyon.org>\n+\n+\t* configure: Re-generate.\n+\n+2021-01-05  Julian Brown  <julian@codesourcery.com>\n+\n+\t* plugin/plugin-nvptx.c (SOFTSTACK_CACHE_LIMIT): New define.\n+\t(struct ptx_device): Add omp_stacks struct.\n+\t(nvptx_open_device): Initialise cached-stacks housekeeping info.\n+\t(nvptx_close_device): Free cached stacks block and mutex.\n+\t(nvptx_stacks_free): New function.\n+\t(nvptx_alloc): Add SUPPRESS_ERRORS parameter.\n+\t(GOMP_OFFLOAD_alloc): Add strategies for freeing soft-stacks block.\n+\t(nvptx_stacks_alloc): Rename to...\n+\t(nvptx_stacks_acquire): This.  Cache stacks block between runs if same\n+\tsize or smaller is required.\n+\t(nvptx_stacks_free): Remove.\n+\t(GOMP_OFFLOAD_run): Call nvptx_stacks_acquire and lock stacks block\n+\tduring kernel execution.\n+\n 2021-01-01  Jakub Jelinek  <jakub@redhat.com>\n \n \t* libgomp.texi: Bump @copying's copyright year."}, {"sha": "6eb56c78aeedb57d5f2fdb21633ca8887b4fa674", "filename": "libhsail-rt/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/651b8a50a6d1dddcf39c28f72110b82f7eae918d/libhsail-rt%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/651b8a50a6d1dddcf39c28f72110b82f7eae918d/libhsail-rt%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libhsail-rt%2FChangeLog?ref=651b8a50a6d1dddcf39c28f72110b82f7eae918d", "patch": "@@ -1,3 +1,7 @@\n+2021-01-05  Samuel Thibault  <samuel.thibault@ens-lyon.org>\n+\n+\t* configure: Re-generate.\n+\n 2020-12-05  Iain Sandoe  <iain@sandoe.co.uk>\n \n \tPR target/97865"}, {"sha": "67873c07c03504c8d5bc290e0889b541e0164d6a", "filename": "libitm/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/651b8a50a6d1dddcf39c28f72110b82f7eae918d/libitm%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/651b8a50a6d1dddcf39c28f72110b82f7eae918d/libitm%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libitm%2FChangeLog?ref=651b8a50a6d1dddcf39c28f72110b82f7eae918d", "patch": "@@ -1,3 +1,7 @@\n+2021-01-05  Samuel Thibault  <samuel.thibault@ens-lyon.org>\n+\n+\t* configure: Re-generate.\n+\n 2021-01-01  Jakub Jelinek  <jakub@redhat.com>\n \n \t* libitm.texi: Bump @copying's copyright year."}, {"sha": "841f3740e140eb196c73f5247fec58be8fa2436b", "filename": "libobjc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/651b8a50a6d1dddcf39c28f72110b82f7eae918d/libobjc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/651b8a50a6d1dddcf39c28f72110b82f7eae918d/libobjc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libobjc%2FChangeLog?ref=651b8a50a6d1dddcf39c28f72110b82f7eae918d", "patch": "@@ -1,3 +1,7 @@\n+2021-01-05  Samuel Thibault  <samuel.thibault@ens-lyon.org>\n+\n+\t* configure: Re-generate.\n+\n 2020-12-05  Iain Sandoe  <iain@sandoe.co.uk>\n \n \tPR target/97865"}, {"sha": "c048f91789521f8e0eda58f6acee7e487e2d3704", "filename": "liboffloadmic/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/651b8a50a6d1dddcf39c28f72110b82f7eae918d/liboffloadmic%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/651b8a50a6d1dddcf39c28f72110b82f7eae918d/liboffloadmic%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/liboffloadmic%2FChangeLog?ref=651b8a50a6d1dddcf39c28f72110b82f7eae918d", "patch": "@@ -1,3 +1,8 @@\n+2021-01-05  Samuel Thibault  <samuel.thibault@ens-lyon.org>\n+\n+\t* configure: Re-generate.\n+\t* plugin/configure: Re-generate.\n+\n 2020-11-29  John David Anglin  <danglin@gcc.gnu.org>\n \n \t* configure: Regenerate."}, {"sha": "9a1d810bdb8e55e75f855c1eccdd63c29717b5d7", "filename": "libphobos/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/651b8a50a6d1dddcf39c28f72110b82f7eae918d/libphobos%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/651b8a50a6d1dddcf39c28f72110b82f7eae918d/libphobos%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2FChangeLog?ref=651b8a50a6d1dddcf39c28f72110b82f7eae918d", "patch": "@@ -1,3 +1,7 @@\n+2021-01-05  Samuel Thibault  <samuel.thibault@ens-lyon.org>\n+\n+\t* configure: Re-generate.\n+\n 2020-12-05  Iain Sandoe  <iain@sandoe.co.uk>\n \n \tPR target/97865"}, {"sha": "aa611b75e8b55e5611033dd51d99e7cc4c892816", "filename": "libquadmath/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/651b8a50a6d1dddcf39c28f72110b82f7eae918d/libquadmath%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/651b8a50a6d1dddcf39c28f72110b82f7eae918d/libquadmath%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libquadmath%2FChangeLog?ref=651b8a50a6d1dddcf39c28f72110b82f7eae918d", "patch": "@@ -1,3 +1,7 @@\n+2021-01-05  Samuel Thibault  <samuel.thibault@ens-lyon.org>\n+\n+\t* configure: Re-generate.\n+\n 2021-01-01  Jakub Jelinek  <jakub@redhat.com>\n \n \t* libquadmath.texi: Bump @copying's copyright year."}, {"sha": "0514f95eff9576f5688f67461c056e71080c7eb5", "filename": "libsanitizer/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/651b8a50a6d1dddcf39c28f72110b82f7eae918d/libsanitizer%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/651b8a50a6d1dddcf39c28f72110b82f7eae918d/libsanitizer%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libsanitizer%2FChangeLog?ref=651b8a50a6d1dddcf39c28f72110b82f7eae918d", "patch": "@@ -1,3 +1,7 @@\n+2021-01-05  Samuel Thibault  <samuel.thibault@ens-lyon.org>\n+\n+\t* configure: Re-generate.\n+\n 2020-12-05  Iain Sandoe  <iain@sandoe.co.uk>\n \n \tPR target/97865"}, {"sha": "ec9618c5e513ccd3ae589b04f12dce1a4d8be323", "filename": "libssp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/651b8a50a6d1dddcf39c28f72110b82f7eae918d/libssp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/651b8a50a6d1dddcf39c28f72110b82f7eae918d/libssp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libssp%2FChangeLog?ref=651b8a50a6d1dddcf39c28f72110b82f7eae918d", "patch": "@@ -1,3 +1,7 @@\n+2021-01-05  Samuel Thibault  <samuel.thibault@ens-lyon.org>\n+\n+\t* configure: Re-generate.\n+\n 2020-12-05  Iain Sandoe  <iain@sandoe.co.uk>\n \n \tPR target/97865"}, {"sha": "48dc967c7c6e900843ab472d664b7ba17194a58b", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/651b8a50a6d1dddcf39c28f72110b82f7eae918d/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/651b8a50a6d1dddcf39c28f72110b82f7eae918d/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=651b8a50a6d1dddcf39c28f72110b82f7eae918d", "patch": "@@ -1,3 +1,11 @@\n+2021-01-05  Samuel Thibault  <samuel.thibault@ens-lyon.org>\n+\n+\t* configure: Re-generate.\n+\n+2021-01-05  Ed Smith-Rowland  <3dw4rd@verizon.net>\n+\n+\t* include/precompiled/stdc++.h: Add <source_location> to C++20 section.\n+\n 2021-01-01  Jakub Jelinek  <jakub@redhat.com>\n \n \t* ChangeLog-2020: Rotate ChangeLog.  New file."}, {"sha": "03b8e63d5bdc8991faa4035fe88cc698a643e2e9", "filename": "libvtv/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/651b8a50a6d1dddcf39c28f72110b82f7eae918d/libvtv%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/651b8a50a6d1dddcf39c28f72110b82f7eae918d/libvtv%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libvtv%2FChangeLog?ref=651b8a50a6d1dddcf39c28f72110b82f7eae918d", "patch": "@@ -1,3 +1,7 @@\n+2021-01-05  Samuel Thibault  <samuel.thibault@ens-lyon.org>\n+\n+\t* configure: Re-generate.\n+\n 2020-12-05  Iain Sandoe  <iain@sandoe.co.uk>\n \n \tPR target/97865"}, {"sha": "35aadcab12dc248fbe4fd77455704b064fe417c3", "filename": "lto-plugin/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/651b8a50a6d1dddcf39c28f72110b82f7eae918d/lto-plugin%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/651b8a50a6d1dddcf39c28f72110b82f7eae918d/lto-plugin%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/lto-plugin%2FChangeLog?ref=651b8a50a6d1dddcf39c28f72110b82f7eae918d", "patch": "@@ -1,3 +1,7 @@\n+2021-01-05  Samuel Thibault  <samuel.thibault@ens-lyon.org>\n+\n+\t* configure: Re-generate.\n+\n 2020-11-29  John David Anglin  <danglin@gcc.gnu.org>\n \n \t* configure: Regenerate."}, {"sha": "106dc97e7245f3ece053d0f72c584f4ab1aeaae5", "filename": "zlib/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/651b8a50a6d1dddcf39c28f72110b82f7eae918d/zlib%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/651b8a50a6d1dddcf39c28f72110b82f7eae918d/zlib%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2FChangeLog?ref=651b8a50a6d1dddcf39c28f72110b82f7eae918d", "patch": "@@ -1,3 +1,7 @@\n+2021-01-05  Samuel Thibault  <samuel.thibault@ens-lyon.org>\n+\n+\t* configure: Re-generate.\n+\n 2020-12-05  Iain Sandoe  <iain@sandoe.co.uk>\n \n \tPR target/97865"}]}