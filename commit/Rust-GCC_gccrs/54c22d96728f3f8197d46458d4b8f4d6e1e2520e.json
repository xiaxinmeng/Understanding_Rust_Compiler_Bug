{"sha": "54c22d96728f3f8197d46458d4b8f4d6e1e2520e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTRjMjJkOTY3MjhmM2Y4MTk3ZDQ2NDU4ZDRiOGY0ZDZlMWUyNTIwZQ==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo.carlini@oracle.com", "date": "2018-05-21T20:44:33Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2018-05-21T20:44:33Z"}, "message": "parser.c (cp_parser_parameter_declaration_list): Remove bool* parameter.\n\n2018-05-21  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\t* parser.c (cp_parser_parameter_declaration_list): Remove\n\tbool* parameter.\n\t(cp_parser_parameter_declaration_clause): Adjust.\n\t(cp_parser_cache_defarg): Likewise.\n\nFrom-SVN: r260486", "tree": {"sha": "09f448a5383ceaaf99426442bb59597e6ef34e96", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/09f448a5383ceaaf99426442bb59597e6ef34e96"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/54c22d96728f3f8197d46458d4b8f4d6e1e2520e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/54c22d96728f3f8197d46458d4b8f4d6e1e2520e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/54c22d96728f3f8197d46458d4b8f4d6e1e2520e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/54c22d96728f3f8197d46458d4b8f4d6e1e2520e/comments", "author": null, "committer": null, "parents": [{"sha": "a3c7081913149383df639270f4972d3d5876b7b3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a3c7081913149383df639270f4972d3d5876b7b3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a3c7081913149383df639270f4972d3d5876b7b3"}], "stats": {"total": 28, "additions": 16, "deletions": 12}, "files": [{"sha": "6aed157616b6aba7583937660c8fc2416584e007", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/54c22d96728f3f8197d46458d4b8f4d6e1e2520e/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/54c22d96728f3f8197d46458d4b8f4d6e1e2520e/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=54c22d96728f3f8197d46458d4b8f4d6e1e2520e", "patch": "@@ -1,3 +1,10 @@\n+2018-05-21  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\t* parser.c (cp_parser_parameter_declaration_list): Remove\n+\tbool* parameter.\n+\t(cp_parser_parameter_declaration_clause): Adjust.\n+\t(cp_parser_cache_defarg): Likewise.\n+\n 2018-05-21  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR c++/84588"}, {"sha": "6f51f03f47c8498ee5060bc525181b0696f54a4f", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 9, "deletions": 12, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/54c22d96728f3f8197d46458d4b8f4d6e1e2520e/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/54c22d96728f3f8197d46458d4b8f4d6e1e2520e/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=54c22d96728f3f8197d46458d4b8f4d6e1e2520e", "patch": "@@ -2235,7 +2235,7 @@ static void cp_parser_type_specifier_seq\n static tree cp_parser_parameter_declaration_clause\n   (cp_parser *);\n static tree cp_parser_parameter_declaration_list\n-  (cp_parser *, bool *);\n+  (cp_parser *);\n static cp_parameter_declarator *cp_parser_parameter_declaration\n   (cp_parser *, bool, bool *);\n static tree cp_parser_default_argument \n@@ -21242,7 +21242,6 @@ cp_parser_parameter_declaration_clause (cp_parser* parser)\n   tree parameters;\n   cp_token *token;\n   bool ellipsis_p;\n-  bool is_error;\n \n   temp_override<bool> cleanup\n     (parser->auto_is_implicit_function_template_parm_p);\n@@ -21290,12 +21289,12 @@ cp_parser_parameter_declaration_clause (cp_parser* parser)\n     }\n \n   /* Parse the parameter-declaration-list.  */\n-  parameters = cp_parser_parameter_declaration_list (parser, &is_error);\n+  parameters = cp_parser_parameter_declaration_list (parser);\n   /* If a parse error occurred while parsing the\n      parameter-declaration-list, then the entire\n      parameter-declaration-clause is erroneous.  */\n-  if (is_error)\n-    return NULL;\n+  if (parameters == error_mark_node)\n+    return NULL_TREE;\n \n   /* Peek at the next token.  */\n   token = cp_lexer_peek_token (parser->lexer);\n@@ -21335,19 +21334,16 @@ cp_parser_parameter_declaration_clause (cp_parser* parser)\n \n    Returns a representation of the parameter-declaration-list, as for\n    cp_parser_parameter_declaration_clause.  However, the\n-   `void_list_node' is never appended to the list.  Upon return,\n-   *IS_ERROR will be true iff an error occurred.  */\n+   `void_list_node' is never appended to the list.  */\n \n static tree\n-cp_parser_parameter_declaration_list (cp_parser* parser, bool *is_error)\n+cp_parser_parameter_declaration_list (cp_parser* parser)\n {\n   tree parameters = NULL_TREE;\n   tree *tail = &parameters;\n   bool saved_in_unbraced_linkage_specification_p;\n   int index = 0;\n \n-  /* Assume all will go well.  */\n-  *is_error = false;\n   /* The special considerations that apply to a function within an\n      unbraced linkage specifications do not apply to the parameters\n      to the function.  */\n@@ -21389,7 +21385,6 @@ cp_parser_parameter_declaration_list (cp_parser* parser, bool *is_error)\n \t then the entire parameter-declaration-list is erroneous.  */\n       if (decl == error_mark_node)\n \t{\n-\t  *is_error = true;\n \t  parameters = error_mark_node;\n \t  break;\n \t}\n@@ -29009,7 +29004,9 @@ cp_parser_cache_defarg (cp_parser *parser, bool nsdmi)\n \t\t{\n \t\t  cp_lexer_consume_token (parser->lexer);\n \t\t  begin_scope (sk_function_parms, NULL_TREE);\n-\t\t  cp_parser_parameter_declaration_list (parser, &error);\n+\t\t  if (cp_parser_parameter_declaration_list (parser)\n+\t\t      == error_mark_node)\n+\t\t    error = true;\n \t\t  pop_bindings_and_leave_scope ();\n \t\t}\n \t      if (!cp_parser_error_occurred (parser) && !error)"}]}