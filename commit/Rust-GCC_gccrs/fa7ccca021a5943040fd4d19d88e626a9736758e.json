{"sha": "fa7ccca021a5943040fd4d19d88e626a9736758e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmE3Y2NjYTAyMWE1OTQzMDQwZmQ0ZDE5ZDg4ZTYyNmE5NzM2NzU4ZQ==", "commit": {"author": {"name": "Renlin Li", "email": "renlin.li@arm.com", "date": "2017-06-26T13:28:32Z"}, "committer": {"name": "Renlin Li", "email": "renlin@gcc.gnu.org", "date": "2017-06-26T13:28:32Z"}, "message": "[PATCH][Testsuite]Use user defined memmove in gcc.c-torture/execute/builtins/memops-asm-lib.c\n\nAfter the change r249278. bcopy is folded into memmove. And in newlib\naarch64 memmove implementation, it will call memcpy in certain conditions.\nThe memcpy defined in memops-asm-lib.c will abort when the test is running.\n\nA user defined memmove function is defined to bypass the library one.\nSo that memcpy won't be called accidentally.\n\ngcc/testsuite/\n\n\t* gcc.c-torture/execute/builtins/memops-asm-lib.c (my_memmove): New.\n\t* gcc.c-torture/execute/builtins/memops-asm.c (memmove): Declare memmove.\n\n\nCo-Authored-By: Szabolcs Nagy <szabolcs.nagy@arm.com>\n\nFrom-SVN: r249647", "tree": {"sha": "2b97c9a38158c9d3b994034fadc6b76adc65294d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2b97c9a38158c9d3b994034fadc6b76adc65294d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fa7ccca021a5943040fd4d19d88e626a9736758e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fa7ccca021a5943040fd4d19d88e626a9736758e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fa7ccca021a5943040fd4d19d88e626a9736758e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fa7ccca021a5943040fd4d19d88e626a9736758e/comments", "author": null, "committer": null, "parents": [{"sha": "5a5c2d16e7acb42f6fec1a289bad17ae4aeb4654", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5a5c2d16e7acb42f6fec1a289bad17ae4aeb4654", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5a5c2d16e7acb42f6fec1a289bad17ae4aeb4654"}], "stats": {"total": 27, "additions": 27, "deletions": 0}, "files": [{"sha": "7fa3d95795022458c85b5395f47c5b4ed2ee2c26", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa7ccca021a5943040fd4d19d88e626a9736758e/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa7ccca021a5943040fd4d19d88e626a9736758e/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=fa7ccca021a5943040fd4d19d88e626a9736758e", "patch": "@@ -1,3 +1,10 @@\n+2017-06-26  Renlin Li  <renlin.li@arm.com>\n+\t    Szabolcs Nagy  <szabolcs.nagy@arm.com>\n+\n+\t* gcc.c-torture/execute/builtins/memops-asm-lib.c (my_memmove): New.\n+\t* gcc.c-torture/execute/builtins/memops-asm.c (memmove): Declare\n+\tmemmove.\n+\n 2017-06-26  Richard Biener  <rguenther@suse.de>\n \n \tPR target/81175"}, {"sha": "25d4a40a67e55abd9b420a91e32d56b5bab76f0e", "filename": "gcc/testsuite/gcc.c-torture/execute/builtins/memops-asm-lib.c", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa7ccca021a5943040fd4d19d88e626a9736758e/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fbuiltins%2Fmemops-asm-lib.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa7ccca021a5943040fd4d19d88e626a9736758e/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fbuiltins%2Fmemops-asm-lib.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fbuiltins%2Fmemops-asm-lib.c?ref=fa7ccca021a5943040fd4d19d88e626a9736758e", "patch": "@@ -37,6 +37,24 @@ my_bcopy (const void *s, void *d, size_t n)\n     }\n }\n \n+__attribute__ ((used))\n+void\n+my_memmove (void *d, const void *s, size_t n)\n+{\n+  char *dst = (char *) d;\n+  const char *src = (const char *) s;\n+  if (src >= dst)\n+    while (n--)\n+      *dst++ = *src++;\n+  else\n+    {\n+      dst += n;\n+      src += n;\n+      while (n--)\n+\t*--dst = *--src;\n+    }\n+}\n+\n /* LTO code is at the present to able to track that asm alias my_bcopy on builtin\n    actually refers to this function.  See PR47181. */\n __attribute__ ((used))"}, {"sha": "44e336cce7cc17041c79b935cfcc8ff6ef17b14b", "filename": "gcc/testsuite/gcc.c-torture/execute/builtins/memops-asm.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa7ccca021a5943040fd4d19d88e626a9736758e/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fbuiltins%2Fmemops-asm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa7ccca021a5943040fd4d19d88e626a9736758e/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fbuiltins%2Fmemops-asm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fbuiltins%2Fmemops-asm.c?ref=fa7ccca021a5943040fd4d19d88e626a9736758e", "patch": "@@ -12,6 +12,8 @@ extern void *memcpy (void *, const void *, size_t)\n   __asm (ASMNAME (\"my_memcpy\"));\n extern void bcopy (const void *, void *, size_t)\n   __asm (ASMNAME (\"my_bcopy\"));\n+extern void *memmove (void *, const void *, size_t)\n+  __asm (ASMNAME (\"my_memmove\"));\n extern void *memset (void *, int, size_t)\n   __asm (ASMNAME (\"my_memset\"));\n extern void bzero (void *, size_t)"}]}