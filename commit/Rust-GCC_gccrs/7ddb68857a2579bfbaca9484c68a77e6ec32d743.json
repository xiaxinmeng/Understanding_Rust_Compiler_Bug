{"sha": "7ddb68857a2579bfbaca9484c68a77e6ec32d743", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2RkYjY4ODU3YTI1NzliZmJhY2E5NDg0YzY4YTc3ZTZlYzMyZDc0Mw==", "commit": {"author": {"name": "Tom Wood", "email": "wood@gnu.org", "date": "1992-07-30T13:54:57Z"}, "committer": {"name": "Tom Wood", "email": "wood@gnu.org", "date": "1992-07-30T13:54:57Z"}, "message": "(FUNCTION_BOUNDARY, ASM_OUTPUT_ALIGN_CODE): Pack code\n        more tightly for the m88110.\n\nFrom-SVN: r1723", "tree": {"sha": "c16d9923fcc7e1b1a3c1849f2f16ed08c871ccc6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c16d9923fcc7e1b1a3c1849f2f16ed08c871ccc6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7ddb68857a2579bfbaca9484c68a77e6ec32d743", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7ddb68857a2579bfbaca9484c68a77e6ec32d743", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7ddb68857a2579bfbaca9484c68a77e6ec32d743", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7ddb68857a2579bfbaca9484c68a77e6ec32d743/comments", "author": null, "committer": null, "parents": [{"sha": "d0466d82e1331a5a0d6dae5a0f57c28b03de4f2d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d0466d82e1331a5a0d6dae5a0f57c28b03de4f2d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d0466d82e1331a5a0d6dae5a0f57c28b03de4f2d"}], "stats": {"total": 21, "additions": 13, "deletions": 8}, "files": [{"sha": "20742e3c1da286bca9b5ca6e87c0157df4050cc6", "filename": "gcc/config/m88k/m88k.h", "status": "modified", "additions": 13, "deletions": 8, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ddb68857a2579bfbaca9484c68a77e6ec32d743/gcc%2Fconfig%2Fm88k%2Fm88k.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ddb68857a2579bfbaca9484c68a77e6ec32d743/gcc%2Fconfig%2Fm88k%2Fm88k.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm88k%2Fm88k.h?ref=7ddb68857a2579bfbaca9484c68a77e6ec32d743", "patch": "@@ -206,9 +206,9 @@ extern char * reg_names[];\n /* Print subsidiary information on the compiler version in use.\n    Redefined in m88kv4.h, and m88kluna.h.  */\n #define VERSION_INFO1\t\"88open OCS/BCS, \"\n-#define VERSION_INFO2\t\"21 Jul 1992\"\n+#define VERSION_INFO2\t\"30 Jul 1992\"\n #define VERSION_STRING\tversion_string\n-#define\tTM_SCCS_ID\t\"@(#)m88k.h\t2.2.6.9 21 Jul 1992 09:24:47\"\n+#define\tTM_SCCS_ID\t\"@(#)m88k.h\t2.2.6.11 30 Jul 1992 09:06:33\"\n \n /* Run-time compilation parameters selecting different hardware subsets.  */\n \n@@ -391,9 +391,12 @@ extern char * reg_names[];\n /* Boundary (in *bits*) on which stack pointer should be aligned.  */\n #define STACK_BOUNDARY 128\n \n-/* Allocation boundary (in *bits*) for the code of a function.\n-   Pack code tightly when compiling crtstuff.c.  */\n-#define FUNCTION_BOUNDARY (flag_inhibit_size_directive ? 32 : 128)\n+/* Allocation boundary (in *bits*) for the code of a function.  On the\n+   m88100, it is desirable to align to a cache line.  However, SVR3 targets\n+   only provided 8 byte alignment.  The m88110 cache is small, so align\n+   to an 8 byte boundary.  Pack code tightly when compiling crtstuff.c.  */\n+#define FUNCTION_BOUNDARY (flag_inhibit_size_directive ? 32 : \\\n+\t\t\t   (TARGET_88100 && TARGET_SVR4 ? 128 : 64))\n \n /* No data type wants to be aligned rounder than this.  */\n #define BIGGEST_ALIGNMENT 64\n@@ -2000,10 +2003,12 @@ enum reg_class { NO_REGS, AP_REG, XRF_REGS, GENERAL_REGS, AGRF_REGS,\n   if ((LOG) != 0)\t\t\t\\\n     fprintf (FILE, \"\\t%s\\t %d\\n\", ALIGN_ASM_OP, 1<<(LOG))\n \n-/* Align the text address to half a cache boundary when it can only be\n-   reached by jumping.  Pack code tightly when compiling crtstuff.c.  */\n+/* On the m88100, align the text address to half a cache boundary when it\n+   can only be reached by jumping.  Pack code tightly when compiling\n+   crtstuff.c.  */\n #define ASM_OUTPUT_ALIGN_CODE(FILE) \\\n-  ASM_OUTPUT_ALIGN (FILE, (flag_inhibit_size_directive ? 2 : 3))\n+  ASM_OUTPUT_ALIGN (FILE, \\\n+\t\t    (TARGET_88100 && !flag_inhibit_size_directive ? 3 : 2))\n \n /* Override svr[34].h.  */\n #undef\tASM_OUTPUT_SKIP"}]}