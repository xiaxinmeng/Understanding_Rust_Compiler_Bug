{"sha": "37e33ecb8539a032b132b957c34bad2aeaf3f3e3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzdlMzNlY2I4NTM5YTAzMmIxMzJiOTU3YzM0YmFkMmFlYWYzZjNlMw==", "commit": {"author": {"name": "Richard Earnshaw", "email": "rearnsha@arm.com", "date": "2012-12-04T13:45:53Z"}, "committer": {"name": "Richard Earnshaw", "email": "rearnsha@gcc.gnu.org", "date": "2012-12-04T13:45:53Z"}, "message": "arm.opt (cirrus-fix-invalid-insns): Delete option.\n\n\t* arm.opt (cirrus-fix-invalid-insns): Delete option.\n\t* invoke.texi (cirrus-fix-invalid-insns): Remove documentation.\n\nFrom-SVN: r194137", "tree": {"sha": "4355148a3b36b2c3946900b673737f2a79822b55", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4355148a3b36b2c3946900b673737f2a79822b55"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/37e33ecb8539a032b132b957c34bad2aeaf3f3e3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/37e33ecb8539a032b132b957c34bad2aeaf3f3e3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/37e33ecb8539a032b132b957c34bad2aeaf3f3e3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/37e33ecb8539a032b132b957c34bad2aeaf3f3e3/comments", "author": null, "committer": null, "parents": [{"sha": "5c972fb605d1206903a8f448984553f2987f5834", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5c972fb605d1206903a8f448984553f2987f5834", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5c972fb605d1206903a8f448984553f2987f5834"}], "stats": {"total": 22, "additions": 5, "deletions": 17}, "files": [{"sha": "4bd208212555081c2d8a4ab81e88b481e275f607", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/37e33ecb8539a032b132b957c34bad2aeaf3f3e3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/37e33ecb8539a032b132b957c34bad2aeaf3f3e3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=37e33ecb8539a032b132b957c34bad2aeaf3f3e3", "patch": "@@ -1,3 +1,8 @@\n+2012-12-04  Richard Earnshaw  <rearnsha@arm.com>\n+\n+\t* arm.opt (cirrus-fix-invalid-insns): Delete option.\n+\t* invoke.texi (cirrus-fix-invalid-insns): Remove documentation.\n+\n 2012-12-04  Jakub Jelinek  <jakub@redhat.com>\n \n \t* tsan.c (instrument_expr): If expr_ptr isn't a gimple val, first"}, {"sha": "61d2d2fe4ee290c448039190617c9a05e08b7035", "filename": "gcc/config/arm/arm.opt", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/37e33ecb8539a032b132b957c34bad2aeaf3f3e3/gcc%2Fconfig%2Farm%2Farm.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/37e33ecb8539a032b132b957c34bad2aeaf3f3e3/gcc%2Fconfig%2Farm%2Farm.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.opt?ref=37e33ecb8539a032b132b957c34bad2aeaf3f3e3", "patch": "@@ -101,10 +101,6 @@ mcaller-super-interworking\n Target Report Mask(CALLER_INTERWORKING)\n Thumb: Assume function pointers may go to non-Thumb aware code\n \n-mcirrus-fix-invalid-insns\n-Target Report Mask(CIRRUS_FIX_INVALID_INSNS)\n-Cirrus: Place NOPs to avoid invalid instruction combinations\n-\n mcpu=\n Target RejectNegative Joined Enum(processor_type) Var(arm_cpu_option) Init(arm_none)\n Specify the name of the target CPU"}, {"sha": "4d917d1f28c5fab7c49f7f9eb5df02b4519783df", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 0, "deletions": 13, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/37e33ecb8539a032b132b957c34bad2aeaf3f3e3/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/37e33ecb8539a032b132b957c34bad2aeaf3f3e3/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=37e33ecb8539a032b132b957c34bad2aeaf3f3e3", "patch": "@@ -506,7 +506,6 @@ Objective-C and Objective-C++ Dialects}.\n -msingle-pic-base  -mno-single-pic-base @gol\n -mpic-register=@var{reg} @gol\n -mnop-fun-dllimport @gol\n--mcirrus-fix-invalid-insns -mno-cirrus-fix-invalid-insns @gol\n -mpoke-function-name @gol\n -mthumb  -marm @gol\n -mtpcs-frame  -mtpcs-leaf-frame @gol\n@@ -11394,18 +11393,6 @@ before execution begins.\n Specify the register to be used for PIC addressing.  The default is R10\n unless stack-checking is enabled, when R9 is used.\n \n-@item -mcirrus-fix-invalid-insns\n-@opindex mcirrus-fix-invalid-insns\n-@opindex mno-cirrus-fix-invalid-insns\n-Insert NOPs into the instruction stream to in order to work around\n-problems with invalid Maverick instruction combinations.  This option\n-is only valid if the @option{-mcpu=ep9312} option has been used to\n-enable generation of instructions for the Cirrus Maverick floating-point\n-co-processor.  This option is not enabled by default, since the\n-problem is only present in older Maverick implementations.  The default\n-can be re-enabled by use of the @option{-mno-cirrus-fix-invalid-insns}\n-switch.\n-\n @item -mpoke-function-name\n @opindex mpoke-function-name\n Write the name of each function into the text section, directly"}]}