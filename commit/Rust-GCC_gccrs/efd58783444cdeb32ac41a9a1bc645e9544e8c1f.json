{"sha": "efd58783444cdeb32ac41a9a1bc645e9544e8c1f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWZkNTg3ODM0NDRjZGViMzJhYzQxYTlhMWJjNjQ1ZTk1NDRlOGMxZg==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "2000-05-31T11:55:53Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "2000-05-31T11:55:53Z"}, "message": "tree.h (TREE_CODE_LENGTH): New macro.\n\n\t* tree.h (TREE_CODE_LENGTH): New macro.\n\t* c-common.c (c_find_base_decl): Use it.\n\t* expr.c (safe_from_p): Likewise.\n\t* print-tree.c (print_node): Likewise.\n\t* tree.c (make_node, copy_node, get_identifier): Likewie.\n\t(first_rtl_op, contains_placeholder_p, substitute_in_expr): Likewise.\n\t(build, build_nt, build_parse_node, simple_cst_equal): Likewise.\n\t* fold-const.c (make_range): Likewise.\n\t(fold): Likewise; also use first_rtl_op.\n\t* c-iterate.c (collect_iterators): Use first_rtl_op.\n\t* calls.c (calls_function_1): Likewise; also rename TYPE to CLASS.\n\tUse IS_EXPR_CODE_CLASS.\n\t(preexpand_calls): Likewise.\n\t* ggc-common.c (ggc_mark_trees): Rework to use first_rtl_op\n\tand TREE_CODE_LENGTH.\n\t* stmt.c (warn_if_unused_value): If no operands, no unused value.\n\t* ch/lang.c (deep_const_expr): Use first_rtl_op.\n\t* ch/satisfy.c (satisfy): Use TREE_CODE_LENGTH.\n\t* cp/method.c (mangle_expression): Use TREE_CODE_LENGTH.\n\t* cp/tree.c (break_out_calls, build_min_nt): Use TREE_CODE_LENGTH.\n\t(built_min, cp_tree_equal): Likewise.\n\nFrom-SVN: r34295", "tree": {"sha": "7c7a9e4fcb89849c3506dc5759f39b7ca43967f1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7c7a9e4fcb89849c3506dc5759f39b7ca43967f1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/efd58783444cdeb32ac41a9a1bc645e9544e8c1f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/efd58783444cdeb32ac41a9a1bc645e9544e8c1f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/efd58783444cdeb32ac41a9a1bc645e9544e8c1f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/efd58783444cdeb32ac41a9a1bc645e9544e8c1f/comments", "author": null, "committer": null, "parents": [{"sha": "d067e2aae0b32c59c6988846b0d26a3c6da5e2ee", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d067e2aae0b32c59c6988846b0d26a3c6da5e2ee", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d067e2aae0b32c59c6988846b0d26a3c6da5e2ee"}], "stats": {"total": 7, "additions": 3, "deletions": 4}, "files": [{"sha": "ca50852c975570dd36556407d591a6947028aafd", "filename": "gcc/fold-const.c", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/efd58783444cdeb32ac41a9a1bc645e9544e8c1f/gcc%2Ffold-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/efd58783444cdeb32ac41a9a1bc645e9544e8c1f/gcc%2Ffold-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const.c?ref=efd58783444cdeb32ac41a9a1bc645e9544e8c1f", "patch": "@@ -3337,7 +3337,7 @@ make_range (exp, pin_p, plow, phigh)\n \t  if (TREE_CODE_CLASS (code) == '2' \n \t      || TREE_CODE_CLASS (code) == '<'\n \t      || (TREE_CODE_CLASS (code) == 'e' \n-\t\t  && tree_code_length[(int) code] > 1))\n+\t\t  && TREE_CODE_LENGTH (code) > 1))\n \t    arg1 = TREE_OPERAND (exp, 1);\n \t}\n \n@@ -4748,10 +4748,9 @@ fold (expr)\n \t   do arithmetic on them.  */\n \twins = 0;\n     }\n-  else if (kind == 'e' || kind == '<'\n-\t   || kind == '1' || kind == '2' || kind == 'r')\n+  else if (IS_EXPR_CODE_CLASS (kind) || kind == 'r')\n     {\n-      register int len = tree_code_length[(int) code];\n+      register int len = TREE_CODE_LENGTH (code);\n       register int i;\n       for (i = 0; i < len; i++)\n \t{"}]}