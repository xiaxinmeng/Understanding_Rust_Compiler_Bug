{"sha": "3539e816939ed495e8ee3d123b5b2c765856d03d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzUzOWU4MTY5MzllZDQ5NWU4ZWUzZDEyM2I1YjJjNzY1ODU2ZDAzZA==", "commit": {"author": {"name": "Mike Stump", "email": "mrs@gcc.gnu.org", "date": "1995-12-14T00:20:39Z"}, "committer": {"name": "Mike Stump", "email": "mrs@gcc.gnu.org", "date": "1995-12-14T00:20:39Z"}, "message": "* expr.c (expand_expr, case ADDR_EXPR): Ensure op0 isn't QUEUED.\n\nFrom-SVN: r10715", "tree": {"sha": "a71f64c1b1d35a271c0785c223e03499fd8903ae", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a71f64c1b1d35a271c0785c223e03499fd8903ae"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3539e816939ed495e8ee3d123b5b2c765856d03d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3539e816939ed495e8ee3d123b5b2c765856d03d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3539e816939ed495e8ee3d123b5b2c765856d03d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3539e816939ed495e8ee3d123b5b2c765856d03d/comments", "author": null, "committer": null, "parents": [{"sha": "c6b51be9d2d12f76ad525d417bd7287a505d28f9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c6b51be9d2d12f76ad525d417bd7287a505d28f9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c6b51be9d2d12f76ad525d417bd7287a505d28f9"}], "stats": {"total": 2, "additions": 2, "deletions": 0}, "files": [{"sha": "3b50ce080828c72a79c94b46a28cfefbdcb03110", "filename": "gcc/expr.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3539e816939ed495e8ee3d123b5b2c765856d03d/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3539e816939ed495e8ee3d123b5b2c765856d03d/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=3539e816939ed495e8ee3d123b5b2c765856d03d", "patch": "@@ -6306,6 +6306,8 @@ expand_expr (exp, target, tmode, modifier)\n \t  if (ignore)\n \t    return op0;\n \n+\t  op0 = protect_from_queue (op0, 0);\n+\n \t  /* We would like the object in memory.  If it is a constant,\n \t     we can have it be statically allocated into memory.  For\n \t     a non-constant (REG, SUBREG or CONCAT), we need to allocate some"}]}