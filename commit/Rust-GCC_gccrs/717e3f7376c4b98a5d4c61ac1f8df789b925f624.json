{"sha": "717e3f7376c4b98a5d4c61ac1f8df789b925f624", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzE3ZTNmNzM3NmM0Yjk4YTVkNGM2MWFjMWY4ZGY3ODliOTI1ZjYyNA==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@codesourcery.com", "date": "2000-11-30T16:03:16Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2000-11-30T16:03:16Z"}, "message": "method.c (do_build_assign_ref): Construct appropriately CV-qualified base reference.\n\ncp:\n\t* method.c (do_build_assign_ref): Construct appropriately\n\tCV-qualified base reference. Don't allow const casts in base\n\tconversion.\ntestsuite:\n\t* g++.old-deja/g++.other/op2.C: New test.\n\nFrom-SVN: r37893", "tree": {"sha": "6890464ee5a8b4be36c8012afbdc98ceec811547", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6890464ee5a8b4be36c8012afbdc98ceec811547"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/717e3f7376c4b98a5d4c61ac1f8df789b925f624", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/717e3f7376c4b98a5d4c61ac1f8df789b925f624", "html_url": "https://github.com/Rust-GCC/gccrs/commit/717e3f7376c4b98a5d4c61ac1f8df789b925f624", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/717e3f7376c4b98a5d4c61ac1f8df789b925f624/comments", "author": null, "committer": null, "parents": [{"sha": "a6bb9efada3968fe0d4b14a4b0d3f58be7741f27", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a6bb9efada3968fe0d4b14a4b0d3f58be7741f27", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a6bb9efada3968fe0d4b14a4b0d3f58be7741f27"}], "stats": {"total": 82, "additions": 79, "deletions": 3}, "files": [{"sha": "3fbdf3dbc9aed7584a5af0ab9893cf433839b8d1", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/717e3f7376c4b98a5d4c61ac1f8df789b925f624/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/717e3f7376c4b98a5d4c61ac1f8df789b925f624/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=717e3f7376c4b98a5d4c61ac1f8df789b925f624", "patch": "@@ -1,3 +1,9 @@\n+2000-11-30  Nathan Sidwell  <nathan@codesourcery.com>\n+\n+\t* method.c (do_build_assign_ref): Construct appropriately\n+\tCV-qualified base reference. Don't allow const casts in base\n+\tconversion.\n+\n 2000-11-30  Nathan Sidwell  <nathan@codesourcery.com>\n \n \t* call.c (build_over_call): Use VOID_TYPE_P. Don't die on"}, {"sha": "896656d4dc4f90cafc446addcbbab38931debbad", "filename": "gcc/cp/method.c", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/717e3f7376c4b98a5d4c61ac1f8df789b925f624/gcc%2Fcp%2Fmethod.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/717e3f7376c4b98a5d4c61ac1f8df789b925f624/gcc%2Fcp%2Fmethod.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fmethod.c?ref=717e3f7376c4b98a5d4c61ac1f8df789b925f624", "patch": "@@ -2428,9 +2428,12 @@ do_build_assign_ref (fndecl)\n       for (i = 0; i < n_bases; ++i)\n \t{\n \t  tree basetype = BINFO_TYPE (TREE_VEC_ELT (binfos, i));\n-\t  tree p = convert_to_reference\n-\t    (build_reference_type (basetype), parm,\n-\t     CONV_IMPLICIT|CONV_CONST, LOOKUP_COMPLAIN, NULL_TREE);\n+\t  tree p = build_qualified_type\n+\t      (basetype, CP_TYPE_QUALS (TREE_TYPE (parm)));\n+\n+\t  p = convert_to_reference\n+\t    (build_reference_type (p), parm,\n+\t     CONV_IMPLICIT, LOOKUP_COMPLAIN, NULL_TREE);\n \t  p = convert_from_reference (p);\n \t  p = build_member_call (basetype, ansi_assopname (NOP_EXPR),\n \t\t\t\t build_tree_list (NULL_TREE, p));"}, {"sha": "dae0f957b4591363f3f5f31cacb464baf76806c0", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/717e3f7376c4b98a5d4c61ac1f8df789b925f624/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/717e3f7376c4b98a5d4c61ac1f8df789b925f624/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=717e3f7376c4b98a5d4c61ac1f8df789b925f624", "patch": "@@ -1,3 +1,7 @@\n+2000-11-30  Nathan Sidwell  <nathan@codesourcery.com>\n+\n+\t* g++.old-deja/g++.other/op2.C: New test.\n+\n 2000-11-30  Nathan Sidwell  <nathan@codesourcery.com>\n \n \t* g++.old-deja/g++.other/crash38.C: New test."}, {"sha": "70af6ac34a06be28614483bb9f81110f888ccf51", "filename": "gcc/testsuite/g++.old-deja/g++.other/op2.C", "status": "added", "additions": 63, "deletions": 0, "changes": 63, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/717e3f7376c4b98a5d4c61ac1f8df789b925f624/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fop2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/717e3f7376c4b98a5d4c61ac1f8df789b925f624/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fop2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fop2.C?ref=717e3f7376c4b98a5d4c61ac1f8df789b925f624", "patch": "@@ -0,0 +1,63 @@\n+// Copyright (C) 2000 Free Software Foundation, Inc.\n+// Contributed by Nathan Sidwell 28 Nov 2000 <nathan@codesourcery.com>\n+\n+// Bug 91. We'd not preserve constness looking for a base classes assignment\n+// operator.\n+\n+#include <stdio.h>\n+\n+int glob = 0;\n+\n+struct A\n+{\n+  A() {}\n+\n+  A( A& arg) \n+  { printf (\"%s\\n\", __PRETTY_FUNCTION__); glob = 1;}\n+\n+  A( const A& arg)\n+  { printf (\"%s\\n\", __PRETTY_FUNCTION__); glob = 2;}\n+\n+  A& operator=( A& ) \n+  { printf (\"%s\\n\", __PRETTY_FUNCTION__); glob = 3; return *this; }\n+\n+  A& operator=( const A& ) \n+  { printf (\"%s\\n\", __PRETTY_FUNCTION__); glob = 4; return *this; }\n+};\n+\n+struct B : A\n+{\n+  B () {}\n+};\n+\n+void foo( A& )\n+{\n+  printf (\"%s\\n\", __PRETTY_FUNCTION__); glob = 5;\n+}\n+\n+void foo( const A& )\n+{\n+ printf (\"%s\\n\", __PRETTY_FUNCTION__); glob = 6;\n+}\n+\n+\n+int main()\n+{\n+  const A a0;\n+  glob = 0; printf (\"A(cA) : \");  A a1(a0); if (glob != 2) return 1;\n+  glob = 0; printf (\"A(A ) : \");  A a2(a1); if (glob != 1) return 2;\n+  \n+  const B b0;\n+  glob = 0; printf (\"B(cB) : \");  B b1(b0); if (glob != 2) return 3;\n+  glob = 0; printf (\"B(B ) : \");  B b2(b1); if (glob != 2) return 4;\n+\n+  glob = 0; printf (\"A= cA : \");  a1 = a0; if (glob != 4) return 5;\n+  glob = 0; printf (\"A= A : \");   a1 = a2; if (glob != 3) return 6;\n+  glob = 0; printf (\"B= cB : \");  b1 = b0; if (glob != 4) return 7;\n+  glob = 0; printf (\"B= B : \");   b1 = b2; if (glob != 4) return 8;\n+\n+  glob = 0; printf (\"foo(cB): \"); foo(b0); if (glob != 6) return 9;\n+  glob = 0; printf (\"foo(B ): \"); foo(b2); if (glob != 5) return 10;\n+\n+  return 0;\n+}"}]}