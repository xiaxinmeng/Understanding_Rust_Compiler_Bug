{"sha": "e7303e85aea62c60818fe9586afab8f397e8a4d9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTczMDNlODVhZWE2MmM2MDgxOGZlOTU4NmFmYWI4ZjM5N2U4YTRkOQ==", "commit": {"author": {"name": "Francois-Xavier Coudert", "email": "fxcoudert@gcc.gnu.org", "date": "2007-08-14T23:26:23Z"}, "committer": {"name": "Fran\u00e7ois-Xavier Coudert", "email": "fxcoudert@gcc.gnu.org", "date": "2007-08-14T23:26:23Z"}, "message": "re PR fortran/33066 (\"type, bind(C) t\": Diagnose missing \"::\")\n\n\tPR fortran/33066\n\n\t* decl.c (gfc_get_type_attr_spec): Fix whitespace.\n\t(gfc_match_derived_decl): Fix logic.\n\n\t* gfortran.dg/use_8.f90: New test.\n\t* gfortran.dg/c_loc_tests_2.f03: Fix code.\n\nFrom-SVN: r127497", "tree": {"sha": "f613618f9504e03a00f33782c9321c134f250b74", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f613618f9504e03a00f33782c9321c134f250b74"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e7303e85aea62c60818fe9586afab8f397e8a4d9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e7303e85aea62c60818fe9586afab8f397e8a4d9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e7303e85aea62c60818fe9586afab8f397e8a4d9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e7303e85aea62c60818fe9586afab8f397e8a4d9/comments", "author": {"login": "fxcoudert", "id": 1980544, "node_id": "MDQ6VXNlcjE5ODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1980544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fxcoudert", "html_url": "https://github.com/fxcoudert", "followers_url": "https://api.github.com/users/fxcoudert/followers", "following_url": "https://api.github.com/users/fxcoudert/following{/other_user}", "gists_url": "https://api.github.com/users/fxcoudert/gists{/gist_id}", "starred_url": "https://api.github.com/users/fxcoudert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fxcoudert/subscriptions", "organizations_url": "https://api.github.com/users/fxcoudert/orgs", "repos_url": "https://api.github.com/users/fxcoudert/repos", "events_url": "https://api.github.com/users/fxcoudert/events{/privacy}", "received_events_url": "https://api.github.com/users/fxcoudert/received_events", "type": "User", "site_admin": false}, "committer": {"login": "fxcoudert", "id": 1980544, "node_id": "MDQ6VXNlcjE5ODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1980544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fxcoudert", "html_url": "https://github.com/fxcoudert", "followers_url": "https://api.github.com/users/fxcoudert/followers", "following_url": "https://api.github.com/users/fxcoudert/following{/other_user}", "gists_url": "https://api.github.com/users/fxcoudert/gists{/gist_id}", "starred_url": "https://api.github.com/users/fxcoudert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fxcoudert/subscriptions", "organizations_url": "https://api.github.com/users/fxcoudert/orgs", "repos_url": "https://api.github.com/users/fxcoudert/repos", "events_url": "https://api.github.com/users/fxcoudert/events{/privacy}", "received_events_url": "https://api.github.com/users/fxcoudert/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c833f6d2b4b3ca8e3bcd738c9dd0a8cb7e06b24c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c833f6d2b4b3ca8e3bcd738c9dd0a8cb7e06b24c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c833f6d2b4b3ca8e3bcd738c9dd0a8cb7e06b24c"}], "stats": {"total": 45, "additions": 42, "deletions": 3}, "files": [{"sha": "e43870de9ddce0da6a5a377ef1557ed64ef4c403", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e7303e85aea62c60818fe9586afab8f397e8a4d9/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e7303e85aea62c60818fe9586afab8f397e8a4d9/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=e7303e85aea62c60818fe9586afab8f397e8a4d9", "patch": "@@ -1,3 +1,9 @@\n+2007-08-15  Francois-Xavier Coudert  <fxcoudert@gcc.gnu.org>\n+\n+\tPR fortran/33066\n+\t* decl.c (gfc_get_type_attr_spec): Fix whitespace.\n+\t(gfc_match_derived_decl): Fix logic.\n+\n 2007-08-14  Francois-Xavier Coudert  <fxcoudert@gcc.gnu.org>\n \n \tPR fortran/33073"}, {"sha": "81623006c0108923dc33a1a318c21dccd9767db4", "filename": "gcc/fortran/decl.c", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e7303e85aea62c60818fe9586afab8f397e8a4d9/gcc%2Ffortran%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e7303e85aea62c60818fe9586afab8f397e8a4d9/gcc%2Ffortran%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fdecl.c?ref=e7303e85aea62c60818fe9586afab8f397e8a4d9", "patch": "@@ -5404,7 +5404,7 @@ gfc_get_type_attr_spec (symbol_attribute *attr)\n       if (gfc_add_access (attr, ACCESS_PUBLIC, NULL, NULL) == FAILURE)\n \treturn MATCH_ERROR;\n     }\n-  else if(gfc_match(\" , bind ( c )\") == MATCH_YES)\n+  else if (gfc_match(\" , bind ( c )\") == MATCH_YES)\n     {\n       /* If the type is defined to be bind(c) it then needs to make\n \t sure that all fields are interoperable.  This will\n@@ -5435,6 +5435,7 @@ gfc_match_derived_decl (void)\n   gfc_symbol *sym;\n   match m;\n   match is_type_attr_spec = MATCH_NO;\n+  bool seen_attr = false;\n \n   if (gfc_current_state () == COMP_DERIVED)\n     return MATCH_NO;\n@@ -5446,9 +5447,11 @@ gfc_match_derived_decl (void)\n       is_type_attr_spec = gfc_get_type_attr_spec (&attr);\n       if (is_type_attr_spec == MATCH_ERROR)\n \treturn MATCH_ERROR;\n+      if (is_type_attr_spec == MATCH_YES)\n+\tseen_attr = true;\n     } while (is_type_attr_spec == MATCH_YES);\n \n-  if (gfc_match (\" ::\") != MATCH_YES && attr.access != ACCESS_UNKNOWN)\n+  if (gfc_match (\" ::\") != MATCH_YES && seen_attr)\n     {\n       gfc_error (\"Expected :: in TYPE definition at %C\");\n       return MATCH_ERROR;"}, {"sha": "08d33ac1c02d4dc96e27a122628ffe53567619de", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e7303e85aea62c60818fe9586afab8f397e8a4d9/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e7303e85aea62c60818fe9586afab8f397e8a4d9/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=e7303e85aea62c60818fe9586afab8f397e8a4d9", "patch": "@@ -1,3 +1,9 @@\n+2007-08-15  Francois-Xavier Coudert  <fxcoudert@gcc.gnu.org>\n+\n+\tPR fortran/33066\n+\t* gfortran.dg/use_8.f90: New test.\n+\t* gfortran.dg/c_loc_tests_2.f03: Fix code.\n+\n 2007-08-14  Paolo Carlini  <pcarlini@suse.de>\n \n \tPR c++/27211"}, {"sha": "4bdf395d14b52005c5f03bcfc7b257e7bb2a59bf", "filename": "gcc/testsuite/gfortran.dg/c_loc_tests_2.f03", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e7303e85aea62c60818fe9586afab8f397e8a4d9/gcc%2Ftestsuite%2Fgfortran.dg%2Fc_loc_tests_2.f03", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e7303e85aea62c60818fe9586afab8f397e8a4d9/gcc%2Ftestsuite%2Fgfortran.dg%2Fc_loc_tests_2.f03", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fc_loc_tests_2.f03?ref=e7303e85aea62c60818fe9586afab8f397e8a4d9", "patch": "@@ -56,7 +56,7 @@ subroutine test1() bind(c)\n   end subroutine test1\n \n   subroutine test2() bind(c)\n-    type, bind(c) f90type\n+    type, bind(c) :: f90type\n        integer(c_int) :: i\n        real(c_double) :: x\n     end type f90type"}, {"sha": "adb265e5b4c4f171989394615fd4031bd834495e", "filename": "gcc/testsuite/gfortran.dg/use_8.f90", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e7303e85aea62c60818fe9586afab8f397e8a4d9/gcc%2Ftestsuite%2Fgfortran.dg%2Fuse_8.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e7303e85aea62c60818fe9586afab8f397e8a4d9/gcc%2Ftestsuite%2Fgfortran.dg%2Fuse_8.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fuse_8.f90?ref=e7303e85aea62c60818fe9586afab8f397e8a4d9", "patch": "@@ -0,0 +1,24 @@\n+! { dg-do compile }\n+module a\n+\n+  type, private, bind(C) b ! { dg-error \"Expected :: in TYPE definition\" }\n+    integer i\n+  end type b ! { dg-error \"Expecting END MODULE statement\" }\n+\n+  type, public c ! { dg-error \"Expected :: in TYPE definition\" }\n+    integer j\n+  end type c ! { dg-error \"Expecting END MODULE statement\" }\n+\n+  type, private d ! { dg-error \"Expected :: in TYPE definition\" }\n+    integer k\n+  end type b ! { dg-error \"Expecting END MODULE statement\" }\n+\n+  type, bind(C), public e ! { dg-error \"Expected :: in TYPE definition\" }\n+    integer l\n+  end type e ! { dg-error \"Expecting END MODULE statement\" }\n+\n+  type, bind(C) f ! { dg-error \"Expected :: in TYPE definition\" }\n+    integer m\n+  end type f ! { dg-error \"Expecting END MODULE statement\" }\n+\n+end module a"}]}