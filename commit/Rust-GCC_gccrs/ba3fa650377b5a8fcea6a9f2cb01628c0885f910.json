{"sha": "ba3fa650377b5a8fcea6a9f2cb01628c0885f910", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmEzZmE2NTAzNzdiNWE4ZmNlYTZhOWYyY2IwMTYyOGMwODg1ZjkxMA==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2008-08-05T09:40:19Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2008-08-05T09:40:19Z"}, "message": "sem_ch12.adb (Validate_Array_Type_Instance): Only apply complex visibility check on the component type if the simple test fails.\n\n2008-08-05  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_ch12.adb (Validate_Array_Type_Instance): Only apply complex\n\tvisibility check on the component type if the simple test fails.\n\nFrom-SVN: r138697", "tree": {"sha": "1f591f8af9c1510292e9b5dfb7f27511cb9ea326", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1f591f8af9c1510292e9b5dfb7f27511cb9ea326"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ba3fa650377b5a8fcea6a9f2cb01628c0885f910", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ba3fa650377b5a8fcea6a9f2cb01628c0885f910", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ba3fa650377b5a8fcea6a9f2cb01628c0885f910", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ba3fa650377b5a8fcea6a9f2cb01628c0885f910/comments", "author": null, "committer": null, "parents": [{"sha": "628a4180a38c05435b0c5d8e0190e2a6f7e54c38", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/628a4180a38c05435b0c5d8e0190e2a6f7e54c38", "html_url": "https://github.com/Rust-GCC/gccrs/commit/628a4180a38c05435b0c5d8e0190e2a6f7e54c38"}], "stats": {"total": 27, "additions": 24, "deletions": 3}, "files": [{"sha": "2628acedb223e875d55e536143ae99c4ecf76759", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba3fa650377b5a8fcea6a9f2cb01628c0885f910/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba3fa650377b5a8fcea6a9f2cb01628c0885f910/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=ba3fa650377b5a8fcea6a9f2cb01628c0885f910", "patch": "@@ -1,3 +1,14 @@\n+2008-08-05  Robert Dewar  <dewar@adacore.com>\n+\n+\t* sem_ch3.adb: Minor reformatting\n+\n+\t* prj-nmsc.adb: Minor reformatting\n+\n+2008-08-05  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_ch12.adb (Validate_Array_Type_Instance): Only apply complex\n+\tvisibility check on the component type if the simple test fails.\n+\n 2008-08-05  Jose Ruiz  <ruiz@adacore.com>\n \n \t* init.c (__gnat_install_handler for linux): If we are building the"}, {"sha": "dc23ddea238dfe08d3daec7d48711259cb7478a0", "filename": "gcc/ada/sem_ch12.adb", "status": "modified", "additions": 13, "deletions": 3, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba3fa650377b5a8fcea6a9f2cb01628c0885f910/gcc%2Fada%2Fsem_ch12.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba3fa650377b5a8fcea6a9f2cb01628c0885f910/gcc%2Fada%2Fsem_ch12.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch12.adb?ref=ba3fa650377b5a8fcea6a9f2cb01628c0885f910", "patch": "@@ -9246,10 +9246,20 @@ package body Sem_Ch12 is\n             Next_Index (I2);\n          end loop;\n \n-         if not Subtypes_Match\n-                  (Find_Actual_Type (Component_Type (A_Gen_T), A_Gen_T),\n-                   Component_Type (Act_T))\n+         --  Check matching subtypes. Note that there are complex visibility\n+         --  issues when the generic is a child unit and some aspect of the\n+         --  generic type is declared in a parent unit of the generic. We do\n+         --  the test to handle this special case only after a direct check\n+         --  for static matching has failed.\n+\n+         if Subtypes_Match\n+           (Component_Type (A_Gen_T), Component_Type (Act_T))\n+             or else Subtypes_Match\n+                      (Find_Actual_Type (Component_Type (A_Gen_T), A_Gen_T),\n+                       Component_Type (Act_T))\n          then\n+            null;\n+         else\n             Error_Msg_NE\n               (\"component subtype of actual does not match that of formal &\",\n                Actual, Gen_T);"}]}