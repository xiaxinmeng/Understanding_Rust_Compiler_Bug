{"sha": "501c4ee9fad68716497db4d96b63b801cc57b4a1", "node_id": "C_kwDOANBUbNoAKDUwMWM0ZWU5ZmFkNjg3MTY0OTdkYjRkOTZiNjNiODAxY2M1N2I0YTE", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2022-02-02T22:49:02Z"}, "committer": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2022-02-03T02:14:10Z"}, "message": "c++: dependent array bounds completion [PR104302]\n\nThe patch for PR55227 changed the minimal init-list handling in\ncp_complete_array_type to a call to reshape_init, which broke on the\ndependent initializer.  It occurred to me that trying to deduce the array\nsize from a dependent init-list is wrong in general, so let's just not.  I\nalso limited the reshape_init call to the case of a char array, as before\nthe patch for 55227; that's the only case where we want to strip a level of\nbraces from an array.\n\n\tPR c++/104302\n\ngcc/cp/ChangeLog:\n\n\t* decl.cc (maybe_deduce_size_from_array_init): Give up\n\ton type-dependent init.\n\t(cp_complete_array_type): Only call reshape_init for character\n\tarray.\n\ngcc/testsuite/ChangeLog:\n\n\t* g++.dg/template/array35.C: New test.\n\t* g++.dg/template/array36.C: New test.", "tree": {"sha": "31103d3c37e0e0e071bcd536a55890e206565dca", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/31103d3c37e0e0e071bcd536a55890e206565dca"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/501c4ee9fad68716497db4d96b63b801cc57b4a1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/501c4ee9fad68716497db4d96b63b801cc57b4a1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/501c4ee9fad68716497db4d96b63b801cc57b4a1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/501c4ee9fad68716497db4d96b63b801cc57b4a1/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dc898b2ba5c50a7311bc3137f0987a7831362ed8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dc898b2ba5c50a7311bc3137f0987a7831362ed8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dc898b2ba5c50a7311bc3137f0987a7831362ed8"}], "stats": {"total": 36, "additions": 34, "deletions": 2}, "files": [{"sha": "7b48b56231b0a8fdb312080ca27c5d46c89f707d", "filename": "gcc/cp/decl.cc", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/501c4ee9fad68716497db4d96b63b801cc57b4a1/gcc%2Fcp%2Fdecl.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/501c4ee9fad68716497db4d96b63b801cc57b4a1/gcc%2Fcp%2Fdecl.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.cc?ref=501c4ee9fad68716497db4d96b63b801cc57b4a1", "patch": "@@ -6017,6 +6017,11 @@ maybe_deduce_size_from_array_init (tree decl, tree init)\n \t\treturn;\n \t      if (!check_array_designated_initializer (ce, i))\n \t\tfailure = 1;\n+\t      /* If an un-designated initializer is type-dependent, we can't\n+\t\t check brace elision yet.  */\n+\t      if (ce->index == NULL_TREE\n+\t\t  && type_dependent_expression_p (ce->value))\n+\t\treturn;\n \t    }\n \t}\n \n@@ -8113,7 +8118,7 @@ cp_finish_decl (tree decl, tree init, bool init_const_expr_p,\n       else\n \t{\n \t  gcc_assert (!DECL_PRETTY_FUNCTION_P (decl));\n-\t  /* Deduce array size even if the initializer is dependent.  */\n+\t  /* Try to deduce array size.  */\n \t  maybe_deduce_size_from_array_init (decl, init);\n \t  /* And complain about multiple initializers.  */\n \t  if (init && TREE_CODE (init) == TREE_LIST && TREE_CHAIN (init)\n@@ -9570,7 +9575,8 @@ cp_complete_array_type (tree *ptype, tree initial_value, bool do_default)\n       /* An array of character type can be initialized from a\n \t brace-enclosed string constant so call reshape_init to\n \t remove the optional braces from a braced string literal.  */\n-      if (BRACE_ENCLOSED_INITIALIZER_P (initial_value))\n+      if (char_type_p (TYPE_MAIN_VARIANT (TREE_TYPE (*ptype)))\n+\t  && BRACE_ENCLOSED_INITIALIZER_P (initial_value))\n \tinitial_value = reshape_init (*ptype, initial_value,\n \t\t\t\t      tf_warning_or_error);\n "}, {"sha": "9fd02633523e4a70e9358a8051910d82a2bf92dc", "filename": "gcc/testsuite/g++.dg/template/array35.C", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/501c4ee9fad68716497db4d96b63b801cc57b4a1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Farray35.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/501c4ee9fad68716497db4d96b63b801cc57b4a1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Farray35.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Farray35.C?ref=501c4ee9fad68716497db4d96b63b801cc57b4a1", "patch": "@@ -0,0 +1,11 @@\n+// PR c++/104302\n+\n+struct ss {};\n+static ss ff(void* const v);\n+template <unsigned mem_size>\n+void f1(void) {\n+    int mem[mem_size];\n+    ss StateRegs[] = {\n+        ff(mem)\n+    };\n+}"}, {"sha": "1511da7020d8fa01a37586413a90d2a55b69f935", "filename": "gcc/testsuite/g++.dg/template/array36.C", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/501c4ee9fad68716497db4d96b63b801cc57b4a1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Farray36.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/501c4ee9fad68716497db4d96b63b801cc57b4a1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Farray36.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Farray36.C?ref=501c4ee9fad68716497db4d96b63b801cc57b4a1", "patch": "@@ -0,0 +1,15 @@\n+// Don't try to deduce array bounds from a dependent initializer.\n+// { dg-do compile { target c++11 } }\n+\n+struct A { int i,j; };\n+\n+template <class T> void f(T t)\n+{\n+  A ar[] = { t, t };\n+  static_assert (sizeof(ar)/sizeof(A) == 1, \"\");\n+}\n+\n+int main()\n+{\n+  f(42);\n+}"}]}