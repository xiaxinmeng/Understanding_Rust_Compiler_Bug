{"sha": "556d006c025885af824930d84776ec7119590850", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTU2ZDAwNmMwMjU4ODVhZjgyNDkzMGQ4NDc3NmVjNzExOTU5MDg1MA==", "commit": {"author": {"name": "Stan Shebs", "email": "shebs@apple.com", "date": "2002-09-06T13:00:39Z"}, "committer": {"name": "Stan Shebs", "email": "shebs@gcc.gnu.org", "date": "2002-09-06T13:00:39Z"}, "message": "weak: New directory.\n\n2002-09-06  Stan Shebs  <shebs@apple.com>\n            David Edelsohn  <edelsohn@gnu.org>\n\n        * gcc.dg/weak: New directory.\n        * gcc.dg/weak-[1-9].c: Move to new directory, remove all\n        target-specific xfail bits.\n        * gcc.dg/typeof-2.c: Move to new directory.\n        * gcc.dg/weak.exp: New expect script.\n\nCo-Authored-By: David Edelsohn <edelsohn@gnu.org>\n\nFrom-SVN: r56882", "tree": {"sha": "46c2f4a534b00e06016a7f48a6bd315e193eacc1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/46c2f4a534b00e06016a7f48a6bd315e193eacc1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/556d006c025885af824930d84776ec7119590850", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/556d006c025885af824930d84776ec7119590850", "html_url": "https://github.com/Rust-GCC/gccrs/commit/556d006c025885af824930d84776ec7119590850", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/556d006c025885af824930d84776ec7119590850/comments", "author": null, "committer": null, "parents": [{"sha": "96fd3851d2dccd73474ac16058cb606612f39e7a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/96fd3851d2dccd73474ac16058cb606612f39e7a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/96fd3851d2dccd73474ac16058cb606612f39e7a"}], "stats": {"total": 141, "additions": 67, "deletions": 74}, "files": [{"sha": "578b9b5b63fcc635bb636c2ca859c7265c106044", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/556d006c025885af824930d84776ec7119590850/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/556d006c025885af824930d84776ec7119590850/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=556d006c025885af824930d84776ec7119590850", "patch": "@@ -1,3 +1,12 @@\n+2002-09-06  Stan Shebs  <shebs@apple.com>\n+\t    David Edelsohn  <edelsohn@gnu.org>\n+\n+\t* gcc.dg/weak: New directory.\n+\t* gcc.dg/weak-[1-9].c: Move to new directory, remove all\n+\ttarget-specific xfail bits.\n+\t* gcc.dg/typeof-2.c: Move to new directory.\n+\t* gcc.dg/weak.exp: New expect script.\n+\n 2002-09-06  Alan Modra  <amodra@bigpond.net.au>\n \n \t* gcc.c-torture/execute/extzvsi.c: New test."}, {"sha": "77a231d88c05851e331997945b7cccc89f843efd", "filename": "gcc/testsuite/gcc.dg/weak-7.c", "status": "removed", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96fd3851d2dccd73474ac16058cb606612f39e7a/gcc%2Ftestsuite%2Fgcc.dg%2Fweak-7.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96fd3851d2dccd73474ac16058cb606612f39e7a/gcc%2Ftestsuite%2Fgcc.dg%2Fweak-7.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fweak-7.c?ref=96fd3851d2dccd73474ac16058cb606612f39e7a", "patch": "@@ -1,8 +0,0 @@\n-/* { dg-do compile } */\n-/* { dg-excess-errors \"COFF does not support weak symbols\" { target *-*-coff i?86-pc-cygwin h8300-*-hms } } */\n-/* { dg-excess-errors \"Darwin does not support weak symbols\" { target *-*-darwin* } } */\n-\n-extern void * foo (void);\n-void * foo (void) { return (void *)foo; } /* { dg-error \"precede\" } */\n-\n-extern void * foo (void) __attribute__((weak));"}, {"sha": "b5bb120a87b68e4c2df641c81095c99bb6f4854d", "filename": "gcc/testsuite/gcc.dg/weak-8.c", "status": "removed", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96fd3851d2dccd73474ac16058cb606612f39e7a/gcc%2Ftestsuite%2Fgcc.dg%2Fweak-8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96fd3851d2dccd73474ac16058cb606612f39e7a/gcc%2Ftestsuite%2Fgcc.dg%2Fweak-8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fweak-8.c?ref=96fd3851d2dccd73474ac16058cb606612f39e7a", "patch": "@@ -1,10 +0,0 @@\n-/* { dg-do assemble } */\n-\n-/* COFF does not support weak, and dg doesn't support UNSUPPORTED.  */\n-/* { dg-do assemble { xfail *-*-coff i?86-pc-cygwin h8300-*-hms *-*-darwin* } } */\n-\n-__attribute__ ((weak)) int i;\n-\n-int f() {\n-  return i;\n-}"}, {"sha": "34d67b20fdc9b865d115e7bd49d55b8524da3d49", "filename": "gcc/testsuite/gcc.dg/weak/typeof-2.c", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/556d006c025885af824930d84776ec7119590850/gcc%2Ftestsuite%2Fgcc.dg%2Fweak%2Ftypeof-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/556d006c025885af824930d84776ec7119590850/gcc%2Ftestsuite%2Fgcc.dg%2Fweak%2Ftypeof-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fweak%2Ftypeof-2.c?ref=556d006c025885af824930d84776ec7119590850", "previous_filename": "gcc/testsuite/gcc.dg/typeof-2.c"}, {"sha": "52d7230ed04b61fd2e315b92ed800d14a475a5c6", "filename": "gcc/testsuite/gcc.dg/weak/weak-1.c", "status": "renamed", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/556d006c025885af824930d84776ec7119590850/gcc%2Ftestsuite%2Fgcc.dg%2Fweak%2Fweak-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/556d006c025885af824930d84776ec7119590850/gcc%2Ftestsuite%2Fgcc.dg%2Fweak%2Fweak-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fweak%2Fweak-1.c?ref=556d006c025885af824930d84776ec7119590850", "patch": "@@ -1,14 +1,6 @@\n /* { dg-do compile } */\n /* { dg-options \"-fno-common\" } */\n \n-/* COFF does not support weak, and dg doesn't support UNSUPPORTED.  */\n-/* { dg-do compile { xfail *-*-coff i?86-pc-cygwin h8300-*-hms *-*-darwin* } } */\n-\n-/* { dg-final { global target_triplet } } */\n-/* { dg-final { if [string match *-*-darwin* $target_triplet ] {return} } } */\n-/* { dg-final { if [string match h8300-*-hms $target_triplet ] {return} } } */\n-/* { dg-final { if [string match i?86-pc-cygwin $target_triplet ] {return} } } */\n-/* { dg-final { if [string match *-*-coff $target_triplet ] {return} } } */\n /* { dg-final { scan-assembler \"weak\\[^ \\t\\]*\\[ \\t\\]_?a\" } } */\n /* { dg-final { scan-assembler \"weak\\[^ \\t\\]*\\[ \\t\\]_?b\" } } */\n /* { dg-final { scan-assembler \"weak\\[^ \\t\\]*\\[ \\t\\]_?c\" } } */", "previous_filename": "gcc/testsuite/gcc.dg/weak-1.c"}, {"sha": "37fa19a1a65d0a325bd94ac0e59f6002657334d4", "filename": "gcc/testsuite/gcc.dg/weak/weak-2.c", "status": "renamed", "additions": 1, "deletions": 9, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/556d006c025885af824930d84776ec7119590850/gcc%2Ftestsuite%2Fgcc.dg%2Fweak%2Fweak-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/556d006c025885af824930d84776ec7119590850/gcc%2Ftestsuite%2Fgcc.dg%2Fweak%2Fweak-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fweak%2Fweak-2.c?ref=556d006c025885af824930d84776ec7119590850", "patch": "@@ -1,14 +1,6 @@\n /* { dg-do compile } */\n /* { dg-options \"-fno-common\" } */\n \n-/* COFF does not support weak, and dg doesn't support UNSUPPORTED.  */\n-/* { dg-do compile { xfail *-*-coff i?86-pc-cygwin h8300-*-hms *-*-darwin* } } */\n-\n-/* { dg-final { global target_triplet } } */\n-/* { dg-final { if [string match *-*-darwin* $target_triplet ] {return} } } */\n-/* { dg-final { if [string match h8300-*-hms $target_triplet ] {return} } } */\n-/* { dg-final { if [string match i?86-pc-cygwin $target_triplet ] {return} } } */\n-/* { dg-final { if [string match *-*-coff $target_triplet ] {return} } } */\n /* { dg-final { scan-assembler \"weak\\[^ \\t\\]*\\[ \\t\\]_?ffoo1a\" } } */\n /* { dg-final { scan-assembler \"weak\\[^ \\t\\]*\\[ \\t\\]_?ffoo1b\" } } */\n /* { dg-final { scan-assembler \"weak\\[^ \\t\\]*\\[ \\t\\]_?ffoo1c\" } } */\n@@ -31,7 +23,7 @@ void * foo1b (void)\n   return (void *)ffoo1b;\n }\n \n-extern void * ffoo1c (void);  /* { dg-warning \"applying #pragma weak\" \"applying #pragma weak\" { xfail *-*-coff i?86-pc-cygwin h8300-*-hms *-*-darwin* } } */\n+extern void * ffoo1c (void);  /* { dg-warning \"applying #pragma weak\" \"applying #pragma weak\" } */\n void * foo1c (void)\n {\n   return (void *)ffoo1c;", "previous_filename": "gcc/testsuite/gcc.dg/weak-2.c"}, {"sha": "47359edcd098e791d0703727f3d5677de96eb5c2", "filename": "gcc/testsuite/gcc.dg/weak/weak-3.c", "status": "renamed", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/556d006c025885af824930d84776ec7119590850/gcc%2Ftestsuite%2Fgcc.dg%2Fweak%2Fweak-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/556d006c025885af824930d84776ec7119590850/gcc%2Ftestsuite%2Fgcc.dg%2Fweak%2Fweak-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fweak%2Fweak-3.c?ref=556d006c025885af824930d84776ec7119590850", "patch": "@@ -1,16 +1,6 @@\n /* { dg-do compile } */\n /* { dg-options \"-fno-common\" } */\n \n-/* COFF does not support weak, and dg doesn't support UNSUPPORTED.  */\n-/* { dg-do compile { xfail *-*-coff i?86-pc-cygwin h8300-*-hms *-*-darwin* } } */\n-/* { dg-excess-errors \"COFF does not support weak symbols\" { target *-*-coff i?86-pc-cygwin h8300-*-hms } } */\n-/* { dg-excess-errors \"Darwin does not support weak symbols\" { target *-*-darwin* } } */\n-\n-/* { dg-final { global target_triplet } } */\n-/* { dg-final { if [string match *-*-darwin* $target_triplet ] {return} } } */\n-/* { dg-final { if [string match h8300-*-hms $target_triplet ] {return} } } */\n-/* { dg-final { if [string match i?86-pc-cygwin $target_triplet ] {return} } } */\n-/* { dg-final { if [string match *-*-coff $target_triplet ] {return} } } */\n /* { dg-final { scan-assembler \"weak\\[^ \\t\\]*\\[ \\t\\]_?ffoo1a\" } } */\n /* { dg-final { scan-assembler \"weak\\[^ \\t\\]*\\[ \\t\\]_?ffoo1b\" } } */\n /* { dg-final { scan-assembler \"weak\\[^ \\t\\]*\\[ \\t\\]_?ffoo1c\" } } */", "previous_filename": "gcc/testsuite/gcc.dg/weak-3.c"}, {"sha": "bd530ab594020d3d509ef075f7015dda2ab9263e", "filename": "gcc/testsuite/gcc.dg/weak/weak-4.c", "status": "renamed", "additions": 2, "deletions": 10, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/556d006c025885af824930d84776ec7119590850/gcc%2Ftestsuite%2Fgcc.dg%2Fweak%2Fweak-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/556d006c025885af824930d84776ec7119590850/gcc%2Ftestsuite%2Fgcc.dg%2Fweak%2Fweak-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fweak%2Fweak-4.c?ref=556d006c025885af824930d84776ec7119590850", "patch": "@@ -1,14 +1,6 @@\n /* { dg-do compile } */\n /* { dg-options \"-fno-common\" } */\n \n-/* COFF does not support weak, and dg doesn't support UNSUPPORTED.  */\n-/* { dg-do compile { xfail *-*-coff i?86-pc-cygwin h8300-*-hms *-*-darwin* } } */\n-\n-/* { dg-final { global target_triplet } } */\n-/* { dg-final { if [string match *-*-darwin* $target_triplet ] {return} } } */\n-/* { dg-final { if [string match h8300-*-hms $target_triplet ] {return} } } */\n-/* { dg-final { if [string match i?86-pc-cygwin $target_triplet ] {return} } } */\n-/* { dg-final { if [string match *-*-coff $target_triplet ] {return} } } */\n /* { dg-final { scan-assembler \"weak\\[^ \\t\\]*\\[ \\t\\]_?vfoo1a\" } } */\n /* { dg-final { scan-assembler \"weak\\[^ \\t\\]*\\[ \\t\\]_?vfoo1b\" } } */\n /* { dg-final { scan-assembler \"weak\\[^ \\t\\]*\\[ \\t\\]_?vfoo1c\" } } */\n@@ -39,7 +31,7 @@ void * foo1b (void)\n }\n \n \n-extern int vfoo1c;  /* { dg-warning \"applying #pragma weak\" \"applying #pragma weak\" { xfail *-*-coff i?86-pc-cygwin h8300-*-hms *-*-darwin* } } */\n+extern int vfoo1c;  /* { dg-warning \"applying #pragma weak\" \"applying #pragma weak\" } */\n void * foo1c (void)\n {\n   return (void *)&vfoo1c;\n@@ -71,7 +63,7 @@ void * foo1f (void)\n #pragma weak vfoo1f\n \n \n-extern int vfoo1g;  /* { dg-warning \"applying #pragma weak\" \"applying #pragma weak\" { xfail *-*-coff i?86-pc-cygwin h8300-*-hms *-*-darwin* } } */\n+extern int vfoo1g;  /* { dg-warning \"applying #pragma weak\" \"applying #pragma weak\" } */\n void * foo1g (void)\n {\n   return (void *)&vfoo1g;", "previous_filename": "gcc/testsuite/gcc.dg/weak-4.c"}, {"sha": "c4f67e59c76df084f84421961d13464edfca0d45", "filename": "gcc/testsuite/gcc.dg/weak/weak-5.c", "status": "renamed", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/556d006c025885af824930d84776ec7119590850/gcc%2Ftestsuite%2Fgcc.dg%2Fweak%2Fweak-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/556d006c025885af824930d84776ec7119590850/gcc%2Ftestsuite%2Fgcc.dg%2Fweak%2Fweak-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fweak%2Fweak-5.c?ref=556d006c025885af824930d84776ec7119590850", "patch": "@@ -1,16 +1,6 @@\n /* { dg-do compile } */\n /* { dg-options \"-fno-common\" } */\n \n-/* COFF does not support weak, and dg doesn't support UNSUPPORTED.  */\n-/* { dg-do compile { xfail *-*-coff i?86-pc-cygwin h8300-*-hms *-*-darwin* } } */\n-/* { dg-excess-errors \"COFF does not support weak symbols\" { target *-*-coff i?86-pc-cygwin h8300-*-hms } } */\n-/* { dg-excess-errors \"Darwin does not support weak symbols\" { target *-*-darwin* } } */\n-\n-/* { dg-final { global target_triplet } } */\n-/* { dg-final { if [string match *-*-darwin* $target_triplet ] {return} } } */\n-/* { dg-final { if [string match h8300-*-hms $target_triplet ] {return} } } */\n-/* { dg-final { if [string match i?86-pc-cygwin $target_triplet ] {return} } } */\n-/* { dg-final { if [string match *-*-coff $target_triplet ] {return} } } */\n /* { dg-final { scan-assembler \"weak\\[^ \\t\\]*\\[ \\t\\]_?vfoo1a\" } } */\n /* { dg-final { scan-assembler \"weak\\[^ \\t\\]*\\[ \\t\\]_?vfoo1b\" } } */\n /* { dg-final { scan-assembler \"weak\\[^ \\t\\]*\\[ \\t\\]_?vfoo1c\" } } */", "previous_filename": "gcc/testsuite/gcc.dg/weak-5.c"}, {"sha": "8f88a675d31df46db405971bbaac7071d917bbe3", "filename": "gcc/testsuite/gcc.dg/weak/weak-6.c", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/556d006c025885af824930d84776ec7119590850/gcc%2Ftestsuite%2Fgcc.dg%2Fweak%2Fweak-6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/556d006c025885af824930d84776ec7119590850/gcc%2Ftestsuite%2Fgcc.dg%2Fweak%2Fweak-6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fweak%2Fweak-6.c?ref=556d006c025885af824930d84776ec7119590850", "patch": "@@ -1,6 +1,6 @@\n /* { dg-do compile } */\n \n extern void * foo (void);\n-void * foo (void) { return (void *)foo; } /* { dg-error \"precede\" \"\" { xfail *-*-coff i?86-pc-cygwin h8300-*-hms *-*-darwin* } } */\n+void * foo (void) { return (void *)foo; } /* { dg-error \"precede\" } */\n \n #pragma weak foo", "previous_filename": "gcc/testsuite/gcc.dg/weak-6.c"}, {"sha": "64d6155a890c6baaff02435a999dd9a4a25f5724", "filename": "gcc/testsuite/gcc.dg/weak/weak-7.c", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/556d006c025885af824930d84776ec7119590850/gcc%2Ftestsuite%2Fgcc.dg%2Fweak%2Fweak-7.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/556d006c025885af824930d84776ec7119590850/gcc%2Ftestsuite%2Fgcc.dg%2Fweak%2Fweak-7.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fweak%2Fweak-7.c?ref=556d006c025885af824930d84776ec7119590850", "patch": "@@ -0,0 +1,6 @@\n+/* { dg-do compile } */\n+\n+extern void * foo (void);\n+void * foo (void) { return (void *)foo; } /* { dg-error \"precede\" } */\n+\n+extern void * foo (void) __attribute__((weak));"}, {"sha": "6e9c267bd213133bd353670f877f489df1641d58", "filename": "gcc/testsuite/gcc.dg/weak/weak-8.c", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/556d006c025885af824930d84776ec7119590850/gcc%2Ftestsuite%2Fgcc.dg%2Fweak%2Fweak-8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/556d006c025885af824930d84776ec7119590850/gcc%2Ftestsuite%2Fgcc.dg%2Fweak%2Fweak-8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fweak%2Fweak-8.c?ref=556d006c025885af824930d84776ec7119590850", "patch": "@@ -0,0 +1,7 @@\n+/* { dg-do assemble } */\n+\n+__attribute__ ((weak)) int i;\n+\n+int f() {\n+  return i;\n+}"}, {"sha": "e5cbdb8bc8707b8baa6ca4e47690086454c19335", "filename": "gcc/testsuite/gcc.dg/weak/weak-9.c", "status": "renamed", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/556d006c025885af824930d84776ec7119590850/gcc%2Ftestsuite%2Fgcc.dg%2Fweak%2Fweak-9.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/556d006c025885af824930d84776ec7119590850/gcc%2Ftestsuite%2Fgcc.dg%2Fweak%2Fweak-9.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fweak%2Fweak-9.c?ref=556d006c025885af824930d84776ec7119590850", "patch": "@@ -1,14 +1,6 @@\n /* { dg-do compile } */\n /* { dg-options \"-fno-common\" } */\n \n-/* COFF does not support weak, and dg doesn't support UNSUPPORTED.  */\n-/* { dg-do compile { xfail *-*-coff i?86-pc-cygwin h8300-*-hms *-*-darwin* } } */\n-\n-/* { dg-final { global target_triplet } } */\n-/* { dg-final { if [string match *-*-darwin* $target_triplet ] {return} } } */\n-/* { dg-final { if [string match h8300-*-hms $target_triplet ] {return} } } */\n-/* { dg-final { if [string match i?86-pc-cygwin $target_triplet ] {return} } } */\n-/* { dg-final { if [string match *-*-coff $target_triplet ] {return} } } */\n /* { dg-final { scan-assembler \"weak\\[^ \\t\\]*\\[ \\t\\]_?f1\" } } */\n /* { dg-final { scan-assembler \"weak\\[^ \\t\\]*\\[ \\t\\]_?f2\" } } */\n /* { dg-final { scan-assembler \"weak\\[^ \\t\\]*\\[ \\t\\]_?f3\" } } */", "previous_filename": "gcc/testsuite/gcc.dg/weak-9.c"}, {"sha": "595ca92c00568cd3cb4c2d42adc3bb081821fb75", "filename": "gcc/testsuite/gcc.dg/weak/weak.exp", "status": "added", "additions": 41, "deletions": 0, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/556d006c025885af824930d84776ec7119590850/gcc%2Ftestsuite%2Fgcc.dg%2Fweak%2Fweak.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/556d006c025885af824930d84776ec7119590850/gcc%2Ftestsuite%2Fgcc.dg%2Fweak%2Fweak.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fweak%2Fweak.exp?ref=556d006c025885af824930d84776ec7119590850", "patch": "@@ -0,0 +1,41 @@\n+#   Copyright (C) 1997 Free Software Foundation, Inc.\n+\n+# This program is free software; you can redistribute it and/or modify\n+# it under the terms of the GNU General Public License as published by\n+# the Free Software Foundation; either version 2 of the License, or\n+# (at your option) any later version.\n+# \n+# This program is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+# GNU General Public License for more details.\n+# \n+# You should have received a copy of the GNU General Public License\n+# along with this program; if not, write to the Free Software\n+# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.  \n+\n+# GCC testsuite that uses the `dg.exp' driver.\n+\n+# Load support procs.\n+load_lib gcc-dg.exp\n+\n+# If a testcase doesn't have special options, use these.\n+global DEFAULT_CFLAGS\n+if ![info exists DEFAULT_CFLAGS] then {\n+    set DEFAULT_CFLAGS \" -ansi -pedantic-errors\"\n+}\n+\n+if { [ check_weak_available ] == 1 } {\n+\n+    dg-init\n+\n+    dg-runtest [lsort [glob -nocomplain $srcdir/$subdir/*.\\[cS\\]]] \\\n+\t\"\" $DEFAULT_CFLAGS\n+\n+    dg-finish\n+\n+} elseif { [ check_weak_available ] == 0 } {\n+    unsupported \"gcc.dg/weak\"\n+} else {\n+    unresolved \"gcc.dg/weak\"\n+}"}]}