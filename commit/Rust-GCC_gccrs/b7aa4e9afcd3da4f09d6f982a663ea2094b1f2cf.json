{"sha": "b7aa4e9afcd3da4f09d6f982a663ea2094b1f2cf", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjdhYTRlOWFmY2QzZGE0ZjA5ZDZmOTgyYTY2M2VhMjA5NGIxZjJjZg==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2013-03-08T08:45:29Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2013-03-08T08:45:29Z"}, "message": "tree-ssa-ter.c (is_replaceable_p): Do not TER across location or block changes with -Og.\n\n2013-03-08  Richard Biener  <rguenther@suse.de>\n\n\t* tree-ssa-ter.c (is_replaceable_p): Do not TER across location\n\tor block changes with -Og.  Fix for location / block encoding\n\tchanges and PHI arguments with locations.\n\nFrom-SVN: r196539", "tree": {"sha": "fc0ee6fbbcd767258261ffb472ddeebea39ea772", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fc0ee6fbbcd767258261ffb472ddeebea39ea772"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b7aa4e9afcd3da4f09d6f982a663ea2094b1f2cf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b7aa4e9afcd3da4f09d6f982a663ea2094b1f2cf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b7aa4e9afcd3da4f09d6f982a663ea2094b1f2cf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b7aa4e9afcd3da4f09d6f982a663ea2094b1f2cf/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c78f387a45b6832a56d7ecadfa47d0d54b3d8b7d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c78f387a45b6832a56d7ecadfa47d0d54b3d8b7d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c78f387a45b6832a56d7ecadfa47d0d54b3d8b7d"}], "stats": {"total": 28, "additions": 17, "deletions": 11}, "files": [{"sha": "c44b13bf69c4c52beb21916be47361f2f3c9b838", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7aa4e9afcd3da4f09d6f982a663ea2094b1f2cf/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7aa4e9afcd3da4f09d6f982a663ea2094b1f2cf/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b7aa4e9afcd3da4f09d6f982a663ea2094b1f2cf", "patch": "@@ -1,3 +1,9 @@\n+2013-03-08  Richard Biener  <rguenther@suse.de>\n+\n+\t* tree-ssa-ter.c (is_replaceable_p): Do not TER across location\n+\tor block changes with -Og.  Fix for location / block encoding\n+\tchanges and PHI arguments with locations.\n+\n 2013-03-07  Steven Bosscher  <steven@gcc.gnu.org>\n \n \t* bitmap.c (struct bitmap_descriptor_d): Use unsigned HOST_WIDEST_INT"}, {"sha": "2a2e143de38d02ae528343b97b8bb9797de9c5f4", "filename": "gcc/tree-ssa-ter.c", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7aa4e9afcd3da4f09d6f982a663ea2094b1f2cf/gcc%2Ftree-ssa-ter.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7aa4e9afcd3da4f09d6f982a663ea2094b1f2cf/gcc%2Ftree-ssa-ter.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-ter.c?ref=b7aa4e9afcd3da4f09d6f982a663ea2094b1f2cf", "patch": "@@ -399,22 +399,22 @@ is_replaceable_p (gimple stmt, bool ter)\n     return false;\n \n   locus1 = gimple_location (stmt);\n-  block1 = gimple_block (stmt);\n+  block1 = LOCATION_BLOCK (locus1);\n+  locus1 = LOCATION_LOCUS (locus1);\n \n   if (gimple_code (use_stmt) == GIMPLE_PHI)\n-    {\n-      locus2 = 0;\n-      block2 = NULL_TREE;\n-    }\n+    locus2 = gimple_phi_arg_location (use_stmt, PHI_ARG_INDEX_FROM_USE (use_p));\n   else\n-    {\n-      locus2 = gimple_location (use_stmt);\n-      block2 = gimple_block (use_stmt);\n-    }\n+    locus2 = gimple_location (use_stmt);\n+  block2 = LOCATION_BLOCK (locus2);\n+  locus2 = LOCATION_LOCUS (locus2);\n \n-  if (!optimize\n+  if ((!optimize || optimize_debug)\n       && ter\n-      && ((locus1 && locus1 != locus2) || (block1 && block1 != block2)))\n+      && ((locus1 != UNKNOWN_LOCATION\n+\t   && locus1 != locus2)\n+\t  || (block1 != NULL_TREE\n+\t      && block1 != block2)))\n     return false;\n \n   /* Used in this block, but at the TOP of the block, not the end.  */"}]}