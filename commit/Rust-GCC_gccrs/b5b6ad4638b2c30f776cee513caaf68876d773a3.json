{"sha": "b5b6ad4638b2c30f776cee513caaf68876d773a3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjViNmFkNDYzOGIyYzMwZjc3NmNlZTUxM2NhYWY2ODg3NmQ3NzNhMw==", "commit": {"author": {"name": "Michael Meissner", "email": "meissner@gcc.gnu.org", "date": "1992-08-17T17:45:19Z"}, "committer": {"name": "Michael Meissner", "email": "meissner@gcc.gnu.org", "date": "1992-08-17T17:45:19Z"}, "message": "Add missing return; delete unused vars & static functions.\n\nFrom-SVN: r1874", "tree": {"sha": "8cb61340ee36bb2a397596d069c19709d439d36d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8cb61340ee36bb2a397596d069c19709d439d36d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b5b6ad4638b2c30f776cee513caaf68876d773a3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b5b6ad4638b2c30f776cee513caaf68876d773a3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b5b6ad4638b2c30f776cee513caaf68876d773a3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b5b6ad4638b2c30f776cee513caaf68876d773a3/comments", "author": null, "committer": null, "parents": [{"sha": "0bba3f6fb7f833ee2193c05d7f6d3fe781d332e9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0bba3f6fb7f833ee2193c05d7f6d3fe781d332e9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0bba3f6fb7f833ee2193c05d7f6d3fe781d332e9"}], "stats": {"total": 13, "additions": 8, "deletions": 5}, "files": [{"sha": "fe5c60662130a996ecb44009a165d8e59f8bf0fd", "filename": "gcc/genattrtab.c", "status": "modified", "additions": 8, "deletions": 5, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b5b6ad4638b2c30f776cee513caaf68876d773a3/gcc%2Fgenattrtab.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b5b6ad4638b2c30f776cee513caaf68876d773a3/gcc%2Fgenattrtab.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgenattrtab.c?ref=b5b6ad4638b2c30f776cee513caaf68876d773a3", "patch": "@@ -1067,7 +1067,6 @@ convert_set_attr_alternative (exp, num_alt, insn_code, insn_index)\n      int num_alt;\n      int insn_code, insn_index;\n {\n-  rtx newexp;\n   rtx condexp;\n   int i;\n \n@@ -2121,7 +2120,7 @@ simplify_cond (exp, insn_code, insn_index)\n   int len = XVECLEN (exp, 0);\n   rtx *tests = (rtx *) alloca (len * sizeof (rtx));\n   int allsame = 1;\n-  char *spacer, *first_spacer;\n+  char *first_spacer;\n \n   /* This lets us free all storage allocated below, if appropriate.  */\n   first_spacer = (char *) obstack_finish (rtl_obstack);\n@@ -2373,7 +2372,6 @@ make_alternative_compare (mask)\n {\n   rtx newexp;\n   int i;\n-  char *alternative;\n \n   /* Find the bit.  */\n   for (i = 0; (mask & (1 << i)) == 0; i++)\n@@ -2996,7 +2994,7 @@ optimize_attrs ()\n {\n   struct attr_desc *attr;\n   struct attr_value *av;\n-  struct insn_ent *ie, *nextie;\n+  struct insn_ent *ie;\n   rtx newexp;\n   int something_changed = 1;\n   int i;\n@@ -3084,6 +3082,7 @@ optimize_attrs ()\n     }\n }\n \n+#if 0\n static rtx\n simplify_by_alternatives (exp, insn_code, insn_index)\n      rtx exp;\n@@ -3115,6 +3114,7 @@ simplify_by_alternatives (exp, insn_code, insn_index)\n   current_alternative_string = 0;\n   return simplify_cond (newexp, insn_code, insn_index);\n }\n+#endif\n \f\n /* An expression where all the unknown terms are EQ_ATTR tests can be\n    rearranged into a COND provided we can enumerate all possible\n@@ -3509,6 +3509,8 @@ simplify_with_current_value (exp, space, ndim)\n       if (GET_CODE (x) == EQ_ATTR)\n \tMEM_VOLATILE_P (x) = 1;\n     }\n+\n+  return exp;\n }\n \n /* Reduce the expression EXP based on the MEM_VOLATILE_P settings of\n@@ -5091,8 +5093,10 @@ static rtx\n copy_rtx_unchanging (orig)\n      register rtx orig;\n {\n+#if 0\n   register rtx copy;\n   register RTX_CODE code;\n+#endif\n \n   if (RTX_UNCHANGING_P (orig) || MEM_IN_STRUCT_P (orig))\n     return orig;\n@@ -5149,7 +5153,6 @@ main (argc, argv)\n   FILE *infile;\n   register int c;\n   struct attr_desc *attr;\n-  struct attr_value *av;\n   struct insn_def *id;\n   rtx tem;\n   int i;"}]}