{"sha": "1fbbc69cdffb4715ba395e7754d801aebdf992f7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWZiYmM2OWNkZmZiNDcxNWJhMzk1ZTc3NTRkODAxYWViZGY5OTJmNw==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2011-12-08T23:27:33Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2011-12-08T23:27:33Z"}, "message": "compiler: Don't check for hidden fields on struct assignments.\n\nFrom-SVN: r182143", "tree": {"sha": "2de9d0efcb376d34885e8e97b873e5013b7bb9c6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2de9d0efcb376d34885e8e97b873e5013b7bb9c6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1fbbc69cdffb4715ba395e7754d801aebdf992f7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1fbbc69cdffb4715ba395e7754d801aebdf992f7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1fbbc69cdffb4715ba395e7754d801aebdf992f7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1fbbc69cdffb4715ba395e7754d801aebdf992f7/comments", "author": null, "committer": null, "parents": [{"sha": "0ee1c847f75174bb87a54edb32f7f7cf27681300", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0ee1c847f75174bb87a54edb32f7f7cf27681300", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0ee1c847f75174bb87a54edb32f7f7cf27681300"}], "stats": {"total": 154, "additions": 48, "deletions": 106}, "files": [{"sha": "7314288aa4883fb32b0ee7293c92e5a5e670e39a", "filename": "gcc/go/gofrontend/expressions.cc", "status": "modified", "additions": 36, "deletions": 1, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1fbbc69cdffb4715ba395e7754d801aebdf992f7/gcc%2Fgo%2Fgofrontend%2Fexpressions.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1fbbc69cdffb4715ba395e7754d801aebdf992f7/gcc%2Fgo%2Fgofrontend%2Fexpressions.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2Fexpressions.cc?ref=1fbbc69cdffb4715ba395e7754d801aebdf992f7", "patch": "@@ -12817,7 +12817,22 @@ Composite_literal_expression::lower_struct(Gogo* gogo, Type* type)\n   Location location = this->location();\n   Struct_type* st = type->struct_type();\n   if (this->vals_ == NULL || !this->has_keys_)\n-    return new Struct_construction_expression(type, this->vals_, location);\n+    {\n+      if (this->vals_ != NULL && !this->vals_->empty())\n+\t{\n+\t  std::string reason;\n+\t  if (type->has_hidden_fields(NULL, &reason))\n+\t    {\n+\t      if (reason.empty())\n+\t\terror_at(this->location(),\n+\t\t\t \"implicit assignment of hidden field\");\n+\t      else\n+\t\terror_at(this->location(), \"%s\", reason.c_str());\n+\t    }\n+\t}\n+\n+      return new Struct_construction_expression(type, this->vals_, location);\n+    }\n \n   size_t field_count = st->field_count();\n   std::vector<Expression*> vals(field_count);\n@@ -12964,6 +12979,26 @@ Composite_literal_expression::lower_struct(Gogo* gogo, Type* type)\n \t  return Expression::make_error(location);\n \t}\n \n+      if (type->named_type() != NULL\n+\t  && type->named_type()->named_object()->package() != NULL\n+\t  && Gogo::is_hidden_name(sf->field_name()))\n+\terror_at(name_expr->location(),\n+\t\t \"assignment of unexported field %qs in %qs literal\",\n+\t\t Gogo::message_name(sf->field_name()).c_str(),\n+\t\t type->named_type()->message_name().c_str());\n+      else\n+\t{\n+\t  std::string reason;\n+\t  if (sf->type()->has_hidden_fields(NULL, &reason))\n+\t    {\n+\t      if (reason.empty())\n+\t\terror_at(name_expr->location(),\n+\t\t\t \"implicit assignment of hidden field\");\n+\t      else\n+\t\terror_at(name_expr->location(), \"%s\", reason.c_str());\n+\t    }\n+\t}\n+\n       vals[index] = val;\n     }\n "}, {"sha": "fed83b31b9a7dd15d6279a747df748cd5052a3b0", "filename": "gcc/go/gofrontend/types.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1fbbc69cdffb4715ba395e7754d801aebdf992f7/gcc%2Fgo%2Fgofrontend%2Ftypes.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1fbbc69cdffb4715ba395e7754d801aebdf992f7/gcc%2Fgo%2Fgofrontend%2Ftypes.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2Ftypes.cc?ref=1fbbc69cdffb4715ba395e7754d801aebdf992f7", "patch": "@@ -605,7 +605,7 @@ Type::are_assignable_check_hidden(const Type* lhs, const Type* rhs,\n bool\n Type::are_assignable(const Type* lhs, const Type* rhs, std::string* reason)\n {\n-  return Type::are_assignable_check_hidden(lhs, rhs, true, reason);\n+  return Type::are_assignable_check_hidden(lhs, rhs, false, reason);\n }\n \n // Like are_assignable but don't check for hidden fields."}, {"sha": "2192f9ede0884fce55a3426702aa911b2d7aa285", "filename": "gcc/testsuite/go.test/test/assign.go", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1fbbc69cdffb4715ba395e7754d801aebdf992f7/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fassign.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1fbbc69cdffb4715ba395e7754d801aebdf992f7/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fassign.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fassign.go?ref=1fbbc69cdffb4715ba395e7754d801aebdf992f7", "patch": "@@ -16,38 +16,38 @@ type T struct {\n func main() {\n \t{\n \t\tvar x, y sync.Mutex\n-\t\tx = y\t// ERROR \"assignment.*Mutex\"\n+\t\tx = y // ok\n \t\t_ = x\n \t}\n \t{\n \t\tvar x, y T\n-\t\tx = y\t// ERROR \"assignment.*Mutex\"\n+\t\tx = y // ok\n \t\t_ = x\n \t}\n \t{\n \t\tvar x, y [2]sync.Mutex\n-\t\tx = y\t// ERROR \"assignment.*Mutex\"\n+\t\tx = y // ok\n \t\t_ = x\n \t}\n \t{\n \t\tvar x, y [2]T\n-\t\tx = y\t// ERROR \"assignment.*Mutex\"\n+\t\tx = y // ok\n \t\t_ = x\n \t}\n \t{\n-\t\tx := sync.Mutex{0, 0}\t// ERROR \"assignment.*Mutex\"\n+\t\tx := sync.Mutex{0, 0} // ERROR \"assignment.*Mutex\"\n \t\t_ = x\n \t}\n \t{\n-\t\tx := sync.Mutex{key: 0}\t// ERROR \"(unknown|assignment).*Mutex\"\n+\t\tx := sync.Mutex{key: 0} // ERROR \"(unknown|assignment).*Mutex\"\n \t\t_ = x\n \t}\n \t{\n-\t\tx := &sync.Mutex{}\t// ok\n-\t\tvar y sync.Mutex\t// ok\n-\t\ty = *x\t// ERROR \"assignment.*Mutex\"\n-\t\t*x = y\t// ERROR \"assignment.*Mutex\"\n+\t\tx := &sync.Mutex{} // ok\n+\t\tvar y sync.Mutex   // ok\n+\t\ty = *x             // ok\n+\t\t*x = y             // ok\n \t\t_ = x\n \t\t_ = y\n-\t}\t\t\n+\t}\n }"}, {"sha": "64d7a29e7e134db4e216885fb28d31255fe6399e", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug226.dir/x.go", "status": "removed", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ee1c847f75174bb87a54edb32f7f7cf27681300/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug226.dir%2Fx.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ee1c847f75174bb87a54edb32f7f7cf27681300/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug226.dir%2Fx.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug226.dir%2Fx.go?ref=0ee1c847f75174bb87a54edb32f7f7cf27681300", "patch": "@@ -1,9 +0,0 @@\n-// Copyright 2009 The Go Authors. All rights reserved.\n-// Use of this source code is governed by a BSD-style\n-// license that can be found in the LICENSE file.\n-\n-package x\n-\n-type T struct { x, Y int }\n-\n-func (t T) M()"}, {"sha": "c66d592b7c01166418656a060180705c9620c02a", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug226.dir/y.go", "status": "removed", "additions": 0, "deletions": 31, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ee1c847f75174bb87a54edb32f7f7cf27681300/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug226.dir%2Fy.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ee1c847f75174bb87a54edb32f7f7cf27681300/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug226.dir%2Fy.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug226.dir%2Fy.go?ref=0ee1c847f75174bb87a54edb32f7f7cf27681300", "patch": "@@ -1,31 +0,0 @@\n-// Copyright 2009 The Go Authors. All rights reserved.\n-// Use of this source code is governed by a BSD-style\n-// license that can be found in the LICENSE file.\n-\n-package y\n-\n-import \"./x\"\n-\n-func f() {\n-\tok := new(x.T);\n-\tvar ok1 x.T;\n-\tok2 := &ok1;\n-\tok3 := &x.T{};\n-\tok4 := &x.T{Y:2};\n-\t_ = x.T{};\n-\t_ = x.T{Y:2};\n-\t\n-\tok1.M();\n-\tbad1 := *ok;\t// ERROR \"assignment.*T\"\n-\tbad2 := ok1;\t// ERROR \"assignment.*T\"\n-\t*ok4 = ok1;\t// ERROR \"assignment.*T\"\n-\t*ok4 = *ok2;\t// ERROR \"assignment.*T\"\n-\tok1 = *ok4;\t// ERROR \"assignment.*T\"\n-\t_ = bad1;\n-\t_ = bad2;\n-\t_ = ok4;\n-\t_ = ok3;\n-\t_ = ok2;\n-\t_ = ok1;\n-\t_ = ok;\n-}"}, {"sha": "5457a64bc11fcf657e49eb193dc107a4b1d7141a", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug226.go", "status": "removed", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ee1c847f75174bb87a54edb32f7f7cf27681300/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug226.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ee1c847f75174bb87a54edb32f7f7cf27681300/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug226.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug226.go?ref=0ee1c847f75174bb87a54edb32f7f7cf27681300", "patch": "@@ -1,7 +0,0 @@\n-// $G $D/$F.dir/x.go && errchk $G $D/$F.dir/y.go\n-\n-// Copyright 2009 The Go Authors. All rights reserved.\n-// Use of this source code is governed by a BSD-style\n-// license that can be found in the LICENSE file.\n-\n-ignored"}, {"sha": "191f3ed2b4eef6ecf4e8058ec24ab2a903805c42", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug310.go", "status": "removed", "additions": 0, "deletions": 20, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ee1c847f75174bb87a54edb32f7f7cf27681300/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug310.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ee1c847f75174bb87a54edb32f7f7cf27681300/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug310.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug310.go?ref=0ee1c847f75174bb87a54edb32f7f7cf27681300", "patch": "@@ -1,20 +0,0 @@\n-// errchk $G $D/$F.go\n-\n-// Copyright 2010 The Go Authors.  All rights reserved.\n-// Use of this source code is governed by a BSD-style\n-// license that can be found in the LICENSE file.\n-\n-package p\n-\n-import (\n-\t\"bytes\"\n-\t\"fmt\"\n-)\n-\n-type t int\n-\n-func main() {\n-\t_ = t.bar\t// ERROR \"no method\"\n-\tvar b bytes.Buffer\n-\tfmt.Print(b)\t// ERROR \"implicit assignment\"\n-}"}, {"sha": "3701499ed20276d98e8f0add47b76c2ff0e33a2e", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug359.go", "status": "removed", "additions": 0, "deletions": 26, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ee1c847f75174bb87a54edb32f7f7cf27681300/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug359.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ee1c847f75174bb87a54edb32f7f7cf27681300/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug359.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug359.go?ref=0ee1c847f75174bb87a54edb32f7f7cf27681300", "patch": "@@ -1,26 +0,0 @@\n-// errchk $G $D/$F.go\n-\n-// Copyright 2011 The Go Authors.  All rights reserved.\n-// Use of this source code is governed by a BSD-style\n-// license that can be found in the LICENSE file.\n-\n-// issue 1910\n-// error on wrong line\n-\n-package main\n-\n-import \"container/list\"\n-\n-type Painting struct {\n-\tfragments list.List // private\n-}\n-\n-func (p Painting) Foo() {\n-\tfor e := p.fragments; e.Front() != nil; {  // ERROR \"unexported field|hidden field\"\n-\t}\n-}\n-\n-// from comment 4 of issue 1910\n-type Foo interface {\n-\tRun(a int) (a int)  // ERROR \"a redeclared|redefinition|previous\"\n-}"}]}