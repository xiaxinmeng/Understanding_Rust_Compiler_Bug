{"sha": "46c73d9a4f2a4e5309a682f669154ad0922af17d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDZjNzNkOWE0ZjJhNGU1MzA5YTY4MmY2NjkxNTRhZDA5MjJhZjE3ZA==", "commit": {"author": {"name": "Daniel Berlin", "email": "dberlin@dberlin.org", "date": "2005-07-10T19:34:45Z"}, "committer": {"name": "Daniel Berlin", "email": "dberlin@gcc.gnu.org", "date": "2005-07-10T19:34:45Z"}, "message": "tree-ssa-alias.c (free_used_part_map): Add missing free.\n\n2005-07-10  Daniel Berlin  <dberlin@dberlin.org>\n\n\t* tree-ssa-alias.c (free_used_part_map): Add missing free.\n\t(up_insert): Ditto.\n\nFrom-SVN: r101854", "tree": {"sha": "5d701436d717b42093ecf00407a4fa18555c8376", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5d701436d717b42093ecf00407a4fa18555c8376"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/46c73d9a4f2a4e5309a682f669154ad0922af17d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/46c73d9a4f2a4e5309a682f669154ad0922af17d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/46c73d9a4f2a4e5309a682f669154ad0922af17d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/46c73d9a4f2a4e5309a682f669154ad0922af17d/comments", "author": {"login": "dberlin", "id": 324715, "node_id": "MDQ6VXNlcjMyNDcxNQ==", "avatar_url": "https://avatars.githubusercontent.com/u/324715?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dberlin", "html_url": "https://github.com/dberlin", "followers_url": "https://api.github.com/users/dberlin/followers", "following_url": "https://api.github.com/users/dberlin/following{/other_user}", "gists_url": "https://api.github.com/users/dberlin/gists{/gist_id}", "starred_url": "https://api.github.com/users/dberlin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dberlin/subscriptions", "organizations_url": "https://api.github.com/users/dberlin/orgs", "repos_url": "https://api.github.com/users/dberlin/repos", "events_url": "https://api.github.com/users/dberlin/events{/privacy}", "received_events_url": "https://api.github.com/users/dberlin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "bd7d5043563d373a48da05c9290392bbf6cb56d8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bd7d5043563d373a48da05c9290392bbf6cb56d8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bd7d5043563d373a48da05c9290392bbf6cb56d8"}], "stats": {"total": 8, "additions": 8, "deletions": 0}, "files": [{"sha": "e6771e8dfef0d8abe4f5db65605dad808ee816a4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/46c73d9a4f2a4e5309a682f669154ad0922af17d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/46c73d9a4f2a4e5309a682f669154ad0922af17d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=46c73d9a4f2a4e5309a682f669154ad0922af17d", "patch": "@@ -1,3 +1,8 @@\n+2005-07-10  Daniel Berlin  <dberlin@dberlin.org>\n+\n+\t* tree-ssa-alias.c (free_used_part_map): Add missing free.\n+\t(up_insert): Ditto.\n+\n 2005-07-10  John David Anglin  <dave.anglin@nrc-cnrc.gc.ca>\n \n \t* pa.c (pa_commutative_p): Make PLUS commutative when"}, {"sha": "460a40499991a057139c2497ccc956e83e068194", "filename": "gcc/tree-ssa-alias.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/46c73d9a4f2a4e5309a682f669154ad0922af17d/gcc%2Ftree-ssa-alias.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/46c73d9a4f2a4e5309a682f669154ad0922af17d/gcc%2Ftree-ssa-alias.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-alias.c?ref=46c73d9a4f2a4e5309a682f669154ad0922af17d", "patch": "@@ -2344,6 +2344,7 @@ static void\n free_used_part_map (void *item)\n {\n   free (((struct used_part_map *)item)->to);\n+  free (item);\n }\n \n /* Lookup a used_part structure for a UID.  */\n@@ -2372,6 +2373,8 @@ up_insert (unsigned int uid, used_part_t to)\n   h->to = to;\n   loc = htab_find_slot_with_hash (used_portions, h,\n \t\t\t\t  uid, INSERT);\n+  if (*loc != NULL)\n+    free (*loc);\n   *(struct used_part_map **)  loc = h;\n }\n "}]}