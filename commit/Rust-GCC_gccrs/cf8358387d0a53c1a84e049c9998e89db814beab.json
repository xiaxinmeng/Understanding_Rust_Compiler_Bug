{"sha": "cf8358387d0a53c1a84e049c9998e89db814beab", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2Y4MzU4Mzg3ZDBhNTNjMWE4NGUwNDljOTk5OGU4OWRiODE0YmVhYg==", "commit": {"author": {"name": "Joseph Myers", "email": "joseph@codesourcery.com", "date": "2010-05-21T22:34:26Z"}, "committer": {"name": "Joseph Myers", "email": "jsm28@gcc.gnu.org", "date": "2010-05-21T22:34:26Z"}, "message": "diagnostic.c: Don't include tm.h, tree.h, tm_p.h, langhooks.h or langhooks-def.h.\n\n\t* diagnostic.c: Don't include tm.h, tree.h, tm_p.h, langhooks.h or\n\tlanghooks-def.h.\n\t(diagnostic_initialize): Initialize x_data not last_function.\n\t(diagnostic_report_current_function): Move to tree-diagnostic.c.\n\t(default_diagnostic_starter): Call\n\tdiagnostic_report_current_module not\n\tdiagnostic_report_current_function.\n\t(diagnostic_report_diagnostic): Initialize x_data not\n\tabstract_origin.\n\t(verbatim): Likewise.\n\t* diagnostic.h (struct diagnostic_info): Change abstract_origin to\n\tx_data.\n\t(struct diagnostic_context): Change last_function to x_data.\n\t(diagnostic_auxiliary_data): Replace with\n\tdiagnostic_context_auxiliary_data and\n\tdiagnostic_info_auxiliary_data.\n\t(diagnostic_last_function_changed, diagnostic_set_last_function,\n\tdiagnostic_report_current_function): Move to tree-diagnostic.h.\n\t(print_declaration, dump_generic_node, print_generic_stmt,\n\tprint_generic_stmt_indented, print_generic_expr,\n\tprint_generic_decl, debug_c_tree, dump_omp_clauses,\n\tprint_call_name, debug_generic_expr, debug_generic_stmt,\n\tdebug_tree_chain, default_tree_printer): Move to\n\ttree-pretty-print.h.\n\t(debug_gimple_stmt, debug_gimple_seq, print_gimple_seq,\n\tprint_gimple_stmt, print_gimple_expr, dump_gimple_stmt): Move to\n\tgimple-pretty-print.h.\n\t* pretty-print.c: Don't include tree.h\n\t(pp_base_format): Don't handle %K here.\n\t(pp_base_tree_identifier): Move to tree-pretty-print.c.\n\t* pretty-print.h (text_info): Change abstract_origin to x_data.\n\t(pp_tree_identifier, pp_unsupported_tree,\n\tpp_base_tree_identifier): Move to tree-pretty-print.h.\n\t* gimple-pretty-print.h, tree-diagnostic.c, tree-diagnostic.h,\n\ttree-pretty-print.h: New files.\n\t* tree-pretty-print.c: Include tree-pretty-print.h.\n\t(percent_K_format): New.  Moved from pretty-print.c.\n\t(pp_base_tree_identifier): Move from pretty-print.c.\n\t* c-objc-common.c: Include tree-pretty-print.h.\n\t(c_tree_printer): Handle %K here.\n\t* langhooks.c: Include tree-diagnostic.h.\n\t(lhd_print_error_function): Use diagnostic_abstract_origin macro.\n\t* toplev.c: Include tree-diagnostic.h and tree-pretty-print.h.\n\t(default_tree_printer): Handle %K using percent_K_format.\n\t(general_init): Use default_tree_diagnostic_starter.\n\t* tree.c: Include tree-diagnostic.h and tree-pretty-print.h.\n\t(free_lang_data): Use default_tree_diagnostic_starter.\n\t* c-pretty-print.c: Include tree-pretty-print.h.\n\t* cfgexpand.c: Include tree-pretty-print.h and\n\tgimple-pretty-print.h.\n\t* cgraphunit.c: Include tree-pretty-print.h and\n\tgimple-pretty-print.h.\n\t* dwarf2out.c: Include tree-pretty-print.h.\n\t* except.c: Include tree-pretty-print.h.\n\t* gimple-pretty-print.c: Include tree-pretty-print.h and\n\tgimple-pretty-print.h.\n\t* gimplify.c: Include tree-pretty-print.h.\n\t* graphite-poly.c: Include tree-pretty-print.h and\n\tgimple-pretty-print.h.\n\t* ipa-cp.c: Include tree-pretty-print.h.\n\t* ipa-inline.c: Include gimple-pretty-print.h.\n\t* ipa-prop.c: Include tree-pretty-print.h and\n\tgimple-pretty-print.h.\n\t* ipa-pure-const.c: Include gimple-pretty-print.h.\n\t* ipa-struct-reorg.c: Include tree-pretty-print.h and\n\tgimple-pretty-print.h.\n\t* ipa-type-escape.c: Include tree-pretty-print.h.\n\t* print-rtl.c: Include tree-pretty-print.h.\n\t* print-tree.c: Include gimple-pretty-print.h.\n\t* sese.c: Include tree-pretty-print.h.\n\t* tree-affine.c: Include tree-pretty-print.h.\n\t* tree-browser.c: Include tree-pretty-print.h.\n\t* tree-call-cdce.c: Include gimple-pretty-print.h.\n\t* tree-cfg.c: Include tree-pretty-print.h and\n\tgimple-pretty-print.h.\n\t* tree-chrec.c: Include tree-pretty-print.h.\n\t* tree-data-ref.c: Include tree-pretty-print.h and\n\tgimple-pretty-print.h.\n\t* tree-dfa.c: Include tree-pretty-print.h.\n\t* tree-if-conv.c: Include tree-pretty-print.h and\n\tgimple-pretty-print.h.\n\t* tree-inline.c: Include tree-pretty-print.h.\n\t* tree-into-ssa.c: Include tree-pretty-print.h and\n\tgimple-pretty-print.h.\n\t* tree-nrv.c: Include tree-pretty-print.h.\n\t* tree-object-size.c: Include tree-pretty-print.h and\n\tgimple-pretty-print.h.\n\t* tree-outof-ssa.c: Include tree-pretty-print.h and\n\tgimple-pretty-print.h.\n\t* tree-parloops.c: Include tree-pretty-print.h and\n\tgimple-pretty-print.h.\n\t* tree-predcom.c: Include tree-pretty-print.h and\n\tgimple-pretty-print.h.\n\t* tree-scalar-evolution.c: Include tree-pretty-print.h and\n\tgimple-pretty-print.h.\n\t* tree-sra.c: Include tree-pretty-print.h.\n\t* tree-ssa-address.c: Include tree-pretty-print.h.\n\t* tree-ssa-alias.c: Include tree-pretty-print.h.\n\t* tree-ssa-ccp.c: Include tree-pretty-print.h and\n\tgimple-pretty-print.h.\n\t* tree-ssa-coalesce.c: Include tree-pretty-print.h.\n\t* tree-ssa-copy.c: Include tree-pretty-print.h and\n\tgimple-pretty-print.h.\n\t* tree-ssa-copyrename.c: Include tree-pretty-print.h.\n\t* tree-ssa-dce.c: Include tree-pretty-print.h and\n\tgimple-pretty-print.h.\n\t* tree-ssa-dom.c: Include tree-pretty-print.h and\n\tgimple-pretty-print.h.\n\t* tree-ssa-dse.c: Include gimple-pretty-print.h.\n\t* tree-ssa-forwprop.c: Include tree-pretty-print.h.\n\t* tree-ssa-ifcombine.c: Include tree-pretty-print.h.\n\t* tree-ssa-live.c: Include tree-pretty-print.h and\n\tgimple-pretty-print.h.\n\t* tree-ssa-loop-im.c: Include tree-pretty-print.h and\n\tgimple-pretty-print.h.\n\t* tree-ssa-loop-ivcanon.c: Include tree-pretty-print.h and\n\tgimple-pretty-print.h.\n\t* tree-ssa-loop-ivopts.c: Include tree-pretty-print.h and\n\tgimple-pretty-print.h.\n\t* tree-ssa-loop-niter.c: Include tree-pretty-print.h and\n\tgimple-pretty-print.h.\n\t* tree-ssa-loop-prefetch.c: Include tree-pretty-print.h.\n\t* tree-ssa-math-opts.c: Include gimple-pretty-print.h.\n\t* tree-ssa-operands.c: Include tree-pretty-print.h and\n\tgimple-pretty-print.h.\n\t* tree-ssa-phiprop.c: Include tree-pretty-print.h and\n\tgimple-pretty-print.h.\n\t* tree-ssa-pre.c: Include tree-pretty-print.h and\n\tgimple-pretty-print.h.\n\t* tree-ssa-propagate.c: Include gimple-pretty-print.h.\n\t* tree-ssa-reassoc.c: Include tree-pretty-print.h and\n\tgimple-pretty-print.h.\n\t* tree-ssa-sccvn.c: Include tree-pretty-print.h and\n\tgimple-pretty-print.h.\n\t* tree-ssa-sink.c: Include gimple-pretty-print.h.\n\t* tree-ssa-ter.c: Include tree-pretty-print.h and\n\tgimple-pretty-print.h.\n\t* tree-ssa-uninit.c: Include gimple-pretty-print.h.\n\t* tree-ssa.c: Include tree-pretty-print.h and\n\tgimple-pretty-print.h.\n\t* tree-stdarg.c: Include gimple-pretty-print.h.\n\t* tree-switch-conversion.c: Include gimple-pretty-print.h.\n\t* tree-tailcall.c: Include tree-pretty-print.h and\n\tgimple-pretty-print.h.\n\t* tree-vect-data-refs.c: Include tree-pretty-print.h and\n\tgimple-pretty-print.h.\n\t* tree-vect-loop-manip.c: Include tree-pretty-print.h and\n\tgimple-pretty-print.h.\n\t* tree-vect-loop.c: Include tree-pretty-print.h and\n\tgimple-pretty-print.h.\n\t* tree-vect-patterns.c: Include gimple-pretty-print.h.\n\t* tree-vect-slp.c: Include tree-pretty-print.h and\n\tgimple-pretty-print.h.\n\t* tree-vect-stmts.c: Include tree-pretty-print.h and\n\tgimple-pretty-print.h.\n\t* tree-vectorizer.c: Include tree-pretty-print.h.\n\t* tree-vrp.c: Include tree-pretty-print.h and\n\tgimple-pretty-print.h.\n\t* value-prof.c: Include tree-pretty-print.h and\n\tgimple-pretty-print.h.\n\t* var-tracking.c: Include tree-pretty-print.h.\n\t* Makefile.in (OBJS-common): Add tree-diagnostic.o.\n\t(tree-diagnostic.o): New dependencies.\n\t(c-objc-common.o, c-pretty-print.o, langhooks.o, tree.o,\n\ttree-inline.o, print-tree.o, stor-layout.o, tree-ssa-uninit.o,\n\ttree-ssa.o, tree-into-ssa.o, tree-ssa-ter.o, tree-ssa-coalesce.o,\n\ttree-outof-ssa.o, tree-ssa-forwprop.o, tree-ssa-phiprop.o,\n\ttree-ssa-ifcombine.o, tree-nrv.o, tree-ssa-copy.o,\n\ttree-ssa-propagate.o, tree-ssa-dom.o, tree-ssa-uncprop.o,\n\ttree-ssa-live.o, tree-ssa-copyrename.o, tree-ssa-pre.o,\n\ttree-ssa-sccvn.o, tree-vrp.o, tree-cfg.o, tree-tailcall.o,\n\ttree-ssa-sink.o, tree-if-conv.o, tree-dfa.o, tree-ssa-operands.o,\n\ttree-ssa-address.o, tree-ssa-loop-niter.o,\n\ttree-ssa-loop-ivcanon.o, tree-ssa-loop-prefetch.o, tree-predcom.o,\n\ttree-ssa-loop-ivopts.o, tree-affine.o, tree-ssa-loop-im.o,\n\ttree-ssa-math-opts.o, tree-ssa-alias.o, tree-ssa-reassoc.o,\n\tgimplify.o, tree-browser.o, tree-chrec.o, tree-scalar-evolution.o,\n\ttree-data-ref.o, sese.o, graphite-poly.o, tree-vect-loop.o,\n\ttree-vect-loop-manip.o, tree-vect-patterns.o, tree-vect-slp.o,\n\ttree-vect-stmts.o, tree-vect-data-refs.o, tree-vectorizer.o,\n\ttree-parloops.o, tree-stdarg.o, tree-object-size.o,\n\tgimple-pretty-print.o, tree-pretty-print.o, diagnostic.o,\n\ttoplev.o, print-rtl.o, except.o, dwarf2out.o, cgraphunit.o,\n\tipa-prop.o, ipa-cp.o, ipa-inline.o, ipa-pure-const.o,\n\tipa-type-escape.o, ipa-struct-reorg.o, tree-ssa-dce.o,\n\ttree-call-cdce.o, tree-ssa-ccp.o, tree-sra.o,\n\ttree-switch-conversion.o, var-tracking.o, value-prof.o,\n\tcfgexpand.o, pretty-print.o): Update dependencies.\n\ncp:\n\t* error.c: Include tree-diagnostic.h and tree-pretty-print.h.\n\t(cp_print_error_function): Use diagnostic_abstract_origin macro.\n\t(cp_printer): Handle %K here using percent_K_format.\n\t* cxx-pretty-print.c: Include tree-pretty-print.h.\n\t* Make-lang.in (cp/error.o, cp/cxx-pretty-print.o): Update\n\tdependencies.\n\nFrom-SVN: r159685", "tree": {"sha": "f06079d4131c2b6dc758ed4ce1de2fde9d033750", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f06079d4131c2b6dc758ed4ce1de2fde9d033750"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cf8358387d0a53c1a84e049c9998e89db814beab", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cf8358387d0a53c1a84e049c9998e89db814beab", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cf8358387d0a53c1a84e049c9998e89db814beab", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cf8358387d0a53c1a84e049c9998e89db814beab/comments", "author": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cf4f4175974beb2e54a20393ad674008bb84c550", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cf4f4175974beb2e54a20393ad674008bb84c550", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cf4f4175974beb2e54a20393ad674008bb84c550"}], "stats": {"total": 1032, "additions": 780, "deletions": 252}, "files": [{"sha": "2033f79cf9bd598f5bfaf0c23ece9b9484f9e025", "filename": "gcc/ChangeLog", "status": "modified", "additions": 191, "deletions": 0, "changes": 191, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf8358387d0a53c1a84e049c9998e89db814beab/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf8358387d0a53c1a84e049c9998e89db814beab/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=cf8358387d0a53c1a84e049c9998e89db814beab", "patch": "@@ -1,3 +1,194 @@\n+2010-05-21  Joseph Myers  <joseph@codesourcery.com>\n+\n+\t* diagnostic.c: Don't include tm.h, tree.h, tm_p.h, langhooks.h or\n+\tlanghooks-def.h.\n+\t(diagnostic_initialize): Initialize x_data not last_function.\n+\t(diagnostic_report_current_function): Move to tree-diagnostic.c.\n+\t(default_diagnostic_starter): Call\n+\tdiagnostic_report_current_module not\n+\tdiagnostic_report_current_function.\n+\t(diagnostic_report_diagnostic): Initialize x_data not\n+\tabstract_origin.\n+\t(verbatim): Likewise.\n+\t* diagnostic.h (struct diagnostic_info): Change abstract_origin to\n+\tx_data.\n+\t(struct diagnostic_context): Change last_function to x_data.\n+\t(diagnostic_auxiliary_data): Replace with\n+\tdiagnostic_context_auxiliary_data and\n+\tdiagnostic_info_auxiliary_data.\n+\t(diagnostic_last_function_changed, diagnostic_set_last_function,\n+\tdiagnostic_report_current_function): Move to tree-diagnostic.h.\n+\t(print_declaration, dump_generic_node, print_generic_stmt,\n+\tprint_generic_stmt_indented, print_generic_expr,\n+\tprint_generic_decl, debug_c_tree, dump_omp_clauses,\n+\tprint_call_name, debug_generic_expr, debug_generic_stmt,\n+\tdebug_tree_chain, default_tree_printer): Move to\n+\ttree-pretty-print.h.\n+\t(debug_gimple_stmt, debug_gimple_seq, print_gimple_seq,\n+\tprint_gimple_stmt, print_gimple_expr, dump_gimple_stmt): Move to\n+\tgimple-pretty-print.h.\n+\t* pretty-print.c: Don't include tree.h\n+\t(pp_base_format): Don't handle %K here.\n+\t(pp_base_tree_identifier): Move to tree-pretty-print.c.\n+\t* pretty-print.h (text_info): Change abstract_origin to x_data.\n+\t(pp_tree_identifier, pp_unsupported_tree,\n+\tpp_base_tree_identifier): Move to tree-pretty-print.h.\n+\t* gimple-pretty-print.h, tree-diagnostic.c, tree-diagnostic.h,\n+\ttree-pretty-print.h: New files.\n+\t* tree-pretty-print.c: Include tree-pretty-print.h.\n+\t(percent_K_format): New.  Moved from pretty-print.c.\n+\t(pp_base_tree_identifier): Move from pretty-print.c.\n+\t* c-objc-common.c: Include tree-pretty-print.h.\n+\t(c_tree_printer): Handle %K here.\n+\t* langhooks.c: Include tree-diagnostic.h.\n+\t(lhd_print_error_function): Use diagnostic_abstract_origin macro.\n+\t* toplev.c: Include tree-diagnostic.h and tree-pretty-print.h.\n+\t(default_tree_printer): Handle %K using percent_K_format.\n+\t(general_init): Use default_tree_diagnostic_starter.\n+\t* tree.c: Include tree-diagnostic.h and tree-pretty-print.h.\n+\t(free_lang_data): Use default_tree_diagnostic_starter.\n+\t* c-pretty-print.c: Include tree-pretty-print.h.\n+\t* cfgexpand.c: Include tree-pretty-print.h and\n+\tgimple-pretty-print.h.\n+\t* cgraphunit.c: Include tree-pretty-print.h and\n+\tgimple-pretty-print.h.\n+\t* dwarf2out.c: Include tree-pretty-print.h.\n+\t* except.c: Include tree-pretty-print.h.\n+\t* gimple-pretty-print.c: Include tree-pretty-print.h and\n+\tgimple-pretty-print.h.\n+\t* gimplify.c: Include tree-pretty-print.h.\n+\t* graphite-poly.c: Include tree-pretty-print.h and\n+\tgimple-pretty-print.h.\n+\t* ipa-cp.c: Include tree-pretty-print.h.\n+\t* ipa-inline.c: Include gimple-pretty-print.h.\n+\t* ipa-prop.c: Include tree-pretty-print.h and\n+\tgimple-pretty-print.h.\n+\t* ipa-pure-const.c: Include gimple-pretty-print.h.\n+\t* ipa-struct-reorg.c: Include tree-pretty-print.h and\n+\tgimple-pretty-print.h.\n+\t* ipa-type-escape.c: Include tree-pretty-print.h.\n+\t* print-rtl.c: Include tree-pretty-print.h.\n+\t* print-tree.c: Include gimple-pretty-print.h.\n+\t* sese.c: Include tree-pretty-print.h.\n+\t* tree-affine.c: Include tree-pretty-print.h.\n+\t* tree-browser.c: Include tree-pretty-print.h.\n+\t* tree-call-cdce.c: Include gimple-pretty-print.h.\n+\t* tree-cfg.c: Include tree-pretty-print.h and\n+\tgimple-pretty-print.h.\n+\t* tree-chrec.c: Include tree-pretty-print.h.\n+\t* tree-data-ref.c: Include tree-pretty-print.h and\n+\tgimple-pretty-print.h.\n+\t* tree-dfa.c: Include tree-pretty-print.h.\n+\t* tree-if-conv.c: Include tree-pretty-print.h and\n+\tgimple-pretty-print.h.\n+\t* tree-inline.c: Include tree-pretty-print.h.\n+\t* tree-into-ssa.c: Include tree-pretty-print.h and\n+\tgimple-pretty-print.h.\n+\t* tree-nrv.c: Include tree-pretty-print.h.\n+\t* tree-object-size.c: Include tree-pretty-print.h and\n+\tgimple-pretty-print.h.\n+\t* tree-outof-ssa.c: Include tree-pretty-print.h and\n+\tgimple-pretty-print.h.\n+\t* tree-parloops.c: Include tree-pretty-print.h and\n+\tgimple-pretty-print.h.\n+\t* tree-predcom.c: Include tree-pretty-print.h and\n+\tgimple-pretty-print.h.\n+\t* tree-scalar-evolution.c: Include tree-pretty-print.h and\n+\tgimple-pretty-print.h.\n+\t* tree-sra.c: Include tree-pretty-print.h.\n+\t* tree-ssa-address.c: Include tree-pretty-print.h.\n+\t* tree-ssa-alias.c: Include tree-pretty-print.h.\n+\t* tree-ssa-ccp.c: Include tree-pretty-print.h and\n+\tgimple-pretty-print.h.\n+\t* tree-ssa-coalesce.c: Include tree-pretty-print.h.\n+\t* tree-ssa-copy.c: Include tree-pretty-print.h and\n+\tgimple-pretty-print.h.\n+\t* tree-ssa-copyrename.c: Include tree-pretty-print.h.\n+\t* tree-ssa-dce.c: Include tree-pretty-print.h and\n+\tgimple-pretty-print.h.\n+\t* tree-ssa-dom.c: Include tree-pretty-print.h and\n+\tgimple-pretty-print.h.\n+\t* tree-ssa-dse.c: Include gimple-pretty-print.h.\n+\t* tree-ssa-forwprop.c: Include tree-pretty-print.h.\n+\t* tree-ssa-ifcombine.c: Include tree-pretty-print.h.\n+\t* tree-ssa-live.c: Include tree-pretty-print.h and\n+\tgimple-pretty-print.h.\n+\t* tree-ssa-loop-im.c: Include tree-pretty-print.h and\n+\tgimple-pretty-print.h.\n+\t* tree-ssa-loop-ivcanon.c: Include tree-pretty-print.h and\n+\tgimple-pretty-print.h.\n+\t* tree-ssa-loop-ivopts.c: Include tree-pretty-print.h and\n+\tgimple-pretty-print.h.\n+\t* tree-ssa-loop-niter.c: Include tree-pretty-print.h and\n+\tgimple-pretty-print.h.\n+\t* tree-ssa-loop-prefetch.c: Include tree-pretty-print.h.\n+\t* tree-ssa-math-opts.c: Include gimple-pretty-print.h.\n+\t* tree-ssa-operands.c: Include tree-pretty-print.h and\n+\tgimple-pretty-print.h.\n+\t* tree-ssa-phiprop.c: Include tree-pretty-print.h and\n+\tgimple-pretty-print.h.\n+\t* tree-ssa-pre.c: Include tree-pretty-print.h and\n+\tgimple-pretty-print.h.\n+\t* tree-ssa-propagate.c: Include gimple-pretty-print.h.\n+\t* tree-ssa-reassoc.c: Include tree-pretty-print.h and\n+\tgimple-pretty-print.h.\n+\t* tree-ssa-sccvn.c: Include tree-pretty-print.h and\n+\tgimple-pretty-print.h.\n+\t* tree-ssa-sink.c: Include gimple-pretty-print.h.\n+\t* tree-ssa-ter.c: Include tree-pretty-print.h and\n+\tgimple-pretty-print.h.\n+\t* tree-ssa-uninit.c: Include gimple-pretty-print.h.\n+\t* tree-ssa.c: Include tree-pretty-print.h and\n+\tgimple-pretty-print.h.\n+\t* tree-stdarg.c: Include gimple-pretty-print.h.\n+\t* tree-switch-conversion.c: Include gimple-pretty-print.h.\n+\t* tree-tailcall.c: Include tree-pretty-print.h and\n+\tgimple-pretty-print.h.\n+\t* tree-vect-data-refs.c: Include tree-pretty-print.h and\n+\tgimple-pretty-print.h.\n+\t* tree-vect-loop-manip.c: Include tree-pretty-print.h and\n+\tgimple-pretty-print.h.\n+\t* tree-vect-loop.c: Include tree-pretty-print.h and\n+\tgimple-pretty-print.h.\n+\t* tree-vect-patterns.c: Include gimple-pretty-print.h.\n+\t* tree-vect-slp.c: Include tree-pretty-print.h and\n+\tgimple-pretty-print.h.\n+\t* tree-vect-stmts.c: Include tree-pretty-print.h and\n+\tgimple-pretty-print.h.\n+\t* tree-vectorizer.c: Include tree-pretty-print.h.\n+\t* tree-vrp.c: Include tree-pretty-print.h and\n+\tgimple-pretty-print.h.\n+\t* value-prof.c: Include tree-pretty-print.h and\n+\tgimple-pretty-print.h.\n+\t* var-tracking.c: Include tree-pretty-print.h.\n+\t* Makefile.in (OBJS-common): Add tree-diagnostic.o.\n+\t(tree-diagnostic.o): New dependencies.\n+\t(c-objc-common.o, c-pretty-print.o, langhooks.o, tree.o,\n+\ttree-inline.o, print-tree.o, stor-layout.o, tree-ssa-uninit.o,\n+\ttree-ssa.o, tree-into-ssa.o, tree-ssa-ter.o, tree-ssa-coalesce.o,\n+\ttree-outof-ssa.o, tree-ssa-forwprop.o, tree-ssa-phiprop.o,\n+\ttree-ssa-ifcombine.o, tree-nrv.o, tree-ssa-copy.o,\n+\ttree-ssa-propagate.o, tree-ssa-dom.o, tree-ssa-uncprop.o,\n+\ttree-ssa-live.o, tree-ssa-copyrename.o, tree-ssa-pre.o,\n+\ttree-ssa-sccvn.o, tree-vrp.o, tree-cfg.o, tree-tailcall.o,\n+\ttree-ssa-sink.o, tree-if-conv.o, tree-dfa.o, tree-ssa-operands.o,\n+\ttree-ssa-address.o, tree-ssa-loop-niter.o,\n+\ttree-ssa-loop-ivcanon.o, tree-ssa-loop-prefetch.o, tree-predcom.o,\n+\ttree-ssa-loop-ivopts.o, tree-affine.o, tree-ssa-loop-im.o,\n+\ttree-ssa-math-opts.o, tree-ssa-alias.o, tree-ssa-reassoc.o,\n+\tgimplify.o, tree-browser.o, tree-chrec.o, tree-scalar-evolution.o,\n+\ttree-data-ref.o, sese.o, graphite-poly.o, tree-vect-loop.o,\n+\ttree-vect-loop-manip.o, tree-vect-patterns.o, tree-vect-slp.o,\n+\ttree-vect-stmts.o, tree-vect-data-refs.o, tree-vectorizer.o,\n+\ttree-parloops.o, tree-stdarg.o, tree-object-size.o,\n+\tgimple-pretty-print.o, tree-pretty-print.o, diagnostic.o,\n+\ttoplev.o, print-rtl.o, except.o, dwarf2out.o, cgraphunit.o,\n+\tipa-prop.o, ipa-cp.o, ipa-inline.o, ipa-pure-const.o,\n+\tipa-type-escape.o, ipa-struct-reorg.o, tree-ssa-dce.o,\n+\ttree-call-cdce.o, tree-ssa-ccp.o, tree-sra.o,\n+\ttree-switch-conversion.o, var-tracking.o, value-prof.o,\n+\tcfgexpand.o, pretty-print.o): Update dependencies.\n+\n 2010-05-22  Andreas Tobler  <andreast@fgznet.ch>\n \n \t* tree-ssa-structalias.c: Remove tm_p.h from include."}, {"sha": "20ab771faa94fa7e7d498999c65fc889aa1ed773", "filename": "gcc/Makefile.in", "status": "modified", "additions": 131, "deletions": 84, "changes": 215, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf8358387d0a53c1a84e049c9998e89db814beab/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf8358387d0a53c1a84e049c9998e89db814beab/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=cf8358387d0a53c1a84e049c9998e89db814beab", "patch": "@@ -1332,6 +1332,7 @@ OBJS-common = \\\n \ttree-complex.o \\\n \ttree-data-ref.o \\\n \ttree-dfa.o \\\n+\ttree-diagnostic.o \\\n \ttree-dump.o \\\n \ttree-eh.o \\\n \ttree-if-conv.o \\\n@@ -1996,7 +1997,8 @@ c-ppoutput.o : c-ppoutput.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n     $(C_COMMON_H) $(TREE_H) $(CPPLIB_H) $(CPP_INTERNAL_H) $(C_PRAGMA_H)\n c-objc-common.o : c-objc-common.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n     $(TREE_H) $(C_TREE_H) $(FLAGS_H) $(DIAGNOSTIC_H) \\\n-    langhooks.h $(GGC_H) $(C_PRETTY_PRINT_H) c-objc-common.h intl.h\n+    langhooks.h $(GGC_H) $(C_PRETTY_PRINT_H) c-objc-common.h intl.h \\\n+    tree-pretty-print.h\n c-aux-info.o : c-aux-info.c  $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) \\\n     $(C_TREE_H) $(FLAGS_H) $(TOPLEV_H)\n c-convert.o : c-convert.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n@@ -2054,7 +2056,7 @@ c-common.o : c-common.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) \\\n \n c-pretty-print.o : c-pretty-print.c $(C_PRETTY_PRINT_H) \\\n \t$(C_TREE_H) $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n-\t$(DIAGNOSTIC_H) tree-iterator.h intl.h\n+\t$(DIAGNOSTIC_H) tree-iterator.h intl.h tree-pretty-print.h\n \n c-opts.o : c-opts.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n         $(TREE_H) $(C_PRAGMA_H) $(FLAGS_H) $(TOPLEV_H) langhooks.h \\\n@@ -2253,14 +2255,14 @@ lto-streamer.o: lto-streamer.c $(CONFIG_H) $(SYSTEM_H) coretypes.h   \\\n langhooks.o : langhooks.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n    $(TREE_H) $(TOPLEV_H) $(TREE_INLINE_H) $(RTL_H) insn-config.h $(INTEGRATE_H) \\\n    langhooks.h $(TARGET_H) $(LANGHOOKS_DEF_H) $(FLAGS_H) $(GGC_H) $(DIAGNOSTIC_H) \\\n-   intl.h $(GIMPLE_H) $(CGRAPH_H) output.h\n+   intl.h $(GIMPLE_H) $(CGRAPH_H) output.h tree-diagnostic.h\n tree.o: tree.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) \\\n    all-tree.def $(FLAGS_H) $(FUNCTION_H) $(PARAMS_H) \\\n    $(TOPLEV_H) $(GGC_H) $(HASHTAB_H) $(TARGET_H) output.h $(TM_P_H) \\\n    langhooks.h gt-tree.h $(TREE_INLINE_H) tree-iterator.h \\\n    $(BASIC_BLOCK_H) $(TREE_FLOW_H) $(OBSTACK_H) pointer-set.h \\\n    tree-pass.h $(LANGHOOKS_DEF_H) $(DIAGNOSTIC_H) $(CGRAPH_H) $(TIMEVAR_H) \\\n-   $(EXCEPT_H) debug.h intl.h\n+   $(EXCEPT_H) debug.h intl.h tree-diagnostic.h tree-pretty-print.h\n tree-dump.o: tree-dump.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n    $(TREE_H) langhooks.h $(TOPLEV_H) $(SPLAY_TREE_H) $(TREE_DUMP_H) \\\n    tree-iterator.h $(TREE_PASS_H) $(DIAGNOSTIC_H)\n@@ -2269,10 +2271,11 @@ tree-inline.o : tree-inline.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n    $(HASHTAB_H) $(TOPLEV_H) langhooks.h $(TREE_INLINE_H) $(CGRAPH_H) \\\n    intl.h $(FUNCTION_H) $(GIMPLE_H) \\\n    debug.h $(DIAGNOSTIC_H) $(EXCEPT_H) $(TREE_FLOW_H) tree-iterator.h tree-mudflap.h \\\n-   $(IPA_PROP_H) value-prof.h $(TREE_PASS_H) $(TARGET_H) $(INTEGRATE_H)\n+   $(IPA_PROP_H) value-prof.h $(TREE_PASS_H) $(TARGET_H) $(INTEGRATE_H) \\\n+   tree-pretty-print.h\n print-tree.o : print-tree.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) \\\n    $(GGC_H) langhooks.h tree-iterator.h \\\n-   $(DIAGNOSTIC_H) $(TREE_FLOW_H) $(TREE_PASS_H)\n+   $(DIAGNOSTIC_H) $(TREE_FLOW_H) $(TREE_PASS_H) gimple-pretty-print.h\n stor-layout.o : stor-layout.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n    $(TREE_H) $(PARAMS_H) $(FLAGS_H) $(FUNCTION_H) $(EXPR_H) output.h $(RTL_H) \\\n    $(GGC_H) $(TM_P_H) $(TARGET_H) langhooks.h $(REGS_H) gt-stor-layout.h \\\n@@ -2289,68 +2292,75 @@ tree-ssa-uninit.o : tree-ssa-uninit.c $(TREE_FLOW_H) $(CONFIG_H) $(SYSTEM_H) \\\n    $(TOPLEV_H) $(FUNCTION_H) $(TIMEVAR_H) $(TM_H) coretypes.h \\\n    $(TREE_DUMP_H) langhooks.h tree-pass.h $(BASIC_BLOCK_H) $(BITMAP_H) \\\n    $(FLAGS_H) $(HASHTAB_H) pointer-set.h \\\n-   $(GIMPLE_H) $(TREE_INLINE_H)\n+   $(GIMPLE_H) $(TREE_INLINE_H) gimple-pretty-print.h\n tree-ssa.o : tree-ssa.c $(TREE_FLOW_H) $(CONFIG_H) $(SYSTEM_H) \\\n    $(TREE_H) $(TM_P_H) $(EXPR_H) output.h $(DIAGNOSTIC_H) \\\n    $(TOPLEV_H) $(FUNCTION_H) $(TIMEVAR_H) $(TM_H) coretypes.h \\\n    $(TREE_DUMP_H) langhooks.h $(TREE_PASS_H) $(BASIC_BLOCK_H) $(BITMAP_H) \\\n    $(FLAGS_H) $(GGC_H) $(HASHTAB_H) pointer-set.h \\\n-   $(GIMPLE_H) $(TREE_INLINE_H) $(TARGET_H)\n+   $(GIMPLE_H) $(TREE_INLINE_H) $(TARGET_H) tree-pretty-print.h \\\n+   gimple-pretty-print.h\n tree-into-ssa.o : tree-into-ssa.c $(TREE_FLOW_H) $(CONFIG_H) $(SYSTEM_H) \\\n    $(TREE_H) $(TM_P_H) $(EXPR_H) output.h $(DIAGNOSTIC_H) \\\n    $(FUNCTION_H) $(TIMEVAR_H) $(TM_H) coretypes.h $(TREE_DUMP_H) \\\n    langhooks.h domwalk.h $(TREE_PASS_H) $(PARAMS_H) $(BASIC_BLOCK_H) \\\n    $(BITMAP_H) $(CFGLOOP_H) $(FLAGS_H) $(HASHTAB_H) \\\n-   $(GIMPLE_H) $(TREE_INLINE_H) vecprim.h\n+   $(GIMPLE_H) $(TREE_INLINE_H) vecprim.h tree-pretty-print.h \\\n+   gimple-pretty-print.h\n tree-ssa-ter.o : tree-ssa-ter.c $(TREE_FLOW_H) $(CONFIG_H) $(SYSTEM_H) \\\n    $(TREE_H) $(DIAGNOSTIC_H) $(TM_H) coretypes.h $(TREE_DUMP_H) \\\n-   $(TREE_SSA_LIVE_H) $(BITMAP_H) $(FLAGS_H)\n+   $(TREE_SSA_LIVE_H) $(BITMAP_H) $(FLAGS_H) tree-pretty-print.h \\\n+   gimple-pretty-print.h\n tree-ssa-coalesce.o : tree-ssa-coalesce.c $(TREE_FLOW_H) $(CONFIG_H) \\\n    $(SYSTEM_H) $(TREE_H) $(DIAGNOSTIC_H) $(TM_H) coretypes.h $(TREE_DUMP_H) \\\n-   $(TREE_SSA_LIVE_H) $(BITMAP_H) $(FLAGS_H) $(HASHTAB_H) $(TOPLEV_H)\n+   $(TREE_SSA_LIVE_H) $(BITMAP_H) $(FLAGS_H) $(HASHTAB_H) $(TOPLEV_H) \\\n+   tree-pretty-print.h\n tree-outof-ssa.o : tree-outof-ssa.c $(TREE_FLOW_H) $(CONFIG_H) $(SYSTEM_H) \\\n    $(TREE_H) $(DIAGNOSTIC_H) $(TIMEVAR_H) $(TM_H) coretypes.h $(TREE_DUMP_H) \\\n    $(TREE_PASS_H) $(TREE_SSA_LIVE_H) $(BASIC_BLOCK_H) $(BITMAP_H) $(GGC_H) \\\n-   $(TOPLEV_H) $(EXPR_H) $(SSAEXPAND_H)\n+   $(TOPLEV_H) $(EXPR_H) $(SSAEXPAND_H) tree-pretty-print.h \\\n+   gimple-pretty-print.h\n tree-ssa-dse.o : tree-ssa-dse.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n    $(TM_H) $(GGC_H) $(TREE_H) $(RTL_H) $(TM_P_H) $(BASIC_BLOCK_H) \\\n    $(TREE_FLOW_H) $(TREE_PASS_H) $(TREE_DUMP_H) domwalk.h $(FLAGS_H) \\\n    $(DIAGNOSTIC_H) $(TIMEVAR_H) langhooks.h\n tree-ssa-forwprop.o : tree-ssa-forwprop.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n    $(TM_H) $(TREE_H) $(TM_P_H) $(BASIC_BLOCK_H) \\\n    $(TREE_FLOW_H) $(TREE_PASS_H) $(TREE_DUMP_H) $(DIAGNOSTIC_H) $(TIMEVAR_H) \\\n-   langhooks.h $(FLAGS_H) $(GIMPLE_H)\n+   langhooks.h $(FLAGS_H) $(GIMPLE_H) tree-pretty-print.h\n tree-ssa-phiprop.o : tree-ssa-phiprop.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n    $(TM_H) $(TREE_H) $(TM_P_H) $(BASIC_BLOCK_H) \\\n    $(TREE_FLOW_H) $(TREE_PASS_H) $(TREE_DUMP_H) $(DIAGNOSTIC_H) $(TIMEVAR_H) \\\n-   langhooks.h $(FLAGS_H)\n+   langhooks.h $(FLAGS_H) tree-pretty-print.h gimple-pretty-print.h\n tree-ssa-ifcombine.o : tree-ssa-ifcombine.c $(CONFIG_H) $(SYSTEM_H) \\\n    coretypes.h $(TM_H) $(TREE_H) $(BASIC_BLOCK_H) \\\n-   $(TREE_FLOW_H) $(TREE_PASS_H) $(TREE_DUMP_H) $(DIAGNOSTIC_H) $(TIMEVAR_H)\n+   $(TREE_FLOW_H) $(TREE_PASS_H) $(TREE_DUMP_H) $(DIAGNOSTIC_H) $(TIMEVAR_H) \\\n+   tree-pretty-print.h\n tree-ssa-phiopt.o : tree-ssa-phiopt.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n    $(TM_H) $(GGC_H) $(TREE_H) $(TM_P_H) $(BASIC_BLOCK_H) \\\n    $(TREE_FLOW_H) $(TREE_PASS_H) $(TREE_DUMP_H) langhooks.h $(FLAGS_H) \\\n    $(DIAGNOSTIC_H) $(TIMEVAR_H) pointer-set.h domwalk.h\n tree-nrv.o : tree-nrv.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n    $(TM_H) $(TREE_H) $(FUNCTION_H) $(BASIC_BLOCK_H) $(FLAGS_H) \\\n    $(DIAGNOSTIC_H) $(TREE_FLOW_H) $(TIMEVAR_H) $(TREE_DUMP_H) $(TREE_PASS_H) \\\n-   langhooks.h\n+   langhooks.h tree-pretty-print.h\n tree-ssa-copy.o : tree-ssa-copy.c $(TREE_FLOW_H) $(CONFIG_H) $(SYSTEM_H) \\\n    $(TREE_H) $(TM_P_H) $(EXPR_H) $(GGC_H) output.h $(DIAGNOSTIC_H) \\\n    $(FUNCTION_H) $(TIMEVAR_H) $(TM_H) coretypes.h $(TREE_DUMP_H) \\\n    $(BASIC_BLOCK_H) $(TREE_PASS_H) langhooks.h tree-ssa-propagate.h \\\n-   $(FLAGS_H) $(CFGLOOP_H)\n+   $(FLAGS_H) $(CFGLOOP_H) tree-pretty-print.h gimple-pretty-print.h\n tree-ssa-propagate.o : tree-ssa-propagate.c $(TREE_FLOW_H) $(CONFIG_H) \\\n    $(SYSTEM_H) $(TREE_H) $(TM_P_H) $(EXPR_H) output.h \\\n    $(DIAGNOSTIC_H) $(FUNCTION_H) $(TIMEVAR_H) $(TM_H) coretypes.h \\\n    $(TREE_DUMP_H) $(BASIC_BLOCK_H) $(TREE_PASS_H) langhooks.h \\\n    tree-ssa-propagate.h vec.h value-prof.h gt-tree-ssa-propagate.h $(FLAGS_H) \\\n-   $(GIMPLE_H)\n+   $(GIMPLE_H) gimple-pretty-print.h\n tree-ssa-dom.o : tree-ssa-dom.c $(TREE_FLOW_H) $(CONFIG_H) $(SYSTEM_H) \\\n    $(TREE_H) $(TM_P_H) $(EXPR_H) output.h $(DIAGNOSTIC_H) \\\n    $(FUNCTION_H) $(TIMEVAR_H) $(TM_H) coretypes.h $(TREE_DUMP_H) \\\n    $(BASIC_BLOCK_H) domwalk.h $(TREE_PASS_H) $(FLAGS_H) langhooks.h \\\n-   tree-ssa-propagate.h $(CFGLOOP_H) $(PARAMS_H)\n+   tree-ssa-propagate.h $(CFGLOOP_H) $(PARAMS_H) tree-pretty-print.h \\\n+   gimple-pretty-print.h\n tree-ssa-uncprop.o : tree-ssa-uncprop.c $(TREE_FLOW_H) $(CONFIG_H) \\\n    $(SYSTEM_H) $(TREE_H) $(TM_P_H) $(EXPR_H) output.h \\\n    $(DIAGNOSTIC_H) $(FUNCTION_H) $(TIMEVAR_H) $(TM_H) coretypes.h \\\n@@ -2375,34 +2385,38 @@ domwalk.o : domwalk.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n    $(BASIC_BLOCK_H) domwalk.h $(GGC_H)\n tree-ssa-live.o : tree-ssa-live.c $(TREE_FLOW_H) $(CONFIG_H) $(SYSTEM_H) \\\n    $(TREE_H) $(DIAGNOSTIC_H) $(TM_H) coretypes.h $(TREE_DUMP_H) \\\n-   $(TREE_SSA_LIVE_H) $(BITMAP_H) $(TOPLEV_H) debug.h $(FLAGS_H)\n+   $(TREE_SSA_LIVE_H) $(BITMAP_H) $(TOPLEV_H) debug.h $(FLAGS_H) \\\n+   tree-pretty-print.h gimple-pretty-print.h\n tree-ssa-copyrename.o : tree-ssa-copyrename.c $(TREE_FLOW_H) $(CONFIG_H) \\\n    $(SYSTEM_H) $(TREE_H) $(DIAGNOSTIC_H) $(FUNCTION_H) $(TIMEVAR_H) \\\n    $(TREE_PASS_H) $(TM_H) coretypes.h $(TREE_DUMP_H) $(TREE_SSA_LIVE_H) \\\n    $(BASIC_BLOCK_H) $(BITMAP_H) $(FLAGS_H) $(HASHTAB_H) langhooks.h \\\n-   $(GIMPLE_H) $(TREE_INLINE_H) $(GIMPLE_H)\n+   $(GIMPLE_H) $(TREE_INLINE_H) $(GIMPLE_H) tree-pretty-print.h\n tree-ssa-pre.o : tree-ssa-pre.c $(TREE_FLOW_H) $(CONFIG_H) \\\n    $(SYSTEM_H) $(TREE_H) $(DIAGNOSTIC_H) $(TIMEVAR_H) $(FIBHEAP_H) \\\n    $(TM_H) coretypes.h $(TREE_DUMP_H) $(TREE_PASS_H) $(FLAGS_H) langhooks.h \\\n    $(CFGLOOP_H) alloc-pool.h $(BASIC_BLOCK_H) $(BITMAP_H) $(HASHTAB_H) \\\n    $(GIMPLE_H) $(TREE_INLINE_H) tree-iterator.h tree-ssa-sccvn.h $(PARAMS_H) \\\n-   $(DBGCNT_H) tree-scalar-evolution.h\n+   $(DBGCNT_H) tree-scalar-evolution.h tree-pretty-print.h \\\n+   gimple-pretty-print.h\n tree-ssa-sccvn.o : tree-ssa-sccvn.c $(TREE_FLOW_H) $(CONFIG_H) \\\n    $(SYSTEM_H) $(TREE_H) $(DIAGNOSTIC_H) $(TIMEVAR_H) $(FIBHEAP_H) \\\n    $(TM_H) coretypes.h $(TREE_DUMP_H) $(TREE_PASS_H) $(FLAGS_H) $(CFGLOOP_H) \\\n    alloc-pool.h $(BASIC_BLOCK_H) $(BITMAP_H) langhooks.h $(HASHTAB_H) $(GIMPLE_H) \\\n    $(TREE_INLINE_H) tree-iterator.h tree-ssa-propagate.h tree-ssa-sccvn.h \\\n-   $(PARAMS_H)\n+   $(PARAMS_H) tree-pretty-print.h gimple-pretty-print.h\n tree-vrp.o : tree-vrp.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) \\\n    $(TREE_FLOW_H) $(TREE_PASS_H) $(TREE_DUMP_H) $(DIAGNOSTIC_H) $(GGC_H) \\\n    $(BASIC_BLOCK_H) tree-ssa-propagate.h $(FLAGS_H) $(TREE_DUMP_H) \\\n-   $(CFGLOOP_H) $(SCEV_H) $(TIMEVAR_H) $(TOPLEV_H) intl.h\n+   $(CFGLOOP_H) $(SCEV_H) $(TIMEVAR_H) $(TOPLEV_H) intl.h tree-pretty-print.h \\\n+   gimple-pretty-print.h\n tree-cfg.o : tree-cfg.c $(TREE_FLOW_H) $(CONFIG_H) $(SYSTEM_H) \\\n    $(TREE_H) $(TM_P_H) $(EXPR_H) $(GGC_H) $(FLAGS_H) output.h \\\n    $(DIAGNOSTIC_H) $(FUNCTION_H) $(TIMEVAR_H) $(TM_H) coretypes.h \\\n    $(TREE_DUMP_H) $(EXCEPT_H) langhooks.h $(CFGLOOP_H) $(TREE_PASS_H) \\\n    $(CFGLAYOUT_H) $(BASIC_BLOCK_H) $(TOPLEV_H) \\\n-   value-prof.h tree-ssa-propagate.h $(TREE_INLINE_H)\n+   value-prof.h tree-ssa-propagate.h $(TREE_INLINE_H) tree-pretty-print.h \\\n+   gimple-pretty-print.h\n tree-cfgcleanup.o : tree-cfgcleanup.c $(TREE_FLOW_H) $(CONFIG_H) $(SYSTEM_H) \\\n    $(TREE_H) $(TM_P_H) $(EXPR_H) $(GGC_H) $(FLAGS_H) output.h \\\n    $(DIAGNOSTIC_H) $(TOPLEV_H) $(FUNCTION_H) $(TIMEVAR_H) $(TM_H) coretypes.h \\\n@@ -2412,31 +2426,34 @@ tree-cfgcleanup.o : tree-cfgcleanup.c $(TREE_FLOW_H) $(CONFIG_H) $(SYSTEM_H) \\\n tree-tailcall.o : tree-tailcall.c $(TREE_FLOW_H) $(CONFIG_H) $(SYSTEM_H) \\\n    $(TREE_H) $(TM_P_H) $(FUNCTION_H) $(TM_H) coretypes.h \\\n    $(TREE_DUMP_H) $(DIAGNOSTIC_H) $(EXCEPT_H) $(TREE_PASS_H) $(FLAGS_H) langhooks.h \\\n-   $(BASIC_BLOCK_H) $(DBGCNT_H)\n+   $(BASIC_BLOCK_H) $(DBGCNT_H) gimple-pretty-print.h\n tree-ssa-sink.o : tree-ssa-sink.c $(TREE_FLOW_H) $(CONFIG_H) \\\n    $(SYSTEM_H) $(TREE_H) $(DIAGNOSTIC_H) $(TIMEVAR_H) \\\n    $(TM_H) coretypes.h $(TREE_DUMP_H) $(TREE_PASS_H) $(FLAGS_H) alloc-pool.h \\\n    $(BASIC_BLOCK_H) $(BITMAP_H) $(CFGLOOP_H) $(FIBHEAP_H) $(HASHTAB_H) \\\n-   langhooks.h $(GIMPLE_H) $(TREE_INLINE_H) tree-iterator.h\n+   langhooks.h $(GIMPLE_H) $(TREE_INLINE_H) tree-iterator.h \\\n+   gimple-pretty-print.h\n tree-nested.o: tree-nested.c $(CONFIG_H) $(SYSTEM_H) $(TM_H) $(TREE_H) \\\n    $(TM_P_H) $(FUNCTION_H) $(TREE_DUMP_H) $(TREE_INLINE_H) \\\n    tree-iterator.h $(GIMPLE_H) $(CGRAPH_H) $(EXPR_H) langhooks.h \\\n    gt-tree-nested.h coretypes.h $(TREE_FLOW_H) pointer-set.h\n tree-if-conv.o: tree-if-conv.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n    $(TREE_H) $(FLAGS_H) $(TIMEVAR_H) $(BASIC_BLOCK_H) $(TREE_FLOW_H) \\\n    $(CFGLOOP_H) $(TREE_DATA_REF_H) $(TREE_PASS_H) $(DIAGNOSTIC_H) \\\n-   $(TREE_DUMP_H)\n+   $(TREE_DUMP_H) tree-pretty-print.h gimple-pretty-print.h\n tree-iterator.o : tree-iterator.c $(CONFIG_H) $(SYSTEM_H) $(TREE_H) \\\n    coretypes.h $(GGC_H) tree-iterator.h $(GIMPLE_H) gt-tree-iterator.h\n tree-dfa.o : tree-dfa.c $(TREE_FLOW_H) $(CONFIG_H) $(SYSTEM_H) \\\n    $(TREE_H) $(TM_P_H) $(EXPR_H) $(GGC_H) output.h $(DIAGNOSTIC_H) \\\n    $(TREE_INLINE_H) $(HASHTAB_H) pointer-set.h $(FLAGS_H) $(FUNCTION_H) \\\n    $(TIMEVAR_H) convert.h $(TM_H) coretypes.h langhooks.h $(TREE_DUMP_H) \\\n-   $(TREE_PASS_H) $(PARAMS_H) $(CGRAPH_H) $(BASIC_BLOCK_H) $(GIMPLE_H)\n+   $(TREE_PASS_H) $(PARAMS_H) $(CGRAPH_H) $(BASIC_BLOCK_H) $(GIMPLE_H) \\\n+   tree-pretty-print.h\n tree-ssa-operands.o : tree-ssa-operands.c $(TREE_FLOW_H) $(CONFIG_H) \\\n    $(SYSTEM_H) $(TREE_H) $(GGC_H) $(DIAGNOSTIC_H) $(TREE_INLINE_H) \\\n    $(FLAGS_H) $(FUNCTION_H) $(TM_H) $(TIMEVAR_H) $(TREE_PASS_H) $(TOPLEV_H) \\\n-   coretypes.h langhooks.h $(IPA_REFERENCE_H)\n+   coretypes.h langhooks.h $(IPA_REFERENCE_H) tree-pretty-print.h \\\n+   gimple-pretty-print.h\n tree-eh.o : tree-eh.c $(TREE_FLOW_H) $(CONFIG_H) $(SYSTEM_H) \\\n    $(TREE_H) $(TM_H) $(FLAGS_H) $(FUNCTION_H) $(EXCEPT_H) langhooks.h \\\n    $(GGC_H) $(TREE_PASS_H) coretypes.h $(TIMEVAR_H) pointer-set.h \\\n@@ -2454,16 +2471,18 @@ tree-ssa-address.o : tree-ssa-address.c $(TREE_FLOW_H) $(CONFIG_H) \\\n    $(SYSTEM_H) $(RTL_H) $(TREE_H) $(TM_P_H) \\\n    output.h $(DIAGNOSTIC_H) $(TIMEVAR_H) $(TM_H) coretypes.h $(TREE_DUMP_H) \\\n    $(TREE_PASS_H) $(FLAGS_H) $(TREE_INLINE_H) $(RECOG_H) insn-config.h \\\n-   $(EXPR_H) gt-tree-ssa-address.h $(GGC_H) tree-affine.h $(TARGET_H)\n+   $(EXPR_H) gt-tree-ssa-address.h $(GGC_H) tree-affine.h $(TARGET_H) \\\n+   tree-pretty-print.h\n tree-ssa-loop-niter.o : tree-ssa-loop-niter.c $(TREE_FLOW_H) $(CONFIG_H) \\\n    $(SYSTEM_H) $(TREE_H) $(TM_P_H) $(CFGLOOP_H) $(PARAMS_H) \\\n    $(TREE_INLINE_H) output.h $(DIAGNOSTIC_H) $(TM_H) coretypes.h $(TREE_DUMP_H) \\\n    $(TOPLEV_H) $(FLAGS_H) $(TREE_PASS_H) $(TREE_DATA_REF_H) \\\n-   $(BASIC_BLOCK_H) $(GGC_H) intl.h\n+   $(BASIC_BLOCK_H) $(GGC_H) intl.h tree-pretty-print.h gimple-pretty-print.h\n tree-ssa-loop-ivcanon.o : tree-ssa-loop-ivcanon.c $(TREE_FLOW_H) $(CONFIG_H) \\\n    $(SYSTEM_H) $(TREE_H) $(TM_P_H) $(CFGLOOP_H) $(PARAMS_H) \\\n    $(TREE_INLINE_H) output.h $(DIAGNOSTIC_H) $(TM_H) coretypes.h $(TREE_DUMP_H) \\\n-   $(FLAGS_H) $(TREE_PASS_H) $(SCEV_H) $(BASIC_BLOCK_H) $(TARGET_H)\n+   $(FLAGS_H) $(TREE_PASS_H) $(SCEV_H) $(BASIC_BLOCK_H) $(TARGET_H) \\\n+   tree-pretty-print.h gimple-pretty-print.h\n tree-ssa-loop-ch.o : tree-ssa-loop-ch.c $(TREE_FLOW_H) $(CONFIG_H) \\\n    $(SYSTEM_H) $(RTL_H) $(TREE_H) $(TM_P_H) $(CFGLOOP_H) $(TREE_INLINE_H) \\\n    output.h $(DIAGNOSTIC_H) $(TIMEVAR_H) $(TM_H) coretypes.h $(TREE_DUMP_H) \\\n@@ -2474,20 +2493,22 @@ tree-ssa-loop-prefetch.o: tree-ssa-loop-prefetch.c $(TREE_FLOW_H) $(CONFIG_H) \\\n    $(TREE_PASS_H) $(RECOG_H) insn-config.h $(HASHTAB_H) \\\n    $(CFGLOOP_H) $(PARAMS_H) langhooks.h $(BASIC_BLOCK_H) \\\n    $(TOPLEV_H) langhooks.h $(TREE_INLINE_H) $(TREE_DATA_REF_H) \\\n-   $(OPTABS_H)\n+   $(OPTABS_H) tree-pretty-print.h\n tree-predcom.o: tree-predcom.c $(CONFIG_H) $(SYSTEM_H) $(TREE_H) $(TM_P_H) \\\n    $(CFGLOOP_H) $(TREE_FLOW_H) $(GGC_H) $(TREE_DATA_REF_H) \\\n    $(PARAMS_H) $(DIAGNOSTIC_H) $(TREE_PASS_H) $(TM_H) coretypes.h \\\n-   tree-affine.h $(TREE_INLINE_H)\n+   tree-affine.h $(TREE_INLINE_H) tree-pretty-print.h\n tree-ssa-loop-ivopts.o : tree-ssa-loop-ivopts.c $(TREE_FLOW_H) $(CONFIG_H) \\\n    $(SYSTEM_H) $(TREE_H) $(TM_P_H) $(CFGLOOP_H) $(EXPR_H) \\\n    output.h $(DIAGNOSTIC_H) $(TIMEVAR_H) $(TM_H) coretypes.h $(TREE_DUMP_H) \\\n    $(TREE_PASS_H) $(GGC_H) $(RECOG_H) insn-config.h $(HASHTAB_H) $(SCEV_H) \\\n    $(CFGLOOP_H) $(PARAMS_H) langhooks.h $(BASIC_BLOCK_H) \\\n-   tree-affine.h pointer-set.h $(TARGET_H)\n+   tree-affine.h pointer-set.h $(TARGET_H) tree-pretty-print.h \\\n+   gimple-pretty-print.h\n tree-affine.o : tree-affine.c tree-affine.h $(CONFIG_H) pointer-set.h \\\n    $(SYSTEM_H) $(TREE_H) $(GIMPLE_H) \\\n-   output.h $(DIAGNOSTIC_H) coretypes.h $(TREE_DUMP_H) $(FLAGS_H)\n+   output.h $(DIAGNOSTIC_H) coretypes.h $(TREE_DUMP_H) $(FLAGS_H) \\\n+   tree-pretty-print.h\n tree-ssa-loop-manip.o : tree-ssa-loop-manip.c $(TREE_FLOW_H) $(CONFIG_H) \\\n    $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) \\\n    $(BASIC_BLOCK_H) output.h $(DIAGNOSTIC_H) $(TREE_FLOW_H) $(TREE_DUMP_H) \\\n@@ -2497,22 +2518,25 @@ tree-ssa-loop-im.o : tree-ssa-loop-im.c $(TREE_FLOW_H) $(CONFIG_H) \\\n    $(SYSTEM_H) $(TREE_H) $(TM_P_H) $(CFGLOOP_H) domwalk.h \\\n    $(PARAMS_H) output.h $(DIAGNOSTIC_H) $(TIMEVAR_H) $(TM_H) coretypes.h \\\n    $(TREE_DUMP_H) $(TREE_PASS_H) $(FLAGS_H) $(BASIC_BLOCK_H) \\\n-   pointer-set.h tree-affine.h tree-ssa-propagate.h\n+   pointer-set.h tree-affine.h tree-ssa-propagate.h gimple-pretty-print.h \\\n+   tree-pretty-print.h\n tree-ssa-math-opts.o : tree-ssa-math-opts.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n    $(TM_H) $(FLAGS_H) $(TREE_H) $(TREE_FLOW_H) $(TIMEVAR_H) \\\n    $(TREE_PASS_H) alloc-pool.h $(BASIC_BLOCK_H) $(TARGET_H) \\\n-   $(DIAGNOSTIC_H) $(RTL_H) $(EXPR_H) $(OPTABS_H)\n+   $(DIAGNOSTIC_H) $(RTL_H) $(EXPR_H) $(OPTABS_H) gimple-pretty-print.h\n tree-ssa-alias.o : tree-ssa-alias.c $(TREE_FLOW_H) $(CONFIG_H) $(SYSTEM_H) \\\n    $(TREE_H) $(TM_P_H) $(EXPR_H) $(GGC_H) $(TREE_INLINE_H) $(FLAGS_H) \\\n    $(FUNCTION_H) $(TIMEVAR_H) convert.h $(TM_H) coretypes.h langhooks.h \\\n    $(TREE_DUMP_H) $(TREE_PASS_H) $(PARAMS_H) $(BASIC_BLOCK_H) $(DIAGNOSTIC_H) \\\n    $(GIMPLE_H) vec.h \\\n-   $(IPA_TYPE_ESCAPE_H) vecprim.h pointer-set.h alloc-pool.h\n+   $(IPA_TYPE_ESCAPE_H) vecprim.h pointer-set.h alloc-pool.h \\\n+   tree-pretty-print.h\n tree-ssa-reassoc.o : tree-ssa-reassoc.c $(TREE_FLOW_H) $(CONFIG_H) \\\n    $(SYSTEM_H) $(TREE_H) $(DIAGNOSTIC_H) $(TIMEVAR_H) \\\n    $(TM_H) coretypes.h $(TREE_DUMP_H) $(TREE_PASS_H) $(FLAGS_H) \\\n    tree-iterator.h $(BASIC_BLOCK_H) $(GIMPLE_H) $(TREE_INLINE_H) \\\n-   vec.h langhooks.h alloc-pool.h pointer-set.h $(CFGLOOP_H)\n+   vec.h langhooks.h alloc-pool.h pointer-set.h $(CFGLOOP_H) \\\n+   tree-pretty-print.h gimple-pretty-print.h\n tree-optimize.o : tree-optimize.c $(TREE_FLOW_H) $(CONFIG_H) $(SYSTEM_H) \\\n    $(TREE_H) $(TM_P_H) $(GGC_H) output.h \\\n    $(DIAGNOSTIC_H) $(BASIC_BLOCK_H) $(FLAGS_H) $(TIMEVAR_H) $(TM_H) \\\n@@ -2531,7 +2555,7 @@ gimplify.o : gimplify.c $(CONFIG_H) $(SYSTEM_H) $(TREE_H) $(GIMPLE_H) \\\n    $(LANGHOOKS_DEF_H) $(TREE_FLOW_H) $(CGRAPH_H) $(TIMEVAR_H) $(TM_H) \\\n    coretypes.h $(EXCEPT_H) $(FLAGS_H) $(RTL_H) $(FUNCTION_H) $(EXPR_H) output.h \\\n    $(GGC_H) gt-gimplify.h $(HASHTAB_H) $(TARGET_H) $(TOPLEV_H) $(OPTABS_H) \\\n-   $(SPLAY_TREE_H) vec.h tree-iterator.h tree-pass.h\n+   $(SPLAY_TREE_H) vec.h tree-iterator.h tree-pass.h tree-pretty-print.h\n gimple-iterator.o : gimple-iterator.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n    $(TREE_H) $(GIMPLE_H) $(TREE_FLOW_H) value-prof.h\n gimple-fold.o : gimple-fold.c $(TREE_FLOW_H) $(CONFIG_H) \\\n@@ -2551,26 +2575,27 @@ omp-low.o : omp-low.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) \\\n    $(CFGLOOP_H) tree-iterator.h gt-omp-low.h\n tree-browser.o : tree-browser.c tree-browser.def $(CONFIG_H) $(SYSTEM_H) \\\n    $(TREE_H) $(TREE_INLINE_H) $(DIAGNOSTIC_H) $(HASHTAB_H) \\\n-   $(TM_H) coretypes.h\n+   $(TM_H) coretypes.h tree-pretty-print.h\n omega.o : omega.c omega.h $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n    $(GGC_H) $(TREE_H) $(DIAGNOSTIC_H) $(TREE_PASS_H) $(PARAMS_H)\n tree-chrec.o: tree-chrec.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n    $(GGC_H) $(TREE_H) $(SCEV_H) $(TREE_PASS_H) $(PARAMS_H) \\\n-   $(DIAGNOSTIC_H) $(CFGLOOP_H) $(TREE_FLOW_H) $(FLAGS_H)\n+   $(DIAGNOSTIC_H) $(CFGLOOP_H) $(TREE_FLOW_H) $(FLAGS_H) tree-pretty-print.h\n tree-scalar-evolution.o: tree-scalar-evolution.c $(CONFIG_H) $(SYSTEM_H) \\\n    coretypes.h $(TM_H) $(GGC_H) $(TREE_H) \\\n    $(BASIC_BLOCK_H) $(DIAGNOSTIC_H) $(TREE_FLOW_H) $(TREE_DUMP_H) \\\n    $(TIMEVAR_H) $(CFGLOOP_H) $(SCEV_H) $(TREE_PASS_H) $(FLAGS_H) \\\n-   gt-tree-scalar-evolution.h\n+   gt-tree-scalar-evolution.h tree-pretty-print.h gimple-pretty-print.h\n tree-data-ref.o: tree-data-ref.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n    $(GGC_H) $(FLAGS_H) $(TREE_H) $(BASIC_BLOCK_H) $(DIAGNOSTIC_H) \\\n    $(TREE_FLOW_H) $(TREE_DUMP_H) $(TIMEVAR_H) $(CFGLOOP_H) \\\n-   $(TREE_DATA_REF_H) $(TREE_PASS_H) langhooks.h\n+   $(TREE_DATA_REF_H) $(TREE_PASS_H) langhooks.h tree-pretty-print.h \\\n+   gimple-pretty-print.h\n sese.o: sese.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n    $(GGC_H) $(TREE_H) $(RTL_H) $(BASIC_BLOCK_H) $(DIAGNOSTIC_H) $(TOPLEV_H) \\\n    $(TREE_FLOW_H) $(TREE_DUMP_H) $(TIMEVAR_H) $(CFGLOOP_H) tree-chrec.h \\\n    $(TREE_DATA_REF_H) tree-scalar-evolution.h tree-pass.h domwalk.h value-prof.h \\\n-   pointer-set.h $(GIMPLE_H) sese.h\n+   pointer-set.h $(GIMPLE_H) sese.h tree-pretty-print.h\n graphite.o: graphite.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n    $(GGC_H) $(TREE_H) $(RTL_H) $(BASIC_BLOCK_H) $(DIAGNOSTIC_H) $(TOPLEV_H) \\\n    $(TREE_FLOW_H) $(TREE_DUMP_H) $(TIMEVAR_H) $(CFGLOOP_H) $(GIMPLE_H) \\\n@@ -2608,7 +2633,8 @@ graphite-poly.o: graphite-poly.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n    $(GGC_H) $(TREE_H) $(RTL_H) $(BASIC_BLOCK_H) $(DIAGNOSTIC_H) $(TOPLEV_H) \\\n    $(TREE_FLOW_H) $(TREE_DUMP_H) $(TIMEVAR_H) $(CFGLOOP_H) $(GIMPLE_H) \\\n    $(TREE_DATA_REF_H) tree-pass.h domwalk.h graphite.h graphite-dependences.h \\\n-   pointer-set.h value-prof.h graphite-ppl.h sese.h output.h graphite-poly.h\n+   pointer-set.h value-prof.h graphite-ppl.h sese.h output.h graphite-poly.h \\\n+   tree-pretty-print.h gimple-pretty-print.h\n graphite-ppl.o: graphite-ppl.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n    $(GGC_H) graphite-ppl.h\n graphite-scop-detection.o: graphite-scop-detection.c $(CONFIG_H) $(SYSTEM_H) \\\n@@ -2628,30 +2654,37 @@ graphite-sese-to-poly.o: graphite-sese-to-poly.c $(CONFIG_H) \\\n tree-vect-loop.o: tree-vect-loop.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n    $(TM_H) $(GGC_H) $(TREE_H) $(BASIC_BLOCK_H) $(DIAGNOSTIC_H) $(TREE_FLOW_H) \\\n    $(TREE_DUMP_H) $(CFGLOOP_H) $(CFGLAYOUT_H) $(EXPR_H) $(RECOG_H) $(OPTABS_H) \\\n-   $(TOPLEV_H) $(SCEV_H) $(TREE_VECTORIZER_H)\n+   $(TOPLEV_H) $(SCEV_H) $(TREE_VECTORIZER_H) tree-pretty-print.h \\\n+   gimple-pretty-print.h\n tree-vect-loop-manip.o: tree-vect-loop-manip.c $(CONFIG_H) $(SYSTEM_H) \\\n    coretypes.h $(TM_H) $(GGC_H) $(TREE_H) $(BASIC_BLOCK_H) $(DIAGNOSTIC_H) \\\n    $(TREE_FLOW_H) $(TREE_DUMP_H) $(CFGLOOP_H) $(CFGLAYOUT_H) $(EXPR_H) $(TOPLEV_H) \\\n-   $(SCEV_H) $(TREE_VECTORIZER_H) langhooks.h\n+   $(SCEV_H) $(TREE_VECTORIZER_H) langhooks.h tree-pretty-print.h \\\n+   gimple-pretty-print.h\n tree-vect-patterns.o: tree-vect-patterns.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n    $(TM_H) $(GGC_H) $(TREE_H) $(TARGET_H) $(BASIC_BLOCK_H) $(DIAGNOSTIC_H) \\\n    $(TREE_FLOW_H) $(TREE_DUMP_H) $(CFGLOOP_H) $(EXPR_H) $(OPTABS_H) $(PARAMS_H) \\\n-   $(TREE_DATA_REF_H) $(TREE_VECTORIZER_H) $(RECOG_H) $(TOPLEV_H)\n+   $(TREE_DATA_REF_H) $(TREE_VECTORIZER_H) $(RECOG_H) $(TOPLEV_H) \\\n+   gimple-pretty-print.h\n tree-vect-slp.o: tree-vect-slp.c $(CONFIG_H) $(SYSTEM_H) \\\n    coretypes.h $(TM_H) $(GGC_H) $(TREE_H) $(TARGET_H) $(BASIC_BLOCK_H) \\\n    $(DIAGNOSTIC_H) $(TREE_FLOW_H) $(TREE_DUMP_H) $(CFGLOOP_H) $(CFGLAYOUT_H) \\\n-   $(EXPR_H) $(RECOG_H) $(OPTABS_H) $(TREE_VECTORIZER_H)\n+   $(EXPR_H) $(RECOG_H) $(OPTABS_H) $(TREE_VECTORIZER_H) tree-pretty-print.h \\\n+   gimple-pretty-print.h\n tree-vect-stmts.o: tree-vect-stmts.c $(CONFIG_H) $(SYSTEM_H) \\\n    coretypes.h $(TM_H) $(GGC_H) $(TREE_H) $(TARGET_H) $(BASIC_BLOCK_H) \\\n    $(DIAGNOSTIC_H) $(TREE_FLOW_H) $(TREE_DUMP_H) $(CFGLOOP_H) $(CFGLAYOUT_H) \\\n-   $(EXPR_H) $(RECOG_H) $(OPTABS_H) $(TOPLEV_H) $(TREE_VECTORIZER_H) langhooks.h\n+   $(EXPR_H) $(RECOG_H) $(OPTABS_H) $(TOPLEV_H) $(TREE_VECTORIZER_H) \\\n+   langhooks.h tree-pretty-print.h gimple-pretty-print.h\n tree-vect-data-refs.o: tree-vect-data-refs.c $(CONFIG_H) $(SYSTEM_H) \\\n    coretypes.h $(TM_H) $(GGC_H) $(TREE_H) $(TARGET_H) $(BASIC_BLOCK_H) \\\n    $(DIAGNOSTIC_H) $(TREE_FLOW_H) $(TREE_DUMP_H) $(CFGLOOP_H) \\\n-   $(EXPR_H) $(OPTABS_H) $(SCEV_H) $(TREE_VECTORIZER_H) $(TOPLEV_H)\n+   $(EXPR_H) $(OPTABS_H) $(SCEV_H) $(TREE_VECTORIZER_H) $(TOPLEV_H) \\\n+   tree-pretty-print.h gimple-pretty-print.h\n tree-vectorizer.o: tree-vectorizer.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n    $(TM_H) $(GGC_H) $(TREE_H) $(DIAGNOSTIC_H) $(TREE_FLOW_H) $(TREE_DUMP_H) \\\n-   $(CFGLOOP_H) $(TREE_PASS_H) $(TREE_VECTORIZER_H) $(TIMEVAR_H)\n+   $(CFGLOOP_H) $(TREE_PASS_H) $(TREE_VECTORIZER_H) $(TIMEVAR_H) \\\n+   tree-pretty-print.h\n tree-loop-linear.o: tree-loop-linear.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n    $(TM_H) $(OPTABS_H) $(TREE_H) $(BASIC_BLOCK_H) \\\n    $(DIAGNOSTIC_H) $(TREE_FLOW_H) $(TREE_DUMP_H) $(TIMEVAR_H) $(CFGLOOP_H) \\\n@@ -2665,20 +2698,22 @@ tree-loop-distribution.o: tree-loop-distribution.c $(CONFIG_H) $(SYSTEM_H) coret\n tree-parloops.o: tree-parloops.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n    $(TREE_FLOW_H) $(TREE_H) $(CFGLOOP_H) $(TREE_DATA_REF_H) \\\n    $(DIAGNOSTIC_H) $(TREE_PASS_H) langhooks.h gt-tree-parloops.h \\\n-   $(TREE_VECTORIZER_H)\n+   $(TREE_VECTORIZER_H) tree-pretty-print.h gimple-pretty-print.h\n tree-stdarg.o: tree-stdarg.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n    $(TREE_H) $(FUNCTION_H) $(DIAGNOSTIC_H) $(TREE_FLOW_H) $(TREE_PASS_H) \\\n-   tree-stdarg.h $(TARGET_H) langhooks.h\n+   tree-stdarg.h $(TARGET_H) langhooks.h gimple-pretty-print.h\n tree-object-size.o: tree-object-size.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n    $(TM_H) $(TREE_H) $(TOPLEV_H) $(DIAGNOSTIC_H) $(TREE_FLOW_H) \\\n-   $(TREE_PASS_H) tree-ssa-propagate.h\n+   $(TREE_PASS_H) tree-ssa-propagate.h tree-pretty-print.h \\\n+   gimple-pretty-print.h\n gimple.o : gimple.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TREE_H) \\\n    $(GGC_H) $(GIMPLE_H) $(TOPLEV_H) $(DIAGNOSTIC_H) gt-gimple.h \\\n    $(TREE_FLOW_H) value-prof.h $(FLAGS_H) $(DEMANGLE_H) \\\n    $(TARGET_H) $(ALIAS_H)\n gimple-pretty-print.o : gimple-pretty-print.c $(CONFIG_H) $(SYSTEM_H) \\\n    $(TREE_H) $(DIAGNOSTIC_H) $(HASHTAB_H) $(TREE_FLOW_H) \\\n-   $(TM_H) coretypes.h $(TREE_PASS_H) $(GIMPLE_H) value-prof.h\n+   $(TM_H) coretypes.h $(TREE_PASS_H) $(GIMPLE_H) value-prof.h \\\n+   tree-pretty-print.h gimple-pretty-print.h\n tree-mudflap.o : $(CONFIG_H) $(SYSTEM_H) $(TREE_H) $(TREE_INLINE_H) \\\n    $(GIMPLE_H) $(DIAGNOSTIC_H) $(DEMANGLE_H) $(HASHTAB_H) langhooks.h tree-mudflap.h \\\n    $(TM_H) coretypes.h $(TREE_DUMP_H) $(TREE_PASS_H) $(CGRAPH_H) $(GGC_H) \\\n@@ -2691,15 +2726,16 @@ tree-nomudflap.o : $(CONFIG_H) $(SYSTEM_H) $(TREE_H) $(TREE_INLINE_H) \\\n tree-pretty-print.o : tree-pretty-print.c $(CONFIG_H) $(SYSTEM_H) \\\n    $(TREE_H) $(DIAGNOSTIC_H) $(HASHTAB_H) $(TREE_FLOW_H) \\\n    $(TM_H) coretypes.h tree-iterator.h $(SCEV_H) langhooks.h \\\n-   $(TREE_PASS_H) value-prof.h output.h\n+   $(TREE_PASS_H) value-prof.h output.h tree-pretty-print.h\n+tree-diagnostic.o : tree-diagnostic.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n+   $(TREE_H) $(DIAGNOSTIC_H) tree-diagnostic.h langhooks.h $(LANGHOOKS_DEF_H)\n fold-const.o : fold-const.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n    $(TREE_H) $(FLAGS_H) $(TOPLEV_H) $(HASHTAB_H) $(EXPR_H) $(RTL_H) \\\n    $(GGC_H) $(TM_P_H) langhooks.h $(MD5_H) intl.h $(TARGET_H) \\\n    $(GIMPLE_H) realmpfr.h\n-diagnostic.o : diagnostic.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n-   $(TREE_H) version.h $(TM_P_H) $(FLAGS_H) $(INPUT_H) $(TOPLEV_H) intl.h \\\n-   $(DIAGNOSTIC_H) langhooks.h $(LANGHOOKS_DEF_H) diagnostic.def opts.h \\\n-   $(PLUGIN_H)\n+diagnostic.o : diagnostic.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n+   version.h $(FLAGS_H) $(INPUT_H) $(TOPLEV_H) intl.h $(DIAGNOSTIC_H) \\\n+   diagnostic.def opts.h $(PLUGIN_H)\n opts.o : opts.c opts.h options.h $(TOPLEV_H) $(CONFIG_H) $(SYSTEM_H) \\\n    coretypes.h $(TREE_H) $(TM_H) langhooks.h $(GGC_H) $(EXPR_H) $(RTL_H) \\\n    output.h $(DIAGNOSTIC_H) $(TM_P_H) $(INSN_ATTR_H) intl.h $(TARGET_H) \\\n@@ -2729,7 +2765,8 @@ toplev.o : toplev.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) \\\n    langhooks.h insn-flags.h $(CFGLAYOUT_H) $(CFGLOOP_H) hosthooks.h \\\n    $(CGRAPH_H) $(COVERAGE_H) alloc-pool.h $(GGC_H) $(INTEGRATE_H) \\\n    opts.h params.def tree-mudflap.h $(TREE_PASS_H) $(GIMPLE_H) \\\n-   tree-ssa-alias.h $(PLUGIN_H) realmpfr.h\n+   tree-ssa-alias.h $(PLUGIN_H) realmpfr.h tree-diagnostic.h \\\n+   tree-pretty-print.h\n \t$(COMPILER) $(ALL_COMPILERFLAGS) $(ALL_CPPFLAGS) \\\n \t  -DTARGET_NAME=\\\"$(target_noncanonical)\\\" \\\n \t  -c $(srcdir)/toplev.c $(OUTPUT_OPTION)\n@@ -2763,7 +2800,7 @@ rtl.o : rtl.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n \n print-rtl.o : print-rtl.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n     $(RTL_H) $(TREE_H) hard-reg-set.h $(BASIC_BLOCK_H) $(FLAGS_H) \\\n-    $(BCONFIG_H) $(DIAGNOSTIC_H) cselib.h $(TREE_PASS_H)\n+    $(BCONFIG_H) $(DIAGNOSTIC_H) cselib.h $(TREE_PASS_H) tree-pretty-print.h\n rtlanal.o : rtlanal.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TOPLEV_H) \\\n    $(RTL_H) hard-reg-set.h $(TM_P_H) insn-config.h $(RECOG_H) \\\n    $(FLAGS_H) $(REGS_H) output.h $(TARGET_H) $(FUNCTION_H) $(TREE_H) \\\n@@ -2793,7 +2830,8 @@ except.o : except.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n    langhooks.h insn-config.h hard-reg-set.h $(BASIC_BLOCK_H) output.h \\\n    dwarf2asm.h dwarf2out.h $(TOPLEV_H) $(HASHTAB_H) intl.h $(GGC_H) \\\n    gt-except.h $(CGRAPH_H) $(INTEGRATE_H) $(DIAGNOSTIC_H) $(DWARF2_H) \\\n-   $(TARGET_H) $(TM_P_H) $(TREE_PASS_H) $(TIMEVAR_H) $(TREE_FLOW_H)\n+   $(TARGET_H) $(TM_P_H) $(TREE_PASS_H) $(TIMEVAR_H) $(TREE_FLOW_H) \\\n+   tree-pretty-print.h\n expr.o : expr.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n    $(TREE_H) $(FLAGS_H) $(FUNCTION_H) $(REGS_H) $(EXPR_H) $(OPTABS_H) \\\n    libfuncs.h $(INSN_ATTR_H) insn-config.h $(RECOG_H) output.h \\\n@@ -2839,7 +2877,8 @@ dwarf2out.o : dwarf2out.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n    output.h $(DIAGNOSTIC_H) hard-reg-set.h $(REGS_H) $(EXPR_H) \\\n    libfuncs.h $(TOPLEV_H) dwarf2out.h reload.h $(GGC_H) $(EXCEPT_H) dwarf2asm.h \\\n    $(TM_P_H) langhooks.h $(HASHTAB_H) gt-dwarf2out.h $(TARGET_H) $(CGRAPH_H) \\\n-   $(MD5_H) $(INPUT_H) $(FUNCTION_H) $(GIMPLE_H) $(TREE_PASS_H) $(TREE_FLOW_H)\n+   $(MD5_H) $(INPUT_H) $(FUNCTION_H) $(GIMPLE_H) $(TREE_PASS_H) \\\n+   $(TREE_FLOW_H) tree-pretty-print.h\n dwarf2asm.o : dwarf2asm.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n    $(FLAGS_H) $(RTL_H) $(TREE_H) output.h dwarf2asm.h $(TM_P_H) $(GGC_H) \\\n    gt-dwarf2asm.h $(DWARF2_H) $(SPLAY_TREE_H) $(TARGET_H)\n@@ -2884,7 +2923,8 @@ cgraphunit.o : cgraphunit.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n    $(TARGET_H) $(CGRAPH_H) intl.h pointer-set.h $(FUNCTION_H) $(GIMPLE_H) \\\n    $(TREE_FLOW_H) $(TREE_PASS_H) debug.h $(DIAGNOSTIC_H) \\\n    $(FIBHEAP_H) output.h $(PARAMS_H) $(RTL_H) $(TIMEVAR_H) $(IPA_PROP_H) \\\n-   gt-cgraphunit.h tree-iterator.h $(COVERAGE_H) $(TREE_DUMP_H)\n+   gt-cgraphunit.h tree-iterator.h $(COVERAGE_H) $(TREE_DUMP_H) \\\n+   tree-pretty-print.h gimple-pretty-print.h\n cgraphbuild.o : cgraphbuild.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n    $(TREE_H) langhooks.h $(CGRAPH_H) intl.h pointer-set.h $(GIMPLE_H) \\\n    $(TREE_FLOW_H) $(TREE_PASS_H) $(IPA_UTILS_H) $(EXCEPT_H)\n@@ -2897,14 +2937,15 @@ ipa.o : ipa.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(CGRAPH_H) \\\n ipa-prop.o : ipa-prop.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n    langhooks.h $(GGC_H) $(TARGET_H) $(CGRAPH_H) $(IPA_PROP_H) $(DIAGNOSTIC_H) \\\n    $(TREE_FLOW_H) $(TM_H) $(TREE_PASS_H) $(FLAGS_H) $(TREE_H) \\\n-   $(TREE_INLINE_H) $(GIMPLE_H) $(GIMPLE_FOLD_H) $(TIMEVAR_H)\n+   $(TREE_INLINE_H) $(GIMPLE_H) $(GIMPLE_FOLD_H) $(TIMEVAR_H) \\\n+   tree-pretty-print.h gimple-pretty-print.h\n ipa-ref.o : ipa-ref.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n    langhooks.h $(GGC_H) $(TARGET_H) $(CGRAPH_H)  $(TREE_H) $(TARGET_H) \\\n    $(TREE_FLOW_H) $(TM_H) $(TREE_PASS_H) $(FLAGS_H) $(TREE_H) $(GGC_H) \n ipa-cp.o : ipa-cp.c $(CONFIG_H) $(SYSTEM_H) coretypes.h  \\\n    $(TREE_H) $(TARGET_H) $(CGRAPH_H) $(IPA_PROP_H) $(TREE_FLOW_H) \\\n    $(TREE_PASS_H) $(FLAGS_H) $(TIMEVAR_H) $(DIAGNOSTIC_H) $(TREE_DUMP_H) \\\n-   $(TREE_INLINE_H) $(FIBHEAP_H) $(PARAMS_H)\n+   $(TREE_INLINE_H) $(FIBHEAP_H) $(PARAMS_H) tree-pretty-print.h\n matrix-reorg.o : matrix-reorg.c $(CONFIG_H) $(SYSTEM_H) coretypes.h  \\\n    $(TM_H) $(TREE_H) $(RTL_H) $(TREE_INLINE_H) $(TREE_FLOW_H) \\\n    tree-flow-inline.h langhooks.h $(HASHTAB_H) $(TOPLEV_H) $(FLAGS_H) $(GGC_H) \\\n@@ -2914,7 +2955,8 @@ matrix-reorg.o : matrix-reorg.c $(CONFIG_H) $(SYSTEM_H) coretypes.h  \\\n ipa-inline.o : ipa-inline.c gt-ipa-inline.h $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n    $(TREE_H) langhooks.h $(TREE_INLINE_H) $(FLAGS_H) $(CGRAPH_H) intl.h \\\n    $(DIAGNOSTIC_H) $(FIBHEAP_H) $(PARAMS_H) $(TIMEVAR_H) $(TREE_PASS_H) \\\n-   $(HASHTAB_H) $(COVERAGE_H) $(GGC_H) $(TREE_FLOW_H) $(RTL_H) $(IPA_PROP_H) $(EXCEPT_H)\n+   $(HASHTAB_H) $(COVERAGE_H) $(GGC_H) $(TREE_FLOW_H) $(RTL_H) $(IPA_PROP_H) \\\n+   $(EXCEPT_H) gimple-pretty-print.h\n ipa-utils.o : ipa-utils.c $(IPA_UTILS_H) $(CONFIG_H) $(SYSTEM_H) \\\n    coretypes.h $(TM_H) $(TREE_H) $(TREE_FLOW_H) $(TREE_INLINE_H) langhooks.h \\\n    pointer-set.h $(GGC_H) $(GIMPLE_H) $(SPLAY_TREE_H) \\\n@@ -2928,19 +2970,20 @@ ipa-pure-const.o : ipa-pure-const.c $(CONFIG_H) $(SYSTEM_H) \\\n    coretypes.h $(TM_H) $(TREE_H) $(TREE_FLOW_H) $(TREE_INLINE_H) langhooks.h \\\n    pointer-set.h $(GGC_H) $(IPA_UTILS_H) $(TARGET_H) \\\n    $(GIMPLE_H) $(CGRAPH_H) output.h $(FLAGS_H) $(TREE_PASS_H) $(TIMEVAR_H) \\\n-   $(DIAGNOSTIC_H) $(CFGLOOP_H) $(SCEV_H) $(LTO_STREAMER_H)\n+   $(DIAGNOSTIC_H) $(CFGLOOP_H) $(SCEV_H) $(LTO_STREAMER_H) \\\n+   gimple-pretty-print.h\n ipa-type-escape.o : ipa-type-escape.c $(CONFIG_H) $(SYSTEM_H) \\\n    coretypes.h $(TM_H) $(TREE_H) $(TREE_FLOW_H) $(TREE_INLINE_H) langhooks.h \\\n    pointer-set.h $(GGC_H) $(IPA_TYPE_ESCAPE_H) $(IPA_UTILS_H) $(SPLAY_TREE_H) \\\n    $(GIMPLE_H) $(CGRAPH_H) output.h $(FLAGS_H) $(TREE_PASS_H) \\\n-   $(TIMEVAR_H) $(DIAGNOSTIC_H) $(FUNCTION_H)\n+   $(TIMEVAR_H) $(DIAGNOSTIC_H) $(FUNCTION_H) tree-pretty-print.h\n ipa-struct-reorg.o: ipa-struct-reorg.c ipa-struct-reorg.h $(CONFIG_H) $(SYSTEM_H) \\\n    coretypes.h $(TM_H) $(GGC_H) $(TREE_H) $(RTL_H) $(GIMPLE_H) tree-inline.h \\\n    $(TREE_FLOW_H) langhooks.h pointer-set.h $(HASHTAB_H) $(TOPLEV_H) \\\n    $(FLAGS_H) debug.h $(TARGET_H) $(CGRAPH_H) $(DIAGNOSTIC_H) $(TIMEVAR_H) \\\n    $(PARAMS_H) $(FIBHEAP_H) intl.h $(FUNCTION_H) $(BASIC_BLOCK_H) tree-iterator.h \\\n    $(TREE_PASS_H) opts.h $(IPA_TYPE_ESCAPE_H) $(TREE_DUMP_H) \\\n-   $(GIMPLE_H)\n+   $(GIMPLE_H) tree-pretty-print.h gimple-pretty-print.h\n \n coverage.o : coverage.c $(GCOV_IO_H) $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n    $(TM_H) $(RTL_H) $(TREE_H) $(FLAGS_H) output.h $(REGS_H) $(EXPR_H) \\\n@@ -2999,26 +3042,28 @@ mode-switching.o : mode-switching.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n tree-ssa-dce.o : tree-ssa-dce.c $(CONFIG_H) $(SYSTEM_H) $(TREE_H) \\\n     $(TREE_FLOW_H) $(DIAGNOSTIC_H) $(TIMEVAR_H) $(TM_H) \\\n     coretypes.h $(TREE_DUMP_H) $(TREE_PASS_H) $(FLAGS_H) $(BASIC_BLOCK_H) \\\n-    $(GGC_H) $(GIMPLE_H) $(CFGLOOP_H) $(SCEV_H)\n+    $(GGC_H) $(GIMPLE_H) $(CFGLOOP_H) $(SCEV_H) tree-pretty-print.h \\\n+    gimple-pretty-print.h\n tree-call-cdce.o : tree-call-cdce.c $(CONFIG_H) $(SYSTEM_H) $(TREE_H) \\\n     $(TREE_FLOW_H) $(DIAGNOSTIC_H) $(TIMEVAR_H) $(TM_H) \\\n     coretypes.h $(TREE_DUMP_H) $(TREE_PASS_H) $(FLAGS_H) $(BASIC_BLOCK_H) \\\n-    $(GIMPLE_H)\n+    $(GIMPLE_H) gimple-pretty-print.h\n tree-ssa-ccp.o : tree-ssa-ccp.c $(TREE_FLOW_H) $(CONFIG_H) \\\n    $(SYSTEM_H) $(TREE_H) $(TM_P_H) $(EXPR_H) output.h \\\n    $(DIAGNOSTIC_H) $(FUNCTION_H) $(TIMEVAR_H) $(TM_H) coretypes.h \\\n    $(TREE_DUMP_H) $(BASIC_BLOCK_H) $(TREE_PASS_H) langhooks.h \\\n    tree-ssa-propagate.h value-prof.h $(FLAGS_H) $(TARGET_H) $(TOPLEV_H) \\\n-   $(DBGCNT_H)\n+   $(DBGCNT_H) tree-pretty-print.h gimple-pretty-print.h\n tree-sra.o : tree-sra.c $(CONFIG_H) $(SYSTEM_H) coretypes.h alloc-pool.h \\\n    $(TM_H) $(TREE_H) $(GIMPLE_H) $(CGRAPH_H) $(TREE_FLOW_H) $(IPA_PROP_H) \\\n    $(DIAGNOSTIC_H) statistics.h $(TREE_DUMP_H) $(TIMEVAR_H) $(PARAMS_H) \\\n-   $(TARGET_H) $(FLAGS_H) $(EXPR_H)\n+   $(TARGET_H) $(FLAGS_H) $(EXPR_H) tree-pretty-print.h\n tree-switch-conversion.o : tree-switch-conversion.c $(CONFIG_H) $(SYSTEM_H) \\\n     $(TREE_H) $(TM_P_H) $(TREE_FLOW_H) $(DIAGNOSTIC_H) $(TREE_INLINE_H) \\\n     $(TIMEVAR_H) $(TM_H) coretypes.h $(TREE_DUMP_H) $(GIMPLE_H) \\\n     $(TREE_PASS_H) $(FLAGS_H) $(EXPR_H) $(BASIC_BLOCK_H) output.h \\\n-    $(GGC_H) $(OBSTACK_H) $(PARAMS_H) $(CPPLIB_H) $(PARAMS_H)\n+    $(GGC_H) $(OBSTACK_H) $(PARAMS_H) $(CPPLIB_H) $(PARAMS_H) \\\n+    gimple-pretty-print.h\n tree-complex.o : tree-complex.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TREE_H) \\\n     $(TM_H) $(FLAGS_H) $(TREE_FLOW_H) $(GIMPLE_H) \\\n     tree-iterator.h $(TREE_PASS_H) tree-ssa-propagate.h $(DIAGNOSTIC_H)\n@@ -3050,7 +3095,7 @@ var-tracking.o : var-tracking.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n    $(BASIC_BLOCK_H) output.h sbitmap.h alloc-pool.h $(FIBHEAP_H) $(HASHTAB_H) \\\n    $(REGS_H) $(EXPR_H) $(TIMEVAR_H) $(TREE_PASS_H) $(TREE_FLOW_H) \\\n    cselib.h $(TARGET_H) $(TOPLEV_H) $(PARAMS_H) $(DIAGNOSTIC_H) pointer-set.h \\\n-   $(RECOG_H)\n+   $(RECOG_H) tree-pretty-print.h\n profile.o : profile.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n    $(TREE_H) $(FLAGS_H) output.h $(REGS_H) $(EXPR_H) $(FUNCTION_H) \\\n    $(TOPLEV_H) $(COVERAGE_H) $(TREE_FLOW_H) value-prof.h cfghooks.h \\\n@@ -3065,7 +3110,8 @@ value-prof.o : value-prof.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n    $(BASIC_BLOCK_H) hard-reg-set.h value-prof.h $(EXPR_H) output.h $(FLAGS_H) \\\n    $(RECOG_H) insn-config.h $(OPTABS_H) $(REGS_H) $(GGC_H) $(DIAGNOSTIC_H) \\\n    $(TREE_H) $(COVERAGE_H) $(RTL_H) $(GCOV_IO_H) $(TREE_FLOW_H) \\\n-   tree-flow-inline.h $(TIMEVAR_H) $(TREE_PASS_H) $(TOPLEV_H) pointer-set.h\n+   tree-flow-inline.h $(TIMEVAR_H) $(TREE_PASS_H) $(TOPLEV_H) pointer-set.h \\\n+   tree-pretty-print.h gimple-pretty-print.h\n loop-doloop.o : loop-doloop.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n    $(RTL_H) $(FLAGS_H) $(EXPR_H) hard-reg-set.h $(BASIC_BLOCK_H) $(TM_P_H) \\\n    $(TOPLEV_H) $(CFGLOOP_H) output.h $(PARAMS_H) $(TARGET_H)\n@@ -3084,7 +3130,8 @@ cfgexpand.o : cfgexpand.c $(TREE_FLOW_H) $(CONFIG_H) $(SYSTEM_H) \\\n    $(RTL_H) $(TREE_H) $(TM_P_H) $(EXPR_H) $(FUNCTION_H) $(TIMEVAR_H) $(TM_H) \\\n    coretypes.h $(TREE_DUMP_H) $(EXCEPT_H) langhooks.h $(TREE_PASS_H) $(RTL_H) \\\n    $(DIAGNOSTIC_H) $(TOPLEV_H) $(BASIC_BLOCK_H) $(FLAGS_H) debug.h $(PARAMS_H) \\\n-   value-prof.h $(TREE_INLINE_H) $(TARGET_H) $(SSAEXPAND_H)\n+   value-prof.h $(TREE_INLINE_H) $(TARGET_H) $(SSAEXPAND_H) \\\n+   tree-pretty-print.h gimple-pretty-print.h\n cfgrtl.o : cfgrtl.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n    $(FLAGS_H) insn-config.h $(BASIC_BLOCK_H) $(REGS_H) hard-reg-set.h \\\n    output.h $(TOPLEV_H) $(FUNCTION_H) $(EXCEPT_H) $(TM_P_H) $(INSN_ATTR_H) \\\n@@ -3350,7 +3397,7 @@ params.o : params.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(PARAMS_H) \\\n pointer-set.o: pointer-set.c pointer-set.h $(CONFIG_H) $(SYSTEM_H)\n hooks.o: hooks.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(HOOKS_H)\n pretty-print.o: $(CONFIG_H) $(SYSTEM_H) coretypes.h intl.h $(PRETTY_PRINT_H) \\\n-   $(TREE_H) $(GGC_H)\n+   $(GGC_H)\n errors.o : errors.c $(CONFIG_H) $(SYSTEM_H) errors.h $(BCONFIG_H)\n dbgcnt.o: dbgcnt.c $(CONFIG_H) $(SYSTEM_H) coretypes.h errors.h $(DBGCNT_H) \\\n    $(TM_H) $(RTL_H) output.h"}, {"sha": "fccc2635fa8e52f0736e0150df9f88e241cfe088", "filename": "gcc/c-objc-common.c", "status": "modified", "additions": 11, "deletions": 2, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf8358387d0a53c1a84e049c9998e89db814beab/gcc%2Fc-objc-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf8358387d0a53c1a84e049c9998e89db814beab/gcc%2Fc-objc-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-objc-common.c?ref=cf8358387d0a53c1a84e049c9998e89db814beab", "patch": "@@ -1,6 +1,6 @@\n /* Some code common to C and ObjC front ends.\n    Copyright (C) 2001, 2002, 2003, 2004, 2005, 2007,\n-   2009 Free Software Foundation, Inc.\n+   2009, 2010 Free Software Foundation, Inc.\n \n This file is part of GCC.\n \n@@ -27,6 +27,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"c-pretty-print.h\"\n #include \"flags.h\"\n #include \"diagnostic.h\"\n+#include \"tree-pretty-print.h\"\n #include \"langhooks.h\"\n #include \"c-objc-common.h\"\n \n@@ -87,14 +88,22 @@ static bool\n c_tree_printer (pretty_printer *pp, text_info *text, const char *spec,\n \t\tint precision, bool wide, bool set_locus, bool hash)\n {\n-  tree t = va_arg (*text->args_ptr, tree);\n+  tree t;\n   tree name;\n   c_pretty_printer *cpp = (c_pretty_printer *) pp;\n   pp->padding = pp_none;\n \n   if (precision != 0 || wide || hash)\n     return false;\n \n+  if (*spec == 'K')\n+    {\n+      percent_K_format (text);\n+      return true;\n+    }\n+\n+  t = va_arg (*text->args_ptr, tree);\n+\n   if (set_locus && text->locus)\n     *text->locus = DECL_SOURCE_LOCATION (t);\n "}, {"sha": "f94f2c9f27328afd215f0c51f6bbc63f79f669c0", "filename": "gcc/c-pretty-print.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf8358387d0a53c1a84e049c9998e89db814beab/gcc%2Fc-pretty-print.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf8358387d0a53c1a84e049c9998e89db814beab/gcc%2Fc-pretty-print.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-pretty-print.c?ref=cf8358387d0a53c1a84e049c9998e89db814beab", "patch": "@@ -26,6 +26,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree.h\"\n #include \"intl.h\"\n #include \"c-pretty-print.h\"\n+#include \"tree-pretty-print.h\"\n #include \"c-tree.h\"\n #include \"tree-iterator.h\"\n #include \"diagnostic.h\""}, {"sha": "1d3ec8498269cc4fee57f5562744cec83a61999d", "filename": "gcc/cfgexpand.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf8358387d0a53c1a84e049c9998e89db814beab/gcc%2Fcfgexpand.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf8358387d0a53c1a84e049c9998e89db814beab/gcc%2Fcfgexpand.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfgexpand.c?ref=cf8358387d0a53c1a84e049c9998e89db814beab", "patch": "@@ -36,6 +36,8 @@ along with GCC; see the file COPYING3.  If not see\n #include \"except.h\"\n #include \"flags.h\"\n #include \"diagnostic.h\"\n+#include \"tree-pretty-print.h\"\n+#include \"gimple-pretty-print.h\"\n #include \"toplev.h\"\n #include \"debug.h\"\n #include \"params.h\""}, {"sha": "8cd622176e70d8df65bfda5d0e3a5e85447043c2", "filename": "gcc/cgraphunit.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf8358387d0a53c1a84e049c9998e89db814beab/gcc%2Fcgraphunit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf8358387d0a53c1a84e049c9998e89db814beab/gcc%2Fcgraphunit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcgraphunit.c?ref=cf8358387d0a53c1a84e049c9998e89db814beab", "patch": "@@ -123,6 +123,8 @@ along with GCC; see the file COPYING3.  If not see\n #include \"target.h\"\n #include \"cgraph.h\"\n #include \"diagnostic.h\"\n+#include \"tree-pretty-print.h\"\n+#include \"gimple-pretty-print.h\"\n #include \"timevar.h\"\n #include \"params.h\"\n #include \"fibheap.h\""}, {"sha": "072cda0c05fc27ad3467b6b735e5ab0ab3cfa2fc", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf8358387d0a53c1a84e049c9998e89db814beab/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf8358387d0a53c1a84e049c9998e89db814beab/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=cf8358387d0a53c1a84e049c9998e89db814beab", "patch": "@@ -1,3 +1,12 @@\n+2010-05-21  Joseph Myers  <joseph@codesourcery.com>\n+\n+\t* error.c: Include tree-diagnostic.h and tree-pretty-print.h.\n+\t(cp_print_error_function): Use diagnostic_abstract_origin macro.\n+\t(cp_printer): Handle %K here using percent_K_format.\n+\t* cxx-pretty-print.c: Include tree-pretty-print.h.\n+\t* Make-lang.in (cp/error.o, cp/cxx-pretty-print.o): Update\n+\tdependencies.\n+\n 2010-05-21  Steven Bosscher  <steven@gcc.gnu.org>\n \n \t* error.c, tree.c, typeck2.c, cxx-pretty-print.c, mangle.c:"}, {"sha": "e0553a0eca7ae3472bdc0d1e502af2b870c42ec4", "filename": "gcc/cp/Make-lang.in", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf8358387d0a53c1a84e049c9998e89db814beab/gcc%2Fcp%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf8358387d0a53c1a84e049c9998e89db814beab/gcc%2Fcp%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FMake-lang.in?ref=cf8358387d0a53c1a84e049c9998e89db814beab", "patch": "@@ -296,7 +296,8 @@ cp/pt.o: cp/pt.c $(CXX_TREE_H) $(TM_H) cp/decl.h cp/cp-objcp-common.h \\\n   toplev.h $(RTL_H) except.h $(TREE_INLINE_H) pointer-set.h gt-cp-pt.h \\\n   vecprim.h intl.h\n cp/error.o: cp/error.c $(CXX_TREE_H) $(TM_H) toplev.h $(DIAGNOSTIC_H) \\\n-  $(FLAGS_H) $(REAL_H) $(LANGHOOKS_DEF_H) $(CXX_PRETTY_PRINT_H)\n+  $(FLAGS_H) $(REAL_H) $(LANGHOOKS_DEF_H) $(CXX_PRETTY_PRINT_H) \\\n+  tree-diagnostic.h tree-pretty-print.h\n cp/repo.o: cp/repo.c $(CXX_TREE_H) $(TM_H) toplev.h $(DIAGNOSTIC_H) \\\n   gt-cp-repo.h\n cp/semantics.o: cp/semantics.c $(CXX_TREE_H) $(TM_H) except.h toplev.h \\\n@@ -319,4 +320,4 @@ cp/name-lookup.o: cp/name-lookup.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n \t$(DIAGNOSTIC_H) $(FLAGS_H) debug.h\n \n cp/cxx-pretty-print.o: cp/cxx-pretty-print.c $(CXX_PRETTY_PRINT_H) \\\n-  $(CONFIG_H) $(SYSTEM_H) $(TM_H) coretypes.h $(CXX_TREE_H)\n+  $(CONFIG_H) $(SYSTEM_H) $(TM_H) coretypes.h $(CXX_TREE_H) tree-pretty-print.h"}, {"sha": "803257d36b46d4b46ac25606b115c002722fd2e4", "filename": "gcc/cp/cxx-pretty-print.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf8358387d0a53c1a84e049c9998e89db814beab/gcc%2Fcp%2Fcxx-pretty-print.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf8358387d0a53c1a84e049c9998e89db814beab/gcc%2Fcp%2Fcxx-pretty-print.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcxx-pretty-print.c?ref=cf8358387d0a53c1a84e049c9998e89db814beab", "patch": "@@ -1,6 +1,6 @@\n /* Implementation of subroutines for the GNU C++ pretty-printer.\n    Copyright (C) 2003, 2004, 2005, 2007, 2008,\n-   2009 Free Software Foundation, Inc.\n+   2009, 2010 Free Software Foundation, Inc.\n    Contributed by Gabriel Dos Reis <gdr@integrable-solutions.net>\n \n This file is part of GCC.\n@@ -24,6 +24,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"coretypes.h\"\n #include \"tm.h\"\n #include \"intl.h\"\n+#include \"tree-pretty-print.h\"\n #include \"cp-tree.h\"\n #include \"cxx-pretty-print.h\"\n #include \"toplev.h\""}, {"sha": "dcdfe8921b291abe536e2db991735b2b0abd6605", "filename": "gcc/cp/error.c", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf8358387d0a53c1a84e049c9998e89db814beab/gcc%2Fcp%2Ferror.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf8358387d0a53c1a84e049c9998e89db814beab/gcc%2Fcp%2Ferror.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ferror.c?ref=cf8358387d0a53c1a84e049c9998e89db814beab", "patch": "@@ -1,7 +1,7 @@\n /* Call-backs for C++ error reporting.\n    This code is non-reentrant.\n-   Copyright (C) 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2002,\n-   2003, 2004, 2005, 2006, 2007, 2008, 2009 Free Software Foundation, Inc.\n+   Copyright (C) 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2002, 2003,\n+   2004, 2005, 2006, 2007, 2008, 2009, 2010 Free Software Foundation, Inc.\n    This file is part of GCC.\n \n GCC is free software; you can redistribute it and/or modify\n@@ -27,9 +27,11 @@ along with GCC; see the file COPYING3.  If not see\n #include \"toplev.h\"\n #include \"flags.h\"\n #include \"diagnostic.h\"\n+#include \"tree-diagnostic.h\"\n #include \"langhooks-def.h\"\n #include \"intl.h\"\n #include \"cxx-pretty-print.h\"\n+#include \"tree-pretty-print.h\"\n #include \"pointer-set.h\"\n \n #define pp_separate_with_comma(PP) pp_cxx_separate_with (PP, ',')\n@@ -2568,7 +2570,7 @@ cp_print_error_function (diagnostic_context *context,\n     {\n       const char *old_prefix = context->printer->prefix;\n       const char *file = LOCATION_FILE (diagnostic->location);\n-      tree abstract_origin = diagnostic->abstract_origin;\n+      tree abstract_origin = diagnostic_abstract_origin (diagnostic);\n       char *new_prefix = (file && abstract_origin == NULL)\n \t\t\t ? file_name_as_prefix (file) : NULL;\n \n@@ -2926,6 +2928,10 @@ cp_printer (pretty_printer *pp, text_info *text, const char *spec,\n     case 'T': result = type_to_string (next_tree, verbose);\tbreak;\n     case 'V': result = cv_to_string (next_tree, verbose);\tbreak;\n \n+    case 'K':\n+      percent_K_format (text);\n+      return true;\n+\n     default:\n       return false;\n     }"}, {"sha": "eee97cecd33c1b60f5de487fc3ebe3e3c96da319", "filename": "gcc/diagnostic.c", "status": "modified", "additions": 6, "deletions": 21, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf8358387d0a53c1a84e049c9998e89db814beab/gcc%2Fdiagnostic.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf8358387d0a53c1a84e049c9998e89db814beab/gcc%2Fdiagnostic.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdiagnostic.c?ref=cf8358387d0a53c1a84e049c9998e89db814beab", "patch": "@@ -26,17 +26,12 @@ along with GCC; see the file COPYING3.  If not see\n #include \"config.h\"\n #include \"system.h\"\n #include \"coretypes.h\"\n-#include \"tm.h\"\n-#include \"tree.h\"\n #include \"version.h\"\n-#include \"tm_p.h\"\n #include \"flags.h\"\n #include \"input.h\"\n #include \"toplev.h\"\n #include \"intl.h\"\n #include \"diagnostic.h\"\n-#include \"langhooks.h\"\n-#include \"langhooks-def.h\"\n #include \"opts.h\"\n #include \"plugin.h\"\n \n@@ -105,7 +100,7 @@ diagnostic_initialize (diagnostic_context *context)\n   diagnostic_starter (context) = default_diagnostic_starter;\n   diagnostic_finalizer (context) = default_diagnostic_finalizer;\n   context->last_module = 0;\n-  context->last_function = NULL;\n+  context->x_data = NULL;\n   context->lock = 0;\n   context->inhibit_notes_p = false;\n }\n@@ -230,16 +225,6 @@ diagnostic_action_after_output (diagnostic_context *context,\n     }\n }\n \n-/* Prints out, if necessary, the name of the current function\n-   that caused an error.  Called from all error and warning functions.  */\n-void\n-diagnostic_report_current_function (diagnostic_context *context,\n-\t\t\t\t    diagnostic_info *diagnostic)\n-{\n-  diagnostic_report_current_module (context);\n-  lang_hooks.print_error_function (context, input_filename, diagnostic);\n-}\n-\n void\n diagnostic_report_current_module (diagnostic_context *context)\n {\n@@ -287,7 +272,7 @@ void\n default_diagnostic_starter (diagnostic_context *context,\n \t\t\t    diagnostic_info *diagnostic)\n {\n-  diagnostic_report_current_function (context, diagnostic);\n+  diagnostic_report_current_module (context);\n   pp_set_prefix (context->printer, diagnostic_build_prefix (diagnostic));\n }\n \n@@ -460,16 +445,16 @@ diagnostic_report_diagnostic (diagnostic_context *context,\n \t\t      NULL));\n     }\n   diagnostic->message.locus = &diagnostic->location;\n-  diagnostic->message.abstract_origin = &diagnostic->abstract_origin;\n-  diagnostic->abstract_origin = NULL;\n+  diagnostic->message.x_data = &diagnostic->x_data;\n+  diagnostic->x_data = NULL;\n   pp_format (context->printer, &diagnostic->message);\n   (*diagnostic_starter (context)) (context, diagnostic);\n   pp_output_formatted_text (context->printer);\n   (*diagnostic_finalizer (context)) (context, diagnostic);\n   pp_flush (context->printer);\n   diagnostic_action_after_output (context, diagnostic);\n   diagnostic->message.format_spec = saved_format_spec;\n-  diagnostic->abstract_origin = NULL;\n+  diagnostic->x_data = NULL;\n \n   context->lock--;\n \n@@ -522,7 +507,7 @@ verbatim (const char *gmsgid, ...)\n   text.args_ptr = &ap;\n   text.format_spec = _(gmsgid);\n   text.locus = NULL;\n-  text.abstract_origin = NULL;\n+  text.x_data = NULL;\n   pp_format_verbatim (global_dc->printer, &text);\n   pp_flush (global_dc->printer);\n   va_end (ap);"}, {"sha": "89c1271bf848324fdfb71bea96d10cafe5be45f0", "filename": "gcc/diagnostic.h", "status": "modified", "additions": 7, "deletions": 49, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf8358387d0a53c1a84e049c9998e89db814beab/gcc%2Fdiagnostic.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf8358387d0a53c1a84e049c9998e89db814beab/gcc%2Fdiagnostic.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdiagnostic.h?ref=cf8358387d0a53c1a84e049c9998e89db814beab", "patch": "@@ -42,9 +42,8 @@ typedef struct diagnostic_info\n   text_info message;\n   location_t location;\n   unsigned int override_column;\n-  /* TREE_BLOCK if the diagnostic is to be reported in some inline\n-     function inlined into other function, otherwise NULL.  */\n-  tree abstract_origin;\n+  /* Auxiliary data for client.  */\n+  void *x_data;\n   /* The kind of diagnostic it is about.  */\n   diagnostic_t kind;\n   /* Which OPT_* directly controls this diagnostic.  */\n@@ -103,10 +102,8 @@ struct diagnostic_context\n   /* Client hook to report an internal error.  */\n   void (*internal_error) (const char *, va_list *);\n \n-  /* Function of last diagnostic message; more generally, function such that\n-     if next diagnostic message is in it then we don't have to mention the\n-     function name.  */\n-  tree last_function;\n+  /* Auxiliary data for client.  */\n+  void *x_data;\n \n   /* Used to detect when the input file stack has changed since last\n      described.  */\n@@ -131,8 +128,9 @@ diagnostic_inhibit_notes (diagnostic_context * context)\n    displayed.  */\n #define diagnostic_finalizer(DC) (DC)->end_diagnostic\n \n-/* Extension hook for client.  */\n-#define diagnostic_auxiliary_data(DC) (DC)->x_data\n+/* Extension hooks for client.  */\n+#define diagnostic_context_auxiliary_data(DC) (DC)->x_data\n+#define diagnostic_info_auxiliary_data(DI) (DI)->x_data\n \n /* Same as pp_format_decoder.  Works on 'diagnostic_context *'.  */\n #define diagnostic_format_decoder(DC) ((DC)->printer->format_decoder)\n@@ -146,18 +144,6 @@ diagnostic_inhibit_notes (diagnostic_context * context)\n \n #define diagnostic_flush_buffer(DC) pp_base_flush ((DC)->printer)\n \n-/* True if the last function in which a diagnostic was reported is\n-   different from the current one.  */\n-#define diagnostic_last_function_changed(DC, DI) \\\n-  ((DC)->last_function != ((DI)->abstract_origin \\\n-\t\t\t   ? (DI)->abstract_origin : current_function_decl))\n-\n-/* Remember the current function as being the last one in which we report\n-   a diagnostic.  */\n-#define diagnostic_set_last_function(DC, DI) \\\n-  (DC)->last_function = (((DI) && (DI)->abstract_origin) \\\n-\t\t\t ? (DI)->abstract_origin : current_function_decl)\n-\n /* True if the last module or file in which a diagnostic was reported is\n    different from the current one.  */\n #define diagnostic_last_module_changed(DC, MAP)\t\\\n@@ -208,8 +194,6 @@ extern diagnostic_context *global_dc;\n extern void diagnostic_initialize (diagnostic_context *);\n extern void diagnostic_finish (diagnostic_context *);\n extern void diagnostic_report_current_module (diagnostic_context *);\n-extern void diagnostic_report_current_function (diagnostic_context *,\n-\t\t\t\t\t\tdiagnostic_info *);\n \n /* Force diagnostics controlled by OPTIDX to be kind KIND.  */\n extern diagnostic_t diagnostic_classify_diagnostic (diagnostic_context *,\n@@ -234,30 +218,4 @@ void default_diagnostic_finalizer (diagnostic_context *, diagnostic_info *);\n /* Pure text formatting support functions.  */\n extern char *file_name_as_prefix (const char *);\n \n-/* In tree-pretty-print.c  */\n-extern void print_declaration (pretty_printer *, tree, int, int);\n-extern int dump_generic_node (pretty_printer *, tree, int, int, bool);\n-extern void print_generic_stmt (FILE *, tree, int);\n-extern void print_generic_stmt_indented (FILE *, tree, int, int);\n-extern void print_generic_expr (FILE *, tree, int);\n-extern void print_generic_decl (FILE *, tree, int);\n-extern void debug_c_tree (tree);\n-extern void dump_omp_clauses (pretty_printer *, tree, int, int);\n-extern void print_call_name (pretty_printer *, tree, int);\n-\n-/* In gimple-pretty-print.c  */\n-extern void debug_generic_expr (tree);\n-extern void debug_generic_stmt (tree);\n-extern void debug_tree_chain (tree);\n-extern void debug_gimple_stmt (gimple);\n-extern void debug_gimple_seq (gimple_seq);\n-extern void print_gimple_seq (FILE *, gimple_seq, int, int);\n-extern void print_gimple_stmt (FILE *, gimple, int, int);\n-extern void print_gimple_expr (FILE *, gimple, int, int);\n-extern void dump_gimple_stmt (pretty_printer *, gimple, int, int);\n-\n-/* In toplev.c  */\n-extern bool default_tree_printer (pretty_printer *, text_info *, const char *,\n-\t\t\t\t  int, bool, bool, bool);\n-\n #endif /* ! GCC_DIAGNOSTIC_H */"}, {"sha": "fbf581bc2f6b68047272dc8c30126d6a02f689a9", "filename": "gcc/dwarf2out.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf8358387d0a53c1a84e049c9998e89db814beab/gcc%2Fdwarf2out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf8358387d0a53c1a84e049c9998e89db814beab/gcc%2Fdwarf2out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2out.c?ref=cf8358387d0a53c1a84e049c9998e89db814beab", "patch": "@@ -82,6 +82,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"md5.h\"\n #include \"tm_p.h\"\n #include \"diagnostic.h\"\n+#include \"tree-pretty-print.h\"\n #include \"debug.h\"\n #include \"target.h\"\n #include \"langhooks.h\""}, {"sha": "d7efa93c8b39f1b5a9b064d40261c060ec1a6051", "filename": "gcc/except.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf8358387d0a53c1a84e049c9998e89db814beab/gcc%2Fexcept.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf8358387d0a53c1a84e049c9998e89db814beab/gcc%2Fexcept.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexcept.c?ref=cf8358387d0a53c1a84e049c9998e89db814beab", "patch": "@@ -139,6 +139,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"langhooks.h\"\n #include \"cgraph.h\"\n #include \"diagnostic.h\"\n+#include \"tree-pretty-print.h\"\n #include \"tree-pass.h\"\n #include \"timevar.h\"\n #include \"tree-flow.h\""}, {"sha": "0480f9d43967fd0bff0c9ae74b5ca4046b9e4f5d", "filename": "gcc/gimple-pretty-print.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf8358387d0a53c1a84e049c9998e89db814beab/gcc%2Fgimple-pretty-print.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf8358387d0a53c1a84e049c9998e89db814beab/gcc%2Fgimple-pretty-print.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-pretty-print.c?ref=cf8358387d0a53c1a84e049c9998e89db814beab", "patch": "@@ -1,5 +1,5 @@\n /* Pretty formatting of GIMPLE statements and expressions.\n-   Copyright (C) 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009\n+   Copyright (C) 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010\n    Free Software Foundation, Inc.\n    Contributed by Aldy Hernandez <aldyh@redhat.com> and\n    Diego Novillo <dnovillo@google.com>\n@@ -26,6 +26,8 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tm.h\"\n #include \"tree.h\"\n #include \"diagnostic.h\"\n+#include \"tree-pretty-print.h\"\n+#include \"gimple-pretty-print.h\"\n #include \"hashtab.h\"\n #include \"tree-flow.h\"\n #include \"tree-pass.h\""}, {"sha": "4d2fd4bb942f19b324dcb07714555e8ae6c285d3", "filename": "gcc/gimple-pretty-print.h", "status": "added", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf8358387d0a53c1a84e049c9998e89db814beab/gcc%2Fgimple-pretty-print.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf8358387d0a53c1a84e049c9998e89db814beab/gcc%2Fgimple-pretty-print.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-pretty-print.h?ref=cf8358387d0a53c1a84e049c9998e89db814beab", "patch": "@@ -0,0 +1,33 @@\n+/* Various declarations for pretty formatting of GIMPLE statements and\n+   expressions.\n+   Copyright (C) 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009\n+   2010, Free Software Foundation, Inc.\n+\n+This file is part of GCC.\n+\n+GCC is free software; you can redistribute it and/or modify it under\n+the terms of the GNU General Public License as published by the Free\n+Software Foundation; either version 3, or (at your option) any later\n+version.\n+\n+GCC is distributed in the hope that it will be useful, but WITHOUT ANY\n+WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GCC; see the file COPYING3.  If not see\n+<http://www.gnu.org/licenses/>.  */\n+\n+#ifndef GCC_GIMPLE_PRETTY_PRINT_H\n+#define GCC_GIMPLE_PRETTY_PRINT_H\n+\n+/* In gimple-pretty-print.c  */\n+extern void debug_gimple_stmt (gimple);\n+extern void debug_gimple_seq (gimple_seq);\n+extern void print_gimple_seq (FILE *, gimple_seq, int, int);\n+extern void print_gimple_stmt (FILE *, gimple, int, int);\n+extern void print_gimple_expr (FILE *, gimple, int, int);\n+extern void dump_gimple_stmt (pretty_printer *, gimple, int, int);\n+\n+#endif /* ! GCC_GIMPLE_PRETTY_PRINT_H */"}, {"sha": "66b6b520853328d91186ab65356ae72a8e44ac0f", "filename": "gcc/gimplify.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf8358387d0a53c1a84e049c9998e89db814beab/gcc%2Fgimplify.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf8358387d0a53c1a84e049c9998e89db814beab/gcc%2Fgimplify.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimplify.c?ref=cf8358387d0a53c1a84e049c9998e89db814beab", "patch": "@@ -31,6 +31,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree-iterator.h\"\n #include \"tree-inline.h\"\n #include \"diagnostic.h\"\n+#include \"tree-pretty-print.h\"\n #include \"langhooks.h\"\n #include \"langhooks-def.h\"\n #include \"tree-flow.h\""}, {"sha": "64222809ca2095efeb95e3ba2eb3fb694884b6e1", "filename": "gcc/graphite-poly.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf8358387d0a53c1a84e049c9998e89db814beab/gcc%2Fgraphite-poly.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf8358387d0a53c1a84e049c9998e89db814beab/gcc%2Fgraphite-poly.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite-poly.c?ref=cf8358387d0a53c1a84e049c9998e89db814beab", "patch": "@@ -28,6 +28,8 @@ along with GCC; see the file COPYING3.  If not see\n #include \"output.h\"\n #include \"basic-block.h\"\n #include \"diagnostic.h\"\n+#include \"tree-pretty-print.h\"\n+#include \"gimple-pretty-print.h\"\n #include \"tree-flow.h\"\n #include \"toplev.h\"\n #include \"tree-dump.h\""}, {"sha": "5c953b4c4ba41d570e8ed73043ae49b29a473d0f", "filename": "gcc/ipa-cp.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf8358387d0a53c1a84e049c9998e89db814beab/gcc%2Fipa-cp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf8358387d0a53c1a84e049c9998e89db814beab/gcc%2Fipa-cp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-cp.c?ref=cf8358387d0a53c1a84e049c9998e89db814beab", "patch": "@@ -131,6 +131,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"flags.h\"\n #include \"timevar.h\"\n #include \"diagnostic.h\"\n+#include \"tree-pretty-print.h\"\n #include \"tree-dump.h\"\n #include \"tree-inline.h\"\n #include \"fibheap.h\""}, {"sha": "38a9c56b282f528345f1e7c53958e30efad2eedb", "filename": "gcc/ipa-inline.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf8358387d0a53c1a84e049c9998e89db814beab/gcc%2Fipa-inline.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf8358387d0a53c1a84e049c9998e89db814beab/gcc%2Fipa-inline.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-inline.c?ref=cf8358387d0a53c1a84e049c9998e89db814beab", "patch": "@@ -128,6 +128,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"flags.h\"\n #include \"cgraph.h\"\n #include \"diagnostic.h\"\n+#include \"gimple-pretty-print.h\"\n #include \"timevar.h\"\n #include \"params.h\"\n #include \"fibheap.h\""}, {"sha": "b3e8cfa61dcb230c48594b501e1aaad6f75d3b42", "filename": "gcc/ipa-prop.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf8358387d0a53c1a84e049c9998e89db814beab/gcc%2Fipa-prop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf8358387d0a53c1a84e049c9998e89db814beab/gcc%2Fipa-prop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-prop.c?ref=cf8358387d0a53c1a84e049c9998e89db814beab", "patch": "@@ -35,6 +35,8 @@ along with GCC; see the file COPYING3.  If not see\n #include \"timevar.h\"\n #include \"flags.h\"\n #include \"diagnostic.h\"\n+#include \"tree-pretty-print.h\"\n+#include \"gimple-pretty-print.h\"\n #include \"lto-streamer.h\"\n \n /* Vector where the parameter infos are actually stored. */"}, {"sha": "0bfb7ee51d646b5aa0259c4cfd5282847d91e420", "filename": "gcc/ipa-pure-const.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf8358387d0a53c1a84e049c9998e89db814beab/gcc%2Fipa-pure-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf8358387d0a53c1a84e049c9998e89db814beab/gcc%2Fipa-pure-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-pure-const.c?ref=cf8358387d0a53c1a84e049c9998e89db814beab", "patch": "@@ -51,6 +51,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"timevar.h\"\n #include \"toplev.h\"\n #include \"diagnostic.h\"\n+#include \"gimple-pretty-print.h\"\n #include \"langhooks.h\"\n #include \"target.h\"\n #include \"lto-streamer.h\""}, {"sha": "6ace2fcd0d79b8e16bb4293f5bfae8730f6e88ba", "filename": "gcc/ipa-struct-reorg.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf8358387d0a53c1a84e049c9998e89db814beab/gcc%2Fipa-struct-reorg.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf8358387d0a53c1a84e049c9998e89db814beab/gcc%2Fipa-struct-reorg.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-struct-reorg.c?ref=cf8358387d0a53c1a84e049c9998e89db814beab", "patch": "@@ -40,6 +40,8 @@ along with GCC; see the file COPYING3.  If not see\n #include \"target.h\"\n #include \"cgraph.h\"\n #include \"diagnostic.h\"\n+#include \"tree-pretty-print.h\"\n+#include \"gimple-pretty-print.h\"\n #include \"timevar.h\"\n #include \"params.h\"\n #include \"fibheap.h\""}, {"sha": "b6744a6e042c186166b2f0358684e97fe2ed76b6", "filename": "gcc/ipa-type-escape.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf8358387d0a53c1a84e049c9998e89db814beab/gcc%2Fipa-type-escape.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf8358387d0a53c1a84e049c9998e89db814beab/gcc%2Fipa-type-escape.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-type-escape.c?ref=cf8358387d0a53c1a84e049c9998e89db814beab", "patch": "@@ -53,6 +53,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"flags.h\"\n #include \"timevar.h\"\n #include \"diagnostic.h\"\n+#include \"tree-pretty-print.h\"\n #include \"langhooks.h\"\n \n /* Some of the aliasing is called very early, before this phase is"}, {"sha": "37baa271e70b4068b5d3e6255ce90ea9c560b560", "filename": "gcc/langhooks.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf8358387d0a53c1a84e049c9998e89db814beab/gcc%2Flanghooks.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf8358387d0a53c1a84e049c9998e89db814beab/gcc%2Flanghooks.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flanghooks.c?ref=cf8358387d0a53c1a84e049c9998e89db814beab", "patch": "@@ -1,5 +1,5 @@\n /* Default language-specific hooks.\n-   Copyright 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009\n+   Copyright 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010\n    Free Software Foundation, Inc.\n    Contributed by Alexandre Oliva  <aoliva@redhat.com>\n \n@@ -37,6 +37,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"langhooks-def.h\"\n #include \"ggc.h\"\n #include \"diagnostic.h\"\n+#include \"tree-diagnostic.h\"\n #include \"cgraph.h\"\n #include \"output.h\"\n \n@@ -345,7 +346,7 @@ lhd_print_error_function (diagnostic_context *context, const char *file,\n   if (diagnostic_last_function_changed (context, diagnostic))\n     {\n       const char *old_prefix = context->printer->prefix;\n-      tree abstract_origin = diagnostic->abstract_origin;\n+      tree abstract_origin = diagnostic_abstract_origin (diagnostic);\n       char *new_prefix = (file && abstract_origin == NULL)\n \t\t\t ? file_name_as_prefix (file) : NULL;\n "}, {"sha": "af28387b700bff52a6070849f4da676491c4d56b", "filename": "gcc/pretty-print.c", "status": "modified", "additions": 2, "deletions": 47, "changes": 49, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf8358387d0a53c1a84e049c9998e89db814beab/gcc%2Fpretty-print.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf8358387d0a53c1a84e049c9998e89db814beab/gcc%2Fpretty-print.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpretty-print.c?ref=cf8358387d0a53c1a84e049c9998e89db814beab", "patch": "@@ -1,5 +1,6 @@\n /* Various declarations for language-independent pretty-print subroutines.\n-   Copyright (C) 2003, 2004, 2005, 2007, 2008 Free Software Foundation, Inc.\n+   Copyright (C) 2003, 2004, 2005, 2007, 2008, 2009, 2010\n+   Free Software Foundation, Inc.\n    Contributed by Gabriel Dos Reis <gdr@integrable-solutions.net>\n \n This file is part of GCC.\n@@ -23,7 +24,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"coretypes.h\"\n #include \"intl.h\"\n #include \"pretty-print.h\"\n-#include \"tree.h\"\n #include \"ggc.h\"\n \n #if HAVE_ICONV\n@@ -188,7 +188,6 @@ pp_base_indent (pretty_printer *pp)\n    %.*s: a substring the length of which is specified by an argument\n \t integer.\n    %Ns: likewise, but length specified as constant in the format string.\n-   %K: a statement, from which EXPR_LOCATION and TREE_BLOCK will be recorded.\n    Flag 'q': quote formatted text (must come immediately after '%').\n \n    Arguments can be used sequentially, or through %N$ resp. *N$\n@@ -472,35 +471,6 @@ pp_base_format (pretty_printer *pp, text_info *text)\n \t      (pp, *text->args_ptr, precision, unsigned, \"x\");\n \t  break;\n \n-\tcase 'K':\n-\t  {\n-\t    tree t = va_arg (*text->args_ptr, tree), block;\n-\t    gcc_assert (text->locus != NULL);\n-\t    *text->locus = EXPR_LOCATION (t);\n-\t    gcc_assert (text->abstract_origin != NULL);\n-\t    block = TREE_BLOCK (t);\n-\t    *text->abstract_origin = NULL;\n-\t    while (block\n-\t\t   && TREE_CODE (block) == BLOCK\n-\t\t   && BLOCK_ABSTRACT_ORIGIN (block))\n-\t      {\n-\t\ttree ao = BLOCK_ABSTRACT_ORIGIN (block);\n-\n-\t\twhile (TREE_CODE (ao) == BLOCK\n-\t\t       && BLOCK_ABSTRACT_ORIGIN (ao)\n-\t\t       && BLOCK_ABSTRACT_ORIGIN (ao) != ao)\n-\t\t  ao = BLOCK_ABSTRACT_ORIGIN (ao);\n-\n-\t\tif (TREE_CODE (ao) == FUNCTION_DECL)\n-\t\t  {\n-\t\t    *text->abstract_origin = block;\n-\t\t    break;\n-\t\t  }\n-\t\tblock = BLOCK_SUPERCONTEXT (block);\n-\t      }\n-\t  }\n-\t  break;\n-\n \tcase '.':\n \t  {\n \t    int n;\n@@ -830,21 +800,6 @@ pp_base_maybe_space (pretty_printer *pp)\n       pp_base (pp)->padding = pp_none;\n     }\n }\n-\n-/* Print the identifier ID to PRETTY-PRINTER.  */\n-\n-void\n-pp_base_tree_identifier (pretty_printer *pp, tree id)\n-{\n-  if (pp_translate_identifiers (pp))\n-    {\n-      const char *text = identifier_to_locale (IDENTIFIER_POINTER (id));\n-      pp_append_text (pp, text, text + strlen (text));\n-    }\n-  else\n-    pp_append_text (pp, IDENTIFIER_POINTER (id),\n-\t\t    IDENTIFIER_POINTER (id) + IDENTIFIER_LENGTH (id));\n-}\n \f\n /* The string starting at P has LEN (at least 1) bytes left; if they\n    start with a valid UTF-8 sequence, return the length of that"}, {"sha": "c3c3e6dc4dd10b69004dfc9db7dc2d66578a1105", "filename": "gcc/pretty-print.h", "status": "modified", "additions": 3, "deletions": 9, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf8358387d0a53c1a84e049c9998e89db814beab/gcc%2Fpretty-print.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf8358387d0a53c1a84e049c9998e89db814beab/gcc%2Fpretty-print.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpretty-print.h?ref=cf8358387d0a53c1a84e049c9998e89db814beab", "patch": "@@ -1,5 +1,6 @@\n /* Various declarations for language-independent pretty-print subroutines.\n-   Copyright (C) 2002, 2003, 2004, 2007, 2008 Free Software Foundation, Inc.\n+   Copyright (C) 2002, 2003, 2004, 2007, 2008, 2009, 2010\n+   Free Software Foundation, Inc.\n    Contributed by Gabriel Dos Reis <gdr@integrable-solutions.net>\n \n This file is part of GCC.\n@@ -35,7 +36,7 @@ typedef struct\n   va_list *args_ptr;\n   int err_no;  /* for %m */\n   location_t *locus;\n-  tree *abstract_origin;\n+  void **x_data;\n } text_info;\n \n /* How often diagnostics are prefixed by their locations:\n@@ -284,12 +285,6 @@ struct pretty_print_info\n #define pp_identifier(PP, ID)  pp_string (PP, (pp_translate_identifiers (PP) \\\n \t\t\t\t\t  ? identifier_to_locale (ID)\t\\\n \t\t\t\t\t  : (ID)))\n-#define pp_tree_identifier(PP, T)                      \\\n-  pp_base_tree_identifier (pp_base (PP), T)\n-\n-#define pp_unsupported_tree(PP, T)                         \\\n-  pp_verbatim (pp_base (PP), \"#%qs not supported by %s#\", \\\n-               tree_code_name[(int) TREE_CODE (T)], __FUNCTION__)\n \n \n #define pp_buffer(PP) pp_base (PP)->buffer\n@@ -331,7 +326,6 @@ extern void pp_base_character (pretty_printer *, int);\n extern void pp_base_string (pretty_printer *, const char *);\n extern void pp_write_text_to_stream (pretty_printer *pp);\n extern void pp_base_maybe_space (pretty_printer *);\n-extern void pp_base_tree_identifier (pretty_printer *, tree);\n \n /* Switch into verbatim mode and return the old mode.  */\n static inline pp_wrapping_mode_t"}, {"sha": "c4533509ab11370c2bdb9b25ba99098637a5af8e", "filename": "gcc/print-rtl.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf8358387d0a53c1a84e049c9998e89db814beab/gcc%2Fprint-rtl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf8358387d0a53c1a84e049c9998e89db814beab/gcc%2Fprint-rtl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fprint-rtl.c?ref=cf8358387d0a53c1a84e049c9998e89db814beab", "patch": "@@ -40,6 +40,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"hard-reg-set.h\"\n #include \"basic-block.h\"\n #include \"diagnostic.h\"\n+#include \"tree-pretty-print.h\"\n #include \"cselib.h\"\n #include \"tree-pass.h\"\n #endif"}, {"sha": "f1a2455b39613dd8d1572dca28c8d4ab3b2df385", "filename": "gcc/print-tree.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf8358387d0a53c1a84e049c9998e89db814beab/gcc%2Fprint-tree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf8358387d0a53c1a84e049c9998e89db814beab/gcc%2Fprint-tree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fprint-tree.c?ref=cf8358387d0a53c1a84e049c9998e89db814beab", "patch": "@@ -29,6 +29,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"langhooks.h\"\n #include \"tree-iterator.h\"\n #include \"diagnostic.h\"\n+#include \"gimple-pretty-print.h\"\n #include \"tree-flow.h\"\n #include \"tree-pass.h\"\n "}, {"sha": "7f71f056ad23d1d8a685baa49009920f22273702", "filename": "gcc/sese.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf8358387d0a53c1a84e049c9998e89db814beab/gcc%2Fsese.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf8358387d0a53c1a84e049c9998e89db814beab/gcc%2Fsese.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsese.c?ref=cf8358387d0a53c1a84e049c9998e89db814beab", "patch": "@@ -29,6 +29,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"rtl.h\"\n #include \"basic-block.h\"\n #include \"diagnostic.h\"\n+#include \"tree-pretty-print.h\"\n #include \"tree-flow.h\"\n #include \"toplev.h\"\n #include \"tree-dump.h\""}, {"sha": "3cf65bad0777ca9a8c79da6b6212b940ab2f1b3a", "filename": "gcc/toplev.c", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf8358387d0a53c1a84e049c9998e89db814beab/gcc%2Ftoplev.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf8358387d0a53c1a84e049c9998e89db814beab/gcc%2Ftoplev.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftoplev.c?ref=cf8358387d0a53c1a84e049c9998e89db814beab", "patch": "@@ -63,6 +63,8 @@ along with GCC; see the file COPYING3.  If not see\n #include \"regs.h\"\n #include \"timevar.h\"\n #include \"diagnostic.h\"\n+#include \"tree-diagnostic.h\"\n+#include \"tree-pretty-print.h\"\n #include \"params.h\"\n #include \"reload.h\"\n #include \"ira.h\"\n@@ -1632,6 +1634,10 @@ default_tree_printer (pretty_printer *pp, text_info *text, const char *spec,\n       t = va_arg (*text->args_ptr, tree);\n       break;\n \n+    case 'K':\n+      percent_K_format (text);\n+      return true;\n+\n     default:\n       return false;\n     }\n@@ -1685,6 +1691,7 @@ general_init (const char *argv0)\n   /* Initialize the diagnostics reporting machinery, so option parsing\n      can give warnings and errors.  */\n   diagnostic_initialize (global_dc);\n+  diagnostic_starter (global_dc) = default_tree_diagnostic_starter;\n   /* Set a default printer.  Language specific initializations will\n      override it later.  */\n   pp_format_decoder (global_dc->printer) = &default_tree_printer;"}, {"sha": "c6c28bd970e74e4a86d2dc348402afe929f55a24", "filename": "gcc/tree-affine.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf8358387d0a53c1a84e049c9998e89db814beab/gcc%2Ftree-affine.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf8358387d0a53c1a84e049c9998e89db814beab/gcc%2Ftree-affine.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-affine.c?ref=cf8358387d0a53c1a84e049c9998e89db814beab", "patch": "@@ -1,5 +1,5 @@\n /* Operations with affine combinations of trees.\n-   Copyright (C) 2005, 2007, 2008 Free Software Foundation, Inc.\n+   Copyright (C) 2005, 2007, 2008, 2010 Free Software Foundation, Inc.\n \n This file is part of GCC.\n \n@@ -23,6 +23,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree.h\"\n #include \"output.h\"\n #include \"diagnostic.h\"\n+#include \"tree-pretty-print.h\"\n #include \"tree-dump.h\"\n #include \"pointer-set.h\"\n #include \"tree-affine.h\""}, {"sha": "0180d3ae4f7cc176dd935ecb7923a42feee7eba6", "filename": "gcc/tree-browser.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf8358387d0a53c1a84e049c9998e89db814beab/gcc%2Ftree-browser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf8358387d0a53c1a84e049c9998e89db814beab/gcc%2Ftree-browser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-browser.c?ref=cf8358387d0a53c1a84e049c9998e89db814beab", "patch": "@@ -1,5 +1,6 @@\n /* Tree browser.\n-   Copyright (C) 2002, 2003, 2004, 2007, 2008 Free Software Foundation, Inc.\n+   Copyright (C) 2002, 2003, 2004, 2007, 2008, 2010\n+   Free Software Foundation, Inc.\n    Contributed by Sebastian Pop <s.pop@laposte.net>\n \n This file is part of GCC.\n@@ -25,6 +26,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree.h\"\n #include \"tree-inline.h\"\n #include \"diagnostic.h\"\n+#include \"tree-pretty-print.h\"\n #include \"hashtab.h\"\n \n "}, {"sha": "6517742ca7097eeabf6461b2b310da478729ff83", "filename": "gcc/tree-call-cdce.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf8358387d0a53c1a84e049c9998e89db814beab/gcc%2Ftree-call-cdce.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf8358387d0a53c1a84e049c9998e89db814beab/gcc%2Ftree-call-cdce.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-call-cdce.c?ref=cf8358387d0a53c1a84e049c9998e89db814beab", "patch": "@@ -1,5 +1,5 @@\n /* Conditional Dead Call Elimination pass for the GNU compiler.\n-   Copyright (C) 2008\n+   Copyright (C) 2008, 2009, 2010\n    Free Software Foundation, Inc.\n    Contributed by Xinliang David Li <davidxl@google.com>\n \n@@ -26,6 +26,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"basic-block.h\"\n #include \"tree.h\"\n #include \"diagnostic.h\"\n+#include \"gimple-pretty-print.h\"\n #include \"tree-flow.h\"\n #include \"gimple.h\"\n #include \"tree-dump.h\""}, {"sha": "ec69dd8907078db8183e640be45cf8c3cbc80f1e", "filename": "gcc/tree-cfg.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf8358387d0a53c1a84e049c9998e89db814beab/gcc%2Ftree-cfg.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf8358387d0a53c1a84e049c9998e89db814beab/gcc%2Ftree-cfg.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-cfg.c?ref=cf8358387d0a53c1a84e049c9998e89db814beab", "patch": "@@ -33,6 +33,8 @@ along with GCC; see the file COPYING3.  If not see\n #include \"ggc.h\"\n #include \"langhooks.h\"\n #include \"diagnostic.h\"\n+#include \"tree-pretty-print.h\"\n+#include \"gimple-pretty-print.h\"\n #include \"tree-flow.h\"\n #include \"timevar.h\"\n #include \"tree-dump.h\""}, {"sha": "b0cc8b22b017fb6961ccfa8a6d93d5dcfeddefb7", "filename": "gcc/tree-chrec.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf8358387d0a53c1a84e049c9998e89db814beab/gcc%2Ftree-chrec.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf8358387d0a53c1a84e049c9998e89db814beab/gcc%2Ftree-chrec.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-chrec.c?ref=cf8358387d0a53c1a84e049c9998e89db814beab", "patch": "@@ -31,6 +31,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"ggc.h\"\n #include \"tree.h\"\n #include \"diagnostic.h\"\n+#include \"tree-pretty-print.h\"\n #include \"cfgloop.h\"\n #include \"tree-flow.h\"\n #include \"tree-chrec.h\""}, {"sha": "40f7a4407c7a74d100778fbdef9815eb84888789", "filename": "gcc/tree-data-ref.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf8358387d0a53c1a84e049c9998e89db814beab/gcc%2Ftree-data-ref.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf8358387d0a53c1a84e049c9998e89db814beab/gcc%2Ftree-data-ref.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-data-ref.c?ref=cf8358387d0a53c1a84e049c9998e89db814beab", "patch": "@@ -85,6 +85,8 @@ along with GCC; see the file COPYING3.  If not see\n /* These RTL headers are needed for basic-block.h.  */\n #include \"basic-block.h\"\n #include \"diagnostic.h\"\n+#include \"tree-pretty-print.h\"\n+#include \"gimple-pretty-print.h\"\n #include \"tree-flow.h\"\n #include \"tree-dump.h\"\n #include \"timevar.h\""}, {"sha": "ed70d745e01add0dd6f757746f03baaafd8fec31", "filename": "gcc/tree-dfa.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf8358387d0a53c1a84e049c9998e89db814beab/gcc%2Ftree-dfa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf8358387d0a53c1a84e049c9998e89db814beab/gcc%2Ftree-dfa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-dfa.c?ref=cf8358387d0a53c1a84e049c9998e89db814beab", "patch": "@@ -1,5 +1,5 @@\n /* Data flow functions for trees.\n-   Copyright (C) 2001, 2002, 2003, 2004, 2005, 2007, 2008, 2009\n+   Copyright (C) 2001, 2002, 2003, 2004, 2005, 2007, 2008, 2009, 2010\n    Free Software Foundation, Inc.\n    Contributed by Diego Novillo <dnovillo@redhat.com>\n \n@@ -36,6 +36,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"flags.h\"\n #include \"function.h\"\n #include \"diagnostic.h\"\n+#include \"tree-pretty-print.h\"\n #include \"tree-dump.h\"\n #include \"gimple.h\"\n #include \"tree-flow.h\""}, {"sha": "76fd129d52d6e30a81b1a72d38ec63a3cd35e62a", "filename": "gcc/tree-diagnostic.c", "status": "added", "additions": 48, "deletions": 0, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf8358387d0a53c1a84e049c9998e89db814beab/gcc%2Ftree-diagnostic.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf8358387d0a53c1a84e049c9998e89db814beab/gcc%2Ftree-diagnostic.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-diagnostic.c?ref=cf8358387d0a53c1a84e049c9998e89db814beab", "patch": "@@ -0,0 +1,48 @@\n+/* Language-independent diagnostic subroutines for the GNU Compiler\n+   Collection that are only for use in the compilers proper and not\n+   the driver or other programs.\n+   Copyright (C) 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008,\n+   2009, 2010 Free Software Foundation, Inc.\n+\n+This file is part of GCC.\n+\n+GCC is free software; you can redistribute it and/or modify it under\n+the terms of the GNU General Public License as published by the Free\n+Software Foundation; either version 3, or (at your option) any later\n+version.\n+\n+GCC is distributed in the hope that it will be useful, but WITHOUT ANY\n+WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GCC; see the file COPYING3.  If not see\n+<http://www.gnu.org/licenses/>.  */\n+\n+#include \"config.h\"\n+#include \"system.h\"\n+#include \"coretypes.h\"\n+#include \"tree.h\"\n+#include \"diagnostic.h\"\n+#include \"tree-diagnostic.h\"\n+#include \"langhooks.h\"\n+#include \"langhooks-def.h\"\n+\n+/* Prints out, if necessary, the name of the current function\n+   that caused an error.  Called from all error and warning functions.  */\n+void\n+diagnostic_report_current_function (diagnostic_context *context,\n+\t\t\t\t    diagnostic_info *diagnostic)\n+{\n+  diagnostic_report_current_module (context);\n+  lang_hooks.print_error_function (context, input_filename, diagnostic);\n+}\n+\n+void\n+default_tree_diagnostic_starter (diagnostic_context *context,\n+\t\t\t\t diagnostic_info *diagnostic)\n+{\n+  diagnostic_report_current_function (context, diagnostic);\n+  pp_set_prefix (context->printer, diagnostic_build_prefix (diagnostic));\n+}"}, {"sha": "7d88089069f48e0ef3f2753ece2137e4dd4b3994", "filename": "gcc/tree-diagnostic.h", "status": "added", "additions": 56, "deletions": 0, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf8358387d0a53c1a84e049c9998e89db814beab/gcc%2Ftree-diagnostic.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf8358387d0a53c1a84e049c9998e89db814beab/gcc%2Ftree-diagnostic.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-diagnostic.h?ref=cf8358387d0a53c1a84e049c9998e89db814beab", "patch": "@@ -0,0 +1,56 @@\n+/* Various declarations for language-independent diagnostics\n+   subroutines that are only for use in the compilers proper and not\n+   the driver or other programs.\n+   Copyright (C) 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009\n+   2010, Free Software Foundation, Inc.\n+\n+This file is part of GCC.\n+\n+GCC is free software; you can redistribute it and/or modify it under\n+the terms of the GNU General Public License as published by the Free\n+Software Foundation; either version 3, or (at your option) any later\n+version.\n+\n+GCC is distributed in the hope that it will be useful, but WITHOUT ANY\n+WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GCC; see the file COPYING3.  If not see\n+<http://www.gnu.org/licenses/>.  */\n+\n+#ifndef GCC_TREE_DIAGNOSTIC_H\n+#define GCC_TREE_DIAGNOSTIC_H\n+\n+/* TREE_BLOCK if the diagnostic is to be reported in some inline\n+   function inlined into other function, otherwise NULL.  */\n+#define diagnostic_abstract_origin(DI)\t\t\\\n+  ((tree) diagnostic_info_auxiliary_data (DI))\n+\n+/* Function of last diagnostic message; more generally, function such\n+   that if next diagnostic message is in it then we don't have to\n+   mention the function name.  */\n+#define diagnostic_last_function(DC)\t\t\t\\\n+  ((tree) diagnostic_context_auxiliary_data (DC))\n+\n+/* True if the last function in which a diagnostic was reported is\n+   different from the current one.  */\n+#define diagnostic_last_function_changed(DC, DI)\t\t\t\\\n+  (diagnostic_last_function (DC) != (diagnostic_abstract_origin (DI)\t\\\n+\t\t\t\t     ? diagnostic_abstract_origin (DI)\t\\\n+\t\t\t\t     : current_function_decl))\n+\n+/* Remember the current function as being the last one in which we report\n+   a diagnostic.  */\n+#define diagnostic_set_last_function(DC, DI)\t\t\\\n+  diagnostic_context_auxiliary_data (DC)\t\t\\\n+    = (((DI) && diagnostic_abstract_origin (DI))\t\\\n+       ? diagnostic_abstract_origin (DI)\t\t\\\n+       : current_function_decl)\n+\n+void default_tree_diagnostic_starter (diagnostic_context *, diagnostic_info *);\n+extern void diagnostic_report_current_function (diagnostic_context *,\n+\t\t\t\t\t\tdiagnostic_info *);\n+\n+#endif /* ! GCC_TREE_DIAGNOSTIC_H */"}, {"sha": "adbdfd8fcc26aff913c8f6a5e33f2c33aa6f0b13", "filename": "gcc/tree-if-conv.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf8358387d0a53c1a84e049c9998e89db814beab/gcc%2Ftree-if-conv.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf8358387d0a53c1a84e049c9998e89db814beab/gcc%2Ftree-if-conv.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-if-conv.c?ref=cf8358387d0a53c1a84e049c9998e89db814beab", "patch": "@@ -1,5 +1,5 @@\n /* If-conversion for vectorizer.\n-   Copyright (C) 2004, 2005, 2006, 2007, 2008, 2009\n+   Copyright (C) 2004, 2005, 2006, 2007, 2008, 2009, 2010\n    Free Software Foundation, Inc.\n    Contributed by Devang Patel <dpatel@apple.com>\n \n@@ -90,6 +90,8 @@ along with GCC; see the file COPYING3.  If not see\n #include \"timevar.h\"\n #include \"basic-block.h\"\n #include \"diagnostic.h\"\n+#include \"tree-pretty-print.h\"\n+#include \"gimple-pretty-print.h\"\n #include \"tree-flow.h\"\n #include \"tree-dump.h\"\n #include \"cfgloop.h\""}, {"sha": "4c51f3b10c837b4ca5c50b3d794e69a4ab46fcf3", "filename": "gcc/tree-inline.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf8358387d0a53c1a84e049c9998e89db814beab/gcc%2Ftree-inline.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf8358387d0a53c1a84e049c9998e89db814beab/gcc%2Ftree-inline.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-inline.c?ref=cf8358387d0a53c1a84e049c9998e89db814beab", "patch": "@@ -42,6 +42,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"function.h\"\n #include \"tree-flow.h\"\n #include \"diagnostic.h\"\n+#include \"tree-pretty-print.h\"\n #include \"except.h\"\n #include \"debug.h\"\n #include \"pointer-set.h\""}, {"sha": "ddb3c24b7da669d0fab3e1a0d7ffad504797e334", "filename": "gcc/tree-into-ssa.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf8358387d0a53c1a84e049c9998e89db814beab/gcc%2Ftree-into-ssa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf8358387d0a53c1a84e049c9998e89db814beab/gcc%2Ftree-into-ssa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-into-ssa.c?ref=cf8358387d0a53c1a84e049c9998e89db814beab", "patch": "@@ -32,6 +32,8 @@ along with GCC; see the file COPYING3.  If not see\n #include \"expr.h\"\n #include \"function.h\"\n #include \"diagnostic.h\"\n+#include \"tree-pretty-print.h\"\n+#include \"gimple-pretty-print.h\"\n #include \"bitmap.h\"\n #include \"tree-flow.h\"\n #include \"gimple.h\""}, {"sha": "06b13511e25dfdf553479334a229ddc50e9a3d2b", "filename": "gcc/tree-nrv.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf8358387d0a53c1a84e049c9998e89db814beab/gcc%2Ftree-nrv.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf8358387d0a53c1a84e049c9998e89db814beab/gcc%2Ftree-nrv.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-nrv.c?ref=cf8358387d0a53c1a84e049c9998e89db814beab", "patch": "@@ -1,5 +1,6 @@\n /* Language independent return value optimizations\n-   Copyright (C) 2004, 2005, 2007, 2008, 2009 Free Software Foundation, Inc.\n+   Copyright (C) 2004, 2005, 2007, 2008, 2009, 2010\n+   Free Software Foundation, Inc.\n \n This file is part of GCC.\n \n@@ -25,6 +26,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"function.h\"\n #include \"basic-block.h\"\n #include \"diagnostic.h\"\n+#include \"tree-pretty-print.h\"\n #include \"tree-flow.h\"\n #include \"timevar.h\"\n #include \"tree-dump.h\""}, {"sha": "35b3c44707e53e6713490a46e19dce66932e11d5", "filename": "gcc/tree-object-size.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf8358387d0a53c1a84e049c9998e89db814beab/gcc%2Ftree-object-size.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf8358387d0a53c1a84e049c9998e89db814beab/gcc%2Ftree-object-size.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-object-size.c?ref=cf8358387d0a53c1a84e049c9998e89db814beab", "patch": "@@ -1,5 +1,5 @@\n /* __builtin_object_size (ptr, object_size_type) computation\n-   Copyright (C) 2004, 2005, 2006, 2007, 2008, 2009\n+   Copyright (C) 2004, 2005, 2006, 2007, 2008, 2009, 2010\n    Free Software Foundation, Inc.\n    Contributed by Jakub Jelinek <jakub@redhat.com>\n \n@@ -26,6 +26,8 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree.h\"\n #include \"toplev.h\"\n #include \"diagnostic.h\"\n+#include \"tree-pretty-print.h\"\n+#include \"gimple-pretty-print.h\"\n #include \"tree-flow.h\"\n #include \"tree-pass.h\"\n #include \"tree-ssa-propagate.h\""}, {"sha": "26395710eb86ad24021ed77e951c3e466ef3565d", "filename": "gcc/tree-outof-ssa.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf8358387d0a53c1a84e049c9998e89db814beab/gcc%2Ftree-outof-ssa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf8358387d0a53c1a84e049c9998e89db814beab/gcc%2Ftree-outof-ssa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-outof-ssa.c?ref=cf8358387d0a53c1a84e049c9998e89db814beab", "patch": "@@ -27,6 +27,8 @@ along with GCC; see the file COPYING3.  If not see\n #include \"ggc.h\"\n #include \"basic-block.h\"\n #include \"diagnostic.h\"\n+#include \"tree-pretty-print.h\"\n+#include \"gimple-pretty-print.h\"\n #include \"bitmap.h\"\n #include \"tree-flow.h\"\n #include \"timevar.h\""}, {"sha": "f38ae17d89a3697362881643b0fe96c8d284999c", "filename": "gcc/tree-parloops.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf8358387d0a53c1a84e049c9998e89db814beab/gcc%2Ftree-parloops.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf8358387d0a53c1a84e049c9998e89db814beab/gcc%2Ftree-parloops.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-parloops.c?ref=cf8358387d0a53c1a84e049c9998e89db814beab", "patch": "@@ -29,6 +29,8 @@ along with GCC; see the file COPYING3.  If not see\n #include \"cfgloop.h\"\n #include \"tree-data-ref.h\"\n #include \"diagnostic.h\"\n+#include \"tree-pretty-print.h\"\n+#include \"gimple-pretty-print.h\"\n #include \"tree-pass.h\"\n #include \"tree-scalar-evolution.h\"\n #include \"hashtab.h\""}, {"sha": "dd7b6e2cdde3d802c85dc22534932bf86983d58a", "filename": "gcc/tree-predcom.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf8358387d0a53c1a84e049c9998e89db814beab/gcc%2Ftree-predcom.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf8358387d0a53c1a84e049c9998e89db814beab/gcc%2Ftree-predcom.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-predcom.c?ref=cf8358387d0a53c1a84e049c9998e89db814beab", "patch": "@@ -199,6 +199,8 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree-chrec.h\"\n #include \"params.h\"\n #include \"diagnostic.h\"\n+#include \"tree-pretty-print.h\"\n+#include \"gimple-pretty-print.h\"\n #include \"tree-pass.h\"\n #include \"tree-affine.h\"\n #include \"tree-inline.h\""}, {"sha": "8852c05cb851e7b8184e3d1b8508dbc502533088", "filename": "gcc/tree-pretty-print.c", "status": "modified", "additions": 51, "deletions": 1, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf8358387d0a53c1a84e049c9998e89db814beab/gcc%2Ftree-pretty-print.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf8358387d0a53c1a84e049c9998e89db814beab/gcc%2Ftree-pretty-print.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-pretty-print.c?ref=cf8358387d0a53c1a84e049c9998e89db814beab", "patch": "@@ -1,5 +1,5 @@\n /* Pretty formatting of GENERIC trees in C syntax.\n-   Copyright (C) 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009\n+   Copyright (C) 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010\n    Free Software Foundation, Inc.\n    Adapted from c-pretty-print.c by Diego Novillo <dnovillo@redhat.com>\n \n@@ -26,6 +26,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree.h\"\n #include \"output.h\"\n #include \"diagnostic.h\"\n+#include \"tree-pretty-print.h\"\n #include \"hashtab.h\"\n #include \"tree-flow.h\"\n #include \"langhooks.h\"\n@@ -2855,3 +2856,52 @@ newline_and_indent (pretty_printer *buffer, int spc)\n   pp_newline (buffer);\n   INDENT (spc);\n }\n+\n+/* Handle a %K format for TEXT.  Separate from default_tree_printer so\n+   it can also be used in front ends.\n+   %K: a statement, from which EXPR_LOCATION and TREE_BLOCK will be recorded.\n+*/\n+\n+void\n+percent_K_format (text_info *text)\n+{\n+  tree t = va_arg (*text->args_ptr, tree), block;\n+  gcc_assert (text->locus != NULL);\n+  *text->locus = EXPR_LOCATION (t);\n+  gcc_assert (pp_ti_abstract_origin (text) != NULL);\n+  block = TREE_BLOCK (t);\n+  *pp_ti_abstract_origin (text) = NULL;\n+  while (block\n+\t && TREE_CODE (block) == BLOCK\n+\t && BLOCK_ABSTRACT_ORIGIN (block))\n+    {\n+      tree ao = BLOCK_ABSTRACT_ORIGIN (block);\n+\n+      while (TREE_CODE (ao) == BLOCK\n+\t     && BLOCK_ABSTRACT_ORIGIN (ao)\n+\t     && BLOCK_ABSTRACT_ORIGIN (ao) != ao)\n+\tao = BLOCK_ABSTRACT_ORIGIN (ao);\n+\n+      if (TREE_CODE (ao) == FUNCTION_DECL)\n+\t{\n+\t  *pp_ti_abstract_origin (text) = block;\n+\t  break;\n+\t}\n+      block = BLOCK_SUPERCONTEXT (block);\n+    }\n+}\n+\n+/* Print the identifier ID to PRETTY-PRINTER.  */\n+\n+void\n+pp_base_tree_identifier (pretty_printer *pp, tree id)\n+{\n+  if (pp_translate_identifiers (pp))\n+    {\n+      const char *text = identifier_to_locale (IDENTIFIER_POINTER (id));\n+      pp_append_text (pp, text, text + strlen (text));\n+    }\n+  else\n+    pp_append_text (pp, IDENTIFIER_POINTER (id),\n+\t\t    IDENTIFIER_POINTER (id) + IDENTIFIER_LENGTH (id));\n+}"}, {"sha": "ef4cd27f8b56a4c6656c81e1cbab6520b583dc2c", "filename": "gcc/tree-pretty-print.h", "status": "added", "additions": 56, "deletions": 0, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf8358387d0a53c1a84e049c9998e89db814beab/gcc%2Ftree-pretty-print.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf8358387d0a53c1a84e049c9998e89db814beab/gcc%2Ftree-pretty-print.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-pretty-print.h?ref=cf8358387d0a53c1a84e049c9998e89db814beab", "patch": "@@ -0,0 +1,56 @@\n+/* Various declarations for language-independent pretty-print\n+   subroutines that are only for use in the compilers proper and not\n+   the driver or other programs.\n+   Copyright (C) 2002, 2003, 2004, 2007, 2008, 2009, 2010\n+   Free Software Foundation, Inc.\n+\n+This file is part of GCC.\n+\n+GCC is free software; you can redistribute it and/or modify it under\n+the terms of the GNU General Public License as published by the Free\n+Software Foundation; either version 3, or (at your option) any later\n+version.\n+\n+GCC is distributed in the hope that it will be useful, but WITHOUT ANY\n+WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GCC; see the file COPYING3.  If not see\n+<http://www.gnu.org/licenses/>.  */\n+\n+#ifndef GCC_TREE_PRETTY_PRINT_H\n+#define GCC_TREE_PRETTY_PRINT_H\n+\n+#define pp_tree_identifier(PP, T)                      \\\n+  pp_base_tree_identifier (pp_base (PP), T)\n+\n+#define pp_unsupported_tree(PP, T)                         \\\n+  pp_verbatim (pp_base (PP), \"#%qs not supported by %s#\", \\\n+               tree_code_name[(int) TREE_CODE (T)], __FUNCTION__)\n+\n+#define pp_ti_abstract_origin(TI) ((tree *) (TI)->x_data)\n+\n+extern void pp_base_tree_identifier (pretty_printer *, tree);\n+\n+/* In tree-pretty-print.c  */\n+extern void print_declaration (pretty_printer *, tree, int, int);\n+extern int dump_generic_node (pretty_printer *, tree, int, int, bool);\n+extern void print_generic_stmt (FILE *, tree, int);\n+extern void print_generic_stmt_indented (FILE *, tree, int, int);\n+extern void print_generic_expr (FILE *, tree, int);\n+extern void print_generic_decl (FILE *, tree, int);\n+extern void debug_c_tree (tree);\n+extern void dump_omp_clauses (pretty_printer *, tree, int, int);\n+extern void print_call_name (pretty_printer *, tree, int);\n+extern void debug_generic_expr (tree);\n+extern void debug_generic_stmt (tree);\n+extern void debug_tree_chain (tree);\n+extern void percent_K_format (text_info *);\n+\n+/* In toplev.c  */\n+extern bool default_tree_printer (pretty_printer *, text_info *, const char *,\n+\t\t\t\t  int, bool, bool, bool);\n+\n+#endif /* ! GCC_TREE_PRETTY_PRINT_H */"}, {"sha": "e2ed1f59ee2c9ddf87c53b36b977cfca4191e9be", "filename": "gcc/tree-scalar-evolution.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf8358387d0a53c1a84e049c9998e89db814beab/gcc%2Ftree-scalar-evolution.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf8358387d0a53c1a84e049c9998e89db814beab/gcc%2Ftree-scalar-evolution.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-scalar-evolution.c?ref=cf8358387d0a53c1a84e049c9998e89db814beab", "patch": "@@ -262,6 +262,8 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree.h\"\n #include \"basic-block.h\"\n #include \"diagnostic.h\"\n+#include \"tree-pretty-print.h\"\n+#include \"gimple-pretty-print.h\"\n #include \"tree-flow.h\"\n #include \"tree-dump.h\"\n #include \"timevar.h\""}, {"sha": "ae038f9a441028231c15a1c2f63e2282496ec864", "filename": "gcc/tree-sra.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf8358387d0a53c1a84e049c9998e89db814beab/gcc%2Ftree-sra.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf8358387d0a53c1a84e049c9998e89db814beab/gcc%2Ftree-sra.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-sra.c?ref=cf8358387d0a53c1a84e049c9998e89db814beab", "patch": "@@ -83,6 +83,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree-flow.h\"\n #include \"ipa-prop.h\"\n #include \"diagnostic.h\"\n+#include \"tree-pretty-print.h\"\n #include \"statistics.h\"\n #include \"tree-dump.h\"\n #include \"timevar.h\""}, {"sha": "f22b07d2ad24679dd4b633fa8cbe287cb2e0cd70", "filename": "gcc/tree-ssa-address.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf8358387d0a53c1a84e049c9998e89db814beab/gcc%2Ftree-ssa-address.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf8358387d0a53c1a84e049c9998e89db814beab/gcc%2Ftree-ssa-address.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-address.c?ref=cf8358387d0a53c1a84e049c9998e89db814beab", "patch": "@@ -30,6 +30,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"basic-block.h\"\n #include \"output.h\"\n #include \"diagnostic.h\"\n+#include \"tree-pretty-print.h\"\n #include \"tree-flow.h\"\n #include \"tree-dump.h\"\n #include \"tree-pass.h\""}, {"sha": "2db305873249abf46e6db0c811ee97cc8c6c43b6", "filename": "gcc/tree-ssa-alias.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf8358387d0a53c1a84e049c9998e89db814beab/gcc%2Ftree-ssa-alias.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf8358387d0a53c1a84e049c9998e89db814beab/gcc%2Ftree-ssa-alias.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-alias.c?ref=cf8358387d0a53c1a84e049c9998e89db814beab", "patch": "@@ -33,6 +33,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"flags.h\"\n #include \"function.h\"\n #include \"diagnostic.h\"\n+#include \"tree-pretty-print.h\"\n #include \"tree-dump.h\"\n #include \"gimple.h\"\n #include \"tree-flow.h\""}, {"sha": "d4a7a31c1017623f85d7f3173f189954f4a0276b", "filename": "gcc/tree-ssa-ccp.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf8358387d0a53c1a84e049c9998e89db814beab/gcc%2Ftree-ssa-ccp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf8358387d0a53c1a84e049c9998e89db814beab/gcc%2Ftree-ssa-ccp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-ccp.c?ref=cf8358387d0a53c1a84e049c9998e89db814beab", "patch": "@@ -197,6 +197,8 @@ along with GCC; see the file COPYING3.  If not see\n #include \"expr.h\"\n #include \"function.h\"\n #include \"diagnostic.h\"\n+#include \"tree-pretty-print.h\"\n+#include \"gimple-pretty-print.h\"\n #include \"timevar.h\"\n #include \"tree-dump.h\"\n #include \"tree-flow.h\""}, {"sha": "6c84360557337207bca61c18cb9b9877ab2f0ad0", "filename": "gcc/tree-ssa-coalesce.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf8358387d0a53c1a84e049c9998e89db814beab/gcc%2Ftree-ssa-coalesce.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf8358387d0a53c1a84e049c9998e89db814beab/gcc%2Ftree-ssa-coalesce.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-coalesce.c?ref=cf8358387d0a53c1a84e049c9998e89db814beab", "patch": "@@ -26,6 +26,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree.h\"\n #include \"flags.h\"\n #include \"diagnostic.h\"\n+#include \"tree-pretty-print.h\"\n #include \"bitmap.h\"\n #include \"tree-flow.h\"\n #include \"hashtab.h\""}, {"sha": "afa9acef335cc826bb6940753ced79be02d80c3b", "filename": "gcc/tree-ssa-copy.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf8358387d0a53c1a84e049c9998e89db814beab/gcc%2Ftree-ssa-copy.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf8358387d0a53c1a84e049c9998e89db814beab/gcc%2Ftree-ssa-copy.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-copy.c?ref=cf8358387d0a53c1a84e049c9998e89db814beab", "patch": "@@ -30,6 +30,8 @@ along with GCC; see the file COPYING3.  If not see\n #include \"expr.h\"\n #include \"function.h\"\n #include \"diagnostic.h\"\n+#include \"tree-pretty-print.h\"\n+#include \"gimple-pretty-print.h\"\n #include \"timevar.h\"\n #include \"tree-dump.h\"\n #include \"tree-flow.h\""}, {"sha": "c236de34d962db731a2e3db16e55a102b7fd088d", "filename": "gcc/tree-ssa-copyrename.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf8358387d0a53c1a84e049c9998e89db814beab/gcc%2Ftree-ssa-copyrename.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf8358387d0a53c1a84e049c9998e89db814beab/gcc%2Ftree-ssa-copyrename.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-copyrename.c?ref=cf8358387d0a53c1a84e049c9998e89db814beab", "patch": "@@ -1,5 +1,6 @@\n /* Rename SSA copies.\n-   Copyright (C) 2004, 2006, 2007, 2008 Free Software Foundation, Inc.\n+   Copyright (C) 2004, 2006, 2007, 2008, 2009, 2010\n+   Free Software Foundation, Inc.\n    Contributed by Andrew MacLeod <amacleod@redhat.com>\n \n This file is part of GCC.\n@@ -28,6 +29,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"basic-block.h\"\n #include \"function.h\"\n #include \"diagnostic.h\"\n+#include \"tree-pretty-print.h\"\n #include \"bitmap.h\"\n #include \"tree-flow.h\"\n #include \"gimple.h\""}, {"sha": "00bf012d7150d4a0d51e116f8d2fa388216bbca1", "filename": "gcc/tree-ssa-dce.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf8358387d0a53c1a84e049c9998e89db814beab/gcc%2Ftree-ssa-dce.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf8358387d0a53c1a84e049c9998e89db814beab/gcc%2Ftree-ssa-dce.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-dce.c?ref=cf8358387d0a53c1a84e049c9998e89db814beab", "patch": "@@ -50,6 +50,8 @@ along with GCC; see the file COPYING3.  If not see\n \n #include \"tree.h\"\n #include \"diagnostic.h\"\n+#include \"tree-pretty-print.h\"\n+#include \"gimple-pretty-print.h\"\n #include \"basic-block.h\"\n #include \"tree-flow.h\"\n #include \"gimple.h\""}, {"sha": "b84532569889dd6b92b1f248f23888e1ee727fee", "filename": "gcc/tree-ssa-dom.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf8358387d0a53c1a84e049c9998e89db814beab/gcc%2Ftree-ssa-dom.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf8358387d0a53c1a84e049c9998e89db814beab/gcc%2Ftree-ssa-dom.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-dom.c?ref=cf8358387d0a53c1a84e049c9998e89db814beab", "patch": "@@ -32,6 +32,8 @@ along with GCC; see the file COPYING3.  If not see\n #include \"expr.h\"\n #include \"function.h\"\n #include \"diagnostic.h\"\n+#include \"tree-pretty-print.h\"\n+#include \"gimple-pretty-print.h\"\n #include \"timevar.h\"\n #include \"tree-dump.h\"\n #include \"tree-flow.h\""}, {"sha": "858cd5e4203c9f8c9344a0b132edfb86b574d894", "filename": "gcc/tree-ssa-dse.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf8358387d0a53c1a84e049c9998e89db814beab/gcc%2Ftree-ssa-dse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf8358387d0a53c1a84e049c9998e89db814beab/gcc%2Ftree-ssa-dse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-dse.c?ref=cf8358387d0a53c1a84e049c9998e89db814beab", "patch": "@@ -28,6 +28,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"basic-block.h\"\n #include \"timevar.h\"\n #include \"diagnostic.h\"\n+#include \"gimple-pretty-print.h\"\n #include \"tree-flow.h\"\n #include \"tree-pass.h\"\n #include \"tree-dump.h\""}, {"sha": "f7295067801992b77f96898272631ad98e751bda", "filename": "gcc/tree-ssa-forwprop.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf8358387d0a53c1a84e049c9998e89db814beab/gcc%2Ftree-ssa-forwprop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf8358387d0a53c1a84e049c9998e89db814beab/gcc%2Ftree-ssa-forwprop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-forwprop.c?ref=cf8358387d0a53c1a84e049c9998e89db814beab", "patch": "@@ -1,5 +1,6 @@\n /* Forward propagation of expressions for single use variables.\n-   Copyright (C) 2004, 2005, 2007, 2008, 2009 Free Software Foundation, Inc.\n+   Copyright (C) 2004, 2005, 2007, 2008, 2009, 2010\n+   Free Software Foundation, Inc.\n \n This file is part of GCC.\n \n@@ -26,6 +27,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"basic-block.h\"\n #include \"timevar.h\"\n #include \"diagnostic.h\"\n+#include \"tree-pretty-print.h\"\n #include \"tree-flow.h\"\n #include \"tree-pass.h\"\n #include \"tree-dump.h\""}, {"sha": "8b8e0ddc7962ebada13bac095cac2c41b2987767", "filename": "gcc/tree-ssa-ifcombine.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf8358387d0a53c1a84e049c9998e89db814beab/gcc%2Ftree-ssa-ifcombine.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf8358387d0a53c1a84e049c9998e89db814beab/gcc%2Ftree-ssa-ifcombine.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-ifcombine.c?ref=cf8358387d0a53c1a84e049c9998e89db814beab", "patch": "@@ -1,5 +1,5 @@\n /* Combining of if-expressions on trees.\n-   Copyright (C) 2007, 2008 Free Software Foundation, Inc.\n+   Copyright (C) 2007, 2008, 2009, 2010 Free Software Foundation, Inc.\n    Contributed by Richard Guenther <rguenther@suse.de>\n \n This file is part of GCC.\n@@ -26,6 +26,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"basic-block.h\"\n #include \"timevar.h\"\n #include \"diagnostic.h\"\n+#include \"tree-pretty-print.h\"\n #include \"tree-flow.h\"\n #include \"tree-pass.h\"\n #include \"tree-dump.h\""}, {"sha": "c3e00713b3aeb0d662afad3e5ab2c877200c35e2", "filename": "gcc/tree-ssa-live.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf8358387d0a53c1a84e049c9998e89db814beab/gcc%2Ftree-ssa-live.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf8358387d0a53c1a84e049c9998e89db814beab/gcc%2Ftree-ssa-live.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-live.c?ref=cf8358387d0a53c1a84e049c9998e89db814beab", "patch": "@@ -1,6 +1,6 @@\n /* Liveness for SSA trees.\n-   Copyright (C) 2003, 2004, 2005, 2007, 2008, 2009 Free Software Foundation,\n-   Inc.\n+   Copyright (C) 2003, 2004, 2005, 2007, 2008, 2009, 2010\n+   Free Software Foundation, Inc.\n    Contributed by Andrew MacLeod <amacleod@redhat.com>\n \n This file is part of GCC.\n@@ -25,6 +25,8 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tm.h\"\n #include \"tree.h\"\n #include \"diagnostic.h\"\n+#include \"tree-pretty-print.h\"\n+#include \"gimple-pretty-print.h\"\n #include \"bitmap.h\"\n #include \"tree-flow.h\"\n #include \"tree-dump.h\""}, {"sha": "eb15382e2a11bd078492c490b8c63783cee19e46", "filename": "gcc/tree-ssa-loop-im.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf8358387d0a53c1a84e049c9998e89db814beab/gcc%2Ftree-ssa-loop-im.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf8358387d0a53c1a84e049c9998e89db814beab/gcc%2Ftree-ssa-loop-im.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-loop-im.c?ref=cf8358387d0a53c1a84e049c9998e89db814beab", "patch": "@@ -27,6 +27,8 @@ along with GCC; see the file COPYING3.  If not see\n #include \"basic-block.h\"\n #include \"output.h\"\n #include \"diagnostic.h\"\n+#include \"gimple-pretty-print.h\"\n+#include \"tree-pretty-print.h\"\n #include \"tree-flow.h\"\n #include \"tree-dump.h\"\n #include \"timevar.h\""}, {"sha": "12383d7b42eb87e31f2aeb4420ab3824ce4ec469", "filename": "gcc/tree-ssa-loop-ivcanon.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf8358387d0a53c1a84e049c9998e89db814beab/gcc%2Ftree-ssa-loop-ivcanon.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf8358387d0a53c1a84e049c9998e89db814beab/gcc%2Ftree-ssa-loop-ivcanon.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-loop-ivcanon.c?ref=cf8358387d0a53c1a84e049c9998e89db814beab", "patch": "@@ -41,6 +41,8 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tm_p.h\"\n #include \"basic-block.h\"\n #include \"diagnostic.h\"\n+#include \"tree-pretty-print.h\"\n+#include \"gimple-pretty-print.h\"\n #include \"tree-flow.h\"\n #include \"tree-dump.h\"\n #include \"cfgloop.h\""}, {"sha": "9592832f9b7259463e8538a60b99032ef19ba476", "filename": "gcc/tree-ssa-loop-ivopts.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf8358387d0a53c1a84e049c9998e89db814beab/gcc%2Ftree-ssa-loop-ivopts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf8358387d0a53c1a84e049c9998e89db814beab/gcc%2Ftree-ssa-loop-ivopts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-loop-ivopts.c?ref=cf8358387d0a53c1a84e049c9998e89db814beab", "patch": "@@ -71,6 +71,8 @@ along with GCC; see the file COPYING3.  If not see\n #include \"basic-block.h\"\n #include \"output.h\"\n #include \"diagnostic.h\"\n+#include \"tree-pretty-print.h\"\n+#include \"gimple-pretty-print.h\"\n #include \"tree-flow.h\"\n #include \"tree-dump.h\"\n #include \"timevar.h\""}, {"sha": "d1c2e4cbb405b472932fff6bdb18e2ec73754e4a", "filename": "gcc/tree-ssa-loop-niter.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf8358387d0a53c1a84e049c9998e89db814beab/gcc%2Ftree-ssa-loop-niter.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf8358387d0a53c1a84e049c9998e89db814beab/gcc%2Ftree-ssa-loop-niter.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-loop-niter.c?ref=cf8358387d0a53c1a84e049c9998e89db814beab", "patch": "@@ -1,6 +1,6 @@\n /* Functions to determine/estimate number of iterations of a loop.\n-   Copyright (C) 2004, 2005, 2006, 2007, 2008 Free Software Foundation,\n-   Inc.\n+   Copyright (C) 2004, 2005, 2006, 2007, 2008, 2009, 2010\n+   Free Software Foundation, Inc.\n \n This file is part of GCC.\n \n@@ -27,6 +27,8 @@ along with GCC; see the file COPYING3.  If not see\n #include \"basic-block.h\"\n #include \"output.h\"\n #include \"diagnostic.h\"\n+#include \"tree-pretty-print.h\"\n+#include \"gimple-pretty-print.h\"\n #include \"intl.h\"\n #include \"tree-flow.h\"\n #include \"tree-dump.h\""}, {"sha": "633dd337c74993683090ae2ba1869d6a0b2534b9", "filename": "gcc/tree-ssa-loop-prefetch.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf8358387d0a53c1a84e049c9998e89db814beab/gcc%2Ftree-ssa-loop-prefetch.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf8358387d0a53c1a84e049c9998e89db814beab/gcc%2Ftree-ssa-loop-prefetch.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-loop-prefetch.c?ref=cf8358387d0a53c1a84e049c9998e89db814beab", "patch": "@@ -1,5 +1,5 @@\n /* Array prefetching.\n-   Copyright (C) 2005, 2007, 2008 Free Software Foundation, Inc.\n+   Copyright (C) 2005, 2007, 2008, 2009, 2010 Free Software Foundation, Inc.\n \n This file is part of GCC.\n \n@@ -26,6 +26,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"basic-block.h\"\n #include \"output.h\"\n #include \"diagnostic.h\"\n+#include \"tree-pretty-print.h\"\n #include \"tree-flow.h\"\n #include \"tree-dump.h\"\n #include \"timevar.h\""}, {"sha": "f89910b82e544cc4ae75153df93495a8be07ad45", "filename": "gcc/tree-ssa-math-opts.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf8358387d0a53c1a84e049c9998e89db814beab/gcc%2Ftree-ssa-math-opts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf8358387d0a53c1a84e049c9998e89db814beab/gcc%2Ftree-ssa-math-opts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-math-opts.c?ref=cf8358387d0a53c1a84e049c9998e89db814beab", "patch": "@@ -98,6 +98,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"basic-block.h\"\n #include \"target.h\"\n #include \"diagnostic.h\"\n+#include \"gimple-pretty-print.h\"\n \n /* FIXME: RTL headers have to be included here for optabs.  */\n #include \"rtl.h\"\t\t/* Because optabs.h wants enum rtx_code.  */"}, {"sha": "aa37b972628c34c28e93060b9e16a1bc1641f09e", "filename": "gcc/tree-ssa-operands.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf8358387d0a53c1a84e049c9998e89db814beab/gcc%2Ftree-ssa-operands.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf8358387d0a53c1a84e049c9998e89db814beab/gcc%2Ftree-ssa-operands.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-operands.c?ref=cf8358387d0a53c1a84e049c9998e89db814beab", "patch": "@@ -26,6 +26,8 @@ along with GCC; see the file COPYING3.  If not see\n #include \"flags.h\"\n #include \"function.h\"\n #include \"diagnostic.h\"\n+#include \"tree-pretty-print.h\"\n+#include \"gimple-pretty-print.h\"\n #include \"tree-flow.h\"\n #include \"tree-inline.h\"\n #include \"tree-pass.h\""}, {"sha": "a7bb01195efeeaeb43e7b7e9b780eae9c4449984", "filename": "gcc/tree-ssa-phiprop.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf8358387d0a53c1a84e049c9998e89db814beab/gcc%2Ftree-ssa-phiprop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf8358387d0a53c1a84e049c9998e89db814beab/gcc%2Ftree-ssa-phiprop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-phiprop.c?ref=cf8358387d0a53c1a84e049c9998e89db814beab", "patch": "@@ -1,5 +1,5 @@\n /* Backward propagation of indirect loads through PHIs.\n-   Copyright (C) 2007, 2008 Free Software Foundation, Inc.\n+   Copyright (C) 2007, 2008, 2009, 2010 Free Software Foundation, Inc.\n    Contributed by Richard Guenther <rguenther@suse.de>\n \n This file is part of GCC.\n@@ -27,6 +27,8 @@ along with GCC; see the file COPYING3.  If not see\n #include \"basic-block.h\"\n #include \"timevar.h\"\n #include \"diagnostic.h\"\n+#include \"tree-pretty-print.h\"\n+#include \"gimple-pretty-print.h\"\n #include \"tree-flow.h\"\n #include \"tree-pass.h\"\n #include \"tree-dump.h\""}, {"sha": "18c75d242d8800a80d84eb2f0ed2cb1778eb6b83", "filename": "gcc/tree-ssa-pre.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf8358387d0a53c1a84e049c9998e89db814beab/gcc%2Ftree-ssa-pre.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf8358387d0a53c1a84e049c9998e89db814beab/gcc%2Ftree-ssa-pre.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-pre.c?ref=cf8358387d0a53c1a84e049c9998e89db814beab", "patch": "@@ -27,6 +27,8 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree.h\"\n #include \"basic-block.h\"\n #include \"diagnostic.h\"\n+#include \"tree-pretty-print.h\"\n+#include \"gimple-pretty-print.h\"\n #include \"tree-inline.h\"\n #include \"tree-flow.h\"\n #include \"gimple.h\""}, {"sha": "d7243e9822676b77908e43074ea5c2a9848407ff", "filename": "gcc/tree-ssa-propagate.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf8358387d0a53c1a84e049c9998e89db814beab/gcc%2Ftree-ssa-propagate.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf8358387d0a53c1a84e049c9998e89db814beab/gcc%2Ftree-ssa-propagate.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-propagate.c?ref=cf8358387d0a53c1a84e049c9998e89db814beab", "patch": "@@ -1,5 +1,6 @@\n /* Generic SSA value propagation engine.\n-   Copyright (C) 2004, 2005, 2006, 2007, 2008 Free Software Foundation, Inc.\n+   Copyright (C) 2004, 2005, 2006, 2007, 2008, 2009, 2010\n+   Free Software Foundation, Inc.\n    Contributed by Diego Novillo <dnovillo@redhat.com>\n \n    This file is part of GCC.\n@@ -30,6 +31,7 @@\n #include \"expr.h\"\n #include \"function.h\"\n #include \"diagnostic.h\"\n+#include \"gimple-pretty-print.h\"\n #include \"timevar.h\"\n #include \"tree-dump.h\"\n #include \"tree-flow.h\""}, {"sha": "40152d93e649d4d8fc53394f73a132f62c9ce844", "filename": "gcc/tree-ssa-reassoc.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf8358387d0a53c1a84e049c9998e89db814beab/gcc%2Ftree-ssa-reassoc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf8358387d0a53c1a84e049c9998e89db814beab/gcc%2Ftree-ssa-reassoc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-reassoc.c?ref=cf8358387d0a53c1a84e049c9998e89db814beab", "patch": "@@ -25,6 +25,8 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree.h\"\n #include \"basic-block.h\"\n #include \"diagnostic.h\"\n+#include \"tree-pretty-print.h\"\n+#include \"gimple-pretty-print.h\"\n #include \"tree-inline.h\"\n #include \"tree-flow.h\"\n #include \"gimple.h\""}, {"sha": "e1ddc78e5317ddf0200513da9a158e91255def4a", "filename": "gcc/tree-ssa-sccvn.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf8358387d0a53c1a84e049c9998e89db814beab/gcc%2Ftree-ssa-sccvn.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf8358387d0a53c1a84e049c9998e89db814beab/gcc%2Ftree-ssa-sccvn.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-sccvn.c?ref=cf8358387d0a53c1a84e049c9998e89db814beab", "patch": "@@ -26,6 +26,8 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree.h\"\n #include \"basic-block.h\"\n #include \"diagnostic.h\"\n+#include \"tree-pretty-print.h\"\n+#include \"gimple-pretty-print.h\"\n #include \"tree-inline.h\"\n #include \"tree-flow.h\"\n #include \"gimple.h\""}, {"sha": "40d3a2972f47cd6e4b6ae24c6c59b2d926adf7e8", "filename": "gcc/tree-ssa-sink.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf8358387d0a53c1a84e049c9998e89db814beab/gcc%2Ftree-ssa-sink.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf8358387d0a53c1a84e049c9998e89db814beab/gcc%2Ftree-ssa-sink.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-sink.c?ref=cf8358387d0a53c1a84e049c9998e89db814beab", "patch": "@@ -1,5 +1,5 @@\n /* Code sinking for trees\n-   Copyright (C) 2001, 2002, 2003, 2004, 2007, 2008, 2009\n+   Copyright (C) 2001, 2002, 2003, 2004, 2007, 2008, 2009, 2010\n    Free Software Foundation, Inc.\n    Contributed by Daniel Berlin <dan@dberlin.org>\n \n@@ -26,6 +26,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree.h\"\n #include \"basic-block.h\"\n #include \"diagnostic.h\"\n+#include \"gimple-pretty-print.h\"\n #include \"tree-inline.h\"\n #include \"tree-flow.h\"\n #include \"gimple.h\""}, {"sha": "d9d552c4cd09d66eb461485d53ae1e4ef33b971f", "filename": "gcc/tree-ssa-ter.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf8358387d0a53c1a84e049c9998e89db814beab/gcc%2Ftree-ssa-ter.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf8358387d0a53c1a84e049c9998e89db814beab/gcc%2Ftree-ssa-ter.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-ter.c?ref=cf8358387d0a53c1a84e049c9998e89db814beab", "patch": "@@ -1,6 +1,6 @@\n /* Routines for performing Temporary Expression Replacement (TER) in SSA trees.\n-   Copyright (C) 2003, 2004, 2005, 2006, 2007, 2008 Free Software Foundation,\n-   Inc.\n+   Copyright (C) 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010\n+   Free Software Foundation, Inc.\n    Contributed by Andrew MacLeod  <amacleod@redhat.com>\n \n This file is part of GCC.\n@@ -26,6 +26,8 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tm.h\"\n #include \"tree.h\"\n #include \"diagnostic.h\"\n+#include \"tree-pretty-print.h\"\n+#include \"gimple-pretty-print.h\"\n #include \"bitmap.h\"\n #include \"tree-flow.h\"\n #include \"tree-dump.h\""}, {"sha": "5487cc06b960c65f3aeb1911f6be7c4fc5529594", "filename": "gcc/tree-ssa-uninit.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf8358387d0a53c1a84e049c9998e89db814beab/gcc%2Ftree-ssa-uninit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf8358387d0a53c1a84e049c9998e89db814beab/gcc%2Ftree-ssa-uninit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-uninit.c?ref=cf8358387d0a53c1a84e049c9998e89db814beab", "patch": "@@ -1,5 +1,5 @@\n /* Predicate aware uninitialized variable warning.\n-   Copyright (C) 2001, 2002, 2003, 2004, 2005, 2007, 2008 Free Software\n+   Copyright (C) 2001, 2002, 2003, 2004, 2005, 2007, 2008, 2010 Free Software\n    Foundation, Inc.\n    Contributed by Xinliang David Li <davidxl@google.com>\n \n@@ -32,6 +32,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"expr.h\"\n #include \"function.h\"\n #include \"diagnostic.h\"\n+#include \"gimple-pretty-print.h\"\n #include \"bitmap.h\"\n #include \"pointer-set.h\"\n #include \"tree-flow.h\""}, {"sha": "dfea0258ea19f623b7eeb69a1a4bb1f4cd6b73e7", "filename": "gcc/tree-ssa.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf8358387d0a53c1a84e049c9998e89db814beab/gcc%2Ftree-ssa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf8358387d0a53c1a84e049c9998e89db814beab/gcc%2Ftree-ssa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa.c?ref=cf8358387d0a53c1a84e049c9998e89db814beab", "patch": "@@ -1,5 +1,5 @@\n /* Miscellaneous SSA utility functions.\n-   Copyright (C) 2001, 2002, 2003, 2004, 2005, 2007, 2008, 2009\n+   Copyright (C) 2001, 2002, 2003, 2004, 2005, 2007, 2008, 2009, 2010\n    Free Software Foundation, Inc.\n \n This file is part of GCC.\n@@ -33,6 +33,8 @@ along with GCC; see the file COPYING3.  If not see\n #include \"expr.h\"\n #include \"function.h\"\n #include \"diagnostic.h\"\n+#include \"tree-pretty-print.h\"\n+#include \"gimple-pretty-print.h\"\n #include \"bitmap.h\"\n #include \"pointer-set.h\"\n #include \"tree-flow.h\""}, {"sha": "8401747a020655c6cd7b8be0fcef88be0e39583f", "filename": "gcc/tree-stdarg.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf8358387d0a53c1a84e049c9998e89db814beab/gcc%2Ftree-stdarg.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf8358387d0a53c1a84e049c9998e89db814beab/gcc%2Ftree-stdarg.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-stdarg.c?ref=cf8358387d0a53c1a84e049c9998e89db814beab", "patch": "@@ -1,5 +1,6 @@\n /* Pass computing data for optimizing stdarg functions.\n-   Copyright (C) 2004, 2005, 2007, 2008, 2009 Free Software Foundation, Inc.\n+   Copyright (C) 2004, 2005, 2007, 2008, 2009, 2010\n+   Free Software Foundation, Inc.\n    Contributed by Jakub Jelinek <jakub@redhat.com>\n \n This file is part of GCC.\n@@ -26,6 +27,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"function.h\"\n #include \"langhooks.h\"\n #include \"diagnostic.h\"\n+#include \"gimple-pretty-print.h\"\n #include \"target.h\"\n #include \"tree-flow.h\"\n #include \"tree-pass.h\""}, {"sha": "0ff937f8030d1477cfcfcfef1acaab073928fbc0", "filename": "gcc/tree-switch-conversion.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf8358387d0a53c1a84e049c9998e89db814beab/gcc%2Ftree-switch-conversion.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf8358387d0a53c1a84e049c9998e89db814beab/gcc%2Ftree-switch-conversion.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-switch-conversion.c?ref=cf8358387d0a53c1a84e049c9998e89db814beab", "patch": "@@ -1,6 +1,6 @@\n /* Switch Conversion converts variable initializations based on switch\n    statements to initializations from a static array.\n-   Copyright (C) 2006, 2008 Free Software Foundation, Inc.\n+   Copyright (C) 2006, 2008, 2009, 2010 Free Software Foundation, Inc.\n    Contributed by Martin Jambor <jamborm@suse.cz>\n \n This file is part of GCC.\n@@ -94,6 +94,7 @@ eight) times the number of the actual switch branches. */\n #include \"input.h\"\n #include \"tree-pass.h\"\n #include \"diagnostic.h\"\n+#include \"gimple-pretty-print.h\"\n #include \"tree-dump.h\"\n #include \"timevar.h\"\n "}, {"sha": "e67f5805d271e18154e1aff35d7d9305f6fdf160", "filename": "gcc/tree-tailcall.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf8358387d0a53c1a84e049c9998e89db814beab/gcc%2Ftree-tailcall.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf8358387d0a53c1a84e049c9998e89db814beab/gcc%2Ftree-tailcall.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-tailcall.c?ref=cf8358387d0a53c1a84e049c9998e89db814beab", "patch": "@@ -29,6 +29,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree-flow.h\"\n #include \"tree-dump.h\"\n #include \"diagnostic.h\"\n+#include \"gimple-pretty-print.h\"\n #include \"except.h\"\n #include \"tree-pass.h\"\n #include \"flags.h\""}, {"sha": "76a5c21e2555cf444fa819bdc5df8e9d044c4fa7", "filename": "gcc/tree-vect-data-refs.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf8358387d0a53c1a84e049c9998e89db814beab/gcc%2Ftree-vect-data-refs.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf8358387d0a53c1a84e049c9998e89db814beab/gcc%2Ftree-vect-data-refs.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-data-refs.c?ref=cf8358387d0a53c1a84e049c9998e89db814beab", "patch": "@@ -29,6 +29,8 @@ along with GCC; see the file COPYING3.  If not see\n #include \"target.h\"\n #include \"basic-block.h\"\n #include \"diagnostic.h\"\n+#include \"tree-pretty-print.h\"\n+#include \"gimple-pretty-print.h\"\n #include \"tree-flow.h\"\n #include \"tree-dump.h\"\n #include \"cfgloop.h\""}, {"sha": "8289b363e76c1bb8ef53fbd9438cfa1764315ef2", "filename": "gcc/tree-vect-loop-manip.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf8358387d0a53c1a84e049c9998e89db814beab/gcc%2Ftree-vect-loop-manip.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf8358387d0a53c1a84e049c9998e89db814beab/gcc%2Ftree-vect-loop-manip.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-loop-manip.c?ref=cf8358387d0a53c1a84e049c9998e89db814beab", "patch": "@@ -28,6 +28,8 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree.h\"\n #include \"basic-block.h\"\n #include \"diagnostic.h\"\n+#include \"tree-pretty-print.h\"\n+#include \"gimple-pretty-print.h\"\n #include \"tree-flow.h\"\n #include \"tree-dump.h\"\n #include \"cfgloop.h\""}, {"sha": "465a95cbf121e7fe5c1c64afb673d44361ad8769", "filename": "gcc/tree-vect-loop.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf8358387d0a53c1a84e049c9998e89db814beab/gcc%2Ftree-vect-loop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf8358387d0a53c1a84e049c9998e89db814beab/gcc%2Ftree-vect-loop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-loop.c?ref=cf8358387d0a53c1a84e049c9998e89db814beab", "patch": "@@ -28,6 +28,8 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree.h\"\n #include \"basic-block.h\"\n #include \"diagnostic.h\"\n+#include \"tree-pretty-print.h\"\n+#include \"gimple-pretty-print.h\"\n #include \"tree-flow.h\"\n #include \"tree-dump.h\"\n #include \"cfgloop.h\""}, {"sha": "987c267b7e33154ea9f7dd0ae473464076d9338e", "filename": "gcc/tree-vect-patterns.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf8358387d0a53c1a84e049c9998e89db814beab/gcc%2Ftree-vect-patterns.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf8358387d0a53c1a84e049c9998e89db814beab/gcc%2Ftree-vect-patterns.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-patterns.c?ref=cf8358387d0a53c1a84e049c9998e89db814beab", "patch": "@@ -1,5 +1,5 @@\n /* Analysis Utilities for Loop Vectorization.\n-   Copyright (C) 2006, 2007, 2008, 2009 Free Software Foundation, Inc.\n+   Copyright (C) 2006, 2007, 2008, 2009, 2010 Free Software Foundation, Inc.\n    Contributed by Dorit Nuzman <dorit@il.ibm.com>\n \n This file is part of GCC.\n@@ -27,6 +27,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"target.h\"\n #include \"basic-block.h\"\n #include \"diagnostic.h\"\n+#include \"gimple-pretty-print.h\"\n #include \"tree-flow.h\"\n #include \"tree-dump.h\"\n #include \"cfgloop.h\""}, {"sha": "f1b6355025f30b63f160338750ef3770a97ea19e", "filename": "gcc/tree-vect-slp.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf8358387d0a53c1a84e049c9998e89db814beab/gcc%2Ftree-vect-slp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf8358387d0a53c1a84e049c9998e89db814beab/gcc%2Ftree-vect-slp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-slp.c?ref=cf8358387d0a53c1a84e049c9998e89db814beab", "patch": "@@ -29,6 +29,8 @@ along with GCC; see the file COPYING3.  If not see\n #include \"target.h\"\n #include \"basic-block.h\"\n #include \"diagnostic.h\"\n+#include \"tree-pretty-print.h\"\n+#include \"gimple-pretty-print.h\"\n #include \"tree-flow.h\"\n #include \"tree-dump.h\"\n #include \"cfgloop.h\""}, {"sha": "a70ebfe011be30d68af9a6dcb89116a98c921203", "filename": "gcc/tree-vect-stmts.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf8358387d0a53c1a84e049c9998e89db814beab/gcc%2Ftree-vect-stmts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf8358387d0a53c1a84e049c9998e89db814beab/gcc%2Ftree-vect-stmts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-stmts.c?ref=cf8358387d0a53c1a84e049c9998e89db814beab", "patch": "@@ -29,6 +29,8 @@ along with GCC; see the file COPYING3.  If not see\n #include \"target.h\"\n #include \"basic-block.h\"\n #include \"diagnostic.h\"\n+#include \"tree-pretty-print.h\"\n+#include \"gimple-pretty-print.h\"\n #include \"tree-flow.h\"\n #include \"tree-dump.h\"\n #include \"cfgloop.h\""}, {"sha": "b449268682156df4f6c2256dcfa7f2955d1d62f1", "filename": "gcc/tree-vectorizer.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf8358387d0a53c1a84e049c9998e89db814beab/gcc%2Ftree-vectorizer.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf8358387d0a53c1a84e049c9998e89db814beab/gcc%2Ftree-vectorizer.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vectorizer.c?ref=cf8358387d0a53c1a84e049c9998e89db814beab", "patch": "@@ -1,6 +1,6 @@\n /* Vectorizer\n-   Copyright (C) 2003, 2004, 2005, 2006, 2007, 2008, 2009 Free Software\n-   Foundation, Inc.\n+   Copyright (C) 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010\n+   Free Software Foundation, Inc.\n    Contributed by Dorit Naishlos <dorit@il.ibm.com>\n \n This file is part of GCC.\n@@ -62,6 +62,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"ggc.h\"\n #include \"tree.h\"\n #include \"diagnostic.h\"\n+#include \"tree-pretty-print.h\"\n #include \"tree-flow.h\"\n #include \"tree-dump.h\"\n #include \"cfgloop.h\""}, {"sha": "8ffde5bf05098d2554af809e242befe9286daf7a", "filename": "gcc/tree-vrp.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf8358387d0a53c1a84e049c9998e89db814beab/gcc%2Ftree-vrp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf8358387d0a53c1a84e049c9998e89db814beab/gcc%2Ftree-vrp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vrp.c?ref=cf8358387d0a53c1a84e049c9998e89db814beab", "patch": "@@ -32,6 +32,8 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree-dump.h\"\n #include \"timevar.h\"\n #include \"diagnostic.h\"\n+#include \"tree-pretty-print.h\"\n+#include \"gimple-pretty-print.h\"\n #include \"toplev.h\"\n #include \"intl.h\"\n #include \"cfgloop.h\""}, {"sha": "cc4a2d66fc18a7e1c465e43f3e73116d550f2f96", "filename": "gcc/tree.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf8358387d0a53c1a84e049c9998e89db814beab/gcc%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf8358387d0a53c1a84e049c9998e89db814beab/gcc%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.c?ref=cf8358387d0a53c1a84e049c9998e89db814beab", "patch": "@@ -53,6 +53,8 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree-pass.h\"\n #include \"langhooks-def.h\"\n #include \"diagnostic.h\"\n+#include \"tree-diagnostic.h\"\n+#include \"tree-pretty-print.h\"\n #include \"cgraph.h\"\n #include \"timevar.h\"\n #include \"except.h\"\n@@ -5019,7 +5021,7 @@ free_lang_data (void)\n   lang_hooks.set_decl_assembler_name = lhd_set_decl_assembler_name;\n \n   /* Reset diagnostic machinery.  */\n-  diagnostic_starter (global_dc) = default_diagnostic_starter;\n+  diagnostic_starter (global_dc) = default_tree_diagnostic_starter;\n   diagnostic_finalizer (global_dc) = default_diagnostic_finalizer;\n   diagnostic_format_decoder (global_dc) = default_tree_printer;\n "}, {"sha": "b819cdcc06f448025fa24e3f74758ee65e846406", "filename": "gcc/value-prof.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf8358387d0a53c1a84e049c9998e89db814beab/gcc%2Fvalue-prof.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf8358387d0a53c1a84e049c9998e89db814beab/gcc%2Fvalue-prof.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvalue-prof.c?ref=cf8358387d0a53c1a84e049c9998e89db814beab", "patch": "@@ -1,6 +1,6 @@\n /* Transformations based on profile information for values.\n-   Copyright (C) 2003, 2004, 2005, 2006, 2007, 2008, 2009  Free Software\n-   Foundation, Inc.\n+   Copyright (C) 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010\n+   Free Software Foundation, Inc.\n \n This file is part of GCC.\n \n@@ -37,6 +37,8 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree-flow.h\"\n #include \"tree-flow-inline.h\"\n #include \"diagnostic.h\"\n+#include \"tree-pretty-print.h\"\n+#include \"gimple-pretty-print.h\"\n #include \"coverage.h\"\n #include \"tree.h\"\n #include \"gcov-io.h\""}, {"sha": "b5853937316bb569b300b14cabeb7c3db17854ef", "filename": "gcc/var-tracking.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf8358387d0a53c1a84e049c9998e89db814beab/gcc%2Fvar-tracking.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf8358387d0a53c1a84e049c9998e89db814beab/gcc%2Fvar-tracking.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvar-tracking.c?ref=cf8358387d0a53c1a84e049c9998e89db814beab", "patch": "@@ -112,6 +112,7 @@\n #include \"toplev.h\"\n #include \"params.h\"\n #include \"diagnostic.h\"\n+#include \"tree-pretty-print.h\"\n #include \"pointer-set.h\"\n #include \"recog.h\"\n "}]}