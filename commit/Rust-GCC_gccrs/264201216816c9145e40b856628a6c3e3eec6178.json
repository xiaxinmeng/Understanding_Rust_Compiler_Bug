{"sha": "264201216816c9145e40b856628a6c3e3eec6178", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjY0MjAxMjE2ODE2YzkxNDVlNDBiODU2NjI4YTZjM2UzZWVjNjE3OA==", "commit": {"author": {"name": "Steven G. Kargl", "email": "kargl@gcc.gnu.org", "date": "2019-01-13T04:02:46Z"}, "committer": {"name": "Steven G. Kargl", "email": "kargl@gcc.gnu.org", "date": "2019-01-13T04:02:46Z"}, "message": "re PR fortran/61765 ([F03] Rejects valid BIND(C) ENTRY)\n\n2019-01-12  Steven G. Kargl  <kargl@gcc.gnu.org>\n\n\tPR fortran/61765\n\t* resolve.c (gfc_verify_binding_labels): Break if-elseif-elseif\n\tstructure into independent if's with a return to simplify logic.\n\tAvoid a check for ENTRY name with bind(c).\n\n2019-01-12  Steven G. Kargl  <kargl@gcc.gnu.org>\n\n\tPR fortran/61765\n\t* gfortran.dg/pr61765.f90: New test.\n\nFrom-SVN: r267902", "tree": {"sha": "bfc587e82ff21643f71f383cbccb6b5e61562198", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bfc587e82ff21643f71f383cbccb6b5e61562198"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/264201216816c9145e40b856628a6c3e3eec6178", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/264201216816c9145e40b856628a6c3e3eec6178", "html_url": "https://github.com/Rust-GCC/gccrs/commit/264201216816c9145e40b856628a6c3e3eec6178", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/264201216816c9145e40b856628a6c3e3eec6178/comments", "author": null, "committer": null, "parents": [{"sha": "d6072c195dcf1911b4659a4266f7d0f2f5fc97d9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d6072c195dcf1911b4659a4266f7d0f2f5fc97d9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d6072c195dcf1911b4659a4266f7d0f2f5fc97d9"}], "stats": {"total": 52, "additions": 41, "deletions": 11}, "files": [{"sha": "50db133fa39e4666c8ff33a7c1c59a43302cd81c", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/264201216816c9145e40b856628a6c3e3eec6178/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/264201216816c9145e40b856628a6c3e3eec6178/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=264201216816c9145e40b856628a6c3e3eec6178", "patch": "@@ -1,3 +1,10 @@\n+2019-01-12  Steven G. Kargl  <kargl@gcc.gnu.org>\n+\n+\tPR fortran/61765\n+\t* resolve.c (gfc_verify_binding_labels): Break if-elseif-elseif\n+\tstructure into independent if's with a return to simplify logic.\n+\tAvoid a check for ENTRY name with bind(c).\n+\n 2019-01-12  Paul Thomas  <pault@gcc.gnu.org>\n \n \t* gfortran.texi : Add description in sections on TS 29113 and"}, {"sha": "155e7c921cf2135ba5134448340764cd007b7f2e", "filename": "gcc/fortran/resolve.c", "status": "modified", "additions": 14, "deletions": 11, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/264201216816c9145e40b856628a6c3e3eec6178/gcc%2Ffortran%2Fresolve.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/264201216816c9145e40b856628a6c3e3eec6178/gcc%2Ffortran%2Fresolve.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fresolve.c?ref=264201216816c9145e40b856628a6c3e3eec6178", "patch": "@@ -11789,11 +11789,12 @@ gfc_verify_binding_labels (gfc_symbol *sym)\n \t\t sym->binding_label, &sym->declared_at, &gsym->where);\n       /* Clear the binding label to prevent checking multiple times.  */\n       sym->binding_label = NULL;\n-\n+      return;\n     }\n-  else if (sym->attr.flavor == FL_VARIABLE && module\n-\t   && (strcmp (module, gsym->mod_name) != 0\n-\t       || strcmp (sym->name, gsym->sym_name) != 0))\n+\n+  if (sym->attr.flavor == FL_VARIABLE && module\n+      && (strcmp (module, gsym->mod_name) != 0\n+\t  || strcmp (sym->name, gsym->sym_name) != 0))\n     {\n       /* This can only happen if the variable is defined in a module - if it\n \t isn't the same module, reject it.  */\n@@ -11802,14 +11803,16 @@ gfc_verify_binding_labels (gfc_symbol *sym)\n \t\t sym->name, module, sym->binding_label,\n \t\t &sym->declared_at, &gsym->where, gsym->mod_name);\n       sym->binding_label = NULL;\n+      return;\n     }\n-  else if ((sym->attr.function || sym->attr.subroutine)\n-\t   && ((gsym->type != GSYM_SUBROUTINE && gsym->type != GSYM_FUNCTION)\n-\t       || (gsym->defined && sym->attr.if_source != IFSRC_IFBODY))\n-\t   && sym != gsym->ns->proc_name\n-\t   && (module != gsym->mod_name\n-\t       || strcmp (gsym->sym_name, sym->name) != 0\n-\t       || (module && strcmp (module, gsym->mod_name) != 0)))\n+\n+  if ((sym->attr.function || sym->attr.subroutine)\n+      && ((gsym->type != GSYM_SUBROUTINE && gsym->type != GSYM_FUNCTION)\n+\t   || (gsym->defined && sym->attr.if_source != IFSRC_IFBODY))\n+      && (sym != gsym->ns->proc_name && sym->attr.entry == 0)\n+      && (module != gsym->mod_name\n+\t  || strcmp (gsym->sym_name, sym->name) != 0\n+\t  || (module && strcmp (module, gsym->mod_name) != 0)))\n     {\n       /* Print an error if the procedure is defined multiple times; we have to\n \t exclude references to the same procedure via module association or"}, {"sha": "0398fb8287401dea358b7fb867d12a0f839eb029", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/264201216816c9145e40b856628a6c3e3eec6178/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/264201216816c9145e40b856628a6c3e3eec6178/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=264201216816c9145e40b856628a6c3e3eec6178", "patch": "@@ -1,3 +1,8 @@\n+2019-01-12  Steven G. Kargl  <kargl@gcc.gnu.org>\n+\n+\tPR fortran/61765\n+\t* gfortran.dg/pr61765.f90: New test.\n+\n 2019-01-12  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \t* g++.dg/cpp0x/pr62101.C: Test locations too."}, {"sha": "080d1ac389bbf8e720441d49902ad715d6cecff4", "filename": "gcc/testsuite/gfortran.dg/pr61765.f90", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/264201216816c9145e40b856628a6c3e3eec6178/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr61765.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/264201216816c9145e40b856628a6c3e3eec6178/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr61765.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr61765.f90?ref=264201216816c9145e40b856628a6c3e3eec6178", "patch": "@@ -0,0 +1,15 @@\n+! { dg-do compile }\n+   subroutine sub1(x)\n+     integer, intent(in) :: x\n+     entry sub1_c(x) bind(c)\n+   end subroutine sub1\n+\n+   subroutine sub2_c(x) bind(c)\n+     integer, intent(in) :: x\n+     entry sub2(x)\n+   end subroutine sub2_c\n+\n+   subroutine sub3_c(x) bind(c)\n+     integer, intent(in) :: x\n+     entry sub3_c_c(x) bind(c)\n+   end subroutine sub3_c"}]}