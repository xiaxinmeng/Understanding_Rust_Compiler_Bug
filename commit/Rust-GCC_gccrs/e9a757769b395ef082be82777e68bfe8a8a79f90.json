{"sha": "e9a757769b395ef082be82777e68bfe8a8a79f90", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTlhNzU3NzY5YjM5NWVmMDgyYmU4Mjc3N2U2OGJmZThhOGE3OWY5MA==", "commit": {"author": {"name": "Joseph Myers", "email": "jsm@polyomino.org.uk", "date": "2004-05-15T00:44:02Z"}, "committer": {"name": "Joseph Myers", "email": "jsm28@gcc.gnu.org", "date": "2004-05-15T00:44:02Z"}, "message": "re PR c/15444 (Bad warning message in printf format checking)\n\n\tPR c/15444\n\t* c-format.c (avoid_dollar_number): New function.\n\t(check_format_info_main): Call avoid_dollar_number when operand\n\tnumbers might occur but has_operand_number == 0.\n\ntestsuite:\n\t* gcc.dg/format/xopen-1.c: Adjust expected message.\n\t* gcc.dg/format/xopen-3.c: New test.\n\nFrom-SVN: r81871", "tree": {"sha": "5a17c82d4a869e1134d2e5c2dbe9cf8ab06adb7d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5a17c82d4a869e1134d2e5c2dbe9cf8ab06adb7d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e9a757769b395ef082be82777e68bfe8a8a79f90", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e9a757769b395ef082be82777e68bfe8a8a79f90", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e9a757769b395ef082be82777e68bfe8a8a79f90", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e9a757769b395ef082be82777e68bfe8a8a79f90/comments", "author": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5c3be6fdb01517c31d6a64e675bc9b52d3d7633b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5c3be6fdb01517c31d6a64e675bc9b52d3d7633b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5c3be6fdb01517c31d6a64e675bc9b52d3d7633b"}], "stats": {"total": 66, "additions": 65, "deletions": 1}, "files": [{"sha": "2e9f6b90f9c6b18bfe723fba1c1b7310f5ca6935", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9a757769b395ef082be82777e68bfe8a8a79f90/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9a757769b395ef082be82777e68bfe8a8a79f90/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e9a757769b395ef082be82777e68bfe8a8a79f90", "patch": "@@ -1,3 +1,10 @@\n+2004-05-15  Joseph S. Myers  <jsm@polyomino.org.uk>\n+\n+\tPR c/15444\n+\t* c-format.c (avoid_dollar_number): New function.\n+\t(check_format_info_main): Call avoid_dollar_number when operand\n+\tnumbers might occur but has_operand_number == 0.\n+\n 2004-05-14  Richard Earnshaw  <rearnsha@arm.com>\n \n \t* arm.md (all peephole2 patterns): Use predicates that validate"}, {"sha": "c4a6ecedb9bce5cf671e34757a66dfc389d70ef3", "filename": "gcc/c-format.c", "status": "modified", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9a757769b395ef082be82777e68bfe8a8a79f90/gcc%2Fc-format.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9a757769b395ef082be82777e68bfe8a8a79f90/gcc%2Fc-format.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-format.c?ref=e9a757769b395ef082be82777e68bfe8a8a79f90", "patch": "@@ -1023,6 +1023,7 @@ static void status_warning (int *, const char *, ...)\n static void init_dollar_format_checking (int, tree);\n static int maybe_read_dollar_number (int *, const char **, int,\n \t\t\t\t     tree, tree *, const format_kind_info *);\n+static bool avoid_dollar_number (int *, const char *);\n static void finish_dollar_format_checking (int *, format_check_results *, int);\n \n static const format_flag_spec *get_flag_spec (const format_flag_spec *,\n@@ -1304,6 +1305,26 @@ maybe_read_dollar_number (int *status, const char **format,\n   return argnum;\n }\n \n+/* Ensure that FORMAT does not start with a decimal number followed by\n+   a $; give a diagnostic and return true if it does, false otherwise.  */\n+\n+static bool\n+avoid_dollar_number (int *status, const char *format)\n+{\n+  if (!ISDIGIT (*format))\n+    return false;\n+  while (ISDIGIT (*format))\n+    format++;\n+  if (*format == '$')\n+    {\n+      status_warning (status,\n+\t\t      \"$ operand number used after format\"\n+\t\t      \" without operand number\");\n+      return true;\n+    }\n+  return false;\n+}\n+\n \n /* Finish the checking for a format string that used $ operand number formats\n    instead of non-$ formats.  We check for unused operands before used ones\n@@ -1721,6 +1742,11 @@ check_format_info_main (int *status, format_check_results *res,\n \t      main_arg_num = opnum + info->first_arg_num - 1;\n \t    }\n \t}\n+      else if (fki->flags & FMT_FLAG_USE_DOLLAR)\n+\t{\n+\t  if (avoid_dollar_number (status, format_chars))\n+\t    return;\n+\t}\n \n       /* Read any format flags, but do not yet validate them beyond removing\n \t duplicates, since in general validation depends on the rest of\n@@ -1780,6 +1806,11 @@ check_format_info_main (int *status, format_check_results *res,\n \t\t  else\n \t\t    has_operand_number = 0;\n \t\t}\n+\t      else\n+\t\t{\n+\t\t  if (avoid_dollar_number (status, format_chars))\n+\t\t    return;\n+\t\t}\n \t      if (info->first_arg_num != 0)\n \t\t{\n \t\t  if (params == 0)\n@@ -1879,6 +1910,11 @@ check_format_info_main (int *status, format_check_results *res,\n \t\t  else\n \t\t    has_operand_number = 0;\n \t\t}\n+\t      else\n+\t\t{\n+\t\t  if (avoid_dollar_number (status, format_chars))\n+\t\t    return;\n+\t\t}\n \t      if (info->first_arg_num != 0)\n \t\t{\n \t\t  if (params == 0)"}, {"sha": "d192d2ff1e1651fec70ca168a5d7541b3d4f1505", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9a757769b395ef082be82777e68bfe8a8a79f90/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9a757769b395ef082be82777e68bfe8a8a79f90/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=e9a757769b395ef082be82777e68bfe8a8a79f90", "patch": "@@ -1,3 +1,9 @@\n+2004-05-15  Joseph S. Myers  <jsm@polyomino.org.uk>\n+\n+\tPR c/15444\n+\t* gcc.dg/format/xopen-1.c: Adjust expected message.\n+\t* gcc.dg/format/xopen-3.c: New test.\n+\n 2004-05-14  Victor Leikehman  <lei@haifasphere.co.il>\n \n \t* gfortran.fortran-torture/execute/def_init_3.f90: New test."}, {"sha": "1462a2c8694b9189d8ba21fd15aab109f2bb53d1", "filename": "gcc/testsuite/gcc.dg/format/xopen-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9a757769b395ef082be82777e68bfe8a8a79f90/gcc%2Ftestsuite%2Fgcc.dg%2Fformat%2Fxopen-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9a757769b395ef082be82777e68bfe8a8a79f90/gcc%2Ftestsuite%2Fgcc.dg%2Fformat%2Fxopen-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fformat%2Fxopen-1.c?ref=e9a757769b395ef082be82777e68bfe8a8a79f90", "patch": "@@ -95,7 +95,7 @@ foo (int i, unsigned int u, wint_t lc, wchar_t *ls, int *ip, double d,\n   scanf (\"%4$ld%7$ld%5$d%6$d%3$d%1$d%2$d\", ip, ip, ip, lp, ip, ip, lp);\n   printf (\"%1$d%d\", i, i); /* { dg-warning \"missing\" \"mixing $ and non-$ formats\" } */\n   printf (\"%%%1$d%%%2$d\", i, i);\n-  printf (\"%d%2$d\", i); /* { dg-warning \"type character\" \"mixing $ and non-$ formats\" } */\n+  printf (\"%d%2$d\", i); /* { dg-warning \"used after format\" \"mixing $ and non-$ formats\" } */\n   printf (\"%1$*d\", i, i); /* { dg-warning \"missing\" \"mixing $ and non-$ formats\" } */\n   printf (\"%*1$d\", i); /* { dg-warning \"missing\" \"mixing $ and non-$ formats\" } */\n   scanf (\"%1$d%d\", ip, ip); /* { dg-warning \"missing\" \"mixing $ and non-$ formats\" } */"}, {"sha": "5f78d77c5a116769a996263245c50341843ff33a", "filename": "gcc/testsuite/gcc.dg/format/xopen-3.c", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9a757769b395ef082be82777e68bfe8a8a79f90/gcc%2Ftestsuite%2Fgcc.dg%2Fformat%2Fxopen-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9a757769b395ef082be82777e68bfe8a8a79f90/gcc%2Ftestsuite%2Fgcc.dg%2Fformat%2Fxopen-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fformat%2Fxopen-3.c?ref=e9a757769b395ef082be82777e68bfe8a8a79f90", "patch": "@@ -0,0 +1,15 @@\n+/* Test for warnings for $ operand numbers after ordinary formats.\n+   Bug c/15444 from james-gcc-bugzilla-501qll3d at and dot org.  */\n+/* Origin: Joseph Myers <jsm@polyomino.org.uk> */\n+/* { dg-do compile } */\n+/* { dg-options \"-std=gnu99 -Wformat\" } */\n+\n+#include \"format.h\"\n+\n+void\n+foo (int i)\n+{\n+  printf (\"%d%2$d\", i); /* { dg-warning \"used after format\" \"mixing $ and non-$ formats\" } */\n+  printf (\"%d%*1$d\", i, i); /* { dg-warning \"used after format\" \"mixing $ and non-$ formats\" } */\n+  printf (\"%d%.*1$d\", i, i); /* { dg-warning \"used after format\" \"mixing $ and non-$ formats\" } */\n+}"}]}