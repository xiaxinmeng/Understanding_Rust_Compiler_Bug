{"sha": "12431170a7501c25893590d93c876951081da6f9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTI0MzExNzBhNzUwMWMyNTg5MzU5MGQ5M2M4NzY5NTEwODFkYTZmOQ==", "commit": {"author": {"name": "Dale Johannesen", "email": "dalej@apple.com", "date": "2005-11-15T00:47:17Z"}, "committer": {"name": "Dale Johannesen", "email": "dalej@gcc.gnu.org", "date": "2005-11-15T00:47:17Z"}, "message": "20051113-1.c: New.\n\n2005-11-14  Dale Johannesen  <dalej@apple.com>\n\n        * gcc.c-torture/execute/20051113-1.c:  New.\n\nFrom-SVN: r106920", "tree": {"sha": "35d806a3c39ec5e08c7ab2bc6c7eda0be3316ab4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/35d806a3c39ec5e08c7ab2bc6c7eda0be3316ab4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/12431170a7501c25893590d93c876951081da6f9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/12431170a7501c25893590d93c876951081da6f9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/12431170a7501c25893590d93c876951081da6f9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/12431170a7501c25893590d93c876951081da6f9/comments", "author": null, "committer": null, "parents": [{"sha": "69498c64a33688edbb9b8dcadb6c5025cebf61f5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/69498c64a33688edbb9b8dcadb6c5025cebf61f5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/69498c64a33688edbb9b8dcadb6c5025cebf61f5"}], "stats": {"total": 75, "additions": 75, "deletions": 0}, "files": [{"sha": "dca9979d410491b21946455f6ca318616911c6a1", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/12431170a7501c25893590d93c876951081da6f9/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/12431170a7501c25893590d93c876951081da6f9/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=12431170a7501c25893590d93c876951081da6f9", "patch": "@@ -1,3 +1,7 @@\n+2005-11-14  Dale Johannesen  <dalej@apple.com>\n+\n+\t* gcc.c-torture/execute/20051113-1.c:  New.\n+\n 2005-11-14  Mark Mitchell  <mark@codesourcery.com>\n \n \tPR c++/24687"}, {"sha": "6dbd1f0c63f24f2e9fd5754404f90461d67b1df7", "filename": "gcc/testsuite/gcc.c-torture/execute/20051113-1.c", "status": "added", "additions": 71, "deletions": 0, "changes": 71, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/12431170a7501c25893590d93c876951081da6f9/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20051113-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/12431170a7501c25893590d93c876951081da6f9/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20051113-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20051113-1.c?ref=12431170a7501c25893590d93c876951081da6f9", "patch": "@@ -0,0 +1,71 @@\n+extern void *malloc(__SIZE_TYPE__);\n+extern void *memset(void *, int, __SIZE_TYPE__);\n+typedef struct\n+{\n+  short a;  \n+  unsigned short b;\n+  unsigned short c;\n+  unsigned long long Count;\n+  long long Count2;\n+} __attribute__((packed)) Struct1;\n+\n+typedef struct\n+{\n+  short a;\n+  unsigned short b;\n+  unsigned short c;\n+  unsigned long long d;\n+  long long e;\n+  long long f;\n+} __attribute__((packed)) Struct2;\n+\n+typedef union\n+{\n+  Struct1 a;\n+  Struct2 b;\n+} Union;\n+\n+typedef struct\n+{\n+  int Count;\n+  Union List[0];\n+} __attribute__((packed)) Struct3;\n+\n+unsigned long long Sum (Struct3 *instrs) __attribute__((noinline));\n+unsigned long long Sum (Struct3 *instrs)\n+{\n+    unsigned long long  count = 0;\n+    int     i;\n+    \n+    for (i = 0; i < instrs->Count; i++) {\n+        count += instrs->List[i].a.Count;\n+    }\n+    return count;\n+}\n+long long Sum2 (Struct3 *instrs) __attribute__((noinline));\n+long long Sum2 (Struct3 *instrs)\n+{\n+    long long  count = 0;\n+    int     i;\n+    \n+    for (i = 0; i < instrs->Count; i++) {\n+        count += instrs->List[i].a.Count2;\n+    }\n+    return count;\n+}\n+main() {\n+  Struct3 *p = malloc (sizeof (int) + 3 * sizeof(Struct1));\n+  memset(p, 0, sizeof(int) + 3*sizeof(Struct1));\n+  p->Count = 3;\n+  p->List[0].a.Count = 555;\n+  p->List[1].a.Count = 999;\n+  p->List[2].a.Count = 0x101010101ULL;\n+  p->List[0].a.Count2 = 555;\n+  p->List[1].a.Count2 = 999;\n+  p->List[2].a.Count2 = 0x101010101LL;\n+  if (Sum(p) != 555 + 999 + 0x101010101ULL)\n+    abort();\n+  if (Sum2(p) != 555 + 999 + 0x101010101LL)\n+    abort();\n+  return 0;\n+}"}]}