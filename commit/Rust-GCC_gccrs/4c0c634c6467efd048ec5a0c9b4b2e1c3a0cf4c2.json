{"sha": "4c0c634c6467efd048ec5a0c9b4b2e1c3a0cf4c2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGMwYzYzNGM2NDY3ZWZkMDQ4ZWM1YTBjOWI0YjJlMWMzYTBjZjRjMg==", "commit": {"author": {"name": "Michael Meissner", "email": "meissner@gcc.gnu.org", "date": "1995-12-27T22:22:24Z"}, "committer": {"name": "Michael Meissner", "email": "meissner@gcc.gnu.org", "date": "1995-12-27T22:22:24Z"}, "message": "Yank out part of last change\n\nFrom-SVN: r10887", "tree": {"sha": "a9c005bcc60813574c5826fdf7830ca9fa2d2cbf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a9c005bcc60813574c5826fdf7830ca9fa2d2cbf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4c0c634c6467efd048ec5a0c9b4b2e1c3a0cf4c2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4c0c634c6467efd048ec5a0c9b4b2e1c3a0cf4c2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4c0c634c6467efd048ec5a0c9b4b2e1c3a0cf4c2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4c0c634c6467efd048ec5a0c9b4b2e1c3a0cf4c2/comments", "author": null, "committer": null, "parents": [{"sha": "ca12b8a431279efbf97dfaec5f0615b380065104", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ca12b8a431279efbf97dfaec5f0615b380065104", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ca12b8a431279efbf97dfaec5f0615b380065104"}], "stats": {"total": 39, "additions": 16, "deletions": 23}, "files": [{"sha": "b4b6ea49d4c07ab769b470bad30d8c3573e70596", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 7, "deletions": 15, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c0c634c6467efd048ec5a0c9b4b2e1c3a0cf4c2/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c0c634c6467efd048ec5a0c9b4b2e1c3a0cf4c2/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=4c0c634c6467efd048ec5a0c9b4b2e1c3a0cf4c2", "patch": "@@ -467,8 +467,10 @@ gpc_reg3_operand (op, mode)\n      register rtx op;\n      enum machine_mode mode;\n {\n-  return (register_operand (op, mode)\n-\t  && (GET_CODE (op) != REG || REGNO (op) == 3 || REGNO (op) >= FIRST_PSEUDO_REGISTER));\n+  if (GET_CODE (op) != REG || mode != GET_MODE (op))\n+    return 0;\t\t\t/* do not allow SUBREG's */\n+\n+  return (REGNO (op) == 3 || REGNO (op) >= FIRST_PSEUDO_REGISTER);\n }\n \n /* Returns 1 if OP is register 4 or is a pseudo register.  */\n@@ -478,20 +480,10 @@ gpc_reg4_operand (op, mode)\n      register rtx op;\n      enum machine_mode mode;\n {\n-  return (register_operand (op, mode)\n-\t  && (GET_CODE (op) != REG || REGNO (op) == 4 || REGNO (op) >= FIRST_PSEUDO_REGISTER));\n-}\n-\n-/* Returns 1 if OP is register 3 or 4 or is a pseudo register.  */\n+  if (GET_CODE (op) != REG || mode != GET_MODE (op))\n+    return 0;\t\t\t/* do not allow SUBREG's */\n \n-int\n-gpc_reg34_operand (op, mode)\n-     register rtx op;\n-     enum machine_mode mode;\n-{\n-  return (register_operand (op, mode)\n-\t  && (GET_CODE (op) != REG || REGNO (op) == 3 || REGNO (op) == 4\n-\t      || REGNO (op) >= FIRST_PSEUDO_REGISTER));\n+  return (REGNO (op) == 4 || REGNO (op) >= FIRST_PSEUDO_REGISTER);\n }\n \n /* Returns 1 if OP is either a pseudo-register or CR1.  */"}, {"sha": "2620d4dfc07ffad45cd0811a0bed80347c5a5ccc", "filename": "gcc/config/rs6000/rs6000.h", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c0c634c6467efd048ec5a0c9b4b2e1c3a0cf4c2/gcc%2Fconfig%2Frs6000%2Frs6000.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c0c634c6467efd048ec5a0c9b4b2e1c3a0cf4c2/gcc%2Fconfig%2Frs6000%2Frs6000.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.h?ref=4c0c634c6467efd048ec5a0c9b4b2e1c3a0cf4c2", "patch": "@@ -2600,7 +2600,6 @@ do {\t\t\t\t\t\t\t\t\t\\\n   {\"gpc_reg0_operand\", {SUBREG, REG}},\t\t\t\t\\\n   {\"gpc_reg3_operand\", {SUBREG, REG}},\t\t\t\t\\\n   {\"gpc_reg4_operand\", {SUBREG, REG}},\t\t\t\t\\\n-  {\"gpc_reg34_operand\", {SUBREG, REG}},\t\t\t\t\\\n   {\"cc_reg0_operand\", {SUBREG, REG}},\t\t\t\t\\\n   {\"cc_reg1_operand\", {SUBREG, REG}},\t\t\t\t\\\n   {\"cc_reg_operand\", {SUBREG, REG}},\t\t\t\t\\\n@@ -2656,7 +2655,6 @@ extern int non_short_cint_operand ();\n extern int gpc_reg0_operand ();\n extern int gpc_reg3_operand ();\n extern int gpc_reg4_operand ();\n-extern int gpc_reg34_operand ();\n extern int gpc_reg_operand ();\n extern int cc_reg0_operand ();\n extern int cc_reg1_operand ();"}, {"sha": "a0b0e431db2c63c1d6d7f34f2520872a1ae4eaf9", "filename": "gcc/config/rs6000/rs6000.md", "status": "modified", "additions": 9, "deletions": 6, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c0c634c6467efd048ec5a0c9b4b2e1c3a0cf4c2/gcc%2Fconfig%2Frs6000%2Frs6000.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c0c634c6467efd048ec5a0c9b4b2e1c3a0cf4c2/gcc%2Fconfig%2Frs6000%2Frs6000.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.md?ref=4c0c634c6467efd048ec5a0c9b4b2e1c3a0cf4c2", "patch": "@@ -3672,7 +3672,10 @@\n {\n   if (! TARGET_POWER && ! TARGET_POWERPC)\n     {\n-      emit_insn (gen_mulsidi3_common (operands[0], operands[1], operands[2]));\n+      emit_move_insn (gen_rtx (REG, SImode, 3), operands[1]);\n+      emit_move_insn (gen_rtx (REG, SImode, 4), operands[2]);\n+      emit_insn (gen_mulsidi3_common ());\n+      emit_move_insn (operands[0], gen_rtx (REG, DImode, 3));\n       DONE;\n     }\n   else if (TARGET_POWER)\n@@ -3683,11 +3686,11 @@\n }\")\n \n (define_insn \"mulsidi3_common\"\n-  [(set (match_operand:DI 0 \"gpc_reg3_operand\" \"=w\")\n-\t(mult:DI (sign_extend:DI (match_operand:SI 1 \"gpc_reg3_operand\" \"%u\"))\n-\t\t (sign_extend:DI (match_operand:SI 2 \"gpc_reg4_operand\" \"v\"))))\n-   (clobber (match_scratch:SI 3 \"=l\"))\n-   (clobber (match_scratch:SI 4 \"=z\"))]\n+  [(set (reg:DI 3)\n+\t(mult:DI (sign_extend:DI (reg:SI 3))\n+\t\t (sign_extend:DI (reg:SI 4))))\n+   (clobber (match_scratch:SI 0 \"=l\"))\n+   (clobber (match_scratch:SI 1 \"=z\"))]\n   \"! TARGET_POWER && ! TARGET_POWERPC\"\n   \"bla __mull\"\n   [(set_attr \"type\" \"jmpreg\")])"}]}