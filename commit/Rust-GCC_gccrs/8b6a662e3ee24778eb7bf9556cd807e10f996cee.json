{"sha": "8b6a662e3ee24778eb7bf9556cd807e10f996cee", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGI2YTY2MmUzZWUyNDc3OGViN2JmOTU1NmNkODA3ZTEwZjk5NmNlZQ==", "commit": {"author": {"name": "Jeffrey D. Oldham", "email": "oldham@codesourcery.com", "date": "2003-02-24T20:39:38Z"}, "committer": {"name": "Jeffrey D. Oldham", "email": "oldham@gcc.gnu.org", "date": "2003-02-24T20:39:38Z"}, "message": "re PR c++/9778 (ICE with sizeof(expr) in non-type template arg)\n\n2003-02-24  Jeffrey D. Oldham  <oldham@codesourcery.com>\n\n\tPR c++/9778\n\t* cp/pt.c (tsubst_copy_and_build): For a templated function inside a\n\tscope, process template arguments.\n\t* testsuite/g++.dg/parse/template6.C: New test case.\n\nFrom-SVN: r63379", "tree": {"sha": "59c913d5c09859ce7abc14016d219f38cd7ec3a7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/59c913d5c09859ce7abc14016d219f38cd7ec3a7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8b6a662e3ee24778eb7bf9556cd807e10f996cee", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8b6a662e3ee24778eb7bf9556cd807e10f996cee", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8b6a662e3ee24778eb7bf9556cd807e10f996cee", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8b6a662e3ee24778eb7bf9556cd807e10f996cee/comments", "author": null, "committer": null, "parents": [{"sha": "57df94c8f6a7bf0a9e0ccf8bf0d81a4d16514a12", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/57df94c8f6a7bf0a9e0ccf8bf0d81a4d16514a12", "html_url": "https://github.com/Rust-GCC/gccrs/commit/57df94c8f6a7bf0a9e0ccf8bf0d81a4d16514a12"}], "stats": {"total": 28, "additions": 27, "deletions": 1}, "files": [{"sha": "dff7c4f667dfbd182e58362c10cab7fb1ee66239", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8b6a662e3ee24778eb7bf9556cd807e10f996cee/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8b6a662e3ee24778eb7bf9556cd807e10f996cee/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=8b6a662e3ee24778eb7bf9556cd807e10f996cee", "patch": "@@ -1,3 +1,9 @@\n+2003-02-24  Jeffrey D. Oldham  <oldham@codesourcery.com>\n+\n+\tPR c++/9778\n+\t* pt.c (tsubst_copy_and_build): For a templated function inside a\n+\tscope, process template arguments.\n+\n 2003-02-24  Kriang Lerdsuwanakij  <lerdsuwa@users.sourceforge.net>\n \n \tPR c++/9602"}, {"sha": "053a9670779894c1bc7a2225890dc6710ca02bc0", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8b6a662e3ee24778eb7bf9556cd807e10f996cee/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8b6a662e3ee24778eb7bf9556cd807e10f996cee/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=8b6a662e3ee24778eb7bf9556cd807e10f996cee", "patch": "@@ -8137,7 +8137,7 @@ tsubst_copy_and_build (t, args, complain, in_decl)\n \t    if (TREE_CODE (name) == TEMPLATE_ID_EXPR)\n \t      name = build_nt (TEMPLATE_ID_EXPR,\n \t\t\t       TREE_OPERAND (name, 0),\n-\t\t\t       TREE_OPERAND (name, 1));\n+\t\t\t       build_expr_from_tree (TREE_OPERAND (name, 1)));\n \t    \n \t    function = resolve_scoped_fn_name (TREE_OPERAND (function, 0),\n \t\t\t\t\t       name);"}, {"sha": "a83c313d026e1290da35b3ce33f9af6b4231b291", "filename": "gcc/testsuite/g++.dg/parse/template6.C", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8b6a662e3ee24778eb7bf9556cd807e10f996cee/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ftemplate6.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8b6a662e3ee24778eb7bf9556cd807e10f996cee/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ftemplate6.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ftemplate6.C?ref=8b6a662e3ee24778eb7bf9556cd807e10f996cee", "patch": "@@ -0,0 +1,20 @@\n+// { dg-do compile }\n+\n+// Copyright (C) 2003 Free Software Foundation, Inc.\n+// Contributed by Wolfgang Bangerth <bangerth@ticam.utexas.edu> 20 Feb 2003.\n+\n+// PR c++/9778.  Ensure templated functions in other namespaces are\n+// correctly instantiated.\n+\n+namespace NS {\n+  template <int N> void foo ();\n+}\n+\n+template <int N> struct X {\n+  int m;\n+  void g () {\n+    NS::foo<sizeof(m)>();\n+  }\n+};\n+\n+template class X<2>;"}]}