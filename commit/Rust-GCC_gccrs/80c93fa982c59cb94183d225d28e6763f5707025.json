{"sha": "80c93fa982c59cb94183d225d28e6763f5707025", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODBjOTNmYTk4MmM1OWNiOTQxODNkMjI1ZDI4ZTY3NjNmNTcwNzAyNQ==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2018-01-12T13:19:23Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2018-01-12T13:19:23Z"}, "message": "re PR debug/83157 (gcc.dg/guality/pr41616-1.c fail, inline instances refer to concrete instance as abstract origin)\n\n2018-01-12  Richard Biener  <rguenther@suse.de>\n\n\tPR debug/83157\n\t* dwarf2out.c (gen_variable_die): Do not reset old_die for\n\tinline instance vars.\n\nFrom-SVN: r256580", "tree": {"sha": "d49fb6519b366878d11f41611b6e4d22fc3e5447", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d49fb6519b366878d11f41611b6e4d22fc3e5447"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/80c93fa982c59cb94183d225d28e6763f5707025", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/80c93fa982c59cb94183d225d28e6763f5707025", "html_url": "https://github.com/Rust-GCC/gccrs/commit/80c93fa982c59cb94183d225d28e6763f5707025", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/80c93fa982c59cb94183d225d28e6763f5707025/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ec952125a593923386d180a02bf52c08abc1fbe7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ec952125a593923386d180a02bf52c08abc1fbe7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ec952125a593923386d180a02bf52c08abc1fbe7"}], "stats": {"total": 10, "additions": 7, "deletions": 3}, "files": [{"sha": "5acf14e01a7f3234767430ce2cefd31f6325858f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80c93fa982c59cb94183d225d28e6763f5707025/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80c93fa982c59cb94183d225d28e6763f5707025/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=80c93fa982c59cb94183d225d28e6763f5707025", "patch": "@@ -1,3 +1,9 @@\n+2018-01-12  Richard Biener  <rguenther@suse.de>\n+\n+\tPR debug/83157\n+\t* dwarf2out.c (gen_variable_die): Do not reset old_die for\n+\tinline instance vars.\n+\n 2018-01-12  Oleg Endo  <olegendo@gcc.gnu.org>\n \n \tPR target/81819"}, {"sha": "0cc05cb5b870514fb2f97134d18d49e64a6e53e3", "filename": "gcc/dwarf2out.c", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80c93fa982c59cb94183d225d28e6763f5707025/gcc%2Fdwarf2out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80c93fa982c59cb94183d225d28e6763f5707025/gcc%2Fdwarf2out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2out.c?ref=80c93fa982c59cb94183d225d28e6763f5707025", "patch": "@@ -22970,10 +22970,8 @@ gen_variable_die (tree decl, tree origin, dw_die_ref context_die)\n \t{\n \t  /* If we will be creating an inlined instance, we need a\n \t     new DIE that will get annotated with\n-\t     DW_AT_abstract_origin.  Clear things so we can get a\n-\t     new DIE.  */\n+\t     DW_AT_abstract_origin.  */\n \t  gcc_assert (!DECL_ABSTRACT_P (decl));\n-\t  old_die = NULL;\n \t}\n       else\n \t{"}]}