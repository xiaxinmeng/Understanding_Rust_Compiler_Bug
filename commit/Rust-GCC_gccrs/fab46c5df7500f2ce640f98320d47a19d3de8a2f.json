{"sha": "fab46c5df7500f2ce640f98320d47a19d3de8a2f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmFiNDZjNWRmNzUwMGYyY2U2NDBmOTgzMjBkNDdhMTlkM2RlOGEyZg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2020-06-16T14:30:05Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2020-06-16T14:30:05Z"}, "message": "openmp: Diagnose invalid OpenMP schedule(simd, static)\n\n2020-06-16  Jakub Jelinek  <jakub@redhat.com>\n\ngcc/c/\n\t* c-parser.c (c_parser_omp_clause_schedule): Reject modifier separated\n\tfrom kind by comma rather than colon.\ngcc/cp/\n\t* parser.c (cp_parser_omp_clause_schedule): Reject modifier separated\n\tfrom kind by comma rather than colon.\ngcc/testsuite/\n\t* c-c++-common/gomp/schedule-modifiers-2.c: New test.", "tree": {"sha": "5f66022c0b652a94ea9079291e48af6d6111fdcb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5f66022c0b652a94ea9079291e48af6d6111fdcb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fab46c5df7500f2ce640f98320d47a19d3de8a2f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fab46c5df7500f2ce640f98320d47a19d3de8a2f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fab46c5df7500f2ce640f98320d47a19d3de8a2f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fab46c5df7500f2ce640f98320d47a19d3de8a2f/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e70fbee1a3dd9fdeb661366dbf3096d76c4e2d6e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e70fbee1a3dd9fdeb661366dbf3096d76c4e2d6e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e70fbee1a3dd9fdeb661366dbf3096d76c4e2d6e"}], "stats": {"total": 32, "additions": 30, "deletions": 2}, "files": [{"sha": "fea6a09f7715226f83b30c192a0676510dc0c177", "filename": "gcc/c/c-parser.c", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fab46c5df7500f2ce640f98320d47a19d3de8a2f/gcc%2Fc%2Fc-parser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fab46c5df7500f2ce640f98320d47a19d3de8a2f/gcc%2Fc%2Fc-parser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2Fc-parser.c?ref=fab46c5df7500f2ce640f98320d47a19d3de8a2f", "patch": "@@ -14782,6 +14782,7 @@ c_parser_omp_clause_schedule (c_parser *parser, tree list)\n \n   c = build_omp_clause (loc, OMP_CLAUSE_SCHEDULE);\n \n+  location_t comma = UNKNOWN_LOCATION;\n   while (c_parser_next_token_is (parser, CPP_NAME))\n     {\n       tree kind = c_parser_peek_token (parser)->value;\n@@ -14794,16 +14795,22 @@ c_parser_omp_clause_schedule (c_parser *parser, tree list)\n \tmodifiers |= OMP_CLAUSE_SCHEDULE_NONMONOTONIC;\n       else\n \tbreak;\n+      comma = UNKNOWN_LOCATION;\n       c_parser_consume_token (parser);\n       if (nmodifiers++ == 0\n \t  && c_parser_next_token_is (parser, CPP_COMMA))\n-\tc_parser_consume_token (parser);\n+\t{\n+\t  comma = c_parser_peek_token (parser)->location;\n+\t  c_parser_consume_token (parser);\n+\t}\n       else\n \t{\n \t  c_parser_require (parser, CPP_COLON, \"expected %<:%>\");\n \t  break;\n \t}\n     }\n+  if (comma != UNKNOWN_LOCATION)\n+    error_at (comma, \"expected %<:%>\");\n \n   if ((modifiers & (OMP_CLAUSE_SCHEDULE_MONOTONIC\n \t\t    | OMP_CLAUSE_SCHEDULE_NONMONOTONIC))"}, {"sha": "69839baa7123e2a2a2295204bb65386f9fb35f51", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fab46c5df7500f2ce640f98320d47a19d3de8a2f/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fab46c5df7500f2ce640f98320d47a19d3de8a2f/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=fab46c5df7500f2ce640f98320d47a19d3de8a2f", "patch": "@@ -35864,6 +35864,7 @@ cp_parser_omp_clause_schedule (cp_parser *parser, tree list, location_t location\n \n   c = build_omp_clause (location, OMP_CLAUSE_SCHEDULE);\n \n+  location_t comma = UNKNOWN_LOCATION;\n   while (cp_lexer_next_token_is (parser->lexer, CPP_NAME))\n     {\n       tree id = cp_lexer_peek_token (parser->lexer)->u.value;\n@@ -35876,16 +35877,22 @@ cp_parser_omp_clause_schedule (cp_parser *parser, tree list, location_t location\n \tmodifiers |= OMP_CLAUSE_SCHEDULE_NONMONOTONIC;\n       else\n \tbreak;\n+      comma = UNKNOWN_LOCATION;\n       cp_lexer_consume_token (parser->lexer);\n       if (nmodifiers++ == 0\n \t  && cp_lexer_next_token_is (parser->lexer, CPP_COMMA))\n-\tcp_lexer_consume_token (parser->lexer);\n+\t{\n+\t  comma = cp_lexer_peek_token (parser->lexer)->location;\n+\t  cp_lexer_consume_token (parser->lexer);\n+\t}\n       else\n \t{\n \t  cp_parser_require (parser, CPP_COLON, RT_COLON);\n \t  break;\n \t}\n     }\n+  if (comma != UNKNOWN_LOCATION)\n+    error_at (comma, \"expected %<:%>\");\n \n   if (cp_lexer_next_token_is (parser->lexer, CPP_NAME))\n     {"}, {"sha": "79d7d4324503969085f4d6519625033b83d58cbc", "filename": "gcc/testsuite/c-c++-common/gomp/schedule-modifiers-2.c", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fab46c5df7500f2ce640f98320d47a19d3de8a2f/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgomp%2Fschedule-modifiers-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fab46c5df7500f2ce640f98320d47a19d3de8a2f/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgomp%2Fschedule-modifiers-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgomp%2Fschedule-modifiers-2.c?ref=fab46c5df7500f2ce640f98320d47a19d3de8a2f", "patch": "@@ -0,0 +1,14 @@\n+void\n+foo (void)\n+{\n+  int i = 0;\n+  #pragma omp for simd schedule(simd, static)\t/* { dg-error \"expected ':'\" } */\n+  for (i = 0; i < 16; i++)\n+    ;\n+  #pragma omp for simd schedule(monotonic, dynamic)\t/* { dg-error \"expected ':'\" } */\n+  for (i = 0; i < 16; i++)\n+    ;\n+  #pragma omp for simd schedule(nonmonotonic, guided, 1)\t/* { dg-error \"expected ':'\" } */\n+  for (i = 0; i < 16; i++)\n+    ;\n+}"}]}