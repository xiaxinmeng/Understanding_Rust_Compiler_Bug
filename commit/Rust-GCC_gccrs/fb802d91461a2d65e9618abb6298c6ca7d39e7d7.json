{"sha": "fb802d91461a2d65e9618abb6298c6ca7d39e7d7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmI4MDJkOTE0NjFhMmQ2NWU5NjE4YWJiNjI5OGM2Y2E3ZDM5ZTdkNw==", "commit": {"author": {"name": "Wilco Dijkstra", "email": "wdijkstr@arm.com", "date": "2019-08-13T10:46:44Z"}, "committer": {"name": "Wilco Dijkstra", "email": "wilco@gcc.gnu.org", "date": "2019-08-13T10:46:44Z"}, "message": "[AArch64] Fix PR81800\n\nPR81800 is about the lrint inline giving spurious FE_INEXACT exceptions.\nThe previous change for PR81800 didn't fix this: when lrint is disabled\nin the backend, the midend will simply use llrint.  This actually makes\nthings worse since llrint now also ignores FE_INVALID exceptions!\nThe fix is to disable lrint/llrint on double if the size of a long is\nsmaller (ie. ilp32).\n\n    gcc/\n\tPR target/81800\n\t* gcc/config/aarch64/aarch64.md (lrint): Disable lrint pattern if GPF\n\toperand is larger than a long int.\n\n    testsuite/\n\tPR target/81800\n\t* gcc.target/aarch64/no-inline-lrint_3.c: New test.\n\nFrom-SVN: r274376", "tree": {"sha": "bce0a294e66323ab75c094eaba864653b9fb6ffa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bce0a294e66323ab75c094eaba864653b9fb6ffa"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fb802d91461a2d65e9618abb6298c6ca7d39e7d7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fb802d91461a2d65e9618abb6298c6ca7d39e7d7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fb802d91461a2d65e9618abb6298c6ca7d39e7d7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fb802d91461a2d65e9618abb6298c6ca7d39e7d7/comments", "author": null, "committer": null, "parents": [{"sha": "4aeb1ba7f62c1d680c819ae3e137c3bad6f520ca", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4aeb1ba7f62c1d680c819ae3e137c3bad6f520ca", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4aeb1ba7f62c1d680c819ae3e137c3bad6f520ca"}], "stats": {"total": 30, "additions": 29, "deletions": 1}, "files": [{"sha": "75e5c2af689636102a010f03a2e80fc295191e35", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb802d91461a2d65e9618abb6298c6ca7d39e7d7/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb802d91461a2d65e9618abb6298c6ca7d39e7d7/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=fb802d91461a2d65e9618abb6298c6ca7d39e7d7", "patch": "@@ -1,3 +1,9 @@\n+2019-08-13  Wilco Dijkstra  <wdijkstr@arm.com>  \n+\n+\tPR target/81800\n+\t* gcc/config/aarch64/aarch64.md (lrint): Disable lrint pattern if GPF\n+\toperand is larger than a long int.\n+\n 2019-08-13  Richard Sandiford  <richard.sandiford@arm.com>\n \n \t* machmode.h (opt_mode::else_mode): New function."}, {"sha": "a85bdd13faee96b54266bcf5c949d2226505fda8", "filename": "gcc/config/aarch64/aarch64.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb802d91461a2d65e9618abb6298c6ca7d39e7d7/gcc%2Fconfig%2Faarch64%2Faarch64.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb802d91461a2d65e9618abb6298c6ca7d39e7d7/gcc%2Fconfig%2Faarch64%2Faarch64.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64.md?ref=fb802d91461a2d65e9618abb6298c6ca7d39e7d7", "patch": "@@ -6323,7 +6323,7 @@\n   [(match_operand:GPI 0 \"register_operand\")\n    (match_operand:GPF 1 \"register_operand\")]\n   \"TARGET_FLOAT\n-   && ((GET_MODE_SIZE (<GPF:MODE>mode) <= GET_MODE_SIZE (<GPI:MODE>mode))\n+   && ((GET_MODE_BITSIZE (<GPF:MODE>mode) <= LONG_TYPE_SIZE)\n    || !flag_trapping_math || flag_fp_int_builtin_inexact)\"\n {\n   rtx cvt = gen_reg_rtx (<GPF:MODE>mode);"}, {"sha": "baf1b25cf44abd0e121cc07483e8d434a7d75ebb", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb802d91461a2d65e9618abb6298c6ca7d39e7d7/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb802d91461a2d65e9618abb6298c6ca7d39e7d7/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=fb802d91461a2d65e9618abb6298c6ca7d39e7d7", "patch": "@@ -1,3 +1,8 @@\n+2019-08-13  Wilco Dijkstra  <wdijkstr@arm.com>  \n+\n+\tPR target/81800\n+\t* gcc.target/aarch64/no-inline-lrint_3.c: New test.\n+\n 2019-08-13  Richard Sandiford  <richard.sandiford@arm.com>\n \n \t* gcc.target/aarch64/sve/init_2.c: Expect ld1rd to be used"}, {"sha": "ca772cb999e7b6cfbd3f080111d3eb479d43f47b", "filename": "gcc/testsuite/gcc.target/aarch64/no-inline-lrint_3.c", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb802d91461a2d65e9618abb6298c6ca7d39e7d7/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fno-inline-lrint_3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb802d91461a2d65e9618abb6298c6ca7d39e7d7/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fno-inline-lrint_3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fno-inline-lrint_3.c?ref=fb802d91461a2d65e9618abb6298c6ca7d39e7d7", "patch": "@@ -0,0 +1,17 @@\n+/* { dg-do compile } */\n+/* { dg-require-effective-target ilp32 } */\n+/* { dg-options \"-O3 -fno-math-errno -fno-fp-int-builtin-inexact\" } */\n+\n+#define TEST(name, float_type, int_type, fn) void f_##name (float_type x) \\\n+{\t\t\t\t\t\t\t\t\t  \\\n+  volatile int_type   b = __builtin_##fn (x);\t\t\t\t  \\\n+}\n+\n+TEST (dld, double, long, lrint)\n+TEST (flf, float , long, lrintf)\n+\n+TEST (did, double, int, lrint)\n+TEST (fif, float , int, lrintf)\n+\n+/* { dg-final { scan-assembler-times \"fcvtzs\\tw\\[0-9\\]+, \\[d,s\\]\\[0-9\\]+\" 2 } } */\n+/* { dg-final { scan-assembler-times \"bl\\tlrint\" 2 } } */"}]}