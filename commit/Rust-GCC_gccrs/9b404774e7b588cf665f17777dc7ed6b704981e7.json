{"sha": "9b404774e7b588cf665f17777dc7ed6b704981e7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWI0MDQ3NzRlN2I1ODhjZjY2NWYxNzc3N2RjN2VkNmI3MDQ5ODFlNw==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-09-19T19:07:16Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-09-19T19:07:16Z"}, "message": "(rtx_free): New function.\n\nFrom-SVN: r5366", "tree": {"sha": "5c5f7e25e3df6c72435c47da49281f7d4ce24d12", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5c5f7e25e3df6c72435c47da49281f7d4ce24d12"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9b404774e7b588cf665f17777dc7ed6b704981e7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9b404774e7b588cf665f17777dc7ed6b704981e7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9b404774e7b588cf665f17777dc7ed6b704981e7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9b404774e7b588cf665f17777dc7ed6b704981e7/comments", "author": null, "committer": null, "parents": [{"sha": "7f98eeb6baabd96379c8be067a7bd32f9267e255", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7f98eeb6baabd96379c8be067a7bd32f9267e255", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7f98eeb6baabd96379c8be067a7bd32f9267e255"}], "stats": {"total": 9, "additions": 9, "deletions": 0}, "files": [{"sha": "66effae8cee967040fafbf273ba60d65f817f323", "filename": "gcc/rtl.c", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b404774e7b588cf665f17777dc7ed6b704981e7/gcc%2Frtl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b404774e7b588cf665f17777dc7ed6b704981e7/gcc%2Frtl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frtl.c?ref=9b404774e7b588cf665f17777dc7ed6b704981e7", "patch": "@@ -246,6 +246,15 @@ rtx_alloc (code)\n \n   return rt;\n }\n+\n+/* Free the rtx X and all RTL allocated since X.  */\n+\n+void\n+rtx_free (x)\n+     rtx x;\n+{\n+  obstack_free (rtl_obstack, x);\n+}\n \f\n /* Create a new copy of an rtx.\n    Recursively copies the operands of the rtx,"}]}