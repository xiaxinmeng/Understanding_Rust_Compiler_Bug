{"sha": "7d8405cf155eb83392842b54ebc955654b35a980", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2Q4NDA1Y2YxNTVlYjgzMzkyODQyYjU0ZWJjOTU1NjU0YjM1YTk4MA==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2003-09-17T23:45:59Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2003-09-17T23:45:59Z"}, "message": "* cfg.c (dump_flow_info): Skip register dump if reg_n_info null.\n\nFrom-SVN: r71485", "tree": {"sha": "4ed2b907bf6403c8f3b0fbfbc9177ada6021e643", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4ed2b907bf6403c8f3b0fbfbc9177ada6021e643"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7d8405cf155eb83392842b54ebc955654b35a980", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7d8405cf155eb83392842b54ebc955654b35a980", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7d8405cf155eb83392842b54ebc955654b35a980", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7d8405cf155eb83392842b54ebc955654b35a980/comments", "author": null, "committer": null, "parents": [{"sha": "dc5f3d7ca9abac8aef031d45d0c3f041ca3b8ed3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dc5f3d7ca9abac8aef031d45d0c3f041ca3b8ed3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dc5f3d7ca9abac8aef031d45d0c3f041ca3b8ed3"}], "stats": {"total": 87, "additions": 46, "deletions": 41}, "files": [{"sha": "548c73d303be75816c8d2886358023bcc0199dca", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d8405cf155eb83392842b54ebc955654b35a980/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d8405cf155eb83392842b54ebc955654b35a980/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7d8405cf155eb83392842b54ebc955654b35a980", "patch": "@@ -1,3 +1,7 @@\n+2003-09-17  Richard Henderson  <rth@redhat.com>\n+\n+\t* cfg.c (dump_flow_info): Skip register dump if reg_n_info null.\n+\n 2003-09-17  Rainer Orth  <ro@TechFak.Uni-Bielefeld.DE>\n \n \t* configure.in (gcc_cv_ld_hidden): Don't test gnu_ld_flag."}, {"sha": "ded0e3263fbf6774046fec51f53661269c85f40a", "filename": "gcc/cfg.c", "status": "modified", "additions": 42, "deletions": 41, "changes": 83, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d8405cf155eb83392842b54ebc955654b35a980/gcc%2Fcfg.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d8405cf155eb83392842b54ebc955654b35a980/gcc%2Fcfg.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfg.c?ref=7d8405cf155eb83392842b54ebc955654b35a980", "patch": "@@ -491,48 +491,49 @@ dump_flow_info (FILE *file)\n   static const char * const reg_class_names[] = REG_CLASS_NAMES;\n \n   fprintf (file, \"%d registers.\\n\", max_regno);\n-  for (i = FIRST_PSEUDO_REGISTER; i < max_regno; i++)\n-    if (REG_N_REFS (i))\n-      {\n-\tenum reg_class class, altclass;\n-\n-\tfprintf (file, \"\\nRegister %d used %d times across %d insns\",\n-\t\t i, REG_N_REFS (i), REG_LIVE_LENGTH (i));\n-\tif (REG_BASIC_BLOCK (i) >= 0)\n-\t  fprintf (file, \" in block %d\", REG_BASIC_BLOCK (i));\n-\tif (REG_N_SETS (i))\n-\t  fprintf (file, \"; set %d time%s\", REG_N_SETS (i),\n-\t\t   (REG_N_SETS (i) == 1) ? \"\" : \"s\");\n-\tif (regno_reg_rtx[i] != NULL && REG_USERVAR_P (regno_reg_rtx[i]))\n-\t  fprintf (file, \"; user var\");\n-\tif (REG_N_DEATHS (i) != 1)\n-\t  fprintf (file, \"; dies in %d places\", REG_N_DEATHS (i));\n-\tif (REG_N_CALLS_CROSSED (i) == 1)\n-\t  fprintf (file, \"; crosses 1 call\");\n-\telse if (REG_N_CALLS_CROSSED (i))\n-\t  fprintf (file, \"; crosses %d calls\", REG_N_CALLS_CROSSED (i));\n-\tif (regno_reg_rtx[i] != NULL\n-\t    && PSEUDO_REGNO_BYTES (i) != UNITS_PER_WORD)\n-\t  fprintf (file, \"; %d bytes\", PSEUDO_REGNO_BYTES (i));\n-\n-\tclass = reg_preferred_class (i);\n-\taltclass = reg_alternate_class (i);\n-\tif (class != GENERAL_REGS || altclass != ALL_REGS)\n-\t  {\n-\t    if (altclass == ALL_REGS || class == ALL_REGS)\n-\t      fprintf (file, \"; pref %s\", reg_class_names[(int) class]);\n-\t    else if (altclass == NO_REGS)\n-\t      fprintf (file, \"; %s or none\", reg_class_names[(int) class]);\n-\t    else\n-\t      fprintf (file, \"; pref %s, else %s\",\n-\t\t       reg_class_names[(int) class],\n-\t\t       reg_class_names[(int) altclass]);\n-\t  }\n+  if (reg_n_info)\n+    for (i = FIRST_PSEUDO_REGISTER; i < max_regno; i++)\n+      if (REG_N_REFS (i))\n+\t{\n+\t  enum reg_class class, altclass;\n+\n+\t  fprintf (file, \"\\nRegister %d used %d times across %d insns\",\n+\t\t   i, REG_N_REFS (i), REG_LIVE_LENGTH (i));\n+\t  if (REG_BASIC_BLOCK (i) >= 0)\n+\t    fprintf (file, \" in block %d\", REG_BASIC_BLOCK (i));\n+\t  if (REG_N_SETS (i))\n+\t    fprintf (file, \"; set %d time%s\", REG_N_SETS (i),\n+\t\t     (REG_N_SETS (i) == 1) ? \"\" : \"s\");\n+\t  if (regno_reg_rtx[i] != NULL && REG_USERVAR_P (regno_reg_rtx[i]))\n+\t    fprintf (file, \"; user var\");\n+\t  if (REG_N_DEATHS (i) != 1)\n+\t    fprintf (file, \"; dies in %d places\", REG_N_DEATHS (i));\n+\t  if (REG_N_CALLS_CROSSED (i) == 1)\n+\t    fprintf (file, \"; crosses 1 call\");\n+\t  else if (REG_N_CALLS_CROSSED (i))\n+\t    fprintf (file, \"; crosses %d calls\", REG_N_CALLS_CROSSED (i));\n+\t  if (regno_reg_rtx[i] != NULL\n+\t      && PSEUDO_REGNO_BYTES (i) != UNITS_PER_WORD)\n+\t    fprintf (file, \"; %d bytes\", PSEUDO_REGNO_BYTES (i));\n+\n+\t  class = reg_preferred_class (i);\n+\t  altclass = reg_alternate_class (i);\n+\t  if (class != GENERAL_REGS || altclass != ALL_REGS)\n+\t    {\n+\t      if (altclass == ALL_REGS || class == ALL_REGS)\n+\t\tfprintf (file, \"; pref %s\", reg_class_names[(int) class]);\n+\t      else if (altclass == NO_REGS)\n+\t\tfprintf (file, \"; %s or none\", reg_class_names[(int) class]);\n+\t      else\n+\t\tfprintf (file, \"; pref %s, else %s\",\n+\t\t\t reg_class_names[(int) class],\n+\t\t\t reg_class_names[(int) altclass]);\n+\t    }\n \n-\tif (regno_reg_rtx[i] != NULL && REG_POINTER (regno_reg_rtx[i]))\n-\t  fprintf (file, \"; pointer\");\n-\tfprintf (file, \".\\n\");\n-      }\n+\t  if (regno_reg_rtx[i] != NULL && REG_POINTER (regno_reg_rtx[i]))\n+\t    fprintf (file, \"; pointer\");\n+\t  fprintf (file, \".\\n\");\n+\t}\n \n   fprintf (file, \"\\n%d basic blocks, %d edges.\\n\", n_basic_blocks, n_edges);\n   FOR_EACH_BB (bb)"}]}