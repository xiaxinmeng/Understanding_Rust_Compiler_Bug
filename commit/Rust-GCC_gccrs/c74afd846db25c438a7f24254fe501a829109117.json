{"sha": "c74afd846db25c438a7f24254fe501a829109117", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Yzc0YWZkODQ2ZGIyNWM0MzhhN2YyNDI1NGZlNTAxYTgyOTEwOTExNw==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-07-18T10:15:56Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-07-18T10:15:56Z"}, "message": "[multiple changes]\n\n2014-07-18  Gary Dismukes  <dismukes@adacore.com>\n\n\t* sem_util.adb: Minor typo correction.\n\n2014-07-18  Ben Brosgol  <brosgol@adacore.com>\n\n\t* gnat_rm.texi: Complete previous change.\n\n2014-07-18  Pascal Obry  <obry@adacore.com>\n\n\t* s-fileio.adb: Minor style fix.\n\n2014-07-18  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_ch13.adb (Analyze_Aspect_Specifications): Detect improper\n\tspecification of stream attributes for subtypes that are not\n\tfirst subtypes, to prevent malformed rep_item chains in the case\n\tof such illegal specifications for discriminated private subtypes.\n\t(Check_Overloaded_Name): Verify that the name is an entity name\n\tbefore other checks.\n\n2014-07-18  Pascal Obry  <obry@adacore.com>\n\n\t* adaint.c (__gnat_fputwc) Do not disable on cross-build.\n\nFrom-SVN: r212807", "tree": {"sha": "76971b27d1da0b236c676cbee505dc9122a3a9e7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/76971b27d1da0b236c676cbee505dc9122a3a9e7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c74afd846db25c438a7f24254fe501a829109117", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c74afd846db25c438a7f24254fe501a829109117", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c74afd846db25c438a7f24254fe501a829109117", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c74afd846db25c438a7f24254fe501a829109117/comments", "author": null, "committer": null, "parents": [{"sha": "50ea63572d0e1705c44eee2a8a5d16882093d0bc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/50ea63572d0e1705c44eee2a8a5d16882093d0bc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/50ea63572d0e1705c44eee2a8a5d16882093d0bc"}], "stats": {"total": 68, "additions": 58, "deletions": 10}, "files": [{"sha": "09ccb01eec6b627113d56931b635e55ea294ddad", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c74afd846db25c438a7f24254fe501a829109117/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c74afd846db25c438a7f24254fe501a829109117/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=c74afd846db25c438a7f24254fe501a829109117", "patch": "@@ -1,3 +1,28 @@\n+2014-07-18  Gary Dismukes  <dismukes@adacore.com>\n+\n+\t* sem_util.adb: Minor typo correction.\n+\n+2014-07-18  Ben Brosgol  <brosgol@adacore.com>\n+\n+\t* gnat_rm.texi: Complete previous change.\n+\n+2014-07-18  Pascal Obry  <obry@adacore.com>\n+\n+\t* s-fileio.adb: Minor style fix.\n+\n+2014-07-18  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_ch13.adb (Analyze_Aspect_Specifications): Detect improper\n+\tspecification of stream attributes for subtypes that are not\n+\tfirst subtypes, to prevent malformed rep_item chains in the case\n+\tof such illegal specifications for discriminated private subtypes.\n+\t(Check_Overloaded_Name): Verify that the name is an entity name\n+\tbefore other checks.\n+\n+2014-07-18  Pascal Obry  <obry@adacore.com>\n+\n+\t* adaint.c (__gnat_fputwc) Do not disable on cross-build.\n+\n 2014-07-18  Robert Dewar  <dewar@adacore.com>\n \n \t* sem_prag.adb, sem_attr.adb,"}, {"sha": "2f3a7306e1abc9b1c78821a5c6489e32db3f2dd4", "filename": "gcc/ada/adaint.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c74afd846db25c438a7f24254fe501a829109117/gcc%2Fada%2Fadaint.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c74afd846db25c438a7f24254fe501a829109117/gcc%2Fada%2Fadaint.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fadaint.c?ref=c74afd846db25c438a7f24254fe501a829109117", "patch": "@@ -855,7 +855,7 @@ __gnat_rmdir (char *path)\n int\n __gnat_fputwc(int c, FILE *stream)\n {\n-#if ! defined (__vxworks) && ! defined (IS_CROSS)\n+#if ! defined (__vxworks)\n   return fputwc ((wchar_t)c, stream);\n #else\n   return fputc (c, stream);"}, {"sha": "bcc223467969b1e465c15278c23607bebeab0f5d", "filename": "gcc/ada/aspects.ads", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c74afd846db25c438a7f24254fe501a829109117/gcc%2Fada%2Faspects.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c74afd846db25c438a7f24254fe501a829109117/gcc%2Fada%2Faspects.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Faspects.ads?ref=c74afd846db25c438a7f24254fe501a829109117", "patch": "@@ -64,9 +64,9 @@\n --       and fully analyzed (possibly with expansion) during the semantic\n --       analysis of subprogram bodies.\n \n-with Namet;  use Namet;\n-with Snames; use Snames;\n-with Types;  use Types;\n+with Namet;   use Namet;\n+with Snames;  use Snames;\n+with Types;   use Types;\n \n package Aspects is\n \n@@ -205,10 +205,14 @@ package Aspects is\n    --  The following array indicates aspects that accept 'Class\n \n    Class_Aspect_OK : constant array (Aspect_Id) of Boolean :=\n-     (Aspect_Invariant      => True,\n+     (Aspect_Input          => True,\n+      Aspect_Invariant      => True,\n+      Aspect_Output         => True,\n       Aspect_Pre            => True,\n       Aspect_Predicate      => True,\n       Aspect_Post           => True,\n+      Aspect_Read           => True,\n+      Aspect_Write          => True,\n       Aspect_Type_Invariant => True,\n       others                => False);\n "}, {"sha": "8ff1c646c0fcf6bb075dc8accf40acdc25056fdb", "filename": "gcc/ada/gnat_rm.texi", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c74afd846db25c438a7f24254fe501a829109117/gcc%2Fada%2Fgnat_rm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c74afd846db25c438a7f24254fe501a829109117/gcc%2Fada%2Fgnat_rm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_rm.texi?ref=c74afd846db25c438a7f24254fe501a829109117", "patch": "@@ -502,6 +502,7 @@ The Implementation of Standard I/O\n * Text Translation::\n * Shared Files::\n * Filenames encoding::\n+* File content encoding::\n * Open Modes::\n * Operations on C Streams::\n * Interfacing to C Streams::\n@@ -17288,6 +17289,7 @@ these additional facilities are also described in this chapter.\n * Text Translation::\n * Shared Files::\n * Filenames encoding::\n+* File content encoding::\n * Open Modes::\n * Operations on C Streams::\n * Interfacing to C Streams::"}, {"sha": "78dd34b9458ceff214f2d03ddf304657eb512a6f", "filename": "gcc/ada/s-fileio.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c74afd846db25c438a7f24254fe501a829109117/gcc%2Fada%2Fs-fileio.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c74afd846db25c438a7f24254fe501a829109117/gcc%2Fada%2Fs-fileio.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-fileio.adb?ref=c74afd846db25c438a7f24254fe501a829109117", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2013, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2014, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -763,7 +763,7 @@ package body System.File_IO is\n                   while Index < Form'Last loop\n                      Index := Index + 1;\n \n-                     --  Loop through the RMS Keys and dispatch.\n+                     --  Loop through the RMS Keys and dispatch\n \n                      for Key in RMS_Keys loop\n                         declare"}, {"sha": "390fce7bd09ca4c7f5eed4b4041a25502756271a", "filename": "gcc/ada/sem_ch13.adb", "status": "modified", "additions": 18, "deletions": 1, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c74afd846db25c438a7f24254fe501a829109117/gcc%2Fada%2Fsem_ch13.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c74afd846db25c438a7f24254fe501a829109117/gcc%2Fada%2Fsem_ch13.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch13.adb?ref=c74afd846db25c438a7f24254fe501a829109117", "patch": "@@ -1683,6 +1683,22 @@ package body Sem_Ch13 is\n                      Set_Never_Set_In_Source (E, False);\n                   end if;\n \n+                  --  Correctness of the profile of a stream operation is\n+                  --  verified at the freeze point, but we must detect the\n+                  --  illegal specification of this aspect for a subtype now,\n+                  --  to prevent malformed rep_item chains.\n+\n+                  if (A_Id = Aspect_Input\n+                       or else A_Id = Aspect_Output\n+                       or else A_Id = Aspect_Read\n+                       or else A_Id = Aspect_Write)\n+                    and not Is_First_Subtype (E)\n+                  then\n+                     Error_Msg_N\n+                       (\"local name must be a first subtype\", Aspect);\n+                     goto Continue;\n+                  end if;\n+\n                   --  Construct the attribute definition clause\n \n                   Aitem :=\n@@ -8095,7 +8111,8 @@ package body Sem_Ch13 is\n       procedure Check_Overloaded_Name is\n       begin\n          if not Is_Overloaded (End_Decl_Expr) then\n-            Err := Entity (End_Decl_Expr) /= Entity (Freeze_Expr);\n+            Err := not Is_Entity_Name (End_Decl_Expr)\n+                     or else Entity (End_Decl_Expr) /= Entity (Freeze_Expr);\n \n          else\n             Err := True;"}, {"sha": "1716095b5f98a6565531804efb9afb88a7a66ff0", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c74afd846db25c438a7f24254fe501a829109117/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c74afd846db25c438a7f24254fe501a829109117/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=c74afd846db25c438a7f24254fe501a829109117", "patch": "@@ -3477,8 +3477,8 @@ package body Sem_Util is\n \n          --  In Ada 2012, If the type has an incomplete partial view, there\n          --  may be primitive operations declared before the full view, so\n-         --  we need to start scanning from the the incomplete view, which\n-         --  is earlier on the entity chain.\n+         --  we need to start scanning from the incomplete view, which is\n+         --  earlier on the entity chain.\n \n          elsif Nkind (Parent (B_Type)) = N_Full_Type_Declaration\n            and then Present (Incomplete_View (Parent (B_Type)))"}]}