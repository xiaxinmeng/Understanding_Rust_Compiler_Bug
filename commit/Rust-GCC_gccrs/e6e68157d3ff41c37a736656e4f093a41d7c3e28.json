{"sha": "e6e68157d3ff41c37a736656e4f093a41d7c3e28", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTZlNjgxNTdkM2ZmNDFjMzdhNzM2NjU2ZTRmMDkzYTQxZDdjM2UyOA==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1996-02-23T13:47:27Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1996-02-23T13:47:27Z"}, "message": "(sched_analyze): Record NOTE_INSN_SETJMP if no CALL_INSN as prev;\n\npreserve CONST_CALL_P bit.\n(reemit_notes): Restore CONST_CALL_P.\n\nFrom-SVN: r11342", "tree": {"sha": "867d9f30243a652b7139b3af01cc4b2b4599146c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/867d9f30243a652b7139b3af01cc4b2b4599146c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e6e68157d3ff41c37a736656e4f093a41d7c3e28", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e6e68157d3ff41c37a736656e4f093a41d7c3e28", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e6e68157d3ff41c37a736656e4f093a41d7c3e28", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e6e68157d3ff41c37a736656e4f093a41d7c3e28/comments", "author": null, "committer": null, "parents": [{"sha": "b453cb0b75e558aad1baa4f299b09b5af0616573", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b453cb0b75e558aad1baa4f299b09b5af0616573", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b453cb0b75e558aad1baa4f299b09b5af0616573"}], "stats": {"total": 14, "additions": 10, "deletions": 4}, "files": [{"sha": "d690a825a8f7673db74170830570ff0c6208feab", "filename": "gcc/sched.c", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6e68157d3ff41c37a736656e4f093a41d7c3e28/gcc%2Fsched.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6e68157d3ff41c37a736656e4f093a41d7c3e28/gcc%2Fsched.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsched.c?ref=e6e68157d3ff41c37a736656e4f093a41d7c3e28", "patch": "@@ -2278,9 +2278,14 @@ sched_analyze (head, tail)\n \t}\n       else if (GET_CODE (insn) == NOTE\n \t       && (NOTE_LINE_NUMBER (insn) == NOTE_INSN_LOOP_BEG\n-\t\t   || NOTE_LINE_NUMBER (insn) == NOTE_INSN_LOOP_END))\n-\tloop_notes = gen_rtx (EXPR_LIST, REG_DEAD,\n-\t\t\t      GEN_INT (NOTE_LINE_NUMBER (insn)), loop_notes);\n+\t\t   || NOTE_LINE_NUMBER (insn) == NOTE_INSN_LOOP_END\n+\t\t   || (NOTE_LINE_NUMBER (insn) == NOTE_INSN_SETJMP\n+\t\t       && GET_CODE (PREV_INSN (insn)) != CALL_INSN)))\n+\t{\n+\t  loop_notes = gen_rtx (EXPR_LIST, REG_DEAD,\n+\t\t\t\tGEN_INT (NOTE_LINE_NUMBER (insn)), loop_notes);\n+\t  CONST_CALL_P (loop_notes) = CONST_CALL_P (insn);\n+\t}\n \n       if (insn == tail)\n \treturn n_insns;\n@@ -3147,7 +3152,8 @@ reemit_notes (insn, last)\n \t  && GET_CODE (XEXP (note, 0)) == CONST_INT)\n \t{\n \t  if (INTVAL (XEXP (note, 0)) == NOTE_INSN_SETJMP)\n-\t    emit_note_after (INTVAL (XEXP (note, 0)), insn);\n+\t    CONST_CALL_P (emit_note_after (INTVAL (XEXP (note, 0)), insn))\n+\t      = CONST_CALL_P (note);\n \t  else\n \t    last = emit_note_before (INTVAL (XEXP (note, 0)), last);\n \t  remove_note (insn, note);"}]}