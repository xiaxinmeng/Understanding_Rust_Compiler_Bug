{"sha": "bc30fc12b1cbcd1942d93b5e555a1ed7195a73b8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmMzMGZjMTJiMWNiY2QxOTQyZDkzYjVlNTU1YTFlZDcxOTVhNzNiOA==", "commit": {"author": {"name": "Kai Tietz", "email": "kai.tietz@onevision.com", "date": "2010-12-25T10:41:05Z"}, "committer": {"name": "Kai Tietz", "email": "ktietz@gcc.gnu.org", "date": "2010-12-25T10:41:05Z"}, "message": "re PR c++/15774 (Conflicting function decls not diagnosed)\n\n2010-12-25  Kai Tietz  <kai.tietz@onevision.com>\n\n\tPR c++/15774\n\t* decl.c (decls_match): Check for FUNCTION_DECL\n\talso for identity of compatible attributes.\n\n\nChangeLog gcc/testsuite\n\n2010-12-25  Kai Tietz  <kai.tietz@onevision.com>\n\n\tPR c++/15774\n\t* g++.dg/warn/pr15774-1.C: New test.\n\t* g++.dg/warn/pr15774-2.C: New test.\n\nFrom-SVN: r168241", "tree": {"sha": "9f680cb91b3919a11678abcf4c45c694eacfbcdc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9f680cb91b3919a11678abcf4c45c694eacfbcdc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bc30fc12b1cbcd1942d93b5e555a1ed7195a73b8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bc30fc12b1cbcd1942d93b5e555a1ed7195a73b8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bc30fc12b1cbcd1942d93b5e555a1ed7195a73b8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bc30fc12b1cbcd1942d93b5e555a1ed7195a73b8/comments", "author": null, "committer": null, "parents": [{"sha": "784904958d6975247ad57ec2df72a8775b2b3efb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/784904958d6975247ad57ec2df72a8775b2b3efb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/784904958d6975247ad57ec2df72a8775b2b3efb"}], "stats": {"total": 48, "additions": 47, "deletions": 1}, "files": [{"sha": "09e43530ca8b4e799705384a9ffbdc45176b7580", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bc30fc12b1cbcd1942d93b5e555a1ed7195a73b8/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bc30fc12b1cbcd1942d93b5e555a1ed7195a73b8/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=bc30fc12b1cbcd1942d93b5e555a1ed7195a73b8", "patch": "@@ -1,3 +1,9 @@\n+2010-12-25  Kai Tietz  <kai.tietz@onevision.com>\n+\n+\tPR c++/15774\n+\t* decl.c (decls_match): Check for FUNCTION_DECL\n+\talso for identity of compatible attributes.\n+\n 2010-12-22  Nathan Froyd  <froydnj@codesourcery.com>\n \n \t* decl.c (decls_match, duplicate_decls): Use prototype_p."}, {"sha": "f7bf1bfdb402250edc2016112a92f47fe6c00c00", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bc30fc12b1cbcd1942d93b5e555a1ed7195a73b8/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bc30fc12b1cbcd1942d93b5e555a1ed7195a73b8/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=bc30fc12b1cbcd1942d93b5e555a1ed7195a73b8", "patch": "@@ -1009,7 +1009,11 @@ decls_match (tree newdecl, tree olddecl)\n \t    }\n #endif\n \t  else\n-\t    types_match = compparms (p1, p2);\n+\t    types_match =\n+\t      compparms (p1, p2)\n+\t      && (TYPE_ATTRIBUTES (TREE_TYPE (newdecl)) == NULL_TREE\n+\t          || targetm.comp_type_attributes (TREE_TYPE (newdecl),\n+\t\t\t\t\t\t   TREE_TYPE (olddecl)) != 0);\n \t}\n       else\n \ttypes_match = 0;"}, {"sha": "db09e3963fef3b5a4f5b03aed171de6636c84074", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bc30fc12b1cbcd1942d93b5e555a1ed7195a73b8/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bc30fc12b1cbcd1942d93b5e555a1ed7195a73b8/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=bc30fc12b1cbcd1942d93b5e555a1ed7195a73b8", "patch": "@@ -1,3 +1,9 @@\n+2010-12-25  Kai Tietz  <kai.tietz@onevision.com>\n+\n+\tPR c++/15774\n+\t* g++.dg/warn/pr15774-1.C: New test.\n+\t* g++.dg/warn/pr15774-2.C: New test.\n+\n 2010-12-24  Nicola Pero  <nicola.pero@meta-innovation.com>\n \n \t* objc.dg/gnu-api-2-sel.m: Test calling sel_getUid,"}, {"sha": "efd4daeb6f8189a767da9945ada399ec88228f54", "filename": "gcc/testsuite/g++.dg/warn/pr15774-1.C", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bc30fc12b1cbcd1942d93b5e555a1ed7195a73b8/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2Fpr15774-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bc30fc12b1cbcd1942d93b5e555a1ed7195a73b8/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2Fpr15774-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2Fpr15774-1.C?ref=bc30fc12b1cbcd1942d93b5e555a1ed7195a73b8", "patch": "@@ -0,0 +1,15 @@\n+// { dg-do compile { target { { i?86-*-* x86_64-*-* } && ilp32 } } }\n+// Test that an new declartion with different attributes then old one fail.\n+extern void foo (int); // { dg-error \"ambiguates old declaration\" }\n+\n+void\n+bar (void)\n+{\n+  foo (1);\n+}\n+\n+void __attribute__((stdcall)) foo (int i) // { dg-error \"new declaration\" }\n+{\n+}\n+\n+"}, {"sha": "f890b7af7d94d9aafd5e573b5094dbc1f30e54e2", "filename": "gcc/testsuite/g++.dg/warn/pr15774-2.C", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bc30fc12b1cbcd1942d93b5e555a1ed7195a73b8/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2Fpr15774-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bc30fc12b1cbcd1942d93b5e555a1ed7195a73b8/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2Fpr15774-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2Fpr15774-2.C?ref=bc30fc12b1cbcd1942d93b5e555a1ed7195a73b8", "patch": "@@ -0,0 +1,15 @@\n+// { dg-do compile { target { { i?86-*-* x86_64-*-* } && ilp32 } } }\n+// Test that old declaration is used, if new one has no attributes.\n+extern void __attribute__((stdcall)) foo (int);\n+\n+void\n+bar (void)\n+{\n+  foo (1);\n+}\n+\n+void foo (int i)\n+{\n+}\n+\n+"}]}