{"sha": "38f4bea834ef4c25cd89c824f15ee8d6b30a3760", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzhmNGJlYTgzNGVmNGMyNWNkODljODI0ZjE1ZWU4ZDZiMzBhMzc2MA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2017-12-15T21:40:45Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2017-12-15T21:40:45Z"}, "message": "re PR c++/83205 (ICE on structured binding with ill-formed negative std::tuple_size<T>::value)\n\n\tPR c++/83205\n\t* decl.c (cp_finish_decomp): Handle the case when tsize is not\n\terror_mark_node, but doesn't fit into uhwi.  Split up count != eltscnt\n\tand !tree_fits_uhwi_p (tsize) error_at calls into error_n and inform_n\n\tto handle plural forms properly.\n\n\t* g++.dg/cpp1z/decomp3.C: Adjust for structured binding count\n\tmismatch diagnostics split into error and warning with plural\n\tforms.\n\t* g++.dg/cpp1z/decomp10.C: Likewise.\n\t* g++.dg/cpp1z/decomp32.C: New test.\n\nFrom-SVN: r255706", "tree": {"sha": "4b137515b1818687477804ac20f81ccca104b582", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4b137515b1818687477804ac20f81ccca104b582"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/38f4bea834ef4c25cd89c824f15ee8d6b30a3760", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/38f4bea834ef4c25cd89c824f15ee8d6b30a3760", "html_url": "https://github.com/Rust-GCC/gccrs/commit/38f4bea834ef4c25cd89c824f15ee8d6b30a3760", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/38f4bea834ef4c25cd89c824f15ee8d6b30a3760/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "70356f771a65b378362b08d5fdb926fbb88e4aa7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/70356f771a65b378362b08d5fdb926fbb88e4aa7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/70356f771a65b378362b08d5fdb926fbb88e4aa7"}], "stats": {"total": 99, "additions": 84, "deletions": 15}, "files": [{"sha": "5c281004ef63e51a2536337fd8183154536fb0a4", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/38f4bea834ef4c25cd89c824f15ee8d6b30a3760/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/38f4bea834ef4c25cd89c824f15ee8d6b30a3760/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=38f4bea834ef4c25cd89c824f15ee8d6b30a3760", "patch": "@@ -1,5 +1,11 @@\n 2017-12-15  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR c++/83205\n+\t* decl.c (cp_finish_decomp): Handle the case when tsize is not\n+\terror_mark_node, but doesn't fit into uhwi.  Split up count != eltscnt\n+\tand !tree_fits_uhwi_p (tsize) error_at calls into error_n and inform_n\n+\tto handle plural forms properly.\n+\n \tPR c++/81197\n \t* cp-tree.h (cp_maybe_mangle_decomp): Declare.\n \t* decl.c (cp_maybe_mangle_decomp): New function."}, {"sha": "ca9e0c7b2058b2fda2c075526c23038d65bc3c2d", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 22, "deletions": 4, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/38f4bea834ef4c25cd89c824f15ee8d6b30a3760/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/38f4bea834ef4c25cd89c824f15ee8d6b30a3760/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=38f4bea834ef4c25cd89c824f15ee8d6b30a3760", "patch": "@@ -7446,11 +7446,20 @@ cp_finish_decomp (tree decl, tree first, unsigned int count)\n \t{\n        cnt_mismatch:\n \t  if (count > eltscnt)\n-\t    error_at (loc, \"%u names provided while %qT decomposes into \"\n-\t\t\t   \"%wu elements\", count, type, eltscnt);\n+\t    error_n (loc, count,\n+\t\t     \"%u name provided for structured binding\",\n+\t\t     \"%u names provided for structured binding\", count);\n \t  else\n-\t    error_at (loc, \"only %u names provided while %qT decomposes into \"\n-\t\t\t   \"%wu elements\", count, type, eltscnt);\n+\t    error_n (loc, count,\n+\t\t     \"only %u name provided for structured binding\",\n+\t\t     \"only %u names provided for structured binding\", count);\n+\t  /* Some languages have special plural rules even for large values,\n+\t     but it is periodic with period of 10, 100, 1000 etc.  */\n+\t  inform_n (loc, eltscnt > INT_MAX\n+\t\t\t ? (eltscnt % 1000000) + 1000000 : eltscnt,\n+\t\t    \"while %qT decomposes into %wu element\",\n+\t\t    \"while %qT decomposes into %wu elements\",\n+\t\t    type, eltscnt);\n \t  goto error_out;\n \t}\n       eltype = TREE_TYPE (type);\n@@ -7519,6 +7528,15 @@ cp_finish_decomp (tree decl, tree first, unsigned int count)\n \t\t\t \"constant expression\", type);\n \t  goto error_out;\n \t}\n+      if (!tree_fits_uhwi_p (tsize))\n+\t{\n+\t  error_n (loc, count,\n+\t\t   \"%u name provided for structured binding\",\n+\t\t   \"%u names provided for structured binding\", count);\n+\t  inform (loc, \"while %qT decomposes into %E elements\",\n+\t\t  type, tsize);\n+\t  goto error_out;\n+\t}\n       eltscnt = tree_to_uhwi (tsize);\n       if (count != eltscnt)\n \tgoto cnt_mismatch;"}, {"sha": "7bbf0e9f09eadcebefe26068d19abf6e62307b78", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/38f4bea834ef4c25cd89c824f15ee8d6b30a3760/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/38f4bea834ef4c25cd89c824f15ee8d6b30a3760/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=38f4bea834ef4c25cd89c824f15ee8d6b30a3760", "patch": "@@ -1,5 +1,12 @@\n 2017-12-15  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR c++/83205\n+\t* g++.dg/cpp1z/decomp3.C: Adjust for structured binding count\n+\tmismatch diagnostics split into error and warning with plural\n+\tforms.\n+\t* g++.dg/cpp1z/decomp10.C: Likewise.\n+\t* g++.dg/cpp1z/decomp32.C: New test.\n+\n \tPR c++/81197\n \t* g++.dg/cpp1z/decomp34.C: New test.\n "}, {"sha": "6ed9272a2f4c02e348559c809018999c940deb3c", "filename": "gcc/testsuite/g++.dg/cpp1z/decomp10.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/38f4bea834ef4c25cd89c824f15ee8d6b30a3760/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fdecomp10.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/38f4bea834ef4c25cd89c824f15ee8d6b30a3760/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fdecomp10.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fdecomp10.C?ref=38f4bea834ef4c25cd89c824f15ee8d6b30a3760", "patch": "@@ -11,7 +11,8 @@ void f1() { auto [ x ] = a1; }\t// { dg-error \"is not an integral constant expres\n \n struct A2 { int i,j; } a2;\n template<> struct std::tuple_size<A2> { enum { value = 5 }; };\n-void f2() { auto [ x ] = a2; }\t// { dg-error \"decomposes into 5\" }\n+void f2() { auto [ x ] = a2; }\t// { dg-error \"only 1 name provided\" }\n+\t\t\t        // { dg-message \"decomposes into 5\" \"\" { target *-*-* } .-1 }\n \n struct A3 { int i,j; } a3;\n template<> struct std::tuple_size<A3> { enum { value = 1 }; };"}, {"sha": "529f3732fd5db7c77cd764919a4041c6bf417f8d", "filename": "gcc/testsuite/g++.dg/cpp1z/decomp3.C", "status": "modified", "additions": 15, "deletions": 10, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/38f4bea834ef4c25cd89c824f15ee8d6b30a3760/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fdecomp3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/38f4bea834ef4c25cd89c824f15ee8d6b30a3760/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fdecomp3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fdecomp3.C?ref=38f4bea834ef4c25cd89c824f15ee8d6b30a3760", "patch": "@@ -51,16 +51,21 @@ int arr[4];\n void\n test3 (A &b, B c)\n {\n-  auto [ d, e, f ] = arr;\t\t// { dg-error \"only 3 names provided while 'int .4.' decomposes into 4 elements\" }\n-\t\t\t\t\t// { dg-warning \"structured bindings only available with -std=c..17 or -std=gnu..17\" \"\" { target c++14_down } .-1 }\n-  auto & [ g, h, i, j, k ] = arr;\t// { dg-error \"5 names provided while 'int .4.' decomposes into 4 elements\" }\n-\t\t\t\t\t// { dg-warning \"structured bindings only available with -std=c..17 or -std=gnu..17\" \"\" { target c++14_down } .-1 }\n-  auto [ l, m ] = b;\t\t\t// { dg-error \"only 2 names provided while 'A' decomposes into 3 elements\" }\n-\t\t\t\t\t// { dg-warning \"structured bindings only available with -std=c..17 or -std=gnu..17\" \"\" { target c++14_down } .-1 }\n-  auto & [ n, o, p, q ] = b;\t\t// { dg-error \"4 names provided while 'A' decomposes into 3 elements\" }\n-\t\t\t\t\t// { dg-warning \"structured bindings only available with -std=c..17 or -std=gnu..17\" \"\" { target c++14_down } .-1 }\n+  auto [ d, e, f ] = arr;\t\t// { dg-error \"only 3 names provided\" }\n+\t\t\t\t\t// { dg-message \"while 'int .4.' decomposes into 4 elements\" \"\" { target *-*-* } .-1 }\n+\t\t\t\t\t// { dg-warning \"structured bindings only available with -std=c..17 or -std=gnu..17\" \"\" { target c++14_down } .-2 }\n+  auto & [ g, h, i, j, k ] = arr;\t// { dg-error \"5 names provided\" }\n+\t\t\t\t\t// { dg-message \"while 'int .4.' decomposes into 4 elements\" \"\" { target *-*-* } .-1 }\n+\t\t\t\t\t// { dg-warning \"structured bindings only available with -std=c..17 or -std=gnu..17\" \"\" { target c++14_down } .-2 }\n+  auto [ l, m ] = b;\t\t\t// { dg-error \"only 2 names provided\" }\n+\t\t\t\t\t// { dg-message \"while 'A' decomposes into 3 elements\" \"\" { target *-*-* } .-1 }\n+\t\t\t\t\t// { dg-warning \"structured bindings only available with -std=c..17 or -std=gnu..17\" \"\" { target c++14_down } .-2 }\n+  auto & [ n, o, p, q ] = b;\t\t// { dg-error \"4 names provided\" }\n+\t\t\t\t\t// { dg-message \"while 'A' decomposes into 3 elements\" \"\" { target *-*-* } .-1 }\n+\t\t\t\t\t// { dg-warning \"structured bindings only available with -std=c..17 or -std=gnu..17\" \"\" { target c++14_down } .-2 }\n   auto [] { c };\t\t\t// { dg-error \"empty structured binding declaration\" }\n \t\t\t\t\t// { dg-warning \"structured bindings only available with -std=c..17 or -std=gnu..17\" \"\" { target c++14_down } .-1 }\n-  auto [ r, s ] = c;\t\t\t// { dg-error \"2 names provided while 'B' decomposes into 1 elements\" }\n-\t\t\t\t\t// { dg-warning \"structured bindings only available with -std=c..17 or -std=gnu..17\" \"\" { target c++14_down } .-1 }\n+  auto [ r, s ] = c;\t\t\t// { dg-error \"2 names provided\" }\n+\t\t\t\t\t// { dg-message \"while 'B' decomposes into 1 element\" \"\" { target *-*-* } .-1 }\n+\t\t\t\t\t// { dg-warning \"structured bindings only available with -std=c..17 or -std=gnu..17\" \"\" { target c++14_down } .-2 }\n }"}, {"sha": "a76d0c7ace81cf55d4cff41013336c3cbebe8f4c", "filename": "gcc/testsuite/g++.dg/cpp1z/decomp32.C", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/38f4bea834ef4c25cd89c824f15ee8d6b30a3760/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fdecomp32.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/38f4bea834ef4c25cd89c824f15ee8d6b30a3760/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fdecomp32.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fdecomp32.C?ref=38f4bea834ef4c25cd89c824f15ee8d6b30a3760", "patch": "@@ -0,0 +1,32 @@\n+// PR c++/83205\n+// { dg-do compile { target c++11 } }\n+// { dg-options \"\" }\n+\n+struct A { int i; };\n+struct B { int i; };\n+namespace std {\n+  template <typename T> struct tuple_size;\n+  template <> struct tuple_size<A> {\n+    static constexpr int value = -1;\n+  };\n+#ifdef __SIZEOF_INT128__\n+  template <> struct tuple_size<B> {\n+    static constexpr unsigned __int128 value = -1;\n+  };\n+#endif\n+}\n+\n+auto [a] = A{};\t// { dg-error \"1 name provided\" }\n+\t\t// { dg-message \"while 'A' decomposes into -1 elements\" \"\" { target *-*-* } .-1 }\n+\t\t// { dg-warning \"structured bindings only available with\" \"\" { target c++14_down } .-2 }\n+#ifdef __SIZEOF_INT128__\n+auto [b] = B{};\t// { dg-error \"1 name provided\" \"\" { target int128 } }\n+\t\t// { dg-message \"while 'B' decomposes into \\[0-9xa-fXA-F]* elements\" \"\" { target int128 } .-1 }\n+\t\t// { dg-warning \"structured bindings only available with\" \"\" { target { c++14_down && int128 } } .-2 }\n+auto [c, d] = B{};\t// { dg-error \"2 names provided\" \"\" { target int128 } }\n+\t\t\t// { dg-message \"while 'B' decomposes into \\[0-9xa-fXA-F]* elements\" \"\" { target int128 } .-1 }\n+\t\t\t// { dg-warning \"structured bindings only available with\" \"\" { target { c++14_down && int128 } } .-2 }\n+#endif\n+auto [e, f, g] = A{};\t// { dg-error \"3 names provided\" }\n+\t\t\t// { dg-message \"while 'A' decomposes into -1 elements\" \"\" { target *-*-* } .-1 }\n+\t\t\t// { dg-warning \"structured bindings only available with\" \"\" { target c++14_down } .-2 }"}]}