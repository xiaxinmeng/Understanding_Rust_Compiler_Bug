{"sha": "c16d3e3c875cb00ff8cffbdf1aa58ab0932e767d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzE2ZDNlM2M4NzVjYjAwZmY4Y2ZmYmRmMWFhNThhYjA5MzJlNzY3ZA==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2018-02-27T14:45:46Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2018-02-27T14:45:46Z"}, "message": "re PR libgomp/84466 (libgomp.graphite/force-parallel-8.c fails starting with r257723)\n\n2018-02-27  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/84466\n\t* graphite-scop-detection.c (scop_detection::stmt_simple_for_scop_p):\n\tAdjust last change to less strictly validate use operands.\n\nFrom-SVN: r258035", "tree": {"sha": "6ae23f6d1bba92d671a7f34cfc6c7b871fdf4f10", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6ae23f6d1bba92d671a7f34cfc6c7b871fdf4f10"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c16d3e3c875cb00ff8cffbdf1aa58ab0932e767d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c16d3e3c875cb00ff8cffbdf1aa58ab0932e767d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c16d3e3c875cb00ff8cffbdf1aa58ab0932e767d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c16d3e3c875cb00ff8cffbdf1aa58ab0932e767d/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e59b5e24ea78b6ca06da7ba07ec3218d6b65e989", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e59b5e24ea78b6ca06da7ba07ec3218d6b65e989", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e59b5e24ea78b6ca06da7ba07ec3218d6b65e989"}], "stats": {"total": 19, "additions": 16, "deletions": 3}, "files": [{"sha": "d4e56b3bd9b15238244a6c0dc0d070e32766f682", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c16d3e3c875cb00ff8cffbdf1aa58ab0932e767d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c16d3e3c875cb00ff8cffbdf1aa58ab0932e767d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c16d3e3c875cb00ff8cffbdf1aa58ab0932e767d", "patch": "@@ -1,3 +1,9 @@\n+2018-02-27  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/84466\n+\t* graphite-scop-detection.c (scop_detection::stmt_simple_for_scop_p):\n+\tAdjust last change to less strictly validate use operands.\n+\n 2018-02-27  Martin Liska  <mliska@suse.cz>\n \n \tPR gcov-profile/84548"}, {"sha": "2331dec69190ea5f07b053da19249392de693efc", "filename": "gcc/graphite-scop-detection.c", "status": "modified", "additions": 10, "deletions": 3, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c16d3e3c875cb00ff8cffbdf1aa58ab0932e767d/gcc%2Fgraphite-scop-detection.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c16d3e3c875cb00ff8cffbdf1aa58ab0932e767d/gcc%2Fgraphite-scop-detection.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite-scop-detection.c?ref=c16d3e3c875cb00ff8cffbdf1aa58ab0932e767d", "patch": "@@ -1028,16 +1028,23 @@ scop_detection::stmt_simple_for_scop_p (sese_l scop, gimple *stmt,\n     case GIMPLE_ASSIGN:\n     case GIMPLE_CALL:\n       {\n-\ttree op;\n+\ttree op, lhs = gimple_get_lhs (stmt);\n \tssa_op_iter i;\n+\t/* If we are not going to instantiate the stmt do not require\n+\t   its operands to be instantiatable at this point.  */\n+\tif (lhs\n+\t    && TREE_CODE (lhs) == SSA_NAME\n+\t    && scev_analyzable_p (lhs, scop))\n+\t  return true;\n \t/* Verify that if we can analyze operands at their def site we\n \t   also can represent them when analyzed at their uses.  */\n \tFOR_EACH_SSA_TREE_OPERAND (op, stmt, i, SSA_OP_USE)\n \t  if (scev_analyzable_p (op, scop)\n-\t      && !graphite_can_represent_expr (scop, bb->loop_father, op))\n+\t      && chrec_contains_undetermined\n+\t\t   (scalar_evolution_in_region (scop, bb->loop_father, op)))\n \t    {\n \t      DEBUG_PRINT (dp << \"[scop-detection-fail] \"\n-\t\t\t   << \"Graphite cannot represent stmt:\\n\";\n+\t\t\t   << \"Graphite cannot code-gen stmt:\\n\";\n \t\t\t   print_gimple_stmt (dump_file, stmt, 0,\n \t\t\t\t\t      TDF_VOPS | TDF_MEMSYMS));\n \t      return false;"}]}