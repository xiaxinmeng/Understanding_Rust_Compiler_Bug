{"sha": "56494762bed42418501591de5c4d6e959feff017", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTY0OTQ3NjJiZWQ0MjQxODUwMTU5MWRlNWM0ZDZlOTU5ZmVmZjAxNw==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2012-01-05T19:25:14Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2012-01-05T19:25:14Z"}, "message": "re PR rtl-optimization/49710 (segfault)\n\n\tPR middle-end/49710\n\t* cfgloopmanip.c (remove_path): Walk loop hiearchy upwards when\n\tunlooping loops.\n\nFrom-SVN: r182919", "tree": {"sha": "c37a75fb7f091174552a67e58c1b9f3c0fff0deb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c37a75fb7f091174552a67e58c1b9f3c0fff0deb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/56494762bed42418501591de5c4d6e959feff017", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/56494762bed42418501591de5c4d6e959feff017", "html_url": "https://github.com/Rust-GCC/gccrs/commit/56494762bed42418501591de5c4d6e959feff017", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/56494762bed42418501591de5c4d6e959feff017/comments", "author": null, "committer": null, "parents": [{"sha": "10d12a3eebd9ea1022ed56131ed80ab7b67aaa88", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/10d12a3eebd9ea1022ed56131ed80ab7b67aaa88", "html_url": "https://github.com/Rust-GCC/gccrs/commit/10d12a3eebd9ea1022ed56131ed80ab7b67aaa88"}], "stats": {"total": 57, "additions": 53, "deletions": 4}, "files": [{"sha": "1e612427ebf7b1c91837662a0a1c9dd36c3a7327", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/56494762bed42418501591de5c4d6e959feff017/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/56494762bed42418501591de5c4d6e959feff017/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=56494762bed42418501591de5c4d6e959feff017", "patch": "@@ -1,3 +1,9 @@\n+2012-01-05  Jan Hubicka  <jh@suse.cz>\n+\n+\tPR middle-end/49710\n+\t* cfgloopmanip.c (remove_path): Walk loop hiearchy upwards when\n+\tunlooping loops.\n+\n 2012-01-05  Richard Guenther  <rguenther@suse.de>\n \n \tPR lto/50490"}, {"sha": "33bcf4b987279f500c834564b28145b7a5ccb102", "filename": "gcc/cfgloopmanip.c", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/56494762bed42418501591de5c4d6e959feff017/gcc%2Fcfgloopmanip.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/56494762bed42418501591de5c4d6e959feff017/gcc%2Fcfgloopmanip.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfgloopmanip.c?ref=56494762bed42418501591de5c4d6e959feff017", "patch": "@@ -291,6 +291,7 @@ remove_path (edge e)\n   sbitmap seen;\n   bool irred_invalidated = false;\n   edge_iterator ei;\n+  struct loop *l, *f;\n \n   if (!can_remove_branch_p (e))\n     return false;\n@@ -314,10 +315,12 @@ remove_path (edge e)\n      we belong to.  In this case first unloop the loops, then proceed\n      normally.   We may assume that e->dest is not a header of any loop,\n      as it now has exactly one predecessor.  */\n-  while (loop_outer (e->src->loop_father)\n-\t && dominated_by_p (CDI_DOMINATORS,\n-\t\t\t    e->src->loop_father->latch, e->dest))\n-    unloop (e->src->loop_father, &irred_invalidated);\n+  for (l = e->src->loop_father; loop_outer (l); l = f)\n+    {\n+      f = loop_outer (l);\n+      if (dominated_by_p (CDI_DOMINATORS, l->latch, e->dest))\n+        unloop (l, &irred_invalidated);\n+    }\n \n   /* Identify the path.  */\n   nrem = find_path (e, &rem_bbs);"}, {"sha": "d324db6a2e38f334097f3508497fb19dba794c88", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/56494762bed42418501591de5c4d6e959feff017/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/56494762bed42418501591de5c4d6e959feff017/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=56494762bed42418501591de5c4d6e959feff017", "patch": "@@ -1,3 +1,8 @@\n+2012-01-05  Jan Hubicka  <jh@suse.cz>\n+\n+\tPR middle-end/49710\n+\t* gcc.c-torture/compile/pr49710.c: New file.\n+\n 2012-01-05  Richard Guenther  <rguenther@suse.de>\n \n \t* g++.dg/torture/pr49309.C: Skip for -flto."}, {"sha": "2a6e331db8d6560ea633f4de77449d7e99818f60", "filename": "gcc/testsuite/gcc.c-torture/compile/pr49710.c", "status": "added", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/56494762bed42418501591de5c4d6e959feff017/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr49710.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/56494762bed42418501591de5c4d6e959feff017/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr49710.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr49710.c?ref=56494762bed42418501591de5c4d6e959feff017", "patch": "@@ -0,0 +1,35 @@\n+int a, b, c, d;\n+\n+static void\n+foo (int *x)\n+{\n+  c = 0;\n+  while (1)\n+    {\n+      if (*x)\n+break;\n+      while (b)\n+for (; c; c = 0);\n+      for (d = 18; d != 18; d++)\n+if (c)\n+  {\n+    foo (x);\n+    return;\n+  }\n+    }\n+}\n+\n+static void\n+bar ()\n+{\n+  foo (0);\n+  foo (0);\n+  for (;;)\n+    ;\n+}\n+\n+baz ()\n+{\n+  for (; a;)\n+    bar ();\n+}"}]}