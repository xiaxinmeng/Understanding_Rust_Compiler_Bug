{"sha": "6ea2f74cf9dbee7a3e41d4c2bd3757a2ea303b8e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmVhMmY3NGNmOWRiZWU3YTNlNDFkNGMyYmQzNzU3YTJlYTMwM2I4ZQ==", "commit": {"author": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2015-09-30T09:24:02Z"}, "committer": {"name": "Marek Polacek", "email": "mpolacek@gcc.gnu.org", "date": "2015-09-30T09:24:02Z"}, "message": "re PR tree-optimization/67690 (wrong code with -O2 on x86_64/Linux)\n\n\tPR tree-optimization/67690\n\t* tree-ssa-ifcombine.c (pass_tree_ifcombine::execute): Call\n\treset_flow_sensitive_info_in_bb.\n\t* tree-ssa-tail-merge.c (replace_block_by): Likewise.\n\t* tree-ssanames.c: Include \"gimple-iterator.h\".\n\t(reset_flow_sensitive_info_in_bb): New function.\n\t* tree-ssanames.h (reset_flow_sensitive_info_in_bb): Declare.\n\n\t* gcc.dg/torture/pr67690.c: New test.\n\nFrom-SVN: r228284", "tree": {"sha": "d3500a983497c0bd0167a8f97529626c0c3a2ed2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d3500a983497c0bd0167a8f97529626c0c3a2ed2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6ea2f74cf9dbee7a3e41d4c2bd3757a2ea303b8e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6ea2f74cf9dbee7a3e41d4c2bd3757a2ea303b8e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6ea2f74cf9dbee7a3e41d4c2bd3757a2ea303b8e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6ea2f74cf9dbee7a3e41d4c2bd3757a2ea303b8e/comments", "author": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ae15100c9197195f26541c199aa4f6c75d36eb13", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ae15100c9197195f26541c199aa4f6c75d36eb13", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ae15100c9197195f26541c199aa4f6c75d36eb13"}], "stats": {"total": 87, "additions": 77, "deletions": 10}, "files": [{"sha": "0b3ce92c0e425a35ac20236246b967a0ef6221fd", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6ea2f74cf9dbee7a3e41d4c2bd3757a2ea303b8e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6ea2f74cf9dbee7a3e41d4c2bd3757a2ea303b8e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6ea2f74cf9dbee7a3e41d4c2bd3757a2ea303b8e", "patch": "@@ -1,3 +1,13 @@\n+2015-09-30  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR tree-optimization/67690\n+\t* tree-ssa-ifcombine.c (pass_tree_ifcombine::execute): Call\n+\treset_flow_sensitive_info_in_bb.\n+\t* tree-ssa-tail-merge.c (replace_block_by): Likewise.\n+\t* tree-ssanames.c: Include \"gimple-iterator.h\".\n+\t(reset_flow_sensitive_info_in_bb): New function.\n+\t* tree-ssanames.h (reset_flow_sensitive_info_in_bb): Declare.\n+\n 2015-09-30  Thomas Schwinge  <thomas@codesourcery.com>\n \n \t* config/i386/intelmic-mkoffload.c (target_ilp32): Remove"}, {"sha": "36a41d6c129cae9ab4a09e4bcee57fbd6bd7d79c", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6ea2f74cf9dbee7a3e41d4c2bd3757a2ea303b8e/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6ea2f74cf9dbee7a3e41d4c2bd3757a2ea303b8e/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=6ea2f74cf9dbee7a3e41d4c2bd3757a2ea303b8e", "patch": "@@ -1,3 +1,8 @@\n+2015-09-30  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR tree-optimization/67690\n+\t* gcc.dg/torture/pr67690.c: New test.\n+\n 2015-09-30  Christophe Lyon  <christophe.lyon@linaro.org>\n \n \t* g++.dg/cpp0x/stdint.C: Move dg-require-effective-target after"}, {"sha": "491de516f3747c7ac127ad9997129de4a7d57907", "filename": "gcc/testsuite/gcc.dg/torture/pr67690.c", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6ea2f74cf9dbee7a3e41d4c2bd3757a2ea303b8e/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr67690.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6ea2f74cf9dbee7a3e41d4c2bd3757a2ea303b8e/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr67690.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr67690.c?ref=6ea2f74cf9dbee7a3e41d4c2bd3757a2ea303b8e", "patch": "@@ -0,0 +1,32 @@\n+/* { dg-do run } */\n+\n+const int c1 = 1;\n+const int c2 = 2;\n+\n+int\n+check (int i)\n+{\n+  int j;\n+  if (i >= 0)\n+    j = c2 - i;\n+  else\n+    j = c2 - i;\n+  return c2 - c1 + 1 > j;\n+}\n+\n+int invoke (int *pi) __attribute__ ((noinline,noclone));\n+int\n+invoke (int *pi)\n+{\n+  return check (*pi);\n+}\n+\n+int\n+main ()\n+{\n+  int i = c1;\n+  int ret = invoke (&i);\n+  if (!ret)\n+    __builtin_abort ();\n+  return 0;\n+}"}, {"sha": "66be430f96bb725c00a4b46e6647ad71c61e2564", "filename": "gcc/tree-ssa-ifcombine.c", "status": "modified", "additions": 1, "deletions": 10, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6ea2f74cf9dbee7a3e41d4c2bd3757a2ea303b8e/gcc%2Ftree-ssa-ifcombine.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6ea2f74cf9dbee7a3e41d4c2bd3757a2ea303b8e/gcc%2Ftree-ssa-ifcombine.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-ifcombine.c?ref=6ea2f74cf9dbee7a3e41d4c2bd3757a2ea303b8e", "patch": "@@ -769,16 +769,7 @@ pass_tree_ifcombine::execute (function *fun)\n \t  {\n \t    /* Clear range info from all stmts in BB which is now executed\n \t       conditional on a always true/false condition.  */\n-\t    for (gimple_stmt_iterator gsi = gsi_start_bb (bb);\n-\t\t !gsi_end_p (gsi); gsi_next (&gsi))\n-\t      {\n-\t\tgimple *stmt = gsi_stmt (gsi);\n-\t\tssa_op_iter i;\n-\t\ttree op;\n-\t\tFOR_EACH_SSA_TREE_OPERAND (op, stmt, i, SSA_OP_DEF)\n-\t\t  reset_flow_sensitive_info (op);\n-\t      }\n-\n+\t    reset_flow_sensitive_info_in_bb (bb);\n \t    cfg_changed |= true;\n \t  }\n     }"}, {"sha": "487961e5c99f14a812fa9c92e0e0de2d5441f342", "filename": "gcc/tree-ssa-tail-merge.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6ea2f74cf9dbee7a3e41d4c2bd3757a2ea303b8e/gcc%2Ftree-ssa-tail-merge.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6ea2f74cf9dbee7a3e41d4c2bd3757a2ea303b8e/gcc%2Ftree-ssa-tail-merge.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-tail-merge.c?ref=6ea2f74cf9dbee7a3e41d4c2bd3757a2ea303b8e", "patch": "@@ -1534,6 +1534,10 @@ replace_block_by (basic_block bb1, basic_block bb2)\n       e2->probability = GCOV_COMPUTE_SCALE (e2->count, out_sum);\n     }\n \n+  /* Clear range info from all stmts in BB2 -- this transformation\n+     could make them out of date.  */\n+  reset_flow_sensitive_info_in_bb (bb2);\n+\n   /* Do updates that use bb1, before deleting bb1.  */\n   release_last_vdef (bb1);\n   same_succ_flush_bb (bb1);"}, {"sha": "7235dc3d56ab98793c8ab711e9aade7d45fe3312", "filename": "gcc/tree-ssanames.c", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6ea2f74cf9dbee7a3e41d4c2bd3757a2ea303b8e/gcc%2Ftree-ssanames.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6ea2f74cf9dbee7a3e41d4c2bd3757a2ea303b8e/gcc%2Ftree-ssanames.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssanames.c?ref=6ea2f74cf9dbee7a3e41d4c2bd3757a2ea303b8e", "patch": "@@ -23,6 +23,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"backend.h\"\n #include \"tree.h\"\n #include \"gimple.h\"\n+#include \"gimple-iterator.h\"\n #include \"hard-reg-set.h\"\n #include \"ssa.h\"\n #include \"alias.h\"\n@@ -544,6 +545,29 @@ reset_flow_sensitive_info (tree name)\n     SSA_NAME_RANGE_INFO (name) = NULL;\n }\n \n+/* Clear all flow sensitive data from all statements and PHI definitions\n+   in BB.  */\n+\n+void\n+reset_flow_sensitive_info_in_bb (basic_block bb)\n+{\n+  for (gimple_stmt_iterator gsi = gsi_start_bb (bb); !gsi_end_p (gsi);\n+       gsi_next (&gsi))\n+    {\n+      gimple *stmt = gsi_stmt (gsi);\n+      ssa_op_iter i;\n+      tree op;\n+      FOR_EACH_SSA_TREE_OPERAND (op, stmt, i, SSA_OP_DEF)\n+\treset_flow_sensitive_info (op);\n+    }\n+\n+  for (gphi_iterator gsi = gsi_start_phis (bb); !gsi_end_p (gsi);\n+       gsi_next (&gsi))\n+    {\n+      tree phi_def = gimple_phi_result (gsi.phi ());\n+      reset_flow_sensitive_info (phi_def);\n+    }\n+}\n \n /* Release all the SSA_NAMEs created by STMT.  */\n "}, {"sha": "5688ca566bf78700c83a4e2fed6b1de741654dad", "filename": "gcc/tree-ssanames.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6ea2f74cf9dbee7a3e41d4c2bd3757a2ea303b8e/gcc%2Ftree-ssanames.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6ea2f74cf9dbee7a3e41d4c2bd3757a2ea303b8e/gcc%2Ftree-ssanames.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssanames.h?ref=6ea2f74cf9dbee7a3e41d4c2bd3757a2ea303b8e", "patch": "@@ -95,6 +95,7 @@ extern tree duplicate_ssa_name_fn (struct function *, tree, gimple *);\n extern void duplicate_ssa_name_range_info (tree, enum value_range_type,\n \t\t\t\t\t   struct range_info_def *);\n extern void reset_flow_sensitive_info (tree);\n+extern void reset_flow_sensitive_info_in_bb (basic_block);\n extern void release_defs (gimple *);\n extern void replace_ssa_name_symbol (tree, tree);\n "}]}