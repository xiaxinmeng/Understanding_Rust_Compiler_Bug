{"sha": "4d85a6fea685603493f2a4dbcfd36d6fd25fbe26", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGQ4NWE2ZmVhNjg1NjAzNDkzZjJhNGRiY2ZkMzZkNmZkMjVmYmUyNg==", "commit": {"author": {"name": "Kaveh R. Ghazi", "email": "ghazi@caip.rutgers.edu", "date": "2002-06-01T01:53:53Z"}, "committer": {"name": "Kaveh Ghazi", "email": "ghazi@gcc.gnu.org", "date": "2002-06-01T01:53:53Z"}, "message": "*: Delete KR_headers cruft.\n\n\t* libF77/*: Delete KR_headers cruft.\n\t* libI77/*: Likewise.\n\t* libU77/*: Likewise.\n\nFrom-SVN: r54132", "tree": {"sha": "693a2481f59e62982389a205d2b15b5bfa3e0b2b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/693a2481f59e62982389a205d2b15b5bfa3e0b2b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/comments", "author": null, "committer": null, "parents": [{"sha": "1e730c5ca76832a10c16300f12ab0447ca1b07a1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1e730c5ca76832a10c16300f12ab0447ca1b07a1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1e730c5ca76832a10c16300f12ab0447ca1b07a1"}], "stats": {"total": 1845, "additions": 151, "deletions": 1694}, "files": [{"sha": "a2629f4f1b26ef5deef7273231c7b3ae7f19f3f4", "filename": "libf2c/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FChangeLog?ref=4d85a6fea685603493f2a4dbcfd36d6fd25fbe26", "patch": "@@ -1,3 +1,9 @@\n+Fri May 31 21:50:01 2002  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n+\n+\t* libF77/*: Delete KR_headers cruft.\n+\t* libI77/*: Likewise.\n+\t* libU77/*: Likewise.\n+\n Thu May 30 23:04:52 2002  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n \t* Makefile.in (WARN_CFLAGS): New."}, {"sha": "f34bfa079759c4ecf26bc4eed55aa3ab63fac0c3", "filename": "libf2c/libF77/F77_aloc.c", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibF77%2FF77_aloc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibF77%2FF77_aloc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibF77%2FF77_aloc.c?ref=4d85a6fea685603493f2a4dbcfd36d6fd25fbe26", "patch": "@@ -6,13 +6,6 @@\n \n static integer memfailure = 3;\n \n-#ifdef KR_headers\n-extern char *malloc();\n-extern void G77_exit_0 ();\n-\n- char *\n-F77_aloc(Len, whence) integer Len; char *whence;\n-#else\n #include <stdlib.h>\n #ifdef __cplusplus\n extern \"C\" {\n@@ -24,7 +17,6 @@ extern void G77_exit_0 (integer*);\n \n  char *\n F77_aloc(integer Len, char *whence)\n-#endif\n {\n \tchar *rv;\n \tunsigned int uLen = (unsigned int) Len;\t/* for K&R C */"}, {"sha": "ac277f6646f0d026c769aec01a617c0768d26fcd", "filename": "libf2c/libF77/abort_.c", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibF77%2Fabort_.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibF77%2Fabort_.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibF77%2Fabort_.c?ref=4d85a6fea685603493f2a4dbcfd36d6fd25fbe26", "patch": "@@ -1,15 +1,9 @@\n #include <stdio.h>\n #include \"f2c.h\"\n \n-#ifdef KR_headers\n-extern VOID sig_die();\n-\n-int G77_abort_0 ()\n-#else\n extern void sig_die(char*,int);\n \n int G77_abort_0 (void)\n-#endif\n {\n sig_die(\"Fortran abort routine called\", 1);\n return 0;\t/* not reached */"}, {"sha": "c1251e14f53ca5a3a636d1ee14858d74e278e99d", "filename": "libf2c/libF77/c_abs.c", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibF77%2Fc_abs.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibF77%2Fc_abs.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibF77%2Fc_abs.c?ref=4d85a6fea685603493f2a4dbcfd36d6fd25fbe26", "patch": "@@ -1,14 +1,8 @@\n #include \"f2c.h\"\n \n-#ifdef KR_headers\n-extern double f__cabs();\n-\n-double c_abs(z) complex *z;\n-#else\n extern double f__cabs(double, double);\n \n double c_abs(complex *z)\n-#endif\n {\n return( f__cabs( z->r, z->i ) );\n }"}, {"sha": "eb2acc4c8043042894cdca9ea3eb3a57cdb3abef", "filename": "libf2c/libF77/c_cos.c", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibF77%2Fc_cos.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibF77%2Fc_cos.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibF77%2Fc_cos.c?ref=4d85a6fea685603493f2a4dbcfd36d6fd25fbe26", "patch": "@@ -1,15 +1,9 @@\n #include \"f2c.h\"\n \n-#ifdef KR_headers\n-extern double sin(), cos(), sinh(), cosh();\n-\n-VOID c_cos(r, z) complex *r, *z;\n-#else\n #undef abs\n #include \"math.h\"\n \n void c_cos(complex *r, complex *z)\n-#endif\n {\n \tdouble zi = z->i, zr = z->r;\n \tr->r =   cos(zr) * cosh(zi);"}, {"sha": "20763a3d69e4744389f62fccfe57704646a840d8", "filename": "libf2c/libF77/c_div.c", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibF77%2Fc_div.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibF77%2Fc_div.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibF77%2Fc_div.c?ref=4d85a6fea685603493f2a4dbcfd36d6fd25fbe26", "patch": "@@ -1,13 +1,7 @@\n #include \"f2c.h\"\n \n-#ifdef KR_headers\n-extern VOID sig_die();\n-VOID c_div(c, a, b)\n-complex *a, *b, *c;\n-#else\n extern void sig_die(char*,int);\n void c_div(complex *c, complex *a, complex *b)\n-#endif\n {\n \tdouble ratio, den;\n \tdouble abr, abi, cr;"}, {"sha": "3e281e91c6e7b6300c8c28a667345becb7bb35c0", "filename": "libf2c/libF77/c_exp.c", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibF77%2Fc_exp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibF77%2Fc_exp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibF77%2Fc_exp.c?ref=4d85a6fea685603493f2a4dbcfd36d6fd25fbe26", "patch": "@@ -1,15 +1,9 @@\n #include \"f2c.h\"\n \n-#ifdef KR_headers\n-extern double exp(), cos(), sin();\n-\n- VOID c_exp(r, z) complex *r, *z;\n-#else\n #undef abs\n #include \"math.h\"\n \n void c_exp(complex *r, complex *z)\n-#endif\n {\n \tdouble expx, zi = z->i;\n "}, {"sha": "990b42060be48687451f21ae98286bfd33ce1f96", "filename": "libf2c/libF77/c_log.c", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibF77%2Fc_log.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibF77%2Fc_log.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibF77%2Fc_log.c?ref=4d85a6fea685603493f2a4dbcfd36d6fd25fbe26", "patch": "@@ -1,15 +1,10 @@\n #include \"f2c.h\"\n \n-#ifdef KR_headers\n-extern double log(), f__cabs(), atan2();\n-VOID c_log(r, z) complex *r, *z;\n-#else\n #undef abs\n #include \"math.h\"\n extern double f__cabs(double, double);\n \n void c_log(complex *r, complex *z)\n-#endif\n {\n \tdouble zi, zr;\n \tr->i = atan2(zi = z->i, zr = z->r);"}, {"sha": "07ef4d6501c545927ef6a24f720bdb98100868e8", "filename": "libf2c/libF77/c_sin.c", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibF77%2Fc_sin.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibF77%2Fc_sin.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibF77%2Fc_sin.c?ref=4d85a6fea685603493f2a4dbcfd36d6fd25fbe26", "patch": "@@ -1,15 +1,9 @@\n #include \"f2c.h\"\n \n-#ifdef KR_headers\n-extern double sin(), cos(), sinh(), cosh();\n-\n-VOID c_sin(r, z) complex *r, *z;\n-#else\n #undef abs\n #include \"math.h\"\n \n void c_sin(complex *r, complex *z)\n-#endif\n {\n \tdouble zi = z->i, zr = z->r;\n \tr->r = sin(zr) * cosh(zi);"}, {"sha": "3b9a30f5635ea9b1e49e8eb1c0e8e47fa3ef1f81", "filename": "libf2c/libF77/c_sqrt.c", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibF77%2Fc_sqrt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibF77%2Fc_sqrt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibF77%2Fc_sqrt.c?ref=4d85a6fea685603493f2a4dbcfd36d6fd25fbe26", "patch": "@@ -1,16 +1,10 @@\n #include \"f2c.h\"\n \n-#ifdef KR_headers\n-extern double sqrt(), f__cabs();\n-\n-VOID c_sqrt(r, z) complex *r, *z;\n-#else\n #undef abs\n #include \"math.h\"\n extern double f__cabs(double, double);\n \n void c_sqrt(complex *r, complex *z)\n-#endif\n {\n \tdouble mag, t;\n \tdouble zi = z->i, zr = z->r;"}, {"sha": "17276abd054ade6f7aee15a71cc36461be67ca9e", "filename": "libf2c/libF77/cabs.c", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibF77%2Fcabs.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibF77%2Fcabs.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibF77%2Fcabs.c?ref=4d85a6fea685603493f2a4dbcfd36d6fd25fbe26", "patch": "@@ -1,11 +1,6 @@\n-#ifdef KR_headers\n-extern double sqrt();\n-double f__cabs(real, imag) double real, imag;\n-#else\n #undef abs\n #include <math.h>\n double f__cabs(double real, double imag)\n-#endif\n {\n double temp;\n "}, {"sha": "4e198c87c8f8beda4b105760ba30cb65128d95f7", "filename": "libf2c/libF77/configure", "status": "modified", "additions": 49, "deletions": 61, "changes": 110, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibF77%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibF77%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibF77%2Fconfigure?ref=4d85a6fea685603493f2a4dbcfd36d6fd25fbe26", "patch": "@@ -28,7 +28,6 @@ program_suffix=NONE\n program_transform_name=s,x,x,\n silent=\n site=\n-sitefile=\n srcdir=\n target=NONE\n verbose=\n@@ -143,7 +142,6 @@ Configuration:\n   --help                  print this message\n   --no-create             do not create output files\n   --quiet, --silent       do not print \\`checking...' messages\n-  --site-file=FILE        use FILE as the site file\n   --version               print the version of autoconf that created configure\n Directory and file names:\n   --prefix=PREFIX         install architecture-independent files in PREFIX\n@@ -314,11 +312,6 @@ EOF\n   -site=* | --site=* | --sit=*)\n     site=\"$ac_optarg\" ;;\n \n-  -site-file | --site-file | --site-fil | --site-fi | --site-f)\n-    ac_prev=sitefile ;;\n-  -site-file=* | --site-file=* | --site-fil=* | --site-fi=* | --site-f=*)\n-    sitefile=\"$ac_optarg\" ;;\n-\n   -srcdir | --srcdir | --srcdi | --srcd | --src | --sr)\n     ac_prev=srcdir ;;\n   -srcdir=* | --srcdir=* | --srcdi=* | --srcd=* | --src=* | --sr=*)\n@@ -484,16 +477,12 @@ fi\n srcdir=`echo \"${srcdir}\" | sed 's%\\([^/]\\)/*$%\\1%'`\n \n # Prefer explicitly selected file to automatically selected ones.\n-if test -z \"$sitefile\"; then\n-  if test -z \"$CONFIG_SITE\"; then\n-    if test \"x$prefix\" != xNONE; then\n-      CONFIG_SITE=\"$prefix/share/config.site $prefix/etc/config.site\"\n-    else\n-      CONFIG_SITE=\"$ac_default_prefix/share/config.site $ac_default_prefix/etc/config.site\"\n-    fi\n+if test -z \"$CONFIG_SITE\"; then\n+  if test \"x$prefix\" != xNONE; then\n+    CONFIG_SITE=\"$prefix/share/config.site $prefix/etc/config.site\"\n+  else\n+    CONFIG_SITE=\"$ac_default_prefix/share/config.site $ac_default_prefix/etc/config.site\"\n   fi\n-else\n-  CONFIG_SITE=\"$sitefile\"\n fi\n for ac_site_file in $CONFIG_SITE; do\n   if test -r \"$ac_site_file\"; then\n@@ -541,7 +530,7 @@ fi\n # Extract the first word of \"gcc\", so it can be a program name with args.\n set dummy gcc; ac_word=$2\n echo $ac_n \"checking for $ac_word\"\"... $ac_c\" 1>&6\n-echo \"configure:545: checking for $ac_word\" >&5\n+echo \"configure:534: checking for $ac_word\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_prog_CC'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n@@ -571,7 +560,7 @@ if test -z \"$CC\"; then\n   # Extract the first word of \"cc\", so it can be a program name with args.\n set dummy cc; ac_word=$2\n echo $ac_n \"checking for $ac_word\"\"... $ac_c\" 1>&6\n-echo \"configure:575: checking for $ac_word\" >&5\n+echo \"configure:564: checking for $ac_word\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_prog_CC'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n@@ -622,7 +611,7 @@ fi\n       # Extract the first word of \"cl\", so it can be a program name with args.\n set dummy cl; ac_word=$2\n echo $ac_n \"checking for $ac_word\"\"... $ac_c\" 1>&6\n-echo \"configure:626: checking for $ac_word\" >&5\n+echo \"configure:615: checking for $ac_word\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_prog_CC'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n@@ -655,7 +644,7 @@ fi\n \n \n echo $ac_n \"checking whether we are using GNU C\"\"... $ac_c\" 1>&6\n-echo \"configure:659: checking whether we are using GNU C\" >&5\n+echo \"configure:648: checking whether we are using GNU C\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_prog_gcc'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n@@ -664,7 +653,7 @@ else\n   yes;\n #endif\n EOF\n-if { ac_try='${CC-cc} -E conftest.c'; { (eval echo configure:668: \\\"$ac_try\\\") 1>&5; (eval $ac_try) 2>&5; }; } | egrep yes >/dev/null 2>&1; then\n+if { ac_try='${CC-cc} -E conftest.c'; { (eval echo configure:657: \\\"$ac_try\\\") 1>&5; (eval $ac_try) 2>&5; }; } | egrep yes >/dev/null 2>&1; then\n   ac_cv_prog_gcc=yes\n else\n   ac_cv_prog_gcc=no\n@@ -683,7 +672,7 @@ ac_test_CFLAGS=\"${CFLAGS+set}\"\n ac_save_CFLAGS=\"$CFLAGS\"\n CFLAGS=\n echo $ac_n \"checking whether ${CC-cc} accepts -g\"\"... $ac_c\" 1>&6\n-echo \"configure:687: checking whether ${CC-cc} accepts -g\" >&5\n+echo \"configure:676: checking whether ${CC-cc} accepts -g\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_prog_cc_g'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n@@ -726,7 +715,7 @@ else\n   # Extract the first word of \"ranlib\", so it can be a program name with args.\n set dummy ranlib; ac_word=$2\n echo $ac_n \"checking for $ac_word\"\"... $ac_c\" 1>&6\n-echo \"configure:730: checking for $ac_word\" >&5\n+echo \"configure:719: checking for $ac_word\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_prog_RANLIB'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n@@ -755,7 +744,7 @@ fi\n \n fi\n echo $ac_n \"checking whether ${MAKE-make} sets \\${MAKE}\"\"... $ac_c\" 1>&6\n-echo \"configure:759: checking whether ${MAKE-make} sets \\${MAKE}\" >&5\n+echo \"configure:748: checking whether ${MAKE-make} sets \\${MAKE}\" >&5\n set dummy ${MAKE-make}; ac_make=`echo \"$2\" | sed 'y%./+-%__p_%'`\n if eval \"test \\\"`echo '$''{'ac_cv_prog_make_${ac_make}_set'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n@@ -785,7 +774,7 @@ fi\n \n # Sanity check for the cross-compilation case:\n echo $ac_n \"checking how to run the C preprocessor\"\"... $ac_c\" 1>&6\n-echo \"configure:789: checking how to run the C preprocessor\" >&5\n+echo \"configure:778: checking how to run the C preprocessor\" >&5\n # On Suns, sometimes $CPP names a directory.\n if test -n \"$CPP\" && test -d \"$CPP\"; then\n   CPP=\n@@ -800,13 +789,13 @@ else\n   # On the NeXT, cc -E runs the code through the compiler's parser,\n   # not just through cpp.\n   cat > conftest.$ac_ext <<EOF\n-#line 804 \"configure\"\n+#line 793 \"configure\"\n #include \"confdefs.h\"\n #include <assert.h>\n Syntax Error\n EOF\n ac_try=\"$ac_cpp conftest.$ac_ext >/dev/null 2>conftest.out\"\n-{ (eval echo configure:810: \\\"$ac_try\\\") 1>&5; (eval $ac_try) 2>&5; }\n+{ (eval echo configure:799: \\\"$ac_try\\\") 1>&5; (eval $ac_try) 2>&5; }\n ac_err=`grep -v '^ *+' conftest.out | grep -v \"^conftest.${ac_ext}\\$\"`\n if test -z \"$ac_err\"; then\n   :\n@@ -817,13 +806,13 @@ else\n   rm -rf conftest*\n   CPP=\"${CC-cc} -E -traditional-cpp\"\n   cat > conftest.$ac_ext <<EOF\n-#line 821 \"configure\"\n+#line 810 \"configure\"\n #include \"confdefs.h\"\n #include <assert.h>\n Syntax Error\n EOF\n ac_try=\"$ac_cpp conftest.$ac_ext >/dev/null 2>conftest.out\"\n-{ (eval echo configure:827: \\\"$ac_try\\\") 1>&5; (eval $ac_try) 2>&5; }\n+{ (eval echo configure:816: \\\"$ac_try\\\") 1>&5; (eval $ac_try) 2>&5; }\n ac_err=`grep -v '^ *+' conftest.out | grep -v \"^conftest.${ac_ext}\\$\"`\n if test -z \"$ac_err\"; then\n   :\n@@ -834,13 +823,13 @@ else\n   rm -rf conftest*\n   CPP=\"${CC-cc} -nologo -E\"\n   cat > conftest.$ac_ext <<EOF\n-#line 838 \"configure\"\n+#line 827 \"configure\"\n #include \"confdefs.h\"\n #include <assert.h>\n Syntax Error\n EOF\n ac_try=\"$ac_cpp conftest.$ac_ext >/dev/null 2>conftest.out\"\n-{ (eval echo configure:844: \\\"$ac_try\\\") 1>&5; (eval $ac_try) 2>&5; }\n+{ (eval echo configure:833: \\\"$ac_try\\\") 1>&5; (eval $ac_try) 2>&5; }\n ac_err=`grep -v '^ *+' conftest.out | grep -v \"^conftest.${ac_ext}\\$\"`\n if test -z \"$ac_err\"; then\n   :\n@@ -866,17 +855,17 @@ echo \"$ac_t\"\"$CPP\" 1>&6\n \n ac_safe=`echo \"stdio.h\" | sed 'y%./+-%__p_%'`\n echo $ac_n \"checking for stdio.h\"\"... $ac_c\" 1>&6\n-echo \"configure:870: checking for stdio.h\" >&5\n+echo \"configure:859: checking for stdio.h\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_header_$ac_safe'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 875 \"configure\"\n+#line 864 \"configure\"\n #include \"confdefs.h\"\n #include <stdio.h>\n EOF\n ac_try=\"$ac_cpp conftest.$ac_ext >/dev/null 2>conftest.out\"\n-{ (eval echo configure:880: \\\"$ac_try\\\") 1>&5; (eval $ac_try) 2>&5; }\n+{ (eval echo configure:869: \\\"$ac_try\\\") 1>&5; (eval $ac_try) 2>&5; }\n ac_err=`grep -v '^ *+' conftest.out | grep -v \"^conftest.${ac_ext}\\$\"`\n if test -z \"$ac_err\"; then\n   rm -rf conftest*\n@@ -904,20 +893,20 @@ fi\n \n \n echo $ac_n \"checking for ANSI C header files\"\"... $ac_c\" 1>&6\n-echo \"configure:908: checking for ANSI C header files\" >&5\n+echo \"configure:897: checking for ANSI C header files\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_header_stdc'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 913 \"configure\"\n+#line 902 \"configure\"\n #include \"confdefs.h\"\n #include <stdlib.h>\n #include <stdarg.h>\n #include <string.h>\n #include <float.h>\n EOF\n ac_try=\"$ac_cpp conftest.$ac_ext >/dev/null 2>conftest.out\"\n-{ (eval echo configure:921: \\\"$ac_try\\\") 1>&5; (eval $ac_try) 2>&5; }\n+{ (eval echo configure:910: \\\"$ac_try\\\") 1>&5; (eval $ac_try) 2>&5; }\n ac_err=`grep -v '^ *+' conftest.out | grep -v \"^conftest.${ac_ext}\\$\"`\n if test -z \"$ac_err\"; then\n   rm -rf conftest*\n@@ -934,7 +923,7 @@ rm -f conftest*\n if test $ac_cv_header_stdc = yes; then\n   # SunOS 4.x string.h does not declare mem*, contrary to ANSI.\n cat > conftest.$ac_ext <<EOF\n-#line 938 \"configure\"\n+#line 927 \"configure\"\n #include \"confdefs.h\"\n #include <string.h>\n EOF\n@@ -952,7 +941,7 @@ fi\n if test $ac_cv_header_stdc = yes; then\n   # ISC 2.0.2 stdlib.h does not declare free, contrary to ANSI.\n cat > conftest.$ac_ext <<EOF\n-#line 956 \"configure\"\n+#line 945 \"configure\"\n #include \"confdefs.h\"\n #include <stdlib.h>\n EOF\n@@ -973,7 +962,7 @@ if test \"$cross_compiling\" = yes; then\n   :\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 977 \"configure\"\n+#line 966 \"configure\"\n #include \"confdefs.h\"\n #include <ctype.h>\n #define ISLOWER(c) ('a' <= (c) && (c) <= 'z')\n@@ -984,7 +973,7 @@ if (XOR (islower (i), ISLOWER (i)) || toupper (i) != TOUPPER (i)) exit(2);\n exit (0); }\n \n EOF\n-if { (eval echo configure:988: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext} && (./conftest; exit) 2>/dev/null\n+if { (eval echo configure:977: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext} && (./conftest; exit) 2>/dev/null\n then\n   :\n else\n@@ -1007,14 +996,13 @@ EOF\n \n fi\n \n-\n echo $ac_n \"checking for posix\"\"... $ac_c\" 1>&6\n-echo \"configure:1013: checking for posix\" >&5\n+echo \"configure:1001: checking for posix\" >&5\n if eval \"test \\\"`echo '$''{'g77_cv_header_posix'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 1018 \"configure\"\n+#line 1006 \"configure\"\n #include \"confdefs.h\"\n #include <sys/types.h>\n #include <unistd.h>\n@@ -1040,12 +1028,12 @@ echo \"$ac_t\"\"$g77_cv_header_posix\" 1>&6\n # We can rely on the GNU library being posix-ish.  I guess checking the \n # header isn't actually like checking the functions, though...\n echo $ac_n \"checking for GNU library\"\"... $ac_c\" 1>&6\n-echo \"configure:1044: checking for GNU library\" >&5\n+echo \"configure:1032: checking for GNU library\" >&5\n if eval \"test \\\"`echo '$''{'g77_cv_lib_gnu'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 1049 \"configure\"\n+#line 1037 \"configure\"\n #include \"confdefs.h\"\n #include <stdio.h>\n #ifdef __GNU_LIBRARY__\n@@ -1068,12 +1056,12 @@ fi\n echo \"$ac_t\"\"$g77_cv_lib_gnu\" 1>&6\n \n echo $ac_n \"checking return type of signal handlers\"\"... $ac_c\" 1>&6\n-echo \"configure:1072: checking return type of signal handlers\" >&5\n+echo \"configure:1060: checking return type of signal handlers\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_type_signal'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 1077 \"configure\"\n+#line 1065 \"configure\"\n #include \"confdefs.h\"\n #include <sys/types.h>\n #include <signal.h>\n@@ -1090,7 +1078,7 @@ int main() {\n int i;\n ; return 0; }\n EOF\n-if { (eval echo configure:1094: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n+if { (eval echo configure:1082: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n   rm -rf conftest*\n   ac_cv_type_signal=void\n else\n@@ -1111,12 +1099,12 @@ EOF\n # we'll get atexit by default\n if test $ac_cv_header_stdc != yes; then\n echo $ac_n \"checking for atexit\"\"... $ac_c\" 1>&6\n-echo \"configure:1115: checking for atexit\" >&5\n+echo \"configure:1103: checking for atexit\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_func_atexit'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 1120 \"configure\"\n+#line 1108 \"configure\"\n #include \"confdefs.h\"\n /* System header to define __stub macros and hopefully few prototypes,\n     which can conflict with char atexit(); below.  */\n@@ -1139,7 +1127,7 @@ atexit();\n \n ; return 0; }\n EOF\n-if { (eval echo configure:1143: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n+if { (eval echo configure:1131: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n   rm -rf conftest*\n   eval \"ac_cv_func_atexit=yes\"\n else\n@@ -1164,12 +1152,12 @@ else\n EOF\n \n   echo $ac_n \"checking for onexit\"\"... $ac_c\" 1>&6\n-echo \"configure:1168: checking for onexit\" >&5\n+echo \"configure:1156: checking for onexit\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_func_onexit'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 1173 \"configure\"\n+#line 1161 \"configure\"\n #include \"confdefs.h\"\n /* System header to define __stub macros and hopefully few prototypes,\n     which can conflict with char onexit(); below.  */\n@@ -1192,7 +1180,7 @@ onexit();\n \n ; return 0; }\n EOF\n-if { (eval echo configure:1196: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n+if { (eval echo configure:1184: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n   rm -rf conftest*\n   eval \"ac_cv_func_onexit=yes\"\n else\n@@ -1210,12 +1198,12 @@ if eval \"test \\\"`echo '$ac_cv_func_'onexit`\\\" = yes\"; then\n else\n   echo \"$ac_t\"\"no\" 1>&6\n echo $ac_n \"checking for on_exit\"\"... $ac_c\" 1>&6\n-echo \"configure:1214: checking for on_exit\" >&5\n+echo \"configure:1202: checking for on_exit\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_func_on_exit'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 1219 \"configure\"\n+#line 1207 \"configure\"\n #include \"confdefs.h\"\n /* System header to define __stub macros and hopefully few prototypes,\n     which can conflict with char on_exit(); below.  */\n@@ -1238,7 +1226,7 @@ on_exit();\n \n ; return 0; }\n EOF\n-if { (eval echo configure:1242: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n+if { (eval echo configure:1230: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n   rm -rf conftest*\n   eval \"ac_cv_func_on_exit=yes\"\n else\n@@ -1268,15 +1256,15 @@ else true\n fi\n \n echo $ac_n \"checking for drem in -lm\"\"... $ac_c\" 1>&6\n-echo \"configure:1272: checking for drem in -lm\" >&5\n+echo \"configure:1260: checking for drem in -lm\" >&5\n ac_lib_var=`echo m'_'drem | sed 'y%./+-%__p_%'`\n if eval \"test \\\"`echo '$''{'ac_cv_lib_$ac_lib_var'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   ac_save_LIBS=\"$LIBS\"\n LIBS=\"-lm  $LIBS\"\n cat > conftest.$ac_ext <<EOF\n-#line 1280 \"configure\"\n+#line 1268 \"configure\"\n #include \"confdefs.h\"\n /* Override any gcc2 internal prototype to avoid an error.  */\n /* We use char because int might match the return type of a gcc2\n@@ -1287,7 +1275,7 @@ int main() {\n drem()\n ; return 0; }\n EOF\n-if { (eval echo configure:1291: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n+if { (eval echo configure:1279: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n   rm -rf conftest*\n   eval \"ac_cv_lib_$ac_lib_var=yes\"\n else"}, {"sha": "838ce965a12696e7ad2582f8d553ea3163130a01", "filename": "libf2c/libF77/configure.in", "status": "modified", "additions": 0, "deletions": 11, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibF77%2Fconfigure.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibF77%2Fconfigure.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibF77%2Fconfigure.in?ref=4d85a6fea685603493f2a4dbcfd36d6fd25fbe26", "patch": "@@ -56,17 +56,6 @@ the G77 runtime system.  If necessary, install gcc now with \\`LANGUAGES=c',\n then the target library, then build with \\`LANGUAGES=f77'.])])\n \n AC_HEADER_STDC\n-dnl We could do this if we didn't know we were using gcc\n-dnl AC_MSG_CHECKING(for prototype-savvy compiler)\n-dnl AC_CACHE_VAL(g77_cv_sys_proto,                \n-dnl   [AC_TRY_LINK(,                             \n-dnl dnl looks screwy because TRY_LINK expects a function body\n-dnl    [return 0;} int foo (int * bar) {],       \n-dnl    g77_cv_sys_proto=yes,                      \n-dnl    [g77_cv_sys_proto=no                       \n-dnl     AC_DEFINE(KR_headers)])])                \n-dnl AC_MSG_RESULT($g77_cv_sys_proto)              \n-\n AC_MSG_CHECKING(for posix)\n AC_CACHE_VAL(g77_cv_header_posix,\n   AC_EGREP_CPP(yes,"}, {"sha": "2927a5e867d337e3bce719fcf31f0117fd390fdd", "filename": "libf2c/libF77/d_abs.c", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibF77%2Fd_abs.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibF77%2Fd_abs.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibF77%2Fd_abs.c?ref=4d85a6fea685603493f2a4dbcfd36d6fd25fbe26", "patch": "@@ -1,10 +1,6 @@\n #include \"f2c.h\"\n \n-#ifdef KR_headers\n-double d_abs(x) doublereal *x;\n-#else\n double d_abs(doublereal *x)\n-#endif\n {\n if(*x >= 0)\n \treturn(*x);"}, {"sha": "a87ff30da9b85d5f4cd4ee159c38f57ff5edcc15", "filename": "libf2c/libF77/d_acos.c", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibF77%2Fd_acos.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibF77%2Fd_acos.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibF77%2Fd_acos.c?ref=4d85a6fea685603493f2a4dbcfd36d6fd25fbe26", "patch": "@@ -1,13 +1,8 @@\n #include \"f2c.h\"\n \n-#ifdef KR_headers\n-double acos();\n-double d_acos(x) doublereal *x;\n-#else\n #undef abs\n #include <math.h>\n double d_acos(doublereal *x)\n-#endif\n {\n return( acos(*x) );\n }"}, {"sha": "ea2815ace70f25c0246a6dc2f988021d729473e5", "filename": "libf2c/libF77/d_asin.c", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibF77%2Fd_asin.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibF77%2Fd_asin.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibF77%2Fd_asin.c?ref=4d85a6fea685603493f2a4dbcfd36d6fd25fbe26", "patch": "@@ -1,13 +1,8 @@\n #include \"f2c.h\"\n \n-#ifdef KR_headers\n-double asin();\n-double d_asin(x) doublereal *x;\n-#else\n #undef abs\n #include <math.h>\n double d_asin(doublereal *x)\n-#endif\n {\n return( asin(*x) );\n }"}, {"sha": "d1624fd4f1e8385d416a92d6b320e7dbd80b62ad", "filename": "libf2c/libF77/d_atan.c", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibF77%2Fd_atan.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibF77%2Fd_atan.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibF77%2Fd_atan.c?ref=4d85a6fea685603493f2a4dbcfd36d6fd25fbe26", "patch": "@@ -1,13 +1,8 @@\n #include \"f2c.h\"\n \n-#ifdef KR_headers\n-double atan();\n-double d_atan(x) doublereal *x;\n-#else\n #undef abs\n #include <math.h>\n double d_atan(doublereal *x)\n-#endif\n {\n return( atan(*x) );\n }"}, {"sha": "9a6ff8c4c56590968921e353f89e0f146d32c88b", "filename": "libf2c/libF77/d_atn2.c", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibF77%2Fd_atn2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibF77%2Fd_atn2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibF77%2Fd_atn2.c?ref=4d85a6fea685603493f2a4dbcfd36d6fd25fbe26", "patch": "@@ -1,13 +1,8 @@\n #include \"f2c.h\"\n \n-#ifdef KR_headers\n-double atan2();\n-double d_atn2(x,y) doublereal *x, *y;\n-#else\n #undef abs\n #include <math.h>\n double d_atn2(doublereal *x, doublereal *y)\n-#endif\n {\n return( atan2(*x,*y) );\n }"}, {"sha": "b8027780fb7e3c0ca72a392b1cf4f7865678b613", "filename": "libf2c/libF77/d_cnjg.c", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibF77%2Fd_cnjg.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibF77%2Fd_cnjg.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibF77%2Fd_cnjg.c?ref=4d85a6fea685603493f2a4dbcfd36d6fd25fbe26", "patch": "@@ -1,11 +1,7 @@\n #include \"f2c.h\"\n \n  VOID\n-#ifdef KR_headers\n-d_cnjg(r, z) doublecomplex *r, *z;\n-#else\n d_cnjg(doublecomplex *r, doublecomplex *z)\n-#endif\n {\n \tdoublereal zi = z->i;\n \tr->r = z->r;"}, {"sha": "83f9198028a2e40c5f68dafd788a560dc58e2a8a", "filename": "libf2c/libF77/d_cos.c", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibF77%2Fd_cos.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibF77%2Fd_cos.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibF77%2Fd_cos.c?ref=4d85a6fea685603493f2a4dbcfd36d6fd25fbe26", "patch": "@@ -1,13 +1,8 @@\n #include \"f2c.h\"\n \n-#ifdef KR_headers\n-double cos();\n-double d_cos(x) doublereal *x;\n-#else\n #undef abs\n #include <math.h>\n double d_cos(doublereal *x)\n-#endif\n {\n return( cos(*x) );\n }"}, {"sha": "c1bffcb0bad196d667756e48ed2f0c5e70df10ac", "filename": "libf2c/libF77/d_cosh.c", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibF77%2Fd_cosh.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibF77%2Fd_cosh.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibF77%2Fd_cosh.c?ref=4d85a6fea685603493f2a4dbcfd36d6fd25fbe26", "patch": "@@ -1,13 +1,8 @@\n #include \"f2c.h\"\n \n-#ifdef KR_headers\n-double cosh();\n-double d_cosh(x) doublereal *x;\n-#else\n #undef abs\n #include <math.h>\n double d_cosh(doublereal *x)\n-#endif\n {\n return( cosh(*x) );\n }"}, {"sha": "a52ba7642edfe4d14ec89f04d481184c851ca15a", "filename": "libf2c/libF77/d_dim.c", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibF77%2Fd_dim.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibF77%2Fd_dim.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibF77%2Fd_dim.c?ref=4d85a6fea685603493f2a4dbcfd36d6fd25fbe26", "patch": "@@ -1,10 +1,6 @@\n #include \"f2c.h\"\n \n-#ifdef KR_headers\n-double d_dim(a,b) doublereal *a, *b;\n-#else\n double d_dim(doublereal *a, doublereal *b)\n-#endif\n {\n return( *a > *b ? *a - *b : 0);\n }"}, {"sha": "b4afe87d01f54097767a085e310008bdc0a874bf", "filename": "libf2c/libF77/d_exp.c", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibF77%2Fd_exp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibF77%2Fd_exp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibF77%2Fd_exp.c?ref=4d85a6fea685603493f2a4dbcfd36d6fd25fbe26", "patch": "@@ -1,13 +1,8 @@\n #include \"f2c.h\"\n \n-#ifdef KR_headers\n-double exp();\n-double d_exp(x) doublereal *x;\n-#else\n #undef abs\n #include <math.h>\n double d_exp(doublereal *x)\n-#endif\n {\n return( exp(*x) );\n }"}, {"sha": "a53d00c05998648f8ac52dccdc9b362b21aac090", "filename": "libf2c/libF77/d_imag.c", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibF77%2Fd_imag.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibF77%2Fd_imag.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibF77%2Fd_imag.c?ref=4d85a6fea685603493f2a4dbcfd36d6fd25fbe26", "patch": "@@ -1,10 +1,6 @@\n #include \"f2c.h\"\n \n-#ifdef KR_headers\n-double d_imag(z) doublecomplex *z;\n-#else\n double d_imag(doublecomplex *z)\n-#endif\n {\n return(z->i);\n }"}, {"sha": "dca077cab4e9137454596a1bfa62f21f72b51f30", "filename": "libf2c/libF77/d_int.c", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibF77%2Fd_int.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibF77%2Fd_int.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibF77%2Fd_int.c?ref=4d85a6fea685603493f2a4dbcfd36d6fd25fbe26", "patch": "@@ -1,13 +1,8 @@\n #include \"f2c.h\"\n \n-#ifdef KR_headers\n-double floor();\n-double d_int(x) doublereal *x;\n-#else\n #undef abs\n #include <math.h>\n double d_int(doublereal *x)\n-#endif\n {\n return( (*x>0) ? floor(*x) : -floor(- *x) );\n }"}, {"sha": "32824b88df0f65c5e35bb458d6885e50fc544a79", "filename": "libf2c/libF77/d_lg10.c", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibF77%2Fd_lg10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibF77%2Fd_lg10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibF77%2Fd_lg10.c?ref=4d85a6fea685603493f2a4dbcfd36d6fd25fbe26", "patch": "@@ -2,14 +2,9 @@\n \n #define log10e 0.43429448190325182765\n \n-#ifdef KR_headers\n-double log();\n-double d_lg10(x) doublereal *x;\n-#else\n #undef abs\n #include <math.h>\n double d_lg10(doublereal *x)\n-#endif\n {\n return( log10e * log(*x) );\n }"}, {"sha": "50bbefd93c1734b30d139b22954049e617e03fe8", "filename": "libf2c/libF77/d_log.c", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibF77%2Fd_log.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibF77%2Fd_log.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibF77%2Fd_log.c?ref=4d85a6fea685603493f2a4dbcfd36d6fd25fbe26", "patch": "@@ -1,13 +1,8 @@\n #include \"f2c.h\"\n \n-#ifdef KR_headers\n-double log();\n-double d_log(x) doublereal *x;\n-#else\n #undef abs\n #include <math.h>\n double d_log(doublereal *x)\n-#endif\n {\n return( log(*x) );\n }"}, {"sha": "bbc24ad6547bcc8215a9e8a6de9319ae0fa70594", "filename": "libf2c/libF77/d_mod.c", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibF77%2Fd_mod.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibF77%2Fd_mod.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibF77%2Fd_mod.c?ref=4d85a6fea685603493f2a4dbcfd36d6fd25fbe26", "patch": "@@ -1,21 +1,12 @@\n #include \"f2c.h\"\n \n-#ifdef KR_headers\n-#ifdef IEEE_drem\n-double drem();\n-#else\n-double floor();\n-#endif\n-double d_mod(x,y) doublereal *x, *y;\n-#else\n #ifdef IEEE_drem\n double drem(double, double);\n #else\n #undef abs\n #include <math.h>\n #endif\n double d_mod(doublereal *x, doublereal *y)\n-#endif\n {\n #ifdef IEEE_drem\n \tdouble xa, ya, z;"}, {"sha": "b74a15f99de9227596c77807b585420a03f6a48d", "filename": "libf2c/libF77/d_nint.c", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibF77%2Fd_nint.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibF77%2Fd_nint.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibF77%2Fd_nint.c?ref=4d85a6fea685603493f2a4dbcfd36d6fd25fbe26", "patch": "@@ -1,13 +1,8 @@\n #include \"f2c.h\"\n \n-#ifdef KR_headers\n-double floor();\n-double d_nint(x) doublereal *x;\n-#else\n #undef abs\n #include <math.h>\n double d_nint(doublereal *x)\n-#endif\n {\n return( (*x)>=0 ?\n \tfloor(*x + .5) : -floor(.5 - *x) );"}, {"sha": "b39580fa502ec99fee7f32fdc4d27ad0aba77ed6", "filename": "libf2c/libF77/d_prod.c", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibF77%2Fd_prod.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibF77%2Fd_prod.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibF77%2Fd_prod.c?ref=4d85a6fea685603493f2a4dbcfd36d6fd25fbe26", "patch": "@@ -1,10 +1,6 @@\n #include \"f2c.h\"\n \n-#ifdef KR_headers\n-double d_prod(x,y) real *x, *y;\n-#else\n double d_prod(real *x, real *y)\n-#endif\n {\n return( (*x) * (*y) );\n }"}, {"sha": "c77d843bada4c9e15c7432c4c3d327d91146872b", "filename": "libf2c/libF77/d_sign.c", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibF77%2Fd_sign.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibF77%2Fd_sign.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibF77%2Fd_sign.c?ref=4d85a6fea685603493f2a4dbcfd36d6fd25fbe26", "patch": "@@ -1,10 +1,6 @@\n #include \"f2c.h\"\n \n-#ifdef KR_headers\n-double d_sign(a,b) doublereal *a, *b;\n-#else\n double d_sign(doublereal *a, doublereal *b)\n-#endif\n {\n double x;\n x = (*a >= 0 ? *a : - *a);"}, {"sha": "ed51ebd53e021b45c9cf43e8012940bb928d554f", "filename": "libf2c/libF77/d_sin.c", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibF77%2Fd_sin.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibF77%2Fd_sin.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibF77%2Fd_sin.c?ref=4d85a6fea685603493f2a4dbcfd36d6fd25fbe26", "patch": "@@ -1,13 +1,8 @@\n #include \"f2c.h\"\n \n-#ifdef KR_headers\n-double sin();\n-double d_sin(x) doublereal *x;\n-#else\n #undef abs\n #include <math.h>\n double d_sin(doublereal *x)\n-#endif\n {\n return( sin(*x) );\n }"}, {"sha": "b691dc0f1388cf4205ba325f83e7e0c9fedb3572", "filename": "libf2c/libF77/d_sinh.c", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibF77%2Fd_sinh.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibF77%2Fd_sinh.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibF77%2Fd_sinh.c?ref=4d85a6fea685603493f2a4dbcfd36d6fd25fbe26", "patch": "@@ -1,13 +1,8 @@\n #include \"f2c.h\"\n \n-#ifdef KR_headers\n-double sinh();\n-double d_sinh(x) doublereal *x;\n-#else\n #undef abs\n #include <math.h>\n double d_sinh(doublereal *x)\n-#endif\n {\n return( sinh(*x) );\n }"}, {"sha": "760a524f80f4b8c0a6c3c7b0f1cad93905098ce7", "filename": "libf2c/libF77/d_sqrt.c", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibF77%2Fd_sqrt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibF77%2Fd_sqrt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibF77%2Fd_sqrt.c?ref=4d85a6fea685603493f2a4dbcfd36d6fd25fbe26", "patch": "@@ -1,13 +1,8 @@\n #include \"f2c.h\"\n \n-#ifdef KR_headers\n-double sqrt();\n-double d_sqrt(x) doublereal *x;\n-#else\n #undef abs\n #include <math.h>\n double d_sqrt(doublereal *x)\n-#endif\n {\n return( sqrt(*x) );\n }"}, {"sha": "a93e58b0a190a81b280678eb5a49b0fc958241f8", "filename": "libf2c/libF77/d_tan.c", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibF77%2Fd_tan.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibF77%2Fd_tan.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibF77%2Fd_tan.c?ref=4d85a6fea685603493f2a4dbcfd36d6fd25fbe26", "patch": "@@ -1,13 +1,8 @@\n #include \"f2c.h\"\n \n-#ifdef KR_headers\n-double tan();\n-double d_tan(x) doublereal *x;\n-#else\n #undef abs\n #include <math.h>\n double d_tan(doublereal *x)\n-#endif\n {\n return( tan(*x) );\n }"}, {"sha": "06c44d00497f92cb492648785fd9b4a10aa27b52", "filename": "libf2c/libF77/d_tanh.c", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibF77%2Fd_tanh.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibF77%2Fd_tanh.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibF77%2Fd_tanh.c?ref=4d85a6fea685603493f2a4dbcfd36d6fd25fbe26", "patch": "@@ -1,13 +1,8 @@\n #include \"f2c.h\"\n \n-#ifdef KR_headers\n-double tanh();\n-double d_tanh(x) doublereal *x;\n-#else\n #undef abs\n #include <math.h>\n double d_tanh(doublereal *x)\n-#endif\n {\n return( tanh(*x) );\n }"}, {"sha": "cc41913441c6d95dc54c8832b2833aa6f9af9583", "filename": "libf2c/libF77/derf_.c", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibF77%2Fderf_.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibF77%2Fderf_.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibF77%2Fderf_.c?ref=4d85a6fea685603493f2a4dbcfd36d6fd25fbe26", "patch": "@@ -1,12 +1,7 @@\n #include \"f2c.h\"\n \n-#ifdef KR_headers\n-double erf();\n-double G77_derf_0 (x) doublereal *x;\n-#else\n extern double erf(double);\n double G77_derf_0 (doublereal *x)\n-#endif\n {\n return( erf(*x) );\n }"}, {"sha": "0be115912a6228d384dee815cf5a35505df4ccfb", "filename": "libf2c/libF77/derfc_.c", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibF77%2Fderfc_.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibF77%2Fderfc_.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibF77%2Fderfc_.c?ref=4d85a6fea685603493f2a4dbcfd36d6fd25fbe26", "patch": "@@ -1,14 +1,8 @@\n #include \"f2c.h\"\n \n-#ifdef KR_headers\n-extern double erfc();\n-\n-double G77_derfc_0 (x) doublereal *x;\n-#else\n extern double erfc(double);\n \n double G77_derfc_0 (doublereal *x)\n-#endif\n {\n return( erfc(*x) );\n }"}, {"sha": "9d5abf69dcf5659967c9b847874de0ac4350381a", "filename": "libf2c/libF77/dtime_.c", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibF77%2Fdtime_.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibF77%2Fdtime_.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibF77%2Fdtime_.c?ref=4d85a6fea685603493f2a4dbcfd36d6fd25fbe26", "patch": "@@ -24,11 +24,7 @@\n #endif\n \n  double\n-#ifdef KR_headers\n-dtime_(tarray) float *tarray;\n-#else\n dtime_(float *tarray)\n-#endif\n {\n #ifdef USE_CLOCK\n #ifndef CLOCKS_PER_SECOND"}, {"sha": "2e12423196faaadb6d0d278b509b26f64dd51ddf", "filename": "libf2c/libF77/ef1asc_.c", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibF77%2Fef1asc_.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibF77%2Fef1asc_.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibF77%2Fef1asc_.c?ref=4d85a6fea685603493f2a4dbcfd36d6fd25fbe26", "patch": "@@ -6,13 +6,8 @@\n #define M\t( (long) (sizeof(long) - 1) )\n #define EVEN(x)\t( ( (x)+ M) & (~M) )\n \n-#ifdef KR_headers\n-extern VOID s_copy();\n-G77_ef1asc_0 (a, la, b, lb) ftnint *a, *b; ftnlen *la, *lb;\n-#else\n extern void s_copy(char*,char*,ftnlen,ftnlen);\n int G77_ef1asc_0 (ftnint *a, ftnlen *la, ftnint *b, ftnlen *lb)\n-#endif\n {\n s_copy( (char *)a, (char *)b, EVEN(*la), *lb );\n return 0;\t/* ignored return value */"}, {"sha": "79eabdf39b1964a18205a6b8336f0f38a11482d8", "filename": "libf2c/libF77/ef1cmc_.c", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibF77%2Fef1cmc_.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibF77%2Fef1cmc_.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibF77%2Fef1cmc_.c?ref=4d85a6fea685603493f2a4dbcfd36d6fd25fbe26", "patch": "@@ -2,13 +2,8 @@\n \n #include \"f2c.h\"\n \n-#ifdef KR_headers\n-extern integer s_cmp();\n-integer G77_ef1cmc_0 (a, la, b, lb) ftnint *a, *b; ftnlen *la, *lb;\n-#else\n extern integer s_cmp(char*,char*,ftnlen,ftnlen);\n integer G77_ef1cmc_0 (ftnint *a, ftnlen *la, ftnint *b, ftnlen *lb)\n-#endif\n {\n return( s_cmp( (char *)a, (char *)b, *la, *lb) );\n }"}, {"sha": "e8a90edacf401d1b6f38f3b0b3c097199dc65b05", "filename": "libf2c/libF77/erf_.c", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibF77%2Ferf_.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibF77%2Ferf_.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibF77%2Ferf_.c?ref=4d85a6fea685603493f2a4dbcfd36d6fd25fbe26", "patch": "@@ -1,12 +1,7 @@\n #include \"f2c.h\"\n \n-#ifdef KR_headers\n-double erf();\n-double G77_erf_0 (x) real *x;\n-#else\n extern double erf(double);\n double G77_erf_0 (real *x)\n-#endif\n {\n return( erf(*x) );\n }"}, {"sha": "5f7247932451212803a8036c5e5242b6d8518a57", "filename": "libf2c/libF77/erfc_.c", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibF77%2Ferfc_.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibF77%2Ferfc_.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibF77%2Ferfc_.c?ref=4d85a6fea685603493f2a4dbcfd36d6fd25fbe26", "patch": "@@ -1,12 +1,7 @@\n #include \"f2c.h\"\n \n-#ifdef KR_headers\n-double erfc();\n-double G77_erfc_0 (x) real *x;\n-#else\n extern double erfc(double);\n double G77_erfc_0 (real *x)\n-#endif\n {\n return( erfc(*x) );\n }"}, {"sha": "48a8f6b347ccc4dbb730ed601a8844be9d400ce0", "filename": "libf2c/libF77/etime_.c", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibF77%2Fetime_.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibF77%2Fetime_.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibF77%2Fetime_.c?ref=4d85a6fea685603493f2a4dbcfd36d6fd25fbe26", "patch": "@@ -24,11 +24,7 @@\n #endif\n \n  double\n-#ifdef KR_headers\n-etime_(tarray) float *tarray;\n-#else\n etime_(float *tarray)\n-#endif\n {\n #ifdef USE_CLOCK\n #ifndef CLOCKS_PER_SECOND"}, {"sha": "7c361dbd05d163a0e733751b1afbfb99abdc82e5", "filename": "libf2c/libF77/exit_.c", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibF77%2Fexit_.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibF77%2Fexit_.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibF77%2Fexit_.c?ref=4d85a6fea685603493f2a4dbcfd36d6fd25fbe26", "patch": "@@ -12,20 +12,14 @@\n #undef abs\n #undef min\n #undef max\n-#ifndef KR_headers\n #include <stdlib.h>\n #ifdef __cplusplus\n extern \"C\" {\n #endif\n extern void f_exit(void);\n-#endif\n \n  void\n-#ifdef KR_headers\n-G77_exit_0 (rc) integer *rc;\n-#else\n G77_exit_0 (integer *rc)\n-#endif\n {\n #ifdef NO_ONEXIT\n \tf_exit();"}, {"sha": "c873596bde85732f410db6613ea1bf65b716ae84", "filename": "libf2c/libF77/getarg_.c", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibF77%2Fgetarg_.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibF77%2Fgetarg_.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibF77%2Fgetarg_.c?ref=4d85a6fea685603493f2a4dbcfd36d6fd25fbe26", "patch": "@@ -6,11 +6,7 @@\n  * variable argument c\n */\n \n-#ifdef KR_headers\n-VOID G77_getarg_0 (n, s, ls) ftnint *n; register char *s; ftnlen ls;\n-#else\n void G77_getarg_0 (ftnint *n, register char *s, ftnlen ls)\n-#endif\n {\n extern int f__xargc;\n extern char **f__xargv;"}, {"sha": "a1654ef0d3b555e5695afcf3a240eae9cacfd943", "filename": "libf2c/libF77/getenv_.c", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibF77%2Fgetenv_.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibF77%2Fgetenv_.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibF77%2Fgetenv_.c?ref=4d85a6fea685603493f2a4dbcfd36d6fd25fbe26", "patch": "@@ -1,12 +1,8 @@\n #include \"f2c.h\"\n #undef abs\n-#ifdef KR_headers\n-extern char *F77_aloc(), *getenv();\n-#else\n #include <stdlib.h>\n #include <string.h>\n extern char *F77_aloc(ftnlen, char*);\n-#endif\n \n /*\n  * getenv - f77 subroutine to return environment variables\n@@ -20,13 +16,8 @@ extern char *F77_aloc(ftnlen, char*);\n  *\t\tif ENV_NAME is not defined\n  */\n \n-#ifdef KR_headers\n- VOID\n-G77_getenv_0 (fname, value, flen, vlen) char *value, *fname; ftnlen vlen, flen;\n-#else\n  void\n G77_getenv_0 (char *fname, char *value, ftnlen flen, ftnlen vlen)\n-#endif\n {\n \tchar buf[256], *ep, *fp;\n \tinteger i;"}, {"sha": "e5f4d6b3b284b0d949ce11cfdfd9dd9b0050f594", "filename": "libf2c/libF77/h_abs.c", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibF77%2Fh_abs.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibF77%2Fh_abs.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibF77%2Fh_abs.c?ref=4d85a6fea685603493f2a4dbcfd36d6fd25fbe26", "patch": "@@ -1,10 +1,6 @@\n #include \"f2c.h\"\n \n-#ifdef KR_headers\n-shortint h_abs(x) shortint *x;\n-#else\n shortint h_abs(shortint *x)\n-#endif\n {\n if(*x >= 0)\n \treturn(*x);"}, {"sha": "04cf55d10599338bb1ef454303bead2f25a9902c", "filename": "libf2c/libF77/h_dim.c", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibF77%2Fh_dim.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibF77%2Fh_dim.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibF77%2Fh_dim.c?ref=4d85a6fea685603493f2a4dbcfd36d6fd25fbe26", "patch": "@@ -1,10 +1,6 @@\n #include \"f2c.h\"\n \n-#ifdef KR_headers\n-shortint h_dim(a,b) shortint *a, *b;\n-#else\n shortint h_dim(shortint *a, shortint *b)\n-#endif\n {\n return( *a > *b ? *a - *b : 0);\n }"}, {"sha": "651d05c5679443da52517ac998024c315e7870bf", "filename": "libf2c/libF77/h_dnnt.c", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibF77%2Fh_dnnt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibF77%2Fh_dnnt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibF77%2Fh_dnnt.c?ref=4d85a6fea685603493f2a4dbcfd36d6fd25fbe26", "patch": "@@ -1,13 +1,8 @@\n #include \"f2c.h\"\n \n-#ifdef KR_headers\n-double floor();\n-shortint h_dnnt(x) doublereal *x;\n-#else\n #undef abs\n #include <math.h>\n shortint h_dnnt(doublereal *x)\n-#endif\n {\n return (shortint)(*x >= 0. ? floor(*x + .5) : -floor(.5 - *x));\n }"}, {"sha": "a78c8733bdf6f48abc57157c336ac2056b207a89", "filename": "libf2c/libF77/h_indx.c", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibF77%2Fh_indx.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibF77%2Fh_indx.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibF77%2Fh_indx.c?ref=4d85a6fea685603493f2a4dbcfd36d6fd25fbe26", "patch": "@@ -1,10 +1,6 @@\n #include \"f2c.h\"\n \n-#ifdef KR_headers\n-shortint h_indx(a, b, la, lb) char *a, *b; ftnlen la, lb;\n-#else\n shortint h_indx(char *a, char *b, ftnlen la, ftnlen lb)\n-#endif\n {\n ftnlen i, n;\n char *s, *t, *bend;"}, {"sha": "8c63116d1b90ae14a3e2e5743d9598764325201f", "filename": "libf2c/libF77/h_len.c", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibF77%2Fh_len.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibF77%2Fh_len.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibF77%2Fh_len.c?ref=4d85a6fea685603493f2a4dbcfd36d6fd25fbe26", "patch": "@@ -1,10 +1,6 @@\n #include \"f2c.h\"\n \n-#ifdef KR_headers\n-shortint h_len(s, n) char *s; ftnlen n;\n-#else\n shortint h_len(char *s, ftnlen n)\n-#endif\n {\n return(n);\n }"}, {"sha": "998ada752adc8c176b1784854d688e40aba8cdf2", "filename": "libf2c/libF77/h_mod.c", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibF77%2Fh_mod.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibF77%2Fh_mod.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibF77%2Fh_mod.c?ref=4d85a6fea685603493f2a4dbcfd36d6fd25fbe26", "patch": "@@ -1,10 +1,6 @@\n #include \"f2c.h\"\n \n-#ifdef KR_headers\n-shortint h_mod(a,b) short *a, *b;\n-#else\n shortint h_mod(short *a, short *b)\n-#endif\n {\n return( *a % *b);\n }"}, {"sha": "bdfee6420150257bc51c5bf2b18c19e3a8c08b86", "filename": "libf2c/libF77/h_nint.c", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibF77%2Fh_nint.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibF77%2Fh_nint.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibF77%2Fh_nint.c?ref=4d85a6fea685603493f2a4dbcfd36d6fd25fbe26", "patch": "@@ -1,13 +1,8 @@\n #include \"f2c.h\"\n \n-#ifdef KR_headers\n-double floor();\n-shortint h_nint(x) real *x;\n-#else\n #undef abs\n #include <math.h>\n shortint h_nint(real *x)\n-#endif\n {\n return (shortint)(*x >= 0 ? floor(*x + .5) : -floor(.5 - *x));\n }"}, {"sha": "7efc7cab59c1713b2042140decef61a36c78f749", "filename": "libf2c/libF77/h_sign.c", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibF77%2Fh_sign.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibF77%2Fh_sign.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibF77%2Fh_sign.c?ref=4d85a6fea685603493f2a4dbcfd36d6fd25fbe26", "patch": "@@ -1,10 +1,6 @@\n #include \"f2c.h\"\n \n-#ifdef KR_headers\n-shortint h_sign(a,b) shortint *a, *b;\n-#else\n shortint h_sign(shortint *a, shortint *b)\n-#endif\n {\n shortint x;\n x = (*a >= 0 ? *a : - *a);"}, {"sha": "2415216eaf9468817845b3c0e4b90a3d3b920249", "filename": "libf2c/libF77/hl_ge.c", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibF77%2Fhl_ge.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibF77%2Fhl_ge.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibF77%2Fhl_ge.c?ref=4d85a6fea685603493f2a4dbcfd36d6fd25fbe26", "patch": "@@ -1,12 +1,7 @@\n #include \"f2c.h\"\n \n-#ifdef KR_headers\n-extern integer s_cmp();\n-shortlogical hl_ge(a,b,la,lb) char *a, *b; ftnlen la, lb;\n-#else\n extern integer s_cmp(char *, char *, ftnlen, ftnlen);\n shortlogical hl_ge(char *a, char *b, ftnlen la, ftnlen lb)\n-#endif\n {\n return(s_cmp(a,b,la,lb) >= 0);\n }"}, {"sha": "bf5c4208bec53cfdaa9ccaf46d3cea63a90de43c", "filename": "libf2c/libF77/hl_gt.c", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibF77%2Fhl_gt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibF77%2Fhl_gt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibF77%2Fhl_gt.c?ref=4d85a6fea685603493f2a4dbcfd36d6fd25fbe26", "patch": "@@ -1,12 +1,7 @@\n #include \"f2c.h\"\n \n-#ifdef KR_headers\n-extern integer s_cmp();\n-shortlogical hl_gt(a,b,la,lb) char *a, *b; ftnlen la, lb;\n-#else\n extern integer s_cmp(char *, char *, ftnlen, ftnlen);\n shortlogical hl_gt(char *a, char *b, ftnlen la, ftnlen lb)\n-#endif\n {\n return(s_cmp(a,b,la,lb) > 0);\n }"}, {"sha": "cb6fe05f6249aae0c3db7c79d6e134531b961071", "filename": "libf2c/libF77/hl_le.c", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibF77%2Fhl_le.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibF77%2Fhl_le.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibF77%2Fhl_le.c?ref=4d85a6fea685603493f2a4dbcfd36d6fd25fbe26", "patch": "@@ -1,12 +1,7 @@\n #include \"f2c.h\"\n \n-#ifdef KR_headers\n-extern integer s_cmp();\n-shortlogical hl_le(a,b,la,lb) char *a, *b; ftnlen la, lb;\n-#else\n extern integer s_cmp(char *, char *, ftnlen, ftnlen);\n shortlogical hl_le(char *a, char *b, ftnlen la, ftnlen lb)\n-#endif\n {\n return(s_cmp(a,b,la,lb) <= 0);\n }"}, {"sha": "f774c71e155975997a454254a772601ab328b0a8", "filename": "libf2c/libF77/hl_lt.c", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibF77%2Fhl_lt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibF77%2Fhl_lt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibF77%2Fhl_lt.c?ref=4d85a6fea685603493f2a4dbcfd36d6fd25fbe26", "patch": "@@ -1,12 +1,7 @@\n #include \"f2c.h\"\n \n-#ifdef KR_headers\n-extern integer s_cmp();\n-shortlogical hl_lt(a,b,la,lb) char *a, *b; ftnlen la, lb;\n-#else\n extern integer s_cmp(char *, char *, ftnlen, ftnlen);\n shortlogical hl_lt(char *a, char *b, ftnlen la, ftnlen lb)\n-#endif\n {\n return(s_cmp(a,b,la,lb) < 0);\n }"}, {"sha": "2f96f5c78380c8568bfb6266b9b3ca7da868a4d0", "filename": "libf2c/libF77/i_abs.c", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibF77%2Fi_abs.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibF77%2Fi_abs.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibF77%2Fi_abs.c?ref=4d85a6fea685603493f2a4dbcfd36d6fd25fbe26", "patch": "@@ -1,10 +1,6 @@\n #include \"f2c.h\"\n \n-#ifdef KR_headers\n-integer i_abs(x) integer *x;\n-#else\n integer i_abs(integer *x)\n-#endif\n {\n if(*x >= 0)\n \treturn(*x);"}, {"sha": "68e8a3df079777b119fc06bdae7a23a24a75a147", "filename": "libf2c/libF77/i_dim.c", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibF77%2Fi_dim.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibF77%2Fi_dim.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibF77%2Fi_dim.c?ref=4d85a6fea685603493f2a4dbcfd36d6fd25fbe26", "patch": "@@ -1,10 +1,6 @@\n #include \"f2c.h\"\n \n-#ifdef KR_headers\n-integer i_dim(a,b) integer *a, *b;\n-#else\n integer i_dim(integer *a, integer *b)\n-#endif\n {\n return( *a > *b ? *a - *b : 0);\n }"}, {"sha": "ed4fdff8086fa3e935ef77553437ff6a2285da07", "filename": "libf2c/libF77/i_dnnt.c", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibF77%2Fi_dnnt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibF77%2Fi_dnnt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibF77%2Fi_dnnt.c?ref=4d85a6fea685603493f2a4dbcfd36d6fd25fbe26", "patch": "@@ -1,13 +1,8 @@\n #include \"f2c.h\"\n \n-#ifdef KR_headers\n-double floor();\n-integer i_dnnt(x) doublereal *x;\n-#else\n #undef abs\n #include <math.h>\n integer i_dnnt(doublereal *x)\n-#endif\n {\n return (integer)(*x >= 0. ? floor(*x + .5) : -floor(.5 - *x));\n }"}, {"sha": "92c44aabcf9fc833bb0e354012e032bae18b998b", "filename": "libf2c/libF77/i_indx.c", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibF77%2Fi_indx.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibF77%2Fi_indx.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibF77%2Fi_indx.c?ref=4d85a6fea685603493f2a4dbcfd36d6fd25fbe26", "patch": "@@ -1,10 +1,6 @@\n #include \"f2c.h\"\n \n-#ifdef KR_headers\n-integer i_indx(a, b, la, lb) char *a, *b; ftnlen la, lb;\n-#else\n integer i_indx(char *a, char *b, ftnlen la, ftnlen lb)\n-#endif\n {\n ftnlen i, n;\n char *s, *t, *bend;"}, {"sha": "0e9cfb72a43540f56698e3ceb5c4e104a00c92af", "filename": "libf2c/libF77/i_len.c", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibF77%2Fi_len.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibF77%2Fi_len.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibF77%2Fi_len.c?ref=4d85a6fea685603493f2a4dbcfd36d6fd25fbe26", "patch": "@@ -1,10 +1,6 @@\n #include \"f2c.h\"\n \n-#ifdef KR_headers\n-integer i_len(s, n) char *s; ftnlen n;\n-#else\n integer i_len(char *s, ftnlen n)\n-#endif\n {\n return(n);\n }"}, {"sha": "2e574f71415f697c4438f4395d30f7fc151fe634", "filename": "libf2c/libF77/i_mod.c", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibF77%2Fi_mod.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibF77%2Fi_mod.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibF77%2Fi_mod.c?ref=4d85a6fea685603493f2a4dbcfd36d6fd25fbe26", "patch": "@@ -1,10 +1,6 @@\n #include \"f2c.h\"\n \n-#ifdef KR_headers\n-integer i_mod(a,b) integer *a, *b;\n-#else\n integer i_mod(integer *a, integer *b)\n-#endif\n {\n return( *a % *b);\n }"}, {"sha": "2698d5f5074735a725f4ab1168dc96be5c201064", "filename": "libf2c/libF77/i_nint.c", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibF77%2Fi_nint.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibF77%2Fi_nint.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibF77%2Fi_nint.c?ref=4d85a6fea685603493f2a4dbcfd36d6fd25fbe26", "patch": "@@ -1,13 +1,8 @@\n #include \"f2c.h\"\n \n-#ifdef KR_headers\n-double floor();\n-integer i_nint(x) real *x;\n-#else\n #undef abs\n #include <math.h>\n integer i_nint(real *x)\n-#endif\n {\n return (integer)(*x >= 0 ? floor(*x + .5) : -floor(.5 - *x));\n }"}, {"sha": "1db4729126b0a87790ff350e6a0cbe4903ad02c5", "filename": "libf2c/libF77/i_sign.c", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibF77%2Fi_sign.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibF77%2Fi_sign.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibF77%2Fi_sign.c?ref=4d85a6fea685603493f2a4dbcfd36d6fd25fbe26", "patch": "@@ -1,10 +1,6 @@\n #include \"f2c.h\"\n \n-#ifdef KR_headers\n-integer i_sign(a,b) integer *a, *b;\n-#else\n integer i_sign(integer *a, integer *b)\n-#endif\n {\n integer x;\n x = (*a >= 0 ? *a : - *a);"}, {"sha": "a57c25711d1262a695ef703c1f4f87f6743f1055", "filename": "libf2c/libF77/iargc_.c", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibF77%2Fiargc_.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibF77%2Fiargc_.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibF77%2Fiargc_.c?ref=4d85a6fea685603493f2a4dbcfd36d6fd25fbe26", "patch": "@@ -1,10 +1,6 @@\n #include \"f2c.h\"\n \n-#ifdef KR_headers\n-ftnint G77_iargc_0 ()\n-#else\n ftnint G77_iargc_0 (void)\n-#endif\n {\n extern int f__xargc;\n return ( f__xargc - 1 );"}, {"sha": "ffa2faaad4ab90663a1ab7f0c93bbe3cdbff737d", "filename": "libf2c/libF77/l_ge.c", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibF77%2Fl_ge.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibF77%2Fl_ge.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibF77%2Fl_ge.c?ref=4d85a6fea685603493f2a4dbcfd36d6fd25fbe26", "patch": "@@ -1,12 +1,7 @@\n #include \"f2c.h\"\n \n-#ifdef KR_headers\n-extern integer s_cmp();\n-logical l_ge(a,b,la,lb) char *a, *b; ftnlen la, lb;\n-#else\n extern integer s_cmp(char *, char *, ftnlen, ftnlen);\n logical l_ge(char *a, char *b, ftnlen la, ftnlen lb)\n-#endif\n {\n return(s_cmp(a,b,la,lb) >= 0);\n }"}, {"sha": "e0d314407a94b62c6e5621423d0d7bf423ec554e", "filename": "libf2c/libF77/l_gt.c", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibF77%2Fl_gt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibF77%2Fl_gt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibF77%2Fl_gt.c?ref=4d85a6fea685603493f2a4dbcfd36d6fd25fbe26", "patch": "@@ -1,12 +1,7 @@\n #include \"f2c.h\"\n \n-#ifdef KR_headers\n-extern integer s_cmp();\n-logical l_gt(a,b,la,lb) char *a, *b; ftnlen la, lb;\n-#else\n extern integer s_cmp(char *, char *, ftnlen, ftnlen);\n logical l_gt(char *a, char *b, ftnlen la, ftnlen lb)\n-#endif\n {\n return(s_cmp(a,b,la,lb) > 0);\n }"}, {"sha": "d3e9de82c0fa2ff273f7d85318ae269f3408b240", "filename": "libf2c/libF77/l_le.c", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibF77%2Fl_le.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibF77%2Fl_le.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibF77%2Fl_le.c?ref=4d85a6fea685603493f2a4dbcfd36d6fd25fbe26", "patch": "@@ -1,12 +1,7 @@\n #include \"f2c.h\"\n \n-#ifdef KR_headers\n-extern integer s_cmp();\n-logical l_le(a,b,la,lb) char *a, *b; ftnlen la, lb;\n-#else\n extern integer s_cmp(char *, char *, ftnlen, ftnlen);\n logical l_le(char *a, char *b, ftnlen la, ftnlen lb)\n-#endif\n {\n return(s_cmp(a,b,la,lb) <= 0);\n }"}, {"sha": "df28ec09c5f8d112d11e1764dc3c4cef5df07597", "filename": "libf2c/libF77/l_lt.c", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibF77%2Fl_lt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibF77%2Fl_lt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibF77%2Fl_lt.c?ref=4d85a6fea685603493f2a4dbcfd36d6fd25fbe26", "patch": "@@ -1,12 +1,7 @@\n #include \"f2c.h\"\n \n-#ifdef KR_headers\n-extern integer s_cmp();\n-logical l_lt(a,b,la,lb) char *a, *b; ftnlen la, lb;\n-#else\n extern integer s_cmp(char *, char *, ftnlen, ftnlen);\n logical l_lt(char *a, char *b, ftnlen la, ftnlen lb)\n-#endif\n {\n return(s_cmp(a,b,la,lb) < 0);\n }"}, {"sha": "4536dc4719ea192dc88dc4f261195a962d6cc5a5", "filename": "libf2c/libF77/lbitbits.c", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibF77%2Flbitbits.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibF77%2Flbitbits.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibF77%2Flbitbits.c?ref=4d85a6fea685603493f2a4dbcfd36d6fd25fbe26", "patch": "@@ -5,11 +5,7 @@\n #endif\n \n  integer\n-#ifdef KR_headers\n-lbit_bits(a, b, len) integer a, b, len;\n-#else\n lbit_bits(integer a, integer b, integer len)\n-#endif\n {\n \t/* Assume 2's complement arithmetic */\n \n@@ -23,11 +19,7 @@ lbit_bits(integer a, integer b, integer len)\n \t}\n \n  integer\n-#ifdef KR_headers\n-lbit_cshift(a, b, len) integer a, b, len;\n-#else\n lbit_cshift(integer a, integer b, integer len)\n-#endif\n {\n \tunsigned long x, y, z;\n "}, {"sha": "daa1e7656de5052c3c11c49c3ecbf727696a3780", "filename": "libf2c/libF77/lbitshft.c", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibF77%2Flbitshft.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibF77%2Flbitshft.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibF77%2Flbitshft.c?ref=4d85a6fea685603493f2a4dbcfd36d6fd25fbe26", "patch": "@@ -1,11 +1,7 @@\n #include \"f2c.h\"\n \n  integer\n-#ifdef KR_headers\n-lbit_shift(a, b) integer a; integer b;\n-#else\n lbit_shift(integer a, integer b)\n-#endif\n {\n \treturn b >= 0 ? a << b : (integer)((uinteger)a >> -b);\n \t}"}, {"sha": "9f41947b97732f0d04eeebe74e86450f66e41a17", "filename": "libf2c/libF77/main.c", "status": "modified", "additions": 0, "deletions": 23, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibF77%2Fmain.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibF77%2Fmain.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibF77%2Fmain.c?ref=4d85a6fea685603493f2a4dbcfd36d6fd25fbe26", "patch": "@@ -3,10 +3,8 @@\n #include <stdio.h>\n #include \"signal1.h\"\n \n-#ifndef KR_headers\n #undef VOID\n #include <stdlib.h>\n-#endif\n \n #ifndef VOID\n #define VOID void\n@@ -16,41 +14,20 @@\n extern \"C\" {\n #endif\n \n-#ifdef NO__STDC\n-#define ONEXIT onexit\n-extern VOID f_exit();\n-#else\n-#ifndef KR_headers\n extern void f_exit(void);\n #ifndef NO_ONEXIT\n #define ONEXIT atexit\n extern int atexit(void (*)(void));\n #endif\n-#else\n-#ifndef NO_ONEXIT\n-#define ONEXIT onexit\n-extern VOID f_exit();\n-#endif\n-#endif\n-#endif\n \n-#ifdef KR_headers\n-extern VOID f_init();\n-extern int MAIN__();\n-#else\n extern void f_init(void);\n extern int MAIN__(void);\n-#endif\n \n #ifdef __cplusplus\n \t}\n #endif\n \n-#ifdef KR_headers\n-main(argc, argv) int argc; char **argv;\n-#else\n main(int argc, char **argv)\n-#endif\n {\n f_setarg(argc, argv);\n f_setsig();"}, {"sha": "98bb84ffb22c3db41d2c67dd73abbda534dbf2c2", "filename": "libf2c/libF77/pow_ci.c", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibF77%2Fpow_ci.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibF77%2Fpow_ci.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibF77%2Fpow_ci.c?ref=4d85a6fea685603493f2a4dbcfd36d6fd25fbe26", "patch": "@@ -1,12 +1,7 @@\n #include \"f2c.h\"\n \n-#ifdef KR_headers\n-VOID pow_ci(p, a, b) \t/* p = a**b  */\n- complex *p, *a; integer *b;\n-#else\n extern void pow_zi(doublecomplex*, doublecomplex*, integer*);\n void pow_ci(complex *p, complex *a, integer *b) \t/* p = a**b  */\n-#endif\n {\n doublecomplex p1, a1;\n "}, {"sha": "7c421fefd9e686a701cd1a0b28847a8502d3f2c9", "filename": "libf2c/libF77/pow_dd.c", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibF77%2Fpow_dd.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibF77%2Fpow_dd.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibF77%2Fpow_dd.c?ref=4d85a6fea685603493f2a4dbcfd36d6fd25fbe26", "patch": "@@ -1,13 +1,8 @@\n #include \"f2c.h\"\n \n-#ifdef KR_headers\n-double pow();\n-double pow_dd(ap, bp) doublereal *ap, *bp;\n-#else\n #undef abs\n #include <math.h>\n double pow_dd(doublereal *ap, doublereal *bp)\n-#endif\n {\n return(pow(*ap, *bp) );\n }"}, {"sha": "d396ed031390255908dfab778dc0bd5614d2a776", "filename": "libf2c/libF77/pow_di.c", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibF77%2Fpow_di.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibF77%2Fpow_di.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibF77%2Fpow_di.c?ref=4d85a6fea685603493f2a4dbcfd36d6fd25fbe26", "patch": "@@ -1,10 +1,6 @@\n #include \"f2c.h\"\n \n-#ifdef KR_headers\n-double pow_di(ap, bp) doublereal *ap; integer *bp;\n-#else\n double pow_di(doublereal *ap, integer *bp)\n-#endif\n {\n double pow, x;\n integer n;"}, {"sha": "d734720ef514a1eda6be979436228ad23ae86cba", "filename": "libf2c/libF77/pow_hh.c", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibF77%2Fpow_hh.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibF77%2Fpow_hh.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibF77%2Fpow_hh.c?ref=4d85a6fea685603493f2a4dbcfd36d6fd25fbe26", "patch": "@@ -1,10 +1,6 @@\n #include \"f2c.h\"\n \n-#ifdef KR_headers\n-shortint pow_hh(ap, bp) shortint *ap, *bp;\n-#else\n shortint pow_hh(shortint *ap, shortint *bp)\n-#endif\n {\n \tshortint pow, x, n;\n \tunsigned u;"}, {"sha": "a895b23e167f3de609bf96e18a03f10b6927f965", "filename": "libf2c/libF77/pow_ii.c", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibF77%2Fpow_ii.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibF77%2Fpow_ii.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibF77%2Fpow_ii.c?ref=4d85a6fea685603493f2a4dbcfd36d6fd25fbe26", "patch": "@@ -1,10 +1,6 @@\n #include \"f2c.h\"\n \n-#ifdef KR_headers\n-integer pow_ii(ap, bp) integer *ap, *bp;\n-#else\n integer pow_ii(integer *ap, integer *bp)\n-#endif\n {\n \tinteger pow, x, n;\n \tunsigned long u;"}, {"sha": "df01f14e95b77ff4914b289a3f73c7c33e7ebf38", "filename": "libf2c/libF77/pow_qq.c", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibF77%2Fpow_qq.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibF77%2Fpow_qq.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibF77%2Fpow_qq.c?ref=4d85a6fea685603493f2a4dbcfd36d6fd25fbe26", "patch": "@@ -1,10 +1,6 @@\n #include \"f2c.h\"\n \n-#ifdef KR_headers\n-longint pow_qq(ap, bp) longint *ap, *bp;\n-#else\n longint pow_qq(longint *ap, longint *bp)\n-#endif\n {\n \tlongint pow, x, n;\n \tunsigned long long u;\t/* system-dependent */"}, {"sha": "c15347a2a1b0ac0d62cf439c17610c475636c440", "filename": "libf2c/libF77/pow_ri.c", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibF77%2Fpow_ri.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibF77%2Fpow_ri.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibF77%2Fpow_ri.c?ref=4d85a6fea685603493f2a4dbcfd36d6fd25fbe26", "patch": "@@ -1,10 +1,6 @@\n #include \"f2c.h\"\n \n-#ifdef KR_headers\n-double pow_ri(ap, bp) real *ap; integer *bp;\n-#else\n double pow_ri(real *ap, integer *bp)\n-#endif\n {\n double pow, x;\n integer n;"}, {"sha": "3b520602fc3090a577368f0cf6d31429b4f0cdd6", "filename": "libf2c/libF77/pow_zi.c", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibF77%2Fpow_zi.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibF77%2Fpow_zi.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibF77%2Fpow_zi.c?ref=4d85a6fea685603493f2a4dbcfd36d6fd25fbe26", "patch": "@@ -1,12 +1,7 @@\n #include \"f2c.h\"\n \n-#ifdef KR_headers\n-VOID pow_zi(p, a, b) \t/* p = a**b  */\n- doublecomplex *p, *a; integer *b;\n-#else\n extern void z_div(doublecomplex*, doublecomplex*, doublecomplex*);\n void pow_zi(doublecomplex *p, doublecomplex *a, integer *b) \t/* p = a**b  */\n-#endif\n {\n \tinteger n;\n \tunsigned long u;"}, {"sha": "5fc8c45866327b07d08246405be86938064f472f", "filename": "libf2c/libF77/pow_zz.c", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibF77%2Fpow_zz.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibF77%2Fpow_zz.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibF77%2Fpow_zz.c?ref=4d85a6fea685603493f2a4dbcfd36d6fd25fbe26", "patch": "@@ -1,14 +1,9 @@\n #include \"f2c.h\"\n \n-#ifdef KR_headers\n-double log(), exp(), cos(), sin(), atan2(), f__cabs();\n-VOID pow_zz(r,a,b) doublecomplex *r, *a, *b;\n-#else\n #undef abs\n #include <math.h>\n extern double f__cabs(double,double);\n void pow_zz(doublecomplex *r, doublecomplex *a, doublecomplex *b)\n-#endif\n {\n double logr, logi, x, y;\n "}, {"sha": "ef87858ce63450ce44edae36238b3a9d88f3d1f8", "filename": "libf2c/libF77/qbitbits.c", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibF77%2Fqbitbits.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibF77%2Fqbitbits.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibF77%2Fqbitbits.c?ref=4d85a6fea685603493f2a4dbcfd36d6fd25fbe26", "patch": "@@ -9,11 +9,7 @@\n #endif\n \n  integer\n-#ifdef KR_headers\n-qbit_bits(a, b, len) longint a; integer b, len;\n-#else\n qbit_bits(longint a, integer b, integer len)\n-#endif\n {\n \t/* Assume 2's complement arithmetic */\n \n@@ -27,11 +23,7 @@ qbit_bits(longint a, integer b, integer len)\n \t}\n \n  longint\n-#ifdef KR_headers\n-qbit_cshift(a, b, len) longint a; integer b, len;\n-#else\n qbit_cshift(longint a, integer b, integer len)\n-#endif\n {\n \tulongint x, y, z;\n "}, {"sha": "03ab5f271ba43aa22b96132c1cb34576c4b83021", "filename": "libf2c/libF77/qbitshft.c", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibF77%2Fqbitshft.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibF77%2Fqbitshft.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibF77%2Fqbitshft.c?ref=4d85a6fea685603493f2a4dbcfd36d6fd25fbe26", "patch": "@@ -1,11 +1,7 @@\n #include \"f2c.h\"\n \n  longint\n-#ifdef KR_headers\n-qbit_shift(a, b) longint a; integer b;\n-#else\n qbit_shift(longint a, integer b)\n-#endif\n {\n \treturn b >= 0 ? a << b : (longint)((ulongint)a >> -b);\n \t}"}, {"sha": "77c2abd08e60a1ed81226cf6d77d4026486e26f8", "filename": "libf2c/libF77/r_abs.c", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibF77%2Fr_abs.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibF77%2Fr_abs.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibF77%2Fr_abs.c?ref=4d85a6fea685603493f2a4dbcfd36d6fd25fbe26", "patch": "@@ -1,10 +1,6 @@\n #include \"f2c.h\"\n \n-#ifdef KR_headers\n-double r_abs(x) real *x;\n-#else\n double r_abs(real *x)\n-#endif\n {\n if(*x >= 0)\n \treturn(*x);"}, {"sha": "79d7b6bac5ea7205fc7ca472dc61d7ef81594e8a", "filename": "libf2c/libF77/r_acos.c", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibF77%2Fr_acos.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibF77%2Fr_acos.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibF77%2Fr_acos.c?ref=4d85a6fea685603493f2a4dbcfd36d6fd25fbe26", "patch": "@@ -1,13 +1,8 @@\n #include \"f2c.h\"\n \n-#ifdef KR_headers\n-double acos();\n-double r_acos(x) real *x;\n-#else\n #undef abs\n #include <math.h>\n double r_acos(real *x)\n-#endif\n {\n return( acos(*x) );\n }"}, {"sha": "83722ba5c5284fec12bd5883a25347ca622c2c3d", "filename": "libf2c/libF77/r_asin.c", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibF77%2Fr_asin.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibF77%2Fr_asin.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibF77%2Fr_asin.c?ref=4d85a6fea685603493f2a4dbcfd36d6fd25fbe26", "patch": "@@ -1,13 +1,8 @@\n #include \"f2c.h\"\n \n-#ifdef KR_headers\n-double asin();\n-double r_asin(x) real *x;\n-#else\n #undef abs\n #include <math.h>\n double r_asin(real *x)\n-#endif\n {\n return( asin(*x) );\n }"}, {"sha": "f8262f23ce5bc140a0c7f922bcac0bb4f728f255", "filename": "libf2c/libF77/r_atan.c", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibF77%2Fr_atan.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibF77%2Fr_atan.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibF77%2Fr_atan.c?ref=4d85a6fea685603493f2a4dbcfd36d6fd25fbe26", "patch": "@@ -1,13 +1,8 @@\n #include \"f2c.h\"\n \n-#ifdef KR_headers\n-double atan();\n-double r_atan(x) real *x;\n-#else\n #undef abs\n #include <math.h>\n double r_atan(real *x)\n-#endif\n {\n return( atan(*x) );\n }"}, {"sha": "0abc146bbc881ba5a05d1ca34efda7a3389ae376", "filename": "libf2c/libF77/r_atn2.c", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibF77%2Fr_atn2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibF77%2Fr_atn2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibF77%2Fr_atn2.c?ref=4d85a6fea685603493f2a4dbcfd36d6fd25fbe26", "patch": "@@ -1,13 +1,8 @@\n #include \"f2c.h\"\n \n-#ifdef KR_headers\n-double atan2();\n-double r_atn2(x,y) real *x, *y;\n-#else\n #undef abs\n #include <math.h>\n double r_atn2(real *x, real *y)\n-#endif\n {\n return( atan2(*x,*y) );\n }"}, {"sha": "3be7f6f9581892f2113471ad1bb4cbf7a837c1bd", "filename": "libf2c/libF77/r_cnjg.c", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibF77%2Fr_cnjg.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibF77%2Fr_cnjg.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibF77%2Fr_cnjg.c?ref=4d85a6fea685603493f2a4dbcfd36d6fd25fbe26", "patch": "@@ -1,10 +1,6 @@\n #include \"f2c.h\"\n \n-#ifdef KR_headers\n-VOID r_cnjg(r, z) complex *r, *z;\n-#else\n VOID r_cnjg(complex *r, complex *z)\n-#endif\n {\n \treal zi = z->i;\n \tr->r = z->r;"}, {"sha": "380e250b81d9f581da18e76fe549340096586a06", "filename": "libf2c/libF77/r_cos.c", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibF77%2Fr_cos.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibF77%2Fr_cos.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibF77%2Fr_cos.c?ref=4d85a6fea685603493f2a4dbcfd36d6fd25fbe26", "patch": "@@ -1,13 +1,8 @@\n #include \"f2c.h\"\n \n-#ifdef KR_headers\n-double cos();\n-double r_cos(x) real *x;\n-#else\n #undef abs\n #include <math.h>\n double r_cos(real *x)\n-#endif\n {\n return( cos(*x) );\n }"}, {"sha": "d133cf9b8036bcabbbfbbd660505344b2bb680a9", "filename": "libf2c/libF77/r_cosh.c", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibF77%2Fr_cosh.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibF77%2Fr_cosh.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibF77%2Fr_cosh.c?ref=4d85a6fea685603493f2a4dbcfd36d6fd25fbe26", "patch": "@@ -1,13 +1,8 @@\n #include \"f2c.h\"\n \n-#ifdef KR_headers\n-double cosh();\n-double r_cosh(x) real *x;\n-#else\n #undef abs\n #include <math.h>\n double r_cosh(real *x)\n-#endif\n {\n return( cosh(*x) );\n }"}, {"sha": "fe3896b76519a27217ad68d2cec5017eba34120f", "filename": "libf2c/libF77/r_dim.c", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibF77%2Fr_dim.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibF77%2Fr_dim.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibF77%2Fr_dim.c?ref=4d85a6fea685603493f2a4dbcfd36d6fd25fbe26", "patch": "@@ -1,10 +1,6 @@\n #include \"f2c.h\"\n \n-#ifdef KR_headers\n-double r_dim(a,b) real *a, *b;\n-#else\n double r_dim(real *a, real *b)\n-#endif\n {\n return( *a > *b ? *a - *b : 0);\n }"}, {"sha": "2a9581c267c9c1f9a9a03551ae8ed45cc8fb61af", "filename": "libf2c/libF77/r_exp.c", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibF77%2Fr_exp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibF77%2Fr_exp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibF77%2Fr_exp.c?ref=4d85a6fea685603493f2a4dbcfd36d6fd25fbe26", "patch": "@@ -1,13 +1,8 @@\n #include \"f2c.h\"\n \n-#ifdef KR_headers\n-double exp();\n-double r_exp(x) real *x;\n-#else\n #undef abs\n #include <math.h>\n double r_exp(real *x)\n-#endif\n {\n return( exp(*x) );\n }"}, {"sha": "42042a9cb8e456167d10372cb4f9f0af249dfdae", "filename": "libf2c/libF77/r_imag.c", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibF77%2Fr_imag.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibF77%2Fr_imag.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibF77%2Fr_imag.c?ref=4d85a6fea685603493f2a4dbcfd36d6fd25fbe26", "patch": "@@ -1,10 +1,6 @@\n #include \"f2c.h\"\n \n-#ifdef KR_headers\n-double r_imag(z) complex *z;\n-#else\n double r_imag(complex *z)\n-#endif\n {\n return(z->i);\n }"}, {"sha": "b2a4747424cade578689d6a5cad8f6110277bee9", "filename": "libf2c/libF77/r_int.c", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibF77%2Fr_int.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibF77%2Fr_int.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibF77%2Fr_int.c?ref=4d85a6fea685603493f2a4dbcfd36d6fd25fbe26", "patch": "@@ -1,13 +1,8 @@\n #include \"f2c.h\"\n \n-#ifdef KR_headers\n-double floor();\n-double r_int(x) real *x;\n-#else\n #undef abs\n #include <math.h>\n double r_int(real *x)\n-#endif\n {\n return( (*x>0) ? floor(*x) : -floor(- *x) );\n }"}, {"sha": "36336cb52ddf5372d8f5c5eefc31856cc27ed3aa", "filename": "libf2c/libF77/r_lg10.c", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibF77%2Fr_lg10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibF77%2Fr_lg10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibF77%2Fr_lg10.c?ref=4d85a6fea685603493f2a4dbcfd36d6fd25fbe26", "patch": "@@ -2,14 +2,9 @@\n \n #define log10e 0.43429448190325182765\n \n-#ifdef KR_headers\n-double log();\n-double r_lg10(x) real *x;\n-#else\n #undef abs\n #include <math.h>\n double r_lg10(real *x)\n-#endif\n {\n return( log10e * log(*x) );\n }"}, {"sha": "3cc069d8d92543d2a79db4024b78eff0c6db0949", "filename": "libf2c/libF77/r_log.c", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibF77%2Fr_log.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibF77%2Fr_log.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibF77%2Fr_log.c?ref=4d85a6fea685603493f2a4dbcfd36d6fd25fbe26", "patch": "@@ -1,13 +1,8 @@\n #include \"f2c.h\"\n \n-#ifdef KR_headers\n-double log();\n-double r_log(x) real *x;\n-#else\n #undef abs\n #include <math.h>\n double r_log(real *x)\n-#endif\n {\n return( log(*x) );\n }"}, {"sha": "c2a1929cfce52881fffffea9c9c2613f059cd0bf", "filename": "libf2c/libF77/r_mod.c", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibF77%2Fr_mod.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibF77%2Fr_mod.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibF77%2Fr_mod.c?ref=4d85a6fea685603493f2a4dbcfd36d6fd25fbe26", "patch": "@@ -1,21 +1,12 @@\n #include \"f2c.h\"\n \n-#ifdef KR_headers\n-#ifdef IEEE_drem\n-double drem();\n-#else\n-double floor();\n-#endif\n-double r_mod(x,y) real *x, *y;\n-#else\n #ifdef IEEE_drem\n double drem(double, double);\n #else\n #undef abs\n #include <math.h>\n #endif\n double r_mod(real *x, real *y)\n-#endif\n {\n #ifdef IEEE_drem\n \tdouble xa, ya, z;"}, {"sha": "79700c8fd98b1b06aa6871d99b0d9c5b23c0ab97", "filename": "libf2c/libF77/r_nint.c", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibF77%2Fr_nint.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibF77%2Fr_nint.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibF77%2Fr_nint.c?ref=4d85a6fea685603493f2a4dbcfd36d6fd25fbe26", "patch": "@@ -1,13 +1,8 @@\n #include \"f2c.h\"\n \n-#ifdef KR_headers\n-double floor();\n-double r_nint(x) real *x;\n-#else\n #undef abs\n #include <math.h>\n double r_nint(real *x)\n-#endif\n {\n return( (*x)>=0 ?\n \tfloor(*x + .5) : -floor(.5 - *x) );"}, {"sha": "01defda583a45330ed7dae330fdf715b86411b0d", "filename": "libf2c/libF77/r_sign.c", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibF77%2Fr_sign.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibF77%2Fr_sign.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibF77%2Fr_sign.c?ref=4d85a6fea685603493f2a4dbcfd36d6fd25fbe26", "patch": "@@ -1,10 +1,6 @@\n #include \"f2c.h\"\n \n-#ifdef KR_headers\n-double r_sign(a,b) real *a, *b;\n-#else\n double r_sign(real *a, real *b)\n-#endif\n {\n double x;\n x = (*a >= 0 ? *a : - *a);"}, {"sha": "9d7db2ce7c7b51f74eae328f1a60d89b158a996f", "filename": "libf2c/libF77/r_sin.c", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibF77%2Fr_sin.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibF77%2Fr_sin.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibF77%2Fr_sin.c?ref=4d85a6fea685603493f2a4dbcfd36d6fd25fbe26", "patch": "@@ -1,13 +1,8 @@\n #include \"f2c.h\"\n \n-#ifdef KR_headers\n-double sin();\n-double r_sin(x) real *x;\n-#else\n #undef abs\n #include <math.h>\n double r_sin(real *x)\n-#endif\n {\n return( sin(*x) );\n }"}, {"sha": "47b6ad8a2b94a8506bf19844653fe59b16bd909d", "filename": "libf2c/libF77/r_sinh.c", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibF77%2Fr_sinh.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibF77%2Fr_sinh.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibF77%2Fr_sinh.c?ref=4d85a6fea685603493f2a4dbcfd36d6fd25fbe26", "patch": "@@ -1,13 +1,8 @@\n #include \"f2c.h\"\n \n-#ifdef KR_headers\n-double sinh();\n-double r_sinh(x) real *x;\n-#else\n #undef abs\n #include <math.h>\n double r_sinh(real *x)\n-#endif\n {\n return( sinh(*x) );\n }"}, {"sha": "114cd1bd3016b84ca37a2636ceb7154a4627d1aa", "filename": "libf2c/libF77/r_sqrt.c", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibF77%2Fr_sqrt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibF77%2Fr_sqrt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibF77%2Fr_sqrt.c?ref=4d85a6fea685603493f2a4dbcfd36d6fd25fbe26", "patch": "@@ -1,13 +1,8 @@\n #include \"f2c.h\"\n \n-#ifdef KR_headers\n-double sqrt();\n-double r_sqrt(x) real *x;\n-#else\n #undef abs\n #include <math.h>\n double r_sqrt(real *x)\n-#endif\n {\n return( sqrt(*x) );\n }"}, {"sha": "455c96401939fde853241362e7f23ba7483d41ee", "filename": "libf2c/libF77/r_tan.c", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibF77%2Fr_tan.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibF77%2Fr_tan.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibF77%2Fr_tan.c?ref=4d85a6fea685603493f2a4dbcfd36d6fd25fbe26", "patch": "@@ -1,13 +1,8 @@\n #include \"f2c.h\"\n \n-#ifdef KR_headers\n-double tan();\n-double r_tan(x) real *x;\n-#else\n #undef abs\n #include <math.h>\n double r_tan(real *x)\n-#endif\n {\n return( tan(*x) );\n }"}, {"sha": "9fe150e01726542d4800c5677aa2740838b4865a", "filename": "libf2c/libF77/r_tanh.c", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibF77%2Fr_tanh.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibF77%2Fr_tanh.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibF77%2Fr_tanh.c?ref=4d85a6fea685603493f2a4dbcfd36d6fd25fbe26", "patch": "@@ -1,13 +1,8 @@\n #include \"f2c.h\"\n \n-#ifdef KR_headers\n-double tanh();\n-double r_tanh(x) real *x;\n-#else\n #undef abs\n #include <math.h>\n double r_tanh(real *x)\n-#endif\n {\n return( tanh(*x) );\n }"}, {"sha": "470a3dad337938d7ccba9803f3cc76d10e0da9fa", "filename": "libf2c/libF77/s_cat.c", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibF77%2Fs_cat.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibF77%2Fs_cat.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibF77%2Fs_cat.c?ref=4d85a6fea685603493f2a4dbcfd36d6fd25fbe26", "patch": "@@ -7,25 +7,15 @@\n #ifndef NO_OVERWRITE\n #include <stdio.h>\n #undef abs\n-#ifdef KR_headers\n- extern char *F77_aloc();\n- extern void free();\n- extern void G77_exit_0 ();\n-#else\n #undef min\n #undef max\n #include <stdlib.h>\n  extern char *F77_aloc(ftnlen, char*);\n-#endif\n #include <string.h>\n #endif /* NO_OVERWRITE */\n \n  VOID\n-#ifdef KR_headers\n-s_cat(lp, rpp, rnp, np, ll) char *lp, *rpp[]; ftnint rnp[], *np; ftnlen ll;\n-#else\n s_cat(char *lp, char *rpp[], ftnint rnp[], ftnint *np, ftnlen ll)\n-#endif\n {\n \tftnlen i, nc;\n \tchar *rp;"}, {"sha": "febc58649eafc218198978285c35d1648cf2be94", "filename": "libf2c/libF77/s_cmp.c", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibF77%2Fs_cmp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibF77%2Fs_cmp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibF77%2Fs_cmp.c?ref=4d85a6fea685603493f2a4dbcfd36d6fd25fbe26", "patch": "@@ -2,11 +2,7 @@\n \n /* compare two strings */\n \n-#ifdef KR_headers\n-integer s_cmp(a0, b0, la, lb) char *a0, *b0; ftnlen la, lb;\n-#else\n integer s_cmp(char *a0, char *b0, ftnlen la, ftnlen lb)\n-#endif\n {\n register unsigned char *a, *aend, *b, *bend;\n a = (unsigned char *)a0;"}, {"sha": "a0c98caa3d752fddaf7018cb9a2119d0ef7b55b1", "filename": "libf2c/libF77/s_copy.c", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibF77%2Fs_copy.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibF77%2Fs_copy.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibF77%2Fs_copy.c?ref=4d85a6fea685603493f2a4dbcfd36d6fd25fbe26", "patch": "@@ -8,11 +8,7 @@\n \n /* assign strings:  a = b */\n \n-#ifdef KR_headers\n-VOID s_copy(a, b, la, lb) register char *a, *b; ftnlen la, lb;\n-#else\n void s_copy(register char *a, register char *b, ftnlen la, ftnlen lb)\n-#endif\n {\n \tregister char *aend, *bend;\n "}, {"sha": "3fe256c948c547fc0511fdef68a59a155f25d55e", "filename": "libf2c/libF77/s_paus.c", "status": "modified", "additions": 0, "deletions": 13, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibF77%2Fs_paus.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibF77%2Fs_paus.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibF77%2Fs_paus.c?ref=4d85a6fea685603493f2a4dbcfd36d6fd25fbe26", "patch": "@@ -3,10 +3,6 @@\n #define PAUSESIG 15\n \n #include \"signal1.h\"\n-#ifdef KR_headers\n-#define Void /* void */\n-#define Int /* int */\n-#else\n #define Void void\n #define Int int\n #undef abs\n@@ -17,7 +13,6 @@\n extern \"C\" {\n #endif\n extern int getpid(void), isatty(int), pause(void);\n-#endif\n \n extern VOID f_exit(Void);\n \n@@ -28,11 +23,7 @@ waitpause(Sigarg)\n \t}\n \n  static VOID\n-#ifdef KR_headers\n-s_1paus(fin) FILE *fin;\n-#else\n s_1paus(FILE *fin)\n-#endif\n {\n \tfprintf(stderr,\n \t\"To resume execution, type go.  Other input will terminate the job.\\n\");\n@@ -47,11 +38,7 @@ s_1paus(FILE *fin)\n \t}\n \n  int\n-#ifdef KR_headers\n-s_paus(s, n) char *s; ftnlen n;\n-#else\n s_paus(char *s, ftnlen n)\n-#endif\n {\n \tfprintf(stderr, \"PAUSE \");\n \tif(n > 0)"}, {"sha": "833d3e1a449a7fa9cd138a786d50db2b5ffde9de", "filename": "libf2c/libF77/s_rnge.c", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibF77%2Fs_rnge.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibF77%2Fs_rnge.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibF77%2Fs_rnge.c?ref=4d85a6fea685603493f2a4dbcfd36d6fd25fbe26", "patch": "@@ -3,13 +3,8 @@\n \n /* called when a subscript is out of range */\n \n-#ifdef KR_headers\n-extern VOID sig_die();\n-integer s_rnge(varn, offset, procn, line) char *varn, *procn; ftnint offset, line;\n-#else\n extern VOID sig_die(char*,int);\n integer s_rnge(char *varn, ftnint offset, char *procn, ftnint line)\n-#endif\n {\n register int i;\n "}, {"sha": "6e8652aeb2e19d0168b25aee195e5fbd692b830f", "filename": "libf2c/libF77/s_stop.c", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibF77%2Fs_stop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibF77%2Fs_stop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibF77%2Fs_stop.c?ref=4d85a6fea685603493f2a4dbcfd36d6fd25fbe26", "patch": "@@ -1,10 +1,6 @@\n #include <stdio.h>\n #include \"f2c.h\"\n \n-#ifdef KR_headers\n-extern void f_exit();\n-VOID s_stop(s, n) char *s; ftnlen n;\n-#else\n #undef abs\n #undef min\n #undef max\n@@ -15,7 +11,6 @@ extern \"C\" {\n void f_exit(void);\n \n int s_stop(char *s, ftnlen n)\n-#endif\n {\n int i;\n "}, {"sha": "83aedaf5fb79613ed58c223a45bcdf121a068b41", "filename": "libf2c/libF77/setarg.c", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibF77%2Fsetarg.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibF77%2Fsetarg.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibF77%2Fsetarg.c?ref=4d85a6fea685603493f2a4dbcfd36d6fd25fbe26", "patch": "@@ -1,10 +1,8 @@\n /* Set up the global argc/argv info for use by getarg_, iargc_, and\n    g77's inlined intrinsic equivalents.  */\n \n-#ifndef KR_headers\n #undef VOID\n #include <stdlib.h>\n-#endif\n \n #ifndef VOID\n #define VOID void\n@@ -18,11 +16,7 @@ char **f__xargv;\n #endif\n \n  void\n-#ifdef KR_headers\n-f_setarg(argc, argv) int argc; char **argv;\n-#else\n f_setarg(int argc, char **argv)\n-#endif\n {\n f__xargc = argc;\n f__xargv = argv;"}, {"sha": "38fce0ac0c11d1161f8a7ee56d95bab3784ac904", "filename": "libf2c/libF77/setsig.c", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibF77%2Fsetsig.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibF77%2Fsetsig.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibF77%2Fsetsig.c?ref=4d85a6fea685603493f2a4dbcfd36d6fd25fbe26", "patch": "@@ -9,10 +9,8 @@\n #endif\n #endif\n \n-#ifndef KR_headers\n #undef VOID\n #include <stdlib.h>\n-#endif\n \n #ifndef VOID\n #define VOID void\n@@ -22,13 +20,8 @@\n extern \"C\" {\n #endif\n \n-#ifdef KR_headers\n-extern VOID sig_die();\n-#define Int /* int */\n-#else\n extern void sig_die(char*, int);\n #define Int int\n-#endif\n \n static VOID sigfdie(Sigarg)\n {"}, {"sha": "507c7ee658e2354f1e1d60fc520923c87abc9bf5", "filename": "libf2c/libF77/sig_die.c", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibF77%2Fsig_die.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibF77%2Fsig_die.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibF77%2Fsig_die.c?ref=4d85a6fea685603493f2a4dbcfd36d6fd25fbe26", "patch": "@@ -7,17 +7,13 @@\n #endif\n #endif\n \n-#ifdef KR_headers\n-void sig_die(s, kill) register char *s; int kill;\n-#else\n #include <stdlib.h>\n #ifdef __cplusplus\n extern \"C\" {\n #endif\n  extern void f_exit(void);\n \n void sig_die(register char *s, int kill)\n-#endif\n {\n \t/* print error message, then clear buffers */\n \tfprintf(stderr, \"%s\\n\", s);"}, {"sha": "d6d7b55d59ccd839f966268616d67ec324ffe366", "filename": "libf2c/libF77/signal1.h0", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibF77%2Fsignal1.h0", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibF77%2Fsignal1.h0", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibF77%2Fsignal1.h0?ref=4d85a6fea685603493f2a4dbcfd36d6fd25fbe26", "patch": "@@ -11,11 +11,7 @@\n #define Sigret_t void\n #endif\n #ifndef Sigarg_t\n-#ifdef KR_headers\n-#define Sigarg_t\n-#else\n #define Sigarg_t int\n-#endif\n #endif /*Sigarg_t*/\n \n #ifdef USE_SIG_PF\t/* compile with -DUSE_SIG_PF under IRIX */"}, {"sha": "ff496a182b88af89486820030abd1fe0cd77f964", "filename": "libf2c/libF77/signal_.c", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibF77%2Fsignal_.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibF77%2Fsignal_.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibF77%2Fsignal_.c?ref=4d85a6fea685603493f2a4dbcfd36d6fd25fbe26", "patch": "@@ -1,13 +1,8 @@\n #include \"f2c.h\"\n #include \"signal1.h\"\n \n-#ifdef KR_headers\n-void *\n-G77_signal_0 (sigp, proc) integer *sigp; sig_pf proc;\n-#else\n void *\n G77_signal_0 (integer *sigp, sig_pf proc)\n-#endif\n {\n \tint sig;\n \tsig = (int)*sigp;"}, {"sha": "ebb3041618bad5742322f06f9b9cc4c6eb6823b8", "filename": "libf2c/libF77/system_.c", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibF77%2Fsystem_.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibF77%2Fsystem_.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibF77%2Fsystem_.c?ref=4d85a6fea685603493f2a4dbcfd36d6fd25fbe26", "patch": "@@ -2,12 +2,6 @@\n \n #include \"f2c.h\"\n \n-#ifdef KR_headers\n-extern char *F77_aloc();\n-\n- integer\n-G77_system_0 (s, n) register char *s; ftnlen n;\n-#else\n #undef abs\n #undef min\n #undef max\n@@ -16,7 +10,6 @@ extern char *F77_aloc(ftnlen, char*);\n \n  integer\n G77_system_0 (register char *s, ftnlen n)\n-#endif\n {\n \tchar buff0[256], *buff;\n \tregister char *bp, *blast;"}, {"sha": "50375653f6042416cacb1dc1f1f6d72358fd1ce4", "filename": "libf2c/libF77/z_abs.c", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibF77%2Fz_abs.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibF77%2Fz_abs.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibF77%2Fz_abs.c?ref=4d85a6fea685603493f2a4dbcfd36d6fd25fbe26", "patch": "@@ -1,12 +1,7 @@\n #include \"f2c.h\"\n \n-#ifdef KR_headers\n-double f__cabs();\n-double z_abs(z) doublecomplex *z;\n-#else\n double f__cabs(double, double);\n double z_abs(doublecomplex *z)\n-#endif\n {\n return( f__cabs( z->r, z->i ) );\n }"}, {"sha": "74ee2e4d66a5ce87f5af1da745eb7494a76eb6ef", "filename": "libf2c/libF77/z_cos.c", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibF77%2Fz_cos.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibF77%2Fz_cos.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibF77%2Fz_cos.c?ref=4d85a6fea685603493f2a4dbcfd36d6fd25fbe26", "patch": "@@ -1,13 +1,8 @@\n #include \"f2c.h\"\n \n-#ifdef KR_headers\n-double sin(), cos(), sinh(), cosh();\n-VOID z_cos(r, z) doublecomplex *r, *z;\n-#else\n #undef abs\n #include \"math.h\"\n void z_cos(doublecomplex *r, doublecomplex *z)\n-#endif\n {\n \tdouble zi = z->i, zr = z->r;\n \tr->r =   cos(zr) * cosh(zi);"}, {"sha": "d0b5944cbb5a3570b64ca28b06f4b33d7a841584", "filename": "libf2c/libF77/z_div.c", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibF77%2Fz_div.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibF77%2Fz_div.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibF77%2Fz_div.c?ref=4d85a6fea685603493f2a4dbcfd36d6fd25fbe26", "patch": "@@ -1,12 +1,7 @@\n #include \"f2c.h\"\n \n-#ifdef KR_headers\n-extern VOID sig_die();\n-VOID z_div(c, a, b) doublecomplex *a, *b, *c;\n-#else\n extern void sig_die(char*, int);\n void z_div(doublecomplex *c, doublecomplex *a, doublecomplex *b)\n-#endif\n {\n \tdouble ratio, den;\n \tdouble abr, abi, cr;"}, {"sha": "2dad1219859268ed928488cb02f644fc4c4a6e64", "filename": "libf2c/libF77/z_exp.c", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibF77%2Fz_exp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibF77%2Fz_exp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibF77%2Fz_exp.c?ref=4d85a6fea685603493f2a4dbcfd36d6fd25fbe26", "patch": "@@ -1,13 +1,8 @@\n #include \"f2c.h\"\n \n-#ifdef KR_headers\n-double exp(), cos(), sin();\n-VOID z_exp(r, z) doublecomplex *r, *z;\n-#else\n #undef abs\n #include \"math.h\"\n void z_exp(doublecomplex *r, doublecomplex *z)\n-#endif\n {\n \tdouble expx, zi = z->i;\n "}, {"sha": "09f8cd4eeea339789511a69611959b182d05e67d", "filename": "libf2c/libF77/z_log.c", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibF77%2Fz_log.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibF77%2Fz_log.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibF77%2Fz_log.c?ref=4d85a6fea685603493f2a4dbcfd36d6fd25fbe26", "patch": "@@ -1,14 +1,9 @@\n #include \"f2c.h\"\n \n-#ifdef KR_headers\n-double log(), f__cabs(), atan2();\n-VOID z_log(r, z) doublecomplex *r, *z;\n-#else\n #undef abs\n #include \"math.h\"\n extern double f__cabs(double, double);\n void z_log(doublecomplex *r, doublecomplex *z)\n-#endif\n {\n \tdouble s, s0, t, t2, u, v;\n \tdouble zi = z->i, zr = z->r;"}, {"sha": "1294d2238a917816aa051ce990ab0ef038aeb81a", "filename": "libf2c/libF77/z_sin.c", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibF77%2Fz_sin.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibF77%2Fz_sin.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibF77%2Fz_sin.c?ref=4d85a6fea685603493f2a4dbcfd36d6fd25fbe26", "patch": "@@ -1,13 +1,8 @@\n #include \"f2c.h\"\n \n-#ifdef KR_headers\n-double sin(), cos(), sinh(), cosh();\n-VOID z_sin(r, z) doublecomplex *r, *z;\n-#else\n #undef abs\n #include \"math.h\"\n void z_sin(doublecomplex *r, doublecomplex *z)\n-#endif\n {\n \tdouble zi = z->i, zr = z->r;\n \tr->r = sin(zr) * cosh(zi);"}, {"sha": "94560ed8223fb821a0624e2dc06815e6ccaa9fd2", "filename": "libf2c/libF77/z_sqrt.c", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibF77%2Fz_sqrt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibF77%2Fz_sqrt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibF77%2Fz_sqrt.c?ref=4d85a6fea685603493f2a4dbcfd36d6fd25fbe26", "patch": "@@ -1,14 +1,9 @@\n #include \"f2c.h\"\n \n-#ifdef KR_headers\n-double sqrt(), f__cabs();\n-VOID z_sqrt(r, z) doublecomplex *r, *z;\n-#else\n #undef abs\n #include \"math.h\"\n extern double f__cabs(double, double);\n void z_sqrt(doublecomplex *r, doublecomplex *z)\n-#endif\n {\n \tdouble mag, zi = z->i, zr = z->r;\n "}, {"sha": "ba1dfa17adfc2876471cda0af3297ce98a9f246a", "filename": "libf2c/libI77/backspace.c", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibI77%2Fbackspace.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibI77%2Fbackspace.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibI77%2Fbackspace.c?ref=4d85a6fea685603493f2a4dbcfd36d6fd25fbe26", "patch": "@@ -2,11 +2,7 @@\n #include <sys/types.h>\n #include \"f2c.h\"\n #include \"fio.h\"\n-#ifdef KR_headers\n-integer f_back(a) alist *a;\n-#else\n integer f_back(alist *a)\n-#endif\n {\tunit *b;\n \toff_t v, w, x, y, z;\n \tuiolen n;"}, {"sha": "e016fdaeb2ed60b553d294b011d42375106ead86", "filename": "libf2c/libI77/close.c", "status": "modified", "additions": 1, "deletions": 12, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibI77%2Fclose.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibI77%2Fclose.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibI77%2Fclose.c?ref=4d85a6fea685603493f2a4dbcfd36d6fd25fbe26", "patch": "@@ -1,9 +1,7 @@\n #include \"config.h\"\n #include \"f2c.h\"\n #include \"fio.h\"\n-#ifdef KR_headers\n-integer f_clos(a) cllist *a;\n-#else\n+\n #undef abs\n #undef min\n #undef max\n@@ -25,7 +23,6 @@ extern int unlink(const char*);\n #endif\n \n integer f_clos(cllist *a)\n-#endif\n {\tunit *b;\n \n \tif (f__init & 2)\n@@ -66,11 +63,7 @@ integer f_clos(cllist *a)\n \treturn(0);\n \t}\n  void\n-#ifdef KR_headers\n-f_exit()\n-#else\n f_exit(void)\n-#endif\n {\tint i;\n \tstatic cllist xx;\n \tif (! (f__init & 1))\n@@ -93,11 +86,7 @@ f_exit(void)\n \t}\n }\n  int\n-#ifdef KR_headers\n-G77_flush_0 ()\n-#else\n G77_flush_0 (void)\n-#endif\n {\tint i;\n \tfor(i=0;i<MXUNIT;i++)\n \t\tif(f__units[i].ufd != NULL && f__units[i].uwrt)"}, {"sha": "7b8efd895fbbbd233138f52dcdf17e9201f42ca0", "filename": "libf2c/libI77/configure", "status": "modified", "additions": 42, "deletions": 43, "changes": 85, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibI77%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibI77%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibI77%2Fconfigure?ref=4d85a6fea685603493f2a4dbcfd36d6fd25fbe26", "patch": "@@ -988,14 +988,13 @@ EOF\n \n fi\n \n-\n echo $ac_n \"checking for posix\"\"... $ac_c\" 1>&6\n-echo \"configure:994: checking for posix\" >&5\n+echo \"configure:993: checking for posix\" >&5\n if eval \"test \\\"`echo '$''{'g77_cv_header_posix'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 999 \"configure\"\n+#line 998 \"configure\"\n #include \"confdefs.h\"\n #include <sys/types.h>\n #include <unistd.h>\n@@ -1021,12 +1020,12 @@ echo \"$ac_t\"\"$g77_cv_header_posix\" 1>&6\n # We can rely on the GNU library being posix-ish.  I guess checking the \n # header isn't actually like checking the functions, though...\n echo $ac_n \"checking for GNU library\"\"... $ac_c\" 1>&6\n-echo \"configure:1025: checking for GNU library\" >&5\n+echo \"configure:1024: checking for GNU library\" >&5\n if eval \"test \\\"`echo '$''{'g77_cv_lib_gnu'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 1030 \"configure\"\n+#line 1029 \"configure\"\n #include \"confdefs.h\"\n #include <stdio.h>\n #ifdef __GNU_LIBRARY__\n@@ -1050,12 +1049,12 @@ echo \"$ac_t\"\"$g77_cv_lib_gnu\" 1>&6\n \n # Apparently cygwin needs to be special-cased.\n echo $ac_n \"checking for cyg\\`win'32\"\"... $ac_c\" 1>&6\n-echo \"configure:1054: checking for cyg\\`win'32\" >&5\n+echo \"configure:1053: checking for cyg\\`win'32\" >&5\n if eval \"test \\\"`echo '$''{'g77_cv_sys_cygwin32'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 1059 \"configure\"\n+#line 1058 \"configure\"\n #include \"confdefs.h\"\n #ifdef __CYGWIN32__\n   yes\n@@ -1078,12 +1077,12 @@ echo \"$ac_t\"\"$g77_cv_sys_cygwin32\" 1>&6\n \n # ditto for mingw32.\n echo $ac_n \"checking for mingw32\"\"... $ac_c\" 1>&6\n-echo \"configure:1082: checking for mingw32\" >&5\n+echo \"configure:1081: checking for mingw32\" >&5\n if eval \"test \\\"`echo '$''{'g77_cv_sys_mingw32'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 1087 \"configure\"\n+#line 1086 \"configure\"\n #include \"confdefs.h\"\n #ifdef __MINGW32__\n   yes\n@@ -1106,12 +1105,12 @@ echo \"$ac_t\"\"$g77_cv_sys_mingw32\" 1>&6\n \n \n echo $ac_n \"checking for working const\"\"... $ac_c\" 1>&6\n-echo \"configure:1110: checking for working const\" >&5\n+echo \"configure:1109: checking for working const\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_c_const'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 1115 \"configure\"\n+#line 1114 \"configure\"\n #include \"confdefs.h\"\n \n int main() {\n@@ -1160,7 +1159,7 @@ ccp = (char const *const *) p;\n \n ; return 0; }\n EOF\n-if { (eval echo configure:1164: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n+if { (eval echo configure:1163: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n   rm -rf conftest*\n   ac_cv_c_const=yes\n else\n@@ -1181,12 +1180,12 @@ EOF\n fi\n \n echo $ac_n \"checking for size_t\"\"... $ac_c\" 1>&6\n-echo \"configure:1185: checking for size_t\" >&5\n+echo \"configure:1184: checking for size_t\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_type_size_t'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 1190 \"configure\"\n+#line 1189 \"configure\"\n #include \"confdefs.h\"\n #include <sys/types.h>\n #if STDC_HEADERS\n@@ -1219,12 +1218,12 @@ fi\n # Apparently positive result on cygwin loses re. NON_UNIX_STDIO\n # (as of cygwin b18). Likewise on mingw.\n echo $ac_n \"checking for fstat\"\"... $ac_c\" 1>&6\n-echo \"configure:1223: checking for fstat\" >&5\n+echo \"configure:1222: checking for fstat\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_func_fstat'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 1228 \"configure\"\n+#line 1227 \"configure\"\n #include \"confdefs.h\"\n /* System header to define __stub macros and hopefully few prototypes,\n     which can conflict with char fstat(); below.  */\n@@ -1247,7 +1246,7 @@ fstat();\n \n ; return 0; }\n EOF\n-if { (eval echo configure:1251: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n+if { (eval echo configure:1250: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n   rm -rf conftest*\n   eval \"ac_cv_func_fstat=yes\"\n else\n@@ -1267,7 +1266,7 @@ else\n fi\n \n echo $ac_n \"checking need for NON_UNIX_STDIO\"\"... $ac_c\" 1>&6\n-echo \"configure:1271: checking need for NON_UNIX_STDIO\" >&5\n+echo \"configure:1270: checking need for NON_UNIX_STDIO\" >&5\n if test $g77_cv_sys_cygwin32 = yes \\\n   || test $g77_cv_sys_mingw32 = yes \\\n   || test $ac_cv_func_fstat = no; then\n@@ -1283,12 +1282,12 @@ fi\n for ac_func in fseeko\n do\n echo $ac_n \"checking for $ac_func\"\"... $ac_c\" 1>&6\n-echo \"configure:1287: checking for $ac_func\" >&5\n+echo \"configure:1286: checking for $ac_func\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_func_$ac_func'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 1292 \"configure\"\n+#line 1291 \"configure\"\n #include \"confdefs.h\"\n /* System header to define __stub macros and hopefully few prototypes,\n     which can conflict with char $ac_func(); below.  */\n@@ -1311,7 +1310,7 @@ $ac_func();\n \n ; return 0; }\n EOF\n-if { (eval echo configure:1315: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n+if { (eval echo configure:1314: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n   rm -rf conftest*\n   eval \"ac_cv_func_$ac_func=yes\"\n else\n@@ -1338,12 +1337,12 @@ done\n for ac_func in ftello\n do\n echo $ac_n \"checking for $ac_func\"\"... $ac_c\" 1>&6\n-echo \"configure:1342: checking for $ac_func\" >&5\n+echo \"configure:1341: checking for $ac_func\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_func_$ac_func'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 1347 \"configure\"\n+#line 1346 \"configure\"\n #include \"confdefs.h\"\n /* System header to define __stub macros and hopefully few prototypes,\n     which can conflict with char $ac_func(); below.  */\n@@ -1366,7 +1365,7 @@ $ac_func();\n \n ; return 0; }\n EOF\n-if { (eval echo configure:1370: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n+if { (eval echo configure:1369: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n   rm -rf conftest*\n   eval \"ac_cv_func_$ac_func=yes\"\n else\n@@ -1393,12 +1392,12 @@ done\n for ac_func in ftruncate\n do\n echo $ac_n \"checking for $ac_func\"\"... $ac_c\" 1>&6\n-echo \"configure:1397: checking for $ac_func\" >&5\n+echo \"configure:1396: checking for $ac_func\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_func_$ac_func'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 1402 \"configure\"\n+#line 1401 \"configure\"\n #include \"confdefs.h\"\n /* System header to define __stub macros and hopefully few prototypes,\n     which can conflict with char $ac_func(); below.  */\n@@ -1421,7 +1420,7 @@ $ac_func();\n \n ; return 0; }\n EOF\n-if { (eval echo configure:1425: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n+if { (eval echo configure:1424: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n   rm -rf conftest*\n   eval \"ac_cv_func_$ac_func=yes\"\n else\n@@ -1448,12 +1447,12 @@ done\n for ac_func in mkstemp\n do\n echo $ac_n \"checking for $ac_func\"\"... $ac_c\" 1>&6\n-echo \"configure:1452: checking for $ac_func\" >&5\n+echo \"configure:1451: checking for $ac_func\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_func_$ac_func'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 1457 \"configure\"\n+#line 1456 \"configure\"\n #include \"confdefs.h\"\n /* System header to define __stub macros and hopefully few prototypes,\n     which can conflict with char $ac_func(); below.  */\n@@ -1476,7 +1475,7 @@ $ac_func();\n \n ; return 0; }\n EOF\n-if { (eval echo configure:1480: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n+if { (eval echo configure:1479: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n   rm -rf conftest*\n   eval \"ac_cv_func_$ac_func=yes\"\n else\n@@ -1503,12 +1502,12 @@ done\n for ac_func in tempnam\n do\n echo $ac_n \"checking for $ac_func\"\"... $ac_c\" 1>&6\n-echo \"configure:1507: checking for $ac_func\" >&5\n+echo \"configure:1506: checking for $ac_func\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_func_$ac_func'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 1512 \"configure\"\n+#line 1511 \"configure\"\n #include \"confdefs.h\"\n /* System header to define __stub macros and hopefully few prototypes,\n     which can conflict with char $ac_func(); below.  */\n@@ -1531,7 +1530,7 @@ $ac_func();\n \n ; return 0; }\n EOF\n-if { (eval echo configure:1535: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n+if { (eval echo configure:1534: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n   rm -rf conftest*\n   eval \"ac_cv_func_$ac_func=yes\"\n else\n@@ -1558,12 +1557,12 @@ done\n for ac_func in tmpnam\n do\n echo $ac_n \"checking for $ac_func\"\"... $ac_c\" 1>&6\n-echo \"configure:1562: checking for $ac_func\" >&5\n+echo \"configure:1561: checking for $ac_func\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_func_$ac_func'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 1567 \"configure\"\n+#line 1566 \"configure\"\n #include \"confdefs.h\"\n /* System header to define __stub macros and hopefully few prototypes,\n     which can conflict with char $ac_func(); below.  */\n@@ -1586,7 +1585,7 @@ $ac_func();\n \n ; return 0; }\n EOF\n-if { (eval echo configure:1590: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n+if { (eval echo configure:1589: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n   rm -rf conftest*\n   eval \"ac_cv_func_$ac_func=yes\"\n else\n@@ -1616,19 +1615,19 @@ done\n # However, on my sunos4/gcc setup unistd.h leads us wrongly to believe\n # we're posix-conformant, so always do the test.\n echo $ac_n \"checking for ansi/posix sprintf result\"\"... $ac_c\" 1>&6\n-echo \"configure:1620: checking for ansi/posix sprintf result\" >&5\n+echo \"configure:1619: checking for ansi/posix sprintf result\" >&5\n if test \"$cross_compiling\" = yes; then\n   g77_cv_sys_sprintf_ansi=no\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 1625 \"configure\"\n+#line 1624 \"configure\"\n #include \"confdefs.h\"\n   #include <stdio.h>\n     /* does sprintf return the number of chars transferred? */\n     main () {char foo[2]; (sprintf(foo, \"1\") == 1) ? exit(0) : exit(1);}\n \n EOF\n-if { (eval echo configure:1632: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext} && (./conftest; exit) 2>/dev/null\n+if { (eval echo configure:1631: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext} && (./conftest; exit) 2>/dev/null\n then\n   g77_cv_sys_sprintf_ansi=yes\n else\n@@ -1659,9 +1658,9 @@ fi\n \n # define NON_ANSI_RW_MODES on unix (can't hurt)\n echo $ac_n \"checking NON_ANSI_RW_MODES\"\"... $ac_c\" 1>&6\n-echo \"configure:1663: checking NON_ANSI_RW_MODES\" >&5\n+echo \"configure:1662: checking NON_ANSI_RW_MODES\" >&5\n cat > conftest.$ac_ext <<EOF\n-#line 1665 \"configure\"\n+#line 1664 \"configure\"\n #include \"confdefs.h\"\n #ifdef unix\n   yes\n@@ -1706,12 +1705,12 @@ EOF\n \n \n echo $ac_n \"checking for off_t\"\"... $ac_c\" 1>&6\n-echo \"configure:1710: checking for off_t\" >&5\n+echo \"configure:1709: checking for off_t\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_type_off_t'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 1715 \"configure\"\n+#line 1714 \"configure\"\n #include \"confdefs.h\"\n #include <sys/types.h>\n #if STDC_HEADERS"}, {"sha": "0455647e4422d034494207e89c7408878b2c2a4e", "filename": "libf2c/libI77/configure.in", "status": "modified", "additions": 0, "deletions": 11, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibI77%2Fconfigure.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibI77%2Fconfigure.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibI77%2Fconfigure.in?ref=4d85a6fea685603493f2a4dbcfd36d6fd25fbe26", "patch": "@@ -62,17 +62,6 @@ the G77 runtime system.  If necessary, install gcc now with \\`LANGUAGES=c',\n then the target library, then build with \\`LANGUAGES=f77'.])])\n \n AC_HEADER_STDC\n-dnl We could do this if we didn't know we were using gcc\n-dnl AC_MSG_CHECKING(for prototype-savvy compiler)\n-dnl AC_CACHE_VAL(g77_cv_sys_proto,                \n-dnl   [AC_TRY_LINK(,                             \n-dnl dnl looks screwy because TRY_LINK expects a function body\n-dnl    [return 0;} int foo (int * bar) {],       \n-dnl    g77_cv_sys_proto=yes,                      \n-dnl    [g77_cv_sys_proto=no                       \n-dnl     AC_DEFINE(KR_headers)])])                \n-dnl AC_MSG_RESULT($g77_cv_sys_proto)              \n-\n AC_MSG_CHECKING(for posix)\n AC_CACHE_VAL(g77_cv_header_posix,\n   AC_EGREP_CPP(yes,"}, {"sha": "cfadb15347a39b5a14cf5ca33852cac691e8a804", "filename": "libf2c/libI77/dfe.c", "status": "modified", "additions": 0, "deletions": 12, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibI77%2Fdfe.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibI77%2Fdfe.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibI77%2Fdfe.c?ref=4d85a6fea685603493f2a4dbcfd36d6fd25fbe26", "patch": "@@ -61,11 +61,7 @@ y_newrec(Void)\n \treturn(1);\n }\n \n-#ifdef KR_headers\n-c_dfe(a) cilist *a;\n-#else\n c_dfe(cilist *a)\n-#endif\n {\n \tf__sequential=0;\n \tf__formatted=f__external=1;\n@@ -86,11 +82,7 @@ c_dfe(cilist *a)\n \tf__curunit->uend = 0;\n \treturn(0);\n }\n-#ifdef KR_headers\n-integer s_rdfe(a) cilist *a;\n-#else\n integer s_rdfe(cilist *a)\n-#endif\n {\n \tint n;\n \tif(f__init != 1) f_init();\n@@ -109,11 +101,7 @@ integer s_rdfe(cilist *a)\n \tfmt_bg();\n \treturn(0);\n }\n-#ifdef KR_headers\n-integer s_wdfe(a) cilist *a;\n-#else\n integer s_wdfe(cilist *a)\n-#endif\n {\n \tint n;\n \tif(f__init != 1) f_init();"}, {"sha": "860af54092248d0fd6bac221011f804032c8e911", "filename": "libf2c/libI77/dolio.c", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibI77%2Fdolio.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibI77%2Fdolio.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibI77%2Fdolio.c?ref=4d85a6fea685603493f2a4dbcfd36d6fd25fbe26", "patch": "@@ -4,15 +4,9 @@\n #ifdef __cplusplus\n extern \"C\" {\n #endif\n-#ifdef KR_headers\n-extern int (*f__lioproc)();\n-\n-integer do_lio(type,number,ptr,len) ftnint *number,*type; char *ptr; ftnlen len;\n-#else\n extern int (*f__lioproc)(ftnint*, char*, ftnlen, ftnint);\n \n integer do_lio(ftnint *type, ftnint *number, char *ptr, ftnlen len)\n-#endif\n {\n \treturn((*f__lioproc)(number,ptr,len,*type));\n }"}, {"sha": "d118c4d5c129f7b1723a4c40974e3f3950ede376", "filename": "libf2c/libI77/due.c", "status": "modified", "additions": 0, "deletions": 12, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibI77%2Fdue.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibI77%2Fdue.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibI77%2Fdue.c?ref=4d85a6fea685603493f2a4dbcfd36d6fd25fbe26", "patch": "@@ -2,11 +2,7 @@\n #include \"f2c.h\"\n #include \"fio.h\"\n \n-#ifdef KR_headers\n-c_due(a) cilist *a;\n-#else\n c_due(cilist *a)\n-#endif\n {\n \tif(f__init != 1) f_init();\n \tf__init = 3;\n@@ -29,11 +25,7 @@ c_due(cilist *a)\n \tf__curunit->uend = 0;\n \treturn(0);\n }\n-#ifdef KR_headers\n-integer s_rdue(a) cilist *a;\n-#else\n integer s_rdue(cilist *a)\n-#endif\n {\n \tint n;\n \tf__reading=1;\n@@ -42,11 +34,7 @@ integer s_rdue(cilist *a)\n \t\terr(a->cierr,errno,\"read start\");\n \treturn(0);\n }\n-#ifdef KR_headers\n-integer s_wdue(a) cilist *a;\n-#else\n integer s_wdue(cilist *a)\n-#endif\n {\n \tint n;\n \tf__reading=0;"}, {"sha": "bd7f0c1e68743ba5bcb2ff651228f9e435c74176", "filename": "libf2c/libI77/endfile.c", "status": "modified", "additions": 0, "deletions": 17, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibI77%2Fendfile.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibI77%2Fendfile.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibI77%2Fendfile.c?ref=4d85a6fea685603493f2a4dbcfd36d6fd25fbe26", "patch": "@@ -5,24 +5,15 @@\n #include <sys/types.h>\n #include <unistd.h>\n \n-#ifdef KR_headers\n-extern char *strcpy();\n-extern FILE *tmpfile();\n-#else\n #undef abs\n #undef min\n #undef max\n #include <stdlib.h>\n #include <string.h>\n-#endif\n \n extern char *f__r_mode[], *f__w_mode[];\n \n-#ifdef KR_headers\n-integer f_end(a) alist *a;\n-#else\n integer f_end(alist *a)\n-#endif\n {\n \tunit *b;\n \tFILE *tf;\n@@ -44,11 +35,7 @@ integer f_end(alist *a)\n \n #ifndef HAVE_FTRUNCATE\n  static int\n-#ifdef KR_headers\n-copy(from, len, to) FILE *from, *to; register long len;\n-#else\n copy(FILE *from, register long len, FILE *to)\n-#endif\n {\n \tint len1;\n \tchar buf[BUFSIZ];\n@@ -64,11 +51,7 @@ copy(FILE *from, register long len, FILE *to)\n #endif /* !defined(HAVE_FTRUNCATE) */\n \n  int\n-#ifdef KR_headers\n-t_runc(a) alist *a;\n-#else\n t_runc(alist *a)\n-#endif\n {\n \toff_t loc, len;\n \tunit *b;"}, {"sha": "15cee11372ec874b2bb112de89312a94c987eb2d", "filename": "libf2c/libI77/err.c", "status": "modified", "additions": 0, "deletions": 31, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibI77%2Ferr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibI77%2Ferr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibI77%2Ferr.c?ref=4d85a6fea685603493f2a4dbcfd36d6fd25fbe26", "patch": "@@ -6,14 +6,10 @@\n #include <sys/stat.h>\n #endif\n #include \"f2c.h\"\n-#ifdef KR_headers\n-extern char *malloc();\n-#else\n #undef abs\n #undef min\n #undef max\n #include <stdlib.h>\n-#endif\n #include \"fio.h\"\n #include \"fmt.h\"\t/* for struct syl */\n \n@@ -29,17 +25,10 @@ flag f__cplus,f__cblank;\n char *f__fmtbuf;\n int f__fmtlen;\n flag f__external;\t/*1 if external io, 0 if internal */\n-#ifdef KR_headers\n-int (*f__doed)(),(*f__doned)();\n-int (*f__doend)(),(*f__donewrec)(),(*f__dorevert)();\n-int (*f__getn)();\t/* for formatted input */\n-void (*f__putn)();\t/* for formatted output */\n-#else\n int (*f__getn)(void);\t/* for formatted input */\n void (*f__putn)(int);\t/* for formatted output */\n int (*f__doed)(struct syl*, char*, ftnlen),(*f__doned)(struct syl*);\n int (*f__dorevert)(void),(*f__donewrec)(void),(*f__doend)(void);\n-#endif\n flag f__sequential;\t/*1 if sequential io, 0 if direct*/\n flag f__formatted;\t/*1 if formatted io, 0 if unformatted*/\n FILE *f__cf;\t/*current file*/\n@@ -87,11 +76,7 @@ char *F_err[] =\n };\n #define MAXERR (sizeof(F_err)/sizeof(char *)+100)\n \n-#ifdef KR_headers\n-f__canseek(f) FILE *f; /*SYSDEP*/\n-#else\n f__canseek(FILE *f) /*SYSDEP*/\n-#endif\n {\n #ifdef NON_UNIX_STDIO\n \treturn !isatty(fileno(f));\n@@ -142,11 +127,7 @@ f__canseek(FILE *f) /*SYSDEP*/\n }\n \n  void\n-#ifdef KR_headers\n-f__fatal(n,s) char *s;\n-#else\n f__fatal(int n, char *s)\n-#endif\n {\n \tstatic int dead = 0;\n \n@@ -204,11 +185,7 @@ f_init(Void)\n \tp->ufmt=1;\n \tp->uwrt=1;\n }\n-#ifdef KR_headers\n-f__nowreading(x) unit *x;\n-#else\n f__nowreading(unit *x)\n-#endif\n {\n \toff_t loc;\n \tint ufmt, urw;\n@@ -235,11 +212,7 @@ f__nowreading(unit *x)\n \tx->uwrt = 0;\n \treturn 0;\n }\n-#ifdef KR_headers\n-f__nowwriting(x) unit *x;\n-#else\n f__nowwriting(unit *x)\n-#endif\n {\n \toff_t loc;\n \tint ufmt;\n@@ -275,11 +248,7 @@ f__nowwriting(unit *x)\n }\n \n  int\n-#ifdef KR_headers\n-err__fl(f, m, s) int f, m; char *s;\n-#else\n err__fl(int f, int m, char *s)\n-#endif\n {\n \tif (!f)\n \t\tf__fatal(m, s);"}, {"sha": "52086ba482ecb05aeb17dc561999520825f5701a", "filename": "libf2c/libI77/fio.h", "status": "modified", "additions": 0, "deletions": 11, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibI77%2Ffio.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibI77%2Ffio.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibI77%2Ffio.h?ref=4d85a6fea685603493f2a4dbcfd36d6fd25fbe26", "patch": "@@ -59,16 +59,6 @@ extern int f__init;\n extern cilist *f__elist;\t/*active external io list*/\n extern flag f__reading,f__external,f__sequential,f__formatted;\n #undef Void\n-#ifdef KR_headers\n-#define Void /*void*/\n-extern int (*f__getn)();\t/* for formatted input */\n-extern void (*f__putn)();\t/* for formatted output */\n-extern void x_putc();\n-extern long f__inode();\n-extern VOID sig_die();\n-extern int (*f__donewrec)(), t_putc(), x_wSL();\n-extern int c_sfe(), err__fl(), xrd_SL(), f__putbuf();\n-#else\n #define Void void\n #ifdef __cplusplus\n extern \"C\" {\n@@ -94,7 +84,6 @@ extern int f__putbuf(int);\n #ifdef __cplusplus\n \t}\n #endif\n-#endif\n extern int (*f__doend)(Void);\n extern FILE *f__cf;\t/*current file*/\n extern unit *f__curunit;\t/*current unit*/"}, {"sha": "af41fd85b2a5f51f5691a227fd54838ed059ff15", "filename": "libf2c/libI77/fmt.c", "status": "modified", "additions": 0, "deletions": 45, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibI77%2Ffmt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibI77%2Ffmt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibI77%2Ffmt.c?ref=4d85a6fea685603493f2a4dbcfd36d6fd25fbe26", "patch": "@@ -23,11 +23,7 @@ static struct syl f__syl[SYLMX];\n int f__parenlvl,f__pc,f__revloc;\n \n  static\n-#ifdef KR_headers\n-char *ap_end(s) char *s;\n-#else\n char *ap_end(char *s)\n-#endif\n {\tchar quote;\n \tquote= *s++;\n \tfor(;*s;s++)\n@@ -42,11 +38,7 @@ char *ap_end(char *s)\n \t/*NOTREACHED*/ return 0;\n }\n  static\n-#ifdef KR_headers\n-op_gen(a,b,c,d)\n-#else\n op_gen(int a, int b, int c, int d)\n-#endif\n {\tstruct syl *p= &f__syl[f__pc];\n \tif(f__pc>=SYLMX)\n \t{\tfprintf(stderr,\"format too complicated:\\n\");\n@@ -58,13 +50,8 @@ op_gen(int a, int b, int c, int d)\n \tp->p2.i[1]=d;\n \treturn(f__pc++);\n }\n-#ifdef KR_headers\n-static char *f_list();\n-static char *gt_num(s,n,n1) char *s; int *n, n1;\n-#else\n static char *f_list(char*);\n static char *gt_num(char *s, int *n, int n1)\n-#endif\n {\tint m=0,f__cnt=0;\n \tchar c;\n \tfor(c= *s;;c = *s)\n@@ -87,11 +74,7 @@ static char *gt_num(char *s, int *n, int n1)\n }\n \n  static\n-#ifdef KR_headers\n-char *f_s(s,curloc) char *s;\n-#else\n char *f_s(char *s, int curloc)\n-#endif\n {\n \tskip(s);\n \tif(*s++!='(')\n@@ -108,11 +91,7 @@ char *f_s(char *s, int curloc)\n }\n \n  static\n-#ifdef KR_headers\n-ne_d(s,p) char *s,**p;\n-#else\n ne_d(char *s, char **p)\n-#endif\n {\tint n,x,sign=0;\n \tstruct syl *sp;\n \tswitch(*s)\n@@ -200,11 +179,7 @@ ne_d(char *s, char **p)\n }\n \n  static\n-#ifdef KR_headers\n-e_d(s,p) char *s,**p;\n-#else\n e_d(char *s, char **p)\n-#endif\n {\tint i,im,n,w,d,e,found=0,x=0;\n \tchar *sv=s;\n \ts=gt_num(s,&n,1);\n@@ -319,11 +294,7 @@ e_d(char *s, char **p)\n \treturn(1);\n }\n  static\n-#ifdef KR_headers\n-char *i_tem(s) char *s;\n-#else\n char *i_tem(char *s)\n-#endif\n {\tchar *t;\n \tint n,curloc;\n \tif(*s==')') return(s);\n@@ -335,11 +306,7 @@ char *i_tem(char *s)\n }\n \n  static\n-#ifdef KR_headers\n-char *f_list(s) char *s;\n-#else\n char *f_list(char *s)\n-#endif\n {\n \tfor(;*s!=0;)\n \t{\tskip(s);\n@@ -359,11 +326,7 @@ char *f_list(char *s)\n \treturn(NULL);\n }\n \n-#ifdef KR_headers\n-pars_f(s) char *s;\n-#else\n pars_f(char *s)\n-#endif\n {\n \tchar *e;\n \n@@ -405,11 +368,7 @@ int f__cnt[STKSZ],f__ret[STKSZ],f__cp,f__rp;\n flag f__workdone, f__nonl;\n \n  static\n-#ifdef KR_headers\n-type_f(n)\n-#else\n type_f(int n)\n-#endif\n {\n \tswitch(n)\n \t{\n@@ -437,11 +396,7 @@ type_f(int n)\n \t\treturn(ED);\n \t}\n }\n-#ifdef KR_headers\n-integer do_fio(number,ptr,len) ftnint *number; ftnlen len; char *ptr;\n-#else\n integer do_fio(ftnint *number, char *ptr, ftnlen len)\n-#endif\n {\tstruct syl *p;\n \tint n,i;\n \tfor(i=0;i<*number;i++,ptr+=len)"}, {"sha": "7219dce02d7365425499356f5af89f7c35592a34", "filename": "libf2c/libI77/fmt.h", "status": "modified", "additions": 0, "deletions": 13, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibI77%2Ffmt.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibI77%2Ffmt.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibI77%2Ffmt.h?ref=4d85a6fea685603493f2a4dbcfd36d6fd25fbe26", "patch": "@@ -46,21 +46,13 @@ typedef union\n } ufloat;\n typedef union\n {\tshort is;\n-#ifndef KR_headers\n \tsigned\n-#endif\n \t\tchar ic;\n \tinteger il;\n #ifdef Allow_TYQUAD\n \tlongint ili;\n #endif\n } Uint;\n-#ifdef KR_headers\n-extern int (*f__doed)(),(*f__doned)();\n-extern int (*f__dorevert)();\n-extern int rd_ed(),rd_ned();\n-extern int w_ed(),w_ned();\n-#else\n #ifdef __cplusplus\n extern \"C\" {\n #endif\n@@ -76,7 +68,6 @@ extern int wrt_L(Uint*, int, ftnlen);\n #ifdef __cplusplus\n \t}\n #endif\n-#endif\n extern flag f__cblank,f__cplus,f__workdone, f__nonl;\n extern char *f__fmtbuf;\n extern int f__fmtlen;\n@@ -94,8 +85,4 @@ extern int f__cursor;\n #define TYQUAD 14\n #endif\n \n-#ifdef KR_headers\n-extern char *f__icvt();\n-#else\n extern char *f__icvt(longint, int*, int*, int);\n-#endif"}, {"sha": "afc8bfdb6f4736db7d3a0530cf90070b91285ae4", "filename": "libf2c/libI77/fmtlib.c", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibI77%2Ffmtlib.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibI77%2Ffmtlib.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibI77%2Ffmtlib.c?ref=4d85a6fea685603493f2a4dbcfd36d6fd25fbe26", "patch": "@@ -10,12 +10,7 @@\n #define ulongint unsigned long\n #endif\n \n-#ifdef KR_headers\n-char *f__icvt(value,ndigit,sign, base) longint value; int *ndigit,*sign;\n- register int base;\n-#else\n char *f__icvt(longint value, int *ndigit, int *sign, int base)\n-#endif\n {\n \tstatic char buf[MAXINTLENGTH+1];\n \tregister int i;"}, {"sha": "44a5bbca9ebebe8bf939de2aba6365e7116e3251", "filename": "libf2c/libI77/ftell_.c", "status": "modified", "additions": 0, "deletions": 12, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibI77%2Fftell_.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibI77%2Fftell_.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibI77%2Fftell_.c?ref=4d85a6fea685603493f2a4dbcfd36d6fd25fbe26", "patch": "@@ -3,34 +3,22 @@\n #include \"fio.h\"\n \n  static FILE *\n-#ifdef KR_headers\n-unit_chk(Unit, who) integer Unit; char *who;\n-#else\n unit_chk(integer Unit, char *who)\n-#endif\n {\n \tif (Unit >= MXUNIT || Unit < 0)\n \t\tf__fatal(101, who);\n \treturn f__units[Unit].ufd;\n \t}\n \n  integer\n-#ifdef KR_headers\n-G77_ftell_0 (Unit) integer *Unit;\n-#else\n G77_ftell_0 (integer *Unit)\n-#endif\n {\n \tFILE *f;\n \treturn (f = unit_chk(*Unit, \"ftell\")) ? (integer) FTELL(f) : -1L;\n \t}\n \n  integer\n-#ifdef KR_headers\n-G77_fseek_0 (Unit, offset, xwhence) integer *Unit, *offset, *xwhence;\n-#else\n G77_fseek_0 (integer *Unit, integer *offset, integer *xwhence)\n-#endif\n {\n \tFILE *f;\n \tint w = (int)*xwhence;"}, {"sha": "ee782f482da29c0bf3a5a1fe79eb3c1bf3c7509d", "filename": "libf2c/libI77/iio.c", "status": "modified", "additions": 0, "deletions": 16, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibI77%2Fiio.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibI77%2Fiio.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibI77%2Fiio.c?ref=4d85a6fea685603493f2a4dbcfd36d6fd25fbe26", "patch": "@@ -16,11 +16,7 @@ z_getc(Void)\n }\n \n  void\n-#ifdef KR_headers\n-z_putc(c)\n-#else\n z_putc(int c)\n-#endif\n {\n \tif (f__icptr < f__icend && f__recpos++ < f__svic->icirlen)\n \t\t*f__icptr++ = c;\n@@ -41,11 +37,7 @@ z_endp(Void)\n \treturn 0;\n \t}\n \n-#ifdef KR_headers\n-c_si(a) icilist *a;\n-#else\n c_si(icilist *a)\n-#endif\n {\n \tif (f__init & 2)\n \t\tf__fatal (131, \"I/O recursion\");\n@@ -78,11 +70,7 @@ iw_rev(Void)\n \treturn(f__workdone=0);\n \t}\n \n-#ifdef KR_headers\n-integer s_rsfi(a) icilist *a;\n-#else\n integer s_rsfi(icilist *a)\n-#endif\n {\tint n;\n \tif(n=c_si(a)) return(n);\n \tf__reading=1;\n@@ -109,11 +97,7 @@ z_wnew(Void)\n \tf__icnum++;\n \treturn 1;\n }\n-#ifdef KR_headers\n-integer s_wsfi(a) icilist *a;\n-#else\n integer s_wsfi(icilist *a)\n-#endif\n {\tint n;\n \tif(n=c_si(a)) return(n);\n \tf__reading=0;"}, {"sha": "bf9f87b8919705ed137ab4e72235980617f21339", "filename": "libf2c/libI77/ilnw.c", "status": "modified", "additions": 0, "deletions": 16, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibI77%2Filnw.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibI77%2Filnw.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibI77%2Filnw.c?ref=4d85a6fea685603493f2a4dbcfd36d6fd25fbe26", "patch": "@@ -6,11 +6,7 @@ extern char *f__icptr;\n extern char *f__icend;\n extern icilist *f__svic;\n extern int f__icnum;\n-#ifdef KR_headers\n-extern void z_putc();\n-#else\n extern void z_putc(int);\n-#endif\n \n  static int\n z_wSL(Void)\n@@ -21,11 +17,7 @@ z_wSL(Void)\n \t}\n \n  static void\n-#ifdef KR_headers\n-c_liw(a) icilist *a;\n-#else\n c_liw(icilist *a)\n-#endif\n {\n \tf__reading = 0;\n \tf__external = 0;\n@@ -44,11 +36,7 @@ c_liw(icilist *a)\n \t}\n \n  integer\n-#ifdef KR_headers\n-s_wsni(a) icilist *a;\n-#else\n s_wsni(icilist *a)\n-#endif\n {\n \tcilist ca;\n \n@@ -62,11 +50,7 @@ s_wsni(icilist *a)\n \t}\n \n  integer\n-#ifdef KR_headers\n-s_wsli(a) icilist *a;\n-#else\n s_wsli(icilist *a)\n-#endif\n {\n \tif(f__init != 1) f_init();\n \tf__init = 3;"}, {"sha": "53cba24d9f8a7c0bdae2b4e192dd4b910f22ddca", "filename": "libf2c/libI77/inquire.c", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibI77%2Finquire.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibI77%2Finquire.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibI77%2Finquire.c?ref=4d85a6fea685603493f2a4dbcfd36d6fd25fbe26", "patch": "@@ -2,17 +2,13 @@\n #include \"f2c.h\"\n #include \"fio.h\"\n #include <string.h>\n-#ifdef KR_headers\n-integer f_inqu(a) inlist *a;\n-#else\n #if defined (MSDOS) && !defined (GO32)\n #undef abs\n #undef min\n #undef max\n #include \"io.h\"\n #endif\n integer f_inqu(inlist *a)\n-#endif\n {\tflag byfile;\n \tint i, n;\n \tunit *p;"}, {"sha": "c9540db044c258738fb0f458dc420765f41cc521", "filename": "libf2c/libI77/lio.h", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibI77%2Flio.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibI77%2Flio.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibI77%2Flio.h?ref=4d85a6fea685603493f2a4dbcfd36d6fd25fbe26", "patch": "@@ -43,9 +43,7 @@\n \n typedef union\n {\n-#ifndef KR_headers\n \tsigned\n-#endif\n \t\tchar\tflchar;\n \tshort\tflshort;\n \tftnint\tflint;\n@@ -56,10 +54,6 @@ typedef union\n \tdoublereal\tfldouble;\n } flex;\n extern int f__scale;\n-#ifdef KR_headers\n-extern int (*f__lioproc)(), (*l_getc)(), (*l_ungetc)();\n-extern int l_read(), l_write();\n-#else\n #ifdef __cplusplus\n extern \"C\" {\n #endif\n@@ -73,5 +67,4 @@ extern int z_rnew(void);\n #ifdef __cplusplus\n \t}\n #endif\n-#endif\n extern ftnint L_len;"}, {"sha": "2b99175790863f6330d8ebb83c73090a7eef5e08", "filename": "libf2c/libI77/lread.c", "status": "modified", "additions": 0, "deletions": 48, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibI77%2Flread.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibI77%2Flread.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibI77%2Flread.c?ref=4d85a6fea685603493f2a4dbcfd36d6fd25fbe26", "patch": "@@ -16,25 +16,17 @@ static longint f__llx;\n static int quad_read;\n #endif\n \n-#ifdef KR_headers\n-extern double atof();\n-extern char *malloc(), *realloc();\n-int (*f__lioproc)(), (*l_getc)(), (*l_ungetc)();\n-#else\n #undef abs\n #undef min\n #undef max\n #include <stdlib.h>\n-#endif\n \n #include \"fmt.h\"\n #include \"lio.h\"\n #include \"fp.h\"\n \n-#ifndef KR_headers\n int (*f__lioproc)(ftnint*, char*, ftnlen, ftnint), (*l_getc)(void),\n \t(*l_ungetc)(int,FILE*);\n-#endif\n \n int l_eof;\n \n@@ -64,20 +56,12 @@ char f__ltab[128+1] = {\t/* offset one for EOF */\n \n #ifdef ungetc\n  static int\n-#ifdef KR_headers\n-un_getc(x,f__cf) int x; FILE *f__cf;\n-#else\n un_getc(int x, FILE *f__cf)\n-#endif\n { return ungetc(x,f__cf); }\n #else\n #define un_getc ungetc\n-#ifdef KR_headers\n- extern int ungetc();\n-#else\n extern int ungetc(int, FILE*);\t/* for systems with a buggy stdio.h */\n #endif\n-#endif\n \n t_getc(Void)\n {\tint ch;\n@@ -110,11 +94,7 @@ double f__lx,f__ly;\n #define Ungetc(x,y) (*l_ungetc)(x,y)\n \n  static int\n-#ifdef KR_headers\n-l_R(poststar, reqint) int poststar, reqint;\n-#else\n l_R(int poststar, int reqint)\n-#endif\n {\n \tchar s[FMAX+EXPMAXDIGS+4];\n \tregister int ch;\n@@ -261,11 +241,7 @@ l_R(int poststar, int reqint)\n \t}\n \n  static int\n-#ifdef KR_headers\n-rd_count(ch) register int ch;\n-#else\n rd_count(register int ch)\n-#endif\n {\n \tif (ch < '0' || ch > '9')\n \t\treturn 1;\n@@ -342,11 +318,7 @@ l_C(Void)\n \n  static char nmLbuf[256], *nmL_next;\n  static int (*nmL_getc_save)(Void);\n-#ifdef KR_headers\n- static int (*nmL_ungetc_save)(/* int, FILE* */);\n-#else\n  static int (*nmL_ungetc_save)(int, FILE*);\n-#endif\n \n  static int\n nmL_getc(Void)\n@@ -360,22 +332,14 @@ nmL_getc(Void)\n \t}\n \n  static int\n-#ifdef KR_headers\n-nmL_ungetc(x, f) int x; FILE *f;\n-#else\n nmL_ungetc(int x, FILE *f)\n-#endif\n {\n \tf = f;\t/* banish non-use warning */\n \treturn *--nmL_next = x;\n \t}\n \n  static int\n-#ifdef KR_headers\n-Lfinish(ch, dot, rvp) int ch, dot, *rvp;\n-#else\n Lfinish(int ch, int dot, int *rvp)\n-#endif\n {\n \tchar *s, *se;\n \tstatic char what[] = \"namelist input\";\n@@ -619,11 +583,7 @@ l_CHAR(Void)\n \t\t}\n \t}\n }\n-#ifdef KR_headers\n-c_le(a) cilist *a;\n-#else\n c_le(cilist *a)\n-#endif\n {\n \tif(f__init != 1) f_init();\n \tf__init = 3;\n@@ -640,11 +600,7 @@ c_le(cilist *a)\n \tif(!f__curunit->ufmt) err(a->cierr,103,\"lio\");\n \treturn(0);\n }\n-#ifdef KR_headers\n-l_read(number,ptr,len,type) ftnint *number,type; char *ptr; ftnlen len;\n-#else\n l_read(ftnint *number, char *ptr, ftnlen len, ftnint type)\n-#endif\n {\n #define Ptr ((flex *)ptr)\n \tint i,n,ch;\n@@ -771,11 +727,7 @@ l_read(ftnint *number, char *ptr, ftnlen len, ftnint type)\n \treturn(0);\n #undef Ptr\n }\n-#ifdef KR_headers\n-integer s_rsle(a) cilist *a;\n-#else\n integer s_rsle(cilist *a)\n-#endif\n {\n \tint n;\n "}, {"sha": "d21a0feb7932744f4ea0e65e2351914de086ec4b", "filename": "libf2c/libI77/lwrite.c", "status": "modified", "additions": 0, "deletions": 36, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibI77%2Flwrite.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibI77%2Flwrite.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibI77%2Flwrite.c?ref=4d85a6fea685603493f2a4dbcfd36d6fd25fbe26", "patch": "@@ -14,11 +14,7 @@ donewrec(Void)\n \t}\n \n  static VOID\n-#ifdef KR_headers\n-lwrt_I(n) longint n;\n-#else\n lwrt_I(longint n)\n-#endif\n {\n \tchar *p;\n \tint ndigit, sign;\n@@ -33,22 +29,14 @@ lwrt_I(longint n)\n \t\tPUT(*p++);\n }\n  static VOID\n-#ifdef KR_headers\n-lwrt_L(n, len) ftnint n; ftnlen len;\n-#else\n lwrt_L(ftnint n, ftnlen len)\n-#endif\n {\n \tif(f__recpos+LLOGW>=L_len)\n \t\tdonewrec();\n \twrt_L((Uint *)&n,LLOGW, len);\n }\n  static VOID\n-#ifdef KR_headers\n-lwrt_A(p,len) char *p; ftnlen len;\n-#else\n lwrt_A(char *p, ftnlen len)\n-#endif\n {\n \tint a;\n \tchar *p1, *pe;\n@@ -89,11 +77,7 @@ lwrt_A(char *p, ftnlen len)\n }\n \n  static int\n-#ifdef KR_headers\n-l_g(buf, n) char *buf; double n;\n-#else\n l_g(char *buf, double n)\n-#endif\n {\n #ifdef Old_list_output\n \tdoublereal absn;\n@@ -167,29 +151,17 @@ l_g(char *buf, double n)\n \t}\n \n  static VOID\n-#ifdef KR_headers\n-l_put(s) register char *s;\n-#else\n l_put(register char *s)\n-#endif\n {\n-#ifdef KR_headers\n-\tregister void (*pn)() = f__putn;\n-#else\n \tregister void (*pn)(int) = f__putn;\n-#endif\n \tregister int c;\n \n \twhile(c = *s++)\n \t\t(*pn)(c);\n \t}\n \n  static VOID\n-#ifdef KR_headers\n-lwrt_F(n) double n;\n-#else\n lwrt_F(double n)\n-#endif\n {\n \tchar buf[LEFBL];\n \n@@ -198,11 +170,7 @@ lwrt_F(double n)\n \tl_put(buf);\n }\n  static VOID\n-#ifdef KR_headers\n-lwrt_C(a,b) double a,b;\n-#else\n lwrt_C(double a, double b)\n-#endif\n {\n \tchar *ba, *bb, bufa[LEFBL], bufb[LEFBL];\n \tint al, bl;\n@@ -231,11 +199,7 @@ lwrt_C(double a, double b)\n \tl_put(bb);\n \tPUT(')');\n }\n-#ifdef KR_headers\n-l_write(number,ptr,len,type) ftnint *number,type; char *ptr; ftnlen len;\n-#else\n l_write(ftnint *number, char *ptr, ftnlen len, ftnint type)\n-#endif\n {\n #define Ptr ((flex *)ptr)\n \tint i;"}, {"sha": "9e3ce67cd79073b400f2a641a4e133af89a30966", "filename": "libf2c/libI77/open.c", "status": "modified", "additions": 0, "deletions": 32, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibI77%2Fopen.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibI77%2Fopen.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibI77%2Fopen.c?ref=4d85a6fea685603493f2a4dbcfd36d6fd25fbe26", "patch": "@@ -10,20 +10,12 @@\n #endif\n #endif\n \n-#ifdef KR_headers\n-extern char *malloc();\n-#ifdef NON_ANSI_STDIO\n-extern char *mktemp();\n-#endif\n-extern integer f_clos();\n-#else\n #undef abs\n #undef min\n #undef max\n #include <stdlib.h>\n extern int f__canseek(FILE*);\n extern integer f_clos(cllist*);\n-#endif\n \n #ifdef NON_ANSI_RW_MODES\n char *f__r_mode[2] = {\"r\", \"r\"};\n@@ -37,11 +29,7 @@ char *f__w_mode[4] = {\"wb\", \"w\", \"r+b\", \"r+\"};\n  int f__buflen = (int)sizeof(f__buf0);\n \n  static void\n-#ifdef KR_headers\n-f__bufadj(n, c) int n, c;\n-#else\n f__bufadj(int n, int c)\n-#endif\n {\n \tunsigned int len;\n \tchar *nbuf, *s, *t, *te;\n@@ -64,11 +52,7 @@ f__bufadj(int n, int c)\n \t}\n \n  int\n-#ifdef KR_headers\n-f__putbuf(c) int c;\n-#else\n f__putbuf(int c)\n-#endif\n {\n \tchar *s, *se;\n \tint n;\n@@ -94,11 +78,7 @@ f__putbuf(int c)\n \t}\n \n  void\n-#ifdef KR_headers\n-x_putc(c)\n-#else\n x_putc(int c)\n-#endif\n {\n \tif (f__recpos >= f__buflen)\n \t\tf__bufadj(f__recpos, f__buflen);\n@@ -109,11 +89,7 @@ x_putc(int c)\n   do {if(f) {f__init &= ~2; errno= m;} else opn_err(m,s,a); return(m);} while(0)\n \n  static void\n-#ifdef KR_headers\n-opn_err(m, s, a) int m; char *s; olist *a;\n-#else\n opn_err(int m, char *s, olist *a)\n-#endif\n {\n \tif (a->ofnm) {\n \t\t/* supply file name to error message */\n@@ -124,11 +100,7 @@ opn_err(int m, char *s, olist *a)\n \tf__fatal(m, s);\n \t}\n \n-#ifdef KR_headers\n-integer f_open(a) olist *a;\n-#else\n integer f_open(olist *a)\n-#endif\n {\tunit *b;\n \tinteger rv;\n \tchar buf[256], *s, *env;\n@@ -284,11 +256,7 @@ integer f_open(olist *a)\n \t\t\t\topnerr(a->oerr,129,\"open\");\n \treturn(0);\n }\n-#ifdef KR_headers\n-fk_open(seq,fmt,n) ftnint n;\n-#else\n fk_open(int seq, int fmt, ftnint n)\n-#endif\n {\tchar nbuf[10];\n \tolist a;\n \tint rtn;"}, {"sha": "4da8ed6bb29cd99cf6627e0f482347c324390fab", "filename": "libf2c/libI77/rdfmt.c", "status": "modified", "additions": 0, "deletions": 44, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibI77%2Frdfmt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibI77%2Frdfmt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibI77%2Frdfmt.c?ref=4d85a6fea685603493f2a4dbcfd36d6fd25fbe26", "patch": "@@ -4,24 +4,16 @@\n #include \"fio.h\"\n \n extern int f__cursor;\n-#ifdef KR_headers\n-extern double atof();\n-#else\n #undef abs\n #undef min\n #undef max\n #include <stdlib.h>\n-#endif\n \n #include \"fmt.h\"\n #include \"fp.h\"\n \n  static int\n-#ifdef KR_headers\n-rd_Z(n,w,len) Uint *n; ftnlen len;\n-#else\n rd_Z(Uint *n, int w, ftnlen len)\n-#endif\n {\n \tlong x[9];\n \tchar *s, *s0, *s1, *se, *t;\n@@ -95,11 +87,7 @@ rd_Z(Uint *n, int w, ftnlen len)\n \t}\n \n  static int\n-#ifdef KR_headers\n-rd_I(n,w,len, base) Uint *n; int w; ftnlen len; register int base;\n-#else\n rd_I(Uint *n, int w, ftnlen len, register int base)\n-#endif\n {\n \tint bad, ch, sign;\n \tlongint x = 0;\n@@ -166,11 +154,7 @@ rd_I(Uint *n, int w, ftnlen len, register int base)\n }\n \n  static int\n-#ifdef KR_headers\n-rd_L(n,w,len) ftnint *n; ftnlen len;\n-#else\n rd_L(ftnint *n, int w, ftnlen len)\n-#endif\n {\tint ch, dot, lv;\n \n \tif (w <= 0)\n@@ -227,11 +211,7 @@ rd_L(ftnint *n, int w, ftnlen len)\n }\n \n  static int\n-#ifdef KR_headers\n-rd_F(p, w, d, len) ufloat *p; ftnlen len;\n-#else\n rd_F(ufloat *p, int w, int d, ftnlen len)\n-#endif\n {\n \tchar s[FMAX+EXPMAXDIGS+4];\n \tregister int ch;\n@@ -394,11 +374,7 @@ rd_F(ufloat *p, int w, int d, ftnlen len)\n \n \n  static int\n-#ifdef KR_headers\n-rd_A(p,len) char *p; ftnlen len;\n-#else\n rd_A(char *p, ftnlen len)\n-#endif\n {\tint i,ch;\n \tfor(i=0;i<len;i++)\n \t{\tGET(ch);\n@@ -407,11 +383,7 @@ rd_A(char *p, ftnlen len)\n \treturn(0);\n }\n  static int\n-#ifdef KR_headers\n-rd_AW(p,w,len) char *p; ftnlen len;\n-#else\n rd_AW(char *p, int w, ftnlen len)\n-#endif\n {\tint i,ch;\n \tif(w>=len)\n \t{\tfor(i=0;i<w-len;i++)\n@@ -430,23 +402,15 @@ rd_AW(char *p, int w, ftnlen len)\n \treturn(0);\n }\n  static int\n-#ifdef KR_headers\n-rd_H(n,s) char *s;\n-#else\n rd_H(int n, char *s)\n-#endif\n {\tint i,ch;\n \tfor(i=0;i<n;i++)\n \t\tif((ch=(*f__getn)())<0) return(ch);\n \t\telse *s++ = ch=='\\n'?' ':ch;\n \treturn(1);\n }\n  static int\n-#ifdef KR_headers\n-rd_POS(s) char *s;\n-#else\n rd_POS(char *s)\n-#endif\n {\tchar quote;\n \tint ch;\n \tquote= *s++;\n@@ -456,11 +420,7 @@ rd_POS(char *s)\n \t\telse *s = ch=='\\n'?' ':ch;\n \treturn(1);\n }\n-#ifdef KR_headers\n-rd_ed(p,ptr,len) struct syl *p; char *ptr; ftnlen len;\n-#else\n rd_ed(struct syl *p, char *ptr, ftnlen len)\n-#endif\n {\tint ch;\n \tfor(;f__cursor>0;f__cursor--) if((ch=(*f__getn)())<0) return(ch);\n \tif(f__cursor<0)\n@@ -519,11 +479,7 @@ rd_ed(struct syl *p, char *ptr, ftnlen len)\n \t\tclearerr(f__cf);\n \treturn(errno);\n }\n-#ifdef KR_headers\n-rd_ned(p) struct syl *p;\n-#else\n rd_ned(struct syl *p)\n-#endif\n {\n \tswitch(p->op)\n \t{"}, {"sha": "39c2dae7dafe26ba08076acab7517ee865d1102d", "filename": "libf2c/libI77/rewind.c", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibI77%2Frewind.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibI77%2Frewind.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibI77%2Frewind.c?ref=4d85a6fea685603493f2a4dbcfd36d6fd25fbe26", "patch": "@@ -1,11 +1,7 @@\n #include \"config.h\"\n #include \"f2c.h\"\n #include \"fio.h\"\n-#ifdef KR_headers\n-integer f_rew(a) alist *a;\n-#else\n integer f_rew(alist *a)\n-#endif\n {\n \tunit *b;\n \tif (f__init & 2)"}, {"sha": "5014665ee5b1f74224bb75bf0b82666f0ea336cb", "filename": "libf2c/libI77/rsfe.c", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibI77%2Frsfe.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibI77%2Frsfe.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibI77%2Frsfe.c?ref=4d85a6fea685603493f2a4dbcfd36d6fd25fbe26", "patch": "@@ -44,11 +44,7 @@ x_rev(Void)\n \t(void) xrd_SL();\n \treturn(0);\n }\n-#ifdef KR_headers\n-integer s_rsfe(a) cilist *a; /* start */\n-#else\n integer s_rsfe(cilist *a) /* start */\n-#endif\n {\tint n;\n \tif(f__init != 1) f_init();\n \tf__init = 3;"}, {"sha": "d083d48a2d698f1e3a7b75475c631a209333128d", "filename": "libf2c/libI77/rsli.c", "status": "modified", "additions": 0, "deletions": 16, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibI77%2Frsli.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibI77%2Frsli.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibI77%2Frsli.c?ref=4d85a6fea685603493f2a4dbcfd36d6fd25fbe26", "patch": "@@ -24,11 +24,7 @@ static int i_getc(Void)\n \t}\n \n  static\n-#ifdef KR_headers\n-int i_ungetc(ch, f) int ch; FILE *f;\n-#else\n int i_ungetc(int ch, FILE *f)\n-#endif\n {\n \tif (--f__recpos == f__svic->icirlen)\n \t\treturn '\\n';\n@@ -39,11 +35,7 @@ int i_ungetc(int ch, FILE *f)\n \t}\n \n  static void\n-#ifdef KR_headers\n-c_lir(a) icilist *a;\n-#else\n c_lir(icilist *a)\n-#endif\n {\n \textern int l_eof;\n \tif(f__init != 1) f_init();\n@@ -67,11 +59,7 @@ c_lir(icilist *a)\n \t}\n \n \n-#ifdef KR_headers\n-integer s_rsli(a) icilist *a;\n-#else\n integer s_rsli(icilist *a)\n-#endif\n {\n \tf__lioproc = l_read;\n \tf__lquit = 0;\n@@ -84,13 +72,9 @@ integer s_rsli(icilist *a)\n integer e_rsli(Void)\n { f__init = 1; return 0; }\n \n-#ifdef KR_headers\n-integer s_rsni(a) icilist *a;\n-#else\n extern int x_rsne(cilist*);\n \n integer s_rsni(icilist *a)\n-#endif\n {\n \textern int nml_read;\n \tinteger rv;"}, {"sha": "78497e8f3c4880bd9065c96635edb2a35884a5a2", "filename": "libf2c/libI77/rsne.c", "status": "modified", "additions": 0, "deletions": 47, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibI77%2Frsne.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibI77%2Frsne.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibI77%2Frsne.c?ref=4d85a6fea685603493f2a4dbcfd36d6fd25fbe26", "patch": "@@ -39,19 +39,6 @@\n  extern int f__lcount, nml_read;\n  extern t_getc(Void);\n \n-#ifdef KR_headers\n- extern char *malloc(), *memset();\n-\n-#ifdef ungetc\n- static int\n-un_getc(x,f__cf) int x; FILE *f__cf;\n-{ return ungetc(x,f__cf); }\n-#else\n-#define un_getc ungetc\n- extern int ungetc();\n-#endif\n-\n-#else\n #undef abs\n #undef min\n #undef max\n@@ -65,15 +52,10 @@ un_getc(int x, FILE *f__cf)\n #else\n #define un_getc ungetc\n extern int ungetc(int, FILE*);\t/* for systems with a buggy stdio.h */\n-#endif\n #endif\n \n  static Vardesc *\n-#ifdef KR_headers\n-hash(ht, s) hashtab *ht; register char *s;\n-#else\n hash(hashtab *ht, register char *s)\n-#endif\n {\n \tregister int c, x;\n \tregister hashentry *h;\n@@ -88,11 +70,7 @@ hash(hashtab *ht, register char *s)\n \t}\n \n  hashtab *\n-#ifdef KR_headers\n-mk_hashtab(nl) Namelist *nl;\n-#else\n mk_hashtab(Namelist *nl)\n-#endif\n {\n \tint nht, nv;\n \thashtab *ht;\n@@ -164,11 +142,7 @@ nl_init(Void) {\n #define Ungetc(x,y) (*l_ungetc)(x,y)\n \n  static int\n-#ifdef KR_headers\n-getname(s, slen) register char *s; int slen;\n-#else\n getname(register char *s, int slen)\n-#endif\n {\n \tregister char *se = s + slen - 1;\n \tregister int ch;\n@@ -190,11 +164,7 @@ getname(register char *s, int slen)\n \t}\n \n  static int\n-#ifdef KR_headers\n-getnum(chp, val) int *chp; ftnlen *val;\n-#else\n getnum(int *chp, ftnlen *val)\n-#endif\n {\n \tregister int ch, sign;\n \tregister ftnlen x;\n@@ -224,12 +194,7 @@ getnum(int *chp, ftnlen *val)\n \t}\n \n  static int\n-#ifdef KR_headers\n-getdimen(chp, d, delta, extent, x1)\n- int *chp; dimen *d; ftnlen delta, extent, *x1;\n-#else\n getdimen(int *chp, dimen *d, ftnlen delta, ftnlen extent, ftnlen *x1)\n-#endif\n {\n \tregister int k;\n \tftnlen x2, x3;\n@@ -263,11 +228,7 @@ getdimen(int *chp, dimen *d, ftnlen delta, ftnlen extent, ftnlen *x1)\n \n #ifndef No_Namelist_Questions\n  static Void\n-#ifdef KR_headers\n-print_ne(a) cilist *a;\n-#else\n print_ne(cilist *a)\n-#endif\n {\n \tflag intext = f__external;\n \tint rpsave = f__recpos;\n@@ -289,11 +250,7 @@ print_ne(cilist *a)\n \n  static char where0[] = \"namelist read start \";\n \n-#ifdef KR_headers\n-x_rsne(a) cilist *a;\n-#else\n x_rsne(cilist *a)\n-#endif\n {\n \tint ch, got1, k, n, nd, quote, readall;\n \tNamelist *nl;\n@@ -582,11 +539,7 @@ x_rsne(cilist *a)\n \t}\n \n  integer\n-#ifdef KR_headers\n-s_rsne(a) cilist *a;\n-#else\n s_rsne(cilist *a)\n-#endif\n {\n \textern int l_eof;\n \tint n;"}, {"sha": "c03675177322ab4f59a9ebafbffe1f43782149ed", "filename": "libf2c/libI77/sfe.c", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibI77%2Fsfe.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibI77%2Fsfe.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibI77%2Fsfe.c?ref=4d85a6fea685603493f2a4dbcfd36d6fd25fbe26", "patch": "@@ -12,11 +12,7 @@ integer e_rsfe(Void)\n \tf__fmtbuf=NULL;\n \treturn(n);\n }\n-#ifdef KR_headers\n-c_sfe(a) cilist *a; /* check */\n-#else\n c_sfe(cilist *a) /* check */\n-#endif\n {\tunit *p;\n \tif(a->ciunit >= MXUNIT || a->ciunit<0)\n \t\terr(a->cierr,101,\"startio\");"}, {"sha": "79e251d71a791e6667f49e8d05960bfbcfd8b835", "filename": "libf2c/libI77/sue.c", "status": "modified", "additions": 0, "deletions": 12, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibI77%2Fsue.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibI77%2Fsue.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibI77%2Fsue.c?ref=4d85a6fea685603493f2a4dbcfd36d6fd25fbe26", "patch": "@@ -4,11 +4,7 @@\n extern uiolen f__reclen;\n off_t f__recloc;\n \n-#ifdef KR_headers\n-c_sue(a) cilist *a;\n-#else\n c_sue(cilist *a)\n-#endif\n {\n \tf__external=f__sequential=1;\n \tf__formatted=0;\n@@ -23,11 +19,7 @@ c_sue(cilist *a)\n \tif(!f__curunit->useek) err(a->cierr,103,\"sue\");\n \treturn(0);\n }\n-#ifdef KR_headers\n-integer s_rsue(a) cilist *a;\n-#else\n integer s_rsue(cilist *a)\n-#endif\n {\n \tint n;\n \tif(f__init != 1) f_init();\n@@ -48,11 +40,7 @@ integer s_rsue(cilist *a)\n \t}\n \treturn(0);\n }\n-#ifdef KR_headers\n-integer s_wsue(a) cilist *a;\n-#else\n integer s_wsue(cilist *a)\n-#endif\n {\n \tint n;\n \tif(f__init != 1) f_init();"}, {"sha": "d282ee40cc3f922a1ff774e60188938230bd5e4e", "filename": "libf2c/libI77/uio.c", "status": "modified", "additions": 0, "deletions": 16, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibI77%2Fuio.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibI77%2Fuio.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibI77%2Fuio.c?ref=4d85a6fea685603493f2a4dbcfd36d6fd25fbe26", "patch": "@@ -3,11 +3,7 @@\n #include <sys/types.h>\n uiolen f__reclen;\n \n-#ifdef KR_headers\n-do_us(number,ptr,len) ftnint *number; char *ptr; ftnlen len;\n-#else\n do_us(ftnint *number, char *ptr, ftnlen len)\n-#endif\n {\n \tif(f__reading)\n \t{\n@@ -25,23 +21,15 @@ do_us(ftnint *number, char *ptr, ftnlen len)\n \t\treturn(0);\n \t}\n }\n-#ifdef KR_headers\n-integer do_ud(number,ptr,len) ftnint *number; char *ptr; ftnlen len;\n-#else\n integer do_ud(ftnint *number, char *ptr, ftnlen len)\n-#endif\n {\n \tf__recpos += (int)(*number * len);\n \tif(f__recpos > f__curunit->url && f__curunit->url!=1)\n \t\terr(f__elist->cierr,110,\"do_ud\");\n \tif(f__reading)\n \t{\n #ifdef Pad_UDread\n-#ifdef KR_headers\n-\tint i;\n-#else\n \tsize_t i;\n-#endif\n \t\tif (!(i = fread(ptr,(size_t)len,(size_t)(*number),f__cf))\n \t\t && !(f__recpos - *number*len))\n \t\t\terr(f__elist->cierr,EOF,\"do_ud\");\n@@ -57,11 +45,7 @@ integer do_ud(ftnint *number, char *ptr, ftnlen len)\n \t(void) fwrite(ptr,(size_t)len,(size_t)(*number),f__cf);\n \treturn(0);\n }\n-#ifdef KR_headers\n-integer do_uio(number,ptr,len) ftnint *number; char *ptr; ftnlen len;\n-#else\n integer do_uio(ftnint *number, char *ptr, ftnlen len)\n-#endif\n {\n \tif(f__sequential)\n \t\treturn(do_us(number,ptr,len));"}, {"sha": "ff7051e4cc99edb0bfa7c8ed57db62bf15b41a4b", "filename": "libf2c/libI77/util.c", "status": "modified", "additions": 0, "deletions": 12, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibI77%2Futil.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibI77%2Futil.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibI77%2Futil.c?ref=4d85a6fea685603493f2a4dbcfd36d6fd25fbe26", "patch": "@@ -9,11 +9,7 @@\n #include \"fio.h\"\n \n  VOID\n-#ifdef KR_headers\n-g_char(a,alen,b) char *a,*b; ftnlen alen;\n-#else\n g_char(char *a, ftnlen alen, char *b)\n-#endif\n {\n \tchar *x = a + alen, *y = b + alen;\n \n@@ -31,21 +27,13 @@ g_char(char *a, ftnlen alen, char *b)\n \t}\n \n  VOID\n-#ifdef KR_headers\n-b_char(a,b,blen) char *a,*b; ftnlen blen;\n-#else\n b_char(char *a, char *b, ftnlen blen)\n-#endif\n {\tint i;\n \tfor(i=0;i<blen && *a!=0;i++) *b++= *a++;\n \tfor(;i<blen;i++) *b++=' ';\n }\n #ifndef NON_UNIX_STDIO\n-#ifdef KR_headers\n-long f__inode(a, dev) char *a; int *dev;\n-#else\n long f__inode(char *a, int *dev)\n-#endif\n {\tstruct stat x;\n \tif(stat(a,&x)<0) return(-1);\n \t*dev = x.st_dev;"}, {"sha": "677364c48f18f4e77f88dc7ba1f64ad3beaddf7f", "filename": "libf2c/libI77/wref.c", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibI77%2Fwref.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibI77%2Fwref.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibI77%2Fwref.c?ref=4d85a6fea685603493f2a4dbcfd36d6fd25fbe26", "patch": "@@ -4,22 +4,16 @@\n #include <ctype.h>\n #endif\n \n-#ifndef KR_headers\n #undef abs\n #undef min\n #undef max\n #include <stdlib.h>\n #include <string.h>\n-#endif\n \n #include \"fmt.h\"\n #include \"fp.h\"\n \n-#ifdef KR_headers\n-wrt_E(p,w,d,e,len) ufloat *p; ftnlen len;\n-#else\n wrt_E(ufloat *p, int w, int d, int e, ftnlen len)\n-#endif\n {\n \tchar buf[FMAX+EXPMAXDIGS+4], *s, *se;\n \tint d1, delta, e1, i, sign, signspace;\n@@ -191,11 +185,7 @@ wrt_E(ufloat *p, int w, int d, int e, ftnlen len)\n \treturn 0;\n \t}\n \n-#ifdef KR_headers\n-wrt_F(p,w,d,len) ufloat *p; ftnlen len;\n-#else\n wrt_F(ufloat *p, int w, int d, ftnlen len)\n-#endif\n {\n \tint d1, sign, n;\n \tdouble x;"}, {"sha": "5fcab711b8a800727b6bb46844e88546a695de5b", "filename": "libf2c/libI77/wrtfmt.c", "status": "modified", "additions": 0, "deletions": 44, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibI77%2Fwrtfmt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibI77%2Fwrtfmt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibI77%2Fwrtfmt.c?ref=4d85a6fea685603493f2a4dbcfd36d6fd25fbe26", "patch": "@@ -66,11 +66,7 @@ mv_cur(Void)\t/* shouldn't use fseek because it insists on calling fflush */\n }\n \n  static int\n-#ifdef KR_headers\n-wrt_Z(n,w,minlen,len) Uint *n; int w, minlen; ftnlen len;\n-#else\n wrt_Z(Uint *n, int w, int minlen, ftnlen len)\n-#endif\n {\n \tregister char *s, *se;\n \tregister int i, w1;\n@@ -121,11 +117,7 @@ wrt_Z(Uint *n, int w, int minlen, ftnlen len)\n \t}\n \n  static int\n-#ifdef KR_headers\n-wrt_I(n,w,len, base) Uint *n; ftnlen len; register int base;\n-#else\n wrt_I(Uint *n, int w, ftnlen len, register int base)\n-#endif\n {\tint ndigit,sign,spare,i;\n \tlongint x;\n \tchar *ans;\n@@ -149,11 +141,7 @@ wrt_I(Uint *n, int w, ftnlen len, register int base)\n \treturn(0);\n }\n  static int\n-#ifdef KR_headers\n-wrt_IM(n,w,m,len,base) Uint *n; ftnlen len; int base;\n-#else\n wrt_IM(Uint *n, int w, int m, ftnlen len, int base)\n-#endif\n {\tint ndigit,sign,spare,i,xsign;\n \tlongint x;\n \tchar *ans;\n@@ -186,11 +174,7 @@ wrt_IM(Uint *n, int w, int m, ftnlen len, int base)\n \treturn(0);\n }\n  static int\n-#ifdef KR_headers\n-wrt_AP(s) char *s;\n-#else\n wrt_AP(char *s)\n-#endif\n {\tchar quote;\n \tint i;\n \n@@ -205,11 +189,7 @@ wrt_AP(char *s)\n \treturn(1);\n }\n  static int\n-#ifdef KR_headers\n-wrt_H(a,s) char *s;\n-#else\n wrt_H(int a, char *s)\n-#endif\n {\n \tint i;\n \n@@ -218,11 +198,7 @@ wrt_H(int a, char *s)\n \twhile(a--) (*f__putn)(*s++);\n \treturn(1);\n }\n-#ifdef KR_headers\n-wrt_L(n,len, sz) Uint *n; ftnlen sz;\n-#else\n wrt_L(Uint *n, int len, ftnlen sz)\n-#endif\n {\tint i;\n \tlong x;\n \tif(sizeof(long)==sz) x=n->il;\n@@ -235,21 +211,13 @@ wrt_L(Uint *n, int len, ftnlen sz)\n \treturn(0);\n }\n  static int\n-#ifdef KR_headers\n-wrt_A(p,len) char *p; ftnlen len;\n-#else\n wrt_A(char *p, ftnlen len)\n-#endif\n {\n \twhile(len-- > 0) (*f__putn)(*p++);\n \treturn(0);\n }\n  static int\n-#ifdef KR_headers\n-wrt_AW(p,w,len) char * p; ftnlen len;\n-#else\n wrt_AW(char * p, int w, ftnlen len)\n-#endif\n {\n \twhile(w>len)\n \t{\tw--;\n@@ -261,11 +229,7 @@ wrt_AW(char * p, int w, ftnlen len)\n }\n \n  static int\n-#ifdef KR_headers\n-wrt_G(p,w,d,e,len) ufloat *p; ftnlen len;\n-#else\n wrt_G(ufloat *p, int w, int d, int e, ftnlen len)\n-#endif\n {\tdouble up = 1,x;\n \tint i=0,oldscale,n,j;\n \tx = len==sizeof(real)?p->pf:p->pd;\n@@ -290,11 +254,7 @@ wrt_G(ufloat *p, int w, int d, int e, ftnlen len)\n \t}\n \treturn(wrt_E(p,w,d,e,len));\n }\n-#ifdef KR_headers\n-w_ed(p,ptr,len) struct syl *p; char *ptr; ftnlen len;\n-#else\n w_ed(struct syl *p, char *ptr, ftnlen len)\n-#endif\n {\n \tint i;\n \n@@ -336,11 +296,7 @@ w_ed(struct syl *p, char *ptr, ftnlen len)\n \t\treturn(wrt_Z((Uint *)ptr,p->p1,p->p2.i[0],len));\n \t}\n }\n-#ifdef KR_headers\n-w_ned(p) struct syl *p;\n-#else\n w_ned(struct syl *p)\n-#endif\n {\n \tswitch(p->op)\n \t{"}, {"sha": "c4b1532f2135187e4e650077a92be867692b5e22", "filename": "libf2c/libI77/wsfe.c", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibI77%2Fwsfe.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibI77%2Fwsfe.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibI77%2Fwsfe.c?ref=4d85a6fea685603493f2a4dbcfd36d6fd25fbe26", "patch": "@@ -40,11 +40,7 @@ xw_rev(Void)\n \treturn n;\n }\n \n-#ifdef KR_headers\n-integer s_wsfe(a) cilist *a;\t/*start*/\n-#else\n integer s_wsfe(cilist *a)\t/*start*/\n-#endif\n {\tint n;\n \tif(f__init != 1) f_init();\n \tf__init = 3;"}, {"sha": "82c3326a35de0e5356a4b4b419bfa6422307b8cb", "filename": "libf2c/libI77/wsle.c", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibI77%2Fwsle.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibI77%2Fwsle.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibI77%2Fwsle.c?ref=4d85a6fea685603493f2a4dbcfd36d6fd25fbe26", "patch": "@@ -5,11 +5,7 @@\n #include \"lio.h\"\n #include \"string.h\"\n \n-#ifdef KR_headers\n-integer s_wsle(a) cilist *a;\n-#else\n integer s_wsle(cilist *a)\n-#endif\n {\n \tint n;\n \tif(n=c_le(a)) return(n);"}, {"sha": "7c08925f5f3a96e07fabb2fdc6a8f3927aeb4039", "filename": "libf2c/libI77/wsne.c", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibI77%2Fwsne.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibI77%2Fwsne.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibI77%2Fwsne.c?ref=4d85a6fea685603493f2a4dbcfd36d6fd25fbe26", "patch": "@@ -3,11 +3,7 @@\n #include \"lio.h\"\n \n  integer\n-#ifdef KR_headers\n-s_wsne(a) cilist *a;\n-#else\n s_wsne(cilist *a)\n-#endif\n {\n \tint n;\n "}, {"sha": "525fcdbc35e1d205258c455a6c960c81aa1aa321", "filename": "libf2c/libI77/xwsne.c", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibI77%2Fxwsne.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibI77%2Fxwsne.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibI77%2Fxwsne.c?ref=4d85a6fea685603493f2a4dbcfd36d6fd25fbe26", "patch": "@@ -13,14 +13,10 @@ nl_donewrec(Void)\n \tPUT(' ');\n \t}\n \n-#ifdef KR_headers\n-x_wsne(a) cilist *a;\n-#else\n #include <string.h>\n \n  VOID\n x_wsne(cilist *a)\n-#endif\n {\n \tNamelist *nl;\n \tchar *s;"}, {"sha": "a2439e825a90c8369050ddf27851a551dd083415", "filename": "libf2c/libU77/access_.c", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibU77%2Faccess_.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibU77%2Faccess_.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibU77%2Faccess_.c?ref=4d85a6fea685603493f2a4dbcfd36d6fd25fbe26", "patch": "@@ -45,17 +45,9 @@ Boston, MA 02111-1307, USA.  */\n #  define F_OK 0\n #endif\n \n-#ifdef KR_headers\n-void g_char ();\n-\n-integer G77_access_0 (name, mode, Lname, Lmode)\n-     char *name, *mode;\n-     ftnlen Lname, Lmode;\n-#else\n void g_char(const char *a, ftnlen alen, char *b);\n \n integer G77_access_0 (const char *name, const char *mode, ftnlen Lname, ftnlen Lmode)\n-#endif\n {\n   char *buff;\n   char *bp, *blast;"}, {"sha": "fd3842a425ac2608404f80d8fc960f3fe330804e", "filename": "libf2c/libU77/alarm_.c", "status": "modified", "additions": 0, "deletions": 14, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibU77%2Falarm_.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibU77%2Falarm_.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibU77%2Falarm_.c?ref=4d85a6fea685603493f2a4dbcfd36d6fd25fbe26", "patch": "@@ -29,32 +29,18 @@ Boston, MA 02111-1307, USA.  */\n \n #ifndef RETSIGTYPE\n /* we shouldn't rely on this... */\n-#ifdef KR_headers\n-#define RETSIGTYPE int\n-#else\n #define RETSIGTYPE void\n #endif\n-#endif\n typedef RETSIGTYPE (*sig_type)();\n \n-#ifdef KR_headers\n-extern sig_type signal();\n-#else\n #include <signal.h>\n typedef int (*sig_proc)(int);\n-#endif\n \n #ifndef SIG_ERR\n #define SIG_ERR ((sig_type) -1)\n #endif\n \n-#ifdef KR_headers\n-integer G77_alarm_0 (seconds, proc)\n-     integer *seconds;\n-     sig_type proc;\n-#else\n integer G77_alarm_0 (integer *seconds, sig_proc proc)\n-#endif\n {\n   int status;\n #if defined (HAVE_ALARM) && defined (SIGALRM)"}, {"sha": "a071a6d7728baf4a5e425686ac29b3bc877787ca", "filename": "libf2c/libU77/chdir_.c", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibU77%2Fchdir_.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibU77%2Fchdir_.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibU77%2Fchdir_.c?ref=4d85a6fea685603493f2a4dbcfd36d6fd25fbe26", "patch": "@@ -32,17 +32,9 @@ Boston, MA 02111-1307, USA.  */\n #include \"f2c.h\"\n \n \n-#ifdef KR_headers\n-void g_char ();\n-\n-integer G77_chdir_0 (name, Lname)\n-     char *name;\n-     ftnlen Lname;\n-#else\n void g_char(const char *a, ftnlen alen, char *b);\n \n integer G77_chdir_0 (const char *name, const ftnlen Lname)\n-#endif\n {\n   char *buff;\n   char *bp, *blast;"}, {"sha": "dfe0d361608770066d67f76b59da876d75600665", "filename": "libf2c/libU77/chmod_.c", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibU77%2Fchmod_.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibU77%2Fchmod_.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibU77%2Fchmod_.c?ref=4d85a6fea685603493f2a4dbcfd36d6fd25fbe26", "patch": "@@ -41,19 +41,10 @@ Boston, MA 02111-1307, USA.  */\n #define CHMOD_PATH \"/bin/chmod\"\n #endif\n \n-#ifdef KR_headers\n-extern void s_cat ();\n-void g_char ();\n-\n-integer G77_chmod_0 (name, mode, Lname, Lmode)\n-     char *name, *mode;\n-     ftnlen Lname, Lmode;\n-#else\n extern void s_cat(char *lp, char *rpp[], ftnlen rnp[], ftnlen *np, ftnlen ll);\n void g_char(const char *a, ftnlen alen, char *b);\n \n integer G77_chmod_0 (/* const */ char *name, /* const */ char *mode, const ftnlen Lname, const ftnlen Lmode)\n-#endif\n {\n   char *buff;\n   char *bp, *blast;"}, {"sha": "9848d06b0ec7dc80b44e1e4ef8c9dfcbbc6f1d5a", "filename": "libf2c/libU77/config.hin", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibU77%2Fconfig.hin", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibU77%2Fconfig.hin", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibU77%2Fconfig.hin?ref=4d85a6fea685603493f2a4dbcfd36d6fd25fbe26", "patch": "@@ -33,6 +33,12 @@\n /* Define as the path of the `chmod' program. */\n #undef CHMOD_PATH\n \n+/* Define if your gettimeofday takes only one argument. */\n+#undef GETTIMEOFDAY_ONE_ARGUMENT\n+\n+/* Define if your gettimeofday takes a time zome argument. */\n+#undef HAVE_TIMEZONE\n+\n /* Define if you have the alarm function.  */\n #undef HAVE_ALARM\n \n@@ -54,6 +60,9 @@\n /* Define if you have the getrusage function.  */\n #undef HAVE_GETRUSAGE\n \n+/* Define if you have the gettimeofday function.  */\n+#undef HAVE_GETTIMEOFDAY\n+\n /* Define if you have the getuid function.  */\n #undef HAVE_GETUID\n "}, {"sha": "6eb7f25a8122a9d3c0e6f07f8bea5e54c02d7dee", "filename": "libf2c/libU77/configure", "status": "modified", "additions": 44, "deletions": 45, "changes": 89, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibU77%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibU77%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibU77%2Fconfigure?ref=4d85a6fea685603493f2a4dbcfd36d6fd25fbe26", "patch": "@@ -995,14 +995,13 @@ EOF\n \n fi\n \n-\n echo $ac_n \"checking whether time.h and sys/time.h may both be included\"\"... $ac_c\" 1>&6\n-echo \"configure:1001: checking whether time.h and sys/time.h may both be included\" >&5\n+echo \"configure:1000: checking whether time.h and sys/time.h may both be included\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_header_time'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 1006 \"configure\"\n+#line 1005 \"configure\"\n #include \"confdefs.h\"\n #include <sys/types.h>\n #include <sys/time.h>\n@@ -1011,7 +1010,7 @@ int main() {\n struct tm *tp;\n ; return 0; }\n EOF\n-if { (eval echo configure:1015: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n+if { (eval echo configure:1014: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n   rm -rf conftest*\n   ac_cv_header_time=yes\n else\n@@ -1036,17 +1035,17 @@ for ac_hdr in limits.h unistd.h sys/time.h string.h stdlib.h \\\n do\n ac_safe=`echo \"$ac_hdr\" | sed 'y%./+-%__p_%'`\n echo $ac_n \"checking for $ac_hdr\"\"... $ac_c\" 1>&6\n-echo \"configure:1040: checking for $ac_hdr\" >&5\n+echo \"configure:1039: checking for $ac_hdr\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_header_$ac_safe'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 1045 \"configure\"\n+#line 1044 \"configure\"\n #include \"confdefs.h\"\n #include <$ac_hdr>\n EOF\n ac_try=\"$ac_cpp conftest.$ac_ext >/dev/null 2>conftest.out\"\n-{ (eval echo configure:1050: \\\"$ac_try\\\") 1>&5; (eval $ac_try) 2>&5; }\n+{ (eval echo configure:1049: \\\"$ac_try\\\") 1>&5; (eval $ac_try) 2>&5; }\n ac_err=`grep -v '^ *+' conftest.out | grep -v \"^conftest.${ac_ext}\\$\"`\n if test -z \"$ac_err\"; then\n   rm -rf conftest*\n@@ -1074,12 +1073,12 @@ done\n \n \n echo $ac_n \"checking for working const\"\"... $ac_c\" 1>&6\n-echo \"configure:1078: checking for working const\" >&5\n+echo \"configure:1077: checking for working const\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_c_const'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 1083 \"configure\"\n+#line 1082 \"configure\"\n #include \"confdefs.h\"\n \n int main() {\n@@ -1128,7 +1127,7 @@ ccp = (char const *const *) p;\n \n ; return 0; }\n EOF\n-if { (eval echo configure:1132: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n+if { (eval echo configure:1131: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n   rm -rf conftest*\n   ac_cv_c_const=yes\n else\n@@ -1149,12 +1148,12 @@ EOF\n fi\n \n echo $ac_n \"checking for size_t\"\"... $ac_c\" 1>&6\n-echo \"configure:1153: checking for size_t\" >&5\n+echo \"configure:1152: checking for size_t\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_type_size_t'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 1158 \"configure\"\n+#line 1157 \"configure\"\n #include \"confdefs.h\"\n #include <sys/types.h>\n #if STDC_HEADERS\n@@ -1182,12 +1181,12 @@ EOF\n fi\n \n echo $ac_n \"checking for mode_t\"\"... $ac_c\" 1>&6\n-echo \"configure:1186: checking for mode_t\" >&5\n+echo \"configure:1185: checking for mode_t\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_type_mode_t'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 1191 \"configure\"\n+#line 1190 \"configure\"\n #include \"confdefs.h\"\n #include <sys/types.h>\n #if STDC_HEADERS\n@@ -1216,12 +1215,12 @@ fi\n \n \n echo $ac_n \"checking for pid_t\"\"... $ac_c\" 1>&6\n-echo \"configure:1220: checking for pid_t\" >&5\n+echo \"configure:1219: checking for pid_t\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_type_pid_t'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 1225 \"configure\"\n+#line 1224 \"configure\"\n #include \"confdefs.h\"\n #include <sys/types.h>\n #if STDC_HEADERS\n@@ -1249,20 +1248,20 @@ EOF\n fi\n \n echo $ac_n \"checking for st_blksize in struct stat\"\"... $ac_c\" 1>&6\n-echo \"configure:1253: checking for st_blksize in struct stat\" >&5\n+echo \"configure:1252: checking for st_blksize in struct stat\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_struct_st_blksize'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 1258 \"configure\"\n+#line 1257 \"configure\"\n #include \"confdefs.h\"\n #include <sys/types.h>\n #include <sys/stat.h>\n int main() {\n struct stat s; s.st_blksize;\n ; return 0; }\n EOF\n-if { (eval echo configure:1266: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n+if { (eval echo configure:1265: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n   rm -rf conftest*\n   ac_cv_struct_st_blksize=yes\n else\n@@ -1283,20 +1282,20 @@ EOF\n fi\n \n echo $ac_n \"checking for st_blocks in struct stat\"\"... $ac_c\" 1>&6\n-echo \"configure:1287: checking for st_blocks in struct stat\" >&5\n+echo \"configure:1286: checking for st_blocks in struct stat\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_struct_st_blocks'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 1292 \"configure\"\n+#line 1291 \"configure\"\n #include \"confdefs.h\"\n #include <sys/types.h>\n #include <sys/stat.h>\n int main() {\n struct stat s; s.st_blocks;\n ; return 0; }\n EOF\n-if { (eval echo configure:1300: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n+if { (eval echo configure:1299: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n   rm -rf conftest*\n   ac_cv_struct_st_blocks=yes\n else\n@@ -1319,20 +1318,20 @@ else\n fi\n \n echo $ac_n \"checking for st_rdev in struct stat\"\"... $ac_c\" 1>&6\n-echo \"configure:1323: checking for st_rdev in struct stat\" >&5\n+echo \"configure:1322: checking for st_rdev in struct stat\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_struct_st_rdev'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 1328 \"configure\"\n+#line 1327 \"configure\"\n #include \"confdefs.h\"\n #include <sys/types.h>\n #include <sys/stat.h>\n int main() {\n struct stat s; s.st_rdev;\n ; return 0; }\n EOF\n-if { (eval echo configure:1336: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n+if { (eval echo configure:1335: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n   rm -rf conftest*\n   ac_cv_struct_st_rdev=yes\n else\n@@ -1353,20 +1352,20 @@ EOF\n fi\n \n echo $ac_n \"checking whether struct tm is in sys/time.h or time.h\"\"... $ac_c\" 1>&6\n-echo \"configure:1357: checking whether struct tm is in sys/time.h or time.h\" >&5\n+echo \"configure:1356: checking whether struct tm is in sys/time.h or time.h\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_struct_tm'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 1362 \"configure\"\n+#line 1361 \"configure\"\n #include \"confdefs.h\"\n #include <sys/types.h>\n #include <time.h>\n int main() {\n struct tm *tp; tp->tm_sec;\n ; return 0; }\n EOF\n-if { (eval echo configure:1370: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n+if { (eval echo configure:1369: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n   rm -rf conftest*\n   ac_cv_struct_tm=time.h\n else\n@@ -1388,15 +1387,15 @@ fi\n \n \n echo $ac_n \"checking for gethostname in -lsocket\"\"... $ac_c\" 1>&6\n-echo \"configure:1392: checking for gethostname in -lsocket\" >&5\n+echo \"configure:1391: checking for gethostname in -lsocket\" >&5\n ac_lib_var=`echo socket'_'gethostname | sed 'y%./+-%__p_%'`\n if eval \"test \\\"`echo '$''{'ac_cv_lib_$ac_lib_var'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   ac_save_LIBS=\"$LIBS\"\n LIBS=\"-lsocket  $LIBS\"\n cat > conftest.$ac_ext <<EOF\n-#line 1400 \"configure\"\n+#line 1399 \"configure\"\n #include \"confdefs.h\"\n /* Override any gcc2 internal prototype to avoid an error.  */\n /* We use char because int might match the return type of a gcc2\n@@ -1407,7 +1406,7 @@ int main() {\n gethostname()\n ; return 0; }\n EOF\n-if { (eval echo configure:1411: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n+if { (eval echo configure:1410: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n   rm -rf conftest*\n   eval \"ac_cv_lib_$ac_lib_var=yes\"\n else\n@@ -1433,12 +1432,12 @@ for ac_func in symlink getcwd getwd lstat gethostname strerror clock \\\n   getrusage times alarm getlogin getgid getuid kill link ttyname\n do\n echo $ac_n \"checking for $ac_func\"\"... $ac_c\" 1>&6\n-echo \"configure:1437: checking for $ac_func\" >&5\n+echo \"configure:1436: checking for $ac_func\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_func_$ac_func'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 1442 \"configure\"\n+#line 1441 \"configure\"\n #include \"confdefs.h\"\n /* System header to define __stub macros and hopefully few prototypes,\n     which can conflict with char $ac_func(); below.  */\n@@ -1461,7 +1460,7 @@ $ac_func();\n \n ; return 0; }\n EOF\n-if { (eval echo configure:1465: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n+if { (eval echo configure:1464: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n   rm -rf conftest*\n   eval \"ac_cv_func_$ac_func=yes\"\n else\n@@ -1490,12 +1489,12 @@ done\n   for ac_func in gettimeofday\n do\n echo $ac_n \"checking for $ac_func\"\"... $ac_c\" 1>&6\n-echo \"configure:1494: checking for $ac_func\" >&5\n+echo \"configure:1493: checking for $ac_func\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_func_$ac_func'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 1499 \"configure\"\n+#line 1498 \"configure\"\n #include \"confdefs.h\"\n /* System header to define __stub macros and hopefully few prototypes,\n     which can conflict with char $ac_func(); below.  */\n@@ -1518,7 +1517,7 @@ $ac_func();\n \n ; return 0; }\n EOF\n-if { (eval echo configure:1522: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n+if { (eval echo configure:1521: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n   rm -rf conftest*\n   eval \"ac_cv_func_$ac_func=yes\"\n else\n@@ -1544,19 +1543,19 @@ done\n \n   if test \"$ac_cv_func_gettimeofday\" = yes; then\n     echo $ac_n \"checking for struct timezone\"\"... $ac_c\" 1>&6\n-echo \"configure:1548: checking for struct timezone\" >&5\n+echo \"configure:1547: checking for struct timezone\" >&5\n if eval \"test \\\"`echo '$''{'g77_cv_struct_timezone'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 1553 \"configure\"\n+#line 1552 \"configure\"\n #include \"confdefs.h\"\n #include <sys/time.h>\n int main() {\n struct timezone tz;\n ; return 0; }\n EOF\n-if { (eval echo configure:1560: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n+if { (eval echo configure:1559: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n   rm -rf conftest*\n   g77_cv_struct_timezone=yes\n else\n@@ -1577,7 +1576,7 @@ EOF\n \n else\n   cat > conftest.$ac_ext <<EOF\n-#line 1581 \"configure\"\n+#line 1580 \"configure\"\n #include \"confdefs.h\"\n \n #ifdef TIME_WITH_SYS_TIME\n@@ -1600,7 +1599,7 @@ main ()\n     exit (0);\n }\n EOF\n-if { (eval echo configure:1604: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext} && (./conftest; exit) 2>/dev/null\n+if { (eval echo configure:1603: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext} && (./conftest; exit) 2>/dev/null\n then\n   cat >> confdefs.h <<\\EOF\n #define HAVE_TIMEZONE 1\n@@ -1616,12 +1615,12 @@ fi\n     fi\n     \n     echo $ac_n \"checking whether gettimeofday can accept two arguments\"\"... $ac_c\" 1>&6\n-echo \"configure:1620: checking whether gettimeofday can accept two arguments\" >&5\n+echo \"configure:1619: checking whether gettimeofday can accept two arguments\" >&5\n if eval \"test \\\"`echo '$''{'emacs_cv_gettimeofday_two_arguments'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 1625 \"configure\"\n+#line 1624 \"configure\"\n #include \"confdefs.h\"\n \n #ifdef TIME_WITH_SYS_TIME\n@@ -1647,7 +1646,7 @@ int main() {\n       gettimeofday (&time, DUMMY);\n ; return 0; }\n EOF\n-if { (eval echo configure:1651: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n+if { (eval echo configure:1650: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n   rm -rf conftest*\n   emacs_cv_gettimeofday_two_arguments=yes\n else"}, {"sha": "fefc19407882c19ec706d921df943a1f56f0709f", "filename": "libf2c/libU77/configure.in", "status": "modified", "additions": 0, "deletions": 11, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibU77%2Fconfigure.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibU77%2Fconfigure.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibU77%2Fconfigure.in?ref=4d85a6fea685603493f2a4dbcfd36d6fd25fbe26", "patch": "@@ -70,17 +70,6 @@ fi\n \n dnl Checks for header files.\n AC_HEADER_STDC\n-dnl We could do this if we didn't know we were using gcc\n-dnl AC_MSG_CHECKING(for prototype-savvy compiler)\n-dnl AC_CACHE_VAL(ac_cv_sys_proto,                \n-dnl   [AC_TRY_LINK(,                             \n-dnl dnl looks screwy because TRY_LINK expects a function body\n-dnl    [return 0;} int foo (int * bar) {],       \n-dnl    ac_cv_sys_proto=yes,                      \n-dnl    [ac_cv_sys_proto=no                       \n-dnl     AC_DEFINE(KR_headers)])])                \n-dnl AC_MSG_RESULT($ac_cv_sys_proto)              \n-\n AC_HEADER_TIME\n AC_CHECK_HEADERS(limits.h unistd.h sys/time.h string.h stdlib.h \\\n   sys/param.h sys/times.h)"}, {"sha": "c80f6f6866b77bb1371192c446bb23f17220be4d", "filename": "libf2c/libU77/ctime_.c", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibU77%2Fctime_.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibU77%2Fctime_.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibU77%2Fctime_.c?ref=4d85a6fea685603493f2a4dbcfd36d6fd25fbe26", "patch": "@@ -39,14 +39,7 @@ Boston, MA 02111-1307, USA.  */\n \n /* may need sys/time.h & long arg for stime (bsd, svr1-3) */\n \n-#ifdef KR_headers\n-/* Character */ void G77_ctime_0 (chtime, Lchtime, xstime)\n-     char *chtime;\n-     longint * xstime;\n-     ftnlen Lchtime;\n-#else\n /* Character */ void G77_ctime_0 (char *chtime, const ftnlen Lchtime, longint * xstime)\n-#endif\n {\n   int i, l;\n   int s_copy ();"}, {"sha": "68fe411464d5861a853db2fa012030df5b2315e6", "filename": "libf2c/libU77/datetime_.c", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibU77%2Fdatetime_.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibU77%2Fdatetime_.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibU77%2Fdatetime_.c?ref=4d85a6fea685603493f2a4dbcfd36d6fd25fbe26", "patch": "@@ -33,11 +33,7 @@ Boston, MA 02111-1307, USA.  */\n #endif\n #include \"f2c.h\"\n \n-#ifdef KR_headers\n-VOID s_copy ();\n-#else\n void s_copy(register char *a, register char *b, ftnlen la, ftnlen lb);\n-#endif\n \n int G77_date_and_time_0 (char *date, char *fftime, char *zone,\n \t\t\t integer *values, ftnlen date_len,"}, {"sha": "ab821d7ad6be23877141a6a5b75b061608f48e9f", "filename": "libf2c/libU77/dtime_.c", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibU77%2Fdtime_.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibU77%2Fdtime_.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibU77%2Fdtime_.c?ref=4d85a6fea685603493f2a4dbcfd36d6fd25fbe26", "patch": "@@ -51,12 +51,7 @@ Boston, MA 02111-1307, USA.  */\n    different to all others. */\n static long clk_tck = 0;\n \n-#ifdef KR_headers\n-double G77_dtime_0 (tarray)\n-     real tarray[2];\n-#else\n double G77_dtime_0 (real tarray[2])\n-#endif\n {\n #if defined (_WIN32)\n   static int win32_platform = -1;"}, {"sha": "b613e89a89d6656ad29eff5df213f66a32f6c239", "filename": "libf2c/libU77/etime_.c", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibU77%2Fetime_.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibU77%2Fetime_.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibU77%2Fetime_.c?ref=4d85a6fea685603493f2a4dbcfd36d6fd25fbe26", "patch": "@@ -51,12 +51,7 @@ Boston, MA 02111-1307, USA.  */\n    different to all others. */\n static long clk_tck = 0;\n \n-#ifdef KR_headers\n-double G77_etime_0 (tarray)\n-     real tarray[2];\n-#else\n double G77_etime_0 (real tarray[2])\n-#endif\n {\n #if defined (_WIN32)\n   static int win32_platform = -1;"}, {"sha": "66a3e2d6341b431c156c459d04213399fae9063d", "filename": "libf2c/libU77/fgetc_.c", "status": "modified", "additions": 0, "deletions": 13, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibU77%2Ffgetc_.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibU77%2Ffgetc_.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibU77%2Ffgetc_.c?ref=4d85a6fea685603493f2a4dbcfd36d6fd25fbe26", "patch": "@@ -26,14 +26,7 @@ Boston, MA 02111-1307, USA.  */\n #include \"f2c.h\"\n #include \"fio.h\"\n \n-#ifdef KR_headers\n-integer G77_fgetc_0 (lunit, c, Lc)\n-     integer *lunit;\n-     ftnlen Lc;\t\t\t/* should be 1 */\n-     char *c;\n-#else\n integer G77_fgetc_0 (const integer *lunit, char *c, ftnlen Lc)\n-#endif\n {\n   int err;\n   FILE *f = f__units[*lunit].ufd;\n@@ -56,13 +49,7 @@ integer G77_fgetc_0 (const integer *lunit, char *c, ftnlen Lc)\n     return 0; }\n }\n \n-#ifdef KR_headers\n-integer G77_fget_0 (c, Lc)\n-     ftnlen Lc;\t\t\t/* should be 1 */\n-     char *c;\n-#else\n integer G77_fget_0 (char *c, const ftnlen Lc)\n-#endif\n {\n   integer five = 5;\n "}, {"sha": "71b09c7bbbec5e598dc6ad64f693402826739204", "filename": "libf2c/libU77/flush1_.c", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibU77%2Fflush1_.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibU77%2Fflush1_.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibU77%2Fflush1_.c?ref=4d85a6fea685603493f2a4dbcfd36d6fd25fbe26", "patch": "@@ -25,16 +25,9 @@ Boston, MA 02111-1307, USA.  */\n \n /* This flushes a single unit, c.f. libI77 version. */\n \n-#ifdef KR_headers\n-extern integer G77_fnum_0 ();\n-\n-/* Subroutine */ int G77_flush1_0 (lunit)\n-     integer *lunit;\n-#else\n extern integer G77_fnum_0 (integer *);\n \n /* Subroutine */ int G77_flush1_0 (const integer *lunit)\n-#endif\n {\n   if (*lunit>=MXUNIT || *lunit<0)\n     err(1,101,\"flush\");"}, {"sha": "cdd3399f43b38ed195b39952a88a8c2d90fab086", "filename": "libf2c/libU77/fnum_.c", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibU77%2Ffnum_.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibU77%2Ffnum_.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibU77%2Ffnum_.c?ref=4d85a6fea685603493f2a4dbcfd36d6fd25fbe26", "patch": "@@ -22,12 +22,7 @@ Boston, MA 02111-1307, USA.  */\n #include \"f2c.h\"\n #include \"fio.h\"\n \n-#ifdef KR_headers\n-integer G77_fnum_0 (lunit)\n-     integer *lunit;\n-#else\n integer G77_fnum_0 (integer *lunit)\n-#endif\n {\n   if (*lunit>=MXUNIT || *lunit<0)\n     err(1,101,\"fnum\");"}, {"sha": "fe527e5112f7c8f719d6acf8bf0efff9ffeaab4b", "filename": "libf2c/libU77/fputc_.c", "status": "modified", "additions": 0, "deletions": 13, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibU77%2Ffputc_.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibU77%2Ffputc_.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibU77%2Ffputc_.c?ref=4d85a6fea685603493f2a4dbcfd36d6fd25fbe26", "patch": "@@ -26,14 +26,7 @@ Boston, MA 02111-1307, USA.  */\n #include \"f2c.h\"\n #include \"fio.h\"\n \n-#ifdef KR_headers\n-integer G77_fputc_0 (lunit, c, Lc)\n-     integer *lunit;\n-     ftnlen Lc;\t\t\t/* should be 1 */\n-     char *c;\n-#else\n integer G77_fputc_0 (const integer *lunit, const char *c, const ftnlen Lc)\n-#endif\n {\n   int err;\n   FILE *f = f__units[*lunit].ufd;\n@@ -51,13 +44,7 @@ integer G77_fputc_0 (const integer *lunit, const char *c, const ftnlen Lc)\n     return 0;\n }\n \n-#ifdef KR_headers\n-integer G77_fput_0 (c, Lc)\n-     ftnlen Lc;\t\t\t/* should be 1 */\n-     char *c;\n-#else\n integer G77_fput_0 (const char *c, const ftnlen Lc)\n-#endif\n {\n   integer six = 6;\n "}, {"sha": "cf64d4e3c9cc14438be7c7bed37a01485cc5b3f1", "filename": "libf2c/libU77/fstat_.c", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibU77%2Ffstat_.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibU77%2Ffstat_.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibU77%2Ffstat_.c?ref=4d85a6fea685603493f2a4dbcfd36d6fd25fbe26", "patch": "@@ -26,17 +26,9 @@ Boston, MA 02111-1307, USA.  */\n #include <sys/types.h>\n #include <sys/stat.h>\n \n-#ifdef KR_headers\n-extern integer G77_fnum_0 ();\n-\n-integer G77_fstat_0 (lunit, statb)\n-     integer *lunit;\n-     integer statb[13];\n-#else\n extern integer G77_fnum_0 (const integer *);\n \n integer G77_fstat_0 (const integer *lunit, integer statb[13])\n-#endif\n {\n   int err;\n   struct stat buf;"}, {"sha": "61c00523abee55145300d00dcba3c3973966dd67", "filename": "libf2c/libU77/gerror_.c", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibU77%2Fgerror_.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibU77%2Fgerror_.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibU77%2Fgerror_.c?ref=4d85a6fea685603493f2a4dbcfd36d6fd25fbe26", "patch": "@@ -32,14 +32,8 @@ Boston, MA 02111-1307, USA.  */\n      extern char *sys_errlist [];\n #    define strerror(i) (sys_errlist[i])\n #endif\n-#ifdef KR_headers\n-extern void s_copy ();\n-/* Subroutine */ int G77_gerror_0 (str, Lstr)\n-     char *str; ftnlen Lstr;\n-#else\n extern void s_copy(register char *a, register char *b, ftnlen la, ftnlen lb);\n /* Subroutine */ int G77_gerror_0 (char *str, ftnlen Lstr)\n-#endif\n {\n   char * s;\n "}, {"sha": "4b1c8a98fbc1262d5bf2b28821da231310655956", "filename": "libf2c/libU77/getcwd_.c", "status": "modified", "additions": 0, "deletions": 18, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibU77%2Fgetcwd_.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibU77%2Fgetcwd_.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibU77%2Fgetcwd_.c?ref=4d85a6fea685603493f2a4dbcfd36d6fd25fbe26", "patch": "@@ -37,14 +37,8 @@ Boston, MA 02111-1307, USA.  */\n   extern char *getcwd ();\n #endif\n \n-#ifdef KR_headers\n-extern void s_copy ();\n-integer G77_getcwd_0 (str, Lstr)\n-     char *str; ftnlen Lstr;\n-#else\n extern void s_copy(register char *a, register char *b, ftnlen la, ftnlen lb);\n integer G77_getcwd_0 (char *str, const ftnlen Lstr)\n-#endif\n {\n     int i;\n     char *ret;\n@@ -62,14 +56,8 @@ integer G77_getcwd_0 (char *str, const ftnlen Lstr)\n \n #  include <sys/param.h>\n   extern char *getwd ();\n-#ifdef KR_headers\n-extern VOID s_copy ();\n-integer G77_getcwd_0 (str, Lstr)\n-     char *str; ftnlen Lstr;\n-#else\n extern void s_copy(register char *a, register char *b, ftnlen la, ftnlen lb);\n integer G77_getcwd_0 (char *str, const ftnlen Lstr)\n-#endif\n {\n   char pathname[MAXPATHLEN];\n   size_t l;\n@@ -84,14 +72,8 @@ integer G77_getcwd_0 (char *str, const ftnlen Lstr)\n \n #else  /* !HAVE_GETWD && !HAVE_GETCWD */\n \n-#ifdef KR_headers\n-extern VOID s_copy ();\n-integer G77_getcwd_0 (str, Lstr)\n-     char *str; ftnlen Lstr;\n-#else\n extern void s_copy(register char *a, register char *b, ftnlen la, ftnlen lb);\n integer G77_getcwd_0 (char *str, const ftnlen Lstr)\n-#endif\n {\n   return errno = ENOSYS;\n }"}, {"sha": "b831fc218f4f9819c05eea56e482eda7f48ac00f", "filename": "libf2c/libU77/getgid_.c", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibU77%2Fgetgid_.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibU77%2Fgetgid_.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibU77%2Fgetgid_.c?ref=4d85a6fea685603493f2a4dbcfd36d6fd25fbe26", "patch": "@@ -26,11 +26,7 @@ Boston, MA 02111-1307, USA.  */\n #include <errno.h>\t\t/* for ENOSYS */\n #include \"f2c.h\"\n \n-#ifdef KR_headers\n-integer G77_getgid_0 ()\n-#else\n integer G77_getgid_0 (void)\n-#endif\n {\n #if defined (HAVE_GETGID)\n   return getgid ();"}, {"sha": "98310144eabdfb7cabb5bdc2fd5068316a7841d6", "filename": "libf2c/libU77/getlog_.c", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibU77%2Fgetlog_.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibU77%2Fgetlog_.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibU77%2Fgetlog_.c?ref=4d85a6fea685603493f2a4dbcfd36d6fd25fbe26", "patch": "@@ -41,14 +41,8 @@ Boston, MA 02111-1307, USA.  */\n \n /* SGI also has character*(*) function getlog() */\n \n-#ifdef KR_headers\n-extern VOID s_copy ();\n-/* Subroutine */ int G77_getlog_0 (str, Lstr)\n-     char *str; ftnlen Lstr;\n-#else\n extern void s_copy(register char *a, register char *b, ftnlen la, ftnlen lb);\n /* Subroutine */ int G77_getlog_0 (char *str, const ftnlen Lstr)\n-#endif\n {\n   size_t i;\n   char *p;"}, {"sha": "c31cc048e48e0435c6480b16f8bfc2afaea67b85", "filename": "libf2c/libU77/getpid_.c", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibU77%2Fgetpid_.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibU77%2Fgetpid_.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibU77%2Fgetpid_.c?ref=4d85a6fea685603493f2a4dbcfd36d6fd25fbe26", "patch": "@@ -25,11 +25,7 @@ Boston, MA 02111-1307, USA.  */\n #include <sys/types.h>\n #include \"f2c.h\"\n \n-#ifdef KR_headers\n-integer G77_getpid_0 ()\n-#else\n integer G77_getpid_0 (void)\n-#endif\n {\n   return getpid ();\n }"}, {"sha": "7db9c5928c29aabe34436da479e0a4d8e01d1051", "filename": "libf2c/libU77/getuid_.c", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibU77%2Fgetuid_.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibU77%2Fgetuid_.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibU77%2Fgetuid_.c?ref=4d85a6fea685603493f2a4dbcfd36d6fd25fbe26", "patch": "@@ -26,11 +26,7 @@ Boston, MA 02111-1307, USA.  */\n #include <errno.h>\t\t/* for ENOSYS */\n #include \"f2c.h\"\n \n-#ifdef KR_headers\n-integer G77_getuid_0 ()\n-#else\n integer G77_getuid_0 (void)\n-#endif\n {\n #if defined (HAVE_GETUID)\n   return getuid ();"}, {"sha": "0c4e6a9c579ee46e7e9c3e35b1e6fd3bd5590159", "filename": "libf2c/libU77/gmtime_.c", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibU77%2Fgmtime_.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibU77%2Fgmtime_.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibU77%2Fgmtime_.c?ref=4d85a6fea685603493f2a4dbcfd36d6fd25fbe26", "patch": "@@ -33,12 +33,7 @@ Boston, MA 02111-1307, USA.  */\n #endif\n #include \"f2c.h\"\n \n-#ifdef KR_headers\n-/* Subroutine */ int G77_gmtime_0 (xstime, tarray)\n-     integer *xstime, tarray[9];\n-#else\n /* Subroutine */ int G77_gmtime_0 (const integer * xstime, integer tarray[9])\n-#endif\n {\n   struct tm *lt;\n   time_t stime = *xstime;"}, {"sha": "b4c29f2e3664ba02780a1d40674321545254a40d", "filename": "libf2c/libU77/idate_.c", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibU77%2Fidate_.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibU77%2Fidate_.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibU77%2Fidate_.c?ref=4d85a6fea685603493f2a4dbcfd36d6fd25fbe26", "patch": "@@ -37,12 +37,7 @@ Boston, MA 02111-1307, USA.  */\n \n /* libU77 one: */\n \n-#ifdef KR_headers\n-/* Subroutine */ int G77_idate_0 (iarray)\n-     int iarray[3];\n-#else\n /* Subroutine */ int G77_idate_0 (int iarray[3])\n-#endif\n {\n   struct tm *lt;\n   time_t tim;"}, {"sha": "ed7d4e7ec4fbd000136343bbecd9ca621750d59f", "filename": "libf2c/libU77/ierrno_.c", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibU77%2Fierrno_.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibU77%2Fierrno_.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibU77%2Fierrno_.c?ref=4d85a6fea685603493f2a4dbcfd36d6fd25fbe26", "patch": "@@ -22,11 +22,7 @@ Boston, MA 02111-1307, USA.  */\n #include <errno.h>\n #include \"f2c.h\"\n \n-#ifdef KR_headers\n-integer G77_ierrno_0 ()\n-#else\n integer G77_ierrno_0 (void)\n-#endif\n {\n   return errno;\n }"}, {"sha": "83496891a21182d77d051f5d3e7231df1ab2d642", "filename": "libf2c/libU77/irand_.c", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibU77%2Firand_.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibU77%2Firand_.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibU77%2Firand_.c?ref=4d85a6fea685603493f2a4dbcfd36d6fd25fbe26", "patch": "@@ -31,12 +31,7 @@ Boston, MA 02111-1307, USA.  */\n \n /* Note this is per SunOS -- other s may have no arg. */\n \n-#ifdef KR_headers\n-integer G77_irand_0 (flag)\n-  integer *flag;\n-#else\n integer G77_irand_0 (integer *flag)\n-#endif\n {\n   switch (*flag) {\n   case 0:"}, {"sha": "3d803b34d28716205d8b0bd6ff91770e36ce293e", "filename": "libf2c/libU77/isatty_.c", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibU77%2Fisatty_.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibU77%2Fisatty_.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibU77%2Fisatty_.c?ref=4d85a6fea685603493f2a4dbcfd36d6fd25fbe26", "patch": "@@ -25,16 +25,9 @@ Boston, MA 02111-1307, USA.  */\n #include \"f2c.h\"\n #include \"fio.h\"\n \n-#ifdef KR_headers\n-extern integer G77_fnum_0 ();\n-\n-logical G77_isatty_0 (lunit)\n-     integer *lunit;\n-#else\n extern integer G77_fnum_0 (integer *);\n \n logical G77_isatty_0 (integer *lunit)\n-#endif\n {\n   if (*lunit>=MXUNIT || *lunit<0)\n     err(1,101,\"isatty\");"}, {"sha": "8fbfcc394fc470baed69d468d47639373626aa35", "filename": "libf2c/libU77/itime_.c", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibU77%2Fitime_.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibU77%2Fitime_.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibU77%2Fitime_.c?ref=4d85a6fea685603493f2a4dbcfd36d6fd25fbe26", "patch": "@@ -33,12 +33,7 @@ Boston, MA 02111-1307, USA.  */\n #endif\n #include \"f2c.h\"\n \n-#ifdef KR_headers\n-/* Subroutine */ int G77_itime_0 (tarray)\n-     integer tarray[3];\n-#else\n /* Subroutine */ int G77_itime_0 (integer tarray[3])\n-#endif\n {\n   struct tm *lt;\n   time_t tim;"}, {"sha": "d133fa562f94d90c5d0f3c0494e630173dc7ea11", "filename": "libf2c/libU77/kill_.c", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibU77%2Fkill_.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibU77%2Fkill_.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibU77%2Fkill_.c?ref=4d85a6fea685603493f2a4dbcfd36d6fd25fbe26", "patch": "@@ -26,12 +26,7 @@ Boston, MA 02111-1307, USA.  */\n \n /* fixme: bsd, svr1-3 use int, not pid_t */\n \n-#ifdef KR_headers\n-integer G77_kill_0 (pid, signum)\n-     integer *pid, *signum;\n-#else\n integer G77_kill_0 (const integer *pid, const integer *signum)\n-#endif\n {\n #if defined (HAVE_KILL)\n   return kill ((pid_t) *pid, *signum) ? errno : 0;"}, {"sha": "1f46e2e893c3a67d4fafff6ff343e3a6ee773779", "filename": "libf2c/libU77/link_.c", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibU77%2Flink_.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibU77%2Flink_.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibU77%2Flink_.c?ref=4d85a6fea685603493f2a4dbcfd36d6fd25fbe26", "patch": "@@ -34,16 +34,9 @@ Boston, MA 02111-1307, USA.  */\n #include <errno.h>\t\t/* for ENOSYS */\n #include \"f2c.h\"\n \n-#ifdef KR_headers\n-void g_char ();\n-\n-integer G77_link_0 (path1, path2, Lpath1, Lpath2)\n-     char *path1, *path2; ftnlen Lpath1, Lpath2;\n-#else\n void g_char(const char *a, ftnlen alen, char *b);\n \n integer G77_link_0 (const char *path1, const char *path2, const ftnlen Lpath1, const ftnlen Lpath2)\n-#endif\n {\n #if defined (HAVE_LINK)\n   char *buff1, *buff2;"}, {"sha": "5a1831bbc13c3a72fd47bb62c379f46b7a5c7044", "filename": "libf2c/libU77/lstat_.c", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibU77%2Flstat_.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibU77%2Flstat_.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibU77%2Flstat_.c?ref=4d85a6fea685603493f2a4dbcfd36d6fd25fbe26", "patch": "@@ -30,18 +30,9 @@ Boston, MA 02111-1307, USA.  */\n \n /* lstat isn't posix */\n \n-#ifdef KR_headers\n-void g_char();\n-\n-integer G77_lstat_0 (name, statb, Lname)\n-     char *name;\n-     integer statb[13];\n-     ftnlen Lname;\n-#else\n void g_char(const char *a, ftnlen alen, char *b);\n \n integer G77_lstat_0 (const char *name, integer statb[13], const ftnlen Lname)\n-#endif\n {\n #if HAVE_LSTAT\n   char *buff;"}, {"sha": "ea5b1b9911c314aef4361b9d7927bf4a01a8be83", "filename": "libf2c/libU77/ltime_.c", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibU77%2Fltime_.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibU77%2Fltime_.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibU77%2Fltime_.c?ref=4d85a6fea685603493f2a4dbcfd36d6fd25fbe26", "patch": "@@ -33,12 +33,7 @@ Boston, MA 02111-1307, USA.  */\n #endif\n #include \"f2c.h\"\n \n-#ifdef KR_headers\n-/* Subroutine */ int G77_ltime_0 (xstime, tarray)\n-     integer *xstime, tarray[9];\n-#else\n /* Subroutine */ int G77_ltime_0 (const integer * xstime, integer tarray[9])\n-#endif\n {\n   struct tm *lt;\n   time_t stime = *xstime;"}, {"sha": "cf6abb449887db729133d9191a00e09dff23710e", "filename": "libf2c/libU77/mclock_.c", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibU77%2Fmclock_.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibU77%2Fmclock_.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibU77%2Fmclock_.c?ref=4d85a6fea685603493f2a4dbcfd36d6fd25fbe26", "patch": "@@ -33,11 +33,7 @@ Boston, MA 02111-1307, USA.  */\n \n /* Reported by wd42ej@sgi83.wwb.noaa.gov (Russ Jones AUTO-Sun3) on AIX. */\n \n-#ifdef KR_headers\n-longint G77_mclock_0 ()\n-#else\n longint G77_mclock_0 (void)\n-#endif\n {\n #if HAVE_CLOCK\n   return clock ();"}, {"sha": "1d3c3f2ec695817e29aad50d52d1bab57c9cbc67", "filename": "libf2c/libU77/perror_.c", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibU77%2Fperror_.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibU77%2Fperror_.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibU77%2Fperror_.c?ref=4d85a6fea685603493f2a4dbcfd36d6fd25fbe26", "patch": "@@ -28,12 +28,7 @@ Boston, MA 02111-1307, USA.  */\n #endif\n #include \"f2c.h\"\n \n-#ifdef KR_headers\n-/* Subroutine */ int G77_perror_0 (str, Lstr)\n-     char *str; ftnlen Lstr;\n-#else\n /* Subroutine */ int G77_perror_0 (const char *str, const ftnlen Lstr)\n-#endif\n {\n   char buff[1000];\n   char *bp, *blast;"}, {"sha": "55604615b0be9f1be144b055403e14605d31cc53", "filename": "libf2c/libU77/rand_.c", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibU77%2Frand_.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibU77%2Frand_.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibU77%2Frand_.c?ref=4d85a6fea685603493f2a4dbcfd36d6fd25fbe26", "patch": "@@ -34,12 +34,7 @@ Boston, MA 02111-1307, USA.  */\n \n /* Note this is per SunOS -- other s may have no arg. */\n \n-#ifdef KR_headers\n-double G77_rand_0 (flag)\n-  integer *flag;\n-#else\n double G77_rand_0 (integer *flag)\n-#endif\n {\n   switch (*flag) {\n   case 0:"}, {"sha": "335b592aa217bda614c7a9f464da5bae2f7c4aae", "filename": "libf2c/libU77/rename_.c", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibU77%2Frename_.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibU77%2Frename_.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibU77%2Frename_.c?ref=4d85a6fea685603493f2a4dbcfd36d6fd25fbe26", "patch": "@@ -29,16 +29,9 @@ Boston, MA 02111-1307, USA.  */\n #include <errno.h>\n #include \"f2c.h\"\n \n-#ifdef KR_headers\n-void g_char ();\n-\n-integer G77_rename_0 (path1, path2, Lpath1, Lpath2)\n-     char *path1, *path2; ftnlen Lpath1, Lpath2;\n-#else\n void g_char(const char *a, ftnlen alen, char *b);\n \n integer G77_rename_0 (const char *path1, const char *path2, const ftnlen Lpath1, const ftnlen Lpath2)\n-#endif\n {\n   char *buff1, *buff2;\n   char *bp, *blast;"}, {"sha": "081bc5b7bca02f4a9c17ef46a08b304a1c432622", "filename": "libf2c/libU77/sleep_.c", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibU77%2Fsleep_.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibU77%2Fsleep_.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibU77%2Fsleep_.c?ref=4d85a6fea685603493f2a4dbcfd36d6fd25fbe26", "patch": "@@ -25,12 +25,7 @@ Boston, MA 02111-1307, USA.  */\n #include \"f2c.h\"\n \n /* Subroutine */\n-#ifdef KR_headers\n-int G77_sleep_0 (seconds)\n-     integer *seconds;\n-#else\n int G77_sleep_0 (const integer *seconds)\n-#endif\n {\n   (void) sleep ((unsigned int) *seconds);\n   return 0;"}, {"sha": "12280187e2c39acb91bc498f204cf98a6bdc57a8", "filename": "libf2c/libU77/srand_.c", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibU77%2Fsrand_.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibU77%2Fsrand_.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibU77%2Fsrand_.c?ref=4d85a6fea685603493f2a4dbcfd36d6fd25fbe26", "patch": "@@ -25,12 +25,7 @@ Boston, MA 02111-1307, USA.  */\n #include \"f2c.h\"\n \n /* Subroutine */ \n-#ifdef KR_headers\n-int G77_srand_0 (seed)\n-     integer *seed;\n-#else\n int G77_srand_0 (const integer *seed)\n-#endif\n {\n   srand ((unsigned int) *seed);\n   return 0;"}, {"sha": "4c89248c2df13fd518ec2f92c69b3d84f4d31cd7", "filename": "libf2c/libU77/stat_.c", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibU77%2Fstat_.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibU77%2Fstat_.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibU77%2Fstat_.c?ref=4d85a6fea685603493f2a4dbcfd36d6fd25fbe26", "patch": "@@ -27,18 +27,9 @@ Boston, MA 02111-1307, USA.  */\n #include <sys/stat.h>\n #include \"f2c.h\"\n \n-#ifdef KR_headers\n-void g_char ();\n-\n-integer G77_stat_0 (name, statb, Lname)\n-     char *name;\n-     integer statb[13];\n-     ftnlen Lname;\n-#else\n void g_char(const char *a, ftnlen alen, char *b);\n \n integer G77_stat_0 (const char *name, integer statb[13], const ftnlen Lname)\n-#endif\n {\n   char *buff;\n   char *bp, *blast;"}, {"sha": "6f24841c13ed18cbe449d24276133edd40b9e628", "filename": "libf2c/libU77/symlnk_.c", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibU77%2Fsymlnk_.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibU77%2Fsymlnk_.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibU77%2Fsymlnk_.c?ref=4d85a6fea685603493f2a4dbcfd36d6fd25fbe26", "patch": "@@ -33,16 +33,9 @@ Boston, MA 02111-1307, USA.  */\n #endif\n #include \"f2c.h\"\n \n-#ifdef KR_headers\n-void g_char ();\n-\n-integer G77_symlnk_0 (path1, path2, Lpath1, Lpath2)\n-     char *path1, *path2; ftnlen Lpath1, Lpath2;\n-#else\n void g_char(const char *a, ftnlen alen, char *b);\n \n integer G77_symlnk_0 (const char *path1, const char *path2, const ftnlen Lpath1, const ftnlen Lpath2)\n-#endif\n {\n #if HAVE_SYMLINK\n   char *buff1, *buff2;"}, {"sha": "d35faad053c1d00093183be41fe8bf3ce5b897b2", "filename": "libf2c/libU77/sys_clock_.c", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibU77%2Fsys_clock_.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibU77%2Fsys_clock_.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibU77%2Fsys_clock_.c?ref=4d85a6fea685603493f2a4dbcfd36d6fd25fbe26", "patch": "@@ -43,12 +43,7 @@ Boston, MA 02111-1307, USA.  */\n #include <errno.h>\t\t/* for ENOSYS */\n #include \"f2c.h\"\n \n-#ifdef KR_headers\n-int G77_system_clock_0 (count, count_rate, count_max)\n-     integer *count, *count_rate, *count_max;\n-#else\n int G77_system_clock_0 (integer *count, integer *count_rate, integer *count_max)\n-#endif\n {\n #if defined (HAVE_TIMES)\n   struct tms buffer;"}, {"sha": "621da3aa9b77e9c32280301c719ee24d3fd7b241", "filename": "libf2c/libU77/time_.c", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibU77%2Ftime_.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibU77%2Ftime_.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibU77%2Ftime_.c?ref=4d85a6fea685603493f2a4dbcfd36d6fd25fbe26", "patch": "@@ -35,11 +35,7 @@ Boston, MA 02111-1307, USA.  */\n /* As well as this external function some compilers have an intrinsic\n    subroutine which fills a character argument (which is the VMS way)\n    -- caveat emptor. */\n-#ifdef KR_headers\n-longint G77_time_0 ()\n-#else\n longint G77_time_0 (void)\n-#endif\n {\n   /* There are potential problems with the cast of the time_t here. */\n   return time (NULL);"}, {"sha": "3175f05390266b88104a72a779f5d778bc5937d0", "filename": "libf2c/libU77/ttynam_.c", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibU77%2Fttynam_.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibU77%2Fttynam_.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibU77%2Fttynam_.c?ref=4d85a6fea685603493f2a4dbcfd36d6fd25fbe26", "patch": "@@ -35,16 +35,9 @@ Boston, MA 02111-1307, USA.  */\n #include <errno.h>\t\t/* for ENOSYS */\n #include \"f2c.h\"\n \n-#ifdef KR_headers\n-extern void s_copy ();\n-extern integer G77_fnum_0 ();\n-/* Character */ void G77_ttynam_0 (ret_val, ret_val_len, lunit)\n-     char *ret_val; ftnlen ret_val_len; integer *lunit\n-#else\n extern integer G77_fnum_0 (integer *lunit);\n extern void s_copy(register char *a, register char *b, ftnlen la, ftnlen lb);\n /* Character */ void G77_ttynam_0 (char *ret_val, ftnlen ret_val_len, integer *lunit)\n-#endif\n {\n #if defined (HAVE_TTYNAME)\n   size_t i;"}, {"sha": "347da2d8554e04901ec0d8d22b754076c880782f", "filename": "libf2c/libU77/umask_.c", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibU77%2Fumask_.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibU77%2Fumask_.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibU77%2Fumask_.c?ref=4d85a6fea685603493f2a4dbcfd36d6fd25fbe26", "patch": "@@ -23,12 +23,7 @@ Boston, MA 02111-1307, USA.  */\n #include <sys/stat.h>\n #include \"f2c.h\"\n \n-#ifdef KR_headers\n-integer G77_umask_0 (mask)\n-     integer *mask;\n-#else\n integer G77_umask_0 (integer *mask)\n-#endif\n {\n   return umask ((mode_t) *mask);\n }"}, {"sha": "004002e5d1df2ad679a85ae71a8edaca748ff662", "filename": "libf2c/libU77/unlink_.c", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibU77%2Funlink_.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibU77%2Funlink_.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibU77%2Funlink_.c?ref=4d85a6fea685603493f2a4dbcfd36d6fd25fbe26", "patch": "@@ -33,16 +33,9 @@ Boston, MA 02111-1307, USA.  */\n #endif\n #include \"f2c.h\"\n \n-#ifdef KR_headers\n-void g_char ();\n-\n-integer G77_unlink_0 (str, Lstr)\n-     char *str; ftnlen  Lstr;\n-#else\n void g_char(const char *a, ftnlen alen, char *b);\n \n integer G77_unlink_0 (const char *str, const ftnlen Lstr)\n-#endif\n {\n   char *buff;\n   char *bp, *blast;"}, {"sha": "6211f135adfb2838b7fc758fbee755ffc26765dd", "filename": "libf2c/libU77/vxtidate_.c", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibU77%2Fvxtidate_.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibU77%2Fvxtidate_.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibU77%2Fvxtidate_.c?ref=4d85a6fea685603493f2a4dbcfd36d6fd25fbe26", "patch": "@@ -38,12 +38,7 @@ Boston, MA 02111-1307, USA.  */\n /* VMS style: */\n \n /* Subroutine */\n-#ifdef KR_headers\n-int G77_vxtidate_y2kbug_0 (m, d, y)\n-     integer *y, *m, *d;\n-#else\n int G77_vxtidate_y2kbug_0 (integer *m, integer *d, integer *y)\n-#endif\n {\n   struct tm *lt;\n   time_t tim;\n@@ -57,12 +52,7 @@ int G77_vxtidate_y2kbug_0 (integer *m, integer *d, integer *y)\n \n #ifdef PIC\n extern const char *G77_Non_Y2K_Compliance_Message;\n-#  ifdef KR_headers\n-int G77_vxtidate_y2kbuggy_0 (m, d, y)\n-     integer *y, *m, *d;\n-#  else\n int G77_vxtidate_y2kbuggy_0 (integer *m, integer *d, integer *y)\n-#  endif\n {\n   extern int G77_abort_0();\n   fprintf (stderr, \"%s\\n\", G77_Non_Y2K_Compliance_Message);"}, {"sha": "99d3f50edce3c034d4ca04a64620464351c44356", "filename": "libf2c/libU77/vxttime_.c", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibU77%2Fvxttime_.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d85a6fea685603493f2a4dbcfd36d6fd25fbe26/libf2c%2FlibU77%2Fvxttime_.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibU77%2Fvxttime_.c?ref=4d85a6fea685603493f2a4dbcfd36d6fd25fbe26", "patch": "@@ -39,13 +39,7 @@ Boston, MA 02111-1307, USA.  */\n #include \"f2c.h\"\n \n /* Subroutine */\n-#ifdef KR_headers\n-void G77_vxttime_0 (chtime, Lchtime)\n-     char chtime[8];\n-     ftnlen Lchtime;\n-#else\n void G77_vxttime_0 (char chtime[8], const ftnlen Lchtime)\n-#endif\n {\n   time_t tim;\n   char *ctim;"}]}