{"sha": "cd8bfe35548ebe03b6c628d2ae6fdd5ab960ed74", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2Q4YmZlMzU1NDhlYmUwM2I2YzYyOGQyYWU2ZmRkNWFiOTYwZWQ3NA==", "commit": {"author": {"name": "Emmanuel Briot", "email": "briot@adacore.com", "date": "2011-08-04T12:05:43Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-08-04T12:05:43Z"}, "message": "makeutl.adb (Complete_Mains): add support for specs with no suffix on the command line.\n\n2011-08-04  Emmanuel Briot  <briot@adacore.com>\n\n\t* makeutl.adb (Complete_Mains): add support for specs with no suffix on\n\tthe command line.\n\nFrom-SVN: r177363", "tree": {"sha": "ddbf470aba51b9f20f4d4fbfba915451e78ecfd0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ddbf470aba51b9f20f4d4fbfba915451e78ecfd0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cd8bfe35548ebe03b6c628d2ae6fdd5ab960ed74", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cd8bfe35548ebe03b6c628d2ae6fdd5ab960ed74", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cd8bfe35548ebe03b6c628d2ae6fdd5ab960ed74", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cd8bfe35548ebe03b6c628d2ae6fdd5ab960ed74/comments", "author": {"login": "briot", "id": 42402, "node_id": "MDQ6VXNlcjQyNDAy", "avatar_url": "https://avatars.githubusercontent.com/u/42402?v=4", "gravatar_id": "", "url": "https://api.github.com/users/briot", "html_url": "https://github.com/briot", "followers_url": "https://api.github.com/users/briot/followers", "following_url": "https://api.github.com/users/briot/following{/other_user}", "gists_url": "https://api.github.com/users/briot/gists{/gist_id}", "starred_url": "https://api.github.com/users/briot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/briot/subscriptions", "organizations_url": "https://api.github.com/users/briot/orgs", "repos_url": "https://api.github.com/users/briot/repos", "events_url": "https://api.github.com/users/briot/events{/privacy}", "received_events_url": "https://api.github.com/users/briot/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "7db29ea7231998d62575270e5d31604c800adbb7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7db29ea7231998d62575270e5d31604c800adbb7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7db29ea7231998d62575270e5d31604c800adbb7"}], "stats": {"total": 162, "additions": 99, "deletions": 63}, "files": [{"sha": "eea90ca75e930e0f3358957366f66bc34953230c", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd8bfe35548ebe03b6c628d2ae6fdd5ab960ed74/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd8bfe35548ebe03b6c628d2ae6fdd5ab960ed74/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=cd8bfe35548ebe03b6c628d2ae6fdd5ab960ed74", "patch": "@@ -1,3 +1,8 @@\n+2011-08-04  Emmanuel Briot  <briot@adacore.com>\n+\n+\t* makeutl.adb (Complete_Mains): add support for specs with no suffix on\n+\tthe command line.\n+\n 2011-08-04  Emmanuel Briot  <briot@adacore.com>\n \n \t* make.adb, makeutl.adb (Complete_Mains): if a main specified on the"}, {"sha": "5efd6e42e80bf96bacdb118cf0406b1a68658a10", "filename": "gcc/ada/makeutl.adb", "status": "modified", "additions": 94, "deletions": 63, "changes": 157, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd8bfe35548ebe03b6c628d2ae6fdd5ab960ed74/gcc%2Fada%2Fmakeutl.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd8bfe35548ebe03b6c628d2ae6fdd5ab960ed74/gcc%2Fada%2Fmakeutl.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmakeutl.adb?ref=cd8bfe35548ebe03b6c628d2ae6fdd5ab960ed74", "patch": "@@ -1288,6 +1288,12 @@ package body Makeutl is\n             Source : Prj.Source_Id);\n          --  Add all units from the same file as the multi-unit Source.\n \n+         function Find_File_Add_Extension\n+           (Tree         : Project_Tree_Ref;\n+            Root_Project : Project_Id;\n+            Base_Main    : String) return Prj.Source_Id;\n+         --  Search for Main in the project, adding body or spec extensions.\n+\n          ----------------------------\n          -- Add_Multi_Unit_Sources --\n          ----------------------------\n@@ -1334,6 +1340,78 @@ package body Makeutl is\n             end loop;\n          end Add_Multi_Unit_Sources;\n \n+         -----------------------------\n+         -- Find_File_Add_Extension --\n+         -----------------------------\n+\n+         function Find_File_Add_Extension\n+           (Tree         : Project_Tree_Ref;\n+            Root_Project : Project_Id;\n+            Base_Main    : String) return Prj.Source_Id\n+         is\n+            Spec_Source : Prj.Source_Id := No_Source;\n+            Source      : Prj.Source_Id := No_Source;\n+            Project     : Project_Id := Root_Project;\n+            Iter        : Source_Iterator;\n+            Suffix      : File_Name_Type;\n+         begin\n+            while Source = No_Source\n+              and then Project /= No_Project\n+            loop\n+               Iter := For_Each_Source (Tree, Project);\n+               loop\n+                  Source := Prj.Element (Iter);\n+                  exit when Source = No_Source;\n+\n+                  if Source.Kind = Impl then\n+                     Get_Name_String (Source.File);\n+\n+                     if Name_Len > Base_Main'Length\n+                       and then Name_Buffer (1 .. Base_Main'Length) = Base_Main\n+                     then\n+                        Suffix :=\n+                          Source.Language.Config.Naming_Data.Body_Suffix;\n+\n+                        exit when Suffix /= No_File and then\n+                          Name_Buffer (Base_Main'Length + 1 .. Name_Len) =\n+                          Get_Name_String (Suffix);\n+                     end if;\n+\n+                  elsif Source.Kind = Spec then\n+                     --  A spec needs to be taken into account unless there is\n+                     --  also a body. So we delay the decision for them.\n+\n+                     Get_Name_String (Source.File);\n+\n+                     if Name_Len > Base_Main'Length\n+                       and then Name_Buffer (1 .. Base_Main'Length) = Base_Main\n+                     then\n+                        Suffix :=\n+                          Source.Language.Config.Naming_Data.Spec_Suffix;\n+\n+                        if Suffix /= No_File\n+                          and then\n+                            Name_Buffer (Base_Main'Length + 1 .. Name_Len) =\n+                            Get_Name_String (Suffix)\n+                        then\n+                           Spec_Source := Source;\n+                        end if;\n+                     end if;\n+                  end if;\n+\n+                  Next (Iter);\n+               end loop;\n+\n+               Project := Project.Extends;\n+            end loop;\n+\n+            if Source = No_Source then\n+               Source := Spec_Source;\n+            end if;\n+\n+            return Source;\n+         end Find_File_Add_Extension;\n+\n          -----------------\n          -- Do_Complete --\n          -----------------\n@@ -1354,10 +1432,9 @@ package body Makeutl is\n                      File       : Main_Info       := Names.Table (J);\n                      Main_Id    : File_Name_Type  := File.File;\n                      Main       : constant String := Get_Name_String (Main_Id);\n+                     Base       : constant String := Base_Name (Main);\n                      Source     : Prj.Source_Id   := No_Source;\n-                     Suffix     : File_Name_Type;\n-                     Iter       : Source_Iterator;\n-                     Is_Absolute : Boolean         := False;\n+                     Is_Absolute : Boolean        := False;\n \n                   begin\n                      if Base /= Main then\n@@ -1379,9 +1456,7 @@ package body Makeutl is\n                      end if;\n \n                      --  If no project or tree was specified for the main, it\n-                     --  came from the command line. In this case, it needs to\n-                     --  belong to the root project.\n-\n+                     --  came from the command line.\n                      --  Note that the assignments below will not modify inside\n                      --  the table itself.\n \n@@ -1413,64 +1488,19 @@ package body Makeutl is\n                            Index     => File.Index);\n \n                         if Source = No_Source then\n+                           Source := Find_File_Add_Extension\n+                             (Tree, File.Project, Get_Name_String (Main_Id));\n+                        end if;\n \n-                           --  Now look for the main with a body suffix\n-\n-                           declare\n-                              --  Main already has a canonical casing\n-\n-                              Main : constant String :=\n-                                Get_Name_String (Main_Id);\n-                              Project : Project_Id;\n-\n-                           begin\n-                              Project := File.Project;\n-                              while Source = No_Source\n-                                and then Project /= No_Project\n-                              loop\n-                                 Iter := For_Each_Source (File.Tree, Project);\n-                                 loop\n-                                    Source := Prj.Element (Iter);\n-                                    exit when Source = No_Source;\n-\n-                                    --  Only consider bodies\n-\n-                                    if Source.Kind = Impl then\n-                                       Get_Name_String (Source.File);\n-\n-                                       if Name_Len > Main'Length\n-                                         and then Name_Buffer\n-                                           (1 .. Main'Length) = Main\n-                                       then\n-                                          Suffix :=\n-                                            Source.Language\n-                                              .Config.Naming_Data.Body_Suffix;\n-\n-                                          exit when Suffix /= No_File and then\n-                                            Name_Buffer\n-                                              (Main'Length + 1 .. Name_Len) =\n-                                              Get_Name_String (Suffix);\n-                                       end if;\n-                                    end if;\n-\n-                                    Next (Iter);\n-                                 end loop;\n-\n-                                 Project := Project.Extends;\n-                              end loop;\n-                           end;\n-\n-                        else\n-                           if Is_Absolute then\n-                              if File_Name_Type (Source.Path.Name) /=\n-                                File.File\n-                              then\n-                                 Debug_Output\n-                                   (\"found a non-matching file\",\n-                                    Name_Id (Source.Path.Display_Name));\n-                                 Source := No_Source;\n-                              end if;\n-                           end if;\n+                        if Is_Absolute\n+                          and then Source /= No_Source\n+                          and then File_Name_Type (Source.Path.Name) /=\n+                          File.File\n+                        then\n+                           Debug_Output\n+                             (\"Found a non-matching file\",\n+                              Name_Id (Source.Path.Display_Name));\n+                           Source := No_Source;\n                         end if;\n \n                         if Source = No_Source then\n@@ -1480,6 +1510,7 @@ package body Makeutl is\n                                 Units_Htable.Get\n                                   (File.Tree.Units_HT, Name_Id (Main_Id));\n                            begin\n+\n                               if Unit /= No_Unit_Index then\n                                  Source := Unit.File_Names (Impl);\n                                  if Source = No_Source then"}]}