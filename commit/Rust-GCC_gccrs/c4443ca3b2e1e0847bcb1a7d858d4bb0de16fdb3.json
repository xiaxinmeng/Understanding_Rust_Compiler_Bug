{"sha": "c4443ca3b2e1e0847bcb1a7d858d4bb0de16fdb3", "node_id": "C_kwDOANBUbNoAKGM0NDQzY2EzYjJlMWUwODQ3YmNiMWE3ZDg1OGQ0YmIwZGUxNmZkYjM", "commit": {"author": {"name": "Arthur Cohen", "email": "arthur.cohen@embecosm.com", "date": "2022-04-14T08:50:02Z"}, "committer": {"name": "Arthur Cohen", "email": "arthur.cohen@embecosm.com", "date": "2022-04-14T08:50:02Z"}, "message": "privacy: reachability: Visit all variants of an Enum and their fields", "tree": {"sha": "afd6e0b6d0d38e2ab6b98287d9010d74bf80a84c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/afd6e0b6d0d38e2ab6b98287d9010d74bf80a84c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c4443ca3b2e1e0847bcb1a7d858d4bb0de16fdb3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c4443ca3b2e1e0847bcb1a7d858d4bb0de16fdb3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c4443ca3b2e1e0847bcb1a7d858d4bb0de16fdb3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c4443ca3b2e1e0847bcb1a7d858d4bb0de16fdb3/comments", "author": {"login": "CohenArthur", "id": 43524065, "node_id": "MDQ6VXNlcjQzNTI0MDY1", "avatar_url": "https://avatars.githubusercontent.com/u/43524065?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CohenArthur", "html_url": "https://github.com/CohenArthur", "followers_url": "https://api.github.com/users/CohenArthur/followers", "following_url": "https://api.github.com/users/CohenArthur/following{/other_user}", "gists_url": "https://api.github.com/users/CohenArthur/gists{/gist_id}", "starred_url": "https://api.github.com/users/CohenArthur/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CohenArthur/subscriptions", "organizations_url": "https://api.github.com/users/CohenArthur/orgs", "repos_url": "https://api.github.com/users/CohenArthur/repos", "events_url": "https://api.github.com/users/CohenArthur/events{/privacy}", "received_events_url": "https://api.github.com/users/CohenArthur/received_events", "type": "User", "site_admin": false}, "committer": {"login": "CohenArthur", "id": 43524065, "node_id": "MDQ6VXNlcjQzNTI0MDY1", "avatar_url": "https://avatars.githubusercontent.com/u/43524065?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CohenArthur", "html_url": "https://github.com/CohenArthur", "followers_url": "https://api.github.com/users/CohenArthur/followers", "following_url": "https://api.github.com/users/CohenArthur/following{/other_user}", "gists_url": "https://api.github.com/users/CohenArthur/gists{/gist_id}", "starred_url": "https://api.github.com/users/CohenArthur/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CohenArthur/subscriptions", "organizations_url": "https://api.github.com/users/CohenArthur/orgs", "repos_url": "https://api.github.com/users/CohenArthur/repos", "events_url": "https://api.github.com/users/CohenArthur/events{/privacy}", "received_events_url": "https://api.github.com/users/CohenArthur/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "126f7aecdcdf1bf3044e0a0165324ed3ce258a78", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/126f7aecdcdf1bf3044e0a0165324ed3ce258a78", "html_url": "https://github.com/Rust-GCC/gccrs/commit/126f7aecdcdf1bf3044e0a0165324ed3ce258a78"}], "stats": {"total": 32, "additions": 32, "deletions": 0}, "files": [{"sha": "bf2480b23c545a7a43497e6da4d9ffad22ba9a75", "filename": "gcc/rust/privacy/rust-reachability.cc", "status": "modified", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c4443ca3b2e1e0847bcb1a7d858d4bb0de16fdb3/gcc%2Frust%2Fprivacy%2Frust-reachability.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c4443ca3b2e1e0847bcb1a7d858d4bb0de16fdb3/gcc%2Frust%2Fprivacy%2Frust-reachability.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fprivacy%2Frust-reachability.cc?ref=c4443ca3b2e1e0847bcb1a7d858d4bb0de16fdb3", "patch": "@@ -150,6 +150,38 @@ ReachabilityVisitor::visit (HIR::Enum &enum_item)\n \n   enum_reach = ctx.update_reachability (enum_item.get_mappings (), enum_reach);\n   visit_generic_predicates (enum_item.get_generic_params (), enum_reach);\n+\n+  for (const auto &variant : enum_item.get_variants ())\n+    {\n+      auto variant_reach\n+\t= ctx.update_reachability (variant->get_mappings (), enum_reach);\n+\n+      switch (variant->get_enum_item_kind ())\n+\t{\n+\t  case HIR::EnumItem::Tuple: {\n+\t    // Should we update the fields only if they are public? Similarly to\n+\t    // what we do in the ReachabilityVisitor for HIR::TupleStruct?\n+\t    auto tuple_variant\n+\t      = static_cast<HIR::EnumItemTuple *> (variant.get ());\n+\t    for (const auto &field : tuple_variant->get_tuple_fields ())\n+\t      ctx.update_reachability (field.get_mappings (), variant_reach);\n+\t    break;\n+\t  }\n+\t  case HIR::EnumItem::Struct: {\n+\t    // Should we update the fields only if they are public? Similarly to\n+\t    // what we do in the ReachabilityVisitor for HIR::StructStruct?\n+\t    auto struct_variant\n+\t      = static_cast<HIR::EnumItemStruct *> (variant.get ());\n+\t    for (const auto &field : struct_variant->get_struct_fields ())\n+\t      ctx.update_reachability (field.get_mappings (), variant_reach);\n+\t    break;\n+\t  }\n+\t// Nothing nested to visit in that case\n+\tcase HIR::EnumItem::Named:\n+\tcase HIR::EnumItem::Discriminant:\n+\t  break;\n+\t}\n+    }\n }\n \n void"}]}