{"sha": "d001969e22eb6c544a35676b827524f218433c5f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDAwMTk2OWUyMmViNmM1NDRhMzU2NzZiODI3NTI0ZjIxODQzM2M1Zg==", "commit": {"author": {"name": "Herman A.J. ten Brugge", "email": "Haj.Ten.Brugge@net.HCC.nl", "date": "2001-02-03T01:34:27Z"}, "committer": {"name": "Michael Hayes", "email": "m.hayes@gcc.gnu.org", "date": "2001-02-03T01:34:27Z"}, "message": "c4x.c (group1_reg_operand, [...]): Do not check register number before reload.\n\n\t* c4x.c (group1_reg_operand, group1_mem_operand, arx_reg_operand,\n\tc4x_arn_reg_operand, c4x_arn_mem_operand): Do not check register\n\tnumber before reload.\n\t(c4x_adjust_cost): Return zero before reload.\n\t* c4x.md (load_immed_address+1, load_immed_address+2): Do not\n\tsplit before reload.\n\nFrom-SVN: r39420", "tree": {"sha": "2270350eca0bbe4bc4188eab085caac98a50119b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2270350eca0bbe4bc4188eab085caac98a50119b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d001969e22eb6c544a35676b827524f218433c5f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d001969e22eb6c544a35676b827524f218433c5f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d001969e22eb6c544a35676b827524f218433c5f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d001969e22eb6c544a35676b827524f218433c5f/comments", "author": null, "committer": null, "parents": [{"sha": "40eef757425806fdf01462bde3455eaefaf1abd7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/40eef757425806fdf01462bde3455eaefaf1abd7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/40eef757425806fdf01462bde3455eaefaf1abd7"}], "stats": {"total": 57, "additions": 33, "deletions": 24}, "files": [{"sha": "d4226ee8cfbf382b187f099eebddee0b81d5bbfc", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d001969e22eb6c544a35676b827524f218433c5f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d001969e22eb6c544a35676b827524f218433c5f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d001969e22eb6c544a35676b827524f218433c5f", "patch": "@@ -1,3 +1,12 @@\n+2001-02-03  Herman A.J. ten Brugge <Haj.Ten.Brugge@net.HCC.nl>\n+\n+\t* c4x.c (group1_reg_operand, group1_mem_operand, arx_reg_operand,\n+\tc4x_arn_reg_operand, c4x_arn_mem_operand): Do not check register\n+\tnumber before reload.\n+\t(c4x_adjust_cost): Return zero before reload.\n+\t* c4x.md (load_immed_address+1, load_immed_address+2): Do not\n+\tsplit before reload.\n+\n 2001-02-03  Herman A.J. ten Brugge <Haj.Ten.Brugge@net.HCC.nl>\n \n \t* c4x.c (c4x_hard_regno_rename_ok): New."}, {"sha": "fd084b1b7bdbca4d0f3757fedebd9a20cb7bb056", "filename": "gcc/config/c4x/c4x.c", "status": "modified", "additions": 16, "deletions": 14, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d001969e22eb6c544a35676b827524f218433c5f/gcc%2Fconfig%2Fc4x%2Fc4x.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d001969e22eb6c544a35676b827524f218433c5f/gcc%2Fconfig%2Fc4x%2Fc4x.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fc4x%2Fc4x.c?ref=d001969e22eb6c544a35676b827524f218433c5f", "patch": "@@ -4102,7 +4102,7 @@ group1_reg_operand (op, mode)\n     return 0;\n   if (GET_CODE (op) == SUBREG)\n     op = SUBREG_REG (op);\n-  return REG_P (op) && IS_GROUP1_REG (op);\n+  return REG_P (op) && (! reload_completed || IS_GROUP1_REG (op));\n }\n \n \n@@ -4122,11 +4122,11 @@ group1_mem_operand (op, mode)\n \t  rtx op0 = XEXP (op, 0);\n \t  rtx op1 = XEXP (op, 1);\n \n-\t  if (((GET_CODE (op0) == REG) && IS_GROUP1_REG (op0))\n-\t      || ((GET_CODE (op1) == REG) && IS_GROUP1_REG (op1)))\n+\t  if ((REG_P (op0) && (! reload_completed || IS_GROUP1_REG (op0)))\n+\t      || (REG_P (op1) && (! reload_completed || IS_GROUP1_REG (op1))))\n \t    return 1;\n \t}\n-      else if ((REG_P (op)) && IS_GROUP1_REG (op))\n+      else if ((REG_P (op)) && (! reload_completed || IS_GROUP1_REG (op)))\n \treturn 1;\n     }\n \n@@ -4145,7 +4145,7 @@ arx_reg_operand (op, mode)\n     return 0;\n   if (GET_CODE (op) == SUBREG)\n     op = SUBREG_REG (op);\n-  return REG_P (op) && IS_ADDR_REG (op);\n+  return REG_P (op) && (! reload_completed || IS_ADDR_REG (op));\n }\n \n \n@@ -4159,7 +4159,7 @@ c4x_arn_reg_operand (op, mode, regno)\n     return 0;\n   if (GET_CODE (op) == SUBREG)\n     op = SUBREG_REG (op);\n-  return REG_P (op) && (REGNO (op) == regno);\n+  return REG_P (op) && (! reload_completed || (REGNO (op) == regno));\n }\n \n \n@@ -4184,16 +4184,16 @@ c4x_arn_mem_operand (op, mode, regno)\n \t  op = XEXP (op, 0);\n \n \tcase REG:\n-          if (REG_P (op) && (REGNO (op) == regno))\n-\t    return 1;\n-\t  break;\n+          return REG_P (op) && (! reload_completed || (REGNO (op) == regno));\n \n \tcase PRE_MODIFY:\n \tcase POST_MODIFY:\n-          if (REG_P (XEXP (op, 0)) && (REGNO (XEXP (op, 0)) == regno))\n+          if (REG_P (XEXP (op, 0)) && (! reload_completed \n+\t\t\t\t       || (REGNO (XEXP (op, 0)) == regno)))\n \t    return 1;\n           if (REG_P (XEXP (XEXP (op, 1), 1))\n-\t      && (REGNO (XEXP (XEXP (op, 1), 1)) == regno))\n+\t      && (! reload_completed\n+\t\t  || (REGNO (XEXP (XEXP (op, 1), 1)) == regno)))\n \t    return 1;\n \t  break;\n \n@@ -4202,8 +4202,10 @@ c4x_arn_mem_operand (op, mode, regno)\n \t    rtx op0 = XEXP (op, 0);\n \t    rtx op1 = XEXP (op, 1);\n \n-\t    if (((GET_CODE (op0) == REG) && (REGNO (op0) == regno)) \n-\t        || ((GET_CODE (op1) == REG) && (REGNO (op1) == regno)))\n+\t    if ((REG_P (op0) && (! reload_completed\n+\t\t\t\t || (REGNO (op0) == regno)))\n+\t        || (REG_P (op1) && (! reload_completed\n+\t\t\t\t    || (REGNO (op1) == regno))))\n \t      return 1;\n \t  }\n \t  break;\n@@ -4899,7 +4901,7 @@ c4x_adjust_cost (insn, link, dep_insn, cost)\n {\n   /* Don't worry about this until we know what registers have been\n      assigned.  */\n-  if (! reload_completed)\n+  if (flag_schedule_insns == 0 && ! reload_completed)\n     return 0;\n \n   /* How do we handle dependencies where a read followed by another"}, {"sha": "d6493fe41a0cd58bc060a88dedfde50d133f3b2f", "filename": "gcc/config/c4x/c4x.md", "status": "modified", "additions": 8, "deletions": 10, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d001969e22eb6c544a35676b827524f218433c5f/gcc%2Fconfig%2Fc4x%2Fc4x.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d001969e22eb6c544a35676b827524f218433c5f/gcc%2Fconfig%2Fc4x%2Fc4x.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fc4x%2Fc4x.md?ref=d001969e22eb6c544a35676b827524f218433c5f", "patch": "@@ -966,7 +966,7 @@\n (define_split\n   [(set (match_operand:QI 0 \"std_reg_operand\" \"\")\n         (match_operand:QI 1 \"symbolic_address_operand\" \"\"))]\n-  \"! TARGET_C3X && ! TARGET_TI\"\n+  \"reload_completed && ! TARGET_C3X && ! TARGET_TI\"\n   [(set (match_dup 0) (high:QI (match_dup 1)))\n    (set (match_dup 0) (lo_sum:QI (match_dup 0) (match_dup 1)))]\n   \"\")\n@@ -1207,7 +1207,7 @@\n   [(set (match_operand:QI 0 \"std_reg_operand\" \"\")\n         (match_operand:QI 1 \"symbolic_address_operand\" \"\"))\n    (clobber (reg:QI 16))]\n-  \"! TARGET_C3X && ! TARGET_TI\"\n+  \"reload_completed && ! TARGET_C3X && ! TARGET_TI\"\n   [(set (match_dup 0) (high:QI (match_dup 1)))\n    (set (match_dup 0) (lo_sum:QI (match_dup 0) (match_dup 1)))]\n   \"\")\n@@ -1220,10 +1220,9 @@\n   [(set (match_operand:QI 0 \"reg_operand\" \"\")\n         (match_operand:QI 1 \"symbolic_address_operand\" \"\"))\n    (clobber (reg:QI 16))]\n-  \"! TARGET_SMALL \n-   && (TARGET_C3X || TARGET_TI\n-       || (reload_completed\n-           && ! std_reg_operand (operands[0], QImode)))\"\n+  \"reload_completed\n+   && ! TARGET_SMALL \n+   && (TARGET_C3X || TARGET_TI || ! std_reg_operand (operands[0], QImode))\"\n   [(set (match_dup 2) (high:QI (match_dup 3)))\n    (set (match_dup 0) (match_dup 4))\n    (use (match_dup 1))]\n@@ -1244,10 +1243,9 @@\n   [(set (match_operand:QI 0 \"reg_operand\" \"\")\n         (match_operand:QI 1 \"symbolic_address_operand\" \"\"))\n    (clobber (reg:QI 16))]\n-  \"TARGET_SMALL\n-   && (TARGET_C3X || TARGET_TI\n-       || (reload_completed\n-           && ! std_reg_operand (operands[0], QImode)))\"\n+  \"reload_completed\n+   && TARGET_SMALL\n+   && (TARGET_C3X || TARGET_TI || ! std_reg_operand (operands[0], QImode))\"\n   [(set (match_dup 0) (match_dup 2))\n    (use (match_dup 1))]\n   \""}]}