{"sha": "17374dab3eefd282977ad90743c9aff97f2e41ce", "node_id": "C_kwDOANBUbNoAKDE3Mzc0ZGFiM2VlZmQyODI5NzdhZDkwNzQzYzlhZmY5N2YyZTQxY2U", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2021-10-01T13:06:42Z"}, "committer": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2021-10-01T14:04:03Z"}, "message": "libstdc++: Define basic_regex::multiline for non-strict modes\n\nThe regex_constants::multiline constant is defined for non-strict C++11\nand C++14 modes, on the basis that the feature is a DR (even though it\nwas really a new feature addition to C++17 and probably shouldn't have\ngone through the issues list).\n\nThis makes the basic_regex::multiline constant defined consistently with\nthe regex_constants::multiline one.\n\nFor strict C++11 and C++14 mode we don't define them, because multiline\nis not a reserved name in those standards.\n\nlibstdc++-v3/ChangeLog:\n\n\t* include/bits/regex.h (basic_regex::multiline): Define for\n\tnon-strict C++11 and C++14 modes.\n\t* include/bits/regex_constants.h (regex_constants::multiline):\n\tAdd _GLIBCXX_RESOLVE_LIB_DEFECTS comment.", "tree": {"sha": "c2955fe3f1ba3e0ca7703dbda87e9f4e036fd3a6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c2955fe3f1ba3e0ca7703dbda87e9f4e036fd3a6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/17374dab3eefd282977ad90743c9aff97f2e41ce", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/17374dab3eefd282977ad90743c9aff97f2e41ce", "html_url": "https://github.com/Rust-GCC/gccrs/commit/17374dab3eefd282977ad90743c9aff97f2e41ce", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/17374dab3eefd282977ad90743c9aff97f2e41ce/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "94311bf34704ebecf745043fe2df03df201052fe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/94311bf34704ebecf745043fe2df03df201052fe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/94311bf34704ebecf745043fe2df03df201052fe"}], "stats": {"total": 4, "additions": 3, "deletions": 1}, "files": [{"sha": "ff908da3e9422f5d5e67a9a52f2b45493202e55b", "filename": "libstdc++-v3/include/bits/regex.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/17374dab3eefd282977ad90743c9aff97f2e41ce/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fregex.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/17374dab3eefd282977ad90743c9aff97f2e41ce/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fregex.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fregex.h?ref=17374dab3eefd282977ad90743c9aff97f2e41ce", "patch": "@@ -424,7 +424,7 @@ _GLIBCXX_BEGIN_NAMESPACE_CXX11\n       static constexpr flag_type awk = regex_constants::awk;\n       static constexpr flag_type grep = regex_constants::grep;\n       static constexpr flag_type egrep = regex_constants::egrep;\n-#if __cplusplus >= 201703L\n+#if __cplusplus >= 201703L || !defined __STRICT_ANSI__\n       static constexpr flag_type multiline = regex_constants::multiline;\n #endif\n       ///@}"}, {"sha": "0fd2879c81729bf81066019b53d410cf3a0b01d4", "filename": "libstdc++-v3/include/bits/regex_constants.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/17374dab3eefd282977ad90743c9aff97f2e41ce/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fregex_constants.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/17374dab3eefd282977ad90743c9aff97f2e41ce/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fregex_constants.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fregex_constants.h?ref=17374dab3eefd282977ad90743c9aff97f2e41ce", "patch": "@@ -171,6 +171,8 @@ namespace regex_constants\n     static_cast<syntax_option_type>(1 << _S_egrep);\n \n #if __cplusplus >= 201703L || !defined __STRICT_ANSI__\n+  // _GLIBCXX_RESOLVE_LIB_DEFECTS\n+  // 2503. multiline option should be added to syntax_option_type\n   /**\n    * Specifies that the `^` anchor matches at the beginning of a line,\n    * and the `$` anchor matches at the end of a line, not only at the"}]}