{"sha": "fb112177481effbbf9db80444a1ad6d0dd9f7757", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmIxMTIxNzc0ODFlZmZiYmY5ZGI4MDQ0NGExYWQ2ZDBkZDlmNzc1Nw==", "commit": {"author": {"name": "H.J. Lu", "email": "hongjiu.lu@intel.com", "date": "2014-06-24T14:46:18Z"}, "committer": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2014-06-24T14:46:18Z"}, "message": "Revert the last change on driver-i386.c\n\n\tPR target/61570\n\t* config/i386/driver-i386.c (host_detect_local_cpu): Revert\n\tthe last change.\n\nFrom-SVN: r211943", "tree": {"sha": "7f5bd67ad767845a178e4c39114c21595dc14502", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7f5bd67ad767845a178e4c39114c21595dc14502"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fb112177481effbbf9db80444a1ad6d0dd9f7757", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fb112177481effbbf9db80444a1ad6d0dd9f7757", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fb112177481effbbf9db80444a1ad6d0dd9f7757", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fb112177481effbbf9db80444a1ad6d0dd9f7757/comments", "author": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "1eb68d2d011dd181aca030e98ab02f29375e89da", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1eb68d2d011dd181aca030e98ab02f29375e89da", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1eb68d2d011dd181aca030e98ab02f29375e89da"}], "stats": {"total": 59, "additions": 22, "deletions": 37}, "files": [{"sha": "00bad435ac796628e81ff28fc4d25cbe80b6a29b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb112177481effbbf9db80444a1ad6d0dd9f7757/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb112177481effbbf9db80444a1ad6d0dd9f7757/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=fb112177481effbbf9db80444a1ad6d0dd9f7757", "patch": "@@ -1,3 +1,9 @@\n+2014-06-24  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR target/61570\n+\t* config/i386/driver-i386.c (host_detect_local_cpu): Revert\n+\tthe last change.\n+\n 2014-06-24  Trevor Saunders  <tsaunders@mozilla.com>\n \n \t* alloc-pool.c (alloc_pool_hash): Use hash_map instead of hash_table."}, {"sha": "3e8a995f2856cd9bd5ae45fa92dcacc271ac2032", "filename": "gcc/config/i386/driver-i386.c", "status": "modified", "additions": 16, "deletions": 37, "changes": 53, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb112177481effbbf9db80444a1ad6d0dd9f7757/gcc%2Fconfig%2Fi386%2Fdriver-i386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb112177481effbbf9db80444a1ad6d0dd9f7757/gcc%2Fconfig%2Fi386%2Fdriver-i386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fdriver-i386.c?ref=fb112177481effbbf9db80444a1ad6d0dd9f7757", "patch": "@@ -415,7 +415,6 @@ const char *host_detect_local_cpu (int argc, const char **argv)\n   bool arch;\n \n   unsigned int l2sizekb = 0;\n-  unsigned int arch_64bit = 1;\n \n   if (argc < 1)\n     return NULL;\n@@ -657,14 +656,11 @@ const char *host_detect_local_cpu (int argc, const char **argv)\n     {\n     case PROCESSOR_I386:\n       /* Default.  */\n-      arch_64bit = 0;\n       break;\n     case PROCESSOR_I486:\n-      arch_64bit = 0;\n       cpu = \"i486\";\n       break;\n     case PROCESSOR_PENTIUM:\n-      arch_64bit = 0;\n       if (arch && has_mmx)\n \tcpu = \"pentium-mmx\";\n       else\n@@ -749,25 +745,21 @@ const char *host_detect_local_cpu (int argc, const char **argv)\n \t\t    /* Assume Core 2.  */\n \t\t    cpu = \"core2\";\n \t\t}\n+\t      else if (has_sse3)\n+\t\t/* It is Core Duo.  */\n+\t\tcpu = \"pentium-m\";\n+\t      else if (has_sse2)\n+\t\t/* It is Pentium M.  */\n+\t\tcpu = \"pentium-m\";\n+\t      else if (has_sse)\n+\t\t/* It is Pentium III.  */\n+\t\tcpu = \"pentium3\";\n+\t      else if (has_mmx)\n+\t\t/* It is Pentium II.  */\n+\t\tcpu = \"pentium2\";\n \t      else\n-\t\t{\n-\t\t  arch_64bit = 0;\n-\t\t  if (has_sse3)\n-\t\t    /* It is Core Duo.  */\n-\t\t    cpu = \"pentium-m\";\n-\t\t  else if (has_sse2)\n-\t\t    /* It is Pentium M.  */\n-\t\t    cpu = \"pentium-m\";\n-\t\t  else if (has_sse)\n-\t\t    /* It is Pentium III.  */\n-\t\t    cpu = \"pentium3\";\n-\t\t  else if (has_mmx)\n-\t\t    /* It is Pentium II.  */\n-\t\t    cpu = \"pentium2\";\n-\t\t  else\n-\t\t    /* Default to Pentium Pro.  */\n-\t\t    cpu = \"pentiumpro\";\n-\t\t}\n+\t\t/* Default to Pentium Pro.  */\n+\t\tcpu = \"pentiumpro\";\n \t    }\n \t  else\n \t    /* For -mtune, we default to -mtune=generic.  */\n@@ -781,30 +773,21 @@ const char *host_detect_local_cpu (int argc, const char **argv)\n \t  if (has_longmode)\n \t    cpu = \"nocona\";\n \t  else\n-\t    {\n-\t      cpu = \"prescott\";\n-\t      arch_64bit = 0;\n-\t    }\n+\t    cpu = \"prescott\";\n \t}\n       else\n-\t{\n-\t  cpu = \"pentium4\";\n-\t  arch_64bit = 0;\n-\t}\n+\tcpu = \"pentium4\";\n       break;\n     case PROCESSOR_GEODE:\n-      arch_64bit = 0;\n       cpu = \"geode\";\n       break;\n     case PROCESSOR_K6:\n-      arch_64bit = 0;\n       if (arch && has_3dnow)\n \tcpu = \"k6-3\";\n       else\n \tcpu = \"k6\";\n       break;\n     case PROCESSOR_ATHLON:\n-      arch_64bit = 0;\n       if (arch && has_sse)\n \tcpu = \"athlon-4\";\n       else\n@@ -913,10 +896,6 @@ const char *host_detect_local_cpu (int argc, const char **argv)\n       const char *xsavec = has_xsavec ? \" -mxsavec\" : \" -mno-xsavec\";\n       const char *xsaves = has_xsaves ? \" -mxsaves\" : \" -mno-xsaves\";\n \n-      /* Assume x86-64 if a 32-bit processor supports SSE2 and 64-bit.  */\n-      if (arch_64bit == 0 && has_sse2 && has_longmode)\n-\tcpu = \"x86-64\";\n-\n       options = concat (options, mmx, mmx3dnow, sse, sse2, sse3, ssse3,\n \t\t\tsse4a, cx16, sahf, movbe, aes, sha, pclmul,\n \t\t\tpopcnt, abm, lwp, fma, fma4, xop, bmi, bmi2,"}]}