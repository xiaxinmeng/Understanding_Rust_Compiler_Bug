{"sha": "208c89cebd45aa35358b3d7307cf348390ba6c91", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjA4Yzg5Y2ViZDQ1YWEzNTM1OGIzZDczMDdjZjM0ODM5MGJhNmM5MQ==", "commit": {"author": {"name": "Michael Meissner", "email": "meissner@gcc.gnu.org", "date": "1996-06-24T16:17:27Z"}, "committer": {"name": "Michael Meissner", "email": "meissner@gcc.gnu.org", "date": "1996-06-24T16:17:27Z"}, "message": "Move xor of input into insn doing int->double conversion.\n\nFrom-SVN: r12324", "tree": {"sha": "2167985f4f8c54451e309788a60c93f652303e5c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2167985f4f8c54451e309788a60c93f652303e5c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/208c89cebd45aa35358b3d7307cf348390ba6c91", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/208c89cebd45aa35358b3d7307cf348390ba6c91", "html_url": "https://github.com/Rust-GCC/gccrs/commit/208c89cebd45aa35358b3d7307cf348390ba6c91", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/208c89cebd45aa35358b3d7307cf348390ba6c91/comments", "author": null, "committer": null, "parents": [{"sha": "5aae9091074b63bf1b8d4c504e7f226b45222287", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5aae9091074b63bf1b8d4c504e7f226b45222287", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5aae9091074b63bf1b8d4c504e7f226b45222287"}], "stats": {"total": 27, "additions": 17, "deletions": 10}, "files": [{"sha": "2c3f4eddd446176a9e72703768743462dc0170ca", "filename": "gcc/config/rs6000/rs6000.md", "status": "modified", "additions": 17, "deletions": 10, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/208c89cebd45aa35358b3d7307cf348390ba6c91/gcc%2Fconfig%2Frs6000%2Frs6000.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/208c89cebd45aa35358b3d7307cf348390ba6c91/gcc%2Fconfig%2Frs6000%2Frs6000.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.md?ref=208c89cebd45aa35358b3d7307cf348390ba6c91", "patch": "@@ -3549,49 +3549,56 @@\n \t\t   (float:DF (match_operand:SI 1 \"gpc_reg_operand\" \"\")))\n \t      (use (match_dup 2))\n \t      (use (match_dup 3))\n+\t      (clobber (match_dup 4))\n \t      (clobber (reg:DF 76))])]\n   \"! TARGET_POWERPC64 && TARGET_HARD_FLOAT\"\n   \"\n {\n-  rtx low = gen_reg_rtx (SImode);\n   operands[2] = force_reg (SImode, GEN_INT (0x43300000));\n   operands[3] = force_reg (DFmode, rs6000_float_const (\\\"4503601774854144\\\", DFmode));\n-\n-  emit_insn (gen_xorsi3 (low, operands[1], GEN_INT (0x80000000)));\n-  operands[1] = low;\n+  operands[4] = gen_reg_rtx (SImode);\n }\")\n \n (define_insn \"*floatsidf2_internal\"\n   [(set (match_operand:DF 0 \"gpc_reg_operand\" \"=&f\")\n \t(float:DF (match_operand:SI 1 \"gpc_reg_operand\" \"r\")))\n    (use (match_operand:SI 2 \"gpc_reg_operand\" \"r\"))\n    (use (match_operand:DF 3 \"gpc_reg_operand\" \"f\"))\n+   (clobber (match_operand:SI 4 \"gpc_reg_operand\" \"=r\"))\n    (clobber (reg:DF 76))]\n   \"! TARGET_POWERPC64 && TARGET_HARD_FLOAT\"\n   \"#\"\n-  [(set_attr \"length\" \"16\")])\n+  [(set_attr \"length\" \"20\")])\n \n (define_split\n   [(set (match_operand:DF 0 \"gpc_reg_operand\" \"\")\n \t(float:DF (match_operand:SI 1 \"gpc_reg_operand\" \"\")))\n    (use (match_operand:SI 2 \"gpc_reg_operand\" \"\"))\n    (use (match_operand:DF 3 \"gpc_reg_operand\" \"\"))\n+   (clobber (match_operand:SI 4 \"gpc_reg_operand\" \"\"))\n    (clobber (reg:DF 76))]\n   \"! TARGET_POWERPC64 && TARGET_HARD_FLOAT\"\n   [(set (match_dup 4)\n-\t(unspec [(match_dup 1)\t\t;; low word\n+\t(xor:SI (match_dup 1)\n+\t\t(match_dup 5)))\n+   (set (match_dup 6)\n+\t(unspec [(match_dup 4)\t\t;; low word\n \t\t (reg:SI 1)] 11))\n-   (set (match_dup 4)\n+   (set (match_dup 6)\n \t(unspec [(match_dup 2)\t\t;; high word\n \t\t (reg:SI 1)\n-\t\t (match_dup 4)] 12))\n+\t\t (match_dup 6)] 12))\n    (set (match_dup 0)\n-\t(unspec [(match_dup 4)\n+\t(unspec [(match_dup 6)\n \t\t (reg:SI 1)] 13))\n    (set (match_dup 0)\n \t(minus:DF (match_dup 0)\n \t\t  (match_dup 3)))]\n-  \"operands[4] = gen_rtx (REG, DFmode, FPMEM_REGNUM);\")\n+  \"\n+{\n+  operands[5] = GEN_INT (0x80000000);\n+  operands[6] = gen_rtx (REG, DFmode, FPMEM_REGNUM);\n+}\")\n \n (define_expand \"floatunssidf2\"\n   [(parallel [(set (match_operand:DF 0 \"gpc_reg_operand\" \"\")"}]}