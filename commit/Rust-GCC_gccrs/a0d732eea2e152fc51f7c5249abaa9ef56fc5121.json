{"sha": "a0d732eea2e152fc51f7c5249abaa9ef56fc5121", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTBkNzMyZWVhMmUxNTJmYzUxZjdjNTI0OWFiYWE5ZWY1NmZjNTEyMQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2020-05-08T07:35:41Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2020-05-08T07:35:41Z"}, "message": "match.pd: Canonicalize (X + (X >> (prec - 1))) ^ (X >> (prec - 1)) to abs (X) [PR94783]\n\nThe following patch canonicalizes M = X >> (prec - 1); (X + M) ^ M\nfor signed integral types into ABS_EXPR (X).  For X == min it is already\nUB because M is -1 and min + -1 is UB, so we can use ABS_EXPR rather than\nsay ABSU_EXPR + cast.\n\nThe backend might then emit the abs code back using the shift and addition\nand xor if it is the best sequence for the target, but could do something\ndifferent that is better.\n\n2020-05-08  Jakub Jelinek  <jakub@redhat.com>\n\n\tPR tree-optimization/94783\n\t* match.pd ((X + (X >> (prec - 1))) ^ (X >> (prec - 1)) to abs (X)):\n\tNew simplification.\n\n\t* gcc.dg/tree-ssa/pr94783.c: New test.", "tree": {"sha": "7d2fb107ac7cbf4d72a6934db371dc075494caf5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7d2fb107ac7cbf4d72a6934db371dc075494caf5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a0d732eea2e152fc51f7c5249abaa9ef56fc5121", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a0d732eea2e152fc51f7c5249abaa9ef56fc5121", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a0d732eea2e152fc51f7c5249abaa9ef56fc5121", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a0d732eea2e152fc51f7c5249abaa9ef56fc5121/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "df569f7da567af4996821dc0a1871eec79957d04", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/df569f7da567af4996821dc0a1871eec79957d04", "html_url": "https://github.com/Rust-GCC/gccrs/commit/df569f7da567af4996821dc0a1871eec79957d04"}], "stats": {"total": 28, "additions": 28, "deletions": 0}, "files": [{"sha": "75b0ed1542f922e5f71a0ef6c8930ca3886d451d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0d732eea2e152fc51f7c5249abaa9ef56fc5121/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0d732eea2e152fc51f7c5249abaa9ef56fc5121/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a0d732eea2e152fc51f7c5249abaa9ef56fc5121", "patch": "@@ -1,5 +1,9 @@\n 2020-05-08  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR tree-optimization/94783\n+\t* match.pd ((X + (X >> (prec - 1))) ^ (X >> (prec - 1)) to abs (X)):\n+\tNew simplification.\n+\n \tPR tree-optimization/94956\n \t* match.pd (FFS): Optimize __builtin_ffs* of non-zero argument into\n \t__builtin_ctz* + 1 if direct IFN_CTZ is supported."}, {"sha": "e8c53e347f4d7941901c5b99f59beabe9755d631", "filename": "gcc/match.pd", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0d732eea2e152fc51f7c5249abaa9ef56fc5121/gcc%2Fmatch.pd", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0d732eea2e152fc51f7c5249abaa9ef56fc5121/gcc%2Fmatch.pd", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmatch.pd?ref=a0d732eea2e152fc51f7c5249abaa9ef56fc5121", "patch": "@@ -120,6 +120,15 @@ DEFINE_INT_AND_FLOAT_ROUND_FN (RINT)\n   (with { tree utype = unsigned_type_for (TREE_TYPE (@0)); }\n    (convert (absu:utype @0)))))\n \n+#if GIMPLE\n+/* Optimize (X + (X >> (prec - 1))) ^ (X >> (prec - 1)) into abs (X).  */\n+(simplify\n+ (bit_xor:c (plus:c @0 (rshift@2 @0 INTEGER_CST@1)) @2)\n+ (if (ANY_INTEGRAL_TYPE_P (TREE_TYPE (@0))\n+      && !TYPE_UNSIGNED (TREE_TYPE (@0))\n+      && wi::to_widest (@1) == element_precision (TREE_TYPE (@0)) - 1)\n+  (abs @0)))\n+#endif\n \n /* Simplifications of operations with one constant operand and\n    simplifications to constants or single values.  */"}, {"sha": "174198fdbe49c3acfa3040374bc61b83ea1d1497", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0d732eea2e152fc51f7c5249abaa9ef56fc5121/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0d732eea2e152fc51f7c5249abaa9ef56fc5121/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=a0d732eea2e152fc51f7c5249abaa9ef56fc5121", "patch": "@@ -1,5 +1,8 @@\n 2020-05-08  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR tree-optimization/94783\n+\t* gcc.dg/tree-ssa/pr94783.c: New test.\n+\n \tPR tree-optimization/94956\n \t* gcc.target/i386/pr94956.c: New test.\n "}, {"sha": "c52f657520e3f4c2dc98300c71b6cd78862e0081", "filename": "gcc/testsuite/gcc.dg/tree-ssa/pr94783.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0d732eea2e152fc51f7c5249abaa9ef56fc5121/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr94783.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0d732eea2e152fc51f7c5249abaa9ef56fc5121/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr94783.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr94783.c?ref=a0d732eea2e152fc51f7c5249abaa9ef56fc5121", "patch": "@@ -0,0 +1,12 @@\n+/* PR tree-optimization/94783 */\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -fdump-tree-optimized\" } */\n+/* { dg-final { scan-tree-dump \"ABS_EXPR\" \"optimized\" } } */\n+/* { dg-final { scan-tree-dump-not \" >> 31\" \"optimized\" } } */\n+\n+int\n+foo (int v)\n+{\n+  int mask = v >> (__SIZEOF_INT__ * __CHAR_BIT__ - 1);\n+  return (v + mask) ^ mask;\n+}"}]}