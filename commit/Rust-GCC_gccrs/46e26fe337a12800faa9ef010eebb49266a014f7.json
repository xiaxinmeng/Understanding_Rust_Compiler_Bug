{"sha": "46e26fe337a12800faa9ef010eebb49266a014f7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDZlMjZmZTMzN2ExMjgwMGZhYTllZjAxMGVlYmI0OTI2NmEwMTRmNw==", "commit": {"author": {"name": "Pascal Obry", "email": "obry@adacore.com", "date": "2009-04-17T12:33:07Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-04-17T12:33:07Z"}, "message": "initialize.c: Do not get Unicode command line if Unicode support not activated.\n\n2009-04-17  Pascal Obry  <obry@adacore.com>\n\n\t* initialize.c: Do not get Unicode command line if Unicode support not\n\tactivated.\n\tAdd support for wildcard expansion for Unicode parameters on Win32.\n\n\t* mingw32.h: Add missing macros when Unicode support not activated.\n\nFrom-SVN: r146258", "tree": {"sha": "87782799dc4ca0c12c83421bb896e2413dc9179c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/87782799dc4ca0c12c83421bb896e2413dc9179c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/46e26fe337a12800faa9ef010eebb49266a014f7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/46e26fe337a12800faa9ef010eebb49266a014f7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/46e26fe337a12800faa9ef010eebb49266a014f7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/46e26fe337a12800faa9ef010eebb49266a014f7/comments", "author": {"login": "TurboGit", "id": 467069, "node_id": "MDQ6VXNlcjQ2NzA2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/467069?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TurboGit", "html_url": "https://github.com/TurboGit", "followers_url": "https://api.github.com/users/TurboGit/followers", "following_url": "https://api.github.com/users/TurboGit/following{/other_user}", "gists_url": "https://api.github.com/users/TurboGit/gists{/gist_id}", "starred_url": "https://api.github.com/users/TurboGit/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TurboGit/subscriptions", "organizations_url": "https://api.github.com/users/TurboGit/orgs", "repos_url": "https://api.github.com/users/TurboGit/repos", "events_url": "https://api.github.com/users/TurboGit/events{/privacy}", "received_events_url": "https://api.github.com/users/TurboGit/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "fabf2749fd98b5cbc7d3112bc74a4c7c5d24351d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fabf2749fd98b5cbc7d3112bc74a4c7c5d24351d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fabf2749fd98b5cbc7d3112bc74a4c7c5d24351d"}], "stats": {"total": 114, "additions": 103, "deletions": 11}, "files": [{"sha": "edb0bab6f0a8dcc60b47312edfabeec63ec25152", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/46e26fe337a12800faa9ef010eebb49266a014f7/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/46e26fe337a12800faa9ef010eebb49266a014f7/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=46e26fe337a12800faa9ef010eebb49266a014f7", "patch": "@@ -1,3 +1,11 @@\n+2009-04-17  Pascal Obry  <obry@adacore.com>\n+\n+\t* initialize.c: Do not get Unicode command line if Unicode support not\n+\tactivated.\n+\tAdd support for wildcard expansion for Unicode parameters on Win32.\n+\n+\t* mingw32.h: Add missing macros when Unicode support not activated.\n+\n 2009-04-17  Javier Miranda  <miranda@adacore.com>\n \n \t* sem_ch6.adb (Check_Anonymous_Return): Add missing checks to"}, {"sha": "67e2acd75c06ff309bbdde9564d969b592a77604", "filename": "gcc/ada/initialize.c", "status": "modified", "additions": 93, "deletions": 11, "changes": 104, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/46e26fe337a12800faa9ef010eebb49266a014f7/gcc%2Fada%2Finitialize.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/46e26fe337a12800faa9ef010eebb49266a014f7/gcc%2Fada%2Finitialize.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Finitialize.c?ref=46e26fe337a12800faa9ef010eebb49266a014f7", "patch": "@@ -72,6 +72,52 @@ extern char **gnat_argv;\n extern void __gnat_plist_init (void);\n #endif\n \n+#ifdef GNAT_UNICODE_SUPPORT\n+\n+#define EXPAND_ARGV_RATE 128\n+\n+static void\n+append_arg (int *index, LPWSTR value, char ***argv, int *last)\n+{\n+  int size;\n+\n+  if (*last < *index)\n+    {\n+      char **old_argv = *argv;\n+      int old_last = *last;\n+      int k;\n+\n+      *last += EXPAND_ARGV_RATE;\n+      *argv = (char **) xmalloc ((*last) * sizeof (char *));\n+\n+      for (k=0; k<=old_last; k++)\n+\t(*argv)[k] = old_argv[k];\n+\n+      free (old_argv);\n+    }\n+\n+  size = WS2SC (NULL, value, 0);\n+  (*argv)[*index] = (char *) xmalloc (size + 1);\n+  WS2SC ((*argv)[*index], value, size);\n+\n+  (*index)++;\n+}\n+\n+static void\n+adjust_arg (int last, char ***argv)\n+{\n+  char **old_argv = *argv;\n+  int k;\n+\n+  *argv = (char **) xmalloc (last * sizeof (char *));\n+\n+  for (k=0; k<last; k++)\n+    (*argv)[k] = old_argv[k];\n+\n+  free (old_argv);\n+}\n+#endif\n+\n void\n __gnat_initialize (void *eh)\n {\n@@ -91,37 +137,73 @@ __gnat_initialize (void *eh)\n \n      if (codepage != NULL)\n        if (strcmp (codepage, \"CP_ACP\") == 0)\n-\t CurrentCodePage = CP_ACP;\n+         CurrentCodePage = CP_ACP;\n        else if (strcmp (codepage, \"CP_UTF8\") == 0)\n-\t CurrentCodePage = CP_UTF8;\n+         CurrentCodePage = CP_UTF8;\n    }\n-#endif\n \n    /* Adjust gnat_argv to support Unicode characters. */\n    {\n      LPWSTR *wargv;\n      int wargc;\n      int k;\n-     int size;\n+     int last;\n+     int argc_expanded = 0;\n+     TCHAR result [MAX_PATH];\n \n      wargv = CommandLineToArgvW (GetCommandLineW(), &wargc);\n \n      if (wargv != NULL)\n        {\n \t /* Set gnat_argv with arguments encoded in UTF-8. */\n-\t gnat_argv = (char **) xmalloc ((wargc + 1) * sizeof (char *));\n+\t last = wargc + 1;\n+\t gnat_argv = (char **) xmalloc ((last) * sizeof (char *));\n+\n+\t /* argv[0] is the executable full path-name. */\n+\n+\t SearchPath (NULL, wargv[0], _T(\".exe\"), MAX_PATH, result, NULL);\n+\t append_arg (&argc_expanded, result, &gnat_argv, &last);\n \n-\t for (k=0; k<wargc; k++)\n+\t for (k=1; k<wargc; k++)\n \t   {\n-\t     size = WS2SC (NULL, wargv[k], 0);\n-\t     gnat_argv[k] = (char *) xmalloc (size + 1);\n-\t     WS2SC (gnat_argv[k], wargv[k], size);\n+\t     /* Check for wildcard expansion. */\n+\t     if (_tcsstr (wargv[k], _T(\"?\")) != 0 ||\n+\t\t _tcsstr (wargv[k], _T(\"*\")) != 0)\n+\t       {\n+\t\t /* Wilcards are present, append all corresponding matches. */\n+\t\t WIN32_FIND_DATA FileData;\n+\t\t HANDLE hDir = FindFirstFile (wargv[k], &FileData);\n+\n+\t\t if (hDir == INVALID_HANDLE_VALUE)\n+\t\t   {\n+\t\t     /* No match, append arg as-is. */\n+\t\t     append_arg (&argc_expanded, wargv[k], &gnat_argv, &last);\n+\t\t   }\n+\t\t else\n+\t\t   {\n+\t\t     /* Append first match and all remaining ones.  */\n+\n+\t\t     do {\n+\t\t       append_arg (&argc_expanded,\n+\t\t\t\t   FileData.cFileName, &gnat_argv, &last);\n+\t\t     } while (FindNextFile (hDir, &FileData));\n+\n+\t\t     FindClose (hDir);\n+\t\t   }\n+\t       }\n+\t     else\n+\t       {\n+\t\t /*  No wildcard. Store parameter as-is. */\n+\t\t append_arg (&argc_expanded, wargv[k], &gnat_argv, &last);\n+\t       }\n \t   }\n \n \t LocalFree (wargv);\n-\t gnat_argc = wargc;\n+\t gnat_argc = argc_expanded;\n+\t adjust_arg (argc_expanded, &gnat_argv);\n        }\n-    }\n+   }\n+#endif\n \n    /* Note that we do not activate this for the compiler itself to avoid a\n       bootstrap path problem.  Older version of gnatbind will generate a call"}, {"sha": "2c52920da697dd05b7c728c2bd5236737bf1bd1d", "filename": "gcc/ada/mingw32.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/46e26fe337a12800faa9ef010eebb49266a014f7/gcc%2Fada%2Fmingw32.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/46e26fe337a12800faa9ef010eebb49266a014f7/gcc%2Fada%2Fmingw32.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmingw32.h?ref=46e26fe337a12800faa9ef010eebb49266a014f7", "patch": "@@ -93,6 +93,8 @@ extern UINT CurrentCodePage;\n #define WS2S(str,wstr,len) \\\n    WideCharToMultiByte (CP_ACP,0,wstr,-1,str,len,NULL,NULL)\n #else\n+#define S2WSC(wstr,str,len) strncpy(wstr,str,len)\n+#define WS2SC(str,wstr,len) strncpy(str,wstr,len)\n #define S2WSU(wstr,str,len) strncpy(wstr,str,len)\n #define WS2SU(str,wstr,len) strncpy(str,wstr,len)\n #define S2WS(wstr,str,len) strncpy(wstr,str,len)"}]}