{"sha": "bb85ec6e3a530dd1264a11a76fb95a87850651fc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmI4NWVjNmUzYTUzMGRkMTI2NGExMWE3NmZiOTVhODc4NTA2NTFmYw==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2014-06-23T18:17:03Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2014-06-23T18:17:03Z"}, "message": "re PR libstdc++/61532 (make_signed and make_unsigned wchar_t have started failing in the libstdc++ testsuite.)\n\n\tPR libstdc++/61532\n\t* testsuite/20_util/make_signed/requirements/typedefs-1.cc: Do not\n\tapply the signed specifier to wchar_t.\n\t* testsuite/20_util/make_signed/requirements/typedefs-2.cc: Likewise.\n\t* testsuite/20_util/make_unsigned/requirements/typedefs-1.cc: Check\n\tcv-qualifier and size.\n\t* testsuite/20_util/make_unsigned/requirements/typedefs-2.cc:\n\tLikewise.\n\nFrom-SVN: r211909", "tree": {"sha": "49f9f10e73ce2d92d7620a739e4ec46b1e76bd95", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/49f9f10e73ce2d92d7620a739e4ec46b1e76bd95"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bb85ec6e3a530dd1264a11a76fb95a87850651fc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bb85ec6e3a530dd1264a11a76fb95a87850651fc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bb85ec6e3a530dd1264a11a76fb95a87850651fc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bb85ec6e3a530dd1264a11a76fb95a87850651fc/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b093626575a145de8d1fb6a4722156a17c313b52", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b093626575a145de8d1fb6a4722156a17c313b52", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b093626575a145de8d1fb6a4722156a17c313b52"}], "stats": {"total": 30, "additions": 26, "deletions": 4}, "files": [{"sha": "9d344d1bcd51c0dec109a366cd8866ec8846d3df", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb85ec6e3a530dd1264a11a76fb95a87850651fc/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb85ec6e3a530dd1264a11a76fb95a87850651fc/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=bb85ec6e3a530dd1264a11a76fb95a87850651fc", "patch": "@@ -5,6 +5,15 @@\n \t* testsuite/20_util/duration/literals/values.cc: Test non-positive\n \tvalues and digit separators.\n \n+\tPR libstdc++/61532\n+\t* testsuite/20_util/make_signed/requirements/typedefs-1.cc: Do not\n+\tapply the signed specifier to wchar_t.\n+\t* testsuite/20_util/make_signed/requirements/typedefs-2.cc: Likewise.\n+\t* testsuite/20_util/make_unsigned/requirements/typedefs-1.cc: Check\n+\tcv-qualifier and size.\n+\t* testsuite/20_util/make_unsigned/requirements/typedefs-2.cc:\n+\tLikewise.\n+\n 2014-06-18  Paolo Carlini  <paolo.carlini@oracle.com>\n \t    Ramana Radhakrishnan  <ramana.radhakrishnan@arm.com>\n "}, {"sha": "5b094d9a4f92c95c527f5c6c219feed551aea7a7", "filename": "libstdc++-v3/testsuite/20_util/make_signed/requirements/typedefs-1.cc", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb85ec6e3a530dd1264a11a76fb95a87850651fc/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fmake_signed%2Frequirements%2Ftypedefs-1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb85ec6e3a530dd1264a11a76fb95a87850651fc/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fmake_signed%2Frequirements%2Ftypedefs-1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fmake_signed%2Frequirements%2Ftypedefs-1.cc?ref=bb85ec6e3a530dd1264a11a76fb95a87850651fc", "patch": "@@ -29,6 +29,7 @@ void test01()\n   using std::make_signed;\n   using std::is_same;\n   using std::is_signed;\n+  using std::is_volatile;\n \n   // Positive tests.\n   typedef make_signed<const int>::type  \ttest2_type;\n@@ -53,7 +54,9 @@ void test01()\n \n #ifdef _GLIBCXX_USE_WCHAR_T\n   typedef make_signed<volatile wchar_t>::type  \ttest23_type;\n-  static_assert( is_same<test23_type, volatile signed wchar_t>::value,\n+  static_assert( is_signed<test23_type>::value\n+                 && is_volatile<test23_type>::value\n+                 && sizeof(test23_type) == sizeof(volatile wchar_t),\n                  \"make_signed<volatile wchar_t>\" );\n #endif\n "}, {"sha": "3f47dba5bf051ccedd9f106e2e15c932e0906ceb", "filename": "libstdc++-v3/testsuite/20_util/make_signed/requirements/typedefs-2.cc", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb85ec6e3a530dd1264a11a76fb95a87850651fc/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fmake_signed%2Frequirements%2Ftypedefs-2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb85ec6e3a530dd1264a11a76fb95a87850651fc/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fmake_signed%2Frequirements%2Ftypedefs-2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fmake_signed%2Frequirements%2Ftypedefs-2.cc?ref=bb85ec6e3a530dd1264a11a76fb95a87850651fc", "patch": "@@ -30,6 +30,8 @@ void test01()\n {\n   using std::make_signed;\n   using std::is_same;\n+  using std::is_signed;\n+  using std::is_volatile;\n \n   // Positive tests.\n   typedef make_signed<const int>::type  \ttest2_type;\n@@ -50,7 +52,9 @@ void test01()\n \n #ifdef _GLIBCXX_USE_WCHAR_T\n   typedef make_signed<volatile wchar_t>::type  \ttest23_type;\n-  static_assert(is_same<test23_type, volatile signed wchar_t>::value, \"\");\n+  static_assert(is_signed<test23_type>::value\n+                 && is_volatile<test23_type>::value\n+                 && sizeof(test23_type) == sizeof(volatile wchar_t), \"\");\n #endif\n \n   typedef make_signed<test_enum>::type  \ttest24_type;"}, {"sha": "de655048fdfb391875f388e9294fcfcfb9e34f44", "filename": "libstdc++-v3/testsuite/20_util/make_unsigned/requirements/typedefs-1.cc", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb85ec6e3a530dd1264a11a76fb95a87850651fc/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fmake_unsigned%2Frequirements%2Ftypedefs-1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb85ec6e3a530dd1264a11a76fb95a87850651fc/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fmake_unsigned%2Frequirements%2Ftypedefs-1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fmake_unsigned%2Frequirements%2Ftypedefs-1.cc?ref=bb85ec6e3a530dd1264a11a76fb95a87850651fc", "patch": "@@ -29,6 +29,7 @@ void test01()\n   using std::make_unsigned;\n   using std::is_same;\n   using std::is_unsigned;\n+  using std::is_volatile;\n \n   // Positive tests.\n   typedef make_unsigned<const unsigned int>::type  \ttest2_type;\n@@ -49,7 +50,9 @@ void test01()\n \n #ifdef _GLIBCXX_USE_WCHAR_T\n   typedef make_unsigned<volatile wchar_t>::type  \ttest23_type;\n-  static_assert(is_unsigned<test23_type>::value, \"\");\n+  static_assert(is_unsigned<test23_type>::value\n+                && is_volatile<test23_type>::value\n+                && sizeof(test23_type) == sizeof(volatile wchar_t), \"\");\n #endif\n \n   // Chapter 48, chapter 20. Smallest rank such that new unsigned type"}, {"sha": "7801dca94c5cd20b8b57c8e1aac83c92422080dc", "filename": "libstdc++-v3/testsuite/20_util/make_unsigned/requirements/typedefs-2.cc", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb85ec6e3a530dd1264a11a76fb95a87850651fc/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fmake_unsigned%2Frequirements%2Ftypedefs-2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb85ec6e3a530dd1264a11a76fb95a87850651fc/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fmake_unsigned%2Frequirements%2Ftypedefs-2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fmake_unsigned%2Frequirements%2Ftypedefs-2.cc?ref=bb85ec6e3a530dd1264a11a76fb95a87850651fc", "patch": "@@ -31,6 +31,7 @@ void test01()\n   using std::make_unsigned;\n   using std::is_same;\n   using std::is_unsigned;\n+  using std::is_volatile;\n \n   // Positive tests.\n   typedef make_unsigned<const unsigned int>::type  \ttest2_type;\n@@ -51,7 +52,9 @@ void test01()\n \n #ifdef _GLIBCXX_USE_WCHAR_T\n   typedef make_unsigned<volatile wchar_t>::type  \ttest23_type;\n-  static_assert(is_unsigned<test23_type>::value, \"\");\n+  static_assert(is_unsigned<test23_type>::value\n+                && is_volatile<test23_type>::value\n+                && sizeof(test23_type) == sizeof(volatile wchar_t), \"\");\n #endif\n \n   typedef make_unsigned<test_enum>::type  \t  test24_type;"}]}