{"sha": "c34122d0fe0b65ef6387088d73f1f0f901dcd987", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzM0MTIyZDBmZTBiNjVlZjYzODcwODhkNzNmMWYwZjkwMWRjZDk4Nw==", "commit": {"author": {"name": "Charles Hannum", "email": "mycroft@gnu.org", "date": "1992-06-06T21:17:16Z"}, "committer": {"name": "Charles Hannum", "email": "mycroft@gnu.org", "date": "1992-06-06T21:17:16Z"}, "message": "entered into RCS\n\nFrom-SVN: r1174", "tree": {"sha": "e0467d1c416f8fdf5e2ead26edd733241e7740de", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e0467d1c416f8fdf5e2ead26edd733241e7740de"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c34122d0fe0b65ef6387088d73f1f0f901dcd987", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c34122d0fe0b65ef6387088d73f1f0f901dcd987", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c34122d0fe0b65ef6387088d73f1f0f901dcd987", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c34122d0fe0b65ef6387088d73f1f0f901dcd987/comments", "author": null, "committer": null, "parents": [{"sha": "c21cf0a7bda036ea02460cdc43df26d0664d3803", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c21cf0a7bda036ea02460cdc43df26d0664d3803", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c21cf0a7bda036ea02460cdc43df26d0664d3803"}], "stats": {"total": 48, "additions": 40, "deletions": 8}, "files": [{"sha": "94dd4ca419cba41b9f35bdd4a703c3768a4b7eb3", "filename": "gcc/config/pyr/pyr.md", "status": "modified", "additions": 40, "deletions": 8, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c34122d0fe0b65ef6387088d73f1f0f901dcd987/gcc%2Fconfig%2Fpyr%2Fpyr.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c34122d0fe0b65ef6387088d73f1f0f901dcd987/gcc%2Fconfig%2Fpyr%2Fpyr.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpyr%2Fpyr.md?ref=c34122d0fe0b65ef6387088d73f1f0f901dcd987", "patch": "@@ -637,42 +637,66 @@\n \t(ashift:SI (match_operand:SI 1 \"register_operand\" \"0\")\n \t\t   (match_operand:SI 2 \"general_operand\" \"rnm\")))]\n   \"\"\n-  \"* return output_shift (\\\"lshlw %2,%0\\\", operands[2], 32); \")\n+  \"*\n+{\n+  extern char *output_shift ();\n+  return output_shift (\\\"lshlw %2,%0\\\", operands[2], 32);\n+}\")\n \n (define_insn \"ashrsi3\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n \t(ashiftrt:SI (match_operand:SI 1 \"register_operand\" \"0\")\n \t\t     (match_operand:SI 2 \"general_operand\" \"rnm\")))]\n   \"\"\n-  \"* return output_shift (\\\"ashrw %2,%0\\\", operands[2], 32); \")\n+  \"*\n+{\n+  extern char *output_shift ();\n+  return output_shift (\\\"ashrw %2,%0\\\", operands[2], 32);\n+}\")\n \n (define_insn \"ashrdi3\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=r\")\n \t(ashiftrt:DI (match_operand:DI 1 \"register_operand\" \"0\")\n \t\t     (match_operand:SI 2 \"general_operand\" \"rnm\")))]\n   \"\"\n-  \"* return output_shift (\\\"ashrl %2,%0\\\", operands[2], 64); \")\n+  \"*\n+{\n+  extern char *output_shift ();\n+  return output_shift (\\\"ashrl %2,%0\\\", operands[2], 64);\n+}\")\n \n (define_insn \"lshrsi3\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n \t(lshiftrt:SI (match_operand:SI 1 \"register_operand\" \"0\")\n \t\t     (match_operand:SI 2 \"general_operand\" \"rnm\")))]\n   \"\"\n-  \"* return output_shift (\\\"lshrw %2,%0\\\", operands[2], 32); \")\n+  \"*\n+{\n+  extern char *output_shift ();\n+  return output_shift (\\\"lshrw %2,%0\\\", operands[2], 32);\n+}\")\n \n (define_insn \"rotlsi3\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n \t(rotate:SI (match_operand:SI 1 \"register_operand\" \"0\")\n \t\t   (match_operand:SI 2 \"general_operand\" \"rnm\")))]\n   \"\"\n-  \"* return output_shift (\\\"rotlw %2,%0\\\", operands[2], 32); \")\n+  \"*\n+{\n+  extern char *output_shift ();\n+  return output_shift (\\\"rotlw %2,%0\\\", operands[2], 32);\n+}\")\n \n (define_insn \"rotrsi3\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n \t(rotatert:SI (match_operand:SI 1 \"register_operand\" \"0\")\n \t\t     (match_operand:SI 2 \"general_operand\" \"rnm\")))]\n   \"\"\n-  \"* return output_shift (\\\"rotrw %2,%0\\\", operands[2], 32); \")\n+  \"*\n+{\n+  extern char *output_shift ();\n+  return output_shift (\\\"rotrw %2,%0\\\", operands[2], 32);\n+}\")\n \f\n ;______________________________________________________________________\n ;\n@@ -706,7 +730,11 @@\n   [(set (match_operand:DI 0 \"general_operand\" \"=r\")\n \t(match_operand:DI 1 \"general_operand\" \"gF\"))]\n   \"\"\n-  \"* return output_move_double (operands); \")\n+  \"*\n+{\n+  extern char *output_move_double ();\n+  return output_move_double (operands);\n+}\")\n \n ;; If the destination is a memory address, indexed source operands are\n ;; disallowed.\n@@ -796,7 +824,11 @@\n   [(set (match_operand:DF 0 \"general_operand\" \"=r\")\n \t(match_operand:DF 1 \"general_operand\" \"gF\"))]\n   \"\"\n-  \"* return output_move_double (operands); \")\n+  \"*\n+{\n+  extern char *output_move_double ();\n+  return output_move_double (operands);\n+}\")\n \n ;; If the destination is a memory address, indexed source operands are\n ;; disallowed."}]}