{"sha": "03085d1cf9cc91b1283d7a13343760a526b69282", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDMwODVkMWNmOWNjOTFiMTI4M2Q3YTEzMzQzNzYwYTUyNmI2OTI4Mg==", "commit": {"author": {"name": "David Malcolm", "email": "dmalcolm@redhat.com", "date": "2013-08-07T01:50:43Z"}, "committer": {"name": "David Malcolm", "email": "dmalcolm@gcc.gnu.org", "date": "2013-08-07T01:50:43Z"}, "message": "rl78.c (rl78_devirt_pass): Convert from a struct to...\n\n2013-08-07  David Malcolm  <dmalcolm@redhat.com>\n\n\t* config/rl78/rl78.c (rl78_devirt_pass): Convert from a struct to...\n\t(pass_rl78_devirt): ...new subclass of rtl_opt_pass along with...\n\t(pass_data_rl78_devirt): ...new pass_data instance and...\n\t(make_pass_rl78_devirt): ...new function.\n\t(rl78_asm_file_start): Port pass registration to new C++ API.\n\nFrom-SVN: r201553", "tree": {"sha": "f7d99b648be1283d059ccf5394743708e30f8732", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f7d99b648be1283d059ccf5394743708e30f8732"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/03085d1cf9cc91b1283d7a13343760a526b69282", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/03085d1cf9cc91b1283d7a13343760a526b69282", "html_url": "https://github.com/Rust-GCC/gccrs/commit/03085d1cf9cc91b1283d7a13343760a526b69282", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/03085d1cf9cc91b1283d7a13343760a526b69282/comments", "author": {"login": "davidmalcolm", "id": 1553248, "node_id": "MDQ6VXNlcjE1NTMyNDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1553248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidmalcolm", "html_url": "https://github.com/davidmalcolm", "followers_url": "https://api.github.com/users/davidmalcolm/followers", "following_url": "https://api.github.com/users/davidmalcolm/following{/other_user}", "gists_url": "https://api.github.com/users/davidmalcolm/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidmalcolm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidmalcolm/subscriptions", "organizations_url": "https://api.github.com/users/davidmalcolm/orgs", "repos_url": "https://api.github.com/users/davidmalcolm/repos", "events_url": "https://api.github.com/users/davidmalcolm/events{/privacy}", "received_events_url": "https://api.github.com/users/davidmalcolm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d0cd81604117dceed7d1a7b91f0bae7d4f52fba6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d0cd81604117dceed7d1a7b91f0bae7d4f52fba6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d0cd81604117dceed7d1a7b91f0bae7d4f52fba6"}], "stats": {"total": 71, "additions": 52, "deletions": 19}, "files": [{"sha": "c62cb892163b009a1fd2c2569ecf12dac51d1332", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/03085d1cf9cc91b1283d7a13343760a526b69282/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/03085d1cf9cc91b1283d7a13343760a526b69282/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=03085d1cf9cc91b1283d7a13343760a526b69282", "patch": "@@ -1,3 +1,11 @@\n+2013-08-07  David Malcolm  <dmalcolm@redhat.com>\n+\n+\t* config/rl78/rl78.c (rl78_devirt_pass): Convert from a struct to...\n+\t(pass_rl78_devirt): ...new subclass of rtl_opt_pass along with...\n+\t(pass_data_rl78_devirt): ...new pass_data instance and...\n+\t(make_pass_rl78_devirt): ...new function.\n+\t(rl78_asm_file_start): Port pass registration to new C++ API.\n+\n 2013-08-07  David Malcolm  <dmalcolm@redhat.com>\n \n \t* coretypes.h (rtl_opt_pass): Add."}, {"sha": "d7cacc16352dce3420a224af690eac13372777d4", "filename": "gcc/config/rl78/rl78.c", "status": "modified", "additions": 44, "deletions": 19, "changes": 63, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/03085d1cf9cc91b1283d7a13343760a526b69282/gcc%2Fconfig%2Frl78%2Frl78.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/03085d1cf9cc91b1283d7a13343760a526b69282/gcc%2Fconfig%2Frl78%2Frl78.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frl78%2Frl78.c?ref=03085d1cf9cc91b1283d7a13343760a526b69282", "patch": "@@ -49,6 +49,7 @@\n #include \"rl78-protos.h\"\n #include \"dumpfile.h\"\n #include \"tree-pass.h\"\n+#include \"context.h\"\n \f\n static inline bool is_interrupt_func (const_tree decl);\n static inline bool is_brk_interrupt_func (const_tree decl);\n@@ -129,30 +130,45 @@ devirt_pass (void)\n /* This pass converts virtual instructions using virtual registers, to\n    real instructions using real registers.  Rather than run it as\n    reorg, we reschedule it before vartrack to help with debugging.  */\n-static struct opt_pass rl78_devirt_pass =\n-{\n-  RTL_PASS,\n-  \"devirt\",\n-  OPTGROUP_NONE,                        /* optinfo_flags */\n-  devirt_gate,\n-  devirt_pass,\n-  NULL,\n-  NULL,\n-  212,\n-  TV_MACH_DEP,\n-  0, 0, 0,\n-  0,\n-  0\n+namespace {\n+\n+const pass_data pass_data_rl78_devirt =\n+{\n+  RTL_PASS, /* type */\n+  \"devirt\", /* name */\n+  OPTGROUP_NONE, /* optinfo_flags */\n+  true, /* has_gate */\n+  true, /* has_execute */\n+  TV_MACH_DEP, /* tv_id */\n+  0, /* properties_required */\n+  0, /* properties_provided */\n+  0, /* properties_destroyed */\n+  0, /* todo_flags_start */\n+  0, /* todo_flags_finish */\n };\n \n-static struct register_pass_info rl78_devirt_info =\n+class pass_rl78_devirt : public rtl_opt_pass\n {\n-  & rl78_devirt_pass,\n-  \"vartrack\",\n-  1,\n-  PASS_POS_INSERT_BEFORE\n+public:\n+  pass_rl78_devirt(gcc::context *ctxt)\n+    : rtl_opt_pass(pass_data_rl78_devirt, ctxt)\n+  {\n+  }\n+\n+  /* opt_pass methods: */\n+  bool gate () { return devirt_gate (); }\n+  unsigned int execute () { return devirt_pass (); }\n };\n \n+} // anon namespace\n+\n+rtl_opt_pass *\n+make_pass_rl78_devirt (gcc::context *ctxt)\n+{\n+  return new pass_rl78_devirt (ctxt);\n+}\n+\n+\n #undef  TARGET_ASM_FILE_START\n #define TARGET_ASM_FILE_START rl78_asm_file_start\n \n@@ -167,6 +183,15 @@ rl78_asm_file_start (void)\n       fprintf (asm_out_file, \"r%d\\t=\\t0x%x\\n\", 16 + i, 0xffee8 + i);\n     }\n \n+  opt_pass *rl78_devirt_pass = make_pass_rl78_devirt (g);\n+  struct register_pass_info rl78_devirt_info =\n+    {\n+      rl78_devirt_pass,\n+      \"vartrack\",\n+      1,\n+      PASS_POS_INSERT_BEFORE\n+    };\n+\n   register_pass (& rl78_devirt_info);\n }\n "}]}