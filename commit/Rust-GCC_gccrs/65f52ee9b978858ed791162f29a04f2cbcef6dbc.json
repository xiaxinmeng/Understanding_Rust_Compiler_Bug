{"sha": "65f52ee9b978858ed791162f29a04f2cbcef6dbc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjVmNTJlZTliOTc4ODU4ZWQ3OTExNjJmMjlhMDRmMmNiY2VmNmRiYw==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2016-04-19T13:22:19Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2016-04-19T13:22:19Z"}, "message": "re PR tree-optimization/70724 (Miscompiles python3 with FDO)\n\n2016-04-19  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/70724\n\t* tree-ssa-sccvn.c (scc_vn_restore_ssa_info): Split SSA info\n\trestoring out from ...\n\t(free_scc_vn): ... here.\n\t* tree-ssa-sccvn.h (scc_vn_restore_ssa_info): Declare.\n\t* tres-ssa-pre.c (pass_pre::execute): Restore SSA info before\n\ttail merging.\n\t(pass_fre::execute): Restore SSA info.\n\n\t* gcc.dg/torture/pr70724.c: New testcase.\n\nFrom-SVN: r235203", "tree": {"sha": "c229c8622615d24353d0e083b34905437310e60f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c229c8622615d24353d0e083b34905437310e60f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/65f52ee9b978858ed791162f29a04f2cbcef6dbc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/65f52ee9b978858ed791162f29a04f2cbcef6dbc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/65f52ee9b978858ed791162f29a04f2cbcef6dbc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/65f52ee9b978858ed791162f29a04f2cbcef6dbc/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "27b95a65410ccb700752c8178fd19f1485a4b5bf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/27b95a65410ccb700752c8178fd19f1485a4b5bf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/27b95a65410ccb700752c8178fd19f1485a4b5bf"}], "stats": {"total": 99, "additions": 87, "deletions": 12}, "files": [{"sha": "6c338f7d5bc370bc6f114a63737c7e4f07d939da", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65f52ee9b978858ed791162f29a04f2cbcef6dbc/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65f52ee9b978858ed791162f29a04f2cbcef6dbc/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=65f52ee9b978858ed791162f29a04f2cbcef6dbc", "patch": "@@ -1,3 +1,14 @@\n+2016-04-19  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/70724\n+\t* tree-ssa-sccvn.c (scc_vn_restore_ssa_info): Split SSA info\n+\trestoring out from ...\n+\t(free_scc_vn): ... here.\n+\t* tree-ssa-sccvn.h (scc_vn_restore_ssa_info): Declare.\n+\t* tres-ssa-pre.c (pass_pre::execute): Restore SSA info before\n+\ttail merging.\n+\t(pass_fre::execute): Restore SSA info.\n+\n 2016-04-19  Richard Biener  <rguenther@suse.de>\n \n \t* gimple-walk.h (struct walk_stmt_info): Add stmt member."}, {"sha": "da83d7e74df571915d440aba506e7b699aae048e", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65f52ee9b978858ed791162f29a04f2cbcef6dbc/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65f52ee9b978858ed791162f29a04f2cbcef6dbc/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=65f52ee9b978858ed791162f29a04f2cbcef6dbc", "patch": "@@ -1,3 +1,8 @@\n+2016-04-19  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/70724\n+\t* gcc.dg/torture/pr70724.c: New testcase.\n+\n 2016-04-18  Vladimir Makarov  <vmakarov@redhat.com>\n \n \tPR middle-end/70689"}, {"sha": "d4cffb38ab1356ea8ee042d8564b67164174825d", "filename": "gcc/testsuite/gcc.dg/torture/pr70724.c", "status": "added", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65f52ee9b978858ed791162f29a04f2cbcef6dbc/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr70724.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65f52ee9b978858ed791162f29a04f2cbcef6dbc/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr70724.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr70724.c?ref=65f52ee9b978858ed791162f29a04f2cbcef6dbc", "patch": "@@ -0,0 +1,39 @@\n+/* { dg-do run } */\n+/* { dg-additional-options \"-ftracer\" } */\n+\n+extern void abort (void);\n+\n+typedef long int _PyTime_t;\n+typedef enum { _PyTime_ROUND_FLOOR = 0, _PyTime_ROUND_CEILING = 1 }\n+  _PyTime_round_t;\n+\n+static _PyTime_t\n+_PyTime_Divide(const _PyTime_t t, const _PyTime_t k,\n+\t       const _PyTime_round_t round)\n+{\n+  if (round == _PyTime_ROUND_CEILING) {\n+      if (t >= 0)\n+\treturn (t + k - 1) / k;\n+      else\n+\treturn t / k;\n+  }\n+  else {\n+      if (t >= 0)\n+\treturn t / k;\n+      else\n+\treturn (t - (k - 1)) / k;\n+  }\n+}\n+\n+_PyTime_t __attribute__((noinline,noclone))\n+_PyTime_AsMicroseconds(_PyTime_t t, _PyTime_round_t round)\n+{\n+  return _PyTime_Divide(t, 1000, round);\n+}\n+\n+int main()\n+{\n+  if (_PyTime_AsMicroseconds (10000, _PyTime_ROUND_FLOOR) != 10)\n+    abort ();\n+  return 0;\n+}"}, {"sha": "2d1eb70c03b600ddaa69c087b99fccc42a7b98b3", "filename": "gcc/tree-ssa-pre.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65f52ee9b978858ed791162f29a04f2cbcef6dbc/gcc%2Ftree-ssa-pre.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65f52ee9b978858ed791162f29a04f2cbcef6dbc/gcc%2Ftree-ssa-pre.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-pre.c?ref=65f52ee9b978858ed791162f29a04f2cbcef6dbc", "patch": "@@ -4804,6 +4804,9 @@ pass_pre::execute (function *fun)\n   todo |= fini_eliminate ();\n   loop_optimizer_finalize ();\n \n+  /* Restore SSA info before tail-merging as that resets it as well.  */\n+  scc_vn_restore_ssa_info ();\n+\n   /* TODO: tail_merge_optimize may merge all predecessors of a block, in which\n      case we can merge the block with the remaining predecessor of the block.\n      It should either:\n@@ -4877,6 +4880,7 @@ pass_fre::execute (function *fun)\n \n   todo |= fini_eliminate ();\n \n+  scc_vn_restore_ssa_info ();\n   free_scc_vn ();\n \n   statistics_counter_event (fun, \"Insertions\", pre_stats.insertions);"}, {"sha": "f6735dd30898c17a8c8fea8f5bd38f2a2b5e98fc", "filename": "gcc/tree-ssa-sccvn.c", "status": "modified", "additions": 27, "deletions": 12, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65f52ee9b978858ed791162f29a04f2cbcef6dbc/gcc%2Ftree-ssa-sccvn.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65f52ee9b978858ed791162f29a04f2cbcef6dbc/gcc%2Ftree-ssa-sccvn.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-sccvn.c?ref=65f52ee9b978858ed791162f29a04f2cbcef6dbc", "patch": "@@ -4306,26 +4306,19 @@ init_scc_vn (void)\n     }\n }\n \n+/* Restore SSA info that has been reset on value leaders.  */\n+\n void\n-free_scc_vn (void)\n+scc_vn_restore_ssa_info (void)\n {\n-  size_t i;\n-\n-  delete constant_to_value_id;\n-  constant_to_value_id = NULL;\n-  BITMAP_FREE (constant_value_ids);\n-  shared_lookup_phiargs.release ();\n-  shared_lookup_references.release ();\n-  XDELETEVEC (rpo_numbers);\n-\n-  for (i = 0; i < num_ssa_names; i++)\n+  for (unsigned i = 0; i < num_ssa_names; i++)\n     {\n       tree name = ssa_name (i);\n       if (name\n \t  && has_VN_INFO (name))\n \t{\n \t  if (VN_INFO (name)->needs_insertion)\n-\t    release_ssa_name (name);\n+\t    ;\n \t  else if (POINTER_TYPE_P (TREE_TYPE (name))\n \t\t   && VN_INFO (name)->info.ptr_info)\n \t    SSA_NAME_PTR_INFO (name) = VN_INFO (name)->info.ptr_info;\n@@ -4338,6 +4331,28 @@ free_scc_vn (void)\n \t    }\n \t}\n     }\n+}\n+\n+void\n+free_scc_vn (void)\n+{\n+  size_t i;\n+\n+  delete constant_to_value_id;\n+  constant_to_value_id = NULL;\n+  BITMAP_FREE (constant_value_ids);\n+  shared_lookup_phiargs.release ();\n+  shared_lookup_references.release ();\n+  XDELETEVEC (rpo_numbers);\n+\n+  for (i = 0; i < num_ssa_names; i++)\n+    {\n+      tree name = ssa_name (i);\n+      if (name\n+\t  && has_VN_INFO (name)\n+\t  && VN_INFO (name)->needs_insertion)\n+\trelease_ssa_name (name);\n+    }\n   obstack_free (&vn_ssa_aux_obstack, NULL);\n   vn_ssa_aux_table.release ();\n "}, {"sha": "1f6af4043faf02ff21f09fa6f2b9924d4c5b44eb", "filename": "gcc/tree-ssa-sccvn.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65f52ee9b978858ed791162f29a04f2cbcef6dbc/gcc%2Ftree-ssa-sccvn.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65f52ee9b978858ed791162f29a04f2cbcef6dbc/gcc%2Ftree-ssa-sccvn.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-sccvn.h?ref=65f52ee9b978858ed791162f29a04f2cbcef6dbc", "patch": "@@ -204,6 +204,7 @@ extern vn_ssa_aux_t VN_INFO_GET (tree);\n tree vn_get_expr_for (tree);\n bool run_scc_vn (vn_lookup_kind);\n void free_scc_vn (void);\n+void scc_vn_restore_ssa_info (void);\n tree vn_nary_op_lookup (tree, vn_nary_op_t *);\n tree vn_nary_op_lookup_stmt (gimple *, vn_nary_op_t *);\n tree vn_nary_op_lookup_pieces (unsigned int, enum tree_code,"}]}