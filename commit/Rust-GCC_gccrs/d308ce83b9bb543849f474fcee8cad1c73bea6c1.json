{"sha": "d308ce83b9bb543849f474fcee8cad1c73bea6c1", "node_id": "C_kwDOANBUbNoAKGQzMDhjZTgzYjliYjU0Mzg0OWY0NzRmY2VlOGNhZDFjNzNiZWE2YzE", "commit": {"author": {"name": "Philip Herron", "email": "philip.herron@embecosm.com", "date": "2021-11-05T10:47:48Z"}, "committer": {"name": "Philip Herron", "email": "philip.herron@embecosm.com", "date": "2021-11-05T11:12:51Z"}, "message": "Add generic-arguments to predicate as_string", "tree": {"sha": "05c127cf2d370b225f26576f4dc0f06109d47888", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/05c127cf2d370b225f26576f4dc0f06109d47888"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d308ce83b9bb543849f474fcee8cad1c73bea6c1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d308ce83b9bb543849f474fcee8cad1c73bea6c1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d308ce83b9bb543849f474fcee8cad1c73bea6c1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d308ce83b9bb543849f474fcee8cad1c73bea6c1/comments", "author": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "committer": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "52ef760176a26107c29be30d08d3c9bcf636ae2b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/52ef760176a26107c29be30d08d3c9bcf636ae2b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/52ef760176a26107c29be30d08d3c9bcf636ae2b"}], "stats": {"total": 5, "additions": 4, "deletions": 1}, "files": [{"sha": "c2c5e2e91001f377eb3e0356369e92a8cacfb056", "filename": "gcc/rust/typecheck/rust-tyty-bounds.cc", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d308ce83b9bb543849f474fcee8cad1c73bea6c1/gcc%2Frust%2Ftypecheck%2Frust-tyty-bounds.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d308ce83b9bb543849f474fcee8cad1c73bea6c1/gcc%2Frust%2Ftypecheck%2Frust-tyty-bounds.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Ftypecheck%2Frust-tyty-bounds.cc?ref=d308ce83b9bb543849f474fcee8cad1c73bea6c1", "patch": "@@ -70,7 +70,10 @@ namespace TyTy {\n std::string\n TypeBoundPredicate::as_string () const\n {\n-  return get ()->as_string ();\n+  return get ()->as_string ()\n+\t + (has_generic_args ()\n+\t      ? std::string (\"<\") + args->as_string () + std::string (\">\")\n+\t      : \"\");\n }\n \n const Resolver::TraitReference *"}]}