{"sha": "484e936e88e52d9e4e013bbc1b8264f556ff7cb4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDg0ZTkzNmU4OGU1MmQ5ZTRlMDEzYmJjMWI4MjY0ZjU1NmZmN2NiNA==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2018-08-14T12:09:57Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2018-08-14T12:09:57Z"}, "message": "PR libstdc++/85343 overload __throw_ios_failure to take errno\n\n[ios::failure] p2: \"When throwing ios_base::failure exceptions,\nimplementations should provide values of ec that identify the specific\nreason for the failure.\"\n\nThis adds a new overload of __throw_ios_failure that can be passed\nerrno, to store error_code(errno, system_category()) in the exception\nobject.\n\n\tPR libstdc++/85343\n\t* acinclude.m4 (libtool_VERSION): Bump version.\n\t* config/abi/pre/gnu.ver (GLIBCXX_3.4.26): Add new symbol version.\n\tExport new symbol.\n\t* configure: Regenerate.\n\t* doc/xml/manual/abi.xml: Document new versions.\n\t* include/bits/fstream.tcc (basic_filebuf<C, T>::underflow)\n\t(basic_filebuf<C, T>::xsgetn): Pass errno to __throw_ios_failure.\n\t* include/bits/functexcept.h (__throw_ios_failure(const char*, int)):\n\tDeclare new overload.\n\t* src/c++11/cxx11-ios_failure.cc (__ios_failure): Add new constructor\n\tand static member function.\n\t(__throw_ios_failure(const char*, int)): Define.\n\t* src/c++98/ios_failure.cc [!_GLIBCXX_USE_DUAL_ABI]\n\t(__throw_ios_failure(const char*, int)): Define.\n\t* testsuite/util/testsuite_abi.cc: Update known and latest versions.\n\nFrom-SVN: r263535", "tree": {"sha": "1227bb8ea48c20af0f5bac310dfeecfce9a1e3ac", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1227bb8ea48c20af0f5bac310dfeecfce9a1e3ac"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/484e936e88e52d9e4e013bbc1b8264f556ff7cb4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/484e936e88e52d9e4e013bbc1b8264f556ff7cb4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/484e936e88e52d9e4e013bbc1b8264f556ff7cb4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/484e936e88e52d9e4e013bbc1b8264f556ff7cb4/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3ffa55de6061011361d13d0ecb032c694556ebf7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3ffa55de6061011361d13d0ecb032c694556ebf7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3ffa55de6061011361d13d0ecb032c694556ebf7"}], "stats": {"total": 48, "additions": 45, "deletions": 3}, "files": [{"sha": "55570c77bf2bf4bcf7f38c3889bba351137721e0", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/484e936e88e52d9e4e013bbc1b8264f556ff7cb4/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/484e936e88e52d9e4e013bbc1b8264f556ff7cb4/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=484e936e88e52d9e4e013bbc1b8264f556ff7cb4", "patch": "@@ -1,3 +1,18 @@\n+2018-08-14  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\tPR libstdc++/85343\n+\t* config/abi/pre/gnu.ver: Export new symbol.\n+\t* doc/xml/manual/abi.xml: Document new versions.\n+\t* include/bits/fstream.tcc (basic_filebuf<C, T>::underflow)\n+\t(basic_filebuf<C, T>::xsgetn): Pass errno to __throw_ios_failure.\n+\t* include/bits/functexcept.h (__throw_ios_failure(const char*, int)):\n+\tDeclare new overload.\n+\t* src/c++11/cxx11-ios_failure.cc (__ios_failure): Add new constructor\n+\tand static member function.\n+\t(__throw_ios_failure(const char*, int)): Define.\n+\t* src/c++98/ios_failure.cc [!_GLIBCXX_USE_DUAL_ABI]\n+\t(__throw_ios_failure(const char*, int)): Define.\n+\n 2018-08-14  Jeremy Sawicki  <jeremy-gcc@sawicki.us>\n \n \t* include/ext/rope (_Rope_iterator_base(const _Rope_iterator_base&))"}, {"sha": "03b23200a1a181b220db69b2215245648acce1fb", "filename": "libstdc++-v3/config/abi/pre/gnu.ver", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/484e936e88e52d9e4e013bbc1b8264f556ff7cb4/libstdc%2B%2B-v3%2Fconfig%2Fabi%2Fpre%2Fgnu.ver", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/484e936e88e52d9e4e013bbc1b8264f556ff7cb4/libstdc%2B%2B-v3%2Fconfig%2Fabi%2Fpre%2Fgnu.ver", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fabi%2Fpre%2Fgnu.ver?ref=484e936e88e52d9e4e013bbc1b8264f556ff7cb4", "patch": "@@ -2046,6 +2046,9 @@ GLIBCXX_3.4.26 {\n     _ZNSt3pmr25monotonic_buffer_resource13_M_new_bufferE[jmy][jmy];\n     _ZNSt3pmr25monotonic_buffer_resource18_M_release_buffersEv;\n \n+    # std::__throw_ios_failure(const char*, int);\n+    _ZSt19__throw_ios_failurePKci;\n+\n } GLIBCXX_3.4.25;\n \n # Symbols in the support library (libsupc++) have their own tag."}, {"sha": "8859e965000362bc1e294b20e958a5806b450907", "filename": "libstdc++-v3/doc/xml/manual/abi.xml", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/484e936e88e52d9e4e013bbc1b8264f556ff7cb4/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fabi.xml", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/484e936e88e52d9e4e013bbc1b8264f556ff7cb4/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fabi.xml", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fabi.xml?ref=484e936e88e52d9e4e013bbc1b8264f556ff7cb4", "patch": "@@ -268,6 +268,7 @@ compatible.\n     <listitem><para>GCC 7.1.0: libstdc++.so.6.0.23</para></listitem>\n     <listitem><para>GCC 7.2.0: libstdc++.so.6.0.24</para></listitem>\n     <listitem><para>GCC 8.0.0: libstdc++.so.6.0.25</para></listitem>\n+    <listitem><para>GCC 9.0.0: libstdc++.so.6.0.26</para></listitem>\n     </itemizedlist>\n     <para>\n       Note 1: Error should be libstdc++.so.3.0.3.\n@@ -338,6 +339,7 @@ compatible.\n     <listitem><para>GCC 7.1.0: GLIBCXX_3.4.23, CXXABI_1.3.11</para></listitem>\n     <listitem><para>GCC 7.2.0: GLIBCXX_3.4.24, CXXABI_1.3.11</para></listitem>\n     <listitem><para>GCC 8.0.0: GLIBCXX_3.4.25, CXXABI_1.3.11</para></listitem>\n+    <listitem><para>GCC 9.0.0: GLIBCXX_3.4.26, CXXABI_1.3.11</para></listitem>\n     </itemizedlist>\n     </listitem>\n "}, {"sha": "ed98f13e0e0c1d1692ec999ffc17aa72dee4a495", "filename": "libstdc++-v3/include/bits/fstream.tcc", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/484e936e88e52d9e4e013bbc1b8264f556ff7cb4/libstdc%2B%2B-v3%2Finclude%2Fbits%2Ffstream.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/484e936e88e52d9e4e013bbc1b8264f556ff7cb4/libstdc%2B%2B-v3%2Finclude%2Fbits%2Ffstream.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Ffstream.tcc?ref=484e936e88e52d9e4e013bbc1b8264f556ff7cb4", "patch": "@@ -38,6 +38,7 @@\n \n #include <bits/cxxabi_forced.h>\n #include <bits/move.h>   // for swap\n+#include <cerrno>\n \n namespace std _GLIBCXX_VISIBILITY(default)\n {\n@@ -471,7 +472,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \t\t\t\t\"invalid byte sequence in file\"));\n \t  else\n \t    __throw_ios_failure(__N(\"basic_filebuf::underflow \"\n-\t\t\t\t\"error reading the file\"));\n+\t\t\t\t\"error reading the file\"), errno);\n \t}\n       return __ret;\n     }\n@@ -717,7 +718,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \t      __len = _M_file.xsgetn(reinterpret_cast<char*>(__s), __n);\n \t      if (__len == -1)\n \t\t__throw_ios_failure(__N(\"basic_filebuf::xsgetn \"\n-\t\t\t\t\t\"error reading the file\"));\n+\t\t\t\t\t\"error reading the file\"), errno);\n \t      if (__len == 0)\n \t\tbreak;\n  "}, {"sha": "9d5acdb3b558ba0eb5a31fb90cc363ff68e2850a", "filename": "libstdc++-v3/include/bits/functexcept.h", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/484e936e88e52d9e4e013bbc1b8264f556ff7cb4/libstdc%2B%2B-v3%2Finclude%2Fbits%2Ffunctexcept.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/484e936e88e52d9e4e013bbc1b8264f556ff7cb4/libstdc%2B%2B-v3%2Finclude%2Fbits%2Ffunctexcept.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Ffunctexcept.h?ref=484e936e88e52d9e4e013bbc1b8264f556ff7cb4", "patch": "@@ -94,9 +94,14 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n   void\n   __throw_ios_failure(const char*) __attribute__((__noreturn__));\n \n+  void\n+  __throw_ios_failure(const char*, int) __attribute__((__noreturn__));\n+\n+  // Helpers for exception objects in <system_error>\n   void\n   __throw_system_error(int) __attribute__((__noreturn__));\n \n+  // Helpers for exception objects in <future>\n   void\n   __throw_future_error(int) __attribute__((__noreturn__));\n "}, {"sha": "26816fae5707c22861ad2f08e69db4a57edc4ec7", "filename": "libstdc++-v3/src/c++11/cxx11-ios_failure.cc", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/484e936e88e52d9e4e013bbc1b8264f556ff7cb4/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2Fcxx11-ios_failure.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/484e936e88e52d9e4e013bbc1b8264f556ff7cb4/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2Fcxx11-ios_failure.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2Fcxx11-ios_failure.cc?ref=484e936e88e52d9e4e013bbc1b8264f556ff7cb4", "patch": "@@ -114,6 +114,9 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n     __ios_failure(const char* s) : failure(s)\n     { __construct_ios_failure(buf, runtime_error::what()); }\n \n+    __ios_failure(const char* s, int e) : failure(s, to_error_code(e))\n+    { __construct_ios_failure(buf, runtime_error::what()); }\n+\n     ~__ios_failure()\n     { __destroy_ios_failure(buf); }\n \n@@ -122,6 +125,10 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n     // There are assertions in src/c++98/ios_failure.cc to ensure the size\n     // and alignment assumptions are valid.\n     alignas(runtime_error) unsigned char buf[sizeof(runtime_error)];\n+\n+    static error_code\n+    to_error_code(int e)\n+    { return e ? error_code(e, system_category()) : io_errc::stream; }\n   };\n \n   // Custom type info for __ios_failure.\n@@ -161,5 +168,10 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n   __throw_ios_failure(const char* __s __attribute__((unused)))\n   { _GLIBCXX_THROW_OR_ABORT(__ios_failure(_(__s))); }\n \n+  void\n+  __throw_ios_failure(const char* str __attribute__((unused)),\n+\t\t      int err __attribute__((unused)))\n+  { _GLIBCXX_THROW_OR_ABORT(__ios_failure(_(str), err)); }\n+\n _GLIBCXX_END_NAMESPACE_VERSION\n } // namespace"}, {"sha": "794124b68e74013ac85042d8da7a820ed97b9a98", "filename": "libstdc++-v3/src/c++98/ios_failure.cc", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/484e936e88e52d9e4e013bbc1b8264f556ff7cb4/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B98%2Fios_failure.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/484e936e88e52d9e4e013bbc1b8264f556ff7cb4/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B98%2Fios_failure.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B98%2Fios_failure.cc?ref=484e936e88e52d9e4e013bbc1b8264f556ff7cb4", "patch": "@@ -88,7 +88,11 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n   __throw_ios_failure(const char* __s __attribute__((unused)))\n   { _GLIBCXX_THROW_OR_ABORT(ios::failure(_(__s))); }\n \n-#endif\n+  void\n+  __throw_ios_failure(const char* str, int)\n+  { __throw_ios_failure(str); }\n+\n+#endif // _GLIBCXX_USE_DUAL_ABI\n \n _GLIBCXX_END_NAMESPACE_VERSION\n } // namespace"}]}