{"sha": "6f3af3562804db0ef656dcc02b1e192c8f7fc8cc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmYzYWYzNTYyODA0ZGIwZWY2NTZkY2MwMmIxZTE5MmM4ZjdmYzhjYw==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2017-03-31T18:39:25Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2017-03-31T18:39:25Z"}, "message": "re PR sanitizer/79572 (reference binding to null pointer not reported with -fsanitize=undefined)\n\n\tPR c++/79572\n\t* c-ubsan.h (ubsan_maybe_instrument_reference): Change argument to\n\ttree *.\n\t* c-ubsan.c (ubsan_maybe_instrument_reference): Likewise.  Handle\n\tnot just NOP_EXPR to REFERENCE_TYPE, but also INTEGER_CST with\n\tREFERENCE_TYPE.\n\n\t* cp-gimplify.c (cp_genericize_r): Sanitize INTEGER_CSTs with\n\tREFERENCE_TYPE.  Adjust ubsan_maybe_instrument_reference caller\n\tfor NOP_EXPR to REFERENCE_TYPE.\n\n\t* g++.dg/ubsan/null-8.C: New test.\n\nFrom-SVN: r246621", "tree": {"sha": "bcd8eeb5904c373580e8d225e212003161cc8d72", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bcd8eeb5904c373580e8d225e212003161cc8d72"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6f3af3562804db0ef656dcc02b1e192c8f7fc8cc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6f3af3562804db0ef656dcc02b1e192c8f7fc8cc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6f3af3562804db0ef656dcc02b1e192c8f7fc8cc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6f3af3562804db0ef656dcc02b1e192c8f7fc8cc/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "77734296b4b2634ea4b0222cc5d829d0eb99825f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/77734296b4b2634ea4b0222cc5d829d0eb99825f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/77734296b4b2634ea4b0222cc5d829d0eb99825f"}], "stats": {"total": 72, "additions": 66, "deletions": 6}, "files": [{"sha": "0d5a16f66091e4b374565447a2c4b6666134d45c", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f3af3562804db0ef656dcc02b1e192c8f7fc8cc/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f3af3562804db0ef656dcc02b1e192c8f7fc8cc/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=6f3af3562804db0ef656dcc02b1e192c8f7fc8cc", "patch": "@@ -1,3 +1,12 @@\n+2017-03-31  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/79572\n+\t* c-ubsan.h (ubsan_maybe_instrument_reference): Change argument to\n+\ttree *.\n+\t* c-ubsan.c (ubsan_maybe_instrument_reference): Likewise.  Handle\n+\tnot just NOP_EXPR to REFERENCE_TYPE, but also INTEGER_CST with\n+\tREFERENCE_TYPE.\n+\n 2017-03-31  David Malcolm  <dmalcolm@redhat.com>\n \n \tPR documentation/78732"}, {"sha": "91bdef883203ac95027801fec5f738ad41bf47a4", "filename": "gcc/c-family/c-ubsan.c", "status": "modified", "additions": 13, "deletions": 4, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f3af3562804db0ef656dcc02b1e192c8f7fc8cc/gcc%2Fc-family%2Fc-ubsan.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f3af3562804db0ef656dcc02b1e192c8f7fc8cc/gcc%2Fc-family%2Fc-ubsan.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-ubsan.c?ref=6f3af3562804db0ef656dcc02b1e192c8f7fc8cc", "patch": "@@ -458,17 +458,26 @@ ubsan_maybe_instrument_reference_or_call (location_t loc, tree op, tree ptype,\n   return fold_build2 (COMPOUND_EXPR, TREE_TYPE (op), call, op);\n }\n \n-/* Instrument a NOP_EXPR to REFERENCE_TYPE if needed.  */\n+/* Instrument a NOP_EXPR to REFERENCE_TYPE or INTEGER_CST with REFERENCE_TYPE\n+   type if needed.  */\n \n void\n-ubsan_maybe_instrument_reference (tree stmt)\n+ubsan_maybe_instrument_reference (tree *stmt_p)\n {\n-  tree op = TREE_OPERAND (stmt, 0);\n+  tree stmt = *stmt_p;\n+  tree op = stmt;\n+  if (TREE_CODE (stmt) == NOP_EXPR)\n+    op = TREE_OPERAND (stmt, 0);\n   op = ubsan_maybe_instrument_reference_or_call (EXPR_LOCATION (stmt), op,\n \t\t\t\t\t\t TREE_TYPE (stmt),\n \t\t\t\t\t\t UBSAN_REF_BINDING);\n   if (op)\n-    TREE_OPERAND (stmt, 0) = op;\n+    {\n+      if (TREE_CODE (stmt) == NOP_EXPR) \n+\tTREE_OPERAND (stmt, 0) = op;\n+      else\n+\t*stmt_p = op;\n+    }\n }\n \n /* Instrument a CALL_EXPR to a method if needed.  */"}, {"sha": "3c3ffc7f7a2c4dca47d304e3087bd3765e7ebfd1", "filename": "gcc/c-family/c-ubsan.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f3af3562804db0ef656dcc02b1e192c8f7fc8cc/gcc%2Fc-family%2Fc-ubsan.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f3af3562804db0ef656dcc02b1e192c8f7fc8cc/gcc%2Fc-family%2Fc-ubsan.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-ubsan.h?ref=6f3af3562804db0ef656dcc02b1e192c8f7fc8cc", "patch": "@@ -28,7 +28,7 @@ extern tree ubsan_instrument_return (location_t);\n extern tree ubsan_instrument_bounds (location_t, tree, tree *, bool);\n extern bool ubsan_array_ref_instrumented_p (const_tree);\n extern void ubsan_maybe_instrument_array_ref (tree *, bool);\n-extern void ubsan_maybe_instrument_reference (tree);\n+extern void ubsan_maybe_instrument_reference (tree *);\n extern void ubsan_maybe_instrument_member_call (tree, bool);\n \n /* Declare this here as well as in ubsan.h. */"}, {"sha": "743847908d0c431759d1a07871ea898e58f1aeef", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f3af3562804db0ef656dcc02b1e192c8f7fc8cc/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f3af3562804db0ef656dcc02b1e192c8f7fc8cc/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=6f3af3562804db0ef656dcc02b1e192c8f7fc8cc", "patch": "@@ -1,5 +1,10 @@\n 2017-03-31  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR c++/79572\n+\t* cp-gimplify.c (cp_genericize_r): Sanitize INTEGER_CSTs with\n+\tREFERENCE_TYPE.  Adjust ubsan_maybe_instrument_reference caller\n+\tfor NOP_EXPR to REFERENCE_TYPE.\n+\n \tPR libstdc++/80251\n \t* cp-tree.h (enum cp_trait_kind): Add CPTK_IS_AGGREGATE.\n \t* cxx-pretty-print.c (pp_cxx_trait_expression): Handle"}, {"sha": "6e49daf84997c8aafb46f989f0df04cab8ac96c1", "filename": "gcc/cp/cp-gimplify.c", "status": "modified", "additions": 14, "deletions": 1, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f3af3562804db0ef656dcc02b1e192c8f7fc8cc/gcc%2Fcp%2Fcp-gimplify.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f3af3562804db0ef656dcc02b1e192c8f7fc8cc/gcc%2Fcp%2Fcp-gimplify.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-gimplify.c?ref=6f3af3562804db0ef656dcc02b1e192c8f7fc8cc", "patch": "@@ -1130,6 +1130,19 @@ cp_genericize_r (tree *stmt_p, int *walk_subtrees, void *data)\n \t}\n     }\n \n+  if (TREE_CODE (stmt) == INTEGER_CST\n+      && TREE_CODE (TREE_TYPE (stmt)) == REFERENCE_TYPE\n+      && (flag_sanitize & (SANITIZE_NULL | SANITIZE_ALIGNMENT))\n+      && !wtd->no_sanitize_p)\n+    {\n+      ubsan_maybe_instrument_reference (stmt_p);\n+      if (*stmt_p != stmt)\n+\t{\n+\t  *walk_subtrees = 0;\n+\t  return NULL_TREE;\n+\t}\n+    }\n+\n   /* Other than invisiref parms, don't walk the same tree twice.  */\n   if (p_set->contains (stmt))\n     {\n@@ -1477,7 +1490,7 @@ cp_genericize_r (tree *stmt_p, int *walk_subtrees, void *data)\n       if ((flag_sanitize & (SANITIZE_NULL | SANITIZE_ALIGNMENT))\n \t  && TREE_CODE (stmt) == NOP_EXPR\n \t  && TREE_CODE (TREE_TYPE (stmt)) == REFERENCE_TYPE)\n-\tubsan_maybe_instrument_reference (stmt);\n+\tubsan_maybe_instrument_reference (stmt_p);\n       else if (TREE_CODE (stmt) == CALL_EXPR)\n \t{\n \t  tree fn = CALL_EXPR_FN (stmt);"}, {"sha": "134fc2a309c0f2b8b2f9fd670b31f1213f62479a", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f3af3562804db0ef656dcc02b1e192c8f7fc8cc/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f3af3562804db0ef656dcc02b1e192c8f7fc8cc/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=6f3af3562804db0ef656dcc02b1e192c8f7fc8cc", "patch": "@@ -1,3 +1,8 @@\n+2017-03-31  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/79572\n+\t* g++.dg/ubsan/null-8.C: New test.\n+\n 2017-03-31  Pat Haugen  <pthaugen@us.ibm.com>\n \n \tPR target/80107"}, {"sha": "259a213183a9a29d6b997dfe072ffe7efd070516", "filename": "gcc/testsuite/g++.dg/ubsan/null-8.C", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f3af3562804db0ef656dcc02b1e192c8f7fc8cc/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fubsan%2Fnull-8.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f3af3562804db0ef656dcc02b1e192c8f7fc8cc/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fubsan%2Fnull-8.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fubsan%2Fnull-8.C?ref=6f3af3562804db0ef656dcc02b1e192c8f7fc8cc", "patch": "@@ -0,0 +1,19 @@\n+// PR c++/79572\n+// { dg-do run }\n+// { dg-options \"-fsanitize=null -std=c++14\" }\n+// { dg-output \"reference binding to null pointer of type 'const int'\" }\n+\n+void\n+foo (const int &iref)\n+{\n+  if (&iref)\n+    __builtin_printf (\"iref %d\\n\", iref);\n+  else\n+    __builtin_printf (\"iref is NULL\\n\");\n+}\n+\n+int\n+main ()\n+{\n+  foo (*((int*) __null));\n+}"}]}