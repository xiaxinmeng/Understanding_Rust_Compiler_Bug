{"sha": "a5c3d18c25527d20882a575274f2a06a73f54863", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTVjM2QxOGMyNTUyN2QyMDg4MmE1NzUyNzRmMmEwNmE3M2Y1NDg2Mw==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2011-12-13T12:54:57Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2011-12-13T12:54:57Z"}, "message": "re PR tree-optimization/51519 (ICE: in inline_small_functions, at ipa-inline.c:1410 with -O -fno-guess-branch-probability -findirect-inlining)\n\n2011-12-13  Richard Guenther  <rguenther@suse.de>\n\n\tPR tree-optimization/51519\n\t* ipa-inline.c (edge_badness): Use edge growth in non-guessed\n\tbranch probability case as well.\n\n\t* gcc.dg/pr51519.c: New testcase.\n\nFrom-SVN: r182279", "tree": {"sha": "d2ad875ff89b9da4d794288131abd4cb659df04a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d2ad875ff89b9da4d794288131abd4cb659df04a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a5c3d18c25527d20882a575274f2a06a73f54863", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a5c3d18c25527d20882a575274f2a06a73f54863", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a5c3d18c25527d20882a575274f2a06a73f54863", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a5c3d18c25527d20882a575274f2a06a73f54863/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "4634c03b7253ad80fcec0435307a9e67a30cd5f4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4634c03b7253ad80fcec0435307a9e67a30cd5f4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4634c03b7253ad80fcec0435307a9e67a30cd5f4"}], "stats": {"total": 52, "additions": 51, "deletions": 1}, "files": [{"sha": "df45f4448c47b7cef9c03e68db2d1ddaee42a74e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5c3d18c25527d20882a575274f2a06a73f54863/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5c3d18c25527d20882a575274f2a06a73f54863/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a5c3d18c25527d20882a575274f2a06a73f54863", "patch": "@@ -1,3 +1,9 @@\n+2011-12-13  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/51519\n+\t* ipa-inline.c (edge_badness): Use edge growth in non-guessed\n+\tbranch probability case as well.\n+\n 2011-12-13  Revital Eres  <revital.eres@linaro.org>\n \n \t* modulo-sched.c (mark_loop_unsched): Free bbs."}, {"sha": "14bd89a67bcb9708e1268d6525a1f87844aa665a", "filename": "gcc/ipa-inline.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5c3d18c25527d20882a575274f2a06a73f54863/gcc%2Fipa-inline.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5c3d18c25527d20882a575274f2a06a73f54863/gcc%2Fipa-inline.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-inline.c?ref=a5c3d18c25527d20882a575274f2a06a73f54863", "patch": "@@ -861,7 +861,7 @@ edge_badness (struct cgraph_edge *edge, bool dump)\n   else\n     {\n       int nest = MIN (inline_edge_summary (edge)->loop_depth, 8);\n-      badness = estimate_growth (callee) * 256;\n+      badness = growth * 256;\n \n       /* Decrease badness if call is nested.  */\n       if (badness > 0)"}, {"sha": "5de35b0d7ffd8911116db69ea1a88f2a67501dd1", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5c3d18c25527d20882a575274f2a06a73f54863/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5c3d18c25527d20882a575274f2a06a73f54863/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=a5c3d18c25527d20882a575274f2a06a73f54863", "patch": "@@ -1,3 +1,8 @@\n+2011-12-13  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/51519\n+\t* gcc.dg/pr51519.c: New testcase.\n+\n 2011-12-13  Richard Guenther  <rguenther@suse.de>\n \n \t* gcc.dg/lto/20111213-1_0.c: New testcase."}, {"sha": "3d5d3f24396118f8b26cfd168d043e79bed8f4ba", "filename": "gcc/testsuite/gcc.dg/pr51519.c", "status": "added", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5c3d18c25527d20882a575274f2a06a73f54863/gcc%2Ftestsuite%2Fgcc.dg%2Fpr51519.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5c3d18c25527d20882a575274f2a06a73f54863/gcc%2Ftestsuite%2Fgcc.dg%2Fpr51519.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr51519.c?ref=a5c3d18c25527d20882a575274f2a06a73f54863", "patch": "@@ -0,0 +1,39 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O -fno-guess-branch-probability -findirect-inlining\" } */\n+\n+void fe (void);\n+int i;\n+\n+static inline void\n+FX (void (*f) (void))\n+{\n+  fe ();\n+  (*f) ();\n+}\n+\n+static inline void\n+f4 ()\n+{\n+  if (i)\n+    FX (fe);\n+}\n+\n+static inline void\n+f3 (void)\n+{\n+  f4 ();\n+  if (i)\n+    FX (f4);\n+}\n+\n+static inline void\n+f2 (void)\n+{\n+  FX (&f3);\n+}\n+\n+void\n+f1 (void)\n+{\n+  FX (&f2);\n+}"}]}