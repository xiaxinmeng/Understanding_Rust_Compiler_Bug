{"sha": "cebe850dfa7ab54ce56340f21c06a73547273870", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2ViZTg1MGRmYTdhYjU0Y2U1NjM0MGYyMWMwNmE3MzU0NzI3Mzg3MA==", "commit": {"author": {"name": "Richard Sandiford", "email": "richard.sandiford@arm.com", "date": "2015-04-30T11:53:31Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2015-04-30T11:53:31Z"}, "message": "genrecog.c (simplify_tests): Check that CONST_INT and XWINT tests are for the same position.\n\ngcc/\n\t* genrecog.c (simplify_tests): Check that CONST_INT and XWINT tests\n\tare for the same position.\n\nFrom-SVN: r222618", "tree": {"sha": "7208b6300d240abf6ffcf5fd64fa81912a7933df", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7208b6300d240abf6ffcf5fd64fa81912a7933df"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cebe850dfa7ab54ce56340f21c06a73547273870", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cebe850dfa7ab54ce56340f21c06a73547273870", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cebe850dfa7ab54ce56340f21c06a73547273870", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cebe850dfa7ab54ce56340f21c06a73547273870/comments", "author": {"login": "rsandifo-arm", "id": 28043039, "node_id": "MDQ6VXNlcjI4MDQzMDM5", "avatar_url": "https://avatars.githubusercontent.com/u/28043039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo-arm", "html_url": "https://github.com/rsandifo-arm", "followers_url": "https://api.github.com/users/rsandifo-arm/followers", "following_url": "https://api.github.com/users/rsandifo-arm/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo-arm/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo-arm/orgs", "repos_url": "https://api.github.com/users/rsandifo-arm/repos", "events_url": "https://api.github.com/users/rsandifo-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e1c444fef05475d8f7b4fa2f746ad49ba78b0b69", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e1c444fef05475d8f7b4fa2f746ad49ba78b0b69", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e1c444fef05475d8f7b4fa2f746ad49ba78b0b69"}], "stats": {"total": 8, "additions": 7, "deletions": 1}, "files": [{"sha": "8b18882f652bd97e9003d83e7bcda704d6eaf770", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cebe850dfa7ab54ce56340f21c06a73547273870/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cebe850dfa7ab54ce56340f21c06a73547273870/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=cebe850dfa7ab54ce56340f21c06a73547273870", "patch": "@@ -1,3 +1,8 @@\n+2015-04-30  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\t* genrecog.c (simplify_tests): Check that CONST_INT and XWINT tests\n+\tare for the same position.\n+\n 2015-04-29  Aditya Kumar  <hiraditya@hotmail.com>\n \n \t* tree-vectorizer.c (set_uid_loop_bbs): New.  Factored out of"}, {"sha": "cc3ff07338142fb6e943ff9655e13e302267f4d3", "filename": "gcc/genrecog.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cebe850dfa7ab54ce56340f21c06a73547273870/gcc%2Fgenrecog.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cebe850dfa7ab54ce56340f21c06a73547273870/gcc%2Fgenrecog.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgenrecog.c?ref=cebe850dfa7ab54ce56340f21c06a73547273870", "patch": "@@ -1597,7 +1597,8 @@ simplify_tests (state *s)\n \t  && d->if_statement_p (&label)\n \t  && label == CONST_INT)\n \tif (decision *second = d->first->to->singleton ())\n-\t  if (second->test.kind == test::WIDE_INT_FIELD\n+\t  if (d->test.pos == second->test.pos\n+\t      && second->test.kind == test::WIDE_INT_FIELD\n \t      && second->test.u.opno == 0\n \t      && second->if_statement_p (&label)\n \t      && IN_RANGE (int64_t (label),"}]}