{"sha": "dc5395cc64eb313a6ca233f74642064a862b5aae", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGM1Mzk1Y2M2NGViMzEzYTZjYTIzM2Y3NDY0MjA2NGE4NjJiNWFhZQ==", "commit": {"author": {"name": "Lee Millward", "email": "lmillward@gcc.gnu.org", "date": "2006-08-21T18:43:36Z"}, "committer": {"name": "Lee Millward", "email": "lmillward@gcc.gnu.org", "date": "2006-08-21T18:43:36Z"}, "message": "Fix typo from a previous commit\n\nFrom-SVN: r116305", "tree": {"sha": "c15ab1ce3537a5b975cc047847f3fbce89830f3c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c15ab1ce3537a5b975cc047847f3fbce89830f3c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dc5395cc64eb313a6ca233f74642064a862b5aae", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dc5395cc64eb313a6ca233f74642064a862b5aae", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dc5395cc64eb313a6ca233f74642064a862b5aae", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dc5395cc64eb313a6ca233f74642064a862b5aae/comments", "author": null, "committer": null, "parents": [{"sha": "34302d13ea0dd4cc2fa0e7a8f84ca780e1355751", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/34302d13ea0dd4cc2fa0e7a8f84ca780e1355751", "html_url": "https://github.com/Rust-GCC/gccrs/commit/34302d13ea0dd4cc2fa0e7a8f84ca780e1355751"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "f45459603ad5ac62dcec2027e5126a5e99ce6bc3", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dc5395cc64eb313a6ca233f74642064a862b5aae/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dc5395cc64eb313a6ca233f74642064a862b5aae/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=dc5395cc64eb313a6ca233f74642064a862b5aae", "patch": "@@ -1124,7 +1124,7 @@ duplicate_decls (tree newdecl, tree olddecl, bool newdecl_is_friend)\n      about the same declaration, so just pretend the types match here.  */\n   if (TREE_TYPE (newdecl) == error_mark_node\n       || TREE_TYPE (olddecl) == error_mark_node)\n-    return error_mark_node.\n+    return error_mark_node;\n \n   if (DECL_P (olddecl)\n       && TREE_CODE (newdecl) == FUNCTION_DECL"}]}