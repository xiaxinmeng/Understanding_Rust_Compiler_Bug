{"sha": "ff22eb1256b05c1d0e0cf4b4b3114808bbf29457", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmYyMmViMTI1NmIwNWMxZDBlMGNmNGI0YjMxMTQ4MDhiYmYyOTQ1Nw==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@acm.org", "date": "2017-07-18T13:22:50Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2017-07-18T13:22:50Z"}, "message": "tree-parloops.c (try_transform_to_exit_first_loop_alt): Use TYPE_MAX_VALUE.\n\n       gcc/\n\t* tree-parloops.c (try_transform_to_exit_first_loop_alt): Use\n\tTYPE_MAX_VALUE.\n\n       gcc/c-family/\n\t* c-warn.c (warn_for_memset): Use TYPE_{MIN,MAX}_VALUE.\n\n       gcc/c/\n\t* c-parser.c (c_parser_array_notation): Use TYPE_{MIN,MAX}_VALUE.\n\n       gcc/cp/ \n\t* cp-array-notation.c (build_array_notation_ref): Use\n\tTYPE_{MIN,MAX}_VALUE.\n\n       gcc/fortran/\n\t* trans.c (gfc_build_array_ref): Use TYPE_MAX_VALUE.\n\nFrom-SVN: r250309", "tree": {"sha": "801994a4a5938d89dd87c9fd4b979d47fdb3ed40", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/801994a4a5938d89dd87c9fd4b979d47fdb3ed40"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ff22eb1256b05c1d0e0cf4b4b3114808bbf29457", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ff22eb1256b05c1d0e0cf4b4b3114808bbf29457", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ff22eb1256b05c1d0e0cf4b4b3114808bbf29457", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ff22eb1256b05c1d0e0cf4b4b3114808bbf29457/comments", "author": {"login": "urnathan", "id": 13103001, "node_id": "MDQ6VXNlcjEzMTAzMDAx", "avatar_url": "https://avatars.githubusercontent.com/u/13103001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/urnathan", "html_url": "https://github.com/urnathan", "followers_url": "https://api.github.com/users/urnathan/followers", "following_url": "https://api.github.com/users/urnathan/following{/other_user}", "gists_url": "https://api.github.com/users/urnathan/gists{/gist_id}", "starred_url": "https://api.github.com/users/urnathan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/urnathan/subscriptions", "organizations_url": "https://api.github.com/users/urnathan/orgs", "repos_url": "https://api.github.com/users/urnathan/repos", "events_url": "https://api.github.com/users/urnathan/events{/privacy}", "received_events_url": "https://api.github.com/users/urnathan/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b34a929aa3c4e2d4848589b6ceb8cb457ad77f60", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b34a929aa3c4e2d4848589b6ceb8cb457ad77f60", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b34a929aa3c4e2d4848589b6ceb8cb457ad77f60"}], "stats": {"total": 58, "additions": 39, "deletions": 19}, "files": [{"sha": "1d11ab5b95e89b9e952b9c8cdbc9f857a483ca0c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff22eb1256b05c1d0e0cf4b4b3114808bbf29457/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff22eb1256b05c1d0e0cf4b4b3114808bbf29457/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ff22eb1256b05c1d0e0cf4b4b3114808bbf29457", "patch": "@@ -1,3 +1,8 @@\n+2017-07-18  Nathan Sidwell  <nathan@acm.org>\n+\n+\t* tree-parloops.c (try_transform_to_exit_first_loop_alt): Use\n+\tTYPE_MAX_VALUE.\n+\n 2017-07-18  Bin Cheng  <bin.cheng@arm.com>\n \n \tPR target/81408"}, {"sha": "e79a57141f11692fa6d1b476ff5dcba83facf910", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff22eb1256b05c1d0e0cf4b4b3114808bbf29457/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff22eb1256b05c1d0e0cf4b4b3114808bbf29457/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=ff22eb1256b05c1d0e0cf4b4b3114808bbf29457", "patch": "@@ -1,3 +1,7 @@\n+2017-07-18  Nathan Sidwell  <nathan@acm.org>\n+\n+\t* c-warn.c (warn_for_memset): Use TYPE_{MIN,MAX}_VALUE.\n+\n 2017-07-14  David Malcolm  <dmalcolm@redhat.com>\n \n \t* c-common.c (try_to_locate_new_include_insertion_point): New"}, {"sha": "a8b38c1b98deae21fa6ce4f1baa5c2823cc91f19", "filename": "gcc/c-family/c-warn.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff22eb1256b05c1d0e0cf4b4b3114808bbf29457/gcc%2Fc-family%2Fc-warn.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff22eb1256b05c1d0e0cf4b4b3114808bbf29457/gcc%2Fc-family%2Fc-warn.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-warn.c?ref=ff22eb1256b05c1d0e0cf4b4b3114808bbf29457", "patch": "@@ -1799,12 +1799,12 @@ warn_for_memset (location_t loc, tree arg0, tree arg2,\n \t  tree domain = TYPE_DOMAIN (type);\n \t  if (!integer_onep (TYPE_SIZE_UNIT (elt_type))\n \t      && domain != NULL_TREE\n-\t      && TYPE_MAXVAL (domain)\n-\t      && TYPE_MINVAL (domain)\n-\t      && integer_zerop (TYPE_MINVAL (domain))\n+\t      && TYPE_MAX_VALUE (domain)\n+\t      && TYPE_MIN_VALUE (domain)\n+\t      && integer_zerop (TYPE_MIN_VALUE (domain))\n \t      && integer_onep (fold_build2 (MINUS_EXPR, domain,\n \t\t\t\t\t    arg2,\n-\t\t\t\t\t    TYPE_MAXVAL (domain))))\n+\t\t\t\t\t    TYPE_MAX_VALUE (domain))))\n \t    warning_at (loc, OPT_Wmemset_elt_size,\n \t\t\t\"%<memset%> used with length equal to \"\n \t\t\t\"number of elements without multiplication \""}, {"sha": "bfa9e9a879ffd9df09f6a1997f10bd6df43405d1", "filename": "gcc/c/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff22eb1256b05c1d0e0cf4b4b3114808bbf29457/gcc%2Fc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff22eb1256b05c1d0e0cf4b4b3114808bbf29457/gcc%2Fc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2FChangeLog?ref=ff22eb1256b05c1d0e0cf4b4b3114808bbf29457", "patch": "@@ -1,3 +1,7 @@\n+2017-07-18  Nathan Sidwell  <nathan@acm.org>\n+\n+\t* c-parser.c (c_parser_array_notation): Use TYPE_{MIN,MAX}_VALUE.\n+\n 2017-07-14  David Malcolm  <dmalcolm@redhat.com>\n \n \t* c-decl.c (implicitly_declare): When suggesting a missing"}, {"sha": "eae7689319ac044b85164c18ca036611450b779a", "filename": "gcc/c/c-parser.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff22eb1256b05c1d0e0cf4b4b3114808bbf29457/gcc%2Fc%2Fc-parser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff22eb1256b05c1d0e0cf4b4b3114808bbf29457/gcc%2Fc%2Fc-parser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2Fc-parser.c?ref=ff22eb1256b05c1d0e0cf4b4b3114808bbf29457", "patch": "@@ -18238,18 +18238,18 @@ c_parser_array_notation (location_t loc, c_parser *parser, tree initial_index,\n \t      return error_mark_node;\n \t    }\n \n-\t  start_index = TYPE_MINVAL (array_type_domain);\n+\t  start_index = TYPE_MIN_VALUE (array_type_domain);\n \t  start_index = fold_build1 (CONVERT_EXPR, ptrdiff_type_node,\n \t\t\t\t     start_index);\n-\t  if (!TYPE_MAXVAL (array_type_domain)\n-\t      || !TREE_CONSTANT (TYPE_MAXVAL (array_type_domain)))\n+\t  if (!TYPE_MAX_VALUE (array_type_domain)\n+\t      || !TREE_CONSTANT (TYPE_MAX_VALUE (array_type_domain)))\n \t    {\n \t      error_at (loc, \"start-index and length fields necessary for \"\n \t\t\t\"using array notations in variable-length arrays\");\n \t      c_parser_skip_until_found (parser, CPP_CLOSE_SQUARE, NULL);\n \t      return error_mark_node;\n \t    }\n-\t  end_index = TYPE_MAXVAL (array_type_domain);\n+\t  end_index = TYPE_MAX_VALUE (array_type_domain);\n \t  end_index = fold_build2 (PLUS_EXPR, TREE_TYPE (end_index),\n \t\t\t\t   end_index, integer_one_node);\n \t  end_index = fold_build1 (CONVERT_EXPR, ptrdiff_type_node, end_index);"}, {"sha": "256d1ee1b8c3c3f1a80f356ee34ffe50326f15bd", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff22eb1256b05c1d0e0cf4b4b3114808bbf29457/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff22eb1256b05c1d0e0cf4b4b3114808bbf29457/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=ff22eb1256b05c1d0e0cf4b4b3114808bbf29457", "patch": "@@ -1,5 +1,8 @@\n 2017-07-18  Nathan Sidwell  <nathan@acm.org>\n \n+\t* cp-array-notation.c (build_array_notation_ref): Use\n+\tTYPE_{MIN,MAX}_VALUE.\n+\n \t* class.c (classtype_has_move_assign_or_move_ctor): Declare.\n \t(add_implicitly_declared_members): Use it.\n \t(type_has_move_constructor, type_has_move_assign): Merge into ..."}, {"sha": "31be7d685ba76c78c7de650ee8add5f319e4d925", "filename": "gcc/cp/cp-array-notation.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff22eb1256b05c1d0e0cf4b4b3114808bbf29457/gcc%2Fcp%2Fcp-array-notation.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff22eb1256b05c1d0e0cf4b4b3114808bbf29457/gcc%2Fcp%2Fcp-array-notation.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-array-notation.c?ref=ff22eb1256b05c1d0e0cf4b4b3114808bbf29457", "patch": "@@ -1375,8 +1375,8 @@ build_array_notation_ref (location_t loc, tree array, tree start, tree length,\n \t\t    \"using array notation with array of unknown bound\");\n \t  return error_mark_node;\n \t}\n-      start = cp_fold_convert (ptrdiff_type_node, TYPE_MINVAL (domain));\n-      length = size_binop (PLUS_EXPR, TYPE_MAXVAL (domain), size_one_node);\n+      start = cp_fold_convert (ptrdiff_type_node, TYPE_MIN_VALUE (domain));\n+      length = size_binop (PLUS_EXPR, TYPE_MAX_VALUE (domain), size_one_node);\n       length = cp_fold_convert (ptrdiff_type_node, length);\n     }\n     "}, {"sha": "ff72ba45ee94681c8e3919011f39a3357fde7e0f", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff22eb1256b05c1d0e0cf4b4b3114808bbf29457/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff22eb1256b05c1d0e0cf4b4b3114808bbf29457/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=ff22eb1256b05c1d0e0cf4b4b3114808bbf29457", "patch": "@@ -1,3 +1,7 @@\n+2017-07-18  Nathan Sidwell  <nathan@acm.org>\n+\n+\t* trans.c (gfc_build_array_ref): Use TYPE_MAX_VALUE.\n+\n 2017-07-09  Dominique d'Humieres  <dominiq@lps.ens.fr>\n \n \tPR fortran/81341"}, {"sha": "8f0adde77e0d08e24b8606dac6fdf1d5f739f9e3", "filename": "gcc/fortran/trans.c", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff22eb1256b05c1d0e0cf4b4b3114808bbf29457/gcc%2Ffortran%2Ftrans.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff22eb1256b05c1d0e0cf4b4b3114808bbf29457/gcc%2Ffortran%2Ftrans.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans.c?ref=ff22eb1256b05c1d0e0cf4b4b3114808bbf29457", "patch": "@@ -334,15 +334,15 @@ gfc_build_array_ref (tree base, tree offset, tree decl, tree vptr)\n   /* Use pointer arithmetic for deferred character length array\n      references.  */\n   if (type && TREE_CODE (type) == ARRAY_TYPE\n-      && TYPE_MAXVAL (TYPE_DOMAIN (type)) != NULL_TREE\n-      && (VAR_P (TYPE_MAXVAL (TYPE_DOMAIN (type)))\n-\t  || TREE_CODE (TYPE_MAXVAL (TYPE_DOMAIN (type))) == INDIRECT_REF)\n+      && TYPE_MAX_VALUE (TYPE_DOMAIN (type)) != NULL_TREE\n+      && (VAR_P (TYPE_MAX_VALUE (TYPE_DOMAIN (type)))\n+\t  || TREE_CODE (TYPE_MAX_VALUE (TYPE_DOMAIN (type))) == INDIRECT_REF)\n       && decl\n-      && (TREE_CODE (TYPE_MAXVAL (TYPE_DOMAIN (type))) == INDIRECT_REF\n+      && (TREE_CODE (TYPE_MAX_VALUE (TYPE_DOMAIN (type))) == INDIRECT_REF\n \t  || TREE_CODE (decl) == FUNCTION_DECL\n-\t  || DECL_CONTEXT (TYPE_MAXVAL (TYPE_DOMAIN (type)))\n-\t\t\t\t\t== DECL_CONTEXT (decl)))\n-    span = TYPE_MAXVAL (TYPE_DOMAIN (type));\n+\t  || (DECL_CONTEXT (TYPE_MAX_VALUE (TYPE_DOMAIN (type)))\n+\t      == DECL_CONTEXT (decl))))\n+    span = TYPE_MAX_VALUE (TYPE_DOMAIN (type));\n   else\n     span = NULL_TREE;\n "}, {"sha": "470964bebf79b895d3e51cf235234e736f8a1c83", "filename": "gcc/tree-parloops.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff22eb1256b05c1d0e0cf4b4b3114808bbf29457/gcc%2Ftree-parloops.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff22eb1256b05c1d0e0cf4b4b3114808bbf29457/gcc%2Ftree-parloops.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-parloops.c?ref=ff22eb1256b05c1d0e0cf4b4b3114808bbf29457", "patch": "@@ -1824,7 +1824,7 @@ try_transform_to_exit_first_loop_alt (struct loop *loop,\n   /* Figure out whether nit + 1 overflows.  */\n   if (TREE_CODE (nit) == INTEGER_CST)\n     {\n-      if (!tree_int_cst_equal (nit, TYPE_MAXVAL (nit_type)))\n+      if (!tree_int_cst_equal (nit, TYPE_MAX_VALUE (nit_type)))\n \t{\n \t  alt_bound = fold_build2_loc (UNKNOWN_LOCATION, PLUS_EXPR, nit_type,\n \t\t\t\t       nit, build_one_cst (nit_type));\n@@ -1869,7 +1869,7 @@ try_transform_to_exit_first_loop_alt (struct loop *loop,\n     return false;\n \n   /* Check if nit + 1 overflows.  */\n-  widest_int type_max = wi::to_widest (TYPE_MAXVAL (nit_type));\n+  widest_int type_max = wi::to_widest (TYPE_MAX_VALUE (nit_type));\n   if (nit_max >= type_max)\n     return false;\n "}]}