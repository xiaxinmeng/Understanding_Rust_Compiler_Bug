{"sha": "84cccff60a978174271a30042bf7841d2ae436eb", "node_id": "C_kwDOANBUbNoAKDg0Y2NjZmY2MGE5NzgxNzQyNzFhMzAwNDJiZjc4NDFkMmFlNDM2ZWI", "commit": {"author": {"name": "Harald Anlauf", "email": "anlauf@gmx.de", "date": "2021-09-24T17:10:15Z"}, "committer": {"name": "Harald Anlauf", "email": "anlauf@gmx.de", "date": "2021-09-24T17:11:02Z"}, "message": "Fortran - improve checking for intrinsics allowed in constant expressions\n\ngcc/fortran/ChangeLog:\n\n\tPR fortran/102458\n\t* expr.c (is_non_constant_intrinsic): Check for intrinsics\n\texcluded in constant expressions (F2018:10.1.2).\n\t(gfc_is_constant_expr): Use that check.\n\ngcc/testsuite/ChangeLog:\n\n\tPR fortran/102458\n\t* gfortran.dg/pr102458.f90: New test.", "tree": {"sha": "1f4c7f96bef5475529a5c4adb3633a6dc10cf5bc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1f4c7f96bef5475529a5c4adb3633a6dc10cf5bc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/84cccff60a978174271a30042bf7841d2ae436eb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/84cccff60a978174271a30042bf7841d2ae436eb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/84cccff60a978174271a30042bf7841d2ae436eb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/84cccff60a978174271a30042bf7841d2ae436eb/comments", "author": {"login": "harald-anlauf", "id": 90786862, "node_id": "MDQ6VXNlcjkwNzg2ODYy", "avatar_url": "https://avatars.githubusercontent.com/u/90786862?v=4", "gravatar_id": "", "url": "https://api.github.com/users/harald-anlauf", "html_url": "https://github.com/harald-anlauf", "followers_url": "https://api.github.com/users/harald-anlauf/followers", "following_url": "https://api.github.com/users/harald-anlauf/following{/other_user}", "gists_url": "https://api.github.com/users/harald-anlauf/gists{/gist_id}", "starred_url": "https://api.github.com/users/harald-anlauf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/harald-anlauf/subscriptions", "organizations_url": "https://api.github.com/users/harald-anlauf/orgs", "repos_url": "https://api.github.com/users/harald-anlauf/repos", "events_url": "https://api.github.com/users/harald-anlauf/events{/privacy}", "received_events_url": "https://api.github.com/users/harald-anlauf/received_events", "type": "User", "site_admin": false}, "committer": {"login": "harald-anlauf", "id": 90786862, "node_id": "MDQ6VXNlcjkwNzg2ODYy", "avatar_url": "https://avatars.githubusercontent.com/u/90786862?v=4", "gravatar_id": "", "url": "https://api.github.com/users/harald-anlauf", "html_url": "https://github.com/harald-anlauf", "followers_url": "https://api.github.com/users/harald-anlauf/followers", "following_url": "https://api.github.com/users/harald-anlauf/following{/other_user}", "gists_url": "https://api.github.com/users/harald-anlauf/gists{/gist_id}", "starred_url": "https://api.github.com/users/harald-anlauf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/harald-anlauf/subscriptions", "organizations_url": "https://api.github.com/users/harald-anlauf/orgs", "repos_url": "https://api.github.com/users/harald-anlauf/repos", "events_url": "https://api.github.com/users/harald-anlauf/events{/privacy}", "received_events_url": "https://api.github.com/users/harald-anlauf/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2364250eccc389a5f9820ac55f8260d34f229e73", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2364250eccc389a5f9820ac55f8260d34f229e73", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2364250eccc389a5f9820ac55f8260d34f229e73"}], "stats": {"total": 74, "additions": 74, "deletions": 0}, "files": [{"sha": "5ad1c4f95237c2e064194dd83ead9663764d5609", "filename": "gcc/fortran/expr.c", "status": "modified", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84cccff60a978174271a30042bf7841d2ae436eb/gcc%2Ffortran%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84cccff60a978174271a30042bf7841d2ae436eb/gcc%2Ffortran%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fexpr.c?ref=84cccff60a978174271a30042bf7841d2ae436eb", "patch": "@@ -990,6 +990,34 @@ gfc_type_convert_binary (gfc_expr *e, int wconversion)\n }\n \n \n+/* Standard intrinsics listed under F2018:10.1.2 (6), which are excluded in\n+   constant expressions, except TRANSFER (c.f. item (8)), which would need\n+   separate treatment.  */\n+\n+static bool\n+is_non_constant_intrinsic (gfc_expr *e)\n+{\n+  if (e->expr_type == EXPR_FUNCTION\n+      && e->value.function.isym)\n+    {\n+      switch (e->value.function.isym->id)\n+\t{\n+\t  case GFC_ISYM_COMMAND_ARGUMENT_COUNT:\n+\t  case GFC_ISYM_GET_TEAM:\n+\t  case GFC_ISYM_NULL:\n+\t  case GFC_ISYM_NUM_IMAGES:\n+\t  case GFC_ISYM_TEAM_NUMBER:\n+\t  case GFC_ISYM_THIS_IMAGE:\n+\t    return true;\n+\n+\tdefault:\n+\t  return false;\n+\t}\n+    }\n+  return false;\n+}\n+\n+\n /* Determine if an expression is constant in the sense of F08:7.1.12.\n  * This function expects that the expression has already been simplified.  */\n \n@@ -1023,6 +1051,10 @@ gfc_is_constant_expr (gfc_expr *e)\n       gcc_assert (e->symtree || e->value.function.esym\n \t\t  || e->value.function.isym);\n \n+      /* Check for intrinsics excluded in constant expressions.  */\n+      if (e->value.function.isym && is_non_constant_intrinsic (e))\n+\treturn false;\n+\n       /* Call to intrinsic with at least one argument.  */\n       if (e->value.function.isym && e->value.function.actual)\n \t{"}, {"sha": "555e4978fdb1cf5e1b16db39267e9434a649b0a1", "filename": "gcc/testsuite/gfortran.dg/pr102458.f90", "status": "added", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84cccff60a978174271a30042bf7841d2ae436eb/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr102458.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84cccff60a978174271a30042bf7841d2ae436eb/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr102458.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr102458.f90?ref=84cccff60a978174271a30042bf7841d2ae436eb", "patch": "@@ -0,0 +1,42 @@\n+! { dg-do compile }\n+! { dg-options \"-fcoarray=lib\" }\n+! PR fortran/102458 - standard intrinsics excluded in constant expressions\n+\n+subroutine s1\n+  integer :: a(command_argument_count()) = 1 ! { dg-error \"Automatic array\" }\n+  print *, a\n+end\n+\n+program p\n+  block\n+    integer :: a(get_team()) = 1 ! { dg-error \"Automatic array\" }\n+    print *, a\n+  end block\n+end\n+\n+subroutine s2\n+  integer :: a(num_images()) = 1 ! { dg-error \"Automatic array\" }\n+  print *, a\n+end\n+\n+function f()\n+  block\n+    integer :: a(team_number()) = 0 ! { dg-error \"Automatic array\" }\n+    a = 1\n+  end block\n+end\n+\n+subroutine s3\n+  integer :: a(this_image()) = 1 ! { dg-error \"Automatic array\" }\n+  print *, a\n+end\n+\n+subroutine s4\n+  integer, parameter :: n = 4\n+  integer, parameter :: x(transfer(n, n)) = 1 ! legal\n+  integer            :: y(transfer(n, n)) = 2 ! legal\n+  integer, parameter :: k = size (x)          ! ok\n+! integer, parameter :: m = size (y)          ! fails, tracked separately\n+  print *, k, x, y\n+  if (k /= size (y)) stop 1\n+end"}]}