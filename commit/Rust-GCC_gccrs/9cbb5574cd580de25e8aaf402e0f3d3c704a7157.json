{"sha": "9cbb5574cd580de25e8aaf402e0f3d3c704a7157", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWNiYjU1NzRjZDU4MGRlMjVlOGFhZjQwMmUwZjNkM2M3MDRhNzE1Nw==", "commit": {"author": {"name": "Yannick Moy", "email": "moy@adacore.com", "date": "2019-07-05T07:02:13Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2019-07-05T07:02:13Z"}, "message": "[Ada] Accept compilation switches -Og/-Ofast in non-GCC backends\n\nTools like GNATprove built as GNAT backends rely on adabkend.adb to\nhandle generic switches like the optimisation switches -Oxxx.\nThis patch adds support for -Og and -Ofast that was missing.\n\nThere is no impact on compilation.\n\n2019-07-05  Yannick Moy  <moy@adacore.com>\n\ngcc/ada/\n\n\t* adabkend.adb (Scan_Back_End_Switches): Accept -Og and -Ofast\n\tswitches.\n\nFrom-SVN: r273108", "tree": {"sha": "fb0ce4bf7e6eb84d1692bede178bdb8f901193d1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fb0ce4bf7e6eb84d1692bede178bdb8f901193d1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9cbb5574cd580de25e8aaf402e0f3d3c704a7157", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9cbb5574cd580de25e8aaf402e0f3d3c704a7157", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9cbb5574cd580de25e8aaf402e0f3d3c704a7157", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9cbb5574cd580de25e8aaf402e0f3d3c704a7157/comments", "author": {"login": "yannickmoy", "id": 859440, "node_id": "MDQ6VXNlcjg1OTQ0MA==", "avatar_url": "https://avatars.githubusercontent.com/u/859440?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yannickmoy", "html_url": "https://github.com/yannickmoy", "followers_url": "https://api.github.com/users/yannickmoy/followers", "following_url": "https://api.github.com/users/yannickmoy/following{/other_user}", "gists_url": "https://api.github.com/users/yannickmoy/gists{/gist_id}", "starred_url": "https://api.github.com/users/yannickmoy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yannickmoy/subscriptions", "organizations_url": "https://api.github.com/users/yannickmoy/orgs", "repos_url": "https://api.github.com/users/yannickmoy/repos", "events_url": "https://api.github.com/users/yannickmoy/events{/privacy}", "received_events_url": "https://api.github.com/users/yannickmoy/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "9795b20366362d63be058f1e4f3009d6bad79310", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9795b20366362d63be058f1e4f3009d6bad79310", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9795b20366362d63be058f1e4f3009d6bad79310"}], "stats": {"total": 28, "additions": 23, "deletions": 5}, "files": [{"sha": "7fe957764f5b191984147b30656d9010f3558728", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9cbb5574cd580de25e8aaf402e0f3d3c704a7157/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9cbb5574cd580de25e8aaf402e0f3d3c704a7157/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=9cbb5574cd580de25e8aaf402e0f3d3c704a7157", "patch": "@@ -1,3 +1,8 @@\n+2019-07-05  Yannick Moy  <moy@adacore.com>\n+\n+\t* adabkend.adb (Scan_Back_End_Switches): Accept -Og and -Ofast\n+\tswitches.\n+\n 2019-07-05  Hristian Kirtchev  <kirtchev@adacore.com>\n \n \t* ali.adb: Relocate types Invocation_Construct_Record,"}, {"sha": "3e1b14d4cf3b9fb012d1bf1e1113f7428c551978", "filename": "gcc/ada/adabkend.adb", "status": "modified", "additions": 18, "deletions": 5, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9cbb5574cd580de25e8aaf402e0f3d3c704a7157/gcc%2Fada%2Fadabkend.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9cbb5574cd580de25e8aaf402e0f3d3c704a7157/gcc%2Fada%2Fadabkend.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fadabkend.adb?ref=9cbb5574cd580de25e8aaf402e0f3d3c704a7157", "patch": "@@ -117,9 +117,11 @@ package body Adabkend is\n \n          --  Set optimization indicators appropriately. In gcc-based GNAT this\n          --  is picked up from imported variables set by the gcc driver, but\n-         --  for compilers with non-gcc back ends we do it here to allow use\n-         --  of these switches by the front end. Allowed optimization switches\n-         --  are -Os (optimize for size), -O[0123], and -O (same as -O1).\n+         --  for compilers with non-gcc back ends we do it here to allow use of\n+         --  these switches by the front end. Allowed optimization switches are\n+         --  -Os (optimize for size), -O[0123], -O (same as -O1), -Ofast\n+         --  (disregard strict standards compliance), and -Og (optimize\n+         --  debugging experience).\n \n          elsif Switch_Chars (First) = 'O' then\n             if First = Last then\n@@ -134,10 +136,21 @@ package body Adabkend is\n                   Optimization_Level :=\n                     Character'Pos (Switch_Chars (Last)) - Character'Pos ('0');\n \n+               --  Switch -Og is between -O0 and -O1 in GCC. Consider it like\n+               --  -O0 for other back ends.\n+\n+               elsif Switch_Chars (Last) = 'g' then\n+                  Optimization_Level := 0;\n+\n                else\n                   Fail (\"invalid switch: \" & Switch_Chars);\n                end if;\n \n+            --  Switch -Ofast enables -O3\n+\n+            elsif Switch_Chars (First + 1 .. Last) = \"fast\" then\n+               Optimization_Level := 3;\n+\n             else\n                Fail (\"invalid switch: \" & Switch_Chars);\n             end if;\n@@ -169,7 +182,7 @@ package body Adabkend is\n \n             return;\n \n-         --  Special check, the back end switch -fno-inline also sets the\n+         --  Special check, the back-end switch -fno-inline also sets the\n          --  front end flags to entirely inhibit all inlining. So we store it\n          --  and set the appropriate flags.\n \n@@ -206,7 +219,7 @@ package body Adabkend is\n                end case;\n             end if;\n \n-         --  Ignore all other back end switches\n+         --  Ignore all other back-end switches\n \n          elsif Is_Back_End_Switch (Switch_Chars) then\n             null;"}]}