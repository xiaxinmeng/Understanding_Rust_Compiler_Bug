{"sha": "06fbce663e9b7f230d3cbaf9131de2cd786c819c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDZmYmNlNjYzZTliN2YyMzBkM2NiYWY5MTMxZGUyY2Q3ODZjODE5Yw==", "commit": {"author": {"name": "Zhouyi Zhou", "email": "yizhouzhou@ict.ac.cn", "date": "2015-06-25T15:03:33Z"}, "committer": {"name": "Vladimir Makarov", "email": "vmakarov@gcc.gnu.org", "date": "2015-06-25T15:03:33Z"}, "message": "ira-color.c (assign_hard_reg): Remove unecessary bitmap check.\n\n2015-06-25  Zhouyi Zhou  <yizhouzhou@ict.ac.cn>\n\t    Vladimir Makarov  <vmakarov@redhat.com>\n\n\t* ira-color.c (assign_hard_reg): Remove unecessary bitmap check.\n\tAdd assert.\n\n\nCo-Authored-By: Vladimir Makarov <vmakarov@redhat.com>\n\nFrom-SVN: r224944", "tree": {"sha": "2c8e1344cae6f9428de60d122fd369c8efb4275b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2c8e1344cae6f9428de60d122fd369c8efb4275b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/06fbce663e9b7f230d3cbaf9131de2cd786c819c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/06fbce663e9b7f230d3cbaf9131de2cd786c819c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/06fbce663e9b7f230d3cbaf9131de2cd786c819c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/06fbce663e9b7f230d3cbaf9131de2cd786c819c/comments", "author": null, "committer": null, "parents": [{"sha": "1ffbaa3fec7f3dcbc3d1f999e8fa3f0930b3e1ad", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1ffbaa3fec7f3dcbc3d1f999e8fa3f0930b3e1ad", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1ffbaa3fec7f3dcbc3d1f999e8fa3f0930b3e1ad"}], "stats": {"total": 31, "additions": 22, "deletions": 9}, "files": [{"sha": "157c23e88661d700cb8b35d27b06abe4f1c90894", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06fbce663e9b7f230d3cbaf9131de2cd786c819c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06fbce663e9b7f230d3cbaf9131de2cd786c819c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=06fbce663e9b7f230d3cbaf9131de2cd786c819c", "patch": "@@ -1,3 +1,9 @@\n+2015-06-25  Zhouyi Zhou  <yizhouzhou@ict.ac.cn>\n+\t    Vladimir Makarov  <vmakarov@redhat.com>\n+\n+\t* ira-color.c (assign_hard_reg): Remove unecessary bitmap check.\n+\tAdd assert.\n+\n 2015-06-25  Richard Biener  <rguenther@suse.de>\n \n \t* fold-const.c (fold_binary_loc): Move simplification of"}, {"sha": "860547c191d3a91a12837ee7f4fc8bddf03dc6ed", "filename": "gcc/ira-color.c", "status": "modified", "additions": 16, "deletions": 9, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06fbce663e9b7f230d3cbaf9131de2cd786c819c/gcc%2Fira-color.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06fbce663e9b7f230d3cbaf9131de2cd786c819c/gcc%2Fira-color.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fira-color.c?ref=06fbce663e9b7f230d3cbaf9131de2cd786c819c", "patch": "@@ -1733,15 +1733,22 @@ assign_hard_reg (ira_allocno_t a, bool retry_p)\n \t  /* Reload can give another class so we need to check all\n \t     allocnos.  */\n \t  if (!retry_p\n-\t      && (!bitmap_bit_p (consideration_allocno_bitmap,\n-\t\t\t\t ALLOCNO_NUM (conflict_a))\n-\t\t  || ((!ALLOCNO_ASSIGNED_P (conflict_a)\n-\t\t       || ALLOCNO_HARD_REGNO (conflict_a) < 0)\n-\t\t      && !(hard_reg_set_intersect_p\n-\t\t\t   (profitable_hard_regs,\n-\t\t\t    ALLOCNO_COLOR_DATA\n-\t\t\t    (conflict_a)->profitable_hard_regs)))))\n-\t    continue;\n+\t      && ((!ALLOCNO_ASSIGNED_P (conflict_a)\n+\t\t   || ALLOCNO_HARD_REGNO (conflict_a) < 0)\n+\t\t  && !(hard_reg_set_intersect_p\n+\t\t       (profitable_hard_regs,\n+\t\t\tALLOCNO_COLOR_DATA\n+\t\t\t(conflict_a)->profitable_hard_regs))))\n+\t    {\n+\t      /* All conflict allocnos are in consideration bitmap\n+\t\t when retry_p is false.  It might change in future and\n+\t\t if it happens the assert will be broken.  It means\n+\t\t the code should be modified for the new\n+\t\t assumptions.  */\n+\t      ira_assert (bitmap_bit_p (consideration_allocno_bitmap,\n+\t\t\t\t\tALLOCNO_NUM (conflict_a)));\n+\t      continue;\n+\t    }\n \t  conflict_aclass = ALLOCNO_CLASS (conflict_a);\n \t  ira_assert (ira_reg_classes_intersect_p\n \t\t      [aclass][conflict_aclass]);"}]}