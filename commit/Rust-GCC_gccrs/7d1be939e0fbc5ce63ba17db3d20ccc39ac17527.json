{"sha": "7d1be939e0fbc5ce63ba17db3d20ccc39ac17527", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2QxYmU5MzllMGZiYzVjZTYzYmExN2RiM2QyMGNjYzM5YWMxNzUyNw==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@acm.org", "date": "2020-09-16T15:05:26Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@acm.org", "date": "2020-09-16T15:10:44Z"}, "message": "c++: Avoid confusing 'nested' name\n\ninstantiate_body has a local var call 'nested', which indicates that\nthis instantiation was caused during the body of some function -- not\nnecessarily its containing scope.  That's confusing, let's just use\n'current_function_decl' directly.  Then we can also simplify the\npush_to_top_level logic, which /does/ indicate whether this is an\nactual nested function.  (C++ does not have nested functions, but OMP\nODRs fall into that category.  A follow up patch will use that more\nusual meaning of 'nested' wrt to functions.)\n\n\tgcc/cp/\n\t* pt.c (instantiate_body): Remove 'nested' var, simplify\n\tpush_to_top logic.", "tree": {"sha": "e05d7d804829bfdbc5f724c1f1f64a466dc107d4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e05d7d804829bfdbc5f724c1f1f64a466dc107d4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7d1be939e0fbc5ce63ba17db3d20ccc39ac17527", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7d1be939e0fbc5ce63ba17db3d20ccc39ac17527", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7d1be939e0fbc5ce63ba17db3d20ccc39ac17527", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7d1be939e0fbc5ce63ba17db3d20ccc39ac17527/comments", "author": {"login": "urnathan", "id": 13103001, "node_id": "MDQ6VXNlcjEzMTAzMDAx", "avatar_url": "https://avatars.githubusercontent.com/u/13103001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/urnathan", "html_url": "https://github.com/urnathan", "followers_url": "https://api.github.com/users/urnathan/followers", "following_url": "https://api.github.com/users/urnathan/following{/other_user}", "gists_url": "https://api.github.com/users/urnathan/gists{/gist_id}", "starred_url": "https://api.github.com/users/urnathan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/urnathan/subscriptions", "organizations_url": "https://api.github.com/users/urnathan/orgs", "repos_url": "https://api.github.com/users/urnathan/repos", "events_url": "https://api.github.com/users/urnathan/events{/privacy}", "received_events_url": "https://api.github.com/users/urnathan/received_events", "type": "User", "site_admin": false}, "committer": {"login": "urnathan", "id": 13103001, "node_id": "MDQ6VXNlcjEzMTAzMDAx", "avatar_url": "https://avatars.githubusercontent.com/u/13103001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/urnathan", "html_url": "https://github.com/urnathan", "followers_url": "https://api.github.com/users/urnathan/followers", "following_url": "https://api.github.com/users/urnathan/following{/other_user}", "gists_url": "https://api.github.com/users/urnathan/gists{/gist_id}", "starred_url": "https://api.github.com/users/urnathan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/urnathan/subscriptions", "organizations_url": "https://api.github.com/users/urnathan/orgs", "repos_url": "https://api.github.com/users/urnathan/repos", "events_url": "https://api.github.com/users/urnathan/events{/privacy}", "received_events_url": "https://api.github.com/users/urnathan/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "91347c3bbf788ede4af89f46206991c47fa8aceb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/91347c3bbf788ede4af89f46206991c47fa8aceb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/91347c3bbf788ede4af89f46206991c47fa8aceb"}], "stats": {"total": 16, "additions": 7, "deletions": 9}, "files": [{"sha": "289452ab740c88650e6172671ff58b2c19ead71d", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 7, "deletions": 9, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d1be939e0fbc5ce63ba17db3d20ccc39ac17527/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d1be939e0fbc5ce63ba17db3d20ccc39ac17527/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=7d1be939e0fbc5ce63ba17db3d20ccc39ac17527", "patch": "@@ -25458,17 +25458,15 @@ instantiate_body (tree pattern, tree args, tree d)\n   tree td = pattern;\n   tree code_pattern = DECL_TEMPLATE_RESULT (td);\n \n-  tree fn_context = decl_function_context (d);\n-  if (LAMBDA_FUNCTION_P (d))\n-    /* tsubst_lambda_expr resolved any references to enclosing functions.  */\n-    fn_context = NULL_TREE;\n-  bool nested = current_function_decl != NULL_TREE;\n-  bool push_to_top = !(nested && fn_context == current_function_decl);\n-\n   vec<tree> omp_privatization_save;\n-  if (nested)\n+  if (current_function_decl)\n     save_omp_privatization_clauses (omp_privatization_save);\n \n+  bool push_to_top\n+    = !(current_function_decl\n+\t&& !LAMBDA_FUNCTION_P (d)\n+\t&& decl_function_context (d) == current_function_decl);\n+\n   if (push_to_top)\n     push_to_top_level ();\n   else\n@@ -25595,7 +25593,7 @@ instantiate_body (tree pattern, tree args, tree d)\n   else\n     pop_function_context ();\n \n-  if (nested)\n+  if (current_function_decl)\n     restore_omp_privatization_clauses (omp_privatization_save);\n }\n "}]}