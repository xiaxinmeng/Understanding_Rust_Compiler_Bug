{"sha": "3c18e32037a4ab02afd22a535a96ac4cc3f88b16", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2MxOGUzMjAzN2E0YWIwMmFmZDIyYTUzNWE5NmFjNGNjM2Y4OGIxNg==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@adacore.com", "date": "2021-05-31T08:59:01Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2021-07-08T13:34:21Z"}, "message": "[Ada] AI12-0156 Use subtype indication in generalized iterators\n\ngcc/ada/\n\n\t* par-ch5.adb (P_Iterator_Specification): Add support for access\n\tdefinition in loop parameter.\n\t* sem_ch5.adb (Check_Subtype_Indication): Renamed...\n\t(Check_Subtype_Definition): ... into this and check for conformance\n\ton access definitions, and improve error messages.\n\t(Analyze_Iterator_Specification): Add support for access definition\n\tin loop parameter.", "tree": {"sha": "cfaa236e3e282bbe59096fe242ca0e00c6250546", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cfaa236e3e282bbe59096fe242ca0e00c6250546"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3c18e32037a4ab02afd22a535a96ac4cc3f88b16", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3c18e32037a4ab02afd22a535a96ac4cc3f88b16", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3c18e32037a4ab02afd22a535a96ac4cc3f88b16", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3c18e32037a4ab02afd22a535a96ac4cc3f88b16/comments", "author": {"login": "ArnaudCharlet", "id": 30291825, "node_id": "MDQ6VXNlcjMwMjkxODI1", "avatar_url": "https://avatars.githubusercontent.com/u/30291825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ArnaudCharlet", "html_url": "https://github.com/ArnaudCharlet", "followers_url": "https://api.github.com/users/ArnaudCharlet/followers", "following_url": "https://api.github.com/users/ArnaudCharlet/following{/other_user}", "gists_url": "https://api.github.com/users/ArnaudCharlet/gists{/gist_id}", "starred_url": "https://api.github.com/users/ArnaudCharlet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ArnaudCharlet/subscriptions", "organizations_url": "https://api.github.com/users/ArnaudCharlet/orgs", "repos_url": "https://api.github.com/users/ArnaudCharlet/repos", "events_url": "https://api.github.com/users/ArnaudCharlet/events{/privacy}", "received_events_url": "https://api.github.com/users/ArnaudCharlet/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "629c82d729f1439718aa3759416cdb6cb03052f1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/629c82d729f1439718aa3759416cdb6cb03052f1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/629c82d729f1439718aa3759416cdb6cb03052f1"}], "stats": {"total": 95, "additions": 80, "deletions": 15}, "files": [{"sha": "1e55181f2fef4b3280efab0cbd2f729e6537a7ca", "filename": "gcc/ada/par-ch5.adb", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c18e32037a4ab02afd22a535a96ac4cc3f88b16/gcc%2Fada%2Fpar-ch5.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c18e32037a4ab02afd22a535a96ac4cc3f88b16/gcc%2Fada%2Fpar-ch5.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-ch5.adb?ref=3c18e32037a4ab02afd22a535a96ac4cc3f88b16", "patch": "@@ -1741,7 +1741,15 @@ package body Ch5 is\n \n       if Token = Tok_Colon then\n          Scan;  --  past :\n-         Set_Subtype_Indication (Node1, P_Subtype_Indication);\n+\n+         if Token = Tok_Access then\n+            Error_Msg_Ada_2022_Feature\n+              (\"access definition in loop parameter\", Token_Ptr);\n+            Set_Subtype_Indication (Node1, P_Access_Definition (False));\n+\n+         else\n+            Set_Subtype_Indication (Node1, P_Subtype_Indication);\n+         end if;\n       end if;\n \n       if Token = Tok_Of then\n@@ -1761,7 +1769,7 @@ package body Ch5 is\n          Set_Of_Present (Node1);\n          Error_Msg_N\n            (\"subtype indication is only legal on an element iterator\",\n-              Subtype_Indication (Node1));\n+            Subtype_Indication (Node1));\n \n       else\n          return Error;"}, {"sha": "f9813a5e4fae4064f0993e094946c0c4e99b46f2", "filename": "gcc/ada/sem_ch5.adb", "status": "modified", "additions": 70, "deletions": 13, "changes": 83, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c18e32037a4ab02afd22a535a96ac4cc3f88b16/gcc%2Fada%2Fsem_ch5.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c18e32037a4ab02afd22a535a96ac4cc3f88b16/gcc%2Fada%2Fsem_ch5.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch5.adb?ref=3c18e32037a4ab02afd22a535a96ac4cc3f88b16", "patch": "@@ -2176,9 +2176,11 @@ package body Sem_Ch5 is\n       --  indicator, verify that the container type has an Iterate aspect that\n       --  implements the reversible iterator interface.\n \n-      procedure Check_Subtype_Indication (Comp_Type : Entity_Id);\n+      procedure Check_Subtype_Definition (Comp_Type : Entity_Id);\n       --  If a subtype indication is present, verify that it is consistent\n       --  with the component type of the array or container name.\n+      --  In Ada 2022, the subtype indication may be an access definition,\n+      --  if the array or container has elements of an anonymous access type.\n \n       function Get_Cursor_Type (Typ : Entity_Id) return Entity_Id;\n       --  For containers with Iterator and related aspects, the cursor is\n@@ -2209,24 +2211,46 @@ package body Sem_Ch5 is\n       end Check_Reverse_Iteration;\n \n       -------------------------------\n-      --  Check_Subtype_Indication --\n+      --  Check_Subtype_Definition --\n       -------------------------------\n \n-      procedure Check_Subtype_Indication (Comp_Type : Entity_Id) is\n+      procedure Check_Subtype_Definition (Comp_Type : Entity_Id) is\n       begin\n-         if Present (Subt)\n-           and then (not Covers (Base_Type ((Bas)), Comp_Type)\n+         if not Present (Subt) then\n+            return;\n+         end if;\n+\n+         if Is_Anonymous_Access_Type (Entity (Subt)) then\n+            if not Is_Anonymous_Access_Type (Comp_Type) then\n+               Error_Msg_NE\n+                 (\"component type& is not an anonymous access\",\n+                  Subt, Comp_Type);\n+\n+            elsif not Conforming_Types\n+                (Designated_Type (Entity (Subt)),\n+                 Designated_Type (Comp_Type),\n+                 Fully_Conformant)\n+            then\n+               Error_Msg_NE\n+                 (\"subtype indication does not match component type&\",\n+                  Subt, Comp_Type);\n+            end if;\n+\n+         elsif Present (Subt)\n+           and then (not Covers (Base_Type (Bas), Comp_Type)\n                       or else not Subtypes_Statically_Match (Bas, Comp_Type))\n          then\n             if Is_Array_Type (Typ) then\n-               Error_Msg_N\n-                 (\"subtype indication does not match component type\", Subt);\n+               Error_Msg_NE\n+                 (\"subtype indication does not match component type&\",\n+                  Subt, Comp_Type);\n             else\n-               Error_Msg_N\n-                 (\"subtype indication does not match element type\", Subt);\n+               Error_Msg_NE\n+                 (\"subtype indication does not match element type&\",\n+                  Subt, Comp_Type);\n             end if;\n          end if;\n-      end Check_Subtype_Indication;\n+      end Check_Subtype_Definition;\n \n       ---------------------\n       -- Get_Cursor_Type --\n@@ -2288,6 +2312,39 @@ package body Sem_Ch5 is\n                Analyze (Decl);\n                Rewrite (Subt, New_Occurrence_Of (S, Sloc (Subt)));\n             end;\n+\n+         --  Ada 2022: the subtype definition may be for an anonymous\n+         --  access type.\n+\n+         elsif Nkind (Subt) = N_Access_Definition then\n+            declare\n+               S    : constant Entity_Id := Make_Temporary (Sloc (Subt), 'S');\n+               Decl : Node_Id;\n+            begin\n+               if Present (Subtype_Mark (Subt)) then\n+                  Decl :=\n+                    Make_Full_Type_Declaration (Loc,\n+                      Defining_Identifier => S,\n+                      Type_Definition     =>\n+                        Make_Access_To_Object_Definition (Loc,\n+                          All_Present        => True,\n+                          Subtype_Indication =>\n+                            New_Copy_Tree (Subtype_Mark (Subt))));\n+\n+               else\n+                  Decl :=\n+                    Make_Full_Type_Declaration (Loc,\n+                      Defining_Identifier => S,\n+                      Type_Definition  =>\n+                        New_Copy_Tree\n+                          (Access_To_Subprogram_Definition (Subt)));\n+               end if;\n+\n+               Insert_Before (Parent (Parent (N)), Decl);\n+               Analyze (Decl);\n+               Freeze_Before (First (Statements (Parent (Parent (N)))), S);\n+               Rewrite (Subt, New_Occurrence_Of (S, Sloc (Subt)));\n+            end;\n          else\n             Analyze (Subt);\n          end if;\n@@ -2565,7 +2622,7 @@ package body Sem_Ch5 is\n                   & \"component of a mutable object\", N);\n             end if;\n \n-            Check_Subtype_Indication (Component_Type (Typ));\n+            Check_Subtype_Definition (Component_Type (Typ));\n \n          --  Here we have a missing Range attribute\n \n@@ -2615,7 +2672,7 @@ package body Sem_Ch5 is\n                   end if;\n                end;\n \n-               Check_Subtype_Indication (Etype (Def_Id));\n+               Check_Subtype_Definition (Etype (Def_Id));\n \n             --  For a predefined container, the type of the loop variable is\n             --  the Iterator_Element aspect of the container type.\n@@ -2642,7 +2699,7 @@ package body Sem_Ch5 is\n                      Cursor_Type := Get_Cursor_Type (Typ);\n                      pragma Assert (Present (Cursor_Type));\n \n-                     Check_Subtype_Indication (Etype (Def_Id));\n+                     Check_Subtype_Definition (Etype (Def_Id));\n \n                      --  If the container has a variable indexing aspect, the\n                      --  element is a variable and is modifiable in the loop."}]}