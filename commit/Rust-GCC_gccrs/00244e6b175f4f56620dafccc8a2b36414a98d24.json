{"sha": "00244e6b175f4f56620dafccc8a2b36414a98d24", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDAyNDRlNmIxNzVmNGY1NjYyMGRhZmNjYzhhMmIzNjQxNGE5OGQyNA==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-02-25T14:00:07Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-02-25T14:00:07Z"}, "message": "(if_then_else_cond): Fix typo in narrowing of a SUBREG.\n\nFrom-SVN: r6624", "tree": {"sha": "146bb0e278c0990fc362c686a868ddb36e3b409c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/146bb0e278c0990fc362c686a868ddb36e3b409c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/00244e6b175f4f56620dafccc8a2b36414a98d24", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/00244e6b175f4f56620dafccc8a2b36414a98d24", "html_url": "https://github.com/Rust-GCC/gccrs/commit/00244e6b175f4f56620dafccc8a2b36414a98d24", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/00244e6b175f4f56620dafccc8a2b36414a98d24/comments", "author": null, "committer": null, "parents": [{"sha": "59e6092731b6cb014c40f735f7e2f0bb3d8cb74b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/59e6092731b6cb014c40f735f7e2f0bb3d8cb74b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/59e6092731b6cb014c40f735f7e2f0bb3d8cb74b"}], "stats": {"total": 7, "additions": 3, "deletions": 4}, "files": [{"sha": "da6daa36c163ea0611108232f6c17310c3748207", "filename": "gcc/combine.c", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/00244e6b175f4f56620dafccc8a2b36414a98d24/gcc%2Fcombine.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/00244e6b175f4f56620dafccc8a2b36414a98d24/gcc%2Fcombine.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcombine.c?ref=00244e6b175f4f56620dafccc8a2b36414a98d24", "patch": "@@ -6238,11 +6238,10 @@ if_then_else_cond (x, ptrue, pfalse)\n \t   && 0 != (cond0 = if_then_else_cond (SUBREG_REG (x),\n \t\t\t\t\t       &true0, &false0)))\n     {\n-      enum machine_mode inner_mode = GET_MODE (SUBREG_REG (x));\n-      unsigned HOST_WIDE_INT mask = GET_MODE_MASK (inner_mode);\n+      *ptrue = force_to_mode (true0, mode, GET_MODE_MASK (mode), NULL_RTX, 0);\n+      *pfalse\n+\t= force_to_mode (false0, mode, GET_MODE_MASK (mode), NULL_RTX, 0);\n \n-      *ptrue = force_to_mode (true0, inner_mode, mask, NULL_RTX, 0);\n-      *pfalse = force_to_mode (false0, inner_mode, mask, NULL_RTX, 0);\n       return cond0;\n     }\n "}]}