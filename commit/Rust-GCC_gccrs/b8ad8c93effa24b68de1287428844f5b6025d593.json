{"sha": "b8ad8c93effa24b68de1287428844f5b6025d593", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjhhZDhjOTNlZmZhMjRiNjhkZTEyODc0Mjg4NDRmNWI2MDI1ZDU5Mw==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@codesourcery.com", "date": "2005-10-14T16:36:49Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2005-10-14T16:36:49Z"}, "message": "re PR c++/17796 (Too many unused parameter warnings emitted.)\n\n\tPR c++/17796\n\t* optimize.c (update_cloned_parm): Add FIRST parameter. Use it.\n\t(maybe_clone_body): Track the first clone.\n\nFrom-SVN: r105415", "tree": {"sha": "bd89fe14baea44bc1be6e47a3864aa646430f170", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bd89fe14baea44bc1be6e47a3864aa646430f170"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b8ad8c93effa24b68de1287428844f5b6025d593", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b8ad8c93effa24b68de1287428844f5b6025d593", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b8ad8c93effa24b68de1287428844f5b6025d593", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b8ad8c93effa24b68de1287428844f5b6025d593/comments", "author": null, "committer": null, "parents": [{"sha": "d2c979efb7a2638849609b7a4ce48ea9f12dc9e8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d2c979efb7a2638849609b7a4ce48ea9f12dc9e8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d2c979efb7a2638849609b7a4ce48ea9f12dc9e8"}], "stats": {"total": 18, "additions": 13, "deletions": 5}, "files": [{"sha": "00e0af2a0830bfd4640bdbc77223dc6f4ce3f03a", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b8ad8c93effa24b68de1287428844f5b6025d593/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b8ad8c93effa24b68de1287428844f5b6025d593/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=b8ad8c93effa24b68de1287428844f5b6025d593", "patch": "@@ -1,3 +1,9 @@\n+2005-10-14  Nathan Sidwell  <nathan@codesourcery.com>\n+\n+\tPR c++/17796\n+\t* optimize.c (update_cloned_parm): Add FIRST parameter. Use it.\n+\t(maybe_clone_body): Track the first clone.\n+\n 2005-10-13  Nathan Sidwell  <nathan@codesourcery.com>\n \n \tPR c++/23984"}, {"sha": "7ac24376ed1c6c5ab6b56ce11395fbf5a1fe9ea4", "filename": "gcc/cp/optimize.c", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b8ad8c93effa24b68de1287428844f5b6025d593/gcc%2Fcp%2Foptimize.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b8ad8c93effa24b68de1287428844f5b6025d593/gcc%2Fcp%2Foptimize.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Foptimize.c?ref=b8ad8c93effa24b68de1287428844f5b6025d593", "patch": "@@ -45,15 +45,15 @@ Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA\n \n /* Prototypes.  */\n \n-static void update_cloned_parm (tree, tree);\n+static void update_cloned_parm (tree, tree, bool);\n \n /* CLONED_PARM is a copy of CLONE, generated for a cloned constructor\n    or destructor.  Update it to ensure that the source-position for\n    the cloned parameter matches that for the original, and that the\n    debugging generation code will be able to find the original PARM.  */\n \n static void\n-update_cloned_parm (tree parm, tree cloned_parm)\n+update_cloned_parm (tree parm, tree cloned_parm, bool first)\n {\n   DECL_ABSTRACT_ORIGIN (cloned_parm) = parm;\n \n@@ -63,7 +63,7 @@ update_cloned_parm (tree parm, tree cloned_parm)\n   /* The definition might have different constness.  */\n   TREE_READONLY (cloned_parm) = TREE_READONLY (parm);\n \n-  TREE_USED (cloned_parm) = TREE_USED (parm);\n+  TREE_USED (cloned_parm) = !first || TREE_USED (parm);\n \n   /* The name may have changed from the declaration.  */\n   DECL_NAME (cloned_parm) = DECL_NAME (parm);\n@@ -79,6 +79,7 @@ bool\n maybe_clone_body (tree fn)\n {\n   tree clone;\n+  bool first = true;\n \n   /* We only clone constructors and destructors.  */\n   if (!DECL_MAYBE_IN_CHARGE_CONSTRUCTOR_P (fn)\n@@ -118,7 +119,7 @@ maybe_clone_body (tree fn)\n       parm = DECL_ARGUMENTS (fn);\n       clone_parm = DECL_ARGUMENTS (clone);\n       /* Update the `this' parameter, which is always first.  */\n-      update_cloned_parm (parm, clone_parm);\n+      update_cloned_parm (parm, clone_parm, first);\n       parm = TREE_CHAIN (parm);\n       clone_parm = TREE_CHAIN (clone_parm);\n       if (DECL_HAS_IN_CHARGE_PARM_P (fn))\n@@ -130,7 +131,7 @@ maybe_clone_body (tree fn)\n       for (; parm;\n \t   parm = TREE_CHAIN (parm), clone_parm = TREE_CHAIN (clone_parm))\n \t/* Update this parameter.  */\n-\tupdate_cloned_parm (parm, clone_parm);\n+\tupdate_cloned_parm (parm, clone_parm, first);\n \n       /* Start processing the function.  */\n       start_preparsed_function (clone, NULL_TREE, SF_PRE_PARSED);\n@@ -206,6 +207,7 @@ maybe_clone_body (tree fn)\n       finish_function (0);\n       BLOCK_ABSTRACT_ORIGIN (DECL_INITIAL (clone)) = DECL_INITIAL (fn);\n       expand_or_defer_fn (clone);\n+      first = false;\n     }\n   pop_from_top_level ();\n "}]}