{"sha": "ee9dd1c3022aa01ed3733cf58ed1f490872fa214", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWU5ZGQxYzMwMjJhYTAxZWQzNzMzY2Y1OGVkMWY0OTA4NzJmYTIxNA==", "commit": {"author": {"name": "Richard Sandiford", "email": "richard.sandiford@arm.com", "date": "2020-11-18T18:40:32Z"}, "committer": {"name": "Richard Sandiford", "email": "richard.sandiford@arm.com", "date": "2020-11-18T18:40:32Z"}, "message": "testsuite: Adjust gcc.dg/vect/slp-21.c for Arm targets\n\nOn arm* and aarch64* targets, we can vectorise the second of the main\nloops using SLP, not just the third.  As the comments say, whether this\nis supported depends on a very specific permutation, so it seemed better\nto use direct target selectors.\n\ngcc/testsuite/\n\t* gcc.dg/vect/slp-21.c: Expect 4 SLP instances to be vectorized\n\ton arm* and aarch64* targets.", "tree": {"sha": "7a39e9eca4468908792cbf5d656ae09e94b1877b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7a39e9eca4468908792cbf5d656ae09e94b1877b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ee9dd1c3022aa01ed3733cf58ed1f490872fa214", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ee9dd1c3022aa01ed3733cf58ed1f490872fa214", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ee9dd1c3022aa01ed3733cf58ed1f490872fa214", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ee9dd1c3022aa01ed3733cf58ed1f490872fa214/comments", "author": {"login": "rsandifo-arm", "id": 28043039, "node_id": "MDQ6VXNlcjI4MDQzMDM5", "avatar_url": "https://avatars.githubusercontent.com/u/28043039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo-arm", "html_url": "https://github.com/rsandifo-arm", "followers_url": "https://api.github.com/users/rsandifo-arm/followers", "following_url": "https://api.github.com/users/rsandifo-arm/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo-arm/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo-arm/orgs", "repos_url": "https://api.github.com/users/rsandifo-arm/repos", "events_url": "https://api.github.com/users/rsandifo-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo-arm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rsandifo-arm", "id": 28043039, "node_id": "MDQ6VXNlcjI4MDQzMDM5", "avatar_url": "https://avatars.githubusercontent.com/u/28043039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo-arm", "html_url": "https://github.com/rsandifo-arm", "followers_url": "https://api.github.com/users/rsandifo-arm/followers", "following_url": "https://api.github.com/users/rsandifo-arm/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo-arm/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo-arm/orgs", "repos_url": "https://api.github.com/users/rsandifo-arm/repos", "events_url": "https://api.github.com/users/rsandifo-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo-arm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6a9cd27ac6721ff378210c2851fb716c73f2a750", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6a9cd27ac6721ff378210c2851fb716c73f2a750", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6a9cd27ac6721ff378210c2851fb716c73f2a750"}], "stats": {"total": 12, "additions": 11, "deletions": 1}, "files": [{"sha": "117d65c5ddb0cfe9b29cb36add35a125ad187d71", "filename": "gcc/testsuite/gcc.dg/vect/slp-21.c", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee9dd1c3022aa01ed3733cf58ed1f490872fa214/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fslp-21.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee9dd1c3022aa01ed3733cf58ed1f490872fa214/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fslp-21.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fslp-21.c?ref=ee9dd1c3022aa01ed3733cf58ed1f490872fa214", "patch": "@@ -201,6 +201,16 @@ int main (void)\n \n /* { dg-final { scan-tree-dump-times \"vectorized 4 loops\" 1 \"vect\"  { target { vect_strided4 || vect_extract_even_odd } } } } */\n /* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\"  { target  { ! { vect_strided4 || vect_extract_even_odd } } } } } */\n-/* { dg-final { scan-tree-dump-times \"vectorizing stmts using SLP\" 2 \"vect\" { target vect_strided4 } } } */\n+/* Some targets can vectorize the second of the three main loops using\n+   hybrid SLP.  For 128-bit vectors, the required 4->3 permutations are:\n+\n+   { 0, 1, 2, 4, 5, 6, 8, 9 }\n+   { 2, 4, 5, 6, 8, 9, 10, 12 }\n+   { 5, 6, 8, 9, 10, 12, 13, 14 }\n+\n+   Not all vect_perm targets support that, and it's a bit too specific to have\n+   its own effective-target selector, so we just test targets directly.  */\n+/* { dg-final { scan-tree-dump-times \"vectorizing stmts using SLP\" 4 \"vect\" { target { aarch64*-*-* arm*-*-* } } } } */\n+/* { dg-final { scan-tree-dump-times \"vectorizing stmts using SLP\" 2 \"vect\" { target { vect_strided4 && { ! { aarch64*-*-* arm*-*-* } } } } } } */\n /* { dg-final { scan-tree-dump-times \"vectorizing stmts using SLP\" 0 \"vect\"  { target { ! { vect_strided4 } } } } } */\n   "}]}