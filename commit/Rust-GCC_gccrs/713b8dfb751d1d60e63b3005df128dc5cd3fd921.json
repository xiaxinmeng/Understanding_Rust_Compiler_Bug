{"sha": "713b8dfb751d1d60e63b3005df128dc5cd3fd921", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzEzYjhkZmI3NTFkMWQ2MGU2M2IzMDA1ZGYxMjhkYzVjZDNmZDkyMQ==", "commit": {"author": {"name": "Aldy Hernandez", "email": "aldyh@redhat.com", "date": "2012-01-05T13:36:32Z"}, "committer": {"name": "Aldy Hernandez", "email": "aldyh@gcc.gnu.org", "date": "2012-01-05T13:36:32Z"}, "message": "re PR middle-end/51472 (ICE: verify_gimple failed: invalid rhs for gimple memory store with -fgnu-tm --param tm-max-aggregate-size=32)\n\n        PR middle-end/51472\n        * trans-mem.c (expand_assign_tm): Handle TM_MEMMOVE loads correctly.\ntestsuite/\n        PR middle-end/51472\n        * gcc.dg/tm/memopt-6.c: Adjust regexp.\n\nFrom-SVN: r182908", "tree": {"sha": "7593c75bb507415d098642b7f803184801986170", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7593c75bb507415d098642b7f803184801986170"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/713b8dfb751d1d60e63b3005df128dc5cd3fd921", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/713b8dfb751d1d60e63b3005df128dc5cd3fd921", "html_url": "https://github.com/Rust-GCC/gccrs/commit/713b8dfb751d1d60e63b3005df128dc5cd3fd921", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/713b8dfb751d1d60e63b3005df128dc5cd3fd921/comments", "author": {"login": "aldyh", "id": 12937877, "node_id": "MDQ6VXNlcjEyOTM3ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/12937877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aldyh", "html_url": "https://github.com/aldyh", "followers_url": "https://api.github.com/users/aldyh/followers", "following_url": "https://api.github.com/users/aldyh/following{/other_user}", "gists_url": "https://api.github.com/users/aldyh/gists{/gist_id}", "starred_url": "https://api.github.com/users/aldyh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aldyh/subscriptions", "organizations_url": "https://api.github.com/users/aldyh/orgs", "repos_url": "https://api.github.com/users/aldyh/repos", "events_url": "https://api.github.com/users/aldyh/events{/privacy}", "received_events_url": "https://api.github.com/users/aldyh/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "76f5732818a46d36dd1ccd80545df81053308a96", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/76f5732818a46d36dd1ccd80545df81053308a96", "html_url": "https://github.com/Rust-GCC/gccrs/commit/76f5732818a46d36dd1ccd80545df81053308a96"}], "stats": {"total": 32, "additions": 29, "deletions": 3}, "files": [{"sha": "cc91a4c94139266b4a3245e263e8d650bc521835", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/713b8dfb751d1d60e63b3005df128dc5cd3fd921/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/713b8dfb751d1d60e63b3005df128dc5cd3fd921/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=713b8dfb751d1d60e63b3005df128dc5cd3fd921", "patch": "@@ -74,6 +74,11 @@\n \t(ia64-hp-*vms*): Remove.\n \t* config/vms/xm-vms64.h: Delete.\n \n+2012-01-04  Aldy Hernandez  <aldyh@redhat.com>\n+\n+\tPR middle-end/51472\n+\t* trans-mem.c (expand_assign_tm): Handle TM_MEMMOVE loads correctly.\n+\n 2012-01-04  Aldy Hernandez  <aldyh@redhat.com>\n \n \t* opts.c (finish_options): Remove duplicate sorry."}, {"sha": "7b85906faf6ffdc7fbae6418e24d378d85432323", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/713b8dfb751d1d60e63b3005df128dc5cd3fd921/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/713b8dfb751d1d60e63b3005df128dc5cd3fd921/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=713b8dfb751d1d60e63b3005df128dc5cd3fd921", "patch": "@@ -1,3 +1,8 @@\n+2012-01-05  Aldy Hernandez  <aldyh@redhat.com>\n+\n+\tPR middle-end/51472\n+\t* gcc.dg/tm/memopt-6.c: Adjust regexp.\n+\n 2012-01-05  Richard Guenther  <rguenther@suse.de>\n \n \tPR lto/41576"}, {"sha": "810a5595db1c3d2878e23aec5a06755fce8e45f8", "filename": "gcc/testsuite/gcc.dg/tm/memopt-6.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/713b8dfb751d1d60e63b3005df128dc5cd3fd921/gcc%2Ftestsuite%2Fgcc.dg%2Ftm%2Fmemopt-6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/713b8dfb751d1d60e63b3005df128dc5cd3fd921/gcc%2Ftestsuite%2Fgcc.dg%2Ftm%2Fmemopt-6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftm%2Fmemopt-6.c?ref=713b8dfb751d1d60e63b3005df128dc5cd3fd921", "patch": "@@ -17,5 +17,5 @@ int f()\n   return lala.x[i];\n }\n \n-/* { dg-final { scan-tree-dump-times \"memmoveRtWt \\\\\\(&lala, &lacopy\" 1 \"tmedge\" } } */\n+/* { dg-final { scan-tree-dump-times \"memmoveRtWt \\\\\\(.*, &lacopy\" 1 \"tmedge\" } } */\n /* { dg-final { cleanup-tree-dump \"tmedge\" } } */"}, {"sha": "538d798a70dea760687aaa4a1a65b03233bb5ee0", "filename": "gcc/trans-mem.c", "status": "modified", "additions": 18, "deletions": 2, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/713b8dfb751d1d60e63b3005df128dc5cd3fd921/gcc%2Ftrans-mem.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/713b8dfb751d1d60e63b3005df128dc5cd3fd921/gcc%2Ftrans-mem.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftrans-mem.c?ref=713b8dfb751d1d60e63b3005df128dc5cd3fd921", "patch": "@@ -2174,7 +2174,7 @@ expand_assign_tm (struct tm_region *region, gimple_stmt_iterator *gsi)\n     }\n   if (!gcall)\n     {\n-      tree lhs_addr, rhs_addr;\n+      tree lhs_addr, rhs_addr, tmp;\n \n       if (load_p)\n \ttransaction_subcode_ior (region, GTMA_HAVE_LOAD);\n@@ -2183,13 +2183,29 @@ expand_assign_tm (struct tm_region *region, gimple_stmt_iterator *gsi)\n \n       /* ??? Figure out if there's any possible overlap between the LHS\n \t and the RHS and if not, use MEMCPY.  */\n-      lhs_addr = gimplify_addr (gsi, lhs);\n+\n+      if (load_p && is_gimple_non_addressable (lhs))\n+\t{\n+\t  tmp = create_tmp_var (TREE_TYPE (lhs), NULL);\n+\t  lhs_addr = build_fold_addr_expr (tmp);\n+\t}\n+      else\n+\t{\n+\t  tmp = NULL_TREE;\n+\t  lhs_addr = gimplify_addr (gsi, lhs);\n+\t}\n       rhs_addr = gimplify_addr (gsi, rhs);\n       gcall = gimple_build_call (builtin_decl_explicit (BUILT_IN_TM_MEMMOVE),\n \t\t\t\t 3, lhs_addr, rhs_addr,\n \t\t\t\t TYPE_SIZE_UNIT (TREE_TYPE (lhs)));\n       gimple_set_location (gcall, loc);\n       gsi_insert_before (gsi, gcall, GSI_SAME_STMT);\n+\n+      if (tmp)\n+\t{\n+\t  gcall = gimple_build_assign (lhs, tmp);\n+\t  gsi_insert_before (gsi, gcall, GSI_SAME_STMT);\n+\t}\n     }\n \n   /* Now that we have the load/store in its instrumented form, add"}]}