{"sha": "796c0c9367b1e4845b09227f296060ded809091a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Nzk2YzBjOTM2N2IxZTQ4NDViMDkyMjdmMjk2MDYwZGVkODA5MDkxYQ==", "commit": {"author": {"name": "Tom Wood", "email": "wood@gnu.org", "date": "1993-04-09T23:07:39Z"}, "committer": {"name": "Tom Wood", "email": "wood@gnu.org", "date": "1993-04-09T23:07:39Z"}, "message": "Incorporate the Objective-C keywords from\n\tobjc-parse.gperf and add the new keywords.\n\nFrom-SVN: r4063", "tree": {"sha": "cb711a1dc8f87f5cb639d8ffb1a500d22da18132", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cb711a1dc8f87f5cb639d8ffb1a500d22da18132"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/796c0c9367b1e4845b09227f296060ded809091a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/796c0c9367b1e4845b09227f296060ded809091a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/796c0c9367b1e4845b09227f296060ded809091a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/796c0c9367b1e4845b09227f296060ded809091a/comments", "author": null, "committer": null, "parents": [{"sha": "163051e752f069ee859a25bf90a0b6acc4276a76", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/163051e752f069ee859a25bf90a0b6acc4276a76", "html_url": "https://github.com/Rust-GCC/gccrs/commit/163051e752f069ee859a25bf90a0b6acc4276a76"}], "stats": {"total": 18, "additions": 18, "deletions": 0}, "files": [{"sha": "90cab6ad1d834ddde1c5ec7ab6121a8144a2b146", "filename": "gcc/c-parse.gperf", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/796c0c9367b1e4845b09227f296060ded809091a/gcc%2Fc-parse.gperf", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/796c0c9367b1e4845b09227f296060ded809091a/gcc%2Fc-parse.gperf", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-parse.gperf?ref=796c0c9367b1e4845b09227f296060ded809091a", "patch": "@@ -3,6 +3,18 @@\n %}\n struct resword { char *name; short token; enum rid rid; };\n %%\n+@class, CLASS, NORID\n+@compatibility_alias, ALIAS, NORID\n+@defs, DEFS, NORID\n+@encode, ENCODE, NORID\n+@end, END, NORID\n+@implementation, IMPLEMENTATION, NORID\n+@interface, INTERFACE, NORID\n+@private, PRIVATE, NORID\n+@protected, PROTECTED, NORID\n+@protocol, PROTOCOL, NORID\n+@public, PUBLIC, NORID\n+@selector, SELECTOR, NORID\n __alignof, ALIGNOF, NORID\n __alignof__, ALIGNOF, NORID\n __asm, ASM_KEYWORD, NORID\n@@ -32,6 +44,7 @@ __volatile__, TYPE_QUAL, RID_VOLATILE\n asm, ASM_KEYWORD, NORID\n auto, SCSPEC, RID_AUTO\n break, BREAK, NORID\n+bycopy, TYPE_QUAL, RID_BYCOPY\n case, CASE, NORID\n char, TYPESPEC, RID_CHAR\n const, TYPE_QUAL, RID_CONST\n@@ -45,10 +58,15 @@ extern, SCSPEC, RID_EXTERN\n float, TYPESPEC, RID_FLOAT\n for, FOR, NORID\n goto, GOTO, NORID\n+id, OBJECTNAME, RID_ID\n if, IF, NORID\n+in, TYPE_QUAL, RID_IN\n+inout, TYPE_QUAL, RID_INOUT\n inline, SCSPEC, RID_INLINE\n int, TYPESPEC, RID_INT\n long, TYPESPEC, RID_LONG\n+oneway, TYPE_QUAL, RID_ONEWAY\n+out, TYPE_QUAL, RID_OUT\n register, SCSPEC, RID_REGISTER\n return, RETURN, NORID\n short, TYPESPEC, RID_SHORT"}]}