{"sha": "ba009860aec4619f2424f5bdee812f14572dc3cc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmEwMDk4NjBhZWM0NjE5ZjI0MjRmNWJkZWU4MTJmMTQ1NzJkYzNjYw==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2020-11-18T08:40:45Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2020-11-18T08:40:45Z"}, "message": "openmp: Fix ICE on non-rectangular loop with known 0 iterations\n\nThe loops in the testcase are non-rectangular and have 0 iterations\n(the outer loop iterates, but the inner one never).  In this case we\njust have the overall number of iterations computed (0), and don't have\nfactor and other values computed.  We never need to map logical iterations\nto the individual iterations in that case, and we were crashing during\nexpansion of that code.\n\n2020-11-18  Jakub Jelinek  <jakub@redhat.com>\n\n\tPR middle-end/97862\n\t* omp-expand.c (expand_omp_for_init_vars): Don't use the sqrt path\n\tif number of iterations is constant 0.\n\n\t* c-c++-common/gomp/pr97862.c: New test.", "tree": {"sha": "cbe449b1f6e3baf02b709d47d3fcde2c9007792f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cbe449b1f6e3baf02b709d47d3fcde2c9007792f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ba009860aec4619f2424f5bdee812f14572dc3cc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ba009860aec4619f2424f5bdee812f14572dc3cc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ba009860aec4619f2424f5bdee812f14572dc3cc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ba009860aec4619f2424f5bdee812f14572dc3cc/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4b81528241ca682025d92558ff6aeec91dafdca8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4b81528241ca682025d92558ff6aeec91dafdca8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4b81528241ca682025d92558ff6aeec91dafdca8"}], "stats": {"total": 18, "additions": 17, "deletions": 1}, "files": [{"sha": "c0e94e5e323690842793f422eceb94cf02ca8790", "filename": "gcc/omp-expand.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba009860aec4619f2424f5bdee812f14572dc3cc/gcc%2Fomp-expand.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba009860aec4619f2424f5bdee812f14572dc3cc/gcc%2Fomp-expand.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fomp-expand.c?ref=ba009860aec4619f2424f5bdee812f14572dc3cc", "patch": "@@ -2514,7 +2514,8 @@ expand_omp_for_init_vars (struct omp_for_data *fd, gimple_stmt_iterator *gsi,\n \t      && (TREE_CODE (fd->loop.n2) == INTEGER_CST\n \t\t  || fd->first_inner_iterations)\n \t      && (optab_handler (sqrt_optab, TYPE_MODE (double_type_node))\n-\t\t  != CODE_FOR_nothing))\n+\t\t  != CODE_FOR_nothing)\n+\t      && !integer_zerop (fd->loop.n2))\n \t    {\n \t      tree outer_n1 = fd->adjn1 ? fd->adjn1 : fd->loops[i - 1].n1;\n \t      tree itype = TREE_TYPE (fd->loops[i].v);"}, {"sha": "21aad3f5b29248c605e703c3fa40442a9b6863b6", "filename": "gcc/testsuite/c-c++-common/gomp/pr97862.c", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba009860aec4619f2424f5bdee812f14572dc3cc/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgomp%2Fpr97862.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba009860aec4619f2424f5bdee812f14572dc3cc/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgomp%2Fpr97862.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgomp%2Fpr97862.c?ref=ba009860aec4619f2424f5bdee812f14572dc3cc", "patch": "@@ -0,0 +1,15 @@\n+/* PR middle-end/97862 */\n+\n+void\n+foo (void)\n+{\n+  int i, j;\n+#pragma omp for collapse(2)\n+  for (i = 0; i < 1; ++i)\n+    for (j = 0; j < i; ++j)\n+      ;\n+#pragma omp for collapse(2)\n+  for (i = 0; i < 20; i++)\n+    for (j = 0; j < i - 19; j += 1)\n+      ;\n+}"}]}