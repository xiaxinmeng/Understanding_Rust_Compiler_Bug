{"sha": "7faaf44a7f673db903e6b85b2d8d30e189622973", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2ZhYWY0NGE3ZjY3M2RiOTAzZTZiODViMmQ4ZDMwZTE4OTYyMjk3Mw==", "commit": {"author": {"name": "David Edelsohn", "email": "dje.gcc@gmail.com", "date": "2015-06-15T22:17:47Z"}, "committer": {"name": "David Edelsohn", "email": "dje@gcc.gnu.org", "date": "2015-06-15T22:17:47Z"}, "message": "altivec.md: Delete UNSPEC_VMLADDUHM.\n\n        * altivec.md: Delete UNSPEC_VMLADDUHM.\n        (mulv4si3_p8): New pattern.\n        (mulv4si3): Use it for POWER8.\n        (mulv8hi3): Use vmladduhm with zero addend.\n        (altivec_vmladduhm): Descriptive RTL.\n\nFrom-SVN: r224494", "tree": {"sha": "cdab896ac09385982e7d4583b66c52bd621ecd88", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cdab896ac09385982e7d4583b66c52bd621ecd88"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7faaf44a7f673db903e6b85b2d8d30e189622973", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7faaf44a7f673db903e6b85b2d8d30e189622973", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7faaf44a7f673db903e6b85b2d8d30e189622973", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7faaf44a7f673db903e6b85b2d8d30e189622973/comments", "author": {"login": "edelsohn", "id": 667700, "node_id": "MDQ6VXNlcjY2NzcwMA==", "avatar_url": "https://avatars.githubusercontent.com/u/667700?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edelsohn", "html_url": "https://github.com/edelsohn", "followers_url": "https://api.github.com/users/edelsohn/followers", "following_url": "https://api.github.com/users/edelsohn/following{/other_user}", "gists_url": "https://api.github.com/users/edelsohn/gists{/gist_id}", "starred_url": "https://api.github.com/users/edelsohn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edelsohn/subscriptions", "organizations_url": "https://api.github.com/users/edelsohn/orgs", "repos_url": "https://api.github.com/users/edelsohn/repos", "events_url": "https://api.github.com/users/edelsohn/events{/privacy}", "received_events_url": "https://api.github.com/users/edelsohn/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "6a0f8c015e787ad40bca94c72d34911368762db9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6a0f8c015e787ad40bca94c72d34911368762db9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6a0f8c015e787ad40bca94c72d34911368762db9"}], "stats": {"total": 123, "additions": 62, "deletions": 61}, "files": [{"sha": "019e211968bbff04b7cd51ae581ef289dfe08a8a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7faaf44a7f673db903e6b85b2d8d30e189622973/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7faaf44a7f673db903e6b85b2d8d30e189622973/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7faaf44a7f673db903e6b85b2d8d30e189622973", "patch": "@@ -1,3 +1,11 @@\n+2015-06-15  David Edelsohn  <dje.gcc@gmail.com>\n+\n+\t* altivec.md: Delete UNSPEC_VMLADDUHM.\n+\t(mulv4si3_p8): New pattern.\n+\t(mulv4si3): Use it for POWER8.\n+\t(mulv8hi3): Use vmladduhm with zero addend.\n+\t(altivec_vmladduhm): Descriptive RTL.\n+\n 2015-06-15  Jim Wilson  <jim.wilson@linaro.org>\n \n \t* config/aarch64/aarch64.md (mov<mode>_aarch64): Change alternative 2"}, {"sha": "5cc0b0359e038ebb5aaae8ea4106ce2821e90642", "filename": "gcc/config/rs6000/altivec.md", "status": "modified", "additions": 54, "deletions": 61, "changes": 115, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7faaf44a7f673db903e6b85b2d8d30e189622973/gcc%2Fconfig%2Frs6000%2Faltivec.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7faaf44a7f673db903e6b85b2d8d30e189622973/gcc%2Fconfig%2Frs6000%2Faltivec.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Faltivec.md?ref=7faaf44a7f673db903e6b85b2d8d30e189622973", "patch": "@@ -27,7 +27,6 @@\n    UNSPEC_VMSUMSHS\n    UNSPEC_VMHADDSHS\n    UNSPEC_VMHRADDSHS\n-   UNSPEC_VMLADDUHM\n    UNSPEC_VADDCUW\n    UNSPEC_VADDU\n    UNSPEC_VADDS\n@@ -634,84 +633,79 @@\n ;;   [(set (match_operand:V4SI 0 \"register_operand\" \"=v\")\n ;;         (mult:V4SI (match_operand:V4SI 1 \"register_operand\" \"v\")\n ;;                    (match_operand:V4SI 2 \"register_operand\" \"v\")))]\n+(define_insn \"mulv4si3_p8\"\n+  [(set (match_operand:V4SI 0 \"register_operand\" \"=v\")\n+        (mult:V4SI (match_operand:V4SI 1 \"register_operand\" \"v\")\n+                   (match_operand:V4SI 2 \"register_operand\" \"v\")))]\n+  \"TARGET_P8_VECTOR\"\n+  \"vmuluwm %0,%1,%2\"\n+  [(set_attr \"type\" \"veccomplex\")])\n+\n (define_expand \"mulv4si3\"\n   [(use (match_operand:V4SI 0 \"register_operand\" \"\"))\n    (use (match_operand:V4SI 1 \"register_operand\" \"\"))\n    (use (match_operand:V4SI 2 \"register_operand\" \"\"))]\n    \"TARGET_ALTIVEC\"\n-   \"\n- {\n-   rtx zero;\n-   rtx swap;\n-   rtx small_swap;\n-   rtx sixteen;\n-   rtx one;\n-   rtx two;\n-   rtx low_product;\n-   rtx high_product;\n+{\n+  rtx zero;\n+  rtx swap;\n+  rtx small_swap;\n+  rtx sixteen;\n+  rtx one;\n+  rtx two;\n+  rtx low_product;\n+  rtx high_product;\n        \n-   zero = gen_reg_rtx (V4SImode);\n-   emit_insn (gen_altivec_vspltisw (zero, const0_rtx));\n+  if (TARGET_P8_VECTOR)\n+    {\n+      emit_insn (gen_mulv4si3_p8 (operands[0], operands[1], operands[2]));\n+      DONE;\n+    }\n+\n+  zero = gen_reg_rtx (V4SImode);\n+  emit_insn (gen_altivec_vspltisw (zero, const0_rtx));\n  \n-   sixteen = gen_reg_rtx (V4SImode);   \n-   emit_insn (gen_altivec_vspltisw (sixteen,  gen_rtx_CONST_INT (V4SImode, -16)));\n+  sixteen = gen_reg_rtx (V4SImode);   \n+  emit_insn (gen_altivec_vspltisw (sixteen,  gen_rtx_CONST_INT (V4SImode, -16)));\n  \n-   swap = gen_reg_rtx (V4SImode);\n-   emit_insn (gen_vrotlv4si3 (swap, operands[2], sixteen));\n+  swap = gen_reg_rtx (V4SImode);\n+  emit_insn (gen_vrotlv4si3 (swap, operands[2], sixteen));\n  \n-   one = gen_reg_rtx (V8HImode);\n-   convert_move (one, operands[1], 0);\n+  one = gen_reg_rtx (V8HImode);\n+  convert_move (one, operands[1], 0);\n  \n-   two = gen_reg_rtx (V8HImode);\n-   convert_move (two, operands[2], 0);\n+  two = gen_reg_rtx (V8HImode);\n+  convert_move (two, operands[2], 0);\n  \n-   small_swap = gen_reg_rtx (V8HImode);\n-   convert_move (small_swap, swap, 0);\n+  small_swap = gen_reg_rtx (V8HImode);\n+  convert_move (small_swap, swap, 0);\n  \n-   low_product = gen_reg_rtx (V4SImode);\n-   emit_insn (gen_altivec_vmulouh (low_product, one, two));\n+  low_product = gen_reg_rtx (V4SImode);\n+  emit_insn (gen_altivec_vmulouh (low_product, one, two));\n  \n-   high_product = gen_reg_rtx (V4SImode);\n-   emit_insn (gen_altivec_vmsumuhm (high_product, one, small_swap, zero));\n+  high_product = gen_reg_rtx (V4SImode);\n+  emit_insn (gen_altivec_vmsumuhm (high_product, one, small_swap, zero));\n  \n-   emit_insn (gen_vashlv4si3 (high_product, high_product, sixteen));\n+  emit_insn (gen_vashlv4si3 (high_product, high_product, sixteen));\n  \n-   emit_insn (gen_addv4si3 (operands[0], high_product, low_product));\n+  emit_insn (gen_addv4si3 (operands[0], high_product, low_product));\n    \n-   DONE;\n- }\")\n+  DONE;\n+})\n  \n (define_expand \"mulv8hi3\"\n   [(use (match_operand:V8HI 0 \"register_operand\" \"\"))\n    (use (match_operand:V8HI 1 \"register_operand\" \"\"))\n    (use (match_operand:V8HI 2 \"register_operand\" \"\"))]\n    \"TARGET_ALTIVEC\"\n-   \"\n-{\n-   rtx odd = gen_reg_rtx (V4SImode);\n-   rtx even = gen_reg_rtx (V4SImode);\n-   rtx high = gen_reg_rtx (V4SImode);\n-   rtx low = gen_reg_rtx (V4SImode);\n-\n-   if (BYTES_BIG_ENDIAN)\n-     {\n-       emit_insn (gen_altivec_vmulesh (even, operands[1], operands[2]));\n-       emit_insn (gen_altivec_vmulosh (odd, operands[1], operands[2]));\n-       emit_insn (gen_altivec_vmrghw_direct (high, even, odd));\n-       emit_insn (gen_altivec_vmrglw_direct (low, even, odd));\n-       emit_insn (gen_altivec_vpkuwum_direct (operands[0], high, low));\n-     }\n-   else\n-     {\n-       emit_insn (gen_altivec_vmulosh (even, operands[1], operands[2]));\n-       emit_insn (gen_altivec_vmulesh (odd, operands[1], operands[2]));\n-       emit_insn (gen_altivec_vmrghw_direct (high, odd, even));\n-       emit_insn (gen_altivec_vmrglw_direct (low, odd, even));\n-       emit_insn (gen_altivec_vpkuwum_direct (operands[0], low, high));\n-     } \n-\n-   DONE;\n-}\")\n+{\n+  rtx zero = gen_reg_rtx (V8HImode);\n+\n+  emit_insn (gen_altivec_vspltish (zero, const0_rtx));\n+  emit_insn (gen_altivec_vmladduhm(operands[0], operands[1], operands[2], zero));\n+\n+  DONE;\n+})\n \n ;; Fused multiply subtract \n (define_insn \"*altivec_vnmsubfp\"\n@@ -851,10 +845,9 @@\n \n (define_insn \"altivec_vmladduhm\"\n   [(set (match_operand:V8HI 0 \"register_operand\" \"=v\")\n-        (unspec:V8HI [(match_operand:V8HI 1 \"register_operand\" \"v\")\n-\t\t      (match_operand:V8HI 2 \"register_operand\" \"v\")\n-                      (match_operand:V8HI 3 \"register_operand\" \"v\")]\n-\t\t     UNSPEC_VMLADDUHM))]\n+        (plus:V8HI (mult:V8HI (match_operand:V8HI 1 \"register_operand\" \"v\")\n+\t\t   \t      (match_operand:V8HI 2 \"register_operand\" \"v\"))\n+\t\t   (match_operand:V8HI 3 \"register_operand\" \"v\")))]\n   \"TARGET_ALTIVEC\"\n   \"vmladduhm %0,%1,%2,%3\"\n   [(set_attr \"type\" \"veccomplex\")])"}]}