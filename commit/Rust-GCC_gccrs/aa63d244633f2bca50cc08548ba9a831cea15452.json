{"sha": "aa63d244633f2bca50cc08548ba9a831cea15452", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWE2M2QyNDQ2MzNmMmJjYTUwY2MwODU0OGJhOWE4MzFjZWExNTQ1Mg==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@vlsi1.ultra.nyu.edu", "date": "2000-03-27T11:03:26Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "2000-03-27T11:03:26Z"}, "message": "* libgcc2.h: Use MIN_UNITS_PER_WORD, not UNITS_PER_WORD.\n\nFrom-SVN: r32762", "tree": {"sha": "8a81efb2ab5c942170c251784232e23bba8dd062", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8a81efb2ab5c942170c251784232e23bba8dd062"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/aa63d244633f2bca50cc08548ba9a831cea15452", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aa63d244633f2bca50cc08548ba9a831cea15452", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aa63d244633f2bca50cc08548ba9a831cea15452", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aa63d244633f2bca50cc08548ba9a831cea15452/comments", "author": null, "committer": null, "parents": [{"sha": "0aace0889a5c23d71210bb382a84b430b3f62a16", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0aace0889a5c23d71210bb382a84b430b3f62a16", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0aace0889a5c23d71210bb382a84b430b3f62a16"}], "stats": {"total": 12, "additions": 8, "deletions": 4}, "files": [{"sha": "d5d905b86f73f13b5cb34159c0d834386c2216b6", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa63d244633f2bca50cc08548ba9a831cea15452/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa63d244633f2bca50cc08548ba9a831cea15452/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=aa63d244633f2bca50cc08548ba9a831cea15452", "patch": "@@ -1,3 +1,7 @@\n+Mon Mar 27 06:04:22 2000  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n+\n+\t* libgcc2.h: Use MIN_UNITS_PER_WORD, not UNITS_PER_WORD.\n+\n Sun Mar 26 20:15:26 2000  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n \n \t* c-convert.c (convert): Return if output or input type is ERROR_MARK."}, {"sha": "a404d168280bf58685d84b5c73e92be5e3867b3c", "filename": "gcc/libgcc2.h", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa63d244633f2bca50cc08548ba9a831cea15452/gcc%2Flibgcc2.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa63d244633f2bca50cc08548ba9a831cea15452/gcc%2Flibgcc2.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flibgcc2.h?ref=aa63d244633f2bca50cc08548ba9a831cea15452", "patch": "@@ -87,11 +87,11 @@ typedef\t\t int QItype\t__attribute__ ((mode (QI)));\n typedef unsigned int UQItype\t__attribute__ ((mode (QI)));\n typedef\t\t int HItype\t__attribute__ ((mode (HI)));\n typedef unsigned int UHItype\t__attribute__ ((mode (HI)));\n-#if UNITS_PER_WORD > 1\n+#if MIN_UNITS_PER_WORD > 1\n /* These typedefs are usually forbidden on dsp's with UNITS_PER_WORD 1 */\n typedef \t int SItype\t__attribute__ ((mode (SI)));\n typedef unsigned int USItype\t__attribute__ ((mode (SI)));\n-#if UNITS_PER_WORD > 2\n+#if MIN_UNITS_PER_WORD > 2\n /* These typedefs are usually forbidden on archs with UNITS_PER_WORD 2 */\n typedef\t\t int DItype\t__attribute__ ((mode (DI)));\n typedef unsigned int UDItype\t__attribute__ ((mode (DI)));\n@@ -149,7 +149,7 @@ typedef int word_type __attribute__ ((mode (__word__)));\n #define float bogus_type\n #define double bogus_type\n \n-#if UNITS_PER_WORD > 2\n+#if MIN_UNITS_PER_WORD > 2\n #define W_TYPE_SIZE (4 * BITS_PER_UNIT)\n #define Wtype\tSItype\n #define UWtype\tUSItype\n@@ -159,7 +159,7 @@ typedef int word_type __attribute__ ((mode (__word__)));\n #define UDWtype\tUDItype\n #define __NW(a,b)\t__ ## a ## si ## b\n #define __NDW(a,b)\t__ ## a ## di ## b\n-#elif UNITS_PER_WORD > 1\n+#elif MIN_UNITS_PER_WORD > 1\n #define W_TYPE_SIZE (2 * BITS_PER_UNIT)\n #define Wtype\tHItype\n #define UWtype\tUHItype"}]}