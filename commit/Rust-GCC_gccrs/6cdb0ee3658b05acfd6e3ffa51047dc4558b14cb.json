{"sha": "6cdb0ee3658b05acfd6e3ffa51047dc4558b14cb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmNkYjBlZTM2NThiMDVhY2ZkNmUzZmZhNTEwNDdkYzQ1NThiMTRjYg==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2009-03-28T10:11:14Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2009-03-28T10:11:14Z"}, "message": "re PR tree-optimization/38513 (Only postreload will remove a no-op store)\n\n2009-03-28  Richard Guenther  <rguenther@suse.de>\n\n\tPR tree-optimization/38513\n\t* tree-ssa-pre.c (eliminate): Remove redundant stores.\n\t* tree-ssa-sccvn.c (copy_reference_ops_from_ref): Handle\n\tEXC_PTR_EXPR and FILTER_EXPR.\n\t(get_ref_from_reference_ops): Likewise.\n\n\t* gcc.dg/tree-ssa/ssa-fre-21.c: New testcase.\n\t* gcc.dg/tree-ssa/ssa-dse-11.c: Adjust.\n\t* gcc.dg/vect/vect-reduc-dot-u8a.c: Likewise.\n\t* gcc.dg/vect/vect-reduc-dot-u8b.c: Likewise.\n\t* gcc.dg/vect/slp-widen-mult-u8.c: Likewise.\n\t* gcc.dg/vect/vect-multitypes-16.c: Likewise.\n\t* gcc.dg/vect/vect-35.c: Likewise.\n\t* gcc.dg/vect/wrapv-vect-reduc-dot-s8b.c: Likewise.\n\t* gcc.dg/vect/vect-multitypes-17.c: Likewise.\n\t* gcc.dg/vect/slp-widen-mult-s16.c: Likewise.\n\nFrom-SVN: r145172", "tree": {"sha": "aeb29cda7c04bca0cd95e139b6a68576a97d704f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/aeb29cda7c04bca0cd95e139b6a68576a97d704f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6cdb0ee3658b05acfd6e3ffa51047dc4558b14cb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6cdb0ee3658b05acfd6e3ffa51047dc4558b14cb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6cdb0ee3658b05acfd6e3ffa51047dc4558b14cb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6cdb0ee3658b05acfd6e3ffa51047dc4558b14cb/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "8ca1fd7674f5ffff8d7ab4b9a4909073e7d26da1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8ca1fd7674f5ffff8d7ab4b9a4909073e7d26da1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8ca1fd7674f5ffff8d7ab4b9a4909073e7d26da1"}], "stats": {"total": 196, "additions": 128, "deletions": 68}, "files": [{"sha": "d9c59b8b33d4e4fedf1b2d759a1836f853a092b5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6cdb0ee3658b05acfd6e3ffa51047dc4558b14cb/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6cdb0ee3658b05acfd6e3ffa51047dc4558b14cb/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6cdb0ee3658b05acfd6e3ffa51047dc4558b14cb", "patch": "@@ -1,3 +1,11 @@\n+2009-03-28  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/38513\n+\t* tree-ssa-pre.c (eliminate): Remove redundant stores.\n+\t* tree-ssa-sccvn.c (copy_reference_ops_from_ref): Handle\n+\tEXC_PTR_EXPR and FILTER_EXPR.\n+\t(get_ref_from_reference_ops): Likewise.\n+\n 2009-03-28  Richard Guenther  <rguenther@suse.de>\n \n \tPR tree-optimization/38968"}, {"sha": "1cc8e4f43d2ba7f9be4fa5076161c925700f2645", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6cdb0ee3658b05acfd6e3ffa51047dc4558b14cb/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6cdb0ee3658b05acfd6e3ffa51047dc4558b14cb/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=6cdb0ee3658b05acfd6e3ffa51047dc4558b14cb", "patch": "@@ -1,3 +1,17 @@\n+2009-03-28  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/38513\n+\t* gcc.dg/tree-ssa/ssa-fre-21.c: New testcase.\n+\t* gcc.dg/tree-ssa/ssa-dse-11.c: Adjust.\n+\t* gcc.dg/vect/vect-reduc-dot-u8a.c: Likewise.\n+\t* gcc.dg/vect/vect-reduc-dot-u8b.c: Likewise.\n+\t* gcc.dg/vect/slp-widen-mult-u8.c: Likewise.\n+\t* gcc.dg/vect/vect-multitypes-16.c: Likewise.\n+\t* gcc.dg/vect/vect-35.c: Likewise.\n+\t* gcc.dg/vect/wrapv-vect-reduc-dot-s8b.c: Likewise.\n+\t* gcc.dg/vect/vect-multitypes-17.c: Likewise.\n+\t* gcc.dg/vect/slp-widen-mult-s16.c: Likewise.\n+\n 2009-03-28  Richard Guenther  <rguenther@suse.de>\n \n \tPR tree-optimization/38968"}, {"sha": "6e13e1875015957d2ac32c6bc31295f803122c3e", "filename": "gcc/testsuite/gcc.dg/tree-ssa/ssa-dse-11.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6cdb0ee3658b05acfd6e3ffa51047dc4558b14cb/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-dse-11.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6cdb0ee3658b05acfd6e3ffa51047dc4558b14cb/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-dse-11.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-dse-11.c?ref=6cdb0ee3658b05acfd6e3ffa51047dc4558b14cb", "patch": "@@ -6,13 +6,13 @@ void foo(int *p)\n {\n   while (1)\n    {\n-      *p = 0;\n+      *p = 1;\n       *p = 0;\n    }\n }\n void bar(int *p)\n {\n-  *p = 0;\n+  *p = 1;\n   *p = 0;\n   abort ();\n }"}, {"sha": "aadf32e21bd6c1027991b4c16a234690e05b479c", "filename": "gcc/testsuite/gcc.dg/tree-ssa/ssa-fre-21.c", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6cdb0ee3658b05acfd6e3ffa51047dc4558b14cb/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-fre-21.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6cdb0ee3658b05acfd6e3ffa51047dc4558b14cb/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-fre-21.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-fre-21.c?ref=6cdb0ee3658b05acfd6e3ffa51047dc4558b14cb", "patch": "@@ -0,0 +1,26 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O -fdump-tree-fre\" } */\n+\n+struct f {\n+  float a;\n+  float b;\n+  float c;\n+  float d;\n+};\n+\n+struct f a;\n+\n+void h(float, float, float, float);\n+\n+void g(void)\n+{\n+  float a1 = a.a, b = a.b, c = a.c, d = a.d;\n+  a.a = a1;\n+  a.b = b;\n+  a.c = c;\n+  a.d = d;\n+  h(a1, b, c, d);\n+}\n+\n+/* { dg-final { scan-tree-dump-not \"a\\\\\\.? = \" \"fre\" } } */\n+/* { dg-final { cleanup-tree-dump \"fre\" } } */"}, {"sha": "32853d73a15e172e05cec6179c93837e44443476", "filename": "gcc/testsuite/gcc.dg/vect/slp-widen-mult-s16.c", "status": "modified", "additions": 3, "deletions": 7, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6cdb0ee3658b05acfd6e3ffa51047dc4558b14cb/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fslp-widen-mult-s16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6cdb0ee3658b05acfd6e3ffa51047dc4558b14cb/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fslp-widen-mult-s16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fslp-widen-mult-s16.c?ref=6cdb0ee3658b05acfd6e3ffa51047dc4558b14cb", "patch": "@@ -5,8 +5,9 @@\n \n #define N 64\n \n-short X[N] __attribute__ ((__aligned__(16)));\n-short Y[N] __attribute__ ((__aligned__(16)));\n+short X[N] __attribute__ ((__aligned__(16))) = {0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63};\n+short Y[N] __attribute__ ((__aligned__(16))) = {64,63,62,61,60,59,58,57,56,55,54,53,52,51,50,49,48,47,46,45,44,43,42,41,40,39,38,37,36,35,34,33,32,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1};\n+\n int result[N];\n \n /* short->int widening-mult */\n@@ -26,11 +27,6 @@ int main (void)\n \n   check_vect ();\n \n-  for (i=0; i<N; i++) {\n-    X[i] = i;\n-    Y[i] = 64-i;\n-  }\n-\n   foo1 (N);\n \n   for (i=0; i<N; i++) {"}, {"sha": "2f80ea085b65a7749eeade3558f5ac2799672790", "filename": "gcc/testsuite/gcc.dg/vect/slp-widen-mult-u8.c", "status": "modified", "additions": 3, "deletions": 9, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6cdb0ee3658b05acfd6e3ffa51047dc4558b14cb/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fslp-widen-mult-u8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6cdb0ee3658b05acfd6e3ffa51047dc4558b14cb/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fslp-widen-mult-u8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fslp-widen-mult-u8.c?ref=6cdb0ee3658b05acfd6e3ffa51047dc4558b14cb", "patch": "@@ -5,8 +5,9 @@\n \n #define N 64\n \n-unsigned char X[N] __attribute__ ((__aligned__(16)));\n-unsigned char Y[N] __attribute__ ((__aligned__(16)));\n+unsigned char X[N] __attribute__ ((__aligned__(16))) = {0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63};\n+unsigned char Y[N] __attribute__ ((__aligned__(16))) = {64,63,62,61,60,59,58,57,56,55,54,53,52,51,50,49,48,47,46,45,44,43,42,41,40,39,38,37,36,35,34,33,32,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1};\n+\n unsigned short result[N];\n \n /* char->short widening-mult */\n@@ -26,13 +27,6 @@ int main (void)\n \n   check_vect ();\n \n-  for (i=0; i<N; i++) {\n-    X[i] = i;\n-    Y[i] = 64-i;\n-    if (i % 5)\n-      X[i] = i;\n-  }\n-\n   foo1 (N);\n \n   for (i=0; i<N; i++) {"}, {"sha": "c6c3bf338603faf21c845211f8a6a34a18e6321a", "filename": "gcc/testsuite/gcc.dg/vect/vect-35.c", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6cdb0ee3658b05acfd6e3ffa51047dc4558b14cb/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-35.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6cdb0ee3658b05acfd6e3ffa51047dc4558b14cb/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-35.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-35.c?ref=6cdb0ee3658b05acfd6e3ffa51047dc4558b14cb", "patch": "@@ -17,9 +17,7 @@ int main1 ()\n   /* Initialization.  */\n   for (i = 0; i < N; i++)\n     {\n-      s.b[i] = 3*i;\n-      if (i%3 == 0)\n-        s.b[i] = 3*i;\n+      s.b[i] = i;\n     }\n \n   /* Dependence analysis fails cause s.a and s.b may overlap.\n@@ -32,7 +30,7 @@ int main1 ()\n   /* check results:  */\n   for (i = 0; i < N; i++)\n     {\n-      if (s.a[i] != 3*i + 1)\n+      if (s.a[i] != i + 1)\n \tabort ();\n     }\n \n@@ -47,6 +45,6 @@ int main (void)\n } \n \n \n-/* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" } } */\n+/* { dg-final { scan-tree-dump-times \"vectorized 2 loops\" 1 \"vect\" } } */\n /* { dg-final { scan-tree-dump-times \"can't determine dependence between\" 1 \"vect\" } } */\n /* { dg-final { cleanup-tree-dump \"vect\" } } */"}, {"sha": "4192e3d19ec78f9790b751bd21b9b30c3832674b", "filename": "gcc/testsuite/gcc.dg/vect/vect-multitypes-16.c", "status": "modified", "additions": 1, "deletions": 7, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6cdb0ee3658b05acfd6e3ffa51047dc4558b14cb/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-multitypes-16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6cdb0ee3658b05acfd6e3ffa51047dc4558b14cb/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-multitypes-16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-multitypes-16.c?ref=6cdb0ee3658b05acfd6e3ffa51047dc4558b14cb", "patch": "@@ -5,7 +5,7 @@\n \n #define N 64\n \n-char x[N] __attribute__ ((__aligned__(16)));\n+char x[N] __attribute__ ((__aligned__(16))) = {0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63};\n \n __attribute__ ((noinline)) int\n foo (int len, long long *z) {\n@@ -24,12 +24,6 @@ int main (void)\n \n   check_vect ();\n \n-  for (i=0; i<N; i++) {\n-    x[i] = i;\n-    if (i % 5)\n-      x[i] = i;\n-  }\n-\n   foo (N,z+2);\n \n   for (i=0; i<N; i++) {"}, {"sha": "9084fc82a12e917582aa26290b7cbf8e8b1adf8a", "filename": "gcc/testsuite/gcc.dg/vect/vect-multitypes-17.c", "status": "modified", "additions": 2, "deletions": 9, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6cdb0ee3658b05acfd6e3ffa51047dc4558b14cb/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-multitypes-17.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6cdb0ee3658b05acfd6e3ffa51047dc4558b14cb/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-multitypes-17.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-multitypes-17.c?ref=6cdb0ee3658b05acfd6e3ffa51047dc4558b14cb", "patch": "@@ -5,9 +5,9 @@\n \n #define N 64\n \n-unsigned char uX[N] __attribute__ ((__aligned__(16)));\n+unsigned char uX[N] __attribute__ ((__aligned__(16))) = {16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1};\n unsigned char uresultX[N];\n-unsigned long long uY[N] __attribute__ ((__aligned__(16)));\n+unsigned long long uY[N] __attribute__ ((__aligned__(16))) = {16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1};\n unsigned char uresultY[N];\n \n /* Unsigned type demotion (si->qi) */\n@@ -28,13 +28,6 @@ int main (void)\n \n   check_vect ();\n \n-  for (i=0; i<N; i++) {\n-    uX[i] = 16-i;\n-    uY[i] = 16-i;\n-    if (i%5 == 0)\n-      uX[i] = 16-i;\n-  }\n-\n   foo1 (N);\n \n   for (i=0; i<N; i++) {"}, {"sha": "1934deb40d1c4c7230be49afbea6080618637c8e", "filename": "gcc/testsuite/gcc.dg/vect/vect-reduc-dot-u8a.c", "status": "modified", "additions": 2, "deletions": 9, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6cdb0ee3658b05acfd6e3ffa51047dc4558b14cb/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-reduc-dot-u8a.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6cdb0ee3658b05acfd6e3ffa51047dc4558b14cb/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-reduc-dot-u8a.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-reduc-dot-u8a.c?ref=6cdb0ee3658b05acfd6e3ffa51047dc4558b14cb", "patch": "@@ -7,8 +7,8 @@\n \n #define DOT 43680\n \n-unsigned char X[N] __attribute__ ((__aligned__(16)));\n-unsigned char Y[N] __attribute__ ((__aligned__(16)));\n+unsigned char X[N] __attribute__ ((__aligned__(16))) = {0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63};\n+unsigned char Y[N] __attribute__ ((__aligned__(16))) = {64,63,62,61,60,59,58,57,56,55,54,53,52,51,50,49,48,47,46,45,44,43,42,41,40,39,38,37,36,35,34,33,32,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1};\n \n /* char->short->int dot product. \n    Detected as a dot-product pattern.\n@@ -41,13 +41,6 @@ int main (void)\n \n   check_vect ();\n \n-  for (i=0; i<N; i++) {\n-    X[i] = i;\n-    Y[i] = 64-i;\n-    if (i%5 == 0)\n-      X[i] = i;\n-  }\n-\n   dot = foo (N);\n   if (dot != DOT)\n     abort ();"}, {"sha": "3266d1ca0b5f2ff27b9c39c6e6b8e7ad88bea3ea", "filename": "gcc/testsuite/gcc.dg/vect/vect-reduc-dot-u8b.c", "status": "modified", "additions": 2, "deletions": 10, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6cdb0ee3658b05acfd6e3ffa51047dc4558b14cb/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-reduc-dot-u8b.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6cdb0ee3658b05acfd6e3ffa51047dc4558b14cb/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-reduc-dot-u8b.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-reduc-dot-u8b.c?ref=6cdb0ee3658b05acfd6e3ffa51047dc4558b14cb", "patch": "@@ -7,8 +7,8 @@\n \n #define DOT 43680\n \n-unsigned char X[N] __attribute__ ((__aligned__(16)));\n-unsigned char Y[N] __attribute__ ((__aligned__(16)));\n+unsigned char X[N] __attribute__ ((__aligned__(16))) = {0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63};\n+unsigned char Y[N] __attribute__ ((__aligned__(16))) = {64,63,62,61,60,59,58,57,56,55,54,53,52,51,50,49,48,47,46,45,44,43,42,41,40,39,38,37,36,35,34,33,32,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1};\n \n /* char->short->short dot product. \n    Detected as a dot-product pattern.\n@@ -36,14 +36,6 @@ int main (void)\n \n   check_vect ();\n \n-  for (i=0; i<N; i++) {\n-    X[i] = i;\n-    Y[i] = 64-i;\n-    /* Avoid vectorization.  */\n-    if (i%100 == 0)\n-      X[i] = i;\n-  }\n-\n   dot = foo (N);\n   if (dot != DOT)\n     abort ();"}, {"sha": "7fc00e21a79c807653d82ac57a6d95eeaacde3a5", "filename": "gcc/testsuite/gcc.dg/vect/wrapv-vect-reduc-dot-s8b.c", "status": "modified", "additions": 2, "deletions": 9, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6cdb0ee3658b05acfd6e3ffa51047dc4558b14cb/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fwrapv-vect-reduc-dot-s8b.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6cdb0ee3658b05acfd6e3ffa51047dc4558b14cb/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fwrapv-vect-reduc-dot-s8b.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fwrapv-vect-reduc-dot-s8b.c?ref=6cdb0ee3658b05acfd6e3ffa51047dc4558b14cb", "patch": "@@ -7,8 +7,8 @@\n \n #define DOT -21856\n \n-signed char X[N] __attribute__ ((__aligned__(16)));\n-signed char Y[N] __attribute__ ((__aligned__(16)));\n+signed char X[N] __attribute__ ((__aligned__(16))) = {0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63};\n+signed char Y[N] __attribute__ ((__aligned__(16))) = {64,63,62,61,60,59,58,57,56,55,54,53,52,51,50,49,48,47,46,45,44,43,42,41,40,39,38,37,36,35,34,33,32,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1};\n \n /* char->short->short dot product.\n    The dot-product pattern should be detected.\n@@ -37,13 +37,6 @@ int main (void)\n \n   check_vect ();\n \n-  for (i=0; i<N; i++) {\n-    X[i] = i;\n-    Y[i] = 64-i;\n-    if (i%5 == 0)\n-      X[i] = i;\n-  }\n-\n   dot = foo (N);\n   if (dot != DOT)\n     abort ();"}, {"sha": "18c442e6371376b393949dfb199345bd9e043980", "filename": "gcc/tree-ssa-pre.c", "status": "modified", "additions": 56, "deletions": 1, "changes": 57, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6cdb0ee3658b05acfd6e3ffa51047dc4558b14cb/gcc%2Ftree-ssa-pre.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6cdb0ee3658b05acfd6e3ffa51047dc4558b14cb/gcc%2Ftree-ssa-pre.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-pre.c?ref=6cdb0ee3658b05acfd6e3ffa51047dc4558b14cb", "patch": "@@ -3857,7 +3857,7 @@ eliminate (void)\n     {\n       gimple_stmt_iterator i;\n \n-      for (i = gsi_start_bb (b); !gsi_end_p (i); gsi_next (&i))\n+      for (i = gsi_start_bb (b); !gsi_end_p (i);)\n \t{\n \t  gimple stmt = gsi_stmt (i);\n \n@@ -3915,6 +3915,7 @@ eliminate (void)\n \t\t  propagate_tree_value_into_stmt (&i, sprime);\n \t\t  stmt = gsi_stmt (i);\n \t\t  update_stmt (stmt);\n+\t\t  gsi_next (&i);\n \t\t  continue;\n \t\t}\n \n@@ -3975,6 +3976,58 @@ eliminate (void)\n \t\t    }\n \t\t}\n \t    }\n+\t  /* If the statement is a scalar store, see if the expression\n+\t     has the same value number as its rhs.  If so, the store is\n+\t     dead.  */\n+\t  else if (gimple_assign_single_p (stmt)\n+\t\t   && !is_gimple_reg (gimple_assign_lhs (stmt))\n+\t\t   && (TREE_CODE (gimple_assign_rhs1 (stmt)) == SSA_NAME\n+\t\t       || is_gimple_min_invariant (gimple_assign_rhs1 (stmt))))\n+\t    {\n+\t      tree rhs = gimple_assign_rhs1 (stmt);\n+\t      tree val;\n+\t      val = vn_reference_lookup (gimple_assign_lhs (stmt),\n+\t\t\t\t\t shared_vuses_from_stmt (stmt),\n+\t\t\t\t\t true, NULL);\n+\t      if (TREE_CODE (rhs) == SSA_NAME)\n+\t\trhs = VN_INFO (rhs)->valnum;\n+\t      if (val\n+\t\t  && operand_equal_p (val, rhs, 0))\n+\t\t{\n+\t\t  def_operand_p def;\n+\t\t  use_operand_p use;\n+\t\t  vuse_vec_p usevec;\n+\t\t  ssa_op_iter oi;\n+\t\t  imm_use_iterator ui;\n+\t\t  gimple use_stmt;\n+\n+\t\t  if (dump_file && (dump_flags & TDF_DETAILS))\n+\t\t    {\n+\t\t      fprintf (dump_file, \"Deleted dead store \");\n+\t\t      print_gimple_stmt (dump_file, stmt, 0, 0);\n+\t\t    }\n+\n+\t\t  /* Propagate all may-uses to the uses of their defs.  */\n+\t\t  FOR_EACH_SSA_VDEF_OPERAND (def, usevec, stmt, oi)\n+\t\t    {\n+\t\t      tree vuse = VUSE_ELEMENT_VAR (*usevec, 0);\n+\t\t      tree vdef = DEF_FROM_PTR (def);\n+\n+\t\t      /* If the vdef is used in an abnormal PHI node we\n+\t\t         have to propagate that flag to the vuse as well.  */\n+\t\t      if (SSA_NAME_OCCURS_IN_ABNORMAL_PHI (vdef))\n+\t\t\tSSA_NAME_OCCURS_IN_ABNORMAL_PHI (vuse) = 1;\n+\n+\t\t      FOR_EACH_IMM_USE_STMT (use_stmt, ui, vdef)\n+\t\t\tFOR_EACH_IMM_USE_ON_STMT (use, ui)\n+\t\t\t  SET_USE (use, vuse);\n+\t\t    }\n+\n+\t\t  gsi_remove (&i, true);\n+\t\t  release_defs (stmt);\n+\t\t  continue;\n+\t\t}\n+\t    }\n \t  /* Visit COND_EXPRs and fold the comparison with the\n \t     available value-numbers.  */\n \t  else if (gimple_code (stmt) == GIMPLE_COND)\n@@ -3999,6 +4052,8 @@ eliminate (void)\n \t\t  todo = TODO_cleanup_cfg;\n \t\t}\n \t    }\n+\n+\t  gsi_next (&i);\n \t}\n     }\n "}, {"sha": "fb903921656f5a70eabd3a2ba27418fe9c10e840", "filename": "gcc/tree-ssa-sccvn.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6cdb0ee3658b05acfd6e3ffa51047dc4558b14cb/gcc%2Ftree-ssa-sccvn.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6cdb0ee3658b05acfd6e3ffa51047dc4558b14cb/gcc%2Ftree-ssa-sccvn.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-sccvn.c?ref=6cdb0ee3658b05acfd6e3ffa51047dc4558b14cb", "patch": "@@ -658,6 +658,8 @@ copy_reference_ops_from_ref (tree ref, VEC(vn_reference_op_s, heap) **result)\n \tcase CONST_DECL:\n \tcase RESULT_DECL:\n \tcase SSA_NAME:\n+\tcase EXC_PTR_EXPR:\n+\tcase FILTER_EXPR:\n \t  temp.op0 = ref;\n \t  break;\n \tcase ADDR_EXPR:\n@@ -750,6 +752,8 @@ get_ref_from_reference_ops (VEC(vn_reference_op_s, heap) *ops)\n \tcase CONST_DECL:\n \tcase RESULT_DECL:\n \tcase SSA_NAME:\n+\tcase FILTER_EXPR:\n+\tcase EXC_PTR_EXPR:\n \t  *op0_p = op->op0;\n \t  break;\n "}]}