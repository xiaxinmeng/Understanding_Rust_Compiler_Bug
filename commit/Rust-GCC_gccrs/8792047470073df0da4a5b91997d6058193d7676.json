{"sha": "8792047470073df0da4a5b91997d6058193d7676", "node_id": "C_kwDOANBUbNoAKDg3OTIwNDc0NzAwNzNkZjBkYTRhNWI5MTk5N2Q2MDU4MTkzZDc2NzY", "commit": {"author": {"name": "Tobias Burnus", "email": "tobias@codesourcery.com", "date": "2022-10-04T15:03:32Z"}, "committer": {"name": "Tobias Burnus", "email": "tobias@codesourcery.com", "date": "2022-10-04T15:03:32Z"}, "message": "OpenMP: Update invoke.texi and fix fortran/parse.cc for -fopenmp-simd\n\nSplit off from the 'Fortran: Add OpenMP's assume(s) directives' patch.\n\ngcc/\n\t* doc/invoke.texi (-fopenmp): Mention C++ attribut syntax.\n\t(-fopenmp-simd): Likewise; update permitted directives.\n\ngcc/fortran/\n\t* parse.cc (decode_omp_directive): Handle '(end) loop' and 'scan'\n\talso with -fopenmp-simd.\n\ngcc/testsuite/\n\t* gfortran.dg/gomp/openmp-simd-7.f90: New test.", "tree": {"sha": "4cb04ebd722d30d6d6450c1911256f743c393750", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4cb04ebd722d30d6d6450c1911256f743c393750"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8792047470073df0da4a5b91997d6058193d7676", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8792047470073df0da4a5b91997d6058193d7676", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8792047470073df0da4a5b91997d6058193d7676", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8792047470073df0da4a5b91997d6058193d7676/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3b8bcc3f8b821e7359f8504334488ff2b1fc8f30", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3b8bcc3f8b821e7359f8504334488ff2b1fc8f30", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3b8bcc3f8b821e7359f8504334488ff2b1fc8f30"}], "stats": {"total": 41, "additions": 34, "deletions": 7}, "files": [{"sha": "e0c2c57c9b279c883b8dece93675044e98e12f32", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8792047470073df0da4a5b91997d6058193d7676/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8792047470073df0da4a5b91997d6058193d7676/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=8792047470073df0da4a5b91997d6058193d7676", "patch": "@@ -2737,7 +2737,8 @@ can be omitted, to use a target-specific default value.\n @item -fopenmp\n @opindex fopenmp\n @cindex OpenMP parallel\n-Enable handling of OpenMP directives @code{#pragma omp} in C/C++ and\n+Enable handling of OpenMP directives @code{#pragma omp} in C/C++,\n+@code{[[omp::directive(...)]]} and @code{[[omp::sequence(...)]]} in C++ and\n @code{!$omp} in Fortran.  When @option{-fopenmp} is specified, the\n compiler generates parallel code according to the OpenMP Application\n Program Interface v4.5 @w{@uref{https://www.openmp.org}}.  This option\n@@ -2749,9 +2750,12 @@ have support for @option{-pthread}. @option{-fopenmp} implies\n @opindex fopenmp-simd\n @cindex OpenMP SIMD\n @cindex SIMD\n-Enable handling of OpenMP's SIMD directives with @code{#pragma omp}\n-in C/C++ and @code{!$omp} in Fortran. Other OpenMP directives\n-are ignored.\n+Enable handling of OpenMP's @code{simd}, @code{declare simd},\n+@code{declare reduction}, @code{assume}, @code{ordered}, @code{scan},\n+@code{loop} directives and combined or composite directives with\n+@code{simd} as constituent with @code{#pragma omp} in C/C++,\n+@code{[[omp::directive(...)]]} and @code{[[omp::sequence(...)]]} in C++\n+and @code{!$omp} in Fortran.  Other OpenMP directives are ignored.\n \n @item -fpermitted-flt-eval-methods=@var{style}\n @opindex fpermitted-flt-eval-methods"}, {"sha": "2e2e9770520a10de546daaffc3780b93b9968813", "filename": "gcc/fortran/parse.cc", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8792047470073df0da4a5b91997d6058193d7676/gcc%2Ffortran%2Fparse.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8792047470073df0da4a5b91997d6058193d7676/gcc%2Ffortran%2Fparse.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fparse.cc?ref=8792047470073df0da4a5b91997d6058193d7676", "patch": "@@ -924,7 +924,7 @@ decode_omp_directive (void)\n       matcho (\"end distribute\", gfc_match_omp_eos_error, ST_OMP_END_DISTRIBUTE);\n       matchs (\"end do simd\", gfc_match_omp_end_nowait, ST_OMP_END_DO_SIMD);\n       matcho (\"end do\", gfc_match_omp_end_nowait, ST_OMP_END_DO);\n-      matcho (\"end loop\", gfc_match_omp_eos_error, ST_OMP_END_LOOP);\n+      matchs (\"end loop\", gfc_match_omp_eos_error, ST_OMP_END_LOOP);\n       matchs (\"end simd\", gfc_match_omp_eos_error, ST_OMP_END_SIMD);\n       matcho (\"end masked taskloop simd\", gfc_match_omp_eos_error,\n \t      ST_OMP_END_MASKED_TASKLOOP_SIMD);\n@@ -1023,7 +1023,7 @@ decode_omp_directive (void)\n       matcho (\"nothing\", gfc_match_omp_nothing, ST_NONE);\n       break;\n     case 'l':\n-      matcho (\"loop\", gfc_match_omp_loop, ST_OMP_LOOP);\n+      matchs (\"loop\", gfc_match_omp_loop, ST_OMP_LOOP);\n       break;\n     case 'o':\n       if (gfc_match (\"ordered depend (\") == MATCH_YES\n@@ -1070,7 +1070,7 @@ decode_omp_directive (void)\n       matcho (\"requires\", gfc_match_omp_requires, ST_OMP_REQUIRES);\n       break;\n     case 's':\n-      matcho (\"scan\", gfc_match_omp_scan, ST_OMP_SCAN);\n+      matchs (\"scan\", gfc_match_omp_scan, ST_OMP_SCAN);\n       matcho (\"scope\", gfc_match_omp_scope, ST_OMP_SCOPE);\n       matcho (\"sections\", gfc_match_omp_sections, ST_OMP_SECTIONS);\n       matcho (\"section\", gfc_match_omp_eos_error, ST_OMP_SECTION);"}, {"sha": "d7010bb42883ce24a591a2eb1d3ceff30d4d809a", "filename": "gcc/testsuite/gfortran.dg/gomp/openmp-simd-7.f90", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8792047470073df0da4a5b91997d6058193d7676/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fopenmp-simd-7.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8792047470073df0da4a5b91997d6058193d7676/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fopenmp-simd-7.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fopenmp-simd-7.f90?ref=8792047470073df0da4a5b91997d6058193d7676", "patch": "@@ -0,0 +1,23 @@\n+! { dg-options \"-fno-openmp -fopenmp-simd -fdump-tree-original\" }\n+\n+subroutine foo (a, b)\n+  integer, contiguous :: a(:), b(:)\n+  integer :: i\n+  !$omp simd reduction (inscan, +:r)\n+  do i = 1, 1024\n+    r = r + a(i)\n+    !$omp scan inclusive(r)\n+    b(i) = r\n+  end do\n+  !$omp end simd\n+\n+  !$omp loop\n+  do i = 1, 1024\n+    a(i) = a(i) + i\n+  end do\n+  !$omp end loop\n+end\n+\n+! { dg-final { scan-tree-dump \"#pragma omp simd linear\\\\(i:1\\\\) reduction\\\\(inscan,\\\\+:r\\\\)\" \"original\" } }\n+! { dg-final { scan-tree-dump \"#pragma omp scan inclusive\\\\(r\\\\)\" \"original\" } }\n+! { dg-final { scan-tree-dump \"#pragma omp loop\" \"original\" } }"}]}