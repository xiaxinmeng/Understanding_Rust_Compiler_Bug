{"sha": "567eb37c76e19f82a44db53edbd54c361ab7aa18", "node_id": "C_kwDOANBUbNoAKDU2N2ViMzdjNzZlMTlmODJhNDRkYjUzZWRiZDU0YzM2MWFiN2FhMTg", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2022-03-28T10:38:11Z"}, "committer": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2022-03-28T11:20:42Z"}, "message": "libstdc++: Fix typos in comments in tests\n\nlibstdc++-v3/ChangeLog:\n\n\t* testsuite/20_util/optional/monadic/and_then.cc: Fix typo.\n\t* testsuite/20_util/optional/monadic/transform.cc: Likewise.\n\t* testsuite/22_locale/codecvt/always_noconv/char/1.cc: Likewise.\n\t* testsuite/22_locale/codecvt/encoding/char/1.cc: Likewise.\n\t* testsuite/22_locale/codecvt/in/char/1.cc: Likewise.\n\t* testsuite/22_locale/codecvt/max_length/char/1.cc: Likewise.\n\t* testsuite/22_locale/codecvt/out/char/1.cc: Likewise.\n\t* testsuite/22_locale/codecvt/unshift/char/1.cc: Likewise.", "tree": {"sha": "70c9d28de06f779252b422d264c031bf58bb92f2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/70c9d28de06f779252b422d264c031bf58bb92f2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/567eb37c76e19f82a44db53edbd54c361ab7aa18", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/567eb37c76e19f82a44db53edbd54c361ab7aa18", "html_url": "https://github.com/Rust-GCC/gccrs/commit/567eb37c76e19f82a44db53edbd54c361ab7aa18", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/567eb37c76e19f82a44db53edbd54c361ab7aa18/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a74ccc8cb02220ca45a1d0222ba5ba986abae570", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a74ccc8cb02220ca45a1d0222ba5ba986abae570", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a74ccc8cb02220ca45a1d0222ba5ba986abae570"}], "stats": {"total": 44, "additions": 22, "deletions": 22}, "files": [{"sha": "7cbec330ea007d265e14cd77e6c98847331b607a", "filename": "libstdc++-v3/testsuite/20_util/optional/monadic/and_then.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/567eb37c76e19f82a44db53edbd54c361ab7aa18/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Foptional%2Fmonadic%2Fand_then.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/567eb37c76e19f82a44db53edbd54c361ab7aa18/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Foptional%2Fmonadic%2Fand_then.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Foptional%2Fmonadic%2Fand_then.cc?ref=567eb37c76e19f82a44db53edbd54c361ab7aa18", "patch": "@@ -118,7 +118,7 @@ void f(int&) { }\n void\n test_unconstrained()\n {\n-  // PR libstc++/102863 - Optional monadic ops should not be constrained\n+  // PR libstdc++/102863 - Optional monadic ops should not be constrained\n   std::optional<int> x;\n   auto answer = x.and_then([](auto& y) { f(y); return std::optional<int>{42}; });\n   VERIFY( !answer );"}, {"sha": "b08837ee03b4a1ae9d153003e670ec0bbb8cbf3a", "filename": "libstdc++-v3/testsuite/20_util/optional/monadic/transform.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/567eb37c76e19f82a44db53edbd54c361ab7aa18/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Foptional%2Fmonadic%2Ftransform.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/567eb37c76e19f82a44db53edbd54c361ab7aa18/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Foptional%2Fmonadic%2Ftransform.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Foptional%2Fmonadic%2Ftransform.cc?ref=567eb37c76e19f82a44db53edbd54c361ab7aa18", "patch": "@@ -137,7 +137,7 @@ void f(int&) { }\n void\n test_unconstrained()\n {\n-  // PR libstc++/102863 - Optional monadic ops should not be constrained\n+  // PR libstdc++/102863 - Optional monadic ops should not be constrained\n   std::optional<int> x;\n   auto answer = x.transform([](auto& y) { f(y); return 42; });\n   VERIFY( !answer );"}, {"sha": "c169073fb46a29f1d67b0ba95529a94e6d2c579c", "filename": "libstdc++-v3/testsuite/22_locale/codecvt/always_noconv/char/1.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/567eb37c76e19f82a44db53edbd54c361ab7aa18/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fcodecvt%2Falways_noconv%2Fchar%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/567eb37c76e19f82a44db53edbd54c361ab7aa18/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fcodecvt%2Falways_noconv%2Fchar%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fcodecvt%2Falways_noconv%2Fchar%2F1.cc?ref=567eb37c76e19f82a44db53edbd54c361ab7aa18", "patch": "@@ -36,9 +36,9 @@ void test01()\n   char*                 c_ref = new char[size];\n \n   locale \t\tloc = locale::classic();\n-  const c_codecvt* \tcvt = &use_facet<c_codecvt>(loc); \n+  const c_codecvt* \tcvt = &use_facet<c_codecvt>(loc);\n \n-  // According to the resolution of DR19 (see also libstd++/9168), in\n+  // According to the resolution of DR19 (see also libstdc++/9168), in\n   // case of degenerate conversion ('noconv'), \"there are no changes to\n   // the values in [to, to_limit).\"\n   memset(c_ref, 'X', size);"}, {"sha": "f5e0541a879bb0965f1813e5f9e2c3dc5eea822b", "filename": "libstdc++-v3/testsuite/22_locale/codecvt/encoding/char/1.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/567eb37c76e19f82a44db53edbd54c361ab7aa18/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fcodecvt%2Fencoding%2Fchar%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/567eb37c76e19f82a44db53edbd54c361ab7aa18/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fcodecvt%2Fencoding%2Fchar%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fcodecvt%2Fencoding%2Fchar%2F1.cc?ref=567eb37c76e19f82a44db53edbd54c361ab7aa18", "patch": "@@ -36,9 +36,9 @@ void test01()\n   char*                 c_ref = new char[size];\n \n   locale \t\tloc = locale::classic();\n-  const c_codecvt* \tcvt = &use_facet<c_codecvt>(loc); \n+  const c_codecvt* \tcvt = &use_facet<c_codecvt>(loc);\n \n-  // According to the resolution of DR19 (see also libstd++/9168), in\n+  // According to the resolution of DR19 (see also libstdc++/9168), in\n   // case of degenerate conversion ('noconv'), \"there are no changes to\n   // the values in [to, to_limit).\"\n   memset(c_ref, 'X', size);"}, {"sha": "299c62a8cc6c3c54e105aebe5eace72892f9485d", "filename": "libstdc++-v3/testsuite/22_locale/codecvt/in/char/1.cc", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/567eb37c76e19f82a44db53edbd54c361ab7aa18/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fcodecvt%2Fin%2Fchar%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/567eb37c76e19f82a44db53edbd54c361ab7aa18/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fcodecvt%2Fin%2Fchar%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fcodecvt%2Fin%2Fchar%2F1.cc?ref=567eb37c76e19f82a44db53edbd54c361ab7aa18", "patch": "@@ -40,19 +40,19 @@ void test01()\n \n   locale \t\tloc = locale::classic();\n   c_codecvt::state_type state;\n-  const c_codecvt* \tcvt = &use_facet<c_codecvt>(loc); \n+  const c_codecvt* \tcvt = &use_facet<c_codecvt>(loc);\n \n-  // According to the resolution of DR19 (see also libstd++/9168), in\n+  // According to the resolution of DR19 (see also libstdc++/9168), in\n   // case of degenerate conversion ('noconv'), \"there are no changes to\n   // the values in [to, to_limit).\"\n   memset(c_ref, 'X', size);\n \n   // in\n   memset(c_arr, 'X', size);\n-  result r1 = cvt->in(state, c_lit, c_lit + size, from_next, \n+  result r1 = cvt->in(state, c_lit, c_lit + size, from_next,\n \t\t      c_arr, c_arr + size, to_next);\n   VERIFY( r1 == codecvt_base::noconv );\n-  VERIFY( !memcmp(c_arr, c_ref, size) ); \n+  VERIFY( !memcmp(c_arr, c_ref, size) );\n   VERIFY( from_next == c_lit );\n   VERIFY( to_next == c_arr );\n "}, {"sha": "5aec13726da5c46ee1d89ce25bdf4604bd56404e", "filename": "libstdc++-v3/testsuite/22_locale/codecvt/max_length/char/1.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/567eb37c76e19f82a44db53edbd54c361ab7aa18/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fcodecvt%2Fmax_length%2Fchar%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/567eb37c76e19f82a44db53edbd54c361ab7aa18/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fcodecvt%2Fmax_length%2Fchar%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fcodecvt%2Fmax_length%2Fchar%2F1.cc?ref=567eb37c76e19f82a44db53edbd54c361ab7aa18", "patch": "@@ -35,9 +35,9 @@ void test01()\n   char* \t\tc_arr = new char[size];\n   char*                 c_ref = new char[size];\n   locale \t\tloc = locale::classic();\n-  const c_codecvt* \tcvt = &use_facet<c_codecvt>(loc); \n+  const c_codecvt* \tcvt = &use_facet<c_codecvt>(loc);\n \n-  // According to the resolution of DR19 (see also libstd++/9168), in\n+  // According to the resolution of DR19 (see also libstdc++/9168), in\n   // case of degenerate conversion ('noconv'), \"there are no changes to\n   // the values in [to, to_limit).\"\n   memset(c_ref, 'X', size);"}, {"sha": "a2224c71e5468fcc05149fac8973d8aac381c952", "filename": "libstdc++-v3/testsuite/22_locale/codecvt/out/char/1.cc", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/567eb37c76e19f82a44db53edbd54c361ab7aa18/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fcodecvt%2Fout%2Fchar%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/567eb37c76e19f82a44db53edbd54c361ab7aa18/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fcodecvt%2Fout%2Fchar%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fcodecvt%2Fout%2Fchar%2F1.cc?ref=567eb37c76e19f82a44db53edbd54c361ab7aa18", "patch": "@@ -40,19 +40,19 @@ void test01()\n \n   locale \t\tloc = locale::classic();\n   c_codecvt::state_type state;\n-  const c_codecvt* \tcvt = &use_facet<c_codecvt>(loc); \n+  const c_codecvt* \tcvt = &use_facet<c_codecvt>(loc);\n \n-  // According to the resolution of DR19 (see also libstd++/9168), in\n+  // According to the resolution of DR19 (see also libstdc++/9168), in\n   // case of degenerate conversion ('noconv'), \"there are no changes to\n   // the values in [to, to_limit).\"\n   memset(c_ref, 'X', size);\n \n   // out\n   memset(c_arr, 'X', size);\n-  result r2 = cvt->out(state, c_lit, c_lit + size, from_next, \n+  result r2 = cvt->out(state, c_lit, c_lit + size, from_next,\n \t\t       c_arr, c_arr + size, to_next);\n   VERIFY( r2 == codecvt_base::noconv );\n-  VERIFY( !memcmp(c_arr, c_ref, size) ); \n+  VERIFY( !memcmp(c_arr, c_ref, size) );\n   VERIFY( from_next == c_lit );\n   VERIFY( to_next == c_arr );\n "}, {"sha": "28745ce9eed75d0ebe588d49082e7b4237e71227", "filename": "libstdc++-v3/testsuite/22_locale/codecvt/unshift/char/1.cc", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/567eb37c76e19f82a44db53edbd54c361ab7aa18/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fcodecvt%2Funshift%2Fchar%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/567eb37c76e19f82a44db53edbd54c361ab7aa18/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fcodecvt%2Funshift%2Fchar%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fcodecvt%2Funshift%2Fchar%2F1.cc?ref=567eb37c76e19f82a44db53edbd54c361ab7aa18", "patch": "@@ -40,28 +40,28 @@ void test01()\n \n   locale \t\tloc = locale::classic();\n   c_codecvt::state_type state;\n-  const c_codecvt* \tcvt = &use_facet<c_codecvt>(loc); \n+  const c_codecvt* \tcvt = &use_facet<c_codecvt>(loc);\n \n-  // According to the resolution of DR19 (see also libstd++/9168), in\n+  // According to the resolution of DR19 (see also libstdc++/9168), in\n   // case of degenerate conversion ('noconv'), \"there are no changes to\n   // the values in [to, to_limit).\"\n   memset(c_ref, 'X', size);\n \n   // in\n   memset(c_arr, 'X', size);\n-  result r1 = cvt->in(state, c_lit, c_lit + size, from_next, \n+  result r1 = cvt->in(state, c_lit, c_lit + size, from_next,\n \t\t      c_arr, c_arr + size, to_next);\n   VERIFY( r1 == codecvt_base::noconv );\n-  VERIFY( !memcmp(c_arr, c_ref, size) ); \n+  VERIFY( !memcmp(c_arr, c_ref, size) );\n   VERIFY( from_next == c_lit );\n   VERIFY( to_next == c_arr );\n \n   // out\n   memset(c_arr, 'X', size);\n-  result r2 = cvt->out(state, c_lit, c_lit + size, from_next, \n+  result r2 = cvt->out(state, c_lit, c_lit + size, from_next,\n \t\t       c_arr, c_arr + size, to_next);\n   VERIFY( r2 == codecvt_base::noconv );\n-  VERIFY( !memcmp(c_arr, c_ref, size) ); \n+  VERIFY( !memcmp(c_arr, c_ref, size) );\n   VERIFY( from_next == c_lit );\n   VERIFY( to_next == c_arr );\n "}]}