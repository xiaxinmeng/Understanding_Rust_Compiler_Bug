{"sha": "d6dea10acfd9d775f260a2e7c319bb1ee64c0af0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDZkZWExMGFjZmQ5ZDc3NWYyNjBhMmU3YzMxOWJiMWVlNjRjMGFmMA==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2019-08-21T11:45:34Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2019-08-21T11:45:34Z"}, "message": "re PR tree-optimization/91482 (__builtin_assume_aligned should not break write combining)\n\n2019-08-21  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/91482\n\t* tree-ssa-ccp.c (ccp_folder::fold_stmt): Remove useless\n\tBUILT_IN_ASSUME_ALIGNED calls.\n\n\t* gcc.dg/tree-ssa/pr91482.c: New testcase.\n\nFrom-SVN: r274796", "tree": {"sha": "4643749b529ef1dd3d1f4012fc5e77f628c9ea32", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4643749b529ef1dd3d1f4012fc5e77f628c9ea32"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d6dea10acfd9d775f260a2e7c319bb1ee64c0af0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d6dea10acfd9d775f260a2e7c319bb1ee64c0af0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d6dea10acfd9d775f260a2e7c319bb1ee64c0af0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d6dea10acfd9d775f260a2e7c319bb1ee64c0af0/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "8bb2ee59398df615bf4b7c8fa6db2944485e4204", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8bb2ee59398df615bf4b7c8fa6db2944485e4204", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8bb2ee59398df615bf4b7c8fa6db2944485e4204"}], "stats": {"total": 50, "additions": 50, "deletions": 0}, "files": [{"sha": "7550e422dadd7e2eed72df58ebe59e3cd90e34fc", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6dea10acfd9d775f260a2e7c319bb1ee64c0af0/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6dea10acfd9d775f260a2e7c319bb1ee64c0af0/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d6dea10acfd9d775f260a2e7c319bb1ee64c0af0", "patch": "@@ -1,3 +1,9 @@\n+2019-08-21  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/91482\n+\t* tree-ssa-ccp.c (ccp_folder::fold_stmt): Remove useless\n+\tBUILT_IN_ASSUME_ALIGNED calls.\n+\n 2019-08-21  Richard Biener  <rguenther@suse.de>\n \n \tPR target/91498"}, {"sha": "e8d22d1844df3de8d651f16cf27f63a3c8736b95", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6dea10acfd9d775f260a2e7c319bb1ee64c0af0/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6dea10acfd9d775f260a2e7c319bb1ee64c0af0/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=d6dea10acfd9d775f260a2e7c319bb1ee64c0af0", "patch": "@@ -1,3 +1,8 @@\n+2019-08-21  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/91482\n+\t* gcc.dg/tree-ssa/pr91482.c: New testcase.\n+\n 2019-08-21  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* c-c++-common/dump-ada-spec-15.c: New test."}, {"sha": "7d6a724e4ad534ad6fb16cbef8ae22f86e5eed9d", "filename": "gcc/testsuite/gcc.dg/tree-ssa/pr91482.c", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6dea10acfd9d775f260a2e7c319bb1ee64c0af0/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr91482.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6dea10acfd9d775f260a2e7c319bb1ee64c0af0/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr91482.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr91482.c?ref=d6dea10acfd9d775f260a2e7c319bb1ee64c0af0", "patch": "@@ -0,0 +1,13 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -fdump-tree-ccp1 -fdump-tree-store-merging\" } */\n+\n+void write64 (void *p)\n+{\n+  unsigned *p1 = (unsigned *) __builtin_assume_aligned (p, 8);\n+  *p1++ = 0;\n+  unsigned *p2 = (unsigned *) __builtin_assume_aligned (p1, 4);\n+  *p2++ = 1;\n+}\n+\n+/* { dg-final { scan-tree-dump-times \"__builtin_assume_aligned\" 1 \"ccp1\" } } */\n+/* { dg-final { scan-tree-dump \"New sequence of 1 stores to replace old one of 2 stores\" \"store-merging\" { target lp64 } } } */"}, {"sha": "5af3810e8f0df911554b3287be0b0d4511ed765c", "filename": "gcc/tree-ssa-ccp.c", "status": "modified", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6dea10acfd9d775f260a2e7c319bb1ee64c0af0/gcc%2Ftree-ssa-ccp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6dea10acfd9d775f260a2e7c319bb1ee64c0af0/gcc%2Ftree-ssa-ccp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-ccp.c?ref=d6dea10acfd9d775f260a2e7c319bb1ee64c0af0", "patch": "@@ -2315,6 +2315,32 @@ ccp_folder::fold_stmt (gimple_stmt_iterator *gsi)\n \t      }\n           }\n \n+\t/* If there's no extra info from an assume_aligned call,\n+\t   drop it so it doesn't act as otherwise useless dataflow\n+\t   barrier.  */\n+\tif (gimple_call_builtin_p (stmt, BUILT_IN_ASSUME_ALIGNED))\n+\t  {\n+\t    tree ptr = gimple_call_arg (stmt, 0);\n+\t    ccp_prop_value_t ptrval = get_value_for_expr (ptr, true);\n+\t    if (ptrval.lattice_val == CONSTANT\n+\t\t&& TREE_CODE (ptrval.value) == INTEGER_CST\n+\t\t&& ptrval.mask != 0)\n+\t      {\n+\t\tccp_prop_value_t val\n+\t\t  = bit_value_assume_aligned (stmt, NULL_TREE, ptrval, false);\n+\t\tunsigned int ptralign = least_bit_hwi (ptrval.mask.to_uhwi ());\n+\t\tunsigned int align = least_bit_hwi (val.mask.to_uhwi ());\n+\t\tif (ptralign == align\n+\t\t    && ((TREE_INT_CST_LOW (ptrval.value) & (align - 1))\n+\t\t\t== (TREE_INT_CST_LOW (val.value) & (align - 1))))\n+\t\t  {\n+\t\t    bool res = update_call_from_tree (gsi, ptr);\n+\t\t    gcc_assert (res);\n+\t\t    return true;\n+\t\t  }\n+\t      }\n+\t  }\n+\n \t/* Propagate into the call arguments.  Compared to replace_uses_in\n \t   this can use the argument slot types for type verification\n \t   instead of the current argument type.  We also can safely"}]}