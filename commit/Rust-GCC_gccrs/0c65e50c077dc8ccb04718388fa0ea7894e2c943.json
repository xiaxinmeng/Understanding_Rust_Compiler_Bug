{"sha": "0c65e50c077dc8ccb04718388fa0ea7894e2c943", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGM2NWU1MGMwNzdkYzhjY2IwNDcxODM4OGZhMGVhNzg5NGUyYzk0Mw==", "commit": {"author": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1997-09-10T19:33:33Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1997-09-10T19:33:33Z"}, "message": "Rebuild from source files.\n\nFrom-SVN: r15264", "tree": {"sha": "caae8b33fb7043a5f63425955cd48daefd1f2a8e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/caae8b33fb7043a5f63425955cd48daefd1f2a8e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0c65e50c077dc8ccb04718388fa0ea7894e2c943", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0c65e50c077dc8ccb04718388fa0ea7894e2c943", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0c65e50c077dc8ccb04718388fa0ea7894e2c943", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0c65e50c077dc8ccb04718388fa0ea7894e2c943/comments", "author": null, "committer": null, "parents": [{"sha": "1d11dd74fa9fcff62d56e8f4f8642eb80e208138", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1d11dd74fa9fcff62d56e8f4f8642eb80e208138", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1d11dd74fa9fcff62d56e8f4f8642eb80e208138"}], "stats": {"total": 33, "additions": 22, "deletions": 11}, "files": [{"sha": "480425e37768e00216c2c3e1428e7774f4228d16", "filename": "gcc/f/intdoc.texi", "status": "modified", "additions": 22, "deletions": 11, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0c65e50c077dc8ccb04718388fa0ea7894e2c943/gcc%2Ff%2Fintdoc.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0c65e50c077dc8ccb04718388fa0ea7894e2c943/gcc%2Ff%2Fintdoc.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Fintdoc.texi?ref=0c65e50c077dc8ccb04718388fa0ea7894e2c943", "patch": "@@ -36,7 +36,7 @@\n * AJMin0 Intrinsic::    (Reserved for future use.)\n @end ifset\n @ifset familyF2U\n-* Alarm Intrinsic::\n+* Alarm Intrinsic::     Execute a routine after a given delay.\n @end ifset\n @ifset familyF90\n * All Intrinsic::       (Reserved for future use.)\n@@ -1169,6 +1169,18 @@ or dummy/global @code{INTEGER(KIND=1)} scalar.\n @noindent\n Intrinsic groups: @code{unix}.\n \n+@noindent\n+Description:\n+\n+Causes external subroutine @var{Handler} to be executed after a delay of\n+@var{Seconds} seconds by using @code{alarm(1)} to set up a signal and\n+@code{signal(2)} to catch it.\n+If @var{Status} is supplied, it will be\n+returned with the the number of seconds remaining until any previously\n+scheduled alarm was due to be delivered, or zero if there was no\n+previously scheduled alarm.\n+@xref{Signal Intrinsic (subroutine)}.\n+\n @end ifset\n @ifset familyF90\n @node All Intrinsic\n@@ -1870,7 +1882,7 @@ or 4; and so on.)\n \n @xref{Bit_Size Intrinsic}, for how to obtain the number of bits\n in a type.\n-The leftmost bit of @var{I} is @samp{BIT_SIZE(@var{I}-1}.\n+The leftmost bit of @var{I} is @samp{BIT_SIZE(@var{I}-1)}.\n \n @end ifset\n @ifset familyF77\n@@ -3259,7 +3271,7 @@ Description:\n \n Archaic form of @code{CONJG()} that is specific\n to one type for @var{Z}.\n-@xref{ATan2 Intrinsic}.\n+@xref{Conjg Intrinsic}.\n \n @end ifset\n @ifset familyF77\n@@ -3831,6 +3843,9 @@ a @code{DOUBLE COMPLEX} value.\n @xref{RealPart Intrinsic}, for information on a GNU Fortran\n intrinsic that avoids these areas of confusion.\n \n+@xref{Dble Intrinsic}, for information on the standard FORTRAN 77\n+replacement for @code{DREAL()}.\n+\n @xref{REAL() and AIMAG() of Complex}, for more information on\n this issue.\n \n@@ -5382,8 +5397,6 @@ If the @var{Status} argument is supplied, it contains\n 0 on success or a non-zero error code upon return\n (@code{ENOSYS} if the system does not provide @code{gethostname(2)}).\n \n-This intrinsic is not available on all systems.\n-\n Some non-GNU implementations of Fortran provide this intrinsic as\n only a function, not as a subroutine, or do not support the\n (optional) @var{Status} argument.\n@@ -5417,8 +5430,6 @@ Fills @var{Name} with the system's host name returned by\n @code{gethostname(2)}, returning 0 on success or a non-zero error code\n (@code{ENOSYS} if the system does not provide @code{gethostname(2)}).\n \n-This intrinsic is not available on all systems.\n-\n For information on other intrinsics with the same name:\n @xref{HostNm Intrinsic (subroutine)}.\n \n@@ -5801,9 +5812,9 @@ Intrinsic groups: (standard FORTRAN 77).\n @noindent\n Description:\n \n-Archaic form of @code{IDIM()} that is specific\n+Archaic form of @code{DIM()} that is specific\n to one type for @var{X} and @var{Y}.\n-@xref{IDiM Intrinsic}.\n+@xref{DiM Intrinsic}.\n \n @node IDInt Intrinsic\n @subsubsection IDInt Intrinsic\n@@ -6601,9 +6612,9 @@ Intrinsic groups: (standard FORTRAN 77).\n @noindent\n Description:\n \n-Archaic form of @code{ISIGN()} that is specific\n+Archaic form of @code{SIGN()} that is specific\n to one type for @var{A} and @var{B}.\n-@xref{ISign Intrinsic}.\n+@xref{Sign Intrinsic}.\n \n @end ifset\n @ifset familyF2U"}]}