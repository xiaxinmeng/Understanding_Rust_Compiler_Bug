{"sha": "b005da111c1cfd1b71647eb68eb3fe1bfc35ee64", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjAwNWRhMTExYzFjZmQxYjcxNjQ3ZWI2OGViM2ZlMWJmYzM1ZWU2NA==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2009-03-28T17:17:57Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2009-03-28T17:17:57Z"}, "message": "re PR tree-optimization/38723 (default definitions not in avail_out)\n\n2009-03-28  Richard Guenther  <rguenther@suse.de>\n\n\tPR tree-optimization/38723\n\t* tree-ssa-pre.c (compute_avail): Add all default definitions to\n\tthe entry block.\n\n\t* gcc.dg/tree-ssa/ssa-fre-22.c: New testcase.\n\nFrom-SVN: r145197", "tree": {"sha": "defb4df11f0db8f2ada0dda77bfe5190900fb115", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/defb4df11f0db8f2ada0dda77bfe5190900fb115"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b005da111c1cfd1b71647eb68eb3fe1bfc35ee64", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b005da111c1cfd1b71647eb68eb3fe1bfc35ee64", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b005da111c1cfd1b71647eb68eb3fe1bfc35ee64", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b005da111c1cfd1b71647eb68eb3fe1bfc35ee64/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "5d63a35f9f1a1ec0171ae9003fba40ddc60d8f51", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5d63a35f9f1a1ec0171ae9003fba40ddc60d8f51", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5d63a35f9f1a1ec0171ae9003fba40ddc60d8f51"}], "stats": {"total": 78, "additions": 43, "deletions": 35}, "files": [{"sha": "8dfd7e918caf516b01a1c6d1285f1b140afa7957", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b005da111c1cfd1b71647eb68eb3fe1bfc35ee64/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b005da111c1cfd1b71647eb68eb3fe1bfc35ee64/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b005da111c1cfd1b71647eb68eb3fe1bfc35ee64", "patch": "@@ -1,3 +1,9 @@\n+2009-03-28  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/38723\n+\t* tree-ssa-pre.c (compute_avail): Add all default definitions to\n+\tthe entry block.\n+\n 2009-03-28  Jan Hubicka  <jh@suse.cz>\n \n \t* tree-ssa-structalias.c (ipa_pta_execute): Fix bogus node->analyzed"}, {"sha": "09a33ef84417401c818ef9685b20e4e0c16db95d", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b005da111c1cfd1b71647eb68eb3fe1bfc35ee64/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b005da111c1cfd1b71647eb68eb3fe1bfc35ee64/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=b005da111c1cfd1b71647eb68eb3fe1bfc35ee64", "patch": "@@ -1,3 +1,8 @@\n+2009-03-28  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/38723\n+\t* gcc.dg/tree-ssa/ssa-fre-22.c: New testcase.\n+\n 2009-03-28  Paul Thomas  <pault@gcc.gnu.org\n \n         PR fortran/38538"}, {"sha": "ce311b68b9ee4e0eabff9c7ea35668ac1a76f417", "filename": "gcc/testsuite/gcc.dg/tree-ssa/ssa-fre-22.c", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b005da111c1cfd1b71647eb68eb3fe1bfc35ee64/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-fre-22.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b005da111c1cfd1b71647eb68eb3fe1bfc35ee64/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-fre-22.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-fre-22.c?ref=b005da111c1cfd1b71647eb68eb3fe1bfc35ee64", "patch": "@@ -0,0 +1,15 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O -fdump-tree-fre\" } */\n+\n+int i;\n+int foo (void)\n+{\n+  int j;\n+  i = j;\n+  return i;\n+}\n+\n+/* We should eliminate the redundant load of i.  */\n+\n+/* { dg-final { scan-tree-dump-not \"= i;\" \"fre\" } } */\n+/* { dg-final { cleanup-tree-dump \"fre\" } } */"}, {"sha": "9d06a8a3f297b7523dcc5a9ad517881a1564426a", "filename": "gcc/tree-ssa-pre.c", "status": "modified", "additions": 17, "deletions": 35, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b005da111c1cfd1b71647eb68eb3fe1bfc35ee64/gcc%2Ftree-ssa-pre.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b005da111c1cfd1b71647eb68eb3fe1bfc35ee64/gcc%2Ftree-ssa-pre.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-pre.c?ref=b005da111c1cfd1b71647eb68eb3fe1bfc35ee64", "patch": "@@ -3564,46 +3564,28 @@ compute_avail (void)\n   basic_block block, son;\n   basic_block *worklist;\n   size_t sp = 0;\n-  tree param;\n+  unsigned i;\n \n-  /* For arguments with default definitions, we pretend they are\n-     defined in the entry block.  */\n-  for (param = DECL_ARGUMENTS (current_function_decl);\n-       param;\n-       param = TREE_CHAIN (param))\n+  /* We pretend that default definitions are defined in the entry block.\n+     This includes function arguments and the static chain decl.  */\n+  for (i = 1; i < num_ssa_names; ++i)\n     {\n-      if (gimple_default_def (cfun, param) != NULL)\n-\t{\n-\t  tree def = gimple_default_def (cfun, param);\n-\t  pre_expr e = get_or_alloc_expr_for_name (def);\n-\n-\t  add_to_value (get_expr_value_id (e), e);\n-\t  if (!in_fre)\n-\t    {\n-\t      bitmap_insert_into_set (TMP_GEN (ENTRY_BLOCK_PTR), e);\n-\t      bitmap_value_insert_into_set (maximal_set, e);\n-\t    }\n-\t  bitmap_value_insert_into_set (AVAIL_OUT (ENTRY_BLOCK_PTR), e);\n-\t}\n-    }\n+      tree name = ssa_name (i);\n+      pre_expr e;\n+      if (!name\n+\t  || !SSA_NAME_IS_DEFAULT_DEF (name)\n+\t  || has_zero_uses (name)\n+\t  || !is_gimple_reg (name))\n+\tcontinue;\n \n-  /* Likewise for the static chain decl. */\n-  if (cfun->static_chain_decl)\n-    {\n-      param = cfun->static_chain_decl;\n-      if (gimple_default_def (cfun, param) != NULL)\n+      e = get_or_alloc_expr_for_name (name);\n+      add_to_value (get_expr_value_id (e), e);\n+      if (!in_fre)\n \t{\n-\t  tree def = gimple_default_def (cfun, param);\n-\t  pre_expr e = get_or_alloc_expr_for_name (def);\n-\n-\t  add_to_value (get_expr_value_id (e), e);\n-\t  if (!in_fre)\n-\t    {\n-\t      bitmap_insert_into_set (TMP_GEN (ENTRY_BLOCK_PTR), e);\n-\t      bitmap_value_insert_into_set (maximal_set, e);\n-\t    }\n-\t  bitmap_value_insert_into_set (AVAIL_OUT (ENTRY_BLOCK_PTR), e);\n+\t  bitmap_insert_into_set (TMP_GEN (ENTRY_BLOCK_PTR), e);\n+\t  bitmap_value_insert_into_set (maximal_set, e);\n \t}\n+      bitmap_value_insert_into_set (AVAIL_OUT (ENTRY_BLOCK_PTR), e);\n     }\n \n   /* Allocate the worklist.  */"}]}