{"sha": "cc61d0dec451a7a3bd0756a0894981be4c07d790", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2M2MWQwZGVjNDUxYTdhM2JkMDc1NmEwODk0OTgxYmU0YzA3ZDc5MA==", "commit": {"author": {"name": "Tom Wood", "email": "wood@gnu.org", "date": "1992-06-25T10:31:01Z"}, "committer": {"name": "Tom Wood", "email": "wood@gnu.org", "date": "1992-06-25T10:31:01Z"}, "message": "(CASE_VALUES_THRESHOLD): Define.\n\nFrom-SVN: r1282", "tree": {"sha": "a09521aba100016530c4ad770919354e8c95f7aa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a09521aba100016530c4ad770919354e8c95f7aa"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cc61d0dec451a7a3bd0756a0894981be4c07d790", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cc61d0dec451a7a3bd0756a0894981be4c07d790", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cc61d0dec451a7a3bd0756a0894981be4c07d790", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cc61d0dec451a7a3bd0756a0894981be4c07d790/comments", "author": null, "committer": null, "parents": [{"sha": "e5671f2b6ef5a998cefe72b889dffaac288e6379", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e5671f2b6ef5a998cefe72b889dffaac288e6379", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e5671f2b6ef5a998cefe72b889dffaac288e6379"}], "stats": {"total": 9, "additions": 9, "deletions": 0}, "files": [{"sha": "34873c438774081d4cea01456f1b5cbb9149085b", "filename": "gcc/config/m88k/m88k.h", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc61d0dec451a7a3bd0756a0894981be4c07d790/gcc%2Fconfig%2Fm88k%2Fm88k.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc61d0dec451a7a3bd0756a0894981be4c07d790/gcc%2Fconfig%2Fm88k%2Fm88k.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm88k%2Fm88k.h?ref=cc61d0dec451a7a3bd0756a0894981be4c07d790", "patch": "@@ -1404,6 +1404,15 @@ enum reg_class { NO_REGS, AP_REG, XRF_REGS, GENERAL_REGS, AGRF_REGS,\n    actually ignored by the `case' insn proper.  */\n /* #define CASE_DROPS_THROUGH */\n \n+/* Define this to be the smallest number of different values for which it\n+   is best to use a jump-table instead of a tree of conditional branches.\n+   The default is 4 for machines with a casesi instruction and 5 otherwise.\n+   The best 88110 number is around 7, though the exact number isn't yet\n+   known.  A third alternative for the 88110 is to use a binary tree of\n+   bb1 instructions on bits 2/1/0 if the range is dense.  This may not\n+   win very much though.  */\n+#define CASE_VALUES_THRESHOLD (TARGET_88100 ? 4 : 7)\n+\n /* Specify the tree operation to be used to convert reals to integers.  */\n #define IMPLICIT_FIX_EXPR FIX_ROUND_EXPR\n "}]}