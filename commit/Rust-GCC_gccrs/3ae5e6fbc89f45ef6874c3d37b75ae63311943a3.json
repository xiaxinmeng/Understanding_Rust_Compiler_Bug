{"sha": "3ae5e6fbc89f45ef6874c3d37b75ae63311943a3", "node_id": "C_kwDOANBUbNoAKDNhZTVlNmZiYzg5ZjQ1ZWY2ODc0YzNkMzdiNzVhZTYzMzExOTQzYTM", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2021-09-22T10:18:48Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2021-09-22T10:20:05Z"}, "message": "Small tweak to comments in range_cannot_be_superflat\n\ngcc/ada/\n\t* gcc-interface/decl.c (range_cannot_be_superflat): Tweak comments.", "tree": {"sha": "fcd980ede44a3cfd0da78f868dcc860393f35f90", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fcd980ede44a3cfd0da78f868dcc860393f35f90"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3ae5e6fbc89f45ef6874c3d37b75ae63311943a3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3ae5e6fbc89f45ef6874c3d37b75ae63311943a3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3ae5e6fbc89f45ef6874c3d37b75ae63311943a3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3ae5e6fbc89f45ef6874c3d37b75ae63311943a3/comments", "author": null, "committer": null, "parents": [{"sha": "e1223ea2f48e8588160b2948f8a1f8e47f9694fd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e1223ea2f48e8588160b2948f8a1f8e47f9694fd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e1223ea2f48e8588160b2948f8a1f8e47f9694fd"}], "stats": {"total": 6, "additions": 4, "deletions": 2}, "files": [{"sha": "32142d057647ca9d7601462573f35f45fbaa6069", "filename": "gcc/ada/gcc-interface/decl.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ae5e6fbc89f45ef6874c3d37b75ae63311943a3/gcc%2Fada%2Fgcc-interface%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ae5e6fbc89f45ef6874c3d37b75ae63311943a3/gcc%2Fada%2Fgcc-interface%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Fdecl.c?ref=3ae5e6fbc89f45ef6874c3d37b75ae63311943a3", "patch": "@@ -6503,7 +6503,8 @@ range_cannot_be_superflat (Node_Id gnat_range)\n   Node_Id gnat_scalar_range;\n   tree gnu_lb, gnu_hb, gnu_lb_minus_one;\n \n-  /* If the low bound is not constant, try to find an upper bound.  */\n+  /* If the low bound is not constant, take the worst case by finding an upper\n+     bound for its type, repeatedly if need be.  */\n   while (Nkind (gnat_lb) != N_Integer_Literal\n \t && (Ekind (Etype (gnat_lb)) == E_Signed_Integer_Subtype\n \t     || Ekind (Etype (gnat_lb)) == E_Modular_Integer_Subtype)\n@@ -6512,7 +6513,8 @@ range_cannot_be_superflat (Node_Id gnat_range)\n \t     || Nkind (gnat_scalar_range) == N_Range))\n     gnat_lb = High_Bound (gnat_scalar_range);\n \n-  /* If the high bound is not constant, try to find a lower bound.  */\n+  /* If the high bound is not constant, take the worst case by finding a lower\n+     bound for its type, repeatedly if need be.  */\n   while (Nkind (gnat_hb) != N_Integer_Literal\n \t && (Ekind (Etype (gnat_hb)) == E_Signed_Integer_Subtype\n \t     || Ekind (Etype (gnat_hb)) == E_Modular_Integer_Subtype)"}]}