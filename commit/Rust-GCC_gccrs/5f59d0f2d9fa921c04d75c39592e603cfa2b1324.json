{"sha": "5f59d0f2d9fa921c04d75c39592e603cfa2b1324", "node_id": "C_kwDOANBUbNoAKDVmNTlkMGYyZDlmYTkyMWMwNGQ3NWMzOTU5MmU2MDNjZmEyYjEzMjQ", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2022-07-20T09:02:03Z"}, "committer": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2022-07-20T12:05:07Z"}, "message": "Improve SLP codegen, avoiding unnecessary TREE_ADDRESSABLE\n\nThe following adjusts vectorizer code generation to avoid splitting\nout address increments for invariant addresses which causes objects\nto get TREE_ADDRESSABLE when not necessary.\n\n\t* tree-vect-data-refs.cc (bump_vector_ptr): Return an\n\tinvariant updated address when the input was invariant.", "tree": {"sha": "ff129880a34d21d81c8763b47ea994dff4a577a9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ff129880a34d21d81c8763b47ea994dff4a577a9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5f59d0f2d9fa921c04d75c39592e603cfa2b1324", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5f59d0f2d9fa921c04d75c39592e603cfa2b1324", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5f59d0f2d9fa921c04d75c39592e603cfa2b1324", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5f59d0f2d9fa921c04d75c39592e603cfa2b1324/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "78d5e125c008d87cb2e1c08a9ff2a02d4214ffcf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/78d5e125c008d87cb2e1c08a9ff2a02d4214ffcf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/78d5e125c008d87cb2e1c08a9ff2a02d4214ffcf"}], "stats": {"total": 8, "additions": 8, "deletions": 0}, "files": [{"sha": "b279a82551eb70379804d405983ae5dc44b66bf5", "filename": "gcc/tree-vect-data-refs.cc", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f59d0f2d9fa921c04d75c39592e603cfa2b1324/gcc%2Ftree-vect-data-refs.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f59d0f2d9fa921c04d75c39592e603cfa2b1324/gcc%2Ftree-vect-data-refs.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-data-refs.cc?ref=5f59d0f2d9fa921c04d75c39592e603cfa2b1324", "patch": "@@ -5195,6 +5195,14 @@ bump_vector_ptr (vec_info *vinfo,\n \n   if (TREE_CODE (dataref_ptr) == SSA_NAME)\n     new_dataref_ptr = copy_ssa_name (dataref_ptr);\n+  else if (is_gimple_min_invariant (dataref_ptr))\n+    /* When possible avoid emitting a separate increment stmt that will\n+       force the addressed object addressable.  */\n+    return build1 (ADDR_EXPR, TREE_TYPE (dataref_ptr),\n+\t\t   fold_build2 (MEM_REF,\n+\t\t\t\tTREE_TYPE (TREE_TYPE (dataref_ptr)),\n+\t\t\t\tdataref_ptr,\n+\t\t\t\tfold_convert (ptr_type_node, update)));\n   else\n     new_dataref_ptr = make_ssa_name (TREE_TYPE (dataref_ptr));\n   incr_stmt = gimple_build_assign (new_dataref_ptr, POINTER_PLUS_EXPR,"}]}