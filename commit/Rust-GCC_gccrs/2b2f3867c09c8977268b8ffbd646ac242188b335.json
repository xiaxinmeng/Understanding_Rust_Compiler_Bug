{"sha": "2b2f3867c09c8977268b8ffbd646ac242188b335", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmIyZjM4NjdjMDljODk3NzI2OGI4ZmZiZDY0NmFjMjQyMTg4YjMzNQ==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2020-07-28T07:45:52Z"}, "committer": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2020-07-29T11:30:14Z"}, "message": "tree-optimization/96349 - avoid abnormal coalescing issues in loop split\n\nThis avoids splitting a loop when the entry value of a loop PHI is\ninvolved with abnormal coalescing.\n\n2020-07-28  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/96349\n\t* tree-ssa-loop-split.c (stmt_semi_invariant_p_1): When the\n\tcondition runs into a loop PHI with an abnormal entry value give up.\n\n\t* gcc.dg/torture/pr96349.c: New testcase.", "tree": {"sha": "3a0e21225cc5f32893335cde1f5bb4f0356a63c4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3a0e21225cc5f32893335cde1f5bb4f0356a63c4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2b2f3867c09c8977268b8ffbd646ac242188b335", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2b2f3867c09c8977268b8ffbd646ac242188b335", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2b2f3867c09c8977268b8ffbd646ac242188b335", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2b2f3867c09c8977268b8ffbd646ac242188b335/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "883eec6653b4dd89f7ed0cdad2b0b1010e045e12", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/883eec6653b4dd89f7ed0cdad2b0b1010e045e12", "html_url": "https://github.com/Rust-GCC/gccrs/commit/883eec6653b4dd89f7ed0cdad2b0b1010e045e12"}], "stats": {"total": 35, "additions": 35, "deletions": 0}, "files": [{"sha": "4ce394982135730a27ec0047ce10fe2dc314e727", "filename": "gcc/testsuite/gcc.dg/torture/pr96349.c", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b2f3867c09c8977268b8ffbd646ac242188b335/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr96349.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b2f3867c09c8977268b8ffbd646ac242188b335/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr96349.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr96349.c?ref=2b2f3867c09c8977268b8ffbd646ac242188b335", "patch": "@@ -0,0 +1,25 @@\n+/* { dg-do compile } */\n+\n+void __attribute__ ((returns_twice))\n+gr (void);\n+\n+void\n+ib (void);\n+\n+void\n+zg (void);\n+\n+void\n+yw (int uz)\n+{\n+  gr ();\n+\n+  for (;;)\n+    if (uz != 0)\n+      {\n+        uz = 0;\n+        ib ();\n+      }\n+    else\n+      zg ();\n+}"}, {"sha": "1eb6be5ddb24be6e73237ae19ea1c57da15565a8", "filename": "gcc/tree-ssa-loop-split.c", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b2f3867c09c8977268b8ffbd646ac242188b335/gcc%2Ftree-ssa-loop-split.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b2f3867c09c8977268b8ffbd646ac242188b335/gcc%2Ftree-ssa-loop-split.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-loop-split.c?ref=2b2f3867c09c8977268b8ffbd646ac242188b335", "patch": "@@ -1145,6 +1145,16 @@ stmt_semi_invariant_p_1 (struct loop *loop, gimple *stmt,\n \n       if (gimple_bb (stmt) == loop->header)\n \t{\n+\t  /* If the entry value is subject to abnormal coalescing\n+\t     avoid the transform since we're going to duplicate the\n+\t     loop header and thus likely introduce overlapping life-ranges\n+\t     between the PHI def and the entry on the path when the\n+\t     first loop is skipped.  */\n+\t  tree entry_def\n+\t    = PHI_ARG_DEF_FROM_EDGE (phi, loop_preheader_edge (loop));\n+\t  if (TREE_CODE (entry_def) == SSA_NAME\n+\t      && SSA_NAME_OCCURS_IN_ABNORMAL_PHI (entry_def))\n+\t    return false;\n \t  invar = loop_iter_phi_semi_invariant_p (loop, phi, skip_head);\n \t  return invar;\n \t}"}]}