{"sha": "919509ceea1b225f91160c2976214cc7afbe8ac6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTE5NTA5Y2VlYTFiMjI1ZjkxMTYwYzI5NzYyMTRjYzdhZmJlOGFjNg==", "commit": {"author": {"name": "Diego Novillo", "email": "dnovillo@cygnus.com", "date": "1999-11-18T00:41:13Z"}, "committer": {"name": "Diego Novillo", "email": "dnovillo@gcc.gnu.org", "date": "1999-11-18T00:41:13Z"}, "message": "invoke.texi: Add documentation for -muninit-const-in-rodata.\n\n\t* invoke.texi: Add documentation for -muninit-const-in-rodata.\n\t* config/mips/mips.h (MASK_UNINIT_CONST_IN_RODATA): Define.\n\t(TARGET_UNINIT_CONST_IN_RODATA): Define.\n\t(text_section): Add switches -munint-const-in-rodata and\n\t-mno-uninit-const-in-rodata.\n\t(ASM_OUTPUT_COMMON): Remove.\n\t(ASM_OUTPUT_ALIGNED_DECL_COMMON): Define. Check if uninitialized\n\tconst objects should be placed in read-only data. Otherwise declare\n\tthem in common.\n\nFrom-SVN: r30562", "tree": {"sha": "9396efbc699c78ba94344835ce3214b760e97c13", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9396efbc699c78ba94344835ce3214b760e97c13"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/919509ceea1b225f91160c2976214cc7afbe8ac6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/919509ceea1b225f91160c2976214cc7afbe8ac6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/919509ceea1b225f91160c2976214cc7afbe8ac6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/919509ceea1b225f91160c2976214cc7afbe8ac6/comments", "author": null, "committer": null, "parents": [{"sha": "d49256bbdfe06401b11e1c3246c2f0d6e2096089", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d49256bbdfe06401b11e1c3246c2f0d6e2096089", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d49256bbdfe06401b11e1c3246c2f0d6e2096089"}], "stats": {"total": 56, "additions": 52, "deletions": 4}, "files": [{"sha": "fe499641b457f07ad5fe3e41a04578c680180948", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/919509ceea1b225f91160c2976214cc7afbe8ac6/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/919509ceea1b225f91160c2976214cc7afbe8ac6/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=919509ceea1b225f91160c2976214cc7afbe8ac6", "patch": "@@ -1,3 +1,15 @@\n+Wed Nov 17 17:39:48 MST 1999\tDiego Novillo <dnovillo@cygnus.com>\n+\n+\t* invoke.texi: Add documentation for -muninit-const-in-rodata.\n+\t* config/mips/mips.h (MASK_UNINIT_CONST_IN_RODATA): Define.\n+\t(TARGET_UNINIT_CONST_IN_RODATA): Define.\n+\t(text_section): Add switches -munint-const-in-rodata and\n+\t-mno-uninit-const-in-rodata.\n+\t(ASM_OUTPUT_COMMON): Remove.\n+\t(ASM_OUTPUT_ALIGNED_DECL_COMMON): Define. Check if uninitialized\n+\tconst objects should be placed in read-only data. Otherwise declare\n+\tthem in common.\n+\n Wed Nov 17 16:38:32 1999  Richard Henderson  <rth@cygnus.com>\n \n \t* jump.c (jump_optimize_1): Revert last change."}, {"sha": "1d0f1a8841d01f9807a794c2ef4cc307878bdd10", "filename": "gcc/config/mips/mips.h", "status": "modified", "additions": 33, "deletions": 2, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/919509ceea1b225f91160c2976214cc7afbe8ac6/gcc%2Fconfig%2Fmips%2Fmips.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/919509ceea1b225f91160c2976214cc7afbe8ac6/gcc%2Fconfig%2Fmips%2Fmips.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.h?ref=919509ceea1b225f91160c2976214cc7afbe8ac6", "patch": "@@ -209,6 +209,8 @@ extern void\t\tsbss_section PARAMS ((void));\n #define MASK_MIPS16\t0x01000000\t/* Generate mips16 code */\n #define MASK_NO_CHECK_ZERO_DIV 0x04000000\t/* divide by zero checking */\n #define MASK_CHECK_RANGE_DIV 0x08000000\t/* divide result range checking */\n+#define MASK_UNINIT_CONST_IN_RODATA 0x10000000\t/* Store uninitialized\n+\t\t\t\t\t\t   consts in rodata */\n \n \t\t\t\t\t/* Dummy switches used only in spec's*/\n #define MASK_MIPS_TFILE\t0x00000000\t/* flag for mips-tfile usage */\n@@ -288,6 +290,11 @@ extern void\t\tsbss_section PARAMS ((void));\n \t\t\t\t\t   fastest code.  */\n #define TARGET_EMBEDDED_DATA\t(target_flags & MASK_EMBEDDED_DATA)\n \n+\t\t\t\t\t/* always store uninitialized const\n+\t\t\t\t\t   variables in rodata, requires\n+\t\t\t\t\t   TARGET_EMBEDDED_DATA. */\n+#define TARGET_UNINIT_CONST_IN_RODATA\t(target_flags & MASK_UNINIT_CONST_IN_RODATA)\n+\n \t\t\t\t\t/* generate big endian code.  */\n #define TARGET_BIG_ENDIAN\t(target_flags & MASK_BIG_ENDIAN)\n \n@@ -392,6 +399,10 @@ extern void\t\tsbss_section PARAMS ((void));\n      \"Use ROM instead of RAM\"},\t\t\t\t\t\t\\\n   {\"no-embedded-data\",\t -MASK_EMBEDDED_DATA,\t\t\t\t\\\n      \"Don't use ROM instead of RAM\"},\t\t\t\t\t\\\n+  {\"uninit-const-in-rodata\", MASK_UNINIT_CONST_IN_RODATA,\t\t\\\n+     \"Put uninitialized constants in ROM (needs -membedded-data)\"},\t\\\n+  {\"no-uninit-const-in-rodata\", -MASK_UNINIT_CONST_IN_RODATA,\t\t\\\n+     \"Don't put uninitialized constants in ROM\"},\t\t\t\\\n   {\"eb\",\t\t  MASK_BIG_ENDIAN,\t\t\t\t\\\n      \"Use big-endian byte order\"},\t\t\t\t\t\\\n   {\"el\",\t\t -MASK_BIG_ENDIAN,\t\t\t\t\\\n@@ -4188,8 +4199,28 @@ while (0)\n \n /* This says how to define a global common symbol.  */\n \n-#define ASM_OUTPUT_COMMON(STREAM, NAME, SIZE, ROUNDED)\t\t\t\\\n-  mips_declare_object (STREAM, NAME, \"\\n\\t.comm\\t\", \",%u\\n\", (SIZE))\n+#define ASM_OUTPUT_ALIGNED_DECL_COMMON(STREAM, DECL, NAME, SIZE, ALIGN) \\\n+  do {\t\t\t\t\t\t\t\t\t\\\n+    /* If the target wants uninitialized const declarations in\t\t\\\n+       .rdata then don't put them in .comm */\t\t\t\t\\\n+    if (TARGET_EMBEDDED_DATA && TARGET_UNINIT_CONST_IN_RODATA\t\t\\\n+\t&& TREE_CODE (DECL) == VAR_DECL && TREE_READONLY (DECL)\t\t\\\n+\t&& (DECL_INITIAL (DECL) == 0\t\t\t\t\t\\\n+\t    || DECL_INITIAL (DECL) == error_mark_node))\t\t\t\\\n+      {\t\t\t\t\t\t\t\t\t\\\n+\tif (TREE_PUBLIC (DECL) && DECL_NAME (DECL))\t\t\t\\\n+\t  ASM_GLOBALIZE_LABEL (STREAM, NAME);\t\t\t\t\\\n+\t    \t\t\t\t\t\t\t\t\\\n+\tREADONLY_DATA_SECTION ();\t\t\t\t\t\\\n+\tASM_OUTPUT_ALIGN (STREAM, floor_log2 (ALIGN / BITS_PER_UNIT));\t\\\n+\tmips_declare_object (STREAM, NAME, \"\", \":\\n\\t.space\\t%u\\n\",\t\\\n+\t    (SIZE));\t\t\t\t\t\t\t\\\n+      }\t\t\t\t\t\t\t\t\t\\\n+    else\t\t\t\t\t\t\t\t\\\n+      mips_declare_object (STREAM, NAME, \"\\n\\t.comm\\t\", \",%u\\n\",\t\\\n+\t  (SIZE));\t\t\t\t\t\t\t\\\n+  } while (0)\n+\n \n /* This says how to define a local common symbol (ie, not visible to\n    linker).  */"}, {"sha": "7b7a088202afce7b2807a71b8c3ccacf8d0ddd72", "filename": "gcc/invoke.texi", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/919509ceea1b225f91160c2976214cc7afbe8ac6/gcc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/919509ceea1b225f91160c2976214cc7afbe8ac6/gcc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Finvoke.texi?ref=919509ceea1b225f91160c2976214cc7afbe8ac6", "patch": "@@ -334,12 +334,12 @@ in the following sections.\n -mminimum-fp-blocks  -mnohc-struct-return\n \n @emph{MIPS Options}\n--mabicalls  -mcpu=@var{cpu type}  -membedded-data\n+-mabicalls  -mcpu=@var{cpu type}  -membedded-data -muninit-const-in-rodata\n -membedded-pic  -mfp32  -mfp64  -mgas  -mgp32  -mgp64\n -mgpopt  -mhalf-pic  -mhard-float  -mint64  -mips1\n -mips2  -mips3 -mips4 -mlong64  -mlong32 -mlong-calls  -mmemcpy\n -mmips-as  -mmips-tfile  -mno-abicalls\n--mno-embedded-data  -mno-embedded-pic\n+-mno-embedded-data  -mno-uninit-const-in-rodata  -mno-embedded-pic\n -mno-gpopt  -mno-long-calls\n -mno-memcpy  -mno-mips-tfile  -mno-rnames  -mno-stats\n -mrnames  -msoft-float\n@@ -5574,6 +5574,11 @@ next in the small data section if possible, otherwise in data.  This gives\n slightly slower code than the default, but reduces the amount of RAM required\n when executing, and thus may be preferred for some embedded systems.\n \n+@item -muninit-const-in-rodata\n+@itemx -mno-uninit-const-in-rodata\n+When used together with -membedded-data, it will always store uninitialized\n+const variables in the read-only data section.\n+  \n @item -msingle-float\n @itemx -mdouble-float\n The @samp{-msingle-float} switch tells gcc to assume that the floating"}]}