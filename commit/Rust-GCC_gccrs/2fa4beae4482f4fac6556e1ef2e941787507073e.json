{"sha": "2fa4beae4482f4fac6556e1ef2e941787507073e", "node_id": "C_kwDOANBUbNoAKDJmYTRiZWFlNDQ4MmY0ZmFjNjU1NmUxZWYyZTk0MTc4NzUwNzA3M2U", "commit": {"author": {"name": "Steve Baird", "email": "baird@adacore.com", "date": "2022-08-24T16:11:02Z"}, "committer": {"name": "Marc Poulhi\u00e8s", "email": "poulhies@adacore.com", "date": "2022-09-12T08:16:50Z"}, "message": "[Ada] Remove a no-longer-correct comment\n\nRemove a comment about the former use of the -gnatd9 switch (that switch is\nnow unused).\n\ngcc/ada/\n\n\t* debug.adb: remove a comment.", "tree": {"sha": "1e24ba232227640f3f8f5e1e288e3260c419da2c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1e24ba232227640f3f8f5e1e288e3260c419da2c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2fa4beae4482f4fac6556e1ef2e941787507073e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2fa4beae4482f4fac6556e1ef2e941787507073e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2fa4beae4482f4fac6556e1ef2e941787507073e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2fa4beae4482f4fac6556e1ef2e941787507073e/comments", "author": {"login": "swbaird", "id": 50751052, "node_id": "MDQ6VXNlcjUwNzUxMDUy", "avatar_url": "https://avatars.githubusercontent.com/u/50751052?v=4", "gravatar_id": "", "url": "https://api.github.com/users/swbaird", "html_url": "https://github.com/swbaird", "followers_url": "https://api.github.com/users/swbaird/followers", "following_url": "https://api.github.com/users/swbaird/following{/other_user}", "gists_url": "https://api.github.com/users/swbaird/gists{/gist_id}", "starred_url": "https://api.github.com/users/swbaird/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/swbaird/subscriptions", "organizations_url": "https://api.github.com/users/swbaird/orgs", "repos_url": "https://api.github.com/users/swbaird/repos", "events_url": "https://api.github.com/users/swbaird/events{/privacy}", "received_events_url": "https://api.github.com/users/swbaird/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dkm", "id": 87603, "node_id": "MDQ6VXNlcjg3NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/87603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dkm", "html_url": "https://github.com/dkm", "followers_url": "https://api.github.com/users/dkm/followers", "following_url": "https://api.github.com/users/dkm/following{/other_user}", "gists_url": "https://api.github.com/users/dkm/gists{/gist_id}", "starred_url": "https://api.github.com/users/dkm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dkm/subscriptions", "organizations_url": "https://api.github.com/users/dkm/orgs", "repos_url": "https://api.github.com/users/dkm/repos", "events_url": "https://api.github.com/users/dkm/events{/privacy}", "received_events_url": "https://api.github.com/users/dkm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "65d76c55931c076d674def3e6bd035f875e2c55c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/65d76c55931c076d674def3e6bd035f875e2c55c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/65d76c55931c076d674def3e6bd035f875e2c55c"}], "stats": {"total": 3, "additions": 0, "deletions": 3}, "files": [{"sha": "475a123d03648162b779311a6438c3e8b5b97438", "filename": "gcc/ada/debug.adb", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2fa4beae4482f4fac6556e1ef2e941787507073e/gcc%2Fada%2Fdebug.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2fa4beae4482f4fac6556e1ef2e941787507073e/gcc%2Fada%2Fdebug.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fdebug.adb?ref=2fa4beae4482f4fac6556e1ef2e941787507073e", "patch": "@@ -1089,9 +1089,6 @@ package body Debug is\n    --       opposite endianness from the actual correct value. Useful in\n    --       testing out code generation from the packed routines.\n \n-   --  d9   This allows lock free implementation for protected objects\n-   --       (see Exp_Ch9).\n-\n    --  d.1  Sets Opt.Unnest_Subprogram_Mode to enable unnesting of subprograms.\n    --       This special pass does not actually unnest things, but it ensures\n    --       that a nested procedure does not contain any uplevel references."}]}