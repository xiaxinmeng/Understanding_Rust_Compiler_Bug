{"sha": "030875c197e339542ddfcbad90cfc01263151bec", "node_id": "C_kwDOANBUbNoAKDAzMDg3NWMxOTdlMzM5NTQyZGRmY2JhZDkwY2ZjMDEyNjMxNTFiZWM", "commit": {"author": {"name": "Tobias Burnus", "email": "tobias@codesourcery.com", "date": "2021-10-22T22:04:43Z"}, "committer": {"name": "Tobias Burnus", "email": "tobias@codesourcery.com", "date": "2021-10-22T22:04:43Z"}, "message": "Fortran: Change XFAIL to PASS\n\nReplace dg-excess-errors by dg-error/warning and dg-prune-output for\nmore fine-grained output handling and to avoid XPASS.\n\ngcc/testsuite/ChangeLog:\n\n\t* gfortran.dg/associate_3.f03: Replace dg-excess-errors by\n\tother dg-* to change XFAIL to PASS.\n\t* gfortran.dg/binding_label_tests_4.f03: Likewise.\n\t* gfortran.dg/block_4.f08: Likewise.\n\t* gfortran.dg/charlen_04.f90: Likewise.\n\t* gfortran.dg/charlen_05.f90: Likewise.\n\t* gfortran.dg/charlen_06.f90: Likewise.\n\t* gfortran.dg/charlen_13.f90: Likewise.\n\t* gfortran.dg/coarray_9.f90: Likewise.\n\t* gfortran.dg/coarray_collectives_3.f90: Likewise.\n\t* gfortran.dg/data_invalid.f90: Likewise.\n\t* gfortran.dg/do_4.f: Likewise.\n\t* gfortran.dg/dollar_sym_1.f90: Likewise.\n\t* gfortran.dg/dollar_sym_3.f: Likewise.\n\t* gfortran.dg/fmt_tab_1.f90: Likewise.\n\t* gfortran.dg/fmt_tab_2.f90: Likewise.\n\t* gfortran.dg/forall_16.f90: Likewise.\n\t* gfortran.dg/g77/970125-0.f: Likewise.\n\t* gfortran.dg/gomp/unexpected-end.f90: Likewise.\n\t* gfortran.dg/interface_operator_1.f90: Likewise.\n\t* gfortran.dg/interface_operator_2.f90: Likewise.\n\t* gfortran.dg/line_length_4.f90: Likewise.\n\t* gfortran.dg/line_length_5.f90: Likewise.\n\t* gfortran.dg/line_length_6.f90: Likewise.\n\t* gfortran.dg/line_length_8.f90: Likewise.\n\t* gfortran.dg/line_length_9.f90: Likewise.\n\t* gfortran.dg/pr65045.f90: Likewise.\n\t* gfortran.dg/pr69497.f90: Likewise.\n\t* gfortran.dg/submodule_21.f08: Likewise.\n\t* gfortran.dg/tab_continuation.f: Likewise.\n\t* gfortran.dg/typebound_proc_2.f90: Likewise.\n\t* gfortran.dg/warnings_are_errors_1.f90: Likewise.", "tree": {"sha": "8b39eea6fb5b75db13da413cc02f4e487758317f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8b39eea6fb5b75db13da413cc02f4e487758317f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/030875c197e339542ddfcbad90cfc01263151bec", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/030875c197e339542ddfcbad90cfc01263151bec", "html_url": "https://github.com/Rust-GCC/gccrs/commit/030875c197e339542ddfcbad90cfc01263151bec", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/030875c197e339542ddfcbad90cfc01263151bec/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "24e99e6ec1cc57f3660c00ff677c7feb16aa94d2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/24e99e6ec1cc57f3660c00ff677c7feb16aa94d2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/24e99e6ec1cc57f3660c00ff677c7feb16aa94d2"}], "stats": {"total": 111, "additions": 51, "deletions": 60}, "files": [{"sha": "dfd5a99500e41b5860e6012ceb85ecdd58a087b5", "filename": "gcc/testsuite/gfortran.dg/associate_3.f03", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/030875c197e339542ddfcbad90cfc01263151bec/gcc%2Ftestsuite%2Fgfortran.dg%2Fassociate_3.f03", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/030875c197e339542ddfcbad90cfc01263151bec/gcc%2Ftestsuite%2Fgfortran.dg%2Fassociate_3.f03", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fassociate_3.f03?ref=030875c197e339542ddfcbad90cfc01263151bec", "patch": "@@ -34,4 +34,4 @@ PROGRAM main\n     INTEGER :: b ! { dg-error \"Unexpected data declaration statement\" }\n   END ASSOCIATE\n END PROGRAM main ! { dg-error \"Expecting END ASSOCIATE\" }\n-! { dg-excess-errors \"Unexpected end of file\" }\n+! { dg-error \"Unexpected end of file\" \"\" { target \"*-*-*\" } 0 }"}, {"sha": "af9a588cfecc0ad06c3de138e8237f594388fb3b", "filename": "gcc/testsuite/gfortran.dg/binding_label_tests_4.f03", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/030875c197e339542ddfcbad90cfc01263151bec/gcc%2Ftestsuite%2Fgfortran.dg%2Fbinding_label_tests_4.f03", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/030875c197e339542ddfcbad90cfc01263151bec/gcc%2Ftestsuite%2Fgfortran.dg%2Fbinding_label_tests_4.f03", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fbinding_label_tests_4.f03?ref=030875c197e339542ddfcbad90cfc01263151bec", "patch": "@@ -20,4 +20,4 @@ module C\n use A\n use B ! { dg-error \"Cannot open module file\" }\n end module C\n-! { dg-excess-errors \"compilation terminated\" }\n+! { dg-prune-output \"compilation terminated\" }"}, {"sha": "3ff52b0a098abec34d9566528a2527d6c741fdd8", "filename": "gcc/testsuite/gfortran.dg/block_4.f08", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/030875c197e339542ddfcbad90cfc01263151bec/gcc%2Ftestsuite%2Fgfortran.dg%2Fblock_4.f08", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/030875c197e339542ddfcbad90cfc01263151bec/gcc%2Ftestsuite%2Fgfortran.dg%2Fblock_4.f08", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fblock_4.f08?ref=030875c197e339542ddfcbad90cfc01263151bec", "patch": "@@ -15,4 +15,4 @@ PROGRAM main\n   myname2: BLOCK\n   END BLOCK ! { dg-error \"Expected block name of 'myname2'\" }\n END PROGRAM main ! { dg-error \"Expecting END BLOCK\" }\n-! { dg-excess-errors \"Unexpected end of file\" }\n+! { dg-error \"Unexpected end of file\" \"\" { target \"*-*-*\" } 0 }"}, {"sha": "97aa0ec583c8aa086c306ee7ad7e26739390eda4", "filename": "gcc/testsuite/gfortran.dg/charlen_04.f90", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/030875c197e339542ddfcbad90cfc01263151bec/gcc%2Ftestsuite%2Fgfortran.dg%2Fcharlen_04.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/030875c197e339542ddfcbad90cfc01263151bec/gcc%2Ftestsuite%2Fgfortran.dg%2Fcharlen_04.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fcharlen_04.f90?ref=030875c197e339542ddfcbad90cfc01263151bec", "patch": "@@ -3,6 +3,5 @@\n program p\n    type t\n       character(*), allocatable :: x(*)  ! { dg-error \"must have a deferred shape\" }\n-   end type\n+   end type                              ! { dg-error \"needs to be a constant specification\" \"\" { target \"*-*-*\" } .-1 } \n end\n-! { dg-excess-errors \"needs to be a constant specification\" } "}, {"sha": "e58f9263330c4526fc0660944c9b602d9a5bd2e0", "filename": "gcc/testsuite/gfortran.dg/charlen_05.f90", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/030875c197e339542ddfcbad90cfc01263151bec/gcc%2Ftestsuite%2Fgfortran.dg%2Fcharlen_05.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/030875c197e339542ddfcbad90cfc01263151bec/gcc%2Ftestsuite%2Fgfortran.dg%2Fcharlen_05.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fcharlen_05.f90?ref=030875c197e339542ddfcbad90cfc01263151bec", "patch": "@@ -3,6 +3,5 @@\n program p\n    type t\n       character(*) :: x y  ! { dg-error \"error in data declaration\" }\n-   end type\n+   end type                ! { dg-error \"needs to be a constant specification\" \"\" { target \"*-*-*\" } .-1 } \n end\n-! { dg-excess-errors \"needs to be a constant specification\" } "}, {"sha": "836c1c69d9e83b0258c6662572ee9028c49eb092", "filename": "gcc/testsuite/gfortran.dg/charlen_06.f90", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/030875c197e339542ddfcbad90cfc01263151bec/gcc%2Ftestsuite%2Fgfortran.dg%2Fcharlen_06.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/030875c197e339542ddfcbad90cfc01263151bec/gcc%2Ftestsuite%2Fgfortran.dg%2Fcharlen_06.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fcharlen_06.f90?ref=030875c197e339542ddfcbad90cfc01263151bec", "patch": "@@ -3,6 +3,5 @@\n program p\n    type t\n       character(*) :: x+1  ! { dg-error \"error in data declaration\" }\n-   end type\n+   end type                ! { dg-error \"needs to be a constant specification\" \"\" { target \"*-*-*\" } .-1 } \n end\n-! { dg-excess-errors \"needs to be a constant specification\" } "}, {"sha": "8dc192bd0b12a83a667883402f62ca62e7c527cf", "filename": "gcc/testsuite/gfortran.dg/charlen_13.f90", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/030875c197e339542ddfcbad90cfc01263151bec/gcc%2Ftestsuite%2Fgfortran.dg%2Fcharlen_13.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/030875c197e339542ddfcbad90cfc01263151bec/gcc%2Ftestsuite%2Fgfortran.dg%2Fcharlen_13.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fcharlen_13.f90?ref=030875c197e339542ddfcbad90cfc01263151bec", "patch": "@@ -4,7 +4,7 @@ program p\n    type t\n       character(2), allocatable :: a(*) ! { dg-error \"must have a deferred shape\" }\n       character(*), allocatable :: b(2) ! { dg-error \"must have a deferred shape\" }\n+                                        ! { dg-error \"needs to be a constant specification\" \"\" { target \"*-*-*\" } .-1 } \n       character(*), allocatable :: c(*) ! { dg-error \"must have a deferred shape\" }\n-   end type\n+   end type                             ! { dg-error \"needs to be a constant specification\" \"\" { target \"*-*-*\" } .-1 } \n end\n-! { dg-excess-errors \"needs to be a constant specification\" } "}, {"sha": "b613428bcc713bced2676f267aab5108805d9082", "filename": "gcc/testsuite/gfortran.dg/coarray_9.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/030875c197e339542ddfcbad90cfc01263151bec/gcc%2Ftestsuite%2Fgfortran.dg%2Fcoarray_9.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/030875c197e339542ddfcbad90cfc01263151bec/gcc%2Ftestsuite%2Fgfortran.dg%2Fcoarray_9.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fcoarray_9.f90?ref=030875c197e339542ddfcbad90cfc01263151bec", "patch": "@@ -16,4 +16,4 @@\n end critical ! \"Expecting END PROGRAM statement\"  (but error above is fatal)\n \n end\n-! { dg-excess-errors \"compilation terminated\" }\n+! { dg-prune-output \"compilation terminated\" }"}, {"sha": "04d540f373db1641c7ef59c4d0cd0df79eb7fa73", "filename": "gcc/testsuite/gfortran.dg/coarray_collectives_3.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/030875c197e339542ddfcbad90cfc01263151bec/gcc%2Ftestsuite%2Fgfortran.dg%2Fcoarray_collectives_3.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/030875c197e339542ddfcbad90cfc01263151bec/gcc%2Ftestsuite%2Fgfortran.dg%2Fcoarray_collectives_3.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fcoarray_collectives_3.f90?ref=030875c197e339542ddfcbad90cfc01263151bec", "patch": "@@ -8,4 +8,4 @@ program test\n   integer :: val\n   call co_max(val) ! { dg-error \"Coarrays disabled at .1., use '-fcoarray=' to enable\" }\n end program test\n-! { dg-excess-errors \"compilation terminated\" }\n+! { dg-prune-output \"compilation terminated\" }"}, {"sha": "6d0358759ad2ab26ec1e894e1f288061fec0ca12", "filename": "gcc/testsuite/gfortran.dg/data_invalid.f90", "status": "modified", "additions": 7, "deletions": 9, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/030875c197e339542ddfcbad90cfc01263151bec/gcc%2Ftestsuite%2Fgfortran.dg%2Fdata_invalid.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/030875c197e339542ddfcbad90cfc01263151bec/gcc%2Ftestsuite%2Fgfortran.dg%2Fdata_invalid.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fdata_invalid.f90?ref=030875c197e339542ddfcbad90cfc01263151bec", "patch": "@@ -40,23 +40,23 @@ SUBROUTINE data_init_array_invalid()\n   data       e(2) / 2 /                          ! { dg-error \"re-initialization\" }\n \n   integer :: f(3) = 0                            ! { dg-error \"already is initialized\" }\n-  data       f(2) / 1 /\n+  data       f(2) / 1 /                          ! { dg-error \"already is initialized\" }\n \n   ! full array initializer, re-initialize subsection\n   integer :: g(3)\n   data       g      / 3*1 /\n   data       g(1:2) / 2*2 /                      ! { dg-error \"re-initialization\" }\n \n   integer :: h(3) = 1                            ! { dg-error \"already is initialized\" }\n-  data       h(2:3) / 2*2 /\n+  data       h(2:3) / 2*2 /                      ! { dg-error \"already is initialized\" }\n \n   ! full array initializer, re-initialize full array\n   integer :: i(3)\n   data       i   / 3*1 /\n   data       i   / 2,2,2 /                       ! { dg-error \"re-initialization\" }\n \n   integer :: j(3) = 1                            ! { dg-error \"already is initialized\" }\n-  data       j   / 3*2 /\n+  data       j   / 3*2 /                         ! { dg-error \"already is initialized\" }\n END SUBROUTINE\n \n SUBROUTINE data_init_matrix_invalid()\n@@ -85,23 +85,23 @@ SUBROUTINE data_init_matrix_invalid()\n   data       e(2,3) / 2 /                        ! { dg-error \"re-initialization\" }\n \n   integer :: f(3,3) = 1                          ! { dg-error \"already is initialized\" }\n-  data       f(3,2) / 2 /\n+  data       f(3,2) / 2 /                        ! { dg-error \"already is initialized\" }\n \n   ! full array initializer, re-initialize subsection\n   integer :: g(3,3)\n   data       g          / 9 * 1 /\n   data       g(2:3,2:3) / 2, 2*3, 4 /            ! { dg-error \"re-initialization\" }\n \n   integer :: h(3,3) = 1                          ! { dg-error \"already is initialized\" }\n-  data       h(2:3,2:3) / 2, 2*3, 4 /\n+  data       h(2:3,2:3) / 2, 2*3, 4 /            ! { dg-error \"already is initialized\" }\n \n   ! full array initializer, re-initialize full array\n   integer :: i(3,3)\n   data       i   / 3*1, 3*2, 3*3 /\n   data       i   / 9 * 1 /                       ! { dg-error \"re-initialization\" }\n \n   integer :: j(3,3) = 0                          ! { dg-error \"already is initialized\" }\n-  data       j   / 9 * 1 /\n+  data       j   / 9 * 1 /                       ! { dg-error \"already is initialized\" }\n END SUBROUTINE\n \n SUBROUTINE data_init_misc_invalid()\n@@ -112,11 +112,9 @@ SUBROUTINE data_init_misc_invalid()\n   ! index out-of-bounds, direct access\n   integer :: b(3)\n   data       b(-2) / 1 /                         ! { dg-error \"below array lower bound\" }\n-\n+                                                 ! { dg-warning \"is out of bounds\" \"\" { target *-*-* } .-1 }\n   ! index out-of-bounds, implied do-loop (PR32315)\n   integer :: i\n   character(len=20), dimension(4) :: string\n   data (string(i), i = 1, 5) / 'A', 'B', 'C', 'D', 'E' /   ! { dg-error \"above array upper bound\" }\n END SUBROUTINE\n-\n-! { dg-excess-errors \"\" }"}, {"sha": "e391b685fc2519cd6a8e77be04f05280d328e50e", "filename": "gcc/testsuite/gfortran.dg/do_4.f", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/030875c197e339542ddfcbad90cfc01263151bec/gcc%2Ftestsuite%2Fgfortran.dg%2Fdo_4.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/030875c197e339542ddfcbad90cfc01263151bec/gcc%2Ftestsuite%2Fgfortran.dg%2Fdo_4.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fdo_4.f?ref=030875c197e339542ddfcbad90cfc01263151bec", "patch": "@@ -4,6 +4,7 @@\n        if(i.eq.5)then\n           goto 10\n  10    endif           ! { dg-error \"is within another block\" }\n-       end\n-! { dg-excess-errors \"\" }\n+       end             ! { dg-error \"END DO statement expected\" }\n+                       ! { dg-warning \"Fortran 2018 deleted feature: DO termination statement which is not END DO or CONTINUE\" \"\" { target \"*-*-*\" } 6 }\n+! { dg-error \"Unexpected end of file\" \"\" { target \"*-*-*\" } 0 }\n "}, {"sha": "5cee77599f404bcf77e965d2848ead5d4cb63294", "filename": "gcc/testsuite/gfortran.dg/dollar_sym_1.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/030875c197e339542ddfcbad90cfc01263151bec/gcc%2Ftestsuite%2Fgfortran.dg%2Fdollar_sym_1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/030875c197e339542ddfcbad90cfc01263151bec/gcc%2Ftestsuite%2Fgfortran.dg%2Fdollar_sym_1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fdollar_sym_1.f90?ref=030875c197e339542ddfcbad90cfc01263151bec", "patch": "@@ -7,4 +7,4 @@\n       PARAMETER (PLT$B_OPC=0) !  Unreachable as the error above is now fatal\n       common /abc$def/ PLT$C_HOUSTPIX, PLT$C_COMMAND !  Unreachable as the error above is now fatal\n       end\n-! { dg-excess-errors \"compilation terminated\" }\n+! { dg-prune-output \"compilation terminated\" }"}, {"sha": "52ce041c09e175cb0b82c09e9333e14ee2464908", "filename": "gcc/testsuite/gfortran.dg/dollar_sym_3.f", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/030875c197e339542ddfcbad90cfc01263151bec/gcc%2Ftestsuite%2Fgfortran.dg%2Fdollar_sym_3.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/030875c197e339542ddfcbad90cfc01263151bec/gcc%2Ftestsuite%2Fgfortran.dg%2Fdollar_sym_3.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fdollar_sym_3.f?ref=030875c197e339542ddfcbad90cfc01263151bec", "patch": "@@ -8,4 +8,4 @@\n       COMMON RADE3155V62$JUTMU9L9E(3,3,3), LADE314JUTMP9         ! { dg-error \"Invalid character '\\\\$' at .1.. Use '-fdollar-ok' to allow it as an extension\" }\n      +LHEDDJNTMP9L(3,3,3)                                                       \n       end\n-! { dg-excess-errors \"compilation terminated\" }\n+! { dg-prune-output \"compilation terminated\" }"}, {"sha": "0b36aee2a2fad477a792aba8a9e1f0c2cc643265", "filename": "gcc/testsuite/gfortran.dg/fmt_tab_1.f90", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/030875c197e339542ddfcbad90cfc01263151bec/gcc%2Ftestsuite%2Fgfortran.dg%2Ffmt_tab_1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/030875c197e339542ddfcbad90cfc01263151bec/gcc%2Ftestsuite%2Fgfortran.dg%2Ffmt_tab_1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Ffmt_tab_1.f90?ref=030875c197e339542ddfcbad90cfc01263151bec", "patch": "@@ -6,7 +6,6 @@ program TestFormat\n         write (*, 10)\n         ! There is a tab character before 'bug!'.  This is accepted without\n         ! the -Wno-tabs option or a -std= option.\n- 10     format ('Hello ',\t'bug!') ! { dg-warning \"tab character in format\" }\n-\n+ 10     format ('Hello ',\t'bug!') ! { dg-warning \"tab character in format at \" }\n+                                        ! { dg-warning \"tab character at \" \"\" { target \"*-*-*\" } .-1 }\n       end\n-! { dg-excess-errors \"tab character in format\" }"}, {"sha": "3f2d6fcc26d04ac9b9f81a8afc9c7df68eba24f5", "filename": "gcc/testsuite/gfortran.dg/fmt_tab_2.f90", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/030875c197e339542ddfcbad90cfc01263151bec/gcc%2Ftestsuite%2Fgfortran.dg%2Ffmt_tab_2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/030875c197e339542ddfcbad90cfc01263151bec/gcc%2Ftestsuite%2Fgfortran.dg%2Ffmt_tab_2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Ffmt_tab_2.f90?ref=030875c197e339542ddfcbad90cfc01263151bec", "patch": "@@ -5,5 +5,4 @@\n       program TestFormat\n         write (*, 10)\n  10     format ('Hello ',\t'bug!') ! { dg-warning \"tab character in format\" }\n-      end\n-! { dg-excess-errors \"tab character in FORMAT\" }\n+      end                               ! { dg-warning \"tab character at \" \"\" { target \"*-*-*\" } .-1 }"}, {"sha": "e341c377d748b128fa981f8aa9d9eef1cbd52651", "filename": "gcc/testsuite/gfortran.dg/forall_16.f90", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/030875c197e339542ddfcbad90cfc01263151bec/gcc%2Ftestsuite%2Fgfortran.dg%2Fforall_16.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/030875c197e339542ddfcbad90cfc01263151bec/gcc%2Ftestsuite%2Fgfortran.dg%2Fforall_16.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fforall_16.f90?ref=030875c197e339542ddfcbad90cfc01263151bec", "patch": "@@ -4,6 +4,4 @@\n   implicit none\n   integer i,dest(10)\n   forall (i=2:ix)  dest(i)=i ! { dg-error \"has no IMPLICIT type\" }\n-end\n-\n-! { dg-excess-errors \"Can't convert UNKNOWN to INTEGER\" }\n+end                          ! { dg-error \"Cannot convert UNKNOWN to INTEGER\" \"\" { target \"*-*-*\" } .-1 }"}, {"sha": "0c12e26fbd5093b033a481b382e5d7332243c5a7", "filename": "gcc/testsuite/gfortran.dg/g77/970125-0.f", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/030875c197e339542ddfcbad90cfc01263151bec/gcc%2Ftestsuite%2Fgfortran.dg%2Fg77%2F970125-0.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/030875c197e339542ddfcbad90cfc01263151bec/gcc%2Ftestsuite%2Fgfortran.dg%2Fg77%2F970125-0.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fg77%2F970125-0.f?ref=030875c197e339542ddfcbad90cfc01263151bec", "patch": "@@ -1,7 +1,6 @@\n c { dg-do compile }\n c\n-c Following line added on transfer to gfortran testsuite\n-c { dg-excess-errors \"\" }\n+c { dg-additional-options \"-w\" }\n c\n C JCB comments:\n C g77 doesn't accept the added line \"integer(kind=7) ...\" --\n@@ -35,10 +34,10 @@\n         print *, max4\n         print *, i4, %loc(i4)\n         print *, i8, %loc(i8)\n-        call foo(i4, %loc(i4), i8, %loc(i8))\n+        call foo(i4, %loc(i4), i8, %loc(i8))  ! { dg-error \"Type mismatch in argument 'i8a' at .1.; passed INTEGER.8. to INTEGER.4.\" }\n         end\n         subroutine foo(i4, i4a, i8, i8a)\n-        integer(kind=7) i4a, i8a\n+        integer(kind=7) i4a, i8a  ! { dg-error \"Kind 7 not supported for type INTEGER\" }\n         integer(kind=8) i8\n         print *, i4, i4a\n         print *, i8, i8a"}, {"sha": "96f10b594cf960bae45affb4b4705732924c8e56", "filename": "gcc/testsuite/gfortran.dg/gomp/unexpected-end.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/030875c197e339542ddfcbad90cfc01263151bec/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Funexpected-end.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/030875c197e339542ddfcbad90cfc01263151bec/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Funexpected-end.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Funexpected-end.f90?ref=030875c197e339542ddfcbad90cfc01263151bec", "patch": "@@ -120,4 +120,4 @@\n \n end  ! { dg-error \"Unexpected END statement\" }\n \n-! { dg-excess-errors \"Unexpected end of file\" }\n+! { dg-error \"Unexpected end of file\" \"\" { target \"*-*-*\" } 0 }"}, {"sha": "66847511a75eb6dfb70886c7eaca10486ecfba22", "filename": "gcc/testsuite/gfortran.dg/interface_operator_1.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/030875c197e339542ddfcbad90cfc01263151bec/gcc%2Ftestsuite%2Fgfortran.dg%2Finterface_operator_1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/030875c197e339542ddfcbad90cfc01263151bec/gcc%2Ftestsuite%2Fgfortran.dg%2Finterface_operator_1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Finterface_operator_1.f90?ref=030875c197e339542ddfcbad90cfc01263151bec", "patch": "@@ -7,4 +7,4 @@ program p\n    interface operator ( .gt. )\n    end interface operator        ! { dg-error \"END INTERFACE OPERATOR\" }\n end program p                    ! { dg-error \"END INTERFACE\" }\n-! { dg-excess-errors \"Unexpected end of file\" }\n+! { dg-error \"Unexpected end of file\" \"\" { target \"*-*-*\" } 0 }"}, {"sha": "11b9ff55736de4d547fb05b9970162137e16ccbe", "filename": "gcc/testsuite/gfortran.dg/interface_operator_2.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/030875c197e339542ddfcbad90cfc01263151bec/gcc%2Ftestsuite%2Fgfortran.dg%2Finterface_operator_2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/030875c197e339542ddfcbad90cfc01263151bec/gcc%2Ftestsuite%2Fgfortran.dg%2Finterface_operator_2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Finterface_operator_2.f90?ref=030875c197e339542ddfcbad90cfc01263151bec", "patch": "@@ -7,4 +7,4 @@ program p\n    interface operator ( .gt. )\n    end interface operator (.lt.) ! { dg-error \"END INTERFACE OPERATOR\" }\n end program p                    ! { dg-error \"END INTERFACE\" }\n-! { dg-excess-errors \"Unexpected end of file\" }\n+! { dg-error \"Unexpected end of file\" \"\" { target \"*-*-*\" } 0 }"}, {"sha": "80040408927b18a2f20b864843f86bd6621a3525", "filename": "gcc/testsuite/gfortran.dg/line_length_4.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/030875c197e339542ddfcbad90cfc01263151bec/gcc%2Ftestsuite%2Fgfortran.dg%2Fline_length_4.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/030875c197e339542ddfcbad90cfc01263151bec/gcc%2Ftestsuite%2Fgfortran.dg%2Fline_length_4.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fline_length_4.f90?ref=030875c197e339542ddfcbad90cfc01263151bec", "patch": "@@ -16,4 +16,4 @@ subroutine foo(a,n,s)\n    end subroutine foo\n   end\n ! { dg-error \"Line truncated\" \" \" { target *-*-* } 8 }\n-! { dg-excess-errors \"some warnings being treated as errors\" }\n+! { dg-prune-output \"some warnings being treated as errors\" }"}, {"sha": "81832451ea24aafca35ca16877c03d2566b8b89a", "filename": "gcc/testsuite/gfortran.dg/line_length_5.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/030875c197e339542ddfcbad90cfc01263151bec/gcc%2Ftestsuite%2Fgfortran.dg%2Fline_length_5.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/030875c197e339542ddfcbad90cfc01263151bec/gcc%2Ftestsuite%2Fgfortran.dg%2Fline_length_5.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fline_length_5.f90?ref=030875c197e339542ddfcbad90cfc01263151bec", "patch": "@@ -4,4 +4,4 @@\n end \n ! { dg-error \"Line truncated\" \" \" { target *-*-* } 3 }\n ! { dg-error \"Unterminated character constant\" \" \" { target *-*-* } 3 }\n-! { dg-excess-errors \"some warnings being treated as errors\" }\n+! { dg-prune-output \"some warnings being treated as errors\" }"}, {"sha": "8cdb02099814617cf39d344630a1a2870a4684d5", "filename": "gcc/testsuite/gfortran.dg/line_length_6.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/030875c197e339542ddfcbad90cfc01263151bec/gcc%2Ftestsuite%2Fgfortran.dg%2Fline_length_6.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/030875c197e339542ddfcbad90cfc01263151bec/gcc%2Ftestsuite%2Fgfortran.dg%2Fline_length_6.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fline_length_6.f90?ref=030875c197e339542ddfcbad90cfc01263151bec", "patch": "@@ -5,4 +5,4 @@\n !\n       print *, 1                                                                                                                                          + 2 ! { dg-error \"Line truncated at .1.\" }\n       end\n-! { dg-excess-errors \"some warnings being treated as errors\" }\n+! { dg-prune-output \"some warnings being treated as errors\" }"}, {"sha": "afd6cc2df46e50e158eb9b64690766e6511efe40", "filename": "gcc/testsuite/gfortran.dg/line_length_8.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/030875c197e339542ddfcbad90cfc01263151bec/gcc%2Ftestsuite%2Fgfortran.dg%2Fline_length_8.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/030875c197e339542ddfcbad90cfc01263151bec/gcc%2Ftestsuite%2Fgfortran.dg%2Fline_length_8.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fline_length_8.f90?ref=030875c197e339542ddfcbad90cfc01263151bec", "patch": "@@ -6,4 +6,4 @@\n !\n       print *, 1                                                                                                                                          + 2 ! { dg-error \"Line truncated at .1.\" }\n       end\n-! { dg-excess-errors \"some warnings being treated as errors\" }\n+! { dg-prune-output \"some warnings being treated as errors\" }"}, {"sha": "6c156afc1449927f4ff6dbd46f866635b34b9a0d", "filename": "gcc/testsuite/gfortran.dg/line_length_9.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/030875c197e339542ddfcbad90cfc01263151bec/gcc%2Ftestsuite%2Fgfortran.dg%2Fline_length_9.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/030875c197e339542ddfcbad90cfc01263151bec/gcc%2Ftestsuite%2Fgfortran.dg%2Fline_length_9.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fline_length_9.f90?ref=030875c197e339542ddfcbad90cfc01263151bec", "patch": "@@ -6,4 +6,4 @@\n !\n       print *, 1                                                                                                                                          + 2 ! { dg-error \"Line truncated at .1.\" }\n       end\n-! { dg-excess-errors \"some warnings being treated as errors\" }\n+! { dg-prune-output \"some warnings being treated as errors\" }"}, {"sha": "c49652993d736b43c53ba1d6ae17d492377afda0", "filename": "gcc/testsuite/gfortran.dg/pr65045.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/030875c197e339542ddfcbad90cfc01263151bec/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr65045.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/030875c197e339542ddfcbad90cfc01263151bec/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr65045.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr65045.f90?ref=030875c197e339542ddfcbad90cfc01263151bec", "patch": "@@ -12,4 +12,4 @@\n end block i      ! { dg-error \"Expecting END PROGRAM statement\" }\n print*,i         ! { dg-error \"not appropriate for an expression\" }\n end\n-! { dg-excess-errors \"Unexpected end of file\" }\n+! { dg-error \"Unexpected end of file\" \"\" { target \"*-*-*\" } 0 }"}, {"sha": "291d906cb4519872ccc15ecad50cc9f6315ee1d7", "filename": "gcc/testsuite/gfortran.dg/pr69497.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/030875c197e339542ddfcbad90cfc01263151bec/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr69497.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/030875c197e339542ddfcbad90cfc01263151bec/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr69497.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr69497.f90?ref=030875c197e339542ddfcbad90cfc01263151bec", "patch": "@@ -5,4 +5,4 @@ program p\n    do\n    end block ! { dg-error \"Expecting END DO statement\" }\n end ! { dg-error \"END DO statement expected\" }\n-! { dg-excess-errors \"Unexpected end of file\" }\n+! { dg-error \"Unexpected end of file\" \"\" { target \"*-*-*\" } 0 }"}, {"sha": "bb626006fe93c1a6c3e17429f61f4336aff8ed6f", "filename": "gcc/testsuite/gfortran.dg/submodule_21.f08", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/030875c197e339542ddfcbad90cfc01263151bec/gcc%2Ftestsuite%2Fgfortran.dg%2Fsubmodule_21.f08", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/030875c197e339542ddfcbad90cfc01263151bec/gcc%2Ftestsuite%2Fgfortran.dg%2Fsubmodule_21.f08", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fsubmodule_21.f08?ref=030875c197e339542ddfcbad90cfc01263151bec", "patch": "@@ -16,4 +16,5 @@ PROGRAM MyProg\n   USE MainModule\n   WRITE(*,*) a\n END PROGRAM MyProg\n-! { dg-excess-errors \"does not contain a MODULE PROCEDURE\" }\n+! { dg-error \"does not contain a MODULE PROCEDURE\" \"\" { target \"*-*-*\" } 0 }\n+! { dg-prune-output \"compilation terminated\" }"}, {"sha": "719b03f2586a1727443be7a3872a3946b15866a0", "filename": "gcc/testsuite/gfortran.dg/tab_continuation.f", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/030875c197e339542ddfcbad90cfc01263151bec/gcc%2Ftestsuite%2Fgfortran.dg%2Ftab_continuation.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/030875c197e339542ddfcbad90cfc01263151bec/gcc%2Ftestsuite%2Fgfortran.dg%2Ftab_continuation.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Ftab_continuation.f?ref=030875c197e339542ddfcbad90cfc01263151bec", "patch": "@@ -17,4 +17,4 @@\n ! { dg-error \"Nonconforming tab character in column 1 of line 13\" \"Nonconforming tab\" { target *-*-* } 0 }\n ! { dg-error \"Nonconforming tab character in column 1 of line 14\" \"Nonconforming tab\" { target *-*-* } 0 }\n ! { dg-error \"Nonconforming tab character in column 1 of line 15\" \"Nonconforming tab\" { target *-*-* } 0 }\n-! { dg-excess-errors \"some warnings being treated as errors\" }\n+! { dg-prune-output \"some warnings being treated as errors\" }"}, {"sha": "14f01effd0ee13d52c94fdec7560e0e0af6a707b", "filename": "gcc/testsuite/gfortran.dg/typebound_proc_2.f90", "status": "modified", "additions": 8, "deletions": 9, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/030875c197e339542ddfcbad90cfc01263151bec/gcc%2Ftestsuite%2Fgfortran.dg%2Ftypebound_proc_2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/030875c197e339542ddfcbad90cfc01263151bec/gcc%2Ftestsuite%2Fgfortran.dg%2Ftypebound_proc_2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Ftypebound_proc_2.f90?ref=030875c197e339542ddfcbad90cfc01263151bec", "patch": "@@ -9,24 +9,23 @@ MODULE testmod\n \n   TYPE t\n     INTEGER :: x\n-  CONTAINS ! { dg-error \"Fortran 2003\" }\n-    PROCEDURE proc1 ! { dg-error \"Fortran 2003\" }\n-    PROCEDURE :: proc2 => p2 ! { dg-error \"Fortran 2003\" }\n-  END TYPE t\n+  CONTAINS ! { dg-error \"Fortran 2003: CONTAINS block in derived type definition\" }\n+    PROCEDURE proc1 ! { dg-error \"Fortran 2003: PROCEDURE statement\" }\n+    PROCEDURE :: proc2 => p2 ! { dg-error \"Fortran 2003: PROCEDURE statement\" }\n+  END TYPE t                 ! { dg-error \"Fortran 2008: Derived type definition at .1. with empty CONTAINS section\" }\n \n CONTAINS\n   \n-  SUBROUTINE proc1 (me)\n+  SUBROUTINE proc1 (me) ! { dg-error \"no IMPLICIT type\" }\n     IMPLICIT NONE\n-    TYPE(t1) :: me\n+    TYPE(t1) :: me     ! { dg-error \"being used before it is defined\" }\n   END SUBROUTINE proc1\n \n-  REAL FUNCTION proc2 (me, x)\n+  REAL FUNCTION proc2 (me, x) ! { dg-error \"no IMPLICIT type\" }\n     IMPLICIT NONE\n-    TYPE(t1) :: me\n+    TYPE(t1) :: me     ! { dg-error \"being used before it is defined\" }\n     REAL :: x\n     proc2 = x / 2\n   END FUNCTION proc2\n \n END MODULE testmod\n-! { dg-excess-errors \"no IMPLICIT type\" }"}, {"sha": "1f9d38d794f95cf6dd44180b4a5a2a5b9e9d677b", "filename": "gcc/testsuite/gfortran.dg/warnings_are_errors_1.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/030875c197e339542ddfcbad90cfc01263151bec/gcc%2Ftestsuite%2Fgfortran.dg%2Fwarnings_are_errors_1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/030875c197e339542ddfcbad90cfc01263151bec/gcc%2Ftestsuite%2Fgfortran.dg%2Fwarnings_are_errors_1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fwarnings_are_errors_1.f90?ref=030875c197e339542ddfcbad90cfc01263151bec", "patch": "@@ -22,4 +22,4 @@ end function char_\n \n        end\n ! { dg-final { output-exists-not } }\n-! { dg-excess-errors \"warnings being treated as errors\" }\n+! { dg-prune-output \"warnings being treated as errors\" }"}]}