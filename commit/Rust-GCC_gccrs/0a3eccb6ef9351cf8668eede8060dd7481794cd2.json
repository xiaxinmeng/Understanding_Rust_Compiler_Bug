{"sha": "0a3eccb6ef9351cf8668eede8060dd7481794cd2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGEzZWNjYjZlZjkzNTFjZjg2NjhlZWRlODA2MGRkNzQ4MTc5NGNkMg==", "commit": {"author": {"name": "Tamar Christina", "email": "tamar.christina@arm.com", "date": "2021-02-01T13:50:43Z"}, "committer": {"name": "Tamar Christina", "email": "tamar.christina@arm.com", "date": "2021-02-01T13:50:43Z"}, "message": "AArch64: Change canonization of smlal and smlsl in order to be able to optimize the vec_dup\n\ng:87301e3956d44ad45e384a8eb16c79029d20213a and\ng:ee4c4fe289e768d3c6b6651c8bfa3fdf458934f4 changed the intrinsics to be\nproper RTL but accidentally ended up creating a regression because of the\nordering in the RTL pattern.\n\nThe existing RTL that combine should try to match to remove the vec_dup is\naarch64_vec_<su>mlal_lane<Qlane> and aarch64_vec_<su>mult_lane<Qlane> which\nexpects the select register to be the second operand of mult.\n\nThe pattern introduced has it as the first operand so combine was unable to\nremove the vec_dup.  This flips the order such that the patterns optimize\ncorrectly.\n\ngcc/ChangeLog:\n\n\t* config/aarch64/aarch64-simd.md (aarch64_<su>mlal_n<mode>,\n\taarch64_<su>mlsl<mode>, aarch64_<su>mlsl_n<mode>): Flip mult operands.\n\ngcc/testsuite/ChangeLog:\n\n\t* gcc.target/aarch64/advsimd-intrinsics/smlal-smlsl-mull-optimized.c: New test.", "tree": {"sha": "3097d45da393854ac6d9d5f4eb7cfe7d67d8c7c6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3097d45da393854ac6d9d5f4eb7cfe7d67d8c7c6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0a3eccb6ef9351cf8668eede8060dd7481794cd2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0a3eccb6ef9351cf8668eede8060dd7481794cd2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0a3eccb6ef9351cf8668eede8060dd7481794cd2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0a3eccb6ef9351cf8668eede8060dd7481794cd2/comments", "author": {"login": "TamarChristinaArm", "id": 48126768, "node_id": "MDQ6VXNlcjQ4MTI2NzY4", "avatar_url": "https://avatars.githubusercontent.com/u/48126768?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TamarChristinaArm", "html_url": "https://github.com/TamarChristinaArm", "followers_url": "https://api.github.com/users/TamarChristinaArm/followers", "following_url": "https://api.github.com/users/TamarChristinaArm/following{/other_user}", "gists_url": "https://api.github.com/users/TamarChristinaArm/gists{/gist_id}", "starred_url": "https://api.github.com/users/TamarChristinaArm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TamarChristinaArm/subscriptions", "organizations_url": "https://api.github.com/users/TamarChristinaArm/orgs", "repos_url": "https://api.github.com/users/TamarChristinaArm/repos", "events_url": "https://api.github.com/users/TamarChristinaArm/events{/privacy}", "received_events_url": "https://api.github.com/users/TamarChristinaArm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "TamarChristinaArm", "id": 48126768, "node_id": "MDQ6VXNlcjQ4MTI2NzY4", "avatar_url": "https://avatars.githubusercontent.com/u/48126768?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TamarChristinaArm", "html_url": "https://github.com/TamarChristinaArm", "followers_url": "https://api.github.com/users/TamarChristinaArm/followers", "following_url": "https://api.github.com/users/TamarChristinaArm/following{/other_user}", "gists_url": "https://api.github.com/users/TamarChristinaArm/gists{/gist_id}", "starred_url": "https://api.github.com/users/TamarChristinaArm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TamarChristinaArm/subscriptions", "organizations_url": "https://api.github.com/users/TamarChristinaArm/orgs", "repos_url": "https://api.github.com/users/TamarChristinaArm/repos", "events_url": "https://api.github.com/users/TamarChristinaArm/events{/privacy}", "received_events_url": "https://api.github.com/users/TamarChristinaArm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1b303ef6cc8a5913345cbcd91abf13075ab2aec9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1b303ef6cc8a5913345cbcd91abf13075ab2aec9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1b303ef6cc8a5913345cbcd91abf13075ab2aec9"}], "stats": {"total": 63, "additions": 54, "deletions": 9}, "files": [{"sha": "d1858663a4e78c0861d902b37e93c0b00d75e661", "filename": "gcc/config/aarch64/aarch64-simd.md", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0a3eccb6ef9351cf8668eede8060dd7481794cd2/gcc%2Fconfig%2Faarch64%2Faarch64-simd.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0a3eccb6ef9351cf8668eede8060dd7481794cd2/gcc%2Fconfig%2Faarch64%2Faarch64-simd.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64-simd.md?ref=0a3eccb6ef9351cf8668eede8060dd7481794cd2", "patch": "@@ -1950,10 +1950,10 @@\n         (plus:<VWIDE>\n           (mult:<VWIDE>\n             (ANY_EXTEND:<VWIDE>\n-              (vec_duplicate:VD_HSI\n-\t              (match_operand:<VEL> 3 \"register_operand\" \"<h_con>\")))\n+              (match_operand:VD_HSI 2 \"register_operand\" \"w\"))\n             (ANY_EXTEND:<VWIDE>\n-              (match_operand:VD_HSI 2 \"register_operand\" \"w\")))\n+              (vec_duplicate:VD_HSI\n+\t              (match_operand:<VEL> 3 \"register_operand\" \"<h_con>\"))))\n           (match_operand:<VWIDE> 1 \"register_operand\" \"0\")))]\n   \"TARGET_SIMD\"\n   \"<su>mlal\\t%0.<Vwtype>, %2.<Vtype>, %3.<Vetype>[0]\"\n@@ -1980,10 +1980,10 @@\n           (match_operand:<VWIDE> 1 \"register_operand\" \"0\")\n           (mult:<VWIDE>\n             (ANY_EXTEND:<VWIDE>\n-              (vec_duplicate:VD_HSI\n-\t              (match_operand:<VEL> 3 \"register_operand\" \"<h_con>\")))\n+              (match_operand:VD_HSI 2 \"register_operand\" \"w\"))\n             (ANY_EXTEND:<VWIDE>\n-              (match_operand:VD_HSI 2 \"register_operand\" \"w\")))))]\n+              (vec_duplicate:VD_HSI\n+\t              (match_operand:<VEL> 3 \"register_operand\" \"<h_con>\"))))))]\n   \"TARGET_SIMD\"\n   \"<su>mlsl\\t%0.<Vwtype>, %2.<Vtype>, %3.<Vetype>[0]\"\n   [(set_attr \"type\" \"neon_mla_<Vetype>_long\")]\n@@ -2078,10 +2078,10 @@\n   [(set (match_operand:<VWIDE> 0 \"register_operand\" \"=w\")\n         (mult:<VWIDE>\n           (ANY_EXTEND:<VWIDE>\n-            (vec_duplicate:<VCOND>\n-\t      (match_operand:<VEL> 2 \"register_operand\" \"<h_con>\")))\n+            (match_operand:VD_HSI 1 \"register_operand\" \"w\"))\n           (ANY_EXTEND:<VWIDE>\n-            (match_operand:VD_HSI 1 \"register_operand\" \"w\"))))]\n+            (vec_duplicate:<VCOND>\n+\t      (match_operand:<VEL> 2 \"register_operand\" \"<h_con>\")))))]\n   \"TARGET_SIMD\"\n   \"<su>mull\\t%0.<Vwtype>, %1.<Vtype>, %2.<Vetype>[0]\"\n   [(set_attr \"type\" \"neon_mul_<Vetype>_scalar_long\")]"}, {"sha": "1e963e5002e666e32e12b2eef965b206c7344015", "filename": "gcc/testsuite/gcc.target/aarch64/advsimd-intrinsics/smlal-smlsl-mull-optimized.c", "status": "added", "additions": 45, "deletions": 0, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0a3eccb6ef9351cf8668eede8060dd7481794cd2/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fsmlal-smlsl-mull-optimized.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0a3eccb6ef9351cf8668eede8060dd7481794cd2/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fsmlal-smlsl-mull-optimized.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fsmlal-smlsl-mull-optimized.c?ref=0a3eccb6ef9351cf8668eede8060dd7481794cd2", "patch": "@@ -0,0 +1,45 @@\n+/* { dg-do compile { target aarch64-*-* } } */\n+\n+#include <arm_neon.h>\n+\n+/*\n+**add:\n+**     smlal   v0.4s, v1.4h, v2.h[3]\n+**     ret\n+*/\n+\n+int32x4_t add(int32x4_t acc, int16x4_t b, int16x4_t c) {\n+    return vmlal_n_s16(acc, b, c[3]);\n+}\n+\n+/*\n+**sub:\n+**     smlsl   v0.4s, v1.4h, v2.h[3]\n+**     ret\n+*/\n+\n+int32x4_t sub(int32x4_t acc, int16x4_t b, int16x4_t c) {\n+    return vmlsl_n_s16(acc, b, c[3]);\n+}\n+\n+/*\n+**smull:\n+**     smull   v0.4s, v1.4h, v2.h[3]\n+**     ret\n+*/\n+\n+int32x4_t smull(int16x4_t b, int16x4_t c) {\n+    return vmull_n_s16(b, c[3]);\n+}\n+\n+/*\n+**umull:\n+**     umull   v0.4s, v1.4h, v2.h[3]\n+**     ret\n+*/\n+\n+uint32x4_t umull(uint16x4_t b, uint16x4_t c) {\n+    return vmull_n_u16(b, c[3]);\n+}\n+\n+/* { dg-final { check-function-bodies \"**\" \"\" \"-DCHECK_ASM\" {-O[^0]} } } */"}]}