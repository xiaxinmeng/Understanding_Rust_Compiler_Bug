{"sha": "07733aa11e136aa6e1fa24e12e662489a9225bf2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDc3MzNhYTExZTEzNmFhNmUxZmEyNGUxMmU2NjI0ODlhOTIyNWJmMg==", "commit": {"author": {"name": "Ed Schonberg", "email": "schonberg@adacore.com", "date": "2018-01-11T08:52:51Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2018-01-11T08:52:51Z"}, "message": "[Ada] Warning on use of predefined operations on an actual fixed-point type\n\nThe compiler warns when a generic actual is a fixed-point type, because\narithmetic operations in the instance will use the predefined operations on\nit, even if the type has user-defined primitive operations (unless formsl\nsurprograms for these operations appear in the generic). This patch refines\nthis warning to exclude the case where the formsal type is private, because\nin this case there can be no suspicious arithmetic operastions in the generic\nunit.\n\n2018-01-11  Ed Schonberg  <schonberg@adacore.com>\n\ngcc/ada/\n\n\t* sem_ch12.adb (Check_Fixed_Point_Type): Do not apply check if the\n\tformsl type corresponding to the actual fixed point type is private,\n\tbecause in this case there can be no suspicious arithmetic operations\n\tin the generic unless they reference a formal subprogram.  Clarify\n\twarning.\n\ngcc/testsuite/\n\n\t* gnat.dg/fixedpnt2.adb, gnat.dg/fixedpnt2.ads: New testcase.\n\nFrom-SVN: r256504", "tree": {"sha": "bef2bd4163e1a57b20b9fa51114a96eb89d0ac2a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bef2bd4163e1a57b20b9fa51114a96eb89d0ac2a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/07733aa11e136aa6e1fa24e12e662489a9225bf2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/07733aa11e136aa6e1fa24e12e662489a9225bf2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/07733aa11e136aa6e1fa24e12e662489a9225bf2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/07733aa11e136aa6e1fa24e12e662489a9225bf2/comments", "author": {"login": "Edschonberg", "id": 6352375, "node_id": "MDQ6VXNlcjYzNTIzNzU=", "avatar_url": "https://avatars.githubusercontent.com/u/6352375?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Edschonberg", "html_url": "https://github.com/Edschonberg", "followers_url": "https://api.github.com/users/Edschonberg/followers", "following_url": "https://api.github.com/users/Edschonberg/following{/other_user}", "gists_url": "https://api.github.com/users/Edschonberg/gists{/gist_id}", "starred_url": "https://api.github.com/users/Edschonberg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Edschonberg/subscriptions", "organizations_url": "https://api.github.com/users/Edschonberg/orgs", "repos_url": "https://api.github.com/users/Edschonberg/repos", "events_url": "https://api.github.com/users/Edschonberg/events{/privacy}", "received_events_url": "https://api.github.com/users/Edschonberg/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "78cac7386e2dc48ec5adb4ff0c9a94eed958c9fc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/78cac7386e2dc48ec5adb4ff0c9a94eed958c9fc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/78cac7386e2dc48ec5adb4ff0c9a94eed958c9fc"}], "stats": {"total": 74, "additions": 72, "deletions": 2}, "files": [{"sha": "ec9eeaa1ad629dae50e59dc9b9010a12b8480fdc", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07733aa11e136aa6e1fa24e12e662489a9225bf2/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07733aa11e136aa6e1fa24e12e662489a9225bf2/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=07733aa11e136aa6e1fa24e12e662489a9225bf2", "patch": "@@ -1,3 +1,11 @@\n+2018-01-11  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_ch12.adb (Check_Fixed_Point_Type): Do not apply check if the\n+\tformsl type corresponding to the actual fixed point type is private,\n+\tbecause in this case there can be no suspicious arithmetic operations\n+\tin the generic unless they reference a formal subprogram.  Clarify\n+\twarning.\n+\n 2018-01-11  Javier Miranda  <miranda@adacore.com>\n \n \t* exp_util.adb (Remove_Side_Effects): No action done for functions"}, {"sha": "b2f4db10260b6f4a8e4cb634916761f73939f646", "filename": "gcc/ada/sem_ch12.adb", "status": "modified", "additions": 12, "deletions": 2, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07733aa11e136aa6e1fa24e12e662489a9225bf2/gcc%2Fada%2Fsem_ch12.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07733aa11e136aa6e1fa24e12e662489a9225bf2/gcc%2Fada%2Fsem_ch12.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch12.adb?ref=07733aa11e136aa6e1fa24e12e662489a9225bf2", "patch": "@@ -1279,7 +1279,8 @@ package body Sem_Ch12 is\n                if No (Formal) then\n                   Error_Msg_Sloc := Sloc (Node (Elem));\n                   Error_Msg_NE\n-                    (\"?instance does not use primitive operation&#\",\n+                    (\"?instance uses predefined operation, \"\n+                      & \"not primitive operation&#\",\n                       Actual, Node (Elem));\n                end if;\n             end if;\n@@ -1717,7 +1718,16 @@ package body Sem_Ch12 is\n                           (Formal, Match, Analyzed_Formal, Assoc_List),\n                         Assoc_List);\n \n-                     if Is_Fixed_Point_Type (Entity (Match)) then\n+                     --  Warn when an actual is a fixed-point with user-\n+                     --  defined promitives. The warning is superfluous\n+                     --  if the fornal is private, because there can be\n+                     --  no arithmetic operations in the generic so there\n+                     --  no danger of confusion.\n+\n+                     if Is_Fixed_Point_Type (Entity (Match))\n+                       and then not Is_Private_Type\n+                         (Defining_Identifier (Analyzed_Formal))\n+                     then\n                         Check_Fixed_Point_Actual (Match);\n                      end if;\n "}, {"sha": "66e77cc4e2b899bb294726694d408a54160272b1", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07733aa11e136aa6e1fa24e12e662489a9225bf2/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07733aa11e136aa6e1fa24e12e662489a9225bf2/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=07733aa11e136aa6e1fa24e12e662489a9225bf2", "patch": "@@ -1,3 +1,7 @@\n+2018-01-11  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* gnat.dg/fixedpnt2.adb, gnat.dg/fixedpnt2.ads: New testcase.\n+\n 2018-01-11  Justin Squirek  <squirek@adacore.com>\n \n \t* gnat.dg/loopvar.adb: New testcase."}, {"sha": "5ce88002ce689b6b3f878e6330e3cf115a00addc", "filename": "gcc/testsuite/gnat.dg/fixedpnt2.adb", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07733aa11e136aa6e1fa24e12e662489a9225bf2/gcc%2Ftestsuite%2Fgnat.dg%2Ffixedpnt2.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07733aa11e136aa6e1fa24e12e662489a9225bf2/gcc%2Ftestsuite%2Fgnat.dg%2Ffixedpnt2.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Ffixedpnt2.adb?ref=07733aa11e136aa6e1fa24e12e662489a9225bf2", "patch": "@@ -0,0 +1,25 @@\n+--  { dg-do compile }\n+\n+with Ada.Unchecked_Conversion;\n+\n+package body Fixedpnt2 is\n+\n+   function To_Integer_64 is\n+      new Ada.Unchecked_Conversion (Source => My_Type,\n+                                    Target => T_Integer_64);\n+\n+   function To_T is\n+      new Ada.Unchecked_Conversion (Source => T_Integer_64,\n+                                    Target => My_Type);\n+\n+   function \"*\" (Left  : in T_Integer_32;\n+                 Right : in My_Type)\n+      return My_Type is\n+         (To_T (S => T_Integer_64 (Left) * To_Integer_64 (S => Right)));\n+\n+   function \"*\" (Left  : in My_Type;\n+                 Right : in T_Integer_32)\n+      return My_Type is\n+         (To_T (S => To_Integer_64 (S => Left) * T_Integer_64 (Right)));\n+\n+end Fixedpnt2;"}, {"sha": "c412a6fcfbd251b71bd19398f7e49268e279009a", "filename": "gcc/testsuite/gnat.dg/fixedpnt2.ads", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07733aa11e136aa6e1fa24e12e662489a9225bf2/gcc%2Ftestsuite%2Fgnat.dg%2Ffixedpnt2.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07733aa11e136aa6e1fa24e12e662489a9225bf2/gcc%2Ftestsuite%2Fgnat.dg%2Ffixedpnt2.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Ffixedpnt2.ads?ref=07733aa11e136aa6e1fa24e12e662489a9225bf2", "patch": "@@ -0,0 +1,23 @@\n+package Fixedpnt2 is\n+\n+   type T_Integer_32 is range -2 ** 31 .. 2 ** 31 - 1\n+      with Size => 32;\n+\n+   type T_Integer_64 is range -2 ** 63 .. 2 ** 63 - 1\n+      with Size => 64;\n+\n+   C_Unit  : constant := 0.001; -- One millisecond.\n+   C_First : constant := (-2 ** 63) * C_Unit;\n+   C_Last  : constant := (2 ** 63 - 1) * C_Unit;\n+\n+   type My_Type is\n+      delta C_Unit range C_First .. C_Last\n+      with Size  => 64,\n+           Small => C_Unit;\n+\n+   function \"*\" (Left : in T_Integer_32; Right : in My_Type)\n+     return My_Type;\n+   function \"*\" (Left : in My_Type;      Right : in T_Integer_32)\n+     return My_Type;\n+\n+end Fixedpnt2;"}]}