{"sha": "7166d53559b1d2fc49d7f55166364b3ca345a00a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzE2NmQ1MzU1OWIxZDJmYzQ5ZDdmNTUxNjYzNjRiM2NhMzQ1YTAwYQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2015-05-12T15:13:06Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2015-05-12T15:13:06Z"}, "message": "[multiple changes]\n\n2015-05-12  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_ch5.adb (Analyze_Iterator_Specifications): Additional\n\tlegality checks for array and container iterators:\n\ta) The domain of iteration cannot be a component that depends\n\ton discriminants of a mutable object. The check was recently\n\tadded for element iterators.\n\tb) The cursor type cannot be a limited type at the point of the\n\titeration, because the cursor will be assigned to in the body\n\tof the loop.\n\n2015-05-12  Robert Dewar  <dewar@adacore.com>\n\n\t* freeze.adb (Freeze_Record_Type): Make sure that if we have\n\taspect Iterator_Element, then we have either Constant_Indexing\n\tor Variable_Indexing.\n\nFrom-SVN: r223077", "tree": {"sha": "39882498817ea47051972a2f82d38d47671bef91", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/39882498817ea47051972a2f82d38d47671bef91"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7166d53559b1d2fc49d7f55166364b3ca345a00a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7166d53559b1d2fc49d7f55166364b3ca345a00a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7166d53559b1d2fc49d7f55166364b3ca345a00a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7166d53559b1d2fc49d7f55166364b3ca345a00a/comments", "author": null, "committer": null, "parents": [{"sha": "4b17187f237160e6b3d536f7843d4f3a7d258a23", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4b17187f237160e6b3d536f7843d4f3a7d258a23", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4b17187f237160e6b3d536f7843d4f3a7d258a23"}], "stats": {"total": 71, "additions": 70, "deletions": 1}, "files": [{"sha": "045992b669689400281d701f20d1569bcaf8d856", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7166d53559b1d2fc49d7f55166364b3ca345a00a/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7166d53559b1d2fc49d7f55166364b3ca345a00a/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=7166d53559b1d2fc49d7f55166364b3ca345a00a", "patch": "@@ -1,3 +1,20 @@\n+2015-05-12  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_ch5.adb (Analyze_Iterator_Specifications): Additional\n+\tlegality checks for array and container iterators:\n+\ta) The domain of iteration cannot be a component that depends\n+\ton discriminants of a mutable object. The check was recently\n+\tadded for element iterators.\n+\tb) The cursor type cannot be a limited type at the point of the\n+\titeration, because the cursor will be assigned to in the body\n+\tof the loop.\n+\n+2015-05-12  Robert Dewar  <dewar@adacore.com>\n+\n+\t* freeze.adb (Freeze_Record_Type): Make sure that if we have\n+\taspect Iterator_Element, then we have either Constant_Indexing\n+\tor Variable_Indexing.\n+\n 2015-05-12  Ed Schonberg  <schonberg@adacore.com>\n \n \t* a-coormu.ads, a-coormu.adb: Add Indexing aspect, Reference_Type,"}, {"sha": "2377c39c3d275aac6cf4c871681f3dbcc0339480", "filename": "gcc/ada/freeze.adb", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7166d53559b1d2fc49d7f55166364b3ca345a00a/gcc%2Fada%2Ffreeze.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7166d53559b1d2fc49d7f55166364b3ca345a00a/gcc%2Fada%2Ffreeze.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffreeze.adb?ref=7166d53559b1d2fc49d7f55166364b3ca345a00a", "patch": "@@ -4288,6 +4288,22 @@ package body Freeze is\n             end if;\n          end if;\n \n+         --  Make sure that if we have aspect Iterator_Element, then we have\n+         --  either Constant_Indexing or Variable_Indexing.\n+\n+         if Has_Aspect (Rec, Aspect_Iterator_Element) then\n+            if Has_Aspect (Rec, Aspect_Constant_Indexing)\n+                 or else\n+               Has_Aspect (Rec, Aspect_Variable_Indexing)\n+            then\n+               null;\n+            else\n+               Error_Msg_N\n+                 (\"Iterator_Element requires indexing aspect\",\n+                  Find_Aspect (Rec, Aspect_Iterator_Element));\n+            end if;\n+         end if;\n+\n          --  All done if not a full record definition\n \n          if Ekind (Rec) /= E_Record_Type then"}, {"sha": "34cc18eff4ee3ce88c633cf00012856d9a684032", "filename": "gcc/ada/sem_ch5.adb", "status": "modified", "additions": 37, "deletions": 1, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7166d53559b1d2fc49d7f55166364b3ca345a00a/gcc%2Fada%2Fsem_ch5.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7166d53559b1d2fc49d7f55166364b3ca345a00a/gcc%2Fada%2Fsem_ch5.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch5.adb?ref=7166d53559b1d2fc49d7f55166364b3ca345a00a", "patch": "@@ -2088,7 +2088,7 @@ package body Sem_Ch5 is\n                end;\n             end if;\n \n-         --  OF not present\n+         --  IN iterator, domain is a range, or a call to Iterate function\n \n          else\n             --  For an iteration of the form IN, the name must denote an\n@@ -2125,6 +2125,35 @@ package body Sem_Ch5 is\n                end if;\n             end if;\n \n+            --  If the name is a call (typically prefixed) to some Iterate\n+            --  function, it has been rewritten as an object declaration.\n+            --  If that object is a selected component, verify that it is not\n+            --  a component of an unconstrained mutable object.\n+\n+            if Nkind (Iter_Name) = N_Identifier then\n+               declare\n+                  Iter_Kind : constant Node_Kind :=\n+                                Nkind (Original_Node (Iter_Name));\n+                  Obj       : Node_Id;\n+\n+               begin\n+                  if Iter_Kind = N_Selected_Component then\n+                     Obj := Prefix (Original_Node (Iter_Name));\n+\n+                  elsif Iter_Kind = N_Function_Call then\n+                     Obj := First_Actual (Original_Node (Iter_Name));\n+                  end if;\n+\n+                  if Nkind (Obj) = N_Selected_Component\n+                    and then Is_Dependent_Component_Of_Mutable_Object (Obj)\n+                  then\n+                     Error_Msg_N\n+                       (\"container cannot be a discriminant-dependent \" &\n+                          \"component of a mutable object\", N);\n+                  end if;\n+               end;\n+            end if;\n+\n             --  The result type of Iterate function is the classwide type of\n             --  the interface parent. We need the specific Cursor type defined\n             --  in the container package. We obtain it by name for a predefined\n@@ -2148,6 +2177,13 @@ package body Sem_Ch5 is\n                   Next_Entity (Ent);\n                end loop;\n             end if;\n+\n+            --  The cursor is the target of generated assignments in the\n+            --  loop, and cannot have a limited type.\n+\n+            if Is_Limited_Type (Etype (Def_Id)) then\n+               Error_Msg_N (\"cursor type cannot be limited\", N);\n+            end if;\n          end if;\n       end if;\n "}]}