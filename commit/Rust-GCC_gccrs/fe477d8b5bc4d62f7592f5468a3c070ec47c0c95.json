{"sha": "fe477d8b5bc4d62f7592f5468a3c070ec47c0c95", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmU0NzdkOGI1YmM0ZDYyZjc1OTJmNTQ2OGEzYzA3MGVjNDdjMGM5NQ==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2002-03-06T17:16:22Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2002-03-06T17:16:22Z"}, "message": "cfgcleanup.c (mentions_nonequal_regs): New function.\n\n\t* cfgcleanup.c (mentions_nonequal_regs): New function.\n\t(thread_jump): Use it.\n\t* toplev.c (rest_of_compilation): Run jump threading after\n\tliveness.\n\nFrom-SVN: r50361", "tree": {"sha": "a698c1b9825f69cafe0e368fa6287c770f99ca9b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a698c1b9825f69cafe0e368fa6287c770f99ca9b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fe477d8b5bc4d62f7592f5468a3c070ec47c0c95", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fe477d8b5bc4d62f7592f5468a3c070ec47c0c95", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fe477d8b5bc4d62f7592f5468a3c070ec47c0c95", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fe477d8b5bc4d62f7592f5468a3c070ec47c0c95/comments", "author": null, "committer": null, "parents": [{"sha": "2041cde4558a50795877fe1fb7f8e49c4c9a94c5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2041cde4558a50795877fe1fb7f8e49c4c9a94c5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2041cde4558a50795877fe1fb7f8e49c4c9a94c5"}], "stats": {"total": 42, "additions": 41, "deletions": 1}, "files": [{"sha": "3b89fa4456097136f02e289b713162fc477b1a07", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe477d8b5bc4d62f7592f5468a3c070ec47c0c95/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe477d8b5bc4d62f7592f5468a3c070ec47c0c95/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=fe477d8b5bc4d62f7592f5468a3c070ec47c0c95", "patch": "@@ -1,3 +1,10 @@\n+Wed Mar  6 18:14:43 CET 2002  Jan Hubicka  <jh@suse.cz>\n+\n+\t* cfgcleanup.c (mentions_nonequal_regs): New function.\n+\t(thread_jump): Use it.\n+\t* toplev.c (rest_of_compilation): Run jump threading after\n+\tliveness.\n+\n 2002-03-06  Jakub Jelinek  <jakub@redhat.com>\n \n \t* ssa-ccp.c (ssa_ccp_substitute_constants): Backout 2002-03-05"}, {"sha": "bce4153def014fd9049c6dce505bd4ecaeb6b739", "filename": "gcc/cfgcleanup.c", "status": "modified", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe477d8b5bc4d62f7592f5468a3c070ec47c0c95/gcc%2Fcfgcleanup.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe477d8b5bc4d62f7592f5468a3c070ec47c0c95/gcc%2Fcfgcleanup.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfgcleanup.c?ref=fe477d8b5bc4d62f7592f5468a3c070ec47c0c95", "patch": "@@ -89,6 +89,7 @@ static edge thread_jump\t\t\tPARAMS ((int, edge, basic_block));\n static bool mark_effect\t\t\tPARAMS ((rtx, bitmap));\n static void notice_new_block\t\tPARAMS ((basic_block));\n static void update_forwarder_flag\tPARAMS ((basic_block));\n+static int mentions_nonequal_regs\tPARAMS ((rtx *, void *));\n \f\n /* Set flags for newly created block.  */\n \n@@ -235,6 +236,32 @@ mark_effect (exp, nonequal)\n \treturn false;\n     }\n }\n+\n+/* Return nonzero if X is an register set in regset DATA.\n+   Called via for_each_rtx.  */\n+static int\n+mentions_nonequal_regs (x, data)\n+     rtx *x;\n+     void *data;\n+{\n+  regset nonequal = (regset) data;\n+  if (REG_P (*x))\n+    {\n+      int regno;\n+\n+      regno = REGNO (*x);\n+      if (REGNO_REG_SET_P (nonequal, regno))\n+\treturn 1;\n+      if (regno < FIRST_PSEUDO_REGISTER)\n+\t{\n+\t  int n = HARD_REGNO_NREGS (regno, GET_MODE (*x));\n+\t  while (--n > 0)\n+\t    if (REGNO_REG_SET_P (nonequal, regno + n))\n+\t      return 1;\n+\t}\n+    }\n+  return 0;\n+}\n /* Attempt to prove that the basic block B will have no side effects and\n    allways continues in the same edge if reached via E.  Return the edge\n    if exist, NULL otherwise.  */\n@@ -338,6 +365,11 @@ thread_jump (mode, e, b)\n   if (failed)\n     goto failed_exit;\n \n+  /* cond2 must not mention any register that is not equal to the\n+     former block.  */\n+  if (for_each_rtx (&cond2, mentions_nonequal_regs, nonequal))\n+    goto failed_exit;\n+\n   /* In case liveness information is available, we need to prove equivalence\n      only of the live values.  */\n   if (mode & CLEANUP_UPDATE_LIFE)"}, {"sha": "5cd2e44ad17b486e5e7366d0ea4b11f48e13140b", "filename": "gcc/toplev.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe477d8b5bc4d62f7592f5468a3c070ec47c0c95/gcc%2Ftoplev.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe477d8b5bc4d62f7592f5468a3c070ec47c0c95/gcc%2Ftoplev.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftoplev.c?ref=fe477d8b5bc4d62f7592f5468a3c070ec47c0c95", "patch": "@@ -3019,7 +3019,8 @@ rest_of_compilation (decl)\n #endif\n   life_analysis (insns, rtl_dump_file, PROP_FINAL);\n   if (optimize)\n-    cleanup_cfg (CLEANUP_EXPENSIVE | CLEANUP_UPDATE_LIFE);\n+    cleanup_cfg ((optimize ? CLEANUP_EXPENSIVE : 0)\n+\t\t | (flag_thread_jumps ? CLEANUP_THREADING : 0));\n   timevar_pop (TV_FLOW);\n \n   no_new_pseudos = 1;"}]}