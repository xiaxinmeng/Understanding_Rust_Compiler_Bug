{"sha": "179b8d05e9b773510208660d57f7e78504e75a9d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTc5YjhkMDVlOWI3NzM1MTAyMDg2NjBkNTdmN2U3ODUwNGU3NWE5ZA==", "commit": {"author": {"name": "Mikhail Maltsev", "email": "maltsevm@gmail.com", "date": "2015-10-13T21:31:48Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "2015-10-13T21:31:48Z"}, "message": "[PATCH 1/9] ENABLE_CHECKING refactoring\n\n[PATCH 1/9] ENABLE_CHECKING refactoring\ngcc/ChangeLog:\n\n2015-10-05  Mikhail Maltsev  <maltsevm@gmail.com>\n\n\t* common.opt: Add flag_checking.\n\t* system.h (CHECKING_P): Define.\n\nlibcpp/ChangeLog:\n\n2015-10-05  Mikhail Maltsev  <maltsevm@gmail.com>\n\n\t* system.h (CHECKING_P, gcc_checking_assert): Define.\n\nFrom-SVN: r228787", "tree": {"sha": "7699f1d55a547fca431e8154b9a40dc1c868fc72", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7699f1d55a547fca431e8154b9a40dc1c868fc72"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/179b8d05e9b773510208660d57f7e78504e75a9d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/179b8d05e9b773510208660d57f7e78504e75a9d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/179b8d05e9b773510208660d57f7e78504e75a9d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/179b8d05e9b773510208660d57f7e78504e75a9d/comments", "author": {"login": "miyuki", "id": 4668268, "node_id": "MDQ6VXNlcjQ2NjgyNjg=", "avatar_url": "https://avatars.githubusercontent.com/u/4668268?v=4", "gravatar_id": "", "url": "https://api.github.com/users/miyuki", "html_url": "https://github.com/miyuki", "followers_url": "https://api.github.com/users/miyuki/followers", "following_url": "https://api.github.com/users/miyuki/following{/other_user}", "gists_url": "https://api.github.com/users/miyuki/gists{/gist_id}", "starred_url": "https://api.github.com/users/miyuki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/miyuki/subscriptions", "organizations_url": "https://api.github.com/users/miyuki/orgs", "repos_url": "https://api.github.com/users/miyuki/repos", "events_url": "https://api.github.com/users/miyuki/events{/privacy}", "received_events_url": "https://api.github.com/users/miyuki/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "141aa58b53d979d2ffa38e072691ecf55a5a5b04", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/141aa58b53d979d2ffa38e072691ecf55a5a5b04", "html_url": "https://github.com/Rust-GCC/gccrs/commit/141aa58b53d979d2ffa38e072691ecf55a5a5b04"}], "stats": {"total": 26, "additions": 26, "deletions": 0}, "files": [{"sha": "dc9b1f3867b758d56a181335cc6925cf6748e921", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/179b8d05e9b773510208660d57f7e78504e75a9d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/179b8d05e9b773510208660d57f7e78504e75a9d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=179b8d05e9b773510208660d57f7e78504e75a9d", "patch": "@@ -1,3 +1,8 @@\n+2015-10-13  Mikhail Maltsev  <maltsevm@gmail.com>\n+\n+\t* common.opt: Add flag_checking.\n+\t* system.h (CHECKING_P): Define.\n+\n 2015-10-13  Jakub Jelinek  <jakub@redhat.com>\n \t    Aldy Hernandez  <aldyh@redhat.com>\n \t    Ilya Verbin  <ilya.verbin@intel.com>"}, {"sha": "50602082173b2a96d422561ed391b2e3ea7ab718", "filename": "gcc/common.opt", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/179b8d05e9b773510208660d57f7e78504e75a9d/gcc%2Fcommon.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/179b8d05e9b773510208660d57f7e78504e75a9d/gcc%2Fcommon.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcommon.opt?ref=179b8d05e9b773510208660d57f7e78504e75a9d", "patch": "@@ -46,6 +46,11 @@ int optimize_fast\n Variable\n bool in_lto_p = false\n \n+; Enable additional checks of internal state consistency, which may slow\n+; the compiler down.\n+Variable\n+bool flag_checking = CHECKING_P\n+\n ; 0 means straightforward implementation of complex divide acceptable.\n ; 1 means wide ranges of inputs must work for complex divide.\n ; 2 means C99-like requirements for complex multiply and divide."}, {"sha": "61790d74a726e29a88e193fc731e5eefbd80e26c", "filename": "gcc/system.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/179b8d05e9b773510208660d57f7e78504e75a9d/gcc%2Fsystem.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/179b8d05e9b773510208660d57f7e78504e75a9d/gcc%2Fsystem.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsystem.h?ref=179b8d05e9b773510208660d57f7e78504e75a9d", "patch": "@@ -716,8 +716,11 @@ extern void fancy_abort (const char *, int, const char *) ATTRIBUTE_NORETURN;\n \n #ifdef ENABLE_CHECKING\n #define gcc_checking_assert(EXPR) gcc_assert (EXPR)\n+#define CHECKING_P 1\n #else\n+/* N.B.: in release build EXPR is not evaluated.  */\n #define gcc_checking_assert(EXPR) ((void)(0 && (EXPR)))\n+#define CHECKING_P 1\n #endif\n \n /* Use gcc_unreachable() to mark unreachable locations (like an"}, {"sha": "d14a26108ceafbcc7735256318212495efa79e1b", "filename": "libcpp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/179b8d05e9b773510208660d57f7e78504e75a9d/libcpp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/179b8d05e9b773510208660d57f7e78504e75a9d/libcpp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2FChangeLog?ref=179b8d05e9b773510208660d57f7e78504e75a9d", "patch": "@@ -1,3 +1,7 @@\n+2015-10-13  Mikhail Maltsev  <maltsevm@gmail.com>\n+\n+\t* system.h (CHECKING_P, gcc_checking_assert): Define.\n+\n 2015-09-21  Manuel L\u00f3pez-Ib\u00e1\u00f1ez  <manu@gcc.gnu.org>\n \n \tPR c/66415"}, {"sha": "20f07bbe2614fb5f1bc419fd0616fe7252b692cc", "filename": "libcpp/system.h", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/179b8d05e9b773510208660d57f7e78504e75a9d/libcpp%2Fsystem.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/179b8d05e9b773510208660d57f7e78504e75a9d/libcpp%2Fsystem.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2Fsystem.h?ref=179b8d05e9b773510208660d57f7e78504e75a9d", "patch": "@@ -391,6 +391,15 @@ extern void abort (void);\n #define __builtin_expect(a, b) (a)\n #endif\n \n+#ifdef ENABLE_CHECKING\n+#define gcc_checking_assert(EXPR) gcc_assert (EXPR)\n+#define CHECKING_P 1\n+#else\n+/* N.B.: in release build EXPR is not evaluated.  */\n+#define gcc_checking_assert(EXPR) ((void)(0 && (EXPR)))\n+#define CHECKING_P 1\n+#endif\n+\n /* Provide a fake boolean type.  We make no attempt to use the\n    C99 _Bool, as it may not be available in the bootstrap compiler,\n    and even if it is, it is liable to be buggy.  "}]}