{"sha": "8696da340c88dc97b7fd08861bb81e1c886662b8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODY5NmRhMzQwYzg4ZGM5N2I3ZmQwODg2MWJiODFlMWM4ODY2NjJiOA==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-08-27T05:55:33Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-08-27T05:55:33Z"}, "message": "(readescape): For \\x, don't include leading 0's in count.\n\nFrom-SVN: r1973", "tree": {"sha": "94042acefca4d3c6e3648f1a49c0b5bb0e94f9fa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/94042acefca4d3c6e3648f1a49c0b5bb0e94f9fa"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8696da340c88dc97b7fd08861bb81e1c886662b8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8696da340c88dc97b7fd08861bb81e1c886662b8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8696da340c88dc97b7fd08861bb81e1c886662b8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8696da340c88dc97b7fd08861bb81e1c886662b8/comments", "author": null, "committer": null, "parents": [{"sha": "e64bddee63466e1a78e801d9b03ec846ad204627", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e64bddee63466e1a78e801d9b03ec846ad204627", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e64bddee63466e1a78e801d9b03ec846ad204627"}], "stats": {"total": 14, "additions": 10, "deletions": 4}, "files": [{"sha": "1587ae6f3d0ad64808266e051e6f0da4380ea8c9", "filename": "gcc/c-lex.c", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8696da340c88dc97b7fd08861bb81e1c886662b8/gcc%2Fc-lex.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8696da340c88dc97b7fd08861bb81e1c886662b8/gcc%2Fc-lex.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-lex.c?ref=8696da340c88dc97b7fd08861bb81e1c886662b8", "patch": "@@ -803,6 +803,7 @@ readescape ()\n   register int code;\n   register unsigned count;\n   unsigned firstdig;\n+  int nonnull;\n \n   switch (c)\n     {\n@@ -815,6 +816,7 @@ readescape ()\n \n       code = 0;\n       count = 0;\n+      nonnull = 0;\n       while (1)\n \t{\n \t  c = getc (finput);\n@@ -832,11 +834,15 @@ readescape ()\n \t    code += c - 'A' + 10;\n \t  if (c >= '0' && c <= '9')\n \t    code += c - '0';\n-\t  if (count == 0)\n-\t    firstdig = code;\n-\t  count++;\n+\t  if (code != 0 || count != 0)\n+\t    {\n+\t      if (count == 0)\n+\t\tfirstdig = code;\n+\t      count++;\n+\t    }\n+\t  nonnull = 1;\n \t}\n-      if (count == 0)\n+      if (! nonnull)\n \terror (\"\\\\x used with no following hex digits\");\n       else if ((count - 1) * 4 >= TYPE_PRECISION (integer_type_node)\n \t       || (count > 1"}]}