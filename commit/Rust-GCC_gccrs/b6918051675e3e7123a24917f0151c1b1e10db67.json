{"sha": "b6918051675e3e7123a24917f0151c1b1e10db67", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjY5MTgwNTE2NzVlM2U3MTIzYTI0OTE3ZjAxNTFjMWIxZTEwZGI2Nw==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2014-04-22T16:16:25Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2014-04-22T16:16:25Z"}, "message": "fe.h (Compiler_Abort): Replace Fat_Pointer with String_Pointer.\n\n\t* fe.h (Compiler_Abort): Replace Fat_Pointer with String_Pointer.\n\t(Error_Msg_N): Likewise.\n\t(Error_Msg_NE): Likewise.\n\t(Get_External_Name_With_Suffix): Likewise.\n\t* types.h (Fat_Pointer): Delete.\n\t(String_Pointer): New type.\n\t(DECLARE_STRING_POINTER): New macro.\n\t* gcc-interface/decl.c (create_concat_name): Adjust.\n\t* gcc-interface/trans.c (post_error): Likewise.\n\t(post_error_ne): Likewise.\n\t* gcc-interface/misc.c (internal_error_function): Likewise.\n\nFrom-SVN: r209644", "tree": {"sha": "ba3a91b7adb4c1d72d59218e09e403e1ad16e001", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ba3a91b7adb4c1d72d59218e09e403e1ad16e001"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b6918051675e3e7123a24917f0151c1b1e10db67", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b6918051675e3e7123a24917f0151c1b1e10db67", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b6918051675e3e7123a24917f0151c1b1e10db67", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b6918051675e3e7123a24917f0151c1b1e10db67/comments", "author": null, "committer": null, "parents": [{"sha": "5cb74e90b383f424440aaf297974fd1f68fdd5c8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5cb74e90b383f424440aaf297974fd1f68fdd5c8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5cb74e90b383f424440aaf297974fd1f68fdd5c8"}], "stats": {"total": 80, "additions": 49, "deletions": 31}, "files": [{"sha": "96bc09b95152f7f81d46a94bb109952e05a5ddd8", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b6918051675e3e7123a24917f0151c1b1e10db67/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b6918051675e3e7123a24917f0151c1b1e10db67/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=b6918051675e3e7123a24917f0151c1b1e10db67", "patch": "@@ -1,3 +1,17 @@\n+2014-04-22  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* fe.h (Compiler_Abort): Replace Fat_Pointer with String_Pointer.\n+\t(Error_Msg_N): Likewise.\n+\t(Error_Msg_NE): Likewise.\n+\t(Get_External_Name_With_Suffix): Likewise.\n+\t* types.h (Fat_Pointer): Delete.\n+\t(String_Pointer): New type.\n+\t(DECLARE_STRING_POINTER): New macro.\n+\t* gcc-interface/decl.c (create_concat_name): Adjust.\n+\t* gcc-interface/trans.c (post_error): Likewise.\n+\t(post_error_ne): Likewise.\n+\t* gcc-interface/misc.c (internal_error_function): Likewise.\n+\n 2014-04-15  Eric Botcazou  <ebotcazou@adacore.com>\n             Pierre-Marie de Rodat  <derodat@adacore.com>\n "}, {"sha": "518382041d9894e29955b25cabd218f49e2c62ce", "filename": "gcc/ada/fe.h", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b6918051675e3e7123a24917f0151c1b1e10db67/gcc%2Fada%2Ffe.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b6918051675e3e7123a24917f0151c1b1e10db67/gcc%2Fada%2Ffe.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffe.h?ref=b6918051675e3e7123a24917f0151c1b1e10db67", "patch": "@@ -39,7 +39,7 @@ extern \"C\" {\n /* comperr:  */\n \n #define Compiler_Abort comperr__compiler_abort\n-extern int Compiler_Abort (Fat_Pointer, int, Fat_Pointer) ATTRIBUTE_NORETURN;\n+extern int Compiler_Abort (String_Pointer, int, String_Pointer) ATTRIBUTE_NORETURN;\n \n /* csets: */\n \n@@ -90,8 +90,8 @@ extern Node_Id Get_Attribute_Definition_Clause (Entity_Id, char);\n #define Error_Msg_NE              errout__error_msg_ne\n #define Set_Identifier_Casing     errout__set_identifier_casing\n \n-extern void Error_Msg_N\t          (Fat_Pointer, Node_Id);\n-extern void Error_Msg_NE          (Fat_Pointer, Node_Id, Entity_Id);\n+extern void Error_Msg_N\t          (String_Pointer, Node_Id);\n+extern void Error_Msg_NE          (String_Pointer, Node_Id, Entity_Id);\n extern void Set_Identifier_Casing (Char *, const Char *);\n \n /* err_vars: */\n@@ -151,7 +151,7 @@ extern void Setup_Asm_Outputs\t\t(Node_Id);\n \n extern void Get_Encoded_Name\t\t\t(Entity_Id);\n extern void Get_External_Name\t\t\t(Entity_Id, Boolean);\n-extern void Get_External_Name_With_Suffix\t(Entity_Id, Fat_Pointer);\n+extern void Get_External_Name_With_Suffix\t(Entity_Id, String_Pointer);\n \n /* exp_util: */\n "}, {"sha": "0873bae706a12fc78fb17d128f7a17f005a69c1f", "filename": "gcc/ada/gcc-interface/decl.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b6918051675e3e7123a24917f0151c1b1e10db67/gcc%2Fada%2Fgcc-interface%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b6918051675e3e7123a24917f0151c1b1e10db67/gcc%2Fada%2Fgcc-interface%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Fdecl.c?ref=b6918051675e3e7123a24917f0151c1b1e10db67", "patch": "@@ -8861,8 +8861,10 @@ create_concat_name (Entity_Id gnat_entity, const char *suffix)\n   if (suffix)\n     {\n       String_Template temp = {1, (int) strlen (suffix)};\n-      Fat_Pointer fp = {suffix, &temp};\n-      Get_External_Name_With_Suffix (gnat_entity, fp);\n+      DECLARE_STRING_POINTER (sp);\n+      sp.Bounds = &temp;\n+      sp.Array = suffix;\n+      Get_External_Name_With_Suffix (gnat_entity, sp);\n     }\n   else\n     Get_External_Name (gnat_entity, 0);"}, {"sha": "33db181e61a4fc61a8537ccdea8b63e73318d17f", "filename": "gcc/ada/gcc-interface/misc.c", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b6918051675e3e7123a24917f0151c1b1e10db67/gcc%2Fada%2Fgcc-interface%2Fmisc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b6918051675e3e7123a24917f0151c1b1e10db67/gcc%2Fada%2Fgcc-interface%2Fmisc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Fmisc.c?ref=b6918051675e3e7123a24917f0151c1b1e10db67", "patch": "@@ -283,8 +283,8 @@ internal_error_function (diagnostic_context *context,\n   text_info tinfo;\n   char *buffer, *p, *loc;\n   String_Template temp, temp_loc;\n-  Fat_Pointer fp, fp_loc;\n-  expanded_location s;\n+  DECLARE_STRING_POINTER (sp, sp_loc);\n+  expanded_location xloc;\n \n   /* Warn if plugins present.  */\n   warn_if_plugins ();\n@@ -311,21 +311,21 @@ internal_error_function (diagnostic_context *context,\n \n   temp.Low_Bound = 1;\n   temp.High_Bound = p - buffer;\n-  fp.Bounds = &temp;\n-  fp.Array = buffer;\n+  sp.Bounds = &temp;\n+  sp.Array = buffer;\n \n-  s = expand_location (input_location);\n-  if (context->show_column && s.column != 0)\n-    asprintf (&loc, \"%s:%d:%d\", s.file, s.line, s.column);\n+  xloc = expand_location (input_location);\n+  if (context->show_column && xloc.column != 0)\n+    asprintf (&loc, \"%s:%d:%d\", xloc.file, xloc.line, xloc.column);\n   else\n-    asprintf (&loc, \"%s:%d\", s.file, s.line);\n+    asprintf (&loc, \"%s:%d\", xloc.file, xloc.line);\n   temp_loc.Low_Bound = 1;\n   temp_loc.High_Bound = strlen (loc);\n-  fp_loc.Bounds = &temp_loc;\n-  fp_loc.Array = loc;\n+  sp_loc.Bounds = &temp_loc;\n+  sp_loc.Array = loc;\n \n   Current_Error_Node = error_gnat_node;\n-  Compiler_Abort (fp, -1, fp_loc);\n+  Compiler_Abort (sp, -1, sp_loc);\n }\n \n /* Perform all the initialization steps that are language-specific.  */"}, {"sha": "0e55f94c8789558bcac04925166744db0638306e", "filename": "gcc/ada/gcc-interface/trans.c", "status": "modified", "additions": 8, "deletions": 9, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b6918051675e3e7123a24917f0151c1b1e10db67/gcc%2Fada%2Fgcc-interface%2Ftrans.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b6918051675e3e7123a24917f0151c1b1e10db67/gcc%2Fada%2Fgcc-interface%2Ftrans.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Ftrans.c?ref=b6918051675e3e7123a24917f0151c1b1e10db67", "patch": "@@ -7833,7 +7833,6 @@ gnat_gimplify_stmt (tree *stmt_p)\n \t      gnu_cond = build2 (ANNOTATE_EXPR, TREE_TYPE (gnu_cond), gnu_cond,\n \t\t\t\t build_int_cst (integer_type_node,\n \t\t\t\t\t\tannot_expr_ivdep_kind));\n-\n \t    if (LOOP_STMT_NO_VECTOR (stmt))\n \t      gnu_cond = build2 (ANNOTATE_EXPR, TREE_TYPE (gnu_cond), gnu_cond,\n \t\t\t\t build_int_cst (integer_type_node,\n@@ -9357,16 +9356,16 @@ void\n post_error (const char *msg, Node_Id node)\n {\n   String_Template temp;\n-  Fat_Pointer fp;\n+  DECLARE_STRING_POINTER (sp);\n \n   if (No (node))\n     return;\n \n   temp.Low_Bound = 1;\n   temp.High_Bound = strlen (msg);\n-  fp.Bounds = &temp;\n-  fp.Array = msg;\n-  Error_Msg_N (fp, node);\n+  sp.Bounds = &temp;\n+  sp.Array = msg;\n+  Error_Msg_N (sp, node);\n }\n \n /* Similar to post_error, but NODE is the node at which to post the error and\n@@ -9376,16 +9375,16 @@ void\n post_error_ne (const char *msg, Node_Id node, Entity_Id ent)\n {\n   String_Template temp;\n-  Fat_Pointer fp;\n+  DECLARE_STRING_POINTER (sp);\n \n   if (No (node))\n     return;\n \n   temp.Low_Bound = 1;\n   temp.High_Bound = strlen (msg);\n-  fp.Bounds = &temp;\n-  fp.Array = msg;\n-  Error_Msg_NE (fp, node, ent);\n+  sp.Bounds = &temp;\n+  sp.Array = msg;\n+  Error_Msg_NE (sp, node, ent);\n }\n \n /* Similar to post_error_ne, but NUM is the number to use for the '^'.  */"}, {"sha": "268579ecefb1a6fd1462fd57bad9a6aec5314546", "filename": "gcc/ada/types.h", "status": "modified", "additions": 8, "deletions": 5, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b6918051675e3e7123a24917f0151c1b1e10db67/gcc%2Fada%2Ftypes.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b6918051675e3e7123a24917f0151c1b1e10db67/gcc%2Fada%2Ftypes.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ftypes.h?ref=b6918051675e3e7123a24917f0151c1b1e10db67", "patch": "@@ -76,11 +76,14 @@ typedef Char *Str;\n /* Pointer to string of Chars */\n typedef Char *Str_Ptr;\n \n-/* Types for the fat pointer used for strings and the template it\n-   points to.  */\n-typedef struct {int Low_Bound, High_Bound; } String_Template;\n-typedef struct {const char *Array; String_Template *Bounds; }\n-\t__attribute ((aligned (sizeof (char *) * 2))) Fat_Pointer;\n+/* Types for the fat pointer used for strings and the template it points to.\n+   On most platforms the fat pointer is naturally aligned but, on the rest,\n+   it is given twice the natural alignment.  For maximum portability, we do\n+   not overalign the type but only the objects.  */\n+typedef struct { int Low_Bound, High_Bound; } String_Template;\n+typedef struct { const char *Array; String_Template *Bounds; } String_Pointer;\n+#define DECLARE_STRING_POINTER(...) \\\n+  __attribute__ ((aligned (sizeof (char *) * 2))) String_Pointer __VA_ARGS__\n \n /* Types for Node/Entity Kinds:  */\n "}]}