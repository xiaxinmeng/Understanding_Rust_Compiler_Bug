{"sha": "51baf85ab604958aa93d7f9c18c335bf080aaf70", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTFiYWY4NWFiNjA0OTU4YWE5M2Q3ZjljMThjMzM1YmYwODBhYWY3MA==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@acm.org", "date": "2015-12-07T16:08:42Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2015-12-07T16:08:42Z"}, "message": "nvptx.c (nvptx_output_call_insn): Emit trap after no return call.\n\n\tgcc/\n\t* config/nvptx/nvptx.c (nvptx_output_call_insn): Emit trap after no\n\treturn call.\n\n\tgcc/testsuite/\n\t* gcc.target/nvptx/abort.c: New.\n\nFrom-SVN: r231368", "tree": {"sha": "98fef089b3f840adae625184631a383115201687", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/98fef089b3f840adae625184631a383115201687"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/51baf85ab604958aa93d7f9c18c335bf080aaf70", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/51baf85ab604958aa93d7f9c18c335bf080aaf70", "html_url": "https://github.com/Rust-GCC/gccrs/commit/51baf85ab604958aa93d7f9c18c335bf080aaf70", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/51baf85ab604958aa93d7f9c18c335bf080aaf70/comments", "author": {"login": "urnathan", "id": 13103001, "node_id": "MDQ6VXNlcjEzMTAzMDAx", "avatar_url": "https://avatars.githubusercontent.com/u/13103001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/urnathan", "html_url": "https://github.com/urnathan", "followers_url": "https://api.github.com/users/urnathan/followers", "following_url": "https://api.github.com/users/urnathan/following{/other_user}", "gists_url": "https://api.github.com/users/urnathan/gists{/gist_id}", "starred_url": "https://api.github.com/users/urnathan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/urnathan/subscriptions", "organizations_url": "https://api.github.com/users/urnathan/orgs", "repos_url": "https://api.github.com/users/urnathan/repos", "events_url": "https://api.github.com/users/urnathan/events{/privacy}", "received_events_url": "https://api.github.com/users/urnathan/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f79520bb110d31c9d2e06d463e7d8a3eb437225e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f79520bb110d31c9d2e06d463e7d8a3eb437225e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f79520bb110d31c9d2e06d463e7d8a3eb437225e"}], "stats": {"total": 29, "additions": 29, "deletions": 0}, "files": [{"sha": "2b9211992ff8f28ee0691fc0d9c355f7b076b6ef", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/51baf85ab604958aa93d7f9c18c335bf080aaf70/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/51baf85ab604958aa93d7f9c18c335bf080aaf70/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=51baf85ab604958aa93d7f9c18c335bf080aaf70", "patch": "@@ -1,3 +1,8 @@\n+2015-12-07  Nathan Sidwell  <nathan@acm.org>\n+\n+\t* config/nvptx/nvptx.c (nvptx_output_call_insn): Emit trap after no\n+\treturn call.\n+\n 2015-12-07  David Malcolm  <dmalcolm@redhat.com>\n \n \t* pretty-print.c (text_info::set_range): Rename to..."}, {"sha": "6ce8d4b37d5c023db2f45e403577f413f8d9567a", "filename": "gcc/config/nvptx/nvptx.c", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/51baf85ab604958aa93d7f9c18c335bf080aaf70/gcc%2Fconfig%2Fnvptx%2Fnvptx.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/51baf85ab604958aa93d7f9c18c335bf080aaf70/gcc%2Fconfig%2Fnvptx%2Fnvptx.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fnvptx%2Fnvptx.c?ref=51baf85ab604958aa93d7f9c18c335bf080aaf70", "patch": "@@ -1890,6 +1890,13 @@ nvptx_output_call_insn (rtx_insn *insn, rtx result, rtx callee)\n     }\n   fprintf (asm_out_file, \";\\n\");\n \n+  if (find_reg_note (insn, REG_NORETURN, NULL))\n+    /* No return functions confuse the PTX JIT, as it doesn't realize\n+       the flow control barrier they imply.  It can seg fault if it\n+       encounters what looks like an unexitable loop.  Emit a trailing\n+       trap, which it does grok.  */\n+    fprintf (asm_out_file, \"\\t\\ttrap; // (noreturn)\\n\");\n+\n   return result != NULL_RTX ? \"\\tld.param%t0\\t%0, [%%retval_in];\\n\\t}\" : \"}\";\n }\n "}, {"sha": "2a8fce8903b7fe80dccc7bcb1898f82ea02ea22d", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/51baf85ab604958aa93d7f9c18c335bf080aaf70/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/51baf85ab604958aa93d7f9c18c335bf080aaf70/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=51baf85ab604958aa93d7f9c18c335bf080aaf70", "patch": "@@ -1,3 +1,7 @@\n+2015-12-07  Nathan Sidwell  <nathan@acm.org>\n+\n+\t* gcc.target/nvptx/abort.c: New.\n+\n 2015-12-07  David Malcolm  <dmalcolm@redhat.com>\n \n \t* gcc.dg/diagnostic-ranges-1.c: New test file."}, {"sha": "d32206874008e60033cdd34aeac2f507317e8c9c", "filename": "gcc/testsuite/gcc.target/nvptx/abort.c", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/51baf85ab604958aa93d7f9c18c335bf080aaf70/gcc%2Ftestsuite%2Fgcc.target%2Fnvptx%2Fabort.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/51baf85ab604958aa93d7f9c18c335bf080aaf70/gcc%2Ftestsuite%2Fgcc.target%2Fnvptx%2Fabort.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fnvptx%2Fabort.c?ref=51baf85ab604958aa93d7f9c18c335bf080aaf70", "patch": "@@ -0,0 +1,13 @@\n+/* { dg-do compile} */\n+/* Annotate no return functions with a trailing 'trap'.  */\n+\n+extern void abort ();\n+\n+int main (int argc, char **argv)\n+{\n+  if (argc > 2)\n+    abort ();\n+  return 0;\n+}\n+\n+/* { dg-final { scan-assembler \"call abort;\\[\\r\\n\\t \\]+trap;\" } } */"}]}