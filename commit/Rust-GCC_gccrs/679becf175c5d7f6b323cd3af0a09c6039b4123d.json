{"sha": "679becf175c5d7f6b323cd3af0a09c6039b4123d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Njc5YmVjZjE3NWM1ZDdmNmIzMjNjZDNhZjBhMDljNjAzOWI0MTIzZA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2020-03-28T09:21:52Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2020-03-28T09:21:52Z"}, "message": "reassoc: Fix -fcompare-debug bug in reassociate_bb [PR94329]\n\nThe following testcase FAILs with -fcompare-debug, because reassociate_bb\nmishandles the case when the last stmt in a bb has zero uses.  In that case\nreassoc_remove_stmt (like gsi_remove) moves the iterator to the next stmt,\ni.e. gsi_end_p is true, which means the code sets the iterator back to\ngsi_last_bb.  The problem is that the for loop does gsi_prev on that before\nhandling the next statement, which means the former penultimate stmt, now\nlast one, is not processed by reassociate_bb.\nNow, with -g, if there is at least one debug stmt at the end of the bb,\nreassoc_remove_stmt moves the iterator to that following debug stmt and we\njust do gsi_prev and continue with the former penultimate non-debug stmt,\nnow last non-debug stmt.\n\nThe following patch fixes that by not doing the gsi_prev in this case; there\nare too many continue; cases, so I didn't want to copy over the gsi_prev to\nall of them, so this patch uses a bool for that instead.  The second\ngsi_end_p check isn't needed anymore, because when we don't do the\nundesirable gsi_prev after gsi = gsi_last_bb, the loop !gsi_end_p (gsi)\ncondition will catch the removal of the very last stmt from a bb.\n\n2020-03-28  Jakub Jelinek  <jakub@redhat.com>\n\n\tPR tree-optimization/94329\n\t* tree-ssa-reassoc.c (reassociate_bb): When calling reassoc_remove_stmt\n\ton the last stmt in a bb, make sure gsi_prev isn't done immediately\n\tafter gsi_last_bb.\n\n\t* gfortran.dg/pr94329.f90: New test.", "tree": {"sha": "18c9c30567b3a8e561897153b75e54026e6f423f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/18c9c30567b3a8e561897153b75e54026e6f423f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/679becf175c5d7f6b323cd3af0a09c6039b4123d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/679becf175c5d7f6b323cd3af0a09c6039b4123d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/679becf175c5d7f6b323cd3af0a09c6039b4123d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/679becf175c5d7f6b323cd3af0a09c6039b4123d/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c2781192292bee0732560669136a6a76482b6496", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c2781192292bee0732560669136a6a76482b6496", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c2781192292bee0732560669136a6a76482b6496"}], "stats": {"total": 38, "additions": 31, "deletions": 7}, "files": [{"sha": "52c296c00ae0e19159a196c373f9970db04c96d7", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/679becf175c5d7f6b323cd3af0a09c6039b4123d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/679becf175c5d7f6b323cd3af0a09c6039b4123d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=679becf175c5d7f6b323cd3af0a09c6039b4123d", "patch": "@@ -1,3 +1,10 @@\n+2020-03-28  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/94329\n+\t* tree-ssa-reassoc.c (reassociate_bb): When calling reassoc_remove_stmt\n+\ton the last stmt in a bb, make sure gsi_prev isn't done immediately\n+\tafter gsi_last_bb.\n+\n 2020-03-27  Alan Modra  <amodra@gmail.com>\n \n \tPR target/94145"}, {"sha": "3e51175368cc435172184a962a8785a615c1ac39", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/679becf175c5d7f6b323cd3af0a09c6039b4123d/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/679becf175c5d7f6b323cd3af0a09c6039b4123d/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=679becf175c5d7f6b323cd3af0a09c6039b4123d", "patch": "@@ -1,3 +1,8 @@\n+2020-03-28  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/94329\n+\t* gfortran.dg/pr94329.f90: New test.\n+\n 2020-03-27  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c++/94339"}, {"sha": "9efcf4b65242d9c0604578e9d41bbd839d7250af", "filename": "gcc/testsuite/gfortran.dg/pr94329.f90", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/679becf175c5d7f6b323cd3af0a09c6039b4123d/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr94329.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/679becf175c5d7f6b323cd3af0a09c6039b4123d/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr94329.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr94329.f90?ref=679becf175c5d7f6b323cd3af0a09c6039b4123d", "patch": "@@ -0,0 +1,12 @@\n+! PR tree-optimization/94329\n+! { dg-do compile }\n+! { dg-options \"-O1 -fno-tree-loop-optimize -fwrapv -fcompare-debug\" }\n+\n+subroutine pr94329 (s, t)\n+  real :: s, t(:,:)\n+  do i = 1,3\n+    do j = 1,3\n+      s = t(i,j)\n+    end do\n+  end do\n+end"}, {"sha": "ec1c033a2cff990a6a4a67f74dfc2147e8eafecb", "filename": "gcc/tree-ssa-reassoc.c", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/679becf175c5d7f6b323cd3af0a09c6039b4123d/gcc%2Ftree-ssa-reassoc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/679becf175c5d7f6b323cd3af0a09c6039b4123d/gcc%2Ftree-ssa-reassoc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-reassoc.c?ref=679becf175c5d7f6b323cd3af0a09c6039b4123d", "patch": "@@ -6224,8 +6224,11 @@ reassociate_bb (basic_block bb)\n   if (stmt && !gimple_visited_p (stmt))\n     cfg_cleanup_needed |= maybe_optimize_range_tests (stmt);\n \n-  for (gsi = gsi_last_bb (bb); !gsi_end_p (gsi); gsi_prev (&gsi))\n+  bool do_prev = false;\n+  for (gsi = gsi_last_bb (bb);\n+       !gsi_end_p (gsi); do_prev ? gsi_prev (&gsi) : (void) 0)\n     {\n+      do_prev = true;\n       stmt = gsi_stmt (gsi);\n \n       if (is_gimple_assign (stmt)\n@@ -6246,15 +6249,12 @@ reassociate_bb (basic_block bb)\n \t\t  release_defs (stmt);\n \t\t  /* We might end up removing the last stmt above which\n \t\t     places the iterator to the end of the sequence.\n-\t\t     Reset it to the last stmt in this case which might\n-\t\t     be the end of the sequence as well if we removed\n-\t\t     the last statement of the sequence.  In which case\n-\t\t     we need to bail out.  */\n+\t\t     Reset it to the last stmt in this case and make sure\n+\t\t     we don't do gsi_prev in that case.  */\n \t\t  if (gsi_end_p (gsi))\n \t\t    {\n \t\t      gsi = gsi_last_bb (bb);\n-\t\t      if (gsi_end_p (gsi))\n-\t\t\tbreak;\n+\t\t      do_prev = false;\n \t\t    }\n \t\t}\n \t      continue;"}]}