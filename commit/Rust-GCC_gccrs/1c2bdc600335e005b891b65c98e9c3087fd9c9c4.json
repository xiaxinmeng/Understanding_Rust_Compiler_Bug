{"sha": "1c2bdc600335e005b891b65c98e9c3087fd9c9c4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWMyYmRjNjAwMzM1ZTAwNWI4OTFiNjVjOThlOWMzMDg3ZmQ5YzljNA==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-04-11T22:20:53Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-04-11T22:20:53Z"}, "message": "(compare define_split): Fix bugs in last addition.\n\nFrom-SVN: r7037", "tree": {"sha": "cf03d7624d344cc3f787a32651dda9161bd14cf8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cf03d7624d344cc3f787a32651dda9161bd14cf8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1c2bdc600335e005b891b65c98e9c3087fd9c9c4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1c2bdc600335e005b891b65c98e9c3087fd9c9c4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1c2bdc600335e005b891b65c98e9c3087fd9c9c4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1c2bdc600335e005b891b65c98e9c3087fd9c9c4/comments", "author": null, "committer": null, "parents": [{"sha": "a6e8021ecfebab427133d1f94d79561eb188652a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a6e8021ecfebab427133d1f94d79561eb188652a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a6e8021ecfebab427133d1f94d79561eb188652a"}], "stats": {"total": 17, "additions": 9, "deletions": 8}, "files": [{"sha": "f42cda674442d910f243f23e4df3c4c3b11e9d11", "filename": "gcc/config/alpha/alpha.md", "status": "modified", "additions": 9, "deletions": 8, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1c2bdc600335e005b891b65c98e9c3087fd9c9c4/gcc%2Fconfig%2Falpha%2Falpha.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1c2bdc600335e005b891b65c98e9c3087fd9c9c4/gcc%2Fconfig%2Falpha%2Falpha.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Falpha.md?ref=1c2bdc600335e005b891b65c98e9c3087fd9c9c4", "patch": "@@ -1,6 +1,6 @@\n-;;- Machine description for DEC Alpha for GNU C compiler\n-;;   Copyright (C) 1992, 1993, 1994 Free Software Foundation, Inc.\n-;;   Contributed by Richard Kenner (kenner@nyu.edu)\n+;; Machine description for DEC Alpha for GNU C compiler\n+;; Copyright (C) 1992, 1993, 1994 Free Software Foundation, Inc.\n+;; Contributed by Richard Kenner (kenner@vlsi1.ultra.nyu.edu)\n \n ;; This file is part of GNU CC.\n \n@@ -2233,7 +2233,7 @@\n \t\t\t operands[4], const0_rtx);\n }\")\n \n-;; We can convert such things as \"a > 0xffff\" to \"t = a & 0xffff; t != 0\".\n+;; We can convert such things as \"a > 0xffff\" to \"t = a & ~ 0xffff; t != 0\".\n ;; This eliminates one, and sometimes two, insns when the AND can be done\n ;; with a ZAP.\n (define_split\n@@ -2247,13 +2247,14 @@\n        || GET_CODE (operands[1]) == LEU\n        || ((GET_CODE (operands[1]) == GT || GET_CODE (operands[1]) == LE)\n \t   && extended_count (operands[2], DImode, 1) > 0))\"\n-  [(set (match_dup 4) (and:DI (match_dup 2) (match_dup 3)))\n-   (set (match_dup 0) (match_dup 5))]\n+  [(set (match_dup 4) (and:DI (match_dup 2) (match_dup 5)))\n+   (set (match_dup 0) (match_dup 6))]\n   \"\n {\n-  operands[5] = gen_rtx (((GET_CODE (operands[1]) == GTU\n+  operands[5] = GEN_INT (~ INTVAL (operands[3]));\n+  operands[6] = gen_rtx (((GET_CODE (operands[1]) == GTU\n \t\t\t   || GET_CODE (operands[1]) == GE)\n-\t\t\t  ? NE : LE),\n+\t\t\t  ? NE : EQ),\n \t\t\t DImode, operands[4], const0_rtx);\n }\")\n \f"}]}