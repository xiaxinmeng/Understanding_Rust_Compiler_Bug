{"sha": "55ed891fa1c90f2051f000b88c33020719cd6311", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTVlZDg5MWZhMWM5MGYyMDUxZjAwMGI4OGMzMzAyMDcxOWNkNjMxMQ==", "commit": {"author": {"name": "Paul Thomas", "email": "pault@gcc.gnu.org", "date": "2007-07-27T09:03:41Z"}, "committer": {"name": "Paul Thomas", "email": "pault@gcc.gnu.org", "date": "2007-07-27T09:03:41Z"}, "message": "re PR fortran/32903 (Default initializer and intent(OUT): default initializer not used)\n\n2007-07-27  Paul Thomas  <pault@gcc.gnu.org>\n\n\tPR fortran/32903\n\t* trans-decl.c (gfc_trans_deferred_vars): Set intent(out)\n\tderived types as referenced, if they have the the default\n\tinitializer set.\n\nFrom-SVN: r126974", "tree": {"sha": "e597a6323aaa378e401b7a239c210d0d88beae37", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e597a6323aaa378e401b7a239c210d0d88beae37"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/55ed891fa1c90f2051f000b88c33020719cd6311", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/55ed891fa1c90f2051f000b88c33020719cd6311", "html_url": "https://github.com/Rust-GCC/gccrs/commit/55ed891fa1c90f2051f000b88c33020719cd6311", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/55ed891fa1c90f2051f000b88c33020719cd6311/comments", "author": null, "committer": null, "parents": [{"sha": "d426d208b69c374caab83267d7227fd4ea6dad1c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d426d208b69c374caab83267d7227fd4ea6dad1c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d426d208b69c374caab83267d7227fd4ea6dad1c"}], "stats": {"total": 13, "additions": 10, "deletions": 3}, "files": [{"sha": "b0089ef1d78dd096721ba0e8fdd6c2d5ee3e96f3", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/55ed891fa1c90f2051f000b88c33020719cd6311/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/55ed891fa1c90f2051f000b88c33020719cd6311/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=55ed891fa1c90f2051f000b88c33020719cd6311", "patch": "@@ -1,10 +1,17 @@\n+2007-07-27  Paul Thomas  <pault@gcc.gnu.org>\n+\n+\tPR fortran/32903\n+\t* trans-decl.c (gfc_trans_deferred_vars): Set intent(out)\n+\tderived types as referenced, if they have the the default\n+\tinitializer set.\n+\n 2007-07-25  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n \t* gfortran.h (generate_isocbinding_symbol): Constify.\n \t* symbol.c (gen_special_c_interop_ptr, gen_cptr_param,\n \tgenerate_isocbinding_symbol): Likewise.\n \n-2007-07-24 Paul Thomas <pault@gcc.gnu.org>\n+2007-07-24  Paul Thomas  <pault@gcc.gnu.org>\n \n \tPR fortran/31205\n \tPR fortran/32842"}, {"sha": "8a3b96814d897537091a5c7a57d72d19d2950142", "filename": "gcc/fortran/trans-decl.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/55ed891fa1c90f2051f000b88c33020719cd6311/gcc%2Ffortran%2Ftrans-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/55ed891fa1c90f2051f000b88c33020719cd6311/gcc%2Ffortran%2Ftrans-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-decl.c?ref=55ed891fa1c90f2051f000b88c33020719cd6311", "patch": "@@ -2735,15 +2735,15 @@ gfc_trans_deferred_vars (gfc_symbol * proc_sym, tree fnbody)\n \n       /* If an INTENT(OUT) dummy of derived type has a default\n \t initializer, it must be initialized here.  */\n-      if (f->sym && f->sym->attr.referenced\n-\t    && f->sym->attr.intent == INTENT_OUT\n+      if (f->sym && f->sym->attr.intent == INTENT_OUT\n \t    && f->sym->ts.type == BT_DERIVED\n \t    && !f->sym->ts.derived->attr.alloc_comp\n \t    && f->sym->value)\n \t{\n \t  gfc_expr *tmpe;\n \t  tree tmp, present;\n \t  gcc_assert (!f->sym->attr.allocatable);\n+\t  gfc_set_sym_referenced (f->sym);\n \t  tmpe = gfc_lval_expr_from_sym (f->sym);\n \t  tmp = gfc_trans_assignment (tmpe, f->sym->value, false);\n "}]}