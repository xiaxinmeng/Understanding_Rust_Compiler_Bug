{"sha": "911c8df0a30913ba6c84b8a65cb338e9c54efeee", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTExYzhkZjBhMzA5MTNiYTZjODRiOGE2NWNiMzM4ZTljNTRlZmVlZQ==", "commit": {"author": {"name": "Michael Meissner", "email": "meissner@linux.ibm.com", "date": "2019-07-03T17:42:09Z"}, "committer": {"name": "Michael Meissner", "email": "meissner@gcc.gnu.org", "date": "2019-07-03T17:42:09Z"}, "message": "altivec.md (altivec_mov<mode>, [...]): Change the RTL attribute \"length\" from \"4\" to \"*\" to allow the length attribute...\n\n2019-07-03  Michael Meissner  <meissner@linux.ibm.com>\n\n\t* config/rs6000/altivec.md (altivec_mov<mode>, VM2 iterator):\n\tChange the RTL attribute \"length\" from \"4\" to \"*\" to allow the\n\tlength attribute to be adjusted automatically for prefixed load,\n\tstore, and add immediate instructions.\n\t* config/rs6000/rs6000.md (extendhi<mode>2, EXTHI iterator):\n\tLikewise.\n\t(extendsi<mode>2, EXTSI iterator): Likewise.\n\t(movsi_internal1): Likewise.\n\t(movsi_from_sf): Likewise.\n\t(movdi_from_sf_zero_ext): Likewise.\n\t(mov<mode>_internal): Likewise.\n\t(movcc_internal1, QHI iterator): Likewise.\n\t(mov<mode>_softfloat, FMOVE32 iterator): Likewise.\n\t(movsf_from_si): Likewise.\n\t(mov<mode>_hardfloat32, FMOVE64 iterator): Likewise.\n\t(mov<mode>_softfloat64, FMOVE64 iterator): Likewise.\n\t(mov<mode>, FMOVE128 iterator): Likewise.\n\t(movdi_internal64): Likewise.\n\t* config/rs6000/vsx.md (vsx_le_permute_<mode>, VSX_TI iterator):\n\tLikewise.\n\t(vsx_le_undo_permute_<mode>, VSX_TI iterator): Likewise.\n\t(vsx_mov<mode>_64bit, VSX_M iterator): Likewise.\n\t(vsx_mov<mode>_32bit, VSX_M iterator): Likewise.\n\t(vsx_splat_v4sf): Likewise.\n\nFrom-SVN: r273013", "tree": {"sha": "ef66f50fa6ac0ce56655b704e2a3506682740acd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ef66f50fa6ac0ce56655b704e2a3506682740acd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/911c8df0a30913ba6c84b8a65cb338e9c54efeee", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/911c8df0a30913ba6c84b8a65cb338e9c54efeee", "html_url": "https://github.com/Rust-GCC/gccrs/commit/911c8df0a30913ba6c84b8a65cb338e9c54efeee", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/911c8df0a30913ba6c84b8a65cb338e9c54efeee/comments", "author": null, "committer": null, "parents": [{"sha": "e5833b56497c5cf04034ce68d6b9c73c2600158b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e5833b56497c5cf04034ce68d6b9c73c2600158b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e5833b56497c5cf04034ce68d6b9c73c2600158b"}], "stats": {"total": 113, "additions": 70, "deletions": 43}, "files": [{"sha": "e40790433935686a5e5cdf20aada55c19087afaa", "filename": "gcc/ChangeLog", "status": "modified", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/911c8df0a30913ba6c84b8a65cb338e9c54efeee/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/911c8df0a30913ba6c84b8a65cb338e9c54efeee/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=911c8df0a30913ba6c84b8a65cb338e9c54efeee", "patch": "@@ -1,3 +1,30 @@\n+2019-07-03  Michael Meissner  <meissner@linux.ibm.com>\n+\n+\t* config/rs6000/altivec.md (altivec_mov<mode>, VM2 iterator):\n+\tChange the RTL attribute \"length\" from \"4\" to \"*\" to allow the\n+\tlength attribute to be adjusted automatically for prefixed load,\n+\tstore, and add immediate instructions.\n+\t* config/rs6000/rs6000.md (extendhi<mode>2, EXTHI iterator):\n+\tLikewise.\n+\t(extendsi<mode>2, EXTSI iterator): Likewise.\n+\t(movsi_internal1): Likewise.\n+\t(movsi_from_sf): Likewise.\n+\t(movdi_from_sf_zero_ext): Likewise.\n+\t(mov<mode>_internal): Likewise.\n+\t(movcc_internal1, QHI iterator): Likewise.\n+\t(mov<mode>_softfloat, FMOVE32 iterator): Likewise.\n+\t(movsf_from_si): Likewise.\n+\t(mov<mode>_hardfloat32, FMOVE64 iterator): Likewise.\n+\t(mov<mode>_softfloat64, FMOVE64 iterator): Likewise.\n+\t(mov<mode>, FMOVE128 iterator): Likewise.\n+\t(movdi_internal64): Likewise.\n+\t* config/rs6000/vsx.md (vsx_le_permute_<mode>, VSX_TI iterator):\n+\tLikewise.\n+\t(vsx_le_undo_permute_<mode>, VSX_TI iterator): Likewise.\n+\t(vsx_mov<mode>_64bit, VSX_M iterator): Likewise.\n+\t(vsx_mov<mode>_32bit, VSX_M iterator): Likewise.\n+\t(vsx_splat_v4sf): Likewise.\n+\n 2019-07-03  Mark Wielaard  <mark@klomp.org>\n \n \tPR debug/90981"}, {"sha": "3a8cd769421f89899f4c9052178c0da632a86157", "filename": "gcc/config/rs6000/altivec.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/911c8df0a30913ba6c84b8a65cb338e9c54efeee/gcc%2Fconfig%2Frs6000%2Faltivec.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/911c8df0a30913ba6c84b8a65cb338e9c54efeee/gcc%2Fconfig%2Frs6000%2Faltivec.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Faltivec.md?ref=911c8df0a30913ba6c84b8a65cb338e9c54efeee", "patch": "@@ -256,7 +256,7 @@\n    * return output_vec_const_move (operands);\n    #\"\n   [(set_attr \"type\" \"vecstore,vecload,veclogical,store,load,*,veclogical,*,*\")\n-   (set_attr \"length\" \"4,4,4,20,20,20,4,8,32\")])\n+   (set_attr \"length\" \"*,*,*,20,20,20,*,8,32\")])\n \n ;; Unlike other altivec moves, allow the GPRs, since a normal use of TImode\n ;; is for unions.  However for plain data movement, slightly favor the vector"}, {"sha": "503f91aacf045cab4fa48c3158a055e58bb44f6b", "filename": "gcc/config/rs6000/rs6000.md", "status": "modified", "additions": 34, "deletions": 34, "changes": 68, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/911c8df0a30913ba6c84b8a65cb338e9c54efeee/gcc%2Fconfig%2Frs6000%2Frs6000.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/911c8df0a30913ba6c84b8a65cb338e9c54efeee/gcc%2Fconfig%2Frs6000%2Frs6000.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.md?ref=911c8df0a30913ba6c84b8a65cb338e9c54efeee", "patch": "@@ -965,7 +965,7 @@\n    vextsh2d %0,%1\"\n   [(set_attr \"type\" \"load,exts,fpload,vecperm\")\n    (set_attr \"sign_extend\" \"yes\")\n-   (set_attr \"length\" \"4,4,8,4\")\n+   (set_attr \"length\" \"*,*,8,*\")\n    (set_attr \"isa\" \"*,*,p9v,p9v\")])\n \n (define_split\n@@ -1040,7 +1040,7 @@\n    #\"\n   [(set_attr \"type\" \"load,exts,fpload,fpload,mffgpr,vecexts,vecperm,mftgpr\")\n    (set_attr \"sign_extend\" \"yes\")\n-   (set_attr \"length\" \"4,4,4,4,4,4,8,8\")\n+   (set_attr \"length\" \"*,*,*,*,*,*,8,8\")\n    (set_attr \"isa\" \"*,*,p6,p8v,p8v,p9v,p8v,p8v\")])\n \n (define_split\n@@ -6909,11 +6909,11 @@\n \t\t veclogical, veclogical,  vecsimple,   mffgpr,      mftgpr,\n \t\t *,          *,           *\")\n    (set_attr \"length\"\n-\t\t\"4,          4,           4,           4,           4,\n-\t\t 4,          4,           4,           4,           4,\n-\t\t 8,          4,           4,           4,           4,\n-\t\t 4,          4,           8,           4,           4,\n-\t\t 4,          4,           4\")\n+\t\t\"*,          *,           *,           *,           *,\n+\t\t *,          *,           *,           *,           *,\n+\t\t 8,          *,           *,           *,           *,\n+\t\t *,          *,           8,           *,           *,\n+\t\t *,          *,           *\")\n    (set_attr \"isa\"\n \t\t\"*,          *,           *,           p8v,         p8v,\n \t\t *,          p8v,         p8v,         *,           *,\n@@ -6989,9 +6989,9 @@\n \t\t fpstore,    fpstore,     fpstore,     mftgpr,   fp,\n \t\t mffgpr\")\n    (set_attr \"length\"\n-\t\t\"4,          4,           4,           4,        4,\n-\t\t 4,          4,           4,           8,        4,\n-\t\t 4\")\n+\t\t\"*,          *,           *,           *,        *,\n+\t\t *,          *,           *,           8,        *,\n+\t\t *\")\n    (set_attr \"isa\"\n \t\t\"*,          *,           p8v,         p8v,      *,\n \t\t *,          p9v,         p8v,         p8v,      p8v,\n@@ -7043,8 +7043,8 @@\n \t\t\"*,          load,        fpload,      fpload,   two,\n \t\t two,        mffgpr\")\n    (set_attr \"length\"\n-\t\t\"4,          4,           4,           4,        8,\n-\t\t 8,          4\")\n+\t\t\"*,          *,           *,           *,        8,\n+\t\t 8,          *\")\n    (set_attr \"isa\"\n \t\t\"*,          *,           p8v,         p8v,      p8v,\n \t\t p9v,        p8v\")])\n@@ -7172,9 +7172,9 @@\n \t\t vecsimple, vecperm,   vecperm,   vecperm,   vecperm,   mftgpr,\n \t\t mffgpr,    mfjmpr,    mtjmpr,    *\")\n    (set_attr \"length\"\n-\t\t\"4,         4,         4,         4,         4,         4,\n-\t\t 4,         4,         4,         4,         8,         4,\n-\t\t 4,         4,         4,         4\")\n+\t\t\"*,         *,         *,         *,         *,         *,\n+\t\t *,         *,         *,         *,         8,         *,\n+\t\t *,         *,         *,         *\")\n    (set_attr \"isa\"\n \t\t\"*,         *,         p9v,       *,         p9v,       *,\n \t\t p9v,       p9v,       p9v,       p9v,       p9v,       p9v,\n@@ -7225,7 +7225,7 @@\n       (const_string \"mtjmpr\")\n       (const_string \"load\")\n       (const_string \"store\")])\n-   (set_attr \"length\" \"4,4,12,4,4,8,4,4,4,4,4,4\")])\n+   (set_attr \"length\" \"*,*,12,*,*,8,*,*,*,*,*,*\")])\n \f\n ;; For floating-point, we normally deal with the floating-point registers\n ;; unless -msoft-float is used.  The sole exception is that parameter passing\n@@ -7376,11 +7376,11 @@\n    nop\"\n   [(set_attr \"type\"\n \t\"*,          mtjmpr,    mfjmpr,    load,      store,     *,\n-         *,          *,         *,         *\")\n+\t *,          *,         *,         *\")\n \n    (set_attr \"length\"\n-\t\"4,          4,         4,         4,         4,         4,\n-         4,          4,         8,         4\")])\n+\t\"*,          *,         *,         *,         *,         *,\n+         *,          *,         8,         *\")])\n \n ;; Like movsf, but adjust a SI value to be used in a SF context, i.e.\n ;; (set (reg:SF ...) (subreg:SF (reg:SI ...) 0))\n@@ -7442,8 +7442,8 @@\n   DONE;\n }\n   [(set_attr \"length\"\n-\t    \"4,          4,         4,         4,         4,         4,\n-\t     4,          12,        4,         4\")\n+\t    \"*,          *,         *,         *,         *,         *,\n+\t     *,          12,        *,         *\")\n    (set_attr \"type\"\n \t    \"load,       fpload,    fpload,    fpload,    store,     fpstore,\n \t     fpstore,    vecfloat,  mffgpr,    *\")\n@@ -7580,8 +7580,8 @@\n              store,       load,       two\")\n    (set_attr \"size\" \"64\")\n    (set_attr \"length\"\n-            \"4,           4,          4,          4,          4,\n-             4,           4,          4,          4,          8,\n+            \"*,           *,          *,          *,          *,\n+             *,           *,          *,          *,          8,\n              8,           8,          8\")\n    (set_attr \"isa\"\n             \"*,           *,          *,          p9v,        p9v,\n@@ -7690,8 +7690,8 @@\n              *,       *,      *\")\n \n    (set_attr \"length\"\n-            \"4,       4,      4,      4,      4,      8,\n-             12,      16,     4\")])\n+            \"*,       *,      *,      *,      *,      8,\n+             12,      16,     *\")])\n \f\n (define_expand \"mov<mode>\"\n   [(set (match_operand:FMOVE128 0 \"general_operand\")\n@@ -8707,10 +8707,10 @@\n           vecsimple\")\n    (set_attr \"size\" \"64\")\n    (set_attr \"length\"\n-         \"8,         8,         8,         4,         4,         4,\n-          16,        4,         4,         4,         4,         4,\n-          4,         4,         4,         4,         4,         8,\n-          4\")\n+         \"8,         8,         8,         *,         *,         *,\n+          16,        *,         *,         *,         *,         *,\n+          *,         *,         *,         *,         *,         8,\n+          *\")\n    (set_attr \"isa\"\n          \"*,         *,         *,         *,         *,         *,\n           *,         p9v,       p7v,       p9v,       p7v,       *,\n@@ -8800,11 +8800,11 @@\n                 mftgpr,    mffgpr\")\n    (set_attr \"size\" \"64\")\n    (set_attr \"length\"\n-               \"4,         4,         4,         4,         4,          20,\n-                4,         4,         4,         4,         4,          4,\n-                4,         4,         4,         4,         4,          4,\n-                4,         8,         4,         4,         4,          4,\n-                4,         4\")\n+               \"*,         *,         *,         *,         *,          20,\n+                *,         *,         *,         *,         *,          *,\n+                *,         *,         *,         *,         *,          *,\n+                *,         8,         *,         *,         *,          *,\n+                *,         *\")\n    (set_attr \"isa\"\n                \"*,         *,         *,         *,         *,          *,\n                 *,         *,         *,         p9v,       p7v,        p9v,"}, {"sha": "c33b45a334f745c89657ef735b50042026b779ec", "filename": "gcc/config/rs6000/vsx.md", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/911c8df0a30913ba6c84b8a65cb338e9c54efeee/gcc%2Fconfig%2Frs6000%2Fvsx.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/911c8df0a30913ba6c84b8a65cb338e9c54efeee/gcc%2Fconfig%2Frs6000%2Fvsx.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fvsx.md?ref=911c8df0a30913ba6c84b8a65cb338e9c54efeee", "patch": "@@ -923,7 +923,7 @@\n    mr %0,%L1\\;mr %L0,%1\n    ld%U1%X1 %0,%L1\\;ld%U1%X1 %L0,%1\n    std%U0%X0 %L1,%0\\;std%U0%X0 %1,%L0\"\n-  [(set_attr \"length\" \"4,4,4,8,8,8\")\n+  [(set_attr \"length\" \"*,*,*,8,8,8\")\n    (set_attr \"type\" \"vecperm,vecload,vecstore,*,load,store\")])\n \n (define_insn_and_split \"*vsx_le_undo_permute_<mode>\"\n@@ -1150,9 +1150,9 @@\n                 store,     load,      store,     *,         vecsimple, vecsimple,\n                 vecsimple, *,         *,         vecstore,  vecload\")\n    (set_attr \"length\"\n-               \"4,         4,         4,         8,         4,         8,\n-                8,         8,         8,         8,         4,         4,\n-                4,         20,        8,         4,         4\")\n+               \"*,         *,         *,         8,         *,         8,\n+                8,         8,         8,         8,         *,         *,\n+                *,         20,        8,         *,         *\")\n    (set_attr \"isa\"\n                \"<VSisa>,   <VSisa>,   <VSisa>,   *,         *,         *,\n                 *,         *,         *,         *,         p9v,       *,\n@@ -1183,9 +1183,9 @@\n                 vecsimple, vecsimple, vecsimple, *,         *,\n                 vecstore,  vecload\")\n    (set_attr \"length\"\n-               \"4,         4,         4,         16,        16,        16,\n-                4,         4,         4,         20,        16,\n-                4,         4\")\n+               \"*,         *,         *,         16,        16,        16,\n+                *,         *,         *,         20,        16,\n+                *,         *\")\n    (set_attr \"isa\"\n                \"<VSisa>,   <VSisa>,   <VSisa>,   *,         *,         *,\n                 p9v,       *,         <VSisa>,   *,         *,\n@@ -4112,7 +4112,7 @@\n \t\t      (const_int 0)] UNSPEC_VSX_XXSPLTW))]\n   \"\"\n   [(set_attr \"type\" \"vecload,vecperm,mftgpr\")\n-   (set_attr \"length\" \"4,8,4\")\n+   (set_attr \"length\" \"*,8,*\")\n    (set_attr \"isa\" \"*,p8v,*\")])\n \n ;; V4SF/V4SI splat from a vector element"}]}