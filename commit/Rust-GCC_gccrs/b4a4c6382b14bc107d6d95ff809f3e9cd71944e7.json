{"sha": "b4a4c6382b14bc107d6d95ff809f3e9cd71944e7", "node_id": "C_kwDOANBUbNoAKGI0YTRjNjM4MmIxNGJjMTA3ZDZkOTVmZjgwOWYzZTljZDcxOTQ0ZTc", "commit": {"author": {"name": "Aldy Hernandez", "email": "aldyh@redhat.com", "date": "2022-10-14T14:49:33Z"}, "committer": {"name": "Aldy Hernandez", "email": "aldyh@redhat.com", "date": "2022-10-14T16:43:50Z"}, "message": "Implement distinction between HONOR_SIGNED_ZEROS and MODE_HAS_SIGNED_ZEROS.\n\ngcc/ChangeLog:\n\n\t* value-range.cc (frange::set): Implement distinction between\n\tHONOR_SIGNED_ZEROS and MODE_HAS_SIGNED_ZEROS.", "tree": {"sha": "0e85663c46b4bbd6c09d1ead0d68bda2fbbc0b18", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0e85663c46b4bbd6c09d1ead0d68bda2fbbc0b18"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b4a4c6382b14bc107d6d95ff809f3e9cd71944e7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b4a4c6382b14bc107d6d95ff809f3e9cd71944e7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b4a4c6382b14bc107d6d95ff809f3e9cd71944e7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b4a4c6382b14bc107d6d95ff809f3e9cd71944e7/comments", "author": {"login": "aldyh", "id": 12937877, "node_id": "MDQ6VXNlcjEyOTM3ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/12937877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aldyh", "html_url": "https://github.com/aldyh", "followers_url": "https://api.github.com/users/aldyh/followers", "following_url": "https://api.github.com/users/aldyh/following{/other_user}", "gists_url": "https://api.github.com/users/aldyh/gists{/gist_id}", "starred_url": "https://api.github.com/users/aldyh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aldyh/subscriptions", "organizations_url": "https://api.github.com/users/aldyh/orgs", "repos_url": "https://api.github.com/users/aldyh/repos", "events_url": "https://api.github.com/users/aldyh/events{/privacy}", "received_events_url": "https://api.github.com/users/aldyh/received_events", "type": "User", "site_admin": false}, "committer": {"login": "aldyh", "id": 12937877, "node_id": "MDQ6VXNlcjEyOTM3ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/12937877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aldyh", "html_url": "https://github.com/aldyh", "followers_url": "https://api.github.com/users/aldyh/followers", "following_url": "https://api.github.com/users/aldyh/following{/other_user}", "gists_url": "https://api.github.com/users/aldyh/gists{/gist_id}", "starred_url": "https://api.github.com/users/aldyh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aldyh/subscriptions", "organizations_url": "https://api.github.com/users/aldyh/orgs", "repos_url": "https://api.github.com/users/aldyh/repos", "events_url": "https://api.github.com/users/aldyh/events{/privacy}", "received_events_url": "https://api.github.com/users/aldyh/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8efc38347a7444dde3fb173f0f2c59a60b7db53d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8efc38347a7444dde3fb173f0f2c59a60b7db53d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8efc38347a7444dde3fb173f0f2c59a60b7db53d"}], "stats": {"total": 9, "additions": 8, "deletions": 1}, "files": [{"sha": "4794d2386a80e5f68737bcfc148e461b3927f74f", "filename": "gcc/value-range.cc", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4a4c6382b14bc107d6d95ff809f3e9cd71944e7/gcc%2Fvalue-range.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4a4c6382b14bc107d6d95ff809f3e9cd71944e7/gcc%2Fvalue-range.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvalue-range.cc?ref=b4a4c6382b14bc107d6d95ff809f3e9cd71944e7", "patch": "@@ -324,13 +324,20 @@ frange::set (tree type,\n       m_neg_nan = false;\n     }\n \n-  if (!HONOR_SIGNED_ZEROS (m_type))\n+  if (!MODE_HAS_SIGNED_ZEROS (TYPE_MODE (m_type)))\n     {\n       if (real_iszero (&m_min, 1))\n \tm_min.sign = 0;\n       if (real_iszero (&m_max, 1))\n \tm_max.sign = 0;\n     }\n+  else if (!HONOR_SIGNED_ZEROS (m_type))\n+    {\n+      if (real_iszero (&m_max, 1))\n+\tm_max.sign = 0;\n+      if (real_iszero (&m_min, 0))\n+\tm_min.sign = 1;\n+    }\n \n   // For -ffinite-math-only we can drop ranges outside the\n   // representable numbers to min/max for the type."}]}