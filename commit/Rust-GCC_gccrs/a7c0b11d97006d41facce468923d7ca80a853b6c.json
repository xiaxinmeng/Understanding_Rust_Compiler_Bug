{"sha": "a7c0b11d97006d41facce468923d7ca80a853b6c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTdjMGIxMWQ5NzAwNmQ0MWZhY2NlNDY4OTIzZDdjYTgwYTg1M2I2Yw==", "commit": {"author": {"name": "Janus Weil", "email": "janus@gcc.gnu.org", "date": "2009-07-04T12:28:43Z"}, "committer": {"name": "Janus Weil", "email": "janus@gcc.gnu.org", "date": "2009-07-04T12:28:43Z"}, "message": "re PR fortran/40593 (Proc-pointer returning function as actual argument)\n\n2009-07-04  Janus Weil  <janus@gcc.gnu.org>\n\n\tPR fortran/40593\n\t* interface.c (compare_actual_formal): Take care of proc-pointer-valued\n\tfunctions as actual arguments.\n\t* trans-expr.c (gfc_conv_procedure_call): Ditto.\n\t* resolve.c (resolve_specific_f0): Use the correct ts.\n\n\n2009-07-04  Janus Weil  <janus@gcc.gnu.org>\n\n\tPR fortran/40593\n\t* gfortran.dg/proc_ptr_result_6.f90: New.\n\nFrom-SVN: r149227", "tree": {"sha": "c43ddb5d7d47d313a9915996d986aa2ca0533755", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c43ddb5d7d47d313a9915996d986aa2ca0533755"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a7c0b11d97006d41facce468923d7ca80a853b6c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a7c0b11d97006d41facce468923d7ca80a853b6c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a7c0b11d97006d41facce468923d7ca80a853b6c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a7c0b11d97006d41facce468923d7ca80a853b6c/comments", "author": {"login": "janusw", "id": 484108, "node_id": "MDQ6VXNlcjQ4NDEwOA==", "avatar_url": "https://avatars.githubusercontent.com/u/484108?v=4", "gravatar_id": "", "url": "https://api.github.com/users/janusw", "html_url": "https://github.com/janusw", "followers_url": "https://api.github.com/users/janusw/followers", "following_url": "https://api.github.com/users/janusw/following{/other_user}", "gists_url": "https://api.github.com/users/janusw/gists{/gist_id}", "starred_url": "https://api.github.com/users/janusw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/janusw/subscriptions", "organizations_url": "https://api.github.com/users/janusw/orgs", "repos_url": "https://api.github.com/users/janusw/repos", "events_url": "https://api.github.com/users/janusw/events{/privacy}", "received_events_url": "https://api.github.com/users/janusw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "janusw", "id": 484108, "node_id": "MDQ6VXNlcjQ4NDEwOA==", "avatar_url": "https://avatars.githubusercontent.com/u/484108?v=4", "gravatar_id": "", "url": "https://api.github.com/users/janusw", "html_url": "https://github.com/janusw", "followers_url": "https://api.github.com/users/janusw/followers", "following_url": "https://api.github.com/users/janusw/following{/other_user}", "gists_url": "https://api.github.com/users/janusw/gists{/gist_id}", "starred_url": "https://api.github.com/users/janusw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/janusw/subscriptions", "organizations_url": "https://api.github.com/users/janusw/orgs", "repos_url": "https://api.github.com/users/janusw/repos", "events_url": "https://api.github.com/users/janusw/events{/privacy}", "received_events_url": "https://api.github.com/users/janusw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8d74e57440d6438928d581a52391e0cc302948e7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8d74e57440d6438928d581a52391e0cc302948e7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8d74e57440d6438928d581a52391e0cc302948e7"}], "stats": {"total": 83, "additions": 81, "deletions": 2}, "files": [{"sha": "c1093455c71e5afc2066d2cdfb7267f990854170", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7c0b11d97006d41facce468923d7ca80a853b6c/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7c0b11d97006d41facce468923d7ca80a853b6c/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=a7c0b11d97006d41facce468923d7ca80a853b6c", "patch": "@@ -1,3 +1,11 @@\n+2009-07-04  Janus Weil  <janus@gcc.gnu.org>\n+\n+\tPR fortran/40593\n+\t* interface.c (compare_actual_formal): Take care of proc-pointer-valued\n+\tfunctions as actual arguments.\n+\t* trans-expr.c (gfc_conv_procedure_call): Ditto.\n+\t* resolve.c (resolve_specific_f0): Use the correct ts.\n+\n 2009-07-02  Michael Matz  <matz@suse.de>\n \n \tPR fortran/32131"}, {"sha": "ca500f582d9863bda39690bd2797953d93af13f3", "filename": "gcc/fortran/interface.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7c0b11d97006d41facce468923d7ca80a853b6c/gcc%2Ffortran%2Finterface.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7c0b11d97006d41facce468923d7ca80a853b6c/gcc%2Ffortran%2Finterface.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Finterface.c?ref=a7c0b11d97006d41facce468923d7ca80a853b6c", "patch": "@@ -1911,7 +1911,10 @@ compare_actual_formal (gfc_actual_arglist **ap, gfc_formal_arglist *formal,\n       /* Satisfy 12.4.1.3 by ensuring that a procedure pointer actual argument\n \t is provided for a procedure pointer formal argument.  */\n       if (f->sym->attr.proc_pointer\n-\t  && !(a->expr->symtree->n.sym->attr.proc_pointer\n+\t  && !((a->expr->expr_type == EXPR_VARIABLE\n+\t\t&& a->expr->symtree->n.sym->attr.proc_pointer)\n+\t       || (a->expr->expr_type == EXPR_FUNCTION\n+\t\t   && a->expr->symtree->n.sym->result->attr.proc_pointer)\n \t       || is_proc_ptr_comp (a->expr, NULL)))\n \t{\n \t  if (where)"}, {"sha": "c1069489394b83adb5341895df3504e83c874937", "filename": "gcc/fortran/resolve.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7c0b11d97006d41facce468923d7ca80a853b6c/gcc%2Ffortran%2Fresolve.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7c0b11d97006d41facce468923d7ca80a853b6c/gcc%2Ffortran%2Fresolve.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fresolve.c?ref=a7c0b11d97006d41facce468923d7ca80a853b6c", "patch": "@@ -1828,7 +1828,10 @@ resolve_specific_f0 (gfc_symbol *sym, gfc_expr *expr)\n found:\n   gfc_procedure_use (sym, &expr->value.function.actual, &expr->where);\n \n-  expr->ts = sym->ts;\n+  if (sym->result)\n+    expr->ts = sym->result->ts;\n+  else\n+    expr->ts = sym->ts;\n   expr->value.function.name = sym->name;\n   expr->value.function.esym = sym;\n   if (sym->as != NULL)"}, {"sha": "e872f22f9003e183aa53ba0ad52bf4842644c8c3", "filename": "gcc/fortran/trans-expr.c", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7c0b11d97006d41facce468923d7ca80a853b6c/gcc%2Ffortran%2Ftrans-expr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7c0b11d97006d41facce468923d7ca80a853b6c/gcc%2Ffortran%2Ftrans-expr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-expr.c?ref=a7c0b11d97006d41facce468923d7ca80a853b6c", "patch": "@@ -2640,6 +2640,15 @@ gfc_conv_procedure_call (gfc_se * se, gfc_symbol * sym,\n \t\t  gfc_conv_expr (&parmse, e);\n \t\t  parmse.expr = gfc_build_addr_expr (NULL_TREE, parmse.expr);\n \t\t}\n+\t      else if (e->expr_type == EXPR_FUNCTION\n+\t\t       && e->symtree->n.sym->result\n+\t\t       && e->symtree->n.sym->result->attr.proc_pointer)\n+\t\t{\n+\t\t  /* Functions returning procedure pointers.  */\n+\t\t  gfc_conv_expr (&parmse, e);\n+\t\t  if (fsym && fsym->attr.proc_pointer)\n+\t\t    parmse.expr = gfc_build_addr_expr (NULL_TREE, parmse.expr);\n+\t\t}\n \t      else\n \t\t{\n \t\t  gfc_conv_expr_reference (&parmse, e);"}, {"sha": "fdc685500c0efe03805ace0ecc145e302c30d62d", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7c0b11d97006d41facce468923d7ca80a853b6c/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7c0b11d97006d41facce468923d7ca80a853b6c/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=a7c0b11d97006d41facce468923d7ca80a853b6c", "patch": "@@ -1,3 +1,8 @@\n+2009-07-04  Janus Weil  <janus@gcc.gnu.org>\n+\n+\tPR fortran/40593\n+\t* gfortran.dg/proc_ptr_result_6.f90: New.\n+\n 2009-07-04  Francois-Xavier Coudert  <fxcoudert@gcc.gnu.org>\n \n \t* gcc.dg/framework-2.c: Adjust testcase to pass."}, {"sha": "c9e1a8b067a08ba73a5c2e7abbd169b586fe56c3", "filename": "gcc/testsuite/gfortran.dg/proc_ptr_result_6.f90", "status": "added", "additions": 51, "deletions": 0, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7c0b11d97006d41facce468923d7ca80a853b6c/gcc%2Ftestsuite%2Fgfortran.dg%2Fproc_ptr_result_6.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7c0b11d97006d41facce468923d7ca80a853b6c/gcc%2Ftestsuite%2Fgfortran.dg%2Fproc_ptr_result_6.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fproc_ptr_result_6.f90?ref=a7c0b11d97006d41facce468923d7ca80a853b6c", "patch": "@@ -0,0 +1,51 @@\n+! { dg-do run }\n+!\n+! PR 40593: Proc-pointer returning function as actual argument\n+!\n+! Original test case by Tobias Burnus <burnus@gcc.gnu.org>\n+! Modified by Janus Weil\n+\n+module m\n+contains\n+  subroutine sub(a)\n+    integer :: a\n+    a = 42\n+  end subroutine\n+  integer function func()\n+    func = 42\n+  end function\n+end module m\n+\n+program test\n+  use m\n+  implicit none\n+  call caller1(getPtr1())\n+  call caller2(getPtr2())\n+  call caller3(getPtr2())\n+contains\n+  subroutine caller1(s)\n+    procedure(sub) :: s\n+    integer :: b\n+    call s(b)\n+    if (b /= 42)  call abort()\n+  end subroutine\n+  subroutine caller2(f)\n+    procedure(integer) :: f\n+    if (f() /= 42)  call abort()\n+  end subroutine\n+  subroutine caller3(f)\n+    procedure(func),pointer :: f\n+    if (f() /= 42) call abort()\n+  end subroutine\n+  function getPtr1()\n+    procedure(sub), pointer :: getPtr1\n+    getPtr1 => sub\n+  end function\n+  function getPtr2()\n+    procedure(func), pointer :: getPtr2\n+    getPtr2 => func\n+  end function\n+end program test\n+\n+! { dg-final { cleanup-modules \"m\" } }\n+"}]}