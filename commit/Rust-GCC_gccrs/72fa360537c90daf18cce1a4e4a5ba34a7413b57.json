{"sha": "72fa360537c90daf18cce1a4e4a5ba34a7413b57", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzJmYTM2MDUzN2M5MGRhZjE4Y2NlMWE0ZTRhNWJhMzRhNzQxM2I1Nw==", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2009-06-04T08:32:52Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2009-06-04T08:32:52Z"}, "message": "i386.h (X86_64_MS_REGPARM_MAX): Rename from X64_REGPARM_MAX.\n\n\t* config/i386/i386.h (X86_64_MS_REGPARM_MAX): Rename from\n\tX64_REGPARM_MAX.\n\t(REGPARM_MAX): Use X86_64_MS_REGPARM_MAX.\n\t(X86_64_MS_SSE_REGPARM_MAX): Rename from X64_SSE_REGPARM_MAX.\n\t(SSE_REGPARM_MAX): Use X86_64_MS_SSE_REGPARM_MAX.\n\t* config/i386/i386.c: Use X86_64_MS_REGPARM_MAX instead of\n\tX64_REGPARM_MAX.  Use X86_64_MS_SSE_REGPARM_MAX instead of\n\tX64_SSE_REGPARM_MAX.\n\t* config/i386/i386.md: Use X86_64_MS_SSE_REGPARM_MAX instead of\n\tX64_SSE_REGPARM_MAX.\n\nFrom-SVN: r148163", "tree": {"sha": "94350cc21c3bf770e5cbe5a3dd4aee7c4d68f346", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/94350cc21c3bf770e5cbe5a3dd4aee7c4d68f346"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/72fa360537c90daf18cce1a4e4a5ba34a7413b57", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/72fa360537c90daf18cce1a4e4a5ba34a7413b57", "html_url": "https://github.com/Rust-GCC/gccrs/commit/72fa360537c90daf18cce1a4e4a5ba34a7413b57", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/72fa360537c90daf18cce1a4e4a5ba34a7413b57/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "bdde878c07fd7c77d7b09819d84b49c68e682878", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bdde878c07fd7c77d7b09819d84b49c68e682878", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bdde878c07fd7c77d7b09819d84b49c68e682878"}], "stats": {"total": 60, "additions": 39, "deletions": 21}, "files": [{"sha": "84bf21958d0c1f35926b73906330be5dcd7d36fe", "filename": "gcc/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/72fa360537c90daf18cce1a4e4a5ba34a7413b57/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/72fa360537c90daf18cce1a4e4a5ba34a7413b57/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=72fa360537c90daf18cce1a4e4a5ba34a7413b57", "patch": "@@ -1,3 +1,16 @@\n+2009-06-04  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* config/i386/i386.h (X86_64_MS_REGPARM_MAX): Rename from\n+\tX64_REGPARM_MAX.\n+\t(REGPARM_MAX): Use X86_64_MS_REGPARM_MAX.\n+\t(X86_64_MS_SSE_REGPARM_MAX): Rename from X64_SSE_REGPARM_MAX.\n+\t(SSE_REGPARM_MAX): Use X86_64_MS_SSE_REGPARM_MAX.\n+\t* config/i386/i386.c: Use X86_64_MS_REGPARM_MAX instead of\n+\tX64_REGPARM_MAX.  Use X86_64_MS_SSE_REGPARM_MAX instead of\n+\tX64_SSE_REGPARM_MAX.\n+\t* config/i386/i386.md: Use X86_64_MS_SSE_REGPARM_MAX instead of\n+\tX64_SSE_REGPARM_MAX.\n+\n 2009-06-04  Alexandre Oliva  <aoliva@redhat.com>\n \n \t* gcc.c (report_times_to_file): New."}, {"sha": "80f3ea35a187516ba116aac945bdba793e2a33c8", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 16, "deletions": 13, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/72fa360537c90daf18cce1a4e4a5ba34a7413b57/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/72fa360537c90daf18cce1a4e4a5ba34a7413b57/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=72fa360537c90daf18cce1a4e4a5ba34a7413b57", "patch": "@@ -4407,7 +4407,7 @@ ix86_function_regparm (const_tree type, const_tree decl)\n \n   if (TARGET_64BIT)\n     return (ix86_function_type_abi (type) == SYSV_ABI\n-\t    ? X86_64_REGPARM_MAX : X64_REGPARM_MAX);\n+\t    ? X86_64_REGPARM_MAX : X86_64_MS_REGPARM_MAX);\n \n   regparm = ix86_regparm;\n   attr = lookup_attribute (\"regparm\", TYPE_ATTRIBUTES (type));\n@@ -4650,8 +4650,8 @@ ix86_function_arg_regno_p (int regno)\n     parm_regs = x86_64_ms_abi_int_parameter_registers;\n   else\n     parm_regs = x86_64_int_parameter_registers;\n-  for (i = 0; i < (ix86_abi == MS_ABI ? X64_REGPARM_MAX\n-  \t\t\t\t\t : X86_64_REGPARM_MAX); i++)\n+  for (i = 0; i < (ix86_abi == MS_ABI\n+\t\t   ? X86_64_MS_REGPARM_MAX : X86_64_REGPARM_MAX); i++)\n     if (regno == parm_regs[i])\n       return true;\n   return false;\n@@ -4777,17 +4777,18 @@ init_cumulative_args (CUMULATIVE_ARGS *cum,  /* Argument info to initialize */\n   if (TARGET_64BIT)\n     {\n       if (cum->call_abi != ix86_abi)\n-        cum->nregs = ix86_abi != SYSV_ABI ? X86_64_REGPARM_MAX\n-        \t\t\t\t     : X64_REGPARM_MAX;\n+        cum->nregs = (ix86_abi != SYSV_ABI\n+\t\t      ? X86_64_REGPARM_MAX : X86_64_MS_REGPARM_MAX);\n     }\n   if (TARGET_SSE)\n     {\n       cum->sse_nregs = SSE_REGPARM_MAX;\n       if (TARGET_64BIT)\n         {\n           if (cum->call_abi != ix86_abi)\n-            cum->sse_nregs = ix86_abi != SYSV_ABI ? X86_64_SSE_REGPARM_MAX\n-            \t\t\t\t\t     : X64_SSE_REGPARM_MAX;\n+            cum->sse_nregs = (ix86_abi != SYSV_ABI\n+\t\t\t      ? X86_64_SSE_REGPARM_MAX\n+\t\t\t      : X86_64_MS_SSE_REGPARM_MAX);\n         }\n     }\n   if (TARGET_MMX)\n@@ -5898,10 +5899,11 @@ function_arg_64 (CUMULATIVE_ARGS *cum, enum machine_mode mode,\n     return GEN_INT (cum->maybe_vaarg\n \t\t    ? (cum->sse_nregs < 0\n \t\t       ? (cum->call_abi == ix86_abi\n-\t\t          ? SSE_REGPARM_MAX\n-\t\t          : (ix86_abi != SYSV_ABI ? X86_64_SSE_REGPARM_MAX\n-\t\t          \t\t\t     : X64_SSE_REGPARM_MAX))\n- \t       : cum->sse_regno)\n+\t\t\t  ? SSE_REGPARM_MAX\n+\t\t\t  : (ix86_abi != SYSV_ABI\n+\t\t\t     ? X86_64_SSE_REGPARM_MAX\n+\t\t\t     : X86_64_MS_SSE_REGPARM_MAX))\n+\t\t       : cum->sse_regno)\n \t\t    : -1);\n \n   switch (mode)\n@@ -6603,7 +6605,8 @@ setup_incoming_varargs_64 (CUMULATIVE_ARGS *cum)\n   int regparm = ix86_regparm;\n \n   if (cum->call_abi != ix86_abi)\n-    regparm = ix86_abi != SYSV_ABI ? X86_64_REGPARM_MAX : X64_REGPARM_MAX;\n+    regparm = (ix86_abi != SYSV_ABI\n+\t       ? X86_64_REGPARM_MAX : X86_64_MS_REGPARM_MAX);\n \n   /* GPR size of varargs save area.  */\n   if (cfun->va_list_gpr_size)\n@@ -6700,7 +6703,7 @@ setup_incoming_varargs_ms_64 (CUMULATIVE_ARGS *cum)\n   alias_set_type set = get_varargs_alias_set ();\n   int i;\n \n-  for (i = cum->regno; i < X64_REGPARM_MAX; i++)\n+  for (i = cum->regno; i < X86_64_MS_REGPARM_MAX; i++)\n     {\n       rtx reg, mem;\n "}, {"sha": "c8fa9c4064da7d3841c58a0cec78f63522448157", "filename": "gcc/config/i386/i386.h", "status": "modified", "additions": 9, "deletions": 7, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/72fa360537c90daf18cce1a4e4a5ba34a7413b57/gcc%2Fconfig%2Fi386%2Fi386.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/72fa360537c90daf18cce1a4e4a5ba34a7413b57/gcc%2Fconfig%2Fi386%2Fi386.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.h?ref=72fa360537c90daf18cce1a4e4a5ba34a7413b57", "patch": "@@ -1853,20 +1853,22 @@ typedef struct ix86_args {\n \n /* Abi specific values for REGPARM_MAX and SSE_REGPARM_MAX */\n #define X86_64_REGPARM_MAX 6\n-#define X64_REGPARM_MAX 4\n-#define X86_32_REGPARM_MAX 3\n+#define X86_64_MS_REGPARM_MAX 4\n \n-#define X86_64_SSE_REGPARM_MAX 8\n-#define X64_SSE_REGPARM_MAX 4\n-#define X86_32_SSE_REGPARM_MAX (TARGET_SSE ? 3 : 0)\n+#define X86_32_REGPARM_MAX 3\n \n #define REGPARM_MAX\t\t\t\t\t\t\t\\\n-  (TARGET_64BIT ? (TARGET_64BIT_MS_ABI ? X64_REGPARM_MAX\t\t\\\n+  (TARGET_64BIT ? (TARGET_64BIT_MS_ABI ? X86_64_MS_REGPARM_MAX\t\t\\\n \t\t   : X86_64_REGPARM_MAX)\t\t\t\t\\\n    : X86_32_REGPARM_MAX)\n \n+#define X86_64_SSE_REGPARM_MAX 8\n+#define X86_64_MS_SSE_REGPARM_MAX 4\n+\n+#define X86_32_SSE_REGPARM_MAX (TARGET_SSE ? 3 : 0)\n+\n #define SSE_REGPARM_MAX\t\t\t\t\t\t\t\\\n-  (TARGET_64BIT ? (TARGET_64BIT_MS_ABI ? X64_SSE_REGPARM_MAX\t\t\\\n+  (TARGET_64BIT ? (TARGET_64BIT_MS_ABI ? X86_64_MS_SSE_REGPARM_MAX\t\\\n \t\t   : X86_64_SSE_REGPARM_MAX)\t\t\t\t\\\n    : X86_32_SSE_REGPARM_MAX)\n "}, {"sha": "9f9f4c2685f93fcfac88096cff01caf533979fbb", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/72fa360537c90daf18cce1a4e4a5ba34a7413b57/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/72fa360537c90daf18cce1a4e4a5ba34a7413b57/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=72fa360537c90daf18cce1a4e4a5ba34a7413b57", "patch": "@@ -15761,7 +15761,7 @@\n \t\t    GEN_INT ((TARGET_64BIT\n \t\t\t      ? (ix86_abi == SYSV_ABI\n \t\t\t\t ? X86_64_SSE_REGPARM_MAX\n-\t\t\t\t : X64_SSE_REGPARM_MAX)\n+\t\t\t\t : X86_64_MS_SSE_REGPARM_MAX)\n \t\t\t      : X86_32_SSE_REGPARM_MAX)\n \t\t    \t     - 1),\n \t\t    NULL, 0);"}]}