{"sha": "df2b750fc14c757455d3ea296121ffe797edb217", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGYyYjc1MGZjMTRjNzU3NDU1ZDNlYTI5NjEyMWZmZTc5N2VkYjIxNw==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2003-12-02T10:11:24Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2003-12-02T10:11:24Z"}, "message": "name-lookup.h (struct cp_binding_level): Use ENUM_BITFIELD.\n\n        * name-lookup.h (struct cp_binding_level): Use ENUM_BITFIELD.\n        * parser.c (struct cp_token): Likewise.\n        (struct cp_parser_token_tree_map_node): Likewise.\n        * lex.c (struct resword): Move const after ENUM_BITFIELD.\n\nFrom-SVN: r74169", "tree": {"sha": "89a88d38688aa3a0550ef426280f096930866d9c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/89a88d38688aa3a0550ef426280f096930866d9c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/df2b750fc14c757455d3ea296121ffe797edb217", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/df2b750fc14c757455d3ea296121ffe797edb217", "html_url": "https://github.com/Rust-GCC/gccrs/commit/df2b750fc14c757455d3ea296121ffe797edb217", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/df2b750fc14c757455d3ea296121ffe797edb217/comments", "author": null, "committer": null, "parents": [{"sha": "142b798be5651ea1ca4959d27f9144a78768d184", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/142b798be5651ea1ca4959d27f9144a78768d184", "html_url": "https://github.com/Rust-GCC/gccrs/commit/142b798be5651ea1ca4959d27f9144a78768d184"}], "stats": {"total": 19, "additions": 13, "deletions": 6}, "files": [{"sha": "b4d1df938b81afef35fc07822b55e2645c22dc0a", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/df2b750fc14c757455d3ea296121ffe797edb217/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/df2b750fc14c757455d3ea296121ffe797edb217/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=df2b750fc14c757455d3ea296121ffe797edb217", "patch": "@@ -1,3 +1,10 @@\n+2003-12-02  Richard Henderson  <rth@redhat.com>\n+\n+\t* name-lookup.h (struct cp_binding_level): Use ENUM_BITFIELD.\n+        * parser.c (struct cp_token): Likewise.   \n+        (struct cp_parser_token_tree_map_node): Likewise.\n+\t* lex.c (struct resword): Move const after ENUM_BITFIELD.\n+\n 2003-11-30  Mark Mitchell  <mark@codesourcery.com>\n \n \tPR c++/9849"}, {"sha": "37baa485ce94395c7754159538650c606021f99f", "filename": "gcc/cp/lex.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/df2b750fc14c757455d3ea296121ffe797edb217/gcc%2Fcp%2Flex.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/df2b750fc14c757455d3ea296121ffe797edb217/gcc%2Fcp%2Flex.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Flex.c?ref=df2b750fc14c757455d3ea296121ffe797edb217", "patch": "@@ -231,7 +231,7 @@ init_operators (void)\n struct resword\n {\n   const char *const word;\n-  const ENUM_BITFIELD(rid) rid : 16;\n+  ENUM_BITFIELD(rid) const rid : 16;\n   const unsigned int disable   : 16;\n };\n "}, {"sha": "8c8b04057f6110414b1c4bc26e25848aeb178115", "filename": "gcc/cp/name-lookup.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/df2b750fc14c757455d3ea296121ffe797edb217/gcc%2Fcp%2Fname-lookup.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/df2b750fc14c757455d3ea296121ffe797edb217/gcc%2Fcp%2Fname-lookup.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fname-lookup.h?ref=df2b750fc14c757455d3ea296121ffe797edb217", "patch": "@@ -211,7 +211,7 @@ struct cp_binding_level GTY(())\n     /* The kind of scope that this object represents.  However, a\n        SK_TEMPLATE_SPEC scope is represented with KIND set to\n        SK_TEMPALTE_PARMS and EXPLICIT_SPEC_P set to true.  */\n-    enum scope_kind kind : 4;\n+    ENUM_BITFIELD (scope_kind) kind : 4;\n \n     /* True if this scope is an SK_TEMPLATE_SPEC scope.  This field is\n        only valid if KIND == SK_TEMPLATE_PARMS.  */"}, {"sha": "c15717369dc97743404d32962f84f787832be4fa", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/df2b750fc14c757455d3ea296121ffe797edb217/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/df2b750fc14c757455d3ea296121ffe797edb217/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=df2b750fc14c757455d3ea296121ffe797edb217", "patch": "@@ -68,10 +68,10 @@\n typedef struct cp_token GTY (())\n {\n   /* The kind of token.  */\n-  enum cpp_ttype type : 8;\n+  ENUM_BITFIELD (cpp_ttype) type : 8;\n   /* If this token is a keyword, this value indicates which keyword.\n      Otherwise, this value is RID_MAX.  */\n-  enum rid keyword : 8;\n+  ENUM_BITFIELD (rid) keyword : 8;\n   /* The value associated with this token, if any.  */\n   tree value;\n   /* The location at which this token was found.  */\n@@ -1076,9 +1076,9 @@ typedef enum cp_parser_declarator_kind\n typedef struct cp_parser_token_tree_map_node\n {\n   /* The token type.  */\n-  enum cpp_ttype token_type : 8;\n+  ENUM_BITFIELD (cpp_ttype) token_type : 8;\n   /* The corresponding tree code.  */\n-  enum tree_code tree_type : 8;\n+  ENUM_BITFIELD (tree_code) tree_type : 8;\n } cp_parser_token_tree_map_node;\n \n /* A complete map consists of several ordinary entries, followed by a"}]}