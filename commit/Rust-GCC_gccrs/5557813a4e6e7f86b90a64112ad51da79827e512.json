{"sha": "5557813a4e6e7f86b90a64112ad51da79827e512", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTU1NzgxM2E0ZTZlN2Y4NmI5MGE2NDExMmFkNTFkYTc5ODI3ZTUxMg==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@codesourcery.com", "date": "2007-11-01T16:42:39Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2007-11-01T16:42:39Z"}, "message": "gcc.c (getenv_spec_function): Escape the environment variable's value.\n\n\t* gcc.c (getenv_spec_function): Escape the environment variable's\n\tvalue.\n\nFrom-SVN: r129825", "tree": {"sha": "a87db7af0cc74dd35134e4a4bff638f3af1d4a1e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a87db7af0cc74dd35134e4a4bff638f3af1d4a1e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5557813a4e6e7f86b90a64112ad51da79827e512", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5557813a4e6e7f86b90a64112ad51da79827e512", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5557813a4e6e7f86b90a64112ad51da79827e512", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5557813a4e6e7f86b90a64112ad51da79827e512/comments", "author": null, "committer": null, "parents": [{"sha": "d6a64b9df961ae0e885a50a6b01fb2b846e60f12", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d6a64b9df961ae0e885a50a6b01fb2b846e60f12", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d6a64b9df961ae0e885a50a6b01fb2b846e60f12"}], "stats": {"total": 24, "additions": 23, "deletions": 1}, "files": [{"sha": "e87bbf21d19b50e4be0f5708242a41cd9fb687c3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5557813a4e6e7f86b90a64112ad51da79827e512/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5557813a4e6e7f86b90a64112ad51da79827e512/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5557813a4e6e7f86b90a64112ad51da79827e512", "patch": "@@ -1,3 +1,8 @@\n+2007-11-01  Nathan Sidwell  <nathan@codesourcery.com>\n+\n+\t* gcc.c (getenv_spec_function): Escape the environment variable's\n+\tvalue.\n+\n 2007-11-01  Janis Johnson  <janis187@us.ibm.com>\n \n \t* doc/invoke.texi (Optimize Options): Under -fcse-follow-jumps,"}, {"sha": "bd266496ac791dbbbd987f5d837a36174f2aa651", "filename": "gcc/gcc.c", "status": "modified", "additions": 18, "deletions": 1, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5557813a4e6e7f86b90a64112ad51da79827e512/gcc%2Fgcc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5557813a4e6e7f86b90a64112ad51da79827e512/gcc%2Fgcc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc.c?ref=5557813a4e6e7f86b90a64112ad51da79827e512", "patch": "@@ -7734,6 +7734,9 @@ static const char *\n getenv_spec_function (int argc, const char **argv)\n {\n   char *value;\n+  char *result;\n+  char *ptr;\n+  size_t len;\n \n   if (argc != 2)\n     return NULL;\n@@ -7742,7 +7745,21 @@ getenv_spec_function (int argc, const char **argv)\n   if (!value)\n     fatal (\"environment variable \\\"%s\\\" not defined\", argv[0]);\n \n-  return concat (value, argv[1], NULL);\n+  /* We have to escape every character of the environment variable so\n+     they are not interpretted as active spec characters.  A\n+     particulaly painful case is when we are reading a variable\n+     holding a windows path complete with \\ separators.  */\n+  len = strlen (value) * 2 + strlen (argv[1]) + 1;\n+  result = xmalloc (len);\n+  for (ptr = result; *value; ptr += 2)\n+    {\n+      ptr[0] = '\\\\';\n+      ptr[1] = *value++;\n+    }\n+  \n+  strcpy (ptr, argv[1]);\n+  \n+  return result;\n }\n \n /* if-exists built-in spec function."}]}