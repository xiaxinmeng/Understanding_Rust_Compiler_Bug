{"sha": "72f812a2b53cc8b57c10534784022fea020be891", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzJmODEyYTJiNTNjYzhiNTdjMTA1MzQ3ODQwMjJmZWEwMjBiZTg5MQ==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2011-02-15T19:34:33Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2011-02-15T19:34:33Z"}, "message": "Don't crash lowering self-referential variable initializer.\n\nFrom-SVN: r170194", "tree": {"sha": "a28813ac3a48c065f8203dc9be27563ac3effb2c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a28813ac3a48c065f8203dc9be27563ac3effb2c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/72f812a2b53cc8b57c10534784022fea020be891", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/72f812a2b53cc8b57c10534784022fea020be891", "html_url": "https://github.com/Rust-GCC/gccrs/commit/72f812a2b53cc8b57c10534784022fea020be891", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/72f812a2b53cc8b57c10534784022fea020be891/comments", "author": null, "committer": null, "parents": [{"sha": "1c4a5fc8caa525a85b92e737d86275a857fa2874", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1c4a5fc8caa525a85b92e737d86275a857fa2874", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1c4a5fc8caa525a85b92e737d86275a857fa2874"}], "stats": {"total": 18, "additions": 17, "deletions": 1}, "files": [{"sha": "0be8c66a83b60d138bca8252adc75b5c37069428", "filename": "gcc/go/gofrontend/gogo.cc", "status": "modified", "additions": 17, "deletions": 1, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/72f812a2b53cc8b57c10534784022fea020be891/gcc%2Fgo%2Fgofrontend%2Fgogo.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/72f812a2b53cc8b57c10534784022fea020be891/gcc%2Fgo%2Fgofrontend%2Fgogo.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2Fgogo.cc?ref=72f812a2b53cc8b57c10534784022fea020be891", "patch": "@@ -1139,13 +1139,17 @@ class Lower_parse_tree : public Traverse\n {\n  public:\n   Lower_parse_tree(Gogo* gogo, Named_object* function)\n-    : Traverse(traverse_constants\n+    : Traverse(traverse_variables\n+\t       | traverse_constants\n \t       | traverse_functions\n \t       | traverse_statements\n \t       | traverse_expressions),\n       gogo_(gogo), function_(function), iota_value_(-1)\n   { }\n \n+  int\n+  variable(Named_object*);\n+\n   int\n   constant(Named_object*, bool);\n \n@@ -1167,6 +1171,18 @@ class Lower_parse_tree : public Traverse\n   int iota_value_;\n };\n \n+// Lower variables.  We handle variables specially to break loops in\n+// which a variable initialization expression refers to itself.  The\n+// loop breaking is in lower_init_expression.\n+\n+int\n+Lower_parse_tree::variable(Named_object* no)\n+{\n+  if (no->is_variable())\n+    no->var_value()->lower_init_expression(this->gogo_, this->function_);\n+  return TRAVERSE_CONTINUE;\n+}\n+\n // Lower constants.  We handle constants specially so that we can set\n // the right value for the predeclared constant iota.  This works in\n // conjunction with the way we lower Const_expression objects."}]}