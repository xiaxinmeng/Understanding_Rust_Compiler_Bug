{"sha": "cbaaba19a4051beef0a3efb2121c155ec094787f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2JhYWJhMTlhNDA1MWJlZWYwYTNlZmIyMTIxYzE1NWVjMDk0Nzg3Zg==", "commit": {"author": {"name": "David Edelsohn", "email": "edelsohn@gnu.org", "date": "2002-05-23T02:26:47Z"}, "committer": {"name": "David Edelsohn", "email": "dje@gcc.gnu.org", "date": "2002-05-23T02:26:47Z"}, "message": "aix43.h (LINK_SPEC): Add PE initializer.\n\n        * config/rs6000/aix43.h (LINK_SPEC): Add PE initializer.\n        (STARTFILE_SPEC): Delete PE crt0.o.\n        * config/rs6000/aix51.h: Same.\n        * config/rs6000/rs6000.c: Use TARGET_XCOFF, not OBJECT_FORMAT_COFF.\n        * config/rs6000/rs6000.h (ASM_WEAKEN_DECL): Append [DS] to\n        function descriptor symbol.  Use RS6000_OUTPUT_BASENAME.\n        (ASM_OUTPUT_DEF_FROM_DECLS): Use RS6000_OUTPUT_BASENAME.\n        * config/rs6000/xcoff.h (ASM_OUTPUT_DEF): Define.\n\nFrom-SVN: r53756", "tree": {"sha": "a88f0cc44a86c5263c89aaa86495a856ca323af0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a88f0cc44a86c5263c89aaa86495a856ca323af0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cbaaba19a4051beef0a3efb2121c155ec094787f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cbaaba19a4051beef0a3efb2121c155ec094787f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cbaaba19a4051beef0a3efb2121c155ec094787f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cbaaba19a4051beef0a3efb2121c155ec094787f/comments", "author": null, "committer": null, "parents": [{"sha": "1671e363a6d7c0127b2e38de4cdbb05434b6c6aa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1671e363a6d7c0127b2e38de4cdbb05434b6c6aa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1671e363a6d7c0127b2e38de4cdbb05434b6c6aa"}], "stats": {"total": 76, "additions": 46, "deletions": 30}, "files": [{"sha": "a668454b38f4c0c119b83b6f0666ffea9a71acbb", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cbaaba19a4051beef0a3efb2121c155ec094787f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cbaaba19a4051beef0a3efb2121c155ec094787f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=cbaaba19a4051beef0a3efb2121c155ec094787f", "patch": "@@ -1,3 +1,14 @@\n+2002-05-22  David Edelsohn  <edelsohn@gnu.org>\n+\n+\t* config/rs6000/aix43.h (LINK_SPEC): Add PE initializer.\n+\t(STARTFILE_SPEC): Delete PE crt0.o.\n+\t* config/rs6000/aix51.h: Same.\n+\t* config/rs6000/rs6000.c: Use TARGET_XCOFF, not OBJECT_FORMAT_COFF.\n+\t* config/rs6000/rs6000.h (ASM_WEAKEN_DECL): Append [DS] to\n+\tfunction descriptor symbol.  Use RS6000_OUTPUT_BASENAME.\n+\t(ASM_OUTPUT_DEF_FROM_DECLS): Use RS6000_OUTPUT_BASENAME.\n+\t* config/rs6000/xcoff.h (ASM_OUTPUT_DEF): Define.\n+\n 2002-05-22  Richard Henderson  <rth@redhat.com>\n \n \t* varasm.c (default_section_type_flags): Handle tls data and"}, {"sha": "8fe9859b70a92e04593f0a9441c57a430857e589", "filename": "gcc/config/rs6000/aix43.h", "status": "modified", "additions": 6, "deletions": 9, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cbaaba19a4051beef0a3efb2121c155ec094787f/gcc%2Fconfig%2Frs6000%2Faix43.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cbaaba19a4051beef0a3efb2121c155ec094787f/gcc%2Fconfig%2Frs6000%2Faix43.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Faix43.h?ref=cbaaba19a4051beef0a3efb2121c155ec094787f", "patch": "@@ -186,18 +186,15 @@ do {\t\t\t\t\t\t\t\t\t\\\n #undef LINK_SPEC\n #define LINK_SPEC \"-bpT:0x10000000 -bpD:0x20000000 %{!r:-btextro} -bnodelcsect\\\n    %{static:-bnso %(link_syscalls) } %{shared:-bM:SRE %{!e:-bnoentry}}\\\n-   %{!maix64:%{!shared:%{g*: %(link_libg) }}} %{maix64:-b64}\"\n+   %{!maix64:%{!shared:%{g*: %(link_libg) }}} %{maix64:-b64}\\\n+   %{mpe:-binitfini:poe_remote_main}\"\n \n #undef STARTFILE_SPEC\n #define STARTFILE_SPEC \"%{!shared:\\\n-   %{mpe:%{pg:/usr/lpp/ppe.poe/lib/gcrt0.o}\\\n-         %{!pg:%{p:/usr/lpp/ppe.poe/lib/mcrt0.o}\\\n-               %{!p:/usr/lpp/ppe.poe/lib/crt0.o}}}\\\n-   %{!mpe:\\\n-     %{maix64:%{pg:gcrt0_64%O%s}%{!pg:%{p:mcrt0_64%O%s}%{!p:crt0_64%O%s}}}\\\n-     %{!maix64:\\\n-       %{pthread:%{pg:gcrt0_r%O%s}%{!pg:%{p:mcrt0_r%O%s}%{!p:crt0_r%O%s}}}\\\n-       %{!pthread:%{pg:gcrt0%O%s}%{!pg:%{p:mcrt0%O%s}%{!p:crt0%O%s}}}}}}\"\n+   %{maix64:%{pg:gcrt0_64%O%s}%{!pg:%{p:mcrt0_64%O%s}%{!p:crt0_64%O%s}}}\\\n+   %{!maix64:\\\n+     %{pthread:%{pg:gcrt0_r%O%s}%{!pg:%{p:mcrt0_r%O%s}%{!p:crt0_r%O%s}}}\\\n+     %{!pthread:%{pg:gcrt0%O%s}%{!pg:%{p:mcrt0%O%s}%{!p:crt0%O%s}}}}}\"\n \n /* AIX 4.3 typedefs ptrdiff_t as \"long\" while earlier releases used \"int\".  */\n "}, {"sha": "eae90f6b91e9de149cf933b9273d042b6c1ccabe", "filename": "gcc/config/rs6000/aix51.h", "status": "modified", "additions": 6, "deletions": 9, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cbaaba19a4051beef0a3efb2121c155ec094787f/gcc%2Fconfig%2Frs6000%2Faix51.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cbaaba19a4051beef0a3efb2121c155ec094787f/gcc%2Fconfig%2Frs6000%2Faix51.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Faix51.h?ref=cbaaba19a4051beef0a3efb2121c155ec094787f", "patch": "@@ -185,18 +185,15 @@ do {\t\t\t\t\t\t\t\t\t\\\n #undef LINK_SPEC\n #define LINK_SPEC \"-bpT:0x10000000 -bpD:0x20000000 %{!r:-btextro} -bnodelcsect\\\n    %{static:-bnso %(link_syscalls) } %{shared:-bM:SRE %{!e:-bnoentry}}\\\n-   %{!maix64:%{!shared:%{g*: %(link_libg) }}} %{maix64:-b64}\"\n+   %{!maix64:%{!shared:%{g*: %(link_libg) }}} %{maix64:-b64}\\\n+   %{mpe:-binitfini:poe_remote_main}\"\n \n #undef STARTFILE_SPEC\n #define STARTFILE_SPEC \"%{!shared:\\\n-   %{mpe:%{pg:/usr/lpp/ppe.poe/lib/gcrt0.o}\\\n-         %{!pg:%{p:/usr/lpp/ppe.poe/lib/mcrt0.o}\\\n-               %{!p:/usr/lpp/ppe.poe/lib/crt0.o}}}\\\n-   %{!mpe:\\\n-     %{maix64:%{pg:gcrt0_64%O%s}%{!pg:%{p:mcrt0_64%O%s}%{!p:crt0_64%O%s}}}\\\n-     %{!maix64:\\\n-       %{pthread:%{pg:gcrt0_r%O%s}%{!pg:%{p:mcrt0_r%O%s}%{!p:crt0_r%O%s}}}\\\n-       %{!pthread:%{pg:gcrt0%O%s}%{!pg:%{p:mcrt0%O%s}%{!p:crt0%O%s}}}}}}\"\n+   %{maix64:%{pg:gcrt0_64%O%s}%{!pg:%{p:mcrt0_64%O%s}%{!p:crt0_64%O%s}}}\\\n+   %{!maix64:\\\n+     %{pthread:%{pg:gcrt0_r%O%s}%{!pg:%{p:mcrt0_r%O%s}%{!p:crt0_r%O%s}}}\\\n+     %{!pthread:%{pg:gcrt0%O%s}%{!pg:%{p:mcrt0%O%s}%{!p:crt0%O%s}}}}}\"\n \n /* AIX V5 typedefs ptrdiff_t as \"long\" while earlier releases used \"int\".  */\n "}, {"sha": "12b27d4cf077148b8a011dcf0ea180d9b9861638", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cbaaba19a4051beef0a3efb2121c155ec094787f/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cbaaba19a4051beef0a3efb2121c155ec094787f/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=cbaaba19a4051beef0a3efb2121c155ec094787f", "patch": "@@ -171,7 +171,7 @@ static void rs6000_elf_select_rtx_section PARAMS ((enum machine_mode, rtx,\n static void rs6000_elf_encode_section_info PARAMS ((tree, int));\n static const char *rs6000_elf_strip_name_encoding PARAMS ((const char *));\n #endif\n-#ifdef OBJECT_FORMAT_COFF\n+#if TARGET_XCOFF\n static void xcoff_asm_named_section PARAMS ((const char *, unsigned int));\n static void rs6000_xcoff_select_section PARAMS ((tree, int,\n \t\t\t\t\t\t unsigned HOST_WIDE_INT));\n@@ -267,7 +267,7 @@ static const char alt_reg_names[][8] =\n /* Default unaligned ops are only provided for ELF.  Find the ops needed\n    for non-ELF systems.  */\n #ifndef OBJECT_FORMAT_ELF\n-#ifdef OBJECT_FORMAT_COFF\n+#if TARGET_XCOFF\n /* For XCOFF.  rs6000_assemble_integer will handle unaligned DIs on\n    64-bit targets.  */\n #undef TARGET_ASM_UNALIGNED_HI_OP\n@@ -11643,7 +11643,7 @@ rs6000_elf_asm_out_destructor (symbol, priority)\n }\n #endif\n \n-#ifdef OBJECT_FORMAT_COFF\n+#if TARGET_XCOFF\n static void\n xcoff_asm_named_section (name, flags)\n      const char *name;\n@@ -11734,7 +11734,7 @@ rs6000_xcoff_strip_name_encoding (name)\n     return name;\n }\n \n-#endif /* OBJECT_FORMAT_COFF */\n+#endif /* TARGET_XCOFF */\n \n /* Note that this is also used for ELF64.  */\n "}, {"sha": "38b89fc501135135f8d041254608adbb07e09370", "filename": "gcc/config/rs6000/rs6000.h", "status": "modified", "additions": 10, "deletions": 8, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cbaaba19a4051beef0a3efb2121c155ec094787f/gcc%2Fconfig%2Frs6000%2Frs6000.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cbaaba19a4051beef0a3efb2121c155ec094787f/gcc%2Fconfig%2Frs6000%2Frs6000.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.h?ref=cbaaba19a4051beef0a3efb2121c155ec094787f", "patch": "@@ -2442,12 +2442,14 @@ extern int toc_initialized;\n   do\t\t\t\t\t\t\t\t\t\\\n     {\t\t\t\t\t\t\t\t\t\\\n       fputs (\"\\t.weak\\t\", (FILE));\t\t\t\t\t\\\n-      assemble_name ((FILE), (NAME)); \t\t\t\t\t\\\n+      RS6000_OUTPUT_BASENAME ((FILE), (NAME)); \t\t\t\\\n       if ((DECL) && TREE_CODE (DECL) == FUNCTION_DECL\t\t\t\\\n \t  && DEFAULT_ABI == ABI_AIX)\t\t\t\t\t\\\n \t{\t\t\t\t\t\t\t\t\\\n+\t  if (TARGET_XCOFF)\t\t\t\t\t\t\\\n+\t    fputs (\"[DS]\", (FILE));\t\t\t\t\t\\\n \t  fputs (\"\\n\\t.weak\\t.\", (FILE));\t\t\t\t\\\n-\t  assemble_name ((FILE), (NAME)); \t\t\t\t\\\n+\t  RS6000_OUTPUT_BASENAME ((FILE), (NAME)); \t\t\t\\\n \t}\t\t\t\t\t\t\t\t\\\n       fputc ('\\n', (FILE));\t\t\t\t\t\t\\\n       if (VAL)\t\t\t\t\t\t\t\t\\\n@@ -2457,9 +2459,9 @@ extern int toc_initialized;\n \t      && DEFAULT_ABI == ABI_AIX)\t\t\t\t\\\n \t    {\t\t\t\t\t\t\t\t\\\n \t      fputs (\"\\t.set\\t.\", (FILE));\t\t\t\t\\\n-\t      assemble_name ((FILE), (NAME));\t\t\t\t\\\n+\t      RS6000_OUTPUT_BASENAME ((FILE), (NAME));\t\t\t\\\n \t      fputs (\",.\", (FILE));\t\t\t\t\t\\\n-\t      assemble_name ((FILE), (VAL));\t\t\t\t\\\n+\t      RS6000_OUTPUT_BASENAME ((FILE), (VAL));\t\t\t\\\n \t      fputc ('\\n', (FILE));\t\t\t\t\t\\\n \t    }\t\t\t\t\t\t\t\t\\\n \t}\t\t\t\t\t\t\t\t\\\n@@ -2482,20 +2484,20 @@ extern int toc_initialized;\n \t      if (!RS6000_WEAK || !DECL_WEAK (DECL))\t\t\t\\\n \t\t{\t\t\t\t\t\t\t\\\n \t\t  fputs (\"\\t.globl\\t.\", FILE);\t\t\t\t\\\n-\t\t  assemble_name (FILE, alias);\t\t\t\t\\\n+\t\t  RS6000_OUTPUT_BASENAME (FILE, alias);\t\t\t\\\n \t\t  putc ('\\n', FILE);\t\t\t\t\t\\\n \t\t}\t\t\t\t\t\t\t\\\n \t    }\t\t\t\t\t\t\t\t\\\n \t  else if (TARGET_XCOFF)\t\t\t\t\t\\\n \t    {\t\t\t\t\t\t\t\t\\\n \t      fputs (\"\\t.lglobl\\t.\", FILE);\t\t\t\t\\\n-\t      assemble_name (FILE, alias);\t\t\t\t\\\n+\t      RS6000_OUTPUT_BASENAME (FILE, alias);\t\t\t\\\n \t      putc ('\\n', FILE);\t\t\t\t\t\\\n \t    }\t\t\t\t\t\t\t\t\\\n \t  fputs (\"\\t.set\\t.\", FILE);\t\t\t\t\t\\\n-\t  assemble_name (FILE, alias);\t\t\t\t\t\\\n+\t  RS6000_OUTPUT_BASENAME (FILE, alias);\t\t\t\t\\\n \t  fputs (\",.\", FILE);\t\t\t\t\t\t\\\n-\t  assemble_name (FILE, name);\t\t\t\t\t\\\n+\t  RS6000_OUTPUT_BASENAME (FILE, name);\t\t\t\t\\\n \t  fputc ('\\n', FILE);\t\t\t\t\t\t\\\n \t}\t\t\t\t\t\t\t\t\\\n       ASM_OUTPUT_DEF (FILE, alias, name);\t\t\t\t\\"}, {"sha": "2c392439f2225c687d36a89878698f203bb878c0", "filename": "gcc/config/rs6000/xcoff.h", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cbaaba19a4051beef0a3efb2121c155ec094787f/gcc%2Fconfig%2Frs6000%2Fxcoff.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cbaaba19a4051beef0a3efb2121c155ec094787f/gcc%2Fconfig%2Frs6000%2Fxcoff.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fxcoff.h?ref=cbaaba19a4051beef0a3efb2121c155ec094787f", "patch": "@@ -382,6 +382,15 @@ toc_section ()\t\t\t\t\t\t\\\n /* This is how we tell the assembler that two symbols have the same value.  */\n #define SET_ASM_OP \"\\t.set \"\n \n+/* This is how we tell the assembler to equate two values.  */\n+#define ASM_OUTPUT_DEF(FILE,LABEL1,LABEL2)\t\t\t\t\\\n+ do {\tfprintf ((FILE), \"%s\", SET_ASM_OP);\t\t\t\t\\\n+\tRS6000_OUTPUT_BASENAME (FILE, LABEL1);\t\t\t\t\\\n+\tfprintf (FILE, \",\");\t\t\t\t\t\t\\\n+\tRS6000_OUTPUT_BASENAME (FILE, LABEL2);\t\t\t\t\\\n+\tfprintf (FILE, \"\\n\");\t\t\t\t\t\t\\\n+  } while (0)\n+\n /* Used by rs6000_assemble_integer, among others.  */\n #define DOUBLE_INT_ASM_OP \"\\t.llong\\t\"\n "}]}