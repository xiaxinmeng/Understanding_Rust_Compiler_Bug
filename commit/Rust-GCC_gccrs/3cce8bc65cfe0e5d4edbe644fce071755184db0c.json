{"sha": "3cce8bc65cfe0e5d4edbe644fce071755184db0c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2NjZThiYzY1Y2ZlMGU1ZDRlZGJlNjQ0ZmNlMDcxNzU1MTg0ZGIwYw==", "commit": {"author": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1997-04-30T23:45:13Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1997-04-30T23:45:13Z"}, "message": "(paradoxical_extendhidi2, paradoxical_extendqidi2): New patterns.\n\nFrom-SVN: r13995", "tree": {"sha": "b60eebec9a5a00063047a4fee736cf6ff8fa72bc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b60eebec9a5a00063047a4fee736cf6ff8fa72bc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3cce8bc65cfe0e5d4edbe644fce071755184db0c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3cce8bc65cfe0e5d4edbe644fce071755184db0c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3cce8bc65cfe0e5d4edbe644fce071755184db0c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3cce8bc65cfe0e5d4edbe644fce071755184db0c/comments", "author": null, "committer": null, "parents": [{"sha": "ad4ff31086d8e338ebd7b30725145f6ad57d63ae", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ad4ff31086d8e338ebd7b30725145f6ad57d63ae", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ad4ff31086d8e338ebd7b30725145f6ad57d63ae"}], "stats": {"total": 30, "additions": 30, "deletions": 0}, "files": [{"sha": "1abd60b080ace6ee7536dab126fbf3e32241ccb1", "filename": "gcc/config/mips/mips.md", "status": "modified", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3cce8bc65cfe0e5d4edbe644fce071755184db0c/gcc%2Fconfig%2Fmips%2Fmips.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3cce8bc65cfe0e5d4edbe644fce071755184db0c/gcc%2Fconfig%2Fmips%2Fmips.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.md?ref=3cce8bc65cfe0e5d4edbe644fce071755184db0c", "patch": "@@ -2497,6 +2497,36 @@ move\\\\t%0,%z4\\\\n\\\\\n    (set_attr \"mode\"\t\"DI\")\n    (set_attr \"length\"\t\"1,1,2\")])\n \n+;; These can be created when a paradoxical subreg operand with an implicit\n+;; sign_extend operator is reloaded.  Because of the subreg, this is really\n+;; a zero extend.\n+;; ??? It might be possible to eliminate the need for these patterns by adding\n+;; more support to reload for implicit sign_extend operators.\n+(define_insn \"*paradoxical_extendhidi2\"\n+  [(set (match_operand:DI 0 \"register_operand\" \"=d,d\")\n+\t(sign_extend:DI\n+\t (subreg:SI (match_operand:HI 1 \"memory_operand\" \"R,m\") 0)))]\n+  \"TARGET_64BIT\"\n+  \"*\n+{\n+  return mips_move_1word (operands, insn, TRUE);\n+}\"\n+  [(set_attr \"type\"\t\"load,load\")\n+   (set_attr \"mode\"\t\"DI\")\n+   (set_attr \"length\"\t\"1,2\")])\n+\n+(define_insn \"*paradoxical_extendqidi2\"\n+  [(set (match_operand:DI 0 \"register_operand\" \"=d,d\")\n+\t(sign_extend:DI\n+\t (subreg:SI (match_operand:QI 1 \"memory_operand\" \"R,m\") 0)))]\n+  \"TARGET_64BIT\"\n+  \"*\n+{\n+  return mips_move_1word (operands, insn, TRUE);\n+}\"\n+  [(set_attr \"type\"\t\"load,load\")\n+   (set_attr \"mode\"\t\"DI\")\n+   (set_attr \"length\"\t\"1,2\")])\n \f\n ;;\n ;;  ...................."}]}