{"sha": "e91d51457532da6c2179b23359435f06d89488e7", "node_id": "C_kwDOANBUbNoAKGU5MWQ1MTQ1NzUzMmRhNmMyMTc5YjIzMzU5NDM1ZjA2ZDg5NDg4ZTc", "commit": {"author": {"name": "Hans-Peter Nilsson", "email": "hp@axis.com", "date": "2022-11-15T20:11:54Z"}, "committer": {"name": "Hans-Peter Nilsson", "email": "hp@bitrange.com", "date": "2022-11-16T17:19:17Z"}, "message": "testsuite: Fix mistransformed gcov\n\nIn commit r13-2619-g34b9a03353d3fd, [transform] was applied to all\ninvocations of gcov, for both out-of-tree and in-tree testing.\nFor in-tree cross builds, this means gcov was called as\n\"/path/to/gccobj/gcc/target-tuple-gcov\" gcov-pr94029.c which is\nincorrect, as it's there \"/path/to/gccobj/gcc/gcov\" until it's\ninstalled.  This caused a testsuite failure, like:\n\nRunning /x/gcc/gcc/testsuite/gcc.misc-tests/gcov.exp ...\nFAIL: gcc.misc-tests/gcov-pr94029.c gcov failed: spawn failed\n\nTo avoid cumbersome conditionals, use a dedicated new helper function.\n\ngcc/testsuite:\n\t* lib/gcc-dg.exp (gcc-transform-out-of-tree): New proc.\n\t* g++.dg/gcov/gcov.exp, gcc.misc-tests/gcov.exp: Call\n\tgcc-transform-out-of-tree instead of transform.", "tree": {"sha": "261ba7e78acb6f3158119e5497e62fd578171f67", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/261ba7e78acb6f3158119e5497e62fd578171f67"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e91d51457532da6c2179b23359435f06d89488e7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e91d51457532da6c2179b23359435f06d89488e7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e91d51457532da6c2179b23359435f06d89488e7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e91d51457532da6c2179b23359435f06d89488e7/comments", "author": {"login": "hpataxisdotcom", "id": 80339731, "node_id": "MDQ6VXNlcjgwMzM5NzMx", "avatar_url": "https://avatars.githubusercontent.com/u/80339731?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hpataxisdotcom", "html_url": "https://github.com/hpataxisdotcom", "followers_url": "https://api.github.com/users/hpataxisdotcom/followers", "following_url": "https://api.github.com/users/hpataxisdotcom/following{/other_user}", "gists_url": "https://api.github.com/users/hpataxisdotcom/gists{/gist_id}", "starred_url": "https://api.github.com/users/hpataxisdotcom/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hpataxisdotcom/subscriptions", "organizations_url": "https://api.github.com/users/hpataxisdotcom/orgs", "repos_url": "https://api.github.com/users/hpataxisdotcom/repos", "events_url": "https://api.github.com/users/hpataxisdotcom/events{/privacy}", "received_events_url": "https://api.github.com/users/hpataxisdotcom/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "246bbdaa5f536b7a199dda9860c473137f40d622", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/246bbdaa5f536b7a199dda9860c473137f40d622", "html_url": "https://github.com/Rust-GCC/gccrs/commit/246bbdaa5f536b7a199dda9860c473137f40d622"}], "stats": {"total": 21, "additions": 17, "deletions": 4}, "files": [{"sha": "def827de3c74402afaada45ec20cbd712a0d61ee", "filename": "gcc/testsuite/g++.dg/gcov/gcov.exp", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e91d51457532da6c2179b23359435f06d89488e7/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgcov%2Fgcov.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e91d51457532da6c2179b23359435f06d89488e7/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgcov%2Fgcov.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgcov%2Fgcov.exp?ref=e91d51457532da6c2179b23359435f06d89488e7", "patch": "@@ -24,9 +24,9 @@ global GXX_UNDER_TEST\n \n # Find gcov in the same directory as $GXX_UNDER_TEST.\n if { ![is_remote host] && [string match \"*/*\" [lindex $GXX_UNDER_TEST 0]] } {\n-    set GCOV [file dirname [lindex $GXX_UNDER_TEST 0]]/[transform gcov]\n+    set GCOV [file dirname [lindex $GXX_UNDER_TEST 0]]/[gcc-transform-out-of-tree gcov]\n } else {\n-    set GCOV [transform gcov]\n+    set GCOV [gcc-transform-out-of-tree gcov]\n }\n \n # Initialize harness."}, {"sha": "bc8e2c9958bf6c85c737eba2fe3ff519823b2bee", "filename": "gcc/testsuite/gcc.misc-tests/gcov.exp", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e91d51457532da6c2179b23359435f06d89488e7/gcc%2Ftestsuite%2Fgcc.misc-tests%2Fgcov.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e91d51457532da6c2179b23359435f06d89488e7/gcc%2Ftestsuite%2Fgcc.misc-tests%2Fgcov.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.misc-tests%2Fgcov.exp?ref=e91d51457532da6c2179b23359435f06d89488e7", "patch": "@@ -24,9 +24,9 @@ global GCC_UNDER_TEST\n \n # For now find gcov in the same directory as $GCC_UNDER_TEST.\n if { ![is_remote host] && [string match \"*/*\" [lindex $GCC_UNDER_TEST 0]] } {\n-    set GCOV [file dirname [lindex $GCC_UNDER_TEST 0]]/[transform gcov]\n+    set GCOV [file dirname [lindex $GCC_UNDER_TEST 0]]/[gcc-transform-out-of-tree gcov]\n } else {\n-    set GCOV [transform gcov]\n+    set GCOV [gcc-transform-out-of-tree gcov]\n }\n \n # Initialize harness."}, {"sha": "0129b1136300cdcd238cb48153161692408d9691", "filename": "gcc/testsuite/lib/gcc-dg.exp", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e91d51457532da6c2179b23359435f06d89488e7/gcc%2Ftestsuite%2Flib%2Fgcc-dg.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e91d51457532da6c2179b23359435f06d89488e7/gcc%2Ftestsuite%2Flib%2Fgcc-dg.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Fgcc-dg.exp?ref=e91d51457532da6c2179b23359435f06d89488e7", "patch": "@@ -1429,5 +1429,18 @@ proc scan-symbol-not { args } {\n     }\n }\n \n+# Transform a tool-name to its canonical-target-name by \"transform\"\n+# (which may return the original name for native targets) but only if\n+# testing out-of-tree.  When in-tree, the tool is expected to be found\n+# by its original name, typically with some build-directory prefix\n+# prepended by the caller.\n+proc gcc-transform-out-of-tree { args } {\n+    global TESTING_IN_BUILD_TREE\n+    if { [info exists TESTING_IN_BUILD_TREE] } {\n+\treturn $args;\n+    }\n+    return [transform $args]\n+}\n+\n set additional_prunes \"\"\n set dg_runtest_extra_prunes \"\""}]}