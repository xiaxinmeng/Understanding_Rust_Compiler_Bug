{"sha": "c873714ff0cdefda09729bf04a7fc6c049d024f5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Yzg3MzcxNGZmMGNkZWZkYTA5NzI5YmYwNGE3ZmM2YzA0OWQwMjRmNQ==", "commit": {"author": {"name": "Gary Dismukes", "email": "dismukes@adacore.com", "date": "2020-03-31T22:27:06Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2020-06-15T08:04:32Z"}, "message": "[Ada] Passing actual parameter values to out formals when Default_Value is set\n\n2020-06-15  Gary Dismukes  <dismukes@adacore.com>\n\ngcc/ada/\n\n\t* exp_ch6.adb (Add_Call_By_Copy_Code): In the case of a view\n\tconversion passed to a scalar out-mode parameter where the\n\tformal has Default_Value set, declare the copy temp with the\n\tbase type of the formal's subtype and initialize the copy temp\n\twith the actual's value.", "tree": {"sha": "8dba00f6f089d9bf0ebab4ea620e72dd8231b81d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8dba00f6f089d9bf0ebab4ea620e72dd8231b81d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c873714ff0cdefda09729bf04a7fc6c049d024f5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c873714ff0cdefda09729bf04a7fc6c049d024f5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c873714ff0cdefda09729bf04a7fc6c049d024f5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c873714ff0cdefda09729bf04a7fc6c049d024f5/comments", "author": {"login": "dismukes", "id": 50880541, "node_id": "MDQ6VXNlcjUwODgwNTQx", "avatar_url": "https://avatars.githubusercontent.com/u/50880541?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dismukes", "html_url": "https://github.com/dismukes", "followers_url": "https://api.github.com/users/dismukes/followers", "following_url": "https://api.github.com/users/dismukes/following{/other_user}", "gists_url": "https://api.github.com/users/dismukes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dismukes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dismukes/subscriptions", "organizations_url": "https://api.github.com/users/dismukes/orgs", "repos_url": "https://api.github.com/users/dismukes/repos", "events_url": "https://api.github.com/users/dismukes/events{/privacy}", "received_events_url": "https://api.github.com/users/dismukes/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "773e99ac3e61bd84f9848e78e17867a920f9ae53", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/773e99ac3e61bd84f9848e78e17867a920f9ae53", "html_url": "https://github.com/Rust-GCC/gccrs/commit/773e99ac3e61bd84f9848e78e17867a920f9ae53"}], "stats": {"total": 19, "additions": 19, "deletions": 0}, "files": [{"sha": "b2b81eee9a153a36f77d00c390fee5a69f326b0e", "filename": "gcc/ada/exp_ch6.adb", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c873714ff0cdefda09729bf04a7fc6c049d024f5/gcc%2Fada%2Fexp_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c873714ff0cdefda09729bf04a7fc6c049d024f5/gcc%2Fada%2Fexp_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch6.adb?ref=c873714ff0cdefda09729bf04a7fc6c049d024f5", "patch": "@@ -1446,6 +1446,25 @@ package body Exp_Ch6 is\n          then\n             Init := New_Occurrence_Of (Var, Loc);\n \n+         --  View conversions when the formal type has the Default_Value aspect\n+         --  require passing in the value of the conversion's operand. The type\n+         --  of that operand also has Default_Value, as required by AI12-0074\n+         --  (RM 6.4.1(5.3/4)). The subtype denoted by the subtype_indication\n+         --  is changed to the base type of the formal subtype, to ensure that\n+         --  the actual's value can be assigned without a constraint check\n+         --  (note that no check is done on passing to an out parameter). Also\n+         --  note that the two types necessarily share the same ancestor type,\n+         --  as required by 6.4.1(5.2/4), so underlying base types will match.\n+\n+         elsif Ekind (Formal) = E_Out_Parameter\n+           and then Is_Scalar_Type (Etype (F_Typ))\n+           and then Nkind (Actual) = N_Type_Conversion\n+           and then Present (Default_Aspect_Value (Etype (F_Typ)))\n+         then\n+            Indic := New_Occurrence_Of (Base_Type (F_Typ), Loc);\n+            Init  := Convert_To\n+                       (Base_Type (F_Typ), New_Occurrence_Of (Var, Loc));\n+\n          else\n             Init := Empty;\n          end if;"}]}