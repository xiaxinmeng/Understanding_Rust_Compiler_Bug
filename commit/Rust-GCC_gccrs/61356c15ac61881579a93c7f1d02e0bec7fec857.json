{"sha": "61356c15ac61881579a93c7f1d02e0bec7fec857", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjEzNTZjMTVhYzYxODgxNTc5YTkzYzdmMWQwMmUwYmVjN2ZlYzg1Nw==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo.carlini@oracle.com", "date": "2010-09-09T10:46:04Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2010-09-09T10:46:04Z"}, "message": "cxxabi.h: Uglify nothrow to __nothrow__; fix a few inconsistent uglifications everywhere.\n\n2010-09-09  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\t* libsupc++/cxxabi.h: Uglify nothrow to __nothrow__; fix a few\n\tinconsistent uglifications everywhere.\n\nFrom-SVN: r164073", "tree": {"sha": "4cf7aa30fe2b9c74829affe7389a29f93149a7dd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4cf7aa30fe2b9c74829affe7389a29f93149a7dd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/61356c15ac61881579a93c7f1d02e0bec7fec857", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/61356c15ac61881579a93c7f1d02e0bec7fec857", "html_url": "https://github.com/Rust-GCC/gccrs/commit/61356c15ac61881579a93c7f1d02e0bec7fec857", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/61356c15ac61881579a93c7f1d02e0bec7fec857/comments", "author": null, "committer": null, "parents": [{"sha": "a8930b805234726162dfd5093ef9a99a04b419af", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a8930b805234726162dfd5093ef9a99a04b419af", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a8930b805234726162dfd5093ef9a99a04b419af"}], "stats": {"total": 43, "additions": 24, "deletions": 19}, "files": [{"sha": "86e05b1cf896fcaa8f63d3e530315d6c2463bc9d", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/61356c15ac61881579a93c7f1d02e0bec7fec857/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/61356c15ac61881579a93c7f1d02e0bec7fec857/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=61356c15ac61881579a93c7f1d02e0bec7fec857", "patch": "@@ -1,3 +1,8 @@\n+2010-09-09  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\t* libsupc++/cxxabi.h: Uglify nothrow to __nothrow__; fix a few\n+\tinconsistent uglifications everywhere.\n+\n 2010-09-07  Paolo Carlini  <paolo.carlini@oracle.com>\n \t    Marc Glisse  <marc.glisse@normalesup.org>\n "}, {"sha": "be898d7811a8ea32c9aafda2cb64504f16d46398", "filename": "libstdc++-v3/libsupc++/cxxabi.h", "status": "modified", "additions": 19, "deletions": 19, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/61356c15ac61881579a93c7f1d02e0bec7fec857/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Fcxxabi.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/61356c15ac61881579a93c7f1d02e0bec7fec857/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Fcxxabi.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Fcxxabi.h?ref=61356c15ac61881579a93c7f1d02e0bec7fec857", "patch": "@@ -53,7 +53,7 @@\n #ifdef __cplusplus\n #define _GLIBCXX_NOTHROW throw() \n #else\n-#define _GLIBCXX_NOTHROW __attribute__((nothrow))\n+#define _GLIBCXX_NOTHROW __attribute__((__nothrow__))\n #endif\n \n #ifdef __cplusplus\n@@ -68,55 +68,55 @@ namespace __cxxabiv1\n   // Allocate array.\n   void* \n   __cxa_vec_new(size_t __element_count, size_t __element_size, \n-\t\tsize_t __padding_size, __cxa_cdtor_type constructor,\n-\t\t__cxa_cdtor_type destructor);\n+\t\tsize_t __padding_size, __cxa_cdtor_type __constructor,\n+\t\t__cxa_cdtor_type __destructor);\n \n   void*\n   __cxa_vec_new2(size_t __element_count, size_t __element_size,\n-\t\t size_t __padding_size, __cxa_cdtor_type constructor,\n-\t\t __cxa_cdtor_type destructor, void *(*__alloc) (size_t), \n+\t\t size_t __padding_size, __cxa_cdtor_type __constructor,\n+\t\t __cxa_cdtor_type __destructor, void *(*__alloc) (size_t), \n \t\t void (*__dealloc) (void*));\n \n   void*\n   __cxa_vec_new3(size_t __element_count, size_t __element_size,\n-\t\t size_t __padding_size, __cxa_cdtor_type constructor,\n-\t\t __cxa_cdtor_type destructor, void *(*__alloc) (size_t), \n+\t\t size_t __padding_size, __cxa_cdtor_type __constructor,\n+\t\t __cxa_cdtor_type __destructor, void *(*__alloc) (size_t), \n \t\t void (*__dealloc) (void*, size_t));\n \n   // Construct array.\n   __cxa_vec_ctor_return_type\n   __cxa_vec_ctor(void* __array_address, size_t __element_count,\n-\t\t size_t __element_size, __cxa_cdtor_type constructor,\n-\t\t __cxa_cdtor_type destructor);\n+\t\t size_t __element_size, __cxa_cdtor_type __constructor,\n+\t\t __cxa_cdtor_type __destructor);\n \n   __cxa_vec_ctor_return_type\n-  __cxa_vec_cctor(void* dest_array, void* src_array, size_t element_count, \n-\t\t  size_t element_size, \n-\t\t  __cxa_cdtor_return_type (*constructor) (void*, void*), \n-\t\t  __cxa_cdtor_type destructor);\n+  __cxa_vec_cctor(void* __dest_array, void* __src_array,\n+\t\t  size_t __element_count, size_t __element_size, \n+\t\t  __cxa_cdtor_return_type (*__constructor) (void*, void*), \n+\t\t  __cxa_cdtor_type __destructor);\n  \n   // Destruct array.\n   void \n   __cxa_vec_dtor(void* __array_address, size_t __element_count,\n-\t\t size_t __element_size, __cxa_cdtor_type destructor);\n+\t\t size_t __element_size, __cxa_cdtor_type __destructor);\n   \n   void \n-  __cxa_vec_cleanup(void* __array_address, size_t __element_count,\n-\t\t    size_t __s, __cxa_cdtor_type destructor) _GLIBCXX_NOTHROW;\n+  __cxa_vec_cleanup(void* __array_address, size_t __element_count, size_t __s,\n+\t\t    __cxa_cdtor_type __destructor) _GLIBCXX_NOTHROW;\n   \n   // Destruct and release array.\n   void \n   __cxa_vec_delete(void* __array_address, size_t __element_size,\n-\t\t   size_t __padding_size, __cxa_cdtor_type destructor);\n+\t\t   size_t __padding_size, __cxa_cdtor_type __destructor);\n \n   void \n   __cxa_vec_delete2(void* __array_address, size_t __element_size,\n-\t\t    size_t __padding_size, __cxa_cdtor_type destructor,\n+\t\t    size_t __padding_size, __cxa_cdtor_type __destructor,\n \t\t    void (*__dealloc) (void*));\n                   \n   void \n   __cxa_vec_delete3(void* __array_address, size_t __element_size,\n-\t\t    size_t __padding_size, __cxa_cdtor_type destructor,\n+\t\t    size_t __padding_size, __cxa_cdtor_type __destructor,\n \t\t    void (*__dealloc) (void*, size_t));\n \n   int "}]}