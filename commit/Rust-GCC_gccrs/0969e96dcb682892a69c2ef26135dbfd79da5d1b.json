{"sha": "0969e96dcb682892a69c2ef26135dbfd79da5d1b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDk2OWU5NmRjYjY4Mjg5MmE2OWMyZWYyNjEzNWRiZmQ3OWRhNWQxYg==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-01-20T15:19:15Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-01-20T15:19:15Z"}, "message": "[multiple changes]\n\n2014-01-20  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_util.adb (Check_Function_Writable_Actuals): 1) Do not\n\texamine code that does not come from source. The check does not\n\tapply to code generated for constraint checks, and such code may\n\tgenerate spurious error messages when compiled with expansion\n\tdisabled (as in a generic unit) because side effects may not\n\thave been removed.\n\t2) Make error messages more explicit: indicate the component\n\tof the\tconstruct whose value is indeterminate because of a\n\tcall to a function with in-out parameter in another component,\n\twhen there is no mandated order of execution between the two\n\tcomponents (actuals, aggregate components, alternatives).\n\n2014-01-20  Robert Dewar  <dewar@adacore.com>\n\n\t* gnat_rm.texi: Minor cleanup.\n\nFrom-SVN: r206820", "tree": {"sha": "cc224d258080086338caef7baee697c5b78172ce", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cc224d258080086338caef7baee697c5b78172ce"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0969e96dcb682892a69c2ef26135dbfd79da5d1b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0969e96dcb682892a69c2ef26135dbfd79da5d1b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0969e96dcb682892a69c2ef26135dbfd79da5d1b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0969e96dcb682892a69c2ef26135dbfd79da5d1b/comments", "author": null, "committer": null, "parents": [{"sha": "36eef04a24a933d0198f415be0d4b77b88e782b9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/36eef04a24a933d0198f415be0d4b77b88e782b9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/36eef04a24a933d0198f415be0d4b77b88e782b9"}], "stats": {"total": 74, "additions": 61, "deletions": 13}, "files": [{"sha": "f32cb22851c74253c2e8d87452fa973edecbe998", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0969e96dcb682892a69c2ef26135dbfd79da5d1b/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0969e96dcb682892a69c2ef26135dbfd79da5d1b/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=0969e96dcb682892a69c2ef26135dbfd79da5d1b", "patch": "@@ -1,3 +1,21 @@\n+2014-01-20  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_util.adb (Check_Function_Writable_Actuals): 1) Do not\n+\texamine code that does not come from source. The check does not\n+\tapply to code generated for constraint checks, and such code may\n+\tgenerate spurious error messages when compiled with expansion\n+\tdisabled (as in a generic unit) because side effects may not\n+\thave been removed.\n+\t2) Make error messages more explicit: indicate the component\n+\tof the\tconstruct whose value is indeterminate because of a\n+\tcall to a function with in-out parameter in another component,\n+\twhen there is no mandated order of execution between the two\n+\tcomponents (actuals, aggregate components, alternatives).\n+\n+2014-01-20  Robert Dewar  <dewar@adacore.com>\n+\n+\t* gnat_rm.texi: Minor cleanup.\n+\n 2014-01-20  Hristian Kirtchev  <kirtchev@adacore.com>\n \n \t* sem_attr.adb (Analyze_Attribute): Attributes 'Old and 'Result"}, {"sha": "95e1f9a214a2b045e11e2ad5915dec56e18838a0", "filename": "gcc/ada/gnat_rm.texi", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0969e96dcb682892a69c2ef26135dbfd79da5d1b/gcc%2Fada%2Fgnat_rm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0969e96dcb682892a69c2ef26135dbfd79da5d1b/gcc%2Fada%2Fgnat_rm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_rm.texi?ref=0969e96dcb682892a69c2ef26135dbfd79da5d1b", "patch": "@@ -1390,7 +1390,6 @@ ID_ASSERTION_KIND ::= Assertions           |\n                       Precondition         |\n                       Predicate            |\n                       Refined_Post         |\n-                      Refined_Pre          |\n                       Statement_Assertions\n \n POLICY_IDENTIFIER ::= Check | Disable | Ignore"}, {"sha": "d342e347290e8706bc080de15cd9e5543b17f259", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 43, "deletions": 12, "changes": 55, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0969e96dcb682892a69c2ef26135dbfd79da5d1b/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0969e96dcb682892a69c2ef26135dbfd79da5d1b/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=0969e96dcb682892a69c2ef26135dbfd79da5d1b", "patch": "@@ -1525,6 +1525,7 @@ package body Sem_Util is\n \n          function Check_Node (N : Node_Id) return Traverse_Result is\n             Is_Writable_Actual : Boolean := False;\n+            Id                 : Entity_Id;\n \n          begin\n             if Nkind (N) = N_Identifier then\n@@ -1548,11 +1549,12 @@ package body Sem_Util is\n                elsif Nkind (Parent (N)) = N_Function_Call then\n                   declare\n                      Call   : constant Node_Id   := Parent (N);\n-                     Id     : constant Entity_Id := Get_Function_Id (Call);\n                      Actual : Node_Id;\n                      Formal : Node_Id;\n \n                   begin\n+                     Id := Get_Function_Id (Call);\n+\n                      Formal := First_Formal (Id);\n                      Actual := First_Actual (Call);\n                      while Present (Actual) and then Present (Formal) loop\n@@ -1574,9 +1576,9 @@ package body Sem_Util is\n \n                if Is_Writable_Actual then\n                   if Contains (Writable_Actuals_List, N) then\n-                     Error_Msg_N\n-                       (\"conflict of writable function parameter in \"\n-                        & \"construct with arbitrary order of evaluation\", N);\n+                     Error_Msg_NE\n+                       (\"value may be affected by call to& \"\n+                        & \"because order of evaluation is arbitrary\", N, Id);\n                      Error_Node := N;\n                      return Abandon;\n                   end if;\n@@ -1691,6 +1693,10 @@ package body Sem_Util is\n    --  Start of processing for Check_Function_Writable_Actuals\n \n    begin\n+      --  The check only applies to Ada 2012 code, and only to constructs that\n+      --  have multiple constituents whose order of evaluation is not specified\n+      --  by the language.\n+\n       if Ada_Version < Ada_2012\n         or else (not (Nkind (N) in N_Op)\n                   and then not (Nkind (N) in N_Membership_Test)\n@@ -1702,7 +1708,12 @@ package body Sem_Util is\n                                             N_Procedure_Call_Statement,\n                                             N_Entry_Call_Statement))\n         or else (Nkind (N) = N_Full_Type_Declaration\n-                   and then not Is_Record_Type (Defining_Identifier (N)))\n+                  and then not Is_Record_Type (Defining_Identifier (N)))\n+\n+        --  In addition, this check only applies to source code, not to code\n+        --  generated by constraint checks.\n+\n+        or else not Comes_From_Source (N)\n       then\n          return;\n       end if;\n@@ -1947,9 +1958,9 @@ package body Sem_Util is\n                               --  report occurrences of this case as warnings.\n \n                               Error_Msg_N\n-                                (\"conflict of writable function parameter in \"\n-                                 & \"construct with arbitrary order of \"\n-                                 & \"evaluation?\",\n+                                (\"writable function parameter may affect \"\n+                                 & \"value in other component because order \"\n+                                 & \"of evaluation is unspecified?\",\n                                  Node (First_Elmt (Writable_Actuals_List)));\n                            end if;\n                         end if;\n@@ -2049,10 +2060,30 @@ package body Sem_Util is\n                Elmt_2 := First_Elmt (Identifiers_List);\n                while Present (Elmt_2) loop\n                   if Entity (Node (Elmt_1)) = Entity (Node (Elmt_2)) then\n-                     Error_Msg_N\n-                       (\"conflict of writable function parameter in construct \"\n-                        & \"with arbitrary order of evaluation\",\n-                        Node (Elmt_1));\n+                     case Nkind (Parent (Node (Elmt_2))) is\n+                        when N_Aggregate             |\n+                             N_Component_Association |\n+                             N_Component_Declaration =>\n+                           Error_Msg_N\n+                             (\"value may be affected by call in other \"\n+                              & \"component because they are evaluated \"\n+                              & \"in unspecified order\",\n+                              Node (Elmt_2));\n+\n+                        when N_In | N_Not_In =>\n+                           Error_Msg_N\n+                             (\"value may be affected by call in other \"\n+                              & \"alternative because they are evaluated \"\n+                              & \"in unspecified order\",\n+                              Node (Elmt_2));\n+\n+                        when others =>\n+                           Error_Msg_N\n+                             (\"value of actual may be affected by call in \"\n+                              & \"other actual because they are evaluated \"\n+                              & \"in unspecified order\",\n+                           Node (Elmt_2));\n+                     end case;\n                   end if;\n \n                   Next_Elmt (Elmt_2);"}]}