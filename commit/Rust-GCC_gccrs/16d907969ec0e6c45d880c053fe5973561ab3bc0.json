{"sha": "16d907969ec0e6c45d880c053fe5973561ab3bc0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTZkOTA3OTY5ZWMwZTZjNDVkODgwYzA1M2ZlNTk3MzU2MWFiM2JjMA==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-05-31T05:03:41Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-05-31T05:03:41Z"}, "message": "*** empty log message ***\n\nFrom-SVN: r1130", "tree": {"sha": "edd5705029b1686c390409c67850a05349302c71", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/edd5705029b1686c390409c67850a05349302c71"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/16d907969ec0e6c45d880c053fe5973561ab3bc0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/16d907969ec0e6c45d880c053fe5973561ab3bc0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/16d907969ec0e6c45d880c053fe5973561ab3bc0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/16d907969ec0e6c45d880c053fe5973561ab3bc0/comments", "author": null, "committer": null, "parents": [{"sha": "38bd31fc8eaec677e093abf0342c9c06cadcb57f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/38bd31fc8eaec677e093abf0342c9c06cadcb57f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/38bd31fc8eaec677e093abf0342c9c06cadcb57f"}], "stats": {"total": 13, "additions": 11, "deletions": 2}, "files": [{"sha": "e5d36e76b811c90d275e68993cd4efadbb29189b", "filename": "gcc/sdbout.c", "status": "modified", "additions": 11, "deletions": 2, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16d907969ec0e6c45d880c053fe5973561ab3bc0/gcc%2Fsdbout.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16d907969ec0e6c45d880c053fe5973561ab3bc0/gcc%2Fsdbout.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsdbout.c?ref=16d907969ec0e6c45d880c053fe5973561ab3bc0", "patch": "@@ -597,10 +597,13 @@ sdbout_symbol (decl, local)\n   int regno = -1;\n   char *name;\n \n+  sdbout_one_type (type);\n+\n+#if 0 /* This loses when functions are marked to be ignored,\n+\t which happens in the C++ front end.  */\n   if (DECL_IGNORED_P (decl))\n     return;\n-\n-  sdbout_one_type (type);\n+#endif\n \n   switch (TREE_CODE (decl))\n     {\n@@ -627,6 +630,8 @@ sdbout_symbol (decl, local)\n       /* Done with tagged types.  */\n       if (DECL_NAME (decl) == 0)\n \treturn;\n+      if (DECL_IGNORED_P (decl))\n+\treturn;\n \n       /* Output typedef name.  */\n       PUT_SDB_DEF (IDENTIFIER_POINTER (DECL_NAME (decl)));\n@@ -644,6 +649,10 @@ sdbout_symbol (decl, local)\n       if (TREE_EXTERNAL (decl))\n \treturn;\n \n+      /* Ignore __FUNCTION__, etc.  */\n+      if (DECL_IGNORED_P (decl))\n+\treturn;\n+\n       /* If there was an error in the declaration, don't dump core\n \t if there is no RTL associated with the variable doesn't\n \t exist.  */"}]}