{"sha": "528622fd85a8e2f7c8f70c4e8a9486c4c426c4a5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTI4NjIyZmQ4NWE4ZTJmN2M4ZjcwYzRlOGE5NDg2YzRjNDI2YzRhNQ==", "commit": {"author": {"name": "Janus Weil", "email": "janus@gcc.gnu.org", "date": "2011-02-16T20:51:56Z"}, "committer": {"name": "Janus Weil", "email": "janus@gcc.gnu.org", "date": "2011-02-16T20:51:56Z"}, "message": "re PR fortran/47745 ([OOP] Segfault with CLASS(*) and derived type dummy arguments)\n\n2011-02-16  Janus Weil  <janus@gcc.gnu.org>\n\n\tPR fortran/47745\n\t* class.c (gfc_build_class_symbol): Set 'class_ok' attribute.\n\t* decl.c (build_sym,attr_decl1): Move setting of 'class_ok' into\n\t'gfc_build_class_symbol'.\n\t(gfc_match_decl_type_spec): Reject unlimited polymorphism.\n\t* interface.c (matching_typebound_op): Check for 'class_ok' attribute.\n\t* match.c (select_type_set_tmp): Move setting of 'class_ok' into\n\t'gfc_build_class_symbol'.\n\t* primary.c (gfc_variable_attr): Check for 'class_ok' attribute.\n\n2011-02-16  Janus Weil  <janus@gcc.gnu.org>\n\n\tPR fortran/47745\n\t* gfortran.dg/class_39.f03: New.\n\nFrom-SVN: r170223", "tree": {"sha": "878888203c200925a89236008d41c176a21e0259", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/878888203c200925a89236008d41c176a21e0259"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/528622fd85a8e2f7c8f70c4e8a9486c4c426c4a5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/528622fd85a8e2f7c8f70c4e8a9486c4c426c4a5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/528622fd85a8e2f7c8f70c4e8a9486c4c426c4a5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/528622fd85a8e2f7c8f70c4e8a9486c4c426c4a5/comments", "author": {"login": "janusw", "id": 484108, "node_id": "MDQ6VXNlcjQ4NDEwOA==", "avatar_url": "https://avatars.githubusercontent.com/u/484108?v=4", "gravatar_id": "", "url": "https://api.github.com/users/janusw", "html_url": "https://github.com/janusw", "followers_url": "https://api.github.com/users/janusw/followers", "following_url": "https://api.github.com/users/janusw/following{/other_user}", "gists_url": "https://api.github.com/users/janusw/gists{/gist_id}", "starred_url": "https://api.github.com/users/janusw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/janusw/subscriptions", "organizations_url": "https://api.github.com/users/janusw/orgs", "repos_url": "https://api.github.com/users/janusw/repos", "events_url": "https://api.github.com/users/janusw/events{/privacy}", "received_events_url": "https://api.github.com/users/janusw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "janusw", "id": 484108, "node_id": "MDQ6VXNlcjQ4NDEwOA==", "avatar_url": "https://avatars.githubusercontent.com/u/484108?v=4", "gravatar_id": "", "url": "https://api.github.com/users/janusw", "html_url": "https://github.com/janusw", "followers_url": "https://api.github.com/users/janusw/followers", "following_url": "https://api.github.com/users/janusw/following{/other_user}", "gists_url": "https://api.github.com/users/janusw/gists{/gist_id}", "starred_url": "https://api.github.com/users/janusw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/janusw/subscriptions", "organizations_url": "https://api.github.com/users/janusw/orgs", "repos_url": "https://api.github.com/users/janusw/repos", "events_url": "https://api.github.com/users/janusw/events{/privacy}", "received_events_url": "https://api.github.com/users/janusw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ebcb4bc3047888b1c9a655255c56257ff32dbc0b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ebcb4bc3047888b1c9a655255c56257ff32dbc0b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ebcb4bc3047888b1c9a655255c56257ff32dbc0b"}], "stats": {"total": 73, "additions": 60, "deletions": 13}, "files": [{"sha": "340df016154f0c2623cf402c73a20a9fa18f6d4c", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/528622fd85a8e2f7c8f70c4e8a9486c4c426c4a5/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/528622fd85a8e2f7c8f70c4e8a9486c4c426c4a5/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=528622fd85a8e2f7c8f70c4e8a9486c4c426c4a5", "patch": "@@ -1,3 +1,15 @@\n+2011-02-16  Janus Weil  <janus@gcc.gnu.org>\n+\n+\tPR fortran/47745\n+\t* class.c (gfc_build_class_symbol): Set 'class_ok' attribute.\n+\t* decl.c (build_sym,attr_decl1): Move setting of 'class_ok' into\n+\t'gfc_build_class_symbol'.\n+\t(gfc_match_decl_type_spec): Reject unlimited polymorphism.\n+\t* interface.c (matching_typebound_op): Check for 'class_ok' attribute.\n+\t* match.c (select_type_set_tmp): Move setting of 'class_ok' into\n+\t'gfc_build_class_symbol'.\n+\t* primary.c (gfc_variable_attr): Check for 'class_ok' attribute.\n+\n 2011-02-15  Steven G. Kargl  <kargl@gcc.gnu.org>\n \n \tPR fortran/47633"}, {"sha": "85da3cb2b452d72f652f1e8ac7001f2464320fe2", "filename": "gcc/fortran/class.c", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/528622fd85a8e2f7c8f70c4e8a9486c4c426c4a5/gcc%2Ffortran%2Fclass.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/528622fd85a8e2f7c8f70c4e8a9486c4c426c4a5/gcc%2Ffortran%2Fclass.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fclass.c?ref=528622fd85a8e2f7c8f70c4e8a9486c4c426c4a5", "patch": "@@ -183,6 +183,16 @@ gfc_build_class_symbol (gfc_typespec *ts, symbol_attribute *attr,\n   gfc_symbol *fclass;\n   gfc_symbol *vtab;\n   gfc_component *c;\n+  \n+  if (attr->class_ok)\n+    /* Class container has already been built.  */\n+    return SUCCESS;\n+\n+  attr->class_ok = attr->dummy || attr->pointer  || attr->allocatable;\n+  \n+  if (!attr->class_ok)\n+    /* We can not build the class container yet.  */\n+    return SUCCESS;\n \n   if (*as)\n     {"}, {"sha": "8b5f92b4f8cc8f13a8bec907e6c751cf79092157", "filename": "gcc/fortran/decl.c", "status": "modified", "additions": 12, "deletions": 6, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/528622fd85a8e2f7c8f70c4e8a9486c4c426c4a5/gcc%2Ffortran%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/528622fd85a8e2f7c8f70c4e8a9486c4c426c4a5/gcc%2Ffortran%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fdecl.c?ref=528622fd85a8e2f7c8f70c4e8a9486c4c426c4a5", "patch": "@@ -1177,9 +1177,7 @@ build_sym (const char *name, gfc_charlen *cl, bool cl_deferred,\n \n   sym->attr.implied_index = 0;\n \n-  if (sym->ts.type == BT_CLASS\n-      && (sym->attr.class_ok = sym->attr.dummy || sym->attr.pointer\n-\t\t\t       || sym->attr.allocatable))\n+  if (sym->ts.type == BT_CLASS)\n     return gfc_build_class_symbol (&sym->ts, &sym->attr, &sym->as, false);\n \n   return SUCCESS;\n@@ -2613,6 +2611,16 @@ gfc_match_decl_type_spec (gfc_typespec *ts, int implicit_flag)\n     ts->type = BT_DERIVED;\n   else\n     {\n+      /* Match CLASS declarations.  */\n+      m = gfc_match (\" class ( * )\");\n+      if (m == MATCH_ERROR)\n+\treturn MATCH_ERROR;\n+      else if (m == MATCH_YES)\n+\t{\n+\t  gfc_fatal_error (\"Unlimited polymorphism at %C not yet supported\");\n+\t  return MATCH_ERROR;\n+\t}\n+\n       m = gfc_match (\" class ( %n )\", name);\n       if (m != MATCH_YES)\n \treturn m;\n@@ -6045,9 +6053,7 @@ attr_decl1 (void)\n \t}\n     }\n     \n-  if (sym->ts.type == BT_CLASS && !sym->attr.class_ok\n-      && (sym->attr.class_ok = sym->attr.class_ok || current_attr.allocatable\n-\t\t\t       || current_attr.pointer)\n+  if (sym->ts.type == BT_CLASS\n       && gfc_build_class_symbol (&sym->ts, &sym->attr, &sym->as, false) == FAILURE)\n     {\n       m = MATCH_ERROR;"}, {"sha": "b0b74c14b9f6583a6ca3ec06cd633eefd6ee170e", "filename": "gcc/fortran/interface.c", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/528622fd85a8e2f7c8f70c4e8a9486c4c426c4a5/gcc%2Ffortran%2Finterface.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/528622fd85a8e2f7c8f70c4e8a9486c4c426c4a5/gcc%2Ffortran%2Finterface.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Finterface.c?ref=528622fd85a8e2f7c8f70c4e8a9486c4c426c4a5", "patch": "@@ -2924,7 +2924,11 @@ matching_typebound_op (gfc_expr** tb_base,\n \tgfc_try result;\n \n \tif (base->expr->ts.type == BT_CLASS)\n-\t  derived = CLASS_DATA (base->expr)->ts.u.derived;\n+\t  {\n+\t    if (!gfc_expr_attr (base->expr).class_ok)\n+\t      continue;\n+\t    derived = CLASS_DATA (base->expr)->ts.u.derived;\n+\t  }\n \telse\n \t  derived = base->expr->ts.u.derived;\n "}, {"sha": "d2d9f5f934b46527bac85e3bb9880b0f2ff2cec3", "filename": "gcc/fortran/match.c", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/528622fd85a8e2f7c8f70c4e8a9486c4c426c4a5/gcc%2Ffortran%2Fmatch.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/528622fd85a8e2f7c8f70c4e8a9486c4c426c4a5/gcc%2Ffortran%2Fmatch.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fmatch.c?ref=528622fd85a8e2f7c8f70c4e8a9486c4c426c4a5", "patch": "@@ -4536,11 +4536,8 @@ select_type_set_tmp (gfc_typespec *ts)\n   gfc_add_pointer (&tmp->n.sym->attr, NULL);\n   gfc_add_flavor (&tmp->n.sym->attr, FL_VARIABLE, name, NULL);\n   if (ts->type == BT_CLASS)\n-    {\n-      gfc_build_class_symbol (&tmp->n.sym->ts, &tmp->n.sym->attr,\n-\t\t\t      &tmp->n.sym->as, false);\n-      tmp->n.sym->attr.class_ok = 1;\n-    }\n+    gfc_build_class_symbol (&tmp->n.sym->ts, &tmp->n.sym->attr,\n+\t\t\t    &tmp->n.sym->as, false);\n   tmp->n.sym->attr.select_type_temporary = 1;\n \n   /* Add an association for it, so the rest of the parser knows it is"}, {"sha": "c8e2bb6b0347d26e1dc7b4678b75e85efb1ac211", "filename": "gcc/fortran/primary.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/528622fd85a8e2f7c8f70c4e8a9486c4c426c4a5/gcc%2Ffortran%2Fprimary.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/528622fd85a8e2f7c8f70c4e8a9486c4c426c4a5/gcc%2Ffortran%2Fprimary.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fprimary.c?ref=528622fd85a8e2f7c8f70c4e8a9486c4c426c4a5", "patch": "@@ -2033,7 +2033,7 @@ gfc_variable_attr (gfc_expr *expr, gfc_typespec *ts)\n   sym = expr->symtree->n.sym;\n   attr = sym->attr;\n \n-  if (sym->ts.type == BT_CLASS)\n+  if (sym->ts.type == BT_CLASS && sym->attr.class_ok)\n     {\n       dimension = CLASS_DATA (sym)->attr.dimension;\n       pointer = CLASS_DATA (sym)->attr.class_pointer;"}, {"sha": "19488e8d73bce7c56bccb9953b331c9d484b1618", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/528622fd85a8e2f7c8f70c4e8a9486c4c426c4a5/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/528622fd85a8e2f7c8f70c4e8a9486c4c426c4a5/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=528622fd85a8e2f7c8f70c4e8a9486c4c426c4a5", "patch": "@@ -1,3 +1,8 @@\n+2011-02-16  Janus Weil  <janus@gcc.gnu.org>\n+\n+\tPR fortran/47745\n+\t* gfortran.dg/class_39.f03: New.\n+\n 2011-02-16  Dodji Seketeli  <dodji@redhat.com>\n \n \tPR c++/47326"}, {"sha": "bc8039fc0c522bc4e886a90b73198652d80f22e2", "filename": "gcc/testsuite/gfortran.dg/class_39.f03", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/528622fd85a8e2f7c8f70c4e8a9486c4c426c4a5/gcc%2Ftestsuite%2Fgfortran.dg%2Fclass_39.f03", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/528622fd85a8e2f7c8f70c4e8a9486c4c426c4a5/gcc%2Ftestsuite%2Fgfortran.dg%2Fclass_39.f03", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fclass_39.f03?ref=528622fd85a8e2f7c8f70c4e8a9486c4c426c4a5", "patch": "@@ -0,0 +1,13 @@\n+! { dg-do compile }\n+!\n+! PR 47745: [OOP] Segfault with CLASS(*) and derived type dummy arguments\n+!\n+! Contributed by Rodney Polkinghorne <thisrod@gmail.com>\n+\n+  type, abstract :: T \n+  end type T\n+contains\n+  class(T) function add()  ! { dg-error \"must be dummy, allocatable or pointer\" }\n+    add = 1  ! { dg-error \"Variable must not be polymorphic in assignment\" }\n+  end function\n+end"}]}