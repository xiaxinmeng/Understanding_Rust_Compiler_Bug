{"sha": "d60ab19691ada0d59633e3f3bf562d255055e4c2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDYwYWIxOTY5MWFkYTBkNTk2MzNlM2YzYmY1NjJkMjU1MDU1ZTRjMg==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@codesourcery.com", "date": "2007-01-03T08:42:27Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2007-01-03T08:42:27Z"}, "message": "* cgraphunit.c, tree-ssa-alias.c: Fix comment typos.\n\nFrom-SVN: r120395", "tree": {"sha": "74ed3cc19357a66485f853efefbb68bad27e7cd8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/74ed3cc19357a66485f853efefbb68bad27e7cd8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d60ab19691ada0d59633e3f3bf562d255055e4c2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d60ab19691ada0d59633e3f3bf562d255055e4c2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d60ab19691ada0d59633e3f3bf562d255055e4c2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d60ab19691ada0d59633e3f3bf562d255055e4c2/comments", "author": null, "committer": null, "parents": [{"sha": "c3e188fcaa143800029b5a478f4ac74210ca6879", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c3e188fcaa143800029b5a478f4ac74210ca6879", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c3e188fcaa143800029b5a478f4ac74210ca6879"}], "stats": {"total": 6, "additions": 4, "deletions": 2}, "files": [{"sha": "5529b17927a26f6e5898fe2f782089389643ea3e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d60ab19691ada0d59633e3f3bf562d255055e4c2/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d60ab19691ada0d59633e3f3bf562d255055e4c2/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d60ab19691ada0d59633e3f3bf562d255055e4c2", "patch": "@@ -17,6 +17,8 @@\n \t* tree-complex.c (tree_lower_complex): Likewise.\n \t* vec.h (VEC_safe_grow_cleared): New.\n \n+\t* cgraphunit.c, tree-ssa-alias.c: Fix comment typos.\n+\n 2007-01-03  Zdenek Dvorak <dvorakz@suse.cz>\n \n \t* loop-unswitch.c (unswitch_loop): Pass probabilities to loopify."}, {"sha": "4cbb75f0c72a5a79d1b98d09f23cc046397cfb17", "filename": "gcc/cgraphunit.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d60ab19691ada0d59633e3f3bf562d255055e4c2/gcc%2Fcgraphunit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d60ab19691ada0d59633e3f3bf562d255055e4c2/gcc%2Fcgraphunit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcgraphunit.c?ref=d60ab19691ada0d59633e3f3bf562d255055e4c2", "patch": "@@ -263,7 +263,7 @@ decide_is_function_needed (struct cgraph_node *node, tree decl)\n   return false;\n }\n \n-/* Process CGRAPH_NEW_FUNCTIONS and perform actions neccesary to add these\n+/* Process CGRAPH_NEW_FUNCTIONS and perform actions necessary to add these\n    functions into callgraph in a way so they look like ordinary reachable\n    functions inserted into callgraph already at construction time.  */\n "}, {"sha": "b897090c35e50cc408bacc52f01dfc551e941132", "filename": "gcc/tree-ssa-alias.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d60ab19691ada0d59633e3f3bf562d255055e4c2/gcc%2Ftree-ssa-alias.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d60ab19691ada0d59633e3f3bf562d255055e4c2/gcc%2Ftree-ssa-alias.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-alias.c?ref=d60ab19691ada0d59633e3f3bf562d255055e4c2", "patch": "@@ -3189,7 +3189,7 @@ create_structure_vars (void)\n   htab_delete (used_portions);\n   VEC_free (tree, heap, varvec);\n \n-  /* Update SSA operands of statememnts mentioning varibales we split.  */\n+  /* Update SSA operands of statements mentioning variables we split.  */\n   if (gimple_in_ssa_p (cfun))\n     FOR_EACH_BB (bb)\n       {"}]}