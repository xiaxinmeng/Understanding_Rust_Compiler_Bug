{"sha": "f8c3b097ed6ce43f64f9dfceac2698b0727969ac", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjhjM2IwOTdlZDZjZTQzZjY0ZjlkZmNlYWMyNjk4YjA3Mjc5NjlhYw==", "commit": {"author": {"name": "Paolo Carlini", "email": "pcarlini@suse.de", "date": "2007-08-14T22:07:31Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2007-08-14T22:07:31Z"}, "message": "re PR c++/27211 (Bogus error \"template definition of non-template\" when there is no non-template)\n\n/cp\n2007-08-14  Paolo Carlini  <pcarlini@suse.de>\n\n\tPR c++/27211\n\t* decl2.c (check_classfn): Return error_mark_node in case of error;\n\tin that case, do not call add_method.\n\t* decl.c (start_decl): Deal with check_classfn returning\n\terror_mark_node.\n\t(grokfndecl): Likewise.\n\t* pt.c (tsubst_friend_function): Likewise.\n\n/testsuite\n2007-08-14  Paolo Carlini  <pcarlini@suse.de>\n\n\tPR c++/27211\n\t* g++.dg/template/error27.C: New.\n\t* g++.dg/template/error28.C: New.\n\t* g++.dg/other/pr28304.C: Adjust.\n\t* g++.old-deja/g++.mike/p811.C: Likewise.\n\nFrom-SVN: r127492", "tree": {"sha": "cfdef9633c5c66f00701d87609abaf55113a1456", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cfdef9633c5c66f00701d87609abaf55113a1456"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f8c3b097ed6ce43f64f9dfceac2698b0727969ac", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f8c3b097ed6ce43f64f9dfceac2698b0727969ac", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f8c3b097ed6ce43f64f9dfceac2698b0727969ac", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f8c3b097ed6ce43f64f9dfceac2698b0727969ac/comments", "author": null, "committer": null, "parents": [{"sha": "7b0e48fb44b44241ae79e34a666edc87fdfbeb78", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7b0e48fb44b44241ae79e34a666edc87fdfbeb78", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7b0e48fb44b44241ae79e34a666edc87fdfbeb78"}], "stats": {"total": 64, "additions": 44, "deletions": 20}, "files": [{"sha": "b9fe07f18a52bbe9944f62ef0e3ab13c0f08dbbf", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8c3b097ed6ce43f64f9dfceac2698b0727969ac/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8c3b097ed6ce43f64f9dfceac2698b0727969ac/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=f8c3b097ed6ce43f64f9dfceac2698b0727969ac", "patch": "@@ -1,3 +1,13 @@\n+2007-08-14  Paolo Carlini  <pcarlini@suse.de>\n+\n+\tPR c++/27211\n+\t* decl2.c (check_classfn): Return error_mark_node in case of error;\n+\tin that case, do not call add_method.\n+\t* decl.c (start_decl): Deal with check_classfn returning\n+\terror_mark_node.\n+\t(grokfndecl): Likewise.\n+\t* pt.c (tsubst_friend_function): Likewise.\n+\n 2007-08-14  Andrew Pinski  <pinskia@gmail.com>\n \n \tPR c++/30428"}, {"sha": "9a9436a5624874eb00baf863f09c995c2437c3ba", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 11, "deletions": 8, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8c3b097ed6ce43f64f9dfceac2698b0727969ac/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8c3b097ed6ce43f64f9dfceac2698b0727969ac/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=f8c3b097ed6ce43f64f9dfceac2698b0727969ac", "patch": "@@ -3938,8 +3938,9 @@ start_decl (const cp_declarator *declarator,\n \t\t\t\t       > template_class_depth (context))\n \t\t\t\t      ? current_template_parms\n \t\t\t\t      : NULL_TREE);\n-\t  if (field && duplicate_decls (decl, field,\n-\t\t\t\t\t/*newdecl_is_friend=*/false))\n+\t  if (field && field != error_mark_node\n+\t      && duplicate_decls (decl, field,\n+\t\t\t\t /*newdecl_is_friend=*/false))\n \t    decl = field;\n \t}\n \n@@ -6365,13 +6366,15 @@ grokfndecl (tree ctype,\n       && (! TYPE_FOR_JAVA (ctype) || check_java_method (decl))\n       && check)\n     {\n-      tree old_decl;\n+      tree old_decl = check_classfn (ctype, decl,\n+\t\t\t\t     (processing_template_decl\n+\t\t\t\t      > template_class_depth (ctype))\n+\t\t\t\t     ? current_template_parms\n+\t\t\t\t     : NULL_TREE);\n+\n+      if (old_decl == error_mark_node)\n+\treturn NULL_TREE;\n \n-      old_decl = check_classfn (ctype, decl,\n-\t\t\t\t(processing_template_decl\n-\t\t\t\t > template_class_depth (ctype))\n-\t\t\t\t? current_template_parms\n-\t\t\t\t: NULL_TREE);\n       if (old_decl)\n \t{\n \t  tree ok;"}, {"sha": "d66b7311ce5e53f801886d7642279e74b2b7c82c", "filename": "gcc/cp/decl2.c", "status": "modified", "additions": 3, "deletions": 10, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8c3b097ed6ce43f64f9dfceac2698b0727969ac/gcc%2Fcp%2Fdecl2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8c3b097ed6ce43f64f9dfceac2698b0727969ac/gcc%2Fcp%2Fdecl2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl2.c?ref=f8c3b097ed6ce43f64f9dfceac2698b0727969ac", "patch": "@@ -540,8 +540,8 @@ check_java_method (tree method)\n    TEMPLATE_DECL, it can be NULL since the parameters can be extracted\n    from the declaration. If the function is not a function template, it\n    must be NULL.\n-   It returns the original declaration for the function, or NULL_TREE\n-   if no declaration was found (and an error was emitted).  */\n+   It returns the original declaration for the function, NULL_TREE if\n+   no declaration was found, error_mark_node if an error was emitted.  */\n \n tree\n check_classfn (tree ctype, tree function, tree template_parms)\n@@ -677,16 +677,9 @@ check_classfn (tree ctype, tree function, tree template_parms)\n     error (\"no %q#D member function declared in class %qT\",\n \t   function, ctype);\n \n-  /* If we did not find the method in the class, add it to avoid\n-     spurious errors (unless the CTYPE is not yet defined, in which\n-     case we'll only confuse ourselves when the function is declared\n-     properly within the class.  */\n-  if (COMPLETE_TYPE_P (ctype))\n-    add_method (ctype, function, NULL_TREE);\n-  \n   if (pushed_scope)\n     pop_scope (pushed_scope);\n-  return NULL_TREE;\n+  return error_mark_node;\n }\n \n /* DECL is a function with vague linkage.  Remember it so that at the"}, {"sha": "1baa094292892d7e68f4faba96d9418509a14d0c", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8c3b097ed6ce43f64f9dfceac2698b0727969ac/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8c3b097ed6ce43f64f9dfceac2698b0727969ac/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=f8c3b097ed6ce43f64f9dfceac2698b0727969ac", "patch": "@@ -1,3 +1,11 @@\n+2007-08-14  Paolo Carlini  <pcarlini@suse.de>\n+\n+\tPR c++/27211\n+\t* g++.dg/template/error27.C: New.\n+\t* g++.dg/template/error28.C: New.\n+\t* g++.dg/other/pr28304.C: Adjust.\n+\t* g++.old-deja/g++.mike/p811.C: Likewise.\n+\n 2007-08-14  Rask Ingemann Lambertsen  <rask@sygehus.dk>\n \n \tPR target/30315"}, {"sha": "9a0e9cdd791cadeb9d0bba4a11b8c9f09480aacc", "filename": "gcc/testsuite/g++.dg/other/pr28304.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8c3b097ed6ce43f64f9dfceac2698b0727969ac/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fpr28304.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8c3b097ed6ce43f64f9dfceac2698b0727969ac/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fpr28304.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fpr28304.C?ref=f8c3b097ed6ce43f64f9dfceac2698b0727969ac", "patch": "@@ -7,5 +7,5 @@ template<typename T> void A::foo(T) {}  // { dg-error \"\" }\n \n void bar()\n {\n-    A::foo(1); // { dg-error \"no matching function for call\" }\n+    A::foo(1); // { dg-error \"not a member\" }\n }"}, {"sha": "8d41d0248ef589ed1cd11a4c04330e0baa475e1b", "filename": "gcc/testsuite/g++.dg/template/error27.C", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8c3b097ed6ce43f64f9dfceac2698b0727969ac/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Ferror27.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8c3b097ed6ce43f64f9dfceac2698b0727969ac/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Ferror27.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Ferror27.C?ref=f8c3b097ed6ce43f64f9dfceac2698b0727969ac", "patch": "@@ -0,0 +1,5 @@\n+// PR c++/27211\n+\n+struct A {};\n+\n+template<int> void A::foo() {} // { dg-error \"member function\" }"}, {"sha": "e87d542d8885c55cdda76b1d5c2ec72b1a993bda", "filename": "gcc/testsuite/g++.dg/template/error28.C", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8c3b097ed6ce43f64f9dfceac2698b0727969ac/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Ferror28.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8c3b097ed6ce43f64f9dfceac2698b0727969ac/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Ferror28.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Ferror28.C?ref=f8c3b097ed6ce43f64f9dfceac2698b0727969ac", "patch": "@@ -0,0 +1,5 @@\n+// PR c++/27211\n+\n+struct A {};\n+\n+template<int> void A::foo(); // { dg-error \"member function\" }"}, {"sha": "260c6459cb870794444caf2380d566ebe62eab6c", "filename": "gcc/testsuite/g++.old-deja/g++.mike/p811.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8c3b097ed6ce43f64f9dfceac2698b0727969ac/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Fp811.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8c3b097ed6ce43f64f9dfceac2698b0727969ac/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Fp811.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Fp811.C?ref=f8c3b097ed6ce43f64f9dfceac2698b0727969ac", "patch": "@@ -525,7 +525,7 @@ public:\n char *\n X::stringify() const  // { dg-error \"does not match\" }\n {\n-    return \"stringify\";         // { dg-warning \"deprecated\" }\n+    return \"stringify\";\n }\n \n const char *"}]}