{"sha": "5bd5d85117ce968e68d41a746f917a63ed8e6ae6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWJkNWQ4NTExN2NlOTY4ZTY4ZDQxYTc0NmY5MTdhNjNlZDhlNmFlNg==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "iant@golang.org", "date": "2020-11-27T04:13:16Z"}, "committer": {"name": "Ian Lance Taylor", "email": "iant@golang.org", "date": "2020-12-02T16:30:43Z"}, "message": "compiler: reword \"declared and not used\" error message\n\nThis is a gofrontend copy of https://golang.org/cl/203282.\n\nFrom the CL 203282 description:\n\n    \"declared and not used\" is technically correct, but might confuse\n    the user. Switching \"and\" to \"but\" will hopefully create the\n    contrast for the users: they did one thing (declaration), but\n    not the other --- actually using the variable.\n\nReviewed-on: https://go-review.googlesource.com/c/gofrontend/+/273629", "tree": {"sha": "12e674d271cf7dfb97db1f8a1cc629ecfb58d048", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/12e674d271cf7dfb97db1f8a1cc629ecfb58d048"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5bd5d85117ce968e68d41a746f917a63ed8e6ae6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5bd5d85117ce968e68d41a746f917a63ed8e6ae6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5bd5d85117ce968e68d41a746f917a63ed8e6ae6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5bd5d85117ce968e68d41a746f917a63ed8e6ae6/comments", "author": {"login": "ianlancetaylor", "id": 3194333, "node_id": "MDQ6VXNlcjMxOTQzMzM=", "avatar_url": "https://avatars.githubusercontent.com/u/3194333?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ianlancetaylor", "html_url": "https://github.com/ianlancetaylor", "followers_url": "https://api.github.com/users/ianlancetaylor/followers", "following_url": "https://api.github.com/users/ianlancetaylor/following{/other_user}", "gists_url": "https://api.github.com/users/ianlancetaylor/gists{/gist_id}", "starred_url": "https://api.github.com/users/ianlancetaylor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ianlancetaylor/subscriptions", "organizations_url": "https://api.github.com/users/ianlancetaylor/orgs", "repos_url": "https://api.github.com/users/ianlancetaylor/repos", "events_url": "https://api.github.com/users/ianlancetaylor/events{/privacy}", "received_events_url": "https://api.github.com/users/ianlancetaylor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ianlancetaylor", "id": 3194333, "node_id": "MDQ6VXNlcjMxOTQzMzM=", "avatar_url": "https://avatars.githubusercontent.com/u/3194333?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ianlancetaylor", "html_url": "https://github.com/ianlancetaylor", "followers_url": "https://api.github.com/users/ianlancetaylor/followers", "following_url": "https://api.github.com/users/ianlancetaylor/following{/other_user}", "gists_url": "https://api.github.com/users/ianlancetaylor/gists{/gist_id}", "starred_url": "https://api.github.com/users/ianlancetaylor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ianlancetaylor/subscriptions", "organizations_url": "https://api.github.com/users/ianlancetaylor/orgs", "repos_url": "https://api.github.com/users/ianlancetaylor/repos", "events_url": "https://api.github.com/users/ianlancetaylor/events{/privacy}", "received_events_url": "https://api.github.com/users/ianlancetaylor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ed281e4a944a8b62e66d160b0910bd2be9ef9330", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ed281e4a944a8b62e66d160b0910bd2be9ef9330", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ed281e4a944a8b62e66d160b0910bd2be9ef9330"}], "stats": {"total": 26, "additions": 8, "deletions": 18}, "files": [{"sha": "183e5cae9c98d0f57bee97f3b20d2a91d69f135b", "filename": "gcc/go/gofrontend/MERGE", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5bd5d85117ce968e68d41a746f917a63ed8e6ae6/gcc%2Fgo%2Fgofrontend%2FMERGE", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5bd5d85117ce968e68d41a746f917a63ed8e6ae6/gcc%2Fgo%2Fgofrontend%2FMERGE", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2FMERGE?ref=5bd5d85117ce968e68d41a746f917a63ed8e6ae6", "patch": "@@ -1,4 +1,4 @@\n-720b8fed93143f284ca04358e1b13c8a3487281e\n+6b01f8cdc11d86bd98165c91d6ae101bcf6b9e1a\n \n The first line of this file holds the git revision number of the last\n merge done from the gofrontend repository."}, {"sha": "a5e4521469ba782ed645b32d3ab488efc34af7db", "filename": "gcc/go/gofrontend/gogo.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5bd5d85117ce968e68d41a746f917a63ed8e6ae6/gcc%2Fgo%2Fgofrontend%2Fgogo.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5bd5d85117ce968e68d41a746f917a63ed8e6ae6/gcc%2Fgo%2Fgofrontend%2Fgogo.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2Fgogo.cc?ref=5bd5d85117ce968e68d41a746f917a63ed8e6ae6", "patch": "@@ -3744,7 +3744,7 @@ Check_types_traverse::variable(Named_object* named_object)\n           && !var->type()->is_error()\n           && (init == NULL || !init->is_error_expression())\n           && !Lex::is_invalid_identifier(named_object->name()))\n-\tgo_error_at(var->location(), \"%qs declared and not used\",\n+\tgo_error_at(var->location(), \"%qs declared but not used\",\n \t\t    named_object->message_name().c_str());\n     }\n   return TRAVERSE_CONTINUE;"}, {"sha": "b1925ed8ccceaec8edde381248fe4738c6a8f532", "filename": "gcc/go/gofrontend/parse.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5bd5d85117ce968e68d41a746f917a63ed8e6ae6/gcc%2Fgo%2Fgofrontend%2Fparse.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5bd5d85117ce968e68d41a746f917a63ed8e6ae6/gcc%2Fgo%2Fgofrontend%2Fparse.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2Fparse.cc?ref=5bd5d85117ce968e68d41a746f917a63ed8e6ae6", "patch": "@@ -4817,7 +4817,7 @@ Parse::type_switch_body(Label* label, const Type_switch& type_switch,\n \t    }\n \t}\n       if (!used)\n-\tgo_error_at(type_switch.location, \"%qs declared and not used\",\n+\tgo_error_at(type_switch.location, \"%qs declared but not used\",\n \t\t    Gogo::message_name(var_name).c_str());\n     }\n   return statement;"}, {"sha": "6b7a312097a06095743e5979f4031153efdb7a59", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug373.go", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5bd5d85117ce968e68d41a746f917a63ed8e6ae6/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug373.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5bd5d85117ce968e68d41a746f917a63ed8e6ae6/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug373.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug373.go?ref=5bd5d85117ce968e68d41a746f917a63ed8e6ae6", "patch": "@@ -1,6 +1,6 @@\n // errorcheck\n \n-// Copyright 2011 The Go Authors.  All rights reserved.\n+// Copyright 2011 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n \n@@ -9,7 +9,7 @@\n package foo\n \n func f(x interface{}) {\n-\tswitch t := x.(type) {  // ERROR \"declared and not used\"\n+\tswitch t := x.(type) {  // ERROR \"declared but not used\"\n \tcase int:\n \t}\n }"}, {"sha": "62c96c8330f6010333dce002269511ba3ee49fff", "filename": "gcc/testsuite/go.test/test/typeswitch2.go", "status": "modified", "additions": 3, "deletions": 13, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5bd5d85117ce968e68d41a746f917a63ed8e6ae6/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ftypeswitch2.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5bd5d85117ce968e68d41a746f917a63ed8e6ae6/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ftypeswitch2.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ftypeswitch2.go?ref=5bd5d85117ce968e68d41a746f917a63ed8e6ae6", "patch": "@@ -4,7 +4,7 @@\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n \n-// Verify that various erroneous type switches are caught be the compiler.\n+// Verify that various erroneous type switches are caught by the compiler.\n // Does not compile.\n \n package main\n@@ -26,22 +26,12 @@ func whatis(x interface{}) string {\n \t\tw()\n \t}:\n \t\treturn \"rw\"\n-\tcase interface {\t// GCCGO_ERROR \"duplicate\"\n+\tcase interface {\t// ERROR \"duplicate\"\n \t\tw()\n \t\tr()\n-\t}: // GC_ERROR \"duplicate\"\n+\t}:\n \t\treturn \"wr\"\n \n \t}\n \treturn \"\"\n }\n-\n-func notused(x interface{}) {\n-\t// The first t is in a different scope than the 2nd t; it cannot\n-\t// be accessed (=> declared and not used error); but it is legal\n-\t// to declare it.\n-\tswitch t := 0; t := x.(type) { // ERROR \"declared and not used\"\n-\tcase int:\n-\t\t_ = t // this is using the t of \"t := x.(type)\"\n-\t}\n-}"}]}