{"sha": "9ad8a5f011a1842002d83d8559c068b2d932ad8d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWFkOGE1ZjAxMWExODQyMDAyZDgzZDg1NTljMDY4YjJkOTMyYWQ4ZA==", "commit": {"author": {"name": "Mike Stump", "email": "mrs@wrs.com", "date": "1997-11-02T04:43:34Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1997-11-02T04:43:34Z"}, "message": "except.c (expand_ex_region_start_for_decl): Emit EH_REGION_BEG notes for sjlj exceptions too.\n\n        * except.c (expand_ex_region_start_for_decl): Emit EH_REGION_BEG\n        notes for sjlj exceptions too.\n        (expand_eh_region_end): Similarly for EH_REGION_END notes.\n        (exception_optimize): Optimize EH regions for sjlj exceptions too.\n        * final.c (final_scan_insn): Don't output labels for EH REGION\n        notes if doing sjlj exceptions.\n\nFrom-SVN: r16266", "tree": {"sha": "ba8024cb1dc720576cad966490ee072dd5a264c2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ba8024cb1dc720576cad966490ee072dd5a264c2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9ad8a5f011a1842002d83d8559c068b2d932ad8d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9ad8a5f011a1842002d83d8559c068b2d932ad8d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9ad8a5f011a1842002d83d8559c068b2d932ad8d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9ad8a5f011a1842002d83d8559c068b2d932ad8d/comments", "author": null, "committer": null, "parents": [{"sha": "f8671389c5c97971bc7b20babdf44c0cacf3f5a0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f8671389c5c97971bc7b20babdf44c0cacf3f5a0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f8671389c5c97971bc7b20babdf44c0cacf3f5a0"}], "stats": {"total": 33, "additions": 20, "deletions": 13}, "files": [{"sha": "365826b24ea23b3876c9d7b17864633742a6f0fe", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ad8a5f011a1842002d83d8559c068b2d932ad8d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ad8a5f011a1842002d83d8559c068b2d932ad8d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9ad8a5f011a1842002d83d8559c068b2d932ad8d", "patch": "@@ -1,3 +1,12 @@\n+Sat Nov  1 21:43:00 1997  Mike Stump  (mrs@wrs.com)\n+\n+\t* except.c (expand_ex_region_start_for_decl): Emit EH_REGION_BEG\n+\tnotes for sjlj exceptions too.\n+\t(expand_eh_region_end): Similarly for EH_REGION_END notes.\n+\t(exception_optimize): Optimize EH regions for sjlj exceptions too.\n+\t* final.c (final_scan_insn): Don't output labels for EH REGION\n+\tnotes if doing sjlj exceptions.\n+\n Sat Nov  1 19:15:28 1997  Jeffrey A Law  (law@cygnus.com)\n \n \t* flow.c (find_basic_blocks): If we delete the label for an"}, {"sha": "b506096f6588b2d42dde191a5f96441109d67d6c", "filename": "gcc/except.c", "status": "modified", "additions": 7, "deletions": 11, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ad8a5f011a1842002d83d8559c068b2d932ad8d/gcc%2Fexcept.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ad8a5f011a1842002d83d8559c068b2d932ad8d/gcc%2Fexcept.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexcept.c?ref=9ad8a5f011a1842002d83d8559c068b2d932ad8d", "patch": "@@ -1032,12 +1032,10 @@ expand_eh_region_start_for_decl (decl)\n       expand_dhc_cleanup (decl);\n     }\n \n-  if (exceptions_via_longjmp == 0)\n-    note = emit_note (NULL_PTR, NOTE_INSN_EH_REGION_BEG);\n   push_eh_entry (&ehstack);\n-  if (exceptions_via_longjmp == 0)\n-    NOTE_BLOCK_NUMBER (note)\n-      = CODE_LABEL_NUMBER (ehstack.top->entry->exception_handler_label);\n+  note = emit_note (NULL_PTR, NOTE_INSN_EH_REGION_BEG);\n+  NOTE_BLOCK_NUMBER (note)\n+    = CODE_LABEL_NUMBER (ehstack.top->entry->exception_handler_label);\n   if (exceptions_via_longjmp)\n     start_dynamic_handler ();\n }\n@@ -1066,17 +1064,19 @@ expand_eh_region_end (handler)\n      tree handler;\n {\n   struct eh_entry *entry;\n+  rtx note;\n \n   if (! doing_eh (0))\n     return;\n \n   entry = pop_eh_entry (&ehstack);\n \n+  note = emit_note (NULL_PTR, NOTE_INSN_EH_REGION_END);\n+  NOTE_BLOCK_NUMBER (note)\n+    = CODE_LABEL_NUMBER (entry->exception_handler_label);\n   if (exceptions_via_longjmp == 0)\n     {\n       rtx label;\n-      rtx note = emit_note (NULL_PTR, NOTE_INSN_EH_REGION_END);\n-      NOTE_BLOCK_NUMBER (note) = CODE_LABEL_NUMBER (entry->exception_handler_label);\n \n       label = gen_label_rtx ();\n       emit_jump (label);\n@@ -2136,10 +2136,6 @@ exception_optimize ()\n   rtx insn, regions = NULL_RTX;\n   int n;\n \n-  /* The below doesn't apply to setjmp/longjmp EH.  */\n-  if (exceptions_via_longjmp)\n-    return;\n-\n   /* Remove empty regions.  */\n   for (insn = get_insns (); insn; insn = NEXT_INSN (insn))\n     {"}, {"sha": "d9a410b2b090349fff7bc7b08bbf30df768c1ac8", "filename": "gcc/final.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ad8a5f011a1842002d83d8559c068b2d932ad8d/gcc%2Ffinal.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ad8a5f011a1842002d83d8559c068b2d932ad8d/gcc%2Ffinal.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffinal.c?ref=9ad8a5f011a1842002d83d8559c068b2d932ad8d", "patch": "@@ -1379,7 +1379,8 @@ final_scan_insn (insn, file, optimize, prescan, nopeepholes)\n       if (NOTE_LINE_NUMBER (insn) == NOTE_INSN_LOOP_END)\n \tbreak;\n \n-      if (NOTE_LINE_NUMBER (insn) == NOTE_INSN_EH_REGION_BEG)\n+      if (NOTE_LINE_NUMBER (insn) == NOTE_INSN_EH_REGION_BEG\n+\t  && ! exceptions_via_longjmp)\n \t{\n \t  ASM_OUTPUT_INTERNAL_LABEL (file, \"LEHB\", NOTE_BLOCK_NUMBER (insn));\n \t  add_eh_table_entry (NOTE_BLOCK_NUMBER (insn));\n@@ -1389,7 +1390,8 @@ final_scan_insn (insn, file, optimize, prescan, nopeepholes)\n \t  break;\n \t}\n \n-      if (NOTE_LINE_NUMBER (insn) == NOTE_INSN_EH_REGION_END)\n+      if (NOTE_LINE_NUMBER (insn) == NOTE_INSN_EH_REGION_END\n+\t  && ! exceptions_via_longjmp)\n \t{\n \t  ASM_OUTPUT_INTERNAL_LABEL (file, \"LEHE\", NOTE_BLOCK_NUMBER (insn));\n #ifdef ASM_OUTPUT_EH_REGION_END"}]}