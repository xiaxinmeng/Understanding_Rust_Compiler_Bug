{"sha": "bbf1aec2f2fe43f4afd7afe413b9953f0dc458f8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmJmMWFlYzJmMmZlNDNmNGFmZDdhZmU0MTNiOTk1M2YwZGM0NThmOA==", "commit": {"author": {"name": "Robert Dewar", "email": "dewar@adacore.com", "date": "2013-07-05T09:47:41Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2013-07-05T09:47:41Z"}, "message": "par_sco.adb, [...]: Minor reformatting.\n\n2013-07-05  Robert Dewar  <dewar@adacore.com>\n\n\t* par_sco.adb, sem_ch12.adb, par-ch5.adb: Minor reformatting.\n\t* gnat_rm.texi: Document pragma Profile_Warnings.\n\t* restrict.ads, sem_prag.adb: Minor reformatting.\n\nFrom-SVN: r200695", "tree": {"sha": "2c6b5f451442d7c50383365b84a2a572088750f2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2c6b5f451442d7c50383365b84a2a572088750f2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bbf1aec2f2fe43f4afd7afe413b9953f0dc458f8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bbf1aec2f2fe43f4afd7afe413b9953f0dc458f8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bbf1aec2f2fe43f4afd7afe413b9953f0dc458f8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bbf1aec2f2fe43f4afd7afe413b9953f0dc458f8/comments", "author": null, "committer": null, "parents": [{"sha": "fd3fa68fbb878ec9bf5224069105fc09e8fe439d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fd3fa68fbb878ec9bf5224069105fc09e8fe439d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fd3fa68fbb878ec9bf5224069105fc09e8fe439d"}], "stats": {"total": 213, "additions": 124, "deletions": 89}, "files": [{"sha": "ca13bc8f3ccb4ce5c3935fe5824bbfaf652cf3f4", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bbf1aec2f2fe43f4afd7afe413b9953f0dc458f8/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bbf1aec2f2fe43f4afd7afe413b9953f0dc458f8/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=bbf1aec2f2fe43f4afd7afe413b9953f0dc458f8", "patch": "@@ -1,3 +1,9 @@\n+2013-07-05  Robert Dewar  <dewar@adacore.com>\n+\n+\t* par_sco.adb, sem_ch12.adb, par-ch5.adb: Minor reformatting.\n+\t* gnat_rm.texi: Document pragma Profile_Warnings.\n+\t* restrict.ads, sem_prag.adb: Minor reformatting.\n+\n 2013-07-05  Ed Schonberg  <schonberg@adacore.com>\n \n \t* sem_ch12.adb (Check_Formal_Package_Instance): Handle properly"}, {"sha": "52b036af1b45dc54270d4a90f1bb3440ea45c5fc", "filename": "gcc/ada/gnat_rm.texi", "status": "modified", "additions": 49, "deletions": 34, "changes": 83, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bbf1aec2f2fe43f4afd7afe413b9953f0dc458f8/gcc%2Fada%2Fgnat_rm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bbf1aec2f2fe43f4afd7afe413b9953f0dc458f8/gcc%2Fada%2Fgnat_rm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_rm.texi?ref=bbf1aec2f2fe43f4afd7afe413b9953f0dc458f8", "patch": "@@ -203,9 +203,8 @@ Implementation Defined Pragmas\n * Pragma Precondition::\n * Pragma Preelaborable_Initialization::\n * Pragma Priority_Specific_Dispatching::\n-* Pragma Profile (Ravenscar)::\n-* Pragma Profile (Restricted)::\n-* Pragma Profile (Rational)::\n+* Pragma Profile::\n+* Pragma Profile_Warnings::\n * Pragma Psect_Object::\n * Pragma Pure_Function::\n * Pragma Relative_Deadline::\n@@ -1001,9 +1000,8 @@ consideration, the use of these pragmas should be minimized.\n * Pragma Precondition::\n * Pragma Preelaborable_Initialization::\n * Pragma Priority_Specific_Dispatching::\n-* Pragma Profile (Ravenscar)::\n-* Pragma Profile (Restricted)::\n-* Pragma Profile (Rational)::\n+* Pragma Profile::\n+* Pragma Profile_Warnings::\n * Pragma Psect_Object::\n * Pragma Pure_Function::\n * Pragma Relative_Deadline::\n@@ -5074,21 +5072,35 @@ inlining (-gnatN option set) are accepted and legality-checked\n by the compiler, but are ignored at run-time even if postcondition\n checking is enabled.\n \n-@node Pragma Profile (Ravenscar)\n-@unnumberedsec Pragma Profile (Ravenscar)\n-@findex Ravenscar\n+@node Pragma Profile\n+@unnumberedsec Pragma Profile\n+@findex Profile\n @noindent\n Syntax:\n \n @smallexample @c ada\n-pragma Profile (Ravenscar | Restricted);\n+pragma Profile (Ravenscar | Restricted | Rational);\n @end smallexample\n \n @noindent\n This pragma is standard in Ada 2005, but is available in all earlier\n versions of Ada as an implementation-defined pragma. This is a\n-configuration pragma that establishes the following set of configuration\n-pragmas:\n+configuration pragma that establishes a set of configiuration pragmas\n+that depend on the argument. @code{Ravenscar} is standard in Ada 2005.\n+The other two possibilities (@code{Restricted} or @code{Rational})\n+are implementation-defined. The set of configuration pragmas\n+is defined in the following sections.\n+\n+@itemize\n+\n+@item Pragma Profile (Ravenscar)\n+@findex Ravenscar\n+@noindent\n+\n+The @code{Ravenscar} profile is standard in Ada 2005,\n+but is available in all earlier\n+versions of Ada as an implementation-defined pragma. This profile\n+establishes the following set of configuration pragmas:\n \n @table @code\n @item Task_Dispatching_Policy (FIFO_Within_Priorities)\n@@ -5172,20 +5184,11 @@ that pragma @code{Profile (Ravenscar)}, like the pragma\n automatically causes the use of a simplified,\n more efficient version of the tasking run-time system.\n \n-@node Pragma Profile (Restricted)\n-@unnumberedsec Pragma Profile (Restricted)\n+@item Pragma Profile (Restricted)\n @findex Restricted Run Time\n @noindent\n-Syntax:\n-\n-@smallexample @c ada\n-pragma Profile (Restricted);\n-@end smallexample\n-\n-@noindent\n-This is an implementation-defined version of the standard pragma defined\n-in Ada 2005. It is available in all versions of Ada. It is a\n-configuration pragma that establishes the following set of restrictions:\n+This profile corresponds to the GNAT restricted run time. It\n+establishes the following set of restrictions:\n \n @itemize @bullet\n @item No_Abort_Statements\n@@ -5210,28 +5213,39 @@ This set of restrictions causes the automatic selection of a simplified\n version of the run time that provides improved performance for the\n limited set of tasking functionality permitted by this set of restrictions.\n \n-@node Pragma Profile (Rational)\n-@unnumberedsec Pragma Profile (Rational)\n+@item Pragma Profile (Rational)\n @findex Rational compatibility mode\n-@noindent\n-Syntax:\n-\n-@smallexample @c ada\n-pragma Profile (Rational);\n-@end smallexample\n-\n @noindent\n The Rational profile is intended to facilitate porting legacy code that\n compiles with the Rational APEX compiler, even when the code includes non-\n conforming Ada constructs.  The profile enables the following three pragmas:\n \n-\n @itemize @bullet\n @item pragma Implicit_Packing\n @item pragma Overriding_Renamings\n @item pragma Use_VADS_Size\n @end itemize\n \n+@end itemize\n+\n+@node Pragma Profile_Warnings\n+@unnumberedsec Pragma Profile_Warnings\n+@findex Profile_Warnings\n+@noindent\n+Syntax:\n+\n+@smallexample @c ada\n+pragma Profile_Warnings (Ravenscar | Restricted | Rational);\n+@end smallexample\n+\n+@noindent\n+This is an implementation-defined pragma that is similar in\n+effect to @code{pragma Profile} except that instead of\n+generating @code{Restrictions} pragmas, it generates\n+@code{Restriction_Warnings} pragmas. The result is that\n+violations of the profile generate warning messages instead\n+of error messages.\n+\n @noindent\n @node Pragma Psect_Object\n @unnumberedsec Pragma Psect_Object\n@@ -20436,3 +20450,4 @@ this kind of implementation dependent addition.\n @contents\n \n @bye\n+tablishes the following set of restrictions:"}, {"sha": "e9b0a2c8e95cdde3472ac68a092f4fda9f3a8fe1", "filename": "gcc/ada/par-ch5.adb", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bbf1aec2f2fe43f4afd7afe413b9953f0dc458f8/gcc%2Fada%2Fpar-ch5.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bbf1aec2f2fe43f4afd7afe413b9953f0dc458f8/gcc%2Fada%2Fpar-ch5.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-ch5.adb?ref=bbf1aec2f2fe43f4afd7afe413b9953f0dc458f8", "patch": "@@ -595,7 +595,8 @@ package body Ch5 is\n                      --  For statement (labeled loop statement with FOR)\n \n                      elsif Token = Tok_For then\n-                        Append_To (Statement_List, P_For_Statement (Id_Node));\n+                        Append_To (Statement_List,\n+                          P_For_Statement (Id_Node));\n \n                      --  Improper statement follows label. If we have an\n                      --  expression token, then assume the colon was part"}, {"sha": "ce54f117e34ba4c60a0b4a500a508a875df311af", "filename": "gcc/ada/par_sco.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bbf1aec2f2fe43f4afd7afe413b9953f0dc458f8/gcc%2Fada%2Fpar_sco.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bbf1aec2f2fe43f4afd7afe413b9953f0dc458f8/gcc%2Fada%2Fpar_sco.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar_sco.adb?ref=bbf1aec2f2fe43f4afd7afe413b9953f0dc458f8", "patch": "@@ -2102,6 +2102,7 @@ package body Par_SCO is\n             if Nkind (N) /= N_Implicit_Label_Declaration then\n                Traverse_One (N);\n             end if;\n+\n             Next (N);\n          end loop;\n "}, {"sha": "181541acc8fe1f7af4b5c0aaf672bcceb1ff7912", "filename": "gcc/ada/restrict.ads", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bbf1aec2f2fe43f4afd7afe413b9953f0dc458f8/gcc%2Fada%2Frestrict.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bbf1aec2f2fe43f4afd7afe413b9953f0dc458f8/gcc%2Fada%2Frestrict.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Frestrict.ads?ref=bbf1aec2f2fe43f4afd7afe413b9953f0dc458f8", "patch": "@@ -101,9 +101,9 @@ package Restrict is\n      (No_Unchecked_Deallocation,   \"a-uncdea\"),\n      (No_Unchecked_Deallocation,   \"unchdeal\"));\n \n-   --  The following map has True for all GNAT pragmas. It is used to\n-   --  implement pragma Restrictions (No_Implementation_Restrictions)\n-   --  (which is why this restriction itself is excluded from the list).\n+   --  The following map has True for all GNAT-defined Restrictions. It is used\n+   --  to implement pragma Restrictions (No_Implementation_Restrictions) (which\n+   --  is why this restriction itself is excluded from the list).\n \n    Implementation_Restriction : array (All_Restrictions) of Boolean :=\n      (Simple_Barriers                    => True,"}, {"sha": "6749f2e436b312c727888cb34639d0bcc9d022b4", "filename": "gcc/ada/sem_ch12.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bbf1aec2f2fe43f4afd7afe413b9953f0dc458f8/gcc%2Fada%2Fsem_ch12.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bbf1aec2f2fe43f4afd7afe413b9953f0dc458f8/gcc%2Fada%2Fsem_ch12.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch12.adb?ref=bbf1aec2f2fe43f4afd7afe413b9953f0dc458f8", "patch": "@@ -5226,8 +5226,8 @@ package body Sem_Ch12 is\n          --  Ditto for defaulted formal subprograms.\n \n          elsif Is_Overloadable (E1)\n-           and then Nkind (Unit_Declaration_Node (E2))\n-             in N_Formal_Subprogram_Declaration\n+           and then Nkind (Unit_Declaration_Node (E2)) in\n+                      N_Formal_Subprogram_Declaration\n          then\n             goto Next_E;\n "}, {"sha": "233f83fbbdafd53a0f5c56481c1951a8f9ac3994", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 61, "deletions": 49, "changes": 110, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bbf1aec2f2fe43f4afd7afe413b9953f0dc458f8/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bbf1aec2f2fe43f4afd7afe413b9953f0dc458f8/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=bbf1aec2f2fe43f4afd7afe413b9953f0dc458f8", "patch": "@@ -3746,7 +3746,6 @@ package body Sem_Prag is\n       begin\n          --  First check pragma arguments\n \n-         GNAT_Pragma;\n          Check_At_Least_N_Arguments (2);\n          Check_At_Most_N_Arguments (4);\n          Check_Arg_Order\n@@ -5295,7 +5294,6 @@ package body Sem_Prag is\n \n       procedure Process_Disable_Enable_Atomic_Sync (Nam : Name_Id) is\n       begin\n-         GNAT_Pragma;\n          Check_No_Identifiers;\n          Check_At_Most_N_Arguments (1);\n \n@@ -9656,8 +9654,8 @@ package body Sem_Prag is\n          --  pragma Check_Name (check_IDENTIFIER);\n \n          when Pragma_Check_Name =>\n-            Check_No_Identifiers;\n             GNAT_Pragma;\n+            Check_No_Identifiers;\n             Check_Valid_Configuration_Pragma;\n             Check_Arg_Count (1);\n             Check_Arg_Is_Identifier (Arg1);\n@@ -10667,6 +10665,7 @@ package body Sem_Prag is\n          --  pragma Disable_Atomic_Synchronization [(Entity)];\n \n          when Pragma_Disable_Atomic_Synchronization =>\n+            GNAT_Pragma;\n             Process_Disable_Enable_Atomic_Sync (Name_Suppress);\n \n          -------------------\n@@ -11098,6 +11097,7 @@ package body Sem_Prag is\n          --  pragma Enable_Atomic_Synchronization [(Entity)];\n \n          when Pragma_Enable_Atomic_Synchronization =>\n+            GNAT_Pragma;\n             Process_Disable_Enable_Atomic_Sync (Name_Unsuppress);\n \n          ------------\n@@ -11598,6 +11598,18 @@ package body Sem_Prag is\n             end case;\n          end External_Name_Casing;\n \n+         ---------------\n+         -- Fast_Math --\n+         ---------------\n+\n+         --  pragma Fast_Math;\n+\n+         when Pragma_Fast_Math =>\n+            GNAT_Pragma;\n+            Check_No_Identifiers;\n+            Check_Valid_Configuration_Pragma;\n+            Fast_Math := True;\n+\n          --------------------------\n          -- Favor_Top_Level --\n          --------------------------\n@@ -11629,18 +11641,6 @@ package body Sem_Prag is\n             end if;\n          end Favor_Top_Level;\n \n-         ---------------\n-         -- Fast_Math --\n-         ---------------\n-\n-         --  pragma Fast_Math;\n-\n-         when Pragma_Fast_Math =>\n-            GNAT_Pragma;\n-            Check_No_Identifiers;\n-            Check_Valid_Configuration_Pragma;\n-            Fast_Math := True;\n-\n          ---------------------------\n          -- Finalize_Storage_Only --\n          ---------------------------\n@@ -11965,6 +11965,7 @@ package body Sem_Prag is\n             Ent : Entity_Id;\n \n          begin\n+            GNAT_Pragma;\n             Check_No_Identifiers;\n \n             --  Form with no arguments\n@@ -14477,6 +14478,41 @@ package body Sem_Prag is\n             Optimize_Alignment_Local := True;\n          end Optimize_Alignment;\n \n+         -------------\n+         -- Ordered --\n+         -------------\n+\n+         --  pragma Ordered (first_enumeration_subtype_LOCAL_NAME);\n+\n+         when Pragma_Ordered => Ordered : declare\n+            Assoc   : constant Node_Id := Arg1;\n+            Type_Id : Node_Id;\n+            Typ     : Entity_Id;\n+\n+         begin\n+            GNAT_Pragma;\n+            Check_No_Identifiers;\n+            Check_Arg_Count (1);\n+            Check_Arg_Is_Local_Name (Arg1);\n+\n+            Type_Id := Get_Pragma_Arg (Assoc);\n+            Find_Type (Type_Id);\n+            Typ := Entity (Type_Id);\n+\n+            if Typ = Any_Type then\n+               return;\n+            else\n+               Typ := Underlying_Type (Typ);\n+            end if;\n+\n+            if not Is_Enumeration_Type (Typ) then\n+               Error_Pragma (\"pragma% must specify enumeration type\");\n+            end if;\n+\n+            Check_First_Subtype (Arg1);\n+            Set_Has_Pragma_Ordered (Base_Type (Typ));\n+         end Ordered;\n+\n          -------------------\n          -- Overflow_Mode --\n          -------------------\n@@ -14557,43 +14593,16 @@ package body Sem_Prag is\n             end if;\n          end Overflow_Mode;\n \n-         when Pragma_Overriding_Renamings =>\n-            Overriding_Renamings := True;\n-\n-         -------------\n-         -- Ordered --\n-         -------------\n-\n-         --  pragma Ordered (first_enumeration_subtype_LOCAL_NAME);\n+         --------------------------\n+         -- Overriding Renamings --\n+         --------------------------\n \n-         when Pragma_Ordered => Ordered : declare\n-            Assoc   : constant Node_Id := Arg1;\n-            Type_Id : Node_Id;\n-            Typ     : Entity_Id;\n+         --  pragma Overriding_Renamings;\n \n-         begin\n+         when Pragma_Overriding_Renamings =>\n             GNAT_Pragma;\n-            Check_No_Identifiers;\n-            Check_Arg_Count (1);\n-            Check_Arg_Is_Local_Name (Arg1);\n-\n-            Type_Id := Get_Pragma_Arg (Assoc);\n-            Find_Type (Type_Id);\n-            Typ := Entity (Type_Id);\n-\n-            if Typ = Any_Type then\n-               return;\n-            else\n-               Typ := Underlying_Type (Typ);\n-            end if;\n-\n-            if not Is_Enumeration_Type (Typ) then\n-               Error_Pragma (\"pragma% must specify enumeration type\");\n-            end if;\n-\n-            Check_First_Subtype (Arg1);\n-            Set_Has_Pragma_Ordered (Base_Type (Typ));\n-         end Ordered;\n+            Check_Arg_Count (0);\n+            Overriding_Renamings := True;\n \n          ----------\n          -- Pack --\n@@ -15458,6 +15467,8 @@ package body Sem_Prag is\n             GNAT_Pragma;\n             Check_Arg_Count (0);\n \n+            --  This code does not agree with above (no effect) comment ???\n+\n             if In_Extended_Main_Source_Unit (N) then\n                Propagate_Exceptions := True;\n             end if;\n@@ -16896,6 +16907,7 @@ package body Sem_Prag is\n          --  MODE_TYPE ::= Nominal | Robustness\n \n          when Pragma_Test_Case =>\n+            GNAT_Pragma;\n             Check_Test_Case;\n \n          --------------------------"}]}