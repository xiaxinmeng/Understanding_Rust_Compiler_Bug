{"sha": "e27051f71bf83b124c2672659ce075c33544b384", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTI3MDUxZjcxYmY4M2IxMjRjMjY3MjY1OWNlMDc1YzMzNTQ0YjM4NA==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@cs.umass.edu", "date": "2002-11-12T14:01:33Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2002-11-12T14:01:33Z"}, "message": "h8300.c (single_one_operand): Correctly compute mask when mode is SImode.\n\n\t* config/h8300/h8300.c (single_one_operand): Correctly compute\n\tmask when mode is SImode.\n\t(single_zero_operand): Likewise.\n\t* config/h8300/h8300.md (two new anonymous insns): New.\n\nFrom-SVN: r59050", "tree": {"sha": "623d9f0068221865a412e4cd652776df27d07bdd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/623d9f0068221865a412e4cd652776df27d07bdd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e27051f71bf83b124c2672659ce075c33544b384", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e27051f71bf83b124c2672659ce075c33544b384", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e27051f71bf83b124c2672659ce075c33544b384", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e27051f71bf83b124c2672659ce075c33544b384/comments", "author": null, "committer": null, "parents": [{"sha": "10bb8214f8967b1360b09c2a8e4b2157da334df6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/10bb8214f8967b1360b09c2a8e4b2157da334df6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/10bb8214f8967b1360b09c2a8e4b2157da334df6"}], "stats": {"total": 52, "additions": 50, "deletions": 2}, "files": [{"sha": "f39d76b80fed089c08b5b3c418b1b6467b5c000b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e27051f71bf83b124c2672659ce075c33544b384/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e27051f71bf83b124c2672659ce075c33544b384/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e27051f71bf83b124c2672659ce075c33544b384", "patch": "@@ -1,3 +1,10 @@\n+2002-11-12  Kazu Hirata  <kazu@cs.umass.edu>\n+\n+\t* config/h8300/h8300.c (single_one_operand): Correctly compute\n+\tmask when mode is SImode.\n+\t(single_zero_operand): Likewise.\n+\t* config/h8300/h8300.md (two new anonymous insns): New.\n+\n 2002-11-12  Gerald Pfeifer  <pfeifer@dbai.tuwien.ac.at>\n \n \t* doc/contrib.texi (Contributors): Use GCJ instead of gcj to refer"}, {"sha": "56a06a099cbc37ec6fa750c72454428223df5a02", "filename": "gcc/config/h8300/h8300.c", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e27051f71bf83b124c2672659ce075c33544b384/gcc%2Fconfig%2Fh8300%2Fh8300.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e27051f71bf83b124c2672659ce075c33544b384/gcc%2Fconfig%2Fh8300%2Fh8300.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fh8300%2Fh8300.c?ref=e27051f71bf83b124c2672659ce075c33544b384", "patch": "@@ -763,7 +763,9 @@ single_one_operand (operand, mode)\n       /* We really need to do this masking because 0x80 in QImode is\n \t represented as -128 for example.  */\n       unsigned HOST_WIDE_INT mask =\n-\t((unsigned HOST_WIDE_INT) 1 << GET_MODE_BITSIZE (mode)) - 1;\n+\t(GET_MODE_BITSIZE (mode) < HOST_BITS_PER_WIDE_INT)\n+\t? ((unsigned HOST_WIDE_INT) 1 << GET_MODE_BITSIZE (mode)) - 1\n+\t: ~0;\n       unsigned HOST_WIDE_INT value = INTVAL (operand);\n \n       if (exact_log2 (value & mask) >= 0)\n@@ -786,7 +788,9 @@ single_zero_operand (operand, mode)\n       /* We really need to do this masking because 0x80 in QImode is\n \t represented as -128 for example.  */\n       unsigned HOST_WIDE_INT mask =\n-\t((unsigned HOST_WIDE_INT) 1 << GET_MODE_BITSIZE (mode)) - 1;\n+\t(GET_MODE_BITSIZE (mode) < HOST_BITS_PER_WIDE_INT)\n+\t? ((unsigned HOST_WIDE_INT) 1 << GET_MODE_BITSIZE (mode)) - 1\n+\t: ~0;\n       unsigned HOST_WIDE_INT value = INTVAL (operand);\n \n       if (exact_log2 (~value & mask) >= 0)"}, {"sha": "129ff630e3a6e399612ce60bdd634bf5728fe748", "filename": "gcc/config/h8300/h8300.md", "status": "modified", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e27051f71bf83b124c2672659ce075c33544b384/gcc%2Fconfig%2Fh8300%2Fh8300.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e27051f71bf83b124c2672659ce075c33544b384/gcc%2Fconfig%2Fh8300%2Fh8300.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fh8300%2Fh8300.md?ref=e27051f71bf83b124c2672659ce075c33544b384", "patch": "@@ -599,6 +599,43 @@\n   [(set_attr \"length\" \"2\")\n    (set_attr \"cc\" \"set_zn\")])\n \n+(define_insn \"\"\n+  [(set (cc0)\n+\t(and:HI (match_operand:HI 0 \"register_operand\" \"r\")\n+\t\t(match_operand:HI 1 \"single_one_operand\" \"n\")))]\n+  \"\"\n+  \"*\n+{\n+  operands[1] = GEN_INT (INTVAL (operands[1]) & 0xffff);\n+  if (INTVAL (operands[1]) > 128)\n+    {\n+      operands[1] = GEN_INT (INTVAL (operands[1]) >> 8);\n+      return \\\"btst\\\\t%V1,%t0\\\";\n+    }\n+  return \\\"btst\\\\t%V1,%s0\\\";\n+}\"\n+  [(set_attr \"length\" \"2\")\n+   (set_attr \"cc\" \"set_zn\")])\n+\n+(define_insn \"\"\n+  [(set (cc0)\n+\t(and:SI (match_operand:SI 0 \"register_operand\" \"r\")\n+\t\t(match_operand:SI 1 \"single_one_operand\" \"n\")))]\n+  \"(TARGET_H8300H || TARGET_H8300S)\n+   && (INTVAL (operands[1]) & 0xffff) != 0\"\n+  \"*\n+{\n+  operands[1] = GEN_INT (INTVAL (operands[1]) & 0xffff);\n+  if (INTVAL (operands[1]) > 128)\n+    {\n+      operands[1] = GEN_INT (INTVAL (operands[1]) >> 8);\n+      return \\\"btst\\\\t%V1,%x0\\\";\n+    }\n+  return \\\"btst\\\\t%V1,%w0\\\";\n+}\"\n+  [(set_attr \"length\" \"2\")\n+   (set_attr \"cc\" \"set_zn\")])\n+\n (define_insn \"tstqi\"\n   [(set (cc0) (match_operand:QI 0 \"register_operand\" \"r\"))]\n   \"\""}]}