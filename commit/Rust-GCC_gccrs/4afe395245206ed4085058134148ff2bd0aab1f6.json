{"sha": "4afe395245206ed4085058134148ff2bd0aab1f6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGFmZTM5NTI0NTIwNmVkNDA4NTA1ODEzNDE0OGZmMmJkMGFhYjFmNg==", "commit": {"author": {"name": "Janis Johnson", "email": "janis187@us.ibm.com", "date": "2002-05-06T23:33:10Z"}, "committer": {"name": "Janis Johnson", "email": "janis@gcc.gnu.org", "date": "2002-05-06T23:33:10Z"}, "message": "* doc/rtl.texi (Flags): Update to reflect current usage.\n\nFrom-SVN: r53242", "tree": {"sha": "f1fc0939d1c0c299750d83391449d04e3cdc4b2d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f1fc0939d1c0c299750d83391449d04e3cdc4b2d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4afe395245206ed4085058134148ff2bd0aab1f6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4afe395245206ed4085058134148ff2bd0aab1f6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4afe395245206ed4085058134148ff2bd0aab1f6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4afe395245206ed4085058134148ff2bd0aab1f6/comments", "author": null, "committer": null, "parents": [{"sha": "1f77b5da981dae69e8e8d7ea3dc60ba95150c267", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1f77b5da981dae69e8e8d7ea3dc60ba95150c267", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1f77b5da981dae69e8e8d7ea3dc60ba95150c267"}], "stats": {"total": 91, "additions": 53, "deletions": 38}, "files": [{"sha": "cfa506cf481163ddad6a4ae212538f6cabd387e3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4afe395245206ed4085058134148ff2bd0aab1f6/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4afe395245206ed4085058134148ff2bd0aab1f6/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4afe395245206ed4085058134148ff2bd0aab1f6", "patch": "@@ -1,3 +1,7 @@\n+2002-05-06  Janis Johnson  <janis187@us.ibm.com>\n+\n+\t* doc/rtl.texi (Flags): Update to reflect current usage.\n+\n 2002-05-06  Roger Sayle  <roger@eyesopen.com>\n \n \tPR opt/3995"}, {"sha": "e244612c8f452e2310b48bafe585cb54ba97aaa3", "filename": "gcc/doc/rtl.texi", "status": "modified", "additions": 49, "deletions": 38, "changes": 87, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4afe395245206ed4085058134148ff2bd0aab1f6/gcc%2Fdoc%2Frtl.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4afe395245206ed4085058134148ff2bd0aab1f6/gcc%2Fdoc%2Frtl.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Frtl.texi?ref=4afe395245206ed4085058134148ff2bd0aab1f6", "patch": "@@ -371,7 +371,7 @@ to access them.\n \n RTL expressions contain several flags (one-bit bit-fields)\n that are used in certain types of expression.  Most often they\n-are accessed with the following macros, which expand into lvalues:\n+are accessed with the following macros, which expand into lvalues.\n \n @table @code\n @findex CONSTANT_POOL_ADDRESS_P\n@@ -413,9 +413,16 @@ Stored in the @code{in_struct} field and printed as @samp{/s}.\n \n @findex INSN_DELETED_P\n @cindex @code{insn} and @samp{/v}\n-@cindex @code{volatil}, in @code{insn}\n+@cindex @code{call_insn} and @samp{/v}\n+@cindex @code{jump_insn} and @samp{/v}\n+@cindex @code{code_label} and @samp{/v}\n+@cindex @code{barrier} and @samp{/v}\n+@cindex @code{note} and @samp{/v}\n+@cindex @code{volatil}, in @code{insn}, @code{call_insn}, @code{jump_insn}, @code{code_label}, @code{barrier}, and @code{note}\n @item INSN_DELETED_P (@var{x})\n-In an @code{insn}, nonzero if the insn has been deleted.  Stored in the\n+In an @code{insn}, @code{call_insn}, @code{jump_insn}, @code{code_label},\n+@code{barrier}, or @code{note},\n+nonzero if the insn has been deleted.  Stored in the\n @code{volatil} field and printed as @samp{/v}.\n \n @findex INSN_FROM_TARGET_P\n@@ -441,39 +448,23 @@ label.  Stored in the @code{in_struct} field and printed as @samp{/s}.\n \n @findex LABEL_PRESERVE_P\n @cindex @code{code_label} and @samp{/i}\n-@cindex @code{in_struct}, in @code{code_label}\n+@cindex @code{note} and @samp{/i}\n+@cindex @code{in_struct}, in @code{code_label} and @code{note}\n @item LABEL_PRESERVE_P (@var{x})\n-In a @code{code_label}, indicates that the label is referenced by\n+In a @code{code_label} or @code{note}, indicates that the label is referenced by\n code or data not visible to the RTL of a given function.\n Labels referenced by a non-local goto will have this bit set.  Stored\n in the @code{in_struct} field and printed as @samp{/s}.\n \n @findex LABEL_REF_NONLOCAL_P\n @cindex @code{label_ref} and @samp{/v}\n-@cindex @code{volatil}, in @code{label_ref}\n+@cindex @code{reg_label} and @samp{/v}\n+@cindex @code{volatil}, in @code{label_ref} and @code{reg_label}\n @item LABEL_REF_NONLOCAL_P (@var{x})\n In @code{label_ref} and @code{reg_label} expressions, nonzero if this is\n a reference to a non-local label.\n Stored in the @code{volatil} field and printed as @samp{/v}.\n \n-@findex LINK_COST_FREE\n-@cindex @code{insn_list} and @samp{/c}\n-@cindex @code{call}, in @code{insn_list}\n-@item LINK_COST_FREE (@var{x})\n-In the @code{LOG_LINKS} @code{insn_list} during scheduling, nonzero when\n-the cost of executing an instruction through the link is zero, i.e., the\n-link makes the cost free.  Stored in the @code{call} field and printed\n-as @samp{/c}.\n-\n-@findex LINK_COST_ZERO\n-@cindex @code{insn_list} and @samp{/j}\n-@cindex @code{jump}, in @code{insn_list}\n-@item LINK_COST_ZERO (@var{x})\n-In the @code{LOG_LINKS} @code{insn_list} during scheduling, nonzero when\n-the cost of executing an instruction through the link varies and is\n-unchanged, i.e., the link has zero additional cost.\n-Stored in the @code{jump} field and printed as @samp{/j}.\n-\n @findex MEM_IN_STRUCT_P\n @cindex @code{mem} and @samp{/s}\n @cindex @code{in_struct}, in @code{mem}\n@@ -508,7 +499,8 @@ Stored in the @code{frame_related} field and printed as @samp{/f}.\n \n @findex MEM_VOLATILE_P\n @cindex @code{mem} and @samp{/v}\n-@cindex @code{volatil}, in @code{mem}\n+@cindex @code{asm_operands} and @samp{/v}\n+@cindex @code{volatil}, in @code{mem} and @code{asm_operands}\n @item MEM_VOLATILE_P (@var{x})\n In @code{mem} and @code{asm_operands} expressions, nonzero for volatile\n memory references.\n@@ -553,9 +545,14 @@ in this kind of use.\n \n @findex RTX_FRAME_RELATED_P\n @cindex @code{insn} and @samp{/f}\n-@cindex @code{frame_related}, in @code{insn}\n+@cindex @code{call_insn} and @samp{/f}\n+@cindex @code{jump_insn} and @samp{/f}\n+@cindex @code{barrier} and @samp{/f}\n+@cindex @code{set} and @samp{/f}\n+@cindex @code{frame_related}, in @code{insn}, @code{call_insn}, @code{jump_insn}, @code{barrier}, and @code{set}\n @item RTX_FRAME_RELATED_P (@var{x})\n-Nonzero in an @code{insn} or @code{set} which is part of a function prologue\n+Nonzero in an @code{insn}, @code{call_insn}, @code{jump_insn},\n+@code{barrier}, or @code{set} which is part of a function prologue\n and sets the stack pointer, sets the frame pointer, or saves a register.\n This flag should also be set on an instruction that sets up a temporary\n register to use in place of the frame pointer.\n@@ -582,26 +579,43 @@ prologues.\n \n @findex RTX_INTEGRATED_P\n @cindex @code{insn} and @samp{/i}\n-@cindex @code{integrated}, in @code{insn}\n+@cindex @code{call_insn} and @samp{/i}\n+@cindex @code{jump_insn} and @samp{/i}\n+@cindex @code{barrier} and @samp{/i}\n+@cindex @code{code_label} and @samp{/i}\n+@cindex @code{insn_list} and @samp{/i}\n+@cindex @code{const} and @samp{/i}\n+@cindex @code{note} and @samp{/i}\n+@cindex @code{integrated}, in @code{insn}, @code{call_insn}, @code{jump_insn}, @code{barrier}, @code{code_label}, @code{insn_list}, @code{const}, and @code{note}\n @item RTX_INTEGRATED_P (@var{x})\n-Nonzero in an @code{insn}, @code{insn_list}, or @code{const} if it\n+Nonzero in an @code{insn}, @code{call_insn}, @code{jump_insn}, @code{barrier},\n+@code{code_label}, @code{insn_list}, @code{const}, or @code{note} if it\n resulted from an in-line function call.\n Stored in the @code{integrated} field and printed as @samp{/i}.\n \n @findex RTX_UNCHANGING_P\n @cindex @code{reg} and @samp{/u}\n @cindex @code{mem} and @samp{/u}\n+@cindex @code{concat} and @samp{/u}\n @cindex @code{unchanging}, in @code{reg} and @code{mem}\n @item RTX_UNCHANGING_P (@var{x})\n-Nonzero in a @code{reg} or @code{mem} if the memory is set at most once,\n+Nonzero in a @code{reg}, @code{mem}, or @code{concat} if the memory\n+is set at most once,\n anywhere.  This does not mean that it is function invariant.\n Stored in the @code{unchanging} field and printed as @samp{/u}.\n \n @findex SCHED_GROUP_P\n @cindex @code{insn} and @samp{/i}\n-@cindex @code{in_struct}, in @code{insn}\n+@cindex @code{call_insn} and @samp{/i}\n+@cindex @code{jump_insn} and @samp{/i}\n+@cindex @code{code_label} and @samp{/i}\n+@cindex @code{barrier} and @samp{/i}\n+@cindex @code{note} and @samp{/i}\n+@cindex @code{in_struct}, in @code{insn}, @code{jump_insn}, @code{call_insn}, @code{code_label}, @code{barrier}, and @code{note}\n @item SCHED_GROUP_P (@var{x})\n-During instruction scheduling, in an @code{insn}, indicates that the\n+During instruction scheduling, in an @code{insn}, @code{call_insn},\n+@code{jump_insn}, @code{code_label}, @code{barrier}, or\n+@code{note}, indicates that the\n previous insn must be scheduled together with this insn.  This is used to\n ensure that certain groups of instructions will not be split up by the\n instruction scheduling pass, for example, @code{use} insns before\n@@ -696,8 +710,7 @@ These are the fields to which the above macros refer:\n @findex call\n @cindex @samp{/c} in RTL dump\n @item call\n-In the @code{LOG_LINKS} of an @code{insn_list} during scheduling, 1 means that\n-the cost of executing an instruction through the link is zero.\n+This flag is currently unused.\n \n In an RTL dump, this flag is represented as @samp{/c}.\n \n@@ -779,9 +792,6 @@ In a @code{set}, 1 means it is for a return.\n \n In a @code{call_insn}, 1 means it is a sibling call.\n \n-In the @code{LOG_LINKS} of an @code{insn_list} during scheduling, 1 means the\n-cost of executing an instruction through the link varies and is unchanging.\n-\n In an RTL dump, this flag is represented as @samp{/j}.\n \n @findex unchanging\n@@ -793,7 +803,8 @@ that the value of the expression never changes.\n In @code{subreg} expressions, it is 1 if the @code{subreg} references an\n unsigned object whose mode has been promoted to a wider mode.\n \n-In an @code{insn}, 1 means that this is an annulling branch.\n+In an @code{insn} in the delay slot of a branch instruction, 1 means\n+an annulling branch should be used.\n \n In a @code{symbol_ref} expression, 1 means that this symbol addresses\n something in the per-function constant pool."}]}