{"sha": "aadc6da0c418493c76b3affa3782fcd7ee6a1129", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWFkYzZkYTBjNDE4NDkzYzc2YjNhZmZhMzc4MmZjZDdlZTZhMTEyOQ==", "commit": {"author": {"name": "Fernando Nasser", "email": "fnasser@redhat.com", "date": "2004-01-19T14:51:54Z"}, "committer": {"name": "Fernando Nasser", "email": "fnasser@gcc.gnu.org", "date": "2004-01-19T14:51:54Z"}, "message": "EventQueue.java (getCurrentEvent): Consider that system events may be handled by any queue in the stack.\n\n        * java/awt/EventQueue.java (getCurrentEvent): Consider that system\n        events may be handled by any queue in the stack.\n\nFrom-SVN: r76150", "tree": {"sha": "e514a22de9731c68a1c39c2866ac7fad141dc165", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e514a22de9731c68a1c39c2866ac7fad141dc165"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/aadc6da0c418493c76b3affa3782fcd7ee6a1129", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aadc6da0c418493c76b3affa3782fcd7ee6a1129", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aadc6da0c418493c76b3affa3782fcd7ee6a1129", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aadc6da0c418493c76b3affa3782fcd7ee6a1129/comments", "author": {"login": "fnasser", "id": 326533, "node_id": "MDQ6VXNlcjMyNjUzMw==", "avatar_url": "https://avatars.githubusercontent.com/u/326533?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fnasser", "html_url": "https://github.com/fnasser", "followers_url": "https://api.github.com/users/fnasser/followers", "following_url": "https://api.github.com/users/fnasser/following{/other_user}", "gists_url": "https://api.github.com/users/fnasser/gists{/gist_id}", "starred_url": "https://api.github.com/users/fnasser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fnasser/subscriptions", "organizations_url": "https://api.github.com/users/fnasser/orgs", "repos_url": "https://api.github.com/users/fnasser/repos", "events_url": "https://api.github.com/users/fnasser/events{/privacy}", "received_events_url": "https://api.github.com/users/fnasser/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "2c20a17152d3af1ab0788857e6439f1799111183", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2c20a17152d3af1ab0788857e6439f1799111183", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2c20a17152d3af1ab0788857e6439f1799111183"}], "stats": {"total": 19, "additions": 17, "deletions": 2}, "files": [{"sha": "cd7d66af18b00e9dd6db3c9e5f50b3b5a99dd529", "filename": "libjava/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aadc6da0c418493c76b3affa3782fcd7ee6a1129/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aadc6da0c418493c76b3affa3782fcd7ee6a1129/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=aadc6da0c418493c76b3affa3782fcd7ee6a1129", "patch": "@@ -1,3 +1,8 @@\n+2004-01-19  Fernando Nasser  <fnasser@redhat.com>\n+\n+\t* java/awt/EventQueue.java (getCurrentEvent): Consider that system\n+\tevents may be handled by any queue in the stack.\n+\n 2004-01-19  Kim Ho  <kho@redhat.com>\n \n \t* gnu/java/awt/peer/gtk/GtkFramePeer.java (getMenuBarHeight): Added"}, {"sha": "4cb0703ec6235bc5c5740b89e9c9c28579667063", "filename": "libjava/java/awt/EventQueue.java", "status": "modified", "additions": 12, "deletions": 2, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aadc6da0c418493c76b3affa3782fcd7ee6a1129/libjava%2Fjava%2Fawt%2FEventQueue.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aadc6da0c418493c76b3affa3782fcd7ee6a1129/libjava%2Fjava%2Fawt%2FEventQueue.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FEventQueue.java?ref=aadc6da0c418493c76b3affa3782fcd7ee6a1129", "patch": "@@ -293,8 +293,18 @@ public static boolean isDispatchThread()\n   public static AWTEvent getCurrentEvent()\n   {\n     EventQueue eq = Toolkit.getDefaultToolkit().getSystemEventQueue(); \n-    if (Thread.currentThread() != eq.dispatchThread)\n-      return null;\n+    Thread ct = Thread.currentThread();\n+    \n+    /* Find out if this thread is the dispatch thread for any of the\n+       EventQueues in the chain */ \n+    while (ct != eq.dispatchThread)\n+      {\n+        // Try next EventQueue, if any\n+        if (eq.next == null)\n+           return null;  // Not an event dispatch thread\n+        eq = eq.next;\n+      }\n+\n     return eq.currentEvent;\n   }\n "}]}