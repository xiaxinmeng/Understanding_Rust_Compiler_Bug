{"sha": "706d74594af2a6d72b160ad214881ba75502ae82", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzA2ZDc0NTk0YWYyYTZkNzJiMTYwYWQyMTQ4ODFiYTc1NTAyYWU4Mg==", "commit": {"author": {"name": "Thomas Quinot", "email": "quinot@adacore.com", "date": "2008-07-30T15:52:47Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2008-07-30T15:52:47Z"}, "message": "rtsfind.adb (Check_RPC): Check version consistency even when not generating RCI stubs.\n\n2008-07-30  Thomas Quinot  <quinot@adacore.com>\n\n\t* rtsfind.adb (Check_RPC): Check version consistency even when not\n\tgenerating RCI stubs. Provide more detailed error message in case of\n\tmismatch.\n\nFrom-SVN: r138321", "tree": {"sha": "ec0ce5c54f57cd23b2c299133c9dec5f09d37d0f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ec0ce5c54f57cd23b2c299133c9dec5f09d37d0f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/706d74594af2a6d72b160ad214881ba75502ae82", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/706d74594af2a6d72b160ad214881ba75502ae82", "html_url": "https://github.com/Rust-GCC/gccrs/commit/706d74594af2a6d72b160ad214881ba75502ae82", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/706d74594af2a6d72b160ad214881ba75502ae82/comments", "author": null, "committer": null, "parents": [{"sha": "cc72409e0211d71f575034736caef07e193de955", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cc72409e0211d71f575034736caef07e193de955", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cc72409e0211d71f575034736caef07e193de955"}], "stats": {"total": 71, "additions": 33, "deletions": 38}, "files": [{"sha": "fda3b2ff0820fe4bcd2bb7f0baf3ca2ae332bcdc", "filename": "gcc/ada/rtsfind.adb", "status": "modified", "additions": 33, "deletions": 38, "changes": 71, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/706d74594af2a6d72b160ad214881ba75502ae82/gcc%2Fada%2Frtsfind.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/706d74594af2a6d72b160ad214881ba75502ae82/gcc%2Fada%2Frtsfind.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Frtsfind.adb?ref=706d74594af2a6d72b160ad214881ba75502ae82", "patch": "@@ -914,56 +914,51 @@ package body Rtsfind is\n       ---------------\n \n       procedure Check_RPC is\n-\n-         procedure Check_RPC_Failure (Msg : String);\n-         pragma No_Return (Check_RPC_Failure);\n-         --  Display Msg on standard error and raise Unrecoverable_Error\n-\n-         -----------------------\n-         -- Check_RPC_Failure --\n-         -----------------------\n-\n-         procedure Check_RPC_Failure (Msg : String) is\n-         begin\n-            Set_Standard_Error;\n-            Write_Str (Msg);\n-            Write_Eol;\n-            raise Unrecoverable_Error;\n-         end Check_RPC_Failure;\n-\n-      --  Start of processing for Check_RPC\n-\n       begin\n          --  Bypass this check if debug flag -gnatdR set\n \n          if Debug_Flag_RR then\n             return;\n          end if;\n \n-         --  Otherwise we need the check if we are going after one of\n-         --  the critical entities in System.RPC in stubs mode.\n-\n-         --  ??? Should we do this for other s-parint entities too?\n-\n-         if (Distribution_Stub_Mode = Generate_Receiver_Stub_Body\n-                      or else\n-                        Distribution_Stub_Mode = Generate_Caller_Stub_Body)\n-           and then (E = RE_Do_Rpc\n-                       or else\n-                     E = RE_Do_Apc\n-                       or else\n-                     E = RE_Params_Stream_Type\n-                       or else\n-                     E = RE_Request_Access)\n+         --  Otherwise we need the check if we are going after one of the\n+         --  critical entities in System.RPC / System.Partition_Interface.\n+\n+         if E = RE_Do_Rpc\n+              or else\n+            E = RE_Do_Apc\n+              or else\n+            E = RE_Params_Stream_Type\n+              or else\n+            E = RE_Request_Access\n          then\n-            if Get_PCS_Name = Name_No_DSA then\n-               Check_RPC_Failure (\"distribution feature not supported\");\n+            --  If generating RCI stubs, check that we have a real PCS\n+\n+            if (Distribution_Stub_Mode = Generate_Receiver_Stub_Body\n+                  or else\n+                Distribution_Stub_Mode = Generate_Caller_Stub_Body)\n+              and then Get_PCS_Name = Name_No_DSA\n+            then\n+               Set_Standard_Error;\n+               Write_Str (\"distribution feature not supported\");\n+               Write_Eol;\n+               raise Unrecoverable_Error;\n+\n+            --  In all cases, check Exp_Dist and System.Partition_Interface\n+            --  consistency.\n \n             elsif Get_PCS_Version /=\n                     Exp_Dist.PCS_Version_Number (Get_PCS_Name)\n             then\n-               Check_RPC_Failure (\"PCS version mismatch\");\n-\n+               Set_Standard_Error;\n+               Write_Str (\"PCS version mismatch: expander \");\n+               Write_Int (Exp_Dist.PCS_Version_Number (Get_PCS_Name));\n+               Write_Str (\", PCS (\");\n+               Write_Name (Get_PCS_Name);\n+               Write_Str (\") \");\n+               Write_Int (Get_PCS_Version);\n+               Write_Eol;\n+               raise Unrecoverable_Error;\n             end if;\n          end if;\n       end Check_RPC;"}]}