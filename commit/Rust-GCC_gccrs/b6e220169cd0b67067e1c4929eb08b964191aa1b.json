{"sha": "b6e220169cd0b67067e1c4929eb08b964191aa1b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjZlMjIwMTY5Y2QwYjY3MDY3ZTFjNDkyOWViMDhiOTY0MTkxYWExYg==", "commit": {"author": {"name": "Jeff Law", "email": "law@redhat.com", "date": "2001-12-24T01:45:29Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "2001-12-24T01:45:29Z"}, "message": "os_defines.h: Do not include <_sys/inttypes.h>.\n\n        * config/os/hpux/bits/os_defines.h: Do not include <_sys/inttypes.h>.\n        Twiddle return types for strtoll and strtoull to avoid using\n        intmax_t and uintmax-t.\n\nFrom-SVN: r48293", "tree": {"sha": "24d16ceb1abf477028e86e1ed86aa5c729a79b09", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/24d16ceb1abf477028e86e1ed86aa5c729a79b09"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b6e220169cd0b67067e1c4929eb08b964191aa1b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b6e220169cd0b67067e1c4929eb08b964191aa1b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b6e220169cd0b67067e1c4929eb08b964191aa1b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b6e220169cd0b67067e1c4929eb08b964191aa1b/comments", "author": null, "committer": null, "parents": [{"sha": "6eb5351149fbe37f06c43bacb968e71bd73dfbb5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6eb5351149fbe37f06c43bacb968e71bd73dfbb5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6eb5351149fbe37f06c43bacb968e71bd73dfbb5"}], "stats": {"total": 24, "additions": 15, "deletions": 9}, "files": [{"sha": "ed0be81506b446c0547ac46df9d15a020a20e9b5", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b6e220169cd0b67067e1c4929eb08b964191aa1b/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b6e220169cd0b67067e1c4929eb08b964191aa1b/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=b6e220169cd0b67067e1c4929eb08b964191aa1b", "patch": "@@ -1,3 +1,9 @@\n+Sun Dec 23 18:47:24 2001  Jeffrey A Law  (law@redhat.com)\n+\n+\t* config/os/hpux/bits/os_defines.h: Do not include <_sys/inttypes.h>.\n+\tTwiddle return types for strtoll and strtoull to avoid using\n+\tintmax_t and uintmax-t.\n+\n 2001-12-22  Richard Henderson  <rth@redhat.com>\n \n \t* configure.target (CPULIMITSH): Fix typo in alpha case."}, {"sha": "29b32ea9c9991b05103fabeee98a54a827211c23", "filename": "libstdc++-v3/config/os/hpux/bits/os_defines.h", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b6e220169cd0b67067e1c4929eb08b964191aa1b/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fhpux%2Fbits%2Fos_defines.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b6e220169cd0b67067e1c4929eb08b964191aa1b/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fhpux%2Fbits%2Fos_defines.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fhpux%2Fbits%2Fos_defines.h?ref=b6e220169cd0b67067e1c4929eb08b964191aa1b", "patch": "@@ -51,23 +51,23 @@\n    <inttypes.h>.  Ugh.\n \n    <inttypes.h> defines a variety of things, some of which we \n-   probably do not want.  So we just provide prototypes for\n-   the functions we care about here.\n+   probably do not want.  So we don't want to include it here.\n \n-   However, to do that, we must include <sys/_inttypes.h> to get\n-   intmax_t and uintmax_t.  Luckily <sys/_inttypes.h> looks a\n-   lot cleaner as far as namespace pollution is concerned. \n+   Luckily we can just declare strtoll and strtoull with the\n+   __asm extension which effectively renames calls at the\n+   source level without namespace pollution.\n+\n+   Also note that the compiler defines _INCLUDE_LONGLONG for C++\n+   unconditionally, which makes intmax_t and uintmax_t long long\n+   types.\n \n    We also force _GLIBCPP_USE_LONG_LONG here so that we don't have\n    to bastardize configure to deal with this sillyness.  */\n-#include <sys/_inttypes.h>\n namespace std {\n   extern \"C\" long long strtoll (const char *, char **, int)\n     __asm  (\"__strtoll\");\n-  extern \"C\" long long strtoull (const char *, char **, int)\n+  extern \"C\" unsigned long long strtoull (const char *, char **, int)\n     __asm  (\"__strtoull\");\n }\n-extern intmax_t __strtoll (const char *, char**, int);\n-extern uintmax_t __strtoull (const char *, char**, int);\n #define _GLIBCPP_USE_LONG_LONG 1\n #endif"}]}