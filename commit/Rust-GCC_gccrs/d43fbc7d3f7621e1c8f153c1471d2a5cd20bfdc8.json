{"sha": "d43fbc7d3f7621e1c8f153c1471d2a5cd20bfdc8", "node_id": "C_kwDOANBUbNoAKGQ0M2ZiYzdkM2Y3NjIxZTFjOGYxNTNjMTQ3MWQyYTVjZDIwYmZkYzg", "commit": {"author": {"name": "Tom de Vries", "email": "tdevries@suse.de", "date": "2022-01-23T05:29:58Z"}, "committer": {"name": "Tom de Vries", "email": "tdevries@suse.de", "date": "2022-02-01T07:15:00Z"}, "message": "[libgomp, testsuite] Fix insufficient resources in test-cases\n\nWhen running libgomp test-case broadcast-many.c on an nvptx accelerator\n(T400, driver version 470.86), I run into:\n...\nlibgomp: The Nvidia accelerator has insufficient resources to launch \\\n  'main$_omp_fn$0' with num_workers = 32 and vector_length = 32; \\\n  recompile the program with 'num_workers = x and vector_length = y' on \\\n  that offloaded region or '-fopenacc-dim=:x:y' where x * y <= 896.\n\nFAIL: libgomp.oacc-c/../libgomp.oacc-c-c++-common/broadcast-many.c \\\n  -DACC_DEVICE_TYPE_nvidia=1 -DACC_MEM_SHARED=0 -foffload=nvptx-none  \\\n  -O0  execution test\n...\n\nThe error does not occur when using GOMP_NVPTX_JIT=-O0.\n\nFix this by using 896 / 32 == 28 workers for ACC_DEVICE_TYPE_nvidia.\n\nLikewise for some other test-cases.\n\nTested libgomp on x86_64 with nvptx accelerator.\n\nlibgomp/ChangeLog:\n\n2022-01-27  Tom de Vries  <tdevries@suse.de>\n\n\t* testsuite/libgomp.oacc-c-c++-common/broadcast-many.c: Reduce\n\tnum_workers for nvidia accelerator to fix libgomp error 'insufficient\n\tresources'.\n\t* testsuite/libgomp.oacc-c-c++-common/par-loop-comb-reduction-4.c:\n\tSame.\n\t* testsuite/libgomp.oacc-c-c++-common/reduction-7.c: Same.", "tree": {"sha": "de90383618e442099bccbe4f1be08c2a89ed9099", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/de90383618e442099bccbe4f1be08c2a89ed9099"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d43fbc7d3f7621e1c8f153c1471d2a5cd20bfdc8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d43fbc7d3f7621e1c8f153c1471d2a5cd20bfdc8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d43fbc7d3f7621e1c8f153c1471d2a5cd20bfdc8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d43fbc7d3f7621e1c8f153c1471d2a5cd20bfdc8/comments", "author": {"login": "vries", "id": 4057235, "node_id": "MDQ6VXNlcjQwNTcyMzU=", "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vries", "html_url": "https://github.com/vries", "followers_url": "https://api.github.com/users/vries/followers", "following_url": "https://api.github.com/users/vries/following{/other_user}", "gists_url": "https://api.github.com/users/vries/gists{/gist_id}", "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vries/subscriptions", "organizations_url": "https://api.github.com/users/vries/orgs", "repos_url": "https://api.github.com/users/vries/repos", "events_url": "https://api.github.com/users/vries/events{/privacy}", "received_events_url": "https://api.github.com/users/vries/received_events", "type": "User", "site_admin": false}, "committer": {"login": "vries", "id": 4057235, "node_id": "MDQ6VXNlcjQwNTcyMzU=", "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vries", "html_url": "https://github.com/vries", "followers_url": "https://api.github.com/users/vries/followers", "following_url": "https://api.github.com/users/vries/following{/other_user}", "gists_url": "https://api.github.com/users/vries/gists{/gist_id}", "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vries/subscriptions", "organizations_url": "https://api.github.com/users/vries/orgs", "repos_url": "https://api.github.com/users/vries/repos", "events_url": "https://api.github.com/users/vries/events{/privacy}", "received_events_url": "https://api.github.com/users/vries/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "be362d5e127e087dcd4a2c0d843cf7b9a7399c73", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/be362d5e127e087dcd4a2c0d843cf7b9a7399c73", "html_url": "https://github.com/Rust-GCC/gccrs/commit/be362d5e127e087dcd4a2c0d843cf7b9a7399c73"}], "stats": {"total": 28, "additions": 25, "deletions": 3}, "files": [{"sha": "08e026960e603d32016f800f14880e61f43a9199", "filename": "libgomp/testsuite/libgomp.oacc-c-c++-common/broadcast-many.c", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d43fbc7d3f7621e1c8f153c1471d2a5cd20bfdc8/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fbroadcast-many.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d43fbc7d3f7621e1c8f153c1471d2a5cd20bfdc8/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fbroadcast-many.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fbroadcast-many.c?ref=d43fbc7d3f7621e1c8f153c1471d2a5cd20bfdc8", "patch": "@@ -5,6 +5,13 @@\n #include <assert.h>\n #include <stdio.h>\n \n+#if ACC_DEVICE_TYPE_nvidia\n+/* To avoid 'libgomp: The Nvidia accelerator has insufficient resources'.  */\n+#define NUM_WORKERS 28\n+#else\n+#define NUM_WORKERS 32\n+#endif\n+\n #define LOCAL(n) double n = input;\n #define LOCALS(n) LOCAL(n##1) LOCAL(n##2) LOCAL(n##3) LOCAL(n##4) \\\n \t\t  LOCAL(n##5) LOCAL(n##6) LOCAL(n##7) LOCAL(n##8)\n@@ -23,7 +30,7 @@ int main (void)\n   int ret;\n   int input = 1;\n \n-  #pragma acc parallel num_gangs(1) num_workers(32) copyout(ret)\n+  #pragma acc parallel num_gangs(1) num_workers(NUM_WORKERS) copyout(ret)\n   {\n     int w = 0;\n     LOCALS2(h);"}, {"sha": "4c66dc7bfeadd601e69313eb9c31db5b8928a89b", "filename": "libgomp/testsuite/libgomp.oacc-c-c++-common/par-loop-comb-reduction-4.c", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d43fbc7d3f7621e1c8f153c1471d2a5cd20bfdc8/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fpar-loop-comb-reduction-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d43fbc7d3f7621e1c8f153c1471d2a5cd20bfdc8/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fpar-loop-comb-reduction-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fpar-loop-comb-reduction-4.c?ref=d43fbc7d3f7621e1c8f153c1471d2a5cd20bfdc8", "patch": "@@ -1,5 +1,12 @@\n #include <assert.h>\n \n+#if ACC_DEVICE_TYPE_nvidia\n+/* To avoid 'libgomp: The Nvidia accelerator has insufficient resources'.  */\n+#define NUM_WORKERS 24\n+#else\n+#define NUM_WORKERS 32\n+#endif\n+\n /* Test of reduction on both parallel and loop directives (workers and vectors\n    together in gang-partitioned mode, float type, multiple reductions).  */\n \n@@ -13,7 +20,8 @@ main (int argc, char *argv[])\n   for (i = 0; i < 32768; i++)\n     arr[i] = i % (32768 / 64);\n \n-  #pragma acc parallel num_gangs(32) num_workers(32) vector_length(32) \\\n+  #pragma acc parallel \\\n+    num_gangs(32) num_workers(NUM_WORKERS) vector_length(32) \\\n     reduction(+:res) reduction(max:mres) copy(res, mres)\n   {\n     #pragma acc loop gang /* { dg-warning \"nested loop in reduction needs reduction clause for 'm\\?res'\" \"TODO\" } */"}, {"sha": "b4fe230058114ed80deebc3d18caf53774c83b8a", "filename": "libgomp/testsuite/libgomp.oacc-c-c++-common/reduction-7.c", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d43fbc7d3f7621e1c8f153c1471d2a5cd20bfdc8/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Freduction-7.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d43fbc7d3f7621e1c8f153c1471d2a5cd20bfdc8/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Freduction-7.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Freduction-7.c?ref=d43fbc7d3f7621e1c8f153c1471d2a5cd20bfdc8", "patch": "@@ -181,6 +181,12 @@ void gwv_np_3()\n   assert (res == hres);\n }\n \n+#if ACC_DEVICE_TYPE_nvidia\n+/* To avoid 'libgomp: The Nvidia accelerator has insufficient resources'.  */\n+#define NUM_WORKERS 28\n+#else\n+#define NUM_WORKERS 32\n+#endif\n \n /* Test of reduction on loop directive (gangs, workers and vectors, multiple\n    non-private reduction variables, float type).  */\n@@ -194,7 +200,7 @@ void gwv_np_4()\n   for (i = 0; i < 32768; i++)\n     arr[i] = i % (32768 / 64);\n \n-  #pragma acc parallel num_gangs(32) num_workers(32) vector_length(32)\n+  #pragma acc parallel num_gangs(32) num_workers(NUM_WORKERS) vector_length(32)\n   {\n     #pragma acc loop gang reduction(+:res) reduction(max:mres)\n     for (j = 0; j < 32; j++)\n@@ -235,6 +241,7 @@ void gwv_np_4()\n   assert (mres == hmres);\n }\n \n+#undef NUM_WORKERS\n \n /* Test of reduction on loop directive (vectors, private reduction\n    variable).  */"}]}