{"sha": "c36ad24e8a4098e2b3e59f682a6ae751d656102c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzM2YWQyNGU4YTQwOThlMmIzZTU5ZjY4MmE2YWU3NTFkNjU2MTAyYw==", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2021-02-11T21:48:47Z"}, "committer": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2021-02-11T21:49:41Z"}, "message": "libgomp/i386: Move syscall asms to static inline wrapper.\n\nMove syscall asms to static inline wrapper functions to improve #ifdeffery.\nAlso correct output type to int and timeout type to void *.\n\n2021-02-11  Uro\u0161 Bizjak  <ubizjak@gmail.com>\n\nlibgomp/\n\t* config/linux/x86/futex.h (__futex_wait): New static inline\n\twrapper function.  Correct output type to int and\n\ttimeout type to void *.\n\t(__futex_wake): New static inline wrapper function.\n\tCorrect output type to int.\n\t(futex_wait): Use __futex_wait.\n\t(futex_wake): Use __futex_wake.", "tree": {"sha": "5adfc72366f24af5686803205661776740058f55", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5adfc72366f24af5686803205661776740058f55"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c36ad24e8a4098e2b3e59f682a6ae751d656102c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c36ad24e8a4098e2b3e59f682a6ae751d656102c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c36ad24e8a4098e2b3e59f682a6ae751d656102c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c36ad24e8a4098e2b3e59f682a6ae751d656102c/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "88cfd531c69b3c1fe7a3c183d83cfeacc8f69402", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/88cfd531c69b3c1fe7a3c183d83cfeacc8f69402", "html_url": "https://github.com/Rust-GCC/gccrs/commit/88cfd531c69b3c1fe7a3c183d83cfeacc8f69402"}], "stats": {"total": 97, "additions": 45, "deletions": 52}, "files": [{"sha": "7807e88e2e0990c2f1017ae51b6272959dbf1ee9", "filename": "libgomp/config/linux/x86/futex.h", "status": "modified", "additions": 45, "deletions": 52, "changes": 97, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c36ad24e8a4098e2b3e59f682a6ae751d656102c/libgomp%2Fconfig%2Flinux%2Fx86%2Ffutex.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c36ad24e8a4098e2b3e59f682a6ae751d656102c/libgomp%2Fconfig%2Flinux%2Fx86%2Ffutex.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Fconfig%2Flinux%2Fx86%2Ffutex.h?ref=c36ad24e8a4098e2b3e59f682a6ae751d656102c", "patch": "@@ -30,99 +30,92 @@\n #  define SYS_futex\t202\n # endif\n \n-static inline void\n-futex_wait (int *addr, int val)\n+static inline int\n+__futex_wait (int *addr, int futex_op, int val)\n {\n-  long res;\n+  int res;\n \n-  register long r10 __asm__(\"%r10\") = 0;\n+  register void *timeout __asm (\"r10\") = NULL;\n   __asm volatile (\"syscall\"\n \t\t  : \"=a\" (res)\n-\t\t  : \"0\" (SYS_futex), \"D\" (addr), \"S\" (gomp_futex_wait),\n-\t\t    \"d\" (val), \"r\" (r10)\n+\t\t  : \"0\" (SYS_futex), \"D\" (addr), \"S\" (futex_op),\n+\t\t    \"d\" (val), \"r\" (timeout)\n \t\t  : \"r11\", \"rcx\", \"memory\");\n-  if (__builtin_expect (res == -ENOSYS, 0))\n-    {\n-      gomp_futex_wait &= ~FUTEX_PRIVATE_FLAG;\n-      gomp_futex_wake &= ~FUTEX_PRIVATE_FLAG;\n-      __asm volatile (\"syscall\"\n-\t\t      : \"=a\" (res)\n-\t\t      : \"0\" (SYS_futex), \"D\" (addr), \"S\" (gomp_futex_wait),\n-\t\t\t\"d\" (val), \"r\" (r10)\n-\t\t      : \"r11\", \"rcx\", \"memory\");\n-    }\n+  return res;\n }\n \n-static inline void\n-futex_wake (int *addr, int count)\n+static inline int\n+__futex_wake (int *addr, int futex_op, int count)\n {\n-  long res;\n+  int res;\n \n   __asm volatile (\"syscall\"\n \t\t  : \"=a\" (res)\n-\t\t  : \"0\" (SYS_futex), \"D\" (addr), \"S\" (gomp_futex_wake),\n+\t\t  : \"0\" (SYS_futex), \"D\" (addr), \"S\" (futex_op),\n \t\t    \"d\" (count)\n \t\t  : \"r11\", \"rcx\", \"memory\");\n-  if (__builtin_expect (res == -ENOSYS, 0))\n-    {\n-      gomp_futex_wait &= ~FUTEX_PRIVATE_FLAG;\n-      gomp_futex_wake &= ~FUTEX_PRIVATE_FLAG;\n-      __asm volatile (\"syscall\"\n-\t\t      : \"=a\" (res)\n-\t\t      : \"0\" (SYS_futex), \"D\" (addr), \"S\" (gomp_futex_wake),\n-\t\t\t\"d\" (count)\n-\t\t      : \"r11\", \"rcx\", \"memory\");\n-    }\n+  return res;\n }\n #else\n # ifndef SYS_futex\n #  define SYS_futex\t240\n # endif\n \n-static inline void\n-futex_wait (int *addr, int val)\n+static inline int\n+__futex_wait (int *addr, int futex_op, int val)\n+{\n+  int res;\n+\n+  void *timeout = NULL;\n+  __asm volatile (\"int $0x80\"\n+\t\t  : \"=a\" (res)\n+\t\t  : \"0\" (SYS_futex), \"b\" (addr), \"c\" (futex_op),\n+\t\t    \"d\" (val), \"S\" (timeout)\n+\t\t  : \"memory\");\n+  return res;\n+}\n+\n+static inline int\n+__futex_wake (int *addr, int futex_op, int count)\n {\n-  long res;\n+  int res;\n \n   __asm volatile (\"int $0x80\"\n \t\t  : \"=a\" (res)\n-\t\t  : \"0\" (SYS_futex), \"b\" (addr), \"c\" (gomp_futex_wait),\n-\t\t    \"d\" (val), \"S\" (0)\n+\t\t  : \"0\" (SYS_futex), \"b\" (addr), \"c\" (futex_op),\n+\t\t    \"d\" (count)\n \t\t  : \"memory\");\n+  return res;\n+}\n+#endif /* __x86_64__ */\n+\n+static inline void\n+futex_wait (int *addr, int val)\n+{\n+  int res = __futex_wait (addr, gomp_futex_wait, val);\n+\n   if (__builtin_expect (res == -ENOSYS, 0))\n     {\n       gomp_futex_wait &= ~FUTEX_PRIVATE_FLAG;\n       gomp_futex_wake &= ~FUTEX_PRIVATE_FLAG;\n-      __asm volatile (\"int $0x80\"\n-\t\t      : \"=a\" (res)\n-\t\t      : \"0\" (SYS_futex), \"b\" (addr), \"c\" (gomp_futex_wait),\n-\t\t        \"d\" (val), \"S\" (0)\n-\t\t      : \"memory\");\n+\n+      __futex_wait (addr, gomp_futex_wait, val);\n     }\n }\n \n static inline void\n futex_wake (int *addr, int count)\n {\n-  long res;\n+  int res = __futex_wake (addr, gomp_futex_wake, count);\n \n-  __asm volatile (\"int $0x80\"\n-\t\t  : \"=a\" (res)\n-\t\t  : \"0\" (SYS_futex), \"b\" (addr), \"c\" (gomp_futex_wake),\n-\t\t    \"d\" (count)\n-\t\t  : \"memory\");\n   if (__builtin_expect (res == -ENOSYS, 0))\n     {\n       gomp_futex_wait &= ~FUTEX_PRIVATE_FLAG;\n       gomp_futex_wake &= ~FUTEX_PRIVATE_FLAG;\n-      __asm volatile (\"int $0x80\"\n-\t\t      : \"=a\" (res)\n-\t\t      : \"0\" (SYS_futex), \"b\" (addr), \"c\" (gomp_futex_wake),\n-\t\t        \"d\" (count)\n-\t\t      : \"memory\");\n+\n+      __futex_wake (addr, gomp_futex_wake, count);\n     }\n }\n-#endif /* __x86_64__ */\n \n static inline void\n cpu_relax (void)"}]}