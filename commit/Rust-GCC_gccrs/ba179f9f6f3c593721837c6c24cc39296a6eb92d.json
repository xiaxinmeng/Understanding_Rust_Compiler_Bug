{"sha": "ba179f9f6f3c593721837c6c24cc39296a6eb92d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmExNzlmOWY2ZjNjNTkzNzIxODM3YzZjMjRjYzM5Mjk2YTZlYjkyZA==", "commit": {"author": {"name": "Alexandre Petit-Bianco", "email": "apbianco@cygnus.com", "date": "1999-01-13T04:01:43Z"}, "committer": {"name": "Alexandre Petit-Bianco", "email": "apbianco@gcc.gnu.org", "date": "1999-01-13T04:01:43Z"}, "message": "class.c (maybe_layout_super_class): Fixed returned value.\n\nWed Jan 13 01:24:54 1999  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n\t* class.c (maybe_layout_super_class): Fixed returned value.\n\t* lex.c: Added 1999 to the copyright.\n\t(java_init_lex): Initialize java_lang_imported.\n\t* lex.h: Added 1999 to the copyright.\n\t* parse.h: Added 1999 to the copyright.\n\t(REGISTER_IMPORT): Fixed typo in trailing macro.\n\t(CURRENT_OSB): New macro.\n\t(struct parser_ctxt): New fields osb_depth, osb_limit.\n\t* parse.y (java_lang_id): New global variable.\n\t(type_import_on_demand_declaration): Don't import java.lang.* twice.\n\t(array_creation_expression:): Use CURRENT_OSB.\n\t(dims:): Uses a stack to keep track of array dimensions.\n\t(cast_expression:): Use CURRENT_OSB.\n\t(find_expr_with_wfl): Return NULL if node found doesn't meet the\n \tconditions.\n\t(register_fields): Fixed typos in comment.\n\t(check_method_redefinition): Fixed comment indentation.\n\t(java_check_regular_methods): Set saved found wfl to NULL after\n \thaving reinstalled it in the previously found DECL_NAME.\nFix an array dimension counting bug and some random other ones.\n\nFrom-SVN: r24648", "tree": {"sha": "d25a9959214ac681892dce2608d8b8067d1a80bf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d25a9959214ac681892dce2608d8b8067d1a80bf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ba179f9f6f3c593721837c6c24cc39296a6eb92d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ba179f9f6f3c593721837c6c24cc39296a6eb92d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ba179f9f6f3c593721837c6c24cc39296a6eb92d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ba179f9f6f3c593721837c6c24cc39296a6eb92d/comments", "author": null, "committer": null, "parents": [{"sha": "3c9a0f78d628f92d77ebb6455192174db7ab4907", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3c9a0f78d628f92d77ebb6455192174db7ab4907", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3c9a0f78d628f92d77ebb6455192174db7ab4907"}], "stats": {"total": 1027, "additions": 565, "deletions": 462}, "files": [{"sha": "a175442751b37b8d6e540f1d835137fdf87a15ed", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba179f9f6f3c593721837c6c24cc39296a6eb92d/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba179f9f6f3c593721837c6c24cc39296a6eb92d/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=ba179f9f6f3c593721837c6c24cc39296a6eb92d", "patch": "@@ -1,3 +1,25 @@\n+Wed Jan 13 01:24:54 1999  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n+\n+\t* class.c (maybe_layout_super_class): Fixed returned value.\n+\t* lex.c: Added 1999 to the copyright.\n+\t(java_init_lex): Initialize java_lang_imported.\n+\t* lex.h: Added 1999 to the copyright.\n+\t* parse.h: Added 1999 to the copyright.\n+\t(REGISTER_IMPORT): Fixed typo in trailing macro.\n+\t(CURRENT_OSB): New macro.\n+\t(struct parser_ctxt): New fields osb_depth, osb_limit.\n+\t* parse.y (java_lang_id): New global variable.\n+\t(type_import_on_demand_declaration): Don't import java.lang.* twice.\n+\t(array_creation_expression:): Use CURRENT_OSB.\n+\t(dims:): Uses a stack to keep track of array dimensions.\n+\t(cast_expression:): Use CURRENT_OSB.\n+\t(find_expr_with_wfl): Return NULL if node found doesn't meet the\n+ \tconditions.\n+\t(register_fields): Fixed typos in comment.\n+\t(check_method_redefinition): Fixed comment indentation.\n+\t(java_check_regular_methods): Set saved found wfl to NULL after\n+ \thaving reinstalled it in the previously found DECL_NAME.\n+\n Sun Jan 10 13:36:14 1999  Richard Henderson  <rth@cygnus.com>\n \n \t* gjavah.c (java_float_finite): Use a union to do type punning."}, {"sha": "66beab85d13bcf54769f741e27d59399b2e2b90c", "filename": "gcc/java/class.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba179f9f6f3c593721837c6c24cc39296a6eb92d/gcc%2Fjava%2Fclass.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba179f9f6f3c593721837c6c24cc39296a6eb92d/gcc%2Fjava%2Fclass.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fclass.c?ref=ba179f9f6f3c593721837c6c24cc39296a6eb92d", "patch": "@@ -1411,7 +1411,7 @@ maybe_layout_super_class (super_class)\n       load_class (name, 1);\n       super_class = IDENTIFIER_CLASS_VALUE (name);\n       if (!super_class)\n-\t    return;\n+\treturn NULL_TREE;\t/* FIXME, NULL_TREE not checked by caller. */\n       super_class = TREE_TYPE (super_class);\n     }\n   if (!TYPE_SIZE (super_class))"}, {"sha": "9e503d01384da6d38d08eb8be166233128816aff", "filename": "gcc/java/lex.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba179f9f6f3c593721837c6c24cc39296a6eb92d/gcc%2Fjava%2Flex.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba179f9f6f3c593721837c6c24cc39296a6eb92d/gcc%2Fjava%2Flex.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Flex.c?ref=ba179f9f6f3c593721837c6c24cc39296a6eb92d", "patch": "@@ -80,10 +80,13 @@ java_init_lex ()\n   int java_lang_imported = 0;\n \n #ifndef JC1_LITE\n+  if (!java_lang_id)\n+    java_lang_id = get_identifier (\"java.lang\");\n+\n   if (!java_lang_imported)\n     {\n       tree node = build_tree_list \n-\t(build_expr_wfl (get_identifier (\"java.lang\"), NULL, 0, 0), NULL_TREE);\n+\t(build_expr_wfl (java_lang_id, NULL, 0, 0), NULL_TREE);\n       read_import_dir (TREE_PURPOSE (node));\n       TREE_CHAIN (node) = ctxp->import_demand_list;\n       ctxp->import_demand_list = node;"}, {"sha": "a357e8d8ffc0fcef0bb337a006492ea005a38aee", "filename": "gcc/java/parse.c", "status": "modified", "additions": 478, "deletions": 442, "changes": 920, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba179f9f6f3c593721837c6c24cc39296a6eb92d/gcc%2Fjava%2Fparse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba179f9f6f3c593721837c6c24cc39296a6eb92d/gcc%2Fjava%2Fparse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fparse.c?ref=ba179f9f6f3c593721837c6c24cc39296a6eb92d", "patch": "@@ -358,7 +358,10 @@ static tree wfl_append = NULL_TREE;\n /* The \"toString\" identifier used for String `+' operator. */\n static tree wfl_to_string = NULL_TREE;\n \n-#line 286 \"./parse.y\"\n+/* The \"java.lang\" import qualified name.  */\n+static tree java_lang_id = NULL_TREE;\n+\n+#line 289 \"./parse.y\"\n typedef union {\n   tree node;\n   int sub_token;\n@@ -662,56 +665,56 @@ static const short yyrhs[] = {   123,\n \n #if YYDEBUG != 0\n static const short yyrline[] = { 0,\n-   436,   442,   444,   445,   446,   447,   448,   452,   454,   457,\n-   459,   460,   463,   465,   468,   472,   476,   480,   486,   488,\n-   490,   492,   497,   499,   502,   506,   511,   516,   518,   519,\n-   520,   521,   522,   523,   524,   527,   532,   538,   540,   543,\n-   546,   548,   552,   554,   557,   584,   586,   590,   599,   601,\n-   605,   612,   613,   615,   625,   630,   645,   649,   652,   655,\n-   658,   660,   662,   664,   668,   670,   672,   674,   678,   680,\n-   682,   689,   695,   700,   704,   707,   711,   713,   716,   718,\n-   719,   720,   724,   726,   727,   729,   734,   737,   747,   750,\n-   752,   756,   759,   766,   772,   780,   782,   784,   786,   788,\n-   792,   794,   798,   805,   806,   810,   813,   815,   817,   819,\n-   821,   823,   825,   827,   834,   837,   839,   848,   850,   854,\n-   859,   864,   868,   873,   875,   877,   884,   886,   888,   892,\n-   895,   897,   901,   903,   904,   909,   914,   920,   928,   935,\n-   938,   941,   945,   948,   952,   961,   963,   965,   970,   977,\n-   985,   987,   991,   999,  1010,  1014,  1017,  1020,  1023,  1026,\n-  1029,  1032,  1035,  1037,  1041,  1047,  1052,  1054,  1058,  1061,\n-  1065,  1067,  1070,  1072,  1073,  1075,  1079,  1083,  1089,  1094,\n-  1097,  1099,  1103,  1109,  1113,  1118,  1121,  1125,  1130,  1138,\n-  1140,  1143,  1145,  1147,  1151,  1155,  1158,  1162,  1164,  1165,\n-  1166,  1167,  1168,  1178,  1180,  1181,  1182,  1183,  1186,  1188,\n-  1189,  1190,  1191,  1192,  1193,  1194,  1195,  1196,  1197,  1200,\n-  1205,  1216,  1223,  1227,  1238,  1248,  1254,  1260,  1266,  1268,\n-  1274,  1276,  1282,  1284,  1286,  1288,  1290,  1294,  1296,  1297,\n-  1298,  1299,  1300,  1301,  1304,  1307,  1309,  1311,  1315,  1320,\n-  1325,  1331,  1341,  1347,  1349,  1351,  1358,  1361,  1363,  1365,\n-  1369,  1371,  1374,  1378,  1380,  1383,  1390,  1396,  1398,  1400,\n-  1404,  1412,  1415,  1417,  1419,  1423,  1428,  1437,  1442,  1445,\n-  1452,  1454,  1456,  1460,  1463,  1472,  1479,  1481,  1485,  1498,\n-  1500,  1506,  1512,  1516,  1518,  1522,  1525,  1527,  1531,  1534,\n-  1536,  1538,  1542,  1545,  1547,  1549,  1553,  1556,  1558,  1560,\n-  1564,  1570,  1572,  1576,  1583,  1585,  1587,  1589,  1593,  1601,\n-  1604,  1606,  1608,  1612,  1614,  1621,  1629,  1646,  1648,  1650,\n-  1654,  1660,  1665,  1667,  1670,  1672,  1674,  1676,  1677,  1678,\n-  1679,  1683,  1685,  1687,  1692,  1694,  1696,  1698,  1700,  1704,\n-  1707,  1712,  1714,  1719,  1720,  1721,  1722,  1723,  1725,  1727,\n-  1729,  1731,  1733,  1737,  1739,  1742,  1748,  1753,  1757,  1760,\n-  1762,  1764,  1768,  1770,  1772,  1774,  1778,  1781,  1785,  1791,\n-  1793,  1801,  1804,  1806,  1810,  1815,  1823,  1827,  1830,  1832,\n-  1843,  1854,  1859,  1868,  1870,  1874,  1877,  1879,  1884,  1889,\n-  1894,  1901,  1903,  1904,  1905,  1908,  1913,  1918,  1920,  1921,\n-  1923,  1925,  1926,  1928,  1932,  1935,  1939,  1942,  1946,  1948,\n-  1950,  1952,  1953,  1955,  1959,  1967,  1969,  1971,  1983,  1985,\n-  1991,  1993,  1995,  1999,  2001,  2006,  2011,  2016,  2018,  2020,\n-  2024,  2026,  2031,  2036,  2038,  2042,  2044,  2049,  2054,  2059,\n-  2061,  2063,  2067,  2069,  2074,  2079,  2084,  2089,  2091,  2093,\n-  2095,  2097,  2099,  2103,  2105,  2110,  2115,  2117,  2121,  2123,\n-  2128,  2132,  2134,  2139,  2143,  2145,  2150,  2154,  2156,  2161,\n-  2165,  2167,  2172,  2176,  2178,  2183,  2189,  2191,  2195,  2197,\n-  2200,  2203,  2211,  2213,  2214,  2217,  2219,  2222,  2226\n+   439,   445,   447,   448,   449,   450,   451,   455,   457,   460,\n+   462,   463,   466,   468,   471,   475,   479,   483,   489,   491,\n+   493,   495,   500,   502,   505,   509,   514,   519,   521,   522,\n+   523,   524,   525,   526,   527,   530,   535,   541,   543,   546,\n+   549,   551,   555,   557,   560,   587,   589,   593,   606,   608,\n+   612,   619,   620,   622,   632,   637,   652,   656,   659,   662,\n+   665,   667,   669,   671,   675,   677,   679,   681,   685,   687,\n+   689,   696,   702,   707,   711,   714,   718,   720,   723,   725,\n+   726,   727,   731,   733,   734,   736,   741,   744,   754,   757,\n+   759,   763,   766,   773,   779,   787,   789,   791,   793,   795,\n+   799,   801,   805,   812,   813,   817,   820,   822,   824,   826,\n+   828,   830,   832,   834,   841,   844,   846,   855,   857,   861,\n+   866,   871,   875,   880,   882,   884,   891,   893,   895,   899,\n+   902,   904,   908,   910,   911,   916,   921,   927,   935,   942,\n+   945,   948,   952,   955,   959,   968,   970,   972,   977,   984,\n+   992,   994,   998,  1006,  1017,  1021,  1024,  1027,  1030,  1033,\n+  1036,  1039,  1042,  1044,  1048,  1054,  1059,  1061,  1065,  1068,\n+  1072,  1074,  1077,  1079,  1080,  1082,  1086,  1090,  1096,  1101,\n+  1104,  1106,  1110,  1116,  1120,  1125,  1128,  1132,  1137,  1145,\n+  1147,  1150,  1152,  1154,  1158,  1162,  1165,  1169,  1171,  1172,\n+  1173,  1174,  1175,  1185,  1187,  1188,  1189,  1190,  1193,  1195,\n+  1196,  1197,  1198,  1199,  1200,  1201,  1202,  1203,  1204,  1207,\n+  1212,  1223,  1230,  1234,  1245,  1255,  1261,  1267,  1273,  1275,\n+  1281,  1283,  1289,  1291,  1293,  1295,  1297,  1301,  1303,  1304,\n+  1305,  1306,  1307,  1308,  1311,  1314,  1316,  1318,  1322,  1327,\n+  1332,  1338,  1348,  1354,  1356,  1358,  1365,  1368,  1370,  1372,\n+  1376,  1378,  1381,  1385,  1387,  1390,  1397,  1403,  1405,  1407,\n+  1411,  1419,  1422,  1424,  1426,  1430,  1435,  1444,  1449,  1452,\n+  1459,  1461,  1463,  1467,  1470,  1479,  1486,  1488,  1492,  1505,\n+  1507,  1513,  1519,  1523,  1525,  1529,  1532,  1534,  1538,  1541,\n+  1543,  1545,  1549,  1552,  1554,  1556,  1560,  1563,  1565,  1567,\n+  1571,  1577,  1579,  1583,  1590,  1592,  1594,  1596,  1600,  1608,\n+  1611,  1613,  1615,  1619,  1621,  1628,  1636,  1653,  1655,  1657,\n+  1661,  1667,  1672,  1674,  1677,  1679,  1681,  1683,  1684,  1685,\n+  1686,  1690,  1692,  1694,  1699,  1701,  1703,  1705,  1707,  1711,\n+  1714,  1719,  1721,  1726,  1727,  1728,  1729,  1730,  1732,  1734,\n+  1736,  1738,  1740,  1744,  1746,  1749,  1755,  1760,  1764,  1767,\n+  1769,  1771,  1775,  1777,  1779,  1781,  1785,  1788,  1792,  1798,\n+  1800,  1808,  1835,  1837,  1841,  1846,  1854,  1858,  1861,  1863,\n+  1874,  1885,  1890,  1899,  1901,  1905,  1908,  1910,  1915,  1920,\n+  1925,  1932,  1934,  1935,  1936,  1939,  1944,  1949,  1951,  1952,\n+  1954,  1956,  1957,  1959,  1963,  1966,  1970,  1973,  1977,  1979,\n+  1981,  1983,  1984,  1986,  1990,  1999,  2001,  2003,  2016,  2018,\n+  2024,  2026,  2028,  2032,  2034,  2039,  2044,  2049,  2051,  2053,\n+  2057,  2059,  2064,  2069,  2071,  2075,  2077,  2082,  2087,  2092,\n+  2094,  2096,  2100,  2102,  2107,  2112,  2117,  2122,  2124,  2126,\n+  2128,  2130,  2132,  2136,  2138,  2143,  2148,  2150,  2154,  2156,\n+  2161,  2165,  2167,  2172,  2176,  2178,  2183,  2187,  2189,  2194,\n+  2198,  2200,  2205,  2209,  2211,  2216,  2222,  2224,  2228,  2230,\n+  2233,  2236,  2244,  2246,  2247,  2250,  2252,  2255,  2259\n };\n #endif\n \n@@ -2247,7 +2250,7 @@ static const short yycheck[] = {     3,\n #define YYPURE 1\n \n /* -*-C-*-  Note some compilers choke on comments on `#line' lines.  */\n-#line 3 \"/usr/share/misc/bison.simple\"\n+#line 3 \"/usr/cygnus/gnupro-98r1/share/bison.simple\"\n \n /* Skeleton output parser for bison,\n    Copyright (C) 1984, 1989, 1990 Free Software Foundation, Inc.\n@@ -2264,8 +2267,7 @@ static const short yycheck[] = {     3,\n \n    You should have received a copy of the GNU General Public License\n    along with this program; if not, write to the Free Software\n-   Foundation, 59 Temple Place - Suite 330,\n-   Boston, MA 02111-1307, USA.  */\n+   Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.  */\n \n /* As a special exception, when this file is copied by Bison into a\n    Bison output file, you may use that output file without restriction.\n@@ -2441,7 +2443,7 @@ __yy_memcpy (char *to, char *from, int count)\n #endif\n #endif\n \f\n-#line 196 \"/usr/share/misc/bison.simple\"\n+#line 196 \"/usr/cygnus/gnupro-98r1/share/bison.simple\"\n \n /* The user can define YYPARSE_PARAM as the name of an argument to be passed\n    into yyparse.  The argument should have type void *.\n@@ -2746,66 +2748,66 @@ yyparse(YYPARSE_PARAM_ARG)\n   switch (yyn) {\n \n case 1:\n-#line 438 \"./parse.y\"\n+#line 441 \"./parse.y\"\n {;\n     break;}\n case 18:\n-#line 482 \"./parse.y\"\n+#line 485 \"./parse.y\"\n { \n \t\t  yyval.node = build_java_array_type (yyvsp[-2].node, -1);\n \t\t  CLASS_LOADED_P (yyval.node) = 1;\n \t\t;\n     break;}\n case 19:\n-#line 487 \"./parse.y\"\n+#line 490 \"./parse.y\"\n { yyval.node = build_unresolved_array_type (yyvsp[-2].node); ;\n     break;}\n case 20:\n-#line 489 \"./parse.y\"\n+#line 492 \"./parse.y\"\n { yyval.node = build_unresolved_array_type (yyvsp[-2].node); ;\n     break;}\n case 21:\n-#line 491 \"./parse.y\"\n+#line 494 \"./parse.y\"\n {RULE (\"']' expected\"); RECOVER;;\n     break;}\n case 22:\n-#line 493 \"./parse.y\"\n+#line 496 \"./parse.y\"\n {RULE (\"']' expected\"); RECOVER;;\n     break;}\n case 26:\n-#line 508 \"./parse.y\"\n+#line 511 \"./parse.y\"\n { yyval.node = make_qualified_name (yyvsp[-2].node, yyvsp[0].node, yyvsp[-1].operator.location); ;\n     break;}\n case 28:\n-#line 517 \"./parse.y\"\n+#line 520 \"./parse.y\"\n {yyval.node = NULL;;\n     break;}\n case 36:\n-#line 529 \"./parse.y\"\n+#line 532 \"./parse.y\"\n {\n \t\t  yyval.node = NULL;\n \t\t;\n     break;}\n case 37:\n-#line 533 \"./parse.y\"\n+#line 536 \"./parse.y\"\n {\n \t\t  yyval.node = NULL;\n \t\t;\n     break;}\n case 40:\n-#line 545 \"./parse.y\"\n+#line 548 \"./parse.y\"\n { ctxp->package = EXPR_WFL_NODE (yyvsp[-1].node); ;\n     break;}\n case 41:\n-#line 547 \"./parse.y\"\n+#line 550 \"./parse.y\"\n {yyerror (\"Missing name\"); RECOVER;;\n     break;}\n case 42:\n-#line 549 \"./parse.y\"\n+#line 552 \"./parse.y\"\n {yyerror (\"';' expected\"); RECOVER;;\n     break;}\n case 45:\n-#line 559 \"./parse.y\"\n+#line 562 \"./parse.y\"\n {\n \t\t  tree name = EXPR_WFL_NODE (yyvsp[-1].node), node, last_name;\n \t\t  int   i = IDENTIFIER_LENGTH (name)-1;\n@@ -2833,58 +2835,62 @@ case 45:\n \t\t;\n     break;}\n case 46:\n-#line 585 \"./parse.y\"\n+#line 588 \"./parse.y\"\n {yyerror (\"Missing name\"); RECOVER;;\n     break;}\n case 47:\n-#line 587 \"./parse.y\"\n+#line 590 \"./parse.y\"\n {yyerror (\"';' expected\"); RECOVER;;\n     break;}\n case 48:\n-#line 592 \"./parse.y\"\n+#line 595 \"./parse.y\"\n {\n \t\t  tree name = EXPR_WFL_NODE (yyvsp[-3].node);\n-\t\t  tree node = build_tree_list (yyvsp[-3].node, NULL_TREE);\n-\t\t  read_import_dir (yyvsp[-3].node);\n-\t\t  TREE_CHAIN (node) = ctxp->import_demand_list;\n-\t\t  ctxp->import_demand_list = node;\n+\t\t  /* Don't import java.lang.* twice. */\n+\t\t  if (name != java_lang_id)\n+\t\t    {\n+\t\t      tree node = build_tree_list (yyvsp[-3].node, NULL_TREE);\n+\t\t      read_import_dir (yyvsp[-3].node);\n+\t\t      TREE_CHAIN (node) = ctxp->import_demand_list;\n+\t\t      ctxp->import_demand_list = node;\n+\t\t    }\n \t\t;\n     break;}\n case 49:\n-#line 600 \"./parse.y\"\n+#line 607 \"./parse.y\"\n {yyerror (\"'*' expected\"); RECOVER;;\n     break;}\n case 50:\n-#line 602 \"./parse.y\"\n+#line 609 \"./parse.y\"\n {yyerror (\"';' expected\"); RECOVER;;\n     break;}\n case 51:\n-#line 607 \"./parse.y\"\n+#line 614 \"./parse.y\"\n {\n \t\t  maybe_generate_finit ();\n \t\t  maybe_generate_clinit ();\n \t\t  yyval.node = yyvsp[0].node;\n \t\t;\n     break;}\n case 53:\n-#line 614 \"./parse.y\"\n+#line 621 \"./parse.y\"\n { yyval.node = NULL; ;\n     break;}\n case 54:\n-#line 616 \"./parse.y\"\n+#line 623 \"./parse.y\"\n {\n \t\t  YYERROR_NOW;\n \t\t  yyerror (\"Class or interface declaration expected\");\n \t\t;\n     break;}\n case 55:\n-#line 627 \"./parse.y\"\n+#line 634 \"./parse.y\"\n {\n \t\t  yyval.value = (1 << yyvsp[0].value);\n \t\t;\n     break;}\n case 56:\n-#line 631 \"./parse.y\"\n+#line 638 \"./parse.y\"\n {\n \t\t  int acc = (1 << yyvsp[0].value);\n \t\t  if (yyval.value & acc)\n@@ -2898,116 +2904,116 @@ case 56:\n \t\t;\n     break;}\n case 57:\n-#line 647 \"./parse.y\"\n+#line 654 \"./parse.y\"\n { create_class (yyvsp[-4].value, yyvsp[-2].node, yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 58:\n-#line 649 \"./parse.y\"\n+#line 656 \"./parse.y\"\n { \n \t\t  yyval.node = yyvsp[0].node;\n \t\t;\n     break;}\n case 59:\n-#line 653 \"./parse.y\"\n+#line 660 \"./parse.y\"\n { create_class (0, yyvsp[-2].node, yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 60:\n-#line 655 \"./parse.y\"\n+#line 662 \"./parse.y\"\n { \t\n \t\t  yyval.node = yyvsp[0].node;\n \t\t;\n     break;}\n case 61:\n-#line 659 \"./parse.y\"\n+#line 666 \"./parse.y\"\n {yyerror (\"Missing class name\"); RECOVER;;\n     break;}\n case 62:\n-#line 661 \"./parse.y\"\n+#line 668 \"./parse.y\"\n {yyerror (\"Missing class name\"); RECOVER;;\n     break;}\n case 63:\n-#line 663 \"./parse.y\"\n+#line 670 \"./parse.y\"\n {if (!ctxp->class_err) yyerror (\"'{' expected\"); DRECOVER(class1);;\n     break;}\n case 64:\n-#line 665 \"./parse.y\"\n+#line 672 \"./parse.y\"\n {if (!ctxp->class_err) yyerror (\"'{' expected\"); RECOVER;;\n     break;}\n case 65:\n-#line 669 \"./parse.y\"\n+#line 676 \"./parse.y\"\n { yyval.node = NULL; ;\n     break;}\n case 66:\n-#line 671 \"./parse.y\"\n+#line 678 \"./parse.y\"\n { yyval.node = yyvsp[0].node; ;\n     break;}\n case 67:\n-#line 673 \"./parse.y\"\n+#line 680 \"./parse.y\"\n {yyerror (\"'{' expected\"); ctxp->class_err=1;;\n     break;}\n case 68:\n-#line 675 \"./parse.y\"\n+#line 682 \"./parse.y\"\n {yyerror (\"Missing super class name\"); ctxp->class_err=1;;\n     break;}\n case 69:\n-#line 679 \"./parse.y\"\n+#line 686 \"./parse.y\"\n { yyval.node = NULL_TREE; ;\n     break;}\n case 70:\n-#line 681 \"./parse.y\"\n+#line 688 \"./parse.y\"\n { yyval.node = yyvsp[0].node; ;\n     break;}\n case 71:\n-#line 683 \"./parse.y\"\n+#line 690 \"./parse.y\"\n {\n \t\t  ctxp->class_err=1;\n \t\t  yyerror (\"Missing interface name\"); \n \t\t;\n     break;}\n case 72:\n-#line 691 \"./parse.y\"\n+#line 698 \"./parse.y\"\n { \n \t\t  ctxp->interface_number = 1;\n \t\t  yyval.node = build_tree_list (yyvsp[0].node, NULL_TREE);\n \t\t;\n     break;}\n case 73:\n-#line 696 \"./parse.y\"\n+#line 703 \"./parse.y\"\n { \n \t\t  ctxp->interface_number++;\n \t\t  yyval.node = chainon (yyvsp[-2].node, build_tree_list (yyvsp[0].node, NULL_TREE));\n \t\t;\n     break;}\n case 74:\n-#line 701 \"./parse.y\"\n+#line 708 \"./parse.y\"\n {yyerror (\"Missing interface name\"); RECOVER;;\n     break;}\n case 75:\n-#line 706 \"./parse.y\"\n+#line 713 \"./parse.y\"\n { yyval.node = ctxp->current_parsed_class; ;\n     break;}\n case 76:\n-#line 708 \"./parse.y\"\n+#line 715 \"./parse.y\"\n { yyval.node = ctxp->current_parsed_class; ;\n     break;}\n case 82:\n-#line 721 \"./parse.y\"\n+#line 728 \"./parse.y\"\n { yyval.node = parse_jdk1_1_error (\"instance initializer\"); ;\n     break;}\n case 85:\n-#line 728 \"./parse.y\"\n+#line 735 \"./parse.y\"\n { yyval.node = parse_jdk1_1_error (\"inner classe declaration\"); ;\n     break;}\n case 86:\n-#line 730 \"./parse.y\"\n+#line 737 \"./parse.y\"\n { yyval.node = parse_jdk1_1_error (\"inner interface declaration\"); ;\n     break;}\n case 87:\n-#line 736 \"./parse.y\"\n+#line 743 \"./parse.y\"\n { register_fields (0, yyvsp[-2].node, yyvsp[-1].node); ;\n     break;}\n case 88:\n-#line 738 \"./parse.y\"\n+#line 745 \"./parse.y\"\n {\n \t\t  check_modifiers \n \t\t    (\"Illegal modifier `%s' for field declaration\",\n@@ -3017,19 +3023,19 @@ case 88:\n \t\t;\n     break;}\n case 90:\n-#line 751 \"./parse.y\"\n+#line 758 \"./parse.y\"\n { yyval.node = chainon (yyvsp[-2].node, yyvsp[0].node); ;\n     break;}\n case 91:\n-#line 753 \"./parse.y\"\n+#line 760 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 92:\n-#line 758 \"./parse.y\"\n+#line 765 \"./parse.y\"\n { yyval.node = build_tree_list (yyvsp[0].node, NULL_TREE); ;\n     break;}\n case 93:\n-#line 760 \"./parse.y\"\n+#line 767 \"./parse.y\"\n { \n \t\t  if (java_error_count)\n \t\t    yyvsp[0].node = NULL_TREE;\n@@ -3038,101 +3044,101 @@ case 93:\n \t\t;\n     break;}\n case 94:\n-#line 767 \"./parse.y\"\n+#line 774 \"./parse.y\"\n {\n \t\t  yyerror (\"Missing variable initializer\");\n \t\t  yyval.node = build_tree_list (yyvsp[-2].node, NULL_TREE);\n \t\t  RECOVER;\n \t\t;\n     break;}\n case 95:\n-#line 773 \"./parse.y\"\n+#line 780 \"./parse.y\"\n {\n \t\t  yyerror (\"';' expected\");\n \t\t  yyval.node = build_tree_list (yyvsp[-3].node, NULL_TREE);\n \t\t  RECOVER;\n \t\t;\n     break;}\n case 97:\n-#line 783 \"./parse.y\"\n+#line 790 \"./parse.y\"\n { yyval.node = build_unresolved_array_type (yyvsp[-2].node); ;\n     break;}\n case 98:\n-#line 785 \"./parse.y\"\n+#line 792 \"./parse.y\"\n {yyerror (\"Invalid declaration\"); DRECOVER(vdi);;\n     break;}\n case 99:\n-#line 787 \"./parse.y\"\n+#line 794 \"./parse.y\"\n {yyerror (\"']' expected\"); DRECOVER(vdi);;\n     break;}\n case 100:\n-#line 789 \"./parse.y\"\n+#line 796 \"./parse.y\"\n {yyerror (\"Unbalanced ']'\"); DRECOVER(vdi);;\n     break;}\n case 103:\n-#line 800 \"./parse.y\"\n+#line 807 \"./parse.y\"\n {\n \t\t  current_function_decl = yyvsp[0].node;\n \t\t  source_start_java_method (current_function_decl);\n \t\t;\n     break;}\n case 104:\n-#line 805 \"./parse.y\"\n+#line 812 \"./parse.y\"\n { complete_method_declaration (yyvsp[0].node); ;\n     break;}\n case 105:\n-#line 807 \"./parse.y\"\n+#line 814 \"./parse.y\"\n {YYNOT_TWICE yyerror (\"'{' expected\"); RECOVER;;\n     break;}\n case 106:\n-#line 812 \"./parse.y\"\n+#line 819 \"./parse.y\"\n { yyval.node = method_header (0, yyvsp[-2].node, yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 107:\n-#line 814 \"./parse.y\"\n+#line 821 \"./parse.y\"\n { yyval.node = method_header (0, void_type_node, yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 108:\n-#line 816 \"./parse.y\"\n+#line 823 \"./parse.y\"\n { yyval.node = method_header (yyvsp[-3].value, yyvsp[-2].node, yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 109:\n-#line 818 \"./parse.y\"\n+#line 825 \"./parse.y\"\n { yyval.node = method_header (yyvsp[-3].value, void_type_node, yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 110:\n-#line 820 \"./parse.y\"\n+#line 827 \"./parse.y\"\n {RECOVER;;\n     break;}\n case 111:\n-#line 822 \"./parse.y\"\n+#line 829 \"./parse.y\"\n {RECOVER;;\n     break;}\n case 112:\n-#line 824 \"./parse.y\"\n+#line 831 \"./parse.y\"\n {yyerror (\"Identifier expected\"); RECOVER;;\n     break;}\n case 113:\n-#line 826 \"./parse.y\"\n+#line 833 \"./parse.y\"\n {yyerror (\"Identifier expected\"); RECOVER;;\n     break;}\n case 114:\n-#line 828 \"./parse.y\"\n+#line 835 \"./parse.y\"\n {\n \t\t  yyerror (\"Invalid method declaration, return type required\");\n \t\t  RECOVER;\n \t\t;\n     break;}\n case 115:\n-#line 836 \"./parse.y\"\n+#line 843 \"./parse.y\"\n { yyval.node = method_declarator (yyvsp[-2].node, NULL_TREE); ;\n     break;}\n case 116:\n-#line 838 \"./parse.y\"\n+#line 845 \"./parse.y\"\n { yyval.node = method_declarator (yyvsp[-3].node, yyvsp[-1].node); ;\n     break;}\n case 117:\n-#line 840 \"./parse.y\"\n+#line 847 \"./parse.y\"\n {\n \t\t  EXPR_WFL_LINECOL (wfl_operator) = yyvsp[-1].operator.location;\n \t\t  TREE_PURPOSE (yyvsp[-2].node) = \n@@ -3143,169 +3149,169 @@ case 117:\n \t\t;\n     break;}\n case 118:\n-#line 849 \"./parse.y\"\n+#line 856 \"./parse.y\"\n {yyerror (\"')' expected\"); DRECOVER(method_declarator);;\n     break;}\n case 119:\n-#line 851 \"./parse.y\"\n+#line 858 \"./parse.y\"\n {yyerror (\"']' expected\"); RECOVER;;\n     break;}\n case 120:\n-#line 856 \"./parse.y\"\n+#line 863 \"./parse.y\"\n {\n \t\t  ctxp->formal_parameter_number = 1;\n \t\t;\n     break;}\n case 121:\n-#line 860 \"./parse.y\"\n+#line 867 \"./parse.y\"\n {\n \t\t  ctxp->formal_parameter_number += 1;\n \t\t  yyval.node = chainon (yyvsp[-2].node, yyvsp[0].node);\n \t\t;\n     break;}\n case 122:\n-#line 865 \"./parse.y\"\n+#line 872 \"./parse.y\"\n {yyerror (\"Missing formal parameter term\"); RECOVER;;\n     break;}\n case 123:\n-#line 870 \"./parse.y\"\n+#line 877 \"./parse.y\"\n {\n \t\t  yyval.node = build_tree_list (yyvsp[0].node, yyvsp[-1].node);\n \t\t;\n     break;}\n case 124:\n-#line 874 \"./parse.y\"\n+#line 881 \"./parse.y\"\n { yyval.node = parse_jdk1_1_error (\"final parameters\"); ;\n     break;}\n case 125:\n-#line 876 \"./parse.y\"\n+#line 883 \"./parse.y\"\n {yyerror (\"Missing identifier\"); RECOVER;;\n     break;}\n case 126:\n-#line 878 \"./parse.y\"\n+#line 885 \"./parse.y\"\n {\n \t\t  SOURCE_FRONTEND_DEBUG ((\"Modifiers: %d\", yyvsp[-2].value));\n \t\t  yyerror (\"Missing identifier\"); RECOVER;\n \t\t;\n     break;}\n case 127:\n-#line 885 \"./parse.y\"\n+#line 892 \"./parse.y\"\n { yyval.node = NULL_TREE; ;\n     break;}\n case 128:\n-#line 887 \"./parse.y\"\n+#line 894 \"./parse.y\"\n { yyval.node = yyvsp[0].node; ;\n     break;}\n case 129:\n-#line 889 \"./parse.y\"\n+#line 896 \"./parse.y\"\n {yyerror (\"Missing class type term\"); RECOVER;;\n     break;}\n case 130:\n-#line 894 \"./parse.y\"\n+#line 901 \"./parse.y\"\n { yyval.node = build_tree_list (yyvsp[0].node, yyvsp[0].node); ;\n     break;}\n case 131:\n-#line 896 \"./parse.y\"\n+#line 903 \"./parse.y\"\n { yyval.node = tree_cons (yyvsp[0].node, yyvsp[0].node, yyvsp[-2].node); ;\n     break;}\n case 132:\n-#line 898 \"./parse.y\"\n+#line 905 \"./parse.y\"\n {yyerror (\"Missing class type term\"); RECOVER;;\n     break;}\n case 135:\n-#line 905 \"./parse.y\"\n+#line 912 \"./parse.y\"\n { yyval.node = NULL_TREE; ;\n     break;}\n case 136:\n-#line 911 \"./parse.y\"\n+#line 918 \"./parse.y\"\n {\n \t\t  RULE (\"STATIC_INITIALIZER\");\n \t\t;\n     break;}\n case 137:\n-#line 915 \"./parse.y\"\n+#line 922 \"./parse.y\"\n {\n \t\t  RULE (\"STATIC_INITIALIZER\");\n \t\t;\n     break;}\n case 138:\n-#line 922 \"./parse.y\"\n+#line 929 \"./parse.y\"\n {\n \t\t  SOURCE_FRONTEND_DEBUG ((\"Modifiers: %d\", yyvsp[0].value));\n \t\t;\n     break;}\n case 139:\n-#line 930 \"./parse.y\"\n+#line 937 \"./parse.y\"\n {\n \t\t  current_function_decl = yyvsp[0].node;\n \t\t  source_start_java_method (current_function_decl);\n \t\t;\n     break;}\n case 140:\n-#line 935 \"./parse.y\"\n+#line 942 \"./parse.y\"\n { complete_method_declaration (yyvsp[0].node); ;\n     break;}\n case 141:\n-#line 940 \"./parse.y\"\n+#line 947 \"./parse.y\"\n { yyval.node = method_header (0, NULL_TREE, yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 142:\n-#line 942 \"./parse.y\"\n+#line 949 \"./parse.y\"\n { yyval.node = method_header (yyvsp[-2].value, NULL_TREE, yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 143:\n-#line 947 \"./parse.y\"\n+#line 954 \"./parse.y\"\n { yyval.node = method_declarator (yyvsp[-2].node, NULL_TREE); ;\n     break;}\n case 144:\n-#line 949 \"./parse.y\"\n+#line 956 \"./parse.y\"\n { yyval.node = method_declarator (yyvsp[-3].node, yyvsp[-1].node); ;\n     break;}\n case 145:\n-#line 957 \"./parse.y\"\n+#line 964 \"./parse.y\"\n { \n \t\t  BLOCK_EXPR_BODY (yyvsp[0].node) = empty_stmt_node;\n \t\t  yyval.node = yyvsp[0].node;\n \t\t;\n     break;}\n case 146:\n-#line 962 \"./parse.y\"\n+#line 969 \"./parse.y\"\n { yyval.node = yyvsp[0].node; ;\n     break;}\n case 147:\n-#line 964 \"./parse.y\"\n+#line 971 \"./parse.y\"\n { yyval.node = yyvsp[0].node; ;\n     break;}\n case 148:\n-#line 966 \"./parse.y\"\n+#line 973 \"./parse.y\"\n { yyval.node = yyvsp[0].node; ;\n     break;}\n case 149:\n-#line 972 \"./parse.y\"\n+#line 979 \"./parse.y\"\n { \n \t\t  yyval.node = build_method_invocation (yyvsp[-3].node, NULL_TREE); \n \t\t  yyval.node = build_debugable_stmt (EXPR_WFL_LINECOL (yyvsp[-3].node), yyval.node);\n \t\t  yyval.node = java_method_add_stmt (current_function_decl, yyval.node);\n \t\t;\n     break;}\n case 150:\n-#line 978 \"./parse.y\"\n+#line 985 \"./parse.y\"\n { \n \t\t  yyval.node = build_method_invocation (yyvsp[-4].node, yyvsp[-2].node); \n \t\t  yyval.node = build_debugable_stmt (EXPR_WFL_LINECOL (yyvsp[-4].node), yyval.node);\n \t\t  yyval.node = java_method_add_stmt (current_function_decl, yyval.node);\n \t\t;\n     break;}\n case 151:\n-#line 986 \"./parse.y\"\n+#line 993 \"./parse.y\"\n {yyval.node = parse_jdk1_1_error (\"explicit constructor invocation\"); ;\n     break;}\n case 152:\n-#line 988 \"./parse.y\"\n+#line 995 \"./parse.y\"\n {yyval.node = parse_jdk1_1_error (\"explicit constructor invocation\"); ;\n     break;}\n case 153:\n-#line 993 \"./parse.y\"\n+#line 1000 \"./parse.y\"\n {\n \t\t  tree wfl = build_wfl_node (this_identifier_node, \n \t\t\t\t\t     input_filename, 0, 0);\n@@ -3314,7 +3320,7 @@ case 153:\n \t\t;\n     break;}\n case 154:\n-#line 1000 \"./parse.y\"\n+#line 1007 \"./parse.y\"\n {\n \t\t  tree wfl = build_wfl_node (super_identifier_node,\n \t\t\t\t\t     input_filename, 0, 0);\n@@ -3323,168 +3329,168 @@ case 154:\n \t\t;\n     break;}\n case 155:\n-#line 1012 \"./parse.y\"\n+#line 1019 \"./parse.y\"\n { create_interface (0, yyvsp[0].node, NULL_TREE); ;\n     break;}\n case 156:\n-#line 1014 \"./parse.y\"\n+#line 1021 \"./parse.y\"\n {\n \t\t  yyval.node = yyvsp[0].node;\n \t\t;\n     break;}\n case 157:\n-#line 1018 \"./parse.y\"\n+#line 1025 \"./parse.y\"\n { create_interface (yyvsp[-2].value, yyvsp[0].node, NULL_TREE); ;\n     break;}\n case 158:\n-#line 1020 \"./parse.y\"\n+#line 1027 \"./parse.y\"\n {\n \t\t  yyval.node = yyvsp[0].node;\n \t\t;\n     break;}\n case 159:\n-#line 1024 \"./parse.y\"\n+#line 1031 \"./parse.y\"\n { create_interface (0, yyvsp[-1].node, yyvsp[0].node);\t;\n     break;}\n case 160:\n-#line 1026 \"./parse.y\"\n+#line 1033 \"./parse.y\"\n {\n \t\t  yyval.node = yyvsp[0].node;\n \t\t;\n     break;}\n case 161:\n-#line 1030 \"./parse.y\"\n+#line 1037 \"./parse.y\"\n { create_interface (yyvsp[-3].value, yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 162:\n-#line 1032 \"./parse.y\"\n+#line 1039 \"./parse.y\"\n {\n \t\t  yyval.node = yyvsp[0].node;\n \t\t;\n     break;}\n case 163:\n-#line 1036 \"./parse.y\"\n+#line 1043 \"./parse.y\"\n {yyerror (\"(here)'{' expected\"); RECOVER;;\n     break;}\n case 164:\n-#line 1038 \"./parse.y\"\n+#line 1045 \"./parse.y\"\n {yyerror (\"(there)'{' expected\"); RECOVER;;\n     break;}\n case 165:\n-#line 1043 \"./parse.y\"\n+#line 1050 \"./parse.y\"\n { \n \t\t  ctxp->interface_number = 1;\n \t\t  yyval.node = build_tree_list (yyvsp[0].node, NULL_TREE);\n \t\t;\n     break;}\n case 166:\n-#line 1048 \"./parse.y\"\n+#line 1055 \"./parse.y\"\n { \n \t\t  ctxp->interface_number++;\n \t\t  yyval.node = chainon (yyvsp[-2].node, build_tree_list (yyvsp[0].node, NULL_TREE));\n \t\t;\n     break;}\n case 167:\n-#line 1053 \"./parse.y\"\n+#line 1060 \"./parse.y\"\n {yyerror (\"Invalid interface type\"); RECOVER;;\n     break;}\n case 168:\n-#line 1055 \"./parse.y\"\n+#line 1062 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 169:\n-#line 1060 \"./parse.y\"\n+#line 1067 \"./parse.y\"\n { yyval.node = NULL_TREE; ;\n     break;}\n case 170:\n-#line 1062 \"./parse.y\"\n+#line 1069 \"./parse.y\"\n { yyval.node = NULL_TREE; ;\n     break;}\n case 175:\n-#line 1074 \"./parse.y\"\n+#line 1081 \"./parse.y\"\n { yyval.node = parse_jdk1_1_error (\"inner class declaration\"); ;\n     break;}\n case 176:\n-#line 1076 \"./parse.y\"\n+#line 1083 \"./parse.y\"\n { yyval.node = parse_jdk1_1_error (\"inner interface declaration\"); ;\n     break;}\n case 178:\n-#line 1085 \"./parse.y\"\n+#line 1092 \"./parse.y\"\n { \n \t\t  check_abstract_method_header (yyvsp[-1].node);\n \t\t  current_function_decl = NULL_TREE; /* FIXME ? */\n \t\t;\n     break;}\n case 179:\n-#line 1090 \"./parse.y\"\n+#line 1097 \"./parse.y\"\n {yyerror (\"';' expected\"); RECOVER;;\n     break;}\n case 180:\n-#line 1096 \"./parse.y\"\n+#line 1103 \"./parse.y\"\n { yyval.node = build_new_array_init (yyvsp[-1].operator.location, NULL_TREE); ;\n     break;}\n case 181:\n-#line 1098 \"./parse.y\"\n+#line 1105 \"./parse.y\"\n { yyval.node = build_new_array_init (yyvsp[-2].operator.location, yyvsp[-1].node); ;\n     break;}\n case 182:\n-#line 1100 \"./parse.y\"\n+#line 1107 \"./parse.y\"\n { yyval.node = build_new_array_init (yyvsp[-3].operator.location, yyvsp[-2].node); ;\n     break;}\n case 183:\n-#line 1105 \"./parse.y\"\n+#line 1112 \"./parse.y\"\n { \n \t\t  yyval.node = tree_cons (maybe_build_array_element_wfl (yyvsp[0].node), \n \t\t\t\t  yyvsp[0].node, NULL_TREE);\n \t\t;\n     break;}\n case 184:\n-#line 1110 \"./parse.y\"\n+#line 1117 \"./parse.y\"\n {\n \t\t  yyval.node = tree_cons (maybe_build_array_element_wfl (yyvsp[0].node), yyvsp[0].node, yyvsp[-2].node);\n \t\t;\n     break;}\n case 185:\n-#line 1114 \"./parse.y\"\n+#line 1121 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 186:\n-#line 1120 \"./parse.y\"\n+#line 1127 \"./parse.y\"\n { yyval.node = empty_stmt_node; ;\n     break;}\n case 187:\n-#line 1122 \"./parse.y\"\n+#line 1129 \"./parse.y\"\n { yyval.node = yyvsp[0].node; ;\n     break;}\n case 188:\n-#line 1127 \"./parse.y\"\n+#line 1134 \"./parse.y\"\n { enter_block (); ;\n     break;}\n case 189:\n-#line 1132 \"./parse.y\"\n+#line 1139 \"./parse.y\"\n { \n \t\t  maybe_absorb_scoping_blocks ();\n \t\t  yyval.node = exit_block ();\n \t\t;\n     break;}\n case 193:\n-#line 1146 \"./parse.y\"\n+#line 1153 \"./parse.y\"\n { java_method_add_stmt (current_function_decl, yyvsp[0].node); ;\n     break;}\n case 194:\n-#line 1148 \"./parse.y\"\n+#line 1155 \"./parse.y\"\n { parse_jdk1_1_error (\"inner class declaration\"); ;\n     break;}\n case 196:\n-#line 1157 \"./parse.y\"\n+#line 1164 \"./parse.y\"\n { declare_local_variables (0, yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 197:\n-#line 1159 \"./parse.y\"\n+#line 1166 \"./parse.y\"\n { declare_local_variables (yyvsp[-2].value, yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 203:\n-#line 1169 \"./parse.y\"\n+#line 1176 \"./parse.y\"\n { \n \t\t  /* If the for loop is unlabeled, we must return the\n \t\t     block it was defined it. It our last chance to\n@@ -3494,11 +3500,11 @@ case 203:\n \t\t;\n     break;}\n case 220:\n-#line 1202 \"./parse.y\"\n+#line 1209 \"./parse.y\"\n { yyval.node = empty_stmt_node; ;\n     break;}\n case 221:\n-#line 1207 \"./parse.y\"\n+#line 1214 \"./parse.y\"\n {\n \t\t  yyval.node = build_labeled_block (EXPR_WFL_LINECOL (yyvsp[-1].node), \n \t\t\t\t\t    EXPR_WFL_NODE (yyvsp[-1].node));\n@@ -3508,27 +3514,27 @@ case 221:\n \t\t;\n     break;}\n case 222:\n-#line 1218 \"./parse.y\"\n+#line 1225 \"./parse.y\"\n { \n \t\t  yyval.node = complete_labeled_statement (yyvsp[-1].node, yyvsp[0].node);\n \t\t  pop_labeled_block ();\n \t\t  POP_LABELED_BLOCK ();\n \t\t;\n     break;}\n case 223:\n-#line 1224 \"./parse.y\"\n+#line 1231 \"./parse.y\"\n {yyerror (\"':' expected\"); RECOVER;;\n     break;}\n case 224:\n-#line 1229 \"./parse.y\"\n+#line 1236 \"./parse.y\"\n { \n \t\t  yyval.node = complete_labeled_statement (yyvsp[-1].node, yyvsp[0].node);\n \t\t  pop_labeled_block ();\n \t\t  POP_LABELED_BLOCK ();\n \t\t;\n     break;}\n case 225:\n-#line 1240 \"./parse.y\"\n+#line 1247 \"./parse.y\"\n {\n \t\t  /* We have a statement. Generate a WFL around it so\n \t\t     we can debug it */\n@@ -3539,105 +3545,105 @@ case 225:\n \t\t;\n     break;}\n case 226:\n-#line 1249 \"./parse.y\"\n+#line 1256 \"./parse.y\"\n {\n \t\t  if (ctxp->prevent_ese != lineno)\n \t\t    yyerror (\"Invalid expression statement\");\n \t\t  DRECOVER (expr_stmt);\n \t\t;\n     break;}\n case 227:\n-#line 1255 \"./parse.y\"\n+#line 1262 \"./parse.y\"\n {\n \t\t  if (ctxp->prevent_ese != lineno)\n \t\t    yyerror (\"Invalid expression statement\");\n \t\t  DRECOVER (expr_stmt);\n \t\t;\n     break;}\n case 228:\n-#line 1261 \"./parse.y\"\n+#line 1268 \"./parse.y\"\n {\n \t\t  if (ctxp->prevent_ese != lineno)\n \t\t    yyerror (\"Invalid expression statement\");\n \t\t  DRECOVER (expr_stmt);\n \t\t;\n     break;}\n case 229:\n-#line 1267 \"./parse.y\"\n+#line 1274 \"./parse.y\"\n {yyerror (\"')' expected\"); RECOVER;;\n     break;}\n case 230:\n-#line 1269 \"./parse.y\"\n+#line 1276 \"./parse.y\"\n {\n \t\t  yyerror (\"Constructor invocation must be first \"\n \t\t\t   \"thing in a constructor\"); \n \t\t  RECOVER;\n \t\t;\n     break;}\n case 231:\n-#line 1275 \"./parse.y\"\n+#line 1282 \"./parse.y\"\n {yyerror (\"')' expected\"); RECOVER;;\n     break;}\n case 232:\n-#line 1277 \"./parse.y\"\n+#line 1284 \"./parse.y\"\n {\n \t\t  yyerror (\"Constructor invocation must be first \"\n \t\t\t   \"thing in a constructor\"); \n \t\t  RECOVER;\n \t\t;\n     break;}\n case 233:\n-#line 1283 \"./parse.y\"\n+#line 1290 \"./parse.y\"\n {yyerror (\"'(' expected\"); RECOVER;;\n     break;}\n case 234:\n-#line 1285 \"./parse.y\"\n+#line 1292 \"./parse.y\"\n {yyerror (\"')' expected\"); RECOVER;;\n     break;}\n case 235:\n-#line 1287 \"./parse.y\"\n+#line 1294 \"./parse.y\"\n {yyerror (\"')' expected\"); RECOVER;;\n     break;}\n case 236:\n-#line 1289 \"./parse.y\"\n+#line 1296 \"./parse.y\"\n {yyerror (\"';' expected\"); RECOVER;;\n     break;}\n case 237:\n-#line 1291 \"./parse.y\"\n+#line 1298 \"./parse.y\"\n {yyerror (\"';' expected\"); RECOVER;;\n     break;}\n case 245:\n-#line 1306 \"./parse.y\"\n+#line 1313 \"./parse.y\"\n { yyval.node = build_if_else_statement (yyvsp[-3].operator.location, yyvsp[-2].node, yyvsp[0].node, NULL_TREE); ;\n     break;}\n case 246:\n-#line 1308 \"./parse.y\"\n+#line 1315 \"./parse.y\"\n {yyerror (\"'(' expected\"); RECOVER;;\n     break;}\n case 247:\n-#line 1310 \"./parse.y\"\n+#line 1317 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 248:\n-#line 1312 \"./parse.y\"\n+#line 1319 \"./parse.y\"\n {yyerror (\"')' expected\"); RECOVER;;\n     break;}\n case 249:\n-#line 1317 \"./parse.y\"\n+#line 1324 \"./parse.y\"\n { yyval.node = build_if_else_statement (yyvsp[-5].operator.location, yyvsp[-4].node, yyvsp[-2].node, yyvsp[0].node); ;\n     break;}\n case 250:\n-#line 1322 \"./parse.y\"\n+#line 1329 \"./parse.y\"\n { yyval.node = build_if_else_statement (yyvsp[-5].operator.location, yyvsp[-4].node, yyvsp[-2].node, yyvsp[0].node); ;\n     break;}\n case 251:\n-#line 1327 \"./parse.y\"\n+#line 1334 \"./parse.y\"\n {\n \t\t  enter_block ();\n \t\t;\n     break;}\n case 252:\n-#line 1331 \"./parse.y\"\n+#line 1338 \"./parse.y\"\n { \n \t\t  /* Make into \"proper list\" of COMPOUND_EXPRs.\n \t\t     I.e. make the last statment also have its own\n@@ -3648,112 +3654,112 @@ case 252:\n \t\t;\n     break;}\n case 253:\n-#line 1343 \"./parse.y\"\n+#line 1350 \"./parse.y\"\n { \n \t\t  yyval.node = build (SWITCH_EXPR, NULL_TREE, yyvsp[-1].node, NULL_TREE);\n \t\t  EXPR_WFL_LINECOL (yyval.node) = yyvsp[-2].operator.location;\n \t\t;\n     break;}\n case 254:\n-#line 1348 \"./parse.y\"\n+#line 1355 \"./parse.y\"\n {yyerror (\"'(' expected\"); RECOVER;;\n     break;}\n case 255:\n-#line 1350 \"./parse.y\"\n+#line 1357 \"./parse.y\"\n {yyerror (\"Missing term or ')'\"); DRECOVER(switch_statement);;\n     break;}\n case 256:\n-#line 1352 \"./parse.y\"\n+#line 1359 \"./parse.y\"\n {yyerror (\"'{' expected\"); RECOVER;;\n     break;}\n case 257:\n-#line 1360 \"./parse.y\"\n+#line 1367 \"./parse.y\"\n { yyval.node = NULL_TREE; ;\n     break;}\n case 258:\n-#line 1362 \"./parse.y\"\n+#line 1369 \"./parse.y\"\n { yyval.node = NULL_TREE; ;\n     break;}\n case 259:\n-#line 1364 \"./parse.y\"\n+#line 1371 \"./parse.y\"\n { yyval.node = NULL_TREE; ;\n     break;}\n case 260:\n-#line 1366 \"./parse.y\"\n+#line 1373 \"./parse.y\"\n { yyval.node = NULL_TREE; ;\n     break;}\n case 266:\n-#line 1385 \"./parse.y\"\n+#line 1392 \"./parse.y\"\n { \n \t\t  tree lab = build1 (CASE_EXPR, NULL_TREE, yyvsp[-1].node);\n \t\t  EXPR_WFL_LINECOL (lab) = yyvsp[-2].operator.location;\n \t\t  java_method_add_stmt (current_function_decl, lab);\n \t\t;\n     break;}\n case 267:\n-#line 1391 \"./parse.y\"\n+#line 1398 \"./parse.y\"\n { \n \t\t  tree lab = build1 (DEFAULT_EXPR, NULL_TREE, NULL_TREE);\n \t\t  EXPR_WFL_LINECOL (lab) = yyvsp[-1].operator.location;\n \t\t  java_method_add_stmt (current_function_decl, lab);\n \t\t;\n     break;}\n case 268:\n-#line 1397 \"./parse.y\"\n+#line 1404 \"./parse.y\"\n {yyerror (\"Missing or invalid constant expression\"); RECOVER;;\n     break;}\n case 269:\n-#line 1399 \"./parse.y\"\n+#line 1406 \"./parse.y\"\n {yyerror (\"':' expected\"); RECOVER;;\n     break;}\n case 270:\n-#line 1401 \"./parse.y\"\n+#line 1408 \"./parse.y\"\n {yyerror (\"':' expected\"); RECOVER;;\n     break;}\n case 271:\n-#line 1406 \"./parse.y\"\n+#line 1413 \"./parse.y\"\n { \n \t\t  tree body = build_loop_body (yyvsp[-2].operator.location, yyvsp[-1].node, 0);\n \t\t  yyval.node = build_new_loop (body);\n \t\t;\n     break;}\n case 272:\n-#line 1414 \"./parse.y\"\n+#line 1421 \"./parse.y\"\n { yyval.node = complete_loop_body (0, NULL_TREE, yyvsp[0].node, 0); ;\n     break;}\n case 273:\n-#line 1416 \"./parse.y\"\n+#line 1423 \"./parse.y\"\n {YYERROR_NOW; yyerror (\"'(' expected\"); RECOVER;;\n     break;}\n case 274:\n-#line 1418 \"./parse.y\"\n+#line 1425 \"./parse.y\"\n {yyerror (\"Missing term and ')' expected\"); RECOVER;;\n     break;}\n case 275:\n-#line 1420 \"./parse.y\"\n+#line 1427 \"./parse.y\"\n {yyerror (\"')' expected\"); RECOVER;;\n     break;}\n case 276:\n-#line 1425 \"./parse.y\"\n+#line 1432 \"./parse.y\"\n { yyval.node = complete_loop_body (0, NULL_TREE, yyvsp[0].node, 0); ;\n     break;}\n case 277:\n-#line 1430 \"./parse.y\"\n+#line 1437 \"./parse.y\"\n { \n \t\t  tree body = build_loop_body (0, NULL_TREE, 1);\n \t\t  yyval.node = build_new_loop (body);\n \t\t;\n     break;}\n case 278:\n-#line 1439 \"./parse.y\"\n+#line 1446 \"./parse.y\"\n { yyval.node = complete_loop_body (yyvsp[-3].operator.location, yyvsp[-2].node, yyvsp[-5].node, 1); ;\n     break;}\n case 279:\n-#line 1444 \"./parse.y\"\n+#line 1451 \"./parse.y\"\n { yyval.node = complete_for_loop (EXPR_WFL_LINECOL (yyvsp[-4].node), yyvsp[-4].node, yyvsp[-2].node, yyvsp[0].node);;\n     break;}\n case 280:\n-#line 1446 \"./parse.y\"\n+#line 1453 \"./parse.y\"\n { \n \t\t  yyval.node = complete_for_loop (0, NULL_TREE, yyvsp[-2].node, yyvsp[0].node);\n \t\t  /* We have not condition, so we get rid of the EXIT_EXPR */\n@@ -3762,23 +3768,23 @@ case 280:\n \t\t;\n     break;}\n case 281:\n-#line 1453 \"./parse.y\"\n+#line 1460 \"./parse.y\"\n {yyerror (\"Invalid control expression\"); RECOVER;;\n     break;}\n case 282:\n-#line 1455 \"./parse.y\"\n+#line 1462 \"./parse.y\"\n {yyerror (\"Invalid update expression\"); RECOVER;;\n     break;}\n case 283:\n-#line 1457 \"./parse.y\"\n+#line 1464 \"./parse.y\"\n {yyerror (\"Invalid update expression\"); RECOVER;;\n     break;}\n case 284:\n-#line 1462 \"./parse.y\"\n+#line 1469 \"./parse.y\"\n { yyval.node = complete_for_loop (EXPR_WFL_LINECOL (yyvsp[-4].node), yyvsp[-4].node, yyvsp[-2].node, yyvsp[0].node);;\n     break;}\n case 285:\n-#line 1464 \"./parse.y\"\n+#line 1471 \"./parse.y\"\n { \n \t\t  yyval.node = complete_for_loop (0, NULL_TREE, yyvsp[-2].node, yyvsp[0].node);\n \t\t  /* We have not condition, so we get rid of the EXIT_EXPR */\n@@ -3787,23 +3793,23 @@ case 285:\n \t\t;\n     break;}\n case 286:\n-#line 1474 \"./parse.y\"\n+#line 1481 \"./parse.y\"\n { \n \t\t  /* This scope defined for local variable that may be\n                      defined within the scope of the for loop */\n \t\t  enter_block (); \n \t\t;\n     break;}\n case 287:\n-#line 1480 \"./parse.y\"\n+#line 1487 \"./parse.y\"\n {yyerror (\"'(' expected\"); DRECOVER(for_1);;\n     break;}\n case 288:\n-#line 1482 \"./parse.y\"\n+#line 1489 \"./parse.y\"\n {yyerror (\"Invalid init statement\"); RECOVER;;\n     break;}\n case 289:\n-#line 1487 \"./parse.y\"\n+#line 1494 \"./parse.y\"\n { \n \t\t  /* We now declare the loop body. The loop is\n                      declared as a for loop. */\n@@ -3816,176 +3822,176 @@ case 289:\n \t\t;\n     break;}\n case 290:\n-#line 1499 \"./parse.y\"\n+#line 1506 \"./parse.y\"\n { yyval.node = empty_stmt_node; ;\n     break;}\n case 291:\n-#line 1501 \"./parse.y\"\n+#line 1508 \"./parse.y\"\n { \n \t\t  /* Init statement recorded within the previously\n                      defined block scope */\n \t\t  yyval.node = java_method_add_stmt (current_function_decl, yyvsp[0].node);\n \t\t;\n     break;}\n case 292:\n-#line 1507 \"./parse.y\"\n+#line 1514 \"./parse.y\"\n { \n \t\t  /* Local variable are recorded within the previously\n \t\t     defined block scope */\n \t\t  yyval.node = NULL_TREE;\n \t\t;\n     break;}\n case 293:\n-#line 1513 \"./parse.y\"\n+#line 1520 \"./parse.y\"\n {yyerror (\"';' expected\"); DRECOVER(for_init_1);;\n     break;}\n case 294:\n-#line 1517 \"./parse.y\"\n+#line 1524 \"./parse.y\"\n {yyval.node = empty_stmt_node;;\n     break;}\n case 295:\n-#line 1519 \"./parse.y\"\n+#line 1526 \"./parse.y\"\n { yyval.node = build_debugable_stmt (BUILD_LOCATION (), yyvsp[0].node); ;\n     break;}\n case 296:\n-#line 1524 \"./parse.y\"\n+#line 1531 \"./parse.y\"\n { yyval.node = add_stmt_to_compound (NULL_TREE, NULL_TREE, yyvsp[0].node); ;\n     break;}\n case 297:\n-#line 1526 \"./parse.y\"\n+#line 1533 \"./parse.y\"\n { yyval.node = add_stmt_to_compound (yyvsp[-2].node, NULL_TREE, yyvsp[0].node); ;\n     break;}\n case 298:\n-#line 1528 \"./parse.y\"\n+#line 1535 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 299:\n-#line 1533 \"./parse.y\"\n+#line 1540 \"./parse.y\"\n { yyval.node = build_bc_statement (yyvsp[-1].operator.location, 1, NULL_TREE); ;\n     break;}\n case 300:\n-#line 1535 \"./parse.y\"\n+#line 1542 \"./parse.y\"\n { yyval.node = build_bc_statement (yyvsp[-2].operator.location, 1, yyvsp[-1].node); ;\n     break;}\n case 301:\n-#line 1537 \"./parse.y\"\n+#line 1544 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 302:\n-#line 1539 \"./parse.y\"\n+#line 1546 \"./parse.y\"\n {yyerror (\"';' expected\"); RECOVER;;\n     break;}\n case 303:\n-#line 1544 \"./parse.y\"\n+#line 1551 \"./parse.y\"\n { yyval.node = build_bc_statement (yyvsp[-1].operator.location, 0, NULL_TREE); ;\n     break;}\n case 304:\n-#line 1546 \"./parse.y\"\n+#line 1553 \"./parse.y\"\n { yyval.node = build_bc_statement (yyvsp[-2].operator.location, 0, yyvsp[-1].node); ;\n     break;}\n case 305:\n-#line 1548 \"./parse.y\"\n+#line 1555 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 306:\n-#line 1550 \"./parse.y\"\n+#line 1557 \"./parse.y\"\n {yyerror (\"';' expected\"); RECOVER;;\n     break;}\n case 307:\n-#line 1555 \"./parse.y\"\n+#line 1562 \"./parse.y\"\n { yyval.node = build_return (yyvsp[-1].operator.location, NULL_TREE); ;\n     break;}\n case 308:\n-#line 1557 \"./parse.y\"\n+#line 1564 \"./parse.y\"\n { yyval.node = build_return (yyvsp[-2].operator.location, yyvsp[-1].node); ;\n     break;}\n case 309:\n-#line 1559 \"./parse.y\"\n+#line 1566 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 310:\n-#line 1561 \"./parse.y\"\n+#line 1568 \"./parse.y\"\n {yyerror (\"';' expected\"); RECOVER;;\n     break;}\n case 311:\n-#line 1566 \"./parse.y\"\n+#line 1573 \"./parse.y\"\n { \n \t\t  yyval.node = build1 (THROW_EXPR, NULL_TREE, yyvsp[-1].node);\n \t\t  EXPR_WFL_LINECOL (yyval.node) = yyvsp[-2].operator.location;\n \t\t;\n     break;}\n case 312:\n-#line 1571 \"./parse.y\"\n+#line 1578 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 313:\n-#line 1573 \"./parse.y\"\n+#line 1580 \"./parse.y\"\n {yyerror (\"';' expected\"); RECOVER;;\n     break;}\n case 314:\n-#line 1578 \"./parse.y\"\n+#line 1585 \"./parse.y\"\n { \n \t\t  yyval.node = build (SYNCHRONIZED_EXPR, NULL_TREE, yyvsp[-2].node, yyvsp[0].node);\n \t\t  EXPR_WFL_LINECOL (yyval.node) = \n \t\t    EXPR_WFL_LINECOL (MODIFIER_WFL (SYNCHRONIZED_TK));\n \t\t;\n     break;}\n case 315:\n-#line 1584 \"./parse.y\"\n+#line 1591 \"./parse.y\"\n {yyerror (\"'{' expected\"); RECOVER;;\n     break;}\n case 316:\n-#line 1586 \"./parse.y\"\n+#line 1593 \"./parse.y\"\n {yyerror (\"'(' expected\"); RECOVER;;\n     break;}\n case 317:\n-#line 1588 \"./parse.y\"\n+#line 1595 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 318:\n-#line 1590 \"./parse.y\"\n+#line 1597 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 319:\n-#line 1595 \"./parse.y\"\n+#line 1602 \"./parse.y\"\n {\n \t\t  if ((1 << yyvsp[0].value) != ACC_SYNCHRONIZED)\n \t\t    fatal (\"synchronized was '%d' - yyparse\", (1 << yyvsp[0].value));\n \t\t;\n     break;}\n case 320:\n-#line 1603 \"./parse.y\"\n+#line 1610 \"./parse.y\"\n { yyval.node = build_try_statement (yyvsp[-2].operator.location, yyvsp[-1].node, yyvsp[0].node, NULL_TREE); ;\n     break;}\n case 321:\n-#line 1605 \"./parse.y\"\n+#line 1612 \"./parse.y\"\n { yyval.node = build_try_statement (yyvsp[-2].operator.location, yyvsp[-1].node, NULL_TREE, yyvsp[0].node); ;\n     break;}\n case 322:\n-#line 1607 \"./parse.y\"\n+#line 1614 \"./parse.y\"\n { yyval.node = build_try_statement (yyvsp[-3].operator.location, yyvsp[-2].node, yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 323:\n-#line 1609 \"./parse.y\"\n+#line 1616 \"./parse.y\"\n {yyerror (\"'{' expected\"); DRECOVER (try_statement);;\n     break;}\n case 325:\n-#line 1615 \"./parse.y\"\n+#line 1622 \"./parse.y\"\n { \n \t\t  TREE_CHAIN (yyvsp[0].node) = yyvsp[-1].node;\n \t\t  yyval.node = yyvsp[0].node;\n \t\t;\n     break;}\n case 326:\n-#line 1623 \"./parse.y\"\n+#line 1630 \"./parse.y\"\n { \n \t\t  java_method_add_stmt (current_function_decl, yyvsp[0].node);\n \t\t  exit_block ();\n \t\t  yyval.node = yyvsp[-1].node;\n \t\t;\n     break;}\n case 327:\n-#line 1631 \"./parse.y\"\n+#line 1638 \"./parse.y\"\n { \n \t\t  /* We add a block to define a scope for\n \t\t     formal_parameter (CCBP). The formal parameter is\n@@ -4003,203 +4009,227 @@ case 327:\n \t\t;\n     break;}\n case 328:\n-#line 1647 \"./parse.y\"\n+#line 1654 \"./parse.y\"\n {yyerror (\"'(' expected\"); RECOVER;;\n     break;}\n case 329:\n-#line 1649 \"./parse.y\"\n+#line 1656 \"./parse.y\"\n {yyerror (\"Missing term or ')' expected\"); DRECOVER (2);;\n     break;}\n case 330:\n-#line 1651 \"./parse.y\"\n+#line 1658 \"./parse.y\"\n {yyerror (\"')' expected\"); DRECOVER (1);;\n     break;}\n case 331:\n-#line 1656 \"./parse.y\"\n+#line 1663 \"./parse.y\"\n { \n \t\t  yyval.node = build (FINALLY_EXPR, NULL_TREE,\n \t\t\t      create_label_decl (generate_name ()), yyvsp[0].node);\n \t\t;\n     break;}\n case 332:\n-#line 1661 \"./parse.y\"\n+#line 1668 \"./parse.y\"\n {yyerror (\"'{' expected\"); RECOVER; ;\n     break;}\n case 336:\n-#line 1673 \"./parse.y\"\n+#line 1680 \"./parse.y\"\n { yyval.node = build_this (yyvsp[0].operator.location); ;\n     break;}\n case 337:\n-#line 1675 \"./parse.y\"\n+#line 1682 \"./parse.y\"\n {yyval.node = yyvsp[-1].node;;\n     break;}\n case 342:\n-#line 1684 \"./parse.y\"\n+#line 1691 \"./parse.y\"\n { yyval.node = parse_jdk1_1_error (\"named class literals\"); ;\n     break;}\n case 343:\n-#line 1686 \"./parse.y\"\n+#line 1693 \"./parse.y\"\n { yyval.node = build_class_ref (yyvsp[-2].node); ;\n     break;}\n case 344:\n-#line 1688 \"./parse.y\"\n+#line 1695 \"./parse.y\"\n { yyval.node = build_class_ref (void_type_node); ;\n     break;}\n case 345:\n-#line 1693 \"./parse.y\"\n+#line 1700 \"./parse.y\"\n { yyval.node = parse_jdk1_1_error (\"class literals\"); ;\n     break;}\n case 346:\n-#line 1695 \"./parse.y\"\n+#line 1702 \"./parse.y\"\n {yyerror (\"')' expected\"); RECOVER;;\n     break;}\n case 347:\n-#line 1697 \"./parse.y\"\n+#line 1704 \"./parse.y\"\n {yyerror (\"'class' or 'this' expected\" ); RECOVER;;\n     break;}\n case 348:\n-#line 1699 \"./parse.y\"\n+#line 1706 \"./parse.y\"\n {yyerror (\"'class' expected\" ); RECOVER;;\n     break;}\n case 349:\n-#line 1701 \"./parse.y\"\n+#line 1708 \"./parse.y\"\n {yyerror (\"'class' expected\" ); RECOVER;;\n     break;}\n case 350:\n-#line 1706 \"./parse.y\"\n+#line 1713 \"./parse.y\"\n { yyval.node = build_new_invocation (yyvsp[-3].node, yyvsp[-1].node); ;\n     break;}\n case 351:\n-#line 1708 \"./parse.y\"\n+#line 1715 \"./parse.y\"\n { yyval.node = build_new_invocation (yyvsp[-2].node, NULL_TREE); ;\n     break;}\n case 352:\n-#line 1713 \"./parse.y\"\n+#line 1720 \"./parse.y\"\n { yyval.node = parse_jdk1_1_error (\"inner class instance creation\"); ;\n     break;}\n case 353:\n-#line 1715 \"./parse.y\"\n+#line 1722 \"./parse.y\"\n { yyval.node = parse_jdk1_1_error (\"inner class instance creation\"); ;\n     break;}\n case 358:\n-#line 1724 \"./parse.y\"\n+#line 1731 \"./parse.y\"\n {yyerror (\"'(' expected\"); DRECOVER(new_1);;\n     break;}\n case 359:\n-#line 1726 \"./parse.y\"\n+#line 1733 \"./parse.y\"\n {yyerror (\"'(' expected\"); RECOVER;;\n     break;}\n case 360:\n-#line 1728 \"./parse.y\"\n+#line 1735 \"./parse.y\"\n {yyerror (\"')' or term expected\"); RECOVER;;\n     break;}\n case 361:\n-#line 1730 \"./parse.y\"\n+#line 1737 \"./parse.y\"\n {yyerror (\"')' expected\"); RECOVER;;\n     break;}\n case 362:\n-#line 1732 \"./parse.y\"\n+#line 1739 \"./parse.y\"\n {YYERROR_NOW; yyerror (\"Identifier expected\"); RECOVER;;\n     break;}\n case 363:\n-#line 1734 \"./parse.y\"\n+#line 1741 \"./parse.y\"\n {yyerror (\"'(' expected\"); RECOVER;;\n     break;}\n case 366:\n-#line 1744 \"./parse.y\"\n+#line 1751 \"./parse.y\"\n { \n \t\t  yyval.node = tree_cons (NULL_TREE, yyvsp[0].node, NULL_TREE);\n \t\t  ctxp->formal_parameter_number = 1; \n \t\t;\n     break;}\n case 367:\n-#line 1749 \"./parse.y\"\n+#line 1756 \"./parse.y\"\n {\n \t\t  ctxp->formal_parameter_number += 1;\n \t\t  yyval.node = tree_cons (NULL_TREE, yyvsp[0].node, yyvsp[-2].node);\n \t\t;\n     break;}\n case 368:\n-#line 1754 \"./parse.y\"\n+#line 1761 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 369:\n-#line 1759 \"./parse.y\"\n+#line 1766 \"./parse.y\"\n { yyval.node = build_newarray_node (yyvsp[-1].node, yyvsp[0].node, 0); ;\n     break;}\n case 370:\n-#line 1761 \"./parse.y\"\n+#line 1768 \"./parse.y\"\n { yyval.node = build_newarray_node (yyvsp[-1].node, yyvsp[0].node, 0); ;\n     break;}\n case 371:\n-#line 1763 \"./parse.y\"\n-{ yyval.node = build_newarray_node (yyvsp[-2].node, yyvsp[-1].node, ctxp->osb_number); ;\n+#line 1770 \"./parse.y\"\n+{ yyval.node = build_newarray_node (yyvsp[-2].node, yyvsp[-1].node, CURRENT_OSB (ctxp));;\n     break;}\n case 372:\n-#line 1765 \"./parse.y\"\n-{ yyval.node = build_newarray_node (yyvsp[-2].node, yyvsp[-1].node, ctxp->osb_number); ;\n+#line 1772 \"./parse.y\"\n+{ yyval.node = build_newarray_node (yyvsp[-2].node, yyvsp[-1].node, CURRENT_OSB (ctxp));;\n     break;}\n case 373:\n-#line 1769 \"./parse.y\"\n+#line 1776 \"./parse.y\"\n { yyval.node = parse_jdk1_1_error (\"anonymous array\"); ;\n     break;}\n case 374:\n-#line 1771 \"./parse.y\"\n+#line 1778 \"./parse.y\"\n { yyval.node = parse_jdk1_1_error (\"anonymous array\"); ;\n     break;}\n case 375:\n-#line 1773 \"./parse.y\"\n+#line 1780 \"./parse.y\"\n {yyerror (\"'[' expected\"); DRECOVER (\"]\");;\n     break;}\n case 376:\n-#line 1775 \"./parse.y\"\n+#line 1782 \"./parse.y\"\n {yyerror (\"']' expected\"); RECOVER;;\n     break;}\n case 377:\n-#line 1780 \"./parse.y\"\n+#line 1787 \"./parse.y\"\n { yyval.node = build_tree_list (NULL_TREE, yyvsp[0].node); ;\n     break;}\n case 378:\n-#line 1782 \"./parse.y\"\n+#line 1789 \"./parse.y\"\n { yyval.node = tree_cons (NULL_TREE, yyvsp[0].node, yyval.node); ;\n     break;}\n case 379:\n-#line 1787 \"./parse.y\"\n+#line 1794 \"./parse.y\"\n { \n \t\t  EXPR_WFL_LINECOL (yyvsp[-1].node) = yyvsp[-2].operator.location;\n \t\t  yyval.node = yyvsp[-1].node;\n \t\t;\n     break;}\n case 380:\n-#line 1792 \"./parse.y\"\n+#line 1799 \"./parse.y\"\n {yyerror (\"']' expected\"); RECOVER;;\n     break;}\n case 381:\n-#line 1794 \"./parse.y\"\n+#line 1801 \"./parse.y\"\n {\n \t\t  yyerror (\"Missing term\");\n \t\t  yyerror (\"']' expected\");\n \t\t  RECOVER;\n \t\t;\n     break;}\n case 382:\n-#line 1803 \"./parse.y\"\n-{ ctxp->osb_number = 1; ;\n+#line 1810 \"./parse.y\"\n+{ \n+\t\t  int allocate = 0;\n+\t\t  /* If not initialized, allocate memory for the osb\n+                     numbers stack */\n+\t\t  if (!ctxp->osb_limit)\n+\t\t    {\n+\t\t      allocate = ctxp->osb_limit = 32;\n+\t\t      ctxp->osb_depth = -1;\n+\t\t    }\n+\t\t  /* If capacity overflown, reallocate a bigger chuck */\n+\t\t  else if (ctxp->osb_depth+1 == ctxp->osb_limit)\n+\t\t    allocate = ctxp->osb_limit << 1;\n+\t\t  \n+\t\t  if (allocate)\n+\t\t    {\n+\t\t      allocate *= sizeof (int);\n+\t\t      if (ctxp->osb_number)\n+\t\t\tctxp->osb_number = (int *)xrealloc (ctxp->osb_number,\n+\t\t\t\t\t\t\t    allocate);\n+\t\t      else\n+\t\t\tctxp->osb_number = (int *)xmalloc (allocate);\n+\t\t    }\n+\t\t  ctxp->osb_depth++;\n+\t\t  CURRENT_OSB (ctxp) = 1;\n+\t\t;\n     break;}\n case 383:\n-#line 1805 \"./parse.y\"\n-{ ctxp->osb_number++; ;\n+#line 1836 \"./parse.y\"\n+{ CURRENT_OSB (ctxp)++; ;\n     break;}\n case 384:\n-#line 1807 \"./parse.y\"\n+#line 1838 \"./parse.y\"\n { yyerror (\"']' expected\"); RECOVER;;\n     break;}\n case 385:\n-#line 1812 \"./parse.y\"\n+#line 1843 \"./parse.y\"\n { yyval.node = make_qualified_primary (yyvsp[-2].node, yyvsp[0].node, yyvsp[-1].operator.location); ;\n     break;}\n case 386:\n-#line 1816 \"./parse.y\"\n+#line 1847 \"./parse.y\"\n {\n \t\t  tree super_wfl = \n \t\t    build_wfl_node (super_identifier_node, \n@@ -4209,19 +4239,19 @@ case 386:\n \t\t;\n     break;}\n case 387:\n-#line 1824 \"./parse.y\"\n+#line 1855 \"./parse.y\"\n {yyerror (\"Field expected\"); DRECOVER (super_field_acces);;\n     break;}\n case 388:\n-#line 1829 \"./parse.y\"\n+#line 1860 \"./parse.y\"\n { yyval.node = build_method_invocation (yyvsp[-2].node, NULL_TREE); ;\n     break;}\n case 389:\n-#line 1831 \"./parse.y\"\n+#line 1862 \"./parse.y\"\n { yyval.node = build_method_invocation (yyvsp[-3].node, yyvsp[-1].node); ;\n     break;}\n case 390:\n-#line 1833 \"./parse.y\"\n+#line 1864 \"./parse.y\"\n { \n \t\t  if (TREE_CODE (yyvsp[-4].node) == THIS_EXPR)\n \t\t    yyval.node = build_this_super_qualified_invocation \n@@ -4234,7 +4264,7 @@ case 390:\n \t\t;\n     break;}\n case 391:\n-#line 1844 \"./parse.y\"\n+#line 1875 \"./parse.y\"\n { \n \t\t  if (TREE_CODE (yyvsp[-5].node) == THIS_EXPR)\n \t\t    yyval.node = build_this_super_qualified_invocation \n@@ -4247,142 +4277,144 @@ case 391:\n \t\t;\n     break;}\n case 392:\n-#line 1855 \"./parse.y\"\n+#line 1886 \"./parse.y\"\n { \n \t\t  yyval.node = build_this_super_qualified_invocation \n \t\t    (0, yyvsp[-2].node, NULL_TREE, yyvsp[-4].operator.location, yyvsp[-3].operator.location);\n \t\t;\n     break;}\n case 393:\n-#line 1860 \"./parse.y\"\n+#line 1891 \"./parse.y\"\n {\n \t\t  yyval.node = build_this_super_qualified_invocation \n \t\t    (0, yyvsp[-3].node, yyvsp[-1].node, yyvsp[-5].operator.location, yyvsp[-4].operator.location);\n \t\t;\n     break;}\n case 394:\n-#line 1869 \"./parse.y\"\n+#line 1900 \"./parse.y\"\n { yyerror (\"'(' expected\"); DRECOVER (method_invocation); ;\n     break;}\n case 395:\n-#line 1871 \"./parse.y\"\n+#line 1902 \"./parse.y\"\n { yyerror (\"'(' expected\"); DRECOVER (method_invocation); ;\n     break;}\n case 396:\n-#line 1876 \"./parse.y\"\n+#line 1907 \"./parse.y\"\n { yyval.node = build_array_ref (yyvsp[-2].operator.location, yyvsp[-3].node, yyvsp[-1].node); ;\n     break;}\n case 397:\n-#line 1878 \"./parse.y\"\n+#line 1909 \"./parse.y\"\n { yyval.node = build_array_ref (yyvsp[-2].operator.location, yyvsp[-3].node, yyvsp[-1].node); ;\n     break;}\n case 398:\n-#line 1880 \"./parse.y\"\n+#line 1911 \"./parse.y\"\n {\n \t\t  yyerror (\"Missing term and ']' expected\");\n \t\t  DRECOVER(array_access);\n \t\t;\n     break;}\n case 399:\n-#line 1885 \"./parse.y\"\n+#line 1916 \"./parse.y\"\n {\n \t\t  yyerror (\"']' expected\");\n \t\t  DRECOVER(array_access);\n \t\t;\n     break;}\n case 400:\n-#line 1890 \"./parse.y\"\n+#line 1921 \"./parse.y\"\n {\n \t\t  yyerror (\"Missing term and ']' expected\");\n \t\t  DRECOVER(array_access);\n \t\t;\n     break;}\n case 401:\n-#line 1895 \"./parse.y\"\n+#line 1926 \"./parse.y\"\n {\n \t\t  yyerror (\"']' expected\");\n \t\t  DRECOVER(array_access);\n \t\t;\n     break;}\n case 406:\n-#line 1910 \"./parse.y\"\n+#line 1941 \"./parse.y\"\n { yyval.node = build_incdec (yyvsp[0].operator.token, yyvsp[0].operator.location, yyvsp[-1].node, 1); ;\n     break;}\n case 407:\n-#line 1915 \"./parse.y\"\n+#line 1946 \"./parse.y\"\n { yyval.node = build_incdec (yyvsp[0].operator.token, yyvsp[0].operator.location, yyvsp[-1].node, 1); ;\n     break;}\n case 410:\n-#line 1922 \"./parse.y\"\n+#line 1953 \"./parse.y\"\n {yyval.node = build_unaryop (yyvsp[-1].operator.token, yyvsp[-1].operator.location, yyvsp[0].node); ;\n     break;}\n case 411:\n-#line 1924 \"./parse.y\"\n+#line 1955 \"./parse.y\"\n {yyval.node = build_unaryop (yyvsp[-1].operator.token, yyvsp[-1].operator.location, yyvsp[0].node); ;\n     break;}\n case 413:\n-#line 1927 \"./parse.y\"\n+#line 1958 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;\n     break;}\n case 414:\n-#line 1929 \"./parse.y\"\n+#line 1960 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;\n     break;}\n case 415:\n-#line 1934 \"./parse.y\"\n+#line 1965 \"./parse.y\"\n {yyval.node = build_incdec (yyvsp[-1].operator.token, yyvsp[-1].operator.location, yyvsp[0].node, 0); ;\n     break;}\n case 416:\n-#line 1936 \"./parse.y\"\n+#line 1967 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;\n     break;}\n case 417:\n-#line 1941 \"./parse.y\"\n+#line 1972 \"./parse.y\"\n {yyval.node = build_incdec (yyvsp[-1].operator.token, yyvsp[-1].operator.location, yyvsp[0].node, 0); ;\n     break;}\n case 418:\n-#line 1943 \"./parse.y\"\n+#line 1974 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;\n     break;}\n case 420:\n-#line 1949 \"./parse.y\"\n+#line 1980 \"./parse.y\"\n {yyval.node = build_unaryop (yyvsp[-1].operator.token, yyvsp[-1].operator.location, yyvsp[0].node); ;\n     break;}\n case 421:\n-#line 1951 \"./parse.y\"\n+#line 1982 \"./parse.y\"\n {yyval.node = build_unaryop (yyvsp[-1].operator.token, yyvsp[-1].operator.location, yyvsp[0].node); ;\n     break;}\n case 423:\n-#line 1954 \"./parse.y\"\n+#line 1985 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;\n     break;}\n case 424:\n-#line 1956 \"./parse.y\"\n+#line 1987 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;\n     break;}\n case 425:\n-#line 1961 \"./parse.y\"\n+#line 1992 \"./parse.y\"\n { \n \t\t  tree type = yyvsp[-3].node;\n-\t\t  while (ctxp->osb_number--)\n+\t\t  while (CURRENT_OSB (ctxp)--)\n \t\t    type = build_java_array_type (type, -1);\n+\t\t  ctxp->osb_depth--;\n \t\t  yyval.node = build_cast (yyvsp[-4].operator.location, type, yyvsp[0].node); \n \t\t;\n     break;}\n case 426:\n-#line 1968 \"./parse.y\"\n+#line 2000 \"./parse.y\"\n { yyval.node = build_cast (yyvsp[-3].operator.location, yyvsp[-2].node, yyvsp[0].node); ;\n     break;}\n case 427:\n-#line 1970 \"./parse.y\"\n+#line 2002 \"./parse.y\"\n { yyval.node = build_cast (yyvsp[-3].operator.location, yyvsp[-2].node, yyvsp[0].node); ;\n     break;}\n case 428:\n-#line 1972 \"./parse.y\"\n+#line 2004 \"./parse.y\"\n { \n \t\t  char *ptr;\n-\t\t  while (ctxp->osb_number--)\n+\t\t  while (CURRENT_OSB (ctxp)--)\n \t\t    obstack_1grow (&temporary_obstack, '[');\n+\t\t  ctxp->osb_depth--;\n \t\t  obstack_grow0 (&temporary_obstack, \n \t\t\t\t IDENTIFIER_POINTER (EXPR_WFL_NODE (yyvsp[-3].node)),\n \t\t\t\t IDENTIFIER_LENGTH (EXPR_WFL_NODE (yyvsp[-3].node)));\n@@ -4392,275 +4424,275 @@ case 428:\n \t\t;\n     break;}\n case 429:\n-#line 1984 \"./parse.y\"\n+#line 2017 \"./parse.y\"\n {yyerror (\"']' expected, invalid type expression\");;\n     break;}\n case 430:\n-#line 1986 \"./parse.y\"\n+#line 2019 \"./parse.y\"\n {\n \t          if (ctxp->prevent_ese != lineno)\n \t\t    yyerror (\"Invalid type expression\"); RECOVER;\n \t\t  RECOVER;\n \t\t;\n     break;}\n case 431:\n-#line 1992 \"./parse.y\"\n+#line 2025 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 432:\n-#line 1994 \"./parse.y\"\n+#line 2027 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 433:\n-#line 1996 \"./parse.y\"\n+#line 2029 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 435:\n-#line 2002 \"./parse.y\"\n+#line 2035 \"./parse.y\"\n { \n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), \n \t\t\t\t    yyvsp[-1].operator.location, yyvsp[-2].node, yyvsp[0].node);\n \t\t;\n     break;}\n case 436:\n-#line 2007 \"./parse.y\"\n+#line 2040 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 437:\n-#line 2012 \"./parse.y\"\n+#line 2045 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 438:\n-#line 2017 \"./parse.y\"\n+#line 2050 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 439:\n-#line 2019 \"./parse.y\"\n+#line 2052 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 440:\n-#line 2021 \"./parse.y\"\n+#line 2054 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 442:\n-#line 2027 \"./parse.y\"\n+#line 2060 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 443:\n-#line 2032 \"./parse.y\"\n+#line 2065 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 444:\n-#line 2037 \"./parse.y\"\n+#line 2070 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 445:\n-#line 2039 \"./parse.y\"\n+#line 2072 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 447:\n-#line 2045 \"./parse.y\"\n+#line 2078 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 448:\n-#line 2050 \"./parse.y\"\n+#line 2083 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 449:\n-#line 2055 \"./parse.y\"\n+#line 2088 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 450:\n-#line 2060 \"./parse.y\"\n+#line 2093 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 451:\n-#line 2062 \"./parse.y\"\n+#line 2095 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 452:\n-#line 2064 \"./parse.y\"\n+#line 2097 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 454:\n-#line 2070 \"./parse.y\"\n+#line 2103 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 455:\n-#line 2075 \"./parse.y\"\n+#line 2108 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 456:\n-#line 2080 \"./parse.y\"\n+#line 2113 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 457:\n-#line 2085 \"./parse.y\"\n+#line 2118 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 458:\n-#line 2090 \"./parse.y\"\n+#line 2123 \"./parse.y\"\n { yyval.node = build_binop (INSTANCEOF_EXPR, yyvsp[-1].operator.location, yyvsp[-2].node, yyvsp[0].node); ;\n     break;}\n case 459:\n-#line 2092 \"./parse.y\"\n+#line 2125 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 460:\n-#line 2094 \"./parse.y\"\n+#line 2127 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 461:\n-#line 2096 \"./parse.y\"\n+#line 2129 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 462:\n-#line 2098 \"./parse.y\"\n+#line 2131 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 463:\n-#line 2100 \"./parse.y\"\n+#line 2133 \"./parse.y\"\n {yyerror (\"Invalid reference type\"); RECOVER;;\n     break;}\n case 465:\n-#line 2106 \"./parse.y\"\n+#line 2139 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 466:\n-#line 2111 \"./parse.y\"\n+#line 2144 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 467:\n-#line 2116 \"./parse.y\"\n+#line 2149 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 468:\n-#line 2118 \"./parse.y\"\n+#line 2151 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 470:\n-#line 2124 \"./parse.y\"\n+#line 2157 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 471:\n-#line 2129 \"./parse.y\"\n+#line 2162 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 473:\n-#line 2135 \"./parse.y\"\n+#line 2168 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 474:\n-#line 2140 \"./parse.y\"\n+#line 2173 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 476:\n-#line 2146 \"./parse.y\"\n+#line 2179 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 477:\n-#line 2151 \"./parse.y\"\n+#line 2184 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 479:\n-#line 2157 \"./parse.y\"\n+#line 2190 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 480:\n-#line 2162 \"./parse.y\"\n+#line 2195 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 482:\n-#line 2168 \"./parse.y\"\n+#line 2201 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 483:\n-#line 2173 \"./parse.y\"\n+#line 2206 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 485:\n-#line 2179 \"./parse.y\"\n+#line 2212 \"./parse.y\"\n {\n \t\t  yyval.node = build (CONDITIONAL_EXPR, NULL_TREE, yyvsp[-4].node, yyvsp[-2].node, yyvsp[0].node);\n \t\t  EXPR_WFL_LINECOL (yyval.node) = yyvsp[-3].operator.location;\n \t\t;\n     break;}\n case 486:\n-#line 2184 \"./parse.y\"\n+#line 2217 \"./parse.y\"\n {\n \t\t  YYERROR_NOW;\n \t\t  yyerror (\"Missing term\");\n \t\t  DRECOVER (1);\n \t\t;\n     break;}\n case 487:\n-#line 2190 \"./parse.y\"\n+#line 2223 \"./parse.y\"\n {yyerror (\"Missing term\"); DRECOVER (2);;\n     break;}\n case 488:\n-#line 2192 \"./parse.y\"\n+#line 2225 \"./parse.y\"\n {yyerror (\"Missing term\"); DRECOVER (3);;\n     break;}\n case 491:\n-#line 2202 \"./parse.y\"\n+#line 2235 \"./parse.y\"\n { yyval.node = build_assignment (yyvsp[-1].operator.token, yyvsp[-1].operator.location, yyvsp[-2].node, yyvsp[0].node); ;\n     break;}\n case 492:\n-#line 2204 \"./parse.y\"\n+#line 2237 \"./parse.y\"\n {\n \t\t  if (ctxp->prevent_ese != lineno)\n \t\t    yyerror (\"Missing term\");\n@@ -4669,7 +4701,7 @@ case 492:\n     break;}\n }\n    /* the action file gets copied in in place of this dollarsign */\n-#line 498 \"/usr/share/misc/bison.simple\"\n+#line 498 \"/usr/cygnus/gnupro-98r1/share/bison.simple\"\n \f\n   yyvsp -= yylen;\n   yyssp -= yylen;\n@@ -4865,7 +4897,7 @@ case 492:\n   yystate = yyn;\n   goto yynewstate;\n }\n-#line 2230 \"./parse.y\"\n+#line 2263 \"./parse.y\"\n \n \f\n \n@@ -5152,6 +5184,7 @@ find_expr_with_wfl (node)\n \t  if (((code == '1') || (code == '2') || (code == 'e'))\n \t      && EXPR_WFL_LINECOL (node))\n \t    return node;\n+\t  return NULL_TREE;\n \t}\n     }\n   return NULL_TREE;\n@@ -5769,9 +5802,9 @@ register_fields (flags, type, variable_list)\n \t    {\n \t      /* We include the field and its initialization part into\n \t\t a list used to generate <clinit>. After <clinit> is\n-\t\t walked, fields initialization will be processed and\n-\t\t fields initialized with know constants will be taken\n-\t\t out of <clinit> and have ther DECL_INITIAL set\n+\t\t walked, field initializations will be processed and\n+\t\t fields initialized with known constants will be taken\n+\t\t out of <clinit> and have their DECL_INITIAL set\n \t\t appropriately. */\n \t      TREE_CHAIN (init) = ctxp->static_initialized;\n \t      ctxp->static_initialized = init;\n@@ -7034,8 +7067,8 @@ check_method_redefinition (class, method)\n   tree redef, name;\n   tree cl = DECL_NAME (method);\n   tree sig = TYPE_ARGUMENT_SIGNATURE (TREE_TYPE (method));\n-  /* decl name of artificial <clinit> and $finit$ doesn't need to be fixed and\n-     checked */\n+  /* decl name of artificial <clinit> and $finit$ doesn't need to be\n+     fixed and checked */\n \n   /* Reset the method name before running the check. If it returns 1,\n      the method doesn't need to be verified with respect to method\n@@ -7093,7 +7126,10 @@ java_check_regular_methods (class_decl)\n       /* If we previously found something and its name was saved,\n          reinstall it now */\n       if (found && saved_found_wfl)\n-\tDECL_NAME (found) = saved_found_wfl;\n+\t{\n+\t  DECL_NAME (found) = saved_found_wfl;\n+\t  saved_found_wfl = NULL_TREE;\n+\t}\n \n       /* Check for redefinitions */\n       if (check_method_redefinition (class, method))"}, {"sha": "4cebd5b865922741ca7b3b181a20e1df57b167da", "filename": "gcc/java/parse.h", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba179f9f6f3c593721837c6c24cc39296a6eb92d/gcc%2Fjava%2Fparse.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba179f9f6f3c593721837c6c24cc39296a6eb92d/gcc%2Fjava%2Fparse.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fparse.h?ref=ba179f9f6f3c593721837c6c24cc39296a6eb92d", "patch": "@@ -569,14 +569,17 @@ static jdeplist *reverse_jdep_list ();\n     ctxp->deprecated = 0;\t\t\t\\\n   }\n \n-/* Register an impor */\n+/* Register an import */\n #define REGISTER_IMPORT(WHOLE, NAME)\t\t\t\\\n {\t\t\t\t\t\t\t\\\n   IS_A_SINGLE_IMPORT_CLASSFILE_NAME_P ((NAME)) = 1;\t\\\n   node = build_tree_list ((WHOLE), (NAME));\t\t\\\n   TREE_CHAIN (node) = ctxp->import_list;\t\t\\\n   ctxp->import_list = node;\t\t\t\t\\\n }\n+\n+/* Macro to access the osb (opening square bracket) count */\n+#define CURRENT_OSB(C) (C)->osb_number [(C)->osb_depth]\n      \n /* Parser context data structure. */\n struct parser_ctxt {\n@@ -592,7 +595,9 @@ struct parser_ctxt {\n   int first_ccb_indent1;\t     /* First { at ident level 1 */\n   int last_ccb_indent1;\t\t     /* Last } at ident level 1 */\n   int parser_ccb_indent;\t     /* Keep track of {} indent, parser */\n-  int osb_number;\t\t     /* Keep track of ['s */\n+  int osb_depth;\t\t     /* Current depth of [ in an expression */\n+  int osb_limit;\t\t     /* Limit of this depth */\n+  int *osb_number;\t\t     /* Keep track of ['s */\n   int minus_seen;\t\t     /* Integral literal overflow */\n   int lineno;\t\t\t     /* Current lineno */\n   int java_error_flag;\t\t     /* Report error when true */"}, {"sha": "03d04eecfdeb2106cca120e2f2c461002d0a58ff", "filename": "gcc/java/parse.y", "status": "modified", "additions": 53, "deletions": 16, "changes": 69, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba179f9f6f3c593721837c6c24cc39296a6eb92d/gcc%2Fjava%2Fparse.y", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba179f9f6f3c593721837c6c24cc39296a6eb92d/gcc%2Fjava%2Fparse.y", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fparse.y?ref=ba179f9f6f3c593721837c6c24cc39296a6eb92d", "patch": "@@ -281,6 +281,9 @@ static tree wfl_append = NULL_TREE;\n \n /* The \"toString\" identifier used for String `+' operator. */\n static tree wfl_to_string = NULL_TREE;\n+\n+/* The \"java.lang\" import qualified name.  */\n+static tree java_lang_id = NULL_TREE;\n %}\n \n %union {\n@@ -591,10 +594,14 @@ type_import_on_demand_declaration:\n \tIMPORT_TK name DOT_TK MULT_TK SC_TK\n \t\t{\n \t\t  tree name = EXPR_WFL_NODE ($2);\n-\t\t  tree node = build_tree_list ($2, NULL_TREE);\n-\t\t  read_import_dir ($2);\n-\t\t  TREE_CHAIN (node) = ctxp->import_demand_list;\n-\t\t  ctxp->import_demand_list = node;\n+\t\t  /* Don't import java.lang.* twice. */\n+\t\t  if (name != java_lang_id)\n+\t\t    {\n+\t\t      tree node = build_tree_list ($2, NULL_TREE);\n+\t\t      read_import_dir ($2);\n+\t\t      TREE_CHAIN (node) = ctxp->import_demand_list;\n+\t\t      ctxp->import_demand_list = node;\n+\t\t    }\n \t\t}\n |\tIMPORT_TK name DOT_TK error\n \t\t{yyerror (\"'*' expected\"); RECOVER;}\n@@ -1760,9 +1767,9 @@ array_creation_expression:\n |\tNEW_TK class_or_interface_type dim_exprs\n \t\t{ $$ = build_newarray_node ($2, $3, 0); }\n |\tNEW_TK primitive_type dim_exprs dims\n-\t\t{ $$ = build_newarray_node ($2, $3, ctxp->osb_number); }\n+\t\t{ $$ = build_newarray_node ($2, $3, CURRENT_OSB (ctxp));}\n |\tNEW_TK class_or_interface_type dim_exprs dims\n-\t\t{ $$ = build_newarray_node ($2, $3, ctxp->osb_number); }\n+\t\t{ $$ = build_newarray_node ($2, $3, CURRENT_OSB (ctxp));}\n         /* Added, JDK1.1 anonymous array. Initial documentation rule\n            modified */\n |\tNEW_TK class_or_interface_type dims array_initializer\n@@ -1800,9 +1807,33 @@ dim_expr:\n \n dims:\t\t\t\t\n \tOSB_TK CSB_TK\n-\t\t{ ctxp->osb_number = 1; }\n+\t\t{ \n+\t\t  int allocate = 0;\n+\t\t  /* If not initialized, allocate memory for the osb\n+                     numbers stack */\n+\t\t  if (!ctxp->osb_limit)\n+\t\t    {\n+\t\t      allocate = ctxp->osb_limit = 32;\n+\t\t      ctxp->osb_depth = -1;\n+\t\t    }\n+\t\t  /* If capacity overflown, reallocate a bigger chuck */\n+\t\t  else if (ctxp->osb_depth+1 == ctxp->osb_limit)\n+\t\t    allocate = ctxp->osb_limit << 1;\n+\t\t  \n+\t\t  if (allocate)\n+\t\t    {\n+\t\t      allocate *= sizeof (int);\n+\t\t      if (ctxp->osb_number)\n+\t\t\tctxp->osb_number = (int *)xrealloc (ctxp->osb_number,\n+\t\t\t\t\t\t\t    allocate);\n+\t\t      else\n+\t\t\tctxp->osb_number = (int *)xmalloc (allocate);\n+\t\t    }\n+\t\t  ctxp->osb_depth++;\n+\t\t  CURRENT_OSB (ctxp) = 1;\n+\t\t}\n |\tdims OSB_TK CSB_TK\n-\t\t{ ctxp->osb_number++; }\n+\t\t{ CURRENT_OSB (ctxp)++; }\n |\tdims OSB_TK error\n \t\t{ yyerror (\"']' expected\"); RECOVER;}\n ;\n@@ -1960,8 +1991,9 @@ cast_expression:\t\t/* Error handling here is potentially weak */\n \tOP_TK primitive_type dims CP_TK unary_expression\n \t\t{ \n \t\t  tree type = $2;\n-\t\t  while (ctxp->osb_number--)\n+\t\t  while (CURRENT_OSB (ctxp)--)\n \t\t    type = build_java_array_type (type, -1);\n+\t\t  ctxp->osb_depth--;\n \t\t  $$ = build_cast ($1.location, type, $5); \n \t\t}\n |\tOP_TK primitive_type CP_TK unary_expression\n@@ -1971,8 +2003,9 @@ cast_expression:\t\t/* Error handling here is potentially weak */\n |\tOP_TK name dims CP_TK unary_expression_not_plus_minus\n \t\t{ \n \t\t  char *ptr;\n-\t\t  while (ctxp->osb_number--)\n+\t\t  while (CURRENT_OSB (ctxp)--)\n \t\t    obstack_1grow (&temporary_obstack, '[');\n+\t\t  ctxp->osb_depth--;\n \t\t  obstack_grow0 (&temporary_obstack, \n \t\t\t\t IDENTIFIER_POINTER (EXPR_WFL_NODE ($2)),\n \t\t\t\t IDENTIFIER_LENGTH (EXPR_WFL_NODE ($2)));\n@@ -2513,6 +2546,7 @@ find_expr_with_wfl (node)\n \t  if (((code == '1') || (code == '2') || (code == 'e'))\n \t      && EXPR_WFL_LINECOL (node))\n \t    return node;\n+\t  return NULL_TREE;\n \t}\n     }\n   return NULL_TREE;\n@@ -3130,9 +3164,9 @@ register_fields (flags, type, variable_list)\n \t    {\n \t      /* We include the field and its initialization part into\n \t\t a list used to generate <clinit>. After <clinit> is\n-\t\t walked, fields initialization will be processed and\n-\t\t fields initialized with know constants will be taken\n-\t\t out of <clinit> and have ther DECL_INITIAL set\n+\t\t walked, field initializations will be processed and\n+\t\t fields initialized with known constants will be taken\n+\t\t out of <clinit> and have their DECL_INITIAL set\n \t\t appropriately. */\n \t      TREE_CHAIN (init) = ctxp->static_initialized;\n \t      ctxp->static_initialized = init;\n@@ -4395,8 +4429,8 @@ check_method_redefinition (class, method)\n   tree redef, name;\n   tree cl = DECL_NAME (method);\n   tree sig = TYPE_ARGUMENT_SIGNATURE (TREE_TYPE (method));\n-  /* decl name of artificial <clinit> and $finit$ doesn't need to be fixed and\n-     checked */\n+  /* decl name of artificial <clinit> and $finit$ doesn't need to be\n+     fixed and checked */\n \n   /* Reset the method name before running the check. If it returns 1,\n      the method doesn't need to be verified with respect to method\n@@ -4454,7 +4488,10 @@ java_check_regular_methods (class_decl)\n       /* If we previously found something and its name was saved,\n          reinstall it now */\n       if (found && saved_found_wfl)\n-\tDECL_NAME (found) = saved_found_wfl;\n+\t{\n+\t  DECL_NAME (found) = saved_found_wfl;\n+\t  saved_found_wfl = NULL_TREE;\n+\t}\n \n       /* Check for redefinitions */\n       if (check_method_redefinition (class, method))"}]}