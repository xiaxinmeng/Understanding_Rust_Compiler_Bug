{"sha": "6970223f93ce9102cd95044f7c4d10a4ce695a77", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Njk3MDIyM2Y5M2NlOTEwMmNkOTUwNDRmN2M0ZDEwYTRjZTY5NWE3Nw==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2016-07-24T02:39:41Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2016-07-24T02:39:41Z"}, "message": "PR c++/71738 - nested template friend\n\n\t* pt.c (lookup_template_class_1): Handle getting template from tsubst.\n\nFrom-SVN: r238685", "tree": {"sha": "3ea5701e3e23d7cc56ebf0bf6e4f7c2fbae9a16c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3ea5701e3e23d7cc56ebf0bf6e4f7c2fbae9a16c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6970223f93ce9102cd95044f7c4d10a4ce695a77", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6970223f93ce9102cd95044f7c4d10a4ce695a77", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6970223f93ce9102cd95044f7c4d10a4ce695a77", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6970223f93ce9102cd95044f7c4d10a4ce695a77/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a6c690f41e0e50ce67dd3d3e791ff9f266842748", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a6c690f41e0e50ce67dd3d3e791ff9f266842748", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a6c690f41e0e50ce67dd3d3e791ff9f266842748"}], "stats": {"total": 36, "additions": 35, "deletions": 1}, "files": [{"sha": "c9a28aed253428ee0806d7c4afe6eedc91c1607f", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6970223f93ce9102cd95044f7c4d10a4ce695a77/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6970223f93ce9102cd95044f7c4d10a4ce695a77/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=6970223f93ce9102cd95044f7c4d10a4ce695a77", "patch": "@@ -1,5 +1,8 @@\n 2016-07-23  Jason Merrill  <jason@redhat.com>\n \n+\tPR c++/71738\n+\t* pt.c (lookup_template_class_1): Handle getting template from tsubst.\n+\n \tPR c++/71350\n \t* decl.c (reshape_init_r): Check complain for missing braces warning.\n "}, {"sha": "a44beadd8afc57032e9589b7e7bd186ce88ffa31", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6970223f93ce9102cd95044f7c4d10a4ce695a77/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6970223f93ce9102cd95044f7c4d10a4ce695a77/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=6970223f93ce9102cd95044f7c4d10a4ce695a77", "patch": "@@ -8601,7 +8601,9 @@ lookup_template_class_1 (tree d1, tree arglist, tree in_decl, tree context,\n \t     for parameters in the TYPE_DECL of the alias template\n \t     done earlier.  So be careful while getting the template\n \t     of FOUND.  */\n-\t  found = TREE_CODE (found) == TYPE_DECL\n+\t  found = TREE_CODE (found) == TEMPLATE_DECL\n+\t    ? found\n+\t    : TREE_CODE (found) == TYPE_DECL\n \t    ? TYPE_TI_TEMPLATE (TREE_TYPE (found))\n \t    : CLASSTYPE_TI_TEMPLATE (found);\n \t}"}, {"sha": "f3a292c3fd3a2c8737c227a33c52020c1fefd1d6", "filename": "gcc/testsuite/g++.dg/template/friend63.C", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6970223f93ce9102cd95044f7c4d10a4ce695a77/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Ffriend63.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6970223f93ce9102cd95044f7c4d10a4ce695a77/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Ffriend63.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Ffriend63.C?ref=6970223f93ce9102cd95044f7c4d10a4ce695a77", "patch": "@@ -0,0 +1,29 @@\n+// PR c++/71738\n+\n+template < class > struct S\n+{\n+  template < class > struct A\n+  { \n+    template < class > struct B\n+    {\n+      template <class Z>\n+      void operator=(Z) { S::i = 0; }\n+    };\n+  };\n+\n+  // Note that this friend declaration is useless, since nested classes are\n+  // already friends of their enclosing class.\n+  template < class X >\n+  template < class Y >\n+  template < class Z >\n+  friend void A < X >::B < Y >::operator= (Z);\n+\n+private:\n+  static int i;\n+};\n+\n+int main()\n+{\n+  S<int>::A<int>::B<int> b;\n+  b = 0;\n+}"}]}