{"sha": "b1b5aa2f2c8d1434d0b784609d229d23b13da9d8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjFiNWFhMmYyYzhkMTQzNGQwYjc4NDYwOWQyMjlkMjNiMTNkYTlkOA==", "commit": {"author": {"name": "Dominik Vogt", "email": "vogt@linux.vnet.ibm.com", "date": "2015-07-24T11:23:53Z"}, "committer": {"name": "Andreas Krebbel", "email": "krebbel@gcc.gnu.org", "date": "2015-07-24T11:23:53Z"}, "message": "[PATCH 3/4] S390 -march=native related fixes\n\ngcc/ChangeLog\n\n\t* config/s390/driver-native.c (s390_host_detect_local_cpu): Handle\n\tprocessor capabilities with -march=native.\n\t* config/s390/s390.h (MARCH_MTUNE_NATIVE_SPECS): Likewise.\n\t(DRIVER_SELF_SPECS): Likewise.  Join specs for 31 and 64 bit.\n\t(S390_TARGET_BITS_STRING): Macro to simplify specs.\n\nFrom-SVN: r226146", "tree": {"sha": "33e681f13c131fb4d5132e246434679a26453697", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/33e681f13c131fb4d5132e246434679a26453697"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b1b5aa2f2c8d1434d0b784609d229d23b13da9d8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b1b5aa2f2c8d1434d0b784609d229d23b13da9d8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b1b5aa2f2c8d1434d0b784609d229d23b13da9d8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b1b5aa2f2c8d1434d0b784609d229d23b13da9d8/comments", "author": {"login": "vogtd", "id": 9690100, "node_id": "MDQ6VXNlcjk2OTAxMDA=", "avatar_url": "https://avatars.githubusercontent.com/u/9690100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vogtd", "html_url": "https://github.com/vogtd", "followers_url": "https://api.github.com/users/vogtd/followers", "following_url": "https://api.github.com/users/vogtd/following{/other_user}", "gists_url": "https://api.github.com/users/vogtd/gists{/gist_id}", "starred_url": "https://api.github.com/users/vogtd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vogtd/subscriptions", "organizations_url": "https://api.github.com/users/vogtd/orgs", "repos_url": "https://api.github.com/users/vogtd/repos", "events_url": "https://api.github.com/users/vogtd/events{/privacy}", "received_events_url": "https://api.github.com/users/vogtd/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "fd9c86e0911d869400bab09ded01a4974b00b9f5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fd9c86e0911d869400bab09ded01a4974b00b9f5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fd9c86e0911d869400bab09ded01a4974b00b9f5"}], "stats": {"total": 176, "additions": 135, "deletions": 41}, "files": [{"sha": "d06e243b5c4174d4adb6ea2ab7f88e221b31c446", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b1b5aa2f2c8d1434d0b784609d229d23b13da9d8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b1b5aa2f2c8d1434d0b784609d229d23b13da9d8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b1b5aa2f2c8d1434d0b784609d229d23b13da9d8", "patch": "@@ -1,3 +1,11 @@\n+2015-07-24  Dominik Vogt  <vogt@linux.vnet.ibm.com>\n+\n+\t* config/s390/driver-native.c (s390_host_detect_local_cpu): Handle\n+\tprocessor capabilities with -march=native.\n+\t* config/s390/s390.h (MARCH_MTUNE_NATIVE_SPECS): Likewise.\n+\t(DRIVER_SELF_SPECS): Likewise.  Join specs for 31 and 64 bit.\n+\t(S390_TARGET_BITS_STRING): Macro to simplify specs.\n+\n 2015-07-24  Dominik Vogt  <vogt@linux.vnet.ibm.com>\n \n \t* config/s390/s390.c (s390_issue_rate): Handle"}, {"sha": "5f7fe0aaea702fb608bb9ec543293ea0c2a6f0bf", "filename": "gcc/config/s390/driver-native.c", "status": "modified", "additions": 115, "deletions": 28, "changes": 143, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b1b5aa2f2c8d1434d0b784609d229d23b13da9d8/gcc%2Fconfig%2Fs390%2Fdriver-native.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b1b5aa2f2c8d1434d0b784609d229d23b13da9d8/gcc%2Fconfig%2Fs390%2Fdriver-native.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fdriver-native.c?ref=b1b5aa2f2c8d1434d0b784609d229d23b13da9d8", "patch": "@@ -42,50 +42,137 @@ s390_host_detect_local_cpu (int argc, const char **argv)\n   char buf[256];\n   FILE *f;\n   bool arch;\n+  const char *options = \"\";\n+  unsigned int has_features;\n+  unsigned int has_processor;\n+  unsigned int is_cpu_z9_109 = 0;\n+  unsigned int has_highgprs = 0;\n+  unsigned int has_dfp = 0;\n+  unsigned int has_te = 0;\n+  unsigned int has_vx = 0;\n+  unsigned int has_opt_esa_zarch = 0;\n+  int i;\n \n   if (argc < 1)\n     return NULL;\n \n   arch = strcmp (argv[0], \"arch\") == 0;\n   if (!arch && strcmp (argv[0], \"tune\"))\n     return NULL;\n+  for (i = 1; i < argc; i++)\n+    if (strcmp (argv[i], \"mesa_mzarch\") == 0)\n+      has_opt_esa_zarch = 1;\n \n   f = fopen (\"/proc/cpuinfo\", \"r\");\n   if (f == NULL)\n     return NULL;\n \n-  while (fgets (buf, sizeof (buf), f) != NULL)\n-    if (strncmp (buf, \"processor\", sizeof (\"processor\") - 1) == 0)\n-      {\n-\tif (strstr (buf, \"machine = 9672\") != NULL)\n-\t  cpu = \"g5\";\n-\telse if (strstr (buf, \"machine = 2064\") != NULL\n-\t\t || strstr (buf, \"machine = 2066\") != NULL)\n-\t  cpu = \"z900\";\n-\telse if (strstr (buf, \"machine = 2084\") != NULL\n-\t\t || strstr (buf, \"machine = 2086\") != NULL)\n-\t  cpu = \"z990\";\n-\telse if (strstr (buf, \"machine = 2094\") != NULL\n-\t\t || strstr (buf, \"machine = 2096\") != NULL)\n-\t  cpu = \"z9-109\";\n-\telse if (strstr (buf, \"machine = 2097\") != NULL\n-\t\t || strstr (buf, \"machine = 2098\") != NULL)\n-\t  cpu = \"z10\";\n-\telse if (strstr (buf, \"machine = 2817\") != NULL\n-\t\t || strstr (buf, \"machine = 2818\") != NULL)\n-\t  cpu = \"z196\";\n-\telse if (strstr (buf, \"machine = 2827\") != NULL\n-\t\t || strstr (buf, \"machine = 2828\") != NULL)\n-\t  cpu = \"zEC12\";\n-\telse if (strstr (buf, \"machine = 2964\") != NULL)\n-\t  cpu = \"z13\";\n-\tbreak;\n-      }\n+  for (has_features = 0, has_processor = 0;\n+       (has_features == 0 || has_processor == 0)\n+\t && fgets (buf, sizeof (buf), f) != NULL; )\n+    {\n+      if (has_processor == 0 && strncmp (buf, \"processor\", 9) == 0)\n+\t{\n+\t  const char *p;\n+\t  long machine_id;\n+\n+\t  p = strstr (buf, \"machine = \");\n+\t  if (p == NULL)\n+\t    continue;\n+\t  p += 10;\n+\t  has_processor = 1;\n+\t  machine_id = strtol (p, NULL, 16);\n+\t  switch (machine_id)\n+\t    {\n+\t    case 0x9672:\n+\t      cpu = \"g5\";\n+\t      break;\n+\t    case 0x2064:\n+\t    case 0x2066:\n+\t      cpu = \"z900\";\n+\t      break;\n+\t    case 0x2084:\n+\t    case 0x2086:\n+\t      cpu = \"z990\";\n+\t      break;\n+\t    case 0x2094:\n+\t    case 0x2096:\n+\t      cpu = \"z9-109\";\n+\t      is_cpu_z9_109 = 1;\n+\t      break;\n+\t    case 0x2097:\n+\t    case 0x2098:\n+\t      cpu = \"z10\";\n+\t      break;\n+\t    case 0x2817:\n+\t    case 0x2818:\n+\t      cpu = \"z196\";\n+\t      break;\n+\t    case 0x2827:\n+\t    case 0x2828:\n+\t      cpu = \"zEC12\";\n+\t      break;\n+\t    case 0x2964:\n+\t      cpu = \"z13\";\n+\t      break;\n+\t    }\n+\t}\n+      if (has_features == 0 && strncmp (buf, \"features\", 8) == 0)\n+\t{\n+\t  const char *p;\n+\n+\t  p = strchr (buf, ':');\n+\t  if (p == NULL)\n+\t    continue;\n+\t  p++;\n+\t  while (*p != 0)\n+\t    {\n+\t      int i;\n+\n+\t      while (ISSPACE (*p))\n+\t\tp++;\n+\t      for (i = 0; !ISSPACE (p[i]) && p[i] != 0; i++)\n+\t\t;\n+\t      if (i == 3 && strncmp (p, \"dfp\", 3) == 0)\n+\t\thas_dfp = 1;\n+\t      else if (i == 2 && strncmp (p, \"te\", 2) == 0)\n+\t\thas_te = 1;\n+\t      else if (i == 2 && strncmp (p, \"vx\", 2) == 0)\n+\t\thas_vx = 1;\n+\t      else if (i == 8 && strncmp (p, \"highgprs\", 8) == 0)\n+\t\thas_highgprs = 1;\n+\t      p += i;\n+\t    }\n+\t  has_features = 1;\n+\t}\n+    }\n \n   fclose (f);\n \n   if (cpu == NULL)\n     return NULL;\n \n-  return concat (\"-m\", argv[0], \"=\", cpu, NULL);\n+  if (arch)\n+    {\n+      const char *opt_htm = \"\";\n+      const char *opt_vx = \"\";\n+      const char *opt_esa_zarch = \"\";\n+\n+      /* We may switch off these cpu features but never switch the on\n+\t explicitly.  This overrides options specified on the command line.  */\n+      if (!has_te)\n+\topt_htm = \" -mno-htm\";\n+      if (!has_vx)\n+\topt_vx = \" -mno-vx\";\n+      /* However, we set -mzarch only if neither -mzarch nor -mesa are used on\n+\t the command line.  This allows the user to switch to -mesa manually.\n+      */\n+      if (!has_opt_esa_zarch && has_highgprs)\n+\topt_esa_zarch = \" -mzarch\";\n+      options = concat (options, opt_htm, opt_vx, opt_esa_zarch, NULL);\n+    }\n+  if (has_dfp && is_cpu_z9_109)\n+    cpu = \"z9-ec\";\n+\n+  return concat (\"-m\", argv[0], \"=\", cpu, options, NULL);\n }"}, {"sha": "a0faf13ba75a44ca5ceae33653fd624977ce7755", "filename": "gcc/config/s390/s390.h", "status": "modified", "additions": 12, "deletions": 13, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b1b5aa2f2c8d1434d0b784609d229d23b13da9d8/gcc%2Fconfig%2Fs390%2Fs390.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b1b5aa2f2c8d1434d0b784609d229d23b13da9d8/gcc%2Fconfig%2Fs390%2Fs390.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390.h?ref=b1b5aa2f2c8d1434d0b784609d229d23b13da9d8", "patch": "@@ -131,27 +131,26 @@ extern const char *s390_host_detect_local_cpu (int argc, const char **argv);\n # define EXTRA_SPEC_FUNCTIONS \\\n   { \"local_cpu_detect\", s390_host_detect_local_cpu },\n \n-# define MARCH_MTUNE_NATIVE_SPECS\t\t\t\t\\\n-  \" %{march=native:%<march=native %:local_cpu_detect(arch)}\"\t\\\n-  \" %{mtune=native:%<mtune=native %:local_cpu_detect(tune)}\"\n+#define MARCH_MTUNE_NATIVE_SPECS\t\t\t\t\\\n+  \"%{mtune=native:%<mtune=native %:local_cpu_detect(tune)} \"\t\\\n+  \"%{march=native:%<march=native\"\t\t\t\t\\\n+  \" %:local_cpu_detect(arch %{mesa|mzarch:mesa_mzarch})}\"\n #else\n # define MARCH_MTUNE_NATIVE_SPECS \"\"\n #endif\n \n-/* Defaulting rules.  */\n #ifdef DEFAULT_TARGET_64BIT\n-#define DRIVER_SELF_SPECS\t\t\t\t\t\\\n-  \"%{!m31:%{!m64:-m64}}\",\t\t\t\t\t\\\n-  \"%{!mesa:%{!mzarch:%{m31:-mesa}%{m64:-mzarch}}}\",\t\t\\\n-  \"%{!march=*:%{mesa:-march=g5}%{mzarch:-march=z900}}\",\t\t\\\n-  MARCH_MTUNE_NATIVE_SPECS\n+#define S390_TARGET_BITS_STRING \"64\"\n #else\n+#define S390_TARGET_BITS_STRING \"31\"\n+#endif\n+\n+/* Defaulting rules.  */\n #define DRIVER_SELF_SPECS\t\t\t\t\t\\\n-  \"%{!m31:%{!m64:-m31}}\",\t\t\t\t\t\\\n+  MARCH_MTUNE_NATIVE_SPECS,\t\t\t\t\t\\\n+  \"%{!m31:%{!m64:-m\" S390_TARGET_BITS_STRING \"}}\",\t\t\\\n   \"%{!mesa:%{!mzarch:%{m31:-mesa}%{m64:-mzarch}}}\",\t\t\\\n-  \"%{!march=*:%{mesa:-march=g5}%{mzarch:-march=z900}}\",\t\t\\\n-  MARCH_MTUNE_NATIVE_SPECS\n-#endif\n+  \"%{!march=*:%{mesa:-march=g5}%{mzarch:-march=z900}}\"\n \n /* Constants needed to control the TEST DATA CLASS (TDC) instruction.  */\n #define S390_TDC_POSITIVE_ZERO                     (1 << 11)"}]}