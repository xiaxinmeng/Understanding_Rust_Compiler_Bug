{"sha": "227e57986a52f7aba4fbc819eec4b64ae2a9776f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjI3ZTU3OTg2YTUyZjdhYmE0ZmJjODE5ZWVjNGI2NGFlMmE5Nzc2Zg==", "commit": {"author": {"name": "Christophe Lyon", "email": "christophe.lyon@linaro.org", "date": "2018-01-10T15:34:33Z"}, "committer": {"name": "Christophe Lyon", "email": "clyon@gcc.gnu.org", "date": "2018-01-10T15:34:33Z"}, "message": "[ARM] Add -mbranch-cost option, and update a few tests\n\n2018-01-10  Christophe Lyon  <christophe.lyon@linaro.org>\n\n\tgcc/\n\t* config/arm/arm.opt (-mbranch-cost): New option.\n\t* config/arm/arm.h (BRANCH_COST): Take arm_branch_cost into\n\taccount.\n\n\tgcc/testsuite/\n\t* lib/target-supports.exp (check_effective_target_branch_cost):\n\tNew function.\n\t* gcc.dg/builtin-bswap-7.c: Use branch_cost effective target.\n\t* gcc.dg/pr21643.c: Likewise.\n\t* gcc.dg/pr46309.c: Likewise.\n\t* gcc.dg/tree-ssa/phi-opt-11.c: Likewise.\n\t* gcc.dg/tree-ssa/phi-opt-2.c: Likewise.\n\t* gcc.dg/tree-ssa/reassoc-32.c: Likewise.\n\t* gcc.dg/tree-ssa/reassoc-33.c: Likewise.\n\t* gcc.dg/tree-ssa/reassoc-34.c: Likewise.\n\t* gcc.dg/tree-ssa/reassoc-35.c: Likewise.\n\t* gcc.dg/tree-ssa/reassoc-36.c: Likewise.\n\t* gcc.dg/tree-ssa/ssa-ifcombine-13.c: Likewise.\n\t* gcc.dg/tree-ssa/ssa-ifcombine-ccmp-1.c: Likewise.\n\t* gcc.dg/tree-ssa/ssa-ifcombine-ccmp-2.c: Likewise.\n\t* gcc.dg/tree-ssa/ssa-ifcombine-ccmp-3.c: Likewise.\n\t* gcc.dg/tree-ssa/ssa-ifcombine-ccmp-4.c: Likewise.\n\t* gcc.dg/tree-ssa/ssa-ifcombine-ccmp-5.c: Likewise.\n\t* gcc.dg/tree-ssa/ssa-ifcombine-ccmp-6.c: Likewise.\n\nFrom-SVN: r256434", "tree": {"sha": "63a942793fc9fc2e523f9431f0c878f9ee3d4cce", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/63a942793fc9fc2e523f9431f0c878f9ee3d4cce"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/227e57986a52f7aba4fbc819eec4b64ae2a9776f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/227e57986a52f7aba4fbc819eec4b64ae2a9776f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/227e57986a52f7aba4fbc819eec4b64ae2a9776f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/227e57986a52f7aba4fbc819eec4b64ae2a9776f/comments", "author": null, "committer": null, "parents": [{"sha": "d0ac0d52e93267911a6ef1bcbde87bccdebd5058", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d0ac0d52e93267911a6ef1bcbde87bccdebd5058", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d0ac0d52e93267911a6ef1bcbde87bccdebd5058"}], "stats": {"total": 87, "additions": 70, "deletions": 17}, "files": [{"sha": "a7b22a83fcfe705fb7b18587235db6deadd8be5e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/227e57986a52f7aba4fbc819eec4b64ae2a9776f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/227e57986a52f7aba4fbc819eec4b64ae2a9776f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=227e57986a52f7aba4fbc819eec4b64ae2a9776f", "patch": "@@ -1,3 +1,9 @@\n+2018-01-10  Christophe Lyon  <christophe.lyon@linaro.org>\n+\n+\t* config/arm/arm.opt (-mbranch-cost): New option.\n+\t* config/arm/arm.h (BRANCH_COST): Take arm_branch_cost into\n+\taccount.\n+\n 2018-01-10  Segher Boessenkool  <segher@kernel.crashing.org>\n \n \tPR target/83629"}, {"sha": "bd736423204b0062f5e396728d581798b694af78", "filename": "gcc/config/arm/arm.h", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/227e57986a52f7aba4fbc819eec4b64ae2a9776f/gcc%2Fconfig%2Farm%2Farm.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/227e57986a52f7aba4fbc819eec4b64ae2a9776f/gcc%2Fconfig%2Farm%2Farm.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.h?ref=227e57986a52f7aba4fbc819eec4b64ae2a9776f", "patch": "@@ -1899,8 +1899,9 @@ enum arm_auto_incmodes\n \n /* Try to generate sequences that don't involve branches, we can then use\n    conditional instructions.  */\n-#define BRANCH_COST(speed_p, predictable_p) \\\n-  (current_tune->branch_cost (speed_p, predictable_p))\n+#define BRANCH_COST(speed_p, predictable_p)\t\t\t\\\n+  ((arm_branch_cost != -1) ? arm_branch_cost :\t\t\t\\\n+   (current_tune->branch_cost (speed_p, predictable_p)))\n \n /* False if short circuit operation is preferred.  */\n #define LOGICAL_OP_NON_SHORT_CIRCUIT\t\t\t\t\t\\"}, {"sha": "a1286a4a8614c16494ae66a65c74e2eeb9db34d9", "filename": "gcc/config/arm/arm.opt", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/227e57986a52f7aba4fbc819eec4b64ae2a9776f/gcc%2Fconfig%2Farm%2Farm.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/227e57986a52f7aba4fbc819eec4b64ae2a9776f/gcc%2Fconfig%2Farm%2Farm.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.opt?ref=227e57986a52f7aba4fbc819eec4b64ae2a9776f", "patch": "@@ -298,3 +298,7 @@ When linking for big-endian targets, generate a BE8 format image.\n mbe32\n Target Report RejectNegative Negative(mbe8) InverseMask(BE8)\n When linking for big-endian targets, generate a legacy BE32 format image.\n+\n+mbranch-cost=\n+Target RejectNegative Joined UInteger Var(arm_branch_cost) Init(-1)\n+Cost to assume for a branch insn."}, {"sha": "c6adde8486687f82677124da37d49a4c146ffd2a", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/227e57986a52f7aba4fbc819eec4b64ae2a9776f/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/227e57986a52f7aba4fbc819eec4b64ae2a9776f/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=227e57986a52f7aba4fbc819eec4b64ae2a9776f", "patch": "@@ -1,3 +1,25 @@\n+2018-01-10  Christophe Lyon  <christophe.lyon@linaro.org>\n+\n+\t* lib/target-supports.exp (check_effective_target_branch_cost):\n+\tNew function.\n+\t* gcc.dg/builtin-bswap-7.c: Use branch_cost effective target.\n+\t* gcc.dg/pr21643.c: Likewise.\n+\t* gcc.dg/pr46309.c: Likewise.\n+\t* gcc.dg/tree-ssa/phi-opt-11.c: Likewise.\n+\t* gcc.dg/tree-ssa/phi-opt-2.c: Likewise.\n+\t* gcc.dg/tree-ssa/reassoc-32.c: Likewise.\n+\t* gcc.dg/tree-ssa/reassoc-33.c: Likewise.\n+\t* gcc.dg/tree-ssa/reassoc-34.c: Likewise.\n+\t* gcc.dg/tree-ssa/reassoc-35.c: Likewise.\n+\t* gcc.dg/tree-ssa/reassoc-36.c: Likewise.\n+\t* gcc.dg/tree-ssa/ssa-ifcombine-13.c: Likewise.\n+\t* gcc.dg/tree-ssa/ssa-ifcombine-ccmp-1.c: Likewise.\n+\t* gcc.dg/tree-ssa/ssa-ifcombine-ccmp-2.c: Likewise.\n+\t* gcc.dg/tree-ssa/ssa-ifcombine-ccmp-3.c: Likewise.\n+\t* gcc.dg/tree-ssa/ssa-ifcombine-ccmp-4.c: Likewise.\n+\t* gcc.dg/tree-ssa/ssa-ifcombine-ccmp-5.c: Likewise.\n+\t* gcc.dg/tree-ssa/ssa-ifcombine-ccmp-6.c: Likewise.\n+\n 2018-01-10  Segher Boessenkool  <segher@kernel.crashing.org>\n \n \tPR target/83629"}, {"sha": "fe854416c40a677dce127253f1dfefcdd63b5987", "filename": "gcc/testsuite/gcc.dg/builtin-bswap-7.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/227e57986a52f7aba4fbc819eec4b64ae2a9776f/gcc%2Ftestsuite%2Fgcc.dg%2Fbuiltin-bswap-7.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/227e57986a52f7aba4fbc819eec4b64ae2a9776f/gcc%2Ftestsuite%2Fgcc.dg%2Fbuiltin-bswap-7.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fbuiltin-bswap-7.c?ref=227e57986a52f7aba4fbc819eec4b64ae2a9776f", "patch": "@@ -5,7 +5,7 @@\n \n /* The branch cost setting prevents the return value from being\n    calculated with arithmetic instead of doing a compare.  */\n-/* { dg-additional-options \"-mbranch-cost=0\" { target s390x-*-* } } */\n+/* { dg-additional-options \"-mbranch-cost=0\" { target branch_cost } } */\n \n #include <stdint.h>\n "}, {"sha": "d981fbc8b3bccc7a79a6e4df103f5bf6d3d8db25", "filename": "gcc/testsuite/gcc.dg/pr21643.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/227e57986a52f7aba4fbc819eec4b64ae2a9776f/gcc%2Ftestsuite%2Fgcc.dg%2Fpr21643.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/227e57986a52f7aba4fbc819eec4b64ae2a9776f/gcc%2Ftestsuite%2Fgcc.dg%2Fpr21643.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr21643.c?ref=227e57986a52f7aba4fbc819eec4b64ae2a9776f", "patch": "@@ -1,6 +1,7 @@\n /* PR tree-optimization/21643 */\n /* { dg-do compile } */\n /* { dg-options \"-O2 -fdump-tree-reassoc1-details\" } */\n+/* { dg-additional-options \"-mbranch-cost=2\" { target branch_cost } } */\n \n int\n f1 (unsigned char c)"}, {"sha": "c9645292c6fbf0dadc7cfa2886c23d3383199401", "filename": "gcc/testsuite/gcc.dg/pr46309.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/227e57986a52f7aba4fbc819eec4b64ae2a9776f/gcc%2Ftestsuite%2Fgcc.dg%2Fpr46309.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/227e57986a52f7aba4fbc819eec4b64ae2a9776f/gcc%2Ftestsuite%2Fgcc.dg%2Fpr46309.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr46309.c?ref=227e57986a52f7aba4fbc819eec4b64ae2a9776f", "patch": "@@ -4,7 +4,7 @@\n /* The transformation depends on BRANCH_COST being greater than 1\n    (see the notes in the PR), so try to force that.  */\n /* { dg-additional-options \"-mtune=octeon2\" { target mips*-*-* } } */\n-/* { dg-additional-options \"-mbranch-cost=2\" { target avr*-*-* s390*-*-* i?86-*-* x86_64-*-* } } */\n+/* { dg-additional-options \"-mbranch-cost=2\" { target branch_cost } } */\n \n int\n f1 (int a)"}, {"sha": "20728fcacc5f303865a21798d833781ba4701242", "filename": "gcc/testsuite/gcc.dg/tree-ssa/phi-opt-11.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/227e57986a52f7aba4fbc819eec4b64ae2a9776f/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fphi-opt-11.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/227e57986a52f7aba4fbc819eec4b64ae2a9776f/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fphi-opt-11.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fphi-opt-11.c?ref=227e57986a52f7aba4fbc819eec4b64ae2a9776f", "patch": "@@ -1,5 +1,6 @@\n /* { dg-do compile } */\n /* { dg-options \"-O1 -fdump-tree-optimized\" } */\n+/* { dg-additional-options \"-mbranch-cost=2\" { target branch_cost } } */\n \n int f(int a, int b, int c)\n {"}, {"sha": "e0b261810382083253ca8b76156bf5847c518484", "filename": "gcc/testsuite/gcc.dg/tree-ssa/phi-opt-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/227e57986a52f7aba4fbc819eec4b64ae2a9776f/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fphi-opt-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/227e57986a52f7aba4fbc819eec4b64ae2a9776f/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fphi-opt-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fphi-opt-2.c?ref=227e57986a52f7aba4fbc819eec4b64ae2a9776f", "patch": "@@ -1,6 +1,6 @@\n /* { dg-do compile } */\n /* { dg-options \"-O1 -fdump-tree-optimized\" } */\n-/* { dg-additional-options \"-mbranch-cost=1\" { target { i?86-*-* x86_64-*-* mips*-*-* s390*-*-* avr*-*-* } } } */\n+/* { dg-additional-options \"-mbranch-cost=1\" { target branch_cost } } */\n \n _Bool f1(_Bool a, _Bool b)\n {"}, {"sha": "b6ca8e2bb39e762561d65b22a6029cc74c22b876", "filename": "gcc/testsuite/gcc.dg/tree-ssa/reassoc-32.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/227e57986a52f7aba4fbc819eec4b64ae2a9776f/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Freassoc-32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/227e57986a52f7aba4fbc819eec4b64ae2a9776f/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Freassoc-32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Freassoc-32.c?ref=227e57986a52f7aba4fbc819eec4b64ae2a9776f", "patch": "@@ -1,7 +1,7 @@\n /* { dg-do run { target { ! \"m68k*-*-* mmix*-*-* bfin*-*-* v850*-*-* moxie*-*-* cris*-*-* m32c*-*-* fr30*-*-* mcore*-*-* powerpc*-*-* xtensa*-*-*\"} } } */\n \n /* { dg-options \"-O2 -fno-inline -fdump-tree-reassoc1-details\" } */\n-/* { dg-additional-options \"-mbranch-cost=2\" { target mips*-*-* avr-*-* s390*-*-* i?86-*-* x86_64-*-* } } */\n+/* { dg-additional-options \"-mbranch-cost=2\" { target branch_cost } } */\n \n \n int test (int a, int b, int c)"}, {"sha": "5572df4ae2412294e71d055840d67e6eed484ecf", "filename": "gcc/testsuite/gcc.dg/tree-ssa/reassoc-33.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/227e57986a52f7aba4fbc819eec4b64ae2a9776f/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Freassoc-33.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/227e57986a52f7aba4fbc819eec4b64ae2a9776f/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Freassoc-33.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Freassoc-33.c?ref=227e57986a52f7aba4fbc819eec4b64ae2a9776f", "patch": "@@ -1,7 +1,7 @@\n /* { dg-do run { target { ! \"m68k*-*-* mmix*-*-* bfin*-*-* v850*-*-* moxie*-*-* cris*-*-* m32c*-*-* fr30*-*-* mcore*-*-* powerpc*-*-* xtensa*-*-* hppa*-*-* nios2*-*-*\"} } } */\n \n /* { dg-options \"-O2 -fno-inline -fdump-tree-reassoc1-details\" } */\n-/* { dg-additional-options \"-mbranch-cost=2\" { target mips*-*-* avr-*-* s390*-*-* i?86-*-* x86_64-*-* } } */\n+/* { dg-additional-options \"-mbranch-cost=2\" { target branch_cost } } */\n \n int test (int a, int b, int c)\n {"}, {"sha": "9b45f1cd9be85416f4962eaf3bfb76e95ebbfa4f", "filename": "gcc/testsuite/gcc.dg/tree-ssa/reassoc-34.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/227e57986a52f7aba4fbc819eec4b64ae2a9776f/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Freassoc-34.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/227e57986a52f7aba4fbc819eec4b64ae2a9776f/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Freassoc-34.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Freassoc-34.c?ref=227e57986a52f7aba4fbc819eec4b64ae2a9776f", "patch": "@@ -1,7 +1,7 @@\n /* { dg-do run { target { ! \"m68k*-*-* mmix*-*-* bfin*-*-* v850*-*-* moxie*-*-* cris*-*-* m32c*-*-* fr30*-*-* mcore*-*-* powerpc*-*-* xtensa*-*-* hppa*-*-* nios2*-*-*\"} } } */\n \n /* { dg-options \"-O2 -fno-inline -fdump-tree-reassoc1-details\" } */\n-/* { dg-additional-options \"-mbranch-cost=2\" { target mips*-*-* avr-*-* s390*-*-* i?86-*-* x86_64-*-* } } */\n+/* { dg-additional-options \"-mbranch-cost=2\" { target branch_cost } } */\n \n int test (int a, int b, int c)\n {"}, {"sha": "9ee3abca04eedaf7b22108dc084645e8d56294c9", "filename": "gcc/testsuite/gcc.dg/tree-ssa/reassoc-35.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/227e57986a52f7aba4fbc819eec4b64ae2a9776f/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Freassoc-35.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/227e57986a52f7aba4fbc819eec4b64ae2a9776f/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Freassoc-35.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Freassoc-35.c?ref=227e57986a52f7aba4fbc819eec4b64ae2a9776f", "patch": "@@ -1,7 +1,7 @@\n /* { dg-do run { target { ! \"m68k*-*-* mmix*-*-* bfin*-*-* v850*-*-* moxie*-*-* cris*-*-* m32c*-*-* fr30*-*-* mcore*-*-* powerpc*-*-* xtensa*-*-* hppa*-*-* nios2*-*-*\"} } } */\n \n /* { dg-options \"-O2 -fno-inline -fdump-tree-reassoc1-details\" } */\n-/* { dg-additional-options \"-mbranch-cost=2\" { target mips*-*-* avr-*-* s390*-*-* i?86-*-* x86_64-*-* } } */\n+/* { dg-additional-options \"-mbranch-cost=2\" { target branch_cost } } */\n \n int test (unsigned int a, int b, int c)\n {"}, {"sha": "ac3a04291b79b6386f26016eeb5434c82cef389b", "filename": "gcc/testsuite/gcc.dg/tree-ssa/reassoc-36.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/227e57986a52f7aba4fbc819eec4b64ae2a9776f/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Freassoc-36.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/227e57986a52f7aba4fbc819eec4b64ae2a9776f/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Freassoc-36.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Freassoc-36.c?ref=227e57986a52f7aba4fbc819eec4b64ae2a9776f", "patch": "@@ -1,7 +1,7 @@\n /* { dg-do run { target { ! \"m68k*-*-* mmix*-*-* bfin*-*-* v850*-*-* moxie*-*-* cris*-*-* m32c*-*-* fr30*-*-* mcore*-*-* powerpc*-*-* xtensa*-*-* hppa*-*-* nios2*-*-*\"} } } */\n \n /* { dg-options \"-O2 -fno-inline -fdump-tree-reassoc1-details\" } */\n-/* { dg-additional-options \"-mbranch-cost=2\" { target mips*-*-* avr-*-* s390*-*-* i?86-*-* x86_64-*-* } } */\n+/* { dg-additional-options \"-mbranch-cost=2\" { target branch_cost } } */\n \n int test (int a, int b, int c)\n {"}, {"sha": "5f3147a8c004fe679dbd76e9483a820e50fa0646", "filename": "gcc/testsuite/gcc.dg/tree-ssa/ssa-ifcombine-13.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/227e57986a52f7aba4fbc819eec4b64ae2a9776f/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-ifcombine-13.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/227e57986a52f7aba4fbc819eec4b64ae2a9776f/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-ifcombine-13.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-ifcombine-13.c?ref=227e57986a52f7aba4fbc819eec4b64ae2a9776f", "patch": "@@ -1,6 +1,6 @@\n /* { dg-do compile } */\n /* { dg-options \"-O1 -fdump-tree-optimized-details-blocks\" } */\n-/* { dg-additional-options \"-mbranch-cost=2\" { target { i?86-*-* x86_64-*-* s390*-*-* avr*-*-* } } } */\n+/* { dg-additional-options \"-mbranch-cost=2\" { target branch_cost } } */\n \n _Bool f1(_Bool a, _Bool b)\n {"}, {"sha": "1714fcf97c0501a960cb8ac7f9fe7950ffb5301c", "filename": "gcc/testsuite/gcc.dg/tree-ssa/ssa-ifcombine-ccmp-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/227e57986a52f7aba4fbc819eec4b64ae2a9776f/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-ifcombine-ccmp-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/227e57986a52f7aba4fbc819eec4b64ae2a9776f/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-ifcombine-ccmp-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-ifcombine-ccmp-1.c?ref=227e57986a52f7aba4fbc819eec4b64ae2a9776f", "patch": "@@ -1,7 +1,7 @@\n /* { dg-do compile { target { ! { { logical_op_short_circuit && { ! avr-*-* } } || { m68k*-*-* mmix*-*-* bfin*-*-* v850*-*-* moxie*-*-* cris*-*-* m32c*-*-* fr30*-*-* mcore*-*-* powerpc*-*-* xtensa*-*-* arc*-*-* mips*-*-* } } } } } */\n \n /* { dg-options \"-O2 -g -fdump-tree-optimized\" } */\n-/* { dg-additional-options \"-mbranch-cost=2\" { target mips*-*-* avr-*-* s390*-*-* i?86-*-* x86_64-*-* } } */\n+/* { dg-additional-options \"-mbranch-cost=2\" { target branch_cost } } */\n \n int t (int a, int b)\n {"}, {"sha": "f35ec5edac23784af738ccca0a60f8ac99490b1f", "filename": "gcc/testsuite/gcc.dg/tree-ssa/ssa-ifcombine-ccmp-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/227e57986a52f7aba4fbc819eec4b64ae2a9776f/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-ifcombine-ccmp-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/227e57986a52f7aba4fbc819eec4b64ae2a9776f/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-ifcombine-ccmp-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-ifcombine-ccmp-2.c?ref=227e57986a52f7aba4fbc819eec4b64ae2a9776f", "patch": "@@ -1,7 +1,7 @@\n /* { dg-do compile { target { ! { { logical_op_short_circuit && { ! avr-*-* } } || { m68k*-*-* mmix*-*-* bfin*-*-* v850*-*-* moxie*-*-* cris*-*-* m32c*-*-* fr30*-*-* mcore*-*-* powerpc*-*-* xtensa*-*-* arc*-*-* mips*-*-* } } } } } */\n \n /* { dg-options \"-O2 -g -fdump-tree-optimized\" } */\n-/* { dg-additional-options \"-mbranch-cost=2\" { target mips*-*-* avr-*-* s390*-*-* i?86-*-* x86_64-*-* } } */\n+/* { dg-additional-options \"-mbranch-cost=2\" { target branch_cost } } */\n \n int t (int a, int b)\n {"}, {"sha": "d84bdd51c749eaf6de0613721a9328cd97d5c866", "filename": "gcc/testsuite/gcc.dg/tree-ssa/ssa-ifcombine-ccmp-3.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/227e57986a52f7aba4fbc819eec4b64ae2a9776f/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-ifcombine-ccmp-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/227e57986a52f7aba4fbc819eec4b64ae2a9776f/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-ifcombine-ccmp-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-ifcombine-ccmp-3.c?ref=227e57986a52f7aba4fbc819eec4b64ae2a9776f", "patch": "@@ -1,7 +1,7 @@\n /* { dg-do compile { target { ! { { logical_op_short_circuit && { ! avr-*-* } } || { m68k*-*-* mmix*-*-* bfin*-*-* v850*-*-* moxie*-*-* cris*-*-* m32c*-*-* fr30*-*-* mcore*-*-* powerpc*-*-* xtensa*-*-* arc*-*-* mips*-*-* } } } } } */\n \n /* { dg-options \"-O2 -g -fdump-tree-optimized\" } */\n-/* { dg-additional-options \"-mbranch-cost=2\" { target mips*-*-* avr-*-* s390*-*-* i?86-*-* x86_64-*-* } } */\n+/* { dg-additional-options \"-mbranch-cost=2\" { target branch_cost } } */\n \n int t (int a, int b)\n {"}, {"sha": "be0ee264e359927958ae2cd62eaddb0b0d657877", "filename": "gcc/testsuite/gcc.dg/tree-ssa/ssa-ifcombine-ccmp-4.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/227e57986a52f7aba4fbc819eec4b64ae2a9776f/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-ifcombine-ccmp-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/227e57986a52f7aba4fbc819eec4b64ae2a9776f/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-ifcombine-ccmp-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-ifcombine-ccmp-4.c?ref=227e57986a52f7aba4fbc819eec4b64ae2a9776f", "patch": "@@ -1,7 +1,7 @@\n /* { dg-do compile { target { ! { { logical_op_short_circuit && { ! avr-*-* } } || { m68k*-*-* mmix*-*-* bfin*-*-* v850*-*-* moxie*-*-* cris*-*-* m32c*-*-* fr30*-*-* mcore*-*-* powerpc*-*-* xtensa*-*-* arc*-*-* mips*-*-* } } } } } */\n \n /* { dg-options \"-O2 -g -fdump-tree-optimized\" } */\n-/* { dg-additional-options \"-mbranch-cost=2\" { target mips*-*-* avr-*-* s390*-*-* i?86-*-* x86_64-*-* } } */\n+/* { dg-additional-options \"-mbranch-cost=2\" { target branch_cost } } */\n \n int t (int a, int b)\n {"}, {"sha": "09c22abb071aa5fd8bee0536a85b6f662fac20df", "filename": "gcc/testsuite/gcc.dg/tree-ssa/ssa-ifcombine-ccmp-5.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/227e57986a52f7aba4fbc819eec4b64ae2a9776f/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-ifcombine-ccmp-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/227e57986a52f7aba4fbc819eec4b64ae2a9776f/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-ifcombine-ccmp-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-ifcombine-ccmp-5.c?ref=227e57986a52f7aba4fbc819eec4b64ae2a9776f", "patch": "@@ -1,7 +1,7 @@\n /* { dg-do compile { target { ! { { logical_op_short_circuit && { ! avr-*-* } } || { m68k*-*-* mmix*-*-* bfin*-*-* v850*-*-* moxie*-*-* cris*-*-* m32c*-*-* fr30*-*-* mcore*-*-* powerpc*-*-* xtensa*-*-* arc*-*-* mips*-*-* } } } } } */\n \n /* { dg-options \"-O2 -g -fdump-tree-optimized\" } */\n-/* { dg-additional-options \"-mbranch-cost=2\" { target mips*-*-* avr-*-* s390*-*-* i?86-*-* x86_64-*-* } } */\n+/* { dg-additional-options \"-mbranch-cost=2\" { target branch_cost } } */\n \n int t (int a, int b, int c)\n {"}, {"sha": "a0dc82db1564ab730390a827cca9df3d20c7e292", "filename": "gcc/testsuite/gcc.dg/tree-ssa/ssa-ifcombine-ccmp-6.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/227e57986a52f7aba4fbc819eec4b64ae2a9776f/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-ifcombine-ccmp-6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/227e57986a52f7aba4fbc819eec4b64ae2a9776f/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-ifcombine-ccmp-6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-ifcombine-ccmp-6.c?ref=227e57986a52f7aba4fbc819eec4b64ae2a9776f", "patch": "@@ -1,7 +1,7 @@\n /* { dg-do compile { target { ! { { logical_op_short_circuit && { ! avr-*-* } } || { m68k*-*-* mmix*-*-* bfin*-*-* v850*-*-* moxie*-*-* cris*-*-* m32c*-*-* fr30*-*-* mcore*-*-* powerpc*-*-* xtensa*-*-* arc*-*-* mips*-*-* } } } } } */\n \n /* { dg-options \"-O2 -g -fdump-tree-optimized\" } */\n-/* { dg-additional-options \"-mbranch-cost=2\" { target mips*-*-* avr-*-* s390*-*-* i?86-*-* x86_64-*-* } } */\n+/* { dg-additional-options \"-mbranch-cost=2\" { target branch_cost } } */\n \n int t (int a, int b, int c)\n {"}, {"sha": "7de961b45e18af8f3029a8d046bbd5557aec191f", "filename": "gcc/testsuite/lib/target-supports.exp", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/227e57986a52f7aba4fbc819eec4b64ae2a9776f/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/227e57986a52f7aba4fbc819eec4b64ae2a9776f/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp?ref=227e57986a52f7aba4fbc819eec4b64ae2a9776f", "patch": "@@ -8595,6 +8595,24 @@ proc check_effective_target_logical_op_short_circuit {} {\n     return 0\n }\n \n+# Return 1 if the target supports -mbranch-cost=N option.\n+\n+proc check_effective_target_branch_cost {} {\n+    if { [   istarget arm*-*-*]\n+\t || [istarget avr*-*-*]\n+\t || [istarget epiphany*-*-*]\n+\t || [istarget frv*-*-*]\n+\t || [istarget i?86-*-linux*] || [istarget x86_64-*-linux*]\n+\t || [istarget mips*-*-*]\n+\t || [istarget s390*-*-*]\n+\t || [istarget riscv*-*-*]\n+\t || [istarget sh*-*-*]\n+\t || [istarget spu*-*-*] } {\n+\treturn 1\n+    }\n+    return 0\n+}\n+\n # Record that dg-final test TEST requires convential compilation.\n \n proc force_conventional_output_for { test } {"}]}