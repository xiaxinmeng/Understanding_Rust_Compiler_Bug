{"sha": "456183bbea8228ecb0e0249d6efb3bf6ff31c7d8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDU2MTgzYmJlYTgyMjhlY2IwZTAyNDlkNmVmYjNiZjZmZjMxYzdkOA==", "commit": {"author": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2000-07-19T08:04:38Z"}, "committer": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2000-07-19T08:04:38Z"}, "message": "Internal consistency checks.....\n\n\n2000-07-19  Benjamin Kosnik  <bkoz@milou.soma.redhat.com>\n\n\tInternal consistency checks.....\n\t* bits/ios_base.h: Change _M_locale_ios to _M_ios_locale.\n\t* src/ios.cc: Same.\n\n\t* bits/basic_ios.h: Change _M_fctype_ios to _M_ios_fctype.\n\t* bits/basic_ios.tcc: Same.\n\n\t* bits/std_streambuf.h: Change _M_locale_buf to _M_buf_locale.\n\tChange _M_fctype_buf to _M_buf_fctype.\n\t* bits/fstream.tcc: Same.\n\n\t* bits/std_streambuf.h: Change _M_buf_bump to _M_out_cur_move.\n\tChange _M_locale_set to _M_buf_locale_init.\n\t* bits/streambuf.tcc: Same.\n\t* bits/sstream.tcc: Same.\n\t* bits/fstream.tcc: Same.\n\n\t* bits/std_streambuf.h: Make typedefs consistent.\n\t(_M_buf_bump): Be more careful with input sequence.\n\n\t* bits/std_sstream.h: Same.\n\t* bits/std_fstream.h: Same.\n\nFrom-SVN: r35129", "tree": {"sha": "06498064abb5d64d9a604d7d79e8f77926c0d81a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/06498064abb5d64d9a604d7d79e8f77926c0d81a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/456183bbea8228ecb0e0249d6efb3bf6ff31c7d8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/456183bbea8228ecb0e0249d6efb3bf6ff31c7d8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/456183bbea8228ecb0e0249d6efb3bf6ff31c7d8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/456183bbea8228ecb0e0249d6efb3bf6ff31c7d8/comments", "author": null, "committer": null, "parents": [{"sha": "622c0bfebd6321928f522b5fdc888537bd8eeaa5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/622c0bfebd6321928f522b5fdc888537bd8eeaa5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/622c0bfebd6321928f522b5fdc888537bd8eeaa5"}], "stats": {"total": 259, "additions": 143, "deletions": 116}, "files": [{"sha": "4dd8eaeb3bfae64d06232f0098d944c99f2f3c67", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 26, "deletions": 1, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/456183bbea8228ecb0e0249d6efb3bf6ff31c7d8/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/456183bbea8228ecb0e0249d6efb3bf6ff31c7d8/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=456183bbea8228ecb0e0249d6efb3bf6ff31c7d8", "patch": "@@ -1,4 +1,29 @@\n-2000-07-18  Benjamin Kosnik  <bkoz@soma.redhat.com>\n+2000-07-19  Benjamin Kosnik  <bkoz@milou.soma.redhat.com>\n+\n+\tInternal consistency checks.....\n+\t* bits/ios_base.h: Change _M_locale_ios to _M_ios_locale.\n+\t* src/ios.cc: Same.\n+\t\n+\t* bits/basic_ios.h: Change _M_fctype_ios to _M_ios_fctype.\n+\t* bits/basic_ios.tcc: Same.\n+\t\n+\t* bits/std_streambuf.h: Change _M_locale_buf to _M_buf_locale.\n+\tChange _M_fctype_buf to _M_buf_fctype.\n+\t* bits/fstream.tcc: Same.\n+\n+\t* bits/std_streambuf.h: Change _M_buf_bump to _M_out_cur_move.\n+\tChange _M_locale_set to _M_buf_locale_init.\n+\t* bits/streambuf.tcc: Same.\n+\t* bits/sstream.tcc: Same.\n+\t* bits/fstream.tcc: Same.\n+\n+\t* bits/std_streambuf.h: Make typedefs consistent.\n+\t(_M_buf_bump): Be more careful with input sequence.\n+\n+\t* bits/std_sstream.h: Same.\n+\t* bits/std_fstream.h: Same.\n+\n+2000-07-18  Benjamin Kosnik  <bkoz@purist.soma.redhat.com>\n \n \t* acinclude.m4: Tweaks.\n \t* config/c_io_libio.cc: Tweaks."}, {"sha": "7cac68b74c29006fa092221c55b93e524fb025fc", "filename": "libstdc++-v3/bits/basic_ios.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/456183bbea8228ecb0e0249d6efb3bf6ff31c7d8/libstdc%2B%2B-v3%2Fbits%2Fbasic_ios.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/456183bbea8228ecb0e0249d6efb3bf6ff31c7d8/libstdc%2B%2B-v3%2Fbits%2Fbasic_ios.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fbits%2Fbasic_ios.h?ref=456183bbea8228ecb0e0249d6efb3bf6ff31c7d8", "patch": "@@ -66,7 +66,7 @@ namespace std {\n       iostate \t\t\t\t_M_streambuf_state;\n \n       // Cached use_facet<ctype>, which is based on the current locale info.\n-      const __ctype_type*\t\t_M_fctype_ios;      \n+      const __ctype_type*\t\t_M_ios_fctype;      \n       // From ostream.\n       const __numput_type* \t\t_M_fnumput;\n       // From istream.\n@@ -76,7 +76,7 @@ namespace std {\n \n       inline const __ctype_type*\t\n       _M_get_fctype_ios(void)\n-      { return _M_fctype_ios; }\n+      { return _M_ios_fctype; }\n \n       inline const __numget_type* \n       _M_get_fnumget(void)"}, {"sha": "54d5efd19bc8277c08c2fc222de12512250620a0", "filename": "libstdc++-v3/bits/basic_ios.tcc", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/456183bbea8228ecb0e0249d6efb3bf6ff31c7d8/libstdc%2B%2B-v3%2Fbits%2Fbasic_ios.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/456183bbea8228ecb0e0249d6efb3bf6ff31c7d8/libstdc%2B%2B-v3%2Fbits%2Fbasic_ios.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fbits%2Fbasic_ios.tcc?ref=456183bbea8228ecb0e0249d6efb3bf6ff31c7d8", "patch": "@@ -91,12 +91,12 @@ namespace std {\n   template<typename _CharT, typename _Traits>\n     char\n     basic_ios<_CharT, _Traits>::narrow(char_type __c, char __dfault) const\n-    { return _M_fctype_ios->narrow(__c, __dfault); }\n+    { return _M_ios_fctype->narrow(__c, __dfault); }\n \n   template<typename _CharT, typename _Traits>\n     _CharT\n     basic_ios<_CharT, _Traits>::widen(char __c) const\n-    { return _M_fctype_ios->widen(__c); }\n+    { return _M_ios_fctype->widen(__c); }\n \n   // Locales:\n   template<typename _CharT, typename _Traits>\n@@ -105,7 +105,7 @@ namespace std {\n     {\n       locale __old(this->getloc());\n       ios_base::imbue(__loc);\n-      _M_fctype_ios = &use_facet<__ctype_type>(__loc);\n+      _M_ios_fctype = &use_facet<__ctype_type>(__loc);\n       _M_fnumput = &use_facet<__numput_type>(__loc); \n       _M_fnumget = &use_facet<__numget_type>(__loc); \n       if (this->rdbuf() != 0)\n@@ -120,7 +120,7 @@ namespace std {\n       // NB: This may be called more than once on the same object.\n       ios_base::_M_init();\n       locale __loc = this->getloc();\n-      _M_fctype_ios = &use_facet<__ctype_type>(__loc);\n+      _M_ios_fctype = &use_facet<__ctype_type>(__loc);\n       // Should be filled in by ostream and istream, respectively.\n       _M_fnumput = &use_facet<__numput_type>(__loc); \n       _M_fnumget = &use_facet<__numget_type>(__loc); "}, {"sha": "556c110bbe0cb5f630ebd591fa42b4a6ac26cc89", "filename": "libstdc++-v3/bits/fstream.tcc", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/456183bbea8228ecb0e0249d6efb3bf6ff31c7d8/libstdc%2B%2B-v3%2Fbits%2Ffstream.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/456183bbea8228ecb0e0249d6efb3bf6ff31c7d8/libstdc%2B%2B-v3%2Fbits%2Ffstream.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fbits%2Ffstream.tcc?ref=456183bbea8228ecb0e0249d6efb3bf6ff31c7d8", "patch": "@@ -329,7 +329,7 @@ namespace std\n \t  if (!__testpos)\n \t    {\n \t      *_M_out_cur = traits_type::to_char_type(__c);\n-\t      _M_buf_bump(1);\n+\t      _M_out_cur_move(1);\n \t      __retval = traits_type::not_eof(__c);\n \t    }\n \t  else \n@@ -535,14 +535,14 @@ namespace std\n       bool __testbeg = gptr() == eback() && pptr() == pbase();\n       bool __teststate = _M_fcvt->encoding() == -1;\n       \n-      _M_locale_set = true;\n-      if (__testbeg && !__teststate && _M_locale_buf != __loc)\n+      _M_buf_locale_init = true;\n+      if (__testbeg && !__teststate && _M_buf_locale != __loc)\n \t{\n \t  // XXX Will need to save these older values.\n-\t  _M_locale_buf = __loc;\n-\t  _M_fcvt = &use_facet<__codecvt_type>(_M_locale_buf);\n+\t  _M_buf_locale = __loc;\n+\t  _M_fcvt = &use_facet<__codecvt_type>(_M_buf_locale);\n \t  // XXX Necessary?\n-\t  _M_fctype_buf = &use_facet<__ctype_type>(_M_locale_buf); \n+\t  _M_buf_fctype = &use_facet<__ctype_type>(_M_buf_locale); \n \t}\n       // NB this may require the reconversion of previously\n       // converted chars. This in turn may cause the reconstruction"}, {"sha": "f7b8ca9191c513c52d5f68c78985f101faaf7ee3", "filename": "libstdc++-v3/bits/ios_base.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/456183bbea8228ecb0e0249d6efb3bf6ff31c7d8/libstdc%2B%2B-v3%2Fbits%2Fios_base.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/456183bbea8228ecb0e0249d6efb3bf6ff31c7d8/libstdc%2B%2B-v3%2Fbits%2Fios_base.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fbits%2Fios_base.h?ref=456183bbea8228ecb0e0249d6efb3bf6ff31c7d8", "patch": "@@ -276,7 +276,7 @@ namespace std {\n     _M_grow_words(int __index);\n \n     // Members for locale and locale caching.\n-    locale \t\t_M_locale_ios;\n+    locale \t\t_M_ios_locale;\n \n     void \n     _M_init();\n@@ -367,7 +367,7 @@ namespace std {\n     imbue(const locale& __loc);\n \n     inline locale \n-    getloc() const { return _M_locale_ios; }\n+    getloc() const { return _M_ios_locale; }\n \n     // Storage:\n     static int "}, {"sha": "e87e6d1f9fe394f3aa7284e3b31ca8e04f4b3db7", "filename": "libstdc++-v3/bits/sstream.tcc", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/456183bbea8228ecb0e0249d6efb3bf6ff31c7d8/libstdc%2B%2B-v3%2Fbits%2Fsstream.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/456183bbea8228ecb0e0249d6efb3bf6ff31c7d8/libstdc%2B%2B-v3%2Fbits%2Fsstream.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fbits%2Fsstream.tcc?ref=456183bbea8228ecb0e0249d6efb3bf6ff31c7d8", "patch": "@@ -102,7 +102,7 @@ namespace std {\n \t\t  _M_really_sync(_M_in_cur - _M_in_beg, \n \t\t\t\t _M_out_cur - _M_out_beg);\n \t\t  *_M_out_cur = traits_type::to_char_type(__c);\n-\t\t  _M_buf_bump(1);\n+\t\t  _M_out_cur_move(1);\n \t\t  __retval = __c;\n \t\t}\n \t    }\n@@ -163,7 +163,7 @@ namespace std {\n \t  if (__testout\n \t      && __newoffo + __off >= 0 && __endo - __beg >= __newoffo + __off)\n \t    {\n-\t      _M_buf_bump(__newoffo + __off - (_M_out_cur - __beg));\n+\t      _M_out_cur_move(__newoffo + __off - (_M_out_cur - __beg));\n \t      __retval = pos_type(__newoffo);\n \t    }\n \t}\n@@ -199,7 +199,7 @@ namespace std {\n \t  if (__testin)\n \t    _M_in_cur = _M_in_beg + __pos;\n \t  if (__testout)\n-\t    _M_buf_bump((__pos) - (_M_out_cur - __beg));\n+\t    _M_out_cur_move((__pos) - (_M_out_cur - __beg));\n \t  __retval = pos_type(off_type(__pos));\n \t}\n       "}, {"sha": "045bb60b0926a8112a588648b1c13bae5ef8fcab", "filename": "libstdc++-v3/bits/std_fstream.h", "status": "modified", "additions": 36, "deletions": 37, "changes": 73, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/456183bbea8228ecb0e0249d6efb3bf6ff31c7d8/libstdc%2B%2B-v3%2Fbits%2Fstd_fstream.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/456183bbea8228ecb0e0249d6efb3bf6ff31c7d8/libstdc%2B%2B-v3%2Fbits%2Fstd_fstream.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fbits%2Fstd_fstream.h?ref=456183bbea8228ecb0e0249d6efb3bf6ff31c7d8", "patch": "@@ -47,20 +47,19 @@ namespace std {\n     {\n     public:\n       // Types:\n-      typedef _CharT                     \t       \t  char_type;\n-      typedef _Traits                    \t\t  traits_type;\n-      typedef typename _Traits::int_type \t\t  int_type;\n-      typedef typename _Traits::pos_type \t\t  pos_type;\n-      typedef typename _Traits::off_type \t\t  off_type;\n-\n+      typedef _CharT                     \t        char_type;\n+      typedef _Traits                    \t        traits_type;\n+      typedef typename traits_type::int_type \t\tint_type;\n+      typedef typename traits_type::pos_type \t\tpos_type;\n+      typedef typename traits_type::off_type \t\toff_type;\n \n       // Non-standard Types:\n-      typedef basic_streambuf<_CharT, _Traits> \t\t  __streambuf_type;\n-      typedef basic_filebuf<_CharT, _Traits>\t\t  __filebuf_type;\n-      typedef __basic_file\t\t\t\t  __file_type;\n-      typedef typename _Traits::state_type                __state_type;\n-      typedef codecvt<_CharT, char, __state_type>         __codecvt_type;\n-      typedef typename __codecvt_type::result \t\t  __res_type;\n+      typedef basic_streambuf<char_type, traits_type>  \t__streambuf_type;\n+      typedef basic_filebuf<char_type, traits_type>     __filebuf_type;\n+      typedef __basic_file\t\t\t        __file_type;\n+      typedef typename traits_type::state_type          __state_type;\n+      typedef codecvt<char_type, char, __state_type>    __codecvt_type;\n+      typedef typename __codecvt_type::result \t        __res_type;\n       \n       friend ios_base; // For sync_with_stdio.\n \n@@ -197,15 +196,15 @@ namespace std {\n     {\n     public:\n       // Types:\n-      typedef _CharT \t\t\t\tchar_type;\n-      typedef typename _Traits::int_type \tint_type;\n-      typedef typename _Traits::pos_type \tpos_type;\n-      typedef typename _Traits::off_type \toff_type;\n-      typedef _Traits \t\t\t\ttraits_type;\n+      typedef _CharT \t\t\t\t\tchar_type;\n+      typedef _Traits \t\t\t\t\ttraits_type;\n+      typedef typename traits_type::int_type \t\tint_type;\n+      typedef typename traits_type::pos_type \t\tpos_type;\n+      typedef typename traits_type::off_type \t\toff_type;\n \n       // Non-standard types:\n-      typedef basic_filebuf<_CharT, _Traits> \t__filebuf_type;\n-      typedef basic_istream<_CharT, _Traits>\t__istream_type;\n+      typedef basic_filebuf<char_type, traits_type> \t__filebuf_type;\n+      typedef basic_istream<char_type, traits_type>\t__istream_type;\n     \n       // Constructors/Destructors:\n       basic_ifstream()\n@@ -251,17 +250,17 @@ namespace std {\n     class basic_ofstream : public basic_ostream<_CharT,_Traits>\n     {\n     public:\n-       // Types:\n-      typedef _CharT \t\t\t\tchar_type;\n-      typedef typename _Traits::int_type \tint_type;\n-      typedef typename _Traits::pos_type \tpos_type;\n-      typedef typename _Traits::off_type \toff_type;\n-      typedef _Traits \t\t\t\ttraits_type;\n+      // Types:\n+      typedef _CharT \t\t\t\t\tchar_type;\n+      typedef _Traits \t\t\t\t\ttraits_type;\n+      typedef typename traits_type::int_type \t\tint_type;\n+      typedef typename traits_type::pos_type \t\tpos_type;\n+      typedef typename traits_type::off_type \t\toff_type;\n \n       // Non-standard types:\n-      typedef basic_filebuf<_CharT, _Traits> \t__filebuf_type;\n-      typedef basic_ostream<_CharT, _Traits>\t__ostream_type;\n-     \n+      typedef basic_filebuf<char_type, traits_type> \t__filebuf_type;\n+      typedef basic_ostream<char_type, traits_type>\t__ostream_type;\n+      \n       // Constructors:\n       basic_ofstream()\n       : __ostream_type(new __filebuf_type())\n@@ -312,17 +311,17 @@ namespace std {\n     class basic_fstream : public basic_iostream<_CharT, _Traits>\n     {\n     public:\n-       // Types:\n-      typedef _CharT \t\t\t\tchar_type;\n-      typedef typename _Traits::int_type \tint_type;\n-      typedef typename _Traits::pos_type \tpos_type;\n-      typedef typename _Traits::off_type \toff_type;\n-      typedef _Traits \t\t\t\ttraits_type;\n+      // Types:\n+      typedef _CharT \t\t\t\t\tchar_type;\n+      typedef _Traits \t\t\t\t\ttraits_type;\n+      typedef typename traits_type::int_type \t\tint_type;\n+      typedef typename traits_type::pos_type \t\tpos_type;\n+      typedef typename traits_type::off_type \t\toff_type;\n \n       // Non-standard types:\n-      typedef basic_filebuf<_CharT, _Traits> \t__filebuf_type;\n-      typedef basic_ios<_CharT, _Traits>\t__ios_type;\n-      typedef basic_iostream<_CharT, _Traits>\t__iostream_type;\n+      typedef basic_filebuf<char_type, traits_type> \t__filebuf_type;\n+      typedef basic_ios<char_type, traits_type>\t\t__ios_type;\n+      typedef basic_iostream<char_type, traits_type>\t__iostream_type;\n \n       // Constructors/destructor:\n       basic_fstream()"}, {"sha": "4394dc90306e66234628a4138ff2ffb38ca1dd35", "filename": "libstdc++-v3/bits/std_sstream.h", "status": "modified", "additions": 30, "deletions": 27, "changes": 57, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/456183bbea8228ecb0e0249d6efb3bf6ff31c7d8/libstdc%2B%2B-v3%2Fbits%2Fstd_sstream.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/456183bbea8228ecb0e0249d6efb3bf6ff31c7d8/libstdc%2B%2B-v3%2Fbits%2Fstd_sstream.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fbits%2Fstd_sstream.h?ref=456183bbea8228ecb0e0249d6efb3bf6ff31c7d8", "patch": "@@ -45,13 +45,14 @@ namespace std {\n     public:\n       // Types:\n       typedef _CharT \t\t\t\t\tchar_type;\n-      typedef typename _Traits::int_type \t\tint_type;\n-      typedef typename _Traits::pos_type \t\tpos_type;\n-      typedef typename _Traits::off_type \t\toff_type;\n-      typedef _Traits                    \t\ttraits_type;\n-      // Non-standard types:\n-      typedef basic_streambuf<_CharT, _Traits> \t\t__streambuf_type;\n-      typedef basic_string<_CharT, _Traits, _Alloc> \t__string_type;\n+      typedef _Traits \t\t\t\t\ttraits_type;\n+      typedef typename traits_type::int_type \t\tint_type;\n+      typedef typename traits_type::pos_type \t\tpos_type;\n+      typedef typename traits_type::off_type \t\toff_type;\n+\n+      // Non-standard Types:\n+      typedef basic_streambuf<char_type, traits_type>  \t__streambuf_type;\n+      typedef basic_string<char_type, _Traits, _Alloc> \t__string_type;\n       typedef typename __string_type::size_type\t\t__size_type;\n \n     private:\n@@ -192,16 +193,16 @@ namespace std {\n     {\n     public:\n       // Types:\n-      typedef _CharT char_type;\n-      typedef typename _Traits::int_type \t\tint_type;\n-      typedef typename _Traits::pos_type \t\tpos_type;\n-      typedef typename _Traits::off_type \t\toff_type;\n-      typedef _Traits                    \t\ttraits_type;\n+      typedef _CharT \t\t\t\t\tchar_type;\n+      typedef _Traits \t\t\t\t\ttraits_type;\n+      typedef typename traits_type::int_type \t\tint_type;\n+      typedef typename traits_type::pos_type \t\tpos_type;\n+      typedef typename traits_type::off_type \t\toff_type;\n \n       // Non-standard types:\n       typedef basic_string<_CharT, _Traits, _Alloc> \t__string_type;\n       typedef basic_stringbuf<_CharT, _Traits, _Alloc> \t__stringbuf_type;\n-      typedef basic_istream<_CharT, _Traits>\t\t__istream_type;\n+      typedef basic_istream<char_type, traits_type>\t__istream_type;\n \n       // Constructors:\n       explicit \n@@ -245,15 +246,16 @@ namespace std {\n     {\n     public:\n       // Types:\n-      typedef _CharT char_type;\n-      typedef typename _Traits::int_type int_type;\n-      typedef typename _Traits::pos_type pos_type;\n-      typedef typename _Traits::off_type off_type;\n-      typedef _Traits                    traits_type;\n+      typedef _CharT \t\t\t\t\tchar_type;\n+      typedef _Traits \t\t\t\t\ttraits_type;\n+      typedef typename traits_type::int_type \t\tint_type;\n+      typedef typename traits_type::pos_type \t\tpos_type;\n+      typedef typename traits_type::off_type \t\toff_type;\n+\n       // Non-standard types:\n       typedef basic_string<_CharT, _Traits, _Alloc> \t__string_type;\n       typedef basic_stringbuf<_CharT, _Traits, _Alloc> \t__stringbuf_type;\n-      typedef basic_ostream<_CharT, _Traits>\t\t__ostream_type;\n+      typedef basic_ostream<char_type, traits_type>\t__ostream_type;\n \n       // Constructors/destructor:\n       explicit \n@@ -296,16 +298,17 @@ namespace std {\n     class basic_stringstream : public basic_iostream<_CharT, _Traits>\n     {\n     public:\n-      // Types\n-      typedef _CharT char_type;\n-      typedef typename _Traits::int_type int_type;\n-      typedef typename _Traits::pos_type pos_type;\n-      typedef typename _Traits::off_type off_type;\n-      typedef _Traits                    traits_type;\n-       // Non-standard types:\n+      // Types:\n+      typedef _CharT \t\t\t\t\tchar_type;\n+      typedef _Traits \t\t\t\t\ttraits_type;\n+      typedef typename traits_type::int_type \t\tint_type;\n+      typedef typename traits_type::pos_type \t\tpos_type;\n+      typedef typename traits_type::off_type \t\toff_type;\n+\n+      // Non-standard Types:\n       typedef basic_string<_CharT, _Traits, _Alloc> \t__string_type;\n       typedef basic_stringbuf<_CharT, _Traits, _Alloc> \t__stringbuf_type;\n-      typedef basic_iostream<_CharT, _Traits>\t\t__iostream_type;\n+      typedef basic_iostream<char_type, traits_type>\t__iostream_type;\n      \n       // Constructors/destructors\n       explicit "}, {"sha": "23bdd5cca8dc7d5019124f8e184a839b215b9c45", "filename": "libstdc++-v3/bits/std_streambuf.h", "status": "modified", "additions": 29, "deletions": 29, "changes": 58, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/456183bbea8228ecb0e0249d6efb3bf6ff31c7d8/libstdc%2B%2B-v3%2Fbits%2Fstd_streambuf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/456183bbea8228ecb0e0249d6efb3bf6ff31c7d8/libstdc%2B%2B-v3%2Fbits%2Fstd_streambuf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fbits%2Fstd_streambuf.h?ref=456183bbea8228ecb0e0249d6efb3bf6ff31c7d8", "patch": "@@ -55,14 +55,14 @@ namespace std {\n     public:\n       // Types:\n       typedef _CharT \t\t\t\t\tchar_type;\n-      typedef typename _Traits::int_type \t\tint_type;\n-      typedef typename _Traits::pos_type \t\tpos_type;\n-      typedef typename _Traits::off_type \t\toff_type;\n       typedef _Traits \t\t\t\t\ttraits_type;\n+      typedef typename traits_type::int_type \t\tint_type;\n+      typedef typename traits_type::pos_type \t\tpos_type;\n+      typedef typename traits_type::off_type \t\toff_type;\n \n       // Non-standard Types:\n-      typedef ctype<_CharT>           \t\t\t__ctype_type;\n-      typedef basic_streambuf<_CharT, _Traits> \t\t__streambuf_type;\n+      typedef ctype<char_type>           \t\t__ctype_type;\n+      typedef basic_streambuf<char_type, traits_type>  \t__streambuf_type;\n       \n       friend class basic_ios<char_type, traits_type>;\n       friend class basic_istream<char_type, traits_type>;\n@@ -71,9 +71,8 @@ namespace std {\n       friend class ostreambuf_iterator<char_type, traits_type>;\n \n       friend streamsize\n-      _S_copy_streambufs<>(basic_ios<_CharT, _Traits>& __ios,\n-\t\t\t basic_streambuf<_CharT, _Traits>* __sbin,\n-\t\t\t basic_streambuf<_CharT, _Traits>* __sbout);\n+      _S_copy_streambufs<>(basic_ios<char_type, traits_type>& __ios,\n+\t\t\t   __streambuf_type* __sbin,__streambuf_type* __sbout);\n       \n     protected:\n \n@@ -110,13 +109,13 @@ namespace std {\n       ios_base::openmode \t_M_mode;\t\n \n       // Current locale setting.\n-      locale \t\t\t_M_locale_buf;\t\n+      locale \t\t\t_M_buf_locale;\t\n \n       // True iff locale is initialized.\n-      bool \t\t\t_M_locale_set;\n+      bool \t\t\t_M_buf_locale_init;\n \n       // Cached use_facet<ctype>, which is based on the current locale info.\n-      const __ctype_type*\t_M_fctype_buf;      \n+      const __ctype_type*\t_M_buf_fctype;      \n \n       // Correctly sets the _M_out_cur pointer, and bumps the\n       // appropriate _M_*_end pointers as well. Necessary for the\n@@ -127,23 +126,24 @@ namespace std {\n       // the same range:\n       // _M_buf <= _M_*_ <= _M_buf + _M_buf_size\n       void \n-      _M_buf_bump(off_type __n) // argument needs to be +-\n+      _M_out_cur_move(off_type __n) // argument needs to be +-\n       {\n \tbool __testin = _M_mode & ios_base::in;\n-\tbool __testout = _M_mode & ios_base::out;\n+\n \t_M_out_cur += __n;\n-\tif (_M_buf_unified && __testin)\n-\t  _M_in_cur = _M_out_cur;\n+\tif (__testin && _M_buf_unified)\n+\t  _M_in_cur += __n;\n \tif (_M_out_cur > _M_out_end)\n \t  {\n \t    _M_out_end = _M_out_cur;\n-\t    if (__testin && __testout && _M_out_end > _M_in_end)\n-\t      _M_in_end = _M_out_cur;\n+\t    // NB: in | out buffers drag the _M_in_end pointer along...\n+\t    if (__testin)\n+\t      _M_in_end += __n;\n \t  }\n       }\n \n       // These three functions are used to clarify internal buffer\n-      // maintance. After an overflow, or after a seekoff call that\n+      // maintenance. After an overflow, or after a seekoff call that\n       // started at beg or end, or possibly when the stream becomes\n       // unbuffered, and a myrid other obscure corner cases, the\n       // internal buffer does not truly reflect the contents of the\n@@ -193,8 +193,8 @@ namespace std {\n \t_M_buf_size = 0;\n \t_M_buf_size_opt = 0;\n \t_M_mode = ios_base::openmode(0);\n-\t_M_fctype_buf = NULL;\n-\t_M_locale_set = false;\n+\t_M_buf_fctype = NULL;\n+\t_M_buf_locale_init = false;\n       }\n \n       // Locales:\n@@ -209,8 +209,8 @@ namespace std {\n       locale   \n       getloc() const\n       {\n-\tif (_M_locale_set)\n-\t  return _M_locale_buf; \n+\tif (_M_buf_locale_init)\n+\t  return _M_buf_locale; \n \telse \n \t  return locale();\n       } \n@@ -292,10 +292,10 @@ namespace std {\n \t_M_buf_size_opt(static_cast<int_type>(BUFSIZ * sizeof(char_type))),\n \t_M_buf_unified(false), _M_in_cur(0), _M_in_beg(0), _M_in_end(0), \n \t_M_out_cur(0), _M_out_beg(0), _M_out_end(0), \n-\t_M_mode(ios_base::openmode(0)), _M_locale_buf(locale()), \n-\t_M_locale_set(false) \n+\t_M_mode(ios_base::openmode(0)), _M_buf_locale(locale()), \n+\t_M_buf_locale_init(false) \n \n-      { _M_fctype_buf =  &use_facet<__ctype_type>(this->getloc()); }\n+      { _M_buf_fctype =  &use_facet<__ctype_type>(this->getloc()); }\n \n       // Get area:\n       char_type* \n@@ -353,11 +353,11 @@ namespace std {\n       virtual void \n       imbue(const locale& __loc) \n       { \n-\t_M_locale_set = true;\n-\tif (_M_locale_buf != __loc)\n+\t_M_buf_locale_init = true;\n+\tif (_M_buf_locale != __loc)\n \t {\n-\t   _M_locale_buf = __loc;\n-\t   _M_fctype_buf = &use_facet<__ctype_type>(_M_locale_buf); \n+\t   _M_buf_locale = __loc;\n+\t   _M_buf_fctype = &use_facet<__ctype_type>(_M_buf_locale); \n \t }\t\n       }\n "}, {"sha": "aca0a20994cf4d5cfc137a0a5dd90edf6ec61a4c", "filename": "libstdc++-v3/bits/streambuf.tcc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/456183bbea8228ecb0e0249d6efb3bf6ff31c7d8/libstdc%2B%2B-v3%2Fbits%2Fstreambuf.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/456183bbea8228ecb0e0249d6efb3bf6ff31c7d8/libstdc%2B%2B-v3%2Fbits%2Fstreambuf.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fbits%2Fstreambuf.tcc?ref=456183bbea8228ecb0e0249d6efb3bf6ff31c7d8", "patch": "@@ -108,7 +108,7 @@ namespace std {\n       if (_M_out_cur && _M_out_cur < _M_out_beg + _M_buf_size)\n \t{\n \t  *_M_out_cur = __c;\n-\t  _M_buf_bump(1);\n+\t  _M_out_cur_move(1);\n \t  __retval = traits_type::to_int_type(__c);\n \t}\n       else\n@@ -198,7 +198,7 @@ namespace std {\n \t\t  traits_type::copy(_M_out_cur, __s, __len);\n \t\t  __retval += __len;\n \t\t  __s += __len;\n-\t\t  _M_buf_bump(__len);\n+\t\t  _M_out_cur_move(__len);\n \t\t}\n \t    }\n \t}"}, {"sha": "d8b46f0739ebcfd63ce76078129c352e8520a3f9", "filename": "libstdc++-v3/src/ios.cc", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/456183bbea8228ecb0e0249d6efb3bf6ff31c7d8/libstdc%2B%2B-v3%2Fsrc%2Fios.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/456183bbea8228ecb0e0249d6efb3bf6ff31c7d8/libstdc%2B%2B-v3%2Fsrc%2Fios.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fios.cc?ref=456183bbea8228ecb0e0249d6efb3bf6ff31c7d8", "patch": "@@ -201,16 +201,16 @@ namespace std {\n     _M_callbacks = 0;\n     _M_words = 0;\n     _M_word_limit = 0;\n-    _M_locale_ios = locale();\n+    _M_ios_locale = locale();\n     // No init needed for _M_word_array or _M_dummy.\n   }  \n   \n   // 27.4.2.3  ios_base locale functions\n   locale\n   ios_base::imbue(const locale& __loc)\n   {\n-    locale __old = _M_locale_ios;\n-    _M_locale_ios = __loc;\n+    locale __old = _M_ios_locale;\n+    _M_ios_locale = __loc;\n     // Make sure there's a callback for the format caches so they will be\n     // marked dirty.\n     _Format_cache<char>::_S_get(*this);"}]}