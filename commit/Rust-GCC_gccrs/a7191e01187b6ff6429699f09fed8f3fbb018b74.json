{"sha": "a7191e01187b6ff6429699f09fed8f3fbb018b74", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTcxOTFlMDExODdiNmZmNjQyOTY5OWYwOWZlZDhmM2ZiYjAxOGI3NA==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2019-07-23T08:13:26Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2019-07-23T08:13:26Z"}, "message": "[Ada] Eliminate redundant overflow checks for conversions from fixed-point\n\nThis eliminates redundant overflow checks that are generated for\nconversions from fixed-point to integer types when range checks are also\nenabled (which is the default), as the former checks are subsumed into\nthe latter checks.\n\nNo functional changes.\n\n2019-07-23  Eric Botcazou  <ebotcazou@adacore.com>\n\ngcc/ada/\n\n\t* checks.adb (Activate_Overflow_Check): Remove redundant\n\targument.\n\t* exp_ch4.adb (Discrete_Range_Check): Reset the overflow flag.\n\t(Expand_N_Type_Conversion): Do not reset it here.\n\nFrom-SVN: r273724", "tree": {"sha": "932336e21fd305ec8e1da336789d58030323270d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/932336e21fd305ec8e1da336789d58030323270d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a7191e01187b6ff6429699f09fed8f3fbb018b74", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a7191e01187b6ff6429699f09fed8f3fbb018b74", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a7191e01187b6ff6429699f09fed8f3fbb018b74", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a7191e01187b6ff6429699f09fed8f3fbb018b74/comments", "author": null, "committer": null, "parents": [{"sha": "f9534f4bd63c9f4be7816f0f9bd8a5feeded5821", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f9534f4bd63c9f4be7816f0f9bd8a5feeded5821", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f9534f4bd63c9f4be7816f0f9bd8a5feeded5821"}], "stats": {"total": 19, "additions": 13, "deletions": 6}, "files": [{"sha": "786949565d031d4ee952a92f55d69ba1591f1ec9", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7191e01187b6ff6429699f09fed8f3fbb018b74/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7191e01187b6ff6429699f09fed8f3fbb018b74/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=a7191e01187b6ff6429699f09fed8f3fbb018b74", "patch": "@@ -1,3 +1,10 @@\n+2019-07-23  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* checks.adb (Activate_Overflow_Check): Remove redundant\n+\targument.\n+\t* exp_ch4.adb (Discrete_Range_Check): Reset the overflow flag.\n+\t(Expand_N_Type_Conversion): Do not reset it here.\n+\n 2019-07-23  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* repinfo.adb (List_Component_Layout): Pass Decimal to UI_Write."}, {"sha": "2eff274e7d009077619d00411c876d5a3d51e056", "filename": "gcc/ada/checks.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7191e01187b6ff6429699f09fed8f3fbb018b74/gcc%2Fada%2Fchecks.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7191e01187b6ff6429699f09fed8f3fbb018b74/gcc%2Fada%2Fchecks.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fchecks.adb?ref=a7191e01187b6ff6429699f09fed8f3fbb018b74", "patch": "@@ -435,7 +435,7 @@ package body Checks is\n \n       --  Fall through for cases where we do set the flag\n \n-      Set_Do_Overflow_Check (N, True);\n+      Set_Do_Overflow_Check (N);\n       Possible_Local_Raise (N, Standard_Constraint_Error);\n    end Activate_Overflow_Check;\n "}, {"sha": "2af54a7d50bca084602d3fb71ebe731b06f643d7", "filename": "gcc/ada/exp_ch4.adb", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7191e01187b6ff6429699f09fed8f3fbb018b74/gcc%2Fada%2Fexp_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7191e01187b6ff6429699f09fed8f3fbb018b74/gcc%2Fada%2Fexp_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch4.adb?ref=a7191e01187b6ff6429699f09fed8f3fbb018b74", "patch": "@@ -11000,6 +11000,11 @@ package body Exp_Ch4 is\n             Rewrite (Expr, Unchecked_Convert_To (Ityp, Expr));\n          end if;\n \n+         --  Reset overflow flag, since the range check will include\n+         --  dealing with possible overflow, and generate the check.\n+\n+         Set_Do_Overflow_Check (N, False);\n+\n          Generate_Range_Check (Expr, Target_Type, CE_Range_Check_Failed);\n       end Discrete_Range_Check;\n \n@@ -12096,11 +12101,6 @@ package body Exp_Ch4 is\n                       or else (Is_Fixed_Point_Type (Etype (Expression (N)))\n                                 and then Conversion_OK (N)))\n          then\n-            --  Reset overflow flag, since the range check will include\n-            --  dealing with possible overflow, and generate the check.\n-\n-            Set_Do_Overflow_Check (N, False);\n-\n             --  If Address is either a source type or target type,\n             --  suppress range check to avoid typing anomalies when\n             --  it is a visible integer type."}]}