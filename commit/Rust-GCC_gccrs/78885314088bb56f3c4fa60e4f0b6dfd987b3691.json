{"sha": "78885314088bb56f3c4fa60e4f0b6dfd987b3691", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Nzg4ODUzMTQwODhiYjU2ZjNjNGZhNjBlNGYwYjZkZmQ5ODdiMzY5MQ==", "commit": {"author": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2016-05-18T19:15:22Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2016-05-18T19:15:22Z"}, "message": "re PR target/71145 (Alpha: Error: No lda !gpdisp!278 was found)\n\n\tPR target/71145\n\t* config/alpha/alpha.md (trap): Add (use (reg:DI 29)).\n\t(*exception_receiver_1): Return \"#\" for TARGET_EXPLICIT_RELOCS.\n\nFrom-SVN: r236423", "tree": {"sha": "c6e2b46d25a075ad0fc85ba2b9a1ca0c2ae45c97", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c6e2b46d25a075ad0fc85ba2b9a1ca0c2ae45c97"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/78885314088bb56f3c4fa60e4f0b6dfd987b3691", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/78885314088bb56f3c4fa60e4f0b6dfd987b3691", "html_url": "https://github.com/Rust-GCC/gccrs/commit/78885314088bb56f3c4fa60e4f0b6dfd987b3691", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/78885314088bb56f3c4fa60e4f0b6dfd987b3691/comments", "author": null, "committer": null, "parents": [{"sha": "8f74423d5b0f6a9508a0be50a6de291913bb0baf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8f74423d5b0f6a9508a0be50a6de291913bb0baf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8f74423d5b0f6a9508a0be50a6de291913bb0baf"}], "stats": {"total": 47, "additions": 27, "deletions": 20}, "files": [{"sha": "4d261f7872d8613528c1cf88fe4e6f1f2f251d25", "filename": "gcc/ChangeLog", "status": "modified", "additions": 24, "deletions": 18, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/78885314088bb56f3c4fa60e4f0b6dfd987b3691/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/78885314088bb56f3c4fa60e4f0b6dfd987b3691/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=78885314088bb56f3c4fa60e4f0b6dfd987b3691", "patch": "@@ -1,3 +1,9 @@\n+2016-05-18  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\tPR target/71145\n+\t* config/alpha/alpha.md (trap): Add (use (reg:DI 29)).\n+\t(*exception_receiver_1): Return \"#\" for TARGET_EXPLICIT_RELOCS.\n+\n 2016-05-18  Martin Jambor  <mjambor@suse.cz>\n \n \tPR ipa/69708\n@@ -61,8 +67,7 @@\n \tloaded via XXSPLTIB.\n \t(all_ones_constant): New predicate for vector constant with all\n \t1's set.\n-\t(splat_input_operand): Add support for ISA 3.0 word splat\n-\toperations.\n+\t(splat_input_operand): Add support for ISA 3.0 word splat operations.\n \t* config/rs6000/rs6000.c (xxspltib_constant_p): New function to\n \treturn if a constant can be loaded with the ISA 3.0 XXSPLTIB\n \tinstruction and possibly with a sign extension.\n@@ -106,7 +111,7 @@\n \t(vsx_movti_64bit): Fold movti into normal vector moves.\n \t(vsx_movti_32bit): Likewise.\n \t(vsx_splat_<mode>, V4SI/V4SF modes): Add support for ISA 3.0 word\n-\tspat instructions.\n+\tsplat instructions.\n \t(vsx_splat_v4si_internal): Likewise.\n \t(vsx_splat_v4sf_internal): Likewise.\n \t(vector fusion peepholes): Use VSX_M instead of VSX_M2.\n@@ -219,7 +224,7 @@\n \n 2016-05-18  Kirill Yukhin  <kirill.yukhin@intel.com>\n \n-        * gcc/config/i386/sse.md (define_insn \"*andnot<mode>3\"): Extend static\n+\t* gcc/config/i386/sse.md (define_insn \"*andnot<mode>3\"): Extend static\n \tarray to 128 chars.\n \t(define_insn \"*andnottf3\"): Ditto.\n \t(define_insn \"*<code><mode>3\"/any_logic): Ditto.\n@@ -235,7 +240,7 @@\n 2016-05-18  Petr Murzin  <petr.murzin@intel.com>\n \t    Kirill Yukhin  <kirill.yukhin@intel.com>\n \n-        * config/i386/sse.md (define_insn \"srcp14<mode>\"): Use proper operand\n+\t* config/i386/sse.md (define_insn \"srcp14<mode>\"): Use proper operand\n \tmodifiers.\n \t(define_insn \"rsqrt14<mode>\"): Ditto.\n \t(define_insn \"<mask_codefor>avx512dq_cvtps2qqv2di<mask_name>\"): Ditto.\n@@ -288,7 +293,8 @@\n \n 2016-05-17  Kugan Vivekanandarajah  <kuganv@linaro.org>\n \n-\t* config/aarch64/aarch64.c (all_extensions): Removed unused static variable.\n+\t* config/aarch64/aarch64.c (all_extensions): Removed unused\n+\tstatic variable.\n \n 2016-05-17  Nathan Sidwell  <nathan@acm.org>\n \n@@ -363,8 +369,8 @@\n \n 2016-05-17  Jiong Wang  <jiong.wang@arm.com>\n \n-\t* config/aarch64/aarch64-simd.md (*aarch64_mul3_elt_to_128df): Extend to\n-\tall supported modes.  Rename to \"*aarch64_mul3_elt_from_dup\".\n+\t* config/aarch64/aarch64-simd.md (*aarch64_mul3_elt_to_128df): Extend\n+\tto all supported modes.  Rename to \"*aarch64_mul3_elt_from_dup\".\n \n 2016-05-17  Jiong Wang  <jiong.wang@arm.com>\n \n@@ -381,7 +387,7 @@\n 2016-05-17  Gerald Pfeifer  <gerald@pfeifer.com>\n \n \t* wide-int.h: Change fixed_wide_int_storage from class to struct.\n-\t\n+\n 2016-05-17  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/71132\n@@ -422,7 +428,7 @@\n \n 2016-05-16  Wilco Dijkstra  <wdijkstr@arm.com>\n \n-        * doc/invoke.texi (AArch64 Options): Various updates.\n+\t* doc/invoke.texi (AArch64 Options): Various updates.\n \n 2016-05-16  Jan Hubicka  <hubicka@ucw.cz>\n \n@@ -717,11 +723,11 @@\n \n 2016-05-13  Ramana Radhakrishnan  <ramana.radhakrishnan@arm.com>\n \n-        PR target/53440\n-        * config/arm/arm.c (arm32_output_mi_thunk): New.\n-        (arm_output_mi_thunk): Rename to arm_thumb1_mi_thunk. Rework\n-        to split Thumb1 vs TARGET_32BIT functionality.\n-        (arm_thumb1_mi_thunk): New.\n+\tPR target/53440\n+\t* config/arm/arm.c (arm32_output_mi_thunk): New.\n+\t(arm_output_mi_thunk): Rename to arm_thumb1_mi_thunk. Rework\n+\tto split Thumb1 vs TARGET_32BIT functionality.\n+\t(arm_thumb1_mi_thunk): New.\n \n 2016-05-13  Ramana Radhakrishnan  <ramana.radhakrishnan@arm.com>\n \n@@ -1258,9 +1264,9 @@\n \n 2016-05-04  Aaron Sawdey  <acsawdey@linux.vnet.ibm.com>\n \n-        * config/rs6000/rs6000.c (rs6000_reassociation_width): Add\n-        function for TARGET_SCHED_REASSOCIATION_WIDTH to enable\n-        parallel reassociation for power8 and forward.\n+\t* config/rs6000/rs6000.c (rs6000_reassociation_width): Add\n+\tfunction for TARGET_SCHED_REASSOCIATION_WIDTH to enable\n+\tparallel reassociation for power8 and forward.\n \n 2016-05-09  Uros Bizjak  <ubizjak@gmail.com>\n "}, {"sha": "3e4594bf4c6476f7ba781d5ef1a4f7ba401f5aee", "filename": "gcc/config/alpha/alpha.md", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/78885314088bb56f3c4fa60e4f0b6dfd987b3691/gcc%2Fconfig%2Falpha%2Falpha.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/78885314088bb56f3c4fa60e4f0b6dfd987b3691/gcc%2Fconfig%2Falpha%2Falpha.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Falpha.md?ref=78885314088bb56f3c4fa60e4f0b6dfd987b3691", "patch": "@@ -3738,7 +3738,8 @@\n \n ;; BUGCHK is documented common to OSF/1 and VMS PALcode.\n (define_insn \"trap\"\n-  [(trap_if (const_int 1) (const_int 0))]\n+  [(trap_if (const_int 1) (const_int 0))\n+   (use (reg:DI 29))]\n   \"\"\n   \"call_pal 0x81\"\n   [(set_attr \"type\" \"callpal\")])\n@@ -5157,7 +5158,7 @@\n   \"TARGET_ABI_OSF\"\n {\n   if (TARGET_EXPLICIT_RELOCS)\n-    return \"ldah $29,0($26)\\t\\t!gpdisp!%*\\;lda $29,0($29)\\t\\t!gpdisp!%*\";\n+    return \"#\";\n   else\n     return \"ldgp $29,0($26)\";\n }"}]}