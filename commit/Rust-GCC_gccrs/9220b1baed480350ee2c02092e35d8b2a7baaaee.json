{"sha": "9220b1baed480350ee2c02092e35d8b2a7baaaee", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTIyMGIxYmFlZDQ4MDM1MGVlMmMwMjA5MmUzNWQ4YjJhN2JhYWFlZQ==", "commit": {"author": {"name": "Jeff Sturm", "email": "jsturm@one-point.com", "date": "2003-09-28T13:23:12Z"}, "committer": {"name": "Jeff Sturm", "email": "jsturm@gcc.gnu.org", "date": "2003-09-28T13:23:12Z"}, "message": "decl.c (java_optimize_inline, [...]): Remove.\n\n* decl.c (java_optimize_inline, dump_function): Remove.\n* java-tree.h (java_optimize_inline): Remove declaration.\n* jcf-parse.c (java_parse_file): Assume flag_unit_at_a_time is set.\n* parse.y (source_end_java_method, java_expand_classes):\nLikewise.  Remove dead code.\n\nFrom-SVN: r71882", "tree": {"sha": "8830d9a6c367999a8683b27ca593208cfa16fe46", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8830d9a6c367999a8683b27ca593208cfa16fe46"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9220b1baed480350ee2c02092e35d8b2a7baaaee", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9220b1baed480350ee2c02092e35d8b2a7baaaee", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9220b1baed480350ee2c02092e35d8b2a7baaaee", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9220b1baed480350ee2c02092e35d8b2a7baaaee/comments", "author": null, "committer": null, "parents": [{"sha": "9442862280e806d61af78837bfe50b4a68848570", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9442862280e806d61af78837bfe50b4a68848570", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9442862280e806d61af78837bfe50b4a68848570"}], "stats": {"total": 71, "additions": 18, "deletions": 53}, "files": [{"sha": "93eb1c2d1d18685b68ca5aea49efda6ef66e76a2", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9220b1baed480350ee2c02092e35d8b2a7baaaee/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9220b1baed480350ee2c02092e35d8b2a7baaaee/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=9220b1baed480350ee2c02092e35d8b2a7baaaee", "patch": "@@ -1,3 +1,11 @@\n+2003-09-28  Jeff Sturm  <jsturm@one-point.com>\n+\n+\t* decl.c (java_optimize_inline, dump_function): Remove.\n+\t* java-tree.h (java_optimize_inline): Remove declaration.\n+\t* jcf-parse.c (java_parse_file): Assume flag_unit_at_a_time is set.\n+\t* parse.y (source_end_java_method, java_expand_classes):\n+\tLikewise.  Remove dead code.\n+\n 2003-09-27  Roger Sayle  <roger@eyesopen.com>\n \n \t* lang.c (java_init_options): Set flag_evaluation_order."}, {"sha": "074a093198408d2a6d3da20934a9a0ec3ac810c3", "filename": "gcc/java/decl.c", "status": "modified", "additions": 0, "deletions": 28, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9220b1baed480350ee2c02092e35d8b2a7baaaee/gcc%2Fjava%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9220b1baed480350ee2c02092e35d8b2a7baaaee/gcc%2Fjava%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fdecl.c?ref=9220b1baed480350ee2c02092e35d8b2a7baaaee", "patch": "@@ -57,7 +57,6 @@ static struct binding_level *make_binding_level (void);\n static tree create_primitive_vtable (const char *);\n static tree check_local_named_variable (tree, tree, int, int *);\n static tree check_local_unnamed_variable (tree, tree, tree);\n-static void dump_function (enum tree_dump_index, tree);\n \n /* Name of the Cloneable class.  */\n tree java_lang_cloneable_identifier_node;\n@@ -1865,33 +1864,6 @@ java_expand_body (tree fndecl)\n   current_function_decl = NULL_TREE;\n }\n \n-/* Dump FUNCTION_DECL FN as tree dump PHASE. */\n-\n-static void\n-dump_function (enum tree_dump_index phase, tree fn)\n-{\n-  FILE *stream;\n-  int flags;\n-\n-  stream = dump_begin (phase, &flags);\n-  if (stream)\n-    {\n-      dump_node (fn, TDF_SLIM | flags, stream);\n-      dump_end (phase, stream);\n-    }\n-}\n- \n-void java_optimize_inline (tree fndecl)\n-{\n-  if (flag_inline_trees)\n-    {\n-      timevar_push (TV_INTEGRATION);\n-      optimize_inline_calls (fndecl);\n-      timevar_pop (TV_INTEGRATION);\n-      dump_function (TDI_inlined, fndecl);\n-    }\n-}\n-\n /* We pessimistically marked all methods and fields external until we\n    knew what set of classes we were planning to compile.  Now mark those\n    associated with CLASS to be generated locally as not external.  */"}, {"sha": "8f524284c486867d81b33d21e273f339303a5af8", "filename": "gcc/java/java-tree.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9220b1baed480350ee2c02092e35d8b2a7baaaee/gcc%2Fjava%2Fjava-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9220b1baed480350ee2c02092e35d8b2a7baaaee/gcc%2Fjava%2Fjava-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fjava-tree.h?ref=9220b1baed480350ee2c02092e35d8b2a7baaaee", "patch": "@@ -1281,7 +1281,6 @@ extern void append_gpp_mangled_name (const char *, int);\n extern void add_predefined_file (tree);\n extern int predefined_filename_p (tree);\n \n-extern void java_optimize_inline (tree);\n extern tree decl_constant_value (tree);\n \n extern void java_mark_class_local (tree);"}, {"sha": "9f4beb5b3a3cfebe01a28c39fd64627e9992c93e", "filename": "gcc/java/jcf-parse.c", "status": "modified", "additions": 5, "deletions": 6, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9220b1baed480350ee2c02092e35d8b2a7baaaee/gcc%2Fjava%2Fjcf-parse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9220b1baed480350ee2c02092e35d8b2a7baaaee/gcc%2Fjava%2Fjcf-parse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fjcf-parse.c?ref=9220b1baed480350ee2c02092e35d8b2a7baaaee", "patch": "@@ -1120,13 +1120,12 @@ java_parse_file (int set_yydebug ATTRIBUTE_UNUSED)\n   java_expand_classes ();\n   if (!java_report_errors () && !flag_syntax_only)\n     {\n-      if (flag_unit_at_a_time)\n-\t{\n-\t  cgraph_finalize_compilation_unit ();\n-\t  cgraph_optimize ();\n-\t  java_finish_classes ();\n-\t}\n+      /* Optimize and expand all classes compiled from source.  */\n+      cgraph_finalize_compilation_unit ();\n+      cgraph_optimize ();\n+      java_finish_classes ();\n \n+      /* Emit the .jcf section.  */\n       emit_register_classes ();\n       if (flag_indirect_dispatch)\n \temit_offset_symbol_table ();"}, {"sha": "3b38a1eb3bf6de35f891af8473bd1334a67af5c8", "filename": "gcc/java/parse.y", "status": "modified", "additions": 5, "deletions": 18, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9220b1baed480350ee2c02092e35d8b2a7baaaee/gcc%2Fjava%2Fparse.y", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9220b1baed480350ee2c02092e35d8b2a7baaaee/gcc%2Fjava%2Fparse.y", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fparse.y?ref=9220b1baed480350ee2c02092e35d8b2a7baaaee", "patch": "@@ -7484,20 +7484,11 @@ source_end_java_method (void)\n      patched.  Dump it to a file if the user requested it.  */\n   dump_java_tree (TDI_original, fndecl);\n \n-  /* In unit-at-a-time mode, don't expand the method yet.  */\n-  if (DECL_SAVED_TREE (fndecl) && flag_unit_at_a_time)\n-    {\n-      cgraph_finalize_function (fndecl, false);\n-      current_function_decl = NULL_TREE;\n-      java_parser_context_restore_global ();\n-      return;\n-    }\n-\n-  java_optimize_inline (fndecl);\n-\n-  /* Expand the function's body.  */\n-  java_expand_body (fndecl);\n+  /* Defer expanding the method until cgraph analysis is complete.  */\n+  if (DECL_SAVED_TREE (fndecl))\n+    cgraph_finalize_function (fndecl, false);\n \n+  current_function_decl = NULL_TREE;\n   java_parser_context_restore_global ();\n }\n \n@@ -9157,11 +9148,7 @@ java_expand_classes (void)\n \t  if (flag_emit_xref)\n \t    expand_xref (current_class);\n \t  else if (! flag_syntax_only)\n-\t    {\n-\t      java_expand_method_bodies (current_class);\n-\t      if (!flag_unit_at_a_time)\n-\t\tfinish_class ();\n-\t    }\n+\t    java_expand_method_bodies (current_class);\n \t}\n     }\n }"}]}