{"sha": "f51d8fd538681cd66791ac6e93d094651cde174d", "node_id": "C_kwDOANBUbNoAKGY1MWQ4ZmQ1Mzg2ODFjZDY2NzkxYWM2ZTkzZDA5NDY1MWNkZTE3NGQ", "commit": {"author": {"name": "Philip Herron", "email": "philip.herron@embecosm.com", "date": "2022-01-13T21:28:42Z"}, "committer": {"name": "Philip Herron", "email": "philip.herron@embecosm.com", "date": "2022-01-13T21:28:42Z"}, "message": "Add ArrayElemsType enum to differentiate between the types", "tree": {"sha": "82a14ffdc5daba7e019b448285bab710c513b64f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/82a14ffdc5daba7e019b448285bab710c513b64f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f51d8fd538681cd66791ac6e93d094651cde174d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f51d8fd538681cd66791ac6e93d094651cde174d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f51d8fd538681cd66791ac6e93d094651cde174d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f51d8fd538681cd66791ac6e93d094651cde174d/comments", "author": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "committer": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "03e56b5181506a4e6cdb9fe86c543a57840e54c3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/03e56b5181506a4e6cdb9fe86c543a57840e54c3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/03e56b5181506a4e6cdb9fe86c543a57840e54c3"}], "stats": {"total": 18, "additions": 18, "deletions": 0}, "files": [{"sha": "3a5b8974683ddc2baec4185624866798ed623309", "filename": "gcc/rust/hir/tree/rust-hir-expr.h", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f51d8fd538681cd66791ac6e93d094651cde174d/gcc%2Frust%2Fhir%2Ftree%2Frust-hir-expr.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f51d8fd538681cd66791ac6e93d094651cde174d/gcc%2Frust%2Fhir%2Ftree%2Frust-hir-expr.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fhir%2Ftree%2Frust-hir-expr.h?ref=f51d8fd538681cd66791ac6e93d094651cde174d", "patch": "@@ -816,6 +816,12 @@ class GroupedExpr : public ExprWithoutBlock\n class ArrayElems\n {\n public:\n+  enum ArrayExprType\n+  {\n+    VALUES,\n+    COPIED,\n+  };\n+\n   virtual ~ArrayElems () {}\n \n   // Unique pointer custom clone ArrayElems function\n@@ -828,6 +834,8 @@ class ArrayElems\n \n   virtual void accept_vis (HIRFullVisitor &vis) = 0;\n \n+  virtual ArrayExprType get_array_expr_type () const = 0;\n+\n protected:\n   // pure virtual clone implementation\n   virtual ArrayElems *clone_array_elems_impl () const = 0;\n@@ -875,6 +883,11 @@ class ArrayElemsValues : public ArrayElems\n \n   std::vector<std::unique_ptr<Expr> > &get_values () { return values; }\n \n+  ArrayElems::ArrayExprType get_array_expr_type () const override final\n+  {\n+    return ArrayElems::ArrayExprType::VALUES;\n+  }\n+\n protected:\n   ArrayElemsValues *clone_array_elems_impl () const override\n   {\n@@ -923,6 +936,11 @@ class ArrayElemsCopied : public ArrayElems\n \n   Expr *get_num_copies_expr () { return num_copies.get (); }\n \n+  ArrayElems::ArrayExprType get_array_expr_type () const override final\n+  {\n+    return ArrayElems::ArrayExprType::COPIED;\n+  }\n+\n protected:\n   ArrayElemsCopied *clone_array_elems_impl () const override\n   {"}]}