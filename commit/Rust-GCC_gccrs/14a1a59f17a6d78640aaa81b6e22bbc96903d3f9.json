{"sha": "14a1a59f17a6d78640aaa81b6e22bbc96903d3f9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTRhMWE1OWYxN2E2ZDc4NjQwYWFhODFiNmUyMmJiYzk2OTAzZDNmOQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2017-09-19T21:03:11Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2017-09-19T21:03:11Z"}, "message": "pr31146-2.C: Only do scan-tree-dump for c++14_down.\n\n\t* g++.dg/tree-ssa/pr31146-2.C: Only do scan-tree-dump for c++14_down.\n\t* g++.dg/tree-ssa/pr41428.C: Likewise.\n\t* g++.dg/expr/bool1.C: Only do dg-do compile instead of dg-do run for\n\tc++17 and up.\n\t* g++.dg/expr/bool3.C: Likewise.\n\t* g++.dg/expr/bitfield5.C: Likewise.\n\t* g++.old-deja/g++.jason/bool5.C: Likewise.\n\nFrom-SVN: r252985", "tree": {"sha": "668dc7e4d37a786dc42ef16fbf9f321f5eb9cf44", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/668dc7e4d37a786dc42ef16fbf9f321f5eb9cf44"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/14a1a59f17a6d78640aaa81b6e22bbc96903d3f9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/14a1a59f17a6d78640aaa81b6e22bbc96903d3f9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/14a1a59f17a6d78640aaa81b6e22bbc96903d3f9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/14a1a59f17a6d78640aaa81b6e22bbc96903d3f9/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "684ccf0e119368fb8eba11bfce9d2724bcfaef9f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/684ccf0e119368fb8eba11bfce9d2724bcfaef9f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/684ccf0e119368fb8eba11bfce9d2724bcfaef9f"}], "stats": {"total": 34, "additions": 26, "deletions": 8}, "files": [{"sha": "4362138d2ca1cd1cd0859f77993be09329080bde", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/14a1a59f17a6d78640aaa81b6e22bbc96903d3f9/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/14a1a59f17a6d78640aaa81b6e22bbc96903d3f9/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=14a1a59f17a6d78640aaa81b6e22bbc96903d3f9", "patch": "@@ -1,3 +1,13 @@\n+2017-09-19  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* g++.dg/tree-ssa/pr31146-2.C: Only do scan-tree-dump for c++14_down.\n+\t* g++.dg/tree-ssa/pr41428.C: Likewise.\n+\t* g++.dg/expr/bool1.C: Only do dg-do compile instead of dg-do run for\n+\tc++17 and up.\n+\t* g++.dg/expr/bool3.C: Likewise.\n+\t* g++.dg/expr/bitfield5.C: Likewise.\n+\t* g++.old-deja/g++.jason/bool5.C: Likewise.\n+\n 2017-09-18  Martin Sebor  <msebor@redhat.com>\n \n \tPR c/81854"}, {"sha": "1921b193d2182ab83e755a37e2a02fa79f62037b", "filename": "gcc/testsuite/g++.dg/expr/bitfield5.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/14a1a59f17a6d78640aaa81b6e22bbc96903d3f9/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fexpr%2Fbitfield5.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/14a1a59f17a6d78640aaa81b6e22bbc96903d3f9/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fexpr%2Fbitfield5.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fexpr%2Fbitfield5.C?ref=14a1a59f17a6d78640aaa81b6e22bbc96903d3f9", "patch": "@@ -1,5 +1,6 @@\n // PR c++/30274\n-// { dg-do run }\n+// { dg-do run { target c++14_down } }\n+// { dg-do compile { target c++17 } }\n \n struct S {\n   bool x : 4;"}, {"sha": "7b120e1773989228f9991afa0242c514b5fb6f9a", "filename": "gcc/testsuite/g++.dg/expr/bool1.C", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/14a1a59f17a6d78640aaa81b6e22bbc96903d3f9/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fexpr%2Fbool1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/14a1a59f17a6d78640aaa81b6e22bbc96903d3f9/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fexpr%2Fbool1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fexpr%2Fbool1.C?ref=14a1a59f17a6d78640aaa81b6e22bbc96903d3f9", "patch": "@@ -1,5 +1,6 @@\n-// { dg-do run }\n-// PR C++/29295\n+// PR c++/29295\n+// { dg-do run { target c++14_down } }\n+// { dg-do compile { target c++17 } }\n // make sure that a typedef for a bool will have the\n //  the same results as a bool itself.\n "}, {"sha": "373c202b800f37555daa723bb8d4f51dfc8848b8", "filename": "gcc/testsuite/g++.dg/expr/bool3.C", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/14a1a59f17a6d78640aaa81b6e22bbc96903d3f9/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fexpr%2Fbool3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/14a1a59f17a6d78640aaa81b6e22bbc96903d3f9/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fexpr%2Fbool3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fexpr%2Fbool3.C?ref=14a1a59f17a6d78640aaa81b6e22bbc96903d3f9", "patch": "@@ -1,5 +1,6 @@\n-// { dg-do run }\n-// PR C++/29295\n+// PR c++/29295\n+// { dg-do run { target c++14_down } }\n+// { dg-do compile { target c++17 } }\n // make sure that a typedef for a bool will have the\n //  the same results as a bool itself.\n "}, {"sha": "500d8b639ee7bdb0a752036bbe5bae8fa5fa6893", "filename": "gcc/testsuite/g++.dg/tree-ssa/pr31146-2.C", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/14a1a59f17a6d78640aaa81b6e22bbc96903d3f9/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-ssa%2Fpr31146-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/14a1a59f17a6d78640aaa81b6e22bbc96903d3f9/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-ssa%2Fpr31146-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-ssa%2Fpr31146-2.C?ref=14a1a59f17a6d78640aaa81b6e22bbc96903d3f9", "patch": "@@ -20,4 +20,6 @@ double foo (void)\n   return v.a[2];\n }\n \n-/* { dg-final { scan-tree-dump \"Replaced .* != 0B. with .1\" \"forwprop1\" } } */\n+/* -std=c++17 and above doesn't emit operator new () != NULL, so there is\n+   nothing to fold anymore.  */\n+/* { dg-final { scan-tree-dump \"Replaced .* != 0B. with .1\" \"forwprop1\" { target c++14_down } } } */"}, {"sha": "c0a5eb627be8da58d0d934d93cf84c72eda6b0f3", "filename": "gcc/testsuite/g++.dg/tree-ssa/pr41428.C", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/14a1a59f17a6d78640aaa81b6e22bbc96903d3f9/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-ssa%2Fpr41428.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/14a1a59f17a6d78640aaa81b6e22bbc96903d3f9/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-ssa%2Fpr41428.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-ssa%2Fpr41428.C?ref=14a1a59f17a6d78640aaa81b6e22bbc96903d3f9", "patch": "@@ -11,4 +11,6 @@ int foo(void)\n   return *(int *)&f;\n }\n \n-/* { dg-final { scan-tree-dump \"Folded into: if \\\\\\(1 != 0\\\\\\)\" \"ccp1\" } } */\n+/* -std=c++17 and above doesn't emit operator new () != NULL, so there is\n+   nothing to fold anymore.  */\n+/* { dg-final { scan-tree-dump \"Folded into: if \\\\\\(1 != 0\\\\\\)\" \"ccp1\" { target c++14_down } } } */"}, {"sha": "c64784bd426c41c237e6e6716ec2bdbefbc9e22b", "filename": "gcc/testsuite/g++.old-deja/g++.jason/bool5.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/14a1a59f17a6d78640aaa81b6e22bbc96903d3f9/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.jason%2Fbool5.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/14a1a59f17a6d78640aaa81b6e22bbc96903d3f9/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.jason%2Fbool5.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.jason%2Fbool5.C?ref=14a1a59f17a6d78640aaa81b6e22bbc96903d3f9", "patch": "@@ -1,4 +1,5 @@\n-// { dg-do run  }\n+// { dg-do run { target c++14_down } }\n+// { dg-do compile { target c++17 } }\n int main ()\n {\n   bool b = false;"}]}