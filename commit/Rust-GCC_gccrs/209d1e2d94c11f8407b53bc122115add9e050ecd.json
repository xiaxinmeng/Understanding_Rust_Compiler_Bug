{"sha": "209d1e2d94c11f8407b53bc122115add9e050ecd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjA5ZDFlMmQ5NGMxMWY4NDA3YjUzYmMxMjIxMTVhZGQ5ZTA1MGVjZA==", "commit": {"author": {"name": "Ilya Enkovich", "email": "ilya.enkovich@intel.com", "date": "2016-06-15T15:49:40Z"}, "committer": {"name": "Ilya Enkovich", "email": "ienkovich@gcc.gnu.org", "date": "2016-06-15T15:49:40Z"}, "message": "re PR middle-end/71529 ([CHKP] ICE in expand_expr_real_1)\n\ngcc/\n\n\tPR middle-end/71529\n\t* ipa-chkp.c (chkp_build_instrumented_fndecl): Fix\n\tDECL_CONTEXT for copied arguments.\n\ngcc/testsuite/\n\n\tPR middle-end/71529\n\t* gcc.target/i386/pr71529.C: New test.\n\nFrom-SVN: r237484", "tree": {"sha": "09fe21528636deac7694644506e1264b41c200ce", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/09fe21528636deac7694644506e1264b41c200ce"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/209d1e2d94c11f8407b53bc122115add9e050ecd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/209d1e2d94c11f8407b53bc122115add9e050ecd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/209d1e2d94c11f8407b53bc122115add9e050ecd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/209d1e2d94c11f8407b53bc122115add9e050ecd/comments", "author": {"login": "ienkovich", "id": 18308708, "node_id": "MDQ6VXNlcjE4MzA4NzA4", "avatar_url": "https://avatars.githubusercontent.com/u/18308708?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ienkovich", "html_url": "https://github.com/ienkovich", "followers_url": "https://api.github.com/users/ienkovich/followers", "following_url": "https://api.github.com/users/ienkovich/following{/other_user}", "gists_url": "https://api.github.com/users/ienkovich/gists{/gist_id}", "starred_url": "https://api.github.com/users/ienkovich/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ienkovich/subscriptions", "organizations_url": "https://api.github.com/users/ienkovich/orgs", "repos_url": "https://api.github.com/users/ienkovich/repos", "events_url": "https://api.github.com/users/ienkovich/events{/privacy}", "received_events_url": "https://api.github.com/users/ienkovich/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "8dc35712198be33bcd9c89f8718dbbf108ff8fb1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8dc35712198be33bcd9c89f8718dbbf108ff8fb1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8dc35712198be33bcd9c89f8718dbbf108ff8fb1"}], "stats": {"total": 41, "additions": 40, "deletions": 1}, "files": [{"sha": "2aa82f5a47a0a846259cfcfe6c0672f704a399a2", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/209d1e2d94c11f8407b53bc122115add9e050ecd/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/209d1e2d94c11f8407b53bc122115add9e050ecd/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=209d1e2d94c11f8407b53bc122115add9e050ecd", "patch": "@@ -1,3 +1,9 @@\n+2016-06-15  Ilya Enkovich  <ilya.enkovich@intel.com>\n+\n+\tPR middle-end/71529\n+\t* ipa-chkp.c (chkp_build_instrumented_fndecl): Fix\n+\tDECL_CONTEXT for copied arguments.\n+\n 2016-06-15  Alan Hayward  <alan.hayward@arm.com>\n \n \tPR tree-optimization/71483"}, {"sha": "86c48f14f64d8cc5326984048c8352575f7fb2eb", "filename": "gcc/ipa-chkp.c", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/209d1e2d94c11f8407b53bc122115add9e050ecd/gcc%2Fipa-chkp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/209d1e2d94c11f8407b53bc122115add9e050ecd/gcc%2Fipa-chkp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-chkp.c?ref=209d1e2d94c11f8407b53bc122115add9e050ecd", "patch": "@@ -207,7 +207,13 @@ chkp_build_instrumented_fndecl (tree fndecl)\n   /* For functions with body versioning will make a copy of arguments.\n      For functions with no body we need to do it here.  */\n   if (!gimple_has_body_p (fndecl))\n-    DECL_ARGUMENTS (new_decl) = copy_list (DECL_ARGUMENTS (fndecl));\n+    {\n+      tree arg;\n+\n+      DECL_ARGUMENTS (new_decl) = copy_list (DECL_ARGUMENTS (fndecl));\n+      for (arg = DECL_ARGUMENTS (new_decl); arg; arg = DECL_CHAIN (arg))\n+\tDECL_CONTEXT (arg) = new_decl;\n+    }\n \n   /* We are going to modify attributes list and therefore should\n      make own copy.  */"}, {"sha": "dbd8df829b56a137323e2a334c936eacc8895797", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/209d1e2d94c11f8407b53bc122115add9e050ecd/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/209d1e2d94c11f8407b53bc122115add9e050ecd/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=209d1e2d94c11f8407b53bc122115add9e050ecd", "patch": "@@ -1,3 +1,8 @@\n+2016-06-15  Ilya Enkovich  <ilya.enkovich@intel.com>\n+\n+\tPR middle-end/71529\n+\t* gcc.target/i386/pr71529.C: New test.\n+\n 2016-06-15  Alan Hayward  <alan.hayward@arm.com>\n \n \tPR tree-optimization/71483"}, {"sha": "3169101e1a75201fb53921611f1ea553ab674052", "filename": "gcc/testsuite/gcc.target/i386/pr71529.C", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/209d1e2d94c11f8407b53bc122115add9e050ecd/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr71529.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/209d1e2d94c11f8407b53bc122115add9e050ecd/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr71529.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr71529.C?ref=209d1e2d94c11f8407b53bc122115add9e050ecd", "patch": "@@ -0,0 +1,22 @@\n+/* PR71529 */\n+/* { dg-do compile { target { ! x32 } } } */\n+/* { dg-options \"-fcheck-pointer-bounds -mmpx -O2\" } */\n+\n+class c1\n+{\n+ public:\n+  virtual ~c1 ();\n+};\n+\n+class c2\n+{\n+ public:\n+  virtual ~c2 ();\n+};\n+\n+class c3 : c1, c2 { };\n+\n+int main (int, char **)\n+{\n+  c3 obj;\n+}"}]}