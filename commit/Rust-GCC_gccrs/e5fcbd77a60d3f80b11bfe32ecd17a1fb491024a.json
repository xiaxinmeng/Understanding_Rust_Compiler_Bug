{"sha": "e5fcbd77a60d3f80b11bfe32ecd17a1fb491024a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTVmY2JkNzdhNjBkM2Y4MGIxMWJmZTMyZWNkMTdhMWZiNDkxMDI0YQ==", "commit": {"author": {"name": "Michael Matz", "email": "matz@suse.de", "date": "2003-01-26T10:17:17Z"}, "committer": {"name": "Andreas Jaeger", "email": "aj@gcc.gnu.org", "date": "2003-01-26T10:17:17Z"}, "message": "Make-lang.in (treelang/parse.o-warn): Define as -Wno-error.\n\n2003-01-26  Michael Matz  <matz@suse.de>\n\n\t* Make-lang.in (treelang/parse.o-warn): Define as -Wno-error.\n\nFrom-SVN: r61838", "tree": {"sha": "67f4504426fe5d179ff167a460df06d42f7cbe24", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/67f4504426fe5d179ff167a460df06d42f7cbe24"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e5fcbd77a60d3f80b11bfe32ecd17a1fb491024a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e5fcbd77a60d3f80b11bfe32ecd17a1fb491024a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e5fcbd77a60d3f80b11bfe32ecd17a1fb491024a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e5fcbd77a60d3f80b11bfe32ecd17a1fb491024a/comments", "author": {"login": "susematz", "id": 4117296, "node_id": "MDQ6VXNlcjQxMTcyOTY=", "avatar_url": "https://avatars.githubusercontent.com/u/4117296?v=4", "gravatar_id": "", "url": "https://api.github.com/users/susematz", "html_url": "https://github.com/susematz", "followers_url": "https://api.github.com/users/susematz/followers", "following_url": "https://api.github.com/users/susematz/following{/other_user}", "gists_url": "https://api.github.com/users/susematz/gists{/gist_id}", "starred_url": "https://api.github.com/users/susematz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/susematz/subscriptions", "organizations_url": "https://api.github.com/users/susematz/orgs", "repos_url": "https://api.github.com/users/susematz/repos", "events_url": "https://api.github.com/users/susematz/events{/privacy}", "received_events_url": "https://api.github.com/users/susematz/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b44cf3d94beee1d42e5c2a9f62e2827260999a70", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b44cf3d94beee1d42e5c2a9f62e2827260999a70", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b44cf3d94beee1d42e5c2a9f62e2827260999a70"}], "stats": {"total": 30, "additions": 18, "deletions": 12}, "files": [{"sha": "fb130b48170a4e9b9eb0e037870270deba2df3c7", "filename": "gcc/treelang/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e5fcbd77a60d3f80b11bfe32ecd17a1fb491024a/gcc%2Ftreelang%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e5fcbd77a60d3f80b11bfe32ecd17a1fb491024a/gcc%2Ftreelang%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftreelang%2FChangeLog?ref=e5fcbd77a60d3f80b11bfe32ecd17a1fb491024a", "patch": "@@ -1,3 +1,7 @@\n+2003-01-26  Michael Matz  <matz@suse.de>\n+\n+\t* Make-lang.in (treelang/parse.o-warn): Define as -Wno-error.\n+\n 2003-01-14  Andreas Jaeger  <aj@suse.de>\n \n \t* Make-lang.in (treelang.install-info): Depend only on info files"}, {"sha": "6ac2c076aeea9ab8a23a2b0ccc11c15a919e515d", "filename": "gcc/treelang/Make-lang.in", "status": "modified", "additions": 14, "deletions": 12, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e5fcbd77a60d3f80b11bfe32ecd17a1fb491024a/gcc%2Ftreelang%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e5fcbd77a60d3f80b11bfe32ecd17a1fb491024a/gcc%2Ftreelang%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftreelang%2FMake-lang.in?ref=e5fcbd77a60d3f80b11bfe32ecd17a1fb491024a", "patch": "@@ -47,7 +47,7 @@ TREELANGSED = sed\n TREELANGSEDFLAGS = -n\n \n # back end compiler libraries etc\n-TREE_BE_LIBS = $(BACKEND) $(LIBIBERTY) $(INTLLIBS) $(LIBS) $(LIBDEPS) \n+TREE_BE_LIBS = $(BACKEND) $(LIBIBERTY) $(INTLLIBS) $(LIBS) $(LIBDEPS)\n GCC_EXTRAS = -B./ -B$(build_tooldir)/bin/ -isystem $(build_tooldir)/include\n \n # ./xgcc is the just built compiler. See GCC_FOR_TARGET in the GCC Makefile.in.\n@@ -65,6 +65,8 @@ TREE_EXES = tree1$(exeext)\n \n #no -Wtraditional warnings, allow long long\n treelang-warn = $(LOOSE_WARN) -pedantic -Wno-long-long -Wmissing-prototypes -Wmissing-declarations\n+# bison emits some unused static arrays (yytoknum)\n+treelang/parse.o-warn = -Wno-error\n \n #\f\n # Define the names for selecting treelang in LANGUAGES.\n@@ -78,7 +80,7 @@ treelang.done: tree1$(exeext)\n \n # no preprocessor\n \n-# core compiler \n+# core compiler\n tree1$(exeext): treelang/tree1.o treelang/treetree.o treelang/lex.o treelang/parse.o\\\n \t$(TREE_BE_LIBS) c-convert.o c-typeck.o c-common.o c-decl.o attribs.o\n \t$(CC) $(ALL_CFLAGS) $(LDFLAGS) -o $@ \\\n@@ -123,11 +125,11 @@ gt-treelang-tree1.h gtype-treelang.h : s-gtype; @true\n # Build hooks:\n \n treelang.all.build: treelang\n-treelang.all.cross: \n+treelang.all.cross:\n \t_error_not_here_yet - havent even thought about it - it may even work\n \n treelang.start.encap:\n-treelang.rest.encap: \n+treelang.rest.encap:\n \n .phony:treelang.info\n treelang.info: $(srcdir)/treelang/treelang.info\n@@ -156,13 +158,13 @@ treelang.generated-manpages:\n # Nothing to do here.\n treelang.install-normal: treelang.install.common\n \n-# Install \n+# Install\n .phony:treelang.install.common\n .phony:treelang.install\n \n treelang.install treelang.install.common treelang.install-common: treelang.install.common.done\n \n-treelang.install.common.done:  installdirs treelang.done \n+treelang.install.common.done:  installdirs treelang.done\n \tfor name in $(TREE_EXES); \\\n \tdo \\\n \t   if [ -f $$name ] ; then \\\n@@ -194,7 +196,7 @@ treelang.install-info: treelang.$(BUILD_INFO)\n \t  else : ; fi; \\\n \telse : ; fi\n \n-treelang.install-man: \n+treelang.install-man:\n \n treelang.uninstall:\n \tfor name in $(TREE_EXES); \\\n@@ -212,7 +214,7 @@ treelang.uninstall:\n # A lot of the ancillary files are deleted by the main makefile.\n # We just have to delete files specific to us.\n \n-treelang.mostlyclean: \n+treelang.mostlyclean:\n \tfor name in $(TREE_EXES); \\\n \tdo \\\n \t  echo deleting $$name; \\\n@@ -228,7 +230,7 @@ treelang.mostlyclean:\n treelang.clean: treelang.mostlyclean\n \n treelang.distclean: treelang.clean\n-\t-rm -f treelang/config.status \n+\t-rm -f treelang/config.status\n \t-rm -f treelang/*.output\n \n treelang.extraclean: treelang.distclean\n@@ -265,14 +267,14 @@ treelang.distdir:\n #\tnot here yet sorry not sure if this is needed or not???\n \n # test hook\n-# the other languages are hard coded in the main makefile.in - that seems to be wrong \n+# the other languages are hard coded in the main makefile.in - that seems to be wrong\n \n check-treelang: treelang.check\n \n TESTSUITEDIR = testsuite\n \n treelang.check: $(TESTSUITEDIR)/site.exp\n-\t-mkdir testsuite/treelang \n+\t-mkdir testsuite/treelang\n \n # these three files are empty and it seems diff has trouble generating\n # patch files for new empty files as required for cvs.\n@@ -294,7 +296,7 @@ treelang.check: $(TESTSUITEDIR)/site.exp\n \n # copy the output files from the current test to source ie say the new results are OK\n treelang.check.fix: force\n-\tsrcdir=`cd ${srcdir}; ${PWD}` ; export srcdir ; \n+\tsrcdir=`cd ${srcdir}; ${PWD}` ; export srcdir ;\n \t-cp testsuite/treelang/*.out* t\n \t-cp testsuite/treelang/*runpgm* t\n \t-rm -f t/*nofilename"}]}