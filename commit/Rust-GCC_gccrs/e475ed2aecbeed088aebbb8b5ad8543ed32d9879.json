{"sha": "e475ed2aecbeed088aebbb8b5ad8543ed32d9879", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTQ3NWVkMmFlY2JlZWQwODhhZWJiYjhiNWFkODU0M2VkMzJkOTg3OQ==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-02-22T23:46:44Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-02-22T23:46:44Z"}, "message": "(memory_address): Add missing \"else\".\n\nFrom-SVN: r9037", "tree": {"sha": "c4413f331fa1646db5cd5159f3a30b7d62e684a5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c4413f331fa1646db5cd5159f3a30b7d62e684a5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e475ed2aecbeed088aebbb8b5ad8543ed32d9879", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e475ed2aecbeed088aebbb8b5ad8543ed32d9879", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e475ed2aecbeed088aebbb8b5ad8543ed32d9879", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e475ed2aecbeed088aebbb8b5ad8543ed32d9879/comments", "author": null, "committer": null, "parents": [{"sha": "5bdc151289c62ce18bd013db9b7f730b37cf40f4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5bdc151289c62ce18bd013db9b7f730b37cf40f4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5bdc151289c62ce18bd013db9b7f730b37cf40f4"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "4d6aac85bc808a15603fb4549f5d186b3fda21a3", "filename": "gcc/explow.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e475ed2aecbeed088aebbb8b5ad8543ed32d9879/gcc%2Fexplow.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e475ed2aecbeed088aebbb8b5ad8543ed32d9879/gcc%2Fexplow.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexplow.c?ref=e475ed2aecbeed088aebbb8b5ad8543ed32d9879", "patch": "@@ -1,5 +1,5 @@\n /* Subroutines for manipulating rtx's in semantically interesting ways.\n-   Copyright (C) 1987, 1991, 1994 Free Software Foundation, Inc.\n+   Copyright (C) 1987, 1991, 1994, 1995 Free Software Foundation, Inc.\n \n This file is part of GNU CC.\n \n@@ -400,7 +400,7 @@ memory_address (mode, x)\n \t    }\n \t}\n \n-      if (GET_CODE (x) == MULT || GET_CODE (x) == MINUS)\n+      else if (GET_CODE (x) == MULT || GET_CODE (x) == MINUS)\n \tx = force_operand (x, NULL_RTX);\n \n       /* If we have a register that's an invalid address,"}]}