{"sha": "658231787c8855dac4230eb5a880abb10724b9a0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjU4MjMxNzg3Yzg4NTVkYWM0MjMwZWI1YTg4MGFiYjEwNzI0YjlhMA==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1993-10-14T04:05:32Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1993-10-14T04:05:32Z"}, "message": "(LINK_SPEC): Now OK to pass -O3 to linker.\n\n(ASM_OUTPUT_LOOP_ALIGN, ASM_OUTPUT_ALIGN_CODE): Work around bug in DEC\nassembler.\n\nFrom-SVN: r5788", "tree": {"sha": "8efbf91ad8d5f074720d6adad6d0d58ec7aa42a2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8efbf91ad8d5f074720d6adad6d0d58ec7aa42a2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/658231787c8855dac4230eb5a880abb10724b9a0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/658231787c8855dac4230eb5a880abb10724b9a0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/658231787c8855dac4230eb5a880abb10724b9a0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/658231787c8855dac4230eb5a880abb10724b9a0/comments", "author": null, "committer": null, "parents": [{"sha": "71d2371f87254f16bc67332e80a44d2104ba61e7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/71d2371f87254f16bc67332e80a44d2104ba61e7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/71d2371f87254f16bc67332e80a44d2104ba61e7"}], "stats": {"total": 17, "additions": 11, "deletions": 6}, "files": [{"sha": "e084894e4acbc161b7facbb9edb394779a7493c2", "filename": "gcc/config/alpha/alpha.h", "status": "modified", "additions": 11, "deletions": 6, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/658231787c8855dac4230eb5a880abb10724b9a0/gcc%2Fconfig%2Falpha%2Falpha.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/658231787c8855dac4230eb5a880abb10724b9a0/gcc%2Fconfig%2Falpha%2Falpha.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Falpha.h?ref=658231787c8855dac4230eb5a880abb10724b9a0", "patch": "@@ -49,11 +49,10 @@ the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n \n #define LIB_SPEC \"-lc\"\n \n-/* Pass \"-G 8\" to ld because Alpha's CC does.  Pass -O2 if we are optimizing,\n+/* Pass \"-G 8\" to ld because Alpha's CC does.  Pass -O3 if we are optimizing,\n    -O1 if we are not.  Pass -non_shared or -call_shared as appropriate.  */\n-/* Disable -O2 to ld; it seems to have problems.  */\n #define LINK_SPEC  \\\n-  \"-G 8 %{O*:-O1} %{!O*:-O1} %{static:-non_shared} %{!static:-call_shared}\"\n+  \"-G 8 %{O*:-O3} %{!O*:-O1} %{static:-non_shared} %{!static:-call_shared}\"\n \n /* Print subsidiary information on the compiler version in use.  */\n #define TARGET_VERSION\n@@ -222,17 +221,23 @@ extern int target_flags;\n /* A bitfield declared as `int' forces `int' alignment for the struct.  */\n #define PCC_BITFIELD_TYPE_MATTERS 1\n \n-/* Align loop starts for optimal branching.  */\n+/* Align loop starts for optimal branching.  \n+\n+   ??? Kludge this and the next macro for the moment by not doing anything if\n+   we don't optimize and also if we are writing ECOFF symbols to work around\n+   a bug in DEC's assembler. */\n \n #define ASM_OUTPUT_LOOP_ALIGN(FILE) \\\n-  ASM_OUTPUT_ALIGN (FILE, 5) \n+  if (optimize > 0 && write_symbols != SDB_DEBUG)  \\\n+    ASM_OUTPUT_ALIGN (FILE, 5)\n \n /* This is how to align an instruction for optimal branching.\n    On Alpha we'll get better performance by aligning on a quadword\n    boundary.  */\n \n #define ASM_OUTPUT_ALIGN_CODE(FILE)\t\\\n-  ASM_OUTPUT_ALIGN ((FILE), 4)\n+  if (optimize > 0 && write_symbols != SDB_DEBUG) \\\n+    ASM_OUTPUT_ALIGN ((FILE), 4)\n \n /* No data type wants to be aligned rounder than this.  */\n #define BIGGEST_ALIGNMENT 64"}]}