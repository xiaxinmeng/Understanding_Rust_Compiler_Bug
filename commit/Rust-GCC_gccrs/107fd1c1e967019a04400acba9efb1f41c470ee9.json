{"sha": "107fd1c1e967019a04400acba9efb1f41c470ee9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTA3ZmQxYzFlOTY3MDE5YTA0NDAwYWNiYTllZmIxZjQxYzQ3MGVlOQ==", "commit": {"author": {"name": "Joseph Myers", "email": "joseph@codesourcery.com", "date": "2011-04-11T18:46:05Z"}, "committer": {"name": "Joseph Myers", "email": "jsm28@gcc.gnu.org", "date": "2011-04-11T18:46:05Z"}, "message": "linux-elf.h (LINUX_DYNAMIC_LINKER): Rename to GNU_USER_DYNAMIC_LINKER.\n\n\t* config/alpha/linux-elf.h (LINUX_DYNAMIC_LINKER): Rename to\n\tGNU_USER_DYNAMIC_LINKER.\n\t* config/arm/linux-eabi.h (TARGET_OS_CPP_BUILTINS): Change\n\tLINUX_TARGET_OS_CPP_BUILTINS to GNU_USER_TARGET_OS_CPP_BUILTINS.\n\t* config/arm/linux-elf.h (LINUX_TARGET_LINK_SPEC): Change\n\tLINUX_DYNAMIC_LINKER to GNU_USER_DYNAMIC_LINKER.\n\t(TARGET_OS_CPP_BUILTINS): Change LINUX_TARGET_OS_CPP_BUILTINS to\n\tGNU_USER_TARGET_OS_CPP_BUILTINS.\n\t* config/bfin/linux.h (TARGET_OS_CPP_BUILTINS): Change\n\tLINUX_TARGET_OS_CPP_BUILTINS to GNU_USER_TARGET_OS_CPP_BUILTINS.\n\t* config/bfin/uclinux.h (TARGET_OS_CPP_BUILTINS): Change\n\tLINUX_TARGET_OS_CPP_BUILTINS to GNU_USER_TARGET_OS_CPP_BUILTINS.\n\t* config/cris/linux.h (CRIS_LINK_SUBTARGET_SPEC): Change\n\tLINUX_DYNAMIC_LINKER to GNU_USER_DYNAMIC_LINKER.\n\t(TARGET_OS_CPP_BUILTINS): Change LINUX_TARGET_OS_CPP_BUILTINS to\n\tGNU_USER_TARGET_OS_CPP_BUILTINS.\n\t* config/frv/linux.h (LINK_SPEC): Change LINUX_DYNAMIC_LINKER to\n\tGNU_USER_DYNAMIC_LINKER.\n\t* config/gnu.h (LINUX_TARGET_OS_CPP_BUILTINS): Rename to\n\tGNU_USER_TARGET_OS_CPP_BUILTINS.\n\t* config/i386/gnu-user.h (TARGET_OS_CPP_BUILTINS): Change\n\tLINUX_TARGET_OS_CPP_BUILTINS to GNU_USER_TARGET_OS_CPP_BUILTINS.\n\t* config/i386/gnu-user64.h (TARGET_OS_CPP_BUILTINS): Change\n\tLINUX_TARGET_OS_CPP_BUILTINS to GNU_USER_TARGET_OS_CPP_BUILTINS.\n\t* config/i386/linux.h (GNU_USER_DYNAMIC_LINKER): Remove.\n\t* config/i386/linux64.h (GNU_USER_DYNAMIC_LINKER32,\n\tGNU_USER_DYNAMIC_LINKER64): Remove.\n\t* config/ia64/linux.h (TARGET_OS_CPP_BUILTINS): Change\n\tLINUX_TARGET_OS_CPP_BUILTINS to GNU_USER_TARGET_OS_CPP_BUILTINS.\n\t(LINK_SPEC): Change LINUX_DYNAMIC_LINKER to\n\tGNU_USER_DYNAMIC_LINKER.\n\t* config/kfreebsd-gnu.h (LINUX_TARGET_OS_CPP_BUILTINS): Rename to\n\tGNU_USER_TARGET_OS_CPP_BUILTINS.\n\t* config/knetbsd-gnu.h (LINUX_TARGET_OS_CPP_BUILTINS): Rename to\n\tGNU_USER_TARGET_OS_CPP_BUILTINS.\n\t* config/kopensolaris-gnu.h (LINUX_TARGET_OS_CPP_BUILTINS): Rename\n\tto GNU_USER_TARGET_OS_CPP_BUILTINS.\n\t* config/linux.h (LINUX_TARGET_OS_CPP_BUILTINS): Rename to\n\tGNU_USER_TARGET_OS_CPP_BUILTINS.\n\t(LINUX_DYNAMIC_LINKER): Rename to GNU_USER_DYNAMIC_LINKER.\n\t(LINUX_DYNAMIC_LINKER32): Rename to GNU_USER_DYNAMIC_LINKER32.\n\t(LINUX_DYNAMIC_LINKER64): Rename to GNU_USER_DYNAMIC_LINKER64.\n\t* config/lm32/uclinux-elf.h (TARGET_OS_CPP_BUILTINS): Change\n\tLINUX_TARGET_OS_CPP_BUILTINS to GNU_USER_TARGET_OS_CPP_BUILTINS.\n\t* config/m32r/linux.h (LINK_SPEC): Change LINUX_DYNAMIC_LINKER to\n\tGNU_USER_DYNAMIC_LINKER.\n\t(TARGET_OS_CPP_BUILTINS): Change LINUX_TARGET_OS_CPP_BUILTINS to\n\tGNU_USER_TARGET_OS_CPP_BUILTINS.\n\t* config/m68k/linux.h (TARGET_OS_CPP_BUILTINS): Change\n\tLINUX_TARGET_OS_CPP_BUILTINS to GNU_USER_TARGET_OS_CPP_BUILTINS.\n\t(LINK_SPEC): Change LINUX_DYNAMIC_LINKER to\n\tGNU_USER_DYNAMIC_LINKER.\n\t* config/m68k/uclinux.h (TARGET_OS_CPP_BUILTINS): Change\n\tLINUX_TARGET_OS_CPP_BUILTINS to GNU_USER_TARGET_OS_CPP_BUILTINS.\n\t* config/mips/linux.h (TARGET_OS_CPP_BUILTINS): Change\n\tLINUX_TARGET_OS_CPP_BUILTINS to GNU_USER_TARGET_OS_CPP_BUILTINS.\n\t(LINK_SPEC): Change LINUX_DYNAMIC_LINKER to\n\tGNU_USER_DYNAMIC_LINKER.\n\t* config/mips/linux64.h (LINUX_DYNAMIC_LINKERN32): Rename to\n\tGNU_USER_DYNAMIC_LINKERN32.\n\t(LINK_SPEC): Change LINUX_DYNAMIC_LINKERN32 to\n\tGNU_USER_DYNAMIC_LINKERN32.  Change LINUX_DYNAMIC_LINKER64 to\n\tGNU_USER_DYNAMIC_LINKER64.  Change LINUX_DYNAMIC_LINKER32 to\n\tGNU_USER_DYNAMIC_LINKER32.\n\t* config/mn10300/linux.h (TARGET_OS_CPP_BUILTINS): Change\n\tLINUX_TARGET_OS_CPP_BUILTINS to GNU_USER_TARGET_OS_CPP_BUILTINS.\n\t(LINK_SPEC): Change LINUX_DYNAMIC_LINKER to\n\tGNU_USER_DYNAMIC_LINKER.\n\t* config/moxie/uclinux.h (TARGET_OS_CPP_BUILTINS): Change\n\tLINUX_TARGET_OS_CPP_BUILTINS to GNU_USER_TARGET_OS_CPP_BUILTINS.\n\t* config/pa/pa-linux.h (TARGET_OS_CPP_BUILTINS): Change\n\tLINUX_TARGET_OS_CPP_BUILTINS to GNU_USER_TARGET_OS_CPP_BUILTINS.\n\t(LINK_SPEC): Change LINUX_DYNAMIC_LINKER to\n\tGNU_USER_DYNAMIC_LINKER.\n\t* config/rs6000/linux64.h (LINUX_DYNAMIC_LINKER32): Rename to\n\tGNU_USER_DYNAMIC_LINKER32.\n\t(LINUX_DYNAMIC_LINKER64): Rename to GNU_USER_DYNAMIC_LINKER64.\n\t* config/rs6000/sysv4.h (LINUX_DYNAMIC_LINKER): Rename to\n\tGNU_USER_DYNAMIC_LINKER.\n\t* config/s390/linux.h (TARGET_OS_CPP_BUILTINS): Change\n\tLINUX_TARGET_OS_CPP_BUILTINS to GNU_USER_TARGET_OS_CPP_BUILTINS.\n\t(LINK_SPEC): Change LINUX_DYNAMIC_LINKER32 to\n\tGNU_USER_DYNAMIC_LINKER32.  Change LINUX_DYNAMIC_LINKER64 to\n\tGNU_USER_DYNAMIC_LINKER64.\n\t* config/sh/linux.h (TARGET_OS_CPP_BUILTINS): Change\n\tLINUX_TARGET_OS_CPP_BUILTINS to GNU_USER_TARGET_OS_CPP_BUILTINS.\n\t(SUBTARGET_LINK_SPEC): Change LINUX_DYNAMIC_LINKER to\n\tGNU_USER_DYNAMIC_LINKER.\n\t* config/sparc/linux.h (TARGET_OS_CPP_BUILTINS): Change\n\tLINUX_TARGET_OS_CPP_BUILTINS to GNU_USER_TARGET_OS_CPP_BUILTINS.\n\t(LINK_SPEC): Change LINUX_DYNAMIC_LINKER to\n\tGNU_USER_DYNAMIC_LINKER.\n\t* config/sparc/linux64.h (TARGET_OS_CPP_BUILTINS): Change\n\tLINUX_TARGET_OS_CPP_BUILTINS to GNU_USER_TARGET_OS_CPP_BUILTINS.\n\t(LINK_ARCH32_SPEC): Change LINUX_DYNAMIC_LINKER32 to\n\tGNU_USER_DYNAMIC_LINKER32.\n\t(LINK_ARCH64_SPEC): Change LINUX_DYNAMIC_LINKER64 to\n\tGNU_USER_DYNAMIC_LINKER64.\n\t(LINK_SPEC): Change LINUX_DYNAMIC_LINKER64 to\n\tGNU_USER_DYNAMIC_LINKER64.\n\t* config/vax/linux.h (TARGET_OS_CPP_BUILTINS): Change\n\tLINUX_TARGET_OS_CPP_BUILTINS to GNU_USER_TARGET_OS_CPP_BUILTINS.\n\t* config/xtensa/linux.h (TARGET_OS_CPP_BUILTINS): Change\n\tLINUX_TARGET_OS_CPP_BUILTINS to GNU_USER_TARGET_OS_CPP_BUILTINS.\n\t(LINK_SPEC): Change LINUX_DYNAMIC_LINKER to\n\tGNU_USER_DYNAMIC_LINKER.\n\nFrom-SVN: r172273", "tree": {"sha": "000ba34cf35da4f04cdc10ec2c17866c9b51500e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/000ba34cf35da4f04cdc10ec2c17866c9b51500e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/107fd1c1e967019a04400acba9efb1f41c470ee9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/107fd1c1e967019a04400acba9efb1f41c470ee9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/107fd1c1e967019a04400acba9efb1f41c470ee9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/107fd1c1e967019a04400acba9efb1f41c470ee9/comments", "author": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e24609cfc021fdc47145e83098dc67ae4fb781e6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e24609cfc021fdc47145e83098dc67ae4fb781e6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e24609cfc021fdc47145e83098dc67ae4fb781e6"}], "stats": {"total": 250, "additions": 177, "deletions": 73}, "files": [{"sha": "dc17dddd52f18829d09631fb17c6f62301a4e3d7", "filename": "gcc/ChangeLog", "status": "modified", "additions": 109, "deletions": 0, "changes": 109, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/107fd1c1e967019a04400acba9efb1f41c470ee9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/107fd1c1e967019a04400acba9efb1f41c470ee9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=107fd1c1e967019a04400acba9efb1f41c470ee9", "patch": "@@ -1,3 +1,112 @@\n+2011-04-11  Joseph Myers  <joseph@codesourcery.com>\n+\n+\t* config/alpha/linux-elf.h (LINUX_DYNAMIC_LINKER): Rename to\n+\tGNU_USER_DYNAMIC_LINKER.\n+\t* config/arm/linux-eabi.h (TARGET_OS_CPP_BUILTINS): Change\n+\tLINUX_TARGET_OS_CPP_BUILTINS to GNU_USER_TARGET_OS_CPP_BUILTINS.\n+\t* config/arm/linux-elf.h (LINUX_TARGET_LINK_SPEC): Change\n+\tLINUX_DYNAMIC_LINKER to GNU_USER_DYNAMIC_LINKER.\n+\t(TARGET_OS_CPP_BUILTINS): Change LINUX_TARGET_OS_CPP_BUILTINS to\n+\tGNU_USER_TARGET_OS_CPP_BUILTINS.\n+\t* config/bfin/linux.h (TARGET_OS_CPP_BUILTINS): Change\n+\tLINUX_TARGET_OS_CPP_BUILTINS to GNU_USER_TARGET_OS_CPP_BUILTINS.\n+\t* config/bfin/uclinux.h (TARGET_OS_CPP_BUILTINS): Change\n+\tLINUX_TARGET_OS_CPP_BUILTINS to GNU_USER_TARGET_OS_CPP_BUILTINS.\n+\t* config/cris/linux.h (CRIS_LINK_SUBTARGET_SPEC): Change\n+\tLINUX_DYNAMIC_LINKER to GNU_USER_DYNAMIC_LINKER.\n+\t(TARGET_OS_CPP_BUILTINS): Change LINUX_TARGET_OS_CPP_BUILTINS to\n+\tGNU_USER_TARGET_OS_CPP_BUILTINS.\n+\t* config/frv/linux.h (LINK_SPEC): Change LINUX_DYNAMIC_LINKER to\n+\tGNU_USER_DYNAMIC_LINKER.\n+\t* config/gnu.h (LINUX_TARGET_OS_CPP_BUILTINS): Rename to\n+\tGNU_USER_TARGET_OS_CPP_BUILTINS.\n+\t* config/i386/gnu-user.h (TARGET_OS_CPP_BUILTINS): Change\n+\tLINUX_TARGET_OS_CPP_BUILTINS to GNU_USER_TARGET_OS_CPP_BUILTINS.\n+\t* config/i386/gnu-user64.h (TARGET_OS_CPP_BUILTINS): Change\n+\tLINUX_TARGET_OS_CPP_BUILTINS to GNU_USER_TARGET_OS_CPP_BUILTINS.\n+\t* config/i386/linux.h (GNU_USER_DYNAMIC_LINKER): Remove.\n+\t* config/i386/linux64.h (GNU_USER_DYNAMIC_LINKER32,\n+\tGNU_USER_DYNAMIC_LINKER64): Remove.\n+\t* config/ia64/linux.h (TARGET_OS_CPP_BUILTINS): Change\n+\tLINUX_TARGET_OS_CPP_BUILTINS to GNU_USER_TARGET_OS_CPP_BUILTINS.\n+\t(LINK_SPEC): Change LINUX_DYNAMIC_LINKER to\n+\tGNU_USER_DYNAMIC_LINKER.\n+\t* config/kfreebsd-gnu.h (LINUX_TARGET_OS_CPP_BUILTINS): Rename to\n+\tGNU_USER_TARGET_OS_CPP_BUILTINS.\n+\t* config/knetbsd-gnu.h (LINUX_TARGET_OS_CPP_BUILTINS): Rename to\n+\tGNU_USER_TARGET_OS_CPP_BUILTINS.\n+\t* config/kopensolaris-gnu.h (LINUX_TARGET_OS_CPP_BUILTINS): Rename\n+\tto GNU_USER_TARGET_OS_CPP_BUILTINS.\n+\t* config/linux.h (LINUX_TARGET_OS_CPP_BUILTINS): Rename to\n+\tGNU_USER_TARGET_OS_CPP_BUILTINS.\n+\t(LINUX_DYNAMIC_LINKER): Rename to GNU_USER_DYNAMIC_LINKER.\n+\t(LINUX_DYNAMIC_LINKER32): Rename to GNU_USER_DYNAMIC_LINKER32.\n+\t(LINUX_DYNAMIC_LINKER64): Rename to GNU_USER_DYNAMIC_LINKER64.\n+\t* config/lm32/uclinux-elf.h (TARGET_OS_CPP_BUILTINS): Change\n+\tLINUX_TARGET_OS_CPP_BUILTINS to GNU_USER_TARGET_OS_CPP_BUILTINS.\n+\t* config/m32r/linux.h (LINK_SPEC): Change LINUX_DYNAMIC_LINKER to\n+\tGNU_USER_DYNAMIC_LINKER.\n+\t(TARGET_OS_CPP_BUILTINS): Change LINUX_TARGET_OS_CPP_BUILTINS to\n+\tGNU_USER_TARGET_OS_CPP_BUILTINS.\n+\t* config/m68k/linux.h (TARGET_OS_CPP_BUILTINS): Change\n+\tLINUX_TARGET_OS_CPP_BUILTINS to GNU_USER_TARGET_OS_CPP_BUILTINS.\n+\t(LINK_SPEC): Change LINUX_DYNAMIC_LINKER to\n+\tGNU_USER_DYNAMIC_LINKER.\n+\t* config/m68k/uclinux.h (TARGET_OS_CPP_BUILTINS): Change\n+\tLINUX_TARGET_OS_CPP_BUILTINS to GNU_USER_TARGET_OS_CPP_BUILTINS.\n+\t* config/mips/linux.h (TARGET_OS_CPP_BUILTINS): Change\n+\tLINUX_TARGET_OS_CPP_BUILTINS to GNU_USER_TARGET_OS_CPP_BUILTINS.\n+\t(LINK_SPEC): Change LINUX_DYNAMIC_LINKER to\n+\tGNU_USER_DYNAMIC_LINKER.\n+\t* config/mips/linux64.h (LINUX_DYNAMIC_LINKERN32): Rename to\n+\tGNU_USER_DYNAMIC_LINKERN32.\n+\t(LINK_SPEC): Change LINUX_DYNAMIC_LINKERN32 to\n+\tGNU_USER_DYNAMIC_LINKERN32.  Change LINUX_DYNAMIC_LINKER64 to\n+\tGNU_USER_DYNAMIC_LINKER64.  Change LINUX_DYNAMIC_LINKER32 to\n+\tGNU_USER_DYNAMIC_LINKER32.\n+\t* config/mn10300/linux.h (TARGET_OS_CPP_BUILTINS): Change\n+\tLINUX_TARGET_OS_CPP_BUILTINS to GNU_USER_TARGET_OS_CPP_BUILTINS.\n+\t(LINK_SPEC): Change LINUX_DYNAMIC_LINKER to\n+\tGNU_USER_DYNAMIC_LINKER.\n+\t* config/moxie/uclinux.h (TARGET_OS_CPP_BUILTINS): Change\n+\tLINUX_TARGET_OS_CPP_BUILTINS to GNU_USER_TARGET_OS_CPP_BUILTINS.\n+\t* config/pa/pa-linux.h (TARGET_OS_CPP_BUILTINS): Change\n+\tLINUX_TARGET_OS_CPP_BUILTINS to GNU_USER_TARGET_OS_CPP_BUILTINS.\n+\t(LINK_SPEC): Change LINUX_DYNAMIC_LINKER to\n+\tGNU_USER_DYNAMIC_LINKER.\n+\t* config/rs6000/linux64.h (LINUX_DYNAMIC_LINKER32): Rename to\n+\tGNU_USER_DYNAMIC_LINKER32.\n+\t(LINUX_DYNAMIC_LINKER64): Rename to GNU_USER_DYNAMIC_LINKER64.\n+\t* config/rs6000/sysv4.h (LINUX_DYNAMIC_LINKER): Rename to\n+\tGNU_USER_DYNAMIC_LINKER.\n+\t* config/s390/linux.h (TARGET_OS_CPP_BUILTINS): Change\n+\tLINUX_TARGET_OS_CPP_BUILTINS to GNU_USER_TARGET_OS_CPP_BUILTINS.\n+\t(LINK_SPEC): Change LINUX_DYNAMIC_LINKER32 to\n+\tGNU_USER_DYNAMIC_LINKER32.  Change LINUX_DYNAMIC_LINKER64 to\n+\tGNU_USER_DYNAMIC_LINKER64.\n+\t* config/sh/linux.h (TARGET_OS_CPP_BUILTINS): Change\n+\tLINUX_TARGET_OS_CPP_BUILTINS to GNU_USER_TARGET_OS_CPP_BUILTINS.\n+\t(SUBTARGET_LINK_SPEC): Change LINUX_DYNAMIC_LINKER to\n+\tGNU_USER_DYNAMIC_LINKER.\n+\t* config/sparc/linux.h (TARGET_OS_CPP_BUILTINS): Change\n+\tLINUX_TARGET_OS_CPP_BUILTINS to GNU_USER_TARGET_OS_CPP_BUILTINS.\n+\t(LINK_SPEC): Change LINUX_DYNAMIC_LINKER to\n+\tGNU_USER_DYNAMIC_LINKER.\n+\t* config/sparc/linux64.h (TARGET_OS_CPP_BUILTINS): Change\n+\tLINUX_TARGET_OS_CPP_BUILTINS to GNU_USER_TARGET_OS_CPP_BUILTINS.\n+\t(LINK_ARCH32_SPEC): Change LINUX_DYNAMIC_LINKER32 to\n+\tGNU_USER_DYNAMIC_LINKER32.\n+\t(LINK_ARCH64_SPEC): Change LINUX_DYNAMIC_LINKER64 to\n+\tGNU_USER_DYNAMIC_LINKER64.\n+\t(LINK_SPEC): Change LINUX_DYNAMIC_LINKER64 to\n+\tGNU_USER_DYNAMIC_LINKER64.\n+\t* config/vax/linux.h (TARGET_OS_CPP_BUILTINS): Change\n+\tLINUX_TARGET_OS_CPP_BUILTINS to GNU_USER_TARGET_OS_CPP_BUILTINS.\n+\t* config/xtensa/linux.h (TARGET_OS_CPP_BUILTINS): Change\n+\tLINUX_TARGET_OS_CPP_BUILTINS to GNU_USER_TARGET_OS_CPP_BUILTINS.\n+\t(LINK_SPEC): Change LINUX_DYNAMIC_LINKER to\n+\tGNU_USER_DYNAMIC_LINKER.\n+\n 2011-04-11  Joseph Myers  <joseph@codesourcery.com>\n \n \t* config/i386/gnu-user.h: Copy from linux.h.  Update comments."}, {"sha": "f578ecb31adfc9bf64683181c982123c9c0d0a5d", "filename": "gcc/config/alpha/linux-elf.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/107fd1c1e967019a04400acba9efb1f41c470ee9/gcc%2Fconfig%2Falpha%2Flinux-elf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/107fd1c1e967019a04400acba9efb1f41c470ee9/gcc%2Fconfig%2Falpha%2Flinux-elf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Flinux-elf.h?ref=107fd1c1e967019a04400acba9efb1f41c470ee9", "patch": "@@ -33,10 +33,10 @@ along with GCC; see the file COPYING3.  If not see\n #else\n #error \"Unsupported DEFAULT_LIBC\"\n #endif\n-#define LINUX_DYNAMIC_LINKER \\\n+#define GNU_USER_DYNAMIC_LINKER \\\n   CHOOSE_DYNAMIC_LINKER (GLIBC_DYNAMIC_LINKER, UCLIBC_DYNAMIC_LINKER)\n \n-#define ELF_DYNAMIC_LINKER\tLINUX_DYNAMIC_LINKER\n+#define ELF_DYNAMIC_LINKER\tGNU_USER_DYNAMIC_LINKER\n \n #define LINK_SPEC \"-m elf64alpha %{G*} %{relax:-relax}\t\t\\\n   %{O*:-O3} %{!O*:-O1}\t\t\t\t\t\t\\"}, {"sha": "921af3d7f0cba6319bd8379b614c707394104498", "filename": "gcc/config/arm/linux-eabi.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/107fd1c1e967019a04400acba9efb1f41c470ee9/gcc%2Fconfig%2Farm%2Flinux-eabi.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/107fd1c1e967019a04400acba9efb1f41c470ee9/gcc%2Fconfig%2Farm%2Flinux-eabi.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Flinux-eabi.h?ref=107fd1c1e967019a04400acba9efb1f41c470ee9", "patch": "@@ -26,7 +26,7 @@\n   do \t\t\t\t\t\t\\\n     {\t\t\t\t\t\t\\\n       TARGET_BPABI_CPP_BUILTINS();\t\t\\\n-      LINUX_TARGET_OS_CPP_BUILTINS();\t\t\\\n+      GNU_USER_TARGET_OS_CPP_BUILTINS();\t\\\n       ANDROID_TARGET_OS_CPP_BUILTINS();\t\t\\\n     }\t\t\t\t\t\t\\\n   while (false)"}, {"sha": "270e12bc55c9578fbe0a6b3cb5b77e9ed87ae8dd", "filename": "gcc/config/arm/linux-elf.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/107fd1c1e967019a04400acba9efb1f41c470ee9/gcc%2Fconfig%2Farm%2Flinux-elf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/107fd1c1e967019a04400acba9efb1f41c470ee9/gcc%2Fconfig%2Farm%2Flinux-elf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Flinux-elf.h?ref=107fd1c1e967019a04400acba9efb1f41c470ee9", "patch": "@@ -66,7 +66,7 @@\n    %{shared:-shared} \\\n    %{symbolic:-Bsymbolic} \\\n    %{rdynamic:-export-dynamic} \\\n-   -dynamic-linker \" LINUX_DYNAMIC_LINKER \" \\\n+   -dynamic-linker \" GNU_USER_DYNAMIC_LINKER \" \\\n    -X \\\n    %{mbig-endian:-EB} %{mlittle-endian:-EL}\" \\\n    SUBTARGET_EXTRA_LINK_SPEC\n@@ -77,7 +77,7 @@\n #define TARGET_OS_CPP_BUILTINS()\t\t\\\n   do\t\t\t\t\t\t\\\n     {\t\t\t\t\t\t\\\n-\tLINUX_TARGET_OS_CPP_BUILTINS();\t\t\\\n+\tGNU_USER_TARGET_OS_CPP_BUILTINS();\t\\\n     }\t\t\t\t\t\t\\\n   while (0)\n "}, {"sha": "cd15f48ed7230e3360b421316f110ae837ff57bd", "filename": "gcc/config/bfin/linux.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/107fd1c1e967019a04400acba9efb1f41c470ee9/gcc%2Fconfig%2Fbfin%2Flinux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/107fd1c1e967019a04400acba9efb1f41c470ee9/gcc%2Fconfig%2Fbfin%2Flinux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fbfin%2Flinux.h?ref=107fd1c1e967019a04400acba9efb1f41c470ee9", "patch": "@@ -1,4 +1,4 @@\n-/* Copyright (C) 2007, 2008, 2009, 2010 Free Software Foundation, Inc.\n+/* Copyright (C) 2007, 2008, 2009, 2010, 2011 Free Software Foundation, Inc.\n \n This file is part of GCC.\n \n@@ -26,7 +26,7 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n   \"%{!mno-fdpic:-mfdpic} -micplb\",\n \n #undef TARGET_OS_CPP_BUILTINS\n-#define TARGET_OS_CPP_BUILTINS() LINUX_TARGET_OS_CPP_BUILTINS()\n+#define TARGET_OS_CPP_BUILTINS() GNU_USER_TARGET_OS_CPP_BUILTINS()\n \n #undef STARTFILE_SPEC\n #define STARTFILE_SPEC \\"}, {"sha": "6428b063477e65eb2de5de172a373afbc2cae01a", "filename": "gcc/config/bfin/uclinux.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/107fd1c1e967019a04400acba9efb1f41c470ee9/gcc%2Fconfig%2Fbfin%2Fuclinux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/107fd1c1e967019a04400acba9efb1f41c470ee9/gcc%2Fconfig%2Fbfin%2Fuclinux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fbfin%2Fuclinux.h?ref=107fd1c1e967019a04400acba9efb1f41c470ee9", "patch": "@@ -1,4 +1,4 @@\n-/* Copyright (C) 2005, 2006, 2007 Free Software Foundation, Inc.\n+/* Copyright (C) 2005, 2006, 2007, 2009, 2011 Free Software Foundation, Inc.\n \n This file is part of GCC.\n \n@@ -25,7 +25,7 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n #define STARTFILE_SPEC \\\n   \"%{!shared: crt1%O%s} crti%O%s crtbegin%O%s crtlibid%O%s\"\n \n-#define TARGET_OS_CPP_BUILTINS() LINUX_TARGET_OS_CPP_BUILTINS()\n+#define TARGET_OS_CPP_BUILTINS() GNU_USER_TARGET_OS_CPP_BUILTINS()\n \n #define MD_UNWIND_SUPPORT \"config/bfin/linux-unwind.h\"\n "}, {"sha": "df10721e8123164e44132535a72d020f57125325", "filename": "gcc/config/cris/linux.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/107fd1c1e967019a04400acba9efb1f41c470ee9/gcc%2Fconfig%2Fcris%2Flinux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/107fd1c1e967019a04400acba9efb1f41c470ee9/gcc%2Fconfig%2Fcris%2Flinux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fcris%2Flinux.h?ref=107fd1c1e967019a04400acba9efb1f41c470ee9", "patch": "@@ -112,7 +112,7 @@ along with GCC; see the file COPYING3.  If not see\n   %{symbolic:-Bdynamic} %{static:-Bstatic}\\\n   %{!shared:%{!static:\\\n               %{rdynamic:-export-dynamic}\\\n-              -dynamic-linker \" LINUX_DYNAMIC_LINKER \"}}\\\n+              -dynamic-linker \" GNU_USER_DYNAMIC_LINKER \"}}\\\n   %{!r:%{O2|O3: --gc-sections}}\"\n \n \n@@ -123,7 +123,7 @@ along with GCC; see the file COPYING3.  If not see\n #define TARGET_OS_CPP_BUILTINS()\t\t\\\n   do\t\t\t\t\t\t\\\n     {\t\t\t\t\t\t\\\n-      LINUX_TARGET_OS_CPP_BUILTINS();\t\t\\\n+      GNU_USER_TARGET_OS_CPP_BUILTINS();\t\\\n       if (flag_leading_underscore <= 0)\t\t\\\n \tbuiltin_define (\"__NO_UNDERSCORES__\");\t\\\n     }\t\t\t\t\t\t\\"}, {"sha": "98477125726637e5caaf2c34da505e0c5f80baa5", "filename": "gcc/config/frv/linux.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/107fd1c1e967019a04400acba9efb1f41c470ee9/gcc%2Fconfig%2Ffrv%2Flinux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/107fd1c1e967019a04400acba9efb1f41c470ee9/gcc%2Fconfig%2Ffrv%2Flinux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Ffrv%2Flinux.h?ref=107fd1c1e967019a04400acba9efb1f41c470ee9", "patch": "@@ -1,5 +1,5 @@\n /* Target macros for the FRV Linux port of GCC.\n-   Copyright (C) 1999, 2000, 2001, 2002, 2003, 2004, 2006, 2007, 2010\n+   Copyright (C) 1999, 2000, 2001, 2002, 2003, 2004, 2006, 2007, 2010, 2011\n    Free Software Foundation, Inc.\n    Contributed by Red Hat Inc.\n \n@@ -42,7 +42,7 @@\n   %{mfdpic: -m elf32frvfd -z text} %{shared} %{pie} \\\n   %{!shared: %{!static: \\\n    %{rdynamic:-export-dynamic} \\\n-   -dynamic-linker \" LINUX_DYNAMIC_LINKER \"} \\\n+   -dynamic-linker \" GNU_USER_DYNAMIC_LINKER \"} \\\n    %{static}}\"\n \n /* Support for compile-time default CPU.  */"}, {"sha": "8b1d079ee8997a0bc8264bd5515798c05b8a101d", "filename": "gcc/config/gnu.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/107fd1c1e967019a04400acba9efb1f41c470ee9/gcc%2Fconfig%2Fgnu.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/107fd1c1e967019a04400acba9efb1f41c470ee9/gcc%2Fconfig%2Fgnu.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fgnu.h?ref=107fd1c1e967019a04400acba9efb1f41c470ee9", "patch": "@@ -32,8 +32,8 @@ along with GCC.  If not, see <http://www.gnu.org/licenses/>.\n #undef STANDARD_INCLUDE_DIR\n #define STANDARD_INCLUDE_DIR \"/include\"\n \n-#undef LINUX_TARGET_OS_CPP_BUILTINS\n-#define LINUX_TARGET_OS_CPP_BUILTINS()\t\t\\\n+#undef GNU_USER_TARGET_OS_CPP_BUILTINS\n+#define GNU_USER_TARGET_OS_CPP_BUILTINS()\t\t\\\n     do {\t\t\t\t\t\\\n \tbuiltin_define (\"__gnu_hurd__\");\t\\\n \tbuiltin_define (\"__GNU__\");\t\t\\"}, {"sha": "b6e152e935d72769af27b81a331ad68040931f38", "filename": "gcc/config/i386/gnu-user.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/107fd1c1e967019a04400acba9efb1f41c470ee9/gcc%2Fconfig%2Fi386%2Fgnu-user.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/107fd1c1e967019a04400acba9efb1f41c470ee9/gcc%2Fconfig%2Fi386%2Fgnu-user.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fgnu-user.h?ref=107fd1c1e967019a04400acba9efb1f41c470ee9", "patch": "@@ -70,7 +70,7 @@ along with GCC; see the file COPYING3.  If not see\n #define TARGET_OS_CPP_BUILTINS()\t\t\\\n   do\t\t\t\t\t\t\\\n     {\t\t\t\t\t\t\\\n-\tLINUX_TARGET_OS_CPP_BUILTINS();\t\t\\\n+\tGNU_USER_TARGET_OS_CPP_BUILTINS();\t\\\n     }\t\t\t\t\t\t\\\n   while (0)\n "}, {"sha": "8850b813e405548aa07f0354d5150ff489ee272c", "filename": "gcc/config/i386/gnu-user64.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/107fd1c1e967019a04400acba9efb1f41c470ee9/gcc%2Fconfig%2Fi386%2Fgnu-user64.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/107fd1c1e967019a04400acba9efb1f41c470ee9/gcc%2Fconfig%2Fi386%2Fgnu-user64.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fgnu-user64.h?ref=107fd1c1e967019a04400acba9efb1f41c470ee9", "patch": "@@ -27,7 +27,7 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n #define TARGET_OS_CPP_BUILTINS()\t\t\t\t\\\n   do\t\t\t\t\t\t\t\t\\\n     {\t\t\t\t\t\t\t\t\\\n-\tLINUX_TARGET_OS_CPP_BUILTINS();\t\t\t\t\\\n+\tGNU_USER_TARGET_OS_CPP_BUILTINS();\t\t\t\\\n     }\t\t\t\t\t\t\t\t\\\n   while (0)\n "}, {"sha": "292071f209d3250b6be85ba2a28842110b61c5b3", "filename": "gcc/config/i386/linux.h", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/107fd1c1e967019a04400acba9efb1f41c470ee9/gcc%2Fconfig%2Fi386%2Flinux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/107fd1c1e967019a04400acba9efb1f41c470ee9/gcc%2Fconfig%2Fi386%2Flinux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Flinux.h?ref=107fd1c1e967019a04400acba9efb1f41c470ee9", "patch": "@@ -23,8 +23,6 @@ along with GCC; see the file COPYING3.  If not see\n #define GNU_USER_LINK_EMULATION \"elf_i386\"\n #define GLIBC_DYNAMIC_LINKER \"/lib/ld-linux.so.2\"\n \n-#define GNU_USER_DYNAMIC_LINKER LINUX_DYNAMIC_LINKER\n-\n #define MD_UNWIND_SUPPORT \"config/i386/linux-unwind.h\"\n \n #define REG_NAME(reg) reg"}, {"sha": "089ada75b9e3a0792cf6475649860e01cebb9987", "filename": "gcc/config/i386/linux64.h", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/107fd1c1e967019a04400acba9efb1f41c470ee9/gcc%2Fconfig%2Fi386%2Flinux64.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/107fd1c1e967019a04400acba9efb1f41c470ee9/gcc%2Fconfig%2Fi386%2Flinux64.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Flinux64.h?ref=107fd1c1e967019a04400acba9efb1f41c470ee9", "patch": "@@ -27,9 +27,6 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n #define GLIBC_DYNAMIC_LINKER32 \"/lib/ld-linux.so.2\"\n #define GLIBC_DYNAMIC_LINKER64 \"/lib64/ld-linux-x86-64.so.2\"\n \n-#define GNU_USER_DYNAMIC_LINKER32 LINUX_DYNAMIC_LINKER32\n-#define GNU_USER_DYNAMIC_LINKER64 LINUX_DYNAMIC_LINKER64\n-\n #define MD_UNWIND_SUPPORT \"config/i386/linux-unwind.h\"\n \n #define REG_NAME(reg) reg"}, {"sha": "2d75376ed1f4d5deb7eed223499726b7b832156a", "filename": "gcc/config/ia64/linux.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/107fd1c1e967019a04400acba9efb1f41c470ee9/gcc%2Fconfig%2Fia64%2Flinux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/107fd1c1e967019a04400acba9efb1f41c470ee9/gcc%2Fconfig%2Fia64%2Flinux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fia64%2Flinux.h?ref=107fd1c1e967019a04400acba9efb1f41c470ee9", "patch": "@@ -31,7 +31,7 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n /* Target OS builtins.  */\n #define TARGET_OS_CPP_BUILTINS()\t\t\\\n do {\t\t\t\t\t\t\\\n-\tLINUX_TARGET_OS_CPP_BUILTINS();\t\t\\\n+\tGNU_USER_TARGET_OS_CPP_BUILTINS();\t\\\n \tbuiltin_define(\"_LONGLONG\");\t\t\\\n } while (0)\n \n@@ -64,7 +64,7 @@ do {\t\t\t\t\t\t\\\n   %{!shared: \\\n     %{!static: \\\n       %{rdynamic:-export-dynamic} \\\n-      -dynamic-linker \" LINUX_DYNAMIC_LINKER \"} \\\n+      -dynamic-linker \" GNU_USER_DYNAMIC_LINKER \"} \\\n       %{static:-static}}\"\n \n #define CPP_SPEC \"%{posix:-D_POSIX_SOURCE} %{pthread:-D_REENTRANT}\""}, {"sha": "4cc1dc290a8dd6dec8618bbd7c11f8d332695bbb", "filename": "gcc/config/kfreebsd-gnu.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/107fd1c1e967019a04400acba9efb1f41c470ee9/gcc%2Fconfig%2Fkfreebsd-gnu.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/107fd1c1e967019a04400acba9efb1f41c470ee9/gcc%2Fconfig%2Fkfreebsd-gnu.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fkfreebsd-gnu.h?ref=107fd1c1e967019a04400acba9efb1f41c470ee9", "patch": "@@ -19,8 +19,8 @@ You should have received a copy of the GNU General Public License\n along with GCC; see the file COPYING3.  If not see\n <http://www.gnu.org/licenses/>.  */\n \n-#undef LINUX_TARGET_OS_CPP_BUILTINS    \n-#define LINUX_TARGET_OS_CPP_BUILTINS()\t\t\\\n+#undef GNU_USER_TARGET_OS_CPP_BUILTINS    \n+#define GNU_USER_TARGET_OS_CPP_BUILTINS()\t\t\\\n   do\t\t\t\t\t\t\\\n     {\t\t\t\t\t\t\\\n \tbuiltin_define (\"__FreeBSD_kernel__\");\t\\"}, {"sha": "30fa99a5ec1ae9f7f55fe8ba1db732aa1fbc11ee", "filename": "gcc/config/knetbsd-gnu.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/107fd1c1e967019a04400acba9efb1f41c470ee9/gcc%2Fconfig%2Fknetbsd-gnu.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/107fd1c1e967019a04400acba9efb1f41c470ee9/gcc%2Fconfig%2Fknetbsd-gnu.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fknetbsd-gnu.h?ref=107fd1c1e967019a04400acba9efb1f41c470ee9", "patch": "@@ -19,8 +19,8 @@ You should have received a copy of the GNU General Public License\n along with GCC; see the file COPYING3.  If not see\n <http://www.gnu.org/licenses/>.  */\n \n-#undef LINUX_TARGET_OS_CPP_BUILTINS    \n-#define LINUX_TARGET_OS_CPP_BUILTINS()\t\t\\\n+#undef GNU_USER_TARGET_OS_CPP_BUILTINS    \n+#define GNU_USER_TARGET_OS_CPP_BUILTINS()\t\t\\\n   do\t\t\t\t\t\t\\\n     {\t\t\t\t\t\t\\\n \tbuiltin_define (\"__NetBSD_kernel__\");\t\\"}, {"sha": "ba6bdc5cd9a01e5174cc153b9fae822d4714fb9c", "filename": "gcc/config/kopensolaris-gnu.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/107fd1c1e967019a04400acba9efb1f41c470ee9/gcc%2Fconfig%2Fkopensolaris-gnu.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/107fd1c1e967019a04400acba9efb1f41c470ee9/gcc%2Fconfig%2Fkopensolaris-gnu.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fkopensolaris-gnu.h?ref=107fd1c1e967019a04400acba9efb1f41c470ee9", "patch": "@@ -19,8 +19,8 @@ You should have received a copy of the GNU General Public License\n along with GCC; see the file COPYING3.  If not see\n <http://www.gnu.org/licenses/>.  */\n \n-#undef LINUX_TARGET_OS_CPP_BUILTINS    \n-#define LINUX_TARGET_OS_CPP_BUILTINS()\t\t\\\n+#undef GNU_USER_TARGET_OS_CPP_BUILTINS    \n+#define GNU_USER_TARGET_OS_CPP_BUILTINS()\t\t\\\n   do\t\t\t\t\t\t\\\n     {\t\t\t\t\t\t\\\n \tbuiltin_define (\"__OpenSolaris_kernel__\");\t\\"}, {"sha": "8eaa74eb6b783e616dc624d223e99eb56ce7365f", "filename": "gcc/config/linux.h", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/107fd1c1e967019a04400acba9efb1f41c470ee9/gcc%2Fconfig%2Flinux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/107fd1c1e967019a04400acba9efb1f41c470ee9/gcc%2Fconfig%2Flinux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Flinux.h?ref=107fd1c1e967019a04400acba9efb1f41c470ee9", "patch": "@@ -39,7 +39,7 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n #define OPTION_BIONIC (linux_libc == LIBC_BIONIC)\n #endif\n \n-#define LINUX_TARGET_OS_CPP_BUILTINS()\t\t\t\t\\\n+#define GNU_USER_TARGET_OS_CPP_BUILTINS()\t\t\t\\\n     do {\t\t\t\t\t\t\t\\\n \tif (OPTION_GLIBC)\t\t\t\t\t\\\n \t  builtin_define (\"__gnu_linux__\");\t\t\t\\\n@@ -81,13 +81,13 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n #define BIONIC_DYNAMIC_LINKER32 \"/system/bin/linker\"\n #define BIONIC_DYNAMIC_LINKER64 \"/system/bin/linker64\"\n \n-#define LINUX_DYNAMIC_LINKER\t\t\t\t\t\t\\\n+#define GNU_USER_DYNAMIC_LINKER\t\t\t\t\t\t\\\n   CHOOSE_DYNAMIC_LINKER (GLIBC_DYNAMIC_LINKER, UCLIBC_DYNAMIC_LINKER,\t\\\n \t\t\t BIONIC_DYNAMIC_LINKER)\n-#define LINUX_DYNAMIC_LINKER32\t\t\t\t\t\t\\\n+#define GNU_USER_DYNAMIC_LINKER32\t\t\t\t\t\\\n   CHOOSE_DYNAMIC_LINKER (GLIBC_DYNAMIC_LINKER32, UCLIBC_DYNAMIC_LINKER32, \\\n \t\t\t BIONIC_DYNAMIC_LINKER32)\n-#define LINUX_DYNAMIC_LINKER64\t\t\t\t\t\t\\\n+#define GNU_USER_DYNAMIC_LINKER64\t\t\t\t\t\\\n   CHOOSE_DYNAMIC_LINKER (GLIBC_DYNAMIC_LINKER64, UCLIBC_DYNAMIC_LINKER64, \\\n \t\t\t BIONIC_DYNAMIC_LINKER64)\n "}, {"sha": "2b22214c16f1284aa66238b0da53742de6dd532e", "filename": "gcc/config/lm32/uclinux-elf.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/107fd1c1e967019a04400acba9efb1f41c470ee9/gcc%2Fconfig%2Flm32%2Fuclinux-elf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/107fd1c1e967019a04400acba9efb1f41c470ee9/gcc%2Fconfig%2Flm32%2Fuclinux-elf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Flm32%2Fuclinux-elf.h?ref=107fd1c1e967019a04400acba9efb1f41c470ee9", "patch": "@@ -70,7 +70,7 @@\n    %{rdynamic:-export-dynamic} \\\n    -dynamic-linker /lib/ld-linux.so.2\"\n \n-#define TARGET_OS_CPP_BUILTINS() LINUX_TARGET_OS_CPP_BUILTINS()\n+#define TARGET_OS_CPP_BUILTINS() GNU_USER_TARGET_OS_CPP_BUILTINS()\n \n #define LINK_GCC_C_SEQUENCE_SPEC \\\n   \"%{static:--start-group} %G %L %{static:--end-group}%{!static:%G}\""}, {"sha": "bc7802b2d32e8255816e5786ea4552af2bfd30c7", "filename": "gcc/config/m32r/linux.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/107fd1c1e967019a04400acba9efb1f41c470ee9/gcc%2Fconfig%2Fm32r%2Flinux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/107fd1c1e967019a04400acba9efb1f41c470ee9/gcc%2Fconfig%2Fm32r%2Flinux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm32r%2Flinux.h?ref=107fd1c1e967019a04400acba9efb1f41c470ee9", "patch": "@@ -46,14 +46,14 @@\n   %{!shared: \\\n     %{!static: \\\n       %{rdynamic:-export-dynamic} \\\n-      -dynamic-linker \" LINUX_DYNAMIC_LINKER \"} \\\n+      -dynamic-linker \" GNU_USER_DYNAMIC_LINKER \"} \\\n       %{static:-static}}\"\n #else\n #define LINK_SPEC \"%(link_cpu) -m m32relf_linux %{shared:-shared} \\\n   %{!shared: \\\n     %{!static: \\\n       %{rdynamic:-export-dynamic} \\\n-      -dynamic-linker \" LINUX_DYNAMIC_LINKER \"} \\\n+      -dynamic-linker \" GNU_USER_DYNAMIC_LINKER \"} \\\n       %{static:-static}}\"\n #endif\n \n@@ -87,6 +87,6 @@\n    %{pthread:-D_REENTRANT -D_PTHREADS} \\\n \"\n                                                                                 \n-#define TARGET_OS_CPP_BUILTINS() LINUX_TARGET_OS_CPP_BUILTINS()\n+#define TARGET_OS_CPP_BUILTINS() GNU_USER_TARGET_OS_CPP_BUILTINS()\n \n #define TARGET_ASM_FILE_END file_end_indicate_exec_stack"}, {"sha": "6c07e261a6c110410cb5222fc5979a3a72f7bb2e", "filename": "gcc/config/m68k/linux.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/107fd1c1e967019a04400acba9efb1f41c470ee9/gcc%2Fconfig%2Fm68k%2Flinux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/107fd1c1e967019a04400acba9efb1f41c470ee9/gcc%2Fconfig%2Fm68k%2Flinux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Flinux.h?ref=107fd1c1e967019a04400acba9efb1f41c470ee9", "patch": "@@ -59,7 +59,7 @@ along with GCC; see the file COPYING3.  If not see\n #define ASM_COMMENT_START \"|\"\n \n /* Target OS builtins.  */\n-#define TARGET_OS_CPP_BUILTINS() LINUX_TARGET_OS_CPP_BUILTINS()\n+#define TARGET_OS_CPP_BUILTINS() GNU_USER_TARGET_OS_CPP_BUILTINS()\n \n #undef CPP_SPEC\n #define CPP_SPEC \"%{posix:-D_POSIX_SOURCE} %{pthread:-D_REENTRANT}\"\n@@ -79,7 +79,7 @@ along with GCC; see the file COPYING3.  If not see\n   %{!shared: \\\n     %{!static: \\\n       %{rdynamic:-export-dynamic} \\\n-      -dynamic-linker \" LINUX_DYNAMIC_LINKER \"} \\\n+      -dynamic-linker \" GNU_USER_DYNAMIC_LINKER \"} \\\n     %{static}}\"\n \n /* For compatibility with linux/a.out */"}, {"sha": "cccfb002f216de76cc39032f770ebe43c0411593", "filename": "gcc/config/m68k/uclinux.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/107fd1c1e967019a04400acba9efb1f41c470ee9/gcc%2Fconfig%2Fm68k%2Fuclinux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/107fd1c1e967019a04400acba9efb1f41c470ee9/gcc%2Fconfig%2Fm68k%2Fuclinux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fuclinux.h?ref=107fd1c1e967019a04400acba9efb1f41c470ee9", "patch": "@@ -45,7 +45,7 @@ along with GCC; see the file COPYING3.  If not see\n #define TARGET_OS_CPP_BUILTINS()\t\t\t\t\\\n   do\t\t\t\t\t\t\t\t\\\n     {\t\t\t\t\t\t\t\t\\\n-      LINUX_TARGET_OS_CPP_BUILTINS ();\t\t\t\t\\\n+      GNU_USER_TARGET_OS_CPP_BUILTINS ();\t\t\t\\\n       builtin_define (\"__uClinux__\");\t\t\t\t\\\n       if (TARGET_ID_SHARED_LIBRARY)\t\t\t\t\\\n \t{\t\t\t\t\t\t\t\\"}, {"sha": "9c33590df66b9d092fab5609273a1cde937d3377", "filename": "gcc/config/mips/linux.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/107fd1c1e967019a04400acba9efb1f41c470ee9/gcc%2Fconfig%2Fmips%2Flinux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/107fd1c1e967019a04400acba9efb1f41c470ee9/gcc%2Fconfig%2Fmips%2Flinux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Flinux.h?ref=107fd1c1e967019a04400acba9efb1f41c470ee9", "patch": "@@ -33,7 +33,7 @@ along with GCC; see the file COPYING3.  If not see\n \n #define TARGET_OS_CPP_BUILTINS()\t\t\t\t\\\n   do {\t\t\t\t\t\t\t\t\\\n-    LINUX_TARGET_OS_CPP_BUILTINS();\t\t\t\t\\\n+    GNU_USER_TARGET_OS_CPP_BUILTINS();\t\t\t\t\\\n     /* The GNU C++ standard library requires this.  */\t\t\\\n     if (c_dialect_cxx ())\t\t\t\t\t\\\n       builtin_define (\"_GNU_SOURCE\");\t\t\t\t\\\n@@ -64,7 +64,7 @@ along with GCC; see the file COPYING3.  If not see\n   %{!shared: \\\n     %{!static: \\\n       %{rdynamic:-export-dynamic} \\\n-      -dynamic-linker \" LINUX_DYNAMIC_LINKER \"} \\\n+      -dynamic-linker \" GNU_USER_DYNAMIC_LINKER \"} \\\n       %{static:-static}}\"\n \n #undef SUBTARGET_ASM_SPEC"}, {"sha": "cde17c5dfb7c59074e782241d331eafbbd62359e", "filename": "gcc/config/mips/linux64.h", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/107fd1c1e967019a04400acba9efb1f41c470ee9/gcc%2Fconfig%2Fmips%2Flinux64.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/107fd1c1e967019a04400acba9efb1f41c470ee9/gcc%2Fconfig%2Fmips%2Flinux64.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Flinux64.h?ref=107fd1c1e967019a04400acba9efb1f41c470ee9", "patch": "@@ -40,7 +40,7 @@ along with GCC; see the file COPYING3.  If not see\n #define GLIBC_DYNAMIC_LINKERN32 \"/lib32/ld.so.1\"\n #define UCLIBC_DYNAMIC_LINKERN32 \"/lib32/ld-uClibc.so.0\"\n #define BIONIC_DYNAMIC_LINKERN32 \"/system/bin/linker32\"\n-#define LINUX_DYNAMIC_LINKERN32 \\\n+#define GNU_USER_DYNAMIC_LINKERN32 \\\n   CHOOSE_DYNAMIC_LINKER (GLIBC_DYNAMIC_LINKERN32, UCLIBC_DYNAMIC_LINKERN32, \\\n \t\t\t BIONIC_DYNAMIC_LINKERN32)\n \n@@ -52,9 +52,9 @@ along with GCC; see the file COPYING3.  If not see\n   %{!shared: \\\n     %{!static: \\\n       %{rdynamic:-export-dynamic} \\\n-      %{mabi=n32: -dynamic-linker \" LINUX_DYNAMIC_LINKERN32 \"} \\\n-      %{mabi=64: -dynamic-linker \" LINUX_DYNAMIC_LINKER64 \"} \\\n-      %{mabi=32: -dynamic-linker \" LINUX_DYNAMIC_LINKER32 \"}} \\\n+      %{mabi=n32: -dynamic-linker \" GNU_USER_DYNAMIC_LINKERN32 \"} \\\n+      %{mabi=64: -dynamic-linker \" GNU_USER_DYNAMIC_LINKER64 \"} \\\n+      %{mabi=32: -dynamic-linker \" GNU_USER_DYNAMIC_LINKER32 \"}} \\\n     %{static:-static}} \\\n %{mabi=n32:-melf32%{EB:b}%{EL:l}tsmipn32} \\\n %{mabi=64:-melf64%{EB:b}%{EL:l}tsmip} \\"}, {"sha": "d63b95ad1eb4513568438728da172f8eb2864f28", "filename": "gcc/config/mn10300/linux.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/107fd1c1e967019a04400acba9efb1f41c470ee9/gcc%2Fconfig%2Fmn10300%2Flinux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/107fd1c1e967019a04400acba9efb1f41c470ee9/gcc%2Fconfig%2Fmn10300%2Flinux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmn10300%2Flinux.h?ref=107fd1c1e967019a04400acba9efb1f41c470ee9", "patch": "@@ -23,7 +23,7 @@\n #undef  PREFERRED_DEBUGGING_TYPE\n #define PREFERRED_DEBUGGING_TYPE DWARF2_DEBUG\n \n-#define TARGET_OS_CPP_BUILTINS() LINUX_TARGET_OS_CPP_BUILTINS()\n+#define TARGET_OS_CPP_BUILTINS() GNU_USER_TARGET_OS_CPP_BUILTINS()\n \n #undef  CPP_SPEC\n #define CPP_SPEC \"%{mam33:-D__AM33__} %{!mam33:-D__AM33__=2 -D__AM33_2__} \\\n@@ -39,7 +39,7 @@\n #define LINK_SPEC \"%{mrelax:--relax} %{shared:-shared} \\\n    %{!static: \\\n      %{rdynamic:-export-dynamic} \\\n-     -dynamic-linker \" LINUX_DYNAMIC_LINKER \"} \\\n+     -dynamic-linker \" GNU_USER_DYNAMIC_LINKER \"} \\\n    %{static:-static}\"\n \n #undef  PROCESSOR_DEFAULT"}, {"sha": "45ba382da4c4784c8351dd2491c8e951f979f420", "filename": "gcc/config/moxie/uclinux.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/107fd1c1e967019a04400acba9efb1f41c470ee9/gcc%2Fconfig%2Fmoxie%2Fuclinux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/107fd1c1e967019a04400acba9efb1f41c470ee9/gcc%2Fconfig%2Fmoxie%2Fuclinux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmoxie%2Fuclinux.h?ref=107fd1c1e967019a04400acba9efb1f41c470ee9", "patch": "@@ -1,4 +1,4 @@\n-/* Copyright (C) 2009 Free Software Foundation, Inc.\n+/* Copyright (C) 2009, 2011 Free Software Foundation, Inc.\n \n This file is part of GCC.\n \n@@ -28,7 +28,7 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n #undef LINK_SPEC\n #define LINK_SPEC \"-elf2flt\"\n \n-#define TARGET_OS_CPP_BUILTINS() LINUX_TARGET_OS_CPP_BUILTINS()\n+#define TARGET_OS_CPP_BUILTINS() GNU_USER_TARGET_OS_CPP_BUILTINS()\n \n /* Like the definition in gcc.c, but for purposes of uClinux, every link is\n    static.  */"}, {"sha": "02a43eb316a86e277199764af53b052b872f2aa7", "filename": "gcc/config/pa/pa-linux.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/107fd1c1e967019a04400acba9efb1f41c470ee9/gcc%2Fconfig%2Fpa%2Fpa-linux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/107fd1c1e967019a04400acba9efb1f41c470ee9/gcc%2Fconfig%2Fpa%2Fpa-linux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa-linux.h?ref=107fd1c1e967019a04400acba9efb1f41c470ee9", "patch": "@@ -24,7 +24,7 @@ along with GCC; see the file COPYING3.  If not see\n #define TARGET_OS_CPP_BUILTINS()\t\t\\\n   do\t\t\t\t\t\t\\\n     {\t\t\t\t\t\t\\\n-\tLINUX_TARGET_OS_CPP_BUILTINS();\t\t\\\n+\tGNU_USER_TARGET_OS_CPP_BUILTINS();\t\\\n \tbuiltin_assert (\"machine=bigendian\");\t\\\n     }\t\t\t\t\t\t\\\n   while (0)\n@@ -47,7 +47,7 @@ along with GCC; see the file COPYING3.  If not see\n   %{!shared: \\\n     %{!static: \\\n       %{rdynamic:-export-dynamic} \\\n-      -dynamic-linker \" LINUX_DYNAMIC_LINKER \"} \\\n+      -dynamic-linker \" GNU_USER_DYNAMIC_LINKER \"} \\\n       %{static:-static}}\"\n \n /* glibc's profiling functions don't need gcc to allocate counters.  */"}, {"sha": "f5a5634b563f989f890c31c7cea85c8456406484", "filename": "gcc/config/rs6000/linux64.h", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/107fd1c1e967019a04400acba9efb1f41c470ee9/gcc%2Fconfig%2Frs6000%2Flinux64.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/107fd1c1e967019a04400acba9efb1f41c470ee9/gcc%2Fconfig%2Frs6000%2Flinux64.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Flinux64.h?ref=107fd1c1e967019a04400acba9efb1f41c470ee9", "patch": "@@ -378,19 +378,19 @@ extern int dot_symbols;\n #else\n #error \"Unsupported DEFAULT_LIBC\"\n #endif\n-#define LINUX_DYNAMIC_LINKER32 \\\n+#define GNU_USER_DYNAMIC_LINKER32 \\\n   CHOOSE_DYNAMIC_LINKER (GLIBC_DYNAMIC_LINKER32, UCLIBC_DYNAMIC_LINKER32)\n-#define LINUX_DYNAMIC_LINKER64 \\\n+#define GNU_USER_DYNAMIC_LINKER64 \\\n   CHOOSE_DYNAMIC_LINKER (GLIBC_DYNAMIC_LINKER64, UCLIBC_DYNAMIC_LINKER64)\n \n \n #define LINK_OS_LINUX_SPEC32 \"-m elf32ppclinux %{!shared: %{!static: \\\n   %{rdynamic:-export-dynamic} \\\n-  -dynamic-linker \" LINUX_DYNAMIC_LINKER32 \"}}\"\n+  -dynamic-linker \" GNU_USER_DYNAMIC_LINKER32 \"}}\"\n \n #define LINK_OS_LINUX_SPEC64 \"-m elf64ppc %{!shared: %{!static: \\\n   %{rdynamic:-export-dynamic} \\\n-  -dynamic-linker \" LINUX_DYNAMIC_LINKER64 \"}}\"\n+  -dynamic-linker \" GNU_USER_DYNAMIC_LINKER64 \"}}\"\n \n #undef  TOC_SECTION_ASM_OP\n #define TOC_SECTION_ASM_OP \\"}, {"sha": "1978629e55c2521e63a2514b4464725bcf87c6ea", "filename": "gcc/config/rs6000/sysv4.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/107fd1c1e967019a04400acba9efb1f41c470ee9/gcc%2Fconfig%2Frs6000%2Fsysv4.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/107fd1c1e967019a04400acba9efb1f41c470ee9/gcc%2Fconfig%2Frs6000%2Fsysv4.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fsysv4.h?ref=107fd1c1e967019a04400acba9efb1f41c470ee9", "patch": "@@ -812,12 +812,12 @@ extern int fixuplabelno;\n #else\n #error \"Unsupported DEFAULT_LIBC\"\n #endif\n-#define LINUX_DYNAMIC_LINKER \\\n+#define GNU_USER_DYNAMIC_LINKER \\\n   CHOOSE_DYNAMIC_LINKER (GLIBC_DYNAMIC_LINKER, UCLIBC_DYNAMIC_LINKER)\n \n #define LINK_OS_LINUX_SPEC \"-m elf32ppclinux %{!shared: %{!static: \\\n   %{rdynamic:-export-dynamic} \\\n-  -dynamic-linker \" LINUX_DYNAMIC_LINKER \"}}\"\n+  -dynamic-linker \" GNU_USER_DYNAMIC_LINKER \"}}\"\n \n #if defined(HAVE_LD_EH_FRAME_HDR)\n # define LINK_EH_SPEC \"%{!static:--eh-frame-hdr} \""}, {"sha": "7bd90d9d3acbf77d3b49dee7602bb032b02b024c", "filename": "gcc/config/s390/linux.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/107fd1c1e967019a04400acba9efb1f41c470ee9/gcc%2Fconfig%2Fs390%2Flinux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/107fd1c1e967019a04400acba9efb1f41c470ee9/gcc%2Fconfig%2Fs390%2Flinux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Flinux.h?ref=107fd1c1e967019a04400acba9efb1f41c470ee9", "patch": "@@ -42,7 +42,7 @@ along with GCC; see the file COPYING3.  If not see\n #define TARGET_OS_CPP_BUILTINS()\t\t\\\n   do\t\t\t\t\t\t\\\n     {\t\t\t\t\t\t\\\n-      LINUX_TARGET_OS_CPP_BUILTINS();\t\t\\\n+      GNU_USER_TARGET_OS_CPP_BUILTINS();\t\\\n     }\t\t\t\t\t\t\\\n   while (0)\n \n@@ -72,8 +72,8 @@ along with GCC; see the file COPYING3.  If not see\n       %{static:-static} \\\n       %{!static: \\\n \t%{rdynamic:-export-dynamic} \\\n-\t%{m31:-dynamic-linker \" LINUX_DYNAMIC_LINKER32 \"} \\\n-\t%{m64:-dynamic-linker \" LINUX_DYNAMIC_LINKER64 \"}}}\"\n+\t%{m31:-dynamic-linker \" GNU_USER_DYNAMIC_LINKER32 \"} \\\n+\t%{m64:-dynamic-linker \" GNU_USER_DYNAMIC_LINKER64 \"}}}\"\n \n #define CPP_SPEC \"%{posix:-D_POSIX_SOURCE} %{pthread:-D_REENTRANT}\"\n "}, {"sha": "fc954fe9863662c4f88633ca3b7b525d25baddb2", "filename": "gcc/config/sh/linux.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/107fd1c1e967019a04400acba9efb1f41c470ee9/gcc%2Fconfig%2Fsh%2Flinux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/107fd1c1e967019a04400acba9efb1f41c470ee9/gcc%2Fconfig%2Fsh%2Flinux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Flinux.h?ref=107fd1c1e967019a04400acba9efb1f41c470ee9", "patch": "@@ -34,7 +34,7 @@ along with GCC; see the file COPYING3.  If not see\n #define TARGET_OS_CPP_BUILTINS() \\\n   do\t\t\t\t\t\t\\\n     {\t\t\t\t\t\t\\\n-      LINUX_TARGET_OS_CPP_BUILTINS();\t\t\\\n+      GNU_USER_TARGET_OS_CPP_BUILTINS();\t\\\n     }\t\t\t\t\t\t\\\n   while (0)\n \n@@ -54,7 +54,7 @@ along with GCC; see the file COPYING3.  If not see\n   \"%{shared:-shared} \\\n    %{!static: \\\n      %{rdynamic:-export-dynamic} \\\n-     -dynamic-linker \" LINUX_DYNAMIC_LINKER \"} \\\n+     -dynamic-linker \" GNU_USER_DYNAMIC_LINKER \"} \\\n    %{static:-static}\"\n \n /* Output assembler code to STREAM to call the profiler.  */"}, {"sha": "81f0de89e022e88419f73bf05f944fcf063aee54", "filename": "gcc/config/sparc/linux.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/107fd1c1e967019a04400acba9efb1f41c470ee9/gcc%2Fconfig%2Fsparc%2Flinux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/107fd1c1e967019a04400acba9efb1f41c470ee9/gcc%2Fconfig%2Fsparc%2Flinux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Flinux.h?ref=107fd1c1e967019a04400acba9efb1f41c470ee9", "patch": "@@ -22,7 +22,7 @@ along with GCC; see the file COPYING3.  If not see\n #define TARGET_OS_CPP_BUILTINS()\t\t\\\n   do\t\t\t\t\t\t\\\n     {\t\t\t\t\t\t\\\n-      LINUX_TARGET_OS_CPP_BUILTINS();\t\t\\\n+      GNU_USER_TARGET_OS_CPP_BUILTINS();\t\\\n       if (TARGET_LONG_DOUBLE_128)       \t\\\n \tbuiltin_define (\"__LONG_DOUBLE_128__\");\t\\\n     }\t\t\t\t\t\t\\\n@@ -76,7 +76,7 @@ along with GCC; see the file COPYING3.  If not see\n   %{!shared: \\\n     %{!static: \\\n       %{rdynamic:-export-dynamic} \\\n-      -dynamic-linker \" LINUX_DYNAMIC_LINKER \"} \\\n+      -dynamic-linker \" GNU_USER_DYNAMIC_LINKER \"} \\\n       %{static:-static}}\"\n \n /* It's safe to pass -s always, even if -g is not used.  */"}, {"sha": "5db05c1a4a84212afc5b255ee19dbe6bef590d4c", "filename": "gcc/config/sparc/linux64.h", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/107fd1c1e967019a04400acba9efb1f41c470ee9/gcc%2Fconfig%2Fsparc%2Flinux64.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/107fd1c1e967019a04400acba9efb1f41c470ee9/gcc%2Fconfig%2Fsparc%2Flinux64.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Flinux64.h?ref=107fd1c1e967019a04400acba9efb1f41c470ee9", "patch": "@@ -22,7 +22,7 @@ along with GCC; see the file COPYING3.  If not see\n #define TARGET_OS_CPP_BUILTINS()\t\t\\\n   do\t\t\t\t\t\t\\\n     {\t\t\t\t\t\t\\\n-      LINUX_TARGET_OS_CPP_BUILTINS();\t\t\\\n+      GNU_USER_TARGET_OS_CPP_BUILTINS();\t\\\n       if (TARGET_ARCH64)\t\t\t\\\n         builtin_define (\"_LONGLONG\");\t\t\\\n       if (TARGET_ARCH32\t\t\t\t\\\n@@ -114,15 +114,15 @@ along with GCC; see the file COPYING3.  If not see\n   %{!shared: \\\n     %{!static: \\\n       %{rdynamic:-export-dynamic} \\\n-      -dynamic-linker \" LINUX_DYNAMIC_LINKER32 \"} \\\n+      -dynamic-linker \" GNU_USER_DYNAMIC_LINKER32 \"} \\\n       %{static:-static}} \\\n \"\n \n #define LINK_ARCH64_SPEC \"-m elf64_sparc -Y P,%R/usr/lib64 %{shared:-shared} \\\n   %{!shared: \\\n     %{!static: \\\n       %{rdynamic:-export-dynamic} \\\n-      -dynamic-linker \" LINUX_DYNAMIC_LINKER64 \"} \\\n+      -dynamic-linker \" GNU_USER_DYNAMIC_LINKER64 \"} \\\n       %{static:-static}} \\\n \"\n \n@@ -194,7 +194,7 @@ along with GCC; see the file COPYING3.  If not see\n   %{!shared: \\\n     %{!static: \\\n       %{rdynamic:-export-dynamic} \\\n-      -dynamic-linker \" LINUX_DYNAMIC_LINKER64 \"} \\\n+      -dynamic-linker \" GNU_USER_DYNAMIC_LINKER64 \"} \\\n     %{static:-static}} \\\n %{mlittle-endian:-EL} \\\n %{!mno-relax:%{!r:-relax}} \\"}, {"sha": "880067cbffacc41e48dc12f686ce87572a1aad2f", "filename": "gcc/config/vax/linux.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/107fd1c1e967019a04400acba9efb1f41c470ee9/gcc%2Fconfig%2Fvax%2Flinux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/107fd1c1e967019a04400acba9efb1f41c470ee9/gcc%2Fconfig%2Fvax%2Flinux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fvax%2Flinux.h?ref=107fd1c1e967019a04400acba9efb1f41c470ee9", "patch": "@@ -18,7 +18,7 @@ along with GCC; see the file COPYING3.  If not see\n <http://www.gnu.org/licenses/>.  */\n \n \n-#define TARGET_OS_CPP_BUILTINS() LINUX_TARGET_OS_CPP_BUILTINS()\n+#define TARGET_OS_CPP_BUILTINS() GNU_USER_TARGET_OS_CPP_BUILTINS()\n \n /* We use GAS, G-float double and want new DI patterns.  */\n #undef TARGET_DEFAULT"}, {"sha": "d058d16015df59af46480fe599bf3501ebdec549", "filename": "gcc/config/xtensa/linux.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/107fd1c1e967019a04400acba9efb1f41c470ee9/gcc%2Fconfig%2Fxtensa%2Flinux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/107fd1c1e967019a04400acba9efb1f41c470ee9/gcc%2Fconfig%2Fxtensa%2Flinux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fxtensa%2Flinux.h?ref=107fd1c1e967019a04400acba9efb1f41c470ee9", "patch": "@@ -19,7 +19,7 @@ You should have received a copy of the GNU General Public License\n along with GCC; see the file COPYING3.  If not see\n <http://www.gnu.org/licenses/>.  */\n \n-#define TARGET_OS_CPP_BUILTINS() LINUX_TARGET_OS_CPP_BUILTINS()\n+#define TARGET_OS_CPP_BUILTINS() GNU_USER_TARGET_OS_CPP_BUILTINS()\n \n #undef SUBTARGET_CPP_SPEC\n #define SUBTARGET_CPP_SPEC \"%{posix:-D_POSIX_SOURCE} %{pthread:-D_REENTRANT}\"\n@@ -53,7 +53,7 @@ along with GCC; see the file COPYING3.  If not see\n   %{!shared: \\\n     %{!static: \\\n       %{rdynamic:-export-dynamic} \\\n-      -dynamic-linker \" LINUX_DYNAMIC_LINKER \"} \\\n+      -dynamic-linker \" GNU_USER_DYNAMIC_LINKER \"} \\\n     %{static:-static}}\"\n \n #undef LOCAL_LABEL_PREFIX"}]}