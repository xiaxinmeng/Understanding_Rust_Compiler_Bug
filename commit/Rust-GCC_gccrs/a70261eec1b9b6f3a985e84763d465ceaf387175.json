{"sha": "a70261eec1b9b6f3a985e84763d465ceaf387175", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTcwMjYxZWVjMWI5YjZmM2E5ODVlODQ3NjNkNDY1Y2VhZjM4NzE3NQ==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@cygnus.com", "date": "1999-09-28T06:05:53Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "1999-09-28T06:05:53Z"}, "message": "ggc-page.c (GGC_MIN_LAST_ALLOCATED): New.\n\n        * ggc-page.c (GGC_MIN_LAST_ALLOCATED): New.\n        (init_ggc): Use it instead of a constant.\n        (ggc_collect): Bound allocated_last_gc by it.\n\nFrom-SVN: r29685", "tree": {"sha": "5580dcc183ad9c8931308296e2c2f1646ee368b2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5580dcc183ad9c8931308296e2c2f1646ee368b2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a70261eec1b9b6f3a985e84763d465ceaf387175", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a70261eec1b9b6f3a985e84763d465ceaf387175", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a70261eec1b9b6f3a985e84763d465ceaf387175", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a70261eec1b9b6f3a985e84763d465ceaf387175/comments", "author": null, "committer": null, "parents": [{"sha": "82bd61bdd4c210078a8e25ae894b0f44a297bb72", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/82bd61bdd4c210078a8e25ae894b0f44a297bb72", "html_url": "https://github.com/Rust-GCC/gccrs/commit/82bd61bdd4c210078a8e25ae894b0f44a297bb72"}], "stats": {"total": 16, "additions": 13, "deletions": 3}, "files": [{"sha": "23c794a7428c402ebf9484d5a7a1aad744045716", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a70261eec1b9b6f3a985e84763d465ceaf387175/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a70261eec1b9b6f3a985e84763d465ceaf387175/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a70261eec1b9b6f3a985e84763d465ceaf387175", "patch": "@@ -1,3 +1,9 @@\n+Mon Sep 27 23:03:16 1999  Richard Henderson  <rth@cygnus.com>\n+\n+\t* ggc-page.c (GGC_MIN_LAST_ALLOCATED): New.\n+\t(init_ggc): Use it instead of a constant.\n+\t(ggc_collect): Bound allocated_last_gc by it.\n+\n Mon Sep 27 19:06:04 1999  Jeffrey A Law  (law@cygnus.com)\n \n \t* fixinc/fixinc.irix (stdio.h): Hack stdio.h to avoid problems"}, {"sha": "54528a5f3a039bec22cf506060e44501459e85ef", "filename": "gcc/ggc-page.c", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a70261eec1b9b6f3a985e84763d465ceaf387175/gcc%2Fggc-page.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a70261eec1b9b6f3a985e84763d465ceaf387175/gcc%2Fggc-page.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fggc-page.c?ref=a70261eec1b9b6f3a985e84763d465ceaf387175", "patch": "@@ -255,6 +255,10 @@ static struct globals\n    one) before collection is performed.  */\n #define GGC_MIN_EXPAND_FOR_GC (1.3)\n \n+/* Bound `allocated_last_gc' to 4MB, to prevent the memory expansion\n+   test from triggering too often when the heap is small.  */\n+#define GGC_MIN_LAST_ALLOCATED (4 * 1024 * 1024)\n+\n \f\n static page_entry *lookup_page_table_entry PROTO ((void *));\n static void set_page_table_entry PROTO ((void *, page_entry *));\n@@ -724,9 +728,7 @@ init_ggc ()\n   G.debug_file = stdout;\n #endif\n \n-  /* Set the initial allocation to 4MB, so no collection will be\n-     performed until the heap is somewhat larger than 4 MB.  */\n-  G.allocated_last_gc = 4 * 1024 * 1024;\n+  G.allocated_last_gc = GGC_MIN_LAST_ALLOCATED;\n \n   empty_string = ggc_alloc_string (\"\", 0);\n   ggc_add_string_root (&empty_string, 1);\n@@ -1034,6 +1036,8 @@ ggc_collect ()\n #endif\n \n   G.allocated_last_gc = G.allocated;\n+  if (G.allocated_last_gc < GGC_MIN_LAST_ALLOCATED)\n+    G.allocated_last_gc = GGC_MIN_LAST_ALLOCATED;\n \n   time = get_run_time () - time;\n   gc_time += time;"}]}