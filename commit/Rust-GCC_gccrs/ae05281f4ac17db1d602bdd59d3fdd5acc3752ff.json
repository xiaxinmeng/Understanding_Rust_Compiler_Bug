{"sha": "ae05281f4ac17db1d602bdd59d3fdd5acc3752ff", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWUwNTI4MWY0YWMxN2RiMWQ2MDJiZGQ1OWQzZmRkNWFjYzM3NTJmZg==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2018-04-26T08:47:31Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2018-04-26T08:47:31Z"}, "message": "Makefile.tpl (STAGE1_TFLAGS): Add -fno-checking.\n\n2018-04-26  Richard Biener  <rguenther@suse.de>\n\n\t* Makefile.tpl (STAGE1_TFLAGS): Add -fno-checking.\n\t(STAGE2_CFLAGS): Likewise.\n\t(STAGE2_TFLAGS): Likewise.\n\t(STAGE3_CFLAGS): Add -fchecking.\n\t(STAGE3_TFLAGS): Likewise.\n\t(STAGEtrain_CFLAGS): Filter out -fchecking.\n\t(STAGEtrain_TFLAGS): Likewise.\n\t* Makefile.in: Re-generate.\n\nFrom-SVN: r259669", "tree": {"sha": "917475f0f1a38c0aade007489d0ed6d6a691815d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/917475f0f1a38c0aade007489d0ed6d6a691815d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ae05281f4ac17db1d602bdd59d3fdd5acc3752ff", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ae05281f4ac17db1d602bdd59d3fdd5acc3752ff", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ae05281f4ac17db1d602bdd59d3fdd5acc3752ff", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ae05281f4ac17db1d602bdd59d3fdd5acc3752ff/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c76d9edb09d262a3badc87d5583abcfbc2e94854", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c76d9edb09d262a3badc87d5583abcfbc2e94854", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c76d9edb09d262a3badc87d5583abcfbc2e94854"}], "stats": {"total": 39, "additions": 35, "deletions": 4}, "files": [{"sha": "7e74497c5bbd9e39b875ddedfffc7f4bcd523968", "filename": "ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae05281f4ac17db1d602bdd59d3fdd5acc3752ff/ChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae05281f4ac17db1d602bdd59d3fdd5acc3752ff/ChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/ChangeLog?ref=ae05281f4ac17db1d602bdd59d3fdd5acc3752ff", "patch": "@@ -1,3 +1,14 @@\n+2018-04-26  Richard Biener  <rguenther@suse.de>\n+\n+\t* Makefile.tpl (STAGE1_TFLAGS): Add -fno-checking.\n+\t(STAGE2_CFLAGS): Likewise.\n+\t(STAGE2_TFLAGS): Likewise.\n+\t(STAGE3_CFLAGS): Add -fchecking.\n+\t(STAGE3_TFLAGS): Likewise.\n+\t(STAGEtrain_CFLAGS): Filter out -fchecking.\n+\t(STAGEtrain_TFLAGS): Likewise.\n+\t* Makefile.in: Re-generate.\n+\n 2018-04-25  Catherine Moore <clm@codesourcery.com>\n \n \t* MAINTAINERS (mips): Remove myself as MIPS maintainer."}, {"sha": "4f5bbf75c98e5549cdcb45b0f735dd339ab38e03", "filename": "Makefile.in", "status": "modified", "additions": 12, "deletions": 2, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae05281f4ac17db1d602bdd59d3fdd5acc3752ff/Makefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae05281f4ac17db1d602bdd59d3fdd5acc3752ff/Makefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/Makefile.in?ref=ae05281f4ac17db1d602bdd59d3fdd5acc3752ff", "patch": "@@ -529,11 +529,21 @@ STAGE1_CONFIGURE_FLAGS = --disable-intermodule $(STAGE1_CHECKING) \\\n \t  --disable-coverage --enable-languages=\"$(STAGE1_LANGUAGES)\" \\\n \t  --disable-build-format-warnings\n \n+# When using the slow stage1 compiler disable IL verification and forcefully\n+# enable it when using the stage2 compiler instead.  As we later compare\n+# stage2 and stage3 we are merely avoid doing redundant work, plus we apply\n+# checking when building all target libraries for release builds.\n+STAGE1_TFLAGS += -fno-checking\n+STAGE2_CFLAGS += -fno-checking\n+STAGE2_TFLAGS += -fno-checking\n+STAGE3_CFLAGS += -fchecking\n+STAGE3_TFLAGS += -fchecking\n+\n STAGEprofile_CFLAGS = $(STAGE2_CFLAGS) -fprofile-generate\n STAGEprofile_TFLAGS = $(STAGE2_TFLAGS)\n \n-STAGEtrain_CFLAGS = $(STAGE3_CFLAGS)\n-STAGEtrain_TFLAGS = $(STAGE3_TFLAGS)\n+STAGEtrain_CFLAGS = $(filter-out -fchecking,$(STAGE3_CFLAGS))\n+STAGEtrain_TFLAGS = $(filter-out -fchecking,$(STAGE3_TFLAGS))\n \n STAGEfeedback_CFLAGS = $(STAGE4_CFLAGS) -fprofile-use\n STAGEfeedback_TFLAGS = $(STAGE4_TFLAGS)"}, {"sha": "5967c7ad631945babbc7ee37fe6c7c3dc34a52be", "filename": "Makefile.tpl", "status": "modified", "additions": 12, "deletions": 2, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae05281f4ac17db1d602bdd59d3fdd5acc3752ff/Makefile.tpl", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae05281f4ac17db1d602bdd59d3fdd5acc3752ff/Makefile.tpl", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/Makefile.tpl?ref=ae05281f4ac17db1d602bdd59d3fdd5acc3752ff", "patch": "@@ -452,11 +452,21 @@ STAGE1_CONFIGURE_FLAGS = --disable-intermodule $(STAGE1_CHECKING) \\\n \t  --disable-coverage --enable-languages=\"$(STAGE1_LANGUAGES)\" \\\n \t  --disable-build-format-warnings\n \n+# When using the slow stage1 compiler disable IL verification and forcefully\n+# enable it when using the stage2 compiler instead.  As we later compare\n+# stage2 and stage3 we are merely avoid doing redundant work, plus we apply\n+# checking when building all target libraries for release builds.\n+STAGE1_TFLAGS += -fno-checking\n+STAGE2_CFLAGS += -fno-checking\n+STAGE2_TFLAGS += -fno-checking\n+STAGE3_CFLAGS += -fchecking\n+STAGE3_TFLAGS += -fchecking\n+\n STAGEprofile_CFLAGS = $(STAGE2_CFLAGS) -fprofile-generate\n STAGEprofile_TFLAGS = $(STAGE2_TFLAGS)\n \n-STAGEtrain_CFLAGS = $(STAGE3_CFLAGS)\n-STAGEtrain_TFLAGS = $(STAGE3_TFLAGS)\n+STAGEtrain_CFLAGS = $(filter-out -fchecking,$(STAGE3_CFLAGS))\n+STAGEtrain_TFLAGS = $(filter-out -fchecking,$(STAGE3_TFLAGS))\n \n STAGEfeedback_CFLAGS = $(STAGE4_CFLAGS) -fprofile-use\n STAGEfeedback_TFLAGS = $(STAGE4_TFLAGS)"}]}