{"sha": "928f04908265767255978321f42e9b2957bcb2f4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTI4ZjA0OTA4MjY1NzY3MjU1OTc4MzIxZjQyZTliMjk1N2JjYjJmNA==", "commit": {"author": {"name": "Tobias Burnus", "email": "burnus@net-b.de", "date": "2010-07-06T20:56:07Z"}, "committer": {"name": "Tobias Burnus", "email": "burnus@gcc.gnu.org", "date": "2010-07-06T20:56:07Z"}, "message": "re PR fortran/44742 (ICE in gfc_conv_array_initializer)\n\n2010-07-06  Tobias Burnus  <burnus@net-b.de>\n\n        PR fortran/44742\n        * array.c (gfc_expand_constructor): Add optional diagnostic.\n        * gfortran.h (gfc_expand_constructor): Update prototype.\n        * expr.c (gfc_simplify_expr, check_init_expr,\n        gfc_reduce_init_expr): Update gfc_expand_constructor call.\n        * resolve.c (gfc_resolve_expr): Ditto.\n\n2010-07-06  Tobias Burnus  <burnus@net-b.de>\n\n        PR fortran/44742\n        * gfortran.dg/parameter_array_init_6.f90: New.\n        * gfortran.dg/initialization_20.f90: Update dg-error.\n        * gfortran.dg/initialization_24.f90: Ditto.\n\nFrom-SVN: r161888", "tree": {"sha": "b8fbc94bf1493b37215f6ba423694942689b25f4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b8fbc94bf1493b37215f6ba423694942689b25f4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/928f04908265767255978321f42e9b2957bcb2f4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/928f04908265767255978321f42e9b2957bcb2f4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/928f04908265767255978321f42e9b2957bcb2f4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/928f04908265767255978321f42e9b2957bcb2f4/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c829d0163dc338b0c12d27c6e7aedb6da5f7f4c5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c829d0163dc338b0c12d27c6e7aedb6da5f7f4c5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c829d0163dc338b0c12d27c6e7aedb6da5f7f4c5"}], "stats": {"total": 61, "additions": 52, "deletions": 9}, "files": [{"sha": "1b60c02e6983c784de149d2119a8f82429c3ff8c", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/928f04908265767255978321f42e9b2957bcb2f4/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/928f04908265767255978321f42e9b2957bcb2f4/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=928f04908265767255978321f42e9b2957bcb2f4", "patch": "@@ -1,3 +1,12 @@\n+2010-07-06  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/44742\n+\t* array.c (gfc_expand_constructor): Add optional diagnostic.\n+\t* gfortran.h (gfc_expand_constructor): Update prototype.\n+\t* expr.c (gfc_simplify_expr, check_init_expr,\n+\tgfc_reduce_init_expr): Update gfc_expand_constructor call.\n+\t* resolve.c (gfc_resolve_expr): Ditto.\n+\n 2010-07-06  Tobias Burnus  <burnus@net-b.de>\n \n \t* trans-decl.c: Include diagnostic-core.h besides toplev.h."}, {"sha": "0c36f544e6d30532b620c6a09f89096a66b0ebd3", "filename": "gcc/fortran/array.c", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/928f04908265767255978321f42e9b2957bcb2f4/gcc%2Ffortran%2Farray.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/928f04908265767255978321f42e9b2957bcb2f4/gcc%2Ffortran%2Farray.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Farray.c?ref=928f04908265767255978321f42e9b2957bcb2f4", "patch": "@@ -1545,7 +1545,7 @@ gfc_get_array_element (gfc_expr *array, int element)\n    constructor if they are small enough.  */\n \n gfc_try\n-gfc_expand_constructor (gfc_expr *e)\n+gfc_expand_constructor (gfc_expr *e, bool fatal)\n {\n   expand_info expand_save;\n   gfc_expr *f;\n@@ -1557,6 +1557,15 @@ gfc_expand_constructor (gfc_expr *e)\n   if (f != NULL)\n     {\n       gfc_free_expr (f);\n+      if (fatal)\n+\t{\n+\t  gfc_error (\"The number of elements in the array constructor \"\n+\t\t     \"at %L requires an increase of the allowed %d \"\n+\t\t     \"upper limit.   See -fmax-array-constructor \"\n+\t\t     \"option\", &e->where,\n+\t\t     gfc_option.flag_max_array_constructor);\n+\t  return FAILURE;\n+\t}\n       return SUCCESS;\n     }\n "}, {"sha": "12a46a9cbed546b818b5399ea3bea0ccfe6caa07", "filename": "gcc/fortran/expr.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/928f04908265767255978321f42e9b2957bcb2f4/gcc%2Ffortran%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/928f04908265767255978321f42e9b2957bcb2f4/gcc%2Ffortran%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fexpr.c?ref=928f04908265767255978321f42e9b2957bcb2f4", "patch": "@@ -1894,7 +1894,7 @@ gfc_simplify_expr (gfc_expr *p, int type)\n \n       if (p->expr_type == EXPR_ARRAY && p->ref && p->ref->type == REF_ARRAY\n \t  && p->ref->u.ar.type == AR_FULL)\n-\t  gfc_expand_constructor (p);\n+\t  gfc_expand_constructor (p, false);\n \n       if (simplify_const_ref (p) == FAILURE)\n \treturn FAILURE;\n@@ -2573,7 +2573,7 @@ check_init_expr (gfc_expr *e)\n       if (t == FAILURE)\n \tbreak;\n \n-      t = gfc_expand_constructor (e);\n+      t = gfc_expand_constructor (e, true);\n       if (t == FAILURE)\n \tbreak;\n \n@@ -2609,7 +2609,7 @@ gfc_reduce_init_expr (gfc_expr *expr)\n     {\n       if (gfc_check_constructor_type (expr) == FAILURE)\n \treturn FAILURE;\n-      if (gfc_expand_constructor (expr) == FAILURE)\n+      if (gfc_expand_constructor (expr, true) == FAILURE)\n \treturn FAILURE;\n     }\n "}, {"sha": "a63f97e24bfe7ace7db429f5877747e265c5cb5a", "filename": "gcc/fortran/gfortran.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/928f04908265767255978321f42e9b2957bcb2f4/gcc%2Ffortran%2Fgfortran.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/928f04908265767255978321f42e9b2957bcb2f4/gcc%2Ffortran%2Fgfortran.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fgfortran.h?ref=928f04908265767255978321f42e9b2957bcb2f4", "patch": "@@ -2715,7 +2715,7 @@ gfc_try gfc_resolve_array_spec (gfc_array_spec *, int);\n int gfc_compare_array_spec (gfc_array_spec *, gfc_array_spec *);\n \n void gfc_simplify_iterator_var (gfc_expr *);\n-gfc_try gfc_expand_constructor (gfc_expr *);\n+gfc_try gfc_expand_constructor (gfc_expr *, bool);\n int gfc_constant_ac (gfc_expr *);\n int gfc_expanded_ac (gfc_expr *);\n gfc_try gfc_resolve_character_array_constructor (gfc_expr *);"}, {"sha": "a8ed54406552d42cf1bff9809707385c36ae04b1", "filename": "gcc/fortran/resolve.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/928f04908265767255978321f42e9b2957bcb2f4/gcc%2Ffortran%2Fresolve.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/928f04908265767255978321f42e9b2957bcb2f4/gcc%2Ffortran%2Fresolve.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fresolve.c?ref=928f04908265767255978321f42e9b2957bcb2f4", "patch": "@@ -5776,7 +5776,7 @@ gfc_resolve_expr (gfc_expr *e)\n \t{\n \t  expression_rank (e);\n \t  if (gfc_is_constant_expr (e) || gfc_is_expandable_expr (e))\n-\t    gfc_expand_constructor (e);\n+\t    gfc_expand_constructor (e, false);\n \t}\n \n       /* This provides the opportunity for the length of constructors with\n@@ -5786,7 +5786,7 @@ gfc_resolve_expr (gfc_expr *e)\n         {\n \t  /* For efficiency, we call gfc_expand_constructor for BT_CHARACTER\n \t     here rather then add a duplicate test for it above.  */ \n-\t  gfc_expand_constructor (e);\n+\t  gfc_expand_constructor (e, false);\n \t  t = gfc_resolve_character_array_constructor (e);\n \t}\n "}, {"sha": "dc297613a76cecd77d3092fcaa624f19093413c3", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/928f04908265767255978321f42e9b2957bcb2f4/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/928f04908265767255978321f42e9b2957bcb2f4/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=928f04908265767255978321f42e9b2957bcb2f4", "patch": "@@ -1,3 +1,10 @@\n+2010-07-06  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/44742\n+\t* gfortran.dg/parameter_array_init_6.f90: New.\n+\t* gfortran.dg/initialization_20.f90: Update dg-error.\n+\t* gfortran.dg/initialization_24.f90: Ditto.\n+\n 2010-07-06  Thomas Koenig  <tkoenig@gcc.gnu.org>\n \tPR fortran/PR44693\n \t* gfortran.dg/dim_range_1.f90:  New test."}, {"sha": "6af1a00a45d61b7758108ee16a046eb47220e6b9", "filename": "gcc/testsuite/gfortran.dg/initialization_20.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/928f04908265767255978321f42e9b2957bcb2f4/gcc%2Ftestsuite%2Fgfortran.dg%2Finitialization_20.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/928f04908265767255978321f42e9b2957bcb2f4/gcc%2Ftestsuite%2Fgfortran.dg%2Finitialization_20.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Finitialization_20.f90?ref=928f04908265767255978321f42e9b2957bcb2f4", "patch": "@@ -6,5 +6,5 @@ program pr19925\n   integer j\n   integer, parameter :: n = 100000\n   integer, parameter :: i(n)=(/(j,j=1,n)/) ! { dg-error \"number of elements\" }\n-  print *, i(5)\n+  print *, i(5) ! { dg-error \"has no IMPLICIT type\" }\n end program pr19925"}, {"sha": "0ab8dc624e4956d4ae8bb84131b03a62f111be2f", "filename": "gcc/testsuite/gfortran.dg/initialization_24.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/928f04908265767255978321f42e9b2957bcb2f4/gcc%2Ftestsuite%2Fgfortran.dg%2Finitialization_24.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/928f04908265767255978321f42e9b2957bcb2f4/gcc%2Ftestsuite%2Fgfortran.dg%2Finitialization_24.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Finitialization_24.f90?ref=928f04908265767255978321f42e9b2957bcb2f4", "patch": "@@ -3,7 +3,7 @@\n ! Test case by Dominique d'Humieres\n INTEGER, PARAMETER ::N=65536\n INTEGER, PARAMETER ::I(N)=(/(MOD(K,2),K=1,N)/)!{ dg-error \"number of elements\" }\n-INTEGER, PARAMETER ::M(N)=I(N:1:-1)\n+INTEGER, PARAMETER ::M(N)=I(N:1:-1) ! { dg-error \"Syntax error in argument\" }\n print *, I(1), M(1), I(N), M(N)\n END\n "}, {"sha": "9a654db3f001adf765fa826248277e0c23013d89", "filename": "gcc/testsuite/gfortran.dg/parameter_array_init_6.f90", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/928f04908265767255978321f42e9b2957bcb2f4/gcc%2Ftestsuite%2Fgfortran.dg%2Fparameter_array_init_6.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/928f04908265767255978321f42e9b2957bcb2f4/gcc%2Ftestsuite%2Fgfortran.dg%2Fparameter_array_init_6.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fparameter_array_init_6.f90?ref=928f04908265767255978321f42e9b2957bcb2f4", "patch": "@@ -0,0 +1,18 @@\n+! { dg-do compile }\n+!\n+! PR fortran/44742\n+!\n+! Test case based on Juergen Reuter's and reduced by\n+! Janus Weil.\n+!\n+! The program creates a large array constructor, which\n+! exceeds -fmax-array-constructor - and caused an ICE.\n+!\n+\n+module proc8\n+  implicit none\n+  integer, parameter :: N = 256\n+  logical, dimension(N**2), parameter :: A = .false.\n+  logical, dimension(N,N), parameter :: B &\n+    = reshape ( (/ A /), (/ N, N /) ) ! { dg-error \"array constructor at .1. requires an increase\" }\n+end module"}]}