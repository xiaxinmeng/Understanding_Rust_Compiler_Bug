{"sha": "47c2b77ffb9a2a1b5c1b8ab7ee01a258e7a9cae7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDdjMmI3N2ZmYjlhMmExYjVjMWI4YWI3ZWUwMWEyNThlN2E5Y2FlNw==", "commit": {"author": {"name": "Piotr Trojanek", "email": "trojanek@adacore.com", "date": "2020-10-14T13:49:17Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2020-11-25T13:22:42Z"}, "message": "[Ada] Document attribute Has_Tagged_Values in GNAT RM\n\ngcc/ada/\n\n\t* doc/gnat_rm/implementation_defined_attributes.rst\n\t(Has_Tagged_Values): Document based on the existing description\n\tof Has_Access_Type and the comment for Has_Tagged_Component,\n\twhich is where frontend evaluates this attribute.\n\t* gnat_rm.texi: Regenerate.\n\t* sem_attr.adb (Analyze_Attribute): Merge processing of\n\tHas_Access_Type and Has_Tagged_Component attributes.\n\t* sem_util.adb (Has_Access_Type): Fix casing in comment.\n\t* sem_util.ads (Has_Tagged_Component): Remove wrong (or\n\toutdated) comment about the use of this routine to implement the\n\tequality operator.", "tree": {"sha": "858e1ce6f8accc889e36c6db71331c142cf4cd61", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/858e1ce6f8accc889e36c6db71331c142cf4cd61"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/47c2b77ffb9a2a1b5c1b8ab7ee01a258e7a9cae7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/47c2b77ffb9a2a1b5c1b8ab7ee01a258e7a9cae7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/47c2b77ffb9a2a1b5c1b8ab7ee01a258e7a9cae7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/47c2b77ffb9a2a1b5c1b8ab7ee01a258e7a9cae7/comments", "author": {"login": "ptroja", "id": 161602, "node_id": "MDQ6VXNlcjE2MTYwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/161602?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ptroja", "html_url": "https://github.com/ptroja", "followers_url": "https://api.github.com/users/ptroja/followers", "following_url": "https://api.github.com/users/ptroja/following{/other_user}", "gists_url": "https://api.github.com/users/ptroja/gists{/gist_id}", "starred_url": "https://api.github.com/users/ptroja/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ptroja/subscriptions", "organizations_url": "https://api.github.com/users/ptroja/orgs", "repos_url": "https://api.github.com/users/ptroja/repos", "events_url": "https://api.github.com/users/ptroja/events{/privacy}", "received_events_url": "https://api.github.com/users/ptroja/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "14a16e30caecaddd7e19aabed2357cb9489d8d5c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/14a16e30caecaddd7e19aabed2357cb9489d8d5c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/14a16e30caecaddd7e19aabed2357cb9489d8d5c"}], "stats": {"total": 1003, "additions": 516, "deletions": 487}, "files": [{"sha": "32e951c980f2abd6280e9453a1e0b74b6818f9a3", "filename": "gcc/ada/doc/gnat_rm/implementation_defined_attributes.rst", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/47c2b77ffb9a2a1b5c1b8ab7ee01a258e7a9cae7/gcc%2Fada%2Fdoc%2Fgnat_rm%2Fimplementation_defined_attributes.rst", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/47c2b77ffb9a2a1b5c1b8ab7ee01a258e7a9cae7/gcc%2Fada%2Fdoc%2Fgnat_rm%2Fimplementation_defined_attributes.rst", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fdoc%2Fgnat_rm%2Fimplementation_defined_attributes.rst?ref=47c2b77ffb9a2a1b5c1b8ab7ee01a258e7a9cae7", "patch": "@@ -483,6 +483,19 @@ otherwise.  The intended use of this attribute is in conjunction with generic\n definitions.  If the attribute is applied to a generic private type, it\n indicates whether or not the corresponding actual type has discriminants.\n \n+Attribute Has_Tagged_Values\n+===========================\n+.. index:: Tagged values, testing for\n+\n+.. index:: Has_Tagged_Values\n+\n+The prefix of the ``Has_Tagged_Values`` attribute is a type. The result is a\n+Boolean value which is True if the type is a composite type (array or record)\n+that is either a tagged type or has a subcomponent that is tagged, and is False\n+otherwise. The intended use of this attribute is in conjunction with generic\n+definitions. If the attribute is applied to a generic private type, it\n+indicates whether or not the corresponding actual type has access values.\n+\n Attribute Img\n =============\n .. index:: Img"}, {"sha": "1169f85a02b0e1789f9c818334bc6ca0a4e2c140", "filename": "gcc/ada/gnat_rm.texi", "status": "modified", "additions": 496, "deletions": 477, "changes": 973, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/47c2b77ffb9a2a1b5c1b8ab7ee01a258e7a9cae7/gcc%2Fada%2Fgnat_rm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/47c2b77ffb9a2a1b5c1b8ab7ee01a258e7a9cae7/gcc%2Fada%2Fgnat_rm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_rm.texi?ref=47c2b77ffb9a2a1b5c1b8ab7ee01a258e7a9cae7"}, {"sha": "42e984405cada6d5cc3996a3b2cf1042f3eddd2e", "filename": "gcc/ada/sem_attr.adb", "status": "modified", "additions": 5, "deletions": 6, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/47c2b77ffb9a2a1b5c1b8ab7ee01a258e7a9cae7/gcc%2Fada%2Fsem_attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/47c2b77ffb9a2a1b5c1b8ab7ee01a258e7a9cae7/gcc%2Fada%2Fsem_attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_attr.adb?ref=47c2b77ffb9a2a1b5c1b8ab7ee01a258e7a9cae7", "patch": "@@ -3868,7 +3868,7 @@ package body Sem_Attr is\n       -- Elab_Spec --\n       ---------------\n \n-      --  Shares processing with Elab_Body\n+      --  Shares processing with Elab_Body attribute\n \n       ----------------\n       -- Elaborated --\n@@ -4118,7 +4118,9 @@ package body Sem_Attr is\n       -- Has_Access_Values --\n       -----------------------\n \n-      when Attribute_Has_Access_Values =>\n+      when Attribute_Has_Access_Values\n+         | Attribute_Has_Tagged_Values\n+      =>\n          Check_Type;\n          Check_E0;\n          Set_Etype (N, Standard_Boolean);\n@@ -4142,10 +4144,7 @@ package body Sem_Attr is\n       -- Has_Tagged_Values --\n       -----------------------\n \n-      when Attribute_Has_Tagged_Values =>\n-         Check_Type;\n-         Check_E0;\n-         Set_Etype (N, Standard_Boolean);\n+      --  Shares processing with Has_Access_Values attribute\n \n       -----------------------\n       -- Has_Discriminants --"}, {"sha": "4f2df8e1fb9f3df547d911f207fc96707e3588f9", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/47c2b77ffb9a2a1b5c1b8ab7ee01a258e7a9cae7/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/47c2b77ffb9a2a1b5c1b8ab7ee01a258e7a9cae7/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=47c2b77ffb9a2a1b5c1b8ab7ee01a258e7a9cae7", "patch": "@@ -11396,7 +11396,7 @@ package body Sem_Util is\n             Comp : Entity_Id;\n \n          begin\n-            --  Loop to Check components\n+            --  Loop to check components\n \n             Comp := First_Component_Or_Discriminant (Typ);\n             while Present (Comp) loop"}, {"sha": "b2af43a7406f4d03ead5835bb0fd9e1890bf99be", "filename": "gcc/ada/sem_util.ads", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/47c2b77ffb9a2a1b5c1b8ab7ee01a258e7a9cae7/gcc%2Fada%2Fsem_util.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/47c2b77ffb9a2a1b5c1b8ab7ee01a258e7a9cae7/gcc%2Fada%2Fsem_util.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.ads?ref=47c2b77ffb9a2a1b5c1b8ab7ee01a258e7a9cae7", "patch": "@@ -1503,9 +1503,7 @@ package Sem_Util is\n    function Has_Tagged_Component (Typ : Entity_Id) return Boolean;\n    --  Returns True if Typ is a composite type (array or record) that is either\n    --  a tagged type or has a subcomponent that is tagged. Returns False for a\n-   --  noncomposite type, or if no tagged subcomponents are present. This\n-   --  function is used to check if \"=\" has to be expanded into a bunch\n-   --  component comparisons.\n+   --  noncomposite type, or if no tagged subcomponents are present.\n \n    function Has_Unconstrained_Access_Discriminants\n      (Subtyp : Entity_Id) return Boolean;"}]}