{"sha": "b384405b341a1539bf3b10b4ce5a99f2ed389630", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjM4NDQwNWIzNDFhMTUzOWJmM2IxMGI0Y2U1YTk5ZjJlZDM4OTYzMA==", "commit": {"author": {"name": "Bernd Schmidt", "email": "bernds@cygnus.co.uk", "date": "1999-07-31T12:46:53Z"}, "committer": {"name": "Bernd Schmidt", "email": "crux@gcc.gnu.org", "date": "1999-07-31T12:46:53Z"}, "message": "Backport of GC branch patches part 1: kill eh status saving.\n\nFrom-SVN: r28357", "tree": {"sha": "286c1d2fa0096b032809b04fe3925b118bc31fd7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/286c1d2fa0096b032809b04fe3925b118bc31fd7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b384405b341a1539bf3b10b4ce5a99f2ed389630", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b384405b341a1539bf3b10b4ce5a99f2ed389630", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b384405b341a1539bf3b10b4ce5a99f2ed389630", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b384405b341a1539bf3b10b4ce5a99f2ed389630/comments", "author": null, "committer": null, "parents": [{"sha": "6261ede720fc024883ad4942dfbe68f943fe4462", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6261ede720fc024883ad4942dfbe68f943fe4462", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6261ede720fc024883ad4942dfbe68f943fe4462"}], "stats": {"total": 1281, "additions": 644, "deletions": 637}, "files": [{"sha": "572cb9a3a0c53587e3a049af1ed588608b7865e1", "filename": "gcc/ChangeLog", "status": "modified", "additions": 44, "deletions": 0, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b384405b341a1539bf3b10b4ce5a99f2ed389630/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b384405b341a1539bf3b10b4ce5a99f2ed389630/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b384405b341a1539bf3b10b4ce5a99f2ed389630", "patch": "@@ -1,3 +1,47 @@\n+Sat Jul 31 11:10:07 1999  Bernd Schmidt  <bernds@cygnus.co.uk>\n+\n+\t* c-pragma.c: Don't include \"except.h\".\n+\t* emit-rtl.c: Likewise.\n+\t* stor-layout.c: Likewise.\n+\t* tree.c: Likewise.\n+\t* varasm.c: Likewise.\n+\n+\t* flow.c: Include \"function.h\".\n+\t* tree.h (init_dummy_function_start): Declare new function.\n+\t\n+\t* except.h (struct eh_status): New structure.\n+\t(struct label_node, struct eh_entry): Declare even if tree.h hasn't\n+\tbeen included.\n+\t(eh_return_stub_label, ehstack, catchstack, ehqueue,\n+\tcatch_clauses, false_label_stack, caught_return_label_stack,\n+\tprotect_list, current_function_ehc): Add accessor macros for the\n+\tcorresponding fields in current_function->eh; delete declarations\n+\tfor all items that used to be declared here.\n+\t* except.c (eh_return_stub_label, ehstack, catchstack, ehqueue,\n+\tcatch_clauses, false_label_stack, caught_return_label_stack,\n+\tprotect_list, current_function_ehc): Delete variables.\n+\t(init_eh_for_function): Allocate current_function->eh.\n+\t(save_eh_status, restore_eh_status): Delete functions.\n+\n+\t* function.h (struct function): Add fields next_global and eh.\n+\tDelete all exception handling related fields.\n+\t* function.c (current_function): New variable.\n+\t(all_functions): New variable.\n+\t(push_function_context_to): Don't allocate a struct function,\n+\tuse current_function instead.  Call init_dummy_function_start when\n+\toutside a function.  Clear current_function before returning.\n+\t(pop_function_context_from): Restore current_function.\n+\tDon't free the restored struct function.\t\n+\t(prepare_function_start): New function.\n+\t(init_dummy_function_start): New function.\n+\t(init_function_start): Break out some code into prepare_function_start\n+\tand call it here.\n+\n+\t* stmt.c (save_stmt_status): Don't call save_eh_status.\n+\t(restore_stmt_status): Don't call restore_eh_status.\n+\n+\t* Makefile.in: Update dependencies.\n+\n Sat Jul 31 04:10:01 1999  Jeffrey A Law  (law@cygnus.com)\n \n \t* pa.c (compute_frame_size): Use STARTINg_FRAME_OFFSET instead"}, {"sha": "591afa265197648dc9b6186a56e0e65f9fd083e5", "filename": "gcc/Makefile.in", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b384405b341a1539bf3b10b4ce5a99f2ed389630/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b384405b341a1539bf3b10b4ce5a99f2ed389630/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=b384405b341a1539bf3b10b4ce5a99f2ed389630", "patch": "@@ -1348,8 +1348,8 @@ c-lex.o : c-lex.c $(CONFIG_H) system.h $(TREE_H) $(RTL_H) c-lex.h c-tree.h \\\n c-aux-info.o : c-aux-info.c  $(CONFIG_H) system.h $(TREE_H) c-tree.h \\\n     c-common.h flags.h toplev.h\n c-convert.o : c-convert.c $(CONFIG_H) system.h $(TREE_H) flags.h toplev.h\n-c-pragma.o: c-pragma.c $(CONFIG_H) system.h $(RTL_H) $(TREE_H) except.h \\\n-    function.h defaults.h c-pragma.h toplev.h\n+c-pragma.o: c-pragma.c $(CONFIG_H) system.h $(RTL_H) $(TREE_H) function.h \\\n+    defaults.h c-pragma.h toplev.h\n c-iterate.o: c-iterate.c $(CONFIG_H) system.h $(TREE_H) $(RTL_H) c-tree.h \\\n     c-common.h flags.h toplev.h $(EXPR_H)\n mbchar.o: mbchar.c $(CONFIG_H) system.h mbchar.h\n@@ -1449,10 +1449,10 @@ prefix.o: prefix.c $(CONFIG_H) system.h Makefile prefix.h\n \n convert.o: convert.c $(CONFIG_H) $(TREE_H) flags.h convert.h toplev.h\n \n-tree.o : tree.c $(CONFIG_H) system.h $(TREE_H) flags.h function.h toplev.h except.h\n+tree.o : tree.c $(CONFIG_H) system.h $(TREE_H) flags.h function.h toplev.h\n print-tree.o : print-tree.c $(CONFIG_H) system.h $(TREE_H)\n stor-layout.o : stor-layout.c $(CONFIG_H) system.h $(TREE_H) flags.h \\\n-   function.h $(EXPR_H) $(RTL_H) toplev.h except.h\n+   function.h $(EXPR_H) $(RTL_H) toplev.h\n fold-const.o : fold-const.c $(CONFIG_H) system.h $(TREE_H) flags.h toplev.h \\\n    $(RTL_H)\n toplev.o : toplev.c $(CONFIG_H) system.h $(TREE_H) $(RTL_H) \\\n@@ -1471,7 +1471,7 @@ rtlanal.o : rtlanal.c $(CONFIG_H) system.h $(RTL_H)\n \n varasm.o : varasm.c $(CONFIG_H) system.h $(TREE_H) $(RTL_H) flags.h \\\n    function.h defaults.h $(EXPR_H) hard-reg-set.h $(REGS_H) \\\n-   xcoffout.h output.h c-pragma.h toplev.h except.h dbxout.h sdbout.h\n+   xcoffout.h output.h c-pragma.h toplev.h dbxout.h sdbout.h\n function.o : function.c $(CONFIG_H) system.h $(RTL_H) $(TREE_H) flags.h \\\n    function.h insn-flags.h insn-codes.h $(EXPR_H) $(REGS_H) hard-reg-set.h \\\n    insn-config.h $(RECOG_H) output.h toplev.h except.h hash.h\n@@ -1513,7 +1513,7 @@ dwarf2out.o : dwarf2out.c $(CONFIG_H) system.h $(TREE_H) $(RTL_H) dwarf2.h \\\n xcoffout.o : xcoffout.c $(CONFIG_H) system.h $(TREE_H) $(RTL_H) xcoffout.h \\\n    flags.h toplev.h output.h dbxout.h\n emit-rtl.o : emit-rtl.c $(CONFIG_H) system.h $(RTL_H) $(TREE_H) flags.h \\\n-   except.h function.h $(REGS_H) insn-config.h $(RECOG_H) real.h \\\n+   function.h $(REGS_H) insn-config.h $(RECOG_H) real.h \\\n    $(EXPR_H) $(srcdir)/../include/obstack.h hard-reg-set.h bitmap.h toplev.h\n real.o : real.c $(CONFIG_H) system.h $(TREE_H) toplev.h\n getpwd.o : getpwd.c $(CONFIG_H) system.h\n@@ -1547,7 +1547,7 @@ unroll.o : unroll.c $(CONFIG_H) system.h $(RTL_H) insn-config.h \\\n    integrate.h $(REGS_H) $(RECOG_H) flags.h $(EXPR_H) loop.h toplev.h varray.h\n flow.o : flow.c $(CONFIG_H) system.h $(RTL_H) flags.h insn-config.h \\\n    $(BASIC_BLOCK_H) $(REGS_H) hard-reg-set.h output.h toplev.h recog.h \\\n-   insn-flags.h\n+   insn-flags.h function.h\n combine.o : combine.c $(CONFIG_H) system.h $(RTL_H) flags.h  \\\n    insn-config.h insn-flags.h insn-codes.h insn-attr.h $(REGS_H) $(EXPR_H) \\\n    $(BASIC_BLOCK_H) $(RECOG_H) real.h hard-reg-set.h toplev.h"}, {"sha": "017bdefbc9520a747730b6465d98d563a863dcb2", "filename": "gcc/c-pragma.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b384405b341a1539bf3b10b4ce5a99f2ed389630/gcc%2Fc-pragma.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b384405b341a1539bf3b10b4ce5a99f2ed389630/gcc%2Fc-pragma.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-pragma.c?ref=b384405b341a1539bf3b10b4ce5a99f2ed389630", "patch": "@@ -22,7 +22,6 @@ Boston, MA 02111-1307, USA.  */\n #include \"system.h\"\n #include \"rtl.h\"\n #include \"tree.h\"\n-#include \"except.h\"\n #include \"function.h\"\n #include \"defaults.h\"\n #include \"c-pragma.h\""}, {"sha": "a6f75c53f3d373992f12dd49242d90e874dd5087", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b384405b341a1539bf3b10b4ce5a99f2ed389630/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b384405b341a1539bf3b10b4ce5a99f2ed389630/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=b384405b341a1539bf3b10b4ce5a99f2ed389630", "patch": "@@ -1,3 +1,7 @@\n+1999-07-31  Bernd Schmidt  <bernds@cygnus.co.uk>\n+\n+\t* except.c (catch_clauses): Delete declaration.\n+\n 1999-07-30  Mark Mitchell  <mark@codesourcery.com>\n \n \t* call.c (build_conditional_expr): Call convert_from_reference to"}, {"sha": "e5afb897177da30a66b597c92cf1c6880e167a33", "filename": "gcc/cp/except.c", "status": "modified", "additions": 0, "deletions": 11, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b384405b341a1539bf3b10b4ce5a99f2ed389630/gcc%2Fcp%2Fexcept.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b384405b341a1539bf3b10b4ce5a99f2ed389630/gcc%2Fcp%2Fexcept.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fexcept.c?ref=b384405b341a1539bf3b10b4ce5a99f2ed389630", "patch": "@@ -169,17 +169,6 @@ static tree Unwind;\n \n /* ========================================================================= */\n \n-\n-\n-/* local globals - these local globals are for storing data necessary for\n-   generating the exception table and code in the correct order.\n-\n-   ========================================================================= */\n-\n-extern rtx catch_clauses;\n-\n-/* ========================================================================= */\n-\n /* sets up all the global eh stuff that needs to be initialized at the\n    start of compilation.\n "}, {"sha": "43fa8d9ba50aff2db48d7c5c01c9a338c2cf28a1", "filename": "gcc/emit-rtl.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b384405b341a1539bf3b10b4ce5a99f2ed389630/gcc%2Femit-rtl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b384405b341a1539bf3b10b4ce5a99f2ed389630/gcc%2Femit-rtl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Femit-rtl.c?ref=b384405b341a1539bf3b10b4ce5a99f2ed389630", "patch": "@@ -40,7 +40,6 @@ Boston, MA 02111-1307, USA.  */\n #include \"rtl.h\"\n #include \"tree.h\"\n #include \"flags.h\"\n-#include \"except.h\"\n #include \"function.h\"\n #include \"expr.h\"\n #include \"regs.h\""}, {"sha": "85fb0ac9145b4a4a5a9343fa856414b1050a9033", "filename": "gcc/except.c", "status": "modified", "additions": 2, "deletions": 111, "changes": 113, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b384405b341a1539bf3b10b4ce5a99f2ed389630/gcc%2Fexcept.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b384405b341a1539bf3b10b4ce5a99f2ed389630/gcc%2Fexcept.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexcept.c?ref=b384405b341a1539bf3b10b4ce5a99f2ed389630", "patch": "@@ -428,82 +428,18 @@ int protect_cleanup_actions_with_terminate;\n \n rtx exception_handler_labels;\n \n-/* The EH context.  Nonzero if the function has already\n-   fetched a pointer to the EH context  for exception handling.  */\n-\n-rtx current_function_ehc;\n-\n-/* A stack used for keeping track of the currently active exception\n-   handling region.  As each exception region is started, an entry\n-   describing the region is pushed onto this stack.  The current\n-   region can be found by looking at the top of the stack, and as we\n-   exit regions, the corresponding entries are popped. \n-\n-   Entries cannot overlap; they can be nested. So there is only one\n-   entry at most that corresponds to the current instruction, and that\n-   is the entry on the top of the stack.  */\n-\n-static struct eh_stack ehstack;\n-\n-\n-/* This stack is used to represent what the current eh region is\n-   for the catch blocks beings processed */\n-\n-static struct eh_stack catchstack;\n-\n-/* A queue used for tracking which exception regions have closed but\n-   whose handlers have not yet been expanded. Regions are emitted in\n-   groups in an attempt to improve paging performance.\n-\n-   As we exit a region, we enqueue a new entry. The entries are then\n-   dequeued during expand_leftover_cleanups and expand_start_all_catch,\n-\n-   We should redo things so that we either take RTL for the handler,\n-   or we expand the handler expressed as a tree immediately at region\n-   end time.  */\n-\n-static struct eh_queue ehqueue;\n-\n-/* Insns for all of the exception handlers for the current function.\n-   They are currently emitted by the frontend code.  */\n-\n-rtx catch_clauses;\n-\n-/* A TREE_CHAINed list of handlers for regions that are not yet\n-   closed. The TREE_VALUE of each entry contains the handler for the\n-   corresponding entry on the ehstack.  */\n-\n-static tree protect_list;\n-\n-/* Stacks to keep track of various labels.  */\n-\n-/* Keeps track of the label to resume to should one want to resume\n-   normal control flow out of a handler (instead of, say, returning to\n-   the caller of the current function or exiting the program).  */\n-\n-struct label_node *caught_return_label_stack = NULL;\n-\n /* Keeps track of the label used as the context of a throw to rethrow an\n    exception to the outer exception region.  */\n \n struct label_node *outer_context_label_stack = NULL;\n \n-/* A random data area for the front end's own use.  */\n-\n-struct label_node *false_label_stack = NULL;\n-\n /* Pseudos used to hold exception return data in the interim between\n    __builtin_eh_return and the end of the function.  */\n \n static rtx eh_return_context;\n static rtx eh_return_stack_adjust;\n static rtx eh_return_handler;\n \n-/* Used to mark the eh return stub for flow, so that the Right Thing\n-   happens with the values for the hardregs therin.  */\n-\n-rtx eh_return_stub_label;\n-\n /* This is used for targets which can call rethrow with an offset instead\n    of an address. This is subtracted from the rethrow label we are\n    interested in. */\n@@ -2415,6 +2351,8 @@ init_eh ()\n void\n init_eh_for_function ()\n {\n+  current_function->eh = (struct eh_status *) xmalloc (sizeof (struct eh_status));\n+\n   ehstack.top = 0;\n   catchstack.top = 0;\n   ehqueue.head = ehqueue.tail = 0;\n@@ -2428,53 +2366,6 @@ init_eh_for_function ()\n   eh_return_handler = NULL_RTX;\n   eh_return_stub_label = NULL_RTX;\n }\n-\n-/* Save some of the per-function EH info into the save area denoted by\n-   P. \n-\n-   This is currently called from save_stmt_status.  */\n-\n-void\n-save_eh_status (p)\n-     struct function *p;\n-{\n-  if (p == NULL)\n-    abort ();\n-\n-  p->ehstack = ehstack;\n-  p->catchstack = catchstack;\n-  p->ehqueue = ehqueue;\n-  p->catch_clauses = catch_clauses;\n-  p->false_label_stack = false_label_stack;\n-  p->caught_return_label_stack = caught_return_label_stack;\n-  p->protect_list = protect_list;\n-  p->ehc = current_function_ehc;\n-  p->eh_return_stub_label = eh_return_stub_label;\n-\n-  init_eh_for_function ();\n-}\n-\n-/* Restore the per-function EH info saved into the area denoted by P.  \n-\n-   This is currently called from restore_stmt_status.  */\n-\n-void\n-restore_eh_status (p)\n-     struct function *p;\n-{\n-  if (p == NULL)\n-    abort ();\n-\n-  protect_list = p->protect_list;\n-  caught_return_label_stack = p->caught_return_label_stack;\n-  false_label_stack = p->false_label_stack;\n-  catch_clauses\t= p->catch_clauses;\n-  ehqueue = p->ehqueue;\n-  ehstack = p->ehstack;\n-  catchstack = p->catchstack;\n-  current_function_ehc = p->ehc;\n-  eh_return_stub_label = p->eh_return_stub_label;\n-}\n \f\n /* This section is for the exception handling specific optimization\n    pass.  First are the internal routines, and then the main"}, {"sha": "2e3e794f7f3e28b3790ca406fff701538442290b", "filename": "gcc/except.h", "status": "modified", "additions": 62, "deletions": 18, "changes": 80, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b384405b341a1539bf3b10b4ce5a99f2ed389630/gcc%2Fexcept.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b384405b341a1539bf3b10b4ce5a99f2ed389630/gcc%2Fexcept.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexcept.h?ref=b384405b341a1539bf3b10b4ce5a99f2ed389630", "patch": "@@ -24,10 +24,6 @@ typedef struct rtx_def *_except_rtx;\n #define rtx _except_rtx\n #endif\n \n-/* The label generated by expand_builtin_eh_return.  */\n-\n-extern rtx eh_return_stub_label;\n-\n #ifdef TREE_CODE\n \n /* A stack of labels. CHAIN points to the next entry in the stack.  */\n@@ -67,6 +63,10 @@ struct eh_entry {\n   rtx false_label;\n   rtx rethrow_label;\n };\n+#else\n+struct label_node;\n+struct eh_entry;\n+#endif\n \n /* A list of EH_ENTRYs. ENTRY is the entry; CHAIN points to the next\n    entry in the list, or is NULL if this is the last entry.  */\n@@ -92,6 +92,64 @@ struct eh_queue {\n   struct eh_node *tail;\n };\n \n+/* Used to save exception handling status for each function.  */\n+struct eh_status\n+{\n+  /* A stack used for keeping track of the currently active exception\n+     handling region.  As each exception region is started, an entry\n+     describing the region is pushed onto this stack.  The current\n+     region can be found by looking at the top of the stack, and as we\n+     exit regions, the corresponding entries are popped. \n+\n+     Entries cannot overlap; they can be nested. So there is only one\n+     entry at most that corresponds to the current instruction, and that\n+     is the entry on the top of the stack.  */\n+  struct eh_stack x_ehstack;\n+  /* This stack is used to represent what the current eh region is\n+     for the catch blocks beings processed */\n+  struct eh_stack x_catchstack;\n+  /* A queue used for tracking which exception regions have closed but\n+     whose handlers have not yet been expanded. Regions are emitted in\n+     groups in an attempt to improve paging performance.\n+\n+     As we exit a region, we enqueue a new entry. The entries are then\n+     dequeued during expand_leftover_cleanups and expand_start_all_catch,\n+\n+     We should redo things so that we either take RTL for the handler,\n+     or we expand the handler expressed as a tree immediately at region\n+     end time.  */\n+  struct eh_queue x_ehqueue;\n+  /* Insns for all of the exception handlers for the current function.\n+     They are currently emitted by the frontend code.  */\n+  rtx x_catch_clauses;\n+  /* A random data area for the front end's own use.  */\n+  struct label_node *x_false_label_stack;\n+  /* Keeps track of the label to resume to should one want to resume\n+     normal control flow out of a handler (instead of, say, returning to\n+     the caller of the current function or exiting the program).  */\n+  struct label_node *x_caught_return_label_stack;\n+  /* A TREE_CHAINed list of handlers for regions that are not yet\n+     closed. The TREE_VALUE of each entry contains the handler for the\n+     corresponding entry on the ehstack.  */\n+  union tree_node *x_protect_list;\n+  /* The EH context.  Nonzero if the function has already\n+     fetched a pointer to the EH context  for exception handling.  */\n+  rtx ehc;\n+  /* The label generated by expand_builtin_eh_return.  */\n+  rtx x_eh_return_stub_label;\n+};\n+\n+#define ehstack (current_function->eh->x_ehstack)\n+#define catchstack (current_function->eh->x_catchstack)\n+#define ehqueue (current_function->eh->x_ehqueue)\n+#define catch_clauses (current_function->eh->x_catch_clauses)\n+#define false_label_stack (current_function->eh->x_false_label_stack)\n+#define caught_return_label_stack (current_function->eh->x_caught_return_label_stack)\n+#define protect_list (current_function->eh->x_protect_list)\n+#define current_function_ehc (current_function->eh->ehc)\n+#define eh_return_stub_label (current_function->eh->x_eh_return_stub_label)\n+\n+#ifdef TREE_CODE\n /* Start an exception handling region.  All instructions emitted after\n    this point are considered to be part of the region until\n    expand_eh_region_end () is invoked.  */\n@@ -145,11 +203,6 @@ extern rtx pop_label_entry\t\t\tPROTO((struct label_node **labelstack));\n \n extern tree top_label_entry\t\t\tPROTO((struct label_node **labelstack));\n \n-/* A set of insns for the catch clauses in the current function. They\n-   will be emitted at the end of the current function.  */\n-\n-extern rtx catch_clauses;\n-\n #endif\n \n /* Test: is exception handling turned on? */\n@@ -318,20 +371,11 @@ extern int is_exception_handler_label           PROTO((int));\n \n extern void check_exception_handler_labels\tPROTO((void));\n \n-/* A stack used to keep track of the label used to resume normal program\n-   flow out of the current exception handler region.  */\n-\n-extern struct label_node *caught_return_label_stack;\n-\n /* Keeps track of the label used as the context of a throw to rethrow an\n    exception to the outer exception region.  */\n \n extern struct label_node *outer_context_label_stack;\n \n-/* A random area used for purposes elsewhere.  */\n-\n-extern struct label_node *false_label_stack;\n-\n /* A list of labels used for exception handlers. It is created by\n    find_exception_handler_labels for the optimization passes.  */\n "}, {"sha": "7ec0832f0c67ea43435c999fc1e703c36b2d783c", "filename": "gcc/flow.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b384405b341a1539bf3b10b4ce5a99f2ed389630/gcc%2Fflow.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b384405b341a1539bf3b10b4ce5a99f2ed389630/gcc%2Fflow.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fflow.c?ref=b384405b341a1539bf3b10b4ce5a99f2ed389630", "patch": "@@ -127,6 +127,7 @@ Boston, MA 02111-1307, USA.  */\n #include \"hard-reg-set.h\"\n #include \"flags.h\"\n #include \"output.h\"\n+#include \"function.h\"\n #include \"except.h\"\n #include \"toplev.h\"\n #include \"recog.h\""}, {"sha": "cf4ed867a985e5651957466b9bd71b9862b9e058", "filename": "gcc/function.c", "status": "modified", "additions": 73, "deletions": 40, "changes": 113, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b384405b341a1539bf3b10b4ce5a99f2ed389630/gcc%2Ffunction.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b384405b341a1539bf3b10b4ce5a99f2ed389630/gcc%2Ffunction.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffunction.c?ref=b384405b341a1539bf3b10b4ce5a99f2ed389630", "patch": "@@ -370,6 +370,12 @@ void (*restore_machine_status) PROTO((struct function *));\n \n extern int rtx_equal_function_value_matters;\n extern tree sequence_rtl_expr;\n+\n+/* The currently compiled function.  */\n+struct function *current_function = 0;\n+\n+/* Global list of all compiled functions.  */\n+struct function *all_functions = 0;\n \f\n /* In order to evaluate some expressions, such as function calls returning\n    structures in memory, we need to temporarily allocate stack locations.\n@@ -551,7 +557,11 @@ void\n push_function_context_to (context)\n      tree context;\n {\n-  struct function *p = (struct function *) xmalloc (sizeof (struct function));\n+  struct function *p;\n+\n+  if (current_function == 0)\n+    init_dummy_function_start ();\n+  p = current_function;\n \n   p->next = outer_function_chain;\n   outer_function_chain = p;\n@@ -620,6 +630,8 @@ push_function_context_to (context)\n   save_varasm_status (p, context);\n   if (save_machine_status)\n     (*save_machine_status) (p);\n+\n+  current_function = 0;\n }\n \n void\n@@ -638,6 +650,7 @@ pop_function_context_from (context)\n   struct function *p = outer_function_chain;\n   struct var_refs_queue *queue;\n \n+  current_function = p;\n   outer_function_chain = p->next;\n \n   current_function_contains_functions\n@@ -714,8 +727,6 @@ pop_function_context_from (context)\n     fixup_var_refs (queue->modified, queue->promoted_mode,\n \t\t    queue->unsignedp, 0);\n \n-  free (p);\n-\n   /* Reset variables that have known state during rtx generation.  */\n   rtx_equal_function_value_matters = 1;\n   virtuals_instantiated = 0;\n@@ -5869,16 +5880,12 @@ all_blocks (block, vector)\n   return n_blocks;\n }\n \f\n-/* Generate RTL for the start of the function SUBR (a FUNCTION_DECL tree node)\n-   and initialize static variables for generating RTL for the statements\n-   of the function.  */\n-\n-void\n-init_function_start (subr, filename, line)\n-     tree subr;\n-     char *filename;\n-     int line;\n+/* Allocate a function structure and reset its contents to the defaults.  */\n+static void\n+prepare_function_start ()\n {\n+  current_function = (struct function *) xcalloc (1, sizeof (struct function));\n+  \n   init_stmt_for_function ();\n \n   cse_not_expected = ! optimize;\n@@ -5889,6 +5896,9 @@ init_function_start (subr, filename, line)\n   /* No stack slots have been made yet.  */\n   stack_slot_list = 0;\n \n+  current_function_has_nonlocal_label = 0;\n+  current_function_has_nonlocal_goto = 0;\n+\n   /* There is no stack slot for handling nonlocal gotos.  */\n   nonlocal_goto_handler_slots = 0;\n   nonlocal_goto_stack_level = 0;\n@@ -5910,29 +5920,19 @@ init_function_start (subr, filename, line)\n   /* Initialize the queue of pending postincrement and postdecrements,\n      and some other info in expr.c.  */\n   init_expr ();\n-\n+  \n   /* We haven't done register allocation yet.  */\n   reg_renumber = 0;\n \n   init_const_rtx_hash_table ();\n \n-  current_function_name = (*decl_printable_name) (subr, 2);\n-\n-  /* Nonzero if this is a nested function that uses a static chain.  */\n-\n-  current_function_needs_context\n-    = (decl_function_context (current_function_decl) != 0\n-       && ! DECL_NO_STATIC_CHAIN (current_function_decl));\n-\n   /* Set if a call to setjmp is seen.  */\n   current_function_calls_setjmp = 0;\n \n   /* Set if a call to longjmp is seen.  */\n   current_function_calls_longjmp = 0;\n \n   current_function_calls_alloca = 0;\n-  current_function_has_nonlocal_label = 0;\n-  current_function_has_nonlocal_goto = 0;\n   current_function_contains_functions = 0;\n   current_function_is_leaf = 0;\n   current_function_sp_is_unchanging = 0;\n@@ -5951,7 +5951,6 @@ init_function_start (subr, filename, line)\n   tail_recursion_label = 0;\n \n   /* We haven't had a need to make a save area for ap yet.  */\n-\n   arg_pointer_save_area = 0;\n \n   /* No stack slots allocated yet.  */\n@@ -5966,8 +5965,19 @@ init_function_start (subr, filename, line)\n   /* Set up to allocate temporaries.  */\n   init_temp_slots ();\n \n-  /* Within function body, compute a type's size as soon it is laid out.  */\n-  immediate_size_expand++;\n+  /* Indicate that we need to distinguish between the return value of the\n+     present function and the return value of a function being called.  */\n+  rtx_equal_function_value_matters = 1;\n+\n+  /* Indicate that we have not instantiated virtual registers yet.  */\n+  virtuals_instantiated = 0;\n+\n+  /* Indicate we have no need of a frame pointer yet.  */\n+  frame_pointer_needed = 0;\n+\n+  /* By default assume not varargs or stdarg.  */\n+  current_function_varargs = 0;\n+  current_function_stdarg = 0;\n \n   /* We haven't made any trampolines for this function yet.  */\n   trampoline_list = 0;\n@@ -5976,6 +5986,43 @@ init_function_start (subr, filename, line)\n   inhibit_defer_pop = 0;\n \n   current_function_outgoing_args_size = 0;\n+}\n+\n+/* Initialize the rtl expansion mechanism so that we can do simple things\n+   like generate sequences.  This is used to provide a context during global\n+   initialization of some passes.  */\n+void\n+init_dummy_function_start ()\n+{\n+  prepare_function_start ();\n+}\n+\n+/* Generate RTL for the start of the function SUBR (a FUNCTION_DECL tree node)\n+   and initialize static variables for generating RTL for the statements\n+   of the function.  */\n+\n+void\n+init_function_start (subr, filename, line)\n+     tree subr;\n+     char *filename;\n+     int line;\n+{\n+  prepare_function_start ();\n+\n+  /* Remember this function for later.  */\n+  current_function->next_global = all_functions;\n+  all_functions = current_function;\n+\n+  current_function_name = (*decl_printable_name) (subr, 2);\n+\n+  /* Nonzero if this is a nested function that uses a static chain.  */\n+\n+  current_function_needs_context\n+    = (decl_function_context (current_function_decl) != 0\n+       && ! DECL_NO_STATIC_CHAIN (current_function_decl));\n+\n+  /* Within function body, compute a type's size as soon it is laid out.  */\n+  immediate_size_expand++;\n \n   /* Prevent ever trying to delete the first instruction of a function.\n      Also tell final how to output a linenum before the function prologue.\n@@ -6005,20 +6052,6 @@ init_function_start (subr, filename, line)\n \n   current_function_returns_pointer\n     = POINTER_TYPE_P (TREE_TYPE (DECL_RESULT (subr)));\n-\n-  /* Indicate that we need to distinguish between the return value of the\n-     present function and the return value of a function being called.  */\n-  rtx_equal_function_value_matters = 1;\n-\n-  /* Indicate that we have not instantiated virtual registers yet.  */\n-  virtuals_instantiated = 0;\n-\n-  /* Indicate we have no need of a frame pointer yet.  */\n-  frame_pointer_needed = 0;\n-\n-  /* By default assume not varargs or stdarg.  */\n-  current_function_varargs = 0;\n-  current_function_stdarg = 0;\n }\n \n /* Indicate that the current function uses extra args"}, {"sha": "03ff02fbc0372f3ef6c48395af4a80c115999f68", "filename": "gcc/function.h", "status": "modified", "additions": 6, "deletions": 11, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b384405b341a1539bf3b10b4ce5a99f2ed389630/gcc%2Ffunction.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b384405b341a1539bf3b10b4ce5a99f2ed389630/gcc%2Ffunction.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffunction.h?ref=b384405b341a1539bf3b10b4ce5a99f2ed389630", "patch": "@@ -64,8 +64,11 @@ struct simple_obstack_stack\n \n struct function\n {\n+  struct function *next_global;\n   struct function *next;\n \n+  struct eh_status *eh;\n+\n   /* For function.c.  */\n   char *name;\n   tree decl;\n@@ -137,17 +140,6 @@ struct function\n   int emit_lineno;\n   struct goto_fixup *goto_fixup_chain;\n \n-  /* For exception handling information.  */\n-  struct eh_stack ehstack;\n-  struct eh_stack catchstack;\n-  struct eh_queue ehqueue;\n-  rtx catch_clauses;\n-  struct label_node *false_label_stack;\n-  struct label_node *caught_return_label_stack;\n-  tree protect_list;\n-  rtx ehc;\n-  rtx eh_return_stub_label;\n-\n   /* For expr.c.  */\n   rtx pending_chain;\n   int pending_stack_adjust;\n@@ -214,6 +206,9 @@ struct function\n   rtx const_double_chain;\n };\n \n+extern struct function *current_function;\n+extern struct function *all_functions;\n+\n /* The FUNCTION_DECL for an inline function currently being expanded.  */\n extern tree inline_function_decl;\n "}, {"sha": "88559b9c0f0ef807ea5eeedddf3d14c1a0da7157", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b384405b341a1539bf3b10b4ce5a99f2ed389630/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b384405b341a1539bf3b10b4ce5a99f2ed389630/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=b384405b341a1539bf3b10b4ce5a99f2ed389630", "patch": "@@ -1,3 +1,10 @@\n+1999-07-31  Bernd Schmidt  <bernds@cygnus.co.uk>\n+\n+\t* decl.c: Include \"function.h\".\n+\t* except.c: Likewise.\n+\t* parse.y: Likewise.\n+\t* Makefile.in: Update dependencies.\n+\n 1999-07-30  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n \t* expr.c (build_java_soft_divmod): Provide a default case in switch."}, {"sha": "87a75a7735b71764cdf50fdb2dcb3849c2554568", "filename": "gcc/java/Makefile.in", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b384405b341a1539bf3b10b4ce5a99f2ed389630/gcc%2Fjava%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b384405b341a1539bf3b10b4ce5a99f2ed389630/gcc%2Fjava%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FMakefile.in?ref=b384405b341a1539bf3b10b4ce5a99f2ed389630", "patch": "@@ -273,7 +273,8 @@ clean:  mostlyclean\n \n force:\n \n-parse.o : $(PARSE_C) jcf-reader.c $(CONFIG_H) $(srcdir)/../system.h\n+parse.o : $(PARSE_C) jcf-reader.c $(CONFIG_H) $(srcdir)/../system.h \\\n+  $(srcdir)/../function.h\n jcf-dump.o : $(CONFIG_H) $(srcdir)/../system.h $(JAVA_TREE_H) jcf-dump.c \\\n   jcf-reader.c jcf.h javaop.h javaop.def\n gjavah.o : $(CONFIG_H) $(srcdir)/../system.h $(JAVA_TREE_H) gjavah.c \\\n@@ -289,10 +290,11 @@ class.o : class.c $(CONFIG_H) $(JAVA_TREE_H) $(RTL_H) jcf.h $(PARSE_H) \\\n constants.o : constants.c $(CONFIG_H) $(JAVA_TREE_H) jcf.h \\\n   $(srcdir)/../toplev.h $(srcdir)/../system.h\n decl.o : decl.c $(CONFIG_H) $(JAVA_TREE_H) jcf.h \\\n-  $(srcdir)/../toplev.h $(srcdir)/../system.h\n+  $(srcdir)/../toplev.h $(srcdir)/../system.h $(srcdir)/../function.h\n except.o : except.c $(CONFIG_H) $(JAVA_TREE_H) jcf.h $(srcdir)/../real.h \\\n   $(RTL_H) javaop.h java-opcodes.h $(srcdir)/../except.h java-except.h \\\n-  $(srcdir)/../eh-common.h $(srcdir)/../toplev.h $(srcdir)/../system.h\n+  $(srcdir)/../eh-common.h $(srcdir)/../toplev.h $(srcdir)/../system.h \\\n+  $(srcdir)/../function.h\n expr.o : expr.c $(CONFIG_H) $(JAVA_TREE_H) jcf.h $(srcdir)/../real.h \\\n   $(RTL_H) $(EXPR_H) javaop.h java-opcodes.h $(srcdir)/../except.h \\\n   java-except.h java-except.h parse.h $(srcdir)/../toplev.h \\"}, {"sha": "ed1e7f84e5a3bcd8abff299385eeb7a9173c480c", "filename": "gcc/java/decl.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b384405b341a1539bf3b10b4ce5a99f2ed389630/gcc%2Fjava%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b384405b341a1539bf3b10b4ce5a99f2ed389630/gcc%2Fjava%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fdecl.c?ref=b384405b341a1539bf3b10b4ce5a99f2ed389630", "patch": "@@ -32,6 +32,7 @@ The Free Software Foundation is independent of Sun Microsystems, Inc.  */\n #include \"java-tree.h\"\n #include \"jcf.h\"\n #include \"toplev.h\"\n+#include \"function.h\"\n #include \"except.h\"\n \n static tree push_jvm_slot PROTO ((int, tree));"}, {"sha": "1b02e7eba4000798e23d177e7d2224a43f0b7795", "filename": "gcc/java/except.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b384405b341a1539bf3b10b4ce5a99f2ed389630/gcc%2Fjava%2Fexcept.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b384405b341a1539bf3b10b4ce5a99f2ed389630/gcc%2Fjava%2Fexcept.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fexcept.c?ref=b384405b341a1539bf3b10b4ce5a99f2ed389630", "patch": "@@ -31,6 +31,7 @@ The Free Software Foundation is independent of Sun Microsystems, Inc.  */\n #include \"javaop.h\"\n #include \"java-opcodes.h\"\n #include \"jcf.h\"\n+#include \"function.h\"\n #include \"except.h\"\n #include \"java-except.h\"\n #include \"eh-common.h\""}, {"sha": "45744593f1fc1f047417c3284969b1f24c33d2aa", "filename": "gcc/java/parse.c", "status": "modified", "additions": 430, "deletions": 429, "changes": 859, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b384405b341a1539bf3b10b4ce5a99f2ed389630/gcc%2Fjava%2Fparse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b384405b341a1539bf3b10b4ce5a99f2ed389630/gcc%2Fjava%2Fparse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fparse.c?ref=b384405b341a1539bf3b10b4ce5a99f2ed389630", "patch": "@@ -138,6 +138,7 @@\n #include \"convert.h\"\n #include \"buffer.h\"\n #include \"xref.h\"\n+#include \"function.h\"\n #include \"except.h\"\n \n #ifndef DIR_SEPARATOR\n@@ -376,7 +377,7 @@ static tree java_lang_cloneable = NULL_TREE;\n static tree current_static_block = NULL_TREE;\n \n \n-#line 304 \"./parse.y\"\n+#line 305 \"./parse.y\"\n typedef union {\n   tree node;\n   int sub_token;\n@@ -386,7 +387,7 @@ typedef union {\n   } operator;\n   int value;\n } YYSTYPE;\n-#line 314 \"./parse.y\"\n+#line 315 \"./parse.y\"\n \n #include \"lex.c\"\n #ifndef YYDEBUG\n@@ -684,57 +685,57 @@ static const short yyrhs[] = {   123,\n \n #if YYDEBUG != 0\n static const short yyrline[] = { 0,\n-   458,   464,   466,   467,   468,   469,   470,   474,   476,   479,\n-   481,   482,   485,   487,   490,   494,   498,   502,   508,   510,\n-   512,   514,   519,   521,   524,   528,   533,   538,   540,   541,\n-   542,   543,   544,   545,   546,   549,   554,   560,   562,   565,\n-   568,   570,   574,   576,   579,   606,   608,   612,   625,   627,\n-   631,   638,   643,   645,   655,   660,   675,   679,   682,   685,\n-   688,   690,   692,   697,   701,   703,   705,   707,   711,   713,\n-   715,   722,   728,   733,   737,   746,   756,   758,   761,   763,\n-   764,   765,   769,   771,   773,   774,   776,   781,   784,   794,\n-   797,   799,   803,   806,   813,   819,   827,   829,   831,   833,\n-   835,   839,   841,   845,   852,   853,   857,   860,   862,   864,\n-   866,   868,   870,   872,   874,   881,   884,   886,   895,   897,\n-   901,   906,   911,   915,   920,   925,   927,   934,   936,   938,\n-   942,   945,   947,   951,   953,   954,   959,   965,   972,   980,\n-   987,   990,   993,   997,  1000,  1004,  1013,  1015,  1017,  1021,\n-  1023,  1026,  1033,  1041,  1043,  1047,  1054,  1064,  1068,  1071,\n-  1074,  1077,  1080,  1083,  1086,  1089,  1091,  1095,  1101,  1106,\n-  1108,  1112,  1115,  1119,  1121,  1124,  1126,  1127,  1129,  1133,\n-  1137,  1143,  1148,  1151,  1153,  1157,  1163,  1167,  1172,  1181,\n-  1185,  1190,  1202,  1204,  1207,  1209,  1211,  1215,  1219,  1222,\n-  1226,  1228,  1229,  1230,  1231,  1232,  1236,  1238,  1239,  1240,\n-  1241,  1245,  1247,  1248,  1249,  1250,  1251,  1252,  1253,  1254,\n-  1255,  1256,  1259,  1264,  1275,  1278,  1282,  1289,  1299,  1305,\n-  1311,  1317,  1319,  1325,  1327,  1333,  1335,  1337,  1339,  1341,\n-  1345,  1347,  1348,  1349,  1350,  1351,  1352,  1355,  1361,  1363,\n-  1365,  1369,  1374,  1379,  1385,  1395,  1401,  1403,  1405,  1412,\n-  1415,  1417,  1419,  1423,  1425,  1428,  1432,  1434,  1437,  1444,\n-  1450,  1452,  1454,  1458,  1466,  1469,  1471,  1473,  1477,  1482,\n-  1491,  1496,  1499,  1506,  1508,  1510,  1514,  1517,  1526,  1533,\n-  1535,  1539,  1552,  1554,  1560,  1566,  1570,  1572,  1576,  1579,\n-  1581,  1585,  1588,  1590,  1592,  1596,  1599,  1601,  1603,  1607,\n-  1610,  1612,  1614,  1618,  1624,  1626,  1630,  1637,  1639,  1641,\n-  1643,  1647,  1655,  1658,  1660,  1665,  1669,  1671,  1678,  1686,\n-  1703,  1705,  1707,  1711,  1714,  1719,  1721,  1724,  1726,  1728,\n-  1730,  1731,  1732,  1733,  1737,  1739,  1741,  1746,  1748,  1750,\n-  1752,  1754,  1758,  1761,  1766,  1768,  1773,  1774,  1775,  1776,\n-  1777,  1779,  1781,  1783,  1785,  1787,  1791,  1793,  1796,  1802,\n-  1807,  1811,  1814,  1816,  1818,  1822,  1824,  1826,  1828,  1832,\n-  1835,  1839,  1845,  1847,  1855,  1882,  1884,  1888,  1893,  1900,\n-  1904,  1907,  1909,  1920,  1931,  1936,  1945,  1947,  1951,  1954,\n-  1956,  1961,  1966,  1971,  1978,  1980,  1981,  1982,  1985,  1990,\n-  1995,  1997,  1998,  2000,  2002,  2003,  2005,  2009,  2012,  2016,\n-  2019,  2023,  2025,  2027,  2029,  2030,  2032,  2036,  2045,  2047,\n-  2049,  2062,  2064,  2070,  2072,  2074,  2078,  2080,  2085,  2090,\n-  2095,  2097,  2099,  2103,  2105,  2110,  2115,  2117,  2121,  2123,\n-  2128,  2133,  2138,  2140,  2142,  2146,  2148,  2153,  2158,  2163,\n-  2168,  2170,  2172,  2174,  2176,  2178,  2182,  2184,  2189,  2194,\n-  2196,  2200,  2202,  2207,  2211,  2213,  2218,  2222,  2224,  2229,\n-  2233,  2235,  2240,  2244,  2246,  2251,  2255,  2257,  2262,  2268,\n-  2270,  2274,  2276,  2279,  2282,  2290,  2292,  2293,  2296,  2298,\n-  2301,  2305\n+   459,   465,   467,   468,   469,   470,   471,   475,   477,   480,\n+   482,   483,   486,   488,   491,   495,   499,   503,   509,   511,\n+   513,   515,   520,   522,   525,   529,   534,   539,   541,   542,\n+   543,   544,   545,   546,   547,   550,   555,   561,   563,   566,\n+   569,   571,   575,   577,   580,   607,   609,   613,   626,   628,\n+   632,   639,   644,   646,   656,   661,   676,   680,   683,   686,\n+   689,   691,   693,   698,   702,   704,   706,   708,   712,   714,\n+   716,   723,   729,   734,   738,   747,   757,   759,   762,   764,\n+   765,   766,   770,   772,   774,   775,   777,   782,   785,   795,\n+   798,   800,   804,   807,   814,   820,   828,   830,   832,   834,\n+   836,   840,   842,   846,   853,   854,   858,   861,   863,   865,\n+   867,   869,   871,   873,   875,   882,   885,   887,   896,   898,\n+   902,   907,   912,   916,   921,   926,   928,   935,   937,   939,\n+   943,   946,   948,   952,   954,   955,   960,   966,   973,   981,\n+   988,   991,   994,   998,  1001,  1005,  1014,  1016,  1018,  1022,\n+  1024,  1027,  1034,  1042,  1044,  1048,  1055,  1065,  1069,  1072,\n+  1075,  1078,  1081,  1084,  1087,  1090,  1092,  1096,  1102,  1107,\n+  1109,  1113,  1116,  1120,  1122,  1125,  1127,  1128,  1130,  1134,\n+  1138,  1144,  1149,  1152,  1154,  1158,  1164,  1168,  1173,  1182,\n+  1186,  1191,  1203,  1205,  1208,  1210,  1212,  1216,  1220,  1223,\n+  1227,  1229,  1230,  1231,  1232,  1233,  1237,  1239,  1240,  1241,\n+  1242,  1246,  1248,  1249,  1250,  1251,  1252,  1253,  1254,  1255,\n+  1256,  1257,  1260,  1265,  1276,  1279,  1283,  1290,  1300,  1306,\n+  1312,  1318,  1320,  1326,  1328,  1334,  1336,  1338,  1340,  1342,\n+  1346,  1348,  1349,  1350,  1351,  1352,  1353,  1356,  1362,  1364,\n+  1366,  1370,  1375,  1380,  1386,  1396,  1402,  1404,  1406,  1413,\n+  1416,  1418,  1420,  1424,  1426,  1429,  1433,  1435,  1438,  1445,\n+  1451,  1453,  1455,  1459,  1467,  1470,  1472,  1474,  1478,  1483,\n+  1492,  1497,  1500,  1507,  1509,  1511,  1515,  1518,  1527,  1534,\n+  1536,  1540,  1553,  1555,  1561,  1567,  1571,  1573,  1577,  1580,\n+  1582,  1586,  1589,  1591,  1593,  1597,  1600,  1602,  1604,  1608,\n+  1611,  1613,  1615,  1619,  1625,  1627,  1631,  1638,  1640,  1642,\n+  1644,  1648,  1656,  1659,  1661,  1666,  1670,  1672,  1679,  1687,\n+  1704,  1706,  1708,  1712,  1715,  1720,  1722,  1725,  1727,  1729,\n+  1731,  1732,  1733,  1734,  1738,  1740,  1742,  1747,  1749,  1751,\n+  1753,  1755,  1759,  1762,  1767,  1769,  1774,  1775,  1776,  1777,\n+  1778,  1780,  1782,  1784,  1786,  1788,  1792,  1794,  1797,  1803,\n+  1808,  1812,  1815,  1817,  1819,  1823,  1825,  1827,  1829,  1833,\n+  1836,  1840,  1846,  1848,  1856,  1883,  1885,  1889,  1894,  1901,\n+  1905,  1908,  1910,  1921,  1932,  1937,  1946,  1948,  1952,  1955,\n+  1957,  1962,  1967,  1972,  1979,  1981,  1982,  1983,  1986,  1991,\n+  1996,  1998,  1999,  2001,  2003,  2004,  2006,  2010,  2013,  2017,\n+  2020,  2024,  2026,  2028,  2030,  2031,  2033,  2037,  2046,  2048,\n+  2050,  2063,  2065,  2071,  2073,  2075,  2079,  2081,  2086,  2091,\n+  2096,  2098,  2100,  2104,  2106,  2111,  2116,  2118,  2122,  2124,\n+  2129,  2134,  2139,  2141,  2143,  2147,  2149,  2154,  2159,  2164,\n+  2169,  2171,  2173,  2175,  2177,  2179,  2183,  2185,  2190,  2195,\n+  2197,  2201,  2203,  2208,  2212,  2214,  2219,  2223,  2225,  2230,\n+  2234,  2236,  2241,  2245,  2247,  2252,  2256,  2258,  2263,  2269,\n+  2271,  2275,  2277,  2280,  2283,  2291,  2293,  2294,  2297,  2299,\n+  2302,  2306\n };\n #endif\n \n@@ -2212,7 +2213,7 @@ static const short yycheck[] = {     3,\n #define YYPURE 1\n \n /* -*-C-*-  Note some compilers choke on comments on `#line' lines.  */\n-#line 3 \"/usr/local/share/bison.simple\"\n+#line 3 \"/usr/share/bison.simple\"\n \n /* Skeleton output parser for bison,\n    Copyright (C) 1984, 1989, 1990 Free Software Foundation, Inc.\n@@ -2405,7 +2406,7 @@ __yy_memcpy (char *to, char *from, int count)\n #endif\n #endif\n \f\n-#line 196 \"/usr/local/share/bison.simple\"\n+#line 196 \"/usr/share/bison.simple\"\n \n /* The user can define YYPARSE_PARAM as the name of an argument to be passed\n    into yyparse.  The argument should have type void *.\n@@ -2710,66 +2711,66 @@ yyparse(YYPARSE_PARAM_ARG)\n   switch (yyn) {\n \n case 1:\n-#line 460 \"./parse.y\"\n+#line 461 \"./parse.y\"\n {;\n     break;}\n case 18:\n-#line 504 \"./parse.y\"\n+#line 505 \"./parse.y\"\n { \n \t\t  yyval.node = build_java_array_type (yyvsp[-2].node, -1);\n \t\t  CLASS_LOADED_P (yyval.node) = 1;\n \t\t;\n     break;}\n case 19:\n-#line 509 \"./parse.y\"\n+#line 510 \"./parse.y\"\n { yyval.node = build_unresolved_array_type (yyvsp[-2].node); ;\n     break;}\n case 20:\n-#line 511 \"./parse.y\"\n+#line 512 \"./parse.y\"\n { yyval.node = build_unresolved_array_type (yyvsp[-2].node); ;\n     break;}\n case 21:\n-#line 513 \"./parse.y\"\n+#line 514 \"./parse.y\"\n {RULE (\"']' expected\"); RECOVER;;\n     break;}\n case 22:\n-#line 515 \"./parse.y\"\n+#line 516 \"./parse.y\"\n {RULE (\"']' expected\"); RECOVER;;\n     break;}\n case 26:\n-#line 530 \"./parse.y\"\n+#line 531 \"./parse.y\"\n { yyval.node = make_qualified_name (yyvsp[-2].node, yyvsp[0].node, yyvsp[-1].operator.location); ;\n     break;}\n case 28:\n-#line 539 \"./parse.y\"\n+#line 540 \"./parse.y\"\n {yyval.node = NULL;;\n     break;}\n case 36:\n-#line 551 \"./parse.y\"\n+#line 552 \"./parse.y\"\n {\n \t\t  yyval.node = NULL;\n \t\t;\n     break;}\n case 37:\n-#line 555 \"./parse.y\"\n+#line 556 \"./parse.y\"\n {\n \t\t  yyval.node = NULL;\n \t\t;\n     break;}\n case 40:\n-#line 567 \"./parse.y\"\n+#line 568 \"./parse.y\"\n { ctxp->package = EXPR_WFL_NODE (yyvsp[-1].node); ;\n     break;}\n case 41:\n-#line 569 \"./parse.y\"\n+#line 570 \"./parse.y\"\n {yyerror (\"Missing name\"); RECOVER;;\n     break;}\n case 42:\n-#line 571 \"./parse.y\"\n+#line 572 \"./parse.y\"\n {yyerror (\"';' expected\"); RECOVER;;\n     break;}\n case 45:\n-#line 581 \"./parse.y\"\n+#line 582 \"./parse.y\"\n {\n \t\t  tree name = EXPR_WFL_NODE (yyvsp[-1].node), node, last_name;\n \t\t  int   i = IDENTIFIER_LENGTH (name)-1;\n@@ -2797,15 +2798,15 @@ case 45:\n \t\t;\n     break;}\n case 46:\n-#line 607 \"./parse.y\"\n+#line 608 \"./parse.y\"\n {yyerror (\"Missing name\"); RECOVER;;\n     break;}\n case 47:\n-#line 609 \"./parse.y\"\n+#line 610 \"./parse.y\"\n {yyerror (\"';' expected\"); RECOVER;;\n     break;}\n case 48:\n-#line 614 \"./parse.y\"\n+#line 615 \"./parse.y\"\n {\n \t\t  tree name = EXPR_WFL_NODE (yyvsp[-3].node);\n \t\t  /* Don't import java.lang.* twice. */\n@@ -2819,47 +2820,47 @@ case 48:\n \t\t;\n     break;}\n case 49:\n-#line 626 \"./parse.y\"\n+#line 627 \"./parse.y\"\n {yyerror (\"'*' expected\"); RECOVER;;\n     break;}\n case 50:\n-#line 628 \"./parse.y\"\n+#line 629 \"./parse.y\"\n {yyerror (\"';' expected\"); RECOVER;;\n     break;}\n case 51:\n-#line 633 \"./parse.y\"\n+#line 634 \"./parse.y\"\n {\n \t\t  maybe_generate_finit ();\n \t\t  maybe_generate_clinit ();\n \t\t  yyval.node = yyvsp[0].node;\n \t\t;\n     break;}\n case 52:\n-#line 639 \"./parse.y\"\n+#line 640 \"./parse.y\"\n {\n \t\t  maybe_generate_clinit ();\n \t\t  yyval.node = yyvsp[0].node;\n \t\t;\n     break;}\n case 53:\n-#line 644 \"./parse.y\"\n+#line 645 \"./parse.y\"\n { yyval.node = NULL; ;\n     break;}\n case 54:\n-#line 646 \"./parse.y\"\n+#line 647 \"./parse.y\"\n {\n \t\t  YYERROR_NOW;\n \t\t  yyerror (\"Class or interface declaration expected\");\n \t\t;\n     break;}\n case 55:\n-#line 657 \"./parse.y\"\n+#line 658 \"./parse.y\"\n {\n \t\t  yyval.value = (1 << yyvsp[0].value);\n \t\t;\n     break;}\n case 56:\n-#line 661 \"./parse.y\"\n+#line 662 \"./parse.y\"\n {\n \t\t  int acc = (1 << yyvsp[0].value);\n \t\t  if (yyval.value & acc)\n@@ -2873,95 +2874,95 @@ case 56:\n \t\t;\n     break;}\n case 57:\n-#line 677 \"./parse.y\"\n+#line 678 \"./parse.y\"\n { create_class (yyvsp[-4].value, yyvsp[-2].node, yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 58:\n-#line 679 \"./parse.y\"\n+#line 680 \"./parse.y\"\n { \n \t\t  yyval.node = yyvsp[0].node;\n \t\t;\n     break;}\n case 59:\n-#line 683 \"./parse.y\"\n+#line 684 \"./parse.y\"\n { create_class (0, yyvsp[-2].node, yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 60:\n-#line 685 \"./parse.y\"\n+#line 686 \"./parse.y\"\n { \t\n \t\t  yyval.node = yyvsp[0].node;\n \t\t;\n     break;}\n case 61:\n-#line 689 \"./parse.y\"\n+#line 690 \"./parse.y\"\n {yyerror (\"Missing class name\"); RECOVER;;\n     break;}\n case 62:\n-#line 691 \"./parse.y\"\n+#line 692 \"./parse.y\"\n {yyerror (\"Missing class name\"); RECOVER;;\n     break;}\n case 63:\n-#line 693 \"./parse.y\"\n+#line 694 \"./parse.y\"\n {\n \t\t  if (!ctxp->class_err) yyerror (\"'{' expected\"); \n \t\t  DRECOVER(class1);\n \t\t;\n     break;}\n case 64:\n-#line 698 \"./parse.y\"\n+#line 699 \"./parse.y\"\n {if (!ctxp->class_err) yyerror (\"'{' expected\"); RECOVER;;\n     break;}\n case 65:\n-#line 702 \"./parse.y\"\n+#line 703 \"./parse.y\"\n { yyval.node = NULL; ;\n     break;}\n case 66:\n-#line 704 \"./parse.y\"\n+#line 705 \"./parse.y\"\n { yyval.node = yyvsp[0].node; ;\n     break;}\n case 67:\n-#line 706 \"./parse.y\"\n+#line 707 \"./parse.y\"\n {yyerror (\"'{' expected\"); ctxp->class_err=1;;\n     break;}\n case 68:\n-#line 708 \"./parse.y\"\n+#line 709 \"./parse.y\"\n {yyerror (\"Missing super class name\"); ctxp->class_err=1;;\n     break;}\n case 69:\n-#line 712 \"./parse.y\"\n+#line 713 \"./parse.y\"\n { yyval.node = NULL_TREE; ;\n     break;}\n case 70:\n-#line 714 \"./parse.y\"\n+#line 715 \"./parse.y\"\n { yyval.node = yyvsp[0].node; ;\n     break;}\n case 71:\n-#line 716 \"./parse.y\"\n+#line 717 \"./parse.y\"\n {\n \t\t  ctxp->class_err=1;\n \t\t  yyerror (\"Missing interface name\"); \n \t\t;\n     break;}\n case 72:\n-#line 724 \"./parse.y\"\n+#line 725 \"./parse.y\"\n { \n \t\t  ctxp->interface_number = 1;\n \t\t  yyval.node = build_tree_list (yyvsp[0].node, NULL_TREE);\n \t\t;\n     break;}\n case 73:\n-#line 729 \"./parse.y\"\n+#line 730 \"./parse.y\"\n { \n \t\t  ctxp->interface_number++;\n \t\t  yyval.node = chainon (yyvsp[-2].node, build_tree_list (yyvsp[0].node, NULL_TREE));\n \t\t;\n     break;}\n case 74:\n-#line 734 \"./parse.y\"\n+#line 735 \"./parse.y\"\n {yyerror (\"Missing interface name\"); RECOVER;;\n     break;}\n case 75:\n-#line 739 \"./parse.y\"\n+#line 740 \"./parse.y\"\n { \n \t\t  /* Store the location of the `}' when doing xrefs */\n \t\t  if (flag_emit_xref)\n@@ -2971,7 +2972,7 @@ case 75:\n \t\t;\n     break;}\n case 76:\n-#line 747 \"./parse.y\"\n+#line 748 \"./parse.y\"\n { \n \t\t  /* Store the location of the `}' when doing xrefs */\n \t\t  if (flag_emit_xref)\n@@ -2981,27 +2982,27 @@ case 76:\n \t\t;\n     break;}\n case 82:\n-#line 766 \"./parse.y\"\n+#line 767 \"./parse.y\"\n { yyval.node = parse_jdk1_1_error (\"instance initializer\"); ;\n     break;}\n case 84:\n-#line 772 \"./parse.y\"\n+#line 773 \"./parse.y\"\n { yyval.node = yyvsp[-1].node; ;\n     break;}\n case 86:\n-#line 775 \"./parse.y\"\n+#line 776 \"./parse.y\"\n { yyval.node = parse_jdk1_1_error (\"inner classe declaration\"); ;\n     break;}\n case 87:\n-#line 777 \"./parse.y\"\n+#line 778 \"./parse.y\"\n { yyval.node = parse_jdk1_1_error (\"inner interface declaration\"); ;\n     break;}\n case 88:\n-#line 783 \"./parse.y\"\n+#line 784 \"./parse.y\"\n { register_fields (0, yyvsp[-2].node, yyvsp[-1].node); ;\n     break;}\n case 89:\n-#line 785 \"./parse.y\"\n+#line 786 \"./parse.y\"\n {\n \t\t  check_modifiers \n \t\t    (\"Illegal modifier `%s' for field declaration\",\n@@ -3011,19 +3012,19 @@ case 89:\n \t\t;\n     break;}\n case 91:\n-#line 798 \"./parse.y\"\n+#line 799 \"./parse.y\"\n { yyval.node = chainon (yyvsp[-2].node, yyvsp[0].node); ;\n     break;}\n case 92:\n-#line 800 \"./parse.y\"\n+#line 801 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 93:\n-#line 805 \"./parse.y\"\n+#line 806 \"./parse.y\"\n { yyval.node = build_tree_list (yyvsp[0].node, NULL_TREE); ;\n     break;}\n case 94:\n-#line 807 \"./parse.y\"\n+#line 808 \"./parse.y\"\n { \n \t\t  if (java_error_count)\n \t\t    yyvsp[0].node = NULL_TREE;\n@@ -3032,101 +3033,101 @@ case 94:\n \t\t;\n     break;}\n case 95:\n-#line 814 \"./parse.y\"\n+#line 815 \"./parse.y\"\n {\n \t\t  yyerror (\"Missing variable initializer\");\n \t\t  yyval.node = build_tree_list (yyvsp[-2].node, NULL_TREE);\n \t\t  RECOVER;\n \t\t;\n     break;}\n case 96:\n-#line 820 \"./parse.y\"\n+#line 821 \"./parse.y\"\n {\n \t\t  yyerror (\"';' expected\");\n \t\t  yyval.node = build_tree_list (yyvsp[-3].node, NULL_TREE);\n \t\t  RECOVER;\n \t\t;\n     break;}\n case 98:\n-#line 830 \"./parse.y\"\n+#line 831 \"./parse.y\"\n { yyval.node = build_unresolved_array_type (yyvsp[-2].node); ;\n     break;}\n case 99:\n-#line 832 \"./parse.y\"\n+#line 833 \"./parse.y\"\n {yyerror (\"Invalid declaration\"); DRECOVER(vdi);;\n     break;}\n case 100:\n-#line 834 \"./parse.y\"\n+#line 835 \"./parse.y\"\n {yyerror (\"']' expected\"); DRECOVER(vdi);;\n     break;}\n case 101:\n-#line 836 \"./parse.y\"\n+#line 837 \"./parse.y\"\n {yyerror (\"Unbalanced ']'\"); DRECOVER(vdi);;\n     break;}\n case 104:\n-#line 847 \"./parse.y\"\n+#line 848 \"./parse.y\"\n {\n \t\t  current_function_decl = yyvsp[0].node;\n \t\t  source_start_java_method (current_function_decl);\n \t\t;\n     break;}\n case 105:\n-#line 852 \"./parse.y\"\n+#line 853 \"./parse.y\"\n { finish_method_declaration (yyvsp[0].node); ;\n     break;}\n case 106:\n-#line 854 \"./parse.y\"\n+#line 855 \"./parse.y\"\n {YYNOT_TWICE yyerror (\"'{' expected\"); RECOVER;;\n     break;}\n case 107:\n-#line 859 \"./parse.y\"\n+#line 860 \"./parse.y\"\n { yyval.node = method_header (0, yyvsp[-2].node, yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 108:\n-#line 861 \"./parse.y\"\n+#line 862 \"./parse.y\"\n { yyval.node = method_header (0, void_type_node, yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 109:\n-#line 863 \"./parse.y\"\n+#line 864 \"./parse.y\"\n { yyval.node = method_header (yyvsp[-3].value, yyvsp[-2].node, yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 110:\n-#line 865 \"./parse.y\"\n+#line 866 \"./parse.y\"\n { yyval.node = method_header (yyvsp[-3].value, void_type_node, yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 111:\n-#line 867 \"./parse.y\"\n+#line 868 \"./parse.y\"\n {RECOVER;;\n     break;}\n case 112:\n-#line 869 \"./parse.y\"\n+#line 870 \"./parse.y\"\n {RECOVER;;\n     break;}\n case 113:\n-#line 871 \"./parse.y\"\n+#line 872 \"./parse.y\"\n {yyerror (\"Identifier expected\"); RECOVER;;\n     break;}\n case 114:\n-#line 873 \"./parse.y\"\n+#line 874 \"./parse.y\"\n {yyerror (\"Identifier expected\"); RECOVER;;\n     break;}\n case 115:\n-#line 875 \"./parse.y\"\n+#line 876 \"./parse.y\"\n {\n \t\t  yyerror (\"Invalid method declaration, return type required\");\n \t\t  RECOVER;\n \t\t;\n     break;}\n case 116:\n-#line 883 \"./parse.y\"\n+#line 884 \"./parse.y\"\n { yyval.node = method_declarator (yyvsp[-2].node, NULL_TREE); ;\n     break;}\n case 117:\n-#line 885 \"./parse.y\"\n+#line 886 \"./parse.y\"\n { yyval.node = method_declarator (yyvsp[-3].node, yyvsp[-1].node); ;\n     break;}\n case 118:\n-#line 887 \"./parse.y\"\n+#line 888 \"./parse.y\"\n {\n \t\t  EXPR_WFL_LINECOL (wfl_operator) = yyvsp[-1].operator.location;\n \t\t  TREE_PURPOSE (yyvsp[-2].node) = \n@@ -3137,316 +3138,316 @@ case 118:\n \t\t;\n     break;}\n case 119:\n-#line 896 \"./parse.y\"\n+#line 897 \"./parse.y\"\n {yyerror (\"')' expected\"); DRECOVER(method_declarator);;\n     break;}\n case 120:\n-#line 898 \"./parse.y\"\n+#line 899 \"./parse.y\"\n {yyerror (\"']' expected\"); RECOVER;;\n     break;}\n case 121:\n-#line 903 \"./parse.y\"\n+#line 904 \"./parse.y\"\n {\n \t\t  ctxp->formal_parameter_number = 1;\n \t\t;\n     break;}\n case 122:\n-#line 907 \"./parse.y\"\n+#line 908 \"./parse.y\"\n {\n \t\t  ctxp->formal_parameter_number += 1;\n \t\t  yyval.node = chainon (yyvsp[-2].node, yyvsp[0].node);\n \t\t;\n     break;}\n case 123:\n-#line 912 \"./parse.y\"\n+#line 913 \"./parse.y\"\n {yyerror (\"Missing formal parameter term\"); RECOVER;;\n     break;}\n case 124:\n-#line 917 \"./parse.y\"\n+#line 918 \"./parse.y\"\n {\n \t\t  yyval.node = build_tree_list (yyvsp[0].node, yyvsp[-1].node);\n \t\t;\n     break;}\n case 125:\n-#line 921 \"./parse.y\"\n+#line 922 \"./parse.y\"\n { \n \t\t  parse_jdk1_1_error (\"final parameters\");\n \t\t  yyval.node = build_tree_list (yyvsp[0].node, yyvsp[-1].node);\n \t\t;\n     break;}\n case 126:\n-#line 926 \"./parse.y\"\n+#line 927 \"./parse.y\"\n {yyerror (\"Missing identifier\"); RECOVER;;\n     break;}\n case 127:\n-#line 928 \"./parse.y\"\n+#line 929 \"./parse.y\"\n {\n \t\t  SOURCE_FRONTEND_DEBUG ((\"Modifiers: %d\", yyvsp[-2].value));\n \t\t  yyerror (\"Missing identifier\"); RECOVER;\n \t\t;\n     break;}\n case 128:\n-#line 935 \"./parse.y\"\n+#line 936 \"./parse.y\"\n { yyval.node = NULL_TREE; ;\n     break;}\n case 129:\n-#line 937 \"./parse.y\"\n+#line 938 \"./parse.y\"\n { yyval.node = yyvsp[0].node; ;\n     break;}\n case 130:\n-#line 939 \"./parse.y\"\n+#line 940 \"./parse.y\"\n {yyerror (\"Missing class type term\"); RECOVER;;\n     break;}\n case 131:\n-#line 944 \"./parse.y\"\n+#line 945 \"./parse.y\"\n { yyval.node = build_tree_list (yyvsp[0].node, yyvsp[0].node); ;\n     break;}\n case 132:\n-#line 946 \"./parse.y\"\n+#line 947 \"./parse.y\"\n { yyval.node = tree_cons (yyvsp[0].node, yyvsp[0].node, yyvsp[-2].node); ;\n     break;}\n case 133:\n-#line 948 \"./parse.y\"\n+#line 949 \"./parse.y\"\n {yyerror (\"Missing class type term\"); RECOVER;;\n     break;}\n case 136:\n-#line 955 \"./parse.y\"\n+#line 956 \"./parse.y\"\n { yyval.node = NULL_TREE; ;\n     break;}\n case 137:\n-#line 961 \"./parse.y\"\n+#line 962 \"./parse.y\"\n {\n \t\t  TREE_CHAIN (yyvsp[0].node) = ctxp->static_initialized;\n \t\t  ctxp->static_initialized = yyvsp[0].node;\n \t\t;\n     break;}\n case 138:\n-#line 966 \"./parse.y\"\n+#line 967 \"./parse.y\"\n {\n \t\t  TREE_CHAIN (yyvsp[-1].node) = ctxp->static_initialized;\n \t\t  ctxp->static_initialized = yyvsp[-1].node;\n \t\t;\n     break;}\n case 139:\n-#line 974 \"./parse.y\"\n+#line 975 \"./parse.y\"\n {\n \t\t  SOURCE_FRONTEND_DEBUG ((\"Modifiers: %d\", yyvsp[0].value));\n \t\t;\n     break;}\n case 140:\n-#line 982 \"./parse.y\"\n+#line 983 \"./parse.y\"\n {\n \t\t  current_function_decl = yyvsp[0].node;\n \t\t  source_start_java_method (current_function_decl);\n \t\t;\n     break;}\n case 141:\n-#line 987 \"./parse.y\"\n+#line 988 \"./parse.y\"\n { finish_method_declaration (yyvsp[0].node); ;\n     break;}\n case 142:\n-#line 992 \"./parse.y\"\n+#line 993 \"./parse.y\"\n { yyval.node = method_header (0, NULL_TREE, yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 143:\n-#line 994 \"./parse.y\"\n+#line 995 \"./parse.y\"\n { yyval.node = method_header (yyvsp[-2].value, NULL_TREE, yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 144:\n-#line 999 \"./parse.y\"\n+#line 1000 \"./parse.y\"\n { yyval.node = method_declarator (yyvsp[-2].node, NULL_TREE); ;\n     break;}\n case 145:\n-#line 1001 \"./parse.y\"\n+#line 1002 \"./parse.y\"\n { yyval.node = method_declarator (yyvsp[-3].node, yyvsp[-1].node); ;\n     break;}\n case 146:\n-#line 1009 \"./parse.y\"\n+#line 1010 \"./parse.y\"\n { \n \t\t  BLOCK_EXPR_BODY (yyvsp[0].node) = empty_stmt_node;\n \t\t  yyval.node = yyvsp[0].node;\n \t\t;\n     break;}\n case 147:\n-#line 1014 \"./parse.y\"\n+#line 1015 \"./parse.y\"\n { yyval.node = yyvsp[0].node; ;\n     break;}\n case 148:\n-#line 1016 \"./parse.y\"\n+#line 1017 \"./parse.y\"\n { yyval.node = yyvsp[0].node; ;\n     break;}\n case 149:\n-#line 1018 \"./parse.y\"\n+#line 1019 \"./parse.y\"\n { yyval.node = yyvsp[0].node; ;\n     break;}\n case 152:\n-#line 1028 \"./parse.y\"\n+#line 1029 \"./parse.y\"\n { \n \t\t  yyval.node = build_method_invocation (yyvsp[-3].node, NULL_TREE); \n \t\t  yyval.node = build_debugable_stmt (EXPR_WFL_LINECOL (yyvsp[-3].node), yyval.node);\n \t\t  yyval.node = java_method_add_stmt (current_function_decl, yyval.node);\n \t\t;\n     break;}\n case 153:\n-#line 1034 \"./parse.y\"\n+#line 1035 \"./parse.y\"\n { \n \t\t  yyval.node = build_method_invocation (yyvsp[-4].node, yyvsp[-2].node); \n \t\t  yyval.node = build_debugable_stmt (EXPR_WFL_LINECOL (yyvsp[-4].node), yyval.node);\n \t\t  yyval.node = java_method_add_stmt (current_function_decl, yyval.node);\n \t\t;\n     break;}\n case 154:\n-#line 1042 \"./parse.y\"\n+#line 1043 \"./parse.y\"\n {yyval.node = parse_jdk1_1_error (\"explicit constructor invocation\"); ;\n     break;}\n case 155:\n-#line 1044 \"./parse.y\"\n+#line 1045 \"./parse.y\"\n {yyval.node = parse_jdk1_1_error (\"explicit constructor invocation\"); ;\n     break;}\n case 156:\n-#line 1049 \"./parse.y\"\n+#line 1050 \"./parse.y\"\n {\n \t\t  tree wfl = build_wfl_node (this_identifier_node);\n \t\t  EXPR_WFL_LINECOL (wfl) = yyvsp[0].operator.location;\n \t\t  yyval.node = wfl;\n \t\t;\n     break;}\n case 157:\n-#line 1055 \"./parse.y\"\n+#line 1056 \"./parse.y\"\n {\n \t\t  tree wfl = build_wfl_node (super_identifier_node);\n \t\t  EXPR_WFL_LINECOL (wfl) = yyvsp[0].operator.location;\n \t\t  yyval.node = wfl;\n \t\t;\n     break;}\n case 158:\n-#line 1066 \"./parse.y\"\n+#line 1067 \"./parse.y\"\n { create_interface (0, yyvsp[0].node, NULL_TREE); ;\n     break;}\n case 159:\n-#line 1068 \"./parse.y\"\n+#line 1069 \"./parse.y\"\n {\n \t\t  yyval.node = yyvsp[0].node;\n \t\t;\n     break;}\n case 160:\n-#line 1072 \"./parse.y\"\n+#line 1073 \"./parse.y\"\n { create_interface (yyvsp[-2].value, yyvsp[0].node, NULL_TREE); ;\n     break;}\n case 161:\n-#line 1074 \"./parse.y\"\n+#line 1075 \"./parse.y\"\n {\n \t\t  yyval.node = yyvsp[0].node;\n \t\t;\n     break;}\n case 162:\n-#line 1078 \"./parse.y\"\n+#line 1079 \"./parse.y\"\n { create_interface (0, yyvsp[-1].node, yyvsp[0].node);\t;\n     break;}\n case 163:\n-#line 1080 \"./parse.y\"\n+#line 1081 \"./parse.y\"\n {\n \t\t  yyval.node = yyvsp[0].node;\n \t\t;\n     break;}\n case 164:\n-#line 1084 \"./parse.y\"\n+#line 1085 \"./parse.y\"\n { create_interface (yyvsp[-3].value, yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 165:\n-#line 1086 \"./parse.y\"\n+#line 1087 \"./parse.y\"\n {\n \t\t  yyval.node = yyvsp[0].node;\n \t\t;\n     break;}\n case 166:\n-#line 1090 \"./parse.y\"\n+#line 1091 \"./parse.y\"\n {yyerror (\"'{' expected\"); RECOVER;;\n     break;}\n case 167:\n-#line 1092 \"./parse.y\"\n+#line 1093 \"./parse.y\"\n {yyerror (\"'{' expected\"); RECOVER;;\n     break;}\n case 168:\n-#line 1097 \"./parse.y\"\n+#line 1098 \"./parse.y\"\n { \n \t\t  ctxp->interface_number = 1;\n \t\t  yyval.node = build_tree_list (yyvsp[0].node, NULL_TREE);\n \t\t;\n     break;}\n case 169:\n-#line 1102 \"./parse.y\"\n+#line 1103 \"./parse.y\"\n { \n \t\t  ctxp->interface_number++;\n \t\t  yyval.node = chainon (yyvsp[-2].node, build_tree_list (yyvsp[0].node, NULL_TREE));\n \t\t;\n     break;}\n case 170:\n-#line 1107 \"./parse.y\"\n+#line 1108 \"./parse.y\"\n {yyerror (\"Invalid interface type\"); RECOVER;;\n     break;}\n case 171:\n-#line 1109 \"./parse.y\"\n+#line 1110 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 172:\n-#line 1114 \"./parse.y\"\n+#line 1115 \"./parse.y\"\n { yyval.node = NULL_TREE; ;\n     break;}\n case 173:\n-#line 1116 \"./parse.y\"\n+#line 1117 \"./parse.y\"\n { yyval.node = NULL_TREE; ;\n     break;}\n case 178:\n-#line 1128 \"./parse.y\"\n+#line 1129 \"./parse.y\"\n { yyval.node = parse_jdk1_1_error (\"inner class declaration\"); ;\n     break;}\n case 179:\n-#line 1130 \"./parse.y\"\n+#line 1131 \"./parse.y\"\n { yyval.node = parse_jdk1_1_error (\"inner interface declaration\"); ;\n     break;}\n case 181:\n-#line 1139 \"./parse.y\"\n+#line 1140 \"./parse.y\"\n { \n \t\t  check_abstract_method_header (yyvsp[-1].node);\n \t\t  current_function_decl = NULL_TREE; /* FIXME ? */\n \t\t;\n     break;}\n case 182:\n-#line 1144 \"./parse.y\"\n+#line 1145 \"./parse.y\"\n {yyerror (\"';' expected\"); RECOVER;;\n     break;}\n case 183:\n-#line 1150 \"./parse.y\"\n+#line 1151 \"./parse.y\"\n { yyval.node = build_new_array_init (yyvsp[-1].operator.location, NULL_TREE); ;\n     break;}\n case 184:\n-#line 1152 \"./parse.y\"\n+#line 1153 \"./parse.y\"\n { yyval.node = build_new_array_init (yyvsp[-2].operator.location, yyvsp[-1].node); ;\n     break;}\n case 185:\n-#line 1154 \"./parse.y\"\n+#line 1155 \"./parse.y\"\n { yyval.node = build_new_array_init (yyvsp[-3].operator.location, yyvsp[-2].node); ;\n     break;}\n case 186:\n-#line 1159 \"./parse.y\"\n+#line 1160 \"./parse.y\"\n { \n \t\t  yyval.node = tree_cons (maybe_build_array_element_wfl (yyvsp[0].node), \n \t\t\t\t  yyvsp[0].node, NULL_TREE);\n \t\t;\n     break;}\n case 187:\n-#line 1164 \"./parse.y\"\n+#line 1165 \"./parse.y\"\n {\n \t\t  yyval.node = tree_cons (maybe_build_array_element_wfl (yyvsp[0].node), yyvsp[0].node, yyvsp[-2].node);\n \t\t;\n     break;}\n case 188:\n-#line 1168 \"./parse.y\"\n+#line 1169 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 189:\n-#line 1174 \"./parse.y\"\n+#line 1175 \"./parse.y\"\n { \n \t\t  /* Store the location of the `}' when doing xrefs */\n \t\t  if (current_function_decl && flag_emit_xref)\n@@ -3456,15 +3457,15 @@ case 189:\n \t\t;\n     break;}\n case 190:\n-#line 1182 \"./parse.y\"\n+#line 1183 \"./parse.y\"\n { yyval.node = yyvsp[0].node; ;\n     break;}\n case 191:\n-#line 1187 \"./parse.y\"\n+#line 1188 \"./parse.y\"\n { enter_block (); ;\n     break;}\n case 192:\n-#line 1192 \"./parse.y\"\n+#line 1193 \"./parse.y\"\n { \n \t\t  maybe_absorb_scoping_blocks ();\n \t\t  /* Store the location of the `}' when doing xrefs */\n@@ -3475,35 +3476,35 @@ case 192:\n \t\t;\n     break;}\n case 196:\n-#line 1210 \"./parse.y\"\n+#line 1211 \"./parse.y\"\n { java_method_add_stmt (current_function_decl, yyvsp[0].node); ;\n     break;}\n case 197:\n-#line 1212 \"./parse.y\"\n+#line 1213 \"./parse.y\"\n { parse_jdk1_1_error (\"inner class declaration\"); ;\n     break;}\n case 199:\n-#line 1221 \"./parse.y\"\n+#line 1222 \"./parse.y\"\n { declare_local_variables (0, yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 200:\n-#line 1223 \"./parse.y\"\n+#line 1224 \"./parse.y\"\n { declare_local_variables (yyvsp[-2].value, yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 206:\n-#line 1233 \"./parse.y\"\n+#line 1234 \"./parse.y\"\n { yyval.node = exit_block (); ;\n     break;}\n case 211:\n-#line 1242 \"./parse.y\"\n+#line 1243 \"./parse.y\"\n { yyval.node = exit_block (); ;\n     break;}\n case 223:\n-#line 1261 \"./parse.y\"\n+#line 1262 \"./parse.y\"\n { yyval.node = empty_stmt_node; ;\n     break;}\n case 224:\n-#line 1266 \"./parse.y\"\n+#line 1267 \"./parse.y\"\n {\n \t\t  yyval.node = build_labeled_block (EXPR_WFL_LINECOL (yyvsp[-1].node), \n \t\t\t\t\t    EXPR_WFL_NODE (yyvsp[-1].node));\n@@ -3513,19 +3514,19 @@ case 224:\n \t\t;\n     break;}\n case 225:\n-#line 1277 \"./parse.y\"\n+#line 1278 \"./parse.y\"\n { yyval.node = finish_labeled_statement (yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 226:\n-#line 1279 \"./parse.y\"\n+#line 1280 \"./parse.y\"\n {yyerror (\"':' expected\"); RECOVER;;\n     break;}\n case 227:\n-#line 1284 \"./parse.y\"\n+#line 1285 \"./parse.y\"\n { yyval.node = finish_labeled_statement (yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 228:\n-#line 1291 \"./parse.y\"\n+#line 1292 \"./parse.y\"\n {\n \t\t  /* We have a statement. Generate a WFL around it so\n \t\t     we can debug it */\n@@ -3536,108 +3537,108 @@ case 228:\n \t\t;\n     break;}\n case 229:\n-#line 1300 \"./parse.y\"\n+#line 1301 \"./parse.y\"\n {\n \t\t  if (ctxp->prevent_ese != lineno)\n \t\t    yyerror (\"Invalid expression statement\");\n \t\t  DRECOVER (expr_stmt);\n \t\t;\n     break;}\n case 230:\n-#line 1306 \"./parse.y\"\n+#line 1307 \"./parse.y\"\n {\n \t\t  if (ctxp->prevent_ese != lineno)\n \t\t    yyerror (\"Invalid expression statement\");\n \t\t  DRECOVER (expr_stmt);\n \t\t;\n     break;}\n case 231:\n-#line 1312 \"./parse.y\"\n+#line 1313 \"./parse.y\"\n {\n \t\t  if (ctxp->prevent_ese != lineno)\n \t\t    yyerror (\"Invalid expression statement\");\n \t\t  DRECOVER (expr_stmt);\n \t\t;\n     break;}\n case 232:\n-#line 1318 \"./parse.y\"\n+#line 1319 \"./parse.y\"\n {yyerror (\"')' expected\"); RECOVER;;\n     break;}\n case 233:\n-#line 1320 \"./parse.y\"\n+#line 1321 \"./parse.y\"\n {\n \t\t  yyerror (\"Constructor invocation must be first \"\n \t\t\t   \"thing in a constructor\"); \n \t\t  RECOVER;\n \t\t;\n     break;}\n case 234:\n-#line 1326 \"./parse.y\"\n+#line 1327 \"./parse.y\"\n {yyerror (\"')' expected\"); RECOVER;;\n     break;}\n case 235:\n-#line 1328 \"./parse.y\"\n+#line 1329 \"./parse.y\"\n {\n \t\t  yyerror (\"Constructor invocation must be first \"\n \t\t\t   \"thing in a constructor\"); \n \t\t  RECOVER;\n \t\t;\n     break;}\n case 236:\n-#line 1334 \"./parse.y\"\n+#line 1335 \"./parse.y\"\n {yyerror (\"'(' expected\"); RECOVER;;\n     break;}\n case 237:\n-#line 1336 \"./parse.y\"\n+#line 1337 \"./parse.y\"\n {yyerror (\"')' expected\"); RECOVER;;\n     break;}\n case 238:\n-#line 1338 \"./parse.y\"\n+#line 1339 \"./parse.y\"\n {yyerror (\"')' expected\"); RECOVER;;\n     break;}\n case 239:\n-#line 1340 \"./parse.y\"\n+#line 1341 \"./parse.y\"\n {yyerror (\"';' expected\"); RECOVER;;\n     break;}\n case 240:\n-#line 1342 \"./parse.y\"\n+#line 1343 \"./parse.y\"\n {yyerror (\"';' expected\"); RECOVER;;\n     break;}\n case 248:\n-#line 1357 \"./parse.y\"\n+#line 1358 \"./parse.y\"\n { \n \t\t  yyval.node = build_if_else_statement (yyvsp[-3].operator.location, yyvsp[-2].node, \n \t\t\t\t\t\tyyvsp[0].node, NULL_TREE);\n \t\t;\n     break;}\n case 249:\n-#line 1362 \"./parse.y\"\n+#line 1363 \"./parse.y\"\n {yyerror (\"'(' expected\"); RECOVER;;\n     break;}\n case 250:\n-#line 1364 \"./parse.y\"\n+#line 1365 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 251:\n-#line 1366 \"./parse.y\"\n+#line 1367 \"./parse.y\"\n {yyerror (\"')' expected\"); RECOVER;;\n     break;}\n case 252:\n-#line 1371 \"./parse.y\"\n+#line 1372 \"./parse.y\"\n { yyval.node = build_if_else_statement (yyvsp[-5].operator.location, yyvsp[-4].node, yyvsp[-2].node, yyvsp[0].node); ;\n     break;}\n case 253:\n-#line 1376 \"./parse.y\"\n+#line 1377 \"./parse.y\"\n { yyval.node = build_if_else_statement (yyvsp[-5].operator.location, yyvsp[-4].node, yyvsp[-2].node, yyvsp[0].node); ;\n     break;}\n case 254:\n-#line 1381 \"./parse.y\"\n+#line 1382 \"./parse.y\"\n {\n \t\t  enter_block ();\n \t\t;\n     break;}\n case 255:\n-#line 1385 \"./parse.y\"\n+#line 1386 \"./parse.y\"\n { \n \t\t  /* Make into \"proper list\" of COMPOUND_EXPRs.\n \t\t     I.e. make the last statment also have its own\n@@ -3648,112 +3649,112 @@ case 255:\n \t\t;\n     break;}\n case 256:\n-#line 1397 \"./parse.y\"\n+#line 1398 \"./parse.y\"\n { \n \t\t  yyval.node = build (SWITCH_EXPR, NULL_TREE, yyvsp[-1].node, NULL_TREE);\n \t\t  EXPR_WFL_LINECOL (yyval.node) = yyvsp[-2].operator.location;\n \t\t;\n     break;}\n case 257:\n-#line 1402 \"./parse.y\"\n+#line 1403 \"./parse.y\"\n {yyerror (\"'(' expected\"); RECOVER;;\n     break;}\n case 258:\n-#line 1404 \"./parse.y\"\n+#line 1405 \"./parse.y\"\n {yyerror (\"Missing term or ')'\"); DRECOVER(switch_statement);;\n     break;}\n case 259:\n-#line 1406 \"./parse.y\"\n+#line 1407 \"./parse.y\"\n {yyerror (\"'{' expected\"); RECOVER;;\n     break;}\n case 260:\n-#line 1414 \"./parse.y\"\n+#line 1415 \"./parse.y\"\n { yyval.node = NULL_TREE; ;\n     break;}\n case 261:\n-#line 1416 \"./parse.y\"\n+#line 1417 \"./parse.y\"\n { yyval.node = NULL_TREE; ;\n     break;}\n case 262:\n-#line 1418 \"./parse.y\"\n+#line 1419 \"./parse.y\"\n { yyval.node = NULL_TREE; ;\n     break;}\n case 263:\n-#line 1420 \"./parse.y\"\n+#line 1421 \"./parse.y\"\n { yyval.node = NULL_TREE; ;\n     break;}\n case 269:\n-#line 1439 \"./parse.y\"\n+#line 1440 \"./parse.y\"\n { \n \t\t  tree lab = build1 (CASE_EXPR, NULL_TREE, yyvsp[-1].node);\n \t\t  EXPR_WFL_LINECOL (lab) = yyvsp[-2].operator.location;\n \t\t  java_method_add_stmt (current_function_decl, lab);\n \t\t;\n     break;}\n case 270:\n-#line 1445 \"./parse.y\"\n+#line 1446 \"./parse.y\"\n { \n \t\t  tree lab = build1 (DEFAULT_EXPR, NULL_TREE, NULL_TREE);\n \t\t  EXPR_WFL_LINECOL (lab) = yyvsp[-1].operator.location;\n \t\t  java_method_add_stmt (current_function_decl, lab);\n \t\t;\n     break;}\n case 271:\n-#line 1451 \"./parse.y\"\n+#line 1452 \"./parse.y\"\n {yyerror (\"Missing or invalid constant expression\"); RECOVER;;\n     break;}\n case 272:\n-#line 1453 \"./parse.y\"\n+#line 1454 \"./parse.y\"\n {yyerror (\"':' expected\"); RECOVER;;\n     break;}\n case 273:\n-#line 1455 \"./parse.y\"\n+#line 1456 \"./parse.y\"\n {yyerror (\"':' expected\"); RECOVER;;\n     break;}\n case 274:\n-#line 1460 \"./parse.y\"\n+#line 1461 \"./parse.y\"\n { \n \t\t  tree body = build_loop_body (yyvsp[-2].operator.location, yyvsp[-1].node, 0);\n \t\t  yyval.node = build_new_loop (body);\n \t\t;\n     break;}\n case 275:\n-#line 1468 \"./parse.y\"\n+#line 1469 \"./parse.y\"\n { yyval.node = finish_loop_body (0, NULL_TREE, yyvsp[0].node, 0); ;\n     break;}\n case 276:\n-#line 1470 \"./parse.y\"\n+#line 1471 \"./parse.y\"\n {YYERROR_NOW; yyerror (\"'(' expected\"); RECOVER;;\n     break;}\n case 277:\n-#line 1472 \"./parse.y\"\n+#line 1473 \"./parse.y\"\n {yyerror (\"Missing term and ')' expected\"); RECOVER;;\n     break;}\n case 278:\n-#line 1474 \"./parse.y\"\n+#line 1475 \"./parse.y\"\n {yyerror (\"')' expected\"); RECOVER;;\n     break;}\n case 279:\n-#line 1479 \"./parse.y\"\n+#line 1480 \"./parse.y\"\n { yyval.node = finish_loop_body (0, NULL_TREE, yyvsp[0].node, 0); ;\n     break;}\n case 280:\n-#line 1484 \"./parse.y\"\n+#line 1485 \"./parse.y\"\n { \n \t\t  tree body = build_loop_body (0, NULL_TREE, 1);\n \t\t  yyval.node = build_new_loop (body);\n \t\t;\n     break;}\n case 281:\n-#line 1493 \"./parse.y\"\n+#line 1494 \"./parse.y\"\n { yyval.node = finish_loop_body (yyvsp[-3].operator.location, yyvsp[-2].node, yyvsp[-5].node, 1); ;\n     break;}\n case 282:\n-#line 1498 \"./parse.y\"\n+#line 1499 \"./parse.y\"\n { yyval.node = finish_for_loop (EXPR_WFL_LINECOL (yyvsp[-4].node), yyvsp[-4].node, yyvsp[-2].node, yyvsp[0].node); ;\n     break;}\n case 283:\n-#line 1500 \"./parse.y\"\n+#line 1501 \"./parse.y\"\n { \n \t\t  yyval.node = finish_for_loop (0, NULL_TREE, yyvsp[-2].node, yyvsp[0].node);\n \t\t  /* We have not condition, so we get rid of the EXIT_EXPR */\n@@ -3762,23 +3763,23 @@ case 283:\n \t\t;\n     break;}\n case 284:\n-#line 1507 \"./parse.y\"\n+#line 1508 \"./parse.y\"\n {yyerror (\"Invalid control expression\"); RECOVER;;\n     break;}\n case 285:\n-#line 1509 \"./parse.y\"\n+#line 1510 \"./parse.y\"\n {yyerror (\"Invalid update expression\"); RECOVER;;\n     break;}\n case 286:\n-#line 1511 \"./parse.y\"\n+#line 1512 \"./parse.y\"\n {yyerror (\"Invalid update expression\"); RECOVER;;\n     break;}\n case 287:\n-#line 1516 \"./parse.y\"\n+#line 1517 \"./parse.y\"\n { yyval.node = finish_for_loop (EXPR_WFL_LINECOL (yyvsp[-4].node), yyvsp[-4].node, yyvsp[-2].node, yyvsp[0].node);;\n     break;}\n case 288:\n-#line 1518 \"./parse.y\"\n+#line 1519 \"./parse.y\"\n { \n \t\t  yyval.node = finish_for_loop (0, NULL_TREE, yyvsp[-2].node, yyvsp[0].node);\n \t\t  /* We have not condition, so we get rid of the EXIT_EXPR */\n@@ -3787,23 +3788,23 @@ case 288:\n \t\t;\n     break;}\n case 289:\n-#line 1528 \"./parse.y\"\n+#line 1529 \"./parse.y\"\n { \n \t\t  /* This scope defined for local variable that may be\n                      defined within the scope of the for loop */\n \t\t  enter_block (); \n \t\t;\n     break;}\n case 290:\n-#line 1534 \"./parse.y\"\n+#line 1535 \"./parse.y\"\n {yyerror (\"'(' expected\"); DRECOVER(for_1);;\n     break;}\n case 291:\n-#line 1536 \"./parse.y\"\n+#line 1537 \"./parse.y\"\n {yyerror (\"Invalid init statement\"); RECOVER;;\n     break;}\n case 292:\n-#line 1541 \"./parse.y\"\n+#line 1542 \"./parse.y\"\n { \n \t\t  /* We now declare the loop body. The loop is\n                      declared as a for loop. */\n@@ -3816,179 +3817,179 @@ case 292:\n \t\t;\n     break;}\n case 293:\n-#line 1553 \"./parse.y\"\n+#line 1554 \"./parse.y\"\n { yyval.node = empty_stmt_node; ;\n     break;}\n case 294:\n-#line 1555 \"./parse.y\"\n+#line 1556 \"./parse.y\"\n { \n \t\t  /* Init statement recorded within the previously\n                      defined block scope */\n \t\t  yyval.node = java_method_add_stmt (current_function_decl, yyvsp[0].node);\n \t\t;\n     break;}\n case 295:\n-#line 1561 \"./parse.y\"\n+#line 1562 \"./parse.y\"\n { \n \t\t  /* Local variable are recorded within the previously\n \t\t     defined block scope */\n \t\t  yyval.node = NULL_TREE;\n \t\t;\n     break;}\n case 296:\n-#line 1567 \"./parse.y\"\n+#line 1568 \"./parse.y\"\n {yyerror (\"';' expected\"); DRECOVER(for_init_1);;\n     break;}\n case 297:\n-#line 1571 \"./parse.y\"\n+#line 1572 \"./parse.y\"\n {yyval.node = empty_stmt_node;;\n     break;}\n case 298:\n-#line 1573 \"./parse.y\"\n+#line 1574 \"./parse.y\"\n { yyval.node = build_debugable_stmt (BUILD_LOCATION (), yyvsp[0].node); ;\n     break;}\n case 299:\n-#line 1578 \"./parse.y\"\n+#line 1579 \"./parse.y\"\n { yyval.node = add_stmt_to_compound (NULL_TREE, NULL_TREE, yyvsp[0].node); ;\n     break;}\n case 300:\n-#line 1580 \"./parse.y\"\n+#line 1581 \"./parse.y\"\n { yyval.node = add_stmt_to_compound (yyvsp[-2].node, NULL_TREE, yyvsp[0].node); ;\n     break;}\n case 301:\n-#line 1582 \"./parse.y\"\n+#line 1583 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 302:\n-#line 1587 \"./parse.y\"\n+#line 1588 \"./parse.y\"\n { yyval.node = build_bc_statement (yyvsp[-1].operator.location, 1, NULL_TREE); ;\n     break;}\n case 303:\n-#line 1589 \"./parse.y\"\n+#line 1590 \"./parse.y\"\n { yyval.node = build_bc_statement (yyvsp[-2].operator.location, 1, yyvsp[-1].node); ;\n     break;}\n case 304:\n-#line 1591 \"./parse.y\"\n+#line 1592 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 305:\n-#line 1593 \"./parse.y\"\n+#line 1594 \"./parse.y\"\n {yyerror (\"';' expected\"); RECOVER;;\n     break;}\n case 306:\n-#line 1598 \"./parse.y\"\n+#line 1599 \"./parse.y\"\n { yyval.node = build_bc_statement (yyvsp[-1].operator.location, 0, NULL_TREE); ;\n     break;}\n case 307:\n-#line 1600 \"./parse.y\"\n+#line 1601 \"./parse.y\"\n { yyval.node = build_bc_statement (yyvsp[-2].operator.location, 0, yyvsp[-1].node); ;\n     break;}\n case 308:\n-#line 1602 \"./parse.y\"\n+#line 1603 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 309:\n-#line 1604 \"./parse.y\"\n+#line 1605 \"./parse.y\"\n {yyerror (\"';' expected\"); RECOVER;;\n     break;}\n case 310:\n-#line 1609 \"./parse.y\"\n+#line 1610 \"./parse.y\"\n { yyval.node = build_return (yyvsp[-1].operator.location, NULL_TREE); ;\n     break;}\n case 311:\n-#line 1611 \"./parse.y\"\n+#line 1612 \"./parse.y\"\n { yyval.node = build_return (yyvsp[-2].operator.location, yyvsp[-1].node); ;\n     break;}\n case 312:\n-#line 1613 \"./parse.y\"\n+#line 1614 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 313:\n-#line 1615 \"./parse.y\"\n+#line 1616 \"./parse.y\"\n {yyerror (\"';' expected\"); RECOVER;;\n     break;}\n case 314:\n-#line 1620 \"./parse.y\"\n+#line 1621 \"./parse.y\"\n { \n \t\t  yyval.node = build1 (THROW_EXPR, NULL_TREE, yyvsp[-1].node);\n \t\t  EXPR_WFL_LINECOL (yyval.node) = yyvsp[-2].operator.location;\n \t\t;\n     break;}\n case 315:\n-#line 1625 \"./parse.y\"\n+#line 1626 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 316:\n-#line 1627 \"./parse.y\"\n+#line 1628 \"./parse.y\"\n {yyerror (\"';' expected\"); RECOVER;;\n     break;}\n case 317:\n-#line 1632 \"./parse.y\"\n+#line 1633 \"./parse.y\"\n { \n \t\t  yyval.node = build (SYNCHRONIZED_EXPR, NULL_TREE, yyvsp[-2].node, yyvsp[0].node);\n \t\t  EXPR_WFL_LINECOL (yyval.node) = \n \t\t    EXPR_WFL_LINECOL (MODIFIER_WFL (SYNCHRONIZED_TK));\n \t\t;\n     break;}\n case 318:\n-#line 1638 \"./parse.y\"\n+#line 1639 \"./parse.y\"\n {yyerror (\"'{' expected\"); RECOVER;;\n     break;}\n case 319:\n-#line 1640 \"./parse.y\"\n+#line 1641 \"./parse.y\"\n {yyerror (\"'(' expected\"); RECOVER;;\n     break;}\n case 320:\n-#line 1642 \"./parse.y\"\n+#line 1643 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 321:\n-#line 1644 \"./parse.y\"\n+#line 1645 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 322:\n-#line 1649 \"./parse.y\"\n+#line 1650 \"./parse.y\"\n {\n \t\t  if ((1 << yyvsp[0].value) != ACC_SYNCHRONIZED)\n \t\t    fatal (\"synchronized was '%d' - yyparse\", (1 << yyvsp[0].value));\n \t\t;\n     break;}\n case 323:\n-#line 1657 \"./parse.y\"\n+#line 1658 \"./parse.y\"\n { yyval.node = build_try_statement (yyvsp[-2].operator.location, yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 324:\n-#line 1659 \"./parse.y\"\n+#line 1660 \"./parse.y\"\n { yyval.node = build_try_finally_statement (yyvsp[-2].operator.location, yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 325:\n-#line 1661 \"./parse.y\"\n+#line 1662 \"./parse.y\"\n { yyval.node = build_try_finally_statement \n \t\t    (yyvsp[-3].operator.location, build_try_statement (yyvsp[-3].operator.location,\n \t\t\t\t\t\t       yyvsp[-2].node, yyvsp[-1].node), yyvsp[0].node);\n \t\t;\n     break;}\n case 326:\n-#line 1666 \"./parse.y\"\n+#line 1667 \"./parse.y\"\n {yyerror (\"'{' expected\"); DRECOVER (try_statement);;\n     break;}\n case 328:\n-#line 1672 \"./parse.y\"\n+#line 1673 \"./parse.y\"\n { \n \t\t  TREE_CHAIN (yyvsp[0].node) = yyvsp[-1].node;\n \t\t  yyval.node = yyvsp[0].node;\n \t\t;\n     break;}\n case 329:\n-#line 1680 \"./parse.y\"\n+#line 1681 \"./parse.y\"\n { \n \t\t  java_method_add_stmt (current_function_decl, yyvsp[0].node);\n \t\t  exit_block ();\n \t\t  yyval.node = yyvsp[-1].node;\n \t\t;\n     break;}\n case 330:\n-#line 1688 \"./parse.y\"\n+#line 1689 \"./parse.y\"\n { \n \t\t  /* We add a block to define a scope for\n \t\t     formal_parameter (CCBP). The formal parameter is\n@@ -4006,184 +4007,184 @@ case 330:\n \t\t;\n     break;}\n case 331:\n-#line 1704 \"./parse.y\"\n+#line 1705 \"./parse.y\"\n {yyerror (\"'(' expected\"); RECOVER;;\n     break;}\n case 332:\n-#line 1706 \"./parse.y\"\n+#line 1707 \"./parse.y\"\n {yyerror (\"Missing term or ')' expected\"); DRECOVER (2);;\n     break;}\n case 333:\n-#line 1708 \"./parse.y\"\n+#line 1709 \"./parse.y\"\n {yyerror (\"')' expected\"); DRECOVER (1);;\n     break;}\n case 334:\n-#line 1713 \"./parse.y\"\n+#line 1714 \"./parse.y\"\n { yyval.node = yyvsp[0].node; ;\n     break;}\n case 335:\n-#line 1715 \"./parse.y\"\n+#line 1716 \"./parse.y\"\n {yyerror (\"'{' expected\"); RECOVER; ;\n     break;}\n case 339:\n-#line 1727 \"./parse.y\"\n+#line 1728 \"./parse.y\"\n { yyval.node = build_this (yyvsp[0].operator.location); ;\n     break;}\n case 340:\n-#line 1729 \"./parse.y\"\n+#line 1730 \"./parse.y\"\n {yyval.node = yyvsp[-1].node;;\n     break;}\n case 345:\n-#line 1738 \"./parse.y\"\n+#line 1739 \"./parse.y\"\n { yyval.node = parse_jdk1_1_error (\"named class literals\"); ;\n     break;}\n case 346:\n-#line 1740 \"./parse.y\"\n+#line 1741 \"./parse.y\"\n { yyval.node = build_class_ref (yyvsp[-2].node); ;\n     break;}\n case 347:\n-#line 1742 \"./parse.y\"\n+#line 1743 \"./parse.y\"\n { yyval.node = build_class_ref (void_type_node); ;\n     break;}\n case 348:\n-#line 1747 \"./parse.y\"\n+#line 1748 \"./parse.y\"\n { yyval.node = parse_jdk1_1_error (\"class literals\"); ;\n     break;}\n case 349:\n-#line 1749 \"./parse.y\"\n+#line 1750 \"./parse.y\"\n {yyerror (\"')' expected\"); RECOVER;;\n     break;}\n case 350:\n-#line 1751 \"./parse.y\"\n+#line 1752 \"./parse.y\"\n {yyerror (\"'class' or 'this' expected\" ); RECOVER;;\n     break;}\n case 351:\n-#line 1753 \"./parse.y\"\n+#line 1754 \"./parse.y\"\n {yyerror (\"'class' expected\" ); RECOVER;;\n     break;}\n case 352:\n-#line 1755 \"./parse.y\"\n+#line 1756 \"./parse.y\"\n {yyerror (\"'class' expected\" ); RECOVER;;\n     break;}\n case 353:\n-#line 1760 \"./parse.y\"\n+#line 1761 \"./parse.y\"\n { yyval.node = build_new_invocation (yyvsp[-3].node, yyvsp[-1].node); ;\n     break;}\n case 354:\n-#line 1762 \"./parse.y\"\n+#line 1763 \"./parse.y\"\n { yyval.node = build_new_invocation (yyvsp[-2].node, NULL_TREE); ;\n     break;}\n case 355:\n-#line 1767 \"./parse.y\"\n+#line 1768 \"./parse.y\"\n { yyval.node = parse_jdk1_1_error (\"inner class instance creation\"); ;\n     break;}\n case 356:\n-#line 1769 \"./parse.y\"\n+#line 1770 \"./parse.y\"\n { yyval.node = parse_jdk1_1_error (\"inner class instance creation\"); ;\n     break;}\n case 361:\n-#line 1778 \"./parse.y\"\n+#line 1779 \"./parse.y\"\n {yyerror (\"'(' expected\"); DRECOVER(new_1);;\n     break;}\n case 362:\n-#line 1780 \"./parse.y\"\n+#line 1781 \"./parse.y\"\n {yyerror (\"'(' expected\"); RECOVER;;\n     break;}\n case 363:\n-#line 1782 \"./parse.y\"\n+#line 1783 \"./parse.y\"\n {yyerror (\"')' or term expected\"); RECOVER;;\n     break;}\n case 364:\n-#line 1784 \"./parse.y\"\n+#line 1785 \"./parse.y\"\n {yyerror (\"')' expected\"); RECOVER;;\n     break;}\n case 365:\n-#line 1786 \"./parse.y\"\n+#line 1787 \"./parse.y\"\n {YYERROR_NOW; yyerror (\"Identifier expected\"); RECOVER;;\n     break;}\n case 366:\n-#line 1788 \"./parse.y\"\n+#line 1789 \"./parse.y\"\n {yyerror (\"'(' expected\"); RECOVER;;\n     break;}\n case 369:\n-#line 1798 \"./parse.y\"\n+#line 1799 \"./parse.y\"\n { \n \t\t  yyval.node = tree_cons (NULL_TREE, yyvsp[0].node, NULL_TREE);\n \t\t  ctxp->formal_parameter_number = 1; \n \t\t;\n     break;}\n case 370:\n-#line 1803 \"./parse.y\"\n+#line 1804 \"./parse.y\"\n {\n \t\t  ctxp->formal_parameter_number += 1;\n \t\t  yyval.node = tree_cons (NULL_TREE, yyvsp[0].node, yyvsp[-2].node);\n \t\t;\n     break;}\n case 371:\n-#line 1808 \"./parse.y\"\n+#line 1809 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 372:\n-#line 1813 \"./parse.y\"\n+#line 1814 \"./parse.y\"\n { yyval.node = build_newarray_node (yyvsp[-1].node, yyvsp[0].node, 0); ;\n     break;}\n case 373:\n-#line 1815 \"./parse.y\"\n+#line 1816 \"./parse.y\"\n { yyval.node = build_newarray_node (yyvsp[-1].node, yyvsp[0].node, 0); ;\n     break;}\n case 374:\n-#line 1817 \"./parse.y\"\n+#line 1818 \"./parse.y\"\n { yyval.node = build_newarray_node (yyvsp[-2].node, yyvsp[-1].node, CURRENT_OSB (ctxp));;\n     break;}\n case 375:\n-#line 1819 \"./parse.y\"\n+#line 1820 \"./parse.y\"\n { yyval.node = build_newarray_node (yyvsp[-2].node, yyvsp[-1].node, CURRENT_OSB (ctxp));;\n     break;}\n case 376:\n-#line 1823 \"./parse.y\"\n+#line 1824 \"./parse.y\"\n { yyval.node = parse_jdk1_1_error (\"anonymous array\"); ;\n     break;}\n case 377:\n-#line 1825 \"./parse.y\"\n+#line 1826 \"./parse.y\"\n { yyval.node = parse_jdk1_1_error (\"anonymous array\"); ;\n     break;}\n case 378:\n-#line 1827 \"./parse.y\"\n+#line 1828 \"./parse.y\"\n {yyerror (\"'[' expected\"); DRECOVER (\"]\");;\n     break;}\n case 379:\n-#line 1829 \"./parse.y\"\n+#line 1830 \"./parse.y\"\n {yyerror (\"']' expected\"); RECOVER;;\n     break;}\n case 380:\n-#line 1834 \"./parse.y\"\n+#line 1835 \"./parse.y\"\n { yyval.node = build_tree_list (NULL_TREE, yyvsp[0].node); ;\n     break;}\n case 381:\n-#line 1836 \"./parse.y\"\n+#line 1837 \"./parse.y\"\n { yyval.node = tree_cons (NULL_TREE, yyvsp[0].node, yyval.node); ;\n     break;}\n case 382:\n-#line 1841 \"./parse.y\"\n+#line 1842 \"./parse.y\"\n { \n \t\t  EXPR_WFL_LINECOL (yyvsp[-1].node) = yyvsp[-2].operator.location;\n \t\t  yyval.node = yyvsp[-1].node;\n \t\t;\n     break;}\n case 383:\n-#line 1846 \"./parse.y\"\n+#line 1847 \"./parse.y\"\n {yyerror (\"']' expected\"); RECOVER;;\n     break;}\n case 384:\n-#line 1848 \"./parse.y\"\n+#line 1849 \"./parse.y\"\n {\n \t\t  yyerror (\"Missing term\");\n \t\t  yyerror (\"']' expected\");\n \t\t  RECOVER;\n \t\t;\n     break;}\n case 385:\n-#line 1857 \"./parse.y\"\n+#line 1858 \"./parse.y\"\n { \n \t\t  int allocate = 0;\n \t\t  /* If not initialized, allocate memory for the osb\n@@ -4211,19 +4212,19 @@ case 385:\n \t\t;\n     break;}\n case 386:\n-#line 1883 \"./parse.y\"\n+#line 1884 \"./parse.y\"\n { CURRENT_OSB (ctxp)++; ;\n     break;}\n case 387:\n-#line 1885 \"./parse.y\"\n+#line 1886 \"./parse.y\"\n { yyerror (\"']' expected\"); RECOVER;;\n     break;}\n case 388:\n-#line 1890 \"./parse.y\"\n+#line 1891 \"./parse.y\"\n { yyval.node = make_qualified_primary (yyvsp[-2].node, yyvsp[0].node, yyvsp[-1].operator.location); ;\n     break;}\n case 389:\n-#line 1894 \"./parse.y\"\n+#line 1895 \"./parse.y\"\n {\n \t\t  tree super_wfl = \n \t\t    build_wfl_node (super_identifier_node);\n@@ -4232,19 +4233,19 @@ case 389:\n \t\t;\n     break;}\n case 390:\n-#line 1901 \"./parse.y\"\n+#line 1902 \"./parse.y\"\n {yyerror (\"Field expected\"); DRECOVER (super_field_acces);;\n     break;}\n case 391:\n-#line 1906 \"./parse.y\"\n+#line 1907 \"./parse.y\"\n { yyval.node = build_method_invocation (yyvsp[-2].node, NULL_TREE); ;\n     break;}\n case 392:\n-#line 1908 \"./parse.y\"\n+#line 1909 \"./parse.y\"\n { yyval.node = build_method_invocation (yyvsp[-3].node, yyvsp[-1].node); ;\n     break;}\n case 393:\n-#line 1910 \"./parse.y\"\n+#line 1911 \"./parse.y\"\n { \n \t\t  if (TREE_CODE (yyvsp[-4].node) == THIS_EXPR)\n \t\t    yyval.node = build_this_super_qualified_invocation \n@@ -4257,7 +4258,7 @@ case 393:\n \t\t;\n     break;}\n case 394:\n-#line 1921 \"./parse.y\"\n+#line 1922 \"./parse.y\"\n { \n \t\t  if (TREE_CODE (yyvsp[-5].node) == THIS_EXPR)\n \t\t    yyval.node = build_this_super_qualified_invocation \n@@ -4270,121 +4271,121 @@ case 394:\n \t\t;\n     break;}\n case 395:\n-#line 1932 \"./parse.y\"\n+#line 1933 \"./parse.y\"\n { \n \t\t  yyval.node = build_this_super_qualified_invocation \n \t\t    (0, yyvsp[-2].node, NULL_TREE, yyvsp[-4].operator.location, yyvsp[-3].operator.location);\n \t\t;\n     break;}\n case 396:\n-#line 1937 \"./parse.y\"\n+#line 1938 \"./parse.y\"\n {\n \t\t  yyval.node = build_this_super_qualified_invocation \n \t\t    (0, yyvsp[-3].node, yyvsp[-1].node, yyvsp[-5].operator.location, yyvsp[-4].operator.location);\n \t\t;\n     break;}\n case 397:\n-#line 1946 \"./parse.y\"\n+#line 1947 \"./parse.y\"\n { yyerror (\"'(' expected\"); DRECOVER (method_invocation); ;\n     break;}\n case 398:\n-#line 1948 \"./parse.y\"\n+#line 1949 \"./parse.y\"\n { yyerror (\"'(' expected\"); DRECOVER (method_invocation); ;\n     break;}\n case 399:\n-#line 1953 \"./parse.y\"\n+#line 1954 \"./parse.y\"\n { yyval.node = build_array_ref (yyvsp[-2].operator.location, yyvsp[-3].node, yyvsp[-1].node); ;\n     break;}\n case 400:\n-#line 1955 \"./parse.y\"\n+#line 1956 \"./parse.y\"\n { yyval.node = build_array_ref (yyvsp[-2].operator.location, yyvsp[-3].node, yyvsp[-1].node); ;\n     break;}\n case 401:\n-#line 1957 \"./parse.y\"\n+#line 1958 \"./parse.y\"\n {\n \t\t  yyerror (\"Missing term and ']' expected\");\n \t\t  DRECOVER(array_access);\n \t\t;\n     break;}\n case 402:\n-#line 1962 \"./parse.y\"\n+#line 1963 \"./parse.y\"\n {\n \t\t  yyerror (\"']' expected\");\n \t\t  DRECOVER(array_access);\n \t\t;\n     break;}\n case 403:\n-#line 1967 \"./parse.y\"\n+#line 1968 \"./parse.y\"\n {\n \t\t  yyerror (\"Missing term and ']' expected\");\n \t\t  DRECOVER(array_access);\n \t\t;\n     break;}\n case 404:\n-#line 1972 \"./parse.y\"\n+#line 1973 \"./parse.y\"\n {\n \t\t  yyerror (\"']' expected\");\n \t\t  DRECOVER(array_access);\n \t\t;\n     break;}\n case 409:\n-#line 1987 \"./parse.y\"\n+#line 1988 \"./parse.y\"\n { yyval.node = build_incdec (yyvsp[0].operator.token, yyvsp[0].operator.location, yyvsp[-1].node, 1); ;\n     break;}\n case 410:\n-#line 1992 \"./parse.y\"\n+#line 1993 \"./parse.y\"\n { yyval.node = build_incdec (yyvsp[0].operator.token, yyvsp[0].operator.location, yyvsp[-1].node, 1); ;\n     break;}\n case 413:\n-#line 1999 \"./parse.y\"\n+#line 2000 \"./parse.y\"\n {yyval.node = build_unaryop (yyvsp[-1].operator.token, yyvsp[-1].operator.location, yyvsp[0].node); ;\n     break;}\n case 414:\n-#line 2001 \"./parse.y\"\n+#line 2002 \"./parse.y\"\n {yyval.node = build_unaryop (yyvsp[-1].operator.token, yyvsp[-1].operator.location, yyvsp[0].node); ;\n     break;}\n case 416:\n-#line 2004 \"./parse.y\"\n+#line 2005 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;\n     break;}\n case 417:\n-#line 2006 \"./parse.y\"\n+#line 2007 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;\n     break;}\n case 418:\n-#line 2011 \"./parse.y\"\n+#line 2012 \"./parse.y\"\n {yyval.node = build_incdec (yyvsp[-1].operator.token, yyvsp[-1].operator.location, yyvsp[0].node, 0); ;\n     break;}\n case 419:\n-#line 2013 \"./parse.y\"\n+#line 2014 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;\n     break;}\n case 420:\n-#line 2018 \"./parse.y\"\n+#line 2019 \"./parse.y\"\n {yyval.node = build_incdec (yyvsp[-1].operator.token, yyvsp[-1].operator.location, yyvsp[0].node, 0); ;\n     break;}\n case 421:\n-#line 2020 \"./parse.y\"\n+#line 2021 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;\n     break;}\n case 423:\n-#line 2026 \"./parse.y\"\n+#line 2027 \"./parse.y\"\n {yyval.node = build_unaryop (yyvsp[-1].operator.token, yyvsp[-1].operator.location, yyvsp[0].node); ;\n     break;}\n case 424:\n-#line 2028 \"./parse.y\"\n+#line 2029 \"./parse.y\"\n {yyval.node = build_unaryop (yyvsp[-1].operator.token, yyvsp[-1].operator.location, yyvsp[0].node); ;\n     break;}\n case 426:\n-#line 2031 \"./parse.y\"\n+#line 2032 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;\n     break;}\n case 427:\n-#line 2033 \"./parse.y\"\n+#line 2034 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;\n     break;}\n case 428:\n-#line 2038 \"./parse.y\"\n+#line 2039 \"./parse.y\"\n { \n \t\t  tree type = yyvsp[-3].node;\n \t\t  while (CURRENT_OSB (ctxp)--)\n@@ -4394,15 +4395,15 @@ case 428:\n \t\t;\n     break;}\n case 429:\n-#line 2046 \"./parse.y\"\n+#line 2047 \"./parse.y\"\n { yyval.node = build_cast (yyvsp[-3].operator.location, yyvsp[-2].node, yyvsp[0].node); ;\n     break;}\n case 430:\n-#line 2048 \"./parse.y\"\n+#line 2049 \"./parse.y\"\n { yyval.node = build_cast (yyvsp[-3].operator.location, yyvsp[-2].node, yyvsp[0].node); ;\n     break;}\n case 431:\n-#line 2050 \"./parse.y\"\n+#line 2051 \"./parse.y\"\n { \n \t\t  char *ptr;\n \t\t  while (CURRENT_OSB (ctxp)--)\n@@ -4417,275 +4418,275 @@ case 431:\n \t\t;\n     break;}\n case 432:\n-#line 2063 \"./parse.y\"\n+#line 2064 \"./parse.y\"\n {yyerror (\"']' expected, invalid type expression\");;\n     break;}\n case 433:\n-#line 2065 \"./parse.y\"\n+#line 2066 \"./parse.y\"\n {\n \t          if (ctxp->prevent_ese != lineno)\n \t\t    yyerror (\"Invalid type expression\"); RECOVER;\n \t\t  RECOVER;\n \t\t;\n     break;}\n case 434:\n-#line 2071 \"./parse.y\"\n+#line 2072 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 435:\n-#line 2073 \"./parse.y\"\n+#line 2074 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 436:\n-#line 2075 \"./parse.y\"\n+#line 2076 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 438:\n-#line 2081 \"./parse.y\"\n+#line 2082 \"./parse.y\"\n { \n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), \n \t\t\t\t    yyvsp[-1].operator.location, yyvsp[-2].node, yyvsp[0].node);\n \t\t;\n     break;}\n case 439:\n-#line 2086 \"./parse.y\"\n+#line 2087 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 440:\n-#line 2091 \"./parse.y\"\n+#line 2092 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 441:\n-#line 2096 \"./parse.y\"\n+#line 2097 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 442:\n-#line 2098 \"./parse.y\"\n+#line 2099 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 443:\n-#line 2100 \"./parse.y\"\n+#line 2101 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 445:\n-#line 2106 \"./parse.y\"\n+#line 2107 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 446:\n-#line 2111 \"./parse.y\"\n+#line 2112 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 447:\n-#line 2116 \"./parse.y\"\n+#line 2117 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 448:\n-#line 2118 \"./parse.y\"\n+#line 2119 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 450:\n-#line 2124 \"./parse.y\"\n+#line 2125 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 451:\n-#line 2129 \"./parse.y\"\n+#line 2130 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 452:\n-#line 2134 \"./parse.y\"\n+#line 2135 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 453:\n-#line 2139 \"./parse.y\"\n+#line 2140 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 454:\n-#line 2141 \"./parse.y\"\n+#line 2142 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 455:\n-#line 2143 \"./parse.y\"\n+#line 2144 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 457:\n-#line 2149 \"./parse.y\"\n+#line 2150 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 458:\n-#line 2154 \"./parse.y\"\n+#line 2155 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 459:\n-#line 2159 \"./parse.y\"\n+#line 2160 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 460:\n-#line 2164 \"./parse.y\"\n+#line 2165 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 461:\n-#line 2169 \"./parse.y\"\n+#line 2170 \"./parse.y\"\n { yyval.node = build_binop (INSTANCEOF_EXPR, yyvsp[-1].operator.location, yyvsp[-2].node, yyvsp[0].node); ;\n     break;}\n case 462:\n-#line 2171 \"./parse.y\"\n+#line 2172 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 463:\n-#line 2173 \"./parse.y\"\n+#line 2174 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 464:\n-#line 2175 \"./parse.y\"\n+#line 2176 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 465:\n-#line 2177 \"./parse.y\"\n+#line 2178 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 466:\n-#line 2179 \"./parse.y\"\n+#line 2180 \"./parse.y\"\n {yyerror (\"Invalid reference type\"); RECOVER;;\n     break;}\n case 468:\n-#line 2185 \"./parse.y\"\n+#line 2186 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 469:\n-#line 2190 \"./parse.y\"\n+#line 2191 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 470:\n-#line 2195 \"./parse.y\"\n+#line 2196 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 471:\n-#line 2197 \"./parse.y\"\n+#line 2198 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 473:\n-#line 2203 \"./parse.y\"\n+#line 2204 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 474:\n-#line 2208 \"./parse.y\"\n+#line 2209 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 476:\n-#line 2214 \"./parse.y\"\n+#line 2215 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 477:\n-#line 2219 \"./parse.y\"\n+#line 2220 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 479:\n-#line 2225 \"./parse.y\"\n+#line 2226 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 480:\n-#line 2230 \"./parse.y\"\n+#line 2231 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 482:\n-#line 2236 \"./parse.y\"\n+#line 2237 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 483:\n-#line 2241 \"./parse.y\"\n+#line 2242 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 485:\n-#line 2247 \"./parse.y\"\n+#line 2248 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 486:\n-#line 2252 \"./parse.y\"\n+#line 2253 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 488:\n-#line 2258 \"./parse.y\"\n+#line 2259 \"./parse.y\"\n {\n \t\t  yyval.node = build (CONDITIONAL_EXPR, NULL_TREE, yyvsp[-4].node, yyvsp[-2].node, yyvsp[0].node);\n \t\t  EXPR_WFL_LINECOL (yyval.node) = yyvsp[-3].operator.location;\n \t\t;\n     break;}\n case 489:\n-#line 2263 \"./parse.y\"\n+#line 2264 \"./parse.y\"\n {\n \t\t  YYERROR_NOW;\n \t\t  yyerror (\"Missing term\");\n \t\t  DRECOVER (1);\n \t\t;\n     break;}\n case 490:\n-#line 2269 \"./parse.y\"\n+#line 2270 \"./parse.y\"\n {yyerror (\"Missing term\"); DRECOVER (2);;\n     break;}\n case 491:\n-#line 2271 \"./parse.y\"\n+#line 2272 \"./parse.y\"\n {yyerror (\"Missing term\"); DRECOVER (3);;\n     break;}\n case 494:\n-#line 2281 \"./parse.y\"\n+#line 2282 \"./parse.y\"\n { yyval.node = build_assignment (yyvsp[-1].operator.token, yyvsp[-1].operator.location, yyvsp[-2].node, yyvsp[0].node); ;\n     break;}\n case 495:\n-#line 2283 \"./parse.y\"\n+#line 2284 \"./parse.y\"\n {\n \t\t  if (ctxp->prevent_ese != lineno)\n \t\t    yyerror (\"Missing term\");\n@@ -4694,7 +4695,7 @@ case 495:\n     break;}\n }\n    /* the action file gets copied in in place of this dollarsign */\n-#line 498 \"/usr/local/share/bison.simple\"\n+#line 498 \"/usr/share/bison.simple\"\n \f\n   yyvsp -= yylen;\n   yyssp -= yylen;\n@@ -4890,7 +4891,7 @@ case 495:\n   yystate = yyn;\n   goto yynewstate;\n }\n-#line 2309 \"./parse.y\"\n+#line 2310 \"./parse.y\"\n \n \f\n "}, {"sha": "deba7e9c6bf2d26beeec02dc1999813e543b71a2", "filename": "gcc/java/parse.y", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b384405b341a1539bf3b10b4ce5a99f2ed389630/gcc%2Fjava%2Fparse.y", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b384405b341a1539bf3b10b4ce5a99f2ed389630/gcc%2Fjava%2Fparse.y", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fparse.y?ref=b384405b341a1539bf3b10b4ce5a99f2ed389630", "patch": "@@ -62,6 +62,7 @@ definitions and other extensions.  */\n #include \"convert.h\"\n #include \"buffer.h\"\n #include \"xref.h\"\n+#include \"function.h\"\n #include \"except.h\"\n \n #ifndef DIR_SEPARATOR"}, {"sha": "ad76d88b460539093b29a22cd708e722b715c49b", "filename": "gcc/stmt.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b384405b341a1539bf3b10b4ce5a99f2ed389630/gcc%2Fstmt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b384405b341a1539bf3b10b4ce5a99f2ed389630/gcc%2Fstmt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fstmt.c?ref=b384405b341a1539bf3b10b4ce5a99f2ed389630", "patch": "@@ -467,7 +467,6 @@ save_stmt_status (p)\n   p->emit_filename = emit_filename;\n   p->emit_lineno = emit_lineno;\n   p->goto_fixup_chain = goto_fixup_chain;\n-  save_eh_status (p);\n }\n \n void\n@@ -488,7 +487,6 @@ restore_stmt_status (p)\n   emit_filename = p->emit_filename;\n   emit_lineno = p->emit_lineno;\n   goto_fixup_chain = p->goto_fixup_chain;\n-  restore_eh_status (p);\n }\n \f\n /* Emit a no-op instruction.  */"}, {"sha": "c72e752e622f4eb5b20903474256f6d80bbc47ec", "filename": "gcc/stor-layout.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b384405b341a1539bf3b10b4ce5a99f2ed389630/gcc%2Fstor-layout.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b384405b341a1539bf3b10b4ce5a99f2ed389630/gcc%2Fstor-layout.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fstor-layout.c?ref=b384405b341a1539bf3b10b4ce5a99f2ed389630", "patch": "@@ -25,7 +25,6 @@ Boston, MA 02111-1307, USA.  */\n #include \"tree.h\"\n #include \"rtl.h\"\n #include \"flags.h\"\n-#include \"except.h\"\n #include \"function.h\"\n #include \"expr.h\"\n #include \"toplev.h\""}, {"sha": "f0dc0ee4da5e439836168035009989adf73ac637", "filename": "gcc/tree.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b384405b341a1539bf3b10b4ce5a99f2ed389630/gcc%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b384405b341a1539bf3b10b4ce5a99f2ed389630/gcc%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.c?ref=b384405b341a1539bf3b10b4ce5a99f2ed389630", "patch": "@@ -37,7 +37,6 @@ Boston, MA 02111-1307, USA.  */\n #include \"system.h\"\n #include \"flags.h\"\n #include \"tree.h\"\n-#include \"except.h\"\n #include \"function.h\"\n #include \"obstack.h\"\n #include \"toplev.h\""}, {"sha": "2c015fbc5adbafee0cdaf776278b905eb6406abb", "filename": "gcc/varasm.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b384405b341a1539bf3b10b4ce5a99f2ed389630/gcc%2Fvarasm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b384405b341a1539bf3b10b4ce5a99f2ed389630/gcc%2Fvarasm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvarasm.c?ref=b384405b341a1539bf3b10b4ce5a99f2ed389630", "patch": "@@ -33,7 +33,6 @@ Boston, MA 02111-1307, USA.  */\n #include \"rtl.h\"\n #include \"tree.h\"\n #include \"flags.h\"\n-#include \"except.h\"\n #include \"function.h\"\n #include \"expr.h\"\n #include \"output.h\""}]}