{"sha": "27738602d5c08a8725ef63e43899bc6bfb4eab3c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Mjc3Mzg2MDJkNWMwOGE4NzI1ZWY2M2U0Mzg5OWJjNmJmYjRlYWIzYw==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2008-09-03T20:15:27Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2008-09-03T20:15:27Z"}, "message": "alpha.c (alpha_split_lock_test_and_set): Move memory barrier to below the test-and-set.\n\n        * config/alpha/alpha.c (alpha_split_lock_test_and_set): Move\n        memory barrier to below the test-and-set.\n        (alpha_split_lock_test_and_set_12): Likewise.\n\nFrom-SVN: r139950", "tree": {"sha": "022b78777d9e0e53c2e59c7d77769cb1fa21caa0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/022b78777d9e0e53c2e59c7d77769cb1fa21caa0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/27738602d5c08a8725ef63e43899bc6bfb4eab3c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/27738602d5c08a8725ef63e43899bc6bfb4eab3c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/27738602d5c08a8725ef63e43899bc6bfb4eab3c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/27738602d5c08a8725ef63e43899bc6bfb4eab3c/comments", "author": null, "committer": null, "parents": [{"sha": "a7f32992e310ba052e04f24dfb8a54a4bc59c35b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a7f32992e310ba052e04f24dfb8a54a4bc59c35b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a7f32992e310ba052e04f24dfb8a54a4bc59c35b"}], "stats": {"total": 13, "additions": 10, "deletions": 3}, "files": [{"sha": "60a17b256d4781a6bf181a4893ad9c41d60118fe", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27738602d5c08a8725ef63e43899bc6bfb4eab3c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27738602d5c08a8725ef63e43899bc6bfb4eab3c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=27738602d5c08a8725ef63e43899bc6bfb4eab3c", "patch": "@@ -1,3 +1,9 @@\n+2008-09-03  Richard Henderson  <rth@redhat.com>\n+\n+\t* config/alpha/alpha.c (alpha_split_lock_test_and_set): Move\n+\tmemory barrier to below the test-and-set.\n+\t(alpha_split_lock_test_and_set_12): Likewise.\n+\n 2008-09-03  Vladimir Makarov  <vmakarov@redhat.com>\n \n \tPR rtl-opt/37243"}, {"sha": "3d546bef81bbec43032e8d0348b67c967a6d0eb9", "filename": "gcc/config/alpha/alpha.c", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27738602d5c08a8725ef63e43899bc6bfb4eab3c/gcc%2Fconfig%2Falpha%2Falpha.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27738602d5c08a8725ef63e43899bc6bfb4eab3c/gcc%2Fconfig%2Falpha%2Falpha.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Falpha.c?ref=27738602d5c08a8725ef63e43899bc6bfb4eab3c", "patch": "@@ -4600,8 +4600,6 @@ alpha_split_lock_test_and_set (rtx retval, rtx mem, rtx val, rtx scratch)\n   enum machine_mode mode = GET_MODE (mem);\n   rtx label, x, cond = gen_lowpart (DImode, scratch);\n \n-  emit_insn (gen_memory_barrier ());\n-\n   label = gen_rtx_LABEL_REF (DImode, gen_label_rtx ());\n   emit_label (XEXP (label, 0));\n \n@@ -4611,6 +4609,8 @@ alpha_split_lock_test_and_set (rtx retval, rtx mem, rtx val, rtx scratch)\n \n   x = gen_rtx_EQ (DImode, cond, const0_rtx);\n   emit_unlikely_jump (x, label);\n+\n+  emit_insn (gen_memory_barrier ());\n }\n \n void\n@@ -4649,7 +4649,6 @@ alpha_split_lock_test_and_set_12 (enum machine_mode mode, rtx dest, rtx addr,\n   mem = gen_rtx_MEM (DImode, align);\n   MEM_VOLATILE_P (mem) = 1;\n \n-  emit_insn (gen_memory_barrier ());\n   label = gen_rtx_LABEL_REF (DImode, gen_label_rtx ());\n   emit_label (XEXP (label, 0));\n \n@@ -4673,6 +4672,8 @@ alpha_split_lock_test_and_set_12 (enum machine_mode mode, rtx dest, rtx addr,\n \n   x = gen_rtx_EQ (DImode, scratch, const0_rtx);\n   emit_unlikely_jump (x, label);\n+\n+  emit_insn (gen_memory_barrier ());\n }\n \f\n /* Adjust the cost of a scheduling dependency.  Return the new cost of"}]}