{"sha": "69b66ff02353a87585329bb3cf4ac20d6dee1b16", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjliNjZmZjAyMzUzYTg3NTg1MzI5YmIzY2Y0YWMyMGQ2ZGVlMWIxNg==", "commit": {"author": {"name": "David Malcolm", "email": "dmalcolm@redhat.com", "date": "2021-04-05T14:48:01Z"}, "committer": {"name": "David Malcolm", "email": "dmalcolm@redhat.com", "date": "2021-04-05T14:48:01Z"}, "message": "analyzer: fix apparent hang with -fanalyzer-verbosity=0 [PR analyzer/99886]\n\nThe analyzer appeared to enter an infinite loop on malloc-1.c\nwhen -fanalyzer-verbosity=0 was used.  In fact, it was slowly\ncounting from 0 to 0xffffffff.\n\nRoot cause is looping up to effectively ((unsigned)0) - 1 in\ndiagnostic_manager::consolidate_conditions when there are no events\nin the path.\n\nFixed by the following, which uses signed integers when subtracting\nfrom path->num_events () when simplifying checker_paths.\n\ngcc/analyzer/ChangeLog:\n\tPR analyzer/99886\n\t* diagnostic-manager.cc\n\t(diagnostic_manager::prune_interproc_events): Use signed integers\n\twhen subtracting one from path->num_events ().\n\t(diagnostic_manager::consolidate_conditions): Likewise.  Convert\n\tnext_idx to a signed int.\n\ngcc/testsuite/ChangeLog:\n\tPR analyzer/99886\n\t* gcc.dg/analyzer/pr99886.c: New test.", "tree": {"sha": "d65789a51f9c7a14f4b6fcf0f13a157d8a680bd8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d65789a51f9c7a14f4b6fcf0f13a157d8a680bd8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/69b66ff02353a87585329bb3cf4ac20d6dee1b16", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/69b66ff02353a87585329bb3cf4ac20d6dee1b16", "html_url": "https://github.com/Rust-GCC/gccrs/commit/69b66ff02353a87585329bb3cf4ac20d6dee1b16", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/69b66ff02353a87585329bb3cf4ac20d6dee1b16/comments", "author": {"login": "davidmalcolm", "id": 1553248, "node_id": "MDQ6VXNlcjE1NTMyNDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1553248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidmalcolm", "html_url": "https://github.com/davidmalcolm", "followers_url": "https://api.github.com/users/davidmalcolm/followers", "following_url": "https://api.github.com/users/davidmalcolm/following{/other_user}", "gists_url": "https://api.github.com/users/davidmalcolm/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidmalcolm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidmalcolm/subscriptions", "organizations_url": "https://api.github.com/users/davidmalcolm/orgs", "repos_url": "https://api.github.com/users/davidmalcolm/repos", "events_url": "https://api.github.com/users/davidmalcolm/events{/privacy}", "received_events_url": "https://api.github.com/users/davidmalcolm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "davidmalcolm", "id": 1553248, "node_id": "MDQ6VXNlcjE1NTMyNDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1553248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidmalcolm", "html_url": "https://github.com/davidmalcolm", "followers_url": "https://api.github.com/users/davidmalcolm/followers", "following_url": "https://api.github.com/users/davidmalcolm/following{/other_user}", "gists_url": "https://api.github.com/users/davidmalcolm/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidmalcolm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidmalcolm/subscriptions", "organizations_url": "https://api.github.com/users/davidmalcolm/orgs", "repos_url": "https://api.github.com/users/davidmalcolm/repos", "events_url": "https://api.github.com/users/davidmalcolm/events{/privacy}", "received_events_url": "https://api.github.com/users/davidmalcolm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bd89b8fe9efbdf0a95d827553d1a84fd3cefaa16", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bd89b8fe9efbdf0a95d827553d1a84fd3cefaa16", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bd89b8fe9efbdf0a95d827553d1a84fd3cefaa16"}], "stats": {"total": 29, "additions": 26, "deletions": 3}, "files": [{"sha": "443ff058f6597fb69c0cbe04b47913a87aa6ea88", "filename": "gcc/analyzer/diagnostic-manager.cc", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/69b66ff02353a87585329bb3cf4ac20d6dee1b16/gcc%2Fanalyzer%2Fdiagnostic-manager.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/69b66ff02353a87585329bb3cf4ac20d6dee1b16/gcc%2Fanalyzer%2Fdiagnostic-manager.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fanalyzer%2Fdiagnostic-manager.cc?ref=69b66ff02353a87585329bb3cf4ac20d6dee1b16", "patch": "@@ -2081,7 +2081,7 @@ diagnostic_manager::prune_interproc_events (checker_path *path) const\n   do\n     {\n       changed = false;\n-      int idx = path->num_events () - 1;\n+      int idx = (signed)path->num_events () - 1;\n       while (idx >= 0)\n \t{\n \t  /* Prune [..., call, function-entry, return, ...] triples.  */\n@@ -2200,7 +2200,9 @@ diagnostic_manager::consolidate_conditions (checker_path *path) const\n   if (flag_analyzer_verbose_edges)\n     return;\n \n-  for (unsigned start_idx = 0; start_idx < path->num_events () - 1; start_idx++)\n+  for (int start_idx = 0;\n+       start_idx < (signed)path->num_events () - 1;\n+       start_idx++)\n     {\n       if (path->cfg_edge_pair_at_p (start_idx))\n \t{\n@@ -2231,7 +2233,7 @@ diagnostic_manager::consolidate_conditions (checker_path *path) const\n \t       [start_idx, next_idx)\n \t     where all apart from the final event are on the same line,\n \t     and all are either TRUE or FALSE edges, matching the initial.  */\n-\t  unsigned next_idx = start_idx + 2;\n+\t  int next_idx = start_idx + 2;\n \t  while (path->cfg_edge_pair_at_p (next_idx)\n \t\t && same_line_as_p (start_exp_loc, path, next_idx))\n \t    {"}, {"sha": "da768ba62981bdadc0cceab2c7b23d6cd33ed473", "filename": "gcc/testsuite/gcc.dg/analyzer/pr99886.c", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/69b66ff02353a87585329bb3cf4ac20d6dee1b16/gcc%2Ftestsuite%2Fgcc.dg%2Fanalyzer%2Fpr99886.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/69b66ff02353a87585329bb3cf4ac20d6dee1b16/gcc%2Ftestsuite%2Fgcc.dg%2Fanalyzer%2Fpr99886.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fanalyzer%2Fpr99886.c?ref=69b66ff02353a87585329bb3cf4ac20d6dee1b16", "patch": "@@ -0,0 +1,21 @@\n+/* Regression test for hang with -fanalyzer-verbosity=0.  */\n+/* { dg-additional-options \"-fanalyzer-verbosity=0\" } */\n+\n+#include <stdlib.h>\n+\n+struct coord {\n+  float x;\n+  float y;\n+};\n+\n+void test_34 (void)\n+{\n+  float *q;\n+  struct coord *p = malloc (sizeof (struct coord));\n+  if (!p)\n+    return;\n+  p->x = 0.0f;\n+  q = &p->x;\n+  free (p);\n+  *q = 1.0f; /* { dg-warning \"use after 'free' of 'q'\" } */\n+};"}]}