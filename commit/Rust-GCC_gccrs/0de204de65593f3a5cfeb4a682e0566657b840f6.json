{"sha": "0de204de65593f3a5cfeb4a682e0566657b840f6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGRlMjA0ZGU2NTU5M2YzYTVjZmViNGE2ODJlMDU2NjY1N2I4NDBmNg==", "commit": {"author": {"name": "Andrew Pinski", "email": "apinski@cavium.com", "date": "2011-07-26T05:28:45Z"}, "committer": {"name": "Andrew Pinski", "email": "pinskia@gcc.gnu.org", "date": "2011-07-26T05:28:45Z"}, "message": "re PR middle-end/49671 (volatile goes missing after inlining)\n\n2011-07-25  Andrew Pinski  <apinski@cavium.com>\n\n\tPR tree-opt/49671\n\t* tree-inline.c (remap_gimple_op_r): Copy TREE_THIS_VOLATILE and\n\tTREE_THIS_NOTRAP into the inner most MEM_REF.\n\tAlways copy TREE_THIS_VOLATILE.\n\t* tree-sra.c (ptr_parm_has_direct_uses): Check that the lhs, rhs and\n\targuments are not volatile references.\n\n2011-07-25  Andrew Pinski  <apinski@cavium.com>\n\n\tPR tree-opt/49671\n\t* gcc.dg/tree-ssa/pr49671-1.c: New testcase.\n\t* gcc.dg/tree-ssa/pr49671-2.c: New testcase.\n\nFrom-SVN: r176782", "tree": {"sha": "5df32a8770e8baaad425277737ea84c3ea2e263b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5df32a8770e8baaad425277737ea84c3ea2e263b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0de204de65593f3a5cfeb4a682e0566657b840f6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0de204de65593f3a5cfeb4a682e0566657b840f6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0de204de65593f3a5cfeb4a682e0566657b840f6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0de204de65593f3a5cfeb4a682e0566657b840f6/comments", "author": {"login": "apinski-cavium", "id": 6335315, "node_id": "MDQ6VXNlcjYzMzUzMTU=", "avatar_url": "https://avatars.githubusercontent.com/u/6335315?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apinski-cavium", "html_url": "https://github.com/apinski-cavium", "followers_url": "https://api.github.com/users/apinski-cavium/followers", "following_url": "https://api.github.com/users/apinski-cavium/following{/other_user}", "gists_url": "https://api.github.com/users/apinski-cavium/gists{/gist_id}", "starred_url": "https://api.github.com/users/apinski-cavium/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apinski-cavium/subscriptions", "organizations_url": "https://api.github.com/users/apinski-cavium/orgs", "repos_url": "https://api.github.com/users/apinski-cavium/repos", "events_url": "https://api.github.com/users/apinski-cavium/events{/privacy}", "received_events_url": "https://api.github.com/users/apinski-cavium/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "9bc13c238df4ed18f702e70f976408dee0c7df6b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9bc13c238df4ed18f702e70f976408dee0c7df6b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9bc13c238df4ed18f702e70f976408dee0c7df6b"}], "stats": {"total": 62, "additions": 58, "deletions": 4}, "files": [{"sha": "c93e5e3890ed81274694d52bc7e61178c4806cc8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0de204de65593f3a5cfeb4a682e0566657b840f6/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0de204de65593f3a5cfeb4a682e0566657b840f6/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0de204de65593f3a5cfeb4a682e0566657b840f6", "patch": "@@ -1,3 +1,12 @@\n+2011-07-25  Andrew Pinski  <apinski@cavium.com>\n+\n+\tPR tree-opt/49671\n+\t* tree-inline.c (remap_gimple_op_r): Copy TREE_THIS_VOLATILE and\n+\tTREE_THIS_NOTRAP into the inner most MEM_REF.\n+\tAlways copy TREE_THIS_VOLATILE.\n+\t* tree-sra.c (ptr_parm_has_direct_uses): Check that the lhs, rhs and\n+\targuments are not volatile references.\n+\n 2011-07-25  Richard Henderson  <rth@redhat.com>\n \n \t* insn-notes.def (NOTE_INSN_CFA_RESTORE_STATE): Remove."}, {"sha": "dcaab8777011dd6d63d8abb33d04537caac4ad45", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0de204de65593f3a5cfeb4a682e0566657b840f6/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0de204de65593f3a5cfeb4a682e0566657b840f6/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=0de204de65593f3a5cfeb4a682e0566657b840f6", "patch": "@@ -1,3 +1,9 @@\n+2011-07-25  Andrew Pinski  <apinski@cavium.com>\n+\n+\tPR tree-opt/49671\n+\t* gcc.dg/tree-ssa/pr49671-1.c: New testcase.\n+\t* gcc.dg/tree-ssa/pr49671-2.c: New testcase.\n+\t\n 2011-07-25  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n \n \t* lib/target-supports.exp (check_effective_target_mmap): New proc."}, {"sha": "acc9980dbdae1ecb6b200e4c8049d661585086c0", "filename": "gcc/testsuite/gcc.dg/tree-ssa/pr49671-1.c", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0de204de65593f3a5cfeb4a682e0566657b840f6/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr49671-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0de204de65593f3a5cfeb4a682e0566657b840f6/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr49671-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr49671-1.c?ref=0de204de65593f3a5cfeb4a682e0566657b840f6", "patch": "@@ -0,0 +1,17 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -fdump-tree-optimized\" }  */\n+volatile int t;\n+static inline int cvmx_atomic_get32(volatile int *ptr)\n+{\n+    return *ptr;\n+}\n+void f(void)\n+{\n+  while (!cvmx_atomic_get32(&t))\n+    ;\n+}\n+\n+/* { dg-final { scan-tree-dump \"\\{v\\}\" \"optimized\" } } */\n+/* { dg-final { cleanup-tree-dump \"optimized\" } } */\n+\n+"}, {"sha": "ba5a9d99cf75ce6517b65f0c582d9d9b58f7fe47", "filename": "gcc/testsuite/gcc.dg/tree-ssa/pr49671-2.c", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0de204de65593f3a5cfeb4a682e0566657b840f6/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr49671-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0de204de65593f3a5cfeb4a682e0566657b840f6/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr49671-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr49671-2.c?ref=0de204de65593f3a5cfeb4a682e0566657b840f6", "patch": "@@ -0,0 +1,17 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -fdump-tree-optimized\" }  */\n+int t;\n+static inline int cvmx_atomic_get32(int *ptr)\n+{\n+    return *(volatile int*)ptr;\n+}\n+void f(void)\n+{\n+  while (!cvmx_atomic_get32(&t))\n+    ;\n+}\n+\n+/* { dg-final { scan-tree-dump \"\\{v\\}\" \"optimized\" } } */\n+/* { dg-final { cleanup-tree-dump \"optimized\" } } */\n+\n+"}, {"sha": "e9daff63cc351045a3b9487cdc6fbd7fddc3acbb", "filename": "gcc/tree-inline.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0de204de65593f3a5cfeb4a682e0566657b840f6/gcc%2Ftree-inline.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0de204de65593f3a5cfeb4a682e0566657b840f6/gcc%2Ftree-inline.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-inline.c?ref=0de204de65593f3a5cfeb4a682e0566657b840f6", "patch": "@@ -881,14 +881,16 @@ remap_gimple_op_r (tree *tp, int *walk_subtrees, void *data)\n \t\t\t      build_int_cst\n \t\t\t      (TREE_TYPE (TREE_OPERAND (*tp, 1)), 0));\n \t      *tp = tem;\n+\t      TREE_THIS_VOLATILE (*tem_basep) = TREE_THIS_VOLATILE (old);\n+\t      TREE_THIS_NOTRAP (*tem_basep) = TREE_THIS_NOTRAP (old);\n \t    }\n \t  else\n \t    {\n \t      *tp = fold_build2 (MEM_REF, type,\n \t\t\t\t ptr, TREE_OPERAND (*tp, 1));\n-\t      TREE_THIS_VOLATILE (*tp) = TREE_THIS_VOLATILE (old);\n \t      TREE_THIS_NOTRAP (*tp) = TREE_THIS_NOTRAP (old);\n \t    }\n+\t  TREE_THIS_VOLATILE (*tp) = TREE_THIS_VOLATILE (old);\n \t  TREE_NO_WARNING (*tp) = TREE_NO_WARNING (old);\n \t  *walk_subtrees = 0;\n \t  return NULL;"}, {"sha": "cbebb81ba02dc78959d5572dd3466c9d34de3f86", "filename": "gcc/tree-sra.c", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0de204de65593f3a5cfeb4a682e0566657b840f6/gcc%2Ftree-sra.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0de204de65593f3a5cfeb4a682e0566657b840f6/gcc%2Ftree-sra.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-sra.c?ref=0de204de65593f3a5cfeb4a682e0566657b840f6", "patch": "@@ -3302,7 +3302,8 @@ ptr_parm_has_direct_uses (tree parm)\n \t      && TREE_OPERAND (lhs, 0) == name\n \t      && integer_zerop (TREE_OPERAND (lhs, 1))\n \t      && types_compatible_p (TREE_TYPE (lhs),\n-\t\t\t\t     TREE_TYPE (TREE_TYPE (name))))\n+\t\t\t\t     TREE_TYPE (TREE_TYPE (name)))\n+\t      && !TREE_THIS_VOLATILE (lhs))\n \t    uses_ok++;\n \t}\n       if (gimple_assign_single_p (stmt))\n@@ -3314,7 +3315,8 @@ ptr_parm_has_direct_uses (tree parm)\n \t      && TREE_OPERAND (rhs, 0) == name\n \t      && integer_zerop (TREE_OPERAND (rhs, 1))\n \t      && types_compatible_p (TREE_TYPE (rhs),\n-\t\t\t\t     TREE_TYPE (TREE_TYPE (name))))\n+\t\t\t\t     TREE_TYPE (TREE_TYPE (name)))\n+\t      && !TREE_THIS_VOLATILE (rhs))\n \t    uses_ok++;\n \t}\n       else if (is_gimple_call (stmt))\n@@ -3329,7 +3331,8 @@ ptr_parm_has_direct_uses (tree parm)\n \t\t  && TREE_OPERAND (arg, 0) == name\n \t\t  && integer_zerop (TREE_OPERAND (arg, 1))\n \t\t  && types_compatible_p (TREE_TYPE (arg),\n-\t\t\t\t\t TREE_TYPE (TREE_TYPE (name))))\n+\t\t\t\t\t TREE_TYPE (TREE_TYPE (name)))\n+\t\t  && !TREE_THIS_VOLATILE (arg))\n \t\tuses_ok++;\n \t    }\n \t}"}]}