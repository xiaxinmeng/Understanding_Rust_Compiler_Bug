{"sha": "e66236c6e9eb83730dde15f359f2a21cb603887b", "node_id": "C_kwDOANBUbNoAKGU2NjIzNmM2ZTllYjgzNzMwZGRlMTVmMzU5ZjJhMjFjYjYwMzg4N2I", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2022-10-07T07:08:46Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2022-10-07T07:08:46Z"}, "message": "Fix comment typos\n\nWhen looking at tree-inline.cc I've noticed a comment typo and grepped\nfor similar typos elsewhere.\n\n2022-10-07  Jakub Jelinek  <jakub@redhat.com>\n\n\t* ipa-prop.h (ipa_constant_data): Fix comment typo.\n\t* value-range.cc (irange::irange_contains_p): Likewise.\n\t* value-relation.cc (dom_oracle::set_one_relation): Likewise.\n\t* gimple-predicate-analysis.cc (predicate::simplify_4): Likewise.\n\t* tree-inline.cc (remap_ssa_name): Likewise.", "tree": {"sha": "7593038711f21bce00e300f543bfbfb3af55325d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7593038711f21bce00e300f543bfbfb3af55325d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e66236c6e9eb83730dde15f359f2a21cb603887b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e66236c6e9eb83730dde15f359f2a21cb603887b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e66236c6e9eb83730dde15f359f2a21cb603887b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e66236c6e9eb83730dde15f359f2a21cb603887b/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "88f04e90f63f08620cc9cd2f059a1315b70bed3b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/88f04e90f63f08620cc9cd2f059a1315b70bed3b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/88f04e90f63f08620cc9cd2f059a1315b70bed3b"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "5013a4447d65d7b9df36891080c01503eb1a49d1", "filename": "gcc/gimple-predicate-analysis.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e66236c6e9eb83730dde15f359f2a21cb603887b/gcc%2Fgimple-predicate-analysis.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e66236c6e9eb83730dde15f359f2a21cb603887b/gcc%2Fgimple-predicate-analysis.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-predicate-analysis.cc?ref=e66236c6e9eb83730dde15f359f2a21cb603887b", "patch": "@@ -1369,7 +1369,7 @@ predicate::simplify_3 ()\n /* Implement rule 4 for the OR predicate PREDS:\n \n    2) ((x AND y) != 0) OR (x != 0 AND y != 0) is equivalent to\n-       (x != 0 ANd y != 0).   */\n+       (x != 0 AND y != 0).   */\n \n bool\n predicate::simplify_4 ()"}, {"sha": "e54842de9a323bce5fb6fea6f53e3cd68d69429e", "filename": "gcc/ipa-prop.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e66236c6e9eb83730dde15f359f2a21cb603887b/gcc%2Fipa-prop.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e66236c6e9eb83730dde15f359f2a21cb603887b/gcc%2Fipa-prop.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-prop.h?ref=e66236c6e9eb83730dde15f359f2a21cb603887b", "patch": "@@ -78,7 +78,7 @@ struct ipa_cst_ref_desc;\n /* Structure holding data required to describe a constant jump function.  */\n struct GTY(()) ipa_constant_data\n {\n-  /* THe value of the constant.  */\n+  /* The value of the constant.  */\n   tree value;\n   /* Pointer to the structure that describes the reference.  */\n   struct ipa_cst_ref_desc GTY((skip)) *rdesc;"}, {"sha": "01d4700076383a3fdf9962373d1be6f02acb1da4", "filename": "gcc/tree-inline.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e66236c6e9eb83730dde15f359f2a21cb603887b/gcc%2Ftree-inline.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e66236c6e9eb83730dde15f359f2a21cb603887b/gcc%2Ftree-inline.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-inline.cc?ref=e66236c6e9eb83730dde15f359f2a21cb603887b", "patch": "@@ -171,7 +171,7 @@ remap_ssa_name (tree name, copy_body_data *id)\n   n = id->decl_map->get (name);\n   if (n)\n     {\n-      /* WHen we perform edge redirection as part of CFG copy, IPA-SRA can\n+      /* When we perform edge redirection as part of CFG copy, IPA-SRA can\n \t remove an unused LHS from a call statement.  Such LHS can however\n \t still appear in debug statements, but their value is lost in this\n \t function and we do not want to map them.  */"}, {"sha": "727ca7dea2c31decdcf93fcd0f477c02601fe6ca", "filename": "gcc/value-range.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e66236c6e9eb83730dde15f359f2a21cb603887b/gcc%2Fvalue-range.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e66236c6e9eb83730dde15f359f2a21cb603887b/gcc%2Fvalue-range.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvalue-range.cc?ref=e66236c6e9eb83730dde15f359f2a21cb603887b", "patch": "@@ -2508,7 +2508,7 @@ irange::irange_contains_p (const irange &r) const\n       // Otherwise, check if this's pair occurs before R's.\n       if (wi::lt_p (wi::to_wide (u), wi::to_wide (rl), sign))\n \t{\n-\t  // THere's still at leats one pair of R left.\n+\t  // There's still at leats one pair of R left.\n \t  if (++i >= num_pairs ())\n \t    return false;\n \t  l = m_base[i * 2];"}, {"sha": "1ee6da199f29b6e2f426219696f94b41b3be0807", "filename": "gcc/value-relation.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e66236c6e9eb83730dde15f359f2a21cb603887b/gcc%2Fvalue-relation.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e66236c6e9eb83730dde15f359f2a21cb603887b/gcc%2Fvalue-relation.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvalue-relation.cc?ref=e66236c6e9eb83730dde15f359f2a21cb603887b", "patch": "@@ -955,7 +955,7 @@ dom_oracle::set_one_relation (basic_block bb, relation_kind k, tree op1,\n \t  ptr->dump (dump_file);\n \t}\n       // Check into whether we can simply replace the relation rather than\n-      // intersecting it.  THis may help with some optimistic iterative\n+      // intersecting it.  This may help with some optimistic iterative\n       // updating algorithms.\n       bool new_rel = ptr->intersect (vr);\n       if (dump_file && (dump_flags & TDF_DETAILS))"}]}