{"sha": "382346e535ff0d18de34888258c948e908646fb6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzgyMzQ2ZTUzNWZmMGQxOGRlMzQ4ODgyNThjOTQ4ZTkwODY0NmZiNg==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2011-09-26T03:56:10Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2011-09-26T03:56:10Z"}, "message": "parser.c (inject_this_parameter): Split out from cp_parser_late_return_type_opt.\n\n\t* parser.c (inject_this_parameter): Split out from\n\tcp_parser_late_return_type_opt.\n\t(cp_parser_class_specifier_1): Use it for NSDMIs.\n\t* tree.c (bot_replace): Replace NSDMI 'this' with real 'this'.\n\nFrom-SVN: r179179", "tree": {"sha": "5dc91fef74bce55e6b16b338d7748374662af4fa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5dc91fef74bce55e6b16b338d7748374662af4fa"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/382346e535ff0d18de34888258c948e908646fb6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/382346e535ff0d18de34888258c948e908646fb6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/382346e535ff0d18de34888258c948e908646fb6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/382346e535ff0d18de34888258c948e908646fb6/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "02aaf894b5992f67cd6cc9fd9a6364ab7cbef2ab", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/02aaf894b5992f67cd6cc9fd9a6364ab7cbef2ab", "html_url": "https://github.com/Rust-GCC/gccrs/commit/02aaf894b5992f67cd6cc9fd9a6364ab7cbef2ab"}], "stats": {"total": 72, "additions": 67, "deletions": 5}, "files": [{"sha": "cd309042f876fee35b61ac78c6e3d225e50956e1", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/382346e535ff0d18de34888258c948e908646fb6/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/382346e535ff0d18de34888258c948e908646fb6/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=382346e535ff0d18de34888258c948e908646fb6", "patch": "@@ -1,3 +1,10 @@\n+2011-09-25  Jason Merrill  <jason@redhat.com>\n+\n+\t* parser.c (inject_this_parameter): Split out from\n+\tcp_parser_late_return_type_opt.\n+\t(cp_parser_class_specifier_1): Use it for NSDMIs.\n+\t* tree.c (bot_replace): Replace NSDMI 'this' with real 'this'.\n+\n 2011-09-24  Jason Merrill  <jason@redhat.com>\n \n \t* except.c (expr_noexcept_p): Split out from finish_noexcept_expr."}, {"sha": "9600aa954384747379859fe12501cd5818b51528", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 32, "deletions": 5, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/382346e535ff0d18de34888258c948e908646fb6/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/382346e535ff0d18de34888258c948e908646fb6/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=382346e535ff0d18de34888258c948e908646fb6", "patch": "@@ -15690,6 +15690,31 @@ cp_parser_virt_specifier_seq_opt (cp_parser* parser)\n   return virt_specifiers;\n }\n \n+/* Used by handling of trailing-return-types and NSDMI, in which 'this'\n+   is in scope even though it isn't real.  */\n+\n+static void\n+inject_this_parameter (tree ctype, cp_cv_quals quals)\n+{\n+  tree this_parm;\n+\n+  if (current_class_ptr)\n+    {\n+      /* We don't clear this between NSDMIs.  Is it already what we want?  */\n+      tree type = TREE_TYPE (TREE_TYPE (current_class_ptr));\n+      if (same_type_ignoring_top_level_qualifiers_p (ctype, type)\n+\t  && cp_type_quals (type) == quals)\n+\treturn;\n+    }\n+\n+  this_parm = build_this_parm (ctype, quals);\n+  /* Clear this first to avoid shortcut in cp_build_indirect_ref.  */\n+  current_class_ptr = NULL_TREE;\n+  current_class_ref\n+    = cp_build_indirect_ref (this_parm, RO_NULL, tf_warning_or_error);\n+  current_class_ptr = this_parm;\n+}\n+\n /* Parse a late-specified return type, if any.  This is not a separate\n    non-terminal, but part of a function declarator, which looks like\n \n@@ -15718,12 +15743,8 @@ cp_parser_late_return_type_opt (cp_parser* parser, cp_cv_quals quals)\n   if (quals >= 0)\n     {\n       /* DR 1207: 'this' is in scope in the trailing return type.  */\n-      tree this_parm = build_this_parm (current_class_type, quals);\n       gcc_assert (current_class_ptr == NULL_TREE);\n-      current_class_ref\n-\t= cp_build_indirect_ref (this_parm, RO_NULL, tf_warning_or_error);\n-      /* Set this second to avoid shortcut in cp_build_indirect_ref.  */\n-      current_class_ptr = this_parm;\n+      inject_this_parameter (current_class_type, quals);\n     }\n \n   type = cp_parser_trailing_type_id (parser);\n@@ -17274,6 +17295,7 @@ cp_parser_class_specifier_1 (cp_parser* parser)\n       tree pushed_scope = NULL_TREE;\n       unsigned ix;\n       cp_default_arg_entry *e;\n+      tree save_ccp, save_ccr;\n \n       /* In a first pass, parse default arguments to the functions.\n \t Then, in a second pass, parse the bodies of the functions.\n@@ -17307,6 +17329,8 @@ cp_parser_class_specifier_1 (cp_parser* parser)\n \t}\n       VEC_truncate (cp_default_arg_entry, unparsed_funs_with_default_args, 0);\n       /* Now parse any NSDMIs.  */\n+      save_ccp = current_class_ptr;\n+      save_ccr = current_class_ref;\n       FOR_EACH_VEC_ELT (tree, unparsed_nsdmis, ix, decl)\n \t{\n \t  if (class_type != DECL_CONTEXT (decl))\n@@ -17316,9 +17340,12 @@ cp_parser_class_specifier_1 (cp_parser* parser)\n \t      class_type = DECL_CONTEXT (decl);\n \t      pushed_scope = push_scope (class_type);\n \t    }\n+\t  inject_this_parameter (class_type, TYPE_UNQUALIFIED);\n \t  cp_parser_late_parsing_nsdmi (parser, decl);\n \t}\n       VEC_truncate (tree, unparsed_nsdmis, 0);\n+      current_class_ptr = save_ccp;\n+      current_class_ref = save_ccr;\n       if (pushed_scope)\n \tpop_scope (pushed_scope);\n       /* Now parse the body of the functions.  */"}, {"sha": "f23b888f3762caeb113cd062f3d6e3c05b5e065d", "filename": "gcc/cp/tree.c", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/382346e535ff0d18de34888258c948e908646fb6/gcc%2Fcp%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/382346e535ff0d18de34888258c948e908646fb6/gcc%2Fcp%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftree.c?ref=382346e535ff0d18de34888258c948e908646fb6", "patch": "@@ -1926,6 +1926,13 @@ bot_replace (tree* t,\n       if (n)\n \t*t = (tree) n->value;\n     }\n+  else if (TREE_CODE (*t) == PARM_DECL\n+\t   && DECL_NAME (*t) == this_identifier)\n+    {\n+      /* In an NSDMI we need to replace the 'this' parameter we used for\n+\t parsing with the real one for this function.  */\n+      *t = current_class_ptr;\n+    }\n \n   return NULL_TREE;\n }"}, {"sha": "1a39c28f03ad838dc0e255fa99d7eb2d74087dd4", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/382346e535ff0d18de34888258c948e908646fb6/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/382346e535ff0d18de34888258c948e908646fb6/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=382346e535ff0d18de34888258c948e908646fb6", "patch": "@@ -1,3 +1,7 @@\n+2011-09-25  Jason Merrill  <jason@redhat.com>\n+\n+\t* g++.dg/cpp0x/nsdmi-defer4.C: New.\n+\n 2011-09-25  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gnat.dg/frame_overflow.ads: New."}, {"sha": "68c8380eed2a26a36dc7ecf5c09d715332f3e540", "filename": "gcc/testsuite/g++.dg/cpp0x/nsdmi-defer4.C", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/382346e535ff0d18de34888258c948e908646fb6/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fnsdmi-defer4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/382346e535ff0d18de34888258c948e908646fb6/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fnsdmi-defer4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fnsdmi-defer4.C?ref=382346e535ff0d18de34888258c948e908646fb6", "patch": "@@ -0,0 +1,17 @@\n+// { dg-options -std=c++0x }\n+\n+struct A\n+{\n+  int i = 42;\n+  int j = f();\n+  int k = this->f();\n+  int f() { return i++; }\n+};\n+\n+A a;\n+\n+int main()\n+{\n+  if (a.j != 42 || a.k != 43 || a.i != 44)\n+    __builtin_abort();\n+}"}]}