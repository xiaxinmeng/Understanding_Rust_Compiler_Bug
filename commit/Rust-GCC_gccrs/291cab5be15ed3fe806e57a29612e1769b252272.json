{"sha": "291cab5be15ed3fe806e57a29612e1769b252272", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjkxY2FiNWJlMTVlZDNmZTgwNmU1N2EyOTYxMmUxNzY5YjI1MjI3Mg==", "commit": {"author": {"name": "Doug Evans", "email": "dje@gnu.org", "date": "1994-11-18T03:50:28Z"}, "committer": {"name": "Doug Evans", "email": "dje@gnu.org", "date": "1994-11-18T03:50:28Z"}, "message": "Initial revision\n\nFrom-SVN: r8507", "tree": {"sha": "6bd881e894861bfc135ac31aa67a1fce3a15ef56", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6bd881e894861bfc135ac31aa67a1fce3a15ef56"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/291cab5be15ed3fe806e57a29612e1769b252272", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/291cab5be15ed3fe806e57a29612e1769b252272", "html_url": "https://github.com/Rust-GCC/gccrs/commit/291cab5be15ed3fe806e57a29612e1769b252272", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/291cab5be15ed3fe806e57a29612e1769b252272/comments", "author": null, "committer": null, "parents": [{"sha": "4b6c091b7e74462ed1a7d548382567b3066dcf4d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4b6c091b7e74462ed1a7d548382567b3066dcf4d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4b6c091b7e74462ed1a7d548382567b3066dcf4d"}], "stats": {"total": 242, "additions": 242, "deletions": 0}, "files": [{"sha": "8ef0b3d4fc778bd33e0f1ff134f5a2a320f108fc", "filename": "gcc/config/i960/t-vxworks960", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/291cab5be15ed3fe806e57a29612e1769b252272/gcc%2Fconfig%2Fi960%2Ft-vxworks960", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/291cab5be15ed3fe806e57a29612e1769b252272/gcc%2Fconfig%2Fi960%2Ft-vxworks960", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi960%2Ft-vxworks960?ref=291cab5be15ed3fe806e57a29612e1769b252272", "patch": "@@ -0,0 +1,23 @@\n+LIBGCC1 = libgcc1.null\n+CROSS_LIBGCC1 = libgcc1.null\n+\n+# We don't want to put exit in libgcc.a for VxWorks, because VxWorks\n+# does not have _exit.\n+LIBGCC2_CFLAGS = -O2 $(GCC_CFLAGS) -g1 -Dexit=unused_exit\n+LIB2FUNCS_EXTRA = fp-bit.c dp-bit.c\n+\n+dp-bit.c: $(srcdir)/config/fp-bit.c\n+\techo '#define FLOAT_BIT_ORDER_MISMATCH' > dp-bit.c\n+\tcat $(srcdir)/config/fp-bit.c >> dp-bit.c\n+\n+fp-bit.c: $(srcdir)/config/fp-bit.c\n+\techo '#define FLOAT' > fp-bit.c\n+\techo '#define FLOAT_BIT_ORDER_MISMATCH' >> fp-bit.c\n+\tcat $(srcdir)/config/fp-bit.c >> fp-bit.c\n+\n+MULTILIB_OPTIONS=mnumerics\n+MULTILIB_DIRNAMES=float\n+MULTILIB_MATCHES=mnumerics=msb mnumerics=msc mnumerics=mkb mnumerics=mkc mnumerics=mmc mnumerics=mcb mnumerics=mcc\n+\n+LIBGCC = stmp-multilib\n+INSTALL_LIBGCC = install-multilib"}, {"sha": "8e97a67d323d1e024de55e6ed5e9a2edace72f67", "filename": "gcc/config/i960/vx960-coff.h", "status": "added", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/291cab5be15ed3fe806e57a29612e1769b252272/gcc%2Fconfig%2Fi960%2Fvx960-coff.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/291cab5be15ed3fe806e57a29612e1769b252272/gcc%2Fconfig%2Fi960%2Fvx960-coff.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi960%2Fvx960-coff.h?ref=291cab5be15ed3fe806e57a29612e1769b252272", "patch": "@@ -0,0 +1,39 @@\n+/* Definitions of target machine for GNU compiler.  Vxworks i960 version.\n+   Copyright (C) 1994 Free Software Foundation, Inc.\n+\n+This file is part of GNU CC.\n+\n+GNU CC is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU CC is distributed in the hope that it will be useful,\n+but WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+GNU General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU CC; see the file COPYING.  If not, write to\n+the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n+\n+/* This file just exists to give specs for the 960 running on VxWorks.  */\n+\n+#include \"i960/i960-coff.h\"\n+\n+/* VxWorks does all the library stuff itself.  */\n+\n+#undef LIB_SPEC\n+#define LIB_SPEC \"\"\n+\n+/* VxWorks provides the functionality of crt0.o and friends itself.  */\n+\n+#undef STARTFILE_SPEC\n+#define STARTFILE_SPEC \"\"\n+\n+#undef CC1_SPEC\n+#define CC1_SPEC \\\n+\t\"%{!mka:%{!mkb:%{!msa:%{!msb:%{!mmc:%{!mca:%{!mcc:%{!mcf:-mkb}}}}}}}}\\\n+\t%{mbout:%{g*:-gstabs}}\\\n+\t%{mcoff:%{g*:-gcoff}}\\\n+\t%{!mbout:%{!mcoff:%{g*:-gcoff}}}\""}, {"sha": "7a6e730fc1d8f24e2529eb5a0fc9850d24837f0e", "filename": "gcc/config/i960/vx960.h", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/291cab5be15ed3fe806e57a29612e1769b252272/gcc%2Fconfig%2Fi960%2Fvx960.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/291cab5be15ed3fe806e57a29612e1769b252272/gcc%2Fconfig%2Fi960%2Fvx960.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi960%2Fvx960.h?ref=291cab5be15ed3fe806e57a29612e1769b252272", "patch": "@@ -0,0 +1,32 @@\n+/* Definitions of target machine for GNU compiler.  Vxworks i960 version.\n+   Copyright (C) 1994 Free Software Foundation, Inc.\n+\n+This file is part of GNU CC.\n+\n+GNU CC is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU CC is distributed in the hope that it will be useful,\n+but WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+GNU General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU CC; see the file COPYING.  If not, write to\n+the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n+\n+/* This file just exists to give specs for the 960 running on VxWorks.  */\n+\n+#include \"i960/i960.h\"\n+\n+/* VxWorks does all the library stuff itself.  */\n+\n+#undef LIB_SPEC\n+#define LIB_SPEC \"\"\n+\n+/* VxWorks provides the functionality of crt0.o and friends itself.  */\n+\n+#undef STARTFILE_SPEC\n+#define STARTFILE_SPEC \"\""}, {"sha": "ca340c0c5691a1b53df5f0125ec5be01d7d35ecc", "filename": "gcc/config/m68k/t-vxworks68", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/291cab5be15ed3fe806e57a29612e1769b252272/gcc%2Fconfig%2Fm68k%2Ft-vxworks68", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/291cab5be15ed3fe806e57a29612e1769b252272/gcc%2Fconfig%2Fm68k%2Ft-vxworks68", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Ft-vxworks68?ref=291cab5be15ed3fe806e57a29612e1769b252272", "patch": "@@ -0,0 +1,27 @@\n+CROSS_LIBGCC1 = libgcc1-asm.a\n+LIB1ASMSRC = m68k/lb1sf68.asm\n+LIB1ASMFUNCS = _mulsi3 _udivsi3 _umulsi3 _divsi3 _umodsi3 _modsi3 \\\n+   _double _float _floatex \\\n+   _eqdf2 _nedf2 _gtdf2 _gedf2 _ltdf2 _ledf2 \\\n+   _eqsf2 _nesf2 _gtsf2 _gesf2 _ltsf2 _lesf2\n+\n+# We don't want to put exit in libgcc.a for VxWorks, because VxWorks\n+# does not have _exit.\n+LIBGCC2_CFLAGS = -O2 $(GCC_CFLAGS) -g1 -Dexit=unused_exit\n+\n+# These are really part of libgcc1, but this will cause them to be\n+# built correctly, so...\n+LIB2FUNCS_EXTRA = fpgnulib.c xfgnulib.c\n+\n+fpgnulib.c: $(srcdir)/config/m68k/fpgnulib.c\n+\tcp $(srcdir)/config/m68k/fpgnulib.c fpgnulib.c\n+xfgnulib.c: $(srcdir)/config/m68k/fpgnulib.c\n+\techo '#define EXTFLOAT' > xfgnulib.c\n+\tcat $(srcdir)/config/m68k/fpgnulib.c >> xfgnulib.c\n+\n+MULTILIB_OPTIONS = m68000/m68020 m68881/msoft-float\n+MULTILIB_DIRNAMES =\n+MULTILIB_MATCHES = m68000=mc68000 m68000=m68302 m68000=m68332 m68020=mc68020 m68020=m68040\n+\n+LIBGCC = stmp-multilib\n+INSTALL_LIBGCC = install-multilib"}, {"sha": "8f7cbd29490d0d40f0aba3961312ba656904561a", "filename": "gcc/config/m68k/vxm68k.h", "status": "added", "additions": 55, "deletions": 0, "changes": 55, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/291cab5be15ed3fe806e57a29612e1769b252272/gcc%2Fconfig%2Fm68k%2Fvxm68k.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/291cab5be15ed3fe806e57a29612e1769b252272/gcc%2Fconfig%2Fm68k%2Fvxm68k.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fvxm68k.h?ref=291cab5be15ed3fe806e57a29612e1769b252272", "patch": "@@ -0,0 +1,55 @@\n+/* Definitions of target machine for GNU compiler.  Vxworks m68k version.\n+   Copyright (C) 1994 Free Software Foundation, Inc.\n+\n+This file is part of GNU CC.\n+\n+GNU CC is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU CC is distributed in the hope that it will be useful,\n+but WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+GNU General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU CC; see the file COPYING.  If not, write to\n+the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n+\n+/* This comment is here to see if it will keep Sun's cpp from dying.  */\n+\n+#define CPP_PREDEFINES \"-Dmc68000 -D__vxworks -D__vxworks_5 -Acpu(m68k) -Amachine(m68k)\"\n+\n+#include \"m68k/m68k-none.h\"\n+#include \"aoutos.h\"\n+\n+#define DBX_DEBUGGING_INFO\n+#undef SDB_DEBUGGING_INFO\n+\n+#undef WCHAR_TYPE\n+#define WCHAR_TYPE \"short unsigned int\"\n+#undef SIZE_TYPE\n+#define SIZE_TYPE \"long unsigned int\"\n+\n+/* VxWorks does all the library stuff itself.  */\n+\n+#define LIB_SPEC \"\"\n+\n+/* Provide required defaults for linker -e. */\n+ \n+#define LINK_SPEC \"%{!nostdlib:%{!r*:%{!e*:-e start}}}\"\n+\n+/* VxWorks provides the functionality of crt0.o and friends itself.  */\n+\n+#define STARTFILE_SPEC \"\"\n+\n+/* Every structure or union's size must be a multiple of 2 bytes.  */\n+\n+#define STRUCTURE_SIZE_BOUNDARY 16\n+\n+/* Allow folding division by zero.  */\n+#define REAL_INFINITY\n+\n+/* GCC is the primary compiler for VxWorks, so we don't need this.  */\n+#undef PCC_STATIC_STRUCT_RETURN"}, {"sha": "d99df4ebb9779d12e10b27d283610178ae830fd0", "filename": "gcc/config/sparc/t-vxsparc", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/291cab5be15ed3fe806e57a29612e1769b252272/gcc%2Fconfig%2Fsparc%2Ft-vxsparc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/291cab5be15ed3fe806e57a29612e1769b252272/gcc%2Fconfig%2Fsparc%2Ft-vxsparc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Ft-vxsparc?ref=291cab5be15ed3fe806e57a29612e1769b252272", "patch": "@@ -0,0 +1,13 @@\n+LIBGCC1 = libgcc1.null\n+CROSS_LIBGCC1 = libgcc1.null\n+\n+# We don't want to put exit in libgcc.a for VxWorks, because VxWorks\n+# does not have _exit.\n+LIBGCC2_CFLAGS = -O2 $(GCC_CFLAGS) -g1 -Dexit=unused_exit\n+\n+MULTILIB_OPTIONS=msoft-float mv8\n+MULTILIB_DIRNAMES=soft v8\n+MULTILIB_MATCHES=msoft-float=mno-fpu\n+\n+LIBGCC = stmp-multilib\n+INSTALL_LIBGCC = install-multilib"}, {"sha": "fbb14c83df1504115ae10fee8693537917841db3", "filename": "gcc/config/sparc/vxsparc.h", "status": "added", "additions": 53, "deletions": 0, "changes": 53, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/291cab5be15ed3fe806e57a29612e1769b252272/gcc%2Fconfig%2Fsparc%2Fvxsparc.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/291cab5be15ed3fe806e57a29612e1769b252272/gcc%2Fconfig%2Fsparc%2Fvxsparc.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fvxsparc.h?ref=291cab5be15ed3fe806e57a29612e1769b252272", "patch": "@@ -0,0 +1,53 @@\n+/* Definitions of target machine for GNU compiler.  Vxworks SPARC version.\n+   Copyright (C) 1994 Free Software Foundation, Inc.\n+   Contributed by David Henkel-Wallace (gumby@cygnus.com)\n+\n+This file is part of GNU CC.\n+\n+GNU CC is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU CC is distributed in the hope that it will be useful,\n+but WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+GNU General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU CC; see the file COPYING.  If not, write to\n+the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n+\n+#include \"sparc/sparc-aout.h\"\n+\n+/* Specify what to link with.  */\n+/* VxWorks does all the library stuff itself.  */\n+\n+#undef LIB_SPEC\n+#define LIB_SPEC \"\"\n+\n+/* Provide required defaults for linker -e. */\n+#undef LINK_SPEC\n+#define LINK_SPEC \"%{!nostdlib:%{!r*:%{!e*:-e start}}}\"\n+\n+/* VxWorks provides the functionality of crt0.o and friends itself.  */\n+#undef STARTFILE_SPEC\n+#define STARTFILE_SPEC \"\"\n+\n+#undef CPP_PREDEFINES\n+#define CPP_PREDEFINES \"-Dsparc -Acpu(sparc) -Amachine(sparc)\"\n+\n+#undef PTRDIFF_TYPE\n+#undef SIZE_TYPE\n+#undef WCHAR_TYPE\n+#undef WCHAR_TYPE_SIZE\n+\n+#define PTRDIFF_TYPE \"long int\"\n+#define SIZE_TYPE \"unsigned int\"\n+#define WCHAR_TYPE \"char\"\n+#define WCHAR_TYPE_SIZE 8\n+\n+/* US Software GOFAST library support.  */\n+#include \"gofast.h\"\n+#undef INIT_SUBTARGET_OPTABS\n+#define INIT_SUBTARGET_OPTABS INIT_GOFAST_OPTABS"}]}