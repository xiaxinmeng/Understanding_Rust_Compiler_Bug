{"sha": "503ac4e037217724c3c8d5468fb757ec398e8077", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTAzYWM0ZTAzNzIxNzcyNGMzYzhkNTQ2OGZiNzU3ZWMzOThlODA3Nw==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2018-05-03T18:59:39Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2018-05-03T18:59:39Z"}, "message": "re PR target/85530 ([X86] _mm512_mullox_epi64 and _mm512_mask_mullox_epi64 not implemented)\n\n\tPR target/85530\n\t* config/i386/avx512fintrin.h (_mm512_mullox_epi64,\n\t_mm512_mask_mullox_epi64): New intrinsics.\n\n\t* gcc.target/i386/avx512f-vpmullq-1.c: New test.\n\t* gcc.target/i386/avx512f-vpmullq-2.c: New test.\n\t* gcc.target/i386/avx512dq-vpmullq-3.c: New test.\n\t* gcc.target/i386/avx512dq-vpmullq-4.c: New test.\n\nFrom-SVN: r259903", "tree": {"sha": "59a8db0de2d20a406e0de8c9204170aa51dadd56", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/59a8db0de2d20a406e0de8c9204170aa51dadd56"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/503ac4e037217724c3c8d5468fb757ec398e8077", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/503ac4e037217724c3c8d5468fb757ec398e8077", "html_url": "https://github.com/Rust-GCC/gccrs/commit/503ac4e037217724c3c8d5468fb757ec398e8077", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/503ac4e037217724c3c8d5468fb757ec398e8077/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "1ee021f2f3cb17f7e01cc8fde371b8e9d5dcd388", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1ee021f2f3cb17f7e01cc8fde371b8e9d5dcd388", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1ee021f2f3cb17f7e01cc8fde371b8e9d5dcd388"}], "stats": {"total": 153, "additions": 153, "deletions": 0}, "files": [{"sha": "549556a95d5ae4dd94f402aac1fae9c973c910c1", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/503ac4e037217724c3c8d5468fb757ec398e8077/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/503ac4e037217724c3c8d5468fb757ec398e8077/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=503ac4e037217724c3c8d5468fb757ec398e8077", "patch": "@@ -1,3 +1,9 @@\n+2018-05-03  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/85530\n+\t* config/i386/avx512fintrin.h (_mm512_mullox_epi64,\n+\t_mm512_mask_mullox_epi64): New intrinsics.\n+\n 2018-05-03  Tom de Vries  <tom@codesourcery.com>\n \n \tPR testsuite/85106"}, {"sha": "9428f7139d00ae5cb57a251eb0e73cbd0882823d", "filename": "gcc/config/i386/avx512fintrin.h", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/503ac4e037217724c3c8d5468fb757ec398e8077/gcc%2Fconfig%2Fi386%2Favx512fintrin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/503ac4e037217724c3c8d5468fb757ec398e8077/gcc%2Fconfig%2Fi386%2Favx512fintrin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Favx512fintrin.h?ref=503ac4e037217724c3c8d5468fb757ec398e8077", "patch": "@@ -565,6 +565,20 @@ _mm512_mask_mullo_epi32 (__m512i __W, __mmask16 __M, __m512i __A, __m512i __B)\n \t\t\t\t\t\t  (__v16si) __W, __M);\n }\n \n+extern __inline __m512i\n+__attribute__ ((__gnu_inline__, __always_inline__, __artificial__))\n+_mm512_mullox_epi64 (__m512i __A, __m512i __B)\n+{\n+  return (__m512i) ((__v8du) __A * (__v8du) __B);\n+}\n+\n+extern __inline __m512i\n+__attribute__ ((__gnu_inline__, __always_inline__, __artificial__))\n+_mm512_mask_mullox_epi64 (__m512i __W, __mmask8 __M, __m512i __A, __m512i __B)\n+{\n+  return _mm512_mask_mov_epi64 (__W, __M, _mm512_mullox_epi64 (__A, __B));\n+}\n+\n extern __inline __m512i\n __attribute__ ((__gnu_inline__, __always_inline__, __artificial__))\n _mm512_sllv_epi32 (__m512i __X, __m512i __Y)"}, {"sha": "0166e6e10dd072c96b2e19e271cca0363f1d9df1", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/503ac4e037217724c3c8d5468fb757ec398e8077/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/503ac4e037217724c3c8d5468fb757ec398e8077/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=503ac4e037217724c3c8d5468fb757ec398e8077", "patch": "@@ -1,3 +1,11 @@\n+2018-05-03  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/85530\n+\t* gcc.target/i386/avx512f-vpmullq-1.c: New test.\n+\t* gcc.target/i386/avx512f-vpmullq-2.c: New test.\n+\t* gcc.target/i386/avx512dq-vpmullq-3.c: New test.\n+\t* gcc.target/i386/avx512dq-vpmullq-4.c: New test.\n+\n 2018-05-03  Tom de Vries  <tom@codesourcery.com>\n \n \tPR testsuite/85106"}, {"sha": "920087bc3d49effaefdc5334336ad204fc74cdc2", "filename": "gcc/testsuite/gcc.target/i386/avx512dq-vpmullq-3.c", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/503ac4e037217724c3c8d5468fb757ec398e8077/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512dq-vpmullq-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/503ac4e037217724c3c8d5468fb757ec398e8077/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512dq-vpmullq-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512dq-vpmullq-3.c?ref=503ac4e037217724c3c8d5468fb757ec398e8077", "patch": "@@ -0,0 +1,15 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-mavx512dq -O2\" } */\n+/* { dg-final { scan-assembler-times \"vpmullq\\[ \\\\t\\]+\\[^\\{\\n\\]*%zmm\\[0-9\\]+\\[^\\n\\]*%zmm\\[0-9\\]+\\[^\\n\\]*%zmm\\[0-9\\]+(?:\\n|\\[ \\\\t\\]+#)\"  1 } } */\n+/* { dg-final { scan-assembler-times \"vpmullq\\[ \\\\t\\]+\\[^\\{\\n\\]*%zmm\\[0-9\\]+\\[^\\n\\]*%zmm\\[0-9\\]+\\[^\\n\\]*%zmm\\[0-9\\]+\\{%k\\[1-7\\]\\}(?:\\n|\\[ \\\\t\\]+#)\" 1 } } */\n+\n+#include <immintrin.h>\n+\n+volatile __m512i _x1, _y1, _z1;\n+\n+void extern\n+avx512dq_test (void)\n+{\n+  _x1 = _mm512_mullox_epi64 (_y1, _z1);\n+  _x1 = _mm512_mask_mullox_epi64 (_x1, 3, _y1, _z1);\n+}"}, {"sha": "8907bad9042ca7c3f42c268fc71975326c83c3fa", "filename": "gcc/testsuite/gcc.target/i386/avx512dq-vpmullq-4.c", "status": "added", "additions": 45, "deletions": 0, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/503ac4e037217724c3c8d5468fb757ec398e8077/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512dq-vpmullq-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/503ac4e037217724c3c8d5468fb757ec398e8077/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512dq-vpmullq-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512dq-vpmullq-4.c?ref=503ac4e037217724c3c8d5468fb757ec398e8077", "patch": "@@ -0,0 +1,45 @@\n+/* { dg-do run } */\n+/* { dg-options \"-O2 -mavx512dq\" } */\n+/* { dg-require-effective-target avx512dq } */\n+\n+#define AVX512DQ\n+#include \"avx512f-helper.h\"\n+\n+#define SIZE (AVX512F_LEN / 64)\n+#include \"avx512f-mask-type.h\"\n+\n+void\n+CALC (long long *src1, long long *src2, long long *dst)\n+{\n+  int i;\n+\n+  for (i = 0; i < SIZE; i++)\n+    dst[i] = src1[i] * src2[i];\n+}\n+\n+void\n+TEST (void)\n+{\n+  UNION_TYPE (AVX512F_LEN, i_q) src1, src2, dst1, dst2;\n+  long long dst_ref[SIZE];\n+  int i;\n+  MASK_TYPE mask = MASK_VALUE;\n+\n+  for (i = 0; i < SIZE; i++)\n+    {\n+      src1.a[i] = i + 50;\n+      src2.a[i] = i + 100;\n+      dst2.a[i] = DEFAULT_VALUE;\n+    }\n+\n+  dst1.x = INTRINSIC (_mullox_epi64) (src1.x, src2.x);\n+  dst2.x = INTRINSIC (_mask_mullox_epi64) (dst2.x, mask, src1.x, src2.x);\n+  CALC (src1.a, src2.a, dst_ref);\n+\n+  if (UNION_CHECK (AVX512F_LEN, i_q) (dst1, dst_ref))\n+    abort ();\n+\n+  MASK_MERGE (i_q) (dst_ref, mask, SIZE);\n+  if (UNION_CHECK (AVX512F_LEN, i_q) (dst2, dst_ref))\n+    abort ();\n+}"}, {"sha": "b7af3d3d3987c033359d24cf208dc2f452c14d3e", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vpmullq-1.c", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/503ac4e037217724c3c8d5468fb757ec398e8077/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpmullq-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/503ac4e037217724c3c8d5468fb757ec398e8077/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpmullq-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpmullq-1.c?ref=503ac4e037217724c3c8d5468fb757ec398e8077", "patch": "@@ -0,0 +1,20 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-mavx512f -mno-avx512dq -O2\" } */\n+/* { dg-final { scan-assembler-times \"vpmullq\\[ \\\\t\\]+\\[^\\{\\n\\]*%zmm\\[0-9\\]+\\[^\\n\\]*%zmm\\[0-9\\]+\\[^\\n\\]*%zmm\\[0-9\\]+(?:\\n|\\[ \\\\t\\]+#)\"  0 } } */\n+/* { dg-final { scan-assembler-times \"vpmullq\\[ \\\\t\\]+\\[^\\{\\n\\]*%zmm\\[0-9\\]+\\[^\\n\\]*%zmm\\[0-9\\]+\\[^\\n\\]*%zmm\\[0-9\\]+\\{%k\\[1-7\\]\\}(?:\\n|\\[ \\\\t\\]+#)\" 0 } } */\n+/* { dg-final { scan-assembler-times \"vpmuludq\\[ \\\\t\\]+\\[^\\{\\n\\]*%zmm\\[0-9\\]+\\[^\\n\\]*%zmm\\[0-9\\]+\\[^\\n\\]*%zmm\\[0-9\\]+(?:\\n|\\[ \\\\t\\]+#)\"  6 } } */\n+/* { dg-final { scan-assembler-times \"vpsrlq\\[ \\\\t\\]+\\[^\\{\\n\\]*\\\\\\$32\\[^\\n\\]*%zmm\\[0-9\\]+\\[^\\n\\]*%zmm\\[0-9\\]+(?:\\n|\\[ \\\\t\\]+#)\"  4 } } */\n+/* { dg-final { scan-assembler-times \"vpsllq\\[ \\\\t\\]+\\[^\\{\\n\\]*\\\\\\$32\\[^\\n\\]*%zmm\\[0-9\\]+\\[^\\n\\]*%zmm\\[0-9\\]+(?:\\n|\\[ \\\\t\\]+#)\"  2 } } */\n+/* { dg-final { scan-assembler-times \"vpaddq\\[ \\\\t\\]+\\[^\\{\\n\\]*%zmm\\[0-9\\]+\\[^\\n\\]*%zmm\\[0-9\\]+\\[^\\n\\]*%zmm\\[0-9\\]+(?:\\n|\\[ \\\\t\\]+#)\"  3 } } */\n+/* { dg-final { scan-assembler-times \"vpaddq\\[ \\\\t\\]+\\[^\\{\\n\\]*%zmm\\[0-9\\]+\\[^\\n\\]*%zmm\\[0-9\\]+\\[^\\n\\]*%zmm\\[0-9\\]+\\{%k\\[1-7\\]\\}(?:\\n|\\[ \\\\t\\]+#)\" 1 } } */\n+\n+#include <immintrin.h>\n+\n+volatile __m512i _x1, _y1, _z1;\n+\n+void extern\n+avx512f_test (void)\n+{\n+  _x1 = _mm512_mullox_epi64 (_y1, _z1);\n+  _x1 = _mm512_mask_mullox_epi64 (_x1, 3, _y1, _z1);\n+}"}, {"sha": "8907bad9042ca7c3f42c268fc71975326c83c3fa", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vpmullq-2.c", "status": "added", "additions": 45, "deletions": 0, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/503ac4e037217724c3c8d5468fb757ec398e8077/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpmullq-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/503ac4e037217724c3c8d5468fb757ec398e8077/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpmullq-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpmullq-2.c?ref=503ac4e037217724c3c8d5468fb757ec398e8077", "patch": "@@ -0,0 +1,45 @@\n+/* { dg-do run } */\n+/* { dg-options \"-O2 -mavx512dq\" } */\n+/* { dg-require-effective-target avx512dq } */\n+\n+#define AVX512DQ\n+#include \"avx512f-helper.h\"\n+\n+#define SIZE (AVX512F_LEN / 64)\n+#include \"avx512f-mask-type.h\"\n+\n+void\n+CALC (long long *src1, long long *src2, long long *dst)\n+{\n+  int i;\n+\n+  for (i = 0; i < SIZE; i++)\n+    dst[i] = src1[i] * src2[i];\n+}\n+\n+void\n+TEST (void)\n+{\n+  UNION_TYPE (AVX512F_LEN, i_q) src1, src2, dst1, dst2;\n+  long long dst_ref[SIZE];\n+  int i;\n+  MASK_TYPE mask = MASK_VALUE;\n+\n+  for (i = 0; i < SIZE; i++)\n+    {\n+      src1.a[i] = i + 50;\n+      src2.a[i] = i + 100;\n+      dst2.a[i] = DEFAULT_VALUE;\n+    }\n+\n+  dst1.x = INTRINSIC (_mullox_epi64) (src1.x, src2.x);\n+  dst2.x = INTRINSIC (_mask_mullox_epi64) (dst2.x, mask, src1.x, src2.x);\n+  CALC (src1.a, src2.a, dst_ref);\n+\n+  if (UNION_CHECK (AVX512F_LEN, i_q) (dst1, dst_ref))\n+    abort ();\n+\n+  MASK_MERGE (i_q) (dst_ref, mask, SIZE);\n+  if (UNION_CHECK (AVX512F_LEN, i_q) (dst2, dst_ref))\n+    abort ();\n+}"}]}