{"sha": "c4551a27620670397b16101592d4689a339f77cb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzQ1NTFhMjc2MjA2NzAzOTdiMTYxMDE1OTJkNDY4OWEzMzlmNzdjYg==", "commit": {"author": {"name": "Alexandre Oliva", "email": "oliva@adacore.com", "date": "2021-04-29T22:31:30Z"}, "committer": {"name": "Alexandre Oliva", "email": "oliva@gnu.org", "date": "2021-04-29T22:31:30Z"}, "message": "add ASM_OUTPUT_MAX_SKIP_ALIGN to i386.h\n\nSeveral i386 align tests expect p2align to be used, but not all\nconfigurations define ASM_OUTPUT_MAX_SKIP_ALIGN, even when\nHAVE_GAS_MAX_SKIP_P2ALIGN.\n\ni386.h had an equivalent ASM_OUTPUT_MAX_SKIP_PAD.  I've renamed it and\nits uses to the documented _ALIGN spelling, and dropped all redundant\ndefines elsewhere in gcc/config/i386/.\n\n\nfor  gcc/ChangeLog\n\n\t* config/i386/i386.h (ASM_OUTPUT_MAX_SKIP_PAD): Rename to...\n\t(ASM_OUTPUT_MAX_SKIP_ALIGN): ... this.  Enclose in do/while(0).\n\t* config/i386/i386.c: Adjust.\n\t* config/i386/i386.md: Adjust.\n\t* config/i386/darwin.h (ASM_OUTPUT_MAX_SKIP_ALIGN): Drop.\n\t* config/i386/dragonfly.h (ASM_OUTPUT_MAX_SKIP_ALIGN): Likewise.\n\t* config/i386/freebsd.h (ASM_OUTPUT_MAX_SKIP_ALIGN): Likewise.\n\t* config/i386/gas.h (ASM_OUTPUT_MAX_SKIP_ALIGN): Likewise.\n\t* config/i386/gnu-user.h (ASM_OUTPUT_MAX_SKIP_ALIGN): Likewise.\n\t* config/i386/iamcu.h (ASM_OUTPUT_MAX_SKIP_ALIGN): Likewise.\n\t* config/i386/lynx.h (ASM_OUTPUT_MAX_SKIP_ALIGN): Likewise.\n\t* config/i386/netbsd-elf.h (ASM_OUTPUT_MAX_SKIP_ALIGN): Likewise.\n\t* config/i386/openbsdelf.h (ASM_OUTPUT_MAX_SKIP_ALIGN): Likewise.\n\t* config/i386/x86-64.h (ASM_OUTPUT_MAX_SKIP_ALIGN): Likewise.\n\t(ASM_OUTPUT_MAX_SKIP_PAD): Likewise.", "tree": {"sha": "7327c0e4ace25ec6f0863c72bc36da538af092f8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7327c0e4ace25ec6f0863c72bc36da538af092f8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c4551a27620670397b16101592d4689a339f77cb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c4551a27620670397b16101592d4689a339f77cb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c4551a27620670397b16101592d4689a339f77cb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c4551a27620670397b16101592d4689a339f77cb/comments", "author": null, "committer": null, "parents": [{"sha": "312a3342f50c4568f622321f830409f2c9bee482", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/312a3342f50c4568f622321f830409f2c9bee482", "html_url": "https://github.com/Rust-GCC/gccrs/commit/312a3342f50c4568f622321f830409f2c9bee482"}], "stats": {"total": 176, "additions": 11, "deletions": 165}, "files": [{"sha": "afa9f1bb1a65cb8e363cc2b6d5fcd84887ccbc2c", "filename": "gcc/config/i386/darwin.h", "status": "modified", "additions": 0, "deletions": 12, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c4551a27620670397b16101592d4689a339f77cb/gcc%2Fconfig%2Fi386%2Fdarwin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c4551a27620670397b16101592d4689a339f77cb/gcc%2Fconfig%2Fi386%2Fdarwin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fdarwin.h?ref=c4551a27620670397b16101592d4689a339f77cb", "patch": "@@ -217,18 +217,6 @@ along with GCC; see the file COPYING3.  If not see\n       }\t\t\t\t\t\t\t\t   \\\n   } while (0)\n \n-#ifdef HAVE_GAS_MAX_SKIP_P2ALIGN\n-#define ASM_OUTPUT_MAX_SKIP_ALIGN(FILE,LOG,MAX_SKIP)                    \\\n-  do {                                                                  \\\n-    if ((LOG) != 0) {                                                   \\\n-      if ((MAX_SKIP) == 0 || (MAX_SKIP) >= (1 << (LOG)) - 1)            \\\n-        fprintf ((FILE), \"\\t.p2align %d\\n\", (LOG));                     \\\n-      else                                                              \\\n-        fprintf ((FILE), \"\\t.p2align %d,,%d\\n\", (LOG), (MAX_SKIP));     \\\n-    }                                                                   \\\n-  } while (0)\n-#endif\n-\n /* Darwin x86 assemblers support the .ident directive.  */\n \n #undef TARGET_ASM_OUTPUT_IDENT"}, {"sha": "62fac8805c814f58f3ef09f828230c62303e877e", "filename": "gcc/config/i386/dragonfly.h", "status": "modified", "additions": 0, "deletions": 17, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c4551a27620670397b16101592d4689a339f77cb/gcc%2Fconfig%2Fi386%2Fdragonfly.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c4551a27620670397b16101592d4689a339f77cb/gcc%2Fconfig%2Fi386%2Fdragonfly.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fdragonfly.h?ref=c4551a27620670397b16101592d4689a339f77cb", "patch": "@@ -61,23 +61,6 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n #define SUBTARGET_EXTRA_SPECS \\\n   { \"dfbsd_dynamic_linker\", DFBSD_DYNAMIC_LINKER }\n \n-/* A C statement to output to the stdio stream FILE an assembler\n-   command to advance the location counter to a multiple of 1<<LOG\n-   bytes if it is within MAX_SKIP bytes.\n-\n-   This is used to align code labels according to Intel recommendations.  */\n-\n-#ifdef HAVE_GAS_MAX_SKIP_P2ALIGN\n-#undef  ASM_OUTPUT_MAX_SKIP_ALIGN\n-#define ASM_OUTPUT_MAX_SKIP_ALIGN(FILE, LOG, MAX_SKIP)\t\t\t\\\n-  if ((LOG) != 0) {\t\t\t\t\t\t\t\\\n-    if ((MAX_SKIP) == 0 || (MAX_SKIP) >= (1 << (LOG)) - 1)\t\t\\\n-      fprintf ((FILE), \"\\t.p2align %d\\n\", (LOG));\t\t\t\\\n-    else\t\t\t\t\t\t\t\t\\\n-      fprintf ((FILE), \"\\t.p2align %d,,%d\\n\", (LOG), (MAX_SKIP));\t\\\n-  }\n-#endif\n-\n /* Don't default to pcc-struct-return, we want to retain compatibility with\n    older gcc versions AND pcc-struct-return is nonreentrant.\n    (even though the SVR4 ABI for the i386 says that records and unions are"}, {"sha": "00df79a7f574dc6fd20841469b9d776f7f08c946", "filename": "gcc/config/i386/freebsd.h", "status": "modified", "additions": 0, "deletions": 13, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c4551a27620670397b16101592d4689a339f77cb/gcc%2Fconfig%2Fi386%2Ffreebsd.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c4551a27620670397b16101592d4689a339f77cb/gcc%2Fconfig%2Fi386%2Ffreebsd.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Ffreebsd.h?ref=c4551a27620670397b16101592d4689a339f77cb", "patch": "@@ -96,19 +96,6 @@ along with GCC; see the file COPYING3.  If not see\n \n #define SUBALIGN_LOG 3\n \n-#ifdef HAVE_GAS_MAX_SKIP_P2ALIGN\n-#undef  ASM_OUTPUT_MAX_SKIP_ALIGN\n-#define ASM_OUTPUT_MAX_SKIP_ALIGN(FILE,LOG,MAX_SKIP)\t\t\t\\\n-  do {\t\t\t\t\t\t\t\t\t\\\n-    if ((LOG) != 0) {\t\t\t\t\t\t\t\\\n-      if ((MAX_SKIP) == 0 || (MAX_SKIP) >= (1 << (LOG)) - 1)\t\t\\\n-\tfprintf ((FILE), \"\\t.p2align %d\\n\", (LOG));\t\t\t\\\n-      else\t\t\t\t\t\t\t\t\\\n-\tfprintf ((FILE), \"\\t.p2align %d,,%d\\n\", (LOG), (MAX_SKIP));\t\\\n-    }\t\t\t\t\t\t\t\t\t\\\n-  } while (0)\n-#endif\n-\n /* Don't default to pcc-struct-return, we want to retain compatibility with\n    older gcc versions AND pcc-struct-return is nonreentrant.\n    (even though the SVR4 ABI for the i386 says that records and unions are"}, {"sha": "d3cfd61cf19fa09da34765b5abc6d34c5bfd4ceb", "filename": "gcc/config/i386/gas.h", "status": "modified", "additions": 0, "deletions": 16, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c4551a27620670397b16101592d4689a339f77cb/gcc%2Fconfig%2Fi386%2Fgas.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c4551a27620670397b16101592d4689a339f77cb/gcc%2Fconfig%2Fi386%2Fgas.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fgas.h?ref=c4551a27620670397b16101592d4689a339f77cb", "patch": "@@ -59,22 +59,6 @@ along with GCC; see the file COPYING3.  If not see\n #define ASM_OUTPUT_ALIGN(FILE,LOG) \\\n   if ((LOG)!=0) fprintf ((FILE), \"\\t.balign %d\\n\", 1 << (LOG))\n #endif\n-\n-/* A C statement to output to the stdio stream FILE an assembler\n-   command to advance the location counter to a multiple of 1<<LOG\n-   bytes if it is within MAX_SKIP bytes.\n-\n-   This is used to align code labels according to Intel recommendations.  */\n-\n-#ifdef HAVE_GAS_MAX_SKIP_P2ALIGN\n-#  define ASM_OUTPUT_MAX_SKIP_ALIGN(FILE,LOG,MAX_SKIP) \\\n-    if ((LOG) != 0) { \\\n-      if ((MAX_SKIP) == 0 || (MAX_SKIP) >= (1 << (LOG)) - 1)\t\t\\\n-\tfprintf ((FILE), \"\\t.p2align %d\\n\", (LOG));\t\t\t\\\n-      else\t\t\t\t\t\t\t\t\\\n-\tfprintf ((FILE), \"\\t.p2align %d,,%d\\n\", (LOG), (MAX_SKIP));\t\\\n-    }\n-#endif\n \f\n /* A C statement or statements which output an assembler instruction\n    opcode to the stdio stream STREAM.  The macro-operand PTR is a"}, {"sha": "57d678136279465d86bfe6372175ef12b8f09708", "filename": "gcc/config/i386/gnu-user.h", "status": "modified", "additions": 0, "deletions": 12, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c4551a27620670397b16101592d4689a339f77cb/gcc%2Fconfig%2Fi386%2Fgnu-user.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c4551a27620670397b16101592d4689a339f77cb/gcc%2Fconfig%2Fi386%2Fgnu-user.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fgnu-user.h?ref=c4551a27620670397b16101592d4689a339f77cb", "patch": "@@ -93,18 +93,6 @@ along with GCC; see the file COPYING3.  If not see\n \n #define SUBALIGN_LOG 3\n \n-#ifdef HAVE_GAS_MAX_SKIP_P2ALIGN\n-#define ASM_OUTPUT_MAX_SKIP_ALIGN(FILE,LOG,MAX_SKIP)\t\t\t\\\n-  do {\t\t\t\t\t\t\t\t\t\\\n-    if ((LOG) != 0) {\t\t\t\t\t\t\t\\\n-      if ((MAX_SKIP) == 0 || (MAX_SKIP) >= (1 << (LOG)) - 1)\t\t\\\n-\tfprintf ((FILE), \"\\t.p2align %d\\n\", (LOG));\t\t\t\\\n-      else\t\t\t\t\t\t\t\t\\\n-\tfprintf ((FILE), \"\\t.p2align %d,,%d\\n\", (LOG), (MAX_SKIP));\t\\\n-    }\t\t\t\t\t\t\t\t\t\\\n-  } while (0)\n-#endif\n-\n /* Handle special EH pointer encodings.  Absolute, pc-relative, and\n    indirect are handled automatically.  */\n #define ASM_MAYBE_OUTPUT_ENCODED_ADDR_RTX(FILE, ENCODING, SIZE, ADDR, DONE) \\"}, {"sha": "48079c8cffac99668d89d132cd184f95f68213f5", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c4551a27620670397b16101592d4689a339f77cb/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c4551a27620670397b16101592d4689a339f77cb/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=c4551a27620670397b16101592d4689a339f77cb", "patch": "@@ -20946,7 +20946,7 @@ ix86_min_insn_size (rtx_insn *insn)\n     return 2;\n }\n \n-#ifdef ASM_OUTPUT_MAX_SKIP_PAD\n+#ifdef ASM_OUTPUT_MAX_SKIP_ALIGN\n \n /* AMD K8 core mispredicts jumps when there are more than 3 jumps in 16 byte\n    window.  */\n@@ -21274,7 +21274,7 @@ ix86_reorg (void)\n \tix86_pad_short_function ();\n       else if (TARGET_PAD_RETURNS)\n \tix86_pad_returns ();\n-#ifdef ASM_OUTPUT_MAX_SKIP_PAD\n+#ifdef ASM_OUTPUT_MAX_SKIP_ALIGN\n       if (TARGET_FOUR_JUMP_LIMIT)\n \tix86_avoid_jump_mispredicts ();\n #endif"}, {"sha": "97d6f3863cb292ae0e4b86a7762133ceebecce63", "filename": "gcc/config/i386/i386.h", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c4551a27620670397b16101592d4689a339f77cb/gcc%2Fconfig%2Fi386%2Fi386.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c4551a27620670397b16101592d4689a339f77cb/gcc%2Fconfig%2Fi386%2Fi386.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.h?ref=c4551a27620670397b16101592d4689a339f77cb", "patch": "@@ -2068,15 +2068,15 @@ extern int const svr4_dbx_register_map[FIRST_PSEUDO_REGISTER];\n    bytes if it is within MAX_SKIP bytes.  */\n \n #ifdef HAVE_GAS_MAX_SKIP_P2ALIGN\n-#undef  ASM_OUTPUT_MAX_SKIP_PAD\n-#define ASM_OUTPUT_MAX_SKIP_PAD(FILE, LOG, MAX_SKIP)\t\t\t\\\n-  if ((LOG) != 0)\t\t\t\t\t\t\t\\\n-    {\t\t\t\t\t\t\t\t\t\\\n+# define ASM_OUTPUT_MAX_SKIP_ALIGN(FILE,LOG,MAX_SKIP)\t\t\t\\\n+  do {\t\t\t\t\t\t\t\t\t\\\n+    if ((LOG) != 0) {\t\t\t\t\t\t\t\\\n       if ((MAX_SKIP) == 0 || (MAX_SKIP) >= (1 << (LOG)) - 1)\t\t\\\n-        fprintf ((FILE), \"\\t.p2align %d\\n\", (LOG));\t\t\t\\\n+\tfprintf ((FILE), \"\\t.p2align %d\\n\", (LOG));\t\t\t\\\n       else\t\t\t\t\t\t\t\t\\\n-        fprintf ((FILE), \"\\t.p2align %d,,%d\\n\", (LOG), (MAX_SKIP));\t\\\n-    }\n+\tfprintf ((FILE), \"\\t.p2align %d,,%d\\n\", (LOG), (MAX_SKIP));\t\\\n+    }\t\t\t\t\t\t\t\t\t\\\n+  } while (0)\n #endif\n \n /* Write the extra assembler code needed to declare a function"}, {"sha": "70ff29b3afaa39b36e0f2b927beee994789209f2", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c4551a27620670397b16101592d4689a339f77cb/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c4551a27620670397b16101592d4689a339f77cb/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=c4551a27620670397b16101592d4689a339f77cb", "patch": "@@ -13937,8 +13937,8 @@\n   [(unspec_volatile [(match_operand 0)] UNSPECV_ALIGN)]\n   \"\"\n {\n-#ifdef ASM_OUTPUT_MAX_SKIP_PAD\n-  ASM_OUTPUT_MAX_SKIP_PAD (asm_out_file, 4, (int)INTVAL (operands[0]));\n+#ifdef ASM_OUTPUT_MAX_SKIP_ALIGN\n+  ASM_OUTPUT_MAX_SKIP_ALIGN (asm_out_file, 4, (int)INTVAL (operands[0]));\n #else\n   /* It is tempting to use ASM_OUTPUT_ALIGN here, but we don't want to do that.\n      The align insn is used to avoid 3 jump instructions in the row to improve"}, {"sha": "33012b2526dab3cd30afcba3a5399ff2ffc24f3d", "filename": "gcc/config/i386/iamcu.h", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c4551a27620670397b16101592d4689a339f77cb/gcc%2Fconfig%2Fi386%2Fiamcu.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c4551a27620670397b16101592d4689a339f77cb/gcc%2Fconfig%2Fi386%2Fiamcu.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fiamcu.h?ref=c4551a27620670397b16101592d4689a339f77cb", "patch": "@@ -66,16 +66,6 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n \n #define SUBALIGN_LOG 3\n \n-#define ASM_OUTPUT_MAX_SKIP_ALIGN(FILE,LOG,MAX_SKIP)\t\t\t\\\n-  do {\t\t\t\t\t\t\t\t\t\\\n-    if ((LOG) != 0) {\t\t\t\t\t\t\t\\\n-      if ((MAX_SKIP) == 0 || (MAX_SKIP) >= (1 << (LOG)) - 1)\t\t\\\n-\tfprintf ((FILE), \"\\t.p2align %d\\n\", (LOG));\t\t\t\\\n-      else\t\t\t\t\t\t\t\t\\\n-\tfprintf ((FILE), \"\\t.p2align %d,,%d\\n\", (LOG), (MAX_SKIP));\t\\\n-    }\t\t\t\t\t\t\t\t\t\\\n-  } while (0)\n-\n /* Handle special EH pointer encodings.  Absolute, pc-relative, and\n    indirect are handled automatically.  */\n #define ASM_MAYBE_OUTPUT_ENCODED_ADDR_RTX(FILE, ENCODING, SIZE, ADDR, DONE) \\"}, {"sha": "70b2587e6cbf33a07c94939a65383d9b2d51a249", "filename": "gcc/config/i386/lynx.h", "status": "modified", "additions": 0, "deletions": 18, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c4551a27620670397b16101592d4689a339f77cb/gcc%2Fconfig%2Fi386%2Flynx.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c4551a27620670397b16101592d4689a339f77cb/gcc%2Fconfig%2Fi386%2Flynx.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Flynx.h?ref=c4551a27620670397b16101592d4689a339f77cb", "patch": "@@ -50,24 +50,6 @@ along with GCC; see the file COPYING3.  If not see\n    : (n) == 7 ? 4\t\t\t\t\t\t\t\\\n    : ((n) >= FIRST_STACK_REG && (n) <= LAST_STACK_REG) ? (int) (n) + 8\t\\\n    : (-1))\n-  \n-/* A C statement to output to the stdio stream FILE an assembler\n-   command to advance the location counter to a multiple of 1<<LOG\n-   bytes if it is within MAX_SKIP bytes.\n-\n-   This is used to align code labels according to Intel recommendations.  */\n-\n-#ifdef HAVE_GAS_MAX_SKIP_P2ALIGN\n-#define ASM_OUTPUT_MAX_SKIP_ALIGN(FILE,LOG,MAX_SKIP)\t\t\t\\\n-  do {\t\t\t\t\t\t\t\t\t\\\n-    if ((LOG) != 0) {\t\t\t\t\t\t\t\\\n-      if ((MAX_SKIP) == 0 || (MAX_SKIP) >= (1 << (LOG)) - 1)\t\t\\\n-\tfprintf ((FILE), \"\\t.p2align %d\\n\", (LOG));\t\t\t\\\n-      else\t\t\t\t\t\t\t\t\\\n-\tfprintf ((FILE), \"\\t.p2align %d,,%d\\n\", (LOG), (MAX_SKIP));\t\\\n-    }\t\t\t\t\t\t\t\t\t\\\n-  } while (0)\n-#endif\n \n /* Undefine SUBTARGET_EXTRA_SPECS it is empty anyway.  We define it in\n    config/lynx.h.  */"}, {"sha": "66cd192cf8a197b95904c9942ce42d2aebfd5319", "filename": "gcc/config/i386/netbsd-elf.h", "status": "modified", "additions": 0, "deletions": 16, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c4551a27620670397b16101592d4689a339f77cb/gcc%2Fconfig%2Fi386%2Fnetbsd-elf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c4551a27620670397b16101592d4689a339f77cb/gcc%2Fconfig%2Fi386%2Fnetbsd-elf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fnetbsd-elf.h?ref=c4551a27620670397b16101592d4689a339f77cb", "patch": "@@ -95,22 +95,6 @@ along with GCC; see the file COPYING3.  If not see\n        assemble_name(FILE, NAME2);\t \\\n        fputc('\\n', FILE); } while (0)\n \n-/* A C statement to output to the stdio stream FILE an assembler\n-   command to advance the location counter to a multiple of 1<<LOG\n-   bytes if it is within MAX_SKIP bytes.\n-\n-   This is used to align code labels according to Intel recommendations.  */\n-\n-#ifdef HAVE_GAS_MAX_SKIP_P2ALIGN\n-#define ASM_OUTPUT_MAX_SKIP_ALIGN(FILE, LOG, MAX_SKIP)\t\t\t\\\n-  if ((LOG) != 0) {\t\t\t\t\t\t\t\\\n-    if ((MAX_SKIP) == 0 || (MAX_SKIP) >= (1 << (LOG)) - 1)\t\t\\\n-      fprintf ((FILE), \"\\t.p2align %d\\n\", (LOG));\t\t\t\\\n-    else\t\t\t\t\t\t\t\t\\\n-      fprintf ((FILE), \"\\t.p2align %d,,%d\\n\", (LOG), (MAX_SKIP));\t\\\n-  }\n-#endif\n-\n /* We always use gas here, so we don't worry about ECOFF assembler\n    problems.  */\n #undef TARGET_GAS"}, {"sha": "862ba12583f5c89b072cd072c43ae8c20f9827c9", "filename": "gcc/config/i386/openbsdelf.h", "status": "modified", "additions": 0, "deletions": 16, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c4551a27620670397b16101592d4689a339f77cb/gcc%2Fconfig%2Fi386%2Fopenbsdelf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c4551a27620670397b16101592d4689a339f77cb/gcc%2Fconfig%2Fi386%2Fopenbsdelf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fopenbsdelf.h?ref=c4551a27620670397b16101592d4689a339f77cb", "patch": "@@ -61,24 +61,8 @@ along with GCC; see the file COPYING3.  If not see\n #undef ASM_APP_OFF\n #define ASM_APP_OFF \"#NO_APP\\n\"\n \n-/* A C statement to output to the stdio stream FILE an assembler\n-   command to advance the location counter to a multiple of 1<<LOG\n-   bytes if it is within MAX_SKIP bytes.  */\n-\n #define SUBALIGN_LOG 3\n \n-#ifdef HAVE_GAS_MAX_SKIP_P2ALIGN\n-#define ASM_OUTPUT_MAX_SKIP_ALIGN(FILE,LOG,MAX_SKIP)\t\t\t\\\n-  do {\t\t\t\t\t\t\t\t\t\\\n-    if ((LOG) != 0) {\t\t\t\t\t\t\t\\\n-      if ((MAX_SKIP) == 0 || (MAX_SKIP) >= (1 << (LOG)) - 1)\t\t\\\n-\tfprintf ((FILE), \"\\t.p2align %d\\n\", (LOG));\t\t\t\\\n-      else\t\t\t\t\t\t\t\t\\\n-\tfprintf ((FILE), \"\\t.p2align %d,,%d\\n\", (LOG), (MAX_SKIP));\t\\\n-    }\t\t\t\t\t\t\t\t\t\\\n-  } while (0)\n-#endif\n-\n /* OpenBSD's profiler recovers all information from the stack pointer.\n    The icky part is not here, but in <machine/profile.h>.  */\n #undef FUNCTION_PROFILER"}, {"sha": "ea872a487216ce7ba74cc47227816a44c43a0acd", "filename": "gcc/config/i386/x86-64.h", "status": "modified", "additions": 0, "deletions": 24, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c4551a27620670397b16101592d4689a339f77cb/gcc%2Fconfig%2Fi386%2Fx86-64.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c4551a27620670397b16101592d4689a339f77cb/gcc%2Fconfig%2Fi386%2Fx86-64.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fx86-64.h?ref=c4551a27620670397b16101592d4689a339f77cb", "patch": "@@ -70,32 +70,8 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n     }\t\t\t\t\t\t\t\t      \\\n   while (0)\n \n-/* This is used to align code labels according to Intel recommendations.  */\n-\n #define SUBALIGN_LOG 3\n \n-#ifdef HAVE_GAS_MAX_SKIP_P2ALIGN\n-#define ASM_OUTPUT_MAX_SKIP_ALIGN(FILE,LOG,MAX_SKIP)\t\t\t\\\n-  do {\t\t\t\t\t\t\t\t\t\\\n-    if ((LOG) != 0) {\t\t\t\t\t\t\t\\\n-      if ((MAX_SKIP) == 0 || (MAX_SKIP) >= (1 << (LOG)) - 1)\t\t\\\n-\tfprintf ((FILE), \"\\t.p2align %d\\n\", (LOG));\t\t\t\\\n-      else\t\t\t\t\t\t\t\t\\\n-\tfprintf ((FILE), \"\\t.p2align %d,,%d\\n\", (LOG), (MAX_SKIP));\t\\\n-    }\t\t\t\t\t\t\t\t\t\\\n-  } while (0)\n-#undef  ASM_OUTPUT_MAX_SKIP_PAD\n-#define ASM_OUTPUT_MAX_SKIP_PAD(FILE, LOG, MAX_SKIP)\t\t\t\\\n-  if ((LOG) != 0)\t\t\t\t\t\t\t\\\n-    {\t\t\t\t\t\t\t\t\t\\\n-      if ((MAX_SKIP) == 0 || (MAX_SKIP) >= (1 << (LOG)) - 1)\t\t\\\n-        fprintf ((FILE), \"\\t.p2align %d\\n\", (LOG));\t\t\t\\\n-      else\t\t\t\t\t\t\t\t\\\n-        fprintf ((FILE), \"\\t.p2align %d,,%d\\n\", (LOG), (MAX_SKIP));\t\\\n-    }\n-#endif\n-\n-\n /* i386 System V Release 4 uses DWARF debugging info.\n    x86-64 ABI specifies DWARF2.  */\n "}]}