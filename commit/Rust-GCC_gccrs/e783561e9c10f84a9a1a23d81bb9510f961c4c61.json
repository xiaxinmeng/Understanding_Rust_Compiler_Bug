{"sha": "e783561e9c10f84a9a1a23d81bb9510f961c4c61", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTc4MzU2MWU5YzEwZjg0YTlhMWEyM2Q4MWJiOTUxMGY5NjFjNGM2MQ==", "commit": {"author": {"name": "Bob Duff", "email": "duff@adacore.com", "date": "2020-11-12T19:40:39Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2020-11-30T14:16:19Z"}, "message": "[Ada] Compiler crash on limited conditional expressions\n\ngcc/ada/\n\n\t* exp_ch3.adb (Expand_N_Object_Declaration): Avoid crash in case\n\tof conditional expression.", "tree": {"sha": "6fd76ecf9a40b14f1c99117be0a9b82b698da71f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6fd76ecf9a40b14f1c99117be0a9b82b698da71f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e783561e9c10f84a9a1a23d81bb9510f961c4c61", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e783561e9c10f84a9a1a23d81bb9510f961c4c61", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e783561e9c10f84a9a1a23d81bb9510f961c4c61", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e783561e9c10f84a9a1a23d81bb9510f961c4c61/comments", "author": {"login": "bobduff", "id": 29099567, "node_id": "MDQ6VXNlcjI5MDk5NTY3", "avatar_url": "https://avatars.githubusercontent.com/u/29099567?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bobduff", "html_url": "https://github.com/bobduff", "followers_url": "https://api.github.com/users/bobduff/followers", "following_url": "https://api.github.com/users/bobduff/following{/other_user}", "gists_url": "https://api.github.com/users/bobduff/gists{/gist_id}", "starred_url": "https://api.github.com/users/bobduff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bobduff/subscriptions", "organizations_url": "https://api.github.com/users/bobduff/orgs", "repos_url": "https://api.github.com/users/bobduff/repos", "events_url": "https://api.github.com/users/bobduff/events{/privacy}", "received_events_url": "https://api.github.com/users/bobduff/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2bf891fa752e18b872d6c06d541aed1ae0b94580", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2bf891fa752e18b872d6c06d541aed1ae0b94580", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2bf891fa752e18b872d6c06d541aed1ae0b94580"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "bd2de67fa8a3898546522c57046d23ede8ef29a1", "filename": "gcc/ada/exp_ch3.adb", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e783561e9c10f84a9a1a23d81bb9510f961c4c61/gcc%2Fada%2Fexp_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e783561e9c10f84a9a1a23d81bb9510f961c4c61/gcc%2Fada%2Fexp_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch3.adb?ref=e783561e9c10f84a9a1a23d81bb9510f961c4c61", "patch": "@@ -7403,12 +7403,12 @@ package body Exp_Ch3 is\n \n                --  If we cannot convert the expression into a renaming we must\n                --  consider it an internal error because the backend does not\n-               --  have support to handle it. Also, when a raise expression is\n-               --  encountered we ignore it since it doesn't return a value and\n-               --  thus cannot trigger a copy.\n+               --  have support to handle it. But avoid crashing on a raise\n+               --  expression or conditional expression.\n \n-               elsif Nkind (Original_Node (Expr_Q)) /= N_Raise_Expression then\n-                  pragma Assert (False);\n+               elsif Nkind (Original_Node (Expr_Q)) not in\n+                 N_Raise_Expression | N_If_Expression | N_Case_Expression\n+               then\n                   raise Program_Error;\n                end if;\n "}]}