{"sha": "5a170a05da225e0d29dff9cc282bc3c188fdb367", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWExNzBhMDVkYTIyNWUwZDI5ZGZmOWNjMjgyYmMzYzE4OGZkYjM2Nw==", "commit": {"author": {"name": "Neil Booth", "email": "neil@daikokuya.co.uk", "date": "2003-07-15T22:19:44Z"}, "committer": {"name": "Neil Booth", "email": "neil@gcc.gnu.org", "date": "2003-07-15T22:19:44Z"}, "message": "c.opt: Document more options.\n\n\t* c.opt: Document more options.\n\t* toplev.c (documented_lang_options): Remove all local help strings.\ntreelang:\n\t* lang-options.h: Remove.\n\t* lang.opt: Document some options.  Remove --help.\n\t* tree1.c (treelang_handle_option): Remove OPT__help case.\n\nFrom-SVN: r69423", "tree": {"sha": "9219a2dfe3b6d7675e4225ca1c437668ca5aad83", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9219a2dfe3b6d7675e4225ca1c437668ca5aad83"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5a170a05da225e0d29dff9cc282bc3c188fdb367", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5a170a05da225e0d29dff9cc282bc3c188fdb367", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5a170a05da225e0d29dff9cc282bc3c188fdb367", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5a170a05da225e0d29dff9cc282bc3c188fdb367/comments", "author": {"login": "neilb-xx", "id": 160762, "node_id": "MDQ6VXNlcjE2MDc2Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/160762?v=4", "gravatar_id": "", "url": "https://api.github.com/users/neilb-xx", "html_url": "https://github.com/neilb-xx", "followers_url": "https://api.github.com/users/neilb-xx/followers", "following_url": "https://api.github.com/users/neilb-xx/following{/other_user}", "gists_url": "https://api.github.com/users/neilb-xx/gists{/gist_id}", "starred_url": "https://api.github.com/users/neilb-xx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/neilb-xx/subscriptions", "organizations_url": "https://api.github.com/users/neilb-xx/orgs", "repos_url": "https://api.github.com/users/neilb-xx/repos", "events_url": "https://api.github.com/users/neilb-xx/events{/privacy}", "received_events_url": "https://api.github.com/users/neilb-xx/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "bc8229a050f9471ec0f5f492806440b9b9b19250", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bc8229a050f9471ec0f5f492806440b9b9b19250", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bc8229a050f9471ec0f5f492806440b9b9b19250"}], "stats": {"total": 271, "additions": 60, "deletions": 211}, "files": [{"sha": "fccd5988224490179c978fd9d7c8d7d5c183118f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a170a05da225e0d29dff9cc282bc3c188fdb367/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a170a05da225e0d29dff9cc282bc3c188fdb367/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5a170a05da225e0d29dff9cc282bc3c188fdb367", "patch": "@@ -1,3 +1,8 @@\n+2003-07-15  Neil Booth  <neil@daikokuya.co.uk>\n+\n+\t* c.opt: Document more options.\n+\t* toplev.c (documented_lang_options): Remove all local help strings.\n+\n 2003-07-15  Mark Mitchell  <mark@codesourcery.com>\n \n \tPR debug/11473"}, {"sha": "d36f851025470e537807a02e14ca56aaaa67c7e6", "filename": "gcc/c.opt", "status": "modified", "additions": 47, "deletions": 2, "changes": 49, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a170a05da225e0d29dff9cc282bc3c188fdb367/gcc%2Fc.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a170a05da225e0d29dff9cc282bc3c188fdb367/gcc%2Fc.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc.opt?ref=5a170a05da225e0d29dff9cc282bc3c188fdb367", "patch": "@@ -146,16 +146,19 @@ C++ ObjC++\n \n Wall\n C ObjC C++ ObjC++\n-Enable most preprocessor warnings\n+Enable most warning messages\n \n Wbad-function-cast\n C ObjC\n+Warn about casting functions to incompatible types\n \n Wcast-qual\n C ObjC C++ ObjC++\n+Warn about casts which discard qualifiers\n \n Wchar-subscripts\n C ObjC C++ ObjC++\n+Warn about subscripts whose type is \\\"char\\\"\n \n Wcomment\n C ObjC C++ ObjC++\n@@ -167,6 +170,7 @@ Synonym for -Wcomment\n \n Wconversion\n C ObjC C++ ObjC++\n+Warn about possibly confusing type conversions\n \n Wctor-dtor-privacy\n C++ ObjC++\n@@ -176,6 +180,7 @@ C++ ObjC++\n \n Wdiv-by-zero\n C ObjC\n+Warn about compile-time integer division by zero\n \n Weffc++\n C++ ObjC++\n@@ -190,24 +195,31 @@ C ObjC C++ ObjC++\n \n Werror-implicit-function-declaration\n C ObjC RejectNegative\n+Make implicit function declarations an error\n \n Wfloat-equal\n C ObjC C++ ObjC++\n+Warn if testing floating point numbers for equality\n \n Wformat\n C ObjC C++ ObjC++\n+Warn about printf/scanf/strftime/strfmon format string anomalies\n \n Wformat-extra-args\n C ObjC C++ ObjC++\n+Warn if passing too many arguments to a function for its format string\n \n Wformat-nonliteral\n C ObjC C++ ObjC++\n+Warn about format strings that are not literals\n \n Wformat-security\n C ObjC C++ ObjC++\n+Warn about possible security problems with format functions\n \n Wformat-y2k\n C ObjC C++ ObjC++\n+Warn about strftime formats yielding 2-digit years\n \n Wformat-zero-length\n C ObjC\n@@ -220,43 +232,54 @@ C ObjC C++ ObjC++\n \n Wimplicit-function-declaration\n C ObjC\n+Warn about implicit function declarations\n \n Wimplicit-int\n C ObjC\n+Warn when a declaration does not specify a type\n \n Wimport\n C ObjC C++ ObjC++\n-Warn about uses of the #import directive\n+Warn about uses of the \\\"#import\\\" directive\n \n Winvalid-offsetof\n C++ ObjC++\n \n Winvalid-pch\n C ObjC C++ ObjC++\n+Warn about PCH files that are found but not used\n \n Wlong-long\n C ObjC C++ ObjC++\n+Do not warn about using \\\"long long\\\" when -pedantic\n \n Wmain\n C ObjC\n+Warn about suspicious declarations of \\\"main\\\"\n \n Wmissing-braces\n C ObjC C++ ObjC++\n+Warn about possibly missing braces around initializers\n \n Wmissing-declarations\n C ObjC\n+Warn about global functions without previous declarations\n \n Wmissing-format-attribute\n C ObjC C++ ObjC++\n+Warn about functions which might be candidates for format attributes\n \n Wmissing-prototypes\n C ObjC\n+Warn about global functions without prototypes\n \n Wmultichar\n C ObjC C++ ObjC++\n+Warn about use of multi-character character constants\n \n Wnested-externs\n C ObjC\n+Warn about \\\"extern\\\" declarations not at file scope\n \n Wnon-template-friend\n C++ ObjC++\n@@ -275,39 +298,46 @@ C++ ObjC++\n \n Wparentheses\n C ObjC C++ ObjC++\n+Warn about possibly missing parentheses\n \n Wpmf-conversions\n C++ ObjC++\n \n Wpointer-arith\n C ObjC C++ ObjC++\n+Warn about function pointer arithmetic\n \n Wprotocol\n ObjC ObjC++\n \n Wredundant-decls\n C ObjC C++ ObjC++\n+Warn about multiple declarations of the same object\n \n Wreorder\n C++ ObjC++\n \n Wreturn-type\n C ObjC C++ ObjC++\n+Warn whenever a function's return type defaults to \\\"int\\\"\n \n Wselector\n ObjC ObjC++\n \n Wsequence-point\n C ObjC\n+Warn about possible violations of sequence point rules\n \n Wsign-compare\n C ObjC C++ ObjC++\n+Warn about signed-unsigned comparisons\n \n Wsign-promo\n C++ ObjC++\n \n Wstrict-prototypes\n C ObjC\n+Warn about unprototyped function declarations\n \n Wsynth\n C++ ObjC++\n@@ -333,16 +363,19 @@ Warn if an undefined macro is used in an #if directive\n \n Wunknown-pragmas\n C ObjC C++ ObjC++\n+Warn about unrecognized pragmas\n \n Wunused-macros\n C ObjC C++ ObjC++\n Warn about macros defined in the main file that are not used\n \n Wwrite-strings\n C ObjC C++ ObjC++\n+Give strings the type \\\"array of char\\\"\n \n ansi\n C ObjC C++ ObjC++\n+A synonym for -std=c89.  In a future version of GCC it will become synonymous with -std=c99 instead\n \n d\n C ObjC C++ ObjC++ Joined\n@@ -362,9 +395,11 @@ C++ ObjC++\n \n fasm\n C ObjC C++ ObjC++\n+Recognize the \\\"asm\\\" keyword\n \n fbuiltin\n C ObjC C++ ObjC++\n+Recognize built-in functions\n \n fbuiltin-\n C ObjC C++ ObjC++ Joined\n@@ -374,6 +409,7 @@ C++ ObjC++\n \n fcond-mismatch\n C ObjC C++ ObjC++\n+Allow the arguments of the '?' operator to have different types\n \n fconserve-space\n C++ ObjC++\n@@ -421,6 +457,7 @@ C++ ObjC++\n \n ffreestanding\n C ObjC\n+Do not assume that standard C libraries and \\\"main\\\" exist\n \n fgnu-keywords\n C++ ObjC++\n@@ -439,6 +476,7 @@ C++ ObjC++\n \n fhosted\n C ObjC\n+Assume normal C execution environment\n \n fhuge-objects\n C++ ObjC++\n@@ -497,21 +535,26 @@ C++ ObjC++\n \n fshort-double\n C ObjC C++ ObjC++\n+Use the same size for double as for float\n \n fshort-enums\n C ObjC C++ ObjC++\n+Use the narrowest integer type possible for enumeration types\n \n fshort-wchar\n C ObjC C++ ObjC++\n+Force the underlying type for \\\"wchar_t\\\" to be \\\"unsigned short\\\"\n \n fshow-column\n C ObjC C++ ObjC++\n \n fsigned-bitfields\n C ObjC C++ ObjC++\n+When \\\"signed\\\" or \\\"unsigned\\\" is not given make the bitfield signed\n \n fsigned-char\n C ObjC C++ ObjC++\n+Make \\\"char\\\" signed by default\n \n fsquangle\n C++ ObjC++\n@@ -534,9 +577,11 @@ C++ ObjC++\n \n funsigned-bitfields\n C ObjC C++ ObjC++\n+When \\\"signed\\\" or \\\"unsigned\\\" is not given make the bitfield unsigned\n \n funsigned-char\n C ObjC C++ ObjC++\n+Make \\\"char\\\" unsigned by default\n \n fuse-cxa-atexit\n C++ ObjC++"}, {"sha": "ab42dfa926dc829591a018bf8c705c2c513b7ce1", "filename": "gcc/toplev.c", "status": "modified", "additions": 0, "deletions": 166, "changes": 166, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a170a05da225e0d29dff9cc282bc3c188fdb367/gcc%2Ftoplev.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a170a05da225e0d29dff9cc282bc3c188fdb367/gcc%2Ftoplev.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftoplev.c?ref=5a170a05da225e0d29dff9cc282bc3c188fdb367", "patch": "@@ -1188,172 +1188,6 @@ static const struct lang_opt\n }\n documented_lang_options[] =\n {\n-  /* In order not to overload the --help output, the convention\n-     used here is to only describe those options which are not\n-     enabled by default.  */\n-\n-  { \"-ansi\",\n-    N_(\"Compile just for ISO C90\") },\n-  { \"-std= \",\n-    N_(\"Determine language standard\") },\n-\n-  { \"-fsigned-bitfields\", \"\" },\n-  { \"-funsigned-bitfields\",\n-    N_(\"Make bit-fields by unsigned by default\") },\n-  { \"-fno-signed-bitfields\", \"\" },\n-  { \"-fno-unsigned-bitfields\",\"\" },\n-  { \"-fsigned-char\",\n-    N_(\"Make 'char' be signed by default\") },\n-  { \"-funsigned-char\",\n-    N_(\"Make 'char' be unsigned by default\") },\n-  { \"-fno-signed-char\", \"\" },\n-  { \"-fno-unsigned-char\", \"\" },\n-\n-  { \"-fasm\", \"\" },\n-  { \"-fno-asm\",\n-    N_(\"Do not recognize the 'asm' keyword\") },\n-  { \"-fbuiltin\", \"\" },\n-  { \"-fno-builtin\",\n-    N_(\"Do not recognize any built in functions\") },\n-  { \"-fhosted\",\n-    N_(\"Assume normal C execution environment\") },\n-  { \"-fno-hosted\", \"\" },\n-  { \"-ffreestanding\",\n-    N_(\"Assume that standard libraries & main might not exist\") },\n-  { \"-fno-freestanding\", \"\" },\n-  { \"-fcond-mismatch\",\n-    N_(\"Allow different types as args of ? operator\") },\n-  { \"-fno-cond-mismatch\", \"\" },\n-  { \"-fdollars-in-identifiers\",\n-    N_(\"Allow the use of $ inside identifiers\") },\n-  { \"-fno-dollars-in-identifiers\", \"\" },\n-  { \"-fpreprocessed\", \"\" },\n-  { \"-fno-preprocessed\", \"\" },\n-  { \"-fshort-double\",\n-    N_(\"Use the same size for double as for float\") },\n-  { \"-fno-short-double\", \"\" },\n-  { \"-fshort-enums\",\n-    N_(\"Use the smallest fitting integer to hold enums\") },\n-  { \"-fno-short-enums\", \"\" },\n-  { \"-fshort-wchar\",\n-    N_(\"Override the underlying type for wchar_t to `unsigned short'\") },\n-  { \"-fno-short-wchar\", \"\" },\n-\n-  { \"-Wall\",\n-    N_(\"Enable most warning messages\") },\n-  { \"-Wbad-function-cast\",\n-    N_(\"Warn about casting functions to incompatible types\") },\n-  { \"-Wno-bad-function-cast\", \"\" },\n-  { \"-Wmissing-format-attribute\",\n-    N_(\"Warn about functions which might be candidates for format attributes\") },\n-  { \"-Wno-missing-format-attribute\", \"\" },\n-  { \"-Wcast-qual\",\n-    N_(\"Warn about casts which discard qualifiers\") },\n-  { \"-Wno-cast-qual\", \"\" },\n-  { \"-Wchar-subscripts\",\n-    N_(\"Warn about subscripts whose type is 'char'\") },\n-  { \"-Wno-char-subscripts\", \"\" },\n-  { \"-Wcomment\",\n-    N_(\"Warn if nested comments are detected\") },\n-  { \"-Wno-comment\", \"\" },\n-  { \"-Wcomments\",\n-    N_(\"Warn if nested comments are detected\") },\n-  { \"-Wno-comments\", \"\" },\n-  { \"-Wconversion\",\n-    N_(\"Warn about possibly confusing type conversions\") },\n-  { \"-Wno-conversion\", \"\" },\n-  { \"-Wdiv-by-zero\", \"\" },\n-  { \"-Wno-div-by-zero\",\n-    N_(\"Do not warn about compile-time integer division by zero\") },\n-  { \"-Wfloat-equal\",\n-    N_(\"Warn about testing equality of floating point numbers\") },\n-  { \"-Wno-float-equal\", \"\" },\n-  { \"-Wformat\",\n-    N_(\"Warn about printf/scanf/strftime/strfmon format anomalies\") },\n-  { \"-Wno-format\", \"\" },\n-  { \"-Wformat-extra-args\", \"\" },\n-  { \"-Wno-format-extra-args\",\n-    N_(\"Don't warn about too many arguments to format functions\") },\n-  { \"-Wformat-nonliteral\",\n-    N_(\"Warn about non-string-literal format strings\") },\n-  { \"-Wno-format-nonliteral\", \"\" },\n-  { \"-Wformat-security\",\n-    N_(\"Warn about possible security problems with format functions\") },\n-  { \"-Wno-format-security\", \"\" },\n-  { \"-Wformat-y2k\", \"\" },\n-  { \"-Wno-format-y2k\",\n-    N_(\"Don't warn about strftime formats yielding 2 digit years\") },\n-  { \"-Wimplicit-function-declaration\",\n-    N_(\"Warn about implicit function declarations\") },\n-  { \"-Wno-implicit-function-declaration\", \"\" },\n-  { \"-Werror-implicit-function-declaration\", \"\" },\n-  { \"-Wimplicit-int\",\n-    N_(\"Warn when a declaration does not specify a type\") },\n-  { \"-Wno-implicit-int\", \"\" },\n-  { \"-Wimplicit\", \"\" },\n-  { \"-Wno-implicit\", \"\" },\n-  { \"-Wimport\",\n-    N_(\"Warn about the use of the #import directive\") },\n-  { \"-Wno-import\", \"\" },\n-  { \"-Winvalid-pch\",\n-    N_(\"Warn about PCH files that are found but not used\") },\n-  { \"-Wlong-long\",\"\" },\n-  { \"-Wno-long-long\",\n-    N_(\"Do not warn about using 'long long' when -pedantic\") },\n-  { \"-Wmain\",\n-    N_(\"Warn about suspicious declarations of main\") },\n-  { \"-Wno-main\", \"\" },\n-  { \"-Wmissing-braces\",\n-    N_(\"Warn about possibly missing braces around initializers\") },\n-  { \"-Wno-missing-braces\", \"\" },\n-  { \"-Wmissing-declarations\",\n-    N_(\"Warn about global funcs without previous declarations\") },\n-  { \"-Wno-missing-declarations\", \"\" },\n-  { \"-Wmissing-prototypes\",\n-    N_(\"Warn about global funcs without prototypes\") },\n-  { \"-Wno-missing-prototypes\", \"\" },\n-  { \"-Wmultichar\",\n-    N_(\"Warn about use of multicharacter literals\") },\n-  { \"-Wno-multichar\", \"\" },\n-  { \"-Wnested-externs\",\n-    N_(\"Warn about externs not at file scope level\") },\n-  { \"-Wno-nested-externs\", \"\" },\n-  { \"-Wparentheses\",\n-    N_(\"Warn about possible missing parentheses\") },\n-  { \"-Wno-parentheses\", \"\" },\n-  { \"-Wpointer-arith\",\n-    N_(\"Warn about function pointer arithmetic\") },\n-  { \"-Wno-pointer-arith\", \"\" },\n-  { \"-Wredundant-decls\",\n-    N_(\"Warn about multiple declarations of the same object\") },\n-  { \"-Wno-redundant-decls\", \"\" },\n-  { \"-Wreturn-type\",\n-    N_(\"Warn whenever a function's return-type defaults to int\") },\n-  { \"-Wno-return-type\", \"\" },\n-  { \"-Wsequence-point\",\n-    N_(\"Warn about possible violations of sequence point rules\") },\n-  { \"-Wno-sequence-point\", \"\" },\n-  { \"-Wsign-compare\",\n-    N_(\"Warn about signed/unsigned comparisons\") },\n-  { \"-Wno-sign-compare\", \"\" },\n-  { \"-Wstrict-prototypes\",\n-    N_(\"Warn about non-prototyped function decls\") },\n-  { \"-Wno-strict-prototypes\", \"\" },\n-  { \"-Wtraditional\",\n-    N_(\"Warn about constructs whose meanings change in ISO C\") },\n-  { \"-Wno-traditional\", \"\" },\n-  { \"-Wtrigraphs\",\n-    N_(\"Warn when trigraphs are encountered\") },\n-  { \"-Wno-trigraphs\", \"\" },\n-  { \"-Wundef\", \"\" },\n-  { \"-Wno-undef\", \"\" },\n-  { \"-Wunknown-pragmas\",\n-    N_(\"Warn about unrecognized pragmas\") },\n-  { \"-Wno-unknown-pragmas\", \"\" },\n-  { \"-Wwrite-strings\",\n-    N_(\"Mark strings as 'const char *'\") },\n-  { \"-Wno-write-strings\", \"\" },\n-\n #define DEFINE_LANG_NAME(NAME) { NULL, NAME },\n \n #include \"options_.h\""}, {"sha": "6157e00431d0146f9c21cd122fb29070af635172", "filename": "gcc/treelang/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a170a05da225e0d29dff9cc282bc3c188fdb367/gcc%2Ftreelang%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a170a05da225e0d29dff9cc282bc3c188fdb367/gcc%2Ftreelang%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftreelang%2FChangeLog?ref=5a170a05da225e0d29dff9cc282bc3c188fdb367", "patch": "@@ -1,3 +1,9 @@\n+2003-07-15  Neil Booth  <neil@daikokuya.co.uk>\n+\n+\t* lang-options.h: Remove.\n+\t* lang.opt: Document some options.  Remove --help.\n+\t* tree1.c (treelang_handle_option): Remove OPT__help case.\n+\n 2003-07-12  Andreas Jaeger  <aj@suse.de>\n \n \t* Make-lang.in (treelang/tree-convert.o): Depend on TM_H."}, {"sha": "2d60c3ef35b16e06f2ae4e62fe896932a462a271", "filename": "gcc/treelang/lang-options.h", "status": "removed", "additions": 0, "deletions": 29, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bc8229a050f9471ec0f5f492806440b9b9b19250/gcc%2Ftreelang%2Flang-options.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bc8229a050f9471ec0f5f492806440b9b9b19250/gcc%2Ftreelang%2Flang-options.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftreelang%2Flang-options.h?ref=bc8229a050f9471ec0f5f492806440b9b9b19250", "patch": "@@ -1,29 +0,0 @@\n-/* Definitions for switches for TREELANG.\n-\n-   Copyright (C) 1995, 96-98, 1999, 2000, 2001, 2002 Free Software Foundation, Inc.\n-\n-This file is part of GCC.\n-\n-GCC is free software; you can redistribute it and/or modify\n-it under the terms of the GNU General Public License as published by\n-the Free Software Foundation; either version 2, or (at your option)\n-any later version.\n-\n-GCC is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n-\n-You should have received a copy of the GNU General Public License\n-along with this program; see the file COPYING.  If not, write to\n-the Free Software Foundation, 59 Temple Place - Suite 330,\n-Boston, MA 02111-1307, USA.  */\n-\n-DEFINE_LANG_NAME (\"treelang\")\n-     \n-/* This is the contribution to the `lang_options' array in gcc.c for\n-   treelang.  */\n- {\"-fparser-trace\", N_(\"(debug) trace parsing process\")},\n- {\"-flexer-trace\", N_(\"(debug) trace lexical analysis\")},\n-\n-"}, {"sha": "32b7150b0c984732d13c2dc845fe4421b02b2477", "filename": "gcc/treelang/lang.opt", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a170a05da225e0d29dff9cc282bc3c188fdb367/gcc%2Ftreelang%2Flang.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a170a05da225e0d29dff9cc282bc3c188fdb367/gcc%2Ftreelang%2Flang.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftreelang%2Flang.opt?ref=5a170a05da225e0d29dff9cc282bc3c188fdb367", "patch": "@@ -25,14 +25,13 @@\n Language\n Treelang\n \n--help\n-Treelang\n-\n flexer-trace\n Treelang\n+Trace lexical analysis\n \n fparser-trace\n Treelang\n+Trace the parsing process\n \n v\n Treelang"}, {"sha": "640f5f21801e08d26267c1c43a823441fb860ee8", "filename": "gcc/treelang/tree1.c", "status": "modified", "additions": 0, "deletions": 11, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a170a05da225e0d29dff9cc282bc3c188fdb367/gcc%2Ftreelang%2Ftree1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a170a05da225e0d29dff9cc282bc3c188fdb367/gcc%2Ftreelang%2Ftree1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftreelang%2Ftree1.c?ref=5a170a05da225e0d29dff9cc282bc3c188fdb367", "patch": "@@ -108,17 +108,6 @@ treelang_handle_option (size_t scode, const char *arg ATTRIBUTE_UNUSED,\n     default:\n       abort();\n \n-    case OPT__help:\n-      if (!version_done)\n-\t{\n-\t  fputs (language_string, stdout);\n-\t  fputs (version_string, stdout);\n-\t  fputs (\"\\n\", stdout);\n-\t  version_done = 1;\n-\t}\n-      fprintf (stdout, \"Usage: tree1 [switches] -o output input\\n\");\n-      break;\n-\n     case OPT_v:\n       if (!version_done)\n \t{"}]}