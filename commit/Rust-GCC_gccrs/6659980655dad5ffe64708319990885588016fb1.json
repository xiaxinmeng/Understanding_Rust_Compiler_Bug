{"sha": "6659980655dad5ffe64708319990885588016fb1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjY1OTk4MDY1NWRhZDVmZmU2NDcwODMxOTk5MDg4NTU4ODAxNmZiMQ==", "commit": {"author": {"name": "Jeff Garzik", "email": "jgarzik@pobox.com", "date": "1999-09-08T08:20:11Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1999-09-08T08:20:11Z"}, "message": "* libiberty.h (xmemdup): Add prototype for new function.\n\nFrom-SVN: r29200", "tree": {"sha": "f972a9d499ff995048b55c3d391e958877330886", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f972a9d499ff995048b55c3d391e958877330886"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6659980655dad5ffe64708319990885588016fb1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6659980655dad5ffe64708319990885588016fb1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6659980655dad5ffe64708319990885588016fb1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6659980655dad5ffe64708319990885588016fb1/comments", "author": {"login": "jgarzik", "id": 494411, "node_id": "MDQ6VXNlcjQ5NDQxMQ==", "avatar_url": "https://avatars.githubusercontent.com/u/494411?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jgarzik", "html_url": "https://github.com/jgarzik", "followers_url": "https://api.github.com/users/jgarzik/followers", "following_url": "https://api.github.com/users/jgarzik/following{/other_user}", "gists_url": "https://api.github.com/users/jgarzik/gists{/gist_id}", "starred_url": "https://api.github.com/users/jgarzik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jgarzik/subscriptions", "organizations_url": "https://api.github.com/users/jgarzik/orgs", "repos_url": "https://api.github.com/users/jgarzik/repos", "events_url": "https://api.github.com/users/jgarzik/events{/privacy}", "received_events_url": "https://api.github.com/users/jgarzik/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b10647f1b2068be06900f34b0ca8286ae56927f2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b10647f1b2068be06900f34b0ca8286ae56927f2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b10647f1b2068be06900f34b0ca8286ae56927f2"}], "stats": {"total": 8, "additions": 8, "deletions": 0}, "files": [{"sha": "0f317e9b0a8d01bd415ae706e750fddbf722a306", "filename": "include/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6659980655dad5ffe64708319990885588016fb1/include%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6659980655dad5ffe64708319990885588016fb1/include%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/include%2FChangeLog?ref=6659980655dad5ffe64708319990885588016fb1", "patch": "@@ -1,3 +1,7 @@\n+1999-09-07  Jeff Garzik  <jgarzik@pobox.com>\n+\n+\t* libiberty.h (xmemdup): Add prototype for new function.\n+\n 1999-09-01  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n \t* obstack.h (obstack_grow, obstack_grow0): Move (char*) casts"}, {"sha": "0bcce6710bac79b8702cecc531bfc04649f43052", "filename": "include/libiberty.h", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6659980655dad5ffe64708319990885588016fb1/include%2Flibiberty.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6659980655dad5ffe64708319990885588016fb1/include%2Flibiberty.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/include%2Flibiberty.h?ref=6659980655dad5ffe64708319990885588016fb1", "patch": "@@ -149,6 +149,10 @@ extern PTR xcalloc PARAMS ((size_t, size_t));\n \n extern char *xstrdup PARAMS ((const char *));\n \n+/* Copy an existing memory buffer to a new memory buffer without fail.  */\n+\n+extern PTR xmemdup PARAMS ((const PTR, size_t, size_t));\n+\n /* hex character manipulation routines */\n \n #define _hex_array_size 256"}]}