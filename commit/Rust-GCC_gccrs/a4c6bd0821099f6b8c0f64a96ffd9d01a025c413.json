{"sha": "a4c6bd0821099f6b8c0f64a96ffd9d01a025c413", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTRjNmJkMDgyMTA5OWY2YjhjMGY2NGE5NmZmZDlkMDFhMDI1YzQxMw==", "commit": {"author": {"name": "Andreas Krebbel", "email": "krebbel@linux.vnet.ibm.com", "date": "2018-03-09T12:32:22Z"}, "committer": {"name": "Andreas Krebbel", "email": "krebbel@gcc.gnu.org", "date": "2018-03-09T12:32:22Z"}, "message": "S/390: libatomic: Fix 16 byte atomic exchange\n\nThe compiler builtin will use the hardware instruction cdsg if the\nmemory operand is properly aligned and will fall back to the\nlibrary call otherwise.\nIn case the compiler for one part is able to detect that the\nlocation is aligned and fails to do so for another usage of the hw\ninstruction and the sw fall back would be mixed on the same memory\nlocation.  To avoid this the library fall back also has to use the\nhardware instruction if possible.\n\nlibatomic/ChangeLog:\n\n2018-03-09  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>\n\n\t* config/s390/exch_n.c: New file.\n\t* configure.tgt: Add the config directory for s390.\n\nFrom-SVN: r258384", "tree": {"sha": "fbb5139f7467a70b6487265769a13e764a1e2823", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fbb5139f7467a70b6487265769a13e764a1e2823"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a4c6bd0821099f6b8c0f64a96ffd9d01a025c413", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a4c6bd0821099f6b8c0f64a96ffd9d01a025c413", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a4c6bd0821099f6b8c0f64a96ffd9d01a025c413", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a4c6bd0821099f6b8c0f64a96ffd9d01a025c413/comments", "author": null, "committer": null, "parents": [{"sha": "d04e6ed5ae7668dc8a68069cd456d278c59fd972", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d04e6ed5ae7668dc8a68069cd456d278c59fd972", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d04e6ed5ae7668dc8a68069cd456d278c59fd972"}], "stats": {"total": 79, "additions": 79, "deletions": 0}, "files": [{"sha": "81aaba4b11f5c3a42325db04fbd37885553fde0e", "filename": "libatomic/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4c6bd0821099f6b8c0f64a96ffd9d01a025c413/libatomic%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4c6bd0821099f6b8c0f64a96ffd9d01a025c413/libatomic%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libatomic%2FChangeLog?ref=a4c6bd0821099f6b8c0f64a96ffd9d01a025c413", "patch": "@@ -1,3 +1,8 @@\n+2018-03-09  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>\n+\n+\t* config/s390/exch_n.c: New file.\n+\t* configure.tgt: Add the config directory for s390.\n+\n 2018-02-14  Igor Tsimbalist  <igor.v.tsimbalist@intel.com>\n \n \tPR target/84148"}, {"sha": "b2340b4aa6a76826d117bd41604585b9fa7d9509", "filename": "libatomic/config/s390/exch_n.c", "status": "added", "additions": 69, "deletions": 0, "changes": 69, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4c6bd0821099f6b8c0f64a96ffd9d01a025c413/libatomic%2Fconfig%2Fs390%2Fexch_n.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4c6bd0821099f6b8c0f64a96ffd9d01a025c413/libatomic%2Fconfig%2Fs390%2Fexch_n.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libatomic%2Fconfig%2Fs390%2Fexch_n.c?ref=a4c6bd0821099f6b8c0f64a96ffd9d01a025c413", "patch": "@@ -0,0 +1,69 @@\n+/* Copyright (C) 2018 Free Software Foundation, Inc.\n+   Contributed by Andreas Krebbel <krebbel@linux.vnet.ibm.com>\n+\n+   This file is part of the GNU Atomic Library (libatomic).\n+\n+   Libatomic is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published by\n+   the Free Software Foundation; either version 3 of the License, or\n+   (at your option) any later version.\n+\n+   Libatomic is distributed in the hope that it will be useful, but WITHOUT ANY\n+   WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n+   FOR A PARTICULAR PURPOSE.  See the GNU General Public License for\n+   more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+#include <libatomic_i.h>\n+\n+\n+/* The compiler builtin will use the hardware instruction cdsg if the\n+   memory operand is properly aligned and will fall back to the\n+   library call otherwise.\n+\n+   In case the compiler for one part is able to detect that the\n+   location is aligned and fails to do so for another usage of the hw\n+   instruction and the sw fall back would be mixed on the same memory\n+   location.  To avoid this the library fall back also has to use the\n+   hardware instruction if possible.  */\n+\n+#if !DONE && N == 16\n+UTYPE\n+SIZE(libat_exchange) (UTYPE *mptr, UTYPE newval, int smodel UNUSED)\n+{\n+  if (!((uintptr_t)mptr & 0xf))\n+    {\n+      /* Use the builtin only if the memory operand is 16 byte\n+\t aligned.  */\n+      return __atomic_exchange_n ((UTYPE *)__builtin_assume_aligned (mptr, 16),\n+\t\t\t\t  newval, __ATOMIC_SEQ_CST);\n+    }\n+  else\n+    {\n+      UTYPE oldval;\n+      UWORD magic;\n+\n+      pre_seq_barrier (smodel);\n+      magic = protect_start (mptr);\n+\n+      oldval = *mptr;\n+      *mptr = newval;\n+\n+      protect_end (mptr, magic);\n+      post_seq_barrier (smodel);\n+\n+      return oldval;\n+    }\n+}\n+#define DONE 1\n+#endif /* N == 16 */\n+\n+#include \"../../exch_n.c\""}, {"sha": "ea8c34f8c710cc40b5646b665c24cc0933a92c73", "filename": "libatomic/configure.tgt", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4c6bd0821099f6b8c0f64a96ffd9d01a025c413/libatomic%2Fconfigure.tgt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4c6bd0821099f6b8c0f64a96ffd9d01a025c413/libatomic%2Fconfigure.tgt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libatomic%2Fconfigure.tgt?ref=a4c6bd0821099f6b8c0f64a96ffd9d01a025c413", "patch": "@@ -129,6 +129,11 @@ case \"${target}\" in\n \tconfig_path=\"${config_path} linux/arm posix\"\n \t;;\n \n+  s390*-*-linux*)\n+\t# OS support for atomic primitives.\n+\tconfig_path=\"${config_path} s390 posix\"\n+\t;;\n+\n   *-*-linux* | *-*-gnu* | *-*-k*bsd*-gnu \\\n   | *-*-netbsd* | *-*-freebsd* | *-*-openbsd* | *-*-dragonfly* \\\n   | *-*-solaris2* | *-*-sysv4* | *-*-irix6* | *-*-osf* | *-*-hpux11* \\"}]}