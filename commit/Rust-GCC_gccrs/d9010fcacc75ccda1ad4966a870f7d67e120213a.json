{"sha": "d9010fcacc75ccda1ad4966a870f7d67e120213a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDkwMTBmY2FjYzc1Y2NkYTFhZDQ5NjZhODcwZjdkNjdlMTIwMjEzYQ==", "commit": {"author": {"name": "Paolo Carlini", "email": "pcarlini@suse.de", "date": "2004-02-05T20:13:37Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2004-02-05T20:13:37Z"}, "message": "locale_facets.tcc (money_get::do_get(string_type&)): Thousands-sep are always optional...\n\n2004-02-05  Paolo Carlini  <pcarlini@suse.de>\n\n\t* include/bits/locale_facets.tcc (money_get::do_get(string_type&)):\n\tThousands-sep are always optional; thousands-sep are not allowed\n\tafter the decimal_point.\n\t* testsuite/22_locale/money_get/get/char/12.cc: New.\n\t* testsuite/22_locale/money_get/get/char/13.cc: New.\n\t* testsuite/22_locale/money_get/get/wchar_t/12.cc: New.\n\t* testsuite/22_locale/money_get/get/wchar_t/13.cc: New.\n\n\t* testsuite/22_locale/money_get/get/char/1.cc: Clean-up.\n\t* testsuite/22_locale/money_get/get/char/2.cc: Likewise.\n\t* testsuite/22_locale/money_get/get/char/3.cc: Likewise.\n\t* testsuite/22_locale/money_get/get/char/4.cc: Likewise.\n\t* testsuite/22_locale/money_get/get/wchar_t/1.cc: Likewise.\n\t* testsuite/22_locale/money_get/get/wchar_t/2.cc: Likewise.\n\t* testsuite/22_locale/money_get/get/wchar_t/3.cc: Likewise.\n\t* testsuite/22_locale/money_get/get/wchar_t/4.cc: Likewise.\n\n\t* testsuite/22_locale/money_get/get/char/9.cc: Fix citation from\n\tthe standard.\n\t* testsuite/22_locale/money_get/get/wchar_t/9.cc: Likewise.\n\nFrom-SVN: r77339", "tree": {"sha": "80aa5e808ef9ea36526c2dd84d59c9b412e3a0c6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/80aa5e808ef9ea36526c2dd84d59c9b412e3a0c6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d9010fcacc75ccda1ad4966a870f7d67e120213a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d9010fcacc75ccda1ad4966a870f7d67e120213a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d9010fcacc75ccda1ad4966a870f7d67e120213a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d9010fcacc75ccda1ad4966a870f7d67e120213a/comments", "author": null, "committer": null, "parents": [{"sha": "6327d36ac618a3d579e21934cff1745b22458b7f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6327d36ac618a3d579e21934cff1745b22458b7f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6327d36ac618a3d579e21934cff1745b22458b7f"}], "stats": {"total": 381, "additions": 323, "deletions": 58}, "files": [{"sha": "baa27344370dd57a2aa86708d407842c019ef608", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d9010fcacc75ccda1ad4966a870f7d67e120213a/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d9010fcacc75ccda1ad4966a870f7d67e120213a/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=d9010fcacc75ccda1ad4966a870f7d67e120213a", "patch": "@@ -1,3 +1,26 @@\n+2004-02-05  Paolo Carlini  <pcarlini@suse.de>\n+\n+\t* include/bits/locale_facets.tcc (money_get::do_get(string_type&)):\n+\tThousands-sep are always optional; thousands-sep are not allowed\n+\tafter the decimal_point.\n+\t* testsuite/22_locale/money_get/get/char/12.cc: New.\n+\t* testsuite/22_locale/money_get/get/char/13.cc: New.\n+\t* testsuite/22_locale/money_get/get/wchar_t/12.cc: New.\n+\t* testsuite/22_locale/money_get/get/wchar_t/13.cc: New.\n+\n+\t* testsuite/22_locale/money_get/get/char/1.cc: Clean-up.\n+\t* testsuite/22_locale/money_get/get/char/2.cc: Likewise.\n+\t* testsuite/22_locale/money_get/get/char/3.cc: Likewise.\n+\t* testsuite/22_locale/money_get/get/char/4.cc: Likewise.\n+\t* testsuite/22_locale/money_get/get/wchar_t/1.cc: Likewise.\n+\t* testsuite/22_locale/money_get/get/wchar_t/2.cc: Likewise.\n+\t* testsuite/22_locale/money_get/get/wchar_t/3.cc: Likewise.\n+\t* testsuite/22_locale/money_get/get/wchar_t/4.cc: Likewise.\n+\n+\t* testsuite/22_locale/money_get/get/char/9.cc: Fix citation from\n+\tthe standard.\n+\t* testsuite/22_locale/money_get/get/wchar_t/9.cc: Likewise.\n+\n 2004-02-05  Richard Sandiford  <rsandifo@redhat.com>\n \n \t* config/os/irix/irix6.5/os_defines.h (_GLIBCXX_FIONREAD_TAKES_OFF_T):"}, {"sha": "2a3a987ecd158d24985e7937e853de308b92bab5", "filename": "libstdc++-v3/include/bits/locale_facets.tcc", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d9010fcacc75ccda1ad4966a870f7d67e120213a/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_facets.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d9010fcacc75ccda1ad4966a870f7d67e120213a/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_facets.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_facets.tcc?ref=d9010fcacc75ccda1ad4966a870f7d67e120213a", "patch": "@@ -1253,11 +1253,15 @@ namespace std\n \t\t  }\n \t\telse if (__c == __d && !__testdecfound)\n \t\t  {\n-\t\t    __grouping_tmp += static_cast<char>(__sep_pos);\n+\t\t    // If no grouping chars are seen, no grouping check\n+\t\t    // is applied. Therefore __grouping_tmp is adjusted\n+\t\t    // only if decimal_point comes after some thousands_sep.\n+\t\t    if (__grouping_tmp.size())\n+\t\t      __grouping_tmp += static_cast<char>(__sep_pos);\n \t\t    __sep_pos = 0;\n \t\t    __testdecfound = true;\n \t\t  }\n-\t\telse if (__c == __sep)\n+\t\telse if (__c == __sep && !__testdecfound)\n \t\t  {\n \t\t    if (__grouping.size())\n \t\t      {\n@@ -1319,6 +1323,10 @@ namespace std\n \t  // Test for grouping fidelity.\n \t  if (__grouping.size() && __grouping_tmp.size())\n \t    {\n+\t      // Add the ending grouping if a decimal wasn't found.\n+\t      if (!__testdecfound)\n+\t\t__grouping_tmp += static_cast<char>(__sep_pos);\n+\n \t      if (!std::__verify_grouping(__grouping.data(),\n \t\t\t\t\t  __grouping.size(),\n \t\t\t\t\t  __grouping_tmp))"}, {"sha": "b63d384f7392b973bf3965288e09f26a3e2bcceb", "filename": "libstdc++-v3/testsuite/22_locale/money_get/get/char/1.cc", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d9010fcacc75ccda1ad4966a870f7d67e120213a/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fmoney_get%2Fget%2Fchar%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d9010fcacc75ccda1ad4966a870f7d67e120213a/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fmoney_get%2Fget%2Fchar%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fmoney_get%2Fget%2Fchar%2F1.cc?ref=d9010fcacc75ccda1ad4966a870f7d67e120213a", "patch": "@@ -1,6 +1,6 @@\n // 2001-09-12 Benjamin Kosnik  <bkoz@redhat.com>\n \n-// Copyright (C) 2001, 2002, 2003 Free Software Foundation\n+// Copyright (C) 2001, 2002, 2003, 2004 Free Software Foundation\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -36,13 +36,8 @@ void test01()\n \n   // basic construction\n   locale loc_c = locale::classic();\n-  locale loc_hk = __gnu_test::try_named_locale(\"en_HK\");\n-  locale loc_fr = __gnu_test::try_named_locale(\"fr_FR@euro\");\n   locale loc_de = __gnu_test::try_named_locale(\"de_DE@euro\");\n   VERIFY( loc_c != loc_de );\n-  VERIFY( loc_hk != loc_fr );\n-  VERIFY( loc_hk != loc_de );\n-  VERIFY( loc_de != loc_fr );\n \n   // cache the moneypunct facets\n   typedef moneypunct<char, true> __money_true;"}, {"sha": "2b4f32a87f84f4698a5c9850d10abe8dcbc8691c", "filename": "libstdc++-v3/testsuite/22_locale/money_get/get/char/12.cc", "status": "added", "additions": 70, "deletions": 0, "changes": 70, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d9010fcacc75ccda1ad4966a870f7d67e120213a/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fmoney_get%2Fget%2Fchar%2F12.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d9010fcacc75ccda1ad4966a870f7d67e120213a/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fmoney_get%2Fget%2Fchar%2F12.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fmoney_get%2Fget%2Fchar%2F12.cc?ref=d9010fcacc75ccda1ad4966a870f7d67e120213a", "patch": "@@ -0,0 +1,70 @@\n+// 2004-02-05  Paolo Carlini  <pcarlini@suse.de>\n+\n+// Copyright (C) 2004 Free Software Foundation\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// 22.2.6.1.1 money_get members\n+\n+#include <locale>\n+#include <sstream>\n+#include <testsuite_hooks.h>\n+\n+// Same as 3.cc but no thousands-sep in input: they are always optional.\n+void test01()\n+{\n+  using namespace std;\n+  bool test __attribute__((unused)) = true;\n+\n+  typedef istreambuf_iterator<char> iterator_type;\n+\n+  // basic construction\n+  locale loc_c = locale::classic();\n+  locale loc_de = __gnu_test::try_named_locale(\"de_DE@euro\");\n+  VERIFY( loc_c != loc_de );\n+\n+  // total EPA budget FY 2002\n+  const long double  digits1 = 720000000000.0;\n+\n+  iterator_type end;\n+  istringstream iss;\n+  iss.imbue(loc_de);\n+  // cache the money_get facet\n+  const money_get<char>& mon_get = use_facet<money_get<char> >(iss.getloc()); \n+\n+  iss.str(\"7200000000,00 \");\n+  iterator_type is_it01(iss);\n+  long double result1;\n+  ios_base::iostate err01 = ios_base::goodbit;\n+  mon_get.get(is_it01, end, true, iss, err01, result1);\n+  VERIFY( result1 == digits1 );\n+  VERIFY( err01 == ios_base::eofbit );\n+\n+  iss.str(\"7200000000,00 \");\n+  iterator_type is_it02(iss);\n+  long double result2;\n+  ios_base::iostate err02 = ios_base::goodbit;\n+  mon_get.get(is_it02, end, false, iss, err02, result2);\n+  VERIFY( result2 == digits1 );\n+  VERIFY( err02 == ios_base::eofbit );\n+}\n+\n+int main()\n+{\n+  test01();\n+  return 0;\n+}"}, {"sha": "d7040ba237b833ef86abaf40310bc9eb1eaccaec", "filename": "libstdc++-v3/testsuite/22_locale/money_get/get/char/13.cc", "status": "added", "additions": 67, "deletions": 0, "changes": 67, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d9010fcacc75ccda1ad4966a870f7d67e120213a/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fmoney_get%2Fget%2Fchar%2F13.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d9010fcacc75ccda1ad4966a870f7d67e120213a/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fmoney_get%2Fget%2Fchar%2F13.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fmoney_get%2Fget%2Fchar%2F13.cc?ref=d9010fcacc75ccda1ad4966a870f7d67e120213a", "patch": "@@ -0,0 +1,67 @@\n+// 2004-02-05  Paolo Carlini  <pcarlini@suse.de>\n+\n+// Copyright (C) 2004 Free Software Foundation\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// 22.2.6.1.1 money_get members\n+\n+#include <locale>\n+#include <sstream>\n+#include <testsuite_hooks.h>\n+\n+// No thousands-sep allowed after the decimal-point.\n+void test01()\n+{\n+  using namespace std;\n+  bool test __attribute__((unused)) = true;\n+\n+  typedef istreambuf_iterator<char> iterator_type;\n+\n+  // basic construction\n+  locale loc_c = locale::classic();\n+  locale loc_de = __gnu_test::try_named_locale(\"de_DE@euro\");\n+  VERIFY( loc_c != loc_de );\n+\n+  iterator_type end01, end02;\n+  istringstream iss;\n+  iss.imbue(loc_de);\n+  // cache the money_get facet\n+  const money_get<char>& mon_get = use_facet<money_get<char> >(iss.getloc()); \n+\n+  iss.str(\"500,1.0 \");\n+  iterator_type is_it01(iss);\n+  long double result1;\n+  ios_base::iostate err01 = ios_base::goodbit;\n+  end01 = mon_get.get(is_it01, end01, true, iss, err01, result1);\n+  VERIFY( err01 == ios_base::failbit );\n+  VERIFY( *end01 == '.' );\n+\n+  iss.str(\"500,1.0 \");\n+  iterator_type is_it02(iss);\n+  long double result2;\n+  ios_base::iostate err02 = ios_base::goodbit;\n+  end02 = mon_get.get(is_it02, end02, false, iss, err02, result2);\n+  VERIFY( err02 == ios_base::failbit );\n+  VERIFY( *end02 == '.' );\n+}\n+\n+int main()\n+{\n+  test01();\n+  return 0;\n+}"}, {"sha": "0d516a28402d6c3762072ca8dce4c1c183092df7", "filename": "libstdc++-v3/testsuite/22_locale/money_get/get/char/2.cc", "status": "modified", "additions": 2, "deletions": 7, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d9010fcacc75ccda1ad4966a870f7d67e120213a/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fmoney_get%2Fget%2Fchar%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d9010fcacc75ccda1ad4966a870f7d67e120213a/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fmoney_get%2Fget%2Fchar%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fmoney_get%2Fget%2Fchar%2F2.cc?ref=d9010fcacc75ccda1ad4966a870f7d67e120213a", "patch": "@@ -1,6 +1,6 @@\n // 2001-09-12 Benjamin Kosnik  <bkoz@redhat.com>\n \n-// Copyright (C) 2001, 2002, 2003 Free Software Foundation\n+// Copyright (C) 2001, 2002, 2003, 2004 Free Software Foundation\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -37,12 +37,7 @@ void test02()\n   // basic construction\n   locale loc_c = locale::classic();\n   locale loc_hk = __gnu_test::try_named_locale(\"en_HK\");\n-  locale loc_fr = __gnu_test::try_named_locale(\"fr_FR@euro\");\n-  locale loc_de = __gnu_test::try_named_locale(\"de_DE@euro\");\n-  VERIFY( loc_c != loc_de );\n-  VERIFY( loc_hk != loc_fr );\n-  VERIFY( loc_hk != loc_de );\n-  VERIFY( loc_de != loc_fr );\n+  VERIFY( loc_c != loc_hk );\n \n   // cache the moneypunct facets\n   typedef moneypunct<char, true> __money_true;"}, {"sha": "a717bd9a0264c9b02ac5cc7c580ef256502f3934", "filename": "libstdc++-v3/testsuite/22_locale/money_get/get/char/3.cc", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d9010fcacc75ccda1ad4966a870f7d67e120213a/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fmoney_get%2Fget%2Fchar%2F3.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d9010fcacc75ccda1ad4966a870f7d67e120213a/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fmoney_get%2Fget%2Fchar%2F3.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fmoney_get%2Fget%2Fchar%2F3.cc?ref=d9010fcacc75ccda1ad4966a870f7d67e120213a", "patch": "@@ -1,6 +1,6 @@\n // 2001-09-12 Benjamin Kosnik  <bkoz@redhat.com>\n \n-// Copyright (C) 2001, 2002, 2003 Free Software Foundation\n+// Copyright (C) 2001, 2002, 2003, 2004 Free Software Foundation\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -36,13 +36,8 @@ void test03()\n \n   // basic construction\n   locale loc_c = locale::classic();\n-  locale loc_hk = __gnu_test::try_named_locale(\"en_HK\");\n-  locale loc_fr = __gnu_test::try_named_locale(\"fr_FR@euro\");\n   locale loc_de = __gnu_test::try_named_locale(\"de_DE@euro\");\n   VERIFY( loc_c != loc_de );\n-  VERIFY( loc_hk != loc_fr );\n-  VERIFY( loc_hk != loc_de );\n-  VERIFY( loc_de != loc_fr );\n \n   // cache the moneypunct facets\n   typedef moneypunct<char, true> __money_true;"}, {"sha": "7c009c85d3bcd4cf463efe2877eadcb6f9b8613e", "filename": "libstdc++-v3/testsuite/22_locale/money_get/get/char/4.cc", "status": "modified", "additions": 2, "deletions": 7, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d9010fcacc75ccda1ad4966a870f7d67e120213a/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fmoney_get%2Fget%2Fchar%2F4.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d9010fcacc75ccda1ad4966a870f7d67e120213a/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fmoney_get%2Fget%2Fchar%2F4.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fmoney_get%2Fget%2Fchar%2F4.cc?ref=d9010fcacc75ccda1ad4966a870f7d67e120213a", "patch": "@@ -1,6 +1,6 @@\n // 2001-09-12 Benjamin Kosnik  <bkoz@redhat.com>\n \n-// Copyright (C) 2001, 2002, 2003 Free Software Foundation\n+// Copyright (C) 2001, 2002, 2003, 2004 Free Software Foundation\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -37,12 +37,7 @@ void test04()\n   // basic construction\n   locale loc_c = locale::classic();\n   locale loc_hk = __gnu_test::try_named_locale(\"en_HK\");\n-  locale loc_fr = __gnu_test::try_named_locale(\"fr_FR@euro\");\n-  locale loc_de = __gnu_test::try_named_locale(\"de_DE@euro\");\n-  VERIFY( loc_c != loc_de );\n-  VERIFY( loc_hk != loc_fr );\n-  VERIFY( loc_hk != loc_de );\n-  VERIFY( loc_de != loc_fr );\n+  VERIFY( loc_c != loc_hk );\n \n   // cache the moneypunct facets\n   typedef moneypunct<char, true> __money_true;"}, {"sha": "a7b4aeeddebddc7979be1093c9a049a8e716a296", "filename": "libstdc++-v3/testsuite/22_locale/money_get/get/char/9.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d9010fcacc75ccda1ad4966a870f7d67e120213a/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fmoney_get%2Fget%2Fchar%2F9.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d9010fcacc75ccda1ad4966a870f7d67e120213a/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fmoney_get%2Fget%2Fchar%2F9.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fmoney_get%2Fget%2Fchar%2F9.cc?ref=d9010fcacc75ccda1ad4966a870f7d67e120213a", "patch": "@@ -1,6 +1,6 @@\n // 2003-05-27 Brendan Kehoe  <brendan@zen.org>\n \n-// Copyright (C) 2003 Free Software Foundation\n+// Copyright (C) 2003, 2004 Free Software Foundation\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -18,7 +18,7 @@\n // Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n // USA.\n \n-// $22.2.6.3.3/8\n+// $22.2.6.3/3\n // The number of digits required after the decimal point (if any) is exactly\n // the value returned by frac_digits().\n "}, {"sha": "8a93e66aa66e06b1ad97bacda39d9bc22a2f4e1f", "filename": "libstdc++-v3/testsuite/22_locale/money_get/get/wchar_t/1.cc", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d9010fcacc75ccda1ad4966a870f7d67e120213a/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fmoney_get%2Fget%2Fwchar_t%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d9010fcacc75ccda1ad4966a870f7d67e120213a/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fmoney_get%2Fget%2Fwchar_t%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fmoney_get%2Fget%2Fwchar_t%2F1.cc?ref=d9010fcacc75ccda1ad4966a870f7d67e120213a", "patch": "@@ -1,6 +1,6 @@\n // 2001-09-12 Benjamin Kosnik  <bkoz@redhat.com>\n \n-// Copyright (C) 2001, 2002, 2003 Free Software Foundation\n+// Copyright (C) 2001, 2002, 2003, 2004 Free Software Foundation\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -36,13 +36,8 @@ void test01()\n \n   // basic construction\n   locale loc_c = locale::classic();\n-  locale loc_hk = __gnu_test::try_named_locale(\"en_HK\");\n-  locale loc_fr = __gnu_test::try_named_locale(\"fr_FR@euro\");\n   locale loc_de = __gnu_test::try_named_locale(\"de_DE@euro\");\n   VERIFY( loc_c != loc_de );\n-  VERIFY( loc_hk != loc_fr );\n-  VERIFY( loc_hk != loc_de );\n-  VERIFY( loc_de != loc_fr );\n \n   // cache the moneypunct facets\n   typedef moneypunct<wchar_t, true> __money_true;"}, {"sha": "95ecbefb88041e3e95c1eb1936fff246b7118156", "filename": "libstdc++-v3/testsuite/22_locale/money_get/get/wchar_t/12.cc", "status": "added", "additions": 70, "deletions": 0, "changes": 70, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d9010fcacc75ccda1ad4966a870f7d67e120213a/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fmoney_get%2Fget%2Fwchar_t%2F12.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d9010fcacc75ccda1ad4966a870f7d67e120213a/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fmoney_get%2Fget%2Fwchar_t%2F12.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fmoney_get%2Fget%2Fwchar_t%2F12.cc?ref=d9010fcacc75ccda1ad4966a870f7d67e120213a", "patch": "@@ -0,0 +1,70 @@\n+// 2004-02-05  Paolo Carlini  <pcarlini@suse.de>\n+\n+// Copyright (C) 2004 Free Software Foundation\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// 22.2.6.1.1 money_get members\n+\n+#include <locale>\n+#include <sstream>\n+#include <testsuite_hooks.h>\n+\n+// Same as 3.cc but no thousands-sep in input: they are always optional.\n+void test01()\n+{\n+  using namespace std;\n+  bool test __attribute__((unused)) = true;\n+\n+  typedef istreambuf_iterator<wchar_t> iterator_type;\n+\n+  // basic construction\n+  locale loc_c = locale::classic();\n+  locale loc_de = __gnu_test::try_named_locale(\"de_DE@euro\");\n+  VERIFY( loc_c != loc_de );\n+\n+  // total EPA budget FY 2002\n+  const long double  digits1 = 720000000000.0;\n+\n+  iterator_type end;\n+  wistringstream iss;\n+  iss.imbue(loc_de);\n+  // cache the money_get facet\n+  const money_get<wchar_t>& mon_get = use_facet<money_get<wchar_t> >(iss.getloc()); \n+\n+  iss.str(L\"7200000000,00 \");\n+  iterator_type is_it01(iss);\n+  long double result1;\n+  ios_base::iostate err01 = ios_base::goodbit;\n+  mon_get.get(is_it01, end, true, iss, err01, result1);\n+  VERIFY( result1 == digits1 );\n+  VERIFY( err01 == ios_base::eofbit );\n+\n+  iss.str(L\"7200000000,00 \");\n+  iterator_type is_it02(iss);\n+  long double result2;\n+  ios_base::iostate err02 = ios_base::goodbit;\n+  mon_get.get(is_it02, end, false, iss, err02, result2);\n+  VERIFY( result2 == digits1 );\n+  VERIFY( err02 == ios_base::eofbit );\n+}\n+\n+int main()\n+{\n+  test01();\n+  return 0;\n+}"}, {"sha": "564d5fd7798fea5bbdf18e3cd5a0f8f61e42217f", "filename": "libstdc++-v3/testsuite/22_locale/money_get/get/wchar_t/13.cc", "status": "added", "additions": 67, "deletions": 0, "changes": 67, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d9010fcacc75ccda1ad4966a870f7d67e120213a/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fmoney_get%2Fget%2Fwchar_t%2F13.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d9010fcacc75ccda1ad4966a870f7d67e120213a/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fmoney_get%2Fget%2Fwchar_t%2F13.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fmoney_get%2Fget%2Fwchar_t%2F13.cc?ref=d9010fcacc75ccda1ad4966a870f7d67e120213a", "patch": "@@ -0,0 +1,67 @@\n+// 2004-02-05  Paolo Carlini  <pcarlini@suse.de>\n+\n+// Copyright (C) 2004 Free Software Foundation\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// 22.2.6.1.1 money_get members\n+\n+#include <locale>\n+#include <sstream>\n+#include <testsuite_hooks.h>\n+\n+// No thousands-sep allowed after the decimal-point.\n+void test01()\n+{\n+  using namespace std;\n+  bool test __attribute__((unused)) = true;\n+\n+  typedef istreambuf_iterator<wchar_t> iterator_type;\n+\n+  // basic construction\n+  locale loc_c = locale::classic();\n+  locale loc_de = __gnu_test::try_named_locale(\"de_DE@euro\");\n+  VERIFY( loc_c != loc_de );\n+\n+  iterator_type end01, end02;\n+  wistringstream iss;\n+  iss.imbue(loc_de);\n+  // cache the money_get facet\n+  const money_get<wchar_t>& mon_get = use_facet<money_get<wchar_t> >(iss.getloc()); \n+\n+  iss.str(L\"500,1.0 \");\n+  iterator_type is_it01(iss);\n+  long double result1;\n+  ios_base::iostate err01 = ios_base::goodbit;\n+  end01 = mon_get.get(is_it01, end01, true, iss, err01, result1);\n+  VERIFY( err01 == ios_base::failbit );\n+  VERIFY( *end01 == '.' );\n+\n+  iss.str(L\"500,1.0 \");\n+  iterator_type is_it02(iss);\n+  long double result2;\n+  ios_base::iostate err02 = ios_base::goodbit;\n+  end02 = mon_get.get(is_it02, end02, false, iss, err02, result2);\n+  VERIFY( err02 == ios_base::failbit );\n+  VERIFY( *end02 == '.' );\n+}\n+\n+int main()\n+{\n+  test01();\n+  return 0;\n+}"}, {"sha": "efdec283e7a6b82b7953ead166b184774c97ed7a", "filename": "libstdc++-v3/testsuite/22_locale/money_get/get/wchar_t/2.cc", "status": "modified", "additions": 2, "deletions": 7, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d9010fcacc75ccda1ad4966a870f7d67e120213a/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fmoney_get%2Fget%2Fwchar_t%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d9010fcacc75ccda1ad4966a870f7d67e120213a/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fmoney_get%2Fget%2Fwchar_t%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fmoney_get%2Fget%2Fwchar_t%2F2.cc?ref=d9010fcacc75ccda1ad4966a870f7d67e120213a", "patch": "@@ -1,6 +1,6 @@\n // 2001-09-12 Benjamin Kosnik  <bkoz@redhat.com>\n \n-// Copyright (C) 2001, 2002, 2003 Free Software Foundation\n+// Copyright (C) 2001, 2002, 2003, 2004 Free Software Foundation\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -37,12 +37,7 @@ void test02()\n   // basic construction\n   locale loc_c = locale::classic();\n   locale loc_hk = __gnu_test::try_named_locale(\"en_HK\");\n-  locale loc_fr = __gnu_test::try_named_locale(\"fr_FR@euro\");\n-  locale loc_de = __gnu_test::try_named_locale(\"de_DE@euro\");\n-  VERIFY( loc_c != loc_de );\n-  VERIFY( loc_hk != loc_fr );\n-  VERIFY( loc_hk != loc_de );\n-  VERIFY( loc_de != loc_fr );\n+  VERIFY( loc_c != loc_hk );\n \n   // cache the moneypunct facets\n   typedef moneypunct<wchar_t, true> __money_true;"}, {"sha": "90c45e8c1a987f3896992bb9fc0b67dd903290f7", "filename": "libstdc++-v3/testsuite/22_locale/money_get/get/wchar_t/3.cc", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d9010fcacc75ccda1ad4966a870f7d67e120213a/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fmoney_get%2Fget%2Fwchar_t%2F3.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d9010fcacc75ccda1ad4966a870f7d67e120213a/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fmoney_get%2Fget%2Fwchar_t%2F3.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fmoney_get%2Fget%2Fwchar_t%2F3.cc?ref=d9010fcacc75ccda1ad4966a870f7d67e120213a", "patch": "@@ -1,6 +1,6 @@\n // 2001-09-12 Benjamin Kosnik  <bkoz@redhat.com>\n \n-// Copyright (C) 2001, 2002, 2003 Free Software Foundation\n+// Copyright (C) 2001, 2002, 2003, 2004 Free Software Foundation\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -36,13 +36,8 @@ void test03()\n \n   // basic construction\n   locale loc_c = locale::classic();\n-  locale loc_hk = __gnu_test::try_named_locale(\"en_HK\");\n-  locale loc_fr = __gnu_test::try_named_locale(\"fr_FR@euro\");\n   locale loc_de = __gnu_test::try_named_locale(\"de_DE@euro\");\n   VERIFY( loc_c != loc_de );\n-  VERIFY( loc_hk != loc_fr );\n-  VERIFY( loc_hk != loc_de );\n-  VERIFY( loc_de != loc_fr );\n \n   // cache the moneypunct facets\n   typedef moneypunct<wchar_t, true> __money_true;"}, {"sha": "cea15f5a85d4acea36264001d4332d60ab7286b7", "filename": "libstdc++-v3/testsuite/22_locale/money_get/get/wchar_t/4.cc", "status": "modified", "additions": 2, "deletions": 7, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d9010fcacc75ccda1ad4966a870f7d67e120213a/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fmoney_get%2Fget%2Fwchar_t%2F4.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d9010fcacc75ccda1ad4966a870f7d67e120213a/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fmoney_get%2Fget%2Fwchar_t%2F4.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fmoney_get%2Fget%2Fwchar_t%2F4.cc?ref=d9010fcacc75ccda1ad4966a870f7d67e120213a", "patch": "@@ -1,6 +1,6 @@\n // 2001-09-12 Benjamin Kosnik  <bkoz@redhat.com>\n \n-// Copyright (C) 2001, 2002, 2003 Free Software Foundation\n+// Copyright (C) 2001, 2002, 2003, 2004 Free Software Foundation\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -37,12 +37,7 @@ void test04()\n   // basic construction\n   locale loc_c = locale::classic();\n   locale loc_hk = __gnu_test::try_named_locale(\"en_HK\");\n-  locale loc_fr = __gnu_test::try_named_locale(\"fr_FR@euro\");\n-  locale loc_de = __gnu_test::try_named_locale(\"de_DE@euro\");\n-  VERIFY( loc_c != loc_de );\n-  VERIFY( loc_hk != loc_fr );\n-  VERIFY( loc_hk != loc_de );\n-  VERIFY( loc_de != loc_fr );\n+  VERIFY( loc_c != loc_hk );\n \n   // cache the moneypunct facets\n   typedef moneypunct<wchar_t, true> __money_true;"}, {"sha": "ce8ab370972a6eed6a5901b628b82f9b42e3bf5c", "filename": "libstdc++-v3/testsuite/22_locale/money_get/get/wchar_t/9.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d9010fcacc75ccda1ad4966a870f7d67e120213a/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fmoney_get%2Fget%2Fwchar_t%2F9.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d9010fcacc75ccda1ad4966a870f7d67e120213a/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fmoney_get%2Fget%2Fwchar_t%2F9.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fmoney_get%2Fget%2Fwchar_t%2F9.cc?ref=d9010fcacc75ccda1ad4966a870f7d67e120213a", "patch": "@@ -1,6 +1,6 @@\n // 2003-05-27 Brendan Kehoe  <brendan@zen.org>\n \n-// Copyright (C) 2003 Free Software Foundation\n+// Copyright (C) 2003, 2004 Free Software Foundation\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -18,7 +18,7 @@\n // Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n // USA.\n \n-// $22.2.6.3.3/8\n+// $22.2.6.3/3\n // The number of digits required after the decimal point (if any) is exactly\n // the value returned by frac_digits().\n "}]}