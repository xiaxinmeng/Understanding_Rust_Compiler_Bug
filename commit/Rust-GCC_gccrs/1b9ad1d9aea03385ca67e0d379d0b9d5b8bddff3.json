{"sha": "1b9ad1d9aea03385ca67e0d379d0b9d5b8bddff3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWI5YWQxZDlhZWEwMzM4NWNhNjdlMGQzNzlkMGI5ZDViOGJkZGZmMw==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2015-01-12T21:45:50Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2015-01-12T21:45:50Z"}, "message": "re PR libstdc++/64553 (Missing '# ifdef _GLIBCXX_USE_WCHAR_T' in src/c++11/cxx11-shim_facet.cc)\n\n\tPR libstdc++/64553\n\t* src/c++11/cxx11-shim_facets.cc: Check for wchar_t support.\n\nFrom-SVN: r219496", "tree": {"sha": "7e97ee29c94bd9c7f26d12240becd5c7a70cb33d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7e97ee29c94bd9c7f26d12240becd5c7a70cb33d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1b9ad1d9aea03385ca67e0d379d0b9d5b8bddff3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1b9ad1d9aea03385ca67e0d379d0b9d5b8bddff3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1b9ad1d9aea03385ca67e0d379d0b9d5b8bddff3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1b9ad1d9aea03385ca67e0d379d0b9d5b8bddff3/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5e67acc9a07ef2af9a49bc7d34d82db593ebae6a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5e67acc9a07ef2af9a49bc7d34d82db593ebae6a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5e67acc9a07ef2af9a49bc7d34d82db593ebae6a"}], "stats": {"total": 61, "additions": 43, "deletions": 18}, "files": [{"sha": "ec5a1d53d7fa057865300c2c35221947c12f7988", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1b9ad1d9aea03385ca67e0d379d0b9d5b8bddff3/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1b9ad1d9aea03385ca67e0d379d0b9d5b8bddff3/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=1b9ad1d9aea03385ca67e0d379d0b9d5b8bddff3", "patch": "@@ -4,6 +4,9 @@\n \t* src/c++11/cxx11-shim_facets.cc (locale::facet::_M_sso_shim): Check\n \tfor RTTI support.\n \n+\tPR libstdc++/64553\n+\t* src/c++11/cxx11-shim_facets.cc: Check for wchar_t support.\n+\n 2015-01-10  Thomas Schwinge  <thomas@codesourcery.com>\n \n \t* doc/xml/manual/parallel_mode.xml: Update for libgomp being"}, {"sha": "407b7b9f921136961d46de1d2e02a674d0786f51", "filename": "libstdc++-v3/src/c++11/cxx11-shim_facets.cc", "status": "modified", "additions": 40, "deletions": 18, "changes": 58, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1b9ad1d9aea03385ca67e0d379d0b9d5b8bddff3/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2Fcxx11-shim_facets.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1b9ad1d9aea03385ca67e0d379d0b9d5b8bddff3/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2Fcxx11-shim_facets.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2Fcxx11-shim_facets.cc?ref=1b9ad1d9aea03385ca67e0d379d0b9d5b8bddff3", "patch": "@@ -87,13 +87,17 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       union {\n \tconst void* _M_p;\n \tchar* _M_pc;\n+#ifdef _GLIBCXX_USE_WCHAR_T\n \twchar_t* _M_pwc;\n+#endif\n       };\n       size_t _M_len;\n       char _M_unused[16];\n \n       operator const char*() const { return _M_pc; }\n+#ifdef _GLIBCXX_USE_WCHAR_T\n       operator const wchar_t*() const { return _M_pwc; }\n+#endif\n     };\n     union {\n       __str_rep _M_str;\n@@ -251,9 +255,6 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \tsize_t _M_grouping_size;\n       };\n \n-    template class numpunct_shim<char>;\n-    template class numpunct_shim<wchar_t>;\n-\n     template<typename _CharT>\n       struct collate_shim : std::collate<_CharT>, facet::__shim\n       {\n@@ -279,9 +280,6 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \t}\n       };\n \n-    template class collate_shim<char>;\n-    template class collate_shim<wchar_t>;\n-\n     template<typename _CharT>\n       struct time_get_shim : std::time_get<_CharT>, facet::__shim\n       {\n@@ -363,11 +361,6 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \t__cache_type* _M_cache;\n       };\n \n-    template class moneypunct_shim<char, true>;\n-    template class moneypunct_shim<char, false>;\n-    template class moneypunct_shim<wchar_t, true>;\n-    template class moneypunct_shim<wchar_t, false>;\n-\n     template<typename _CharT>\n       struct money_get_shim : std::money_get<_CharT>, facet::__shim\n       {\n@@ -409,9 +402,6 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \t}\n       };\n \n-    template class money_get_shim<char>;\n-    template class money_get_shim<wchar_t>;\n-\n     template<typename _CharT>\n       struct money_put_shim : std::money_put<_CharT>, facet::__shim\n       {\n@@ -441,10 +431,6 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \t}\n       };\n \n-    template class money_put_shim<char>;\n-    template class money_put_shim<wchar_t>;\n-\n-\n     template<typename _CharT>\n       struct messages_shim : std::messages<_CharT>, facet::__shim\n       {\n@@ -477,8 +463,22 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \t}\n       };\n \n+    template class numpunct_shim<char>;\n+    template class collate_shim<char>;\n+    template class moneypunct_shim<char, true>;\n+    template class moneypunct_shim<char, false>;\n+    template class money_get_shim<char>;\n+    template class money_put_shim<char>;\n     template class messages_shim<char>;\n+#ifdef _GLIBCXX_USE_WCHAR_T\n+    template class numpunct_shim<wchar_t>;\n+    template class collate_shim<wchar_t>;\n+    template class moneypunct_shim<wchar_t, true>;\n+    template class moneypunct_shim<wchar_t, false>;\n+    template class money_get_shim<wchar_t>;\n+    template class money_put_shim<wchar_t>;\n     template class messages_shim<wchar_t>;\n+#endif\n \n     template<typename C>\n       inline size_t\n@@ -524,9 +524,11 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n   __numpunct_fill_cache(current_abi, const facet*, __numpunct_cache<char>*,\n \t\t\tconst char*&, size_t&);\n \n+#ifdef _GLIBCXX_USE_WCHAR_T\n   template void\n   __numpunct_fill_cache(current_abi, const facet*, __numpunct_cache<wchar_t>*,\n \t\t\tconst char*&, size_t&);\n+#endif\n \n   template<typename C>\n     int\n@@ -540,9 +542,11 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n   __collate_compare(current_abi, const facet*, const char*, const char*,\n \t\t    const char*, const char*);\n \n+#ifdef _GLIBCXX_USE_WCHAR_T\n   template int\n   __collate_compare(current_abi, const facet*, const wchar_t*, const wchar_t*,\n \t\t    const wchar_t*, const wchar_t*);\n+#endif\n \n   template<typename C>\n     void\n@@ -557,9 +561,11 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n   __collate_transform(current_abi, const facet*, __any_string&,\n \t\t      const char*, const char*);\n \n+#ifdef _GLIBCXX_USE_WCHAR_T\n   template void\n   __collate_transform(current_abi, const facet*, __any_string&,\n \t\t      const wchar_t*, const wchar_t*);\n+#endif\n \n   template<typename C, bool Intl>\n     void\n@@ -599,13 +605,15 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n   __moneypunct_fill_cache(current_abi, const facet*,\n \t\t\t  __moneypunct_cache<char, false>*);\n \n+#ifdef _GLIBCXX_USE_WCHAR_T\n   template void\n   __moneypunct_fill_cache(current_abi, const facet*,\n \t\t\t  __moneypunct_cache<wchar_t, true>*);\n \n   template void\n   __moneypunct_fill_cache(current_abi, const facet*,\n \t\t\t  __moneypunct_cache<wchar_t, false>*);\n+#endif\n \n   template<typename C>\n     messages_base::catalog\n@@ -621,9 +629,11 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n   __messages_open<char>(current_abi, const facet*, const char*, size_t,\n \t\t\tconst locale&);\n \n+#ifdef _GLIBCXX_USE_WCHAR_T\n   template messages_base::catalog\n   __messages_open<wchar_t>(current_abi, const facet*, const char*, size_t,\n \t\t\t   const locale&);\n+#endif\n \n   template<typename C>\n     void\n@@ -639,9 +649,11 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n   __messages_get(current_abi, const facet*, __any_string&,\n \t\t messages_base::catalog, int, int, const char*, size_t);\n \n+#ifdef _GLIBCXX_USE_WCHAR_T\n   template void\n   __messages_get(current_abi, const facet*, __any_string&,\n \t\t messages_base::catalog, int, int, const wchar_t*, size_t);\n+#endif\n \n   template<typename C>\n     void\n@@ -653,9 +665,11 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n   template void\n   __messages_close<char>(current_abi, const facet*, messages_base::catalog c);\n \n+#ifdef _GLIBCXX_USE_WCHAR_T\n   template void\n   __messages_close<wchar_t>(current_abi, const facet*,\n \t\t\t    messages_base::catalog c);\n+#endif\n \n   template<typename C>\n     time_base::dateorder\n@@ -665,8 +679,10 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n   template time_base::dateorder\n   __time_get_dateorder<char>(current_abi, const facet*);\n \n+#ifdef _GLIBCXX_USE_WCHAR_T\n   template time_base::dateorder\n   __time_get_dateorder<wchar_t>(current_abi, const facet*);\n+#endif\n \n   template<typename C>\n     istreambuf_iterator<C>\n@@ -697,10 +713,12 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \t     istreambuf_iterator<char>, istreambuf_iterator<char>,\n \t     ios_base&, ios_base::iostate&, tm*, char);\n \n+#ifdef _GLIBCXX_USE_WCHAR_T\n   template istreambuf_iterator<wchar_t>\n   __time_get(current_abi, const facet*,\n \t     istreambuf_iterator<wchar_t>, istreambuf_iterator<wchar_t>,\n \t     ios_base&, ios_base::iostate&, tm*, char);\n+#endif\n \n   template<typename C>\n     istreambuf_iterator<C>\n@@ -725,11 +743,13 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \t      bool, ios_base&, ios_base::iostate&,\n \t      long double*, __any_string*);\n \n+#ifdef _GLIBCXX_USE_WCHAR_T\n   template istreambuf_iterator<wchar_t>\n   __money_get(current_abi, const facet*,\n \t      istreambuf_iterator<wchar_t>, istreambuf_iterator<wchar_t>,\n \t      bool, ios_base&, ios_base::iostate&,\n \t      long double*, __any_string*);\n+#endif\n \n   template<typename C>\n     ostreambuf_iterator<C>\n@@ -748,9 +768,11 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n   __money_put(current_abi, const facet*, ostreambuf_iterator<char>,\n \t\tbool, ios_base&, char, long double, const __any_string*);\n \n+#ifdef _GLIBCXX_USE_WCHAR_T\n   template ostreambuf_iterator<wchar_t>\n   __money_put(current_abi, const facet*, ostreambuf_iterator<wchar_t>,\n \t\tbool, ios_base&, wchar_t, long double, const __any_string*);\n+#endif\n \n _GLIBCXX_END_NAMESPACE_VERSION\n } // namespace __facet_shims"}]}