{"sha": "fb61af8ba8c31ec8a5c9b03ea26c9f82b09519a8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmI2MWFmOGJhOGMzMWVjOGE1YzliMDNlYTI2YzlmODJiMDk1MTlhOA==", "commit": {"author": {"name": "Bernd Schmidt", "email": "bernds@codesourcery.com", "date": "2014-11-10T16:30:33Z"}, "committer": {"name": "Bernd Schmidt", "email": "bernds@gcc.gnu.org", "date": "2014-11-10T16:30:33Z"}, "message": "XFAILs and such for ptx.\n\n\t* lib/target-supports.exp (check_effective_target_trampolines,\n\tcheck_profiling_available, check_effective_target_lto,\n\tcheck_effective_target_vect_natural): False for nvptx-*-*.\n\t* gcc.c-torture/compile/limits-fndefn.c: Skip for nvptx-*-*.\n\t* gcc.c-torture/compile/pr34334.c: Likewise.\n\t* gcc.c-torture/compile/pr37056.c: Likewise.\n\t* gcc.c-torture/compile/pr39423-1.c: Likewise.\n\t* gcc.c-torture/compile/pr46534.c: Likewise.\n\t* gcc.c-torture/compile/pr49049.c: Likewise.\n\t* gcc.c-torture/compile/pr59417.c: Likewise.\n\t* gcc.c-torture/compile/20080721-1.c: Likewise.\n\t* gcc.c-torture/compile/920501-4.c: Likewise.\n\t* gcc.c-torture/compile/921011-1.c: Likewise.\n\t* gcc.dg/20040813-1.c: Likewise.\n\t* gcc.dg/pr28755.c: Likewise.\n\t* gcc.dg/pr44194-1.c: Likewise.\n\t* gcc.c-torture/compile/pr42717.c: Xfail for nvptx-*-*.\n\t* gcc.c-torture/compile/pr61684.c: Likewise.\n\t* gcc.c-torture/compile/pr20601-1.c: Likewise.\n\t* gcc.c-torture/compile/pr59221.c: Likewise.\n\t* gcc.c-torture/compile/20060208-1.c: Likewise.\n\t* gcc.c-torture/execute/pr52129.c: Likewise.\n\t* gcc.c-torture/execute/20020310-1.c: Likewise.\n\t* gcc.c-torture/execute/20101011-1.c: Define DO_TEST to 0 for nvptx.\n\t* gcc.c-torture/execute20020312-2.c: Add case for for nvptx.\n\t* gcc.c-torture/compile/pr60655-1.c: Don't add -fdata-sections\n\tfor nvptx-*-*.\n\t* gcc.dg/pr36400.c: Xfail scan-assembler test on nvptx-*-*.\n\t* gcc.dg/const-elim-2.c: Likewise.\n\nFrom-SVN: r217298", "tree": {"sha": "0a2e9c1909392ddd20287e2bd1e535e9ea4785b9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0a2e9c1909392ddd20287e2bd1e535e9ea4785b9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fb61af8ba8c31ec8a5c9b03ea26c9f82b09519a8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fb61af8ba8c31ec8a5c9b03ea26c9f82b09519a8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fb61af8ba8c31ec8a5c9b03ea26c9f82b09519a8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fb61af8ba8c31ec8a5c9b03ea26c9f82b09519a8/comments", "author": null, "committer": null, "parents": [{"sha": "c445c02a65800cc94f17a9bdbb34ba89bb0730e4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c445c02a65800cc94f17a9bdbb34ba89bb0730e4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c445c02a65800cc94f17a9bdbb34ba89bb0730e4"}], "stats": {"total": 74, "additions": 67, "deletions": 7}, "files": [{"sha": "ef35dbfdd16aaaa50cac9988261b58b6995a4106", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb61af8ba8c31ec8a5c9b03ea26c9f82b09519a8/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb61af8ba8c31ec8a5c9b03ea26c9f82b09519a8/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=fb61af8ba8c31ec8a5c9b03ea26c9f82b09519a8", "patch": "@@ -1,5 +1,35 @@\n 2014-11-10  Bernd Schmidt  <bernds@codesourcery.com>\n \n+\t* lib/target-supports.exp (check_effective_target_trampolines,\n+\tcheck_profiling_available, check_effective_target_lto,\n+\tcheck_effective_target_vect_natural): False for nvptx-*-*.\n+\t* gcc.c-torture/compile/limits-fndefn.c: Skip for nvptx-*-*.\n+\t* gcc.c-torture/compile/pr34334.c: Likewise.\n+\t* gcc.c-torture/compile/pr37056.c: Likewise.\n+\t* gcc.c-torture/compile/pr39423-1.c: Likewise.\n+\t* gcc.c-torture/compile/pr46534.c: Likewise.\n+\t* gcc.c-torture/compile/pr49049.c: Likewise.\n+\t* gcc.c-torture/compile/pr59417.c: Likewise.\n+\t* gcc.c-torture/compile/20080721-1.c: Likewise.\n+\t* gcc.c-torture/compile/920501-4.c: Likewise.\n+\t* gcc.c-torture/compile/921011-1.c: Likewise.\n+\t* gcc.dg/20040813-1.c: Likewise.\n+\t* gcc.dg/pr28755.c: Likewise.\n+\t* gcc.dg/pr44194-1.c: Likewise.\n+\t* gcc.c-torture/compile/pr42717.c: Xfail for nvptx-*-*.\n+\t* gcc.c-torture/compile/pr61684.c: Likewise.\n+\t* gcc.c-torture/compile/pr20601-1.c: Likewise.\n+\t* gcc.c-torture/compile/pr59221.c: Likewise.\n+\t* gcc.c-torture/compile/20060208-1.c: Likewise.\n+\t* gcc.c-torture/execute/pr52129.c: Likewise.\n+\t* gcc.c-torture/execute/20020310-1.c: Likewise.\n+\t* gcc.c-torture/execute/20101011-1.c: Define DO_TEST to 0 for nvptx.\n+\t* gcc.c-torture/execute20020312-2.c: Add case for for nvptx.\n+\t* gcc.c-torture/compile/pr60655-1.c: Don't add -fdata-sections\n+\tfor nvptx-*-*.\n+\t* gcc.dg/pr36400.c: Xfail scan-assembler test on nvptx-*-*.\n+\t* gcc.dg/const-elim-2.c: Likewise.\n+\n \t* lib/target-supports.exp\n \t(check_effective_target_untyped_assembly): New function.\n \t* gcc.c-torture/compile/20091215-1.c: Require untyped_assembly."}, {"sha": "18724fb3ebef785106476ed50eb072d26d06fbb6", "filename": "gcc/testsuite/gcc.c-torture/compile/20060208-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb61af8ba8c31ec8a5c9b03ea26c9f82b09519a8/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20060208-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb61af8ba8c31ec8a5c9b03ea26c9f82b09519a8/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20060208-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20060208-1.c?ref=fb61af8ba8c31ec8a5c9b03ea26c9f82b09519a8", "patch": "@@ -1,4 +1,5 @@\n /* PR middle-end/26092 */\n+/* { dg-skip-if \"can't take address of malloc\" { nvptx-*-* } { \"*\" } { \"\" } } */\n typedef __SIZE_TYPE__ size_t;\n extern void *malloc (size_t);\n "}, {"sha": "6ee9ed95b93e11eba2c2498b63166157d3d72366", "filename": "gcc/testsuite/gcc.c-torture/compile/20080721-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb61af8ba8c31ec8a5c9b03ea26c9f82b09519a8/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20080721-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb61af8ba8c31ec8a5c9b03ea26c9f82b09519a8/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20080721-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20080721-1.c?ref=fb61af8ba8c31ec8a5c9b03ea26c9f82b09519a8", "patch": "@@ -1,3 +1,4 @@\n+/* { dg-skip-if \"can't read function data\" { nvptx-*-* } { \"*\" } { \"\" } } */\n void foo(void);\n void bar(void);\n "}, {"sha": "362f2b764d88be7029ef6bbec5a8d96fac8c3057", "filename": "gcc/testsuite/gcc.c-torture/compile/920501-4.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb61af8ba8c31ec8a5c9b03ea26c9f82b09519a8/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F920501-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb61af8ba8c31ec8a5c9b03ea26c9f82b09519a8/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F920501-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F920501-4.c?ref=fb61af8ba8c31ec8a5c9b03ea26c9f82b09519a8", "patch": "@@ -1,4 +1,5 @@\n /* { dg-do assemble } */\n+/* { dg-skip-if \"ptxas times out\" { nvptx-*-* } { \"-O1\" } { \"\" } } */\n \n foo ()\n {"}, {"sha": "5955b4c527dc0ccca1a901705fbc56ac792b38cb", "filename": "gcc/testsuite/gcc.c-torture/compile/921011-1.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb61af8ba8c31ec8a5c9b03ea26c9f82b09519a8/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F921011-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb61af8ba8c31ec8a5c9b03ea26c9f82b09519a8/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F921011-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F921011-1.c?ref=fb61af8ba8c31ec8a5c9b03ea26c9f82b09519a8", "patch": "@@ -1,3 +1,5 @@\n+/* { dg-skip-if \"ptxas times out\" { nvptx-*-* } { \"-O1\" } { \"\" } } */\n+\n void\n fun (nb)\n      int nb;"}, {"sha": "228c5d9ef292653619d73be891de4704b146d8fe", "filename": "gcc/testsuite/gcc.c-torture/compile/limits-fndefn.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb61af8ba8c31ec8a5c9b03ea26c9f82b09519a8/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Flimits-fndefn.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb61af8ba8c31ec8a5c9b03ea26c9f82b09519a8/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Flimits-fndefn.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Flimits-fndefn.c?ref=fb61af8ba8c31ec8a5c9b03ea26c9f82b09519a8", "patch": "@@ -1,4 +1,5 @@\n /* { dg-skip-if \"too complex for avr\" { avr-*-* } { \"*\" } { \"\" } } */\n+/* { dg-skip-if \"ptxas times out\" { nvptx-*-* } { \"*\" } { \"\" } } */\n /* { dg-timeout-factor 4.0 } */\n #define LIM1(x) x##0, x##1, x##2, x##3, x##4, x##5, x##6, x##7, x##8, x##9,\n #define LIM2(x) LIM1(x##0) LIM1(x##1) LIM1(x##2) LIM1(x##3) LIM1(x##4) \\"}, {"sha": "5fa60a35604984e393b365600931ac0502b5d079", "filename": "gcc/testsuite/gcc.c-torture/compile/pr34334.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb61af8ba8c31ec8a5c9b03ea26c9f82b09519a8/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr34334.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb61af8ba8c31ec8a5c9b03ea26c9f82b09519a8/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr34334.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr34334.c?ref=fb61af8ba8c31ec8a5c9b03ea26c9f82b09519a8", "patch": "@@ -1,3 +1,4 @@\n+/* { dg-skip-if \"ptxas times out\" { nvptx-*-* } { \"*\" } { \"-O0\" } } */\n __extension__ typedef __SIZE_TYPE__ size_t;\n __extension__ typedef long long int __quad_t;\n __extension__ typedef unsigned int __mode_t;"}, {"sha": "e709fdc1ffb24c9ba15e8420c69ea5e22c432dc4", "filename": "gcc/testsuite/gcc.c-torture/compile/pr37056.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb61af8ba8c31ec8a5c9b03ea26c9f82b09519a8/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr37056.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb61af8ba8c31ec8a5c9b03ea26c9f82b09519a8/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr37056.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr37056.c?ref=fb61af8ba8c31ec8a5c9b03ea26c9f82b09519a8", "patch": "@@ -1,3 +1,4 @@\n+/* { dg-skip-if \"ptxas times out\" { nvptx-*-* } { \"-O2\" \"-Os\" } { \"\" } } */\n extern void abort (void);\n \n static union {"}, {"sha": "c604738b9cb63ea6230a4ceca619ad9e8f924b34", "filename": "gcc/testsuite/gcc.c-torture/compile/pr39423-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb61af8ba8c31ec8a5c9b03ea26c9f82b09519a8/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr39423-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb61af8ba8c31ec8a5c9b03ea26c9f82b09519a8/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr39423-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr39423-1.c?ref=fb61af8ba8c31ec8a5c9b03ea26c9f82b09519a8", "patch": "@@ -1,4 +1,5 @@\n /* PR target/39423 */\n+/* { dg-skip-if \"ptxas times out\" { nvptx-*-* } { \"-O2\" } { \"\" } } */\n \n int\n foo (const char *name, int nmlen, char *flags)"}, {"sha": "7f6fb9db5cf82c14ca45b6546eb25502c95294d4", "filename": "gcc/testsuite/gcc.c-torture/compile/pr42717.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb61af8ba8c31ec8a5c9b03ea26c9f82b09519a8/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr42717.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb61af8ba8c31ec8a5c9b03ea26c9f82b09519a8/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr42717.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr42717.c?ref=fb61af8ba8c31ec8a5c9b03ea26c9f82b09519a8", "patch": "@@ -1,3 +1,4 @@\n+/* { dg-xfail-if \"ptxas crashes\" { nvptx-*-* } { \"-O0\" } { \"\" } } */\n static signed char\n foo (signed char si1, unsigned char si2)\n {"}, {"sha": "8300ca7f2cfa94c990aba236835d12cd91f6bce2", "filename": "gcc/testsuite/gcc.c-torture/compile/pr46534.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb61af8ba8c31ec8a5c9b03ea26c9f82b09519a8/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr46534.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb61af8ba8c31ec8a5c9b03ea26c9f82b09519a8/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr46534.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr46534.c?ref=fb61af8ba8c31ec8a5c9b03ea26c9f82b09519a8", "patch": "@@ -1,4 +1,4 @@\n-/* { dg-skip-if \"too big\" { avr-*-* pdp11-*-* } { \"*\" } { \"\" } } */\n+/* { dg-skip-if \"too big\" { avr-*-* nvptx-*-* pdp11-*-* } { \"*\" } { \"\" } } */\n /* PR middle-end/46534 */\n \n extern int printf (const char *, ...);"}, {"sha": "f396e056fb308bad1936532d6caf59ff98090f79", "filename": "gcc/testsuite/gcc.c-torture/compile/pr49049.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb61af8ba8c31ec8a5c9b03ea26c9f82b09519a8/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr49049.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb61af8ba8c31ec8a5c9b03ea26c9f82b09519a8/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr49049.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr49049.c?ref=fb61af8ba8c31ec8a5c9b03ea26c9f82b09519a8", "patch": "@@ -1,3 +1,5 @@\n+/* { dg-skip-if \"ptxas times out\" { nvptx-*-* } { \"-Os\" } { \"\" } } */\n+\n __extension__ typedef unsigned long long int uint64_t;\n \n static int"}, {"sha": "891ba66718a42282951f6bf355629ea706ad14be", "filename": "gcc/testsuite/gcc.c-torture/compile/pr59417.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb61af8ba8c31ec8a5c9b03ea26c9f82b09519a8/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr59417.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb61af8ba8c31ec8a5c9b03ea26c9f82b09519a8/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr59417.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr59417.c?ref=fb61af8ba8c31ec8a5c9b03ea26c9f82b09519a8", "patch": "@@ -1,4 +1,5 @@\n /* PR tree-optimization/59417 */\n+/* { dg-skip-if \"ptxas times out\" { nvptx-*-* } { \"-O1\" \"-O2\" \"-Os\" } { \"\" } } */\n \n int a, b, d;\n short c;"}, {"sha": "31efb4ba8221db316940b6d852cd5a6c39d1f887", "filename": "gcc/testsuite/gcc.c-torture/compile/pr60655-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb61af8ba8c31ec8a5c9b03ea26c9f82b09519a8/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr60655-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb61af8ba8c31ec8a5c9b03ea26c9f82b09519a8/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr60655-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr60655-1.c?ref=fb61af8ba8c31ec8a5c9b03ea26c9f82b09519a8", "patch": "@@ -1,4 +1,4 @@\n-/* { dg-options \"-fdata-sections\" { target { ! { { hppa*-*-hpux* } && { ! lp64 } } } } } */\n+/* { dg-options \"-fdata-sections\" { target { { ! { { hppa*-*-hpux* } && { ! lp64 } } } && { ! nvptx-*-* } } } } */\n \n typedef unsigned char unit;\n typedef unit *unitptr;"}, {"sha": "9a7b52feb9ea4f47700f8ef9a4f48e931455d92c", "filename": "gcc/testsuite/gcc.c-torture/compile/pr61684.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb61af8ba8c31ec8a5c9b03ea26c9f82b09519a8/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr61684.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb61af8ba8c31ec8a5c9b03ea26c9f82b09519a8/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr61684.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr61684.c?ref=fb61af8ba8c31ec8a5c9b03ea26c9f82b09519a8", "patch": "@@ -1,4 +1,5 @@\n /* PR tree-optimization/61684 */\n+/* { dg-xfail-if \"ptxas crashes\" { nvptx-*-* } { \"*\" } { \"-O0\" \"-O1\" \"-Os\" } } */\n \n int a, c;\n static int *b = 0;"}, {"sha": "34d03137e26e62b62810978adb5416cc7b454f4a", "filename": "gcc/testsuite/gcc.c-torture/execute/20101011-1.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb61af8ba8c31ec8a5c9b03ea26c9f82b09519a8/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20101011-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb61af8ba8c31ec8a5c9b03ea26c9f82b09519a8/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20101011-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20101011-1.c?ref=fb61af8ba8c31ec8a5c9b03ea26c9f82b09519a8", "patch": "@@ -71,6 +71,9 @@ __aeabi_idiv0 (int return_value)\n   /* Nios II requires both hardware support and user configuration to\n      raise an exception on divide by zero.  */\n # define DO_TEST 0\n+#elif defined (__nvptx__)\n+/* There isn't even a signal function.  */\n+# define DO_TEST 0\n #else\n # define DO_TEST 1\n #endif"}, {"sha": "6eab1ef1ea76d580b98e89a3e462a062e61adbf3", "filename": "gcc/testsuite/gcc.c-torture/execute/pr20601-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb61af8ba8c31ec8a5c9b03ea26c9f82b09519a8/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr20601-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb61af8ba8c31ec8a5c9b03ea26c9f82b09519a8/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr20601-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr20601-1.c?ref=fb61af8ba8c31ec8a5c9b03ea26c9f82b09519a8", "patch": "@@ -1,4 +1,5 @@\n /* PR tree-optimization/20601 */\n+/* { dg-xfail-if \"ptxas crashes\" { nvptx-*-* } { \"-O1\" } { \"\" } } */\n extern void abort (void);\n extern void exit (int);\n "}, {"sha": "ab43ca60cfe67243644c925a796ff9cb03fc57e8", "filename": "gcc/testsuite/gcc.c-torture/execute/pr52129.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb61af8ba8c31ec8a5c9b03ea26c9f82b09519a8/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr52129.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb61af8ba8c31ec8a5c9b03ea26c9f82b09519a8/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr52129.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr52129.c?ref=fb61af8ba8c31ec8a5c9b03ea26c9f82b09519a8", "patch": "@@ -1,4 +1,5 @@\n /* PR target/52129 */\n+/* { dg-xfail-if \"ptxas crashes\" { nvptx-*-* } { \"-O1\" } { \"\" } } */\n \n extern void abort (void);\n struct S { void *p; unsigned int q; };"}, {"sha": "b3072271bfb91b088e9f992d2c98cf26d6d89394", "filename": "gcc/testsuite/gcc.c-torture/execute/pr59221.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb61af8ba8c31ec8a5c9b03ea26c9f82b09519a8/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr59221.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb61af8ba8c31ec8a5c9b03ea26c9f82b09519a8/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr59221.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr59221.c?ref=fb61af8ba8c31ec8a5c9b03ea26c9f82b09519a8", "patch": "@@ -1,3 +1,4 @@\n+/* { dg-xfail-if \"ptxas crashes\" { nvptx-*-* } { \"*\" } { \"-O0\" \"-Os\" } } */\n \n \n int a = 1, b, d;"}, {"sha": "09b83225ad0b2e9e0f4d8db8ede4b4afcac3e3da", "filename": "gcc/testsuite/gcc.dg/20020310-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb61af8ba8c31ec8a5c9b03ea26c9f82b09519a8/gcc%2Ftestsuite%2Fgcc.dg%2F20020310-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb61af8ba8c31ec8a5c9b03ea26c9f82b09519a8/gcc%2Ftestsuite%2Fgcc.dg%2F20020310-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2F20020310-1.c?ref=fb61af8ba8c31ec8a5c9b03ea26c9f82b09519a8", "patch": "@@ -3,6 +3,7 @@\n /* { dg-do run } */\n /* { dg-options \"-O2\" } */\n /* { dg-options \"-O2 -mtune=i586\" { target { { i?86-*-* x86_64-*-* } && ia32 } } } */\n+/* { dg-xfail-if \"doesn't support self-referential initializers\" { nvptx-*-* } } */\n \n struct A\n {"}, {"sha": "de217412af5c2d12802518a14a7bbd3cb8df0078", "filename": "gcc/testsuite/gcc.dg/20020312-2.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb61af8ba8c31ec8a5c9b03ea26c9f82b09519a8/gcc%2Ftestsuite%2Fgcc.dg%2F20020312-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb61af8ba8c31ec8a5c9b03ea26c9f82b09519a8/gcc%2Ftestsuite%2Fgcc.dg%2F20020312-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2F20020312-2.c?ref=fb61af8ba8c31ec8a5c9b03ea26c9f82b09519a8", "patch": "@@ -104,6 +104,8 @@ extern void abort (void);\n /* No pic register.  */\n #elif defined(__MSP430__)\n /* No pic register.  */\n+#elif defined (__nvptx__)\n+/* No pic register.  */\n #else\n # error \"Modify the test for your target.\"\n #endif"}, {"sha": "782fccb086b85e2f5a6cf2ea12c7f8085bc8edc3", "filename": "gcc/testsuite/gcc.dg/20040813-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb61af8ba8c31ec8a5c9b03ea26c9f82b09519a8/gcc%2Ftestsuite%2Fgcc.dg%2F20040813-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb61af8ba8c31ec8a5c9b03ea26c9f82b09519a8/gcc%2Ftestsuite%2Fgcc.dg%2F20040813-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2F20040813-1.c?ref=fb61af8ba8c31ec8a5c9b03ea26c9f82b09519a8", "patch": "@@ -2,7 +2,7 @@\n /* Contributed by Devang Patel  <dpatel@apple.com>  */\n \n /* { dg-do compile } */\n-/* { dg-skip-if \"No stabs\" { aarch64*-*-* mmix-*-* *-*-aix* alpha*-*-* hppa*64*-*-* ia64-*-* tile*-*-* nios2-*-* *-*-vxworks* } { \"*\" } { \"\" } } */\n+/* { dg-skip-if \"No stabs\" { aarch64*-*-* mmix-*-* *-*-aix* alpha*-*-* hppa*64*-*-* ia64-*-* tile*-*-* nios2-*-* *-*-vxworks* nvptx-*-* } { \"*\" } { \"\" } } */\n /* { dg-options \"-gstabs\" } */\n \n int"}, {"sha": "a6cc1a406a8849114818041fb62b02ac6e4d8ab4", "filename": "gcc/testsuite/gcc.dg/const-elim-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb61af8ba8c31ec8a5c9b03ea26c9f82b09519a8/gcc%2Ftestsuite%2Fgcc.dg%2Fconst-elim-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb61af8ba8c31ec8a5c9b03ea26c9f82b09519a8/gcc%2Ftestsuite%2Fgcc.dg%2Fconst-elim-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fconst-elim-2.c?ref=fb61af8ba8c31ec8a5c9b03ea26c9f82b09519a8", "patch": "@@ -1,7 +1,7 @@\n /* The string constant in this test case should be emitted exactly once.  */\n /* { dg-do compile } */\n /* { dg-options \"-O2\" } */\n-/* { dg-final { scan-assembler-times \"hi there\" 1 } } */\n+/* { dg-final { scan-assembler-times \"hi there\" 1 { xfail nvptx-*-* } } } */\n \n static inline int returns_23() { return 23; }\n "}, {"sha": "50b56fb8907cd057a2f04fad26e55c79a53dca85", "filename": "gcc/testsuite/gcc.dg/pr28755.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb61af8ba8c31ec8a5c9b03ea26c9f82b09519a8/gcc%2Ftestsuite%2Fgcc.dg%2Fpr28755.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb61af8ba8c31ec8a5c9b03ea26c9f82b09519a8/gcc%2Ftestsuite%2Fgcc.dg%2Fpr28755.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr28755.c?ref=fb61af8ba8c31ec8a5c9b03ea26c9f82b09519a8", "patch": "@@ -3,6 +3,7 @@\n /* { dg-require-effective-target ptr32plus } */\n /* { dg-options \"-Os\" } */\n /* { dg-final { scan-assembler-times \"2112543726\\|7deadbee\" 2 } } */\n+/* { dg-skip-if \"integer output is different here\" { nvptx-*-* } } */\n \n struct S\n {"}, {"sha": "e43bab5df3cfc253759f27c80d4d1d92fba3c9a9", "filename": "gcc/testsuite/gcc.dg/pr44194-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb61af8ba8c31ec8a5c9b03ea26c9f82b09519a8/gcc%2Ftestsuite%2Fgcc.dg%2Fpr44194-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb61af8ba8c31ec8a5c9b03ea26c9f82b09519a8/gcc%2Ftestsuite%2Fgcc.dg%2Fpr44194-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr44194-1.c?ref=fb61af8ba8c31ec8a5c9b03ea26c9f82b09519a8", "patch": "@@ -1,4 +1,4 @@\n-/* { dg-do compile { target { { { { { { { i?86-*-* x86_64-*-* } && x32 } || lp64 } && { ! s390*-*-* } } && { ! hppa*64*-*-* } } && { ! alpha*-*-* } } && { { ! powerpc*-*-linux* } || powerpc_elfv2 } } } } */\n+/* { dg-do compile { target { { { { { { { i?86-*-* x86_64-*-* } && x32 } || lp64 } && { ! s390*-*-* } } && { ! hppa*64*-*-* } } && { ! alpha*-*-* } } && { { ! powerpc*-*-linux* } || powerpc_elfv2 } && { ! nvptx-*-* } } } } */\n /* { dg-options \"-O2 -fdump-rtl-dse1 -fdump-rtl-final\" } */\n \n /* Restrict to 64-bit targets since 32-bit targets usually return small"}, {"sha": "fa2591e1b7c34f104f5bec75206dfab07adc704a", "filename": "gcc/testsuite/gcc.dg/torture/pr36400.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb61af8ba8c31ec8a5c9b03ea26c9f82b09519a8/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr36400.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb61af8ba8c31ec8a5c9b03ea26c9f82b09519a8/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr36400.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr36400.c?ref=fb61af8ba8c31ec8a5c9b03ea26c9f82b09519a8", "patch": "@@ -14,4 +14,4 @@ void baz()\n   barptr->some_string = \"Everything OK\";\n }\n \n-/* { dg-final { scan-assembler \"Everything OK\" } } */\n+/* { dg-final { scan-assembler \"Everything OK\" { xfail nvptx-*-* } } } */"}, {"sha": "f2bf6390e5d42c3d50d31d6c1e70fa1bfa87f0cf", "filename": "gcc/testsuite/lib/target-supports.exp", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb61af8ba8c31ec8a5c9b03ea26c9f82b09519a8/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb61af8ba8c31ec8a5c9b03ea26c9f82b09519a8/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp?ref=fb61af8ba8c31ec8a5c9b03ea26c9f82b09519a8", "patch": "@@ -436,6 +436,7 @@ proc check_effective_target_trampolines { } {\n     }\n     if { [istarget avr-*-*]\n \t || [istarget msp430-*-*]\n+\t || [istarget nvptx-*-*]\n \t || [istarget hppa2.0w-hp-hpux11.23]\n \t || [istarget hppa64-hp-hpux11.23] } {\n \treturn 0;\n@@ -532,6 +533,7 @@ proc check_profiling_available { test_what } {\n \t     || [istarget msp430-*-*]\n \t     || [istarget nds32*-*-elf]\n \t     || [istarget nios2-*-elf]\n+\t     || [istarget nvptx-*-*]\n \t     || [istarget powerpc-*-eabi*]\n \t     || [istarget powerpc-*-elf]\n \t     || [istarget rx-*-*]\t\n@@ -4190,7 +4192,8 @@ proc check_effective_target_vect_natural_alignment { } {\n         verbose \"check_effective_target_vect_natural_alignment: using cached result\" 2\n     } else {\n         set et_vect_natural_alignment_saved 1\n-        if { [check_effective_target_arm_eabi] } {\n+        if { [check_effective_target_arm_eabi]\n+\t     || [istarget nvptx-*-*] } {\n             set et_vect_natural_alignment_saved 0\n         }\n     }\n@@ -5660,6 +5663,9 @@ proc check_effective_target_gld { } {\n \n proc check_effective_target_lto { } {\n     global ENABLE_LTO\n+    if { [istarget nvptx-*-*] } {\n+\treturn 0;\n+    }\n     return [info exists ENABLE_LTO]\n }\n "}]}