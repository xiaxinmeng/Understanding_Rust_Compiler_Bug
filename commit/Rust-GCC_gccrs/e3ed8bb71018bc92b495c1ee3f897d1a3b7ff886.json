{"sha": "e3ed8bb71018bc92b495c1ee3f897d1a3b7ff886", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTNlZDhiYjcxMDE4YmM5MmI0OTVjMWVlM2Y4OTdkMWEzYjdmZjg4Ng==", "commit": {"author": {"name": "Jeff Law", "email": "law@redhat.com", "date": "2015-09-29T16:41:38Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "2015-09-29T16:41:38Z"}, "message": "[PATCH] Fix undefined behaviour in SH port\n\n\t* config/sh/sh.c (gen_shl_and): Fix undefined left shift\n\tbehaviour.\n\t(gen_shl_sext): Likewise.\n\t* config/sh/sh.md (divsi3): Likewise.\n\t(imm->ext_dest_operand splitter): Likewise.\n\nFrom-SVN: r228257", "tree": {"sha": "98ea7434efef260a16c107e6f9d08f7928042fb8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/98ea7434efef260a16c107e6f9d08f7928042fb8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e3ed8bb71018bc92b495c1ee3f897d1a3b7ff886", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e3ed8bb71018bc92b495c1ee3f897d1a3b7ff886", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e3ed8bb71018bc92b495c1ee3f897d1a3b7ff886", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e3ed8bb71018bc92b495c1ee3f897d1a3b7ff886/comments", "author": null, "committer": null, "parents": [{"sha": "da68b8f4d2869b6944e55dcc3c26ae1f322021c0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/da68b8f4d2869b6944e55dcc3c26ae1f322021c0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/da68b8f4d2869b6944e55dcc3c26ae1f322021c0"}], "stats": {"total": 16, "additions": 12, "deletions": 4}, "files": [{"sha": "87de440f2a899cee2f119c6fbd1ff394967ef063", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e3ed8bb71018bc92b495c1ee3f897d1a3b7ff886/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e3ed8bb71018bc92b495c1ee3f897d1a3b7ff886/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e3ed8bb71018bc92b495c1ee3f897d1a3b7ff886", "patch": "@@ -1,3 +1,11 @@\n+2015-09-29  Jeff Law  <law@redhat.com>\n+\n+\t* config/sh/sh.c (gen_shl_and): Fix undefined left shift\n+\tbehaviour.\n+\t(gen_shl_sext): Likewise.\n+\t* config/sh/sh.md (divsi3): Likewise.\n+\t(imm->ext_dest_operand splitter): Likewise.\n+\n 2015-09-29  Sebastian Pop  <s.pop@samsung.com>\n             Aditya Kumar  <aditya.k7@samsung.com>\n "}, {"sha": "904201b22b025275951c540270b811dfa2da8260", "filename": "gcc/config/sh/sh.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e3ed8bb71018bc92b495c1ee3f897d1a3b7ff886/gcc%2Fconfig%2Fsh%2Fsh.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e3ed8bb71018bc92b495c1ee3f897d1a3b7ff886/gcc%2Fconfig%2Fsh%2Fsh.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh.c?ref=e3ed8bb71018bc92b495c1ee3f897d1a3b7ff886", "patch": "@@ -4342,7 +4342,7 @@ gen_shl_and (rtx dest, rtx left_rtx, rtx mask_rtx, rtx source)\n \t that don't matter.  This way, we might be able to get a shorter\n \t signed constant.  */\n       if (mask & ((HOST_WIDE_INT) 1 << (31 - total_shift)))\n-\tmask |= (HOST_WIDE_INT) ~0 << (31 - total_shift);\n+\tmask |= (HOST_WIDE_INT) ((HOST_WIDE_INT_M1U) << (31 - total_shift));\n     case 2:\n       /* Don't expand fine-grained when combining, because that will\n          make the pattern fail.  */\n@@ -4626,7 +4626,7 @@ gen_shl_sext (rtx dest, rtx left_rtx, rtx size_rtx, rtx source)\n \t}\n       emit_insn (gen_andsi3 (dest, source, GEN_INT ((1 << insize) - 1)));\n       emit_insn (gen_xorsi3 (dest, dest, GEN_INT (1 << (insize - 1))));\n-      emit_insn (gen_addsi3 (dest, dest, GEN_INT (-1 << (insize - 1))));\n+      emit_insn (gen_addsi3 (dest, dest, GEN_INT (HOST_WIDE_INT_M1U << (insize - 1))));\n       operands[0] = dest;\n       operands[2] = kind == 7 ? GEN_INT (left + 1) : left_rtx;\n       gen_shifty_op (ASHIFT, operands);"}, {"sha": "d758e3bf5f8e0a89786b1a7b8ccc100d120e7f5b", "filename": "gcc/config/sh/sh.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e3ed8bb71018bc92b495c1ee3f897d1a3b7ff886/gcc%2Fconfig%2Fsh%2Fsh.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e3ed8bb71018bc92b495c1ee3f897d1a3b7ff886/gcc%2Fconfig%2Fsh%2Fsh.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh.md?ref=e3ed8bb71018bc92b495c1ee3f897d1a3b7ff886", "patch": "@@ -3052,7 +3052,7 @@\n \t  tab_base = force_reg (DImode, tab_base);\n \t}\n       if (TARGET_DIVIDE_INV20U)\n-\ti2p27 = force_reg (DImode, GEN_INT (-2 << 27));\n+\ti2p27 = force_reg (DImode, GEN_INT ((unsigned HOST_WIDE_INT)-2 << 27));\n       else\n \ti2p27 = GEN_INT (0);\n       if (TARGET_DIVIDE_INV20U || TARGET_DIVIDE_INV20L)\n@@ -7875,7 +7875,7 @@ label:\n \t      break;\n \t    }\n \t  /* Try movi / mshflo.l w/ r63.  */\n-\t  val2 = val + ((HOST_WIDE_INT) -1 << 32);\n+\t  val2 = val + ((HOST_WIDE_INT) (HOST_WIDE_INT_M1U << 32));\n \t  if ((HOST_WIDE_INT) val2 < 0 && CONST_OK_FOR_I16 (val2))\n \t    {\n \t      operands[1] = gen_mshflo_l_di (operands[0], operands[0],"}]}