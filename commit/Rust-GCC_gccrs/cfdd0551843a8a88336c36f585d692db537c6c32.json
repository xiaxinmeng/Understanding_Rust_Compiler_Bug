{"sha": "cfdd0551843a8a88336c36f585d692db537c6c32", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2ZkZDA1NTE4NDNhOGE4ODMzNmMzNmY1ODVkNjkyZGI1MzdjNmMzMg==", "commit": {"author": {"name": "Per Bothner", "email": "bothner@cygnus.com", "date": "1998-05-22T12:22:54Z"}, "committer": {"name": "Per Bothner", "email": "bothner@gcc.gnu.org", "date": "1998-05-22T12:22:54Z"}, "message": "cp-tree.h: Add comments documenting which LANG_FLAGS are used.\n\n\ufffd\n\t* cp-tree.h:  Add comments documenting which LANG_FLAGS are used.\n\t(C_TYPE_VARIABLE_SIZE, C_DECL_VARIABLE_SIZE):  Removed, not used.\n\nFrom-SVN: r19960", "tree": {"sha": "eae04dae7ce86d9c879afc4c9534ce5b916df243", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/eae04dae7ce86d9c879afc4c9534ce5b916df243"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cfdd0551843a8a88336c36f585d692db537c6c32", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cfdd0551843a8a88336c36f585d692db537c6c32", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cfdd0551843a8a88336c36f585d692db537c6c32", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cfdd0551843a8a88336c36f585d692db537c6c32/comments", "author": null, "committer": null, "parents": [{"sha": "2e0773e8574540c3365294c491ba0576a1bd70f6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2e0773e8574540c3365294c491ba0576a1bd70f6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2e0773e8574540c3365294c491ba0576a1bd70f6"}], "stats": {"total": 66, "additions": 59, "deletions": 7}, "files": [{"sha": "0c5ddc1c517cae762024f6ed1ad862e9cc7a6190", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cfdd0551843a8a88336c36f585d692db537c6c32/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cfdd0551843a8a88336c36f585d692db537c6c32/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=cfdd0551843a8a88336c36f585d692db537c6c32", "patch": "@@ -1,3 +1,8 @@\n+1998-05-22  Per Bothner  <bothner@cygnus.com>\n+\n+\t* cp-tree.h:  Add comments documenting which LANG_FLAGS are used.\n+\t(C_TYPE_VARIABLE_SIZE, C_DECL_VARIABLE_SIZE):  Removed, not used.\n+\n 1998-05-22  Jason Merrill  <jason@yorick.cygnus.com>\n \n \t* pt.c (print_template_context): Use fprintf instead of cp_error."}, {"sha": "3cde1028f53603bcc418aaae52ef036503430865", "filename": "gcc/cp/cp-tree.h", "status": "modified", "additions": 54, "deletions": 7, "changes": 61, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cfdd0551843a8a88336c36f585d692db537c6c32/gcc%2Fcp%2Fcp-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cfdd0551843a8a88336c36f585d692db537c6c32/gcc%2Fcp%2Fcp-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.h?ref=cfdd0551843a8a88336c36f585d692db537c6c32", "patch": "@@ -24,6 +24,58 @@ Boston, MA 02111-1307, USA.  */\n \n #include \"gansidecl.h\"\n \n+/* Usage of TREE_LANG_FLAG_?:\n+   0: TREE_NONLOCAL_FLAG (in TREE_LIST or _TYPE).\n+      BINFO_MARKED (BINFO nodes).\n+      TI_USES_TEMPLATE_PARMS.\n+      COMPOUND_STMT_NO_SCOPE (in COMPOUND_STMT).\n+      NEW_EXPR_USE_GLOBAL (in NEW_EXPR).\n+      DELETE_EXPR_USE_GLOBAL (in DELETE_EXPR).\n+      LOOKUP_EXPR_GLOBAL (in LOOKUP_EXPR).\n+      TREE_NEGATED_INT (in INTEGER_CST).\n+      (TREE_MANGLED) (in IDENTIFIER_NODE) (commented-out).\n+   1:  IDENTIFIER_VIRTUAL_P.\n+      TI_PENDING_TEMPLATE_FLAG.\n+      TI_PENDING_SPECIALIZATION_FLAG.\n+      TEMPLATE_PARMS_FOR_INLINE.\n+      DELETE_EXPR_USE_VEC (in DELETE_EXPR).\n+      (TREE_CALLS_NEW) (in _EXPR or _REF) (commented-out).\n+      TYPE_USES_COMPLEX_INHERITANCE (in _TYPE).\n+      C_DECLARED_LABEL_FLAG.\n+   2: IDENTIFIER_OPNAME_P.\n+      BINFO_FIELDS_MARKED.\n+      TYPE_VIRTUAL_P.\n+      PARM_DECL_EXPR (in SAVE_EXPR).\n+   3: TYPE_USES_VIRTUAL_BASECLASSES (in a class TYPE).\n+      BINFO_VTABLE_PATH_MARKED.\n+      (TREE_REFERENCE_EXPR) (in NON_LVALUE_EXPR) (commented-out).\n+   4: BINFO_NEW_VTABLE_MARKED.\n+      TREE_HAS_CONSTRUCTOR (in INDIRECT_REF, SAVE_EXPR, CONSTRUCTOR,\n+          or FIELD_DECL).\n+   5: BINFO_VIA_PUBLIC.\n+      BINFO_VBASE_INIT_MARKED.\n+   6: Not used.\n+\n+   Usage of TYPE_LANG_FLAG_?:\n+   0: C_TYPE_FIELDS_READONLY (in RECORD_TYPE or UNION_TYPE).\n+   1: TYPE_HAS_CONSTRUCTOR.\n+   2: TYPE_HAS_DESTRUCTOR.\n+   3: Not used.\n+   4: TYPE_NEEDS_DESTRUCTOR.\n+   5: IS_AGGR_TYPE.\n+   6: TYPE_BUILT_IN\n+\n+   Usage of DECL_LANG_FLAG_?:\n+   0: DECL_ERROR_REPORTED (in VAR_DECL).\n+   1: C_TYPEDEF_EXPLICITLY_SIGNED (in TYPE_DECL).\n+   2: DECL_THIS_EXTERN (in VAR_DECL or FUNCTION_DECL).\n+   3: DECL_IN_AGGR_P.\n+   4: DECL_MAYBE_TEMPLATE.\n+   5: DECL_INTERFACE_KNOWN.\n+   6: DECL_THIS_STATIC (in VAR_DECL or FUNCTION_DECL).\n+   7: DECL_DEAD_FOR_LOCAL (in VAR_DECL).\n+*/\n+\n /* Language-dependent contents of an identifier.  */\n \n struct lang_identifier\n@@ -1196,7 +1248,7 @@ struct lang_decl\n \n #define TYPENAME_TYPE_FULLNAME(NODE)\tCLASSTYPE_SIZE (NODE)\n \n-/* Nonzero in INT_CST means that this int is negative by dint of\n+/* Nonzero in INTEGER_CST means that this int is negative by dint of\n    using a twos-complement negated operand.  */\n #define TREE_NEGATED_INT(NODE) (TREE_LANG_FLAG_0 (NODE))\n \n@@ -1270,11 +1322,6 @@ extern int flag_new_for_scope;\n    These may be shadowed, and may be referenced from nested functions.  */\n #define C_DECLARED_LABEL_FLAG(label) TREE_LANG_FLAG_1 (label)\n \n-/* Record whether a type or decl was written with nonconstant size.\n-   Note that TYPE_SIZE may have simplified to a constant.  */\n-#define C_TYPE_VARIABLE_SIZE(type) TREE_LANG_FLAG_4 (type)\n-#define C_DECL_VARIABLE_SIZE(type) DECL_LANG_FLAG_8 (type)\n-\n /* Nonzero for _TYPE means that the _TYPE defines\n    at least one constructor.  */\n #define TYPE_HAS_CONSTRUCTOR(NODE) (TYPE_LANG_FLAG_1(NODE))\n@@ -1312,7 +1359,7 @@ extern int flag_new_for_scope;\n /* Nonzero for _TYPE node means that creating an object of this type\n    will involve a call to a constructor.  This can apply to objects\n    of ARRAY_TYPE if the type of the elements needs a constructor.  */\n-#define TYPE_NEEDS_CONSTRUCTING(NODE) (TYPE_LANG_FLAG_3(NODE))\n+#define TYPE_NEEDS_CONSTRUCTING(NODE) ... defined in ../tree.h ...\n #endif\n \n /* Nonzero means that an object of this type can not be initialized using"}]}