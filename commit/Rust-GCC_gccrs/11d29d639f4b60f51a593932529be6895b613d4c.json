{"sha": "11d29d639f4b60f51a593932529be6895b613d4c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTFkMjlkNjM5ZjRiNjBmNTFhNTkzOTMyNTI5YmU2ODk1YjYxM2Q0Yw==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2017-12-22T18:01:58Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2017-12-22T18:01:58Z"}, "message": "re PR debug/83547 ((statement-frontiers) error: void value not ignored as it ought to be)\n\n\tPR debug/83547\n\t* tree-iterator.c (alloc_stmt_list): Start with cleared\n\tTREE_SIDE_EFFECTS regardless whether a new STATEMENT_LIST is allocated\n\tor old one reused.\nc/\n\t* c-typeck.c (c_finish_stmt_expr): Ignore !TREE_SIDE_EFFECTS as\n\tindicator of ({ }), instead skip all trailing DEBUG_BEGIN_STMTs first,\n\tand consider empty ones if there are no other stmts.  For\n\t-Wunused-value walk all statements before the one only followed by\n\tDEBUG_BEGIN_STMTs.\ntestsuite/\n\t* gcc.c-torture/compile/pr83547.c: New test.\n\nFrom-SVN: r255980", "tree": {"sha": "55a89f9b5c3f9d9950784154e055bf77d09d5457", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/55a89f9b5c3f9d9950784154e055bf77d09d5457"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/11d29d639f4b60f51a593932529be6895b613d4c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/11d29d639f4b60f51a593932529be6895b613d4c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/11d29d639f4b60f51a593932529be6895b613d4c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/11d29d639f4b60f51a593932529be6895b613d4c/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d7727ce400380aaf26fb915d31dcbd98a761e2c0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d7727ce400380aaf26fb915d31dcbd98a761e2c0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d7727ce400380aaf26fb915d31dcbd98a761e2c0"}], "stats": {"total": 56, "additions": 45, "deletions": 11}, "files": [{"sha": "aba9ae7ea5a4bb3b4ebb08a37a06c83c3524b178", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/11d29d639f4b60f51a593932529be6895b613d4c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/11d29d639f4b60f51a593932529be6895b613d4c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=11d29d639f4b60f51a593932529be6895b613d4c", "patch": "@@ -1,5 +1,10 @@\n 2017-12-22  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR debug/83547\n+\t* tree-iterator.c (alloc_stmt_list): Start with cleared\n+\tTREE_SIDE_EFFECTS regardless whether a new STATEMENT_LIST is allocated\n+\tor old one reused.\n+\n \tPR target/83488\n \t* config/i386/avx512vnniintrin.h: Don't check for __AVX512F__ nor\n \tenable avx512f explicitly in #pragma GCC target."}, {"sha": "581f7df149b18f1b456e63045165c117fa21164d", "filename": "gcc/c/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/11d29d639f4b60f51a593932529be6895b613d4c/gcc%2Fc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/11d29d639f4b60f51a593932529be6895b613d4c/gcc%2Fc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2FChangeLog?ref=11d29d639f4b60f51a593932529be6895b613d4c", "patch": "@@ -1,3 +1,12 @@\n+2017-12-22  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR debug/83547\n+\t* c-typeck.c (c_finish_stmt_expr): Ignore !TREE_SIDE_EFFECTS as\n+\tindicator of ({ }), instead skip all trailing DEBUG_BEGIN_STMTs first,\n+\tand consider empty ones if there are no other stmts.  For\n+\t-Wunused-value walk all statements before the one only followed by\n+\tDEBUG_BEGIN_STMTs.\n+\n 2017-12-22  Mike Stump  <mikestump@comcast.net>\n             Eric Botcazou  <ebotcazou@adacore.com>\n "}, {"sha": "98062c76b90bed16c0849b17520e0609820a1011", "filename": "gcc/c/c-typeck.c", "status": "modified", "additions": 8, "deletions": 10, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/11d29d639f4b60f51a593932529be6895b613d4c/gcc%2Fc%2Fc-typeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/11d29d639f4b60f51a593932529be6895b613d4c/gcc%2Fc%2Fc-typeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2Fc-typeck.c?ref=11d29d639f4b60f51a593932529be6895b613d4c", "patch": "@@ -10751,17 +10751,21 @@ c_finish_stmt_expr (location_t loc, tree body)\n  continue_searching:\n   if (TREE_CODE (last) == STATEMENT_LIST)\n     {\n-      tree_stmt_iterator i;\n+      tree_stmt_iterator l = tsi_last (last);\n+\n+      while (!tsi_end_p (l) && TREE_CODE (tsi_stmt (l)) == DEBUG_BEGIN_STMT)\n+\ttsi_prev (&l);\n \n       /* This can happen with degenerate cases like ({ }).  No value.  */\n-      if (!TREE_SIDE_EFFECTS (last))\n+      if (tsi_end_p (l))\n \treturn body;\n \n       /* If we're supposed to generate side effects warnings, process\n \t all of the statements except the last.  */\n       if (warn_unused_value)\n \t{\n-\t  for (i = tsi_start (last); !tsi_one_before_end_p (i); tsi_next (&i))\n+\t  for (tree_stmt_iterator i = tsi_start (last);\n+\t       tsi_stmt (i) != tsi_stmt (l); tsi_next (&i))\n \t    {\n \t      location_t tloc;\n \t      tree t = tsi_stmt (i);\n@@ -10770,13 +10774,7 @@ c_finish_stmt_expr (location_t loc, tree body)\n \t      emit_side_effect_warnings (tloc, t);\n \t    }\n \t}\n-      else\n-\ti = tsi_last (last);\n-      if (TREE_CODE (tsi_stmt (i)) == DEBUG_BEGIN_STMT)\n-\tdo\n-\t  tsi_prev (&i);\n-\twhile (TREE_CODE (tsi_stmt (i)) == DEBUG_BEGIN_STMT);\n-      last_p = tsi_stmt_ptr (i);\n+      last_p = tsi_stmt_ptr (l);\n       last = *last_p;\n     }\n "}, {"sha": "0102564068cc99ffb9deef21bcb1e35f47733037", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/11d29d639f4b60f51a593932529be6895b613d4c/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/11d29d639f4b60f51a593932529be6895b613d4c/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=11d29d639f4b60f51a593932529be6895b613d4c", "patch": "@@ -1,5 +1,8 @@\n 2017-12-22  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR debug/83547\n+\t* gcc.c-torture/compile/pr83547.c: New test.\n+\n \tPR target/83488\n \t* gcc.target/i386/pr83488-2.c: New test.\n \t* gcc.target/i386/pr83488-3.c: New test."}, {"sha": "98a1e0453f267db6491085b760771b1bfa9f4266", "filename": "gcc/testsuite/gcc.c-torture/compile/pr83547.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/11d29d639f4b60f51a593932529be6895b613d4c/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr83547.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/11d29d639f4b60f51a593932529be6895b613d4c/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr83547.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr83547.c?ref=11d29d639f4b60f51a593932529be6895b613d4c", "patch": "@@ -0,0 +1,16 @@\n+/* PR debug/83547 */\n+\n+void\n+foo (void)\n+{\n+  if (({ 0; }))\n+    ;\n+  if (({ 0; 0; }))\n+    ;\n+  if (({ }))\t\t/* { dg-error \"void value not ignored as it ought to be\" } */\n+    ;\n+  if (({ 0; { 0; } }))\t/* { dg-error \"void value not ignored as it ought to be\" } */\n+    ;\n+  if (({ 0; {} }))\t/* { dg-error \"void value not ignored as it ought to be\" } */\n+    ;\n+}"}, {"sha": "b0b88f4d2c751bf26067ad6aac15e25292d109d1", "filename": "gcc/tree-iterator.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/11d29d639f4b60f51a593932529be6895b613d4c/gcc%2Ftree-iterator.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/11d29d639f4b60f51a593932529be6895b613d4c/gcc%2Ftree-iterator.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-iterator.c?ref=11d29d639f4b60f51a593932529be6895b613d4c", "patch": "@@ -41,7 +41,10 @@ alloc_stmt_list (void)\n       TREE_SET_CODE (list, STATEMENT_LIST);\n     }\n   else\n-    list = make_node (STATEMENT_LIST);\n+    {\n+      list = make_node (STATEMENT_LIST);\n+      TREE_SIDE_EFFECTS (list) = 0;\n+    }\n   TREE_TYPE (list) = void_type_node;\n   return list;\n }"}]}