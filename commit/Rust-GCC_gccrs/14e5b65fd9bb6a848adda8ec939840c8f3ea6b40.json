{"sha": "14e5b65fd9bb6a848adda8ec939840c8f3ea6b40", "node_id": "C_kwDOANBUbNoAKDE0ZTViNjVmZDliYjZhODQ4YWRkYThlYzkzOTg0MGM4ZjNlYTZiNDA", "commit": {"author": {"name": "Javier Miranda", "email": "miranda@adacore.com", "date": "2023-03-06T10:43:28Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2023-03-06T10:45:24Z"}, "message": "Fix assertion failure on VSS library\n\ngcc/ada/\n\tPR ada/108858\n\t* sem_ch6.adb (Analyze_Subprogram_Body_Helper): For functions with\n\tseparate spec, if their return type was visible through a limited-\n\twith context clause, their extra formals were not added when the\n\tspec was analyzed.  Now the full view must be available, and the\n\textra formals can be created and Returns_By_Ref computed.", "tree": {"sha": "592ccd31597871f545f55dbab62018f00d408c42", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/592ccd31597871f545f55dbab62018f00d408c42"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/14e5b65fd9bb6a848adda8ec939840c8f3ea6b40", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/14e5b65fd9bb6a848adda8ec939840c8f3ea6b40", "html_url": "https://github.com/Rust-GCC/gccrs/commit/14e5b65fd9bb6a848adda8ec939840c8f3ea6b40", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/14e5b65fd9bb6a848adda8ec939840c8f3ea6b40/comments", "author": {"login": "miranda-adacore", "id": 54413934, "node_id": "MDQ6VXNlcjU0NDEzOTM0", "avatar_url": "https://avatars.githubusercontent.com/u/54413934?v=4", "gravatar_id": "", "url": "https://api.github.com/users/miranda-adacore", "html_url": "https://github.com/miranda-adacore", "followers_url": "https://api.github.com/users/miranda-adacore/followers", "following_url": "https://api.github.com/users/miranda-adacore/following{/other_user}", "gists_url": "https://api.github.com/users/miranda-adacore/gists{/gist_id}", "starred_url": "https://api.github.com/users/miranda-adacore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/miranda-adacore/subscriptions", "organizations_url": "https://api.github.com/users/miranda-adacore/orgs", "repos_url": "https://api.github.com/users/miranda-adacore/repos", "events_url": "https://api.github.com/users/miranda-adacore/events{/privacy}", "received_events_url": "https://api.github.com/users/miranda-adacore/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "94a67e3044212592ce408952c526210a81e1bf49", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/94a67e3044212592ce408952c526210a81e1bf49", "html_url": "https://github.com/Rust-GCC/gccrs/commit/94a67e3044212592ce408952c526210a81e1bf49"}], "stats": {"total": 15, "additions": 15, "deletions": 0}, "files": [{"sha": "d4701aed0f7a9aabb7ea91b561c0e056724bd43c", "filename": "gcc/ada/sem_ch6.adb", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/14e5b65fd9bb6a848adda8ec939840c8f3ea6b40/gcc%2Fada%2Fsem_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/14e5b65fd9bb6a848adda8ec939840c8f3ea6b40/gcc%2Fada%2Fsem_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch6.adb?ref=14e5b65fd9bb6a848adda8ec939840c8f3ea6b40", "patch": "@@ -3836,6 +3836,21 @@ package body Sem_Ch6 is\n          Spec_Decl := Unit_Declaration_Node (Spec_Id);\n          Verify_Overriding_Indicator;\n \n+         --  For functions with separate spec, if their return type was visible\n+         --  through a limited-with context clause, their extra formals were\n+         --  not added when the spec was frozen. Now the full view must be\n+         --  available, and the extra formals can be created and Returns_By_Ref\n+         --  computed (required to generate its return statements).\n+\n+         if Ekind (Spec_Id) = E_Function\n+           and then From_Limited_With (Etype (Spec_Id))\n+           and then Is_Build_In_Place_Function (Spec_Id)\n+           and then not Has_BIP_Formals (Spec_Id)\n+         then\n+            Create_Extra_Formals (Spec_Id);\n+            Compute_Returns_By_Ref (Spec_Id);\n+         end if;\n+\n          --  In general, the spec will be frozen when we start analyzing the\n          --  body. However, for internally generated operations, such as\n          --  wrapper functions for inherited operations with controlling"}]}