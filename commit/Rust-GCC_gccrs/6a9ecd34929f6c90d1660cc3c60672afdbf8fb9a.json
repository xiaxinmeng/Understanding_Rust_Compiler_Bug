{"sha": "6a9ecd34929f6c90d1660cc3c60672afdbf8fb9a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmE5ZWNkMzQ5MjlmNmM5MGQxNjYwY2MzYzYwNjcyYWZkYmY4ZmI5YQ==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo.carlini@oracle.com", "date": "2012-04-15T23:35:27Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2012-04-15T23:35:27Z"}, "message": "re PR libstdc++/52702 ([C++11] std::is_trivially_destructible is missing)\n\n2012-04-15  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR libstdc++/52702\n\t* include/std/type_traits (is_trivially_destructible): Add.\n\t(has_trivial_destructor): Remove.\n\t* testsuite/util/testsuite_common_types.h: Adjust.\n\t* testsuite/20_util/tuple/requirements/dr801.cc: Likewise.\n\t* testsuite/20_util/pair/requirements/dr801.cc: Likewise.\n\t* testsuite/20_util/is_trivially_destructible/value.cc: New.\n\t* testsuite/20_util/is_trivially_destructible/requirements/\n\ttypedefs.cc: Likewise.\n\t* testsuite/20_util/is_trivially_destructible/requirements/\n\texplicit_instantiation.cc: Likewise.\n\t* testsuite/20_util/make_signed/requirements/typedefs_neg.cc:\n\tAdjust dg-error line numbers.\n\t* testsuite/20_util/make_unsigned/requirements/typedefs_neg.cc:\n\tLikewise.\n\t* testsuite/20_util/declval/requirements/1_neg.cc: Likewise.\n\nFrom-SVN: r186474", "tree": {"sha": "0be0497b23b1290a05f246b7d8c32bf1b362f7f2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0be0497b23b1290a05f246b7d8c32bf1b362f7f2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6a9ecd34929f6c90d1660cc3c60672afdbf8fb9a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6a9ecd34929f6c90d1660cc3c60672afdbf8fb9a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6a9ecd34929f6c90d1660cc3c60672afdbf8fb9a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6a9ecd34929f6c90d1660cc3c60672afdbf8fb9a/comments", "author": null, "committer": null, "parents": [{"sha": "a3ddb738837877aaec229583102e0d5e00610117", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a3ddb738837877aaec229583102e0d5e00610117", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a3ddb738837877aaec229583102e0d5e00610117"}], "stats": {"total": 210, "additions": 179, "deletions": 31}, "files": [{"sha": "eb010a22d775ee10c16872f56e8de6b455b8568f", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a9ecd34929f6c90d1660cc3c60672afdbf8fb9a/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a9ecd34929f6c90d1660cc3c60672afdbf8fb9a/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=6a9ecd34929f6c90d1660cc3c60672afdbf8fb9a", "patch": "@@ -1,3 +1,22 @@\n+2012-04-15  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR libstdc++/52702\n+\t* include/std/type_traits (is_trivially_destructible): Add.\n+\t(has_trivial_destructor): Remove.\n+\t* testsuite/util/testsuite_common_types.h: Adjust.\n+\t* testsuite/20_util/tuple/requirements/dr801.cc: Likewise.\n+\t* testsuite/20_util/pair/requirements/dr801.cc: Likewise.\n+\t* testsuite/20_util/is_trivially_destructible/value.cc: New.\n+\t* testsuite/20_util/is_trivially_destructible/requirements/\n+\ttypedefs.cc: Likewise.\n+\t* testsuite/20_util/is_trivially_destructible/requirements/\n+\texplicit_instantiation.cc: Likewise.\n+\t* testsuite/20_util/make_signed/requirements/typedefs_neg.cc:\n+\tAdjust dg-error line numbers.\n+\t* testsuite/20_util/make_unsigned/requirements/typedefs_neg.cc:\n+\tLikewise.\n+\t* testsuite/20_util/declval/requirements/1_neg.cc: Likewise.\n+\n 2012-04-14  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR libstdc++/52699"}, {"sha": "eb8c6a06fe96cf008f0f7c616b681bae04fd4b83", "filename": "libstdc++-v3/include/std/type_traits", "status": "modified", "additions": 24, "deletions": 9, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a9ecd34929f6c90d1660cc3c60672afdbf8fb9a/libstdc%2B%2B-v3%2Finclude%2Fstd%2Ftype_traits", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a9ecd34929f6c90d1660cc3c60672afdbf8fb9a/libstdc%2B%2B-v3%2Finclude%2Fstd%2Ftype_traits", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Ftype_traits?ref=6a9ecd34929f6c90d1660cc3c60672afdbf8fb9a", "patch": "@@ -1147,30 +1147,45 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n     : public __is_nt_move_assignable_impl<_Tp>\n     { };\n \n-  /// has_trivial_default_constructor\n+  /// is_trivially_constructible (still unimplemented)\n+  \n+  /// is_trivially_default_constructible (still unimplemented)\n+\n+  /// is_trivially_copy_constructible (still unimplemented)\n+\n+  /// is_trivially_move_constructible (still unimplemented)\n+\n+  /// is_trivially_assignable (still unimplemented)\n+\n+  /// is_trivially_copy_assignable (still unimplemented)\n+\n+  /// is_trivially_move_assignable (still unimplemented)\n+\n+  /// is_trivially_destructible\n+  template<typename _Tp>\n+    struct is_trivially_destructible\n+    : public __and_<is_destructible<_Tp>, integral_constant<bool,\n+\t\t\t      __has_trivial_destructor(_Tp)>>::type\n+    { };\n+\n+  /// has_trivial_default_constructor (temporary legacy)\n   template<typename _Tp>\n     struct has_trivial_default_constructor\n     : public integral_constant<bool, __has_trivial_constructor(_Tp)>\n     { };\n \n-  /// has_trivial_copy_constructor\n+  /// has_trivial_copy_constructor (temporary legacy)\n   template<typename _Tp>\n     struct has_trivial_copy_constructor\n     : public integral_constant<bool, __has_trivial_copy(_Tp)>\n     { };\n \n-  /// has_trivial_copy_assign\n+  /// has_trivial_copy_assign (temporary legacy)\n   template<typename _Tp>\n     struct has_trivial_copy_assign\n     : public integral_constant<bool, __has_trivial_assign(_Tp)>\n     { };\n \n-  /// has_trivial_destructor\n-  template<typename _Tp>\n-    struct has_trivial_destructor\n-    : public integral_constant<bool, __has_trivial_destructor(_Tp)>\n-    { };\n-\n   /// has_virtual_destructor\n   template<typename _Tp>\n     struct has_virtual_destructor"}, {"sha": "9715419c092d3efb1b6f9896c8149999d4f10702", "filename": "libstdc++-v3/testsuite/20_util/declval/requirements/1_neg.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a9ecd34929f6c90d1660cc3c60672afdbf8fb9a/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fdeclval%2Frequirements%2F1_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a9ecd34929f6c90d1660cc3c60672afdbf8fb9a/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fdeclval%2Frequirements%2F1_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fdeclval%2Frequirements%2F1_neg.cc?ref=6a9ecd34929f6c90d1660cc3c60672afdbf8fb9a", "patch": "@@ -2,7 +2,7 @@\n // { dg-do compile }\n // 2009-11-12  Paolo Carlini  <paolo.carlini@oracle.com>\n //\n-// Copyright (C) 2009, 2010, 2011 Free Software Foundation, Inc.\n+// Copyright (C) 2009, 2010, 2011, 2012 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -19,7 +19,7 @@\n // with this library; see the file COPYING3.  If not see\n // <http://www.gnu.org/licenses/>.\n \n-// { dg-error \"static assertion failed\" \"\" { target *-*-* } 1777 }\n+// { dg-error \"static assertion failed\" \"\" { target *-*-* } 1792 }\n \n #include <utility>\n "}, {"sha": "c6ab0b2c54e93592616419320e2892a7dd81a5fc", "filename": "libstdc++-v3/testsuite/20_util/is_trivially_destructible/requirements/explicit_instantiation.cc", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a9ecd34929f6c90d1660cc3c60672afdbf8fb9a/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fis_trivially_destructible%2Frequirements%2Fexplicit_instantiation.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a9ecd34929f6c90d1660cc3c60672afdbf8fb9a/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fis_trivially_destructible%2Frequirements%2Fexplicit_instantiation.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fis_trivially_destructible%2Frequirements%2Fexplicit_instantiation.cc?ref=6a9ecd34929f6c90d1660cc3c60672afdbf8fb9a", "patch": "@@ -0,0 +1,31 @@\n+// { dg-options \"-std=gnu++11\" }\n+// { dg-do compile }\n+//\n+// 2012-04-15  Paolo Carlini  <paolo.carlini@oracle.com>\n+//\n+// Copyright (C) 2012 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// NB: This file is for testing type_traits with NO OTHER INCLUDES.\n+\n+#include <type_traits>\n+\n+namespace std\n+{\n+  typedef short test_type;\n+  template struct is_trivially_destructible<test_type>;\n+}"}, {"sha": "66b3f7bd920c8b045555407f692058a95106c1fc", "filename": "libstdc++-v3/testsuite/20_util/is_trivially_destructible/requirements/typedefs.cc", "status": "added", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a9ecd34929f6c90d1660cc3c60672afdbf8fb9a/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fis_trivially_destructible%2Frequirements%2Ftypedefs.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a9ecd34929f6c90d1660cc3c60672afdbf8fb9a/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fis_trivially_destructible%2Frequirements%2Ftypedefs.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fis_trivially_destructible%2Frequirements%2Ftypedefs.cc?ref=6a9ecd34929f6c90d1660cc3c60672afdbf8fb9a", "patch": "@@ -0,0 +1,37 @@\n+// { dg-options \"-std=gnu++11\" }\n+//\n+// 2012-04-15  Paolo Carlini  <paolo.carlini@oracle.com>\n+//\n+// Copyright (C) 2012 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+//\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+//\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// \n+// NB: This file is for testing type_traits with NO OTHER INCLUDES.\n+\n+#include <type_traits>\n+\n+// { dg-do compile }\n+\n+void test01()\n+{\n+  // Check for required typedefs\n+  typedef std::is_trivially_destructible<int> test_type;\n+  typedef test_type::value_type               value_type;\n+  typedef test_type::type                     type;\n+  typedef test_type::type::value_type         type_value_type;\n+  typedef test_type::type::type               type_type;\n+}"}, {"sha": "cfba8aeba9ee3ee674b1bcfa477e67436cef757d", "filename": "libstdc++-v3/testsuite/20_util/is_trivially_destructible/value.cc", "status": "added", "additions": 44, "deletions": 0, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a9ecd34929f6c90d1660cc3c60672afdbf8fb9a/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fis_trivially_destructible%2Fvalue.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a9ecd34929f6c90d1660cc3c60672afdbf8fb9a/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fis_trivially_destructible%2Fvalue.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fis_trivially_destructible%2Fvalue.cc?ref=6a9ecd34929f6c90d1660cc3c60672afdbf8fb9a", "patch": "@@ -0,0 +1,44 @@\n+// { dg-options \"-std=gnu++11\" }\n+//\n+// 2012-04-15  Paolo Carlini  <paolo.carlini@oracle.com>\n+//\n+// Copyright (C) 2012 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+//\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+//\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+#include <type_traits>\n+#include <testsuite_hooks.h>\n+#include <testsuite_tr1.h>\n+\n+void test01()\n+{\n+  bool test __attribute__((unused)) = true;\n+  using std::is_trivially_destructible;\n+  using namespace __gnu_test;\n+\n+  VERIFY( (test_category<is_trivially_destructible, int>(true)) );\n+  VERIFY( (test_category<is_trivially_destructible, TType>(true)) );\n+  VERIFY( (test_category<is_trivially_destructible, PODType>(true)) );\n+\n+  VERIFY( (test_category<is_trivially_destructible, NType>(false)) );\n+  VERIFY( (test_category<is_trivially_destructible, SLType>(false)) );\n+}\n+\n+int main()\n+{\n+  test01();\n+  return 0;\n+}"}, {"sha": "80739a3e45269a6e94f89c27ed205fc0c10c515f", "filename": "libstdc++-v3/testsuite/20_util/make_signed/requirements/typedefs_neg.cc", "status": "modified", "additions": 9, "deletions": 8, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a9ecd34929f6c90d1660cc3c60672afdbf8fb9a/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fmake_signed%2Frequirements%2Ftypedefs_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a9ecd34929f6c90d1660cc3c60672afdbf8fb9a/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fmake_signed%2Frequirements%2Ftypedefs_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fmake_signed%2Frequirements%2Ftypedefs_neg.cc?ref=6a9ecd34929f6c90d1660cc3c60672afdbf8fb9a", "patch": "@@ -3,7 +3,8 @@\n \n // 2007-05-03  Benjamin Kosnik  <bkoz@redhat.com>\n //\n-// Copyright (C) 2007, 2008, 2009, 2010, 2011 Free Software Foundation, Inc.\n+// Copyright (C) 2007, 2008, 2009, 2010, 2011, 2012\n+// Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -42,11 +43,11 @@ void test01()\n   typedef make_signed<float>::type  \ttest5_type;\n }\n \n-// { dg-error \"does not name a type\" \"\" { target *-*-* } 33 }\n-// { dg-error \"required from here\" \"\" { target *-*-* } 35 }\n-// { dg-error \"required from here\" \"\" { target *-*-* } 37 }\n-// { dg-error \"required from here\" \"\" { target *-*-* } 40 }\n-// { dg-error \"required from here\" \"\" { target *-*-* } 42 }\n+// { dg-error \"does not name a type\" \"\" { target *-*-* } 34 }\n+// { dg-error \"required from here\" \"\" { target *-*-* } 36 }\n+// { dg-error \"required from here\" \"\" { target *-*-* } 38 }\n+// { dg-error \"required from here\" \"\" { target *-*-* } 41 }\n+// { dg-error \"required from here\" \"\" { target *-*-* } 43 }\n \n-// { dg-error \"invalid use of incomplete type\" \"\" { target *-*-* } 1566 }\n-// { dg-error \"declaration of\" \"\" { target *-*-* } 1530 }\n+// { dg-error \"invalid use of incomplete type\" \"\" { target *-*-* } 1581 }\n+// { dg-error \"declaration of\" \"\" { target *-*-* } 1545 }"}, {"sha": "124693d433cdd20a312ce33a8ec2f8e77ed07618", "filename": "libstdc++-v3/testsuite/20_util/make_unsigned/requirements/typedefs_neg.cc", "status": "modified", "additions": 9, "deletions": 8, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a9ecd34929f6c90d1660cc3c60672afdbf8fb9a/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fmake_unsigned%2Frequirements%2Ftypedefs_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a9ecd34929f6c90d1660cc3c60672afdbf8fb9a/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fmake_unsigned%2Frequirements%2Ftypedefs_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fmake_unsigned%2Frequirements%2Ftypedefs_neg.cc?ref=6a9ecd34929f6c90d1660cc3c60672afdbf8fb9a", "patch": "@@ -3,7 +3,8 @@\n \n // 2007-05-03  Benjamin Kosnik  <bkoz@redhat.com>\n //\n-// Copyright (C) 2007, 2008, 2009, 2010, 2011 Free Software Foundation, Inc.\n+// Copyright (C) 2007, 2008, 2009, 2010, 2011, 2012\n+// Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -42,11 +43,11 @@ void test01()\n   typedef make_unsigned<float>::type  \t\ttest5_type;\n }\n \n-// { dg-error \"does not name a type\" \"\" { target *-*-* } 33 }\n-// { dg-error \"required from here\" \"\" { target *-*-* } 35 }\n-// { dg-error \"required from here\" \"\" { target *-*-* } 37 }\n-// { dg-error \"required from here\" \"\" { target *-*-* } 40 }\n-// { dg-error \"required from here\" \"\" { target *-*-* } 42 }\n+// { dg-error \"does not name a type\" \"\" { target *-*-* } 34 }\n+// { dg-error \"required from here\" \"\" { target *-*-* } 36 }\n+// { dg-error \"required from here\" \"\" { target *-*-* } 38 }\n+// { dg-error \"required from here\" \"\" { target *-*-* } 41 }\n+// { dg-error \"required from here\" \"\" { target *-*-* } 43 }\n \n-// { dg-error \"invalid use of incomplete type\" \"\" { target *-*-* } 1484 }\n-// { dg-error \"declaration of\" \"\" { target *-*-* } 1448 }\n+// { dg-error \"invalid use of incomplete type\" \"\" { target *-*-* } 1499 }\n+// { dg-error \"declaration of\" \"\" { target *-*-* } 1463 }"}, {"sha": "e7d6626becd9d0b55e6e5737451a4dff596b7293", "filename": "libstdc++-v3/testsuite/20_util/pair/requirements/dr801.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a9ecd34929f6c90d1660cc3c60672afdbf8fb9a/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fpair%2Frequirements%2Fdr801.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a9ecd34929f6c90d1660cc3c60672afdbf8fb9a/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fpair%2Frequirements%2Fdr801.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fpair%2Frequirements%2Fdr801.cc?ref=6a9ecd34929f6c90d1660cc3c60672afdbf8fb9a", "patch": "@@ -1,7 +1,7 @@\n // { dg-do compile }\n // { dg-options \"-std=gnu++0x\" }\n \n-// Copyright (C) 2010 Free Software Foundation, Inc.\n+// Copyright (C) 2010, 2012 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -29,7 +29,7 @@ void test_trivial()\n   // static_assert(std::is_literal_type<pair_type>::value, \"! literal\");\n   static_assert(std::has_trivial_copy_constructor<pair_type>::value,\n \t\t\"! triv copy\");\n-  static_assert(std::has_trivial_destructor<pair_type>::value,\n+  static_assert(std::is_trivially_destructible<pair_type>::value,\n \t\t\"! triv destructor\");\n   // static_assert(std::is_standard_layout<pair_type>::value,\n   //               \"! standard layout\");"}, {"sha": "879bfd126bb395a08df72741cec7cd181b545c07", "filename": "libstdc++-v3/testsuite/20_util/tuple/requirements/dr801.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a9ecd34929f6c90d1660cc3c60672afdbf8fb9a/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ftuple%2Frequirements%2Fdr801.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a9ecd34929f6c90d1660cc3c60672afdbf8fb9a/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ftuple%2Frequirements%2Fdr801.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ftuple%2Frequirements%2Fdr801.cc?ref=6a9ecd34929f6c90d1660cc3c60672afdbf8fb9a", "patch": "@@ -29,7 +29,7 @@ void test_trivial()\n   // static_assert(std::is_literal_type<tuple_type>::value, \"! literal\");\n   static_assert(std::has_trivial_copy_constructor<tuple_type>::value,\n \t\t\"! triv copy\");\n-  static_assert(std::has_trivial_destructor<tuple_type>::value,\n+  static_assert(std::is_trivially_destructible<tuple_type>::value,\n \t\t\"! triv destructor\");\n   // static_assert(std::is_standard_layout<tuple_type>::value,\n   //\t\t   \"! standard layout\");"}, {"sha": "c9be94d8f21ba722746c26893729cec7ca61e55b", "filename": "libstdc++-v3/testsuite/util/testsuite_common_types.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a9ecd34929f6c90d1660cc3c60672afdbf8fb9a/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Ftestsuite_common_types.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a9ecd34929f6c90d1660cc3c60672afdbf8fb9a/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Ftestsuite_common_types.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Ftestsuite_common_types.h?ref=6a9ecd34929f6c90d1660cc3c60672afdbf8fb9a", "patch": "@@ -549,7 +549,7 @@ namespace __gnu_test\n \t    typedef std::has_trivial_default_constructor<_Tp> ctor_p;\n \t    static_assert(ctor_p::value, \"default constructor not trivial\");\n \n-\t    typedef std::has_trivial_destructor<_Tp> dtor_p;\n+\t    typedef std::is_trivially_destructible<_Tp> dtor_p;\n \t    static_assert(dtor_p::value, \"destructor not trivial\");\n \t  }\n \t};"}]}