{"sha": "5cc90635da0173defc0f186265a68913ca5f21b0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWNjOTA2MzVkYTAxNzNkZWZjMGYxODYyNjVhNjg5MTNjYTVmMjFiMA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2002-03-15T09:54:42Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2002-03-15T09:54:42Z"}, "message": "toplev.c (wrapup_global_declarations): Clarify variable handling.\n\n        * toplev.c (wrapup_global_declarations): Clarify variable handling.\n        -fkeep-static-consts doesn't apply to comdats.\n\ncp/\n        * decl.c (make_rtl_for_nonlocal_decl): Also defer COMDAT\n        variables.\n        * decl2.c (maybe_make_one_only): Also mark the decl as needed.\n\nFrom-SVN: r50802", "tree": {"sha": "de143ae82ad2ce9277bf578207642918da268945", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/de143ae82ad2ce9277bf578207642918da268945"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5cc90635da0173defc0f186265a68913ca5f21b0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5cc90635da0173defc0f186265a68913ca5f21b0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5cc90635da0173defc0f186265a68913ca5f21b0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5cc90635da0173defc0f186265a68913ca5f21b0/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "0f9b56dcb2d761010137a566c2af9bf98d8f14eb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0f9b56dcb2d761010137a566c2af9bf98d8f14eb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0f9b56dcb2d761010137a566c2af9bf98d8f14eb"}], "stats": {"total": 92, "additions": 68, "deletions": 24}, "files": [{"sha": "dfe2c0a2b7e3e67deb4b9b7a66b0773e0edc5a2f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5cc90635da0173defc0f186265a68913ca5f21b0/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5cc90635da0173defc0f186265a68913ca5f21b0/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5cc90635da0173defc0f186265a68913ca5f21b0", "patch": "@@ -1,3 +1,8 @@\n+2002-03-15  Jason Merrill  <jason@redhat.com>\n+\n+\t* toplev.c (wrapup_global_declarations): Clarify variable handling.\n+\t-fkeep-static-consts doesn't apply to comdats.\n+\n 2002-03-14  Richard Henderson  <rth@redhat.com>\n \n \t* c-decl.c: Include c-pragma.h."}, {"sha": "4608f11e8e9744ee7d35bbf54f7f95e9b5921f0d", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5cc90635da0173defc0f186265a68913ca5f21b0/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5cc90635da0173defc0f186265a68913ca5f21b0/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=5cc90635da0173defc0f186265a68913ca5f21b0", "patch": "@@ -1,3 +1,9 @@\n+2002-03-15  Jason Merrill  <jason@redhat.com>\n+\n+\t* decl.c (make_rtl_for_nonlocal_decl): Also defer COMDAT\n+\tvariables.\n+\t* decl2.c (maybe_make_one_only): Also mark the decl as needed.\n+\n 2002-03-14  Richard Henderson  <rth@redhat.com>\n \n \t* decl.c: Include c-pragma.h."}, {"sha": "758524b7c75471c6c919510973e8541f1f5cf81d", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 16, "deletions": 13, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5cc90635da0173defc0f186265a68913ca5f21b0/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5cc90635da0173defc0f186265a68913ca5f21b0/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=5cc90635da0173defc0f186265a68913ca5f21b0", "patch": "@@ -7861,18 +7861,21 @@ make_rtl_for_nonlocal_decl (decl, init, asmspec)\n      DECL_STMT is expanded.  */\n   defer_p = DECL_FUNCTION_SCOPE_P (decl) || DECL_VIRTUAL_P (decl);\n \n-  /* We try to defer namespace-scope static constants so that they are\n-     not emitted into the object file unnecessarily.  */\n-  if (!DECL_VIRTUAL_P (decl)\n-      && TREE_READONLY (decl)\n-      && DECL_INITIAL (decl) != NULL_TREE\n-      && DECL_INITIAL (decl) != error_mark_node\n-      && ! EMPTY_CONSTRUCTOR_P (DECL_INITIAL (decl))\n-      && toplev\n-      && !TREE_PUBLIC (decl))\n-    {\n-      /* Fool with the linkage according to #pragma interface.  */\n-      if (!interface_unknown)\n+  /* We try to defer namespace-scope static constants and template\n+     instantiations so that they are not emitted into the object file\n+     unnecessarily.  */\n+  if ((!DECL_VIRTUAL_P (decl)\n+       && TREE_READONLY (decl)\n+       && DECL_INITIAL (decl) != NULL_TREE\n+       && DECL_INITIAL (decl) != error_mark_node\n+       && ! EMPTY_CONSTRUCTOR_P (DECL_INITIAL (decl))\n+       && toplev\n+       && !TREE_PUBLIC (decl))\n+      || DECL_COMDAT (decl))\n+    {\n+      /* Fool with the linkage of static consts according to #pragma\n+\t interface.  */\n+      if (!interface_unknown && !TREE_PUBLIC (decl))\n \t{\n \t  TREE_PUBLIC (decl) = 1;\n \t  DECL_EXTERNAL (decl) = interface_only;\n@@ -8068,7 +8071,7 @@ cp_finish_decl (decl, init, asmspec_tree, flags)\n \n   /* If a name was specified, get the string.  */\n   if (asmspec_tree)\n-      asmspec = TREE_STRING_POINTER (asmspec_tree);\n+    asmspec = TREE_STRING_POINTER (asmspec_tree);\n \n   if (init && TREE_CODE (init) == NAMESPACE_DECL)\n     {"}, {"sha": "5246a7f019aea8212274199cdc0ef8375a8edf1c", "filename": "gcc/cp/decl2.c", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5cc90635da0173defc0f186265a68913ca5f21b0/gcc%2Fcp%2Fdecl2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5cc90635da0173defc0f186265a68913ca5f21b0/gcc%2Fcp%2Fdecl2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl2.c?ref=5cc90635da0173defc0f186265a68913ca5f21b0", "patch": "@@ -2210,8 +2210,12 @@ maybe_make_one_only (decl)\n \n   make_decl_one_only (decl);\n \n-  if (TREE_CODE (decl) == VAR_DECL && DECL_LANG_SPECIFIC (decl))\n-    DECL_COMDAT (decl) = 1;\n+  if (TREE_CODE (decl) == VAR_DECL)\n+    {\n+      DECL_COMDAT (decl) = 1;\n+      /* Mark it needed so we don't forget to emit it.  */\n+      TREE_SYMBOL_REFERENCED (DECL_ASSEMBLER_NAME (decl)) = 1;\n+    }\n }\n \n /* Returns the virtual function with which the vtable for TYPE is"}, {"sha": "928d652b83652b713433aba851f563d56a1fea00", "filename": "gcc/testsuite/g++.dg/abi/vague1.C", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5cc90635da0173defc0f186265a68913ca5f21b0/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fvague1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5cc90635da0173defc0f186265a68913ca5f21b0/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fvague1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fvague1.C?ref=5cc90635da0173defc0f186265a68913ca5f21b0", "patch": "@@ -0,0 +1,18 @@\n+// Test that we don't emit unneeded copies of static data member template\n+// instantiations.\n+\n+// Disable debug info so we don't get confused by the symbol name there.\n+// { dg-options \"-g0\" }\n+// { dg-final { scan-assembler-not \"_ZN1AIiE1tE\" } }\n+\n+template <class T> struct A {\n+  static const T t = 0;\n+};\n+\n+template <class T> const T A<T>::t;\n+\n+int i;\n+int main ()\n+{\n+  i = A<int>::t;\t\t// Should just use the value\n+}"}, {"sha": "5ea36ae182c49c19264ed2f4b44622ff3bcea491", "filename": "gcc/toplev.c", "status": "modified", "additions": 17, "deletions": 9, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5cc90635da0173defc0f186265a68913ca5f21b0/gcc%2Ftoplev.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5cc90635da0173defc0f186265a68913ca5f21b0/gcc%2Ftoplev.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftoplev.c?ref=5cc90635da0173defc0f186265a68913ca5f21b0", "patch": "@@ -1935,16 +1935,24 @@ wrapup_global_declarations (vec, len)\n \t     to force a constant to be written if and only if it is\n \t     defined in a main file, as opposed to an include file.  */\n \n-\t  if (TREE_CODE (decl) == VAR_DECL && TREE_STATIC (decl)\n-\t      && (((! TREE_READONLY (decl) || TREE_PUBLIC (decl))\n-\t\t   && !DECL_COMDAT (decl))\n-\t\t  || (!optimize\n-\t\t      && flag_keep_static_consts\n-\t\t      && !DECL_ARTIFICIAL (decl))\n-\t\t  || TREE_SYMBOL_REFERENCED (DECL_ASSEMBLER_NAME (decl))))\n+\t  if (TREE_CODE (decl) == VAR_DECL && TREE_STATIC (decl))\n \t    {\n-\t      reconsider = 1;\n-\t      rest_of_decl_compilation (decl, NULL, 1, 1);\n+\t      bool needed = 1;\n+\n+\t      if (TREE_SYMBOL_REFERENCED (DECL_ASSEMBLER_NAME (decl)))\n+\t\t/* needed */;\n+\t      else if (DECL_COMDAT (decl))\n+\t\tneeded = 0;\n+\t      else if (TREE_READONLY (decl) && !TREE_PUBLIC (decl)\n+\t\t       && (optimize || !flag_keep_static_consts\n+\t\t\t   || DECL_ARTIFICIAL (decl)))\n+\t\tneeded = 0;\n+\n+\t      if (needed)\n+\t\t{\n+\t\t  reconsider = 1;\n+\t\t  rest_of_decl_compilation (decl, NULL, 1, 1);\n+\t\t}\n \t    }\n \n \t  if (TREE_CODE (decl) == FUNCTION_DECL"}]}