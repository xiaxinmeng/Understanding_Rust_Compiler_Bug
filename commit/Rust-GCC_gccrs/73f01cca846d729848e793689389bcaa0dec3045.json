{"sha": "73f01cca846d729848e793689389bcaa0dec3045", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzNmMDFjY2E4NDZkNzI5ODQ4ZTc5MzY4OTM4OWJjYWEwZGVjMzA0NQ==", "commit": {"author": {"name": "Joseph Myers", "email": "joseph@codesourcery.com", "date": "2016-10-10T22:43:07Z"}, "committer": {"name": "Joseph Myers", "email": "jsm28@gcc.gnu.org", "date": "2016-10-10T22:43:07Z"}, "message": "Always support float128 on ia64 (PR target/77586).\n\nBug 77586, and previously\n<https://gcc.gnu.org/ml/gcc-bugs/2016-08/msg03233.html>, reports\nia64-elf failing to build because of float128_type_node being NULL,\nbut being used by the back end for __float128.\n\nThe global float128_type_node is only available conditionally, if\ntarget hooks indicate TFmode is not only available as a scalar mode\nand of the right format, but also supported in libgcc.  The back-end\nsupport, however, expects the type always to be available for\n__float128 even if the libgcc support is missing.\n\nAlthough a target-specific node could be restored in the case where\nlibgcc support is missing, it seems better to address the missing\nlibgcc support.  Thus, this patch enables TFmode soft-fp in libgcc\nglobally for all ia64 targets.  Support for XFmode in libgcc (that is,\nfor libgcc2.c XFmode functions, not soft-fp) is also enabled for all\nia64 targets so that ia64 no longer needs to define the\nTARGET_LIBGCC_FLOATING_MODE_SUPPORTED_P hook.\n\nI've confirmed that ia64-elf builds cc1 with this patch and it passes\n-fself-test.  I have not otherwise tested the patch.  It's plausible\nthat ia64-elf and ia64-freebsd might work as-is, but ia64-vms probably\nneeds further changes, by someone familiar with VMS shared libraries,\nto implement an equivalent of ia64/t-softfp-compat in that case\n(avoiding conflicts between __divtf3 from soft-fp and the old alias\nfor __divxf3).\n\n\tPR target/77586\ngcc:\n\t* config/ia64/ia64.c (ia64_libgcc_floating_mode_supported_p)\n\t(TARGET_LIBGCC_FLOATING_MODE_SUPPORTED_P): Remove.\n\t* config/ia64/elf.h (IA64_NO_LIBGCC_TFMODE): Likewise.\n\t* config/ia64/freebsd.h (IA64_NO_LIBGCC_TFMODE): Likewise.\n\t* config/ia64/vms.h (IA64_NO_LIBGCC_XFMODE)\n\t(IA64_NO_LIBGCC_TFMODE): Likewise.\n\nlibgcc:\n\t* config.host (ia64*-*-elf*, ia64*-*-freebsd*, ia64-hp-*vms*): Use\n\tsoft-fp.\n\nFrom-SVN: r240955", "tree": {"sha": "c2ac20ede4b0b4f19a93c27ebbb6b9a09a521aaf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c2ac20ede4b0b4f19a93c27ebbb6b9a09a521aaf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/73f01cca846d729848e793689389bcaa0dec3045", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/73f01cca846d729848e793689389bcaa0dec3045", "html_url": "https://github.com/Rust-GCC/gccrs/commit/73f01cca846d729848e793689389bcaa0dec3045", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/73f01cca846d729848e793689389bcaa0dec3045/comments", "author": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6e34164900cd5d3df327b0d062a8fb395f1a1bef", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6e34164900cd5d3df327b0d062a8fb395f1a1bef", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6e34164900cd5d3df327b0d062a8fb395f1a1bef"}], "stats": {"total": 64, "additions": 19, "deletions": 45}, "files": [{"sha": "99e33a0c5851ab825384cee3479b1e535106dbbc", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73f01cca846d729848e793689389bcaa0dec3045/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73f01cca846d729848e793689389bcaa0dec3045/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=73f01cca846d729848e793689389bcaa0dec3045", "patch": "@@ -1,3 +1,13 @@\n+2016-10-10  Joseph Myers  <joseph@codesourcery.com>\n+\n+\tPR target/77586\n+\t* config/ia64/ia64.c (ia64_libgcc_floating_mode_supported_p)\n+\t(TARGET_LIBGCC_FLOATING_MODE_SUPPORTED_P): Remove.\n+\t* config/ia64/elf.h (IA64_NO_LIBGCC_TFMODE): Likewise.\n+\t* config/ia64/freebsd.h (IA64_NO_LIBGCC_TFMODE): Likewise.\n+\t* config/ia64/vms.h (IA64_NO_LIBGCC_XFMODE)\n+\t(IA64_NO_LIBGCC_TFMODE): Likewise.\n+\n 2016-10-11  Kugan Vivekanandarajah  <kuganv@linaro.org>\n \n \t* tree-vrp.c (vrp_intersect_ranges_1): Allocate bitmap before"}, {"sha": "633b5c938010fb6eeb89bdcbebe904640f838573", "filename": "gcc/config/ia64/elf.h", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73f01cca846d729848e793689389bcaa0dec3045/gcc%2Fconfig%2Fia64%2Felf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73f01cca846d729848e793689389bcaa0dec3045/gcc%2Fconfig%2Fia64%2Felf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fia64%2Felf.h?ref=73f01cca846d729848e793689389bcaa0dec3045", "patch": "@@ -65,6 +65,4 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n \t\t\t  %{pg:gcrt0.o%s}%{!pg:%{p:mcrt0.o%s}%{!p:crt0.o%s}}}}\\\n \t\t\tcrti.o%s crtbegin.o%s\"\n \n-#define IA64_NO_LIBGCC_TFMODE\n-\n /* End of elf.h */"}, {"sha": "5d6784bed9f3fe95dde5087bfd59e37537834f24", "filename": "gcc/config/ia64/freebsd.h", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73f01cca846d729848e793689389bcaa0dec3045/gcc%2Fconfig%2Fia64%2Ffreebsd.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73f01cca846d729848e793689389bcaa0dec3045/gcc%2Fconfig%2Fia64%2Ffreebsd.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fia64%2Ffreebsd.h?ref=73f01cca846d729848e793689389bcaa0dec3045", "patch": "@@ -50,5 +50,3 @@ along with GCC; see the file COPYING3.  If not see\n #define TARGET_ELF\t\t1\n \n #define JMP_BUF_SIZE  76\n-\n-#define IA64_NO_LIBGCC_TFMODE"}, {"sha": "797b1b0830de1d3bae403742bb55a09989f649a6", "filename": "gcc/config/ia64/ia64.c", "status": "modified", "additions": 0, "deletions": 35, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73f01cca846d729848e793689389bcaa0dec3045/gcc%2Fconfig%2Fia64%2Fia64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73f01cca846d729848e793689389bcaa0dec3045/gcc%2Fconfig%2Fia64%2Fia64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fia64%2Fia64.c?ref=73f01cca846d729848e793689389bcaa0dec3045", "patch": "@@ -311,7 +311,6 @@ static rtx ia64_struct_value_rtx (tree, int);\n static tree ia64_gimplify_va_arg (tree, tree, gimple_seq *, gimple_seq *);\n static bool ia64_scalar_mode_supported_p (machine_mode mode);\n static bool ia64_vector_mode_supported_p (machine_mode mode);\n-static bool ia64_libgcc_floating_mode_supported_p (machine_mode mode);\n static bool ia64_legitimate_constant_p (machine_mode, rtx);\n static bool ia64_legitimate_address_p (machine_mode, rtx, bool);\n static bool ia64_cannot_force_const_mem (machine_mode, rtx);\n@@ -595,10 +594,6 @@ static const struct attribute_spec ia64_attribute_table[] =\n #undef TARGET_VECTOR_MODE_SUPPORTED_P\n #define TARGET_VECTOR_MODE_SUPPORTED_P ia64_vector_mode_supported_p\n \n-#undef TARGET_LIBGCC_FLOATING_MODE_SUPPORTED_P\n-#define TARGET_LIBGCC_FLOATING_MODE_SUPPORTED_P \\\n-  ia64_libgcc_floating_mode_supported_p\n-\n #undef TARGET_LEGITIMATE_CONSTANT_P\n #define TARGET_LEGITIMATE_CONSTANT_P ia64_legitimate_constant_p\n #undef TARGET_LEGITIMATE_ADDRESS_P\n@@ -11008,36 +11003,6 @@ ia64_vector_mode_supported_p (machine_mode mode)\n     }\n }\n \n-/* Implement TARGET_LIBGCC_FLOATING_MODE_SUPPORTED_P.  */\n-\n-static bool\n-ia64_libgcc_floating_mode_supported_p (machine_mode mode)\n-{\n-  switch (mode)\n-    {\n-    case SFmode:\n-    case DFmode:\n-      return true;\n-\n-    case XFmode:\n-#ifdef IA64_NO_LIBGCC_XFMODE\n-      return false;\n-#else\n-      return true;\n-#endif\n-\n-    case TFmode:\n-#ifdef IA64_NO_LIBGCC_TFMODE\n-      return false;\n-#else\n-      return true;\n-#endif\n-\n-    default:\n-      return false;\n-    }\n-}\n-\n /* Implement the FUNCTION_PROFILER macro.  */\n \n void"}, {"sha": "21d36a5110ad2b523f4cb9f8b46e2c7c4595be11", "filename": "gcc/config/ia64/vms.h", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73f01cca846d729848e793689389bcaa0dec3045/gcc%2Fconfig%2Fia64%2Fvms.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73f01cca846d729848e793689389bcaa0dec3045/gcc%2Fconfig%2Fia64%2Fvms.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fia64%2Fvms.h?ref=73f01cca846d729848e793689389bcaa0dec3045", "patch": "@@ -154,6 +154,3 @@ STATIC func_ptr __CTOR_LIST__[1]                                             \\\n /* Default values for _CRTL_VER and _VMS_VER.  */\n #define VMS_DEFAULT_CRTL_VER 80300000\n #define VMS_DEFAULT_VMS_VER 80300000\n-\n-#define IA64_NO_LIBGCC_XFMODE\n-#define IA64_NO_LIBGCC_TFMODE"}, {"sha": "d9949a1b72558d9bfbe5063dc35e9117a8a3f11e", "filename": "libgcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73f01cca846d729848e793689389bcaa0dec3045/libgcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73f01cca846d729848e793689389bcaa0dec3045/libgcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2FChangeLog?ref=73f01cca846d729848e793689389bcaa0dec3045", "patch": "@@ -1,3 +1,9 @@\n+2016-10-10  Joseph Myers  <joseph@codesourcery.com>\n+\n+\tPR target/77586\n+\t* config.host (ia64*-*-elf*, ia64*-*-freebsd*, ia64-hp-*vms*): Use\n+\tsoft-fp.\n+\n 2016-10-10  Andreas Tobler  <andreast@gcc.gnu.org>\n \n \t* config.host: Add support for aarch64-*-freebsd*."}, {"sha": "ab61d634209740f4cd5185837d36f45eabdfd56f", "filename": "libgcc/config.host", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73f01cca846d729848e793689389bcaa0dec3045/libgcc%2Fconfig.host", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73f01cca846d729848e793689389bcaa0dec3045/libgcc%2Fconfig.host", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig.host?ref=73f01cca846d729848e793689389bcaa0dec3045", "patch": "@@ -751,11 +751,11 @@ x86_64-*-mingw*)\n \t;;\n ia64*-*-elf*)\n \textra_parts=\"$extra_parts crtbeginS.o crtendS.o crtfastmath.o\"\n-\ttmake_file=\"ia64/t-ia64 ia64/t-ia64-elf ia64/t-eh-ia64 t-crtfm\"\n+\ttmake_file=\"ia64/t-ia64 ia64/t-ia64-elf ia64/t-eh-ia64 t-crtfm t-softfp-tf ia64/t-softfp t-softfp ia64/t-softfp-compat\"\n \t;;\n ia64*-*-freebsd*)\n \textra_parts=\"$extra_parts crtfastmath.o\"\n-\ttmake_file=\"$tmake_file ia64/t-ia64 ia64/t-ia64-elf ia64/t-eh-ia64 t-crtfm\"\n+\ttmake_file=\"$tmake_file ia64/t-ia64 ia64/t-ia64-elf ia64/t-eh-ia64 t-crtfm t-softfp-tf ia64/t-softfp t-softfp ia64/t-softfp-compat\"\n \t;;\n ia64*-*-linux*)\n \t# Don't use crtbeginT.o from *-*-linux* default.\n@@ -770,7 +770,7 @@ ia64*-*-hpux*)\n \ttmake_file=\"ia64/t-ia64 ia64/t-ia64-elf ia64/t-hpux t-slibgcc ia64/t-slibgcc-hpux t-slibgcc-hpux\"\n \t;;\n ia64-hp-*vms*)\n-\ttmake_file=\"$tmake_file ia64/t-ia64 ia64/t-eh-ia64 ia64/t-vms t-slibgcc-vms\"\n+\ttmake_file=\"$tmake_file ia64/t-ia64 ia64/t-eh-ia64 ia64/t-vms t-slibgcc-vms t-softfp-tf ia64/t-softfp t-softfp\"\n \textra_parts=\"$extra_parts crtinitS.o\"\n \tmd_unwind_header=ia64/vms-unwind.h\n \t;;"}]}