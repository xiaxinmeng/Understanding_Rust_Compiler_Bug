{"sha": "b5242b284549cc7994a8dc073f9e1479ee0ae915", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjUyNDJiMjg0NTQ5Y2M3OTk0YThkYzA3M2Y5ZTE0NzllZTBhZTkxNQ==", "commit": {"author": {"name": "Patrick Palka", "email": "ppalka@redhat.com", "date": "2021-04-08T20:45:27Z"}, "committer": {"name": "Patrick Palka", "email": "ppalka@redhat.com", "date": "2021-04-08T20:45:27Z"}, "message": "libstdc++: Fix split_view::_OuterIter::operator++ [LWG 3505]\n\nlibstdc++-v3/ChangeLog:\n\n\t* include/std/ranges (__detail::find): Define.\n\t(split_view::_OuterIter::operator++): Apply proposed resolution\n\tof LWG 3505.\n\t* testsuite/std/ranges/adaptors/split.cc (test10): New test.", "tree": {"sha": "d0075049c6d63833143b7f1d5d5acf7900177ad9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d0075049c6d63833143b7f1d5d5acf7900177ad9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b5242b284549cc7994a8dc073f9e1479ee0ae915", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b5242b284549cc7994a8dc073f9e1479ee0ae915", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b5242b284549cc7994a8dc073f9e1479ee0ae915", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b5242b284549cc7994a8dc073f9e1479ee0ae915/comments", "author": null, "committer": null, "parents": [{"sha": "c1ce418af29bc1796bfe82a5aa97639eccc30cb7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c1ce418af29bc1796bfe82a5aa97639eccc30cb7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c1ce418af29bc1796bfe82a5aa97639eccc30cb7"}], "stats": {"total": 40, "additions": 36, "deletions": 4}, "files": [{"sha": "baec8c0efefd1deeb00baad51cec2fff9f6b730d", "filename": "libstdc++-v3/include/std/ranges", "status": "modified", "additions": 24, "deletions": 4, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b5242b284549cc7994a8dc073f9e1479ee0ae915/libstdc%2B%2B-v3%2Finclude%2Fstd%2Franges", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b5242b284549cc7994a8dc073f9e1479ee0ae915/libstdc%2B%2B-v3%2Finclude%2Fstd%2Franges", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Franges?ref=b5242b284549cc7994a8dc073f9e1479ee0ae915", "patch": "@@ -982,6 +982,16 @@ namespace views::__adaptor\n   // having to include that entire header.\n   namespace __detail\n   {\n+    template<typename _Iter, typename _Sent, typename _Tp>\n+      constexpr _Iter\n+      find(_Iter __first, _Sent __last, const _Tp& __value)\n+      {\n+\twhile (__first != __last\n+\t       && !(bool)(*__first == __value))\n+\t  ++__first;\n+\treturn __first;\n+      }\n+\n     template<typename _Iter, typename _Sent, typename _Pred>\n       constexpr _Iter\n       find_if(_Iter __first, _Sent __last, _Pred __pred)\n@@ -2656,21 +2666,31 @@ namespace views::__adaptor\n \t  constexpr _OuterIter&\n \t  operator++()\n \t  {\n+\t    // _GLIBCXX_RESOLVE_LIB_DEFECTS\n+\t    // 3505. split_view::outer-iterator::operator++ misspecified\n \t    const auto __end = ranges::end(_M_parent->_M_base);\n \t    if (__current() == __end)\n \t      return *this;\n \t    const auto [__pbegin, __pend] = subrange{_M_parent->_M_pattern};\n \t    if (__pbegin == __pend)\n \t      ++__current();\n+\t    else if constexpr (__detail::__tiny_range<_Pattern>)\n+\t      {\n+\t\t__current() = __detail::find(std::move(__current()), __end,\n+\t\t\t\t\t     *__pbegin);\n+\t\tif (__current() != __end)\n+\t\t  ++__current();\n+\t      }\n \t    else\n \t      do\n \t\t{\n \t\t  auto [__b, __p]\n-\t\t    = __detail::mismatch(std::move(__current()), __end,\n-\t\t\t\t\t __pbegin, __pend);\n-\t\t  __current() = std::move(__b);\n+\t\t    = __detail::mismatch(__current(), __end, __pbegin, __pend);\n \t\t  if (__p == __pend)\n-\t\t    break;\n+\t\t    {\n+\t\t      __current() = __b;\n+\t\t      break;\n+\t\t    }\n \t\t} while (++__current() != __end);\n \t    return *this;\n \t  }"}, {"sha": "9d2cfa8632aa8764605f9b2e9795638428a64cc7", "filename": "libstdc++-v3/testsuite/std/ranges/adaptors/split.cc", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b5242b284549cc7994a8dc073f9e1479ee0ae915/libstdc%2B%2B-v3%2Ftestsuite%2Fstd%2Franges%2Fadaptors%2Fsplit.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b5242b284549cc7994a8dc073f9e1479ee0ae915/libstdc%2B%2B-v3%2Ftestsuite%2Fstd%2Franges%2Fadaptors%2Fsplit.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fstd%2Franges%2Fadaptors%2Fsplit.cc?ref=b5242b284549cc7994a8dc073f9e1479ee0ae915", "patch": "@@ -182,6 +182,17 @@ test09()\n   static_assert(requires { adapt2(s); });\n }\n \n+void\n+test10()\n+{\n+  // LWG 3505\n+  auto to_string = [] (auto r) {\n+    return std::string(r.begin(), ranges::next(r.begin(), r.end()));\n+  };\n+  auto v = \"xxyx\"sv | views::split(\"xy\"sv) | views::transform(to_string);\n+  VERIFY( ranges::equal(v, (std::string_view[]){\"x\", \"x\"}) );\n+}\n+\n int\n main()\n {\n@@ -194,4 +205,5 @@ main()\n   test07();\n   test08();\n   test09();\n+  test10();\n }"}]}