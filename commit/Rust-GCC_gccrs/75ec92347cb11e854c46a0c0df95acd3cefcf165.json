{"sha": "75ec92347cb11e854c46a0c0df95acd3cefcf165", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzVlYzkyMzQ3Y2IxMWU4NTRjNDZhMGMwZGY5NWFjZDNjZWZjZjE2NQ==", "commit": {"author": {"name": "Doug Evans", "email": "dje@gnu.org", "date": "1994-11-17T23:52:38Z"}, "committer": {"name": "Doug Evans", "email": "dje@gnu.org", "date": "1994-11-17T23:52:38Z"}, "message": "Usage change.\n\nUsage change.  Now is top level target description for bare m68k\nboards using coff format.\n\nFrom-SVN: r8495", "tree": {"sha": "d7d7b5e3cfd275527b457f316da0ff899c7730f9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d7d7b5e3cfd275527b457f316da0ff899c7730f9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/75ec92347cb11e854c46a0c0df95acd3cefcf165", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/75ec92347cb11e854c46a0c0df95acd3cefcf165", "html_url": "https://github.com/Rust-GCC/gccrs/commit/75ec92347cb11e854c46a0c0df95acd3cefcf165", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/75ec92347cb11e854c46a0c0df95acd3cefcf165/comments", "author": null, "committer": null, "parents": [{"sha": "29d72c4b69a50992879a0d8c349b76e9ab136d45", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/29d72c4b69a50992879a0d8c349b76e9ab136d45", "html_url": "https://github.com/Rust-GCC/gccrs/commit/29d72c4b69a50992879a0d8c349b76e9ab136d45"}], "stats": {"total": 139, "additions": 8, "deletions": 131}, "files": [{"sha": "c3f1f17d5cf37a2aedd1b3edfa4c7916d611a74b", "filename": "gcc/config/m68k/m68k-coff.h", "status": "modified", "additions": 8, "deletions": 131, "changes": 139, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/75ec92347cb11e854c46a0c0df95acd3cefcf165/gcc%2Fconfig%2Fm68k%2Fm68k-coff.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/75ec92347cb11e854c46a0c0df95acd3cefcf165/gcc%2Fconfig%2Fm68k%2Fm68k-coff.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fm68k-coff.h?ref=75ec92347cb11e854c46a0c0df95acd3cefcf165", "patch": "@@ -1,6 +1,6 @@\n-/* Definitions of target machine for GNU compiler.\n-   m68k series COFF object files and debugging, version.\n-   Copyright (C) 1987, 1988, 1991, 1994 Free Software Foundation, Inc.\n+/* Definitions of target machine for GNU compiler.  \"naked\" 68020,\n+   COFF object files and debugging, version.\n+   Copyright (C) 1994 Free Software Foundation, Inc.\n \n This file is part of GNU CC.\n \n@@ -18,133 +18,10 @@ You should have received a copy of the GNU General Public License\n along with GNU CC; see the file COPYING.  If not, write to\n the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n \n-/* This file is included after m68k.h by CPU COFF specific files.  It\n-   is not a complete target itself.  */\n+#define MOTOROLA\t/* Use Motorola syntax rather than MIT.  */\n \n-/* Generate sdb debugging information.  */\n+#include \"m68k/m68k-none.h\"\n+#include \"m68k/m68kemb.h\"\n+#include \"m68k/coff.h\"\n \n-#undef DBX_DEBUGGING_INFO\n-#define SDB_DEBUGGING_INFO\n-\n-/* Output DBX (stabs) debugging information if using -gstabs.  */\n-\n-#define DBX_DEBUGGING_INFO\n-\n-#undef PREFERRED_DEBUGGING_TYPE\n-#define PREFERRED_DEBUGGING_TYPE SDB_DEBUG\n-\n-/* COFF symbols don't start with an underscore.  */\n-\n-#undef USER_LABEL_PREFIX\n-#define USER_LABEL_PREFIX \"\"\n-\n-/* Use a prefix for local labels, just to be on the save side.  */\n-\n-#undef LOCAL_LABEL_PREFIX\n-#define LOCAL_LABEL_PREFIX \".\"\n-\n-/* Use a register prefix to avoid clashes with external symbols (classic\n-   example: `extern char PC;' in termcap).  */\n-\n-#undef REGISTER_PREFIX\n-#define REGISTER_PREFIX \"%\"\n-\n-/* In the machine description we can't use %R, because it will not be seen\n-   by ASM_FPRINTF.  (Isn't that a design bug?).  */\n-\n-#undef REGISTER_PREFIX_MD\n-#define REGISTER_PREFIX_MD \"%%\"\n-\n-/* config/m68k.md has an explicit reference to the program counter,\n-   prefix this by the register prefix.  */\n-\n-#define ASM_RETURN_CASE_JUMP    return \"jmp %%pc@(2,%0:w)\"\n-\n-/* Here are the new register names.  */\n-\n-#undef REGISTER_NAMES\n-#ifndef SUPPORT_SUN_FPA\n-#define REGISTER_NAMES \\\n-{\"%d0\", \"%d1\", \"%d2\", \"%d3\", \"%d4\", \"%d5\", \"%d6\", \"%d7\",\t\\\n- \"%a0\", \"%a1\", \"%a2\", \"%a3\", \"%a4\", \"%a5\", \"%a6\", \"%sp\",\t\\\n- \"%fp0\", \"%fp1\", \"%fp2\", \"%fp3\", \"%fp4\", \"%fp5\", \"%fp6\", \"%fp7\" }\n-#else /* SUPPORTED_SUN_FPA */\n-#define REGISTER_NAMES \\\n-{\"%d0\", \"%d1\", \"%d2\", \"%d3\", \"%d4\", \"%d5\", \"%d6\", \"%d7\",\t\\\n- \"%a0\", \"%a1\", \"%a2\", \"%a3\", \"%a4\", \"%a5\", \"%a6\", \"%sp\",\t\\\n- \"%fp0\", \"%fp1\", \"%fp2\", \"%fp3\", \"%fp4\", \"%fp5\", \"%fp6\", \"%fp7\", \\\n- \"%fpa0\", \"%fpa1\", \"%fpa2\", \"%fpa3\", \"%fpa4\", \"%fpa5\", \"%fpa6\", \"%fpa7\", \\\n- \"%fpa8\", \"%fpa9\", \"%fpa10\", \"%fpa11\", \"%fpa12\", \"%fpa13\", \"%fpa14\", \"%fpa15\", \\\n- \"%fpa16\", \"%fpa17\", \"%fpa18\", \"%fpa19\", \"%fpa20\", \"%fpa21\", \"%fpa22\", \"%fpa23\", \\\n- \"%fpa24\", \"%fpa25\", \"%fpa26\", \"%fpa27\", \"%fpa28\", \"%fpa29\", \"%fpa30\", \"%fpa31\" }\n-#endif /* defined SUPPORT_SUN_FPA */\n-\n-#undef ASM_FILE_START\n-#define ASM_FILE_START(FILE) \\\n-  output_file_directive ((FILE), main_input_filename)\n-\n-/* Support the ctors and dtors sections for g++.  */\n-\n-#define CTORS_SECTION_ASM_OP\t\".section\\t.ctors,\\\"x\\\"\"\n-#define DTORS_SECTION_ASM_OP\t\".section\\t.dtors,\\\"x\\\"\"\n-\n-/* A list of other sections which the compiler might be \"in\" at any\n-   given time.  */\n-\n-#undef EXTRA_SECTIONS\n-#define EXTRA_SECTIONS in_ctors, in_dtors\n-\n-/* A list of extra section function definitions.  */\n-\n-#undef EXTRA_SECTION_FUNCTIONS\n-#define EXTRA_SECTION_FUNCTIONS\t\t\t\t\t\t\\\n-  CTORS_SECTION_FUNCTION\t\t\t\t\t\t\\\n-  DTORS_SECTION_FUNCTION\n-\n-#define CTORS_SECTION_FUNCTION\t\t\t\t\t\t\\\n-void\t\t\t\t\t\t\t\t\t\\\n-ctors_section ()\t\t\t\t\t\t\t\\\n-{\t\t\t\t\t\t\t\t\t\\\n-  if (in_section != in_ctors)\t\t\t\t\t\t\\\n-    {\t\t\t\t\t\t\t\t\t\\\n-      fprintf (asm_out_file, \"%s\\n\", CTORS_SECTION_ASM_OP);\t\t\\\n-      in_section = in_ctors;\t\t\t\t\t\t\\\n-    }\t\t\t\t\t\t\t\t\t\\\n-}\n-\n-#define DTORS_SECTION_FUNCTION\t\t\t\t\t\t\\\n-void\t\t\t\t\t\t\t\t\t\\\n-dtors_section ()\t\t\t\t\t\t\t\\\n-{\t\t\t\t\t\t\t\t\t\\\n-  if (in_section != in_dtors)\t\t\t\t\t\t\\\n-    {\t\t\t\t\t\t\t\t\t\\\n-      fprintf (asm_out_file, \"%s\\n\", DTORS_SECTION_ASM_OP);\t\t\\\n-      in_section = in_dtors;\t\t\t\t\t\t\\\n-    }\t\t\t\t\t\t\t\t\t\\\n-}\n-\n-#define INT_ASM_OP \".long\"\n-\n-/* A C statement (sans semicolon) to output an element in the table of\n-   global constructors.  */\n-#define ASM_OUTPUT_CONSTRUCTOR(FILE,NAME)\t\t\t\t\\\n-  do {\t\t\t\t\t\t\t\t\t\\\n-    ctors_section ();\t\t\t\t\t\t\t\\\n-    fprintf (FILE, \"\\t%s\\t \", INT_ASM_OP);\t\t\t\t\\\n-    assemble_name (FILE, NAME);\t\t\t\t\t\t\\\n-    fprintf (FILE, \"\\n\");\t\t\t\t\t\t\\\n-  } while (0)\n-\n-/* A C statement (sans semicolon) to output an element in the table of\n-   global destructors.  */\n-#define ASM_OUTPUT_DESTRUCTOR(FILE,NAME)       \t\t\t\t\\\n-  do {\t\t\t\t\t\t\t\t\t\\\n-    dtors_section ();                   \t\t\t\t\\\n-    fprintf (FILE, \"\\t%s\\t \", INT_ASM_OP);\t\t\t\t\\\n-    assemble_name (FILE, NAME);              \t\t\t\t\\\n-    fprintf (FILE, \"\\n\");\t\t\t\t\t\t\\\n-  } while (0)\n-\n-/* Don't assume anything about startfiles.  */\n-\n-#define STARTFILE_SPEC \"\"\n+/* end of m68k-coff.h */"}]}