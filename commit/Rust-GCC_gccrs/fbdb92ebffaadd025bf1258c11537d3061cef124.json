{"sha": "fbdb92ebffaadd025bf1258c11537d3061cef124", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmJkYjkyZWJmZmFhZGQwMjViZjEyNThjMTE1MzdkMzA2MWNlZjEyNA==", "commit": {"author": {"name": "Maxim Ostapenko", "email": "m.ostapenko@samsung.com", "date": "2016-11-08T22:15:35Z"}, "committer": {"name": "Maxim Ostapenko", "email": "chefmax@gcc.gnu.org", "date": "2016-11-08T22:15:35Z"}, "message": "asan.h (ASAN_STACK_MAGIC_PARTIAL): Remove.\n\ngcc/\n\n\t* asan.h (ASAN_STACK_MAGIC_PARTIAL): Remove.\n\t* asan.c (ASAN_STACK_MAGIC_PARTIAL): Replace with\n\tASAN_STACK_MAGIC_MIDDLE.\n\t(asan_global_struct): Increase the size of fields.\n\t(asan_add_global): Add new field constructor.\n\t* sanitizer.def (__asan_version_mismatch_check_v6): Replace with\n\t__asan_version_mismatch_check_v8.\n\ngcc/testsuite/\n\n\t* c-c++-common/asan/null-deref-1.c: Adjust testcase.\n\nFrom-SVN: r241983", "tree": {"sha": "927936968e461b35aff33774dcb38beec1ee4dc2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/927936968e461b35aff33774dcb38beec1ee4dc2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fbdb92ebffaadd025bf1258c11537d3061cef124", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fbdb92ebffaadd025bf1258c11537d3061cef124", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fbdb92ebffaadd025bf1258c11537d3061cef124", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fbdb92ebffaadd025bf1258c11537d3061cef124/comments", "author": null, "committer": null, "parents": [{"sha": "8f16b6ca77d55ee47e256070b1efe34f03d08f9a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8f16b6ca77d55ee47e256070b1efe34f03d08f9a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8f16b6ca77d55ee47e256070b1efe34f03d08f9a"}], "stats": {"total": 36, "additions": 26, "deletions": 10}, "files": [{"sha": "ab2dd5e209f6a5452384693dd08a2defcec72b9a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbdb92ebffaadd025bf1258c11537d3061cef124/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbdb92ebffaadd025bf1258c11537d3061cef124/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=fbdb92ebffaadd025bf1258c11537d3061cef124", "patch": "@@ -1,4 +1,14 @@\n-2016-11-08  David Edelsohn  <dje.gcc@gmail.com>\n+2016-11-09  Maxim Ostapenko  <m.ostapenko@samsung.com>\n+\n+\t* asan.h (ASAN_STACK_MAGIC_PARTIAL): Remove.\n+\t* asan.c (ASAN_STACK_MAGIC_PARTIAL): Replace with\n+\tASAN_STACK_MAGIC_MIDDLE.\n+\t(asan_global_struct): Increase the size of fields.\n+\t(asan_add_global): Add new field constructor.\n+\t* sanitizer.def (__asan_version_mismatch_check_v6): Replace with\n+\t__asan_version_mismatch_check_v8.\n+\n+ 2016-11-08  David Edelsohn  <dje.gcc@gmail.com>\n \n \t* dwarf2asm.c (USE_LINKONCE_INDIRECT): Test XCOFF_DEBUGGING_INFO\n \tat runtime."}, {"sha": "6e93ea3aba5595d1395823465291e1eb995bb78c", "filename": "gcc/asan.c", "status": "modified", "additions": 8, "deletions": 5, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbdb92ebffaadd025bf1258c11537d3061cef124/gcc%2Fasan.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbdb92ebffaadd025bf1258c11537d3061cef124/gcc%2Fasan.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fasan.c?ref=fbdb92ebffaadd025bf1258c11537d3061cef124", "patch": "@@ -1242,7 +1242,7 @@ asan_emit_stack_protection (rtx base, rtx pbase, unsigned int alignb,\n \t\t  shadow_bytes[i] = offset - aoff;\n \t      }\n \t    else\n-\t      shadow_bytes[i] = ASAN_STACK_MAGIC_PARTIAL;\n+\t      shadow_bytes[i] = ASAN_STACK_MAGIC_MIDDLE;\n \t  emit_move_insn (shadow_mem, asan_shadow_cst (shadow_bytes));\n \t  offset = aoff;\n \t}\n@@ -2260,19 +2260,20 @@ asan_dynamic_init_call (bool after_p)\n      const void *__module_name;\n      uptr __has_dynamic_init;\n      __asan_global_source_location *__location;\n+     char *__odr_indicator;\n    } type.  */\n \n static tree\n asan_global_struct (void)\n {\n-  static const char *field_names[7]\n+  static const char *field_names[8]\n     = { \"__beg\", \"__size\", \"__size_with_redzone\",\n-\t\"__name\", \"__module_name\", \"__has_dynamic_init\", \"__location\"};\n-  tree fields[7], ret;\n+\t\"__name\", \"__module_name\", \"__has_dynamic_init\", \"__location\", \"__odr_indicator\"};\n+  tree fields[8], ret;\n   int i;\n \n   ret = make_node (RECORD_TYPE);\n-  for (i = 0; i < 7; i++)\n+  for (i = 0; i < 8; i++)\n     {\n       fields[i]\n \t= build_decl (UNKNOWN_LOCATION, FIELD_DECL,\n@@ -2381,6 +2382,8 @@ asan_add_global (tree decl, tree type, vec<constructor_elt, va_gc> *v)\n   else\n     locptr = build_int_cst (uptr, 0);\n   CONSTRUCTOR_APPEND_ELT (vinner, NULL_TREE, locptr);\n+  /* TODO: support ODR indicators.  */\n+  CONSTRUCTOR_APPEND_ELT (vinner, NULL_TREE, build_int_cst (uptr, 0));\n   init = build_constructor (type, vinner);\n   CONSTRUCTOR_APPEND_ELT (v, NULL_TREE, init);\n }"}, {"sha": "f63a108dc87eb0919f6dd4ca87e46358fdc3bf67", "filename": "gcc/asan.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbdb92ebffaadd025bf1258c11537d3061cef124/gcc%2Fasan.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbdb92ebffaadd025bf1258c11537d3061cef124/gcc%2Fasan.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fasan.h?ref=fbdb92ebffaadd025bf1258c11537d3061cef124", "patch": "@@ -59,7 +59,6 @@ extern hash_set <tree> *asan_used_labels;\n #define ASAN_STACK_MAGIC_LEFT\t\t  0xf1\n #define ASAN_STACK_MAGIC_MIDDLE\t\t  0xf2\n #define ASAN_STACK_MAGIC_RIGHT\t\t  0xf3\n-#define ASAN_STACK_MAGIC_PARTIAL\t  0xf4\n #define ASAN_STACK_MAGIC_USE_AFTER_RET\t  0xf5\n #define ASAN_STACK_MAGIC_USE_AFTER_SCOPE  0xf8\n "}, {"sha": "3db08a7b7029bd1996f8b85029ec3cd6f65d5a04", "filename": "gcc/sanitizer.def", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbdb92ebffaadd025bf1258c11537d3061cef124/gcc%2Fsanitizer.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbdb92ebffaadd025bf1258c11537d3061cef124/gcc%2Fsanitizer.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsanitizer.def?ref=fbdb92ebffaadd025bf1258c11537d3061cef124", "patch": "@@ -34,7 +34,7 @@ DEF_BUILTIN_STUB(BEGIN_SANITIZER_BUILTINS, (const char *)0)\n DEF_SANITIZER_BUILTIN(BUILT_IN_ASAN_INIT, \"__asan_init\",\n \t\t      BT_FN_VOID, ATTR_NOTHROW_LEAF_LIST)\n DEF_SANITIZER_BUILTIN(BUILT_IN_ASAN_VERSION_MISMATCH_CHECK,\n-\t\t      \"__asan_version_mismatch_check_v6\",\n+\t\t      \"__asan_version_mismatch_check_v8\",\n \t\t      BT_FN_VOID, ATTR_NOTHROW_LEAF_LIST)\n /* Do not reorder the BUILT_IN_ASAN_{REPORT,CHECK}* builtins, e.g. cfgcleanup.c\n    relies on this order.  */"}, {"sha": "ec91ad60e2c49699496c1349bb7c1139f5c36ea5", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbdb92ebffaadd025bf1258c11537d3061cef124/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbdb92ebffaadd025bf1258c11537d3061cef124/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=fbdb92ebffaadd025bf1258c11537d3061cef124", "patch": "@@ -1,3 +1,7 @@\n+2016-11-09  Maxim Ostapenko  <m.ostapenko@samsung.com>\n+\n+\t* c-c++-common/asan/null-deref-1.c: Adjust testcase.\n+\n 2016-11-08  Janus Weil  <janus@gcc.gnu.org>\n \n \tPR fortran/68440"}, {"sha": "f4f8f37a795a53d2ed24cbed9c5c21db2f702020", "filename": "gcc/testsuite/c-c++-common/asan/null-deref-1.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbdb92ebffaadd025bf1258c11537d3061cef124/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fasan%2Fnull-deref-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbdb92ebffaadd025bf1258c11537d3061cef124/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fasan%2Fnull-deref-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fasan%2Fnull-deref-1.c?ref=fbdb92ebffaadd025bf1258c11537d3061cef124", "patch": "@@ -17,6 +17,6 @@ int main()\n }\n \n /* { dg-output \"ERROR: AddressSanitizer:? SEGV on unknown address\\[^\\n\\r]*\" } */\n-/* { dg-output \"0x\\[0-9a-f\\]+ \\[^\\n\\r]*pc 0x\\[0-9a-f\\]+\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n-/* { dg-output \"\\[^\\n\\r]*    #0 0x\\[0-9a-f\\]+ +(in \\[^\\n\\r]*NullDeref\\[^\\n\\r]* (\\[^\\n\\r]*null-deref-1.c:10|\\[^\\n\\r]*:0)|\\[(\\])\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n+/* { dg-output \"0x\\[0-9a-f\\]+ \\[^\\n\\r]*pc 0x\\[0-9a-f\\]+.*(\\n|\\r\\n|\\r)\" } */\n+/* { dg-output \"    #0 0x\\[0-9a-f\\]+ +(in \\[^\\n\\r]*NullDeref\\[^\\n\\r]* (\\[^\\n\\r]*null-deref-1.c:10|\\[^\\n\\r]*:0)|\\[(\\])\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n /* { dg-output \"    #1 0x\\[0-9a-f\\]+ +(in _*main (\\[^\\n\\r]*null-deref-1.c:15|\\[^\\n\\r]*:0)|\\[(\\])\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */"}]}