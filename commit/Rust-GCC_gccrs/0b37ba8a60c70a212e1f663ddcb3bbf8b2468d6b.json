{"sha": "0b37ba8a60c70a212e1f663ddcb3bbf8b2468d6b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGIzN2JhOGE2MGM3MGEyMTJlMWY2NjNkZGNiM2JiZjhiMjQ2OGQ2Yg==", "commit": {"author": {"name": "Andi Kleen", "email": "ak@linux.intel.com", "date": "2014-09-16T03:22:41Z"}, "committer": {"name": "Andi Kleen", "email": "ak@gcc.gnu.org", "date": "2014-09-16T03:22:41Z"}, "message": "Always set DECL_NO_INSTRUMENT_FUNCTION_ENTRY_EXIT correctly\n\nWhen profiling is disabled force DECL_NO_INSTRUMENT_FUNCTION_ENTRY_EXIT\nfor each function to one. This information is then preserved\nthrough LTO.\n\nWith this patch for LTO builds -pg needs to be set on both the\nLTO final link and the original source build, to allow -pg\n(or -pg -fentry) to be active for that source file. This allows\nto build large projects mostly with -pg, except for a few files,\nand still use LTO.\n\ngcc/:\n\n2014-09-15  Andi Kleen  <ak@linux.intel.com>\n\n\t* function.c (allocate_struct_function): Force\n\tDECL_NO_INSTRUMENT_FUNCTION_ENTRY_EXIT to one when\n\tprofiling is disabled.\n\nFrom-SVN: r215284", "tree": {"sha": "fbcfa49214f70adb371ba5e9affc7d4ef955288e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fbcfa49214f70adb371ba5e9affc7d4ef955288e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0b37ba8a60c70a212e1f663ddcb3bbf8b2468d6b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0b37ba8a60c70a212e1f663ddcb3bbf8b2468d6b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0b37ba8a60c70a212e1f663ddcb3bbf8b2468d6b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0b37ba8a60c70a212e1f663ddcb3bbf8b2468d6b/comments", "author": null, "committer": null, "parents": [{"sha": "e93050426d180c5d22653e349e066331785521f0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e93050426d180c5d22653e349e066331785521f0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e93050426d180c5d22653e349e066331785521f0"}], "stats": {"total": 9, "additions": 9, "deletions": 0}, "files": [{"sha": "8d4f5ba1c372ec07db36b49b77bab2dad8139b56", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0b37ba8a60c70a212e1f663ddcb3bbf8b2468d6b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0b37ba8a60c70a212e1f663ddcb3bbf8b2468d6b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0b37ba8a60c70a212e1f663ddcb3bbf8b2468d6b", "patch": "@@ -1,3 +1,9 @@\n+2014-09-15  Andi Kleen  <ak@linux.intel.com>\n+\n+\t* function.c (allocate_struct_function): Force\n+\tDECL_NO_INSTRUMENT_FUNCTION_ENTRY_EXIT to one when\n+\tprofiling is disabled.\n+\n 2014-09-15  Trevor Saunders  <tsaunders@mozilla.com>\n     \n     \t* cfgrtl.c, combine.c, config/arc/arc.c, config/mcore/mcore.c,"}, {"sha": "ac50f4af41abf0209c2463083869329f3e1e8448", "filename": "gcc/function.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0b37ba8a60c70a212e1f663ddcb3bbf8b2468d6b/gcc%2Ffunction.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0b37ba8a60c70a212e1f663ddcb3bbf8b2468d6b/gcc%2Ffunction.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffunction.c?ref=0b37ba8a60c70a212e1f663ddcb3bbf8b2468d6b", "patch": "@@ -4555,6 +4555,9 @@ allocate_struct_function (tree fndecl, bool abstract_p)\n          but is this worth the hassle?  */\n       cfun->can_throw_non_call_exceptions = flag_non_call_exceptions;\n       cfun->can_delete_dead_exceptions = flag_delete_dead_exceptions;\n+\n+      if (!profile_flag && !flag_instrument_function_entry_exit)\n+\tDECL_NO_INSTRUMENT_FUNCTION_ENTRY_EXIT (fndecl) = 1;\n     }\n }\n "}]}