{"sha": "42f7b0fa26c75f33090cf515c9f849c528ebca84", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDJmN2IwZmEyNmM3NWYzMzA5MGNmNTE1YzlmODQ5YzUyOGViY2E4NA==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2012-11-08T16:46:18Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2012-11-08T16:46:18Z"}, "message": "re PR fortran/48636 (Enable more inlining with -O2 and higher)\n\n\tPR middle-end/48636\n\t* ipa-inline.c (big_speedup_p): New function.\n\t(want_inline_small_function_p): Use it.\n\t(edge_badness): Dump it.\n\t* params.def (inline-min-speedup): New parameter.\n\t* doc/invoke.texi (inline-min-speedup): Document.\n\nFrom-SVN: r193331", "tree": {"sha": "c2cbdda2703ae2ef2cd29bf2ad23bf0a190b8d81", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c2cbdda2703ae2ef2cd29bf2ad23bf0a190b8d81"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/42f7b0fa26c75f33090cf515c9f849c528ebca84", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/42f7b0fa26c75f33090cf515c9f849c528ebca84", "html_url": "https://github.com/Rust-GCC/gccrs/commit/42f7b0fa26c75f33090cf515c9f849c528ebca84", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/42f7b0fa26c75f33090cf515c9f849c528ebca84/comments", "author": null, "committer": null, "parents": [{"sha": "774b8a558c2fbfe0b472c814d582c8540102a17c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/774b8a558c2fbfe0b472c814d582c8540102a17c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/774b8a558c2fbfe0b472c814d582c8540102a17c"}], "stats": {"total": 48, "additions": 47, "deletions": 1}, "files": [{"sha": "b757503d8cb9b592a32032e84bbf4055e46f36ba", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/42f7b0fa26c75f33090cf515c9f849c528ebca84/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/42f7b0fa26c75f33090cf515c9f849c528ebca84/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=42f7b0fa26c75f33090cf515c9f849c528ebca84", "patch": "@@ -1,3 +1,12 @@\n+2012-11-08  Jan Hubicka  <jh@suse.cz>\n+\n+\tPR middle-end/48636\n+\t* ipa-inline.c (big_speedup_p): New function.\n+\t(want_inline_small_function_p): Use it.\n+\t(edge_badness): Dump it.\n+\t* params.def (inline-min-speedup): New parameter.\n+\t* doc/invoke.texi (inline-min-speedup): Document.\n+\n 2012-11-08  Martin Jambor  <mjambor@suse.cz>\n \n \t* ipa-prop.c (determine_known_aggregate_parts): Skip writes to"}, {"sha": "715f60adacf2cfcf0d192490636d3a7769e5e3f3", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/42f7b0fa26c75f33090cf515c9f849c528ebca84/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/42f7b0fa26c75f33090cf515c9f849c528ebca84/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=42f7b0fa26c75f33090cf515c9f849c528ebca84", "patch": "@@ -8945,6 +8945,12 @@ by the compiler are investigated.  To those functions, a different\n be applied.\n The default value is 40.\n \n+@item inline-min-speedup\n+When estimated performance improvement of caller + callee runtime exceeds this\n+threshold (in precent), the function can be inlined regardless the limit on\n+@option{--param max-inline-insns-single} and @option{--param\n+max-inline-insns-auto}.\n+\n @item large-function-insns\n The limit specifying really large functions.  For functions larger than this\n limit after inlining, inlining is constrained by"}, {"sha": "fa3d4568c1ba5ff8dab66e36ddcda16f4da1e5fa", "filename": "gcc/ipa-inline.c", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/42f7b0fa26c75f33090cf515c9f849c528ebca84/gcc%2Fipa-inline.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/42f7b0fa26c75f33090cf515c9f849c528ebca84/gcc%2Fipa-inline.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-inline.c?ref=42f7b0fa26c75f33090cf515c9f849c528ebca84", "patch": "@@ -493,6 +493,22 @@ compute_inlined_call_time (struct cgraph_edge *edge,\n   return time;\n }\n \n+/* Return true if the speedup for inlining E is bigger than\n+   PARAM_MAX_INLINE_MIN_SPEEDUP.  */\n+\n+static bool\n+big_speedup_p (struct cgraph_edge *e)\n+{\n+  gcov_type time = compute_uninlined_call_time (inline_summary (e->callee),\n+\t\t\t\t\t  \te);\n+  gcov_type inlined_time = compute_inlined_call_time (e,\n+\t\t\t\t\t              estimate_edge_time (e));\n+  if (time - inlined_time\n+      > RDIV (time * PARAM_VALUE (PARAM_INLINE_MIN_SPEEDUP), 100))\n+    return true;\n+  return false;\n+}\n+\n /* Return true if we are interested in inlining small function.\n    When REPORT is true, report reason to dump file.  */\n \n@@ -514,13 +530,15 @@ want_inline_small_function_p (struct cgraph_edge *e, bool report)\n     {\n       int growth = estimate_edge_growth (e);\n       inline_hints hints = estimate_edge_hints (e);\n+      bool big_speedup = big_speedup_p (e);\n \n       if (growth <= 0)\n \t;\n       /* Apply MAX_INLINE_INSNS_SINGLE limit.  Do not do so when\n \t hints suggests that inlining given function is very profitable.  */\n       else if (DECL_DECLARED_INLINE_P (callee->symbol.decl)\n \t       && growth >= MAX_INLINE_INSNS_SINGLE\n+\t       && !big_speedup\n \t       && !(hints & (INLINE_HINT_indirect_call\n \t\t\t     | INLINE_HINT_loop_iterations\n \t\t\t     | INLINE_HINT_loop_stride)))\n@@ -574,6 +592,7 @@ want_inline_small_function_p (struct cgraph_edge *e, bool report)\n \t Upgrade it to MAX_INLINE_INSNS_SINGLE when hints suggests that\n \t inlining given function is very profitable.  */\n       else if (!DECL_DECLARED_INLINE_P (callee->symbol.decl)\n+\t       && !big_speedup\n \t       && growth >= ((hints & (INLINE_HINT_indirect_call\n \t\t\t\t       | INLINE_HINT_loop_iterations\n \t\t\t\t       | INLINE_HINT_loop_stride))\n@@ -836,6 +855,8 @@ edge_badness (struct cgraph_edge *edge, bool dump)\n \t       growth,\n \t       edge_time);\n       dump_inline_hints (dump_file, hints);\n+      if (big_speedup_p (edge))\n+\tfprintf (dump_file, \" big_speedup\");\n       fprintf (dump_file, \"\\n\");\n     }\n "}, {"sha": "42cf2eb31237471cf367c8fdd572947701c30b4c", "filename": "gcc/params.def", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/42f7b0fa26c75f33090cf515c9f849c528ebca84/gcc%2Fparams.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/42f7b0fa26c75f33090cf515c9f849c528ebca84/gcc%2Fparams.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fparams.def?ref=42f7b0fa26c75f33090cf515c9f849c528ebca84", "patch": "@@ -46,6 +46,11 @@ DEFPARAM (PARAM_PREDICTABLE_BRANCH_OUTCOME,\n \t  \"Maximal estimated outcome of branch considered predictable\",\n \t  2, 0, 50)\n \n+DEFPARAM (PARAM_INLINE_MIN_SPEEDUP,\n+\t  \"inline-min-speedup\",\n+\t  \"The minimal estimated speedup allowing inliner to ignore inline-insns-single and inline-isnsns-auto\",\n+\t  10, 0, 0)\n+\n /* The single function inlining limit. This is the maximum size\n    of a function counted in internal gcc instructions (not in\n    real machine instructions) that is eligible for inlining"}, {"sha": "e9d319bb7543525dd325f32e56da440faf7b88a9", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/42f7b0fa26c75f33090cf515c9f849c528ebca84/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/42f7b0fa26c75f33090cf515c9f849c528ebca84/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=42f7b0fa26c75f33090cf515c9f849c528ebca84", "patch": "@@ -1,3 +1,8 @@\n+2012-11-08  Jan Hubicka  <jh@suse.cz>\n+\n+\tPR middle-end/48636\n+\t* gcc.dg/winline-3.c: Update.\n+\n 2012-11-08  Martin Jambor  <mjambor@suse.cz>\n \n \t* gfortran.dg/ipcp-array-1.f90: New test."}, {"sha": "fc12f573ab040be87cad0fc9843fb0a8e1271c7c", "filename": "gcc/testsuite/gcc.dg/winline-3.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/42f7b0fa26c75f33090cf515c9f849c528ebca84/gcc%2Ftestsuite%2Fgcc.dg%2Fwinline-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/42f7b0fa26c75f33090cf515c9f849c528ebca84/gcc%2Ftestsuite%2Fgcc.dg%2Fwinline-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fwinline-3.c?ref=42f7b0fa26c75f33090cf515c9f849c528ebca84", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-Winline -O2 --param max-inline-insns-single=1\" } */\n+/* { dg-options \"-Winline -O2 --param max-inline-insns-single=1 --param inline-min-speedup=100\" } */\n \n void big (void);\n inline int q(void) /* { dg-warning \"max-inline-insns-single\" \"\" } */"}]}