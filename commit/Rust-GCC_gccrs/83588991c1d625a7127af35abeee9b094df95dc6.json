{"sha": "83588991c1d625a7127af35abeee9b094df95dc6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODM1ODg5OTFjMWQ2MjVhNzEyN2FmMzVhYmVlZTliMDk0ZGY5NWRjNg==", "commit": {"author": {"name": "Paolo Carlini", "email": "pcarlini@suse.de", "date": "2007-12-27T12:59:01Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2007-12-27T12:59:01Z"}, "message": "re PR libstdc++/34538 ([DR 697] combination of sstream, invalid_argument and -std=c++0x breaks valid code)\n\n2007-12-27  Paolo Carlini  <pcarlini@suse.de>\n\n\tPR libstdc++/34538\n\t* config/os/generic/error_constants.h (enum posix_errno): Move\n\tinside namespace posix_error.\n\t* include/std/system_error (error_category::posix,\n\terror_code::error_code(posix_errno), error_code::posix): Adjust.\n\t* src/system_error.cc (gnu_error_category::posix): Likewise.\n\t* testsuite/27_io/basic_ostream/inserters_other/wchar_t/error_code.cc:\n\tAdjust.\n\t* testsuite/27_io/basic_ostream/inserters_other/char/error_code.cc:\n\tLikewise.\n\t* testsuite/19_diagnostics/error_code/cons/1.cc: Likewise.\n\t* testsuite/19_diagnostics/error_code/operators/bool.cc: Likewise.\n\t* testsuite/19_diagnostics/error_code/operators/equal.cc: Likewise.\n\t* testsuite/19_diagnostics/error_code/operators/not_equal.cc:\n\tLikewise.\n\t* testsuite/19_diagnostics/error_category/cons/copy_neg.cc: Likewise.\n\t* testsuite/19_diagnostics/error_category/cons/default.cc: Likewise.\n\t* testsuite/19_diagnostics/error_category/operators/equal.cc:\n\tLikewise.\n\t* testsuite/19_diagnostics/error_category/operators/not_equal.cc:\n\tLikewise.\n\t* testsuite/19_diagnostics/headers/system_error/types_std_c++0x.cc:\n\tLikewise.\n\t* testsuite/19_diagnostics/system_error/cons-1.cc: Likewise.\n\t* testsuite/19_diagnostics/system_error/what-4.cc: Likewise.\n\t* testsuite/19_diagnostics/headers/system_error/34538.cc: New.\n\nFrom-SVN: r131200", "tree": {"sha": "2275fe8dfc8a8ef8d0e8b732dc63b1cbefd8423f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2275fe8dfc8a8ef8d0e8b732dc63b1cbefd8423f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/83588991c1d625a7127af35abeee9b094df95dc6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/83588991c1d625a7127af35abeee9b094df95dc6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/83588991c1d625a7127af35abeee9b094df95dc6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/83588991c1d625a7127af35abeee9b094df95dc6/comments", "author": null, "committer": null, "parents": [{"sha": "ceac3d59adc0d45bbb067ac86c493930cb1839ee", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ceac3d59adc0d45bbb067ac86c493930cb1839ee", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ceac3d59adc0d45bbb067ac86c493930cb1839ee"}], "stats": {"total": 279, "additions": 170, "deletions": 109}, "files": [{"sha": "f9fbeeeb77a23ae14305ecff2b004a3ae8fca56e", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/83588991c1d625a7127af35abeee9b094df95dc6/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/83588991c1d625a7127af35abeee9b094df95dc6/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=83588991c1d625a7127af35abeee9b094df95dc6", "patch": "@@ -1,3 +1,32 @@\n+2007-12-27  Paolo Carlini  <pcarlini@suse.de>\n+\n+\tPR libstdc++/34538\n+\t* config/os/generic/error_constants.h (enum posix_errno): Move\n+\tinside namespace posix_error.\n+\t* include/std/system_error (error_category::posix,\n+\terror_code::error_code(posix_errno), error_code::posix): Adjust.\n+\t* src/system_error.cc (gnu_error_category::posix): Likewise.\n+\t* testsuite/27_io/basic_ostream/inserters_other/wchar_t/error_code.cc:\n+\tAdjust.\n+\t* testsuite/27_io/basic_ostream/inserters_other/char/error_code.cc:\n+\tLikewise.\n+\t* testsuite/19_diagnostics/error_code/cons/1.cc: Likewise.\n+\t* testsuite/19_diagnostics/error_code/operators/bool.cc: Likewise.\n+\t* testsuite/19_diagnostics/error_code/operators/equal.cc: Likewise.\n+\t* testsuite/19_diagnostics/error_code/operators/not_equal.cc:\n+\tLikewise.\n+\t* testsuite/19_diagnostics/error_category/cons/copy_neg.cc: Likewise.\n+\t* testsuite/19_diagnostics/error_category/cons/default.cc: Likewise.\n+\t* testsuite/19_diagnostics/error_category/operators/equal.cc:\n+\tLikewise.\n+\t* testsuite/19_diagnostics/error_category/operators/not_equal.cc:\n+\tLikewise.\n+\t* testsuite/19_diagnostics/headers/system_error/types_std_c++0x.cc:\n+\tLikewise.\n+\t* testsuite/19_diagnostics/system_error/cons-1.cc: Likewise.\n+\t* testsuite/19_diagnostics/system_error/what-4.cc: Likewise.\n+\t* testsuite/19_diagnostics/headers/system_error/34538.cc: New.\n+\n 2007-12-26  Paolo Carlini  <pcarlini@suse.de>\n \n \t* testsuite/25_algorithms/copy/34595.C: Rename to 34595.cc."}, {"sha": "53bccdcb5b0455d43fd3dc8674001b58cb28cc96", "filename": "libstdc++-v3/config/os/generic/error_constants.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/83588991c1d625a7127af35abeee9b094df95dc6/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fgeneric%2Ferror_constants.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/83588991c1d625a7127af35abeee9b094df95dc6/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fgeneric%2Ferror_constants.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fgeneric%2Ferror_constants.h?ref=83588991c1d625a7127af35abeee9b094df95dc6", "patch": "@@ -40,6 +40,8 @@\n \n _GLIBCXX_BEGIN_NAMESPACE(std)\n \n+namespace posix_error\n+{\n  enum posix_errno\n     {\n       address_family_not_supported = \t\tEAFNOSUPPORT,\n@@ -159,6 +161,7 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n       wrong_protocol_type = \t\t\tEPROTOTYPE,\n       no_posix_equivalent = 1L << 16\n     };\n+}\n \n _GLIBCXX_END_NAMESPACE\n "}, {"sha": "c2a1d0150c9d562f60f53c243c7dc318e681b032", "filename": "libstdc++-v3/include/std/system_error", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/83588991c1d625a7127af35abeee9b094df95dc6/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fsystem_error", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/83588991c1d625a7127af35abeee9b094df95dc6/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fsystem_error", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fsystem_error?ref=83588991c1d625a7127af35abeee9b094df95dc6", "patch": "@@ -65,7 +65,7 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n     operator!=(const error_category& __other) const\n     { return this != &__other; }\n \n-    virtual posix_errno \n+    virtual posix_error::posix_errno \n     posix(int __v) const = 0;\n \n     virtual const string& \n@@ -86,7 +86,7 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n     error_code(int __v, const error_category& __cat) throw()\n     : _M_value(__v), _M_cat(&__cat) { }\n \n-    error_code(posix_errno __v)\n+    error_code(posix_error::posix_errno __v)\n     : _M_value(__v), _M_cat(&system_category) { }\n \n     void \n@@ -109,7 +109,7 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n     const error_category&  \n     category() const { return *_M_cat; }\n \n-    posix_errno            \n+    posix_error::posix_errno            \n     posix() const throw() { return this->category().posix(_M_value); }\n \n     // Safe bool idiom."}, {"sha": "81e73fcc7f998af7a57a699ea1bac9c22091d58e", "filename": "libstdc++-v3/src/system_error.cc", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/83588991c1d625a7127af35abeee9b094df95dc6/libstdc%2B%2B-v3%2Fsrc%2Fsystem_error.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/83588991c1d625a7127af35abeee9b094df95dc6/libstdc%2B%2B-v3%2Fsrc%2Fsystem_error.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fsystem_error.cc?ref=83588991c1d625a7127af35abeee9b094df95dc6", "patch": "@@ -44,7 +44,7 @@ namespace\n       return category;\n     }\n \n-    virtual std::posix_errno \n+    virtual std::posix_error::posix_errno \n     posix(int __v) const\n     {\n #ifdef _GLIBCXX_HAVE_SYS_NERR\n@@ -53,9 +53,9 @@ namespace\n       const int last_errorno = std::numeric_limits<int>::max();\n #endif\n       if (__v > 0 && __v <= last_errorno)\n-\treturn std::posix_errno(__v);\n+\treturn std::posix_error::posix_errno(__v);\n       else\n-\treturn std::no_posix_equivalent;\n+\treturn std::posix_error::no_posix_equivalent;\n     }\n   };\n "}, {"sha": "2609c430998b446ba0bb15b5487fcb6ae886988e", "filename": "libstdc++-v3/testsuite/19_diagnostics/error_category/cons/copy_neg.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/83588991c1d625a7127af35abeee9b094df95dc6/libstdc%2B%2B-v3%2Ftestsuite%2F19_diagnostics%2Ferror_category%2Fcons%2Fcopy_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/83588991c1d625a7127af35abeee9b094df95dc6/libstdc%2B%2B-v3%2Ftestsuite%2F19_diagnostics%2Ferror_category%2Fcons%2Fcopy_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F19_diagnostics%2Ferror_category%2Fcons%2Fcopy_neg.cc?ref=83588991c1d625a7127af35abeee9b094df95dc6", "patch": "@@ -27,9 +27,9 @@ namespace __gnu_test\n {\n   struct test_category : public std::error_category\n   { \n-    virtual std::posix_errno \n+    virtual std::posix_error::posix_errno \n     posix(int __v) const\n-    { return std::posix_errno(__v); }\n+    { return std::posix_error::posix_errno(__v); }\n \n     virtual const std::string& \n     name() const "}, {"sha": "1072cc63c6740138613db9d4b35f81b36c1276eb", "filename": "libstdc++-v3/testsuite/19_diagnostics/error_category/cons/default.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/83588991c1d625a7127af35abeee9b094df95dc6/libstdc%2B%2B-v3%2Ftestsuite%2F19_diagnostics%2Ferror_category%2Fcons%2Fdefault.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/83588991c1d625a7127af35abeee9b094df95dc6/libstdc%2B%2B-v3%2Ftestsuite%2F19_diagnostics%2Ferror_category%2Fcons%2Fdefault.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F19_diagnostics%2Ferror_category%2Fcons%2Fdefault.cc?ref=83588991c1d625a7127af35abeee9b094df95dc6", "patch": "@@ -26,9 +26,9 @@ namespace __gnu_test\n {\n   struct test_category : public std::error_category\n   { \n-    virtual std::posix_errno \n+    virtual std::posix_error::posix_errno \n     posix(int __v) const\n-    { return std::posix_errno(__v); }\n+    { return std::posix_error::posix_errno(__v); }\n \n     virtual const std::string& \n     name() const "}, {"sha": "7b8a19cd7e33d3c61975acc5e7ca4e97565f77a5", "filename": "libstdc++-v3/testsuite/19_diagnostics/error_category/operators/equal.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/83588991c1d625a7127af35abeee9b094df95dc6/libstdc%2B%2B-v3%2Ftestsuite%2F19_diagnostics%2Ferror_category%2Foperators%2Fequal.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/83588991c1d625a7127af35abeee9b094df95dc6/libstdc%2B%2B-v3%2Ftestsuite%2F19_diagnostics%2Ferror_category%2Foperators%2Fequal.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F19_diagnostics%2Ferror_category%2Foperators%2Fequal.cc?ref=83588991c1d625a7127af35abeee9b094df95dc6", "patch": "@@ -26,9 +26,9 @@ namespace __gnu_test\n {\n   struct test_category : public std::error_category\n   { \n-    virtual std::posix_errno \n+    virtual std::posix_error::posix_errno \n     posix(int __v) const\n-    { return std::posix_errno(__v); }\n+    { return std::posix_error::posix_errno(__v); }\n \n     virtual const std::string& \n     name() const "}, {"sha": "043c8a207a30910fdcb594c38a18be9262005170", "filename": "libstdc++-v3/testsuite/19_diagnostics/error_category/operators/not_equal.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/83588991c1d625a7127af35abeee9b094df95dc6/libstdc%2B%2B-v3%2Ftestsuite%2F19_diagnostics%2Ferror_category%2Foperators%2Fnot_equal.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/83588991c1d625a7127af35abeee9b094df95dc6/libstdc%2B%2B-v3%2Ftestsuite%2F19_diagnostics%2Ferror_category%2Foperators%2Fnot_equal.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F19_diagnostics%2Ferror_category%2Foperators%2Fnot_equal.cc?ref=83588991c1d625a7127af35abeee9b094df95dc6", "patch": "@@ -26,9 +26,9 @@ namespace __gnu_test\n {\n   struct test_category : public std::error_category\n   { \n-    virtual std::posix_errno \n+    virtual std::posix_error::posix_errno \n     posix(int __v) const\n-    { return std::posix_errno(__v); }\n+    { return std::posix_error::posix_errno(__v); }\n \n     virtual const std::string& \n     name() const "}, {"sha": "ea1316d067afe924a04af540d79e45e2ef6653f0", "filename": "libstdc++-v3/testsuite/19_diagnostics/error_code/cons/1.cc", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/83588991c1d625a7127af35abeee9b094df95dc6/libstdc%2B%2B-v3%2Ftestsuite%2F19_diagnostics%2Ferror_code%2Fcons%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/83588991c1d625a7127af35abeee9b094df95dc6/libstdc%2B%2B-v3%2Ftestsuite%2F19_diagnostics%2Ferror_code%2Fcons%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F19_diagnostics%2Ferror_code%2Fcons%2F1.cc?ref=83588991c1d625a7127af35abeee9b094df95dc6", "patch": "@@ -26,9 +26,9 @@ namespace __gnu_test\n {\n   struct test_category : public std::error_category\n   { \n-    virtual std::posix_errno \n+    virtual std::posix_error::posix_errno \n     posix(int __v) const\n-    { return std::posix_errno(__v); }\n+    { return std::posix_error::posix_errno(__v); }\n \n     virtual const std::string& \n     name() const \n@@ -55,8 +55,8 @@ int main()\n   VERIFY( e2.category() == cat );\n \n   // 3\n-  std::error_code e3(std::operation_not_supported);\n-  VERIFY( e3.value() == int(std::operation_not_supported) );\n+  std::error_code e3(std::posix_error::operation_not_supported);\n+  VERIFY( e3.value() == int(std::posix_error::operation_not_supported) );\n   VERIFY( e3.category() == std::system_category );\n \n   return 0;"}, {"sha": "04fd44fb6775574f9c011746f6d2ec6aaea84f46", "filename": "libstdc++-v3/testsuite/19_diagnostics/error_code/operators/bool.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/83588991c1d625a7127af35abeee9b094df95dc6/libstdc%2B%2B-v3%2Ftestsuite%2F19_diagnostics%2Ferror_code%2Foperators%2Fbool.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/83588991c1d625a7127af35abeee9b094df95dc6/libstdc%2B%2B-v3%2Ftestsuite%2F19_diagnostics%2Ferror_code%2Foperators%2Fbool.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F19_diagnostics%2Ferror_code%2Foperators%2Fbool.cc?ref=83588991c1d625a7127af35abeee9b094df95dc6", "patch": "@@ -35,7 +35,7 @@ int main()\n     }\n \n   // 2\n-  std::error_code e2(std::operation_not_supported);\n+  std::error_code e2(std::posix_error::operation_not_supported);\n   if (e2)\n     {\n       VERIFY( true );"}, {"sha": "a98ed9023a09b0e069dd6d6256b3b258d5bf2b50", "filename": "libstdc++-v3/testsuite/19_diagnostics/error_code/operators/equal.cc", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/83588991c1d625a7127af35abeee9b094df95dc6/libstdc%2B%2B-v3%2Ftestsuite%2F19_diagnostics%2Ferror_code%2Foperators%2Fequal.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/83588991c1d625a7127af35abeee9b094df95dc6/libstdc%2B%2B-v3%2Ftestsuite%2F19_diagnostics%2Ferror_code%2Foperators%2Fequal.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F19_diagnostics%2Ferror_code%2Foperators%2Fequal.cc?ref=83588991c1d625a7127af35abeee9b094df95dc6", "patch": "@@ -26,9 +26,9 @@ namespace __gnu_test\n {\n   struct test_category : public std::error_category\n   { \n-    virtual std::posix_errno \n+    virtual std::posix_error::posix_errno \n     posix(int __v) const\n-    { return std::posix_errno(__v); }\n+    { return std::posix_error::posix_errno(__v); }\n \n     virtual const std::string& \n     name() const \n@@ -45,7 +45,7 @@ int main()\n   bool test __attribute__((unused)) = true;\n \n   std::error_code e1;\n-  std::error_code e2(std::operation_not_supported);\n+  std::error_code e2(std::posix_error::operation_not_supported);\n \n   VERIFY( e1 == e1 );\n   VERIFY( !(e1 == e2) );"}, {"sha": "00153456403ba71a59fc4061a2dde88e1d7fb81f", "filename": "libstdc++-v3/testsuite/19_diagnostics/error_code/operators/not_equal.cc", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/83588991c1d625a7127af35abeee9b094df95dc6/libstdc%2B%2B-v3%2Ftestsuite%2F19_diagnostics%2Ferror_code%2Foperators%2Fnot_equal.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/83588991c1d625a7127af35abeee9b094df95dc6/libstdc%2B%2B-v3%2Ftestsuite%2F19_diagnostics%2Ferror_code%2Foperators%2Fnot_equal.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F19_diagnostics%2Ferror_code%2Foperators%2Fnot_equal.cc?ref=83588991c1d625a7127af35abeee9b094df95dc6", "patch": "@@ -26,9 +26,9 @@ namespace __gnu_test\n {\n   struct test_category : public std::error_category\n   { \n-    virtual std::posix_errno \n+    virtual std::posix_error::posix_errno \n     posix(int __v) const\n-    { return std::posix_errno(__v); }\n+    { return std::posix_error::posix_errno(__v); }\n \n     virtual const std::string& \n     name() const \n@@ -45,7 +45,7 @@ int main()\n   bool test __attribute__((unused)) = true;\n \n   std::error_code e1;\n-  std::error_code e2(std::operation_not_supported);\n+  std::error_code e2(std::posix_error::operation_not_supported);\n \n   VERIFY( !(e1 != e1) );\n   VERIFY( e1 != e2 );"}, {"sha": "d682a64a12881dd3fc105918da71a6711c12e16f", "filename": "libstdc++-v3/testsuite/19_diagnostics/headers/system_error/34538.cc", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/83588991c1d625a7127af35abeee9b094df95dc6/libstdc%2B%2B-v3%2Ftestsuite%2F19_diagnostics%2Fheaders%2Fsystem_error%2F34538.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/83588991c1d625a7127af35abeee9b094df95dc6/libstdc%2B%2B-v3%2Ftestsuite%2F19_diagnostics%2Fheaders%2Fsystem_error%2F34538.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F19_diagnostics%2Fheaders%2Fsystem_error%2F34538.cc?ref=83588991c1d625a7127af35abeee9b094df95dc6", "patch": "@@ -0,0 +1,29 @@\n+// { dg-options \"-std=gnu++0x\" }\n+// { dg-do compile }\n+\n+// Copyright (C) 2007 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+#include <stdexcept>\n+#include <system_error>\n+\n+// libstdc++/34538\n+int main()\n+{\n+  throw std::invalid_argument(\"foo\");\n+}"}, {"sha": "31b6d4bf531eac18b8d0dd5e62868832b282d99a", "filename": "libstdc++-v3/testsuite/19_diagnostics/headers/system_error/types_std_c++0x.cc", "status": "modified", "additions": 80, "deletions": 80, "changes": 160, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/83588991c1d625a7127af35abeee9b094df95dc6/libstdc%2B%2B-v3%2Ftestsuite%2F19_diagnostics%2Fheaders%2Fsystem_error%2Ftypes_std_c%2B%2B0x.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/83588991c1d625a7127af35abeee9b094df95dc6/libstdc%2B%2B-v3%2Ftestsuite%2F19_diagnostics%2Fheaders%2Fsystem_error%2Ftypes_std_c%2B%2B0x.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F19_diagnostics%2Fheaders%2Fsystem_error%2Ftypes_std_c%2B%2B0x.cc?ref=83588991c1d625a7127af35abeee9b094df95dc6", "patch": "@@ -28,127 +28,127 @@ namespace gnu\n   using std::error_category;\n   using std::system_category;\n \n-  using std::posix_errno;\n-  using std::address_family_not_supported;\n-  using std::address_in_use;\n-  using std::address_not_available;\n-  using std::already_connected;\n-  using std::argument_list_too_long;\n-  using std::argument_out_of_domain;\n-  using std:: bad_address;\n-  using std::bad_file_descriptor;\n+  using std::posix_error::posix_errno;\n+  using std::posix_error::address_family_not_supported;\n+  using std::posix_error::address_in_use;\n+  using std::posix_error::address_not_available;\n+  using std::posix_error::already_connected;\n+  using std::posix_error::argument_list_too_long;\n+  using std::posix_error::argument_out_of_domain;\n+  using std::posix_error::bad_address;\n+  using std::posix_error::bad_file_descriptor;\n \n #ifdef _GLIBCXX_HAVE_EBADMSG\n-  using std::bad_message;\n+  using std::posix_error::bad_message;\n #endif\n \n-  using std::broken_pipe;\n-  using std::connection_aborted;\n-  using std::connection_already_in_progress; \n-  using std::connection_refused; \n-  using std::connection_reset; \n-  using std::cross_device_link; \n-  using std::destination_address_required;\n-  using std::device_or_resource_busy;\n-  using std::directory_not_empty; \n-  using std::executable_format_error;\n-  using std::file_exists;\n-  using std::file_too_large; \t\n-  using std::filename_too_long;\n-  using std::function_not_supported; \n-  using std::host_unreachable; \n-  using std::identifier_removed;\n-  using std::illegal_byte_sequence; \n-  using std::inappropriate_io_control_operation; \n-  using std::interrupted; \n-  using std::invalid_argument;\n-  using std::invalid_seek; \n-  using std::io_error; \n-  using std::is_a_directory; \n-  using std::message_size; \n-  using std::network_down; \n-  using std::network_reset;\n-  using std::network_unreachable; \n-  using std::no_buffer_space; \n-  using std::no_child_process;\n+  using std::posix_error::broken_pipe;\n+  using std::posix_error::connection_aborted;\n+  using std::posix_error::connection_already_in_progress; \n+  using std::posix_error::connection_refused; \n+  using std::posix_error::connection_reset; \n+  using std::posix_error::cross_device_link; \n+  using std::posix_error::destination_address_required;\n+  using std::posix_error::device_or_resource_busy;\n+  using std::posix_error::directory_not_empty; \n+  using std::posix_error::executable_format_error;\n+  using std::posix_error::file_exists;\n+  using std::posix_error::file_too_large; \t\n+  using std::posix_error::filename_too_long;\n+  using std::posix_error::function_not_supported; \n+  using std::posix_error::host_unreachable; \n+  using std::posix_error::identifier_removed;\n+  using std::posix_error::illegal_byte_sequence; \n+  using std::posix_error::inappropriate_io_control_operation; \n+  using std::posix_error::interrupted; \n+  using std::posix_error::invalid_argument;\n+  using std::posix_error::invalid_seek; \n+  using std::posix_error::io_error; \n+  using std::posix_error::is_a_directory; \n+  using std::posix_error::message_size; \n+  using std::posix_error::network_down; \n+  using std::posix_error::network_reset;\n+  using std::posix_error::network_unreachable; \n+  using std::posix_error::no_buffer_space; \n+  using std::posix_error::no_child_process;\n \n #ifdef _GLIBCXX_HAVE_ENOLINK\n-  using std::no_link; \n+  using std::posix_error::no_link; \n #endif\n \n-  using std::no_lock_available; \n+  using std::posix_error::no_lock_available; \n \n #ifdef _GLIBCXX_HAVE_ENODATA\n-  using std::no_message_available; \n+  using std::posix_error::no_message_available; \n #endif\n \n-  using std::no_message; \n-  using std::no_posix_equivalent; \n-  using std::no_protocol_option; \n-  using std::no_space_on_device;\n+  using std::posix_error::no_message; \n+  using std::posix_error::no_posix_equivalent; \n+  using std::posix_error::no_protocol_option; \n+  using std::posix_error::no_space_on_device;\n \n #ifdef _GLIBCXX_HAVE_ENOSR\n-  using std::no_stream_resources; \n+  using std::posix_error::no_stream_resources; \n #endif\n \n-  using std::no_such_device_or_address; \n-  using std::no_such_device; \t\n-  using std::no_such_file_or_directory; \n-  using std::no_such_process; \t\n-  using std::not_a_directory; \n-  using std::not_a_socket; \n+  using std::posix_error::no_such_device_or_address; \n+  using std::posix_error::no_such_device; \t\n+  using std::posix_error::no_such_file_or_directory; \n+  using std::posix_error::no_such_process; \t\n+  using std::posix_error::not_a_directory; \n+  using std::posix_error::not_a_socket; \n \n #ifdef _GLIBCXX_HAVE_ENOSTR\n-  using std::not_a_stream; \n+  using std::posix_error::not_a_stream; \n #endif\n \n-  using std::not_connected; \n-  using std::not_enough_memory;\n-  using std::not_supported;\n+  using std::posix_error::not_connected; \n+  using std::posix_error::not_enough_memory;\n+  using std::posix_error::not_supported;\n \n #ifdef _GLIBCXX_HAVE_ECANCELED\n-  using std::operation_canceled;\n+  using std::posix_error::operation_canceled;\n #endif\n \n-  using std::operation_in_progress;\n-  using std::operation_not_permitted;\n-  using std::operation_not_supported;\n-  using std::operation_would_block;\n+  using std::posix_error::operation_in_progress;\n+  using std::posix_error::operation_not_permitted;\n+  using std::posix_error::operation_not_supported;\n+  using std::posix_error::operation_would_block;\n \n #ifdef _GLIBCXX_HAVE_EOWNERDEAD\n-  using std::owner_dead; \n+  using std::posix_error::owner_dead; \n #endif\n \n-  using std::permission_denied;\n+  using std::posix_error::permission_denied;\n \n #ifdef _GLIBCXX_HAVE_EPROTO\n-  using std::protocol_error; \n+  using std::posix_error::protocol_error; \n #endif\n \n-  using std::protocol_not_supported;\n-  using std::read_only_file_system; \n-  using std::resource_deadlock_would_occur;\n-  using std::resource_unavailable_try_again; \n-  using std::result_out_of_range;\n+  using std::posix_error::protocol_not_supported;\n+  using std::posix_error::read_only_file_system; \n+  using std::posix_error::resource_deadlock_would_occur;\n+  using std::posix_error::resource_unavailable_try_again; \n+  using std::posix_error::result_out_of_range;\n \n #ifdef _GLIBCXX_HAVE_ENOTRECOVERABLE\n-  using std::state_not_recoverable; \n+  using std::posix_error::state_not_recoverable; \n #endif\n \n #ifdef _GLIBCXX_HAVE_ETIME\n-  using std::stream_timeout; \n+  using std::posix_error::stream_timeout; \n #endif\n \n-  using std::text_file_busy; \n-  using std::timed_out; \n-  using std::too_many_files_open_in_system; \n-  using std::too_many_files_open; \n-  using std::too_many_links; \t\n-  using std::too_many_synbolic_link_levels; \n+  using std::posix_error::text_file_busy; \n+  using std::posix_error::timed_out; \n+  using std::posix_error::too_many_files_open_in_system; \n+  using std::posix_error::too_many_files_open; \n+  using std::posix_error::too_many_links; \t\n+  using std::posix_error::too_many_synbolic_link_levels; \n \n #ifdef _GLIBCXX_HAVE_EOVERFLOW\n-  using std::value_too_large; \n+  using std::posix_error::value_too_large; \n #endif\n \n-  using std::wrong_protocol_type;\n+  using std::posix_error::wrong_protocol_type;\n }"}, {"sha": "2885dad27235d5363dc0535e16d03daefdfa38a4", "filename": "libstdc++-v3/testsuite/19_diagnostics/system_error/cons-1.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/83588991c1d625a7127af35abeee9b094df95dc6/libstdc%2B%2B-v3%2Ftestsuite%2F19_diagnostics%2Fsystem_error%2Fcons-1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/83588991c1d625a7127af35abeee9b094df95dc6/libstdc%2B%2B-v3%2Ftestsuite%2F19_diagnostics%2Fsystem_error%2Fcons-1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F19_diagnostics%2Fsystem_error%2Fcons-1.cc?ref=83588991c1d625a7127af35abeee9b094df95dc6", "patch": "@@ -27,7 +27,7 @@ int main()\n {\n   bool test __attribute__((unused)) = true;\n   const std::string s(\"too late: boulangerie out of pain au raisin\");\n-  const std::error_code e(std::operation_not_supported);\n+  const std::error_code e(std::posix_error::operation_not_supported);\n \n   // 1\n   {"}, {"sha": "89570f047211d0c85c4d07b4af7d34d60b617c35", "filename": "libstdc++-v3/testsuite/19_diagnostics/system_error/what-4.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/83588991c1d625a7127af35abeee9b094df95dc6/libstdc%2B%2B-v3%2Ftestsuite%2F19_diagnostics%2Fsystem_error%2Fwhat-4.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/83588991c1d625a7127af35abeee9b094df95dc6/libstdc%2B%2B-v3%2Ftestsuite%2F19_diagnostics%2Fsystem_error%2Fwhat-4.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F19_diagnostics%2Fsystem_error%2Fwhat-4.cc?ref=83588991c1d625a7127af35abeee9b094df95dc6", "patch": "@@ -32,7 +32,7 @@ void test01()\n   bool test __attribute__((unused)) = true;\n   std::string s(\"after nine thirty, this request cannot be met\");\n \n-  std::system_error obj = std::system_error(s, std::invalid_argument);\n+  std::system_error obj = std::system_error(s, std::posix_error::invalid_argument);\n   std::string s1(obj.what());\n   std::string s2(obj.what());\n   VERIFY( s1 == s2 );"}, {"sha": "71c93e8d1b924ee8210c3f324aeb825efaf4ac72", "filename": "libstdc++-v3/testsuite/27_io/basic_ostream/inserters_other/char/error_code.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/83588991c1d625a7127af35abeee9b094df95dc6/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_ostream%2Finserters_other%2Fchar%2Ferror_code.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/83588991c1d625a7127af35abeee9b094df95dc6/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_ostream%2Finserters_other%2Fchar%2Ferror_code.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_ostream%2Finserters_other%2Fchar%2Ferror_code.cc?ref=83588991c1d625a7127af35abeee9b094df95dc6", "patch": "@@ -32,7 +32,7 @@ void test()\n \n   char buf[64];\n   error_code e1;\n-  error_code e2(bad_address);\n+  error_code e2(posix_error::bad_address);\n   string s, s1, s2;\n \n   {"}, {"sha": "73c838b4399fdbb87cf089d2de985b647a4f3c68", "filename": "libstdc++-v3/testsuite/27_io/basic_ostream/inserters_other/wchar_t/error_code.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/83588991c1d625a7127af35abeee9b094df95dc6/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_ostream%2Finserters_other%2Fwchar_t%2Ferror_code.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/83588991c1d625a7127af35abeee9b094df95dc6/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_ostream%2Finserters_other%2Fwchar_t%2Ferror_code.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_ostream%2Finserters_other%2Fwchar_t%2Ferror_code.cc?ref=83588991c1d625a7127af35abeee9b094df95dc6", "patch": "@@ -33,7 +33,7 @@ void test()\n \n   wchar_t buf[64];\n   error_code e1;\n-  error_code e2(bad_address);\n+  error_code e2(posix_error::bad_address);\n   wstring s, s1, s2;\n \n   {"}]}