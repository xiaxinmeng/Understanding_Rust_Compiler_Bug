{"sha": "c985705ae91243bdabd4d828365017ef264bbd91", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Yzk4NTcwNWFlOTEyNDNiZGFiZDRkODI4MzY1MDE3ZWYyNjRiYmQ5MQ==", "commit": {"author": {"name": "David Malcolm", "email": "dmalcolm@redhat.com", "date": "2014-12-01T15:58:11Z"}, "committer": {"name": "David Malcolm", "email": "dmalcolm@gcc.gnu.org", "date": "2014-12-01T15:58:11Z"}, "message": "PR jit/63969: Fix segfault in error-handling when driver isn't found\n\ngcc/jit/ChangeLog:\n\tPR jit/63969\n\t* jit-playback.c: Ensure that ctxt_progname is non-NULL.\n\ngcc/testsuite/ChangeLog:\n\tPR jit/63969\n\t* jit.dg/harness.h (CHECK_STRING_STARTS_WITH): New.\n\t(check_string_starts_with): New.\n\t* jit.dg/test-error-pr63969-missing-driver.c: New.\n\nFrom-SVN: r218226", "tree": {"sha": "b68a1a2418f0312b0d2fcf8079fb1e32fefd48aa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b68a1a2418f0312b0d2fcf8079fb1e32fefd48aa"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c985705ae91243bdabd4d828365017ef264bbd91", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c985705ae91243bdabd4d828365017ef264bbd91", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c985705ae91243bdabd4d828365017ef264bbd91", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c985705ae91243bdabd4d828365017ef264bbd91/comments", "author": {"login": "davidmalcolm", "id": 1553248, "node_id": "MDQ6VXNlcjE1NTMyNDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1553248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidmalcolm", "html_url": "https://github.com/davidmalcolm", "followers_url": "https://api.github.com/users/davidmalcolm/followers", "following_url": "https://api.github.com/users/davidmalcolm/following{/other_user}", "gists_url": "https://api.github.com/users/davidmalcolm/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidmalcolm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidmalcolm/subscriptions", "organizations_url": "https://api.github.com/users/davidmalcolm/orgs", "repos_url": "https://api.github.com/users/davidmalcolm/repos", "events_url": "https://api.github.com/users/davidmalcolm/events{/privacy}", "received_events_url": "https://api.github.com/users/davidmalcolm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "81f263694d6451a17f7d6d3753fae85a01243619", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/81f263694d6451a17f7d6d3753fae85a01243619", "html_url": "https://github.com/Rust-GCC/gccrs/commit/81f263694d6451a17f7d6d3753fae85a01243619"}], "stats": {"total": 90, "additions": 88, "deletions": 2}, "files": [{"sha": "9555e729dd7988199f92040ea537aee594583c2f", "filename": "gcc/jit/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c985705ae91243bdabd4d828365017ef264bbd91/gcc%2Fjit%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c985705ae91243bdabd4d828365017ef264bbd91/gcc%2Fjit%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjit%2FChangeLog?ref=c985705ae91243bdabd4d828365017ef264bbd91", "patch": "@@ -1,3 +1,8 @@\n+2014-12-01  David Malcolm  <dmalcolm@redhat.com>\n+\n+\tPR jit/63969\n+\t* jit-playback.c: Ensure that ctxt_progname is non-NULL.\n+\n 2014-11-19  David Malcolm  <dmalcolm@redhat.com>\n \n \tPR jit/63854"}, {"sha": "584a8e63759c0a956e0a2e81c1631f2202f77b5f", "filename": "gcc/jit/jit-playback.c", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c985705ae91243bdabd4d828365017ef264bbd91/gcc%2Fjit%2Fjit-playback.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c985705ae91243bdabd4d828365017ef264bbd91/gcc%2Fjit%2Fjit-playback.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjit%2Fjit-playback.c?ref=c985705ae91243bdabd4d828365017ef264bbd91", "patch": "@@ -1571,9 +1571,11 @@ compile ()\n   /* Pass in user-provided program name as argv0, if any, so that it\n      makes it into GCC's \"progname\" global, used in various diagnostics. */\n   ctxt_progname = get_str_option (GCC_JIT_STR_OPTION_PROGNAME);\n-  fake_args[0] =\n-    (ctxt_progname ? ctxt_progname : \"libgccjit.so\");\n \n+  if (!ctxt_progname)\n+    ctxt_progname = \"libgccjit.so\";\n+\n+  fake_args[0] = ctxt_progname;\n   fake_args[1] = m_path_c_file;\n   num_args = 2;\n \n@@ -1689,6 +1691,9 @@ compile ()\n     /* pex argv arrays are NULL-terminated.  */\n     argv[6] = NULL;\n \n+    /* pex_one's error-handling requires pname to be non-NULL.  */\n+    gcc_assert (ctxt_progname);\n+\n     errmsg = pex_one (PEX_SEARCH, /* int flags, */\n \t\t      gcc_driver_name,\n \t\t      const_cast<char * const *> (argv),"}, {"sha": "d86e406ef3f86c64ec8e868e36c5ae26209ee7b3", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c985705ae91243bdabd4d828365017ef264bbd91/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c985705ae91243bdabd4d828365017ef264bbd91/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=c985705ae91243bdabd4d828365017ef264bbd91", "patch": "@@ -1,3 +1,10 @@\n+2014-12-01  David Malcolm  <dmalcolm@redhat.com>\n+\n+\tPR jit/63969\n+\t* jit.dg/harness.h (CHECK_STRING_STARTS_WITH): New.\n+\t(check_string_starts_with): New.\n+\t* jit.dg/test-error-pr63969-missing-driver.c: New.\n+\n 2014-12-01  David Malcolm  <dmalcolm@redhat.com>\n \n \t* jit.dg/jit.exp (jit-dg-test): Use $name rathen than $prog"}, {"sha": "bff64de020140d491b608ef0ebd25c95d9de5ef2", "filename": "gcc/testsuite/jit.dg/harness.h", "status": "modified", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c985705ae91243bdabd4d828365017ef264bbd91/gcc%2Ftestsuite%2Fjit.dg%2Fharness.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c985705ae91243bdabd4d828365017ef264bbd91/gcc%2Ftestsuite%2Fjit.dg%2Fharness.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fjit.dg%2Fharness.h?ref=c985705ae91243bdabd4d828365017ef264bbd91", "patch": "@@ -81,6 +81,9 @@ static char test[1024];\n #define CHECK_STRING_VALUE(ACTUAL, EXPECTED) \\\n   check_string_value ((ACTUAL), (EXPECTED));\n \n+#define CHECK_STRING_STARTS_WITH(ACTUAL, EXPECTED_PREFIX) \\\n+  check_string_starts_with ((ACTUAL), (EXPECTED_PREFIX));\n+\n #define CHECK(COND) \\\n   do {\t\t\t\t\t\\\n     if (COND)\t\t\t\t\\\n@@ -103,6 +106,10 @@ verify_code (gcc_jit_context *ctxt, gcc_jit_result *result);\n \n extern void check_string_value (const char *actual, const char *expected);\n \n+extern void\n+check_string_starts_with (const char *actual,\n+\t\t\t  const char *expected_prefix);\n+\n /* Implement framework needed for turning the testcase hooks into an\n    executable.  test-combination.c and test-threads.c each combine multiple\n    testcases into larger testcases, so we have COMBINED_TEST as a way of\n@@ -137,6 +144,30 @@ void check_string_value (const char *actual, const char *expected)\n       pass (\"%s: actual: NULL == expected: NULL\");\n }\n \n+void\n+check_string_starts_with (const char *actual,\n+\t\t\t  const char *expected_prefix)\n+{\n+  if (!actual)\n+    {\n+      fail (\"%s: actual: NULL != expected prefix: \\\"%s\\\"\",\n+\t    test, expected_prefix);\n+      fprintf (stderr, \"incorrect value\\n\");\n+      abort ();\n+    }\n+\n+  if (strncmp (actual, expected_prefix, strlen (expected_prefix)))\n+    {\n+      fail (\"%s: actual: \\\"%s\\\" did not begin with expected prefix: \\\"%s\\\"\",\n+\t    test, actual, expected_prefix);\n+      fprintf (stderr, \"incorrect value\\n\");\n+      abort ();\n+    }\n+\n+  pass (\"%s: actual: \\\"%s\\\" begins with expected prefix: \\\"%s\\\"\",\n+\ttest, actual, expected_prefix);\n+}\n+\n static void set_options (gcc_jit_context *ctxt, const char *argv0)\n {\n   /* Set up options.  */"}, {"sha": "13f5e3b5b83ba1123e9691233c4c99675946842f", "filename": "gcc/testsuite/jit.dg/test-error-pr63969-missing-driver.c", "status": "added", "additions": 38, "deletions": 0, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c985705ae91243bdabd4d828365017ef264bbd91/gcc%2Ftestsuite%2Fjit.dg%2Ftest-error-pr63969-missing-driver.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c985705ae91243bdabd4d828365017ef264bbd91/gcc%2Ftestsuite%2Fjit.dg%2Ftest-error-pr63969-missing-driver.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fjit.dg%2Ftest-error-pr63969-missing-driver.c?ref=c985705ae91243bdabd4d828365017ef264bbd91", "patch": "@@ -0,0 +1,38 @@\n+/* PR jit/63969: libgccjit would segfault inside gcc_jit_context_compile\n+   if the driver wasn't found on PATH if GCC_JIT_STR_OPTION_PROGNAME was\n+   NULL.  */\n+\n+#include <stdlib.h>\n+#include <stdio.h>\n+\n+#include \"libgccjit.h\"\n+\n+#include \"harness.h\"\n+\n+void\n+create_code (gcc_jit_context *ctxt, void *user_data)\n+{\n+  /* Create nothing within the context.  */\n+\n+  /* harness.h's set_options has set a sane value for\n+     GCC_JIT_STR_OPTION_PROGNAME, but PR jit/63969 only segfaulted if it's\n+     NULL.\n+\n+     Unset it.  */\n+  gcc_jit_context_set_str_option (ctxt, GCC_JIT_STR_OPTION_PROGNAME, NULL);\n+\n+  /* Break PATH, so that the driver can't be found\n+     by gcc::jit::playback::context::compile ()\n+     within gcc_jit_context_compile.  */\n+  unsetenv (\"PATH\");\n+}\n+\n+void\n+verify_code (gcc_jit_context *ctxt, gcc_jit_result *result)\n+{\n+  CHECK_VALUE (result, NULL);\n+\n+  /* Verify that a sane error message was emitted.  */\n+  CHECK_STRING_STARTS_WITH (gcc_jit_context_get_first_error (ctxt),\n+\t\t\t    \"error invoking gcc driver\");\n+}"}]}