{"sha": "8694a43cced5e6b11ddd3cc13a8c28f6b3cefddb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODY5NGE0M2NjZWQ1ZTZiMTFkZGQzY2MxM2E4YzI4ZjZiM2NlZmRkYg==", "commit": {"author": {"name": "Zack Weinberg", "email": "zack@gcc.gnu.org", "date": "2000-01-22T04:12:52Z"}, "committer": {"name": "Zack Weinberg", "email": "zack@gcc.gnu.org", "date": "2000-01-22T04:12:52Z"}, "message": "Another test for preprocessor corner cases\n\nFrom-SVN: r31558", "tree": {"sha": "e851acfaaa37ddf8cffa6de4c2663af33da7bb08", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e851acfaaa37ddf8cffa6de4c2663af33da7bb08"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8694a43cced5e6b11ddd3cc13a8c28f6b3cefddb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8694a43cced5e6b11ddd3cc13a8c28f6b3cefddb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8694a43cced5e6b11ddd3cc13a8c28f6b3cefddb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8694a43cced5e6b11ddd3cc13a8c28f6b3cefddb/comments", "author": null, "committer": null, "parents": [{"sha": "4cda35d4c9c295f51e6fc6a5348c8553f5e7675a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4cda35d4c9c295f51e6fc6a5348c8553f5e7675a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4cda35d4c9c295f51e6fc6a5348c8553f5e7675a"}], "stats": {"total": 28, "additions": 28, "deletions": 0}, "files": [{"sha": "dc5bf818da9ac3fa573f017f30e32081d292b17e", "filename": "gcc/testsuite/gcc.dg/lineno.c", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8694a43cced5e6b11ddd3cc13a8c28f6b3cefddb/gcc%2Ftestsuite%2Fgcc.dg%2Flineno.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8694a43cced5e6b11ddd3cc13a8c28f6b3cefddb/gcc%2Ftestsuite%2Fgcc.dg%2Flineno.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Flineno.c?ref=8694a43cced5e6b11ddd3cc13a8c28f6b3cefddb", "patch": "@@ -0,0 +1,28 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-Wwrite-strings\" } */ \n+/* The purpose of this test is to ensure that line numbers in diagnostics\n+   are accurate after macros whose arguments contain newlines and are\n+   substituted multiple times.  The semicolons are on separate lines because\n+   #line can only correct numbering on line boundaries.  */\n+#define one(x) x\n+#define two(x) x x\n+#define four(x) two(x) two(x)\n+\n+int\n+main(void)\n+{\n+  char *A;\n+\n+  A = \"text\";\t\t/* { dg-warning \"discards qualifiers\" \"case zero\" } */\n+  A = one(\"text\"\n+\t  \"text\")\n+\t;\t\t/* { dg-warning \"discards qualifiers\" \"case one\" } */\n+  A = two(\"text\"\n+\t  \"text\")\n+\t;\t\t/* { dg-warning \"discards qualifiers\" \"case two\" } */\n+  A = four(\"text\"\n+\t   \"text\")\n+\t;\t\t/* { dg-warning \"discards qualifiers\" \"case four\" } */\n+\n+  return 0;\n+}"}]}