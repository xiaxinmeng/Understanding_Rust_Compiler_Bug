{"sha": "7ba5e7464b6c75945624dceb5e4193b36b9aeaad", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2JhNWU3NDY0YjZjNzU5NDU2MjRkY2ViNWU0MTkzYjM2YjlhZWFhZA==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2020-04-03T21:34:07Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2020-06-16T13:07:12Z"}, "message": "[Ada] Fix spurious error on implicit dereference for private type\n\n2020-06-16  Eric Botcazou  <ebotcazou@adacore.com>\n\ngcc/ada/\n\n\t* sem_ch4.adb (Transform_Object_Operation): Document that it\n\tmay be partially destructive for the parent of the node.\n\t(Try_Object_Operation): Undo the changes made above on failure.", "tree": {"sha": "b8902c9a11cd83edafaf22d7235ba84df325252d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b8902c9a11cd83edafaf22d7235ba84df325252d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7ba5e7464b6c75945624dceb5e4193b36b9aeaad", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7ba5e7464b6c75945624dceb5e4193b36b9aeaad", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7ba5e7464b6c75945624dceb5e4193b36b9aeaad", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7ba5e7464b6c75945624dceb5e4193b36b9aeaad/comments", "author": null, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dae4f504c65a1c8af7db352618438910a4c69096", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dae4f504c65a1c8af7db352618438910a4c69096", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dae4f504c65a1c8af7db352618438910a4c69096"}], "stats": {"total": 22, "additions": 18, "deletions": 4}, "files": [{"sha": "1d129543473a962c52b6ba38fa069b62ec338570", "filename": "gcc/ada/sem_ch4.adb", "status": "modified", "additions": 18, "deletions": 4, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ba5e7464b6c75945624dceb5e4193b36b9aeaad/gcc%2Fada%2Fsem_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ba5e7464b6c75945624dceb5e4193b36b9aeaad/gcc%2Fada%2Fsem_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch4.adb?ref=7ba5e7464b6c75945624dceb5e4193b36b9aeaad", "patch": "@@ -8460,7 +8460,9 @@ package body Sem_Ch4 is\n       --  Transform Obj.Operation (X, Y, ...) into Operation (Obj, X, Y ...).\n       --  Call_Node is the resulting subprogram call, Node_To_Replace is\n       --  either N or the parent of N, and Subprog is a reference to the\n-      --  subprogram we are trying to match.\n+      --  subprogram we are trying to match. Note that the transformation\n+      --  may be partially destructive for the parent of N, so it needs to\n+      --  be undone in the case where Try_Object_Operation returns false.\n \n       function Try_Class_Wide_Operation\n         (Call_Node       : Node_Id;\n@@ -8731,7 +8733,7 @@ package body Sem_Ch4 is\n             --  example:\n             --            Some_Subprogram (..., Obj.Operation, ...)\n \n-            and then Name (Parent_Node) = N\n+            and then N = Name (Parent_Node)\n          then\n             Node_To_Replace := Parent_Node;\n \n@@ -9769,8 +9771,20 @@ package body Sem_Ch4 is\n          return True;\n \n       else\n-         --  There was no candidate operation, so report it as an error\n-         --  in the caller: Analyze_Selected_Component.\n+         --  There was no candidate operation, but Analyze_Selected_Component\n+         --  may continue the analysis so we need to undo the change possibly\n+         --  made to the Parent of N earlier by Transform_Object_Operation.\n+\n+         declare\n+            Parent_Node : constant Node_Id := Parent (N);\n+\n+         begin\n+            if Node_To_Replace = Parent_Node then\n+               Remove (First (Parameter_Associations (New_Call_Node)));\n+               Set_Parent\n+                 (Parameter_Associations (New_Call_Node), Parent_Node);\n+            end if;\n+         end;\n \n          return False;\n       end if;"}]}