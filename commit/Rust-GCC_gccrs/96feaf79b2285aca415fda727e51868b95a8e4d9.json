{"sha": "96feaf79b2285aca415fda727e51868b95a8e4d9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTZmZWFmNzliMjI4NWFjYTQxNWZkYTcyN2U1MTg2OGI5NWE4ZTRkOQ==", "commit": {"author": {"name": "Jim Wilson", "email": "jim.wilson@linaro.org", "date": "2017-06-07T01:55:12Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "2017-06-07T01:55:12Z"}, "message": "Remove aarch32 support for falkor/qdf24xx, not in released hardware.\n\n\tgcc/\n\t* config/aarch64/aarch64-cost-tables.h (qdf24xx_extra_costs): Move to\n\there.\n\t* config/arm/aarch-cost-tables.h (qdf24xx_extra_costs): From here.\n\t* config/arm/arm-cpu-cdata.h: Regenerate.\n\t* config/arm/arm-cpu-data.h, config/arm/arm-cpu.h: Likewise.\n\t* config/arm/arm-tables.opt, config/arm/arm-tune.md: Likewise.\n\t* config/arm/arm-cpus.in: Delete falkor and qdf24xx entries.\n\t* config/arm/arm.c (arm_qdf24xx_tune): Delete.\n\t* config/arm/bpabi.h (BE8_LINK_SPEC): Delete falkor and qdf24xx\n\tsupport.\n\t* config/arm/t-aprofile (MULTILIB_MATCHES): Delete falkor and qdf24xx\n\tsupport.\n\t* config/arm/t-rmprofile: Likewise.\n\t* doc/invoke.texi (ARM Options): Drop falkor and qdf24xx support.\n\nFrom-SVN: r248944", "tree": {"sha": "87c713caae23c5db191221b7662ab0e27a04c07f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/87c713caae23c5db191221b7662ab0e27a04c07f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/96feaf79b2285aca415fda727e51868b95a8e4d9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/96feaf79b2285aca415fda727e51868b95a8e4d9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/96feaf79b2285aca415fda727e51868b95a8e4d9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/96feaf79b2285aca415fda727e51868b95a8e4d9/comments", "author": null, "committer": null, "parents": [{"sha": "cebf55fb450856a25940c9e02a19126b1d67083c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cebf55fb450856a25940c9e02a19126b1d67083c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cebf55fb450856a25940c9e02a19126b1d67083c"}], "stats": {"total": 326, "additions": 127, "deletions": 199}, "files": [{"sha": "519fd6258515472209b87943fe8671f5b42fc723", "filename": "gcc/ChangeLog", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96feaf79b2285aca415fda727e51868b95a8e4d9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96feaf79b2285aca415fda727e51868b95a8e4d9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=96feaf79b2285aca415fda727e51868b95a8e4d9", "patch": "@@ -1,3 +1,20 @@\n+2017-06-06  Jim Wilson  <jim.wilson@linaro.org>\n+\n+\t* config/aarch64/aarch64-cost-tables.h (qdf24xx_extra_costs): Move to\n+\there.\n+\t* config/arm/aarch-cost-tables.h (qdf24xx_extra_costs): From here.\n+\t* config/arm/arm-cpu-cdata.h: Regenerate.\n+\t* config/arm/arm-cpu-data.h, config/arm/arm-cpu.h: Likewise.\n+\t* config/arm/arm-tables.opt, config/arm/arm-tune.md: Likewise.\n+\t* config/arm/arm-cpus.in: Delete falkor and qdf24xx entries.\n+\t* config/arm/arm.c (arm_qdf24xx_tune): Delete.\n+\t* config/arm/bpabi.h (BE8_LINK_SPEC): Delete falkor and qdf24xx\n+\tsupport.\n+\t* config/arm/t-aprofile (MULTILIB_MATCHES): Delete falkor and qdf24xx\n+\tsupport.\n+\t* config/arm/t-rmprofile: Likewise.\n+\t* doc/invoke.texi (ARM Options): Drop falkor and qdf24xx support.\n+\n 2017-06-06  David S. Miller  <davem@davemloft.net>\n \n \tPR target/80968"}, {"sha": "070c083beb3d92eaf3019bd1562d6b0352a95246", "filename": "gcc/config/aarch64/aarch64-cost-tables.h", "status": "modified", "additions": 105, "deletions": 3, "changes": 108, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96feaf79b2285aca415fda727e51868b95a8e4d9/gcc%2Fconfig%2Faarch64%2Faarch64-cost-tables.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96feaf79b2285aca415fda727e51868b95a8e4d9/gcc%2Fconfig%2Faarch64%2Faarch64-cost-tables.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64-cost-tables.h?ref=96feaf79b2285aca415fda727e51868b95a8e4d9", "patch": "@@ -23,7 +23,111 @@\n \n #include \"config/arm/aarch-cost-tables.h\"\n \n-/* ThunderX does not have implement AArch32.  */\n+/* QDF24xx does not implement AArch32.  */\n+const struct cpu_cost_table qdf24xx_extra_costs =\n+{\n+  /* ALU */\n+  {\n+    0,                 /* arith.  */\n+    0,                 /* logical.  */\n+    0,                 /* shift.  */\n+    0,                 /* shift_reg.  */\n+    COSTS_N_INSNS (1), /* arith_shift.  */\n+    COSTS_N_INSNS (1), /* arith_shift_reg.  */\n+    0,                 /* log_shift.  */\n+    0,                 /* log_shift_reg.  */\n+    0,                 /* extend.  */\n+    0,                 /* extend_arith.  */\n+    0,                 /* bfi.  */\n+    0,                 /* bfx.  */\n+    0,                 /* clz.  */\n+    0,\t               /* rev.  */\n+    0,                 /* non_exec.  */\n+    true               /* non_exec_costs_exec.  */\n+  },\n+  {\n+    /* MULT SImode */\n+    {\n+      COSTS_N_INSNS (2),       /* simple.  */\n+      COSTS_N_INSNS (2),       /* flag_setting.  */\n+      COSTS_N_INSNS (2),       /* extend.  */\n+      COSTS_N_INSNS (2),       /* add.  */\n+      COSTS_N_INSNS (2),       /* extend_add.  */\n+      COSTS_N_INSNS (4)       /* idiv.  */\n+    },\n+    /* MULT DImode */\n+    {\n+      COSTS_N_INSNS (3),       /* simple.  */\n+      0,                       /* flag_setting (N/A).  */\n+      COSTS_N_INSNS (3),       /* extend.  */\n+      COSTS_N_INSNS (3),       /* add.  */\n+      COSTS_N_INSNS (3),       /* extend_add.  */\n+      COSTS_N_INSNS (9)       /* idiv.  */\n+    }\n+  },\n+  /* LD/ST */\n+  {\n+    COSTS_N_INSNS (2),         /* load.  */\n+    COSTS_N_INSNS (2),         /* load_sign_extend.  */\n+    COSTS_N_INSNS (2),         /* ldrd.  */\n+    COSTS_N_INSNS (2),         /* ldm_1st.  */\n+    1,                         /* ldm_regs_per_insn_1st.  */\n+    2,                         /* ldm_regs_per_insn_subsequent.  */\n+    COSTS_N_INSNS (2),         /* loadf.  */\n+    COSTS_N_INSNS (2),         /* loadd.  */\n+    COSTS_N_INSNS (3),         /* load_unaligned.  */\n+    0,                         /* store.  */\n+    0,                         /* strd.  */\n+    0,                         /* stm_1st.  */\n+    1,                         /* stm_regs_per_insn_1st.  */\n+    2,                         /* stm_regs_per_insn_subsequent.  */\n+    0,                         /* storef.  */\n+    0,                         /* stored.  */\n+    COSTS_N_INSNS (1),         /* store_unaligned.  */\n+    COSTS_N_INSNS (1),         /* loadv.  */\n+    COSTS_N_INSNS (1)          /* storev.  */\n+  },\n+  {\n+    /* FP SFmode */\n+    {\n+      COSTS_N_INSNS (6),      /* div.  */\n+      COSTS_N_INSNS (5),       /* mult.  */\n+      COSTS_N_INSNS (5),       /* mult_addsub. */\n+      COSTS_N_INSNS (5),       /* fma.  */\n+      COSTS_N_INSNS (3),       /* addsub.  */\n+      COSTS_N_INSNS (1),       /* fpconst. */\n+      COSTS_N_INSNS (1),       /* neg.  */\n+      COSTS_N_INSNS (2),       /* compare.  */\n+      COSTS_N_INSNS (4),       /* widen.  */\n+      COSTS_N_INSNS (4),       /* narrow.  */\n+      COSTS_N_INSNS (4),       /* toint.  */\n+      COSTS_N_INSNS (4),       /* fromint.  */\n+      COSTS_N_INSNS (2)        /* roundint.  */\n+    },\n+    /* FP DFmode */\n+    {\n+      COSTS_N_INSNS (11),      /* div.  */\n+      COSTS_N_INSNS (6),       /* mult.  */\n+      COSTS_N_INSNS (6),       /* mult_addsub.  */\n+      COSTS_N_INSNS (6),       /* fma.  */\n+      COSTS_N_INSNS (3),       /* addsub.  */\n+      COSTS_N_INSNS (1),       /* fpconst.  */\n+      COSTS_N_INSNS (1),       /* neg.  */\n+      COSTS_N_INSNS (2),       /* compare.  */\n+      COSTS_N_INSNS (4),       /* widen.  */\n+      COSTS_N_INSNS (4),       /* narrow.  */\n+      COSTS_N_INSNS (4),       /* toint.  */\n+      COSTS_N_INSNS (4),       /* fromint.  */\n+      COSTS_N_INSNS (2)        /* roundint.  */\n+    }\n+  },\n+  /* Vector */\n+  {\n+    COSTS_N_INSNS (1)  /* alu.  */\n+  }\n+};\n+\n+/* ThunderX does not implement AArch32.  */\n const struct cpu_cost_table thunderx_extra_costs =\n {\n   /* ALU */\n@@ -230,6 +334,4 @@ const struct cpu_cost_table thunderx2t99_extra_costs =\n   }\n };\n \n-\n #endif\n-"}, {"sha": "da8ca1b989cdbe5035372a183648179bf7cc65af", "filename": "gcc/config/arm/aarch-cost-tables.h", "status": "modified", "additions": 0, "deletions": 103, "changes": 103, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96feaf79b2285aca415fda727e51868b95a8e4d9/gcc%2Fconfig%2Farm%2Faarch-cost-tables.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96feaf79b2285aca415fda727e51868b95a8e4d9/gcc%2Fconfig%2Farm%2Faarch-cost-tables.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Faarch-cost-tables.h?ref=96feaf79b2285aca415fda727e51868b95a8e4d9", "patch": "@@ -537,107 +537,4 @@ const struct cpu_cost_table xgene1_extra_costs =\n   }\n };\n \n-const struct cpu_cost_table qdf24xx_extra_costs =\n-{\n-  /* ALU */\n-  {\n-    0,                 /* arith.  */\n-    0,                 /* logical.  */\n-    0,                 /* shift.  */\n-    0,                 /* shift_reg.  */\n-    COSTS_N_INSNS (1), /* arith_shift.  */\n-    COSTS_N_INSNS (1), /* arith_shift_reg.  */\n-    0,                 /* log_shift.  */\n-    0,                 /* log_shift_reg.  */\n-    0,                 /* extend.  */\n-    0,                 /* extend_arith.  */\n-    0,                 /* bfi.  */\n-    0,                 /* bfx.  */\n-    0,                 /* clz.  */\n-    0,\t               /* rev.  */\n-    0,                 /* non_exec.  */\n-    true               /* non_exec_costs_exec.  */\n-  },\n-  {\n-    /* MULT SImode */\n-    {\n-      COSTS_N_INSNS (2),       /* simple.  */\n-      COSTS_N_INSNS (2),       /* flag_setting.  */\n-      COSTS_N_INSNS (2),       /* extend.  */\n-      COSTS_N_INSNS (2),       /* add.  */\n-      COSTS_N_INSNS (2),       /* extend_add.  */\n-      COSTS_N_INSNS (4)       /* idiv.  */\n-    },\n-    /* MULT DImode */\n-    {\n-      COSTS_N_INSNS (3),       /* simple.  */\n-      0,                       /* flag_setting (N/A).  */\n-      COSTS_N_INSNS (3),       /* extend.  */\n-      COSTS_N_INSNS (3),       /* add.  */\n-      COSTS_N_INSNS (3),       /* extend_add.  */\n-      COSTS_N_INSNS (9)       /* idiv.  */\n-    }\n-  },\n-  /* LD/ST */\n-  {\n-    COSTS_N_INSNS (2),         /* load.  */\n-    COSTS_N_INSNS (2),         /* load_sign_extend.  */\n-    COSTS_N_INSNS (2),         /* ldrd.  */\n-    COSTS_N_INSNS (2),         /* ldm_1st.  */\n-    1,                         /* ldm_regs_per_insn_1st.  */\n-    2,                         /* ldm_regs_per_insn_subsequent.  */\n-    COSTS_N_INSNS (2),         /* loadf.  */\n-    COSTS_N_INSNS (2),         /* loadd.  */\n-    COSTS_N_INSNS (3),         /* load_unaligned.  */\n-    0,                         /* store.  */\n-    0,                         /* strd.  */\n-    0,                         /* stm_1st.  */\n-    1,                         /* stm_regs_per_insn_1st.  */\n-    2,                         /* stm_regs_per_insn_subsequent.  */\n-    0,                         /* storef.  */\n-    0,                         /* stored.  */\n-    COSTS_N_INSNS (1),         /* store_unaligned.  */\n-    COSTS_N_INSNS (1),         /* loadv.  */\n-    COSTS_N_INSNS (1)          /* storev.  */\n-  },\n-  {\n-    /* FP SFmode */\n-    {\n-      COSTS_N_INSNS (6),      /* div.  */\n-      COSTS_N_INSNS (5),       /* mult.  */\n-      COSTS_N_INSNS (5),       /* mult_addsub. */\n-      COSTS_N_INSNS (5),       /* fma.  */\n-      COSTS_N_INSNS (3),       /* addsub.  */\n-      COSTS_N_INSNS (1),       /* fpconst. */\n-      COSTS_N_INSNS (1),       /* neg.  */\n-      COSTS_N_INSNS (2),       /* compare.  */\n-      COSTS_N_INSNS (4),       /* widen.  */\n-      COSTS_N_INSNS (4),       /* narrow.  */\n-      COSTS_N_INSNS (4),       /* toint.  */\n-      COSTS_N_INSNS (4),       /* fromint.  */\n-      COSTS_N_INSNS (2)        /* roundint.  */\n-    },\n-    /* FP DFmode */\n-    {\n-      COSTS_N_INSNS (11),      /* div.  */\n-      COSTS_N_INSNS (6),       /* mult.  */\n-      COSTS_N_INSNS (6),       /* mult_addsub.  */\n-      COSTS_N_INSNS (6),       /* fma.  */\n-      COSTS_N_INSNS (3),       /* addsub.  */\n-      COSTS_N_INSNS (1),       /* fpconst.  */\n-      COSTS_N_INSNS (1),       /* neg.  */\n-      COSTS_N_INSNS (2),       /* compare.  */\n-      COSTS_N_INSNS (4),       /* widen.  */\n-      COSTS_N_INSNS (4),       /* narrow.  */\n-      COSTS_N_INSNS (4),       /* toint.  */\n-      COSTS_N_INSNS (4),       /* fromint.  */\n-      COSTS_N_INSNS (2)        /* roundint.  */\n-    }\n-  },\n-  /* Vector */\n-  {\n-    COSTS_N_INSNS (1)  /* alu.  */\n-  }\n-};\n-\n #endif /* GCC_AARCH_COST_TABLES_H */"}, {"sha": "b00d83302f6473583e291b16ddb05e3d9ed8f1b6", "filename": "gcc/config/arm/arm-cpu-cdata.h", "status": "modified", "additions": 0, "deletions": 14, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96feaf79b2285aca415fda727e51868b95a8e4d9/gcc%2Fconfig%2Farm%2Farm-cpu-cdata.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96feaf79b2285aca415fda727e51868b95a8e4d9/gcc%2Fconfig%2Farm%2Farm-cpu-cdata.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm-cpu-cdata.h?ref=96feaf79b2285aca415fda727e51868b95a8e4d9", "patch": "@@ -739,20 +739,6 @@ static const struct arm_arch_core_flag arm_arch_core_flags[] =\n       isa_nobit\n     },\n   },\n-  {\n-    \"falkor\",\n-    {\n-      ISA_ARMv8a,isa_bit_crc32,\n-      isa_nobit\n-    },\n-  },\n-  {\n-    \"qdf24xx\",\n-    {\n-      ISA_ARMv8a,isa_bit_crc32,\n-      isa_nobit\n-    },\n-  },\n   {\n     \"xgene1\",\n     {"}, {"sha": "78421adb9e5cafad1d7a5384c114daca2e2b3a8a", "filename": "gcc/config/arm/arm-cpu-data.h", "status": "modified", "additions": 0, "deletions": 22, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96feaf79b2285aca415fda727e51868b95a8e4d9/gcc%2Fconfig%2Farm%2Farm-cpu-data.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96feaf79b2285aca415fda727e51868b95a8e4d9/gcc%2Fconfig%2Farm%2Farm-cpu-data.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm-cpu-data.h?ref=96feaf79b2285aca415fda727e51868b95a8e4d9", "patch": "@@ -1143,28 +1143,6 @@ static const struct processors all_cores[] =\n     },\n     &arm_exynosm1_tune\n   },\n-  {\n-    \"falkor\",\n-    TARGET_CPU_cortexa57,\n-    (TF_LDSCHED),\n-    \"8A\", BASE_ARCH_8A,\n-    {\n-      ISA_ARMv8a,isa_bit_crc32,\n-      isa_nobit\n-    },\n-    &arm_qdf24xx_tune\n-  },\n-  {\n-    \"qdf24xx\",\n-    TARGET_CPU_cortexa57,\n-    (TF_LDSCHED),\n-    \"8A\", BASE_ARCH_8A,\n-    {\n-      ISA_ARMv8a,isa_bit_crc32,\n-      isa_nobit\n-    },\n-    &arm_qdf24xx_tune\n-  },\n   {\n     \"xgene1\",\n     TARGET_CPU_xgene1,"}, {"sha": "cc0cb0017eb784f486c352a2aab19c61bc6c1eac", "filename": "gcc/config/arm/arm-cpu.h", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96feaf79b2285aca415fda727e51868b95a8e4d9/gcc%2Fconfig%2Farm%2Farm-cpu.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96feaf79b2285aca415fda727e51868b95a8e4d9/gcc%2Fconfig%2Farm%2Farm-cpu.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm-cpu.h?ref=96feaf79b2285aca415fda727e51868b95a8e4d9", "patch": "@@ -123,8 +123,6 @@ enum processor_type\n   TARGET_CPU_cortexa72,\n   TARGET_CPU_cortexa73,\n   TARGET_CPU_exynosm1,\n-  TARGET_CPU_falkor,\n-  TARGET_CPU_qdf24xx,\n   TARGET_CPU_xgene1,\n   TARGET_CPU_cortexa57cortexa53,\n   TARGET_CPU_cortexa72cortexa53,"}, {"sha": "1100f3a5411ad4d324862b823e77d96a3baa5dad", "filename": "gcc/config/arm/arm-cpus.in", "status": "modified", "additions": 0, "deletions": 14, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96feaf79b2285aca415fda727e51868b95a8e4d9/gcc%2Fconfig%2Farm%2Farm-cpus.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96feaf79b2285aca415fda727e51868b95a8e4d9/gcc%2Fconfig%2Farm%2Farm-cpus.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm-cpus.in?ref=96feaf79b2285aca415fda727e51868b95a8e4d9", "patch": "@@ -1020,20 +1020,6 @@ begin cpu exynos-m1\n  costs exynosm1\n end cpu exynos-m1\n \n-begin cpu falkor\n- tune for cortex-a57\n- tune flags LDSCHED\n- architecture armv8-a+crc\n- costs qdf24xx\n-end cpu falkor\n-\n-begin cpu qdf24xx\n- tune for cortex-a57\n- tune flags LDSCHED\n- architecture armv8-a+crc\n- costs qdf24xx\n-end cpu qdf24xx\n-\n begin cpu xgene1\n  tune flags LDSCHED\n  architecture armv8-a"}, {"sha": "cb45e097c90b7d88b23e9e4746b0a6ac48420f9c", "filename": "gcc/config/arm/arm-tables.opt", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96feaf79b2285aca415fda727e51868b95a8e4d9/gcc%2Fconfig%2Farm%2Farm-tables.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96feaf79b2285aca415fda727e51868b95a8e4d9/gcc%2Fconfig%2Farm%2Farm-tables.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm-tables.opt?ref=96feaf79b2285aca415fda727e51868b95a8e4d9", "patch": "@@ -327,12 +327,6 @@ Enum(processor_type) String(cortex-a73) Value( TARGET_CPU_cortexa73)\n EnumValue\n Enum(processor_type) String(exynos-m1) Value( TARGET_CPU_exynosm1)\n \n-EnumValue\n-Enum(processor_type) String(falkor) Value( TARGET_CPU_falkor)\n-\n-EnumValue\n-Enum(processor_type) String(qdf24xx) Value( TARGET_CPU_qdf24xx)\n-\n EnumValue\n Enum(processor_type) String(xgene1) Value( TARGET_CPU_xgene1)\n "}, {"sha": "6252d42d4d8eb7e4b77ca5d7c3e667b76e32abc6", "filename": "gcc/config/arm/arm-tune.md", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96feaf79b2285aca415fda727e51868b95a8e4d9/gcc%2Fconfig%2Farm%2Farm-tune.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96feaf79b2285aca415fda727e51868b95a8e4d9/gcc%2Fconfig%2Farm%2Farm-tune.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm-tune.md?ref=96feaf79b2285aca415fda727e51868b95a8e4d9", "patch": "@@ -54,8 +54,7 @@\n \tcortexm3,marvell_pj4,cortexa15cortexa7,\n \tcortexa17cortexa7,cortexa32,cortexa35,\n \tcortexa53,cortexa57,cortexa72,\n-\tcortexa73,exynosm1,falkor,\n-\tqdf24xx,xgene1,cortexa57cortexa53,\n-\tcortexa72cortexa53,cortexa73cortexa35,cortexa73cortexa53,\n-\tcortexm23,cortexm33\"\n+\tcortexa73,exynosm1,xgene1,\n+\tcortexa57cortexa53,cortexa72cortexa53,cortexa73cortexa35,\n+\tcortexa73cortexa53,cortexm23,cortexm33\"\n \t(const (symbol_ref \"((enum attr_tune) arm_tune)\")))"}, {"sha": "2604102c202058dae262210ecf16de33ba8efc04", "filename": "gcc/config/arm/arm.c", "status": "modified", "additions": 0, "deletions": 22, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96feaf79b2285aca415fda727e51868b95a8e4d9/gcc%2Fconfig%2Farm%2Farm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96feaf79b2285aca415fda727e51868b95a8e4d9/gcc%2Fconfig%2Farm%2Farm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.c?ref=96feaf79b2285aca415fda727e51868b95a8e4d9", "patch": "@@ -2094,28 +2094,6 @@ const struct tune_params arm_xgene1_tune =\n   tune_params::SCHED_AUTOPREF_OFF\n };\n \n-const struct tune_params arm_qdf24xx_tune =\n-{\n-  &qdf24xx_extra_costs,\n-  NULL,                                         /* Scheduler cost adjustment.  */\n-  arm_default_branch_cost,\n-  &arm_default_vec_cost,\t\t\t/* Vectorizer costs.  */\n-  1,\t\t\t\t\t\t/* Constant limit.  */\n-  2,\t\t\t\t\t\t/* Max cond insns.  */\n-  8,\t\t\t\t\t\t/* Memset max inline.  */\n-  4,\t\t\t\t\t\t/* Issue rate.  */\n-  ARM_PREFETCH_BENEFICIAL (0, -1, 64),\n-  tune_params::PREF_CONST_POOL_FALSE,\n-  tune_params::PREF_LDRD_TRUE,\n-  tune_params::LOG_OP_NON_SHORT_CIRCUIT_TRUE,\t/* Thumb.  */\n-  tune_params::LOG_OP_NON_SHORT_CIRCUIT_TRUE,\t/* ARM.  */\n-  tune_params::DISPARAGE_FLAGS_ALL,\n-  tune_params::PREF_NEON_64_FALSE,\n-  tune_params::PREF_NEON_STRINGOPS_TRUE,\n-  FUSE_OPS (tune_params::FUSE_MOVW_MOVT),\n-  tune_params::SCHED_AUTOPREF_FULL\n-};\n-\n /* Branches can be dual-issued on Cortex-A5, so conditional execution is\n    less appealing.  Set max_insns_skipped to a low value.  */\n "}, {"sha": "f9f9a9248d430b724b57a9e1465be48a177e64a3", "filename": "gcc/config/arm/bpabi.h", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96feaf79b2285aca415fda727e51868b95a8e4d9/gcc%2Fconfig%2Farm%2Fbpabi.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96feaf79b2285aca415fda727e51868b95a8e4d9/gcc%2Fconfig%2Farm%2Fbpabi.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fbpabi.h?ref=96feaf79b2285aca415fda727e51868b95a8e4d9", "patch": "@@ -79,8 +79,6 @@\n    |mcpu=cortex-a73.cortex-a35\t\t\t\t\\\n    |mcpu=cortex-a73.cortex-a53\t\t\t\t\\\n    |mcpu=exynos-m1                                      \\\n-   |mcpu=falkor\t\t\t\t\t\t\\\n-   |mcpu=qdf24xx\t\t\t\t\t\\\n    |mcpu=xgene1                                         \\\n    |mcpu=cortex-m1.small-multiply                       \\\n    |mcpu=cortex-m0.small-multiply                       \\\n@@ -118,8 +116,6 @@\n    |mcpu=cortex-a73.cortex-a35\t\t\t\t\\\n    |mcpu=cortex-a73.cortex-a53\t\t\t\t\\\n    |mcpu=exynos-m1                                      \\\n-   |mcpu=falkor\t\t\t\t\t\t\\\n-   |mcpu=qdf24xx\t\t\t\t\t\\\n    |mcpu=xgene1                                         \\\n    |mcpu=cortex-m1.small-multiply                       \\\n    |mcpu=cortex-m0.small-multiply                       \\"}, {"sha": "10e2d34062deafa76ba9a50ac5ad7a6bab69c799", "filename": "gcc/config/arm/t-aprofile", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96feaf79b2285aca415fda727e51868b95a8e4d9/gcc%2Fconfig%2Farm%2Ft-aprofile", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96feaf79b2285aca415fda727e51868b95a8e4d9/gcc%2Fconfig%2Farm%2Ft-aprofile", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Ft-aprofile?ref=96feaf79b2285aca415fda727e51868b95a8e4d9", "patch": "@@ -79,8 +79,6 @@ MULTILIB_MATCHES       += march?armv8-a=mcpu?cortex-a73\n MULTILIB_MATCHES       += march?armv8-a=mcpu?cortex-a73.cortex-a35\n MULTILIB_MATCHES       += march?armv8-a=mcpu?cortex-a73.cortex-a53\n MULTILIB_MATCHES       += march?armv8-a=mcpu?exynos-m1\n-MULTILIB_MATCHES       += march?armv8-a=mcpu?falkor\n-MULTILIB_MATCHES       += march?armv8-a=mcpu?qdf24xx\n MULTILIB_MATCHES       += march?armv8-a=mcpu?xgene1\n \n # Arch Matches"}, {"sha": "ee869b761f73e54e08bbff5236b5e28c8b4ecd98", "filename": "gcc/config/arm/t-rmprofile", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96feaf79b2285aca415fda727e51868b95a8e4d9/gcc%2Fconfig%2Farm%2Ft-rmprofile", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96feaf79b2285aca415fda727e51868b95a8e4d9/gcc%2Fconfig%2Farm%2Ft-rmprofile", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Ft-rmprofile?ref=96feaf79b2285aca415fda727e51868b95a8e4d9", "patch": "@@ -112,7 +112,6 @@ MULTILIB_MATCHES       += march?armv7=mcpu?cortex-a73\n MULTILIB_MATCHES       += march?armv7=mcpu?cortex-a73.cortex-a35\n MULTILIB_MATCHES       += march?armv7=mcpu?cortex-a73.cortex-a53\n MULTILIB_MATCHES       += march?armv7=mcpu?exynos-m1\n-MULTILIB_MATCHES       += march?armv7=mcpu?qdf24xx\n MULTILIB_MATCHES       += march?armv7=mcpu?xgene1\n \n # Arch Matches"}, {"sha": "456fa85d40a4d352147be903459361f5e6706895", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96feaf79b2285aca415fda727e51868b95a8e4d9/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96feaf79b2285aca415fda727e51868b95a8e4d9/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=96feaf79b2285aca415fda727e51868b95a8e4d9", "patch": "@@ -14058,8 +14058,8 @@ processors implementing the target architecture.\n Specify the name of the target processor for which GCC should tune the\n performance of the code.  Permissible values for this option are:\n @samp{generic}, @samp{cortex-a35}, @samp{cortex-a53}, @samp{cortex-a57},\n-@samp{cortex-a72}, @samp{cortex-a73}, @samp{exynos-m1}, @samp{falkor},\n-@samp{qdf24xx}, @samp{xgene1}, @samp{vulcan}, @samp{thunderx},\n+@samp{cortex-a72}, @samp{cortex-a73}, @samp{exynos-m1},\n+@samp{xgene1}, @samp{vulcan}, @samp{thunderx},\n @samp{thunderxt88}, @samp{thunderxt88p1}, @samp{thunderxt81},\n @samp{thunderxt83}, @samp{thunderx2t99}, @samp{cortex-a57.cortex-a53},\n @samp{cortex-a72.cortex-a53}, @samp{cortex-a73.cortex-a35},"}]}