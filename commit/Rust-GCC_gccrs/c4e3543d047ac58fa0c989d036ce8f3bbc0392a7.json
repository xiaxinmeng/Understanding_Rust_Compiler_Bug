{"sha": "c4e3543d047ac58fa0c989d036ce8f3bbc0392a7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzRlMzU0M2QwNDdhYzU4ZmEwYzk4OWQwMzZjZThmM2JiYzAzOTJhNw==", "commit": {"author": {"name": "Paul Thomas", "email": "pault@gcc.gnu.org", "date": "2008-06-24T21:44:28Z"}, "committer": {"name": "Paul Thomas", "email": "pault@gcc.gnu.org", "date": "2008-06-24T21:44:28Z"}, "message": "re PR fortran/36371 (Wrong locus for errors in DATA statement)\n\n2008-06-24  Paul Thomas  <pault@gcc.gnu.org>\n\n\tPR fortran/34371\n\t* expr.c (gfc_check_assign):  Change message and locus for\n\terror when conform == 0.\n\n2008-06-24  Paul Thomas  <pault@gcc.gnu.org>\n\n\tPR fortran/36371\n\t* gfortran.dg/data_array_5.f90: New test.\n\nFrom-SVN: r137088", "tree": {"sha": "a1a57d6d3298f726c1ff44a3519a0a4e32c92381", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a1a57d6d3298f726c1ff44a3519a0a4e32c92381"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c4e3543d047ac58fa0c989d036ce8f3bbc0392a7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c4e3543d047ac58fa0c989d036ce8f3bbc0392a7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c4e3543d047ac58fa0c989d036ce8f3bbc0392a7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c4e3543d047ac58fa0c989d036ce8f3bbc0392a7/comments", "author": null, "committer": null, "parents": [{"sha": "7b98a7257e8957c74611788d9020d8cd613d7d89", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7b98a7257e8957c74611788d9020d8cd613d7d89", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7b98a7257e8957c74611788d9020d8cd613d7d89"}], "stats": {"total": 34, "additions": 30, "deletions": 4}, "files": [{"sha": "420218fa57c22bfe0409791563c7baa6b4800946", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c4e3543d047ac58fa0c989d036ce8f3bbc0392a7/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c4e3543d047ac58fa0c989d036ce8f3bbc0392a7/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=c4e3543d047ac58fa0c989d036ce8f3bbc0392a7", "patch": "@@ -1,3 +1,9 @@\n+2008-06-24  Paul Thomas  <pault@gcc.gnu.org>\n+\n+\tPR fortran/34371\n+\t* expr.c (gfc_check_assign):  Change message and locus for\n+\terror when conform == 0.\n+\n 2008-06-23  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR fortran/36597"}, {"sha": "2f7030ed83357428ae0f920b3cf33f186abf724e", "filename": "gcc/fortran/expr.c", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c4e3543d047ac58fa0c989d036ce8f3bbc0392a7/gcc%2Ffortran%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c4e3543d047ac58fa0c989d036ce8f3bbc0392a7/gcc%2Ffortran%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fexpr.c?ref=c4e3543d047ac58fa0c989d036ce8f3bbc0392a7", "patch": "@@ -2829,6 +2829,7 @@ gfc_check_assign (gfc_expr *lvalue, gfc_expr *rvalue, int conform)\n   if (gfc_compare_types (&lvalue->ts, &rvalue->ts))\n     return SUCCESS;\n \n+  /* Only DATA Statements come here.  */\n   if (!conform)\n     {\n       /* Numeric can be converted to any other numeric. And Hollerith can be\n@@ -2840,9 +2841,9 @@ gfc_check_assign (gfc_expr *lvalue, gfc_expr *rvalue, int conform)\n       if (lvalue->ts.type == BT_LOGICAL && rvalue->ts.type == BT_LOGICAL)\n \treturn SUCCESS;\n \n-      gfc_error (\"Incompatible types in assignment at %L; attempted assignment \"\n-\t\t \"of %s to %s\", &rvalue->where, gfc_typename (&rvalue->ts),\n-\t\t gfc_typename (&lvalue->ts));\n+      gfc_error (\"Incompatible types in DATA statement at %L; attempted \"\n+\t\t \"conversion of %s to %s\", &lvalue->where,\n+\t\t gfc_typename (&rvalue->ts), gfc_typename (&lvalue->ts));\n \n       return FAILURE;\n     }"}, {"sha": "26b4591166a8f7115f5ff49062a597382ff56f06", "filename": "gcc/fortran/interface.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c4e3543d047ac58fa0c989d036ce8f3bbc0392a7/gcc%2Ffortran%2Finterface.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c4e3543d047ac58fa0c989d036ce8f3bbc0392a7/gcc%2Ffortran%2Finterface.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Finterface.c?ref=c4e3543d047ac58fa0c989d036ce8f3bbc0392a7", "patch": "@@ -2379,7 +2379,7 @@ check_intents (gfc_formal_arglist *f, gfc_actual_arglist *a)\n \t      return FAILURE;\n \t    }\n \n-\t  if (a->expr->symtree->n.sym->attr.pointer)\n+\t  if (f->sym->attr.pointer)\n \t    {\n \t      gfc_error (\"Procedure argument at %L is local to a PURE \"\n \t\t\t \"procedure and has the POINTER attribute\","}, {"sha": "2c45e39f42eddc754f68f180ffb05891abac2159", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c4e3543d047ac58fa0c989d036ce8f3bbc0392a7/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c4e3543d047ac58fa0c989d036ce8f3bbc0392a7/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=c4e3543d047ac58fa0c989d036ce8f3bbc0392a7", "patch": "@@ -1,3 +1,8 @@\n+2008-06-24  Paul Thomas  <pault@gcc.gnu.org>\n+\n+\tPR fortran/36371\n+\t* gfortran.dg/data_array_5.f90: New test.\n+\n 2008-06-24  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gnat.dg/warn5.adb: New test."}, {"sha": "1d4e4e758a768becb70e703a1c303be7ca9bbaec", "filename": "gcc/testsuite/gfortran.dg/data_array_5.f90", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c4e3543d047ac58fa0c989d036ce8f3bbc0392a7/gcc%2Ftestsuite%2Fgfortran.dg%2Fdata_array_5.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c4e3543d047ac58fa0c989d036ce8f3bbc0392a7/gcc%2Ftestsuite%2Fgfortran.dg%2Fdata_array_5.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fdata_array_5.f90?ref=c4e3543d047ac58fa0c989d036ce8f3bbc0392a7", "patch": "@@ -0,0 +1,14 @@\n+! { dg-do compile }\n+! Tests the fix for PR36371, in which the locus for the errors pointed to\n+! the paramter declaration rather than the data statement.\n+!\n+! Contributed by Dominique d'Humieres <dominiq@lps.ens.fr>\n+!\n+program chkdata\n+  character(len=3), parameter :: mychar(3) = [ \"abc\", \"def\", \"ghi\" ]\n+  integer, parameter :: myint(3) = [1, 2, 3]\n+  integer :: c(2)\n+  character(4) :: i(2)\n+  data c / mychar(1), mychar(3) / ! { dg-error \"Incompatible types in DATA\" }\n+  data i / myint(3), myint(2) /   ! { dg-error \"Incompatible types in DATA\" }\n+end program chkdata"}]}