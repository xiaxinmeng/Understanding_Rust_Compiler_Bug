{"sha": "1f873f0e2c79f45400f051e794ee6a67cf128a9d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWY4NzNmMGUyYzc5ZjQ1NDAwZjA1MWU3OTRlZTZhNjdjZjEyOGE5ZA==", "commit": {"author": {"name": "Vladimir Makarov", "email": "vmakarov@redhat.com", "date": "2013-05-10T15:26:31Z"}, "committer": {"name": "Vladimir Makarov", "email": "vmakarov@gcc.gnu.org", "date": "2013-05-10T15:26:31Z"}, "message": "lra-assigns.c (find_hard_regno_for): Add 1 to the cost of call saved registers.\n\n2013-05-10  Vladimir Makarov  <vmakarov@redhat.com>\n\n\t* lra-assigns.c (find_hard_regno_for): Add 1 to the cost of call\n\tsaved registers.\n\nFrom-SVN: r198792", "tree": {"sha": "0319f366e678b201129e2e8f1ab7abd9afdf66c5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0319f366e678b201129e2e8f1ab7abd9afdf66c5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1f873f0e2c79f45400f051e794ee6a67cf128a9d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1f873f0e2c79f45400f051e794ee6a67cf128a9d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1f873f0e2c79f45400f051e794ee6a67cf128a9d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1f873f0e2c79f45400f051e794ee6a67cf128a9d/comments", "author": {"login": "vnmakarov", "id": 9855671, "node_id": "MDQ6VXNlcjk4NTU2NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/9855671?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vnmakarov", "html_url": "https://github.com/vnmakarov", "followers_url": "https://api.github.com/users/vnmakarov/followers", "following_url": "https://api.github.com/users/vnmakarov/following{/other_user}", "gists_url": "https://api.github.com/users/vnmakarov/gists{/gist_id}", "starred_url": "https://api.github.com/users/vnmakarov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vnmakarov/subscriptions", "organizations_url": "https://api.github.com/users/vnmakarov/orgs", "repos_url": "https://api.github.com/users/vnmakarov/repos", "events_url": "https://api.github.com/users/vnmakarov/events{/privacy}", "received_events_url": "https://api.github.com/users/vnmakarov/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "94938aec1ab1996c4554fd3703708052144a784b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/94938aec1ab1996c4554fd3703708052144a784b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/94938aec1ab1996c4554fd3703708052144a784b"}], "stats": {"total": 7, "additions": 6, "deletions": 1}, "files": [{"sha": "7da1973800ccfaaac364731502ae751114fa070b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f873f0e2c79f45400f051e794ee6a67cf128a9d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f873f0e2c79f45400f051e794ee6a67cf128a9d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1f873f0e2c79f45400f051e794ee6a67cf128a9d", "patch": "@@ -1,3 +1,8 @@\n+2013-05-10  Vladimir Makarov  <vmakarov@redhat.com>\n+\n+\t* lra-assigns.c (find_hard_regno_for): Add 1 to the cost of call\n+\tsaved registers.\n+\n 2013-05-10  Sebastian Huber  <sebastian.huber@embedded-brains.de>\n \n \t* config/arm/t-rtems-eabi: Remove mthumb/march=armv7 multilib."}, {"sha": "78bc2e7fcf6dac7d70acdf6d6ae8986be899309b", "filename": "gcc/lra-assigns.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f873f0e2c79f45400f051e794ee6a67cf128a9d/gcc%2Flra-assigns.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f873f0e2c79f45400f051e794ee6a67cf128a9d/gcc%2Flra-assigns.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flra-assigns.c?ref=1f873f0e2c79f45400f051e794ee6a67cf128a9d", "patch": "@@ -598,7 +598,7 @@ find_hard_regno_for (int regno, int *cost, int try_only_hard_regno)\n \t\t&& ! df_regs_ever_live_p (hard_regno + j))\n \t      /* It needs save restore.\t */\n \t      hard_regno_costs[hard_regno]\n-\t\t+= 2 * ENTRY_BLOCK_PTR->next_bb->frequency;\n+\t\t+= 2 * ENTRY_BLOCK_PTR->next_bb->frequency + 1;\n \t  priority = targetm.register_priority (hard_regno);\n \t  if (best_hard_regno < 0 || hard_regno_costs[hard_regno] < best_cost\n \t      || (hard_regno_costs[hard_regno] == best_cost"}]}