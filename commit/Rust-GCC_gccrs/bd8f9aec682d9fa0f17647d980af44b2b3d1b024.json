{"sha": "bd8f9aec682d9fa0f17647d980af44b2b3d1b024", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmQ4ZjlhZWM2ODJkOWZhMGYxNzY0N2Q5ODBhZjQ0YjJiM2QxYjAyNA==", "commit": {"author": {"name": "Sylvain Pion", "email": "pion@cs.nyu.edu", "date": "2002-08-28T21:07:09Z"}, "committer": {"name": "Joseph Myers", "email": "jsm28@gcc.gnu.org", "date": "2002-08-28T21:07:09Z"}, "message": "invoke.texi (-Wreorder): Remove remaining pieces from the generic section.\n\n2002-08-28  Sylvain Pion <pion@cs.nyu.edu>\n\n\t* doc/invoke.texi (-Wreorder): Remove remaining pieces from the generic\n\tsection.  Mention that it is enabled by -Wall.\n\t(-Wall): Mention that there can be language-specific warnings as well.\n\t(-Wctor-dtor-privacy): Mention that it is enabled by default.\n\t(-Wnon-virtual-dtor): Mention that it is enabled by -Wall.\n\nFrom-SVN: r56643", "tree": {"sha": "cbd6e7363e1ca11a89843c6a8bb724e36282e4c1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cbd6e7363e1ca11a89843c6a8bb724e36282e4c1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bd8f9aec682d9fa0f17647d980af44b2b3d1b024", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bd8f9aec682d9fa0f17647d980af44b2b3d1b024", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bd8f9aec682d9fa0f17647d980af44b2b3d1b024", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bd8f9aec682d9fa0f17647d980af44b2b3d1b024/comments", "author": null, "committer": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "97d8f7e7e731a1c6d0b0174e0a47a45ae84f75e8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/97d8f7e7e731a1c6d0b0174e0a47a45ae84f75e8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/97d8f7e7e731a1c6d0b0174e0a47a45ae84f75e8"}], "stats": {"total": 24, "additions": 14, "deletions": 10}, "files": [{"sha": "17b0ffe3b9b86a24123c15afe84824b4aa4fd247", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bd8f9aec682d9fa0f17647d980af44b2b3d1b024/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bd8f9aec682d9fa0f17647d980af44b2b3d1b024/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=bd8f9aec682d9fa0f17647d980af44b2b3d1b024", "patch": "@@ -1,3 +1,11 @@\n+2002-08-28  Sylvain Pion <pion@cs.nyu.edu>\n+\n+\t* doc/invoke.texi (-Wreorder): Remove remaining pieces from the generic\n+\tsection.  Mention that it is enabled by -Wall.\n+\t(-Wall): Mention that there can be language-specific warnings as well.\n+\t(-Wctor-dtor-privacy): Mention that it is enabled by default.\n+\t(-Wnon-virtual-dtor): Mention that it is enabled by -Wall.\n+\n Wed Aug 28 15:35:17 2002  J\"orn Rennecke <joern.rennecke@superh.com>\n \n \t* sh.c (calc_live_regs): Save FPSCR_REG in an interrupt handler"}, {"sha": "d4bd453255d14f4fa694fb2a9cdb9bd7f2a9aafe", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 6, "deletions": 10, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bd8f9aec682d9fa0f17647d980af44b2b3d1b024/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bd8f9aec682d9fa0f17647d980af44b2b3d1b024/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=bd8f9aec682d9fa0f17647d980af44b2b3d1b024", "patch": "@@ -1531,12 +1531,13 @@ compilers to layout @code{C} identically.\n @opindex Wctor-dtor-privacy\n Warn when a class seems unusable, because all the constructors or\n destructors in a class are private and the class has no friends or\n-public static member functions.\n+public static member functions.  This warning is enabled by default.\n \n @item -Wnon-virtual-dtor @r{(C++ only)}\n @opindex Wnon-virtual-dtor\n Warn when a class declares a non-virtual destructor that should probably\n be virtual, because it looks like the class will be used polymorphically.\n+This warning is enabled by @option{-Wall}.\n \n @item -Wreorder @r{(C++ only)}\n @opindex Wreorder\n@@ -1555,7 +1556,7 @@ struct A @{\n \n Here the compiler will warn that the member initializers for @samp{i}\n and @samp{j} will be rearranged to match the declaration order of the\n-members.\n+members.  This warning is enabled by @option{-Wall}.\n @end table\n \n The following @option{-W@dots{}} options are not affected by @option{-Wall}.\n@@ -2245,13 +2246,6 @@ Some spurious warnings can be avoided if you declare all the functions\n you use that never return as @code{noreturn}.  @xref{Function\n Attributes}.\n \n-@item -Wreorder @r{(C++ only)}\n-@opindex Wreorder\n-@cindex reordering, warning\n-@cindex warning for reordering of member initializers\n-Warn when the order of member initializers given in the code does not\n-match the order in which they must be executed.  For instance:\n-\n @item -Wunknown-pragmas\n @opindex Wunknown-pragmas\n @cindex warning for unknown pragmas\n@@ -2267,7 +2261,9 @@ the warnings were only enabled by the @option{-Wall} command line option.\n All of the above @samp{-W} options combined.  This enables all the\n warnings about constructions that some users consider questionable, and\n that are easy to avoid (or modify to prevent the warning), even in\n-conjunction with macros.\n+conjunction with macros.  This also enables some language-specific\n+warnings described in @ref{C++ Dialect Options} and\n+@ref{Objective-C Dialect Options}.\n @end table\n \n The following @option{-W@dots{}} options are not implied by @option{-Wall}."}]}