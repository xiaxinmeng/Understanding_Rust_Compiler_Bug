{"sha": "02543f02639c5fd0bd2755699f6d19c0043801ce", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDI1NDNmMDI2MzljNWZkMGJkMjc1NTY5OWY2ZDE5YzAwNDM4MDFjZQ==", "commit": {"author": {"name": "Steven G. Kargl", "email": "kargl@gcc.gnu.org", "date": "2018-12-22T19:37:06Z"}, "committer": {"name": "Steven G. Kargl", "email": "kargl@gcc.gnu.org", "date": "2018-12-22T19:37:06Z"}, "message": "re PR fortran/85798 (ICE in get_array_index, at fortran/data.c:69)\n\n2018-12-22  Steven G . Kargl  <kargl@gcc.gnu.org>\n\n\tPR fortran/85798\n\t* decl.c (gfc_match_data): If a component of a derived type entity\n\tappears in data statement, check that does not have the allocatable\n\tattribute.\n \n2018-12-22  Steven G . Kargl  <kargl@gcc.gnu.org>\n\n\tPR fortran/85798\n\t* gfortran.dg/pr85798.f90: New test.\n\nFrom-SVN: r267356", "tree": {"sha": "0d8fc7f8171c7f0f7a6d3bd5bcc20654e93780f2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0d8fc7f8171c7f0f7a6d3bd5bcc20654e93780f2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/02543f02639c5fd0bd2755699f6d19c0043801ce", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/02543f02639c5fd0bd2755699f6d19c0043801ce", "html_url": "https://github.com/Rust-GCC/gccrs/commit/02543f02639c5fd0bd2755699f6d19c0043801ce", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/02543f02639c5fd0bd2755699f6d19c0043801ce/comments", "author": null, "committer": null, "parents": [{"sha": "73f5d219bb59d2930010220d144bbff22031fb90", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/73f5d219bb59d2930010220d144bbff22031fb90", "html_url": "https://github.com/Rust-GCC/gccrs/commit/73f5d219bb59d2930010220d144bbff22031fb90"}], "stats": {"total": 51, "additions": 51, "deletions": 0}, "files": [{"sha": "276aad9c14b7a2c5df78decf4d0e4931b8c074db", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/02543f02639c5fd0bd2755699f6d19c0043801ce/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/02543f02639c5fd0bd2755699f6d19c0043801ce/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=02543f02639c5fd0bd2755699f6d19c0043801ce", "patch": "@@ -1,3 +1,10 @@\n+2018-12-22  Steven G . Kargl  <kargl@gcc.gnu.org>\n+\n+\tPR fortran/85798\n+\t* decl.c (gfc_match_data): If a component of a derived type entity\n+\tappears in data statement, check that does not have the allocatable\n+\tattribute.\n+ \n 2018-12-22  Steven G. Kargl  <kargl@gcc.gnu.org>\n \n \tPR fortran/88169"}, {"sha": "51c19c17d1d47b4ed6dece1b7663f5d20bd16e62", "filename": "gcc/fortran/decl.c", "status": "modified", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/02543f02639c5fd0bd2755699f6d19c0043801ce/gcc%2Ffortran%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/02543f02639c5fd0bd2755699f6d19c0043801ce/gcc%2Ffortran%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fdecl.c?ref=02543f02639c5fd0bd2755699f6d19c0043801ce", "patch": "@@ -596,6 +596,7 @@ match\n gfc_match_data (void)\n {\n   gfc_data *new_data;\n+  gfc_expr *e;\n   match m;\n \n   /* Before parsing the rest of a DATA statement, check F2008:c1206.  */\n@@ -632,6 +633,30 @@ gfc_match_data (void)\n \t  goto cleanup;\n \t}\n \n+      /* Check for an entity with an allocatable component, which is not\n+\t allowed.  */\n+      e = new_data->var->expr;\n+      if (e)\n+\t{\n+\t  bool invalid;\n+\n+\t  invalid = false;\n+\t  for (gfc_ref *ref = e->ref; ref; ref = ref->next)\n+\t    if ((ref->type == REF_COMPONENT\n+\t\t && ref->u.c.component->attr.allocatable)\n+\t\t|| (ref->type == REF_ARRAY\n+\t\t    && e->symtree->n.sym->attr.pointer != 1\n+\t\t    && ref->u.ar.as && ref->u.ar.as->type == AS_DEFERRED))\n+\t      invalid = true;\n+\n+\t  if (invalid)\n+\t    {\n+\t      gfc_error (\"Allocatable component or deferred-shaped array \"\n+\t\t\t \"near %C in DATA statement\");\n+\t      goto cleanup;\n+\t    }\n+\t}\n+\n       m = top_val_list (new_data);\n       if (m != MATCH_YES)\n \tgoto cleanup;"}, {"sha": "85495144d83198a62c6d9ebb8e5d169e30bd190a", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/02543f02639c5fd0bd2755699f6d19c0043801ce/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/02543f02639c5fd0bd2755699f6d19c0043801ce/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=02543f02639c5fd0bd2755699f6d19c0043801ce", "patch": "@@ -1,3 +1,8 @@\n+2018-12-26  Steven G . Kargl  <kargl@gcc.gnu.org>\n+\n+\tPR fortran/85798\n+\t* gfortran.dg/pr85798.f90: New test.\n+\n 2018-12-21  Steven G. Kargl  <kargl@gcc.gnu.org>\n \n \tPR fortran/88169"}, {"sha": "1cc224d1fef4420676af03ed9c7e8a93f5489dd2", "filename": "gcc/testsuite/gfortran.dg/pr85798.f90", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/02543f02639c5fd0bd2755699f6d19c0043801ce/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr85798.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/02543f02639c5fd0bd2755699f6d19c0043801ce/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr85798.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr85798.f90?ref=02543f02639c5fd0bd2755699f6d19c0043801ce", "patch": "@@ -0,0 +1,14 @@\n+! { dg-do compile }\n+program p\n+   type t\n+      integer, allocatable :: a(:)\n+   end type\n+   type u\n+      real x\n+      type(t) y\n+   end type\n+   type(t) :: z\n+   type(u) :: q\n+   data z%a(1) / 789 /     ! { dg-error \"Allocatable component\" }\n+   data q%y%a(1) / 789 /   ! { dg-error \"Allocatable component\" }\n+end"}]}