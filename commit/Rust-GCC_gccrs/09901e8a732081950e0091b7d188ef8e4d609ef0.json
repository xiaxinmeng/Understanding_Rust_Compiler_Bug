{"sha": "09901e8a732081950e0091b7d188ef8e4d609ef0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDk5MDFlOGE3MzIwODE5NTBlMDA5MWI3ZDE4OGVmOGU0ZDYwOWVmMA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2015-02-24T08:07:10Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2015-02-24T08:07:10Z"}, "message": "re PR tree-optimization/65170 (curve25519-donna-c64 miscompilation)\n\n\tPR tree-optimization/65170\n\t* wide-int.cc (wi::mul_internal): For the umul_ppmm optimization,\n\tif val[1] < 0, clear also val[2] and return 3.\n\n\t* gcc.c-torture/execute/pr65170.c: New test.\n\t* gcc.dg/tree-ssa/vrp96.c: New test.\n\nFrom-SVN: r220931", "tree": {"sha": "5e91765b4416adf1f124fe1032b9124c5006a1b4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5e91765b4416adf1f124fe1032b9124c5006a1b4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/09901e8a732081950e0091b7d188ef8e4d609ef0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/09901e8a732081950e0091b7d188ef8e4d609ef0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/09901e8a732081950e0091b7d188ef8e4d609ef0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/09901e8a732081950e0091b7d188ef8e4d609ef0/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d130cf43923325219ffbedb7ab302b1a6927efb6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d130cf43923325219ffbedb7ab302b1a6927efb6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d130cf43923325219ffbedb7ab302b1a6927efb6"}], "stats": {"total": 101, "additions": 99, "deletions": 2}, "files": [{"sha": "4bbdfe39049030631c6585e67c6739e7f7a8eccc", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/09901e8a732081950e0091b7d188ef8e4d609ef0/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/09901e8a732081950e0091b7d188ef8e4d609ef0/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=09901e8a732081950e0091b7d188ef8e4d609ef0", "patch": "@@ -1,3 +1,9 @@\n+2015-02-24  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/65170\n+\t* wide-int.cc (wi::mul_internal): For the umul_ppmm optimization,\n+\tif val[1] < 0, clear also val[2] and return 3.\n+\n 2015-02-24  Alan Modra  <amodra@gmail.com>\n \n \tPR target/65172"}, {"sha": "daf3e185c89962ac7b68b5cda15de6fe58b4df56", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/09901e8a732081950e0091b7d188ef8e4d609ef0/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/09901e8a732081950e0091b7d188ef8e4d609ef0/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=09901e8a732081950e0091b7d188ef8e4d609ef0", "patch": "@@ -1,3 +1,9 @@\n+2015-02-24  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/65170\n+\t* gcc.c-torture/execute/pr65170.c: New test.\n+\t* gcc.dg/tree-ssa/vrp96.c: New test.\n+\n 2015-02-24  Tom de Vries  <tom@codesourcery.com>\n \n \t* gfortran.dg/readwrite_unf_direct_eor_1.f90: Add missing close.\n@@ -27,7 +33,7 @@\n \tregisters have the right values.  Save register state into\n \tstatic data rather than on the stack.\n \n-2015-02-20  Jakub Jelinek  <jakub@redhat.com>\n+2015-02-23  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR bootstrap/63888\n \t* c-c++-common/asan/pr63888.c: New test."}, {"sha": "60c00523e349994b7052806fa3cf7cb00e36401e", "filename": "gcc/testsuite/gcc.c-torture/execute/pr65170.c", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/09901e8a732081950e0091b7d188ef8e4d609ef0/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr65170.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/09901e8a732081950e0091b7d188ef8e4d609ef0/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr65170.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr65170.c?ref=09901e8a732081950e0091b7d188ef8e4d609ef0", "patch": "@@ -0,0 +1,27 @@\n+/* PR tree-optimization/65170 */\n+\n+#ifdef __SIZEOF_INT128__\n+typedef unsigned __int128 V;\n+typedef unsigned long long int H;\n+#else\n+typedef unsigned long long int V;\n+typedef unsigned int H;\n+#endif\n+\n+__attribute__((noinline, noclone)) void\n+foo (V b, V c)\n+{\n+  V a;\n+  b &= (H) -1;\n+  c &= (H) -1;\n+  a = b * c;\n+  if (a != 1)\n+    __builtin_abort ();\n+}\n+\n+int\n+main ()\n+{\n+  foo (1, 1);\n+  return 0;\n+}"}, {"sha": "e17e424081848889294a5ca896e721360f5ccc5d", "filename": "gcc/testsuite/gcc.dg/tree-ssa/vrp96.c", "status": "added", "additions": 53, "deletions": 0, "changes": 53, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/09901e8a732081950e0091b7d188ef8e4d609ef0/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fvrp96.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/09901e8a732081950e0091b7d188ef8e4d609ef0/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fvrp96.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fvrp96.c?ref=09901e8a732081950e0091b7d188ef8e4d609ef0", "patch": "@@ -0,0 +1,53 @@\n+/* PR tree-optimization/65170 */\n+/* { dg-do compile { target int128 } } */\n+/* { dg-options \"-O2 -fdump-tree-vrp1\" } */\n+\n+typedef unsigned __int128 T;\n+extern void link_error (void);\n+extern void required_check (void);\n+\n+T\n+foo (T b, T c)\n+{\n+  T a;\n+  b &= 0xffffffffffffffffULL;\n+  c &= 0xffffffffffffffffULL;\n+  if (b < 7 || c < 7)\n+    return 0;\n+  a = b * c;\n+  if (a < 49 || a > (((T) 0xfffffffffffffffeULL << 64) | 1))\n+    link_error ();\n+  return a;\n+}\n+\n+T\n+bar (T b, T c)\n+{\n+  T a;\n+  b &= 0xffffffffffffffffULL;\n+  c &= 0xffffffffffffffffULL;\n+  if (b < 7 || c < 7)\n+    return 0;\n+  a = b * c;\n+  if (a == 49)\n+    required_check ();\n+  return a;\n+}\n+\n+T\n+baz (T b, T c)\n+{\n+  T a;\n+  b &= 0xffffffffffffffffULL;\n+  c &= 0xffffffffffffffffULL;\n+  if (b < 7 || c < 7)\n+    return 0;\n+  a = b * c;\n+  if (a == (((T) 0xfffffffffffffffeULL << 64) | 1))\n+    required_check ();\n+  return a;\n+}\n+\n+/* { dg-final { scan-tree-dump-not \"link_error\" \"vrp1\" } } */\n+/* { dg-final { scan-tree-dump-times \"required_check\" 2 \"vrp1\" } } */\n+/* { dg-final { cleanup-tree-dump \"vrp1\" } } */"}, {"sha": "1a7fc1435d0ac80dfabd45f3ad0321b8b060d9e9", "filename": "gcc/wide-int.cc", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/09901e8a732081950e0091b7d188ef8e4d609ef0/gcc%2Fwide-int.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/09901e8a732081950e0091b7d188ef8e4d609ef0/gcc%2Fwide-int.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fwide-int.cc?ref=09901e8a732081950e0091b7d188ef8e4d609ef0", "patch": "@@ -1309,6 +1309,11 @@ wi::mul_internal (HOST_WIDE_INT *val, const HOST_WIDE_INT *op1val,\n \t      return 1;\n \t    }\n \t  umul_ppmm (val[1], val[0], op1.ulow (), op2.ulow ());\n+\t  if (val[1] < 0 && prec > HOST_BITS_PER_WIDE_INT * 2)\n+\t    {\n+\t      val[2] = 0;\n+\t      return 3;\n+\t    }\n \t  return 1 + (val[1] != 0 || val[0] < 0);\n \t}\n       /* Likewise if the output is a full single HWI, except that the"}, {"sha": "14fd62644be4b7a65608ac96a54c1942065429b1", "filename": "libsanitizer/ChangeLog", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/09901e8a732081950e0091b7d188ef8e4d609ef0/libsanitizer%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/09901e8a732081950e0091b7d188ef8e4d609ef0/libsanitizer%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libsanitizer%2FChangeLog?ref=09901e8a732081950e0091b7d188ef8e4d609ef0", "patch": "@@ -1,4 +1,4 @@\n-2015-02-20  Jakub Jelinek  <jakub@redhat.com>\n+2015-02-23  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR bootstrap/63888\n \t* asan/asan_globals.cc (RegisterGlobal): Disable detect_odr_violation"}]}