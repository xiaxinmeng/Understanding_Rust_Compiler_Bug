{"sha": "0c09a01e9ea0608df0ae6754f67d630c1e40bb04", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGMwOWEwMWU5ZWEwNjA4ZGYwYWU2NzU0ZjY3ZDYzMGMxZTQwYmIwNA==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2017-05-15T08:27:44Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2017-05-15T08:27:44Z"}, "message": "trans.c (Compilation_Unit_to_gnu): Skip subprograms on the inlined list that are not public.\n\n\t* gcc-interface/trans.c (Compilation_Unit_to_gnu): Skip subprograms on\n\tthe inlined list that are not public.\n\t* gcc-interface/utils.c (create_subprog_decl): Clear TREE_PUBLIC if\n\tthere is a pragma Inline_Always on the subprogram.\n\nFrom-SVN: r248051", "tree": {"sha": "4c9ba6b6fbac20d5aef34f719eac44d35b061cc7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4c9ba6b6fbac20d5aef34f719eac44d35b061cc7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0c09a01e9ea0608df0ae6754f67d630c1e40bb04", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0c09a01e9ea0608df0ae6754f67d630c1e40bb04", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0c09a01e9ea0608df0ae6754f67d630c1e40bb04", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0c09a01e9ea0608df0ae6754f67d630c1e40bb04/comments", "author": null, "committer": null, "parents": [{"sha": "b1b2b511e525b098204c590b0eafa7d36092b7e1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b1b2b511e525b098204c590b0eafa7d36092b7e1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b1b2b511e525b098204c590b0eafa7d36092b7e1"}], "stats": {"total": 33, "additions": 29, "deletions": 4}, "files": [{"sha": "8fa7ab7821f17507d8890f858efd9b62ab756e5a", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0c09a01e9ea0608df0ae6754f67d630c1e40bb04/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0c09a01e9ea0608df0ae6754f67d630c1e40bb04/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=0c09a01e9ea0608df0ae6754f67d630c1e40bb04", "patch": "@@ -1,3 +1,10 @@\n+2017-05-15  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gcc-interface/trans.c (Compilation_Unit_to_gnu): Skip subprograms on\n+\tthe inlined list that are not public.\n+\t* gcc-interface/utils.c (create_subprog_decl): Clear TREE_PUBLIC if\n+\tthere is a pragma Inline_Always on the subprogram.\n+\n 2017-05-15  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gcc-interface/trans.c (gnat_to_gnu) <N_Aggregate>: Fix formatting."}, {"sha": "117ce261b627188d78e2245488365b9ea7529f09", "filename": "gcc/ada/gcc-interface/trans.c", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0c09a01e9ea0608df0ae6754f67d630c1e40bb04/gcc%2Fada%2Fgcc-interface%2Ftrans.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0c09a01e9ea0608df0ae6754f67d630c1e40bb04/gcc%2Fada%2Fgcc-interface%2Ftrans.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Ftrans.c?ref=0c09a01e9ea0608df0ae6754f67d630c1e40bb04", "patch": "@@ -5472,6 +5472,15 @@ Compilation_Unit_to_gnu (Node_Id gnat_node)\n       if (!optimize && !Has_Pragma_Inline_Always (gnat_entity))\n \tcontinue;\n \n+      /* The set of inlined subprograms is computed from data recorded early\n+\t during expansion and it can be a strict superset of the final set\n+\t computed after semantic analysis, for example if a call to such a\n+\t subprogram occurs in a pragma Assert and assertions are disabled.\n+\t In that case, semantic analysis resets Is_Public to false but the\n+\t entry for the subprogram in the inlining tables is stalled.  */\n+      if (!Is_Public (gnat_entity))\n+\tcontinue;\n+\n       gnat_body = Parent (Declaration_Node (gnat_entity));\n       if (Nkind (gnat_body) != N_Subprogram_Body)\n \t{"}, {"sha": "345b8a4f16327a994d9f94c0e827af0c67a1fbc9", "filename": "gcc/ada/gcc-interface/utils.c", "status": "modified", "additions": 13, "deletions": 4, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0c09a01e9ea0608df0ae6754f67d630c1e40bb04/gcc%2Fada%2Fgcc-interface%2Futils.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0c09a01e9ea0608df0ae6754f67d630c1e40bb04/gcc%2Fada%2Fgcc-interface%2Futils.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Futils.c?ref=0c09a01e9ea0608df0ae6754f67d630c1e40bb04", "patch": "@@ -3220,10 +3220,19 @@ create_subprog_decl (tree name, tree asm_name, tree type, tree param_decl_list,\n \n     case is_required:\n       if (Back_End_Inlining)\n-\tdecl_attributes (&subprog_decl,\n-\t\t\t tree_cons (get_identifier (\"always_inline\"),\n-\t\t\t\t    NULL_TREE, NULL_TREE),\n-\t\t\t ATTR_FLAG_TYPE_IN_PLACE);\n+\t{\n+\t  decl_attributes (&subprog_decl,\n+\t\t\t   tree_cons (get_identifier (\"always_inline\"),\n+\t\t\t\t      NULL_TREE, NULL_TREE),\n+\t\t\t   ATTR_FLAG_TYPE_IN_PLACE);\n+\n+\t  /* Inline_Always guarantees that every direct call is inlined and\n+\t     that there is no indirect reference to the subprogram, so the\n+\t     instance in the original package (as well as its clones in the\n+\t     client packages created for inter-unit inlining) can be made\n+\t     private, which causes the out-of-line body to be eliminated.  */\n+\t  TREE_PUBLIC (subprog_decl) = 0;\n+\t}\n \n       /* ... fall through ... */\n "}]}