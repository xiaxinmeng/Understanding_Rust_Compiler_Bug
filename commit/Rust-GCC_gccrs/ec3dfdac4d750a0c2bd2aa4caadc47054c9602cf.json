{"sha": "ec3dfdac4d750a0c2bd2aa4caadc47054c9602cf", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWMzZGZkYWM0ZDc1MGEwYzJiZDJhYTRjYWFkYzQ3MDU0Yzk2MDJjZg==", "commit": {"author": {"name": "Mikhail Maltsev", "email": "maltsevm@gmail.com", "date": "2015-05-30T05:44:17Z"}, "committer": {"name": "Mikhail Maltsev", "email": "miyuki@gcc.gnu.org", "date": "2015-05-30T05:44:17Z"}, "message": "Add new script to contrib (GIMPLE syntax highlighting rules for Vim).\n\ncontrib/\n\t* gimple.vim: New file.\n\nFrom-SVN: r223884", "tree": {"sha": "caf4cb77dc6f0bdf279918097c20436ba5cd4e22", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/caf4cb77dc6f0bdf279918097c20436ba5cd4e22"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ec3dfdac4d750a0c2bd2aa4caadc47054c9602cf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ec3dfdac4d750a0c2bd2aa4caadc47054c9602cf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ec3dfdac4d750a0c2bd2aa4caadc47054c9602cf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ec3dfdac4d750a0c2bd2aa4caadc47054c9602cf/comments", "author": {"login": "miyuki", "id": 4668268, "node_id": "MDQ6VXNlcjQ2NjgyNjg=", "avatar_url": "https://avatars.githubusercontent.com/u/4668268?v=4", "gravatar_id": "", "url": "https://api.github.com/users/miyuki", "html_url": "https://github.com/miyuki", "followers_url": "https://api.github.com/users/miyuki/followers", "following_url": "https://api.github.com/users/miyuki/following{/other_user}", "gists_url": "https://api.github.com/users/miyuki/gists{/gist_id}", "starred_url": "https://api.github.com/users/miyuki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/miyuki/subscriptions", "organizations_url": "https://api.github.com/users/miyuki/orgs", "repos_url": "https://api.github.com/users/miyuki/repos", "events_url": "https://api.github.com/users/miyuki/events{/privacy}", "received_events_url": "https://api.github.com/users/miyuki/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "6e042ef4e2b96c07cb0f7a95635025a307a6f1be", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6e042ef4e2b96c07cb0f7a95635025a307a6f1be", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6e042ef4e2b96c07cb0f7a95635025a307a6f1be"}], "stats": {"total": 143, "additions": 143, "deletions": 0}, "files": [{"sha": "b5da9e6ee3d2048ff196b8be8545972566fd280b", "filename": "contrib/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec3dfdac4d750a0c2bd2aa4caadc47054c9602cf/contrib%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec3dfdac4d750a0c2bd2aa4caadc47054c9602cf/contrib%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2FChangeLog?ref=ec3dfdac4d750a0c2bd2aa4caadc47054c9602cf", "patch": "@@ -1,3 +1,7 @@\n+2015-05-30  Mikhail Maltsev  <maltsevm@gmail.com>\n+\n+\t* gimple.vim: New file.\n+\n 2015-05-18  Tom de Vries  <tom@codesourcery.com>\n \n \t* check_GNU_style.sh: Add temp files tmp2 and tmp3."}, {"sha": "6334dfab6191fa647eae2b443b95c321d8623c9a", "filename": "contrib/gimple.vim", "status": "added", "additions": 139, "deletions": 0, "changes": 139, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec3dfdac4d750a0c2bd2aa4caadc47054c9602cf/contrib%2Fgimple.vim", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec3dfdac4d750a0c2bd2aa4caadc47054c9602cf/contrib%2Fgimple.vim", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fgimple.vim?ref=ec3dfdac4d750a0c2bd2aa4caadc47054c9602cf", "patch": "@@ -0,0 +1,139 @@\n+\" Syntax highlighting rules for GIMPLE dump files (for Vim).\n+\"\n+\" Copyright (C) 2015 Free Software Foundation, Inc.\n+\"\n+\" This script is free software; you can redistribute it and/or modify\n+\" it under the terms of the GNU General Public License as published by\n+\" the Free Software Foundation; either version 3, or (at your option)\n+\" any later version\n+\"\n+\" This Vim script highlights syntax in debug dumps containing GIMPLE\n+\" intermediate representation.  Such dumps are produced by GCC when\n+\" it is invoked with -fdump-tree-* and/or -fdump-ipa-* switches.  Tested\n+\" in Vim 7.4 (but should also work with earlier versions).\n+\"\n+\" INSTALLATION:\n+\" 1. Copy the script into $HOME/.vim/syntax directory\n+\" 2. Create a file gimple.vim in $HOME/.vim/ftdetect directory with the\n+\"    following command in it:\n+\"\n+\" au BufRead,BufNewFile *.[0-2][0-9][0-9][ti].* set filetype=gimple\n+\"\n+\" The pattern in this autocommand corresponds to default file names\n+\" of debug dumps, e.g.:\n+\" filename.cc.123t.pass-name\n+\n+\n+\" Do not continue, if syntax is already enabled in current buffer.\n+if exists(\"b:current_syntax\")\n+    finish\n+endif\n+\n+\" If this variable is set to true, \"Unknown tree\" in -fdump-tree-original will\n+\" be highlighted as an error.\n+let s:unknown_tree_is_error=0\n+\n+\" Comments for Phi nodes, value ranges, use/def-chains, etc.\n+syn match   gimpleAnnotation    \"\\v#.*$\"\n+            \\ contains=gimpleAnnotationOp, gimpleAnnotationMark,\n+            \\ gimpleNumber, gimpleLineNo\n+syn match   gimpleAnnotationMark    \"#\" contained\n+syn keyword gimpleAnnotationOp    PHI VUSE VDEF RANGE PT USE CLB\n+            \\ ALIGN MISALIGN NONZERO contained\n+\n+\" General-purpose comments.\n+syn match   gimpleComment       \";;.*$\"\n+\n+\" Types - mostly borrowed from original Vim syntax file for C\n+syn keyword     gimpleType  int long short char void\n+            \\ signed unsigned float double\n+            \\ size_t ssize_t off_t wchar_t ptrdiff_t sig_atomic_t fpos_t\n+            \\ clock_t time_t va_list jmp_buf FILE DIR div_t ldiv_t\n+            \\ mbstate_t wctrans_t wint_t wctype_t\n+            \\ _Bool bool _Complex complex _Imaginary imaginary\n+            \\ int8_t int16_t int32_t int64_t\n+            \\ uint8_t uint16_t uint32_t uint64_t\n+            \\ int_least8_t int_least16_t int_least32_t int_least64_t\n+            \\ uint_least8_t uint_least16_t uint_least32_t uint_least64_t\n+            \\ int_fast8_t int_fast16_t int_fast32_t int_fast64_t\n+            \\ uint_fast8_t uint_fast16_t uint_fast32_t uint_fast64_t\n+            \\ intptr_t uintptr_t\n+            \\ intmax_t uintmax_t\n+            \\ __label__ __complex__ __volatile__\n+            \\ char16_t char32_t sizetype __vtbl_ptr_type\n+\n+\" C/C++-like control structures\n+syn keyword gimpleStatement     goto return\n+syn keyword gimpleConditional   if else\n+syn keyword gimpleLoop          while\n+syn keyword gimpleException     try catch finally\n+\n+\" Special 'values'\n+syn match   gimpleConstant      \"{CLOBBER}\"\n+syn match   gimpleConstant      \"{ref-all}\"\n+syn match   gimpleConstant      \"{v}\"\n+\n+\" Blocks\n+syn region  gimpleBlock         start=\"{\" end=\"}\" transparent fold\n+\n+\" String literals\n+syn region  gimpleString        start=/\\v\"/ skip=/\\v\\\\./ end=/\\v\"/\n+\n+\" GENERIC AST nodes\n+syn keyword gimpleASTNode       BIT_FIELD_REF TARGET_EXPR expr_stmt\n+            \\ NON_LVALUE_EXPR\n+            \\ must_not_throw_expr eh_spec_block eh_filter\n+            \\ eh_must_not_throw aggr_init_expr cleanup_point\n+\n+if s:unknown_tree_is_error\n+    syn match   gimpleUnknownTree   \"\\vUnknown tree: \\w+\"\n+end\n+\n+\" Numbers\n+syn match   gimpleNumber        \"\\v([^.a-zA-Z0-9_])\\zs-?\\d+B?\"\n+syn match   gimpleFloat         \"\\v\\W\\zs-?\\d*\\.\\d+(e\\+\\d+)?\"\n+\n+\" Basic block label\n+\" <bb 123>:\n+syn match   gimpleLabel         \"\\v^\\s*\\zs\\<bb \\d+\\>\"\n+\" <D.1234>:\n+\" <L1>:\n+syn match   gimpleLabel         \"\\v^\\s*\\zs\\<[DL]\\.?\\d+\\>\"\n+\" label: - user-defined label\n+\" bb1L.1:\n+syn match   gimpleLabel         \"\\v^\\s*[a-zA-Z0-9._]+\\ze:\\s*$\"\n+\n+\" Match label after goto to suppress highlighting of numbers inside\n+syn match   gimpleGotoLabel     \"\\v<bb \\d+\\>[^:]\"\n+\n+\" Line numbers, generated with -fdump-tree-*-lineno\n+syn match   gimpleLineNo        \"\\v\\[[^\\]]+:\\d+:\\d+\\]\"\n+\n+\" Misc C/C++-like keywords\n+syn keyword gimpleStructure     struct union enum typedef class\n+syn keyword gimpleStorageClass  static register auto volatile extern const\n+            \\ template inline __attribute__ _Alignas alignas _Atomic\n+            \\ _Thread_local thread_local _Alignof alignof sizeof\n+\n+hi def link gimpleType          Type\n+hi def link gimpleNumber        Number\n+hi def link gimpleFloat         Float\n+hi def link gimpleConstant      Constant\n+hi def link gimpleStructure     Structure\n+hi def link gimpleStorageClass  StorageClass\n+hi def link gimpleOperator      Operator\n+hi def link gimpleASTNode       Operator\n+hi def link gimpleStatement     Statement\n+hi def link gimpleConditional   Conditional\n+hi def link gimpleLoop          Repeat\n+hi def link gimpleException     Exception\n+hi def link gimpleComment       Comment\n+hi def link gimpleLineNo        Comment\n+hi def link gimpleLabel         Label\n+hi def link gimpleAnnotationOp  Debug\n+hi def link gimpleAnnotationMark Debug\n+hi def link gimpleString        String\n+hi def link gimpleUnknownTree   Error\n+\n+let b:current_syntax = \"gimple\"\n+"}]}