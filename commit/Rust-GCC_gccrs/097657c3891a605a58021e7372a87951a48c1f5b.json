{"sha": "097657c3891a605a58021e7372a87951a48c1f5b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDk3NjU3YzM4OTFhNjA1YTU4MDIxZTczNzJhODc5NTFhNDhjMWY1Yg==", "commit": {"author": {"name": "Alan Modra", "email": "amodra@bigpond.net.au", "date": "2002-07-24T07:15:10Z"}, "committer": {"name": "Alan Modra", "email": "amodra@gcc.gnu.org", "date": "2002-07-24T07:15:10Z"}, "message": "rs6000.md: Remove scratch reg on insns using addze and similar (plus (comparison r1 r2)...\n\n\t* config/rs6000/rs6000.md: Remove scratch reg on insns using\n\taddze and similar (plus (comparison r1 r2) r3) insns.  Add\n\tmissing scratch reg in one case.  Formatting fixes.\n\nFrom-SVN: r55695", "tree": {"sha": "50da7be181fb9f3ac1e9da2fbcf46ef58ffea794", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/50da7be181fb9f3ac1e9da2fbcf46ef58ffea794"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/097657c3891a605a58021e7372a87951a48c1f5b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/097657c3891a605a58021e7372a87951a48c1f5b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/097657c3891a605a58021e7372a87951a48c1f5b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/097657c3891a605a58021e7372a87951a48c1f5b/comments", "author": null, "committer": null, "parents": [{"sha": "d795dc906c624c7be7ed79f25e8463115a1e8f29", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d795dc906c624c7be7ed79f25e8463115a1e8f29", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d795dc906c624c7be7ed79f25e8463115a1e8f29"}], "stats": {"total": 359, "additions": 158, "deletions": 201}, "files": [{"sha": "17a3bc49bdbfabc7e691e2f60d43c5d294436948", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/097657c3891a605a58021e7372a87951a48c1f5b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/097657c3891a605a58021e7372a87951a48c1f5b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=097657c3891a605a58021e7372a87951a48c1f5b", "patch": "@@ -1,3 +1,9 @@\n+2002-07-24  Alan Modra  <amodra@bigpond.net.au>\n+\n+\t* config/rs6000/rs6000.md: Remove scratch reg on insns using\n+\taddze and similar (plus (comparison r1 r2) r3) insns.  Add\n+\tmissing scratch reg in one case.  Formatting fixes.\n+\n 2002-07-24  Neil Booth  <neil@daikokuya.co.uk>\n \n \t* cppexp.c (parse_defined): Mark macro used."}, {"sha": "4439603c21ee1a5e46642143e0259b64385684b6", "filename": "gcc/config/rs6000/rs6000.md", "status": "modified", "additions": 152, "deletions": 201, "changes": 353, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/097657c3891a605a58021e7372a87951a48c1f5b/gcc%2Fconfig%2Frs6000%2Frs6000.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/097657c3891a605a58021e7372a87951a48c1f5b/gcc%2Fconfig%2Frs6000%2Frs6000.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.md?ref=097657c3891a605a58021e7372a87951a48c1f5b", "patch": "@@ -11393,15 +11393,14 @@\n   \"\")\n \n (define_insn \"\"\n-  [(set (match_operand:SI 0 \"gpc_reg_operand\" \"=r,r\")\n+  [(set (match_operand:SI 0 \"gpc_reg_operand\" \"=&r,&r\")\n \t(plus:SI (le:SI (match_operand:SI 1 \"gpc_reg_operand\" \"r,r\")\n \t\t\t(match_operand:SI 2 \"reg_or_short_operand\" \"r,O\"))\n-\t\t (match_operand:SI 3 \"gpc_reg_operand\" \"r,r\")))\n-   (clobber (match_scratch:SI 4 \"=&r,&r\"))]\n+\t\t (match_operand:SI 3 \"gpc_reg_operand\" \"r,r\")))]\n   \"TARGET_POWER\"\n   \"@\n-   doz %4,%2,%1\\;{sfi|subfic} %4,%4,0\\;{aze|addze} %0,%3\n-   {srai|srawi} %4,%1,31\\;{sf|subfc} %4,%1,%4\\;{aze|addze} %0,%3\"\n+   doz %0,%2,%1\\;{sfi|subfic} %0,%0,0\\;{aze|addze} %0,%3\n+   {srai|srawi} %0,%1,31\\;{sf|subfc} %0,%1,%0\\;{aze|addze} %0,%3\"\n   [(set_attr \"length\" \"12\")])\n \n (define_insn \"\"\n@@ -11432,46 +11431,43 @@\n   \"TARGET_POWER && reload_completed\"\n   [(set (match_dup 4)\n \t(plus:SI (le:SI (match_dup 1) (match_dup 2))\n-\t\t  (match_dup 3)))\n+\t\t (match_dup 3)))\n    (set (match_dup 0)\n \t(compare:CC (match_dup 4)\n \t\t    (const_int 0)))]\n   \"\")\n \n (define_insn \"\"\n-  [(set (match_operand:CC 5 \"cc_reg_operand\" \"=x,x,?y,?y\")\n+  [(set (match_operand:CC 4 \"cc_reg_operand\" \"=x,x,?y,?y\")\n \t(compare:CC\n \t (plus:SI (le:SI (match_operand:SI 1 \"gpc_reg_operand\" \"r,r,r,r\")\n \t\t\t (match_operand:SI 2 \"reg_or_short_operand\" \"r,O,r,O\"))\n \t\t  (match_operand:SI 3 \"gpc_reg_operand\" \"r,r,r,r\"))\n \t (const_int 0)))\n-   (set (match_operand:SI 0 \"gpc_reg_operand\" \"=r,r,r,r\")\n-\t(plus:SI (le:SI (match_dup 1) (match_dup 2)) (match_dup 3)))\n-   (clobber (match_scratch:SI 4 \"=&r,&r,&r,&r\"))]\n+   (set (match_operand:SI 0 \"gpc_reg_operand\" \"=&r,&r,&r,&r\")\n+\t(plus:SI (le:SI (match_dup 1) (match_dup 2)) (match_dup 3)))]\n   \"TARGET_POWER\"\n   \"@\n-   doz %4,%2,%1\\;{sfi|subfic} %4,%4,0\\;{aze.|addze.} %0,%3\n-   {srai|srawi} %4,%1,31\\;{sf|subfc} %4,%1,%4\\;{aze.|addze.} %0,%3\n+   doz %0,%2,%1\\;{sfi|subfic} %0,%0,0\\;{aze.|addze.} %0,%3\n+   {srai|srawi} %0,%1,31\\;{sf|subfc} %0,%1,%0\\;{aze.|addze.} %0,%3\n    #\n    #\"\n   [(set_attr \"type\" \"compare\")\n    (set_attr \"length\" \"12,12,16,16\")])\n \n (define_split\n-  [(set (match_operand:CC 5 \"cc_reg_not_cr0_operand\" \"\")\n+  [(set (match_operand:CC 4 \"cc_reg_not_cr0_operand\" \"\")\n \t(compare:CC\n \t (plus:SI (le:SI (match_operand:SI 1 \"gpc_reg_operand\" \"\")\n \t\t\t (match_operand:SI 2 \"reg_or_short_operand\" \"\"))\n \t\t  (match_operand:SI 3 \"gpc_reg_operand\" \"\"))\n \t (const_int 0)))\n    (set (match_operand:SI 0 \"gpc_reg_operand\" \"\")\n-\t(plus:SI (le:SI (match_dup 1) (match_dup 2)) (match_dup 3)))\n-   (clobber (match_scratch:SI 4 \"\"))]\n+\t(plus:SI (le:SI (match_dup 1) (match_dup 2)) (match_dup 3)))]\n   \"TARGET_POWER && reload_completed\"\n-  [(parallel [(set (match_dup 0)\n+  [(set (match_dup 0)\n \t(plus:SI (le:SI (match_dup 1) (match_dup 2)) (match_dup 3)))\n-   (clobber (match_dup 4))])\n-   (set (match_dup 5)\n+   (set (match_dup 4)\n \t(compare:CC (match_dup 0)\n \t\t    (const_int 0)))]\n   \"\")\n@@ -11621,37 +11617,34 @@\n   \"\")\n \n (define_insn \"\"\n-  [(set (match_operand:CC 5 \"cc_reg_operand\" \"=x,?y\")\n+  [(set (match_operand:CC 4 \"cc_reg_operand\" \"=x,?y\")\n \t(compare:CC\n \t (plus:SI (leu:SI (match_operand:SI 1 \"gpc_reg_operand\" \"r,r\")\n \t\t\t  (match_operand:SI 2 \"reg_or_short_operand\" \"rI,rI\"))\n \t\t  (match_operand:SI 3 \"gpc_reg_operand\" \"r,r\"))\n \t (const_int 0)))\n-   (set (match_operand:SI 0 \"gpc_reg_operand\" \"=r,r\")\n-\t(plus:SI (leu:SI (match_dup 1) (match_dup 2)) (match_dup 3)))\n-   (clobber (match_scratch:SI 4 \"=&r,&r\"))]\n+   (set (match_operand:SI 0 \"gpc_reg_operand\" \"=&r,&r\")\n+\t(plus:SI (leu:SI (match_dup 1) (match_dup 2)) (match_dup 3)))]\n   \"! TARGET_POWERPC64\"\n   \"@\n-   {sf%I2|subf%I2c} %4,%1,%2\\;{aze.|addze.} %0,%3\n+   {sf%I2|subf%I2c} %0,%1,%2\\;{aze.|addze.} %0,%3\n    #\"\n   [(set_attr \"type\" \"compare\")\n    (set_attr \"length\" \"8,12\")])\n \n (define_split\n-  [(set (match_operand:CC 5 \"cc_reg_not_cr0_operand\" \"\")\n+  [(set (match_operand:CC 4 \"cc_reg_not_cr0_operand\" \"\")\n \t(compare:CC\n \t (plus:SI (leu:SI (match_operand:SI 1 \"gpc_reg_operand\" \"\")\n \t\t\t  (match_operand:SI 2 \"reg_or_short_operand\" \"\"))\n \t\t  (match_operand:SI 3 \"gpc_reg_operand\" \"\"))\n \t (const_int 0)))\n    (set (match_operand:SI 0 \"gpc_reg_operand\" \"\")\n-\t(plus:SI (leu:SI (match_dup 1) (match_dup 2)) (match_dup 3)))\n-   (clobber (match_scratch:SI 4 \"\"))]\n+\t(plus:SI (leu:SI (match_dup 1) (match_dup 2)) (match_dup 3)))]\n   \"! TARGET_POWERPC64 && reload_completed\"\n-  [(parallel [(set (match_dup 0)\n+  [(set (match_dup 0)\n \t(plus:SI (leu:SI (match_dup 1) (match_dup 2)) (match_dup 3)))\n-   (clobber (match_dup 4))])\n-   (set (match_dup 5)\n+   (set (match_dup 4)\n \t(compare:CC (match_dup 0)\n \t\t    (const_int 0)))]\n   \"\")\n@@ -11665,14 +11658,13 @@\n    [(set_attr \"length\" \"12\")])\n \n (define_insn \"\"\n-  [(set (match_operand:SI 0 \"gpc_reg_operand\" \"=r\")\n+  [(set (match_operand:SI 0 \"gpc_reg_operand\" \"=&r\")\n \t(and:SI (neg:SI\n \t\t (leu:SI (match_operand:SI 1 \"gpc_reg_operand\" \"r\")\n \t\t\t (match_operand:SI 2 \"reg_or_short_operand\" \"rI\")))\n-\t\t(match_operand:SI 3 \"gpc_reg_operand\" \"r\")))\n-   (clobber (match_scratch:SI 4 \"=&r\"))]\n+\t\t(match_operand:SI 3 \"gpc_reg_operand\" \"r\")))]\n   \"! TARGET_POWERPC64\"\n-  \"{sf%I2|subf%I2c} %4,%1,%2\\;{sfe|subfe} %4,%4,%4\\;andc %0,%3,%4\"\n+  \"{sf%I2|subf%I2c} %0,%1,%2\\;{sfe|subfe} %0,%0,%0\\;andc %0,%3,%0\"\n   [(set_attr \"length\" \"12\")])\n \n (define_insn \"\"\n@@ -11702,48 +11694,45 @@\n    (clobber (match_scratch:SI 4 \"\"))]\n   \"! TARGET_POWERPC64 && reload_completed\"\n   [(set (match_dup 4)\n-\t(and:SI (neg:SI (leu:SI (match_dup 1)\n-\t\t\t  (match_dup 2)))\n-\t\t (match_dup 3)))\n+\t(and:SI (neg:SI (leu:SI (match_dup 1) (match_dup 2)))\n+\t\t(match_dup 3)))\n    (set (match_dup 0)\n \t(compare:CC (match_dup 4)\n \t\t    (const_int 0)))]\n   \"\")\n \n (define_insn \"\"\n-  [(set (match_operand:CC 5 \"cc_reg_operand\" \"=x,?y\")\n+  [(set (match_operand:CC 4 \"cc_reg_operand\" \"=x,?y\")\n \t(compare:CC\n \t (and:SI (neg:SI\n \t\t  (leu:SI (match_operand:SI 1 \"gpc_reg_operand\" \"r,r\")\n \t\t\t  (match_operand:SI 2 \"reg_or_short_operand\" \"rI,rI\")))\n \t\t (match_operand:SI 3 \"gpc_reg_operand\" \"r,r\"))\n \t (const_int 0)))\n-   (set (match_operand:SI 0 \"gpc_reg_operand\" \"=r,r\")\n-\t(and:SI (neg:SI (leu:SI (match_dup 1) (match_dup 2))) (match_dup 3)))\n-   (clobber (match_scratch:SI 4 \"=&r,&r\"))]\n+   (set (match_operand:SI 0 \"gpc_reg_operand\" \"=&r,&r\")\n+\t(and:SI (neg:SI (leu:SI (match_dup 1) (match_dup 2))) (match_dup 3)))]\n   \"! TARGET_POWERPC64\"\n   \"@\n-   {sf%I2|subf%I2c} %4,%1,%2\\;{sfe|subfe} %4,%4,%4\\;andc. %0,%3,%4\n+   {sf%I2|subf%I2c} %0,%1,%2\\;{sfe|subfe} %0,%0,%0\\;andc. %0,%3,%0\n    #\"\n   [(set_attr \"type\" \"compare\")\n    (set_attr \"length\" \"12,16\")])\n \n (define_split\n-  [(set (match_operand:CC 5 \"cc_reg_not_cr0_operand\" \"\")\n+  [(set (match_operand:CC 4 \"cc_reg_not_cr0_operand\" \"\")\n \t(compare:CC\n \t (and:SI (neg:SI\n \t\t  (leu:SI (match_operand:SI 1 \"gpc_reg_operand\" \"\")\n \t\t\t  (match_operand:SI 2 \"reg_or_short_operand\" \"\")))\n \t\t (match_operand:SI 3 \"gpc_reg_operand\" \"\"))\n \t (const_int 0)))\n    (set (match_operand:SI 0 \"gpc_reg_operand\" \"\")\n-\t(and:SI (neg:SI (leu:SI (match_dup 1) (match_dup 2))) (match_dup 3)))\n-   (clobber (match_scratch:SI 4 \"\"))]\n+\t(and:SI (neg:SI (leu:SI (match_dup 1) (match_dup 2))) (match_dup 3)))]\n   \"! TARGET_POWERPC64 && reload_completed\"\n-  [(parallel [(set (match_dup 0)\n-\t(and:SI (neg:SI (leu:SI (match_dup 1) (match_dup 2))) (match_dup 3)))\n-   (clobber (match_dup 4))])\n-   (set (match_dup 5)\n+  [(set (match_dup 0)\n+\t(and:SI (neg:SI (leu:SI (match_dup 1) (match_dup 2)))\n+\t\t(match_dup 3)))\n+   (set (match_dup 4)\n \t(compare:CC (match_dup 0)\n \t\t    (const_int 0)))]\n   \"\")\n@@ -11788,13 +11777,12 @@\n   \"\")\n \n (define_insn \"\"\n-  [(set (match_operand:SI 0 \"gpc_reg_operand\" \"=r\")\n+  [(set (match_operand:SI 0 \"gpc_reg_operand\" \"=&r\")\n \t(plus:SI (lt:SI (match_operand:SI 1 \"gpc_reg_operand\" \"r\")\n \t\t\t(match_operand:SI 2 \"reg_or_short_operand\" \"rI\"))\n-\t\t (match_operand:SI 3 \"gpc_reg_operand\" \"r\")))\n-   (clobber (match_scratch:SI 4 \"=&r\"))]\n+\t\t (match_operand:SI 3 \"gpc_reg_operand\" \"r\")))]\n   \"TARGET_POWER\"\n-  \"doz%I2 %4,%1,%2\\;{ai|addic} %4,%4,-1\\;{aze|addze} %0,%3\"\n+  \"doz%I2 %0,%1,%2\\;{ai|addic} %0,%0,-1\\;{aze|addze} %0,%3\"\n   [(set_attr \"length\" \"12\")])\n \n (define_insn \"\"\n@@ -11823,44 +11811,41 @@\n   \"TARGET_POWER && reload_completed\"\n   [(set (match_dup 4)\n \t(plus:SI (lt:SI (match_dup 1) (match_dup 2))\n-\t\t  (match_dup 3)))\n+\t\t (match_dup 3)))\n    (set (match_dup 0)\n \t(compare:CC (match_dup 4)\n \t\t    (const_int 0)))]\n   \"\")\n \n (define_insn \"\"\n-  [(set (match_operand:CC 5 \"cc_reg_operand\" \"=x,?y\")\n+  [(set (match_operand:CC 4 \"cc_reg_operand\" \"=x,?y\")\n \t(compare:CC\n \t (plus:SI (lt:SI (match_operand:SI 1 \"gpc_reg_operand\" \"r,r\")\n \t\t\t (match_operand:SI 2 \"reg_or_short_operand\" \"rI,rI\"))\n \t\t  (match_operand:SI 3 \"gpc_reg_operand\" \"r,r\"))\n \t (const_int 0)))\n-   (set (match_operand:SI 0 \"gpc_reg_operand\" \"=r,r\")\n-\t(plus:SI (lt:SI (match_dup 1) (match_dup 2)) (match_dup 3)))\n-   (clobber (match_scratch:SI 4 \"=&r,&r\"))]\n+   (set (match_operand:SI 0 \"gpc_reg_operand\" \"=&r,&r\")\n+\t(plus:SI (lt:SI (match_dup 1) (match_dup 2)) (match_dup 3)))]\n   \"TARGET_POWER\"\n   \"@\n-   doz%I2 %4,%1,%2\\;{ai|addic} %4,%4,-1\\;{aze.|addze.} %0,%3\n+   doz%I2 %0,%1,%2\\;{ai|addic} %0,%0,-1\\;{aze.|addze.} %0,%3\n    #\"\n   [(set_attr \"type\" \"compare\")\n    (set_attr \"length\" \"12,16\")])\n \n (define_split\n-  [(set (match_operand:CC 5 \"cc_reg_not_cr0_operand\" \"\")\n+  [(set (match_operand:CC 4 \"cc_reg_not_cr0_operand\" \"\")\n \t(compare:CC\n \t (plus:SI (lt:SI (match_operand:SI 1 \"gpc_reg_operand\" \"\")\n \t\t\t (match_operand:SI 2 \"reg_or_short_operand\" \"\"))\n \t\t  (match_operand:SI 3 \"gpc_reg_operand\" \"\"))\n \t (const_int 0)))\n    (set (match_operand:SI 0 \"gpc_reg_operand\" \"\")\n-\t(plus:SI (lt:SI (match_dup 1) (match_dup 2)) (match_dup 3)))\n-   (clobber (match_scratch:SI 4 \"\"))]\n+\t(plus:SI (lt:SI (match_dup 1) (match_dup 2)) (match_dup 3)))]\n   \"TARGET_POWER && reload_completed\"\n-  [(parallel [(set (match_dup 0)\n+  [(set (match_dup 0)\n \t(plus:SI (lt:SI (match_dup 1) (match_dup 2)) (match_dup 3)))\n-   (clobber (match_dup 4))])\n-   (set (match_dup 5)\n+   (set (match_dup 4)\n \t(compare:CC (match_dup 0)\n \t\t    (const_int 0)))]\n   \"\")\n@@ -11955,46 +11940,43 @@\n   \"! TARGET_POWERPC64 && reload_completed\"\n   [(set (match_dup 4)\n \t(plus:SI (ltu:SI (match_dup 1) (match_dup 2))\n-\t\t  (match_dup 3)))\n+\t\t (match_dup 3)))\n    (set (match_dup 0)\n \t(compare:CC (match_dup 4)\n \t\t    (const_int 0)))]\n   \"\")\n \n (define_insn \"\"\n-  [(set (match_operand:CC 5 \"cc_reg_operand\" \"=x,x,?y,?y\")\n+  [(set (match_operand:CC 4 \"cc_reg_operand\" \"=x,x,?y,?y\")\n \t(compare:CC\n \t (plus:SI (ltu:SI (match_operand:SI 1 \"gpc_reg_operand\" \"r,r,r,r\")\n \t\t\t  (match_operand:SI 2 \"reg_or_neg_short_operand\" \"r,P,r,P\"))\n \t\t  (match_operand:SI 3 \"gpc_reg_operand\" \"r,r,r,r\"))\n \t (const_int 0)))\n-   (set (match_operand:SI 0 \"gpc_reg_operand\" \"=r,r,r,r\")\n-\t(plus:SI (ltu:SI (match_dup 1) (match_dup 2)) (match_dup 3)))\n-   (clobber (match_scratch:SI 4 \"=&r,&r,&r,&r\"))]\n+   (set (match_operand:SI 0 \"gpc_reg_operand\" \"=&r,&r,&r,&r\")\n+\t(plus:SI (ltu:SI (match_dup 1) (match_dup 2)) (match_dup 3)))]\n   \"! TARGET_POWERPC64\"\n   \"@\n-   {sf|subfc} %4,%2,%1\\;{sfe|subfe} %4,%4,%4\\;{sf.|subfc.} %0,%4,%3\n-   {ai|addic} %4,%1,%n2\\;{sfe|subfe} %4,%4,%4\\;{sf.|subfc.} %0,%4,%3\n+   {sf|subfc} %0,%2,%1\\;{sfe|subfe} %0,%0,%0\\;{sf.|subfc.} %0,%0,%3\n+   {ai|addic} %0,%1,%n2\\;{sfe|subfe} %0,%0,%0\\;{sf.|subfc.} %0,%0,%3\n    #\n    #\"\n   [(set_attr \"type\" \"compare\")\n    (set_attr \"length\" \"12,12,16,16\")])\n \n (define_split\n-  [(set (match_operand:CC 5 \"cc_reg_not_cr0_operand\" \"\")\n+  [(set (match_operand:CC 4 \"cc_reg_not_cr0_operand\" \"\")\n \t(compare:CC\n \t (plus:SI (ltu:SI (match_operand:SI 1 \"gpc_reg_operand\" \"\")\n \t\t\t  (match_operand:SI 2 \"reg_or_neg_short_operand\" \"\"))\n \t\t  (match_operand:SI 3 \"gpc_reg_operand\" \"\"))\n \t (const_int 0)))\n    (set (match_operand:SI 0 \"gpc_reg_operand\" \"\")\n-\t(plus:SI (ltu:SI (match_dup 1) (match_dup 2)) (match_dup 3)))\n-   (clobber (match_scratch:SI 4 \"\"))]\n+\t(plus:SI (ltu:SI (match_dup 1) (match_dup 2)) (match_dup 3)))]\n   \"! TARGET_POWERPC64 && reload_completed\"\n-  [(parallel [(set (match_dup 0)\n+  [(set (match_dup 0)\n \t(plus:SI (ltu:SI (match_dup 1) (match_dup 2)) (match_dup 3)))\n-   (clobber (match_dup 4))])\n-   (set (match_dup 5)\n+   (set (match_dup 4)\n \t(compare:CC (match_dup 0)\n \t\t    (const_int 0)))]\n   \"\")\n@@ -12045,21 +12027,20 @@\n    (clobber (match_scratch:SI 3 \"\"))]\n   \"TARGET_POWER && reload_completed\"\n   [(parallel [(set (match_dup 0)\n-\t(ge:SI (match_dup 1) (match_dup 2)))\n-   (clobber (match_dup 3))])\n+\t\t   (ge:SI (match_dup 1) (match_dup 2)))\n+\t      (clobber (match_dup 3))])\n    (set (match_dup 4)\n \t(compare:CC (match_dup 0)\n \t\t    (const_int 0)))]\n   \"\")\n \n (define_insn \"\"\n-  [(set (match_operand:SI 0 \"gpc_reg_operand\" \"=r\")\n+  [(set (match_operand:SI 0 \"gpc_reg_operand\" \"=&r\")\n \t(plus:SI (ge:SI (match_operand:SI 1 \"gpc_reg_operand\" \"r\")\n \t\t\t(match_operand:SI 2 \"reg_or_short_operand\" \"rI\"))\n-\t\t (match_operand:SI 3 \"gpc_reg_operand\" \"r\")))\n-   (clobber (match_scratch:SI 4 \"=&r\"))]\n+\t\t (match_operand:SI 3 \"gpc_reg_operand\" \"r\")))]\n   \"TARGET_POWER\"\n-  \"doz%I2 %4,%1,%2\\;{sfi|subfic} %4,%4,0\\;{aze|addze} %0,%3\"\n+  \"doz%I2 %0,%1,%2\\;{sfi|subfic} %0,%0,0\\;{aze|addze} %0,%3\"\n   [(set_attr \"length\" \"12\")])\n \n (define_insn \"\"\n@@ -12088,44 +12069,41 @@\n   \"TARGET_POWER && reload_completed\"\n   [(set (match_dup 4)\n \t(plus:SI (ge:SI (match_dup 1) (match_dup 2))\n-\t\t  (match_dup 3)))\n+\t\t (match_dup 3)))\n    (set (match_dup 0)\n \t(compare:CC (match_dup 4)\n \t\t    (const_int 0)))]\n   \"\")\n \n (define_insn \"\"\n-  [(set (match_operand:CC 5 \"cc_reg_operand\" \"=x,?y\")\n+  [(set (match_operand:CC 4 \"cc_reg_operand\" \"=x,?y\")\n \t(compare:CC\n \t (plus:SI (ge:SI (match_operand:SI 1 \"gpc_reg_operand\" \"r,r\")\n \t\t\t (match_operand:SI 2 \"reg_or_short_operand\" \"rI,rI\"))\n \t\t  (match_operand:SI 3 \"gpc_reg_operand\" \"r,r\"))\n \t (const_int 0)))\n-   (set (match_operand:SI 0 \"gpc_reg_operand\" \"=r,r\")\n-\t(plus:SI (ge:SI (match_dup 1) (match_dup 2)) (match_dup 3)))\n-   (clobber (match_scratch:SI 4 \"=&r,&r\"))]\n+   (set (match_operand:SI 0 \"gpc_reg_operand\" \"=&r,&r\")\n+\t(plus:SI (ge:SI (match_dup 1) (match_dup 2)) (match_dup 3)))]\n   \"TARGET_POWER\"\n   \"@\n-   doz%I2 %4,%1,%2\\;{sfi|subfic} %4,%4,0\\;{aze.|addze.} %0,%3\n+   doz%I2 %0,%1,%2\\;{sfi|subfic} %0,%0,0\\;{aze.|addze.} %0,%3\n    #\"\n   [(set_attr \"type\" \"compare\")\n    (set_attr \"length\" \"12,16\")])\n \n (define_split\n-  [(set (match_operand:CC 5 \"cc_reg_not_cr0_operand\" \"\")\n+  [(set (match_operand:CC 4 \"cc_reg_not_cr0_operand\" \"\")\n \t(compare:CC\n \t (plus:SI (ge:SI (match_operand:SI 1 \"gpc_reg_operand\" \"\")\n \t\t\t (match_operand:SI 2 \"reg_or_short_operand\" \"\"))\n \t\t  (match_operand:SI 3 \"gpc_reg_operand\" \"\"))\n \t (const_int 0)))\n    (set (match_operand:SI 0 \"gpc_reg_operand\" \"\")\n-\t(plus:SI (ge:SI (match_dup 1) (match_dup 2)) (match_dup 3)))\n-   (clobber (match_scratch:SI 4 \"\"))]\n+\t(plus:SI (ge:SI (match_dup 1) (match_dup 2)) (match_dup 3)))]\n   \"TARGET_POWER && reload_completed\"\n-  [(parallel [(set (match_dup 0)\n+  [(set (match_dup 0)\n \t(plus:SI (ge:SI (match_dup 1) (match_dup 2)) (match_dup 3)))\n-   (clobber (match_dup 4))])\n-   (set (match_dup 5)\n+   (set (match_dup 4)\n \t(compare:CC (match_dup 0)\n \t\t    (const_int 0)))]\n   \"\")\n@@ -12270,39 +12248,36 @@\n   \"\")\n \n (define_insn \"\"\n-  [(set (match_operand:CC 5 \"cc_reg_operand\" \"=x,x,?y,?y\")\n+  [(set (match_operand:CC 4 \"cc_reg_operand\" \"=x,x,?y,?y\")\n \t(compare:CC\n \t (plus:SI (geu:SI (match_operand:SI 1 \"gpc_reg_operand\" \"r,r,r,r\")\n \t\t\t  (match_operand:SI 2 \"reg_or_neg_short_operand\" \"r,P,r,P\"))\n \t\t  (match_operand:SI 3 \"gpc_reg_operand\" \"r,r,r,r\"))\n \t (const_int 0)))\n-   (set (match_operand:SI 0 \"gpc_reg_operand\" \"=r,r,r,r\")\n-\t(plus:SI (geu:SI (match_dup 1) (match_dup 2)) (match_dup 3)))\n-   (clobber (match_scratch:SI 4 \"=&r,&r,&r,&r\"))]\n+   (set (match_operand:SI 0 \"gpc_reg_operand\" \"=&r,&r,&r,&r\")\n+\t(plus:SI (geu:SI (match_dup 1) (match_dup 2)) (match_dup 3)))]\n   \"! TARGET_POWERPC64\"\n   \"@\n-   {sf|subfc} %4,%2,%1\\;{aze.|addze.} %0,%3\n-   {ai|addic} %4,%1,%n2\\;{aze.|addze.} %0,%3\n+   {sf|subfc} %0,%2,%1\\;{aze.|addze.} %0,%3\n+   {ai|addic} %0,%1,%n2\\;{aze.|addze.} %0,%3\n    #\n    #\"\n   [(set_attr \"type\" \"compare\")\n    (set_attr \"length\" \"8,8,12,12\")])\n \n (define_split\n-  [(set (match_operand:CC 5 \"cc_reg_not_cr0_operand\" \"\")\n+  [(set (match_operand:CC 4 \"cc_reg_not_cr0_operand\" \"\")\n \t(compare:CC\n \t (plus:SI (geu:SI (match_operand:SI 1 \"gpc_reg_operand\" \"\")\n \t\t\t  (match_operand:SI 2 \"reg_or_neg_short_operand\" \"\"))\n \t\t  (match_operand:SI 3 \"gpc_reg_operand\" \"\"))\n \t (const_int 0)))\n    (set (match_operand:SI 0 \"gpc_reg_operand\" \"\")\n-\t(plus:SI (geu:SI (match_dup 1) (match_dup 2)) (match_dup 3)))\n-   (clobber (match_scratch:SI 4 \"\"))]\n+\t(plus:SI (geu:SI (match_dup 1) (match_dup 2)) (match_dup 3)))]\n   \"! TARGET_POWERPC64 && reload_completed\"\n-  [(parallel [(set (match_dup 0)\n+  [(set (match_dup 0)\n \t(plus:SI (geu:SI (match_dup 1) (match_dup 2)) (match_dup 3)))\n-   (clobber (match_dup 4))])\n-   (set (match_dup 5)\n+   (set (match_dup 4)\n \t(compare:CC (match_dup 0)\n \t\t    (const_int 0)))]\n   \"\")\n@@ -12318,16 +12293,15 @@\n   [(set_attr \"length\" \"12\")])\n \n (define_insn \"\"\n-  [(set (match_operand:SI 0 \"gpc_reg_operand\" \"=r,r\")\n+  [(set (match_operand:SI 0 \"gpc_reg_operand\" \"=&r,&r\")\n \t(and:SI (neg:SI\n \t\t (geu:SI (match_operand:SI 1 \"gpc_reg_operand\" \"r,r\")\n \t\t\t (match_operand:SI 2 \"reg_or_neg_short_operand\" \"r,P\")))\n-\t\t(match_operand:SI 3 \"gpc_reg_operand\" \"r,r\")))\n-   (clobber (match_scratch:SI 4 \"=&r,&r\"))]\n+\t\t(match_operand:SI 3 \"gpc_reg_operand\" \"r,r\")))]\n   \"! TARGET_POWERPC64\"\n   \"@\n-   {sf|subfc} %4,%2,%1\\;{sfe|subfe} %4,%4,%4\\;andc %0,%3,%4\n-   {ai|addic} %4,%1,%n2\\;{sfe|subfe} %4,%4,%4\\;andc %0,%3,%4\"\n+   {sf|subfc} %0,%2,%1\\;{sfe|subfe} %0,%0,%0\\;andc %0,%3,%0\n+   {ai|addic} %0,%1,%n2\\;{sfe|subfe} %0,%0,%0\\;andc %0,%3,%0\"\n   [(set_attr \"length\" \"12\")])\n \n (define_insn \"\"\n@@ -12359,50 +12333,46 @@\n    (clobber (match_scratch:SI 4 \"\"))]\n   \"! TARGET_POWERPC64 && reload_completed\"\n   [(set (match_dup 4)\n-\t(and:SI (neg:SI (geu:SI (match_dup 1)\n-\t\t\t  (match_dup 2)))\n-\t\t (match_dup 3)))\n+\t(and:SI (neg:SI (geu:SI (match_dup 1) (match_dup 2)))\n+\t\t(match_dup 3)))\n    (set (match_dup 0)\n \t(compare:CC (match_dup 4)\n \t\t    (const_int 0)))]\n   \"\")\n \n (define_insn \"\"\n-  [(set (match_operand:CC 5 \"cc_reg_operand\" \"=x,x,?y,?y\")\n+  [(set (match_operand:CC 4 \"cc_reg_operand\" \"=x,x,?y,?y\")\n \t(compare:CC\n \t (and:SI (neg:SI\n \t\t  (geu:SI (match_operand:SI 1 \"gpc_reg_operand\" \"r,r,r,r\")\n \t\t\t  (match_operand:SI 2 \"reg_or_neg_short_operand\" \"r,P,r,P\")))\n \t\t (match_operand:SI 3 \"gpc_reg_operand\" \"r,r,r,r\"))\n \t (const_int 0)))\n-   (set (match_operand:SI 0 \"gpc_reg_operand\" \"=r,r,r,r\")\n-\t(and:SI (neg:SI (geu:SI (match_dup 1) (match_dup 2))) (match_dup 3)))\n-   (clobber (match_scratch:SI 4 \"=&r,&r,&r,&r\"))]\n+   (set (match_operand:SI 0 \"gpc_reg_operand\" \"=&r,&r,&r,&r\")\n+\t(and:SI (neg:SI (geu:SI (match_dup 1) (match_dup 2))) (match_dup 3)))]\n   \"! TARGET_POWERPC64\"\n   \"@\n-   {sf|subfc} %4,%2,%1\\;{sfe|subfe} %4,%4,%4\\;andc. %0,%3,%4\n-   {ai|addic} %4,%1,%n2\\;{sfe|subfe} %4,%4,%4\\;andc. %0,%3,%4\n+   {sf|subfc} %0,%2,%1\\;{sfe|subfe} %0,%0,%0\\;andc. %0,%3,%0\n+   {ai|addic} %0,%1,%n2\\;{sfe|subfe} %0,%0,%0\\;andc. %0,%3,%0\n    #\n    #\"\n   [(set_attr \"type\" \"compare\")\n    (set_attr \"length\" \"12,12,16,16\")])\n \n (define_split\n-  [(set (match_operand:CC 5 \"cc_reg_not_cr0_operand\" \"\")\n+  [(set (match_operand:CC 4 \"cc_reg_not_cr0_operand\" \"\")\n \t(compare:CC\n \t (and:SI (neg:SI\n \t\t  (geu:SI (match_operand:SI 1 \"gpc_reg_operand\" \"\")\n \t\t\t  (match_operand:SI 2 \"reg_or_neg_short_operand\" \"\")))\n \t\t (match_operand:SI 3 \"gpc_reg_operand\" \"\"))\n \t (const_int 0)))\n    (set (match_operand:SI 0 \"gpc_reg_operand\" \"\")\n-\t(and:SI (neg:SI (geu:SI (match_dup 1) (match_dup 2))) (match_dup 3)))\n-   (clobber (match_scratch:SI 4 \"\"))]\n+\t(and:SI (neg:SI (geu:SI (match_dup 1) (match_dup 2))) (match_dup 3)))]\n   \"! TARGET_POWERPC64 && reload_completed\"\n-  [(parallel [(set (match_dup 0)\n+  [(set (match_dup 0)\n \t(and:SI (neg:SI (geu:SI (match_dup 1) (match_dup 2))) (match_dup 3)))\n-   (clobber (match_dup 4))])\n-   (set (match_dup 5)\n+   (set (match_dup 4)\n \t(compare:CC (match_dup 0)\n \t\t    (const_int 0)))]\n   \"\")\n@@ -12534,13 +12504,12 @@\n   [(set_attr \"length\" \"12\")])\n \n (define_insn \"\"\n-  [(set (match_operand:DI 0 \"gpc_reg_operand\" \"=r\")\n+  [(set (match_operand:DI 0 \"gpc_reg_operand\" \"=&r\")\n \t(plus:DI (gt:DI (match_operand:DI 1 \"gpc_reg_operand\" \"r\")\n \t\t\t(const_int 0))\n-\t\t (match_operand:DI 2 \"gpc_reg_operand\" \"r\")))\n-   (clobber (match_scratch:DI 3 \"=&r\"))]\n+\t\t (match_operand:DI 2 \"gpc_reg_operand\" \"r\")))]\n   \"TARGET_POWERPC64\"\n-  \"addc %3,%1,%1\\;subfe %3,%1,%3\\;addze %0,%2\"\n+  \"addc %0,%1,%1\\;subfe %0,%1,%0\\;addze %0,%2\"\n   [(set_attr \"length\" \"12\")])\n \n (define_insn \"\"\n@@ -12601,92 +12570,85 @@\n   \"TARGET_POWERPC64 && reload_completed\"\n   [(set (match_dup 3)\n \t(plus:DI (gt:DI (match_dup 1) (const_int 0))\n-\t\t  (match_dup 2)))\n+\t\t (match_dup 2)))\n    (set (match_dup 0)\n \t(compare:CC (match_dup 3)\n \t\t    (const_int 0)))]\n   \"\")\n \n (define_insn \"\"\n-  [(set (match_operand:CC 4 \"cc_reg_operand\" \"=x,?y\")\n+  [(set (match_operand:CC 3 \"cc_reg_operand\" \"=x,?y\")\n \t(compare:CC\n \t (plus:SI (gt:SI (match_operand:SI 1 \"gpc_reg_operand\" \"r,r\")\n \t\t\t (const_int 0))\n \t\t  (match_operand:SI 2 \"gpc_reg_operand\" \"r,r\"))\n \t (const_int 0)))\n-   (set (match_operand:SI 0 \"gpc_reg_operand\" \"=r,r\")\n-\t(plus:SI (gt:SI (match_dup 1) (const_int 0)) (match_dup 2)))\n-   (clobber (match_scratch:SI 3 \"=&r,&r\"))]\n+   (set (match_operand:SI 0 \"gpc_reg_operand\" \"=&r,&r\")\n+\t(plus:SI (gt:SI (match_dup 1) (const_int 0)) (match_dup 2)))]\n   \"! TARGET_POWERPC64\"\n   \"@\n-   {a|addc} %3,%1,%1\\;{sfe|subfe} %3,%1,%3\\;{aze.|addze.} %0,%2\n+   {a|addc} %0,%1,%1\\;{sfe|subfe} %0,%1,%0\\;{aze.|addze.} %0,%2\n    #\"\n   [(set_attr \"type\" \"compare\")\n    (set_attr \"length\" \"12,16\")])\n \n (define_split\n-  [(set (match_operand:CC 4 \"cc_reg_not_cr0_operand\" \"\")\n+  [(set (match_operand:CC 3 \"cc_reg_not_cr0_operand\" \"\")\n \t(compare:CC\n \t (plus:SI (gt:SI (match_operand:SI 1 \"gpc_reg_operand\" \"\")\n \t\t\t (const_int 0))\n \t\t  (match_operand:SI 2 \"gpc_reg_operand\" \"\"))\n \t (const_int 0)))\n    (set (match_operand:SI 0 \"gpc_reg_operand\" \"\")\n-\t(plus:SI (gt:SI (match_dup 1) (const_int 0)) (match_dup 2)))\n-   (clobber (match_scratch:SI 3 \"\"))]\n+\t(plus:SI (gt:SI (match_dup 1) (const_int 0)) (match_dup 2)))]\n   \"! TARGET_POWERPC64 && reload_completed\"\n-  [(parallel [(set (match_dup 0)\n+  [(set (match_dup 0)\n \t(plus:SI (gt:SI (match_dup 1) (const_int 0)) (match_dup 2)))\n-   (clobber (match_dup 3))])\n-   (set (match_dup 4)\n+   (set (match_dup 3)\n \t(compare:CC (match_dup 0)\n \t\t    (const_int 0)))]\n   \"\")\n \n (define_insn \"\"\n-  [(set (match_operand:CC 4 \"cc_reg_operand\" \"=x,?y\")\n+  [(set (match_operand:CC 3 \"cc_reg_operand\" \"=x,?y\")\n \t(compare:CC\n \t (plus:DI (gt:DI (match_operand:DI 1 \"gpc_reg_operand\" \"r,r\")\n \t\t\t (const_int 0))\n \t\t  (match_operand:DI 2 \"gpc_reg_operand\" \"r,r\"))\n \t (const_int 0)))\n-   (set (match_operand:DI 0 \"gpc_reg_operand\" \"=r,r\")\n-\t(plus:DI (gt:DI (match_dup 1) (const_int 0)) (match_dup 2)))\n-   (clobber (match_scratch:DI 3 \"=&r,&r\"))]\n+   (set (match_operand:DI 0 \"gpc_reg_operand\" \"=&r,&r\")\n+\t(plus:DI (gt:DI (match_dup 1) (const_int 0)) (match_dup 2)))]\n   \"TARGET_POWERPC64\"\n   \"@\n-   addc %3,%1,%1\\;subfe %3,%1,%3\\;addze. %0,%2\n+   addc %0,%1,%1\\;subfe %0,%1,%0\\;addze. %0,%2\n    #\"\n   [(set_attr \"type\" \"compare\")\n    (set_attr \"length\" \"12,16\")])\n \n (define_split\n-  [(set (match_operand:CC 4 \"cc_reg_not_cr0_operand\" \"\")\n+  [(set (match_operand:CC 3 \"cc_reg_not_cr0_operand\" \"\")\n \t(compare:CC\n \t (plus:DI (gt:DI (match_operand:DI 1 \"gpc_reg_operand\" \"\")\n \t\t\t (const_int 0))\n \t\t  (match_operand:DI 2 \"gpc_reg_operand\" \"\"))\n \t (const_int 0)))\n    (set (match_operand:DI 0 \"gpc_reg_operand\" \"\")\n-\t(plus:DI (gt:DI (match_dup 1) (const_int 0)) (match_dup 2)))\n-   (clobber (match_scratch:DI 3 \"\"))]\n+\t(plus:DI (gt:DI (match_dup 1) (const_int 0)) (match_dup 2)))]\n   \"TARGET_POWERPC64 && reload_completed\"\n-  [(parallel [(set (match_dup 0)\n+  [(set (match_dup 0)\n \t(plus:DI (gt:DI (match_dup 1) (const_int 0)) (match_dup 2)))\n-   (clobber (match_dup 3))])\n-   (set (match_dup 4)\n+   (set (match_dup 3)\n \t(compare:CC (match_dup 0)\n \t\t    (const_int 0)))]\n   \"\")\n \n (define_insn \"\"\n-  [(set (match_operand:SI 0 \"gpc_reg_operand\" \"=r\")\n+  [(set (match_operand:SI 0 \"gpc_reg_operand\" \"=&r\")\n \t(plus:SI (gt:SI (match_operand:SI 1 \"gpc_reg_operand\" \"r\")\n \t\t\t(match_operand:SI 2 \"reg_or_short_operand\" \"r\"))\n-\t\t (match_operand:SI 3 \"gpc_reg_operand\" \"r\")))\n-   (clobber (match_scratch:SI 4 \"=&r\"))]\n+\t\t (match_operand:SI 3 \"gpc_reg_operand\" \"r\")))]\n   \"TARGET_POWER\"\n-  \"doz %4,%2,%1\\;{ai|addic} %4,%4,-1\\;{aze|addze} %0,%3\"\n+  \"doz %0,%2,%1\\;{ai|addic} %0,%0,-1\\;{aze|addze} %0,%3\"\n   [(set_attr \"length\" \"12\")])\n \n (define_insn \"\"\n@@ -12714,45 +12676,41 @@\n    (clobber (match_scratch:SI 4 \"\"))]\n   \"TARGET_POWER && reload_completed\"\n   [(set (match_dup 4)\n-\t(plus:SI (gt:SI (match_dup 1) (match_dup 2))\n-\t\t  (match_dup 3)))\n+\t(plus:SI (gt:SI (match_dup 1) (match_dup 2)) (match_dup 3)))\n    (set (match_dup 0)\n \t(compare:CC (match_dup 4)\n \t\t    (const_int 0)))]\n   \"\")\n \n (define_insn \"\"\n-  [(set (match_operand:CC 5 \"cc_reg_operand\" \"=x,?y\")\n+  [(set (match_operand:CC 4 \"cc_reg_operand\" \"=x,?y\")\n \t(compare:CC\n \t (plus:SI (gt:SI (match_operand:SI 1 \"gpc_reg_operand\" \"r,r\")\n \t\t\t (match_operand:SI 2 \"reg_or_short_operand\" \"r,r\"))\n \t\t  (match_operand:SI 3 \"gpc_reg_operand\" \"r,r\"))\n \t (const_int 0)))\n-   (set (match_operand:SI 0 \"gpc_reg_operand\" \"=r,r\")\n-\t(plus:SI (gt:SI (match_dup 1) (match_dup 2)) (match_dup 3)))\n-   (clobber (match_scratch:SI 4 \"=&r,&r\"))]\n+   (set (match_operand:SI 0 \"gpc_reg_operand\" \"=&r,&r\")\n+\t(plus:SI (gt:SI (match_dup 1) (match_dup 2)) (match_dup 3)))]\n   \"TARGET_POWER\"\n   \"@\n-   doz %4,%2,%1\\;{ai|addic} %4,%4,-1\\;{aze.|addze.} %0,%3\n+   doz %0,%2,%1\\;{ai|addic} %0,%0,-1\\;{aze.|addze.} %0,%3\n    #\"\n   [(set_attr \"type\" \"compare\")\n    (set_attr \"length\" \"12,16\")])\n \n (define_split\n-  [(set (match_operand:CC 5 \"cc_reg_not_cr0_operand\" \"\")\n+  [(set (match_operand:CC 4 \"cc_reg_not_cr0_operand\" \"\")\n \t(compare:CC\n \t (plus:SI (gt:SI (match_operand:SI 1 \"gpc_reg_operand\" \"\")\n \t\t\t (match_operand:SI 2 \"reg_or_short_operand\" \"\"))\n \t\t  (match_operand:SI 3 \"gpc_reg_operand\" \"\"))\n \t (const_int 0)))\n    (set (match_operand:SI 0 \"gpc_reg_operand\" \"\")\n-\t(plus:SI (gt:SI (match_dup 1) (match_dup 2)) (match_dup 3)))\n-   (clobber (match_scratch:SI 4 \"\"))]\n+\t(plus:SI (gt:SI (match_dup 1) (match_dup 2)) (match_dup 3)))]\n   \"TARGET_POWER && reload_completed\"\n-  [(parallel [(set (match_dup 0)\n+  [(set (match_dup 0)\n \t(plus:SI (gt:SI (match_dup 1) (match_dup 2)) (match_dup 3)))\n-   (clobber (match_dup 4))])\n-   (set (match_dup 5)\n+   (set (match_dup 4)\n \t(compare:CC (match_dup 0)\n \t\t    (const_int 0)))]\n   \"\")\n@@ -12871,15 +12829,14 @@\n   [(set_attr \"length\" \"8,12\")])\n \n (define_insn \"\"\n-  [(set (match_operand:DI 0 \"gpc_reg_operand\" \"=r,r\")\n+  [(set (match_operand:DI 0 \"gpc_reg_operand\" \"=&r,&r\")\n \t(plus:DI (gtu:DI (match_operand:DI 1 \"gpc_reg_operand\" \"r,r\")\n \t\t\t (match_operand:DI 2 \"reg_or_short_operand\" \"I,rI\"))\n-\t\t (match_operand:DI 3 \"reg_or_short_operand\" \"r,rI\")))\n-   (clobber (match_scratch:DI 4 \"=&r,&r\"))]\n+\t\t (match_operand:DI 3 \"reg_or_short_operand\" \"r,rI\")))]\n   \"TARGET_POWERPC64\"\n   \"@\n-   addic %4,%1,%k2\\;addze %0,%3\n-   subf%I2c %4,%1,%2\\;subfe %4,%4,%4\\;subf%I3c %0,%4,%3\"\n+   addic %0,%1,%k2\\;addze %0,%3\n+   subf%I2c %0,%1,%2\\;subfe %0,%0,%0\\;subf%I3c %0,%0,%3\"\n   [(set_attr \"length\" \"8,12\")])\n \n (define_insn \"\"\n@@ -12910,7 +12867,7 @@\n   \"! TARGET_POWERPC64 && reload_completed\"\n   [(set (match_dup 4)\n \t(plus:SI (gtu:SI (match_dup 1) (match_dup 2))\n-\t\t  (match_dup 3)))\n+\t\t (match_dup 3)))\n    (set (match_dup 0)\n \t(compare:CC (match_dup 4)\n \t\t    (const_int 0)))]\n@@ -12951,77 +12908,71 @@\n   \"\")\n \n (define_insn \"\"\n-  [(set (match_operand:CC 5 \"cc_reg_operand\" \"=x,x,?y,?y\")\n+  [(set (match_operand:CC 4 \"cc_reg_operand\" \"=x,x,?y,?y\")\n \t(compare:CC\n \t (plus:SI (gtu:SI (match_operand:SI 1 \"gpc_reg_operand\" \"r,r,r,r\")\n \t\t\t  (match_operand:SI 2 \"reg_or_short_operand\" \"I,r,I,r\"))\n \t\t  (match_operand:SI 3 \"gpc_reg_operand\" \"r,r,r,r\"))\n \t (const_int 0)))\n-   (set (match_operand:SI 0 \"gpc_reg_operand\" \"=r,r,r,r\")\n-\t(plus:SI (gtu:SI (match_dup 1) (match_dup 2)) (match_dup 3)))\n-   (clobber (match_scratch:SI 4 \"=&r,&r,&r,&r\"))]\n+   (set (match_operand:SI 0 \"gpc_reg_operand\" \"=&r,&r,&r,&r\")\n+\t(plus:SI (gtu:SI (match_dup 1) (match_dup 2)) (match_dup 3)))]\n   \"! TARGET_POWERPC64\"\n   \"@\n-   {ai|addic} %4,%1,%k2\\;{aze.|addze.} %0,%3\n-   {sf%I2|subf%I2c} %4,%1,%2\\;{sfe|subfe} %4,%4,%4\\;{sf.|subfc.} %0,%4,%3\n+   {ai|addic} %0,%1,%k2\\;{aze.|addze.} %0,%3\n+   {sf%I2|subf%I2c} %0,%1,%2\\;{sfe|subfe} %0,%0,%0\\;{sf.|subfc.} %0,%0,%3\n    #\n    #\"\n   [(set_attr \"type\" \"compare\")\n    (set_attr \"length\" \"8,12,12,16\")])\n \n (define_split\n-  [(set (match_operand:CC 5 \"cc_reg_not_cr0_operand\" \"\")\n+  [(set (match_operand:CC 4 \"cc_reg_not_cr0_operand\" \"\")\n \t(compare:CC\n \t (plus:SI (gtu:SI (match_operand:SI 1 \"gpc_reg_operand\" \"\")\n \t\t\t  (match_operand:SI 2 \"reg_or_short_operand\" \"\"))\n \t\t  (match_operand:SI 3 \"gpc_reg_operand\" \"\"))\n \t (const_int 0)))\n    (set (match_operand:SI 0 \"gpc_reg_operand\" \"\")\n-\t(plus:SI (gtu:SI (match_dup 1) (match_dup 2)) (match_dup 3)))\n-   (clobber (match_scratch:SI 4 \"\"))]\n+\t(plus:SI (gtu:SI (match_dup 1) (match_dup 2)) (match_dup 3)))]\n   \"! TARGET_POWERPC64 && reload_completed\"\n-  [(parallel [(set (match_dup 0)\n+  [(set (match_dup 0)\n \t(plus:SI (gtu:SI (match_dup 1) (match_dup 2)) (match_dup 3)))\n-   (clobber (match_dup 4))])\n-   (set (match_dup 5)\n+   (set (match_dup 4)\n \t(compare:CC (match_dup 0)\n \t\t    (const_int 0)))]\n   \"\")\n \n (define_insn \"\"\n-  [(set (match_operand:CC 5 \"cc_reg_operand\" \"=x,x,?y,?y\")\n+  [(set (match_operand:CC 4 \"cc_reg_operand\" \"=x,x,?y,?y\")\n \t(compare:CC\n \t (plus:DI (gtu:DI (match_operand:DI 1 \"gpc_reg_operand\" \"r,r,r,r\")\n \t\t\t  (match_operand:DI 2 \"reg_or_short_operand\" \"I,r,I,r\"))\n \t\t  (match_operand:DI 3 \"gpc_reg_operand\" \"r,r,r,r\"))\n \t (const_int 0)))\n-   (set (match_operand:DI 0 \"gpc_reg_operand\" \"=r,r,r,r\")\n-\t(plus:DI (gtu:DI (match_dup 1) (match_dup 2)) (match_dup 3)))\n-   (clobber (match_scratch:DI 4 \"=&r,&r,&r,&r\"))]\n+   (set (match_operand:DI 0 \"gpc_reg_operand\" \"=&r,&r,&r,&r\")\n+\t(plus:DI (gtu:DI (match_dup 1) (match_dup 2)) (match_dup 3)))]\n   \"TARGET_POWERPC64\"\n   \"@\n-   addic %4,%1,%k2\\;addze. %0,%3\n-   subf%I2c %4,%1,%2\\;subfe %4,%4,%4\\;subfc. %0,%4,%3\n+   addic %0,%1,%k2\\;addze. %0,%3\n+   subf%I2c %0,%1,%2\\;subfe %0,%0,%0\\;subfc. %0,%0,%3\n    #\n    #\"\n   [(set_attr \"type\" \"compare\")\n    (set_attr \"length\" \"8,12,12,16\")])\n \n (define_split\n-  [(set (match_operand:CC 5 \"cc_reg_not_cr0_operand\" \"\")\n+  [(set (match_operand:CC 4 \"cc_reg_not_cr0_operand\" \"\")\n \t(compare:CC\n \t (plus:DI (gtu:DI (match_operand:DI 1 \"gpc_reg_operand\" \"\")\n \t\t\t  (match_operand:DI 2 \"reg_or_short_operand\" \"\"))\n \t\t  (match_operand:DI 3 \"gpc_reg_operand\" \"\"))\n \t (const_int 0)))\n    (set (match_operand:DI 0 \"gpc_reg_operand\" \"\")\n-\t(plus:DI (gtu:DI (match_dup 1) (match_dup 2)) (match_dup 3)))\n-   (clobber (match_scratch:DI 4 \"\"))]\n+\t(plus:DI (gtu:DI (match_dup 1) (match_dup 2)) (match_dup 3)))]\n   \"TARGET_POWERPC64 && reload_completed\"\n-  [(parallel [(set (match_dup 0)\n+  [(set (match_dup 0)\n \t(plus:DI (gtu:DI (match_dup 1) (match_dup 2)) (match_dup 3)))\n-   (clobber (match_dup 4))])\n-   (set (match_dup 5)\n+   (set (match_dup 4)\n \t(compare:CC (match_dup 0)\n \t\t    (const_int 0)))]\n   \"\")"}]}