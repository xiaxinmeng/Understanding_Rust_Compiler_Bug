{"sha": "ab1305234f566eb2bc3a7c9d020a2dd11948a754", "node_id": "C_kwDOANBUbNoAKGFiMTMwNTIzNGY1NjZlYjJiYzNhN2M5ZDAyMGEyZGQxMTk0OGE3NTQ", "commit": {"author": {"name": "Thomas Schwinge", "email": "thomas@codesourcery.com", "date": "2023-02-12T15:26:22Z"}, "committer": {"name": "Thomas Schwinge", "email": "thomas@codesourcery.com", "date": "2023-02-12T15:26:22Z"}, "message": "Merge commit '9cf9f3c7629d768d940d9f87cddcd616bb0449e0^' into HEAD", "tree": {"sha": "2d980847eca3a0d7f27fc3ccb5e20aa5de2ae040", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2d980847eca3a0d7f27fc3ccb5e20aa5de2ae040"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ab1305234f566eb2bc3a7c9d020a2dd11948a754", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ab1305234f566eb2bc3a7c9d020a2dd11948a754", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ab1305234f566eb2bc3a7c9d020a2dd11948a754", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ab1305234f566eb2bc3a7c9d020a2dd11948a754/comments", "author": {"login": "tschwinge", "id": 21753, "node_id": "MDQ6VXNlcjIxNzUz", "avatar_url": "https://avatars.githubusercontent.com/u/21753?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tschwinge", "html_url": "https://github.com/tschwinge", "followers_url": "https://api.github.com/users/tschwinge/followers", "following_url": "https://api.github.com/users/tschwinge/following{/other_user}", "gists_url": "https://api.github.com/users/tschwinge/gists{/gist_id}", "starred_url": "https://api.github.com/users/tschwinge/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tschwinge/subscriptions", "organizations_url": "https://api.github.com/users/tschwinge/orgs", "repos_url": "https://api.github.com/users/tschwinge/repos", "events_url": "https://api.github.com/users/tschwinge/events{/privacy}", "received_events_url": "https://api.github.com/users/tschwinge/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tschwinge", "id": 21753, "node_id": "MDQ6VXNlcjIxNzUz", "avatar_url": "https://avatars.githubusercontent.com/u/21753?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tschwinge", "html_url": "https://github.com/tschwinge", "followers_url": "https://api.github.com/users/tschwinge/followers", "following_url": "https://api.github.com/users/tschwinge/following{/other_user}", "gists_url": "https://api.github.com/users/tschwinge/gists{/gist_id}", "starred_url": "https://api.github.com/users/tschwinge/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tschwinge/subscriptions", "organizations_url": "https://api.github.com/users/tschwinge/orgs", "repos_url": "https://api.github.com/users/tschwinge/repos", "events_url": "https://api.github.com/users/tschwinge/events{/privacy}", "received_events_url": "https://api.github.com/users/tschwinge/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "09e9d996b0a7f12b713807b5d166a014c392b0a2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/09e9d996b0a7f12b713807b5d166a014c392b0a2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/09e9d996b0a7f12b713807b5d166a014c392b0a2"}, {"sha": "32582c190b91287a0d1239162333f5ad0ac81e72", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/32582c190b91287a0d1239162333f5ad0ac81e72", "html_url": "https://github.com/Rust-GCC/gccrs/commit/32582c190b91287a0d1239162333f5ad0ac81e72"}], "stats": {"total": 545694, "additions": 545404, "deletions": 290}, "files": [{"sha": "89f9d752562d3f957e65dae8d80a8ada1439a33e", "filename": "ChangeLog", "status": "modified", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/ChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/ChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/ChangeLog?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754", "patch": "@@ -1,3 +1,29 @@\n+2022-12-14  Gaius Mulley  <gaiusmod2@gmail.com>\n+\n+\t* configure.ac (target_libraries): Add target-libgm2.\n+\tAdd NCN_STRICT_CHECK_TARGET_TOOLS entry for gm2.\n+\tAdd GCC_TARGET_TOOL entry for gm2.\n+\t(compare_exclusions): Add gcc/m2/gm2-compiler/M2Version,\n+\tgcc/m2/gm2-compiler-boot/SYSTEM and gcc/m2/gm2version.\n+\t* Makefile.def (target_modules): Add libgm2.\n+\t(flags_to_pass): Add GM2_FOR_TARGET, GM2FLAGS_FOR_TARGET.\n+\t(dependencies): Add all-target-libgm2 and on=all-target-libatomic.\n+\t(languages): Add entry for language=m2 with gcc-check-target=check-m2\n+\tand lib-check-target=check-target-libgm2.\n+\t* Makefile.tpl (BUILD_EXPORTS): Add definition for GM2 and GM2FLAGS.\n+\t(HOST_EXPORTS): Add definition for GM2.\n+\t(BASE_TARGET_EXPORTS): Add definition for GM2.\n+\t(GM2_FOR_BUILD): Defined.\n+\t(GM2FLAGS): Defined.\n+\t(GM2_FOR_TARGET): Defined.\n+\t(GM2FLAGS_FOR_TARGET): Defined.\n+\t(EXTRA_HOST_FLAGS): Defined.\n+\t(POSTSTAGE1_FLAGS_TO_PASS): Add GM2 and GM2_FOR_BUILD.\n+\t(EXTRA_TARGET_FLAGS): Add GM2 and GM2FLAGS.\n+\t(EXTRA_GCC_FLAGS): Add GM2_FOR_TARGET.\n+\t* configure: Rebuilt.\n+\t* Makefile.in: Rebuilt.\n+\n 2022-12-13  Philip Herron  <philip.herron@embecosm.com>\n \n \t* Makefile.def: Add Rust language."}, {"sha": "5f44190154eae351d192704a7f7075754939e23e", "filename": "Makefile.def", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/Makefile.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/Makefile.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/Makefile.def?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754", "patch": "@@ -185,6 +185,7 @@ target_modules = { module= libffi; no_install=true; };\n target_modules = { module= zlib; bootstrap=true; };\n target_modules = { module= rda; };\n target_modules = { module= libada; };\n+target_modules = { module= libgm2; lib_path=.libs; };\n target_modules = { module= libgomp; bootstrap= true; lib_path=.libs; };\n target_modules = { module= libitm; lib_path=.libs; };\n target_modules = { module= libatomic; bootstrap=true; lib_path=.libs; };\n@@ -307,6 +308,8 @@ flags_to_pass = { flag= GOC_FOR_TARGET ; };\n flags_to_pass = { flag= GOCFLAGS_FOR_TARGET ; };\n flags_to_pass = { flag= GDC_FOR_TARGET ; };\n flags_to_pass = { flag= GDCFLAGS_FOR_TARGET ; };\n+flags_to_pass = { flag= GM2_FOR_TARGET ; };\n+flags_to_pass = { flag= GM2FLAGS_FOR_TARGET ; };\n flags_to_pass = { flag= LD_FOR_TARGET ; };\n flags_to_pass = { flag= LIPO_FOR_TARGET ; };\n flags_to_pass = { flag= LDFLAGS_FOR_TARGET ; };\n@@ -618,6 +621,8 @@ dependencies = { module=configure-target-libgo; on=all-target-libstdc++-v3; };\n dependencies = { module=all-target-libgo; on=all-target-libbacktrace; };\n dependencies = { module=all-target-libgo; on=all-target-libffi; };\n dependencies = { module=all-target-libgo; on=all-target-libatomic; };\n+dependencies = { module=configure-target-libgm2; on=all-target-libstdc++-v3; };\n+dependencies = { module=all-target-libgm2; on=all-target-libatomic; };\n dependencies = { module=configure-target-libphobos; on=configure-target-libbacktrace; };\n dependencies = { module=configure-target-libphobos; on=configure-target-zlib; };\n dependencies = { module=all-target-libphobos; on=all-target-libbacktrace; };\n@@ -673,6 +678,8 @@ languages = { language=obj-c++;\tgcc-check-target=check-obj-c++; };\n languages = { language=go;\tgcc-check-target=check-go;\n \t\t\t\tlib-check-target=check-target-libgo;\n \t\t\t\tlib-check-target=check-gotools; };\n+languages = { language=m2;\tgcc-check-target=check-m2;\n+\t\t\t\tlib-check-target=check-target-libgm2; };\n languages = { language=d;\tgcc-check-target=check-d;\n \t\t\t\tlib-check-target=check-target-libphobos; };\n languages = { language=jit;\tgcc-check-target=check-jit; };"}, {"sha": "83e250f21a951c10a5931e11d21424b50c0bed02", "filename": "Makefile.in", "status": "modified", "additions": 539, "deletions": 1, "changes": 540, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/Makefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/Makefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/Makefile.in?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754", "patch": "@@ -163,6 +163,8 @@ BUILD_EXPORTS = \\\n \tGOCFLAGS=\"$(GOCFLAGS_FOR_BUILD)\"; export GOCFLAGS; \\\n \tGDC=\"$(GDC_FOR_BUILD)\"; export GDC; \\\n \tGDCFLAGS=\"$(GDCFLAGS_FOR_BUILD)\"; export GDCFLAGS; \\\n+\tGM2=\"$(GM2_FOR_BUILD)\"; export GM2; \\\n+\tGM2FLAGS=\"$(GM2FLAGS_FOR_BUILD)\"; export GM2FLAGS; \\\n \tDLLTOOL=\"$(DLLTOOL_FOR_BUILD)\"; export DLLTOOL; \\\n \tDSYMUTIL=\"$(DSYMUTIL_FOR_BUILD)\"; export DSYMUTIL; \\\n \tLD=\"$(LD_FOR_BUILD)\"; export LD; \\\n@@ -201,6 +203,7 @@ HOST_EXPORTS = \\\n \tGFORTRAN=\"$(GFORTRAN)\"; export GFORTRAN; \\\n \tGOC=\"$(GOC)\"; export GOC; \\\n \tGDC=\"$(GDC)\"; export GDC; \\\n+\tGM2=\"$(GM2)\"; export GM2; \\\n \tAR=\"$(AR)\"; export AR; \\\n \tAS=\"$(AS)\"; export AS; \\\n \tCC_FOR_BUILD=\"$(CC_FOR_BUILD)\"; export CC_FOR_BUILD; \\\n@@ -304,6 +307,7 @@ BASE_TARGET_EXPORTS = \\\n \tGFORTRAN=\"$(GFORTRAN_FOR_TARGET) $(XGCC_FLAGS_FOR_TARGET) $$TFLAGS\"; export GFORTRAN; \\\n \tGOC=\"$(GOC_FOR_TARGET) $(XGCC_FLAGS_FOR_TARGET) $$TFLAGS\"; export GOC; \\\n \tGDC=\"$(GDC_FOR_TARGET) $(XGCC_FLAGS_FOR_TARGET) $$TFLAGS\"; export GDC; \\\n+\tGM2=\"$(GM2_FOR_TARGET) $(XGCC_FLAGS_FOR_TARGET) $$TFLAGS\"; export GM2; \\\n \tDLLTOOL=\"$(DLLTOOL_FOR_TARGET)\"; export DLLTOOL; \\\n \tDSYMUTIL=\"$(DSYMUTIL_FOR_TARGET)\"; export DSYMUTIL; \\\n \tLD=\"$(COMPILER_LD_FOR_TARGET)\"; export LD; \\\n@@ -370,6 +374,7 @@ DSYMUTIL_FOR_BUILD = @DSYMUTIL_FOR_BUILD@\n GFORTRAN_FOR_BUILD = @GFORTRAN_FOR_BUILD@\n GOC_FOR_BUILD = @GOC_FOR_BUILD@\n GDC_FOR_BUILD = @GDC_FOR_BUILD@\n+GM2_FOR_BUILD = @GM2_FOR_BUILD@\n LDFLAGS_FOR_BUILD = @LDFLAGS_FOR_BUILD@\n LD_FOR_BUILD = @LD_FOR_BUILD@\n NM_FOR_BUILD = @NM_FOR_BUILD@\n@@ -440,6 +445,7 @@ CXXFLAGS = @CXXFLAGS@\n LIBCXXFLAGS = $(CXXFLAGS) -fno-implicit-templates\n GOCFLAGS = $(CFLAGS)\n GDCFLAGS = $(CFLAGS)\n+GM2FLAGS = $(CFLAGS)\n \n # Pass additional PGO and LTO compiler options to the PGO build.\n BUILD_CFLAGS = $(PGO_BUILD_CFLAGS) $(PGO_BUILD_LTO_CFLAGS)\n@@ -655,6 +661,7 @@ RAW_CXX_FOR_TARGET=$(STAGE_CC_WRAPPER) @RAW_CXX_FOR_TARGET@\n GFORTRAN_FOR_TARGET=$(STAGE_CC_WRAPPER) @GFORTRAN_FOR_TARGET@\n GOC_FOR_TARGET=$(STAGE_CC_WRAPPER) @GOC_FOR_TARGET@\n GDC_FOR_TARGET=$(STAGE_CC_WRAPPER) @GDC_FOR_TARGET@\n+GM2_FOR_TARGET=$(STAGE_CC_WRAPPER) @GM2_FOR_TARGET@\n DLLTOOL_FOR_TARGET=@DLLTOOL_FOR_TARGET@\n DSYMUTIL_FOR_TARGET=@DSYMUTIL_FOR_TARGET@\n LD_FOR_TARGET=@LD_FOR_TARGET@\n@@ -680,6 +687,7 @@ CXXFLAGS_FOR_TARGET = @CXXFLAGS_FOR_TARGET@\n LIBCFLAGS_FOR_TARGET = $(CFLAGS_FOR_TARGET)\n LIBCXXFLAGS_FOR_TARGET = $(CXXFLAGS_FOR_TARGET) -fno-implicit-templates\n LDFLAGS_FOR_TARGET = @LDFLAGS_FOR_TARGET@\n+GM2FLAGS_FOR_TARGET = -O2 -g\n GOCFLAGS_FOR_TARGET = -O2 -g\n GDCFLAGS_FOR_TARGET = -O2 -g\n \n@@ -706,7 +714,7 @@ all:\n \n # This is the list of directories that may be needed in RPATH_ENVVAR\n # so that programs built for the target machine work.\n-TARGET_LIB_PATH = $(TARGET_LIB_PATH_libstdc++-v3)$(TARGET_LIB_PATH_libsanitizer)$(TARGET_LIB_PATH_libvtv)$(TARGET_LIB_PATH_libssp)$(TARGET_LIB_PATH_libphobos)$(TARGET_LIB_PATH_libgomp)$(TARGET_LIB_PATH_libitm)$(TARGET_LIB_PATH_libatomic)$(HOST_LIB_PATH_gcc)\n+TARGET_LIB_PATH = $(TARGET_LIB_PATH_libstdc++-v3)$(TARGET_LIB_PATH_libsanitizer)$(TARGET_LIB_PATH_libvtv)$(TARGET_LIB_PATH_libssp)$(TARGET_LIB_PATH_libphobos)$(TARGET_LIB_PATH_libgm2)$(TARGET_LIB_PATH_libgomp)$(TARGET_LIB_PATH_libitm)$(TARGET_LIB_PATH_libatomic)$(HOST_LIB_PATH_gcc)\n \n @if target-libstdc++-v3\n TARGET_LIB_PATH_libstdc++-v3 = $$r/$(TARGET_SUBDIR)/libstdc++-v3/src/.libs:\n@@ -728,6 +736,10 @@ TARGET_LIB_PATH_libssp = $$r/$(TARGET_SUBDIR)/libssp/.libs:\n TARGET_LIB_PATH_libphobos = $$r/$(TARGET_SUBDIR)/libphobos/src/.libs:\n @endif target-libphobos\n \n+@if target-libgm2\n+TARGET_LIB_PATH_libgm2 = $$r/$(TARGET_SUBDIR)/libgm2/.libs:\n+@endif target-libgm2\n+\n @if target-libgomp\n TARGET_LIB_PATH_libgomp = $$r/$(TARGET_SUBDIR)/libgomp/.libs:\n @endif target-libgomp\n@@ -873,6 +885,8 @@ BASE_FLAGS_TO_PASS = \\\n \t\"GOCFLAGS_FOR_TARGET=$(GOCFLAGS_FOR_TARGET)\" \\\n \t\"GDC_FOR_TARGET=$(GDC_FOR_TARGET)\" \\\n \t\"GDCFLAGS_FOR_TARGET=$(GDCFLAGS_FOR_TARGET)\" \\\n+\t\"GM2_FOR_TARGET=$(GM2_FOR_TARGET)\" \\\n+\t\"GM2FLAGS_FOR_TARGET=$(GM2FLAGS_FOR_TARGET)\" \\\n \t\"LD_FOR_TARGET=$(LD_FOR_TARGET)\" \\\n \t\"LIPO_FOR_TARGET=$(LIPO_FOR_TARGET)\" \\\n \t\"LDFLAGS_FOR_TARGET=$(LDFLAGS_FOR_TARGET)\" \\\n@@ -946,6 +960,7 @@ EXTRA_HOST_FLAGS = \\\n \t'GFORTRAN=$(GFORTRAN)' \\\n \t'GOC=$(GOC)' \\\n \t'GDC=$(GDC)' \\\n+\t'GM2=$(GM2)' \\\n \t'LD=$(LD)' \\\n \t'LIPO=$(LIPO)' \\\n \t'NM=$(NM)' \\\n@@ -972,6 +987,7 @@ POSTSTAGE1_FLAGS_TO_PASS = \\\n \tCC=\"$${CC}\" CC_FOR_BUILD=\"$${CC_FOR_BUILD}\" \\\n \tCXX=\"$${CXX}\" CXX_FOR_BUILD=\"$${CXX_FOR_BUILD}\" \\\n \tGDC=\"$${GDC}\" GDC_FOR_BUILD=\"$${GDC_FOR_BUILD}\" \\\n+\tGM2=\"$${GM2}\" GM2_FOR_BUILD=\"$${GM2_FOR_BUILD}\" \\\n \tGNATBIND=\"$${GNATBIND}\" \\\n \tLDFLAGS=\"$${LDFLAGS}\" \\\n \tHOST_LIBS=\"$${HOST_LIBS}\" \\\n@@ -1007,6 +1023,8 @@ EXTRA_TARGET_FLAGS = \\\n \t'GOCFLAGS=$$(GOCFLAGS_FOR_TARGET)' \\\n \t'GDC=$$(GDC_FOR_TARGET) $$(XGCC_FLAGS_FOR_TARGET) $$(TFLAGS)' \\\n \t'GDCFLAGS=$$(GDCFLAGS_FOR_TARGET)' \\\n+\t'GM2=$$(GM2_FOR_TARGET) $$(XGCC_FLAGS_FOR_TARGET) $$(TFLAGS)' \\\n+\t'GM2FLAGS=$$(GM2FLAGS_FOR_TARGET)' \\\n \t'LD=$(COMPILER_LD_FOR_TARGET)' \\\n \t'LDFLAGS=$$(LDFLAGS_FOR_TARGET)' \\\n \t'LIBCFLAGS=$$(LIBCFLAGS_FOR_TARGET)' \\\n@@ -1033,6 +1051,7 @@ TARGET_FLAGS_TO_PASS = $(BASE_FLAGS_TO_PASS) $(EXTRA_TARGET_FLAGS)\n # cross-building scheme.\n EXTRA_GCC_FLAGS = \\\n \t\"GCC_FOR_TARGET=$(GCC_FOR_TARGET) $$TFLAGS\" \\\n+\t\"GM2_FOR_TARGET=$(GM2_FOR_TARGET) $$TFLAGS\" \\\n \t\"`echo 'STMP_FIXPROTO=$(STMP_FIXPROTO)' | sed -e s'/[^=][^=]*=$$/XFOO=/'`\" \\\n \t\"`echo 'LIMITS_H_TEST=$(LIMITS_H_TEST)' | sed -e s'/[^=][^=]*=$$/XFOO=/'`\"\n \n@@ -1120,6 +1139,7 @@ configure-target:  \\\n     maybe-configure-target-zlib \\\n     maybe-configure-target-rda \\\n     maybe-configure-target-libada \\\n+    maybe-configure-target-libgm2 \\\n     maybe-configure-target-libgomp \\\n     maybe-configure-target-libitm \\\n     maybe-configure-target-libatomic\n@@ -1313,6 +1333,7 @@ all-target: maybe-all-target-zlib\n @endif target-zlib-no-bootstrap\n all-target: maybe-all-target-rda\n all-target: maybe-all-target-libada\n+all-target: maybe-all-target-libgm2\n @if target-libgomp-no-bootstrap\n all-target: maybe-all-target-libgomp\n @endif target-libgomp-no-bootstrap\n@@ -1411,6 +1432,7 @@ info-target: maybe-info-target-libffi\n info-target: maybe-info-target-zlib\n info-target: maybe-info-target-rda\n info-target: maybe-info-target-libada\n+info-target: maybe-info-target-libgm2\n info-target: maybe-info-target-libgomp\n info-target: maybe-info-target-libitm\n info-target: maybe-info-target-libatomic\n@@ -1500,6 +1522,7 @@ dvi-target: maybe-dvi-target-libffi\n dvi-target: maybe-dvi-target-zlib\n dvi-target: maybe-dvi-target-rda\n dvi-target: maybe-dvi-target-libada\n+dvi-target: maybe-dvi-target-libgm2\n dvi-target: maybe-dvi-target-libgomp\n dvi-target: maybe-dvi-target-libitm\n dvi-target: maybe-dvi-target-libatomic\n@@ -1589,6 +1612,7 @@ pdf-target: maybe-pdf-target-libffi\n pdf-target: maybe-pdf-target-zlib\n pdf-target: maybe-pdf-target-rda\n pdf-target: maybe-pdf-target-libada\n+pdf-target: maybe-pdf-target-libgm2\n pdf-target: maybe-pdf-target-libgomp\n pdf-target: maybe-pdf-target-libitm\n pdf-target: maybe-pdf-target-libatomic\n@@ -1678,6 +1702,7 @@ html-target: maybe-html-target-libffi\n html-target: maybe-html-target-zlib\n html-target: maybe-html-target-rda\n html-target: maybe-html-target-libada\n+html-target: maybe-html-target-libgm2\n html-target: maybe-html-target-libgomp\n html-target: maybe-html-target-libitm\n html-target: maybe-html-target-libatomic\n@@ -1767,6 +1792,7 @@ TAGS-target: maybe-TAGS-target-libffi\n TAGS-target: maybe-TAGS-target-zlib\n TAGS-target: maybe-TAGS-target-rda\n TAGS-target: maybe-TAGS-target-libada\n+TAGS-target: maybe-TAGS-target-libgm2\n TAGS-target: maybe-TAGS-target-libgomp\n TAGS-target: maybe-TAGS-target-libitm\n TAGS-target: maybe-TAGS-target-libatomic\n@@ -1856,6 +1882,7 @@ install-info-target: maybe-install-info-target-libffi\n install-info-target: maybe-install-info-target-zlib\n install-info-target: maybe-install-info-target-rda\n install-info-target: maybe-install-info-target-libada\n+install-info-target: maybe-install-info-target-libgm2\n install-info-target: maybe-install-info-target-libgomp\n install-info-target: maybe-install-info-target-libitm\n install-info-target: maybe-install-info-target-libatomic\n@@ -1945,6 +1972,7 @@ install-dvi-target: maybe-install-dvi-target-libffi\n install-dvi-target: maybe-install-dvi-target-zlib\n install-dvi-target: maybe-install-dvi-target-rda\n install-dvi-target: maybe-install-dvi-target-libada\n+install-dvi-target: maybe-install-dvi-target-libgm2\n install-dvi-target: maybe-install-dvi-target-libgomp\n install-dvi-target: maybe-install-dvi-target-libitm\n install-dvi-target: maybe-install-dvi-target-libatomic\n@@ -2034,6 +2062,7 @@ install-pdf-target: maybe-install-pdf-target-libffi\n install-pdf-target: maybe-install-pdf-target-zlib\n install-pdf-target: maybe-install-pdf-target-rda\n install-pdf-target: maybe-install-pdf-target-libada\n+install-pdf-target: maybe-install-pdf-target-libgm2\n install-pdf-target: maybe-install-pdf-target-libgomp\n install-pdf-target: maybe-install-pdf-target-libitm\n install-pdf-target: maybe-install-pdf-target-libatomic\n@@ -2123,6 +2152,7 @@ install-html-target: maybe-install-html-target-libffi\n install-html-target: maybe-install-html-target-zlib\n install-html-target: maybe-install-html-target-rda\n install-html-target: maybe-install-html-target-libada\n+install-html-target: maybe-install-html-target-libgm2\n install-html-target: maybe-install-html-target-libgomp\n install-html-target: maybe-install-html-target-libitm\n install-html-target: maybe-install-html-target-libatomic\n@@ -2212,6 +2242,7 @@ installcheck-target: maybe-installcheck-target-libffi\n installcheck-target: maybe-installcheck-target-zlib\n installcheck-target: maybe-installcheck-target-rda\n installcheck-target: maybe-installcheck-target-libada\n+installcheck-target: maybe-installcheck-target-libgm2\n installcheck-target: maybe-installcheck-target-libgomp\n installcheck-target: maybe-installcheck-target-libitm\n installcheck-target: maybe-installcheck-target-libatomic\n@@ -2301,6 +2332,7 @@ mostlyclean-target: maybe-mostlyclean-target-libffi\n mostlyclean-target: maybe-mostlyclean-target-zlib\n mostlyclean-target: maybe-mostlyclean-target-rda\n mostlyclean-target: maybe-mostlyclean-target-libada\n+mostlyclean-target: maybe-mostlyclean-target-libgm2\n mostlyclean-target: maybe-mostlyclean-target-libgomp\n mostlyclean-target: maybe-mostlyclean-target-libitm\n mostlyclean-target: maybe-mostlyclean-target-libatomic\n@@ -2390,6 +2422,7 @@ clean-target: maybe-clean-target-libffi\n clean-target: maybe-clean-target-zlib\n clean-target: maybe-clean-target-rda\n clean-target: maybe-clean-target-libada\n+clean-target: maybe-clean-target-libgm2\n clean-target: maybe-clean-target-libgomp\n clean-target: maybe-clean-target-libitm\n clean-target: maybe-clean-target-libatomic\n@@ -2479,6 +2512,7 @@ distclean-target: maybe-distclean-target-libffi\n distclean-target: maybe-distclean-target-zlib\n distclean-target: maybe-distclean-target-rda\n distclean-target: maybe-distclean-target-libada\n+distclean-target: maybe-distclean-target-libgm2\n distclean-target: maybe-distclean-target-libgomp\n distclean-target: maybe-distclean-target-libitm\n distclean-target: maybe-distclean-target-libatomic\n@@ -2568,6 +2602,7 @@ maintainer-clean-target: maybe-maintainer-clean-target-libffi\n maintainer-clean-target: maybe-maintainer-clean-target-zlib\n maintainer-clean-target: maybe-maintainer-clean-target-rda\n maintainer-clean-target: maybe-maintainer-clean-target-libada\n+maintainer-clean-target: maybe-maintainer-clean-target-libgm2\n maintainer-clean-target: maybe-maintainer-clean-target-libgomp\n maintainer-clean-target: maybe-maintainer-clean-target-libitm\n maintainer-clean-target: maybe-maintainer-clean-target-libatomic\n@@ -2715,6 +2750,7 @@ check-target:  \\\n     maybe-check-target-zlib \\\n     maybe-check-target-rda \\\n     maybe-check-target-libada \\\n+    maybe-check-target-libgm2 \\\n     maybe-check-target-libgomp \\\n     maybe-check-target-libitm \\\n     maybe-check-target-libatomic\n@@ -2906,6 +2942,7 @@ install-target:  \\\n     maybe-install-target-zlib \\\n     maybe-install-target-rda \\\n     maybe-install-target-libada \\\n+    maybe-install-target-libgm2 \\\n     maybe-install-target-libgomp \\\n     maybe-install-target-libitm \\\n     maybe-install-target-libatomic\n@@ -3015,6 +3052,7 @@ install-strip-target:  \\\n     maybe-install-strip-target-zlib \\\n     maybe-install-strip-target-rda \\\n     maybe-install-strip-target-libada \\\n+    maybe-install-strip-target-libgm2 \\\n     maybe-install-strip-target-libgomp \\\n     maybe-install-strip-target-libitm \\\n     maybe-install-strip-target-libatomic\n@@ -58104,6 +58142,491 @@ maintainer-clean-target-libada:\n \n \n \n+.PHONY: configure-target-libgm2 maybe-configure-target-libgm2\n+maybe-configure-target-libgm2:\n+@if gcc-bootstrap\n+configure-target-libgm2: stage_current\n+@endif gcc-bootstrap\n+@if target-libgm2\n+maybe-configure-target-libgm2: configure-target-libgm2\n+configure-target-libgm2: \n+\t@: $(MAKE); $(unstage)\n+\t@r=`${PWD_COMMAND}`; export r; \\\n+\ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n+\techo \"Checking multilib configuration for libgm2...\"; \\\n+\t$(SHELL) $(srcdir)/mkinstalldirs $(TARGET_SUBDIR)/libgm2; \\\n+\t$(CC_FOR_TARGET) --print-multi-lib > $(TARGET_SUBDIR)/libgm2/multilib.tmp 2> /dev/null; \\\n+\tif test -r $(TARGET_SUBDIR)/libgm2/multilib.out; then \\\n+\t  if cmp -s $(TARGET_SUBDIR)/libgm2/multilib.tmp $(TARGET_SUBDIR)/libgm2/multilib.out; then \\\n+\t    rm -f $(TARGET_SUBDIR)/libgm2/multilib.tmp; \\\n+\t  else \\\n+\t    rm -f $(TARGET_SUBDIR)/libgm2/Makefile; \\\n+\t    mv $(TARGET_SUBDIR)/libgm2/multilib.tmp $(TARGET_SUBDIR)/libgm2/multilib.out; \\\n+\t  fi; \\\n+\telse \\\n+\t  mv $(TARGET_SUBDIR)/libgm2/multilib.tmp $(TARGET_SUBDIR)/libgm2/multilib.out; \\\n+\tfi; \\\n+\ttest ! -f $(TARGET_SUBDIR)/libgm2/Makefile || exit 0; \\\n+\t$(SHELL) $(srcdir)/mkinstalldirs $(TARGET_SUBDIR)/libgm2; \\\n+\t$(NORMAL_TARGET_EXPORTS)  \\\n+\techo Configuring in $(TARGET_SUBDIR)/libgm2; \\\n+\tcd \"$(TARGET_SUBDIR)/libgm2\" || exit 1; \\\n+\tcase $(srcdir) in \\\n+\t  /* | [A-Za-z]:[\\\\/]*) topdir=$(srcdir) ;; \\\n+\t  *) topdir=`echo $(TARGET_SUBDIR)/libgm2/ | \\\n+\t\tsed -e 's,\\./,,g' -e 's,[^/]*/,../,g' `$(srcdir) ;; \\\n+\tesac; \\\n+\tmodule_srcdir=libgm2; \\\n+\trm -f no-such-file || : ; \\\n+\tCONFIG_SITE=no-such-file $(SHELL) \\\n+\t  $$s/$$module_srcdir/configure \\\n+\t  --srcdir=$${topdir}/$$module_srcdir \\\n+\t  $(TARGET_CONFIGARGS) --build=${build_alias} --host=${target_alias} \\\n+\t  --target=${target_alias}  \\\n+\t  || exit 1\n+@endif target-libgm2\n+\n+\n+\n+\n+\n+.PHONY: all-target-libgm2 maybe-all-target-libgm2\n+maybe-all-target-libgm2:\n+@if gcc-bootstrap\n+all-target-libgm2: stage_current\n+@endif gcc-bootstrap\n+@if target-libgm2\n+TARGET-target-libgm2=all\n+maybe-all-target-libgm2: all-target-libgm2\n+all-target-libgm2: configure-target-libgm2\n+\t@: $(MAKE); $(unstage)\n+\t@r=`${PWD_COMMAND}`; export r; \\\n+\ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n+\t$(NORMAL_TARGET_EXPORTS)  \\\n+\t(cd $(TARGET_SUBDIR)/libgm2 && \\\n+\t  $(MAKE) $(BASE_FLAGS_TO_PASS) $(EXTRA_TARGET_FLAGS)   \\\n+\t\t$(TARGET-target-libgm2))\n+@endif target-libgm2\n+\n+\n+\n+\n+\n+.PHONY: check-target-libgm2 maybe-check-target-libgm2\n+maybe-check-target-libgm2:\n+@if target-libgm2\n+maybe-check-target-libgm2: check-target-libgm2\n+\n+check-target-libgm2:\n+\t@: $(MAKE); $(unstage)\n+\t@r=`${PWD_COMMAND}`; export r; \\\n+\ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n+\t$(NORMAL_TARGET_EXPORTS) \\\n+\t(cd $(TARGET_SUBDIR)/libgm2 && \\\n+\t  $(MAKE) $(TARGET_FLAGS_TO_PASS)   check)\n+\n+@endif target-libgm2\n+\n+.PHONY: install-target-libgm2 maybe-install-target-libgm2\n+maybe-install-target-libgm2:\n+@if target-libgm2\n+maybe-install-target-libgm2: install-target-libgm2\n+\n+install-target-libgm2: installdirs\n+\t@: $(MAKE); $(unstage)\n+\t@r=`${PWD_COMMAND}`; export r; \\\n+\ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n+\t$(NORMAL_TARGET_EXPORTS) \\\n+\t(cd $(TARGET_SUBDIR)/libgm2 && \\\n+\t  $(MAKE) $(TARGET_FLAGS_TO_PASS)  install)\n+\n+@endif target-libgm2\n+\n+.PHONY: install-strip-target-libgm2 maybe-install-strip-target-libgm2\n+maybe-install-strip-target-libgm2:\n+@if target-libgm2\n+maybe-install-strip-target-libgm2: install-strip-target-libgm2\n+\n+install-strip-target-libgm2: installdirs\n+\t@: $(MAKE); $(unstage)\n+\t@r=`${PWD_COMMAND}`; export r; \\\n+\ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n+\t$(NORMAL_TARGET_EXPORTS) \\\n+\t(cd $(TARGET_SUBDIR)/libgm2 && \\\n+\t  $(MAKE) $(TARGET_FLAGS_TO_PASS)  install-strip)\n+\n+@endif target-libgm2\n+\n+# Other targets (info, dvi, pdf, etc.)\n+\n+.PHONY: maybe-info-target-libgm2 info-target-libgm2\n+maybe-info-target-libgm2:\n+@if target-libgm2\n+maybe-info-target-libgm2: info-target-libgm2\n+\n+info-target-libgm2: \\\n+    configure-target-libgm2 \n+\t@: $(MAKE); $(unstage)\n+\t@[ -f $(TARGET_SUBDIR)/libgm2/Makefile ] || exit 0; \\\n+\tr=`${PWD_COMMAND}`; export r; \\\n+\ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n+\t$(NORMAL_TARGET_EXPORTS) \\\n+\techo \"Doing info in $(TARGET_SUBDIR)/libgm2\"; \\\n+\tfor flag in $(EXTRA_TARGET_FLAGS); do \\\n+\t  eval `echo \"$$flag\" | sed -e \"s|^\\([^=]*\\)=\\(.*\\)|\\1='\\2'; export \\1|\"`; \\\n+\tdone; \\\n+\t(cd $(TARGET_SUBDIR)/libgm2 && \\\n+\t  $(MAKE) $(BASE_FLAGS_TO_PASS) \"AR=$${AR}\" \"AS=$${AS}\" \\\n+\t          \"CC=$${CC}\" \"CXX=$${CXX}\" \"LD=$${LD}\" \"NM=$${NM}\" \\\n+\t          \"RANLIB=$${RANLIB}\" \\\n+\t          \"DLLTOOL=$${DLLTOOL}\" \"WINDRES=$${WINDRES}\" \"WINDMC=$${WINDMC}\" \\\n+\t           info) \\\n+\t  || exit 1\n+\n+@endif target-libgm2\n+\n+.PHONY: maybe-dvi-target-libgm2 dvi-target-libgm2\n+maybe-dvi-target-libgm2:\n+@if target-libgm2\n+maybe-dvi-target-libgm2: dvi-target-libgm2\n+\n+dvi-target-libgm2: \\\n+    configure-target-libgm2 \n+\t@: $(MAKE); $(unstage)\n+\t@[ -f $(TARGET_SUBDIR)/libgm2/Makefile ] || exit 0; \\\n+\tr=`${PWD_COMMAND}`; export r; \\\n+\ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n+\t$(NORMAL_TARGET_EXPORTS) \\\n+\techo \"Doing dvi in $(TARGET_SUBDIR)/libgm2\"; \\\n+\tfor flag in $(EXTRA_TARGET_FLAGS); do \\\n+\t  eval `echo \"$$flag\" | sed -e \"s|^\\([^=]*\\)=\\(.*\\)|\\1='\\2'; export \\1|\"`; \\\n+\tdone; \\\n+\t(cd $(TARGET_SUBDIR)/libgm2 && \\\n+\t  $(MAKE) $(BASE_FLAGS_TO_PASS) \"AR=$${AR}\" \"AS=$${AS}\" \\\n+\t          \"CC=$${CC}\" \"CXX=$${CXX}\" \"LD=$${LD}\" \"NM=$${NM}\" \\\n+\t          \"RANLIB=$${RANLIB}\" \\\n+\t          \"DLLTOOL=$${DLLTOOL}\" \"WINDRES=$${WINDRES}\" \"WINDMC=$${WINDMC}\" \\\n+\t           dvi) \\\n+\t  || exit 1\n+\n+@endif target-libgm2\n+\n+.PHONY: maybe-pdf-target-libgm2 pdf-target-libgm2\n+maybe-pdf-target-libgm2:\n+@if target-libgm2\n+maybe-pdf-target-libgm2: pdf-target-libgm2\n+\n+pdf-target-libgm2: \\\n+    configure-target-libgm2 \n+\t@: $(MAKE); $(unstage)\n+\t@[ -f $(TARGET_SUBDIR)/libgm2/Makefile ] || exit 0; \\\n+\tr=`${PWD_COMMAND}`; export r; \\\n+\ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n+\t$(NORMAL_TARGET_EXPORTS) \\\n+\techo \"Doing pdf in $(TARGET_SUBDIR)/libgm2\"; \\\n+\tfor flag in $(EXTRA_TARGET_FLAGS); do \\\n+\t  eval `echo \"$$flag\" | sed -e \"s|^\\([^=]*\\)=\\(.*\\)|\\1='\\2'; export \\1|\"`; \\\n+\tdone; \\\n+\t(cd $(TARGET_SUBDIR)/libgm2 && \\\n+\t  $(MAKE) $(BASE_FLAGS_TO_PASS) \"AR=$${AR}\" \"AS=$${AS}\" \\\n+\t          \"CC=$${CC}\" \"CXX=$${CXX}\" \"LD=$${LD}\" \"NM=$${NM}\" \\\n+\t          \"RANLIB=$${RANLIB}\" \\\n+\t          \"DLLTOOL=$${DLLTOOL}\" \"WINDRES=$${WINDRES}\" \"WINDMC=$${WINDMC}\" \\\n+\t           pdf) \\\n+\t  || exit 1\n+\n+@endif target-libgm2\n+\n+.PHONY: maybe-html-target-libgm2 html-target-libgm2\n+maybe-html-target-libgm2:\n+@if target-libgm2\n+maybe-html-target-libgm2: html-target-libgm2\n+\n+html-target-libgm2: \\\n+    configure-target-libgm2 \n+\t@: $(MAKE); $(unstage)\n+\t@[ -f $(TARGET_SUBDIR)/libgm2/Makefile ] || exit 0; \\\n+\tr=`${PWD_COMMAND}`; export r; \\\n+\ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n+\t$(NORMAL_TARGET_EXPORTS) \\\n+\techo \"Doing html in $(TARGET_SUBDIR)/libgm2\"; \\\n+\tfor flag in $(EXTRA_TARGET_FLAGS); do \\\n+\t  eval `echo \"$$flag\" | sed -e \"s|^\\([^=]*\\)=\\(.*\\)|\\1='\\2'; export \\1|\"`; \\\n+\tdone; \\\n+\t(cd $(TARGET_SUBDIR)/libgm2 && \\\n+\t  $(MAKE) $(BASE_FLAGS_TO_PASS) \"AR=$${AR}\" \"AS=$${AS}\" \\\n+\t          \"CC=$${CC}\" \"CXX=$${CXX}\" \"LD=$${LD}\" \"NM=$${NM}\" \\\n+\t          \"RANLIB=$${RANLIB}\" \\\n+\t          \"DLLTOOL=$${DLLTOOL}\" \"WINDRES=$${WINDRES}\" \"WINDMC=$${WINDMC}\" \\\n+\t           html) \\\n+\t  || exit 1\n+\n+@endif target-libgm2\n+\n+.PHONY: maybe-TAGS-target-libgm2 TAGS-target-libgm2\n+maybe-TAGS-target-libgm2:\n+@if target-libgm2\n+maybe-TAGS-target-libgm2: TAGS-target-libgm2\n+\n+TAGS-target-libgm2: \\\n+    configure-target-libgm2 \n+\t@: $(MAKE); $(unstage)\n+\t@[ -f $(TARGET_SUBDIR)/libgm2/Makefile ] || exit 0; \\\n+\tr=`${PWD_COMMAND}`; export r; \\\n+\ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n+\t$(NORMAL_TARGET_EXPORTS) \\\n+\techo \"Doing TAGS in $(TARGET_SUBDIR)/libgm2\"; \\\n+\tfor flag in $(EXTRA_TARGET_FLAGS); do \\\n+\t  eval `echo \"$$flag\" | sed -e \"s|^\\([^=]*\\)=\\(.*\\)|\\1='\\2'; export \\1|\"`; \\\n+\tdone; \\\n+\t(cd $(TARGET_SUBDIR)/libgm2 && \\\n+\t  $(MAKE) $(BASE_FLAGS_TO_PASS) \"AR=$${AR}\" \"AS=$${AS}\" \\\n+\t          \"CC=$${CC}\" \"CXX=$${CXX}\" \"LD=$${LD}\" \"NM=$${NM}\" \\\n+\t          \"RANLIB=$${RANLIB}\" \\\n+\t          \"DLLTOOL=$${DLLTOOL}\" \"WINDRES=$${WINDRES}\" \"WINDMC=$${WINDMC}\" \\\n+\t           TAGS) \\\n+\t  || exit 1\n+\n+@endif target-libgm2\n+\n+.PHONY: maybe-install-info-target-libgm2 install-info-target-libgm2\n+maybe-install-info-target-libgm2:\n+@if target-libgm2\n+maybe-install-info-target-libgm2: install-info-target-libgm2\n+\n+install-info-target-libgm2: \\\n+    configure-target-libgm2 \\\n+    info-target-libgm2 \n+\t@: $(MAKE); $(unstage)\n+\t@[ -f $(TARGET_SUBDIR)/libgm2/Makefile ] || exit 0; \\\n+\tr=`${PWD_COMMAND}`; export r; \\\n+\ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n+\t$(NORMAL_TARGET_EXPORTS) \\\n+\techo \"Doing install-info in $(TARGET_SUBDIR)/libgm2\"; \\\n+\tfor flag in $(EXTRA_TARGET_FLAGS); do \\\n+\t  eval `echo \"$$flag\" | sed -e \"s|^\\([^=]*\\)=\\(.*\\)|\\1='\\2'; export \\1|\"`; \\\n+\tdone; \\\n+\t(cd $(TARGET_SUBDIR)/libgm2 && \\\n+\t  $(MAKE) $(BASE_FLAGS_TO_PASS) \"AR=$${AR}\" \"AS=$${AS}\" \\\n+\t          \"CC=$${CC}\" \"CXX=$${CXX}\" \"LD=$${LD}\" \"NM=$${NM}\" \\\n+\t          \"RANLIB=$${RANLIB}\" \\\n+\t          \"DLLTOOL=$${DLLTOOL}\" \"WINDRES=$${WINDRES}\" \"WINDMC=$${WINDMC}\" \\\n+\t           install-info) \\\n+\t  || exit 1\n+\n+@endif target-libgm2\n+\n+.PHONY: maybe-install-dvi-target-libgm2 install-dvi-target-libgm2\n+maybe-install-dvi-target-libgm2:\n+@if target-libgm2\n+maybe-install-dvi-target-libgm2: install-dvi-target-libgm2\n+\n+install-dvi-target-libgm2: \\\n+    configure-target-libgm2 \\\n+    dvi-target-libgm2 \n+\t@: $(MAKE); $(unstage)\n+\t@[ -f $(TARGET_SUBDIR)/libgm2/Makefile ] || exit 0; \\\n+\tr=`${PWD_COMMAND}`; export r; \\\n+\ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n+\t$(NORMAL_TARGET_EXPORTS) \\\n+\techo \"Doing install-dvi in $(TARGET_SUBDIR)/libgm2\"; \\\n+\tfor flag in $(EXTRA_TARGET_FLAGS); do \\\n+\t  eval `echo \"$$flag\" | sed -e \"s|^\\([^=]*\\)=\\(.*\\)|\\1='\\2'; export \\1|\"`; \\\n+\tdone; \\\n+\t(cd $(TARGET_SUBDIR)/libgm2 && \\\n+\t  $(MAKE) $(BASE_FLAGS_TO_PASS) \"AR=$${AR}\" \"AS=$${AS}\" \\\n+\t          \"CC=$${CC}\" \"CXX=$${CXX}\" \"LD=$${LD}\" \"NM=$${NM}\" \\\n+\t          \"RANLIB=$${RANLIB}\" \\\n+\t          \"DLLTOOL=$${DLLTOOL}\" \"WINDRES=$${WINDRES}\" \"WINDMC=$${WINDMC}\" \\\n+\t           install-dvi) \\\n+\t  || exit 1\n+\n+@endif target-libgm2\n+\n+.PHONY: maybe-install-pdf-target-libgm2 install-pdf-target-libgm2\n+maybe-install-pdf-target-libgm2:\n+@if target-libgm2\n+maybe-install-pdf-target-libgm2: install-pdf-target-libgm2\n+\n+install-pdf-target-libgm2: \\\n+    configure-target-libgm2 \\\n+    pdf-target-libgm2 \n+\t@: $(MAKE); $(unstage)\n+\t@[ -f $(TARGET_SUBDIR)/libgm2/Makefile ] || exit 0; \\\n+\tr=`${PWD_COMMAND}`; export r; \\\n+\ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n+\t$(NORMAL_TARGET_EXPORTS) \\\n+\techo \"Doing install-pdf in $(TARGET_SUBDIR)/libgm2\"; \\\n+\tfor flag in $(EXTRA_TARGET_FLAGS); do \\\n+\t  eval `echo \"$$flag\" | sed -e \"s|^\\([^=]*\\)=\\(.*\\)|\\1='\\2'; export \\1|\"`; \\\n+\tdone; \\\n+\t(cd $(TARGET_SUBDIR)/libgm2 && \\\n+\t  $(MAKE) $(BASE_FLAGS_TO_PASS) \"AR=$${AR}\" \"AS=$${AS}\" \\\n+\t          \"CC=$${CC}\" \"CXX=$${CXX}\" \"LD=$${LD}\" \"NM=$${NM}\" \\\n+\t          \"RANLIB=$${RANLIB}\" \\\n+\t          \"DLLTOOL=$${DLLTOOL}\" \"WINDRES=$${WINDRES}\" \"WINDMC=$${WINDMC}\" \\\n+\t           install-pdf) \\\n+\t  || exit 1\n+\n+@endif target-libgm2\n+\n+.PHONY: maybe-install-html-target-libgm2 install-html-target-libgm2\n+maybe-install-html-target-libgm2:\n+@if target-libgm2\n+maybe-install-html-target-libgm2: install-html-target-libgm2\n+\n+install-html-target-libgm2: \\\n+    configure-target-libgm2 \\\n+    html-target-libgm2 \n+\t@: $(MAKE); $(unstage)\n+\t@[ -f $(TARGET_SUBDIR)/libgm2/Makefile ] || exit 0; \\\n+\tr=`${PWD_COMMAND}`; export r; \\\n+\ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n+\t$(NORMAL_TARGET_EXPORTS) \\\n+\techo \"Doing install-html in $(TARGET_SUBDIR)/libgm2\"; \\\n+\tfor flag in $(EXTRA_TARGET_FLAGS); do \\\n+\t  eval `echo \"$$flag\" | sed -e \"s|^\\([^=]*\\)=\\(.*\\)|\\1='\\2'; export \\1|\"`; \\\n+\tdone; \\\n+\t(cd $(TARGET_SUBDIR)/libgm2 && \\\n+\t  $(MAKE) $(BASE_FLAGS_TO_PASS) \"AR=$${AR}\" \"AS=$${AS}\" \\\n+\t          \"CC=$${CC}\" \"CXX=$${CXX}\" \"LD=$${LD}\" \"NM=$${NM}\" \\\n+\t          \"RANLIB=$${RANLIB}\" \\\n+\t          \"DLLTOOL=$${DLLTOOL}\" \"WINDRES=$${WINDRES}\" \"WINDMC=$${WINDMC}\" \\\n+\t           install-html) \\\n+\t  || exit 1\n+\n+@endif target-libgm2\n+\n+.PHONY: maybe-installcheck-target-libgm2 installcheck-target-libgm2\n+maybe-installcheck-target-libgm2:\n+@if target-libgm2\n+maybe-installcheck-target-libgm2: installcheck-target-libgm2\n+\n+installcheck-target-libgm2: \\\n+    configure-target-libgm2 \n+\t@: $(MAKE); $(unstage)\n+\t@[ -f $(TARGET_SUBDIR)/libgm2/Makefile ] || exit 0; \\\n+\tr=`${PWD_COMMAND}`; export r; \\\n+\ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n+\t$(NORMAL_TARGET_EXPORTS) \\\n+\techo \"Doing installcheck in $(TARGET_SUBDIR)/libgm2\"; \\\n+\tfor flag in $(EXTRA_TARGET_FLAGS); do \\\n+\t  eval `echo \"$$flag\" | sed -e \"s|^\\([^=]*\\)=\\(.*\\)|\\1='\\2'; export \\1|\"`; \\\n+\tdone; \\\n+\t(cd $(TARGET_SUBDIR)/libgm2 && \\\n+\t  $(MAKE) $(BASE_FLAGS_TO_PASS) \"AR=$${AR}\" \"AS=$${AS}\" \\\n+\t          \"CC=$${CC}\" \"CXX=$${CXX}\" \"LD=$${LD}\" \"NM=$${NM}\" \\\n+\t          \"RANLIB=$${RANLIB}\" \\\n+\t          \"DLLTOOL=$${DLLTOOL}\" \"WINDRES=$${WINDRES}\" \"WINDMC=$${WINDMC}\" \\\n+\t           installcheck) \\\n+\t  || exit 1\n+\n+@endif target-libgm2\n+\n+.PHONY: maybe-mostlyclean-target-libgm2 mostlyclean-target-libgm2\n+maybe-mostlyclean-target-libgm2:\n+@if target-libgm2\n+maybe-mostlyclean-target-libgm2: mostlyclean-target-libgm2\n+\n+mostlyclean-target-libgm2: \n+\t@: $(MAKE); $(unstage)\n+\t@[ -f $(TARGET_SUBDIR)/libgm2/Makefile ] || exit 0; \\\n+\tr=`${PWD_COMMAND}`; export r; \\\n+\ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n+\t$(NORMAL_TARGET_EXPORTS) \\\n+\techo \"Doing mostlyclean in $(TARGET_SUBDIR)/libgm2\"; \\\n+\tfor flag in $(EXTRA_TARGET_FLAGS); do \\\n+\t  eval `echo \"$$flag\" | sed -e \"s|^\\([^=]*\\)=\\(.*\\)|\\1='\\2'; export \\1|\"`; \\\n+\tdone; \\\n+\t(cd $(TARGET_SUBDIR)/libgm2 && \\\n+\t  $(MAKE) $(BASE_FLAGS_TO_PASS) \"AR=$${AR}\" \"AS=$${AS}\" \\\n+\t          \"CC=$${CC}\" \"CXX=$${CXX}\" \"LD=$${LD}\" \"NM=$${NM}\" \\\n+\t          \"RANLIB=$${RANLIB}\" \\\n+\t          \"DLLTOOL=$${DLLTOOL}\" \"WINDRES=$${WINDRES}\" \"WINDMC=$${WINDMC}\" \\\n+\t           mostlyclean) \\\n+\t  || exit 1\n+\n+@endif target-libgm2\n+\n+.PHONY: maybe-clean-target-libgm2 clean-target-libgm2\n+maybe-clean-target-libgm2:\n+@if target-libgm2\n+maybe-clean-target-libgm2: clean-target-libgm2\n+\n+clean-target-libgm2: \n+\t@: $(MAKE); $(unstage)\n+\t@[ -f $(TARGET_SUBDIR)/libgm2/Makefile ] || exit 0; \\\n+\tr=`${PWD_COMMAND}`; export r; \\\n+\ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n+\t$(NORMAL_TARGET_EXPORTS) \\\n+\techo \"Doing clean in $(TARGET_SUBDIR)/libgm2\"; \\\n+\tfor flag in $(EXTRA_TARGET_FLAGS); do \\\n+\t  eval `echo \"$$flag\" | sed -e \"s|^\\([^=]*\\)=\\(.*\\)|\\1='\\2'; export \\1|\"`; \\\n+\tdone; \\\n+\t(cd $(TARGET_SUBDIR)/libgm2 && \\\n+\t  $(MAKE) $(BASE_FLAGS_TO_PASS) \"AR=$${AR}\" \"AS=$${AS}\" \\\n+\t          \"CC=$${CC}\" \"CXX=$${CXX}\" \"LD=$${LD}\" \"NM=$${NM}\" \\\n+\t          \"RANLIB=$${RANLIB}\" \\\n+\t          \"DLLTOOL=$${DLLTOOL}\" \"WINDRES=$${WINDRES}\" \"WINDMC=$${WINDMC}\" \\\n+\t           clean) \\\n+\t  || exit 1\n+\n+@endif target-libgm2\n+\n+.PHONY: maybe-distclean-target-libgm2 distclean-target-libgm2\n+maybe-distclean-target-libgm2:\n+@if target-libgm2\n+maybe-distclean-target-libgm2: distclean-target-libgm2\n+\n+distclean-target-libgm2: \n+\t@: $(MAKE); $(unstage)\n+\t@[ -f $(TARGET_SUBDIR)/libgm2/Makefile ] || exit 0; \\\n+\tr=`${PWD_COMMAND}`; export r; \\\n+\ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n+\t$(NORMAL_TARGET_EXPORTS) \\\n+\techo \"Doing distclean in $(TARGET_SUBDIR)/libgm2\"; \\\n+\tfor flag in $(EXTRA_TARGET_FLAGS); do \\\n+\t  eval `echo \"$$flag\" | sed -e \"s|^\\([^=]*\\)=\\(.*\\)|\\1='\\2'; export \\1|\"`; \\\n+\tdone; \\\n+\t(cd $(TARGET_SUBDIR)/libgm2 && \\\n+\t  $(MAKE) $(BASE_FLAGS_TO_PASS) \"AR=$${AR}\" \"AS=$${AS}\" \\\n+\t          \"CC=$${CC}\" \"CXX=$${CXX}\" \"LD=$${LD}\" \"NM=$${NM}\" \\\n+\t          \"RANLIB=$${RANLIB}\" \\\n+\t          \"DLLTOOL=$${DLLTOOL}\" \"WINDRES=$${WINDRES}\" \"WINDMC=$${WINDMC}\" \\\n+\t           distclean) \\\n+\t  || exit 1\n+\n+@endif target-libgm2\n+\n+.PHONY: maybe-maintainer-clean-target-libgm2 maintainer-clean-target-libgm2\n+maybe-maintainer-clean-target-libgm2:\n+@if target-libgm2\n+maybe-maintainer-clean-target-libgm2: maintainer-clean-target-libgm2\n+\n+maintainer-clean-target-libgm2: \n+\t@: $(MAKE); $(unstage)\n+\t@[ -f $(TARGET_SUBDIR)/libgm2/Makefile ] || exit 0; \\\n+\tr=`${PWD_COMMAND}`; export r; \\\n+\ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n+\t$(NORMAL_TARGET_EXPORTS) \\\n+\techo \"Doing maintainer-clean in $(TARGET_SUBDIR)/libgm2\"; \\\n+\tfor flag in $(EXTRA_TARGET_FLAGS); do \\\n+\t  eval `echo \"$$flag\" | sed -e \"s|^\\([^=]*\\)=\\(.*\\)|\\1='\\2'; export \\1|\"`; \\\n+\tdone; \\\n+\t(cd $(TARGET_SUBDIR)/libgm2 && \\\n+\t  $(MAKE) $(BASE_FLAGS_TO_PASS) \"AR=$${AR}\" \"AS=$${AS}\" \\\n+\t          \"CC=$${CC}\" \"CXX=$${CXX}\" \"LD=$${LD}\" \"NM=$${NM}\" \\\n+\t          \"RANLIB=$${RANLIB}\" \\\n+\t          \"DLLTOOL=$${DLLTOOL}\" \"WINDRES=$${WINDRES}\" \"WINDMC=$${WINDMC}\" \\\n+\t           maintainer-clean) \\\n+\t  || exit 1\n+\n+@endif target-libgm2\n+\n+\n+\n+\n+\n .PHONY: configure-target-libgomp maybe-configure-target-libgomp\n maybe-configure-target-libgomp:\n @if gcc-bootstrap\n@@ -61221,6 +61744,14 @@ check-gcc-go:\n \t(cd gcc && $(MAKE) $(GCC_FLAGS_TO_PASS) check-go);\n check-go: check-gcc-go check-target-libgo check-gotools\n \n+.PHONY: check-gcc-m2 check-m2\n+check-gcc-m2:\n+\tr=`${PWD_COMMAND}`; export r; \\\n+\ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n+\t$(HOST_EXPORTS) \\\n+\t(cd gcc && $(MAKE) $(GCC_FLAGS_TO_PASS) check-m2);\n+check-m2: check-gcc-m2 check-target-libgm2\n+\n .PHONY: check-gcc-d check-d\n check-gcc-d:\n \tr=`${PWD_COMMAND}`; export r; \\\n@@ -64679,6 +65210,7 @@ configure-stageautoprofile-target-zlib: maybe-all-stageautoprofile-gcc\n configure-stageautofeedback-target-zlib: maybe-all-stageautofeedback-gcc\n configure-target-rda: stage_last\n configure-target-libada: stage_last\n+configure-target-libgm2: stage_last\n configure-stage1-target-libgomp: maybe-all-stage1-gcc\n configure-stage2-target-libgomp: maybe-all-stage2-gcc\n configure-stage3-target-libgomp: maybe-all-stage3-gcc\n@@ -64720,6 +65252,7 @@ configure-target-libffi: maybe-all-gcc\n configure-target-zlib: maybe-all-gcc\n configure-target-rda: maybe-all-gcc\n configure-target-libada: maybe-all-gcc\n+configure-target-libgm2: maybe-all-gcc\n configure-target-libgomp: maybe-all-gcc\n configure-target-libitm: maybe-all-gcc\n configure-target-libatomic: maybe-all-gcc\n@@ -66006,6 +66539,8 @@ all-target-fastjar: maybe-all-target-zlib\n configure-target-libgo: maybe-all-target-libstdc++-v3\n all-target-libgo: maybe-all-target-libbacktrace\n all-target-libgo: maybe-all-target-libatomic\n+configure-target-libgm2: maybe-all-target-libstdc++-v3\n+all-target-libgm2: maybe-all-target-libatomic\n configure-target-newlib: maybe-all-binutils\n configure-target-newlib: maybe-all-ld\n configure-target-libgfortran: maybe-all-target-libbacktrace\n@@ -66111,6 +66646,7 @@ configure-target-libffi: maybe-all-target-libgcc\n configure-target-zlib: maybe-all-target-libgcc\n configure-target-rda: maybe-all-target-libgcc\n configure-target-libada: maybe-all-target-libgcc\n+configure-target-libgm2: maybe-all-target-libgcc\n configure-target-libgomp: maybe-all-target-libgcc\n configure-target-libitm: maybe-all-target-libgcc\n configure-target-libatomic: maybe-all-target-libgcc\n@@ -66153,6 +66689,8 @@ configure-target-rda: maybe-all-target-newlib maybe-all-target-libgloss\n \n configure-target-libada: maybe-all-target-newlib maybe-all-target-libgloss\n \n+configure-target-libgm2: maybe-all-target-newlib maybe-all-target-libgloss\n+\n configure-target-libgomp: maybe-all-target-newlib maybe-all-target-libgloss\n \n configure-target-libitm: maybe-all-target-newlib maybe-all-target-libgloss"}, {"sha": "dfbd74b68f8df71f0ea80ce173411b9b297ba10e", "filename": "Makefile.tpl", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/Makefile.tpl", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/Makefile.tpl", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/Makefile.tpl?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754", "patch": "@@ -166,6 +166,8 @@ BUILD_EXPORTS = \\\n \tGOCFLAGS=\"$(GOCFLAGS_FOR_BUILD)\"; export GOCFLAGS; \\\n \tGDC=\"$(GDC_FOR_BUILD)\"; export GDC; \\\n \tGDCFLAGS=\"$(GDCFLAGS_FOR_BUILD)\"; export GDCFLAGS; \\\n+\tGM2=\"$(GM2_FOR_BUILD)\"; export GM2; \\\n+\tGM2FLAGS=\"$(GM2FLAGS_FOR_BUILD)\"; export GM2FLAGS; \\\n \tDLLTOOL=\"$(DLLTOOL_FOR_BUILD)\"; export DLLTOOL; \\\n \tDSYMUTIL=\"$(DSYMUTIL_FOR_BUILD)\"; export DSYMUTIL; \\\n \tLD=\"$(LD_FOR_BUILD)\"; export LD; \\\n@@ -204,6 +206,7 @@ HOST_EXPORTS = \\\n \tGFORTRAN=\"$(GFORTRAN)\"; export GFORTRAN; \\\n \tGOC=\"$(GOC)\"; export GOC; \\\n \tGDC=\"$(GDC)\"; export GDC; \\\n+\tGM2=\"$(GM2)\"; export GM2; \\\n \tAR=\"$(AR)\"; export AR; \\\n \tAS=\"$(AS)\"; export AS; \\\n \tCC_FOR_BUILD=\"$(CC_FOR_BUILD)\"; export CC_FOR_BUILD; \\\n@@ -307,6 +310,7 @@ BASE_TARGET_EXPORTS = \\\n \tGFORTRAN=\"$(GFORTRAN_FOR_TARGET) $(XGCC_FLAGS_FOR_TARGET) $$TFLAGS\"; export GFORTRAN; \\\n \tGOC=\"$(GOC_FOR_TARGET) $(XGCC_FLAGS_FOR_TARGET) $$TFLAGS\"; export GOC; \\\n \tGDC=\"$(GDC_FOR_TARGET) $(XGCC_FLAGS_FOR_TARGET) $$TFLAGS\"; export GDC; \\\n+\tGM2=\"$(GM2_FOR_TARGET) $(XGCC_FLAGS_FOR_TARGET) $$TFLAGS\"; export GM2; \\\n \tDLLTOOL=\"$(DLLTOOL_FOR_TARGET)\"; export DLLTOOL; \\\n \tDSYMUTIL=\"$(DSYMUTIL_FOR_TARGET)\"; export DSYMUTIL; \\\n \tLD=\"$(COMPILER_LD_FOR_TARGET)\"; export LD; \\\n@@ -373,6 +377,7 @@ DSYMUTIL_FOR_BUILD = @DSYMUTIL_FOR_BUILD@\n GFORTRAN_FOR_BUILD = @GFORTRAN_FOR_BUILD@\n GOC_FOR_BUILD = @GOC_FOR_BUILD@\n GDC_FOR_BUILD = @GDC_FOR_BUILD@\n+GM2_FOR_BUILD = @GM2_FOR_BUILD@\n LDFLAGS_FOR_BUILD = @LDFLAGS_FOR_BUILD@\n LD_FOR_BUILD = @LD_FOR_BUILD@\n NM_FOR_BUILD = @NM_FOR_BUILD@\n@@ -443,6 +448,7 @@ CXXFLAGS = @CXXFLAGS@\n LIBCXXFLAGS = $(CXXFLAGS) -fno-implicit-templates\n GOCFLAGS = $(CFLAGS)\n GDCFLAGS = $(CFLAGS)\n+GM2FLAGS = $(CFLAGS)\n \n # Pass additional PGO and LTO compiler options to the PGO build.\n BUILD_CFLAGS = $(PGO_BUILD_CFLAGS) $(PGO_BUILD_LTO_CFLAGS)\n@@ -578,6 +584,7 @@ RAW_CXX_FOR_TARGET=$(STAGE_CC_WRAPPER) @RAW_CXX_FOR_TARGET@\n GFORTRAN_FOR_TARGET=$(STAGE_CC_WRAPPER) @GFORTRAN_FOR_TARGET@\n GOC_FOR_TARGET=$(STAGE_CC_WRAPPER) @GOC_FOR_TARGET@\n GDC_FOR_TARGET=$(STAGE_CC_WRAPPER) @GDC_FOR_TARGET@\n+GM2_FOR_TARGET=$(STAGE_CC_WRAPPER) @GM2_FOR_TARGET@\n DLLTOOL_FOR_TARGET=@DLLTOOL_FOR_TARGET@\n DSYMUTIL_FOR_TARGET=@DSYMUTIL_FOR_TARGET@\n LD_FOR_TARGET=@LD_FOR_TARGET@\n@@ -603,6 +610,7 @@ CXXFLAGS_FOR_TARGET = @CXXFLAGS_FOR_TARGET@\n LIBCFLAGS_FOR_TARGET = $(CFLAGS_FOR_TARGET)\n LIBCXXFLAGS_FOR_TARGET = $(CXXFLAGS_FOR_TARGET) -fno-implicit-templates\n LDFLAGS_FOR_TARGET = @LDFLAGS_FOR_TARGET@\n+GM2FLAGS_FOR_TARGET = -O2 -g\n GOCFLAGS_FOR_TARGET = -O2 -g\n GDCFLAGS_FOR_TARGET = -O2 -g\n \n@@ -709,6 +717,7 @@ EXTRA_HOST_FLAGS = \\\n \t'GFORTRAN=$(GFORTRAN)' \\\n \t'GOC=$(GOC)' \\\n \t'GDC=$(GDC)' \\\n+\t'GM2=$(GM2)' \\\n \t'LD=$(LD)' \\\n \t'LIPO=$(LIPO)' \\\n \t'NM=$(NM)' \\\n@@ -735,6 +744,7 @@ POSTSTAGE1_FLAGS_TO_PASS = \\\n \tCC=\"$${CC}\" CC_FOR_BUILD=\"$${CC_FOR_BUILD}\" \\\n \tCXX=\"$${CXX}\" CXX_FOR_BUILD=\"$${CXX_FOR_BUILD}\" \\\n \tGDC=\"$${GDC}\" GDC_FOR_BUILD=\"$${GDC_FOR_BUILD}\" \\\n+\tGM2=\"$${GM2}\" GM2_FOR_BUILD=\"$${GM2_FOR_BUILD}\" \\\n \tGNATBIND=\"$${GNATBIND}\" \\\n \tLDFLAGS=\"$${LDFLAGS}\" \\\n \tHOST_LIBS=\"$${HOST_LIBS}\" \\\n@@ -770,6 +780,8 @@ EXTRA_TARGET_FLAGS = \\\n \t'GOCFLAGS=$$(GOCFLAGS_FOR_TARGET)' \\\n \t'GDC=$$(GDC_FOR_TARGET) $$(XGCC_FLAGS_FOR_TARGET) $$(TFLAGS)' \\\n \t'GDCFLAGS=$$(GDCFLAGS_FOR_TARGET)' \\\n+\t'GM2=$$(GM2_FOR_TARGET) $$(XGCC_FLAGS_FOR_TARGET) $$(TFLAGS)' \\\n+\t'GM2FLAGS=$$(GM2FLAGS_FOR_TARGET)' \\\n \t'LD=$(COMPILER_LD_FOR_TARGET)' \\\n \t'LDFLAGS=$$(LDFLAGS_FOR_TARGET)' \\\n \t'LIBCFLAGS=$$(LIBCFLAGS_FOR_TARGET)' \\\n@@ -796,6 +808,7 @@ TARGET_FLAGS_TO_PASS = $(BASE_FLAGS_TO_PASS) $(EXTRA_TARGET_FLAGS)\n # cross-building scheme.\n EXTRA_GCC_FLAGS = \\\n \t\"GCC_FOR_TARGET=$(GCC_FOR_TARGET) $$TFLAGS\" \\\n+\t\"GM2_FOR_TARGET=$(GM2_FOR_TARGET) $$TFLAGS\" \\\n \t\"`echo 'STMP_FIXPROTO=$(STMP_FIXPROTO)' | sed -e s'/[^=][^=]*=$$/XFOO=/'`\" \\\n \t\"`echo 'LIMITS_H_TEST=$(LIMITS_H_TEST)' | sed -e s'/[^=][^=]*=$$/XFOO=/'`\"\n "}, {"sha": "2b86f25656bf93643024d6adff413c819e1c5361", "filename": "configure", "status": "modified", "additions": 228, "deletions": 1, "changes": 229, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/configure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/configure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/configure?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754", "patch": "@@ -613,6 +613,7 @@ DSYMUTIL_FOR_TARGET\n DLLTOOL_FOR_TARGET\n AS_FOR_TARGET\n AR_FOR_TARGET\n+GM2_FOR_TARGET\n GDC_FOR_TARGET\n GOC_FOR_TARGET\n GFORTRAN_FOR_TARGET\n@@ -803,6 +804,7 @@ enable_compressed_debug_sections\n enable_libquadmath\n enable_libquadmath_support\n enable_libada\n+enable_libgm2\n enable_libssp\n enable_libstdcxx\n enable_bootstrap\n@@ -880,6 +882,7 @@ GCC_FOR_TARGET\n GFORTRAN_FOR_TARGET\n GOC_FOR_TARGET\n GDC_FOR_TARGET\n+GM2_FOR_TARGET\n AR_FOR_TARGET\n AS_FOR_TARGET\n DLLTOOL_FOR_TARGET\n@@ -1540,6 +1543,7 @@ Optional Features:\n   --disable-libquadmath-support\n                           disable libquadmath support for Fortran\n   --enable-libada         build libada directory\n+  --enable-libgm2         build libgm2 directory\n   --enable-libssp         build libssp directory\n   --disable-libstdcxx     do not build libstdc++-v3 directory\n   --enable-bootstrap      enable bootstrapping [yes if native build]\n@@ -1674,6 +1678,8 @@ Some influential environment variables:\n               GOC for the target\n   GDC_FOR_TARGET\n               GDC for the target\n+  GM2_FOR_TARGET\n+              GM2 for the target\n   AR_FOR_TARGET\n               AR for the target\n   AS_FOR_TARGET\n@@ -2812,7 +2818,7 @@ host_libs=\"intl libiberty opcodes bfd readline tcl tk itcl libgui zlib libbacktr\n # binutils, gas and ld appear in that order because it makes sense to run\n # \"make check\" in that particular order.\n # If --enable-gold is used, \"gold\" may replace \"ld\".\n-host_tools=\"texinfo flex bison binutils gas ld fixincludes gcc cgen sid sim gdb gdbserver gprof etc expect dejagnu m4 utils guile fastjar gnattools libcc1 gotools c++tools\"\n+host_tools=\"texinfo flex bison binutils gas ld fixincludes gcc cgen sid sim gdb gdbserver gprof etc expect dejagnu m4 utils guile fastjar gnattools libcc1 gm2tools gotools c++tools\"\n \n # these libraries are built for the target environment, and are built after\n # the host libraries and the host tools (which may be a cross compiler)\n@@ -2833,6 +2839,7 @@ target_libraries=\"target-libgcc \\\n \t\ttarget-libffi \\\n \t\ttarget-libobjc \\\n \t\ttarget-libada \\\n+\t\ttarget-libgm2 \\\n \t\ttarget-libgo \\\n \t\ttarget-libphobos \\\n \t\ttarget-zlib\"\n@@ -3176,6 +3183,17 @@ if test \"${ENABLE_LIBADA}\" != \"yes\" ; then\n   noconfigdirs=\"$noconfigdirs gnattools\"\n fi\n \n+# Check whether --enable-libgm2 was given.\n+if test \"${enable_libgm2+set}\" = set; then :\n+  enableval=$enable_libgm2; ENABLE_LIBGM2=$enableval\n+else\n+  ENABLE_LIBGM2=no\n+fi\n+\n+if test \"${ENABLE_LIBGM2}\" != \"yes\" ; then\n+  noconfigdirs=\"$noconfigdirs gm2tools\"\n+fi\n+\n # Check whether --enable-libssp was given.\n if test \"${enable_libssp+set}\" = set; then :\n   enableval=$enable_libssp; ENABLE_LIBSSP=$enableval\n@@ -13786,6 +13804,167 @@ fi\n \n \n \n+if test -n \"$GM2_FOR_TARGET\"; then\n+  ac_cv_prog_GM2_FOR_TARGET=$GM2_FOR_TARGET\n+elif test -n \"$ac_cv_prog_GM2_FOR_TARGET\"; then\n+  GM2_FOR_TARGET=$ac_cv_prog_GM2_FOR_TARGET\n+fi\n+\n+if test -n \"$ac_cv_prog_GM2_FOR_TARGET\"; then\n+  for ncn_progname in gm2; do\n+    # Extract the first word of \"${ncn_progname}\", so it can be a program name with args.\n+set dummy ${ncn_progname}; ac_word=$2\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for $ac_word\" >&5\n+$as_echo_n \"checking for $ac_word... \" >&6; }\n+if ${ac_cv_prog_GM2_FOR_TARGET+:} false; then :\n+  $as_echo_n \"(cached) \" >&6\n+else\n+  if test -n \"$GM2_FOR_TARGET\"; then\n+  ac_cv_prog_GM2_FOR_TARGET=\"$GM2_FOR_TARGET\" # Let the user override the test.\n+else\n+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR\n+for as_dir in $PATH\n+do\n+  IFS=$as_save_IFS\n+  test -z \"$as_dir\" && as_dir=.\n+    for ac_exec_ext in '' $ac_executable_extensions; do\n+  if as_fn_executable_p \"$as_dir/$ac_word$ac_exec_ext\"; then\n+    ac_cv_prog_GM2_FOR_TARGET=\"${ncn_progname}\"\n+    $as_echo \"$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext\" >&5\n+    break 2\n+  fi\n+done\n+  done\n+IFS=$as_save_IFS\n+\n+fi\n+fi\n+GM2_FOR_TARGET=$ac_cv_prog_GM2_FOR_TARGET\n+if test -n \"$GM2_FOR_TARGET\"; then\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $GM2_FOR_TARGET\" >&5\n+$as_echo \"$GM2_FOR_TARGET\" >&6; }\n+else\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n+$as_echo \"no\" >&6; }\n+fi\n+\n+\n+  done\n+fi\n+\n+if test -z \"$ac_cv_prog_GM2_FOR_TARGET\" && test -n \"$with_build_time_tools\"; then\n+  for ncn_progname in gm2; do\n+    { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for ${ncn_progname} in $with_build_time_tools\" >&5\n+$as_echo_n \"checking for ${ncn_progname} in $with_build_time_tools... \" >&6; }\n+    if test -x $with_build_time_tools/${ncn_progname}; then\n+      ac_cv_prog_GM2_FOR_TARGET=$with_build_time_tools/${ncn_progname}\n+      { $as_echo \"$as_me:${as_lineno-$LINENO}: result: yes\" >&5\n+$as_echo \"yes\" >&6; }\n+      break\n+    else\n+      { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n+$as_echo \"no\" >&6; }\n+    fi\n+  done\n+fi\n+\n+if test -z \"$ac_cv_prog_GM2_FOR_TARGET\"; then\n+  for ncn_progname in gm2; do\n+    if test -n \"$ncn_target_tool_prefix\"; then\n+      # Extract the first word of \"${ncn_target_tool_prefix}${ncn_progname}\", so it can be a program name with args.\n+set dummy ${ncn_target_tool_prefix}${ncn_progname}; ac_word=$2\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for $ac_word\" >&5\n+$as_echo_n \"checking for $ac_word... \" >&6; }\n+if ${ac_cv_prog_GM2_FOR_TARGET+:} false; then :\n+  $as_echo_n \"(cached) \" >&6\n+else\n+  if test -n \"$GM2_FOR_TARGET\"; then\n+  ac_cv_prog_GM2_FOR_TARGET=\"$GM2_FOR_TARGET\" # Let the user override the test.\n+else\n+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR\n+for as_dir in $PATH\n+do\n+  IFS=$as_save_IFS\n+  test -z \"$as_dir\" && as_dir=.\n+    for ac_exec_ext in '' $ac_executable_extensions; do\n+  if as_fn_executable_p \"$as_dir/$ac_word$ac_exec_ext\"; then\n+    ac_cv_prog_GM2_FOR_TARGET=\"${ncn_target_tool_prefix}${ncn_progname}\"\n+    $as_echo \"$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext\" >&5\n+    break 2\n+  fi\n+done\n+  done\n+IFS=$as_save_IFS\n+\n+fi\n+fi\n+GM2_FOR_TARGET=$ac_cv_prog_GM2_FOR_TARGET\n+if test -n \"$GM2_FOR_TARGET\"; then\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $GM2_FOR_TARGET\" >&5\n+$as_echo \"$GM2_FOR_TARGET\" >&6; }\n+else\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n+$as_echo \"no\" >&6; }\n+fi\n+\n+\n+    fi\n+    if test -z \"$ac_cv_prog_GM2_FOR_TARGET\" && test $build = $target ; then\n+      # Extract the first word of \"${ncn_progname}\", so it can be a program name with args.\n+set dummy ${ncn_progname}; ac_word=$2\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for $ac_word\" >&5\n+$as_echo_n \"checking for $ac_word... \" >&6; }\n+if ${ac_cv_prog_GM2_FOR_TARGET+:} false; then :\n+  $as_echo_n \"(cached) \" >&6\n+else\n+  if test -n \"$GM2_FOR_TARGET\"; then\n+  ac_cv_prog_GM2_FOR_TARGET=\"$GM2_FOR_TARGET\" # Let the user override the test.\n+else\n+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR\n+for as_dir in $PATH\n+do\n+  IFS=$as_save_IFS\n+  test -z \"$as_dir\" && as_dir=.\n+    for ac_exec_ext in '' $ac_executable_extensions; do\n+  if as_fn_executable_p \"$as_dir/$ac_word$ac_exec_ext\"; then\n+    ac_cv_prog_GM2_FOR_TARGET=\"${ncn_progname}\"\n+    $as_echo \"$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext\" >&5\n+    break 2\n+  fi\n+done\n+  done\n+IFS=$as_save_IFS\n+\n+fi\n+fi\n+GM2_FOR_TARGET=$ac_cv_prog_GM2_FOR_TARGET\n+if test -n \"$GM2_FOR_TARGET\"; then\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $GM2_FOR_TARGET\" >&5\n+$as_echo \"$GM2_FOR_TARGET\" >&6; }\n+else\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n+$as_echo \"no\" >&6; }\n+fi\n+\n+\n+    fi\n+    test -n \"$ac_cv_prog_GM2_FOR_TARGET\" && break\n+  done\n+fi\n+\n+if test -z \"$ac_cv_prog_GM2_FOR_TARGET\" ; then\n+  set dummy gm2\n+  if test $build = $target ; then\n+    GM2_FOR_TARGET=\"$2\"\n+  else\n+    GM2_FOR_TARGET=\"${ncn_target_tool_prefix}$2\"\n+  fi\n+else\n+  GM2_FOR_TARGET=\"$ac_cv_prog_GM2_FOR_TARGET\"\n+fi\n+\n+\n+\n cat > conftest.c << \\EOF\n #ifdef __GNUC__\n   gcc_yay;\n@@ -17718,6 +17897,51 @@ $as_echo \"pre-installed\" >&6; }\n   fi\n fi\n \n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking where to find the target gm2\" >&5\n+$as_echo_n \"checking where to find the target gm2... \" >&6; }\n+if test \"x${build}\" != \"x${host}\" ; then\n+  if expr \"x$GM2_FOR_TARGET\" : \"x/\" > /dev/null; then\n+    # We already found the complete path\n+    ac_dir=`dirname $GM2_FOR_TARGET`\n+    { $as_echo \"$as_me:${as_lineno-$LINENO}: result: pre-installed in $ac_dir\" >&5\n+$as_echo \"pre-installed in $ac_dir\" >&6; }\n+  else\n+    # Canadian cross, just use what we found\n+    { $as_echo \"$as_me:${as_lineno-$LINENO}: result: pre-installed\" >&5\n+$as_echo \"pre-installed\" >&6; }\n+  fi\n+else\n+  ok=yes\n+  case \" ${configdirs} \" in\n+    *\" gcc \"*) ;;\n+    *) ok=no ;;\n+  esac\n+  case ,${enable_languages}, in\n+    *,m2,*) ;;\n+    *) ok=no ;;\n+  esac\n+  if test $ok = yes; then\n+    # An in-tree tool is available and we can use it\n+    GM2_FOR_TARGET='$$r/$(HOST_SUBDIR)/gcc/gm2 -B$$r/$(HOST_SUBDIR)/gcc/'\n+    { $as_echo \"$as_me:${as_lineno-$LINENO}: result: just compiled\" >&5\n+$as_echo \"just compiled\" >&6; }\n+  elif expr \"x$GM2_FOR_TARGET\" : \"x/\" > /dev/null; then\n+    # We already found the complete path\n+    ac_dir=`dirname $GM2_FOR_TARGET`\n+    { $as_echo \"$as_me:${as_lineno-$LINENO}: result: pre-installed in $ac_dir\" >&5\n+$as_echo \"pre-installed in $ac_dir\" >&6; }\n+  elif test \"x$target\" = \"x$host\"; then\n+    # We can use an host tool\n+    GM2_FOR_TARGET='$(GM2)'\n+    { $as_echo \"$as_me:${as_lineno-$LINENO}: result: host tool\" >&5\n+$as_echo \"host tool\" >&6; }\n+  else\n+    # We need a cross tool\n+    { $as_echo \"$as_me:${as_lineno-$LINENO}: result: pre-installed\" >&5\n+$as_echo \"pre-installed\" >&6; }\n+  fi\n+fi\n+\n { $as_echo \"$as_me:${as_lineno-$LINENO}: checking where to find the target ld\" >&5\n $as_echo_n \"checking where to find the target ld... \" >&6; }\n if test \"x${build}\" != \"x${host}\" ; then\n@@ -18279,6 +18503,9 @@ fi\n # Specify what files to not compare during bootstrap.\n \n compare_exclusions=\"gcc/cc*-checksum\\$(objext) | gcc/ada/*tools/*\"\n+compare_exclusions=\"$compare_exclusions | gcc/m2/gm2-compiler-boot/M2Version*\"\n+compare_exclusions=\"$compare_exclusions | gcc/m2/gm2-compiler-boot/SYSTEM*\"\n+compare_exclusions=\"$compare_exclusions | gcc/m2/gm2version*\"\n case \"$target\" in\n   hppa*64*-*-hpux*) ;;\n   powerpc*-ibm-aix*) compare_exclusions=\"$compare_exclusions | *libgomp*\\$(objext)\" ;;"}, {"sha": "c5191ce24aef9d4f1d9ac3d4adedc94bef3a0a7b", "filename": "configure.ac", "status": "modified", "additions": 16, "deletions": 1, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/configure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/configure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/configure.ac?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754", "patch": "@@ -140,7 +140,7 @@ host_libs=\"intl libiberty opcodes bfd readline tcl tk itcl libgui zlib libbacktr\n # binutils, gas and ld appear in that order because it makes sense to run\n # \"make check\" in that particular order.\n # If --enable-gold is used, \"gold\" may replace \"ld\".\n-host_tools=\"texinfo flex bison binutils gas ld fixincludes gcc cgen sid sim gdb gdbserver gprof etc expect dejagnu m4 utils guile fastjar gnattools libcc1 gotools c++tools\"\n+host_tools=\"texinfo flex bison binutils gas ld fixincludes gcc cgen sid sim gdb gdbserver gprof etc expect dejagnu m4 utils guile fastjar gnattools libcc1 gm2tools gotools c++tools\"\n \n # these libraries are built for the target environment, and are built after\n # the host libraries and the host tools (which may be a cross compiler)\n@@ -161,6 +161,7 @@ target_libraries=\"target-libgcc \\\n \t\ttarget-libffi \\\n \t\ttarget-libobjc \\\n \t\ttarget-libada \\\n+\t\ttarget-libgm2 \\\n \t\ttarget-libgo \\\n \t\ttarget-libphobos \\\n \t\ttarget-zlib\"\n@@ -464,6 +465,14 @@ if test \"${ENABLE_LIBADA}\" != \"yes\" ; then\n   noconfigdirs=\"$noconfigdirs gnattools\"\n fi\n \n+AC_ARG_ENABLE(libgm2,\n+[AS_HELP_STRING([--enable-libgm2], [build libgm2 directory])],\n+ENABLE_LIBGM2=$enableval,\n+ENABLE_LIBGM2=no)\n+if test \"${ENABLE_LIBGM2}\" != \"yes\" ; then\n+  noconfigdirs=\"$noconfigdirs gm2tools\"\n+fi\n+\n AC_ARG_ENABLE(libssp,\n [AS_HELP_STRING([--enable-libssp], [build libssp directory])],\n ENABLE_LIBSSP=$enableval,\n@@ -3579,6 +3588,7 @@ NCN_STRICT_CHECK_TARGET_TOOLS(GCC_FOR_TARGET, gcc, ${CC_FOR_TARGET})\n NCN_STRICT_CHECK_TARGET_TOOLS(GFORTRAN_FOR_TARGET, gfortran)\n NCN_STRICT_CHECK_TARGET_TOOLS(GOC_FOR_TARGET, gccgo)\n NCN_STRICT_CHECK_TARGET_TOOLS(GDC_FOR_TARGET, gdc)\n+NCN_STRICT_CHECK_TARGET_TOOLS(GM2_FOR_TARGET, gm2)\n \n ACX_CHECK_INSTALLED_TARGET_TOOL(AR_FOR_TARGET, ar)\n ACX_CHECK_INSTALLED_TARGET_TOOL(AS_FOR_TARGET, as)\n@@ -3617,6 +3627,8 @@ GCC_TARGET_TOOL(gccgo, GOC_FOR_TARGET, GOC,\n \t\t[gcc/gccgo -B$$r/$(HOST_SUBDIR)/gcc/], go)\n GCC_TARGET_TOOL(gdc, GDC_FOR_TARGET, GDC,\n \t\t[gcc/gdc -B$$r/$(HOST_SUBDIR)/gcc/], d)\n+GCC_TARGET_TOOL(gm2, GM2_FOR_TARGET, GM2,\n+\t\t[gcc/gm2 -B$$r/$(HOST_SUBDIR)/gcc/], m2)\n GCC_TARGET_TOOL(ld, LD_FOR_TARGET, LD, [ld/ld-new])\n GCC_TARGET_TOOL(lipo, LIPO_FOR_TARGET, LIPO)\n GCC_TARGET_TOOL(nm, NM_FOR_TARGET, NM, [binutils/nm-new])\n@@ -3743,6 +3755,9 @@ AC_SUBST(stage2_werror_flag)\n # Specify what files to not compare during bootstrap.\n \n compare_exclusions=\"gcc/cc*-checksum\\$(objext) | gcc/ada/*tools/*\"\n+compare_exclusions=\"$compare_exclusions | gcc/m2/gm2-compiler-boot/M2Version*\"\n+compare_exclusions=\"$compare_exclusions | gcc/m2/gm2-compiler-boot/SYSTEM*\"\n+compare_exclusions=\"$compare_exclusions | gcc/m2/gm2version*\"\n case \"$target\" in\n   hppa*64*-*-hpux*) ;;\n   powerpc*-ibm-aix*) compare_exclusions=\"$compare_exclusions | *libgomp*\\$(objext)\" ;;"}, {"sha": "4030b2feec2ba46263724fc7c1758316e74e1c46", "filename": "contrib/ChangeLog", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/contrib%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/contrib%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2FChangeLog?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754", "patch": "@@ -1,3 +1,24 @@\n+2022-12-14  Martin Liska  <mliska@suse.cz>\n+\n+\t* analyze_brprob.py: Add copyright header.\n+\t* analyze_brprob_spec.py: Likewise.\n+\t* check-params-in-docs.py: Likewise.\n+\t* check_GNU_style.py: Likewise.\n+\t* check_GNU_style_lib.py: Likewise.\n+\t* filter-clang-warnings.py: Likewise.\n+\t* gcc-changelog/git_check_commit.py: Likewise.\n+\t* gcc-changelog/git_commit.py: Likewise.\n+\t* gcc-changelog/git_email.py: Likewise.\n+\t* gcc-changelog/git_repository.py: Likewise.\n+\t* gcc-changelog/git_update_version.py: Likewise.\n+\t* gcc-changelog/test_email.py: Likewise.\n+\t* mark_spam.py: Likewise.\n+\n+2022-12-14  Martin Liska  <mliska@suse.cz>\n+\n+\t* mklog.py: Check for number of hunks and not if a modified\n+\tfile is binary.\n+\n 2022-12-12  Martin Liska  <mliska@suse.cz>\n \n \t* mklog.py: Do not search PR entry in a file that is binary."}, {"sha": "d5a8031e75c0a3fc64c854a2b4d26fe3d925c4ab", "filename": "contrib/analyze_brprob.py", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/contrib%2Fanalyze_brprob.py", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/contrib%2Fanalyze_brprob.py", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fanalyze_brprob.py?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754", "patch": "@@ -1,4 +1,6 @@\n #!/usr/bin/env python3\n+\n+# Copyright (C) 2016 Free Software Foundation, Inc.\n #\n # Script to analyze results of our branch prediction heuristics\n #"}, {"sha": "8f7dcbaddb49860df36b16751d6246d68c3287d8", "filename": "contrib/analyze_brprob_spec.py", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/contrib%2Fanalyze_brprob_spec.py", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/contrib%2Fanalyze_brprob_spec.py", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fanalyze_brprob_spec.py?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754", "patch": "@@ -1,5 +1,7 @@\n #!/usr/bin/env python3\n \n+# Copyright (C) 2016 Free Software Foundation, Inc.\n+#\n # This file is part of GCC.\n #\n # GCC is free software; you can redistribute it and/or modify it under"}, {"sha": "8f8f6654df35e3b5ec0fd12c6d807a6b10e362e4", "filename": "contrib/check-params-in-docs.py", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/contrib%2Fcheck-params-in-docs.py", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/contrib%2Fcheck-params-in-docs.py", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fcheck-params-in-docs.py?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754", "patch": "@@ -1,4 +1,6 @@\n #!/usr/bin/env python3\n+\n+# Copyright (C) 2018 Free Software Foundation, Inc.\n #\n # Find missing and extra parameters in documentation compared to\n # output of: gcc --help=params."}, {"sha": "826d17abf08270ee397780b802d0a3fe3709ba5a", "filename": "contrib/check_GNU_style.py", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/contrib%2Fcheck_GNU_style.py", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/contrib%2Fcheck_GNU_style.py", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fcheck_GNU_style.py?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754", "patch": "@@ -1,4 +1,6 @@\n #!/usr/bin/env python3\n+\n+# Copyright (C) 2017 Free Software Foundation, Inc.\n #\n # Checks some of the GNU style formatting rules in a set of patches.\n # The script is a rewritten of the same bash script and should eventually"}, {"sha": "3d709d1eafa8c25ac6d176343cd1380b2f810105", "filename": "contrib/check_GNU_style_lib.py", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/contrib%2Fcheck_GNU_style_lib.py", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/contrib%2Fcheck_GNU_style_lib.py", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fcheck_GNU_style_lib.py?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754", "patch": "@@ -1,4 +1,6 @@\n #!/usr/bin/env python3\n+\n+# Copyright (C) 2017 Free Software Foundation, Inc.\n #\n # Checks some of the GNU style formatting rules in a set of patches.\n # The script is a rewritten of the same bash script and should eventually"}, {"sha": "c426bce5eb5291c79e76582050ccf6e8cd95a13e", "filename": "contrib/filter-clang-warnings.py", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/contrib%2Ffilter-clang-warnings.py", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/contrib%2Ffilter-clang-warnings.py", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Ffilter-clang-warnings.py?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754", "patch": "@@ -1,4 +1,6 @@\n #!/usr/bin/env python3\n+\n+# Copyright (C) 2018 Free Software Foundation, Inc.\n #\n # Script to analyze warnings produced by clang.\n #"}, {"sha": "2e3e8cbeb77bde291a13628bf8475a6c751d93ae", "filename": "contrib/gcc-changelog/git_check_commit.py", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/contrib%2Fgcc-changelog%2Fgit_check_commit.py", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/contrib%2Fgcc-changelog%2Fgit_check_commit.py", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fgcc-changelog%2Fgit_check_commit.py?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754", "patch": "@@ -1,4 +1,6 @@\n #!/usr/bin/env python3\n+\n+# Copyright (C) 2020 Free Software Foundation, Inc.\n #\n # This file is part of GCC.\n #"}, {"sha": "66d68de03a5e981ca719f3e597e74efc088df1bb", "filename": "contrib/gcc-changelog/git_commit.py", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/contrib%2Fgcc-changelog%2Fgit_commit.py", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/contrib%2Fgcc-changelog%2Fgit_commit.py", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fgcc-changelog%2Fgit_commit.py?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754", "patch": "@@ -1,4 +1,6 @@\n #!/usr/bin/env python3\n+\n+# Copyright (C) 2020 Free Software Foundation, Inc.\n #\n # This file is part of GCC.\n #"}, {"sha": "ef50ebfb7fdcc89000b36836156e96b3d9ae30cc", "filename": "contrib/gcc-changelog/git_email.py", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/contrib%2Fgcc-changelog%2Fgit_email.py", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/contrib%2Fgcc-changelog%2Fgit_email.py", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fgcc-changelog%2Fgit_email.py?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754", "patch": "@@ -1,4 +1,6 @@\n #!/usr/bin/env python3\n+\n+# Copyright (C) 2020 Free Software Foundation, Inc.\n #\n # This file is part of GCC.\n #"}, {"sha": "7c2dc218775f089f8aa91b799edfbd3e45dea84a", "filename": "contrib/gcc-changelog/git_repository.py", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/contrib%2Fgcc-changelog%2Fgit_repository.py", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/contrib%2Fgcc-changelog%2Fgit_repository.py", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fgcc-changelog%2Fgit_repository.py?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754", "patch": "@@ -1,4 +1,6 @@\n #!/usr/bin/env python3\n+\n+# Copyright (C) 2020 Free Software Foundation, Inc.\n #\n # This file is part of GCC.\n #"}, {"sha": "69c3d2a06330d7b1fceeda304ae8bfbbe005ac5c", "filename": "contrib/gcc-changelog/git_update_version.py", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/contrib%2Fgcc-changelog%2Fgit_update_version.py", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/contrib%2Fgcc-changelog%2Fgit_update_version.py", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fgcc-changelog%2Fgit_update_version.py?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754", "patch": "@@ -1,4 +1,6 @@\n #!/usr/bin/env python3\n+\n+# Copyright (C) 2020 Free Software Foundation, Inc.\n #\n # This file is part of GCC.\n #"}, {"sha": "89960d307c94b41e44bccb89de6f892267904260", "filename": "contrib/gcc-changelog/test_email.py", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/contrib%2Fgcc-changelog%2Ftest_email.py", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/contrib%2Fgcc-changelog%2Ftest_email.py", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fgcc-changelog%2Ftest_email.py?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754", "patch": "@@ -1,4 +1,6 @@\n #!/usr/bin/env python3\n+\n+# Copyright (C) 2020 Free Software Foundation, Inc.\n #\n # This file is part of GCC.\n #"}, {"sha": "a7dc5a2e7826a320e06ca4242dfebd6d9299d5bb", "filename": "contrib/mark_spam.py", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/contrib%2Fmark_spam.py", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/contrib%2Fmark_spam.py", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fmark_spam.py?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754", "patch": "@@ -1,4 +1,6 @@\n #!/usr/bin/env python3\n+\n+# Copyright (C) 2016 Free Software Foundation, Inc.\n #\n # Script to mark bunch of PRs as spam \n #"}, {"sha": "5299b0da895ac489fd3ec80df75e2ac96757ecb5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 79, "deletions": 0, "changes": 79, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754", "patch": "@@ -1,3 +1,82 @@\n+2022-12-14  David Faust  <david.faust@oracle.com>\n+\n+\tPR target/106773\n+\t* btfout.cc (get_section_name): New function.\n+\t(btf_collect_datasec): Use it here. Process functions, marking them\n+\t'extern' and generating DATASEC entries for them as appropriate. Move\n+\tcreation of BTF_KIND_FUNC records to here...\n+\t(btf_dtd_emit_preprocess_cb): ... from here.\n+\n+2022-12-14  David Faust  <david.faust@oracle.com>\n+\n+\tPR target/106773\n+\t* btfout.cc (btf_collect_datasec): Correct size of void entries.\n+\t(btf_dvd_emit_preprocess_cb): Do not skip emitting variables which\n+\trefer to void types.\n+\t(btf_init_postprocess): Create 'const void' type record if needed and\n+\tadjust variables to refer to it as appropriate.\n+\n+2022-12-14  David Faust  <david.faust@oracle.com>\n+\n+\tPR target/106773\n+\t* btfout.cc (btf_collect_datasec): Mark extern variables as such.\n+\t(btf_dvd_emit_preprocess_cb): Skip non-defining extern variable decl\n+\tif there is a defining decl for the same variable.\n+\t(btf_asm_varent): Accomodate 'extern' linkage.\n+\n+2022-12-14  Martin Jambor  <mjambor@suse.cz>\n+\n+\t* ipa-sra.cc (create_parameter_descriptors): Consider the first\n+\tparameter of a method safe to dereference.\n+\n+2022-12-14  Martin Jambor  <mjambor@suse.cz>\n+\n+\t* ipa-sra.cc (loaded_decls): Adjust comment.\n+\t(scan_expr_access): Also detect assignments of address of local\n+\tvariables to a variable.  Bail out early on SSA_NAMEs and\n+\tconstants as an optimization.\n+\n+2022-12-14  Gaius Mulley  <gaiusmod2@gmail.com>\n+\n+\t* configure.ac (HAVE_PYTHON): Test for Python3 added.\n+\t* dwarf2out.cc (gen_compile_unit_die): Check language_string\n+\tand language to DW_LANG_Modula2.\n+\t* doc/install.texi: Add m2 as a language.\n+\t(--disable-libgm2): Documented.  Add make check-m2 to testing selected\n+\ttests.\n+\t* doc/sourcebuild.texi (GM2): New prerequisite item.\n+\t(Python3 modules) New item.\n+\t(libgm2) Added.\n+\t(gcc/m2) Added.\n+\t* configure: Rebuilt.\n+\t* config.in: Rebuilt.\n+\t* doc/gm2.texi: New file.\n+\n+2022-12-14  Martin Jambor  <mjambor@suse.cz>\n+\n+\t* doc/invoke.texi (ipa-sra-ptrwrap-growth-factor): Fix the\n+\tdescription.\n+\t* params.opt (ipa-sra-ptrwrap-growth-factor): Likewise.\n+\n+2022-12-14  Tamar Christina  <tamar.christina@arm.com>\n+\n+\tPR target/107988\n+\t* config/aarch64/aarch64.cc\n+\t(aarch64_vectorize_can_special_div_by_constant): Ensure input and output\n+\tRTL are registers.\n+\n+2022-12-14  Martin Liska  <mliska@suse.cz>\n+\n+\t* doc/invoke.texi: Document ipa-sra-ptrwrap-growth-factor.\n+\n+2022-12-14  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/107617\n+\t* tree-ssa-sccvn.cc (vn_walk_cb_data::push_partial_def):\n+\tHandle negative pd.rhs_off.\n+\t(vn_reference_lookup_3): Properly provide pd.rhs_off\n+\tfor .LEN_STORE on big-endian targets.\n+\n 2022-12-13  Martin Jambor  <mjambor@suse.cz>\n \n \t* ipa-param-manipulation.cc"}, {"sha": "414c306c21ca1e70a573d27e273112891f6b2624", "filename": "gcc/DATESTAMP", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2FDATESTAMP", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2FDATESTAMP", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FDATESTAMP?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754", "patch": "@@ -1 +1 @@\n-20221214\n+20221215"}, {"sha": "3363fc88010a431deeec6f218c7a6553e2de8058", "filename": "gcc/analyzer/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fanalyzer%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fanalyzer%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fanalyzer%2FChangeLog?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754", "patch": "@@ -1,3 +1,15 @@\n+2022-12-14  David Malcolm  <dmalcolm@redhat.com>\n+\n+\tPR analyzer/108065\n+\t* region.cc (decl_region::get_svalue_for_initializer): Bail out to\n+\tavoid calling binding_key::make with an empty region.\n+\t* store.cc (binding_map::apply_ctor_val_to_range): Likewise.\n+\t(binding_map::apply_ctor_pair_to_child_region): Likewise.\n+\t(binding_cluster::bind): Likewise.\n+\t(binding_cluster::purge_region): Likewise.\n+\t(binding_cluster::maybe_get_compound_binding): Likewise.\n+\t(binding_cluster::maybe_get_simple_value): Likewise.\n+\n 2022-12-09  David Malcolm  <dmalcolm@redhat.com>\n \n \t* analyzer.h (class known_function): Expand comment."}, {"sha": "83809d6e1c3d20cf181d212df2fb92fee8118432", "filename": "gcc/analyzer/region.cc", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fanalyzer%2Fregion.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fanalyzer%2Fregion.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fanalyzer%2Fregion.cc?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754", "patch": "@@ -1208,6 +1208,9 @@ decl_region::get_svalue_for_initializer (region_model_manager *mgr) const\n       if (DECL_EXTERNAL (m_decl))\n \treturn NULL;\n \n+      if (empty_p ())\n+\treturn NULL;\n+\n       /* Implicit initialization to zero; use a compound_svalue for it.\n \t Doing so requires that we have a concrete binding for this region,\n \t which can fail if we have a region with unknown size"}, {"sha": "f3b500c50a06a7928d83c0f4fdcdf608d4aba071", "filename": "gcc/analyzer/store.cc", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fanalyzer%2Fstore.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fanalyzer%2Fstore.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fanalyzer%2Fstore.cc?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754", "patch": "@@ -911,6 +911,8 @@ binding_map::apply_ctor_val_to_range (const region *parent_reg,\n     return false;\n   bit_offset_t start_bit_offset = min_offset.get_bit_offset ();\n   store_manager *smgr = mgr->get_store_manager ();\n+  if (max_element->empty_p ())\n+    return false;\n   const binding_key *max_element_key = binding_key::make (smgr, max_element);\n   if (max_element_key->symbolic_p ())\n     return false;\n@@ -950,6 +952,8 @@ binding_map::apply_ctor_pair_to_child_region (const region *parent_reg,\n   else\n     {\n       const svalue *sval = get_svalue_for_ctor_val (val, mgr);\n+      if (child_reg->empty_p ())\n+\treturn false;\n       const binding_key *k\n \t= binding_key::make (mgr->get_store_manager (), child_reg);\n       /* Handle the case where we have an unknown size for child_reg\n@@ -1347,6 +1351,8 @@ binding_cluster::bind (store_manager *mgr,\n       return;\n     }\n \n+  if (reg->empty_p ())\n+    return;\n   const binding_key *binding = binding_key::make (mgr, reg);\n   bind_key (binding, sval);\n }\n@@ -1419,6 +1425,8 @@ void\n binding_cluster::purge_region (store_manager *mgr, const region *reg)\n {\n   gcc_assert (reg->get_kind () == RK_DECL);\n+  if (reg->empty_p ())\n+    return;\n   const binding_key *binding\n     = binding_key::make (mgr, const_cast<region *> (reg));\n   m_map.remove (binding);\n@@ -1666,6 +1674,9 @@ binding_cluster::maybe_get_compound_binding (store_manager *mgr,\n   if (reg_offset.symbolic_p ())\n     return NULL;\n \n+  if (reg->empty_p ())\n+    return NULL;\n+\n   region_model_manager *sval_mgr = mgr->get_svalue_manager ();\n \n   /* We will a build the result map in two parts:\n@@ -2162,6 +2173,9 @@ binding_cluster::maybe_get_simple_value (store_manager *mgr) const\n   if (m_map.elements () != 1)\n     return NULL;\n \n+  if (m_base_region->empty_p ())\n+    return NULL;\n+\n   const binding_key *key = binding_key::make (mgr, m_base_region);\n   return get_any_value (key);\n }"}, {"sha": "a423fabc0b522bae261be02bd64c879f29a91f8a", "filename": "gcc/btfout.cc", "status": "modified", "additions": 137, "deletions": 47, "changes": 184, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fbtfout.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fbtfout.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbtfout.cc?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754", "patch": "@@ -290,7 +290,35 @@ btf_datasec_push_entry (ctf_container_ref ctfc, const char *secname,\n   ds.entries.safe_push (info);\n \n   datasecs.safe_push (ds);\n-  num_types_created++;\n+}\n+\n+\n+/* Return the section name, as of interest to btf_collect_datasec, for the\n+   given symtab node.  Note that this deliberately returns NULL for objects\n+   which do not go in a section btf_collect_datasec cares about.  */\n+static const char *\n+get_section_name (symtab_node *node)\n+{\n+  const char *section_name = node->get_section ();\n+\n+  if (section_name == NULL)\n+    {\n+      switch (categorize_decl_for_section (node->decl, 0))\n+\t{\n+\tcase SECCAT_BSS:\n+\t  section_name = \".bss\";\n+\t  break;\n+\tcase SECCAT_DATA:\n+\t  section_name = \".data\";\n+\t  break;\n+\tcase SECCAT_RODATA:\n+\t  section_name = \".rodata\";\n+\t  break;\n+\tdefault:;\n+\t}\n+    }\n+\n+  return section_name;\n }\n \n /* Construct all BTF_KIND_DATASEC records for CTFC. One such record is created\n@@ -301,7 +329,60 @@ btf_datasec_push_entry (ctf_container_ref ctfc, const char *secname,\n static void\n btf_collect_datasec (ctf_container_ref ctfc)\n {\n-  /* See cgraph.h struct symtab_node, which varpool_node extends.  */\n+  cgraph_node *func;\n+  FOR_EACH_FUNCTION (func)\n+    {\n+      dw_die_ref die = lookup_decl_die (func->decl);\n+      if (die == NULL)\n+\tcontinue;\n+\n+      ctf_dtdef_ref dtd = ctf_dtd_lookup (ctfc, die);\n+      if (dtd == NULL)\n+\tcontinue;\n+\n+      /* Functions actually get two types: a BTF_KIND_FUNC_PROTO, and\n+\t also a BTF_KIND_FUNC.  But the CTF container only allocates one\n+\t type per function, which matches closely with BTF_KIND_FUNC_PROTO.\n+\t For each such function, also allocate a BTF_KIND_FUNC entry.\n+\t These will be output later.  */\n+      ctf_dtdef_ref func_dtd = ggc_cleared_alloc<ctf_dtdef_t> ();\n+      func_dtd->dtd_data = dtd->dtd_data;\n+      func_dtd->dtd_data.ctti_type = dtd->dtd_type;\n+      func_dtd->linkage = dtd->linkage;\n+      func_dtd->dtd_type = num_types_added + num_types_created;\n+\n+      /* Only the BTF_KIND_FUNC type actually references the name. The\n+\t BTF_KIND_FUNC_PROTO is always anonymous.  */\n+      dtd->dtd_data.ctti_name = 0;\n+\n+      vec_safe_push (funcs, func_dtd);\n+      num_types_created++;\n+\n+      /* Mark any 'extern' funcs and add DATASEC entries for them.  */\n+      if (DECL_EXTERNAL (func->decl))\n+\t{\n+\t  func_dtd->linkage = BTF_FUNC_EXTERN;\n+\n+\t  const char *section_name = get_section_name (func);\n+\t  /* Note: get_section_name () returns NULL for functions in text\n+\t     section.  This is intentional, since we do not want to generate\n+\t     DATASEC entries for them.  */\n+\t  if (section_name == NULL)\n+\t    continue;\n+\n+\t  struct btf_var_secinfo info;\n+\n+\t  /* +1 for the sentinel type not in the types map.  */\n+\t  info.type = func_dtd->dtd_type + 1;\n+\n+\t  /* Both zero at compile time.  */\n+\t  info.size = 0;\n+\t  info.offset = 0;\n+\n+\t  btf_datasec_push_entry (ctfc, section_name, info);\n+\t}\n+    }\n+\n   varpool_node *node;\n   FOR_EACH_VARIABLE (node)\n     {\n@@ -313,25 +394,13 @@ btf_collect_datasec (ctf_container_ref ctfc)\n       if (dvd == NULL)\n \tcontinue;\n \n-      const char *section_name = node->get_section ();\n+      /* Mark extern variables.  */\n+      if (DECL_EXTERNAL (node->decl))\n+\tdvd->dvd_visibility = BTF_VAR_GLOBAL_EXTERN;\n \n+      const char *section_name = get_section_name (node);\n       if (section_name == NULL)\n-\t{\n-\t  switch (categorize_decl_for_section (node->decl, 0))\n-\t    {\n-\t    case SECCAT_BSS:\n-\t      section_name = \".bss\";\n-\t      break;\n-\t    case SECCAT_DATA:\n-\t      section_name = \".data\";\n-\t      break;\n-\t    case SECCAT_RODATA:\n-\t      section_name = \".rodata\";\n-\t      break;\n-\t    default:\n-\t      continue;\n-\t    }\n-\t}\n+\tcontinue;\n \n       struct btf_var_secinfo info;\n \n@@ -347,13 +416,17 @@ btf_collect_datasec (ctf_container_ref ctfc)\n       tree size = DECL_SIZE_UNIT (node->decl);\n       if (tree_fits_uhwi_p (size))\n \tinfo.size = tree_to_uhwi (size);\n+      else if (VOID_TYPE_P (TREE_TYPE (node->decl)))\n+\tinfo.size = 1;\n \n       /* Offset is left as 0 at compile time, to be filled in by loaders such\n \t as libbpf.  */\n       info.offset = 0;\n \n       btf_datasec_push_entry (ctfc, section_name, info);\n     }\n+\n+  num_types_created += datasecs.length ();\n }\n \n /* Return true if the type ID is that of a type which will not be emitted (for\n@@ -431,8 +504,14 @@ btf_dvd_emit_preprocess_cb (ctf_dvdef_ref *slot, ctf_container_ref arg_ctfc)\n {\n   ctf_dvdef_ref var = (ctf_dvdef_ref) * slot;\n \n+  /* If this is an extern variable declaration with a defining declaration\n+     later, skip it so that only the defining declaration is emitted.\n+     This is the same case, fix and reasoning as in CTF; see PR105089.  */\n+  if (ctf_dvd_ignore_lookup (arg_ctfc, var->dvd_key))\n+    return 1;\n+\n   /* Do not add variables which refer to unsupported types.  */\n-  if (btf_removed_type_p (var->dvd_type))\n+  if (!voids.contains (var->dvd_type) && btf_removed_type_p (var->dvd_type))\n     return 1;\n \n   arg_ctfc->ctfc_vars_list[num_vars_added] = var;\n@@ -452,29 +531,6 @@ btf_dtd_emit_preprocess_cb (ctf_container_ref ctfc, ctf_dtdef_ref dtd)\n   if (!btf_emit_id_p (dtd->dtd_type))\n     return;\n \n-  uint32_t btf_kind\n-    = get_btf_kind (CTF_V2_INFO_KIND (dtd->dtd_data.ctti_info));\n-\n-  if (btf_kind == BTF_KIND_FUNC_PROTO)\n-    {\n-      /* Functions actually get two types: a BTF_KIND_FUNC_PROTO, and\n-\t also a BTF_KIND_FUNC. But the CTF container only allocates one\n-\t type per function, which matches closely with BTF_KIND_FUNC_PROTO.\n-\t For each such function, also allocate a BTF_KIND_FUNC entry.\n-\t These will be output later.  */\n-      ctf_dtdef_ref func_dtd = ggc_cleared_alloc<ctf_dtdef_t> ();\n-      func_dtd->dtd_data = dtd->dtd_data;\n-      func_dtd->dtd_data.ctti_type = dtd->dtd_type;\n-      func_dtd->linkage = dtd->linkage;\n-\n-      vec_safe_push (funcs, func_dtd);\n-      num_types_created++;\n-\n-      /* Only the BTF_KIND_FUNC type actually references the name. The\n-\t BTF_KIND_FUNC_PROTO is always anonymous.  */\n-      dtd->dtd_data.ctti_name = 0;\n-    }\n-\n   ctfc->ctfc_num_vlen_bytes += btf_calc_num_vbytes (dtd);\n }\n \n@@ -676,7 +732,7 @@ btf_asm_varent (ctf_dvdef_ref var)\n   dw2_asm_output_data (4, var->dvd_name_offset, \"btv_name\");\n   dw2_asm_output_data (4, BTF_TYPE_INFO (BTF_KIND_VAR, 0, 0), \"btv_info\");\n   dw2_asm_output_data (4, get_btf_id (var->dvd_type), \"btv_type\");\n-  dw2_asm_output_data (4, (var->dvd_visibility ? 1 : 0), \"btv_linkage\");\n+  dw2_asm_output_data (4, var->dvd_visibility, \"btv_linkage\");\n }\n \n /* Asm'out a member description following a BTF_KIND_STRUCT or\n@@ -1066,15 +1122,49 @@ btf_init_postprocess (void)\n {\n   ctf_container_ref tu_ctfc = ctf_get_tu_ctfc ();\n \n-  size_t i;\n-  size_t num_ctf_types = tu_ctfc->ctfc_types->elements ();\n-\n   holes.create (0);\n   voids.create (0);\n \n   num_types_added = 0;\n   num_types_created = 0;\n \n+  /* Workaround for 'const void' variables.  These variables are sometimes used\n+     in eBPF programs to address kernel symbols.  DWARF does not generate const\n+     qualifier on void type, so we would incorrectly emit these variables\n+     without the const qualifier.\n+     Unfortunately we need the TREE node to know it was const, and we need\n+     to create the const modifier type (if needed) now, before making the types\n+     list.  So we can't avoid iterating with FOR_EACH_VARIABLE here, and then\n+     again when creating the DATASEC entries.  */\n+  ctf_id_t constvoid_id = CTF_NULL_TYPEID;\n+  varpool_node *var;\n+  FOR_EACH_VARIABLE (var)\n+    {\n+      if (!var->decl)\n+\tcontinue;\n+\n+      tree type = TREE_TYPE (var->decl);\n+      if (type && VOID_TYPE_P (type) && TYPE_READONLY (type))\n+\t{\n+\t  dw_die_ref die = lookup_decl_die (var->decl);\n+\t  if (die == NULL)\n+\t    continue;\n+\n+\t  ctf_dvdef_ref dvd = ctf_dvd_lookup (tu_ctfc, die);\n+\t  if (dvd == NULL)\n+\t    continue;\n+\n+\t  /* Create the 'const' modifier type for void.  */\n+\t  if (constvoid_id == CTF_NULL_TYPEID)\n+\t    constvoid_id = ctf_add_reftype (tu_ctfc, CTF_ADD_ROOT,\n+\t\t\t\t\t    dvd->dvd_type, CTF_K_CONST, NULL);\n+\t  dvd->dvd_type = constvoid_id;\n+\t}\n+    }\n+\n+  size_t i;\n+  size_t num_ctf_types = tu_ctfc->ctfc_types->elements ();\n+\n   if (num_ctf_types)\n     {\n       init_btf_id_map (num_ctf_types + 1);"}, {"sha": "4cad077bfbed7fd73b3c04ce6405fd2f49178412", "filename": "gcc/config.in", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fconfig.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fconfig.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.in?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754", "patch": "@@ -211,6 +211,12 @@\n #endif\n \n \n+/* If --with-multiarch option is used */\n+#ifndef USED_FOR_TARGET\n+#undef ENABLE_MULTIARCH\n+#endif\n+\n+\n /* Define to 1 if translation of program messages to the user's native\n    language is requested. */\n #ifndef USED_FOR_TARGET\n@@ -2324,12 +2330,6 @@\n #endif\n \n \n-/* Specify if mutliarch is enabled. */\n-#ifndef USED_FOR_TARGET\n-#undef ENABLE_MULTIARCH\n-#endif\n-\n-\n /* The size of `dev_t', as computed by sizeof. */\n #ifndef USED_FOR_TARGET\n #undef SIZEOF_DEV_T"}, {"sha": "9a79a9e79288d67c8181d25b0c983f13c6cc3751", "filename": "gcc/config/aarch64/aarch64.cc", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fconfig%2Faarch64%2Faarch64.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fconfig%2Faarch64%2Faarch64.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64.cc?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754", "patch": "@@ -24395,7 +24395,8 @@ aarch64_vectorize_can_special_div_by_constant (enum tree_code code,\n       || !TYPE_UNSIGNED (vectype))\n     return false;\n \n-  unsigned int flags = aarch64_classify_vector_mode (TYPE_MODE (vectype));\n+  machine_mode mode = TYPE_MODE (vectype);\n+  unsigned int flags = aarch64_classify_vector_mode (mode);\n   if ((flags & VEC_ANY_SVE) && !TARGET_SVE2)\n     return false;\n \n@@ -24411,15 +24412,14 @@ aarch64_vectorize_can_special_div_by_constant (enum tree_code code,\n   if (in0 == NULL_RTX && in1 == NULL_RTX)\n     return true;\n \n-  if (!VECTOR_TYPE_P (vectype))\n-   return false;\n-\n   gcc_assert (output);\n \n-  if (!*output)\n-    *output = gen_reg_rtx (TYPE_MODE (vectype));\n-\n-  emit_insn (gen_aarch64_bitmask_udiv3 (TYPE_MODE (vectype), *output, in0, in1));\n+  expand_operand ops[3];\n+  create_output_operand (&ops[0], *output, mode);\n+  create_input_operand (&ops[1], in0, mode);\n+  create_fixed_operand (&ops[2], in1);\n+  expand_insn (insn_code, 3, ops);\n+  *output = ops[0].value;\n   return true;\n }\n "}, {"sha": "e702a5c078380a2c0ea5d033aaacee774bf00779", "filename": "gcc/configure", "status": "modified", "additions": 82, "deletions": 3, "changes": 85, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754", "patch": "@@ -808,6 +808,8 @@ am__leading_dot\n doc_build_sys\n AR\n NM\n+HAVE_PYTHON\n+PYTHON\n BISON\n FLEX\n GENERATED_MANPAGES\n@@ -8902,6 +8904,84 @@ done\n test -n \"$BISON\" || BISON=\"$MISSING bison\"\n \n \n+# Python3?\n+\n+  # Extract the first word of \"python3\", so it can be a program name with args.\n+set dummy python3; ac_word=$2\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for $ac_word\" >&5\n+$as_echo_n \"checking for $ac_word... \" >&6; }\n+if ${ac_cv_prog_PYTHON+:} false; then :\n+  $as_echo_n \"(cached) \" >&6\n+else\n+  if test -n \"$PYTHON\"; then\n+  ac_cv_prog_PYTHON=\"$PYTHON\" # Let the user override the test.\n+else\n+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR\n+for as_dir in $PATH\n+do\n+  IFS=$as_save_IFS\n+  test -z \"$as_dir\" && as_dir=.\n+    for ac_exec_ext in '' $ac_executable_extensions; do\n+  if as_fn_executable_p \"$as_dir/$ac_word$ac_exec_ext\"; then\n+    ac_cv_prog_PYTHON=\"python3\"\n+    $as_echo \"$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext\" >&5\n+    break 2\n+  fi\n+done\n+  done\n+IFS=$as_save_IFS\n+\n+fi\n+fi\n+PYTHON=$ac_cv_prog_PYTHON\n+if test -n \"$PYTHON\"; then\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $PYTHON\" >&5\n+$as_echo \"$PYTHON\" >&6; }\n+else\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n+$as_echo \"no\" >&6; }\n+fi\n+\n+\n+  if test -n \"$PYTHON\"; then\n+    # Found it, now check the version.\n+    { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for modern python3\" >&5\n+$as_echo_n \"checking for modern python3... \" >&6; }\n+if ${gcc_cv_prog_python3_modern+:} false; then :\n+  $as_echo_n \"(cached) \" >&6\n+else\n+  ac_prog_version=`eval $PYTHON --version 2>&1 |\n+                                     sed -n 's/^.*Python.* \\([0-9][0-9.]*\\).*$/\\1/p'`\n+\n+                    case $ac_prog_version in\n+                      '')  gcc_cv_prog_python3_modern=no;;\n+                      3.[4-9]*|3.[1-9][0-9]*|[4-9].*|[1-9][0-9]*)  gcc_cv_prog_python3_modern=yes;;\n+                      *)   gcc_cv_prog_python3_modern=no;;\n+                    esac\n+\n+fi\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $gcc_cv_prog_python3_modern\" >&5\n+$as_echo \"$gcc_cv_prog_python3_modern\" >&6; }\n+  else\n+    gcc_cv_prog_python3_modern=no\n+  fi\n+  if test $gcc_cv_prog_python3_modern = no; then\n+    PYTHON=\"${CONFIG_SHELL-/bin/sh} $ac_aux_dir/missing python3\"\n+  fi\n+\n+if test $gcc_cv_prog_python3_modern = no; then\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: WARNING:\n+*** Python3 is missing.\n+*** Documentation for modula-2 will not include the target SYSTEM module.\" >&5\n+$as_echo \"$as_me: WARNING:\n+*** Python3 is missing.\n+*** Documentation for modula-2 will not include the target SYSTEM module.\" >&2;}\n+  HAVE_PYTHON=no\n+else\n+  HAVE_PYTHON=yes\n+fi\n+\n+\n # Binutils are not build modules, unlike bison/flex/makeinfo.  So we\n # check for build == host before using them.\n \n@@ -19726,7 +19806,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 19729 \"configure\"\n+#line 19809 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -19832,7 +19912,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 19835 \"configure\"\n+#line 19915 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -33926,4 +34006,3 @@ if test -n \"$ac_unrecognized_opts\" && test \"$enable_option_checking\" != no; then\n $as_echo \"$as_me: WARNING: unrecognized options: $ac_unrecognized_opts\" >&2;}\n fi\n \n-"}, {"sha": "5c6f247f634676241e037ff27a2e2ce59920420a", "filename": "gcc/configure.ac", "status": "modified", "additions": 14, "deletions": 1, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure.ac?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754", "patch": "@@ -1263,6 +1263,20 @@ AC_CHECK_PROGS([FLEX], flex, [$MISSING flex])\n # Bison?\n AC_CHECK_PROGS([BISON], bison, [$MISSING bison])\n \n+# Python3?\n+ACX_CHECK_PROG_VER(PYTHON, python3, --version,\n+  [Python.* \\([0-9][0-9.]*\\)],\n+  [3.[4-9]*|3.[1-9][0-9]*|[4-9].*|[1-9][0-9]*])\n+if test $gcc_cv_prog_python3_modern = no; then\n+  AC_MSG_WARN([\n+*** Python3 is missing.\n+*** Documentation for modula-2 will not include the target SYSTEM module.])\n+  HAVE_PYTHON=no\n+else\n+  HAVE_PYTHON=yes\n+fi\n+AC_SUBST(HAVE_PYTHON)\n+\n # Binutils are not build modules, unlike bison/flex/makeinfo.  So we\n # check for build == host before using them.\n \n@@ -7665,4 +7679,3 @@ done\n ], \n [subdirs='$subdirs'])\n AC_OUTPUT\n-"}, {"sha": "c25df17428064d0f4ba9c4753f594c52ebdff068", "filename": "gcc/cp/call.cc", "status": "modified", "additions": 29, "deletions": 6, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fcp%2Fcall.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fcp%2Fcall.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcall.cc?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754", "patch": "@@ -622,6 +622,15 @@ conversion_obstack_alloc (size_t n)\n   return p;\n }\n \n+/* RAII class to discard anything added to conversion_obstack.  */\n+\n+struct conversion_obstack_sentinel\n+{\n+  void *p;\n+  conversion_obstack_sentinel (): p (conversion_obstack_alloc (0)) {}\n+  ~conversion_obstack_sentinel () { obstack_free (&conversion_obstack, p); }\n+};\n+\n /* Allocate rejection reasons.  */\n \n static struct rejection_reason *\n@@ -4219,18 +4228,32 @@ static tree\n maybe_init_list_as_array (tree elttype, tree init)\n {\n   /* Only do this if the array can go in rodata but not once converted.  */\n-  if (!CLASS_TYPE_P (elttype))\n+  if (!TYPE_NON_AGGREGATE_CLASS (elttype))\n     return NULL_TREE;\n   tree init_elttype = braced_init_element_type (init);\n   if (!init_elttype || !SCALAR_TYPE_P (init_elttype) || !TREE_CONSTANT (init))\n     return NULL_TREE;\n \n+  /* Check with a stub expression to weed out special cases, and check whether\n+     we call the same function for direct-init as copy-list-init.  */\n+  conversion_obstack_sentinel cos;\n+  tree arg = build_stub_object (init_elttype);\n+  conversion *c = implicit_conversion (elttype, init_elttype, arg, false,\n+\t\t\t\t       LOOKUP_NORMAL, tf_none);\n+  if (c && c->kind == ck_rvalue)\n+    c = next_conversion (c);\n+  if (!c || c->kind != ck_user)\n+    return NULL_TREE;\n+\n   tree first = CONSTRUCTOR_ELT (init, 0)->value;\n-  if (TREE_CODE (init_elttype) == INTEGER_TYPE && null_ptr_cst_p (first))\n-    /* Avoid confusion from treating 0 as a null pointer constant.  */\n-    first = build1 (UNARY_PLUS_EXPR, init_elttype, first);\n-  first = (perform_implicit_conversion_flags\n-\t   (elttype, first, tf_none, LOOKUP_IMPLICIT|LOOKUP_NO_NARROWING));\n+  conversion *fc = implicit_conversion (elttype, init_elttype, first, false,\n+\t\t\t\t\tLOOKUP_IMPLICIT|LOOKUP_NO_NARROWING,\n+\t\t\t\t\ttf_none);\n+  if (fc && fc->kind == ck_rvalue)\n+    fc = next_conversion (fc);\n+  if (!fc || fc->kind != ck_user || fc->cand->fn != c->cand->fn)\n+    return NULL_TREE;\n+  first = convert_like (fc, first, tf_none);\n   if (first == error_mark_node)\n     /* Let the normal code give the error.  */\n     return NULL_TREE;"}, {"sha": "513fdd3ec7f1c2f1ab00bd4677a0ccd6401b9619", "filename": "gcc/doc/gm2.texi", "status": "added", "additions": 2838, "deletions": 0, "changes": 2838, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fdoc%2Fgm2.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fdoc%2Fgm2.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fgm2.texi?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754", "patch": "@@ -0,0 +1,2838 @@\n+\\input texinfo\n+@c -*-texinfo-*-\n+@c Copyright (C) 2001-2022 Free Software Foundation, Inc.\n+@c This is part of the GM2 manual.\n+\n+@c User level documentation for GNU Modula-2\n+@c\n+@c header\n+\n+@setfilename gm2.info\n+@settitle The GNU Modula-2 Compiler\n+\n+@set version-python  3.5\n+\n+@include gcc-common.texi\n+\n+@c Copyright years for this manual.\n+@set copyrights-gm2 1999-2022\n+\n+@copying\n+@c man begin COPYRIGHT\n+Copyright @copyright{} @value{copyrights-gm2} Free Software Foundation, Inc.\n+\n+Permission is granted to copy, distribute and/or modify this document\n+under the terms of the GNU Free Documentation License, Version 1.3 or\n+any later version published by the Free Software Foundation; with no\n+Invariant Sections, no Front-Cover Texts, and no Back-Cover Texts.\n+A copy of the license is included in the\n+@c man end\n+section entitled ``GNU Free Documentation License''.\n+@ignore\n+@c man begin COPYRIGHT\n+man page gfdl(7).\n+@c man end\n+@end ignore\n+@end copying\n+\n+@ifinfo\n+@format\n+@dircategory Software development\n+@direntry\n+* gm2: (gm2).               A GCC-based compiler for the Modula-2 language\n+@end direntry\n+@end format\n+\n+@insertcopying\n+@end ifinfo\n+\n+@titlepage\n+@title The GNU Modula-2 Compiler\n+@versionsubtitle\n+@author Gaius Mulley\n+\n+@page\n+@vskip 0pt plus 1filll\n+Published by the Free Software Foundation @*\n+51 Franklin Street, Fifth Floor@*\n+Boston, MA 02110-1301, USA@*\n+@sp 1\n+@insertcopying\n+@end titlepage\n+@contents\n+@page\n+\n+@c `Top' Node and Master Menu\n+\n+@node Top, Overview, (dir), (dir)\n+@top Introduction\n+\n+@menu\n+* Overview::         What is GNU Modula-2.\n+* Using::            Using GNU Modula-2.\n+* License::          License of GNU Modula-2\n+* Copying::          GNU Public License V3.\n+* Contributing::     Contributing to GNU Modula-2\n+* Internals::        GNU Modula-2 internals.\n+* EBNF::             EBNF of GNU Modula-2\n+* Libraries::        PIM and ISO library definitions.\n+* Indices::          Document and function indices.\n+@end menu\n+\n+@node Overview, Using, Top, Top\n+@chapter Overview of GNU Modula-2\n+\n+@menu\n+* What is GNU Modula-2::  Brief description of GNU Modula-2.\n+* Why use GNU Modula-2::  Advantages of GNU Modula-2.\n+* Development::           How to get source code using git.\n+* Features::              GNU Modula-2 Features\n+@end menu\n+\n+@node What is GNU Modula-2, Why use GNU Modula-2, , Using\n+@section What is GNU Modula-2\n+\n+GNU Modula-2 is a @uref{http://gcc.gnu.org/frontends.html, front end}\n+for the GNU Compiler Collection (@uref{http://gcc.gnu.org/, GCC}).\n+The GNU Modula-2 compiler is compliant with the PIM2, PIM3, PIM4 and\n+ISO dialects.  Also implemented are a complete set of free ISO\n+libraries and PIM libraries.\n+\n+@footnote{The four Modula-2 dialects supported are defined in the following\n+references:\n+\n+PIM2: 'Programming in Modula-2', 2nd Edition, Springer Verlag, 1982,\n+1983 by Niklaus Wirth (PIM2).\n+\n+PIM3: 'Programming in Modula-2', 3rd Corrected Edition, Springer Verlag,\n+1985 (PIM3).\n+\n+PIM4: 'Programming in Modula-2', 4th Edition, Springer Verlag, 1988\n+(@uref{http://freepages.modula2.org/report4/modula-2.html, PIM4}).\n+\n+ISO: the ISO Modula-2 language as defined in 'ISO/IEC Information\n+technology - programming languages - part 1: Modula-2 Language,\n+ISO/IEC 10514-1 (1996)'\n+}\n+\n+@node Why use GNU Modula-2, Release map, What is GNU Modula-2, Using\n+@section Why use GNU Modula-2\n+\n+There are a number of advantages of using GNU Modula-2 rather than\n+translate an existing project into another language.\n+\n+The first advantage is of maintainability of the original sources\n+and the ability to debug the original project source code using a\n+combination of gm2 and gdb.\n+\n+The second advantage is that gcc runs on many processors and\n+platforms.  gm2 builds and runs on powerpc64le, amd64, i386, aarch64\n+to name but a few processors.\n+\n+gm2 can produce swig interface headers to allow access from Python and\n+other scripting languages.  It can also be used with C/C++ and\n+generate shared libraries.\n+\n+The compiler provides semantic analysis and run time checking (full ISO\n+Modula-2 checking is implemented) and there is a plugin which can,\n+under certain conditions, detect run time errors at compile time.\n+\n+The compiler supports PIM2, PIM3, PIM4 and ISO dialects of Modula-2,\n+work is underway to implement M2R10.  Many of the GCC builtins are\n+available and access to assembly programming is achieved using the\n+same syntax as that used by GCC.\n+\n+The gm2 driver allows third party libraries to be installed alongside\n+gm2 libraries.  For example if the user specifies library @code{foo}\n+using @code{-flibs=foo} the driver will check the standard GCC install\n+directory for a sub directory @code{foo} containing the library\n+contents.  The library module search path is altered accordingly\n+for compile and link.\n+\n+@node Release map, Development, Why use GNU Modula-2, Using\n+@section Release map\n+\n+GNU Modula-2 is now part of GCC and therefore will adopt the GCC\n+release schedule.  It is intended that GNU Modula-2 implement more of\n+the GCC builtins (vararg access) and GCC features.\n+\n+There is an intention to implement the ISO generics and the M2R10\n+dialect of Modula-2.  It will also implement all language changes.  If\n+you wish to see something different please email\n+@email{gm2@@nongnu.org} with your ideas.\n+\n+@node Development, Features, Release map, Using\n+@section How to get source code using git\n+\n+GNU Modula-2 is now in the @url{https://gcc.gnu.org/git.html, GCC git\n+tree}.\n+\n+@node Features, Documentation, Development, Using\n+@section GNU Modula-2 Features\n+\n+@itemize @bullet\n+\n+@item\n+the compiler currently complies with Programming in Modula-2 Edition\n+2, 3, 4 and ISO Modula-2.  Users can switch on specific language\n+features by using: @samp{-fpim}, @samp{-fpim2}, @samp{-fpim3},\n+@samp{-fpim4} or @samp{-fiso}.\n+\n+@item\n+the option @samp{-fswig} will automatically create a swig interface\n+file which corresponds to the definition module of the file being\n+compiled.\n+\n+@item\n+exception handling is compatible with C++ and swig.  Modula-2 code can\n+be used with C or C++ code.\n+\n+@item\n+Python can call GNU Modula-2 modules via swig.\n+\n+@item\n+shared libraries can be built.\n+\n+@item\n+fixed sized types are now available from @samp{SYSTEM}.\n+\n+@c @item\n+@c support for dynamic @code{ARRAY}s has been added into @samp{gdb}.\n+\n+@item\n+variables can be declared at addresses.\n+\n+@item\n+much better dwarf-2 debugging support and when used with\n+@samp{gdb} the programmer can display @code{RECORD}s,\n+@code{ARRAY}s, @code{SET}s, subranges and constant char literals\n+in Modula-2 syntax.\n+\n+@item\n+supports sets of any ordinal size (memory permitting).\n+\n+@item\n+easy interface to C, and varargs can be passed to C routines.\n+\n+@item\n+many Logitech libraries have been implemented and can be accessed via:\n+@samp{-flibs=m2log,m2pim,m2iso}.\n+\n+@item\n+coroutines have been implemented in the PIM style and these are\n+accessible from SYSTEM.  A number of supporting libraries (executive\n+and file descriptor mapping to interrupt vector libraries are\n+available through the @samp{-flibs=m2iso,m2pim} switch).\n+\n+@item\n+can be built as a cross compiler (for embedded microprocessors\n+such as the AVR and the ARM).\n+\n+@end itemize\n+\n+@node Documentation, Regression tests, Features, Using\n+@section Documentation\n+\n+The GNU Modula-2 documentation is available on line\n+@url{https://www.nongnu.org/gm2/homepage.html,at the gm2 homepage}\n+or in the pdf, info, html file format.\n+\n+@node Regression tests, Limitations, Documentation, Using\n+@section Regression tests for gm2 in the repository\n+\n+The regression testsuite can be run from the gcc build directory:\n+\n+@example\n+$ cd build-gcc\n+$ make check -j 24\n+@end example\n+\n+which runs the complete testsuite for all compilers using 24 parallel\n+invocations of the compiler.  Individual language testsuites can be\n+run by specifying the language, for example the Modula-2 testsuite can\n+be run using:\n+\n+@example\n+$ cd build-gcc\n+$ make check-m2 -j 24\n+@end example\n+\n+Finally the results of the testsuite can be emailed to the\n+@url{https://gcc.gnu.org/lists.html, gcc-testresults} list using the\n+@file{test_summary} script found in the gcc source tree:\n+\n+@example\n+$ @samp{directory to the sources}/contrib/test_summary\n+@end example\n+\n+@node Limitations, Objectives, Regression tests, Using\n+@section Limitations\n+\n+Logitech compatibility library is incomplete.  The principle modules\n+for this platform exist however for a comprehensive list of completed\n+modules please check the documentation\n+@url{gm2.html}.\n+\n+@node Objectives, FAQ, , Using\n+@section Objectives\n+\n+@itemize @bullet\n+\n+@item\n+The intention of GNU Modula-2 is to provide a production Modula-2\n+front end to GCC.\n+\n+@item\n+It should support all Niklaus Wirth PIM Dialects [234] and also ISO\n+Modula-2 including a re-implementation of all the ISO modules.\n+\n+@item\n+There should be an easy interface to C.\n+\n+@item\n+Exploit the features of GCC.\n+\n+@item\n+Listen to the requests of the users.\n+@end itemize\n+\n+@node FAQ, Community, Objectives, Using\n+@section FAQ\n+\n+@subsection Why use the C++ exception mechanism in GCC, rather than a bespoke Modula-2 mechanism?\n+\n+The C++ mechanism is tried and tested, it also provides GNU Modula-2\n+with the ability to link with C++ modules and via swig it can raise\n+Python exceptions.\n+\n+@node Community, Other languages, FAQ, Using\n+@section Community\n+\n+You can subscribe to the GNU Modula-2 mailing by sending an\n+email to:\n+@email{gm2-subscribe@@nongnu.org}\n+or by\n+@url{http://lists.nongnu.org/mailman/listinfo/gm2}.\n+The mailing list contents can be viewed\n+@url{http://lists.gnu.org/archive/html/gm2}.\n+\n+@node Other languages, , Community, Using\n+@section Other languages for GCC\n+\n+These exist and can be found on the frontends web page on the\n+@uref{http://gcc.gnu.org/frontends.html, gcc web site}.\n+\n+@node Using, , Community, Top\n+@chapter Using GNU Modula-2\n+\n+@menu\n+* Example usage::         Example compile and link.\n+* Compiler options::      GNU Modula-2 compiler options.\n+* Linking::               Linking options in more detail.\n+* Elementary data types:: Data types supported by GNU Modula-2.\n+* Standard procedures::   Permanently accessible base procedures.\n+* Dialect::               GNU Modula-2 supported dialects.\n+* Exceptions::            Exception implementation\n+* Semantic checking::     How to detect run time problems at compile time.\n+* Extensions::            GNU Modula-2 language extensions.\n+* Type compatibility::    Data type compatibility.\n+* Unbounded by reference::Explanation of a language optimization.\n+* Building a shared library:: How to build a shared library.\n+* Interface for Python::  How to produce swig interface files.\n+* Producing a Python module::  How to produce a Python module.\n+* Interface to C::        Interfacing GNU Modula-2 to C.\n+* Assembly language::     Interface to assembly language.\n+* Alignment::             Data type alignment.\n+* Packed::                Packing data types.\n+* Built-ins::             Accessing GNU Modula-2 Built-ins.\n+* The PIM system module:: SYSTEM data types and procedures.\n+* The ISO system module:: SYSTEM data types, procedures and run time.\n+* Other languages::       Other languages for GCC.\n+* What is GNU Modula-2::  Brief description of GNU Modula-2.\n+* Why use GNU Modula-2::  Advantages of GNU Modula-2.\n+@ifnothtml\n+@c omit these nodes if generating gm2 webpage as these are hand written.\n+* Release map:: Release map.\n+* Development:: Development.\n+* Features:: Features of the implementation.\n+* Documentation:: Placeholder for how to access the documentation online.\n+* Regression tests:: How to run the testsuite.\n+* Limitations:: Current limitations.\n+* Objectives:: Objectives of the implementation.\n+* FAQ:: Frequently asked questions.\n+* Community:: How to join the community.\n+@end ifnothtml\n+@end menu\n+\n+This document contains the user and design issues relevant to the\n+Modula-2 front end to gcc.\n+\n+@node Example usage, Compiler options, Using, Using\n+@section Example compile and link\n+\n+@ignore\n+@c man begin SYNOPSIS gm2\n+gm2 [@option{-c}|@option{-S}] [@option{-g}] [@option{-pg}]\n+    [@option{-O}@var{level}] [@option{-W}@var{warn}@dots{}]\n+    [@option{-I}@var{dir}@dots{}] [@option{-L}@var{dir}@dots{}]\n+    [@option{-f}@var{option}@dots{}] [@option{-m}@var{machine-option}@dots{}]\n+    [@option{-o} @var{outfile}] [@@@var{file}] @var{infile}@dots{}\n+\n+Only the most useful options are listed here; see below for the\n+remainder.\n+@c man end\n+@c man begin SEEALSO\n+gpl(7), gfdl(7), fsf-funding(7), gcc(1)\n+and the Info entries for @file{gm2} and @file{gcc}.\n+@c man end\n+@end ignore\n+\n+@c man begin DESCRIPTION gm2\n+\n+The @command{gm2} command is the GNU compiler for the Modula-2 language and\n+supports many of the same options as @command{gcc}.  @xref{Option Summary, ,\n+Option Summary, gcc, Using the GNU Compiler Collection (GCC)}.\n+This manual only documents the options specific to @command{gm2}.\n+\n+@c man end\n+\n+This section describes how to compile and link a simple hello world\n+program.  It provides a few examples of using the different options\n+mentioned in @pxref{Compiler options, , ,gm2}.  Assuming that you have\n+a file called @file{hello.mod} in your current directory which\n+contains:\n+\n+@example\n+MODULE hello ;\n+\n+FROM StrIO IMPORT WriteString, WriteLn ;\n+\n+BEGIN\n+   WriteString ('hello world') ; WriteLn\n+END hello.\n+@end example\n+\n+You can compile and link it by: @samp{gm2 -g hello.mod}.\n+The result will be an @samp{a.out} file created in your directory.\n+\n+You can split this command into two steps if you prefer.  The compile\n+step can be achieved by: @samp{gm2 -g -c -fscaffold-main hello.mod}\n+and the link via: @samp{gm2 -g hello.o}.\n+\n+@footnote{To see all the compile actions taken by @samp{gm2} users can also\n+add the @samp{-v} flag at the command line, for example:\n+\n+@samp{gm2 -v -g -I. hello.mod}\n+\n+This displays the sub processes initiated by @samp{gm2} which can be useful\n+when trouble shooting.}\n+\n+@node Compiler options, Elementary data types, Example usage, Using\n+@section Compiler options\n+\n+This section describes the compiler options specific to GNU Modula-2\n+for generic flags details @xref{Invoking GCC, , ,gcc}.\n+\n+@c man begin OPTIONS\n+\n+For any given input file, the file name suffix determines what kind of\n+compilation is done.  The following kinds of input file names are supported:\n+\n+@table @gcctabopt\n+@item @var{file}.mod\n+Modula-2 implementation or program source files.  See the\n+@samp{-fmod=} option if you wish to compile a project which uses a\n+different source file extension.\n+@item @var{file}.def\n+Modula-2 definition module source files.  Definition modules are not\n+compiled separately, in GNU Modula-2 definition modules are parsed as\n+required when program or implementation modules are compiled.  See the\n+@samp{-fdef=} option if you wish to compile a project which uses a\n+different source file extension.\n+@end table\n+\n+You can specify more than one input file on the @command{gm2} command line,\n+\n+@table @code\n+\n+@item -g\n+create debugging information so that debuggers such as @file{gdb}\n+can inspect and control executable.\n+\n+@item -I\n+used to specify the search path for definition and implementation\n+modules.  An example is:  @code{gm2 -g -c -I.:../../libs foo.mod}.\n+If this option is not specified then the default path is added\n+which consists of the current directory followed by the appropriate\n+language dialect library directories.\n+\n+@c ordered list of options from here.\n+\n+@item -fauto-init\n+turns on auto initialization of pointers to NIL.  Whenever a block is\n+created all pointers declared within this scope will have their\n+addresses assigned to NIL.\n+\n+@item -fbounds\n+turns on run time subrange, array index and indirection via @code{NIL}\n+pointer checking.\n+\n+@item -fcase\n+turns on compile time checking to check whether a @code{CASE}\n+statement requires an @code{ELSE} clause when on was not specified.\n+\n+@item -fcpp\n+preprocess the source with @samp{cpp -lang-asm -traditional-cpp}\n+For further details about these options @xref{Invocation, , ,cpp}.\n+If @samp{-fcpp} is supplied then all definition modules and\n+implementation modules which are parsed will be prepossessed by\n+@samp{cpp}.\n+\n+@c fcpp-end\n+@c Modula-2\n+@c passed to the preprocessor if -fcpp is used (internal switch)\n+\n+@c fcpp-begin\n+@c Modula-2\n+@c passed to the preprocessor if -fcpp is used (internal switch)\n+\n+@item -fdebug-builtins\n+call a real function, rather than the builtin equivalent.  This can\n+be useful for debugging parameter values to a builtin function as\n+it allows users to single step code into a real function.\n+\n+@c fd\n+@c Modula-2\n+@c turn on internal debugging of the compiler (internal switch)\n+\n+@c fdebug-trace-quad\n+@c Modula-2\n+@c turn on quadruple tracing (internal switch)\n+\n+@c fdebug-trace-api\n+@c Modula-2\n+@c turn on the Modula-2 api tracing (internal switch)\n+\n+@c fdebug-function-line-numbers\n+@c Modula-2\n+@c turn on the Modula-2 function line number generation (internal switch)\n+\n+@item -fdef=\n+recognize the specified suffix as a definition module filename.\n+The default implementation and module filename suffix is @file{.def}.\n+If this option is used GNU Modula-2 will still fall back to this\n+default if a requested definition module is not found.\n+\n+@item -fdump-system-exports\n+display all inbuilt system items.\n+This is an internal command line option.\n+\n+@item -fexceptions\n+turn on exception handling code.  By default this option is on.\n+Exception handling can be disabled by @samp{-fno-exceptions}\n+and no references are made to the run time exception libraries.\n+\n+@item -fextended-opaque\n+allows opaque types to be implemented as any type.  This is a GNU\n+Modula-2 extension and it requires that the implementation module\n+defining the opaque type is available so that it can be resolved when\n+compiling the module which imports the opaque type.\n+\n+@item -ffloatvalue\n+turns on run time checking to check whether a floating point number is\n+about to exceed range.\n+\n+@item -fgen-module-list=@file{filename}\n+attempt to find all modules when linking and generate a module list.\n+If the @file{filename} is @samp{-} then the contents are not written\n+and only used to force the linking of all module ctors.\n+This option cannot be used if @samp{-fuse-list=} is enabled.\n+\n+@item -findex\n+generate code to check whether array index values are out of bounds.\n+Array index checking can be disabled via @samp{-fno-index}.\n+\n+@item -fiso\n+turn on ISO standard features.  Currently this enables the ISO\n+@code{SYSTEM} module and alters the default library search path so\n+that the ISO libraries are searched before the PIM libraries.  It also\n+effects the behavior of @code{DIV} and @code{MOD} operators.\n+@xref{Dialect, , ,gm2}.\n+\n+@item -flibs=\n+modifies the default library search path.  The libraries supplied are:\n+m2pim, m2iso, m2min, m2log and m2cor.  These map onto the\n+Programming in Modula-2 base libraries, ISO standard libraries, minimal\n+library support, Logitech compatible library and Programming in\n+Modula-2 with coroutines.\n+Multiple libraries can be specified and are comma separated with precedence\n+going to the first in the list.  It is not necessary to use -flibs=m2pim or\n+-flibs=m2iso if you also specify -fpim, -fpim2, -fpim3, -fpim4 or\n+-fiso.  Unless you are using -flibs=m2min you should include m2pim as\n+the they provide the base modules which all other dialects utilize.\n+The option @samp{-fno-libs=-} disables the @samp{gm2} driver from\n+modifying the search and library paths.\n+\n+@c flocation=\n+@c Modula-2 Joined\n+@c set all location values to a specific value (internal switch)\n+\n+@item -fm2-g\n+improve the debugging experience for new programmers at the expense\n+of generating @code{nop} instructions if necessary to ensure single\n+stepping precision over all code related keywords.  An example\n+of this is in termination of a list of nested @code{IF} statements\n+where multiple @code{END} keywords are mapped onto a sequence of\n+@code{nop} instructions.\n+\n+@item -fm2-lower-case\n+render keywords in error messages using lower case.\n+\n+@item -fm2-plugin\n+insert plugin to identify run time errors at compile time (default on).\n+\n+@item -fm2-statistics\n+generates quadruple information: number of quadruples generated,\n+number of quadruples remaining after optimization and number of source\n+lines compiled.\n+\n+@item -fm2-strict-type\n+experimental flag to turn on the new strict type checker.\n+\n+@item -fm2-whole-program\n+compile all implementation modules and program module at once.  Notice\n+that you need to take care if you are compiling different dialect\n+modules (particularly with the negative operands to modulus).  But\n+this option, when coupled together with @code{-O3}, can deliver huge\n+performance improvements.\n+\n+@item -fmod=\n+recognize the specified suffix as implementation and module filenames.\n+The default implementation and module filename suffix is @file{.mod}.\n+If this option is used GNU Modula-2 will still fall back to this\n+default if it needs to read an implementation module and the specified\n+suffixed filename does not exist.\n+\n+@item -fnil\n+generate code to detect accessing data through a @code{NIL} value\n+pointer.  Dereferencing checking through a @code{NIL} pointer can be\n+disabled by @samp{-fno-nil}.\n+\n+@item -fpim\n+turn on PIM standard features.  Currently this enables the PIM\n+@code{SYSTEM} module and determines which identifiers are pervasive\n+(declared in the base module).  If no other @samp{-fpim[234]} switch is\n+used then division and modulus operators behave as defined in PIM4.\n+@xref{Dialect, , ,gm2}.\n+\n+@item -fpim2\n+turn on PIM-2 standard features.  Currently this removes @code{SIZE}\n+from being a pervasive identifier (declared in the base module).  It\n+places @code{SIZE} in the @code{SYSTEM} module.  It also effects the\n+behavior of @code{DIV} and @code{MOD} operators.\n+@xref{Dialect, , ,gm2}.\n+\n+@item -fpim3\n+turn on PIM-3 standard features.  Currently this only effects the\n+behavior of @code{DIV} and @code{MOD} operators.\n+@xref{Dialect, , ,gm2}.\n+\n+@item -fpim4\n+turn on PIM-4 standard features.  Currently this only effects the\n+behavior of @code{DIV} and @code{MOD} operators.\n+@xref{Dialect, , ,gm2}.\n+\n+@item -fpositive-mod-floor-div\n+forces the @code{DIV} and @code{MOD} operators to behave as defined by PIM4.\n+All modulus results are positive and the results from the division are\n+rounded to the floor.\n+@xref{Dialect, , ,gm2}.\n+\n+@item -fpthread\n+link against the pthread library.  By default this option is on.  It\n+can be disabled by @samp{-fno-pthread}.  GNU Modula-2 uses the GCC\n+pthread libraries to implement coroutines (see the SYSTEM\n+implementation module).\n+\n+@c -fq\n+@c -Modula-2\n+@c -internal compiler debugging information, dump the list of quadruples\n+\n+@item -frange\n+generate code to check the assignment range, return value range\n+set range and constructor range.  Range checking can be disabled\n+via @samp{-fno-range}.\n+\n+@item -freturn\n+generate code to check that functions always exit with a @code{RETURN}\n+and do not fall out at the end.  Return checking can be disabled\n+via @samp{-fno-return}.\n+\n+@item -fruntime-modules=\n+specify, using a comma separated list, the run time modules and their\n+order.  These modules will initialized first before any other modules\n+in the application dependency.  By default the run time modules list is\n+set to @code{Storage,SYSTEM,M2RTS,RTExceptions,IOLink}.  Note that\n+these modules will only be linked into your executable if they are\n+required.  So adding a long list of dependent modules will not effect\n+the size of the executable it merely states the initialization order\n+should they be required.\n+\n+@item -fscaffold-dynamic\n+the option ensures that @samp{gm2} will generate a dynamic scaffold\n+infrastructure when compiling implementation and program modules.\n+By default this option is on.  Use @samp{-fno-scaffold-dynamic}\n+to turn it off or select @samp{-fno-scaffold-static}.\n+\n+@item -fscaffold-c\n+generate a C source scaffold for the current module being compiled.\n+\n+@item -fscaffold-c++\n+generate a C++ source scaffold for the current module being compiled.\n+\n+@item -fscaffold-main\n+force the generation of the @samp{main} function.  This is not\n+necessary if the @samp{-c} is omitted.\n+\n+@item -fscaffold-static\n+the option ensures that @samp{gm2} will generate a static scaffold\n+within the program module.  The static scaffold consists of sequences\n+of calls to all dependent module initialization and finalization\n+procedures.  The static scaffold is useful for debugging and single\n+stepping the initialization blocks of implementation modules.\n+\n+@item -fshared\n+generate a shared library from the module.\n+\n+@item -fsoft-check-all\n+turns on all run time checks.  This is the same as invoking\n+GNU Modula-2 using the command options\n+@code{-fnil} @code{-frange} @code{-findex}\n+@code{-fwholevalue}\n+@code{-fwholediv} @code{-fcase} @code{-freturn}.\n+\n+@item -fsources\n+displays the path to the source of each module.  This option\n+can be used at compile time to check the correct definition module\n+is being used.\n+\n+@item -fswig\n+generate a swig interface file.\n+\n+@item -funbounded-by-reference\n+enable optimization of unbounded parameters by attempting to pass non\n+@code{VAR} unbounded parameters by reference.  This optimization\n+avoids the implicit copy inside the callee procedure.  GNU Modula-2\n+will only allow unbounded parameters to be passed by reference if,\n+inside the callee procedure, they are not written to, no address is\n+calculated on the array and it is not passed as a @code{VAR}\n+parameter.  Note that it is possible to write code to break this\n+optimization, therefore this option should be used carefully.\n+For example it would be possible to take the address of an array, pass\n+the address and the array to a procedure, read from the array in\n+the procedure and write to the location using the address parameter.\n+\n+Due to the dangerous nature of this option it is not enabled\n+when the @samp{-O} option is specified.\n+\n+@item -fuse-list=@file{filename}\n+if @samp{-fscaffold-static} is enabled then use the file\n+@file{filename} for the initialization order of modules.  Whereas if\n+@samp{-fscaffold-dynamic} is enabled then use this file to force\n+linking of all module ctors.\n+This option cannot be used if @samp{-fgen-module-list=} is enabled.\n+\n+@item -fwholediv\n+generate code to detect whole number division by zero or modulus by\n+zero.\n+\n+@item -fwholevalue\n+generate code to detect whole number overflow and underflow.\n+\n+@c the following warning options are complete but need to be\n+@c regression tested against all other front ends\n+@c to ensure the options do not conflict.\n+\n+@c @item -Wall\n+@c turn on all Modula-2 warnings.\n+\n+@c @item -Wpedantic\n+@c forces the compiler to reject nested @code{WITH} statements\n+@c referencing the same record type.  Does not allow multiple imports of\n+@c the same item from a module.  It also checks that: procedure variables\n+@c are written to before being read; variables are not only written to\n+@c but read from; variables are declared and used.  If the compiler\n+@c encounters a variable being read before written it will terminate with\n+@c a message.  It will check that @code{FOR} loop indices are not used\n+@c outside the end of this loop without being reset.\n+\n+@c @item -Wpedantic-cast\n+@c warns if the ISO system function is used and if the size of\n+@c the variable is different from that of the type.  This is legal\n+@c in ISO Modula-2, however it can be dangerous.  Some users may prefer\n+@c to use @code{VAL} instead in these situations and use @code{CAST}\n+@c exclusively for changes in type on objects which have the same size.\n+\n+@c @item -Wpedantic-param-names\n+@c procedure parameter names are checked in the definition module\n+@c against their implementation module counterpart.  This is not\n+@c necessary in ISO or PIM versions of Modula-2.\n+\n+@c @item -Wstyle\n+@c checks for poor programming style.  This option is aimed at new users of\n+@c Modula-2 in that it checks for situations which might cause confusion\n+@c and thus mistakes.  It checks whether variables of the same name are\n+@c declared in different scopes and whether variables look like keywords.\n+@c Experienced users might find this option too aggressive.\n+\n+@c @item -Wunused-variable\n+@c warns if a variable has been declared and it not used.\n+\n+@c @item -Wunused-parameter\n+@c warns if a parameter has been declared and it not used.\n+\n+@c @item -Wverbose-unbounded\n+@c inform the user which non @code{VAR} unbounded parameters will be\n+@c passed by reference.  This only produces output if the option\n+@c @samp{-funbounded-by-reference} is also supplied on the command line.\n+\n+@end table\n+\n+@c man end\n+\n+@node Elementary data types, Standard procedures, Compiler options, Using\n+@section Elementary data types\n+\n+This section describes the elementary data types supported by GNU\n+Modula-2.  It also describes the relationship between these data types\n+and the equivalent C data types.\n+\n+The following data types are supported: @code{INTEGER},\n+@code{LONGINT}, @code{SHORTINT}, @code{CARDINAL}, @code{LONGCARD},\n+@code{SHORTCARD}, @code{BOOLEAN}, @code{REAL}, @code{LONGREAL},\n+@code{SHORTREAL}, @code{COMPLEX}, @code{LONGCOMPLEX},\n+@code{SHORTCOMPLEX} and @code{CHAR}.\n+\n+An equivalence table is given below:\n+\n+@example\n+GNU Modula-2              GNU C\n+======================================\n+INTEGER                   int\n+LONGINT                   long long int\n+SHORTINT                  short int\n+CARDINAL                  unsigned int\n+LONGCARD                  long long unsigned int\n+SHORTCARD                 short unsigned int\n+BOOLEAN                   int\n+REAL                      double\n+LONGREAL                  long double\n+SHORTREAL                 float\n+CHAR                      char\n+SHORTCOMPLEX              complex float\n+COMPLEX                   complex double\n+LONGCOMPLEX               complex long double\n+@end example\n+\n+Note that GNU Modula-2 also supports fixed sized data types which are\n+exported from the @code{SYSTEM} module.\n+@xref{The PIM system module, , ,gm2}.\n+@xref{The ISO system module, , ,gm2}.\n+\n+@node Standard procedures, Dialect, Elementary data types, Using\n+@section Permanently accessible base procedures.\n+\n+This section describes the procedures and functions which are\n+always visible.\n+\n+@subsection Standard procedures and functions common to PIM and ISO\n+\n+The following procedures are implemented and conform with Programming\n+in Modula-2 and ISO Modula-2: @code{NEW}, @code{DISPOSE}, @code{INC},\n+@code{DEC}, @code{INCL}, @code{EXCL} and @code{HALT}.  The standard\n+functions are: @code{ABS}, @code{CAP}, @code{CHR}, @code{FLOAT},\n+@code{HIGH}, @code{LFLOAT}, @code{LTRUNC}, @code{MIN}, @code{MAX},\n+@code{ODD}, @code{SFLOAT}, @code{STRUNC} @code{TRUNC} and\n+@code{VAL}.  All these functions and procedures (except @code{HALT},\n+@code{NEW}, @code{DISPOSE} and, under non constant conditions,\n+@code{LENGTH}) generate in-line code for efficiency.\n+\n+@example\n+\n+(*\n+   ABS - returns the positive value of i.\n+*)\n+\n+@findex ABS\n+PROCEDURE ABS (i: <any signed type>) : <any signed type> ;\n+\n+@end example\n+\n+@example\n+\n+(*\n+   CAP - returns the capital of character ch providing\n+         ch lies within the range 'a'..'z'.  Otherwise ch\n+         is returned unaltered.\n+*)\n+\n+@findex CAP\n+PROCEDURE CAP (ch: CHAR) : CHAR ;\n+\n+@end example\n+\n+@example\n+\n+(*\n+   CHR - converts a value of a <whole number type> into a CHAR.\n+         CHR(x) is shorthand for VAL(CHAR, x).\n+*)\n+\n+@findex CHR\n+PROCEDURE CHR (x: <whole number type>) : CHAR ;\n+\n+@end example\n+\n+@example\n+\n+(*\n+   DISPOSE - the procedure DISPOSE is replaced by:\n+             DEALLOCATE(p, TSIZE(p^)) ;\n+             The user is expected to import the procedure DEALLOCATE\n+             (normally found in the module, Storage.)\n+\n+             In:  a variable p: of any pointer type which has been\n+                  initialized by a call to NEW.\n+             Out: the area of memory\n+                  holding p^ is returned to the system.\n+                  Note that the underlying procedure DEALLOCATE\n+                  procedure in module Storage will assign p to NIL.\n+*)\n+\n+@findex DISPOSE\n+PROCEDURE DISPOSE (VAR p:<any pointer type>) ;\n+@end example\n+\n+@example\n+\n+(*\n+   DEC - can either take one or two parameters.  If supplied\n+         with one parameter then on the completion of the call to\n+         DEC, v will have its predecessor value.  If two\n+         parameters are supplied then the value v will have its\n+         n'th predecessor.  For these reasons the value of n\n+         must be >=0.\n+*)\n+\n+@findex DEC\n+PROCEDURE DEC (VAR v: <any base type>; [n: <any base type> = 1]) ;\n+@end example\n+\n+@example\n+\n+(*\n+   EXCL - excludes bit element e from a set type s.\n+*)\n+\n+@findex EXCL\n+PROCEDURE EXCL (VAR s: <any set type>; e: <element of set type s>) ;\n+@end example\n+\n+@example\n+\n+(*\n+   FLOAT - will return a REAL number whose value is the same as o.\n+*)\n+\n+@findex FLOAT\n+PROCEDURE FLOAT (o: <any whole number type>) : REAL ;\n+@end example\n+\n+@example\n+\n+(*\n+   FLOATS - will return a SHORTREAL number whose value is the same as o.\n+*)\n+\n+@findex FLOATS\n+PROCEDURE FLOATS (o: <any whole number type>) : REAL ;\n+@end example\n+\n+@example\n+\n+(*\n+   FLOATL - will return a LONGREAL number whose value is the same as o.\n+*)\n+\n+@findex FLOATL\n+PROCEDURE FLOATL (o: <any whole number type>) : REAL ;\n+@end example\n+\n+@example\n+\n+(*\n+   HALT - will call the HALT procedure inside the module M2RTS.\n+          Users can replace M2RTS.\n+*)\n+\n+@findex HALT\n+PROCEDURE HALT ;\n+@end example\n+\n+@example\n+\n+(*\n+   HIGH - returns the last accessible index of an parameter declared as\n+          ARRAY OF CHAR.  Thus\n+\n+          PROCEDURE foo (a: ARRAY OF CHAR) ;\n+          VAR\n+             c: CARDINAL ;\n+          BEGIN\n+             c := HIGH(a)\n+          END foo ;\n+\n+          BEGIN\n+             foo('hello')\n+          END\n+\n+          will cause the local variable c to contain the value 4\n+*)\n+\n+@findex HIGH\n+PROCEDURE HIGH (a: ARRAY OF CHAR) : CARDINAL ;\n+@end example\n+\n+@example\n+\n+(*\n+   INC - can either take one or two parameters.  If supplied\n+         with one parameter then on the completion of the call to\n+         INC, v will have its successor value.  If two\n+         parameters are supplied then the value v will have its\n+         n'th successor.  For these reasons the value of n\n+         must be >=0.\n+*)\n+\n+@findex INC\n+PROCEDURE INC (VAR v: <any base type>; [n: <any base type> = 1]) ;\n+@end example\n+\n+@example\n+\n+(*\n+   INCL - includes bit element e to a set type s.\n+*)\n+\n+@findex INCL\n+PROCEDURE INCL (VAR s: <any set type>; e: <element of set type s>) ;\n+@end example\n+\n+@example\n+\n+(*\n+   LFLOAT - will return a LONGREAL number whose value is the same as o.\n+*)\n+\n+@findex LFLOAT\n+PROCEDURE LFLOAT (o: <any whole number type>) : LONGREAL ;\n+@end example\n+\n+@example\n+\n+(*\n+   LTRUNC - will return a LONG<type> number whose value is the\n+            same as o.  PIM2, PIM3 and ISO Modula-2 will return\n+            a LONGCARD whereas PIM4 returns LONGINT.\n+*)\n+\n+@findex LTRUNC\n+PROCEDURE LTRUNC (o: <any floating point type>) : LONG<type> ;\n+@end example\n+\n+@example\n+\n+(*\n+   MIN - returns the lowest legal value of an ordinal type.\n+*)\n+\n+@findex MIN\n+PROCEDURE MIN (t: <ordinal type>) : <ordinal type> ;\n+\n+@end example\n+\n+@example\n+\n+(*\n+   MAX - returns the largest legal value of an ordinal type.\n+*)\n+\n+@findex MAX\n+PROCEDURE MAX (t: <ordinal type>) : <ordinal type> ;\n+\n+@end example\n+\n+@example\n+\n+(*\n+   NEW - the procedure NEW is replaced by:\n+         ALLOCATE(p, TSIZE(p^)) ;\n+         The user is expected to import the procedure ALLOCATE\n+         (normally found in the module, Storage.)\n+\n+         In:  a variable p: of any pointer type.\n+         Out: variable p is set to some allocated memory\n+              which is large enough to hold all the contents of p^.\n+*)\n+\n+@findex NEW\n+PROCEDURE NEW (VAR p:<any pointer type>) ;\n+@end example\n+\n+@example\n+\n+(*\n+   ODD - returns TRUE if the value is not divisible by 2.\n+*)\n+\n+@findex ODD\n+PROCEDURE ODD (x: <whole number type>) : BOOLEAN ;\n+\n+@end example\n+\n+@example\n+\n+(*\n+   SFLOAT - will return a SHORTREAL number whose value is the same\n+            as o.\n+*)\n+\n+@findex SFLOAT\n+PROCEDURE SFLOAT (o: <any whole number type>) : SHORTREAL ;\n+@end example\n+\n+@example\n+\n+(*\n+   STRUNC - will return a SHORT<type> number whose value is the same\n+            as o.  PIM2, PIM3 and ISO Modula-2 will return a\n+            SHORTCARD whereas PIM4 returns SHORTINT.\n+*)\n+\n+@findex STRUNC\n+PROCEDURE STRUNC (o: <any floating point type>) : SHORT<type> ;\n+@end example\n+\n+@example\n+\n+(*\n+   TRUNC - will return a <type> number whose value is the same as o.\n+           PIM2, PIM3 and ISO Modula-2 will return a CARDINAL\n+           whereas PIM4 returns INTEGER.\n+*)\n+\n+@findex TRUNC\n+PROCEDURE TRUNC (o: <any floating point type>) : <type> ;\n+@end example\n+\n+@example\n+\n+(*\n+   TRUNCS - will return a <type> number whose value is the same\n+            as o.  PIM2, PIM3 and ISO Modula-2 will return a\n+            SHORTCARD whereas PIM4 returns SHORTINT.\n+*)\n+\n+@findex TRUNCS\n+PROCEDURE TRUNCS (o: <any floating point type>) : <type> ;\n+@end example\n+\n+@example\n+\n+(*\n+   TRUNCL - will return a <type> number whose value is the same\n+            as o.  PIM2, PIM3 and ISO Modula-2 will return a\n+            LONGCARD whereas PIM4 returns LONGINT.\n+*)\n+\n+@findex TRUNCL\n+PROCEDURE TRUNCL (o: <any floating point type>) : <type> ;\n+@end example\n+\n+@example\n+\n+(*\n+   VAL - converts data i of <any simple data type 2> to\n+         <any simple data type 1> and returns this value.\n+         No range checking is performed during this conversion.\n+*)\n+\n+@findex VAL\n+PROCEDURE VAL (<any simple data type 1>,\n+               i: <any simple data type 2>) : <any simple data type 1> ;\n+\n+@end example\n+\n+@subsection ISO specific standard procedures and functions\n+\n+The standard function @code{LENGTH} is specific to ISO Modula-2 and\n+is defined as:\n+\n+@example\n+\n+(*\n+   IM - returns the imaginary component of a complex type.\n+        The return value will the same type as the imaginary field\n+        within the complex type.\n+*)\n+\n+@findex IM\n+PROCEDURE IM (c: <any complex type>) : <floating point type> ;\n+@end example\n+\n+@example\n+\n+(*\n+   INT - returns an INTEGER value which has the same value as v.\n+         This function is equivalent to: VAL(INTEGER, v).\n+*)\n+\n+@findex INT\n+PROCEDURE INT (v: <any ordinal type>) : INTEGER ;\n+@end example\n+\n+@example\n+\n+(*\n+   LENGTH - returns the length of string a.\n+*)\n+\n+@findex LENGTH\n+PROCEDURE LENGTH (a: ARRAY OF CHAR) : CARDINAL ;\n+@end example\n+\n+This function is evaluated at compile time, providing that string\n+@code{a} is a constant.  If @code{a} cannot be evaluated then a call is\n+made to @code{M2RTS.Length}.\n+\n+@example\n+\n+(*\n+   ODD - returns a BOOLEAN indicating whether the whole number\n+         value, v, is odd.\n+*)\n+\n+@findex ODD\n+PROCEDURE ODD (v: <any whole number type>) : BOOLEAN ;\n+@end example\n+\n+@example\n+\n+(*\n+   RE - returns the real component of a complex type.\n+        The return value will the same type as the real field\n+        within the complex type.\n+*)\n+\n+@findex RE\n+PROCEDURE RE (c: <any complex type>) : <floating point type> ;\n+@end example\n+\n+@node Dialect, Exceptions, Standard procedures, Using\n+@section GNU Modula-2 supported dialects\n+\n+This section describes the dialects understood by GNU Modula-2.\n+It also describes the differences between the dialects and\n+any command line switches which determine dialect behaviour.\n+\n+The GNU Modula-2 compiler is compliant with four dialects of Modula-2.\n+The language as defined in 'Programming in Modula-2' 2nd Edition,\n+Springer Verlag, 1982, 1983 by Niklaus Wirth (PIM2), 'Programming in\n+Modula-2', 3rd Corrected Edition, Springer Verlag, 1985 (PIM3) and\n+'Programming in Modula-2', 4th Edition, Springer Verlag, 1988 (PIM4)\n+@uref{http://freepages.modula2.org/report4/modula-2.html} and the ISO\n+Modula-2 language as defined in ISO/IEC Information technology -\n+programming languages - part 1: Modula-2 Language, ISO/IEC 10514-1\n+(1996) (ISO).\n+\n+The command line switches @samp{-fpim2}, @samp{-fpim3}, @samp{-fpim4}\n+and @samp{-fiso} can be used to force mutually exclusive\n+features.  However by default the compiler will not aggressively fail\n+if a non mutually exclusive feature is used from another dialect.  For\n+example it is possible to specify @samp{-fpim2} and still utilize\n+@samp{DEFINITION} @samp{MODULES} which have no export list.\n+\n+Some dialect differences will force a compile time error, for example\n+in PIM2 the user must @code{IMPORT} @code{SIZE} from the module\n+@code{SYSTEM}, whereas in PIM3 and PIM4 @code{SIZE} is a pervasive\n+function.  Thus compiling PIM4 source code with the @samp{-fpim2}\n+switch will cause a compile time error.  This can be fixed quickly\n+with an additional @code{IMPORT} or alternatively by compiling with\n+the @samp{-fpim4} switch.\n+\n+However there are some very important differences between the dialects\n+which are mutually exclusive and therefore it is vital that users\n+choose the dialects with care when these language features are used.\n+\n+@subsection Integer division, remainder and modulus\n+\n+The most dangerous set of mutually exclusive features found in the\n+four dialects supported by GNU Modula-2 are the @code{INTEGER}\n+division, remainder and modulus arithmetic operators.  It is important\n+to note that the same source code can be compiled to give different\n+run time results depending upon these switches!  The reference manual\n+for the various dialects of Modula-2 are quite clear about this\n+behavior and sadly there are three distinct definitions.\n+\n+The table below illustrates the problem when a negative operand is\n+used.\n+\n+@example\n+                  Pim2/3          Pim4                ISO\n+               -----------    -----------    ----------------------\n+lval    rval   DIV     MOD    DIV     MOD    DIV    MOD    /    REM\n+ 31      10      3       1      3       1      3      1     3     1\n+-31      10     -3      -1     -4       9     -4      9    -3    -1\n+ 31     -10     -3       1     -3       1     Exception    -3     1\n+-31     -10      3      -1      4       9     Exception     3    -1\n+@end example\n+\n+See also P24 of PIM2, P27 of PIM3, P29 of PIM4 and P201 of the ISO\n+Standard.  At present all dialect division, remainder and modulus are\n+implemented as above, apart from the exception calling in the ISO\n+dialect.  Instead of exception handling the results are the same as the\n+PIM4 dialect.  This is a temporary implementation situation.\n+\n+@node Exceptions, Semantic checking, Dialect, Using\n+@section Exception implementation\n+\n+This section describes how exceptions are implemented in GNU Modula-2\n+and how command line switches affect their behavior.  The option\n+@samp{-fsoft-check-all} enables all software checking of nil\n+dereferences, division by zero etc.  Additional code is produced to\n+check these conditions and exception handlers are invoked if the\n+conditions prevail.\n+\n+Without @samp{-fsoft-check-all} these exceptions will be caught by\n+hardware (assuming the hardware support exists) and a signal handler\n+is invoked.  The signal handler will in turn @code{THROW} an exception\n+which will be caught by the appropriate Modula-2 handler.  However the\n+action of throwing an exception from within a signal handler is\n+implementation defined (according to the C++ documentation).  For\n+example on the x86_64 architecture this works whereas on the i686\n+architecture it does not.  Therefore to ensure portability it is\n+recommended to use @samp{-fsoft-check-all}.\n+\n+@footnote{@samp{-fsoft-check-all} can be effectively combined with\n+@samp{-O2} to semantically analyze source code for possible run time\n+errors at compile time.}\n+\n+@node Semantic checking, Extensions, Exceptions, Using\n+@section How to detect run time problems at compile time\n+\n+Consider the following program:\n+\n+@example\n+MODULE assignvalue ;  (*!m2iso+gm2*)\n+\n+PROCEDURE bad () : INTEGER ;\n+VAR\n+   i: INTEGER ;\n+BEGIN\n+   i := -1 ;\n+   RETURN i\n+END bad ;\n+\n+VAR\n+   foo: CARDINAL ;\n+BEGIN\n+   (* The m2rte plugin will detect this as an error, post\n+      optimization.  *)\n+   foo := bad ()\n+END assignvalue.\n+@end example\n+\n+here we see that the programmer has overlooked that the return value\n+from @samp{bad} will cause an overflow to @samp{foo}.  If we compile\n+the code with the following options:\n+\n+@example\n+$ gm2 -g -fsoft-check-all -O2 -c assignvalue.mod\n+assignvalue.mod:16:0:inevitable that this error will occur at run time,\n+assignment will result in an overflow\n+@end example\n+\n+The gm2 semantic plugin is automatically run and will generate a\n+warning message for every exception call which is known as reachable.\n+It is highly advised to run the optimizer (@samp{-O2} or @samp{-O3})\n+with @samp{-fsoft-check-all} so that the compiler is able to run the\n+optimizer and perform variable and flow analysis before the semantic\n+plugin is invoked.\n+\n+@node Extensions, Type compatibility, Semantic checking, Using\n+@section GNU Modula-2 language extensions\n+\n+This section introduces the GNU Modula-2 language extensions.\n+The GNU Modula-2 compiler allows abstract data types to be any type,\n+not just restricted to a pointer type providing the\n+@samp{-fextended-opaque} option is supplied\n+@xref{Compiler options, , ,gm2}.\n+\n+Declarations can be made in any order, whether they are\n+types, constants, procedures, nested modules or variables.\n+@c (@xref{Passes, , ,}.)\n+\n+GNU Modula-2 also allows programmers to interface to @code{C} and\n+assembly language.\n+\n+GNU Modula-2 provides support for the special tokens @code{__LINE__},\n+@code{__FILE__}, @code{__FUNCTION__} and @code{__DATE__}.  Support for\n+these tokens will occur even if the @samp{-fcpp} option is not\n+supplied.  A table of these identifiers and their data type and values\n+is given below:\n+\n+@example\n+Scope       GNU Modula-2 token      Data type and example value\n+\n+anywhere    __LINE__                Constant Literal compatible\n+                                    with CARDINAL, INTEGER and WORD.\n+                                    Example 1234\n+\n+anywhere    __FILE__                Constant string compatible\n+                                    with parameter ARRAY OF CHAR or\n+                                    an ARRAY whose SIZE is >= string\n+                                    length.  Example\n+                                    \"hello.mod\"\n+\n+procedure   __FUNCTION__            Constant string compatible\n+                                    with parameter ARRAY OF CHAR or\n+                                    an ARRAY whose SIZE is >= string\n+                                    length.  Example\n+                                    \"calc\"\n+\n+module      __FUNCTION__            Example\n+                                    \"module hello initialization\"\n+\n+anywhere    __DATE__                Constant string compatible\n+                                    with parameter ARRAY OF CHAR or\n+                                    an ARRAY whose SIZE is >= string\n+                                    length.  Example\n+                                    \"Thu Apr 29 10:07:16 BST 2004\"\n+\n+anywhere   __COLUMN__               Gives a constant literal number\n+                                    determining the left hand column\n+                                    where the first _ appears in\n+                                    __COLUMN__.  The left most column\n+                                    is 1.\n+\n+@end example\n+\n+The preprocessor @samp{cpp} can be invoked via the @samp{-fcpp}\n+command line option.  This in turn invokes @samp{cpp} with the\n+following arguments @samp{-traditional -lang-asm}.  These options\n+preserve comments and all quotations.  @samp{gm2} treats a @samp{#}\n+character in the first column as a preprocessor directive.\n+\n+For example here is a module which calls @code{FatalError}\n+via the macro @code{ERROR}.\n+\n+@example\n+MODULE cpp ;\n+\n+FROM SYSTEM IMPORT ADR, SIZE ;\n+FROM libc IMPORT exit, printf, malloc ;\n+\n+PROCEDURE FatalError (a, file: ARRAY OF CHAR;\n+                         line: CARDINAL;\n+                         func: ARRAY OF CHAR) ;\n+BEGIN\n+   printf (\"%s:%d:fatal error, %s, in %s\\n\",\n+            ADR (file), line, ADR (a), ADR (func)) ;\n+   exit (1)\n+END FatalError ;\n+\n+#define ERROR(X)  FatalError(X, __FILE__, __LINE__, __FUNCTION__)\n+\n+VAR\n+   pc: POINTER TO CARDINAL;\n+BEGIN\n+   pc := malloc (SIZE (CARDINAL)) ;\n+   IF pc = NIL\n+   THEN\n+      ERROR ('out of memory')\n+   END\n+END cpp.\n+@end example\n+\n+Another use for the C preprocessor in Modula-2 might be to turn on\n+debugging code.  For example the library module\n+@file{FormatStrings.mod} uses procedures from @file{DynamicStrings.mod}\n+and to track down memory leaks it was useful to track the source file\n+and line where each string was created.  Here is a section of\n+@file{FormatStrings.mod} which shows how the debugging code was\n+enabled and disabled by adding @code{-fcpp} to the command line.\n+\n+@example\n+FROM DynamicStrings IMPORT String, InitString, InitStringChar, Mark,\n+                           ConCat, Slice, Index, char,\n+                           Assign, Length, Mult, Dup, ConCatChar,\n+                           PushAllocation, PopAllocationExemption,\n+                           InitStringDB, InitStringCharStarDB,\n+                           InitStringCharDB, MultDB, DupDB, SliceDB ;\n+\n+(*\n+#define InitString(X) InitStringDB(X, __FILE__, __LINE__)\n+#define InitStringCharStar(X) InitStringCharStarDB(X, __FILE__, \\\n+                                                   __LINE__)\n+#define InitStringChar(X) InitStringCharDB(X, __FILE__, __LINE__)\n+#define Mult(X,Y) MultDB(X, Y, __FILE__, __LINE__)\n+#define Dup(X) DupDB(X, __FILE__, __LINE__)\n+#define Slice(X,Y,Z) SliceDB(X, Y, Z, __FILE__, __LINE__)\n+*)\n+\n+PROCEDURE doDSdbEnter ;\n+BEGIN\n+   PushAllocation\n+END doDSdbEnter ;\n+\n+PROCEDURE doDSdbExit (s: String) ;\n+BEGIN\n+   s := PopAllocationExemption (TRUE, s)\n+END doDSdbExit ;\n+\n+PROCEDURE DSdbEnter ;\n+BEGIN\n+END DSdbEnter ;\n+\n+PROCEDURE DSdbExit (s: String) ;\n+BEGIN\n+END DSdbExit ;\n+\n+(*\n+#define DBsbEnter doDBsbEnter\n+#define DBsbExit  doDBsbExit\n+*)\n+\n+PROCEDURE Sprintf1 (s: String; w: ARRAY OF BYTE) : String ;\n+BEGIN\n+   DSdbEnter ;\n+   s := FormatString (HandleEscape (s), w) ;\n+   DSdbExit (s) ;\n+   RETURN s\n+END Sprintf1 ;\n+@end example\n+\n+It is worth noting that the overhead of this code once @code{-fcpp} is\n+not present and -O2 is used will be zero since the local empty\n+procedures @code{DSdbEnter} and @code{DSdbExit} will be thrown away by\n+the optimization passes of the GCC backend.\n+\n+@subsection Optional procedure parameter\n+\n+GNU Modula-2 allows the last parameter to a procedure or function\n+parameter to be optional.  For example in the ISO library\n+@file{COROUTINES.def} the procedure @code{NEWCOROUTINE} is defined as\n+having an optional fifth argument (@code{initProtection}) which, if\n+absent, is automatically replaced by @code{NIL}.\n+\n+@example\n+@findex NEWCOROUTINE\n+PROCEDURE NEWCOROUTINE (procBody: PROC; workspace: SYSTEM.ADDRESS;\n+                        size: CARDINAL; VAR cr: COROUTINE;\n+                        [initProtection: PROTECTION = NIL]);\n+\n+  (* Creates a new coroutine whose body is given by procBody,\n+     and returns the identity of the coroutine in cr.\n+     workspace is a pointer to the work space allocated to\n+     the coroutine; size specifies the size of this workspace\n+     in terms of SYSTEM.LOC.\n+\n+     The optional fifth argument may contain a single parameter\n+     which specifies the initial protection level of the coroutine.\n+  *)\n+@end example\n+\n+The implementation module @file{COROUTINES.mod} implements this\n+procedure using the following syntax:\n+\n+@example\n+PROCEDURE NEWCOROUTINE (procBody: PROC; workspace: SYSTEM.ADDRESS;\n+                        size: CARDINAL; VAR cr: COROUTINE;\n+                        [initProtection: PROTECTION]);\n+BEGIN\n+\n+END NEWCOROUTINE ;\n+@end example\n+\n+Note that it is illegal for this declaration to contain an initializer\n+value for @code{initProtection}.  However it is necessary to surround\n+this parameter with the brackets @code{[} and @code{]}.  This serves to\n+remind the programmer that the last parameter was declared as optional\n+in the definition module.\n+\n+Local procedures can be declared to have an optional final parameter\n+in which case the initializer is mandatory in the implementation or\n+program module.\n+\n+GNU Modula-2 also provides additional fixed sized data types which\n+are all exported from the @code{SYSTEM} module.\n+@xref{The PIM system module, , ,gm2}.\n+@xref{The ISO system module, , ,gm2}.\n+\n+@node Type compatibility, Unbounded by reference, Extensions, Using\n+@section Type compatibility\n+\n+This section discuss the issues surrounding assignment, expression\n+and parameter compatibility, their effect of the additional\n+fixed sized datatypes and also their effect of run time checking.\n+The data types supported by the compiler are:\n+\n+@example\n+GNU Modula-2              scope      switches\n+=============================================\n+INTEGER                   pervasive\n+LONGINT                   pervasive\n+SHORTINT                  pervasive\n+CARDINAL                  pervasive\n+LONGCARD                  pervasive\n+SHORTCARD                 pervasive\n+BOOLEAN                   pervasive\n+BITSET                    pervasive\n+REAL                      pervasive\n+LONGREAL                  pervasive\n+SHORTREAL                 pervasive\n+CHAR                      pervasive\n+SHORTCOMPLEX              pervasive\n+COMPLEX                   pervasive\n+LONGCOMPLEX               pervasive\n+\n+LOC                       SYSTEM     -fiso\n+BYTE                      SYSTEM\n+WORD                      SYSTEM\n+ADDRESS                   SYSTEM\n+\n+The following extensions are supported for\n+most architectures (please check SYSTEM.def).\n+=============================================\n+INTEGER8                  SYSTEM\n+INTEGER16                 SYSTEM\n+INTEGER32                 SYSTEM\n+INTEGER64                 SYSTEM\n+CARDINAL8                 SYSTEM\n+CARDINAL16                SYSTEM\n+CARDINAL32                SYSTEM\n+CARDINAL64                SYSTEM\n+BITSET8                   SYSTEM\n+BITSET16                  SYSTEM\n+BITSET32                  SYSTEM\n+WORD16                    SYSTEM\n+WORD32                    SYSTEM\n+WORD64                    SYSTEM\n+REAL32                    SYSTEM\n+REAL64                    SYSTEM\n+REAL96                    SYSTEM\n+REAL128                   SYSTEM\n+COMPLEX32                 SYSTEM\n+COMPLEX64                 SYSTEM\n+COMPLEX96                 SYSTEM\n+COMPLEX128                SYSTEM\n+@end example\n+\n+The Modula-2 language categorizes compatibility between entities of\n+possibly differing types into three sub components: expressions,\n+assignments, and parameters.  Parameter compatibility is further\n+divided into two sections for pass by reference and pass by value\n+compatibility.\n+\n+For more detail on the Modula-2 type compatibility see the Modula-2\n+ISO standard BS ISO/IEC 10514-1:1996 page 121-125.  For detail on the\n+PIM type compatibility see Programming in Modula-2 Edition 4 page 29,\n+(Elementary Data Types).\n+\n+@subsection Expression compatibility\n+\n+Modula-2 restricts the types of expressions to the same type.\n+Expression compatibility is a symmetric relation.\n+\n+For example two sub expressions of @code{INTEGER} and @code{CARDINAL}\n+are not expression compatible\n+(@uref{http://freepages.modula2.org/report4/modula-2.html} and ISO\n+Modula-2).\n+\n+In GNU Modula-2 this rule is also extended across all fixed sized data\n+types (imported from SYSTEM).\n+\n+@subsection Assignment compatibility\n+\n+This section discusses the assignment issues surrounding assignment\n+compatibility of elementary types (@code{INTEGER}, @code{CARDINAL},\n+@code{REAL} and @code{CHAR} for example).  The information here is\n+found in more detail in the Modula-2 ISO standard BS ISO/IEC\n+10514-1:1996 page 122.\n+\n+Assignment compatibility exists between the same sized elementary\n+types.\n+\n+Same type family of different sizes are\n+also compatible as long as the @code{MAX(}type@code{)} and\n+@code{MIN(}type@code{)} is known.  So for example this includes the\n+@code{INTEGER} family, @code{CARDINAL} family and the @code{REAL}\n+family.\n+\n+The reason for this is that when the assignment is performed\n+the compiler will check to see that the expression (on the right of\n+the @code{:=}) lies within the range of the designator type (on the\n+left hand side of the @code{:=}).  Thus these ordinal types can be\n+assignment compatible.  However it does mean that @code{WORD32} is not\n+compatible with @code{WORD16} as @code{WORD32} does not have a minimum\n+or maximum value and therefore cannot be checked.  The compiler does\n+not know which of the two bytes from @code{WORD32} should be copied\n+into @code{WORD16} and which two should be ignored.  Currently the\n+types @code{BITSET8}, @code{BITSET16} and @code{BITSET32} are\n+assignment incompatible.  However this restriction maybe lifted when\n+further run time checking is achieved.\n+\n+Modula-2 does allow @code{INTEGER} to be assignment compatible with\n+@code{WORD} as they are the same size.  Likewise GNU Modula-2 allows\n+@code{INTEGER16} to be compatible with @code{WORD16} and the same for\n+the other fixed sized types and their sized equivalent in either\n+@code{WORD}n, @code{BYTE} or @code{LOC} types.  However it prohibits\n+assignment between @code{WORD} and @code{WORD32} even though on many\n+systems these sizes will be the same.  The reasoning behind this rule\n+is that the extended fixed sized types are meant to be used by\n+applications requiring fixed sized data types and it is more portable\n+to forbid the blurring of the boundaries between fixed sized and\n+machine dependent sized types.\n+\n+Intermediate code run time checking is always generated by the front\n+end.  However this intermediate code is only translated into actual\n+code if the appropriate command line switches are specified.  This\n+allows the compiler to perform limited range checking at compile time.\n+In the future it will allow the extensive GCC optimizations to\n+propagate constant values through to the range checks which if they\n+are found to exceed the type range will result in a compile time\n+error message.\n+\n+@subsection Parameter compatibility\n+\n+Parameter compatibility is divided into two areas, pass by value and\n+pass by reference (@code{VAR}).  In the case of pass by value the\n+rules are exactly the same as assignment.  However in the second case,\n+pass by reference, the actual parameter and formal parameter must be\n+the same size and family.  Furthermore @code{INTEGER} and\n+@code{CARDINAL}s are not treated as compatible in the pass by\n+reference case.\n+\n+The types @code{BYTE}, @code{LOC}, @code{WORD} and @code{WORD}n\n+derivatives are assignment and parameter compatible with any data type\n+of the same size.\n+\n+@node Unbounded by reference, Building a shared library, Type compatibility, Using\n+@section Unbounded by reference\n+\n+This section documents a GNU Modula-2 compiler switch which implements\n+a language optimization surrounding the implementation of unbounded\n+arrays.  In GNU Modula-2 the unbounded array is implemented by\n+utilizing an internal structure @code{struct @{dataType *address,\n+unsigned int high@}}.  So given the Modula-2 procedure declaration:\n+\n+@example\n+PROCEDURE foo (VAR a: ARRAY OF dataType) ;\n+BEGIN\n+   IF a[2]= (* etc *)\n+END foo ;\n+@end example\n+\n+it is translated into GCC @code{tree}s, which can be represented\n+in their C form thus:\n+\n+@example\n+void foo (struct @{dataType *address, unsigned int high@} a)\n+@{\n+   if (a.address[2] == /* etc */\n+@}\n+@end example\n+\n+Whereas if the procedure @code{foo} was declared as:\n+\n+@example\n+PROCEDURE foo (a: ARRAY OF dataType) ;\n+BEGIN\n+   IF a[2]= (* etc *)\n+END foo ;\n+@end example\n+\n+then it is implemented by being translated into the following\n+GCC @code{tree}s, which can be represented in their C form thus:\n+\n+@example\n+void foo (struct @{dataType *address, unsigned int high@} a)\n+@{\n+   dataType *copyContents = (dataType *)alloca (a.high+1);\n+   memcpy(copyContents, a.address, a.high+1);\n+   a.address = copyContents;\n+\n+   if (a.address[2] == /* etc */\n+@}\n+@end example\n+\n+This implementation works, but it makes a copy of each non VAR\n+unbounded array when a procedure is entered.  If the unbounded array\n+is not changed during procedure @code{foo} then this implementation\n+will be very inefficient.  In effect Modula-2 lacks the @code{REF}\n+keyword of Ada.  Consequently the programmer maybe tempted to\n+sacrifice semantic clarity for greater efficiency by declaring the\n+parameter using the @code{VAR} keyword in place of @code{REF}.\n+\n+The @code{-funbounded-by-reference} switch instructs the compiler to\n+check and see if the programmer is modifying the content of any\n+unbounded array.  If it is modified then a copy will be made upon\n+entry into the procedure.  Conversely if the content is only read and\n+never modified then this non @code{VAR} unbounded array is a candidate\n+for being passed by reference.  It is only a candidate as it is still\n+possible that passing this parameter by reference could alter the\n+meaning of the source code.  For example consider the following case:\n+\n+@example\n+PROCEDURE StrConCat (VAR a: ARRAY OF CHAR; b, c: ARRAY OF CHAR) ;\n+BEGIN\n+   (* code which performs string a := b + c *)\n+END StrConCat ;\n+\n+PROCEDURE foo ;\n+VAR\n+   a: ARRAY [0..3] OF CHAR ;\n+BEGIN\n+   a := 'q' ;\n+   StrConCat(a, a, a)\n+END foo ;\n+@end example\n+\n+In the code above we see that the same parameter, @code{a}, is being\n+passed three times to @code{StrConCat}.  Clearly even though parameters\n+@code{b} and @code{c} are never modified it would be incorrect to\n+implement them as pass by reference.  Therefore the compiler checks to\n+see if any non @code{VAR} parameter is type compatible with any\n+@code{VAR} parameter and if so it generates run time procedure entry\n+checks to determine whether the contents of parameters @code{b} or\n+@code{c} matches the contents of @code{a}.  If a match is detected\n+then a copy is made and the @code{address} in the unbounded\n+@code{struct}ure is modified.\n+\n+The compiler will check the address range of each candidate against\n+the address range of any @code{VAR} parameter, providing they are type\n+compatible.  For example consider:\n+\n+@example\n+PROCEDURE foo (a: ARRAY OF BYTE; VAR f: REAL) ;\n+BEGIN\n+   f := 3.14 ;\n+   IF a[0]=BYTE(0)\n+   THEN\n+      (* etc *)\n+   END\n+END foo ;\n+\n+PROCEDURE bar ;\n+BEGIN\n+   r := 2.0 ;\n+   foo(r, r)\n+END bar ;\n+@end example\n+\n+Here we see that although parameter, @code{a}, is a candidate for the\n+passing by reference, it would be incorrect to use this\n+transformation.  Thus the compiler detects that parameters, @code{a}\n+and @code{f} are type compatible and will produce run time checking\n+code to test whether the address range of their respective contents\n+intersect.\n+\n+@node Linking, Building a shared library, Unbounded by reference, Using\n+\n+This section describes the linking related options.  There are three\n+linking strategies available which are dynamic scaffold, static\n+scaffold and user defined.  The dynamic scaffold is enabled by default\n+and each module will register itself to the run time @samp{M2RTS} via\n+a constructor.  The static scaffold mechanism will invoke each modules\n+@samp{_init} and @samp{_finish} function in turn via a sequence of\n+calls from within @samp{main}.  Lastly the user defined strategy\n+can be implemented by turning off the dynamic and static options via\n+@samp{-fno-scaffold-dynamic} and @samp{-fno-scaffold-static}.\n+\n+In the simple test below:\n+\n+@example\n+$ gm2 hello.mod\n+@end example\n+\n+the driver will add the options @samp{-fscaffold-dynamic} and\n+@samp{-fgen-module-list=-} which generate a list of application\n+modules and also creates the @samp{main} function with calls to\n+@samp{M2RTS}.  It can be useful to add the option @samp{-fsources}\n+which displays the source files as they are parsed and summarizes\n+whether the source file is required for compilation or linking.\n+\n+If you wish to split the above command line into a compile and link\n+then you could use these steps:\n+\n+@example\n+$ gm2 -c -fscaffold-main hello.mod\n+$ gm2 hello.o\n+@end example\n+\n+The @samp{-fscaffold-main} informs the compiler to generate the\n+@samp{main} function and scaffold.  You can enable the environment\n+variable @samp{GCC_M2LINK_RTFLAG} to trace the construction and\n+destruction of the application.  The values for\n+@samp{GCC_M2LINK_RTFLAG} are shown in the table below:\n+\n+@example\n+value   | meaning\n+=================\n+all     | turn on all flags below\n+module  | trace modules as they register themselves\n+pre     | generate module list prior to dependency resolution\n+dep     | trace module dependency resolution\n+post    | generate module list after dependency resolution\n+force   | generate a module list after dependency and forced\n+        | ordering is complete\n+@end example\n+\n+The values can be combined using a comma separated list.\n+\n+One of the advantages of the dynamic scaffold is that the driver\n+behaves in a similar way to the other front end drivers.\n+For example consider a small project consisting of 4 definition\n+implementation modules (@samp{a.def}, @samp{a.mod}, @samp{b.def},\n+@samp{b.mod}, @samp{c.def}, @samp{c.mod}, @samp{d.def}, @samp{d.mod})\n+and a program module @samp{program.mod}.\n+\n+To link this project we could:\n+\n+@example\n+$ gm2 -g -c a.mod\n+$ gm2 -g -c b.mod\n+$ gm2 -g -c c.mod\n+$ gm2 -g -c d.mod\n+$ gm2 -g program.mod a.o b.o c.o d.o\n+@end example\n+\n+The module initialization sequence is defined by the ISO standard to\n+follow the import graph traversal.  The initialization order is the\n+order in which the corresponding separate modules finish the\n+processing of their import lists.\n+\n+However, if required, you can override this using\n+@samp{-fruntime-modules=a,b,c,d} for example which forces the\n+initialization sequence to @samp{a}, @samp{b}, @samp{c} and @samp{d}.\n+\n+@node Building a shared library, Interface for Python, Unbounded by reference, Using\n+@section Building a shared library\n+\n+This section describes building a tiny shared library implemented in\n+Modula-2 and built with @file{libtool}.  Suppose a project consists of\n+two definition modules and two implementation modules and a program\n+module @file{a.def}, @file{a.mod}, @file{b.def}, @file{b.mod} and\n+@file{c.mod}.  The first step is to compile the modules using position\n+independent code.  This can be achieved by the following three\n+commands:\n+\n+@example\n+libtool --tag=CC --mode=compile gm2 -g -c a.mod -o a.lo\n+libtool --tag=CC --mode=compile gm2 -g -c b.mod -o b.lo\n+libtool --tag=CC --mode=compile gm2 -g -c c.mod -o c.lo\n+@end example\n+\n+The second step is to generate the shared library initialization and\n+finalization routines.  We can do this by asking gm2 to generate a\n+list of dependent modules and then use this to generate the scaffold.\n+We also must compile the scaffold.\n+\n+@example\n+gm2 -c -g -fmakelist c.mod\n+gm2 -c -g -fmakeinit -fshared c.mod\n+libtool --tag=CC --mode=compile g++ -g -c c_m2.cpp -o c_m2.lo\n+@end example\n+\n+The third step is to link all these @file{.lo} files.\n+\n+@example\n+libtool --mode=link gcc -g c_m2.lo a.lo b.lo c.lo \\\n+        -L$(prefix)/lib64 \\\n+        -rpath `pwd` -lgm2 -lstdc++ -lm -o libabc.la\n+@end example\n+\n+At this point the shared library @file{libabc.so} will have been\n+created inside the directory @file{.libs}.\n+\n+@node Interface for Python, Producing a Python module, Building a shared library, Using\n+@section How to produce swig interface files\n+\n+This section describes how Modula-2 implementation modules can be\n+called from Python (and other scripting languages such as TCL and\n+Perl).  GNU Modula-2 can be instructed to create a swig interface when\n+it is compiling an implementation module.  Swig then uses the\n+interface file to generate all the necessary wrapping to that the\n+desired scripting language may access the implementation module.\n+\n+Here is an example of how you might call upon the services of the\n+Modula-2 library module @code{NumberIO} from Python3.\n+\n+The following commands can be used to generate the Python3 module:\n+\n+@example\n+export src=@samp{directory to the sources}\n+export prefix=@samp{directory to where the compiler is installed}\n+gm2 -I$@{src@} -c -g -fswig $@{src@}/../../../gm2-libs/NumberIO.mod\n+gm2 -I$@{src@} -c -g -fmakelist $@{src@}/../../../gm2-libs/NumberIO.mod\n+\n+gm2 -I$@{src@} -c -g -fmakeinit -fshared \\\n+   $@{src@}/../../../gm2-libs/NumberIO.mod\n+\n+swig -c++ -python3 NumberIO.i\n+\n+libtool --mode=compile g++ -g -c -I$@{src@} NumberIO_m2.cpp \\\n+  -o NumberIO_m2.lo\n+\n+libtool --tag=CC --mode=compile gm2 -g -c \\\n+  -I$@{src@}../../../gm2-libs \\\n+  $@{src@}/../../../gm2-libs/NumberIO.mod -o NumberIO.lo\n+\n+libtool --tag=CC --mode=compile g++ -g -c NumberIO_wrap.cxx \\\n+  -I/usr/include/python3 -o NumberIO_wrap.lo\n+\n+libtool --mode=link gcc -g NumberIO_m2.lo NumberIO_wrap.lo \\\n+   -L$@{prefix@}/lib64 \\\n+   -rpath `pwd` -lgm2 -lstdc++ -lm -o libNumberIO.la\n+\n+cp .libs/libNumberIO.so _NumberIO.so\n+@end example\n+\n+The first four commands, generate the swig interface file\n+@file{NumberIO.i} and python wrap files @file{NumberIO_wrap.cxx} and\n+@file{NumberIO.py}.  The next three @file{libtool} commnads compile\n+the C++ and Modula-2 source code into @file{.lo} objects.  The last\n+@file{libtool} command links all the @file{.lo} files into a\n+@file{.la} file and includes all shared library dependencies.\n+\n+Now it is possible to run the following Python script\n+(called @file{testnum.py}):\n+\n+@example\n+import NumberIO\n+\n+print (\"1234 x 2 =\", NumberIO.NumberIO_StrToInt(\"1234\")*2)\n+@end example\n+\n+like this:\n+\n+@example\n+$ python3 testnum.py\n+1234 x 2 = 2468\n+@end example\n+\n+@xref{Producing a Python module, , ,gm2} for another example which\n+uses the @code{UNQUALIFIED} keyword to reduce the module name clutter\n+from the viewport of Python3.\n+\n+@subsection Limitations of automatic generated of Swig files\n+\n+This section discusses the limitations of automatically generating\n+swig files.  From the previous example we see that the module\n+@code{NumberIO} had a swig interface file @file{NumberIO.i}\n+automatically generated by the compiler.  If we consider three of the\n+procedure definitions in @file{NumberIO.def} we can see the\n+success and limitations of the automatic interface generation.\n+\n+@example\n+PROCEDURE StrToHex (a: ARRAY OF CHAR; VAR x: CARDINAL) ;\n+PROCEDURE StrToInt (a: ARRAY OF CHAR; VAR x: INTEGER) ;\n+PROCEDURE ReadInt (VAR x: CARDINAL) ;\n+@end example\n+\n+Below are the swig interface prototypes:\n+\n+@example\n+extern void NumberIO_StrToHex (char *_m2_address_a,\n+                               int _m2_high_a, unsigned int *OUTPUT);\n+/*  parameters: x is known to be an OUTPUT */\n+extern void NumberIO_StrToInt (char *_m2_address_a,\n+                               int _m2_high_a, int *OUTPUT);\n+/*  parameters: x is guessed to be an OUTPUT */\n+extern void NumberIO_ReadInt (int *x);\n+/*  parameters: x is unknown */\n+@end example\n+\n+In the case of @code{StrToHex} it can be seen that the compiler\n+detects that the last parameter is an output.  It explicitly tells\n+swig this by using the parameter name @code{OUTPUT} and in the\n+following comment it informs the user that it knows this to be an\n+output parameter.  In the second procedure @code{StrToInt} it marks\n+the final parameter as an output, but it tells the user that this is\n+only a guess.  Finally in @code{ReadInt} it informs the user that\n+it does not know whether the parameter, @code{x}, is an output, input\n+or an inout parameter.\n+\n+The compiler decides whether to mark a parameter as either:\n+@code{INPUT}, @code{OUTPUT} or @code{INOUT} if it is read before\n+written or visa versa in the first basic block.  At this point\n+it will write output that the parameter is known.  If it is not\n+read or written in the first basic block then subsequent basic blocks\n+are searched and the result is commented as a guess.  Finally if\n+no read or write occurs then the parameter is commented as unknown.\n+However, clearly it is possible to fool this mechanism.  Nevertheless\n+automatic generation of implementation module into swig interface files\n+was thought sufficiently useful despite these limitations.\n+\n+In conclusion it would be wise to check all parameters in any\n+automatically generated swig interface file.  Furthermore you can\n+force the automatic mechanism to generate correct interface files by\n+reading or writing to the @code{VAR} parameter in the first basic\n+block of a procedure.\n+\n+@node Producing a Python module, Interface to C, Interface for Python, Using\n+@section How to produce a Python module\n+\n+This section describes how it is possible to produce a Python module\n+from Modula-2 code.  There are a number of advantages to this\n+approach, it ensures your code reaches a wider audience, maybe it is\n+easier to initialize your application in Python.\n+\n+The example application here is a pedagogical two dimensional gravity\n+next event simulation.  The Python module needs to have a clear API\n+which should be placed in a single definition module.  Furthermore the\n+API should only use fundamental pervasive data types and strings.\n+Below the API is contained in the file @file{twoDsim.def}:\n+\n+@example\n+DEFINITION MODULE twoDsim ;\n+\n+EXPORT UNQUALIFIED gravity, box, poly3, poly5, poly6, mass,\n+                   fix, circle, pivot, velocity, accel, fps,\n+                   replayRate, simulateFor ;\n+(*\n+   gravity - turn on gravity at: g m^2\n+*)\n+\n+PROCEDURE gravity (g: REAL) ;\n+\n+\n+(*\n+   box - place a box in the world at (x0,y0),(x0+i,y0+j)\n+*)\n+\n+PROCEDURE box (x0, y0, i, j: REAL) : CARDINAL ;\n+\n+\n+(*\n+   poly3 - place a triangle in the world at:\n+           (x0,y0),(x1,y1),(x2,y2)\n+*)\n+\n+PROCEDURE poly3 (x0, y0, x1, y1, x2, y2: REAL) : CARDINAL ;\n+\n+\n+(*\n+   poly5 - place a pentagon in the world at:\n+           (x0,y0),(x1,y1),(x2,y2),(x3,y3),(x4,y4)\n+*)\n+\n+PROCEDURE poly5 (x0, y0, x1, y1,\n+                 x2, y2, x3, y3, x4, y4: REAL) : CARDINAL ;\n+\n+\n+(*\n+   poly6 - place a hexagon in the world at:\n+           (x0,y0),(x1,y1),(x2,y2),(x3,y3),(x4,y4),(x5,y5)\n+*)\n+\n+PROCEDURE poly6 (x0, y0, x1, y1,\n+                 x2, y2, x3, y3,\n+                 x4, y4, x5, y5: REAL) : CARDINAL ;\n+\n+\n+(*\n+   mass - specify the mass of an object and return the, id.\n+*)\n+\n+PROCEDURE mass (id: CARDINAL; m: REAL) : CARDINAL ;\n+\n+\n+(*\n+   fix - fix the object to the world.\n+*)\n+\n+PROCEDURE fix (id: CARDINAL) : CARDINAL ;\n+\n+\n+(*\n+   circle - adds a circle to the world.  Center\n+            defined by: x0, y0 radius, r.\n+*)\n+\n+PROCEDURE circle (x0, y0, r: REAL) : CARDINAL ;\n+\n+\n+(*\n+   velocity - give an object, id, a velocity, vx, vy.\n+*)\n+\n+PROCEDURE velocity (id: CARDINAL; vx, vy: REAL) : CARDINAL ;\n+\n+\n+(*\n+   accel - give an object, id, an acceleration, ax, ay.\n+*)\n+\n+PROCEDURE accel (id: CARDINAL; ax, ay: REAL) : CARDINAL ;\n+\n+\n+(*\n+   fps - set frames per second.\n+*)\n+\n+PROCEDURE fps (f: REAL) ;\n+\n+\n+(*\n+   replayRate - set frames per second during replay.\n+*)\n+\n+PROCEDURE replayRate (f: REAL) ;\n+\n+\n+(*\n+   simulateFor - render for, t, seconds.\n+*)\n+\n+PROCEDURE simulateFor (t: REAL) ;\n+\n+\n+END twoDsim.\n+@end example\n+\n+The keyword @code{UNQUALIFIED} can be used to ensure that the\n+compiler will provide externally accessible functions\n+@code{gravity}, @code{box}, @code{poly3}, @code{poly5}, @code{poly6},\n+@code{mass}, @code{fix}, @code{circle}, @code{pivot}, @code{velocity},\n+@code{accel}, @code{fps}, @code{replayRate}, @code{simulateFor}\n+rather than name mangled alternatives.\n+Hence in our Python3 application we could write:\n+\n+@example\n+#!/usr/bin/env python3\n+\n+from twoDsim import *\n+\n+b = box (0.0, 0.0, 1.0, 1.0)\n+b = fix (b)\n+c1 = circle (0.7, 0.7, 0.05)\n+c1 = mass (c1, 0.01)\n+c2 = circle (0.7, 0.1, 0.05)\n+c2 = mass (c2, 0.01)\n+c2 = fix (c2)\n+gravity (-9.81)\n+fps (24.0*4.0)\n+replayRate (24.0)\n+print (\"creating frames\")\n+try:\n+    simulateFor (1.0)\n+    print (\"all done\")\n+except:\n+    print (\"exception raised\")\n+@end example\n+\n+which accesses the various functions defined and implemented by the\n+module @code{twoDsim}.  The Modula-2 source code is compiled via:\n+\n+@example\n+$ gm2 -g -fiso -c -fswig twoDsim.mod\n+$ gm2 -g -fiso -c -fmakelist twoDsim.mod\n+$ gm2 -g -fiso -c -fmakeinit twoDsim.mod\n+@end example\n+\n+The first command both compiles the source file creating\n+@file{twoDsim.o} and produces a swig interface file @file{swig.i}.  We\n+now use @code{swig} and @code{g++} to produce and compile the\n+interface wrappers:\n+\n+@example\n+$ libtool --mode=compile g++ -g -c twoDsim_m2.cpp -o twoDsim_m2.lo\n+$ swig -c++ -python3 twoDsim.i\n+$ libtool --mode=compile g++ -c -fPIC twoDsim_wrap.cxx \\\n+   -I/usr/include/python3 -o twoDsim_wrap.lo\n+$ libtool --mode=compile gm2 -g -fPIC -fiso -c deviceGnuPic.mod\n+$ libtool --mode=compile gm2 -g -fPIC -fiso -c roots.mod\n+$ libtool --mode=compile gm2 -g -fPIC -fiso -c -fswig \\\n+   twoDsim.mod -o twoDsim.lo\n+@end example\n+\n+Finally the application is linked into a shared library:\n+\n+@example\n+$ libtool --mode=link gcc -g twoDsim_m2.lo twoDsim_wrap.lo \\\n+  roots.lo deviceGnuPic.lo \\\n+   -L$@{prefix@}/lib64 \\\n+   -rpath `pwd` -lgm2 -lstdc++ -lm -o libtwoDsim.la\n+cp .libs/libtwoDsim.so _twoDsim.so\n+@end example\n+\n+The library name must start with @code{_} to comply with the Python3\n+module naming scheme.\n+\n+@node Interface to C, Assembly language, Producing a Python module, Using\n+@section Interfacing GNU Modula-2 to C\n+\n+The GNU Modula-2 compiler tries to use the C calling convention\n+wherever possible however some parameters have no C equivalent and\n+thus a language specific method is used.  For example unbounded arrays\n+are passed as a @code{struct @{void *address, unsigned int high@}} and\n+the contents of these arrays are copied by callee functions when they\n+are declared as non @code{VAR} parameters.  The @code{VAR} equivalent\n+unbounded array parameters need no copy, but still use the\n+@code{struct} representation.\n+\n+The recommended method of interfacing GNU Modula-2 to C is by telling\n+the definition module that the implementation is in the C language.\n+This is achieved by using the tokens @code{DEFINITION MODULE FOR \"C\"}.\n+Here is an example @file{libprintf.def}.\n+\n+@example\n+DEFINITION MODULE FOR \"C\" libprintf ;\n+\n+EXPORT UNQUALIFIED printf ;\n+\n+PROCEDURE printf (a: ARRAY OF CHAR; ...) : [ INTEGER ] ;\n+\n+END libprintf.\n+@end example\n+\n+the @code{UNQUALIFIED} keyword in the definition module informs\n+GNU Modula-2 not to prefix the module name to exported references\n+in the object file.\n+\n+The @code{printf} declaration states that the first parameter\n+semantically matches @code{ARRAY OF CHAR} but since the module is for\n+the C language it will be mapped onto @code{char *}.  The token\n+@code{...} indicates a variable number of arguments (varargs) and all\n+parameters passed here are mapped onto their C equivalents.  Arrays and\n+constant strings are passed as pointers.  Lastly @code{[ INTEGER ]}\n+states that the caller can ignore the function return result if desired.\n+\n+The hello world program can be rewritten as:\n+\n+@example\n+MODULE hello ;\n+\n+FROM libprintf IMPORT printf ;\n+\n+BEGIN\n+   printf (\"hello world\\n\")\n+END hello.\n+@end example\n+\n+and it can be compiled by:\n+\n+@samp{gm2 -g hello.mod -lc}\n+\n+In reality the @samp{-lc} is redundant as libc is always included in the\n+linking process.  It is shown here to emphasize that the C library or\n+object file containing @code{printf} must be present.  The search path\n+for modules can be changed by using @samp{-I}.\n+\n+If a procedure function is declared using varargs then some parameter\n+values are converted.  The table below summarizes the default conversions\n+and default types used.\n+\n+@example\n+Actual Parameter       |  Default conversion  |   Type of actual\n+                       |                      |   value passed\n+===============================================================\n+123                    |  none                |   long long int\n+\"hello world\"          |  none                |   const char *\n+a: ARRAY OF CHAR       |  ADR (a)             |   char *\n+a: ARRAY [0..5] OF CHAR|  ADR (a)             |   char *\n+3.14                   |  none                |   long double\n+@end example\n+\n+If you wish to pass @code{int} values then you should explicitly\n+convert the constants using one of the conversion mechanisms.\n+For example:  @code{INTEGER(10)} or @code{VAL(INTEGER, 10)} or\n+@code{CAST(INTEGER, 10)}.\n+\n+@node Assembly language, Alignment, Interface to C, Using\n+@section Interface to assembly language\n+\n+The interface for GNU Modula-2 to assembly language is almost\n+identical to GNU C.  The only alterations are that the keywords\n+@code{asm} and @code{volatile} are in capitals, following the Modula-2\n+convention.\n+\n+A simple, but highly non optimal, example is given below.  Here we want\n+to add the two @code{CARDINAL}s @code{foo} and @code{bar} together and\n+return the result.  The target processor is assumed to be executing\n+the x86_64 instruction set.\n+\n+@example\n+PROCEDURE Example (foo, bar: CARDINAL) : CARDINAL ;\n+VAR\n+   myout: CARDINAL ;\n+BEGIN\n+   ASM VOLATILE (\"movq %1,%%rax; addq %2,%%rax; movq %%rax,%0\"\n+      : \"=rm\" (myout)            (* outputs *)\n+      : \"rm\" (foo), \"rm\" (bar)   (* inputs  *)\n+      : \"rax\") ;                 (* we trash *)\n+   RETURN( myout )\n+END Example ;\n+@end example\n+\n+For a full description of this interface we refer the reader to the GNU C manual.\n+\n+@xref{Extended Asm, ,Extensions to the C Language Family,gcc}.\n+\n+The same example can be written using the newer extensions of naming\n+the operands rather than using numbered arguments.\n+\n+@example\n+PROCEDURE Example (foo, bar: CARDINAL) : CARDINAL ;\n+VAR\n+   myout: CARDINAL ;\n+BEGIN\n+   ASM VOLATILE (\n+    \"movq %[left],%%rax; addq %[right],%%rax; movq %%rax,%[output]\"\n+      : [output] \"=rm\" (myout)                  (* outputs *)\n+      : [left] \"rm\" (foo), [right] \"rm\" (bar)   (* inputs  *)\n+      : \"rax\") ;                                (* we trash *)\n+   RETURN( myout )\n+END Example ;\n+@end example\n+\n+Both examples generate exactly the same code.  It is worth noting that\n+the specifier ``rm'' indicates that the operand can be either a\n+register or memory.  Of course you must choose an instruction which\n+can take either, but this allows the compiler to take make more\n+efficient choices depending upon the optimization level given to the\n+compiler.\n+\n+@node Alignment, Packed, Assembly language, Using\n+@section Data type alignment\n+\n+GNU Modula-2 allows you to specify alignment for types and variables.\n+The syntax for alignment is to use the ISO pragma directives @code{<*}\n+@code{bytealignment (} expression @code{)} and @code{*>}.  These directives\n+can be used after type and variable declarations.\n+\n+The ebnf of the alignment production is:\n+\n+@example\n+Alignment := [ ByteAlignment ] =:\n+ByteAlignment := '<*' AttributeExpression '*>' =:\n+AlignmentExpression := \"(\" ConstExpression \")\" =:\n+@end example\n+\n+The @code{Alignment} ebnf statement may be used during construction of\n+types, records, record fields, arrays, pointers and variables.  Below\n+is an example of aligning a type so that the variable @code{bar} is\n+aligned on a 1024 address.\n+\n+@example\n+MODULE align ;\n+\n+TYPE\n+   foo = INTEGER <* bytealignment(1024) *> ;\n+\n+VAR\n+   z  : INTEGER ;\n+   bar: foo ;\n+BEGIN\n+END align.\n+@end example\n+\n+The next example aligns a variable on a 1024 byte boundary.\n+\n+@example\n+MODULE align2 ;\n+\n+VAR\n+   x  : CHAR ;\n+   z  : ARRAY [0..255] OF INTEGER <* bytealignment(1024) *> ;\n+BEGIN\n+END align2.\n+@end example\n+\n+Here the example aligns a pointer on a 1024 byte boundary.\n+\n+@example\n+MODULE align4 ;\n+\n+FROM SYSTEM IMPORT ADR ;\n+FROM libc IMPORT exit ;\n+\n+VAR\n+   x  : CHAR ;\n+   z  : POINTER TO INTEGER <* bytealignment(1024) *> ;\n+BEGIN\n+   IF ADR(z) MOD 1024=0\n+   THEN\n+      exit(0)\n+   ELSE\n+      exit(1)\n+   END\n+END align4.\n+@end example\n+\n+In example @code{align5} record field @code{y} is aligned on a 1024\n+byte boundary.\n+\n+@example\n+MODULE align5 ;\n+\n+FROM SYSTEM IMPORT ADR ;\n+FROM libc IMPORT exit ;\n+\n+TYPE\n+   rec = RECORD\n+            x: CHAR ;\n+            y: CHAR <* bytealignment(1024) *> ;\n+         END ;\n+VAR\n+   r: rec ;\n+BEGIN\n+   IF ADR(r.y) MOD 1024=0\n+   THEN\n+      exit(0)\n+   ELSE\n+      exit(1)\n+   END\n+END align5.\n+@end example\n+\n+In the example below module @code{align6} declares @code{foo} as an\n+array of 256 @code{INTEGER}s.  The array @code{foo} is aligned on a\n+1024 byte boundary.\n+\n+@example\n+MODULE align6 ;\n+\n+FROM SYSTEM IMPORT ADR ;\n+FROM libc IMPORT exit ;\n+\n+TYPE\n+   foo = ARRAY [0..255] OF INTEGER <* bytealignment(1024) *> ;\n+\n+VAR\n+   x  : CHAR ;\n+   z  : foo ;\n+BEGIN\n+   IF ADR(z) MOD 1024=0\n+   THEN\n+      exit(0)\n+   ELSE\n+      exit(1)\n+   END\n+END align6.\n+@end example\n+\n+@node Packed, Built-ins, Alignment, Using\n+@section Packing data types\n+\n+The pragma @code{<* bytealignment(0) *>} can be used to specify that\n+the fields within a @code{RECORD} are to be packed.  Currently this\n+only applies to fields which are declared as subranges, ordinal types\n+and enumerated types.  Here is an example of how two subranges might\n+be packed into a byte.\n+\n+@example\n+TYPE\n+   bits3c =  [0..7] ;\n+   bits3i = [-4..3] ;\n+\n+   byte = RECORD\n+              <* bytealignment(0) *>\n+              x: bits3c ;\n+              <* bitsunused(2) *>\n+              y: bits3i ;\n+          END ;\n+@end example\n+\n+Notice that the user has specified that in between fields @code{x} and\n+@code{y} there are two bits unused.\n+\n+Now the user wishes to create a record with byte numbers zero and one\n+occupied and then an @code{INTEGER32} field which is four byte\n+aligned.  In this case byte numbers two and three will be unused.  The\n+pragma @code{bytealignment} can be issued at the start of the record\n+indicating the default alignment for the whole record and this can be\n+overridden by individual fields if necessary.\n+\n+@example\n+   rec = RECORD\n+            <* bytealignment (1) *> ;\n+            a, b: byte ;\n+            x: INTEGER32 <* bytealignment(4) *> ;\n+         END ;\n+@end example\n+\n+In the following example the user has specified that a record has two\n+fields @code{p} and @code{q} but that there are three bytes unused between\n+these fields.\n+\n+@example\n+   header = RECORD\n+               <* bytealignment(1) *>\n+               p: byte ;\n+               <* bytesunused(3) *>\n+               q: byte ;\n+            END ;\n+@end example\n+\n+The pragma @code{<* bytesunused(x) *>} can only be used if the current\n+field is on a byte boundary.  There is also a @code{SYSTEM} pseudo\n+procedure function @code{TBITSIZE(T)} which returns the minimum number of\n+bits necessary to represent type @code{T}.\n+\n+Another example of packing record bit fields is given below:\n+\n+@example\n+MODULE align21 ;\n+\n+FROM libc IMPORT exit ;\n+\n+TYPE\n+   colour = (red, blue, green, purple, white, black) ;\n+\n+   soc = PACKEDSET OF colour ;\n+\n+   rec = RECORD\n+            <* bytealignment(0) *>\n+            x: soc ;\n+            y: [-1..1] ;\n+         END ;\n+\n+VAR\n+   r: rec ;\n+   v: CARDINAL ;\n+BEGIN\n+   v := SIZE(r) ;\n+   IF SIZE(r)#1\n+   THEN\n+      exit(1)\n+   END ;\n+   r.x := soc@{blue@} ;\n+   IF r.x#soc@{blue@}\n+   THEN\n+      exit(2)\n+   END\n+END align21.\n+@end example\n+\n+Here we see that the total size of this record is one byte and consists\n+of a six bit set type followed by a 2 bit integer subrange.\n+\n+@node Built-ins, The PIM system module, Packed, Using\n+@section Accessing GNU Modula-2 Built-ins\n+\n+This section describes the built-in constants and functions defined in\n+GNU Modula-2.  The following compiler constants can be accessed using\n+the @code{__ATTRIBUTE__} @code{__BUILTIN__} keywords.  These are not\n+part of the Modula-2 language and they may differ depending upon the\n+target architecture but they provide a method whereby common\n+libraries can interface to a different underlying architecture.\n+\n+The built-in constants are: @code{BITS_PER_UNIT}, @code{BITS_PER_WORD},\n+@code{BITS_PER_CHAR} and @code{UNITS_PER_WORD}.  They are integrated into\n+GNU Modula-2 by an extension to the @code{ConstFactor} rule:\n+\n+@example\n+ConstFactor := ConstQualidentOrSet | Number | ConstString |\n+               \"(\" ConstExpression \")\" | \"NOT\" ConstFactor |\n+               ConstAttribute =:\n+\n+ConstAttribute := \"__ATTRIBUTE__\" \"__BUILTIN__\" \"(\" \"(\" Ident \")\" \")\" =:\n+@end example\n+\n+Here is an example taken from the ISO library @code{SYSTEM.def}:\n+\n+@example\n+CONST\n+   BITSPERLOC    = __ATTRIBUTE__ __BUILTIN__ ((BITS_PER_UNIT)) ;\n+   LOCSPERWORD   = __ATTRIBUTE__ __BUILTIN__ ((UNITS_PER_WORD)) ;\n+@end example\n+\n+Built-in functions are transparent to the end user.  All built-in\n+functions are declared in @code{DEFINITION MODULE}s and are imported\n+as and when required.  Built-in functions are declared in definition\n+modules by using the @code{__BUILTIN__} keyword.  Here is a section of\n+the ISO library @code{LongMath.def} which demonstrates this feature.\n+\n+@example\n+PROCEDURE __BUILTIN__ sqrt (x: LONGREAL): LONGREAL;\n+  (* Returns the square root of x *)\n+@end example\n+\n+This indicates that the function @code{sqrt} will be implemented using\n+the gcc built-in maths library.  If gcc cannot utilize the built-in\n+function (for example if the programmer requested the address of\n+@code{sqrt}) then code is generated to call the alternative function\n+implemented in the @code{IMPLEMENTATION} @code{MODULE}.\n+\n+Sometimes a function exported from the @code{DEFINITION} @code{MODULE}\n+will have a different name from the built-in function within gcc.  In\n+such cases the mapping between the GNU Modula-2 function name and the\n+gcc name is expressed using the keywords @code{__ATTRIBUTE__}\n+@code{__BUILTIN__} @code{((Ident))}.  For example the function\n+@code{sqrt} in @code{LongMath.def} maps onto the gcc built-in function\n+@code{sqrtl} and this is expressed as:\n+\n+@example\n+PROCEDURE __ATTRIBUTE__ __BUILTIN__ ((sqrtl)) sqrt\n+                                    (x: LONGREAL) : LONGREAL;\n+  (* Returns the positive square root of x *)\n+@end example\n+\n+The following module @code{Builtins.def} enumerates the list of\n+built-in functions which can be accessed in GNU Modula-2.  It also\n+serves to define the parameter and return value for each function:\n+\n+@include m2/Builtins.texi\n+\n+Although this module exists and will result in the generation of\n+in-line code if optimization flags are passed to GNU Modula-2, users\n+are advised to utilize the same functions from more generic libraries.\n+The built-in mechanism will be applied to these generic\n+libraries where appropriate.  Note for the mathematical routines to\n+be in-lined you need to specify the @samp{-ffast-math -O} options.\n+\n+@node The PIM system module, The ISO system module, Built-ins, Using\n+@section The PIM system module\n+\n+@include m2/SYSTEM-pim.texi\n+\n+The different dialects of Modula-2 PIM-[234] and ISO Modula-2 declare\n+the function @code{SIZE} in different places.  PIM-[34] and ISO\n+Modula-2 declare @code{SIZE} as a pervasive function (declared in the\n+base module).  PIM-2 defined @code{SIZE} in the @code{SYSTEM} module\n+(as shown above).\n+\n+GNU Modula-2 allows users to specify the dialect of Modula-2 by using\n+the @code{-fiso} and @code{-fpim2} command line switches.\n+\n+The data types @code{CSIZE_T} and @code{CSSIZE_T} are also exported from\n+the @code{SYSTEM} module.  The type @code{CSIZE_T} is unsigned and is\n+mapped onto the target C data type @code{size_t} whereas the type\n+@code{CSSIZE_T} is mapped onto the signed C data type @code{ssize_t}.\n+\n+It is anticipated that these should only be used to provide cross\n+platform definition modules for C libraries.\n+\n+There are also a variety of fixed sized @code{INTEGER} and\n+@code{CARDINAL} types.  The variety of the fixed sized types will\n+depend upon the target architecture.\n+\n+@node The ISO system module, , The PIM system module, Using\n+@section The ISO system module\n+\n+@include m2/SYSTEM-iso.texi\n+\n+The data types @code{CSIZE_T} and @code{CSSIZE_T} are also exported from\n+the @code{SYSTEM} module.  The type @code{CSIZE_T} is unsigned and is\n+mapped onto the target C data type @code{size_t} whereas the type\n+@code{CSSIZE_T} is mapped onto the signed C data type @code{ssize_t}.\n+\n+It is anticipated that these should only be used to provide cross\n+platform definition modules for C libraries.\n+\n+There are also a variety of fixed sized @code{INTEGER} and\n+@code{CARDINAL} types.  The variety of the fixed sized types will\n+depend upon the target architecture.\n+\n+@node License, Copying, The ISO system module, Top\n+@section License of GNU Modula-2\n+\n+GNU Modula-2 is free software, the compiler is held under the GPL v3\n+@uref{http://www.gnu.org/licenses/gpl.txt},\n+its libraries (pim, iso and Logitech compatible) are under the\n+GPL v3 with the GCC run time library exception clause.\n+\n+Under Section 7 of GPL version 3, you are granted additional\n+permissions described in the GCC Runtime Library Exception, version\n+3.1, as published by the Free Software Foundation.\n+\n+You should have received a copy of the GNU General Public License and\n+a copy of the GCC Runtime Library Exception along with this program;\n+see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+<http://www.gnu.org/licenses/>.\n+\n+More information on how these licenses work is available\n+@uref{http://www.gnu.org/licenses/licenses.html} on the GNU web site.\n+\n+@c Copying node is inside the gpl_v3.texi\n+@include gpl_v3.texi\n+\n+@node Contributing, Internals, Copying, Top\n+@section Contributing to GNU Modula-2\n+\n+Please do and please read the GNU Emacs info under\n+\n+@example\n+* Standards: (standards).       GNU coding standards.\n+* Intellectual Property::       Keeping Free Software Free\n+* Reading Non-Free Code::       Referring to Proprietary Programs\n+* Contributions::               Accepting Contributions\n+@end example\n+\n+You might consider joining the GM2 Mailing list before you start\n+coding.  The mailing list may be subscribed via a web interface\n+@uref{http://lists.nongnu.org/mailman/listinfo/gm2} or via email\n+@email{gm2-subscribe@@nongnu.org}.\n+\n+Many thanks and enjoy your coding!\n+\n+@node Internals, EBNF, Contributing, Top\n+\n+This section is still being written.\n+@c @include gm2-internals.texi\n+\n+@node EBNF, Libraries, Internals, Top\n+@chapter EBNF of GNU Modula-2\n+\n+This chapter contains the EBNF of GNU Modula-2.  This grammar currently\n+supports both PIM and ISO dialects.  The rules here are automatically\n+extracted from the crammer files in GNU Modula-2 and serve to document\n+the syntax of the extensions described earlier and how they fit in\n+with the base language.\n+\n+Note that the first six productions are built into the lexical analysis\n+phase.\n+\n+@include m2/gm2-ebnf.texi\n+\n+@node Libraries, Indices, EBNF, Top\n+@chapter PIM and ISO library definitions\n+\n+This chapter contains M2F, PIM and ISO libraries.\n+\n+@include m2/gm2-libs.texi\n+\n+@node Indices, , Libraries, Top\n+@section Indices\n+\n+@ifhtml\n+@menu\n+* Contents::    Section and subsections.\n+* Functions::   Function, constants, types, ebnf indices.\n+@end menu\n+\n+@node Contents, Functions, ,\n+@section Section and subsections\n+@printindex cp\n+\n+@node Functions, , Contents,\n+@section Function, constants, types, ebnf indices.\n+@end ifhtml\n+\n+@printindex fn\n+\n+@summarycontents\n+@contents\n+@bye"}, {"sha": "6884a74936b143853d975176681a458e93cd780f", "filename": "gcc/doc/install.texi", "status": "modified", "additions": 47, "deletions": 6, "changes": 53, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fdoc%2Finstall.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fdoc%2Finstall.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finstall.texi?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754", "patch": "@@ -308,6 +308,13 @@ On some targets, @samp{libphobos} isn't enabled by default, but compiles\n and works if @option{--enable-libphobos} is used.  Specifics are\n documented for affected targets.\n \n+@item @anchor{GM2-prerequisite}GM2\n+\n+Python3 is required if you want to build the complete Modula-2\n+documentation including the target @code{SYSTEM} definition module.\n+If Python3 is unavailable Modula-2 documentation will include a target\n+independent version of the SYSTEM modules.\n+\n @item A ``working'' POSIX compatible shell, or GNU bash\n \n Necessary when running @command{configure} because some\n@@ -436,6 +443,34 @@ Necessary to build GCC with zstd compression used for LTO bytecode.\n The library is searched in your default library patch search.\n Alternatively, the @option{--with-zstd} configure option should be used.\n \n+@item Python3 modules\n+\n+The complete list of Python3 modules broken down by GCC subcomponent\n+is shown below:\n+\n+@table @asis\n+@item internal debugging in gdbhooks\n+@code{gdb}, @code{gdb.printing}, @code{gdb.types},\n+@code{os.path}, @code{re}, @code{sys} and @code{tempfile},\n+\n+@item g++ testsuite\n+@code{gcov}, @code{gzip}, @code{json}, @code{os} and @code{pytest}.\n+\n+@item c++ cxx api generation\n+@code{csv}, @code{os}, @code{sys} and @code{time}.\n+\n+@item modula-2 documentation\n+@code{argparse}, @code{os}, @code{pathlib}, @code{shutil} and\n+@code{sys}.\n+\n+@item git developer tools\n+@code{os} and @code{sys}.\n+\n+@item ada documentation\n+@code{latex_elements}, @code{os}, @code{pygments}, @code{re},\n+@code{sys} and @code{time}.\n+@end table\n+\n @end table\n \n @heading Tools/packages necessary for modifying GCC\n@@ -1853,11 +1888,13 @@ grep ^language= */config-lang.in\n @end smallexample\n Currently, you can use any of the following:\n @code{all}, @code{default}, @code{ada}, @code{c}, @code{c++}, @code{d},\n-@code{fortran}, @code{go}, @code{jit}, @code{lto}, @code{objc}, @code{obj-c++}.\n+@code{fortran}, @code{go}, @code{jit}, @code{lto}, @code{m2},\n+@code{objc}, @code{obj-c++}.\n Building the Ada compiler has special requirements, see below.\n If you do not pass this flag, or specify the option @code{default}, then the\n default languages available in the @file{gcc} sub-tree will be configured.\n-Ada, D, Go, Jit, and Objective-C++ are not default languages.  LTO is not a\n+Ada, D, Go, Jit, Objective-C++ and Modula-2 are not default languages.\n+LTO is not a\n default language, but is built by default because @option{--enable-lto} is\n enabled by default.  The other languages are default languages.  If\n @code{all} is specified, then all available languages are built.  An\n@@ -1885,6 +1922,10 @@ be built.  This can be useful for debugging, or for compatibility with\n previous Ada build procedures, when it was required to explicitly\n do a @samp{make -C gcc gnatlib_and_tools}.\n \n+@item --disable-libgm2\n+Specify that the run-time libraries and tools used by Modula-2 should not\n+be built.  This can be useful for debugging.\n+\n @item --disable-libsanitizer\n Specify that the run-time libraries for the various sanitizers should\n not be built.\n@@ -3144,10 +3185,10 @@ on a simulator as described at @uref{https://gcc.gnu.org/simtest-howto.html}.\n In order to run sets of tests selectively, there are targets\n @samp{make check-gcc} and language specific @samp{make check-c},\n @samp{make check-c++}, @samp{make check-d} @samp{make check-fortran},\n-@samp{make check-ada}, @samp{make check-objc}, @samp{make check-obj-c++},\n-@samp{make check-lto}\n-in the @file{gcc} subdirectory of the object directory.  You can also\n-just run @samp{make check} in a subdirectory of the object directory.\n+@samp{make check-ada}, @samp{make check-m2}, @samp{make check-objc},\n+@samp{make check-obj-c++}, @samp{make check-lto} in the @file{gcc}\n+subdirectory of the object directory.  You can also just run\n+@samp{make check} in a subdirectory of the object directory.\n \n \n A more selective way to just run all @command{gcc} execute tests in the"}, {"sha": "f48df64cc2a8a1381444a736b2dcecc2789f7760", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754", "patch": "@@ -15523,7 +15523,8 @@ pointer parameter.\n @item ipa-sra-ptrwrap-growth-factor\n Additional maximum allowed growth of total size of new parameters\n that ipa-sra replaces a pointer to an aggregate with,\n-if it points to a local variable that the caller never writes to.\n+if it points to a local variable that the caller only writes to and\n+passes it as an argument to other functions.\n \n @item ipa-sra-max-replacements\n Maximum pieces of an aggregate that IPA-SRA tracks.  As a"}, {"sha": "562be485ce8fb1171db2ac341f9838ca1325fef3", "filename": "gcc/doc/sourcebuild.texi", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fdoc%2Fsourcebuild.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fdoc%2Fsourcebuild.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fsourcebuild.texi?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754", "patch": "@@ -97,6 +97,9 @@ The GCC runtime library.\n @item libgfortran\n The Fortran runtime library.\n \n+@item libgm2\n+The Modula-2 runtime library.\n+\n @item libgo\n The Go runtime library.  The bulk of this library is mirrored from the\n @uref{https://github.com/@/golang/go, master Go repository}.\n@@ -184,7 +187,8 @@ The @file{gcc} directory contains the following subdirectories:\n @item @var{language}\n Subdirectories for various languages.  Directories containing a file\n @file{config-lang.in} are language subdirectories.  The contents of\n-the subdirectories @file{c} (for C), @file{cp} (for C++),\n+the subdirectories @file{c} (for C), @file{cp} (for C++), @file{m2}\n+(for Modula-2),\n @file{objc} (for Objective-C), @file{objcp} (for Objective-C++),\n and @file{lto} (for LTO) are documented in this\n manual (@pxref{Passes, , Passes and Files of the Compiler});"}, {"sha": "dce3f05fce70551b2dc85580dd26cb6b6c0dd980", "filename": "gcc/dwarf2out.cc", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fdwarf2out.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fdwarf2out.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2out.cc?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754", "patch": "@@ -25221,6 +25221,8 @@ gen_compile_unit_die (const char *filename)\n     }\n   else if (strcmp (language_string, \"GNU F77\") == 0)\n     language = DW_LANG_Fortran77;\n+  else if (strcmp (language_string, \"GNU Modula-2\") == 0)\n+    language = DW_LANG_Modula2;\n   else if (dwarf_version >= 3 || !dwarf_strict)\n     {\n       if (strcmp (language_string, \"GNU Ada\") == 0)"}, {"sha": "ed728eb724396878398e4512d707960e4b5f4188", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754", "patch": "@@ -1,3 +1,16 @@\n+2022-12-14  Julian Brown  <julian@codesourcery.com>\n+\n+\tPR fortran/107214\n+\t* gfortran.h (gfc_symbol): Add data_mark, dev_mark, gen_mark and\n+\treduc_mark bitfields.\n+\t* openmp.cc (resolve_omp_clauses): Use above bitfields to improve\n+\tduplicate clause detection.\n+\n+2022-12-14  Julian Brown  <julian@codesourcery.com>\n+\n+\t* trans-openmp.cc (gfc_add_firstprivate_if_unmapped): New function.\n+\t(gfc_split_omp_clauses): Call above.\n+\n 2022-12-13  Steve Kargl  <kargl@gcc.gnu.org>\n \n \tPR fortran/107423"}, {"sha": "219ef8c76127b4e773ef3c3024a1c2fc378682fe", "filename": "gcc/fortran/gfortran.h", "status": "modified", "additions": 21, "deletions": 9, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Ffortran%2Fgfortran.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Ffortran%2Fgfortran.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fgfortran.h?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754", "patch": "@@ -1871,22 +1871,34 @@ typedef struct gfc_symbol\n \n   gfc_namelist *namelist, *namelist_tail;\n \n+  /* The tlink field is used in the front end to carry the module\n+     declaration of separate module procedures so that the characteristics\n+     can be compared with the corresponding declaration in a submodule. In\n+     translation this field carries a linked list of symbols that require\n+     deferred initialization.  */\n+  struct gfc_symbol *tlink;\n+\n   /* Change management fields.  Symbols that might be modified by the\n      current statement have the mark member nonzero.  Of these symbols,\n      symbols with old_symbol equal to NULL are symbols created within\n      the current statement.  Otherwise, old_symbol points to a copy of\n      the old symbol. gfc_new is used in symbol.cc to flag new symbols.\n      comp_mark is used to indicate variables which have component accesses\n-     in OpenMP/OpenACC directive clauses.  */\n+     in OpenMP/OpenACC directive clauses (cf. c-typeck.cc:c_finish_omp_clauses,\n+     map_field_head).\n+     data_mark is used to check duplicate mappings for OpenMP data-sharing\n+     clauses (see firstprivate_head/lastprivate_head in the above function).\n+     dev_mark is used to check duplicate mappings for OpenMP\n+     is_device_ptr/has_device_addr clauses (see is_on_device_head in above\n+     function).\n+     gen_mark is used to check duplicate mappings for OpenMP\n+     use_device_ptr/use_device_addr/private/shared clauses (see generic_head in\n+     above functon).\n+     reduc_mark is used to check duplicate mappings for OpenMP reduction\n+     clauses.  */\n   struct gfc_symbol *old_symbol;\n-  unsigned mark:1, comp_mark:1, gfc_new:1;\n-\n-  /* The tlink field is used in the front end to carry the module\n-     declaration of separate module procedures so that the characteristics\n-     can be compared with the corresponding declaration in a submodule. In\n-     translation this field carries a linked list of symbols that require\n-     deferred initialization.  */\n-  struct gfc_symbol *tlink;\n+  unsigned mark:1, comp_mark:1, data_mark:1, dev_mark:1, gen_mark:1;\n+  unsigned reduc_mark:1, gfc_new:1;\n \n   /* Nonzero if all equivalences associated with this symbol have been\n      processed.  */"}, {"sha": "b71ee467c01cc1086c557cdb4d25c2f171edc1b3", "filename": "gcc/fortran/openmp.cc", "status": "modified", "additions": 92, "deletions": 17, "changes": 109, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Ffortran%2Fopenmp.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Ffortran%2Fopenmp.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fopenmp.cc?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754", "patch": "@@ -7150,6 +7150,10 @@ resolve_omp_clauses (gfc_code *code, gfc_omp_clauses *omp_clauses,\n \t  continue;\n \tn->sym->mark = 0;\n \tn->sym->comp_mark = 0;\n+\tn->sym->data_mark = 0;\n+\tn->sym->dev_mark = 0;\n+\tn->sym->gen_mark = 0;\n+\tn->sym->reduc_mark = 0;\n \tif (n->sym->attr.flavor == FL_VARIABLE\n \t    || n->sym->attr.proc_pointer\n \t    || (!code && (!n->sym->attr.dummy || n->sym->ns != ns)))\n@@ -7218,14 +7222,9 @@ resolve_omp_clauses (gfc_code *code, gfc_omp_clauses *omp_clauses,\n \t&& list != OMP_LIST_LASTPRIVATE\n \t&& list != OMP_LIST_ALIGNED\n \t&& list != OMP_LIST_DEPEND\n-\t&& (list != OMP_LIST_MAP || openacc)\n \t&& list != OMP_LIST_FROM\n \t&& list != OMP_LIST_TO\n \t&& (list != OMP_LIST_REDUCTION || !openacc)\n-\t&& list != OMP_LIST_REDUCTION_INSCAN\n-\t&& list != OMP_LIST_REDUCTION_TASK\n-\t&& list != OMP_LIST_IN_REDUCTION\n-\t&& list != OMP_LIST_TASK_REDUCTION\n \t&& list != OMP_LIST_ALLOCATE)\n       for (n = omp_clauses->lists[list]; n; n = n->next)\n \t{\n@@ -7237,10 +7236,58 @@ resolve_omp_clauses (gfc_code *code, gfc_omp_clauses *omp_clauses,\n \t    for (gfc_ref *ref = n->expr->ref; ref; ref = ref->next)\n \t      if (ref->type == REF_COMPONENT)\n \t\tcomponent_ref_p = true;\n-\t  if ((!component_ref_p && n->sym->comp_mark)\n-\t      || (component_ref_p && n->sym->mark))\n-\t    gfc_error (\"Symbol %qs has mixed component and non-component \"\n-\t\t       \"accesses at %L\", n->sym->name, &n->where);\n+\t  if ((list == OMP_LIST_IS_DEVICE_PTR\n+\t       || list == OMP_LIST_HAS_DEVICE_ADDR)\n+\t      && !component_ref_p)\n+\t    {\n+\t      if (n->sym->gen_mark\n+\t\t  || n->sym->dev_mark\n+\t\t  || n->sym->reduc_mark\n+\t\t  || n->sym->mark)\n+\t\tgfc_error (\"Symbol %qs present on multiple clauses at %L\",\n+\t\t\t   n->sym->name, &n->where);\n+\t      else\n+\t\tn->sym->dev_mark = 1;\n+\t    }\n+\t  else if ((list == OMP_LIST_USE_DEVICE_PTR\n+\t\t    || list == OMP_LIST_USE_DEVICE_ADDR\n+\t\t    || list == OMP_LIST_PRIVATE\n+\t\t    || list == OMP_LIST_SHARED)\n+\t\t   && !component_ref_p)\n+\t    {\n+\t      if (n->sym->gen_mark || n->sym->dev_mark || n->sym->reduc_mark)\n+\t\tgfc_error (\"Symbol %qs present on multiple clauses at %L\",\n+\t\t\t   n->sym->name, &n->where);\n+\t      else\n+\t\t{\n+\t\t  n->sym->gen_mark = 1;\n+\t\t  /* Set both generic and device bits if we have\n+\t\t     use_device_*(x) or shared(x).  This allows us to diagnose\n+\t\t     \"map(x) private(x)\" below.  */\n+\t\t  if (list != OMP_LIST_PRIVATE)\n+\t\t    n->sym->dev_mark = 1;\n+\t\t}\n+\t    }\n+\t  else if ((list == OMP_LIST_REDUCTION\n+\t\t    || list == OMP_LIST_REDUCTION_TASK\n+\t\t    || list == OMP_LIST_REDUCTION_INSCAN\n+\t\t    || list == OMP_LIST_IN_REDUCTION\n+\t\t    || list == OMP_LIST_TASK_REDUCTION)\n+\t\t   && !component_ref_p)\n+\t    {\n+\t      /* Attempts to mix reduction types are diagnosed below.  */\n+\t      if (n->sym->gen_mark || n->sym->dev_mark)\n+\t\tgfc_error (\"Symbol %qs present on multiple clauses at %L\",\n+\t\t\t   n->sym->name, &n->where);\n+\t      n->sym->reduc_mark = 1;\n+\t    }\n+\t  else if ((!component_ref_p && n->sym->comp_mark)\n+\t\t   || (component_ref_p && n->sym->mark))\n+\t    {\n+\t      if (openacc)\n+\t\tgfc_error (\"Symbol %qs has mixed component and non-component \"\n+\t\t\t   \"accesses at %L\", n->sym->name, &n->where);\n+\t    }\n \t  else if (n->sym->mark)\n \t    gfc_error (\"Symbol %qs present on multiple clauses at %L\",\n \t\t       n->sym->name, &n->where);\n@@ -7253,34 +7300,62 @@ resolve_omp_clauses (gfc_code *code, gfc_omp_clauses *omp_clauses,\n \t    }\n \t}\n \n+  /* Detect specifically the case where we have \"map(x) private(x)\" and raise\n+     an error.  If we have \"...simd\" combined directives though, the \"private\"\n+     applies to the simd part, so this is permitted though.  */\n+  for (n = omp_clauses->lists[OMP_LIST_PRIVATE]; n; n = n->next)\n+    if (n->sym->mark\n+\t&& n->sym->gen_mark\n+\t&& !n->sym->dev_mark\n+\t&& !n->sym->reduc_mark\n+\t&& code->op != EXEC_OMP_TARGET_SIMD\n+\t&& code->op != EXEC_OMP_TARGET_PARALLEL_DO_SIMD\n+\t&& code->op != EXEC_OMP_TARGET_TEAMS_DISTRIBUTE_SIMD\n+\t&& code->op != EXEC_OMP_TARGET_TEAMS_DISTRIBUTE_PARALLEL_DO_SIMD)\n+      gfc_error (\"Symbol %qs present on multiple clauses at %L\",\n+\t\t n->sym->name, &n->where);\n+\n   gcc_assert (OMP_LIST_LASTPRIVATE == OMP_LIST_FIRSTPRIVATE + 1);\n   for (list = OMP_LIST_FIRSTPRIVATE; list <= OMP_LIST_LASTPRIVATE; list++)\n     for (n = omp_clauses->lists[list]; n; n = n->next)\n-      if (n->sym->mark)\n+      if (n->sym->data_mark || n->sym->gen_mark || n->sym->dev_mark)\n \t{\n \t  gfc_error (\"Symbol %qs present on multiple clauses at %L\",\n \t\t     n->sym->name, &n->where);\n-\t  n->sym->mark = 0;\n-\t}\n+\t  n->sym->data_mark = n->sym->gen_mark = n->sym->dev_mark = 0;\n+\t}\n+      else if (n->sym->mark\n+\t       && code->op != EXEC_OMP_TARGET_TEAMS\n+\t       && code->op != EXEC_OMP_TARGET_TEAMS_DISTRIBUTE\n+\t       && code->op != EXEC_OMP_TARGET_TEAMS_LOOP\n+\t       && code->op != EXEC_OMP_TARGET_TEAMS_DISTRIBUTE_SIMD\n+\t       && code->op != EXEC_OMP_TARGET_TEAMS_DISTRIBUTE_PARALLEL_DO\n+\t       && code->op != EXEC_OMP_TARGET_PARALLEL\n+\t       && code->op != EXEC_OMP_TARGET_PARALLEL_DO\n+\t       && code->op != EXEC_OMP_TARGET_PARALLEL_LOOP\n+\t       && code->op != EXEC_OMP_TARGET_PARALLEL_DO_SIMD\n+\t       && code->op != EXEC_OMP_TARGET_TEAMS_DISTRIBUTE_PARALLEL_DO_SIMD)\n+\tgfc_error (\"Symbol %qs present on both data and map clauses \"\n+\t\t   \"at %L\", n->sym->name, &n->where);\n \n   for (n = omp_clauses->lists[OMP_LIST_FIRSTPRIVATE]; n; n = n->next)\n     {\n-      if (n->sym->mark)\n+      if (n->sym->data_mark || n->sym->gen_mark || n->sym->dev_mark)\n \tgfc_error (\"Symbol %qs present on multiple clauses at %L\",\n \t\t   n->sym->name, &n->where);\n       else\n-\tn->sym->mark = 1;\n+\tn->sym->data_mark = 1;\n     }\n   for (n = omp_clauses->lists[OMP_LIST_LASTPRIVATE]; n; n = n->next)\n-    n->sym->mark = 0;\n+    n->sym->data_mark = 0;\n \n   for (n = omp_clauses->lists[OMP_LIST_LASTPRIVATE]; n; n = n->next)\n     {\n-      if (n->sym->mark)\n+      if (n->sym->data_mark || n->sym->gen_mark || n->sym->dev_mark)\n \tgfc_error (\"Symbol %qs present on multiple clauses at %L\",\n \t\t   n->sym->name, &n->where);\n       else\n-\tn->sym->mark = 1;\n+\tn->sym->data_mark = 1;\n     }\n \n   for (n = omp_clauses->lists[OMP_LIST_ALIGNED]; n; n = n->next)"}, {"sha": "395bcc98e001a91fd96419278e947c7e3fa7b383", "filename": "gcc/fortran/trans-openmp.cc", "status": "modified", "additions": 35, "deletions": 2, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Ffortran%2Ftrans-openmp.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Ffortran%2Ftrans-openmp.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-openmp.cc?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754", "patch": "@@ -5968,6 +5968,39 @@ gfc_add_clause_implicitly (gfc_omp_clauses *clauses_out,\n     }\n }\n \n+/* Kind of opposite to above, add firstprivate to CLAUSES_OUT if it is mapped\n+   in CLAUSES_IN's FIRSTPRIVATE list but not its MAP list.  */\n+\n+static void\n+gfc_add_firstprivate_if_unmapped (gfc_omp_clauses *clauses_out,\n+\t\t\t\t  gfc_omp_clauses *clauses_in)\n+{\n+  gfc_omp_namelist *n = clauses_in->lists[OMP_LIST_FIRSTPRIVATE];\n+  gfc_omp_namelist **tail = NULL;\n+\n+  for (; n != NULL; n = n->next)\n+    {\n+      gfc_omp_namelist *n2 = clauses_out->lists[OMP_LIST_MAP];\n+      for (; n2 != NULL; n2 = n2->next)\n+\tif (n->sym == n2->sym)\n+\t  break;\n+      if (n2 == NULL)\n+\t{\n+\t  gfc_omp_namelist *dup = gfc_get_omp_namelist ();\n+\t  *dup = *n;\n+\t  dup->next = NULL;\n+\t  if (!tail)\n+\t    {\n+\t      tail = &clauses_out->lists[OMP_LIST_FIRSTPRIVATE];\n+\t      while (*tail && (*tail)->next)\n+\t\ttail = &(*tail)->next;\n+\t    }\n+\t  *tail = dup;\n+\t  tail = &(*tail)->next;\n+\t}\n+    }\n+}\n+\n static void\n gfc_free_split_omp_clauses (gfc_code *code, gfc_omp_clauses *clausesa)\n {\n@@ -6351,8 +6384,8 @@ gfc_split_omp_clauses (gfc_code *code,\n \t simd and masked/master.  Put it on the outermost of those and duplicate\n \t on parallel and teams.  */\n       if (mask & GFC_OMP_MASK_TARGET)\n-\tclausesa[GFC_OMP_SPLIT_TARGET].lists[OMP_LIST_FIRSTPRIVATE]\n-\t  = code->ext.omp_clauses->lists[OMP_LIST_FIRSTPRIVATE];\n+\tgfc_add_firstprivate_if_unmapped (&clausesa[GFC_OMP_SPLIT_TARGET],\n+\t\t\t\t\t  code->ext.omp_clauses);\n       if (mask & GFC_OMP_MASK_TEAMS)\n \tclausesa[GFC_OMP_SPLIT_TEAMS].lists[OMP_LIST_FIRSTPRIVATE]\n \t  = code->ext.omp_clauses->lists[OMP_LIST_FIRSTPRIVATE];"}, {"sha": "fa1ef7613ad8c90a097f0a9413c7f3088a48b05f", "filename": "gcc/gcov.cc", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fgcov.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fgcov.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcov.cc?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754", "patch": "@@ -2893,7 +2893,9 @@ output_branch_count (FILE *gcov_file, int ix, const arc_info *arc)\n \t\t arc->fall_through ? \" (fallthrough)\"\n \t\t : arc->is_throw ? \" (throw)\" : \"\");\n       else\n-\tfnotice (gcov_file, \"branch %2d never executed\", ix);\n+\tfnotice (gcov_file, \"branch %2d never executed%s\", ix,\n+\t\t (arc->fall_through ? \" (fallthrough)\"\n+\t\t  : arc->is_throw ? \" (throw)\" : \"\"));\n \n       if (flag_verbose)\n \tfnotice (gcov_file, \" (BB %d)\", arc->dst->id);"}, {"sha": "6fe336eeb194c1e29320c3add1843fe3ad4e4260", "filename": "gcc/ipa-sra.cc", "status": "modified", "additions": 21, "deletions": 2, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fipa-sra.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fipa-sra.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-sra.cc?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754", "patch": "@@ -592,7 +592,8 @@ namespace {\n \n hash_map<tree, gensum_param_desc *> *decl2desc;\n \n-/* All local DECLs ever loaded from.  */\n+/* All local DECLs ever loaded from of and of those that have their address\n+   assigned to a variable.  */\n \n hash_set <tree> *loaded_decls;\n \n@@ -1205,7 +1206,12 @@ create_parameter_descriptors (cgraph_node *node,\n       if (POINTER_TYPE_P (type))\n \t{\n \t  desc->by_ref = true;\n-\t  desc->safe_ref = (TREE_CODE (type) == REFERENCE_TYPE);\n+\t  if (TREE_CODE (type) == REFERENCE_TYPE\n+\t      || (num == 0\n+\t\t  && TREE_CODE (TREE_TYPE (node->decl)) == METHOD_TYPE))\n+\t    desc->safe_ref = true;\n+\t  else\n+\t    desc->safe_ref = false;\n \t  type = TREE_TYPE (type);\n \n \t  if (TREE_CODE (type) == FUNCTION_TYPE\n@@ -1743,6 +1749,19 @@ scan_expr_access (tree expr, gimple *stmt, isra_scan_context ctx,\n   bool deref = false;\n   bool reverse;\n \n+  if (TREE_CODE (expr) == ADDR_EXPR)\n+    {\n+      if (ctx == ISRA_CTX_ARG)\n+\treturn;\n+      tree t = get_base_address (TREE_OPERAND (expr, 0));\n+      if (TREE_CODE (t) == VAR_DECL && !TREE_STATIC (t))\n+\tloaded_decls->add (t);\n+      return;\n+    }\n+  if (TREE_CODE (expr) == SSA_NAME\n+      || CONSTANT_CLASS_P (expr))\n+    return;\n+\n   if (TREE_CODE (expr) == BIT_FIELD_REF\n       || TREE_CODE (expr) == IMAGPART_EXPR\n       || TREE_CODE (expr) == REALPART_EXPR)"}, {"sha": "d4f296f796fdc4fdc99618be8681a1e964f01ac3", "filename": "gcc/jit/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fjit%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fjit%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjit%2FChangeLog?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754", "patch": "@@ -1,3 +1,9 @@\n+2022-12-14  Antoni Boucher  <bouanto@zoho.com>\n+\t    Guillaume Gomez  <guillaume1.gomez@gmail.com>\n+\n+\tPR jit/108078\n+\t* jit-recording.h: Add vector_type::is_same_type_as method\n+\n 2022-12-07  Antoni Boucher  <bouanto@zoho.com>\n \t    Guillaume Gomez  <guillaume1.gomez@gmail.com>\n "}, {"sha": "9854856fa8159485a39799a4811822a854e27401", "filename": "gcc/m2/COPYING.FDL", "status": "added", "additions": 397, "deletions": 0, "changes": 397, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2FCOPYING.FDL", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2FCOPYING.FDL", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2FCOPYING.FDL?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754", "patch": "@@ -0,0 +1,397 @@\n+\t\tGNU Free Documentation License\n+\t\t  Version 1.2, November 2002\n+\n+\n+ Copyright (C) 2000-2022 Free Software Foundation, Inc.\n+     51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA\n+ Everyone is permitted to copy and distribute verbatim copies\n+ of this license document, but changing it is not allowed.\n+\n+\n+0. PREAMBLE\n+\n+The purpose of this License is to make a manual, textbook, or other\n+functional and useful document \"free\" in the sense of freedom: to\n+assure everyone the effective freedom to copy and redistribute it,\n+with or without modifying it, either commercially or noncommercially.\n+Secondarily, this License preserves for the author and publisher a way\n+to get credit for their work, while not being considered responsible\n+for modifications made by others.\n+\n+This License is a kind of \"copyleft\", which means that derivative\n+works of the document must themselves be free in the same sense.  It\n+complements the GNU General Public License, which is a copyleft\n+license designed for free software.\n+\n+We have designed this License in order to use it for manuals for free\n+software, because free software needs free documentation: a free\n+program should come with manuals providing the same freedoms that the\n+software does.  But this License is not limited to software manuals;\n+it can be used for any textual work, regardless of subject matter or\n+whether it is published as a printed book.  We recommend this License\n+principally for works whose purpose is instruction or reference.\n+\n+\n+1. APPLICABILITY AND DEFINITIONS\n+\n+This License applies to any manual or other work, in any medium, that\n+contains a notice placed by the copyright holder saying it can be\n+distributed under the terms of this License.  Such a notice grants a\n+world-wide, royalty-free license, unlimited in duration, to use that\n+work under the conditions stated herein.  The \"Document\", below,\n+refers to any such manual or work.  Any member of the public is a\n+licensee, and is addressed as \"you\".  You accept the license if you\n+copy, modify or distribute the work in a way requiring permission\n+under copyright law.\n+\n+A \"Modified Version\" of the Document means any work containing the\n+Document or a portion of it, either copied verbatim, or with\n+modifications and/or translated into another language.\n+\n+A \"Secondary Section\" is a named appendix or a front-matter section of\n+the Document that deals exclusively with the relationship of the\n+publishers or authors of the Document to the Document's overall subject\n+(or to related matters) and contains nothing that could fall directly\n+within that overall subject.  (Thus, if the Document is in part a\n+textbook of mathematics, a Secondary Section may not explain any\n+mathematics.)  The relationship could be a matter of historical\n+connection with the subject or with related matters, or of legal,\n+commercial, philosophical, ethical or political position regarding\n+them.\n+\n+The \"Invariant Sections\" are certain Secondary Sections whose titles\n+are designated, as being those of Invariant Sections, in the notice\n+that says that the Document is released under this License.  If a\n+section does not fit the above definition of Secondary then it is not\n+allowed to be designated as Invariant.  The Document may contain zero\n+Invariant Sections.  If the Document does not identify any Invariant\n+Sections then there are none.\n+\n+The \"Cover Texts\" are certain short passages of text that are listed,\n+as Front-Cover Texts or Back-Cover Texts, in the notice that says that\n+the Document is released under this License.  A Front-Cover Text may\n+be at most 5 words, and a Back-Cover Text may be at most 25 words.\n+\n+A \"Transparent\" copy of the Document means a machine-readable copy,\n+represented in a format whose specification is available to the\n+general public, that is suitable for revising the document\n+straightforwardly with generic text editors or (for images composed of\n+pixels) generic paint programs or (for drawings) some widely available\n+drawing editor, and that is suitable for input to text formatters or\n+for automatic translation to a variety of formats suitable for input\n+to text formatters.  A copy made in an otherwise Transparent file\n+format whose markup, or absence of markup, has been arranged to thwart\n+or discourage subsequent modification by readers is not Transparent.\n+An image format is not Transparent if used for any substantial amount\n+of text.  A copy that is not \"Transparent\" is called \"Opaque\".\n+\n+Examples of suitable formats for Transparent copies include plain\n+ASCII without markup, Texinfo input format, LaTeX input format, SGML\n+or XML using a publicly available DTD, and standard-conforming simple\n+HTML, PostScript or PDF designed for human modification.  Examples of\n+transparent image formats include PNG, XCF and JPG.  Opaque formats\n+include proprietary formats that can be read and edited only by\n+proprietary word processors, SGML or XML for which the DTD and/or\n+processing tools are not generally available, and the\n+machine-generated HTML, PostScript or PDF produced by some word\n+processors for output purposes only.\n+\n+The \"Title Page\" means, for a printed book, the title page itself,\n+plus such following pages as are needed to hold, legibly, the material\n+this License requires to appear in the title page.  For works in\n+formats which do not have any title page as such, \"Title Page\" means\n+the text near the most prominent appearance of the work's title,\n+preceding the beginning of the body of the text.\n+\n+A section \"Entitled XYZ\" means a named subunit of the Document whose\n+title either is precisely XYZ or contains XYZ in parentheses following\n+text that translates XYZ in another language.  (Here XYZ stands for a\n+specific section name mentioned below, such as \"Acknowledgements\",\n+\"Dedications\", \"Endorsements\", or \"History\".)  To \"Preserve the Title\"\n+of such a section when you modify the Document means that it remains a\n+section \"Entitled XYZ\" according to this definition.\n+\n+The Document may include Warranty Disclaimers next to the notice which\n+states that this License applies to the Document.  These Warranty\n+Disclaimers are considered to be included by reference in this\n+License, but only as regards disclaiming warranties: any other\n+implication that these Warranty Disclaimers may have is void and has\n+no effect on the meaning of this License.\n+\n+\n+2. VERBATIM COPYING\n+\n+You may copy and distribute the Document in any medium, either\n+commercially or noncommercially, provided that this License, the\n+copyright notices, and the license notice saying this License applies\n+to the Document are reproduced in all copies, and that you add no other\n+conditions whatsoever to those of this License.  You may not use\n+technical measures to obstruct or control the reading or further\n+copying of the copies you make or distribute.  However, you may accept\n+compensation in exchange for copies.  If you distribute a large enough\n+number of copies you must also follow the conditions in section 3.\n+\n+You may also lend copies, under the same conditions stated above, and\n+you may publicly display copies.\n+\n+\n+3. COPYING IN QUANTITY\n+\n+If you publish printed copies (or copies in media that commonly have\n+printed covers) of the Document, numbering more than 100, and the\n+Document's license notice requires Cover Texts, you must enclose the\n+copies in covers that carry, clearly and legibly, all these Cover\n+Texts: Front-Cover Texts on the front cover, and Back-Cover Texts on\n+the back cover.  Both covers must also clearly and legibly identify\n+you as the publisher of these copies.  The front cover must present\n+the full title with all words of the title equally prominent and\n+visible.  You may add other material on the covers in addition.\n+Copying with changes limited to the covers, as long as they preserve\n+the title of the Document and satisfy these conditions, can be treated\n+as verbatim copying in other respects.\n+\n+If the required texts for either cover are too voluminous to fit\n+legibly, you should put the first ones listed (as many as fit\n+reasonably) on the actual cover, and continue the rest onto adjacent\n+pages.\n+\n+If you publish or distribute Opaque copies of the Document numbering\n+more than 100, you must either include a machine-readable Transparent\n+copy along with each Opaque copy, or state in or with each Opaque copy\n+a computer-network location from which the general network-using\n+public has access to download using public-standard network protocols\n+a complete Transparent copy of the Document, free of added material.\n+If you use the latter option, you must take reasonably prudent steps,\n+when you begin distribution of Opaque copies in quantity, to ensure\n+that this Transparent copy will remain thus accessible at the stated\n+location until at least one year after the last time you distribute an\n+Opaque copy (directly or through your agents or retailers) of that\n+edition to the public.\n+\n+It is requested, but not required, that you contact the authors of the\n+Document well before redistributing any large number of copies, to give\n+them a chance to provide you with an updated version of the Document.\n+\n+\n+4. MODIFICATIONS\n+\n+You may copy and distribute a Modified Version of the Document under\n+the conditions of sections 2 and 3 above, provided that you release\n+the Modified Version under precisely this License, with the Modified\n+Version filling the role of the Document, thus licensing distribution\n+and modification of the Modified Version to whoever possesses a copy\n+of it.  In addition, you must do these things in the Modified Version:\n+\n+A. Use in the Title Page (and on the covers, if any) a title distinct\n+   from that of the Document, and from those of previous versions\n+   (which should, if there were any, be listed in the History section\n+   of the Document).  You may use the same title as a previous version\n+   if the original publisher of that version gives permission.\n+B. List on the Title Page, as authors, one or more persons or entities\n+   responsible for authorship of the modifications in the Modified\n+   Version, together with at least five of the principal authors of the\n+   Document (all of its principal authors, if it has fewer than five),\n+   unless they release you from this requirement.\n+C. State on the Title page the name of the publisher of the\n+   Modified Version, as the publisher.\n+D. Preserve all the copyright notices of the Document.\n+E. Add an appropriate copyright notice for your modifications\n+   adjacent to the other copyright notices.\n+F. Include, immediately after the copyright notices, a license notice\n+   giving the public permission to use the Modified Version under the\n+   terms of this License, in the form shown in the Addendum below.\n+G. Preserve in that license notice the full lists of Invariant Sections\n+   and required Cover Texts given in the Document's license notice.\n+H. Include an unaltered copy of this License.\n+I. Preserve the section Entitled \"History\", Preserve its Title, and add\n+   to it an item stating at least the title, year, new authors, and\n+   publisher of the Modified Version as given on the Title Page.  If\n+   there is no section Entitled \"History\" in the Document, create one\n+   stating the title, year, authors, and publisher of the Document as\n+   given on its Title Page, then add an item describing the Modified\n+   Version as stated in the previous sentence.\n+J. Preserve the network location, if any, given in the Document for\n+   public access to a Transparent copy of the Document, and likewise\n+   the network locations given in the Document for previous versions\n+   it was based on.  These may be placed in the \"History\" section.\n+   You may omit a network location for a work that was published at\n+   least four years before the Document itself, or if the original\n+   publisher of the version it refers to gives permission.\n+K. For any section Entitled \"Acknowledgements\" or \"Dedications\",\n+   Preserve the Title of the section, and preserve in the section all\n+   the substance and tone of each of the contributor acknowledgements\n+   and/or dedications given therein.\n+L. Preserve all the Invariant Sections of the Document,\n+   unaltered in their text and in their titles.  Section numbers\n+   or the equivalent are not considered part of the section titles.\n+M. Delete any section Entitled \"Endorsements\".  Such a section\n+   may not be included in the Modified Version.\n+N. Do not retitle any existing section to be Entitled \"Endorsements\"\n+   or to conflict in title with any Invariant Section.\n+O. Preserve any Warranty Disclaimers.\n+\n+If the Modified Version includes new front-matter sections or\n+appendices that qualify as Secondary Sections and contain no material\n+copied from the Document, you may at your option designate some or all\n+of these sections as invariant.  To do this, add their titles to the\n+list of Invariant Sections in the Modified Version's license notice.\n+These titles must be distinct from any other section titles.\n+\n+You may add a section Entitled \"Endorsements\", provided it contains\n+nothing but endorsements of your Modified Version by various\n+parties--for example, statements of peer review or that the text has\n+been approved by an organization as the authoritative definition of a\n+standard.\n+\n+You may add a passage of up to five words as a Front-Cover Text, and a\n+passage of up to 25 words as a Back-Cover Text, to the end of the list\n+of Cover Texts in the Modified Version.  Only one passage of\n+Front-Cover Text and one of Back-Cover Text may be added by (or\n+through arrangements made by) any one entity.  If the Document already\n+includes a cover text for the same cover, previously added by you or\n+by arrangement made by the same entity you are acting on behalf of,\n+you may not add another; but you may replace the old one, on explicit\n+permission from the previous publisher that added the old one.\n+\n+The author(s) and publisher(s) of the Document do not by this License\n+give permission to use their names for publicity for or to assert or\n+imply endorsement of any Modified Version.\n+\n+\n+5. COMBINING DOCUMENTS\n+\n+You may combine the Document with other documents released under this\n+License, under the terms defined in section 4 above for modified\n+versions, provided that you include in the combination all of the\n+Invariant Sections of all of the original documents, unmodified, and\n+list them all as Invariant Sections of your combined work in its\n+license notice, and that you preserve all their Warranty Disclaimers.\n+\n+The combined work need only contain one copy of this License, and\n+multiple identical Invariant Sections may be replaced with a single\n+copy.  If there are multiple Invariant Sections with the same name but\n+different contents, make the title of each such section unique by\n+adding at the end of it, in parentheses, the name of the original\n+author or publisher of that section if known, or else a unique number.\n+Make the same adjustment to the section titles in the list of\n+Invariant Sections in the license notice of the combined work.\n+\n+In the combination, you must combine any sections Entitled \"History\"\n+in the various original documents, forming one section Entitled\n+\"History\"; likewise combine any sections Entitled \"Acknowledgements\",\n+and any sections Entitled \"Dedications\".  You must delete all sections\n+Entitled \"Endorsements\".\n+\n+\n+6. COLLECTIONS OF DOCUMENTS\n+\n+You may make a collection consisting of the Document and other documents\n+released under this License, and replace the individual copies of this\n+License in the various documents with a single copy that is included in\n+the collection, provided that you follow the rules of this License for\n+verbatim copying of each of the documents in all other respects.\n+\n+You may extract a single document from such a collection, and distribute\n+it individually under this License, provided you insert a copy of this\n+License into the extracted document, and follow this License in all\n+other respects regarding verbatim copying of that document.\n+\n+\n+7. AGGREGATION WITH INDEPENDENT WORKS\n+\n+A compilation of the Document or its derivatives with other separate\n+and independent documents or works, in or on a volume of a storage or\n+distribution medium, is called an \"aggregate\" if the copyright\n+resulting from the compilation is not used to limit the legal rights\n+of the compilation's users beyond what the individual works permit.\n+When the Document is included in an aggregate, this License does not\n+apply to the other works in the aggregate which are not themselves\n+derivative works of the Document.\n+\n+If the Cover Text requirement of section 3 is applicable to these\n+copies of the Document, then if the Document is less than one half of\n+the entire aggregate, the Document's Cover Texts may be placed on\n+covers that bracket the Document within the aggregate, or the\n+electronic equivalent of covers if the Document is in electronic form.\n+Otherwise they must appear on printed covers that bracket the whole\n+aggregate.\n+\n+\n+8. TRANSLATION\n+\n+Translation is considered a kind of modification, so you may\n+distribute translations of the Document under the terms of section 4.\n+Replacing Invariant Sections with translations requires special\n+permission from their copyright holders, but you may include\n+translations of some or all Invariant Sections in addition to the\n+original versions of these Invariant Sections.  You may include a\n+translation of this License, and all the license notices in the\n+Document, and any Warranty Disclaimers, provided that you also include\n+the original English version of this License and the original versions\n+of those notices and disclaimers.  In case of a disagreement between\n+the translation and the original version of this License or a notice\n+or disclaimer, the original version will prevail.\n+\n+If a section in the Document is Entitled \"Acknowledgements\",\n+\"Dedications\", or \"History\", the requirement (section 4) to Preserve\n+its Title (section 1) will typically require changing the actual\n+title.\n+\n+\n+9. TERMINATION\n+\n+You may not copy, modify, sublicense, or distribute the Document except\n+as expressly provided for under this License.  Any other attempt to\n+copy, modify, sublicense or distribute the Document is void, and will\n+automatically terminate your rights under this License.  However,\n+parties who have received copies, or rights, from you under this\n+License will not have their licenses terminated so long as such\n+parties remain in full compliance.\n+\n+\n+10. FUTURE REVISIONS OF THIS LICENSE\n+\n+The Free Software Foundation may publish new, revised versions\n+of the GNU Free Documentation License from time to time.  Such new\n+versions will be similar in spirit to the present version, but may\n+differ in detail to address new problems or concerns.  See\n+http://www.gnu.org/copyleft/.\n+\n+Each version of the License is given a distinguishing version number.\n+If the Document specifies that a particular numbered version of this\n+License \"or any later version\" applies to it, you have the option of\n+following the terms and conditions either of that specified version or\n+of any later version that has been published (not as a draft) by the\n+Free Software Foundation.  If the Document does not specify a version\n+number of this License, you may choose any version ever published (not\n+as a draft) by the Free Software Foundation.\n+\n+\n+ADDENDUM: How to use this License for your documents\n+\n+To use this License in a document you have written, include a copy of\n+the License in the document and put the following copyright and\n+license notices just after the title page:\n+\n+    Copyright (c)  YEAR  YOUR NAME.\n+    Permission is granted to copy, distribute and/or modify this document\n+    under the terms of the GNU Free Documentation License, Version 1.2\n+    or any later version published by the Free Software Foundation;\n+    with no Invariant Sections, no Front-Cover Texts, and no Back-Cover Texts.\n+    A copy of the license is included in the section entitled \"GNU\n+    Free Documentation License\".\n+\n+If you have Invariant Sections, Front-Cover Texts and Back-Cover Texts,\n+replace the \"with...Texts.\" line with this:\n+\n+    with the Invariant Sections being LIST THEIR TITLES, with the\n+    Front-Cover Texts being LIST, and with the Back-Cover Texts being LIST.\n+\n+If you have Invariant Sections without Cover Texts, or some other\n+combination of the three, merge those two alternatives to suit the\n+situation.\n+\n+If your document contains nontrivial examples of program code, we\n+recommend releasing these examples in parallel under your choice of\n+free software license, such as the GNU General Public License,\n+to permit their use in free software."}, {"sha": "649af5e573a05f87ac141f5ab2371d429fecf65d", "filename": "gcc/m2/COPYING.RUNTIME", "status": "added", "additions": 73, "deletions": 0, "changes": 73, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2FCOPYING.RUNTIME", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2FCOPYING.RUNTIME", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2FCOPYING.RUNTIME?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754", "patch": "@@ -0,0 +1,73 @@\n+GCC RUNTIME LIBRARY EXCEPTION\n+\n+Version 3.1, 31 March 2009\n+\n+Copyright (C) 2009-2022 Free Software Foundation, Inc. <http://fsf.org/>\n+\n+Everyone is permitted to copy and distribute verbatim copies of this\n+license document, but changing it is not allowed.\n+\n+This GCC Runtime Library Exception (\"Exception\") is an additional\n+permission under section 7 of the GNU General Public License, version\n+3 (\"GPLv3\"). It applies to a given file (the \"Runtime Library\") that\n+bears a notice placed by the copyright holder of the file stating that\n+the file is governed by GPLv3 along with this Exception.\n+\n+When you use GCC to compile a program, GCC may combine portions of\n+certain GCC header files and runtime libraries with the compiled\n+program. The purpose of this Exception is to allow compilation of\n+non-GPL (including proprietary) programs to use, in this way, the\n+header files and runtime libraries covered by this Exception.\n+\n+0. Definitions.\n+\n+A file is an \"Independent Module\" if it either requires the Runtime\n+Library for execution after a Compilation Process, or makes use of an\n+interface provided by the Runtime Library, but is not otherwise based\n+on the Runtime Library.\n+\n+\"GCC\" means a version of the GNU Compiler Collection, with or without\n+modifications, governed by version 3 (or a specified later version) of\n+the GNU General Public License (GPL) with the option of using any\n+subsequent versions published by the FSF.\n+\n+\"GPL-compatible Software\" is software whose conditions of propagation,\n+modification and use would permit combination with GCC in accord with\n+the license of GCC.\n+\n+\"Target Code\" refers to output from any compiler for a real or virtual\n+target processor architecture, in executable form or suitable for\n+input to an assembler, loader, linker and/or execution\n+phase. Notwithstanding that, Target Code does not include data in any\n+format that is used as a compiler intermediate representation, or used\n+for producing a compiler intermediate representation.\n+\n+The \"Compilation Process\" transforms code entirely represented in\n+non-intermediate languages designed for human-written code, and/or in\n+Java Virtual Machine byte code, into Target Code. Thus, for example,\n+use of source code generators and preprocessors need not be considered\n+part of the Compilation Process, since the Compilation Process can be\n+understood as starting with the output of the generators or\n+preprocessors.\n+\n+A Compilation Process is \"Eligible\" if it is done using GCC, alone or\n+with other GPL-compatible software, or if it is done without using any\n+work based on GCC. For example, using non-GPL-compatible Software to\n+optimize any GCC intermediate representations would not qualify as an\n+Eligible Compilation Process.\n+\n+1. Grant of Additional Permission.\n+\n+You have permission to propagate a work of Target Code formed by\n+combining the Runtime Library with Independent Modules, even if such\n+propagation would otherwise violate the terms of GPLv3, provided that\n+all Target Code was generated by Eligible Compilation Processes. You\n+may then convey such a combination under terms of your choice,\n+consistent with the licensing of the Independent Modules.\n+\n+2. No Weakening of GCC Copyleft.\n+\n+The availability of this Exception does not imply any general\n+presumption that third-party software is unaffected by the copyleft\n+requirements of the license of GCC.\n+"}, {"sha": "10926e87f113fb026c366866d6fa466061562870", "filename": "gcc/m2/COPYING3", "status": "added", "additions": 675, "deletions": 0, "changes": 675, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2FCOPYING3", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2FCOPYING3", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2FCOPYING3?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754", "patch": "@@ -0,0 +1,675 @@\n+                    GNU GENERAL PUBLIC LICENSE\n+                       Version 3, 29 June 2007\n+\n+ Copyright (C) 2007 Free Software Foundation, Inc. <http://fsf.org/>\n+ Everyone is permitted to copy and distribute verbatim copies\n+ of this license document, but changing it is not allowed.\n+\n+                            Preamble\n+\n+  The GNU General Public License is a free, copyleft license for\n+software and other kinds of works.\n+\n+  The licenses for most software and other practical works are designed\n+to take away your freedom to share and change the works.  By contrast,\n+the GNU General Public License is intended to guarantee your freedom to\n+share and change all versions of a program--to make sure it remains free\n+software for all its users.  We, the Free Software Foundation, use the\n+GNU General Public License for most of our software; it applies also to\n+any other work released this way by its authors.  You can apply it to\n+your programs, too.\n+\n+  When we speak of free software, we are referring to freedom, not\n+price.  Our General Public Licenses are designed to make sure that you\n+have the freedom to distribute copies of free software (and charge for\n+them if you wish), that you receive source code or can get it if you\n+want it, that you can change the software or use pieces of it in new\n+free programs, and that you know you can do these things.\n+\n+  To protect your rights, we need to prevent others from denying you\n+these rights or asking you to surrender the rights.  Therefore, you have\n+certain responsibilities if you distribute copies of the software, or if\n+you modify it: responsibilities to respect the freedom of others.\n+\n+  For example, if you distribute copies of such a program, whether\n+gratis or for a fee, you must pass on to the recipients the same\n+freedoms that you received.  You must make sure that they, too, receive\n+or can get the source code.  And you must show them these terms so they\n+know their rights.\n+\n+  Developers that use the GNU GPL protect your rights with two steps:\n+(1) assert copyright on the software, and (2) offer you this License\n+giving you legal permission to copy, distribute and/or modify it.\n+\n+  For the developers' and authors' protection, the GPL clearly explains\n+that there is no warranty for this free software.  For both users' and\n+authors' sake, the GPL requires that modified versions be marked as\n+changed, so that their problems will not be attributed erroneously to\n+authors of previous versions.\n+\n+  Some devices are designed to deny users access to install or run\n+modified versions of the software inside them, although the manufacturer\n+can do so.  This is fundamentally incompatible with the aim of\n+protecting users' freedom to change the software.  The systematic\n+pattern of such abuse occurs in the area of products for individuals to\n+use, which is precisely where it is most unacceptable.  Therefore, we\n+have designed this version of the GPL to prohibit the practice for those\n+products.  If such problems arise substantially in other domains, we\n+stand ready to extend this provision to those domains in future versions\n+of the GPL, as needed to protect the freedom of users.\n+\n+  Finally, every program is threatened constantly by software patents.\n+States should not allow patents to restrict development and use of\n+software on general-purpose computers, but in those that do, we wish to\n+avoid the special danger that patents applied to a free program could\n+make it effectively proprietary.  To prevent this, the GPL assures that\n+patents cannot be used to render the program non-free.\n+\n+  The precise terms and conditions for copying, distribution and\n+modification follow.\n+\n+                       TERMS AND CONDITIONS\n+\n+  0. Definitions.\n+\n+  \"This License\" refers to version 3 of the GNU General Public License.\n+\n+  \"Copyright\" also means copyright-like laws that apply to other kinds of\n+works, such as semiconductor masks.\n+\n+  \"The Program\" refers to any copyrightable work licensed under this\n+License.  Each licensee is addressed as \"you\".  \"Licensees\" and\n+\"recipients\" may be individuals or organizations.\n+\n+  To \"modify\" a work means to copy from or adapt all or part of the work\n+in a fashion requiring copyright permission, other than the making of an\n+exact copy.  The resulting work is called a \"modified version\" of the\n+earlier work or a work \"based on\" the earlier work.\n+\n+  A \"covered work\" means either the unmodified Program or a work based\n+on the Program.\n+\n+  To \"propagate\" a work means to do anything with it that, without\n+permission, would make you directly or secondarily liable for\n+infringement under applicable copyright law, except executing it on a\n+computer or modifying a private copy.  Propagation includes copying,\n+distribution (with or without modification), making available to the\n+public, and in some countries other activities as well.\n+\n+  To \"convey\" a work means any kind of propagation that enables other\n+parties to make or receive copies.  Mere interaction with a user through\n+a computer network, with no transfer of a copy, is not conveying.\n+\n+  An interactive user interface displays \"Appropriate Legal Notices\"\n+to the extent that it includes a convenient and prominently visible\n+feature that (1) displays an appropriate copyright notice, and (2)\n+tells the user that there is no warranty for the work (except to the\n+extent that warranties are provided), that licensees may convey the\n+work under this License, and how to view a copy of this License.  If\n+the interface presents a list of user commands or options, such as a\n+menu, a prominent item in the list meets this criterion.\n+\n+  1. Source Code.\n+\n+  The \"source code\" for a work means the preferred form of the work\n+for making modifications to it.  \"Object code\" means any non-source\n+form of a work.\n+\n+  A \"Standard Interface\" means an interface that either is an official\n+standard defined by a recognized standards body, or, in the case of\n+interfaces specified for a particular programming language, one that\n+is widely used among developers working in that language.\n+\n+  The \"System Libraries\" of an executable work include anything, other\n+than the work as a whole, that (a) is included in the normal form of\n+packaging a Major Component, but which is not part of that Major\n+Component, and (b) serves only to enable use of the work with that\n+Major Component, or to implement a Standard Interface for which an\n+implementation is available to the public in source code form.  A\n+\"Major Component\", in this context, means a major essential component\n+(kernel, window system, and so on) of the specific operating system\n+(if any) on which the executable work runs, or a compiler used to\n+produce the work, or an object code interpreter used to run it.\n+\n+  The \"Corresponding Source\" for a work in object code form means all\n+the source code needed to generate, install, and (for an executable\n+work) run the object code and to modify the work, including scripts to\n+control those activities.  However, it does not include the work's\n+System Libraries, or general-purpose tools or generally available free\n+programs which are used unmodified in performing those activities but\n+which are not part of the work.  For example, Corresponding Source\n+includes interface definition files associated with source files for\n+the work, and the source code for shared libraries and dynamically\n+linked subprograms that the work is specifically designed to require,\n+such as by intimate data communication or control flow between those\n+subprograms and other parts of the work.\n+\n+  The Corresponding Source need not include anything that users\n+can regenerate automatically from other parts of the Corresponding\n+Source.\n+\n+  The Corresponding Source for a work in source code form is that\n+same work.\n+\n+  2. Basic Permissions.\n+\n+  All rights granted under this License are granted for the term of\n+copyright on the Program, and are irrevocable provided the stated\n+conditions are met.  This License explicitly affirms your unlimited\n+permission to run the unmodified Program.  The output from running a\n+covered work is covered by this License only if the output, given its\n+content, constitutes a covered work.  This License acknowledges your\n+rights of fair use or other equivalent, as provided by copyright law.\n+\n+  You may make, run and propagate covered works that you do not\n+convey, without conditions so long as your license otherwise remains\n+in force.  You may convey covered works to others for the sole purpose\n+of having them make modifications exclusively for you, or provide you\n+with facilities for running those works, provided that you comply with\n+the terms of this License in conveying all material for which you do\n+not control copyright.  Those thus making or running the covered works\n+for you must do so exclusively on your behalf, under your direction\n+and control, on terms that prohibit them from making any copies of\n+your copyrighted material outside their relationship with you.\n+\n+  Conveying under any other circumstances is permitted solely under\n+the conditions stated below.  Sublicensing is not allowed; section 10\n+makes it unnecessary.\n+\n+  3. Protecting Users' Legal Rights From Anti-Circumvention Law.\n+\n+  No covered work shall be deemed part of an effective technological\n+measure under any applicable law fulfilling obligations under article\n+11 of the WIPO copyright treaty adopted on 20 December 1996, or\n+similar laws prohibiting or restricting circumvention of such\n+measures.\n+\n+  When you convey a covered work, you waive any legal power to forbid\n+circumvention of technological measures to the extent such circumvention\n+is effected by exercising rights under this License with respect to\n+the covered work, and you disclaim any intention to limit operation or\n+modification of the work as a means of enforcing, against the work's\n+users, your or third parties' legal rights to forbid circumvention of\n+technological measures.\n+\n+  4. Conveying Verbatim Copies.\n+\n+  You may convey verbatim copies of the Program's source code as you\n+receive it, in any medium, provided that you conspicuously and\n+appropriately publish on each copy an appropriate copyright notice;\n+keep intact all notices stating that this License and any\n+non-permissive terms added in accord with section 7 apply to the code;\n+keep intact all notices of the absence of any warranty; and give all\n+recipients a copy of this License along with the Program.\n+\n+  You may charge any price or no price for each copy that you convey,\n+and you may offer support or warranty protection for a fee.\n+\n+  5. Conveying Modified Source Versions.\n+\n+  You may convey a work based on the Program, or the modifications to\n+produce it from the Program, in the form of source code under the\n+terms of section 4, provided that you also meet all of these conditions:\n+\n+    a) The work must carry prominent notices stating that you modified\n+    it, and giving a relevant date.\n+\n+    b) The work must carry prominent notices stating that it is\n+    released under this License and any conditions added under section\n+    7.  This requirement modifies the requirement in section 4 to\n+    \"keep intact all notices\".\n+\n+    c) You must license the entire work, as a whole, under this\n+    License to anyone who comes into possession of a copy.  This\n+    License will therefore apply, along with any applicable section 7\n+    additional terms, to the whole of the work, and all its parts,\n+    regardless of how they are packaged.  This License gives no\n+    permission to license the work in any other way, but it does not\n+    invalidate such permission if you have separately received it.\n+\n+    d) If the work has interactive user interfaces, each must display\n+    Appropriate Legal Notices; however, if the Program has interactive\n+    interfaces that do not display Appropriate Legal Notices, your\n+    work need not make them do so.\n+\n+  A compilation of a covered work with other separate and independent\n+works, which are not by their nature extensions of the covered work,\n+and which are not combined with it such as to form a larger program,\n+in or on a volume of a storage or distribution medium, is called an\n+\"aggregate\" if the compilation and its resulting copyright are not\n+used to limit the access or legal rights of the compilation's users\n+beyond what the individual works permit.  Inclusion of a covered work\n+in an aggregate does not cause this License to apply to the other\n+parts of the aggregate.\n+\n+  6. Conveying Non-Source Forms.\n+\n+  You may convey a covered work in object code form under the terms\n+of sections 4 and 5, provided that you also convey the\n+machine-readable Corresponding Source under the terms of this License,\n+in one of these ways:\n+\n+    a) Convey the object code in, or embodied in, a physical product\n+    (including a physical distribution medium), accompanied by the\n+    Corresponding Source fixed on a durable physical medium\n+    customarily used for software interchange.\n+\n+    b) Convey the object code in, or embodied in, a physical product\n+    (including a physical distribution medium), accompanied by a\n+    written offer, valid for at least three years and valid for as\n+    long as you offer spare parts or customer support for that product\n+    model, to give anyone who possesses the object code either (1) a\n+    copy of the Corresponding Source for all the software in the\n+    product that is covered by this License, on a durable physical\n+    medium customarily used for software interchange, for a price no\n+    more than your reasonable cost of physically performing this\n+    conveying of source, or (2) access to copy the\n+    Corresponding Source from a network server at no charge.\n+\n+    c) Convey individual copies of the object code with a copy of the\n+    written offer to provide the Corresponding Source.  This\n+    alternative is allowed only occasionally and noncommercially, and\n+    only if you received the object code with such an offer, in accord\n+    with subsection 6b.\n+\n+    d) Convey the object code by offering access from a designated\n+    place (gratis or for a charge), and offer equivalent access to the\n+    Corresponding Source in the same way through the same place at no\n+    further charge.  You need not require recipients to copy the\n+    Corresponding Source along with the object code.  If the place to\n+    copy the object code is a network server, the Corresponding Source\n+    may be on a different server (operated by you or a third party)\n+    that supports equivalent copying facilities, provided you maintain\n+    clear directions next to the object code saying where to find the\n+    Corresponding Source.  Regardless of what server hosts the\n+    Corresponding Source, you remain obligated to ensure that it is\n+    available for as long as needed to satisfy these requirements.\n+\n+    e) Convey the object code using peer-to-peer transmission, provided\n+    you inform other peers where the object code and Corresponding\n+    Source of the work are being offered to the general public at no\n+    charge under subsection 6d.\n+\n+  A separable portion of the object code, whose source code is excluded\n+from the Corresponding Source as a System Library, need not be\n+included in conveying the object code work.\n+\n+  A \"User Product\" is either (1) a \"consumer product\", which means any\n+tangible personal property which is normally used for personal, family,\n+or household purposes, or (2) anything designed or sold for incorporation\n+into a dwelling.  In determining whether a product is a consumer product,\n+doubtful cases shall be resolved in favor of coverage.  For a particular\n+product received by a particular user, \"normally used\" refers to a\n+typical or common use of that class of product, regardless of the status\n+of the particular user or of the way in which the particular user\n+actually uses, or expects or is expected to use, the product.  A product\n+is a consumer product regardless of whether the product has substantial\n+commercial, industrial or non-consumer uses, unless such uses represent\n+the only significant mode of use of the product.\n+\n+  \"Installation Information\" for a User Product means any methods,\n+procedures, authorization keys, or other information required to install\n+and execute modified versions of a covered work in that User Product from\n+a modified version of its Corresponding Source.  The information must\n+suffice to ensure that the continued functioning of the modified object\n+code is in no case prevented or interfered with solely because\n+modification has been made.\n+\n+  If you convey an object code work under this section in, or with, or\n+specifically for use in, a User Product, and the conveying occurs as\n+part of a transaction in which the right of possession and use of the\n+User Product is transferred to the recipient in perpetuity or for a\n+fixed term (regardless of how the transaction is characterized), the\n+Corresponding Source conveyed under this section must be accompanied\n+by the Installation Information.  But this requirement does not apply\n+if neither you nor any third party retains the ability to install\n+modified object code on the User Product (for example, the work has\n+been installed in ROM).\n+\n+  The requirement to provide Installation Information does not include a\n+requirement to continue to provide support service, warranty, or updates\n+for a work that has been modified or installed by the recipient, or for\n+the User Product in which it has been modified or installed.  Access to a\n+network may be denied when the modification itself materially and\n+adversely affects the operation of the network or violates the rules and\n+protocols for communication across the network.\n+\n+  Corresponding Source conveyed, and Installation Information provided,\n+in accord with this section must be in a format that is publicly\n+documented (and with an implementation available to the public in\n+source code form), and must require no special password or key for\n+unpacking, reading or copying.\n+\n+  7. Additional Terms.\n+\n+  \"Additional permissions\" are terms that supplement the terms of this\n+License by making exceptions from one or more of its conditions.\n+Additional permissions that are applicable to the entire Program shall\n+be treated as though they were included in this License, to the extent\n+that they are valid under applicable law.  If additional permissions\n+apply only to part of the Program, that part may be used separately\n+under those permissions, but the entire Program remains governed by\n+this License without regard to the additional permissions.\n+\n+  When you convey a copy of a covered work, you may at your option\n+remove any additional permissions from that copy, or from any part of\n+it.  (Additional permissions may be written to require their own\n+removal in certain cases when you modify the work.)  You may place\n+additional permissions on material, added by you to a covered work,\n+for which you have or can give appropriate copyright permission.\n+\n+  Notwithstanding any other provision of this License, for material you\n+add to a covered work, you may (if authorized by the copyright holders of\n+that material) supplement the terms of this License with terms:\n+\n+    a) Disclaiming warranty or limiting liability differently from the\n+    terms of sections 15 and 16 of this License; or\n+\n+    b) Requiring preservation of specified reasonable legal notices or\n+    author attributions in that material or in the Appropriate Legal\n+    Notices displayed by works containing it; or\n+\n+    c) Prohibiting misrepresentation of the origin of that material, or\n+    requiring that modified versions of such material be marked in\n+    reasonable ways as different from the original version; or\n+\n+    d) Limiting the use for publicity purposes of names of licensors or\n+    authors of the material; or\n+\n+    e) Declining to grant rights under trademark law for use of some\n+    trade names, trademarks, or service marks; or\n+\n+    f) Requiring indemnification of licensors and authors of that\n+    material by anyone who conveys the material (or modified versions of\n+    it) with contractual assumptions of liability to the recipient, for\n+    any liability that these contractual assumptions directly impose on\n+    those licensors and authors.\n+\n+  All other non-permissive additional terms are considered \"further\n+restrictions\" within the meaning of section 10.  If the Program as you\n+received it, or any part of it, contains a notice stating that it is\n+governed by this License along with a term that is a further\n+restriction, you may remove that term.  If a license document contains\n+a further restriction but permits relicensing or conveying under this\n+License, you may add to a covered work material governed by the terms\n+of that license document, provided that the further restriction does\n+not survive such relicensing or conveying.\n+\n+  If you add terms to a covered work in accord with this section, you\n+must place, in the relevant source files, a statement of the\n+additional terms that apply to those files, or a notice indicating\n+where to find the applicable terms.\n+\n+  Additional terms, permissive or non-permissive, may be stated in the\n+form of a separately written license, or stated as exceptions;\n+the above requirements apply either way.\n+\n+  8. Termination.\n+\n+  You may not propagate or modify a covered work except as expressly\n+provided under this License.  Any attempt otherwise to propagate or\n+modify it is void, and will automatically terminate your rights under\n+this License (including any patent licenses granted under the third\n+paragraph of section 11).\n+\n+  However, if you cease all violation of this License, then your\n+license from a particular copyright holder is reinstated (a)\n+provisionally, unless and until the copyright holder explicitly and\n+finally terminates your license, and (b) permanently, if the copyright\n+holder fails to notify you of the violation by some reasonable means\n+prior to 60 days after the cessation.\n+\n+  Moreover, your license from a particular copyright holder is\n+reinstated permanently if the copyright holder notifies you of the\n+violation by some reasonable means, this is the first time you have\n+received notice of violation of this License (for any work) from that\n+copyright holder, and you cure the violation prior to 30 days after\n+your receipt of the notice.\n+\n+  Termination of your rights under this section does not terminate the\n+licenses of parties who have received copies or rights from you under\n+this License.  If your rights have been terminated and not permanently\n+reinstated, you do not qualify to receive new licenses for the same\n+material under section 10.\n+\n+  9. Acceptance Not Required for Having Copies.\n+\n+  You are not required to accept this License in order to receive or\n+run a copy of the Program.  Ancillary propagation of a covered work\n+occurring solely as a consequence of using peer-to-peer transmission\n+to receive a copy likewise does not require acceptance.  However,\n+nothing other than this License grants you permission to propagate or\n+modify any covered work.  These actions infringe copyright if you do\n+not accept this License.  Therefore, by modifying or propagating a\n+covered work, you indicate your acceptance of this License to do so.\n+\n+  10. Automatic Licensing of Downstream Recipients.\n+\n+  Each time you convey a covered work, the recipient automatically\n+receives a license from the original licensors, to run, modify and\n+propagate that work, subject to this License.  You are not responsible\n+for enforcing compliance by third parties with this License.\n+\n+  An \"entity transaction\" is a transaction transferring control of an\n+organization, or substantially all assets of one, or subdividing an\n+organization, or merging organizations.  If propagation of a covered\n+work results from an entity transaction, each party to that\n+transaction who receives a copy of the work also receives whatever\n+licenses to the work the party's predecessor in interest had or could\n+give under the previous paragraph, plus a right to possession of the\n+Corresponding Source of the work from the predecessor in interest, if\n+the predecessor has it or can get it with reasonable efforts.\n+\n+  You may not impose any further restrictions on the exercise of the\n+rights granted or affirmed under this License.  For example, you may\n+not impose a license fee, royalty, or other charge for exercise of\n+rights granted under this License, and you may not initiate litigation\n+(including a cross-claim or counterclaim in a lawsuit) alleging that\n+any patent claim is infringed by making, using, selling, offering for\n+sale, or importing the Program or any portion of it.\n+\n+  11. Patents.\n+\n+  A \"contributor\" is a copyright holder who authorizes use under this\n+License of the Program or a work on which the Program is based.  The\n+work thus licensed is called the contributor's \"contributor version\".\n+\n+  A contributor's \"essential patent claims\" are all patent claims\n+owned or controlled by the contributor, whether already acquired or\n+hereafter acquired, that would be infringed by some manner, permitted\n+by this License, of making, using, or selling its contributor version,\n+but do not include claims that would be infringed only as a\n+consequence of further modification of the contributor version.  For\n+purposes of this definition, \"control\" includes the right to grant\n+patent sublicenses in a manner consistent with the requirements of\n+this License.\n+\n+  Each contributor grants you a non-exclusive, worldwide, royalty-free\n+patent license under the contributor's essential patent claims, to\n+make, use, sell, offer for sale, import and otherwise run, modify and\n+propagate the contents of its contributor version.\n+\n+  In the following three paragraphs, a \"patent license\" is any express\n+agreement or commitment, however denominated, not to enforce a patent\n+(such as an express permission to practice a patent or covenant not to\n+sue for patent infringement).  To \"grant\" such a patent license to a\n+party means to make such an agreement or commitment not to enforce a\n+patent against the party.\n+\n+  If you convey a covered work, knowingly relying on a patent license,\n+and the Corresponding Source of the work is not available for anyone\n+to copy, free of charge and under the terms of this License, through a\n+publicly available network server or other readily accessible means,\n+then you must either (1) cause the Corresponding Source to be so\n+available, or (2) arrange to deprive yourself of the benefit of the\n+patent license for this particular work, or (3) arrange, in a manner\n+consistent with the requirements of this License, to extend the patent\n+license to downstream recipients.  \"Knowingly relying\" means you have\n+actual knowledge that, but for the patent license, your conveying the\n+covered work in a country, or your recipient's use of the covered work\n+in a country, would infringe one or more identifiable patents in that\n+country that you have reason to believe are valid.\n+\n+  If, pursuant to or in connection with a single transaction or\n+arrangement, you convey, or propagate by procuring conveyance of, a\n+covered work, and grant a patent license to some of the parties\n+receiving the covered work authorizing them to use, propagate, modify\n+or convey a specific copy of the covered work, then the patent license\n+you grant is automatically extended to all recipients of the covered\n+work and works based on it.\n+\n+  A patent license is \"discriminatory\" if it does not include within\n+the scope of its coverage, prohibits the exercise of, or is\n+conditioned on the non-exercise of one or more of the rights that are\n+specifically granted under this License.  You may not convey a covered\n+work if you are a party to an arrangement with a third party that is\n+in the business of distributing software, under which you make payment\n+to the third party based on the extent of your activity of conveying\n+the work, and under which the third party grants, to any of the\n+parties who would receive the covered work from you, a discriminatory\n+patent license (a) in connection with copies of the covered work\n+conveyed by you (or copies made from those copies), or (b) primarily\n+for and in connection with specific products or compilations that\n+contain the covered work, unless you entered into that arrangement,\n+or that patent license was granted, prior to 28 March 2007.\n+\n+  Nothing in this License shall be construed as excluding or limiting\n+any implied license or other defenses to infringement that may\n+otherwise be available to you under applicable patent law.\n+\n+  12. No Surrender of Others' Freedom.\n+\n+  If conditions are imposed on you (whether by court order, agreement or\n+otherwise) that contradict the conditions of this License, they do not\n+excuse you from the conditions of this License.  If you cannot convey a\n+covered work so as to satisfy simultaneously your obligations under this\n+License and any other pertinent obligations, then as a consequence you may\n+not convey it at all.  For example, if you agree to terms that obligate you\n+to collect a royalty for further conveying from those to whom you convey\n+the Program, the only way you could satisfy both those terms and this\n+License would be to refrain entirely from conveying the Program.\n+\n+  13. Use with the GNU Affero General Public License.\n+\n+  Notwithstanding any other provision of this License, you have\n+permission to link or combine any covered work with a work licensed\n+under version 3 of the GNU Affero General Public License into a single\n+combined work, and to convey the resulting work.  The terms of this\n+License will continue to apply to the part which is the covered work,\n+but the special requirements of the GNU Affero General Public License,\n+section 13, concerning interaction through a network will apply to the\n+combination as such.\n+\n+  14. Revised Versions of this License.\n+\n+  The Free Software Foundation may publish revised and/or new versions of\n+the GNU General Public License from time to time.  Such new versions will\n+be similar in spirit to the present version, but may differ in detail to\n+address new problems or concerns.\n+\n+  Each version is given a distinguishing version number.  If the\n+Program specifies that a certain numbered version of the GNU General\n+Public License \"or any later version\" applies to it, you have the\n+option of following the terms and conditions either of that numbered\n+version or of any later version published by the Free Software\n+Foundation.  If the Program does not specify a version number of the\n+GNU General Public License, you may choose any version ever published\n+by the Free Software Foundation.\n+\n+  If the Program specifies that a proxy can decide which future\n+versions of the GNU General Public License can be used, that proxy's\n+public statement of acceptance of a version permanently authorizes you\n+to choose that version for the Program.\n+\n+  Later license versions may give you additional or different\n+permissions.  However, no additional obligations are imposed on any\n+author or copyright holder as a result of your choosing to follow a\n+later version.\n+\n+  15. Disclaimer of Warranty.\n+\n+  THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY\n+APPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT\n+HOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY\n+OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO,\n+THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n+PURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM\n+IS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF\n+ALL NECESSARY SERVICING, REPAIR OR CORRECTION.\n+\n+  16. Limitation of Liability.\n+\n+  IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\n+WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS\n+THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY\n+GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE\n+USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF\n+DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD\n+PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS),\n+EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF\n+SUCH DAMAGES.\n+\n+  17. Interpretation of Sections 15 and 16.\n+\n+  If the disclaimer of warranty and limitation of liability provided\n+above cannot be given local legal effect according to their terms,\n+reviewing courts shall apply local law that most closely approximates\n+an absolute waiver of all civil liability in connection with the\n+Program, unless a warranty or assumption of liability accompanies a\n+copy of the Program in return for a fee.\n+\n+                     END OF TERMS AND CONDITIONS\n+\n+            How to Apply These Terms to Your New Programs\n+\n+  If you develop a new program, and you want it to be of the greatest\n+possible use to the public, the best way to achieve this is to make it\n+free software which everyone can redistribute and change under these terms.\n+\n+  To do so, attach the following notices to the program.  It is safest\n+to attach them to the start of each source file to most effectively\n+state the exclusion of warranty; and each file should have at least\n+the \"copyright\" line and a pointer to where the full notice is found.\n+\n+    <one line to give the program's name and a brief idea of what it does.>\n+    Copyright (C) <year>  <name of author>\n+\n+    This program is free software: you can redistribute it and/or modify\n+    it under the terms of the GNU General Public License as published by\n+    the Free Software Foundation, either version 3 of the License, or\n+    (at your option) any later version.\n+\n+    This program is distributed in the hope that it will be useful,\n+    but WITHOUT ANY WARRANTY; without even the implied warranty of\n+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+    GNU General Public License for more details.\n+\n+    You should have received a copy of the GNU General Public License\n+    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+\n+Also add information on how to contact you by electronic and paper mail.\n+\n+  If the program does terminal interaction, make it output a short\n+notice like this when it starts in an interactive mode:\n+\n+    <program>  Copyright (C) <year>  <name of author>\n+    This program comes with ABSOLUTELY NO WARRANTY; for details type `show w'.\n+    This is free software, and you are welcome to redistribute it\n+    under certain conditions; type `show c' for details.\n+\n+The hypothetical commands `show w' and `show c' should show the appropriate\n+parts of the General Public License.  Of course, your program's commands\n+might be different; for a GUI interface, you would use an \"about box\".\n+\n+  You should also get your employer (if you work as a programmer) or school,\n+if any, to sign a \"copyright disclaimer\" for the program, if necessary.\n+For more information on this, and how to apply and follow the GNU GPL, see\n+<http://www.gnu.org/licenses/>.\n+\n+  The GNU General Public License does not permit incorporating your program\n+into proprietary programs.  If your program is a subroutine library, you\n+may consider it more useful to permit linking proprietary applications with\n+the library.  If this is what you want to do, use the GNU Lesser General\n+Public License instead of this License.  But first, please read\n+<http://www.gnu.org/philosophy/why-not-lgpl.html>.\n+"}, {"sha": "fc8a5de7edf437cdc98a216370faf7c757279bcb", "filename": "gcc/m2/COPYING3.LIB", "status": "added", "additions": 165, "deletions": 0, "changes": 165, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2FCOPYING3.LIB", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2FCOPYING3.LIB", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2FCOPYING3.LIB?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754", "patch": "@@ -0,0 +1,165 @@\n+\t\t   GNU LESSER GENERAL PUBLIC LICENSE\n+                       Version 3, 29 June 2007\n+\n+ Copyright (C) 2007 Free Software Foundation, Inc. <http://fsf.org/>\n+ Everyone is permitted to copy and distribute verbatim copies\n+ of this license document, but changing it is not allowed.\n+\n+\n+  This version of the GNU Lesser General Public License incorporates\n+the terms and conditions of version 3 of the GNU General Public\n+License, supplemented by the additional permissions listed below.\n+\n+  0. Additional Definitions. \n+\n+  As used herein, \"this License\" refers to version 3 of the GNU Lesser\n+General Public License, and the \"GNU GPL\" refers to version 3 of the GNU\n+General Public License.\n+\n+  \"The Library\" refers to a covered work governed by this License,\n+other than an Application or a Combined Work as defined below.\n+\n+  An \"Application\" is any work that makes use of an interface provided\n+by the Library, but which is not otherwise based on the Library.\n+Defining a subclass of a class defined by the Library is deemed a mode\n+of using an interface provided by the Library.\n+\n+  A \"Combined Work\" is a work produced by combining or linking an\n+Application with the Library.  The particular version of the Library\n+with which the Combined Work was made is also called the \"Linked\n+Version\".\n+\n+  The \"Minimal Corresponding Source\" for a Combined Work means the\n+Corresponding Source for the Combined Work, excluding any source code\n+for portions of the Combined Work that, considered in isolation, are\n+based on the Application, and not on the Linked Version.\n+\n+  The \"Corresponding Application Code\" for a Combined Work means the\n+object code and/or source code for the Application, including any data\n+and utility programs needed for reproducing the Combined Work from the\n+Application, but excluding the System Libraries of the Combined Work.\n+\n+  1. Exception to Section 3 of the GNU GPL.\n+\n+  You may convey a covered work under sections 3 and 4 of this License\n+without being bound by section 3 of the GNU GPL.\n+\n+  2. Conveying Modified Versions.\n+\n+  If you modify a copy of the Library, and, in your modifications, a\n+facility refers to a function or data to be supplied by an Application\n+that uses the facility (other than as an argument passed when the\n+facility is invoked), then you may convey a copy of the modified\n+version:\n+\n+   a) under this License, provided that you make a good faith effort to\n+   ensure that, in the event an Application does not supply the\n+   function or data, the facility still operates, and performs\n+   whatever part of its purpose remains meaningful, or\n+\n+   b) under the GNU GPL, with none of the additional permissions of\n+   this License applicable to that copy.\n+\n+  3. Object Code Incorporating Material from Library Header Files.\n+\n+  The object code form of an Application may incorporate material from\n+a header file that is part of the Library.  You may convey such object\n+code under terms of your choice, provided that, if the incorporated\n+material is not limited to numerical parameters, data structure\n+layouts and accessors, or small macros, inline functions and templates\n+(ten or fewer lines in length), you do both of the following:\n+\n+   a) Give prominent notice with each copy of the object code that the\n+   Library is used in it and that the Library and its use are\n+   covered by this License.\n+\n+   b) Accompany the object code with a copy of the GNU GPL and this license\n+   document.\n+\n+  4. Combined Works.\n+\n+  You may convey a Combined Work under terms of your choice that,\n+taken together, effectively do not restrict modification of the\n+portions of the Library contained in the Combined Work and reverse\n+engineering for debugging such modifications, if you also do each of\n+the following:\n+\n+   a) Give prominent notice with each copy of the Combined Work that\n+   the Library is used in it and that the Library and its use are\n+   covered by this License.\n+\n+   b) Accompany the Combined Work with a copy of the GNU GPL and this license\n+   document.\n+\n+   c) For a Combined Work that displays copyright notices during\n+   execution, include the copyright notice for the Library among\n+   these notices, as well as a reference directing the user to the\n+   copies of the GNU GPL and this license document.\n+\n+   d) Do one of the following:\n+\n+       0) Convey the Minimal Corresponding Source under the terms of this\n+       License, and the Corresponding Application Code in a form\n+       suitable for, and under terms that permit, the user to\n+       recombine or relink the Application with a modified version of\n+       the Linked Version to produce a modified Combined Work, in the\n+       manner specified by section 6 of the GNU GPL for conveying\n+       Corresponding Source.\n+\n+       1) Use a suitable shared library mechanism for linking with the\n+       Library.  A suitable mechanism is one that (a) uses at run time\n+       a copy of the Library already present on the user's computer\n+       system, and (b) will operate properly with a modified version\n+       of the Library that is interface-compatible with the Linked\n+       Version. \n+\n+   e) Provide Installation Information, but only if you would otherwise\n+   be required to provide such information under section 6 of the\n+   GNU GPL, and only to the extent that such information is\n+   necessary to install and execute a modified version of the\n+   Combined Work produced by recombining or relinking the\n+   Application with a modified version of the Linked Version. (If\n+   you use option 4d0, the Installation Information must accompany\n+   the Minimal Corresponding Source and Corresponding Application\n+   Code. If you use option 4d1, you must provide the Installation\n+   Information in the manner specified by section 6 of the GNU GPL\n+   for conveying Corresponding Source.)\n+\n+  5. Combined Libraries.\n+\n+  You may place library facilities that are a work based on the\n+Library side by side in a single library together with other library\n+facilities that are not Applications and are not covered by this\n+License, and convey such a combined library under terms of your\n+choice, if you do both of the following:\n+\n+   a) Accompany the combined library with a copy of the same work based\n+   on the Library, uncombined with any other library facilities,\n+   conveyed under the terms of this License.\n+\n+   b) Give prominent notice with the combined library that part of it\n+   is a work based on the Library, and explaining where to find the\n+   accompanying uncombined form of the same work.\n+\n+  6. Revised Versions of the GNU Lesser General Public License.\n+\n+  The Free Software Foundation may publish revised and/or new versions\n+of the GNU Lesser General Public License from time to time. Such new\n+versions will be similar in spirit to the present version, but may\n+differ in detail to address new problems or concerns.\n+\n+  Each version is given a distinguishing version number. If the\n+Library as you received it specifies that a certain numbered version\n+of the GNU Lesser General Public License \"or any later version\"\n+applies to it, you have the option of following the terms and\n+conditions either of that published version or of any later version\n+published by the Free Software Foundation. If the Library as you\n+received it does not specify a version number of the GNU Lesser\n+General Public License, you may choose any version of the GNU Lesser\n+General Public License ever published by the Free Software Foundation.\n+\n+  If the Library as you received it specifies that a proxy can decide\n+whether future versions of the GNU Lesser General Public License shall\n+apply, that proxy's public statement of acceptance of any version is\n+permanent authorization for you to choose that version for the\n+Library."}, {"sha": "34da98a594d226ca8f5c917bf8ca0c10b1f636f1", "filename": "gcc/m2/ChangeLog", "status": "modified", "additions": 920, "deletions": 4, "changes": 924, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2FChangeLog?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754", "patch": "@@ -1,5 +1,921 @@\n-Copyright (C) 2022 Free Software Foundation, Inc.\n+2022-12-14  Gaius Mulley  <gaiusmod2@gmail.com>\n \n-Copying and distribution of this file, with or without modification,\n-are permitted in any medium without royalty provided the copyright\n-notice and this notice are preserved.\n+\t* COPYING.FDL: New file.\n+\t* COPYING.RUNTIME: New file.\n+\t* COPYING3: New file.\n+\t* COPYING3.LIB: New file.\n+\t* Make-lang.in: New file.\n+\t* Make-maintainer.in: New file.\n+\t* NEWS: New file.\n+\t* README: New file.\n+\t* config-lang.in: New file.\n+\t* config-make.in: New file.\n+\t* configure.ac: New file.\n+\t* gm2-compiler/CLexBuf.def: New file.\n+\t* gm2-compiler/CLexBuf.mod: New file.\n+\t* gm2-compiler/FifoQueue.def: New file.\n+\t* gm2-compiler/FifoQueue.mod: New file.\n+\t* gm2-compiler/Lists.def: New file.\n+\t* gm2-compiler/Lists.mod: New file.\n+\t* gm2-compiler/M2ALU.def: New file.\n+\t* gm2-compiler/M2ALU.mod: New file.\n+\t* gm2-compiler/M2AsmUtil.def: New file.\n+\t* gm2-compiler/M2AsmUtil.mod: New file.\n+\t* gm2-compiler/M2Base.def: New file.\n+\t* gm2-compiler/M2Base.mod: New file.\n+\t* gm2-compiler/M2BasicBlock.def: New file.\n+\t* gm2-compiler/M2BasicBlock.mod: New file.\n+\t* gm2-compiler/M2Batch.def: New file.\n+\t* gm2-compiler/M2Batch.mod: New file.\n+\t* gm2-compiler/M2Bitset.def: New file.\n+\t* gm2-compiler/M2Bitset.mod: New file.\n+\t* gm2-compiler/M2CaseList.def: New file.\n+\t* gm2-compiler/M2CaseList.mod: New file.\n+\t* gm2-compiler/M2Check.def: New file.\n+\t* gm2-compiler/M2Check.mod: New file.\n+\t* gm2-compiler/M2Code.def: New file.\n+\t* gm2-compiler/M2Code.mod: New file.\n+\t* gm2-compiler/M2ColorString.def: New file.\n+\t* gm2-compiler/M2ColorString.mod: New file.\n+\t* gm2-compiler/M2Comp.def: New file.\n+\t* gm2-compiler/M2Comp.mod: New file.\n+\t* gm2-compiler/M2Const.def: New file.\n+\t* gm2-compiler/M2Const.mod: New file.\n+\t* gm2-compiler/M2Debug.def: New file.\n+\t* gm2-compiler/M2Debug.mod: New file.\n+\t* gm2-compiler/M2DebugStack.def: New file.\n+\t* gm2-compiler/M2DebugStack.mod: New file.\n+\t* gm2-compiler/M2Defaults.def: New file.\n+\t* gm2-compiler/M2Defaults.mod: New file.\n+\t* gm2-compiler/M2DriverOptions.def: New file.\n+\t* gm2-compiler/M2DriverOptions.mod: New file.\n+\t* gm2-compiler/M2Emit.def: New file.\n+\t* gm2-compiler/M2Emit.mod: New file.\n+\t* gm2-compiler/M2Error.def: New file.\n+\t* gm2-compiler/M2Error.mod: New file.\n+\t* gm2-compiler/M2EvalSym.def: New file.\n+\t* gm2-compiler/M2FileName.def: New file.\n+\t* gm2-compiler/M2FileName.mod: New file.\n+\t* gm2-compiler/M2GCCDeclare.def: New file.\n+\t* gm2-compiler/M2GCCDeclare.mod: New file.\n+\t* gm2-compiler/M2GenGCC.def: New file.\n+\t* gm2-compiler/M2GenGCC.mod: New file.\n+\t* gm2-compiler/M2Graph.def: New file.\n+\t* gm2-compiler/M2Graph.mod: New file.\n+\t* gm2-compiler/M2Lex.def: New file.\n+\t* gm2-compiler/M2Lex.mod: New file.\n+\t* gm2-compiler/M2LexBuf.def: New file.\n+\t* gm2-compiler/M2LexBuf.mod: New file.\n+\t* gm2-compiler/M2MetaError.def: New file.\n+\t* gm2-compiler/M2MetaError.mod: New file.\n+\t* gm2-compiler/M2Optimize.def: New file.\n+\t* gm2-compiler/M2Optimize.mod: New file.\n+\t* gm2-compiler/M2Options.def: New file.\n+\t* gm2-compiler/M2Options.mod: New file.\n+\t* gm2-compiler/M2Pass.def: New file.\n+\t* gm2-compiler/M2Pass.mod: New file.\n+\t* gm2-compiler/M2Preprocess.def: New file.\n+\t* gm2-compiler/M2Preprocess.mod: New file.\n+\t* gm2-compiler/M2Printf.def: New file.\n+\t* gm2-compiler/M2Printf.mod: New file.\n+\t* gm2-compiler/M2Quads.def: New file.\n+\t* gm2-compiler/M2Quads.mod: New file.\n+\t* gm2-compiler/M2Quiet.def: New file.\n+\t* gm2-compiler/M2Quiet.mod: New file.\n+\t* gm2-compiler/M2Range.def: New file.\n+\t* gm2-compiler/M2Range.mod: New file.\n+\t* gm2-compiler/M2Reserved.def: New file.\n+\t* gm2-compiler/M2Reserved.mod: New file.\n+\t* gm2-compiler/M2SSA.def: New file.\n+\t* gm2-compiler/M2SSA.mod: New file.\n+\t* gm2-compiler/M2Scaffold.def: New file.\n+\t* gm2-compiler/M2Scaffold.mod: New file.\n+\t* gm2-compiler/M2Scope.def: New file.\n+\t* gm2-compiler/M2Scope.mod: New file.\n+\t* gm2-compiler/M2Search.def: New file.\n+\t* gm2-compiler/M2Search.mod: New file.\n+\t* gm2-compiler/M2Size.def: New file.\n+\t* gm2-compiler/M2Size.mod: New file.\n+\t* gm2-compiler/M2StackAddress.def: New file.\n+\t* gm2-compiler/M2StackAddress.mod: New file.\n+\t* gm2-compiler/M2StackWord.def: New file.\n+\t* gm2-compiler/M2StackWord.mod: New file.\n+\t* gm2-compiler/M2Students.def: New file.\n+\t* gm2-compiler/M2Students.mod: New file.\n+\t* gm2-compiler/M2Swig.def: New file.\n+\t* gm2-compiler/M2Swig.mod: New file.\n+\t* gm2-compiler/M2System.def: New file.\n+\t* gm2-compiler/M2System.mod: New file.\n+\t* gm2-compiler/M2Version.def: New file.\n+\t* gm2-compiler/NameKey.def: New file.\n+\t* gm2-compiler/NameKey.mod: New file.\n+\t* gm2-compiler/ObjectFiles.def: New file.\n+\t* gm2-compiler/ObjectFiles.mod: New file.\n+\t* gm2-compiler/Output.def: New file.\n+\t* gm2-compiler/Output.mod: New file.\n+\t* gm2-compiler/P0SymBuild.def: New file.\n+\t* gm2-compiler/P0SymBuild.mod: New file.\n+\t* gm2-compiler/P0SyntaxCheck.bnf: New file.\n+\t* gm2-compiler/P0SyntaxCheck.def: New file.\n+\t* gm2-compiler/P1Build.bnf: New file.\n+\t* gm2-compiler/P1Build.def: New file.\n+\t* gm2-compiler/P1SymBuild.def: New file.\n+\t* gm2-compiler/P1SymBuild.mod: New file.\n+\t* gm2-compiler/P2Build.bnf: New file.\n+\t* gm2-compiler/P2Build.def: New file.\n+\t* gm2-compiler/P2SymBuild.def: New file.\n+\t* gm2-compiler/P2SymBuild.mod: New file.\n+\t* gm2-compiler/P3Build.bnf: New file.\n+\t* gm2-compiler/P3Build.def: New file.\n+\t* gm2-compiler/P3SymBuild.def: New file.\n+\t* gm2-compiler/P3SymBuild.mod: New file.\n+\t* gm2-compiler/PCBuild.bnf: New file.\n+\t* gm2-compiler/PCBuild.def: New file.\n+\t* gm2-compiler/PCSymBuild.def: New file.\n+\t* gm2-compiler/PCSymBuild.mod: New file.\n+\t* gm2-compiler/PHBuild.bnf: New file.\n+\t* gm2-compiler/PHBuild.def: New file.\n+\t* gm2-compiler/README: New file.\n+\t* gm2-compiler/Sets.def: New file.\n+\t* gm2-compiler/Sets.mod: New file.\n+\t* gm2-compiler/SymbolConversion.def: New file.\n+\t* gm2-compiler/SymbolConversion.mod: New file.\n+\t* gm2-compiler/SymbolKey.def: New file.\n+\t* gm2-compiler/SymbolKey.mod: New file.\n+\t* gm2-compiler/SymbolTable.def: New file.\n+\t* gm2-compiler/SymbolTable.mod: New file.\n+\t* gm2-compiler/bnflex.def: New file.\n+\t* gm2-compiler/bnflex.mod: New file.\n+\t* gm2-compiler/cflex.def: New file.\n+\t* gm2-compiler/gm2.mod: New file.\n+\t* gm2-compiler/gm2lcc.mod: New file.\n+\t* gm2-compiler/gm2lgen.mod: New file.\n+\t* gm2-compiler/gm2lorder.mod: New file.\n+\t* gm2-compiler/m2flex.def: New file.\n+\t* gm2-compiler/ppg.mod: New file.\n+\t* gm2-gcc/README: New file.\n+\t* gm2-gcc/dynamicstrings.h: New file.\n+\t* gm2-gcc/gcc-consolidation.h: New file.\n+\t* gm2-gcc/init.cc: New file.\n+\t* gm2-gcc/init.def: New file.\n+\t* gm2-gcc/init.h: New file.\n+\t* gm2-gcc/m2assert.cc: New file.\n+\t* gm2-gcc/m2assert.h: New file.\n+\t* gm2-gcc/m2block.cc: New file.\n+\t* gm2-gcc/m2block.def: New file.\n+\t* gm2-gcc/m2block.h: New file.\n+\t* gm2-gcc/m2builtins.cc: New file.\n+\t* gm2-gcc/m2builtins.def: New file.\n+\t* gm2-gcc/m2builtins.h: New file.\n+\t* gm2-gcc/m2color.cc: New file.\n+\t* gm2-gcc/m2color.def: New file.\n+\t* gm2-gcc/m2color.h: New file.\n+\t* gm2-gcc/m2configure.cc: New file.\n+\t* gm2-gcc/m2configure.def: New file.\n+\t* gm2-gcc/m2configure.h: New file.\n+\t* gm2-gcc/m2convert.cc: New file.\n+\t* gm2-gcc/m2convert.def: New file.\n+\t* gm2-gcc/m2convert.h: New file.\n+\t* gm2-gcc/m2decl.cc: New file.\n+\t* gm2-gcc/m2decl.def: New file.\n+\t* gm2-gcc/m2decl.h: New file.\n+\t* gm2-gcc/m2except.cc: New file.\n+\t* gm2-gcc/m2except.def: New file.\n+\t* gm2-gcc/m2except.h: New file.\n+\t* gm2-gcc/m2expr.cc: New file.\n+\t* gm2-gcc/m2expr.def: New file.\n+\t* gm2-gcc/m2expr.h: New file.\n+\t* gm2-gcc/m2linemap.cc: New file.\n+\t* gm2-gcc/m2linemap.def: New file.\n+\t* gm2-gcc/m2linemap.h: New file.\n+\t* gm2-gcc/m2misc.cc: New file.\n+\t* gm2-gcc/m2misc.def: New file.\n+\t* gm2-gcc/m2misc.h: New file.\n+\t* gm2-gcc/m2options.h: New file.\n+\t* gm2-gcc/m2range.h: New file.\n+\t* gm2-gcc/m2search.h: New file.\n+\t* gm2-gcc/m2statement.cc: New file.\n+\t* gm2-gcc/m2statement.def: New file.\n+\t* gm2-gcc/m2statement.h: New file.\n+\t* gm2-gcc/m2top.cc: New file.\n+\t* gm2-gcc/m2top.def: New file.\n+\t* gm2-gcc/m2top.h: New file.\n+\t* gm2-gcc/m2tree.cc: New file.\n+\t* gm2-gcc/m2tree.def: New file.\n+\t* gm2-gcc/m2tree.h: New file.\n+\t* gm2-gcc/m2treelib.cc: New file.\n+\t* gm2-gcc/m2treelib.def: New file.\n+\t* gm2-gcc/m2treelib.h: New file.\n+\t* gm2-gcc/m2type.cc: New file.\n+\t* gm2-gcc/m2type.def: New file.\n+\t* gm2-gcc/m2type.h: New file.\n+\t* gm2-gcc/rtegraph.cc: New file.\n+\t* gm2-gcc/rtegraph.h: New file.\n+\t* gm2-ici/M2Emit.mod: New file.\n+\t* gm2-ici/README: New file.\n+\t* gm2-ici/m2linemap.c: New file.\n+\t* gm2-internals.texi: New file.\n+\t* gm2-lang.cc: New file.\n+\t* gm2-lang.h: New file.\n+\t* gm2-libiberty/README: New file.\n+\t* gm2-libiberty/choosetemp.def: New file.\n+\t* gm2-libiberty/pexecute.def: New file.\n+\t* gm2-libs-ch/M2LINK.c: New file.\n+\t* gm2-libs-ch/README: New file.\n+\t* gm2-libs-ch/RTcodummy.c: New file.\n+\t* gm2-libs-ch/RTintdummy.c: New file.\n+\t* gm2-libs-ch/Selective.c: New file.\n+\t* gm2-libs-ch/SysExceptions.c: New file.\n+\t* gm2-libs-ch/UnixArgs.cc: New file.\n+\t* gm2-libs-ch/cgetopt.c: New file.\n+\t* gm2-libs-ch/choosetemp.c: New file.\n+\t* gm2-libs-ch/dtoa.cc: New file.\n+\t* gm2-libs-ch/errno.c: New file.\n+\t* gm2-libs-ch/host.c: New file.\n+\t* gm2-libs-ch/ldtoa.cc: New file.\n+\t* gm2-libs-ch/m2rts.h: New file.\n+\t* gm2-libs-ch/termios.c: New file.\n+\t* gm2-libs-ch/tools.c: New file.\n+\t* gm2-libs-ch/wrapc.c: New file.\n+\t* gm2-libs-ch/xlibc.c: New file.\n+\t* gm2-libs-coroutines/Debug.def: New file.\n+\t* gm2-libs-coroutines/Debug.mod: New file.\n+\t* gm2-libs-coroutines/Executive.def: New file.\n+\t* gm2-libs-coroutines/Executive.mod: New file.\n+\t* gm2-libs-coroutines/KeyBoardLEDs.def: New file.\n+\t* gm2-libs-coroutines/README.texi: New file.\n+\t* gm2-libs-coroutines/SYSTEM.def: New file.\n+\t* gm2-libs-coroutines/SYSTEM.mod: New file.\n+\t* gm2-libs-coroutines/TimerHandler.def: New file.\n+\t* gm2-libs-coroutines/TimerHandler.mod: New file.\n+\t* gm2-libs-iso/COROUTINES.def: New file.\n+\t* gm2-libs-iso/COROUTINES.mod: New file.\n+\t* gm2-libs-iso/ChanConsts.def: New file.\n+\t* gm2-libs-iso/ChanConsts.h: New file.\n+\t* gm2-libs-iso/ChanConsts.mod: New file.\n+\t* gm2-libs-iso/CharClass.def: New file.\n+\t* gm2-libs-iso/CharClass.mod: New file.\n+\t* gm2-libs-iso/ClientSocket.def: New file.\n+\t* gm2-libs-iso/ClientSocket.mod: New file.\n+\t* gm2-libs-iso/ComplexMath.def: New file.\n+\t* gm2-libs-iso/ComplexMath.mod: New file.\n+\t* gm2-libs-iso/ConvStringLong.def: New file.\n+\t* gm2-libs-iso/ConvStringLong.mod: New file.\n+\t* gm2-libs-iso/ConvStringReal.def: New file.\n+\t* gm2-libs-iso/ConvStringReal.mod: New file.\n+\t* gm2-libs-iso/ConvTypes.def: New file.\n+\t* gm2-libs-iso/ConvTypes.mod: New file.\n+\t* gm2-libs-iso/EXCEPTIONS.def: New file.\n+\t* gm2-libs-iso/EXCEPTIONS.mod: New file.\n+\t* gm2-libs-iso/ErrnoCategory.def: New file.\n+\t* gm2-libs-iso/GeneralUserExceptions.def: New file.\n+\t* gm2-libs-iso/GeneralUserExceptions.mod: New file.\n+\t* gm2-libs-iso/IOChan.def: New file.\n+\t* gm2-libs-iso/IOChan.mod: New file.\n+\t* gm2-libs-iso/IOConsts.def: New file.\n+\t* gm2-libs-iso/IOConsts.mod: New file.\n+\t* gm2-libs-iso/IOLink.def: New file.\n+\t* gm2-libs-iso/IOLink.mod: New file.\n+\t* gm2-libs-iso/IOResult.def: New file.\n+\t* gm2-libs-iso/IOResult.mod: New file.\n+\t* gm2-libs-iso/LongComplexMath.def: New file.\n+\t* gm2-libs-iso/LongComplexMath.mod: New file.\n+\t* gm2-libs-iso/LongConv.def: New file.\n+\t* gm2-libs-iso/LongConv.mod: New file.\n+\t* gm2-libs-iso/LongIO.def: New file.\n+\t* gm2-libs-iso/LongIO.mod: New file.\n+\t* gm2-libs-iso/LongMath.def: New file.\n+\t* gm2-libs-iso/LongMath.mod: New file.\n+\t* gm2-libs-iso/LongStr.def: New file.\n+\t* gm2-libs-iso/LongStr.mod: New file.\n+\t* gm2-libs-iso/LongWholeIO.def: New file.\n+\t* gm2-libs-iso/LongWholeIO.mod: New file.\n+\t* gm2-libs-iso/LowLong.def: New file.\n+\t* gm2-libs-iso/LowLong.mod: New file.\n+\t* gm2-libs-iso/LowReal.def: New file.\n+\t* gm2-libs-iso/LowReal.mod: New file.\n+\t* gm2-libs-iso/LowShort.def: New file.\n+\t* gm2-libs-iso/LowShort.mod: New file.\n+\t* gm2-libs-iso/M2EXCEPTION.def: New file.\n+\t* gm2-libs-iso/M2EXCEPTION.mod: New file.\n+\t* gm2-libs-iso/M2RTS.def: New file.\n+\t* gm2-libs-iso/M2RTS.mod: New file.\n+\t* gm2-libs-iso/MemStream.def: New file.\n+\t* gm2-libs-iso/MemStream.mod: New file.\n+\t* gm2-libs-iso/Preemptive.def: New file.\n+\t* gm2-libs-iso/Preemptive.mod: New file.\n+\t* gm2-libs-iso/Processes.def: New file.\n+\t* gm2-libs-iso/Processes.mod: New file.\n+\t* gm2-libs-iso/ProgramArgs.def: New file.\n+\t* gm2-libs-iso/ProgramArgs.mod: New file.\n+\t* gm2-libs-iso/README.texi: New file.\n+\t* gm2-libs-iso/RTco.def: New file.\n+\t* gm2-libs-iso/RTdata.def: New file.\n+\t* gm2-libs-iso/RTdata.mod: New file.\n+\t* gm2-libs-iso/RTentity.def: New file.\n+\t* gm2-libs-iso/RTentity.mod: New file.\n+\t* gm2-libs-iso/RTfio.def: New file.\n+\t* gm2-libs-iso/RTfio.mod: New file.\n+\t* gm2-libs-iso/RTgen.def: New file.\n+\t* gm2-libs-iso/RTgen.mod: New file.\n+\t* gm2-libs-iso/RTgenif.def: New file.\n+\t* gm2-libs-iso/RTgenif.mod: New file.\n+\t* gm2-libs-iso/RTio.def: New file.\n+\t* gm2-libs-iso/RTio.mod: New file.\n+\t* gm2-libs-iso/RandomNumber.def: New file.\n+\t* gm2-libs-iso/RandomNumber.mod: New file.\n+\t* gm2-libs-iso/RawIO.def: New file.\n+\t* gm2-libs-iso/RawIO.mod: New file.\n+\t* gm2-libs-iso/RealConv.def: New file.\n+\t* gm2-libs-iso/RealConv.mod: New file.\n+\t* gm2-libs-iso/RealIO.def: New file.\n+\t* gm2-libs-iso/RealIO.mod: New file.\n+\t* gm2-libs-iso/RealMath.def: New file.\n+\t* gm2-libs-iso/RealMath.mod: New file.\n+\t* gm2-libs-iso/RealStr.def: New file.\n+\t* gm2-libs-iso/RealStr.mod: New file.\n+\t* gm2-libs-iso/RndFile.def: New file.\n+\t* gm2-libs-iso/RndFile.mod: New file.\n+\t* gm2-libs-iso/SIOResult.def: New file.\n+\t* gm2-libs-iso/SIOResult.mod: New file.\n+\t* gm2-libs-iso/SLongIO.def: New file.\n+\t* gm2-libs-iso/SLongIO.mod: New file.\n+\t* gm2-libs-iso/SLongWholeIO.def: New file.\n+\t* gm2-libs-iso/SLongWholeIO.mod: New file.\n+\t* gm2-libs-iso/SRawIO.def: New file.\n+\t* gm2-libs-iso/SRawIO.mod: New file.\n+\t* gm2-libs-iso/SRealIO.def: New file.\n+\t* gm2-libs-iso/SRealIO.mod: New file.\n+\t* gm2-libs-iso/SShortIO.def: New file.\n+\t* gm2-libs-iso/SShortIO.mod: New file.\n+\t* gm2-libs-iso/SShortWholeIO.def: New file.\n+\t* gm2-libs-iso/SShortWholeIO.mod: New file.\n+\t* gm2-libs-iso/STextIO.def: New file.\n+\t* gm2-libs-iso/STextIO.mod: New file.\n+\t* gm2-libs-iso/SWholeIO.def: New file.\n+\t* gm2-libs-iso/SWholeIO.mod: New file.\n+\t* gm2-libs-iso/SYSTEM.def: New file.\n+\t* gm2-libs-iso/SYSTEM.mod: New file.\n+\t* gm2-libs-iso/Semaphores.def: New file.\n+\t* gm2-libs-iso/Semaphores.mod: New file.\n+\t* gm2-libs-iso/SeqFile.def: New file.\n+\t* gm2-libs-iso/SeqFile.mod: New file.\n+\t* gm2-libs-iso/ShortComplexMath.def: New file.\n+\t* gm2-libs-iso/ShortComplexMath.mod: New file.\n+\t* gm2-libs-iso/ShortIO.def: New file.\n+\t* gm2-libs-iso/ShortIO.mod: New file.\n+\t* gm2-libs-iso/ShortWholeIO.def: New file.\n+\t* gm2-libs-iso/ShortWholeIO.mod: New file.\n+\t* gm2-libs-iso/SimpleCipher.def: New file.\n+\t* gm2-libs-iso/SimpleCipher.mod: New file.\n+\t* gm2-libs-iso/StdChans.def: New file.\n+\t* gm2-libs-iso/StdChans.mod: New file.\n+\t* gm2-libs-iso/Storage.def: New file.\n+\t* gm2-libs-iso/Storage.mod: New file.\n+\t* gm2-libs-iso/StreamFile.def: New file.\n+\t* gm2-libs-iso/StreamFile.mod: New file.\n+\t* gm2-libs-iso/StringChan.def: New file.\n+\t* gm2-libs-iso/StringChan.mod: New file.\n+\t* gm2-libs-iso/Strings.def: New file.\n+\t* gm2-libs-iso/Strings.mod: New file.\n+\t* gm2-libs-iso/SysClock.def: New file.\n+\t* gm2-libs-iso/SysClock.mod: New file.\n+\t* gm2-libs-iso/TERMINATION.def: New file.\n+\t* gm2-libs-iso/TERMINATION.mod: New file.\n+\t* gm2-libs-iso/TermFile.def: New file.\n+\t* gm2-libs-iso/TermFile.mod: New file.\n+\t* gm2-libs-iso/TextIO.def: New file.\n+\t* gm2-libs-iso/TextIO.mod: New file.\n+\t* gm2-libs-iso/WholeConv.def: New file.\n+\t* gm2-libs-iso/WholeConv.mod: New file.\n+\t* gm2-libs-iso/WholeIO.def: New file.\n+\t* gm2-libs-iso/WholeIO.mod: New file.\n+\t* gm2-libs-iso/WholeStr.def: New file.\n+\t* gm2-libs-iso/WholeStr.mod: New file.\n+\t* gm2-libs-iso/wrapsock.c: New file.\n+\t* gm2-libs-iso/wrapsock.def: New file.\n+\t* gm2-libs-iso/wraptime.c: New file.\n+\t* gm2-libs-iso/wraptime.def: New file.\n+\t* gm2-libs-min/M2RTS.def: New file.\n+\t* gm2-libs-min/M2RTS.mod: New file.\n+\t* gm2-libs-min/SYSTEM.def: New file.\n+\t* gm2-libs-min/SYSTEM.mod: New file.\n+\t* gm2-libs-min/libc.c: New file.\n+\t* gm2-libs-min/libc.def: New file.\n+\t* gm2-libs-pim/BitBlockOps.def: New file.\n+\t* gm2-libs-pim/BitBlockOps.mod: New file.\n+\t* gm2-libs-pim/BitByteOps.def: New file.\n+\t* gm2-libs-pim/BitByteOps.mod: New file.\n+\t* gm2-libs-pim/BitWordOps.def: New file.\n+\t* gm2-libs-pim/BitWordOps.mod: New file.\n+\t* gm2-libs-pim/BlockOps.def: New file.\n+\t* gm2-libs-pim/BlockOps.mod: New file.\n+\t* gm2-libs-pim/Break.c: New file.\n+\t* gm2-libs-pim/Break.def: New file.\n+\t* gm2-libs-pim/CardinalIO.def: New file.\n+\t* gm2-libs-pim/CardinalIO.mod: New file.\n+\t* gm2-libs-pim/Conversions.def: New file.\n+\t* gm2-libs-pim/Conversions.mod: New file.\n+\t* gm2-libs-pim/DebugPMD.def: New file.\n+\t* gm2-libs-pim/DebugPMD.mod: New file.\n+\t* gm2-libs-pim/DebugTrace.def: New file.\n+\t* gm2-libs-pim/DebugTrace.mod: New file.\n+\t* gm2-libs-pim/Delay.def: New file.\n+\t* gm2-libs-pim/Delay.mod: New file.\n+\t* gm2-libs-pim/Display.def: New file.\n+\t* gm2-libs-pim/Display.mod: New file.\n+\t* gm2-libs-pim/ErrorCode.def: New file.\n+\t* gm2-libs-pim/ErrorCode.mod: New file.\n+\t* gm2-libs-pim/FileSystem.def: New file.\n+\t* gm2-libs-pim/FileSystem.mod: New file.\n+\t* gm2-libs-pim/FloatingUtilities.def: New file.\n+\t* gm2-libs-pim/FloatingUtilities.mod: New file.\n+\t* gm2-libs-pim/InOut.def: New file.\n+\t* gm2-libs-pim/InOut.mod: New file.\n+\t* gm2-libs-pim/Keyboard.def: New file.\n+\t* gm2-libs-pim/Keyboard.mod: New file.\n+\t* gm2-libs-pim/LongIO.def: New file.\n+\t* gm2-libs-pim/LongIO.mod: New file.\n+\t* gm2-libs-pim/NumberConversion.def: New file.\n+\t* gm2-libs-pim/NumberConversion.mod: New file.\n+\t* gm2-libs-pim/README.texi: New file.\n+\t* gm2-libs-pim/Random.def: New file.\n+\t* gm2-libs-pim/Random.mod: New file.\n+\t* gm2-libs-pim/RealConversions.def: New file.\n+\t* gm2-libs-pim/RealConversions.mod: New file.\n+\t* gm2-libs-pim/RealInOut.def: New file.\n+\t* gm2-libs-pim/RealInOut.mod: New file.\n+\t* gm2-libs-pim/Strings.def: New file.\n+\t* gm2-libs-pim/Strings.mod: New file.\n+\t* gm2-libs-pim/Termbase.def: New file.\n+\t* gm2-libs-pim/Termbase.mod: New file.\n+\t* gm2-libs-pim/Terminal.def: New file.\n+\t* gm2-libs-pim/Terminal.mod: New file.\n+\t* gm2-libs-pim/TimeDate.def: New file.\n+\t* gm2-libs-pim/TimeDate.mod: New file.\n+\t* gm2-libs/ASCII.def: New file.\n+\t* gm2-libs/ASCII.mod: New file.\n+\t* gm2-libs/Args.def: New file.\n+\t* gm2-libs/Args.mod: New file.\n+\t* gm2-libs/Assertion.def: New file.\n+\t* gm2-libs/Assertion.mod: New file.\n+\t* gm2-libs/Break.def: New file.\n+\t* gm2-libs/Break.mod: New file.\n+\t* gm2-libs/Builtins.def: New file.\n+\t* gm2-libs/Builtins.mod: New file.\n+\t* gm2-libs/COROUTINES.def: New file.\n+\t* gm2-libs/COROUTINES.mod: New file.\n+\t* gm2-libs/CmdArgs.def: New file.\n+\t* gm2-libs/CmdArgs.mod: New file.\n+\t* gm2-libs/Debug.def: New file.\n+\t* gm2-libs/Debug.mod: New file.\n+\t* gm2-libs/DynamicStrings.def: New file.\n+\t* gm2-libs/DynamicStrings.mod: New file.\n+\t* gm2-libs/Environment.def: New file.\n+\t* gm2-libs/Environment.mod: New file.\n+\t* gm2-libs/FIO.def: New file.\n+\t* gm2-libs/FIO.mod: New file.\n+\t* gm2-libs/FormatStrings.def: New file.\n+\t* gm2-libs/FormatStrings.mod: New file.\n+\t* gm2-libs/FpuIO.def: New file.\n+\t* gm2-libs/FpuIO.mod: New file.\n+\t* gm2-libs/GetOpt.def: New file.\n+\t* gm2-libs/GetOpt.mod: New file.\n+\t* gm2-libs/IO.def: New file.\n+\t* gm2-libs/IO.mod: New file.\n+\t* gm2-libs/Indexing.def: New file.\n+\t* gm2-libs/Indexing.mod: New file.\n+\t* gm2-libs/LMathLib0.def: New file.\n+\t* gm2-libs/LMathLib0.mod: New file.\n+\t* gm2-libs/LegacyReal.def: New file.\n+\t* gm2-libs/LegacyReal.mod: New file.\n+\t* gm2-libs/M2Dependent.def: New file.\n+\t* gm2-libs/M2Dependent.mod: New file.\n+\t* gm2-libs/M2EXCEPTION.def: New file.\n+\t* gm2-libs/M2EXCEPTION.mod: New file.\n+\t* gm2-libs/M2LINK.def: New file.\n+\t* gm2-libs/M2RTS.def: New file.\n+\t* gm2-libs/M2RTS.mod: New file.\n+\t* gm2-libs/MathLib0.def: New file.\n+\t* gm2-libs/MathLib0.mod: New file.\n+\t* gm2-libs/MemUtils.def: New file.\n+\t* gm2-libs/MemUtils.mod: New file.\n+\t* gm2-libs/NumberIO.def: New file.\n+\t* gm2-libs/NumberIO.mod: New file.\n+\t* gm2-libs/OptLib.def: New file.\n+\t* gm2-libs/OptLib.mod: New file.\n+\t* gm2-libs/PushBackInput.def: New file.\n+\t* gm2-libs/PushBackInput.mod: New file.\n+\t* gm2-libs/README.texi: New file.\n+\t* gm2-libs/RTExceptions.def: New file.\n+\t* gm2-libs/RTExceptions.mod: New file.\n+\t* gm2-libs/RTint.def: New file.\n+\t* gm2-libs/RTint.mod: New file.\n+\t* gm2-libs/SArgs.def: New file.\n+\t* gm2-libs/SArgs.mod: New file.\n+\t* gm2-libs/SCmdArgs.def: New file.\n+\t* gm2-libs/SCmdArgs.mod: New file.\n+\t* gm2-libs/SEnvironment.def: New file.\n+\t* gm2-libs/SEnvironment.mod: New file.\n+\t* gm2-libs/SFIO.def: New file.\n+\t* gm2-libs/SFIO.mod: New file.\n+\t* gm2-libs/SMathLib0.def: New file.\n+\t* gm2-libs/SMathLib0.mod: New file.\n+\t* gm2-libs/SYSTEM.def: New file.\n+\t* gm2-libs/SYSTEM.mod: New file.\n+\t* gm2-libs/Scan.def: New file.\n+\t* gm2-libs/Scan.mod: New file.\n+\t* gm2-libs/Selective.def: New file.\n+\t* gm2-libs/StdIO.def: New file.\n+\t* gm2-libs/StdIO.mod: New file.\n+\t* gm2-libs/Storage.def: New file.\n+\t* gm2-libs/Storage.mod: New file.\n+\t* gm2-libs/StrCase.def: New file.\n+\t* gm2-libs/StrCase.mod: New file.\n+\t* gm2-libs/StrIO.def: New file.\n+\t* gm2-libs/StrIO.mod: New file.\n+\t* gm2-libs/StrLib.def: New file.\n+\t* gm2-libs/StrLib.mod: New file.\n+\t* gm2-libs/StringConvert.def: New file.\n+\t* gm2-libs/StringConvert.mod: New file.\n+\t* gm2-libs/SysExceptions.def: New file.\n+\t* gm2-libs/SysStorage.def: New file.\n+\t* gm2-libs/SysStorage.mod: New file.\n+\t* gm2-libs/TimeString.def: New file.\n+\t* gm2-libs/TimeString.mod: New file.\n+\t* gm2-libs/UnixArgs.def: New file.\n+\t* gm2-libs/cbuiltin.def: New file.\n+\t* gm2-libs/cgetopt.def: New file.\n+\t* gm2-libs/config-host: New file.\n+\t* gm2-libs/config-host.in: New file.\n+\t* gm2-libs/cxxabi.def: New file.\n+\t* gm2-libs/dtoa.def: New file.\n+\t* gm2-libs/errno.def: New file.\n+\t* gm2-libs/gdbif.def: New file.\n+\t* gm2-libs/gdbif.mod: New file.\n+\t* gm2-libs/gm2-libs-host.h.in: New file.\n+\t* gm2-libs/ldtoa.def: New file.\n+\t* gm2-libs/libc.def: New file.\n+\t* gm2-libs/libm.def: New file.\n+\t* gm2-libs/sckt.def: New file.\n+\t* gm2-libs/termios.def: New file.\n+\t* gm2-libs/wrapc.def: New file.\n+\t* gm2config.h.in: New file.\n+\t* gm2spec.cc: New file.\n+\t* gm2version.h: New file.\n+\t* init/README: New file.\n+\t* init/mcinit: New file.\n+\t* init/ppginit: New file.\n+\t* lang-specs.h: New file.\n+\t* lang.opt: New file.\n+\t* m2-tree.def: New file.\n+\t* m2-tree.h: New file.\n+\t* m2.flex: New file.\n+\t* m2pp.cc: New file.\n+\t* m2pp.h: New file.\n+\t* mc-boot-ch/GBuiltins.c: New file.\n+\t* mc-boot-ch/GM2LINK.c: New file.\n+\t* mc-boot-ch/GRTco.c: New file.\n+\t* mc-boot-ch/GSYSTEM.c: New file.\n+\t* mc-boot-ch/GSelective.c: New file.\n+\t* mc-boot-ch/GSysExceptions.c: New file.\n+\t* mc-boot-ch/GUnixArgs.cc: New file.\n+\t* mc-boot-ch/Gabort.c: New file.\n+\t* mc-boot-ch/Gcbuiltin.c: New file.\n+\t* mc-boot-ch/Gdtoa.c: New file.\n+\t* mc-boot-ch/Gerrno.c: New file.\n+\t* mc-boot-ch/Gldtoa.c: New file.\n+\t* mc-boot-ch/Glibc.c: New file.\n+\t* mc-boot-ch/Glibm.c: New file.\n+\t* mc-boot-ch/Gmcrts.c: New file.\n+\t* mc-boot-ch/Gmcrts.h: New file.\n+\t* mc-boot-ch/Gnetwork.h: New file.\n+\t* mc-boot-ch/Gtermios.cc: New file.\n+\t* mc-boot-ch/Gwrapc.c: New file.\n+\t* mc-boot-ch/README: New file.\n+\t* mc-boot-ch/m2rts.h: New file.\n+\t* mc-boot-ch/network.c: New file.\n+\t* mc-boot/GASCII.c: New file.\n+\t* mc-boot/GASCII.h: New file.\n+\t* mc-boot/GArgs.c: New file.\n+\t* mc-boot/GArgs.h: New file.\n+\t* mc-boot/GAssertion.c: New file.\n+\t* mc-boot/GAssertion.h: New file.\n+\t* mc-boot/GBreak.c: New file.\n+\t* mc-boot/GBreak.h: New file.\n+\t* mc-boot/GCOROUTINES.h: New file.\n+\t* mc-boot/GCmdArgs.c: New file.\n+\t* mc-boot/GCmdArgs.h: New file.\n+\t* mc-boot/GDebug.c: New file.\n+\t* mc-boot/GDebug.h: New file.\n+\t* mc-boot/GDynamicStrings.c: New file.\n+\t* mc-boot/GDynamicStrings.h: New file.\n+\t* mc-boot/GEnvironment.c: New file.\n+\t* mc-boot/GEnvironment.h: New file.\n+\t* mc-boot/GFIO.c: New file.\n+\t* mc-boot/GFIO.h: New file.\n+\t* mc-boot/GFormatStrings.c: New file.\n+\t* mc-boot/GFormatStrings.h: New file.\n+\t* mc-boot/GFpuIO.c: New file.\n+\t* mc-boot/GFpuIO.h: New file.\n+\t* mc-boot/GIO.c: New file.\n+\t* mc-boot/GIO.h: New file.\n+\t* mc-boot/GIndexing.c: New file.\n+\t* mc-boot/GIndexing.h: New file.\n+\t* mc-boot/GM2Dependent.c: New file.\n+\t* mc-boot/GM2Dependent.h: New file.\n+\t* mc-boot/GM2EXCEPTION.c: New file.\n+\t* mc-boot/GM2EXCEPTION.h: New file.\n+\t* mc-boot/GM2LINK.h: New file.\n+\t* mc-boot/GM2RTS.c: New file.\n+\t* mc-boot/GM2RTS.h: New file.\n+\t* mc-boot/GMemUtils.c: New file.\n+\t* mc-boot/GMemUtils.h: New file.\n+\t* mc-boot/GNumberIO.c: New file.\n+\t* mc-boot/GNumberIO.h: New file.\n+\t* mc-boot/GPushBackInput.c: New file.\n+\t* mc-boot/GPushBackInput.h: New file.\n+\t* mc-boot/GRTExceptions.c: New file.\n+\t* mc-boot/GRTExceptions.h: New file.\n+\t* mc-boot/GRTco.h: New file.\n+\t* mc-boot/GRTint.c: New file.\n+\t* mc-boot/GRTint.h: New file.\n+\t* mc-boot/GSArgs.c: New file.\n+\t* mc-boot/GSArgs.h: New file.\n+\t* mc-boot/GSFIO.c: New file.\n+\t* mc-boot/GSFIO.h: New file.\n+\t* mc-boot/GSYSTEM.h: New file.\n+\t* mc-boot/GSelective.h: New file.\n+\t* mc-boot/GStdIO.c: New file.\n+\t* mc-boot/GStdIO.h: New file.\n+\t* mc-boot/GStorage.c: New file.\n+\t* mc-boot/GStorage.h: New file.\n+\t* mc-boot/GStrCase.c: New file.\n+\t* mc-boot/GStrCase.h: New file.\n+\t* mc-boot/GStrIO.c: New file.\n+\t* mc-boot/GStrIO.h: New file.\n+\t* mc-boot/GStrLib.c: New file.\n+\t* mc-boot/GStrLib.h: New file.\n+\t* mc-boot/GStringConvert.c: New file.\n+\t* mc-boot/GStringConvert.h: New file.\n+\t* mc-boot/GSysExceptions.h: New file.\n+\t* mc-boot/GSysStorage.c: New file.\n+\t* mc-boot/GSysStorage.h: New file.\n+\t* mc-boot/GTimeString.c: New file.\n+\t* mc-boot/GTimeString.h: New file.\n+\t* mc-boot/GUnixArgs.h: New file.\n+\t* mc-boot/Galists.c: New file.\n+\t* mc-boot/Galists.h: New file.\n+\t* mc-boot/Gdecl.c: New file.\n+\t* mc-boot/Gdecl.h: New file.\n+\t* mc-boot/Gdtoa.h: New file.\n+\t* mc-boot/Gerrno.h: New file.\n+\t* mc-boot/Gkeyc.c: New file.\n+\t* mc-boot/Gkeyc.h: New file.\n+\t* mc-boot/Gldtoa.h: New file.\n+\t* mc-boot/Glibc.h: New file.\n+\t* mc-boot/Glibm.h: New file.\n+\t* mc-boot/Glists.c: New file.\n+\t* mc-boot/Glists.h: New file.\n+\t* mc-boot/GmcComment.c: New file.\n+\t* mc-boot/GmcComment.h: New file.\n+\t* mc-boot/GmcComp.c: New file.\n+\t* mc-boot/GmcComp.h: New file.\n+\t* mc-boot/GmcDebug.c: New file.\n+\t* mc-boot/GmcDebug.h: New file.\n+\t* mc-boot/GmcError.c: New file.\n+\t* mc-boot/GmcError.h: New file.\n+\t* mc-boot/GmcFileName.c: New file.\n+\t* mc-boot/GmcFileName.h: New file.\n+\t* mc-boot/GmcLexBuf.c: New file.\n+\t* mc-boot/GmcLexBuf.h: New file.\n+\t* mc-boot/GmcMetaError.c: New file.\n+\t* mc-boot/GmcMetaError.h: New file.\n+\t* mc-boot/GmcOptions.c: New file.\n+\t* mc-boot/GmcOptions.h: New file.\n+\t* mc-boot/GmcPreprocess.c: New file.\n+\t* mc-boot/GmcPreprocess.h: New file.\n+\t* mc-boot/GmcPretty.c: New file.\n+\t* mc-boot/GmcPretty.h: New file.\n+\t* mc-boot/GmcPrintf.c: New file.\n+\t* mc-boot/GmcPrintf.h: New file.\n+\t* mc-boot/GmcQuiet.c: New file.\n+\t* mc-boot/GmcQuiet.h: New file.\n+\t* mc-boot/GmcReserved.c: New file.\n+\t* mc-boot/GmcReserved.h: New file.\n+\t* mc-boot/GmcSearch.c: New file.\n+\t* mc-boot/GmcSearch.h: New file.\n+\t* mc-boot/GmcStack.c: New file.\n+\t* mc-boot/GmcStack.h: New file.\n+\t* mc-boot/GmcStream.c: New file.\n+\t* mc-boot/GmcStream.h: New file.\n+\t* mc-boot/Gmcflex.h: New file.\n+\t* mc-boot/Gmcp1.c: New file.\n+\t* mc-boot/Gmcp1.h: New file.\n+\t* mc-boot/Gmcp2.c: New file.\n+\t* mc-boot/Gmcp2.h: New file.\n+\t* mc-boot/Gmcp3.c: New file.\n+\t* mc-boot/Gmcp3.h: New file.\n+\t* mc-boot/Gmcp4.c: New file.\n+\t* mc-boot/Gmcp4.h: New file.\n+\t* mc-boot/Gmcp5.c: New file.\n+\t* mc-boot/Gmcp5.h: New file.\n+\t* mc-boot/GnameKey.c: New file.\n+\t* mc-boot/GnameKey.h: New file.\n+\t* mc-boot/Gpth.h: New file.\n+\t* mc-boot/GsymbolKey.c: New file.\n+\t* mc-boot/GsymbolKey.h: New file.\n+\t* mc-boot/Gtermios.h: New file.\n+\t* mc-boot/Gtop.c: New file.\n+\t* mc-boot/Gvarargs.c: New file.\n+\t* mc-boot/Gvarargs.h: New file.\n+\t* mc-boot/Gwlists.c: New file.\n+\t* mc-boot/Gwlists.h: New file.\n+\t* mc-boot/Gwrapc.h: New file.\n+\t* mc-boot/README: New file.\n+\t* mc/Indexing.def: New file.\n+\t* mc/Indexing.mod: New file.\n+\t* mc/README: New file.\n+\t* mc/alists.def: New file.\n+\t* mc/alists.mod: New file.\n+\t* mc/decl.def: New file.\n+\t* mc/decl.mod: New file.\n+\t* mc/decl.mod-extra: New file.\n+\t* mc/keyc.def: New file.\n+\t* mc/keyc.mod: New file.\n+\t* mc/lists.def: New file.\n+\t* mc/lists.mod: New file.\n+\t* mc/m2flex.def: New file.\n+\t* mc/mc.flex: New file.\n+\t* mc/mcComment.def: New file.\n+\t* mc/mcComment.h: New file.\n+\t* mc/mcComment.mod: New file.\n+\t* mc/mcComp.def: New file.\n+\t* mc/mcComp.mod: New file.\n+\t* mc/mcDebug.def: New file.\n+\t* mc/mcDebug.mod: New file.\n+\t* mc/mcError.def: New file.\n+\t* mc/mcError.mod: New file.\n+\t* mc/mcFileName.def: New file.\n+\t* mc/mcFileName.mod: New file.\n+\t* mc/mcLexBuf.def: New file.\n+\t* mc/mcLexBuf.h: New file.\n+\t* mc/mcLexBuf.mod: New file.\n+\t* mc/mcMetaError.def: New file.\n+\t* mc/mcMetaError.mod: New file.\n+\t* mc/mcOptions.def: New file.\n+\t* mc/mcOptions.mod: New file.\n+\t* mc/mcPreprocess.def: New file.\n+\t* mc/mcPreprocess.mod: New file.\n+\t* mc/mcPretty.def: New file.\n+\t* mc/mcPretty.mod: New file.\n+\t* mc/mcPrintf.def: New file.\n+\t* mc/mcPrintf.mod: New file.\n+\t* mc/mcQuiet.def: New file.\n+\t* mc/mcQuiet.mod: New file.\n+\t* mc/mcReserved.def: New file.\n+\t* mc/mcReserved.h: New file.\n+\t* mc/mcReserved.mod: New file.\n+\t* mc/mcSearch.def: New file.\n+\t* mc/mcSearch.mod: New file.\n+\t* mc/mcStack.def: New file.\n+\t* mc/mcStack.mod: New file.\n+\t* mc/mcStream.def: New file.\n+\t* mc/mcStream.mod: New file.\n+\t* mc/mcflex.def: New file.\n+\t* mc/mcp1.bnf: New file.\n+\t* mc/mcp1.def: New file.\n+\t* mc/mcp2.bnf: New file.\n+\t* mc/mcp2.def: New file.\n+\t* mc/mcp3.bnf: New file.\n+\t* mc/mcp3.def: New file.\n+\t* mc/mcp4.bnf: New file.\n+\t* mc/mcp4.def: New file.\n+\t* mc/mcp5.bnf: New file.\n+\t* mc/mcp5.def: New file.\n+\t* mc/nameKey.def: New file.\n+\t* mc/nameKey.mod: New file.\n+\t* mc/symbolKey.def: New file.\n+\t* mc/symbolKey.mod: New file.\n+\t* mc/top.mod: New file.\n+\t* mc/varargs.def: New file.\n+\t* mc/varargs.mod: New file.\n+\t* mc/wlists.def: New file.\n+\t* mc/wlists.mod: New file.\n+\t* pge-boot/GASCII.c: New file.\n+\t* pge-boot/GASCII.h: New file.\n+\t* pge-boot/GArgs.c: New file.\n+\t* pge-boot/GArgs.h: New file.\n+\t* pge-boot/GAssertion.c: New file.\n+\t* pge-boot/GAssertion.h: New file.\n+\t* pge-boot/GBreak.h: New file.\n+\t* pge-boot/GBuiltins.c: New file.\n+\t* pge-boot/GCmdArgs.h: New file.\n+\t* pge-boot/GDebug.c: New file.\n+\t* pge-boot/GDebug.h: New file.\n+\t* pge-boot/GDynamicStrings.c: New file.\n+\t* pge-boot/GDynamicStrings.h: New file.\n+\t* pge-boot/GEnvironment.h: New file.\n+\t* pge-boot/GFIO.c: New file.\n+\t* pge-boot/GFIO.h: New file.\n+\t* pge-boot/GFormatStrings.h: New file.\n+\t* pge-boot/GFpuIO.h: New file.\n+\t* pge-boot/GIO.c: New file.\n+\t* pge-boot/GIO.h: New file.\n+\t* pge-boot/GIndexing.c: New file.\n+\t* pge-boot/GIndexing.h: New file.\n+\t* pge-boot/GLists.c: New file.\n+\t* pge-boot/GLists.h: New file.\n+\t* pge-boot/GM2Dependent.c: New file.\n+\t* pge-boot/GM2Dependent.h: New file.\n+\t* pge-boot/GM2EXCEPTION.c: New file.\n+\t* pge-boot/GM2EXCEPTION.h: New file.\n+\t* pge-boot/GM2LINK.c: New file.\n+\t* pge-boot/GM2LINK.h: New file.\n+\t* pge-boot/GM2RTS.c: New file.\n+\t* pge-boot/GM2RTS.h: New file.\n+\t* pge-boot/GNameKey.c: New file.\n+\t* pge-boot/GNameKey.h: New file.\n+\t* pge-boot/GNumberIO.c: New file.\n+\t* pge-boot/GNumberIO.h: New file.\n+\t* pge-boot/GOutput.c: New file.\n+\t* pge-boot/GOutput.h: New file.\n+\t* pge-boot/GPushBackInput.c: New file.\n+\t* pge-boot/GPushBackInput.h: New file.\n+\t* pge-boot/GRTExceptions.c: New file.\n+\t* pge-boot/GRTExceptions.h: New file.\n+\t* pge-boot/GRTco.c: New file.\n+\t* pge-boot/GSArgs.h: New file.\n+\t* pge-boot/GSEnvironment.h: New file.\n+\t* pge-boot/GSFIO.c: New file.\n+\t* pge-boot/GSFIO.h: New file.\n+\t* pge-boot/GSYSTEM.c: New file.\n+\t* pge-boot/GSYSTEM.h: New file.\n+\t* pge-boot/GScan.h: New file.\n+\t* pge-boot/GSelective.c: New file.\n+\t* pge-boot/GStdIO.c: New file.\n+\t* pge-boot/GStdIO.h: New file.\n+\t* pge-boot/GStorage.c: New file.\n+\t* pge-boot/GStorage.h: New file.\n+\t* pge-boot/GStrCase.c: New file.\n+\t* pge-boot/GStrCase.h: New file.\n+\t* pge-boot/GStrIO.c: New file.\n+\t* pge-boot/GStrIO.h: New file.\n+\t* pge-boot/GStrLib.c: New file.\n+\t* pge-boot/GStrLib.h: New file.\n+\t* pge-boot/GStringConvert.h: New file.\n+\t* pge-boot/GSymbolKey.c: New file.\n+\t* pge-boot/GSymbolKey.h: New file.\n+\t* pge-boot/GSysExceptions.c: New file.\n+\t* pge-boot/GSysExceptions.h: New file.\n+\t* pge-boot/GSysStorage.c: New file.\n+\t* pge-boot/GSysStorage.h: New file.\n+\t* pge-boot/GTimeString.h: New file.\n+\t* pge-boot/GUnixArgs.cc: New file.\n+\t* pge-boot/GUnixArgs.h: New file.\n+\t* pge-boot/Gabort.c: New file.\n+\t* pge-boot/Gbnflex.c: New file.\n+\t* pge-boot/Gbnflex.h: New file.\n+\t* pge-boot/Gcbuiltin.c: New file.\n+\t* pge-boot/Gdtoa.c: New file.\n+\t* pge-boot/Gdtoa.h: New file.\n+\t* pge-boot/Gerrno.c: New file.\n+\t* pge-boot/Gerrno.h: New file.\n+\t* pge-boot/Gldtoa.c: New file.\n+\t* pge-boot/Gldtoa.h: New file.\n+\t* pge-boot/Glibc.c: New file.\n+\t* pge-boot/Glibc.h: New file.\n+\t* pge-boot/Glibm.c: New file.\n+\t* pge-boot/Glibm.h: New file.\n+\t* pge-boot/Gmcrts.c: New file.\n+\t* pge-boot/Gmcrts.h: New file.\n+\t* pge-boot/Gnetwork.h: New file.\n+\t* pge-boot/Gpge.c: New file.\n+\t* pge-boot/Gtermios.cc: New file.\n+\t* pge-boot/Gtermios.h: New file.\n+\t* pge-boot/Gwrapc.c: New file.\n+\t* pge-boot/Gwrapc.h: New file.\n+\t* pge-boot/README: New file.\n+\t* pge-boot/m2rts.h: New file.\n+\t* pge-boot/main.c: New file.\n+\t* pge-boot/network.c: New file.\n+\t* plugin/README: New file.\n+\t* plugin/m2rte.cc: New file.\n+\t* tools-src/README: New file.\n+\t* tools-src/boilerplate.py: New file.\n+\t* tools-src/buildpg: New file.\n+\t* tools-src/calcpath: New file.\n+\t* tools-src/def2doc.py: New file.\n+\t* tools-src/makeSystem: New file.\n+\t* tools-src/mklink.c: New file.\n+\t* tools-src/tidydates.py: New file.\n+\t* images/LICENSE.IMG: New file.\n+\t* images/gnupng: New file.\n+\t* images/gnu.eps: New file.\n+\t* version.c: New file.\n+\t* configure: Rebuilt.\n+\t* target-independent/Builtins.texi: New file.\n+\t* target-independent/SYSTEM-iso.texi: New file.\n+\t* target-independent/SYSTEM-pim.texi: New file.\n+\t* target-independent/gm2-libs.texi: New file.\n+\t* target-independent/readme.txt: New file."}, {"sha": "a8bd7fe4d1966158e1ea70731c905da2038032ad", "filename": "gcc/m2/Make-lang.in", "status": "added", "additions": 1653, "deletions": 0, "changes": 1653, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2FMake-lang.in?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754", "patch": "@@ -0,0 +1,1653 @@\n+# Top level -*- makefile -*- fragment for GNU M2.\n+\n+# Copyright (C) 2000-2022 Free Software Foundation, Inc.\n+\n+#This file is part of GCC.\n+\n+#GCC is free software; you can redistribute it and/or modify\n+#it under the terms of the GNU General Public License as published by\n+#the Free Software Foundation; either version 3, or (at your option)\n+#any later version.\n+\n+#GCC is distributed in the hope that it will be useful,\n+#but WITHOUT ANY WARRANTY; without even the implied warranty of\n+#MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+#GNU General Public License for more details.\n+\n+#You should have received a copy of the GNU General Public License\n+#along with GCC; see the file COPYING3.  If not see\n+#<http://www.gnu.org/licenses/>.\n+\n+# Actual names to use when installing a native compiler.\n+GM2_INSTALL_NAME = $(shell echo gm2|sed '$(program_transform_name)')\n+GM2_TARGET_INSTALL_NAME = $(target_noncanonical)-$(shell echo gm2|sed '$(program_transform_name)')\n+\n+# Actual names to use when installing a cross-compiler.\n+GM2_CROSS_NAME = `echo gm2|sed '$(program_transform_cross_name)'`\n+\n+M2_MAINTAINER = no\n+\n+GM2_1 = ./gm2 -B./stage1/m2 -g -fm2-g\n+\n+GM2_FOR_TARGET = $(STAGE_CC_WRAPPER) ./gm2 -B./ -B$(build_tooldir)/bin/ -L$(objdir)/../ld $(TFLAGS)\n+\n+TEXISRC = $(objdir)/m2/images/gnu.eps \\\n+          $(srcdir)/doc/gm2.texi \\\n+          m2/gm2-libs.texi \\\n+          m2/gm2-ebnf.texi \\\n+          m2/SYSTEM-pim.texi \\\n+          m2/SYSTEM-iso.texi \\\n+          m2/Builtins.texi\n+\n+RSTSRC = $(objdir)/m2/images/gnu.eps \\\n+          $(srcdir)/doc/gm2.texi \\\n+          m2/gm2-libs.rst \\\n+          m2/gm2-ebnf.rst \\\n+          m2/SYSTEM-pim.rst \\\n+          m2/SYSTEM-iso.rst \\\n+          m2/Builtins.rst\n+\n+# Define the names for selecting modula-2 in LANGUAGES.\n+m2 modula-2 modula2: gm2$(exeext) xgcc$(exeext) cc1gm2$(exeext) \\\n+                 $(GCC_PASSES) $(GCC_PARTS)\n+m2.serial = cc1gm2$(exeext)\n+\n+m2.srcinfo: doc/m2.info\n+\t-cp -p $^ $(srcdir)/doc\n+\n+ifeq ($(HAVE_PYTHON),yes)\n+m2.srcextra: m2/SYSTEM-pim.texi m2/SYSTEM-iso.texi m2/gm2-libs.texi m2/gm2-ebnf.texi\n+\t-cp -p m2/SYSTEM-pim.texi $(srcdir)/m2\n+\t-cp -p m2/SYSTEM-iso.texi $(srcdir)/m2\n+\t-cp -p m2/gm2-libs.texi $(srcdir)/m2\n+\t-cp -p m2/gm2-ebnf.texi $(srcdir)/m2\n+\tfind . -name '*.texi' -print\n+else\n+m2.srcextra:\n+endif\n+\n+m2.srcman: doc/gm2.1\n+\t-cp -p $^ $(srcdir)/doc\n+\n+# Tell GNU make to ignore these if they exist.\n+.PHONY: m2 modula-2 modula2\n+\n+GM2_PROG_DEP=gm2$(exeext) xgcc$(exeext) cc1gm2$(exeext)\n+\n+include m2/config-make\n+\n+LIBSTDCXX=../$(TARGET_SUBDIR)/libstdc++-v3/src/.libs/libstdc++.a\n+\n+PGE=m2/pge$(exeext)\n+\n+SRC_PREFIX=G\n+\n+m2/gm2spec.o: $(srcdir)/m2/gm2spec.cc $(SYSTEM_H) $(GCC_H) $(CONFIG_H) \\\n+               m2/gm2config.h $(TARGET_H) $(PLUGIN_HEADERS) \\\n+               $(generated_files) $(C_TREE_H) insn-attr-common.h\n+\t(SHLIB_LINK='$(SHLIB_LINK)' \\\n+\tSHLIB_MULTILIB='$(SHLIB_MULTILIB)'; \\\n+\t$(COMPILER) $(ALL_COMPILERFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) \\\n+         $(DRIVER_DEFINES) \\\n+\t\t-DLIBSUBDIR=\\\"$(libsubdir)\\\" \\\n+                -DPREFIX=\\\"$(prefix)\\\" \\\n+                -c $(srcdir)/m2/gm2spec.cc $(OUTPUT_OPTION))\n+\n+# Create the compiler driver for M2.\n+CFLAGS-m2/m2/gm2spec.o += $(DRIVER_DEFINES)\n+\n+GM2_OBJS = $(GCC_OBJS) prefix.o intl.o m2/gm2spec.o\n+\n+# Create the compiler driver for gm2.\n+gm2$(exeext): $(GM2_OBJS) $(EXTRA_GCC_OBJS) libcommon-target.a $(LIBDEPS) \\\n+    m2/gm2config.h\n+\t+$(LINKER) $(ALL_LINKERFLAGS) $(LDFLAGS) -o $@ \\\n+\t  $(GM2_OBJS) $(EXTRA_GCC_OBJS) libcommon-target.a \\\n+\t  $(EXTRA_GCC_LIBS) $(LIBS)\n+\n+# Create a version of the gm2 driver which calls the cross-compiler.\n+gm2-cross$(exeext): gm2$(exeext)\n+\t-rm -f gm2-cross$(exeext)\n+\tcp gm2$(exeext) gm2-cross$(exeext)\n+\n+po-generated:\n+\n+# Build hooks:\n+\n+m2.all.cross: gm2-cross$(exeext) plugin/m2rte$(exeext).so\n+\n+m2.start.encap: gm2$(exeext) plugin/m2rte$(exeext).so\n+m2.rest.encap:\n+\n+\n+m2.info: doc/m2.info\n+\n+m2.man: doc/m2.1\n+\n+m2.install-man: $(DESTDIR)$(man1dir)/$(GM2_INSTALL_NAME)$(man1ext)\n+\n+$(DESTDIR)$(man1dir)/$(GM2_INSTALL_NAME)$(man1ext): doc/m2.1 installdirs\n+\t-rm -f $@\n+\t-$(INSTALL_DATA) $< $@\n+\t-chmod a-x $@\n+\n+m2.dvi: $(TEXISRC)\n+\t$(TEXI2DVI) -I $(objdir)/m2 -I $(srcdir)/doc/include $(srcdir)/doc/gm2.texi -o $@\n+\n+m2.ps: m2.dvi\n+\tdvips -o $@ $<\n+\n+m2.pdf: m2.ps\n+\tgs -q -dBATCH -dNOPAUSE -sDEVICE=pdfwrite -sOutputFile=$@ $<\n+\n+.INTERMEDIATE: m2.pod\n+\n+m2.pod: doc/gm2.texi $(TEXISRC)\n+\t-$(TEXI2POD) -I $(objdir)/m2 -D m2 < $< > $@\n+\n+doc/m2.info: $(TEXISRC)\n+\tif test \"x$(BUILD_INFO)\" = xinfo; then \\\n+\t  rm -f doc/m2.info*; \\\n+          $(MAKEINFO) -I$(objdir)/m2 -I$(srcdir)/doc/include \\\n+                      -o $@ $(srcdir)/doc/gm2.texi ; \\\n+\telse true; fi\n+\n+$(objdir)/m2/images/gnu.eps: $(srcdir)/m2/images/gnupng\n+\ttest -d m2/images || mkdir -p m2/images\n+\tcp $(srcdir)/m2/images/gnu.eps $@\n+\n+# gm2-libs.texi\n+\n+m2/gm2-libs.texi: gm2-libs.texi-check; @true\n+\n+ifeq ($(HAVE_PYTHON),yes)\n+gm2-libs.texi-check: m2/SYSTEM-pim.texi m2/SYSTEM-iso.texi m2/Builtins.texi \\\n+                     $(objdir)/m2/gm2-libs-coroutines/SYSTEM.def\n+\t$(PYTHON) $(srcdir)/m2/tools-src/def2doc.py -t -uLibraries -s$(srcdir)/m2 -b$(objdir)/m2 -o $(objdir)/m2/gm2-libs.texi\n+else\n+gm2-libs.texi-check:\n+\tcp $(srcdir)/m2/target-independent/gm2-libs.texi $(objdir)/m2/gm2-libs.texi\n+endif\n+\t$(STAMP) gm2-libs.texi-check\n+\n+# gm2-libs.rst\n+\n+m2/gm2-libs.rst: gm2-libs.rst-check; @true\n+\n+ifeq ($(HAVE_PYTHON),yes)\n+gm2-libs.rst-check: m2/SYSTEM-pim.texi m2/SYSTEM-iso.texi m2/Builtins.texi \\\n+                     $(objdir)/m2/gm2-libs-coroutines/SYSTEM.def\n+\t$(PYTHON) $(srcdir)/m2/tools-src/def2doc.py -x -uLibraries -s$(srcdir)/m2 -b$(objdir)/m2 -o $(objdir)/m2/gm2-libs.rst\n+else\n+gm2-libs.rst-check:\n+\tcp $(srcdir)/m2/target-independent/gm2-libs.rst $(objdir)/m2/gm2-libs.rst\n+endif\n+\t$(STAMP) gm2-libs.rst-check\n+\n+# gm2-ebnf.texi\n+\n+m2/gm2-ebnf.texi: gm2-ebnf.texi-check; @true\n+\n+gm2-ebnf.texi-check: $(PGE) $(srcdir)/m2/gm2-compiler/P0SyntaxCheck.bnf\n+\t$(PGE) -c -p -t -f $(srcdir)/m2/gm2-compiler/P0SyntaxCheck.bnf -o m2/gm2-ebnf.texi\n+\t$(STAMP) gm2-ebnf.texi-check\n+\n+# gm2-ebnf.rst\n+\n+m2/gm2-ebnf.rst: gm2-ebnf.rst-check; @true\n+\n+gm2-ebnf.rst-check: $(PGE) $(srcdir)/m2/gm2-compiler/P0SyntaxCheck.bnf\n+\t$(PGE) -c -p -t -f $(srcdir)/m2/gm2-compiler/P0SyntaxCheck.bnf -o m2/gm2-ebnf.rst\n+\t$(STAMP) gm2-ebnf.rst-check\n+\n+# SYSTEM-pim.texi\n+\n+m2/SYSTEM-pim.texi: SYSTEM-pim-texi-check; @true\n+\n+ifeq ($(HAVE_PYTHON),yes)\n+SYSTEM-pim-texi-check: $(objdir)/m2/gm2-libs/SYSTEM.def\n+\t$(PYTHON) $(srcdir)/m2/tools-src/def2doc.py -t -b$(objdir)/m2 -f$(objdir)/m2/gm2-libs/SYSTEM.def -o $(objdir)/m2/SYSTEM-pim.texi\n+else\n+SYSTEM-pim-texi-check: $(objdir)/m2/gm2-libs/SYSTEM.def\n+\tcp $(srcdir)/m2/target-independent/SYSTEM-pim.texi $(objdir)/m2/SYSTEM-pim.texi\n+endif\n+\t$(STAMP) SYSTEM-pim-texi-check\n+\n+# SYSTEM-pim.rst\n+\n+m2/SYSTEM-pim.rst: SYSTEM-pim-rst-check; @true\n+\n+ifeq ($(HAVE_PYTHON),yes)\n+SYSTEM-pim-rst-check: $(objdir)/m2/gm2-libs/SYSTEM.def\n+\t$(PYTHON) $(srcdir)/m2/tools-src/def2doc.py -x -b$(objdir)/m2 -f$(objdir)/m2/gm2-libs/SYSTEM.def -o $(objdir)/m2/SYSTEM-pim.rst\n+else\n+SYSTEM-pim-rst-check: $(objdir)/m2/gm2-libs/SYSTEM.def\n+\tcp $(srcdir)/m2/target-independent/SYSTEM-pim.rst $(objdir)/m2/SYSTEM-pim.rst\n+endif\n+\t$(STAMP) SYSTEM-pim-rst-check\n+\n+# SYSTEM-pim.texi\n+\n+m2/SYSTEM-iso.texi:  SYSTEM-iso.texi-check; @true\n+\n+ifeq ($(HAVE_PYTHON),yes)\n+SYSTEM-iso.texi-check:  $(objdir)/m2/gm2-libs-iso/SYSTEM.def\n+\t$(PYTHON) $(srcdir)/m2/tools-src/def2doc.py -t -b$(objdir)/m2 -f$(objdir)/m2/gm2-libs-iso/SYSTEM.def -o $(objdir)/m2/SYSTEM-iso.texi\n+else\n+SYSTEM-iso.texi-check:  $(objdir)/m2/gm2-libs-iso/SYSTEM.def\n+\tcp $(srcdir)/m2/target-independent/SYSTEM-iso.texi $(objdir)/m2/SYSTEM-iso.texi\n+endif\n+\t$(STAMP) SYSTEM-iso.texi-check\n+\n+# SYSTEM-pim.rst\n+\n+m2/SYSTEM-iso.rst:  SYSTEM-iso.rst-check; @true\n+\n+ifeq ($(HAVE_PYTHON),yes)\n+SYSTEM-iso.rst-check:  $(objdir)/m2/gm2-libs-iso/SYSTEM.def\n+\t$(PYTHON) $(srcdir)/m2/tools-src/def2doc.py -x -b$(objdir)/m2 -f$(objdir)/m2/gm2-libs-iso/SYSTEM.def -o $(objdir)/m2/SYSTEM-iso.rst\n+else\n+SYSTEM-iso.rst-check:  $(objdir)/m2/gm2-libs-iso/SYSTEM.def\n+\tcp $(srcdir)/m2/target-independent/SYSTEM-iso.rst $(objdir)/m2/SYSTEM-iso.rst\n+endif\n+\t$(STAMP) SYSTEM-iso.rst-check\n+\n+\n+# m2/Builtins.texi\n+\n+m2/Builtins.texi:  Builtins.texi-check; @true\n+\n+ifeq ($(HAVE_PYTHON),yes)\n+Builtins.texi-check:  m2/gm2-libs/Builtins.def\n+\t$(PYTHON) $(srcdir)/m2/tools-src/def2doc.py -t -b./ -f$(srcdir)/m2/gm2-libs/Builtins.def -o $(objdir)/m2/Builtins.texi\n+else\n+Builtins.texi-check:  m2/gm2-libs/Builtins.def\n+\tcp $(srcdir)/m2/target-independent/Builtins.texi $(objdir)/m2/Builtins.texi\n+endif\n+\t$(STAMP) Builtins.texi-check\n+\n+# m2/Builtins.rst\n+\n+m2/Builtins.rst:  Builtins.rst-check; @true\n+\n+ifeq ($(HAVE_PYTHON),yes)\n+Builtins.rst-check:  m2/gm2-libs/Builtins.def\n+\t$(PYTHON) $(srcdir)/m2/tools-src/def2doc.py -x -b./ -f$(srcdir)/m2/gm2-libs/Builtins.def -o $(objdir)/m2/Builtins.rst\n+else\n+Builtins.rst-check:  m2/gm2-libs/Builtins.def\n+\tcp $(srcdir)/m2/target-independent/Builtins.rst $(objdir)/m2/Builtins.rst\n+endif\n+\t$(STAMP) Builtins.rst-check\n+\n+$(objdir)/m2/gm2-compiler-boot:\n+\ttest -d $@ || mkdir $@\n+\n+$(objdir)/m2/gm2-libs-boot:\n+\ttest -d $@ || mkdir $@\n+\n+$(objdir)/m2/gm2-libiberty:\n+\ttest -d $@ || mkdir $@\n+\n+$(objdir)/m2/gm2-gcc:\n+\ttest -d $@ || mkdir $@\n+\n+$(objdir)/m2/gm2-compiler:\n+\ttest -d $@ || mkdir $@\n+\n+$(objdir)/m2/gm2-libs:\n+\ttest -d $@ || mkdir $@\n+\n+$(objdir)/m2/gm2-libs-iso:\n+\ttest -d $@ || mkdir $@\n+\n+$(objdir)/m2/gm2-libs-min:\n+\ttest -d $@ || mkdir $@\n+\n+$(objdir)/m2/gm2-compiler-paranoid:\n+\ttest -d $@ || mkdir $@\n+\n+$(objdir)/m2/gm2-libs-paranoid:\n+\ttest -d $@ || mkdir $@\n+\n+$(objdir)/m2/gm2-compiler-verify:\n+\ttest -d $@ || mkdir $@\n+\n+$(objdir)/m2/boot-bin:\n+\ttest -d $@ || mkdir $@\n+\n+$(objdir)/m2/gm2-libs-pim:\n+\ttest -d $@ || mkdir $@\n+\n+$(objdir)/m2/gm2-libs-coroutines:\n+\ttest -d $@ || mkdir $@\n+\n+stage1/m2:\n+\t-test -d $@ || mkdir -p stage1/m2\n+\n+stage2/m2:\n+\t-test -d $@ || mkdir -p stage2/m2\n+\n+stage3/m2:\n+\t-test -d $@ || mkdir -p stage3/m2\n+\n+stage4/m2:\n+\t-test -d $@ || mkdir -p stage4/m2\n+\n+# No gm2-specific selftests\n+selftest-m2:\n+\n+# Install hooks:\n+# cc1gm2 is installed elsewhere as part of $(COMPILERS).\n+# $(COMPILERS) is defined in `config-lang.in'\n+\n+m2.install-common: installdirs\n+\t-rm -f $(DESTDIR)$(bindir)/$(GM2_INSTALL_NAME)$(exeext)\n+\t$(INSTALL_PROGRAM) gm2$(exeext) $(DESTDIR)$(bindir)/$(GM2_INSTALL_NAME)$(exeext)\n+\t-if test -f cc1gm2$(exeext); then \\\n+\t  if test -f gm2-cross$(exeext); then \\\n+\t    :; \\\n+\t  else \\\n+\t    rm -f $(DESTDIR)$(bindir)/$(GM2_TARGET_INSTALL_NAME)$(exeext); \\\n+\t    ( cd $(DESTDIR)$(bindir) && \\\n+\t      $(LN) $(GM2_INSTALL_NAME)$(exeext) $(GM2_TARGET_INSTALL_NAME)$(exeext) ); \\\n+\t  fi; \\\n+\tfi\n+\t-for tool in cc1gm2$(exeext); do \\\n+             if [ -f $$tool ]; then \\\n+               rm -f $(DESTDIR)$(libexecsubdir)/$$tool; \\\n+               $(INSTALL_PROGRAM) $$tool $(DESTDIR)$(libexecsubdir)/$$tool; \\\n+               chmod a+x $(DESTDIR)$(libexecsubdir)/$$tool; \\\n+             else \\\n+               echo \"cannot find $$tool\" ; \\\n+             fi ; \\\n+         done\n+\n+m2.install-info: installdirs\n+\tif [ -d gm2$(exeext) ] ; then \\\n+\t  if [ -f $(objdir)/doc/gm2.info ]; then \\\n+\t    rm -f $(DESTDIR)$(infodir)/gm2.info*; \\\n+\t    for f in $(objdir)/doc/gm2.info*; do \\\n+\t      realfile=`echo $$f | sed -e 's|.*/\\([^/]*\\)$$|\\1|'`; \\\n+              rm -f $(DESTDIR)$(infodir)/`basename $$realfile`; \\\n+\t      $(INSTALL_DATA) $$f $(DESTDIR)$(infodir)/`basename $$realfile`; \\\n+\t    done; \\\n+\t    chmod a-x $(DESTDIR)$(infodir)/gm2.info*; \\\n+\t  else true; fi; \\\n+\telse true; fi\n+\t-if [ -f gm2$(exeext) ] && [ -f $(DESTDIR)$(infodir)/gm2.info ]; then \\\n+\t  if $(SHELL) -c 'install-info --version' >/dev/null 2>&1; then \\\n+\t    install-info --dir-file=$(infodir)/dir $(DESTDIR)$(infodir)/gm2.info; \\\n+\t  else true; fi; \\\n+\telse true; fi\n+\n+m2.install-normal: m2.install-common m2.install-info m2.install-man\n+\n+# This target will install GM2 into an existing GCC installation,\n+# without overwriting existing files.\n+# The semicolon is to prevent the install.sh -> install default rule\n+# from doing anything.  Having it run true helps avoid problems and\n+# noise from versions of make which don't like to have null commands.\n+m2.install: m2.install-normal; @true\n+\n+gm2.install-with-gcc: $(INSTALL_HEADERS) gm2.install $(INSTALL_LIBGCC)\n+\tfor file in $(GCC_PASSES); do \\\n+          if [ x\"$$file\" != x\"xgcc$(exeext)\" ]; then \\\n+            rm -f $(DESTDIR)$(libsubdir)/$$file; \\\n+            $(INSTALL_PROGRAM) $$file $(DESTDIR)$(libsubdir)/$$file || exit 1; \\\n+          fi; \\\n+        done; exit 0\n+\n+m2.uninstall:\n+\t-rm -rf $(bindir)/$(GM2_INSTALL_NAME)\n+\t-rm -rf $(bindir)/$(GM2_CROSS_NAME)\n+\n+m2.install-plugin: installdirs\n+\t$(mkinstalldirs) $(DESTDIR)$(plugin_resourcesdir)\n+\t$(INSTALL_PROGRAM) plugin/m2rte$(exeext).so $(DESTDIR)$(plugin_resourcesdir)/m2rte$(exeext).so\n+\tchmod a+x $(DESTDIR)$(plugin_resourcesdir)/m2rte$(exeext).so\n+\n+plugin/m2rte$(exeext).so: $(srcdir)/m2/plugin/m2rte.cc $(GCC_HEADER_DEPENDENCIES_FOR_M2) \\\n+        insn-attr-common.h insn-flags.h $(generated_files)\n+\ttest -d plugin || mkdir plugin\n+\t$(PLUGINCC) $(PLUGINCFLAGS) -fno-rtti -I. -I$(srcdir) -I$(srcdir)/m2 -I$(srcdir)/m2/gm2-gcc -I$(srcdir)/../include -I$(srcdir)/../libcpp/include -Wall $(GMPINC) -Wno-literal-suffix -fPIC -c -o plugin/m2rte.o $(srcdir)/m2/plugin/m2rte.cc\n+\t$(PLUGINCC) $(PLUGINCFLAGS) $(PLUGINLIBS) -fno-rtti plugin/m2rte.o -shared -o $@\n+\n+\n+# Clean hooks:\n+# A lot of the ancillary files are deleted by the main makefile.\n+# We just have to delete files specific to us.\n+\n+m2.mostlyclean:\n+\t-rm -f m2/*.o\n+\n+m2.clean:\n+\t-rm -f m2/*.o\n+\t-rm -f m2/gm2-libs/config.*\n+\t-rm m2/gm2-libs/gm2-libs-host.h m2/gm2config.h\n+\n+m2.extraclean:\n+m2.realclean:\n+\n+# Stage hooks:\n+\n+m2.stage1: stage1-start\n+\t-mv m2/*$(objext) stage1/m2\n+\n+m2.stage2: stage2-start\n+\t-mv m2/*$(objext) stage2/m2\n+\n+m2.stage3: stage3-start\n+\t-mv m2/*$(objext) stage3/m2\n+\n+m2.stage4: stage4-start\n+\t-mv m2/*$(objext) stage4/m2\n+\n+quit: force\n+\techo \"calling exit\"\n+\texit 1\n+\n+# Rules to build the compiler, pge and mc.\n+\n+# MC_COPYRIGHT=--gpl-header --project=\"GNU Modula-2\"\n+MC_COPYRIGHT=\n+\n+MC_ARGS= --olang=c++ \\\n+ --h-file-prefix=$(SRC_PREFIX) \\\n+ -I$(srcdir)/m2/gm2-libs \\\n+ -I$(srcdir)/m2/gm2-compiler \\\n+ -I$(srcdir)/m2/gm2-libiberty \\\n+ -I$(srcdir)/m2/gm2-gcc \\\n+ --quiet \\\n+ $(MC_COPYRIGHT) \\\n+ --gcc-config-system\n+\n+MCDEPS=m2/boot-bin/mc$(exeext)\n+\n+MC=m2/boot-bin/mc$(exeext) $(MC_ARGS)\n+\n+MC_LIBS=m2/mc-boot-ch/Glibc.o m2/mc-boot-ch/Gmcrts.o\n+\n+M2LINK=m2/boot-bin/mklink$(exeext)\n+GM2_O=\n+GM2_O_S3=-O\n+GM2_OS=-Os\n+GM2_G=-g -fm2-g\n+GM2_CPP=\n+# GM2_DEBUG_STRMEM=-fcpp\n+GM2_DEBUG_STRMEM=\n+GM2_FLAGS=-Wunused-variable -fsoft-check-all $(GM2_G) $(GM2_O) \\\n+ -funbounded-by-reference -fpim -fextended-opaque \\\n+ -Wpedantic-cast -Wpedantic-param-names -ffunction-sections \\\n+ -fdata-sections $(GM2_CPP) # -fauto-init\n+GM2_ISO_FLAGS=-fsoft-check-all $(GM2_G) $(GM2_O) \\\n+ -funbounded-by-reference -fiso -fextended-opaque \\\n+ -Wpedantic-cast -Wpedantic-param-names -ffunction-sections \\\n+ -fdata-sections $(GM2_CPP)\n+GM2_MIN_FLAGS=$(GM2_G) $(GM2_OS) \\\n+ -funbounded-by-reference -fextended-opaque \\\n+ -Wpedantic-cast -Wpedantic-param-names -fno-exceptions \\\n+ -ffunction-sections -fdata-sections $(GM2_CPP)\n+\n+O2=-O2 -g\n+SO_O2=-O2 -g -fPIC\n+SO=-O0 -g -fPIC\n+\n+# Language-specific object files for the gm2 compiler.\n+\n+GM2_C_OBJS        = m2/gm2-lang.o \\\n+                    m2/stor-layout.o \\\n+                    m2/m2pp.o \\\n+                    m2/gm2-gcc/m2assert.o \\\n+                    m2/gm2-gcc/m2block.o \\\n+                    m2/gm2-gcc/m2builtins.o \\\n+                    m2/gm2-gcc/m2except.o \\\n+                    m2/gm2-gcc/m2color.o \\\n+                    m2/gm2-gcc/m2configure.o \\\n+                    m2/gm2-gcc/m2convert.o \\\n+                    m2/gm2-gcc/m2decl.o \\\n+                    m2/gm2-gcc/m2expr.o \\\n+                    m2/gm2-gcc/m2linemap.o \\\n+                    m2/gm2-gcc/m2statement.o \\\n+                    m2/gm2-gcc/m2type.o \\\n+                    m2/gm2-gcc/m2tree.o \\\n+                    m2/gm2-gcc/m2treelib.o \\\n+                    m2/gm2-gcc/m2top.o \\\n+                    m2/gm2-gcc/m2misc.o \\\n+                    m2/gm2-gcc/init.o\n+GM2_LIBS          = m2/gm2-compiler/gm2.a \\\n+                    ../$(target_subdir)/libgm2/libm2pim/.libs/libm2pim.a m2/gm2-libs-boot/choosetemp.o\n+\n+GM2_LIBS_BOOT     = m2/gm2-compiler-boot/gm2.a \\\n+                    m2/gm2-libs-boot/libgm2.a \\\n+                    $(GM2-BOOT-O)\n+\n+cc1gm2$(exeext): stage1/m2/cc1gm2$(exeext) $(m2.prev)\n+\tcp -p $< $@\n+\n+stage2/m2/cc1gm2$(exeext): stage1/m2/cc1gm2$(exeext) m2/gm2-compiler/m2flex.o $(P) \\\n+                            $(GM2_C_OBJS) $(BACKEND) $(LIBDEPS) $(GM2_LIBS) \\\n+                            m2/gm2-gcc/rtegraph.o plugin/m2rte$(exeext).so m2/gm2-libs-boot/M2LINK.o\n+\t@$(call LINK_PROGRESS,$(INDEX.m2),start)\n+\t+$(LLINKER) $(ALL_CFLAGS) $(LDFLAGS) -o $@ $(GM2_C_OBJS) m2/gm2-compiler/m2flex.o \\\n+                            attribs.o \\\n+                              $(GM2_LIBS) \\\n+                              $(BACKEND) $(LIBS) m2/gm2-gcc/rtegraph.o m2/gm2-libs-boot/M2LINK.o \\\n+                              $(BACKENDLIBS) $(LIBSTDCXX) -lm\n+\t@$(call LINK_PROGRESS,$(INDEX.m2),end)\n+\n+stage1/m2/cc1gm2$(exeext): gm2$(exeext) m2/gm2-compiler-boot/m2flex.o \\\n+                            $(P) $(GM2_C_OBJS) $(BACKEND) $(LIBDEPS) \\\n+                            $(GM2_LIBS_BOOT) $(MC_LIBS) \\\n+                            m2/gm2-gcc/rtegraph.o plugin/m2rte$(exeext).so \\\n+                            m2/gm2-libs-boot/M2LINK.o \\\n+                            $(m2.prev)\n+\t@$(call LINK_PROGRESS,$(INDEX.m2),start)\n+\t+$(LLINKER) $(ALL_CFLAGS) $(LDFLAGS) -o $@ $(GM2_C_OBJS) m2/gm2-compiler-boot/m2flex.o \\\n+                            attribs.o \\\n+                             $(GM2_LIBS_BOOT) $(MC_LIBS) \\\n+                             m2/gm2-gcc/rtegraph.o m2/gm2-libs-boot/M2LINK.o \\\n+                             $(BACKEND) $(LIBS) $(BACKENDLIBS)\n+\t@$(call LINK_PROGRESS,$(INDEX.m2),end)\n+\n+# Compiling object files from source files.\n+\n+GCC_HEADER_DEPENDENCIES_FOR_M2 = $(BUILD-BOOT-H) $(TIMEVAR_H) m2/gm2config.h $(CONFIG_H) \\\n+        $(TREE_H) $(RTL_H) $(TARGET_H) $(PLUGIN_HEADERS) \\\n+        $(BCONFIG_H) $(CORETYPES_H) $(SYSTEM_H) \\\n+        $(srcdir)/flags.h gtype-m2.h \\\n+        $(generated_files) insn-attr-common.h\n+\n+m2/gm2-gcc/%.o: $(srcdir)/m2/gm2-gcc/%.cc $(GCC_HEADER_DEPENDENCIES_FOR_M2)\n+\t$(COMPILER) -c -g $(ALL_COMPILERFLAGS) \\\n+             $(ALL_CPPFLAGS) $(INCLUDES) $< $(OUTPUT_OPTION)\n+\n+m2/gm2-gcc/m2configure.o: $(srcdir)/m2/gm2-gcc/m2configure.cc \\\n+               $(SYSTEM_H) $(GCC_H) $(CONFIG_H) \\\n+               m2/gm2config.h $(TARGET_H) $(PLUGIN_HEADERS) \\\n+               $(generated_files) $(C_TREE_H) insn-attr-common.h\n+\t$(COMPILER) $(ALL_COMPILERFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) \\\n+         $(DRIVER_DEFINES) \\\n+\t\t-DLIBSUBDIR=\\\"$(libsubdir)\\\" \\\n+                -DPREFIX=\\\"$(prefix)\\\" \\\n+                -c $(srcdir)/m2/gm2-gcc/m2configure.cc $(OUTPUT_OPTION)\n+\n+m2/gm2-lang.o: $(srcdir)/m2/gm2-lang.cc gt-m2-gm2-lang.h $(GCC_HEADER_DEPENDENCIES_FOR_M2)\n+\t$(COMPILER) -c -g -I$(GM2GCC) $(ALL_COMPILERFLAGS) \\\n+            $(ALL_CPPFLAGS) $(INCLUDES) $< $(OUTPUT_OPTION)\n+\n+m2/stor-layout.o: $(srcdir)/stor-layout.cc $(GCC_HEADER_DEPENDENCIES_FOR_M2)\n+\t$(COMPILER) -c -DSET_WORD_SIZE=INT_TYPE_SIZE $(ALL_COMPILERFLAGS) \\\n+            $(ALL_CPPFLAGS) $(INCLUDES) $< $(OUTPUT_OPTION)\n+\n+m2/m2pp.o : $(srcdir)/m2/m2pp.cc $(GCC_HEADER_DEPENDENCIES_FOR_M2)\n+\t$(COMPILER) -c -g -DGM2 $(ALL_COMPILERFLAGS) \\\n+            $(ALL_CPPFLAGS) $(INCLUDES) $< $(OUTPUT_OPTION)\n+\n+m2/gm2-gcc/rtegraph.o: $(srcdir)/m2/gm2-gcc/rtegraph.cc $(GCC_HEADER_DEPENDENCIES_FOR_M2) \\\n+                       gt-m2-rtegraph.h\n+\t$(COMPILER) -c -g -I$(GM2GCC) $(ALL_COMPILERFLAGS) \\\n+            $(ALL_CPPFLAGS) $(INCLUDES) $< $(OUTPUT_OPTION)\n+\n+c-family/m2pp.o : $(srcdir)/m2/m2pp.cc $(GCC_HEADER_DEPENDENCIES_FOR_M2)\n+\t$(COMPILER) -c -g $(ALL_COMPILERFLAGS) \\\n+            $(ALL_CPPFLAGS) $(INCLUDES) $< $(OUTPUT_OPTION)\n+\n+m2/gm2-gcc/$(SRC_PREFIX)%.h: $(srcdir)/m2/gm2-gcc/%.def $(MCDEPS)\n+\t$(MC) -o=$@ $(srcdir)/m2/gm2-gcc/$*.def\n+\n+# The following tables define the source files which are translated into C using mc\n+# and defines the system interface C files.\n+\n+# Core library definition modules found in gm2-libs.\n+\n+GM2-LIBS-BOOT-DEFS = \\\n+   ASCII.def \\\n+   Args.def \\\n+   Assertion.def \\\n+   Break.def \\\n+   CmdArgs.def \\\n+   Debug.def \\\n+   DynamicStrings.def \\\n+   Environment.def \\\n+   FIO.def \\\n+   FormatStrings.def \\\n+   FpuIO.def \\\n+   IO.def \\\n+   Indexing.def \\\n+   M2Dependent.def \\\n+   M2EXCEPTION.def \\\n+   M2LINK.def \\\n+   M2RTS.def \\\n+   NumberIO.def \\\n+   PushBackInput.def \\\n+   RTExceptions.def \\\n+   SArgs.def \\\n+   SEnvironment.def \\\n+   SFIO.def \\\n+   SYSTEM.def \\\n+   Scan.def \\\n+   StdIO.def \\\n+   Storage.def \\\n+   StrCase.def \\\n+   StrIO.def \\\n+   StrLib.def \\\n+   StringConvert.def \\\n+   SysExceptions.def \\\n+   SysStorage.def \\\n+   TimeString.def \\\n+   UnixArgs.def \\\n+   dtoa.def \\\n+   errno.def \\\n+   ldtoa.def \\\n+   libc.def \\\n+   libm.def \\\n+   termios.def \\\n+   wrapc.def \\\n+\n+# Core library implementation modules found in gm2-libs.\n+\n+GM2-LIBS-BOOT-MODS = \\\n+   ASCII.mod \\\n+   Args.mod \\\n+   Assertion.mod \\\n+   Break.mod \\\n+   CmdArgs.mod \\\n+   Debug.mod \\\n+   DynamicStrings.mod \\\n+   Environment.mod \\\n+   FIO.mod \\\n+   FormatStrings.mod \\\n+   FpuIO.mod \\\n+   IO.mod \\\n+   Indexing.mod \\\n+   M2Dependent.mod \\\n+   M2EXCEPTION.mod \\\n+   M2RTS.mod \\\n+   NumberIO.mod \\\n+   PushBackInput.mod \\\n+   RTExceptions.mod \\\n+   SArgs.mod \\\n+   SEnvironment.mod \\\n+   SFIO.mod \\\n+   Scan.mod \\\n+   Storage.mod \\\n+   StrCase.mod \\\n+   StrIO.mod \\\n+   StrLib.mod \\\n+   StringConvert.mod \\\n+   SysStorage.mod \\\n+   TimeString.mod \\\n+\n+# Hand translated C files and C files for definition module for \"C\" modules\n+# found in gm2-libs-ch.\n+\n+GM2-LIBS-BOOT-C = \\\n+   StdIO.c \\\n+   SysExceptions.c \\\n+   choosetemp.c \\\n+   errno.c \\\n+   termios.c \\\n+   wrapc.c \\\n+\n+# C++ implemented modules found in gm2-libs-ch.\n+\n+GM2-LIBS-BOOT-CC = \\\n+   UnixArgs.cc \\\n+   dtoa.cc \\\n+   ldtoa.cc\n+\n+# Definition modules for the front end found in gm2-compiler.\n+\n+GM2-COMP-BOOT-DEFS = \\\n+   FifoQueue.def \\\n+   Lists.def \\\n+   M2ALU.def \\\n+   M2AsmUtil.def \\\n+   M2Base.def \\\n+   M2BasicBlock.def \\\n+   M2Batch.def \\\n+   M2Bitset.def \\\n+   M2CaseList.def \\\n+   M2Check.def \\\n+   M2Code.def \\\n+   M2ColorString.def \\\n+   M2Comp.def \\\n+   M2Const.def \\\n+   M2Debug.def \\\n+   M2DebugStack.def \\\n+   M2Defaults.def \\\n+   M2DriverOptions.def \\\n+   M2Emit.def \\\n+   M2Error.def \\\n+   M2EvalSym.def \\\n+   M2FileName.def \\\n+   M2GCCDeclare.def \\\n+   M2GenGCC.def \\\n+   M2Graph.def \\\n+   M2LexBuf.def \\\n+   M2MetaError.def \\\n+   M2Optimize.def \\\n+   M2Options.def \\\n+   M2Pass.def \\\n+   M2Preprocess.def \\\n+   M2Printf.def \\\n+   M2Quads.def \\\n+   M2Quiet.def \\\n+   M2Range.def \\\n+   M2Reserved.def \\\n+   M2SSA.def \\\n+   M2Scaffold.def \\\n+   M2Scope.def \\\n+   M2Search.def \\\n+   M2Size.def \\\n+   M2StackAddress.def \\\n+   M2StackWord.def \\\n+   M2Students.def \\\n+   M2Swig.def \\\n+   M2System.def \\\n+   NameKey.def \\\n+   ObjectFiles.def \\\n+   Output.def \\\n+   P0SymBuild.def \\\n+   P0SyntaxCheck.def \\\n+   P1Build.def \\\n+   P1SymBuild.def \\\n+   P2Build.def \\\n+   P2SymBuild.def \\\n+   P3Build.def \\\n+   P3SymBuild.def \\\n+   PCBuild.def \\\n+   PCSymBuild.def \\\n+   PHBuild.def \\\n+   Sets.def \\\n+   SymbolConversion.def \\\n+   SymbolKey.def \\\n+   SymbolTable.def \\\n+   bnflex.def \\\n+   m2flex.def \\\n+\n+# Implementation modules for the front end found in gm2-compiler.\n+\n+GM2-COMP-BOOT-MODS = \\\n+   FifoQueue.mod \\\n+   Lists.mod \\\n+   Lists.mod \\\n+   M2ALU.mod \\\n+   M2AsmUtil.mod \\\n+   M2Base.mod \\\n+   M2BasicBlock.mod \\\n+   M2Batch.mod \\\n+   M2Bitset.mod \\\n+   M2CaseList.mod \\\n+   M2Check.mod \\\n+   M2Code.mod \\\n+   M2ColorString.mod \\\n+   M2Comp.mod \\\n+   M2Const.mod \\\n+   M2Debug.mod \\\n+   M2DebugStack.mod \\\n+   M2Defaults.mod \\\n+   M2DriverOptions.mod \\\n+   M2Emit.mod \\\n+   M2Error.mod \\\n+   M2FileName.mod \\\n+   M2GCCDeclare.mod \\\n+   M2GenGCC.mod \\\n+   M2Graph.mod \\\n+   M2LexBuf.mod \\\n+   M2MetaError.mod \\\n+   M2Optimize.mod \\\n+   M2Options.mod \\\n+   M2Pass.mod \\\n+   M2Preprocess.mod \\\n+   M2Printf.mod \\\n+   M2Quads.mod \\\n+   M2Quiet.mod \\\n+   M2Range.mod \\\n+   M2Reserved.mod \\\n+   M2SSA.mod \\\n+   M2Scaffold.mod \\\n+   M2Scope.mod \\\n+   M2Search.mod \\\n+   M2Size.mod \\\n+   M2StackAddress.mod \\\n+   M2StackWord.mod \\\n+   M2Students.mod \\\n+   M2Swig.mod \\\n+   M2System.mod \\\n+   NameKey.mod \\\n+   NameKey.mod \\\n+   ObjectFiles.mod \\\n+   Output.mod \\\n+   P0SymBuild.mod \\\n+   P1SymBuild.mod \\\n+   P2SymBuild.mod \\\n+   P3SymBuild.mod \\\n+   PCSymBuild.mod \\\n+   Sets.mod \\\n+   SymbolConversion.mod \\\n+   SymbolKey.mod \\\n+   SymbolKey.mod \\\n+   SymbolTable.mod \\\n+   bnflex.mod \\\n+\n+# The interface between the modula-2 front end and gimple/trees found in directory gm2-gcc.\n+\n+GM2-GCC-DEFS = \\\n+   m2block.def \\\n+   m2builtins.def \\\n+   m2color.def \\\n+   m2configure.def \\\n+   m2convert.def \\\n+   m2decl.def \\\n+   m2except.def \\\n+   m2except.def \\\n+   m2expr.def \\\n+   m2linemap.def \\\n+   m2misc.def \\\n+   m2statement.def \\\n+   m2top.def \\\n+   m2tree.def \\\n+   m2treelib.def \\\n+   m2type.def \\\n+\n+# The following lists define the source files used to build gm2 using Modula-2\n+# sources directly.\n+#\n+# cc1gm2$(exeext) uses these definition modules from the core libraries.\n+\n+GM2-LIBS-DEFS = \\\n+   ASCII.def \\\n+   Args.def \\\n+   Assertion.def \\\n+   Break.def \\\n+   Builtins.def \\\n+   COROUTINES.def \\\n+   CmdArgs.def \\\n+   Debug.def \\\n+   DynamicStrings.def \\\n+   Environment.def \\\n+   FIO.def \\\n+   FormatStrings.def \\\n+   FpuIO.def \\\n+   GetOpt.def \\\n+   IO.def \\\n+   Indexing.def \\\n+   LMathLib0.def \\\n+   LegacyReal.def \\\n+   M2Dependent.def \\\n+   M2EXCEPTION.def \\\n+   M2LINK.def \\\n+   M2RTS.def \\\n+   MathLib0.def \\\n+   MemUtils.def \\\n+   NumberIO.def \\\n+   PushBackInput.def \\\n+   RTExceptions.def \\\n+   RTint.def \\\n+   SArgs.def \\\n+   SEnvironment.def \\\n+   SFIO.def \\\n+   SMathLib0.def \\\n+   SYSTEM.def \\\n+   Scan.def \\\n+   StdIO.def \\\n+   Storage.def \\\n+   StrCase.def \\\n+   StrIO.def \\\n+   StrLib.def \\\n+   StringConvert.def \\\n+   SysStorage.def \\\n+   TimeString.def \\\n+   UnixArgs.def \\\n+   cbuiltin.def \\\n+   dtoa.def \\\n+   ldtoa.def \\\n+   libc.def \\\n+   termios.def \\\n+   wrapc.def \\\n+\n+# cc1gm2$(exeext) uses these implementation modules from the core libraries.\n+\n+GM2-LIBS-MODS = \\\n+   ASCII.mod \\\n+   Args.mod \\\n+   Assertion.mod \\\n+   Break.mod \\\n+   Builtins.mod \\\n+   COROUTINES.mod \\\n+   CmdArgs.mod \\\n+   Debug.mod \\\n+   DynamicStrings.mod \\\n+   Environment.mod \\\n+   FIO.mod \\\n+   FormatStrings.mod \\\n+   FpuIO.mod \\\n+   GetOpt.mod \\\n+   IO.mod \\\n+   Indexing.mod \\\n+   LMathLib0.mod \\\n+   LegacyReal.mod \\\n+   M2Dependent.mod \\\n+   M2EXCEPTION.mod \\\n+   M2RTS.mod \\\n+   MathLib0.mod \\\n+   MemUtils.mod \\\n+   NumberIO.mod \\\n+   PushBackInput.mod \\\n+   RTExceptions.mod \\\n+   RTint.mod \\\n+   SArgs.mod \\\n+   SEnvironment.mod \\\n+   SFIO.mod \\\n+   SMathLib0.mod \\\n+   SYSTEM.mod \\\n+   Scan.mod \\\n+   StdIO.mod \\\n+   Storage.mod \\\n+   StrCase.mod \\\n+   StrIO.mod \\\n+   StrLib.mod \\\n+   StringConvert.mod \\\n+   SysStorage.mod \\\n+   TimeString.mod \\\n+\n+# cc1gm2$(exeext) uses these C modules from the core libraries.\n+\n+GM2-LIBS-C = \\\n+   Selective.c \\\n+   SysExceptions.c \\\n+   cgetopt.c \\\n+   choosetemp.c \\\n+   errno.c \\\n+   host.c \\\n+   termios.c \\\n+   wrapc.c \\\n+\n+# cc1gm2$(exeext) uses these C++ modules from the core libraries.\n+\n+GM2-LIBS-CC = \\\n+   UnixArgs.cc \\\n+   dtoa.cc \\\n+   ldtoa.cc \\\n+\n+# cc1gm2$(exeext) uses these definition modules found in the gm2-compiler directory.\n+\n+GM2-COMP-DEFS = \\\n+   FifoQueue.def \\\n+   Lists.def \\\n+   M2ALU.def \\\n+   M2AsmUtil.def   \\\n+   M2Base.def \\\n+   M2BasicBlock.def \\\n+   M2Batch.def \\\n+   M2Bitset.def \\\n+   M2CaseList.def \\\n+   M2Check.def \\\n+   M2Code.def \\\n+   M2ColorString.def \\\n+   M2Comp.def \\\n+   M2Const.def \\\n+   M2Debug.def \\\n+   M2DebugStack.def \\\n+   M2Defaults.def \\\n+   M2DriverOptions.def \\\n+   M2Emit.def \\\n+   M2Error.def \\\n+   M2FileName.def \\\n+   M2GCCDeclare.def \\\n+   M2GenGCC.def \\\n+   M2Graph.def \\\n+   M2LexBuf.def \\\n+   M2MetaError.def \\\n+   M2Optimize.def \\\n+   M2Options.def \\\n+   M2Pass.def \\\n+   M2Preprocess.def \\\n+   M2Printf.def \\\n+   M2Quads.def     \\\n+   M2Quiet.def \\\n+   M2Range.def \\\n+   M2Reserved.def \\\n+   M2SSA.def \\\n+   M2Scaffold.def \\\n+   M2Scope.def \\\n+   M2Search.def \\\n+   M2Size.def \\\n+   M2StackAddress.def \\\n+   M2StackWord.def \\\n+   M2Students.def \\\n+   M2Swig.def \\\n+   M2System.def \\\n+   NameKey.def \\\n+   ObjectFiles.def \\\n+   P0SymBuild.def \\\n+   P0SyntaxCheck.def \\\n+   P1Build.def \\\n+   P1SymBuild.def \\\n+   P2Build.def \\\n+   P2SymBuild.def \\\n+   P3Build.def \\\n+   P3SymBuild.def \\\n+   PCBuild.def \\\n+   PCSymBuild.def \\\n+   PHBuild.def \\\n+   Sets.def \\\n+   SymbolConversion.def \\\n+   SymbolKey.def \\\n+   SymbolTable.def \\\n+   bnflex.def \\\n+\n+# cc1gm2$(exeext) uses these implementation modules found in the gm2-compiler directory.\n+\n+GM2-COMP-MODS = \\\n+   FifoQueue.mod \\\n+   Lists.mod \\\n+   M2ALU.mod \\\n+   M2AsmUtil.mod \\\n+   M2Base.mod \\\n+   M2BasicBlock.mod \\\n+   M2Batch.mod \\\n+   M2Bitset.mod \\\n+   M2CaseList.mod \\\n+   M2Check.mod \\\n+   M2Code.mod \\\n+   M2ColorString.mod \\\n+   M2Comp.mod \\\n+   M2Const.mod \\\n+   M2Debug.mod \\\n+   M2DebugStack.mod \\\n+   M2Defaults.mod \\\n+   M2DriverOptions.mod \\\n+   M2Emit.mod \\\n+   M2Error.mod \\\n+   M2FileName.mod \\\n+   M2GCCDeclare.mod \\\n+   M2GenGCC.mod \\\n+   M2Graph.mod \\\n+   M2LexBuf.mod \\\n+   M2MetaError.mod \\\n+   M2Optimize.mod \\\n+   M2Options.mod \\\n+   M2Pass.mod \\\n+   M2Preprocess.mod \\\n+   M2Printf.mod \\\n+   M2Quads.mod \\\n+   M2Quiet.mod \\\n+   M2Range.mod \\\n+   M2Reserved.mod \\\n+   M2SSA.mod \\\n+   M2Scaffold.mod \\\n+   M2Scope.mod \\\n+   M2Search.mod \\\n+   M2Size.mod \\\n+   M2StackAddress.mod \\\n+   M2StackWord.mod \\\n+   M2Students.mod \\\n+   M2Swig.mod \\\n+   M2System.mod \\\n+   NameKey.mod \\\n+   ObjectFiles.mod \\\n+   Output.mod \\\n+   P0SymBuild.mod \\\n+   P1SymBuild.mod \\\n+   P2SymBuild.mod  \\\n+   P3SymBuild.mod  \\\n+   PCSymBuild.mod \\\n+   Sets.mod \\\n+   SymbolConversion.mod \\\n+   SymbolKey.mod \\\n+   SymbolTable.mod \\\n+   bnflex.mod \\\n+\n+# Implementation modules created by the parser generator pge from .bnf files.\n+\n+GM2-AUTO-MODS = \\\n+   P2Build.mod \\\n+   P3Build.mod \\\n+   PHBuild.mod \\\n+   PCBuild.mod \\\n+   P1Build.mod \\\n+   P0SyntaxCheck.mod \\\n+\n+# LIBIBERTY interface definition modules\n+\n+GM2-LIBIBERTY-DEFS = \\\n+   choosetemp.def \\\n+   pexecute.def\n+\n+BUILD-LIBS-BOOT-H = $(GM2-LIBS-BOOT-DEFS:%.def=m2/gm2-libs-boot/$(SRC_PREFIX)%.h)\n+\n+BUILD-LIBS-BOOT = $(BUILD-LIBS-BOOT-H) \\\n+                  $(GM2-LIBS-BOOT-MODS:%.mod=m2/gm2-libs-boot/%.o) \\\n+                  $(GM2-LIBS-BOOT-CC:%.cc=m2/gm2-libs-boot/%.o) \\\n+                  $(GM2-LIBS-BOOT-C:%.c=m2/gm2-libs-boot/%.o)\n+\n+BUILD-COMPILER-BOOT-H = $(GM2-COMP-BOOT-DEFS:%.def=m2/gm2-compiler-boot/$(SRC_PREFIX)%.h) \\\n+                        $(GM2-LIBIBERTY-DEFS:%.def=m2/gm2-libiberty/$(SRC_PREFIX)%.h) \\\n+                        $(GM2-GCC-DEFS:%.def=m2/gm2-gcc/$(SRC_PREFIX)%.h)\n+\n+BUILD-COMPILER-BOOT = $(BUILD-COMPILER-BOOT-H) \\\n+                      $(GM2-COMP-BOOT-DEFS:%.def=m2/gm2-compiler-boot/$(SRC_PREFIX)%.h) \\\n+                      $(GM2-AUTO-MODS:%.mod=m2/gm2-compiler-boot/%.o) \\\n+                      $(GM2-COMP-BOOT-MODS:%.mod=m2/gm2-compiler-boot/%.o) \\\n+                      m2/gm2-compiler-boot/m2flex.o\n+\n+BUILD-BOOT-H = m2/boot-bin/mc$(exeext) \\\n+               $(BUILD-LIBS-BOOT-H) $(BUILD-COMPILER-BOOT-H) $(TARGET_H) $(PLUGIN_HEADERS)\n+\n+# Core library definition modules used by the modula-2 to C++ translator.\n+\n+MC-LIB-DEFS = \\\n+   ASCII.def \\\n+   Args.def \\\n+   Assertion.def \\\n+   Break.def  \\\n+   COROUTINES.def \\\n+   CmdArgs.def \\\n+   Debug.def \\\n+   DynamicStrings.def \\\n+   Environment.def \\\n+   FIO.def \\\n+   FormatStrings.def \\\n+   FpuIO.def \\\n+   IO.def \\\n+   M2Dependent.def \\\n+   M2EXCEPTION.def \\\n+   M2LINK.def \\\n+   M2RTS.def \\\n+   MemUtils.def \\\n+   NumberIO.def \\\n+   PushBackInput.def \\\n+   RTExceptions.def \\\n+   RTco.def \\\n+   RTint.def \\\n+   SArgs.def \\\n+   SFIO.def \\\n+   SYSTEM.def \\\n+   Selective.def \\\n+   StdIO.def \\\n+   Storage.def \\\n+   StrCase.def \\\n+   StrIO.def \\\n+   StrLib.def \\\n+   StringConvert.def \\\n+   SysExceptions.def \\\n+   SysStorage.def \\\n+   TimeString.def \\\n+   UnixArgs.def \\\n+   dtoa.def \\\n+   errno.def \\\n+   ldtoa.def \\\n+   libc.def \\\n+   libm.def \\\n+   termios.def \\\n+   wrapc.def \\\n+\n+# Core library implementation modules used by the modula-2 to C++ translator.\n+\n+MC-LIB-MODS = \\\n+   ASCII.mod \\\n+   Args.mod \\\n+   Assertion.mod \\\n+   Break.mod  \\\n+   CmdArgs.mod \\\n+   Debug.mod \\\n+   DynamicStrings.mod \\\n+   Environment.mod \\\n+   FIO.mod \\\n+   FormatStrings.mod \\\n+   FpuIO.mod \\\n+   IO.mod \\\n+   M2Dependent.mod \\\n+   M2EXCEPTION.mod \\\n+   M2RTS.mod \\\n+   MemUtils.mod \\\n+   NumberIO.mod \\\n+   PushBackInput.mod \\\n+   RTExceptions.mod \\\n+   RTint.mod \\\n+   SArgs.mod \\\n+   SFIO.mod \\\n+   StdIO.mod \\\n+   Storage.mod \\\n+   StrCase.mod \\\n+   StrIO.mod \\\n+   StrLib.mod \\\n+   StringConvert.mod \\\n+   SysStorage.mod \\\n+   TimeString.mod \\\n+\n+MC-LIB-BOOT-C = $(MC-LIB-MODS:%.mod=%.c)\n+\n+# Definition modules for the modula-2 to C++ translator found in mc.\n+\n+MC-DEFS = \\\n+   Indexing.def \\\n+   alists.def \\\n+   decl.def \\\n+   keyc.def \\\n+   lists.def \\\n+   mcComment.def \\\n+   mcComp.def \\\n+   mcDebug.def \\\n+   mcError.def \\\n+   mcFileName.def \\\n+   mcLexBuf.def \\\n+   mcMetaError.def \\\n+   mcOptions.def \\\n+   mcPreprocess.def \\\n+   mcPretty.def \\\n+   mcPrintf.def \\\n+   mcQuiet.def \\\n+   mcReserved.def \\\n+   mcSearch.def \\\n+   mcStack.def \\\n+   mcStream.def \\\n+   mcflex.def \\\n+   mcp1.def \\\n+   mcp2.def \\\n+   mcp3.def \\\n+   mcp4.def \\\n+   mcp5.def  \\\n+   nameKey.def \\\n+   symbolKey.def \\\n+   varargs.def \\\n+   wlists.def \\\n+\n+# Implementation modules for the modula-2 to C++ translator found in mc.\n+\n+MC-MODS = \\\n+   Indexing.mod \\\n+   alists.mod \\\n+   decl.mod \\\n+   keyc.mod \\\n+   lists.mod \\\n+   mcComment.mod \\\n+   mcComp.mod \\\n+   mcDebug.mod \\\n+   mcError.mod \\\n+   mcFileName.mod \\\n+   mcLexBuf.mod \\\n+   mcMetaError.mod \\\n+   mcOptions.mod \\\n+   mcPreprocess.mod \\\n+   mcPretty.mod \\\n+   mcPrintf.mod \\\n+   mcQuiet.mod \\\n+   mcReserved.mod \\\n+   mcSearch.mod \\\n+   mcStack.mod \\\n+   mcStream.mod \\\n+   nameKey.mod \\\n+   symbolKey.mod \\\n+   top.mod \\\n+   varargs.mod \\\n+   wlists.mod \\\n+\n+# Parser files generated by pge from .bnf files.\n+\n+MC-AUTO-MODS = \\\n+   mcp1.mod \\\n+   mcp2.mod \\\n+   mcp3.mod \\\n+   mcp4.mod \\\n+   mcp5.mod\n+\n+MC-BOOT-C = $(MC-MODS:%.mod=%.c) $(MC-AUTO-MODS:%.mod=%.c)\n+\n+# C interface files for mc.\n+\n+MC-INTERFACE-C = \\\n+   M2LINK.c \\\n+   SYSTEM.c \\\n+   Selective.c \\\n+   SysExceptions.c \\\n+   abort.c \\\n+   errno.c \\\n+   libc.c \\\n+   mcrts.c \\\n+   termios.c \\\n+   wrapc.c \\\n+\n+# C++ interface files for mc.\n+\n+MC-INTERFACE-CC = \\\n+   UnixArgs.cc \\\n+   dtoa.cc \\\n+   ldtoa.cc \\\n+\n+BUILD-MC-BOOT-H =  $(MC-LIB-DEFS:%.def=m2/mc-boot-gen/$(SRC_PREFIX)%.h) \\\n+                   $(MC-DEFS:%.def=m2/mc-boot-gen/$(SRC_PREFIX)%.h)\n+\n+BUILD-MC-BOOT-C =  $(MC-LIB-MODS:%.mod=m2/mc-boot-gen/$(SRC_PREFIX)%.c) \\\n+                   $(MC-MODS:%.mod=m2/mc-boot-gen/$(SRC_PREFIX)%.c)\n+\n+BUILD-MC-BOOT-AUTO-C = $(MC-AUTO-MODS:%.mod=m2/mc-boot-gen/$(SRC_PREFIX)%.c)\n+\n+BUILD-MC-BOOT-O =  $(MC-LIB-BOOT-C:%.c=m2/mc-boot/$(SRC_PREFIX)%.o) \\\n+                   $(MC-BOOT-C:%.c=m2/mc-boot/$(SRC_PREFIX)%.o)\n+\n+BUILD-MC-INTERFACE-O = $(MC-INTERFACE-C:%.c=m2/mc-boot-ch/$(SRC_PREFIX)%.o) \\\n+                       $(MC-INTERFACE-CC:%.cc=m2/mc-boot-ch/$(SRC_PREFIX)%.o)\n+\n+GM2GCC = -I$(srcdir)/m2 -Im2 -I$(srcdir)/m2/gm2-gcc -Im2/gm2-gcc\n+\n+MCINCLUDES= -I$(srcdir)/m2/mc-boot-ch\n+LOCAL_INCLUDES = -I. -I$(srcdir)/../include -I$(srcdir)\n+\n+GCC_COLOR=m2/gm2-gcc/m2color.o diagnostic-color.o\n+\n+m2/boot-bin/mc$(exeext): $(BUILD-MC-BOOT-O) $(BUILD-MC-INTERFACE-O) \\\n+        m2/mc-boot/main.o mcflex.o m2/gm2-libs-boot/RTcodummy.o\n+\t+$(LINKER) $(ALL_LINKERFLAGS) $(LDFLAGS) -o $@ $(BUILD-MC-BOOT-O) \\\n+         $(BUILD-MC-INTERFACE-O) m2/mc-boot/main.o \\\n+         mcflex.o m2/gm2-libs-boot/RTcodummy.o -lm\n+\n+m2/mc-boot/$(SRC_PREFIX)%.o: m2/mc-boot/$(SRC_PREFIX)%.c\n+\t$(CXX) -g -c -I. -I$(srcdir)/m2/mc-boot-ch -I$(srcdir)/m2/mc-boot -I$(srcdir)/../include -I$(srcdir) $(INCLUDES) $< -o $@\n+\n+m2/mc-boot-ch/$(SRC_PREFIX)%.o: m2/mc-boot-ch/$(SRC_PREFIX)%.c m2/gm2-libs/gm2-libs-host.h\n+\t$(CXX) -DHAVE_CONFIG_H -g -c -I. -Im2/gm2-libs -I$(srcdir)/../include -I$(srcdir) $(INCLUDES) -Im2/gm2-libs $< -o $@\n+\n+m2/mc-boot-ch/$(SRC_PREFIX)%.o: m2/mc-boot-ch/$(SRC_PREFIX)%.cc m2/gm2-libs/gm2-libs-host.h\n+\t$(CXX) -DHAVE_CONFIG_H -g -c -I. -Im2/gm2-libs -I$(srcdir)/../include -I$(srcdir) $(INCLUDES) -Im2/gm2-libs $< -o $@\n+\n+m2/mc-boot/main.o: $(M2LINK) $(srcdir)/m2/init/mcinit\n+\tunset CC ; $(M2LINK) -s --langc++ --exit --name m2/mc-boot/main.c $(srcdir)/m2/init/mcinit\n+\t$(CXX) -g -c -I. -I$(srcdir)/../include -I$(srcdir) $(INCLUDES) m2/mc-boot/main.c -o $@\n+\n+mcflex.o: mcflex.c\n+\t$(CC) -I$(srcdir)/m2/mc -g -c $< -o $@   # remember that mcReserved.h is copied into m2/mc\n+\n+mcflex.c: $(srcdir)/m2/mc/mc.flex\n+\tflex -t $< > $@\n+\n+m2/gm2-libs-boot/%.o: $(srcdir)/m2/gm2-libs-boot/%.mod $(MCDEPS) $(BUILD-BOOT-H)\n+\t$(MC) -o=m2/gm2-libs-boot/$*.c $(srcdir)/m2/gm2-libs-boot/$*.mod\n+\t$(COMPILER) -c -DIN_GCC $(CFLAGS) $(MCINCLUDES) m2/gm2-libs-boot/$*.c -o $@\n+\n+m2/gm2-libs-boot/%.o: $(srcdir)/m2/gm2-libs/%.mod $(MCDEPS) $(BUILD-BOOT-H)\n+\t$(MC) -o=m2/gm2-libs-boot/$*.c $(srcdir)/m2/gm2-libs/$*.mod\n+\t$(COMPILER) -c -DIN_GCC $(CFLAGS) -I$(srcdir)/m2 -Im2 -I. -Im2/gm2-libs-boot $(MCINCLUDES) $(INCLUDES) m2/gm2-libs-boot/$*.c -o $@\n+\n+m2/gm2-libs-boot/$(SRC_PREFIX)%.h: $(srcdir)/m2/gm2-libs/%.def $(MCDEPS)\n+\t$(MC) -o=$@ $(srcdir)/m2/gm2-libs/$*.def\n+\n+m2/gm2-libs-boot/RTcodummy.o: $(srcdir)/m2/gm2-libs-ch/RTcodummy.c m2/gm2-libs/gm2-libs-host.h\n+\t$(CXX) -c -DIN_GCC $(CFLAGS) -Im2/gm2-libs -I$(srcdir)/m2 -Im2 -I. -Im2/gm2-libs-boot $(INCLUDES) $< -o $@\n+\n+m2/gm2-libs-boot/RTintdummy.o: $(srcdir)/m2/gm2-libs-ch/RTintdummy.c m2/gm2-libs/gm2-libs-host.h\n+\t$(CXX) -c -DIN_GCC $(CFLAGS) -Im2/gm2-libs -I$(srcdir)/m2 -Im2 -I. -Im2/gm2-libs-boot $(INCLUDES) $< -o $@\n+\n+m2/gm2-libs-boot/wrapc.o: $(srcdir)/m2/gm2-libs-ch/wrapc.c m2/gm2-libs-boot/$(SRC_PREFIX)wrapc.h m2/gm2-libs/gm2-libs-host.h\n+\t$(CXX) -c -DHAVE_CONFIG_H $(CFLAGS) -Im2/gm2-libs -I$(srcdir)/m2 -Im2 -I. -Im2/gm2-libs-boot -Im2/gm2-libs $(INCLUDES) $< -o $@\n+\n+m2/gm2-libs-boot/M2LINK.o: $(srcdir)/m2/gm2-libs-ch/M2LINK.c m2/gm2-libs-boot/$(SRC_PREFIX)M2LINK.h m2/gm2-libs/gm2-libs-host.h\n+\t$(CXX) -c -DHAVE_CONFIG_H $(CFLAGS) -Im2/gm2-libs -I$(srcdir)/m2 -Im2 -I. -Im2/gm2-libs-boot -Im2/gm2-libs $(INCLUDES) $< -o $@\n+\n+m2/gm2-libs-boot/UnixArgs.o: $(srcdir)/m2/gm2-libs-ch/UnixArgs.cc m2/gm2-libs-boot/$(SRC_PREFIX)UnixArgs.h m2/gm2-libs/gm2-libs-host.h\n+\t$(CXX) -c -DIN_GCC $(CFLAGS) -Im2/gm2-libs -I$(srcdir)/m2 -Im2 -I. -Im2/gm2-libs-boot $(INCLUDES) $< -o $@\n+\n+m2/gm2-libs-boot/choosetemp.o: m2/gm2-libs-ch/choosetemp.c m2/gm2-libiberty/Gchoosetemp.h m2/gm2-libs/gm2-libs-host.h\n+\t$(CXX) -c $(CFLAGS) -Im2/gm2-libs -I$(srcdir)/m2 -Im2 -I. -Im2/gm2-libs-boot -Im2/gm2-libiberty -I$(srcdir)/m2/gm2-libiberty/ $(INCLUDES) $< -o $@\n+\n+m2/gm2-libs-boot/errno.o: $(srcdir)/m2/gm2-libs-ch/errno.c m2/gm2-libs-boot/$(SRC_PREFIX)errno.h m2/gm2-libs/gm2-libs-host.h\n+\t$(CXX) -c $(CFLAGS) -Im2/gm2-libs -I$(srcdir)/m2 -Im2 -I. -Im2/gm2-libs-boot $(INCLUDES) $< -o $@\n+\n+m2/gm2-libs-boot/dtoa.o: $(srcdir)/m2/gm2-libs-ch/dtoa.cc m2/gm2-libs/gm2-libs-host.h\n+\t$(CXX) -c $(CFLAGS) -Im2/gm2-libs -I$(srcdir)/m2 -Im2 -I. -Im2/gm2-libs-boot $(INCLUDES) $< -o $@\n+\n+m2/gm2-libs-boot/ldtoa.o: $(srcdir)/m2/gm2-libs-ch/ldtoa.cc m2/gm2-libs/gm2-libs-host.h\n+\t$(CXX) -c $(CFLAGS) -Im2/gm2-libs -I$(srcdir)/m2 -Im2 -I. -Im2/gm2-libs-boot $(INCLUDES) $< -o $@\n+\n+m2/gm2-libs-boot/termios.o: $(srcdir)/m2/gm2-libs-ch/termios.c $(BUILD-LIBS-BOOT-H) m2/gm2-libs/gm2-libs-host.h\n+\t$(CXX) -c $(CFLAGS) -Im2/gm2-libs -I$(srcdir)/m2 -Im2 -I. -Im2/gm2-libs-boot $(INCLUDES) $< -o $@\n+\n+m2/gm2-libs-boot/SysExceptions.o: $(srcdir)/m2/gm2-libs-ch/SysExceptions.c \\\n+                                  m2/gm2-libs-boot/$(SRC_PREFIX)SysExceptions.h m2/gm2-libs/gm2-libs-host.h\n+\t$(CXX) -c $(CFLAGS) -Im2/gm2-libs -I$(srcdir)/m2 -Im2 -I. -Im2/gm2-libs-boot $(INCLUDES) $< -o $@\n+\n+m2/gm2-libs-boot/SysStorage.o: $(srcdir)/m2/gm2-libs/SysStorage.mod $(MCDEPS) $(BUILD-BOOT-H)\n+\t$(MC) -o=m2/gm2-libs-boot/SysStorage.c $(srcdir)/m2/gm2-libs/SysStorage.mod\n+\t$(COMPILER) -DIN_GCC -c $(CFLAGS) \\\n+          -I$(srcdir)/m2 -Im2 -I. -Im2/gm2-libs-boot $(MCINCLUDES) $(INCLUDES) \\\n+          m2/gm2-libs-boot/SysStorage.c -o m2/gm2-libs-boot/SysStorage.o\n+\n+m2/gm2-compiler-boot/M2GCCDeclare.o: $(srcdir)/m2/gm2-compiler/M2GCCDeclare.mod $(MCDEPS) $(BUILD-BOOT-H)\n+\t$(MC) --extended-opaque -o=m2/gm2-compiler-boot/M2GCCDeclare.c $<\n+\t$(COMPILER) -c $(ALL_COMPILERFLAGS) $(ALL_CPPFLAGS) $(GM2GCC) \\\n+            -I. -I$(srcdir)/../include -I$(srcdir) \\\n+            -I. -Im2/gm2-libs-boot -Im2/gm2-compiler-boot \\\n+            -I$(srcdir)/m2/gm2-libiberty $(MCINCLUDES) $(INCLUDES) m2/gm2-compiler-boot/M2GCCDeclare.c -o $@\n+\n+m2/gm2-compiler-boot/M2Error.o: $(srcdir)/m2/gm2-compiler/M2Error.mod $(MCDEPS) $(BUILD-BOOT-H)\n+\t$(MC) --extended-opaque -o=m2/gm2-compiler-boot/M2Error.c $<\n+\t$(COMPILER) -c $(ALL_COMPILERFLAGS) $(ALL_CPPFLAGS) $(GM2GCC) \\\n+            -I. -I$(srcdir)/../include -I$(srcdir) \\\n+            -I. -Im2/gm2-libs-boot -Im2/gm2-compiler-boot \\\n+            -I$(srcdir)/m2/gm2-libiberty $(MCINCLUDES) $(INCLUDES) m2/gm2-compiler-boot/M2Error.c -o $@\n+\n+m2/gm2-compiler-boot/%.o: $(srcdir)/m2/gm2-compiler/%.mod $(BUILD-BOOT-H) $(MCDEPS) $(BUILD-BOOT-H)\n+\t$(MC) -o=m2/gm2-compiler-boot/$*.c $(srcdir)/m2/gm2-compiler/$*.mod\n+\t$(COMPILER) -c $(ALL_COMPILERFLAGS) $(ALL_CPPFLAGS) $(GM2GCC) \\\n+            -I. -I$(srcdir)/../include -I$(srcdir) \\\n+            -I. -Im2/gm2-libs-boot -Im2/gm2-compiler-boot -Im2/gm2-libiberty \\\n+            -I$(srcdir)/m2/gm2-libiberty $(MCINCLUDES) $(INCLUDES) m2/gm2-compiler-boot/$*.c -o $@\n+\n+m2/gm2-compiler-boot/%.o: m2/gm2-compiler-boot/%.mod $(MCDEPS) $(BUILD-BOOT-H)\n+\t$(MC) -o=m2/gm2-compiler-boot/$*.c m2/gm2-compiler-boot/$*.mod\n+\t$(COMPILER) -c $(ALL_COMPILERFLAGS) $(ALL_CPPFLAGS) $(GM2GCC) \\\n+            -I. -I$(srcdir)/../include -I$(srcdir) \\\n+            -I. -Im2/gm2-libs-boot -Im2/gm2-compiler-boot \\\n+            -I$(srcdir)/m2/gm2-libiberty $(MCINCLUDES) $(INCLUDES) m2/gm2-compiler-boot/$*.c -o $@\n+\n+m2/gm2-compiler-boot/$(SRC_PREFIX)%.h: $(srcdir)/m2/gm2-compiler/%.def $(MCDEPS)\n+\t$(MC) -o=$@ $(srcdir)/m2/gm2-compiler/$*.def\n+\n+m2/gm2-compiler-boot/m2flex.o: m2/gm2-compiler/m2flex.c $(BUILD-BOOT-H) $(TIMEVAR_H) \\\n+        $(BUILD-LIBS-BOOT-H)  m2/gm2-compiler-boot/$(SRC_PREFIX)NameKey.h \\\n+        $(CONFIG_H) m2/gm2config.h $(TARGET_H) $(PLUGIN_HEADERS)\n+\t$(COMPILER) -c -g $(ALL_COMPILERFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) \\\n+          $(GM2GCC) $(INCLUDES) -I$(srcdir)/m2 \\\n+          -Im2 -Im2/gm2-compiler-boot -Im2/gm2-libs-boot $< -o $@\n+\n+m2/gm2-compiler/m2flex.c: $(srcdir)/m2/m2.flex $(TIMEVAR_H) insn-attr-common.h\n+\tflex -t $< | sed -e 's/ malloc/ xmalloc/' | sed -e 's/ realloc/ xrealloc/' > $@\n+\n+m2/gm2-libiberty/$(SRC_PREFIX)%.h: $(srcdir)/m2/gm2-libiberty/%.def $(MCDEPS)\n+\t$(MC) -o=$@ $(srcdir)/m2/gm2-libiberty/$*.def\n+\n+# The rules to build objects in gm2-compiler and gm2-libs directories.\n+\n+m2/gm2-compiler/%.o: $(srcdir)/m2/gm2-compiler/%.mod\n+\t$(GM2_1) $(GM2_FLAGS) -c -I$(srcdir)/m2/gm2-compiler -I$(srcdir)/m2/gm2-libs -I$(srcdir)/m2/gm2-gcc -I$(srcdir)/m2/gm2-libiberty $< -o $@\n+\n+m2/gm2-compiler/m2flex.o: m2/gm2-compiler/m2flex.c m2/gm2-libs/gm2-libs-host.h $(TIMEVAR_H)\n+\t$(COMPILER) -c -g $(ALL_COMPILERFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) \\\n+          $(GM2GCC) -Im2/gm2-compiler-boot -Im2/gm2-libs-boot $< -o $@\n+\n+m2/gm2-compiler/%.o: m2/gm2-compiler/%.mod\n+\t$(GM2_1) $(GM2_FLAGS) -c -I$(srcdir)/m2/gm2-compiler -I$(srcdir)/m2/gm2-libs -I$(srcdir)/m2/gm2-gcc -I$(srcdir)/m2/gm2-libiberty $< -o $@\n+\n+m2/gm2-libs-iso/%.o: $(srcdir)/m2/gm2-libs-iso/%.c m2/gm2-libs/gm2-libs-host.h\n+\t$(CXX) -DBUILD_GM2_LIBS_TARGET -DBUILD_GM2_LIBS -c $(CFLAGS) -Im2/gm2-libs -I$(srcdir)/m2 -Im2/gm2-libs-boot $(INCLUDES) $< -o $@\n+\n+m2/gm2-libs-iso/%.o: $(srcdir)/m2/gm2-libs-iso/%.mod\n+\t$(GM2_1) $(GM2_ISO_FLAGS) -c -B./ -Im2/gm2-libs-iso:$(srcdir)/m2/gm2-libs-iso -I$(srcdir)/m2/gm2-libs $< -o $@\n+\n+\n+# We build the cc1gm2$(exeext) from the boot stage and then proceed to build it\n+# again using itself.\n+\n+m2/gm2-libs/gm2-libs-host.h:\n+\techo \"Configuring to build libraries using native compiler\" ; \\\n+        NEW_SRCDIR=`${srcdir}/m2/tools-src/calcpath ../../ ${srcdir} m2/gm2-libs` ; \\\n+        export NEW_SRCDIR ; \\\n+        cd m2/gm2-libs ; \\\n+        $(SHELL) -c '$${NEW_SRCDIR}/config-host \\\n+               --srcdir=$${NEW_SRCDIR} \\\n+               --target=$(target) \\\n+               --program-suffix=$(exeext)'\n+\n+# Autoconf inserts -DCROSS_DIRECTORY_STRUCTURE if we are building a\n+# cross compiler and the ../Makefile.in above appends this to INTERNAL_CFLAGS.\n+\n+m2/gm2config.h:\n+\tNEW_SRCDIR=`${srcdir}/m2/tools-src/calcpath ../ ${srcdir} m2` ; \\\n+        export NEW_SRCDIR ; \\\n+\tcd m2 ; \\\n+\tif echo $(INTERNAL_CFLAGS) | grep \\\\-DCROSS_DIRECTORY_STRUCTURE; then \\\n+            AR=$(echo $(AR_FOR_TARGET) | sed -e \"s/^ //\") ; \\\n+            export AR ; \\\n+            RANLIB=$(echo $(RANLIB_FOR_TARGET) | sed -e \"s/^ //\") ; \\\n+            export RANLIB ; \\\n+            $(SHELL) -c '$${NEW_SRCDIR}/configure --srcdir=$${NEW_SRCDIR} \\\n+                --target=$(target) --program-suffix=$(exeext) \\\n+                --includedir=$(SYSTEM_HEADER_DIR) --libdir=$(libdir) \\\n+                --libexecdir=$(libexecdir)' ; \\\n+        else \\\n+            $(SHELL) -c '$${NEW_SRCDIR}/configure --srcdir=$(NEW_SRCDIR) \\\n+                --target=$(target) --program-suffix=$(exeext)' ; \\\n+        fi\n+\n+$(objdir)/m2/gm2-libs-min/SYSTEM.def: $(GM2_PROG_DEP)\n+\t$(SHELL) $(srcdir)/m2/tools-src/makeSystem -fpim \\\n+             $(srcdir)/m2/gm2-libs-min/SYSTEM.def \\\n+             $(srcdir)/m2/gm2-libs-min/SYSTEM.mod \\\n+             -I$(srcdir)/m2/gm2-libs-min:$(srcdir)/m2/gm2-libs \\\n+             \"$(GM2_FOR_TARGET)\" $@\n+\n+$(objdir)/m2/gm2-libs/SYSTEM.def: $(GM2_PROG_DEP)\n+\techo \"GM2_FOR_TARGET $(GM2_FOR_TARGET)\"\n+\techo \"GCC_FOR_TARGET $(GCC_FOR_TARGET)\"\n+\t$(SHELL) $(srcdir)/m2/tools-src/makeSystem -fpim \\\n+             $(srcdir)/m2/gm2-libs/SYSTEM.def \\\n+             $(srcdir)/m2/gm2-libs/SYSTEM.mod \\\n+             -I$(srcdir)/m2/gm2-libs \\\n+             \"$(GM2_FOR_TARGET)\" $@\n+\n+$(objdir)/m2/gm2-libs-iso/SYSTEM.def: $(GM2_PROG_DEP)\n+\t$(SHELL) $(srcdir)/m2/tools-src/makeSystem -fiso \\\n+             $(srcdir)/m2/gm2-libs-iso/SYSTEM.def \\\n+             $(srcdir)/m2/gm2-libs-iso/SYSTEM.mod \\\n+             -I$(srcdir)/m2/gm2-libs-iso:$(srcdir)/m2/gm2-libs \\\n+             \"$(GM2_FOR_TARGET)\" $@\n+\n+$(objdir)/m2/gm2-libs-coroutines/SYSTEM.def: $(GM2_PROG_DEP)\n+\t$(SHELL) $(srcdir)/m2/tools-src/makeSystem -fpim \\\n+             $(srcdir)/m2/gm2-libs-coroutines/SYSTEM.def \\\n+             $(srcdir)/m2/gm2-libs-coroutines/SYSTEM.mod \\\n+             -I$(srcdir)/m2/gm2-libs-coroutines:$(srcdir)/m2/gm2-libs-iso:$(srcdir)/m2/gm2-libs \\\n+             \"$(GM2_FOR_TARGET)\" $@\n+\n+build-compiler: $(GM2-COMP-MODS:%.mod=m2/gm2-compiler/%.o) \\\n+                $(GM2-AUTO-MODS:%.mod=m2/gm2-compiler/%.o) \\\n+                m2/gm2-compiler/m2flex.o\n+\n+m2/gm2-compiler/gm2.a: build-compiler gm2$(exeext)\n+\t$(AR_FOR_TARGET) cr $@ $(GM2-COMP-MODS:%.mod=m2/gm2-compiler/%.o) \\\n+                    $(GM2-AUTO-MODS:%.mod=m2/gm2-compiler/%.o)\n+\t$(RANLIB) $@\n+\n+m2/gm2-libs-boot/libgm2.a: m2/boot-bin/mc$(exeext) $(BUILD-LIBS-BOOT)\n+\t$(AR) cr $@ $(GM2-LIBS-BOOT-MODS:%.mod=m2/gm2-libs-boot/%.o) \\\n+                    $(GM2-LIBS-BOOT-CC:%.cc=m2/gm2-libs-boot/%.o) \\\n+                    $(GM2-LIBS-BOOT-C:%.c=m2/gm2-libs-boot/%.o)\n+\t$(RANLIB) $@\n+\n+m2/gm2-compiler-boot/gm2.a: m2/boot-bin/mc$(exeext) m2/boot-bin/mklink$(exeext) \\\n+                         $(BUILD-LIBS-BOOT) $(BUILD-COMPILER-BOOT)\n+\t$(AR) cr $@ $(GM2-COMP-BOOT-MODS:%.mod=m2/gm2-compiler-boot/%.o) \\\n+                    $(GM2-AUTO-MODS:%.mod=m2/gm2-compiler-boot/%.o)\n+\t$(RANLIB) $@\n+\n+m2/gm2-compiler-boot/gm2.a: m2/boot-bin/mc$(exeext)\n+\n+m2/boot-bin/mklink$(exeext): $(srcdir)/m2/tools-src/mklink.c\n+\t$(CXX) $(CFLAGS) -I$(srcdir)/m2 -Im2/gm2-libs-boot -Im2/gm2-compiler-boot -I$(srcdir)/m2/mc-boot-ch $(INCLUDES) $< -o $@\n+\n+m2/gm2-compiler-boot/$(SRC_PREFIX)%.h: $(srcdir)/m2/gm2-compiler-boot/%.def $(MCDEPS)\n+\t$(MC) --quiet -o=$@ $(srcdir)/m2/gm2-compiler-boot/$*.def\n+\n+m2/gm2-compiler/%.mod: $(srcdir)/m2/gm2-compiler/%.bnf $(PGE)\n+\t$(PGE) -k -l $< -o $@\n+\n+m2/gm2-compiler-boot/%.mod: $(srcdir)/m2/gm2-compiler/%.bnf $(PGE)\n+\t$(PGE) -k -l $< -o $@\n+\n+check-m2: check-gm2\n+check_m2: check-gm2\n+check_gm2: check-gm2\n+check-modula2: check-gm2\n+check_modula2: check-gm2\n+check-modula-2: check-gm2\n+check_modula-2: check-gm2\n+check_modula_2: check-gm2\n+\n+lang_checks += check-gm2\n+lang_checks_parallelized += check-gm2\n+# For description see the check_$lang_parallelize comment in gcc/Makefile.in.\n+check_gm2_parallelize = 10000\n+\n+check-gm2-local: $(GM2TESTSUITEDIR)/site.exp\n+\t-(rootme=`${PWD_COMMAND}`; export rootme; \\\n+\tsrcdir=`cd ${srcdir}; ${PWD_COMMAND}` ; export srcdir ; \\\n+\tcd $(TESTSUITEDIR); \\\n+\tEXPECT=${EXPECT} ; export EXPECT ; \\\n+\tif [ -f $${rootme}/../expect/expect ] ; then  \\\n+\t   TCL_LIBRARY=`cd .. ; cd ${srcdir}/../tcl/library ; ${PWD_COMMAND}` ; \\\n+\t    export TCL_LIBRARY ; fi ; \\\n+\t$(RUNTEST) --tool gm2 --directory testsuite/m2/pim/pass)\n+\n+BUILD-PGE-O = \\\n+   m2/pge-boot/GArgs.o \\\n+   m2/pge-boot/GASCII.o \\\n+   m2/pge-boot/GAssertion.o \\\n+   m2/pge-boot/Gbnflex.o \\\n+   m2/pge-boot/GDebug.o \\\n+   m2/pge-boot/GDynamicStrings.o \\\n+   m2/pge-boot/GFIO.o \\\n+   m2/pge-boot/GIndexing.o \\\n+   m2/pge-boot/GIO.o \\\n+   m2/pge-boot/GLists.o \\\n+   m2/pge-boot/GM2Dependent.o \\\n+   m2/pge-boot/GM2EXCEPTION.o \\\n+   m2/pge-boot/GM2RTS.o \\\n+   m2/pge-boot/GNameKey.o \\\n+   m2/pge-boot/GNumberIO.o \\\n+   m2/pge-boot/GOutput.o \\\n+   m2/pge-boot/Gpge.o \\\n+   m2/pge-boot/GPushBackInput.o \\\n+   m2/pge-boot/GRTExceptions.o \\\n+   m2/pge-boot/GSFIO.o \\\n+   m2/pge-boot/GStdIO.o \\\n+   m2/pge-boot/GStorage.o \\\n+   m2/pge-boot/GStrCase.o \\\n+   m2/pge-boot/GStrIO.o \\\n+   m2/pge-boot/GStrLib.o \\\n+   m2/pge-boot/GSymbolKey.o \\\n+   m2/pge-boot/GSysStorage.o \\\n+   m2/pge-boot/Glibc.o \\\n+   m2/pge-boot/Gerrno.o \\\n+   m2/pge-boot/GUnixArgs.o \\\n+   m2/pge-boot/GM2LINK.o \\\n+   m2/pge-boot/Gtermios.o \\\n+   m2/pge-boot/GSysExceptions.o \\\n+   m2/pge-boot/Gabort.o \\\n+   m2/pge-boot/Gmcrts.o \\\n+   m2/pge-boot/main.o\n+\n+ifeq ($(M2_MAINTAINER),yes)\n+include m2/Make-maintainer\n+else\n+m2/pge-boot/%.o: m2/pge-boot/%.c m2/gm2-libs/gm2-libs-host.h\n+\t$(CXX) $(INCLUDES) -I$(srcdir)/m2/pge-boot -Im2/gm2-libs -g -c $< -o $@\n+\n+m2/pge-boot/%.o: m2/pge-boot/%.cc m2/gm2-libs/gm2-libs-host.h\n+\t$(CXX) $(INCLUDES) -I$(srcdir)/m2/pge-boot -Im2/gm2-libs -g -c $< -o $@\n+\n+$(PGE): $(BUILD-PGE-O)\n+\t+$(LINKER) $(ALL_LINKERFLAGS) $(LDFLAGS) -o $@ $(BUILD-PGE-O) -lm\n+\n+endif"}, {"sha": "2460b9792071637e22e63042ea0acea893246952", "filename": "gcc/m2/Make-maintainer.in", "status": "added", "additions": 856, "deletions": 0, "changes": 856, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2FMake-maintainer.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2FMake-maintainer.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2FMake-maintainer.in?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754", "patch": "@@ -0,0 +1,856 @@\n+# Make-maintainer.in build support tools for GNU M2.\n+\n+# Copyright (C) 2022 Free Software Foundation, Inc.\n+\n+#This file is part of GCC.\n+\n+#GCC is free software; you can redistribute it and/or modify\n+#it under the terms of the GNU General Public License as published by\n+#the Free Software Foundation; either version 3, or (at your option)\n+#any later version.\n+\n+#GCC is distributed in the hope that it will be useful,\n+#but WITHOUT ANY WARRANTY; without even the implied warranty of\n+#MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+#GNU General Public License for more details.\n+\n+#You should have received a copy of the GNU General Public License\n+#along with GCC; see the file COPYING3.  If not see\n+#<http://www.gnu.org/licenses/>.\n+\n+# QUIAT=@\n+XGCC = ./xgcc -B./\n+GM2_2 = ./gm2 -B./stage2/m2 -g -fm2-g\n+\n+# m2/ppg$(exeext)  is the recursive descent parser generator.\n+\n+PPG-INTERFACE-C = libc.c mcrts.c Selective.c termios.c \\\n+                  SysExceptions.c wrapc.c \\\n+                  SYSTEM.c errno.c\n+\n+PPG-INTERFACE-CC = UnixArgs.cc ldtoa.cc dtoa.cc\n+\n+# Implementation modules found in the gm2-compiler directory.\n+\n+PPG-MODS         = SymbolKey.mod   NameKey.mod  Lists.mod  bnflex.mod  Output.mod\n+\n+# Core library definition modules used by ppg found in the gm2-libs directory.\n+\n+PPG-LIB-DEFS     = Args.def Assertion.def ASCII.def Debug.def \\\n+                   DynamicStrings.def FIO.def Indexing.def IO.def \\\n+                   NumberIO.def PushBackInput.def \\\n+                   M2Dependent.def \\\n+                   M2EXCEPTION.def M2LINK.def M2RTS.def \\\n+                   RTExceptions.def \\\n+                   StdIO.def SFIO.def StrIO.def StrLib.def \\\n+                   Storage.def StrCase.def SysStorage.def\n+\n+# Core library implementation modules used by ppg found in the gm2-libs directory.\n+\n+PPG-LIB-MODS     = ASCII.mod \\\n+                   Args.mod \\\n+                   Assertion.mod \\\n+                   Debug.mod \\\n+                   DynamicStrings.mod \\\n+                   FIO.mod \\\n+                   IO.mod \\\n+                   Indexing.mod \\\n+                   M2Dependent.mod \\\n+                   M2EXCEPTION.mod \\\n+                   M2RTS.mod \\\n+                   NumberIO.mod \\\n+                   PushBackInput.mod \\\n+                   RTExceptions.mod \\\n+                   SFIO.mod \\\n+                   StdIO.mod \\\n+                   Storage.mod \\\n+                   StrCase.mod \\\n+                   StrIO.mod \\\n+                   StrLib.mod \\\n+                   SysStorage.mod\n+\n+# Program module ppg.mod from which pge.mod is created.  ppg.mod is\n+# where changes should be made and then you should run pge-maintainer\n+# to recreate the C++ version of pge.\n+\n+PPG-SRC          = ppg.mod\n+\n+BUILD-PPG-O = $(PPG-INTERFACE-C:%.c=m2/gm2-ppg-boot/$(SRC_PREFIX)%.o) \\\n+              $(PPG-INTERFACE-CC:%.cc=m2/gm2-ppg-boot/$(SRC_PREFIX)%.o) \\\n+              $(PPG-MODS:%.mod=m2/gm2-ppg-boot/$(SRC_PREFIX)%.o) \\\n+              $(PPG-LIB-MODS:%.mod=m2/gm2-ppg-boot/$(SRC_PREFIX)%.o) \\\n+              $(PPG-SRC:%.mod=m2/gm2-ppg-boot/$(SRC_PREFIX)%.o)\n+\n+MCC_ARGS= --olang=c++ \\\n+ --quiet \\\n+ --h-file-prefix=$(SRC_PREFIX) \\\n+ -I$(srcdir)/m2/gm2-libs \\\n+ -I$(srcdir)/m2/gm2-compiler \\\n+ -I$(srcdir)/m2/gm2-libiberty \\\n+ -I$(srcdir)/m2/gm2-gcc\n+\n+MCC=m2/boot-bin/mc$(exeext) $(MCC_ARGS)\n+\n+BUILD-PPG-LIBS-H = $(PPG-LIB-DEFS:%.def=m2/gm2-ppg-boot/$(SRC_PREFIX)%.h)\n+\n+BUILD-PPG-H = m2/boot-bin/mc$(exeext) $(BUILD-PPG-LIBS-H)\n+\n+m2/gm2-ppg-boot/$(SRC_PREFIX)%.h: $(srcdir)/m2/gm2-libs/%.def $(MCDEPS)\n+\t$(MCC) -o=$@ $(srcdir)/m2/gm2-libs/$*.def\n+\n+m2/gm2-ppg-boot/$(SRC_PREFIX)%.o: m2/mc-boot-ch/$(SRC_PREFIX)%.c m2/gm2-libs/gm2-libs-host.h\n+\t$(CXX) -I. -I$(srcdir)/../include -I$(srcdir) -I$(srcdir)/m2/mc-boot-ch -Im2/gm2-libs $(INCLUDES) -g -c $< -o $@\n+\n+m2/gm2-ppg-boot/$(SRC_PREFIX)%.o: m2/mc-boot-ch/$(SRC_PREFIX)%.cc m2/gm2-libs/gm2-libs-host.h\n+\t$(CXX) -I. -I$(srcdir)/../include -I$(srcdir) -I$(srcdir)/m2/mc-boot-ch -Im2/gm2-libs $(INCLUDES) -g -c $< -o $@\n+\n+m2/gm2-ppg-boot/$(SRC_PREFIX)%.o: $(srcdir)/m2/gm2-libs/%.mod $(MCDEPS) $(BUILD-BOOT-H)\n+\t$(MCC) -o=m2/gm2-ppg-boot/$(SRC_PREFIX)$*.c $(srcdir)/m2/gm2-libs/$*.mod\n+\t$(CXX) -I. -I$(srcdir)/../include -I$(srcdir) \\\n+              -Im2/gm2-ppg-boot -I$(srcdir)/m2/mc-boot -Im2/gm2-libs-boot \\\n+              -I$(srcdir)/m2/mc-boot-ch $(INCLUDES) -g -c m2/gm2-ppg-boot/$(SRC_PREFIX)$*.c -o $@\n+\n+m2/gm2-ppg-boot/$(SRC_PREFIX)%.o: $(srcdir)/m2/gm2-compiler/%.mod $(MCDEPS) $(BUILD-BOOT-H)\n+\t$(MCC) -o=m2/gm2-ppg-boot/$(SRC_PREFIX)$*.c $(srcdir)/m2/gm2-compiler/$*.mod\n+\t$(CXX) -I. -I$(srcdir)/../include -I$(srcdir) \\\n+              -Im2/mc-boot -Im2/gm2-compiler-boot -Im2/gm2-libs-boot \\\n+              -I$(srcdir)/m2/mc-boot-ch $(INCLUDES) -g -c m2/gm2-ppg-boot/$(SRC_PREFIX)$*.c -o $@\n+\n+m2/ppg$(exeext): m2/boot-bin/mc $(BUILD-PPG-O) $(BUILD-MC-INTERFACE-O) m2/gm2-ppg-boot/main.o \\\n+                 m2/gm2-libs-boot/RTcodummy.o m2/mc-boot-ch/$(SRC_PREFIX)abort.o \\\n+                 m2/gm2-libs-boot/M2LINK.o\n+\t+$(LINKER) $(ALL_LINKERFLAGS) $(LDFLAGS) -o $@ $(BUILD-PPG-O) m2/gm2-ppg-boot/main.o \\\n+                 m2/gm2-libs-boot/RTcodummy.o m2/mc-boot-ch/$(SRC_PREFIX)abort.o \\\n+                 m2/gm2-libs-boot/M2LINK.o -lm\n+\n+m2/gm2-ppg-boot/main.o: $(M2LINK) $(srcdir)/m2/init/mcinit\n+\tunset CC ; $(M2LINK) -s --langc++ --exit --name mainppginit.c $(srcdir)/m2/init/ppginit\n+\tmv mainppginit.c m2/gm2-ppg-boot/main.c\n+\t$(CXX) $(INCLUDES) -g -c -o $@ m2/gm2-ppg-boot/main.c\n+\n+m2/gm2-auto:\n+\ttest -d $@ || mkdir -p $@\n+\n+# m2/pg$(exext) is the 2nd generation parser generator built from ebnf\n+# without error recovery\n+\n+PG-SRC = pg.mod\n+\n+BUILD-PG-O = $(PPG-INTERFACE-C:%.c=m2/gm2-pg-boot/$(SRC_PREFIX)%.o) \\\n+             $(PPG-INTERFACE-CC:%.cc=m2/gm2-pg-boot/$(SRC_PREFIX)%.o) \\\n+             $(PPG-MODS:%.mod=m2/gm2-pg-boot/$(SRC_PREFIX)%.o) \\\n+             $(PPG-LIB-MODS:%.mod=m2/gm2-pg-boot/$(SRC_PREFIX)%.o) \\\n+             $(PG-SRC:%.mod=m2/gm2-pg-boot/$(SRC_PREFIX)%.o)\n+\n+m2/gm2-pg-boot/$(SRC_PREFIX)%.h: $(srcdir)/m2/gm2-libs/%.def $(MCDEPS)\n+\t$(MCC) -o=$@ $(srcdir)/m2/gm2-libs/$*.def\n+\n+m2/gm2-pg-boot/$(SRC_PREFIX)%.o: m2/mc-boot-ch/$(SRC_PREFIX)%.c m2/gm2-libs/gm2-libs-host.h\n+\t$(CXX) -I. -I$(srcdir)/../include -I$(srcdir) -I$(srcdir)/m2/mc-boot-ch -Im2/gm2-libs $(INCLUDES) -g -c $< -o $@\n+\n+m2/gm2-pg-boot/$(SRC_PREFIX)%.o: m2/mc-boot-ch/$(SRC_PREFIX)%.cc m2/gm2-libs/gm2-libs-host.h\n+\t$(CXX) -I. -I$(srcdir)/../include -I$(srcdir) -I$(srcdir)/m2/mc-boot-ch -Im2/gm2-libs $(INCLUDES) -g -c $< -o $@\n+\n+m2/gm2-pg-boot/$(SRC_PREFIX)%.o: $(srcdir)/m2/gm2-libs/%.mod $(MCDEPS) $(BUILD-BOOT-H)\n+\t$(MCC) -o=m2/gm2-pg-boot/$(SRC_PREFIX)$*.c $(srcdir)/m2/gm2-libs/$*.mod\n+\t$(CXX) -I. -I$(srcdir)/../include -I$(srcdir) -Im2/gm2-pg-boot\t-I$(srcdir)/m2/mc-boot \\\n+               -I$(srcdir)/m2/mc-boot-ch \\\n+               -Im2/gm2-libs-boot $(INCLUDES) \\\n+              -g -c m2/gm2-pg-boot/$(SRC_PREFIX)$*.c -o $@\n+\n+m2/gm2-pg-boot/$(SRC_PREFIX)%.o: $(srcdir)/m2/gm2-compiler/%.mod $(MCDEPS) $(BUILD-BOOT-H)\n+\t$(MCC) -o=m2/gm2-pg-boot/$(SRC_PREFIX)$*.c $(srcdir)/m2/gm2-compiler/$*.mod\n+\t$(CXX) -I. -I$(srcdir)/../include -I$(srcdir) -Im2/mc-boot -Im2/gm2-compiler-boot -Im2/gm2-libs-boot \\\n+              -I$(srcdir)/m2/mc-boot-ch $(INCLUDES) -g -c m2/gm2-pg-boot/$(SRC_PREFIX)$*.c -o $@\n+\n+m2/gm2-pg-boot/$(SRC_PREFIX)pg.o:  m2/gm2-auto/pg.mod $(MCDEPS) $(BUILD-BOOT-H)\n+\t$(MCC) -o=m2/gm2-pg-boot/$(SRC_PREFIX)pg.c m2/gm2-auto/pg.mod\n+\t$(CXX) -I. -I$(srcdir)/../include -I$(srcdir) -Im2/mc-boot -Im2/gm2-compiler-boot -Im2/gm2-libs-boot \\\n+              -I$(srcdir)/m2/mc-boot-ch $(INCLUDES) -g -c m2/gm2-pg-boot/$(SRC_PREFIX)pg.c -o $@\n+\n+m2/pg$(exeext): m2/boot-bin/mc \\\n+    $(BUILD-PG-O) $(GM2-PPG-MODS:%.mod=m2/gm2-pg-boot/%.o) \\\n+    $(BUILD-MC-INTERFACE-O) m2/gm2-pg-boot/main.o m2/gm2-libs-boot/RTcodummy.o \\\n+    m2/mc-boot-ch/$(SRC_PREFIX)abort.o m2/gm2-libs-boot/M2LINK.o\n+\t+$(LINKER) $(ALL_LINKERFLAGS) $(LDFLAGS) -o $@ $(BUILD-PG-O) \\\n+         m2/gm2-pg-boot/main.o m2/gm2-libs-boot/RTcodummy.o \\\n+         m2/gm2-libs-boot/M2LINK.o \\\n+         m2/mc-boot-ch/$(SRC_PREFIX)abort.o -lm\n+\n+m2/gm2-auto/pginit:\n+\tsed -e 's/ppg/pg/' < $(srcdir)/m2/init/ppginit > $@\n+\n+m2/gm2-pg-boot/main.o: m2/gm2-auto/pginit $(M2LINK)\n+\tunset CC ; $(M2LINK) -s --langc++ --exit --name mainpginit.c m2/gm2-auto/pginit\n+\tmv mainpginit.c m2/gm2-pg-boot/main.c\n+\t$(CXX) $(INCLUDES) -g -c -o $@ m2/gm2-pg-boot/main.c\n+\n+m2/pg-e$(exeext): m2/pg$(exeext)\n+\t$(CP) m2/pg$(exeext) m2/pg-e$(exeext)\n+\t$(SHELL) $(srcdir)/m2/tools-src/buildpg $(srcdir)/m2/gm2-compiler/ppg.mod pg -e > m2/gm2-auto/t.bnf\n+\t./m2/pg-e$(exeext) -e -l m2/gm2-auto/t.bnf | sed -e 's/t\\.bnf/pg\\.bnf/' > m2/gm2-auto/t.mod\n+\t$(QUIAT)if ! diff m2/gm2-auto/t.mod m2/gm2-auto/pg.mod > /dev/null ; then \\\n+           echo \"pg failed during self build\" ; \\\n+           exit 1 ; \\\n+        fi\n+\t$(RM) m2/gm2-auto/t.bnf m2/gm2-auto/t.mod\n+\n+m2/gm2-auto/pg.mod: m2/ppg$(exeext)\n+\t$(SHELL) $(srcdir)/m2/tools-src/buildpg $(srcdir)/m2/gm2-compiler/ppg.mod pg -e > m2/gm2-auto/pg.bnf\n+\t./m2/ppg$(exeext) -e -l m2/gm2-auto/pg.bnf > m2/gm2-auto/pg.mod\n+\n+# pge is the recursive descent parser with first/followset error recovery.\n+\n+PGE-SRC = pge.mod\n+\n+BUILD-PGE-O = $(PPG-INTERFACE-C:%.c=m2/gm2-pge-boot/$(SRC_PREFIX)%.o) \\\n+              $(PPG-INTERFACE-CC:%.cc=m2/gm2-pge-boot/$(SRC_PREFIX)%.o) \\\n+              $(PPG-MODS:%.mod=m2/gm2-pge-boot/$(SRC_PREFIX)%.o) \\\n+              $(PPG-LIB-MODS:%.mod=m2/gm2-pge-boot/$(SRC_PREFIX)%.o) \\\n+              $(PGE-SRC:%.mod=m2/gm2-pge-boot/$(SRC_PREFIX)%.o)\n+\n+m2/gm2-auto/pge.mod: m2/pg$(exeext)\n+\t$(SHELL) $(srcdir)/m2/tools-src/buildpg $(srcdir)/m2/gm2-compiler/ppg.mod pge > m2/gm2-auto/pge.bnf\n+\t./m2/pg$(exeext) -l m2/gm2-auto/pge.bnf -o m2/gm2-auto/pge.mod\n+\n+m2/gm2-pge-boot/$(SRC_PREFIX)%.h: $(srcdir)/m2/gm2-libs/%.def $(MCDEPS)\n+\t$(MCC) -o=$@ $(srcdir)/m2/gm2-libs/$*.def\n+\n+m2/gm2-pge-boot/$(SRC_PREFIX)libc.o: $(srcdir)/m2/mc-boot-ch/Glibc.c m2/gm2-libs/gm2-libs-host.h\n+\t$(CXX) -I. -I$(srcdir)/../include -I$(srcdir) $(INCLUDES) -I$(srcdir)/m2/mc-boot-ch -Im2/gm2-libs -g -c $< -o $@\n+\n+m2/gm2-pge-boot/$(SRC_PREFIX)mcrts.o:  $(srcdir)/m2/mc-boot-ch/Gmcrts.c m2/gm2-libs/gm2-libs-host.h\n+\t$(CXX) -I. -I$(srcdir)/../include -I$(srcdir) $(INCLUDES) -I$(srcdir)/m2/mc-boot-ch -Im2/gm2-libs -g -c $< -o $@\n+\n+m2/gm2-pge-boot/$(SRC_PREFIX)UnixArgs.o:  $(srcdir)/m2/mc-boot-ch/GUnixArgs.cc\n+\t$(CXX) -I. -I$(srcdir)/../include -I$(srcdir) -I$(srcdir)/m2/mc-boot-ch $(INCLUDES) -g -c $< -o $@\n+\n+m2/gm2-pge-boot/$(SRC_PREFIX)Selective.o:  $(srcdir)/m2/mc-boot-ch/GSelective.c m2/gm2-libs/gm2-libs-host.h\n+\t$(CXX) -I. -I$(srcdir)/../include -I$(srcdir) -I$(srcdir)/m2/mc-boot-ch $(INCLUDES) -Im2/gm2-libs -g -c $< -o $@\n+\n+m2/gm2-pge-boot/$(SRC_PREFIX)termios.o:  $(srcdir)/m2/mc-boot-ch/Gtermios.cc m2/gm2-libs/gm2-libs-host.h\n+\t$(CXX) -I. -I$(srcdir)/../include -I$(srcdir) -I$(srcdir)/m2/mc-boot-ch -Im2/gm2-libs $(INCLUDES) -g -c $< -o $@\n+\n+m2/gm2-pge-boot/$(SRC_PREFIX)SysExceptions.o:  $(srcdir)/m2/mc-boot-ch/GSysExceptions.c m2/gm2-libs/gm2-libs-host.h\n+\t$(CXX) -I. -I$(srcdir)/../include -I$(srcdir) -I$(srcdir)/m2/mc-boot-ch -Im2/gm2-libs $(INCLUDES) -g -c $< -o $@\n+\n+m2/gm2-pge-boot/$(SRC_PREFIX)ldtoa.o:  $(srcdir)/m2/mc-boot-ch/Gldtoa.c m2/gm2-libs/gm2-libs-host.h\n+\t$(CXX) -I. -I$(srcdir)/../include -I$(srcdir) -I$(srcdir)/m2/mc-boot-ch -Im2/gm2-libs $(INCLUDES) -g -c $< -o $@\n+\n+m2/gm2-pge-boot/$(SRC_PREFIX)dtoa.o:  $(srcdir)/m2/mc-boot-ch/Gdtoa.c m2/gm2-libs/gm2-libs-host.h\n+\t$(CXX) -I. -I$(srcdir)/../include -I$(srcdir) -I$(srcdir)/m2/mc-boot-ch -Im2/gm2-libs $(INCLUDES) -g -c $< -o $@\n+\n+m2/gm2-pge-boot/$(SRC_PREFIX)wrapc.o:  $(srcdir)/m2/mc-boot-ch/Gwrapc.c m2/gm2-libs/gm2-libs-host.h\n+\t$(CXX) -I. -I$(srcdir)/../include -I$(srcdir) -I$(srcdir)/m2/mc-boot-ch -Im2/gm2-libs $(INCLUDES) -g -c $< -o $@\n+\n+m2/gm2-pge-boot/$(SRC_PREFIX)SYSTEM.o:  $(srcdir)/m2/mc-boot-ch/GSYSTEM.c\n+\t$(CXX) -I. -I$(srcdir)/../include -I$(srcdir) -I$(srcdir)/m2/mc-boot-ch $(INCLUDES) -g -c $< -o $@\n+\n+m2/gm2-pge-boot/$(SRC_PREFIX)errno.o:  $(srcdir)/m2/mc-boot-ch/Gerrno.c\n+\t$(CXX) -I. -I$(srcdir)/../include -I$(srcdir) -I$(srcdir)/m2/mc-boot-ch $(INCLUDES) -g -c $< -o $@\n+\n+m2/gm2-pge-boot/$(SRC_PREFIX)%.o: $(srcdir)/m2/gm2-libs/%.mod $(MCDEPS) $(BUILD-BOOT-H)\n+\t$(MCC) -o=m2/gm2-pge-boot/$(SRC_PREFIX)$*.c $(srcdir)/m2/gm2-libs/$*.mod\n+\t$(CXX) -I. -I$(srcdir)/../include -I$(srcdir) -Im2/gm2-pge-boot -I$(srcdir)/m2/mc-boot \\\n+              -I$(srcdir)/m2/mc-boot-ch -Im2/gm2-libs-boot \\\n+              $(INCLUDES) -g -c m2/gm2-pge-boot/$(SRC_PREFIX)$*.c -o $@\n+\n+m2/gm2-pge-boot/$(SRC_PREFIX)%.o: $(srcdir)/m2/gm2-compiler/%.mod $(MCDEPS) $(BUILD-BOOT-H)\n+\t$(MCC) -o=m2/gm2-pge-boot/$(SRC_PREFIX)$*.c $(srcdir)/m2/gm2-compiler/$*.mod\n+\t$(CXX) -I. -I$(srcdir)/../include -I$(srcdir) -Im2/mc-boot -Im2/gm2-compiler-boot \\\n+              -Im2/gm2-libs-boot \\\n+              -I$(srcdir)/m2/mc-boot-ch $(INCLUDES) -g -c m2/gm2-pge-boot/$(SRC_PREFIX)$*.c -o $@\n+\n+m2/gm2-pge-boot/$(SRC_PREFIX)pge.o:  m2/gm2-auto/pge.mod $(MCDEPS) $(BUILD-BOOT-H)\n+\t$(MCC) -o=m2/gm2-pge-boot/$(SRC_PREFIX)pge.c m2/gm2-auto/pge.mod\n+\t$(CXX) -I. -I$(srcdir)/../include -I$(srcdir) \\\n+              -Im2/mc-boot -Im2/gm2-compiler-boot -Im2/gm2-libs-boot \\\n+              -I$(srcdir)/m2/mc-boot-ch $(INCLUDES) -g -c m2/gm2-pge-boot/$(SRC_PREFIX)pge.c -o $@\n+\n+m2/pge$(exeext): m2/boot-bin/mc \\\n+    $(BUILD-PGE-O) $(GM2-PPG-MODS:%.mod=m2/gm2-pge-boot/%.o) \\\n+    $(BUILD-MC-INTERFACE-O) m2/gm2-pge-boot/main.o m2/gm2-libs-boot/RTcodummy.o \\\n+    m2/mc-boot-ch/$(SRC_PREFIX)abort.o m2/gm2-libs-boot/M2LINK.o\n+\t+$(LINKER) $(ALL_LINKERFLAGS) $(LDFLAGS) -o $@ $(BUILD-PGE-O) \\\n+         m2/gm2-pge-boot/main.o m2/gm2-libs-boot/RTcodummy.o \\\n+         m2/mc-boot-ch/$(SRC_PREFIX)abort.o m2/gm2-libs-boot/M2LINK.o -lm\n+\t$(SHELL) $(srcdir)/m2/tools-src/buildpg $(srcdir)/m2/gm2-compiler/ppg.mod t > m2/gm2-auto/t.bnf\n+\t./m2/pge$(exeext) m2/gm2-auto/t.bnf -o m2/gm2-auto/t1.mod\n+\t./m2/pg$(exeext) m2/gm2-auto/t.bnf -o m2/gm2-auto/t2.mod\n+\t$(QUIAT)if ! diff m2/gm2-auto/t1.mod m2/gm2-auto/t2.mod > /dev/null ; then \\\n+           echo \"failure: pg (with error recovery) failed\" ; \\\n+           $(RM) m2/pge$(exeext) ; \\\n+           exit 1 ; \\\n+        fi\n+\t$(RM) m2/gm2-auto/t.mod m2/gm2-auto/t1.mod m2/gm2-auto/t2.mod\n+\n+m2/gm2-auto/pgeinit:\n+\tsed -e 's/ppg/pge/' < $(srcdir)/m2/init/ppginit > $@\n+\n+m2/gm2-pge-boot/main.o: m2/gm2-auto/pgeinit $(M2LINK)\n+\tunset CC ; $(M2LINK) -s --langc++ --exit --name mainpgeinit.c m2/gm2-auto/pgeinit\n+\tmv mainpgeinit.c m2/gm2-pge-boot/main.c\n+\t$(CXX) $(INCLUDES) -g -c -o $@ m2/gm2-pge-boot/main.c\n+\n+$(objdir)/m2/gm2-ppg-boot:\n+\ttest -d $@ || mkdir $@\n+\n+$(objdir)/m2/gm2-pg-boot:\n+\ttest -d $@ || mkdir $@\n+\n+$(objdir)/m2/gm2-pge-boot:\n+\ttest -d $@ || mkdir $@\n+\n+m2/gm2-auto/pg.o: m2/gm2-auto/pg.mod $(MCDEPS)\n+\t$(MC) --quiet -o=m2/gm2-auto/pg.c m2/gm2-auto/pg.mod\n+\t$(COMPILER) -c $(CFLAGS) -I. -I$(srcdir)/../include -I$(srcdir) -I$(srcdir)/m2 -Im2/gm2-libs-boot -Im2/gm2-compiler-boot -I$(srcdir)/m2/mc-boot-ch $(INCLUDES) m2/gm2-auto/pg.c -o $@\n+\n+m2/gm2-auto/pge.o: m2/gm2-auto/pge.mod $(MCDEPS)\n+\t$(MC) --quiet -o=m2/gm2-auto/pge.c m2/gm2-auto/pge.mod\n+\t$(COMPILER) -c $(CFLAGS) -I. -I$(srcdir)/../include -I$(srcdir) -I$(srcdir)/m2 -Im2/gm2-libs-boot -Im2/gm2-compiler-boot -I$(srcdir)/m2/mc-boot-ch $(INCLUDES) m2/gm2-auto/pge.c -o $@\n+\n+pge-help: force\n+\t@echo \"The pge maintainer commands are:\"\n+\t@echo \" \"\n+\t@echo \" make pge-maintainer\"\n+\t@echo \" make pge-verify\"\n+\t@echo \" make pge-push       # copy pge C++ sources (app and libs) into srcdir/m2/pge-boot\"\n+\t@echo \" make pge-libs-push  # copy C++ libraries which pge uses into srcdir/m2/pge-boot\"\n+\t@echo \" make pge-app-push   # copy pge C++ application modules into srcdir/m2/pge-boot\"\n+\t@echo \" make pge-clean\"\n+\n+pge-maintainer: $(PGE)\n+\n+# Copy the C++ sources for ppe.mod into $(srcdir)/pge-boot.\n+\n+pge-push: pge-libs-push pge-app-push\n+\n+pge-libs-push: force\n+\tfor i in $(cat $(srcdir)/m2/init/ppginit) ; do \\\n+\t    if [ -f $(srcdir)/m2/gm2-libs-ch/${i}.h ] ; then \\\n+                cp $(srcdir)/m2/gm2-libs-ch/${i}.h $(srcdir) ; \\\n+            else \\\n+                echo \"not found ${i}\" ; \\\n+            fi ; \\\n+\t    if [ -f $(srcdir)/m2/gm2-libs-ch/${i}.c* ] ; then \\\n+                cp $(srcdir)/m2/gm2-libs-ch/${i}.c* $(srcdir) ; \\\n+\t    elif [ -f $(srcdir)/m2/gm2-pge-libs/${i}.c* ] ; then \\\n+                cp $(srcdir)/m2/gm2-pge-libs/${i}.c* $(srcdir) ; \\\n+            else \\\n+                echo \"not found ${i}\" ; \\\n+            fi ; \\\n+        done\n+\n+pge-app-push: force\n+\tcp m2/gm2-pge-boot/*.c $(srcdir)/m2/pge-boot\n+\n+# Perform sanity checks.\n+\n+pge-verify: force\n+\n+# Remove pge build files.\n+\n+pge-clean: force\n+\t$(RM) -f m2/gm2-pg-boot/* m2/gm2-ppg-boot/* m2/gm2-pge-boot/*\n+\n+\n+# The rest of the Make-lang.in handles the bootstrap tool (maintained\n+# mode) and also provides testing between the bootstrapped and the\n+# non-bootstrapped compilers.\n+\n+# Rules for mc\n+\n+# The default rule used generate mc, eventually it will be replaced by mc-bootstrap.\n+\n+BOOTGM2=gm2\n+\n+MCOPTIONS=-g -c -fsources -fsoft-check-all -fm2-g # -fauto-init\n+MCLINK=-g     # use -g -fmodules -c if you are debugging and wish to see missing modules.\n+\n+# This is only needed in maintainer mode by 'make mc-maintainer' when regenerating the C\n+# version of mc.  We need a working Modula-2 compiler to run mc-maintainer.\n+\n+GM2SYS=${HOME}/opt/lib/gcc/x86_64-pc-linux-gnu/12.0.0/m2/m2pim\n+GM2PATH=$(srcdir)/m2/mc:$(GM2SYS):$(srcdir)/m2:m2/gm2-auto:$(srcdir)/m2/gm2-libs:$(srcdir)/m2/gm2-libs-iso\n+\n+mc: mc-clean mc-devel\n+\n+mc-push: force\n+\tcp -p m2/mc-boot-gen/*.c $(srcdir)/m2/mc-boot/\n+\tcp -p m2/mc-boot-gen/*.h $(srcdir)/m2/mc-boot/\n+\n+mc-clean: force m2/mc-obj\n+\t$(RM) m2/mc-boot-gen/*.[ch] m2/boot-bin/* m2/mc-boot/* m2/mc-boot-ch/*\n+\n+mc-maintainer: mc-clean mc-autogen mc-push mc-clean mc-bootstrap\n+\n+mc-clean-libs: force\n+\t$(RM) m2/gm2-libs-boot/*\n+\n+mc-continue:  mc-clean mc-bootstrap mc-clean-libs mc-fresh $(BUILD-MC-INTERFACE-O) $(BUILD-LIBS-BOOT) $(BUILD-COMPILER-BOOT)\n+\n+mc-fresh: force\n+\t$(RM) m2/gm2-auto/* m2/gm2-compiler-boot/* m2/gm2-libs-boot/*\n+\n+mc-help:  force\n+\t@echo \"mc-maintainer   produces a new mc C version in the source tree (takes longer)\"\n+\t@echo \"mc-continue     builds the mc from the C version and attempts to build gm2 libraries and gm2 compiler\"\n+\t@echo \"mc-verify       builds mc from Modula-2 sources and mc from C sources and run both on all sources diffing the output\"\n+\t@echo \"mc              builds mc from Modula-2 sources, quickly\"\n+\t@echo \"m2/pge          build the parser generator (needed by mc-maintainer)\"\n+\n+m2/mc-obj:\n+\tmkdir $@\n+\n+mc-verify:  mc-clean mc-bootstrap mc\n+\tmv mc m2/boot-bin/mc.m2\n+\t@echo \"verifying the two generations of mc\"\n+\tfor i in $(GM2-VERIFY-MODS) ; do \\\n+           echo -n \"$$i \" ; \\\n+           m2/boot-bin/mc $(MC_ARGS) -o=mcout.c $(srcdir)/m2/gm2-compiler/$$i > /dev/null ; \\\n+           echo -n \"[1]\" ; \\\n+           m2/boot-bin/mc.m2 $(MC_ARGS) -o=mcout.m2 $(srcdir)/m2/gm2-compiler/$$i > /dev/null ; \\\n+           echo -n \"[2]\" ; \\\n+           $(RM) $$i.mc-diff ; \\\n+           if [ -f mcout.c -a -f mcout.m2 ] ; then \\\n+              if diff mcout.c mcout.m2 > /dev/null ; then \\\n+                 echo \"[passed]\" ; \\\n+              else \\\n+                 echo \"[*** failed ***]\" ; \\\n+                 diff mcout.c mcout.m2 > $$i.mc-diff ; \\\n+              fi \\\n+           fi ; \\\n+\t   $(RM) mcout.c mcout.m2 ; \\\n+        done\n+\n+mc-stage2:  force\n+\tm2/boot-bin/mc$(exeext) -I$(srcdir)/m2/mc:$(srcdir)/m2/gm2-libs:$(srcdir)/m2/gm2-libs-iso $(EXTENDED_OPAQUE) --h-file-prefix=$(SRC_PREFIX) -o=m2/mc-boot-gen/GmcStream.c $(srcdir)/m2/mc/mcStream.mod\n+\tm2/boot-bin/mc$(exeext) -I$(srcdir)/m2/mc:$(srcdir)/m2/gm2-libs:$(srcdir)/m2/gm2-libs-iso $(EXTENDED_OPAQUE) --h-file-prefix=$(SRC_PREFIX) -o=m2/mc-boot-gen/Gdecl.c $(srcdir)/m2/mc/decl.mod\n+\tif diff m2/mc-boot-gen/Gdecl.c $(srcdir)/m2/mc-boot/Gdecl.c ; then echo \"passed\" ; else echo \"failed\" ; fi\n+\n+\n+\n+#  mc-devel - compiles mc using gm2\n+\n+mc-devel: m2/boot-bin/mc-devel$(exeext)\n+\n+m2/boot-bin/mc-devel$(exeext): m2/mc-obj/mcp1.mod \\\n+                               m2/mc-obj/mcp2.mod \\\n+                               m2/mc-obj/mcp3.mod \\\n+                               m2/mc-obj/mcp4.mod \\\n+                               m2/mc-obj/mcp5.mod \\\n+                               mcflex.c \\\n+                               m2/mc-boot-ch/Gabort.o\n+\t$(RM) -rf mc-obj\n+\tmkdir mc-obj\n+\t$(CC) -I$(srcdir)/m2/mc -c -g mcflex.c -o mc-obj/mcflex.o\n+\t$(BOOTGM2) $(MCOPTIONS) -I$(GM2PATH) $(srcdir)/m2/mc/decl.mod -o mc-obj/decl.o\n+\t$(BOOTGM2) $(MCOPTIONS) -I$(GM2PATH) $(srcdir)/m2/mc/mcStream.mod -o mc-obj/mcStream.o\n+\t$(BOOTGM2) $(MCOPTIONS) -I$(GM2PATH) $(srcdir)/m2/mc/mcPretty.mod -o mc-obj/mcPretty.o\n+\t$(BOOTGM2) $(MCOPTIONS) -I$(GM2PATH) $(srcdir)/m2/mc/mcStack.mod -o mc-obj/mcStack.o\n+\t$(BOOTGM2) $(MCOPTIONS) -I$(GM2PATH) $(srcdir)/m2/mc/varargs.mod -o mc-obj/varargs.o\n+\t$(BOOTGM2) $(MCOPTIONS) -I$(GM2PATH) $(srcdir)/m2/mc/mcMetaError.mod -o mc-obj/mcMetaError.o\n+\t$(BOOTGM2) $(MCOPTIONS) -I$(GM2PATH) $(srcdir)/m2/mc/mcOptions.mod -o mc-obj/mcOptions.o\n+\t$(BOOTGM2) $(MCOPTIONS) -I$(GM2PATH) $(srcdir)/m2/mc/mcComp.mod -o mc-obj/mcComp.o\n+\t$(BOOTGM2) $(MCOPTIONS) -I$(GM2PATH) m2/mc-obj/mcp1.mod -o mc-obj/mcp1.o\n+\t$(BOOTGM2) $(MCOPTIONS) -I$(GM2PATH) m2/mc-obj/mcp2.mod -o mc-obj/mcp2.o\n+\t$(BOOTGM2) $(MCOPTIONS) -I$(GM2PATH) m2/mc-obj/mcp3.mod -o mc-obj/mcp3.o\n+\t$(BOOTGM2) $(MCOPTIONS) -I$(GM2PATH) m2/mc-obj/mcp4.mod -o mc-obj/mcp4.o\n+\t$(BOOTGM2) $(MCOPTIONS) -I$(GM2PATH) m2/mc-obj/mcp5.mod -o mc-obj/mcp5.o\n+\t$(BOOTGM2) $(MCOPTIONS) -I$(GM2PATH) $(srcdir)/m2/mc/wlists.mod -o mc-obj/wlists.o\n+\t$(BOOTGM2) $(MCOPTIONS) -I$(GM2PATH) $(srcdir)/m2/mc/alists.mod -o mc-obj/alists.o\n+\t$(BOOTGM2) $(MCOPTIONS) -I$(GM2PATH) $(srcdir)/m2/mc/symbolKey.mod -o mc-obj/symbolKey.o\n+\t$(BOOTGM2) $(MCOPTIONS) -I$(GM2PATH) $(srcdir)/m2/mc/mcReserved.mod -o mc-obj/mcReserved.o\n+\t$(BOOTGM2) $(MCOPTIONS) -I$(GM2PATH) $(srcdir)/m2/mc/nameKey.mod -o mc-obj/nameKey.o\n+\t$(BOOTGM2) $(MCOPTIONS) -I$(GM2PATH) $(srcdir)/m2/mc/mcSearch.mod -o mc-obj/mcSearch.o\n+\t$(BOOTGM2) $(MCOPTIONS) -I$(GM2PATH) $(srcdir)/m2/mc/mcFileName.mod -o mc-obj/mcFileName.o\n+\t$(BOOTGM2) $(MCOPTIONS) -I$(GM2PATH) $(srcdir)/m2/mc/mcLexBuf.mod -o mc-obj/mcLexBuf.o\n+\t$(BOOTGM2) $(MCOPTIONS) -I$(GM2PATH) $(srcdir)/m2/mc/mcQuiet.mod -o mc-obj/mcQuiet.o\n+\t$(BOOTGM2) $(MCOPTIONS) -I$(GM2PATH) $(srcdir)/m2/mc/mcError.mod -o mc-obj/mcError.o\n+\t$(BOOTGM2) $(MCOPTIONS) -I$(GM2PATH) $(srcdir)/m2/mc/mcDebug.mod -o mc-obj/mcDebug.o\n+\t$(BOOTGM2) $(MCOPTIONS) -I$(GM2PATH) $(srcdir)/m2/mc/mcPrintf.mod -o mc-obj/mcPrintf.o\n+\t$(BOOTGM2) $(MCOPTIONS) -I$(GM2PATH) $(srcdir)/m2/mc/Indexing.mod -o mc-obj/Indexing.o\n+\t$(BOOTGM2) $(MCOPTIONS) -I$(GM2PATH) $(srcdir)/m2/mc/mcPreprocess.mod -o mc-obj/mcPreprocess.o\n+\t$(BOOTGM2) $(MCOPTIONS) -I$(GM2PATH) $(srcdir)/m2/mc/keyc.mod -o mc-obj/keyc.o\n+\t$(BOOTGM2) $(MCOPTIONS) -I$(GM2PATH) $(srcdir)/m2/mc/mcComment.mod -o mc-obj/mcComment.o\n+\t$(BOOTGM2) $(MCLINK) -I. -fscaffold-main -I$(GM2PATH) \\\n+            -fuse-list=$(srcdir)/m2/init/mcinit $(srcdir)/m2/mc/top.mod -o mc \\\n+            m2/gm2-libs-boot/RTcodummy.o \\\n+            m2/gm2-libs-boot/dtoa.o m2/gm2-libs-boot/ldtoa.o mc-obj/*o m2/mc-boot-ch/Gabort.o\n+\n+m2/boot-bin/mc-opt$(exeext): m2/mc-obj/mcp1.mod \\\n+                             m2/mc-obj/mcp2.mod \\\n+                             m2/mc-obj/mcp3.mod \\\n+                             m2/mc-obj/mcp4.mod \\\n+                             m2/mc-obj/mcp5.mod \\\n+                             mcflex.c\n+\tg++ -I$(srcdir)/m2/mc -c -g mcflex.c\n+\t$(BOOTGM2) -fsources -fm2-whole-program -g -I$(srcdir)/m2/mc:$(objdir)/m2/mc-obj:$(srcdir)/m2/gm2-libs:$(srcdir)/m2/mc $(srcdir)/m2/mc/top.mod\n+\n+m2/mc/decl.o:  $(srcdir)/m2/mc/decl.mod\n+\t$(BOOTGM2) $(MCOPTIONS) -I$(GM2PATH) -o $@ $(srcdir)/m2/mc/decl.mod\n+\n+m2/mc-obj/%.mod: $(srcdir)/m2/mc/%.bnf $(PGE)\n+\t$(PGE) -l $< -o $@\n+\n+gm2-bootstrap: mc-devel\n+\tfor i in $(srcdir)/m2/gm2-libs/*.def ; do echo $$i ; ./mc --gcc-config-system -I$(srcdir)/m2/gm2-libs $$i ; done\n+\tfor i in $(srcdir)/m2/gm2-compiler/*.def ; do echo $$i ; ./mc --gcc-config-system -I$(srcdir)/m2/gm2-libs:$(srcdir)/m2/gm2-compiler:$(srcdir)/m2/gm2-gcc $$i ; done\n+\tfor i in $(srcdir)/m2/gm2-libs/*.mod ; do echo $$i ; ./mc --gcc-config-system -I$(srcdir)/m2/gm2-libs:$(srcdir)/m2/gm2-compiler:$(srcdir)/m2/gm2-gcc $$i ; done\n+\n+\n+$(objdir)/plugin:\n+\ttest -d $@ || mkdir -p $@\n+\n+$(objdir)/m2/mc-boot:\n+\ttest -d $@ || mkdir -p $@\n+\n+$(objdir)/m2/mc-boot-ch:\n+\ttest -d $@ || mkdir -p $@\n+\n+$(objdir)/m2/mc-boot-gen:\n+\ttest -d $@ || mkdir -p $@\n+\n+mc-autogen: mc-clean mc-devel \\\n+            $(BUILD-MC-BOOT-H) $(BUILD-MC-BOOT-C) \\\n+            $(BUILD-MC-BOOT-AUTO-C)\n+\tfor i in m2/mc-boot-gen/*.c ; do \\\n+           echo $(CXX) -g -c -I. -I$(srcdir)/../include -I$(srcdir) -I$(srcdir)/m2/mc-boot-ch -Im2/mc-boot-gen/ $$i -o m2/mc-boot-gen/`basename $$i .c`.o ; \\\n+                $(CXX) -g -c -I. -I$(srcdir)/../include -I$(srcdir) -I$(srcdir)/m2/mc-boot-ch -Im2/mc-boot-gen/ $$i -o m2/mc-boot-gen/`basename $$i .c`.o ; done\n+\t@echo -n \"built \"\n+\t@cd m2/mc-boot-gen ; ls *.o | wc -l\n+\t@echo -n \"out of \"\n+\t@cd m2/mc-boot-gen ; ls *.c | wc -l\n+\t@echo \"modules\"\n+\n+# EXTENDED_OPAQUE = --extended-opaque\n+EXTENDED_OPAQUE =\n+MC_OPTIONS = $(MC_COPYRIGHT) --gcc-config-system --olang=c++\n+\n+m2/mc-boot-gen/$(SRC_PREFIX)%.h: $(srcdir)/m2/mc/%.def\n+\t./mc $(MC_OPTIONS) -I$(srcdir)/m2/mc:$(srcdir)/m2/gm2-libs:$(srcdir)/m2/gm2-libs-iso $(EXTENDED_OPAQUE) --h-file-prefix=$(SRC_PREFIX) -o=$@ $<\n+\n+m2/mc-boot-gen/$(SRC_PREFIX)%.h: $(srcdir)/m2/gm2-libs/%.def\n+\t./mc $(MC_OPTIONS) -I$(srcdir)/m2/mc:$(srcdir)/m2/gm2-libs:$(srcdir)/m2/gm2-libs-iso $(EXTENDED_OPAQUE) --h-file-prefix=$(SRC_PREFIX) -o=$@ $<\n+\n+m2/mc-boot-gen/$(SRC_PREFIX)decl.c: $(srcdir)/m2/mc/decl.mod\n+\t./mc $(MC_OPTIONS) --extended-opaque -I$(srcdir)/m2/mc:$(srcdir)/m2/gm2-libs:$(srcdir)/m2/gm2-libs-iso --h-file-prefix=$(SRC_PREFIX) -o=$@ $<\n+\n+m2/mc-boot-gen/$(SRC_PREFIX)%.c: $(srcdir)/m2/mc/%.mod\n+\t./mc $(MC_OPTIONS) -I$(srcdir)/m2/mc:$(srcdir)/m2/gm2-libs:$(srcdir)/m2/gm2-libs-iso $(EXTENDED_OPAQUE) --h-file-prefix=$(SRC_PREFIX) -o=$@ $<\n+\n+m2/mc-boot-gen/$(SRC_PREFIX)%.c: $(srcdir)/m2/gm2-libs/%.mod\n+\t./mc $(MC_OPTIONS) -I$(srcdir)/m2/mc:$(srcdir)/m2/gm2-libs:$(srcdir)/m2/gm2-libs-iso $(EXTENDED_OPAQUE) --h-file-prefix=$(SRC_PREFIX) -o=$@ $<\n+\n+m2/mc-boot-gen/$(SRC_PREFIX)%.h: $(srcdir)/m2/gm2-libs-iso/%.def\n+\t./mc $(MC_OPTIONS) -I$(srcdir)/m2/mc:$(srcdir)/m2/gm2-libs:$(srcdir)/m2/gm2-libs-iso $(EXTENDED_OPAQUE) --h-file-prefix=$(SRC_PREFIX) -o=$@ $<\n+\n+m2/mc-boot-gen/$(SRC_PREFIX)%.c: m2/mc-obj/%.mod\n+\t./mc $(MC_OPTIONS) -I$(srcdir)/m2/mc:$(srcdir)/m2/gm2-libs:$(srcdir)/m2/gm2-libs-iso $(EXTENDED_OPAQUE) --h-file-prefix=$(SRC_PREFIX) -o=$@ $<\n+\n+# mc-bootstrap compiles mc using the C version previously generated by mc-autogen.\n+# These autogenerated files will be checked into git by the maintainer.\n+\n+mc-bootstrap: mc-clean m2/boot-bin/mc$(exeext)\n+\n+gm2.maintainer-reconfigure: force\n+\tautoconf $(srcdir)/m2/gm2-libs/config-host.in > $(srcdir)/m2/gm2-libs/config-host\n+\t( cd $(srcdir)/m2/gm2-libs ; autoheader config-host.in )\n+\t( cd $(srcdir)/m2 ; autoconf configure.in > configure )\n+\n+gm2.maintainer-clean: force\n+\t-rm -f $(srcdir)/m2/gm2-auto/*\n+\t-rm -f $(srcdir)/m2/gm2-libs.texi\n+\t-rm -f $(srcdir)/m2/gm2-ebnf.texi\n+\t-rm -f $(srcdir)/m2/images/gnu.eps\n+\n+gm2.maintainer-help: force\n+\t@echo \"make knows about:\"\n+\t@echo \" \"\n+\t@echo \"make gm2.maintainer-help           this command\"\n+\t@echo \"make gm2.maintainer-reconfigure    rebuild the configure scripts\"\n+\t@echo \"make gm2.maintainer-clean          clean pre-built images and texi files\"\n+\n+\n+#\n+#  verify the compiler can be built across three generations of cc1gm2 diffing assembly output.\n+#  stage1/m2/cc1gm2 built by translating M2 into C++.\n+#  stage2/m2/cc1gm2 built from stage1/m2/cc1gm2.\n+#  stage3/m2/cc1gm2 built from stage2/m2/cc1gm2.\n+#\n+\n+# GM2-VERIFY-MODS is a list of modules which have no __DATE__ stamp inside them\n+#                 and thus they can be built by the different versions of gm2.\n+#                 This list is used for testing only.\n+\n+GM2-VERIFY-MODS    = FifoQueue.mod     M2AsmUtil.mod                   M2Optimize.mod  \\\n+                     M2StackWord.mod                   M2Pass.mod      M2Batch.mod     \\\n+                     M2Quads.mod       M2Comp.mod      M2Reserved.mod  \\\n+                     M2Debug.mod       M2Defaults.mod  NameKey.mod     \\\n+                     M2FileName.mod    P0SymBuild.mod  P1SymBuild.mod  P2SymBuild.mod  \\\n+                     P3SymBuild.mod  \\\n+                     SymbolKey.mod     SymbolTable.mod                 M2Error.mod     \\\n+                     M2StackAddress.mod \\\n+                     M2Students.mod  \\\n+                     M2BasicBlock.mod  M2Code.mod      M2GenGCC.mod    M2GCCDeclare.mod\\\n+                     M2ALU.mod         M2System.mod    M2Base.mod      Lists.mod       \\\n+                     M2Search.mod      bnflex.mod      ppg.mod         Output.mod      \\\n+                     SymbolConversion.mod \\\n+                     M2Preprocess.mod  M2Printf.mod    M2LexBuf.mod    M2Quiet.mod     \\\n+                     M2Bitset.mod      M2Size.mod      CLexBuf.mod     M2Scope.mod     \\\n+                     M2Range.mod       M2Swig.mod      M2MetaError.mod Sets.mod        \\\n+                     M2CaseList.mod    PCSymBuild.mod  M2Const.mod     \\\n+                     M2DebugStack.mod  ObjectFiles.mod M2ColorString.mod M2Emit.mod\n+\n+GM2-VERIFY-AUTO    = P1Build.mod       P2Build.mod     PCBuild.mod     P3Build.mod     \\\n+                     PHBuild.mod       pg.mod          P0SyntaxCheck.mod\n+\n+GM2_LIBS_PARANOID = m2/gm2-compiler-paranoid/gm2.a \\\n+                    m2/gm2-libs-paranoid/libgm2.a                       # build it again using GM2_LIBS\n+\n+gm2.paranoid: stage3/m2/cc1gm2$(exeext) gm2.verifyparanoid\n+\n+stage3/m2/cc1gm2$(exeext): stage2/m2/cc1gm2$(exeext) m2/gm2-compiler-paranoid/m2flex.o \\\n+                            $(P) $(GM2_C_OBJS) $(BACKEND) $(LIBDEPS) $(GM2_LIBS_PARANOID) \\\n+                            m2/gm2-gcc/rtegraph.o plugin/m2rte$(exeext).so m2/gm2-libs-boot/M2LINK.o\n+\t@$(call LINK_PROGRESS,$(INDEX.m2),start)\n+\t+$(LLINKER) $(ALL_CFLAGS) $(LDFLAGS) -o $@ $(GM2_C_OBJS) m2/gm2-compiler-paranoid/m2flex.o \\\n+                            attribs.o \\\n+                              $(GM2_LIBS_PARANOID) \\\n+                              $(BACKEND) $(LIBS) m2/gm2-gcc/rtegraph.o m2/gm2-libs-boot/M2LINK.o \\\n+                              $(BACKENDLIBS) $(LIBSTDCXX) -lm\n+\t@$(call LINK_PROGRESS,$(INDEX.m2),end)\n+\n+\n+# gm2.verifyparanoid diffs the output of all three compilers with the compiler source code\n+\n+gm2.verifyparanoid: stage1/m2/cc1gm2$(exeext) stage2/m2/cc1gm2$(exeext) stage3/m2/cc1gm2$(exeext) force\n+\t@echo \"verifying the three generations of GNU Modula-2 compilers - it may take some time..\"\n+\t$(QUIAT)for i in $(GM2-VERIFY-MODS) ; do \\\n+           echo -n \"$$i \" ; \\\n+           ./gm2 -S $(GM2_FLAGS) -c -B./stage1/m2 -I$(srcdir)/m2/gm2-compiler:$(srcdir)/m2/gm2-libs:$(srcdir)/m2/gm2-gcc:$(srcdir)/m2/gm2-libiberty $(srcdir)/m2/gm2-compiler/$$i -o m2/gm2-compiler-verify/1.s ; \\\n+           echo -n \"[1]\" ; \\\n+           ./gm2 -S $(GM2_FLAGS) -c -B./stage2/m2 -I$(srcdir)/m2/gm2-compiler:$(srcdir)/m2/gm2-libs:$(srcdir)/m2/gm2-gcc:$(srcdir)/m2/gm2-libiberty $(srcdir)/m2/gm2-compiler/$$i -o m2/gm2-compiler-verify/2.s ; \\\n+           echo -n \"[2]\" ; \\\n+           ./gm2 -S $(GM2_FLAGS) -c -B./stage3/m2 -I$(srcdir)/m2/gm2-compiler:$(srcdir)/m2/gm2-libs:$(srcdir)/m2/gm2-gcc:$(srcdir)/m2/gm2-libiberty $(srcdir)/m2/gm2-compiler/$$i -o m2/gm2-compiler-verify/3.s ; \\\n+           echo -n \"[3]\" ; \\\n+           if ! diff m2/gm2-compiler-verify/1.s m2/gm2-compiler-verify/2.s > m2/gm2-compiler-verify/1_2.diff 2>&1 ; then \\\n+               echo -n \" [stage 1 and stage 2 differ]\" ; \\\n+               cp m2/gm2-compiler-verify/1.s m2/gm2-compiler-verify/t.s | as -ahl m2/gm2-compiler-verify/t.s > m2/gm2-compiler-verify/$$i.1.lst ; \\\n+               cp m2/gm2-compiler-verify/2.s m2/gm2-compiler-verify/t.s | as -ahl m2/gm2-compiler-verify/t.s > m2/gm2-compiler-verify/$$i.2.lst ; \\\n+               echo \" \" ; \\\n+               exit 1 ; \\\n+           fi ; \\\n+           if ! diff m2/gm2-compiler-verify/2.s m2/gm2-compiler-verify/3.s > m2/gm2-compiler-verify/2_3.diff 2>&1 ; then \\\n+               echo -n \" [stage 2 and stage 3 differ]\" ; \\\n+               cp m2/gm2-compiler-verify/2.s m2/gm2-compiler-verify/t.s | as -ahl m2/gm2-compiler-verify/t.s > m2/gm2-compiler-verify/$$i.2.lst ; \\\n+               cp m2/gm2-compiler-verify/3.s m2/gm2-compiler-verify/t.s | as -ahl m2/gm2-compiler-verify/t.s > m2/gm2-compiler-verify/$$i.3.lst ; \\\n+           fi ; \\\n+           echo \" \" ; \\\n+        done\n+\t$(QUIAT)echo \"now verifying automatically built modules\"\n+\t$(QUIAT)for i in x $(GM2-VERIFY-AUTO) ; do \\\n+           if [ -f m2/gm2-auto/$$i ] ; then \\\n+              echo -n \"$$i \" ; \\\n+              ./gm2 -S $(GM2_FLAGS) -c -B./stage1/m2 -I$(srcdir)/m2/gm2-compiler:$(srcdir)/m2/gm2-libs:$(srcdir)/m2/gm2-gcc:$(srcdir)/m2/gm2-libiberty m2/gm2-auto/$$i -o m2/gm2-compiler-verify/1.s ; \\\n+              echo -n \"[1]\" ; \\\n+              ./gm2 -S $(GM2_FLAGS) -c -B./stage2/m2 -I$(srcdir)/m2/gm2-compiler:$(srcdir)/m2/gm2-libs:$(srcdir)/m2/gm2-gcc:$(srcdir)/m2/gm2-libiberty m2/gm2-auto/$$i -o m2/gm2-compiler-verify/2.s ; \\\n+              echo -n \"[2]\" ; \\\n+              ./gm2 -S $(GM2_FLAGS) -c -B./stage3/m2 -I$(srcdir)/m2/gm2-compiler:$(srcdir)/m2/gm2-libs:$(srcdir)/m2/gm2-gcc:$(srcdir)/m2/gm2-libiberty m2/gm2-auto/$$i -o m2/gm2-compiler-verify/3.s ; \\\n+              echo -n \"[3]\" ; \\\n+              if ! diff m2/gm2-compiler-verify/1.s m2/gm2-compiler-verify/2.s > m2/gm2-compiler-verify/1_2.diff 2>&1 ; then \\\n+                  echo -n \" [stage 1 and stage 2 differ]\" ; \\\n+                  cp m2/gm2-compiler-verify/1.s m2/gm2-compiler-verify/t.s | as -ahl m2/gm2-compiler-verify/t.s > m2/gm2-compiler-verify/$$i.1.lst ; \\\n+                  cp m2/gm2-compiler-verify/2.s m2/gm2-compiler-verify/t.s | as -ahl m2/gm2-compiler-verify/t.s > m2/gm2-compiler-verify/$$i.2.lst ; \\\n+                  echo \" \" ; \\\n+                  exit 1 ; \\\n+              fi ; \\\n+              if ! diff m2/gm2-compiler-verify/2.s m2/gm2-compiler-verify/3.s > m2/gm2-compiler-verify/2_3.diff 2>&1 ; then \\\n+                  echo -n \" [stage 2 and stage 3 differ]\" ; \\\n+                  cp m2/gm2-compiler-verify/2.s m2/gm2-compiler-verify/t.s | as -ahl m2/gm2-compiler-verify/t.s > m2/gm2-compiler-verify/$$i.2.lst ; \\\n+                  cp m2/gm2-compiler-verify/3.s m2/gm2-compiler-verify/t.s | as -ahl m2/gm2-compiler-verify/t.s > m2/gm2-compiler-verify/$$i.3.lst ; \\\n+              fi ; \\\n+              echo \" \" ; \\\n+           fi ; \\\n+        done ; \\\n+\t$(RM) -f m2/gm2-compiler-verify/1.s m2/gm2-compiler-verify/2.s m2/gm2-compiler-verify/3.s m2/gm2-compiler-verify/2_3.diff m2/gm2-compiler-verify/1_2.diff\n+\n+\n+# gm2.verifystage12 diffs the output of the stage1 and stage2 compilers with the compiler source code\n+\n+gm2.verifystage12: force stage1/m2/cc1gm2$(exeext) stage2/m2/cc1gm2$(exeext)\n+\t@echo \"verifying stage1 and stage2 generations of GNU Modula-2 compilers - it may take some time..\"\n+\t$(QUIAT)for i in $(GM2-VERIFY-MODS) ; do \\\n+           echo -n \"$$i \" ; \\\n+           ./gm2 -S $(GM2_FLAGS) -c -B./stage1/m2 -I$(srcdir)/m2/gm2-compiler:$(srcdir)/m2/gm2-libs:$(srcdir)/m2/gm2-gcc:$(srcdir)/m2/gm2-libiberty $(srcdir)/m2/gm2-compiler/$$i -o m2/gm2-compiler-verify/1.s ; \\\n+           echo -n \"[1]\" ; \\\n+           ./gm2 -S $(GM2_FLAGS) -c -B./stage2/m2 -I$(srcdir)/m2/gm2-compiler:$(srcdir)/m2/gm2-libs:$(srcdir)/m2/gm2-gcc:$(srcdir)/m2/gm2-libiberty $(srcdir)/m2/gm2-compiler/$$i -o m2/gm2-compiler-verify/2.s ; \\\n+           echo -n \"[2]\" ; \\\n+           if ! diff m2/gm2-compiler-verify/1.s m2/gm2-compiler-verify/2.s > m2/gm2-compiler-verify/1_2.diff 2>&1 ; then \\\n+               echo -n \" [stage 1 and stage 2 differ]\" ; \\\n+               cp m2/gm2-compiler-verify/1.s m2/gm2-compiler-verify/t.s | as -ahl m2/gm2-compiler-verify/t.s > m2/gm2-compiler-verify/$$i.1.lst ; \\\n+               cp m2/gm2-compiler-verify/2.s m2/gm2-compiler-verify/t.s | as -ahl m2/gm2-compiler-verify/t.s > m2/gm2-compiler-verify/$$i.2.lst ; \\\n+               echo \" \" ; \\\n+           fi ; \\\n+           echo \" \" ; \\\n+        done\n+\t$(QUIAT)echo \"now verifying automatically built modules\"\n+\t$(QUIAT)for i in x $(GM2-VERIFY-AUTO) ; do \\\n+           if [ -f m2/gm2-auto/$$i ] ; then \\\n+              echo -n \"$$i \" ; \\\n+              ./gm2 -S $(GM2_FLAGS) -c -B./stage1/m2 -I$(srcdir)/m2/gm2-compiler:$(srcdir)/m2/gm2-libs:$(srcdir)/m2/gm2-gcc:$(srcdir)/m2/gm2-libiberty m2/gm2-auto/$$i -o m2/gm2-compiler-verify/1.s ; \\\n+              echo -n \"[1]\" ; \\\n+              ./gm2 -S $(GM2_FLAGS) -c -B./stage2/m2 -I$(srcdir)/m2/gm2-compiler:$(srcdir)/m2/gm2-libs:$(srcdir)/m2/gm2-gcc:$(srcdir)/m2/gm2-libiberty m2/gm2-auto/$$i -o m2/gm2-compiler-verify/2.s ; \\\n+              echo -n \"[2]\" ; \\\n+              if ! diff m2/gm2-compiler-verify/1.s m2/gm2-compiler-verify/2.s > m2/gm2-compiler-verify/1_2.diff 2>&1 ; then \\\n+                  echo -n \" [stage 1 and stage 2 differ]\" ; \\\n+                  cp m2/gm2-compiler-verify/1.s m2/gm2-compiler-verify/t.s | as -ahl m2/gm2-compiler-verify/t.s > m2/gm2-compiler-verify/$$i.1.lst ; \\\n+                  cp m2/gm2-compiler-verify/2.s m2/gm2-compiler-verify/t.s | as -ahl m2/gm2-compiler-verify/t.s > m2/gm2-compiler-verify/$$i.2.lst ; \\\n+                  echo \" \" ; \\\n+              fi ; \\\n+              echo \" \" ; \\\n+           fi ; \\\n+        done ; \\\n+\t$(RM) -f m2/gm2-compiler-verify/1.s m2/gm2-compiler-verify/2.s m2/gm2-compiler-verify/3.s m2/gm2-compiler-verify/2_3.diff m2/gm2-compiler-verify/1_2.diff\n+\n+\n+# The rules which build objects in the gm2-compiler-paranoid gm2-libs-paranoid directories.\n+\n+m2/gm2-libs-paranoid/%.o: m2/gm2-libs-ch/%.c\n+\t$(XGCC) -c -g $(GM2_O_S3) $(GM2_O) -I./ -Im2/gm2-libs -Wall $(INCLUDES) $< -o $@\n+\n+m2/gm2-libs-paranoid/%.o: $(srcdir)/m2/gm2-libs/%.mod\n+\t$(GM2_2) $(GM2_O_S3) $(GM2_FLAGS) -c -I$(srcdir)/m2/gm2-compiler -I$(srcdir)/m2/gm2-libs -I$(srcdir)/m2/gm2-libs-iso -I$(srcdir)/m2/gm2-libiberty $< -o $@\n+\n+m2/gm2-compiler-paranoid/%.o: $(srcdir)/m2/gm2-compiler/%.mod\n+\t$(GM2_2) $(GM2_O_S3) $(GM2_FLAGS) -c -I$(srcdir)/m2/gm2-compiler -I$(srcdir)/m2/gm2-libs -I$(srcdir)/m2/gm2-gcc -I$(srcdir)/m2/gm2-libiberty $< -o $@\n+\n+m2/gm2-compiler-paranoid/%.o: m2/gm2-compiler-paranoid/%.mod\n+\t$(GM2_2) $(GM2_O_S3) $(GM2_FLAGS) -c -I$(srcdir)/m2/gm2-compiler -I$(srcdir)/m2/gm2-libs -I$(srcdir)/m2/gm2-gcc -I$(srcdir)/m2/gm2-libiberty $< -o $@\n+\n+m2/gm2-compiler-paranoid/P0SyntaxCheck.o: m2/gm2-compiler-paranoid/P0SyntaxCheck.mod\n+\t$(GM2_2) $(GM2_O_S3) $(GM2_FLAGS) -c -I$(srcdir)/m2/gm2-compiler -I$(srcdir)/m2/gm2-libs -I$(srcdir)/m2/gm2-gcc -I$(srcdir)/m2/gm2-libiberty $< -o $@\n+\n+m2/gm2-compiler-paranoid/P1Build.o: m2/gm2-compiler-paranoid/P1Build.mod\n+\t$(GM2_2) $(GM2_O_S3) $(GM2_FLAGS) -c -I$(srcdir)/m2/gm2-compiler -I$(srcdir)/m2/gm2-libs -I$(srcdir)/m2/gm2-gcc -I$(srcdir)/m2/gm2-libiberty $< -o $@\n+\n+m2/gm2-compiler-paranoid/P2Build.o: m2/gm2-compiler-paranoid/P2Build.mod\n+\t$(GM2_2) $(GM2_O_S3) $(GM2_FLAGS) -c -I$(srcdir)/m2/gm2-compiler -I$(srcdir)/m2/gm2-libs -I$(srcdir)/m2/gm2-gcc -I$(srcdir)/m2/gm2-libiberty $< -o $@\n+\n+m2/gm2-compiler-paranoid/P3Build.o: m2/gm2-compiler-paranoid/P3Build.mod\n+\t$(GM2_2) $(GM2_O_S3) $(GM2_FLAGS) -c -I$(srcdir)/m2/gm2-compiler -I$(srcdir)/m2/gm2-libs -I$(srcdir)/m2/gm2-gcc -I$(srcdir)/m2/gm2-libiberty $< -o $@\n+\n+m2/gm2-compiler-paranoid/PHBuild.o: m2/gm2-compiler-paranoid/PHBuild.mod\n+\t$(GM2_2) $(GM2_O_S3) $(GM2_FLAGS) -c -I$(srcdir)/m2/gm2-compiler -I$(srcdir)/m2/gm2-libs -I$(srcdir)/m2/gm2-gcc -I$(srcdir)/m2/gm2-libiberty $< -o $@\n+\n+m2/gm2-compiler-paranoid/PCBuild.o: m2/gm2-compiler-paranoid/PCBuild.mod\n+\t$(GM2_2) $(GM2_O_S3) $(GM2_FLAGS) -c -I$(srcdir)/m2/gm2-compiler -I$(srcdir)/m2/gm2-libs -I$(srcdir)/m2/gm2-gcc -I$(srcdir)/m2/gm2-libiberty $< -o $@\n+\n+m2/gm2-libs-paranoid/host.o: $(srcdir)/m2/gm2-libs-ch/host.c m2/gm2-libs/gm2-libs-host.h\n+\t$(CXX) -c $(GM2_O_S3) $(CFLAGS) -Im2/gm2-libs -I$(srcdir)/m2 -Im2 -I. -Im2/gm2-libs-boot $(INCLUDES) $< -o $@\n+\n+m2/gm2-libs-paranoid/wrapc.o: $(srcdir)/m2/gm2-libs-ch/wrapc.c m2/gm2-libs-boot/$(SRC_PREFIX)wrapc.h m2/gm2-libs/gm2-libs-host.h\n+\t$(CXX) -c -DIN_GCC $(GM2_O_S3) $(CFLAGS) -Im2/gm2-libs -I$(srcdir)/m2 -Im2 -I. -Im2/gm2-libs-boot $(INCLUDES) $< -o $@\n+\n+m2/gm2-libs-paranoid/UnixArgs.o: $(srcdir)/m2/gm2-libs-ch/UnixArgs.cc \\\n+                                  m2/gm2-libs-boot/$(SRC_PREFIX)UnixArgs.h\n+\t$(CXX) -c -DIN_GCC $(GM2_O_S3) $(CFLAGS) -Im2/gm2-libs -I$(srcdir)/m2 -Im2 -I. -Im2/gm2-libs-boot $(INCLUDES) $< -o $@\n+\n+m2/gm2-libs-paranoid/errno.o: $(srcdir)/m2/gm2-libs-ch/errno.c \\\n+                                   m2/gm2-libs-boot/$(SRC_PREFIX)errno.h\n+\t$(CXX) -c -DIN_GCC $(GM2_O_S3) $(CFLAGS) -Im2/gm2-libs -I$(srcdir)/m2 -Im2 -I. -Im2/gm2-libs-boot $(INCLUDES) $< -o $@\n+\n+m2/gm2-libs-paranoid/Selective.o: $(srcdir)/m2/gm2-libs-ch/Selective.c \\\n+                                   m2/gm2-libs-boot/$(SRC_PREFIX)Selective.h\n+\t$(COMPILER) -c -DIN_GCC $(GM2_O_S3) $(CFLAGS) -Im2/gm2-libs -I$(srcdir)/m2 -Im2 -I. -Im2/gm2-libs-boot $(INCLUDES) $< -o $@\n+\n+m2/gm2-libs-paranoid/choosetemp.o: $(srcdir)/m2/gm2-libs-ch/choosetemp.c \\\n+                                    m2/gm2-libiberty/$(SRC_PREFIX)choosetemp.h\n+\t$(CXX) -c -DIN_GCC $(GM2_O_S3) $(CFLAGS) -Im2/gm2-libs -I$(srcdir)/m2 -Im2 -I. -Im2/gm2-libs-boot -Im2/gm2-libiberty $(INCLUDES) $< -o $@\n+\n+m2/gm2-libs-paranoid/SysExceptions.o: $(srcdir)/m2/gm2-libs-ch/SysExceptions.c \\\n+                                  m2/gm2-libs-boot/$(SRC_PREFIX)SysExceptions.h\n+\t$(CXX) -c -DIN_GCC $(GM2_O_S3) $(CFLAGS) -Im2/gm2-libs -I$(srcdir)/m2 -Im2 -I. -Im2/gm2-libs-boot $(INCLUDES) $< -o $@\n+\n+m2/gm2-compiler-paranoid/m2flex.o: m2/gm2-compiler/m2flex.c $(TIMEVAR_H)\n+\t$(COMPILER) -c $(GM2_O_S3) -g $(ALL_COMPILERFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) \\\n+          $(GM2GCC) -Im2/gm2-compiler-boot -Im2/gm2-libs-boot $< -o $@\n+\n+m2/gm2-libs-paranoid/dtoa.o: $(srcdir)/m2/gm2-libs-ch/dtoa.cc \\\n+                              m2/gm2-libs-boot/$(SRC_PREFIX)dtoa.h \\\n+                              m2/gm2-libs/gm2-libs-host.h\n+\t$(CXX) -c $(GM2_O_S3) $(CFLAGS) -I$(srcdir)/m2 -Im2/gm2-libs-boot -Im2/gm2-libs $(INCLUDES) $< -o $@\n+\n+m2/gm2-libs-paranoid/ldtoa.o: $(srcdir)/m2/gm2-libs-ch/ldtoa.cc \\\n+                               m2/gm2-libs-boot/$(SRC_PREFIX)ldtoa.h \\\n+                               m2/gm2-libs/gm2-libs-host.h\n+\t$(CXX) -c $(GM2_O_S3) $(CFLAGS) -I$(srcdir)/m2 -Im2/gm2-libs-boot -Im2/gm2-libs $(INCLUDES) $< -o $@\n+\n+m2/gm2-libs-paranoid/termios.o: $(srcdir)/m2/gm2-libs-ch/termios.c \\\n+                               m2/gm2-libs-boot/$(SRC_PREFIX)termios.h \\\n+                               m2/gm2-libs/gm2-libs-host.h\n+\t$(CXX) -c $(GM2_O_S3) $(CFLAGS) -I$(srcdir)/m2 -Im2/gm2-libs-boot -Im2/gm2-libs $(INCLUDES) $< -o $@\n+\n+\n+# The rules which build the paranoid version of gm2.\n+\n+BUILD-LIBS-PARANOID-H = $(GM2-LIBS-BOOT-DEFS:%.def=m2/gm2-libs-boot/$(SRC_PREFIX)%.h)\n+\n+BUILD-LIBS-PARANOID = $(BUILD-LIBS-PARANOID-H) \\\n+                      $(GM2-LIBS-MODS:%.mod=m2/gm2-libs-paranoid/%.o) \\\n+                      $(GM2-LIBS-CC:%.cc=m2/gm2-libs-paranoid/%.o) \\\n+                      $(GM2-LIBS-C:%.c=m2/gm2-libs-paranoid/%.o)\n+\n+m2/gm2-libs-paranoid/libgm2.a: m2/boot-bin/mc$(exeext) $(BUILD-LIBS-PARANOID)\n+\t$(AR) cr $@ $(GM2-LIBS-MODS:%.mod=m2/gm2-libs-paranoid/%.o) \\\n+                    $(GM2-LIBS-CC:%.cc=m2/gm2-libs-paranoid/%.o) \\\n+                    $(GM2-LIBS-C:%.c=m2/gm2-libs-paranoid/%.o)\n+\t$(RANLIB) $@\n+\n+m2/gm2-compiler-paranoid/gm2.a: \\\n+                             $(GM2-COMP-MODS:%.mod=m2/gm2-compiler-paranoid/%.o) \\\n+                             $(GM2-AUTO-MODS:%.mod=m2/gm2-compiler-paranoid/%.o) \\\n+                             m2/gm2-compiler-paranoid/M2Version.o \\\n+                             m2/gm2-compiler-paranoid/m2flex.o\n+\t$(AR) cr $@ $(GM2-COMP-MODS:%.mod=m2/gm2-compiler-paranoid/%.o) \\\n+                    $(GM2-AUTO-MODS:%.mod=m2/gm2-compiler-paranoid/%.o) \\\n+                    m2/gm2-compiler-paranoid/M2Version.o\n+\t$(RANLIB) $@\n+\n+m2/gm2-compiler-paranoid/M2Version.mod:\n+\t$(SHELL) $(srcdir)/m2/tools-src/makeversion -m $(srcdir) m2/gm2-compiler-paranoid\n+\n+m2/gm2-compiler-paranoid/M2Version.o: m2/gm2-compiler-paranoid/M2Version.mod\n+\t$(GM2_2) $(GM2_FLAGS) -c -I$(srcdir)/m2/gm2-compiler -I$(srcdir)/m2/gm2-libs -I$(srcdir)/m2/gm2-gcc $< -o $@\n+\n+m2/gm2-compiler-paranoid/%.mod: $(srcdir)/m2/gm2-compiler/%.bnf $(PGE)\n+\t$(PGE) -k -l $< -o $@\n+\n+# Recreate the target independent copies of the documentation which is\n+# used during the build if Python3 is unavailable.\n+\n+# m2-target-independent-doc-rst should be enabled once\n+# tools-src/def2doc.py is completed (module hyperlinks need rst\n+# treatment).\n+\n+m2-target-independent-doc: m2-target-independent-doc-texi # m2-target-independent-doc-rst\n+\n+m2-target-independent-doc-texi: force\n+ifeq ($(HAVE_PYTHON),yes)\n+\tpython3 $(srcdir)/m2/tools-src/def2doc.py -t -b$(srcdir)/m2 -f$(srcdir)/m2/gm2-libs-iso/SYSTEM.def -o $(srcdir)/m2/target-independent/SYSTEM-iso.texi\n+\tpython3 $(srcdir)/m2/tools-src/def2doc.py -t -b$(srcdir)/m2 -f$(srcdir)/m2/gm2-libs/SYSTEM.def -o $(srcdir)/m2/target-independent/SYSTEM-pim.texi\n+\tpython3 $(srcdir)/m2/tools-src/def2doc.py -t -b$(srcdir)/m2 -f$(srcdir)/m2/gm2-libs/Builtins.def -o $(srcdir)/m2/target-independent/Builtins.texi\n+\tpython3 $(srcdir)/m2/tools-src/def2doc.py -t -uLibraries -s$(srcdir)/m2 -b$(srcdir)/m2 -o $(srcdir)/m2/target-independent/gm2-libs.texi\n+else\n+\techo \"m2-target-independent-doc-texi will only work if Python3 was detected during configure\"\n+endif\n+\n+m2-target-independent-doc-rst: force\n+ifeq ($(HAVE_PYTHON),yes)\n+\tpython3 $(srcdir)/m2/tools-src/def2doc.py -x -b$(srcdir)/m2 -f$(srcdir)/m2/gm2-libs-iso/SYSTEM.def -o $(srcdir)/m2/target-independent/SYSTEM-iso.rst\n+\tpython3 $(srcdir)/m2/tools-src/def2doc.py -x -b$(srcdir)/m2 -f$(srcdir)/m2/gm2-libs/SYSTEM.def -o $(srcdir)/m2/target-independent/SYSTEM-pim.rst\n+\tpython3 $(srcdir)/m2/tools-src/def2doc.py -x -b$(srcdir)/m2 -f$(srcdir)/m2/gm2-libs/Builtins.def -o $(srcdir)/m2/target-independent/Builtins.rst\n+\tpython3 $(srcdir)/m2/tools-src/def2doc.py -x -uLibraries -s$(srcdir)/m2 -b$(srcdir)/m2 -o $(srcdir)/m2/target-independent/gm2-libs.rst\n+else\n+\techo \"m2-target-independent-doc-rst will only work if Python3 was detected during configure\"\n+endif"}, {"sha": "469f99f0ec96afe76a32346f0042e5bd45ce9b88", "filename": "gcc/m2/NEWS", "status": "added", "additions": 231, "deletions": 0, "changes": 231, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2FNEWS", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2FNEWS", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2FNEWS?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754", "patch": "@@ -0,0 +1,231 @@\n+This file describes recent user-visible changes in gm2.  Bug fixes are\n+not described.  There are more details in the man and info pages.\n+\n+gm2 is now in the GCC tree and therefore these version numbers are\n+historical.\n+\n+VERSION 1.9.5\n+=============\n+\n+* More subexpressions tokens are created and accuracy of error positions\n+  within subexpressions has been improved.\n+* the GCC switch -fanalyzer can be used with Modula-2.\n+\n+VERSION 1.9.4\n+=============\n+\n+* More GCC error routines utilized for error messages, erroneous\n+  subexpressions are more accurately reported.\n+* Complete type checking now performed.\n+\n+VERSION 1.9.3\n+=============\n+\n+* GCC error routines utilized for error messages.\n+* complete whole number runtime range error detection finished.\n+* improved m2-plugin which analyzes the call graph and will issue\n+  warnings if the compiler detects a exported procedure will cause\n+  a range error.  The plugin will issue an error if the range error\n+  will be called from the module constructor/deconstructor.\n+\n+VERSION 1.2.0\n+=============\n+\n+* New improved more accurate source/line correlation in debugging output.\n+* -fm2-g generates nops to further improve debugging single stepping.\n+* -fm2-whole-program whole program optimization available.\n+* works with gcc-5.2.0 under x86_64, x86_32, arm 64 bit and arm 32 bit.\n+\n+VERSION 1.0.4\n+=============\n+\n+* Bug fixes to release 1.0\n+\n+VERSION 1.0\n+===========\n+\n+* All ISO libraries are complete.\n+* All ISO language implemented.\n+* All regression tests pass on both x86_64 and x86_32 Debian GNU/Linux\n+  platforms.\n+\n+VERSION 0.68\n+============\n+\n+* more ISO library modules are implemented.\n+* many errors are much more informative and indicate what the\n+  compiler has seen and what it expects.\n+\n+VERSION 0.63\n+============\n+\n+* many ISO library modules are implemented.\n+* Exception handling is complete and it can coexist with swig.\n+* all errors now include column information.  Also added -fxcode\n+  option which issues errors in Apple Xcode format.\n+* shared libraries are now implemented, to link against the shared\n+  libraries use the new option -fshared.  Likewise to generate a\n+  shared library use the -fshared option.\n+* the keyword FINALLY is now implemented and both the initialization\n+  and finalization blocks map onto GNU/Linux shared library\n+  constructor and deconstructors.\n+* the PIM libraries are built with -O0, -O2, -O2 -fshared, -fshared.\n+* a new option -fswig automatically generates a swig interface file\n+  corresponding to the definition module being compiled.\n+  This allows Python and other scripting languages to call Modula-2\n+  modules.\n+* new options, -fobject-path, allows users to specify the path for\n+  all objects whereas -I specifies the path for the library sources.\n+* -fmakeinit option introduced which will generate a file\n+  _m2_modulename.c in the current directory.\n+* introduced fixed sized types in the SYSTEM module.\n+\n+VERSION 0.62\n+============\n+\n+* all language options changed to -f.  Warning options are\n+  still -W.  Introduced memmove to Builtins.def.\n+* Introduced gm2/gm2-libs-pim/BlockOps.{def,mod}\n+* gm2/gm2-libs-pim/BitByteOps.{def,mod}:  added.\n+* -O now works on compiler and passes make gm2.paranoid.\n+\n+VERSION 0.61\n+============\n+\n+* builds when grafted onto gcc-4.1.2\n+\n+VERSION 0.52\n+============\n+\n+* tagged ready for branch for gcc-3.3.6 so that the head\n+  can be developed with gcc-4.1.0\n+\n+VERSION 0.51\n+============\n+\n+* all regression tests pass on LP64 and i386 GNU/Linux\n+\n+* declaration of variables at particular addresses is now implemented.\n+  Now gm2 is a full PIM Modula-2 compiler and hence the formal release.\n+\n+VERSION 0.50\n+============\n+\n+* all regression tests pass on LP64 and i386 GNU/Linux, i386, Mac OS X.3 G5\n+\n+* gm2-harness 0.7 will download, patch and build gcc, gdb, gm2 with the\n+  SET and TYPE enhancements below. gm2-harness-0.7 also honours the\n+   --prefix= option.\n+\n+* Much better dwarf-2 debugging support and when used with\n+  a patched gdb-6.3 the programmer can display RECORDs,\n+  ARRAYs, SETs, subranges and constant char literals in\n+  Modula-2 syntax.\n+\n+* it currently complies with Programming in Modula-2 Edition 2, 3 and 4.\n+  Users can switch on specific mutually exclusive features by using\n+  -Wpim or -Wpim2.\n+\n+* gm2 supports full PIM Modula-2 (except variables located at\n+  particular addresses).\n+\n+* profiling (-p) option is now available.\n+\n+* module priorities now implemented.\n+\n+* Logitech compatible libraries: Break.def, CardinalIO.def,\n+  Conversions.def, DebugPMD.def, DebugTrace.def, Delay.def, Display.def,\n+  ErrorCode.def, FloatingUtilities.def, InOut.def, Keyboard.def,\n+  LongIO.def, Random.def, RealConversions.def, RealInOut.def,\n+  Strings.def, Termbase.def, Terminal.def, TimeDate.def have been implemented.\n+\n+* all Ulm libraries are available.\n+\n+VERSION 0.49\n+============\n+\n+* supports sets of any ordinal size (memory permitting).\n+\n+* implements ISO Modula-2 SYSTEM which can be switched on via: -Wiso.\n+\n+* easy interface to C, and varargs can be passed to C routines.\n+\n+* University of Ulm libraries are installed together with the compiler\n+  and can be accessed via: -Wlibs=ulm\n+\n+* some Logitech libraries have been implemented and can be accessed via:\n+  -Wlibs=logitech\n+\n+* coroutines have been implemented in the PIM style and these are accessible\n+  from SYSTEM. A number of supporting libraries (executive and file descriptor\n+  mapping to interrupt vector libraries are available through the\n+  -Wlibs=pim-coroutines switch).\n+\n+\n+VERSION 0.42\n+============\n+\n+* MinGW cross compilation port released.\n+  Please see http://floppsie.comp.glam.ac.uk/Glamorgan/gaius/web/gm2-mingw.html\n+  for building details.\n+\n+VERSION 0.41\n+============\n+\n+* native sparc port passes make gm2.paranoid and make check-gm2\n+\n+* native i386  port passes make gm2.paranoid and make check-gm2\n+\n+* passes all 1350 regression tests\n+\n+* builds with gcc-3.3.2\n+\n+VERSION 0.40\n+============\n+\n+* brought GM2 up to date with gcc-3.3.1\n+\n+* many, many bug fixes and no patch is now required in the garbage collection\n+  of gcc-3.3.1\n+\n+* builds under Redhat 9.0 and Suse 9.0\n+\n+* added the LONGCARD data type.\n+\n+* LENGTH is now mapped onto M2RTS.Length if the parameter is not a constant\n+  at compile time.\n+\n+* standard procedures can be called inside constant expressions.\n+\n+* introduced examples/pthread\n+\n+* introduced a tool, h2def, to aid production of DEFINITION MODULE FOR \"C\" modules\n+  from C header files.\n+\n+* added MathLib0 module, added svga example.\n+\n+* added access to thirty one gcc built-in functions.\n+\n+\n+VERSION 0.33\n+============\n+\n+* implemented large sets.\n+\n+* implemented ISO compliant sets.\n+\n+* when gm2 is invoked with -gstabs a patched gdb will\n+  display set contents. This also works well with SET OF CHAR.\n+\n+* definition modules no longer have to explicitly export\n+  identifiers.\n+\n+VERSION 0.32\n+============\n+\n+* gm2 can be built as a native or as a strongarm cross compiler.\n+\n+* the C preprocessor can be invoked and it processes both definition and\n+  implementation modules.\n+\n+* error reporting understands preprocessed Modula-2 source."}, {"sha": "9de9e4fbf54878d51e1224edc835a479404b2ace", "filename": "gcc/m2/README", "status": "added", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2FREADME", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2FREADME", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2FREADME?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754", "patch": "@@ -0,0 +1,35 @@\n+\n+Building GNU Modula-2\n+=====================\n+\n+Please see the GCC documentation (gcc.texi) and section\n+(Installing GCC).\n+\n+Regression testing GM2\n+======================\n+\n+   cd host-build ; make check-m2\n+\n+runs all regression tests.\n+\n+Stress testing GM2\n+==================\n+\n+   cd host-build/gcc ; make gm2.paranoid\n+\n+builds gm2 using itself and then compiles each module with both\n+versions of gm2 comparing the emitted assembler code.\n+\n+Contributing to GNU Modula-2\n+============================\n+\n+Please do. But also please read the GNU Emacs info under\n+\n+* Standards: (standards).       GNU coding standards.\n+* Intellectual Property::       Keeping Free Software Free\n+* Reading Non-Free Code::       Referring to Proprietary Programs\n+* Contributions::               Accepting Contributions\n+\n+you might consider joining the GM2 Mailing list: see URL:\n+http://lists.nongnu.org/mailman/listinfo/gm2 before you start coding.\n+Many thanks and enjoy your programming!"}, {"sha": "68bb525355a07c858bcf315354a8443111c3198f", "filename": "gcc/m2/config-lang.in", "status": "added", "additions": 83, "deletions": 0, "changes": 83, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fconfig-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fconfig-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fconfig-lang.in?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754", "patch": "@@ -0,0 +1,83 @@\n+# Top level configure fragment for GNU Modula-2.\n+# Copyright (C) 2000-2022 Free Software Foundation, Inc.\n+\n+# This file is part of GCC.\n+\n+# GCC is free software; you can redistribute it and/or modify\n+# it under the terms of the GNU General Public License as published by\n+# the Free Software Foundation; either version 3, or (at your option)\n+# any later version.\n+\n+# GCC is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+# GNU General Public License for more details.\n+\n+# You should have received a copy of the GNU General Public License\n+# along with GCC; see the file COPYING3.  If not see\n+# <http://www.gnu.org/licenses/>.\n+\n+# Configure looks for the existence of this file to auto-config each language.\n+# We define several parameters used by configure:\n+#\n+# language\t- name of language as it would appear in $(LANGUAGES)\n+# compilers\t- value to add to $(COMPILERS)\n+# stagestuff\t- files to add to $(STAGESTUFF)\n+\n+language=\"m2\"\n+\n+compilers=\"cc1gm2\\$(exeext)\"\n+\n+stagestuff=\"gm2\\$(exeext) cc1gm2\\$(exeext) cc1gm2-cross\\$(exeext)\"\n+\n+target_libs=\"target-libstdc++-v3 target-libgm2\"\n+\n+# The Modula-2 frontend needs C++ compiler during stage 1.\n+lang_requires_boot_languages=c++\n+\n+# Do not build by default.\n+build_by_default=\"no\"\n+\n+gtfiles=\"\\$(srcdir)/m2/gm2-lang.cc \\\n+         \\$(srcdir)/m2/gm2-lang.h \\\n+         \\$(srcdir)/m2/gm2-gcc/rtegraph.cc \\\n+         \\$(srcdir)/m2/gm2-gcc/m2block.cc \\\n+         \\$(srcdir)/m2/gm2-gcc/m2builtins.cc \\\n+         \\$(srcdir)/m2/gm2-gcc/m2decl.cc \\\n+         \\$(srcdir)/m2/gm2-gcc/m2except.cc \\\n+         \\$(srcdir)/m2/gm2-gcc/m2expr.cc \\\n+         \\$(srcdir)/m2/gm2-gcc/m2statement.cc \\\n+         \\$(srcdir)/m2/gm2-gcc/m2type.cc\"\n+\n+outputs=\"m2/config-make \\\n+         m2/Make-maintainer \\\n+        \"\n+\n+mkdir -p m2/gm2-compiler-boot\n+mkdir -p m2/gm2-libs-boot\n+mkdir -p m2/gm2-ici-boot\n+mkdir -p m2/gm2-libiberty\n+mkdir -p m2/gm2-gcc\n+mkdir -p m2/gm2-compiler\n+mkdir -p m2/gm2-libs\n+mkdir -p m2/gm2-libs-iso\n+mkdir -p m2/gm2-compiler-paranoid\n+mkdir -p m2/gm2-libs-paranoid\n+mkdir -p m2/gm2-compiler-verify\n+mkdir -p m2/boot-bin\n+mkdir -p m2/gm2-libs-pim\n+mkdir -p m2/gm2-libs-coroutines\n+mkdir -p m2/gm2-libs-min\n+mkdir -p m2/pge-boot\n+mkdir -p plugin\n+mkdir -p stage1/m2 stage2/m2 stage3/m2 stage4/m2\n+\n+# directories used by Make-maintainer\n+\n+mkdir -p m2/gm2-auto\n+mkdir -p m2/gm2-pg-boot\n+mkdir -p m2/gm2-pge-boot\n+mkdir -p m2/gm2-ppg-boot\n+mkdir -p m2/mc-boot\n+mkdir -p m2/mc-boot-ch\n+mkdir -p m2/mc-boot-gen"}, {"sha": "fb25ef44c3355797ac5adc1164f18ecc370452c4", "filename": "gcc/m2/config-make.in", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fconfig-make.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fconfig-make.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fconfig-make.in?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754", "patch": "@@ -0,0 +1,6 @@\n+# Target libraries are put under this directory:\n+TARGET_SUBDIR = @target_subdir@\n+# Python3 executable name if it exists\n+PYTHON = @PYTHON@\n+# Does Python3 exist?  (yes/no).\n+HAVE_PYTHON = @HAVE_PYTHON@\n\\ No newline at end of file"}, {"sha": "db1ca3d1f9b26a66024ff0375273387d140a8100", "filename": "gcc/m2/configure", "status": "added", "additions": 4718, "deletions": 0, "changes": 4718, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fconfigure?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754"}, {"sha": "756e01c4321ff40e9dcd5e09e68ecb3a1a05811c", "filename": "gcc/m2/configure.ac", "status": "added", "additions": 38, "deletions": 0, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fconfigure.ac?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754", "patch": "@@ -0,0 +1,38 @@\n+# configure.ac provides gm2spec.c with access to config values.\n+\n+# Copyright (C) 2001-2022 Free Software Foundation, Inc.\n+# Contributed by Gaius Mulley <gaius.mulley@southwales.ac.uk>.\n+\n+# GCC is free software; you can redistribute it and/or modify\n+# it under the terms of the GNU General Public License as published by\n+# the Free Software Foundation; either version 3, or (at your option)\n+# any later version.\n+\n+# GCC is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+# GNU General Public License for more details.\n+\n+# You should have received a copy of the GNU General Public License\n+# along with GCC; see the file COPYING3.  If not see\n+# <http://www.gnu.org/licenses/>.\n+\n+AC_INIT(m2, [ ])\n+\n+# Determine the host, build, and target systems\n+AC_CANONICAL_BUILD\n+AC_CANONICAL_HOST\n+AC_CANONICAL_TARGET\n+\n+AC_CHECK_PROGS(regex_realpath, realpath)\n+if test x$regex_realpath = \"x\" ; then\n+    AC_MSG_ERROR([realpath is required to build GNU Modula-2 (hint install coreutils).])\n+fi\n+\n+AC_CHECK_FUNCS([stpcpy])\n+\n+AC_CHECK_HEADERS(sys/types.h)\n+AC_HEADER_DIRENT\n+AC_CHECK_LIB([c],[opendir],[AC_DEFINE([HAVE_OPENDIR],[1],[found opendir])])\n+AC_CONFIG_HEADERS(gm2config.h, [echo timestamp > stamp-h])\n+AC_OUTPUT"}, {"sha": "7718c35be09c0f3768c9065c2b576621ea0d63e7", "filename": "gcc/m2/gm2-compiler/CLexBuf.def", "status": "added", "additions": 264, "deletions": 0, "changes": 264, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FCLexBuf.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FCLexBuf.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-compiler%2FCLexBuf.def?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754", "patch": "@@ -0,0 +1,264 @@\n+(* CLexBuf.def provides a lexical buffer for clex.\n+\n+Copyright (C) 2003-2022 Free Software Foundation, Inc.\n+Contributed by Gaius Mulley <gaius.mulley@southwales.ac.uk>.\n+\n+This file is part of GNU Modula-2.\n+\n+GNU Modula-2 is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 3, or (at your option)\n+any later version.\n+\n+GNU Modula-2 is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Modula-2; see the file COPYING3.  If not see\n+<http://www.gnu.org/licenses/>.  *)\n+\n+DEFINITION MODULE CLexBuf ;\n+\n+(*\n+    Title      : CLexBuf\n+    Author     : Gaius Mulley\n+    System     : GNU Modula-2\n+    Date       : Thu Jan 23 12:32:36 2003\n+    Revision   : $Version$\n+    Description: provides a lexical buffer for clex.\n+*)\n+\n+FROM SYSTEM IMPORT ADDRESS ;\n+FROM DynamicStrings IMPORT String ;\n+FROM NameKey IMPORT Name ;\n+EXPORT QUALIFIED toktype,\n+                 IsMacroDefined, NoArgs, DefineMacro, UnDefineMacro,\n+                 OpenSource, CloseSource, ReInitialize, GetToken, InsertToken,\n+                 InsertTokenAndRewind, GetLineNo,\n+                 GetTokenNo, TokenToLineNo, FindFileNameFromToken, GetFileName,\n+                 ResetForNewPass,\n+                 currenttoken, currentstring, currentinteger,\n+                 EnableMacroSubstitutions,\n+                 AddTok, AddTokCharStar, AddTokInteger,\n+                 SetFile, PushFile, PopFile, FlushTokens ;\n+\n+TYPE\n+   toktype = (eoftok, startok, arrowtok, structtok, lsbratok, rsbratok,\n+              lcbratok, rcbratok, lparatok, rparatok, semicolontok,\n+              longtok, inttok, chartok, enumtok, typedeftok,\n+              floattok, doubletok, unsignedtok, consttok,\n+              periodperiodperiodtok,\n+              integertok, hexintegertok, octintegertok,\n+              identtok, realtok, conststringtok, constchartok, codetok,\n+              starthashtok, endhashtok, definetok, undeftok, iftok, elsetok,\n+              endiftok, ifdeftok, ifndeftok, includetok,\n+              nottok, commatok,\n+              periodtok,\n+              gretok, lesstok, ortok, andtok, bartok, ambersandtok,\n+              shiftlefttok, shiftrighttok, divtok, modtok,\n+              sizeoftok, definedtok, hattok, equaltok, notequaltok,\n+              greequaltok, lessequaltok, plustok, minustok, tildetok,\n+              externtok, statictok, autotok, registertok,\n+              voidtok, shorttok, signedtok, uniontok, colontok, becomestok,\n+              volatiletok, typetok) ;\n+\n+VAR\n+   currenttoken  : toktype ;\n+   currentstring : ADDRESS ;\n+   currentinteger: INTEGER ;\n+\n+\n+(*\n+   EnableMacroSubstitutions -\n+*)\n+\n+PROCEDURE EnableMacroSubstitutions (b: BOOLEAN) ;\n+\n+\n+(*\n+   IsMacroDefined - returns TRUE if macro, n, was defined.\n+*)\n+\n+PROCEDURE IsMacroDefined (n: Name) : BOOLEAN ;\n+\n+\n+(*\n+   NoArgs - returns the number of arguments for macro, n.\n+            -1 if the macro does not exist\n+*)\n+\n+PROCEDURE NoArgs (n: Name) : INTEGER ;\n+\n+\n+(*\n+   DefineMacro - defines macro, n, as defined to start at token, t.\n+*)\n+\n+PROCEDURE DefineMacro (n: Name; t: CARDINAL) ;\n+\n+\n+(*\n+   UnDefineMacro -\n+*)\n+\n+PROCEDURE UnDefineMacro (n: Name) ;\n+\n+\n+(*\n+   OpenSource - Attempts to open the source file, s.\n+                The success of the operation is returned.\n+*)\n+\n+PROCEDURE OpenSource (s: String) : BOOLEAN ;\n+\n+\n+(*\n+   CloseSource - closes the current open file.\n+*)\n+\n+PROCEDURE CloseSource ;\n+\n+\n+(*\n+   ReInitialize - re-initialize the all the data structures.\n+*)\n+\n+PROCEDURE ReInitialize ;\n+\n+\n+(*\n+   ResetForNewPass - reset the buffer pointers to the beginning ready for\n+                     a new pass\n+*)\n+\n+PROCEDURE ResetForNewPass ;\n+\n+\n+(*\n+   GetToken - gets the next token into currenttoken.\n+*)\n+\n+PROCEDURE GetToken ;\n+\n+\n+(*\n+   InsertToken - inserts a symbol, token, infront of the current token\n+                 ready for the next pass.\n+*)\n+\n+PROCEDURE InsertToken (token: toktype) ;\n+\n+\n+(*\n+   InsertTokenAndRewind - inserts a symbol, token, infront of the current token\n+                          and then moves the token stream back onto the inserted token.\n+*)\n+\n+PROCEDURE InsertTokenAndRewind (token: toktype) ;\n+\n+\n+(*\n+   GetLineNo - returns the current line number where the symbol occurs in\n+               the source file.\n+*)\n+\n+PROCEDURE GetLineNo () : CARDINAL ;\n+\n+\n+(*\n+   GetTokenNo - returns the number of tokens read from\n+                the source file by the lexical analaysis.\n+*)\n+\n+PROCEDURE GetTokenNo () : CARDINAL ;\n+\n+\n+(*\n+   TokenToLineNo - returns the line number of the current file for the\n+                   TokenNo. The depth refers to the include depth.\n+                   A depth of 0 is the current file, depth of 1 is the file\n+                   which included the current file. Zero is returned if the\n+                   depth exceeds the file nesting level.\n+*)\n+\n+PROCEDURE TokenToLineNo (TokenNo: CARDINAL; depth: CARDINAL) : CARDINAL ;\n+\n+\n+(*\n+   FindFileNameFromToken - returns the complete FileName for the appropriate\n+                           source file yields the token number, TokenNo.\n+                           The, Depth, indicates the include level: 0..n\n+                           Level 0 is the current. NIL is returned if n+1\n+                           is requested.\n+*)\n+\n+PROCEDURE FindFileNameFromToken (TokenNo: CARDINAL; depth: CARDINAL) : String ;\n+\n+\n+(*\n+   GetFileName - assigns, a, to the current file name.\n+*)\n+\n+PROCEDURE GetFileName () : String ;\n+\n+\n+(* ***********************************************************************\n+ *\n+ * These functions allow c.lex to deliver tokens into the buffer\n+ *\n+ ************************************************************************* *)\n+\n+(*\n+   AddTok - adds a token to the buffer.\n+*)\n+\n+PROCEDURE AddTok (t: toktype) ;\n+\n+\n+(*\n+   AddTokCharStar - adds a token to the buffer and an additional string, s.\n+                    A copy of string, s, is made.\n+*)\n+\n+PROCEDURE AddTokCharStar (t: toktype; s: ADDRESS) ;\n+\n+\n+(*\n+   AddTokInteger - adds a token and an integer to the buffer.\n+*)\n+\n+PROCEDURE AddTokInteger (t: toktype; i: INTEGER) ;\n+\n+\n+(*\n+   SetFile - sets the current filename to, filename.\n+*)\n+\n+PROCEDURE SetFile (filename: ADDRESS) ;\n+\n+\n+(*\n+   PushFile - indicates that, filename, has just been included.\n+*)\n+\n+PROCEDURE PushFile (filename: ADDRESS) ;\n+\n+\n+(*\n+   PopFile - indicates that we are returning to, filename, having finished\n+             an include.\n+*)\n+\n+PROCEDURE PopFile (filename: ADDRESS) ;\n+\n+\n+(*\n+   FlushTokens - removes the last token.\n+*)\n+\n+PROCEDURE FlushTokens ;\n+\n+\n+END CLexBuf."}, {"sha": "d3a60ed9fe9f309d2c190982f4972258b994d504", "filename": "gcc/m2/gm2-compiler/CLexBuf.mod", "status": "added", "additions": 1029, "deletions": 0, "changes": 1029, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FCLexBuf.mod", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FCLexBuf.mod", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-compiler%2FCLexBuf.mod?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754", "patch": "@@ -0,0 +1,1029 @@\n+(* CLexBuf.mod provides a lexical buffer for clex.\n+\n+Copyright (C) 2003-2022 Free Software Foundation, Inc.\n+Contributed by Gaius Mulley <gaius.mulley@southwales.ac.uk>.\n+\n+This file is part of GNU Modula-2.\n+\n+GNU Modula-2 is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 3, or (at your option)\n+any later version.\n+\n+GNU Modula-2 is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Modula-2; see the file COPYING3.  If not see\n+<http://www.gnu.org/licenses/>.  *)\n+\n+IMPLEMENTATION MODULE CLexBuf ;\n+\n+IMPORT cflex ;\n+\n+FROM SYSTEM IMPORT ADDRESS ;\n+FROM Storage IMPORT ALLOCATE, DEALLOCATE ;\n+FROM DynamicStrings IMPORT string, InitString, InitStringCharStar, Equal, Mark, KillString ;\n+FROM FormatStrings IMPORT Sprintf1 ;\n+FROM NameKey IMPORT Name, NulName, makekey, KeyToCharStar ;\n+FROM M2Printf IMPORT printf0, printf1, printf2, printf3 ;\n+FROM Assertion IMPORT Assert ;\n+FROM SymbolKey IMPORT NulKey, SymbolTree, InitTree, DelSymKey, PutSymKey, GetSymKey ;\n+FROM Indexing IMPORT Index, InitIndex, IsIndiceInIndex, GetIndice, PutIndice ;\n+\n+CONST\n+   MaxBucketSize = 100 ;\n+   Debugging     = FALSE ;\n+\n+TYPE\n+   SourceList = POINTER TO sourcelist ;\n+   sourcelist =            RECORD\n+                              left,\n+                              right: SourceList ;\n+                              name : String ;\n+                              line : CARDINAL ;\n+                           END ;\n+\n+   TokenDesc = RECORD\n+                  token: toktype ;\n+                  str  : Name ;\n+                  int  : INTEGER ;\n+                  line : CARDINAL ;\n+                  file : SourceList ;\n+               END ;\n+\n+   TokenBucket = POINTER TO tokenbucket ;\n+   tokenbucket =            RECORD\n+                               buf : ARRAY [0..MaxBucketSize] OF TokenDesc ;\n+                               len : CARDINAL ;\n+                               next: TokenBucket ;\n+                            END ;\n+\n+   ListDesc = RECORD\n+                 head,\n+                 tail            : TokenBucket ;\n+                 LastBucketOffset: CARDINAL ;\n+              END ;\n+\n+   MacroArgs = POINTER TO macroargs ;\n+   macroargs =            RECORD\n+                             next: MacroArgs ;\n+                             str : Name ;\n+                          END ;\n+\n+   Macro = POINTER TO macro ;\n+   macro =            RECORD\n+                         str   : Name ;\n+                         tokno : CARDINAL ;\n+                         noArgs: CARDINAL ;\n+                         args  : MacroArgs ;\n+                      END ;\n+\n+VAR\n+   CurrentSource    : SourceList ;\n+   UseBufferedTokens,\n+   CurrentUsed      : BOOLEAN ;\n+   ListOfTokens     : ListDesc ;\n+   CurrentTokNo     : CARDINAL ;\n+   MacroDefinitions : SymbolTree ;\n+   MacroIndex       : Index ;\n+   DefineNo         : CARDINAL ;\n+   EnabledMacros    : BOOLEAN ;\n+\n+\n+(* M A C R O *)\n+\n+(*\n+   EnableMacroSubstitutions -\n+*)\n+\n+PROCEDURE EnableMacroSubstitutions (b: BOOLEAN) ;\n+BEGIN\n+   EnabledMacros := b\n+END EnableMacroSubstitutions ;\n+\n+\n+(*\n+   IsMacroDefined - returns TRUE if macro, n, was defined.\n+*)\n+\n+PROCEDURE IsMacroDefined (n: Name) : BOOLEAN ;\n+VAR\n+   i: CARDINAL ;\n+   m: Macro ;\n+BEGIN\n+   i := GetSymKey(MacroDefinitions, n) ;\n+   IF i=0\n+   THEN\n+      RETURN( FALSE )\n+   ELSE\n+      m := GetIndice(MacroIndex, i) ;\n+      IF m=NIL\n+      THEN\n+         RETURN( FALSE )\n+      ELSE\n+         RETURN( TRUE )\n+      END\n+   END\n+END IsMacroDefined ;\n+\n+\n+(*\n+   NoArgs - returns the number of arguments for macro, n.\n+            -1 if the macro does not exist\n+*)\n+\n+PROCEDURE NoArgs (n: Name) : INTEGER ;\n+VAR\n+   m: Macro ;\n+   i: CARDINAL ;\n+BEGIN\n+   IF IsMacroDefined(n)\n+   THEN\n+      i := GetSymKey(MacroDefinitions, n) ;\n+      m := GetIndice(MacroIndex, i) ;\n+      RETURN( m^.noArgs )\n+   ELSE\n+      RETURN( -1 )\n+   END\n+END NoArgs ;\n+\n+\n+(*\n+   DefineMacro - defines macro, n, as defined to start at token, t.\n+*)\n+\n+PROCEDURE DefineMacro (n: Name; t: CARDINAL) ;\n+VAR\n+   m: Macro ;\n+   i: CARDINAL ;\n+BEGIN\n+   NEW(m) ;\n+   WITH m^ DO\n+      str := n ;\n+      tokno := t ;\n+      noArgs := 0 ;\n+      args := NIL\n+   END ;\n+   UnDefineMacro(n) ;\n+   i := GetSymKey(MacroDefinitions, n) ;\n+   IF i=NulKey\n+   THEN\n+      PutSymKey(MacroDefinitions, n, DefineNo) ;\n+      i := DefineNo ;\n+      INC(DefineNo)\n+   END ;\n+   PutIndice(MacroIndex, i, m)\n+END DefineMacro ;\n+\n+\n+(*\n+   UnDefineMacro -\n+*)\n+\n+PROCEDURE UnDefineMacro (n: Name) ;\n+VAR\n+   m: Macro ;\n+   i: CARDINAL ;\n+BEGIN\n+   IF IsMacroDefined(n)\n+   THEN\n+      i := GetSymKey(MacroDefinitions, n) ;\n+      m := GetIndice(MacroIndex, i) ;\n+      PutIndice(MacroIndex, i, NIL) ;\n+      DISPOSE(m)\n+   END\n+END UnDefineMacro ;\n+\n+\n+(*\n+   PushMacroDefinition - pushes the macro definition, n, onto the token stream.\n+                         It returns TRUE if the macro was found and pushed.\n+*)\n+\n+PROCEDURE PushMacroDefinition (n: Name) : BOOLEAN ;\n+VAR\n+   m: Macro ;\n+   t: CARDINAL ;\n+   b: TokenBucket ;\n+   i: CARDINAL ;\n+BEGIN\n+   IF EnabledMacros AND IsMacroDefined(n)\n+   THEN\n+      i := GetSymKey(MacroDefinitions, n) ;\n+      m := GetIndice(MacroIndex, i) ;\n+      WITH m^ DO\n+         IF tokno>0\n+         THEN\n+            t := tokno ;\n+            LOOP\n+               b := FindTokenBucket(t) ;\n+               WITH b^.buf[t] DO\n+                  IF token=endhashtok\n+                  THEN\n+                     RETURN( TRUE )\n+                  ELSE\n+                     IF IsMacroDefined(str) AND (str#n)\n+                     THEN\n+                        IF PushMacroDefinition(str)\n+                        THEN\n+                        END\n+                     ELSE\n+                        AddTokToList(token, str, int, line, file)\n+                     END\n+                  END\n+               END ;\n+               INC(t)\n+            END\n+         END\n+      END ;\n+      RETURN( TRUE )\n+   ELSE\n+      RETURN( FALSE )\n+   END\n+END PushMacroDefinition ;\n+\n+\n+(*   e n d    o f    M A C R O    r o u t i n e s   *)\n+\n+PROCEDURE stop ; BEGIN END stop ;\n+\n+(*\n+   Init - initializes the token list and source list.\n+*)\n+\n+PROCEDURE Init ;\n+BEGIN\n+   currenttoken := eoftok ;\n+   CurrentTokNo := 0 ;\n+   CurrentSource := NIL ;\n+   ListOfTokens.head := NIL ;\n+   ListOfTokens.tail := NIL ;\n+   UseBufferedTokens := FALSE ;\n+   InitTree(MacroDefinitions) ;\n+   EnabledMacros := TRUE ;\n+   DefineNo := 1 ;\n+   MacroIndex := InitIndex(1)\n+END Init ;\n+\n+\n+(*\n+   AddTo - adds a new element to the end of SourceList, CurrentSource.\n+*)\n+\n+PROCEDURE AddTo (l: SourceList) ;\n+BEGIN\n+   l^.right := CurrentSource ;\n+   l^.left  := CurrentSource^.left ;\n+   CurrentSource^.left^.right := l ;\n+   CurrentSource^.left := l ;\n+   l^.left^.line := cflex.GetLineNo()\n+END AddTo ;\n+\n+\n+(*\n+   SubFrom - subtracts, l, from the source list.\n+*)\n+\n+PROCEDURE SubFrom (l: SourceList) ;\n+BEGIN\n+   l^.left^.right := l^.right ;\n+   l^.right^.left := l^.left\n+END SubFrom ;\n+\n+\n+(*\n+   NewElement - returns a new SourceList\n+*)\n+\n+PROCEDURE NewElement (s: ADDRESS) : SourceList ;\n+VAR\n+   l: SourceList ;\n+BEGIN\n+   NEW(l) ;\n+   IF l=NIL\n+   THEN\n+      HALT\n+   ELSE\n+      WITH l^ DO\n+         name  := InitStringCharStar(s) ;\n+         left  := NIL ;\n+         right := NIL\n+      END\n+   END ;\n+   RETURN( l )\n+END NewElement ;\n+\n+\n+(*\n+   NewList - initializes an empty list with the classic dummy header element.\n+*)\n+\n+PROCEDURE NewList () : SourceList ;\n+VAR\n+   l: SourceList ;\n+BEGIN\n+   NEW(l) ;\n+   WITH l^ DO\n+      left  := l ;\n+      right := l ;\n+      name  := NIL\n+   END ;\n+   RETURN( l )\n+END NewList ;\n+\n+\n+(*\n+   CheckIfNeedToDuplicate - checks to see whether the CurrentSource has\n+                            been used, if it has then duplicate the list.\n+*)\n+\n+PROCEDURE CheckIfNeedToDuplicate ;\n+VAR\n+   l, h: SourceList ;\n+BEGIN\n+   IF CurrentUsed\n+   THEN\n+      l := CurrentSource^.right ;\n+      h := CurrentSource ;\n+      CurrentSource := NewList() ;\n+      WHILE l#h DO\n+         AddTo(NewElement(l^.name)) ;\n+         l := l^.right\n+      END\n+   END\n+END CheckIfNeedToDuplicate ;\n+\n+\n+(*\n+   PushFile - indicates that, filename, has just been included.\n+*)\n+\n+PROCEDURE PushFile (filename: ADDRESS) ;\n+VAR\n+   l: SourceList ;\n+BEGIN\n+   CheckIfNeedToDuplicate ;\n+   AddTo(NewElement(filename)) ;\n+   IF Debugging\n+   THEN\n+      IF CurrentSource^.right#CurrentSource\n+      THEN\n+         l := CurrentSource ;\n+         REPEAT\n+            printf2('name = %s, line = %d\\n', l^.name, l^.line) ;\n+            l := l^.right\n+         UNTIL l=CurrentSource\n+      END\n+   END\n+END PushFile ;\n+\n+\n+(*\n+   PopFile - indicates that we are returning to, filename, having finished\n+             an include.\n+*)\n+\n+PROCEDURE PopFile (filename: ADDRESS) ;\n+VAR\n+   l: SourceList ;\n+BEGIN\n+   CheckIfNeedToDuplicate ;\n+   IF (CurrentSource#NIL) AND (CurrentSource^.left#CurrentSource)\n+   THEN\n+      l := CurrentSource^.left ;  (* last element *)\n+      SubFrom(l) ;\n+      DISPOSE(l) ;\n+      IF (CurrentSource^.left#CurrentSource) AND\n+         (NOT Equal(CurrentSource^.name, Mark(InitStringCharStar(filename))))\n+      THEN\n+         (* mismatch in source file names after preprocessing files *)\n+      END\n+   ELSE\n+      (* source file list is empty, cannot pop an include.. *)\n+   END\n+END PopFile ;\n+\n+\n+(*\n+   KillList - kills the SourceList providing that it has not been used.\n+*)\n+\n+PROCEDURE KillList ;\n+VAR\n+   l, k: SourceList ;\n+BEGIN\n+   IF (NOT CurrentUsed) AND (CurrentSource#NIL)\n+   THEN\n+      l := CurrentSource ;\n+      REPEAT\n+         k := l ;\n+         l := l^.right ;\n+         DISPOSE(k)\n+      UNTIL l=CurrentSource\n+   END\n+END KillList ;\n+\n+\n+(*\n+   ReInitialize - re-initialize the all the data structures.\n+*)\n+\n+PROCEDURE ReInitialize ;\n+VAR\n+   s, t: TokenBucket ;\n+BEGIN\n+   IF ListOfTokens.head#NIL\n+   THEN\n+      t := ListOfTokens.head ;\n+      REPEAT\n+         s := t ;\n+         t := t^.next ;\n+         DISPOSE(s) ;\n+      UNTIL t=NIL ;\n+      CurrentUsed := FALSE ;\n+      KillList\n+   END ;\n+   Init\n+END ReInitialize ;\n+\n+\n+(*\n+   SetFile - sets the current filename to, filename.\n+*)\n+\n+PROCEDURE SetFile (filename: ADDRESS) ;\n+BEGIN\n+   KillList ;\n+   CurrentUsed   := FALSE ;\n+   CurrentSource := NewList() ;\n+   AddTo(NewElement(filename))\n+END SetFile ;\n+\n+\n+(*\n+   OpenSource - Attempts to open the source file, s.\n+                The success of the operation is returned.\n+*)\n+\n+PROCEDURE OpenSource (s: String) : BOOLEAN ;\n+BEGIN\n+   IF UseBufferedTokens\n+   THEN\n+      GetToken ;\n+      RETURN( TRUE )\n+   ELSE\n+      IF cflex.OpenSource(string(s))\n+      THEN\n+         SetFile(string(s)) ;\n+         SyncOpenWithBuffer ;\n+         GetToken ;\n+         RETURN( TRUE )\n+      ELSE\n+         RETURN( FALSE )\n+      END\n+   END\n+END OpenSource ;\n+\n+\n+(*\n+   CloseSource - closes the current open file.\n+*)\n+\n+PROCEDURE CloseSource ;\n+BEGIN\n+   IF UseBufferedTokens\n+   THEN\n+      WHILE currenttoken#eoftok DO\n+         GetToken\n+      END\n+   ELSE\n+      (* a subsequent call to cflex.OpenSource will really close the file *)\n+   END\n+END CloseSource ;\n+\n+\n+(*\n+   ResetForNewPass - reset the buffer pointers to the beginning ready for\n+                     a new pass\n+*)\n+\n+PROCEDURE ResetForNewPass ;\n+BEGIN\n+   CurrentTokNo := 0 ;\n+   UseBufferedTokens := TRUE\n+END ResetForNewPass ;\n+\n+\n+(*\n+   DisplayToken -\n+*)\n+\n+PROCEDURE DisplayToken ;\n+VAR\n+   n: Name ;\n+BEGIN\n+   cflex.CError(string(InitString('current token'))) ;\n+   IF currenttoken=identtok\n+   THEN\n+      n := makekey(currentstring) ;\n+      printf1('currenttoken = %a\\n', n)\n+   ELSE\n+      CASE currenttoken OF\n+\n+      eoftok               : printf0('eoftok\\n') |\n+      startok              : printf0('*\\n') |\n+      arrowtok             : printf0('->\\n') |\n+      structtok            : printf0('struct\\n') |\n+      lsbratok             : printf0('[\\n') |\n+      rsbratok             : printf0(']\\n') |\n+      lcbratok             : printf0('{\\n') |\n+      rcbratok             : printf0('}\\n') |\n+      lparatok             : printf0('(\\n') |\n+      rparatok             : printf0(')\\n') |\n+      semicolontok         : printf0(';\\n') |\n+      longtok              : printf0('long\\n') |\n+      inttok               : printf0('int\\n') |\n+      chartok              : printf0('char\\n') |\n+      enumtok              : printf0('enum\\n') |\n+      typedeftok           : printf0('typedef\\n') |\n+      floattok             : printf0('float\\n') |\n+      doubletok            : printf0('double\\n') |\n+      unsignedtok          : printf0('unsigned\\n') |\n+      consttok             : printf0('const\\n') |\n+      periodperiodperiodtok: printf0('...\\n') |\n+      integertok           : printf0('integer number\\n') |\n+      hexintegertok        : printf0('hexadecimal number\\n') |\n+      octintegertok        : printf0('octal number\\n') |\n+      identtok             : printf0('identifier\\n') |\n+      realtok              : printf0('real number\\n') |\n+      conststringtok       : printf0('constant string\\n') |\n+      constchartok         : printf0('constant char\\n') |\n+      codetok              : printf0('some C code\\n') |\n+      starthashtok         : printf0('start#\\n') |\n+      endhashtok           : printf0('end#\\n') |\n+      definetok            : printf0('define\\n') |\n+      definedtok           : stop ; printf0('defined\\n') |\n+      undeftok             : printf0('undef\\n') |\n+      iftok                : printf0('if\\n') |\n+      elsetok              : printf0('else\\n') |\n+      endiftok             : printf0('endif\\n') |\n+      ifdeftok             : printf0('ifdef\\n') |\n+      ifndeftok            : printf0('ifndef\\n') |\n+      nottok               : printf0('not\\n') |\n+      includetok           : printf0('include\\n') |\n+      commatok             : printf0('comma\\n') |\n+      periodtok            : printf0('period\\n') |\n+      gretok               : printf0('gre\\n') |\n+      lesstok              : printf0('less\\n') |\n+      ortok                : printf0('or\\n') |\n+      andtok               : printf0('and\\n') |\n+      bartok               : printf0('bar\\n') |\n+      ambersandtok         : printf0('ambersand\\n') |\n+      shiftlefttok         : printf0('shiftleft\\n') |\n+      shiftrighttok        : printf0('shiftright\\n') |\n+      divtok               : printf0('div\\n') |\n+      modtok               : printf0('mod\\n') |\n+      sizeoftok            : printf0('sizeof\\n') |\n+      hattok               : printf0('hat\\n') |\n+      equaltok             : printf0('equal\\n') |\n+      notequaltok          : printf0('notequal\\n') |\n+      greequaltok          : printf0('greequal\\n') |\n+      lessequaltok         : printf0('lessequal\\n') |\n+      plustok              : printf0('plus\\n') |\n+      minustok             : printf0('minus\\n') |\n+      tildetok             : printf0('tilde\\n') |\n+      externtok            : printf0('extern\\n') |\n+      statictok            : printf0('static\\n') |\n+      autotok              : printf0('auto\\n') |\n+      registertok          : printf0('register\\n') |\n+      voidtok              : printf0('void\\n') |\n+      shorttok             : printf0('short\\n') |\n+      signedtok            : printf0('signed\\n') |\n+      uniontok             : printf0('union\\n') |\n+      colontok             : printf0('colon\\n') |\n+      becomestok           : printf0('becomes\\n') |\n+      volatiletok          : printf0('volatile\\n') |\n+      typetok              : printf0('type\\n')\n+\n+      ELSE\n+         cflex.CError(string(InitString('unrecognised token')))\n+      END\n+   END\n+END DisplayToken ;\n+\n+\n+(*\n+   GetToken - gets the next token into currenttoken.\n+*)\n+\n+PROCEDURE GetToken ;\n+VAR\n+   t: CARDINAL ;\n+   b: TokenBucket ;\n+   l: CARDINAL ;\n+BEGIN\n+   IF UseBufferedTokens\n+   THEN\n+      t := CurrentTokNo ;\n+      b := FindTokenBucket(t) ;\n+      WITH b^.buf[t] DO\n+         currenttoken   := token ;\n+         currentstring  := KeyToCharStar(str) ;\n+         currentinteger := int ;\n+         IF Debugging\n+         THEN\n+            l := line\n+         END\n+      END ;\n+      IF Debugging\n+      THEN\n+         printf3('line %d (# %d  %d) ', l, t, CurrentTokNo) ;\n+         DisplayToken\n+      END ;\n+      INC(CurrentTokNo)\n+   ELSE\n+      IF ListOfTokens.tail=NIL\n+      THEN\n+         cflex.AdvanceToken ;\n+         IF ListOfTokens.tail=NIL\n+         THEN\n+            HALT\n+         END\n+      END ;\n+\n+      IF ListOfTokens.LastBucketOffset>CurrentTokNo\n+      THEN\n+         t := CurrentTokNo ;\n+         b := FindTokenBucket(t) ;\n+         WITH b^.buf[t] DO\n+            currenttoken   := token ;\n+            currentstring  := KeyToCharStar(str) ;\n+            currentinteger := int ;\n+            IF Debugging\n+            THEN\n+               l := line\n+            END\n+         END ;\n+         INC(CurrentTokNo)\n+      ELSE\n+         WITH ListOfTokens.tail^ DO\n+            IF CurrentTokNo-ListOfTokens.LastBucketOffset<len\n+            THEN\n+               WITH buf[CurrentTokNo-ListOfTokens.LastBucketOffset] DO\n+                  currenttoken   := token ;\n+                  currentstring  := KeyToCharStar(str) ;\n+                  currentinteger := int\n+               END ;\n+               IF Debugging\n+               THEN\n+                  (* printf1('# %d ', CurrentTokNo) ; *)\n+                  DisplayToken\n+               END ;\n+               INC(CurrentTokNo)\n+            ELSE\n+               cflex.AdvanceToken ;\n+               GetToken ;\n+               (* printf0('\\n'); cflex.CError(string(InitString('current token'))) ; *)\n+            END\n+         END\n+      END\n+   END\n+END GetToken ;\n+\n+\n+(*\n+   FlushTokens - removes the last token.\n+*)\n+\n+PROCEDURE FlushTokens ;\n+BEGIN\n+   INC(CurrentTokNo)\n+END FlushTokens ;\n+\n+\n+(*\n+   SyncOpenWithBuffer - synchronise the buffer with the start of a file.\n+                        Skips all the tokens to do with the previous file.\n+*)\n+\n+PROCEDURE SyncOpenWithBuffer ;\n+BEGIN\n+   IF ListOfTokens.tail#NIL\n+   THEN\n+      WITH ListOfTokens.tail^ DO\n+         CurrentTokNo := ListOfTokens.LastBucketOffset+len\n+      END\n+   END\n+END SyncOpenWithBuffer ;\n+\n+\n+(*\n+   InsertToken - inserts a symbol, token, infront of the current token\n+                 ready for the next pass.\n+*)\n+\n+PROCEDURE InsertToken (token: toktype) ;\n+BEGIN\n+   IF ListOfTokens.tail#NIL\n+   THEN\n+      WITH ListOfTokens.tail^ DO\n+         IF len>0\n+         THEN\n+            buf[len-1].token := token\n+         END\n+      END ;\n+      AddTokToList(currenttoken, NulName, 0, GetLineNo(), CurrentSource) ;\n+      GetToken\n+   END\n+END InsertToken ;\n+\n+\n+(*\n+   InsertTokenAndRewind - inserts a symbol, token, infront of the current token\n+                          and then moves the token stream back onto the inserted token.\n+*)\n+\n+PROCEDURE InsertTokenAndRewind (token: toktype) ;\n+BEGIN\n+   IF ListOfTokens.tail#NIL\n+   THEN\n+      WITH ListOfTokens.tail^ DO\n+         IF len>0\n+         THEN\n+            buf[len-1].token := token\n+         END\n+      END ;\n+      AddTokToList(currenttoken, NulName, 0, GetLineNo(), CurrentSource) ;\n+      currenttoken := token\n+   END\n+END InsertTokenAndRewind ;\n+\n+\n+(*\n+   GetLineNo - returns the current line number where the symbol occurs in\n+               the source file.\n+*)\n+\n+PROCEDURE GetLineNo () : CARDINAL ;\n+BEGIN\n+   IF CurrentTokNo=0\n+   THEN\n+      RETURN( 0 )\n+   ELSE\n+      RETURN( TokenToLineNo(GetTokenNo(), 0) )\n+   END\n+END GetLineNo ;\n+\n+\n+(*\n+   GetTokenNo - returns the current token number.\n+*)\n+\n+PROCEDURE GetTokenNo () : CARDINAL ;\n+BEGIN\n+   IF CurrentTokNo=0\n+   THEN\n+      RETURN( 0 )\n+   ELSE\n+      RETURN( CurrentTokNo-1 )\n+   END\n+END GetTokenNo ;\n+\n+\n+(*\n+   FindTokenBucket - returns the TokenBucket corresponding to the TokenNo.\n+*)\n+\n+PROCEDURE FindTokenBucket (VAR TokenNo: CARDINAL) : TokenBucket ;\n+VAR\n+   b: TokenBucket ;\n+BEGIN\n+   b := ListOfTokens.head ;\n+   WHILE b#NIL DO\n+      WITH b^ DO\n+         IF TokenNo<len\n+         THEN\n+            RETURN( b )\n+         ELSE\n+            DEC(TokenNo, len)\n+         END\n+      END ;\n+      b := b^.next\n+   END ;\n+   RETURN( NIL )\n+END FindTokenBucket ;\n+\n+\n+(*\n+   TokenToLineNo - returns the line number of the current file for the\n+                   TokenNo. The depth refers to the include depth.\n+                   A depth of 0 is the current file, depth of 1 is the file\n+                   which included the current file. Zero is returned if the\n+                   depth exceeds the file nesting level.\n+*)\n+\n+PROCEDURE TokenToLineNo (TokenNo: CARDINAL; depth: CARDINAL) : CARDINAL ;\n+VAR\n+   b: TokenBucket ;\n+   l: SourceList ;\n+BEGIN\n+   b := FindTokenBucket(TokenNo) ;\n+   IF b=NIL\n+   THEN\n+      RETURN( 0 )\n+   ELSE\n+      IF depth=0\n+      THEN\n+         RETURN( b^.buf[TokenNo].line )\n+      ELSE\n+         l := b^.buf[TokenNo].file^.left ;\n+         WHILE depth>0 DO\n+            l := l^.left ;\n+            IF l=b^.buf[TokenNo].file^.left\n+            THEN\n+               RETURN( 0 )\n+            END ;\n+            DEC(depth)\n+         END ;\n+         RETURN( l^.line )\n+      END\n+   END\n+END TokenToLineNo ;\n+\n+\n+(*\n+   FindFileNameFromToken - returns the complete FileName for the appropriate\n+                           source file yields the token number, TokenNo.\n+                           The, Depth, indicates the include level: 0..n\n+                           Level 0 is the current. NIL is returned if n+1\n+                           is requested.\n+*)\n+\n+PROCEDURE FindFileNameFromToken (TokenNo: CARDINAL; depth: CARDINAL) : String ;\n+VAR\n+   b: TokenBucket ;\n+   l: SourceList ;\n+BEGIN\n+   b := FindTokenBucket(TokenNo) ;\n+   IF b=NIL\n+   THEN\n+      RETURN( NIL )\n+   ELSE\n+      l := b^.buf[TokenNo].file^.left ;\n+      WHILE depth>0 DO\n+         l := l^.left ;\n+         IF l=b^.buf[TokenNo].file^.left\n+         THEN\n+            RETURN( NIL )\n+         END ;\n+         DEC(depth)\n+      END ;\n+      RETURN( l^.name )\n+   END\n+END FindFileNameFromToken ;\n+\n+\n+(*\n+   GetFileName - returns a String defining the current file.\n+*)\n+\n+PROCEDURE GetFileName () : String ;\n+BEGIN\n+   RETURN( FindFileNameFromToken(GetTokenNo(), 0) )\n+END GetFileName ;\n+\n+\n+(*\n+   AddTokToList - adds a token to a dynamic list.\n+*)\n+\n+PROCEDURE AddTokToList (t: toktype; n: Name;\n+                        i: INTEGER; l: CARDINAL; f: SourceList) ;\n+BEGIN\n+   IF ListOfTokens.head=NIL\n+   THEN\n+      NEW(ListOfTokens.head) ;\n+      IF ListOfTokens.head=NIL\n+      THEN\n+         (* list error *)\n+      END ;\n+      ListOfTokens.tail := ListOfTokens.head ;\n+      ListOfTokens.tail^.len := 0\n+   ELSIF ListOfTokens.tail^.len=MaxBucketSize\n+   THEN\n+      Assert(ListOfTokens.tail^.next=NIL) ;\n+      NEW(ListOfTokens.tail^.next) ;\n+      IF ListOfTokens.tail^.next=NIL\n+      THEN\n+         (* list error *)\n+      ELSE\n+         ListOfTokens.tail := ListOfTokens.tail^.next ;\n+         ListOfTokens.tail^.len := 0\n+      END ;\n+      INC(ListOfTokens.LastBucketOffset, MaxBucketSize)\n+   END ;\n+   WITH ListOfTokens.tail^ DO\n+      next := NIL ;\n+      WITH buf[len] DO\n+         token := t ;\n+         str   := n ;\n+         int   := i ;\n+         line  := l ;\n+         file  := f\n+      END ;\n+      INC(len)\n+   END\n+END AddTokToList ;\n+\n+\n+(*\n+   IsLastTokenEof - returns TRUE if the last token was an eoftok\n+*)\n+\n+PROCEDURE IsLastTokenEof () : BOOLEAN ;\n+VAR\n+   b: TokenBucket ;\n+BEGIN\n+   IF ListOfTokens.tail#NIL\n+   THEN\n+      IF ListOfTokens.tail^.len=0\n+      THEN\n+         b := ListOfTokens.head ;\n+         IF b=ListOfTokens.tail\n+         THEN\n+            RETURN( FALSE )\n+         END ;\n+         WHILE b^.next#ListOfTokens.tail DO\n+            b := b^.next\n+         END ;\n+      ELSE\n+         b := ListOfTokens.tail\n+      END ;\n+      WITH b^ DO\n+         RETURN( buf[len-1].token=eoftok )\n+      END\n+   END ;\n+   RETURN( FALSE )\n+END IsLastTokenEof ;\n+\n+\n+(* ***********************************************************************\n+ *\n+ * These functions allow c.flex to deliver tokens into the buffer\n+ *\n+ ************************************************************************* *)\n+\n+(*\n+   AddTok - adds a token to the buffer.\n+*)\n+\n+PROCEDURE AddTok (t: toktype) ;\n+BEGIN\n+   IF NOT ((t=eoftok) AND IsLastTokenEof())\n+   THEN\n+      AddTokToList(t, NulName, 0, cflex.GetLineNo(), CurrentSource) ;\n+      CurrentUsed := TRUE\n+   END\n+END AddTok ;\n+\n+\n+(*\n+   AddTokCharStar - adds a token to the buffer and an additional string, s.\n+                    A copy of string, s, is made.\n+*)\n+\n+PROCEDURE AddTokCharStar (t: toktype; s: ADDRESS) ;\n+BEGIN\n+   IF (t=identtok) AND PushMacroDefinition(makekey(s))\n+   THEN\n+      (* do nothing *)\n+   ELSE\n+      AddTokToList(t, makekey(s), 0, cflex.GetLineNo(), CurrentSource) ;\n+      CurrentUsed := TRUE\n+   END\n+END AddTokCharStar ;\n+\n+\n+(*\n+   AddTokInteger - adds a token and an integer to the buffer.\n+*)\n+\n+PROCEDURE AddTokInteger (t: toktype; i: INTEGER) ;\n+VAR\n+   s: String ;\n+   lineno: CARDINAL ;\n+BEGIN\n+   lineno := cflex.GetLineNo() ;\n+   s := Sprintf1(Mark(InitString('%d')), lineno) ;\n+   AddTokToList(t, makekey(string(s)), i, lineno, CurrentSource) ;\n+   s := KillString(s) ;\n+   CurrentUsed := TRUE\n+END AddTokInteger ;\n+\n+\n+BEGIN\n+   Init\n+END CLexBuf."}, {"sha": "4f6115178b1011d4037f17b5c6dbf17716ec1737", "filename": "gcc/m2/gm2-compiler/FifoQueue.def", "status": "added", "additions": 103, "deletions": 0, "changes": 103, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FFifoQueue.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FFifoQueue.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-compiler%2FFifoQueue.def?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754", "patch": "@@ -0,0 +1,103 @@\n+(* FifoQueue.def provides a simple fifo queue.\n+\n+Copyright (C) 2001-2022 Free Software Foundation, Inc.\n+Contributed by Gaius Mulley <gaius.mulley@southwales.ac.uk>.\n+\n+This file is part of GNU Modula-2.\n+\n+GNU Modula-2 is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 3, or (at your option)\n+any later version.\n+\n+GNU Modula-2 is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Modula-2; see the file COPYING3.  If not see\n+<http://www.gnu.org/licenses/>.  *)\n+\n+DEFINITION MODULE FifoQueue ;\n+\n+(*\n+   Author     : Gaius Mulley\n+   Title      : FifoQueue\n+   Date       : Tue Dec 12 16:23:22 GMT 1989\n+   Description: FifoQueue provides a mechanism to and from which CARDINAL\n+                numbers can be stored and retrieved from a FIFO queue.\n+   Last update: Tue Dec 12 16:24:24 GMT 1989\n+*)\n+\n+EXPORT QUALIFIED PutEnumerationIntoFifoQueue, GetEnumerationFromFifoQueue,\n+                 PutSubrangeIntoFifoQueue, GetSubrangeFromFifoQueue,\n+                 PutConstIntoFifoQueue, GetConstFromFifoQueue,\n+                 PutConstructorIntoFifoQueue, GetConstructorFromFifoQueue ;\n+\n+\n+(*\n+   PutEnumerationIntoFifoQueue - places an enumeration symbol, c,\n+                                 into a fifo queue.\n+*)\n+\n+PROCEDURE PutEnumerationIntoFifoQueue (c: CARDINAL) ;\n+\n+\n+(*\n+   GetEnumerationFromFifoQueue - retrieves an enumeration symbol,\n+                                 c, from a fifo queue.\n+*)\n+\n+PROCEDURE GetEnumerationFromFifoQueue (VAR c: CARDINAL) ;\n+\n+\n+(*\n+   PutSubrangeIntoFifoQueue - places a subrange symbol into a fifo\n+                              queue.\n+*)\n+\n+PROCEDURE PutSubrangeIntoFifoQueue (c: CARDINAL) ;\n+\n+\n+(*\n+   GetSubrangeFromFifoQueue - retrieves a subrange symbol from a\n+                              fifo queue.\n+*)\n+\n+PROCEDURE GetSubrangeFromFifoQueue (VAR c: CARDINAL) ;\n+\n+\n+(*\n+   PutConstIntoFifoQueue - places a constant symbol\n+                           into a fifo queue.\n+*)\n+\n+PROCEDURE PutConstIntoFifoQueue (c: CARDINAL) ;\n+\n+\n+(*\n+   GetConstFromFifoQueue - retrieves a const symbol\n+                           from a fifo queue.\n+*)\n+\n+PROCEDURE GetConstFromFifoQueue (VAR c: CARDINAL) ;\n+\n+\n+(*\n+   PutConstructorIntoFifoQueue - places a constructor symbol\n+                                 into a fifo queue.\n+*)\n+\n+PROCEDURE PutConstructorIntoFifoQueue (c: CARDINAL) ;\n+\n+\n+(*\n+   GetConstructorFromFifoQueue - retrieves a constructor symbol\n+                                 from a fifo queue.\n+*)\n+\n+PROCEDURE GetConstructorFromFifoQueue (VAR c: CARDINAL) ;\n+\n+\n+END FifoQueue."}, {"sha": "31b0c7b2d8d21665b3112480b18a3ca79b832c1e", "filename": "gcc/m2/gm2-compiler/FifoQueue.mod", "status": "added", "additions": 170, "deletions": 0, "changes": 170, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FFifoQueue.mod", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FFifoQueue.mod", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-compiler%2FFifoQueue.mod?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754", "patch": "@@ -0,0 +1,170 @@\n+(* FifoQueue.mod provides a simple fifo queue.\n+\n+Copyright (C) 2001-2022 Free Software Foundation, Inc.\n+Contributed by Gaius Mulley <gaius.mulley@southwales.ac.uk>.\n+\n+This file is part of GNU Modula-2.\n+\n+GNU Modula-2 is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 3, or (at your option)\n+any later version.\n+\n+GNU Modula-2 is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Modula-2; see the file COPYING3.  If not see\n+<http://www.gnu.org/licenses/>.  *)\n+\n+IMPLEMENTATION MODULE FifoQueue ;\n+\n+FROM Lists IMPORT List, InitList, PutItemIntoList, GetItemFromList ;\n+\n+TYPE\n+   Fifo = RECORD\n+             Queue: List ;\n+             Out  : CARDINAL ;\n+          END ;\n+\n+VAR\n+   const,\n+   subrange,\n+   enumeration,\n+   constructor: Fifo ;\n+\n+\n+(*\n+   PutInto - places a CARDINAL number, c, into a fifo queue.\n+*)\n+\n+PROCEDURE PutInto (VAR f: Fifo; c: CARDINAL) ;\n+BEGIN\n+   WITH f DO\n+      PutItemIntoList(Queue, c)\n+   END\n+END PutInto ;\n+\n+\n+(*\n+   GetFrom - retrieves a CARDINAL number, c, from a fifo queue.\n+*)\n+\n+PROCEDURE GetFrom (VAR f: Fifo; VAR c: CARDINAL) ;\n+BEGIN\n+   WITH f DO\n+      INC(Out) ;\n+      c := GetItemFromList(Queue, Out)\n+   END\n+END GetFrom ;\n+\n+\n+(*\n+   PutEnumerationIntoFifoQueue - places an enumeration symbol, c,\n+                                 into a fifo queue.\n+*)\n+\n+PROCEDURE PutEnumerationIntoFifoQueue (c: CARDINAL) ;\n+BEGIN\n+   PutInto(enumeration, c)\n+END PutEnumerationIntoFifoQueue ;\n+\n+\n+(*\n+   GetEnumerationFromFifoQueue - retrieves an enumeration symbol,\n+                                 c, from a fifo queue.\n+*)\n+\n+PROCEDURE GetEnumerationFromFifoQueue (VAR c: CARDINAL) ;\n+BEGIN\n+   GetFrom(enumeration, c)\n+END GetEnumerationFromFifoQueue ;\n+\n+\n+(*\n+   PutSubrangeIntoFifoQueue - places a subrange symbol into a fifo\n+                              queue.\n+*)\n+\n+PROCEDURE PutSubrangeIntoFifoQueue (c: CARDINAL) ;\n+BEGIN\n+   PutInto(subrange, c)\n+END PutSubrangeIntoFifoQueue ;\n+\n+\n+(*\n+   GetSubrangeFromFifoQueue - retrieves a subrange symbol from a\n+                              fifo queue.\n+*)\n+\n+PROCEDURE GetSubrangeFromFifoQueue (VAR c: CARDINAL) ;\n+BEGIN\n+   GetFrom(subrange, c)\n+END GetSubrangeFromFifoQueue ;\n+\n+\n+(*\n+   PutConstructorIntoFifoQueue - places a constructor symbol\n+                                 into a fifo queue.\n+*)\n+\n+PROCEDURE PutConstructorIntoFifoQueue (c: CARDINAL) ;\n+BEGIN\n+   PutInto(constructor, c)\n+END PutConstructorIntoFifoQueue ;\n+\n+\n+(*\n+   GetConstructorFromFifoQueue - retrieves a constructor symbol\n+                                 from a fifo queue.\n+*)\n+\n+PROCEDURE GetConstructorFromFifoQueue (VAR c: CARDINAL) ;\n+BEGIN\n+   GetFrom(constructor, c)\n+END GetConstructorFromFifoQueue ;\n+\n+\n+(*\n+   PutConstIntoFifoQueue - places a constant symbol\n+                           into a fifo queue.\n+*)\n+\n+PROCEDURE PutConstIntoFifoQueue (c: CARDINAL) ;\n+BEGIN\n+   PutInto(const, c)\n+END PutConstIntoFifoQueue ;\n+\n+\n+(*\n+   GetConstFromFifoQueue - retrieves a const symbol\n+                           from a fifo queue.\n+*)\n+\n+PROCEDURE GetConstFromFifoQueue (VAR c: CARDINAL) ;\n+BEGIN\n+   GetFrom(const, c)\n+END GetConstFromFifoQueue ;\n+\n+\n+(*\n+   Init - initialize the fifo queue.\n+*)\n+\n+PROCEDURE Init (VAR f: Fifo) ;\n+BEGIN\n+   WITH f DO\n+      InitList(Queue) ;\n+      Out := 0\n+   END\n+END Init ;\n+\n+\n+BEGIN\n+   Init(const) ;\n+   Init(enumeration) ;\n+   Init(subrange) ;\n+   Init(constructor)\n+END FifoQueue."}, {"sha": "a60221455576d6a7eee92c7699abff771015b55e", "filename": "gcc/m2/gm2-compiler/Lists.def", "status": "added", "additions": 128, "deletions": 0, "changes": 128, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FLists.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FLists.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-compiler%2FLists.def?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754", "patch": "@@ -0,0 +1,128 @@\n+(* Lists.def provides an unordered list manipulation package.\n+\n+Copyright (C) 2001-2022 Free Software Foundation, Inc.\n+Contributed by Gaius Mulley <gaius.mulley@southwales.ac.uk>.\n+\n+This file is part of GNU Modula-2.\n+\n+GNU Modula-2 is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 3, or (at your option)\n+any later version.\n+\n+GNU Modula-2 is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Modula-2; see the file COPYING3.  If not see\n+<http://www.gnu.org/licenses/>.  *)\n+\n+DEFINITION MODULE Lists ;\n+\n+(*\n+   Author     : Gaius Mulley\n+   Title      : Lists\n+   Date       : Tue Dec 12 20:53:36 EST 1989\n+   SYSTEM     : UNIX (GNU Modula-2)\n+   Description: Provides an unordered list manipulation package.\n+   Last update: $Date: 2010/10/03 19:01:05 $\n+   Version    : $Revision: 1.9 $\n+*)\n+\n+FROM SYSTEM IMPORT WORD ;\n+FROM SymbolKey IMPORT PerformOperation ;\n+\n+EXPORT QUALIFIED List,\n+                 InitList, KillList, PutItemIntoList, GetItemFromList,\n+                 GetIndexOfList,\n+                 NoOfItemsInList, IsItemInList, IncludeItemIntoList,\n+                 RemoveItemFromList, ForeachItemInListDo, DuplicateList ;\n+\n+TYPE\n+   List ;\n+\n+\n+(*\n+   InitList - creates a new list, l.\n+*)\n+\n+PROCEDURE InitList (VAR l: List) ;\n+\n+\n+(*\n+   KillList - deletes the complete list, l.\n+*)\n+\n+PROCEDURE KillList (VAR l: List) ;\n+\n+\n+(*\n+   PutItemIntoList - places a CARDINAL, c, into list, l.\n+*)\n+\n+PROCEDURE PutItemIntoList (l: List; c: WORD) ;\n+\n+\n+(*\n+   GetItemFromList - retrieves the nth WORD from list, l.\n+*)\n+\n+PROCEDURE GetItemFromList (l: List; n: CARDINAL) : WORD ;\n+\n+\n+(*\n+   GetIndexOfList - returns the index for WORD, c, in list, l.\n+                    If more than one CARDINAL, c, exists the index\n+                    for the first is returned.\n+*)\n+\n+PROCEDURE GetIndexOfList (l: List; c: WORD) : CARDINAL ;\n+\n+\n+(*\n+   NoOfItemsInList - returns the number of items in list, l.\n+*)\n+\n+PROCEDURE NoOfItemsInList (l: List) : CARDINAL ;\n+\n+\n+(*\n+   IncludeItemIntoList - adds a WORD, c, into a list providing\n+                         the value does not already exist.\n+*)\n+\n+PROCEDURE IncludeItemIntoList (l: List; c: WORD) ;\n+\n+\n+(*\n+   RemoveItemFromList - removes a WORD, c, from a list.\n+                        It assumes that this value only appears once.\n+*)\n+\n+PROCEDURE RemoveItemFromList (l: List; c: WORD) ;\n+\n+\n+(*\n+   IsItemInList - returns true if a WORD, c, was found in list, l.\n+*)\n+\n+PROCEDURE IsItemInList (l: List; c: WORD) : BOOLEAN ;\n+\n+\n+(*\n+   ForeachItemInListDo - calls procedure, P, foreach item in list, l.\n+*)\n+\n+PROCEDURE ForeachItemInListDo (l: List; P: PerformOperation) ;\n+\n+\n+(*\n+   DuplicateList - returns a duplicate list derived from, l.\n+*)\n+\n+PROCEDURE DuplicateList (l: List) : List ;\n+\n+\n+END Lists."}, {"sha": "c9b54b4ac61908026b8d98d1e282051521b5159c", "filename": "gcc/m2/gm2-compiler/Lists.mod", "status": "added", "additions": 341, "deletions": 0, "changes": 341, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FLists.mod", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FLists.mod", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-compiler%2FLists.mod?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754", "patch": "@@ -0,0 +1,341 @@\n+(* Lists.mod provides an unordered list manipulation package.\n+\n+Copyright (C) 2001-2022 Free Software Foundation, Inc.\n+Contributed by Gaius Mulley <gaius.mulley@southwales.ac.uk>.\n+\n+This file is part of GNU Modula-2.\n+\n+GNU Modula-2 is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 3, or (at your option)\n+any later version.\n+\n+GNU Modula-2 is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Modula-2; see the file COPYING3.  If not see\n+<http://www.gnu.org/licenses/>.  *)\n+\n+IMPLEMENTATION MODULE Lists ;\n+\n+\n+FROM Storage IMPORT ALLOCATE, DEALLOCATE ;\n+\n+CONST\n+   MaxNoOfElements = 5 ;\n+\n+TYPE\n+   List = POINTER TO list ;\n+   list = RECORD\n+             NoOfElements: CARDINAL ;\n+             Elements    : ARRAY [1..MaxNoOfElements] OF WORD ;\n+             Next        : List ;\n+          END ;\n+\n+(*\n+   InitList - creates a new list, l.\n+*)\n+\n+PROCEDURE InitList (VAR l: List) ;\n+BEGIN\n+   NEW (l) ;\n+   WITH l^ DO\n+      NoOfElements := 0 ;\n+      Next := NIL\n+   END\n+END InitList ;\n+\n+\n+(*\n+   KillList - deletes the complete list, l.\n+*)\n+\n+PROCEDURE KillList (VAR l: List) ;\n+BEGIN\n+   IF l#NIL\n+   THEN\n+      IF l^.Next#NIL\n+      THEN\n+         KillList(l^.Next)\n+      END ;\n+      DISPOSE(l)\n+   END\n+END KillList ;\n+\n+\n+(*\n+   PutItemIntoList - places a WORD, c, into list, l.\n+*)\n+\n+PROCEDURE PutItemIntoList (l: List; c: WORD) ;\n+BEGIN\n+   WITH l^ DO\n+      IF NoOfElements<MaxNoOfElements\n+      THEN\n+         INC(NoOfElements) ;\n+         Elements[NoOfElements] := c\n+      ELSIF Next#NIL\n+      THEN\n+         PutItemIntoList(Next, c)\n+      ELSE\n+         InitList(Next) ;\n+         PutItemIntoList(Next, c)\n+      END\n+   END\n+END PutItemIntoList ;\n+\n+\n+(*\n+   GetItemFromList - retrieves the nth WORD from list, l.\n+                     (recursive solution).\n+*)\n+(*\n+PROCEDURE GetItemFromList (l: List; n: CARDINAL) : WORD ;\n+BEGIN\n+   IF n>NoOfItemsInList(l)\n+   THEN\n+      RETURN( 0 )\n+   ELSE\n+      WITH l^ DO\n+         IF n<=NoOfElements\n+         THEN\n+            RETURN( Elements[n] )\n+         ELSE\n+            RETURN( GetItemFromList( Next, n-NoOfElements ) )\n+         END\n+      END\n+   END\n+END GetItemFromList ;\n+*)\n+\n+(* iterative solution *)\n+PROCEDURE GetItemFromList (l: List; n: CARDINAL) : WORD ;\n+BEGIN\n+   WHILE l#NIL DO\n+      WITH l^ DO\n+         IF n<=NoOfElements\n+         THEN\n+            RETURN( Elements[n] )\n+         ELSE\n+            DEC(n, NoOfElements)\n+         END\n+      END ;\n+      l := l^.Next\n+   END ;\n+   RETURN( 0 )\n+END GetItemFromList ;\n+\n+\n+(*\n+   GetIndexOfList - returns the index for WORD, c, in list, l.\n+                    If more than one WORD, c, exists the index\n+                    for the first is returned.\n+*)\n+\n+PROCEDURE GetIndexOfList (l: List; c: WORD) : CARDINAL ;\n+VAR\n+   i: CARDINAL ;\n+BEGIN\n+   IF l=NIL\n+   THEN\n+      RETURN( 0 )\n+   ELSE\n+      WITH l^ DO\n+         i := 1 ;\n+         WHILE i<=NoOfElements DO\n+            IF Elements[i]=c\n+            THEN\n+               RETURN( i )\n+            ELSE\n+               INC(i)\n+            END\n+         END ;\n+         RETURN( NoOfElements+GetIndexOfList(Next, c) )\n+      END\n+   END\n+END GetIndexOfList ;\n+\n+\n+(*\n+   NoOfItemsInList - returns the number of items in list, l.\n+*)\n+(*\n+PROCEDURE NoOfItemsInList (l: List) : CARDINAL ;\n+BEGIN\n+   IF l=NIL\n+   THEN\n+      RETURN( 0 )\n+   ELSE\n+      WITH l^ DO\n+         RETURN( NoOfElements+NoOfItemsInList(Next) )\n+      END\n+   END\n+END NoOfItemsInList ;\n+*)\n+\n+\n+(*\n+   NoOfItemsInList - returns the number of items in list, l.\n+                     (iterative algorithm of the above).\n+*)\n+\n+PROCEDURE NoOfItemsInList (l: List) : CARDINAL ;\n+VAR\n+   t: CARDINAL ;\n+BEGIN\n+   IF l=NIL\n+   THEN\n+      RETURN( 0 )\n+   ELSE\n+      t := 0 ;\n+      REPEAT\n+         WITH l^ DO\n+            INC(t, NoOfElements)\n+         END ;\n+         l := l^.Next\n+      UNTIL l=NIL;\n+      RETURN( t )\n+   END\n+END NoOfItemsInList ;\n+\n+\n+(*\n+   IncludeItemIntoList - adds a WORD, c, into a list providing\n+                         the value does not already exist.\n+*)\n+\n+PROCEDURE IncludeItemIntoList (l: List; c: WORD) ;\n+BEGIN\n+   IF NOT IsItemInList(l, c)\n+   THEN\n+      PutItemIntoList(l, c)\n+   END\n+END IncludeItemIntoList ;\n+\n+\n+(*\n+   RemoveItem - remove an element at index, i, from the list data type.\n+*)\n+\n+PROCEDURE RemoveItem (p, l: List; i: CARDINAL) ;\n+BEGIN\n+   WITH l^ DO\n+      DEC(NoOfElements) ;\n+      WHILE i<=NoOfElements DO\n+         Elements[i] := Elements[i+1] ;\n+         INC(i)\n+      END ;\n+      IF (NoOfElements=0) AND (p#NIL)\n+      THEN\n+         p^.Next := l^.Next ;\n+         DISPOSE(l)\n+      END\n+   END\n+END RemoveItem ;\n+\n+\n+(*\n+   RemoveItemFromList - removes a WORD, c, from a list.\n+                        It assumes that this value only appears once.\n+*)\n+\n+PROCEDURE RemoveItemFromList (l: List; c: WORD) ;\n+VAR\n+   p    : List ;\n+   i    : CARDINAL ;\n+   Found: BOOLEAN ;\n+BEGIN\n+   IF l#NIL\n+   THEN\n+      Found := FALSE ;\n+      p := NIL ;\n+      REPEAT\n+         WITH l^ DO\n+            i := 1 ;\n+            WHILE (i<=NoOfElements) AND (Elements[i]#c) DO\n+               INC(i)\n+            END ;\n+         END ;\n+         IF (i<=l^.NoOfElements) AND (l^.Elements[i]=c)\n+         THEN\n+            Found := TRUE\n+         ELSE\n+            p := l ;\n+            l := l^.Next\n+         END\n+      UNTIL (l=NIL) OR Found ;\n+      IF Found\n+      THEN\n+         RemoveItem(p, l, i)\n+      END\n+   END\n+END RemoveItemFromList ;\n+\n+\n+(*\n+   IsItemInList - returns true if a WORD, c, was found in list, l.\n+*)\n+\n+PROCEDURE IsItemInList (l: List; c: WORD) : BOOLEAN ;\n+VAR\n+   i: CARDINAL ;\n+BEGIN\n+   REPEAT\n+      WITH l^ DO\n+         i := 1 ;\n+         WHILE (i<=NoOfElements) DO\n+            IF Elements[i]=c\n+            THEN\n+               RETURN( TRUE )\n+            ELSE\n+               INC(i)\n+            END\n+         END\n+      END ;\n+      l := l^.Next\n+   UNTIL l=NIL ;\n+   RETURN( FALSE )\n+END IsItemInList ;\n+\n+\n+(*\n+   ForeachItemInListDo - calls procedure, P, foreach item in list, l.\n+*)\n+\n+PROCEDURE ForeachItemInListDo (l: List; P: PerformOperation) ;\n+VAR\n+   i, n: CARDINAL ;\n+BEGIN\n+   n := NoOfItemsInList(l) ;\n+   i := 1 ;\n+   WHILE i<=n DO\n+      P(GetItemFromList(l, i)) ;\n+      INC(i)\n+   END\n+END ForeachItemInListDo ;\n+\n+\n+(*\n+   DuplicateList - returns a duplicate list derived from, l.\n+*)\n+\n+PROCEDURE DuplicateList (l: List) : List ;\n+VAR\n+   m   : List ;\n+   n, i: CARDINAL ;\n+BEGIN\n+   InitList(m) ;\n+   n := NoOfItemsInList(l) ;\n+   i := 1 ;\n+   WHILE i<=n DO\n+      PutItemIntoList(m, GetItemFromList(l, i)) ;\n+      INC(i)\n+   END ;\n+   RETURN( m )\n+END DuplicateList ;\n+\n+\n+END Lists."}, {"sha": "c4369e9994f45bef21f8290c1fb6d6ea74aa51fb", "filename": "gcc/m2/gm2-compiler/M2ALU.def", "status": "added", "additions": 989, "deletions": 0, "changes": 989, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FM2ALU.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FM2ALU.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-compiler%2FM2ALU.def?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754", "patch": "@@ -0,0 +1,989 @@\n+(* M2ALU.def gcc implementation of the M2ALU module.\n+\n+Copyright (C) 2001-2022 Free Software Foundation, Inc.\n+Contributed by Gaius Mulley <gaius.mulley@southwales.ac.uk>.\n+\n+This file is part of GNU Modula-2.\n+\n+GNU Modula-2 is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 3, or (at your option)\n+any later version.\n+\n+GNU Modula-2 is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Modula-2; see the file COPYING3.  If not see\n+<http://www.gnu.org/licenses/>.  *)\n+\n+DEFINITION MODULE M2ALU ;\n+\n+(*\n+    Title      : M2ALU.def\n+    Author     : Gaius Mulley\n+    System     : UNIX (gm2)\n+    Date       : Tue Jul 11 09:14:28 2000\n+    Description: Handles all values in the Modula-2 compiler and all\n+                 manipulations of values. All values are mapped onto\n+                 gcc trees.\n+*)\n+\n+FROM NameKey IMPORT Name ;\n+FROM m2tree IMPORT Tree ;\n+FROM M2GCCDeclare IMPORT WalkAction, IsAction ;\n+\n+EXPORT QUALIFIED PtrToValue,\n+                 InitValue,\n+                 IsValueTypeNone,\n+                 IsValueTypeInteger,\n+                 IsValueTypeReal,\n+                 IsValueTypeComplex,\n+                 IsValueTypeSet,\n+                 IsValueTypeConstructor,\n+                 IsValueTypeArray,\n+                 IsValueTypeRecord,\n+                 PopInto, PushFrom,\n+                 PushIntegerTree, PopIntegerTree,\n+                 PushSetTree, PopSetTree,\n+                 PushRealTree, PopRealTree,\n+                 PushComplexTree, PopComplexTree,\n+                 PopConstructorTree,\n+                 PushCard,\n+                 PushInt,\n+                 PushChar,\n+                 PushString,\n+                 PushTypeOfTree,\n+                 CoerseLongRealToCard,\n+                 ConvertRealToInt,\n+                 ConvertToInt,\n+                 ConvertToType,\n+                 GetSetValueType,\n+                 IsSolved, IsValueConst,\n+                 PutConstructorSolved, EvaluateValue, TryEvaluateValue,\n+\n+                 IsNulSet, IsGenericNulSet, PushNulSet, AddBitRange, AddBit, SubBit,\n+      \t       \t SetOr, SetAnd, SetIn,\n+                 SetDifference, SetSymmetricDifference,\n+                 SetNegate, SetShift, SetRotate,\n+\n+                 Addn, Multn, Sub,\n+                 DivFloor, ModFloor, DivTrunc, ModTrunc,\n+                 Equ, NotEqu, Less, Gre, LessEqu, GreEqu,\n+                 GetValue, GetRange,  ConstructSetConstant, BuildRange,\n+                 IsConstructorDependants, WalkConstructorDependants,\n+                 AddField, AddElements,\n+\n+                 PushEmptyConstructor, PushEmptyArray, PushEmptyRecord,\n+                 ChangeToConstructor,\n+\n+                 IsValueAndTreeKnown, CheckOrResetOverflow ;\n+\n+TYPE\n+   PtrToValue ;\n+\n+\n+(*\n+   InitValue - initializes and returns a value container.\n+*)\n+\n+PROCEDURE InitValue () : PtrToValue ;\n+\n+\n+(*\n+   IsValueTypeNone - returns TRUE if the value on the top stack has no value.\n+*)\n+\n+PROCEDURE IsValueTypeNone () : BOOLEAN ;\n+\n+\n+(*\n+   IsValueTypeInteger - returns TRUE if the value on the top stack is an integer.\n+*)\n+\n+PROCEDURE IsValueTypeInteger () : BOOLEAN ;\n+\n+\n+(*\n+   IsValueTypeReal - returns TRUE if the value on the top stack is a real.\n+*)\n+\n+PROCEDURE IsValueTypeReal () : BOOLEAN ;\n+\n+\n+(*\n+   IsValueTypeComplex - returns TRUE if the value on the top stack is a complex.\n+*)\n+\n+PROCEDURE IsValueTypeComplex () : BOOLEAN ;\n+\n+\n+(*\n+   IsValueTypeSet - returns TRUE if the value on the top stack is a set.\n+*)\n+\n+PROCEDURE IsValueTypeSet () : BOOLEAN ;\n+\n+\n+(*\n+   IsValueTypeConstructor - returns TRUE if the value on the top\n+                            stack is a constructor.\n+*)\n+\n+PROCEDURE IsValueTypeConstructor () : BOOLEAN ;\n+\n+\n+(*\n+   IsValueTypeArray - returns TRUE if the value on the top\n+                      stack is an array.\n+*)\n+\n+PROCEDURE IsValueTypeArray () : BOOLEAN ;\n+\n+\n+(*\n+   IsValueTypeRecord - returns TRUE if the value on the top\n+                       stack is a record.\n+*)\n+\n+PROCEDURE IsValueTypeRecord () : BOOLEAN ;\n+\n+\n+(*\n+   GetSetValueType - returns the set type on top of the ALU stack.\n+*)\n+\n+PROCEDURE GetSetValueType () : CARDINAL ;\n+\n+\n+(*\n+   PushIntegerTree - pushes a gcc tree value onto the ALU stack.\n+*)\n+\n+PROCEDURE PushIntegerTree (t: Tree) ;\n+\n+\n+(*\n+   PopIntegerTree - pops a gcc tree value from the ALU stack.\n+*)\n+\n+PROCEDURE PopIntegerTree () : Tree ;\n+\n+\n+(*\n+   PushRealTree - pushes a gcc tree value onto the ALU stack.\n+*)\n+\n+PROCEDURE PushRealTree (t: Tree) ;\n+\n+\n+(*\n+   PopRealTree - pops a gcc tree value from the ALU stack.\n+*)\n+\n+PROCEDURE PopRealTree () : Tree ;\n+\n+\n+(*\n+   PushComplexTree - pushes a gcc tree value onto the ALU stack.\n+*)\n+\n+PROCEDURE PushComplexTree (t: Tree) ;\n+\n+\n+(*\n+   PopComplexTree - pops a gcc tree value from the ALU stack.\n+*)\n+\n+PROCEDURE PopComplexTree () : Tree ;\n+\n+\n+(*\n+   PushSetTree - pushes a gcc tree onto the ALU stack.\n+                 The tree, t, is expected to contain a\n+                 word value. It is converted into a set\n+                 type (sym). Bit 0 maps onto MIN(sym).\n+*)\n+\n+PROCEDURE PushSetTree (tokenno: CARDINAL;\n+                       t: Tree; sym: CARDINAL) ;\n+\n+\n+(*\n+   PopSetTree - pops a gcc tree from the ALU stack.\n+*)\n+\n+PROCEDURE PopSetTree (tokenno: CARDINAL) : Tree ;\n+\n+\n+(*\n+   PopConstructorTree - returns a tree containing the compound literal.\n+*)\n+\n+PROCEDURE PopConstructorTree (tokenno: CARDINAL) : Tree ;\n+\n+\n+(*\n+   PushFrom - pushes a copy of the contents of, v, onto stack.\n+*)\n+\n+PROCEDURE PushFrom (v: PtrToValue) ;\n+\n+\n+(*\n+   PopInto - pops the top element from the stack and places it into, v.\n+*)\n+\n+PROCEDURE PopInto (v: PtrToValue) ;\n+\n+\n+(*\n+   PushCard - pushes a cardinal onto the stack.\n+*)\n+\n+PROCEDURE PushCard (c: CARDINAL) ;\n+\n+\n+(*\n+   PushInt - pushes an integer onto the stack.\n+*)\n+\n+PROCEDURE PushInt (i: INTEGER) ;\n+\n+\n+(*\n+   PushChar - pushes a char onto the stack.\n+*)\n+\n+PROCEDURE PushChar (c: CHAR) ;\n+\n+\n+(*\n+   PushString - pushes the numerical value of the string onto the stack.\n+*)\n+\n+PROCEDURE PushString (tokenno: CARDINAL; s: Name) ;\n+\n+\n+(*\n+   CoerseLongRealToCard - performs a coersion between a REAL to a CARDINAL\n+*)\n+\n+PROCEDURE CoerseLongRealToCard ;\n+\n+\n+(*\n+   ConvertRealToInt - converts a REAL into an INTEGER\n+*)\n+\n+PROCEDURE ConvertRealToInt ;\n+\n+\n+(*\n+   ConvertToInt - converts the value into an INTEGER. This should be used\n+                  if we are computing the number of elements in a char set to\n+                  avoid an overflow.\n+*)\n+\n+PROCEDURE ConvertToInt ;\n+\n+\n+(*\n+   ConvertToType - converts the top of stack to type, t.\n+*)\n+\n+PROCEDURE ConvertToType (t: CARDINAL) ;\n+\n+\n+(*\n+   IsSolved - returns true if the memory cell indicated by v\n+              has a known value.\n+*)\n+\n+PROCEDURE IsSolved (v: PtrToValue) : BOOLEAN ;\n+\n+\n+(*\n+   PutConstructorSolved - records that this constructor is solved.\n+*)\n+\n+PROCEDURE PutConstructorSolved (sym: CARDINAL) ;\n+\n+\n+(*\n+   EvaluateValue - attempts to evaluate the symbol, sym, value.\n+*)\n+\n+PROCEDURE EvaluateValue (sym: CARDINAL) ;\n+\n+\n+(*\n+   TryEvaluateValue - attempts to evaluate the symbol, sym, value.\n+*)\n+\n+PROCEDURE TryEvaluateValue (sym: CARDINAL) ;\n+\n+\n+(*\n+   Add - adds the top two elements on the stack.\n+\n+         The Stack:\n+\n+         Entry             Exit\n+\n+  Ptr ->\n+         +------------+\n+         | Op1        |                   <- Ptr\n+         |------------|    +------------+\n+         | Op2        |    | Op2 + Op1  |\n+         |------------|    |------------|\n+*)\n+\n+PROCEDURE Addn ;\n+\n+\n+(*\n+   Sub - subtracts the top two elements on the stack.\n+\n+         The Stack:\n+\n+         Entry             Exit\n+\n+  Ptr ->\n+         +------------+\n+         | Op1        |                   <- Ptr\n+         |------------|    +------------+\n+         | Op2        |    | Op2 - Op1  |\n+         |------------|    |------------|\n+*)\n+\n+PROCEDURE Sub ;\n+\n+\n+(*\n+   Mult - multiplies the top two elements on the stack.\n+\n+          The Stack:\n+\n+          Entry             Exit\n+\n+   Ptr ->\n+          +------------+\n+          | Op1        |                   <- Ptr\n+          |------------|    +------------+\n+          | Op2        |    | Op2 * Op1  |\n+          |------------|    |------------|\n+*)\n+\n+PROCEDURE Multn ;\n+\n+\n+(*\n+   DivFloor - divides the top two elements on the stack.\n+\n+              The Stack:\n+\n+              Entry             Exit\n+\n+       Ptr ->\n+              +------------+\n+              | Op1        |                     <- Ptr\n+              |------------|    +--------------+\n+              | Op2        |    | Op2 DIV Op1  |\n+              |------------|    |--------------|\n+*)\n+\n+PROCEDURE DivFloor ;\n+\n+\n+(*\n+   ModFloor - modulus of the top two elements on the stack.\n+\n+              The Stack:\n+\n+              Entry             Exit\n+\n+       Ptr ->\n+              +------------+\n+              | Op1        |                     <- Ptr\n+              |------------|    +--------------+\n+              | Op2        |    | Op2 MOD Op1  |\n+              |------------|    |--------------|\n+*)\n+\n+PROCEDURE ModFloor ;\n+\n+\n+(*\n+   DivTrunc - divides the top two elements on the stack.\n+\n+              The Stack:\n+\n+              Entry             Exit\n+\n+       Ptr ->\n+              +------------+\n+              | Op1        |                     <- Ptr\n+              |------------|    +--------------+\n+              | Op2        |    | Op2 DIV Op1  |\n+              |------------|    |--------------|\n+*)\n+\n+PROCEDURE DivTrunc ;\n+\n+\n+(*\n+   ModTrunc - modulus of the top two elements on the stack.\n+\n+              The Stack:\n+\n+              Entry             Exit\n+\n+       Ptr ->\n+              +------------+\n+              | Op1        |                     <- Ptr\n+              |------------|    +--------------+\n+              | Op2        |    | Op2 MOD Op1  |\n+              |------------|    |--------------|\n+*)\n+\n+PROCEDURE ModTrunc ;\n+\n+\n+(*\n+   Equ - returns true if the top two elements on the stack\n+         are identical.\n+\n+         The Stack:\n+\n+         Entry             Exit\n+\n+  Ptr ->\n+         +------------+\n+         | Op1        |\n+         |------------|\n+         | Op2        |\n+         |------------|    Empty\n+\n+         RETURN( Op2 = Op1 )\n+*)\n+\n+PROCEDURE Equ (tokenno: CARDINAL) : BOOLEAN ;\n+\n+\n+(*\n+   NotEqu - returns true if the top two elements on the stack\n+            are not identical.\n+\n+            The Stack:\n+\n+            Entry             Exit\n+\n+     Ptr ->\n+            +------------+\n+            | Op1        |\n+            |------------|\n+            | Op2        |\n+            |------------|    Empty\n+\n+            RETURN( Op2 # Op1 )\n+*)\n+\n+PROCEDURE NotEqu (tokenno: CARDINAL) : BOOLEAN ;\n+\n+\n+(*\n+   Less - returns true if Op2 < Op1.\n+\n+          The Stack:\n+\n+          Entry             Exit\n+\n+   Ptr ->\n+          +------------+\n+          | Op1        |\n+          |------------|\n+          | Op2        |\n+          |------------|    Empty\n+\n+          RETURN( Op2 < Op1 )\n+*)\n+\n+PROCEDURE Less (tokenno: CARDINAL) : BOOLEAN ;\n+\n+\n+(*\n+   Gre - returns true if Op2 > Op1\n+\n+         The Stack:\n+\n+         Entry             Exit\n+\n+  Ptr ->\n+         +------------+\n+         | Op1        |\n+         |------------|\n+         | Op2        |\n+         |------------|    Empty\n+\n+         RETURN( Op2 > Op1 )\n+*)\n+\n+PROCEDURE Gre (tokenno: CARDINAL) : BOOLEAN ;\n+\n+\n+(*\n+   LessEqu - returns true if Op2 <= Op1\n+\n+            The Stack:\n+\n+            Entry             Exit\n+\n+     Ptr ->\n+            +------------+\n+            | Op1        |\n+            |------------|\n+            | Op2        |\n+            |------------|    Empty\n+\n+            RETURN( Op2 <= Op1 )\n+*)\n+\n+PROCEDURE LessEqu (tokenno: CARDINAL) : BOOLEAN ;\n+\n+\n+(*\n+   GreEqu - returns true if Op2 >= Op1\n+            are not identical.\n+\n+            The Stack:\n+\n+            Entry             Exit\n+\n+     Ptr ->\n+            +------------+\n+            | Op1        |\n+            |------------|\n+            | Op2        |\n+            |------------|    Empty\n+\n+            RETURN( Op2 >= Op1 )\n+*)\n+\n+PROCEDURE GreEqu (tokenno: CARDINAL) : BOOLEAN ;\n+\n+\n+(*\n+   IsNulSet - returns TRUE if the top element is the nul set constant, {}.\n+*)\n+\n+PROCEDURE IsNulSet () : BOOLEAN ;\n+\n+\n+(*\n+   IsGenericNulSet - returns TRUE if the top element is the generic nul set constant, {}.\n+*)\n+\n+PROCEDURE IsGenericNulSet () : BOOLEAN ;\n+\n+\n+(*\n+   PushNulSet - pushes an empty set {} onto the ALU stack. The subrange type used\n+                to construct the set is defined by, type. If this is NulSym then\n+                the set is generic and compatible with all sets.\n+\n+                The Stack:\n+\n+                Entry             Exit\n+\n+                                                 <- Ptr\n+                                  +------------+\n+                                  | {}         |\n+                Ptr ->            |------------|\n+\n+*)\n+\n+PROCEDURE PushNulSet (settype: CARDINAL) ;\n+\n+\n+(*\n+   AddBitRange - adds the range op1..op2 to the underlying set.\n+\n+                 Ptr ->\n+                                                           <- Ptr\n+                        +------------+      +------------+\n+                        | Set        |      | Set        |\n+                        |------------|      |------------|\n+*)\n+\n+PROCEDURE AddBitRange (tokenno: CARDINAL; op1, op2: CARDINAL) ;\n+\n+\n+(*\n+   AddBit - adds the bit op1 to the underlying set. INCL(Set, op1)\n+\n+            Ptr ->\n+                                                      <- Ptr\n+                   +------------+      +------------+\n+                   | Set        |      | Set        |\n+                   |------------|      |------------|\n+*)\n+\n+PROCEDURE AddBit (tokenno: CARDINAL; op1: CARDINAL) ;\n+\n+\n+(*\n+   SubBit - removes a bit op1 from the underlying set. EXCL(Set, Op1)\n+\n+            Ptr ->\n+                   +------------+\n+                   | Op1        |                     <- Ptr\n+                   |------------|      +------------+\n+                   | Set        |      | Set        |\n+                   |------------|      |------------|\n+*)\n+\n+PROCEDURE SubBit (tokenno: CARDINAL; op1: CARDINAL) ;\n+\n+\n+(*\n+   SetIn - returns true if the Op1 IN Set\n+\n+           The Stack:\n+\n+           Entry             Exit\n+\n+    Ptr ->\n+           +------------+\n+           | Set        |\n+           |------------|\n+           | Op1        |\n+           |------------|    Empty\n+\n+           RETURN( Op1 IN Set )\n+*)\n+\n+PROCEDURE SetIn (tokenno: CARDINAL; Op1: CARDINAL) : BOOLEAN ;\n+\n+\n+(*\n+   SetOr -  performs an inclusive OR of the top two sets on the stack.\n+\n+            The Stack:\n+\n+            Entry             Exit\n+\n+     Ptr ->\n+            +------------+\n+            | Op1        |                   <- Ptr\n+            |------------|    +------------+\n+            | Op2        |    | Op2 + Op1  |\n+            |------------|    |------------|\n+\n+*)\n+\n+PROCEDURE SetOr (tokenno: CARDINAL) ;\n+\n+\n+(*\n+   SetAnd - performs a set AND the top two sets on the stack.\n+\n+            The Stack:\n+\n+            Entry             Exit\n+\n+     Ptr ->\n+            +------------+\n+            | Op1        |                   <- Ptr\n+            |------------|    +------------+\n+            | Op2        |    | Op2 * Op1  |\n+            |------------|    |------------|\n+*)\n+\n+PROCEDURE SetAnd (tokenno: CARDINAL) ;\n+\n+\n+(*\n+   SetDifference - performs a set difference of the top two elements on the stack.\n+                   For each member in the set\n+                      if member in Op2 and not member in Op1\n+\n+                   The Stack:\n+\n+                   Entry             Exit\n+\n+            Ptr ->\n+                   +------------+\n+                   | Op1        |                   <- Ptr\n+                   |------------|    +-------------------+\n+                   | Op2        |    | Op2 and (not Op1) |\n+                   |------------|    |-------------------|\n+*)\n+\n+PROCEDURE SetDifference (tokenno: CARDINAL) ;\n+\n+\n+(*\n+   SetSymmetricDifference - performs a set difference of the top two sets on the stack.\n+\n+                            The Stack:\n+\n+                            Entry             Exit\n+\n+                     Ptr ->\n+                            +------------+\n+                            | Op1        |                   <- Ptr\n+                            |------------|    +------------+\n+                            | Op2        |    | Op2 - Op1  |\n+                            |------------|    |------------|\n+*)\n+\n+PROCEDURE SetSymmetricDifference (tokenno: CARDINAL) ;\n+\n+\n+(*\n+   SetNegate - negates the top set on the stack.\n+\n+               Ptr ->                                               <- Ptr\n+                      +-----------+                  +------------+\n+                      | Set       |                  | Set        |\n+                      |-----------|                  |------------|\n+*)\n+\n+PROCEDURE SetNegate (tokenno: CARDINAL) ;\n+\n+\n+(*\n+   SetShift - if op1 is positive\n+              then\n+                 result := op2 << op1\n+              else\n+                 result := op2 >> op1\n+              fi\n+\n+\n+              The Stack:\n+\n+                     Entry             Exit\n+\n+              Ptr ->\n+                     +------------+\n+                     | Op1        |                   <- Ptr\n+                     |------------|    +------------+\n+                     | Op2        |    | result     |\n+                     |------------|    |------------|\n+\n+*)\n+\n+PROCEDURE SetShift (tokenno: CARDINAL) ;\n+\n+\n+(*\n+   SetRotate - if op1 is positive\n+               then\n+                  result := ROTATERIGHT(op2, op1)\n+               else\n+                  result := ROTATELEFT(op2, op1)\n+               fi\n+\n+\n+               The Stack:\n+\n+                      Entry             Exit\n+\n+               Ptr ->\n+                      +------------+\n+                      | Op1        |                   <- Ptr\n+                      |------------|    +------------+\n+                      | Op2        |    | result     |\n+                      |------------|    |------------|\n+*)\n+\n+PROCEDURE SetRotate (tokenno: CARDINAL) ;\n+\n+\n+(*\n+   GetValue - returns and pops the value from the top of stack.\n+*)\n+\n+PROCEDURE GetValue (tokenno: CARDINAL) : PtrToValue ;\n+\n+\n+(*\n+   GetRange - returns TRUE if range number, n, exists in the value, v.\n+              A non empty set is defined by having 1..N ranges\n+*)\n+\n+PROCEDURE GetRange (v: PtrToValue; n: CARDINAL; VAR low, high: CARDINAL) : BOOLEAN ;\n+\n+\n+(*\n+   ConstructSetConstant - builds a struct of integers which represents the\n+                          set const, sym.\n+*)\n+\n+PROCEDURE ConstructSetConstant (tokenno: CARDINAL; v: PtrToValue) : Tree ;\n+\n+\n+(*\n+   BuildRange - returns a integer sized constant which represents the\n+                value  {e1..e2}.\n+*)\n+\n+PROCEDURE BuildRange (tokenno: CARDINAL; e1, e2: Tree) : Tree ;\n+\n+\n+(*\n+   IsConstructorDependants - return TRUE if returned if all\n+                             q(dependants) of, sym, return TRUE.\n+*)\n+\n+PROCEDURE IsConstructorDependants (sym: CARDINAL; q: IsAction) : BOOLEAN ;\n+\n+\n+(*\n+   WalkConstructorDependants - walk the constructor, sym, calling\n+                               p for each dependant.\n+*)\n+\n+PROCEDURE WalkConstructorDependants (sym: CARDINAL; p: WalkAction) ;\n+\n+\n+(*\n+   IsValueAndTreeKnown - returns TRUE if the value is known and the gcc tree\n+                         is defined.\n+\n+                         The Stack:\n+\n+                                Entry             Exit\n+\n+                         Ptr ->\n+                                +------------+\n+                                | Op1        |                   <- Ptr\n+                                |------------|    +------------+\n+*)\n+\n+PROCEDURE IsValueAndTreeKnown () : BOOLEAN ;\n+\n+\n+(*\n+   CheckOrResetOverflow - tests to see whether the tree, t, has caused\n+                          an overflow error and if so it generates an\n+                          error message.\n+*)\n+\n+PROCEDURE CheckOrResetOverflow (tokenno: CARDINAL; t: Tree; check: BOOLEAN) ;\n+\n+\n+(*\n+   AddElements - adds the elements, el BY, n, to the array constant.\n+\n+                 Ptr ->\n+                                                           <- Ptr\n+                        +------------+      +------------+\n+                        | Array      |      | Array      |\n+                        |------------|      |------------|\n+\n+*)\n+\n+PROCEDURE AddElements (tokenno: CARDINAL; el, n: CARDINAL) ;\n+\n+\n+(*\n+   AddField - adds the field op1 to the underlying constructor.\n+\n+              Ptr ->\n+                                                        <- Ptr\n+                     +------------+      +------------+\n+                     | const      |      | const      |\n+                     |------------|      |------------|\n+\n+*)\n+\n+PROCEDURE AddField (tokenno: CARDINAL; op1: CARDINAL) ;\n+\n+\n+(*\n+   PushEmptyConstructor - pushes an empty constructor {} onto the ALU stack.\n+                          This is expected to be filled in by subsequent\n+                          calls to AddElements, AddRange or AddField.\n+\n+                          The Stack:\n+\n+                          Entry             Exit\n+\n+                                                       <- Ptr\n+                                        +------------+\n+                                        | {}         |\n+                   Ptr ->               |------------|\n+\n+*)\n+\n+PROCEDURE PushEmptyConstructor (constype: CARDINAL) ;\n+\n+\n+(*\n+   PushEmptyArray - pushes an empty array {} onto the ALU stack.\n+                    This is expected to be filled in by subsequent\n+                    calls to AddElements.\n+\n+                    The Stack:\n+\n+                    Entry             Exit\n+\n+                                                     <- Ptr\n+                                      +------------+\n+                                      | {}         |\n+             Ptr ->                   |------------|\n+\n+*)\n+\n+PROCEDURE PushEmptyArray (arraytype: CARDINAL) ;\n+\n+\n+(*\n+   PushEmptyRecord - pushes an empty record {} onto the ALU stack.\n+                     This is expected to be filled in by subsequent\n+                     calls to AddField.\n+\n+                     The Stack:\n+\n+                     Entry             Exit\n+\n+                                                      <- Ptr\n+                                       +------------+\n+                                       | {}         |\n+              Ptr ->                   |------------|\n+\n+*)\n+\n+PROCEDURE PushEmptyRecord (recordtype: CARDINAL) ;\n+\n+\n+(*\n+   ChangeToConstructor - change the top of stack value to a constructor, type.\n+*)\n+\n+PROCEDURE ChangeToConstructor (tokenno: CARDINAL; constype: CARDINAL) ;\n+\n+\n+(*\n+   IsValueConst - returns true if the memory cell indicated by v\n+                  is only defined by constants.  For example\n+                  no variables are used in the constructor.\n+*)\n+\n+PROCEDURE IsValueConst (v: PtrToValue) : BOOLEAN ;\n+\n+\n+(*\n+   PushTypeOfTree - pushes tree, gcc, to the stack and records the\n+                    front end type.\n+*)\n+\n+PROCEDURE PushTypeOfTree (sym: CARDINAL; gcc: Tree) ;\n+\n+\n+END M2ALU."}, {"sha": "8d33b3477605acb61504bfd7b9eb0859546a2001", "filename": "gcc/m2/gm2-compiler/M2ALU.mod", "status": "added", "additions": 5282, "deletions": 0, "changes": 5282, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FM2ALU.mod", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FM2ALU.mod", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-compiler%2FM2ALU.mod?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754"}, {"sha": "ab93f320de1d352c3073be68a3b74ad77b51483b", "filename": "gcc/m2/gm2-compiler/M2AsmUtil.def", "status": "added", "additions": 55, "deletions": 0, "changes": 55, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FM2AsmUtil.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FM2AsmUtil.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-compiler%2FM2AsmUtil.def?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754", "patch": "@@ -0,0 +1,55 @@\n+(* M2AsmUtil.def provides asm symbol name conversion.\n+\n+Copyright (C) 2001-2022 Free Software Foundation, Inc.\n+Contributed by Gaius Mulley <gaius.mulley@southwales.ac.uk>.\n+\n+This file is part of GNU Modula-2.\n+\n+GNU Modula-2 is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 3, or (at your option)\n+any later version.\n+\n+GNU Modula-2 is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Modula-2; see the file COPYING3.  If not see\n+<http://www.gnu.org/licenses/>.  *)\n+\n+DEFINITION MODULE M2AsmUtil ;\n+\n+(*\n+   Author     : Gaius Mulley\n+   Title      : M2AsmUtil\n+   Date       : Thu Feb  1 15:34:08 GMT 1990\n+   Description: Provides utilities relating symbols in the SymbolTable\n+                to their equivalent representation in ASM format.\n+*)\n+\n+FROM DynamicStrings IMPORT String ;\n+FROM NameKey IMPORT Name ;\n+EXPORT QUALIFIED GetFullSymName, GetFullScopeAsmName ;\n+\n+\n+(*\n+   GetFullSymName - returns the NameKey for the symbol name (which also\n+                    may contain the module name). This is the same as\n+                    GetAsmName except that it does not have the leading _\n+*)\n+\n+PROCEDURE GetFullSymName (sym: CARDINAL) : Name ;\n+\n+\n+(*\n+   GetFullScopeAsmName - returns the fully qualified name for the symbol.\n+                         This will take the format\n+                         [DefImpModule|Module]_{InnerModule}_{Procedure}_SymbolName\n+*)\n+\n+PROCEDURE GetFullScopeAsmName (sym: CARDINAL) : Name ;\n+\n+\n+END M2AsmUtil."}, {"sha": "3440b1d5dbf20bda819ea07d953ea30bcb774f33", "filename": "gcc/m2/gm2-compiler/M2AsmUtil.mod", "status": "added", "additions": 189, "deletions": 0, "changes": 189, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FM2AsmUtil.mod", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FM2AsmUtil.mod", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-compiler%2FM2AsmUtil.mod?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754", "patch": "@@ -0,0 +1,189 @@\n+(* M2AsmUtil.mod provides utilities relating symbols in the SymbolTable.\n+\n+Copyright (C) 2001-2022 Free Software Foundation, Inc.\n+Contributed by Gaius Mulley <gaius.mulley@southwales.ac.uk>.\n+\n+This file is part of GNU Modula-2.\n+\n+GNU Modula-2 is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 3, or (at your option)\n+any later version.\n+\n+GNU Modula-2 is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Modula-2; see the file COPYING3.  If not see\n+<http://www.gnu.org/licenses/>.  *)\n+\n+IMPLEMENTATION MODULE M2AsmUtil ;\n+\n+\n+FROM SFIO IMPORT WriteS ;\n+FROM FIO IMPORT StdOut ;\n+FROM DynamicStrings IMPORT String, string, ConCat, KillString, InitString, Mark, InitStringCharStar, ConCatChar ;\n+FROM StdIO IMPORT Write ;\n+FROM StrIO IMPORT WriteString ;\n+FROM NameKey IMPORT WriteKey, GetKey, MakeKey, makekey, KeyToCharStar ;\n+FROM M2Options IMPORT WholeProgram ;\n+\n+FROM SymbolTable IMPORT NulSym,\n+                        GetSymName,\n+                        GetScope,\n+                        GetBaseModule,\n+                        IsInnerModule,\n+                        IsVar,\n+                        IsProcedure,\n+                        IsModule,\n+                        IsDefImp,\n+                        IsExportQualified,\n+                        IsExported, IsPublic, IsExtern, IsMonoName,\n+                        IsDefinitionForC ;\n+\n+FROM M2Error IMPORT InternalError ;\n+FROM m2configure IMPORT UseUnderscoreForC ;\n+\n+\n+(*\n+   StringToKey - returns a Name, from a string and destroys the string.\n+*)\n+\n+PROCEDURE StringToKey (s: String) : Name ;\n+VAR\n+   k: Name ;\n+BEGIN\n+   k := makekey (string (s)) ;\n+   s := KillString (s) ;\n+   RETURN k\n+END StringToKey ;\n+\n+\n+(*\n+   GetFullScopeAsmName - returns the fully qualified name for the symbol.\n+                         This will take the format\n+                         [DefImpModule|Module]_{InnerModule}_{Procedure}_SymbolName\n+*)\n+\n+PROCEDURE GetFullScopeAsmName (sym: CARDINAL) : Name ;\n+VAR\n+   leader: String ;\n+   scope : CARDINAL ;\n+BEGIN\n+   scope := GetScope (sym) ;\n+   IF UseUnderscoreForC\n+   THEN\n+      leader := InitString ('_')\n+   ELSE\n+      leader := InitString ('')\n+   END ;\n+   IF IsProcedure (sym) AND IsMonoName (sym)\n+   THEN\n+      RETURN StringToKey (ConCat (leader, InitStringCharStar (KeyToCharStar (GetSymName (sym)))))\n+\n+   ELSE\n+      RETURN StringToKey (ConCat (GetFullScopePrefix (leader, scope, sym),\n+                                  InitStringCharStar (KeyToCharStar (GetSymName (sym)))))\n+   END\n+END GetFullScopeAsmName ;\n+\n+\n+(*\n+   GetFullSymName - returns the NameKey for the symbol name (which also\n+                    may contain the module name).\n+*)\n+\n+PROCEDURE GetFullSymName (sym: CARDINAL) : Name ;\n+VAR\n+   module: String ;\n+   scope : CARDINAL ;\n+BEGIN\n+   IF IsProcedure (sym) AND IsMonoName (sym)\n+   THEN\n+      RETURN GetSymName (sym)\n+   ELSE\n+      scope := GetScope (sym) ;\n+      module := GetModulePrefix (InitString (''), sym, scope) ;\n+      RETURN StringToKey (ConCat (module, InitStringCharStar (KeyToCharStar (GetSymName (sym)))))\n+   END\n+END GetFullSymName ;\n+\n+\n+(*\n+   SymNeedsModulePrefix -\n+*)\n+\n+PROCEDURE SymNeedsModulePrefix (sym, mod: CARDINAL) : BOOLEAN ;\n+BEGIN\n+   IF IsDefImp(mod)\n+   THEN\n+      IF WholeProgram\n+      THEN\n+         IF NOT IsDefinitionForC(mod)\n+         THEN\n+            RETURN( TRUE )\n+         END\n+      ELSIF IsExportQualified(sym)\n+      THEN\n+         RETURN( TRUE )\n+      END\n+   ELSIF IsModule(mod)\n+   THEN\n+      RETURN( WholeProgram )\n+   END ;\n+   RETURN( FALSE )\n+END SymNeedsModulePrefix ;\n+\n+\n+(*\n+   GetModulePrefix - returns a String containing the module prefix\n+                     for module, ModSym, providing symbol, Sym, is exported.\n+                     Name is marked if it is appended onto the new string.\n+*)\n+\n+PROCEDURE GetModulePrefix (Name: String; Sym, ModSym: CARDINAL) : String ;\n+BEGIN\n+   IF (ModSym#NulSym) AND (ModSym#GetBaseModule())\n+   THEN\n+      IF IsInnerModule(Sym) OR IsInnerModule(ModSym)\n+      THEN\n+         RETURN( ConCat(ConCatChar(InitStringCharStar(KeyToCharStar(GetSymName(ModSym))), '_'),\n+                        GetModulePrefix(Name, ModSym, GetScope(ModSym))) )\n+      ELSIF SymNeedsModulePrefix(Sym, ModSym)\n+      THEN\n+         RETURN( ConCatChar(ConCat(InitStringCharStar(KeyToCharStar(GetSymName(ModSym))), Mark(Name)), '_') )\n+      END\n+   END ;\n+   RETURN( Name )\n+END GetModulePrefix ;\n+\n+\n+(*\n+   GetFullScopePrefix - returns a String containing the full scope prefix\n+                        for symbol, Sym.  It honours IsExportQualified.\n+                        Name is marked if it is appended onto the new string.\n+*)\n+\n+PROCEDURE GetFullScopePrefix (Name: String; Scope, Sym: CARDINAL) : String ;\n+BEGIN\n+   IF Sym#NulSym\n+   THEN\n+      IF IsInnerModule(Scope)\n+      THEN\n+         RETURN( ConCat(ConCatChar(InitStringCharStar(KeyToCharStar(GetSymName(Scope))), '_'),\n+                        GetFullScopePrefix(Name, GetScope(Scope), Sym)) )\n+      ELSIF IsDefImp(Scope) AND IsExportQualified(Sym)\n+      THEN\n+         RETURN( ConCatChar(ConCat(InitStringCharStar(KeyToCharStar(GetSymName(Scope))), Mark(Name)), '_') )\n+      ELSIF IsProcedure(Scope)\n+      THEN\n+         RETURN( ConCatChar(ConCat(InitStringCharStar(KeyToCharStar(GetSymName(Scope))), Mark(Name)), '_') )\n+      END\n+   END ;\n+   RETURN( Name )\n+END GetFullScopePrefix ;\n+\n+\n+END M2AsmUtil."}, {"sha": "e15fd09a690ce111ff51ed94a53209ed45e92dc8", "filename": "gcc/m2/gm2-compiler/M2Base.def", "status": "added", "additions": 415, "deletions": 0, "changes": 415, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FM2Base.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FM2Base.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-compiler%2FM2Base.def?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754", "patch": "@@ -0,0 +1,415 @@\n+(* M2Base.def provides a mechanism to check fundamental types.\n+\n+Copyright (C) 2001-2022 Free Software Foundation, Inc.\n+Contributed by Gaius Mulley <gaius.mulley@southwales.ac.uk>.\n+\n+This file is part of GNU Modula-2.\n+\n+GNU Modula-2 is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 3, or (at your option)\n+any later version.\n+\n+GNU Modula-2 is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Modula-2; see the file COPYING3.  If not see\n+<http://www.gnu.org/licenses/>.  *)\n+\n+DEFINITION MODULE M2Base ;\n+\n+(*\n+   Author     : Gaius Mulley\n+   Title      : M2Base\n+   Date       : 22/5/87\n+   Description: Implements the default Base Types and Base\n+                procedures in the Modula-2 compiler.\n+*)\n+\n+FROM NameKey IMPORT Name ;\n+FROM m2linemap IMPORT location_t ;\n+\n+EXPORT QUALIFIED Nil,                   (* Base constants          *)\n+                 Cardinal,              (* Base types              *)\n+                 Integer,\n+                 Boolean,\n+                 True, False,\n+                 Char,\n+                 Proc,\n+                 LongInt, LongCard,\n+                 ShortInt, ShortCard,\n+                 ZType, RType, CType,\n+                 Real,\n+                 LongReal, ShortReal,\n+                 Complex,\n+                 LongComplex,\n+                 ShortComplex,\n+                 High, IsOrd,           (* Base functions          *)\n+                 LengthS,\n+                 Convert,\n+                 Re, Im, Cmplx,\n+                 Cap, Abs, Odd,\n+                 Chr, Val,\n+                 IsTrunc, IsFloat,\n+                 IsInt,\n+                 Min, Max,\n+                 New, Dispose,          (* Base procedures         *)\n+                 Inc, Dec,\n+                 Incl, Excl,\n+                 IsPseudoBaseFunction,  (* Manipulation procedures *)\n+                 IsPseudoBaseProcedure, (* Manipulation procedures *)\n+                 IsBaseType,\n+                 GetBaseTypeMinMax,\n+                 InitBase,\n+                 CannotCheckTypeInPass3,\n+                 CheckExpressionCompatible,\n+                 CheckAssignmentCompatible,\n+                 CheckParameterCompatible,\n+                 IsAssignmentCompatible,\n+                 IsExpressionCompatible,\n+                 IsParameterCompatible,\n+                 IsComparisonCompatible,\n+                 IsValidParameter,\n+                 AssignmentRequiresWarning,\n+                 IsMathType,\n+                 IsRealType,\n+                 IsOrdinalType,\n+                 IsComplexType,\n+                 GetCmplxReturnType,\n+                 ComplexToScalar,\n+                 ScalarToComplex,\n+                 MixTypes, NegateType,\n+                 TemplateProcedure,\n+                 ActivationPointer,\n+                 IsNeededAtRunTime,\n+                 ExceptionAssign,\n+                 ExceptionReturn,\n+                 ExceptionInc,\n+                 ExceptionDec,\n+                 ExceptionIncl,\n+                 ExceptionExcl,\n+                 ExceptionShift,\n+                 ExceptionRotate,\n+                 ExceptionStaticArray,\n+                 ExceptionDynamicArray,\n+                 ExceptionForLoopBegin,\n+                 ExceptionForLoopTo,\n+                 ExceptionForLoopEnd,\n+                 ExceptionPointerNil,\n+                 ExceptionNoReturn,\n+                 ExceptionCase,\n+                 ExceptionNonPosDiv,\n+                 ExceptionNonPosMod,\n+                 ExceptionZeroDiv,\n+                 ExceptionZeroRem,\n+                 ExceptionWholeValue,\n+                 ExceptionRealValue,\n+                 ExceptionParameterBounds,\n+                 ExceptionNo ;\n+\n+\n+VAR\n+   TemplateProcedure,\n+   ActivationPointer,\n+\n+   Nil,\n+   Cardinal, Integer,\n+   Boolean, True, False,\n+   Char, Proc,\n+   LongInt, LongCard,\n+   ShortInt, ShortCard,\n+   ZType, RType, CType,\n+   Real,\n+   LongReal, ShortReal,\n+   Complex, LongComplex,\n+   ShortComplex,\n+   Unbounded,\n+   High, LengthS,\n+   Cap, Abs, Odd,\n+   Convert, Val,\n+   Chr,\n+   Re, Im, Cmplx,\n+   Min, Max,\n+   New, Dispose,\n+   Inc, Dec,\n+   Incl, Excl,\n+   ExceptionAssign,\n+   ExceptionReturn,\n+   ExceptionInc,\n+   ExceptionDec,\n+   ExceptionIncl,\n+   ExceptionExcl,\n+   ExceptionShift,\n+   ExceptionRotate,\n+   ExceptionStaticArray,\n+   ExceptionDynamicArray,\n+   ExceptionForLoopBegin,\n+   ExceptionForLoopTo,\n+   ExceptionForLoopEnd,\n+   ExceptionPointerNil,\n+   ExceptionNoReturn,\n+   ExceptionCase,\n+   ExceptionNonPosDiv,\n+   ExceptionNonPosMod,\n+   ExceptionZeroDiv,\n+   ExceptionZeroRem,\n+   ExceptionWholeValue,\n+   ExceptionRealValue,\n+   ExceptionParameterBounds,\n+   ExceptionNo             : CARDINAL ;\n+\n+\n+(*\n+   InitBase - initializes the base types and functions\n+              used in the Modula-2 compiler.\n+*)\n+\n+PROCEDURE InitBase (location: location_t; VAR sym: CARDINAL) ;\n+\n+\n+(*\n+   GetBaseTypeMinMax - returns the minimum and maximum values for a\n+                       given base type.  This procedure should only\n+                       be called if the type is NOT a subrange.\n+*)\n+\n+PROCEDURE GetBaseTypeMinMax (type: CARDINAL; VAR min, max: CARDINAL) ;\n+\n+\n+(*\n+   IsPseudoBaseFunction - returns true if Sym is a Base function.\n+*)\n+\n+PROCEDURE IsPseudoBaseFunction (Sym: CARDINAL) : BOOLEAN ;\n+\n+\n+(*\n+   IsPseudoBaseProcedure - returns true if Sym is a Base procedure.\n+*)\n+\n+PROCEDURE IsPseudoBaseProcedure (Sym: CARDINAL) : BOOLEAN ;\n+\n+\n+(*\n+   IsNeededAtRunTime - returns TRUE if procedure, sym, is a\n+                       runtime procedure. Ie a procedure which is\n+                       not a pseudo procedure and which is implemented\n+                       in M2RTS or SYSTEM and also exported.\n+*)\n+\n+PROCEDURE IsNeededAtRunTime (tok: CARDINAL; sym: CARDINAL) : BOOLEAN ;\n+\n+\n+(*\n+   IsBaseType - returns TRUE if Sym is a Base type.\n+*)\n+\n+PROCEDURE IsBaseType (Sym: CARDINAL) : BOOLEAN ;\n+\n+\n+(*\n+   IsOrdinalType - returns TRUE if, sym, is an ordinal type.\n+                   An ordinal type is defined as:\n+                   a base type which contains whole numbers or\n+                   a subrange type or an enumeration type.\n+*)\n+\n+PROCEDURE IsOrdinalType (Sym: CARDINAL) : BOOLEAN ;\n+\n+\n+(*\n+   IsOrd - returns TRUE if, sym, is ORD or its typed counterparts\n+           ORDL, ORDS.\n+*)\n+\n+PROCEDURE IsOrd (sym: CARDINAL) : BOOLEAN ;\n+\n+\n+(*\n+   IsTrunc - returns TRUE if, sym, is TRUNC or its typed counterparts\n+             TRUNCL, TRUNCS.\n+*)\n+\n+PROCEDURE IsTrunc (sym: CARDINAL) : BOOLEAN ;\n+\n+\n+(*\n+   IsFloat - returns TRUE if, sym, is FLOAT or its typed counterparts\n+             FLOATL, FLOATS.\n+*)\n+\n+PROCEDURE IsFloat (sym: CARDINAL) : BOOLEAN ;\n+\n+\n+(*\n+   IsInt - returns TRUE if, sym, is INT or its typed counterparts\n+           INTL, INTS.\n+*)\n+\n+PROCEDURE IsInt (sym: CARDINAL) : BOOLEAN ;\n+\n+\n+(*\n+   AssignmentRequiresWarning - returns TRUE if t1 and t2 can be used during\n+                               an assignment, but should generate a warning.\n+                               For example in PIM we can assign ADDRESS\n+                               and WORD providing they are both the\n+                               same size.\n+*)\n+\n+PROCEDURE AssignmentRequiresWarning (t1, t2: CARDINAL) : BOOLEAN ;\n+\n+\n+(*\n+   IsAssignmentCompatible - returns TRUE if t1 and t2 are assignment\n+                            compatible.\n+*)\n+\n+PROCEDURE IsAssignmentCompatible (t1, t2: CARDINAL) : BOOLEAN ;\n+\n+\n+(*\n+   IsExpressionCompatible - returns TRUE if t1 and t2 are expression\n+                            compatible.\n+*)\n+\n+PROCEDURE IsExpressionCompatible (t1, t2: CARDINAL) : BOOLEAN ;\n+\n+\n+(*\n+   IsParameterCompatible - returns TRUE if types t1 and t2 are parameter\n+                           compatible.\n+*)\n+\n+PROCEDURE IsParameterCompatible (t1, t2: CARDINAL) : BOOLEAN ;\n+\n+\n+(*\n+   IsComparisonCompatible - returns TRUE if t1 and t2 are comparison\n+                            compatible.  PIM allows INTEGER and ADDRESS within\n+                            expressions but we warn against their comparison.\n+*)\n+\n+PROCEDURE IsComparisonCompatible (t1, t2: CARDINAL) : BOOLEAN ;\n+\n+\n+(*\n+   IsValidParameter - returns TRUE if an, actual, parameter can be passed\n+                      to the, formal, parameter.   This differs from\n+                      IsParameterCompatible as this procedure includes checks\n+                      for unbounded formal parameters, var parameters and\n+                      constant actual parameters.\n+*)\n+\n+PROCEDURE IsValidParameter (formal, actual: CARDINAL) : BOOLEAN ;\n+\n+\n+(*\n+   CheckExpressionCompatible - returns if t1 and t2 are compatible types for\n+                               +, -, *, DIV, >, <, =, etc.\n+                               If t1 and t2 are not compatible then an error\n+                               message is displayed.\n+*)\n+\n+PROCEDURE CheckExpressionCompatible (tok: CARDINAL;\n+                                     left, right: CARDINAL) ;\n+\n+\n+(*\n+   CheckAssignmentCompatible - returns if t1 and t2 are compatible types for\n+                               :=, =, #.\n+                               If t1 and t2 are not compatible then an error\n+                               message is displayed.\n+*)\n+\n+PROCEDURE CheckAssignmentCompatible (tok: CARDINAL;\n+                                     left, right: CARDINAL) ;\n+\n+\n+(*\n+   CheckParameterCompatible - checks to see if types, t1, and, t2, are\n+                              compatible for parameter passing.\n+*)\n+\n+PROCEDURE CheckParameterCompatible (tok: CARDINAL;\n+                                    t1, t2: CARDINAL) ;\n+\n+\n+(*\n+   CannotCheckTypeInPass3 - returns TRUE if we are unable to check the\n+                            type of, e, in pass 3.\n+*)\n+\n+PROCEDURE CannotCheckTypeInPass3 (e: CARDINAL) : BOOLEAN ;\n+\n+\n+(*\n+   MixTypes - returns the type symbol that corresponds to the types t1 and t2.\n+              NearTok is used to identify the source position if a type\n+              incompatability occurs.\n+*)\n+\n+PROCEDURE MixTypes (t1, t2: CARDINAL; NearTok: CARDINAL) : CARDINAL ;\n+\n+\n+(*\n+   NegateType - if the type is unsigned then returns the\n+                signed equivalent.\n+*)\n+\n+PROCEDURE NegateType (type: CARDINAL (* ; sympos: CARDINAL *) ) : CARDINAL ;\n+\n+\n+(*\n+   IsMathType - returns TRUE if the type is a mathematical type.\n+                A mathematical type has a range larger than INTEGER.\n+                (Typically REAL/LONGREAL/LONGINT)\n+*)\n+\n+PROCEDURE IsMathType (type: CARDINAL) : BOOLEAN ;\n+\n+\n+(*\n+   IsRealType - returns TRUE if, t, is a real type.\n+*)\n+\n+PROCEDURE IsRealType (t: CARDINAL) : BOOLEAN ;\n+\n+\n+(*\n+   IsComplexType - returns TRUE if, sym, is COMPLEX,\n+                   LONGCOMPLEX or SHORTCOMPLEX.\n+*)\n+\n+PROCEDURE IsComplexType (sym: CARDINAL) : BOOLEAN ;\n+\n+\n+(*\n+   ComplexToScalar - returns the scalar (or base type) of the complex type, sym.\n+*)\n+\n+PROCEDURE ComplexToScalar (sym: CARDINAL) : CARDINAL ;\n+\n+\n+(*\n+   ScalarToComplex - given a real type, t, return the equivalent complex type.\n+*)\n+\n+PROCEDURE ScalarToComplex (sym: CARDINAL) : CARDINAL ;\n+\n+\n+(*\n+   GetCmplxReturnType - this code implements the table given in the\n+                        ISO standard Page 293 with an addition for\n+                        SHORTCOMPLEX and the fixed sized COMPLEX\n+                        types found in the GNU Modula-2 SYSTEM\n+                        Module.\n+*)\n+\n+PROCEDURE GetCmplxReturnType (t1, t2: CARDINAL) : CARDINAL ;\n+\n+\n+END M2Base."}, {"sha": "d5a0ccf8ad84cf77ee889bfb8647a1af876ee0ae", "filename": "gcc/m2/gm2-compiler/M2Base.mod", "status": "added", "additions": 2761, "deletions": 0, "changes": 2761, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FM2Base.mod", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FM2Base.mod", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-compiler%2FM2Base.mod?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754", "patch": "@@ -0,0 +1,2761 @@\n+(* M2Base.mod provides a mechanism to check fundamental types.\n+\n+Copyright (C) 2001-2022 Free Software Foundation, Inc.\n+Contributed by Gaius Mulley <gaius.mulley@southwales.ac.uk>.\n+\n+This file is part of GNU Modula-2.\n+\n+GNU Modula-2 is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 3, or (at your option)\n+any later version.\n+\n+GNU Modula-2 is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Modula-2; see the file COPYING3.  If not see\n+<http://www.gnu.org/licenses/>.  *)\n+\n+IMPLEMENTATION MODULE M2Base ;\n+\n+(*\n+    Title      : M2Base\n+    Author     : Gaius Mulley\n+    System     : UNIX (gm2)\n+    Date       : Mon Jul 10 20:16:54 2000\n+    Description: gcc version of M2Base. This module initializes the front end\n+                 symbol table with the base types. We collect the size of the\n+                 base types and range of values from the gcc backend.\n+*)\n+\n+FROM DynamicStrings IMPORT InitString, String, Mark, InitStringCharStar, ConCat ;\n+FROM M2LexBuf IMPORT BuiltinTokenNo, GetTokenNo ;\n+FROM NameKey IMPORT MakeKey, WriteKey, KeyToCharStar ;\n+FROM M2Debug IMPORT Assert ;\n+FROM SYSTEM IMPORT WORD ;\n+\n+FROM M2Error IMPORT InternalError, FlushErrors ;\n+FROM M2Pass IMPORT IsPassCodeGeneration ;\n+FROM FormatStrings IMPORT Sprintf2 ;\n+FROM StrLib IMPORT StrLen ;\n+\n+FROM M2MetaError IMPORT MetaError0, MetaError1, MetaError2, MetaErrors3,\n+                        MetaErrorT1, MetaErrorT2,\n+                        MetaErrorStringT2, MetaErrorStringT1 ;\n+\n+FROM SymbolTable IMPORT ModeOfAddr,\n+                        MakeModule, MakeType, PutType,\n+                        MakeEnumeration, PutFieldEnumeration,\n+                        MakeProcType,\n+                        MakeProcedure, PutFunction,\n+                        MakeRecord, PutFieldRecord,\n+                        MakeConstVar, PutConst,\n+                        MakeTemporary,\n+                        MakeVar, PutVar,\n+                        MakeSubrange, PutSubrange, IsSubrange,\n+                        PutModuleBuiltin,\n+                        IsEnumeration, IsSet, IsPointer, IsType, IsUnknown,\n+                        IsHiddenType, IsProcType,\n+                        GetType, GetLowestType, GetDeclaredMod, SkipType,\n+                        SetCurrentModule,\n+                        StartScope, EndScope, PseudoScope,\n+                        ForeachFieldEnumerationDo,\n+                        RequestSym, GetSymName, NulSym,\n+                        PutImported, GetExported,\n+                        PopSize, PopValue, PushValue,\n+                        FromModuleGetSym, GetSym,\n+                        IsExportQualified, IsExportUnQualified,\n+                        IsParameter, IsParameterVar, IsUnbounded,\n+                        IsConst, IsUnboundedParam,\n+                        IsParameterUnbounded,  GetSubrange,\n+                        IsArray, IsProcedure, IsConstString,\n+                        IsVarient, IsRecordField, IsFieldVarient,\n+                        GetArraySubscript, IsRecord, NoOfParam,\n+                        GetNthParam, IsVarParam, GetNth, GetDimension ;\n+\n+FROM M2ALU IMPORT PushIntegerTree, PushRealTree, PushCard, Equ, Gre, Less ;\n+FROM M2Batch IMPORT MakeDefinitionSource ;\n+FROM M2Bitset IMPORT Bitset, GetBitsetMinMax, MakeBitset ;\n+FROM M2Size IMPORT Size, MakeSize ;\n+\n+FROM M2System IMPORT Address, Byte, Word, System, Loc, InitSystem,\n+                     IntegerN, CardinalN, WordN, SetN, RealN, ComplexN,\n+                     IsCardinalN, IsIntegerN, IsRealN, IsComplexN,\n+                     IsGenericSystemType, IsSameSizePervasiveType ;\n+\n+FROM M2Options IMPORT NilChecking,\n+                      WholeDivChecking, WholeValueChecking,\n+                      IndexChecking, RangeChecking,\n+                      ReturnChecking, CaseElseChecking, Exceptions,\n+\t\t      WholeValueChecking,\n+                      DebugBuiltins,\n+                      Iso, Pim, Pim2, Pim3 ;\n+\n+FROM m2type IMPORT GetIntegerType,\n+                   GetM2IntegerType, GetM2CharType,\n+                   GetMaxFrom, GetMinFrom, GetRealType,\n+                   GetM2LongIntType, GetLongRealType, GetProcType,\n+                   GetM2ShortRealType, GetM2RealType,\n+                   GetM2LongRealType, GetM2LongCardType,\n+                   GetM2ShortIntType, GetM2ShortCardType,\n+                   GetM2CardinalType, GetPointerType, GetWordType,\n+                   GetByteType, GetISOWordType, GetISOByteType,\n+                   GetISOLocType,\n+                   GetM2ComplexType, GetM2LongComplexType,\n+                   GetM2ShortComplexType,\n+\t\t   GetM2Complex32, GetM2Complex64,\n+\t\t   GetM2Complex96, GetM2Complex128,\n+                   GetM2RType, GetM2ZType, GetM2CType,\n+                   InitBaseTypes ;\n+\n+FROM m2expr IMPORT GetSizeOf ;\n+FROM m2linemap IMPORT location_t, BuiltinsLocation ;\n+FROM m2decl IMPORT BuildIntegerConstant ;\n+\n+\n+TYPE\n+   Compatability = (expression, assignment, parameter, comparison) ;\n+   MetaType      = (const, word, byte, address, chr,\n+                    normint, shortint, longint,\n+                    normcard, shortcard, longcard,\n+                    pointer, enum,\n+                    real, shortreal, longreal,\n+                    set, opaque, loc, rtype, ztype,\n+                    int8, int16, int32, int64,\n+                    card8, card16, card32, card64,\n+                    word16, word32, word64,\n+                    real32, real64, real96, real128,\n+                    set8, set16, set32,\n+                    complex, shortcomplex, longcomplex,\n+                    complex32, complex64, complex96, complex128,\n+                    ctype, rec, array,\n+                    procedure, unknown) ;\n+   Compatible    = (uninitialized, no, warnfirst, warnsecond,\n+                    first, second) ;\n+\n+\n+TYPE\n+   CompatibilityArray = ARRAY MetaType, MetaType OF Compatible ;\n+\n+VAR\n+   Comp,\n+   Expr,\n+   Ass        : CompatibilityArray ;\n+   Ord,\n+   OrdS, OrdL,\n+   Float,\n+   FloatS, SFloat,\n+   FloatL, LFloat,\n+   Trunc,\n+   TruncS,\n+   TruncL,\n+   Int, IntS, IntL,\n+   m2rts,\n+   MinReal,\n+   MaxReal,\n+   MinShortReal,\n+   MaxShortReal,\n+   MinLongReal,\n+   MaxLongReal,\n+   MinLongInt,\n+   MaxLongInt,\n+   MinLongCard,\n+   MaxLongCard,\n+   MinShortInt,\n+   MaxShortInt,\n+   MinShortCard,\n+   MaxShortCard,\n+   MinChar,\n+   MaxChar,\n+   MinCardinal,\n+   MaxCardinal,\n+   MinInteger,\n+   MaxInteger,\n+   MaxEnum,\n+   MinEnum    : CARDINAL ;\n+\n+\n+(*\n+   InitBuiltins -\n+*)\n+\n+PROCEDURE InitBuiltins ;\n+VAR\n+   builtins: CARDINAL ;\n+BEGIN\n+   IF DebugBuiltins\n+   THEN\n+      (* We will need to parse this module as functions alloca/memcpy will be used.  *)\n+      builtins := MakeDefinitionSource (BuiltinTokenNo, MakeKey ('Builtins')) ;\n+      IF builtins = NulSym\n+      THEN\n+         MetaError0 ('unable to find core module Builtins')\n+      END\n+   END\n+END InitBuiltins ;\n+\n+\n+(*\n+   InitBase - initializes the base types and procedures\n+              used in the Modula-2 compiler.\n+*)\n+\n+PROCEDURE InitBase (location: location_t; VAR sym: CARDINAL) ;\n+BEGIN\n+   sym := MakeModule (BuiltinTokenNo, MakeKey ('_BaseTypes')) ;\n+   PutModuleBuiltin (sym, TRUE) ;\n+   SetCurrentModule (sym) ;\n+   StartScope (sym) ;\n+\n+   InitBaseSimpleTypes (location) ;\n+\n+   (* Initialize the SYSTEM module before we ADDRESS.  *)\n+   InitSystem ;\n+\n+   MakeBitset ;  (* We do this after SYSTEM has been created as BITSET\n+                    is dependant upon WORD.  *)\n+\n+   InitBaseConstants ;\n+   InitBaseFunctions ;\n+   InitBaseProcedures ;\n+\n+   (*\n+      Note: that we do end the Scope since we keep the symbol to the head\n+            of the base scope. This head of base scope is searched\n+            when all other scopes fail to deliver a symbol.\n+   *)\n+   EndScope ;\n+   InitBuiltins ;\n+   InitCompatibilityMatrices\n+END InitBase ;\n+\n+\n+(*\n+   IsNeededAtRunTime - returns TRUE if procedure, sym, is a\n+                       runtime procedure.  A runtime procedure is\n+                       not a pseudo procedure (like NEW/DISPOSE)\n+                       and it is implemented in M2RTS or SYSTEM\n+                       and also exported.\n+*)\n+\n+PROCEDURE IsNeededAtRunTime (tok: CARDINAL; sym: CARDINAL) : BOOLEAN ;\n+BEGIN\n+   RETURN(\n+          ((FromModuleGetSym(tok, GetSymName(sym), System)=sym) OR\n+           (FromModuleGetSym(tok, GetSymName(sym), m2rts)=sym)) AND\n+          (IsExportQualified(sym) OR IsExportUnQualified(sym))\n+         )\n+END IsNeededAtRunTime ;\n+\n+\n+(*\n+   InitBaseConstants - initialises the base constant NIL.\n+*)\n+\n+PROCEDURE InitBaseConstants ;\n+BEGIN\n+   Nil := MakeConstVar (BuiltinTokenNo, MakeKey ('NIL')) ;\n+   PutConst (Nil, Address)\n+END InitBaseConstants ;\n+\n+\n+(*\n+   InitBaseSimpleTypes - initialises the base simple types,\n+                         CARDINAL, INTEGER, CHAR, BOOLEAN.\n+*)\n+\n+PROCEDURE InitBaseSimpleTypes (location: location_t) ;\n+BEGIN\n+   InitBaseTypes (location) ;\n+\n+   ZType := MakeType (BuiltinTokenNo, MakeKey('Modula-2 base Z')) ;\n+   PutType(ZType, NulSym) ;                   (* Base Type       *)\n+   PushIntegerTree(GetSizeOf(location, GetM2ZType())) ;\n+   PopSize(ZType) ;\n+\n+   RType := MakeType(BuiltinTokenNo, MakeKey('Modula-2 base R')) ;\n+   PutType(RType, NulSym) ;                   (* Base Type       *)\n+   PushIntegerTree(GetSizeOf(location, GetM2RType())) ;\n+   PopSize(RType) ;\n+\n+   CType := MakeType (BuiltinTokenNo, MakeKey('Modula-2 base C')) ;\n+   PutType(CType, NulSym) ;                   (* Base Type       *)\n+   PushIntegerTree(GetSizeOf(location, GetM2CType())) ;\n+   PopSize(CType) ;\n+\n+   Integer := MakeType (BuiltinTokenNo, MakeKey('INTEGER')) ;\n+   PutType(Integer, NulSym) ;                 (* Base Type       *)\n+   PushIntegerTree(GetSizeOf(location, GetM2IntegerType())) ;\n+   PopSize(Integer) ;\n+\n+   Cardinal := MakeType (BuiltinTokenNo, MakeKey('CARDINAL')) ;\n+   PutType(Cardinal, NulSym) ;\n+                                              (* Base Type       *)\n+   PushIntegerTree(GetSizeOf(location, GetM2CardinalType())) ;\n+   PopSize(Cardinal) ;\n+\n+   LongInt := MakeType (BuiltinTokenNo, MakeKey('LONGINT')) ;\n+   PutType(LongInt, NulSym) ;                 (* Base Type       *)\n+   PushIntegerTree(GetSizeOf(location, GetM2LongIntType())) ;\n+   PopSize(LongInt) ;\n+\n+   LongCard := MakeType (BuiltinTokenNo, MakeKey('LONGCARD')) ;\n+   PutType(LongCard, NulSym) ;                (* Base Type       *)\n+   PushIntegerTree(GetSizeOf(location, GetM2LongCardType())) ;\n+   PopSize(LongCard) ;\n+\n+   ShortInt := MakeType (BuiltinTokenNo, MakeKey('SHORTINT')) ;\n+   PutType(ShortInt, NulSym) ;                (* Base Type       *)\n+   PushIntegerTree(GetSizeOf(location, GetM2ShortIntType())) ;\n+   PopSize(ShortInt) ;\n+\n+   ShortCard := MakeType (BuiltinTokenNo, MakeKey('SHORTCARD')) ;\n+   PutType(ShortCard, NulSym) ;               (* Base Type       *)\n+   PushIntegerTree(GetSizeOf(location, GetM2ShortCardType())) ;\n+   PopSize(ShortCard) ;\n+\n+   Real := MakeType (BuiltinTokenNo, MakeKey('REAL')) ;\n+   PutType(Real, NulSym) ;                    (* Base Type       *)\n+   PushIntegerTree(GetSizeOf(location, GetM2RealType())) ;\n+   PopSize(Real) ;\n+\n+   ShortReal := MakeType (BuiltinTokenNo, MakeKey('SHORTREAL')) ;\n+   PutType(ShortReal, NulSym) ;               (* Base Type       *)\n+   PushIntegerTree(GetSizeOf(location, GetM2ShortRealType())) ;\n+   PopSize(ShortReal) ;\n+\n+   LongReal := MakeType (BuiltinTokenNo, MakeKey('LONGREAL')) ;\n+   PutType(LongReal, NulSym) ;                (* Base Type       *)\n+   PushIntegerTree(GetSizeOf(location, GetM2LongRealType())) ;\n+   PopSize(LongReal) ;\n+\n+   Complex := MakeType (BuiltinTokenNo, MakeKey('COMPLEX')) ;\n+   PutType(Complex, NulSym) ;                 (* Base Type       *)\n+   PushIntegerTree(GetSizeOf(location, GetM2ComplexType())) ;\n+   PopSize(Complex) ;\n+\n+   LongComplex := MakeType (BuiltinTokenNo, MakeKey('LONGCOMPLEX')) ;\n+   PutType(LongComplex, NulSym) ;             (* Base Type       *)\n+   PushIntegerTree(GetSizeOf(location, GetM2LongComplexType())) ;\n+   PopSize(LongComplex) ;\n+\n+   ShortComplex := MakeType (BuiltinTokenNo, MakeKey('SHORTCOMPLEX')) ;\n+   PutType(ShortComplex, NulSym) ;            (* Base Type       *)\n+   PushIntegerTree(GetSizeOf(location, GetM2ShortComplexType())) ;\n+   PopSize(ShortComplex) ;\n+\n+   Char := MakeType (BuiltinTokenNo, MakeKey('CHAR')) ;\n+   PutType(Char, NulSym) ;                    (* Base Type       *)\n+   PushIntegerTree(GetSizeOf(location, GetM2CharType())) ;\n+   PopSize(Char) ;\n+\n+   (*\n+      Boolean = (FALSE, TRUE) ;\n+   *)\n+   Boolean := MakeEnumeration (BuiltinTokenNo, MakeKey('BOOLEAN')) ;\n+\n+   PutFieldEnumeration (BuiltinTokenNo, Boolean, MakeKey('FALSE')) ;\n+   PutFieldEnumeration (BuiltinTokenNo, Boolean, MakeKey('TRUE')) ;\n+\n+   True  := RequestSym (BuiltinTokenNo, MakeKey('TRUE')) ;\n+   False := RequestSym (BuiltinTokenNo, MakeKey('FALSE')) ;\n+\n+   Proc := MakeProcType (BuiltinTokenNo, MakeKey('PROC')) ;\n+   PushIntegerTree(GetSizeOf(location, GetProcType())) ;\n+   PopSize(Proc) ;\n+\n+   (* MinChar *)\n+   MinChar := MakeTemporary(BuiltinTokenNo, ImmediateValue) ;\n+   PushIntegerTree(GetMinFrom(location, GetM2CharType())) ;\n+   PopValue(MinChar) ;\n+   PutVar(MinChar, Char) ;\n+\n+   (* MaxChar *)\n+   MaxChar := MakeTemporary(BuiltinTokenNo, ImmediateValue) ;\n+   PushIntegerTree(GetMaxFrom(location, GetM2CharType())) ;\n+   PopValue(MaxChar) ;\n+   PutVar(MaxChar, Char) ;\n+\n+   (* MinInteger *)\n+   MinInteger := MakeTemporary(BuiltinTokenNo, ImmediateValue) ;\n+   PushIntegerTree(GetMinFrom(location, GetM2IntegerType())) ;\n+   PopValue(MinInteger) ;\n+   PutVar(MinInteger, Integer) ;\n+\n+   (* MaxInteger *)\n+   MaxInteger := MakeTemporary(BuiltinTokenNo, ImmediateValue) ;\n+   PushIntegerTree(GetMaxFrom(location, GetM2IntegerType())) ;\n+   PopValue(MaxInteger) ;\n+   PutVar(MaxInteger, Integer) ;\n+\n+   (* MinCardinal *)\n+   MinCardinal := MakeTemporary(BuiltinTokenNo, ImmediateValue) ;\n+   PushIntegerTree(GetMinFrom(BuiltinsLocation(), GetM2CardinalType())) ;\n+   PopValue(MinCardinal) ;\n+   PutVar(MinCardinal, Cardinal) ;\n+\n+   (* MaxCardinal *)\n+   MaxCardinal := MakeTemporary(BuiltinTokenNo, ImmediateValue) ;\n+   PushIntegerTree(GetMaxFrom(location, GetM2CardinalType())) ;\n+   PopValue(MaxCardinal) ;\n+   PutVar(MaxCardinal, Cardinal) ;\n+\n+   (* MinLongInt *)\n+   MinLongInt := MakeTemporary(BuiltinTokenNo, ImmediateValue) ;\n+   PushIntegerTree(GetMinFrom(location, GetM2LongIntType())) ;\n+   PopValue(MinLongInt) ;\n+   PutVar(MinLongInt, LongInt) ;\n+\n+   (* MaxLongInt *)\n+   MaxLongInt := MakeTemporary(BuiltinTokenNo, ImmediateValue) ;\n+   PushIntegerTree(GetMaxFrom(location, GetM2LongIntType())) ;\n+   PopValue(MaxLongInt) ;\n+   PutVar(MaxLongInt, LongInt) ;\n+\n+   (* MinLongCard *)\n+   MinLongCard := MakeTemporary(BuiltinTokenNo, ImmediateValue) ;\n+   PushIntegerTree(GetMinFrom(location, GetM2LongCardType())) ;\n+   PopValue(MinLongCard) ;\n+   PutVar(MinLongCard, LongCard) ;\n+\n+   (* MinLongCard *)\n+   MaxLongCard := MakeTemporary(BuiltinTokenNo, ImmediateValue) ;\n+   PushIntegerTree(GetMaxFrom(BuiltinsLocation(), GetM2LongCardType())) ;\n+   PopValue(MaxLongCard) ;\n+   PutVar(MaxLongCard, LongCard) ;\n+\n+   (* MinReal *)\n+   MinReal := MakeTemporary(BuiltinTokenNo, ImmediateValue) ;\n+   PushRealTree(GetMinFrom(location, GetM2RealType())) ;\n+   PopValue(MinReal) ;\n+   PutVar(MinReal, Real) ;\n+\n+   (* MaxReal *)\n+   MaxReal := MakeTemporary(BuiltinTokenNo, ImmediateValue) ;\n+   PushRealTree(GetMaxFrom(location, GetM2RealType())) ;\n+   PopValue(MaxReal) ;\n+   PutVar(MaxReal, Real) ;\n+\n+   (* MinShortReal *)\n+   MinShortReal := MakeTemporary(BuiltinTokenNo, ImmediateValue) ;\n+   PushRealTree(GetMinFrom(location, GetM2ShortRealType())) ;\n+   PopValue(MinShortReal) ;\n+   PutVar(MinShortReal, ShortReal) ;\n+\n+   (* MaxShortReal *)\n+   MaxShortReal := MakeTemporary(BuiltinTokenNo, ImmediateValue) ;\n+   PushRealTree(GetMaxFrom(location, GetM2ShortRealType())) ;\n+   PopValue(MaxShortReal) ;\n+   PutVar(MaxShortReal, ShortReal) ;\n+\n+   (* MinLongReal *)\n+   MinLongReal := MakeTemporary(BuiltinTokenNo, ImmediateValue) ;\n+   PushRealTree(GetMinFrom(location, GetM2LongRealType())) ;\n+   PopValue(MinLongReal) ;\n+   PutVar(MinLongReal, LongReal) ;\n+\n+   (* MaxLongReal *)\n+   MaxLongReal := MakeTemporary(BuiltinTokenNo, ImmediateValue) ;\n+   PushRealTree(GetMaxFrom(location, GetM2LongRealType())) ;\n+   PopValue(MaxLongReal) ;\n+   PutVar(MaxLongReal, LongReal) ;\n+\n+   (* MaxShortInt *)\n+   MaxShortInt := MakeTemporary(BuiltinTokenNo, ImmediateValue) ;\n+   PushIntegerTree(GetMaxFrom(location, GetM2ShortIntType())) ;\n+   PopValue(MaxShortInt) ;\n+   PutVar(MaxShortInt, ShortInt) ;\n+\n+   (* MinShortInt *)\n+   MinShortInt := MakeTemporary(BuiltinTokenNo, ImmediateValue) ;\n+   PushIntegerTree(GetMinFrom(location, GetM2ShortIntType())) ;\n+   PopValue(MinShortInt) ;\n+   PutVar(MinShortInt, ShortInt) ;\n+\n+   (* MaxShortCard *)\n+   MaxShortCard := MakeTemporary(BuiltinTokenNo, ImmediateValue) ;\n+   PushIntegerTree(GetMaxFrom(location, GetM2ShortCardType())) ;\n+   PopValue(MaxShortCard) ;\n+   PutVar(MaxShortCard, ShortCard) ;\n+\n+   (* MinShortCard *)\n+   MinShortCard := MakeTemporary(BuiltinTokenNo, ImmediateValue) ;\n+   PushIntegerTree(GetMinFrom(location, GetM2ShortCardType())) ;\n+   PopValue(MinShortCard) ;\n+   PutVar(MinShortCard, ShortCard)\n+\n+END InitBaseSimpleTypes ;\n+\n+\n+(*\n+   FindMinMaxEnum - finds the minimum and maximum enumeration fields.\n+*)\n+\n+PROCEDURE FindMinMaxEnum (field: WORD) ;\n+BEGIN\n+   IF MaxEnum=NulSym\n+   THEN\n+      MaxEnum := field\n+   ELSE\n+      PushValue(field) ;\n+      PushValue(MaxEnum) ;\n+      IF Gre(GetTokenNo())\n+      THEN\n+         MaxEnum := field\n+      END\n+   END ;\n+   IF MinEnum=NulSym\n+   THEN\n+      MinEnum := field\n+   ELSE\n+      PushValue(field) ;\n+      PushValue(MinEnum) ;\n+      IF Less(GetTokenNo())\n+      THEN\n+         MinEnum := field\n+      END\n+   END\n+END FindMinMaxEnum ;\n+\n+\n+(*\n+   GetBaseTypeMinMax - returns the minimum and maximum values for a\n+                       given base type. This procedure should only\n+                       be called if the type is NOT a subrange.\n+*)\n+\n+PROCEDURE GetBaseTypeMinMax (type: CARDINAL; VAR min, max: CARDINAL) ;\n+BEGIN\n+   IF type=Integer\n+   THEN\n+      min := MinInteger ;\n+      max := MaxInteger\n+   ELSIF type=Cardinal\n+   THEN\n+      min := MinCardinal ;\n+      max := MaxCardinal\n+   ELSIF type=Char\n+   THEN\n+      min := MinChar ;\n+      max := MaxChar\n+   ELSIF type=Bitset\n+   THEN\n+      GetBitsetMinMax(min, max)\n+   ELSIF (type=LongInt)\n+   THEN\n+      min := MinLongInt ;\n+      max := MaxLongInt\n+   ELSIF (type=LongCard)\n+   THEN\n+      min := MinLongCard ;\n+      max := MaxLongCard\n+   ELSIF (type=ShortInt)\n+   THEN\n+      min := MinShortInt ;\n+      max := MaxShortInt\n+   ELSIF (type=ShortCard)\n+   THEN\n+      min := MinShortCard ;\n+      max := MaxShortCard\n+   ELSIF (type=Real)\n+   THEN\n+      min := MinReal ;\n+      max := MaxReal\n+   ELSIF (type=ShortReal)\n+   THEN\n+      min := MinShortReal ;\n+      max := MaxShortReal\n+   ELSIF (type=LongReal)\n+   THEN\n+      min := MinLongReal ;\n+      max := MaxLongReal\n+   ELSIF IsEnumeration(type)\n+   THEN\n+      MinEnum := NulSym ;\n+      MaxEnum := NulSym ;\n+      ForeachFieldEnumerationDo(type, FindMinMaxEnum) ;\n+      min := MinEnum ;\n+      max := MaxEnum\n+   ELSE\n+      MetaError1 ('unable to find MIN or MAX for the base type {%1as}', type)\n+   END\n+END GetBaseTypeMinMax ;\n+\n+\n+(*\n+   ImportFrom - imports symbol, name, from module and returns the\n+                symbol.\n+*)\n+\n+PROCEDURE ImportFrom (tok: CARDINAL;\n+                      module: CARDINAL; name: ARRAY OF CHAR) : CARDINAL ;\n+BEGIN\n+   PutImported(GetExported(tok, module, MakeKey(name))) ;\n+   RETURN( GetSym(MakeKey(name)) )\n+END ImportFrom ;\n+\n+\n+(*\n+   InitBaseProcedures - initialises the base procedures,\n+                        INC, DEC, INCL, EXCL, NEW and DISPOSE.\n+*)\n+\n+PROCEDURE InitBaseProcedures ;\n+VAR\n+   rtexceptions: CARDINAL ;\n+BEGIN\n+   (*\n+      The pseudo procedures NEW and DISPOSE are in fact \"macro\"\n+      substituted for ALLOCATE and DEALLOCATE.\n+      However they both have symbols in the base module so that\n+      the procedure mechanism treats all procedure calls the same.\n+      \"Macro\" substitution occurs in M2Quads.\n+   *)\n+\n+   New := MakeProcedure(BuiltinTokenNo, MakeKey('NEW')) ;\n+   Dispose := MakeProcedure(BuiltinTokenNo, MakeKey('DISPOSE')) ;\n+   Inc := MakeProcedure(BuiltinTokenNo, MakeKey('INC')) ;\n+   Dec := MakeProcedure(BuiltinTokenNo, MakeKey('DEC')) ;\n+   Incl := MakeProcedure(BuiltinTokenNo, MakeKey('INCL')) ;\n+   Excl := MakeProcedure(BuiltinTokenNo, MakeKey('EXCL')) ;\n+\n+   IF NOT Pim2\n+   THEN\n+      MakeSize  (* SIZE is declared as a standard function in *)\n+                (* ISO Modula-2 and PIM-[34] Modula-2 but not *)\n+                (* PIM-2 Modula-2                             *)\n+   END ;\n+\n+   (*\n+      The procedure HALT is a real procedure which\n+      is defined in M2RTS. However to remain compatible\n+      with other Modula-2 implementations HALT can be used\n+      without the need to import it from M2RTS. ie it is\n+      within the BaseType module scope.\n+   *)\n+   m2rts := MakeDefinitionSource(BuiltinTokenNo, MakeKey('M2RTS')) ;\n+   PutImported(GetExported(BuiltinTokenNo, m2rts, MakeKey('HALT'))) ;\n+\n+   ExceptionAssign          := NulSym ;\n+   ExceptionReturn          := NulSym ;\n+   ExceptionInc             := NulSym ;\n+   ExceptionDec             := NulSym ;\n+   ExceptionIncl            := NulSym ;\n+   ExceptionExcl            := NulSym ;\n+   ExceptionShift           := NulSym ;\n+   ExceptionRotate          := NulSym ;\n+   ExceptionStaticArray     := NulSym ;\n+   ExceptionDynamicArray    := NulSym ;\n+   ExceptionForLoopBegin    := NulSym ;\n+   ExceptionForLoopTo       := NulSym ;\n+   ExceptionForLoopEnd      := NulSym ;\n+   ExceptionPointerNil      := NulSym ;\n+   ExceptionNoReturn        := NulSym ;\n+   ExceptionCase            := NulSym ;\n+   ExceptionNonPosDiv       := NulSym ;\n+   ExceptionNonPosMod       := NulSym ;\n+   ExceptionZeroDiv         := NulSym ;\n+   ExceptionZeroRem         := NulSym ;\n+   ExceptionWholeValue      := NulSym ;\n+   ExceptionRealValue       := NulSym ;\n+   ExceptionParameterBounds := NulSym ;\n+\n+   ExceptionNo              := NulSym ;\n+\n+   IF NilChecking\n+   THEN\n+      ExceptionPointerNil := ImportFrom(BuiltinTokenNo, m2rts, 'PointerNilException')\n+   END ;\n+   IF RangeChecking\n+   THEN\n+      ExceptionAssign := ImportFrom(BuiltinTokenNo, m2rts, 'AssignmentException') ;\n+      ExceptionReturn := ImportFrom(BuiltinTokenNo, m2rts, 'ReturnException') ;\n+      ExceptionInc := ImportFrom(BuiltinTokenNo, m2rts, 'IncException') ;\n+      ExceptionDec := ImportFrom(BuiltinTokenNo, m2rts, 'DecException') ;\n+      ExceptionIncl := ImportFrom(BuiltinTokenNo, m2rts, 'InclException') ;\n+      ExceptionExcl := ImportFrom(BuiltinTokenNo, m2rts, 'ExclException') ;\n+      ExceptionShift := ImportFrom(BuiltinTokenNo, m2rts, 'ShiftException') ;\n+      ExceptionRotate := ImportFrom(BuiltinTokenNo, m2rts, 'RotateException') ;\n+      ExceptionForLoopBegin := ImportFrom(BuiltinTokenNo, m2rts, 'ForLoopBeginException') ;\n+      ExceptionForLoopTo := ImportFrom(BuiltinTokenNo, m2rts, 'ForLoopToException') ;\n+      ExceptionForLoopEnd := ImportFrom(BuiltinTokenNo, m2rts, 'ForLoopEndException') ;\n+      ExceptionParameterBounds := ImportFrom(BuiltinTokenNo, m2rts, 'ParameterException') ;\n+   END ;\n+   IF IndexChecking\n+   THEN\n+      ExceptionStaticArray := ImportFrom(BuiltinTokenNo, m2rts, 'StaticArraySubscriptException') ;\n+      ExceptionDynamicArray := ImportFrom(BuiltinTokenNo, m2rts, 'DynamicArraySubscriptException')\n+   END ;\n+   IF WholeDivChecking\n+   THEN\n+      ExceptionNonPosDiv := ImportFrom(BuiltinTokenNo, m2rts, 'WholeNonPosDivException') ;\n+      ExceptionNonPosMod := ImportFrom(BuiltinTokenNo, m2rts, 'WholeNonPosModException') ;\n+      ExceptionZeroDiv := ImportFrom(BuiltinTokenNo, m2rts, 'WholeZeroDivException') ;\n+      ExceptionZeroRem := ImportFrom(BuiltinTokenNo, m2rts, 'WholeZeroRemException')\n+   END ;\n+   IF ReturnChecking\n+   THEN\n+      ExceptionNoReturn := ImportFrom(BuiltinTokenNo, m2rts, 'NoReturnException')\n+   END ;\n+   IF CaseElseChecking\n+   THEN\n+      ExceptionCase := ImportFrom(BuiltinTokenNo, m2rts, 'CaseException')\n+   END ;\n+   IF WholeValueChecking\n+   THEN\n+      ExceptionWholeValue := ImportFrom(BuiltinTokenNo, m2rts, 'WholeValueException') ;\n+      ExceptionRealValue := ImportFrom(BuiltinTokenNo, m2rts, 'RealValueException')\n+   END ;\n+   IF Exceptions\n+   THEN\n+      ExceptionNo := ImportFrom(BuiltinTokenNo, m2rts, 'NoException') ;\n+      (* ensure that this module is included *)\n+      rtexceptions := MakeDefinitionSource(BuiltinTokenNo, MakeKey('RTExceptions')) ;\n+      IF rtexceptions = NulSym\n+      THEN\n+         MetaError0 ('unable to find required runtime module RTExceptions')\n+      END\n+   END\n+END InitBaseProcedures ;\n+\n+\n+(*\n+   IsOrd - returns TRUE if, sym, is ORD or its typed counterparts\n+           ORDL, ORDS.\n+*)\n+\n+PROCEDURE IsOrd (sym: CARDINAL) : BOOLEAN ;\n+BEGIN\n+   RETURN (sym=Ord) OR (sym=OrdS) OR (sym=OrdL)\n+END IsOrd ;\n+\n+\n+(*\n+   BuildOrdFunctions - creates ORD, ORDS, ORDL.\n+*)\n+\n+PROCEDURE BuildOrdFunctions ;\n+BEGIN\n+   Ord := MakeProcedure(BuiltinTokenNo, MakeKey('ORD')) ;\n+   PutFunction(Ord, Cardinal) ;\n+   OrdS := MakeProcedure(BuiltinTokenNo, MakeKey('ORDS')) ;\n+   PutFunction(OrdS, ShortCard) ;\n+   OrdL := MakeProcedure(BuiltinTokenNo, MakeKey('ORDL')) ;\n+   PutFunction(OrdL, LongCard)\n+END BuildOrdFunctions ;\n+\n+\n+(*\n+   IsTrunc - returns TRUE if, sym, is TRUNC or its typed counterparts\n+             TRUNCL, TRUNCS.\n+*)\n+\n+PROCEDURE IsTrunc (sym: CARDINAL) : BOOLEAN ;\n+BEGIN\n+   RETURN (sym=Trunc) OR (sym=TruncS) OR (sym=TruncL)\n+END IsTrunc ;\n+\n+\n+(*\n+   BuildTruncFunctions - creates TRUNC, TRUNCS, TRUNCL.\n+*)\n+\n+PROCEDURE BuildTruncFunctions ;\n+BEGIN\n+   IF Pim2 OR Pim3 OR Iso\n+   THEN\n+      Trunc := MakeProcedure(BuiltinTokenNo, MakeKey('TRUNC')) ;\n+      PutFunction(Trunc, Cardinal) ;\n+      TruncS := MakeProcedure(BuiltinTokenNo, MakeKey('STRUNC')) ;\n+      PutFunction(TruncS, ShortCard) ;\n+      TruncL := MakeProcedure(BuiltinTokenNo, MakeKey('LTRUNC')) ;\n+      PutFunction(TruncL, LongCard)\n+   ELSE\n+      Trunc := MakeProcedure(BuiltinTokenNo, MakeKey('TRUNC')) ;\n+      PutFunction(Trunc, Integer) ;\n+      TruncS := MakeProcedure(BuiltinTokenNo, MakeKey('STRUNC')) ;\n+      PutFunction(TruncS, ShortInt) ;\n+      TruncL := MakeProcedure(BuiltinTokenNo, MakeKey('LTRUNC')) ;\n+      PutFunction(TruncL, LongInt)\n+   END\n+END BuildTruncFunctions ;\n+\n+\n+(*\n+   IsFloat - returns TRUE if, sym, is FLOAT or its typed counterparts\n+             FLOATL, FLOATS.\n+*)\n+\n+PROCEDURE IsFloat (sym: CARDINAL) : BOOLEAN ;\n+BEGIN\n+   RETURN(\n+          (sym=Float) OR (sym=FloatS) OR (sym=FloatL) OR\n+          (sym=SFloat) OR (sym=LFloat)\n+         )\n+END IsFloat ;\n+\n+\n+(*\n+   BuildFloatFunctions - creates TRUNC, TRUNCS, TRUNCL.\n+*)\n+\n+PROCEDURE BuildFloatFunctions ;\n+BEGIN\n+   Float := MakeProcedure(BuiltinTokenNo, MakeKey('FLOAT')) ;\n+   PutFunction(Float, Real) ;\n+   SFloat := MakeProcedure(BuiltinTokenNo, MakeKey('SFLOAT')) ;\n+   PutFunction(SFloat, ShortReal) ;\n+   LFloat := MakeProcedure(BuiltinTokenNo, MakeKey('LFLOAT')) ;\n+   PutFunction(LFloat, LongReal) ;\n+   FloatS := MakeProcedure(BuiltinTokenNo, MakeKey('FLOATS')) ;\n+   PutFunction(FloatS, ShortReal) ;\n+   FloatL := MakeProcedure(BuiltinTokenNo, MakeKey('FLOATL')) ;\n+   PutFunction(FloatL, LongReal)\n+END BuildFloatFunctions ;\n+\n+\n+(*\n+   IsInt - returns TRUE if, sym, is INT or its typed counterparts\n+           INTL, INTS.\n+*)\n+\n+PROCEDURE IsInt (sym: CARDINAL) : BOOLEAN ;\n+BEGIN\n+   RETURN (sym=Int) OR (sym=IntS) OR (sym=IntL)\n+END IsInt ;\n+\n+\n+(*\n+   BuildIntFunctions - creates INT, INTS, INTL.\n+*)\n+\n+PROCEDURE BuildIntFunctions ;\n+BEGIN\n+   Int := MakeProcedure(BuiltinTokenNo, MakeKey('INT')) ;\n+   PutFunction(Int, Integer) ;\n+   IntS := MakeProcedure(BuiltinTokenNo, MakeKey('INTS')) ;\n+   PutFunction(IntS, ShortInt) ;\n+   IntL := MakeProcedure(BuiltinTokenNo, MakeKey('INTL')) ;\n+   PutFunction(IntL, LongInt)\n+END BuildIntFunctions ;\n+\n+\n+(*\n+   InitBaseFunctions - initialises the base function, HIGH.\n+*)\n+\n+PROCEDURE InitBaseFunctions ;\n+BEGIN\n+   (* Now declare the dynamic array components, HIGH *)\n+   High := MakeProcedure(BuiltinTokenNo, MakeKey('HIGH')) ;  (* Pseudo Base function HIGH *)\n+   PutFunction(High, Cardinal) ;\n+\n+   (*\n+     _TemplateProcedure is a procedure which has a local variable _ActivationPointer\n+      whose offset is used for all nested procedures. (The activation pointer\n+      being in the same relative position for all procedures).\n+   *)\n+   TemplateProcedure := MakeProcedure(BuiltinTokenNo, MakeKey('_TemplateProcedure')) ;\n+   StartScope(TemplateProcedure) ;\n+   ActivationPointer := MakeVar(BuiltinTokenNo, MakeKey('_ActivationPointer')) ;\n+   PutVar(ActivationPointer, Address) ;\n+   EndScope ;\n+\n+   (* and the base functions *)\n+\n+   Convert := MakeProcedure(BuiltinTokenNo, MakeKey('CONVERT')) ;  (* Internal function CONVERT    *)\n+   IF Iso\n+   THEN\n+      LengthS := MakeProcedure(BuiltinTokenNo, MakeKey('LENGTH')) ; (* Pseudo Base function LENGTH  *)\n+      PutFunction(LengthS, ZType)\n+   ELSE\n+      LengthS := NulSym\n+   END ;\n+   Abs   := MakeProcedure(BuiltinTokenNo, MakeKey('ABS')) ;      (* Pseudo Base function ABS     *)\n+   PutFunction(Abs, ZType) ;\n+\n+   Cap   := MakeProcedure(BuiltinTokenNo, MakeKey('CAP')) ;      (* Pseudo Base function CAP     *)\n+   PutFunction(Cap, Char) ;\n+\n+   Odd   := MakeProcedure(BuiltinTokenNo, MakeKey('ODD')) ;      (* Pseudo Base function ODD     *)\n+   PutFunction(Odd, Boolean) ;\n+\n+   Chr   := MakeProcedure(BuiltinTokenNo, MakeKey('CHR')) ;      (* Pseudo Base function CHR     *)\n+   PutFunction(Chr, Char) ;\n+\n+   (* the following three procedure functions have a return type depending upon  *)\n+   (* the parameters.                                                            *)\n+\n+   Val   := MakeProcedure(BuiltinTokenNo, MakeKey('VAL')) ;      (* Pseudo Base function VAL     *)\n+   Min   := MakeProcedure(BuiltinTokenNo, MakeKey('MIN')) ;      (* Pseudo Base function MIN     *)\n+   Max   := MakeProcedure(BuiltinTokenNo, MakeKey('MAX')) ;      (* Pseudo Base function MIN     *)\n+\n+   Re    := MakeProcedure(BuiltinTokenNo, MakeKey('RE')) ;       (* Pseudo Base function RE      *)\n+   PutFunction(Re, RType) ;\n+\n+   Im    := MakeProcedure(BuiltinTokenNo, MakeKey('IM')) ;       (* Pseudo Base function IM      *)\n+   PutFunction(Im, RType) ;\n+\n+   Cmplx := MakeProcedure(BuiltinTokenNo, MakeKey('CMPLX')) ;    (* Pseudo Base function CMPLX   *)\n+   PutFunction(Cmplx, CType) ;\n+\n+   BuildFloatFunctions ;\n+   BuildTruncFunctions ;\n+   BuildOrdFunctions ;\n+   BuildIntFunctions\n+END InitBaseFunctions ;\n+\n+\n+(*\n+   IsISOPseudoBaseFunction -\n+*)\n+\n+PROCEDURE IsISOPseudoBaseFunction (Sym: CARDINAL) : BOOLEAN ;\n+BEGIN\n+   RETURN( Iso AND (Sym#NulSym) AND\n+           ((Sym=LengthS) OR (Sym=Size) OR\n+            (Sym=Cmplx) OR (Sym=Re) OR (Sym=Im) OR IsInt(Sym)) )\n+END IsISOPseudoBaseFunction ;\n+\n+\n+(*\n+   IsPIMPseudoBaseFunction -\n+*)\n+\n+PROCEDURE IsPIMPseudoBaseFunction (Sym: CARDINAL) : BOOLEAN ;\n+BEGIN\n+   RETURN( (NOT Iso) AND (NOT Pim2) AND (Sym#NulSym) AND (Sym=Size) )\n+END IsPIMPseudoBaseFunction ;\n+\n+\n+(*\n+   IsPseudoBaseFunction - returns true if Sym is a Base pseudo function.\n+*)\n+\n+PROCEDURE IsPseudoBaseFunction (Sym: CARDINAL) : BOOLEAN ;\n+BEGIN\n+   RETURN(\n+          (Sym=High) OR (Sym=Val) OR (Sym=Convert) OR IsOrd(Sym) OR\n+          (Sym=Chr) OR IsFloat(Sym) OR IsTrunc(Sym) OR (Sym=Min) OR\n+          (Sym=Max) OR (Sym=Abs) OR (Sym=Odd) OR (Sym=Cap) OR\n+          IsISOPseudoBaseFunction(Sym) OR IsPIMPseudoBaseFunction(Sym)\n+         )\n+END IsPseudoBaseFunction ;\n+\n+\n+(*\n+   IsPseudoBaseProcedure - returns true if Sym is a Base pseudo procedure.\n+*)\n+\n+PROCEDURE IsPseudoBaseProcedure (Sym: CARDINAL) : BOOLEAN ;\n+BEGIN\n+   RETURN(\n+          (Sym=New) OR (Sym=Dispose) OR (Sym=Inc) OR (Sym=Dec) OR\n+          (Sym=Incl) OR (Sym=Excl)\n+         )\n+END IsPseudoBaseProcedure ;\n+\n+\n+(*\n+   IsBaseType - returns TRUE if Sym is a Base type.\n+*)\n+\n+PROCEDURE IsBaseType (Sym: CARDINAL) : BOOLEAN ;\n+BEGIN\n+   RETURN(\n+          (Sym=Cardinal) OR (Sym=Integer)  OR (Sym=Boolean) OR\n+          (Sym=Char)     OR (Sym=Proc)     OR\n+          (Sym=LongInt)  OR (Sym=LongCard) OR\n+          (Sym=ShortInt) OR (Sym=ShortCard) OR\n+          (Sym=Real)     OR (Sym=LongReal) OR (Sym=ShortReal) OR\n+          (Sym=Complex)  OR (Sym=LongComplex) OR (Sym=ShortComplex) OR\n+          (Sym=Bitset)\n+         )\n+END IsBaseType ;\n+\n+\n+(*\n+   IsOrdinalType - returns TRUE if, sym, is an ordinal type.\n+                   An ordinal type is defined as:\n+                   a base type which contains whole numbers or\n+                   a subrange type or an enumeration type.\n+*)\n+\n+PROCEDURE IsOrdinalType (Sym: CARDINAL) : BOOLEAN ;\n+BEGIN\n+   RETURN(\n+          (Sym=Cardinal)  OR (Sym=Integer)   OR\n+          (Sym=Char)      OR (Sym=Boolean)   OR\n+          (Sym=LongInt)   OR (Sym=LongCard)  OR\n+          (Sym=ShortInt)  OR (Sym=ShortCard) OR\n+          (Sym=ZType)     OR\n+          IsSubrange(Sym) OR IsEnumeration(Sym) OR\n+          IsIntegerN(Sym) OR IsCardinalN(Sym)\n+         )\n+END IsOrdinalType ;\n+\n+\n+(*\n+   IsComplexType - returns TRUE if, sym, is COMPLEX,\n+                   LONGCOMPLEX or SHORTCOMPLEX.\n+*)\n+\n+PROCEDURE IsComplexType (sym: CARDINAL) : BOOLEAN ;\n+BEGIN\n+   RETURN( (sym=Complex) OR (sym=LongComplex) OR (sym=ShortComplex) OR (sym=CType) OR IsComplexN (sym) )\n+END IsComplexType ;\n+\n+\n+(*\n+   ComplexToScalar - returns the scalar (or base type) of the complex type, sym.\n+*)\n+\n+PROCEDURE ComplexToScalar (sym: CARDINAL) : CARDINAL ;\n+BEGIN\n+   IF sym=NulSym\n+   THEN\n+      (* a const complex may have a NulSym type *)\n+      RETURN( RType )\n+   ELSIF sym=Complex\n+   THEN\n+      RETURN( Real )\n+   ELSIF sym=LongComplex\n+   THEN\n+      RETURN( LongReal )\n+   ELSIF sym=ShortComplex\n+   THEN\n+      RETURN( ShortReal )\n+   ELSIF sym=CType\n+   THEN\n+      RETURN( RType )\n+   ELSIF sym=ComplexN(32)\n+   THEN\n+      RETURN( RealN(32) )\n+   ELSIF sym=ComplexN(64)\n+   THEN\n+      RETURN( RealN(64) )\n+   ELSIF sym=ComplexN(96)\n+   THEN\n+      RETURN( RealN(96) )\n+   ELSIF sym=ComplexN(128)\n+   THEN\n+      RETURN( RealN(128) )\n+   ELSE\n+      MetaError1('{%1ad} must be a COMPLEX type', sym)\n+   END\n+END ComplexToScalar ;\n+\n+\n+(*\n+   ScalarToComplex - given a real type, t, return the equivalent complex type.\n+*)\n+\n+PROCEDURE ScalarToComplex (sym: CARDINAL) : CARDINAL ;\n+BEGIN\n+   IF sym=Real\n+   THEN\n+      RETURN( Complex )\n+   ELSIF sym=LongReal\n+   THEN\n+      RETURN( LongComplex )\n+   ELSIF sym=ShortReal\n+   THEN\n+      RETURN( ShortComplex )\n+   ELSIF sym=RType\n+   THEN\n+      RETURN( CType )\n+   ELSIF sym=RealN(32)\n+   THEN\n+      RETURN( ComplexN(32) )\n+   ELSIF sym=RealN(64)\n+   THEN\n+      RETURN( ComplexN(64) )\n+   ELSIF sym=RealN(96)\n+   THEN\n+      RETURN( ComplexN(96) )\n+   ELSIF sym=RealN(128)\n+   THEN\n+      RETURN( ComplexN(128) )\n+   ELSE\n+      MetaError1('{%1ad} must be a REAL type', sym) ;\n+      RETURN( Complex )\n+   END\n+END ScalarToComplex ;\n+\n+\n+(*\n+   GetCmplxReturnType - this code implements the table given in the\n+                        ISO standard Page 293 with an addition for\n+                        SHORTCOMPLEX.\n+*)\n+\n+PROCEDURE GetCmplxReturnType (t1, t2: CARDINAL) : CARDINAL ;\n+VAR\n+   mt1, mt2: MetaType ;\n+BEGIN\n+   t1 := SkipType(t1) ;\n+   t2 := SkipType(t2) ;\n+   IF (IsRealType(t1) OR IsRealN(t1)) AND\n+      (IsRealType(t2) OR IsRealN(t2))\n+   THEN\n+      mt1 := FindMetaType(t1) ;\n+      mt2 := FindMetaType(t2) ;\n+      IF mt1=mt2\n+      THEN\n+         RETURN( ScalarToComplex(t1) )\n+      ELSE\n+         IF mt1=rtype\n+         THEN\n+            RETURN( ScalarToComplex(t2) )\n+         ELSIF mt2=rtype\n+         THEN\n+            RETURN( ScalarToComplex(t1) )\n+         ELSE\n+            RETURN( NulSym )\n+         END\n+      END\n+   ELSE\n+      RETURN( NulSym )\n+   END\n+END GetCmplxReturnType ;\n+\n+\n+(*\n+   EmitTypeIncompatibleWarning - emit a type incompatibility warning.\n+*)\n+\n+PROCEDURE EmitTypeIncompatibleWarning (tok: CARDINAL;\n+                                       kind: Compatability; t1, t2: CARDINAL) ;\n+BEGIN\n+   CASE kind OF\n+\n+   expression:  MetaErrorT2 (tok,\n+                             '{%1W:} type incompatibility found {%1as:{%2as:between types {%1as} {%2as}}} in an expression, hint one of the expressions should be converted',\n+                             t1, t2) |\n+   assignment:  MetaErrorT2 (tok,\n+                             '{%1W:} type incompatibility found {%1as:{%2as:between types {%1as} {%2as}}} during an assignment, hint maybe the expression should be converted',\n+                             t1, t2) |\n+   parameter :  MetaErrorT2 (tok,\n+                            '{%1W:} type incompatibility found when passing a parameter {%1as:{%2as:between formal parameter and actual parameter types {%1as} {%2as}}}, hint the actual parameter {%2a} should be converted',\n+                            t1, t2) |\n+   comparison:  MetaErrorT2 (tok,\n+                            '{%1W:} type incompatibility found {%1as:{%2as:between types {%1as} {%2as}}} in a relational expression, hint one of the expressions should be converted',\n+                            t1, t2)\n+\n+   ELSE\n+   END\n+END EmitTypeIncompatibleWarning ;\n+\n+\n+(*\n+   EmitTypeIncompatibleError - emit a type incompatibility error.\n+*)\n+\n+PROCEDURE EmitTypeIncompatibleError (tok: CARDINAL;\n+                                     kind: Compatability; t1, t2: CARDINAL) ;\n+BEGIN\n+   CASE kind OF\n+\n+   expression:  MetaErrorT2 (tok,\n+                            'type incompatibility found {%1as:{%2as:between types {%1as} and {%2as}}} in an expression, hint one of the expressions should be converted',\n+                            t1, t2) |\n+   assignment:  MetaErrorT2 (tok,\n+                             'type incompatibility found {%1as:{%2as:between types {%1as} and {%2as}}} during an assignment, hint maybe the expression should be converted',\n+                             t1, t2) |\n+   parameter :  MetaErrorT2 (tok,\n+                             'type incompatibility found when passing a parameter {%1as:{%2as:between formal parameter and actual parameter types {%1as} and {%2as}}}, hint the actual parameter should be converted',\n+                             t1, t2) |\n+   comparison:  MetaErrorT2 (tok,\n+                             'type incompatibility found {%1as:{%2as:between types {%1as} and {%2as}}} in a relational expression, hint one of the expressions should be converted',\n+                             t1, t2)\n+\n+   ELSE\n+   END\n+END EmitTypeIncompatibleError ;\n+\n+\n+(*\n+   CheckCompatible - returns if t1 and t2 are kind compatible\n+*)\n+\n+PROCEDURE CheckCompatible (tok: CARDINAL;\n+                           t1, t2: CARDINAL; kind: Compatability) ;\n+VAR\n+   s: String ;\n+   r: Compatible ;\n+BEGIN\n+   r := IsCompatible (t1, t2, kind) ;\n+   IF (r#first) AND (r#second)\n+   THEN\n+      IF (r=warnfirst) OR (r=warnsecond)\n+      THEN\n+         s := InitString('{%1W}')\n+      ELSE\n+         s := InitString('')\n+      END ;\n+      IF IsUnknown(t1) AND IsUnknown(t2)\n+      THEN\n+         s := ConCat(s, InitString('two different unknown types {%1a:{%2a:{%1a} and {%2a}}} must either be declared or imported)')) ;\n+         MetaErrorStringT2 (tok, s, t1, t2)\n+      ELSIF IsUnknown(t1)\n+      THEN\n+         s := ConCat(s, InitString('this type {%1a} is currently unknown, it must be declared or imported')) ;\n+         MetaErrorStringT1 (tok, s, t1)\n+      ELSIF IsUnknown(t2)\n+      THEN\n+         s := ConCat (s, InitString('this type {%1a} is currently unknown, it must be declared or imported')) ;\n+         MetaErrorStringT1 (tok, s, t2)\n+      ELSE\n+         IF (r=warnfirst) OR (r=warnsecond)\n+         THEN\n+            EmitTypeIncompatibleWarning (tok, kind, t1, t2)\n+         ELSE\n+            EmitTypeIncompatibleError (tok, kind, t1, t2)\n+         END\n+      END\n+   END\n+END CheckCompatible ;\n+\n+\n+(*\n+   CheckExpressionCompatible - returns if t1 and t2 are compatible types for\n+                               +, -, *, DIV, >, <, =, etc.\n+                               If t1 and t2 are not compatible then an error\n+                               message is displayed.\n+*)\n+\n+PROCEDURE CheckExpressionCompatible (tok: CARDINAL; left, right: CARDINAL) ;\n+BEGIN\n+   CheckCompatible (tok, left, right, expression)\n+END CheckExpressionCompatible ;\n+\n+\n+(*\n+   CheckParameterCompatible - checks to see if types, t1, and, t2, are\n+                              compatible for parameter passing.\n+*)\n+\n+PROCEDURE CheckParameterCompatible (tok: CARDINAL;\n+                                    t1, t2: CARDINAL) ;\n+BEGIN\n+   CheckCompatible (tok, t1, t2, parameter)\n+END CheckParameterCompatible ;\n+\n+\n+(*\n+   CheckAssignmentCompatible - returns if t1 and t2 are compatible types for\n+                               :=, =, #.\n+                               If t1 and t2 are not compatible then an error\n+                               message is displayed.\n+*)\n+\n+PROCEDURE CheckAssignmentCompatible (tok: CARDINAL;\n+                                     left, right: CARDINAL) ;\n+BEGIN\n+   IF left # right\n+   THEN\n+      CheckCompatible (tok, left, right, assignment)\n+   END\n+END CheckAssignmentCompatible ;\n+\n+\n+(*\n+   FindMetaType - returns the MetaType associated with, sym.\n+*)\n+\n+PROCEDURE FindMetaType (sym: CARDINAL) : MetaType ;\n+BEGIN\n+   IF sym=NulSym\n+   THEN\n+      RETURN( const )\n+   ELSIF sym=Word\n+   THEN\n+      RETURN( word )\n+   ELSIF sym=Byte\n+   THEN\n+      RETURN( byte )\n+   ELSIF sym=Loc\n+   THEN\n+      RETURN( loc )\n+   ELSIF sym=Address\n+   THEN\n+      RETURN( address )\n+   ELSIF sym=Char\n+   THEN\n+      RETURN( chr )\n+   ELSIF sym=Integer\n+   THEN\n+      RETURN( normint )\n+   ELSIF sym=ShortInt\n+   THEN\n+      RETURN( shortint )\n+   ELSIF sym=LongInt\n+   THEN\n+      RETURN( longint )\n+   ELSIF sym=Cardinal\n+   THEN\n+      RETURN( normcard )\n+   ELSIF sym=ShortCard\n+   THEN\n+      RETURN( shortcard )\n+   ELSIF sym=LongCard\n+   THEN\n+      RETURN( longcard )\n+   ELSIF sym=ZType\n+   THEN\n+      RETURN( ztype )\n+   ELSIF sym=RType\n+   THEN\n+      RETURN( rtype )\n+   ELSIF sym=Real\n+   THEN\n+      RETURN( real )\n+   ELSIF sym=ShortReal\n+   THEN\n+      RETURN( shortreal )\n+   ELSIF sym=LongReal\n+   THEN\n+      RETURN( longreal )\n+   ELSIF sym=IntegerN(8)\n+   THEN\n+      RETURN( int8 )\n+   ELSIF sym=IntegerN(16)\n+   THEN\n+      RETURN( int16 )\n+   ELSIF sym=IntegerN(32)\n+   THEN\n+      RETURN( int32 )\n+   ELSIF sym=IntegerN(64)\n+   THEN\n+      RETURN( int64 )\n+   ELSIF sym=CardinalN(8)\n+   THEN\n+      RETURN( card8 )\n+   ELSIF sym=CardinalN(16)\n+   THEN\n+      RETURN( card16 )\n+   ELSIF sym=CardinalN(32)\n+   THEN\n+      RETURN( card32 )\n+   ELSIF sym=CardinalN(64)\n+   THEN\n+      RETURN( card64 )\n+   ELSIF sym=WordN(16)\n+   THEN\n+      RETURN( word16 )\n+   ELSIF sym=WordN(32)\n+   THEN\n+      RETURN( word32 )\n+   ELSIF sym=WordN(64)\n+   THEN\n+      RETURN( word64 )\n+   ELSIF sym=SetN(8)\n+   THEN\n+      RETURN( set8 )\n+   ELSIF sym=SetN(16)\n+   THEN\n+      RETURN( set16 )\n+   ELSIF sym=SetN(32)\n+   THEN\n+      RETURN( set32 )\n+   ELSIF sym=RealN(32)\n+   THEN\n+      RETURN( real32 )\n+   ELSIF sym=RealN(64)\n+   THEN\n+      RETURN( real64 )\n+   ELSIF sym=RealN(96)\n+   THEN\n+      RETURN( real96 )\n+   ELSIF sym=RealN(128)\n+   THEN\n+      RETURN( real128 )\n+   ELSIF sym=Complex\n+   THEN\n+      RETURN( complex )\n+   ELSIF sym=ShortComplex\n+   THEN\n+      RETURN( shortcomplex )\n+   ELSIF sym=LongComplex\n+   THEN\n+      RETURN( longcomplex )\n+   ELSIF sym=ComplexN(32)\n+   THEN\n+      RETURN( complex32 )\n+   ELSIF sym=ComplexN(64)\n+   THEN\n+      RETURN( complex64 )\n+   ELSIF sym=ComplexN(96)\n+   THEN\n+      RETURN( complex96 )\n+   ELSIF sym=ComplexN(128)\n+   THEN\n+      RETURN( complex128 )\n+   ELSIF sym=CType\n+   THEN\n+      RETURN( ctype )\n+   ELSIF IsSet(sym)\n+   THEN\n+      RETURN( set )\n+   ELSIF IsHiddenType(sym)\n+   THEN\n+      RETURN( opaque )\n+   ELSIF IsPointer(sym)\n+   THEN\n+      RETURN( pointer )\n+   ELSIF IsEnumeration(sym)\n+   THEN\n+      RETURN( enum )\n+   ELSIF IsRecord(sym)\n+   THEN\n+      RETURN( rec )\n+   ELSIF IsArray(sym)\n+   THEN\n+      RETURN( array )\n+   ELSIF IsType(sym)\n+   THEN\n+      RETURN( FindMetaType(GetType(sym)) )\n+   ELSIF IsProcedure(sym) OR IsProcType(sym)\n+   THEN\n+      RETURN( procedure )\n+   ELSE\n+      RETURN( unknown )\n+   END\n+END FindMetaType ;\n+\n+\n+(*\n+   IsBaseCompatible - returns an enumeration field determining whether a simple base type\n+                      comparison is legal.\n+*)\n+\n+PROCEDURE IsBaseCompatible (t1, t2: CARDINAL;\n+                            kind: Compatability) : Compatible ;\n+VAR\n+   mt1, mt2: MetaType ;\n+BEGIN\n+   IF (t1=t2) AND ((kind=assignment) OR (kind=parameter))\n+   THEN\n+      RETURN( first )\n+   ELSE\n+      mt1 := FindMetaType (t1) ;\n+      mt2 := FindMetaType (t2) ;\n+      IF (mt1=unknown) OR (mt2=unknown)\n+      THEN\n+         RETURN( no )\n+      END ;\n+\n+      CASE kind OF\n+\n+      expression: RETURN( Expr [mt1, mt2] ) |\n+      assignment: RETURN( Ass  [mt1, mt2] ) |\n+      parameter : RETURN( Ass  [mt1, mt2] ) |\n+      comparison: RETURN( Comp [mt1, mt2] )\n+\n+      ELSE\n+         InternalError ('unexpected compatibility')\n+      END\n+   END\n+END IsBaseCompatible ;\n+\n+\n+(*\n+   IsRealType - returns TRUE if, t, is a real type.\n+*)\n+\n+PROCEDURE IsRealType (t: CARDINAL) : BOOLEAN ;\n+BEGIN\n+   RETURN( (t=Real) OR (t=LongReal) OR (t=ShortReal) OR (t=RType) )\n+END IsRealType ;\n+\n+\n+(*\n+   CannotCheckTypeInPass3 - returns TRUE if we are unable to check the\n+                            type of, e, in pass 3.\n+*)\n+\n+PROCEDURE CannotCheckTypeInPass3 (e: CARDINAL) : BOOLEAN ;\n+VAR\n+   t : CARDINAL ;\n+   mt: MetaType ;\n+BEGIN\n+   t := SkipType(GetType(e)) ;\n+   mt := FindMetaType(t) ;\n+   CASE mt OF\n+\n+   pointer,\n+   enum,\n+   set,\n+   set8,\n+   set16,\n+   set32,\n+   opaque :  RETURN( TRUE )\n+\n+   ELSE\n+      RETURN( FALSE )\n+   END\n+END CannotCheckTypeInPass3 ;\n+\n+\n+(*\n+   IsCompatible - returns true if the types, t1, and, t2, are compatible.\n+*)\n+\n+PROCEDURE IsCompatible (t1, t2: CARDINAL; kind: Compatability) : Compatible ;\n+BEGIN\n+   t1 := SkipType (t1) ;\n+   t2 := SkipType (t2) ;\n+   IF t1 = t2\n+   THEN\n+      (* same types are always compatible.  *)\n+      RETURN first\n+   ELSIF IsPassCodeGeneration ()\n+   THEN\n+      RETURN AfterResolved (t1, t2, kind)\n+   ELSE\n+      RETURN BeforeResolved (t1, t2, kind)\n+   END\n+END IsCompatible ;\n+\n+\n+(*\n+   IsPointerSame - returns TRUE if pointers, a, and, b, are the same.\n+*)\n+\n+PROCEDURE IsPointerSame (a, b: CARDINAL; error: BOOLEAN) : BOOLEAN ;\n+BEGIN\n+   RETURN( IsSameType(SkipType(GetType(a)), SkipType(GetType(b)), error) )\n+END IsPointerSame ;\n+\n+\n+(*\n+   IsSubrangeSame - checks to see whether the subranges are the same.\n+*)\n+\n+PROCEDURE IsSubrangeSame (a, b: CARDINAL) : BOOLEAN ;\n+VAR\n+   al, ah,\n+   bl, bh: CARDINAL ;\n+BEGIN\n+   a := SkipType(a) ;\n+   b := SkipType(b) ;\n+   IF a#b\n+   THEN\n+      GetSubrange(a, ah, al) ;\n+      GetSubrange(b, bh, bl) ;\n+      PushValue(al) ;\n+      PushValue(bl) ;\n+      IF NOT Equ(GetDeclaredMod(a))\n+      THEN\n+         RETURN( FALSE )\n+      END ;\n+      PushValue(ah) ;\n+      PushValue(bh) ;\n+      IF NOT Equ(GetDeclaredMod(a))\n+      THEN\n+         RETURN( FALSE )\n+      END\n+   END ;\n+   RETURN( TRUE )\n+END IsSubrangeSame ;\n+\n+\n+(*\n+   IsVarientSame - returns TRUE if varient types, a, and, b, are identical.\n+*)\n+\n+PROCEDURE IsVarientSame (a, b: CARDINAL; error: BOOLEAN) : BOOLEAN ;\n+VAR\n+   i, j  : CARDINAL ;\n+   fa, fb,\n+   ga, gb: CARDINAL ;\n+BEGIN\n+   i := 1 ;\n+   ga := NulSym ;\n+   gb := NulSym ;\n+   REPEAT\n+      fa := GetNth(a, i) ;\n+      fb := GetNth(b, i) ;\n+      IF (fa#NulSym) AND (fb#NulSym)\n+      THEN\n+         Assert(IsFieldVarient(fa)) ;\n+         Assert(IsFieldVarient(fb)) ;\n+         j := 1 ;\n+         REPEAT\n+            ga := GetNth(fa, j) ;\n+            gb := GetNth(fb, j) ;\n+            IF (ga#NulSym) AND (gb#NulSym)\n+            THEN\n+               IF NOT IsSameType(GetType(ga), GetType(gb), error)\n+               THEN\n+                  RETURN( FALSE )\n+               END ;\n+               INC(j)\n+            END\n+         UNTIL (ga=NulSym) OR (gb=NulSym) ;\n+         IF ga#gb\n+         THEN\n+            RETURN( FALSE )\n+         END\n+      END ;\n+      INC(i)\n+   UNTIL (fa=NulSym) OR (fb=NulSym) ;\n+   RETURN( ga=gb )\n+END IsVarientSame ;\n+\n+\n+(*\n+   IsRecordSame -\n+*)\n+\n+PROCEDURE IsRecordSame (a, b: CARDINAL; error: BOOLEAN) : BOOLEAN ;\n+VAR\n+   ta, tb,\n+   fa, fb: CARDINAL ;\n+   i     : CARDINAL ;\n+BEGIN\n+   i := 1 ;\n+   REPEAT\n+      fa := GetNth(a, i) ;\n+      fb := GetNth(b, i) ;\n+      IF (fa#NulSym) AND (fb#NulSym)\n+      THEN\n+         ta := GetType(fa) ;\n+         tb := GetType(fb) ;\n+         IF IsRecordField(fa) AND IsRecordField(fb)\n+         THEN\n+            IF NOT IsSameType(ta, tb, error)\n+            THEN\n+               RETURN( FALSE )\n+            END\n+         ELSIF IsVarient(fa) AND IsVarient(fb)\n+         THEN\n+            IF NOT IsVarientSame(ta, tb, error)\n+            THEN\n+               RETURN( FALSE )\n+            END\n+      \t ELSIF IsFieldVarient(fa) OR IsFieldVarient(fb)\n+      \t THEN\n+            InternalError ('should not see a field varient')\n+         ELSE\n+            RETURN( FALSE )\n+      \t END\n+      END ;\n+      INC(i)\n+   UNTIL (fa=NulSym) OR (fb=NulSym) ;\n+   RETURN( fa=fb )\n+END IsRecordSame ;\n+\n+\n+(*\n+   IsArraySame -\n+*)\n+\n+PROCEDURE IsArraySame (t1, t2: CARDINAL; error: BOOLEAN) : BOOLEAN ;\n+VAR\n+   s1, s2: CARDINAL ;\n+BEGIN\n+   s1 := GetArraySubscript(t1) ;\n+   s2 := GetArraySubscript(t2) ;\n+   RETURN( IsSameType(GetType(s1), GetType(s2), error) AND\n+           IsSameType(GetType(t1), GetType(t2), error) )\n+END IsArraySame ;\n+\n+\n+(*\n+   IsEnumerationSame -\n+*)\n+\n+PROCEDURE IsEnumerationSame (t1, t2: CARDINAL) : BOOLEAN ;\n+BEGIN\n+   RETURN( t1=t2 )\n+END IsEnumerationSame ;\n+\n+\n+(*\n+   IsSetSame -\n+*)\n+\n+PROCEDURE IsSetSame (t1, t2: CARDINAL; error: BOOLEAN) : BOOLEAN ;\n+BEGIN\n+   RETURN( IsSameType(GetType(t1), GetType(t2), error) )\n+END IsSetSame ;\n+\n+\n+(*\n+   IsSameType - returns TRUE if\n+*)\n+\n+PROCEDURE IsSameType (t1, t2: CARDINAL; error: BOOLEAN) : BOOLEAN ;\n+BEGIN\n+   t1 := SkipType(t1) ;\n+   t2 := SkipType(t2) ;\n+   IF t1=t2\n+   THEN\n+      RETURN( TRUE )\n+   ELSIF IsArray(t1) AND IsArray(t2)\n+   THEN\n+      RETURN( IsArraySame(t1, t2, error) )\n+   ELSIF IsSubrange(t1) AND IsSubrange(t2)\n+   THEN\n+      RETURN( IsSubrangeSame(t1, t2) )\n+   ELSIF IsProcType(t1) AND IsProcType(t2)\n+   THEN\n+      RETURN( IsProcTypeSame(t1, t2, error) )\n+   ELSIF IsEnumeration(t1) AND IsEnumeration(t2)\n+   THEN\n+      RETURN( IsEnumerationSame(t1, t2 (* , error *) ) )\n+   ELSIF IsRecord(t1) AND IsRecord(t2)\n+   THEN\n+      RETURN( IsRecordSame(t1, t2, error) )\n+   ELSIF IsSet(t1) AND IsSet(t2)\n+   THEN\n+      RETURN( IsSetSame(t1, t2, error) )\n+   ELSIF IsPointer(t1) AND IsPointer(t2)\n+   THEN\n+      RETURN( IsPointerSame(t1, t2, error) )\n+   ELSE\n+      RETURN( FALSE )\n+   END\n+END IsSameType ;\n+\n+\n+(*\n+   IsProcTypeSame -\n+*)\n+\n+PROCEDURE IsProcTypeSame (p1, p2: CARDINAL; error: BOOLEAN) : BOOLEAN ;\n+VAR\n+   pa, pb: CARDINAL ;\n+   n, i  : CARDINAL ;\n+BEGIN\n+   n := NoOfParam(p1) ;\n+   IF n#NoOfParam(p2)\n+   THEN\n+      IF error\n+      THEN\n+         MetaError2('parameter is incompatible as {%1Dd} was declared with {%2n} parameters', p1, NoOfParam(p1)) ;\n+         MetaError2('whereas {%1Dd} was declared with {%2n} parameters', p2, NoOfParam(p2))\n+      END ;\n+      RETURN( FALSE )\n+   END ;\n+   i := 1 ;\n+   WHILE i<=n DO\n+      pa := GetNthParam(p1, i) ;\n+      pb := GetNthParam(p2, i) ;\n+      IF IsVarParam(p1, i)#IsVarParam(p2, i)\n+      THEN\n+         IF error\n+         THEN\n+            MetaErrors3('the {%1n} parameter is incompatible between {%2Dad} and {%3ad} as only one was declared as VAR',\n+                        'the {%1n} parameter is incompatible between {%2ad} and {%3Dad} as only one was declared as VAR',\n+                        i, p1, p2)\n+         END ;\n+         RETURN( FALSE )\n+      END ;\n+      IF NOT IsSameType(GetType(pa), GetType(pb), error)\n+      THEN\n+         RETURN( FALSE )\n+      END ;\n+      INC(i)\n+   END ;\n+   RETURN( IsSameType(GetType(p1), GetType(p2), error) )\n+END IsProcTypeSame ;\n+\n+\n+(*\n+   doProcTypeCheck -\n+*)\n+\n+PROCEDURE doProcTypeCheck (p1, p2: CARDINAL; error: BOOLEAN) : BOOLEAN ;\n+BEGIN\n+   IF (IsProcType(p1) OR IsProcedure(p1)) AND\n+      (IsProcType(p2) OR IsProcedure(p2))\n+   THEN\n+      IF p1=p2\n+      THEN\n+         RETURN( TRUE )\n+      ELSE\n+         RETURN( IsProcTypeSame(p1, p2, error) )\n+      END\n+   ELSE\n+      RETURN( FALSE )\n+   END\n+END doProcTypeCheck ;\n+\n+\n+(*\n+   AfterResolved - a thorough test for type compatibility.\n+*)\n+\n+PROCEDURE AfterResolved (t1, t2: CARDINAL; kind: Compatability) : Compatible ;\n+VAR\n+   mt1, mt2: MetaType ;\n+BEGIN\n+   IF (t1=NulSym) OR (t2=NulSym)\n+   THEN\n+      RETURN( first )\n+   ELSIF ((kind=parameter) OR (kind=assignment)) AND (t1=t2)\n+   THEN\n+      RETURN( first )\n+   ELSIF IsSubrange(t1)\n+   THEN\n+      RETURN( IsCompatible(GetType(t1), t2, kind) )\n+   ELSIF IsSubrange(t2)\n+   THEN\n+      RETURN( IsCompatible(t1, GetType(t2), kind) )\n+   ELSE\n+      mt1 := FindMetaType(t1) ;\n+      mt2 := FindMetaType(t2) ;\n+      IF mt1=mt2\n+      THEN\n+         CASE mt1 OF\n+\n+         set,\n+         set8,\n+         set16,\n+         set32    :  IF IsSetSame(t1, t2, FALSE)\n+                     THEN\n+                        RETURN( first )\n+                     ELSE\n+                        RETURN( no )\n+                     END |\n+         enum     :  IF IsEnumerationSame(t1, t2 (* , FALSE *) )\n+                     THEN\n+                        RETURN( first )\n+                     ELSE\n+                        RETURN( no )\n+                     END |\n+         pointer  :  IF IsPointerSame(t1, t2, FALSE)\n+                     THEN\n+                        RETURN( first )\n+                     ELSE\n+                        RETURN( no )\n+                     END |\n+         opaque   :  RETURN( no ) |\n+         procedure:  IF doProcTypeCheck(t1, t2, FALSE)\n+                     THEN\n+                        RETURN( first )\n+                     ELSE\n+                        RETURN( no )\n+                     END\n+\n+         ELSE\n+            (* fall through *)\n+         END\n+      END ;\n+      RETURN( IsBaseCompatible(t1, t2, kind) )\n+   END\n+END AfterResolved ;\n+\n+\n+(*\n+   BeforeResolved - attempts to test for type compatibility before all types are\n+                    completely resolved.  In particular set types and constructor\n+                    types are not fully known before the end of pass 3.\n+                    However we can test base types.\n+*)\n+\n+PROCEDURE BeforeResolved (t1, t2: CARDINAL; kind: Compatability) : Compatible ;\n+BEGIN\n+   IF (t1=NulSym) OR (t2=NulSym)\n+   THEN\n+      RETURN( first )\n+   ELSIF IsSubrange(t1)\n+   THEN\n+      RETURN( IsCompatible(GetType(t1), t2, kind) )\n+   ELSIF IsSubrange(t2)\n+   THEN\n+      RETURN( IsCompatible(t1, GetType(t2), kind) )\n+   ELSIF IsSet(t1) OR IsSet(t2)\n+   THEN\n+      (* cannot test set compatibility at this point so we do this again after pass 3 *)\n+      RETURN( first )\n+   ELSIF (IsProcType(t1) AND IsProcedure(t2)) OR\n+         (IsProcedure(t1) AND IsProcType(t2))\n+   THEN\n+      (* we will perform checking during code generation *)\n+      RETURN( first )\n+   ELSIF IsHiddenType (t1) AND IsHiddenType (t2)\n+   THEN\n+      IF t1 = t2\n+      THEN\n+         MetaError0 ('assert about to fail as t1 = t2')\n+      END ;\n+      Assert (t1 # t2) ;\n+      (* different opaque types are not assignment or expression compatible.  *)\n+      RETURN no\n+   ELSE\n+(*\n+   see M2Quads for the fixme comment at assignment.\n+\n+   PIM2 says that CARDINAL and INTEGER are compatible with subranges of CARDINAL and INTEGER,\n+        however we do not know the type to our subranges yet as (GetType(SubrangeType)=NulSym).\n+        So we add type checking in the range checking module which is done post pass 3,\n+        when all is resolved.\n+*)\n+\n+      RETURN IsBaseCompatible (t1, t2, kind)\n+   END\n+END BeforeResolved ;\n+\n+\n+(*\n+   AssignmentRequiresWarning - returns TRUE if t1 and t2 can be used during\n+                               an assignment, but should generate a warning.\n+                               For example in PIM we can assign ADDRESS\n+                               and WORD providing they are both the\n+                               same size.\n+                               No warning is necessary if the types are the same.\n+*)\n+\n+PROCEDURE AssignmentRequiresWarning (t1, t2: CARDINAL) : BOOLEAN ;\n+BEGIN\n+   RETURN ((t1 # t2) AND\n+           ((IsCompatible(t1, t2, assignment)=warnfirst) OR\n+            (IsCompatible(t1, t2, assignment)=warnsecond)))\n+END AssignmentRequiresWarning ;\n+\n+\n+(*\n+   IsAssignmentCompatible - returns TRUE if t1 and t2 are assignment\n+                            compatible.\n+*)\n+\n+PROCEDURE IsAssignmentCompatible (t1, t2: CARDINAL) : BOOLEAN ;\n+BEGIN\n+   RETURN(\n+          (t1=t2) OR\n+          (IsCompatible(t1, t2, assignment)=first) OR\n+          (IsCompatible(t1, t2, assignment)=second)\n+         )\n+END IsAssignmentCompatible ;\n+\n+\n+(*\n+   IsExpressionCompatible - returns TRUE if t1 and t2 are expression\n+                            compatible.\n+*)\n+\n+PROCEDURE IsExpressionCompatible (t1, t2: CARDINAL) : BOOLEAN ;\n+BEGIN\n+   RETURN(\n+          (IsCompatible(t1, t2, expression)=first) OR\n+          (IsCompatible(t1, t2, expression)=second)\n+         )\n+END IsExpressionCompatible ;\n+\n+\n+(*\n+   IsParameterCompatible - returns TRUE if t1 and t2 are expression\n+                           compatible.\n+*)\n+\n+PROCEDURE IsParameterCompatible (t1, t2: CARDINAL (* ; tokenNo: CARDINAL *) ) : BOOLEAN ;\n+BEGIN\n+   RETURN(\n+          (IsCompatible(t1, t2, parameter)=first) OR\n+          (IsCompatible(t1, t2, parameter)=second)\n+         )\n+END IsParameterCompatible ;\n+\n+\n+(*\n+   IsComparisonCompatible - returns TRUE if t1 and t2 are comparison compatible.\n+*)\n+\n+PROCEDURE IsComparisonCompatible (t1, t2: CARDINAL (* ; tokenNo: CARDINAL *) ) : BOOLEAN ;\n+BEGIN\n+   RETURN(\n+          (IsCompatible(t1, t2, comparison)=first) OR\n+          (IsCompatible(t1, t2, comparison)=second)\n+         )\n+END IsComparisonCompatible ;\n+\n+\n+(*\n+   MixMetaTypes -\n+*)\n+\n+PROCEDURE MixMetaTypes (t1, t2: CARDINAL; NearTok: CARDINAL) : CARDINAL ;\n+VAR\n+   mt1, mt2: MetaType ;\n+BEGIN\n+   mt1 := FindMetaType(t1) ;\n+   mt2 := FindMetaType(t2) ;\n+   CASE Expr[mt1, mt2] OF\n+\n+   no        :  MetaErrorT2 (NearTok, 'type incompatibility between {%1as} and {%2as}', t1, t2) ;\n+                FlushErrors  (* unrecoverable at present *) |\n+   warnfirst,\n+   first     :  RETURN( t1 ) |\n+   warnsecond,\n+   second    :  RETURN( t2 )\n+\n+   ELSE\n+      InternalError ('not expecting this metatype value')\n+   END\n+END MixMetaTypes ;\n+\n+\n+(*\n+   MixTypes - given types, t1 and t2, returns a type symbol that\n+              provides expression type compatibility.\n+              NearTok is used to identify the source position if a type\n+              incompatability occurs.\n+*)\n+\n+PROCEDURE MixTypes (t1, t2: CARDINAL; NearTok: CARDINAL) : CARDINAL ;\n+BEGIN\n+   IF t1=t2\n+   THEN\n+      RETURN( t1 )\n+   ELSIF (t1=Address) AND (t2=Cardinal)\n+   THEN\n+      RETURN( Address )\n+   ELSIF (t1=Cardinal) AND (t2=Address)\n+   THEN\n+      RETURN( Address )\n+   ELSIF (t1=Address) AND (t2=Integer)\n+   THEN\n+      RETURN( Address )\n+   ELSIF (t1=Integer) AND (t2=Address)\n+   THEN\n+      RETURN( Address )\n+   ELSIF t1=NulSym\n+   THEN\n+      RETURN( t2 )\n+   ELSIF t2=NulSym\n+   THEN\n+      RETURN( t1 )\n+   ELSIF (t1=Bitset) AND IsSet(t2)\n+   THEN\n+      RETURN( t1 )\n+   ELSIF IsSet(t1) AND (t2=Bitset)\n+   THEN\n+      RETURN( t2 )\n+   ELSIF IsEnumeration(t1)\n+   THEN\n+      RETURN( MixTypes(Integer, t2, NearTok) )\n+   ELSIF IsEnumeration(t2)\n+   THEN\n+      RETURN( MixTypes(t1, Integer, NearTok) )\n+   ELSIF IsSubrange(t1)\n+   THEN\n+      RETURN( MixTypes(GetType(t1), t2, NearTok) )\n+   ELSIF IsSubrange(t2)\n+   THEN\n+      RETURN( MixTypes(t1, GetType(t2), NearTok) )\n+   ELSIF IsRealType(t1) AND IsRealType(t2)\n+   THEN\n+      IF t1=RType\n+      THEN\n+         RETURN( t2 )\n+      ELSIF t2=RType\n+      THEN\n+         RETURN( t1 )\n+      ELSE\n+         RETURN( RType )\n+      END\n+   ELSIF IsComplexType(t1) AND IsComplexType(t2)\n+   THEN\n+      IF t1=CType\n+      THEN\n+         RETURN( t2 )\n+      ELSIF t2=CType\n+      THEN\n+         RETURN( t1 )\n+      ELSE\n+         RETURN( CType )\n+      END\n+   ELSIF IsType(t1)\n+   THEN\n+      RETURN( MixTypes(GetType(t1), t2, NearTok) )\n+   ELSIF IsType(t2)\n+   THEN\n+      RETURN( MixTypes(t1, GetType(t2), NearTok) )\n+   ELSIF (t1=GetLowestType(t1)) AND (t2=GetLowestType(t2))\n+   THEN\n+      RETURN( MixMetaTypes(t1, t2, NearTok) )\n+   ELSE\n+      t1 := GetLowestType(t1) ;\n+      t2 := GetLowestType(t2) ;\n+      RETURN( MixTypes(t1, t2, NearTok) )\n+   END\n+END MixTypes ;\n+\n+\n+(*\n+   NegateType - if the type is unsigned then returns the\n+                signed equivalent.\n+*)\n+\n+PROCEDURE NegateType (type: CARDINAL (* ; sympos: CARDINAL *) ) : CARDINAL ;\n+VAR\n+   lowType: CARDINAL ;\n+BEGIN\n+   IF type#NulSym\n+   THEN\n+      lowType := GetLowestType (type) ;\n+      IF lowType=LongCard\n+      THEN\n+         RETURN LongInt\n+      ELSIF lowType=Cardinal\n+      THEN\n+         RETURN Integer\n+(*      ELSE\n+         MetaErrorT1 (sympos, 'the type {%1ad} does not have a negated equivalent and an unary minus cannot be used on an operand of this type', type)\n+*)\n+      END\n+   END ;\n+   RETURN type\n+END NegateType ;\n+\n+\n+(*\n+   IsMathType - returns TRUE if the type is a mathematical type.\n+                A mathematical type has a range larger than INTEGER.\n+                (Typically SHORTREAL/REAL/LONGREAL/LONGINT/LONGCARD)\n+*)\n+\n+PROCEDURE IsMathType (type: CARDINAL) : BOOLEAN ;\n+BEGIN\n+   RETURN(\n+          (type=LongCard) OR (type=LongInt) OR (type=Real) OR\n+          (type=LongReal) OR (type=ShortReal) OR\n+          (type=RType) OR (type=ZType)\n+         )\n+END IsMathType ;\n+\n+\n+(*\n+   IsVarParamCompatible - returns TRUE if types, actual, and, formal\n+                          are compatible even if formal is a VAR\n+                          parameter.\n+*)\n+\n+PROCEDURE IsVarParamCompatible (actual, formal: CARDINAL) : BOOLEAN ;\n+BEGIN\n+   actual := SkipType(actual) ;\n+   formal := SkipType(formal) ;\n+   IF IsParameter(formal) AND IsParameterUnbounded(formal)\n+   THEN\n+      formal := SkipType(GetType(GetType(formal))) ;   (* move over unbounded *)\n+      IF IsGenericSystemType(formal)\n+      THEN\n+         RETURN( TRUE )\n+      END ;\n+      RETURN( (formal=actual) OR (IsArray(actual) AND (formal=SkipType(GetType(actual)))) )\n+   ELSE\n+      RETURN( (actual=formal) OR\n+              (IsPointer(actual) AND (formal=Address)) OR\n+              (IsPointer(formal) AND (actual=Address)) OR\n+              (IsGenericSystemType(actual) AND IsSizeSame(FindMetaType(actual), FindMetaType(formal))) OR\n+              (IsGenericSystemType(formal) AND IsSizeSame(FindMetaType(actual), FindMetaType(formal))) OR\n+              IsSameSizePervasiveType(formal, actual) )\n+   END\n+END IsVarParamCompatible ;\n+\n+\n+(*\n+   IsArrayUnboundedCompatible - returns TRUE if unbounded or array types, t1, and, t2,\n+                                are compatible.\n+*)\n+\n+PROCEDURE IsArrayUnboundedCompatible (t1, t2: CARDINAL) : BOOLEAN ;\n+BEGIN\n+   IF (t1=NulSym) OR (t2=NulSym)\n+   THEN\n+      RETURN( FALSE)\n+   ELSIF (IsUnbounded(t1) OR IsArray(t1)) AND\n+         (IsUnbounded(t2) OR IsArray(t2))\n+   THEN\n+      RETURN( SkipType(GetType(t1))=SkipType(GetType(t2)) )\n+   ELSE\n+      RETURN( FALSE )\n+   END\n+END IsArrayUnboundedCompatible ;\n+\n+\n+(*\n+   IsValidUnboundedParameter -\n+*)\n+\n+PROCEDURE IsValidUnboundedParameter (formal, actual: CARDINAL) : BOOLEAN ;\n+VAR\n+   ft, at : CARDINAL ;\n+   n, m, o: CARDINAL ;\n+BEGIN\n+   Assert(IsParameterUnbounded(formal)) ;\n+   ft := SkipType(GetType(GetType(formal))) ;    (* ARRAY OF ft *)\n+   IF IsGenericSystemType(ft) OR IsArrayUnboundedCompatible(GetType(formal), GetType(actual))\n+   THEN\n+      RETURN( TRUE )\n+   ELSE\n+      IF IsParameter(actual) AND IsParameterUnbounded(actual)\n+      THEN\n+         n := GetDimension(actual) ;\n+         m := GetDimension(formal) ;\n+         IF n#m\n+         THEN\n+            RETURN( IsGenericSystemType(ft) AND (n<m) )\n+         ELSE\n+            RETURN( (GetDimension(actual)=GetDimension(formal)) AND\n+                    IsParameterCompatible(GetType(GetType(actual)), ft) )\n+         END\n+      ELSE\n+         IF IsConstString(actual)\n+         THEN\n+            RETURN( IsParameterCompatible(Char, ft) )\n+         ELSE\n+            at := SkipType(GetType(actual)) ;\n+            IF IsArray(at)\n+            THEN\n+               m := GetDimension(formal) ;\n+               n := GetDimension(at) ;\n+               o := 0 ;\n+               WHILE IsArray(at) DO\n+                  INC(o) ;\n+                  at := SkipType(GetType(at)) ;\n+                  IF (m=o) AND (at=ft)\n+                  THEN\n+                     RETURN( TRUE )\n+                  END\n+               END ;\n+               IF n#m\n+               THEN\n+                  RETURN( IsGenericSystemType(ft) AND (n<m) )\n+               ELSIF IsParameterVar(formal)\n+               THEN\n+                  RETURN( IsVarParamCompatible(at, formal) )\n+               ELSE\n+                  RETURN( IsParameterCompatible(at, ft) )\n+               END\n+            ELSE\n+               IF IsParameterVar(formal)\n+               THEN\n+                  RETURN( IsVarParamCompatible(at, formal) )\n+               ELSE\n+                  RETURN( IsParameterCompatible(at, ft) )\n+               END\n+            END\n+         END\n+      END\n+   END\n+END IsValidUnboundedParameter ;\n+\n+\n+(*\n+   IsValidParameter - returns TRUE if an, actual, parameter can be passed\n+                      to the, formal, parameter.  This differs from\n+                      IsParameterCompatible as this procedure includes checks\n+                      for unbounded formal parameters, var parameters and\n+                      constant actual parameters.\n+*)\n+\n+PROCEDURE IsValidParameter (formal, actual: CARDINAL (* ; tokenNo: CARDINAL *) ) : BOOLEAN ;\n+VAR\n+   at, ft: CARDINAL ;\n+BEGIN\n+   Assert(IsParameter(formal)) ;\n+   Assert(IsPassCodeGeneration()) ;\n+   IF IsConst(actual) AND IsParameterVar(formal)\n+   THEN\n+      RETURN( FALSE )\n+   ELSE\n+      IF IsParameterUnbounded(formal)\n+      THEN\n+         RETURN( IsValidUnboundedParameter(formal, actual) )\n+      ELSE\n+         ft := SkipType(GetType(formal))\n+      END ;\n+      IF IsConst(actual) AND (SkipType(GetType(actual))=Char) AND IsArray(ft) AND (SkipType(GetType(ft))=Char)\n+      THEN\n+         (* a constant char can be either a char or a string *)\n+         RETURN( TRUE )\n+      END ;\n+      IF IsProcType(ft)\n+      THEN\n+         IF IsProcedure(actual)\n+         THEN\n+            (* we check this by calling IsValidProcedure for each and every\n+               parameter of actual and formal *)\n+            RETURN( TRUE )\n+         ELSE\n+            at := SkipType(GetType(actual)) ;\n+            RETURN( doProcTypeCheck(at, ft, TRUE) )\n+         END\n+      ELSIF IsParameterVar(formal)\n+      THEN\n+         RETURN( IsVarParamCompatible(GetType(actual), ft) )\n+      ELSE\n+         RETURN( IsParameterCompatible(GetType(actual), ft) )\n+      END\n+   END\n+END IsValidParameter ;\n+\n+\n+(*\n+   PushSizeOf - pushes the size of a meta type.\n+*)\n+\n+PROCEDURE PushSizeOf (t: MetaType) ;\n+BEGIN\n+   CASE t OF\n+\n+   const    :   InternalError ('do not know the size of a constant') |\n+   word     :   IF Iso\n+                THEN\n+                   PushIntegerTree(GetSizeOf(BuiltinsLocation(), GetISOWordType()))\n+                ELSE\n+                   PushIntegerTree(GetSizeOf(BuiltinsLocation(), GetWordType()))\n+                END |\n+   byte     :   IF Iso\n+                THEN\n+                   PushIntegerTree(GetSizeOf(BuiltinsLocation(), GetISOByteType()))\n+                ELSE\n+                   PushIntegerTree(GetSizeOf(BuiltinsLocation(), GetByteType()))\n+                END |\n+   address  :   PushIntegerTree(GetSizeOf(BuiltinsLocation(), GetPointerType())) |\n+   chr      :   PushIntegerTree(GetSizeOf(BuiltinsLocation(), GetM2CharType())) |\n+   normint  :   PushIntegerTree(GetSizeOf(BuiltinsLocation(), GetM2IntegerType())) |\n+   shortint :   PushIntegerTree(GetSizeOf(BuiltinsLocation(), GetM2ShortIntType())) |\n+   longint  :   PushIntegerTree(GetSizeOf(BuiltinsLocation(), GetM2LongIntType())) |\n+   normcard :   PushIntegerTree(GetSizeOf(BuiltinsLocation(), GetM2CardinalType())) |\n+   shortcard:   PushIntegerTree(GetSizeOf(BuiltinsLocation(), GetM2ShortCardType())) |\n+   longcard :   PushIntegerTree(GetSizeOf(BuiltinsLocation(), GetM2LongCardType())) |\n+   pointer  :   PushIntegerTree(GetSizeOf(BuiltinsLocation(), GetPointerType())) |\n+   enum     :   PushIntegerTree(GetSizeOf(BuiltinsLocation(), GetIntegerType())) |\n+   real     :   PushIntegerTree(GetSizeOf(BuiltinsLocation(), GetM2RealType())) |\n+   shortreal:   PushIntegerTree(GetSizeOf(BuiltinsLocation(), GetM2ShortRealType())) |\n+   longreal :   PushIntegerTree(GetSizeOf(BuiltinsLocation(), GetM2LongRealType())) |\n+   set      :   InternalError ('do not know the size of a set') |\n+   opaque   :   InternalError ('do not know the size of an opaque') |\n+   loc      :   PushIntegerTree(GetSizeOf(BuiltinsLocation(), GetISOLocType())) |\n+   rtype    :   PushIntegerTree(GetSizeOf(BuiltinsLocation(), GetM2RType())) |\n+   ztype    :   PushIntegerTree(GetSizeOf(BuiltinsLocation(), GetM2ZType())) |\n+   int8,\n+   card8,\n+   set8     :   PushIntegerTree(BuildIntegerConstant(1)) |\n+   word16,\n+   set16,\n+   card16,\n+   int16    :   PushIntegerTree(BuildIntegerConstant(2)) |\n+   real32,\n+   word32,\n+   set32,\n+   card32,\n+   int32    :   PushIntegerTree(BuildIntegerConstant(4)) |\n+   real64,\n+   word64,\n+   card64,\n+   int64    :   PushIntegerTree(BuildIntegerConstant(8)) |\n+   real96   :   PushIntegerTree(BuildIntegerConstant(12)) |\n+   real128  :   PushIntegerTree(BuildIntegerConstant(16)) |\n+   complex  :   PushIntegerTree(GetSizeOf(BuiltinsLocation(), GetM2ComplexType())) |\n+   shortcomplex: PushIntegerTree(GetSizeOf(BuiltinsLocation(), GetM2ShortComplexType())) |\n+   longcomplex:  PushIntegerTree(GetSizeOf(BuiltinsLocation(), GetM2LongComplexType())) |\n+   complex32:  PushIntegerTree(BuildIntegerConstant(4*2)) |\n+   complex64:  PushIntegerTree(BuildIntegerConstant(8*2)) |\n+   complex96:  PushIntegerTree(BuildIntegerConstant(12*2)) |\n+   complex128:  PushIntegerTree(BuildIntegerConstant(16*2)) |\n+   ctype     :  PushIntegerTree(GetSizeOf(BuiltinsLocation(), GetM2CType())) |\n+\n+   unknown  :   InternalError ('should not get here')\n+\n+   ELSE\n+      InternalError ('should not get here')\n+   END\n+END PushSizeOf ;\n+\n+\n+(*\n+   IsSizeSame -\n+*)\n+\n+PROCEDURE IsSizeSame (t1, t2: MetaType) : BOOLEAN ;\n+BEGIN\n+   PushSizeOf(t1) ;\n+   PushSizeOf(t2) ;\n+   RETURN( Equ(0) )\n+END IsSizeSame ;\n+\n+\n+(*\n+   InitArray -\n+*)\n+\n+PROCEDURE InitArray (VAR c: CompatibilityArray;\n+                     y: MetaType; a: ARRAY OF CHAR) ;\n+VAR\n+   x   : MetaType ;\n+   h, i: CARDINAL ;\n+BEGIN\n+   h := StrLen(a) ;\n+   i := 0 ;\n+   x := MIN(MetaType) ;\n+   WHILE i<h DO\n+      IF (c[x, y]#uninitialized) AND (x#unknown) AND (y#unknown)\n+      THEN\n+         InternalError('expecting array element to be uninitialized')\n+      END ;\n+      CASE a[i] OF\n+\n+      ' ':  |\n+      '.':  CASE c[y, x] OF\n+\n+            uninitialized:  InternalError('cannot reflect value as it is unknown') |\n+            first        :  c[x, y] := second |\n+            second       :  c[x, y] := first |\n+            warnfirst    :  c[x, y] := warnsecond |\n+            warnsecond   :  c[x, y] := warnfirst\n+\n+            ELSE\n+               c[x, y] := c[y, x]\n+            END ;\n+            INC(x) |\n+      'F':  c[x, y] := no ;\n+            INC(x) |\n+      'T',\n+      '1':  c[x, y] := first ;\n+            INC(x) |\n+      '2':  c[x, y] := second ;\n+            INC(x) |\n+      'W':  IF Pim\n+            THEN\n+               IF IsSizeSame(x, y)\n+               THEN\n+                  c[x, y] := warnsecond\n+               ELSE\n+                  c[x, y] := no\n+               END\n+            ELSE\n+               c[x, y] := no\n+            END ;\n+            INC(x) |\n+      'w':  IF Pim\n+            THEN\n+               IF IsSizeSame(x, y)\n+               THEN\n+                  c[x, y] := warnfirst\n+               ELSE\n+                  c[x, y] := no\n+               END\n+            ELSE\n+               c[x, y] := no\n+            END ;\n+            INC(x) |\n+      'P':  IF Pim\n+            THEN\n+               c[x, y] := second\n+            ELSE\n+               c[x, y] := no\n+            END ;\n+            INC(x) |\n+      'p':  IF Pim\n+            THEN\n+               c[x, y] := first\n+            ELSE\n+               c[x, y] := no\n+            END ;\n+            INC(x) |\n+      's':  IF IsSizeSame(x, y)\n+            THEN\n+               c[x, y] := first\n+            ELSE\n+               c[x, y] := no\n+            END ;\n+            INC(x) |\n+      'S':  IF IsSizeSame(x, y)\n+            THEN\n+               c[x, y] := second\n+            ELSE\n+               c[x, y] := no\n+            END ;\n+            INC(x) |\n+\n+\n+      ELSE\n+         InternalError ('unexpected specifier')\n+      END ;\n+      INC(i)\n+   END\n+END InitArray ;\n+\n+\n+(*\n+   A - initialize the assignment array\n+*)\n+\n+PROCEDURE A (y: MetaType; a: ARRAY OF CHAR) ;\n+BEGIN\n+   InitArray (Ass, y, a)\n+END A ;\n+\n+\n+(*\n+   E - initialize the expression array\n+*)\n+\n+PROCEDURE E (y: MetaType; a: ARRAY OF CHAR) ;\n+BEGIN\n+   InitArray (Expr, y, a)\n+END E ;\n+\n+\n+(*\n+   C - initialize the comparision array\n+*)\n+\n+PROCEDURE C (y: MetaType; a: ARRAY OF CHAR) ;\n+BEGIN\n+   InitArray (Comp, y, a)\n+END C ;\n+\n+\n+(*\n+   InitCompatibilityMatrices - initializes the tables above.\n+*)\n+\n+PROCEDURE InitCompatibilityMatrices ;\n+VAR\n+   i, j: MetaType ;\n+BEGIN\n+   (* initialize to a known state *)\n+   FOR i := MIN(MetaType) TO MAX(MetaType) DO\n+      FOR j := MIN(MetaType) TO MAX(MetaType) DO\n+         Ass[i, j]  := uninitialized ;\n+         Expr[i, j]  := uninitialized\n+      END\n+   END ;\n+\n+   (* all unknowns are false *)\n+   FOR i := MIN(MetaType) TO MAX(MetaType) DO\n+      Ass[i, unknown]  := no ;\n+      Expr[unknown, i] := no\n+   END ;\n+\n+   (*\n+                                                     1 p w\n+\n+                    N W B A C I S L C S L P E R S L S O L R Z I I I I C C C C W W W R R R R S S S C S L C C C C C R A\n+                    u o y d h n h o a h o t n e h o e p o t t n n n n a a a a o o o e e e e e e e o h o o o o o t e r\n+                    l r t d a t o n r o n r u a o n t a c y y t t t t r r r r r r r a a a a t t t m o n m m m m y c r\n+                    S d e r r e r g d r g   m l r g   q   p p 8 1 3 6 d d d d d d d l l l l 8 1 3 p r g p p p p p   a\n+                    y     e   g t i i t c       t r   u   e e   6 2 4 8 1 3 6 1 3 6 3 6 9 1   6 2 l t C l l l l e   y\n+                    m     s   e i n n c a       r e   e                 6 2 4 6 2 4 2 4 6 2       e C o e e e e\n+                          s   r n t a a r       e a                                       8       x o m x x x x\n+                                t   l r d       a l                                                 m p 3 6 9 1\n+                                      d         l                                                   p l 2 4 6 2\n+                                                                                                    l e       8\n+                                                                                                    e x\n+                                                                                                    x\n+         ------------------------------------------------------------------------------------------------------------\n+   2\n+   P\n+   W\n+   *)\n+   A(const       , 'T T T T T T T T T T T T T T T T T T T F T T T T T T T T T T T T F F F F F F F F F F F F F F F F F') ;\n+   A(word        , '. T S S S 2 S S 2 S S S 2 S S S T T S S T S S S S S S S S S S S S S S S S S S S S S S S S S T T T') ;\n+   A(byte        , '. . T S 2 S S S S S S S S S S S T T S S T S S S S S S S S S S S S S S S S S S S S S S S S S T T T') ;\n+   A(address     , '. . . T F F F F F F F 2 F F F F F 2 2 F T F F F F F F F F F F F F F F F F F F F F F F F F F F F F') ;\n+   A(chr         , '. . . . T F F F F F F F F F F F F F 2 F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F') ;\n+   A(normint     , '. . . . . T T T T T T F F F F F F F F F T T T T T T T T T F F F F F F F F F F F F F F F F F F F F') ;\n+   A(shortint    , '. . . . . . T T T T T F F F F F F F F F T T T T T T T T T F F F F F F F F F F F F F F F F F F F F') ;\n+   A(longint     , '. . . . . . . T T T T F F F F F F F F F T T T T T T T T T F F F F F F F F F F F F F F F F F F F F') ;\n+   A(normcard    , '. . . . . . . . T T T F F F F F F F F F T T T T T T T T T F F F F F F F F F F F F F F F F F F F F') ;\n+   A(shortcard   , '. . . . . . . . . T T F F F F F F F F F T T T T T T T T T F F F F F F F F F F F F F F F F F F F F') ;\n+   A(longcard    , '. . . . . . . . . . T F F F F F F F F F T T T T T T T T T F F F F F F F F F F F F F F F F F F F F') ;\n+   A(pointer     , '. . . . . . . . . . . T F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F') ;\n+   A(enum        , '. . . . . . . . . . . . T F F F F F F F F F F F F F F F F F F F T T F F F F F F F F F F F F F F F') ;\n+   A(real        , '. . . . . . . . . . . . . T T T F F F 2 F F F F F F F F F F F F T T T T F F F F F F F F F F F F F') ;\n+   A(shortreal   , '. . . . . . . . . . . . . . T T F F F 2 F F F F F F F F F F F F T T T T F F F F F F F F F F F F F') ;\n+   A(longreal    , '. . . . . . . . . . . . . . . T F F F 2 F F F F F F F F F F F F T T T T F F F F F F F F F F F F F') ;\n+   A(set         , '. . . . . . . . . . . . . . . . T F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F') ;\n+   A(opaque      , '. . . . . . . . . . . . . . . . . T F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F') ;\n+   A(loc         , '. . . . . . . . . . . . . . . . . . T F F T F F F T F F F F F F F F F F S F F F F F F F F F F T T') ;\n+   A(rtype       , '. . . . . . . . . . . . . . . . . . . T F F F F F F F F F F F F 1 1 1 1 F F F F F F F F F F F F F') ;\n+   A(ztype       , '. . . . . . . . . . . . . . . . . . . . T T T T T T T T T T T T F F F F F F F F F F F F F F F F F') ;\n+   A(int8        , '. . . . . . . . . . . . . . . . . . . . . T T T T T T T T F F F F F F F F F F F F F F F F F F F F') ;\n+   A(int16       , '. . . . . . . . . . . . . . . . . . . . . . T T T T T T T T F F F F F F F F F F F F F F F F F F F') ;\n+   A(int32       , '. . . . . . . . . . . . . . . . . . . . . . . T T T T T T F T T F F F F F F F F F F F F F F F F F') ;\n+   A(int64       , '. . . . . . . . . . . . . . . . . . . . . . . . T T T T T F F F F F F F F F F F F F F F F F F F F') ;\n+   A(card8       , '. . . . . . . . . . . . . . . . . . . . . . . . . T T T T T F F F F F F F F F F F F F F F F F F F') ;\n+   A(card16      , '. . . . . . . . . . . . . . . . . . . . . . . . . . T T T F F F F F F F F F F F F F F F F F F F F') ;\n+   A(card32      , '. . . . . . . . . . . . . . . . . . . . . . . . . . . T T F T F F F F F F F F F F F F F F F F F F') ;\n+   A(card64      , '. . . . . . . . . . . . . . . . . . . . . . . . . . . . T F F T F F F F F F F F F F F F F F F F F') ;\n+   A(word16      , '. . . . . . . . . . . . . . . . . . . . . . . . . . . . . T F F F F F F F F F F F F F F F F F F F') ;\n+   A(word32      , '. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . T F T F F F F F F F F F F F F F F F F') ;\n+   A(word64      , '. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . T F T F F F F F F F F F F F F F F F') ;\n+   A(real32      , '. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . T F F F F F F F F F F F F F F F F') ;\n+   A(real64      , '. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . T F F F F F F F F F F F F F F F') ;\n+   A(real96      , '. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . T F F F F F F F F F F F F F F') ;\n+   A(real128     , '. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . T F F F F F F F F F F F F F') ;\n+   A(set8        , '. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . T F F F F F F F F F F F F') ;\n+   A(set16       , '. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . T F F F F F F F F F F F') ;\n+   A(set32       , '. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . T F F F F F F F F F F') ;\n+   A(complex     , '. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . T F F F F F F T F F') ;\n+   A(shortcomplex, '. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . T F F F F F T F F') ;\n+   A(longcomplex , '. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . T F F F F T F F') ;\n+   A(complex32   , '. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . T F F F T F F') ;\n+   A(complex64   , '. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . T F F T F F') ;\n+   A(complex96   , '. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . T F T F F') ;\n+   A(complex128  , '. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . T T F F') ;\n+   A(ctype       , '. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . T F F') ;\n+   A(rec         , '. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . T F') ;\n+   A(array       , '. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . T') ;\n+   (* Expression compatibility *)\n+\n+\n+   (*\n+                                                     1 p w\n+\n+                    N W B A C I S L C S L P E R S L S O L R Z I I I I C C C C W W W R R R R S S S C S L C C C C C R A\n+                    u o y d h n h o a h o t n e h o e p o t t n n n n a a a a o o o e e e e e e e o h o o o o o t e r\n+                    l r t d a t o n r o n r u a o n t a c y y t t t t r r r r r r r a a a a t t t m o n m m m m y c r\n+                    S d e r r e r g d r g   m l r g   q   p p 8 1 3 6 d d d d d d d l l l l 8 1 3 p r g p p p p p   a\n+                    y     e   g t i i t c       t r   u   e e   6 2 4 8 1 3 6 1 3 6 3 6 9 1   6 2 l t C l l l l e   y\n+                    m     s   e i n n c a       r e   e                 6 2 4 6 2 4 2 4 6 2       e C o e e e e\n+                          s   r n t a a r       e a                                       8       x o m x x x x\n+                                t   l r d       a l                                                 m p 3 6 9 1\n+                                      d         l                                                   p l 2 4 6 2\n+                                                                                                    l e       8\n+                                                                                                    e x\n+                                                                                                    x\n+         ------------------------------------------------------------------------------------------------------------\n+   2\n+   P\n+   W\n+   *)\n+\n+   E(const       , 'T T T T T T T T T T T T T T T T T T F F T T T T T T T T T T T T T T T T F F F F F F F F F F F F F') ;\n+   E(word        , '. T F F F F F F F F F F F F F F F F F W F F F F F F F F F F F F F F F F F F F F F F F F F F F F F') ;\n+   E(byte        , '. . T F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F') ;\n+   E(address     , '. . . T F P F F P F F T F F F F F F F F P F F F F F F F F F F F F F F F F F F F F F F F F F F F F') ;\n+   E(chr         , '. . . . T F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F') ;\n+   E(normint     , '. . . . . T F F F F F F F F F F F F F F 2 F F F F F F F F F F F F F F F F F F F F F F F F F F F F') ;\n+   E(shortint    , '. . . . . . T F F F F F F F F F F F F F 2 F F F F F F F F F F F F F F F F F F F F F F F F F F F F') ;\n+   E(longint     , '. . . . . . . T F F F F F F F F F F F F 2 F F F F F F F F F F F F F F F F F F F F F F F F F F F F') ;\n+   E(normcard    , '. . . . . . . . T F F F F F F F F F F F 2 F F F F F F F F F F F F F F F F F F F F F F F F F F F F') ;\n+   E(shortcard   , '. . . . . . . . . T F F F F F F F F F F 2 F F F F F F F F F F F F F F F F F F F F F F F F F F F F') ;\n+   E(longcard    , '. . . . . . . . . . T F F F F F F F F F 2 F F F F F F F F F F F F F F F F F F F F F F F F F F F F') ;\n+   E(pointer     , '. . . . . . . . . . . T F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F') ;\n+   E(enum        , '. . . . . . . . . . . . T F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F') ;\n+   E(real        , '. . . . . . . . . . . . . T F F F F F 2 F F F F F F F F F F F F F F F F F F F F F F F F F F F F F') ;\n+   E(shortreal   , '. . . . . . . . . . . . . . T F F F F 2 F F F F F F F F F F F F F F F F F F F F F F F F F F F F F') ;\n+   E(longreal    , '. . . . . . . . . . . . . . . T F F F 2 F F F F F F F F F F F F F F F F F F F F F F F F F F F F F') ;\n+   E(set         , '. . . . . . . . . . . . . . . . T F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F') ;\n+   E(opaque      , '. . . . . . . . . . . . . . . . . T F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F') ;\n+   E(loc         , '. . . . . . . . . . . . . . . . . . F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F') ;\n+   E(rtype       , '. . . . . . . . . . . . . . . . . . . T F F F F F F F F F F F F 1 1 1 1 F F F F F F F F F F F F F') ;\n+   E(ztype       , '. . . . . . . . . . . . . . . . . . . . T 1 1 1 1 1 1 1 1 1 1 1 F F F F F F F F F F F F F F F F F') ;\n+   E(int8        , '. . . . . . . . . . . . . . . . . . . . . T F F F F F F F F F F F F F F F F F F F F F F F F F F F') ;\n+   E(int16       , '. . . . . . . . . . . . . . . . . . . . . . T F F F F F F F F F F F F F F F F F F F F F F F F F F') ;\n+   E(int32       , '. . . . . . . . . . . . . . . . . . . . . . . T F F F F F F F F F F F F F F F F F F F F F F F F F') ;\n+   E(int64       , '. . . . . . . . . . . . . . . . . . . . . . . . T F F F F F F F F F F F F F F F F F F F F F F F F') ;\n+   E(card8       , '. . . . . . . . . . . . . . . . . . . . . . . . . T F F F F F F F F F F F F F F F F F F F F F F F') ;\n+   E(card16      , '. . . . . . . . . . . . . . . . . . . . . . . . . . T F F F F F F F F F F F F F F F F F F F F F F') ;\n+   E(card32      , '. . . . . . . . . . . . . . . . . . . . . . . . . . . T F F F F F F F F F F F F F F F F F F F F F') ;\n+   E(card64      , '. . . . . . . . . . . . . . . . . . . . . . . . . . . . T F F F F F F F F F F F F F F F F F F F F') ;\n+   E(word16      , '. . . . . . . . . . . . . . . . . . . . . . . . . . . . . F F F F F F F F F F F F F F F F F F F F') ;\n+   E(word32      , '. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . F F F F F F F F F F F F F F F F F F F') ;\n+   E(word64      , '. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . F F F F F F F F F F F F F F F F F F') ;\n+   E(real32      , '. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . T F F F F F F F F F F F F F F F F') ;\n+   E(real64      , '. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . T F F F F F F F F F F F F F F F') ;\n+   E(real96      , '. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . T F F F F F F F F F F F F F F') ;\n+   E(real128     , '. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . T F F F F F F F F F F F F F') ;\n+   E(set8        , '. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . T F F F F F F F F F F F F') ;\n+   E(set16       , '. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . T F F F F F F F F F F F') ;\n+   E(set32       , '. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . T F F F F F F F F F F') ;\n+   E(complex     , '. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . T F F F F F F T F F') ;\n+   E(shortcomplex, '. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . T F F F F F T F F') ;\n+   E(longcomplex , '. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . T F F F F T F F') ;\n+   E(complex32   , '. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . T F F F T F F') ;\n+   E(complex64   , '. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . T F F T F F') ;\n+   E(complex96   , '. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . T F T F F') ;\n+   E(complex128  , '. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . T T F F') ;\n+   E(ctype       , '. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . T F F') ;\n+   E(rec         , '. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . F F') ;\n+   E(array       , '. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . F') ;\n+\n+   (* Comparison compatibility *)\n+\n+\n+   (*\n+                                                     1 p w\n+\n+                    N W B A C I S L C S L P E R S L S O L R Z I I I I C C C C W W W R R R R S S S C S L C C C C C R A\n+                    u o y d h n h o a h o t n e h o e p o t t n n n n a a a a o o o e e e e e e e o h o o o o o t e r\n+                    l r t d a t o n r o n r u a o n t a c y y t t t t r r r r r r r a a a a t t t m o n m m m m y c r\n+                    S d e r r e r g d r g   m l r g   q   p p 8 1 3 6 d d d d d d d l l l l 8 1 3 p r g p p p p p   a\n+                    y     e   g t i i t c       t r   u   e e   6 2 4 8 1 3 6 1 3 6 3 6 9 1   6 2 l t C l l l l e   y\n+                    m     s   e i n n c a       r e   e                 6 2 4 6 2 4 2 4 6 2       e C o e e e e\n+                          s   r n t a a r       e a                                       8       x o m x x x x\n+                                t   l r d       a l                                                 m p 3 6 9 1\n+                                      d         l                                                   p l 2 4 6 2\n+                                                                                                    l e       8\n+                                                                                                    e x\n+                                                                                                    x\n+         ------------------------------------------------------------------------------------------------------------\n+   2\n+   P\n+   W\n+   *)\n+\n+   C(const       , 'T T T T T T T T T T T T T T T T T T F F T T T T T T T T T T T T T T T T F F F F F F F F F F F F F') ;\n+   C(word        , '. T F F F F F F F F F F F F F F F F F F T F F F F F F F F F F F F F F F F F F F F F F F F F F F F') ;\n+   C(byte        , '. . T F F F F F F F F F F F F F F F F F T F F F F F F F F F F F F F F F F F F F F F F F F F F F F') ;\n+   C(address     , '. . . T F F F F F F F T F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F') ;\n+   C(chr         , '. . . . T F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F') ;\n+   C(normint     , '. . . . . T F F F F F F F F F F F F F F 2 F F F F F F F F F F F F F F F F F F F F F F F F F F F F') ;\n+   C(shortint    , '. . . . . . T F F F F F F F F F F F F F 2 F F F F F F F F F F F F F F F F F F F F F F F F F F F F') ;\n+   C(longint     , '. . . . . . . T F F F F F F F F F F F F 2 F F F F F F F F F F F F F F F F F F F F F F F F F F F F') ;\n+   C(normcard    , '. . . . . . . . T F F F F F F F F F F F 2 F F F F F F F F F F F F F F F F F F F F F F F F F F F F') ;\n+   C(shortcard   , '. . . . . . . . . T F F F F F F F F F F 2 F F F F F F F F F F F F F F F F F F F F F F F F F F F F') ;\n+   C(longcard    , '. . . . . . . . . . T F F F F F F F F F 2 F F F F F F F F F F F F F F F F F F F F F F F F F F F F') ;\n+   C(pointer     , '. . . . . . . . . . . T F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F') ;\n+   C(enum        , '. . . . . . . . . . . . T F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F') ;\n+   C(real        , '. . . . . . . . . . . . . T F F F F F 2 F F F F F F F F F F F F F F F F F F F F F F F F F F F F F') ;\n+   C(shortreal   , '. . . . . . . . . . . . . . T F F F F 2 F F F F F F F F F F F F F F F F F F F F F F F F F F F F F') ;\n+   C(longreal    , '. . . . . . . . . . . . . . . T F F F 2 F F F F F F F F F F F F F F F F F F F F F F F F F F F F F') ;\n+   C(set         , '. . . . . . . . . . . . . . . . T F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F') ;\n+   C(opaque      , '. . . . . . . . . . . . . . . . . T F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F') ;\n+   C(loc         , '. . . . . . . . . . . . . . . . . . F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F') ;\n+   C(rtype       , '. . . . . . . . . . . . . . . . . . . T F F F F F F F F F F F F 1 1 1 1 F F F F F F F F F F F F F') ;\n+   C(ztype       , '. . . . . . . . . . . . . . . . . . . . T 1 1 1 1 1 1 1 1 1 1 1 F F F F F F F F F F F F F F F F F') ;\n+   C(int8        , '. . . . . . . . . . . . . . . . . . . . . T F F F F F F F F F F F F F F F F F F F F F F F F F F F') ;\n+   C(int16       , '. . . . . . . . . . . . . . . . . . . . . . T F F F F F F F F F F F F F F F F F F F F F F F F F F') ;\n+   C(int32       , '. . . . . . . . . . . . . . . . . . . . . . . T F F F F F F F F F F F F F F F F F F F F F F F F F') ;\n+   C(int64       , '. . . . . . . . . . . . . . . . . . . . . . . . T F F F F F F F F F F F F F F F F F F F F F F F F') ;\n+   C(card8       , '. . . . . . . . . . . . . . . . . . . . . . . . . T F F F F F F F F F F F F F F F F F F F F F F F') ;\n+   C(card16      , '. . . . . . . . . . . . . . . . . . . . . . . . . . T F F F F F F F F F F F F F F F F F F F F F F') ;\n+   C(card32      , '. . . . . . . . . . . . . . . . . . . . . . . . . . . T F F F F F F F F F F F F F F F F F F F F F') ;\n+   C(card64      , '. . . . . . . . . . . . . . . . . . . . . . . . . . . . T F F F F F F F F F F F F F F F F F F F F') ;\n+   C(word16      , '. . . . . . . . . . . . . . . . . . . . . . . . . . . . . F F F F F F F F F F F F F F F F F F F F') ;\n+   C(word32      , '. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . F F F F F F F F F F F F F F F F F F F') ;\n+   C(word64      , '. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . F F F F F F F F F F F F F F F F F F') ;\n+   C(real32      , '. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . T F F F F F F F F F F F F F F F F') ;\n+   C(real64      , '. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . T F F F F F F F F F F F F F F F') ;\n+   C(real96      , '. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . T F F F F F F F F F F F F F F') ;\n+   C(real128     , '. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . T F F F F F F F F F F F F F') ;\n+   C(set8        , '. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . T F F F F F F F F F F F F') ;\n+   C(set16       , '. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . T F F F F F F F F F F F') ;\n+   C(set32       , '. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . T F F F F F F F F F F') ;\n+   C(complex     , '. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . T F F F F F F T F F') ;\n+   C(shortcomplex, '. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . T F F F F F T F F') ;\n+   C(longcomplex , '. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . T F F F F T F F') ;\n+   C(complex32   , '. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . T F F F T F F') ;\n+   C(complex64   , '. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . T F F T F F') ;\n+   C(complex96   , '. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . T F T F F') ;\n+   C(complex128  , '. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . T T F F') ;\n+   C(ctype       , '. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . T F F') ;\n+   C(rec         , '. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . F F') ;\n+   C(array       , '. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . F') ;\n+\n+END InitCompatibilityMatrices ;\n+\n+\n+END M2Base."}, {"sha": "e03a4886fa9ac66ab86756552ab7d0df179feccd", "filename": "gcc/m2/gm2-compiler/M2BasicBlock.def", "status": "added", "additions": 87, "deletions": 0, "changes": 87, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FM2BasicBlock.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FM2BasicBlock.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-compiler%2FM2BasicBlock.def?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754", "patch": "@@ -0,0 +1,87 @@\n+(* M2BasicBlock.def converts a scope block into a list of basic blocks.\n+\n+Copyright (C) 2001-2022 Free Software Foundation, Inc.\n+Contributed by Gaius Mulley <gaius.mulley@southwales.ac.uk>.\n+\n+This file is part of GNU Modula-2.\n+\n+GNU Modula-2 is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 3, or (at your option)\n+any later version.\n+\n+GNU Modula-2 is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Modula-2; see the file COPYING3.  If not see\n+<http://www.gnu.org/licenses/>.  *)\n+\n+DEFINITION MODULE M2BasicBlock ;\n+\n+(*\n+   Title      : M2BasicBlock\n+   Author     : Gaius Mulley\n+   Date       : 20/8/2003\n+   System     : GNU Modula-2\n+   Description: Converts a scope block into a list of basic blocks.\n+                The basic blocks are either converted back into quadruples\n+                or alternatively translated into GCC trees.\n+*)\n+\n+FROM M2Scope IMPORT ScopeBlock ;\n+EXPORT QUALIFIED BasicBlock, BasicBlockProc,\n+                 InitBasicBlocks, InitBasicBlocksFromRange,\n+\t\t KillBasicBlocks, FreeBasicBlocks,\n+                 ForeachBasicBlockDo ;\n+\n+\n+TYPE\n+   BasicBlock ;\n+   BasicBlockProc = PROCEDURE (CARDINAL, CARDINAL) ;\n+\n+\n+(*\n+   InitBasicBlocks - converts a list of quadruples as defined by\n+                     scope blocks into a set of basic blocks.\n+                     All quadruples within this list which are not\n+                     reachable are removed.\n+*)\n+\n+PROCEDURE InitBasicBlocks (sb: ScopeBlock) : BasicBlock ;\n+\n+\n+(*\n+   InitBasicBlocksFromRange - converts a list of quadruples as defined by\n+                              start..end.\n+                              All quadruples within this list which are not\n+                              reachable are removed.\n+*)\n+\n+PROCEDURE InitBasicBlocksFromRange (start, end: CARDINAL) : BasicBlock ;\n+\n+\n+(*\n+   KillBasicBlocks - destroys the list of Basic Blocks and assigns bb to NIL.\n+*)\n+\n+PROCEDURE KillBasicBlocks (VAR bb: BasicBlock) ;\n+\n+\n+(*\n+   FreeBasicBlocks - destroys the list of Basic Blocks.\n+*)\n+\n+PROCEDURE FreeBasicBlocks (bb: BasicBlock) ;\n+\n+\n+(*\n+   ForeachBasicBlockDo - for each basic block call procedure, p.\n+*)\n+\n+PROCEDURE ForeachBasicBlockDo (bb: BasicBlock; p: BasicBlockProc) ;\n+\n+\n+END M2BasicBlock."}, {"sha": "0bc692a8ea6f8d255b4e5fff63ae5218c83dbc4a", "filename": "gcc/m2/gm2-compiler/M2BasicBlock.mod", "status": "added", "additions": 355, "deletions": 0, "changes": 355, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FM2BasicBlock.mod", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FM2BasicBlock.mod", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-compiler%2FM2BasicBlock.mod?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754", "patch": "@@ -0,0 +1,355 @@\n+(* M2BasicBlock.mod converts a scope block into a list of basic blocks.\n+\n+Copyright (C) 2001-2022 Free Software Foundation, Inc.\n+Contributed by Gaius Mulley <gaius.mulley@southwales.ac.uk>.\n+\n+This file is part of GNU Modula-2.\n+\n+GNU Modula-2 is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 3, or (at your option)\n+any later version.\n+\n+GNU Modula-2 is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Modula-2; see the file COPYING3.  If not see\n+<http://www.gnu.org/licenses/>.  *)\n+\n+IMPLEMENTATION MODULE M2BasicBlock ;\n+\n+\n+FROM Storage IMPORT ALLOCATE, DEALLOCATE ;\n+FROM StrIO IMPORT WriteString, WriteLn ;\n+FROM NumberIO IMPORT WriteCard ;\n+FROM M2Debug IMPORT Assert ;\n+FROM M2Options IMPORT OptimizeBasicBlock ;\n+\n+FROM M2Quads IMPORT IsReferenced, IsConditional, IsUnConditional, IsCall,\n+                    IsReturn, IsNewLocalVar, IsKillLocalVar,\n+                    IsCatchBegin, IsCatchEnd,\n+                    IsInitStart, IsInitEnd, IsFinallyStart, IsFinallyEnd,\n+                    IsInitialisingConst,\n+                    IsPseudoQuad, IsDefOrModFile,\n+                    GetNextQuad, GetQuad, QuadOperator,\n+                    SubQuad ;\n+\n+FROM M2Scope IMPORT ScopeBlock, ForeachScopeBlockDo ;\n+FROM M2GenGCC IMPORT ConvertQuadsToTree ;\n+\n+\n+TYPE\n+   BasicBlock = POINTER TO RECORD\n+                   StartQuad  : CARDINAL ;  (* First Quad in Basic Block *)\n+                   EndQuad    : CARDINAL ;  (* End Quad in Basic Block   *)\n+                   Right      : BasicBlock ;\n+                                            (* Last Basic Block in list  *)\n+                   Left       : BasicBlock ;\n+                END ;\n+\n+VAR\n+   FreeList        : BasicBlock ;   (* Free list of Basic Blocks         *)\n+   HeadOfBasicBlock: BasicBlock ;\n+\n+\n+(*\n+   InitBasicBlocks - converts a list of quadruples as defined by\n+                     scope blocks into a set of basic blocks.\n+                     All quadruples within this list which are not\n+                     reachable are removed.\n+*)\n+\n+PROCEDURE InitBasicBlocks (sb: ScopeBlock) : BasicBlock ;\n+BEGIN\n+   HeadOfBasicBlock := NIL ;\n+   ForeachScopeBlockDo (sb, ConvertQuads2BasicBlock) ;\n+   RETURN HeadOfBasicBlock\n+END InitBasicBlocks ;\n+\n+\n+(*\n+   InitBasicBlocksFromRange - converts a list of quadruples as defined by\n+                              start..end.\n+                              All quadruples within this list which are not\n+                              reachable are removed.\n+*)\n+\n+PROCEDURE InitBasicBlocksFromRange (start, end: CARDINAL) : BasicBlock ;\n+BEGIN\n+   HeadOfBasicBlock := NIL ;\n+   ConvertQuads2BasicBlock(start, end) ;\n+   RETURN( HeadOfBasicBlock )\n+END InitBasicBlocksFromRange ;\n+\n+\n+(*\n+   KillBasicBlocks - destroys the list of Basic Blocks.\n+*)\n+\n+PROCEDURE KillBasicBlocks (VAR bb: BasicBlock) ;\n+BEGIN\n+   FreeBasicBlocks (bb) ;\n+   bb := NIL\n+END KillBasicBlocks ;\n+\n+\n+(*\n+   FreeBasicBlocks - destroys the list of Basic Blocks.\n+*)\n+\n+PROCEDURE FreeBasicBlocks (bb: BasicBlock) ;\n+VAR\n+   b, c: BasicBlock ;\n+BEGIN\n+   IF bb#NIL\n+   THEN\n+      b := bb ;\n+      REPEAT\n+         c := bb^.Right ;\n+         bb^.Right := FreeList ;\n+         FreeList := bb ;\n+         bb := c\n+      UNTIL bb=b\n+   END\n+END FreeBasicBlocks ;\n+\n+\n+(*\n+   New - returns a basic block.\n+*)\n+\n+PROCEDURE New () : BasicBlock ;\n+VAR\n+   b: BasicBlock ;\n+BEGIN\n+   IF FreeList=NIL\n+   THEN\n+      NEW(b)\n+   ELSE\n+      b := FreeList ;\n+      FreeList := FreeList^.Right\n+   END ;\n+   Assert(b#NIL) ;\n+   RETURN( b )\n+END New ;\n+\n+\n+(*\n+   ConvertQuads2BasicBlock - converts a list of quadruples to a list of\n+                             Basic Blocks.\n+                             A Basic Block is defined as a list of quadruples\n+                             which has only has one entry and exit point.\n+*)\n+\n+PROCEDURE ConvertQuads2BasicBlock (Start, End: CARDINAL) ;\n+VAR\n+   LastQuadDefMod,\n+   LastQuadConditional,\n+   LastQuadCall,\n+   LastQuadReturn     : BOOLEAN ;\n+   Quad               : CARDINAL ;\n+   CurrentBB          : BasicBlock ;\n+   LastBB             : BasicBlock ;\n+BEGIN\n+   (*\n+      Algorithm to perform Basic Block:\n+\n+      For every quadruple establish a set of leaders.\n+      A Leader is defined as a quadruple which is\n+      either:\n+\n+      (i)   The first quadruple.\n+      (ii)  Any quadruple which is the target of a jump or unconditional jump.\n+      (iii) Any statement which follows a conditional jump\n+\n+      For each leader construct a basic block.\n+      A Basic Block starts with a leader quadruple and ends with either:\n+\n+      (i)  Another Leader\n+      (ii) An unconditional Jump.\n+\n+      Any quadruples that do not fall into a Basic Block can be thrown away\n+      since they will never be executed.\n+   *)\n+   LastBB := NIL ;\n+   CurrentBB := NIL ;\n+   Quad := Start ;\n+   LastQuadConditional := TRUE ;  (* Force Rule (i) *)\n+   LastQuadCall := FALSE ;\n+   LastQuadReturn := FALSE ;\n+   LastQuadDefMod := FALSE ;\n+   (* Scan all quadruples *)\n+   WHILE (Quad<=End) AND (Quad#0) DO\n+      IF LastQuadConditional OR LastQuadCall OR LastQuadReturn OR\n+         LastQuadDefMod OR IsReferenced(Quad)\n+      THEN\n+         (* Rule (ii) *)\n+         CurrentBB := New() ;                      (* Get a new Basic Block *)\n+                                  (* At least one quad in this Basic Block  *)\n+         StartBB(CurrentBB, Quad) ;\n+         EndBB(CurrentBB, Quad)\n+      ELSIF CurrentBB#NIL\n+      THEN\n+         (* We have a Basic Block - therefore add quad to this Block  *)\n+         EndBB(CurrentBB, Quad)\n+      ELSIF IsPseudoQuad(Quad)\n+      THEN\n+         (* Add Quad to the Last BB since Pseudo Quads - compiler directives *)\n+         (* must not be thrown away.                                         *)\n+         EndBB(LastBB, Quad)\n+      ELSIF IsReturn(Quad) OR IsKillLocalVar(Quad) OR\n+            IsCatchEnd(Quad) OR IsCatchBegin(Quad) OR\n+            IsInitStart(Quad) OR IsInitEnd(Quad) OR\n+            IsFinallyStart(Quad) OR IsFinallyEnd(Quad)\n+      THEN\n+         (* we must leave these quads alone *)\n+         EndBB(LastBB, Quad)\n+      ELSIF IsInitialisingConst(Quad)\n+      THEN\n+         (* we must leave these quads alone *)\n+         EndBB(LastBB, Quad)\n+      ELSE\n+         (* remove this Quad since it will never be reached *)\n+         SubQuad(Quad)\n+      END ;\n+      LastQuadConditional := IsConditional(Quad) ;\n+      LastQuadCall := IsCall(Quad) ;\n+      LastQuadReturn := IsReturn(Quad) ;\n+      LastQuadDefMod := IsDefOrModFile(Quad) ;\n+      IF IsUnConditional(Quad)\n+      THEN\n+         LastBB := CurrentBB ;\n+         CurrentBB := NIL\n+      END ;\n+      Quad := GetNextQuad(Quad)\n+   END\n+END ConvertQuads2BasicBlock ;\n+\n+\n+(*\n+   ForeachBasicBlockDo - for each basic block call procedure, p.\n+*)\n+\n+PROCEDURE ForeachBasicBlockDo (bb: BasicBlock; p: BasicBlockProc) ;\n+VAR\n+   b: BasicBlock ;\n+BEGIN\n+   IF bb#NIL\n+   THEN\n+      b := bb ;\n+      REPEAT\n+         WITH b^ DO\n+            p(StartQuad, EndQuad)\n+         END ;\n+         b := b^.Right\n+      UNTIL b=bb\n+   END\n+END ForeachBasicBlockDo ;\n+\n+\n+(*\n+   StartBB - Initially fills a Basic Block, b, with a start quad Quad.\n+             The Basic Block is then added to the end of Basic Block list.\n+*)\n+\n+PROCEDURE StartBB (b: BasicBlock; Quad: CARDINAL) ;\n+BEGIN\n+   WITH b^ DO\n+      StartQuad := Quad ;\n+      EndQuad := Quad\n+   END ;\n+   Add(HeadOfBasicBlock, b)   (* Add b to the end of the Basic Block list *)\n+END StartBB ;\n+\n+\n+(*\n+   EndBB - Fills a Basic Block, b, with an end quad Quad.\n+*)\n+\n+PROCEDURE EndBB (b: BasicBlock; Quad: CARDINAL) ;\n+BEGIN\n+   b^.EndQuad := Quad\n+END EndBB ;\n+\n+\n+(*\n+   Add adds a specified element to the end of a queue.\n+*)\n+\n+PROCEDURE Add (VAR Head: BasicBlock;\n+               b : BasicBlock) ;\n+BEGIN\n+   IF Head=NIL\n+   THEN\n+      Head := b ;\n+      b^.Left := b ;\n+      b^.Right := b\n+   ELSE\n+      b^.Right := Head ;\n+      b^.Left := Head^.Left ;\n+      Head^.Left^.Right := b ;\n+      Head^.Left := b\n+   END\n+END Add ;\n+\n+\n+(*\n+   Sub deletes an element from the specified queue.\n+*)\n+\n+(*\n+PROCEDURE Sub (VAR Head: BasicBlock;\n+               b: BasicBlock) ;\n+BEGIN\n+   IF (b^.Right=Head) AND (b=Head)\n+   THEN\n+      Head := NIL\n+   ELSE\n+      IF Head=b\n+      THEN\n+         Head := Head^.Right\n+      END ;\n+      b^.Left^.Right := b^.Right ;\n+      b^.Right^.Left := b^.Left\n+   END\n+END Sub ;\n+*)\n+\n+\n+(*\n+   DisplayBasicBlocks - displays the basic block data structure.\n+*)\n+\n+(*\n+PROCEDURE DisplayBasicBlocks (bb: BasicBlock) ;\n+VAR\n+   b: BasicBlock ;\n+BEGIN\n+   b := bb ;\n+   WriteString('quadruples') ; WriteLn ;\n+   IF b#NIL\n+   THEN\n+      REPEAT\n+         DisplayBlock(b) ;\n+         b := b^.Right\n+      UNTIL b=bb\n+   END\n+END DisplayBasicBlocks ;\n+\n+\n+PROCEDURE DisplayBlock (b: BasicBlock) ;\n+BEGIN\n+   WITH b^ DO\n+      WriteString(' start ') ; WriteCard(StartQuad, 6) ;\n+      WriteString(' end   ') ; WriteCard(EndQuad, 6) ;\n+   END\n+END DisplayBlock ;\n+*)\n+\n+\n+BEGIN\n+   FreeList := NIL\n+END M2BasicBlock."}, {"sha": "ff4ae85e3d480756439e48859b6fe3f79ac7d026", "filename": "gcc/m2/gm2-compiler/M2Batch.def", "status": "added", "additions": 194, "deletions": 0, "changes": 194, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FM2Batch.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FM2Batch.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-compiler%2FM2Batch.def?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754", "patch": "@@ -0,0 +1,194 @@\n+(* M2Batch.def implements a queue for modules pending compilation.\n+\n+Copyright (C) 2001-2022 Free Software Foundation, Inc.\n+Contributed by Gaius Mulley <gaius.mulley@southwales.ac.uk>.\n+\n+This file is part of GNU Modula-2.\n+\n+GNU Modula-2 is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 3, or (at your option)\n+any later version.\n+\n+GNU Modula-2 is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Modula-2; see the file COPYING3.  If not see\n+<http://www.gnu.org/licenses/>.  *)\n+\n+DEFINITION MODULE M2Batch ;\n+\n+(*\n+   Author     : Gaius Mulley\n+   Title      : M2Batch\n+   Date       : 29/5/87\n+   Description: Implements a queue modules pending compilation.\n+                MakeSource enters modules for later compilation.\n+                GetSource collects the next module to be compiled.\n+*)\n+\n+FROM DynamicStrings IMPORT String ;\n+FROM NameKey IMPORT Name ;\n+EXPORT QUALIFIED MakeDefinitionSource,\n+                 MakeImplementationSource,\n+                 MakeProgramSource,\n+                 GetSource, GetModuleNo, IsModuleKnown,\n+                 AssociateDefinition, GetDefinitionModuleFile,\n+                 AssociateModule, GetModuleFile, Get,\n+                 ForeachSourceModuleDo, IsSourceSeen, IsModuleSeen,\n+                 LookupModule, LookupOuterModule, DisplayModules ;\n+\n+TYPE\n+   DoProcedure = PROCEDURE (CARDINAL) ;\n+\n+\n+(*\n+   MakeDefinitionSource - is given a Name, n, which is used to create a Definition\n+                          module.\n+                          The Definition Module will be placed onto the\n+                          compilation pending queue if it has not yet been\n+                          compiled.\n+                          If the module has been compiled then no action is\n+                          taken. The Module Sym is returned.\n+*)\n+\n+PROCEDURE MakeDefinitionSource (tok: CARDINAL; n: Name) : CARDINAL ;\n+\n+\n+(*\n+   MakeImplementationSource - is given a Name, n, which is used to create an\n+                              implementation module.\n+                              The implementation Module will be placed onto\n+                              the compilation pending\n+                              queue if it has not yet been compiled.\n+                              If the module has been compiled then no\n+                              action is taken. The Module Sym is returned.\n+*)\n+\n+PROCEDURE MakeImplementationSource (tok: CARDINAL; n: Name) : CARDINAL ;\n+\n+\n+(*\n+   MakeProgramSource - is given a Name, n, which is used to create a program module.\n+                       The program module will be placed onto the compilation\n+                       pending queue if it has not yet been compiled.\n+                       If the module has been compiled then no action is taken.\n+                       The Module Sym is returned.\n+*)\n+\n+PROCEDURE MakeProgramSource (tok: CARDINAL; n: Name) : CARDINAL ;\n+\n+\n+(*\n+   GetSource - returns with the symbol Sym of the next module to be compiled.\n+               If Sym returns with value NulSym then no module should be\n+               compiled.\n+*)\n+\n+PROCEDURE GetSource () : CARDINAL ;\n+\n+\n+(*\n+   GetModuleNo - returns with symbol number of the module which was\n+                 the nth module to be read in Pass 1.\n+                 The modules are numbered from 1..n\n+*)\n+\n+PROCEDURE GetModuleNo (nth: CARDINAL) : CARDINAL ;\n+\n+\n+(*\n+   IsModuleKnown - returns TRUE if the Name, n, matches a module.\n+*)\n+\n+PROCEDURE IsModuleKnown (n: Name) : BOOLEAN ;\n+\n+\n+(*\n+   AssociateDefinition - associate the source file, filename, with the definition module,\n+                         Sym.\n+*)\n+\n+PROCEDURE AssociateDefinition (filename: String; Sym: CARDINAL) : String ;\n+\n+\n+(*\n+   GetDefinitionModuleFile - returns the filename associated with the definition module, Sym.\n+                             It may return a temporary preprocessed file.\n+*)\n+\n+PROCEDURE GetDefinitionModuleFile (Sym: CARDINAL) : String ;\n+\n+\n+(*\n+   AssociateModule - associate the source file, filename, with the implementation/program\n+                     module, Sym.\n+*)\n+\n+PROCEDURE AssociateModule (filename: String; Sym: CARDINAL) : String ;\n+\n+\n+(*\n+   GetModuleFile - returns the filename associated with the implementation/program module, Sym.\n+                   It may return a temporary preprocessed file.\n+*)\n+\n+PROCEDURE GetModuleFile (Sym: CARDINAL) : String ;\n+\n+\n+(*\n+   ForeachSourceModuleDo - call each procedure, p, for which there is a known\n+                           source file.\n+*)\n+\n+PROCEDURE ForeachSourceModuleDo (p: DoProcedure) ;\n+\n+\n+(*\n+   IsSourceSeen - returns TRUE if the source for module, sym, has been seen.\n+*)\n+\n+PROCEDURE IsSourceSeen (sym: CARDINAL) : BOOLEAN ;\n+\n+\n+(*\n+   IsModuleSeen - returns TRUE if the source for module, name, has been seen.\n+*)\n+\n+PROCEDURE IsModuleSeen (n: Name) : BOOLEAN ;\n+\n+\n+(*\n+   LookupModule - looks up a module in the current scope, if a module does not exist\n+                  then it creates a DefImp module.\n+*)\n+\n+PROCEDURE LookupModule (tok: CARDINAL; n: Name) : CARDINAL ;\n+\n+\n+(*\n+   LookupOuterModule - looks up a module in the order of: current scope, then outer scope, finally if a\n+                       module does not exist then it creates a DefImp module.\n+*)\n+\n+PROCEDURE LookupOuterModule (tok: CARDINAL; n: Name) : CARDINAL ;\n+\n+\n+(*\n+   Get - returns the module symbol matching name, n.\n+*)\n+\n+PROCEDURE Get (n: Name) : CARDINAL ;\n+\n+\n+(*\n+   DisplayModules - a debugging routine to textually emit the names of modules in the DoneQ.\n+*)\n+\n+PROCEDURE DisplayModules ;\n+\n+\n+END M2Batch."}, {"sha": "360ac57ef200f73ae053476e52ce1b0a49bbf8a5", "filename": "gcc/m2/gm2-compiler/M2Batch.mod", "status": "added", "additions": 470, "deletions": 0, "changes": 470, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FM2Batch.mod", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FM2Batch.mod", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-compiler%2FM2Batch.mod?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754", "patch": "@@ -0,0 +1,470 @@\n+(* M2Batch.mod implements a queue for modules pending compilation.\n+\n+Copyright (C) 2001-2022 Free Software Foundation, Inc.\n+Contributed by Gaius Mulley <gaius.mulley@southwales.ac.uk>.\n+\n+This file is part of GNU Modula-2.\n+\n+GNU Modula-2 is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 3, or (at your option)\n+any later version.\n+\n+GNU Modula-2 is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Modula-2; see the file COPYING3.  If not see\n+<http://www.gnu.org/licenses/>.  *)\n+\n+IMPLEMENTATION MODULE M2Batch ;\n+\n+\n+FROM M2Debug IMPORT Assert ;\n+FROM SymbolTable IMPORT MakeModule, MakeDefImp, IsModule, IsDefImp, GetScope, GetLocalSym, GetCurrentScope, GetSym, NulSym ;\n+FROM NameKey IMPORT GetKey, WriteKey ;\n+FROM M2Printf IMPORT printf2 ;\n+FROM M2Error IMPORT InternalError ;\n+FROM M2MetaError IMPORT MetaError1 ;\n+FROM Indexing IMPORT Index, InitIndex, GetIndice, HighIndice, RemoveIndiceFromIndex, IncludeIndiceIntoIndex, InBounds ;\n+FROM Lists IMPORT List, InitList, IncludeItemIntoList, RemoveItemFromList,\n+                  GetItemFromList, NoOfItemsInList ;\n+FROM Storage IMPORT ALLOCATE ;\n+FROM DynamicStrings IMPORT String ;\n+FROM M2Pass IMPORT IsPass1, IsPass2, IsPass3, IsPassC ;\n+\n+\n+TYPE\n+   Module = POINTER TO RECORD\n+                          SymNo  : CARDINAL ;\n+                          Key    : Name ;\n+                          DefFile,\n+                          ModFile: String ;\n+                       END ;\n+\n+VAR\n+   SeenList    : Index ;\n+   PendingQueue: List ;\n+\n+\n+(*\n+   MakeProgramSource - is given a Name, n, which is used to create a program module.\n+                       The program module will be placed onto the compilation\n+                       pending queue if it has not yet been compiled.\n+                       If the module has been compiled then no action is taken.\n+                       The Module Sym is returned.\n+*)\n+\n+PROCEDURE MakeProgramSource (tok: CARDINAL; n: Name) : CARDINAL ;\n+VAR\n+   Sym: CARDINAL ;\n+BEGIN\n+   Sym := Get (n) ;\n+   IF Sym = NulSym\n+   THEN\n+      Assert ((NOT IsPass1 ()) AND (NOT IsPass2 ()) AND (NOT IsPass3 ()) AND (NOT IsPassC ())) ;\n+      (* Neither been compiled or on the Pending Queue *)\n+      Sym := MakeModule (tok, n) ;\n+      Put (Sym, n) ;\n+      Push (Sym)\n+   END ;\n+   RETURN Sym\n+END MakeProgramSource ;\n+\n+\n+(*\n+   MakeDefinitionSource - is given a Name, n, which is used to create a Definition\n+                          module.\n+                          The Definition Module will be placed onto the\n+                          compilation pending queue if it has not yet been\n+                          compiled.\n+                          If the module has been compiled then no action is\n+                          taken. The Module Sym is returned.\n+*)\n+\n+PROCEDURE MakeDefinitionSource (tok: CARDINAL; n: Name) : CARDINAL ;\n+VAR\n+   Sym: CARDINAL ;\n+BEGIN\n+   Sym := Get (n) ;\n+   IF Sym = NulSym\n+   THEN\n+      Assert ((NOT IsPass1 ()) AND (NOT IsPass2 ()) AND (NOT IsPass3 ()) AND (NOT IsPassC ())) ;\n+      (* Neither been compiled or on the Pending Queue *)\n+      Sym := MakeDefImp (tok, n) ;\n+      Put (Sym, n) ;\n+      Push (Sym)\n+   END ;\n+   RETURN Sym\n+END MakeDefinitionSource ;\n+\n+\n+(*\n+   MakeImplementationSource - is given a Name, n, which is used to create an\n+                              implementation module.\n+                              The implementation Module will be placed onto\n+                              the compilation pending\n+                              queue if it has not yet been compiled.\n+                              If the module has been compiled then no\n+                              action is taken. The Module Sym is returned.\n+*)\n+\n+PROCEDURE MakeImplementationSource (tok: CARDINAL; n: Name) : CARDINAL ;\n+VAR\n+   Sym: CARDINAL ;\n+BEGIN\n+   Sym := Get (n) ;\n+   IF Sym = NulSym\n+   THEN\n+      Assert ((NOT IsPass1 ()) AND (NOT IsPass2 ()) AND (NOT IsPass3 ()) AND (NOT IsPassC ())) ;\n+      (* Neither been compiled or on the Pending Queue *)\n+      Sym := MakeDefImp (tok, n) ;\n+      Put (Sym, n) ;\n+      Push (Sym)\n+   END ;\n+   RETURN Sym\n+END MakeImplementationSource ;\n+\n+\n+(*\n+   GetSource - returns with the symbol Sym of the next module to be compiled.\n+               If Sym returns with value 0 then no module should be compiled.\n+*)\n+\n+PROCEDURE GetSource () : CARDINAL ;\n+BEGIN\n+   RETURN Pop ()\n+END GetSource ;\n+\n+\n+(*\n+   GetModuleNo - returns with symbol number of the nth module read during Pass 1.\n+*)\n+\n+PROCEDURE GetModuleNo (nth: CARDINAL) : CARDINAL ;\n+VAR\n+   m: Module ;\n+BEGIN\n+   Assert (nth#0) ;\n+   IF InBounds (SeenList, nth)\n+   THEN\n+      m := GetIndice (SeenList, nth) ;\n+      RETURN m^.SymNo\n+   ELSE\n+      RETURN NulSym\n+   END\n+END GetModuleNo ;\n+\n+\n+(*\n+   IsModuleKnown - returns TRUE if the Name n matches a module.\n+*)\n+\n+PROCEDURE IsModuleKnown (n: Name) : BOOLEAN ;\n+BEGIN\n+   RETURN Get (n) # NulSym\n+END IsModuleKnown ;\n+\n+\n+(*\n+   Get - returns the module symbol matching name n.\n+*)\n+\n+PROCEDURE Get (n: Name) : CARDINAL ;\n+VAR\n+   i, no: CARDINAL ;\n+   m    : Module ;\n+BEGIN\n+   i := 1 ;\n+   no := HighIndice (SeenList) ;\n+   WHILE i <= no DO\n+      m := GetIndice (SeenList, i) ;\n+      WITH m^ DO\n+         IF Key = n\n+         THEN\n+            RETURN SymNo\n+         ELSE\n+            INC (i)\n+         END\n+      END\n+   END ;\n+   RETURN NulSym\n+END Get ;\n+\n+\n+PROCEDURE Put (Sym: CARDINAL; n: Name) ;\n+VAR\n+   m: Module ;\n+BEGIN\n+   NEW (m) ;\n+   IncludeIndiceIntoIndex (SeenList, m) ;\n+   WITH m^ DO\n+      SymNo   := Sym ;\n+      Key     := n ;\n+      DefFile := NIL ;\n+      ModFile := NIL\n+   END\n+END Put ;\n+\n+\n+PROCEDURE Push (Sym: CARDINAL) ;\n+BEGIN\n+   IncludeItemIntoList (PendingQueue, Sym)\n+END Push ;\n+\n+\n+PROCEDURE Pop () : CARDINAL ;\n+VAR\n+   n  : CARDINAL ;\n+   Sym: CARDINAL ;\n+BEGIN\n+   n := NoOfItemsInList (PendingQueue) ;\n+   IF n = 0\n+   THEN\n+      RETURN NulSym\n+   ELSE\n+      Sym := GetItemFromList (PendingQueue, n) ;\n+      RemoveItemFromList (PendingQueue, Sym) ;\n+      RETURN Sym\n+   END\n+END Pop ;\n+\n+\n+(*\n+   DisplayModules - a debugging routine to textually emit the names of modules in the SeenList.\n+*)\n+\n+PROCEDURE DisplayModules ;\n+VAR\n+   m   : Module ;\n+   n, i: CARDINAL ;\n+BEGIN\n+   i := 1 ;\n+   n := HighIndice (SeenList) ;\n+   WHILE i<=n DO\n+      m := GetIndice (SeenList, i) ;\n+      WITH m^ DO\n+         printf2 ('Module %a %d\\n', Key, i)\n+      END ;\n+      INC (i)\n+   END\n+END DisplayModules ;\n+\n+\n+(*\n+   AssociateDefinition - associate the source file, filename, with the definition module,\n+                         Sym.\n+*)\n+\n+PROCEDURE AssociateDefinition (filename: String; Sym: CARDINAL) : String ;\n+VAR\n+   no, i: CARDINAL ;\n+   m    : Module ;\n+BEGIN\n+   i := 1 ;\n+   no := HighIndice (SeenList) ;\n+   WHILE i <= no DO\n+      m := GetIndice (SeenList, i) ;\n+      WITH m^ DO\n+         IF SymNo = Sym\n+         THEN\n+            DefFile := filename ;\n+            RETURN filename\n+         ELSE\n+            INC (i)\n+         END\n+      END\n+   END ;\n+   InternalError ('failed to find module sym')\n+END AssociateDefinition ;\n+\n+\n+(*\n+   GetDefinitionModuleFile - returns the filename associated with the definition module, Sym.\n+                             It may return a temporary preprocessed file.\n+*)\n+\n+PROCEDURE GetDefinitionModuleFile (Sym: CARDINAL) : String ;\n+VAR\n+   no, i: CARDINAL ;\n+   m    : Module ;\n+BEGIN\n+   i := 1 ;\n+   no := HighIndice (SeenList) ;\n+   WHILE i <= no DO\n+      m := GetIndice (SeenList, i) ;\n+      WITH m^ DO\n+         IF SymNo = Sym\n+         THEN\n+            RETURN DefFile\n+         ELSE\n+            INC (i)\n+         END\n+      END\n+   END ;\n+   RETURN NIL\n+END GetDefinitionModuleFile ;\n+\n+\n+(*\n+   AssociateModule - associate the source file, filename, with the implementation/program\n+                     module, Sym.\n+*)\n+\n+PROCEDURE AssociateModule (filename: String; Sym: CARDINAL) : String ;\n+VAR\n+   no, i: CARDINAL ;\n+   m    : Module ;\n+BEGIN\n+   i := 1 ;\n+   no := HighIndice (SeenList) ;\n+   WHILE i<=no DO\n+      m := GetIndice (SeenList, i) ;\n+      WITH m^ DO\n+         IF SymNo = Sym\n+         THEN\n+            ModFile := filename ;\n+            RETURN filename\n+         ELSE\n+            INC (i)\n+         END\n+      END\n+   END ;\n+   InternalError ('failed to find module sym')\n+END AssociateModule ;\n+\n+\n+(*\n+   GetModuleFile - returns the filename associated with the implementation/program module, Sym.\n+                   It may return a temporary preprocessed file.\n+*)\n+\n+PROCEDURE GetModuleFile (Sym: CARDINAL) : String ;\n+VAR\n+   no, i: CARDINAL ;\n+   m    : Module ;\n+BEGIN\n+   i := 1 ;\n+   no := HighIndice (SeenList) ;\n+   WHILE i <= no DO\n+      m := GetIndice (SeenList, i) ;\n+      WITH m^ DO\n+         IF SymNo = Sym\n+         THEN\n+            RETURN ModFile\n+         ELSE\n+            INC (i)\n+         END\n+      END\n+   END ;\n+   RETURN NIL\n+END GetModuleFile ;\n+\n+\n+(*\n+   ForeachSourceModuleDo - for each source file call procedure, p.\n+*)\n+\n+PROCEDURE ForeachSourceModuleDo (p: DoProcedure) ;\n+VAR\n+   i, no: CARDINAL ;\n+   m    : Module ;\n+BEGIN\n+   i := 1 ;\n+   no := HighIndice (SeenList) ;\n+   WHILE i<=no DO\n+      m := GetIndice (SeenList, i) ;\n+      WITH m^ DO\n+         IF ModFile # NIL\n+         THEN\n+            p (SymNo)\n+         END\n+      END ;\n+      INC (i)\n+   END\n+END ForeachSourceModuleDo ;\n+\n+\n+(*\n+   IsSourceSeen - returns TRUE if the source for the program module or\n+                  implementation module has been seen.\n+*)\n+\n+PROCEDURE IsSourceSeen (sym: CARDINAL) : BOOLEAN ;\n+BEGIN\n+   Assert (IsModule (sym) OR IsDefImp (sym)) ;\n+   RETURN GetModuleFile (sym) # NIL\n+END IsSourceSeen ;\n+\n+\n+(*\n+   IsModuleSeen - returns TRUE if the source for module, name, has been seen.\n+*)\n+\n+PROCEDURE IsModuleSeen (n: Name) : BOOLEAN ;\n+BEGIN\n+   RETURN Get (n) # NulSym\n+END IsModuleSeen ;\n+\n+\n+(*\n+   LookupModule - looks up a module in the current scope, if a module does not exist\n+                  then it creates a DefImp module.\n+*)\n+\n+PROCEDURE LookupModule (tok: CARDINAL; n: Name) : CARDINAL ;\n+VAR\n+   sym: CARDINAL ;\n+BEGIN\n+   sym := GetSym (n) ;\n+   IF sym = NulSym\n+   THEN\n+      RETURN MakeDefinitionSource (tok, n)\n+   ELSIF IsModule (sym) OR IsDefImp (sym)\n+   THEN\n+      RETURN sym\n+   ELSE\n+      RETURN MakeDefinitionSource (tok, n)\n+   END\n+END LookupModule ;\n+\n+\n+(*\n+   LookupOuterModule - looks up a module in the order of: current scope, then outer scope, finally if a\n+                       module does not exist then it creates a DefImp module.\n+*)\n+\n+PROCEDURE LookupOuterModule (tok: CARDINAL; n: Name) : CARDINAL ;\n+VAR\n+   outer: CARDINAL ;\n+   sym  : CARDINAL ;\n+BEGIN\n+   sym := GetSym (n) ;\n+   IF sym = NulSym\n+   THEN\n+      outer := GetScope (GetCurrentScope ()) ;\n+      IF outer # NulSym\n+      THEN\n+         sym := GetLocalSym (outer, n)\n+      END ;\n+      IF sym = NulSym\n+      THEN\n+         (* not a local module, so it must be refering to a definition module.  *)\n+         sym := MakeDefinitionSource (tok, n)\n+      END\n+   END ;\n+   IF IsModule (sym) OR IsDefImp (sym)\n+   THEN\n+      RETURN sym\n+   ELSE\n+      RETURN MakeDefinitionSource (tok, n)\n+   END\n+END LookupOuterModule ;\n+\n+\n+BEGIN\n+   InitList (PendingQueue) ;\n+   SeenList := InitIndex (1)\n+END M2Batch."}, {"sha": "faf14ac0f6d404bf154d19fefc372fb93aa8ab29", "filename": "gcc/m2/gm2-compiler/M2Bitset.def", "status": "added", "additions": 54, "deletions": 0, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FM2Bitset.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FM2Bitset.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-compiler%2FM2Bitset.def?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754", "patch": "@@ -0,0 +1,54 @@\n+(* M2Bitset.def provides the BITSET type.\n+\n+Copyright (C) 2003-2022 Free Software Foundation, Inc.\n+Contributed by Gaius Mulley <gaius.mulley@southwales.ac.uk>.\n+\n+This file is part of GNU Modula-2.\n+\n+GNU Modula-2 is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 3, or (at your option)\n+any later version.\n+\n+GNU Modula-2 is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Modula-2; see the file COPYING3.  If not see\n+<http://www.gnu.org/licenses/>.  *)\n+\n+DEFINITION MODULE M2Bitset ;\n+\n+(*\n+    Title      : M2Bitset\n+    Author     : Gaius Mulley\n+    System     : GNU Modula-2\n+    Date       : Wed May  7 21:21:31 2003\n+    Revision   : $Version$\n+    Description: provides the BITSET type.\n+*)\n+\n+EXPORT QUALIFIED MakeBitset, GetBitsetMinMax, Bitset, Bitnum ;\n+\n+\n+VAR\n+   Bitset, Bitnum: CARDINAL ;\n+\n+\n+(*\n+   MakeBitset - creates and declares the type BITSET.\n+*)\n+\n+PROCEDURE MakeBitset ;\n+\n+\n+(*\n+   GetBitsetMinMax - assigns min and max to the minimum and maximum values of BITSET.\n+*)\n+\n+PROCEDURE GetBitsetMinMax (VAR min, max: CARDINAL) ;\n+\n+\n+END M2Bitset."}, {"sha": "71c44a3bd8e75fd4ccbd6b9df24ad228b9f01c4a", "filename": "gcc/m2/gm2-compiler/M2Bitset.mod", "status": "added", "additions": 89, "deletions": 0, "changes": 89, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FM2Bitset.mod", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FM2Bitset.mod", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-compiler%2FM2Bitset.mod?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754", "patch": "@@ -0,0 +1,89 @@\n+(* M2Bitset.mod provides the BITSET type.\n+\n+Copyright (C) 2003-2022 Free Software Foundation, Inc.\n+Contributed by Gaius Mulley <gaius.mulley@southwales.ac.uk>.\n+\n+This file is part of GNU Modula-2.\n+\n+GNU Modula-2 is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 3, or (at your option)\n+any later version.\n+\n+GNU Modula-2 is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Modula-2; see the file COPYING3.  If not see\n+<http://www.gnu.org/licenses/>.  *)\n+\n+IMPLEMENTATION MODULE M2Bitset ;\n+\n+\n+FROM M2Debug IMPORT Assert ;\n+FROM m2tree IMPORT Tree ;\n+FROM m2linemap IMPORT BuiltinsLocation ;\n+FROM m2type IMPORT GetWordType ;\n+FROM m2decl IMPORT GetBitsPerBitset ;\n+FROM m2expr IMPORT GetSizeOf ;\n+FROM M2ALU IMPORT PushCard, PushIntegerTree ;\n+FROM NameKey IMPORT MakeKey ;\n+FROM M2System IMPORT Word ;\n+FROM M2Base IMPORT Cardinal ;\n+FROM M2LexBuf IMPORT BuiltinTokenNo ;\n+\n+FROM SymbolTable IMPORT NulSym,\n+      \t       \t     \tMakeConstLit,\n+                        MakeConstVar,\n+      \t       \t     \tMakeSet,\n+      \t       \t     \tMakeSubrange,\n+      \t       \t     \tPutSet,\n+      \t       \t     \tPutSubrange,\n+                        PopValue,\n+                        PopSize ;\n+\n+\n+VAR\n+   MinBitset, MaxBitset : CARDINAL ;\n+\n+\n+(*\n+   MakeBitset - creates and declares the type BITSET.\n+*)\n+\n+PROCEDURE MakeBitset ;\n+BEGIN\n+   Bitset := MakeSet (BuiltinTokenNo, MakeKey('BITSET')) ;     (* Base Type       *)\n+\n+   (* MinBitset *)\n+   MinBitset := MakeConstLit (BuiltinTokenNo, MakeKey('0'), Cardinal) ;\n+\n+   (* MaxBitset *)\n+   MaxBitset := MakeConstVar (BuiltinTokenNo, MakeKey('MaxBitset')) ;\n+   PushCard (GetBitsPerBitset()-1) ;\n+   PopValue (MaxBitset) ;\n+\n+   Assert (Word#NulSym) ;\n+   Bitnum := MakeSubrange (BuiltinTokenNo, MakeKey('BITNUM')) ;\n+   PutSubrange (Bitnum, MinBitset, MaxBitset, Cardinal) ;\n+   PutSet (Bitset, Bitnum, FALSE) ;\n+\n+   PushIntegerTree (GetSizeOf(BuiltinsLocation(), GetWordType())) ;\n+   PopSize (Bitset)\n+END MakeBitset ;\n+\n+\n+(*\n+   GetBitsetMinMax - assigns min and max to the minimum and maximum values of BITSET.\n+*)\n+\n+PROCEDURE GetBitsetMinMax (VAR min, max: CARDINAL) ;\n+BEGIN\n+   min := MinBitset ;\n+   max := MaxBitset\n+END GetBitsetMinMax ;\n+\n+\n+END M2Bitset."}, {"sha": "3033ca58d53968fed6cc6173177060a6b852568e", "filename": "gcc/m2/gm2-compiler/M2CaseList.def", "status": "added", "additions": 123, "deletions": 0, "changes": 123, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FM2CaseList.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FM2CaseList.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-compiler%2FM2CaseList.def?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754", "patch": "@@ -0,0 +1,123 @@\n+(* M2CaseList.def implement ISO case label lists.\n+\n+Copyright (C) 2009-2022 Free Software Foundation, Inc.\n+Contributed by Gaius Mulley <gaius.mulley@southwales.ac.uk>.\n+\n+This file is part of GNU Modula-2.\n+\n+GNU Modula-2 is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 3, or (at your option)\n+any later version.\n+\n+GNU Modula-2 is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Modula-2; see the file COPYING3.  If not see\n+<http://www.gnu.org/licenses/>.  *)\n+\n+DEFINITION MODULE M2CaseList ;\n+\n+(*\n+    Title      : M2CaseList\n+    Author     : Gaius Mulley\n+    System     : GNU Modula-2\n+    Date       : Fri Jul 24 09:53:48 2009\n+    Revision   : $Version$\n+    Description:\n+*)\n+\n+FROM DynamicStrings IMPORT String ;\n+FROM Lists IMPORT List ;\n+\n+\n+(*\n+   PushCase - create a case entity and push it to an internal stack.\n+              Return the case id.\n+*)\n+\n+PROCEDURE PushCase (r: CARDINAL; v: CARDINAL) : CARDINAL ;\n+\n+\n+(*\n+   PopCase - pop the top element of the case entity from the internal\n+             stack.\n+*)\n+\n+PROCEDURE PopCase ;\n+\n+\n+(*\n+   ElseCase - indicates that this case varient does have an else clause.\n+*)\n+\n+PROCEDURE ElseCase (f: CARDINAL) ;\n+\n+\n+(*\n+   BeginCaseList - create a new label list.\n+*)\n+\n+PROCEDURE BeginCaseList (v: CARDINAL) ;\n+\n+\n+(*\n+   EndCaseList - terminate the current label list.\n+*)\n+\n+PROCEDURE EndCaseList ;\n+\n+\n+(*\n+   AddRange - add a range to the current label list.\n+*)\n+\n+PROCEDURE AddRange (r1, r2: CARDINAL; tok: CARDINAL) ;\n+\n+\n+(*\n+   CaseBoundsResolved - returns TRUE if all constants in the case list, c,\n+                        are known to GCC.\n+*)\n+\n+PROCEDURE CaseBoundsResolved (tokenno: CARDINAL; c: CARDINAL) : BOOLEAN ;\n+\n+\n+(*\n+   TypeCaseBounds - returns TRUE if all bounds in case list, c, are\n+                    compatible with the tagged type.\n+*)\n+\n+PROCEDURE TypeCaseBounds (c: CARDINAL) : BOOLEAN ;\n+\n+\n+(*\n+   OverlappingCaseBounds - returns TRUE if there were any overlapping bounds\n+                           in the case list, c.  It will generate an error\n+                           messages for each overlapping bound found.\n+*)\n+\n+PROCEDURE OverlappingCaseBounds (c: CARDINAL) : BOOLEAN ;\n+\n+\n+(*\n+   MissingCaseBounds - returns TRUE if there were any missing bounds\n+                       in the varient record case list, c.  It will\n+                       generate an error message for each missing\n+                       bounds found.\n+*)\n+\n+PROCEDURE MissingCaseBounds (tokenno: CARDINAL; c: CARDINAL) : BOOLEAN ;\n+\n+\n+(*\n+   WriteCase - displays the case list.\n+*)\n+\n+PROCEDURE WriteCase (c: CARDINAL) ;\n+\n+\n+END M2CaseList."}, {"sha": "060d16c3cd3a0b7994f010a15e4f54383552d7be", "filename": "gcc/m2/gm2-compiler/M2CaseList.mod", "status": "added", "additions": 933, "deletions": 0, "changes": 933, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FM2CaseList.mod", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FM2CaseList.mod", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-compiler%2FM2CaseList.mod?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754", "patch": "@@ -0,0 +1,933 @@\n+(* M2CaseList.mod implement ISO case label lists.\n+\n+Copyright (C) 2009-2022 Free Software Foundation, Inc.\n+Contributed by Gaius Mulley <gaius.mulley@southwales.ac.uk>.\n+\n+This file is part of GNU Modula-2.\n+\n+GNU Modula-2 is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 3, or (at your option)\n+any later version.\n+\n+GNU Modula-2 is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Modula-2; see the file COPYING3.  If not see\n+<http://www.gnu.org/licenses/>.  *)\n+\n+IMPLEMENTATION MODULE M2CaseList ;\n+\n+\n+FROM M2Debug IMPORT Assert ;\n+FROM M2GCCDeclare IMPORT TryDeclareConstant, GetTypeMin, GetTypeMax ;\n+FROM M2MetaError IMPORT MetaError1, MetaError2, MetaErrorT0, MetaErrorT1, MetaErrorT2, MetaErrorT3, MetaErrorT4, MetaErrorString1 ;\n+FROM M2Error IMPORT InternalError ;\n+FROM M2Range IMPORT OverlapsRange, IsEqual, IsGreater ;\n+FROM M2ALU IMPORT PushIntegerTree, PopIntegerTree, Addn, Sub, PushInt ;\n+FROM Indexing IMPORT Index, InitIndex, PutIndice, GetIndice, ForeachIndiceInIndexDo, HighIndice ;\n+FROM Lists IMPORT InitList, IncludeItemIntoList ;\n+FROM NameKey IMPORT KeyToCharStar ;\n+FROM SymbolConversion IMPORT GccKnowsAbout, Mod2Gcc, AddModGcc ;\n+FROM DynamicStrings IMPORT InitString, InitStringCharStar, ConCat, Mark, KillString ;\n+FROM m2tree IMPORT Tree ;\n+FROM m2block IMPORT RememberType ;\n+FROM m2type IMPORT GetMinFrom ;\n+FROM Storage IMPORT ALLOCATE ;\n+FROM M2Base IMPORT IsExpressionCompatible ;\n+FROM M2Printf IMPORT printf1 ;\n+\n+FROM SymbolTable IMPORT NulSym, IsConst, IsFieldVarient, IsRecord, IsRecordField, GetVarientTag, GetType,\n+                        ForeachLocalSymDo, GetSymName, IsEnumeration, SkipType ;\n+\n+TYPE\n+   RangePair = POINTER TO RECORD\n+                  low, high: CARDINAL ;\n+                  tokenno  : CARDINAL ;\n+               END ;\n+\n+   ConflictingPair = POINTER TO RECORD\n+                        a, b: RangePair ;\n+                     END ;\n+\n+   CaseList = POINTER TO RECORD\n+                 maxRangeId  : CARDINAL ;\n+                 rangeArray  : Index ;\n+                 currentRange: RangePair ;\n+                 varientField: CARDINAL ;\n+              END ;\n+\n+   CaseDescriptor = POINTER TO RECORD\n+                       elseClause   : BOOLEAN ;\n+                       elseField    : CARDINAL ;\n+                       record       : CARDINAL ;\n+                       varient      : CARDINAL ;\n+                       maxCaseId    : CARDINAL ;\n+                       caseListArray: Index ;\n+                       currentCase  : CaseList ;\n+                       next         : CaseDescriptor ;\n+                    END ;\n+\n+   SetRange = POINTER TO RECORD\n+                 low, high: Tree ;\n+                 next     : SetRange ;\n+              END ;\n+\n+VAR\n+   caseStack    : CaseDescriptor ;\n+   caseId       : CARDINAL ;\n+   caseArray    : Index ;\n+   conflictArray: Index ;\n+   FreeRangeList: SetRange ;\n+\n+\n+\n+(*\n+   PushCase - create a case entity and push it to an internal stack.\n+              r, is NulSym if this is a CASE statement.\n+              If, r, is a record then it indicates it includes one\n+              or more varients reside in the record.  The particular\n+              varient is, v.\n+              Return the case id.\n+*)\n+\n+PROCEDURE PushCase (r: CARDINAL; v: CARDINAL) : CARDINAL ;\n+VAR\n+   c: CaseDescriptor ;\n+BEGIN\n+   INC(caseId) ;\n+   NEW(c) ;\n+   IF c=NIL\n+   THEN\n+      InternalError ('out of memory error')\n+   ELSE\n+      WITH c^ DO\n+         elseClause := FALSE ;\n+         elseField := NulSym ;\n+         record := r ;\n+         varient := v ;\n+         maxCaseId := 0 ;\n+         caseListArray := InitIndex(1) ;\n+         next := caseStack ;\n+         currentCase := NIL\n+      END ;\n+      caseStack := c ;\n+      PutIndice(caseArray, caseId, c)\n+   END ;\n+   RETURN( caseId )\n+END PushCase ;\n+\n+\n+(*\n+   PopCase - pop the top element of the case entity from the internal\n+             stack.\n+*)\n+\n+PROCEDURE PopCase ;\n+BEGIN\n+   IF caseStack=NIL\n+   THEN\n+      InternalError ('case stack is empty')\n+   END ;\n+   caseStack := caseStack^.next\n+END PopCase ;\n+\n+\n+(*\n+   ElseCase - indicates that this case varient does have an else clause.\n+*)\n+\n+PROCEDURE ElseCase (f: CARDINAL) ;\n+BEGIN\n+   WITH caseStack^ DO\n+      elseClause := TRUE ;\n+      elseField := f\n+   END\n+END ElseCase ;\n+\n+\n+(*\n+   BeginCaseList - create a new label list.\n+*)\n+\n+PROCEDURE BeginCaseList (v: CARDINAL) ;\n+VAR\n+   l: CaseList ;\n+BEGIN\n+   NEW(l) ;\n+   IF l=NIL\n+   THEN\n+      InternalError ('out of memory error')\n+   END ;\n+   WITH l^ DO\n+      maxRangeId   := 0 ;\n+      rangeArray   := InitIndex(1) ;\n+      currentRange := NIL ;\n+      varientField := v\n+   END ;\n+   WITH caseStack^ DO\n+      INC(maxCaseId) ;\n+      PutIndice(caseListArray, maxCaseId, l) ;\n+      currentCase := l\n+   END\n+END BeginCaseList ;\n+\n+\n+(*\n+   EndCaseList - terminate the current label list.\n+*)\n+\n+PROCEDURE EndCaseList ;\n+BEGIN\n+   caseStack^.currentCase := NIL\n+END EndCaseList ;\n+\n+\n+(*\n+   AddRange - add a range to the current label list.\n+*)\n+\n+PROCEDURE AddRange (r1, r2: CARDINAL; tok: CARDINAL) ;\n+VAR\n+   r: RangePair ;\n+BEGIN\n+   NEW(r) ;\n+   IF r=NIL\n+   THEN\n+      InternalError ('out of memory error')\n+   ELSE\n+      WITH r^ DO\n+         low := r1 ;\n+         high := r2 ;\n+         tokenno := tok\n+      END ;\n+      WITH caseStack^.currentCase^ DO\n+         INC(maxRangeId) ;\n+         PutIndice(rangeArray, maxRangeId, r) ;\n+         currentRange := r\n+      END\n+   END\n+END AddRange ;\n+\n+\n+(*\n+   GetVariantTagType - returns the type associated with, variant.\n+*)\n+\n+PROCEDURE GetVariantTagType (variant: CARDINAL) : CARDINAL ;\n+VAR\n+   tag: CARDINAL ;\n+BEGIN\n+   tag := GetVarientTag(variant) ;\n+   IF IsFieldVarient(tag) OR IsRecordField(tag)\n+   THEN\n+      RETURN( GetType(tag) )\n+   ELSE\n+      RETURN( tag )\n+   END\n+END GetVariantTagType ;\n+\n+\n+(*\n+   CaseBoundsResolved - returns TRUE if all constants in the case list, c,\n+                        are known to GCC.\n+*)\n+\n+PROCEDURE CaseBoundsResolved (tokenno: CARDINAL; c: CARDINAL) : BOOLEAN ;\n+VAR\n+   resolved: BOOLEAN ;\n+   p       : CaseDescriptor ;\n+   q       : CaseList ;\n+   r       : RangePair ;\n+   min,\n+   max,\n+   type,\n+   i, j    : CARDINAL ;\n+BEGIN\n+   p := GetIndice(caseArray, c) ;\n+   WITH p^ DO\n+      IF varient#NulSym\n+      THEN\n+         (* not a CASE statement, but a varient record containing without an ELSE clause *)\n+         type := GetVariantTagType(varient) ;\n+         resolved := TRUE ;\n+         IF NOT GccKnowsAbout(type)\n+         THEN\n+            (* do we need to add, type, to the list of types required to be resolved? *)\n+            resolved := FALSE\n+         END ;\n+         min := GetTypeMin(type) ;\n+         IF NOT GccKnowsAbout(min)\n+         THEN\n+            TryDeclareConstant(tokenno, min) ;\n+            resolved := FALSE\n+         END ;\n+         max := GetTypeMax(type) ;\n+         IF NOT GccKnowsAbout(max)\n+         THEN\n+            TryDeclareConstant(tokenno, max) ;\n+            resolved := FALSE\n+         END ;\n+         IF NOT resolved\n+         THEN\n+            RETURN( FALSE )\n+         END\n+      END ;\n+      i := 1 ;\n+      WHILE i<=maxCaseId DO\n+         q := GetIndice(caseListArray, i) ;\n+         j := 1 ;\n+         WHILE j<=q^.maxRangeId DO\n+            r := GetIndice(q^.rangeArray, j) ;\n+            IF r^.low#NulSym\n+            THEN\n+               IF IsConst(r^.low)\n+               THEN\n+                  TryDeclareConstant(tokenno, r^.low) ;\n+                  IF NOT GccKnowsAbout(r^.low)\n+                  THEN\n+                     RETURN( FALSE )\n+                  END\n+               ELSE\n+                  IF r^.high=NulSym\n+                  THEN\n+                     MetaError1('the CASE statement variant must be defined by a constant {%1Da:is a {%1d}}', r^.low)\n+                  ELSE\n+                     MetaError1('the CASE statement variant low value in a range must be defined by a constant {%1Da:is a {%1d}}',\n+                                r^.low)\n+                  END\n+               END\n+            END ;\n+            IF r^.high#NulSym\n+            THEN\n+               IF IsConst(r^.high)\n+               THEN\n+                  TryDeclareConstant(tokenno, r^.high) ;\n+                  IF NOT GccKnowsAbout(r^.high)\n+                  THEN\n+                     RETURN( FALSE )\n+                  END\n+               ELSE\n+                  MetaError1('the CASE statement variant high value in a range must be defined by a constant {%1Da:is a {%1d}}',\n+                             r^.high)\n+               END\n+            END ;\n+            INC(j)\n+         END ;\n+         INC(i)\n+      END\n+   END ;\n+   RETURN( TRUE )\n+END CaseBoundsResolved ;\n+\n+\n+(*\n+   IsSame - return TRUE if r, s, are in, e.\n+*)\n+\n+PROCEDURE IsSame (e: ConflictingPair; r, s: RangePair) : BOOLEAN ;\n+BEGIN\n+   WITH e^ DO\n+      RETURN( ((a=r) AND (b=s)) OR ((a=s) AND (b=r)) )\n+   END\n+END IsSame ;\n+\n+\n+(*\n+   SeenBefore -\n+*)\n+\n+PROCEDURE SeenBefore (r, s: RangePair) : BOOLEAN ;\n+VAR\n+   i, h: CARDINAL ;\n+   e   : ConflictingPair ;\n+BEGIN\n+   h := HighIndice(conflictArray) ;\n+   i := 1 ;\n+   WHILE i<=h DO\n+      e := GetIndice(conflictArray, i) ;\n+      IF IsSame(e, r, s)\n+      THEN\n+         RETURN( TRUE )\n+      END ;\n+      INC(i)\n+   END ;\n+   NEW(e) ;\n+   WITH e^ DO\n+      a := r ;\n+      b := s\n+   END ;\n+   PutIndice(conflictArray, h+1, e) ;\n+   RETURN( FALSE )\n+END SeenBefore ;\n+\n+\n+(*\n+   Overlaps -\n+*)\n+\n+PROCEDURE Overlaps (r, s: RangePair) : BOOLEAN ;\n+VAR\n+   a, b, c, d: CARDINAL ;\n+BEGIN\n+   a := r^.low ;\n+   c := s^.low ;\n+   IF r^.high=NulSym\n+   THEN\n+      b := a ;\n+      IF s^.high=NulSym\n+      THEN\n+         d := c ;\n+         IF OverlapsRange(Mod2Gcc(a), Mod2Gcc(b), Mod2Gcc(c), Mod2Gcc(d))\n+         THEN\n+            IF NOT SeenBefore(r, s)\n+            THEN\n+               MetaErrorT2 (r^.tokenno, 'case label {%1ad} is a duplicate with {%2ad}', a, c) ;\n+               MetaErrorT2 (s^.tokenno, 'case label {%1ad} is a duplicate with {%2ad}', c, a)\n+            END ;\n+            RETURN( TRUE )\n+         END\n+      ELSE\n+         d := s^.high ;\n+         IF OverlapsRange(Mod2Gcc(a), Mod2Gcc(b), Mod2Gcc(c), Mod2Gcc(d))\n+         THEN\n+            IF NOT SeenBefore (r, s)\n+            THEN\n+               MetaErrorT3 (r^.tokenno, 'case label {%1ad} is a duplicate in the range {%2ad}..{%3ad}', a, c, d) ;\n+               MetaErrorT3 (s^.tokenno, 'case range {%2ad}..{%3ad} is a duplicate of case label {%1ad}', c, d, a)\n+            END ;\n+            RETURN( TRUE )\n+         END\n+      END\n+   ELSE\n+      b := r^.high ;\n+      IF s^.high=NulSym\n+      THEN\n+         d := c ;\n+         IF OverlapsRange (Mod2Gcc(a), Mod2Gcc(b), Mod2Gcc(c), Mod2Gcc(d))\n+         THEN\n+            IF NOT SeenBefore(r, s)\n+            THEN\n+               MetaErrorT3 (r^.tokenno, 'case range {%1ad}..{%2ad} is a duplicate with case label {%3ad}', a, b, c) ;\n+               MetaErrorT3 (s^.tokenno, 'case label {%1ad} is a duplicate with case range %{2ad}..{%3ad}', c, a, b)\n+            END ;\n+            RETURN( TRUE )\n+         END\n+      ELSE\n+         d := s^.high ;\n+         IF OverlapsRange(Mod2Gcc(a), Mod2Gcc(b), Mod2Gcc(c), Mod2Gcc(d))\n+         THEN\n+            IF NOT SeenBefore(r, s)\n+            THEN\n+               MetaErrorT4 (r^.tokenno, 'case range {%1ad}..{%2ad} overlaps case range {%3ad}..{%4ad}', a, b, c, d) ;\n+               MetaErrorT4 (s^.tokenno, 'case range {%1ad}..{%2ad} overlaps case range {%3ad}..{%4ad}', c, d, a, b)\n+            END ;\n+            RETURN( TRUE )\n+         END\n+      END\n+   END ;\n+   RETURN( FALSE )\n+END Overlaps ;\n+\n+\n+(*\n+   OverlappingCaseBound - returns TRUE if, r, overlaps any case bound in the\n+                          case statement, c.\n+*)\n+\n+PROCEDURE OverlappingCaseBound (r: RangePair; c: CARDINAL) : BOOLEAN ;\n+VAR\n+   p      : CaseDescriptor ;\n+   q      : CaseList ;\n+   s      : RangePair ;\n+   i, j   : CARDINAL ;\n+   overlap: BOOLEAN ;\n+BEGIN\n+   p := GetIndice (caseArray, c) ;\n+   overlap := FALSE ;\n+   WITH p^ DO\n+      i := 1 ;\n+      WHILE i<=maxCaseId DO\n+         q := GetIndice (caseListArray, i) ;\n+         j := 1 ;\n+         WHILE j<=q^.maxRangeId DO\n+            s := GetIndice (q^.rangeArray, j) ;\n+            IF (s#r) AND Overlaps (r, s)\n+            THEN\n+               overlap := TRUE\n+            END ;\n+            INC (j)\n+         END ;\n+         INC (i)\n+      END\n+   END ;\n+   RETURN( overlap )\n+END OverlappingCaseBound ;\n+\n+\n+(*\n+   OverlappingCaseBounds - returns TRUE if there were any overlapping bounds\n+                           in the case list, c.  It will generate an error\n+                           messages for each overlapping bound found.\n+*)\n+\n+PROCEDURE OverlappingCaseBounds (c: CARDINAL) : BOOLEAN ;\n+VAR\n+   p      : CaseDescriptor ;\n+   q      : CaseList ;\n+   r      : RangePair ;\n+   i, j   : CARDINAL ;\n+   overlap: BOOLEAN ;\n+BEGIN\n+   p := GetIndice(caseArray, c) ;\n+   overlap := FALSE ;\n+   WITH p^ DO\n+      i := 1 ;\n+      WHILE i<=maxCaseId DO\n+         q := GetIndice(caseListArray, i) ;\n+         j := 1 ;\n+         WHILE j<=q^.maxRangeId DO\n+            r := GetIndice(q^.rangeArray, j) ;\n+            IF OverlappingCaseBound (r, c)\n+            THEN\n+               overlap := TRUE\n+            END ;\n+            INC(j)\n+         END ;\n+         INC(i)\n+      END\n+   END ;\n+   RETURN( overlap )\n+END OverlappingCaseBounds ;\n+\n+\n+(*\n+   NewRanges -\n+*)\n+\n+PROCEDURE NewRanges () : SetRange ;\n+VAR\n+   s: SetRange ;\n+BEGIN\n+   IF FreeRangeList=NIL\n+   THEN\n+      NEW(s)\n+   ELSE\n+      s := FreeRangeList ;\n+      FreeRangeList := FreeRangeList^.next\n+   END ;\n+   s^.next := NIL ;\n+   RETURN( s )\n+END NewRanges ;\n+\n+\n+(*\n+   NewSet -\n+*)\n+\n+PROCEDURE NewSet (type: CARDINAL) : SetRange ;\n+VAR\n+   s: SetRange ;\n+BEGIN\n+   s := NewRanges() ;\n+   WITH s^ DO\n+      low := Mod2Gcc(GetTypeMin(type)) ;\n+      high := Mod2Gcc(GetTypeMax(type)) ;\n+      next := NIL\n+   END ;\n+   RETURN( s )\n+END NewSet ;\n+\n+\n+(*\n+   DisposeRanges -\n+*)\n+\n+PROCEDURE DisposeRanges (set: SetRange) : SetRange ;\n+VAR\n+   t: SetRange ;\n+BEGIN\n+   IF set#NIL\n+   THEN\n+      IF FreeRangeList=NIL\n+      THEN\n+         FreeRangeList := set\n+      ELSE\n+         t := set ;\n+         WHILE t^.next#NIL DO\n+            t := t^.next\n+         END ;\n+         t^.next := FreeRangeList ;\n+         FreeRangeList := set\n+      END\n+   END ;\n+   RETURN( NIL )\n+END DisposeRanges ;\n+\n+\n+(*\n+   SubBitRange - subtracts bits, lo..hi, from, set.\n+*)\n+\n+PROCEDURE SubBitRange (set: SetRange; lo, hi: Tree; tokenno: CARDINAL) : SetRange ;\n+VAR\n+   h, i : SetRange ;\n+BEGIN\n+   h := set ;\n+   WHILE h#NIL DO\n+      IF (h^.high=NIL) OR IsEqual(h^.high, h^.low)\n+      THEN\n+         IF IsEqual(h^.low, lo) OR OverlapsRange(lo, hi, h^.low, h^.low)\n+         THEN\n+            IF h=set\n+            THEN\n+               set := set^.next ;\n+               h^.next := NIL ;\n+               h := DisposeRanges(h) ;\n+               h := set\n+            ELSE\n+               i := set ;\n+               WHILE i^.next#h DO\n+                  i := i^.next\n+               END ;\n+               i^.next := h^.next ;\n+               i := h ;\n+               h := h^.next ;\n+               i^.next := NIL ;\n+               i := DisposeRanges(i)\n+            END\n+         ELSE\n+            h := h^.next\n+         END\n+      ELSE\n+         IF OverlapsRange(lo, hi, h^.low, h^.high)\n+         THEN\n+            IF IsGreater(h^.low, lo) OR IsGreater(hi, h^.high)\n+            THEN\n+               MetaErrorT0 (tokenno, 'variant case range lies outside tag value')\n+            ELSE\n+               IF IsEqual(h^.low, lo)\n+               THEN\n+                  PushIntegerTree(hi) ;\n+                  PushInt(1) ;\n+                  Addn ;\n+                  h^.low := PopIntegerTree()\n+               ELSIF IsEqual(h^.high, hi)\n+               THEN\n+                  PushIntegerTree(lo) ;\n+                  PushInt(1) ;\n+                  Sub ;\n+                  h^.high := PopIntegerTree()\n+               ELSE\n+                  (* lo..hi  exist inside range h^.low..h^.high *)\n+                  i := NewRanges() ;\n+                  i^.next := h^.next ;\n+                  h^.next := i ;\n+                  i^.high := h^.high ;\n+                  PushIntegerTree(lo) ;\n+                  PushInt(1) ;\n+                  Sub ;\n+                  h^.high := PopIntegerTree() ;\n+                  PushIntegerTree(hi) ;\n+                  PushInt(1) ;\n+                  Addn ;\n+                  i^.low := PopIntegerTree()\n+               END\n+            END\n+         ELSE\n+            h := h^.next\n+         END\n+      END\n+   END ;\n+   RETURN( set )\n+END SubBitRange ;\n+\n+\n+(*\n+   ExcludeCaseRanges - excludes all case ranges found in, p, from, set\n+*)\n+\n+PROCEDURE ExcludeCaseRanges (set: SetRange; p: CaseDescriptor) : SetRange ;\n+VAR\n+   i, j: CARDINAL ;\n+   q   : CaseList ;\n+   r   : RangePair ;\n+BEGIN\n+   WITH p^ DO\n+      i := 1 ;\n+      WHILE i<=maxCaseId DO\n+         q := GetIndice(caseListArray, i) ;\n+         j := 1 ;\n+         WHILE j<=q^.maxRangeId DO\n+            r := GetIndice(q^.rangeArray, j) ;\n+            IF r^.high=NulSym\n+            THEN\n+               set := SubBitRange(set, Mod2Gcc(r^.low), Mod2Gcc(r^.low), r^.tokenno)\n+            ELSE\n+               set := SubBitRange(set, Mod2Gcc(r^.low), Mod2Gcc(r^.high), r^.tokenno)\n+            END ;\n+            INC(j)\n+         END ;\n+         INC(i)\n+      END\n+   END ;\n+   RETURN( set )\n+END ExcludeCaseRanges ;\n+\n+\n+VAR\n+   High, Low  : Tree ;\n+   errorString: String ;\n+\n+\n+(*\n+   DoEnumValues -\n+*)\n+\n+PROCEDURE DoEnumValues (sym: CARDINAL) ;\n+BEGIN\n+   IF (Low#NIL) AND IsEqual(Mod2Gcc(sym), Low)\n+   THEN\n+      errorString := ConCat(errorString, InitStringCharStar(KeyToCharStar(GetSymName(sym)))) ;\n+      Low := NIL\n+   END ;\n+   IF (High#NIL) AND IsEqual(Mod2Gcc(sym), High)\n+   THEN\n+      errorString := ConCat(errorString, Mark(InitString('..'))) ;\n+      errorString := ConCat(errorString, Mark(InitStringCharStar(KeyToCharStar(GetSymName(sym))))) ;\n+      High := NIL\n+   END\n+END DoEnumValues ;\n+\n+\n+(*\n+   ErrorRange -\n+*)\n+\n+PROCEDURE ErrorRange (p: CaseDescriptor; type: CARDINAL; set: SetRange) ;\n+BEGIN\n+   type := SkipType(type) ;\n+   IF IsEnumeration(type)\n+   THEN\n+      Low := set^.low ;\n+      High := set^.high ;\n+      IF IsEqual(Low, High)\n+      THEN\n+         High := NIL ;\n+         errorString := InitString('enumeration value ') ;\n+         ForeachLocalSymDo(type, DoEnumValues) ;\n+         errorString := ConCat(errorString, InitString(' is ignored by the CASE variant record {%1D}'))\n+      ELSE\n+         errorString := InitString('enumeration values ') ;\n+         ForeachLocalSymDo(type, DoEnumValues) ;\n+         errorString := ConCat(errorString, InitString(' are ignored by the CASE variant record {%1D}'))\n+      END ;\n+      MetaErrorString1(errorString, p^.varient)\n+   END\n+END ErrorRange ;\n+\n+\n+(*\n+   ErrorRanges -\n+*)\n+\n+PROCEDURE ErrorRanges (p: CaseDescriptor; type: CARDINAL; set: SetRange) ;\n+BEGIN\n+   WHILE set#NIL DO\n+      ErrorRange(p, type, set) ;\n+      set := set^.next\n+   END\n+END ErrorRanges ;\n+\n+\n+(*\n+   MissingCaseBounds - returns TRUE if there were any missing bounds\n+                       in the varient record case list, c.  It will\n+                       generate an error message for each missing\n+                       bounds found.\n+*)\n+\n+PROCEDURE MissingCaseBounds (tokenno: CARDINAL; c: CARDINAL) : BOOLEAN ;\n+VAR\n+   p      : CaseDescriptor ;\n+   type   : CARDINAL ;\n+   missing: BOOLEAN ;\n+   set    : SetRange ;\n+BEGIN\n+   p := GetIndice(caseArray, c) ;\n+   missing := FALSE ;\n+   WITH p^ DO\n+      IF (record#NulSym) AND (varient#NulSym) AND (NOT elseClause)\n+      THEN\n+         (* not a CASE statement, but a varient record containing without an ELSE clause *)\n+         type := GetVariantTagType(varient) ;\n+         set := NewSet(type) ;\n+         set := ExcludeCaseRanges(set, p) ;\n+         IF set#NIL\n+         THEN\n+            missing := TRUE ;\n+            MetaErrorT2 (tokenno,\n+                         'not all variant record alternatives in the {%kCASE} clause are specified, hint you either need to specify each value of {%2ad} or use an {%kELSE} clause',\n+                         varient, type) ;\n+            ErrorRanges(p, type, set)\n+         END ;\n+         set := DisposeRanges(set)\n+      END\n+   END ;\n+   RETURN( missing )\n+END MissingCaseBounds ;\n+\n+\n+(*\n+   InRangeList - returns TRUE if the value, tag, is defined in the case list.\n+\n+PROCEDURE InRangeList (cl: CaseList; tag: CARDINAL) : BOOLEAN ;\n+VAR\n+   i, h: CARDINAL ;\n+   r   : RangePair ;\n+   a   : Tree ;\n+BEGIN\n+   WITH cl^ DO\n+      i := 1 ;\n+      h := HighIndice(rangeArray) ;\n+      WHILE i<=h DO\n+         r := GetIndice(rangeArray, i) ;\n+         WITH r^ DO\n+            IF high=NulSym\n+            THEN\n+               a := Mod2Gcc(low)\n+            ELSE\n+               a := Mod2Gcc(high)\n+            END ;\n+            IF OverlapsRange(Mod2Gcc(low), a, Mod2Gcc(tag), Mod2Gcc(tag))\n+            THEN\n+               RETURN( TRUE )\n+            END\n+         END ;\n+         INC(i)\n+      END\n+   END ;\n+   RETURN( FALSE )\n+END InRangeList ;\n+*)\n+\n+\n+(*\n+   WriteCase - dump out the case list (internal debugging).\n+*)\n+\n+PROCEDURE WriteCase (c: CARDINAL) ;\n+BEGIN\n+   (* this debugging procedure should be finished.  *)\n+   printf1 (\"%d\", c)\n+END WriteCase ;\n+\n+\n+(*\n+   checkTypes - checks to see that, constant, and, type, are compatible.\n+*)\n+\n+PROCEDURE checkTypes (constant, type: CARDINAL) : BOOLEAN ;\n+VAR\n+   consttype: CARDINAL ;\n+BEGIN\n+   IF (constant#NulSym) AND IsConst(constant)\n+   THEN\n+      consttype := GetType(constant) ;\n+      IF NOT IsExpressionCompatible(consttype, type)\n+      THEN\n+         MetaError2('the CASE statement variant tag {%1ad} must be type compatible with the constant {%2Da:is a {%2d}}',\n+                    type, constant) ;\n+         RETURN( FALSE )\n+      END\n+   END ;\n+   RETURN( TRUE )\n+END checkTypes ;\n+\n+\n+(*\n+   inRange - returns TRUE if, min <= i <= max.\n+*)\n+\n+PROCEDURE inRange (i, min, max: CARDINAL) : BOOLEAN ;\n+BEGIN\n+   RETURN( OverlapsRange(Mod2Gcc(i), Mod2Gcc(i), Mod2Gcc(min), Mod2Gcc(max)) )\n+END inRange ;\n+\n+\n+(*\n+   TypeCaseBounds - returns TRUE if all bounds in case list, c, are\n+                    compatible with the tagged type.\n+*)\n+\n+PROCEDURE TypeCaseBounds (c: CARDINAL) : BOOLEAN ;\n+VAR\n+   p         : CaseDescriptor ;\n+   q         : CaseList ;\n+   r         : RangePair ;\n+   min, max,\n+   type,\n+   i, j      : CARDINAL ;\n+   compatible: BOOLEAN ;\n+BEGIN\n+   p := GetIndice(caseArray, c) ;\n+   type := NulSym ;\n+   WITH p^ DO\n+      type := NulSym ;\n+      IF varient#NulSym\n+      THEN\n+         (* not a CASE statement, but a varient record containing without an ELSE clause *)\n+         type := GetVariantTagType(varient) ;\n+         min := GetTypeMin(type) ;\n+         max := GetTypeMax(type)\n+      END ;\n+      IF type=NulSym\n+      THEN\n+         RETURN( TRUE )\n+      END ;\n+      compatible := TRUE ;\n+      i := 1 ;\n+      WHILE i<=maxCaseId DO\n+         q := GetIndice(caseListArray, i) ;\n+         j := 1 ;\n+         WHILE j<=q^.maxRangeId DO\n+            r := GetIndice(q^.rangeArray, j) ;\n+            IF (r^.low#NulSym) AND (NOT inRange(r^.low, min, max))\n+            THEN\n+               MetaError2('the CASE statement variant range {%1ad} exceeds that of the tag type {%2ad}',\n+                          r^.low, type) ;\n+               compatible := FALSE\n+            END ;\n+            IF NOT checkTypes(r^.low, type)\n+            THEN\n+               compatible := FALSE\n+            END ;\n+            IF (r^.high#NulSym) AND (NOT inRange(r^.high, min, max))\n+            THEN\n+               MetaError2('the CASE statement variant range {%1ad} exceeds that of the tag type {%2ad}',\n+                          r^.high, type) ;\n+               compatible := FALSE\n+            END ;\n+            IF NOT checkTypes(r^.high, type)\n+            THEN\n+               compatible := FALSE\n+            END ;\n+            INC(j)\n+         END ;\n+         INC(i)\n+      END ;\n+      RETURN( compatible )\n+   END\n+END TypeCaseBounds ;\n+\n+\n+BEGIN\n+   caseStack := NIL ;\n+   caseId := 0 ;\n+   caseArray := InitIndex(1) ;\n+   conflictArray := InitIndex(1) ;\n+   FreeRangeList := NIL\n+END M2CaseList."}, {"sha": "5222e32b0791a6d60cd9eb804ca39e90e569bcdb", "filename": "gcc/m2/gm2-compiler/M2Check.def", "status": "added", "additions": 67, "deletions": 0, "changes": 67, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FM2Check.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FM2Check.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-compiler%2FM2Check.def?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754", "patch": "@@ -0,0 +1,67 @@\n+(* M2Check.def perform rigerous type checking for fully declared symbols.\n+\n+Copyright (C) 2020-2022 Free Software Foundation, Inc.\n+Contributed by Gaius Mulley <gaius.mulley@southwales.ac.uk>.\n+\n+This file is part of GNU Modula-2.\n+\n+GNU Modula-2 is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 3, or (at your option)\n+any later version.\n+\n+GNU Modula-2 is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Modula-2; see the file COPYING3.  If not see\n+<http://www.gnu.org/licenses/>.  *)\n+\n+DEFINITION MODULE M2Check ;\n+\n+(*\n+    Title      : M2Check\n+    Author     : Gaius Mulley\n+    System     : GNU Modula-2\n+    Date       : Fri Mar  6 15:32:10 2020\n+    Revision   : $Version$\n+    Description: provides a module to check the symbol type compatibility.\n+                 It assumes that the declaration of all dependants\n+                 is complete.\n+*)\n+\n+\n+(*\n+   ParameterTypeCompatible - returns TRUE if the nth procedure parameter formal\n+                             is compatible with actual.  If the string is empty then\n+                             no error is issued.\n+*)\n+\n+PROCEDURE ParameterTypeCompatible (token: CARDINAL; format: ARRAY OF CHAR;\n+                                   procedure, formal, actual, nth: CARDINAL;\n+                                   isvar: BOOLEAN) : BOOLEAN ;\n+\n+\n+(*\n+   AssignmentTypeCompatible - returns TRUE if the des and the expr are assignment compatible.\n+                              If the string is empty then no error is issued.\n+*)\n+\n+PROCEDURE AssignmentTypeCompatible (token: CARDINAL; format: ARRAY OF CHAR;\n+                                    des, expr: CARDINAL) : BOOLEAN ;\n+\n+\n+(*\n+   ExpressionTypeCompatible - returns TRUE if the expressions, left and right,\n+                              are expression compatible.\n+                              If the string is empty then no error is issued.\n+*)\n+\n+PROCEDURE ExpressionTypeCompatible (token: CARDINAL; format: ARRAY OF CHAR;\n+                                    left, right: CARDINAL;\n+                                    strict, isin: BOOLEAN) : BOOLEAN ;\n+\n+\n+END M2Check."}, {"sha": "a2ce726058626a6d3e6c38cac057d41bdfc5dbe2", "filename": "gcc/m2/gm2-compiler/M2Check.mod", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FM2Check.mod", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FM2Check.mod", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-compiler%2FM2Check.mod?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754"}, {"sha": "caf0cf5898e5171086bded24c419e220e7d2d261", "filename": "gcc/m2/gm2-compiler/M2Code.def", "status": "added", "additions": 54, "deletions": 0, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FM2Code.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FM2Code.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-compiler%2FM2Code.def?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754"}, {"sha": "1d0c3304d7fa24fbe600685be686e78fde5e38b7", "filename": "gcc/m2/gm2-compiler/M2Code.mod", "status": "added", "additions": 528, "deletions": 0, "changes": 528, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FM2Code.mod", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FM2Code.mod", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-compiler%2FM2Code.mod?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754"}, {"sha": "00a8978aafd9854821a6b52ef30f78d94276f767", "filename": "gcc/m2/gm2-compiler/M2ColorString.def", "status": "added", "additions": 142, "deletions": 0, "changes": 142, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FM2ColorString.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FM2ColorString.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-compiler%2FM2ColorString.def?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754"}, {"sha": "3f1203953cd80e31896eb3cf0a701d4ce0f74d86", "filename": "gcc/m2/gm2-compiler/M2ColorString.mod", "status": "added", "additions": 218, "deletions": 0, "changes": 218, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FM2ColorString.mod", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FM2ColorString.mod", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-compiler%2FM2ColorString.mod?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754"}, {"sha": "e343ba0377462fe79e0009e3b478a62034ef4c90", "filename": "gcc/m2/gm2-compiler/M2Comp.def", "status": "added", "additions": 70, "deletions": 0, "changes": 70, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FM2Comp.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FM2Comp.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-compiler%2FM2Comp.def?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754"}, {"sha": "d9840f963051e086c0d2ca89931b01f89bc86756", "filename": "gcc/m2/gm2-compiler/M2Comp.mod", "status": "added", "additions": 652, "deletions": 0, "changes": 652, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FM2Comp.mod", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FM2Comp.mod", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-compiler%2FM2Comp.mod?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754"}, {"sha": "7c186af9eebb542af0bbaca21a4a563f60024178", "filename": "gcc/m2/gm2-compiler/M2Const.def", "status": "added", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FM2Const.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FM2Const.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-compiler%2FM2Const.def?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754"}, {"sha": "586b2f8ed0f774a6fcd36a9408869a8b6c15b31a", "filename": "gcc/m2/gm2-compiler/M2Const.mod", "status": "added", "additions": 501, "deletions": 0, "changes": 501, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FM2Const.mod", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FM2Const.mod", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-compiler%2FM2Const.mod?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754"}, {"sha": "91c16507443196625235f646d9c7e01ff3fb1831", "filename": "gcc/m2/gm2-compiler/M2Debug.def", "status": "added", "additions": 49, "deletions": 0, "changes": 49, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FM2Debug.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FM2Debug.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-compiler%2FM2Debug.def?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754"}, {"sha": "360f389336ee5a2c03a3a1a76c075c88bacd6f0e", "filename": "gcc/m2/gm2-compiler/M2Debug.mod", "status": "added", "additions": 57, "deletions": 0, "changes": 57, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FM2Debug.mod", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FM2Debug.mod", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-compiler%2FM2Debug.mod?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754"}, {"sha": "26c54e6e2330e41e5fc7e64eebaeec2a517d4f2f", "filename": "gcc/m2/gm2-compiler/M2DebugStack.def", "status": "added", "additions": 51, "deletions": 0, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FM2DebugStack.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FM2DebugStack.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-compiler%2FM2DebugStack.def?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754"}, {"sha": "4015cf77243a0b67092ba6608ddbdd023bcf1698", "filename": "gcc/m2/gm2-compiler/M2DebugStack.mod", "status": "added", "additions": 884, "deletions": 0, "changes": 884, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FM2DebugStack.mod", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FM2DebugStack.mod", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-compiler%2FM2DebugStack.mod?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754"}, {"sha": "7a3d477d542e6eea70134abbad951678fcd9f9fa", "filename": "gcc/m2/gm2-compiler/M2Defaults.def", "status": "added", "additions": 54, "deletions": 0, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FM2Defaults.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FM2Defaults.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-compiler%2FM2Defaults.def?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754"}, {"sha": "8d03760b86a793d88ac2a2dc3442220f297fd14f", "filename": "gcc/m2/gm2-compiler/M2Defaults.mod", "status": "added", "additions": 64, "deletions": 0, "changes": 64, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FM2Defaults.mod", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FM2Defaults.mod", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-compiler%2FM2Defaults.mod?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754"}, {"sha": "9414675ba6dc45dc8be8515f85d45caafd5df462", "filename": "gcc/m2/gm2-compiler/M2DriverOptions.def", "status": "added", "additions": 43, "deletions": 0, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FM2DriverOptions.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FM2DriverOptions.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-compiler%2FM2DriverOptions.def?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754"}, {"sha": "e3971e6b29eb18c9afa14ed7fb34a14161282b54", "filename": "gcc/m2/gm2-compiler/M2DriverOptions.mod", "status": "added", "additions": 95, "deletions": 0, "changes": 95, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FM2DriverOptions.mod", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FM2DriverOptions.mod", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-compiler%2FM2DriverOptions.mod?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754"}, {"sha": "194de3a521c3c03711d9807a865de6ba39a64336", "filename": "gcc/m2/gm2-compiler/M2Emit.def", "status": "added", "additions": 59, "deletions": 0, "changes": 59, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FM2Emit.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FM2Emit.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-compiler%2FM2Emit.def?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754"}, {"sha": "4b4026e0181bc58ec287dd2a5c9b3e29ad24ce76", "filename": "gcc/m2/gm2-compiler/M2Emit.mod", "status": "added", "additions": 82, "deletions": 0, "changes": 82, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FM2Emit.mod", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FM2Emit.mod", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-compiler%2FM2Emit.mod?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754"}, {"sha": "852111382b921ffb622f1f6fee0f320829fb54c4", "filename": "gcc/m2/gm2-compiler/M2Error.def", "status": "added", "additions": 364, "deletions": 0, "changes": 364, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FM2Error.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FM2Error.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-compiler%2FM2Error.def?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754"}, {"sha": "6df9b665c3dd55687845f76b41402ed2b83131ba", "filename": "gcc/m2/gm2-compiler/M2Error.mod", "status": "added", "additions": 1181, "deletions": 0, "changes": 1181, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FM2Error.mod", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FM2Error.mod", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-compiler%2FM2Error.mod?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754"}, {"sha": "d8b2c42ad671c346c7fe4399f71ca19c3bd0f973", "filename": "gcc/m2/gm2-compiler/M2EvalSym.def", "status": "added", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FM2EvalSym.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FM2EvalSym.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-compiler%2FM2EvalSym.def?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754"}, {"sha": "31b5a08b11ce124a54257761620f5e5630e39e0e", "filename": "gcc/m2/gm2-compiler/M2FileName.def", "status": "added", "additions": 74, "deletions": 0, "changes": 74, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FM2FileName.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FM2FileName.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-compiler%2FM2FileName.def?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754"}, {"sha": "0a40c681c3473d6129cd6f557f6f9fa319a6ed89", "filename": "gcc/m2/gm2-compiler/M2FileName.mod", "status": "added", "additions": 106, "deletions": 0, "changes": 106, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FM2FileName.mod", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FM2FileName.mod", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-compiler%2FM2FileName.mod?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754"}, {"sha": "5938410ccc66d721405b3b3c123a645b514a9074", "filename": "gcc/m2/gm2-compiler/M2GCCDeclare.def", "status": "added", "additions": 245, "deletions": 0, "changes": 245, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FM2GCCDeclare.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FM2GCCDeclare.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-compiler%2FM2GCCDeclare.def?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754"}, {"sha": "7e814b631eedf0d2f05512e5505cdc04ed8326df", "filename": "gcc/m2/gm2-compiler/M2GCCDeclare.mod", "status": "added", "additions": 6326, "deletions": 0, "changes": 6326, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FM2GCCDeclare.mod", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FM2GCCDeclare.mod", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-compiler%2FM2GCCDeclare.mod?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754"}, {"sha": "70e0418bc0dcd27742c60117a1853ccf5671f749", "filename": "gcc/m2/gm2-compiler/M2GenGCC.def", "status": "added", "additions": 103, "deletions": 0, "changes": 103, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FM2GenGCC.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FM2GenGCC.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-compiler%2FM2GenGCC.def?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754"}, {"sha": "89c035897d3716f306555e119d5f1b1b7e2e9264", "filename": "gcc/m2/gm2-compiler/M2GenGCC.mod", "status": "added", "additions": 7193, "deletions": 0, "changes": 7193, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FM2GenGCC.mod", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FM2GenGCC.mod", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-compiler%2FM2GenGCC.mod?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754"}, {"sha": "261e46fb354548d7047125aa021832c77b791671", "filename": "gcc/m2/gm2-compiler/M2Graph.def", "status": "added", "additions": 58, "deletions": 0, "changes": 58, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FM2Graph.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FM2Graph.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-compiler%2FM2Graph.def?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754"}, {"sha": "489186a4b3b8904b1d778ab400761d44975601e3", "filename": "gcc/m2/gm2-compiler/M2Graph.mod", "status": "added", "additions": 234, "deletions": 0, "changes": 234, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FM2Graph.mod", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FM2Graph.mod", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-compiler%2FM2Graph.mod?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754"}, {"sha": "34a2b2ea96e8458604defe4334fff9c5617d04d5", "filename": "gcc/m2/gm2-compiler/M2Lex.def", "status": "added", "additions": 106, "deletions": 0, "changes": 106, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FM2Lex.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FM2Lex.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-compiler%2FM2Lex.def?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754"}, {"sha": "a38e1bca6b8cd90e698d5fb343c42cdc1afc75b1", "filename": "gcc/m2/gm2-compiler/M2Lex.mod", "status": "added", "additions": 418, "deletions": 0, "changes": 418, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FM2Lex.mod", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FM2Lex.mod", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-compiler%2FM2Lex.mod?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754"}, {"sha": "038b30b992f0dd1d72207f04e188371aaf3ddbcd", "filename": "gcc/m2/gm2-compiler/M2LexBuf.def", "status": "added", "additions": 277, "deletions": 0, "changes": 277, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FM2LexBuf.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FM2LexBuf.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-compiler%2FM2LexBuf.def?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754"}, {"sha": "ffdcb674d43f9cd6968c8416d4086f6d0d5157b3", "filename": "gcc/m2/gm2-compiler/M2LexBuf.mod", "status": "added", "additions": 1231, "deletions": 0, "changes": 1231, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FM2LexBuf.mod", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FM2LexBuf.mod", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-compiler%2FM2LexBuf.mod?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754"}, {"sha": "c6ad21d205bd56115aec84c48c20daa25ad95fae", "filename": "gcc/m2/gm2-compiler/M2MetaError.def", "status": "added", "additions": 185, "deletions": 0, "changes": 185, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FM2MetaError.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FM2MetaError.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-compiler%2FM2MetaError.def?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754"}, {"sha": "08c0985f7d260af5624d9543105dc839231955af", "filename": "gcc/m2/gm2-compiler/M2MetaError.mod", "status": "added", "additions": 2477, "deletions": 0, "changes": 2477, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FM2MetaError.mod", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FM2MetaError.mod", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-compiler%2FM2MetaError.mod?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754"}, {"sha": "a0aeb07a1ef026fce8c243311769c1f8774653d9", "filename": "gcc/m2/gm2-compiler/M2Optimize.def", "status": "added", "additions": 59, "deletions": 0, "changes": 59, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FM2Optimize.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FM2Optimize.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-compiler%2FM2Optimize.def?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754"}, {"sha": "baf5177e05c45bba82c6e28523b9be968edf6c18", "filename": "gcc/m2/gm2-compiler/M2Optimize.mod", "status": "added", "additions": 521, "deletions": 0, "changes": 521, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FM2Optimize.mod", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FM2Optimize.mod", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-compiler%2FM2Optimize.mod?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754"}, {"sha": "7e0ea4cdefacf053d6e8d29659e37c2d59f6f575", "filename": "gcc/m2/gm2-compiler/M2Options.def", "status": "added", "additions": 818, "deletions": 0, "changes": 818, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FM2Options.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FM2Options.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-compiler%2FM2Options.def?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754"}, {"sha": "5e2eb570f24733dbb5fe9dbe44f2861d4b90d3c3", "filename": "gcc/m2/gm2-compiler/M2Options.mod", "status": "added", "additions": 1249, "deletions": 0, "changes": 1249, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FM2Options.mod", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FM2Options.mod", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-compiler%2FM2Options.mod?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754"}, {"sha": "baa8c714bb6c4e73ff039b9037d4a6b8a391e875", "filename": "gcc/m2/gm2-compiler/M2Pass.def", "status": "added", "additions": 178, "deletions": 0, "changes": 178, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FM2Pass.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FM2Pass.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-compiler%2FM2Pass.def?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754"}, {"sha": "59c0203abf9d249bea12ed600a39ec4d5cc1fff1", "filename": "gcc/m2/gm2-compiler/M2Pass.mod", "status": "added", "additions": 246, "deletions": 0, "changes": 246, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FM2Pass.mod", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FM2Pass.mod", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-compiler%2FM2Pass.mod?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754"}, {"sha": "7f8d798a7de92bdb96d9fcf0999e5a93f5ea20de", "filename": "gcc/m2/gm2-compiler/M2Preprocess.def", "status": "added", "additions": 51, "deletions": 0, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FM2Preprocess.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FM2Preprocess.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-compiler%2FM2Preprocess.def?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754"}, {"sha": "44a688d200862ef120a51a4c78f650f771a7203c", "filename": "gcc/m2/gm2-compiler/M2Preprocess.mod", "status": "added", "additions": 152, "deletions": 0, "changes": 152, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FM2Preprocess.mod", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FM2Preprocess.mod", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-compiler%2FM2Preprocess.mod?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754"}, {"sha": "470307c34309f3f4338313ed371c33084ef6d0c9", "filename": "gcc/m2/gm2-compiler/M2Printf.def", "status": "added", "additions": 66, "deletions": 0, "changes": 66, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FM2Printf.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FM2Printf.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-compiler%2FM2Printf.def?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754"}, {"sha": "8f7c98a47ffed36c96175d70f0db7d1aa71e6f9f", "filename": "gcc/m2/gm2-compiler/M2Printf.mod", "status": "added", "additions": 314, "deletions": 0, "changes": 314, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FM2Printf.mod", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FM2Printf.mod", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-compiler%2FM2Printf.mod?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754"}, {"sha": "bc84c24e75817ebcbe6818b9be0adc7479c5fd97", "filename": "gcc/m2/gm2-compiler/M2Quads.def", "status": "added", "additions": 2713, "deletions": 0, "changes": 2713, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FM2Quads.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FM2Quads.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-compiler%2FM2Quads.def?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754"}, {"sha": "cbd4a97537447f8c4847855b916681a5b882b282", "filename": "gcc/m2/gm2-compiler/M2Quads.mod", "status": "added", "additions": 15069, "deletions": 0, "changes": 15069, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FM2Quads.mod", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FM2Quads.mod", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-compiler%2FM2Quads.mod?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754"}, {"sha": "ec215f6eb8aab2aa6afae48cc7eae936db766ee8", "filename": "gcc/m2/gm2-compiler/M2Quiet.def", "status": "added", "additions": 46, "deletions": 0, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FM2Quiet.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FM2Quiet.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-compiler%2FM2Quiet.def?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754"}, {"sha": "b473208ef42d28b8e8d09cbc6be6cb4726e1f11a", "filename": "gcc/m2/gm2-compiler/M2Quiet.mod", "status": "added", "additions": 74, "deletions": 0, "changes": 74, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FM2Quiet.mod", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FM2Quiet.mod", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-compiler%2FM2Quiet.mod?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754"}, {"sha": "d2bc4f62aea788c714a1e8f42db697454ae298e7", "filename": "gcc/m2/gm2-compiler/M2Range.def", "status": "added", "additions": 418, "deletions": 0, "changes": 418, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FM2Range.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FM2Range.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-compiler%2FM2Range.def?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754"}, {"sha": "fa84515a73e2fa5bbffa0b8216b14f7c1090ac79", "filename": "gcc/m2/gm2-compiler/M2Range.mod", "status": "added", "additions": 3472, "deletions": 0, "changes": 3472, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FM2Range.mod", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FM2Range.mod", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-compiler%2FM2Range.mod?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754"}, {"sha": "0f63245850caaf29321d02a979099708136fabf8", "filename": "gcc/m2/gm2-compiler/M2Reserved.def", "status": "added", "additions": 128, "deletions": 0, "changes": 128, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FM2Reserved.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FM2Reserved.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-compiler%2FM2Reserved.def?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754"}, {"sha": "e5918a60fbafbbbfdbc3eec196f688fcd7dccfde", "filename": "gcc/m2/gm2-compiler/M2Reserved.mod", "status": "added", "additions": 358, "deletions": 0, "changes": 358, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FM2Reserved.mod", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FM2Reserved.mod", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-compiler%2FM2Reserved.mod?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754"}, {"sha": "b4a85590f52eb02dbec6b117d53d40749b28d62d", "filename": "gcc/m2/gm2-compiler/M2SSA.def", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FM2SSA.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FM2SSA.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-compiler%2FM2SSA.def?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754"}, {"sha": "e2fba18d92661de1b14e9de5b7342a6ad00be22b", "filename": "gcc/m2/gm2-compiler/M2SSA.mod", "status": "added", "additions": 173, "deletions": 0, "changes": 173, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FM2SSA.mod", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FM2SSA.mod", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-compiler%2FM2SSA.mod?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754"}, {"sha": "48a47c5e0dc2b94ea298f337ce66ab7a5867ad68", "filename": "gcc/m2/gm2-compiler/M2Scaffold.def", "status": "added", "additions": 74, "deletions": 0, "changes": 74, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FM2Scaffold.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FM2Scaffold.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-compiler%2FM2Scaffold.def?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754"}, {"sha": "ea8cddf9e2ca6ed66abadd988a6c80363850fed1", "filename": "gcc/m2/gm2-compiler/M2Scaffold.mod", "status": "added", "additions": 629, "deletions": 0, "changes": 629, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FM2Scaffold.mod", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FM2Scaffold.mod", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-compiler%2FM2Scaffold.mod?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754"}, {"sha": "66212a3870c2bec3109c267997eb650c3dacc318", "filename": "gcc/m2/gm2-compiler/M2Scope.def", "status": "added", "additions": 65, "deletions": 0, "changes": 65, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FM2Scope.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FM2Scope.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-compiler%2FM2Scope.def?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754"}, {"sha": "ee878971252d8e8f9d750f025a8ced24caa8b39a", "filename": "gcc/m2/gm2-compiler/M2Scope.mod", "status": "added", "additions": 496, "deletions": 0, "changes": 496, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FM2Scope.mod", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FM2Scope.mod", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-compiler%2FM2Scope.mod?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754"}, {"sha": "0baed2dd75c37807e29f6ecf7905164687355de8", "filename": "gcc/m2/gm2-compiler/M2Search.def", "status": "added", "additions": 115, "deletions": 0, "changes": 115, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FM2Search.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FM2Search.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-compiler%2FM2Search.def?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754"}, {"sha": "3a1ae881ca20365f4a4ee12ec8cb48b862a40ccd", "filename": "gcc/m2/gm2-compiler/M2Search.mod", "status": "added", "additions": 313, "deletions": 0, "changes": 313, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FM2Search.mod", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FM2Search.mod", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-compiler%2FM2Search.mod?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754"}, {"sha": "74a1c8125fe855c7cea718c1c09129985f9d299f", "filename": "gcc/m2/gm2-compiler/M2Size.def", "status": "added", "additions": 46, "deletions": 0, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FM2Size.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FM2Size.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-compiler%2FM2Size.def?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754"}, {"sha": "0e85c6ff3f10977135303ead8139ed10e608c35f", "filename": "gcc/m2/gm2-compiler/M2Size.mod", "status": "added", "additions": 52, "deletions": 0, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FM2Size.mod", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FM2Size.mod", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-compiler%2FM2Size.mod?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754"}, {"sha": "70cbbeae3d0df9e9db73ee5c3e786df2df46579e", "filename": "gcc/m2/gm2-compiler/M2StackAddress.def", "status": "added", "additions": 99, "deletions": 0, "changes": 99, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FM2StackAddress.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FM2StackAddress.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-compiler%2FM2StackAddress.def?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754"}, {"sha": "ff6f67627c5ae3b05851544e14d11e9771bc7485", "filename": "gcc/m2/gm2-compiler/M2StackAddress.mod", "status": "added", "additions": 288, "deletions": 0, "changes": 288, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FM2StackAddress.mod", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FM2StackAddress.mod", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-compiler%2FM2StackAddress.mod?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754"}, {"sha": "0540f19d17e4d8002d03c7e536f7c65faad9985a", "filename": "gcc/m2/gm2-compiler/M2StackWord.def", "status": "added", "additions": 106, "deletions": 0, "changes": 106, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FM2StackWord.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FM2StackWord.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-compiler%2FM2StackWord.def?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754"}, {"sha": "73d627bca7f0e3e7d74ad3f31bb76cdbba44abea", "filename": "gcc/m2/gm2-compiler/M2StackWord.mod", "status": "added", "additions": 300, "deletions": 0, "changes": 300, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FM2StackWord.mod", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FM2StackWord.mod", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-compiler%2FM2StackWord.mod?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754"}, {"sha": "d34d902fa023600a4eacf5645274dd38f35b4958", "filename": "gcc/m2/gm2-compiler/M2Students.def", "status": "added", "additions": 54, "deletions": 0, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FM2Students.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FM2Students.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-compiler%2FM2Students.def?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754"}, {"sha": "20e375f1d3bf5613fdb18231f45672d4a6644237", "filename": "gcc/m2/gm2-compiler/M2Students.mod", "status": "added", "additions": 256, "deletions": 0, "changes": 256, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FM2Students.mod", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FM2Students.mod", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-compiler%2FM2Students.mod?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754"}, {"sha": "5c44618822b56724d1f3816aa232023d0d70eb85", "filename": "gcc/m2/gm2-compiler/M2Swig.def", "status": "added", "additions": 44, "deletions": 0, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FM2Swig.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FM2Swig.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-compiler%2FM2Swig.def?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754"}, {"sha": "15b36c427f0b24c0cc12196722ff17267803a5aa", "filename": "gcc/m2/gm2-compiler/M2Swig.mod", "status": "added", "additions": 985, "deletions": 0, "changes": 985, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FM2Swig.mod", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FM2Swig.mod", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-compiler%2FM2Swig.mod?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754"}, {"sha": "f1f324b9762838634cb8521334879b1cfd3f8405", "filename": "gcc/m2/gm2-compiler/M2System.def", "status": "added", "additions": 253, "deletions": 0, "changes": 253, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FM2System.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FM2System.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-compiler%2FM2System.def?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754"}, {"sha": "0b8a106b9f5f2d5bc986d9390ed3e7f0ee248a45", "filename": "gcc/m2/gm2-compiler/M2System.mod", "status": "added", "additions": 819, "deletions": 0, "changes": 819, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FM2System.mod", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FM2System.mod", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-compiler%2FM2System.mod?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754"}, {"sha": "dcef2641545abac20a360b25cee4e978b835d372", "filename": "gcc/m2/gm2-compiler/M2Version.def", "status": "added", "additions": 70, "deletions": 0, "changes": 70, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FM2Version.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FM2Version.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-compiler%2FM2Version.def?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754"}, {"sha": "2838df86649685514165665531e4ebad20975fa6", "filename": "gcc/m2/gm2-compiler/NameKey.def", "status": "added", "additions": 122, "deletions": 0, "changes": 122, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FNameKey.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FNameKey.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-compiler%2FNameKey.def?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754"}, {"sha": "bcb45718d69c300f5403b7b0c0a0b83796e85938", "filename": "gcc/m2/gm2-compiler/NameKey.mod", "status": "added", "additions": 417, "deletions": 0, "changes": 417, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FNameKey.mod", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FNameKey.mod", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-compiler%2FNameKey.mod?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754"}, {"sha": "1a1c99a77f0059aa246ff5b5a464491bac6599e7", "filename": "gcc/m2/gm2-compiler/ObjectFiles.def", "status": "added", "additions": 71, "deletions": 0, "changes": 71, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FObjectFiles.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FObjectFiles.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-compiler%2FObjectFiles.def?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754"}, {"sha": "87637062fdd23bd62a69da3fdb7e0b2280d4f2ee", "filename": "gcc/m2/gm2-compiler/ObjectFiles.mod", "status": "added", "additions": 171, "deletions": 0, "changes": 171, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FObjectFiles.mod", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FObjectFiles.mod", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-compiler%2FObjectFiles.mod?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754"}, {"sha": "7094517cef89b761945084f24f6e9007c35c1bf9", "filename": "gcc/m2/gm2-compiler/Output.def", "status": "added", "additions": 116, "deletions": 0, "changes": 116, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FOutput.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FOutput.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-compiler%2FOutput.def?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754"}, {"sha": "2bd8699d82f6a3d5faa81d47247dc800280a81bb", "filename": "gcc/m2/gm2-compiler/Output.mod", "status": "added", "additions": 200, "deletions": 0, "changes": 200, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FOutput.mod", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FOutput.mod", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-compiler%2FOutput.mod?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754"}, {"sha": "c7cfb4800b384cd716fe599be97fa94ad6b9589c", "filename": "gcc/m2/gm2-compiler/P0SymBuild.def", "status": "added", "additions": 134, "deletions": 0, "changes": 134, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FP0SymBuild.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FP0SymBuild.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-compiler%2FP0SymBuild.def?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754"}, {"sha": "00aac85f6a108c3317614b6dfe7fdb2baba322c4", "filename": "gcc/m2/gm2-compiler/P0SymBuild.mod", "status": "added", "additions": 760, "deletions": 0, "changes": 760, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FP0SymBuild.mod", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FP0SymBuild.mod", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-compiler%2FP0SymBuild.mod?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754"}, {"sha": "7e948afd17134effb878fd6c50c2f9741ad76995", "filename": "gcc/m2/gm2-compiler/P0SyntaxCheck.bnf", "status": "added", "additions": 931, "deletions": 0, "changes": 931, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FP0SyntaxCheck.bnf", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FP0SyntaxCheck.bnf", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-compiler%2FP0SyntaxCheck.bnf?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754"}, {"sha": "3c28b5540c7b0959b0e544a1a976ae83d4ab967e", "filename": "gcc/m2/gm2-compiler/P0SyntaxCheck.def", "status": "added", "additions": 44, "deletions": 0, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FP0SyntaxCheck.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FP0SyntaxCheck.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-compiler%2FP0SyntaxCheck.def?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754"}, {"sha": "085114a07e9bf9feafef868c6b6f0eb71ec81c65", "filename": "gcc/m2/gm2-compiler/P1Build.bnf", "status": "added", "additions": 1050, "deletions": 0, "changes": 1050, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FP1Build.bnf", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FP1Build.bnf", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-compiler%2FP1Build.bnf?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754"}, {"sha": "74c1bcb8bc333f0ba4db439d718c7c0a1484fad0", "filename": "gcc/m2/gm2-compiler/P1Build.def", "status": "added", "additions": 44, "deletions": 0, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FP1Build.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FP1Build.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-compiler%2FP1Build.def?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754"}, {"sha": "d4b31411353d4729b5ba86a879ca393169538e57", "filename": "gcc/m2/gm2-compiler/P1SymBuild.def", "status": "added", "additions": 562, "deletions": 0, "changes": 562, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FP1SymBuild.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FP1SymBuild.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-compiler%2FP1SymBuild.def?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754"}, {"sha": "06756bcf5d1c67984a4a75ee0429c8b735f9d130", "filename": "gcc/m2/gm2-compiler/P1SymBuild.mod", "status": "added", "additions": 1160, "deletions": 0, "changes": 1160, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FP1SymBuild.mod", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FP1SymBuild.mod", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-compiler%2FP1SymBuild.mod?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754"}, {"sha": "590047eecbee87b64a21c766904890edfaa4c358", "filename": "gcc/m2/gm2-compiler/P2Build.bnf", "status": "added", "additions": 1237, "deletions": 0, "changes": 1237, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FP2Build.bnf", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FP2Build.bnf", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-compiler%2FP2Build.bnf?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754"}, {"sha": "f62c4496e4b963a43703afab086079216a9adc7b", "filename": "gcc/m2/gm2-compiler/P2Build.def", "status": "added", "additions": 43, "deletions": 0, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FP2Build.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FP2Build.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-compiler%2FP2Build.def?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754"}, {"sha": "e7ed35f5545272d62aec20b7ac2f388c6f797e0b", "filename": "gcc/m2/gm2-compiler/P2SymBuild.def", "status": "added", "additions": 1314, "deletions": 0, "changes": 1314, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FP2SymBuild.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FP2SymBuild.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-compiler%2FP2SymBuild.def?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754"}, {"sha": "d5c8d24996310dab45e8fedd7b2bab8a3b498845", "filename": "gcc/m2/gm2-compiler/P2SymBuild.mod", "status": "added", "additions": 3105, "deletions": 0, "changes": 3105, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FP2SymBuild.mod", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FP2SymBuild.mod", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-compiler%2FP2SymBuild.mod?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754"}, {"sha": "8ccc4d604a34d2881408a366d51605b62d519e4b", "filename": "gcc/m2/gm2-compiler/P3Build.bnf", "status": "added", "additions": 1676, "deletions": 0, "changes": 1676, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FP3Build.bnf", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FP3Build.bnf", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-compiler%2FP3Build.bnf?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754"}, {"sha": "674f892658ccfa4bc1e2d962e5dc6ba7ad03e651", "filename": "gcc/m2/gm2-compiler/P3Build.def", "status": "added", "additions": 43, "deletions": 0, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FP3Build.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FP3Build.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-compiler%2FP3Build.def?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754"}, {"sha": "4d41a40148bc78ec255e3bd04520c64b05851216", "filename": "gcc/m2/gm2-compiler/P3SymBuild.def", "status": "added", "additions": 395, "deletions": 0, "changes": 395, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FP3SymBuild.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FP3SymBuild.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-compiler%2FP3SymBuild.def?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754"}, {"sha": "3b8bfb2fa3847b534f3b031be8aeb39f0e9c6b0e", "filename": "gcc/m2/gm2-compiler/P3SymBuild.mod", "status": "added", "additions": 690, "deletions": 0, "changes": 690, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FP3SymBuild.mod", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FP3SymBuild.mod", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-compiler%2FP3SymBuild.mod?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754"}, {"sha": "40fc1e63923e6055b3f06f449960ff970776fec0", "filename": "gcc/m2/gm2-compiler/PCBuild.bnf", "status": "added", "additions": 1263, "deletions": 0, "changes": 1263, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FPCBuild.bnf", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FPCBuild.bnf", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-compiler%2FPCBuild.bnf?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754"}, {"sha": "871c74110872d10ff3f99c6f85a3ca430654bf4c", "filename": "gcc/m2/gm2-compiler/PCBuild.def", "status": "added", "additions": 44, "deletions": 0, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FPCBuild.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FPCBuild.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-compiler%2FPCBuild.def?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754"}, {"sha": "88c7ff390426b010379a1332e25de3b4785c4601", "filename": "gcc/m2/gm2-compiler/PCSymBuild.def", "status": "added", "additions": 497, "deletions": 0, "changes": 497, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FPCSymBuild.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FPCSymBuild.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-compiler%2FPCSymBuild.def?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754"}, {"sha": "57d77e1b2f5f6d20546661bf17a150fa4dbfd3bd", "filename": "gcc/m2/gm2-compiler/PCSymBuild.mod", "status": "added", "additions": 2292, "deletions": 0, "changes": 2292, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FPCSymBuild.mod", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FPCSymBuild.mod", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-compiler%2FPCSymBuild.mod?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754"}, {"sha": "7cb97421956aadbffce79e6a805cbed25757d96c", "filename": "gcc/m2/gm2-compiler/PHBuild.bnf", "status": "added", "additions": 1264, "deletions": 0, "changes": 1264, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FPHBuild.bnf", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FPHBuild.bnf", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-compiler%2FPHBuild.bnf?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754"}, {"sha": "91dcafb18a048ff782ca6c77ffb24652bbc3fcdf", "filename": "gcc/m2/gm2-compiler/PHBuild.def", "status": "added", "additions": 44, "deletions": 0, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FPHBuild.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FPHBuild.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-compiler%2FPHBuild.def?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754"}, {"sha": "774531ec4f60efd31c4f30fbeb69e8117ec2ae00", "filename": "gcc/m2/gm2-compiler/README", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FREADME", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FREADME", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-compiler%2FREADME?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754"}, {"sha": "c33ce35f560564925f4ecf192b3ceb87908f650a", "filename": "gcc/m2/gm2-compiler/Sets.def", "status": "added", "additions": 104, "deletions": 0, "changes": 104, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FSets.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FSets.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-compiler%2FSets.def?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754"}, {"sha": "b8634dcaa9043c8a4c4a447cbf6db1e69282afc7", "filename": "gcc/m2/gm2-compiler/Sets.mod", "status": "added", "additions": 318, "deletions": 0, "changes": 318, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FSets.mod", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FSets.mod", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-compiler%2FSets.mod?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754"}, {"sha": "a39cb17b0227906ddb810c2ea4a84c57fc62fcab", "filename": "gcc/m2/gm2-compiler/SymbolConversion.def", "status": "added", "additions": 87, "deletions": 0, "changes": 87, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FSymbolConversion.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FSymbolConversion.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-compiler%2FSymbolConversion.def?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754"}, {"sha": "3b69f0191ada3f64eeaf666b4837b91b3f555f58", "filename": "gcc/m2/gm2-compiler/SymbolConversion.mod", "status": "added", "additions": 247, "deletions": 0, "changes": 247, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FSymbolConversion.mod", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FSymbolConversion.mod", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-compiler%2FSymbolConversion.mod?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754"}, {"sha": "0b5f9217fa7f0faa7ad07ee21bd5d3db5f9767db", "filename": "gcc/m2/gm2-compiler/SymbolKey.def", "status": "added", "additions": 139, "deletions": 0, "changes": 139, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FSymbolKey.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FSymbolKey.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-compiler%2FSymbolKey.def?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754"}, {"sha": "8386632510248995eae8307ece264c3818bdf365", "filename": "gcc/m2/gm2-compiler/SymbolKey.mod", "status": "added", "additions": 407, "deletions": 0, "changes": 407, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FSymbolKey.mod", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FSymbolKey.mod", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-compiler%2FSymbolKey.mod?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754"}, {"sha": "c2f25f4e319e30a855ab25276eae6dcb4061e8c6", "filename": "gcc/m2/gm2-compiler/SymbolTable.def", "status": "added", "additions": 3525, "deletions": 0, "changes": 3525, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FSymbolTable.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FSymbolTable.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-compiler%2FSymbolTable.def?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754"}, {"sha": "3a2b44ed9901415990334215f39b39d3e371c4e4", "filename": "gcc/m2/gm2-compiler/SymbolTable.mod", "status": "added", "additions": 14319, "deletions": 0, "changes": 14319, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FSymbolTable.mod", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2FSymbolTable.mod", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-compiler%2FSymbolTable.mod?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754"}, {"sha": "0deb8e3f4e74d8d26921f5245d9758c91e60aba3", "filename": "gcc/m2/gm2-compiler/bnflex.def", "status": "added", "additions": 156, "deletions": 0, "changes": 156, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2Fbnflex.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2Fbnflex.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-compiler%2Fbnflex.def?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754"}, {"sha": "46076f2e60b0488f072b88cacd8dea28ce09b3b5", "filename": "gcc/m2/gm2-compiler/bnflex.mod", "status": "added", "additions": 417, "deletions": 0, "changes": 417, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2Fbnflex.mod", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2Fbnflex.mod", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-compiler%2Fbnflex.mod?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754"}, {"sha": "6902bdc7821a84a0ea4e340ccc6fbfb3f816cc11", "filename": "gcc/m2/gm2-compiler/cflex.def", "status": "added", "additions": 105, "deletions": 0, "changes": 105, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2Fcflex.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2Fcflex.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-compiler%2Fcflex.def?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754"}, {"sha": "9f0ffbe5d87d45622efce5870975c7f28c4bd396", "filename": "gcc/m2/gm2-compiler/gm2.mod", "status": "added", "additions": 52, "deletions": 0, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2Fgm2.mod", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2Fgm2.mod", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-compiler%2Fgm2.mod?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754"}, {"sha": "8a89bfa0014ac82f8b0ae30ccdfa6c9817b51f0c", "filename": "gcc/m2/gm2-compiler/gm2lcc.mod", "status": "added", "additions": 842, "deletions": 0, "changes": 842, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2Fgm2lcc.mod", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2Fgm2lcc.mod", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-compiler%2Fgm2lcc.mod?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754"}, {"sha": "6be16b084d5e92d9e486e788ac38aeeba96a0db7", "filename": "gcc/m2/gm2-compiler/gm2lgen.mod", "status": "added", "additions": 424, "deletions": 0, "changes": 424, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2Fgm2lgen.mod", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2Fgm2lgen.mod", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-compiler%2Fgm2lgen.mod?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754"}, {"sha": "e862b062ed55d389355d9ca0e27f4e0bcee5279c", "filename": "gcc/m2/gm2-compiler/gm2lorder.mod", "status": "added", "additions": 269, "deletions": 0, "changes": 269, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2Fgm2lorder.mod", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2Fgm2lorder.mod", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-compiler%2Fgm2lorder.mod?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754"}, {"sha": "9da7b5a578179f74b3c746bfaf139d3c1bd47deb", "filename": "gcc/m2/gm2-compiler/m2flex.def", "status": "added", "additions": 101, "deletions": 0, "changes": 101, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2Fm2flex.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2Fm2flex.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-compiler%2Fm2flex.def?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754"}, {"sha": "aabe1150a62fa6a6650e05d56b6f40d2a21f767a", "filename": "gcc/m2/gm2-compiler/ppg.mod", "status": "added", "additions": 5515, "deletions": 0, "changes": 5515, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2Fppg.mod", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-compiler%2Fppg.mod", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-compiler%2Fppg.mod?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754"}, {"sha": "c671ac26778d39a5d061960b1d9ed0b70cef0831", "filename": "gcc/m2/gm2-gcc/README", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-gcc%2FREADME", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-gcc%2FREADME", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-gcc%2FREADME?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754"}, {"sha": "4fe039c2aedebf76bb05372478392706e73ad3a5", "filename": "gcc/m2/gm2-gcc/dynamicstrings.h", "status": "added", "additions": 38, "deletions": 0, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-gcc%2Fdynamicstrings.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-gcc%2Fdynamicstrings.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-gcc%2Fdynamicstrings.h?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754"}, {"sha": "99f1c5b7455f1c68ee658d9aa4e996721ab1b0e0", "filename": "gcc/m2/gm2-gcc/gcc-consolidation.h", "status": "added", "additions": 92, "deletions": 0, "changes": 92, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-gcc%2Fgcc-consolidation.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-gcc%2Fgcc-consolidation.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-gcc%2Fgcc-consolidation.h?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754"}, {"sha": "8fa074e289437855adf51a7b571cb301f57ac3b6", "filename": "gcc/m2/gm2-gcc/init.cc", "status": "added", "additions": 196, "deletions": 0, "changes": 196, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-gcc%2Finit.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-gcc%2Finit.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-gcc%2Finit.cc?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754"}, {"sha": "5c52999ace4b51e53fdc670d8de0388fc68cf130", "filename": "gcc/m2/gm2-gcc/init.def", "status": "added", "additions": 43, "deletions": 0, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-gcc%2Finit.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-gcc%2Finit.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-gcc%2Finit.def?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754"}, {"sha": "f5b3d2d2f7f480f43d1a4ecf1a5ccd50a0b2e987", "filename": "gcc/m2/gm2-gcc/init.h", "status": "added", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-gcc%2Finit.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-gcc%2Finit.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-gcc%2Finit.h?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754"}, {"sha": "f59fa92660aff2e39128558b87b57b5f0765bdd9", "filename": "gcc/m2/gm2-gcc/m2assert.cc", "status": "added", "additions": 41, "deletions": 0, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-gcc%2Fm2assert.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-gcc%2Fm2assert.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-gcc%2Fm2assert.cc?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754"}, {"sha": "6b379642851be1501316e3ed8fb79090b7bf7687", "filename": "gcc/m2/gm2-gcc/m2assert.h", "status": "added", "additions": 68, "deletions": 0, "changes": 68, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-gcc%2Fm2assert.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-gcc%2Fm2assert.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-gcc%2Fm2assert.h?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754"}, {"sha": "746aa67bdcec42b91e100f9d95508d0b2c33e98e", "filename": "gcc/m2/gm2-gcc/m2block.cc", "status": "added", "additions": 770, "deletions": 0, "changes": 770, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-gcc%2Fm2block.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-gcc%2Fm2block.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-gcc%2Fm2block.cc?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754"}, {"sha": "e0c48d523d4e5475da0297b97af9459053647a2c", "filename": "gcc/m2/gm2-gcc/m2block.def", "status": "added", "additions": 225, "deletions": 0, "changes": 225, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-gcc%2Fm2block.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-gcc%2Fm2block.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-gcc%2Fm2block.def?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754"}, {"sha": "a44d8797b0826a59a337dfa2d68ef843c52fa64a", "filename": "gcc/m2/gm2-gcc/m2block.h", "status": "added", "additions": 77, "deletions": 0, "changes": 77, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-gcc%2Fm2block.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-gcc%2Fm2block.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-gcc%2Fm2block.h?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754"}, {"sha": "bbfc605a36dd221415e008d1e60907477abc6a7e", "filename": "gcc/m2/gm2-gcc/m2builtins.cc", "status": "added", "additions": 1330, "deletions": 0, "changes": 1330, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-gcc%2Fm2builtins.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-gcc%2Fm2builtins.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-gcc%2Fm2builtins.cc?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754"}, {"sha": "d995e2ba7c1c568fdc96b95988e67cf431e6ab7c", "filename": "gcc/m2/gm2-gcc/m2builtins.def", "status": "added", "additions": 121, "deletions": 0, "changes": 121, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-gcc%2Fm2builtins.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-gcc%2Fm2builtins.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-gcc%2Fm2builtins.def?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754"}, {"sha": "db65ab461ca53d27c4092c35c1af4d961861f904", "filename": "gcc/m2/gm2-gcc/m2builtins.h", "status": "added", "additions": 56, "deletions": 0, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-gcc%2Fm2builtins.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-gcc%2Fm2builtins.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-gcc%2Fm2builtins.h?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754"}, {"sha": "c73d6ccaf58dfa53e876b1dce0841f73c82c5835", "filename": "gcc/m2/gm2-gcc/m2color.cc", "status": "added", "additions": 66, "deletions": 0, "changes": 66, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-gcc%2Fm2color.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-gcc%2Fm2color.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-gcc%2Fm2color.cc?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754"}, {"sha": "619191ebac600582751857358780fe7048ba5ee7", "filename": "gcc/m2/gm2-gcc/m2color.def", "status": "added", "additions": 57, "deletions": 0, "changes": 57, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-gcc%2Fm2color.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-gcc%2Fm2color.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-gcc%2Fm2color.def?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754"}, {"sha": "0cbd551697be6caeff22a996f3c2d57ea6176cf6", "filename": "gcc/m2/gm2-gcc/m2color.h", "status": "added", "additions": 52, "deletions": 0, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-gcc%2Fm2color.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-gcc%2Fm2color.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-gcc%2Fm2color.h?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754"}, {"sha": "6b40fcb0680d48e7e21af540f90f76d48aee885f", "filename": "gcc/m2/gm2-gcc/m2configure.cc", "status": "added", "additions": 101, "deletions": 0, "changes": 101, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-gcc%2Fm2configure.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-gcc%2Fm2configure.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-gcc%2Fm2configure.cc?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754"}, {"sha": "64ce20f99771b76a47829148f798903d611d791f", "filename": "gcc/m2/gm2-gcc/m2configure.def", "status": "added", "additions": 44, "deletions": 0, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-gcc%2Fm2configure.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-gcc%2Fm2configure.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-gcc%2Fm2configure.def?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754"}, {"sha": "3e8942f00c365e2ae7a233e3044da2c51266b344", "filename": "gcc/m2/gm2-gcc/m2configure.h", "status": "added", "additions": 44, "deletions": 0, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-gcc%2Fm2configure.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-gcc%2Fm2configure.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-gcc%2Fm2configure.h?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754"}, {"sha": "e6bf75bd953173a4103d666db48b911df4209d02", "filename": "gcc/m2/gm2-gcc/m2convert.cc", "status": "added", "additions": 659, "deletions": 0, "changes": 659, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-gcc%2Fm2convert.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-gcc%2Fm2convert.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-gcc%2Fm2convert.cc?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754"}, {"sha": "e91c1e6e492247e09d45e970d489904653a1348c", "filename": "gcc/m2/gm2-gcc/m2convert.def", "status": "added", "additions": 98, "deletions": 0, "changes": 98, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-gcc%2Fm2convert.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-gcc%2Fm2convert.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-gcc%2Fm2convert.def?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754"}, {"sha": "8dbc574405e8ddb619168797063bb813933a4510", "filename": "gcc/m2/gm2-gcc/m2convert.h", "status": "added", "additions": 54, "deletions": 0, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-gcc%2Fm2convert.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-gcc%2Fm2convert.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-gcc%2Fm2convert.h?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754"}, {"sha": "62bfefd253029557f30d8f364b98e294f5efa4d5", "filename": "gcc/m2/gm2-gcc/m2decl.cc", "status": "added", "additions": 453, "deletions": 0, "changes": 453, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-gcc%2Fm2decl.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-gcc%2Fm2decl.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-gcc%2Fm2decl.cc?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754"}, {"sha": "0f924dd1309e0137c9f7501859918e62c5d945c6", "filename": "gcc/m2/gm2-gcc/m2decl.def", "status": "added", "additions": 203, "deletions": 0, "changes": 203, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-gcc%2Fm2decl.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-gcc%2Fm2decl.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-gcc%2Fm2decl.def?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754"}, {"sha": "187569484a4f812a9a4bc7b900810e267e96538c", "filename": "gcc/m2/gm2-gcc/m2decl.h", "status": "added", "additions": 82, "deletions": 0, "changes": 82, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-gcc%2Fm2decl.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-gcc%2Fm2decl.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-gcc%2Fm2decl.h?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754"}, {"sha": "bc0f3a99076c1c76c416c0dbc69ffc8026d971e2", "filename": "gcc/m2/gm2-gcc/m2except.cc", "status": "added", "additions": 623, "deletions": 0, "changes": 623, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-gcc%2Fm2except.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-gcc%2Fm2except.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-gcc%2Fm2except.cc?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754"}, {"sha": "c32d3811e6018dd7e8aea081d4d5c88b6deb9f00", "filename": "gcc/m2/gm2-gcc/m2except.def", "status": "added", "additions": 79, "deletions": 0, "changes": 79, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-gcc%2Fm2except.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-gcc%2Fm2except.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-gcc%2Fm2except.def?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754"}, {"sha": "c58d8623bf7bb049afccd2b19317493be913381b", "filename": "gcc/m2/gm2-gcc/m2except.h", "status": "added", "additions": 70, "deletions": 0, "changes": 70, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-gcc%2Fm2except.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-gcc%2Fm2except.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-gcc%2Fm2except.h?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754"}, {"sha": "4616835ba0d26bccd3f0aaedf86c2213693aa0df", "filename": "gcc/m2/gm2-gcc/m2expr.cc", "status": "added", "additions": 4286, "deletions": 0, "changes": 4286, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-gcc%2Fm2expr.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-gcc%2Fm2expr.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-gcc%2Fm2expr.cc?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754"}, {"sha": "e622d31d09b44a0920c628d242b27e0d4e1225ad", "filename": "gcc/m2/gm2-gcc/m2expr.def", "status": "added", "additions": 700, "deletions": 0, "changes": 700, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-gcc%2Fm2expr.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-gcc%2Fm2expr.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-gcc%2Fm2expr.def?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754"}, {"sha": "a2156e1bc32334607a07a18a507fb53cbb5f55df", "filename": "gcc/m2/gm2-gcc/m2expr.h", "status": "added", "additions": 244, "deletions": 0, "changes": 244, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-gcc%2Fm2expr.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-gcc%2Fm2expr.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-gcc%2Fm2expr.h?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754"}, {"sha": "c1c6e2b58a6444281793ec35c86de547fcc00624", "filename": "gcc/m2/gm2-gcc/m2linemap.cc", "status": "added", "additions": 254, "deletions": 0, "changes": 254, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-gcc%2Fm2linemap.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-gcc%2Fm2linemap.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-gcc%2Fm2linemap.cc?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754"}, {"sha": "2c5d11d1b01b009e4305322c44df6f1bdafb0fbe", "filename": "gcc/m2/gm2-gcc/m2linemap.def", "status": "added", "additions": 61, "deletions": 0, "changes": 61, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-gcc%2Fm2linemap.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-gcc%2Fm2linemap.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-gcc%2Fm2linemap.def?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754"}, {"sha": "5de5c2665c9c4e4e26d68a04c4e9b54d77e35786", "filename": "gcc/m2/gm2-gcc/m2linemap.h", "status": "added", "additions": 72, "deletions": 0, "changes": 72, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-gcc%2Fm2linemap.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-gcc%2Fm2linemap.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-gcc%2Fm2linemap.h?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754"}, {"sha": "f1e42bdf67de30a8550125e763128eff0ad9ea66", "filename": "gcc/m2/gm2-gcc/m2misc.cc", "status": "added", "additions": 56, "deletions": 0, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-gcc%2Fm2misc.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-gcc%2Fm2misc.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-gcc%2Fm2misc.cc?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754"}, {"sha": "9accb389a179a1df627f40b5a81b30a5c45c3476", "filename": "gcc/m2/gm2-gcc/m2misc.def", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-gcc%2Fm2misc.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-gcc%2Fm2misc.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-gcc%2Fm2misc.def?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754"}, {"sha": "f6f08799b5c958e7c6438dbfb045bbb6d449ae4c", "filename": "gcc/m2/gm2-gcc/m2misc.h", "status": "added", "additions": 44, "deletions": 0, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-gcc%2Fm2misc.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-gcc%2Fm2misc.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-gcc%2Fm2misc.h?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754"}, {"sha": "4b32c911b0988edfe71f555e2100bad6dfa0d4ea", "filename": "gcc/m2/gm2-gcc/m2options.h", "status": "added", "additions": 126, "deletions": 0, "changes": 126, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-gcc%2Fm2options.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-gcc%2Fm2options.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-gcc%2Fm2options.h?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754"}, {"sha": "2cb61d6fc05b358f0243be454ca3ae1404e051f4", "filename": "gcc/m2/gm2-gcc/m2range.h", "status": "added", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-gcc%2Fm2range.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-gcc%2Fm2range.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-gcc%2Fm2range.h?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754"}, {"sha": "d58e97f531de9bf76981128a95de009e58cb43bf", "filename": "gcc/m2/gm2-gcc/m2search.h", "status": "added", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-gcc%2Fm2search.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-gcc%2Fm2search.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-gcc%2Fm2search.h?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754"}, {"sha": "7462a83f2e58b038b0e8bd32d98aa6cd3ff958f4", "filename": "gcc/m2/gm2-gcc/m2statement.cc", "status": "added", "additions": 955, "deletions": 0, "changes": 955, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-gcc%2Fm2statement.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-gcc%2Fm2statement.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-gcc%2Fm2statement.cc?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754"}, {"sha": "774d772cd7f6d85195e27ddfe6306927b31fb11e", "filename": "gcc/m2/gm2-gcc/m2statement.def", "status": "added", "additions": 312, "deletions": 0, "changes": 312, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-gcc%2Fm2statement.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-gcc%2Fm2statement.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-gcc%2Fm2statement.def?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754"}, {"sha": "48240768bf545f4ddffc0b4feba72299ec2ce620", "filename": "gcc/m2/gm2-gcc/m2statement.h", "status": "added", "additions": 111, "deletions": 0, "changes": 111, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-gcc%2Fm2statement.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-gcc%2Fm2statement.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-gcc%2Fm2statement.h?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754"}, {"sha": "1aee0e5db7be08bdde55942a17124bdbcb6500c5", "filename": "gcc/m2/gm2-gcc/m2top.cc", "status": "added", "additions": 65, "deletions": 0, "changes": 65, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-gcc%2Fm2top.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-gcc%2Fm2top.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-gcc%2Fm2top.cc?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754"}, {"sha": "ec36db31ab86895813511a969dcd08cbb5ed4584", "filename": "gcc/m2/gm2-gcc/m2top.def", "status": "added", "additions": 46, "deletions": 0, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-gcc%2Fm2top.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-gcc%2Fm2top.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-gcc%2Fm2top.def?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754"}, {"sha": "a1f9e3015b159e9805515b2013bfc721a1976619", "filename": "gcc/m2/gm2-gcc/m2top.h", "status": "added", "additions": 44, "deletions": 0, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-gcc%2Fm2top.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-gcc%2Fm2top.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-gcc%2Fm2top.h?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754"}, {"sha": "f3730d0c9b7276631515b26277dfc3a43140a66a", "filename": "gcc/m2/gm2-gcc/m2tree.cc", "status": "added", "additions": 132, "deletions": 0, "changes": 132, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-gcc%2Fm2tree.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-gcc%2Fm2tree.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-gcc%2Fm2tree.cc?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754"}, {"sha": "4e2c6c80008f901b96b5fcb41024f5cdd7043a75", "filename": "gcc/m2/gm2-gcc/m2tree.def", "status": "added", "additions": 41, "deletions": 0, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-gcc%2Fm2tree.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-gcc%2Fm2tree.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-gcc%2Fm2tree.def?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754"}, {"sha": "828523962396a4d89aeb7f2b3735fdf5c8c6b23c", "filename": "gcc/m2/gm2-gcc/m2tree.h", "status": "added", "additions": 58, "deletions": 0, "changes": 58, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-gcc%2Fm2tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-gcc%2Fm2tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-gcc%2Fm2tree.h?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754"}, {"sha": "8f463e2c3d19e616bb617f4beed400dfb99ead41", "filename": "gcc/m2/gm2-gcc/m2treelib.cc", "status": "added", "additions": 430, "deletions": 0, "changes": 430, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-gcc%2Fm2treelib.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-gcc%2Fm2treelib.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-gcc%2Fm2treelib.cc?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754"}, {"sha": "a82089541247efbaefe8880104b1719f25fb3c04", "filename": "gcc/m2/gm2-gcc/m2treelib.def", "status": "added", "additions": 109, "deletions": 0, "changes": 109, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-gcc%2Fm2treelib.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-gcc%2Fm2treelib.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-gcc%2Fm2treelib.def?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754"}, {"sha": "b37fa17c044f1a02b838b69585256dceed8cce9a", "filename": "gcc/m2/gm2-gcc/m2treelib.h", "status": "added", "additions": 66, "deletions": 0, "changes": 66, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-gcc%2Fm2treelib.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-gcc%2Fm2treelib.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-gcc%2Fm2treelib.h?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754"}, {"sha": "5342033117bc7c913c82da63467bd1107fb9f481", "filename": "gcc/m2/gm2-gcc/m2type.cc", "status": "added", "additions": 3092, "deletions": 0, "changes": 3092, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-gcc%2Fm2type.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-gcc%2Fm2type.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-gcc%2Fm2type.cc?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754"}, {"sha": "dc617ecd46c0d66b9167fb066c8883b9c6f26e8f", "filename": "gcc/m2/gm2-gcc/m2type.def", "status": "added", "additions": 986, "deletions": 0, "changes": 986, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-gcc%2Fm2type.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-gcc%2Fm2type.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-gcc%2Fm2type.def?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754"}, {"sha": "35f9697280314b53e017a1bd0439d0bd670099e8", "filename": "gcc/m2/gm2-gcc/m2type.h", "status": "added", "additions": 222, "deletions": 0, "changes": 222, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-gcc%2Fm2type.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-gcc%2Fm2type.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-gcc%2Fm2type.h?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754"}, {"sha": "dcb75b6bd1cc1a9efac8d0cb6b4bab171b490b3e", "filename": "gcc/m2/gm2-gcc/rtegraph.cc", "status": "added", "additions": 527, "deletions": 0, "changes": 527, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-gcc%2Frtegraph.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-gcc%2Frtegraph.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-gcc%2Frtegraph.cc?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754"}, {"sha": "9fe44b74778303d90c78f1901e4b7136ce860558", "filename": "gcc/m2/gm2-gcc/rtegraph.h", "status": "added", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-gcc%2Frtegraph.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-gcc%2Frtegraph.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-gcc%2Frtegraph.h?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754"}, {"sha": "04ca43574df2169d22bb52f06b1e0ae4059be36f", "filename": "gcc/m2/gm2-ici/M2Emit.mod", "status": "added", "additions": 179, "deletions": 0, "changes": 179, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-ici%2FM2Emit.mod", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-ici%2FM2Emit.mod", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-ici%2FM2Emit.mod?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754"}, {"sha": "2b9fef0aca9810cdac074488d64f50953c4d1dbb", "filename": "gcc/m2/gm2-ici/README", "status": "added", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-ici%2FREADME", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-ici%2FREADME", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-ici%2FREADME?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754"}, {"sha": "e2af672f73e166b2581208639167b15059326c05", "filename": "gcc/m2/gm2-ici/m2linemap.c", "status": "added", "additions": 38, "deletions": 0, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-ici%2Fm2linemap.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-ici%2Fm2linemap.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-ici%2Fm2linemap.c?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754"}, {"sha": "b72b7835b85e1044e30ccc02748a84e1c43a6701", "filename": "gcc/m2/gm2-internals.texi", "status": "added", "additions": 1067, "deletions": 0, "changes": 1067, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-internals.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-internals.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-internals.texi?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754"}, {"sha": "5814ebf4db6919e87bdf05e279c99aab5c71f8ae", "filename": "gcc/m2/gm2-lang.cc", "status": "added", "additions": 892, "deletions": 0, "changes": 892, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-lang.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-lang.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-lang.cc?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754"}, {"sha": "431e0156d420588f154170522bb043b52b073119", "filename": "gcc/m2/gm2-lang.h", "status": "added", "additions": 56, "deletions": 0, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-lang.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-lang.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-lang.h?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754"}, {"sha": "3bc0796b2783d3f358ef304902a8a2be72bf7eff", "filename": "gcc/m2/gm2-libiberty/README", "status": "added", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-libiberty%2FREADME", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-libiberty%2FREADME", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-libiberty%2FREADME?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754"}, {"sha": "6238f685c12cf74d3021ca188f01f1e25aac35e1", "filename": "gcc/m2/gm2-libiberty/choosetemp.def", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-libiberty%2Fchoosetemp.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-libiberty%2Fchoosetemp.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-libiberty%2Fchoosetemp.def?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754"}, {"sha": "59426e82152412eeb469534d40d4cec3259d1161", "filename": "gcc/m2/gm2-libiberty/pexecute.def", "status": "added", "additions": 82, "deletions": 0, "changes": 82, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-libiberty%2Fpexecute.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-libiberty%2Fpexecute.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-libiberty%2Fpexecute.def?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754"}, {"sha": "70b4c3d889afb9a1dfcce722878c152b0b43e276", "filename": "gcc/m2/gm2-libs-ch/M2LINK.c", "status": "added", "additions": 44, "deletions": 0, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-libs-ch%2FM2LINK.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-libs-ch%2FM2LINK.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-libs-ch%2FM2LINK.c?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754"}, {"sha": "a783aa7eb6ccd013483a2ddc3a2192292683f0c9", "filename": "gcc/m2/gm2-libs-ch/README", "status": "added", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-libs-ch%2FREADME", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-libs-ch%2FREADME", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-libs-ch%2FREADME?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754"}, {"sha": "d397a27db110ae0258c3f5de4a2aa26d193e759b", "filename": "gcc/m2/gm2-libs-ch/RTcodummy.c", "status": "added", "additions": 136, "deletions": 0, "changes": 136, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-libs-ch%2FRTcodummy.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-libs-ch%2FRTcodummy.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-libs-ch%2FRTcodummy.c?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754"}, {"sha": "6e718cb73029db99549edd87c83926446304110b", "filename": "gcc/m2/gm2-libs-ch/RTintdummy.c", "status": "added", "additions": 50, "deletions": 0, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-libs-ch%2FRTintdummy.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-libs-ch%2FRTintdummy.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-libs-ch%2FRTintdummy.c?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754"}, {"sha": "6ed0009dedc56cd26c3cbe990f6b7ae3a836ff94", "filename": "gcc/m2/gm2-libs-ch/Selective.c", "status": "added", "additions": 246, "deletions": 0, "changes": 246, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-libs-ch%2FSelective.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-libs-ch%2FSelective.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-libs-ch%2FSelective.c?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754"}, {"sha": "ffe41f31708da5cf73cba9531e69e6441399831f", "filename": "gcc/m2/gm2-libs-ch/SysExceptions.c", "status": "added", "additions": 243, "deletions": 0, "changes": 243, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-libs-ch%2FSysExceptions.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-libs-ch%2FSysExceptions.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-libs-ch%2FSysExceptions.c?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754"}, {"sha": "1180f351b24f42a97a023d188ab831c935c56b45", "filename": "gcc/m2/gm2-libs-ch/UnixArgs.cc", "status": "added", "additions": 91, "deletions": 0, "changes": 91, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-libs-ch%2FUnixArgs.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-libs-ch%2FUnixArgs.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-libs-ch%2FUnixArgs.cc?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754"}, {"sha": "b59d666706b8968e0902eb33640142e4b291a84e", "filename": "gcc/m2/gm2-libs-ch/cgetopt.c", "status": "added", "additions": 163, "deletions": 0, "changes": 163, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-libs-ch%2Fcgetopt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-libs-ch%2Fcgetopt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-libs-ch%2Fcgetopt.c?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754"}, {"sha": "24b2582e68e81bd33efde2ff3acd40b69035ee97", "filename": "gcc/m2/gm2-libs-ch/choosetemp.c", "status": "added", "additions": 58, "deletions": 0, "changes": 58, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-libs-ch%2Fchoosetemp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-libs-ch%2Fchoosetemp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-libs-ch%2Fchoosetemp.c?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754"}, {"sha": "57317588ba1c30af88e452d8e03a6811a3511a70", "filename": "gcc/m2/gm2-libs-ch/dtoa.cc", "status": "added", "additions": 206, "deletions": 0, "changes": 206, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-libs-ch%2Fdtoa.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-libs-ch%2Fdtoa.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-libs-ch%2Fdtoa.cc?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754"}, {"sha": "fb8002e511149a23dab889b2c11c22982a39388e", "filename": "gcc/m2/gm2-libs-ch/errno.c", "status": "added", "additions": 59, "deletions": 0, "changes": 59, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-libs-ch%2Ferrno.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-libs-ch%2Ferrno.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-libs-ch%2Ferrno.c?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754"}, {"sha": "9d691d8e4788822e9853081d13581b342830892e", "filename": "gcc/m2/gm2-libs-ch/host.c", "status": "added", "additions": 64, "deletions": 0, "changes": 64, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-libs-ch%2Fhost.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-libs-ch%2Fhost.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-libs-ch%2Fhost.c?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754"}, {"sha": "ac14297ec244ebd97fc18fe28d01562529aa90c1", "filename": "gcc/m2/gm2-libs-ch/ldtoa.cc", "status": "added", "additions": 135, "deletions": 0, "changes": 135, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-libs-ch%2Fldtoa.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-libs-ch%2Fldtoa.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-libs-ch%2Fldtoa.cc?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754"}, {"sha": "57e6e90d94db07db499477117e7aecfc8a07f446", "filename": "gcc/m2/gm2-libs-ch/m2rts.h", "status": "added", "additions": 41, "deletions": 0, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-libs-ch%2Fm2rts.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-libs-ch%2Fm2rts.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-libs-ch%2Fm2rts.h?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754"}, {"sha": "7075d25bb98ba3d407161eee84fced67eec09cfa", "filename": "gcc/m2/gm2-libs-ch/termios.c", "status": "added", "additions": 1936, "deletions": 0, "changes": 1936, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-libs-ch%2Ftermios.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-libs-ch%2Ftermios.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-libs-ch%2Ftermios.c?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754"}, {"sha": "da9fad471416a4a8b5e112c9d02c0c35ec826a5d", "filename": "gcc/m2/gm2-libs-ch/tools.c", "status": "added", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-libs-ch%2Ftools.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-libs-ch%2Ftools.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-libs-ch%2Ftools.c?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754"}, {"sha": "37d327fc7d217bac422fd513551417d184068a12", "filename": "gcc/m2/gm2-libs-ch/wrapc.c", "status": "added", "additions": 242, "deletions": 0, "changes": 242, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-libs-ch%2Fwrapc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-libs-ch%2Fwrapc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-libs-ch%2Fwrapc.c?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754"}, {"sha": "5d6c7482aef4f8a285098bf3807b73e9c93406a7", "filename": "gcc/m2/gm2-libs-ch/xlibc.c", "status": "added", "additions": 48, "deletions": 0, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-libs-ch%2Fxlibc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-libs-ch%2Fxlibc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-libs-ch%2Fxlibc.c?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754"}, {"sha": "b3a86ac7fe81b9628ce94a1458ad37aaa5cd8005", "filename": "gcc/m2/gm2-libs-coroutines/Debug.def", "status": "added", "additions": 79, "deletions": 0, "changes": 79, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-libs-coroutines%2FDebug.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-libs-coroutines%2FDebug.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-libs-coroutines%2FDebug.def?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754"}, {"sha": "2f0337496b2dcd297ea3b19858f9702dfb9dcfc5", "filename": "gcc/m2/gm2-libs-coroutines/Debug.mod", "status": "added", "additions": 180, "deletions": 0, "changes": 180, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-libs-coroutines%2FDebug.mod", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-libs-coroutines%2FDebug.mod", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-libs-coroutines%2FDebug.mod?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754"}, {"sha": "d8eef70438ccc72c2d3d050b8b28d6b5de02041e", "filename": "gcc/m2/gm2-libs-coroutines/Executive.def", "status": "added", "additions": 152, "deletions": 0, "changes": 152, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-libs-coroutines%2FExecutive.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-libs-coroutines%2FExecutive.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-libs-coroutines%2FExecutive.def?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754"}, {"sha": "be95b82bc332a5e563df810afc7f760da14345da", "filename": "gcc/m2/gm2-libs-coroutines/Executive.mod", "status": "added", "additions": 962, "deletions": 0, "changes": 962, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-libs-coroutines%2FExecutive.mod", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-libs-coroutines%2FExecutive.mod", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-libs-coroutines%2FExecutive.mod?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754"}, {"sha": "70054567d963060b582fddf3929b086ee10a576a", "filename": "gcc/m2/gm2-libs-coroutines/KeyBoardLEDs.def", "status": "added", "additions": 63, "deletions": 0, "changes": 63, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-libs-coroutines%2FKeyBoardLEDs.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-libs-coroutines%2FKeyBoardLEDs.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-libs-coroutines%2FKeyBoardLEDs.def?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754"}, {"sha": "72a1db3b043335469ccf8cb998b1bd9ec1e554e3", "filename": "gcc/m2/gm2-libs-coroutines/README.texi", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-libs-coroutines%2FREADME.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-libs-coroutines%2FREADME.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-libs-coroutines%2FREADME.texi?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754"}, {"sha": "d5650b60d01d5b452ed0d4d0149e2ee0cca4fb9e", "filename": "gcc/m2/gm2-libs-coroutines/SYSTEM.def", "status": "added", "additions": 278, "deletions": 0, "changes": 278, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-libs-coroutines%2FSYSTEM.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-libs-coroutines%2FSYSTEM.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-libs-coroutines%2FSYSTEM.def?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754"}, {"sha": "213ed872cbd62e78b815e38b394b5a496dd65ba8", "filename": "gcc/m2/gm2-libs-coroutines/SYSTEM.mod", "status": "added", "additions": 484, "deletions": 0, "changes": 484, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-libs-coroutines%2FSYSTEM.mod", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-libs-coroutines%2FSYSTEM.mod", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-libs-coroutines%2FSYSTEM.mod?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754"}, {"sha": "395a9aed7b7ada84e4313bde6cde6706f644a218", "filename": "gcc/m2/gm2-libs-coroutines/TimerHandler.def", "status": "added", "additions": 102, "deletions": 0, "changes": 102, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-libs-coroutines%2FTimerHandler.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-libs-coroutines%2FTimerHandler.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-libs-coroutines%2FTimerHandler.def?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754"}, {"sha": "d9ae7bf14aa397caf766bfa051a35e4a75805afb", "filename": "gcc/m2/gm2-libs-coroutines/TimerHandler.mod", "status": "added", "additions": 758, "deletions": 0, "changes": 758, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-libs-coroutines%2FTimerHandler.mod", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-libs-coroutines%2FTimerHandler.mod", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-libs-coroutines%2FTimerHandler.mod?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754"}, {"sha": "3f099704f2af5c7a9496a44d5900bbe66445d40c", "filename": "gcc/m2/gm2-libs-iso/COROUTINES.def", "status": "added", "additions": 112, "deletions": 0, "changes": 112, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-libs-iso%2FCOROUTINES.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-libs-iso%2FCOROUTINES.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-libs-iso%2FCOROUTINES.def?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754"}, {"sha": "d3b4afcf80e7142836e732f78508990fc4c445a1", "filename": "gcc/m2/gm2-libs-iso/COROUTINES.mod", "status": "added", "additions": 600, "deletions": 0, "changes": 600, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-libs-iso%2FCOROUTINES.mod", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-libs-iso%2FCOROUTINES.mod", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-libs-iso%2FCOROUTINES.mod?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754"}, {"sha": "3ff1721a256698164e1c9d85da512fdf8c28936d", "filename": "gcc/m2/gm2-libs-iso/ChanConsts.def", "status": "added", "additions": 64, "deletions": 0, "changes": 64, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-libs-iso%2FChanConsts.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-libs-iso%2FChanConsts.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-libs-iso%2FChanConsts.def?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754"}, {"sha": "e166187d5e0ac1c4db6f6760577f3ff01fe3fa5d", "filename": "gcc/m2/gm2-libs-iso/ChanConsts.h", "status": "added", "additions": 47, "deletions": 0, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-libs-iso%2FChanConsts.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-libs-iso%2FChanConsts.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-libs-iso%2FChanConsts.h?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754"}, {"sha": "22190f79cffc84d26c4fdb0a9b6c2f0299cc3563", "filename": "gcc/m2/gm2-libs-iso/ChanConsts.mod", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-libs-iso%2FChanConsts.mod", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-libs-iso%2FChanConsts.mod", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-libs-iso%2FChanConsts.mod?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754"}, {"sha": "e7bba0778fd5ca9dbd688a888ed8f7174618da3a", "filename": "gcc/m2/gm2-libs-iso/CharClass.def", "status": "added", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-libs-iso%2FCharClass.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-libs-iso%2FCharClass.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-libs-iso%2FCharClass.def?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754"}, {"sha": "fce2782d7df95a8ee361e85c79c84501295e110c", "filename": "gcc/m2/gm2-libs-iso/CharClass.mod", "status": "added", "additions": 81, "deletions": 0, "changes": 81, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-libs-iso%2FCharClass.mod", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1305234f566eb2bc3a7c9d020a2dd11948a754/gcc%2Fm2%2Fgm2-libs-iso%2FCharClass.mod", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-libs-iso%2FCharClass.mod?ref=ab1305234f566eb2bc3a7c9d020a2dd11948a754"}]}