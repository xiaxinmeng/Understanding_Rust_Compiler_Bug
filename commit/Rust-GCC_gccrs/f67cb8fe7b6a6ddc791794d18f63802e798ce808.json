{"sha": "f67cb8fe7b6a6ddc791794d18f63802e798ce808", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjY3Y2I4ZmU3YjZhNmRkYzc5MTc5NGQxOGY2MzgwMmU3OThjZTgwOA==", "commit": {"author": {"name": "John David Anglin", "email": "danglin@gcc.gnu.org", "date": "2016-02-01T00:54:22Z"}, "committer": {"name": "John David Anglin", "email": "danglin@gcc.gnu.org", "date": "2016-02-01T00:54:22Z"}, "message": "re PR target/68741 (FAIL: tr1/8_c_compatibility/cstdio/functions.cc (test for excess errors))\n\n\tPR target/68741\n\t* inclhack.def (hpux_vsscanf): New fix.\n\t* fixincl.x: Regenerated.\n\t* tests/base/stdio.h [HPUX_VSSCANF_CHECK]: New test.\n\nFrom-SVN: r233029", "tree": {"sha": "ee5a72c0493dd0bcfc713d80e5d133e5bc5a4cdd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ee5a72c0493dd0bcfc713d80e5d133e5bc5a4cdd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f67cb8fe7b6a6ddc791794d18f63802e798ce808", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f67cb8fe7b6a6ddc791794d18f63802e798ce808", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f67cb8fe7b6a6ddc791794d18f63802e798ce808", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f67cb8fe7b6a6ddc791794d18f63802e798ce808/comments", "author": null, "committer": null, "parents": [{"sha": "61083a4ba7bab1e24926a0591e85f7d988992392", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/61083a4ba7bab1e24926a0591e85f7d988992392", "html_url": "https://github.com/Rust-GCC/gccrs/commit/61083a4ba7bab1e24926a0591e85f7d988992392"}], "stats": {"total": 89, "additions": 79, "deletions": 10}, "files": [{"sha": "da21dbcd9adb57e6fb000a5b72069fa46db6198b", "filename": "fixincludes/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f67cb8fe7b6a6ddc791794d18f63802e798ce808/fixincludes%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f67cb8fe7b6a6ddc791794d18f63802e798ce808/fixincludes%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2FChangeLog?ref=f67cb8fe7b6a6ddc791794d18f63802e798ce808", "patch": "@@ -1,3 +1,10 @@\n+2016-01-31  John David Anglin  <danglin@gcc.gnu.org>\n+\n+\tPR target/68741\n+\t* inclhack.def (hpux_vsscanf): New fix.\n+\t* fixincl.x: Regenerated.\n+\t* tests/base/stdio.h [HPUX_VSSCANF_CHECK]: New test.\n+\n 2015-08-14  David Edelsohn  <dje.gcc@gmail.com>\n \n \t* inclhack.def (aix_stdio_inline): New fix."}, {"sha": "383381176905d8a816f500fd39ebfaa65001ea36", "filename": "fixincludes/fixincl.x", "status": "modified", "additions": 53, "deletions": 10, "changes": 63, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f67cb8fe7b6a6ddc791794d18f63802e798ce808/fixincludes%2Ffixincl.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f67cb8fe7b6a6ddc791794d18f63802e798ce808/fixincludes%2Ffixincl.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2Ffixincl.x?ref=f67cb8fe7b6a6ddc791794d18f63802e798ce808", "patch": "@@ -1,12 +1,12 @@\n /*  -*- buffer-read-only: t -*- vi: set ro:\n- *\n- *DO NOT EDIT THIS FILE   (fixincl.x)\n- *\n- *It has been AutoGen-ed  August 13, 2015 at 05:25:50 PM by AutoGen 5.18.3\n- *From the definitions    inclhack.def\n- *and the template file   fixincl\n+ * \n+ * DO NOT EDIT THIS FILE   (fixincl.x)\n+ * \n+ * It has been AutoGen-ed  Sunday January 31, 2016 at 07:52:05 PM EST\n+ * From the definitions    inclhack.def\n+ * and the template file   fixincl\n  */\n-/* DO NOT SVN-MERGE THIS FILE, EITHER Thu Aug 13 17:25:50 UTC 2015\n+/* DO NOT SVN-MERGE THIS FILE, EITHER Sun 31 Jan 2016 19:52:05 EST\n  *\n  * You must regenerate it.  Use the ./genfixes script.\n  *\n@@ -15,7 +15,7 @@\n  * certain ANSI-incompatible system header files which are fixed to work\n  * correctly with ANSI C and placed in a directory that GNU C will search.\n  *\n- * This file contains 230 fixup descriptions.\n+ * This file contains 231 fixup descriptions.\n  *\n  * See README for more information.\n  *\n@@ -4324,6 +4324,43 @@ static const char* apzHpux11_VsnprintfPatch[] = {\n     \"%1 __va_list);\",\n     (char*)NULL };\n \n+/* * * * * * * * * * * * * * * * * * * * * * * * * *\n+ *\n+ *  Description of Hpux_Vsscanf fix\n+ */\n+tSCC zHpux_VsscanfName[] =\n+     \"hpux_vsscanf\";\n+\n+/*\n+ *  File name selection pattern\n+ */\n+tSCC zHpux_VsscanfList[] =\n+  \"stdio.h\\0\";\n+/*\n+ *  Machine/OS name selection pattern\n+ */\n+tSCC* apzHpux_VsscanfMachs[] = {\n+        \"*-*-hpux*\",\n+        (const char*)NULL };\n+\n+/*\n+ *  content selection pattern - do fix if pattern found\n+ */\n+tSCC zHpux_VsscanfSelect0[] =\n+       \"(extern int vsscanf\\\\()char\";\n+\n+#define    HPUX_VSSCANF_TEST_CT  1\n+static tTestDesc aHpux_VsscanfTests[] = {\n+  { TT_EGREP,    zHpux_VsscanfSelect0, (regex_t*)NULL }, };\n+\n+/*\n+ *  Fix Command Arguments for Hpux_Vsscanf\n+ */\n+static const char* apzHpux_VsscanfPatch[] = {\n+    \"format\",\n+    \"%1const char\",\n+    (char*)NULL };\n+\n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n  *\n  *  Description of Hpux8_Bogus_Inlines fix\n@@ -9448,9 +9485,9 @@ static const char* apzX11_SprintfPatch[] = {\n  *\n  *  List of all fixes\n  */\n-#define REGEX_COUNT          267\n+#define REGEX_COUNT          268\n #define MACH_LIST_SIZE_LIMIT 187\n-#define FIX_COUNT            230\n+#define FIX_COUNT            231\n \n /*\n  *  Enumerate the fixes\n@@ -9556,6 +9593,7 @@ typedef enum {\n     HPUX11_SIZE_T_FIXIDX,\n     HPUX11_SNPRINTF_FIXIDX,\n     HPUX11_VSNPRINTF_FIXIDX,\n+    HPUX_VSSCANF_FIXIDX,\n     HPUX8_BOGUS_INLINES_FIXIDX,\n     HPUX_C99_INTPTR_FIXIDX,\n     HPUX_C99_INTTYPES_FIXIDX,\n@@ -10189,6 +10227,11 @@ tFixDesc fixDescList[ FIX_COUNT ] = {\n      HPUX11_VSNPRINTF_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n      aHpux11_VsnprintfTests,   apzHpux11_VsnprintfPatch, 0 },\n \n+  {  zHpux_VsscanfName,    zHpux_VsscanfList,\n+     apzHpux_VsscanfMachs,\n+     HPUX_VSSCANF_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n+     aHpux_VsscanfTests,   apzHpux_VsscanfPatch, 0 },\n+\n   {  zHpux8_Bogus_InlinesName,    zHpux8_Bogus_InlinesList,\n      apzHpux8_Bogus_InlinesMachs,\n      HPUX8_BOGUS_INLINES_TEST_CT, FD_MACH_ONLY,"}, {"sha": "8b6d1fe3a135b128b0bf25f1ae179185731167d6", "filename": "fixincludes/inclhack.def", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f67cb8fe7b6a6ddc791794d18f63802e798ce808/fixincludes%2Finclhack.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f67cb8fe7b6a6ddc791794d18f63802e798ce808/fixincludes%2Finclhack.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2Finclhack.def?ref=f67cb8fe7b6a6ddc791794d18f63802e798ce808", "patch": "@@ -2272,6 +2272,20 @@ fix = {\n                                      ' __va__list);';\n };\n \n+/*\n+ *  Fix missing const in hpux vsscanf declaration\n+ */\n+fix = {\n+    hackname = hpux_vsscanf;\n+    mach    = \"*-*-hpux*\";\n+    files   = stdio.h;\n+    select  = '(extern int vsscanf\\()char';\n+    c_fix   = format;\n+    c_fix_arg = \"%1const char\";\n+\n+    test_text = 'extern int vsscanf(char *, const char *, __va_list);';\n+};\n+\n /*\n  *  get rid of bogus inline definitions in HP-UX 8.0\n  */"}, {"sha": "4ca4fafeb9516b71477f8ed085e005618f3ed091", "filename": "fixincludes/tests/base/stdio.h", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f67cb8fe7b6a6ddc791794d18f63802e798ce808/fixincludes%2Ftests%2Fbase%2Fstdio.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f67cb8fe7b6a6ddc791794d18f63802e798ce808/fixincludes%2Ftests%2Fbase%2Fstdio.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2Ftests%2Fbase%2Fstdio.h?ref=f67cb8fe7b6a6ddc791794d18f63802e798ce808", "patch": "@@ -59,6 +59,11 @@ extern int vsnprintf(char *, _hpux_size_t, const char *, __gnuc_va_list);\n #endif  /* HPUX11_VSNPRINTF_CHECK */\n \n \n+#if defined( HPUX_VSSCANF_CHECK )\n+extern int vsscanf(const char *, const char *, __gnuc_va_list);\n+#endif  /* HPUX_VSSCANF_CHECK */\n+\n+\n #if defined( IRIX_STDIO_DUMMY_VA_LIST_CHECK )\n extern int printf( const char *, __gnuc_va_list );\n #endif  /* IRIX_STDIO_DUMMY_VA_LIST_CHECK */"}]}