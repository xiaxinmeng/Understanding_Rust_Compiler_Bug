{"sha": "6e7b20ac6e8b1446e10418b911ea5c007d51d8ac", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmU3YjIwYWM2ZThiMTQ0NmUxMDQxOGI5MTFlYTVjMDA3ZDUxZDhhYw==", "commit": {"author": {"name": "Tom Tromey", "email": "tromey@redhat.com", "date": "2007-07-16T05:00:28Z"}, "committer": {"name": "Tom Tromey", "email": "tromey@gcc.gnu.org", "date": "2007-07-16T05:00:28Z"}, "message": "File.java: Implement Comparable<File>.\n\n\t* java/io/File.java: Implement Comparable<File>.\n\t(compareTo): Removed.\n\t* java/io/File.h: Rebuilt.\n\t* classpath/lib/java/io/File.class: Rebuilt.\n\nFrom-SVN: r126670", "tree": {"sha": "860fe78d86598e2fda61d7494de344ebdf51c77a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/860fe78d86598e2fda61d7494de344ebdf51c77a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6e7b20ac6e8b1446e10418b911ea5c007d51d8ac", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6e7b20ac6e8b1446e10418b911ea5c007d51d8ac", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6e7b20ac6e8b1446e10418b911ea5c007d51d8ac", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6e7b20ac6e8b1446e10418b911ea5c007d51d8ac/comments", "author": null, "committer": null, "parents": [{"sha": "6f04e85d9cc4848ca37ccf0d9b669c91fc0b6e33", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6f04e85d9cc4848ca37ccf0d9b669c91fc0b6e33", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6f04e85d9cc4848ca37ccf0d9b669c91fc0b6e33"}], "stats": {"total": 72, "additions": 30, "deletions": 42}, "files": [{"sha": "510d5f7131626a2fad6d2005d3d5354c141beb35", "filename": "libjava/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e7b20ac6e8b1446e10418b911ea5c007d51d8ac/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e7b20ac6e8b1446e10418b911ea5c007d51d8ac/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=6e7b20ac6e8b1446e10418b911ea5c007d51d8ac", "patch": "@@ -1,3 +1,10 @@\n+2007-07-15  Tom Tromey  <tromey@redhat.com>\n+\n+\t* java/io/File.java: Implement Comparable<File>.\n+\t(compareTo): Removed.\n+\t* java/io/File.h: Rebuilt.\n+\t* classpath/lib/java/io/File.class: Rebuilt.\n+\n 2007-07-14  Tom Tromey  <tromey@redhat.com>\n \n \t* Rebuilt .class files."}, {"sha": "746da883bc8db70d78312a49fef61eb438755fb3", "filename": "libjava/classpath/lib/java/io/File.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e7b20ac6e8b1446e10418b911ea5c007d51d8ac/libjava%2Fclasspath%2Flib%2Fjava%2Fio%2FFile.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e7b20ac6e8b1446e10418b911ea5c007d51d8ac/libjava%2Fclasspath%2Flib%2Fjava%2Fio%2FFile.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Flib%2Fjava%2Fio%2FFile.class?ref=6e7b20ac6e8b1446e10418b911ea5c007d51d8ac"}, {"sha": "b53f6ab7d02b68f9e943bf463d17acf4846b02f9", "filename": "libjava/java/io/File.h", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e7b20ac6e8b1446e10418b911ea5c007d51d8ac/libjava%2Fjava%2Fio%2FFile.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e7b20ac6e8b1446e10418b911ea5c007d51d8ac/libjava%2Fjava%2Fio%2FFile.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fio%2FFile.h?ref=6e7b20ac6e8b1446e10418b911ea5c007d51d8ac", "patch": "@@ -111,8 +111,7 @@ class java::io::File : public ::java::lang::Object\n public:\n   static JArray< ::java::io::File * > * listRoots();\n   static ::java::io::File * createTempFile(::java::lang::String *, ::java::lang::String *);\n-  virtual jint compareTo(::java::io::File *);\n-  virtual jint compareTo(::java::lang::Object *);\n+  virtual jint File$compareTo(::java::io::File *);\n private:\n   jboolean performRenameTo(::java::io::File *);\n public:\n@@ -130,6 +129,9 @@ class java::io::File : public ::java::lang::Object\n private:\n   void writeObject(::java::io::ObjectOutputStream *);\n   void readObject(::java::io::ObjectInputStream *);\n+public:\n+  virtual jint compareTo(::java::lang::Object *);\n+private:\n   static const jlong serialVersionUID = 301077366599181567LL;\n   static const jint READ = 0;\n   static const jint WRITE = 1;"}, {"sha": "67d1b96df6c5d9296a7b9a4501164ecd2353551c", "filename": "libjava/java/io/File.java", "status": "modified", "additions": 7, "deletions": 31, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e7b20ac6e8b1446e10418b911ea5c007d51d8ac/libjava%2Fjava%2Fio%2FFile.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e7b20ac6e8b1446e10418b911ea5c007d51d8ac/libjava%2Fjava%2Fio%2FFile.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fio%2FFile.java?ref=6e7b20ac6e8b1446e10418b911ea5c007d51d8ac", "patch": "@@ -1,5 +1,5 @@\n /* File.java -- Class representing a file on disk\n-   Copyright (C) 1998, 1999, 2000, 2001, 2003, 2004, 2005, 2006\n+   Copyright (C) 1998, 1999, 2000, 2001, 2003, 2004, 2005, 2006, 2007\n    Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n@@ -59,7 +59,7 @@\n  * @author Aaron M. Renn (arenn@urbanophile.com)\n  * @author Tom Tromey (tromey@cygnus.com)\n  */\n-public class File implements Serializable, Comparable\n+public class File implements Serializable, Comparable<File>\n {\n   private static final long serialVersionUID = 301077366599181567L;\n \t\n@@ -103,7 +103,7 @@ public class File implements Serializable, Comparable\n   \n   /**\n    * This is the string that is used to separate the host name from the\n-   * path name in paths than include the host name.  It is the value of\n+   * path name in paths that include the host name.  It is the value of\n    * the <code>path.separator</code> system property.\n    */\n   public static final String pathSeparator\n@@ -454,7 +454,8 @@ public File(File directory, String name)\n    * This method initializes a new <code>File</code> object to represent\n    * a file corresponding to the specified <code>file:</code> protocol URI.\n    *\n-   * @param uri The uri.\n+   * @param uri The URI\n+   * @throws IllegalArgumentException if the URI is not hierarchical\n    */\n   public File(URI uri)\n   {\n@@ -605,7 +606,8 @@ public String getName()\n   /**\n    * This method returns a <code>String</code> the represents this file's\n    * parent.  <code>null</code> is returned if the file has no parent.  The\n-   * parent is determined via a simple operation which removes the\n+   * parent is determined via a simple operation which removes the name\n+   * after the last file separator character, as determined by the platform.\n    *\n    * @return The parent directory of this file\n    */\n@@ -1445,32 +1447,6 @@ public int compareTo(File other)\n       return path.compareToIgnoreCase (other.path);\n   }\n \n-  /**\n-   * This method compares the specified <code>Object</code> to this one\n-   * to test for equality.  It does this by comparing the canonical path names\n-   * of the files.  This method is identical to <code>compareTo(File)</code>\n-   * except that if the <code>Object</code> passed to it is not a \n-   * <code>File</code>, it throws a <code>ClassCastException</code>\n-   * <p>\n-   * The canonical paths of the files are determined by calling the\n-   * <code>getCanonicalPath</code> method on each object.\n-   * <p>\n-   * This method returns a 0 if the specified <code>Object</code> is equal\n-   * to this one, a negative value if it is less than this one \n-   * a positive value if it is greater than this one.\n-   *\n-   * @return An integer as described above\n-   *\n-   * @exception ClassCastException If the passed <code>Object</code> is \n-   * not a <code>File</code>\n-   *\n-   * @since 1.2\n-   */\n-  public int compareTo(Object obj)\n-  {\n-    return compareTo((File) obj);\n-  }\n-\n   /*\n    * This native method actually performs the rename.\n    */"}, {"sha": "5d3a260e9d0681e82cbd4ee62aaa584da9bb6da3", "filename": "libjava/prims.cc", "status": "modified", "additions": 12, "deletions": 9, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e7b20ac6e8b1446e10418b911ea5c007d51d8ac/libjava%2Fprims.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e7b20ac6e8b1446e10418b911ea5c007d51d8ac/libjava%2Fprims.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fprims.cc?ref=6e7b20ac6e8b1446e10418b911ea5c007d51d8ac", "patch": "@@ -1262,7 +1262,11 @@ parse_x_arg (char* option_string)\n     {\n       // FIXME: fail if impossible to share class data\n     }\n-\n+  else\n+    {\n+      // Unrecognized.\n+      return -1;\n+    }\n   return 0;\n }\n \n@@ -1571,21 +1575,20 @@ parse_init_args (JvVMInitArgs* vm_args)\n \t  JVMTI::enabled = true;\n           continue;\n \t}\n-      else if (vm_args->ignoreUnrecognized)\n+      else\n         {\n+\t  int r = -1;\n           if (option_string[0] == '_')\n-            parse_x_arg (option_string + 1);\n-          else if (! strncmp (option_string, \"-X\", 2))\n-            parse_x_arg (option_string + 2);\n-          else\n+\t    r = parse_x_arg (option_string + 1);\n+\t  else if (! strncmp (option_string, \"-X\", 2))\n+\t    r = parse_x_arg (option_string + 2);\n+\n+\t  if (r == -1 && ! vm_args->ignoreUnrecognized)\n             {\n-            unknown_option:\n               fprintf (stderr, \"libgcj: unknown option: %s\\n\", option_string);\n               return -1;\n             }\n \t}\n-      else\n-        goto unknown_option;\n     }\n   return 0;\n }"}]}