{"sha": "6b6294f11853a51dd444dbc5ed797c593459be52", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmI2Mjk0ZjExODUzYTUxZGQ0NDRkYmM1ZWQ3OTdjNTkzNDU5YmU1Mg==", "commit": {"author": {"name": "Tom Tromey", "email": "tromey@redhat.com", "date": "2002-02-18T04:55:07Z"}, "committer": {"name": "Tom Tromey", "email": "tromey@gcc.gnu.org", "date": "2002-02-18T04:55:07Z"}, "message": "java-tree.h (TYPE_STRICTFP): New macro.\n\n\t* java-tree.h (TYPE_STRICTFP): New macro.\n\t(struct lang_type) [strictfp]: New field.\n\t(CLASS_STRICTFP): New macro.\n\t(METHOD_STRICTFP): New macro.\n\t(struct lang_decl) [strictfp]: New field.\n\t* parse.y (method_header): Disallow strictfp constructor or\n\tabstract method.\n\t(STRICT_TK): Move before MODIFIER_TK.\n\t* parse.h (CLASS_MODIFIERS): Added ACC_STRICT.\n\t(METHOD_MODIFIERS): Likewise.\n\t(INTERFACE_MODIFIERS): Likewise.\n\t* jcf-write.c (get_access_flags): Likewise.\n\t* class.c (set_class_decl_access_flags): Recognize ACC_STRICT.\n\t(add_method_1): Likewise.\n\t(get_access_flags_from_decl): Likewise.\n\t* jcf-dump.c (print_access_flags): Print in standard order.  Also,\n\trecognize strictfp flag.\n\t* jcf.h (ACC_STRICT): New define.\n\nFrom-SVN: r49834", "tree": {"sha": "9d4dcd64a3dacde96384e1abe0d301b3d8973403", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9d4dcd64a3dacde96384e1abe0d301b3d8973403"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6b6294f11853a51dd444dbc5ed797c593459be52", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6b6294f11853a51dd444dbc5ed797c593459be52", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6b6294f11853a51dd444dbc5ed797c593459be52", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6b6294f11853a51dd444dbc5ed797c593459be52/comments", "author": null, "committer": null, "parents": [{"sha": "aeb85a152cd80ead8a39d559f71acbc447e7df4e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aeb85a152cd80ead8a39d559f71acbc447e7df4e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aeb85a152cd80ead8a39d559f71acbc447e7df4e"}], "stats": {"total": 67, "additions": 54, "deletions": 13}, "files": [{"sha": "922a67d43ddcbdfb8ae9b1bbf0ab251cfd058a6b", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b6294f11853a51dd444dbc5ed797c593459be52/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b6294f11853a51dd444dbc5ed797c593459be52/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=6b6294f11853a51dd444dbc5ed797c593459be52", "patch": "@@ -1,3 +1,24 @@\n+2002-02-17  Tom Tromey  <tromey@redhat.com>\n+\n+\t* java-tree.h (TYPE_STRICTFP): New macro.\n+\t(struct lang_type) [strictfp]: New field.\n+\t(CLASS_STRICTFP): New macro.\n+\t(METHOD_STRICTFP): New macro.\n+\t(struct lang_decl) [strictfp]: New field.\n+\t* parse.y (method_header): Disallow strictfp constructor or\n+\tabstract method.\n+\t(STRICT_TK): Move before MODIFIER_TK.\n+\t* parse.h (CLASS_MODIFIERS): Added ACC_STRICT.\n+\t(METHOD_MODIFIERS): Likewise.\n+\t(INTERFACE_MODIFIERS): Likewise.\n+\t* jcf-write.c (get_access_flags): Likewise.\n+\t* class.c (set_class_decl_access_flags): Recognize ACC_STRICT.\n+\t(add_method_1): Likewise.\n+\t(get_access_flags_from_decl): Likewise.\n+\t* jcf-dump.c (print_access_flags): Print in standard order.  Also,\n+\trecognize strictfp flag.\n+\t* jcf.h (ACC_STRICT): New define.\n+\n 2002-02-12  David Billinghurst <Davod.Billinghurst@riotinto.com>\n \n \t* class.c(build_utf8_ref): Move declaration of decl_size"}, {"sha": "e9cc58c29ecf7d7e7346cc74a7de819489c0008c", "filename": "gcc/java/class.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b6294f11853a51dd444dbc5ed797c593459be52/gcc%2Fjava%2Fclass.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b6294f11853a51dd444dbc5ed797c593459be52/gcc%2Fjava%2Fclass.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fclass.c?ref=6b6294f11853a51dd444dbc5ed797c593459be52", "patch": "@@ -425,6 +425,7 @@ set_class_decl_access_flags (access_flags, class_decl)\n   if (access_flags & ACC_STATIC)    CLASS_STATIC (class_decl) = 1;\n   if (access_flags & ACC_PRIVATE)   CLASS_PRIVATE (class_decl) = 1;\n   if (access_flags & ACC_PROTECTED) CLASS_PROTECTED (class_decl) = 1;\n+  if (access_flags & ACC_STRICT)    CLASS_STRICTFP (class_decl) = 1;\n }\n \n /* Return length of inheritance chain of CLAS, where java.lang.Object is 0,\n@@ -719,6 +720,7 @@ add_method_1 (handle_class, access_flags, name, function_type)\n   if (access_flags & ACC_SYNCHRONIZED) METHOD_SYNCHRONIZED (fndecl) = 1;\n   if (access_flags & ACC_ABSTRACT) METHOD_ABSTRACT (fndecl) = 1;\n   if (access_flags & ACC_TRANSIENT) METHOD_TRANSIENT (fndecl) = 1;\n+  if (access_flags & ACC_STRICT) METHOD_STRICTFP (fndecl) = 1;\n   return fndecl;\n }\n \n@@ -1223,6 +1225,8 @@ get_access_flags_from_decl (decl)\n \taccess_flags |= ACC_PRIVATE;\n       if (CLASS_PROTECTED (decl))\n \taccess_flags |= ACC_PROTECTED;\n+      if (CLASS_STRICTFP (decl))\n+\taccess_flags |= ACC_STRICT;\n       return access_flags;\n     }\n   if (TREE_CODE (decl) == FUNCTION_DECL)\n@@ -1245,6 +1249,8 @@ get_access_flags_from_decl (decl)\n \taccess_flags |= ACC_ABSTRACT;\n       if (METHOD_TRANSIENT (decl))\n \taccess_flags |= ACC_TRANSIENT;\n+      if (METHOD_STRICTFP (decl))\n+\taccess_flags |= ACC_STRICT;\n       return access_flags;\n     }\n   abort ();"}, {"sha": "dc5fd35e688933b56760274a2c9199d527bbad2c", "filename": "gcc/java/java-tree.h", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b6294f11853a51dd444dbc5ed797c593459be52/gcc%2Fjava%2Fjava-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b6294f11853a51dd444dbc5ed797c593459be52/gcc%2Fjava%2Fjava-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fjava-tree.h?ref=6b6294f11853a51dd444dbc5ed797c593459be52", "patch": "@@ -942,6 +942,7 @@ struct lang_decl\n   unsigned int init_final : 1;\t/* Nonzero all finals are initialized */\n   unsigned int fixed_ctor : 1;\n   unsigned int init_calls_this : 1;\n+  unsigned int strictfp : 1;\n };\n \n /* init_test_table hash table entry structure.  */\n@@ -990,6 +991,7 @@ struct lang_decl_var\n #define TYPE_IMPORT_DEMAND_LIST(T) (TYPE_LANG_SPECIFIC(T)->import_demand_list)\n #define TYPE_PRIVATE_INNER_CLASS(T) (TYPE_LANG_SPECIFIC(T)->pic)\n #define TYPE_PROTECTED_INNER_CLASS(T) (TYPE_LANG_SPECIFIC(T)->poic)\n+#define TYPE_STRICTFP(T) (TYPE_LANG_SPECIFIC(T)->strictfp)\n \n struct lang_type\n {\n@@ -1009,6 +1011,7 @@ struct lang_type\n   tree import_demand_list;\t/* Imported types, in the CU of this class */\n   unsigned pic:1;\t\t/* Private Inner Class. */\n   unsigned poic:1;\t\t/* Protected Inner Class. */\n+  unsigned strictfp:1;\t\t/* `strictfp' class.  */\n };\n \n #ifdef JAVA_USE_HANDLES\n@@ -1249,6 +1252,7 @@ struct rtx_def * java_lang_expand_expr PARAMS ((tree, rtx, enum machine_mode,\n #define METHOD_NATIVE(DECL) (DECL_LANG_SPECIFIC(DECL)->native)\n #define METHOD_ABSTRACT(DECL) DECL_LANG_FLAG_5 (DECL)\n #define METHOD_TRANSIENT(DECL) DECL_LANG_FLAG_6 (DECL)\n+#define METHOD_STRICTFP(DECL) (DECL_LANG_SPECIFIC (DECL)->strictfp)\n \n #define JAVA_FILE_P(NODE) TREE_LANG_FLAG_2 (NODE)\n #define CLASS_FILE_P(NODE) TREE_LANG_FLAG_3 (NODE)\n@@ -1291,6 +1295,7 @@ struct rtx_def * java_lang_expand_expr PARAMS ((tree, rtx, enum machine_mode,\n #define CLASS_STATIC(DECL) DECL_LANG_FLAG_7 (DECL)\n #define CLASS_PRIVATE(DECL) (TYPE_PRIVATE_INNER_CLASS (TREE_TYPE (DECL)))\n #define CLASS_PROTECTED(DECL) (TYPE_PROTECTED_INNER_CLASS (TREE_TYPE (DECL)))\n+#define CLASS_STRICTFP(DECL) (TYPE_STRICTFP (TREE_TYPE (DECL)))\n \n /* @deprecated marker flag on methods, fields and classes */\n "}, {"sha": "756e43d049970462fb65afe31f04f6844ad68025", "filename": "gcc/java/jcf-dump.c", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b6294f11853a51dd444dbc5ed797c593459be52/gcc%2Fjava%2Fjcf-dump.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b6294f11853a51dd444dbc5ed797c593459be52/gcc%2Fjava%2Fjcf-dump.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fjcf-dump.c?ref=6b6294f11853a51dd444dbc5ed797c593459be52", "patch": "@@ -363,20 +363,21 @@ DEFUN (print_access_flags, (stream, flags, context),\n   if (flags & ACC_PUBLIC) fprintf (stream, \" public\");\n   if (flags & ACC_PRIVATE) fprintf (stream, \" private\");\n   if (flags & ACC_PROTECTED) fprintf (stream, \" protected\");\n+  if (flags & ACC_ABSTRACT) fprintf (stream, \" abstract\");\n   if (flags & ACC_STATIC) fprintf (stream, \" static\");\n   if (flags & ACC_FINAL) fprintf (stream, \" final\");\n+  if (flags & ACC_TRANSIENT) fprintf (stream, \" transient\");\n+  if (flags & ACC_VOLATILE) fprintf (stream, \" volatile\");\n+  if (flags & ACC_NATIVE) fprintf (stream, \" native\");\n   if (flags & ACC_SYNCHRONIZED)\n     {\n       if (context == 'c')\n \tfprintf (stream, \" super\");\n       else\n \tfprintf (stream, \" synchronized\");\n     }\n-  if (flags & ACC_VOLATILE) fprintf (stream, \" volatile\");\n-  if (flags & ACC_TRANSIENT) fprintf (stream, \" transient\");\n-  if (flags & ACC_NATIVE) fprintf (stream, \" native\");\n   if (flags & ACC_INTERFACE) fprintf (stream, \" interface\");\n-  if (flags & ACC_ABSTRACT) fprintf (stream, \" abstract\");\n+  if (flags & ACC_STRICT) fprintf (stream, \" strictfp\");\n }\n \n "}, {"sha": "bdaebba44eca4ed636ab45f1dfdf86f1380f1b8b", "filename": "gcc/java/jcf-write.c", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b6294f11853a51dd444dbc5ed797c593459be52/gcc%2Fjava%2Fjcf-write.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b6294f11853a51dd444dbc5ed797c593459be52/gcc%2Fjava%2Fjcf-write.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fjcf-write.c?ref=6b6294f11853a51dd444dbc5ed797c593459be52", "patch": "@@ -1,5 +1,5 @@\n /* Write out a Java(TM) class file.\n-   Copyright (C) 1998, 1999, 2000, 2001 Free Software Foundation, Inc.\n+   Copyright (C) 1998, 1999, 2000, 2001, 2002 Free Software Foundation, Inc.\n \n This file is part of GNU CC.\n \n@@ -685,6 +685,8 @@ get_access_flags (decl)\n       if (ANONYMOUS_CLASS_P (TREE_TYPE (decl))\n \t  || LOCAL_CLASS_P (TREE_TYPE (decl)))\n \tflags |= ACC_PRIVATE;\n+      if (CLASS_STRICTFP (decl))\n+\tflags |= ACC_STRICT;\n     }\n   else\n     abort ();\n@@ -699,6 +701,8 @@ get_access_flags (decl)\n \tflags |= ACC_SYNCHRONIZED;\n       if (METHOD_ABSTRACT (decl))\n \tflags |= ACC_ABSTRACT;\n+      if (METHOD_STRICTFP (decl))\n+\tflags |= ACC_STRICT;\n     }\n   if (isfield)\n     {"}, {"sha": "ef7669e046bf40c7f6dd9f6471ad86c3fc22259a", "filename": "gcc/java/jcf.h", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b6294f11853a51dd444dbc5ed797c593459be52/gcc%2Fjava%2Fjcf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b6294f11853a51dd444dbc5ed797c593459be52/gcc%2Fjava%2Fjcf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fjcf.h?ref=6b6294f11853a51dd444dbc5ed797c593459be52", "patch": "@@ -1,6 +1,6 @@\n /* Utility macros to read Java(TM) .class files and byte codes.\n \n-   Copyright (C) 1996, 1997, 1998, 1999, 2000, 2001 Free Software Foundation, Inc.\n+   Copyright (C) 1996, 1997, 1998, 1999, 2000, 2001, 2002 Free Software Foundation, Inc.\n \n This program is free software; you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n@@ -207,6 +207,7 @@ typedef struct JCF {\n #define ACC_NATIVE 0x0100\n #define ACC_INTERFACE 0x0200\n #define ACC_ABSTRACT 0x0400\n+#define ACC_STRICT 0x0800\n \n #define ACC_VISIBILITY (ACC_PUBLIC | ACC_PRIVATE | ACC_PROTECTED)\n "}, {"sha": "1d8bb05ef0f9d52244dce0bfb0b94fc81d989821", "filename": "gcc/java/parse.h", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b6294f11853a51dd444dbc5ed797c593459be52/gcc%2Fjava%2Fparse.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b6294f11853a51dd444dbc5ed797c593459be52/gcc%2Fjava%2Fparse.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fparse.h?ref=6b6294f11853a51dd444dbc5ed797c593459be52", "patch": "@@ -1,5 +1,5 @@\n /* Language parser definitions for the GNU compiler for the Java(TM) language.\n-   Copyright (C) 1997, 1998, 1999, 2000, 2001 Free Software Foundation, Inc.\n+   Copyright (C) 1997, 1998, 1999, 2000, 2001, 2002 Free Software Foundation, Inc.\n    Contributed by Alexandre Petit-Bianco (apbianco@cygnus.com)\n \n This file is part of GNU CC.\n@@ -73,12 +73,13 @@ extern tree stabilize_reference PARAMS ((tree));\n #define YYNOT_TWICE if (ctxp->prevent_ese != lineno)\n \n /* Accepted modifiers */\n-#define CLASS_MODIFIERS ACC_PUBLIC|ACC_ABSTRACT|ACC_FINAL\n+#define CLASS_MODIFIERS ACC_PUBLIC|ACC_ABSTRACT|ACC_FINAL|ACC_STRICT\n #define FIELD_MODIFIERS ACC_PUBLIC|ACC_PROTECTED|ACC_PRIVATE|ACC_FINAL| \\\n                         ACC_STATIC|ACC_TRANSIENT|ACC_VOLATILE\n #define METHOD_MODIFIERS ACC_PUBLIC|ACC_PROTECTED|ACC_PRIVATE|ACC_ABSTRACT| \\\n-\t\t\t ACC_STATIC|ACC_FINAL|ACC_SYNCHRONIZED|ACC_NATIVE\n-#define INTERFACE_MODIFIERS ACC_PUBLIC|ACC_ABSTRACT\n+\t\t\t ACC_STATIC|ACC_FINAL|ACC_SYNCHRONIZED|ACC_NATIVE| \\\n+\t\t\t ACC_STRICT\n+#define INTERFACE_MODIFIERS ACC_PUBLIC|ACC_ABSTRACT|ACC_STRICT\n #define INTERFACE_INNER_MODIFIERS ACC_PUBLIC|ACC_PROTECTED|ACC_ABSTRACT|ACC_STATIC\n #define INTERFACE_METHOD_MODIFIERS ACC_PUBLIC|ACC_ABSTRACT\n #define INTERFACE_FIELD_MODIFIERS ACC_PUBLIC|ACC_STATIC|ACC_FINAL"}, {"sha": "b3e918994782327e44e0dd5b64476cef1bfb479d", "filename": "gcc/java/parse.y", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b6294f11853a51dd444dbc5ed797c593459be52/gcc%2Fjava%2Fparse.y", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b6294f11853a51dd444dbc5ed797c593459be52/gcc%2Fjava%2Fparse.y", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fparse.y?ref=6b6294f11853a51dd444dbc5ed797c593459be52", "patch": "@@ -482,8 +482,8 @@ static tree src_parse_roots[1];\n %token   PUBLIC_TK       PRIVATE_TK         PROTECTED_TK\n %token   STATIC_TK       FINAL_TK           SYNCHRONIZED_TK\n %token   VOLATILE_TK     TRANSIENT_TK       NATIVE_TK\n-%token   PAD_TK          ABSTRACT_TK        MODIFIER_TK\n-%token   STRICT_TK\n+%token   PAD_TK          ABSTRACT_TK        STRICT_TK\n+%token   MODIFIER_TK\n \n /* Keep those two in order, too */\n %token   DECR_TK INCR_TK\n@@ -4543,7 +4543,8 @@ method_header (flags, type, mdecl, throws)\n       ABSTRACT_CHECK (flags, ACC_STATIC, id, \"Static\");\n       ABSTRACT_CHECK (flags, ACC_FINAL, id, \"Final\");\n       ABSTRACT_CHECK (flags, ACC_NATIVE, id, \"Native\");\n-      ABSTRACT_CHECK (flags, ACC_SYNCHRONIZED,id, \"Synchronized\");\n+      ABSTRACT_CHECK (flags, ACC_SYNCHRONIZED, id, \"Synchronized\");\n+      ABSTRACT_CHECK (flags, ACC_STRICT, id, \"Strictfp\");\n       if (!CLASS_ABSTRACT (TYPE_NAME (this_class))\n \t  && !CLASS_INTERFACE (TYPE_NAME (this_class)))\n \tparse_error_context \n@@ -4569,6 +4570,7 @@ method_header (flags, type, mdecl, throws)\n \t  JCONSTRUCTOR_CHECK (flags, ACC_FINAL, id, \"final\");\n \t  JCONSTRUCTOR_CHECK (flags, ACC_NATIVE, id, \"native\");\n \t  JCONSTRUCTOR_CHECK (flags, ACC_SYNCHRONIZED, id, \"synchronized\");\n+\t  JCONSTRUCTOR_CHECK (flags, ACC_STRICT, id, \"strictfp\");\n \t}\n       /* If we found error here, we don't consider it's OK to tread\n \t the method definition as a constructor, for the rest of this"}]}