{"sha": "30caed6d0a9e58ce104f649d935763d70547c3c5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzBjYWVkNmQwYTllNThjZTEwNGY2NDlkOTM1NzYzZDcwNTQ3YzNjNQ==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-06-05T17:19:13Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-06-05T17:19:13Z"}, "message": "(expand_inline_function): Always copy a SUBREG as an\nargument into a REG.\n\nFrom-SVN: r4638", "tree": {"sha": "b39cd3259e117e79f18a25a7c53ab19c45f478ae", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b39cd3259e117e79f18a25a7c53ab19c45f478ae"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/30caed6d0a9e58ce104f649d935763d70547c3c5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/30caed6d0a9e58ce104f649d935763d70547c3c5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/30caed6d0a9e58ce104f649d935763d70547c3c5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/30caed6d0a9e58ce104f649d935763d70547c3c5/comments", "author": null, "committer": null, "parents": [{"sha": "bd103b489dd15da2f2d0227ff81db79a2f00e66f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bd103b489dd15da2f2d0227ff81db79a2f00e66f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bd103b489dd15da2f2d0227ff81db79a2f00e66f"}], "stats": {"total": 6, "additions": 5, "deletions": 1}, "files": [{"sha": "73d839baff6781b1439d9c8d7595b06f7932203a", "filename": "gcc/integrate.c", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/30caed6d0a9e58ce104f649d935763d70547c3c5/gcc%2Fintegrate.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/30caed6d0a9e58ce104f649d935763d70547c3c5/gcc%2Fintegrate.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fintegrate.c?ref=30caed6d0a9e58ce104f649d935763d70547c3c5", "patch": "@@ -1269,7 +1269,11 @@ expand_inline_function (fndecl, parms, target, ignore, type, structure_value_add\n \t\t  && (GET_CODE (arg_vals[i]) == REG\n \t\t      || GET_CODE (arg_vals[i]) == SUBREG\n \t\t      || GET_CODE (arg_vals[i]) == MEM)\n-\t\t  && reg_overlap_mentioned_p (arg_vals[i], target))))\n+\t\t  && reg_overlap_mentioned_p (arg_vals[i], target))\n+\t      /* ??? We must always copy a SUBREG into a REG, because it might\n+\t\t get substituted into an address, and not all ports correctly\n+\t\t handle SUBREGs in addresses.  */\n+\t      || (GET_CODE (arg_vals[i]) == SUBREG)))\n \targ_vals[i] = copy_to_mode_reg (GET_MODE (loc), arg_vals[i]);\n     }\n \t"}]}