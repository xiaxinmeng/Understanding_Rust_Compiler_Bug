{"sha": "78bd9046a8dff27c8247a5c80bdec5f7122f77d2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzhiZDkwNDZhOGRmZjI3YzgyNDdhNWM4MGJkZWM1ZjcxMjJmNzdkMg==", "commit": {"author": {"name": "Alexandre Oliva", "email": "aoliva@redhat.com", "date": "2009-06-04T05:50:34Z"}, "committer": {"name": "Alexandre Oliva", "email": "aoliva@gcc.gnu.org", "date": "2009-06-04T05:50:34Z"}, "message": "dwarf2asm.c (dw2_force_const_mem): Defer creation of declarations for constants until...\n\n* dwarf2asm.c (dw2_force_const_mem): Defer creation of\ndeclarations for constants until...\n(dw2_output_indirect_constant_1): ... this point.\n\nFrom-SVN: r148160", "tree": {"sha": "844ff9fd433e82ace9821b2780185794c64fc319", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/844ff9fd433e82ace9821b2780185794c64fc319"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/78bd9046a8dff27c8247a5c80bdec5f7122f77d2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/78bd9046a8dff27c8247a5c80bdec5f7122f77d2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/78bd9046a8dff27c8247a5c80bdec5f7122f77d2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/78bd9046a8dff27c8247a5c80bdec5f7122f77d2/comments", "author": null, "committer": null, "parents": [{"sha": "4cbc7f7a2155f307bbe98610a20b557f613f6e47", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4cbc7f7a2155f307bbe98610a20b557f613f6e47", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4cbc7f7a2155f307bbe98610a20b557f613f6e47"}], "stats": {"total": 50, "additions": 31, "deletions": 19}, "files": [{"sha": "5cc21e47d162afb92a6540b3274ab916a8e6bdb9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/78bd9046a8dff27c8247a5c80bdec5f7122f77d2/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/78bd9046a8dff27c8247a5c80bdec5f7122f77d2/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=78bd9046a8dff27c8247a5c80bdec5f7122f77d2", "patch": "@@ -1,3 +1,9 @@\n+2009-06-04  Alexandre Oliva  <aoliva@redhat.com>\n+\n+\t* dwarf2asm.c (dw2_force_const_mem): Defer creation of\n+\tdeclarations for constants until...\n+\t(dw2_output_indirect_constant_1): ... this point.\n+\n 2009-06-04  Richard Earnshaw  <rearnsha@arm.com>\n \n \tPR target/10242"}, {"sha": "7e3fc82c9de4ca682357f8fba1500199ebf31d84", "filename": "gcc/dwarf2asm.c", "status": "modified", "additions": 25, "deletions": 19, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/78bd9046a8dff27c8247a5c80bdec5f7122f77d2/gcc%2Fdwarf2asm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/78bd9046a8dff27c8247a5c80bdec5f7122f77d2/gcc%2Fdwarf2asm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2asm.c?ref=78bd9046a8dff27c8247a5c80bdec5f7122f77d2", "patch": "@@ -809,7 +809,7 @@ dw2_force_const_mem (rtx x, bool is_public)\n {\n   splay_tree_node node;\n   const char *key;\n-  tree decl;\n+  tree decl_id;\n \n   if (! indirect_pool)\n     /* We use strcmp, rather than just comparing pointers, so that the\n@@ -821,7 +821,7 @@ dw2_force_const_mem (rtx x, bool is_public)\n   key = XSTR (x, 0);\n   node = splay_tree_lookup (indirect_pool, (splay_tree_key) key);\n   if (node)\n-    decl = (tree) node->value;\n+    decl_id = (tree) node->value;\n   else\n     {\n       tree id;\n@@ -832,37 +832,29 @@ dw2_force_const_mem (rtx x, bool is_public)\n \t  char *ref_name = XALLOCAVEC (char, strlen (str) + sizeof \"DW.ref.\");\n \n \t  sprintf (ref_name, \"DW.ref.%s\", str);\n-\t  id = get_identifier (ref_name);\n-\t  decl = build_decl (VAR_DECL, id, ptr_type_node);\n-\t  DECL_ARTIFICIAL (decl) = 1;\n-\t  DECL_IGNORED_P (decl) = 1;\n-\t  TREE_PUBLIC (decl) = 1;\n-\t  DECL_INITIAL (decl) = decl;\n-\t  make_decl_one_only (decl);\n+\t  gcc_assert (!maybe_get_identifier (ref_name));\n+\t  decl_id = get_identifier (ref_name);\n+\t  TREE_PUBLIC (decl_id) = 1;\n \t}\n       else\n \t{\n \t  char label[32];\n \n \t  ASM_GENERATE_INTERNAL_LABEL (label, \"LDFCM\", dw2_const_labelno);\n \t  ++dw2_const_labelno;\n-\t  id = get_identifier (label);\n-\t  decl = build_decl (VAR_DECL, id, ptr_type_node);\n-\t  DECL_ARTIFICIAL (decl) = 1;\n-\t  DECL_IGNORED_P (decl) = 1;\n-\t  TREE_STATIC (decl) = 1;\n-\t  DECL_INITIAL (decl) = decl;\n+\t  gcc_assert (!maybe_get_identifier (label));\n+\t  decl_id = get_identifier (label);\n \t}\n \n       id = maybe_get_identifier (str);\n       if (id)\n \tTREE_SYMBOL_REFERENCED (id) = 1;\n \n       splay_tree_insert (indirect_pool, (splay_tree_key) key,\n-\t\t\t (splay_tree_value) decl);\n+\t\t\t (splay_tree_value) decl_id);\n     }\n \n-  return XEXP (DECL_RTL (decl), 0);\n+  return gen_rtx_SYMBOL_REF (Pmode, IDENTIFIER_POINTER (decl_id));\n }\n \n /* A helper function for dw2_output_indirect_constants called through\n@@ -874,10 +866,24 @@ dw2_output_indirect_constant_1 (splay_tree_node node,\n {\n   const char *sym;\n   rtx sym_ref;\n-  tree decl;\n+  tree id, decl;\n \n   sym = (const char *) node->key;\n-  decl = (tree) node->value;\n+  id = (tree) node->value;\n+\n+  decl = build_decl (VAR_DECL, id, ptr_type_node);\n+  DECL_ARTIFICIAL (decl) = 1;\n+  DECL_IGNORED_P (decl) = 1;\n+  DECL_INITIAL (decl) = decl;\n+\n+  if (TREE_PUBLIC (id))\n+    {\n+      TREE_PUBLIC (decl) = 1;\n+      make_decl_one_only (decl);\n+    }\n+  else\n+    TREE_STATIC (decl) = 1;\n+\n   sym_ref = gen_rtx_SYMBOL_REF (Pmode, sym);\n   sym = targetm.strip_name_encoding (sym);\n   if (TREE_PUBLIC (decl) && USE_LINKONCE_INDIRECT)"}]}