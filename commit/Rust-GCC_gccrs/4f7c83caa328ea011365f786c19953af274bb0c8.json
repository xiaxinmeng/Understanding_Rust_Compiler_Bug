{"sha": "4f7c83caa328ea011365f786c19953af274bb0c8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGY3YzgzY2FhMzI4ZWEwMTEzNjVmNzg2YzE5OTUzYWYyNzRiYjBjOA==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-01-29T16:23:31Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-01-29T16:23:31Z"}, "message": "[multiple changes]\n\n2014-01-29  Hristian Kirtchev  <kirtchev@adacore.com>\n\n\t* einfo.adb (Get_Pragma): Handle the retrieval of pragma Refined_Post.\n\t* einfo.ads (Get_Pragma): Update the comment on special pragmas\n\thandled by this routine.\n\t* sem_prag.adb (Analyze_Pragma): Add a legal pragma Refined_Post\n\tto the contract of the related subprogram body.\n\t* sem_util.adb (Add_Contract_Item): Handle the insertion of\n\tpragma Refined_Post into the contract of a subprogram body.\n\t* sinfo.ads Update the documentation of node N_Contract.\n\t* sem_res.adb (Resolve_Entity_Name): Add a guard\n\tto detect abstract states and variables only when checking the\n\tSPARK 2014 rules concerning volatile object placement.\n\n2014-01-29  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_ch4.adb (Find_Equality_Types, Try_One_Interp): within an instance,\n\tnull is compatible with any access type.\n\nFrom-SVN: r207269", "tree": {"sha": "bf717a9c20a91caa3da27d7234d94e74e57b7ce8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bf717a9c20a91caa3da27d7234d94e74e57b7ce8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4f7c83caa328ea011365f786c19953af274bb0c8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4f7c83caa328ea011365f786c19953af274bb0c8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4f7c83caa328ea011365f786c19953af274bb0c8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4f7c83caa328ea011365f786c19953af274bb0c8/comments", "author": null, "committer": null, "parents": [{"sha": "385e1a992afbbff6049b69325f211fad49e0231a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/385e1a992afbbff6049b69325f211fad49e0231a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/385e1a992afbbff6049b69325f211fad49e0231a"}], "stats": {"total": 41, "additions": 39, "deletions": 2}, "files": [{"sha": "84f071b4c6caf5ab104ed588646744138b7ef3b6", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f7c83caa328ea011365f786c19953af274bb0c8/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f7c83caa328ea011365f786c19953af274bb0c8/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=4f7c83caa328ea011365f786c19953af274bb0c8", "patch": "@@ -1,3 +1,22 @@\n+2014-01-29  Hristian Kirtchev  <kirtchev@adacore.com>\n+\n+\t* einfo.adb (Get_Pragma): Handle the retrieval of pragma Refined_Post.\n+\t* einfo.ads (Get_Pragma): Update the comment on special pragmas\n+\thandled by this routine.\n+\t* sem_prag.adb (Analyze_Pragma): Add a legal pragma Refined_Post\n+\tto the contract of the related subprogram body.\n+\t* sem_util.adb (Add_Contract_Item): Handle the insertion of\n+\tpragma Refined_Post into the contract of a subprogram body.\n+\t* sinfo.ads Update the documentation of node N_Contract.\n+\t* sem_res.adb (Resolve_Entity_Name): Add a guard\n+\tto detect abstract states and variables only when checking the\n+\tSPARK 2014 rules concerning volatile object placement.\n+\n+2014-01-29  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_ch4.adb (Find_Equality_Types, Try_One_Interp): within an instance,\n+\tnull is compatible with any access type.\n+\n 2014-01-29  Hristian Kirtchev  <kirtchev@adacore.com>\n \n \t* sem_util.adb (Find_Placement_In_State_Space): Assume that the default"}, {"sha": "660a37a79a96b47be3a06bf0be3209642bdf44a5", "filename": "gcc/ada/einfo.adb", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f7c83caa328ea011365f786c19953af274bb0c8/gcc%2Fada%2Feinfo.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f7c83caa328ea011365f786c19953af274bb0c8/gcc%2Fada%2Feinfo.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.adb?ref=4f7c83caa328ea011365f786c19953af274bb0c8", "patch": "@@ -6455,7 +6455,8 @@ package body Einfo is\n                   Id = Pragma_Test_Case;\n       Is_PPC : constant Boolean :=\n                   Id = Pragma_Precondition      or else\n-                  Id = Pragma_Postcondition;\n+                  Id = Pragma_Postcondition     or else\n+                  Id = Pragma_Refined_Post;\n \n       In_Contract : constant Boolean := Is_CDG or Is_CTC or Is_PPC;\n "}, {"sha": "e006455dbc270669cfbf61e56172cfab8607226a", "filename": "gcc/ada/einfo.ads", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f7c83caa328ea011365f786c19953af274bb0c8/gcc%2Fada%2Feinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f7c83caa328ea011365f786c19953af274bb0c8/gcc%2Fada%2Feinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.ads?ref=4f7c83caa328ea011365f786c19953af274bb0c8", "patch": "@@ -7509,7 +7509,9 @@ package Einfo is\n    --    Postcondition\n    --    Refined_Depends\n    --    Refined_Global\n+   --    Refined_Post\n    --    Refined_State\n+   --    Test_Case\n \n    function Get_Record_Representation_Clause (E : Entity_Id) return Node_Id;\n    --  Searches the Rep_Item chain for a given entity E, for a record"}, {"sha": "abcec64c973116ce2aebad221917926e79ec5c4f", "filename": "gcc/ada/sem_ch4.adb", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f7c83caa328ea011365f786c19953af274bb0c8/gcc%2Fada%2Fsem_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f7c83caa328ea011365f786c19953af274bb0c8/gcc%2Fada%2Fsem_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch4.adb?ref=4f7c83caa328ea011365f786c19953af274bb0c8", "patch": "@@ -5892,6 +5892,9 @@ package body Sem_Ch4 is\n \n          --  In Ada 2005, the equality on anonymous access types is declared\n          --  in Standard, and is always visible.\n+         --  In an instance, the type may have been immediately visible.\n+         --  Either the types are compatible, or one operand is universal\n+         --  (numeric or null).\n \n          elsif In_Open_Scopes (Scope (Bas))\n            or else Is_Potentially_Use_Visible (Bas)\n@@ -5900,6 +5903,7 @@ package body Sem_Ch4 is\n            or else (In_Instance\n                      and then\n                        (First_Subtype (T1) = First_Subtype (Etype (R))\n+                         or else Nkind (R) = N_Null\n                          or else\n                            (Is_Numeric_Type (T1)\n                              and then Is_Universal_Numeric_Type (Etype (R)))))"}, {"sha": "a3711c8353ddbbbe208bc79a2035e6e7c0d36354", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f7c83caa328ea011365f786c19953af274bb0c8/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f7c83caa328ea011365f786c19953af274bb0c8/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=4f7c83caa328ea011365f786c19953af274bb0c8", "patch": "@@ -18475,6 +18475,10 @@ package body Sem_Prag is\n                        (\"pragma % does not mention function result?T?\");\n                   end if;\n                end if;\n+\n+               --  Chain the pragma on the contract for easy retrieval\n+\n+               Add_Contract_Item (N, Body_Id);\n             end if;\n          end Refined_Post;\n "}, {"sha": "8e08367047cb15898002099c670e5af2c6242bca", "filename": "gcc/ada/sem_res.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f7c83caa328ea011365f786c19953af274bb0c8/gcc%2Fada%2Fsem_res.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f7c83caa328ea011365f786c19953af274bb0c8/gcc%2Fada%2Fsem_res.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_res.adb?ref=4f7c83caa328ea011365f786c19953af274bb0c8", "patch": "@@ -6513,6 +6513,7 @@ package body Sem_Res is\n       --  standard Ada legality rules.\n \n       if SPARK_Mode = On\n+        and then Ekind_In (E, E_Abstract_State, E_Variable)\n         and then Is_SPARK_Volatile_Object (E)\n         and then\n           (Async_Writers_Enabled (E)"}, {"sha": "85c8592959ff70514bb068e6af59d3744fd07730", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f7c83caa328ea011365f786c19953af274bb0c8/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f7c83caa328ea011365f786c19953af274bb0c8/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=4f7c83caa328ea011365f786c19953af274bb0c8", "patch": "@@ -345,9 +345,14 @@ package body Sem_Util is\n       --  are:\n       --    Refined_Depends\n       --    Refined_Global\n+      --    Refined_Post\n \n       elsif Ekind (Id) = E_Subprogram_Body then\n-         if Nam_In (Nam, Name_Refined_Depends, Name_Refined_Global) then\n+         if Nam = Name_Refined_Post then\n+            Set_Next_Pragma (Prag, Pre_Post_Conditions (Items));\n+            Set_Pre_Post_Conditions (Items, Prag);\n+\n+         elsif Nam_In (Nam, Name_Refined_Depends, Name_Refined_Global) then\n             Set_Next_Pragma (Prag, Classifications (Items));\n             Set_Classifications (Items, Prag);\n "}, {"sha": "6aa28f2153a1592264ad14c1701377297c7a23cd", "filename": "gcc/ada/sinfo.ads", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f7c83caa328ea011365f786c19953af274bb0c8/gcc%2Fada%2Fsinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f7c83caa328ea011365f786c19953af274bb0c8/gcc%2Fada%2Fsinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsinfo.ads?ref=4f7c83caa328ea011365f786c19953af274bb0c8", "patch": "@@ -7260,6 +7260,7 @@ package Sinfo is\n       --    Postcondition\n       --    Pre\n       --    Precondition\n+      --    Refined_Post\n       --  The ordering in the list is in LIFO fashion.\n \n       --  Note that there might be multiple preconditions or postconditions"}]}