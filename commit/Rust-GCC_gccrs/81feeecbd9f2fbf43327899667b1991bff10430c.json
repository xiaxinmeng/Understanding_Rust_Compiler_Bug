{"sha": "81feeecbd9f2fbf43327899667b1991bff10430c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODFmZWVlY2JkOWYyZmJmNDMzMjc4OTk2NjdiMTk5MWJmZjEwNDMwYw==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-07-12T02:49:37Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-07-12T02:49:37Z"}, "message": "entered into RCS\n\nFrom-SVN: r1567", "tree": {"sha": "de468a2e5b1ded0fb7887854bda973ee5c6e85b1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/de468a2e5b1ded0fb7887854bda973ee5c6e85b1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/81feeecbd9f2fbf43327899667b1991bff10430c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/81feeecbd9f2fbf43327899667b1991bff10430c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/81feeecbd9f2fbf43327899667b1991bff10430c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/81feeecbd9f2fbf43327899667b1991bff10430c/comments", "author": null, "committer": null, "parents": [{"sha": "216d5cdd139f96ada2303beb77b8174e27fddcd5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/216d5cdd139f96ada2303beb77b8174e27fddcd5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/216d5cdd139f96ada2303beb77b8174e27fddcd5"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "0682bca9505c4e651ea34b363d1ed673c0440b4a", "filename": "gcc/expr.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/81feeecbd9f2fbf43327899667b1991bff10430c/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/81feeecbd9f2fbf43327899667b1991bff10430c/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=81feeecbd9f2fbf43327899667b1991bff10430c", "patch": "@@ -3176,7 +3176,7 @@ expand_expr (exp, target, tmode, modifier)\n \t  rtx addr;\n \n \t  /* Mark as non-local and addressable.  */\n-\t  TREE_NONLOCAL (exp) = 1;\n+\t  DECL_NONLOCAL (exp) = 1;\n \t  mark_addressable (exp);\n \t  if (GET_CODE (DECL_RTL (exp)) != MEM)\n \t    abort ();\n@@ -5829,7 +5829,7 @@ clear_pending_stack_adjust ()\n {\n #ifdef EXIT_IGNORE_STACK\n   if (! flag_omit_frame_pointer && EXIT_IGNORE_STACK\n-      && ! (TREE_INLINE (current_function_decl) && ! flag_no_inline)\n+      && ! (DECL_INLINE (current_function_decl) && ! flag_no_inline)\n       && ! flag_inline_functions)\n     pending_stack_adjust = 0;\n #endif"}]}