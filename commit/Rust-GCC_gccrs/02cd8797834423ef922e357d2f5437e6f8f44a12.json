{"sha": "02cd8797834423ef922e357d2f5437e6f8f44a12", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDJjZDg3OTc4MzQ0MjNlZjkyMmUzNTdkMmY1NDM3ZTZmOGY0NGExMg==", "commit": {"author": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1993-05-11T00:31:13Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1993-05-11T00:31:13Z"}, "message": "(copy_loop_body): Copy REG_NOTES during main loop\ninstead of afterwards.\n\nFrom-SVN: r4416", "tree": {"sha": "2fa0e54b84a7139aa62854fa17e8d6a43fe37dae", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2fa0e54b84a7139aa62854fa17e8d6a43fe37dae"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/02cd8797834423ef922e357d2f5437e6f8f44a12", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/02cd8797834423ef922e357d2f5437e6f8f44a12", "html_url": "https://github.com/Rust-GCC/gccrs/commit/02cd8797834423ef922e357d2f5437e6f8f44a12", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/02cd8797834423ef922e357d2f5437e6f8f44a12/comments", "author": null, "committer": null, "parents": [{"sha": "819f43e6c7398bfc19899dc4e670e62e9473b9b6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/819f43e6c7398bfc19899dc4e670e62e9473b9b6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/819f43e6c7398bfc19899dc4e670e62e9473b9b6"}], "stats": {"total": 23, "additions": 9, "deletions": 14}, "files": [{"sha": "204162427a3fbf3e94c765e1fe7590f4ced38bd3", "filename": "gcc/unroll.c", "status": "modified", "additions": 9, "deletions": 14, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/02cd8797834423ef922e357d2f5437e6f8f44a12/gcc%2Funroll.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/02cd8797834423ef922e357d2f5437e6f8f44a12/gcc%2Funroll.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Funroll.c?ref=02cd8797834423ef922e357d2f5437e6f8f44a12", "patch": "@@ -1609,7 +1609,9 @@ copy_loop_body (copy_start, copy_end, map, exit_label, last_iteration,\n \t      pattern = copy_rtx_and_substitute (pattern, map);\n \t      copy = emit_insn (pattern);\n \t    }\n-\t  /* REG_NOTES will be copied later.  */\n+\t  /* We must copy the REG_NOTES now, because the register mapping\n+\t     might change later.  */\n+\t  REG_NOTES (copy) = copy_rtx_and_substitute (REG_NOTES (insn), map);\n \t  \n #ifdef HAVE_cc0\n \t  /* If this insn is setting CC0, it may need to look at\n@@ -1653,6 +1655,9 @@ copy_loop_body (copy_start, copy_end, map, exit_label, last_iteration,\n \tcase JUMP_INSN:\n \t  pattern = copy_rtx_and_substitute (PATTERN (insn), map);\n \t  copy = emit_jump_insn (pattern);\n+\t  /* We must copy the REG_NOTES now, because the register mapping\n+\t     might change later.  */\n+\t  REG_NOTES (copy) = copy_rtx_and_substitute (REG_NOTES (insn), map);\n \n \t  if (JUMP_LABEL (insn) == start_label && insn == copy_end\n \t      && ! last_iteration)\n@@ -1754,6 +1759,9 @@ copy_loop_body (copy_start, copy_end, map, exit_label, last_iteration,\n \tcase CALL_INSN:\n \t  pattern = copy_rtx_and_substitute (PATTERN (insn), map);\n \t  copy = emit_call_insn (pattern);\n+\t  /* We must copy the REG_NOTES now, because the register mapping\n+\t     might change later.  */\n+\t  REG_NOTES (copy) = copy_rtx_and_substitute (REG_NOTES (insn), map);\n \n #ifdef HAVE_cc0\n \t  if (cc0_insn)\n@@ -1804,19 +1812,6 @@ copy_loop_body (copy_start, copy_end, map, exit_label, last_iteration,\n     }\n   while (insn != copy_end);\n   \n-  /* Now copy the REG_NOTES.  */\n-  insn = copy_start;\n-  do\n-    {\n-      insn = NEXT_INSN (insn);\n-      if ((GET_CODE (insn) == INSN || GET_CODE (insn) == JUMP_INSN\n-\t   || GET_CODE (insn) == CALL_INSN)\n-\t  && map->insn_map[INSN_UID (insn)])\n-\tREG_NOTES (map->insn_map[INSN_UID (insn)])\n-\t  = copy_rtx_and_substitute (REG_NOTES (insn), map);\n-    }\n-  while (insn != copy_end);\n-\n   /* There may be notes between copy_notes_from and loop_end.  Emit a copy of\n      each of these notes here, since there may be some important ones, such as\n      NOTE_INSN_BLOCK_END notes, in this group.  We don't do this on the last"}]}