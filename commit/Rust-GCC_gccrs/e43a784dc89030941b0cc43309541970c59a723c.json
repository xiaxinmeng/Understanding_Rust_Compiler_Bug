{"sha": "e43a784dc89030941b0cc43309541970c59a723c", "node_id": "C_kwDOANBUbNoAKGU0M2E3ODRkYzg5MDMwOTQxYjBjYzQzMzA5NTQxOTcwYzU5YTcyM2M", "commit": {"author": {"name": "David Faust", "email": "david.faust@oracle.com", "date": "2021-12-13T20:53:26Z"}, "committer": {"name": "David Faust", "email": "david.faust@oracle.com", "date": "2021-12-13T22:34:45Z"}, "message": "Get rid of lambdas with AST::ArrayElemsValues\n\nThese constructs make working with the IR needlessly complicated for\nstatic analysis. Replace with simple for loops, and delete the old\nArrayElemsValues::iterate () method.\n\nFixes: #720", "tree": {"sha": "2249ba90aae150b0f17ad44179d35c34c2d7bc0e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2249ba90aae150b0f17ad44179d35c34c2d7bc0e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e43a784dc89030941b0cc43309541970c59a723c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e43a784dc89030941b0cc43309541970c59a723c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e43a784dc89030941b0cc43309541970c59a723c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e43a784dc89030941b0cc43309541970c59a723c/comments", "author": {"login": "dafaust", "id": 4460334, "node_id": "MDQ6VXNlcjQ0NjAzMzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/4460334?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dafaust", "html_url": "https://github.com/dafaust", "followers_url": "https://api.github.com/users/dafaust/followers", "following_url": "https://api.github.com/users/dafaust/following{/other_user}", "gists_url": "https://api.github.com/users/dafaust/gists{/gist_id}", "starred_url": "https://api.github.com/users/dafaust/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dafaust/subscriptions", "organizations_url": "https://api.github.com/users/dafaust/orgs", "repos_url": "https://api.github.com/users/dafaust/repos", "events_url": "https://api.github.com/users/dafaust/events{/privacy}", "received_events_url": "https://api.github.com/users/dafaust/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dafaust", "id": 4460334, "node_id": "MDQ6VXNlcjQ0NjAzMzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/4460334?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dafaust", "html_url": "https://github.com/dafaust", "followers_url": "https://api.github.com/users/dafaust/followers", "following_url": "https://api.github.com/users/dafaust/following{/other_user}", "gists_url": "https://api.github.com/users/dafaust/gists{/gist_id}", "starred_url": "https://api.github.com/users/dafaust/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dafaust/subscriptions", "organizations_url": "https://api.github.com/users/dafaust/orgs", "repos_url": "https://api.github.com/users/dafaust/repos", "events_url": "https://api.github.com/users/dafaust/events{/privacy}", "received_events_url": "https://api.github.com/users/dafaust/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0024bc2f028369b871a65ceb11b2fddfb0f9c3aa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0024bc2f028369b871a65ceb11b2fddfb0f9c3aa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0024bc2f028369b871a65ceb11b2fddfb0f9c3aa"}], "stats": {"total": 25, "additions": 7, "deletions": 18}, "files": [{"sha": "7f6714a736a1aa150c7add171ba49584d01a25cc", "filename": "gcc/rust/ast/rust-expr.h", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e43a784dc89030941b0cc43309541970c59a723c/gcc%2Frust%2Fast%2Frust-expr.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e43a784dc89030941b0cc43309541970c59a723c/gcc%2Frust%2Fast%2Frust-expr.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fast%2Frust-expr.h?ref=e43a784dc89030941b0cc43309541970c59a723c", "patch": "@@ -996,15 +996,6 @@ class ArrayElemsValues : public ArrayElems\n \n   size_t get_num_values () const { return values.size (); }\n \n-  void iterate (std::function<bool (Expr *)> cb)\n-  {\n-    for (auto it = values.begin (); it != values.end (); it++)\n-      {\n-\tif (!cb ((*it).get ()))\n-\t  return;\n-      }\n-  }\n-\n protected:\n   ArrayElemsValues *clone_array_elems_impl () const override\n   {"}, {"sha": "d6e21946d110482f983137fce8876421cf0418d6", "filename": "gcc/rust/hir/rust-ast-lower-expr.h", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e43a784dc89030941b0cc43309541970c59a723c/gcc%2Frust%2Fhir%2Frust-ast-lower-expr.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e43a784dc89030941b0cc43309541970c59a723c/gcc%2Frust%2Fhir%2Frust-ast-lower-expr.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fhir%2Frust-ast-lower-expr.h?ref=e43a784dc89030941b0cc43309541970c59a723c", "patch": "@@ -303,11 +303,11 @@ class ASTLoweringExpr : public ASTLoweringBase\n   void visit (AST::ArrayElemsValues &elems) override\n   {\n     std::vector<std::unique_ptr<HIR::Expr> > elements;\n-    elems.iterate ([&] (AST::Expr *elem) mutable -> bool {\n-      HIR::Expr *translated_elem = ASTLoweringExpr::translate (elem);\n-      elements.push_back (std::unique_ptr<HIR::Expr> (translated_elem));\n-      return true;\n-    });\n+    for (auto &elem : elems.get_values ())\n+      {\n+\tHIR::Expr *translated_elem = ASTLoweringExpr::translate (elem.get ());\n+\telements.push_back (std::unique_ptr<HIR::Expr> (translated_elem));\n+      }\n \n     translated_array_elems = new HIR::ArrayElemsValues (std::move (elements));\n   }"}, {"sha": "05d116f25393ff992a72b7ee1da244af430712dc", "filename": "gcc/rust/resolve/rust-ast-resolve-expr.h", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e43a784dc89030941b0cc43309541970c59a723c/gcc%2Frust%2Fresolve%2Frust-ast-resolve-expr.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e43a784dc89030941b0cc43309541970c59a723c/gcc%2Frust%2Fresolve%2Frust-ast-resolve-expr.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fresolve%2Frust-ast-resolve-expr.h?ref=e43a784dc89030941b0cc43309541970c59a723c", "patch": "@@ -224,10 +224,8 @@ class ResolveExpr : public ResolverBase\n \n   void visit (AST::ArrayElemsValues &elems) override\n   {\n-    elems.iterate ([&] (AST::Expr *elem) mutable -> bool {\n-      ResolveExpr::go (elem, elems.get_node_id ());\n-      return true;\n-    });\n+    for (auto &elem : elems.get_values ())\n+      ResolveExpr::go (elem.get (), elems.get_node_id ());\n   }\n \n   void visit (AST::ArrayExpr &expr) override"}]}