{"sha": "5344482c4d3ae0618fa8f5ed38f8309db43fdb82", "node_id": "C_kwDOANBUbNoAKDUzNDQ0ODJjNGQzYWUwNjE4ZmE4ZjVlZDM4ZjgzMDlkYjQzZmRiODI", "commit": {"author": {"name": "Alexandre Oliva", "email": "oliva@adacore.com", "date": "2023-02-22T17:35:36Z"}, "committer": {"name": "Alexandre Oliva", "email": "oliva@gnu.org", "date": "2023-02-22T17:38:17Z"}, "message": "testsuite: Skip module_cmi_p and related unsupported module test\n\nWhen a multi-source module is found to be unsupported, we fail\nmodule_cmi_p and subsequent sources.  Override proc unsupported to\nmark the result in module_do, and test it to skip module_cmp_p and\nsubsequent related tests.\n\n\nfor  gcc/testsuite/ChangeLog\n\n\t* g++.dg/modules/modules.exp: Override unsupported to update\n\tmodule_do, and test it after dg-test.", "tree": {"sha": "bb64a7ff28549df65447e9e1557f2f83922a1b98", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bb64a7ff28549df65447e9e1557f2f83922a1b98"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5344482c4d3ae0618fa8f5ed38f8309db43fdb82", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5344482c4d3ae0618fa8f5ed38f8309db43fdb82", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5344482c4d3ae0618fa8f5ed38f8309db43fdb82", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5344482c4d3ae0618fa8f5ed38f8309db43fdb82/comments", "author": null, "committer": null, "parents": [{"sha": "1a684dca0e812921a733e3ed7302977c7924b2ae", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1a684dca0e812921a733e3ed7302977c7924b2ae", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1a684dca0e812921a733e3ed7302977c7924b2ae"}], "stats": {"total": 17, "additions": 17, "deletions": 0}, "files": [{"sha": "e66b2082f2055c80b4040c18a7e0f90f19caf038", "filename": "gcc/testsuite/g++.dg/modules/modules.exp", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5344482c4d3ae0618fa8f5ed38f8309db43fdb82/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fmodules.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5344482c4d3ae0618fa8f5ed38f8309db43fdb82/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fmodules.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fmodules.exp?ref=5344482c4d3ae0618fa8f5ed38f8309db43fdb82", "patch": "@@ -315,6 +315,17 @@ proc module-check-requirements { tests } {\n # cleanup any detritus from previous run\n cleanup_module_files [find $DEFAULT_REPO *.gcm]\n \n+# Override unsupported to set the second element of module_do to \"N\",\n+# so that, after an unsupported result in dg-test, we can skip rather\n+# than fail subsequent related tests.\n+set module_do {\"compile\" \"P\"}\n+rename unsupported saved-unsupported\n+proc unsupported { args } {\n+    global module_do\n+    lset module_do 1 \"N\"\n+    return [saved-unsupported $args]\n+}\n+\n # not grouped tests, sadly tcl doesn't have negated glob\n foreach test [prune [lsort [find $srcdir/$subdir {*.[CH]}]] \\\n \t\t  \"$srcdir/$subdir/*_?.\\[CH\\]\"] {\n@@ -327,6 +338,9 @@ foreach test [prune [lsort [find $srcdir/$subdir {*.[CH]}]] \\\n \t    set module_cmis {}\n \t    verbose \"Testing $nshort $std\" 1\n \t    dg-test $test \"$std\" $DEFAULT_MODFLAGS\n+\t    if { [lindex $module_do 1] == \"N\" } {\n+\t\tcontinue\n+\t    }\n \t    set testcase [string range $test [string length \"$srcdir/\"] end]\n \t    cleanup_module_files [module_cmi_p $testcase $module_cmis]\n \t}\n@@ -372,6 +386,9 @@ foreach src [lsort [find $srcdir/$subdir {*_a.[CHX}]] {\n \t\t\t}\n \t\t    }\n \t\t    dg-test -keep-output $test \"$std\" $DEFAULT_MODFLAGS\n+\t\t    if { [lindex $module_do 1] == \"N\" } {\n+\t\t\tbreak\n+\t\t    }\n \t\t    set testcase [string range $test [string length \"$srcdir/\"] end]\n \t\t    lappend mod_files [module_cmi_p $testcase $module_cmis]\n \t\t}"}]}