{"sha": "9f774626c021c244be6f4c9589c9dac71d544b15", "node_id": "C_kwDOANBUbNoAKDlmNzc0NjI2YzAyMWMyNDRiZTZmNGM5NTg5YzlkYWM3MWQ1NDRiMTU", "commit": {"author": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2022-03-30T00:16:49Z"}, "committer": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2022-03-30T00:16:49Z"}, "message": "Daily bump.", "tree": {"sha": "63ede9db8077964ecfae6edc338cea947ff37571", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/63ede9db8077964ecfae6edc338cea947ff37571"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9f774626c021c244be6f4c9589c9dac71d544b15", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9f774626c021c244be6f4c9589c9dac71d544b15", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9f774626c021c244be6f4c9589c9dac71d544b15", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9f774626c021c244be6f4c9589c9dac71d544b15/comments", "author": null, "committer": null, "parents": [{"sha": "c788a0eae0a7144e6f148162512fa2e93a45a035", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c788a0eae0a7144e6f148162512fa2e93a45a035", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c788a0eae0a7144e6f148162512fa2e93a45a035"}], "stats": {"total": 396, "additions": 395, "deletions": 1}, "files": [{"sha": "5c545e5c186d5cff9dec0701e84c9670420bae88", "filename": "ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f774626c021c244be6f4c9589c9dac71d544b15/ChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f774626c021c244be6f4c9589c9dac71d544b15/ChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/ChangeLog?ref=9f774626c021c244be6f4c9589c9dac71d544b15", "patch": "@@ -1,3 +1,14 @@\n+2022-03-29  Chenghua Xu  <xuchenghua@loongson.cn>\n+\n+\t* MAINTAINERS: (CPU Port Maintainers): Add myself and\n+\tLulu as LoongArch port maintainer.\n+\n+2022-03-29  Chenghua Xu  <xuchenghua@loongson.cn>\n+\t    Lulu Cheng  <chenglulu@loongson.cn>\n+\n+\t* configure.ac: Add LoongArch tuples.\n+\t* configure: Regenerate.\n+\n 2022-03-28  Tom Tromey  <tromey@adacore.com>\n \n \t* configure.ac: Remove --with-mpfr-dir and --with-gmp-dir."}, {"sha": "abeeecdb94de8ba7663e1109814e342094f22329", "filename": "config/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f774626c021c244be6f4c9589c9dac71d544b15/config%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f774626c021c244be6f4c9589c9dac71d544b15/config%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/config%2FChangeLog?ref=9f774626c021c244be6f4c9589c9dac71d544b15", "patch": "@@ -1,3 +1,8 @@\n+2022-03-29  Chenghua Xu  <xuchenghua@loongson.cn>\n+\t    Lulu Cheng  <chenglulu@loongson.cn>\n+\n+\t* picflag.m4: Default add build option '-fpic' for LoongArch.\n+\n 2021-12-21  Iain Buclaw  <ibuclaw@gdcproject.org>\n \n \tPR d/103528"}, {"sha": "8820ec9a3bb7a1fa2d785ddb5a4de40e79b9b2d0", "filename": "contrib/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f774626c021c244be6f4c9589c9dac71d544b15/contrib%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f774626c021c244be6f4c9589c9dac71d544b15/contrib%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2FChangeLog?ref=9f774626c021c244be6f4c9589c9dac71d544b15", "patch": "@@ -1,3 +1,14 @@\n+2022-03-29  Chenghua Xu  <xuchenghua@loongson.cn>\n+\t    Lulu Cheng  <chenglulu@loongson.cn>\n+\n+\t* config-list.mk: Add LoongArch triplet.\n+\n+2022-03-29  Chenghua Xu  <xuchenghua@loongson.cn>\n+\t    Lulu Cheng  <chenglulu@loongson.cn>\n+\n+\t* gcc_update (files_and_dependencies): Add\n+\t  config/loongarch/loongarch.opt and config/loongarch/loongarch-str.h.\n+\n 2022-03-28  Martin Liska  <mliska@suse.cz>\n \n \t* gcc-changelog/git_commit.py: Match trailing dot literally."}, {"sha": "fd8498f9c48d4f0c1914506d3fb04b311b2ec4c8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 146, "deletions": 0, "changes": 146, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f774626c021c244be6f4c9589c9dac71d544b15/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f774626c021c244be6f4c9589c9dac71d544b15/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9f774626c021c244be6f4c9589c9dac71d544b15", "patch": "@@ -1,3 +1,149 @@\n+2022-03-29  Marek Polacek  <polacek@redhat.com>\n+\t    Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR middle-end/103597\n+\t* gimplify.cc (collect_fallthrough_labels): Don't push UNUSED_LABEL_Ps\n+\tinto labels.  Maybe set prev to the statement preceding UNUSED_LABEL_P.\n+\t(gimplify_cond_expr): Set UNUSED_LABEL_P.\n+\t* tree.h (UNUSED_LABEL_P): New.\n+\n+2022-03-29   Michael Meissner  <meissner@linux.ibm.com>\n+\n+\t* config/rs6000/vsx.md (vsx_extract_<mode>): Allow destination to\n+\tbe any VSX register.\n+\n+2022-03-29  Richard Earnshaw  <rearnsha@arm.com>\n+\n+\tPR target/102024\n+\t* config/aarch64/aarch64.cc (aapcs_vfp_sub_candidate): Handle\n+\tzero-sized bit-fields.  Detect cases where a warning may be needed.\n+\t(aarch64_vfp_is_call_or_return_candidate): Emit a note if a\n+\tzero-sized bit-field has caused parameter passing to change.\n+\n+2022-03-29  Richard Earnshaw  <rearnsha@arm.com>\n+\n+\tPR target/102024\n+\t* config/arm/arm.cc (aapcs_vfp_sub_candidate): Handle zero-sized\n+\tbit-fields.  Detect cases where a warning may be needed.\n+\t(aapcs_vfp_is_call_or_return_candidate): Emit a note if\n+\ta zero-sized bit-field has caused parameter passing to change.\n+\n+2022-03-29  Richard Earnshaw  <rearnsha@arm.com>\n+\n+\tPR target/96882\n+\t* config/arm/arm.cc (arm_get_pcs_model): Disable selection of\n+\tARM_PCS_AAPCS_LOCAL.\n+\n+2022-03-29  Tom de Vries  <tdevries@suse.de>\n+\n+\tPR target/104857\n+\t* config/nvptx/nvptx-c.cc (nvptx_cpu_cpp_builtins): Emit\n+\t__PTX_ISA_VERSION_MAJOR__ and __PTX_ISA_VERSION_MINOR__.\n+\t* config/nvptx/nvptx.cc (ptx_version_to_number): New function.\n+\t* config/nvptx/nvptx-protos.h (ptx_version_to_number): Declare.\n+\n+2022-03-29  Tom de Vries  <tdevries@suse.de>\n+\n+\t* config/nvptx/nvptx.opt (m64): Update help text to reflect that it\n+\tis ignored.\n+\n+2022-03-29  Tom de Vries  <tdevries@suse.de>\n+\n+\tPR target/104714\n+\t* config/nvptx/nvptx.opt (march-map=*): Add aliases.\n+\n+2022-03-29  Jan Hubicka  <hubicka@ucw.cz>\n+\n+\t* config/i386/i386-builtins.cc (ix86_vectorize_builtin_gather): Test\n+\tTARGET_USE_GATHER_2PARTS and TARGET_USE_GATHER_4PARTS.\n+\t* config/i386/i386.h (TARGET_USE_GATHER_2PARTS): New macro.\n+\t(TARGET_USE_GATHER_4PARTS): New macro.\n+\t* config/i386/x86-tune.def (X86_TUNE_USE_GATHER_2PARTS): New tune\n+\t(X86_TUNE_USE_GATHER_4PARTS): New tune\n+\n+2022-03-29  Tom de Vries  <tdevries@suse.de>\n+\n+\t* config/nvptx/nvptx.opt (march): Add alias of misa.\n+\n+2022-03-29  Chenghua Xu  <xuchenghua@loongson.cn>\n+\t    Lulu Cheng  <chenglulu@loongson.cn>\n+\n+\t* doc/install.texi: Add LoongArch options section.\n+\t* doc/invoke.texi: Add LoongArch options section.\n+\t* doc/md.texi: Add LoongArch options section.\n+\n+2022-03-29  Chenghua Xu  <xuchenghua@loongson.cn>\n+\t    Lulu Cheng  <chenglulu@loongson.cn>\n+\n+\t* config/loongarch/loongarch-c.cc\n+\n+2022-03-29  Chenghua Xu  <xuchenghua@loongson.cn>\n+\t    Lulu Cheng  <chenglulu@loongson.cn>\n+\n+\t* config/loongarch/larchintrin.h: New file.\n+\t* config/loongarch/loongarch-builtins.cc: New file.\n+\n+2022-03-29  Chenghua Xu  <xuchenghua@loongson.cn>\n+\t    Lulu Cheng  <chenglulu@loongson.cn>\n+\n+\t* config/host-linux.cc: Add LoongArch support.\n+\t* config/loongarch/loongarch-protos.h: New file.\n+\t* config/loongarch/loongarch-tune.h: Likewise.\n+\t* config/loongarch/loongarch.cc: Likewise.\n+\t* config/loongarch/loongarch.h: Likewise.\n+\n+2022-03-29  Chenghua Xu  <xuchenghua@loongson.cn>\n+\t    Lulu Cheng  <chenglulu@loongson.cn>\n+\n+\t* config/loongarch/constraints.md: New file.\n+\t* config/loongarch/generic.md: New file.\n+\t* config/loongarch/la464.md: New file.\n+\t* config/loongarch/loongarch-ftypes.def: New file.\n+\t* config/loongarch/loongarch-modes.def: New file.\n+\t* config/loongarch/loongarch.md: New file.\n+\t* config/loongarch/predicates.md: New file.\n+\t* config/loongarch/sync.md: New file.\n+\n+2022-03-29  Chenghua Xu  <xuchenghua@loongson.cn>\n+\t    Lulu Cheng  <chenglulu@loongson.cn>\n+\n+\t* configure: Regenerate file.\n+\n+2022-03-29  Chenghua Xu  <xuchenghua@loongson.cn>\n+\t    Lulu Cheng  <chenglulu@loongson.cn>\n+\n+\t* common/config/loongarch/loongarch-common.cc: New file.\n+\t* config/loongarch/genopts/genstr.sh: New file.\n+\t* config/loongarch/genopts/loongarch-strings: New file.\n+\t* config/loongarch/genopts/loongarch.opt.in: New file.\n+\t* config/loongarch/loongarch-str.h: New file.\n+\t* config/loongarch/gnu-user.h: New file.\n+\t* config/loongarch/linux.h: New file.\n+\t* config/loongarch/loongarch-cpu.cc: New file.\n+\t* config/loongarch/loongarch-cpu.h: New file.\n+\t* config/loongarch/loongarch-def.c: New file.\n+\t* config/loongarch/loongarch-def.h: New file.\n+\t* config/loongarch/loongarch-driver.cc: New file.\n+\t* config/loongarch/loongarch-driver.h: New file.\n+\t* config/loongarch/loongarch-opts.cc: New file.\n+\t* config/loongarch/loongarch-opts.h: New file.\n+\t* config/loongarch/loongarch.opt: New file.\n+\t* config/loongarch/t-linux: New file.\n+\t* config/loongarch/t-loongarch: New file.\n+\t* config.gcc: Add LoongArch support.\n+\t* configure.ac: Add LoongArch support.\n+\n+2022-03-29  Thomas Schwinge  <thomas@codesourcery.com>\n+\n+\t* opt-functions.awk (lang_enabled_by): Fix 'enabledby_negargs'\n+\ttypo.\n+\n+2022-03-29  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/105080\n+\t* tree-ssa-strlen.cc (printf_strlen_execute): Always init\n+\tloops and SCEV.\n+\n 2022-03-28  Indu Bhagat  <indu.bhagat@oracle.com>\n \n \t* ctfout.cc (ctf_preprocess): Use ctfc_get_num_ctf_vars instead."}, {"sha": "5ef3293bd94ec5a40586aeacccd0d41c72b55ed7", "filename": "gcc/DATESTAMP", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f774626c021c244be6f4c9589c9dac71d544b15/gcc%2FDATESTAMP", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f774626c021c244be6f4c9589c9dac71d544b15/gcc%2FDATESTAMP", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FDATESTAMP?ref=9f774626c021c244be6f4c9589c9dac71d544b15", "patch": "@@ -1 +1 @@\n-20220329\n+20220330"}, {"sha": "123e8cbd554a36e1a6ce2cde0d24dc6b7d28fc07", "filename": "gcc/analyzer/ChangeLog", "status": "modified", "additions": 52, "deletions": 0, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f774626c021c244be6f4c9589c9dac71d544b15/gcc%2Fanalyzer%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f774626c021c244be6f4c9589c9dac71d544b15/gcc%2Fanalyzer%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fanalyzer%2FChangeLog?ref=9f774626c021c244be6f4c9589c9dac71d544b15", "patch": "@@ -1,3 +1,55 @@\n+2022-03-29  David Malcolm  <dmalcolm@redhat.com>\n+\n+\tPR testsuite/105085\n+\t* region-model-manager.cc (dump_untracked_region): Skip decls in\n+\tthe constant pool.\n+\n+2022-03-29  David Malcolm  <dmalcolm@redhat.com>\n+\n+\tPR analyzer/105087\n+\t* analyzer.h (class conjured_purge): New forward decl.\n+\t* region-model-asm.cc (region_model::on_asm_stmt): Add\n+\tconjured_purge param to calls binding_cluster::on_asm and\n+\tregion_model_manager::get_or_create_conjured_svalue.\n+\t* region-model-impl-calls.cc\n+\t(call_details::get_or_create_conjured_svalue): Likewise for call\n+\tto region_model_manager::get_or_create_conjured_svalue.\n+\t(region_model::impl_call_fgets): Remove call to\n+\tregion_model::purge_state_involving, as this is now done\n+\timplicitly by call_details::get_or_create_conjured_svalue.\n+\t(region_model::impl_call_fread): Likewise.\n+\t(region_model::impl_call_strchr): Pass conjured_purge param to\n+\tcall to region_model_manager::get_or_create_conjured_svalue.\n+\t* region-model-manager.cc (conjured_purge::purge): New.\n+\t(region_model_manager::get_or_create_conjured_svalue): Add\n+\tparam \"p\".  Use it to purge state when reusing an existing\n+\tconjured_svalue.\n+\t* region-model.cc (region_model::on_call_pre): Replace call to\n+\tregion_model::purge_state_involving with passing conjured_purge\n+\tto region_model_manager::get_or_create_conjured_svalue.\n+\t(region_model::handle_unrecognized_call): Pass conjured_purge to\n+\tstore::on_unknown_fncall.\n+\t* region-model.h\n+\t(region_model_manager::get_or_create_conjured_svalue): Add param\n+\t\"p\".\n+\t* store.cc (binding_cluster::on_unknown_fncall): Likewise.  Pass\n+\tit on to region_model_manager::get_or_create_conjured_svalue.\n+\t(binding_cluster::on_asm): Likewise.\n+\t(store::on_unknown_fncall): Add param \"p\" and pass it on to\n+\tbinding_cluster::on_unknown_fncall.\n+\t* store.h (binding_cluster::on_unknown_fncall): Add param p.\n+\t(binding_cluster::on_asm): Likewise.\n+\t(store::on_unknown_fncall): Likewise.\n+\t* svalue.h (class conjured_purge): New.\n+\n+2022-03-29  David Malcolm  <dmalcolm@redhat.com>\n+\n+\tPR analyzer/105074\n+\t* region.cc (ipa_ref_requires_tracking): Drop \"context_fndecl\",\n+\tinstead using the ref->referring to get the cgraph node of the\n+\tcaller.\n+\t(symnode_requires_tracking_p): Likewise.\n+\n 2022-03-26  David Malcolm  <dmalcolm@redhat.com>\n \n \tPR analyzer/105057"}, {"sha": "0e05013d94a22ec5a16e5b7d82a94a9628667f67", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f774626c021c244be6f4c9589c9dac71d544b15/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f774626c021c244be6f4c9589c9dac71d544b15/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=9f774626c021c244be6f4c9589c9dac71d544b15", "patch": "@@ -1,3 +1,16 @@\n+2022-03-29  Harald Anlauf  <anlauf@gmx.de>\n+\t    Steven G. Kargl  <kargl@gcc.gnu.org>\n+\n+\tPR fortran/104571\n+\t* resolve.cc (resolve_elemental_actual): Avoid NULL pointer\n+\tdereference.\n+\n+2022-03-29  Harald Anlauf  <anlauf@gmx.de>\n+\n+\tPR fortran/50549\n+\t* resolve.cc (resolve_structure_cons): Reject pointer assignments\n+\tof character with different lengths in structure constructor.\n+\n 2022-03-25  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR fortran/103691"}, {"sha": "4d1997b2d044ab1ea49f345865786311831865ed", "filename": "gcc/po/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f774626c021c244be6f4c9589c9dac71d544b15/gcc%2Fpo%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f774626c021c244be6f4c9589c9dac71d544b15/gcc%2Fpo%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpo%2FChangeLog?ref=9f774626c021c244be6f4c9589c9dac71d544b15", "patch": "@@ -1,3 +1,7 @@\n+2022-03-29  Joseph Myers  <joseph@codesourcery.com>\n+\n+\t* hr.po: Update.\n+\n 2022-03-28  Joseph Myers  <joseph@codesourcery.com>\n \n \t* sv.po: Update."}, {"sha": "f3335e7254c5d42de6cdb7f79268597ddc111b42", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 112, "deletions": 0, "changes": 112, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f774626c021c244be6f4c9589c9dac71d544b15/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f774626c021c244be6f4c9589c9dac71d544b15/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=9f774626c021c244be6f4c9589c9dac71d544b15", "patch": "@@ -1,3 +1,115 @@\n+2022-03-29  David Malcolm  <dmalcolm@redhat.com>\n+\n+\tPR testsuite/105085\n+\t* gcc.dg/analyzer/untracked-1.c: Add further test coverage.\n+\n+2022-03-29  Harald Anlauf  <anlauf@gmx.de>\n+\t    Steven G. Kargl  <kargl@gcc.gnu.org>\n+\n+\tPR fortran/104571\n+\t* gfortran.dg/pr104571.f90: New test.\n+\n+2022-03-29  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* lib/g++-dg.exp: Update comments.\n+\t* lib/g++.exp (gpp_std_list): Check for an existing value before\n+\tsetting it to an empty list.\n+\n+2022-03-29  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* g++.dg/cpp0x/noexcept06.C: Disable for C++23.\n+\n+2022-03-29  Harald Anlauf  <anlauf@gmx.de>\n+\n+\tPR fortran/50549\n+\t* gfortran.dg/char_pointer_assign_7.f90: New test.\n+\n+2022-03-29  Marek Polacek  <polacek@redhat.com>\n+\t    Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR middle-end/103597\n+\t* c-c++-common/Wimplicit-fallthrough-39.c: New test.\n+\n+2022-03-29  Patrick Palka  <ppalka@redhat.com>\n+\n+\tPR c++/71637\n+\t* c-c++-common/Wmisleading-indentation-6.c: New test.\n+\n+2022-03-29  Richard Earnshaw  <rearnsha@arm.com>\n+\n+\t* gcc.target/aarch64/aapcs64/test_28.c: New test.\n+\n+2022-03-29  Richard Earnshaw  <rearnsha@arm.com>\n+\n+\tPR target/102024\n+\t* gcc.target/arm/aapcs/vfp26.c: New test.\n+\n+2022-03-29  Tom de Vries  <tdevries@suse.de>\n+\n+\tPR target/104857\n+\t* gcc.target/nvptx/ptx31.c: New test.\n+\t* gcc.target/nvptx/ptx60.c: New test.\n+\t* gcc.target/nvptx/ptx63.c: New test.\n+\t* gcc.target/nvptx/ptx70.c: New test.\n+\n+2022-03-29  Tom de Vries  <tdevries@suse.de>\n+\n+\tPR target/104714\n+\t* gcc.target/nvptx/march-map.c: New test.\n+\n+2022-03-29  Tom de Vries  <tdevries@suse.de>\n+\n+\t* gcc.target/nvptx/main.c: New test.\n+\t* gcc.target/nvptx/march.c: New test.\n+\n+2022-03-29  Chenghua Xu  <xuchenghua@loongson.cn>\n+\t    Lulu Cheng  <chenglulu@loongson.cn>\n+\n+\t* g++.dg/cpp0x/constexpr-rom.C: Add build options for LoongArch.\n+\t* g++.old-deja/g++.abi/ptrmem.C: Add LoongArch support.\n+\t* g++.old-deja/g++.pt/ptrmem6.C: xfail for LoongArch.\n+\t* gcc.dg/20020312-2.c: Add LoongArch support.\n+\t* c-c++-common/zero-scratch-regs-10.c: Like wise\n+\t* c-c++-common/zero-scratch-regs-11.c: Like wise\n+\t* c-c++-common/zero-scratch-regs-8.c: Like wise\n+\t* c-c++-common/zero-scratch-regs-9.c: Like wise\n+\t* gcc.dg/loop-8.c: Skip on LoongArch.\n+\t* gcc.dg/torture/stackalign/builtin-apply-2.c: Likewise.\n+\t* gcc.dg/tree-ssa/ssa-fre-3.c: Likewise.\n+\t* go.test/go-test.exp: Define the LoongArch target.\n+\t* lib/target-supports.exp: Like wise.\n+\t* gcc.target/loongarch/loongarch.exp: New file.\n+\t* gcc.target/loongarch/tst-asm-const.c: Like wise.\n+\t* gcc.target/loongarch/larch-builtin.c: Like wise.\n+\n+2022-03-29  Marc Poulhi\u00e8s  <poulhies@adacore.com>\n+\n+\t* gcc.target/i386/pr103275.c: Add missing\n+\tdg-require-effective-target for checking fpic.\n+\n+2022-03-29  Marc Poulhi\u00e8s  <poulhies@adacore.com>\n+\n+\t* gcc.target/i386/pr97521.c: Add -Wno-psabi to dg-options.\n+\t* gcc.dg/analyzer/pr96713.c: Likewise.\n+\n+2022-03-29  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/105080\n+\t* gcc.dg/pr105080.c: New testcase.\n+\n+2022-03-29  David Malcolm  <dmalcolm@redhat.com>\n+\n+\t* gcc.dg/analyzer/pr105087-1.c: New test.\n+\t* gcc.dg/analyzer/pr105087-2.c: New test.\n+\t* gcc.dg/analyzer/vasprintf-1.c: New test.\n+\n+2022-03-29  David Malcolm  <dmalcolm@redhat.com>\n+\n+\tPR analyzer/105074\n+\t* gcc.dg/analyzer/pr105074.c: New test.\n+\t* gcc.dg/analyzer/untracked-1.c (extern_fn_char_ptr): New decl.\n+\t(test_13): New.\n+\n 2022-03-28  Patrick Palka  <ppalka@redhat.com>\n \n \tPR c++/105067"}, {"sha": "8b2b9f4c191010af26e09cdc360b4ba72f78fdae", "filename": "libgcc/ChangeLog", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f774626c021c244be6f4c9589c9dac71d544b15/libgcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f774626c021c244be6f4c9589c9dac71d544b15/libgcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2FChangeLog?ref=9f774626c021c244be6f4c9589c9dac71d544b15", "patch": "@@ -1,3 +1,21 @@\n+2022-03-29  Chenghua Xu  <xuchenghua@loongson.cn>\n+\t    Lulu Cheng  <chenglulu@loongson.cn>\n+\n+\t* configure: Regenerate file.\n+\n+2022-03-29  Chenghua Xu  <xuchenghua@loongson.cn>\n+\t    Lulu Cheng  <chenglulu@loongson.cn>\n+\n+\t* config/loongarch/crtfastmath.c: New file.\n+\t* config/loongarch/linux-unwind.h: Like wise.\n+\t* config/loongarch/sfp-machine.h: Like wise.\n+\t* config/loongarch/t-crtstuff: Like wise.\n+\t* config/loongarch/t-loongarch: Like wise.\n+\t* config/loongarch/t-loongarch64: Like wise.\n+\t* config/loongarch/t-softfp-tf: Like wise.\n+\t* config.host: Add LoongArch tuples.\n+\t* configure.ac: Add LoongArch support.\n+\n 2022-03-19  Sergei Trofimovich  <slyfox at gentoo dot org>\n \n \tPR libgcc/86224"}, {"sha": "d63ef50118a980f8b6e533de5c84c9990d819171", "filename": "libgomp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f774626c021c244be6f4c9589c9dac71d544b15/libgomp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f774626c021c244be6f4c9589c9dac71d544b15/libgomp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2FChangeLog?ref=9f774626c021c244be6f4c9589c9dac71d544b15", "patch": "@@ -1,3 +1,8 @@\n+2022-03-29  Chenghua Xu  <xuchenghua@loongson.cn>\n+\t    Lulu Cheng  <chenglulu@loongson.cn>\n+\n+\t* configure.tgt: Add LoongArch triplet.\n+\n 2022-03-28  Tom de Vries  <tdevries@suse.de>\n \n \t* plugin/configfrag.ac: Use /$(libexecdir:\\$(exec_prefix)/%=%)/"}, {"sha": "e40b4f334a9d534aba8a99883913a84155f9d29c", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f774626c021c244be6f4c9589c9dac71d544b15/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f774626c021c244be6f4c9589c9dac71d544b15/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=9f774626c021c244be6f4c9589c9dac71d544b15", "patch": "@@ -1,3 +1,20 @@\n+2022-03-29  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* testsuite/18_support/exception/38732.cc: Disable for C++23.\n+\t* testsuite/18_support/headers/exception/synopsis.cc: Likewise.\n+\t* testsuite/18_support/unexpected_handler.cc: Likewise.\n+\n+2022-03-29  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* libsupc++/compare (_Strong_order) [!__cpp_using_enum]: Add\n+\tstatic data members for _Fp_fmt enumerators.\n+\n+2022-03-29  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* include/std/version (__cpp_lib_variant): Fix conditions to\n+\tmatch <variant>.\n+\t(__cpp_lib_expected): Fix condition to match <expected>.\n+\n 2022-03-28  Jonathan Wakely  <jwakely@redhat.com>\n \n \t* testsuite/20_util/optional/monadic/and_then.cc: Fix typo."}]}