{"sha": "eb0d08adb60fc39d59f8de378074b751a18cd184", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWIwZDA4YWRiNjBmYzM5ZDU5ZjhkZTM3ODA3NGI3NTFhMThjZDE4NA==", "commit": {"author": {"name": "Steve Baird", "email": "baird@adacore.com", "date": "2020-10-13T19:23:11Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2020-11-25T13:22:34Z"}, "message": "[Ada] Don't constant-fold renamed qualified expressions\n\ngcc/ada/\n\n\t* exp_ch2.adb (Expand_Entity_Reference): A new local predicate\n\tIs_Object_Renaming_Name indicates whether a given expression\n\toccurs (after looking through qualified expressions and type\n\tconversions) as the name of an object renaming declaration. If\n\tCurrent_Value is available but this new predicate is True, then\n\tignore the availability of Current_Value.", "tree": {"sha": "ece038e8dfcb3de588c1ddac3cd8dda49de2f7f6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ece038e8dfcb3de588c1ddac3cd8dda49de2f7f6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/eb0d08adb60fc39d59f8de378074b751a18cd184", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eb0d08adb60fc39d59f8de378074b751a18cd184", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eb0d08adb60fc39d59f8de378074b751a18cd184", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eb0d08adb60fc39d59f8de378074b751a18cd184/comments", "author": {"login": "swbaird", "id": 50751052, "node_id": "MDQ6VXNlcjUwNzUxMDUy", "avatar_url": "https://avatars.githubusercontent.com/u/50751052?v=4", "gravatar_id": "", "url": "https://api.github.com/users/swbaird", "html_url": "https://github.com/swbaird", "followers_url": "https://api.github.com/users/swbaird/followers", "following_url": "https://api.github.com/users/swbaird/following{/other_user}", "gists_url": "https://api.github.com/users/swbaird/gists{/gist_id}", "starred_url": "https://api.github.com/users/swbaird/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/swbaird/subscriptions", "organizations_url": "https://api.github.com/users/swbaird/orgs", "repos_url": "https://api.github.com/users/swbaird/repos", "events_url": "https://api.github.com/users/swbaird/events{/privacy}", "received_events_url": "https://api.github.com/users/swbaird/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2d80df423310f1c40a3a661d5587261ee9151288", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2d80df423310f1c40a3a661d5587261ee9151288", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2d80df423310f1c40a3a661d5587261ee9151288"}], "stats": {"total": 44, "additions": 43, "deletions": 1}, "files": [{"sha": "6c41e08e9adf94454a4fa3c9dccbfccbdf818dfb", "filename": "gcc/ada/exp_ch2.adb", "status": "modified", "additions": 43, "deletions": 1, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb0d08adb60fc39d59f8de378074b751a18cd184/gcc%2Fada%2Fexp_ch2.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb0d08adb60fc39d59f8de378074b751a18cd184/gcc%2Fada%2Fexp_ch2.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch2.adb?ref=eb0d08adb60fc39d59f8de378074b751a18cd184", "patch": "@@ -338,8 +338,43 @@ package body Exp_Ch2 is\n    -----------------------------\n \n    procedure Expand_Entity_Reference (N : Node_Id) is\n+\n+      function Is_Object_Renaming_Name (N : Node_Id) return Boolean;\n+      --  Indicates that N occurs (after accounting for qualified expressions\n+      --  and type conversions) as the name of an object renaming declaration.\n+      --  We don't want to fold values in that case.\n+\n+      -----------------------------\n+      -- Is_Object_Renaming_Name --\n+      -----------------------------\n+\n+      function Is_Object_Renaming_Name (N : Node_Id) return Boolean is\n+         Trailer : Node_Id := N;\n+         Rover   : Node_Id;\n+      begin\n+         loop\n+            Rover := Parent (Trailer);\n+            case Nkind (Rover) is\n+               when N_Qualified_Expression | N_Type_Conversion =>\n+                  --  Conservative for type conversions; only necessary if\n+                  --  conversion does not introduce a new object (as opposed\n+                  --  to a new view of an existing object).\n+                  null;\n+               when N_Object_Renaming_Declaration =>\n+                  return Trailer = Name (Rover);\n+               when others =>\n+                  return False; -- the usual case\n+            end case;\n+            Trailer := Rover;\n+         end loop;\n+      end Is_Object_Renaming_Name;\n+\n+      --  Local variables\n+\n       E : constant Entity_Id := Entity (N);\n \n+   --  Start of processing for Expand_Entity_Reference\n+\n    begin\n       --  Defend against errors\n \n@@ -441,10 +476,17 @@ package body Exp_Ch2 is\n          end;\n       end if;\n \n-      --  Interpret possible Current_Value for variable case\n+      --  Interpret possible Current_Value for variable case. The\n+      --  Is_Object_Renaming_Name test is needed for cases such as\n+      --    X : Integer := 1;\n+      --    Y : Integer renames Integer'(X);\n+      --  where the value of Y is changed by any subsequent assignments to X.\n+      --  In cases like this, we do not want to use Current_Value even though\n+      --  it is available.\n \n       if Is_Assignable (E)\n         and then Present (Current_Value (E))\n+        and then not Is_Object_Renaming_Name (N)\n       then\n          Expand_Current_Value (N);\n "}]}