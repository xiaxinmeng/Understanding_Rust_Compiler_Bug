{"sha": "c4bb110a19d441dbaef58fe4215bda6537e5c8a4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzRiYjExMGExOWQ0NDFkYmFlZjU4ZmU0MjE1YmRhNjUzN2U1YzhhNA==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2003-09-08T16:54:13Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2003-09-08T16:54:13Z"}, "message": "* optimize.c (maybe_clone_body): Inc/dec function_depth.\n\nFrom-SVN: r71210", "tree": {"sha": "2a429372d91b62de9e98aba3487e9646fdd7a88c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2a429372d91b62de9e98aba3487e9646fdd7a88c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c4bb110a19d441dbaef58fe4215bda6537e5c8a4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c4bb110a19d441dbaef58fe4215bda6537e5c8a4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c4bb110a19d441dbaef58fe4215bda6537e5c8a4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c4bb110a19d441dbaef58fe4215bda6537e5c8a4/comments", "author": null, "committer": null, "parents": [{"sha": "f23fb7f5252c3cb2f551d66c0887e2232f10736d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f23fb7f5252c3cb2f551d66c0887e2232f10736d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f23fb7f5252c3cb2f551d66c0887e2232f10736d"}], "stats": {"total": 11, "additions": 11, "deletions": 0}, "files": [{"sha": "13a5c55a718a4c0a1b49bc253d3806f0ff46491f", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c4bb110a19d441dbaef58fe4215bda6537e5c8a4/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c4bb110a19d441dbaef58fe4215bda6537e5c8a4/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=c4bb110a19d441dbaef58fe4215bda6537e5c8a4", "patch": "@@ -4,6 +4,10 @@\n \t* pt.c (try_one_overload): Add addr_p parameter.\n \t(resolve_overloaded_unification): Pass it.\n \n+2003-09-08  Richard Henderson  <rth@redhat.com>\n+\n+\t* optimize.c (maybe_clone_body): Inc/dec function_depth.\n+\n 2003-09-08  Richard Henderson  <rth@redhat.com>\n \n \t* decl.c (finish_function): Clear current_function_decl."}, {"sha": "3204311ea7de65b439d1301fc80c0a7cde159df7", "filename": "gcc/cp/optimize.c", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c4bb110a19d441dbaef58fe4215bda6537e5c8a4/gcc%2Fcp%2Foptimize.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c4bb110a19d441dbaef58fe4215bda6537e5c8a4/gcc%2Fcp%2Foptimize.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Foptimize.c?ref=c4bb110a19d441dbaef58fe4215bda6537e5c8a4", "patch": "@@ -130,6 +130,11 @@ maybe_clone_body (tree fn)\n   /* Emit the DWARF1 abstract instance.  */\n   (*debug_hooks->deferred_inline_function) (fn);\n \n+  /* Our caller does not expect collection to happen, which it might if\n+     we decide to compile the function to rtl now.  Arrange for a new\n+     gc context to be created if so.  */\n+  function_depth++;\n+\n   /* We know that any clones immediately follow FN in the TYPE_METHODS\n      list.  */\n   for (clone = TREE_CHAIN (fn);\n@@ -253,6 +258,8 @@ maybe_clone_body (tree fn)\n       pop_from_top_level ();\n     }\n \n+  function_depth--;\n+\n   /* We don't need to process the original function any further.  */\n   return 1;\n }"}]}