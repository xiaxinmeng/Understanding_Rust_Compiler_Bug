{"sha": "0ce483917ffb79cf25d633e2dbe01a678437133e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGNlNDgzOTE3ZmZiNzljZjI1ZDYzM2UyZGJlMDFhNjc4NDM3MTMzZQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2016-09-05T19:43:57Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2016-09-05T19:43:57Z"}, "message": "re PR sanitizer/77396 (address  sanitizer crashes if all static global variables are optimized)\n\n\tPR sanitizer/77396\n\t* asan/asan_globals.cc: Cherry-pick upstream r280657.\n\n\t* g++.dg/asan/pr77396-2.C: New test.\n\nFrom-SVN: r239998", "tree": {"sha": "543c12b0c1fc2db620795f0c07b36ef33ac08998", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/543c12b0c1fc2db620795f0c07b36ef33ac08998"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0ce483917ffb79cf25d633e2dbe01a678437133e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0ce483917ffb79cf25d633e2dbe01a678437133e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0ce483917ffb79cf25d633e2dbe01a678437133e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0ce483917ffb79cf25d633e2dbe01a678437133e/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "3f8257db2ecfb4eaaf895d2a92d1f499fcfa688f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3f8257db2ecfb4eaaf895d2a92d1f499fcfa688f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3f8257db2ecfb4eaaf895d2a92d1f499fcfa688f"}], "stats": {"total": 29, "additions": 26, "deletions": 3}, "files": [{"sha": "d7640245e26c547110ddd71e58b7583b3d354684", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ce483917ffb79cf25d633e2dbe01a678437133e/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ce483917ffb79cf25d633e2dbe01a678437133e/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=0ce483917ffb79cf25d633e2dbe01a678437133e", "patch": "@@ -1,3 +1,8 @@\n+2016-09-05  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR sanitizer/77396\n+\t* g++.dg/asan/pr77396-2.C: New test.\n+\n 2016-09-05  Uros Bizjak  <ubizjak@gmail.com>\n \n \tPR rtl-optimization/77452"}, {"sha": "0570a14940eda034bf262b2fd97da22288d39f6b", "filename": "gcc/testsuite/g++.dg/asan/pr77396-2.C", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ce483917ffb79cf25d633e2dbe01a678437133e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fasan%2Fpr77396-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ce483917ffb79cf25d633e2dbe01a678437133e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fasan%2Fpr77396-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fasan%2Fpr77396-2.C?ref=0ce483917ffb79cf25d633e2dbe01a678437133e", "patch": "@@ -0,0 +1,12 @@\n+// PR sanitizer/77396\n+// { dg-do run }\n+// { dg-set-target-env-var ASAN_OPTIONS \"check_initialization_order=true\" }\n+\n+struct S { S () { asm volatile (\"\" : : : \"memory\"); } };\n+static S c;\n+\n+int\n+main ()\n+{\n+  return 0;\n+}"}, {"sha": "a06ab4de7e75f6fd59a7af3d7937337213318029", "filename": "libsanitizer/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ce483917ffb79cf25d633e2dbe01a678437133e/libsanitizer%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ce483917ffb79cf25d633e2dbe01a678437133e/libsanitizer%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libsanitizer%2FChangeLog?ref=0ce483917ffb79cf25d633e2dbe01a678437133e", "patch": "@@ -1,3 +1,8 @@\n+2016-09-05  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR sanitizer/77396\n+\t* asan/asan_globals.cc: Cherry-pick upstream r280657.\n+\n 2016-08-12  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR sanitizer/71042"}, {"sha": "f3531cbd1339fadf2cfffc4432f01e4c399af913", "filename": "libsanitizer/asan/asan_globals.cc", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ce483917ffb79cf25d633e2dbe01a678437133e/libsanitizer%2Fasan%2Fasan_globals.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ce483917ffb79cf25d633e2dbe01a678437133e/libsanitizer%2Fasan%2Fasan_globals.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libsanitizer%2Fasan%2Fasan_globals.cc?ref=0ce483917ffb79cf25d633e2dbe01a678437133e", "patch": "@@ -248,10 +248,10 @@ void __asan_unregister_globals(__asan_global *globals, uptr n) {\n // initializer can only touch global variables in the same TU.\n void __asan_before_dynamic_init(const char *module_name) {\n   if (!flags()->check_initialization_order ||\n-      !CanPoisonMemory())\n+      !CanPoisonMemory() ||\n+      !dynamic_init_globals)\n     return;\n   bool strict_init_order = flags()->strict_init_order;\n-  CHECK(dynamic_init_globals);\n   CHECK(module_name);\n   CHECK(asan_inited);\n   BlockingMutexLock lock(&mu_for_globals);\n@@ -274,7 +274,8 @@ void __asan_before_dynamic_init(const char *module_name) {\n // TU are poisoned.  It simply unpoisons all dynamically initialized globals.\n void __asan_after_dynamic_init() {\n   if (!flags()->check_initialization_order ||\n-      !CanPoisonMemory())\n+      !CanPoisonMemory() ||\n+      !dynamic_init_globals)\n     return;\n   CHECK(asan_inited);\n   BlockingMutexLock lock(&mu_for_globals);"}]}