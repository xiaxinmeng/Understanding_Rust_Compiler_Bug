{"sha": "17c6c56b906d99b45dc5eefa5d39435188235051", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTdjNmM1NmI5MDZkOTliNDVkYzVlZWZhNWQzOTQzNTE4ODIzNTA1MQ==", "commit": {"author": {"name": "Ryan Burn", "email": "contact@rnburn.com", "date": "2015-12-07T21:45:13Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2015-12-07T21:45:13Z"}, "message": "re PR c++/68683 ([concepts] function satisfy_argument_deduction_constraint modifies a type tree node but leaves TYPE_CANONICAL unchanged)\n\n\tPR c++/68683\n\t* constraint.cc (satisfy_argument_deduction_constraint): Set\n\tTYPE_CANONICAL to NULL_TREE if PLACEHOLDER_TYPE_CONSTRAINTS are\n\tchanged.\n\nFrom-SVN: r231385", "tree": {"sha": "e0ef45fd2c4e7514278542421bdec3eb0710bfc2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e0ef45fd2c4e7514278542421bdec3eb0710bfc2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/17c6c56b906d99b45dc5eefa5d39435188235051", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/17c6c56b906d99b45dc5eefa5d39435188235051", "html_url": "https://github.com/Rust-GCC/gccrs/commit/17c6c56b906d99b45dc5eefa5d39435188235051", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/17c6c56b906d99b45dc5eefa5d39435188235051/comments", "author": null, "committer": null, "parents": [{"sha": "0be72a6b4bc5d9de78d03d761ad9fdf0c1fa744d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0be72a6b4bc5d9de78d03d761ad9fdf0c1fa744d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0be72a6b4bc5d9de78d03d761ad9fdf0c1fa744d"}], "stats": {"total": 34, "additions": 34, "deletions": 0}, "files": [{"sha": "6b007e2aea3700e3c183a791dc9d1e7e8cabb992", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/17c6c56b906d99b45dc5eefa5d39435188235051/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/17c6c56b906d99b45dc5eefa5d39435188235051/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=17c6c56b906d99b45dc5eefa5d39435188235051", "patch": "@@ -1,3 +1,10 @@\n+2015-12-07  Ryan Burn  <contact@rnburn.com>\n+\n+\tPR c++/68683\n+\t* constraint.cc (satisfy_argument_deduction_constraint): Set\n+\tTYPE_CANONICAL to NULL_TREE if PLACEHOLDER_TYPE_CONSTRAINTS are\n+\tchanged.\n+\n 2015-12-07  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/68464"}, {"sha": "426d8f3f48b4747678f0b77c8d75dbe5e5b9b316", "filename": "gcc/cp/constraint.cc", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/17c6c56b906d99b45dc5eefa5d39435188235051/gcc%2Fcp%2Fconstraint.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/17c6c56b906d99b45dc5eefa5d39435188235051/gcc%2Fcp%2Fconstraint.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fconstraint.cc?ref=17c6c56b906d99b45dc5eefa5d39435188235051", "patch": "@@ -1871,11 +1871,14 @@ satisfy_argument_deduction_constraint (tree t, tree args,\n   tree pattern = DEDUCT_CONSTR_PATTERN (t);\n   tree placeholder = DEDUCT_CONSTR_PLACEHOLDER (t);\n   tree constr = PLACEHOLDER_TYPE_CONSTRAINTS (placeholder);\n+  tree type_canonical = TYPE_CANONICAL (placeholder);\n   PLACEHOLDER_TYPE_CONSTRAINTS (placeholder)\n     = tsubst_constraint (constr, args, complain|tf_partial, in_decl);\n+  TYPE_CANONICAL (placeholder) = NULL_TREE;\n   tree type = do_auto_deduction (pattern, init, placeholder,\n                                  complain, adc_requirement);\n   PLACEHOLDER_TYPE_CONSTRAINTS (placeholder) = constr;\n+  TYPE_CANONICAL (placeholder) = type_canonical;\n   if (type == error_mark_node)\n     return boolean_false_node;\n "}, {"sha": "a0d8fcf46b01768693f8f1285c001b1d9587c29f", "filename": "gcc/testsuite/g++.dg/concepts/pr68683.C", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/17c6c56b906d99b45dc5eefa5d39435188235051/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fpr68683.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/17c6c56b906d99b45dc5eefa5d39435188235051/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fpr68683.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fpr68683.C?ref=17c6c56b906d99b45dc5eefa5d39435188235051", "patch": "@@ -0,0 +1,24 @@\n+// { dg-options \"-std=c++1z\" }\n+\n+template <typename, typename>\n+struct is_same {\n+  static constexpr bool value = true;\n+};\n+\n+template <typename T, typename U>\n+concept bool Same = is_same<T, U>::value;\n+\n+template <typename T>\n+concept bool Integral = requires {\n+  { T () } -> Same<typename T::value_type>;\n+};\n+\n+struct A {\n+  using value_type = bool;\n+};\n+\n+int main () {\n+  Integral<A>;\n+  Integral<A>;\n+  return 0;\n+}"}]}