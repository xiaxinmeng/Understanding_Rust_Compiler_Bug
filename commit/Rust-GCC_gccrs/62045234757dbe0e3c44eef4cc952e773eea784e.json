{"sha": "62045234757dbe0e3c44eef4cc952e773eea784e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjIwNDUyMzQ3NTdkYmUwZTNjNDRlZWY0Y2M5NTJlNzczZWVhNzg0ZQ==", "commit": {"author": {"name": "Alan Modra", "email": "amodra@gmail.com", "date": "2018-11-27T00:06:45Z"}, "committer": {"name": "Alan Modra", "email": "amodra@gcc.gnu.org", "date": "2018-11-27T00:06:45Z"}, "message": "[RS6000] rs6000/sysv4.h using gnu-user.h\n\nThis patch removes some duplication in rs6000/sysv4.h of macros found\nin gnu-user.h that we want for linux.  Including gnu-user.h will mean\npowerpc doesn't miss updates to that file.\n\n\t* config.gcc (powerpc*-*-freebsd*, powerpc-*-netbsd*),\n\t(powerpc-*-eabisimaltivec*, powerpc-*-eabisim*, powerpc-*-elf*),\n\t(powerpc-*-eabialtivec*, powerpc-*-eabi*, powerpc-*-rtems*),\n\t(powerpc-wrs-vxworks*, powerpc-*-lynxos*, powerpcle-*-elf*),\n\t(powerpcle-*-eabisim*, powerpcle-*-eabi*): Add gnu-user.h to tm_file.\n\t* config/rs6000/freebsd.h (CPLUSPLUS_CPP_SPEC),\n\t(LINK_GCC_C_SEQUENCE_SPEC): Undef.\n\t(ASM_APP_ON, ASM_APP_OFF): Don't define.\n\t* config/rs6000/freebsd64.h (ASM_APP_ON, ASM_APP_OFF): Don't define.\n\t* config/rs6000/lynx.h (ASM_APP_ON, ASM_APP_OFF): Don't define.\n\t* config/rs6000/linux64.h (LINK_GCC_C_SEQUENCE_SPEC): Define.\n\t* config/rs6000/netbsd.h (CPLUSPLUS_CPP_SPEC),\n\t(LINK_GCC_C_SEQUENCE_SPEC): Undef.\n\t* config/rs6000/rtems.h (LINK_GCC_C_SEQUENCE_SPEC): Define.\n\t* config/rs6000/sysv4.h (GNU_USER_TARGET_CRTI): Redefine.\n\t(GNU_USER_TARGET_CRTN): Redefine.\n\t(CC1_SPEC): Use GNU_USER_TARGET_CC1_SPEC.\n\t(LIB_LINUX_SPEC): Use GNU_USER_TARGET_LIB_SPEC.\n\t(CRTOFFLOADBEGIN, CRTOFFLOADEND): Don't define.\n\t(STARTFILE_LINUX_SPEC): Define as GNU_USER_TARGET_STARTFILE_SPEC.\n\t(ENDFILE_LINUX_SPEC): Define as GNU_USER_TARGET_ENDFILE_SPEC.\n\t(UCLIBC_DYNAMIC_LINKER, CHOOSE_DYNAMIC_LINKER): Don't define.\n\t(LINK_EH_SPEC): Don't define.\n\nFrom-SVN: r266496", "tree": {"sha": "a3820663db471d9826f27103356180dae34c6613", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a3820663db471d9826f27103356180dae34c6613"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/62045234757dbe0e3c44eef4cc952e773eea784e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/62045234757dbe0e3c44eef4cc952e773eea784e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/62045234757dbe0e3c44eef4cc952e773eea784e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/62045234757dbe0e3c44eef4cc952e773eea784e/comments", "author": {"login": "amodra", "id": 6006325, "node_id": "MDQ6VXNlcjYwMDYzMjU=", "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amodra", "html_url": "https://github.com/amodra", "followers_url": "https://api.github.com/users/amodra/followers", "following_url": "https://api.github.com/users/amodra/following{/other_user}", "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}", "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amodra/subscriptions", "organizations_url": "https://api.github.com/users/amodra/orgs", "repos_url": "https://api.github.com/users/amodra/repos", "events_url": "https://api.github.com/users/amodra/events{/privacy}", "received_events_url": "https://api.github.com/users/amodra/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "0abbc8f15ef80c104bd38116680ef6a1c1777143", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0abbc8f15ef80c104bd38116680ef6a1c1777143", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0abbc8f15ef80c104bd38116680ef6a1c1777143"}], "stats": {"total": 175, "additions": 73, "deletions": 102}, "files": [{"sha": "e21a132286ee8853829caa7de1ddc2d46ded46dd", "filename": "gcc/ChangeLog", "status": "modified", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62045234757dbe0e3c44eef4cc952e773eea784e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62045234757dbe0e3c44eef4cc952e773eea784e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=62045234757dbe0e3c44eef4cc952e773eea784e", "patch": "@@ -1,3 +1,29 @@\n+2018-11-27  Alan Modra  <amodra@gmail.com>\n+\n+\t* config.gcc (powerpc*-*-freebsd*, powerpc-*-netbsd*),\n+\t(powerpc-*-eabisimaltivec*, powerpc-*-eabisim*, powerpc-*-elf*),\n+\t(powerpc-*-eabialtivec*, powerpc-*-eabi*, powerpc-*-rtems*),\n+\t(powerpc-wrs-vxworks*, powerpc-*-lynxos*, powerpcle-*-elf*),\n+\t(powerpcle-*-eabisim*, powerpcle-*-eabi*): Add gnu-user.h to tm_file.\n+\t* config/rs6000/freebsd.h (CPLUSPLUS_CPP_SPEC),\n+\t(LINK_GCC_C_SEQUENCE_SPEC): Undef.\n+\t(ASM_APP_ON, ASM_APP_OFF): Don't define.\n+\t* config/rs6000/freebsd64.h (ASM_APP_ON, ASM_APP_OFF): Don't define.\n+\t* config/rs6000/lynx.h (ASM_APP_ON, ASM_APP_OFF): Don't define.\n+\t* config/rs6000/linux64.h (LINK_GCC_C_SEQUENCE_SPEC): Define.\n+\t* config/rs6000/netbsd.h (CPLUSPLUS_CPP_SPEC),\n+\t(LINK_GCC_C_SEQUENCE_SPEC): Undef.\n+\t* config/rs6000/rtems.h (LINK_GCC_C_SEQUENCE_SPEC): Define.\n+\t* config/rs6000/sysv4.h (GNU_USER_TARGET_CRTI): Redefine.\n+\t(GNU_USER_TARGET_CRTN): Redefine.\n+\t(CC1_SPEC): Use GNU_USER_TARGET_CC1_SPEC.\n+\t(LIB_LINUX_SPEC): Use GNU_USER_TARGET_LIB_SPEC.\n+\t(CRTOFFLOADBEGIN, CRTOFFLOADEND): Don't define.\n+\t(STARTFILE_LINUX_SPEC): Define as GNU_USER_TARGET_STARTFILE_SPEC.\n+\t(ENDFILE_LINUX_SPEC): Define as GNU_USER_TARGET_ENDFILE_SPEC.\n+\t(UCLIBC_DYNAMIC_LINKER, CHOOSE_DYNAMIC_LINKER): Don't define.\n+\t(LINK_EH_SPEC): Don't define.\n+\n 2018-11-26  Martin Sebor  <msebor@redhat.com>\n \n \tPR 87756"}, {"sha": "f6162ed496e32d590187075c516824508171646e", "filename": "gcc/config.gcc", "status": "modified", "additions": 13, "deletions": 13, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62045234757dbe0e3c44eef4cc952e773eea784e/gcc%2Fconfig.gcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62045234757dbe0e3c44eef4cc952e773eea784e/gcc%2Fconfig.gcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.gcc?ref=62045234757dbe0e3c44eef4cc952e773eea784e", "patch": "@@ -2567,7 +2567,7 @@ powerpc64-*-darwin*)\n \textra_headers=altivec.h\n \t;;\n powerpc*-*-freebsd*)\n-\ttm_file=\"${tm_file} dbxelf.h elfos.h ${fbsd_tm_file} rs6000/sysv4.h\"\n+\ttm_file=\"${tm_file} dbxelf.h elfos.h gnu-user.h ${fbsd_tm_file} rs6000/sysv4.h\"\n \textra_options=\"${extra_options} rs6000/sysv4.opt\"\n \ttmake_file=\"rs6000/t-fprules rs6000/t-ppcos ${tmake_file} rs6000/t-ppccomm\"\n \tcase ${target} in\n@@ -2582,7 +2582,7 @@ powerpc*-*-freebsd*)\n \tesac\n \t;;\n powerpc-*-netbsd*)\n-\ttm_file=\"${tm_file} dbxelf.h elfos.h ${nbsd_tm_file} freebsd-spec.h rs6000/sysv4.h rs6000/netbsd.h\"\n+\ttm_file=\"${tm_file} dbxelf.h elfos.h gnu-user.h ${nbsd_tm_file} freebsd-spec.h rs6000/sysv4.h rs6000/netbsd.h\"\n \textra_options=\"${extra_options} netbsd.opt netbsd-elf.opt\"\n \ttmake_file=\"${tmake_file} rs6000/t-netbsd\"\n \textra_options=\"${extra_options} rs6000/sysv4.opt\"\n@@ -2594,30 +2594,30 @@ powerpc-*-eabispe*)\n \tuse_gcc_stdint=wrap\n \t;;\n powerpc-*-eabisimaltivec*)\n-\ttm_file=\"${tm_file} dbxelf.h elfos.h freebsd-spec.h newlib-stdint.h rs6000/sysv4.h rs6000/eabi.h rs6000/eabisim.h rs6000/eabialtivec.h\"\n+\ttm_file=\"${tm_file} dbxelf.h elfos.h gnu-user.h freebsd-spec.h newlib-stdint.h rs6000/sysv4.h rs6000/eabi.h rs6000/eabisim.h rs6000/eabialtivec.h\"\n \textra_options=\"${extra_options} rs6000/sysv4.opt\"\n \ttmake_file=\"rs6000/t-fprules rs6000/t-ppcendian rs6000/t-ppccomm\"\n \tuse_gcc_stdint=wrap\n \t;;\n powerpc-*-eabisim*)\n-\ttm_file=\"${tm_file} dbxelf.h elfos.h usegas.h freebsd-spec.h newlib-stdint.h rs6000/sysv4.h rs6000/eabi.h rs6000/eabisim.h\"\n+\ttm_file=\"${tm_file} dbxelf.h elfos.h gnu-user.h usegas.h freebsd-spec.h newlib-stdint.h rs6000/sysv4.h rs6000/eabi.h rs6000/eabisim.h\"\n \textra_options=\"${extra_options} rs6000/sysv4.opt\"\n \ttmake_file=\"rs6000/t-fprules rs6000/t-ppcgas rs6000/t-ppccomm\"\n \tuse_gcc_stdint=wrap\n \t;;\n powerpc-*-elf*)\n-\ttm_file=\"${tm_file} dbxelf.h elfos.h usegas.h freebsd-spec.h newlib-stdint.h rs6000/sysv4.h\"\n+\ttm_file=\"${tm_file} dbxelf.h elfos.h gnu-user.h usegas.h freebsd-spec.h newlib-stdint.h rs6000/sysv4.h\"\n \textra_options=\"${extra_options} rs6000/sysv4.opt\"\n \ttmake_file=\"rs6000/t-fprules rs6000/t-ppcgas rs6000/t-ppccomm\"\n \t;;\n powerpc-*-eabialtivec*)\n-\ttm_file=\"${tm_file} dbxelf.h elfos.h freebsd-spec.h newlib-stdint.h rs6000/sysv4.h rs6000/eabi.h rs6000/eabialtivec.h\"\n+\ttm_file=\"${tm_file} dbxelf.h elfos.h gnu-user.h freebsd-spec.h newlib-stdint.h rs6000/sysv4.h rs6000/eabi.h rs6000/eabialtivec.h\"\n \textra_options=\"${extra_options} rs6000/sysv4.opt\"\n \ttmake_file=\"rs6000/t-fprules rs6000/t-ppcendian rs6000/t-ppccomm\"\n \tuse_gcc_stdint=wrap\n \t;;\n powerpc-*-eabi*)\n-\ttm_file=\"${tm_file} dbxelf.h elfos.h usegas.h freebsd-spec.h newlib-stdint.h rs6000/sysv4.h rs6000/eabi.h\"\n+\ttm_file=\"${tm_file} dbxelf.h elfos.h gnu-user.h usegas.h freebsd-spec.h newlib-stdint.h rs6000/sysv4.h rs6000/eabi.h\"\n \textra_options=\"${extra_options} rs6000/sysv4.opt\"\n \ttmake_file=\"rs6000/t-fprules rs6000/t-ppcgas rs6000/t-ppccomm\"\n \tuse_gcc_stdint=wrap\n@@ -2628,7 +2628,7 @@ powerpc-*-rtems*spe*)\n \ttmake_file=\"${tmake_file} powerpcspe/t-fprules powerpcspe/t-rtems powerpcspe/t-ppccomm\"\n \t;;\n powerpc-*-rtems*)\n-\ttm_file=\"rs6000/biarch64.h ${tm_file} dbxelf.h elfos.h freebsd-spec.h newlib-stdint.h rs6000/sysv4.h rs6000/rtems.h rtems.h\"\n+\ttm_file=\"rs6000/biarch64.h ${tm_file} dbxelf.h elfos.h gnu-user.h freebsd-spec.h newlib-stdint.h rs6000/sysv4.h rs6000/rtems.h rtems.h\"\n \textra_options=\"${extra_options} rs6000/sysv4.opt rs6000/linux64.opt\"\n \ttmake_file=\"${tmake_file} rs6000/t-fprules rs6000/t-rtems rs6000/t-ppccomm\"\n \t;;\n@@ -2727,7 +2727,7 @@ powerpc-wrs-vxworks*spe)\n \ttm_file=\"${tm_file} vx-common.h vxworks.h powerpcspe/vxworks.h powerpcspe/e500.h\"\n \t;;\n powerpc-wrs-vxworks*)\n-\ttm_file=\"${tm_file} elfos.h freebsd-spec.h rs6000/sysv4.h\"\n+\ttm_file=\"${tm_file} elfos.h gnu-user.h freebsd-spec.h rs6000/sysv4.h\"\n \ttmake_file=\"${tmake_file} rs6000/t-fprules rs6000/t-ppccomm rs6000/t-vxworks\"\n \textra_options=\"${extra_options} rs6000/sysv4.opt\"\n \textra_headers=ppc-asm.h\n@@ -2747,26 +2747,26 @@ powerpc-wrs-vxworks*)\n \t;;\n powerpc-*-lynxos*)\n \txm_defines=POSIX\n-\ttm_file=\"${tm_file} dbxelf.h elfos.h rs6000/sysv4.h rs6000/lynx.h lynx.h\"\n+\ttm_file=\"${tm_file} dbxelf.h elfos.h gnu-user.h rs6000/sysv4.h rs6000/lynx.h lynx.h\"\n \ttmake_file=\"t-lynx rs6000/t-lynx\"\n \textra_options=\"${extra_options} rs6000/sysv4.opt lynx.opt\"\n \tthread_file=lynx\n \tgnu_ld=yes\n \tgas=yes\n \t;;\n powerpcle-*-elf*)\n-\ttm_file=\"${tm_file} dbxelf.h elfos.h usegas.h freebsd-spec.h newlib-stdint.h rs6000/sysv4.h rs6000/sysv4le.h\"\n+\ttm_file=\"${tm_file} dbxelf.h elfos.h gnu-user.h usegas.h freebsd-spec.h newlib-stdint.h rs6000/sysv4.h rs6000/sysv4le.h\"\n \ttmake_file=\"rs6000/t-fprules rs6000/t-ppcgas rs6000/t-ppccomm\"\n \textra_options=\"${extra_options} rs6000/sysv4.opt\"\n \t;;\n powerpcle-*-eabisim*)\n-\ttm_file=\"${tm_file} dbxelf.h elfos.h usegas.h freebsd-spec.h newlib-stdint.h rs6000/sysv4.h rs6000/sysv4le.h rs6000/eabi.h rs6000/eabisim.h\"\n+\ttm_file=\"${tm_file} dbxelf.h elfos.h gnu-user.h usegas.h freebsd-spec.h newlib-stdint.h rs6000/sysv4.h rs6000/sysv4le.h rs6000/eabi.h rs6000/eabisim.h\"\n \ttmake_file=\"rs6000/t-fprules rs6000/t-ppcgas rs6000/t-ppccomm\"\n \textra_options=\"${extra_options} rs6000/sysv4.opt\"\n \tuse_gcc_stdint=wrap\n \t;;\n powerpcle-*-eabi*)\n-\ttm_file=\"${tm_file} dbxelf.h elfos.h usegas.h freebsd-spec.h newlib-stdint.h rs6000/sysv4.h rs6000/sysv4le.h rs6000/eabi.h\"\n+\ttm_file=\"${tm_file} dbxelf.h elfos.h gnu-user.h usegas.h freebsd-spec.h newlib-stdint.h rs6000/sysv4.h rs6000/sysv4le.h rs6000/eabi.h\"\n \ttmake_file=\"rs6000/t-fprules rs6000/t-ppcgas rs6000/t-ppccomm\"\n \textra_options=\"${extra_options} rs6000/sysv4.opt\"\n \tuse_gcc_stdint=wrap"}, {"sha": "5947eff2a1b992e205cc880928d3ebb27c52b7ff", "filename": "gcc/config/rs6000/freebsd.h", "status": "modified", "additions": 4, "deletions": 8, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62045234757dbe0e3c44eef4cc952e773eea784e/gcc%2Fconfig%2Frs6000%2Ffreebsd.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62045234757dbe0e3c44eef4cc952e773eea784e/gcc%2Fconfig%2Frs6000%2Ffreebsd.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Ffreebsd.h?ref=62045234757dbe0e3c44eef4cc952e773eea784e", "patch": "@@ -18,6 +18,10 @@\n    along with GCC; see the file COPYING3.  If not see\n    <http://www.gnu.org/licenses/>.  */\n \n+/* Undef gnu-user.h macros we don't want.  */\n+#undef CPLUSPLUS_CPP_SPEC\n+#undef LINK_GCC_C_SEQUENCE_SPEC\n+\n /* Override the defaults, which exist to force the proper definition.  */\n \n #undef\tCPP_OS_DEFAULT_SPEC\n@@ -59,14 +63,6 @@\n #undef  WCHAR_TYPE_SIZE\n #define WCHAR_TYPE_SIZE 32\n \n-/* Override rs6000.h definition.  */\n-#undef  ASM_APP_ON\n-#define ASM_APP_ON \"#APP\\n\"\n-\n-/* Override rs6000.h definition.  */\n-#undef  ASM_APP_OFF\n-#define ASM_APP_OFF \"#NO_APP\\n\"\n-\n /* We don't need to generate entries in .fixup, except when\n    -mrelocatable or -mrelocatable-lib is given.  */\n #undef RELOCATABLE_NEEDS_FIXUP"}, {"sha": "985f730d76448951dd1084710c317222566feed7", "filename": "gcc/config/rs6000/freebsd64.h", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62045234757dbe0e3c44eef4cc952e773eea784e/gcc%2Fconfig%2Frs6000%2Ffreebsd64.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62045234757dbe0e3c44eef4cc952e773eea784e/gcc%2Fconfig%2Frs6000%2Ffreebsd64.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Ffreebsd64.h?ref=62045234757dbe0e3c44eef4cc952e773eea784e", "patch": "@@ -306,15 +306,6 @@ extern int dot_symbols;\n #undef  WCHAR_TYPE_SIZE\n #define WCHAR_TYPE_SIZE 32\n \n-\n-/* Override rs6000.h definition.  */\n-#undef  ASM_APP_ON\n-#define ASM_APP_ON \"#APP\\n\"\n-\n-/* Override rs6000.h definition.  */\n-#undef  ASM_APP_OFF\n-#define ASM_APP_OFF \"#NO_APP\\n\"\n-\n /* Function profiling bits */\n #undef  RS6000_MCOUNT\n #define RS6000_MCOUNT \"_mcount\""}, {"sha": "a9aae81a90698dcfb7441941d3814347bed615ca", "filename": "gcc/config/rs6000/linux64.h", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62045234757dbe0e3c44eef4cc952e773eea784e/gcc%2Fconfig%2Frs6000%2Flinux64.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62045234757dbe0e3c44eef4cc952e773eea784e/gcc%2Fconfig%2Frs6000%2Flinux64.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Flinux64.h?ref=62045234757dbe0e3c44eef4cc952e773eea784e", "patch": "@@ -478,6 +478,13 @@ extern int dot_symbols;\n     -dynamic-linker \" GNU_USER_DYNAMIC_LINKER64 \"}}} \\\n   %(link_os_extra_spec64)\"\n \n+/* Use gnu-user.h LINK_GCC_SEQUENCE_SPEC for linux.  */\n+#undef LINK_GCC_C_SEQUENCE_SPEC\n+#define\tLINK_GCC_C_SEQUENCE_SPEC \\\n+  \"%{mads|myellowknife|mmvme|msim:%G %L %G;\" \\\n+  \"!mcall-*|mcall-linux:\" GNU_USER_TARGET_LINK_GCC_C_SEQUENCE_SPEC \";\" \\\n+  \":%G %L %G}\"\n+\n #undef  TOC_SECTION_ASM_OP\n #define TOC_SECTION_ASM_OP \\\n   (TARGET_64BIT\t\t\t\t\t\t\\"}, {"sha": "526494fd8342f0b98c20adce82295a0c5c8ba231", "filename": "gcc/config/rs6000/lynx.h", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62045234757dbe0e3c44eef4cc952e773eea784e/gcc%2Fconfig%2Frs6000%2Flynx.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62045234757dbe0e3c44eef4cc952e773eea784e/gcc%2Fconfig%2Frs6000%2Flynx.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Flynx.h?ref=62045234757dbe0e3c44eef4cc952e773eea784e", "patch": "@@ -71,16 +71,6 @@\n     }\t\t\t\t\t\t\\\n   while (0)\n \n-/* Override the rs6000.h definition.  */\n-\n-#undef ASM_APP_ON\n-#define ASM_APP_ON \"#APP\\n\"\n-\n-/* Override the rs6000.h definition.  */\n-\n-#undef ASM_APP_OFF\n-#define ASM_APP_OFF \"#NO_APP\\n\"\n-\n /* LynxOS does not do anything with .fixup plus let's not create\n    writable section for linkonce.r and linkonce.t.  */\n "}, {"sha": "acc511d64a5149fd70fb4030b6387fc50ecb7200", "filename": "gcc/config/rs6000/netbsd.h", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62045234757dbe0e3c44eef4cc952e773eea784e/gcc%2Fconfig%2Frs6000%2Fnetbsd.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62045234757dbe0e3c44eef4cc952e773eea784e/gcc%2Fconfig%2Frs6000%2Fnetbsd.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fnetbsd.h?ref=62045234757dbe0e3c44eef4cc952e773eea784e", "patch": "@@ -19,6 +19,10 @@\n    along with GCC; see the file COPYING3.  If not see\n    <http://www.gnu.org/licenses/>.  */\n \n+/* Undef gnu-user.h macros we don't want.  */\n+#undef CPLUSPLUS_CPP_SPEC\n+#undef LINK_GCC_C_SEQUENCE_SPEC\n+\n #undef  TARGET_OS_CPP_BUILTINS\t/* FIXME: sysv4.h should not define this! */\n #define TARGET_OS_CPP_BUILTINS()\t\t\\\n   do\t\t\t\t\t\t\\"}, {"sha": "0ac9bfb0ffc587757298c4e53f3370fdcf84d2d7", "filename": "gcc/config/rs6000/rtems.h", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62045234757dbe0e3c44eef4cc952e773eea784e/gcc%2Fconfig%2Frs6000%2Frtems.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62045234757dbe0e3c44eef4cc952e773eea784e/gcc%2Fconfig%2Frs6000%2Frtems.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frtems.h?ref=62045234757dbe0e3c44eef4cc952e773eea784e", "patch": "@@ -288,3 +288,10 @@\n   { \"asm_spec64\",\t\tASM_SPEC64 },\t\t\t\t\\\n   { \"link_os_spec32\",\t\tLINK_OS_SPEC32 },\t\t\t\\\n   { \"link_os_spec64\",\t\tLINK_OS_SPEC64 },\n+\n+/* Use gnu-user.h LINK_GCC_SEQUENCE_SPEC for rtems.  */\n+#undef LINK_GCC_C_SEQUENCE_SPEC\n+#define\tLINK_GCC_C_SEQUENCE_SPEC \\\n+  \"%{mads|myellowknife|mmvme|msim:%G %L %G;\" \\\n+  \"!mcall-*|mcall-linux:\" GNU_USER_TARGET_LINK_GCC_C_SEQUENCE_SPEC \";\" \\\n+  \":%G %L %G}\""}, {"sha": "0d84f4f3f57a3dfd202b8875ae93c0c424741434", "filename": "gcc/config/rs6000/sysv4.h", "status": "modified", "additions": 12, "deletions": 62, "changes": 74, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62045234757dbe0e3c44eef4cc952e773eea784e/gcc%2Fconfig%2Frs6000%2Fsysv4.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62045234757dbe0e3c44eef4cc952e773eea784e/gcc%2Fconfig%2Frs6000%2Fsysv4.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fsysv4.h?ref=62045234757dbe0e3c44eef4cc952e773eea784e", "patch": "@@ -23,6 +23,11 @@\n    see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n    <http://www.gnu.org/licenses/>.  */\n \n+#undef GNU_USER_TARGET_CRTI\n+#define GNU_USER_TARGET_CRTI \"%{mnewlib:ecrti.o%s;:crti.o%s}\"\n+#undef GNU_USER_TARGET_CRTN\n+#define GNU_USER_TARGET_CRTN \"%{mnewlib:ecrtn.o%s;:crtn.o%s}\"\n+\n /* Yes!  We are ELF.  */\n #define\tTARGET_OBJECT_FORMAT OBJECT_ELF\n \n@@ -556,8 +561,8 @@ ENDIAN_SELECT(\" -mbig\", \" -mlittle\", DEFAULT_ASM_ENDIAN)\n     %{mcall-openbsd: -mno-eabi }}} \\\n %{msdata: -msdata=default} \\\n %{mno-sdata: -msdata=none} \\\n-%{!mbss-plt: %{!msecure-plt: %(cc1_secure_plt_default)}} \\\n-%{profile: -p}\"\n+%{!mbss-plt: %{!msecure-plt: %(cc1_secure_plt_default)}}\" \\\n+GNU_USER_TARGET_CC1_SPEC\n \n /* Default starting address if specified.  */\n #define LINK_START_SPEC \"\\\n@@ -739,82 +744,27 @@ ENDIAN_SELECT(\" -mbig\", \" -mlittle\", DEFAULT_ASM_ENDIAN)\n   %{symbolic:-Bsymbolic}\"\n \n /* GNU/Linux support.  */\n-#define LIB_LINUX_SPEC \"%{mnewlib: --start-group -llinux -lc --end-group } \\\n-%{!mnewlib: %{pthread:-lpthread} %{shared:-lc} \\\n-%{!shared: %{profile:-lc_p} %{!profile:-lc}}}\"\n+#define LIB_LINUX_SPEC \\\n+  \"%{mnewlib: --start-group -llinux -lc --end-group; \\\n+     :\" GNU_USER_TARGET_LIB_SPEC \"}\"\n \n-#if ENABLE_OFFLOADING == 1\n-#define CRTOFFLOADBEGIN \"%{fopenacc|fopenmp:crtoffloadbegin%O%s}\"\n-#define CRTOFFLOADEND \"%{fopenacc|fopenmp:crtoffloadend%O%s}\"\n-#else\n-#define CRTOFFLOADBEGIN \"\"\n-#define CRTOFFLOADEND \"\"\n-#endif\n+#define\tSTARTFILE_LINUX_SPEC GNU_USER_TARGET_STARTFILE_SPEC\n \n-/* STARTFILE_LINUX_SPEC should be the same as GNU_USER_TARGET_STARTFILE_SPEC\n-   but with the mnewlib ecrti.o%s selection substituted for crti.o%s.  */\n-#define\tSTARTFILE_LINUX_SPEC \\\n-  \"%{shared:; \\\n-     pg|p|profile:gcrt1.o%s; \\\n-     static:crt1.o%s; \\\n-     static-pie|\" PIE_SPEC \":Scrt1.o%s; \\\n-     :crt1.o%s} \\\n-   %{mnewlib:ecrti.o%s;:crti.o%s} \\\n-   %{static:crtbeginT.o%s; \\\n-     shared|static-pie|\" PIE_SPEC \":crtbeginS.o%s; \\\n-     :crtbegin.o%s} \\\n-   %{fvtable-verify=none:%s; \\\n-     fvtable-verify=preinit:vtv_start_preinit.o%s; \\\n-     fvtable-verify=std:vtv_start.o%s} \\\n-   \" CRTOFFLOADBEGIN\n-\n-/* ENDFILE_LINUX_SPEC should be the same as GNU_USER_TARGET_ENDFILE_SPEC\n-   but with the mnewlib ecrtn.o%s selection substituted for crtn.o%s.  */\n-#define ENDFILE_LINUX_SPEC \\\n-  \"%{fvtable-verify=none:%s; \\\n-     fvtable-verify=preinit:vtv_end_preinit.o%s; \\\n-     fvtable-verify=std:vtv_end.o%s} \\\n-   %{static:crtend.o%s; \\\n-     shared|static-pie|\" PIE_SPEC \":crtendS.o%s; \\\n-     :crtend.o%s} \\\n-   %{mnewlib:ecrtn.o%s;:crtn.o%s} \\\n-   \" CRTOFFLOADEND\n+#define ENDFILE_LINUX_SPEC GNU_USER_TARGET_ENDFILE_SPEC\n \n #define LINK_START_LINUX_SPEC \"\"\n \n #define MUSL_DYNAMIC_LINKER_E ENDIAN_SELECT(\"\",\"le\",\"\")\n \n #define GLIBC_DYNAMIC_LINKER \"/lib/ld.so.1\"\n-#define UCLIBC_DYNAMIC_LINKER \"/lib/ld-uClibc.so.0\"\n #undef MUSL_DYNAMIC_LINKER\n #define MUSL_DYNAMIC_LINKER \\\n   \"/lib/ld-musl-powerpc\" MUSL_DYNAMIC_LINKER_E \"%{msoft-float:-sf}.so.1\"\n-#ifndef GNU_USER_DYNAMIC_LINKER\n-#if DEFAULT_LIBC == LIBC_UCLIBC\n-#define CHOOSE_DYNAMIC_LINKER(G, U, M) \\\n-  \"%{mglibc:\" G \";:%{mmusl:\" M \";:\" U \"}}\"\n-#elif DEFAULT_LIBC == LIBC_MUSL\n-#define CHOOSE_DYNAMIC_LINKER(G, U, M) \\\n-  \"%{mglibc:\" G \";:%{muclibc:\" U \";:\" M \"}}\"\n-#elif !defined (DEFAULT_LIBC) || DEFAULT_LIBC == LIBC_GLIBC\n-#define CHOOSE_DYNAMIC_LINKER(G, U, M) \\\n-  \"%{muclibc:\" U \";:%{mmusl:\" M \";:\" G \"}}\"\n-#else\n-#error \"Unsupported DEFAULT_LIBC\"\n-#endif\n-#define GNU_USER_DYNAMIC_LINKER \\\n-  CHOOSE_DYNAMIC_LINKER (GLIBC_DYNAMIC_LINKER, UCLIBC_DYNAMIC_LINKER, \\\n-\t\t\t MUSL_DYNAMIC_LINKER)\n-#endif\n \n #define LINK_OS_LINUX_SPEC \"-m elf32ppclinux %{!shared: %{!static: \\\n   %{rdynamic:-export-dynamic} \\\n   -dynamic-linker \" GNU_USER_DYNAMIC_LINKER \"}}\"\n \n-#if defined(HAVE_LD_EH_FRAME_HDR)\n-# define LINK_EH_SPEC \"%{!static|static-pie:--eh-frame-hdr} \"\n-#endif\n-\n #define CPP_OS_LINUX_SPEC \"%{pthread:-D_REENTRANT}\"\n \n /* NetBSD support.  */"}]}