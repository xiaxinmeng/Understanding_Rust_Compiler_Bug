{"sha": "c2f3e1a3e369fe549fa76e9821d2e17bc3d55dc7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzJmM2UxYTNlMzY5ZmU1NDlmYTc2ZTk4MjFkMmUxN2JjM2Q1NWRjNw==", "commit": {"author": {"name": "Ed Schonberg", "email": "schonberg@adacore.com", "date": "2019-12-12T10:02:23Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2019-12-12T10:02:23Z"}, "message": "[Ada] Missing length check on private type with unknown discriminants\n\n2019-12-12  Ed Schonberg  <schonberg@adacore.com>\n\ngcc/ada/\n\n\t* exp_ch5.adb (Expand_N_Assognment_Statement): Extend the\n\tprocessing involving private types with unknown discriminants to\n\thandle the case where the full view of the type is an\n\tunconstrained array type.\n\nFrom-SVN: r279286", "tree": {"sha": "4473ec6305948f9e8d6c881453c1469573a929f7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4473ec6305948f9e8d6c881453c1469573a929f7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c2f3e1a3e369fe549fa76e9821d2e17bc3d55dc7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c2f3e1a3e369fe549fa76e9821d2e17bc3d55dc7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c2f3e1a3e369fe549fa76e9821d2e17bc3d55dc7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c2f3e1a3e369fe549fa76e9821d2e17bc3d55dc7/comments", "author": {"login": "Edschonberg", "id": 6352375, "node_id": "MDQ6VXNlcjYzNTIzNzU=", "avatar_url": "https://avatars.githubusercontent.com/u/6352375?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Edschonberg", "html_url": "https://github.com/Edschonberg", "followers_url": "https://api.github.com/users/Edschonberg/followers", "following_url": "https://api.github.com/users/Edschonberg/following{/other_user}", "gists_url": "https://api.github.com/users/Edschonberg/gists{/gist_id}", "starred_url": "https://api.github.com/users/Edschonberg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Edschonberg/subscriptions", "organizations_url": "https://api.github.com/users/Edschonberg/orgs", "repos_url": "https://api.github.com/users/Edschonberg/repos", "events_url": "https://api.github.com/users/Edschonberg/events{/privacy}", "received_events_url": "https://api.github.com/users/Edschonberg/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "0e3a687f8c5351a52f48c4062c2cf88cdc7d4424", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0e3a687f8c5351a52f48c4062c2cf88cdc7d4424", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0e3a687f8c5351a52f48c4062c2cf88cdc7d4424"}], "stats": {"total": 30, "additions": 23, "deletions": 7}, "files": [{"sha": "a4dc13890e00430d2a7eaa7f6fcc2c4c0bc4968b", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2f3e1a3e369fe549fa76e9821d2e17bc3d55dc7/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2f3e1a3e369fe549fa76e9821d2e17bc3d55dc7/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=c2f3e1a3e369fe549fa76e9821d2e17bc3d55dc7", "patch": "@@ -1,3 +1,10 @@\n+2019-12-12  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* exp_ch5.adb (Expand_N_Assognment_Statement): Extend the\n+\tprocessing involving private types with unknown discriminants to\n+\thandle the case where the full view of the type is an\n+\tunconstrained array type.\n+\n 2019-12-12  Bob Duff  <duff@adacore.com>\n \n \t* sem_ch4.adb (Transform_Object_Operation): Deal properly with"}, {"sha": "f3139bd1c0b8f456d5a29db4a2f454fe7d6fd9de", "filename": "gcc/ada/exp_ch5.adb", "status": "modified", "additions": 16, "deletions": 7, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2f3e1a3e369fe549fa76e9821d2e17bc3d55dc7/gcc%2Fada%2Fexp_ch5.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2f3e1a3e369fe549fa76e9821d2e17bc3d55dc7/gcc%2Fada%2Fexp_ch5.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch5.adb?ref=c2f3e1a3e369fe549fa76e9821d2e17bc3d55dc7", "patch": "@@ -2409,14 +2409,23 @@ package body Exp_Ch5 is\n       --  checking. Convert Lhs as well, otherwise the actual subtype might\n       --  not be constructible. If the discriminants have defaults the type\n       --  is unconstrained and there is nothing to check.\n+      --  Ditto if a private type with unknown discriminants has a full view\n+      --  that is an unconstrained array, in which case a length check is\n+      --  needed.\n \n-      elsif Has_Unknown_Discriminants (Base_Type (Etype (Lhs)))\n-        and then Has_Discriminants (Typ)\n-        and then not Has_Defaulted_Discriminants (Typ)\n-      then\n-         Rewrite (Rhs, OK_Convert_To (Base_Type (Typ), Rhs));\n-         Rewrite (Lhs, OK_Convert_To (Base_Type (Typ), Lhs));\n-         Apply_Discriminant_Check (Rhs, Typ, Lhs);\n+      elsif Has_Unknown_Discriminants (Base_Type (Etype (Lhs))) then\n+         if Has_Discriminants (Typ)\n+           and then not Has_Defaulted_Discriminants (Typ)\n+         then\n+            Rewrite (Rhs, OK_Convert_To (Base_Type (Typ), Rhs));\n+            Rewrite (Lhs, OK_Convert_To (Base_Type (Typ), Lhs));\n+            Apply_Discriminant_Check (Rhs, Typ, Lhs);\n+\n+         elsif Is_Array_Type (Typ) and then Is_Constrained (Typ)  then\n+            Rewrite (Rhs, OK_Convert_To (Base_Type (Typ), Rhs));\n+            Rewrite (Lhs, OK_Convert_To (Base_Type (Typ), Lhs));\n+            Apply_Length_Check (Rhs, Typ);\n+         end if;\n \n       --  In the access type case, we need the same discriminant check, and\n       --  also range checks if we have an access to constrained array."}]}