{"sha": "10d91e57986941516dc7c0d1c6ec0915d68f614e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTBkOTFlNTc5ODY5NDE1MTZkYzdjMGQxYzZlYzA5MTVkNjhmNjE0ZQ==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2013-12-12T18:45:24Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2013-12-12T18:45:24Z"}, "message": "compiler: Don't compare structs with blank non-comparable fields.\n\nFrom-SVN: r205937", "tree": {"sha": "f43417def1385528bc3c3f1f6c36c5b991642fb9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f43417def1385528bc3c3f1f6c36c5b991642fb9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/10d91e57986941516dc7c0d1c6ec0915d68f614e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/10d91e57986941516dc7c0d1c6ec0915d68f614e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/10d91e57986941516dc7c0d1c6ec0915d68f614e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/10d91e57986941516dc7c0d1c6ec0915d68f614e/comments", "author": null, "committer": null, "parents": [{"sha": "f7685b6677db3979392d7a063d4660b84c461c42", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f7685b6677db3979392d7a063d4660b84c461c42", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f7685b6677db3979392d7a063d4660b84c461c42"}], "stats": {"total": 11, "additions": 4, "deletions": 7}, "files": [{"sha": "d079565d18bc795221b79783079cc8a1f252b137", "filename": "gcc/go/gofrontend/types.cc", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/10d91e57986941516dc7c0d1c6ec0915d68f614e/gcc%2Fgo%2Fgofrontend%2Ftypes.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/10d91e57986941516dc7c0d1c6ec0915d68f614e/gcc%2Fgo%2Fgofrontend%2Ftypes.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2Ftypes.cc?ref=10d91e57986941516dc7c0d1c6ec0915d68f614e", "patch": "@@ -575,9 +575,6 @@ Type::are_compatible_for_comparison(bool is_equality_op, const Type *t1,\n \t       p != fields->end();\n \t       ++p)\n \t    {\n-\t      if (Gogo::is_sink_name(p->field_name()))\n-\t\tcontinue;\n-\n \t      if (!p->type()->is_comparable())\n \t\t{\n \t\t  if (reason != NULL)"}, {"sha": "73de502f39fcb54ccdbe6e90e536391ea5974343", "filename": "gcc/testsuite/go.test/test/cmp.go", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/10d91e57986941516dc7c0d1c6ec0915d68f614e/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fcmp.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/10d91e57986941516dc7c0d1c6ec0915d68f614e/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fcmp.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fcmp.go?ref=10d91e57986941516dc7c0d1c6ec0915d68f614e", "patch": "@@ -43,8 +43,8 @@ func main() {\n \tvar d string = \"hel\" // try to get different pointer\n \td = d + \"lo\"\n \n-\t// exp/ssa/interp can't handle unsafe.Pointer.\n-\tif os.Getenv(\"GOSSAINTERP\") != \"\" {\n+\t// go.tools/ssa/interp can't handle unsafe.Pointer.\n+\tif os.Getenv(\"GOSSAINTERP\") == \"\" {\n \t\tif stringptr(c) == stringptr(d) {\n \t\t\tpanic(\"compiler too smart -- got same string\")\n \t\t}\n@@ -296,7 +296,7 @@ func main() {\n \t{\n \t\tvar x = struct {\n \t\t\tx int\n-\t\t\t_ []int\n+\t\t\t_ string\n \t\t\ty float64\n \t\t\t_ float64\n \t\t\tz int"}, {"sha": "839c274bccae225a424aa5eac66873efaa25988f", "filename": "gcc/testsuite/go.test/test/cmp6.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/10d91e57986941516dc7c0d1c6ec0915d68f614e/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fcmp6.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/10d91e57986941516dc7c0d1c6ec0915d68f614e/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fcmp6.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fcmp6.go?ref=10d91e57986941516dc7c0d1c6ec0915d68f614e", "patch": "@@ -53,7 +53,7 @@ func main() {\n \n \t// Comparison of structs should have a good message\n \tuse(t3 == t3) // ERROR \"struct|expected\"\n-\tuse(t4 == t4) // ok; the []int is a blank field\n+\tuse(t4 == t4) // ERROR \"cannot be compared|non-comparable\"\n \n \t// Slices, functions, and maps too.\n \tvar x []int"}]}