{"sha": "bc9b880c6075c57c54003869d98c6a249eef7cbd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmM5Yjg4MGM2MDc1YzU3YzU0MDAzODY5ZDk4YzZhMjQ5ZWVmN2NiZA==", "commit": {"author": {"name": "Jeff Law", "email": "law@redhat.com", "date": "2008-09-03T20:22:49Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "2008-09-03T20:22:49Z"}, "message": "h8300.c (expand_a_shift): Avoid invalid RTL sharing.\n\n\t* h8300.c (expand_a_shift): Avoid invalid RTL sharing.\n\nFrom-SVN: r139953", "tree": {"sha": "1887089e06ca65a94032db7e19e5bf3f685f612d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1887089e06ca65a94032db7e19e5bf3f685f612d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bc9b880c6075c57c54003869d98c6a249eef7cbd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bc9b880c6075c57c54003869d98c6a249eef7cbd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bc9b880c6075c57c54003869d98c6a249eef7cbd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bc9b880c6075c57c54003869d98c6a249eef7cbd/comments", "author": null, "committer": null, "parents": [{"sha": "49d988e7e8164d71e73c2de5a1f1c6a2afe205a4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/49d988e7e8164d71e73c2de5a1f1c6a2afe205a4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/49d988e7e8164d71e73c2de5a1f1c6a2afe205a4"}], "stats": {"total": 10, "additions": 7, "deletions": 3}, "files": [{"sha": "90d5ef828caacf46d61abca2c02a119e0c23e38f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bc9b880c6075c57c54003869d98c6a249eef7cbd/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bc9b880c6075c57c54003869d98c6a249eef7cbd/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=bc9b880c6075c57c54003869d98c6a249eef7cbd", "patch": "@@ -1,3 +1,7 @@\n+2008-09-03  Jeff Law  <law@redhat.com>\n+\n+\t* h8300.c (expand_a_shift): Avoid invalid RTL sharing.\n+\n 2008-09-03  Richard Henderson  <rth@redhat.com>\n \n \t* config/alpha/alpha.c (alpha_split_lock_test_and_set): Move"}, {"sha": "4e0970531098d11456465fafdaa332aa9ac7f6e0", "filename": "gcc/config/h8300/h8300.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bc9b880c6075c57c54003869d98c6a249eef7cbd/gcc%2Fconfig%2Fh8300%2Fh8300.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bc9b880c6075c57c54003869d98c6a249eef7cbd/gcc%2Fconfig%2Fh8300%2Fh8300.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fh8300%2Fh8300.c?ref=bc9b880c6075c57c54003869d98c6a249eef7cbd", "patch": "@@ -3659,17 +3659,17 @@ expand_a_shift (enum machine_mode mode, int code, rtx operands[])\n       break;\n     }\n \n-  emit_move_insn (operands[0], operands[1]);\n+  emit_move_insn (copy_rtx (operands[0]), operands[1]);\n \n   /* Need a loop to get all the bits we want  - we generate the\n      code at emit time, but need to allocate a scratch reg now.  */\n \n   emit_insn (gen_rtx_PARALLEL\n \t     (VOIDmode,\n \t      gen_rtvec (2,\n-\t\t\t gen_rtx_SET (VOIDmode, operands[0],\n+\t\t\t gen_rtx_SET (VOIDmode, copy_rtx (operands[0]),\n \t\t\t\t      gen_rtx_fmt_ee (code, mode,\n-\t\t\t\t\t\t      operands[0], operands[2])),\n+\t\t\t\t\t\t      copy_rtx (operands[0]), operands[2])),\n \t\t\t gen_rtx_CLOBBER (VOIDmode,\n \t\t\t\t\t  gen_rtx_SCRATCH (QImode)))));\n   return true;"}]}