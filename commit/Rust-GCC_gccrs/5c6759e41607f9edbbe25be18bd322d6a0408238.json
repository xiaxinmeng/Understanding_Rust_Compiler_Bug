{"sha": "5c6759e41607f9edbbe25be18bd322d6a0408238", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWM2NzU5ZTQxNjA3ZjllZGJiZTI1YmUxOGJkMzIyZDZhMDQwODIzOA==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2021-08-03T14:02:50Z"}, "committer": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2021-08-03T14:40:42Z"}, "message": "libstdc++: Replace TR1 components with C++11 ones in test utils\n\nSigned-off-by: Jonathan Wakely <jwakely@redhat.com>\n\nlibstdc++-v3/ChangeLog:\n\n\t* testsuite/util/testsuite_common_types.h: Replace uses of\n\ttr1::unordered_map and tr1::unordered_set with their C++11\n\tequivalents.\n\t* testsuite/29_atomics/atomic/cons/assign_neg.cc: Adjust\n\tdg-error line number.\n\t* testsuite/29_atomics/atomic/cons/copy_neg.cc: Likewise.\n\t* testsuite/29_atomics/atomic_integral/cons/assign_neg.cc:\n\tLikewise.\n\t* testsuite/29_atomics/atomic_integral/cons/copy_neg.cc:\n\tLikewise.\n\t* testsuite/29_atomics/atomic_integral/operators/bitwise_neg.cc:\n\tLikewise.\n\t* testsuite/29_atomics/atomic_integral/operators/decrement_neg.cc:\n\tLikewise.\n\t* testsuite/29_atomics/atomic_integral/operators/increment_neg.cc:\n\tLikewise.", "tree": {"sha": "de21f46dce4ba6bb34ab204a61bce6882d00b9d2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/de21f46dce4ba6bb34ab204a61bce6882d00b9d2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5c6759e41607f9edbbe25be18bd322d6a0408238", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5c6759e41607f9edbbe25be18bd322d6a0408238", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5c6759e41607f9edbbe25be18bd322d6a0408238", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5c6759e41607f9edbbe25be18bd322d6a0408238/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "13a1ac9f6f700f4e214fcc83b122a4a405c6b13d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/13a1ac9f6f700f4e214fcc83b122a4a405c6b13d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/13a1ac9f6f700f4e214fcc83b122a4a405c6b13d"}], "stats": {"total": 44, "additions": 24, "deletions": 20}, "files": [{"sha": "f0520af8e0d212fe2b059011baeb5ccf55d4d3d7", "filename": "libstdc++-v3/testsuite/29_atomics/atomic/cons/assign_neg.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c6759e41607f9edbbe25be18bd322d6a0408238/libstdc%2B%2B-v3%2Ftestsuite%2F29_atomics%2Fatomic%2Fcons%2Fassign_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c6759e41607f9edbbe25be18bd322d6a0408238/libstdc%2B%2B-v3%2Ftestsuite%2F29_atomics%2Fatomic%2Fcons%2Fassign_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F29_atomics%2Fatomic%2Fcons%2Fassign_neg.cc?ref=5c6759e41607f9edbbe25be18bd322d6a0408238", "patch": "@@ -27,5 +27,5 @@ int main()\n   return 0;\n }\n \n-// { dg-error \"deleted\" \"\" { target *-*-* } 659 }\n+// { dg-error \"deleted\" \"\" { target *-*-* } 663 }\n // { dg-prune-output \"include\" }"}, {"sha": "76bb2d60350eb70f9d879356d998284f4bca4755", "filename": "libstdc++-v3/testsuite/29_atomics/atomic/cons/copy_neg.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c6759e41607f9edbbe25be18bd322d6a0408238/libstdc%2B%2B-v3%2Ftestsuite%2F29_atomics%2Fatomic%2Fcons%2Fcopy_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c6759e41607f9edbbe25be18bd322d6a0408238/libstdc%2B%2B-v3%2Ftestsuite%2F29_atomics%2Fatomic%2Fcons%2Fcopy_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F29_atomics%2Fatomic%2Fcons%2Fcopy_neg.cc?ref=5c6759e41607f9edbbe25be18bd322d6a0408238", "patch": "@@ -27,5 +27,5 @@ int main()\n   return 0;\n }\n \n-// { dg-error \"deleted\" \"\" { target *-*-* } 698 }\n+// { dg-error \"deleted\" \"\" { target *-*-* } 702 }\n // { dg-prune-output \"include\" }"}, {"sha": "8def1559bd411be02dd846238a6efe425e98cfc9", "filename": "libstdc++-v3/testsuite/29_atomics/atomic_integral/cons/assign_neg.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c6759e41607f9edbbe25be18bd322d6a0408238/libstdc%2B%2B-v3%2Ftestsuite%2F29_atomics%2Fatomic_integral%2Fcons%2Fassign_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c6759e41607f9edbbe25be18bd322d6a0408238/libstdc%2B%2B-v3%2Ftestsuite%2F29_atomics%2Fatomic_integral%2Fcons%2Fassign_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F29_atomics%2Fatomic_integral%2Fcons%2Fassign_neg.cc?ref=5c6759e41607f9edbbe25be18bd322d6a0408238", "patch": "@@ -28,5 +28,5 @@ int main()\n   return 0;\n }\n \n-// { dg-error \"deleted\" \"\" { target *-*-* } 659 }\n+// { dg-error \"deleted\" \"\" { target *-*-* } 663 }\n // { dg-prune-output \"include\" }"}, {"sha": "9ef033bd678ba4bfdd8108dd233d560ae8c13dbe", "filename": "libstdc++-v3/testsuite/29_atomics/atomic_integral/cons/copy_neg.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c6759e41607f9edbbe25be18bd322d6a0408238/libstdc%2B%2B-v3%2Ftestsuite%2F29_atomics%2Fatomic_integral%2Fcons%2Fcopy_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c6759e41607f9edbbe25be18bd322d6a0408238/libstdc%2B%2B-v3%2Ftestsuite%2F29_atomics%2Fatomic_integral%2Fcons%2Fcopy_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F29_atomics%2Fatomic_integral%2Fcons%2Fcopy_neg.cc?ref=5c6759e41607f9edbbe25be18bd322d6a0408238", "patch": "@@ -28,5 +28,5 @@ int main()\n   return 0;\n }\n \n-// { dg-error \"deleted\" \"\" { target *-*-* } 698 }\n+// { dg-error \"deleted\" \"\" { target *-*-* } 702 }\n // { dg-prune-output \"include\" }"}, {"sha": "69c307bebae9438f0ae8393b9df8d0e98a64ad99", "filename": "libstdc++-v3/testsuite/29_atomics/atomic_integral/operators/bitwise_neg.cc", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c6759e41607f9edbbe25be18bd322d6a0408238/libstdc%2B%2B-v3%2Ftestsuite%2F29_atomics%2Fatomic_integral%2Foperators%2Fbitwise_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c6759e41607f9edbbe25be18bd322d6a0408238/libstdc%2B%2B-v3%2Ftestsuite%2F29_atomics%2Fatomic_integral%2Foperators%2Fbitwise_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F29_atomics%2Fatomic_integral%2Foperators%2Fbitwise_neg.cc?ref=5c6759e41607f9edbbe25be18bd322d6a0408238", "patch": "@@ -26,8 +26,8 @@ int main()\n   return 0;\n }\n \n-// { dg-error \"operator\" \"\" { target *-*-* } 495 }\n-// { dg-error \"operator\" \"\" { target *-*-* } 496 }\n-// { dg-error \"operator\" \"\" { target *-*-* } 497 }\n+// { dg-error \"operator\" \"\" { target *-*-* } 499 }\n+// { dg-error \"operator\" \"\" { target *-*-* } 500 }\n+// { dg-error \"operator\" \"\" { target *-*-* } 501 }\n \n // { dg-prune-output \"declared here\" }"}, {"sha": "31ce7d0d14943ab39f84053a33fdf4cf4f31d82c", "filename": "libstdc++-v3/testsuite/29_atomics/atomic_integral/operators/decrement_neg.cc", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c6759e41607f9edbbe25be18bd322d6a0408238/libstdc%2B%2B-v3%2Ftestsuite%2F29_atomics%2Fatomic_integral%2Foperators%2Fdecrement_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c6759e41607f9edbbe25be18bd322d6a0408238/libstdc%2B%2B-v3%2Ftestsuite%2F29_atomics%2Fatomic_integral%2Foperators%2Fdecrement_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F29_atomics%2Fatomic_integral%2Foperators%2Fdecrement_neg.cc?ref=5c6759e41607f9edbbe25be18bd322d6a0408238", "patch": "@@ -27,6 +27,6 @@ int main()\n   return 0;\n }\n \n-// { dg-error \"operator\" \"\" { target *-*-* } 447 }\n-// { dg-error \"operator\" \"\" { target *-*-* } 448 }\n-// { dg-error \"operator\" \"\" { target *-*-* } 449 }\n+// { dg-error \"operator\" \"\" { target *-*-* } 451 }\n+// { dg-error \"operator\" \"\" { target *-*-* } 452 }\n+// { dg-error \"operator\" \"\" { target *-*-* } 453 }"}, {"sha": "7df8ff7ecfb4db43da2bdc158ea15cb6ce305f57", "filename": "libstdc++-v3/testsuite/29_atomics/atomic_integral/operators/increment_neg.cc", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c6759e41607f9edbbe25be18bd322d6a0408238/libstdc%2B%2B-v3%2Ftestsuite%2F29_atomics%2Fatomic_integral%2Foperators%2Fincrement_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c6759e41607f9edbbe25be18bd322d6a0408238/libstdc%2B%2B-v3%2Ftestsuite%2F29_atomics%2Fatomic_integral%2Foperators%2Fincrement_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F29_atomics%2Fatomic_integral%2Foperators%2Fincrement_neg.cc?ref=5c6759e41607f9edbbe25be18bd322d6a0408238", "patch": "@@ -27,6 +27,6 @@ int main()\n   return 0;\n }\n \n-// { dg-error \"operator\" \"\" { target *-*-* } 425 }\n-// { dg-error \"operator\" \"\" { target *-*-* } 426 }\n-// { dg-error \"operator\" \"\" { target *-*-* } 427 }\n+// { dg-error \"operator\" \"\" { target *-*-* } 429 }\n+// { dg-error \"operator\" \"\" { target *-*-* } 430 }\n+// { dg-error \"operator\" \"\" { target *-*-* } 431 }"}, {"sha": "9a3152b3a84d30f97a2a6195682fc1fa5ae40a6d", "filename": "libstdc++-v3/testsuite/util/testsuite_common_types.h", "status": "modified", "additions": 11, "deletions": 7, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c6759e41607f9edbbe25be18bd322d6a0408238/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Ftestsuite_common_types.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c6759e41607f9edbbe25be18bd322d6a0408238/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Ftestsuite_common_types.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Ftestsuite_common_types.h?ref=5c6759e41607f9edbbe25be18bd322d6a0408238", "patch": "@@ -40,13 +40,17 @@\n \n #include <map>\n #include <set>\n-#include <tr1/functional>\n-#include <tr1/unordered_map>\n-#include <tr1/unordered_set>\n \n #if __cplusplus >= 201103L\n #include <atomic>\n #include <type_traits>\n+#include <unordered_map>\n+#include <unordered_set>\n+namespace unord = std;\n+#else\n+#include <tr1/unordered_map>\n+#include <tr1/unordered_set>\n+namespace unord = std::tr1;\n #endif\n \n namespace __gnu_test\n@@ -185,14 +189,14 @@ namespace __gnu_test\n       typedef Tp\t\t\t    \t\tvalue_type;\n       typedef Tp \t\t\t\t\tkey_type;\n       typedef std::pair<const key_type, value_type> \tpair_type;\n-      typedef std::tr1::hash<key_type>      \t\thash_function;\n+      typedef unord::hash<key_type>      \t\thash_function;\n       typedef std::equal_to<key_type>      \t\tequality_function;\n \n       template<typename Tl>\n         struct container\n \t{\n \t  typedef Tl \t\t\t\t\tallocator_type;\n-\t  typedef std::tr1::unordered_map<key_type, value_type, hash_function, equality_function, allocator_type>\ttype;\n+\t  typedef unord::unordered_map<key_type, value_type, hash_function, equality_function, allocator_type>\ttype;\n \t};\n \n       typedef allocator_policies<pair_type, Thread>\tallocator_types;\n@@ -224,14 +228,14 @@ namespace __gnu_test\n     {\n       typedef Tp\t\t\t    \t\tvalue_type;\n       typedef Tp \t\t\t\t\tkey_type;\n-      typedef std::tr1::hash<key_type>      \t\thash_function;\n+      typedef unord::hash<key_type>      \t\thash_function;\n       typedef std::equal_to<key_type>      \t\tequality_function;\n \n       template<typename Tl>\n         struct container\n \t{\n \t  typedef Tl \t\t\t\t\tallocator_type;\n-\t  typedef std::tr1::unordered_set<key_type, hash_function, equality_function, allocator_type>\ttype;\n+\t  typedef unord::unordered_set<key_type, hash_function, equality_function, allocator_type>\ttype;\n \t};\n \n       typedef allocator_policies<key_type, Thread>\tallocator_types;"}]}