{"sha": "1cc6c9bd40b6f5d5f57d7706cfaf531bcddfade7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWNjNmM5YmQ0MGI2ZjVkNWY1N2Q3NzA2Y2ZhZjUzMWJjZGRmYWRlNw==", "commit": {"author": {"name": "Zack Weinberg", "email": "zack@rabi.columbia.edu", "date": "1999-04-02T17:20:12Z"}, "committer": {"name": "Zack Weinberg", "email": "zack@gcc.gnu.org", "date": "1999-04-02T17:20:12Z"}, "message": "i386.h: Document all TARGET_SWITCHES or add explicit null initializer.\n\n1999-04-02 20:16 -0500  Zack Weinberg  <zack@rabi.columbia.edu>\n\t* config/i386/i386.h: Document all TARGET_SWITCHES or add\n\texplicit null initializer.\n\t* config/i386/cygwin.h: Document all SUBTARGET_SWITCHES.\n\t* config/i386/dgux.h: Likewise.\n\t* config/i386/osf1elf.h: Likewise.\n\t* config/i386/win32.h: Likewise.\n\t* config/i386/osfrose.h: Likewise.  Drop obsolete -mno-ident option.\n\nFrom-SVN: r26140", "tree": {"sha": "15d9016497ccfca1c964d7c0ed463a34af7c327a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/15d9016497ccfca1c964d7c0ed463a34af7c327a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1cc6c9bd40b6f5d5f57d7706cfaf531bcddfade7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1cc6c9bd40b6f5d5f57d7706cfaf531bcddfade7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1cc6c9bd40b6f5d5f57d7706cfaf531bcddfade7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1cc6c9bd40b6f5d5f57d7706cfaf531bcddfade7/comments", "author": null, "committer": null, "parents": [{"sha": "cb084004ded0d3f8b4a9aebd20d213390f99d5f1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cb084004ded0d3f8b4a9aebd20d213390f99d5f1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cb084004ded0d3f8b4a9aebd20d213390f99d5f1"}], "stats": {"total": 117, "additions": 62, "deletions": 55}, "files": [{"sha": "f1f59181e27cadcc00bde45686b3bdd6a500c6a2", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1cc6c9bd40b6f5d5f57d7706cfaf531bcddfade7/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1cc6c9bd40b6f5d5f57d7706cfaf531bcddfade7/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1cc6c9bd40b6f5d5f57d7706cfaf531bcddfade7", "patch": "@@ -1,3 +1,14 @@\n+1999-04-02 20:16 -0500  Zack Weinberg  <zack@rabi.columbia.edu>\n+\n+\t* config/i386/i386.h: Document all TARGET_SWITCHES or add\n+\texplicit null initializer.\n+\n+\t* config/i386/cygwin.h: Document all SUBTARGET_SWITCHES.\n+\t* config/i386/dgux.h: Likewise.\n+\t* config/i386/osf1elf.h: Likewise.\n+\t* config/i386/win32.h: Likewise.\n+\t* config/i386/osfrose.h: Likewise.  Drop obsolete -mno-ident option.\n+\n Fri Apr  2 17:49:44 1999  Toshiyasu Morita <tm@netcom.com>\n \n \t* regmove.c (fixup_match_1): Remove now useless if (0)."}, {"sha": "78baefc4c4617149bc91d9c95446f2a6c81001fb", "filename": "gcc/config/i386/cygwin.h", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1cc6c9bd40b6f5d5f57d7706cfaf531bcddfade7/gcc%2Fconfig%2Fi386%2Fcygwin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1cc6c9bd40b6f5d5f57d7706cfaf531bcddfade7/gcc%2Fconfig%2Fi386%2Fcygwin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fcygwin.h?ref=1cc6c9bd40b6f5d5f57d7706cfaf531bcddfade7", "patch": "@@ -45,12 +45,12 @@ Boston, MA 02111-1307, USA. */\n \n #undef  SUBTARGET_SWITCHES\n #define SUBTARGET_SWITCHES \\\n-{ \"no-cygwin\",                       MASK_WIN32 }, \\\n-{ \"cygwin\",                          MASK_CYGWIN },  \\\n-{ \"windows\",                         MASK_WINDOWS }, \\\n-{ \"dll\",                             MASK_DLL },     \\\n-{ \"nop-fun-dllimport\",               MASK_NOP_FUN_DLLIMPORT }, \\\n-{ \"no-nop-fun-dllimport\",            MASK_NOP_FUN_DLLIMPORT },\n+{ \"no-cygwin\",                       MASK_WIN32, \"Use the Mingw32 interface\" }, \\\n+{ \"cygwin\",                          MASK_CYGWIN, \"Use the Cygwin interface\" },  \\\n+{ \"windows\",                         MASK_WINDOWS, \"Use the bare Windows interface\" }, \\\n+{ \"dll\",                             MASK_DLL, \"Generate code for a DLL\" },     \\\n+{ \"nop-fun-dllimport\",               MASK_NOP_FUN_DLLIMPORT, \"Ignore dllimport for functions\" }, \\\n+{ \"no-nop-fun-dllimport\",            MASK_NOP_FUN_DLLIMPORT, \"\" },\n \n \n /* Support the __declspec keyword by turning them into attributes."}, {"sha": "6dfc63425196d503ced77fde475b934be5383a48", "filename": "gcc/config/i386/dgux.h", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1cc6c9bd40b6f5d5f57d7706cfaf531bcddfade7/gcc%2Fconfig%2Fi386%2Fdgux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1cc6c9bd40b6f5d5f57d7706cfaf531bcddfade7/gcc%2Fconfig%2Fi386%2Fdgux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fdgux.h?ref=1cc6c9bd40b6f5d5f57d7706cfaf531bcddfade7", "patch": "@@ -47,7 +47,7 @@ Boston, MA 02111-1307, USA.  */\n #define MASK_NOLEGEND\t\t0x20000000 /* Discard legend information */\n #define MASK_EXTERNAL_LEGEND\t0x10000000 /* Make external legends */\n #define MASK_IDENTIFY_REVISION  0x08000000 /* Emit 'ident' to .s */\n-#define MASK_WARN_PASS_STRUCT   0x04000000 /* Emit 'ident' to .s */\n+#define MASK_WARN_PASS_STRUCT   0x04000000 /* Warn when structures are passed */\n \n #define TARGET_STANDARD\t\t  (target_flags & MASK_STANDARD)\n #define TARGET_NOLEGEND\t\t  (target_flags & MASK_NOLEGEND)\n@@ -57,12 +57,12 @@ Boston, MA 02111-1307, USA.  */\n \n #undef  SUBTARGET_SWITCHES\n #define SUBTARGET_SWITCHES \\\n-    { \"standard\",\t\t\t MASK_STANDARD },          \\\n-    { \"legend\",\t\t\t\t-MASK_NOLEGEND },          \\\n-    { \"no-legend\",\t\t\t MASK_NOLEGEND },          \\\n-    { \"external-legend\",\t\t MASK_EXTERNAL_LEGEND },   \\\n-    { \"identify-revision\", \t\t MASK_IDENTIFY_REVISION }, \\\n-    { \"warn-passed-structs\", \t\t MASK_WARN_PASS_STRUCT },\n+    { \"standard\",\t\t\t MASK_STANDARD, \"Retain standard MXDB information\" },          \\\n+    { \"legend\",\t\t\t\t-MASK_NOLEGEND, \"Retain legend information\" },          \\\n+    { \"no-legend\",\t\t\t MASK_NOLEGEND, \"\" },          \\\n+    { \"external-legend\",\t\t MASK_EXTERNAL_LEGEND, \"Generate external legend information\" },   \\\n+    { \"identify-revision\", \t\t MASK_IDENTIFY_REVISION, \"Emit identifying info in .s file\" }, \\\n+    { \"warn-passed-structs\", \t\t MASK_WARN_PASS_STRUCT, \"Warn when a function arg is a structure\" },\n \n #undef  DWARF_DEBUGGING_INFO\n #define DWARF_DEBUGGING_INFO"}, {"sha": "61d6bf85190691146ff8d1dfafa289f3cd10819d", "filename": "gcc/config/i386/i386.h", "status": "modified", "additions": 16, "deletions": 16, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1cc6c9bd40b6f5d5f57d7706cfaf531bcddfade7/gcc%2Fconfig%2Fi386%2Fi386.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1cc6c9bd40b6f5d5f57d7706cfaf531bcddfade7/gcc%2Fconfig%2Fi386%2Fi386.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.h?ref=1cc6c9bd40b6f5d5f57d7706cfaf531bcddfade7", "patch": "@@ -200,24 +200,24 @@ extern const int x86_double_with_add;\n   { \"no-fp-ret-in-387\",\t\t-MASK_FLOAT_RETURNS , \"Do not return values of functions in FPU registers\"},\t\t\t\\\n   { \"no-fancy-math-387\",\t MASK_NO_FANCY_MATH_387, \"Do not generate sin, cos, sqrt for 387\" },\t\t\\\n   { \"fancy-math-387\",\t\t-MASK_NO_FANCY_MATH_387, \"Generate sin, cos, sqrt for FPU\"},\t\t\\\n-  { \"omit-leaf-frame-pointer\",\t MASK_OMIT_LEAF_FRAME_POINTER }, \t\\\n-  { \"no-omit-leaf-frame-pointer\",-MASK_OMIT_LEAF_FRAME_POINTER },       \\\n+  { \"omit-leaf-frame-pointer\",\t MASK_OMIT_LEAF_FRAME_POINTER, \"Omit the frame pointer in leaf functions\" }, \t\\\n+  { \"no-omit-leaf-frame-pointer\",-MASK_OMIT_LEAF_FRAME_POINTER, \"\" },       \\\n   { \"no-wide-multiply\",\t\t MASK_NO_WIDE_MULTIPLY, \"multiplies of 32 bits constrained to 32 bits\" },\t\t\\\n   { \"wide-multiply\",\t\t-MASK_NO_WIDE_MULTIPLY, \"multiplies of 32 bits are 64 bits\" },\t\t\\\n-  { \"schedule-prologue\",\t MASK_SCHEDULE_PROLOGUE },\t\t\\\n-  { \"no-schedule-prologue\",\t-MASK_SCHEDULE_PROLOGUE },\t\t\\\n-  { \"debug-addr\",\t\t MASK_DEBUG_ADDR },\t\t\t\\\n-  { \"no-debug-addr\",\t\t-MASK_DEBUG_ADDR },\t\t\t\\\n-  { \"move\",\t\t\t-MASK_NO_MOVE },\t\t\t\\\n-  { \"no-move\",\t\t\t MASK_NO_MOVE },\t\t\t\\\n-  { \"debug-arg\",\t\t MASK_DEBUG_ARG },\t\t\t\\\n-  { \"no-debug-arg\",\t\t-MASK_DEBUG_ARG },\t\t\t\\\n-  { \"stack-arg-probe\",\t\t MASK_STACK_PROBE },\t\t\t\\\n-  { \"no-stack-arg-probe\",\t-MASK_STACK_PROBE },\t\t\t\\\n-  { \"windows\",\t\t\t0 },\t\t\t\t\t\\\n-  { \"dll\",\t\t\t0 },\t\t\t\t\t\\\n+  { \"schedule-prologue\",\t MASK_SCHEDULE_PROLOGUE, \"Schedule function prologues\" },\t\t\\\n+  { \"no-schedule-prologue\",\t-MASK_SCHEDULE_PROLOGUE, \"\" },\t\t\\\n+  { \"debug-addr\",\t\t MASK_DEBUG_ADDR, 0 /* intentionally undoc */ },\t\t\t\\\n+  { \"no-debug-addr\",\t\t-MASK_DEBUG_ADDR, 0 /* intentionally undoc */ },\t\t\t\\\n+  { \"move\",\t\t\t-MASK_NO_MOVE, \"Generate mem-mem moves\" },\t\t\t\\\n+  { \"no-move\",\t\t\t MASK_NO_MOVE, \"Don't generate mem-mem moves\" },\t\t\t\\\n+  { \"debug-arg\",\t\t MASK_DEBUG_ARG, 0 /* intentionally undoc */ },\t\t\t\\\n+  { \"no-debug-arg\",\t\t-MASK_DEBUG_ARG, 0 /* intentionally undoc */ },\t\t\t\\\n+  { \"stack-arg-probe\",\t\t MASK_STACK_PROBE, \"Enable stack probing\" },\t\t\t\\\n+  { \"no-stack-arg-probe\",\t-MASK_STACK_PROBE, \"\" },\t\t\t\\\n+  { \"windows\",\t\t\t0, 0 /* intentionally undoc */ },\t\t\t\t\t\\\n+  { \"dll\",\t\t\t0, 0 /* intentionally undoc */ },\t\t\t\t\t\\\n   SUBTARGET_SWITCHES\t\t\t\t\t\t\t\\\n-  { \"\", MASK_SCHEDULE_PROLOGUE | TARGET_DEFAULT}}\n+  { \"\", MASK_SCHEDULE_PROLOGUE | TARGET_DEFAULT, 0 }}\n \n /* Which processor to schedule for. The cpu attribute defines a list that\n    mirrors this list, so changes to i386.md must be made at the same time.  */\n@@ -267,7 +267,7 @@ extern int ix86_arch;\n   { \"align-loops=\",\t&i386_align_loops_string, \"Loop code aligned to this power of 2\" }, \\\n   { \"align-jumps=\",\t&i386_align_jumps_string, \"Jump targets are aligned to this power of 2\" }, \\\n   { \"align-functions=\",\t&i386_align_funcs_string, \"Function starts are aligned to this power of 2\" }, \\\n-  { \"branch-cost=\",\t&i386_branch_cost_string },\t\t\t\\\n+  { \"branch-cost=\",\t&i386_branch_cost_string, \"Branches are this expensive (1-5, arbitrary units)\" },\t\t\t\\\n   SUBTARGET_OPTIONS\t\t\t\t\t\t\t\\\n }\n "}, {"sha": "003400b0dfeadb6c41e0067dd540052c2b3f5d97", "filename": "gcc/config/i386/osf1elf.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1cc6c9bd40b6f5d5f57d7706cfaf531bcddfade7/gcc%2Fconfig%2Fi386%2Fosf1elf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1cc6c9bd40b6f5d5f57d7706cfaf531bcddfade7/gcc%2Fconfig%2Fi386%2Fosf1elf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fosf1elf.h?ref=1cc6c9bd40b6f5d5f57d7706cfaf531bcddfade7", "patch": "@@ -121,8 +121,8 @@ extern char *sys_siglist[];\n \n #undef\tSUBTARGET_SWITCHES\n #define SUBTARGET_SWITCHES\t\t\t\t\t\t\\\n-     { \"mcount\",\t\t-MASK_NO_MCOUNT},\t\t\t\\\n-     { \"no-mcount\",\t\t MASK_NO_MCOUNT},\n+     { \"mcount\",\t\t-MASK_NO_MCOUNT, \"Profiling uses mcount\" },\t\t\t\\\n+     { \"no-mcount\",\t\t MASK_NO_MCOUNT, \"\" },\n \n /* This macro generates the assembly code for function entry.\n    FILE is a stdio stream to output the code to."}, {"sha": "9ad9f952d5725b03c3051809da4ff5df1ead0e57", "filename": "gcc/config/i386/osfrose.h", "status": "modified", "additions": 14, "deletions": 18, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1cc6c9bd40b6f5d5f57d7706cfaf531bcddfade7/gcc%2Fconfig%2Fi386%2Fosfrose.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1cc6c9bd40b6f5d5f57d7706cfaf531bcddfade7/gcc%2Fconfig%2Fi386%2Fosfrose.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fosfrose.h?ref=1cc6c9bd40b6f5d5f57d7706cfaf531bcddfade7", "patch": "@@ -43,7 +43,6 @@ Boston, MA 02111-1307, USA.  */\n #define MASK_HALF_PIC     \t010000000000\t/* Mask for half-pic code */\n #define MASK_HALF_PIC_DEBUG     004000000000\t/* Debug flag */\n #define MASK_ELF\t\t002000000000\t/* ELF not rose */\n-#define MASK_NO_IDENT\t\t001000000000\t/* suppress .ident */\n #define MASK_NO_UNDERSCORES\t000400000000\t/* suppress leading _ */\n #define MASK_LARGE_ALIGN\t000200000000\t/* align to >word boundaries */\n #define MASK_NO_MCOUNT\t\t000100000000\t/* profiling uses mcount_ptr */\n@@ -53,28 +52,25 @@ Boston, MA 02111-1307, USA.  */\n #define HALF_PIC_DEBUG\t\tTARGET_DEBUG\n #define TARGET_ELF\t\t(target_flags & MASK_ELF)\n #define TARGET_ROSE\t\t((target_flags & MASK_ELF) == 0)\n-#define TARGET_IDENT\t\t((target_flags & MASK_NO_IDENT) == 0)\n #define TARGET_UNDERSCORES\t((target_flags & MASK_NO_UNDERSCORES) == 0)\n #define TARGET_LARGE_ALIGN\t(target_flags & MASK_LARGE_ALIGN)\n #define TARGET_MCOUNT\t\t((target_flags & MASK_NO_MCOUNT) == 0)\n \n #undef\tSUBTARGET_SWITCHES\n #define SUBTARGET_SWITCHES\t\t\t\t\t\t\\\n-     { \"half-pic\",\t\t MASK_HALF_PIC},\t\t\t\\\n-     { \"no-half-pic\",\t\t-MASK_HALF_PIC},\t\t\t\\\n-     { \"debug-half-pic\",\t MASK_HALF_PIC_DEBUG},\t\t\t\\\n-     { \"debugb\",\t\t MASK_HALF_PIC_DEBUG},\t\t\t\\\n-     { \"elf\",\t\t\t MASK_ELF},\t\t\t\t\\\n-     { \"rose\",\t\t\t-MASK_ELF},\t\t\t\t\\\n-     { \"ident\",\t\t\t-MASK_NO_IDENT},\t\t\t\\\n-     { \"no-ident\",\t\t MASK_NO_IDENT},\t\t\t\\\n-     { \"underscores\",\t\t-MASK_NO_UNDERSCORES},\t\t\t\\\n-     { \"no-underscores\",\t MASK_NO_UNDERSCORES},\t\t\t\\\n-     { \"large-align\",\t\t MASK_LARGE_ALIGN},\t\t\t\\\n-     { \"no-large-align\",\t-MASK_LARGE_ALIGN},\t\t\t\\\n-     { \"mcount\",\t\t-MASK_NO_MCOUNT},\t\t\t\\\n-     { \"mcount-ptr\",\t\t MASK_NO_MCOUNT},\t\t\t\\\n-     { \"no-mcount\",\t\t MASK_NO_MCOUNT},\n+     { \"half-pic\",\t\t MASK_HALF_PIC, \"Emit half-PIC code\" },\t\t\t\\\n+     { \"no-half-pic\",\t\t-MASK_HALF_PIC, \"\" }\t\t\t\\\n+     { \"debug-half-pic\",\t MASK_HALF_PIC_DEBUG, 0 /* intentionally undoc */ },\t\t\t\\\n+     { \"debugb\",\t\t MASK_HALF_PIC_DEBUG, 0 /* intentionally undoc */ },\t\t\t\\\n+     { \"elf\",\t\t\t MASK_ELF, \"Emit ELF object code\" },\t\t\t\t\\\n+     { \"rose\",\t\t\t-MASK_ELF, \"Emit ROSE object code\" },\t\t\t\t\\\n+     { \"underscores\",\t\t-MASK_NO_UNDERSCORES, \"Symbols have a leading underscore\" },\t\t\t\\\n+     { \"no-underscores\",\t MASK_NO_UNDERSCORES, \"\" },\t\t\t\\\n+     { \"large-align\",\t\t MASK_LARGE_ALIGN, \"Align to >word boundaries\" },\t\t\t\\\n+     { \"no-large-align\",\t-MASK_LARGE_ALIGN, \"\" },\t\t\t\\\n+     { \"mcount\",\t\t-MASK_NO_MCOUNT, \"Use mcount for profiling\" },\t\t\t\\\n+     { \"mcount-ptr\",\t\t MASK_NO_MCOUNT, \"Use mcount_ptr for profiling\" },\t\t\t\\\n+     { \"no-mcount\",\t\t MASK_NO_MCOUNT, \"\" },\n \n /* OSF/rose uses stabs, not dwarf.  */\n #define PREFERRED_DEBUGGING_TYPE DBX_DEBUG\n@@ -752,7 +748,7 @@ do\t\t\t\t\t\t\t\t\t\\\n     if (HALF_PIC_P ())\t\t\t\t\t\t\t\\\n       HALF_PIC_FINISH (STREAM);\t\t\t\t\t\t\\\n \t\t\t\t\t\t\t\t\t\\\n-    if (TARGET_IDENT && !flag_no_ident)\t\t\t\t\t\\\n+    if (!flag_no_ident)\t\t\t\t\t\t\t\\\n       {\t\t\t\t\t\t\t\t\t\\\n \tchar *fstart = main_input_filename;\t\t\t\t\\\n \tchar *fname;\t\t\t\t\t\t\t\\"}, {"sha": "d62abbf16d8bb390bb2197b8312afbdaf58473c7", "filename": "gcc/config/i386/win32.h", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1cc6c9bd40b6f5d5f57d7706cfaf531bcddfade7/gcc%2Fconfig%2Fi386%2Fwin32.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1cc6c9bd40b6f5d5f57d7706cfaf531bcddfade7/gcc%2Fconfig%2Fi386%2Fwin32.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fwin32.h?ref=1cc6c9bd40b6f5d5f57d7706cfaf531bcddfade7", "patch": "@@ -48,12 +48,12 @@ Boston, MA 02111-1307, USA. */\n \n #undef  SUBTARGET_SWITCHES\n #define SUBTARGET_SWITCHES \\\n-    { \"win32\",                           MASK_WIN32 }, \\\n-    { \"cygwin\",                          MASK_CYGWIN },  \\\n-    { \"windows\",                         MASK_WINDOWS }, \\\n-    { \"dll\",                             MASK_DLL },     \\\n-    { \"nop-fun-dllimport\",\t\t MASK_NOP_FUN_DLLIMPORT }, \\\n-    { \"no-nop-fun-dllimport\",\t\t MASK_NOP_FUN_DLLIMPORT },\n+    { \"win32\",                           MASK_WIN32, \"Use Mingw32 interface\" }, \\\n+    { \"cygwin\",                          MASK_CYGWIN, \"Use Cygwin interface\"  },  \\\n+    { \"windows\",                         MASK_WINDOWS, \"Use bare Windows interface\" }, \\\n+    { \"dll\",                             MASK_DLL, \"Generate code for a DLL\" },     \\\n+    { \"nop-fun-dllimport\",\t\t MASK_NOP_FUN_DLLIMPORT, \"Ignore dllimport for functions\" }, \\\n+    { \"no-nop-fun-dllimport\",\t\t MASK_NOP_FUN_DLLIMPORT, \"\" },\n \n \n #undef CPP_PREDEFINES"}]}