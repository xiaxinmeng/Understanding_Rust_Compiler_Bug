{"sha": "dcc1e1fab49e2b2d000b22f0053c0ffe53c44b14", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGNjMWUxZmFiNDllMmIyZDAwMGIyMmYwMDUzYzBmZmU1M2M0NGIxNA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2009-12-21T16:32:44Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2009-12-21T16:32:44Z"}, "message": "re PR rtl-optimization/42429 (Miscompilation of 2fish on s390)\n\n\tPR rtl-optimization/42429\n\t* reload.c (find_reloads_subreg_address): When adjusting mode of\n\tMEM, update also MEM_SIZE if it is set.\n\nFrom-SVN: r155374", "tree": {"sha": "72b4a917e97d1d4beed7033890296db23fc20002", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/72b4a917e97d1d4beed7033890296db23fc20002"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dcc1e1fab49e2b2d000b22f0053c0ffe53c44b14", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dcc1e1fab49e2b2d000b22f0053c0ffe53c44b14", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dcc1e1fab49e2b2d000b22f0053c0ffe53c44b14", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dcc1e1fab49e2b2d000b22f0053c0ffe53c44b14/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "938a483f0d2d55bdb68b5f435750c22e5f6d0b95", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/938a483f0d2d55bdb68b5f435750c22e5f6d0b95", "html_url": "https://github.com/Rust-GCC/gccrs/commit/938a483f0d2d55bdb68b5f435750c22e5f6d0b95"}], "stats": {"total": 9, "additions": 9, "deletions": 0}, "files": [{"sha": "4dde7e48f032e09c869ed0094542c039e7d979e0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dcc1e1fab49e2b2d000b22f0053c0ffe53c44b14/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dcc1e1fab49e2b2d000b22f0053c0ffe53c44b14/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=dcc1e1fab49e2b2d000b22f0053c0ffe53c44b14", "patch": "@@ -1,3 +1,9 @@\n+2009-12-21  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR rtl-optimization/42429\n+\t* reload.c (find_reloads_subreg_address): When adjusting mode of\n+\tMEM, update also MEM_SIZE if it is set.\n+\n 2009-12-21  H.J. Lu  <hongjiu.lu@intel.com>\n \n \tPR bootstrap/42345"}, {"sha": "4601b4aeacd672fc09e80c410626c449b3a66484", "filename": "gcc/reload.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dcc1e1fab49e2b2d000b22f0053c0ffe53c44b14/gcc%2Freload.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dcc1e1fab49e2b2d000b22f0053c0ffe53c44b14/gcc%2Freload.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freload.c?ref=dcc1e1fab49e2b2d000b22f0053c0ffe53c44b14", "patch": "@@ -6149,6 +6149,9 @@ find_reloads_subreg_address (rtx x, int force_replace, int opnum,\n \t      PUT_MODE (tem, GET_MODE (x));\n \t      if (MEM_OFFSET (tem))\n \t\tset_mem_offset (tem, plus_constant (MEM_OFFSET (tem), offset));\n+\t      if (MEM_SIZE (tem)\n+\t\t  && INTVAL (MEM_SIZE (tem)) != (HOST_WIDE_INT) outer_size)\n+\t\tset_mem_size (tem, GEN_INT (outer_size));\n \n \t      /* If this was a paradoxical subreg that we replaced, the\n \t\t resulting memory must be sufficiently aligned to allow"}]}