{"sha": "a2531859bf5bf6cf1f29c0dca85fd26e80904a5d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTI1MzE4NTliZjViZjZjZjFmMjljMGRjYTg1ZmQyNmU4MDkwNGE1ZA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2021-03-31T00:31:18Z"}, "committer": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2021-03-31T13:58:37Z"}, "message": "c++: Alias template in pack expansion [PR99445]\n\nIn this testcase, iterative_hash_template_arg checks\nalias_template_specialization_p to determine whether to treat a type as a\ndependent alias, and structural_comptypes checks\ndependent_alias_template_spec_p.  Normally that difference isn't a problem\nbecause canonicalizing template arguments strips non-dependent aliases, but\nthat wasn't happening for the pack expansion.  Fixed thus.\n\ngcc/cp/ChangeLog:\n\n\tPR c++/99445\n\t* tree.c (strip_typedefs): Handle TYPE_PACK_EXPANSION.\n\ngcc/testsuite/ChangeLog:\n\n\tPR c++/99445\n\t* g++.dg/cpp0x/alias-decl-variadic1.C: New test.", "tree": {"sha": "00067cc3699817b172593356723f2d4a191b1b2e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/00067cc3699817b172593356723f2d4a191b1b2e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a2531859bf5bf6cf1f29c0dca85fd26e80904a5d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a2531859bf5bf6cf1f29c0dca85fd26e80904a5d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a2531859bf5bf6cf1f29c0dca85fd26e80904a5d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a2531859bf5bf6cf1f29c0dca85fd26e80904a5d/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "05de07136a8c288086def19fa7a6ed817e26c6aa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/05de07136a8c288086def19fa7a6ed817e26c6aa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/05de07136a8c288086def19fa7a6ed817e26c6aa"}], "stats": {"total": 23, "additions": 23, "deletions": 0}, "files": [{"sha": "dca947bf52a9392de42355e5b05801a1f3413685", "filename": "gcc/cp/tree.c", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2531859bf5bf6cf1f29c0dca85fd26e80904a5d/gcc%2Fcp%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2531859bf5bf6cf1f29c0dca85fd26e80904a5d/gcc%2Fcp%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftree.c?ref=a2531859bf5bf6cf1f29c0dca85fd26e80904a5d", "patch": "@@ -1722,6 +1722,15 @@ strip_typedefs (tree t, bool *remove_attributes, unsigned int flags)\n \t\t\t     remove_attributes, flags);\n       result = finish_underlying_type (type);\n       break;\n+    case TYPE_PACK_EXPANSION:\n+      type = strip_typedefs (PACK_EXPANSION_PATTERN (t),\n+\t\t\t     remove_attributes, flags);\n+      if (type != PACK_EXPANSION_PATTERN (t))\n+\t{\n+\t  result = copy_node (t);\n+\t  PACK_EXPANSION_PATTERN (result) = type;\n+\t}\n+      break;\n     default:\n       break;\n     }"}, {"sha": "68b3a7fd009cf7f94bc1d2f2054f5cc39efd4a46", "filename": "gcc/testsuite/g++.dg/cpp0x/alias-decl-variadic1.C", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2531859bf5bf6cf1f29c0dca85fd26e80904a5d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Falias-decl-variadic1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2531859bf5bf6cf1f29c0dca85fd26e80904a5d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Falias-decl-variadic1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Falias-decl-variadic1.C?ref=a2531859bf5bf6cf1f29c0dca85fd26e80904a5d", "patch": "@@ -0,0 +1,14 @@\n+// PR c++/99445\n+// { dg-do compile { target c++11 } }\n+// { dg-additional-options \"-fchecking=2 --param=hash-table-verification-limit=1000\" }\n+\n+template <class> struct implicit_conversions;\n+template <class T>\n+using implicit_conversions_t = typename implicit_conversions<T>::type;\n+template <class...> struct response_type;\n+\n+template <class Handle, class... Ts>\n+using type1 = response_type<implicit_conversions_t<Ts>...>;\n+\n+template <class Handle, class... Ts>\n+using type2 = response_type<typename implicit_conversions<Ts>::type...>;"}]}