{"sha": "5faf03ae77a43db0e5a685a01eb5b4023b09638f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWZhZjAzYWU3N2E0M2RiMGU1YTY4NWEwMWViNWI0MDIzYjA5NjM4Zg==", "commit": {"author": {"name": "Mark Mitchell", "email": "mark@codesourcery.com", "date": "1999-10-29T09:49:23Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "1999-10-29T09:49:23Z"}, "message": "except.c (free_eh_nesting_info): Free the info itself.\n\n\t* except.c (free_eh_nesting_info): Free the info itself.\n\t* function.c (free_after_compilation): Don't free NULL.\n\t* gcse.c (alloc_pre_mem): Free the temp_bitmap, too.\n\t(pre_edge_insert): Free inserted.\n\t* stmt.c (free_stmt_status): Don't free NULL.\n\nFrom-SVN: r30255", "tree": {"sha": "610028a55913271a69abf4d597b12ed1df6999c0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/610028a55913271a69abf4d597b12ed1df6999c0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5faf03ae77a43db0e5a685a01eb5b4023b09638f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5faf03ae77a43db0e5a685a01eb5b4023b09638f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5faf03ae77a43db0e5a685a01eb5b4023b09638f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5faf03ae77a43db0e5a685a01eb5b4023b09638f/comments", "author": null, "committer": null, "parents": [{"sha": "3baa501d812db77b1957928294a753c372104afb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3baa501d812db77b1957928294a753c372104afb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3baa501d812db77b1957928294a753c372104afb"}], "stats": {"total": 23, "additions": 19, "deletions": 4}, "files": [{"sha": "3680ac3bf0be8cfd66d9e557b9151a407fabdd8e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5faf03ae77a43db0e5a685a01eb5b4023b09638f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5faf03ae77a43db0e5a685a01eb5b4023b09638f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5faf03ae77a43db0e5a685a01eb5b4023b09638f", "patch": "@@ -1,3 +1,11 @@\n+Fri Oct 29 02:51:35 1999  Mark Mitchell  <mark@codesourcery.com>\n+\n+\t* except.c (free_eh_nesting_info): Free the info itself.\n+\t* function.c (free_after_compilation): Don't free NULL.\n+\t* gcse.c (alloc_pre_mem): Free the temp_bitmap, too.\n+\t(pre_edge_insert): Free inserted.\n+\t* stmt.c (free_stmt_status): Don't free NULL.\n+\n 1999-10-28 21:27 -0700  Zack Weinberg  <zack@bitmover.com>\n \n \t* cpplib.h (struct cpp_buffer: fname, nominal_fname,"}, {"sha": "c6f7bf5f6f265899af8c108752860a8f71886d4d", "filename": "gcc/except.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5faf03ae77a43db0e5a685a01eb5b4023b09638f/gcc%2Fexcept.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5faf03ae77a43db0e5a685a01eb5b4023b09638f/gcc%2Fexcept.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexcept.c?ref=5faf03ae77a43db0e5a685a01eb5b4023b09638f", "patch": "@@ -3297,5 +3297,6 @@ free_eh_nesting_info (info)\n \t      free (info->handlers[x]);\n \t  free (info->handlers);\n \t}\n+      free (info);\n     }\n }"}, {"sha": "d5cdc2610cc5bfd05a73bf82a8c6a8d3b961712f", "filename": "gcc/function.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5faf03ae77a43db0e5a685a01eb5b4023b09638f/gcc%2Ffunction.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5faf03ae77a43db0e5a685a01eb5b4023b09638f/gcc%2Ffunction.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffunction.c?ref=5faf03ae77a43db0e5a685a01eb5b4023b09638f", "patch": "@@ -426,7 +426,8 @@ free_after_compilation (f)\n   if (free_machine_status)\n     (*free_machine_status) (f);\n \n-  free (f->x_parm_reg_stack_loc);\n+  if (f->x_parm_reg_stack_loc)\n+    free (f->x_parm_reg_stack_loc);\n \n   f->arg_offset_rtx = NULL;\n   f->return_rtx = NULL;"}, {"sha": "7c0a1152fed73fb1249ea2014ab6640f08099d79", "filename": "gcc/gcse.c", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5faf03ae77a43db0e5a685a01eb5b4023b09638f/gcc%2Fgcse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5faf03ae77a43db0e5a685a01eb5b4023b09638f/gcc%2Fgcse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcse.c?ref=5faf03ae77a43db0e5a685a01eb5b4023b09638f", "patch": "@@ -4108,8 +4108,8 @@ alloc_pre_mem (n_blocks, n_exprs)\n   transp = sbitmap_vector_alloc (n_blocks, n_exprs);\n   comp = sbitmap_vector_alloc (n_blocks, n_exprs);\n   antloc = sbitmap_vector_alloc (n_blocks, n_exprs);\n-\n   temp_bitmap = sbitmap_vector_alloc (n_blocks, n_exprs);\n+\n   pre_optimal = NULL;\n   pre_redundant = NULL;\n   pre_insert_map = NULL;\n@@ -4130,6 +4130,7 @@ free_pre_mem ()\n   free (transp);\n   free (comp);\n   free (antloc);\n+  free (temp_bitmap);\n \n   if (pre_optimal)\n     free (pre_optimal);\n@@ -4535,6 +4536,10 @@ pre_edge_insert (edge_list, index_map)\n \t    }\n \t}\n     }\n+\n+  /* Clean up.  */\n+  free (inserted);\n+\n   return did_insert;\n }\n "}, {"sha": "f47e9fa45079a66f720aa899c9c517c5752f463b", "filename": "gcc/stmt.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5faf03ae77a43db0e5a685a01eb5b4023b09638f/gcc%2Fstmt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5faf03ae77a43db0e5a685a01eb5b4023b09638f/gcc%2Fstmt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fstmt.c?ref=5faf03ae77a43db0e5a685a01eb5b4023b09638f", "patch": "@@ -559,8 +559,8 @@ free_stmt_status (f)\n   /* We're about to free the function obstack.  If we hold pointers to\n      things allocated there, then we'll try to mark them when we do\n      GC.  So, we clear them out here explicitly.  */\n-\n-  free (f->stmt);\n+  if (f->stmt)\n+    free (f->stmt);\n   f->stmt = NULL;\n }\n "}]}