{"sha": "eb84665417392d14376924f295b4cf0139412d20", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWI4NDY2NTQxNzM5MmQxNDM3NjkyNGYyOTViNGNmMDEzOTQxMmQyMA==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@cs.umass.edu", "date": "2004-10-22T19:48:43Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2004-10-22T19:48:43Z"}, "message": "sbitmap.h (EXECUTE_IF_SET_IN_SBITMAP): Don't access PTR beyond its end.\n\n\t* sbitmap.h (EXECUTE_IF_SET_IN_SBITMAP): Don't access PTR\n\tbeyond its end.\n\nFrom-SVN: r89475", "tree": {"sha": "db8ff49ee7fb6185b65238bded5ea7be9e7671f7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/db8ff49ee7fb6185b65238bded5ea7be9e7671f7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/eb84665417392d14376924f295b4cf0139412d20", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eb84665417392d14376924f295b4cf0139412d20", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eb84665417392d14376924f295b4cf0139412d20", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eb84665417392d14376924f295b4cf0139412d20/comments", "author": null, "committer": null, "parents": [{"sha": "94ff898d42eb5f11724e951d7662cf777f1abc44", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/94ff898d42eb5f11724e951d7662cf777f1abc44", "html_url": "https://github.com/Rust-GCC/gccrs/commit/94ff898d42eb5f11724e951d7662cf777f1abc44"}], "stats": {"total": 28, "additions": 20, "deletions": 8}, "files": [{"sha": "5fd6a3d1c4c1c31118bab20678ce2716e6296271", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb84665417392d14376924f295b4cf0139412d20/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb84665417392d14376924f295b4cf0139412d20/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=eb84665417392d14376924f295b4cf0139412d20", "patch": "@@ -1,3 +1,8 @@\n+2004-10-22  Kazu Hirata  <kazu@cs.umass.edu>\n+\n+\t* sbitmap.h (EXECUTE_IF_SET_IN_SBITMAP): Don't access PTR\n+\tbeyond its end.\n+\n 2004-10-22  Eric Christopher  <echristo@redhat.com>\n \n         * config/rs6000/rs6000.c (setup_incoming_varargs): Align DFmode"}, {"sha": "779a99611293d22625ef121e7c388640da10bf89", "filename": "gcc/sbitmap.h", "status": "modified", "additions": 15, "deletions": 8, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb84665417392d14376924f295b4cf0139412d20/gcc%2Fsbitmap.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb84665417392d14376924f295b4cf0139412d20/gcc%2Fsbitmap.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsbitmap.h?ref=eb84665417392d14376924f295b4cf0139412d20", "patch": "@@ -62,19 +62,26 @@ do {\t\t\t\t\t\t\t\t\t\\\n   unsigned int bit_num_ = (MIN) % (unsigned int) SBITMAP_ELT_BITS;\t\\\n   unsigned int size_ = (SBITMAP)->size;\t\t\t\t\t\\\n   SBITMAP_ELT_TYPE *ptr_ = (SBITMAP)->elms;\t\t\t\t\\\n-  SBITMAP_ELT_TYPE word_ = ptr_[word_num_] >> bit_num_;\t\t\t\\\n+  SBITMAP_ELT_TYPE word_;\t\t\t\t\t\t\\\n \t\t\t\t\t\t\t\t\t\\\n-  for (;\t\t\t\t\t\t\t\t\\\n-       word_num_ < size_;\t\t\t\t\t\t\\\n-       word_num_++, bit_num_ = 0, word_ = ptr_[word_num_])\t\t\\\n+  if (word_num_ < size_)\t\t\t\t\t\t\\\n     {\t\t\t\t\t\t\t\t\t\\\n-      for (; word_ != 0; word_ >>= 1, bit_num_++)\t\t\t\\\n+      word_ = ptr_[word_num_] >> bit_num_;\t\t\t\t\\\n+\t\t\t\t\t\t\t\t\t\\\n+      while (1)\t\t\t\t\t\t\t\t\\\n \t{\t\t\t\t\t\t\t\t\\\n-\t  if ((word_ & 1) != 0)\t\t\t\t\t\t\\\n+\t  for (; word_ != 0; word_ >>= 1, bit_num_++)\t\t\t\\\n \t    {\t\t\t\t\t\t\t\t\\\n-\t      (N) = word_num_ * SBITMAP_ELT_BITS + bit_num_;\t\t\\\n-\t      CODE;\t\t\t\t\t\t\t\\\n+\t      if ((word_ & 1) != 0)\t\t\t\t\t\\\n+\t\t{\t\t\t\t\t\t\t\\\n+\t\t  (N) = word_num_ * SBITMAP_ELT_BITS + bit_num_;\t\\\n+\t\t  CODE;\t\t\t\t\t\t\t\\\n+\t\t}\t\t\t\t\t\t\t\\\n \t    }\t\t\t\t\t\t\t\t\\\n+\t  word_num_++;\t\t\t\t\t\t\t\\\n+\t  if (word_num_ >= size_)\t\t\t\t\t\\\n+\t    break;\t\t\t\t\t\t\t\\\n+\t  bit_num_ = 0, word_ = ptr_[word_num_];\t\t\t\\\n \t}\t\t\t\t\t\t\t\t\\\n     }\t\t\t\t\t\t\t\t\t\\\n } while (0)"}]}