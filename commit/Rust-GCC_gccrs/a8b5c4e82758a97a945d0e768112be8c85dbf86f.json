{"sha": "a8b5c4e82758a97a945d0e768112be8c85dbf86f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YThiNWM0ZTgyNzU4YTk3YTk0NWQwZTc2ODExMmJlOGM4NWRiZjg2Zg==", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2011-11-01T22:46:07Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2011-11-01T22:46:07Z"}, "message": "i386.md (splitters for int-float conversion): Use SUBREG_REG on SUBREGs in splitter constraints.\n\n\t* config/i386/i386.md (splitters for int-float conversion): Use\n\tSUBREG_REG on SUBREGs in splitter constraints.\n\nFrom-SVN: r180748", "tree": {"sha": "7506334effdd794cb22dd6d3158d73e865342ce2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7506334effdd794cb22dd6d3158d73e865342ce2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a8b5c4e82758a97a945d0e768112be8c85dbf86f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a8b5c4e82758a97a945d0e768112be8c85dbf86f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a8b5c4e82758a97a945d0e768112be8c85dbf86f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a8b5c4e82758a97a945d0e768112be8c85dbf86f/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f4496f0fecea4060d1a6e036d80b092aa564f7f3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f4496f0fecea4060d1a6e036d80b092aa564f7f3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f4496f0fecea4060d1a6e036d80b092aa564f7f3"}], "stats": {"total": 38, "additions": 28, "deletions": 10}, "files": [{"sha": "771a4a2e6b8859aebe310287db5bbe38a8441973", "filename": "gcc/ChangeLog", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a8b5c4e82758a97a945d0e768112be8c85dbf86f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a8b5c4e82758a97a945d0e768112be8c85dbf86f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a8b5c4e82758a97a945d0e768112be8c85dbf86f", "patch": "@@ -5,7 +5,7 @@\n 2011-11-01  Uros Bizjak  <ubizjak@gmail.com>\n \n \t* config/i386/i386.md (splitters for int-float conversion): Use\n-\treg_or_subregno in splitter constraints.\n+\tSUBREG_REG on SUBREGs in splitter constraints.\n \n 2011-11-01  Jakub Jelinek  <jakub@redhat.com>\n "}, {"sha": "11c866bff22afea370e6d5e8ec7a390f9c4b8499", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 27, "deletions": 9, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a8b5c4e82758a97a945d0e768112be8c85dbf86f/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a8b5c4e82758a97a945d0e768112be8c85dbf86f/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=a8b5c4e82758a97a945d0e768112be8c85dbf86f", "patch": "@@ -4920,7 +4920,9 @@\n    && SSE_FLOAT_MODE_P (<MODEF:MODE>mode) && TARGET_MIX_SSE_I387\n    && TARGET_INTER_UNIT_CONVERSIONS\n    && reload_completed\n-   && SSE_REGNO_P (reg_or_subregno (operands[0]))\"\n+   && (SSE_REG_P (operands[0])\n+       || (GET_CODE (operands[0]) == SUBREG\n+\t   && SSE_REG_P (SUBREG_REG (operands[0]))))\"\n   [(set (match_dup 0) (float:MODEF (match_dup 1)))])\n \n (define_split\n@@ -4931,7 +4933,9 @@\n    && SSE_FLOAT_MODE_P (<MODEF:MODE>mode) && TARGET_MIX_SSE_I387\n    && !(TARGET_INTER_UNIT_CONVERSIONS || optimize_function_for_size_p (cfun))\n    && reload_completed\n-   && SSE_REGNO_P (reg_or_subregno (operands[0]))\"\n+   && (SSE_REG_P (operands[0])\n+       || (GET_CODE (operands[0]) == SUBREG\n+\t   && SSE_REG_P (SUBREG_REG (operands[0]))))\"\n   [(set (match_dup 2) (match_dup 1))\n    (set (match_dup 0) (float:MODEF (match_dup 2)))])\n \n@@ -5020,7 +5024,9 @@\n   \"TARGET_SSE2 && TARGET_SSE_MATH\n    && TARGET_USE_VECTOR_CONVERTS && optimize_function_for_speed_p (cfun)\n    && reload_completed\n-   && SSE_REGNO_P (reg_or_subregno (operands[0]))\"\n+   && (SSE_REG_P (operands[0])\n+       || (GET_CODE (operands[0]) == SUBREG\n+\t   && SSE_REG_P (SUBREG_REG (operands[0]))))\"\n   [(const_int 0)]\n {\n   rtx op1 = operands[1];\n@@ -5061,7 +5067,9 @@\n   \"TARGET_SSE2 && TARGET_SSE_MATH\n    && TARGET_USE_VECTOR_CONVERTS && optimize_function_for_speed_p (cfun)\n    && reload_completed\n-   && SSE_REGNO_P (reg_or_subregno (operands[0]))\"\n+   && (SSE_REG_P (operands[0])\n+       || (GET_CODE (operands[0]) == SUBREG\n+\t   && SSE_REG_P (SUBREG_REG (operands[0]))))\"\n   [(const_int 0)]\n {\n   operands[3] = simplify_gen_subreg (<ssevecmode>mode, operands[0],\n@@ -5083,7 +5091,9 @@\n   \"TARGET_SSE2 && TARGET_SSE_MATH\n    && TARGET_USE_VECTOR_CONVERTS && optimize_function_for_speed_p (cfun)\n    && reload_completed\n-   && SSE_REGNO_P (reg_or_subregno (operands[0]))\"\n+   && (SSE_REG_P (operands[0])\n+       || (GET_CODE (operands[0]) == SUBREG\n+\t   && SSE_REG_P (SUBREG_REG (operands[0]))))\"\n   [(const_int 0)]\n {\n   rtx op1 = operands[1];\n@@ -5127,7 +5137,9 @@\n   \"TARGET_SSE2 && TARGET_SSE_MATH\n    && TARGET_USE_VECTOR_CONVERTS && optimize_function_for_speed_p (cfun)\n    && reload_completed\n-   && SSE_REGNO_P (reg_or_subregno (operands[0]))\"\n+   && (SSE_REG_P (operands[0])\n+       || (GET_CODE (operands[0]) == SUBREG\n+\t   && SSE_REG_P (SUBREG_REG (operands[0]))))\"\n   [(const_int 0)]\n {\n   operands[3] = simplify_gen_subreg (<ssevecmode>mode, operands[0],\n@@ -5188,7 +5200,9 @@\n    && SSE_FLOAT_MODE_P (<MODEF:MODE>mode) && TARGET_SSE_MATH\n    && (TARGET_INTER_UNIT_CONVERSIONS || optimize_function_for_size_p (cfun))\n    && reload_completed\n-   && SSE_REGNO_P (reg_or_subregno (operands[0]))\"\n+   && (SSE_REG_P (operands[0])\n+       || (GET_CODE (operands[0]) == SUBREG\n+\t   && SSE_REG_P (SUBREG_REG (operands[0]))))\"\n   [(set (match_dup 0) (float:MODEF (match_dup 1)))])\n \n (define_insn \"*float<SWI48x:mode><MODEF:mode>2_sse_nointerunit\"\n@@ -5221,7 +5235,9 @@\n    && SSE_FLOAT_MODE_P (<MODEF:MODE>mode) && TARGET_SSE_MATH\n    && !(TARGET_INTER_UNIT_CONVERSIONS || optimize_function_for_size_p (cfun))\n    && reload_completed\n-   && SSE_REGNO_P (reg_or_subregno (operands[0]))\"\n+   && (SSE_REG_P (operands[0])\n+       || (GET_CODE (operands[0]) == SUBREG\n+\t   && SSE_REG_P (SUBREG_REG (operands[0]))))\"\n   [(set (match_dup 2) (match_dup 1))\n    (set (match_dup 0) (float:MODEF (match_dup 2)))])\n \n@@ -5232,7 +5248,9 @@\n   \"(<SWI48x:MODE>mode != DImode || TARGET_64BIT)\n    && SSE_FLOAT_MODE_P (<MODEF:MODE>mode) && TARGET_SSE_MATH\n    && reload_completed\n-   && SSE_REGNO_P (reg_or_subregno (operands[0]))\"\n+   && (SSE_REG_P (operands[0])\n+       || (GET_CODE (operands[0]) == SUBREG\n+\t   && SSE_REG_P (SUBREG_REG (operands[0]))))\"\n   [(set (match_dup 0) (float:MODEF (match_dup 1)))])\n \n (define_insn \"*float<SWI48x:mode><X87MODEF:mode>2_i387_with_temp\""}]}