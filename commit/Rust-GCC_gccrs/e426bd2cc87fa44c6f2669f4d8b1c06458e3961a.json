{"sha": "e426bd2cc87fa44c6f2669f4d8b1c06458e3961a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTQyNmJkMmNjODdmYTQ0YzZmMjY2OWY0ZDhiMWMwNjQ1OGUzOTYxYQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2007-11-01T22:54:39Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2007-11-01T22:54:39Z"}, "message": "re PR c++/32384 (Pseudo-dtor in template class rejected)\n\n\tPR c++/32384\n\t* parser.c (cp_parser_postfix_dot_deref_expression): If\n\tPOSTFIX_EXPRESSION is type dependent, try to parse it as pseudo dtor\n\tfirst and if that succeeds and type is SCALAR_TYPE_P, create\n\tPSEUDO_DTOR_EXPR.\n\n\t* g++.dg/template/pseudodtor1.C: New test.\n\t* g++.dg/template/pseudodtor2.C: New test.\n\nFrom-SVN: r129836", "tree": {"sha": "9d8957fff01123e31aed20e5ddc810fd06a83738", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9d8957fff01123e31aed20e5ddc810fd06a83738"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e426bd2cc87fa44c6f2669f4d8b1c06458e3961a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e426bd2cc87fa44c6f2669f4d8b1c06458e3961a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e426bd2cc87fa44c6f2669f4d8b1c06458e3961a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e426bd2cc87fa44c6f2669f4d8b1c06458e3961a/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "3a44f39543e5c76226975a7897e3e8669b934327", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3a44f39543e5c76226975a7897e3e8669b934327", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3a44f39543e5c76226975a7897e3e8669b934327"}], "stats": {"total": 85, "additions": 82, "deletions": 3}, "files": [{"sha": "51f219bb7bf7e13fa7b687d369014c3070715e11", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e426bd2cc87fa44c6f2669f4d8b1c06458e3961a/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e426bd2cc87fa44c6f2669f4d8b1c06458e3961a/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=e426bd2cc87fa44c6f2669f4d8b1c06458e3961a", "patch": "@@ -1,5 +1,11 @@\n 2007-11-01  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR c++/32384\n+\t* parser.c (cp_parser_postfix_dot_deref_expression): If\n+\tPOSTFIX_EXPRESSION is type dependent, try to parse it as pseudo dtor\n+\tfirst and if that succeeds and type is SCALAR_TYPE_P, create\n+\tPSEUDO_DTOR_EXPR.\n+\n \tPR c++/32260\n \t* rtti.c (enum_tinfo_kind): Fix TK_TYPE_INFO_TYPE comment.\n \t(typeid_ok_p): Use the same alias set for abi::__type_info_pseudo"}, {"sha": "7734cc155f8c350a6d9c684fd06b73480b064867", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 10, "deletions": 3, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e426bd2cc87fa44c6f2669f4d8b1c06458e3961a/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e426bd2cc87fa44c6f2669f4d8b1c06458e3961a/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=e426bd2cc87fa44c6f2669f4d8b1c06458e3961a", "patch": "@@ -4850,8 +4850,10 @@ cp_parser_postfix_dot_deref_expression (cp_parser *parser,\n   pseudo_destructor_p = false;\n \n   /* If the SCOPE is a scalar type, then, if this is a valid program,\n-     we must be looking at a pseudo-destructor-name.  */\n-  if (scope && SCALAR_TYPE_P (scope))\n+     we must be looking at a pseudo-destructor-name.  If POSTFIX_EXPRESSION\n+     is type dependent, it can be pseudo-destructor-name or something else.\n+     Try to parse it as pseudo-destructor-name first.  */\n+  if ((scope && SCALAR_TYPE_P (scope)) || dependent_p)\n     {\n       tree s;\n       tree type;\n@@ -4860,7 +4862,12 @@ cp_parser_postfix_dot_deref_expression (cp_parser *parser,\n       /* Parse the pseudo-destructor-name.  */\n       s = NULL_TREE;\n       cp_parser_pseudo_destructor_name (parser, &s, &type);\n-      if (cp_parser_parse_definitely (parser))\n+      if (dependent_p\n+\t  && (cp_parser_error_occurred (parser)\n+\t      || TREE_CODE (type) != TYPE_DECL\n+\t      || !SCALAR_TYPE_P (TREE_TYPE (type))))\n+\tcp_parser_abort_tentative_parse (parser);\n+      else if (cp_parser_parse_definitely (parser))\n \t{\n \t  pseudo_destructor_p = true;\n \t  postfix_expression"}, {"sha": "849f07ee3aab561c1ed54865f25661e8b694b193", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e426bd2cc87fa44c6f2669f4d8b1c06458e3961a/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e426bd2cc87fa44c6f2669f4d8b1c06458e3961a/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=e426bd2cc87fa44c6f2669f4d8b1c06458e3961a", "patch": "@@ -1,5 +1,9 @@\n 2007-11-01  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR c++/32384\n+\t* g++.dg/template/pseudodtor1.C: New test.\n+\t* g++.dg/template/pseudodtor2.C: New test.\n+\n \tPR c++/32260\n \t* g++.dg/rtti/typeid7.C: New test.\n "}, {"sha": "cf7c254d66035fc9b3ab0965142114b6f6009494", "filename": "gcc/testsuite/g++.dg/template/pseudodtor1.C", "status": "added", "additions": 44, "deletions": 0, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e426bd2cc87fa44c6f2669f4d8b1c06458e3961a/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fpseudodtor1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e426bd2cc87fa44c6f2669f4d8b1c06458e3961a/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fpseudodtor1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fpseudodtor1.C?ref=e426bd2cc87fa44c6f2669f4d8b1c06458e3961a", "patch": "@@ -0,0 +1,44 @@\n+// PR c++/32384\n+// { dg-do compile }\n+\n+struct A\n+{\n+  typedef int T;\n+  T foo ();\n+\n+  A () { foo ().~T (); }\n+};\n+\n+template<typename> struct B\n+{\n+  typedef int T;\n+  T foo ();\n+\n+  B () { foo ().~T (); }\n+};\n+\n+template<typename T> struct C\n+{\n+  T t;\n+  C () { t.~T (); }\n+};\n+\n+template<typename S> struct D\n+{\n+  typedef int T;\n+  S foo ();\n+\n+  D () { foo ().~T(); }\n+};\n+\n+struct Z\n+{\n+  Z () {}\n+  ~Z () {}\n+};\n+\n+A a;\n+B<int> b;\n+C<int> c1;\n+C<Z> c2;\n+D<int> d;"}, {"sha": "796aff0785b8ca401d5ac128fd7cb6edb79d87fe", "filename": "gcc/testsuite/g++.dg/template/pseudodtor2.C", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e426bd2cc87fa44c6f2669f4d8b1c06458e3961a/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fpseudodtor2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e426bd2cc87fa44c6f2669f4d8b1c06458e3961a/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fpseudodtor2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fpseudodtor2.C?ref=e426bd2cc87fa44c6f2669f4d8b1c06458e3961a", "patch": "@@ -0,0 +1,18 @@\n+// PR c++/32384\n+// { dg-do compile }\n+\n+template<typename S> struct D\n+{\n+  typedef int T;\n+  S foo ();\n+\n+  D () { foo ().~T(); }\t\t// { dg-error \"is not of type\" }\n+};\n+\n+struct Z\n+{\n+  Z () {}\n+  ~Z () {}\n+};\n+\n+D<Z> d;"}]}