{"sha": "3c25f45127e55fa44bedb0b20dccd3d1042e2dab", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2MyNWY0NTEyN2U1NWZhNDRiZWRiMGIyMGRjY2QzZDEwNDJlMmRhYg==", "commit": {"author": {"name": "Karl Heuer", "email": "kwzh@gnu.org", "date": "1996-01-07T07:00:56Z"}, "committer": {"name": "Karl Heuer", "email": "kwzh@gnu.org", "date": "1996-01-07T07:00:56Z"}, "message": "(alloca): If malloc fails, just abort.\n\nFrom-SVN: r10949", "tree": {"sha": "8e9d41b6cb9d9c77c638044d3e3cb7938d715d21", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8e9d41b6cb9d9c77c638044d3e3cb7938d715d21"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3c25f45127e55fa44bedb0b20dccd3d1042e2dab", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3c25f45127e55fa44bedb0b20dccd3d1042e2dab", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3c25f45127e55fa44bedb0b20dccd3d1042e2dab", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3c25f45127e55fa44bedb0b20dccd3d1042e2dab/comments", "author": null, "committer": null, "parents": [{"sha": "c09be6c40e09a4ea859355ca1e9b6cd6e4d8c9d4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c09be6c40e09a4ea859355ca1e9b6cd6e4d8c9d4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c09be6c40e09a4ea859355ca1e9b6cd6e4d8c9d4"}], "stats": {"total": 3, "additions": 3, "deletions": 0}, "files": [{"sha": "7061cec2d3145c0a888bb29e8229244362d61881", "filename": "gcc/alloca.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c25f45127e55fa44bedb0b20dccd3d1042e2dab/gcc%2Falloca.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c25f45127e55fa44bedb0b20dccd3d1042e2dab/gcc%2Falloca.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Falloca.c?ref=3c25f45127e55fa44bedb0b20dccd3d1042e2dab", "patch": "@@ -209,6 +209,9 @@ alloca (size)\n     register pointer new = malloc (sizeof (header) + size);\n     /* Address of header.  */\n \n+    if (new == 0)\n+      abort();\n+\n     ((header *) new)->h.next = last_alloca_header;\n     ((header *) new)->h.deep = depth;\n "}]}