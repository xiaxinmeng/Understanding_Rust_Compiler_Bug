{"sha": "fcb6fced16389962ebf2cebe737d534994a80fb6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmNiNmZjZWQxNjM4OTk2MmViZjJjZWJlNzM3ZDUzNDk5NGE4MGZiNg==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2018-01-04T08:54:17Z"}, "committer": {"name": "Martin Liska", "email": "marxin@gcc.gnu.org", "date": "2018-01-04T08:54:17Z"}, "message": "Be careful about comdat boundary in ICF (PR ipa/82352).\n\n2018-01-04  Martin Liska  <mliska@suse.cz>\n\n\tPR ipa/82352\n\t* ipa-icf.c (sem_function::merge): Do not cross comdat boundary.\n2018-01-04  Martin Liska  <mliska@suse.cz>\n\n\tPR ipa/82352\n\t* g++.dg/ipa/pr82352.C: New test.\n\nFrom-SVN: r256226", "tree": {"sha": "097e0c238d79e830bf7d11472361bfcfe6358327", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/097e0c238d79e830bf7d11472361bfcfe6358327"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fcb6fced16389962ebf2cebe737d534994a80fb6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fcb6fced16389962ebf2cebe737d534994a80fb6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fcb6fced16389962ebf2cebe737d534994a80fb6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fcb6fced16389962ebf2cebe737d534994a80fb6/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "517d489618b115219cdf8e2dc83085176a55eb7b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/517d489618b115219cdf8e2dc83085176a55eb7b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/517d489618b115219cdf8e2dc83085176a55eb7b"}], "stats": {"total": 114, "additions": 114, "deletions": 0}, "files": [{"sha": "007e2d5999f1c4198c0fb3c488de1e0ac3e669be", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fcb6fced16389962ebf2cebe737d534994a80fb6/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fcb6fced16389962ebf2cebe737d534994a80fb6/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=fcb6fced16389962ebf2cebe737d534994a80fb6", "patch": "@@ -1,3 +1,8 @@\n+2018-01-04  Martin Liska  <mliska@suse.cz>\n+\n+\tPR ipa/82352\n+\t* ipa-icf.c (sem_function::merge): Do not cross comdat boundary.\n+\n 2018-01-04  Jakub Jelinek  <jakub@redhat.com>\n \n \t* gimple-ssa-sprintf.c (parse_directive): Cast second dir.len to uhwi."}, {"sha": "b9f2bf30744b6f350bae2861126142d5591a0c5c", "filename": "gcc/ipa-icf.c", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fcb6fced16389962ebf2cebe737d534994a80fb6/gcc%2Fipa-icf.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fcb6fced16389962ebf2cebe737d534994a80fb6/gcc%2Fipa-icf.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-icf.c?ref=fcb6fced16389962ebf2cebe737d534994a80fb6", "patch": "@@ -1113,6 +1113,17 @@ sem_function::merge (sem_item *alias_item)\n       return false;\n     }\n \n+  if (!original->in_same_comdat_group_p (alias)\n+      || original->comdat_local_p ())\n+    {\n+      if (dump_file)\n+\tfprintf (dump_file,\n+\t\t \"Not unifying; alias nor wrapper cannot be created; \"\n+\t\t \"across comdat group boundary\\n\\n\");\n+\n+      return false;\n+    }\n+\n   /* See if original is in a section that can be discarded if the main\n      symbol is not used.  */\n "}, {"sha": "e7de3ae4c9d527666ea476091f3c1047d4374fc1", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fcb6fced16389962ebf2cebe737d534994a80fb6/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fcb6fced16389962ebf2cebe737d534994a80fb6/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=fcb6fced16389962ebf2cebe737d534994a80fb6", "patch": "@@ -1,3 +1,8 @@\n+2018-01-04  Martin Liska  <mliska@suse.cz>\n+\n+\tPR ipa/82352\n+\t* g++.dg/ipa/pr82352.C: New test.\n+\n 2018-01-04  Jakub Jelinek  <jakub@redhat.com>\n \n \t* gcc.dg/vect-opt-info-1.c: Moved to ..."}, {"sha": "c044345a486c38c614fce7497a3eb52d7c497e7b", "filename": "gcc/testsuite/g++.dg/ipa/pr82352.C", "status": "added", "additions": 93, "deletions": 0, "changes": 93, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fcb6fced16389962ebf2cebe737d534994a80fb6/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fipa%2Fpr82352.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fcb6fced16389962ebf2cebe737d534994a80fb6/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fipa%2Fpr82352.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fipa%2Fpr82352.C?ref=fcb6fced16389962ebf2cebe737d534994a80fb6", "patch": "@@ -0,0 +1,93 @@\n+// PR ipa/82352\n+// { dg-do compile }\n+// { dg-options \"-O2\" }\n+\n+typedef long unsigned int size_t;\n+\n+class A\n+{\n+public :\n+  typedef enum { Zero = 0, One = 1 } tA;\n+  A(tA a) { m_a = a; }\n+\n+private :\n+  tA m_a;\n+};\n+\n+class B\n+{\n+public :\n+  void *operator new(size_t t) { return (void*)(42); };\n+};\n+\n+class C\n+{\n+public:\n+  virtual void ffff () = 0;\n+};\n+\n+class D\n+{\n+ public :\n+  virtual void g() = 0;\n+  virtual void h() = 0;\n+};\n+\n+template<class T> class IIII: public T, public D\n+{\n+public:\n+ void ffff()\n+ {\n+   if (!m_i2) throw A(A::One);\n+ };\n+\n+ void h()\n+ {\n+  if (m_i2) throw A(A::Zero);\n+ }\n+\n+protected:\n+ virtual void g()\n+ {\n+  if (m_i1 !=0) throw A(A::Zero);\n+ };\n+\n+private :\n+ int m_i1;\n+ void *m_i2;\n+};\n+\n+class E\n+{\n+private:\n+    size_t m_e;\n+    static const size_t Max;\n+\n+public:\n+    E& i(size_t a, size_t b, size_t c)\n+    {\n+        if ((a > Max) || (c > Max)) throw A(A::Zero );\n+        if (a + b > m_e) throw A(A::One );\n+        return (*this);\n+    }\n+\n+  inline E& j(const E &s)\n+    {\n+      return i(0,0,s.m_e);\n+    }\n+};\n+\n+class F : public C { };\n+class G : public C { };\n+class HHHH : public B, public F, public G { };\n+\n+void k()\n+{\n+    new IIII<HHHH>();\n+}\n+\n+void l()\n+{\n+  E e1, e2;\n+  e1.j(e2);\n+}"}]}