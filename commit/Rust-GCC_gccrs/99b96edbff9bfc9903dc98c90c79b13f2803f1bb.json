{"sha": "99b96edbff9bfc9903dc98c90c79b13f2803f1bb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTliOTZlZGJmZjliZmM5OTAzZGM5OGM5MGM3OWIxM2YyODAzZjFiYg==", "commit": {"author": {"name": "Bob Wilson", "email": "bob.wilson@acm.org", "date": "2002-03-19T20:16:35Z"}, "committer": {"name": "Bob Wilson", "email": "bwilson@gcc.gnu.org", "date": "2002-03-19T20:16:35Z"}, "message": "xtensa.md (adddi3, [...]): Define.\n\n        * config/xtensa/xtensa.md (adddi3, adddi_carry, subdi3,\n        subdi_carry): Define.\n\nFrom-SVN: r51039", "tree": {"sha": "d26170bf796a0532fd3a9375ca5b41be7fc44877", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d26170bf796a0532fd3a9375ca5b41be7fc44877"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/99b96edbff9bfc9903dc98c90c79b13f2803f1bb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/99b96edbff9bfc9903dc98c90c79b13f2803f1bb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/99b96edbff9bfc9903dc98c90c79b13f2803f1bb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/99b96edbff9bfc9903dc98c90c79b13f2803f1bb/comments", "author": null, "committer": null, "parents": [{"sha": "0fdebf99e5489ecf405e0351a74478826819d5bc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0fdebf99e5489ecf405e0351a74478826819d5bc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0fdebf99e5489ecf405e0351a74478826819d5bc"}], "stats": {"total": 74, "additions": 74, "deletions": 0}, "files": [{"sha": "70b9756c5225542f95a3d5b18df31bb0c7e7d753", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/99b96edbff9bfc9903dc98c90c79b13f2803f1bb/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/99b96edbff9bfc9903dc98c90c79b13f2803f1bb/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=99b96edbff9bfc9903dc98c90c79b13f2803f1bb", "patch": "@@ -1,3 +1,8 @@\n+2002-03-19  Bob Wilson  <bob.wilson@acm.org>\n+\n+\t* config/xtensa/xtensa.md (adddi3, adddi_carry, subdi3,\n+\tsubdi_carry): Define.\n+\n 2002-03-19  David Edelsohn  <edelsohn@gnu.org>\n \n \t* config/rs6000/rs6000.c (rs6000_override_options): Only warn"}, {"sha": "abf8307f8bb827ee67ba1017a1ad46ef1cffd8ff", "filename": "gcc/config/xtensa/xtensa.md", "status": "modified", "additions": 69, "deletions": 0, "changes": 69, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/99b96edbff9bfc9903dc98c90c79b13f2803f1bb/gcc%2Fconfig%2Fxtensa%2Fxtensa.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/99b96edbff9bfc9903dc98c90c79b13f2803f1bb/gcc%2Fconfig%2Fxtensa%2Fxtensa.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fxtensa%2Fxtensa.md?ref=99b96edbff9bfc9903dc98c90c79b13f2803f1bb", "patch": "@@ -89,6 +89,43 @@\n ;;  ....................\n ;;\n \n+(define_expand \"adddi3\"\n+  [(set (match_operand:DI 0 \"register_operand\" \"\")\n+\t(plus:DI (match_operand:DI 1 \"register_operand\" \"\")\n+\t\t (match_operand:DI 2 \"register_operand\" \"\")))]\n+  \"\"\n+  \"\n+{\n+  rtx dstlo = gen_lowpart (SImode, operands[0]);\n+  rtx src1lo = gen_lowpart (SImode, operands[1]);\n+  rtx src2lo = gen_lowpart (SImode, operands[2]);\n+\n+  rtx dsthi = gen_highpart (SImode, operands[0]);\n+  rtx src1hi = gen_highpart (SImode, operands[1]);\n+  rtx src2hi = gen_highpart (SImode, operands[2]);\n+\n+  emit_insn (gen_addsi3 (dstlo, src1lo, src2lo));\n+  emit_insn (gen_addsi3 (dsthi, src1hi, src2hi));\n+  emit_insn (gen_adddi_carry (dsthi, dstlo, src2lo));\n+  DONE;\n+}\")\n+\n+;; Represent the add-carry operation as an atomic operation instead of\n+;; expanding it to a conditional branch.  Otherwise, the edge\n+;; profiling code breaks because inserting the count increment code\n+;; causes a new jump insn to be added.\n+\n+(define_insn \"adddi_carry\"\n+  [(set (match_operand:SI 0 \"register_operand\" \"+a\")\n+\t(plus:SI (ltu:SI (match_operand:SI 1 \"register_operand\" \"r\")\n+\t\t\t (match_operand:SI 2 \"register_operand\" \"r\"))\n+\t\t (match_dup 0)))]\n+  \"\"\n+  \"bgeu\\\\t%1, %2, 0f\\;addi\\\\t%0, %0, 1\\;0:\"\n+  [(set_attr \"type\"\t\"arith\")\n+   (set_attr \"mode\"\t\"SI\")\n+   (set_attr \"length\"\t\"6\")])\n+\n (define_insn \"addsi3\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=D,D,a,a,a\")\n \t(plus:SI (match_operand:SI 1 \"register_operand\" \"%d,d,r,r,r\")\n@@ -156,6 +193,38 @@\n ;;  ....................\n ;;\n \n+(define_expand \"subdi3\"\n+  [(set (match_operand:DI 0 \"register_operand\" \"\")\n+\t(minus:DI (match_operand:DI 1 \"register_operand\" \"\")\n+\t\t  (match_operand:DI 2 \"register_operand\" \"\")))]\n+  \"\"\n+  \"\n+{\n+  rtx dstlo = gen_lowpart (SImode, operands[0]);\n+  rtx src1lo = gen_lowpart (SImode, operands[1]);\n+  rtx src2lo = gen_lowpart (SImode, operands[2]);\n+\n+  rtx dsthi = gen_highpart (SImode, operands[0]);\n+  rtx src1hi = gen_highpart (SImode, operands[1]);\n+  rtx src2hi = gen_highpart (SImode, operands[2]);\n+\n+  emit_insn (gen_subsi3 (dstlo, src1lo, src2lo));\n+  emit_insn (gen_subsi3 (dsthi, src1hi, src2hi));\n+  emit_insn (gen_subdi_carry (dsthi, src1lo, src2lo));\n+  DONE;\n+}\")\n+\n+(define_insn \"subdi_carry\"\n+  [(set (match_operand:SI 0 \"register_operand\" \"+a\")\n+\t(minus:SI (match_dup 0)\n+\t\t  (ltu:SI (match_operand:SI 1 \"register_operand\" \"r\")\n+\t\t\t  (match_operand:SI 2 \"register_operand\" \"r\"))))]\n+  \"\"\n+  \"bgeu\\\\t%1, %2, 0f\\;addi\\\\t%0, %0, -1\\;0:\"\n+  [(set_attr \"type\"\t\"arith\")\n+   (set_attr \"mode\"\t\"SI\")\n+   (set_attr \"length\"\t\"6\")])\n+\n (define_insn \"subsi3\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=a\")\n         (minus:SI (match_operand:SI 1 \"register_operand\" \"r\")"}]}