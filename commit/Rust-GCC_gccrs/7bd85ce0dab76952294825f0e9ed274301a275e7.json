{"sha": "7bd85ce0dab76952294825f0e9ed274301a275e7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2JkODVjZTBkYWI3Njk1MjI5NDgyNWYwZTllZDI3NDMwMWEyNzVlNw==", "commit": {"author": {"name": "Joseph Myers", "email": "joseph@codesourcery.com", "date": "2006-02-18T11:12:51Z"}, "committer": {"name": "Joseph Myers", "email": "jsm28@gcc.gnu.org", "date": "2006-02-18T11:12:51Z"}, "message": "re PR target/24837 (move dynamic linker names out of LINK_SPEC and into new DYNAMIC_LINKER)\n\n\tPR target/24837\n\t* config.gcc: Define UCLIBC_DEFAULT to 0 or 1.\n\t* opth-gen.awk: Handle Var and InverseMask together.\n\t* config/linux.opt (muclibc, mglibc): Use Var(linux_uclibc).\n\t* config/linux.h: Use #if not #ifdef for testing UCLIBC_DEFAULT.\n\t(TARGET_C99_FUNCTIONS): Test OPTION_GLIBC not TARGET_GLIBC.\n\t(CHOOSE_DYNAMIC_LINKER): Give an error for -mglibc and -muclibc\n\tused together.\n\t(UCLIBC_DYNAMIC_LINKER32, UCLIBC_DYNAMIC_LINKER64,\n\tLINUX_DYNAMIC_LINKER32, LINUX_DYNAMIC_LINKER64): Define.\n\t* config/alpha/linux-elf.h (GLIBC_DYNAMIC_LINKER,\n\tUCLIBC_DYNAMIC_LINKER, CHOOSE_DYNAMIC_LINKER,\n\tLINUX_DYNAMIC_LINKER): Define.\n\t(ELF_DYNAMIC_LINKER): Define to LINUX_DYNAMIC_LINKER.\n\t* config/alpha/linux.h (TARGET_C99_FUNCTIONS): Define to\n\tTARGET_GLIBC.\n\t* config/cris/linux.h (GLIBC_DYNAMIC_LINKER): Define.\n\t(CRIS_LINK_SUBTARGET_SPEC): Pass a -dynamic-linker option.\n\t* config/frv/linux.h (GLIBC_DYNAMIC_LINKER): Define.\n\t(LINK_SPEC): Use LINUX_DYNAMIC_LINKER.\n\t(TARGET_C99_FUNCTIONS): Don't define.\n\t* config/i386/linux.h (DYNAMIC_LINKER): Rename to\n\tGLIBC_DYNAMIC_LINKER.\n\t(SUBTARGET_EXTRA_SPECS): Use LINUX_DYNAMIC_LINKER.\n\t* config/i386/linux64.h (GLIBC_DYNAMIC_LINKER32,\n\tGLIBC_DYNAMIC_LINKER64): Define.\n\t(LINK_SPEC): Use LINUX_DYNAMIC_LINKER32 and\n\tLINUX_DYNAMIC_LINKER64.\n\t* config/ia64/linux.h (GLIBC_DYNAMIC_LINKER): Define.\n\t(LINK_SPEC): Use LINUX_DYNAMIC_LINKER.\n\t* config/m32r/linux.h (GLIBC_DYNAMIC_LINKE): Define.\n\t(LINK_SPEC): Use LINUX_DYNAMIC_LINKER.\n\t* config/m68k/linux.h (GLIBC_DYNAMIC_LINKER): Define.\n\t(LINK_SPEC): Use LINUX_DYNAMIC_LINKER.\n\t* config/mips/linux64.h (GLIBC_DYNAMIC_LINKER32,\n\tGLIBC_DYNAMIC_LINKER64, GLIBC_DYNAMIC_LINKERN32,\n\tUCLIBC_DYNAMIC_LINKERN32, LINUX_DYNAMIC_LINKERN32): Define.\n\t(LINK_SPEC): Use LINUX_DYNAMIC_LINKERN32, LINUX_DYNAMIC_LINKER64\n\tand LINUX_DYNAMIC_LINKER32.\n\t* config/mn10300/linux.h (GLIBC_DYNAMIC_LINKER): Define.\n\t(LINK_SPEC): Use LINUX_DYNAMIC_LINKER.\n\t* config/pa/pa-linux.h (GLIBC_DYNAMIC_LINKER): Define.\n\t(LINK_SPEC): Use LINUX_DYNAMIC_LINKER.\n\t* config/rs6000/linux.h (TARGET_C99_FUNCTIONS): Define to\n\tTARGET_GLIBC.\n\t* config/rs6000/linux64.h (TARGET_C99_FUNCTIONS): Likewise.\n\t(GLIBC_DYNAMIC_LINKER32, GLIBC_DYNAMIC_LINKER64,\n\tUCLIBC_DYNAMIC_LINKER32, UCLIBC_DYNAMIC_LINKER64,\n\tCHOOSE_DYNAMIC_LINKER, CHOOSE_DYNAMIC_LINKER,\n\tLINUX_DYNAMIC_LINKER32, LINUX_DYNAMIC_LINKER64): Define.\n\t(LINK_OS_LINUX_SPEC32): Use LINUX_DYNAMIC_LINKER32.\n\t(LINK_OS_LINUX_SPEC64): Use LINUX_DYNAMIC_LINKER64.\n\t* config/rs6000/sysv4.h (GLIBC_DYNAMIC_LINKER,\n\tUCLIBC_DYNAMIC_LINKER, CHOOSE_DYNAMIC_LINKER,\n\tLINUX_DYNAMIC_LINKER): Define.\n\t(LINK_OS_LINUX_SPEC): Use LINUX_DYNAMIC_LINKE.\n\t* config/s390/linux.h (GLIBC_DYNAMIC_LINKER32,\n\tGLIBC_DYNAMIC_LINKER64): Define.\n\t(LINK_SPEC): Use LINUX_DYNAMIC_LINKER32 and\n\tLINUX_DYNAMIC_LINKER64.\n\t* config/sh/linux.h (GLIBC_DYNAMIC_LINKER): Define.\n\t(SUBTARGET_LINK_SPEC): Use LINUX_DYNAMIC_LINKER.\n\t* config/sparc/linux.h (GLIBC_DYNAMIC_LINKER,\n\tUCLIBC_DYNAMIC_LINKER, CHOOSE_DYNAMIC_LINKER,\n\tLINUX_DYNAMIC_LINKER): Define.\n\t(LINK_SPEC): Use LINUX_DYNAMIC_LINKER.\n\t(TARGET_C99_FUNCTIONS): Define to TARGET_GLIBC.\n\t* config/sparc/linux64.h (GLIBC_DYNAMIC_LINKER32,\n\tGLIBC_DYNAMIC_LINKER64, UCLIBC_DYNAMIC_LINKER32,\n\tUCLIBC_DYNAMIC_LINKER64, CHOOSE_DYNAMIC_LINKER,\n\tLINUX_DYNAMIC_LINKER32, LINUX_DYNAMIC_LINKER64): Define.\n\t(LINK_ARCH32_SPEC): Use LINUX_DYNAMIC_LINKER32.\n\t(LINK_ARCH64_SPEC, LINK_SPEC): Use LINUX_DYNAMIC_LINKER64.\n\t(TARGET_C99_FUNCTIONS): Define to TARGET_GLIBC.\n\t* config/xtensa/linux.h (GLIBC_DYNAMIC_LINKER): Define.\n\t(LINK_SPEC): Use LINUX_DYNAMIC_LINKER.\n\t* doc/invoke.texi (-muclibc): Remove caveat about supported\n\ttargets.\n\ntestsuite:\n\t* gcc.dg/glibc-uclibc-1.c, gcc.dg/glibc-uclibc-2.c: New tests.\n\nFrom-SVN: r111235", "tree": {"sha": "24e5855f0f1d491300e0a47d368c1fd5001bc77d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/24e5855f0f1d491300e0a47d368c1fd5001bc77d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7bd85ce0dab76952294825f0e9ed274301a275e7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7bd85ce0dab76952294825f0e9ed274301a275e7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7bd85ce0dab76952294825f0e9ed274301a275e7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7bd85ce0dab76952294825f0e9ed274301a275e7/comments", "author": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "be8ac3e243dda9430ee53a245a3c1ee3a6acbc7c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/be8ac3e243dda9430ee53a245a3c1ee3a6acbc7c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/be8ac3e243dda9430ee53a245a3c1ee3a6acbc7c"}], "stats": {"total": 356, "additions": 276, "deletions": 80}, "files": [{"sha": "675d1c472315750fd3e22a177653e23a79814308", "filename": "gcc/ChangeLog", "status": "modified", "additions": 81, "deletions": 0, "changes": 81, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bd85ce0dab76952294825f0e9ed274301a275e7/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bd85ce0dab76952294825f0e9ed274301a275e7/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7bd85ce0dab76952294825f0e9ed274301a275e7", "patch": "@@ -1,3 +1,84 @@\n+2006-02-18  Joseph S. Myers  <joseph@codesourcery.com>\n+\n+\tPR target/24837\n+\t* config.gcc: Define UCLIBC_DEFAULT to 0 or 1.\n+\t* opth-gen.awk: Handle Var and InverseMask together.\n+\t* config/linux.opt (muclibc, mglibc): Use Var(linux_uclibc).\n+\t* config/linux.h: Use #if not #ifdef for testing UCLIBC_DEFAULT.\n+\t(TARGET_C99_FUNCTIONS): Test OPTION_GLIBC not TARGET_GLIBC.\n+\t(CHOOSE_DYNAMIC_LINKER): Give an error for -mglibc and -muclibc\n+\tused together.\n+\t(UCLIBC_DYNAMIC_LINKER32, UCLIBC_DYNAMIC_LINKER64,\n+\tLINUX_DYNAMIC_LINKER32, LINUX_DYNAMIC_LINKER64): Define.\n+\t* config/alpha/linux-elf.h (GLIBC_DYNAMIC_LINKER,\n+\tUCLIBC_DYNAMIC_LINKER, CHOOSE_DYNAMIC_LINKER,\n+\tLINUX_DYNAMIC_LINKER): Define.\n+\t(ELF_DYNAMIC_LINKER): Define to LINUX_DYNAMIC_LINKER.\n+\t* config/alpha/linux.h (TARGET_C99_FUNCTIONS): Define to\n+\tTARGET_GLIBC.\n+\t* config/cris/linux.h (GLIBC_DYNAMIC_LINKER): Define.\n+\t(CRIS_LINK_SUBTARGET_SPEC): Pass a -dynamic-linker option.\n+\t* config/frv/linux.h (GLIBC_DYNAMIC_LINKER): Define.\n+\t(LINK_SPEC): Use LINUX_DYNAMIC_LINKER.\n+\t(TARGET_C99_FUNCTIONS): Don't define.\n+\t* config/i386/linux.h (DYNAMIC_LINKER): Rename to\n+\tGLIBC_DYNAMIC_LINKER.\n+\t(SUBTARGET_EXTRA_SPECS): Use LINUX_DYNAMIC_LINKER.\n+\t* config/i386/linux64.h (GLIBC_DYNAMIC_LINKER32,\n+\tGLIBC_DYNAMIC_LINKER64): Define.\n+\t(LINK_SPEC): Use LINUX_DYNAMIC_LINKER32 and\n+\tLINUX_DYNAMIC_LINKER64.\n+\t* config/ia64/linux.h (GLIBC_DYNAMIC_LINKER): Define.\n+\t(LINK_SPEC): Use LINUX_DYNAMIC_LINKER.\n+\t* config/m32r/linux.h (GLIBC_DYNAMIC_LINKE): Define.\n+\t(LINK_SPEC): Use LINUX_DYNAMIC_LINKER.\n+\t* config/m68k/linux.h (GLIBC_DYNAMIC_LINKER): Define.\n+\t(LINK_SPEC): Use LINUX_DYNAMIC_LINKER.\n+\t* config/mips/linux64.h (GLIBC_DYNAMIC_LINKER32,\n+\tGLIBC_DYNAMIC_LINKER64, GLIBC_DYNAMIC_LINKERN32,\n+\tUCLIBC_DYNAMIC_LINKERN32, LINUX_DYNAMIC_LINKERN32): Define.\n+\t(LINK_SPEC): Use LINUX_DYNAMIC_LINKERN32, LINUX_DYNAMIC_LINKER64\n+\tand LINUX_DYNAMIC_LINKER32.\n+\t* config/mn10300/linux.h (GLIBC_DYNAMIC_LINKER): Define.\n+\t(LINK_SPEC): Use LINUX_DYNAMIC_LINKER.\n+\t* config/pa/pa-linux.h (GLIBC_DYNAMIC_LINKER): Define.\n+\t(LINK_SPEC): Use LINUX_DYNAMIC_LINKER.\n+\t* config/rs6000/linux.h (TARGET_C99_FUNCTIONS): Define to\n+\tTARGET_GLIBC.\n+\t* config/rs6000/linux64.h (TARGET_C99_FUNCTIONS): Likewise.\n+\t(GLIBC_DYNAMIC_LINKER32, GLIBC_DYNAMIC_LINKER64,\n+\tUCLIBC_DYNAMIC_LINKER32, UCLIBC_DYNAMIC_LINKER64,\n+\tCHOOSE_DYNAMIC_LINKER, CHOOSE_DYNAMIC_LINKER,\n+\tLINUX_DYNAMIC_LINKER32, LINUX_DYNAMIC_LINKER64): Define.\n+\t(LINK_OS_LINUX_SPEC32): Use LINUX_DYNAMIC_LINKER32.\n+\t(LINK_OS_LINUX_SPEC64): Use LINUX_DYNAMIC_LINKER64.\n+\t* config/rs6000/sysv4.h (GLIBC_DYNAMIC_LINKER,\n+\tUCLIBC_DYNAMIC_LINKER, CHOOSE_DYNAMIC_LINKER,\n+\tLINUX_DYNAMIC_LINKER): Define.\n+\t(LINK_OS_LINUX_SPEC): Use LINUX_DYNAMIC_LINKE.\n+\t* config/s390/linux.h (GLIBC_DYNAMIC_LINKER32,\n+\tGLIBC_DYNAMIC_LINKER64): Define.\n+\t(LINK_SPEC): Use LINUX_DYNAMIC_LINKER32 and\n+\tLINUX_DYNAMIC_LINKER64.\n+\t* config/sh/linux.h (GLIBC_DYNAMIC_LINKER): Define.\n+\t(SUBTARGET_LINK_SPEC): Use LINUX_DYNAMIC_LINKER.\n+\t* config/sparc/linux.h (GLIBC_DYNAMIC_LINKER,\n+\tUCLIBC_DYNAMIC_LINKER, CHOOSE_DYNAMIC_LINKER,\n+\tLINUX_DYNAMIC_LINKER): Define.\n+\t(LINK_SPEC): Use LINUX_DYNAMIC_LINKER.\n+\t(TARGET_C99_FUNCTIONS): Define to TARGET_GLIBC.\n+\t* config/sparc/linux64.h (GLIBC_DYNAMIC_LINKER32,\n+\tGLIBC_DYNAMIC_LINKER64, UCLIBC_DYNAMIC_LINKER32,\n+\tUCLIBC_DYNAMIC_LINKER64, CHOOSE_DYNAMIC_LINKER,\n+\tLINUX_DYNAMIC_LINKER32, LINUX_DYNAMIC_LINKER64): Define.\n+\t(LINK_ARCH32_SPEC): Use LINUX_DYNAMIC_LINKER32.\n+\t(LINK_ARCH64_SPEC, LINK_SPEC): Use LINUX_DYNAMIC_LINKER64.\n+\t(TARGET_C99_FUNCTIONS): Define to TARGET_GLIBC.\n+\t* config/xtensa/linux.h (GLIBC_DYNAMIC_LINKER): Define.\n+\t(LINK_SPEC): Use LINUX_DYNAMIC_LINKER.\n+\t* doc/invoke.texi (-muclibc): Remove caveat about supported\n+\ttargets.\n+\n 2006-02-17  Grigory Zagorodnev <grigory_zagorodnev@linux.intel.com>\n \n \t* doc/cpp.texi (__TIMESTAMP__): Document."}, {"sha": "70f9bae2e7c1efb891147d4cc26fd7f2fcc3b12c", "filename": "gcc/config.gcc", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bd85ce0dab76952294825f0e9ed274301a275e7/gcc%2Fconfig.gcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bd85ce0dab76952294825f0e9ed274301a275e7/gcc%2Fconfig.gcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.gcc?ref=7bd85ce0dab76952294825f0e9ed274301a275e7", "patch": "@@ -455,7 +455,10 @@ case ${target} in\n   tmake_file=\"t-slibgcc-elf-ver t-linux\"\n   case ${target} in\n     *-*-*uclibc*)\n-      tm_defines=\"${tm_defines} UCLIBC_DEFAULT\"\n+      tm_defines=\"${tm_defines} UCLIBC_DEFAULT=1\"\n+      ;;\n+    *)\n+      tm_defines=\"${tm_defines} UCLIBC_DEFAULT=0\"\n       ;;\n   esac\n   ;;"}, {"sha": "565cd7ef918b7d53b560f2daeeedb85797d1a14a", "filename": "gcc/config/alpha/linux-elf.h", "status": "modified", "additions": 13, "deletions": 2, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bd85ce0dab76952294825f0e9ed274301a275e7/gcc%2Fconfig%2Falpha%2Flinux-elf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bd85ce0dab76952294825f0e9ed274301a275e7/gcc%2Fconfig%2Falpha%2Flinux-elf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Flinux-elf.h?ref=7bd85ce0dab76952294825f0e9ed274301a275e7", "patch": "@@ -1,6 +1,7 @@\n /* Definitions of target machine for GNU compiler\n    for Alpha Linux-based GNU systems using ELF.\n-   Copyright (C) 1996, 1997 Free Software Foundation, Inc.\n+   Copyright (C) 1996, 1997, 1998, 2001, 2002, 2003, 2006\n+   Free Software Foundation, Inc.\n    Contributed by Richard Henderson.\n \n This file is part of GCC.\n@@ -27,7 +28,17 @@ Boston, MA 02110-1301, USA.  */\n #define SUBTARGET_EXTRA_SPECS \\\n { \"elf_dynamic_linker\", ELF_DYNAMIC_LINKER },\n \n-#define ELF_DYNAMIC_LINKER\t\"/lib/ld-linux.so.2\"\n+#define GLIBC_DYNAMIC_LINKER\t\"/lib/ld-linux.so.2\"\n+#define UCLIBC_DYNAMIC_LINKER \"/lib/ld-uClibc.so.0\"\n+#if UCLIBC_DEFAULT\n+#define CHOOSE_DYNAMIC_LINKER(G, U) \"%{mglibc:%{muclibc:%e-mglibc and -muclibc used together}\" G \";:\" U \"}\"\n+#else\n+#define CHOOSE_DYNAMIC_LINKER(G, U) \"%{muclibc:%{mglibc:%e-mglibc and -muclibc used together}\" U \";:\" G \"}\"\n+#endif\n+#define LINUX_DYNAMIC_LINKER \\\n+  CHOOSE_DYNAMIC_LINKER (GLIBC_DYNAMIC_LINKER, UCLIBC_DYNAMIC_LINKER)\n+\n+#define ELF_DYNAMIC_LINKER\tLINUX_DYNAMIC_LINKER\n \n #define LINK_SPEC \"-m elf64alpha %{G*} %{relax:-relax}\t\t\\\n   %{O*:-O3} %{!O*:-O1}\t\t\t\t\t\t\\"}, {"sha": "dcd3c6597c4382f1bc1885b875b496dc4fc3b12b", "filename": "gcc/config/alpha/linux.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bd85ce0dab76952294825f0e9ed274301a275e7/gcc%2Fconfig%2Falpha%2Flinux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bd85ce0dab76952294825f0e9ed274301a275e7/gcc%2Fconfig%2Falpha%2Flinux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Flinux.h?ref=7bd85ce0dab76952294825f0e9ed274301a275e7", "patch": "@@ -1,6 +1,6 @@\n /* Definitions of target machine for GNU compiler,\n    for Alpha Linux-based GNU systems.\n-   Copyright (C) 1996, 1997, 1998, 2002, 2003, 2004, 2005\n+   Copyright (C) 1996, 1997, 1998, 2002, 2003, 2004, 2005, 2006\n    Free Software Foundation, Inc.\n    Contributed by Richard Henderson.\n \n@@ -64,7 +64,7 @@ Boston, MA 02110-1301, USA.  */\n \n /* Determine whether the entire c99 runtime is present in the\n    runtime library.  */\n-#define TARGET_C99_FUNCTIONS 1\n+#define TARGET_C99_FUNCTIONS (OPTION_GLIBC)\n \n #define TARGET_POSIX_IO\n "}, {"sha": "6b439dc3d6ad6299d27922e1e9f8c344c03e3385", "filename": "gcc/config/cris/linux.h", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bd85ce0dab76952294825f0e9ed274301a275e7/gcc%2Fconfig%2Fcris%2Flinux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bd85ce0dab76952294825f0e9ed274301a275e7/gcc%2Fconfig%2Fcris%2Flinux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fcris%2Flinux.h?ref=7bd85ce0dab76952294825f0e9ed274301a275e7", "patch": "@@ -1,5 +1,5 @@\n /* Definitions for GCC.  Part of the machine description for CRIS.\n-   Copyright (C) 2001, 2002, 2003, 2005 Free Software Foundation, Inc.\n+   Copyright (C) 2001, 2002, 2003, 2005, 2006 Free Software Foundation, Inc.\n    Contributed by Axis Communications.  Written by Hans-Peter Nilsson.\n \n This file is part of GCC.\n@@ -76,6 +76,8 @@ Boston, MA 02110-1301, USA.  */\n #undef CRIS_SUBTARGET_VERSION\n #define CRIS_SUBTARGET_VERSION \" - cris-axis-linux-gnu\"\n \n+#define GLIBC_DYNAMIC_LINKER \"/lib/ld.so.1\"\n+\n /* We need an -rpath-link to ld.so.1, and presumably to each directory\n    specified with -B.  */\n #undef CRIS_LINK_SUBTARGET_SPEC\n@@ -84,7 +86,9 @@ Boston, MA 02110-1301, USA.  */\n   -rpath-link include/asm/../..%s\\\n   %{shared} %{static}\\\n   %{symbolic:-Bdynamic} %{shlib:-Bdynamic} %{static:-Bstatic}\\\n-  %{!shared:%{!static:%{rdynamic:-export-dynamic}}}\\\n+  %{!shared:%{!static:\\\n+              %{rdynamic:-export-dynamic}\\\n+              %{!dynamic-linker:-dynamic-linker \" LINUX_DYNAMIC_LINKER \"}}}\\\n   %{!r:%{O2|O3: --gc-sections}}\"\n \n "}, {"sha": "4a30e46993659b119cce3f4b3d796d904c5fed57", "filename": "gcc/config/frv/linux.h", "status": "modified", "additions": 4, "deletions": 17, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bd85ce0dab76952294825f0e9ed274301a275e7/gcc%2Fconfig%2Ffrv%2Flinux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bd85ce0dab76952294825f0e9ed274301a275e7/gcc%2Fconfig%2Ffrv%2Flinux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Ffrv%2Flinux.h?ref=7bd85ce0dab76952294825f0e9ed274301a275e7", "patch": "@@ -1,5 +1,5 @@\n /* Target macros for the FRV Linux port of GCC.\n-   Copyright (C) 1999, 2000, 2001, 2002, 2003, 2004\n+   Copyright (C) 1999, 2000, 2001, 2002, 2003, 2004, 2006\n    Free Software Foundation, Inc.\n    Contributed by Red Hat Inc.\n \n@@ -36,12 +36,14 @@\n #define ENDFILE_SPEC \\\n   \"%{shared|pie:crtendS.o%s;:crtend.o%s} crtn.o%s\"\n \n+#define GLIBC_DYNAMIC_LINKER \"/lib/ld.so.1\"\n+\n #undef LINK_SPEC\n #define LINK_SPEC \"\\\n   %{mfdpic: -m elf32frvfd -z text} %{shared} %{pie} \\\n   %{!shared: %{!static: \\\n    %{rdynamic:-export-dynamic} \\\n-   %{!dynamic-linker:-dynamic-linker /lib/ld.so.1}} \\\n+   %{!dynamic-linker:-dynamic-linker \" LINUX_DYNAMIC_LINKER \"}} \\\n    %{static}}\"\n \n /* Support for compile-time default CPU.  */\n@@ -71,19 +73,4 @@ asm (TEXT_SECTION_ASM_OP);\n #undef Twrite\n #define Twrite __write\n \n-/* uClibc doesn't support many of the C90-reserved C99-defined math\n-   functions.  Make sure we don't implicitly generate them unless C99\n-   support is explicitly requested.  This will affect both frv-linux\n-   and frv-uclinux.  Even though the glibc, the primary library for\n-   frv-linux, would enable better code to be generated with\n-   TARGET_C99_FUNCTIONS defined to 1, uClinux can be used as the\n-   library for frv-linux as well, and we'd better have that work\n-   correctly.  Maybe we move this to a uclibc.h header in the future,\n-   and use that for frv-uclinux and frv-linux-uclibc?  Define it here\n-   for now, such that we can still get exactly the same code out of\n-   both frv-linux-gcc and frv-uclinux-gcc, when feeding them the same\n-   preprocessed sources.  */\n-#undef TARGET_C99_FUNCTIONS\n-#define TARGET_C99_FUNCTIONS 0\n-\n #endif /* __FRV_LINUX_H__ */"}, {"sha": "ec171353c3315f824f27d29693ad9a293a77f065", "filename": "gcc/config/i386/linux.h", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bd85ce0dab76952294825f0e9ed274301a275e7/gcc%2Fconfig%2Fi386%2Flinux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bd85ce0dab76952294825f0e9ed274301a275e7/gcc%2Fconfig%2Fi386%2Flinux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Flinux.h?ref=7bd85ce0dab76952294825f0e9ed274301a275e7", "patch": "@@ -1,6 +1,6 @@\n /* Definitions for Intel 386 running Linux-based GNU systems with ELF format.\n-   Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2001, 2002, 2004\n-   Free Software Foundation, Inc.\n+   Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2001, 2002, 2004, 2005,\n+   2006 Free Software Foundation, Inc.\n    Contributed by Eric Youngdale.\n    Modified for stabs-in-ELF by H.J. Lu.\n \n@@ -100,12 +100,12 @@ Boston, MA 02110-1301, USA.  */\n /* If ELF is the default format, we should not use /lib/elf.  */\n \n #define LINK_EMULATION \"elf_i386\"\n-#define DYNAMIC_LINKER \"/lib/ld-linux.so.2\"\n+#define GLIBC_DYNAMIC_LINKER \"/lib/ld-linux.so.2\"\n \n #undef  SUBTARGET_EXTRA_SPECS\n #define SUBTARGET_EXTRA_SPECS \\\n   { \"link_emulation\", LINK_EMULATION },\\\n-  { \"dynamic_linker\", DYNAMIC_LINKER }\n+  { \"dynamic_linker\", LINUX_DYNAMIC_LINKER }\n \n #undef\tLINK_SPEC\n #define LINK_SPEC \"-m %(link_emulation) %{shared:-shared} \\"}, {"sha": "cc8ed16f22953f611b61e42e1f34fcf91aa068ca", "filename": "gcc/config/i386/linux64.h", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bd85ce0dab76952294825f0e9ed274301a275e7/gcc%2Fconfig%2Fi386%2Flinux64.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bd85ce0dab76952294825f0e9ed274301a275e7/gcc%2Fconfig%2Fi386%2Flinux64.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Flinux64.h?ref=7bd85ce0dab76952294825f0e9ed274301a275e7", "patch": "@@ -1,5 +1,5 @@\n /* Definitions for AMD x86-64 running Linux-based GNU systems with ELF format.\n-   Copyright (C) 2001, 2002, 2004 Free Software Foundation, Inc.\n+   Copyright (C) 2001, 2002, 2004, 2005, 2006 Free Software Foundation, Inc.\n    Contributed by Jan Hubicka <jh@suse.cz>, based on linux.h.\n \n This file is part of GCC.\n@@ -49,14 +49,17 @@ Boston, MA 02110-1301, USA.  */\n    When the -shared link option is used a final link is not being\n    done.  */\n \n+#define GLIBC_DYNAMIC_LINKER32 \"/lib/ld-linux.so.2\"\n+#define GLIBC_DYNAMIC_LINKER64 \"/lib64/ld-linux-x86-64.so.2\"\n+\n #undef\tLINK_SPEC\n #define LINK_SPEC \"%{!m32:-m elf_x86_64} %{m32:-m elf_i386} \\\n   %{shared:-shared} \\\n   %{!shared: \\\n     %{!static: \\\n       %{rdynamic:-export-dynamic} \\\n-      %{m32:%{!dynamic-linker:-dynamic-linker /lib/ld-linux.so.2}} \\\n-      %{!m32:%{!dynamic-linker:-dynamic-linker /lib64/ld-linux-x86-64.so.2}}} \\\n+      %{m32:%{!dynamic-linker:-dynamic-linker \" LINUX_DYNAMIC_LINKER32 \"}} \\\n+      %{!m32:%{!dynamic-linker:-dynamic-linker \" LINUX_DYNAMIC_LINKER64 \"}}} \\\n     %{static:-static}}\"\n \n /* Similar to standard Linux, but adding -ffast-math support.  */"}, {"sha": "9e8ca596e754bb994d0f10019d40f06ab2b1977f", "filename": "gcc/config/ia64/linux.h", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bd85ce0dab76952294825f0e9ed274301a275e7/gcc%2Fconfig%2Fia64%2Flinux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bd85ce0dab76952294825f0e9ed274301a275e7/gcc%2Fconfig%2Fia64%2Flinux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fia64%2Flinux.h?ref=7bd85ce0dab76952294825f0e9ed274301a275e7", "patch": "@@ -37,13 +37,15 @@ do {\t\t\t\t\t\t\\\n /* Define this for shared library support because it isn't in the main\n    linux.h file.  */\n \n+#define GLIBC_DYNAMIC_LINKER \"/lib/ld-linux-ia64.so.2\"\n+\n #undef LINK_SPEC\n #define LINK_SPEC \"\\\n   %{shared:-shared} \\\n   %{!shared: \\\n     %{!static: \\\n       %{rdynamic:-export-dynamic} \\\n-      %{!dynamic-linker:-dynamic-linker /lib/ld-linux-ia64.so.2}} \\\n+      %{!dynamic-linker:-dynamic-linker \" LINUX_DYNAMIC_LINKER \"}} \\\n       %{static:-static}}\"\n \n "}, {"sha": "59e3e8538f9c02ebe5823df168b118dfdebf11d8", "filename": "gcc/config/linux.h", "status": "modified", "additions": 14, "deletions": 7, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bd85ce0dab76952294825f0e9ed274301a275e7/gcc%2Fconfig%2Flinux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bd85ce0dab76952294825f0e9ed274301a275e7/gcc%2Fconfig%2Flinux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Flinux.h?ref=7bd85ce0dab76952294825f0e9ed274301a275e7", "patch": "@@ -102,21 +102,28 @@ Boston, MA 02110-1301, USA.  */\n /* Determine which dynamic linker to use depending on whether GLIBC or\n    uClibc is the default C library and whether -muclibc or -mglibc has\n    been passed to change the default.  */\n-#ifdef UCLIBC_DEFAULT\n-#define CHOOSE_DYNAMIC_LINKER(G, U) \"%{mglibc:\" G \";:\" U \"}\"\n+#if UCLIBC_DEFAULT\n+#define CHOOSE_DYNAMIC_LINKER(G, U) \"%{mglibc:%{muclibc:%e-mglibc and -muclibc used together}\" G \";:\" U \"}\"\n #else\n-#define CHOOSE_DYNAMIC_LINKER(G, U) \"%{muclibc:\" U \";:\" G \"}\"\n+#define CHOOSE_DYNAMIC_LINKER(G, U) \"%{muclibc:%{mglibc:%e-mglibc and -muclibc used together}\" U \";:\" G \"}\"\n #endif\n \n-/* For most targets with a single dynamic linker the following\n-   definitions suffice; GLIBC_DYNAMIC_LINKER must be defined for each\n-   target using them.  */\n+/* For most targets the following definitions suffice;\n+   GLIBC_DYNAMIC_LINKER must be defined for each target using them, or\n+   GLIBC_DYNAMIC_LINKER32 and GLIBC_DYNAMIC_LINKER64 for targets\n+   supporting both 32-bit and 64-bit compilation.  */\n #define UCLIBC_DYNAMIC_LINKER \"/lib/ld-uClibc.so.0\"\n+#define UCLIBC_DYNAMIC_LINKER32 \"/lib/ld-uClibc.so.0\"\n+#define UCLIBC_DYNAMIC_LINKER64 \"/lib/ld64-uClibc.so.0\"\n #define LINUX_DYNAMIC_LINKER \\\n   CHOOSE_DYNAMIC_LINKER (GLIBC_DYNAMIC_LINKER, UCLIBC_DYNAMIC_LINKER)\n+#define LINUX_DYNAMIC_LINKER32 \\\n+  CHOOSE_DYNAMIC_LINKER (GLIBC_DYNAMIC_LINKER32, UCLIBC_DYNAMIC_LINKER32)\n+#define LINUX_DYNAMIC_LINKER64 \\\n+  CHOOSE_DYNAMIC_LINKER (GLIBC_DYNAMIC_LINKER64, UCLIBC_DYNAMIC_LINKER64)\n \n /* Determine whether the entire c99 runtime\n    is present in the runtime library.  */\n-#define TARGET_C99_FUNCTIONS (TARGET_GLIBC)\n+#define TARGET_C99_FUNCTIONS (OPTION_GLIBC)\n \n #define TARGET_POSIX_IO"}, {"sha": "3f615bb5154102879e489b40258c15b127f49fa1", "filename": "gcc/config/linux.opt", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bd85ce0dab76952294825f0e9ed274301a275e7/gcc%2Fconfig%2Flinux.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bd85ce0dab76952294825f0e9ed274301a275e7/gcc%2Fconfig%2Flinux.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Flinux.opt?ref=7bd85ce0dab76952294825f0e9ed274301a275e7", "patch": "@@ -21,9 +21,9 @@\n ; 02110-1301, USA.\n \n muclibc\n-Target RejectNegative Report Mask(UCLIBC)\n+Target RejectNegative Report Mask(UCLIBC) Var(linux_uclibc) Init(UCLIBC_DEFAULT ? OPTION_MASK_UCLIBC : 0)\n Use uClibc instead of GNU libc\n \n mglibc\n-Target RejectNegative Report InverseMask(UCLIBC, GLIBC)\n+Target RejectNegative Report InverseMask(UCLIBC, GLIBC) Var(linux_uclibc) VarExists\n Use GNU libc instead of uClibc"}, {"sha": "5e31e46af0abfa5b39fe796436a538e9b3187df8", "filename": "gcc/config/m32r/linux.h", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bd85ce0dab76952294825f0e9ed274301a275e7/gcc%2Fconfig%2Fm32r%2Flinux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bd85ce0dab76952294825f0e9ed274301a275e7/gcc%2Fconfig%2Fm32r%2Flinux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm32r%2Flinux.h?ref=7bd85ce0dab76952294825f0e9ed274301a275e7", "patch": "@@ -1,5 +1,5 @@\n /* Definitions for Renesas M32R running Linux-based GNU systems using ELF.\n-   Copyright (C) 2003, 2004 Free Software Foundation, Inc.\n+   Copyright (C) 2003, 2004, 2006 Free Software Foundation, Inc.\n \n    This file is part of GCC.\n \n@@ -59,22 +59,24 @@\n \n /* If ELF is the default format, we should not use /lib/elf.  */\n \n+#define GLIBC_DYNAMIC_LINKER \"/lib/ld-linux.so.2\"\n+\n #undef\tLINK_SPEC\n #if TARGET_LITTLE_ENDIAN\n #define LINK_SPEC \"%(link_cpu) -m m32rlelf_linux %{shared:-shared} \\\n   %{!shared: \\\n     %{!ibcs: \\\n       %{!static: \\\n \t%{rdynamic:-export-dynamic} \\\n-\t%{!dynamic-linker:-dynamic-linker /lib/ld-linux.so.2}} \\\n+\t%{!dynamic-linker:-dynamic-linker \" LINUX_DYNAMIC_LINKER \"}} \\\n \t%{static:-static}}}\"\n #else\n #define LINK_SPEC \"%(link_cpu) -m m32relf_linux %{shared:-shared} \\\n   %{!shared: \\\n     %{!ibcs: \\\n       %{!static: \\\n \t%{rdynamic:-export-dynamic} \\\n-\t%{!dynamic-linker:-dynamic-linker /lib/ld-linux.so.2}} \\\n+\t%{!dynamic-linker:-dynamic-linker \" LINUX_DYNAMIC_LINKER \"}} \\\n \t%{static:-static}}}\"\n #endif\n "}, {"sha": "ab957113155fc2174b635aa1ecb0e798a8bd7271", "filename": "gcc/config/m68k/linux.h", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bd85ce0dab76952294825f0e9ed274301a275e7/gcc%2Fconfig%2Fm68k%2Flinux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bd85ce0dab76952294825f0e9ed274301a275e7/gcc%2Fconfig%2Fm68k%2Flinux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Flinux.h?ref=7bd85ce0dab76952294825f0e9ed274301a275e7", "patch": "@@ -123,12 +123,14 @@ Boston, MA 02110-1301, USA.  */\n \n /* If ELF is the default format, we should not use /lib/elf.  */\n \n+#define GLIBC_DYNAMIC_LINKER \"/lib/ld.so.1\"\n+\n #undef\tLINK_SPEC\n #define LINK_SPEC \"-m m68kelf %{shared} \\\n   %{!shared: \\\n     %{!static: \\\n       %{rdynamic:-export-dynamic} \\\n-      %{!dynamic-linker*:-dynamic-linker /lib/ld.so.1}} \\\n+      %{!dynamic-linker*:-dynamic-linker \" LINUX_DYNAMIC_LINKER \"}} \\\n     %{static}}\"\n \n /* For compatibility with linux/a.out */"}, {"sha": "da78519c88c086c1c207c77e34e93c29c1173f4b", "filename": "gcc/config/mips/linux64.h", "status": "modified", "additions": 11, "deletions": 4, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bd85ce0dab76952294825f0e9ed274301a275e7/gcc%2Fconfig%2Fmips%2Flinux64.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bd85ce0dab76952294825f0e9ed274301a275e7/gcc%2Fconfig%2Fmips%2Flinux64.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Flinux64.h?ref=7bd85ce0dab76952294825f0e9ed274301a275e7", "patch": "@@ -1,6 +1,6 @@\n /* Definitions for MIPS running Linux-based GNU systems with ELF format\n    using n32/64 abi.\n-   Copyright 2002, 2003, 2004, 2005 Free Software Foundation, Inc.\n+   Copyright 2002, 2003, 2004, 2005, 2006 Free Software Foundation, Inc.\n \n This file is part of GCC.\n \n@@ -36,6 +36,13 @@ Boston, MA 02110-1301, USA.  */\n %{!shared: %{pthread:-lpthread} \\\n   %{profile:-lc_p} %{!profile: -lc}}\"\n \n+#define GLIBC_DYNAMIC_LINKER32 \"/lib/ld.so.1\"\n+#define GLIBC_DYNAMIC_LINKER64 \"/lib64/ld.so.1\"\n+#define GLIBC_DYNAMIC_LINKERN32 \"/lib32/ld.so.1\"\n+#define UCLIBC_DYNAMIC_LINKERN32 \"/lib32/ld-uClibc.so.0\"\n+#define LINUX_DYNAMIC_LINKERN32 \\\n+  CHOOSE_DYNAMIC_LINKER (GLIBC_DYNAMIC_LINKERN32, UCLIBC_DYNAMIC_LINKERN32)\n+\n #undef LINK_SPEC\n #define LINK_SPEC \"\\\n %{G*} %{EB} %{EL} %{mips1} %{mips2} %{mips3} %{mips4} \\\n@@ -47,9 +54,9 @@ Boston, MA 02110-1301, USA.  */\n       %{!static: \\\n         %{rdynamic:-export-dynamic} \\\n         %{!dynamic-linker: \\\n-\t  %{mabi=n32: -dynamic-linker /lib32/ld.so.1} \\\n-\t  %{mabi=64: -dynamic-linker /lib64/ld.so.1} \\\n-\t  %{mabi=32: -dynamic-linker /lib/ld.so.1}}} \\\n+\t  %{mabi=n32: -dynamic-linker \" LINUX_DYNAMIC_LINKERN32 \"} \\\n+\t  %{mabi=64: -dynamic-linker \" LINUX_DYNAMIC_LINKER64 \"} \\\n+\t  %{mabi=32: -dynamic-linker \" LINUX_DYNAMIC_LINKER32 \"}}} \\\n       %{static:-static}}} \\\n %{mabi=n32:-melf32%{EB:b}%{EL:l}tsmipn32} \\\n %{mabi=64:-melf64%{EB:b}%{EL:l}tsmip} \\"}, {"sha": "25600e6777158ebe4d02c11cf6f3f1088a0ba534", "filename": "gcc/config/mn10300/linux.h", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bd85ce0dab76952294825f0e9ed274301a275e7/gcc%2Fconfig%2Fmn10300%2Flinux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bd85ce0dab76952294825f0e9ed274301a275e7/gcc%2Fconfig%2Fmn10300%2Flinux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmn10300%2Flinux.h?ref=7bd85ce0dab76952294825f0e9ed274301a275e7", "patch": "@@ -1,6 +1,6 @@\n /* Definitions of taret machine for GNU compiler.\n    Matsushita AM33/2.0\n-   Copyright 2001, 2002, 2005 Free Software Foundation, Inc.\n+   Copyright 2001, 2002, 2005, 2006 Free Software Foundation, Inc.\n    Contributed by Alexandre Oliva <aoliva@redhat.com>\n \n    This file is part of GCC.\n@@ -33,11 +33,13 @@\n #undef  ASM_SPEC\n #define ASM_SPEC \"%{Wa,*:%*}\"\n \n+#define GLIBC_DYNAMIC_LINKER \"/lib/ld.so.1\"\n+\n #undef  LINK_SPEC\n #define LINK_SPEC \"%{mrelax:--relax} %{shared:-shared} \\\n    %{!static: \\\n      %{rdynamic:-export-dynamic} \\\n-     %{!dynamic-linker:-dynamic-linker /lib/ld.so.1}} \\\n+     %{!dynamic-linker:-dynamic-linker \" LINUX_DYNAMIC_LINKER \"}} \\\n    %{static:-static}\"\n \n #undef  PROCESSOR_DEFAULT"}, {"sha": "81dc152fcb8cd75c37eeaf7f98515287968d64c8", "filename": "gcc/config/pa/pa-linux.h", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bd85ce0dab76952294825f0e9ed274301a275e7/gcc%2Fconfig%2Fpa%2Fpa-linux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bd85ce0dab76952294825f0e9ed274301a275e7/gcc%2Fconfig%2Fpa%2Fpa-linux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa-linux.h?ref=7bd85ce0dab76952294825f0e9ed274301a275e7", "patch": "@@ -1,5 +1,6 @@\n /* Definitions for PA_RISC with ELF format\n-   Copyright 1999, 2000, 2001, 2002, 2003 Free Software Foundation, Inc.\n+   Copyright 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006\n+   Free Software Foundation, Inc.\n \n This file is part of GCC.\n \n@@ -44,13 +45,15 @@ Boston, MA 02110-1301, USA.  */\n /* Define this for shared library support because it isn't in the main\n    linux.h file.  */\n \n+#define GLIBC_DYNAMIC_LINKER \"/lib/ld.so.1\"\n+\n #undef LINK_SPEC\n #define LINK_SPEC \"\\\n   %{shared:-shared} \\\n   %{!shared: \\\n     %{!static: \\\n       %{rdynamic:-export-dynamic} \\\n-      %{!dynamic-linker:-dynamic-linker /lib/ld.so.1}} \\\n+      %{!dynamic-linker:-dynamic-linker \" LINUX_DYNAMIC_LINKER \"}} \\\n       %{static:-static}}\"\n \n /* glibc's profiling functions don't need gcc to allocate counters.  */"}, {"sha": "1816d0fc7f11c719bfdaf4c70548fefc59e3603f", "filename": "gcc/config/rs6000/linux.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bd85ce0dab76952294825f0e9ed274301a275e7/gcc%2Fconfig%2Frs6000%2Flinux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bd85ce0dab76952294825f0e9ed274301a275e7/gcc%2Fconfig%2Frs6000%2Flinux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Flinux.h?ref=7bd85ce0dab76952294825f0e9ed274301a275e7", "patch": "@@ -33,7 +33,7 @@\n \n /* glibc has float and long double forms of math functions.  */\n #undef  TARGET_C99_FUNCTIONS\n-#define TARGET_C99_FUNCTIONS 1\n+#define TARGET_C99_FUNCTIONS (OPTION_GLIBC)\n \n #undef  TARGET_OS_CPP_BUILTINS\n #define TARGET_OS_CPP_BUILTINS()\t\t\\"}, {"sha": "d292380b4ba5368b46c8d595d9be0a9c4abf841f", "filename": "gcc/config/rs6000/linux64.h", "status": "modified", "additions": 18, "deletions": 3, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bd85ce0dab76952294825f0e9ed274301a275e7/gcc%2Fconfig%2Frs6000%2Flinux64.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bd85ce0dab76952294825f0e9ed274301a275e7/gcc%2Fconfig%2Frs6000%2Flinux64.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Flinux64.h?ref=7bd85ce0dab76952294825f0e9ed274301a275e7", "patch": "@@ -283,7 +283,7 @@ extern int dot_symbols;\n \n /* glibc has float and long double forms of math functions.  */\n #undef  TARGET_C99_FUNCTIONS\n-#define TARGET_C99_FUNCTIONS 1\n+#define TARGET_C99_FUNCTIONS (OPTION_GLIBC)\n \n #undef  TARGET_OS_CPP_BUILTINS\n #define TARGET_OS_CPP_BUILTINS()\t\t\t\\\n@@ -336,13 +336,28 @@ extern int dot_symbols;\n #undef\tLINK_OS_DEFAULT_SPEC\n #define LINK_OS_DEFAULT_SPEC \"%(link_os_linux)\"\n \n+#define GLIBC_DYNAMIC_LINKER32 \"/lib/ld.so.1\"\n+#define GLIBC_DYNAMIC_LINKER64 \"/lib64/ld64.so.1\"\n+#define UCLIBC_DYNAMIC_LINKER32 \"/lib/ld-uClibc.so.0\"\n+#define UCLIBC_DYNAMIC_LINKER64 \"/lib/ld64-uClibc.so.0\"\n+#if UCLIBC_DEFAULT\n+#define CHOOSE_DYNAMIC_LINKER(G, U) \"%{mglibc:%{muclibc:%e-mglibc and -muclibc used together}\" G \";:\" U \"}\"\n+#else\n+#define CHOOSE_DYNAMIC_LINKER(G, U) \"%{muclibc:%{mglibc:%e-mglibc and -muclibc used together}\" U \";:\" G \"}\"\n+#endif\n+#define LINUX_DYNAMIC_LINKER32 \\\n+  CHOOSE_DYNAMIC_LINKER (GLIBC_DYNAMIC_LINKER32, UCLIBC_DYNAMIC_LINKER32)\n+#define LINUX_DYNAMIC_LINKER64 \\\n+  CHOOSE_DYNAMIC_LINKER (GLIBC_DYNAMIC_LINKER64, UCLIBC_DYNAMIC_LINKER64)\n+\n+\n #define LINK_OS_LINUX_SPEC32 \"-m elf32ppclinux %{!shared: %{!static: \\\n   %{rdynamic:-export-dynamic} \\\n-  %{!dynamic-linker:-dynamic-linker /lib/ld.so.1}}}\"\n+  %{!dynamic-linker:-dynamic-linker \" LINUX_DYNAMIC_LINKER32 \"}}}\"\n \n #define LINK_OS_LINUX_SPEC64 \"-m elf64ppc %{!shared: %{!static: \\\n   %{rdynamic:-export-dynamic} \\\n-  %{!dynamic-linker:-dynamic-linker /lib64/ld64.so.1}}}\"\n+  %{!dynamic-linker:-dynamic-linker \" LINUX_DYNAMIC_LINKER64 \"}}}\"\n \n #undef  TOC_SECTION_ASM_OP\n #define TOC_SECTION_ASM_OP \\"}, {"sha": "d3382bdbde5a8fb93b1dc067f89f0c0545239751", "filename": "gcc/config/rs6000/sysv4.h", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bd85ce0dab76952294825f0e9ed274301a275e7/gcc%2Fconfig%2Frs6000%2Fsysv4.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bd85ce0dab76952294825f0e9ed274301a275e7/gcc%2Fconfig%2Frs6000%2Fsysv4.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fsysv4.h?ref=7bd85ce0dab76952294825f0e9ed274301a275e7", "patch": "@@ -909,9 +909,19 @@ extern int fixuplabelno;\n \n #define LINK_START_LINUX_SPEC \"\"\n \n+#define GLIBC_DYNAMIC_LINKER \"/lib/ld.so.1\"\n+#define UCLIBC_DYNAMIC_LINKER \"/lib/ld-uClibc.so.0\"\n+#if UCLIBC_DEFAULT\n+#define CHOOSE_DYNAMIC_LINKER(G, U) \"%{mglibc:%{muclibc:%e-mglibc and -muclibc used together}\" G \";:\" U \"}\"\n+#else\n+#define CHOOSE_DYNAMIC_LINKER(G, U) \"%{muclibc:%{mglibc:%e-mglibc and -muclibc used together}\" U \";:\" G \"}\"\n+#endif\n+#define LINUX_DYNAMIC_LINKER \\\n+  CHOOSE_DYNAMIC_LINKER (GLIBC_DYNAMIC_LINKER, UCLIBC_DYNAMIC_LINKER)\n+\n #define LINK_OS_LINUX_SPEC \"-m elf32ppclinux %{!shared: %{!static: \\\n   %{rdynamic:-export-dynamic} \\\n-  %{!dynamic-linker:-dynamic-linker /lib/ld.so.1}}}\"\n+  %{!dynamic-linker:-dynamic-linker \" LINUX_DYNAMIC_LINKER \"}}}\"\n \n #if defined(HAVE_LD_EH_FRAME_HDR)\n # define LINK_EH_SPEC \"%{!static:--eh-frame-hdr} \""}, {"sha": "8efcaec339f6230ee59426af083602a945e1df01", "filename": "gcc/config/s390/linux.h", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bd85ce0dab76952294825f0e9ed274301a275e7/gcc%2Fconfig%2Fs390%2Flinux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bd85ce0dab76952294825f0e9ed274301a275e7/gcc%2Fconfig%2Fs390%2Flinux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Flinux.h?ref=7bd85ce0dab76952294825f0e9ed274301a275e7", "patch": "@@ -1,5 +1,6 @@\n /* Definitions for Linux for S/390.\n-   Copyright (C) 1999, 2000, 2001, 2002, 2004 Free Software Foundation, Inc.\n+   Copyright (C) 1999, 2000, 2001, 2002, 2004, 2005, 2006\n+   Free Software Foundation, Inc.\n    Contributed by Hartmut Penner (hpenner@de.ibm.com) and\n                   Ulrich Weigand (uweigand@de.ibm.com).\n \n@@ -72,6 +73,9 @@ Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA\n #define MULTILIB_DEFAULTS { \"m31\" }\n #endif\n \n+#define GLIBC_DYNAMIC_LINKER32 \"/lib/ld.so.1\"\n+#define GLIBC_DYNAMIC_LINKER64 \"/lib/ld64.so.1\"\n+\n #undef  LINK_SPEC\n #define LINK_SPEC \\\n   \"%{m31:-m elf_s390}%{m64:-m elf64_s390} \\\n@@ -81,8 +85,8 @@ Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA\n       %{!static: \\\n \t%{rdynamic:-export-dynamic} \\\n \t%{!dynamic-linker: \\\n-          %{m31:-dynamic-linker /lib/ld.so.1} \\\n-          %{m64:-dynamic-linker /lib/ld64.so.1}}}}\"\n+          %{m31:-dynamic-linker \" LINUX_DYNAMIC_LINKER32 \"} \\\n+          %{m64:-dynamic-linker \" LINUX_DYNAMIC_LINKER64 \"}}}}\"\n \n \n #define TARGET_ASM_FILE_END file_end_indicate_exec_stack"}, {"sha": "94c31662a2c0dbddedbfddde438037ea9051e34b", "filename": "gcc/config/sh/linux.h", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bd85ce0dab76952294825f0e9ed274301a275e7/gcc%2Fconfig%2Fsh%2Flinux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bd85ce0dab76952294825f0e9ed274301a275e7/gcc%2Fconfig%2Fsh%2Flinux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Flinux.h?ref=7bd85ce0dab76952294825f0e9ed274301a275e7", "patch": "@@ -1,5 +1,5 @@\n /* Definitions for SH running Linux-based GNU systems using ELF\n-   Copyright (C) 1999, 2000, 2002, 2003, 2004, 2005\n+   Copyright (C) 1999, 2000, 2002, 2003, 2004, 2005, 2006\n    Free Software Foundation, Inc.\n    Contributed by Kazumoto Kojima <kkojima@rr.iij4u.or.jp>\n \n@@ -48,14 +48,16 @@ Boston, MA 02110-1301, USA.  */\n \n #define TARGET_ASM_FILE_END file_end_indicate_exec_stack\n \n+#define GLIBC_DYNAMIC_LINKER \"/lib/ld-linux.so.2\"\n+\n #undef SUBTARGET_LINK_EMUL_SUFFIX\n #define SUBTARGET_LINK_EMUL_SUFFIX \"_linux\"\n #undef SUBTARGET_LINK_SPEC\n #define SUBTARGET_LINK_SPEC \\\n   \"%{shared:-shared} \\\n    %{!static: \\\n      %{rdynamic:-export-dynamic} \\\n-     %{!dynamic-linker:-dynamic-linker /lib/ld-linux.so.2}} \\\n+     %{!dynamic-linker:-dynamic-linker \" LINUX_DYNAMIC_LINKER \"}} \\\n    %{static:-static}\"\n \n /* Output assembler code to STREAM to call the profiler.  */"}, {"sha": "5af67a6a34d9b49b308c38423119f4d48df2153f", "filename": "gcc/config/sparc/linux.h", "status": "modified", "additions": 14, "deletions": 3, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bd85ce0dab76952294825f0e9ed274301a275e7/gcc%2Fconfig%2Fsparc%2Flinux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bd85ce0dab76952294825f0e9ed274301a275e7/gcc%2Fconfig%2Fsparc%2Flinux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Flinux.h?ref=7bd85ce0dab76952294825f0e9ed274301a275e7", "patch": "@@ -1,5 +1,5 @@\n /* Definitions for SPARC running Linux-based GNU systems with ELF.\n-   Copyright (C) 1996, 1997, 1998, 1999, 2000, 2002, 2003, 2004, 2005\n+   Copyright (C) 1996, 1997, 1998, 1999, 2000, 2002, 2003, 2004, 2005, 2006\n    Free Software Foundation, Inc.\n    Contributed by Eddie C. Dost (ecd@skynet.be)\n \n@@ -121,14 +121,25 @@ Boston, MA 02110-1301, USA.  */\n \n /* If ELF is the default format, we should not use /lib/elf.  */\n \n+#define GLIBC_DYNAMIC_LINKER \"/lib/ld-linux.so.2\"\n+#define UCLIBC_DYNAMIC_LINKER \"/lib/ld-uClibc.so.0\"\n+#if UCLIBC_DEFAULT\n+#define CHOOSE_DYNAMIC_LINKER(G, U) \"%{mglibc:%{muclibc:%e-mglibc and -muclibc used together}\" G \";:\" U \"}\"\n+#else\n+#define CHOOSE_DYNAMIC_LINKER(G, U) \"%{muclibc:%{mglibc:%e-mglibc and -muclibc used together}\" U \";:\" G \"}\"\n+#endif\n+#define LINUX_DYNAMIC_LINKER \\\n+  CHOOSE_DYNAMIC_LINKER (GLIBC_DYNAMIC_LINKER, UCLIBC_DYNAMIC_LINKER)\n+\n+\n #undef  LINK_SPEC\n #define LINK_SPEC \"-m elf32_sparc -Y P,/usr/lib %{shared:-shared} \\\n   %{!mno-relax:%{!r:-relax}} \\\n   %{!shared: \\\n     %{!ibcs: \\\n       %{!static: \\\n         %{rdynamic:-export-dynamic} \\\n-        %{!dynamic-linker:-dynamic-linker /lib/ld-linux.so.2}} \\\n+        %{!dynamic-linker:-dynamic-linker \" LINUX_DYNAMIC_LINKER \"}} \\\n         %{static:-static}}}\"\n \n /* The sun bundled assembler doesn't accept -Yd, (and neither does gas).\n@@ -202,7 +213,7 @@ do {\t\t\t\t\t\t\t\t\t\\\n \n /* Determine whether the entire c99 runtime is present in the\n    runtime library.  */\n-#define TARGET_C99_FUNCTIONS 1\n+#define TARGET_C99_FUNCTIONS (OPTION_GLIBC)\n \n #define TARGET_POSIX_IO\n "}, {"sha": "a6244f1ed8a3fbafcaa15a30cf44d22d745aa04d", "filename": "gcc/config/sparc/linux64.h", "status": "modified", "additions": 20, "deletions": 6, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bd85ce0dab76952294825f0e9ed274301a275e7/gcc%2Fconfig%2Fsparc%2Flinux64.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bd85ce0dab76952294825f0e9ed274301a275e7/gcc%2Fconfig%2Fsparc%2Flinux64.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Flinux64.h?ref=7bd85ce0dab76952294825f0e9ed274301a275e7", "patch": "@@ -1,5 +1,5 @@\n /* Definitions for 64-bit SPARC running Linux-based GNU systems with ELF.\n-   Copyright 1996, 1997, 1998, 2000, 2002, 2003, 2004, 2005\n+   Copyright 1996, 1997, 1998, 2000, 2002, 2003, 2004, 2005, 2006\n    Free Software Foundation, Inc.\n    Contributed by David S. Miller (davem@caip.rutgers.edu)\n \n@@ -143,6 +143,20 @@ Boston, MA 02110-1301, USA.  */\n \n /* If ELF is the default format, we should not use /lib/elf.  */\n \n+#define GLIBC_DYNAMIC_LINKER32 \"/lib/ld-linux.so.2\"\n+#define GLIBC_DYNAMIC_LINKER64 \"/lib64/ld-linux.so.2\"\n+#define UCLIBC_DYNAMIC_LINKER32 \"/lib/ld-uClibc.so.0\"\n+#define UCLIBC_DYNAMIC_LINKER64 \"/lib/ld64-uClibc.so.0\"\n+#if UCLIBC_DEFAULT\n+#define CHOOSE_DYNAMIC_LINKER(G, U) \"%{mglibc:%{muclibc:%e-mglibc and -muclibc used together}\" G \";:\" U \"}\"\n+#else\n+#define CHOOSE_DYNAMIC_LINKER(G, U) \"%{muclibc:%{mglibc:%e-mglibc and -muclibc used together}\" U \";:\" G \"}\"\n+#endif\n+#define LINUX_DYNAMIC_LINKER32 \\\n+  CHOOSE_DYNAMIC_LINKER (GLIBC_DYNAMIC_LINKER32, UCLIBC_DYNAMIC_LINKER32)\n+#define LINUX_DYNAMIC_LINKER64 \\\n+  CHOOSE_DYNAMIC_LINKER (GLIBC_DYNAMIC_LINKER64, UCLIBC_DYNAMIC_LINKER64)\n+\n #ifdef SPARC_BI_ARCH\n \n #undef SUBTARGET_EXTRA_SPECS\n@@ -151,13 +165,13 @@ Boston, MA 02110-1301, USA.  */\n   { \"link_arch64\",       LINK_ARCH64_SPEC },              \\\n   { \"link_arch_default\", LINK_ARCH_DEFAULT_SPEC },\t  \\\n   { \"link_arch\",\t LINK_ARCH_SPEC },\n-    \n+\n #define LINK_ARCH32_SPEC \"-m elf32_sparc -Y P,/usr/lib %{shared:-shared} \\\n   %{!shared: \\\n     %{!ibcs: \\\n       %{!static: \\\n         %{rdynamic:-export-dynamic} \\\n-        %{!dynamic-linker:-dynamic-linker /lib/ld-linux.so.2}} \\\n+        %{!dynamic-linker:-dynamic-linker \" LINUX_DYNAMIC_LINKER32 \"}} \\\n         %{static:-static}}} \\\n \"\n \n@@ -166,7 +180,7 @@ Boston, MA 02110-1301, USA.  */\n     %{!ibcs: \\\n       %{!static: \\\n         %{rdynamic:-export-dynamic} \\\n-        %{!dynamic-linker:-dynamic-linker /lib64/ld-linux.so.2}} \\\n+        %{!dynamic-linker:-dynamic-linker \" LINUX_DYNAMIC_LINKER64 \"}} \\\n         %{static:-static}}} \\\n \"\n \n@@ -247,7 +261,7 @@ Boston, MA 02110-1301, USA.  */\n     %{!ibcs: \\\n       %{!static: \\\n         %{rdynamic:-export-dynamic} \\\n-        %{!dynamic-linker:-dynamic-linker /lib64/ld-linux.so.2}} \\\n+        %{!dynamic-linker:-dynamic-linker \" LINUX_DYNAMIC_LINKER64 \"}} \\\n         %{static:-static}}} \\\n %{mlittle-endian:-EL} \\\n %{!mno-relax:%{!r:-relax}} \\\n@@ -330,7 +344,7 @@ do {\t\t\t\t\t\t\t\t\t\\\n \n /* Determine whether the entire c99 runtime is present in the\n    runtime library.  */\n-#define TARGET_C99_FUNCTIONS 1\n+#define TARGET_C99_FUNCTIONS (OPTION_GLIBC)\n \n #define TARGET_POSIX_IO\n "}, {"sha": "0a64a1ed0b32aa91138f0b2943869a6dfec227b8", "filename": "gcc/config/xtensa/linux.h", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bd85ce0dab76952294825f0e9ed274301a275e7/gcc%2Fconfig%2Fxtensa%2Flinux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bd85ce0dab76952294825f0e9ed274301a275e7/gcc%2Fconfig%2Fxtensa%2Flinux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fxtensa%2Flinux.h?ref=7bd85ce0dab76952294825f0e9ed274301a275e7", "patch": "@@ -1,6 +1,6 @@\n /* Xtensa Linux configuration.\n    Derived from the configuration for GCC for Intel i386 running Linux.\n-   Copyright (C) 2001, 2002, 2003 Free Software Foundation, Inc.\n+   Copyright (C) 2001, 2002, 2003, 2006 Free Software Foundation, Inc.\n \n This file is part of GCC.\n \n@@ -43,14 +43,16 @@ Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA\n   %{mlongcalls:--longcalls} \\\n   %{mno-longcalls:--no-longcalls}\"\n \n+#define GLIBC_DYNAMIC_LINKER \"/lib/ld.so.1\"\n+\n #undef LINK_SPEC\n #define LINK_SPEC \\\n  \"%{shared:-shared} \\\n   %{!shared: \\\n     %{!ibcs: \\\n       %{!static: \\\n         %{rdynamic:-export-dynamic} \\\n-        %{!dynamic-linker:-dynamic-linker /lib/ld.so.1}} \\\n+        %{!dynamic-linker:-dynamic-linker \" LINUX_DYNAMIC_LINKER \"}} \\\n       %{static:-static}}}\"\n \n #undef LOCAL_LABEL_PREFIX"}, {"sha": "1ddd4fe0c3ec58b0bd8155198c854fac4deefbf6", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bd85ce0dab76952294825f0e9ed274301a275e7/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bd85ce0dab76952294825f0e9ed274301a275e7/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=7bd85ce0dab76952294825f0e9ed274301a275e7", "patch": "@@ -8801,8 +8801,7 @@ on @samp{*-*-linux-*uclibc*} targets.\n @item -muclibc\n @opindex muclibc\n Use uClibc instead of the GNU C library.  This is the default on\n-@samp{*-*-linux-*uclibc*} targets.  GCC currently only supports uClibc\n-on ARM and 32-bit MIPS targets.\n+@samp{*-*-linux-*uclibc*} targets.\n @end table\n \n @node H8/300 Options"}, {"sha": "e7ffc1a646ebbc96ff69e52a3b19544f634285e5", "filename": "gcc/opth-gen.awk", "status": "modified", "additions": 13, "deletions": 4, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bd85ce0dab76952294825f0e9ed274301a275e7/gcc%2Fopth-gen.awk", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bd85ce0dab76952294825f0e9ed274301a275e7/gcc%2Fopth-gen.awk", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fopth-gen.awk?ref=7bd85ce0dab76952294825f0e9ed274301a275e7", "patch": "@@ -1,4 +1,4 @@\n-#  Copyright (C) 2003,2004 Free Software Foundation, Inc.\n+#  Copyright (C) 2003,2004,2005,2006 Free Software Foundation, Inc.\n #  Contributed by Kelley Cook, June 2004.\n #  Original code from Neil Booth, May 2003.\n #\n@@ -118,9 +118,18 @@ print \"\"\n \n for (i = 0; i < n_opts; i++) {\n \topt = opt_args(\"InverseMask\", flags[i])\n-\tif (opt ~ \",\")\n-\t\tprint \"#define TARGET_\" nth_arg(1, opt) \\\n-\t\t      \" ((target_flags & MASK_\" nth_arg(0, opt) \") == 0)\"\n+\tif (opt ~ \",\") {\n+\t\tvname = var_name(flags[i])\n+\t\tmacro = \"OPTION_\"\n+\t\tmask = \"OPTION_MASK_\"\n+\t\tif (vname == \"\") {\n+\t\t\tvname = \"target_flags\"\n+\t\t\tmacro = \"TARGET_\"\n+\t\t\tmask = \"MASK_\"\n+\t\t}\n+\t\tprint \"#define \" macro nth_arg(1, opt) \\\n+\t\t      \" ((\" vname \" & \" mask nth_arg(0, opt) \") == 0)\"\n+\t}\n }\n print \"\"\n "}, {"sha": "7040443cf2e01a101deb5d6b328aac8e021f52d8", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bd85ce0dab76952294825f0e9ed274301a275e7/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bd85ce0dab76952294825f0e9ed274301a275e7/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=7bd85ce0dab76952294825f0e9ed274301a275e7", "patch": "@@ -1,3 +1,7 @@\n+2006-02-18  Joseph S. Myers  <joseph@codesourcery.com>\n+\n+\t* gcc.dg/glibc-uclibc-1.c, gcc.dg/glibc-uclibc-2.c: New tests.\n+\n 2006-02-17  Grigory Zagorodnev <grigory_zagorodnev@linux.intel.com>\n \n \t* gcc.dg/cpp/undef3.c: New test."}, {"sha": "46c417536dcd73c5a01f326a6717c8d4c8befce4", "filename": "gcc/testsuite/gcc.dg/glibc-uclibc-1.c", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bd85ce0dab76952294825f0e9ed274301a275e7/gcc%2Ftestsuite%2Fgcc.dg%2Fglibc-uclibc-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bd85ce0dab76952294825f0e9ed274301a275e7/gcc%2Ftestsuite%2Fgcc.dg%2Fglibc-uclibc-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fglibc-uclibc-1.c?ref=7bd85ce0dab76952294825f0e9ed274301a275e7", "patch": "@@ -0,0 +1,6 @@\n+/* Test -mglibc and -muclibc not allowed together.  */\n+/* Origin: Joseph Myers <joseph@codesourcery.com> */\n+/* { dg-do link { target *-*-linux* } } */\n+/* { dg-options \"-mglibc -muclibc\" } */\n+\n+/* { dg-error \"-mglibc and -muclibc used together\" \"\" { target *-*-* } 0 } */"}, {"sha": "344fb065e8f01733ad0b557b10427c09516d008a", "filename": "gcc/testsuite/gcc.dg/glibc-uclibc-2.c", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bd85ce0dab76952294825f0e9ed274301a275e7/gcc%2Ftestsuite%2Fgcc.dg%2Fglibc-uclibc-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bd85ce0dab76952294825f0e9ed274301a275e7/gcc%2Ftestsuite%2Fgcc.dg%2Fglibc-uclibc-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fglibc-uclibc-2.c?ref=7bd85ce0dab76952294825f0e9ed274301a275e7", "patch": "@@ -0,0 +1,6 @@\n+/* Test -mglibc and -muclibc not allowed together.  */\n+/* Origin: Joseph Myers <joseph@codesourcery.com> */\n+/* { dg-do link { target *-*-linux* } } */\n+/* { dg-options \"-muclibc -mglibc\" } */\n+\n+/* { dg-error \"-mglibc and -muclibc used together\" \"\" { target *-*-* } 0 } */"}]}