{"sha": "6d1a1d9d65bf9729e5eba6670cbbb94d355480b0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmQxYTFkOWQ2NWJmOTcyOWU1ZWJhNjY3MGNiYmI5NGQzNTU0ODBiMA==", "commit": {"author": {"name": "Richard Sandiford", "email": "rdsandiford@googlemail.com", "date": "2014-01-20T21:21:53Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2014-01-20T21:21:53Z"}, "message": "target-supports.exp (force_conventional_output_for): New procedure.\n\ngcc/testsuite/\n\t* lib/target-supports.exp (force_conventional_output_for): New\n\tprocedure.\n\t* lib/scanasm.exp (scan-assembler_required_options)\n\t(scan-assembler-not_required_options)\n\t(scan-assembler-times_required_options): Replace with\n\tforce_conventional_output_fors.\n\t* lib/scanrtl.exp: Force conventional output for all rtl dump scans.\n\t* gcc.target/mips/octeon-pipe-1.c: Remove -ffat-lto-objects.\n\nFrom-SVN: r206860", "tree": {"sha": "b5c17b8c6bf7653026721d5c18dced2a2d1cd5ea", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b5c17b8c6bf7653026721d5c18dced2a2d1cd5ea"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6d1a1d9d65bf9729e5eba6670cbbb94d355480b0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6d1a1d9d65bf9729e5eba6670cbbb94d355480b0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6d1a1d9d65bf9729e5eba6670cbbb94d355480b0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6d1a1d9d65bf9729e5eba6670cbbb94d355480b0/comments", "author": {"login": "rsandifo", "id": 4235983, "node_id": "MDQ6VXNlcjQyMzU5ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/4235983?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo", "html_url": "https://github.com/rsandifo", "followers_url": "https://api.github.com/users/rsandifo/followers", "following_url": "https://api.github.com/users/rsandifo/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo/orgs", "repos_url": "https://api.github.com/users/rsandifo/repos", "events_url": "https://api.github.com/users/rsandifo/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "9d0bb2ea718b444970519eb7faae8123c282501d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9d0bb2ea718b444970519eb7faae8123c282501d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9d0bb2ea718b444970519eb7faae8123c282501d"}], "stats": {"total": 52, "additions": 39, "deletions": 13}, "files": [{"sha": "10a7625da1a68dd2c109898e27d01d77265c76ca", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d1a1d9d65bf9729e5eba6670cbbb94d355480b0/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d1a1d9d65bf9729e5eba6670cbbb94d355480b0/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=6d1a1d9d65bf9729e5eba6670cbbb94d355480b0", "patch": "@@ -1,3 +1,14 @@\n+2014-01-20  Richard Sandiford  <rdsandiford@googlemail.com>\n+\n+\t* lib/target-supports.exp (force_conventional_output_for): New\n+\tprocedure.\n+\t* lib/scanasm.exp (scan-assembler_required_options)\n+\t(scan-assembler-not_required_options)\n+\t(scan-assembler-times_required_options): Replace with\n+\tforce_conventional_output_fors.\n+\t* lib/scanrtl.exp: Force conventional output for all rtl dump scans.\n+\t* gcc.target/mips/octeon-pipe-1.c: Remove -ffat-lto-objects.\n+\n 2014-01-20  H.J. Lu  <hongjiu.lu@intel.com>\n \n \tPR middle-end/59789"}, {"sha": "4488e3d5117165bb28438d7d0069b156afef3a73", "filename": "gcc/testsuite/gcc.target/mips/octeon-pipe-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d1a1d9d65bf9729e5eba6670cbbb94d355480b0/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Focteon-pipe-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d1a1d9d65bf9729e5eba6670cbbb94d355480b0/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Focteon-pipe-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Focteon-pipe-1.c?ref=6d1a1d9d65bf9729e5eba6670cbbb94d355480b0", "patch": "@@ -1,6 +1,6 @@\n /* Check that we use the octeon pipeline description.  */\n /* { dg-do compile } */\n-/* { dg-options \"-march=octeon -fschedule-insns2 -fdump-rtl-sched2 -ffat-lto-objects\" } */\n+/* { dg-options \"-march=octeon -fschedule-insns2 -fdump-rtl-sched2\" } */\n /* { dg-skip-if \"code quality test\" { *-*-* } { \"-O0\" } { \"\" } } */\n \n NOMIPS16 int f (int a, int b)"}, {"sha": "6e3e9d8fb67dfb9671049d110f9b38a68425eb99", "filename": "gcc/testsuite/lib/scanasm.exp", "status": "modified", "additions": 3, "deletions": 12, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d1a1d9d65bf9729e5eba6670cbbb94d355480b0/gcc%2Ftestsuite%2Flib%2Fscanasm.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d1a1d9d65bf9729e5eba6670cbbb94d355480b0/gcc%2Ftestsuite%2Flib%2Fscanasm.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Fscanasm.exp?ref=6d1a1d9d65bf9729e5eba6670cbbb94d355480b0", "patch": "@@ -82,10 +82,7 @@ proc scan-assembler { args } {\n     dg-scan \"scan-assembler\" 1 $testcase $output_file $args\n }\n \n-proc scan-assembler_required_options { args } {\n-    global gcc_force_conventional_output\n-    return $gcc_force_conventional_output\n-}\n+force_conventional_output_for scan-assembler\n \n # Check that a pattern is not present in the .s file produced by the\n # compiler.  See dg-scan for details.\n@@ -97,10 +94,7 @@ proc scan-assembler-not { args } {\n     dg-scan \"scan-assembler-not\" 0 $testcase $output_file $args\n }\n \n-proc scan-assembler-not_required_options { args } {\n-    global gcc_force_conventional_output\n-    return $gcc_force_conventional_output\n-}\n+force_conventional_output_for scan-assembler-not\n \n # Return the scan for the assembly for hidden visibility. \n \n@@ -259,10 +253,7 @@ proc scan-assembler-times { args } {\n     }\n }\n \n-proc scan-assembler-times_required_options { args } {\n-    global gcc_force_conventional_output\n-    return $gcc_force_conventional_output\n-}\n+force_conventional_output_for scan-assembler-times\n \n # Utility for scanning demangled compiler result, invoked via dg-final.\n # Call pass if pattern is present, otherwise fail."}, {"sha": "0507cc9138d076feb443fb44fdd30644d7128366", "filename": "gcc/testsuite/lib/scanrtl.exp", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d1a1d9d65bf9729e5eba6670cbbb94d355480b0/gcc%2Ftestsuite%2Flib%2Fscanrtl.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d1a1d9d65bf9729e5eba6670cbbb94d355480b0/gcc%2Ftestsuite%2Flib%2Fscanrtl.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Fscanrtl.exp?ref=6d1a1d9d65bf9729e5eba6670cbbb94d355480b0", "patch": "@@ -42,6 +42,8 @@ proc scan-rtl-dump { args } {\n     }\n }\n \n+force_conventional_output_for scan-rtl-dump\n+\n # Call pass if pattern is present given number of times, otherwise fail.\n # Argument 0 is the regexp to match\n # Argument 1 is number of times the regexp must be found\n@@ -66,6 +68,8 @@ proc scan-rtl-dump-times { args } {\n     }\n }\n \n+force_conventional_output_for scan-rtl-dump-times\n+\n # Call pass if pattern is not present, otherwise fail.\n #\n # Argument 0 is the regexp to match\n@@ -90,6 +94,8 @@ proc scan-rtl-dump-not { args } {\n     }\n }\n \n+force_conventional_output_for scan-rtl-dump-not\n+\n # Utility for scanning demangled compiler result, invoked via dg-final.\n # Call pass if pattern is present, otherwise fail.\n #\n@@ -115,6 +121,8 @@ proc scan-rtl-dump-dem { args } {\n     }\n }\n \n+force_conventional_output_for scan-rtl-dump-dem\n+\n # Call pass if demangled pattern is not present, otherwise fail.\n #\n # Argument 0 is the regexp to match\n@@ -139,3 +147,5 @@ proc scan-rtl-dump-dem-not { args } {\n \t\t\t  \"\\[0-9\\]\\[0-9\\]\\[0-9\\]r.[lindex $args 1]\"\n     }\n }\n+\n+force_conventional_output_for scan-rtl-dump-dem-not"}, {"sha": "a8029c8477e7814543c0d1fd4aa3977d6151592a", "filename": "gcc/testsuite/lib/target-supports.exp", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d1a1d9d65bf9729e5eba6670cbbb94d355480b0/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d1a1d9d65bf9729e5eba6670cbbb94d355480b0/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp?ref=6d1a1d9d65bf9729e5eba6670cbbb94d355480b0", "patch": "@@ -5667,3 +5667,17 @@ proc check_effective_target_fenv_exceptions {} {\n \t}\n     } \"-std=gnu99\"]\n }\n+\n+# Record that dg-final test TEST requires convential compilation.\n+\n+proc force_conventional_output_for { test } {\n+    if { [info proc $test] == \"\" } {\n+\tperror \"$test does not exist\"\n+\texit 1\n+    }\n+    proc ${test}_required_options {} {\n+\tglobal gcc_force_conventional_output\n+\treturn $gcc_force_conventional_output\n+    }\n+}\n+"}]}