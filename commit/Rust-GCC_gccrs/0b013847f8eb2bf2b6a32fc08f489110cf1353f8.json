{"sha": "0b013847f8eb2bf2b6a32fc08f489110cf1353f8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGIwMTM4NDdmOGViMmJmMmI2YTMyZmMwOGY0ODkxMTBjZjEzNTNmOA==", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2013-05-08T18:05:41Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2013-05-08T18:05:41Z"}, "message": "mmx.md (*vec_extract* splitters): Simplify post-reload splitter preparation statements.\n\n\t* config/i386/mmx.md (*vec_extract* splitters): Simplify post-reload\n\tsplitter preparation statements.\n\t* config/i386/sse.md (*vec_extract* splitters): Ditto.\n\t(*avx_vperm_broadcast_<mode>): Use adjust_address instead of\n\tadjust_address_nv.\n\nFrom-SVN: r198718", "tree": {"sha": "34121bc1e955fa5436ee2bc5460f8effbae5da85", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/34121bc1e955fa5436ee2bc5460f8effbae5da85"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0b013847f8eb2bf2b6a32fc08f489110cf1353f8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0b013847f8eb2bf2b6a32fc08f489110cf1353f8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0b013847f8eb2bf2b6a32fc08f489110cf1353f8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0b013847f8eb2bf2b6a32fc08f489110cf1353f8/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "1dc3d6e9e10ae9260484c0e2009c360a7ab0cc19", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1dc3d6e9e10ae9260484c0e2009c360a7ab0cc19", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1dc3d6e9e10ae9260484c0e2009c360a7ab0cc19"}], "stats": {"total": 65, "additions": 26, "deletions": 39}, "files": [{"sha": "b6295171197bead66c4dc83da9f6d650cd4806ef", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0b013847f8eb2bf2b6a32fc08f489110cf1353f8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0b013847f8eb2bf2b6a32fc08f489110cf1353f8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0b013847f8eb2bf2b6a32fc08f489110cf1353f8", "patch": "@@ -1,3 +1,11 @@\n+2013-05-08  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* config/i386/mmx.md (*vec_extract* splitters): Simplify post-reload\n+\tsplitter preparation statements.\n+\t* config/i386/sse.md (*vec_extract* splitters): Ditto.\n+\t(*avx_vperm_broadcast_<mode>): Use adjust_address instead of\n+\tadjust_address_nv.\n+\n 2013-05-08  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>\n \n \t* gimple-ssa-strength-reduction.c (count_candidates): Change"}, {"sha": "ebf7bcd205ac4e072b63e0839024f8b251498cf4", "filename": "gcc/config/i386/mmx.md", "status": "modified", "additions": 12, "deletions": 26, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0b013847f8eb2bf2b6a32fc08f489110cf1353f8/gcc%2Fconfig%2Fi386%2Fmmx.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0b013847f8eb2bf2b6a32fc08f489110cf1353f8/gcc%2Fconfig%2Fi386%2Fmmx.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fmmx.md?ref=0b013847f8eb2bf2b6a32fc08f489110cf1353f8", "patch": "@@ -594,15 +594,12 @@\n   \"TARGET_MMX && !(MEM_P (operands[0]) && MEM_P (operands[1]))\"\n   \"#\"\n   \"&& reload_completed\"\n-  [(const_int 0)]\n+  [(set (match_dup 0) (match_dup 1))]\n {\n-  rtx op1 = operands[1];\n-  if (REG_P (op1))\n-    op1 = gen_rtx_REG (SFmode, REGNO (op1));\n+  if (REG_P (operands[1]))\n+    operands[1] = gen_rtx_REG (SFmode, REGNO (operands[1]));\n   else\n-    op1 = gen_lowpart (SFmode, op1);\n-  emit_move_insn (operands[0], op1);\n-  DONE;\n+    operands[1] = adjust_address (operands[1], SFmode, 0);\n })\n \n ;; Avoid combining registers from different units in a single alternative,\n@@ -629,12 +626,8 @@\n \t  (match_operand:V2SF 1 \"memory_operand\")\n \t  (parallel [(const_int 1)])))]\n   \"TARGET_MMX && reload_completed\"\n-  [(const_int 0)]\n-{\n-  operands[1] = adjust_address (operands[1], SFmode, 4);\n-  emit_move_insn (operands[0], operands[1]);\n-  DONE;\n-})\n+  [(set (match_dup 0) (match_dup 1))]\n+  \"operands[1] = adjust_address (operands[1], SFmode, 4);\")\n \n (define_expand \"vec_extractv2sf\"\n   [(match_operand:SF 0 \"register_operand\")\n@@ -1289,15 +1282,12 @@\n   \"TARGET_MMX && !(MEM_P (operands[0]) && MEM_P (operands[1]))\"\n   \"#\"\n   \"&& reload_completed\"\n-  [(const_int 0)]\n+  [(set (match_dup 0) (match_dup 1))]\n {\n-  rtx op1 = operands[1];\n-  if (REG_P (op1))\n-    op1 = gen_rtx_REG (SImode, REGNO (op1));\n+  if (REG_P (operands[1]))\n+    operands[1] = gen_rtx_REG (SImode, REGNO (operands[1]));\n   else\n-    op1 = gen_lowpart (SImode, op1);\n-  emit_move_insn (operands[0], op1);\n-  DONE;\n+    operands[1] = adjust_address (operands[1], SImode, 0);\n })\n \n ;; Avoid combining registers from different units in a single alternative,\n@@ -1330,12 +1320,8 @@\n \t  (match_operand:V2SI 1 \"memory_operand\")\n \t  (parallel [(const_int 1)])))]\n   \"TARGET_MMX && reload_completed\"\n-  [(const_int 0)]\n-{\n-  operands[1] = adjust_address (operands[1], SImode, 4);\n-  emit_move_insn (operands[0], operands[1]);\n-  DONE;\n-})\n+  [(set (match_dup 0) (match_dup 1))]\n+  \"operands[1] = adjust_address (operands[1], SImode, 4);\")\n \n (define_expand \"vec_extractv2si\"\n   [(match_operand:SI 0 \"register_operand\")"}, {"sha": "9d7725076f0933d8a08c521d856be054933de4e2", "filename": "gcc/config/i386/sse.md", "status": "modified", "additions": 6, "deletions": 13, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0b013847f8eb2bf2b6a32fc08f489110cf1353f8/gcc%2Fconfig%2Fi386%2Fsse.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0b013847f8eb2bf2b6a32fc08f489110cf1353f8/gcc%2Fconfig%2Fi386%2Fsse.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsse.md?ref=0b013847f8eb2bf2b6a32fc08f489110cf1353f8", "patch": "@@ -4277,12 +4277,8 @@\n \t  (match_dup 0)\n \t  (const_int 1)))]\n   \"TARGET_SSE && reload_completed\"\n-  [(const_int 0)]\n-{\n-  emit_move_insn (adjust_address (operands[0], <ssescalarmode>mode, 0),\n-\t\t  operands[1]);\n-  DONE;\n-})\n+  [(set (match_dup 0) (match_dup 1))]\n+  \"operands[0] = adjust_address (operands[0], <ssescalarmode>mode, 0);\")\n \n (define_expand \"vec_set<mode>\"\n   [(match_operand:V 0 \"register_operand\")\n@@ -4362,12 +4358,9 @@\n   \"TARGET_SSE\"\n   \"#\"\n   \"&& reload_completed\"\n-  [(const_int 0)]\n+  [(set (match_dup 0) (match_dup 1))]\n {\n-  int i = INTVAL (operands[2]);\n-\n-  emit_move_insn (operands[0], adjust_address (operands[1], SFmode, i*4));\n-  DONE;\n+  operands[1] = adjust_address (operands[1], SFmode, INTVAL (operands[2]) * 4);\n })\n \n (define_expand \"avx_vextractf128<mode>\"\n@@ -10654,8 +10647,8 @@\n       DONE;\n     }\n \n-  operands[1] = adjust_address_nv (op1, <ssescalarmode>mode,\n-\t\t\t\t   elt * GET_MODE_SIZE (<ssescalarmode>mode));\n+  operands[1] = adjust_address (op1, <ssescalarmode>mode,\n+\t\t\t\telt * GET_MODE_SIZE (<ssescalarmode>mode));\n })\n \n (define_expand \"avx_vpermil<mode>\""}]}