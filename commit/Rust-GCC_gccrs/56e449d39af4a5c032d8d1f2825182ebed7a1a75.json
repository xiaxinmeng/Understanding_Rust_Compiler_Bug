{"sha": "56e449d39af4a5c032d8d1f2825182ebed7a1a75", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTZlNDQ5ZDM5YWY0YTVjMDMyZDhkMWYyODI1MTgyZWJlZDdhMWE3NQ==", "commit": {"author": {"name": "Sandra Loosemore", "email": "sandra@codesourcery.com", "date": "2007-09-14T18:35:12Z"}, "committer": {"name": "Sandra Loosemore", "email": "sandra@gcc.gnu.org", "date": "2007-09-14T18:35:12Z"}, "message": "tm.texi (LIBGCC2_UNWIND_ATTRIBUTE): Document.\n\n2007-09-14  Sandra Loosemore  <sandra@codesourcery.com>\n\t    Nigel Stephens  <nigel@mips.com>\n\n\tgcc/\n\t* doc/tm.texi (LIBGCC2_UNWIND_ATTRIBUTE): Document.\n\t* unwind-generic.h (LIBGCC2_UNWIND_ATTRIBUTE): Define.\n\t(_Unwind_RaiseException): Add LIBGCC2_UNWIND_ATTRIBUTE to\n\tdeclaration.\n\t(_Unwind_ForcedUnwind): Likewise.\n\t(_Unwind_Resume): Likewise.\n\t(_Unwind_Resume_or_Rethrow): Likewise.\n\t(_Unwind_Backtrace): Likewise.\n\t(_Unwind_SjLj_RaiseException): Likewise.\n\t(_Unwind_SjLj_ForcedUnwind): Likewise.\n\t(_Unwind_SjLj_Resume): Likewise.\n\t(_Unwind_SjLj_Resume_or_Rethrow): Likewise.\n\t* unwind.inc (_Unwind_RaiseException): Add LIBGCC2_UNWIND_ATTRIBUTE\n\tto definition.\n\t(_Unwind_ForcedUnwind): Likewise.\n\t(_Unwind_Resume): Likewise.\n\t(_Unwind_Resume_or_Rethrow): Likewise.\n\t(_Unwind_Backtrace): Likewise.\n\t* unwind-compat.c (_Unwind_Backtrace): Likewise.\n\t(_Unwind_ForcedUnwind): Likewise.\n\t(_Unwind_RaiseException): Likewise.\n\t(_Unwind_Resume): Likewise.\n\t(_Unwind_Resume_or_Rethrow): Likewise.\n\n\t* config/mips/mips.h (LIBGCC2_UNWIND_ATTRIBUTE): Define to force\n\tnomips16 mode when IN_LIBGCC2 with hard float.\n\nCo-Authored-By: Nigel Stephens <nigel@mips.com>\n\nFrom-SVN: r128501", "tree": {"sha": "16301c9c22fd4a89593267534d7bb3be2bc2087f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/16301c9c22fd4a89593267534d7bb3be2bc2087f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/56e449d39af4a5c032d8d1f2825182ebed7a1a75", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/56e449d39af4a5c032d8d1f2825182ebed7a1a75", "html_url": "https://github.com/Rust-GCC/gccrs/commit/56e449d39af4a5c032d8d1f2825182ebed7a1a75", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/56e449d39af4a5c032d8d1f2825182ebed7a1a75/comments", "author": {"login": "SandraLoosemore", "id": 104087111, "node_id": "U_kgDOBjQ-Rw", "avatar_url": "https://avatars.githubusercontent.com/u/104087111?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SandraLoosemore", "html_url": "https://github.com/SandraLoosemore", "followers_url": "https://api.github.com/users/SandraLoosemore/followers", "following_url": "https://api.github.com/users/SandraLoosemore/following{/other_user}", "gists_url": "https://api.github.com/users/SandraLoosemore/gists{/gist_id}", "starred_url": "https://api.github.com/users/SandraLoosemore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SandraLoosemore/subscriptions", "organizations_url": "https://api.github.com/users/SandraLoosemore/orgs", "repos_url": "https://api.github.com/users/SandraLoosemore/repos", "events_url": "https://api.github.com/users/SandraLoosemore/events{/privacy}", "received_events_url": "https://api.github.com/users/SandraLoosemore/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c417817a8575731e1e10ddf063d25d9c4cdde12a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c417817a8575731e1e10ddf063d25d9c4cdde12a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c417817a8575731e1e10ddf063d25d9c4cdde12a"}], "stats": {"total": 105, "additions": 82, "deletions": 23}, "files": [{"sha": "c51ce01730ea14aa9a775b31ba1cef43101756ce", "filename": "gcc/ChangeLog", "status": "modified", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/56e449d39af4a5c032d8d1f2825182ebed7a1a75/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/56e449d39af4a5c032d8d1f2825182ebed7a1a75/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=56e449d39af4a5c032d8d1f2825182ebed7a1a75", "patch": "@@ -1,3 +1,33 @@\n+2007-09-14  Sandra Loosemore  <sandra@codesourcery.com>\n+\t    Nigel Stephens  <nigel@mips.com>\n+\n+\t* doc/tm.texi (LIBGCC2_UNWIND_ATTRIBUTE): Document.\n+\t* unwind-generic.h (LIBGCC2_UNWIND_ATTRIBUTE): Define.\n+\t(_Unwind_RaiseException): Add LIBGCC2_UNWIND_ATTRIBUTE to\n+\tdeclaration.\n+\t(_Unwind_ForcedUnwind): Likewise.\n+\t(_Unwind_Resume): Likewise.\n+\t(_Unwind_Resume_or_Rethrow): Likewise.\n+\t(_Unwind_Backtrace): Likewise.\n+\t(_Unwind_SjLj_RaiseException): Likewise.\n+\t(_Unwind_SjLj_ForcedUnwind): Likewise.\n+\t(_Unwind_SjLj_Resume): Likewise.\n+\t(_Unwind_SjLj_Resume_or_Rethrow): Likewise.\n+\t* unwind.inc (_Unwind_RaiseException): Add LIBGCC2_UNWIND_ATTRIBUTE\n+\tto definition.\n+\t(_Unwind_ForcedUnwind): Likewise.\n+\t(_Unwind_Resume): Likewise.\n+\t(_Unwind_Resume_or_Rethrow): Likewise.\n+\t(_Unwind_Backtrace): Likewise.\n+\t* unwind-compat.c (_Unwind_Backtrace): Likewise.\n+\t(_Unwind_ForcedUnwind): Likewise.\n+\t(_Unwind_RaiseException): Likewise.\n+\t(_Unwind_Resume): Likewise.\n+\t(_Unwind_Resume_or_Rethrow): Likewise.\n+\n+\t* config/mips/mips.h (LIBGCC2_UNWIND_ATTRIBUTE): Define to force\n+\tnomips16 mode when IN_LIBGCC2 with hard float.\n+\n 2007-09-14  Richard Sandiford  <rsandifo@nildram.co.uk>\n \n \t* config/mips/sdemtk.opt: Update to GPLv3."}, {"sha": "0d23e5661052d05a5e0ff77da47ea5675bdfa4a8", "filename": "gcc/config/mips/mips.h", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/56e449d39af4a5c032d8d1f2825182ebed7a1a75/gcc%2Fconfig%2Fmips%2Fmips.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/56e449d39af4a5c032d8d1f2825182ebed7a1a75/gcc%2Fconfig%2Fmips%2Fmips.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.h?ref=56e449d39af4a5c032d8d1f2825182ebed7a1a75", "patch": "@@ -582,6 +582,17 @@ extern enum mips_llsc_setting mips_llsc;\n #endif\n #endif /* IN_LIBGCC2 */\n \n+/* Force the call stack unwinders in unwind.inc not to be MIPS16 code\n+   when compiled with hardware floating point.  This is because MIPS16\n+   code cannot save and restore the floating-point registers, which is\n+   important if in a mixed MIPS16/non-MIPS16 environment.  */\n+\n+#ifdef IN_LIBGCC2\n+#if __mips_hard_float\n+#define LIBGCC2_UNWIND_ATTRIBUTE __attribute__((__nomips16__))\n+#endif\n+#endif /* IN_LIBGCC2 */\n+\n #define TARGET_LIBGCC_SDATA_SECTION \".sdata\"\n \n #ifndef MULTILIB_ENDIAN_DEFAULT"}, {"sha": "c2da9f823a21c7174a6f58d1821ab430960784dd", "filename": "gcc/doc/tm.texi", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/56e449d39af4a5c032d8d1f2825182ebed7a1a75/gcc%2Fdoc%2Ftm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/56e449d39af4a5c032d8d1f2825182ebed7a1a75/gcc%2Fdoc%2Ftm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Ftm.texi?ref=56e449d39af4a5c032d8d1f2825182ebed7a1a75", "patch": "@@ -10336,3 +10336,10 @@ SUPPORTS_WEAK and TARGET_HAVE_NAMED_SECTIONS are true, else 0.\n This macro determines the size of the objective C jump buffer for the\n NeXT runtime. By default, OBJC_JBLEN is defined to an innocuous value.\n @end defmac\n+\n+@defmac LIBGCC2_UNWIND_ATTRIBUTE\n+Define this macro if any target-specific attributes need to be attached\n+to the functions in @file{libgcc} that provide low-level support for \n+call stack unwinding.  It is used in declarations in @file{unwind-generic.h}\n+and the associated definitions of those functions.\n+@end defmac"}, {"sha": "35b4fe884d46fbfc184a646fe0a645ff10038df6", "filename": "gcc/unwind-compat.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/56e449d39af4a5c032d8d1f2825182ebed7a1a75/gcc%2Funwind-compat.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/56e449d39af4a5c032d8d1f2825182ebed7a1a75/gcc%2Funwind-compat.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Funwind-compat.c?ref=56e449d39af4a5c032d8d1f2825182ebed7a1a75", "patch": "@@ -38,7 +38,7 @@\n extern _Unwind_Reason_Code __libunwind_Unwind_Backtrace\n   (_Unwind_Trace_Fn, void *);\n \n-_Unwind_Reason_Code\n+_Unwind_Reason_Code LIBGCC2_UNWIND_ATTRIBUTE\n _Unwind_Backtrace (_Unwind_Trace_Fn trace, void *trace_argument)\n {\n   return __libunwind_Unwind_Backtrace (trace, trace_argument);\n@@ -67,7 +67,7 @@ symver (_Unwind_FindEnclosingFunction, GCC_3.3);\n extern _Unwind_Reason_Code __libunwind_Unwind_ForcedUnwind\n   (struct _Unwind_Exception *, _Unwind_Stop_Fn, void *);\n \n-_Unwind_Reason_Code\n+_Unwind_Reason_Code LIBGCC2_UNWIND_ATTRIBUTE\n _Unwind_ForcedUnwind (struct _Unwind_Exception *exc,\n \t\t      _Unwind_Stop_Fn stop, void * stop_argument)\n {\n@@ -166,7 +166,7 @@ symver (_Unwind_GetRegionStart, GCC_3.0);\n extern _Unwind_Reason_Code __libunwind_Unwind_RaiseException\n   (struct _Unwind_Exception *);\n \n-_Unwind_Reason_Code\n+_Unwind_Reason_Code LIBGCC2_UNWIND_ATTRIBUTE\n _Unwind_RaiseException(struct _Unwind_Exception *exc)\n {\n   return __libunwind_Unwind_RaiseException (exc);\n@@ -175,7 +175,7 @@ symver (_Unwind_RaiseException, GCC_3.0);\n \n extern void __libunwind_Unwind_Resume (struct _Unwind_Exception *);\n \n-void\n+void LIBGCC2_UNWIND_ATTRIBUTE\n _Unwind_Resume (struct _Unwind_Exception *exc)\n {\n   __libunwind_Unwind_Resume (exc);\n@@ -185,7 +185,7 @@ symver (_Unwind_Resume, GCC_3.0);\n extern _Unwind_Reason_Code __libunwind_Unwind_Resume_or_Rethrow\n    (struct _Unwind_Exception *);\n \n-_Unwind_Reason_Code\n+_Unwind_Reason_Code LIBGCC2_UNWIND_ATTRIBUTE\n _Unwind_Resume_or_Rethrow (struct _Unwind_Exception *exc)\n {\n   return __libunwind_Unwind_Resume_or_Rethrow (exc);"}, {"sha": "cebd663d954e66d651dfa453a08968d22bf48372", "filename": "gcc/unwind-generic.h", "status": "modified", "additions": 24, "deletions": 13, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/56e449d39af4a5c032d8d1f2825182ebed7a1a75/gcc%2Funwind-generic.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/56e449d39af4a5c032d8d1f2825182ebed7a1a75/gcc%2Funwind-generic.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Funwind-generic.h?ref=56e449d39af4a5c032d8d1f2825182ebed7a1a75", "patch": "@@ -108,43 +108,52 @@ typedef int _Unwind_Action;\n #define _UA_FORCE_UNWIND\t8\n #define _UA_END_OF_STACK\t16\n \n+/* The target can override this macro to define any back-end-specific\n+   attributes required for the lowest-level stack frame.  */\n+#ifndef LIBGCC2_UNWIND_ATTRIBUTE\n+#define LIBGCC2_UNWIND_ATTRIBUTE\n+#endif\n+\n /* This is an opaque type used to refer to a system-specific data\n    structure used by the system unwinder. This context is created and\n    destroyed by the system, and passed to the personality routine\n    during unwinding.  */\n struct _Unwind_Context;\n \n /* Raise an exception, passing along the given exception object.  */\n-extern _Unwind_Reason_Code _Unwind_RaiseException (struct _Unwind_Exception *);\n+extern _Unwind_Reason_Code LIBGCC2_UNWIND_ATTRIBUTE\n+_Unwind_RaiseException (struct _Unwind_Exception *);\n \n /* Raise an exception for forced unwinding.  */\n \n typedef _Unwind_Reason_Code (*_Unwind_Stop_Fn)\n      (int, _Unwind_Action, _Unwind_Exception_Class,\n       struct _Unwind_Exception *, struct _Unwind_Context *, void *);\n \n-extern _Unwind_Reason_Code _Unwind_ForcedUnwind (struct _Unwind_Exception *,\n-\t\t\t\t\t\t _Unwind_Stop_Fn,\n-\t\t\t\t\t\t void *);\n+extern _Unwind_Reason_Code LIBGCC2_UNWIND_ATTRIBUTE\n+_Unwind_ForcedUnwind (struct _Unwind_Exception *, _Unwind_Stop_Fn, void *);\n \n /* Helper to invoke the exception_cleanup routine.  */\n extern void _Unwind_DeleteException (struct _Unwind_Exception *);\n \n /* Resume propagation of an existing exception.  This is used after\n    e.g. executing cleanup code, and not to implement rethrowing.  */\n-extern void _Unwind_Resume (struct _Unwind_Exception *);\n+extern void LIBGCC2_UNWIND_ATTRIBUTE\n+_Unwind_Resume (struct _Unwind_Exception *);\n \n /* @@@ Resume propagation of an FORCE_UNWIND exception, or to rethrow\n    a normal exception that was handled.  */\n-extern _Unwind_Reason_Code _Unwind_Resume_or_Rethrow (struct _Unwind_Exception *);\n+extern _Unwind_Reason_Code LIBGCC2_UNWIND_ATTRIBUTE\n+_Unwind_Resume_or_Rethrow (struct _Unwind_Exception *);\n \n /* @@@ Use unwind data to perform a stack backtrace.  The trace callback\n    is called for every stack frame in the call chain, but no cleanup\n    actions are performed.  */\n typedef _Unwind_Reason_Code (*_Unwind_Trace_Fn)\n      (struct _Unwind_Context *, void *);\n \n-extern _Unwind_Reason_Code _Unwind_Backtrace (_Unwind_Trace_Fn, void *);\n+extern _Unwind_Reason_Code LIBGCC2_UNWIND_ATTRIBUTE\n+_Unwind_Backtrace (_Unwind_Trace_Fn, void *);\n \n /* These functions are used for communicating information about the unwind\n    context (i.e. the unwind descriptors and the user register state) between\n@@ -191,12 +200,14 @@ struct SjLj_Function_Context;\n extern void _Unwind_SjLj_Register (struct SjLj_Function_Context *);\n extern void _Unwind_SjLj_Unregister (struct SjLj_Function_Context *);\n \n-extern _Unwind_Reason_Code _Unwind_SjLj_RaiseException\n-     (struct _Unwind_Exception *);\n-extern _Unwind_Reason_Code _Unwind_SjLj_ForcedUnwind\n-     (struct _Unwind_Exception *, _Unwind_Stop_Fn, void *);\n-extern void _Unwind_SjLj_Resume (struct _Unwind_Exception *);\n-extern _Unwind_Reason_Code _Unwind_SjLj_Resume_or_Rethrow (struct _Unwind_Exception *);\n+extern _Unwind_Reason_Code LIBGCC2_UNWIND_ATTRIBUTE\n+_Unwind_SjLj_RaiseException (struct _Unwind_Exception *);\n+extern _Unwind_Reason_Code LIBGCC2_UNWIND_ATTRIBUTE\n+_Unwind_SjLj_ForcedUnwind (struct _Unwind_Exception *, _Unwind_Stop_Fn, void *);\n+extern void LIBGCC2_UNWIND_ATTRIBUTE\n+_Unwind_SjLj_Resume (struct _Unwind_Exception *);\n+extern _Unwind_Reason_Code LIBGCC2_UNWIND_ATTRIBUTE\n+_Unwind_SjLj_Resume_or_Rethrow (struct _Unwind_Exception *);\n \n /* @@@ The following provide access to the base addresses for text\n    and data-relative addressing in the LDSA.  In order to stay link"}, {"sha": "f905b47f1476654868f342bec735de867268bab3", "filename": "gcc/unwind.inc", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/56e449d39af4a5c032d8d1f2825182ebed7a1a75/gcc%2Funwind.inc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/56e449d39af4a5c032d8d1f2825182ebed7a1a75/gcc%2Funwind.inc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Funwind.inc?ref=56e449d39af4a5c032d8d1f2825182ebed7a1a75", "patch": "@@ -82,7 +82,7 @@ _Unwind_RaiseException_Phase2(struct _Unwind_Exception *exc,\n \n /* Raise an exception, passing along the given exception object.  */\n \n-_Unwind_Reason_Code\n+_Unwind_Reason_Code LIBGCC2_UNWIND_ATTRIBUTE\n _Unwind_RaiseException(struct _Unwind_Exception *exc)\n {\n   struct _Unwind_Context this_context, cur_context;\n@@ -195,7 +195,7 @@ _Unwind_ForcedUnwind_Phase2 (struct _Unwind_Exception *exc,\n \n /* Raise an exception for forced unwinding.  */\n \n-_Unwind_Reason_Code\n+_Unwind_Reason_Code LIBGCC2_UNWIND_ATTRIBUTE\n _Unwind_ForcedUnwind (struct _Unwind_Exception *exc,\n \t\t      _Unwind_Stop_Fn stop, void * stop_argument)\n {\n@@ -219,7 +219,7 @@ _Unwind_ForcedUnwind (struct _Unwind_Exception *exc,\n /* Resume propagation of an existing exception.  This is used after\n    e.g. executing cleanup code, and not to implement rethrowing.  */\n \n-void\n+void LIBGCC2_UNWIND_ATTRIBUTE\n _Unwind_Resume (struct _Unwind_Exception *exc)\n {\n   struct _Unwind_Context this_context, cur_context;\n@@ -244,7 +244,7 @@ _Unwind_Resume (struct _Unwind_Exception *exc)\n /* Resume propagation of an FORCE_UNWIND exception, or to rethrow\n    a normal exception that was handled.  */\n \n-_Unwind_Reason_Code\n+_Unwind_Reason_Code LIBGCC2_UNWIND_ATTRIBUTE\n _Unwind_Resume_or_Rethrow (struct _Unwind_Exception *exc)\n {\n   struct _Unwind_Context this_context, cur_context;\n@@ -278,7 +278,7 @@ _Unwind_DeleteException (struct _Unwind_Exception *exc)\n \n /* Perform stack backtrace through unwind data.  */\n \n-_Unwind_Reason_Code\n+_Unwind_Reason_Code LIBGCC2_UNWIND_ATTRIBUTE\n _Unwind_Backtrace(_Unwind_Trace_Fn trace, void * trace_argument)\n {\n   struct _Unwind_Context context;"}]}