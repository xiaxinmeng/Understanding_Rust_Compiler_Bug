{"sha": "f6516aeee4e426b3e08bcc3794ba4256a54a3449", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjY1MTZhZWVlNGU0MjZiM2UwOGJjYzM3OTRiYTQyNTZhNTRhMzQ0OQ==", "commit": {"author": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1994-02-01T00:02:12Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1994-02-01T00:02:12Z"}, "message": "(find_best_addr): Limit number of cse_gen_binary calls to\n20 per iteration.\n\nFrom-SVN: r6449", "tree": {"sha": "18f4c44ca784cbfb083ef875114f14e1bb48d1c7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/18f4c44ca784cbfb083ef875114f14e1bb48d1c7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f6516aeee4e426b3e08bcc3794ba4256a54a3449", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f6516aeee4e426b3e08bcc3794ba4256a54a3449", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f6516aeee4e426b3e08bcc3794ba4256a54a3449", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f6516aeee4e426b3e08bcc3794ba4256a54a3449/comments", "author": null, "committer": null, "parents": [{"sha": "239b043b8a50413a663bfa220dbde9f3dba44fef", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/239b043b8a50413a663bfa220dbde9f3dba44fef", "html_url": "https://github.com/Rust-GCC/gccrs/commit/239b043b8a50413a663bfa220dbde9f3dba44fef"}], "stats": {"total": 10, "additions": 9, "deletions": 1}, "files": [{"sha": "45e7d4445f457ed5eab3a47db5d2ca73ea7a4b14", "filename": "gcc/cse.c", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f6516aeee4e426b3e08bcc3794ba4256a54a3449/gcc%2Fcse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f6516aeee4e426b3e08bcc3794ba4256a54a3449/gcc%2Fcse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcse.c?ref=f6516aeee4e426b3e08bcc3794ba4256a54a3449", "patch": "@@ -2649,9 +2649,17 @@ find_best_addr (insn, loc)\n \t  int best_rtx_cost = (COST (*loc) + 1) >> 1;\n \t  struct table_elt *best_elt = elt; \n \t  rtx best_rtx = *loc;\n+\t  int count;\n+\n+\t  /* This is at worst case an O(n^2) algorithm, so limit our search\n+\t     to the first 32 elements on the list.  This avoids trouble\n+\t     compiling code with very long basic blocks that can easily\n+\t     call cse_gen_binary so many times that we run out of memory.  */\n \n \t  found_better = 0;\n-\t  for (p = elt->first_same_value; p; p = p->next_same_value)\n+\t  for (p = elt->first_same_value, count = 0;\n+\t       p && count < 32;\n+\t       p = p->next_same_value, count++)\n \t    if (! p->flag\n \t\t&& (GET_CODE (p->exp) == REG\n \t\t    || exp_equiv_p (p->exp, p->exp, 1, 0)))"}]}