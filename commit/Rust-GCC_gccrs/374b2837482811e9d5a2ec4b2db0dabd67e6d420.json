{"sha": "374b2837482811e9d5a2ec4b2db0dabd67e6d420", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Mzc0YjI4Mzc0ODI4MTFlOWQ1YTJlYzRiMmRiMGRhYmQ2N2U2ZDQyMA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2013-03-28T18:20:51Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2013-03-28T18:20:51Z"}, "message": "re PR c++/56701 ([C++11] The *this* pointer fails to bind to rvalue reference to pointer type)\n\n\tPR c++/56701\n\t* semantics.c (finish_this_expr): 'this' is an rvalue.\n\t* typeck.c (cp_build_indirect_ref): Handle NOP_EXPR of 'this'.\n\nFrom-SVN: r197212", "tree": {"sha": "b2c999ccf8f435806dfed3d500f9e9e5b866799b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b2c999ccf8f435806dfed3d500f9e9e5b866799b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/374b2837482811e9d5a2ec4b2db0dabd67e6d420", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/374b2837482811e9d5a2ec4b2db0dabd67e6d420", "html_url": "https://github.com/Rust-GCC/gccrs/commit/374b2837482811e9d5a2ec4b2db0dabd67e6d420", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/374b2837482811e9d5a2ec4b2db0dabd67e6d420/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "fad882c6d9f520191ea301a023aa86e348049973", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fad882c6d9f520191ea301a023aa86e348049973", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fad882c6d9f520191ea301a023aa86e348049973"}], "stats": {"total": 21, "additions": 19, "deletions": 2}, "files": [{"sha": "b0a952a741cf787d4298993ca9177c51eb8d50d5", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/374b2837482811e9d5a2ec4b2db0dabd67e6d420/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/374b2837482811e9d5a2ec4b2db0dabd67e6d420/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=374b2837482811e9d5a2ec4b2db0dabd67e6d420", "patch": "@@ -1,5 +1,9 @@\n 2013-03-28  Jason Merrill  <jason@redhat.com>\n \n+\tPR c++/56701\n+\t* semantics.c (finish_this_expr): 'this' is an rvalue.\n+\t* typeck.c (cp_build_indirect_ref): Handle NOP_EXPR of 'this'.\n+\n \tPR c++/56710\n \t* semantics.c (finish_member_declaration): Don't push closure\n \tmembers."}, {"sha": "2fe2908bf86118f4192e21746cbd3a2a38a771e4", "filename": "gcc/cp/semantics.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/374b2837482811e9d5a2ec4b2db0dabd67e6d420/gcc%2Fcp%2Fsemantics.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/374b2837482811e9d5a2ec4b2db0dabd67e6d420/gcc%2Fcp%2Fsemantics.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsemantics.c?ref=374b2837482811e9d5a2ec4b2db0dabd67e6d420", "patch": "@@ -2297,7 +2297,6 @@ finish_this_expr (void)\n         result = lambda_expr_this_capture (CLASSTYPE_LAMBDA_EXPR (type));\n       else\n         result = current_class_ptr;\n-\n     }\n   else if (current_function_decl\n \t   && DECL_STATIC_FUNCTION_P (current_function_decl))\n@@ -2314,6 +2313,9 @@ finish_this_expr (void)\n       result = error_mark_node;\n     }\n \n+  /* The keyword 'this' is a prvalue expression.  */\n+  result = rvalue (result);\n+\n   return result;\n }\n "}, {"sha": "90c7ce495051ff00f4de9e787c1319cdd1dd8bdd", "filename": "gcc/cp/typeck.c", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/374b2837482811e9d5a2ec4b2db0dabd67e6d420/gcc%2Fcp%2Ftypeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/374b2837482811e9d5a2ec4b2db0dabd67e6d420/gcc%2Fcp%2Ftypeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck.c?ref=374b2837482811e9d5a2ec4b2db0dabd67e6d420", "patch": "@@ -2843,7 +2843,11 @@ cp_build_indirect_ref (tree ptr, ref_operator errorstring,\n {\n   tree pointer, type;\n \n-  if (ptr == current_class_ptr)\n+  if (ptr == current_class_ptr\n+      || (TREE_CODE (ptr) == NOP_EXPR\n+\t  && TREE_OPERAND (ptr, 0) == current_class_ptr\n+\t  && (same_type_ignoring_top_level_qualifiers_p\n+\t      (TREE_TYPE (ptr), TREE_TYPE (current_class_ptr)))))\n     return current_class_ref;\n \n   pointer = (TREE_CODE (TREE_TYPE (ptr)) == REFERENCE_TYPE"}, {"sha": "8064a51d44f131d951ea167cda9a2f407ad918f8", "filename": "gcc/testsuite/g++.dg/cpp0x/rv-this.C", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/374b2837482811e9d5a2ec4b2db0dabd67e6d420/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Frv-this.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/374b2837482811e9d5a2ec4b2db0dabd67e6d420/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Frv-this.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Frv-this.C?ref=374b2837482811e9d5a2ec4b2db0dabd67e6d420", "patch": "@@ -0,0 +1,7 @@\n+// PR c++/56701\n+// { dg-require-effective-target c++11 }\n+\n+struct A\n+{\n+  void f(){ A*&& a = this; }\n+};"}]}