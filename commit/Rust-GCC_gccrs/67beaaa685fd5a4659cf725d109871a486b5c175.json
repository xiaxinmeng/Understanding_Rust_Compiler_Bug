{"sha": "67beaaa685fd5a4659cf725d109871a486b5c175", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjdiZWFhYTY4NWZkNWE0NjU5Y2Y3MjVkMTA5ODcxYTQ4NmI1YzE3NQ==", "commit": {"author": {"name": "Manuel L\u00f3pez-Ib\u00e1\u00f1ez", "email": "manu@gcc.gnu.org", "date": "2009-05-04T12:47:53Z"}, "committer": {"name": "Manuel L\u00f3pez-Ib\u00e1\u00f1ez", "email": "manu@gcc.gnu.org", "date": "2009-05-04T12:47:53Z"}, "message": "re PR c++/28152 (Diagnostic about wrong use _Complex prints __complex__)\n\n2009-05-04  Manuel Lopez-Ibanez  <manu@gcc.gnu.org>\n\n\tPR c++/28152\ncp/\t\n\t* parser.c (cp_lexer_get_preprocessor_token):  Do not store the\n\tcanonical spelling for keywords.\n\t(cp_parser_attribute_list): Use the canonical spelling for\n\tkeywords in attributes.\ntestsuite/\n\t* g++.dg/parse/parser-pr28152.C: New.\n\t* g++.dg/parse/parser-pr28152-2.C: New.\n\nFrom-SVN: r147097", "tree": {"sha": "02efb23b17d27157c296459ff616149bc405afae", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/02efb23b17d27157c296459ff616149bc405afae"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/67beaaa685fd5a4659cf725d109871a486b5c175", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/67beaaa685fd5a4659cf725d109871a486b5c175", "html_url": "https://github.com/Rust-GCC/gccrs/commit/67beaaa685fd5a4659cf725d109871a486b5c175", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/67beaaa685fd5a4659cf725d109871a486b5c175/comments", "author": null, "committer": null, "parents": [{"sha": "a3af5087d9b0e120764cb3852da73149be17dfac", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a3af5087d9b0e120764cb3852da73149be17dfac", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a3af5087d9b0e120764cb3852da73149be17dfac"}], "stats": {"total": 52, "additions": 46, "deletions": 6}, "files": [{"sha": "4a34132fe3318325d8e87d85b2ae1e272de1729b", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67beaaa685fd5a4659cf725d109871a486b5c175/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67beaaa685fd5a4659cf725d109871a486b5c175/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=67beaaa685fd5a4659cf725d109871a486b5c175", "patch": "@@ -1,3 +1,11 @@\n+2009-05-04  Manuel Lopez-Ibanez  <manu@gcc.gnu.org>\n+\n+\tPR c++/28152\n+\t* parser.c (cp_lexer_get_preprocessor_token):  Do not store the\n+\tcanonical spelling for keywords.\n+\t(cp_parser_attribute_list): Use the canonical spelling for\n+\tkeywords in attributes.\n+\n 2009-05-01  Joseph Myers  <joseph@codesourcery.com>\n \n \t* cxx-pretty-print.c (is_destructor_name, pp_cxx_unqualified_id,"}, {"sha": "c691ef24ff6bc0682b0139b0b84a1033d5e42dcc", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67beaaa685fd5a4659cf725d109871a486b5c175/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67beaaa685fd5a4659cf725d109871a486b5c175/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=67beaaa685fd5a4659cf725d109871a486b5c175", "patch": "@@ -418,11 +418,6 @@ cp_lexer_get_preprocessor_token (cp_lexer *lexer, cp_token *token)\n \t  token->type = CPP_KEYWORD;\n \t  /* Record which keyword.  */\n \t  token->keyword = C_RID_CODE (token->u.value);\n-\t  /* Update the value.  Some keywords are mapped to particular\n-\t     entities, rather than simply having the value of the\n-\t     corresponding IDENTIFIER_NODE.  For example, `__const' is\n-\t     mapped to `const'.  */\n-\t  token->u.value = ridpointers[token->keyword];\n \t}\n       else\n \t{\n@@ -16842,7 +16837,12 @@ cp_parser_attribute_list (cp_parser* parser)\n \n \t  /* Save away the identifier that indicates which attribute\n \t     this is.  */\n-\t  identifier = token->u.value;\n+\t  identifier = (token->type == CPP_KEYWORD) \n+\t    /* For keywords, use the canonical spelling, not the\n+\t       parsed identifier.  */\n+\t    ? ridpointers[(int) token->keyword]\n+\t    : token->u.value;\n+\t  \n \t  attribute = build_tree_list (identifier, NULL_TREE);\n \n \t  /* Peek at the next token.  */"}, {"sha": "842105c63bdf17a7d0e670cce3381e33c7962408", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67beaaa685fd5a4659cf725d109871a486b5c175/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67beaaa685fd5a4659cf725d109871a486b5c175/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=67beaaa685fd5a4659cf725d109871a486b5c175", "patch": "@@ -1,3 +1,9 @@\n+2009-05-04  Manuel Lopez-Ibanez  <manu@gcc.gnu.org>\n+\n+\tPR c++/28152\n+\t* g++.dg/parse/parser-pr28152.C: New.\n+\t* g++.dg/parse/parser-pr28152-2.C: New.\n+\n 2009-05-04  Joseph Myers  <joseph@codesourcery.com>\n \n \t* gcc.dg/attr-alias-5.c, gcc.dg/ucnid-7.c: New tests."}, {"sha": "bcccb94a0cf38e138e3ba7bda8624524a26089c0", "filename": "gcc/testsuite/g++.dg/parse/parser-pr28152-2.C", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67beaaa685fd5a4659cf725d109871a486b5c175/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fparser-pr28152-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67beaaa685fd5a4659cf725d109871a486b5c175/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fparser-pr28152-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fparser-pr28152-2.C?ref=67beaaa685fd5a4659cf725d109871a486b5c175", "patch": "@@ -0,0 +1,13 @@\n+/* PR 28152: error messages should mention __complex__ */\n+/* { dg-do compile } */\n+/* { dg-options \"\" } */\n+int\n+main (void)\n+{\n+  __complex__ float z;\n+\n+  z = __complex__ (1.90000007326203904e+19, 0.0);   // { dg-error \"expected primary-expression before '__complex__'\" } \n+  // { dg-error \"expected .;. before .__complex__.\" \"\" { target *-*-* } 9 } \n+  z = __complex__ (1.0e+0, 0.0) / z;    // { dg-error \"expected primary-expression before '__complex__'\" } \n+  // { dg-error \"expected .;. before '__complex__'\" \"\" { target *-*-* } 11 } \n+  // { dg-error \"at end of input\" \"\" { target *-*-* } 11 } "}, {"sha": "5b3a25e18c978145606c4b4d6e3a18649552a420", "filename": "gcc/testsuite/g++.dg/parse/parser-pr28152.C", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67beaaa685fd5a4659cf725d109871a486b5c175/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fparser-pr28152.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67beaaa685fd5a4659cf725d109871a486b5c175/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fparser-pr28152.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fparser-pr28152.C?ref=67beaaa685fd5a4659cf725d109871a486b5c175", "patch": "@@ -0,0 +1,13 @@\n+/* PR 28152: error messages should mention _Complex */\n+/* { dg-do compile } */\n+/* { dg-options \"\" } */\n+int\n+main (void)\n+{\n+  _Complex float z;\n+\n+  z = _Complex (1.90000007326203904e+19, 0.0);   // { dg-error \"expected primary-expression before '_Complex'\" } \n+  // { dg-error \"expected .;. before ._Complex.\" \"\" { target *-*-* } 9 } \n+  z = _Complex (1.0e+0, 0.0) / z;    // { dg-error \"expected primary-expression before '_Complex'\" } \n+  // { dg-error \"expected .;. before '_Complex'\" \"\" { target *-*-* } 11 } \n+  // { dg-error \"at end of input\" \"\" { target *-*-* } 11 } "}]}