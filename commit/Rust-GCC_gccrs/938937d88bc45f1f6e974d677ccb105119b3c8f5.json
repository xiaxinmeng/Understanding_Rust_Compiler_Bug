{"sha": "938937d88bc45f1f6e974d677ccb105119b3c8f5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTM4OTM3ZDg4YmM0NWYxZjZlOTc0ZDY3N2NjYjEwNTExOWIzYzhmNQ==", "commit": {"author": {"name": "Michael Meissner", "email": "meissner@gcc.gnu.org", "date": "1995-05-24T14:40:43Z"}, "committer": {"name": "Michael Meissner", "email": "meissner@gcc.gnu.org", "date": "1995-05-24T14:40:43Z"}, "message": "Make -mstring more like -mmultiple; Emit correct stabs on V.4; Emit correct cpp flags on little endian eabi\n\nFrom-SVN: r9795", "tree": {"sha": "8c5a7981890a50bbe869fe76170bdf31a16dbaae", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8c5a7981890a50bbe869fe76170bdf31a16dbaae"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/938937d88bc45f1f6e974d677ccb105119b3c8f5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/938937d88bc45f1f6e974d677ccb105119b3c8f5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/938937d88bc45f1f6e974d677ccb105119b3c8f5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/938937d88bc45f1f6e974d677ccb105119b3c8f5/comments", "author": null, "committer": null, "parents": [{"sha": "c23a9d0e7dcd44bb284f3a118efea6facdf08417", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c23a9d0e7dcd44bb284f3a118efea6facdf08417", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c23a9d0e7dcd44bb284f3a118efea6facdf08417"}], "stats": {"total": 153, "additions": 102, "deletions": 51}, "files": [{"sha": "93691e894216c159fee384807e1128be9efab186", "filename": "gcc/config/rs6000/eabile.h", "status": "modified", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/938937d88bc45f1f6e974d677ccb105119b3c8f5/gcc%2Fconfig%2Frs6000%2Feabile.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/938937d88bc45f1f6e974d677ccb105119b3c8f5/gcc%2Fconfig%2Frs6000%2Feabile.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Feabile.h?ref=938937d88bc45f1f6e974d677ccb105119b3c8f5", "patch": "@@ -23,3 +23,37 @@ the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n \n #undef TARGET_DEFAULT\n #define TARGET_DEFAULT (MASK_POWERPC | MASK_NEW_MNEMONICS | MASK_LITTLE_ENDIAN)\n+\n+#undef CPP_SPEC\n+#define CPP_SPEC \"\\\n+%{posix: -D_POSIX_SOURCE} \\\n+%{mrelocatable: -D_RELOCATABLE} \\\n+%{mbig: -D_BIG_ENDIAN -Amachine(bigendian)} \\\n+%{mbig-endian: -D_BIG_ENDIAN -Amachine(bigendian)} \\\n+%{!mbig: %{!mbig-endian: -D_LITTLE_ENDIAN -Amachine(littleendian)}} \\\n+%{!mcpu*: \\\n+  %{mpower: %{!mpower2: -D_ARCH_PWR}} \\\n+  %{mpower2: -D_ARCH_PWR2} \\\n+  %{mpowerpc*: -D_ARCH_PPC} \\\n+  %{mno-powerpc: %{!mpower: %{!mpower2: -D_ARCH_COM}}} \\\n+  %{!mno-powerpc: -D_ARCH_PPC}} \\\n+%{mcpu=common: -D_ARCH_COM} \\\n+%{mcpu=power: -D_ARCH_PWR} \\\n+%{mcpu=powerpc: -D_ARCH_PPC} \\\n+%{mcpu=rios: -D_ARCH_PWR} \\\n+%{mcpu=rios1: -D_ARCH_PWR} \\\n+%{mcpu=rios2: -D_ARCH_PWR2} \\\n+%{mcpu=rsc: -D_ARCH_PWR} \\\n+%{mcpu=rsc1: -D_ARCH_PWR} \\\n+%{mcpu=403: -D_ARCH_PPC} \\\n+%{mcpu=mpc403: -D_ARCH_PPC} \\\n+%{mcpu=ppc403: -D_ARCH_PPC} \\\n+%{mcpu=601: -D_ARCH_PPC -D_ARCH_PWR} \\\n+%{mcpu=mpc601: -D_ARCH_PPC -D_ARCH_PWR} \\\n+%{mcpu=ppc601: -D_ARCH_PPC -D_ARCH_PWR} \\\n+%{mcpu=603: -D_ARCH_PPC} \\\n+%{mcpu=mpc603: -D_ARCH_PPC} \\\n+%{mcpu=ppc603: -D_ARCH_PPC} \\\n+%{mcpu=604: -D_ARCH_PPC} \\\n+%{mcpu=mpc604: -D_ARCH_PPC} \\\n+%{mcpu=ppc604: -D_ARCH_PPC}\""}, {"sha": "69fb22d30c7996d32e068966fe1c89c01ab152cb", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 18, "deletions": 11, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/938937d88bc45f1f6e974d677ccb105119b3c8f5/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/938937d88bc45f1f6e974d677ccb105119b3c8f5/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=938937d88bc45f1f6e974d677ccb105119b3c8f5", "patch": "@@ -81,7 +81,7 @@ rs6000_override_options ()\n   /* Simplify the entries below by making a mask for any POWER\n      variant and any PowerPC variant.  */\n \n-#define POWER_MASKS (MASK_POWER | MASK_POWER2 | MASK_MULTIPLE)\n+#define POWER_MASKS (MASK_POWER | MASK_POWER2 | MASK_MULTIPLE | MASK_STRING)\n #define POWERPC_MASKS (MASK_POWERPC | MASK_PPC_GPOPT \\\n \t\t       | MASK_PPC_GFXOPT | MASK_POWERPC64)\n #define POWERPC_OPT_MASKS (MASK_PPC_GPOPT | MASK_PPC_GFXOPT)\n@@ -95,25 +95,25 @@ rs6000_override_options ()\n     } processor_target_table[]\n       = {{\"common\", PROCESSOR_COMMON, 0, POWER_MASKS | POWERPC_MASKS},\n \t {\"power\", PROCESSOR_POWER,\n-\t    MASK_POWER | MASK_MULTIPLE,\n+\t    MASK_POWER | MASK_MULTIPLE | MASK_STRING,\n \t    MASK_POWER2 | POWERPC_MASKS | MASK_NEW_MNEMONICS},\n \t {\"powerpc\", PROCESSOR_POWERPC,\n \t    MASK_POWERPC | MASK_NEW_MNEMONICS,\n \t    POWER_MASKS | POWERPC_OPT_MASKS | MASK_POWERPC64},\n \t {\"rios\", PROCESSOR_RIOS1,\n-\t    MASK_POWER | MASK_MULTIPLE,\n+\t    MASK_POWER | MASK_MULTIPLE | MASK_STRING,\n \t    MASK_POWER2 | POWERPC_MASKS | MASK_NEW_MNEMONICS},\n \t {\"rios1\", PROCESSOR_RIOS1,\n-\t    MASK_POWER | MASK_MULTIPLE,\n+\t    MASK_POWER | MASK_MULTIPLE | MASK_STRING,\n \t    MASK_POWER2 | POWERPC_MASKS | MASK_NEW_MNEMONICS},\n \t {\"rsc\", PROCESSOR_PPC601,\n-\t    MASK_POWER | MASK_MULTIPLE,\n+\t    MASK_POWER | MASK_MULTIPLE | MASK_STRING,\n \t    MASK_POWER2 | POWERPC_MASKS | MASK_NEW_MNEMONICS},\n \t {\"rsc1\", PROCESSOR_PPC601,\n-\t    MASK_POWER | MASK_MULTIPLE,\n+\t    MASK_POWER | MASK_MULTIPLE | MASK_STRING,\n \t    MASK_POWER2 | POWERPC_MASKS | MASK_NEW_MNEMONICS},\n \t {\"rios2\", PROCESSOR_RIOS2,\n-\t    MASK_POWER | MASK_MULTIPLE | MASK_POWER2,\n+\t    MASK_POWER | MASK_MULTIPLE | MASK_STRING | MASK_POWER2,\n \t    POWERPC_MASKS | MASK_NEW_MNEMONICS},\n \t {\"403\", PROCESSOR_PPC403,\n \t    MASK_POWERPC | MASK_SOFT_FLOAT | MASK_NEW_MNEMONICS,\n@@ -125,13 +125,13 @@ rs6000_override_options ()\n \t    MASK_POWERPC | MASK_SOFT_FLOAT | MASK_NEW_MNEMONICS,\n \t    POWER_MASKS | POWERPC_OPT_MASKS | MASK_POWERPC64},\n \t {\"601\", PROCESSOR_PPC601,\n-\t    MASK_POWER | MASK_POWERPC | MASK_NEW_MNEMONICS | MASK_MULTIPLE,\n+\t    MASK_POWER | MASK_POWERPC | MASK_NEW_MNEMONICS | MASK_MULTIPLE | MASK_STRING,\n \t    MASK_POWER2 | POWERPC_OPT_MASKS | MASK_POWERPC64},\n \t {\"mpc601\", PROCESSOR_PPC601,\n-\t    MASK_POWER | MASK_POWERPC | MASK_NEW_MNEMONICS | MASK_MULTIPLE,\n+\t    MASK_POWER | MASK_POWERPC | MASK_NEW_MNEMONICS | MASK_MULTIPLE | MASK_STRING,\n \t    MASK_POWER2 | POWERPC_OPT_MASKS | MASK_POWERPC64},\n \t {\"ppc601\", PROCESSOR_PPC601,\n-\t    MASK_POWER | MASK_POWERPC | MASK_NEW_MNEMONICS | MASK_MULTIPLE,\n+\t    MASK_POWER | MASK_POWERPC | MASK_NEW_MNEMONICS | MASK_MULTIPLE | MASK_STRING,\n \t    MASK_POWER2 | POWERPC_OPT_MASKS | MASK_POWERPC64},\n \t {\"603\", PROCESSOR_PPC603,\n \t    MASK_POWERPC | MASK_PPC_GFXOPT | MASK_NEW_MNEMONICS,\n@@ -155,6 +155,7 @@ rs6000_override_options ()\n   int ptt_size = sizeof (processor_target_table) / sizeof (struct ptt);\n \n   int multiple = TARGET_MULTIPLE;\t/* save current -mmultiple/-mno-multiple status */\n+  int string   = TARGET_STRING;\t\t/* save current -mstring/-mno-string status */\n \n   profile_block_flag = 0;\n \n@@ -185,6 +186,11 @@ rs6000_override_options ()\n   if (TARGET_MULTIPLE_SET)\n     target_flags = (target_flags & ~MASK_MULTIPLE) | multiple;\n \n+  /* If -mstring or -mno-string was explicitly used, don't\n+     override with the processor default */\n+  if (TARGET_STRING_SET)\n+    target_flags = (target_flags & ~MASK_STRING) | multiple;\n+\n   /* Don't allow -mmultiple or -mstring on little endian systems, because the\n      hardware doesn't support the instructions used in little endian mode */\n   if (!BYTES_BIG_ENDIAN)\n@@ -199,7 +205,8 @@ rs6000_override_options ()\n       if (TARGET_STRING)\n \t{\n \t  target_flags &= ~MASK_STRING;\n-\t  warning (\"-mstring is not supported on little endian systems\");\n+\t  if (TARGET_STRING_SET)\n+\t    warning (\"-mstring is not supported on little endian systems\");\n \t}\n     }\n "}, {"sha": "ae087ea40e64ca5e958866069ef10a4fe85ece8d", "filename": "gcc/config/rs6000/rs6000.h", "status": "modified", "additions": 36, "deletions": 32, "changes": 68, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/938937d88bc45f1f6e974d677ccb105119b3c8f5/gcc%2Fconfig%2Frs6000%2Frs6000.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/938937d88bc45f1f6e974d677ccb105119b3c8f5/gcc%2Fconfig%2Frs6000%2Frs6000.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.h?ref=938937d88bc45f1f6e974d677ccb105119b3c8f5", "patch": "@@ -155,6 +155,7 @@ extern int target_flags;\n \n /* Use string instructions for block moves */\n #define MASK_STRING\t\t0x4000\n+#define MASK_STRING_SET\t\t0x8000\n \n #define TARGET_POWER\t\t(target_flags & MASK_POWER)\n #define TARGET_POWER2\t\t(target_flags & MASK_POWER2)\n@@ -171,6 +172,7 @@ extern int target_flags;\n #define\tTARGET_MULTIPLE\t\t(target_flags & MASK_MULTIPLE)\n #define\tTARGET_MULTIPLE_SET\t(target_flags & MASK_MULTIPLE_SET)\n #define TARGET_STRING\t\t(target_flags & MASK_STRING)\n+#define TARGET_STRING_SET\t(target_flags & MASK_STRING_SET)\n \n #define TARGET_HARD_FLOAT\t(! TARGET_SOFT_FLOAT)\n \n@@ -187,40 +189,42 @@ extern int target_flags;\n #define SUBTARGET_SWITCHES\n #endif\n \n-#define TARGET_SWITCHES\t\t\t\t\t\t\\\n- {{\"power\",\t\tMASK_POWER  | MASK_MULTIPLE},\t\t\\\n-  {\"power2\",\t\tMASK_POWER | MASK_MULTIPLE | MASK_POWER2}, \\\n-  {\"no-power2\",\t\t- MASK_POWER2},\t\t\t\t\\\n-  {\"no-power\",\t\t- (MASK_POWER | MASK_POWER2 | MASK_MULTIPLE)}, \\\n-  {\"powerpc\",\t\tMASK_POWERPC},\t\t\t\t\\\n-  {\"no-powerpc\",\t- (MASK_POWERPC | MASK_PPC_GPOPT \t\\\n-\t\t\t   | MASK_PPC_GFXOPT | MASK_POWERPC64)}, \\\n-  {\"powerpc-gpopt\",\tMASK_POWERPC | MASK_PPC_GPOPT},\t\t\\\n-  {\"no-powerpc-gpopt\",\t- MASK_PPC_GPOPT},\t\t\t\\\n-  {\"powerpc-gfxopt\",\tMASK_POWERPC | MASK_PPC_GFXOPT},\t\\\n-  {\"no-powerpc-gfxopt\",\t- MASK_PPC_GFXOPT},\t\t\t\\\n-  {\"new-mnemonics\",\tMASK_NEW_MNEMONICS},\t\t\t\\\n-  {\"old-mnemonics\",\t-MASK_NEW_MNEMONICS},\t\t\t\\\n-  {\"full-toc\",\t\t- (MASK_NO_FP_IN_TOC | MASK_NO_SUM_IN_TOC \\\n-\t\t\t   | MASK_MINIMAL_TOC)},\t\t\\\n-  {\"fp-in-toc\",\t\t- MASK_NO_FP_IN_TOC},\t\t\t\\\n-  {\"no-fp-in-toc\",\tMASK_NO_FP_IN_TOC},\t\t\t\\\n-  {\"sum-in-toc\",\t- MASK_NO_SUM_IN_TOC},\t\t\t\\\n-  {\"no-sum-in-toc\",\tMASK_NO_SUM_IN_TOC},\t\t\t\\\n-  {\"minimal-toc\",\tMASK_MINIMAL_TOC},\t\t\t\\\n-  {\"minimal-toc\",\t- (MASK_NO_FP_IN_TOC | MASK_NO_SUM_IN_TOC)}, \\\n-  {\"no-minimal-toc\",\t- MASK_MINIMAL_TOC},\t\t\t\\\n-  {\"hard-float\",\t- MASK_SOFT_FLOAT},\t\t\t\\\n-  {\"soft-float\",\tMASK_SOFT_FLOAT},\t\t\t\\\n-  {\"multiple\",\t\tMASK_MULTIPLE | MASK_MULTIPLE_SET},\t\\\n-  {\"no-multiple\",\t- MASK_MULTIPLE},\t\t\t\\\n-  {\"no-multiple\",\tMASK_MULTIPLE_SET},\t\t\t\\\n-  {\"string\",\t\tMASK_STRING},\t\t\t\t\\\n-  {\"no-string\",\t\t- MASK_STRING},\t\t\t\t\\\n-  SUBTARGET_SWITCHES\t\t\t\t\t\t\\\n+#define TARGET_SWITCHES\t\t\t\t\t\t\t\\\n+ {{\"power\",\t\tMASK_POWER  | MASK_MULTIPLE | MASK_STRING},\t\\\n+  {\"power2\",\t\t(MASK_POWER | MASK_MULTIPLE | MASK_STRING\t\\\n+\t\t\t | MASK_POWER2)},\t\t\t\t\\\n+  {\"no-power2\",\t\t- MASK_POWER2},\t\t\t\t\t\\\n+  {\"no-power\",\t\t- (MASK_POWER | MASK_POWER2 | MASK_MULTIPLE\t\\\n+\t\t\t   | MASK_STRING)},\t\t\t\t\\\n+  {\"powerpc\",\t\tMASK_POWERPC},\t\t\t\t\t\\\n+  {\"no-powerpc\",\t- (MASK_POWERPC | MASK_PPC_GPOPT\t\t\\\n+\t\t\t   | MASK_PPC_GFXOPT | MASK_POWERPC64)},\t\\\n+  {\"powerpc-gpopt\",\tMASK_POWERPC | MASK_PPC_GPOPT},\t\t\t\\\n+  {\"no-powerpc-gpopt\",\t- MASK_PPC_GPOPT},\t\t\t\t\\\n+  {\"powerpc-gfxopt\",\tMASK_POWERPC | MASK_PPC_GFXOPT},\t\t\\\n+  {\"no-powerpc-gfxopt\",\t- MASK_PPC_GFXOPT},\t\t\t\t\\\n+  {\"new-mnemonics\",\tMASK_NEW_MNEMONICS},\t\t\t\t\\\n+  {\"old-mnemonics\",\t-MASK_NEW_MNEMONICS},\t\t\t\t\\\n+  {\"full-toc\",\t\t- (MASK_NO_FP_IN_TOC | MASK_NO_SUM_IN_TOC\t\\\n+\t\t\t   | MASK_MINIMAL_TOC)},\t\t\t\\\n+  {\"fp-in-toc\",\t\t- MASK_NO_FP_IN_TOC},\t\t\t\t\\\n+  {\"no-fp-in-toc\",\tMASK_NO_FP_IN_TOC},\t\t\t\t\\\n+  {\"sum-in-toc\",\t- MASK_NO_SUM_IN_TOC},\t\t\t\t\\\n+  {\"no-sum-in-toc\",\tMASK_NO_SUM_IN_TOC},\t\t\t\t\\\n+  {\"minimal-toc\",\tMASK_MINIMAL_TOC},\t\t\t\t\\\n+  {\"minimal-toc\",\t- (MASK_NO_FP_IN_TOC | MASK_NO_SUM_IN_TOC)},\t\\\n+  {\"no-minimal-toc\",\t- MASK_MINIMAL_TOC},\t\t\t\t\\\n+  {\"hard-float\",\t- MASK_SOFT_FLOAT},\t\t\t\t\\\n+  {\"soft-float\",\tMASK_SOFT_FLOAT},\t\t\t\t\\\n+  {\"multiple\",\t\tMASK_MULTIPLE | MASK_MULTIPLE_SET},\t\t\\\n+  {\"no-multiple\",\t- MASK_MULTIPLE},\t\t\t\t\\\n+  {\"no-multiple\",\tMASK_MULTIPLE_SET},\t\t\t\t\\\n+  {\"string\",\t\tMASK_STRING | MASK_STRING_SET},\t\t\t\\\n+  {\"no-string\",\t\t- MASK_STRING},\t\t\t\t\t\\\n+  SUBTARGET_SWITCHES\t\t\t\t\t\t\t\\\n   {\"\",\t\t\tTARGET_DEFAULT}}\n \n-#define TARGET_DEFAULT (MASK_POWER | MASK_MULTIPLE)\n+#define TARGET_DEFAULT (MASK_POWER | MASK_MULTIPLE | MASK_STRING)\n \n /* Processor type.  */\n enum processor_type"}, {"sha": "d29596503fd9b93e10d9b4c1aba2712652ee02d7", "filename": "gcc/config/rs6000/sysv4.h", "status": "modified", "additions": 14, "deletions": 8, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/938937d88bc45f1f6e974d677ccb105119b3c8f5/gcc%2Fconfig%2Frs6000%2Fsysv4.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/938937d88bc45f1f6e974d677ccb105119b3c8f5/gcc%2Fconfig%2Frs6000%2Fsysv4.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fsysv4.h?ref=938937d88bc45f1f6e974d677ccb105119b3c8f5", "patch": "@@ -302,16 +302,22 @@ extern int rs6000_pic_labelno;\n #define\tDBX_DEBUGGING_INFO\n #define\tDWARF_DEBUGGING_INFO\n \n-/* Line numbers are relative to the current function.  */\n+/* Like block addresses, stabs line numbers are relative to the\n+   current function.  */\n \n #undef  ASM_OUTPUT_SOURCE_LINE\n-#define ASM_OUTPUT_SOURCE_LINE(file, line)\t\t\\\n-  { static int sym_lineno = 1;\t\t\t\t\\\n-    fprintf (file, \".stabn 68,0,%d,.LM%d-%s\\n.LM%d:\\n\",\\\n-\t     line, sym_lineno, \t\t\t\t\\\n-\t     XSTR (XEXP (DECL_RTL (current_function_decl), 0), 0), \\\n-\t     sym_lineno);\t\t\t\t\\\n-    sym_lineno += 1; }\n+#define ASM_OUTPUT_SOURCE_LINE(file, line)\t\t\t\t\\\n+do\t\t\t\t\t\t\t\t\t\\\n+  {\t\t\t\t\t\t\t\t\t\\\n+    static int sym_lineno = 1;\t\t\t\t\t\t\\\n+    fprintf (file, \"\\t.stabn 68,0,%d,.LM%d-\",\t\t\t\t\\\n+\t     line, sym_lineno);\t\t\t\t\t\t\\\n+    assemble_name (file,\t\t\t\t\t\t\\\n+\t\t   XSTR (XEXP (DECL_RTL (current_function_decl), 0), 0));\\\n+    fprintf (file, \"\\n.LM%d:\\n\", sym_lineno);\t\t\t\t\\\n+    sym_lineno += 1;\t\t\t\t\t\t\t\\\n+  }\t\t\t\t\t\t\t\t\t\\\n+while (0)\n \n /* But, to make this work, we have to output the stabs for the function\n    name *first*...  */"}]}