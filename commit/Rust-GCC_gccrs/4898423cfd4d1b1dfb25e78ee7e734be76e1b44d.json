{"sha": "4898423cfd4d1b1dfb25e78ee7e734be76e1b44d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDg5ODQyM2NmZDRkMWIxZGZiMjVlNzhlZTdlNzM0YmU3NmUxYjQ0ZA==", "commit": {"author": {"name": "Ziemowit Laski", "email": "zlaski@apple.com", "date": "2003-10-15T00:10:27Z"}, "committer": {"name": "Ziemowit Laski", "email": "zlaski@gcc.gnu.org", "date": "2003-10-15T00:10:27Z"}, "message": "c-parse.in (methoddef, [...]): Call objc_add_method() instead of add_method().\n\n2003-10-14  Ziemowit Laski  <zlaski@apple.com>\n\n        * c-parse.in (methoddef, methodproto): Call objc_add_method()\n        instead of add_method().\n        * objc/objc-act.c (objc_check_decl): Do not check for\n        constant_string_type.\n        (add_method): Rename to objc_add_method().\n        (really_start_method): Call objc_add_method() instead of\n        add_method().\n        * objc/objc-act.h (add_method): Rename to objc_add_method().\n\nFrom-SVN: r72506", "tree": {"sha": "800ea81c078a96a03debae44a7905203b417cccf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/800ea81c078a96a03debae44a7905203b417cccf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4898423cfd4d1b1dfb25e78ee7e734be76e1b44d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4898423cfd4d1b1dfb25e78ee7e734be76e1b44d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4898423cfd4d1b1dfb25e78ee7e734be76e1b44d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4898423cfd4d1b1dfb25e78ee7e734be76e1b44d/comments", "author": null, "committer": null, "parents": [{"sha": "e69166de8e13bd1ec9c30d1871d03cb4b3616f1d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e69166de8e13bd1ec9c30d1871d03cb4b3616f1d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e69166de8e13bd1ec9c30d1871d03cb4b3616f1d"}], "stats": {"total": 32, "additions": 23, "deletions": 9}, "files": [{"sha": "ea890d3175353d68d317a1615109edbd5d0c1b1b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4898423cfd4d1b1dfb25e78ee7e734be76e1b44d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4898423cfd4d1b1dfb25e78ee7e734be76e1b44d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4898423cfd4d1b1dfb25e78ee7e734be76e1b44d", "patch": "@@ -1,3 +1,14 @@\n+2003-10-14  Ziemowit Laski  <zlaski@apple.com>\n+\n+\t* c-parse.in (methoddef, methodproto): Call objc_add_method()\n+\tinstead of add_method().\n+\t* objc/objc-act.c (objc_check_decl): Do not check for\n+\tconstant_string_type.\n+\t(add_method): Rename to objc_add_method().\n+\t(really_start_method): Call objc_add_method() instead of\n+\tadd_method().\n+\t* objc/objc-act.h (add_method): Rename to objc_add_method().\n+\n 2003-10-14  Ulrich Weigand  <uweigand@de.ibm.com>\n \n \t* config/s390/s390-protos.h (s390_alc_comparison): Add prototype."}, {"sha": "c7850177cb4bbff70786be4d49ec1557fa3f44e1", "filename": "gcc/c-parse.in", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4898423cfd4d1b1dfb25e78ee7e734be76e1b44d/gcc%2Fc-parse.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4898423cfd4d1b1dfb25e78ee7e734be76e1b44d/gcc%2Fc-parse.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-parse.in?ref=4898423cfd4d1b1dfb25e78ee7e734be76e1b44d", "patch": "@@ -2931,7 +2931,9 @@ methoddef:\n \t  methoddecl\n \t\t{\n \t\t  objc_pq_context = 0;\n-\t\t  add_method (objc_implementation_context, $3, objc_inherit_code == CLASS_METHOD_DECL);\n+\t\t  objc_add_method (objc_implementation_context,\n+\t\t\t\t   $3,\n+\t\t\t\t   objc_inherit_code == CLASS_METHOD_DECL);\n \t\t  start_method_def ($3);\n \t\t}\n \t  optarglist\n@@ -2969,7 +2971,9 @@ methodproto:\n \t\t{\n \t\t  /* Forget protocol qualifiers here.  */\n \t\t  objc_pq_context = 0;\n-\t\t  add_method (objc_interface_context, $3, objc_inherit_code == CLASS_METHOD_DECL);\n+\t\t  objc_add_method (objc_interface_context,\n+\t\t\t\t   $3,\n+\t\t\t\t   objc_inherit_code == CLASS_METHOD_DECL);\n \t\t}\n \t  semi_or_error\n \t;"}, {"sha": "ad2b69a9f56efe2d2a703affad33c269e8913b5e", "filename": "gcc/objc/objc-act.c", "status": "modified", "additions": 5, "deletions": 6, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4898423cfd4d1b1dfb25e78ee7e734be76e1b44d/gcc%2Fobjc%2Fobjc-act.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4898423cfd4d1b1dfb25e78ee7e734be76e1b44d/gcc%2Fobjc%2Fobjc-act.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2Fobjc-act.c?ref=4898423cfd4d1b1dfb25e78ee7e734be76e1b44d", "patch": "@@ -947,10 +947,9 @@ objc_check_decl (tree decl)\n \n   if (TREE_CODE (type) != RECORD_TYPE)\n     return;\n-  if (TYPE_NAME (type) && (type = is_class_name (TYPE_NAME (type)))\n-      && type != constant_string_type)\n+  if (TYPE_NAME (type) && (type = is_class_name (TYPE_NAME (type))))\n     error (\"statically allocated instance of Objective-C class `%s'\",\n-\t     IDENTIFIER_POINTER (type));\n+\t   IDENTIFIER_POINTER (type));\n }\n \n /* Implement static typing.  At this point, we know we have an interface.  */\n@@ -6300,7 +6299,7 @@ add_method_to_hash_list (hash *hash_list, tree method)\n }\n \n tree\n-add_method (tree class, tree method, int is_class)\n+objc_add_method (tree class, tree method, int is_class)\n {\n   tree mth;\n \n@@ -7815,8 +7814,8 @@ really_start_method (tree method, tree parmlist)\n \t\t\t CLASS_SUPER_NAME (objc_implementation_context));\n \n \t  if (interface)\n-\t    add_method (interface, copy_node (method),\n-\t\t\tTREE_CODE (method) == CLASS_METHOD_DECL);\n+\t    objc_add_method (interface, copy_node (method),\n+\t\t\t     TREE_CODE (method) == CLASS_METHOD_DECL);\n \t}\n     }\n }"}, {"sha": "abbf65627311ed50554252ae5d71bc727857939a", "filename": "gcc/objc/objc-act.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4898423cfd4d1b1dfb25e78ee7e734be76e1b44d/gcc%2Fobjc%2Fobjc-act.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4898423cfd4d1b1dfb25e78ee7e734be76e1b44d/gcc%2Fobjc%2Fobjc-act.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2Fobjc-act.h?ref=4898423cfd4d1b1dfb25e78ee7e734be76e1b44d", "patch": "@@ -54,7 +54,7 @@ tree is_ivar (tree, tree);\n int is_private (tree);\n int is_public (tree, tree);\n tree add_instance_variable (tree, int, tree, tree, tree);\n-tree add_method (tree, tree, int);\n+tree objc_add_method (tree, tree, int);\n tree get_super_receiver (void);\n void objc_clear_super_receiver (void);\n tree get_class_ivars_from_name (tree);"}]}