{"sha": "12c5f1efb5d038d8638f517b8d73970573fbdaee", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTJjNWYxZWZiNWQwMzhkODYzOGY1MTdiOGQ3Mzk3MDU3M2ZiZGFlZQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-08-01T13:26:17Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-08-01T13:26:17Z"}, "message": "[multiple changes]\n\n2014-08-01  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_ch5.adb (Analyze_Loop_Parameter_Specification): a)\n\tAn attribute_reference to Loop_Entry denotes an iterator\n\tspecification: its prefix is an object, as is the case for 'Old.\n\tb) If the domain of iteration is an expression whose type has\n\tthe Iterable aspect defined, this is an iterator specification.\n\n2014-08-01  Robert Dewar  <dewar@adacore.com>\n\n\t* gnatcmd.adb: Minor reformatting.\n\n2014-08-01  Robert Dewar  <dewar@adacore.com>\n\n\t* atree.ads (Info_Messages): New counter.\n\t* err_vars.ads: Minor comment update.\n\t* errout.adb (Delete_Warning_And_Continuations): Deal\n\twith new Info_Messages counter.\n\t(Error_Msg_Internal): ditto.\n\t(Delete_Warning): ditto.\n\t(Initialize): ditto.\n\t(Write_Error_Summary): ditto.\n\t(Output_Messages): ditto.\n\t(To_Be_Removed): ditto.\n\t* erroutc.adb (Delete_Msg): Deal with Info_Messages counter.\n\t(Compilation_Errors): ditto.\n\t* errutil.adb (Error_Msg): Deal with Info_Messages counter.\n\t(Finalize): ditto.\n\t(Initialize): ditto.\n\t* sem_prag.adb (Analyze_Pragma): Minor comment addition.\n\t* gnat_ugn.texi: Document that -gnatwe does not affect info\n\tmessages.\n\nFrom-SVN: r213457", "tree": {"sha": "de670a27c04cef0d1bd19abfe5073ab8db9ccbfb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/de670a27c04cef0d1bd19abfe5073ab8db9ccbfb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/12c5f1efb5d038d8638f517b8d73970573fbdaee", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/12c5f1efb5d038d8638f517b8d73970573fbdaee", "html_url": "https://github.com/Rust-GCC/gccrs/commit/12c5f1efb5d038d8638f517b8d73970573fbdaee", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/12c5f1efb5d038d8638f517b8d73970573fbdaee/comments", "author": null, "committer": null, "parents": [{"sha": "511c5197c7964009f989f7a6d03ef2858d0fe6c0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/511c5197c7964009f989f7a6d03ef2858d0fe6c0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/511c5197c7964009f989f7a6d03ef2858d0fe6c0"}], "stats": {"total": 141, "additions": 110, "deletions": 31}, "files": [{"sha": "aa4d49c48b97f881df05973d5e7f55351ab5e7f9", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/12c5f1efb5d038d8638f517b8d73970573fbdaee/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/12c5f1efb5d038d8638f517b8d73970573fbdaee/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=12c5f1efb5d038d8638f517b8d73970573fbdaee", "patch": "@@ -1,3 +1,36 @@\n+2014-08-01  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_ch5.adb (Analyze_Loop_Parameter_Specification): a)\n+\tAn attribute_reference to Loop_Entry denotes an iterator\n+\tspecification: its prefix is an object, as is the case for 'Old.\n+\tb) If the domain of iteration is an expression whose type has\n+\tthe Iterable aspect defined, this is an iterator specification.\n+\n+2014-08-01  Robert Dewar  <dewar@adacore.com>\n+\n+\t* gnatcmd.adb: Minor reformatting.\n+\n+2014-08-01  Robert Dewar  <dewar@adacore.com>\n+\n+\t* atree.ads (Info_Messages): New counter.\n+\t* err_vars.ads: Minor comment update.\n+\t* errout.adb (Delete_Warning_And_Continuations): Deal\n+\twith new Info_Messages counter.\n+\t(Error_Msg_Internal): ditto.\n+\t(Delete_Warning): ditto.\n+\t(Initialize): ditto.\n+\t(Write_Error_Summary): ditto.\n+\t(Output_Messages): ditto.\n+\t(To_Be_Removed): ditto.\n+\t* erroutc.adb (Delete_Msg): Deal with Info_Messages counter.\n+\t(Compilation_Errors): ditto.\n+\t* errutil.adb (Error_Msg): Deal with Info_Messages counter.\n+\t(Finalize): ditto.\n+\t(Initialize): ditto.\n+\t* sem_prag.adb (Analyze_Pragma): Minor comment addition.\n+\t* gnat_ugn.texi: Document that -gnatwe does not affect info\n+\tmessages.\n+\n 2014-08-01  Robert Dewar  <dewar@adacore.com>\n \n \t* debug.adb: Document debug switch -gnatd.Z."}, {"sha": "37b276e9cdbf8d38ec0516466107f37de2638897", "filename": "gcc/ada/atree.ads", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/12c5f1efb5d038d8638f517b8d73970573fbdaee/gcc%2Fada%2Fatree.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/12c5f1efb5d038d8638f517b8d73970573fbdaee/gcc%2Fada%2Fatree.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fatree.ads?ref=12c5f1efb5d038d8638f517b8d73970573fbdaee", "patch": "@@ -313,7 +313,12 @@ package Atree is\n \n    Warnings_Detected : Nat := 0;\n    --  Number of warnings detected. Initialized to zero at the start of\n-   --  compilation. Initialized for -gnatVa use, see comment above.\n+   --  compilation. Initialized for -gnatVa use, see comment above. This\n+   --  count includes the count of style and info messages.\n+\n+   Info_Messages : Nat := 0;\n+   --  Number of info messages generated. Info messages are neved treated as\n+   --  errors (whether from use of the pragma, or the compiler switch -gnatwe).\n \n    Warnings_Treated_As_Errors : Nat := 0;\n    --  Number of warnings changed into errors as a result of matching a pattern"}, {"sha": "48df37e636251ed9cea6408e4ec807665d654411", "filename": "gcc/ada/err_vars.ads", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/12c5f1efb5d038d8638f517b8d73970573fbdaee/gcc%2Fada%2Ferr_vars.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/12c5f1efb5d038d8638f517b8d73970573fbdaee/gcc%2Fada%2Ferr_vars.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ferr_vars.ads?ref=12c5f1efb5d038d8638f517b8d73970573fbdaee", "patch": "@@ -39,10 +39,10 @@ package Err_Vars is\n    --  from invalid values in such cases.\n \n    --  Note on error counts (Serious_Errors_Detected, Total_Errors_Detected,\n-   --  Warnings_Detected). These counts might more logically appear in this\n-   --  unit, but we place them in atree.ads, because of licensing issues. We\n-   --  need to be able to access these counts from units that have the more\n-   --  general licensing conditions.\n+   --  Warnings_Detected, Info_Messages). These counts might more logically\n+   --  appear in this unit, but we place them instead in atree.ads, because of\n+   --  licensing issues. We need to be able to access these counts from units\n+   --  that have the more general licensing conditions.\n \n    ----------------------------------\n    -- Error Message Mode Variables --"}, {"sha": "55b02eeaab9b25061f25b35c6300e1223c26a660", "filename": "gcc/ada/errout.adb", "status": "modified", "additions": 38, "deletions": 10, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/12c5f1efb5d038d8638f517b8d73970573fbdaee/gcc%2Fada%2Ferrout.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/12c5f1efb5d038d8638f517b8d73970573fbdaee/gcc%2Fada%2Ferrout.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ferrout.adb?ref=12c5f1efb5d038d8638f517b8d73970573fbdaee", "patch": "@@ -261,8 +261,12 @@ package body Errout is\n                M.Deleted := True;\n                Warnings_Detected := Warnings_Detected - 1;\n \n+               if M.Info then\n+                  Info_Messages := Info_Messages - 1;\n+               end if;\n+\n                if M.Warn_Err then\n-                  Warnings_Treated_As_Errors := Warnings_Treated_As_Errors + 1;\n+                  Warnings_Treated_As_Errors := Warnings_Treated_As_Errors - 1;\n                end if;\n             end if;\n \n@@ -1132,6 +1136,10 @@ package body Errout is\n       if Errors.Table (Cur_Msg).Warn or else Errors.Table (Cur_Msg).Style then\n          Warnings_Detected := Warnings_Detected + 1;\n \n+         if Errors.Table (Cur_Msg).Info then\n+            Info_Messages := Info_Messages + 1;\n+         end if;\n+\n       else\n          Total_Errors_Detected := Total_Errors_Detected + 1;\n \n@@ -1340,8 +1348,12 @@ package body Errout is\n             Errors.Table (E).Deleted := True;\n             Warnings_Detected := Warnings_Detected - 1;\n \n+            if Errors.Table (E).Info then\n+               Info_Messages := Info_Messages - 1;\n+            end if;\n+\n             if Errors.Table (E).Warn_Err then\n-               Warnings_Treated_As_Errors := Warnings_Treated_As_Errors + 1;\n+               Warnings_Treated_As_Errors := Warnings_Treated_As_Errors - 1;\n             end if;\n          end if;\n       end Delete_Warning;\n@@ -1566,6 +1578,7 @@ package body Errout is\n       Total_Errors_Detected := 0;\n       Warnings_Treated_As_Errors := 0;\n       Warnings_Detected := 0;\n+      Info_Messages := 0;\n       Warnings_As_Errors_Count := 0;\n       Cur_Msg := No_Error_Msg;\n       List_Pragmas.Init;\n@@ -1656,8 +1669,7 @@ package body Errout is\n       begin\n          --  Extra blank line if error messages or source listing were output\n \n-         if Total_Errors_Detected + Warnings_Detected > 0\n-           or else Full_List\n+         if Total_Errors_Detected + Warnings_Detected > 0 or else Full_List\n          then\n             Write_Eol;\n          end if;\n@@ -1666,8 +1678,8 @@ package body Errout is\n          --  This normally goes to Standard_Output. The exception is when brief\n          --  mode is not set, verbose mode (or full list mode) is set, and\n          --  there are errors. In this case we send the message to standard\n-         --  error to make sure that *something* appears on standard error in\n-         --  an error situation.\n+         --  error to make sure that *something* appears on standard error\n+         --  in an error situation.\n \n          if Total_Errors_Detected + Warnings_Detected /= 0\n            and then not Brief_Output\n@@ -1702,12 +1714,12 @@ package body Errout is\n             Write_Str (\" errors\");\n          end if;\n \n-         if Warnings_Detected /= 0 then\n+         if Warnings_Detected - Info_Messages /= 0 then\n             Write_Str (\", \");\n             Write_Int (Warnings_Detected);\n             Write_Str (\" warning\");\n \n-            if Warnings_Detected /= 1 then\n+            if Warnings_Detected - Info_Messages /= 1 then\n                Write_Char ('s');\n             end if;\n \n@@ -1727,6 +1739,16 @@ package body Errout is\n             end if;\n          end if;\n \n+         if Info_Messages /= 0 then\n+            Write_Str (\", \");\n+            Write_Int (Info_Messages);\n+            Write_Str (\" info message\");\n+\n+            if Info_Messages > 1 then\n+               Write_Char ('s');\n+            end if;\n+         end if;\n+\n          Write_Eol;\n          Set_Standard_Output;\n       end Write_Error_Summary;\n@@ -2027,8 +2049,9 @@ package body Errout is\n       Write_Max_Errors;\n \n       if Warning_Mode = Treat_As_Error then\n-         Total_Errors_Detected := Total_Errors_Detected + Warnings_Detected;\n-         Warnings_Detected := 0;\n+         Total_Errors_Detected :=\n+           Total_Errors_Detected + Warnings_Detected - Info_Messages;\n+         Warnings_Detected := Info_Messages;\n       end if;\n    end Output_Messages;\n \n@@ -2200,6 +2223,11 @@ package body Errout is\n                and then not Errors.Table (E).Uncond\n             then\n                Warnings_Detected := Warnings_Detected - 1;\n+\n+               if Errors.Table (E).Info then\n+                  Info_Messages := Info_Messages - 1;\n+               end if;\n+\n                return True;\n \n             --  No removal required"}, {"sha": "c347364c1b9b77ba753b27b0b6901ff881877a18", "filename": "gcc/ada/erroutc.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/12c5f1efb5d038d8638f517b8d73970573fbdaee/gcc%2Fada%2Ferroutc.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/12c5f1efb5d038d8638f517b8d73970573fbdaee/gcc%2Fada%2Ferroutc.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ferroutc.adb?ref=12c5f1efb5d038d8638f517b8d73970573fbdaee", "patch": "@@ -143,7 +143,7 @@ package body Erroutc is\n \n                if Errors.Table (D).Warn_Err then\n                   Warnings_Treated_As_Errors :=\n-                    Warnings_Treated_As_Errors + 1;\n+                    Warnings_Treated_As_Errors - 1;\n                end if;\n \n             else\n@@ -233,7 +233,7 @@ package body Erroutc is\n    function Compilation_Errors return Boolean is\n    begin\n       return Total_Errors_Detected /= 0\n-        or else (Warnings_Detected /= 0\n+        or else (Warnings_Detected - Info_Messages /= 0\n                   and then Warning_Mode = Treat_As_Error)\n         or else Warnings_Treated_As_Errors /= 0;\n    end Compilation_Errors;"}, {"sha": "7eb85a4193aa40c05673eb83ef61c05b09a54a9e", "filename": "gcc/ada/errutil.adb", "status": "modified", "additions": 12, "deletions": 6, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/12c5f1efb5d038d8638f517b8d73970573fbdaee/gcc%2Fada%2Ferrutil.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/12c5f1efb5d038d8638f517b8d73970573fbdaee/gcc%2Fada%2Ferrutil.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ferrutil.adb?ref=12c5f1efb5d038d8638f517b8d73970573fbdaee", "patch": "@@ -309,6 +309,10 @@ package body Errutil is\n       then\n          Warnings_Detected := Warnings_Detected + 1;\n \n+         if Errors.Table (Cur_Msg).Info then\n+            Info_Messages := Info_Messages + 1;\n+         end if;\n+\n       else\n          Total_Errors_Detected := Total_Errors_Detected + 1;\n \n@@ -536,19 +540,19 @@ package body Errutil is\n             Write_Str (\" errors\");\n          end if;\n \n-         if Warnings_Detected /= 0 then\n+         if Warnings_Detected - Info_Messages  /= 0 then\n             Write_Str (\", \");\n-            Write_Int (Warnings_Detected);\n+            Write_Int (Warnings_Detected - Info_Messages);\n             Write_Str (\" warning\");\n \n-            if Warnings_Detected /= 1 then\n+            if Warnings_Detected - Info_Messages /= 1 then\n                Write_Char ('s');\n             end if;\n \n             if Warning_Mode = Treat_As_Error then\n                Write_Str (\" (treated as error\");\n \n-               if Warnings_Detected /= 1 then\n+               if Warnings_Detected - Info_Messages /= 1 then\n                   Write_Char ('s');\n                end if;\n \n@@ -575,8 +579,9 @@ package body Errutil is\n       end if;\n \n       if Warning_Mode = Treat_As_Error then\n-         Total_Errors_Detected := Total_Errors_Detected + Warnings_Detected;\n-         Warnings_Detected := 0;\n+         Total_Errors_Detected :=\n+           Total_Errors_Detected + Warnings_Detected - Info_Messages;\n+         Warnings_Detected := Info_Messages;\n       end if;\n \n       --  Prevent displaying the same messages again in the future\n@@ -596,6 +601,7 @@ package body Errutil is\n       Serious_Errors_Detected := 0;\n       Total_Errors_Detected := 0;\n       Warnings_Detected := 0;\n+      Info_Messages := 0;\n       Cur_Msg := No_Error_Msg;\n \n       --  Initialize warnings table, if all warnings are suppressed, supply"}, {"sha": "fb844521ec24b93d0783af261fdc171bbdfce997", "filename": "gcc/ada/gnat_ugn.texi", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/12c5f1efb5d038d8638f517b8d73970573fbdaee/gcc%2Fada%2Fgnat_ugn.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/12c5f1efb5d038d8638f517b8d73970573fbdaee/gcc%2Fada%2Fgnat_ugn.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_ugn.texi?ref=12c5f1efb5d038d8638f517b8d73970573fbdaee", "patch": "@@ -4995,6 +4995,8 @@ treated as errors.\n The warning string still appears, but the warning messages are counted\n as errors, and prevent the generation of an object file. Note that this\n is the only -gnatw switch that affects the handling of style check messages.\n+Note also that this switch has no effect on info (information) messages, which\n+are not treated as errors if this switch is present.\n \n @item -gnatw.e\n @emph{Activate every optional warning}"}, {"sha": "2e5bade8e36ea98eae1ec936f99e96ec00043beb", "filename": "gcc/ada/gnatcmd.adb", "status": "modified", "additions": 8, "deletions": 7, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/12c5f1efb5d038d8638f517b8d73970573fbdaee/gcc%2Fada%2Fgnatcmd.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/12c5f1efb5d038d8638f517b8d73970573fbdaee/gcc%2Fada%2Fgnatcmd.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnatcmd.adb?ref=12c5f1efb5d038d8638f517b8d73970573fbdaee", "patch": "@@ -47,7 +47,6 @@ with Snames;   use Snames;\n with Stringt;\n with Switch;   use Switch;\n with Table;\n-with Targparm; use Targparm;\n with Tempdir;\n with Types;    use Types;\n \n@@ -58,6 +57,9 @@ with Ada.Text_IO;             use Ada.Text_IO;\n with GNAT.OS_Lib; use GNAT.OS_Lib;\n \n procedure GNATCmd is\n+\n+   AAMP_On_Target : Boolean := False;\n+\n    Normal_Exit : exception;\n    --  Raise this exception for normal program termination\n \n@@ -1183,7 +1185,7 @@ procedure GNATCmd is\n          --  No usage for Sync\n \n          if C /= Sync then\n-            if Targparm.AAMP_On_Target then\n+            if AAMP_On_Target then\n                Put (\"gnaampcmd \");\n             else\n                Put (\"gnat \");\n@@ -1584,12 +1586,11 @@ begin\n    Rules_Switches.Init;\n    Rules_Switches.Set_Last (0);\n \n-   --  Set AAMP_On_Target from the command name, for testing in\n-   --  Osint.Program_Name to handle the mapping of GNAAMP tool names. We don't\n-   --  extract it from system.ads, has there may be no default runtime.\n+   --  Set AAMP_On_Target from command name, for testing in Osint.Program_Name\n+   --  to handle the mapping of GNAAMP tool names. We don't extract it from\n+   --  system.ads, as there may be no default runtime.\n \n-   Find_Program_Name;\n-   AAMP_On_Target := Name_Buffer (1 .. Name_Len) = \"gnaampcmd\";\n+   AAMP_On_Target := To_Lower (Command_Name) = \"gnaampcmd\";\n \n    --  Put the command line in environment variable GNAT_DRIVER_COMMAND_LINE,\n    --  so that the spawned tool may know the way the GNAT driver was invoked."}, {"sha": "18a66229cd53d7290883f001b5196d9022c4af03", "filename": "gcc/ada/sem_ch5.adb", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/12c5f1efb5d038d8638f517b8d73970573fbdaee/gcc%2Fada%2Fsem_ch5.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/12c5f1efb5d038d8638f517b8d73970573fbdaee/gcc%2Fada%2Fsem_ch5.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch5.adb?ref=12c5f1efb5d038d8638f517b8d73970573fbdaee", "patch": "@@ -2523,8 +2523,10 @@ package body Sem_Ch5 is\n            or else (Is_Entity_Name (DS_Copy)\n                      and then not Is_Type (Entity (DS_Copy)))\n            or else (Nkind (DS_Copy) = N_Attribute_Reference\n-                     and then Attribute_Name (DS_Copy) = Name_Old)\n+                     and then Nam_In (Attribute_Name (DS_Copy),\n+                                      Name_Old, Name_Loop_Entry))\n            or else Nkind (DS_Copy) = N_Unchecked_Type_Conversion\n+           or else Has_Aspect (Etype (DS_Copy), Aspect_Iterable)\n          then\n             --  This is an iterator specification. Rewrite it as such and\n             --  analyze it to capture function calls that may require"}, {"sha": "adcad24435ca89bad70e47ccca08c11a5e7685a2", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/12c5f1efb5d038d8638f517b8d73970573fbdaee/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/12c5f1efb5d038d8638f517b8d73970573fbdaee/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=12c5f1efb5d038d8638f517b8d73970573fbdaee", "patch": "@@ -20715,6 +20715,8 @@ package body Sem_Prag is\n          -- Warning_As_Error --\n          ----------------------\n \n+         --  pragma Warning_As_Error (static_string_EXPRESSION);\n+\n          when Pragma_Warning_As_Error =>\n             GNAT_Pragma;\n             Check_Arg_Count (1);"}]}