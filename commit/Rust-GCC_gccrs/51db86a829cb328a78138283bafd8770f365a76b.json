{"sha": "51db86a829cb328a78138283bafd8770f365a76b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTFkYjg2YTgyOWNiMzI4YTc4MTM4MjgzYmFmZDg3NzBmMzY1YTc2Yg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2014-05-30T18:40:20Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2014-05-30T18:40:20Z"}, "message": "target-libpath.exp (set_gcc_exec_prefix_env_var, [...]): New procedures.\n\n\t* lib/target-libpath.exp (set_gcc_exec_prefix_env_var,\n\trestore_gcc_exec_prefix_env_var): New procedures.\n\t(set_ld_library_path_env_vars,\n\trestore_ld_library_path_env_vars): Use them.\n\t* lib/c-compat.exp: Load target-libpath.exp.\n\t(compat-use-alt-compiler): Call restore_gcc_exec_prefix_env_var.\n\t(compat-use-tst-compiler): Call set_gcc_exec_prefix_env_var.\n\t* g++.dg/compat/compat.exp (compat-use-alt-compiler): Call\n\trestore_gcc_exec_prefix_env_var.\n\t* g++.dg/compat/struct-layout-1.exp (compat-use-alt-compiler):\n\tLikewise.\n\nFrom-SVN: r211093", "tree": {"sha": "8f457c027962d86cad1dda6b1bf3675333a079cb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8f457c027962d86cad1dda6b1bf3675333a079cb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/51db86a829cb328a78138283bafd8770f365a76b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/51db86a829cb328a78138283bafd8770f365a76b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/51db86a829cb328a78138283bafd8770f365a76b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/51db86a829cb328a78138283bafd8770f365a76b/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b3f1051b11374792241ae7f72f015ce2325bb492", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b3f1051b11374792241ae7f72f015ce2325bb492", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b3f1051b11374792241ae7f72f015ce2325bb492"}], "stats": {"total": 63, "additions": 50, "deletions": 13}, "files": [{"sha": "eea0c4f2cec54cbb4f1c94e838941c107f8267fa", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/51db86a829cb328a78138283bafd8770f365a76b/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/51db86a829cb328a78138283bafd8770f365a76b/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=51db86a829cb328a78138283bafd8770f365a76b", "patch": "@@ -1,5 +1,17 @@\n 2014-05-30  Jakub Jelinek  <jakub@redhat.com>\n \n+\t* lib/target-libpath.exp (set_gcc_exec_prefix_env_var,\n+\trestore_gcc_exec_prefix_env_var): New procedures.\n+\t(set_ld_library_path_env_vars,\n+\trestore_ld_library_path_env_vars): Use them.\n+\t* lib/c-compat.exp: Load target-libpath.exp.\n+\t(compat-use-alt-compiler): Call restore_gcc_exec_prefix_env_var.\n+\t(compat-use-tst-compiler): Call set_gcc_exec_prefix_env_var.\n+\t* g++.dg/compat/compat.exp (compat-use-alt-compiler): Call\n+\trestore_gcc_exec_prefix_env_var.\n+\t* g++.dg/compat/struct-layout-1.exp (compat-use-alt-compiler):\n+\tLikewise.\n+\n \t* c-c++-common/asan/misalign-1.c: New test.\n \t* c-c++-common/asan/misalign-2.c: New test.\n "}, {"sha": "7fd77d7ed96683ed7f0faa2f31fbec3838c39ab7", "filename": "gcc/testsuite/g++.dg/compat/compat.exp", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/51db86a829cb328a78138283bafd8770f365a76b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcompat%2Fcompat.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/51db86a829cb328a78138283bafd8770f365a76b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcompat%2Fcompat.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcompat%2Fcompat.exp?ref=51db86a829cb328a78138283bafd8770f365a76b", "patch": "@@ -55,6 +55,7 @@ proc compat-use-alt-compiler { } {\n \tset ALWAYS_CXXFLAGS \"\"\n \tset ld_library_path $alt_ld_library_path\n \tset_ld_library_path_env_vars\n+\trestore_gcc_exec_prefix_env_var\n     }\n }\n "}, {"sha": "0beb59537239ba2f3b5203738910f7f6ac7c310d", "filename": "gcc/testsuite/g++.dg/compat/struct-layout-1.exp", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/51db86a829cb328a78138283bafd8770f365a76b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcompat%2Fstruct-layout-1.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/51db86a829cb328a78138283bafd8770f365a76b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcompat%2Fstruct-layout-1.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcompat%2Fstruct-layout-1.exp?ref=51db86a829cb328a78138283bafd8770f365a76b", "patch": "@@ -60,6 +60,7 @@ proc compat-use-alt-compiler { } {\n \tset ALWAYS_CXXFLAGS \"\"\n \tset ld_library_path $alt_ld_library_path\n \tset_ld_library_path_env_vars\n+\trestore_gcc_exec_prefix_env_var\n     }\n }\n "}, {"sha": "f5b461e473dd06256978996e504fb69fa4f2a001", "filename": "gcc/testsuite/lib/c-compat.exp", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/51db86a829cb328a78138283bafd8770f365a76b/gcc%2Ftestsuite%2Flib%2Fc-compat.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/51db86a829cb328a78138283bafd8770f365a76b/gcc%2Ftestsuite%2Flib%2Fc-compat.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Fc-compat.exp?ref=51db86a829cb328a78138283bafd8770f365a76b", "patch": "@@ -28,6 +28,7 @@ global compat_skip_list\n # compilers for compatibility tests.\n \n load_lib target-supports.exp\n+load_lib target-libpath.exp\n \n #\n # compat-use-alt-compiler -- make the alternate compiler the default\n@@ -47,6 +48,7 @@ proc compat-use-alt-compiler { } {\n \tif { $compat_alt_color == 0 } then {\n \t    regsub -- \"-fdiagnostics-color=never\" $TEST_ALWAYS_FLAGS \"\" TEST_ALWAYS_FLAGS\n \t}\n+\trestore_gcc_exec_prefix_env_var\n     }\n }\n \n@@ -64,6 +66,7 @@ proc compat-use-tst-compiler { } {\n     if { $compat_same_alt == 0 } then {\n \tset GCC_UNDER_TEST $compat_save_gcc_under_test\n \tset TEST_ALWAYS_FLAGS $compat_save_TEST_ALWAYS_FLAGS\n+\tset_gcc_exec_prefix_env_var\n     }\n }\n "}, {"sha": "175f3cd599e75ecfb398d862bcf749422e1e1291", "filename": "gcc/testsuite/lib/target-libpath.exp", "status": "modified", "additions": 33, "deletions": 13, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/51db86a829cb328a78138283bafd8770f365a76b/gcc%2Ftestsuite%2Flib%2Ftarget-libpath.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/51db86a829cb328a78138283bafd8770f365a76b/gcc%2Ftestsuite%2Flib%2Ftarget-libpath.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Ftarget-libpath.exp?ref=51db86a829cb328a78138283bafd8770f365a76b", "patch": "@@ -27,6 +27,21 @@ set orig_gcc_exec_prefix_saved 0\n set orig_gcc_exec_prefix_checked 0\n \n \n+#######################################\n+# proc set_gcc_exec_prefix_env_var { }\n+#######################################\n+\n+proc set_gcc_exec_prefix_env_var { } {\n+  global TEST_GCC_EXEC_PREFIX\n+  global env\n+\n+  # Set GCC_EXEC_PREFIX for the compiler under test to pick up files not in\n+  # the build tree from a specified location (normally the install tree).\n+  if [info exists TEST_GCC_EXEC_PREFIX] {\n+    setenv GCC_EXEC_PREFIX \"$TEST_GCC_EXEC_PREFIX\"\n+  }\n+}\n+\n #######################################\n # proc set_ld_library_path_env_vars { }\n #######################################\n@@ -49,7 +64,6 @@ proc set_ld_library_path_env_vars { } {\n   global orig_ld_library_path_64\n   global orig_dyld_library_path\n   global orig_gcc_exec_prefix\n-  global TEST_GCC_EXEC_PREFIX\n   global env\n \n   # Save the original GCC_EXEC_PREFIX.\n@@ -61,11 +75,7 @@ proc set_ld_library_path_env_vars { } {\n     set orig_gcc_exec_prefix_checked 1\n   }\n \n-  # Set GCC_EXEC_PREFIX for the compiler under test to pick up files not in\n-  # the build tree from a specified location (normally the install tree).\n-  if [info exists TEST_GCC_EXEC_PREFIX] {\n-    setenv GCC_EXEC_PREFIX \"$TEST_GCC_EXEC_PREFIX\"\n-  }\n+  set_gcc_exec_prefix_env_var\n \n   # Setting the ld library path causes trouble when testing cross-compilers.\n   if { [is_remote target] } {\n@@ -163,6 +173,22 @@ proc set_ld_library_path_env_vars { } {\n   verbose -log \"DYLD_LIBRARY_PATH=[getenv DYLD_LIBRARY_PATH]\"\n }\n \n+#######################################\n+# proc restore_gcc_exec_prefix_env_var { }\n+#######################################\n+\n+proc restore_gcc_exec_prefix_env_var { } {\n+  global orig_gcc_exec_prefix_saved\n+  global orig_gcc_exec_prefix\n+  global env\n+\n+  if { $orig_gcc_exec_prefix_saved } {\n+    setenv GCC_EXEC_PREFIX \"$orig_gcc_exec_prefix\"\n+  } elseif [info exists env(GCC_EXEC_PREFIX)] {\n+    unsetenv GCC_EXEC_PREFIX\n+  }\n+}\n+\n #######################################\n # proc restore_ld_library_path_env_vars { }\n #######################################\n@@ -175,21 +201,15 @@ proc restore_ld_library_path_env_vars { } {\n   global orig_ld_library_path_32_saved\n   global orig_ld_library_path_64_saved\n   global orig_dyld_library_path_saved\n-  global orig_gcc_exec_prefix_saved\n   global orig_ld_library_path\n   global orig_ld_run_path\n   global orig_shlib_path\n   global orig_ld_library_path_32\n   global orig_ld_library_path_64\n   global orig_dyld_library_path\n-  global orig_gcc_exec_prefix\n   global env\n \n-  if { $orig_gcc_exec_prefix_saved } {\n-    setenv GCC_EXEC_PREFIX \"$orig_gcc_exec_prefix\"\n-  } elseif [info exists env(GCC_EXEC_PREFIX)] {\n-    unsetenv GCC_EXEC_PREFIX\n-  }\n+  restore_gcc_exec_prefix_env_var\n \n   if { $orig_environment_saved == 0 } {\n     return"}]}