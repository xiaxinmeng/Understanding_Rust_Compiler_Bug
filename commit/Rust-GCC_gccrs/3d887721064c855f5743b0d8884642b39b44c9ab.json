{"sha": "3d887721064c855f5743b0d8884642b39b44c9ab", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2Q4ODc3MjEwNjRjODU1ZjU3NDNiMGQ4ODg0NjQyYjM5YjQ0YzlhYg==", "commit": {"author": {"name": "Kai Tietz", "email": "kai.tietz@onevision.com", "date": "2009-09-09T19:05:55Z"}, "committer": {"name": "Kai Tietz", "email": "ktietz@gcc.gnu.org", "date": "2009-09-09T19:05:55Z"}, "message": "i386.c (ix86_can_use_return_insn_p): Check for padding0, too.\n\n2009-09-09  Kai Tietz  <kai.tietz@onevision.com>\n\n\tPR/41315\n\t* config/i386.c (ix86_can_use_return_insn_p): Check for\n\tpadding0, too.\n\t(ix86_expand_prologue): Take frame.padding0 into logic of\n\tto_allocate checks.\n\t(ix86_expand_epilogue): Likewise.\n\nFrom-SVN: r151570", "tree": {"sha": "876bf740a262ab2d54b2c43de9af012546f64013", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/876bf740a262ab2d54b2c43de9af012546f64013"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3d887721064c855f5743b0d8884642b39b44c9ab", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3d887721064c855f5743b0d8884642b39b44c9ab", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3d887721064c855f5743b0d8884642b39b44c9ab", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3d887721064c855f5743b0d8884642b39b44c9ab/comments", "author": null, "committer": null, "parents": [{"sha": "80a76d1d753b3b36b45f28901cdc7a886d6a808b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/80a76d1d753b3b36b45f28901cdc7a886d6a808b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/80a76d1d753b3b36b45f28901cdc7a886d6a808b"}], "stats": {"total": 25, "additions": 18, "deletions": 7}, "files": [{"sha": "6546694ebc79732f3102c3abe620a2c4a02bf4cf", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3d887721064c855f5743b0d8884642b39b44c9ab/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3d887721064c855f5743b0d8884642b39b44c9ab/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3d887721064c855f5743b0d8884642b39b44c9ab", "patch": "@@ -1,3 +1,12 @@\n+2009-09-09  Kai Tietz  <kai.tietz@onevision.com>\n+\n+\tPR/41315\n+\t* config/i386.c (ix86_can_use_return_insn_p): Check for\n+\tpadding0, too.\n+\t(ix86_expand_prologue): Take frame.padding0 into logic of\n+\tto_allocate checks.\n+\t(ix86_expand_epilogue): Likewise.\n+\n 2009-09-09  Jakub Jelinek  <jakub@redhat.com>\n \n \t* config/t-slibgcc-elf-ver (SHLIB_MAKE_SOLINK, SHLIB_INSTALL_SOLINK):"}, {"sha": "f8d77dd6cd040435f4b2cbe36b77f79ec2307899", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 9, "deletions": 7, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3d887721064c855f5743b0d8884642b39b44c9ab/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3d887721064c855f5743b0d8884642b39b44c9ab/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=3d887721064c855f5743b0d8884642b39b44c9ab", "patch": "@@ -7441,7 +7441,8 @@ ix86_can_use_return_insn_p (void)\n     return 0;\n \n   ix86_compute_frame_layout (&frame);\n-  return frame.to_allocate == 0 && (frame.nregs + frame.nsseregs) == 0;\n+  return frame.to_allocate == 0 && frame.padding0 == 0\n+         && (frame.nregs + frame.nsseregs) == 0;\n }\n \f\n /* Value should be nonzero if functions must have frame pointers.\n@@ -8482,7 +8483,7 @@ ix86_expand_prologue (void)\n          && (! TARGET_STACK_PROBE || allocate < CHECK_STACK_LIMIT)))\n     {\n       if (!frame_pointer_needed\n-\t  || !frame.to_allocate\n+\t  || !(frame.to_allocate + frame.padding0)\n \t  || crtl->stack_realign_needed)\n         ix86_emit_save_regs_using_mov (stack_pointer_rtx,\n \t\t\t\t       frame.to_allocate\n@@ -8492,7 +8493,7 @@ ix86_expand_prologue (void)\n \t\t\t\t       -frame.nregs * UNITS_PER_WORD);\n     }\n   if (!frame_pointer_needed\n-      || !frame.to_allocate\n+      || !(frame.to_allocate + frame.padding0)\n       || crtl->stack_realign_needed)\n     ix86_emit_save_sse_regs_using_mov (stack_pointer_rtx,\n \t\t\t\t       frame.to_allocate);\n@@ -8804,9 +8805,10 @@ ix86_expand_epilogue (int style)\n   if ((!sp_valid && (frame.nregs + frame.nsseregs) <= 1)\n       || (TARGET_EPILOGUE_USING_MOVE\n \t  && cfun->machine->use_fast_prologue_epilogue\n-\t  && ((frame.nregs + frame.nsseregs) > 1 || frame.to_allocate))\n+\t  && ((frame.nregs + frame.nsseregs) > 1\n+\t      || (frame.to_allocate + frame.padding0) != 0))\n       || (frame_pointer_needed && !(frame.nregs + frame.nsseregs)\n-\t  && frame.to_allocate)\n+\t  && (frame.to_allocate + frame.padding0) != 0)\n       || (frame_pointer_needed && TARGET_USE_LEAVE\n \t  && cfun->machine->use_fast_prologue_epilogue\n \t  && (frame.nregs + frame.nsseregs) == 1)\n@@ -8822,7 +8824,7 @@ ix86_expand_epilogue (int style)\n \t be addressed by bp. sp must be used instead.  */\n \n       if (!frame_pointer_needed\n-\t  || (sp_valid && !frame.to_allocate) \n+\t  || (sp_valid && !(frame.to_allocate + frame.padding0)) \n \t  || stack_realign_fp)\n \t{\n \t  ix86_emit_restore_sse_regs_using_mov (stack_pointer_rtx,\n@@ -8952,7 +8954,7 @@ ix86_expand_epilogue (int style)\n \t\t\t\t     GEN_INT (frame.nsseregs * 16 + frame.padding0),\n \t\t\t\t     style, false);\n \t}\n-      else if (frame.to_allocate || frame.nsseregs)\n+      else if (frame.to_allocate || frame.padding0 || frame.nsseregs)\n \t{\n           ix86_emit_restore_sse_regs_using_mov (stack_pointer_rtx,\n \t\t\t\t\t\tframe.to_allocate, red_offset,"}]}