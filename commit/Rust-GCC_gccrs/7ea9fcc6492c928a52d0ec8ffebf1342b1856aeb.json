{"sha": "7ea9fcc6492c928a52d0ec8ffebf1342b1856aeb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2VhOWZjYzY0OTJjOTI4YTUyZDBlYzhmZmViZjEzNDJiMTg1NmFlYg==", "commit": {"author": {"name": "John David Anglin", "email": "dave@hiauly1.hia.nrc.ca", "date": "2001-01-30T05:18:50Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "2001-01-30T05:18:50Z"}, "message": "pa.md (return): Revise comment for trivial return.\n\n        * pa.md (return): Revise comment for trivial return.\n        (return_internal): Non-trivial return pattern for non-PIC code.\n        (return_internal_pic): Non-trivial return pattern for PIC code.\n        It uses the PIC register to ensure it is restored after\n        function calls.\n        (epilogue): Generate appropriate return for PIC and non-PIC code.\n\nCo-Authored-By: Jeff Law <law@redhat.com>\n\nFrom-SVN: r39345", "tree": {"sha": "38f5e1c46631d8b196c2fa6ae0db89313ace804e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/38f5e1c46631d8b196c2fa6ae0db89313ace804e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7ea9fcc6492c928a52d0ec8ffebf1342b1856aeb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7ea9fcc6492c928a52d0ec8ffebf1342b1856aeb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7ea9fcc6492c928a52d0ec8ffebf1342b1856aeb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7ea9fcc6492c928a52d0ec8ffebf1342b1856aeb/comments", "author": null, "committer": null, "parents": [{"sha": "05d9f8b08ccc9e7915c1002a6ea54587ed2f57f8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/05d9f8b08ccc9e7915c1002a6ea54587ed2f57f8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/05d9f8b08ccc9e7915c1002a6ea54587ed2f57f8"}], "stats": {"total": 44, "additions": 34, "deletions": 10}, "files": [{"sha": "ed0db6753c64129549a2ab75c84e47b7375f993f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ea9fcc6492c928a52d0ec8ffebf1342b1856aeb/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ea9fcc6492c928a52d0ec8ffebf1342b1856aeb/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7ea9fcc6492c928a52d0ec8ffebf1342b1856aeb", "patch": "@@ -1,3 +1,13 @@\n+2001-01-29  John David Anglin  <dave@hiauly1.hia.nrc.ca>\n+\t    Jeff Law <law@redhat.com>\n+\n+\t* pa.md (return): Revise comment for trivial return.\n+\t(return_internal): Non-trivial return pattern for non-PIC code.\n+\t(return_internal_pic): Non-trivial return pattern for PIC code.\n+\tIt uses the PIC register to ensure it is restored after\n+\tfunction calls.\n+\t(epilogue): Generate appropriate return for PIC and non-PIC code.\n+\n Mon Jan 29 23:53:14 2001  Christopher Faylor <cgf@cygnus.com>\n \n \t* config/i386/cygwin.h: Fix -mno-cygwin search path for link."}, {"sha": "76857f4eff4242157563a5fa78e40bca88fc6292", "filename": "gcc/config/pa/pa.md", "status": "modified", "additions": 24, "deletions": 10, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ea9fcc6492c928a52d0ec8ffebf1342b1856aeb/gcc%2Fconfig%2Fpa%2Fpa.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ea9fcc6492c928a52d0ec8ffebf1342b1856aeb/gcc%2Fconfig%2Fpa%2Fpa.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa.md?ref=7ea9fcc6492c928a52d0ec8ffebf1342b1856aeb", "patch": "@@ -5467,7 +5467,7 @@\n ;; Unconditional and other jump instructions.\n \n ;; This can only be used in a leaf function, so we do\n-;; not need to use the PIC register.\n+;; not need to use the PIC register when generating PIC code.\n (define_insn \"return\"\n   [(return)\n    (use (reg:SI 2))\n@@ -5482,18 +5482,29 @@\n   [(set_attr \"type\" \"branch\")\n    (set_attr \"length\" \"4\")])\n \n-;; Use a different pattern for functions which have non-trivial\n+;; Emit a different pattern for functions which have non-trivial\n ;; epilogues so as not to confuse jump and reorg.\n-;;\n-;; We use the PIC register to ensure it's restored after a\n-;; call in PIC mode.  This can be non-optimal for non-PIC\n-;; code but the real world cost should be unmeasurable.\n (define_insn \"return_internal\"\n   [(return)\n-   (use (match_operand 0 \"register_operand\" \"r\"))\n    (use (reg:SI 2))\n    (const_int 1)]\n-  \"true_regnum (operands[0]) == PIC_OFFSET_TABLE_REGNUM\"\n+  \"! flag_pic\"\n+  \"*\n+{\n+  if (TARGET_PA_20)\n+    return \\\"bve%* (%%r2)\\\";\n+  return \\\"bv%* %%r0(%%r2)\\\";\n+}\"\n+  [(set_attr \"type\" \"branch\")\n+   (set_attr \"length\" \"4\")])\n+\n+;; Use the PIC register to ensure it's restored after a\n+;; call in PIC mode.\n+(define_insn \"return_internal_pic\"\n+  [(return)\n+   (use (match_operand 0 \"register_operand\" \"r\"))\n+   (use (reg:SI 2))]\n+  \"flag_pic && true_regnum (operands[0]) == PIC_OFFSET_TABLE_REGNUM\"\n   \"*\n {\n   if (TARGET_PA_20)\n@@ -5531,8 +5542,11 @@\n       rtx x;\n \n       hppa_expand_epilogue ();\n-      x = gen_return_internal (gen_rtx_REG (word_mode,\n-\t\t\t\t\t    PIC_OFFSET_TABLE_REGNUM));\n+      if (flag_pic)\n+\tx = gen_return_internal_pic (gen_rtx_REG (word_mode,\n+\t\t\t\t\t\t  PIC_OFFSET_TABLE_REGNUM));\n+      else\n+\tx = gen_return_internal ();\n       emit_jump_insn (x);\n     }\n   DONE;"}]}