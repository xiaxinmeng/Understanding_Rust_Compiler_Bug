{"sha": "1810c3fa48bfd1071b9a53d6eab3969f45b77c8f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTgxMGMzZmE0OGJmZDEwNzFiOWE1M2Q2ZWFiMzk2OWY0NWI3N2M4Zg==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1993-12-22T19:18:06Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1993-12-22T19:18:06Z"}, "message": "(chainon):  Detect more circularities.\n\nFrom-SVN: r6266", "tree": {"sha": "0792eb0f1ff434df89ac3263b4691b78d0ea0624", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0792eb0f1ff434df89ac3263b4691b78d0ea0624"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1810c3fa48bfd1071b9a53d6eab3969f45b77c8f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1810c3fa48bfd1071b9a53d6eab3969f45b77c8f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1810c3fa48bfd1071b9a53d6eab3969f45b77c8f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1810c3fa48bfd1071b9a53d6eab3969f45b77c8f/comments", "author": null, "committer": null, "parents": [{"sha": "b60e974d7996651fa29d62214cc3f99890b82c2b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b60e974d7996651fa29d62214cc3f99890b82c2b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b60e974d7996651fa29d62214cc3f99890b82c2b"}], "stats": {"total": 14, "additions": 9, "deletions": 5}, "files": [{"sha": "8324ba1583f79e08a0d39953eb1425a12ce11e12", "filename": "gcc/tree.c", "status": "modified", "additions": 9, "deletions": 5, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1810c3fa48bfd1071b9a53d6eab3969f45b77c8f/gcc%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1810c3fa48bfd1071b9a53d6eab3969f45b77c8f/gcc%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.c?ref=1810c3fa48bfd1071b9a53d6eab3969f45b77c8f", "patch": "@@ -1571,14 +1571,18 @@ tree\n chainon (op1, op2)\n      tree op1, op2;\n {\n-  tree t;\n \n   if (op1)\n     {\n-      for (t = op1; TREE_CHAIN (t); t = TREE_CHAIN (t))\n-\tif (t == op2) abort ();\t/* Circularity being created */\n-      if (t == op2) abort ();\t/* Circularity being created */\n-      TREE_CHAIN (t) = op2;\n+      register tree t1;\n+      register tree t2;\n+\n+      for (t1 = op1; TREE_CHAIN (t1); t1 = TREE_CHAIN (t1))\n+\t;\n+      TREE_CHAIN (t1) = op2;\n+      for (t2 = op2; t2; t2 = TREE_CHAIN (t2))\n+        if (t2 == t1)\n+          abort ();  /* Circularity created.  */\n       return op1;\n     }\n   else return op2;"}]}