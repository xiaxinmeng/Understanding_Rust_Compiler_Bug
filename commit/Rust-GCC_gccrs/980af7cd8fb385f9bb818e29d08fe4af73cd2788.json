{"sha": "980af7cd8fb385f9bb818e29d08fe4af73cd2788", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTgwYWY3Y2Q4ZmIzODVmOWJiODE4ZTI5ZDA4ZmU0YWY3M2NkMjc4OA==", "commit": {"author": {"name": "Tom de Vries", "email": "tdevries@suse.de", "date": "2019-01-12T10:27:12Z"}, "committer": {"name": "Tom de Vries", "email": "vries@gcc.gnu.org", "date": "2019-01-12T10:27:12Z"}, "message": "[nvptx] Verify dimension limits after applying defaults\n\nThere's a problem in oacc_validate_dims that when f.i. the worker dimension\nis set using -fopenacc-dim=:32, and the vector_length is set using a\n\"vector_length (128)\" clause, the compiler combines, accepts and emits the\nvalues, while the combination of the two is invalid.\n\nThe reason for this is that while oacc_validate_dims validates the dimensions\nusing targetm.goacc.validate_dims before applying default or minimum values,\nit does not do so afterwards.\n\nWork around this in the nvptx port by applying the defaults from\noacc_default_dims at the end of nvptx_goacc_validate_dims_1, as\noacc_validate_dims would do it, and then apply the dimensions limits.\n\n2019-01-12  Tom de Vries  <tdevries@suse.de>\n\n\tPR middle-end/88703\n\t* config/nvptx/nvptx.c (nvptx_goacc_validate_dims_1): Apply defaults\n\tfrom oacc_default_dims, as oacc_validate_dims would do it, and apply\n\tdimensions limits.\n\nFrom-SVN: r267877", "tree": {"sha": "68afdb459fee5d022c8ae35662e2aa2409f293d1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/68afdb459fee5d022c8ae35662e2aa2409f293d1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/980af7cd8fb385f9bb818e29d08fe4af73cd2788", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/980af7cd8fb385f9bb818e29d08fe4af73cd2788", "html_url": "https://github.com/Rust-GCC/gccrs/commit/980af7cd8fb385f9bb818e29d08fe4af73cd2788", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/980af7cd8fb385f9bb818e29d08fe4af73cd2788/comments", "author": {"login": "vries", "id": 4057235, "node_id": "MDQ6VXNlcjQwNTcyMzU=", "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vries", "html_url": "https://github.com/vries", "followers_url": "https://api.github.com/users/vries/followers", "following_url": "https://api.github.com/users/vries/following{/other_user}", "gists_url": "https://api.github.com/users/vries/gists{/gist_id}", "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vries/subscriptions", "organizations_url": "https://api.github.com/users/vries/orgs", "repos_url": "https://api.github.com/users/vries/repos", "events_url": "https://api.github.com/users/vries/events{/privacy}", "received_events_url": "https://api.github.com/users/vries/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "46dedae6a8ea4a034761910b38f3f510dfa547b9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/46dedae6a8ea4a034761910b38f3f510dfa547b9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/46dedae6a8ea4a034761910b38f3f510dfa547b9"}], "stats": {"total": 24, "additions": 24, "deletions": 0}, "files": [{"sha": "80c3bf25fe071a582a38dd21ce7671ad3c58bebc", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/980af7cd8fb385f9bb818e29d08fe4af73cd2788/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/980af7cd8fb385f9bb818e29d08fe4af73cd2788/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=980af7cd8fb385f9bb818e29d08fe4af73cd2788", "patch": "@@ -1,3 +1,10 @@\n+2019-01-12  Tom de Vries  <tdevries@suse.de>\n+\n+\tPR middle-end/88703\n+\t* config/nvptx/nvptx.c (nvptx_goacc_validate_dims_1): Apply defaults\n+\tfrom oacc_default_dims, as oacc_validate_dims would do it, and apply\n+\tdimensions limits.\n+\n 2019-01-12  Tom de Vries  <tdevries@suse.de>\n \n \t* config/nvptx/nvptx.c (nvptx_goacc_validate_dims_1)"}, {"sha": "a4c79532a1d180990fd78fa5bca1ba1b272e5be8", "filename": "gcc/config/nvptx/nvptx.c", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/980af7cd8fb385f9bb818e29d08fe4af73cd2788/gcc%2Fconfig%2Fnvptx%2Fnvptx.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/980af7cd8fb385f9bb818e29d08fe4af73cd2788/gcc%2Fconfig%2Fnvptx%2Fnvptx.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fnvptx%2Fnvptx.c?ref=980af7cd8fb385f9bb818e29d08fe4af73cd2788", "patch": "@@ -5703,6 +5703,23 @@ nvptx_goacc_validate_dims_1 (tree decl, int dims[], int fn_level, unsigned used)\n \tdims[GOMP_DIM_GANG] = PTX_DEFAULT_RUNTIME_DIM;\n       nvptx_apply_dim_limits (dims);\n     }\n+\n+  if (offload_region_p)\n+    {\n+      for (i = 0; i < GOMP_DIM_MAX; i++)\n+\t{\n+\t  if (!(dims[i] < 0))\n+\t    continue;\n+\n+\t  if ((used & GOMP_DIM_MASK (i)) == 0)\n+\t    /* Function oacc_validate_dims will apply the minimal dimension.  */\n+\t    continue;\n+\n+\t  dims[i] = oacc_get_default_dim (i);\n+\t}\n+\n+      nvptx_apply_dim_limits (dims);\n+    }\n }\n \n /* Validate compute dimensions of an OpenACC offload or routine, fill"}]}