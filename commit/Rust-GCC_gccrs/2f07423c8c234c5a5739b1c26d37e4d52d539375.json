{"sha": "2f07423c8c234c5a5739b1c26d37e4d52d539375", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmYwNzQyM2M4YzIzNGM1YTU3MzliMWMyNmQzN2U0ZDUyZDUzOTM3NQ==", "commit": {"author": {"name": "Pascal Obry", "email": "obry@adacore.com", "date": "2008-10-03T12:49:38Z"}, "committer": {"name": "Olivier Hainque", "email": "hainque@gcc.gnu.org", "date": "2008-10-03T12:49:38Z"}, "message": "gcov.c (create_file_names): Properly handle UNIX and DOS directory separators.\n\n        * gcov.c (create_file_names): Properly handle UNIX and DOS\n        directory separators.\n        (make_gcov_file_name): Likewise + convert the ':' DOS drive\n        separator to '~' to ensure clean filenames on Windows.\n\nFrom-SVN: r140854", "tree": {"sha": "942aca1137183dcda1c3fc60f8db38532bc19c21", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/942aca1137183dcda1c3fc60f8db38532bc19c21"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2f07423c8c234c5a5739b1c26d37e4d52d539375", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2f07423c8c234c5a5739b1c26d37e4d52d539375", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2f07423c8c234c5a5739b1c26d37e4d52d539375", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2f07423c8c234c5a5739b1c26d37e4d52d539375/comments", "author": {"login": "TurboGit", "id": 467069, "node_id": "MDQ6VXNlcjQ2NzA2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/467069?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TurboGit", "html_url": "https://github.com/TurboGit", "followers_url": "https://api.github.com/users/TurboGit/followers", "following_url": "https://api.github.com/users/TurboGit/following{/other_user}", "gists_url": "https://api.github.com/users/TurboGit/gists{/gist_id}", "starred_url": "https://api.github.com/users/TurboGit/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TurboGit/subscriptions", "organizations_url": "https://api.github.com/users/TurboGit/orgs", "repos_url": "https://api.github.com/users/TurboGit/repos", "events_url": "https://api.github.com/users/TurboGit/events{/privacy}", "received_events_url": "https://api.github.com/users/TurboGit/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b268558f8adc09557d9f07818e6f1ac10134b9bf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b268558f8adc09557d9f07818e6f1ac10134b9bf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b268558f8adc09557d9f07818e6f1ac10134b9bf"}], "stats": {"total": 74, "additions": 47, "deletions": 27}, "files": [{"sha": "7084d1850980dc3aa7e037931253fecd830d9136", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f07423c8c234c5a5739b1c26d37e4d52d539375/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f07423c8c234c5a5739b1c26d37e4d52d539375/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2f07423c8c234c5a5739b1c26d37e4d52d539375", "patch": "@@ -1,3 +1,10 @@\n+2008-10-03  Pascal Obry  <obry@adacore.com>\n+\n+\t* gcov.c (create_file_names): Properly handle UNIX and DOS\n+\tdirectory separators.\n+\t(make_gcov_file_name): Likewise + convert the ':' DOS drive\n+\tseparator to '~' to ensure clean filenames on Windows.\n+\n 2008-10-02  David Edelsohn  <edelsohn@gnu.org>\n \n \t* config/rs6000/rs6000.c (USE_FP_FOR_ARG_P): Revert"}, {"sha": "a92ce91f2a3d5a01e50bb66e5d2e93087ad942b3", "filename": "gcc/gcov.c", "status": "modified", "additions": 40, "deletions": 27, "changes": 67, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f07423c8c234c5a5739b1c26d37e4d52d539375/gcc%2Fgcov.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f07423c8c234c5a5739b1c26d37e4d52d539375/gcc%2Fgcov.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcov.c?ref=2f07423c8c234c5a5739b1c26d37e4d52d539375", "patch": "@@ -661,7 +661,7 @@ create_file_names (const char *file_name)\n \n       base = !stat (object_directory, &status) && S_ISDIR (status.st_mode);\n       strcat (name, object_directory);\n-      if (base && name[strlen (name) - 1] != '/')\n+      if (base && (! IS_DIR_SEPARATOR (name[strlen (name) - 1])))\n \tstrcat (name, \"/\");\n     }\n   else\n@@ -674,8 +674,8 @@ create_file_names (const char *file_name)\n   if (base)\n     {\n       /* Append source file name.  */\n-      cptr = strrchr (file_name, '/');\n-      strcat (name, cptr ? cptr + 1 : file_name);\n+      const char *cptr = lbasename (file_name);\n+      strcat (name, cptr ? cptr : file_name);\n     }\n \n   /* Remove the extension.  */\n@@ -1482,16 +1482,16 @@ function_summary (const coverage_t *coverage, const char *title)\n static char *\n make_gcov_file_name (const char *input_name, const char *src_name)\n {\n-  char *cptr;\n+  const char *cptr;\n   char *name;\n \n   if (flag_long_names && input_name && strcmp (src_name, input_name))\n     {\n       name = XNEWVEC (char, strlen (src_name) + strlen (input_name) + 10);\n       name[0] = 0;\n       /* Generate the input filename part.  */\n-      cptr = flag_preserve_paths ? NULL : strrchr (input_name, '/');\n-      strcat (name, cptr ? cptr + 1 : input_name);\n+      cptr = flag_preserve_paths ? NULL : lbasename (input_name);\n+      strcat (name, cptr ? cptr : input_name);\n       strcat (name, \"##\");\n     }\n   else\n@@ -1501,39 +1501,52 @@ make_gcov_file_name (const char *input_name, const char *src_name)\n     }\n \n   /* Generate the source filename part.  */\n-  cptr = flag_preserve_paths ? NULL : strrchr (src_name, '/');\n-  strcat (name, cptr ? cptr + 1 : src_name);\n+\n+  cptr = flag_preserve_paths ? NULL : lbasename (src_name);\n+  strcat (name, cptr ? cptr : src_name);\n \n   if (flag_preserve_paths)\n     {\n-      /* Convert '/' to '#', remove '/./', convert '/../' to '/^/' */\n-      char *prev;\n+      /* Convert '/' and '\\' to '#', remove '/./', convert '/../' to '/^/',\n+\t convert ':' to '~' on DOS based file system.  */\n+      char *pnew = name, *pold = name;\n \n-      for (cptr = name; (cptr = strchr ((prev = cptr), '/'));)\n-\t{\n-\t  unsigned shift = 0;\n+      /* First check for leading drive separator.  */\n \n-\t  if (prev + 1 == cptr && prev[0] == '.')\n+      while (*pold != '\\0')\n+\t{\n+\t  if (*pold == '/' || *pold == '\\\\')\n \t    {\n-\t      /* Remove '.' */\n-\t      shift = 2;\n+\t      *pnew++ = '#';\n+\t      pold++;\n \t    }\n-\t  else if (prev + 2 == cptr && prev[0] == '.' && prev[1] == '.')\n+#if defined (HAVE_DOS_BASED_FILE_SYSTEM)\n+\t  else if (*pold == ':')\n \t    {\n-\t      /* Convert '..' */\n-\t      shift = 1;\n-\t      prev[1] = '^';\n+\t      *pnew++ = '~';\n+\t      pold++;\n \t    }\n-\t  else\n-\t    *cptr++ = '#';\n-\t  if (shift)\n+#endif\n+\t  else if ((*pold == '/' && strstr (pold, \"/./\") == pold)\n+\t\t   || (*pold == '\\\\' && strstr (pold, \"\\\\.\\\\\") == pold))\n+\t      pold += 3;\n+\t  else if (*pold == '/' && strstr (pold, \"/../\") == pold)\n \t    {\n-\t      cptr = prev;\n-\t      do\n-\t\tprev[0] = prev[shift];\n-\t      while (*prev++);\n+\t      strcpy (pnew, \"/^/\");\n+\t      pnew += 3;\n+\t      pold += 4;\n \t    }\n+\t  else if (*pold == '\\\\' && strstr (pold, \"\\\\..\\\\\") == pold)\n+\t    {\n+\t      strcpy (pnew, \"\\\\^\\\\\");\n+\t      pnew += 3;\n+\t      pold += 4;\n+\t    }\n+\t  else\n+\t    *pnew++ = *pold++;\n \t}\n+\n+      *pnew = '\\0';\n     }\n \n   strcat (name, \".gcov\");"}]}