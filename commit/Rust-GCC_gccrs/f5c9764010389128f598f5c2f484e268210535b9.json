{"sha": "f5c9764010389128f598f5c2f484e268210535b9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjVjOTc2NDAxMDM4OTEyOGY1OThmNWMyZjQ4NGUyNjgyMTA1MzViOQ==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@cygnus.com", "date": "1998-09-20T00:01:31Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "1998-09-20T00:01:31Z"}, "message": "combine.c (distribute_notes): If an insn is a cc0 user, only delete it if we can also delete the cc0 setter.\n\n        * combine.c (distribute_notes): If an insn is a cc0 user, only\n        delete it if we can also delete the cc0 setter.\n\nFrom-SVN: r22489", "tree": {"sha": "c94d12e5ec3fecf3937f1e0686b63e8510af6e51", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c94d12e5ec3fecf3937f1e0686b63e8510af6e51"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f5c9764010389128f598f5c2f484e268210535b9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f5c9764010389128f598f5c2f484e268210535b9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f5c9764010389128f598f5c2f484e268210535b9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f5c9764010389128f598f5c2f484e268210535b9/comments", "author": null, "committer": null, "parents": [{"sha": "a58bd5080ad5fc39a02eb1e786f71615ed3146fe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a58bd5080ad5fc39a02eb1e786f71615ed3146fe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a58bd5080ad5fc39a02eb1e786f71615ed3146fe"}], "stats": {"total": 38, "additions": 36, "deletions": 2}, "files": [{"sha": "9bed9016399fd4392a5f3c85cf7f61c1fb76bd8b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f5c9764010389128f598f5c2f484e268210535b9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f5c9764010389128f598f5c2f484e268210535b9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f5c9764010389128f598f5c2f484e268210535b9", "patch": "@@ -1,3 +1,8 @@\n+Sun Sep 20 00:00:51 1998  Richard Henderson  <rth@cygnus.com>\n+\n+        * combine.c (distribute_notes): If an insn is a cc0 user, only\n+        delete it if we can also delete the cc0 setter.\n+\n Sun Sep 20 00:22:23 1998  Michael Tiemann  <michael@impact.tiemann.org>\n \n \t* fold-const.c (fold): Fix typo in COND_EXPR handling code."}, {"sha": "e2a0095a1db23625ef6bb7f9974bfced604a5a2c", "filename": "gcc/combine.c", "status": "modified", "additions": 31, "deletions": 2, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f5c9764010389128f598f5c2f484e268210535b9/gcc%2Fcombine.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f5c9764010389128f598f5c2f484e268210535b9/gcc%2Fcombine.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcombine.c?ref=f5c9764010389128f598f5c2f484e268210535b9", "patch": "@@ -11542,6 +11542,7 @@ distribute_notes (notes, from_insn, i3, i2, elim_i2, elim_i1)\n \t\t    {\n \t\t      rtx set = single_set (tem);\n \t\t      rtx inner_dest = 0;\n+\t\t      rtx cc0_setter = NULL_RTX;\n \n \t\t      if (set != 0)\n \t\t\tfor (inner_dest = SET_DEST (set);\n@@ -11552,10 +11553,21 @@ distribute_notes (notes, from_insn, i3, i2, elim_i2, elim_i1)\n \t\t\t  ;\n \n \t\t      /* Verify that it was the set, and not a clobber that\n-\t\t\t modified the register.  */\n+\t\t\t modified the register. \n+\n+\t\t\t CC0 targets must be careful to maintain setter/user\n+\t\t\t pairs.  If we cannot delete the setter due to side\n+\t\t\t effects, mark the user with an UNUSED note instead\n+\t\t\t of deleting it.  */\n \n \t\t      if (set != 0 && ! side_effects_p (SET_SRC (set))\n-\t\t\t  && rtx_equal_p (XEXP (note, 0), inner_dest))\n+\t\t\t  && rtx_equal_p (XEXP (note, 0), inner_dest)\n+#ifdef HAVE_cc0\n+\t\t\t  && (! reg_mentioned_p (cc0_rtx, SET_SRC (set))\n+\t\t\t      || ((cc0_setter = prev_cc0_setter (tem)) != NULL\n+\t\t\t\t  && sets_cc0_p (PATTERN (cc0_setter)) > 0))\n+#endif\n+\t\t\t  )\n \t\t\t{\n \t\t\t  /* Move the notes and links of TEM elsewhere.\n \t\t\t     This might delete other dead insns recursively. \n@@ -11571,6 +11583,23 @@ distribute_notes (notes, from_insn, i3, i2, elim_i2, elim_i1)\n \t\t\t  PUT_CODE (tem, NOTE);\n \t\t\t  NOTE_LINE_NUMBER (tem) = NOTE_INSN_DELETED;\n \t\t\t  NOTE_SOURCE_FILE (tem) = 0;\n+\n+#ifdef HAVE_cc0\n+\t\t\t  /* Delete the setter too.  */\n+\t\t\t  if (cc0_setter)\n+\t\t\t    {\n+\t\t\t      PATTERN (cc0_setter) = pc_rtx;\n+\n+\t\t\t      distribute_notes (REG_NOTES (cc0_setter),\n+\t\t\t\t\t\tcc0_setter, cc0_setter,\n+\t\t\t\t\t\tNULL_RTX, NULL_RTX, NULL_RTX);\n+\t\t\t      distribute_links (LOG_LINKS (cc0_setter));\n+\n+\t\t\t      PUT_CODE (cc0_setter, NOTE);\n+\t\t\t      NOTE_LINE_NUMBER (cc0_setter) = NOTE_INSN_DELETED;\n+\t\t\t      NOTE_SOURCE_FILE (cc0_setter) = 0;\n+\t\t\t    }\n+#endif\n \t\t\t}\n \t\t      /* If the register is both set and used here, put the\n \t\t\t REG_DEAD note here, but place a REG_UNUSED note"}]}