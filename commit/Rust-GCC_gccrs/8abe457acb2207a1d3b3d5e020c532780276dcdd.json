{"sha": "8abe457acb2207a1d3b3d5e020c532780276dcdd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGFiZTQ1N2FjYjIyMDdhMWQzYjNkNWUwMjBjNTMyNzgwMjc2ZGNkZA==", "commit": {"author": {"name": "Samuel Tardieu", "email": "sam@gcc.gnu.org", "date": "2008-04-15T11:02:58Z"}, "committer": {"name": "Samuel Tardieu", "email": "sam@gcc.gnu.org", "date": "2008-04-15T11:02:58Z"}, "message": "[multiple changes]\n\n2008-04-15  Ed Schonberg  <schonberg@adacore.com>\n\n    gcc/ada/\n\tPR ada/16086\n\t* sem_ch12.adb (Analyze_Formal_Subprogram): The default can be any\n\tprotected operation that matches the signature, not only an entry, a\n\tregular subprogram or a literal.\n\n2008-04-15  Samuel Tardieu  <sam@rfc1149.net>\n\n    gcc/testsuite/\n\tPR ada/16086\n\t* gnat.dg/prot_def.adb: New.\n\nFrom-SVN: r134312", "tree": {"sha": "ed5095bf2553e7adbc5c4b819ce0e8345de6f839", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ed5095bf2553e7adbc5c4b819ce0e8345de6f839"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8abe457acb2207a1d3b3d5e020c532780276dcdd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8abe457acb2207a1d3b3d5e020c532780276dcdd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8abe457acb2207a1d3b3d5e020c532780276dcdd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8abe457acb2207a1d3b3d5e020c532780276dcdd/comments", "author": null, "committer": null, "parents": [{"sha": "29f4754ff005a8b53f2f4341093bf1e800aad4ce", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/29f4754ff005a8b53f2f4341093bf1e800aad4ce", "html_url": "https://github.com/Rust-GCC/gccrs/commit/29f4754ff005a8b53f2f4341093bf1e800aad4ce"}], "stats": {"total": 89, "additions": 77, "deletions": 12}, "files": [{"sha": "cec2e8cb2e595a8281a594b900d9591772d2352a", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8abe457acb2207a1d3b3d5e020c532780276dcdd/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8abe457acb2207a1d3b3d5e020c532780276dcdd/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=8abe457acb2207a1d3b3d5e020c532780276dcdd", "patch": "@@ -1,3 +1,10 @@\n+2008-04-15  Ed Schonberg  <schonberg@adacore.com>\n+\n+\tPR ada/16086\n+\t* sem_ch12.adb (Analyze_Formal_Subprogram): The default can be any\n+\tprotected operation that matches the signature, not only an entry, a\n+\tregular subprogram or a literal.\n+\n 2008-04-15  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* ada-tree.h (DECL_BY_COMPONENT_PTR_P): Use DECL_LANG_FLAG_3."}, {"sha": "c44f3929d507b8b537ae867e42be458a3c48fbb3", "filename": "gcc/ada/sem_ch12.adb", "status": "modified", "additions": 21, "deletions": 12, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8abe457acb2207a1d3b3d5e020c532780276dcdd/gcc%2Fada%2Fsem_ch12.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8abe457acb2207a1d3b3d5e020c532780276dcdd/gcc%2Fada%2Fsem_ch12.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch12.adb?ref=8abe457acb2207a1d3b3d5e020c532780276dcdd", "patch": "@@ -2361,30 +2361,34 @@ package body Sem_Ch12 is\n \n          --  Default name may be overloaded, in which case the interpretation\n          --  with the correct profile must be  selected, as for a renaming.\n+         --  If the definition is an indexed component, it must denote a\n+         --  member of an entry family. If it is a selected component, it\n+         --  can be a protected operation.\n \n          if Etype (Def) = Any_Type then\n             return;\n \n          elsif Nkind (Def) = N_Selected_Component then\n-            Subp := Entity (Selector_Name (Def));\n-\n-            if Ekind (Subp) /= E_Entry then\n+            if not Is_Overloadable (Entity (Selector_Name (Def))) then\n                Error_Msg_N (\"expect valid subprogram name as default\", Def);\n-               return;\n             end if;\n \n          elsif Nkind (Def) = N_Indexed_Component then\n-            if  Nkind (Prefix (Def)) /= N_Selected_Component then\n-               Error_Msg_N (\"expect valid subprogram name as default\", Def);\n-               return;\n-\n-            else\n-               Subp := Entity (Selector_Name (Prefix (Def)));\n+            if Is_Entity_Name (Prefix (Def)) then\n+               if Ekind (Entity (Prefix (Def))) /= E_Entry_Family then\n+                  Error_Msg_N (\"expect valid subprogram name as default\", Def);\n+               end if;\n \n-               if Ekind (Subp) /= E_Entry_Family then\n+            elsif Nkind (Prefix (Def)) = N_Selected_Component then\n+               if Ekind (Entity (Selector_Name (Prefix (Def))))\n+                 /= E_Entry_Family\n+               then\n                   Error_Msg_N (\"expect valid subprogram name as default\", Def);\n-                  return;\n                end if;\n+\n+            else\n+               Error_Msg_N (\"expect valid subprogram name as default\", Def);\n+               return;\n             end if;\n \n          elsif Nkind (Def) = N_Character_Literal then\n@@ -2410,6 +2414,9 @@ package body Sem_Ch12 is\n             end if;\n \n          else\n+\n+            --  Several interpretations. Disambiguate as for a renaming.\n+\n             declare\n                I   : Interp_Index;\n                I1  : Interp_Index := 0;\n@@ -9778,6 +9785,8 @@ package body Sem_Ch12 is\n          --  interface then  the generic formal is not unless declared\n          --  explicitly so. If not declared limited, the actual cannot be\n          --  limited (see AI05-0087).\n+         --  Disable check for now, limited interfaces implemented by\n+         --  protected types are common, Need to update tests ???\n \n          if Is_Limited_Type (Act_T)\n            and then not Is_Limited_Type (A_Gen_T)"}, {"sha": "e3350a80c8e8d99124b01dc56621b76bccda86e9", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8abe457acb2207a1d3b3d5e020c532780276dcdd/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8abe457acb2207a1d3b3d5e020c532780276dcdd/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=8abe457acb2207a1d3b3d5e020c532780276dcdd", "patch": "@@ -1,3 +1,8 @@\n+2008-04-15  Samuel Tardieu  <sam@rfc1149.net>\n+\n+\tPR ada/16086\n+\t* gnat.dg/prot_def.adb: New.\n+\n 2008-04-14  Ian Lance Taylor  <iant@google.com>\n \n \t* gcc.dg/strict-overflow-6.c: New."}, {"sha": "d56195ea483e93f2f1dbe1cc5e0a75d873494781", "filename": "gcc/testsuite/gnat.dg/prot_def.adb", "status": "added", "additions": 44, "deletions": 0, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8abe457acb2207a1d3b3d5e020c532780276dcdd/gcc%2Ftestsuite%2Fgnat.dg%2Fprot_def.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8abe457acb2207a1d3b3d5e020c532780276dcdd/gcc%2Ftestsuite%2Fgnat.dg%2Fprot_def.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fprot_def.adb?ref=8abe457acb2207a1d3b3d5e020c532780276dcdd", "patch": "@@ -0,0 +1,44 @@\n+-- { dg-do run }\n+procedure Prot_Def is\n+\n+   protected Prot is\n+      procedure Inc;\n+      function Get return Integer;\n+   private\n+      Data : Integer := 0;\n+   end Prot;\n+\n+   protected body Prot is\n+      procedure Inc is\n+      begin\n+         Data := Data + 1;\n+      end Inc;\n+      function Get return Integer is\n+      begin\n+         return Data;\n+      end Get;\n+   end Prot;\n+\n+   generic\n+      with procedure Inc is Prot.Inc;\n+      with function Get return Integer is Prot.Get;\n+   package Gen is\n+      function Add2_Get return Integer;\n+   end Gen;\n+\n+   package body Gen is\n+      function Add2_Get return Integer is\n+      begin\n+         Inc;\n+\t Inc;\n+\t return Get;\n+      end Add2_Get;\n+   end Gen;\n+\n+   package Inst is new Gen;\n+\n+begin\n+   if Inst.Add2_Get /= 2 then\n+      raise Constraint_Error;\n+   end if;\n+end Prot_Def;"}]}