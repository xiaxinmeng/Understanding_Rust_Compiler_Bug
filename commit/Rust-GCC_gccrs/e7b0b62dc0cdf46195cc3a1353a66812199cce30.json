{"sha": "e7b0b62dc0cdf46195cc3a1353a66812199cce30", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTdiMGI2MmRjMGNkZjQ2MTk1Y2MzYTEzNTNhNjY4MTIxOTljY2UzMA==", "commit": {"author": {"name": "Kai Tietz", "email": "ktietz@redhat.com", "date": "2012-11-30T08:10:34Z"}, "committer": {"name": "Kai Tietz", "email": "ktietz@gcc.gnu.org", "date": "2012-11-30T08:10:34Z"}, "message": "host-mingw32.c (va_granularity): Make none-const.\n\n        * config/i386/host-mingw32.c (va_granularity): Make none-const.\n        (mingw32_gt_pch_alloc_granularity): Return OS' allocation\n        granularity.\n        (mingw32_gt_pch_use_address): Retry mapping of used address\n        as multiple instances might interfer.\n\nFrom-SVN: r193987", "tree": {"sha": "3214f1dabec5c74e199f989c9dedfb827f3642f7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3214f1dabec5c74e199f989c9dedfb827f3642f7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e7b0b62dc0cdf46195cc3a1353a66812199cce30", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e7b0b62dc0cdf46195cc3a1353a66812199cce30", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e7b0b62dc0cdf46195cc3a1353a66812199cce30", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e7b0b62dc0cdf46195cc3a1353a66812199cce30/comments", "author": null, "committer": null, "parents": [{"sha": "d71576d634a27eed6e34aee7abfd1b89d32d8949", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d71576d634a27eed6e34aee7abfd1b89d32d8949", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d71576d634a27eed6e34aee7abfd1b89d32d8949"}], "stats": {"total": 37, "additions": 31, "deletions": 6}, "files": [{"sha": "9a5160dbc81375580f1520c0d26f7f7c41fcc7b8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e7b0b62dc0cdf46195cc3a1353a66812199cce30/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e7b0b62dc0cdf46195cc3a1353a66812199cce30/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e7b0b62dc0cdf46195cc3a1353a66812199cce30", "patch": "@@ -1,5 +1,11 @@\n 2012-11-30  Kai Tietz  <ktietz@redhat.com>\n \n+\t* config/i386/host-mingw32.c (va_granularity): Make none-const.\n+\t(mingw32_gt_pch_alloc_granularity): Return OS' allocation\n+\tgranularity.\n+\t(mingw32_gt_pch_use_address): Retry mapping of used address\n+\tas multiple instances might interfer.\n+\n \t* config/i386/mingw32.h (SHARED_LIBGCC_SPEC): Synchronize with\n \tcygwin-host.\n "}, {"sha": "015696cbb182f12a9d82b16999e0f58677a8de5e", "filename": "gcc/config/i386/host-mingw32.c", "status": "modified", "additions": 25, "deletions": 6, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e7b0b62dc0cdf46195cc3a1353a66812199cce30/gcc%2Fconfig%2Fi386%2Fhost-mingw32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e7b0b62dc0cdf46195cc3a1353a66812199cce30/gcc%2Fconfig%2Fi386%2Fhost-mingw32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fhost-mingw32.c?ref=e7b0b62dc0cdf46195cc3a1353a66812199cce30", "patch": "@@ -27,6 +27,7 @@\n \n #define WIN32_LEAN_AND_MEAN  /* Not so important if we have windows.h.gch.  */\n #include <windows.h>\n+#include <stdlib.h>\n \n static void * mingw32_gt_pch_get_address (size_t, int);\n static int mingw32_gt_pch_use_address (void *, size_t, int, size_t);\n@@ -45,7 +46,7 @@ static inline void w32_error(const char*, const char*, int, const char*);\n static const size_t pch_VA_max_size  = 128 * 1024 * 1024;\n \n /* Granularity for reserving address space.  */\n-static const size_t va_granularity = 0x10000;\n+static size_t va_granularity = 0x10000;\n \n /* Print out the GetLastError() translation.  */ \n static inline void\n@@ -66,8 +67,14 @@ w32_error (const char* function, const char* file, int line,\n }\n \n /* Granularity for reserving address space.  */\n-static size_t mingw32_gt_pch_alloc_granularity (void)\n+static size_t\n+mingw32_gt_pch_alloc_granularity (void)\n {\n+  SYSTEM_INFO si;\n+\n+  GetSystemInfo (&si);\n+  va_granularity = (size_t) si.dwAllocationGranularity;\n+\n   return va_granularity;\n }\n \n@@ -114,7 +121,7 @@ mingw32_gt_pch_use_address (void *addr, size_t size, int fd,\n {\n   void * mmap_addr;\n   HANDLE mmap_handle;\n-\n+ \n   /* Apparently, MS Vista puts unnamed file mapping objects into Global\n      namespace when running an application in a Terminal Server\n      session.  This causes failure since, by default, applications \n@@ -132,6 +139,8 @@ mingw32_gt_pch_use_address (void *addr, size_t size, int fd,\n      and earlier, backslashes are invalid in object name.  So, we need\n      to check if we are on Windows2000 or higher.  */\n   OSVERSIONINFO version_info;\n+  int r;\n+\n   version_info.dwOSVersionInfoSize = sizeof (version_info);\n \n   if (size == 0)\n@@ -154,7 +163,6 @@ mingw32_gt_pch_use_address (void *addr, size_t size, int fd,\n \t\tOBJECT_NAME_FMT \"%lx\", GetCurrentProcessId());\n       object_name = local_object_name;\n     }\n-     \n   mmap_handle = CreateFileMappingA ((HANDLE) _get_osfhandle (fd), NULL,\n \t\t\t\t    PAGE_WRITECOPY | SEC_COMMIT, 0, 0,\n \t\t\t\t    object_name);\n@@ -164,8 +172,19 @@ mingw32_gt_pch_use_address (void *addr, size_t size, int fd,\n       w32_error (__FUNCTION__,  __FILE__, __LINE__, \"CreateFileMapping\");\n       return -1; \n     }\n-  mmap_addr = MapViewOfFileEx (mmap_handle, FILE_MAP_COPY, 0, offset,\n-\t\t\t       size, addr);\n+\n+  /* Retry five times, as here might occure a race with multiple gcc's\n+     instances at same time.  */\n+  for (r = 0; r < 5; r++)\n+   {\n+      mmap_addr = MapViewOfFileEx (mmap_handle, FILE_MAP_COPY, 0, offset,\n+\t\t\t\t   size, addr);\n+      if (mmap_addr == addr)\n+\tbreak;\n+      if (r != 4)\n+        Sleep (500);\n+   }\n+      \n   if (mmap_addr != addr)\n     {\n       w32_error (__FUNCTION__, __FILE__, __LINE__, \"MapViewOfFileEx\");"}]}