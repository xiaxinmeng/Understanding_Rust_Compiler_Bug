{"sha": "987e845a7fe19a79966f3fe63b292eb98e7b3035", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTg3ZTg0NWE3ZmUxOWE3OTk2NmYzZmU2M2IyOTJlYjk4ZTdiMzAzNQ==", "commit": {"author": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1997-03-18T21:10:44Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1997-03-18T21:10:44Z"}, "message": "(if_then_else_cond): Call copy_rtx to prevent sharing.\n\nFrom-SVN: r13736", "tree": {"sha": "9a4d960c0cc46025f3f0265320a59e9178aa4fac", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9a4d960c0cc46025f3f0265320a59e9178aa4fac"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/987e845a7fe19a79966f3fe63b292eb98e7b3035", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/987e845a7fe19a79966f3fe63b292eb98e7b3035", "html_url": "https://github.com/Rust-GCC/gccrs/commit/987e845a7fe19a79966f3fe63b292eb98e7b3035", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/987e845a7fe19a79966f3fe63b292eb98e7b3035/comments", "author": null, "committer": null, "parents": [{"sha": "f75487ff658dfb9bff53d6520da3cc4ceeec3181", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f75487ff658dfb9bff53d6520da3cc4ceeec3181", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f75487ff658dfb9bff53d6520da3cc4ceeec3181"}], "stats": {"total": 8, "additions": 8, "deletions": 0}, "files": [{"sha": "2832871c963982ead1d09032f82cd447c345cf31", "filename": "gcc/combine.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/987e845a7fe19a79966f3fe63b292eb98e7b3035/gcc%2Fcombine.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/987e845a7fe19a79966f3fe63b292eb98e7b3035/gcc%2Fcombine.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcombine.c?ref=987e845a7fe19a79966f3fe63b292eb98e7b3035", "patch": "@@ -6512,6 +6512,14 @@ if_then_else_cond (x, ptrue, pfalse)\n       if ((cond0 != 0 || cond1 != 0)\n \t  && ! (cond0 != 0 && cond1 != 0 && ! rtx_equal_p (cond0, cond1)))\n \t{\n+\t  /* If if_then_else_cond returned zero, then true/false are the\n+\t     same rtl.  We must copy one of them to prevent invalid rtl\n+\t     sharing.  */\n+\t  if (cond0 == 0)\n+\t    true0 = copy_rtx (true0);\n+\t  else if (cond1 == 0)\n+\t    true1 = copy_rtx (true1);\n+\n \t  *ptrue = gen_binary (code, mode, true0, true1);\n \t  *pfalse = gen_binary (code, mode, false0, false1);\n \t  return cond0 ? cond0 : cond1;"}]}