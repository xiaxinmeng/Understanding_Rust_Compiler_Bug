{"sha": "5b68c389aacd4b75c191ab0b48b90f59faaa483f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWI2OGMzODlhYWNkNGI3NWMxOTFhYjBiNDhiOTBmNTlmYWFhNDgzZg==", "commit": {"author": {"name": "Alexandre Oliva", "email": "oliva@lsd.ic.unicamp.br", "date": "1999-12-08T10:27:54Z"}, "committer": {"name": "Alexandre Oliva", "email": "oliva@gcc.gnu.org", "date": "1999-12-08T10:27:54Z"}, "message": "configure.in: When target is sparc* and tm_file contains 64, test for 64bit support in assembler.\n\n* configure.in: When target is sparc* and tm_file contains 64,\ntest for 64bit support in assembler.  If not supported, remove\nsparc/t-sol2-64 from target-dependent Makefile fragments.\n(AS_SPARC64_FLAG): Define to the assembler flag for 64bit.\n(HAVE_AS_OFFSETABLE_LO10): Rework test to use these flags.\n(HAVE_AS_REGISTER_PSEUDO_OP): Use config.cache.\n* acconfig.h (AS_SPARC64_FLAG): Added.\n* configure, config.in: Rebuilt.\n* config/sparc/sol2-sld-64.h: Same as sol2.h, if without 64bit\nsupport.  Use AS_SPARC64_FLAG.\n\nFrom-SVN: r30827", "tree": {"sha": "5b4aecc60b6dc31591809aaa034036a54ac3051b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5b4aecc60b6dc31591809aaa034036a54ac3051b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5b68c389aacd4b75c191ab0b48b90f59faaa483f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5b68c389aacd4b75c191ab0b48b90f59faaa483f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5b68c389aacd4b75c191ab0b48b90f59faaa483f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5b68c389aacd4b75c191ab0b48b90f59faaa483f/comments", "author": null, "committer": null, "parents": [{"sha": "efe8d0acb4a541b4426a3392ba181beafb224112", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/efe8d0acb4a541b4426a3392ba181beafb224112", "html_url": "https://github.com/Rust-GCC/gccrs/commit/efe8d0acb4a541b4426a3392ba181beafb224112"}], "stats": {"total": 282, "additions": 203, "deletions": 79}, "files": [{"sha": "25ee68e4bd4fbdc5c15713ab01d36d9047d0ead7", "filename": "gcc/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b68c389aacd4b75c191ab0b48b90f59faaa483f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b68c389aacd4b75c191ab0b48b90f59faaa483f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5b68c389aacd4b75c191ab0b48b90f59faaa483f", "patch": "@@ -1,3 +1,16 @@\n+1999-12-08  Alexandre Oliva  <oliva@lsd.ic.unicamp.br>,  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* configure.in: When target is sparc* and tm_file contains 64,\n+\ttest for 64bit support in assembler.  If not supported, remove\n+\tsparc/t-sol2-64 from target-dependent Makefile fragments.\n+\t(AS_SPARC64_FLAG): Define to the assembler flag for 64bit.\n+\t(HAVE_AS_OFFSETABLE_LO10): Rework test to use these flags.\n+\t(HAVE_AS_REGISTER_PSEUDO_OP): Use config.cache.\n+\t* acconfig.h (AS_SPARC64_FLAG): Added.\n+\t* configure, config.in: Rebuilt.\n+\t* config/sparc/sol2-sld-64.h: Same as sol2.h, if without 64bit\n+\tsupport.  Use AS_SPARC64_FLAG.\n+\n 1999-12-07  Jakub Jelinek  <jakub@redhat.com>\n \n \t* config/sparc/sparc.c (hard_32bit_mode_classes): Mark registers"}, {"sha": "341d2557d3454a6bf27f4ce5e4ce90bd1b53f8a6", "filename": "gcc/acconfig.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b68c389aacd4b75c191ab0b48b90f59faaa483f/gcc%2Facconfig.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b68c389aacd4b75c191ab0b48b90f59faaa483f/gcc%2Facconfig.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Facconfig.h?ref=5b68c389aacd4b75c191ab0b48b90f59faaa483f", "patch": "@@ -33,6 +33,9 @@\n /* Define if your assembler supports .balign and .p2align.  */\n #undef HAVE_GAS_BALIGN_AND_P2ALIGN\n \n+/* Define if the assembler supports 64bit sparc.  */\n+#undef AS_SPARC64_FLAG\n+\n /* Define if your assembler supports offsetable %lo().  */\n #undef HAVE_AS_OFFSETABLE_LO10\n "}, {"sha": "3278c3c6208ab6083745c7ef6766548339214a48", "filename": "gcc/config.in", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b68c389aacd4b75c191ab0b48b90f59faaa483f/gcc%2Fconfig.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b68c389aacd4b75c191ab0b48b90f59faaa483f/gcc%2Fconfig.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.in?ref=5b68c389aacd4b75c191ab0b48b90f59faaa483f", "patch": "@@ -34,6 +34,9 @@\n /* Define if your assembler supports .balign and .p2align.  */\n #undef HAVE_GAS_BALIGN_AND_P2ALIGN\n \n+/* Define if the assembler supports 64bit sparc.  */\n+#undef AS_SPARC64_FLAG\n+\n /* Define if your assembler supports offsetable %lo().  */\n #undef HAVE_AS_OFFSETABLE_LO10\n "}, {"sha": "28a0a5e6818ab0ac7f4ff46d9a64008daa678520", "filename": "gcc/config/sparc/sol2-sld-64.h", "status": "modified", "additions": 12, "deletions": 5, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b68c389aacd4b75c191ab0b48b90f59faaa483f/gcc%2Fconfig%2Fsparc%2Fsol2-sld-64.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b68c389aacd4b75c191ab0b48b90f59faaa483f/gcc%2Fconfig%2Fsparc%2Fsol2-sld-64.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsol2-sld-64.h?ref=5b68c389aacd4b75c191ab0b48b90f59faaa483f", "patch": "@@ -1,10 +1,16 @@\n /* Definitions of target machine for GNU compiler, for 64-bit SPARC\n    running Solaris 2 using the system linker.  */\n \n+#ifdef AS_SPARC64_FLAG\n+\n #define SPARC_BI_ARCH\n \n+#endif\n+\n #include \"sparc/sol2.h\"\n \n+#ifdef AS_SPARC64_FLAG\n+\n /* At least up through Solaris 2.6,\n    the system linker does not work with DWARF or DWARF2,\n    since it does not have working support for relocations\n@@ -31,7 +37,7 @@\n #undef ASM_CPU32_DEFAULT_SPEC\n #define ASM_CPU32_DEFAULT_SPEC\t\"\"\n #undef ASM_CPU64_DEFAULT_SPEC\n-#define ASM_CPU64_DEFAULT_SPEC\t\"-xarch=v9\"\n+#define ASM_CPU64_DEFAULT_SPEC\tAS_SPARC64_FLAG\n \n #if TARGET_CPU_DEFAULT == TARGET_CPU_v9\n #undef CPP_CPU64_DEFAULT_SPEC\n@@ -45,7 +51,7 @@\n #undef ASM_CPU32_DEFAULT_SPEC\n #define ASM_CPU32_DEFAULT_SPEC \"-xarch=v8plusa\"\n #undef ASM_CPU64_DEFAULT_SPEC\n-#define ASM_CPU64_DEFAULT_SPEC \"-xarch=v9a\"\n+#define ASM_CPU64_DEFAULT_SPEC AS_SPARC64_FLAG \"a\"\n #endif\n \n /* The sun bundled assembler doesn't accept -Yd, (and neither does gas).\n@@ -84,9 +90,9 @@\n \n #undef ASM_CPU_SPEC\n #define ASM_CPU_SPEC \"\\\n-%{mcpu=ultrasparc:\" DEF_ARCH32_SPEC(\"-xarch=v8plusa\") DEF_ARCH64_SPEC(\"-xarch=v9a\") \"} \\\n-%{mcpu=v9:\" DEF_ARCH32_SPEC(\"-xarch=v8plus\") DEF_ARCH64_SPEC(\"-xarch=v9\") \"} \\\n-%{!mcpu=ultrasparc:%{!mcpu=v9:%{mcpu*:\" DEF_ARCH32_SPEC(\"-xarch=v8\") DEF_ARCH64_SPEC(\"-xarch=v9\") \"}}} \\\n+%{mcpu=ultrasparc:\" DEF_ARCH32_SPEC(\"-xarch=v8plusa\") DEF_ARCH64_SPEC(AS_SPARC64_FLAG \"a\") \"} \\\n+%{mcpu=v9:\" DEF_ARCH32_SPEC(\"-xarch=v8plus\") DEF_ARCH64_SPEC(AS_SPARC64_FLAG) \"} \\\n+%{!mcpu=ultrasparc:%{!mcpu=v9:%{mcpu*:\" DEF_ARCH32_SPEC(\"-xarch=v8\") DEF_ARCH64_SPEC(AS_SPARC64_FLAG) \"}}} \\\n %{!mcpu*:%(asm_cpu_default)} \\\n \"\n \n@@ -364,3 +370,4 @@ __enable_execute_stack (addr)\t\t\t\t\t\t\\\n     fprintf (FILE, \"\\n\");\t\t\t\t\t\t\\\n   } while (0)\n \n+#endif"}, {"sha": "4f4753c79fcd8c9e84877d017bd51c3dfd51ca7d", "filename": "gcc/configure", "status": "modified", "additions": 99, "deletions": 39, "changes": 138, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b68c389aacd4b75c191ab0b48b90f59faaa483f/gcc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b68c389aacd4b75c191ab0b48b90f59faaa483f/gcc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure?ref=5b68c389aacd4b75c191ab0b48b90f59faaa483f", "patch": "@@ -1337,7 +1337,7 @@ else\n fi\n \n # Find some useful tools\n-for ac_prog in gawk mawk nawk awk\n+for ac_prog in mawk gawk nawk awk\n do\n # Extract the first word of \"$ac_prog\", so it can be a program name with args.\n set dummy $ac_prog; ac_word=$2\n@@ -5990,7 +5990,7 @@ for machine in $build $host $target; do\n \t\txmake_file=sparc/x-sysv4\n \t\textra_parts=\"crt1.o crti.o crtn.o gcrt1.o gmon.o crtbegin.o crtend.o\"\n \t\tcase $machine in\n-\t\t*-*-solaris2.[0-6]*) ;;\n+\t\t*-*-solaris2.[0-6] | *-*-solaris2.[0-6].*) ;;\n \t\t*-*-solaris2*)\n \t\t\ttm_file=sparc/sol2-sld-64.h\n \t\t\ttmake_file=\"$tmake_file sparc/t-sol2-64\"\n@@ -8602,60 +8602,120 @@ case \"$target\" in\n   sparc*-*-*)\n     echo $ac_n \"checking assembler .register pseudo-op support\"\"... $ac_c\" 1>&6\n echo \"configure:8605: checking assembler .register pseudo-op support\" >&5\n-    gcc_cv_as_register_pseudo_op=\n-    if test x$gcc_cv_as != x; then\n-\t# Check if we have .register\n-\techo \".register %g2, #scratch\" > conftest.s\n-\tif $gcc_cv_as -o conftest.o conftest.s > /dev/null 2>&1; then\n+if eval \"test \\\"`echo '$''{'gcc_cv_as_register_pseudo_op'+set}'`\\\" = set\"; then\n+  echo $ac_n \"(cached) $ac_c\" 1>&6\n+else\n+  \n+\tgcc_cv_as_register_pseudo_op=unknown\n+\tif test x$gcc_cv_as != x; then\n+\t    # Check if we have .register\n+\t    echo \".register %g2, #scratch\" > conftest.s\n+\t    if $gcc_cv_as -o conftest.o conftest.s > /dev/null 2>&1; then\n \t\tgcc_cv_as_register_pseudo_op=yes\n-\t\tcat >> confdefs.h <<\\EOF\n+\t    else\n+\t\tgcc_cv_as_register_pseudo_op=no\n+\t    fi\n+\t    rm -f conftest.s conftest.o\n+\tfi\n+    \n+fi\n+\n+echo \"$ac_t\"\"$gcc_cv_as_register_pseudo_op\" 1>&6\n+    if test \"x$gcc_cv_as_register_pseudo_op\" = xyes; then\n+\tcat >> confdefs.h <<\\EOF\n #define HAVE_AS_REGISTER_PSEUDO_OP 1\n EOF\n \n-\tfi\n-\trm -f conftest.s conftest.o\n     fi\n-    echo \"$ac_t\"\"$gcc_cv_as_register_pseudo_op\" 1>&6\n \n-    echo $ac_n \"checking assembler offsetable %lo() support\"\"... $ac_c\" 1>&6\n-echo \"configure:8622: checking assembler offsetable %lo() support\" >&5\n-    gcc_cv_as_offsetable_lo10=\n-    if test x$gcc_cv_as != x; then\n-\t# Check if assembler has offsetable %lo()\n-\techo \"or %g1, %lo(ab) + 12, %g1\" > conftest.s\n-\techo \"or %g1, %lo(ab + 12), %g1\" > conftest1.s\n-\tgcc_cv_as_flags64=\"-xarch=v9\"\n-\tif $gcc_cv_as $gcc_cv_as_flags64 -o conftest.o conftest.s > /dev/null 2>&1; then\n-\t\t:\n-\telse\t      \n-\t\tgcc_cv_as_flags64=\"-64\"\n-\t\tif $gcc_cv_as $gcc_cv_as_flags64 -o conftest.o conftest.s > /dev/null 2>&1; then\n-\t\t\t:\n-\t\telse\t      \n-\t\t\tgcc_cv_as_flags64=\"\"\n+    case \"$tm_file\" in\n+    *64*)\n+\techo $ac_n \"checking for 64 bit support in assembler ($gcc_cv_as)\"\"... $ac_c\" 1>&6\n+echo \"configure:8635: checking for 64 bit support in assembler ($gcc_cv_as)\" >&5\n+if eval \"test \\\"`echo '$''{'gcc_cv_as_flags64'+set}'`\\\" = set\"; then\n+  echo $ac_n \"(cached) $ac_c\" 1>&6\n+else\n+  \n+\t\tif test -n \"$gcc_cv_as\"; then\n+\t\t    echo \".xword foo\" > conftest.s\n+\t\t    gcc_cv_as_flags64=no\n+\t\t    for flag in \"-xarch=v9\" \"64 -Av9\"; do\n+\t\t\tif $gcc_cv_as $flag -o conftest.o conftest.s \\\n+\t\t\t    > /dev/null 2>&1; then\n+\t\t\t    gcc_cv_as_flags64=$flag\n+\t\t\t    break\n+\t\t\tfi\n+\t\t    done\n+\t\t    rm -f conftest.s conftest.o\n+\t\telse\n+\t\t    if test \"$gas\" = yes; then\n+\t\t\tgcc_cv_as_flags64=\"-64 -Av9\"\n+\t\t    else\n+\t\t\tgcc_cv_as_flags64=\"-xarch=v9\"\n+\t\t    fi\n \t\tfi\n+\t\n+fi\n+\n+echo \"$ac_t\"\"$gcc_cv_as_flags64\" 1>&6\n+\tif test \"x$gcc_cv_as_flags64\" = xno; then\n+\n+\t    tmake_file=`echo \" $tmake_file \" | sed -e 's, sparc/t-sol2-64 , ,' -e 's,^ ,,' -e 's, $,,'`\n+\t    dep_tmake_file=`echo \" $dep_tmake_file \" | sed -e 's, [^ ]*/config/sparc/t-sol2-64 , ,' -e 's,^ ,,' -e 's, $,,'`\n+\n+\telse\n+\t    cat >> confdefs.h <<EOF\n+#define AS_SPARC64_FLAG \"$gcc_cv_as_flags64\"\n+EOF\n+\n \tfi\n-\tif test -n \"$gcc_cv_as_flags64\" ; then\n-\t\tif $gcc_cv_as $gcc_cv_as_flags64 -o conftest1.o conftest1.s > /dev/null 2>&1; then\n-\t\t\tif cmp conftest.o conftest1.o > /dev/null 2>&1; then\n-\t\t\t\t:\n-\t\t\telse\n-\t\t\t\tgcc_cv_as_offsetable_lo10=yes\n-\t\t\t\tcat >> confdefs.h <<\\EOF\n+\t;;\n+    *) gcc_cv_as_flags64=${gcc_cv_as_flags64-no}\n+\t;;\n+    esac\n+\n+    if test \"x$gcc_cv_as_flags64\" != xno; then\n+\techo $ac_n \"checking for assembler offsetable %lo() support\"\"... $ac_c\" 1>&6\n+echo \"configure:8680: checking for assembler offsetable %lo() support\" >&5\n+if eval \"test \\\"`echo '$''{'gcc_cv_as_offsetable_lo10'+set}'`\\\" = set\"; then\n+  echo $ac_n \"(cached) $ac_c\" 1>&6\n+else\n+  \n+\t    gcc_cv_as_offsetable_lo10=unknown\n+\t    if test \"x$gcc_cv_as\" != x; then\n+\t\t# Check if assembler has offsetable %lo()\n+\t\techo \"or %g1, %lo(ab) + 12, %g1\" > conftest.s\n+\t\techo \"or %g1, %lo(ab + 12), %g1\" > conftest1.s\n+\t\tif $gcc_cv_as $gcc_cv_as_flags64 -o conftest.o conftest.s \\\n+\t\t\t> /dev/null 2>&1 &&\n+\t\t   $gcc_cv_as $gcc_cv_as_flags64 -o conftest1.o conftest1.s \\\n+\t\t\t> /dev/null 2>&1; then\n+\t\t    if cmp conftest.o conftest1.o > /dev/null 2>&1; then\n+\t\t\tgcc_cv_as_offsetable_lo10=no\n+\t\t    else\n+\t\t\tgcc_cv_as_offsetable_lo10=yes\n+\t\t    fi\n+\t\telse\n+\t\t    gcc_cv_as_offsetable_lo10=no\n+\t\tfi\n+\t\trm -f conftest.s conftest.o conftest1.s conftest1.o\n+\t    fi\n+\t\n+fi\n+\n+echo \"$ac_t\"\"$gcc_cv_as_offsetable_lo10\" 1>&6\n+\tif test \"x$gcc_cv_as_offsetable_lo10\" = xyes; then\n+\t    cat >> confdefs.h <<\\EOF\n #define HAVE_AS_OFFSETABLE_LO10 1\n EOF\n \n-\t\t\tfi\n-\t\tfi\n \tfi\n-\trm -f conftest.s conftest.o conftest1.s conftest1.o\n     fi\n-    echo \"$ac_t\"\"$gcc_cv_as_offsetable_lo10\" 1>&6\n     ;;\n \n   i[34567]86-*-*)\n     echo $ac_n \"checking assembler instructions\"\"... $ac_c\" 1>&6\n-echo \"configure:8659: checking assembler instructions\" >&5\n+echo \"configure:8719: checking assembler instructions\" >&5\n     gcc_cv_as_instructions=\n     if test x$gcc_cv_as != x; then\n \tset \"filds fists\" \"filds mem; fists mem\""}, {"sha": "26a0a2bedc5df6a44a7fa2389bf3749e7c4cf3cf", "filename": "gcc/configure.in", "status": "modified", "additions": 73, "deletions": 35, "changes": 108, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b68c389aacd4b75c191ab0b48b90f59faaa483f/gcc%2Fconfigure.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b68c389aacd4b75c191ab0b48b90f59faaa483f/gcc%2Fconfigure.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure.in?ref=5b68c389aacd4b75c191ab0b48b90f59faaa483f", "patch": "@@ -3309,7 +3309,7 @@ changequote([,])dnl\n \t\textra_parts=\"crt1.o crti.o crtn.o gcrt1.o gmon.o crtbegin.o crtend.o\"\n \t\tcase $machine in\n changequote(,)dnl\n-\t\t*-*-solaris2.[0-6]*) ;;\n+\t\t*-*-solaris2.[0-6] | *-*-solaris2.[0-6].*) ;;\n changequote([,])dnl\n \t\t*-*-solaris2*)\n \t\t\ttm_file=sparc/sol2-sld-64.h\n@@ -4324,49 +4324,87 @@ AC_MSG_RESULT($gcc_cv_as_subsections)\n \n case \"$target\" in \n   sparc*-*-*)\n-    AC_MSG_CHECKING(assembler .register pseudo-op support)\n-    gcc_cv_as_register_pseudo_op=\n-    if test x$gcc_cv_as != x; then\n-\t# Check if we have .register\n-\techo \".register %g2, #scratch\" > conftest.s\n-\tif $gcc_cv_as -o conftest.o conftest.s > /dev/null 2>&1; then\n+    AC_CACHE_CHECK([assembler .register pseudo-op support],\n+\tgcc_cv_as_register_pseudo_op, [\n+\tgcc_cv_as_register_pseudo_op=unknown\n+\tif test x$gcc_cv_as != x; then\n+\t    # Check if we have .register\n+\t    echo \".register %g2, #scratch\" > conftest.s\n+\t    if $gcc_cv_as -o conftest.o conftest.s > /dev/null 2>&1; then\n \t\tgcc_cv_as_register_pseudo_op=yes\n-\t\tAC_DEFINE(HAVE_AS_REGISTER_PSEUDO_OP)\n+\t    else\n+\t\tgcc_cv_as_register_pseudo_op=no\n+\t    fi\n+\t    rm -f conftest.s conftest.o\n \tfi\n-\trm -f conftest.s conftest.o\n+    ])\n+    if test \"x$gcc_cv_as_register_pseudo_op\" = xyes; then\n+\tAC_DEFINE(HAVE_AS_REGISTER_PSEUDO_OP)\n     fi\n-    AC_MSG_RESULT($gcc_cv_as_register_pseudo_op)\n \n-    AC_MSG_CHECKING([assembler offsetable %lo() support])\n-    gcc_cv_as_offsetable_lo10=\n-    if test x$gcc_cv_as != x; then\n-\t# Check if assembler has offsetable %lo()\n-\techo \"or %g1, %lo(ab) + 12, %g1\" > conftest.s\n-\techo \"or %g1, %lo(ab + 12), %g1\" > conftest1.s\n-\tgcc_cv_as_flags64=\"-xarch=v9\"\n-\tif $gcc_cv_as $gcc_cv_as_flags64 -o conftest.o conftest.s > /dev/null 2>&1; then\n-\t\t:\n-\telse\t      \n-\t\tgcc_cv_as_flags64=\"-64\"\n-\t\tif $gcc_cv_as $gcc_cv_as_flags64 -o conftest.o conftest.s > /dev/null 2>&1; then\n-\t\t\t:\n-\t\telse\t      \n-\t\t\tgcc_cv_as_flags64=\"\"\n+    case \"$tm_file\" in\n+    *64*)\n+\tAC_CACHE_CHECK([for 64 bit support in assembler ($gcc_cv_as)],\n+\t    gcc_cv_as_flags64, [\n+\t\tif test -n \"$gcc_cv_as\"; then\n+\t\t    echo \".xword foo\" > conftest.s\n+\t\t    gcc_cv_as_flags64=no\n+\t\t    for flag in \"-xarch=v9\" \"64 -Av9\"; do\n+\t\t\tif $gcc_cv_as $flag -o conftest.o conftest.s \\\n+\t\t\t    > /dev/null 2>&1; then\n+\t\t\t    gcc_cv_as_flags64=$flag\n+\t\t\t    break\n+\t\t\tfi\n+\t\t    done\n+\t\t    rm -f conftest.s conftest.o\n+\t\telse\n+\t\t    if test \"$gas\" = yes; then\n+\t\t\tgcc_cv_as_flags64=\"-64 -Av9\"\n+\t\t    else\n+\t\t\tgcc_cv_as_flags64=\"-xarch=v9\"\n+\t\t    fi\n \t\tfi\n+\t])\n+\tif test \"x$gcc_cv_as_flags64\" = xno; then\n+changequote(, )\n+\t    tmake_file=`echo \" $tmake_file \" | sed -e 's, sparc/t-sol2-64 , ,' -e 's,^ ,,' -e 's, $,,'`\n+\t    dep_tmake_file=`echo \" $dep_tmake_file \" | sed -e 's, [^ ]*/config/sparc/t-sol2-64 , ,' -e 's,^ ,,' -e 's, $,,'`\n+changequote([, ])\n+\telse\n+\t    AC_DEFINE_UNQUOTED(AS_SPARC64_FLAG, \"$gcc_cv_as_flags64\")\n \tfi\n-\tif test -n \"$gcc_cv_as_flags64\" ; then\n-\t\tif $gcc_cv_as $gcc_cv_as_flags64 -o conftest1.o conftest1.s > /dev/null 2>&1; then\n-\t\t\tif cmp conftest.o conftest1.o > /dev/null 2>&1; then\n-\t\t\t\t:\n-\t\t\telse\n-\t\t\t\tgcc_cv_as_offsetable_lo10=yes\n-\t\t\t\tAC_DEFINE(HAVE_AS_OFFSETABLE_LO10)\n-\t\t\tfi\n+\t;;\n+    *) gcc_cv_as_flags64=${gcc_cv_as_flags64-no}\n+\t;;\n+    esac\n+\n+    if test \"x$gcc_cv_as_flags64\" != xno; then\n+\tAC_CACHE_CHECK([for assembler offsetable %lo() support],\n+\t    gcc_cv_as_offsetable_lo10, [\n+\t    gcc_cv_as_offsetable_lo10=unknown\n+\t    if test \"x$gcc_cv_as\" != x; then\n+\t\t# Check if assembler has offsetable %lo()\n+\t\techo \"or %g1, %lo(ab) + 12, %g1\" > conftest.s\n+\t\techo \"or %g1, %lo(ab + 12), %g1\" > conftest1.s\n+\t\tif $gcc_cv_as $gcc_cv_as_flags64 -o conftest.o conftest.s \\\n+\t\t\t> /dev/null 2>&1 &&\n+\t\t   $gcc_cv_as $gcc_cv_as_flags64 -o conftest1.o conftest1.s \\\n+\t\t\t> /dev/null 2>&1; then\n+\t\t    if cmp conftest.o conftest1.o > /dev/null 2>&1; then\n+\t\t\tgcc_cv_as_offsetable_lo10=no\n+\t\t    else\n+\t\t\tgcc_cv_as_offsetable_lo10=yes\n+\t\t    fi\n+\t\telse\n+\t\t    gcc_cv_as_offsetable_lo10=no\n \t\tfi\n+\t\trm -f conftest.s conftest.o conftest1.s conftest1.o\n+\t    fi\n+\t])\n+\tif test \"x$gcc_cv_as_offsetable_lo10\" = xyes; then\n+\t    AC_DEFINE(HAVE_AS_OFFSETABLE_LO10)\n \tfi\n-\trm -f conftest.s conftest.o conftest1.s conftest1.o\n     fi\n-    AC_MSG_RESULT($gcc_cv_as_offsetable_lo10)\n     ;;\n \n changequote(,)dnl"}]}