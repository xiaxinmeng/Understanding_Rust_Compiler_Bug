{"sha": "db3d4129b6f4cff685713da514b64ff7bbc401fc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGIzZDQxMjliNmY0Y2ZmNjg1NzEzZGE1MTRiNjRmZjdiYmM0MDFmYw==", "commit": {"author": {"name": "konglin1", "email": "lingling.kong@intel.com", "date": "2021-08-09T02:58:24Z"}, "committer": {"name": "liuhongt", "email": "hongtao.liu@intel.com", "date": "2021-08-25T06:35:34Z"}, "message": "i386: Fix _mm512_fpclass_ps_mask in O0 [PR 101471]\n\ngcc/ChangeLog:\n\n\tPR target/101471\n\t* config/i386/avx512dqintrin.h (_mm512_fpclass_ps_mask): Fix\n\tmacro define in O0.\n\t(_mm512_mask_fpclass_ps_mask): Ditto.\n\ngcc/testsuite/ChangeLog:\n\n\tPR target/101471\n\t* gcc.target/i386/avx512f-pr101471.c: New test.", "tree": {"sha": "1562cfac060ea28cb73ffe38ff053553b818a004", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1562cfac060ea28cb73ffe38ff053553b818a004"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/db3d4129b6f4cff685713da514b64ff7bbc401fc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/db3d4129b6f4cff685713da514b64ff7bbc401fc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/db3d4129b6f4cff685713da514b64ff7bbc401fc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/db3d4129b6f4cff685713da514b64ff7bbc401fc/comments", "author": {"login": "konglingling7", "id": 86399175, "node_id": "MDQ6VXNlcjg2Mzk5MTc1", "avatar_url": "https://avatars.githubusercontent.com/u/86399175?v=4", "gravatar_id": "", "url": "https://api.github.com/users/konglingling7", "html_url": "https://github.com/konglingling7", "followers_url": "https://api.github.com/users/konglingling7/followers", "following_url": "https://api.github.com/users/konglingling7/following{/other_user}", "gists_url": "https://api.github.com/users/konglingling7/gists{/gist_id}", "starred_url": "https://api.github.com/users/konglingling7/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/konglingling7/subscriptions", "organizations_url": "https://api.github.com/users/konglingling7/orgs", "repos_url": "https://api.github.com/users/konglingling7/repos", "events_url": "https://api.github.com/users/konglingling7/events{/privacy}", "received_events_url": "https://api.github.com/users/konglingling7/received_events", "type": "User", "site_admin": false}, "committer": {"login": "algebra84", "id": 22926165, "node_id": "MDQ6VXNlcjIyOTI2MTY1", "avatar_url": "https://avatars.githubusercontent.com/u/22926165?v=4", "gravatar_id": "", "url": "https://api.github.com/users/algebra84", "html_url": "https://github.com/algebra84", "followers_url": "https://api.github.com/users/algebra84/followers", "following_url": "https://api.github.com/users/algebra84/following{/other_user}", "gists_url": "https://api.github.com/users/algebra84/gists{/gist_id}", "starred_url": "https://api.github.com/users/algebra84/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/algebra84/subscriptions", "organizations_url": "https://api.github.com/users/algebra84/orgs", "repos_url": "https://api.github.com/users/algebra84/repos", "events_url": "https://api.github.com/users/algebra84/events{/privacy}", "received_events_url": "https://api.github.com/users/algebra84/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a20be0cdc068d9ffab7bf0c9d2a8702162746bd8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a20be0cdc068d9ffab7bf0c9d2a8702162746bd8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a20be0cdc068d9ffab7bf0c9d2a8702162746bd8"}], "stats": {"total": 22, "additions": 20, "deletions": 2}, "files": [{"sha": "9794f5d3e8b7548d54fa6bdba67704ce0c5bec74", "filename": "gcc/config/i386/avx512dqintrin.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db3d4129b6f4cff685713da514b64ff7bbc401fc/gcc%2Fconfig%2Fi386%2Favx512dqintrin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db3d4129b6f4cff685713da514b64ff7bbc401fc/gcc%2Fconfig%2Fi386%2Favx512dqintrin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Favx512dqintrin.h?ref=db3d4129b6f4cff685713da514b64ff7bbc401fc", "patch": "@@ -2814,15 +2814,15 @@ _mm512_fpclass_ps_mask (__m512 __A, const int __imm)\n \n #define _mm512_mask_fpclass_ps_mask(u, x, c)\t\t\t\t\\\n   ((__mmask16) __builtin_ia32_fpclassps512_mask ((__v16sf) (__m512) (x),\\\n-\t\t\t\t\t\t (int) (c),(__mmask8)(u)))\n+\t\t\t\t\t\t (int) (c),(__mmask16)(u)))\n \n #define _mm512_fpclass_pd_mask(X, C)                                    \\\n   ((__mmask8) __builtin_ia32_fpclasspd512_mask ((__v8df) (__m512d) (X), \\\n \t\t\t\t\t\t(int) (C), (__mmask8)-1))\n \n #define _mm512_fpclass_ps_mask(x, c)                                    \\\n   ((__mmask16) __builtin_ia32_fpclassps512_mask ((__v16sf) (__m512) (x),\\\n-\t\t\t\t\t\t (int) (c),(__mmask8)-1))\n+\t\t\t\t\t\t (int) (c),(__mmask16)-1))\n \n #define _mm_reduce_sd(A, B, C)\t\t\t\t\t\t\\\n   ((__m128d) __builtin_ia32_reducesd_mask ((__v2df)(__m128d)(A),\t\\"}, {"sha": "4a0057b241ee54999db841acbf1650355ec8119a", "filename": "gcc/testsuite/gcc.target/i386/avx512f-pr101471.c", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db3d4129b6f4cff685713da514b64ff7bbc401fc/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-pr101471.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db3d4129b6f4cff685713da514b64ff7bbc401fc/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-pr101471.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-pr101471.c?ref=db3d4129b6f4cff685713da514b64ff7bbc401fc", "patch": "@@ -0,0 +1,18 @@\n+/* { dg-do run } */\n+/* { dg-options \"-mavx512dq -O0\" } */\n+/* { dg-require-effective-target avx512dq } */\n+\n+#include \"avx512f-check.h\"\n+\n+static void\n+avx512f_test (void)\n+{\n+  __m512 x = {\n+      1, 1, 1, 1,\n+      1, 1, 1, 1,\n+      0, 0, 0, 0,\n+      0, 0, 0, 0,  };\n+  int ret = _mm512_fpclass_ps_mask(x, 0x26);\n+  if (ret != 65280)\n+    __builtin_abort();\n+}"}]}