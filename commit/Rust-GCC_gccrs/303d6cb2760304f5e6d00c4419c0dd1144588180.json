{"sha": "303d6cb2760304f5e6d00c4419c0dd1144588180", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzAzZDZjYjI3NjAzMDRmNWU2ZDAwYzQ0MTljMGRkMTE0NDU4ODE4MA==", "commit": {"author": {"name": "Mateusz B", "email": "mateuszb@poczta.onet.pl", "date": "2019-03-27T21:17:48Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2019-03-27T21:17:48Z"}, "message": "re PR target/85667 (ms_abi rules aren't followed when returning short structs with float values)\n\n\tPR target/85667\n\t* config/i386/i386.c (ix86_function_value_1): Call the newly added\n\tfunction for 32-bit MS_ABI.\n\t(function_value_ms_32): New function.\n\ntestsuite/ChangeLog:\n\n\tPR target/85667\n\t* gcc.target/i386/pr85667-5.c: New testcase.\n\t* gcc.target/i386/pr85667-6.c: New testcase.\n\nFrom-SVN: r269979", "tree": {"sha": "bb241da0b2073b44c617d71faa037ac4cd1cf537", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bb241da0b2073b44c617d71faa037ac4cd1cf537"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/303d6cb2760304f5e6d00c4419c0dd1144588180", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/303d6cb2760304f5e6d00c4419c0dd1144588180", "html_url": "https://github.com/Rust-GCC/gccrs/commit/303d6cb2760304f5e6d00c4419c0dd1144588180", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/303d6cb2760304f5e6d00c4419c0dd1144588180/comments", "author": null, "committer": null, "parents": [{"sha": "1509905e82c45228d431b41be32fe15fcb469393", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1509905e82c45228d431b41be32fe15fcb469393", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1509905e82c45228d431b41be32fe15fcb469393"}], "stats": {"total": 98, "additions": 95, "deletions": 3}, "files": [{"sha": "a4db0fcd904e6cbee2e4dd17de93b87e0e5bf46d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/303d6cb2760304f5e6d00c4419c0dd1144588180/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/303d6cb2760304f5e6d00c4419c0dd1144588180/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=303d6cb2760304f5e6d00c4419c0dd1144588180", "patch": "@@ -1,3 +1,10 @@\n+2019-03-27  Mateusz B  <mateuszb@poczta.onet.pl>\n+\n+\tPR target/85667\n+\t* config/i386/i386.c (ix86_function_value_1): Call the newly added\n+\tfunction for 32-bit MS_ABI.\n+\t(function_value_ms_32): New function.\n+\n 2019-03-27  Andrew Stubbs  <ams@codesourcery.com>\n \n \t* config/gcn/gcn.md (CC_SAVE_REG): New constant."}, {"sha": "c695fcdc32ff96139b2f0fbcca266e4e95413937", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 27, "deletions": 3, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/303d6cb2760304f5e6d00c4419c0dd1144588180/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/303d6cb2760304f5e6d00c4419c0dd1144588180/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=303d6cb2760304f5e6d00c4419c0dd1144588180", "patch": "@@ -9272,6 +9272,25 @@ function_value_64 (machine_mode orig_mode, machine_mode mode,\n   return ret;\n }\n \n+static rtx\n+function_value_ms_32 (machine_mode orig_mode, machine_mode mode,\n+\t\t      const_tree fntype, const_tree fn, const_tree valtype)\n+{\n+  unsigned int regno;\n+\n+  /* Floating point return values in %st(0)\n+     (unless -mno-fp-ret-in-387 or aggregate type of up to 8 bytes).  */\n+  if (X87_FLOAT_MODE_P (mode) && TARGET_FLOAT_RETURNS_IN_80387\n+\t   && (GET_MODE_SIZE (mode) > 8\n+\t       || valtype == NULL_TREE || !AGGREGATE_TYPE_P (valtype)))\n+  {\n+    regno = FIRST_FLOAT_REG;\n+    return gen_rtx_REG (orig_mode, regno);\n+  }\n+  else\n+    return function_value_32(orig_mode, mode, fntype,fn);\n+}\n+\n static rtx\n function_value_ms_64 (machine_mode orig_mode, machine_mode mode,\n \t\t      const_tree valtype)\n@@ -9317,9 +9336,14 @@ ix86_function_value_1 (const_tree valtype, const_tree fntype_or_decl,\n   if (fntype_or_decl && DECL_P (fntype_or_decl))\n     fn = fntype_or_decl;\n   fntype = fn ? TREE_TYPE (fn) : fntype_or_decl;\n-\n-  if (TARGET_64BIT && ix86_function_type_abi (fntype) == MS_ABI)\n-    return function_value_ms_64 (orig_mode, mode, valtype);\n+  \n+  if (ix86_function_type_abi (fntype) == MS_ABI)\n+    {\n+      if (TARGET_64BIT)\n+\treturn function_value_ms_64 (orig_mode, mode, valtype);\n+      else\n+\treturn function_value_ms_32 (orig_mode, mode, fntype, fn, valtype);\n+    }\n   else if (TARGET_64BIT)\n     return function_value_64 (orig_mode, mode, valtype);\n   else"}, {"sha": "97908fef01eb0e42c508cab2045e09ebef834ee0", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/303d6cb2760304f5e6d00c4419c0dd1144588180/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/303d6cb2760304f5e6d00c4419c0dd1144588180/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=303d6cb2760304f5e6d00c4419c0dd1144588180", "patch": "@@ -1,3 +1,9 @@\n+2019-03-27  Mateusz B  <mateuszb@poczta.onet.pl>\n+\n+\tPR target/85667\n+\t* gcc.target/i386/pr85667-5.c: New testcase.\n+\t* gcc.target/i386/pr85667-6.c: New testcase.\n+\n 2019-03-27  Bill Schmidt  <wschmidt@linux.ibm.com>\n \n \tPR testsuite/89834"}, {"sha": "3cf216282aafa0de64571f0f899796d79e817aba", "filename": "gcc/testsuite/gcc.target/i386/pr85667-5.c", "status": "added", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/303d6cb2760304f5e6d00c4419c0dd1144588180/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr85667-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/303d6cb2760304f5e6d00c4419c0dd1144588180/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr85667-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr85667-5.c?ref=303d6cb2760304f5e6d00c4419c0dd1144588180", "patch": "@@ -0,0 +1,33 @@\n+/* { dg-do run { target ia32 } } */\n+/* { dg-options \"-O2\" } */\n+\n+void abort (void);\n+\n+typedef struct\n+{\n+  float x;\n+} Float;\n+\n+Float __attribute__((ms_abi)) fn1 ()\n+{\n+  Float v;\n+  v.x = 3.145;\n+  return v;\n+}\n+\n+Float fn2 ()\n+{\n+  Float v;\n+  v.x = 3.145;\n+  return v;\n+}\n+\n+int main ()\n+{\n+  Float a, b;\n+  a = fn1 ();\n+  b = fn2 ();\n+  if (a.x == 3.145f && b.x == 3.145f)\n+    return 0;\n+  abort ();\n+}"}, {"sha": "5d2c66e7f97ce48ac81c633b37230dff9a595c77", "filename": "gcc/testsuite/gcc.target/i386/pr85667-6.c", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/303d6cb2760304f5e6d00c4419c0dd1144588180/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr85667-6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/303d6cb2760304f5e6d00c4419c0dd1144588180/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr85667-6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr85667-6.c?ref=303d6cb2760304f5e6d00c4419c0dd1144588180", "patch": "@@ -0,0 +1,22 @@\n+/* { dg-do compile { target ia32 } } */\n+/* { dg-options \"-O2\" } */\n+/* { dg-final { scan-assembler-times \"movl\\[^\\n\\r]*, %eax\" 1 } } */\n+/* { dg-final { scan-assembler-times \"flds\\[^\\n\\r]*\" 1 } } */\n+typedef struct\n+{\n+  float x;\n+} Float;\n+\n+Float __attribute__((ms_abi)) fn1 ()\n+{\n+  Float v;\n+  v.x = 3.145;\n+  return v;\n+}\n+\n+float __attribute__((ms_abi)) fn2 ()\n+{\n+  float v;\n+  v = 3.145;\n+  return v;\n+}"}]}