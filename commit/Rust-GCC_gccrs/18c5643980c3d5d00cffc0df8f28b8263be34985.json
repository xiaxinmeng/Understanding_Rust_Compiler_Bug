{"sha": "18c5643980c3d5d00cffc0df8f28b8263be34985", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MThjNTY0Mzk4MGMzZDVkMDBjZmZjMGRmOGYyOGI4MjYzYmUzNDk4NQ==", "commit": {"author": {"name": "Andreas Schwab", "email": "schwab@linux-m68k.org", "date": "2012-05-21T17:21:44Z"}, "committer": {"name": "Andreas Schwab", "email": "schwab@gcc.gnu.org", "date": "2012-05-21T17:21:44Z"}, "message": "expr.c (get_def_for_expr_class): Define only if HAVE_conditional_move.\n\n* expr.c (get_def_for_expr_class): Define only if\nHAVE_conditional_move.\n(convert_tree_comp_to_rtx): Likewise.\n\nFrom-SVN: r187727", "tree": {"sha": "3572f7fc9551d8041e36aa14be1f8a52286d8356", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3572f7fc9551d8041e36aa14be1f8a52286d8356"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/18c5643980c3d5d00cffc0df8f28b8263be34985", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/18c5643980c3d5d00cffc0df8f28b8263be34985", "html_url": "https://github.com/Rust-GCC/gccrs/commit/18c5643980c3d5d00cffc0df8f28b8263be34985", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/18c5643980c3d5d00cffc0df8f28b8263be34985/comments", "author": {"login": "andreas-schwab", "id": 2175493, "node_id": "MDQ6VXNlcjIxNzU0OTM=", "avatar_url": "https://avatars.githubusercontent.com/u/2175493?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andreas-schwab", "html_url": "https://github.com/andreas-schwab", "followers_url": "https://api.github.com/users/andreas-schwab/followers", "following_url": "https://api.github.com/users/andreas-schwab/following{/other_user}", "gists_url": "https://api.github.com/users/andreas-schwab/gists{/gist_id}", "starred_url": "https://api.github.com/users/andreas-schwab/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andreas-schwab/subscriptions", "organizations_url": "https://api.github.com/users/andreas-schwab/orgs", "repos_url": "https://api.github.com/users/andreas-schwab/repos", "events_url": "https://api.github.com/users/andreas-schwab/events{/privacy}", "received_events_url": "https://api.github.com/users/andreas-schwab/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "bbe9ae518072d74bd5c1d8c0b365d9037b0c9ecb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bbe9ae518072d74bd5c1d8c0b365d9037b0c9ecb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bbe9ae518072d74bd5c1d8c0b365d9037b0c9ecb"}], "stats": {"total": 10, "additions": 10, "deletions": 0}, "files": [{"sha": "e2f8892a1809686c3f06268a4d62c68b3c108742", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18c5643980c3d5d00cffc0df8f28b8263be34985/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18c5643980c3d5d00cffc0df8f28b8263be34985/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=18c5643980c3d5d00cffc0df8f28b8263be34985", "patch": "@@ -1,3 +1,9 @@\n+2012-05-21  Andreas Schwab  <schwab@linux-m68k.org>\n+\n+\t* expr.c (get_def_for_expr_class): Define only if\n+\tHAVE_conditional_move.\n+\t(convert_tree_comp_to_rtx): Likewise.\n+\n 2012-05-21  Uros Bizjak  <ubizjak@gmail.com>\n \n \tPR target/53399"}, {"sha": "e6def73e6e4fa2ccd966feb328a040a4842bcd1d", "filename": "gcc/expr.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18c5643980c3d5d00cffc0df8f28b8263be34985/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18c5643980c3d5d00cffc0df8f28b8263be34985/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=18c5643980c3d5d00cffc0df8f28b8263be34985", "patch": "@@ -2353,6 +2353,7 @@ get_def_for_expr (tree name, enum tree_code code)\n   return def_stmt;\n }\n \n+#ifdef HAVE_conditional_move\n /* Return the defining gimple statement for SSA_NAME NAME if it is an\n    assigment and the class of the expresion on the RHS is CLASS.  Return\n    NULL otherwise.  */\n@@ -2372,6 +2373,7 @@ get_def_for_expr_class (tree name, enum tree_code_class tclass)\n \n   return def_stmt;\n }\n+#endif\n \f\n \n /* Determine whether the LEN bytes generated by CONSTFUN can be\n@@ -7371,6 +7373,7 @@ highest_pow2_factor_for_target (const_tree target, const_tree exp)\n   return MAX (factor, talign);\n }\n \f\n+#ifdef HAVE_conditional_move\n /* Convert the tree comparision code TCODE to the rtl one where the\n    signedness is UNSIGNEDP.  */\n \n@@ -7428,6 +7431,7 @@ convert_tree_comp_to_rtx (enum tree_code tcode, int unsignedp)\n     }\n   return code;\n }\n+#endif\n \n /* Subroutine of expand_expr.  Expand the two operands of a binary\n    expression EXP0 and EXP1 placing the results in OP0 and OP1."}]}