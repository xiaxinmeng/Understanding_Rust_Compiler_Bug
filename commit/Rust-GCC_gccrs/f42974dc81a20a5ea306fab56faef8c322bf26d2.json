{"sha": "f42974dc81a20a5ea306fab56faef8c322bf26d2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjQyOTc0ZGM4MWEyMGE1ZWEzMDZmYWI1NmZhZWY4YzMyMmJmMjZkMg==", "commit": {"author": {"name": "Dean Wakerley", "email": "dean@wakerley.com", "date": "2001-05-11T22:10:54Z"}, "committer": {"name": "Gerald Pfeifer", "email": "gerald@gcc.gnu.org", "date": "2001-05-11T22:10:54Z"}, "message": "install.texi: New file.\n\n\t* doc/install.texi: New file. Converted to texinfo from the HTML\n\tdocumentation in wwwdocs/htdocs/install.\n\nFrom-SVN: r41977", "tree": {"sha": "f18dd158a2b61c1fcc163f80e25ab44911b840fa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f18dd158a2b61c1fcc163f80e25ab44911b840fa"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f42974dc81a20a5ea306fab56faef8c322bf26d2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f42974dc81a20a5ea306fab56faef8c322bf26d2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f42974dc81a20a5ea306fab56faef8c322bf26d2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f42974dc81a20a5ea306fab56faef8c322bf26d2/comments", "author": null, "committer": null, "parents": [{"sha": "8598a9a23232f91e55d76dab9800eefe5ab319cd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8598a9a23232f91e55d76dab9800eefe5ab319cd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8598a9a23232f91e55d76dab9800eefe5ab319cd"}], "stats": {"total": 1833, "additions": 1833, "deletions": 0}, "files": [{"sha": "8439d60c4daae18ff55a8129e5ff6e3875a1b447", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f42974dc81a20a5ea306fab56faef8c322bf26d2/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f42974dc81a20a5ea306fab56faef8c322bf26d2/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f42974dc81a20a5ea306fab56faef8c322bf26d2", "patch": "@@ -1,3 +1,8 @@\n+2001-05-12  Dean Wakerley  <dean@wakerley.com>\n+\n+\t* doc/install.texi: New file. Converted to texinfo from the HTML\n+\tdocumentation in wwwdocs/htdocs/install.\n+\n Fri May 11 15:50:13 2001  Jeffrey A Law  (law@cygnus.com)\n \n \t* gcse.c (insert_insn_end_bb): Do not search for assignments to\n@@ -1229,6 +1234,7 @@ Mon Apr 23 14:32:12 CEST 2001  Jan Hubicka  <jh@suse.cz>\n \n \t* reg-stack.c (emit_swap_insn): Do not get pass CALL_INSNs.\n \n+>>>>>>> 1.9986\n 2001-04-22  Mark Mitchell  <mark@codesourcery.com>\n \n \t* loop.c (loop_delete_insns): Add prototype."}, {"sha": "2904265545ba773663322611a96da4c8c386e2fc", "filename": "gcc/doc/install.texi", "status": "added", "additions": 1827, "deletions": 0, "changes": 1827, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f42974dc81a20a5ea306fab56faef8c322bf26d2/gcc%2Fdoc%2Finstall.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f42974dc81a20a5ea306fab56faef8c322bf26d2/gcc%2Fdoc%2Finstall.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finstall.texi?ref=f42974dc81a20a5ea306fab56faef8c322bf26d2", "patch": "@@ -0,0 +1,1827 @@\n+\\input texinfo.tex    @c -*-texinfo-*-\n+@c @ifnothtml\n+@c %**start of header\n+@setfilename install.info\n+@settitle Installing GCC\n+@setchapternewpage odd\n+@c %**end of header\n+@c @end ifnothtml\n+\n+@c Specify title for specific html page\n+@ifset indexhtml\n+@settitle Installing GCC\n+@end ifset\n+@ifset specifichtml\n+@settitle Host/Target specific installation notes for GCC\n+@end ifset\n+@ifset downloadhtml\n+@settitle Downloading GCC\n+@end ifset\n+@ifset configurehtml\n+@settitle Installing GCC: Configuration\n+@end ifset\n+@ifset buildhtml\n+@settitle Installing GCC: Building\n+@end ifset\n+@ifset testhtml\n+@settitle Installing GCC: Testing\n+@end ifset\n+@ifset finalinstallhtml\n+@settitle Installing GCC: Final installation\n+@end ifset\n+@ifset binarieshtml\n+@settitle Installing GCC: Binaries\n+@end ifset\n+\n+@comment $Id$\n+@c Copyright (C) 2001 Free Software Foundation, Inc.\n+@c *** Converted to texinfo by Dean Wakerley, dean@wakerley.com\n+\n+@c Include everything if we're not making html\n+@ifnothtml\n+@set indexhtml\n+@set specifichtml\n+@set downloadhtml\n+@set configurehtml\n+@set buildhtml\n+@set testhtml\n+@set finalinstallhtml\n+@set binarieshtml\n+@end ifnothtml\n+\n+@c Part 2 Summary Description and Copyright\n+@ifinfo\n+\n+Copyright @copyright{} 2001 Free Software Foundation, Inc.\n+@end ifinfo\n+\n+@c Part 3 Titlepage and Copyright\n+@titlepage\n+@sp 10\n+@comment The title is printed in a large font.\n+@center @titlefont{Sample Title}\n+\n+@c The following two commands start the copyright page.\n+@page\n+vskip 0pt plus 1filll\n+Copyright @copyright{} 2001 Free Software Foundation, Inc.\n+@end titlepage\n+\n+@c Part 4 Top node and Master Menu\n+@ifinfo\n+@node    Top, , , (dir)\n+@comment node-name, next,          Previous, up\n+\n+@menu\n+* Installing GCC::  This document describes the generic installation\n+                    procedure for GCC as well as detailing some target\n+                    specific installation instructions. \n+\n+* Specific::        Host/target specific installation notes for GCC.\n+* Binaries::        Where to get pre-compiled binaries.\n+\n+* Concept Index::   This index has two entries.\n+@end menu\n+@end ifinfo\n+\n+@c Part 5 The Body of the Document\n+@c ***Installing GCC**********************************************************\n+@ifinfo\n+@comment node-name,     next,          previous, up\n+@node    Installing GCC, Binaries, , Top\n+@end ifinfo\n+@ifset indexhtml\n+@html\n+<h1 align=\"center\">Installing GCC</h1>\n+@end html\n+@ifnothtml\n+@chapter Installing GCC\n+@end ifnothtml\n+\n+The latest version of this document is always available at\n+@uref{http://gcc.gnu.org/install/,,http://gcc.gnu.org/install/}. \n+\n+This document describes the generic installation procedure for GCC as well\n+as detailing some target specific installation instructions. \n+\n+GCC includes several components that previously were separate distributions \n+with their own installation instructions. This document supersedes all \n+package specific installation instructions. We provide the component \n+specific installation information in the source distribution for historical \n+reference purposes only. \n+\n+@emph{Before} starting the build/install procedure please check the \n+@ifnothtml\n+@xref{Specific, host/target specific installation notes}.\n+@end ifnothtml\n+@ifnotinfo\n+@uref{specific.html,,host/target specific installation notes}. \n+@end ifnotinfo\n+We recommend you browse the entire generic installation instructions before \n+you proceed.\n+\n+The installation procedure itself is broken into five steps. \n+\n+@ifinfo\n+@menu\n+* Downloading the source::\n+* Configuration::\n+* Building::\n+* Testing:: (optional)\n+* Final install::\n+@end menu\n+@end ifinfo\n+@ifnotinfo\n+@enumerate\n+@item \n+@uref{download.html,,Downloading the source}\n+@item \n+@uref{configure.html,,Configuration} \n+@item\n+@uref{build.html,,Building} \n+@item \n+@uref{test.html,,Testing} (optional) \n+@item\n+@uref{finalinstall.html,,Final install}\n+@end enumerate\n+@end ifnotinfo\n+\n+Please note that GCC does not support `@code{make uninstall}' and probably\n+won't do so in the near future as this would open a can of worms. Instead, \n+we suggest that you install GCC into a directory of its own and simply\n+remove that directory when you do not need that specific version of GCC any longer. \n+\n+@html\n+<hr>\n+<p>\n+@end html\n+@ifhtml\n+@uref{./index.html,,Return to the GCC Installation page}\n+@end ifhtml\n+@end ifset\n+\n+@c ***Downloading the source**************************************************\n+@ifinfo\n+@comment node-name,     next,          previous, up\n+@node    Downloading the source, Configuration, , Installing GCC\n+@end ifinfo\n+@ifset downloadhtml\n+@html\n+<h1 align=\"center\">Downloading GCC</h1>\n+@end html\n+@ifnothtml\n+@chapter Downloading GCC\n+@end ifnothtml\n+@cindex Downloading GCC\n+@cindex Downloading the Source\n+\n+GCC is distributed via CVS and FTP tarballs compressed with gzip or\n+bzip2. It is possible to download a full distribution or specific\n+components.\n+\n+Please refer to our @uref{http://gcc.gnu.org/releases.html,,releases web page}\n+for information on how to obtain GCC.\n+\n+The full distribution includes the C, C++, Objective-C, Fortran, Java,\n+and Chill compilers.  The full distribution also includes runtime libraries\n+for C++, Objective-C and Fortran.  In the future the GNU compiler testsuites\n+will be included in the full distribution.\n+\n+If you choose to download specific components, you must download the core\n+gcc distribution plus any language specific distributions you wish to\n+use.  The core distribution includes the C language front-end as well as the\n+shared components. Each language has a tarball which includes the language\n+front-end as well as the language runtime (when appropriate).\n+\n+Unpack the core distribution as well as any language specific\n+distributions in the same directory.\n+\n+If you also intend to build binutils (either to upgrade an existing\n+installation or for use in place of the corresponding tools of your\n+OS), unpack the binutils distribution either in the same directory or\n+a separate one.  In the latter case, add symbolic links to any\n+components of the binutils you intend to build alongside the compiler\n+(bfd, binutils, gas, gprof, ld, opcodes,...) to the directory containing\n+the GCC sources.\n+\n+@html\n+<hr>\n+<p>\n+@end html\n+@ifhtml\n+@uref{./index.html,,Return to the GCC Installation page}\n+@end ifhtml\n+@end ifset\n+\n+@c ***Configuration***********************************************************\n+@ifinfo\n+@comment node-name,     next,          previous, up\n+@node    Configuration, Building, Downloading the source, Installing GCC\n+@end ifinfo\n+@ifset configurehtml\n+@html\n+<h1 align=\"center\">Installing GCC: Configuration</h1>\n+@end html\n+@ifnothtml\n+@chapter Installing GCC: Configuration\n+@end ifnothtml\n+@cindex Configuration\n+@cindex Installing GCC: Configuration\n+\n+Like most GNU software, GCC must be configured before it can be built.\n+This document describes the recommended configuration procedure\n+for both native and cross targets.\n+\n+We use @emph{srcdir} to refer to the toplevel source directory for\n+GCC; we use @emph{objdir} to refer to the toplevel build/object directory.\n+\n+First, we @strong{highly} recommend that GCC be built into a\n+separate directory than the sources which does @strong{not} reside\n+within the source tree.  This is how we generally build GCC; building\n+where @emph{srcdir} == @emph{objdir} should still work, but doesn't\n+get extensive testing; building where @emph{objdir} is a subdirectory\n+of @emph{srcdir} is unsupported.\n+\n+Second, when configuring a native system, either ``@command{cc}'' or \n+``@command{gcc}'' must be in your path or you must set CC in your \n+environment before running configure.\n+Otherwise the configuration scripts may fail.\n+\n+To configure GCC:\n+\n+@example\n+   % mkdir @emph{objdir}\n+   % cd @emph{objdir}\n+   % @emph{srcdir}/configure @strong{[target] [options]}\n+@end example\n+\n+\n+@strong{target specification}\n+@itemize @bullet\n+@item\n+GCC has code to correctly determine the correct value for @strong{target}\n+for nearly all native systems.  Therefore, we highly recommend you not \n+provide a configure target when configuring a native compiler.\n+\n+@item\n+@strong{target} must be specified as @option{--target=}@emph{target}\n+when configuring a cross compiler; examples of valid targets would be \n+i960-rtems, m68k-coff, sh-elf, etc.\n+\n+@item\n+Specifying just @strong{target} instead of @option{--target=}@emph{target}\n+implies that the host defaults to @strong{target}.\n+@end itemize\n+\n+\n+@strong{options specification}\n+\n+Use @strong{options} to override several configure time options for\n+GCC.  A partial list of supported @option{options}:\n+\n+@itemize @bullet\n+@item\n+@option{--prefix=}@emph{dirname} @minus{}@minus{} Specify the toplevel installation\n+directory.  This is the recommended way to install the tools into a directory\n+other than the default.  The toplevel installation directory defaults to\n+@code{/usr/local}.\n+\n+We @strong{highly} recommend against @emph{dirname} being the same or a\n+subdirectory of @emph{objdir} or vice versa.\n+\n+These additional options control where certain parts of the distribution\n+are installed.  Normally you should not need to use these options.\n+@itemize @bullet\n+@item\n+@option{--with-local-prefix=}@emph{dirname} @minus{}@minus{} Specify the installation\n+directory for local include files.  The default is @code{/usr/local}.\n+\n+@item\n+@option{--with-gxx-include-dir=}@emph{dirname} @minus{}@minus{} Specify the installation\n+directory for g++ header files.  The default is @command{/usr/local/include/g++}.\n+  \n+@end itemize\n+\n+@item\n+@option{--enable-shared} @minus{}@minus{} Build shared versions of the C++ runtime\n+libraries if supported. This is the default on most systems. Use @option{--disable-shared} \n+for static libraries. Note that up to the gcc version 2.95.x series, static\n+libraries were the default on all systems.\n+\n+@item\n+@option{--with-gnu-as} @minus{}@minus{} Specify that the compiler should assume that the\n+assembler it finds is the GNU assembler. However, this does not modify the rules to find an\n+assembler and will result in confusion if found assembler is not actually the GNU assembler.\n+If you have more than one assembler installed on your system, you may want to use this option\n+in connection with @option{--with-as=/path/to/gas}.\n+\n+@item\n+@option{--with-as=@emph{/path/to/as}} @minus{}@minus{} Specify that the compiler should use the\n+assembler pointed to by @emph{pathname}, rather than the one found by the standard rules to\n+find an assembler, which are:\n+@itemize @bullet\n+@item\n+Check the @emph{$exec_prefix/lib/gcc-lib/$target/$version} directory, where @emph{$exec_prefix}\n+defaults to @emph{$prefix} which defaults to @file{/usr/local} unless overridden by the \n+@option{--prefix=/pathname} switch described above. @emph{$target} is the target system triple, \n+such as @emph{sparc-sun-solaris2.7}, and @emph{$version} denotes the GCC version, such as 2.95.2.\n+@item\n+Check operating system specific directories (e.g. @file{/usr/ccs/bin} on Sun Solaris).\n+@end itemize\n+Note that these rules do not check for the value of @emph{$PATH}. You may want to use \n+@option{--with-as} if no assembler is installed in the directories listed above, or if you have\n+multiple assemblers installed and want to choose one that is not found by the above rules.\n+\n+@item\n+@option{--with-gnu-ld} @minus{}@minus{} Same as @option{--with-gnu-as} but for linker. \n+\n+@item\n+@option{--with-ld=@emph{/path/to/ld}} @minus{}@minus{} Same as @option{--with-as}, but for the\n+linker.\n+\n+@item\n+@option{--with-stabs} @minus{}@minus{} Specify that stabs debugging information should be used\n+instead of whatever format the host normally uses.  Normally GCC uses the\n+same debug format as the host system. \n+\n+@item\n+@option{--enable-multilib} @minus{}@minus{} Specify that multiple target libraries\n+should be built to support different target variants, calling conventions,\n+etc.  This is the default. \n+\n+@item\n+@option{--enable-threads} @minus{}@minus{} Specify that the target supports threads.\n+This affects the Objective-C compiler and runtime library, and exception\n+handling for other languages like C++ and Java.\n+\n+@item\n+@option{--enable-threads=}@emph{lib} @minus{}@minus{} Specify that @emph{lib} is the thread\n+support library.  This affects the Objective-C compiler and runtime library,\n+and exception handling for other languages like C++ and Java.\n+\n+@item\n+@option{--with-cpu=}@emph{cpu} @minus{}@minus{} Specify which cpu variant the\n+compiler should generate code for by default.  This is currently\n+only supported on the some ports, specifically arm, powerpc, and\n+SPARC. If configure does not recognize the model name (e.g. arm700,\n+603e, or ultrasparc) you provide, please check the configure script\n+for a complete list of supported models.\n+\n+@item\n+@option{--enable-target-optspace} @minus{}@minus{} Specify that target libraries\n+should  be optimized for code space instead of code speed.  This is the\n+default for the m32r platform.\n+\n+@item\n+@option{--enable-cpp} @minus{}@minus{} Specify that a shell script which emulates\n+traditional cpp functionality should be installed.\n+\n+@item\n+@option{--enable-cpplib} @minus{}@minus{} Specify that the functionality of\n+CPP should be integrated into the compiler itself.  This option is\n+not supported by snapshots since November 2000.  In snapshots where\n+it is supported, it is not enabled by default, except for snapshots\n+very close to November 2000.\n+\n+@item\n+@option{--without-fast-fixincludes} @minus{}@minus{} Specify that the old, slower\n+method of fixing the system header files should be used. \n+EGCS 1.1.x and older releases default to the slow version. GCC 2.95 and\n+newer releases will default to the fast version.\n+\n+@item\n+@option{--enable-version-specific-runtime-libs} @minus{}@minus{} Specify that runtime\n+libraries should be installed in the compiler specific subdirectory\n+(@option{$@{libsubdir@}}) rather than the usual places.\n+In addition, libstdc++'s include files will be installed in\n+@option{$@{libsubdir@}/include/g++} unless you overruled it by using\n+@option{--with-gxx-include-dir=}@emph{dirname}.\n+Using this option is particularly useful if you intend to use several\n+versions of GCC in parallel. This is currently supported by @option{libf2c}\n+and @option{libstdc++}.\n+\n+@item\n+@option{--enable-languages=}@emph{lang1}@option{,}@emph{lang2}@option{,...}\n+@minus{}@minus{} Specify that only a particular subset of compilers and their runtime libraries\n+should be built. For a list of valid values for @emph{lang}@option{x} you can issue\n+the following command in the @option{gcc} directory of your GCC source tree:@*\n+@command{grep language= */config-lang.in}@*\n+Currently, you can use any of the following: @code{c++}, @code{f77}, @code{java} and @code{objc}.\n+@code{CHILL} is not currently maintained, and will almost\n+certainly fail to compile.  Note that this switch does not work with\n+EGCS 1.1.2 or older versions of egcs.  It is supported in GCC 2.95\n+and newer versions.@*\n+If you do not pass this flag, all languages available in the @code{gcc} sub-tree\n+will be configured.  Re-defining LANGUAGES when calling @command{make bootstrap}\n+@strong{*does not*} work anymore, as those language sub-directories might not have been\n+configured!\n+\n+@item\n+@option{--disable-libgcj} @minus{}@minus{} Specify that the run-time libraries\n+used by GCJ should not be built.  This is useful in case you intend\n+to use GCJ with some other run-time, or you're going to install it\n+separately, or it just happens not to build on your particular\n+machine.  In general, if the Java front-end is enabled, the GCJ\n+libraries will be enabled too, unless they're known to not work on\n+the target platform.  If GCJ is enabled but libgcj isn't built, you\n+may need to port it; in this case, before modifying the top-level\n+configure.in so that libgcj is enabled by default on this platform,\n+you may use @option{--enable-libgcj} to override the default.\n+\n+@item\n+@option{--with-dwarf2} @minus{}@minus{} Specify that the compiler should use DWARF2\n+debugging information as the default.\n+@end itemize\n+\n+Some options which only apply to building cross compilers:\n+@itemize @bullet\n+@item\n+@option{--with-headers=}@emph{dir} @minus{}@minus{} Specifies a directory which has\n+target include files.\n+@emph{This options is required} when building a cross\n+compiler, if @code{$@{prefix@}/$@{target@}/sys-include} doesn't pre-exist.\n+These include files will be copied into the @code{gcc} install directory.\n+Fixincludes will be run on these files to make them compatible with @command{gcc}.\n+@item\n+@option{--with-libs=}@emph{``dir1 dir2 ... dirN''} @minus{}@minus{} Specifies a list of\n+directories which contain the target runtime libraries.  These libraries will\n+be copied into the @code{gcc} install directory.\n+@item\n+@option{--with-newlib} @minus{}@minus{} Specifies that ``newlib'' is being used as the target\n+C library.   This causes @code{__eprintf} to be omitted from libgcc.a on the\n+assumption that it will be provided by newlib.\n+@end itemize\n+ \n+Note that each @option{--enable} option has a corresponding @option{--disable} option and\n+that each @option{--with} option has a corresponding @option{--without} option.\n+\n+@html\n+<hr>\n+<p>\n+@end html\n+@ifhtml\n+@uref{./index.html,,Return to the GCC Installation page}\n+@end ifhtml\n+@end ifset\n+\n+@c ***Building****************************************************************\n+@ifinfo\n+@comment node-name,     next,          previous, up\n+@node    Building, Testing, Configuration, Installing GCC\n+@end ifinfo\n+@ifset buildhtml\n+@html\n+<h1 align=\"center\">Installing GCC: Building</h1>\n+@end html\n+@ifnothtml\n+@chapter Building\n+@end ifnothtml\n+@cindex Installing GCC: Building\n+\n+Now that GCC is configured, you are ready to build the compiler and\n+runtime libraries.\n+\n+We @strong{highly} recommend that GCC be built using GNU make;\n+other versions may work, then again they might not.\n+\n+(For example, many broken versions of make will fail if you use the\n+recommended setup where @emph{objdir} is different from @emph{srcdir}.)\n+\n+\n+@section Building a native compiler\n+\n+For a native build issue the command `@code{make bootstrap}'.  This \n+will build the entire GCC system, which includes the following steps:\n+\n+@itemize @bullet\n+@item\n+Build host tools necessary to build the compiler such as texinfo, bison,\n+gperf.\n+\n+@item\n+Build target tools for use by the compiler such as binutils (bfd,\n+binutils, gas, gprof, ld, and opcodes)@*\n+if they have been individually linked \n+or moved into the top level GCC source tree before configuring.\n+\n+@item\n+Perform a 3-stage bootstrap of the compiler.\n+\n+@item\n+Perform a comparison test of the stage2 and stage3 compilers.\n+\n+@item\n+Build runtime libraries using the stage3 compiler from the previous step.\n+ \n+@end itemize\n+\n+If you are short on disk space you might consider `@code{make\n+bootstrap-lean}' instead.  This is identical to `@code{make\n+bootstrap}' except that object files from the stage1 and\n+stage2 of the 3-stage bootstrap of the compiler are deleted as\n+soon as they are no longer needed.\n+\n+\n+If you want to save additional space during the bootstrap and in\n+the final installation as well, you can build the compiler binaries\n+without debugging information with ``@code{make CFLAGS='-O' LIBCFLAGS='-g\n+-O2' LIBCXXFLAGS='-g -O2 -fno-implicit-templates' bootstrap}''.  This will save\n+roughly 40% of disk space both for the bootstrap and the final installation.\n+(Libraries will still contain debugging information.)\n+\n+If you used the flag @code{--enable-languages=...} to restrict\n+the compilers to be built, only those you've actually enabled will be\n+built. This will of course only build those runtime libraries, for\n+which the particular compiler has been built.  Please note,\n+that re-defining LANGUAGES when calling `@code{make bootstrap}'\n+@strong{*does not*} work anymore!\n+\n+\n+@section Building a cross compiler\n+\n+We recommend reading the\n+@uref{http://www.objsw.com/CrossGCC/,,crossgcc FAQ}\n+for information about building cross compilers.\n+\n+When building a cross compiler, it is not generally possible to do a\n+3-stage bootstrap of the compiler.  This makes for an interesting problem\n+as parts of GCC can only be built with GCC.\n+\n+To build a cross compiler, we first recommend building and installing a\n+native compiler.  You can then use the native GCC compiler to build the\n+cross compiler.\n+\n+Assuming you have already installed a native copy of GCC and configured\n+your cross compiler, issue the command `@code{make}', which performs the\n+following steps:\n+\n+@itemize @bullet\n+@item\n+Build host tools necessary to build the compiler such as texinfo, bison,\n+gperf.\n+\n+@item\n+Build target tools for use by the compiler such as binutils (bfd,\n+binutils, gas, gprof, ld, and opcodes)\n+if they have been individually linked or moved into the top level GCC source\n+tree before configuring.\n+\n+@item\n+Build the compiler (single stage only).\n+\n+@item\n+Build runtime libraries using the compiler from the previous step.\n+@end itemize\n+\n+Note that if an error occurs in any step the make process will exit.\n+\n+@section Building in parallel\n+\n+If you have a multiprocessor system you can use `@code{make bootstrap\n+MAKE=\"make -j 2\" -j 2}' or just `@code{make -j 2 bootstrap}'\n+for GNU Make 3.79 and above instead of just `@code{make bootstrap}'\n+when building GCC.  You can use a bigger number instead of two if\n+you like.  In most cases, it won't help to use a number bigger than\n+the number of processors in your machine.\n+\n+@html\n+<hr>\n+<p>\n+@end html\n+@ifhtml\n+@uref{./index.html,,Return to the GCC Installation page}\n+@end ifhtml\n+@end ifset\n+\n+@c ***Testing*****************************************************************\n+@ifinfo\n+@comment node-name,     next,          previous, up\n+@node    Testing, Final install, Building, Installing GCC\n+@end ifinfo\n+@ifset testhtml\n+@html\n+<h1 align=\"center\">Installing GCC: Testing</h1>\n+@end html\n+@ifnothtml\n+@chapter Installing GCC: Testing\n+@end ifnothtml\n+@cindex Testing\n+@cindex Installing GCC: Testing\n+@cindex Testsuite\n+\n+@strong{Please note that this is only applicable \n+to current development versions of GCC and GCC 3.0 or later. \n+GCC 2.95.x does not come with a testsuite.}\n+\n+Before you install GCC, you might wish to run the testsuite. This\n+step is optional and may require you to download additional software.\n+\n+First, you must have @uref{download.html,,downloaded the testsuites}. \n+The full distribution contains testsuites; only if you downloaded the \n+``core'' compiler plus any front ends, you do not have the testsuites.\n+\n+Second, you must have a @uref{http://www.gnu.org/software/dejagnu/,,current version of DejaGnu} installed;\n+dejagnu 1.3 is not sufficient.\n+\n+Now you may need specific preparations:\n+\n+@itemize @bullet\n+@item\n+In order to run the libio tests on targets which do not fully\n+support Unix/POSIX commands (e.g. Cygwin), the references to the dbz\n+directory have to be deleted from @code{libio/configure.in}.\n+\n+@item\n+The following environment variables must be set appropriately, as in\n+the following example (which assumes that DejaGnu has been installed\n+under @code{/usr/local}):\n+\n+@example\n+     TCL_LIBRARY = /usr/local/share/tcl8.0\n+     DEJAGNULIBS = /usr/local/share/dejagnu\n+@end example\n+\n+On systems such as Cygwin, these paths are required to be actual\n+paths, not mounts or links; presumably this is due to some lack of\n+portability in the DejaGnu code.\n+\n+@end itemize\n+\n+Finally, you can run the testsuite (which may take a long time):\n+@example\n+     cd @emph{objdir}; make -k check\n+@end example\n+\n+The testing process will try to test as many components in the GCC\n+distribution as possible, including the C, C++ and Fortran compilers as\n+well as the C++ runtime libraries.\n+\n+@section How can I run the test suite on selected tests?\n+\n+As a first possibility to cut down the number of tests that are run it is\n+possible to use `@code{make check-gcc}' or `@code{make check-g++}'\n+in the gcc subdirectory of the object directory. To further cut down the\n+tests the following is possible:\n+\n+@example\n+    make check-gcc RUNTESTFLAGS=\"execute.exp <other options>\"\n+@end example\n+\n+This will run all gcc execute tests in the testsuite.\n+\n+@example\n+    make check-g++ RUNTESTFLAGS=\"old-deja.exp=9805* <other options>\"\n+@end example\n+\n+This will run the g++ \"old-deja\" tests in the testsuite where the filename\n+matches 9805*.\n+\n+The *.exp files are located in the testsuite directories of the GCC\n+source, the most important ones being compile.exp, execute.exp, dg.exp\n+and old-deja.exp. To get a list of the possible *.exp files, pipe the\n+output of `@code{make check}' into a file and look at the\n+\"@code{Running ...  .exp}\" lines.\n+\n+@section How to interpret test results\n+\n+After the testsuite has run you'll find various *.sum and *.log\n+files in the testsuite subdirectories. The *.log files contain a\n+detailed log of the compiler invocations and the corresponding\n+results, the *.sum files summarize the results. These summaries list\n+all the tests that have been run with a corresponding status code:\n+\n+@itemize @bullet\n+@item\n+PASS: the test passed as expected\n+@item\n+XPASS: the test unexpectedly passed\n+@item\n+FAIL: the test unexpectedly failed\n+@item\n+XFAIL: the test failed as expected\n+@item\n+UNSUPPORTED: the test is not supported on this platform\n+@item\n+ERROR: the testsuite detected an error\n+@item\n+WARNING: the testsuite detected a possible problem\n+@end itemize\n+\n+It is normal for some tests to report unexpected failures.  At the current time \n+our testing harness does not allow fine grained control over whether or not a \n+test is expected to fail.  We expect to fix this problem in future releases.\n+\n+\n+@section Submitting test results\n+\n+If you want to report the results to the GCC project, use the\n+@code{contrib/test_summary} shell script. Start it in the @emph{objdir} with\n+\n+@example\n+    @emph{srcdir}/contrib/test_summary -p your_commentary.txt -m gcc-testresults@@gcc.gnu.org |sh\n+@end example\n+\n+This script uses the @code{Mail} program to send the results, so\n+make sure it is in your @env{PATH}. The file @file{your_commentary.txt} is\n+prepended to the testsuite summary and should contain any special\n+remarks you have on your results or your build environment. Please\n+do not edit the testsuite result block or the subject line, as these\n+messages are automatically parsed and presented at the \n+@uref{http://gcc.gnu.org/testresults/,,GCC testresults} web\n+page.  Here you can also gather information on how specific tests\n+behave on different platforms and compare them with your results. A\n+few failing testcases are possible even on released versions and you\n+should look here first if you think your results are unreasonable.\n+\n+@end ifset\n+\n+@c ***Final install***********************************************************\n+@ifinfo\n+@comment node-name,     next,          previous, up\n+@node    Final install, , Testing, Installing GCC\n+@end ifinfo\n+@ifset finalinstallhtml\n+@html\n+<h1 align=\"center\">Installing GCC: Final installation</h1>\n+@end html\n+@ifnothtml\n+@chapter Installing GCC: Final installation\n+@end ifnothtml\n+\n+Now that GCC has been built and tested, you can install it with\n+`@command{cd @emph{objdir}; make install}' for a native compiler or\n+`@command{cd @emph{objdir}; make install LANGUAGES=\"c c++\"}' for \n+a cross compiler (note installing cross compilers will be easier in the \n+next release!).\n+\n+That step completes the installation of GCC; user level binaries can\n+be found in @code{@emph{prefix}/bin} where @code{@emph{prefix}} is the value you specified\n+with the @option{--prefix} to configure (or @file{/usr/local} by default).\n+\n+If you don't mind, please quickly review the \n+@uref{http://gcc.gnu.org/gcc-2.95/buildstat.html,,build status page}.\n+If your system is not listed, send a note to\n+@uref{mailto:gcc@@gcc.gnu.org,,gcc@@gcc.gnu.org} indicating\n+that you successfully built and installed GCC.\n+\n+Include the output from running @code{@emph{srcdir}/config.guess}.  (Do not\n+send us the config.guess file itself, just the output from running\n+it!)\n+\n+If you find a bug, please report it following our\n+@uref{../bugs.html,,bug reporting guidelines}.\n+\n+@html\n+<hr>\n+<p>\n+@end html\n+@ifhtml\n+@uref{./index.html,,Return to the GCC Installation page}\n+@end ifhtml\n+@end ifset\n+\n+@c ***Binaries****************************************************************\n+@ifinfo\n+@comment node-name,     next,          previous, up\n+@node    Binaries, Specific, Installing GCC, Top\n+@end ifinfo\n+@ifset binarieshtml\n+@html\n+<h1 align=\"center\">Installing GCC: Binaries</h1>\n+@end html\n+@ifnothtml\n+@chapter Installing GCC: Binaries\n+@end ifnothtml\n+@cindex Binaries\n+@cindex Installing GCC: Binaries\n+\n+We are often asked about pre-compiled versions of GCC. While we cannot\n+provide these for all platforms, below you'll find links to binaries for\n+various platforms where creating them by yourself is not easy due to various\n+reasons.\n+\n+Please note that we did not create these binaries, nor do we\n+support them.  If you have any problems installing them, please\n+contact their makers.\n+\n+@itemize\n+@item\n+@uref{http://www-frec.bull.com/docs/download.htm,,AIX};\n+\n+@item\n+DOS - @uref{http://www.delorie.com/djgpp/,,DJGPP};\n+\n+@item\n+@uref{http://hpux.cae.wisc.edu/,,HP-UX Porting Center};\n+\n+@item\n+@uref{http://www.sco.com/skunkware/devtools/index.html#gcc,,SCO OpenServer/Unixware};\n+\n+@item\n+Solaris (SPARC, Intel) - @uref{http://www.sunfreeware.com/,,Sunfreeware};\n+\n+@item\n+SGI - @uref{http://freeware.sgi.com/,,SGI Freeware};\n+\n+@item\n+Windows 95, 98, and NT:\n+@itemize\n+@item\n+The @uref{http://sources.redhat.com/cygwin/,,Cygwin} project;\n+@item\n+@uref{http://www.xraylith.wisc.edu/~khan/software/gnu-win32/,,GNU Win32}\n+related projects by Mumit Khan.\n+@end itemize\n+\n+@item\n+@uref{ftp://ftp.thewrittenword.com/packages/free/by-name/gcc-2.95.2/,,The\n+Written Word} offers binaries for Solaris 2.5.1, 2.6, 2.7/SPARC, 2.7/Intel,\n+IRIX 6.2, 6.5, Digital UNIX 4.0D, HP-UX 10.20, and HP-UX 11.00.\n+\n+@item\n+Hitachi H8/300[HS] - \n+@uref{http://h8300-hms.sourceforge.net/,,GNU Development Tools for the \n+Hitachi H8/300[HS] Series}\n+\n+@end itemize\n+\n+In addition to those specific offerings, you can get a binary\n+distribution CD-ROM from the\n+@uref{http://www.fsf.org/order/order.html,,Free Software Foundation}. \n+It contains binaries for a number of platforms, and\n+includes not only GCC, but other stuff as well. The current CD does\n+not contain the latest version of GCC, but it should allow\n+bootstrapping the compiler. An updated version of that disk is in the\n+works.\n+\n+@html\n+<hr>\n+<p>\n+@end html\n+@ifhtml\n+@uref{./index.html,,Return to the GCC Installation page}\n+@end ifhtml\n+@end ifset\n+\n+@c ***Specific****************************************************************\n+@ifinfo\n+@comment node-name,     next,          previous, up\n+@node    Specific, Concept Index, Binaries, Top\n+@end ifinfo\n+@ifset specifichtml\n+@html\n+<h1 align=\"center\">Host/target specific installation notes for GCC</h1>\n+@end html\n+@ifnothtml\n+@chapter Host/target specific installation notes for GCC\n+@end ifnothtml\n+@cindex Specific\n+@cindex Specific installation notes\n+@cindex Target specific installation\n+@cindex Host specific installation\n+@cindex Target specific installation notes\n+\n+Please read this document carefully @emph{before} installing the\n+GNU Compiler Collection on your machine.\n+\n+@itemize\n+@item\n+@uref{#alpha*-dec-linux*,,alpha*-dec-linux*}\n+@item\n+@uref{#alpha*-dec-osf*,,alpha*-dec-osf*}\n+@item\n+@uref{#avr,,avr}\n+@item\n+@uref{#dos,,DOS}\n+@item\n+@uref{#h8300-hms,,h8300-hms}\n+@item\n+@uref{#hppa*-hp-hpux*,,hppa*-hp-hpux*}\n+@item\n+@uref{#hppa*-hp-hpux9,,hppa*-hp-hpux9}\n+@item\n+@uref{#hppa*-hp-hpux10,,hppa*-hp-hpux10}\n+@item\n+@uref{#hppa*-hp-hpux11,,hppa*-hp-hpux11}\n+@item\n+@uref{#*-*-linux-gnu,,*-*-linux-gnu}\n+@item\n+@uref{#ix86-*-linux*,,i?86-*-linux*}\n+@item\n+@uref{#ix86-*-sco3.2v5*,,i?86-*-sco3.2v5*}\n+@item\n+@uref{#ix86-*-solaris*,,i?86-*-solaris*}\n+@item\n+@uref{#ix86-*-udk,,i?86-*-udk}\n+@item\n+@uref{#*-ibm-aix*,,*-ibm-aix*}\n+@item\n+@uref{#m68k-*-nextstep*,,m68k-*-nextstep*}\n+@item\n+@uref{#m68k-sun-sunos4.1.1,,m68k-sun-sunos4.1.1}\n+@item\n+@uref{#mips*-sgi-irix[45],,mips*-sgi-irix[45]}\n+@item\n+@uref{#mips*-sgi-irix6,,mips*-sgi-irix6}\n+@item\n+@uref{#powerpc-*-linux-gnu*,,powerpc-*-linux-gnu*}\n+@item\n+@uref{#*-*-solaris*,,*-*-solaris*}\n+@item\n+@uref{#sparc-sun-solaris*,,sparc-sun-solaris*}\n+@item\n+@uref{#sparc-sun-solaris2.7,,sparc-sun-solaris2.7}\n+@item\n+@uref{#*-sun-solaris2.8,,*-sun-solaris2.8}\n+@item\n+@uref{#sunv5,,Sun V5.0 Compiler Bugs}\n+@item\n+@uref{#sparc-sun-sunos*,,sparc-sun-sunos*}\n+@item\n+@uref{#sparc-unknown-linux-gnulibc1,,sparc-unknown-linux-gnulibc1}\n+@item\n+@uref{#sparc64-*-*,,sparc64-*-*}\n+@item\n+@uref{#windows,,Microsoft Windows}\n+@item\n+@uref{#os2,,OS/2}\n+@item\n+@uref{#older,,Older systems}\n+@end itemize\n+\n+@itemize\n+@item\n+@uref{#elf_targets,,all ELF targets} (SVR4, Solaris, etc.)\n+@end itemize\n+\n+\n+@html\n+<!-- -------- host/target specific issues start here ---------------- -->\n+<hr>\n+<h3><a name=\"alpha*-dec-linux*\">alpha*-dec-linux*</a></h3>\n+@end html\n+\n+We strongly recommend to upgrade to binutils 2.10 (or newer).\n+\n+The following error:\n+@example\n+  Error: macro requires $at register while noat in effect\n+@end example\n+\n+indicates that you should upgrade to a newer version of\n+the assembler, 2.9 or later.  If you can not upgrade the assembler, the\n+compiler option \"-Wa,-m21164a\" may work around this problem.\n+\n+@html\n+</p>\n+<hr>\n+<h3><a name=\"alpha*-dec-osf*\">alpha*-dec-osf*</a></h3>\n+@end html\n+\n+If you install a shared libstdc++ and, when you link a non-trivial C++\n+program (for example, @code{gcc/testsuite/g++.other/delete3.C}),\n+the linker reports a couple of errors about multiply-defined symbols\n+(for example, @code{nothrow}, @code{__throw} and\n+@code{terminate(void)}), you've probably got a linker bug, for\n+which there's no known fix.  The officially recommended work-around is\n+to remove the shared libstdc++.\n+\n+An alternative solution is to arrange that all symbols from\n+@code{libgcc} get copied to the shared @code{libstdc++};\n+see detailed solution below.  (Surprising as it may seem, this does\n+indeed fix the problem!)  @emph{Beware} that this may bring you\n+binary-compatibility problems in the future, if you don't use the same\n+work-around next time you build @code{libstdc++}: if programs\n+start to depend on @code{libstdc++} to provide symbols that used\n+to be only in @code{libgcc}, you must arrange that\n+@code{libstdc++} keeps providing them, otherwise the programs\n+will have to be relinked.\n+\n+The magic spell is to add @code{-Wl,-all,-lgcc,-none} to the\n+definition of macro @code{SHDEPS} in\n+@code{libstdc++/config/dec-osf.ml} @emph{before}\n+@code{alpha*-dec-osf*/libstdc++/Makefile} is created (a \n+@uref{dec-osf-shlibstdc++.patch,,patch} \n+that does just that is available).  If the Makefile already exists, run\n+@code{./config.status} within directory\n+@code{alpha*-dec-osf*/libstdc++} (and\n+@code{alpha*-dec-osf*/ieee/libstdc++}, if it also exists).\n+Remove any existing @code{libstdc++.so*} from such directories,\n+and run @code{make all-target-libstdc++} in the top-level\n+directory, then @code{make install-target-libstdc++}.\n+\n+If you have already removed the build tree, you may just remove\n+@code{libstdc++.so.2.10.0} from the install tree and re-create\n+it with the command \n+@code{gcc -shared -o libstdc++.so.2.10.0 -Wl,-all,-lstdc++,-lgcc,-none -lm}.\n+If the @code{ieee}\n+sub-directory exists, repeat this command in it, with the additional\n+flag @code{-mieee}.\n+\n+@html\n+</p>\n+<hr>\n+<h3><a name=\"avr\">avr</a></h3>\n+@end html\n+\n+Use `@command{configure} @option{--target=avr} \n+@option{--enable-languages=\"c\"}' to configure GCC.\n+\n+Further installation notes and other useful information about AVR tools\n+can also be obtained from:\n+\n+@itemize @bullet\n+@item\n+@uref{http://home.overta.ru/users/denisc,,http://home.overta.ru/users/denisc}\n+@item\n+@uref{http://www.itnet.pl/amelektr/avr,,http://www.itnet.pl/amelektr/avr}\n+@end itemize\n+\n+We strongly recommend to upgrade to binutils 2.11\n+(or a current snapshot until 2.11 has been released).\n+\n+The following error:\n+@example\n+  Error: register required\n+@end example\n+\n+indicates that you should upgrade to a newer version of the binutils.\n+\n+@html\n+</p>\n+<hr>\n+<h3><a name=\"dos\">DOS</a></h3>\n+@end html\n+\n+Please have a look at our @uref{binaries.html,,binaries page}.\n+\n+@html\n+</p>\n+<hr>\n+<h3><a name=\"h8300-hms\">h8300-hms</a></h3>\n+@end html\n+\n+Please have a look at our @uref{binaries.html,,binaries page}.\n+\n+@html\n+</p>\n+<hr>\n+<h3><a name=\"hppa*-hp-hpux*\">hppa*-hp-hpux*</a></h3>\n+@end html\n+\n+We @emph{highly} recommend using gas/binutils-2.8 or newer on all hppa\n+platforms; you may encounter a variety of problems when using the HP \n+assembler.\n+\n+Specifically, @option{-g} does not work on HP-UX (since that system\n+uses a peculiar debugging format which GCC does not know about), unless you\n+use GAS and GDB and configure GCC with the @option{--with-gnu-as}\n+option.\n+\n+If you wish to use pa-risc 2.0 architecture support, you must use either\n+the HP assembler or a recent\n+@uref{ftp://sources.redhat.com/pub/binutils/snapshots,,snapshot of gas}.\n+\n+More specific information to hppa*-hp-hpux* targets follows.\n+\n+@html\n+</p>\n+<hr>\n+<h3><a name=\"hppa*-hp-hpux9\">hppa*-hp-hpux9</a></h3>\n+@end html\n+\n+The HP assembler has major problems on this platform.  We've tried to work\n+around the worst of the problems.  However, those workarounds may be causing\n+linker crashes in some circumstances; the workarounds also probably prevent\n+shared libraries from working.  Use the GNU assembler to avoid these problems.\n+\n+\n+The configuration scripts for GCC will also trigger a bug in the hpux9\n+shell.  To avoid this problem set CONFIG_SHELL to @file{/bin/ksh} and SHELL \n+to @file{/bin/ksh} in your environment.\n+\n+\n+@html\n+</p>\n+<hr>\n+<h3><a name=\"hppa*-hp-hpux10\">hppa*-hp-hpux10</a></h3>\n+@end html\n+\n+For hpux10.20, we @emph{highly} recommend you pick up the latest sed patch \n+@code{PHCO_19798} from HP.  HP has two sites which provide patches free of \n+charge:\n+\n+@itemize @bullet\n+@item\n+@html\n+<a href=\"http://us-support.external.hp.com\">US, Canada, Asia-Pacific, and\n+Latin-America</a>\n+@end html\n+@ifnothtml\n+@uref{http://us-support.external.hp.com,,}US, Canada, Asia-Pacific, and\n+Latin-America\n+@end ifnothtml\n+@item\n+@uref{http://europe-support.external.hp.com,,Europe}\n+@end itemize\n+\n+The HP assembler on these systems is much better than the hpux9 assembler,\n+but still has some problems.  Most notably the assembler inserts timestamps\n+into each object file it creates, causing the 3-stage comparison test to fail\n+during a `@code{make bootstrap}'.  You should be able to continue by \n+saying `@code{make all}' after getting the failure from `@code{make \n+bootstrap}'.\n+\n+\n+@html\n+</p>\n+<hr>\n+<h3><a name=\"hppa*-hp-hpux11\">hppa*-hp-hpux11</a></h3>\n+@end html\n+\n+GCC 2.95.2 does not support HP-UX 11, and it cannot generate 64-bit\n+object files. Current (as of late 2000) snapshots and GCC 3.0 do support\n+HP-UX 11.\n+\n+\n+@html\n+</p>\n+<hr>\n+<h3><a name=\"*-*-linux-gnu\">*-*-linux-gnu</a></h3>\n+@end html\n+\n+If you use glibc 2.2 (or 2.1.9x), GCC 2.95.2 won't install\n+out-of-the-box.  You'll get compile errors while building libstdc++.\n+The patch @uref{glibc-2.2.patch,,glibc-2.2.patch}, that is to be\n+applied in the GCC source tree, fixes the compatibility problems.\n+\n+@html\n+</p>\n+<hr>\n+<h3><a name=\"ix86-*-linux*\">i?86-*-linux*</a></h3>\n+@end html\n+\n+You will need binutils-2.9.1.0.15 or newer for exception handling to work.\n+\n+If you receive Signal 11 errors when building on GNU/Linux, then it is\n+possible you have a hardware problem.  Further information on this can be\n+found on @uref{http://www.bitwizard.nl/sig11/,,www.bitwizard.nl}.\n+\n+@html\n+</p>\n+<hr>\n+<h3><a name=\"ix86-*-sco3.2v5*\">i?86-*-sco3.2v5*</a></h3>\n+@end html\n+\n+Unlike earlier versions of GCC, the ability to generate COFF with this\n+target is no longer provided.\n+\n+Earlier versions of GCC emitted Dwarf-1 when generating ELF to allow\n+the system debugger to be used.  That support was too burdensome to\n+maintain.  GCC now emits only dwarf-2 for this target.  This means you\n+may use either the UDK debugger or GDB to debug programs built by this\n+version of GCC.\n+\n+If you are building languages other than C, you must follow the instructions\n+about invoking `@code{make bootstrap}' because the native OpenServer\n+compiler will build a @code{cc1plus} that will not correctly parse many\n+valid C++ programs including those in @code{libgcc.a}.  \n+@strong{You must do a `@code{make bootstrap}' if you are building with the \n+native compiler.}\n+\n+Use of the `@option{-march-pentiumpro}' flag can result in\n+unrecognized opcodes when using the native assembler on OS versions before\n+5.0.6. (Support for P6 opcodes was added to the native ELF assembler in\n+that version.)  While it's rather rare to see these emitted by GCC yet, \n+errors of the basic form:\n+\n+@example\n+  /usr/tmp/ccaNlqBc.s:22:unknown instruction: fcomip\n+  /usr/tmp/ccaNlqBc.s:50:unknown instruction: fucomip\n+@end example\n+\n+are symptoms of this problem.  You may work around this by not\n+building affected files with that flag, by using the GNU assembler, or\n+by using the assembler provided with the current version of the OS.\n+Users of GNU assembler should see the note below for hazards on doing\n+so.\n+\n+The native SCO assembler that is provided with the OS at no\n+charge is normally required.  If, however, you must be able to use\n+the GNU assembler (perhaps you're compiling code with asms that\n+require GAS syntax) you may configure this package using the flags\n+@option{--with-gnu-as}.  You must use a recent version of GNU\n+binutils; versions past 2.9.1 seem to work well.\n+\n+In general, the @option{--with-gnu-as} option isn't as well tested\n+as the native assembler.\n+\n+Look in @file{gcc/config/i386/sco5.h} (search for \"messy\") for\n+additional OpenServer-specific flags.\n+\n+Systems based on OpenServer before 5.0.4 (`@code{uname -X}'\n+will tell you what you're running) require TLS597 from ftp.sco.com/TLS\n+for C++ constructors and destructors to work right.\n+\n+The system linker in (at least) 5.0.4 and 5.0.5 will sometimes\n+do the wrong thing for a construct that GCC will emit for PIC\n+code.  This can be seen as execution testsuite failures when using\n+-fPIC on 921215-1.c, 931002-1.c, nestfunc-1.c, and gcov-1.c.\n+For 5.0.5, an updated linker that will cure this problem is\n+available.  You must install both \n+@uref{ftp://ftp.sco.com/Supplements/rs505a/,,ftp://ftp.sco.com/Supplements/rs505a/} \n+and @uref{ftp://ftp.sco.com/SLS/,,OSS499A}.\n+\n+The dynamic linker in OpenServer 5.0.5 (earlier versions may show\n+the same problem) aborts on certain g77-compiled programs.  It's particularly\n+likely to be triggered by building Fortran code with the @option{-fPIC} flag.\n+Although it's conceivable that the error could be triggered by other\n+code, only G77-compiled code has been observed to cause this abort.\n+If you are getting core dumps immediately upon execution of your\n+g77 program - and especially if it's compiled with -fPIC - try applying\n+@uref{sco_osr5_g77.patch,,@code{`sco_osr5_g77.patch'}} to your libf2c and \n+rebuilding GCC.  \n+Affected faults, when analyzed in a debugger, will show a stack\n+backtrace with a fault occurring in @code{rtld()} and the program\n+running as @code{/usr/lib/ld.so.1}.  This problem has been reported to SCO \n+engineering and will hopefully be addressed in later releases.\n+\n+\n+@html\n+</p>\n+<hr>\n+<h3><a name=\"ix86-*-solaris*\">i?86-*-solaris*</a></h3>\n+@end html\n+\n+GCC 2.95.2, when configured to use the GNU assembler, would invoke\n+it with the @code{-s} switch, that GNU as up to 2.9.5.0.12 does\n+not support.  If you'd rather not use a newer GNU as nor the native\n+assembler, you'll need the patch \n+@uref{x86-sol2-gas.patch,,@code{`x86-sol2-gas.patch'}}.\n+\n+\n+@html\n+</p>\n+<hr>\n+<h3><a name=\"ix86-*-udk\">i?86-*-udk</a></h3>\n+@end html\n+\n+This target emulates the SCO Universal Development Kit and requires that\n+package be installed.  (If it is installed, you will have a \n+@file{/udk/usr/ccs/bin/cc } file present.)  It's very much like the \n+@code{i?86-*-unixware7*} target\n+but is meant to be used when hosting on a system where UDK isn't the\n+default compiler such as OpenServer 5 or Unixware 2.  This target will\n+generate binaries that will run on OpenServer, Unixware 2, or Unixware 7, \n+with the same warnings and caveats as the SCO UDK.\n+\n+You can stage1 with either your native compiler or with UDK.   If you\n+don't do a full bootstrap when initially building with your native compiler\n+you will have an utterly unusable pile of bits as your reward.\n+\n+This target is a little tricky to build because we have to distinguish\n+it from the native tools (so it gets headers, startups, and libraries\n+from the right place) while making the tools not think we're actually \n+building a cross compiler.   The easiest way to do this is with a configure\n+command like this:\n+\n+@command{  CC=/udk/usr/ccs/bin/cc <i>/your/path/to/</i>gcc/configure \n+--host=i686-pc-udk --target=i686-pc-udk --program-prefix=udk-}\n+\n+@emph{You should substitute 'i686' in the above command with the appropriate\n+processor for your host.}\n+\n+You should follow this with a `@command{make bootstrap}'  then\n+`@command{make install}'.  You can then access the UDK-targeted GCC \n+tools by adding @code{udk-} before the commonly known name.  For example, to \n+invoke the C compiler, you would use `@code{udk-gcc}'.  They will coexist \n+peacefully with any native-target GCC tools you may have installed.\n+\n+\n+@html\n+</p>\n+<hr>\n+<h3><a name=\"*-ibm-aix*\">*-ibm-aix*</a></h3>\n+<!-- rs6000-ibm-aix*, powerpc-ibm-aix* -->\n+@end html\n+\n+AIX Make frequently has problems with GCC makefiles.  GNU Make 3.76 or\n+newer is recommended to build on this platform.\n+\n+Errors involving \"alloca\" when building GCC generally are due\n+to an incorrect definition of @command{CC} in the Makefile or mixing files\n+compiled with the native C compiler and GCC.  During the stage1 phase of\n+the build, the native AIX compiler @strong{must} be invoked as \"cc\"\n+(not \"xlc\").  Once @command{configure} has been informed of\n+\"xlc\", one needs to use \"make distclean\" to remove the\n+configure cache files and ensure that @command{$CC} environment variable\n+does not provide a definition that will confuse @command{configure}.\n+If this error occurs during stage2 or later, then the problem most likely\n+is the version of Make (see above).\n+\n+Some versions of the AIX binder (linker) can fail with a relocation\n+overflow severe error when the @option{-bbigtoc} option is used to link\n+GCC-produced object files into an executable that overflows the TOC.  A fix\n+for APAR IX75823 (OVERFLOW DURING LINK WHEN USING GCC AND -BBIGTOC) is\n+available from IBM Customer Support and from its\n+@uref{http://service.boulder.ibm.com/,,service.boulder.ibm.com}\n+website as PTF U455193.\n+\n+Binutils does not support AIX 4.3 (at least through release 2.9).\n+GNU as and GNU ld will not work properly and one should not configure GCC\n+to use those GNU utilities.  Use the native AIX tools which do interoperate\n+with GCC.\n+\n+AIX 4.3 utilizes a new \"large format\" archive to support both\n+32-bit and 64-bit object modules.  The routines provided in AIX 4.3.0 and\n+AIX 4.3.1 to parse archive libraries did not handle the new format correctly.\n+These routines are used by GCC and result in error messages during linking\n+such as \"not a COFF file\".  The version of the routines shipped\n+with AIX 4.3.1 should work for a 32-bit environment.  The @option{-g} option\n+of the archive command may be used to create archives of 32-bit objects\n+using the original \"small format\".  A correct version of the routines is\n+shipped with AIX 4.3.2.\n+\n+The initial assembler shipped with AIX 4.3.0 generates incorrect object\n+files.  A fix for APAR IX74254 (64BIT DISASSEMBLED OUTPUT FROM COMPILER FAILS\n+TO ASSEMBLE/BIND) is available from IBM Customer Support and from its\n+@uref{http://service.boulder.ibm.com/,,service.boulder.ibm.com}\n+website as PTF U453956.  This fix is incorporated in AIX 4.3.1 and above.\n+\n+The AIX 4.3.2.1 linker (bos.rte.bind_cmds Level 4.3.2.1) will dump core\n+with a segmentation fault when invoked by any version of GCC.  A fix for\n+APAR IX87327 is available from IBM Customer Support and from its\n+@uref{http://service.boulder.ibm.com/,,service.boulder.ibm.com}\n+website as PTF U461879.  This fix is incorporated in AIX 4.3.3 and above.\n+\n+\n+@html\n+</p>\n+<hr>\n+<h3><a name=\"m68k-*-nextstep*\">m68k-*-nextstep*</a></h3>\n+@end html\n+\n+You absolutely @strong{must} use GNU sed and GNU make on this platform.\n+\n+\n+On NEXTSTEP 3.x where x < 3 the build of GCC will abort during  \n+stage1 with an error message like this:\n+\n+@example\n+  _eh\n+  /usr/tmp/ccbbsZ0U.s:987:Unknown pseudo-op: .section\n+  /usr/tmp/ccbbsZ0U.s:987:Rest of line ignored. 1st junk character\n+  valued 95 (_).\n+@end example\n+\n+The reason for this is the fact that NeXT's assembler for these  \n+versions of the operating system does not support the .section  \n+pseudo op that's needed for full C++ exception functionality.\n+\n+As NeXT's assembler is a derived work from GNU as, a free  \n+replacement that does can be obtained at \n+@uref{ftp://ftp.next.peak.org:/next-ftp/next/apps/devtools/as.3.3.NIHS.s.tar.gz,,ftp://ftp.next.peak.org:/next-ftp/next/apps/devtools/as.3.3.NIHS.s.tar.gz}.\n+\n+If you try to build the integrated C++ & C++ runtime libraries on this system\n+you will run into trouble with include files.  The way to get around this is\n+to use the following sequence.  Note you must have write permission to\n+the directory @emph{prefix} you specified in the configuration process of GCC\n+for this sequence to work.\n+\n+@example\n+  cd bld-gcc\n+  make all-texinfo all-bison all-byacc all-binutils all-gas all-ld\n+  cd gcc\n+  make bootstrap\n+  make install-headers-tar\n+  cd ..\n+  make bootstrap3\n+@end example\n+\n+\n+@html\n+</p>\n+<hr>\n+<h3><a name=\"m68k-sun-sunos4.1.1\">m68k-sun-sunos4.1.1</a></h3>\n+@end html\n+\n+It is reported that you may need the GNU assembler on this platform.\n+\n+\n+@html\n+</p>\n+<hr>\n+<h3><a name=\"mips*-sgi-irix[45]\">mips*-sgi-irix[45]</a></h3>\n+@end html\n+\n+You must use GAS on these platforms, as the native assembler can not handle \n+the code for exception handling support. Either of these messages indicates \n+that you are using the MIPS assembler when instead you should be using GAS:\n+\n+@samp{  as0: Error: ./libgcc2.c, line 1:Badly delimited numeric literal\n+  .4byte $LECIE1-$LSCIE1\n+  as0: Error: ./libgcc2.c, line 1:malformed statement}\n+\n+or:\n+\n+@samp{  as0: Error: /src/bld-gcc/gcc/libgcc2.c, line 1:undefined symbol in expression\n+  .word $LECIE1-$LSCIE1}\n+\n+These systems don't have ranlib, which various components in GCC need; you\n+should be able to avoid this problem by installing GNU binutils, which includes\n+a functional ranlib for this system.\n+\n+You may get the following warning on irix4 platforms, it can be safely\n+ignored.\n+@example\n+  warning: foo.o does not have gp tables for all its sections.\n+@end example\n+\n+When building GCC, the build process loops rebuilding cc1 over and\n+over again.  This happens on mips-sgi-irix5.2, and possibly other platforms.@*\n+It has been reported that this is a known bug in the make shipped with\n+IRIX 5.2.  We recommend you use GNU make instead of the vendor supplied\n+make program; however, you may have success with \"smake\" on IRIX 5.2 if\n+you do not have GNU make available.\n+\n+See @uref{http://reality.sgi.com/ariel/freeware/,,http://reality.sgi.com/ariel/freeware} for more information about\n+using GCC on IRIX platforms.\n+\n+\n+@html\n+</p>\n+<hr>\n+<h3><a name=\"mips*-sgi-irix6\">mips*-sgi-irix6</a></h3>\n+@end html\n+\n+You must @emph{not} use GAS on irix6 platforms; doing so will only\n+cause problems.\n+\n+These systems don't have ranlib, which various components in GCC need; you\n+should be able to avoid this problem by making a dummy script called ranlib\n+which just exits with zero status and placing it in your path.\n+\n+If you are using Irix cc as your bootstrap compiler, you must\n+ensure that the N32 ABI is in use.  To test this, compile a simple C\n+file with @command{cc} and then run @command{file} on the\n+resulting object file.  The output should look like:\n+\n+@example\n+@code{    test.o: ELF N32 MSB ...}\n+@end example\n+\n+If you see:\n+@example\n+@code{    test.o: ELF 32-bit MSB}\n+@end example\n+\n+then your version of @command{cc} uses the O32 ABI default.  You\n+should set the environment variable @command{CC} to 'cc -n32'\n+before configuring GCC.\n+\n+GCC does not currently support generating O32 ABI binaries in the\n+mips-sgi-irix6 configurations.  It used to be possible to create a GCC\n+with O32 ABI only support by configuring it for the mips-sgi-irix5\n+target.  See the link below for details.\n+\n+GCC does not correctly pass/return structures which are\n+smaller than 16 bytes and which are not 8 bytes. The problem is very\n+involved and difficult to fix. It affects a number of other targets also,\n+but IRIX 6 is affected the most, because it is a 64 bit target, and 4 byte\n+structures are common. The exact problem is that structures are being padded\n+at the wrong end, e.g. a 4 byte structure is loaded into the lower 4 bytes\n+of the register when it should be loaded into the upper 4 bytes of the\n+register.\n+\n+GCC is consistent with itself, but not consistent with the SGI C compiler\n+(and the SGI supplied runtime libraries), so the only failures that can\n+happen are when there are library functions that take/return such\n+structures. There are very few such library functions. I can only recall\n+seeing two of them: inet_ntoa, and semctl.\n+\n+See @uref{http://reality.sgi.com/ariel/freeware/,,http://reality.sgi.com/ariel/freeware} for more information about\n+using GCC on IRIX platforms.\n+\n+\n+@html\n+</p>\n+<hr>\n+<h3><a name=\"powerpc-*-linux-gnu*\">powerpc-*-linux-gnu*</a></h3>\n+@end html\n+\n+You will need \n+@uref{ftp://ftp.varesearch.com/pub/support/hjl/binutils,,binutils-2.9.4.0.8} \n+or newer for a working GCC. It is strongly recommended to recompile binutils\n+if you initially built it with gcc-2.7.2.x.\n+\n+\n+@html\n+</p>\n+<hr>\n+<h3><a name=\"*-*-solaris*\">*-*-solaris*</a></h3>\n+@end html\n+\n+Starting with Solaris, Sun does not ship a C compiler any more. To\n+bootstrap and install GCC you first have to install a pre-built\n+compiler, see our @uref{binaries.html,,binaries page} for\n+details.\n+\n+Sun as 4.X is broken in that it cannot cope with long symbol names.\n+A typical error message might look similar to the following:\n+\n+@samp{/usr/ccs/bin/as: \"/var/tmp/ccMsw135.s\", line 11041: \n+error: can't compute value of an expression involving an external symbol.}\n+\n+This is Sun bug 4237974.  See the @uref{../faq.html#squangle,,How to work around too long C++\n+symbol names?} FAQ entry for further information and a workaround.  This is fixed with patch \n+108908-02 and has been fixed in later (5.x) versions of the assembler.\n+\n+Sun make in all known Solaris 1 (SunOS 4) and Solaris 2 releases has a\n+broken @emph{VPATH} mechanism, which means you must either:\n+@itemize @bullet\n+@item\n+Use GNU make (recommended), @emph{or:}\n+@item\n+Always build in the source directory, @emph{or:}\n+@item\n+@emph{(For GCC 2.95.1 only)}\n+apply the patches mentioned at\n+@uref{http://www.gnu.org/software/gcc/extensions.html#sun-make,,\n+http://www.gnu.org/software/gcc/extensions.html#sun-make}.\n+@end itemize\n+\n+\n+@html\n+<p>\n+<hr>\n+<h3><a name=\"sparc-sun-solaris*\">sparc-sun-solaris*</a></h3>\n+@end html\n+\n+binutils 2.9.1 has known bugs on this platform. We recommend to use\n+binutils 2.10 or the vendor tools (Sun as, Sun ld).\n+\n+Unfortunately, C++ shared libraries, including libstdc++, won't work\n+properly if assembled with Sun as: the linker will complain about\n+relocations in read-only sections, in the definition of virtual\n+tables. Also, Sun as fails to process long symbols resulting from\n+mangling template-heavy C++ function names.\n+\n+\n+@html\n+</p>\n+<hr>\n+<h3><a name=\"sparc-sun-solaris2.7\">sparc-sun-solaris2.7</a></h3>\n+@end html\n+\n+Sun patch 107058-01 (1999-01-13) for SPARC Solaris 7 triggers a bug in\n+the dynamic linker.  This problem (Sun bug 4210064) affects GCC 2.8\n+and later, including all EGCS releases.  Sun formerly recommended\n+107058-01 for all Solaris 7 users, but around 1999-09-01 it started to\n+recommend it only for people who use Sun's compilers.\n+  \n+Here are some workarounds to this problem:\n+@itemize @bullet\n+@item\n+Do not install Sun patch 107058-01 until after Sun releases a\n+complete patch for bug 4210064.  This is the simplest course to take,\n+unless you must also use Sun's C compiler.  Unfortunately 107058-01\n+is preinstalled on some new Solaris-based hosts, so you may have to\n+back it out.\n+  \n+@item\n+Copy the original, unpatched Solaris 7\n+@command{/usr/ccs/bin/as} into\n+@command{/usr/local/lib/gcc-lib/sparc-sun-solaris2.7/2.95.1/as},\n+adjusting the latter name to fit your local conventions and software\n+version numbers.\n+\n+@item\n+Install Sun patch 106950-03 (1999-05-25) or later.  Nobody with\n+both 107058-01 and 106950-03 installed has reported the bug with GCC\n+and Sun's dynamic linker.  This last course of action is riskiest,\n+for two reasons.  First, you must install 106950 on all hosts that\n+run code generated by GCC; it doesn't suffice to install it only on\n+the hosts that run GCC itself.  Second, Sun says that 106950-03 is\n+only a partial fix for bug 4210064, but Sun doesn't know whether the\n+partial fix is adequate for GCC.  Revision -08 or later should fix\n+the bug, but (as of 1999-10-06) it is still being tested.\n+@end itemize \n+\n+\n+@html\n+<p>\n+<hr>\n+<h3><a name=\"*-sun-solaris2.8\">*-sun-solaris2.8</a></h3>\n+<!-- ripped from the same FAQ that I answered -->\n+@end html\n+\n+Sun bug 4296832 turns up when compiling X11 headers with GCC 2.95 or\n+newer:  g++ will complain that types are missing.  These headers assume\n+that omitting the type means 'int'; this assumption worked for C89 but\n+is wrong for C++, and is now wrong for C99 also.\n+\n+g++ accepts such (illegal) constructs with the option @option{-fpermissive}; it\n+will assume that any missing type is 'int' (as defined by C89).\n+\n+For Solaris 8, t<h3><a name=\"older\"></a>Older systems</h3>\r\n+\r\n+<p>GCC contains support files for many older (1980s and early\r\n+1990s) Unix variants.  For the most part, support for these systems\r\n+has not been deliberately removed, but it has not been maintained for\r\n+several years and may suffer from bitrot.  Support from some systems\r\n+has been removed from GCC 3: fx80, ns32-ns-genix, pyramid, tahoe,\r\n+gmicro, spur; most of these targets had not been updated since GCC\r\n+version 1.</p>\r\n+\r\n+<p>Support for older systems as targets for cross-compilation is less\r\n+problematic than support for them as hosts for GCC; if an\r\n+enthusiast wishes to make such a target work again\r\n+(including resurrecting any of the targets that never worked with GCC\r\n+2, starting from the last CVS version before they were removed),\r\n+patches <a href=\"../contribute.html\">following the usual\r\n+requirements</a> would be likely to be accepted, since they should not\r\n+affect the support for more modern targets.</p>\r\n+\r\n+<p>Support for old systems as hosts for GCC can cause problems if the\r\n+workarounds for compiler, library and operating system bugs affect the\r\n+cleanliness or maintainability of the rest of GCC.  In some cases, to\r\n+bring GCC up on such a system, if still possible with current GCC, may\r\n+require first installing an old version of GCC which did work on that\r\n+system, and using it to compile a more recent GCC, to avoid bugs in\r\n+the vendor compiler.  Old releases of GCC 1 and GCC 2 are available in\r\n+the old-releases directory on the <a href=\"../mirrors.html\">GCC mirror\r\n+sites</a>.  Header bugs may generally be avoided using\r\n+<code>fixincludes</code>, but bugs or deficiencies in libraries and\r\n+the operating system may still cause problems.</p>\r\n+\r\n+<p>For some systems, old versions of GNU binutils may also be useful,\r\n+and are available from pub/binutils/old-releases on <a\r\n+href=\"http://sources.redhat.com/mirrors.html\">sources.redhat.com\r\n+mirror sites</a>.</p>\r\n+\r\n+<p>Some of the information on specific systems above relates to\r\n+such older systems, but much of the information\r\n+about GCC on such systems (which may no longer be applicable to\r\n+current GCC) is to be found in the GCC texinfo manual.</p>\r\n+\r\n+<hr>\r\n+his is fixed by revision 24 or later of patch 108652\n+(for SPARCs) or 108653 (for Intels).\n+\n+\n+@html\n+<p>\n+<hr>\n+<h3><a name=\"sunv5\">Sun V5.0 Compiler Bugs</a></h3>\n+@end html\n+\n+The Sun V5.0 compilers are known to mis-compile GCC 2.95 and GCC 2.95.1,\n+which in turn causes GCC to fail its bootstrap comparison test.\n+GCC 2.95.2 has a workaround.\n+\n+\n+@html\n+</p>\n+<hr>\n+<h3><a name=\"sparc-sun-sunos*\">sparc-sun-sunos*</a></h3>\n+@end html\n+\n+A bug in the SunOS4 linker will cause it to crash when linking\n+-fPIC compiled objects (and will therefore not allow you to build\n+shared libraries).\n+\n+To fix this problem you can either use the most recent version of\n+binutils or get the latest SunOS4 linker patch (patch ID 100170-10)\n+from Sun's patch site.\n+\n+\n+@html\n+</p>\n+<hr>\n+<h3><a name=\"sparc-unknown-linux-gnulibc1\">sparc-unknown-linux-gnulibc1</a></h3>\n+@end html\n+\n+It has been reported that you might need \n+@uref{ftp://ftp.yggdrasil.com/private/hjl,,binutils-2.8.1.0.23}\n+for this platform, too.\n+\n+\n+@html\n+</p>\n+<hr>\n+<h3><a name=\"sparc64-*-*\">sparc64-*-*</a></h3>\n+@end html\n+\n+GCC version 2.95 is not able to compile code correctly for\n+@code{sparc64} targets.  Users of the Linux kernel, at least,\n+12~can use the @code{sparc32} program to start up a new shell\n+invocation with an environment that causes @command{configure} to\n+recognize (via @command{uname -a}) the system as @command{sparc-*-*} instead.\n+\n+\n+@html\n+</p>\n+<hr>\n+<h3><a name=\"windows\"></a>Microsoft Windows (32 bit)</h3>\n+@end html\n+\n+A port of GCC 2.95.x is included with the \n+@uref{http://www.cygwin.com/,,Cygwin environment}.\n+\n+Current (as of early 2001) snapshots of GCC will build under Cygwin\n+without modification.\n+\n+@html\n+</p>\n+<hr>\n+<h3><a name=\"os2\"></a>OS/2</h3>\n+@end html\n+\n+GCC does not currently support OS/2.  However, Andrew Zabolotny has been\n+working on a generic OS/2 port with pgcc.  The current code code can be found\n+at @uref{http://www.goof.com/pcg/os2/,,http://www.goof.com/pcg/os2/}.\n+\n+An older copy of GCC 2.8.1 is included with the EMX tools available at \n+@uref{ftp://ftp.leo.org/pub/comp/os/os2/leo/devtools/emx+gcc/,,\n+ftp://ftp.leo.org/pub/comp/os/os2/leo/devtools/emx+gcc/}.\n+\n+@html\n+</p>\n+<hr>\n+<h3><a name=\"older\"></a>Older systems</h3> \n+@end html\n+ \n+GCC contains support files for many older (1980s and early \n+1990s) Unix variants.  For the most part, support for these systems \n+has not been deliberately removed, but it has not been maintained for \n+several years and may suffer from bitrot.  Support from some systems \n+has been removed from GCC 3: fx80, ns32-ns-genix, pyramid, tahoe, \n+gmicro, spur; most of these targets had not been updated since GCC \n+version 1.\n+ \n+Support for older systems as targets for cross-compilation is less \n+problematic than support for them as hosts for GCC; if an enthusiast \n+wishes to make such a target work again (including resurrecting any \n+of the targets that never worked with GCC 2, starting from the last \n+CVS version before they were removed), patches \n+@uref{../contribute.html,,following the usual requirements} \n+would be likely to be accepted, since they should not affect the \n+support for more modern targets.\n+ \n+Support for old systems as hosts for GCC can cause problems if the \n+workarounds for compiler, library and operating system bugs affect the \n+cleanliness or maintainability of the rest of GCC.  In some cases, to \n+bring GCC up on such a system, if still possible with current GCC, may \n+require first installing an old version of GCC which did work on that \n+system, and using it to compile a more recent GCC, to avoid bugs in \n+the vendor compiler.  Old releases of GCC 1 and GCC 2 are available in \n+the old-releases directory on the \n+@uref{../mirrors.html,,GCC mirror sites}.  Header bugs may generally \n+be avoided using @code{fixincludes}, but bugs or deficiencies in libraries and \n+the operating system may still cause problems.\n+ \n+For some systems, old versions of GNU binutils may also be useful, \n+and are available from pub/binutils/old-releases on \n+@uref{http://sources.redhat.com/mirrors.html,,sources.redhat.com mirror sites}.\n+ \n+Some of the information on specific systems above relates to \n+such older systems, but much of the information \n+about GCC on such systems (which may no longer be applicable to \n+current GCC) is to be found in the GCC texinfo manual.\n+ \n+@html\n+</p>\n+<hr>\n+<h3><a name=\"elf_targets\">all ELF targets (SVR4, Solaris, etc.)</a></h3>\n+@end html\n+\n+C++ support is significantly better on ELF targets if you use the GNU\n+linker; duplicate copies of inlines, vtables and template instantiations\n+will be discarded automatically.\n+\n+\n+@html\n+</p>\n+<hr>\n+<p>\n+@end html\n+@ifhtml\n+@uref{./index.html,,Return to the GCC Installation page}\n+@end ifhtml\n+@end ifset\n+\n+@c ***************************************************************************\n+@c Part 6 The End of the Document\n+@ifinfo\n+@comment node-name,     next,          previous, up\n+@node    Concept Index, , Specific, Top\n+@end ifinfo\n+\n+@ifinfo\n+@unnumbered Concept Index\n+\n+@printindex cp\n+\n+@contents\n+@end ifinfo\n+@bye"}]}