{"sha": "61aeb06fe596bd822b665d65a271804efdaf0053", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjFhZWIwNmZlNTk2YmQ4MjJiNjY1ZDY1YTI3MTgwNGVmZGFmMDA1Mw==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@cs.umass.edu", "date": "2003-07-05T00:19:47Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2003-07-05T00:19:47Z"}, "message": "install.texi: Fix typos.\n\n\t* doc/install.texi: Fix typos.\n\t* doc/invoke.texi: Likewise.\n\t* doc/tm.texi: Likewise.\n\nFrom-SVN: r68951", "tree": {"sha": "72a4729c9e47ef99ff5f4fbc832c1bfa8fa1217f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/72a4729c9e47ef99ff5f4fbc832c1bfa8fa1217f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/61aeb06fe596bd822b665d65a271804efdaf0053", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/61aeb06fe596bd822b665d65a271804efdaf0053", "html_url": "https://github.com/Rust-GCC/gccrs/commit/61aeb06fe596bd822b665d65a271804efdaf0053", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/61aeb06fe596bd822b665d65a271804efdaf0053/comments", "author": null, "committer": null, "parents": [{"sha": "802491c002b9a1d71a7da70ae8acdbcda653ebf6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/802491c002b9a1d71a7da70ae8acdbcda653ebf6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/802491c002b9a1d71a7da70ae8acdbcda653ebf6"}], "stats": {"total": 12, "additions": 9, "deletions": 3}, "files": [{"sha": "4cf39f31324797e3836cce7a0bfe4377ca11b8de", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/61aeb06fe596bd822b665d65a271804efdaf0053/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/61aeb06fe596bd822b665d65a271804efdaf0053/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=61aeb06fe596bd822b665d65a271804efdaf0053", "patch": "@@ -1,3 +1,9 @@\n+2003-07-04  Kazu Hirata  <kazu@cs.umass.edu>\n+\n+\t* doc/install.texi: Fix typos.\n+\t* doc/invoke.texi: Likewise.\n+\t* doc/tm.texi: Likewise.\n+\n 2003-07-04  Kazu Hirata  <kazu@cs.umass.edu>\n \n \t* config/pa/fptr.c: Fix comment typos."}, {"sha": "620a19955e13c736e365c8e1db7dbe4d2e617542", "filename": "gcc/doc/install.texi", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/61aeb06fe596bd822b665d65a271804efdaf0053/gcc%2Fdoc%2Finstall.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/61aeb06fe596bd822b665d65a271804efdaf0053/gcc%2Fdoc%2Finstall.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finstall.texi?ref=61aeb06fe596bd822b665d65a271804efdaf0053", "patch": "@@ -2111,7 +2111,7 @@ require GNU binutils 2.13 or newer.  Such subtargets include:\n <hr />\n @end html\n @heading @anchor{arm-*-coff}arm-*-coff\n-ARM-family processors.  Note that there are two diffierent varieties\n+ARM-family processors.  Note that there are two different varieties\n of PE format subtarget supported: @code{arm-wince-pe} and\n @code{arm-pe} as well as a standard COFF target @code{arm-*-coff}.\n "}, {"sha": "9518e0f54a5dc5bd836c211a402f02eabd863a81", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/61aeb06fe596bd822b665d65a271804efdaf0053/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/61aeb06fe596bd822b665d65a271804efdaf0053/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=61aeb06fe596bd822b665d65a271804efdaf0053", "patch": "@@ -3954,7 +3954,7 @@ sense when scheduling before register allocation, i.e.@: with\n \n @item -fsched2-use-superblocks\n @opindex fsched2-use-superblocks\n-When schedulilng after register allocation, do use superblock scheduling\n+When scheduling after register allocation, do use superblock scheduling\n algorithm.  Superblock scheduling allows motion across basic block boundaries\n resulting on faster schedules.  This option is experimental, as not all machine\n descriptions used by GCC model the CPU closely enough to avoid unreliable"}, {"sha": "9fea987a04d219bfe4ce6617ef907738d2250510", "filename": "gcc/doc/tm.texi", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/61aeb06fe596bd822b665d65a271804efdaf0053/gcc%2Fdoc%2Ftm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/61aeb06fe596bd822b665d65a271804efdaf0053/gcc%2Fdoc%2Ftm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Ftm.texi?ref=61aeb06fe596bd822b665d65a271804efdaf0053", "patch": "@@ -3256,7 +3256,7 @@ If this macro is not defined, it defaults to\n \n Define this macro if the target's representation for dwarf registers\n is different than the internal representation for unwind column.\n-Given a dwarf register, this macro should return the interal unwind\n+Given a dwarf register, this macro should return the internal unwind\n column number to use instead.\n \n See the PowerPC's SPE target for an example.  "}]}