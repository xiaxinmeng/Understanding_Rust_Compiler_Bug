{"sha": "841fc5a1153cb54372023fe81978fcfa6adc33ae", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODQxZmM1YTExNTNjYjU0MzcyMDIzZmU4MTk3OGZjZmE2YWRjMzNhZQ==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1996-05-19T16:24:50Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1996-05-19T16:24:50Z"}, "message": "Include insn-flags.h.\n\nAdd prototypes for static functions.\n(gen_jump, gen_movdf, gen_movxf): Delete redundant declarations.\n(find_regno_note, emit_jump_insn_before, emit_label_after): Likewise.\n(swap_rtx_condition): Now static.\n\nFrom-SVN: r12046", "tree": {"sha": "e0ecdaaa5bb0302cafb143c8a48eac5470d4171e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e0ecdaaa5bb0302cafb143c8a48eac5470d4171e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/841fc5a1153cb54372023fe81978fcfa6adc33ae", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/841fc5a1153cb54372023fe81978fcfa6adc33ae", "html_url": "https://github.com/Rust-GCC/gccrs/commit/841fc5a1153cb54372023fe81978fcfa6adc33ae", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/841fc5a1153cb54372023fe81978fcfa6adc33ae/comments", "author": null, "committer": null, "parents": [{"sha": "9e014ded891b0d68328c62f266877b8e8b281635", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9e014ded891b0d68328c62f266877b8e8b281635", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9e014ded891b0d68328c62f266877b8e8b281635"}], "stats": {"total": 52, "additions": 39, "deletions": 13}, "files": [{"sha": "51dd8f53a3cab9cea053ae9971fd6053ce6c24f9", "filename": "gcc/reg-stack.c", "status": "modified", "additions": 39, "deletions": 13, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/841fc5a1153cb54372023fe81978fcfa6adc33ae/gcc%2Freg-stack.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/841fc5a1153cb54372023fe81978fcfa6adc33ae/gcc%2Freg-stack.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freg-stack.c?ref=841fc5a1153cb54372023fe81978fcfa6adc33ae", "patch": "@@ -165,6 +165,7 @@ Boston, MA 02111-1307, USA.  */\n #include \"regs.h\"\n #include \"hard-reg-set.h\"\n #include \"flags.h\"\n+#include \"insn-flags.h\"\n \n #ifdef STACK_REGS\n \n@@ -231,21 +232,45 @@ static rtx\n    ? (abort() , -1) : block_number[INSN_UID (INSN)])\n \n extern rtx forced_labels;\n-extern rtx gen_jump ();\n-extern rtx gen_movdf (), gen_movxf ();\n-extern rtx find_regno_note ();\n-extern rtx emit_jump_insn_before ();\n-extern rtx emit_label_after ();\n \n /* Forward declarations */\n \n-static void find_blocks ();\n-static uses_reg_or_mem ();\n-static void stack_reg_life_analysis ();\n-static void record_reg_life_pat ();\n-static void change_stack ();\n-static void convert_regs ();\n-static void dump_stack_info ();\n+static void mark_regs_pat\t\tPROTO((rtx, HARD_REG_SET *));\n+static void straighten_stack\t\tPROTO((rtx, stack));\n+static void record_label_references\tPROTO((rtx, rtx));\n+static rtx *get_true_reg\t\tPROTO((rtx *));\n+static int constrain_asm_operands\tPROTO((int, rtx *, char **, int *,\n+\t\t\t\t\t       enum reg_class *));\n+\n+static void record_asm_reg_life\t\tPROTO((rtx,stack, rtx *, char **,\n+\t\t\t\t\t       int, int));\n+static void record_reg_life_pat\t\tPROTO((rtx, HARD_REG_SET *,\n+\t\t\t\t\t       HARD_REG_SET *, int));\n+static void get_asm_operand_length\tPROTO((rtx, int, int *, int *));\n+static void record_reg_life\t\tPROTO((rtx, int, stack));\n+static void find_blocks\t\t\tPROTO((rtx));\n+static int uses_reg_or_mem\t\tPROTO((rtx));\n+static rtx stack_result\t\t\tPROTO((tree));\n+static void stack_reg_life_analysis\tPROTO((rtx, HARD_REG_SET *));\n+static void replace_reg\t\t\tPROTO((rtx *, int));\n+static void remove_regno_note\t\tPROTO((rtx, enum reg_note, int));\n+static int get_hard_regnum\t\tPROTO((stack, rtx));\n+static void delete_insn_for_stacker\tPROTO((rtx));\n+static rtx emit_pop_insn\t\tPROTO((rtx, stack, rtx, rtx (*) ()));\n+static void emit_swap_insn\t\tPROTO((rtx, stack, rtx));\n+static void move_for_stack_reg\t\tPROTO((rtx, stack, rtx));\n+static void swap_rtx_condition\t\tPROTO((rtx));\n+static void compare_for_stack_reg\tPROTO((rtx, stack, rtx));\n+static void subst_stack_regs_pat\tPROTO((rtx, stack, rtx));\n+static void subst_asm_stack_regs\tPROTO((rtx, stack, rtx *, rtx **,\n+\t\t\t\t\t       char **, int, int));\n+static void subst_stack_regs\t\tPROTO((rtx, stack));\n+static void change_stack\t\tPROTO((rtx, stack, stack, rtx (*) ()));\n+\n+static void goto_block_pat\t\tPROTO((rtx, stack, rtx));\n+static void convert_regs\t\tPROTO((void));\n+static void print_blocks\t\tPROTO((FILE *, rtx, rtx));\n+static void dump_stack_info\t\tPROTO((FILE *));\n \f\n /* Mark all registers needed for this pattern.  */\n \n@@ -1947,7 +1972,7 @@ move_for_stack_reg (insn, regstack, pat)\n     abort ();\n }\n \f\n-void\n+static void\n swap_rtx_condition (pat)\n      rtx pat;\n {\n@@ -3075,6 +3100,7 @@ print_blocks (file, insn, pat)\n \f\n /* Write information about stack registers and stack blocks into FILE.\n    This is part of making a debugging dump.  */\n+\n static void\n dump_stack_info (file)\n      FILE *file;"}]}