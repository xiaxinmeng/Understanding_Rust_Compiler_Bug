{"sha": "f36b315d1070bfaddbfcf9ee1cb08dc192aaf1c3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjM2YjMxNWQxMDcwYmZhZGRiZmNmOWVlMWNiMDhkYzE5MmFhZjFjMw==", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2017-09-03T21:13:35Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2017-09-03T21:13:35Z"}, "message": "mpx-check.h (main): Use __get_cpuid_count and return NORUNRES on failure.\n\n\t* gcc.target/i386/mpx/mpx-check.h (main): Use __get_cpuid_count\n\tand return NORUNRES on failure.\n\t* gcc.target/i386/mpx/va-arg-pack-1-lbv.c (foo1): Use\n\t__builtin_va_arg_pack instead of __va_arg_pack.\n\t* gcc.target/i386/mpx/va-arg-pack-1-nov.c (foo1): Ditto.\n\t* gcc.target/i386/mpx/va-arg-pack-1-ubv.c (foo1): Ditto.\n\t* gcc.target/i386/mpx/va-arg-pack-2-lbv.c (foo1): Ditto.\n\t* gcc.target/i386/mpx/va-arg-pack-2-nov.c (foo1): Ditto.\n\t* gcc.target/i386/mpx/va-arg-pack-2-ubv.c (foo1): Ditto.\n\nFrom-SVN: r251627", "tree": {"sha": "ad28d36dc723454d22712966e9eec47510180581", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ad28d36dc723454d22712966e9eec47510180581"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f36b315d1070bfaddbfcf9ee1cb08dc192aaf1c3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f36b315d1070bfaddbfcf9ee1cb08dc192aaf1c3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f36b315d1070bfaddbfcf9ee1cb08dc192aaf1c3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f36b315d1070bfaddbfcf9ee1cb08dc192aaf1c3/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "22140cb0d746d5d7a18f11f864baa53a95c15bdc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/22140cb0d746d5d7a18f11f864baa53a95c15bdc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/22140cb0d746d5d7a18f11f864baa53a95c15bdc"}], "stats": {"total": 30, "additions": 20, "deletions": 10}, "files": [{"sha": "18e7739b4a7029efe8a038ea9be1c054b49e6534", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f36b315d1070bfaddbfcf9ee1cb08dc192aaf1c3/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f36b315d1070bfaddbfcf9ee1cb08dc192aaf1c3/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=f36b315d1070bfaddbfcf9ee1cb08dc192aaf1c3", "patch": "@@ -1,3 +1,15 @@\n+2017-09-03  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* gcc.target/i386/mpx/mpx-check.h (main): Use __get_cpuid_count\n+\tand return NORUNRES on failure.\n+\t* gcc.target/i386/mpx/va-arg-pack-1-lbv.c (foo1): Use\n+\t__builtin_va_arg_pack instead of __va_arg_pack.\n+\t* gcc.target/i386/mpx/va-arg-pack-1-nov.c (foo1): Ditto.\n+\t* gcc.target/i386/mpx/va-arg-pack-1-ubv.c (foo1): Ditto.\n+\t* gcc.target/i386/mpx/va-arg-pack-2-lbv.c (foo1): Ditto.\n+\t* gcc.target/i386/mpx/va-arg-pack-2-nov.c (foo1): Ditto.\n+\t* gcc.target/i386/mpx/va-arg-pack-2-ubv.c (foo1): Ditto.\n+\n 2017-09-01  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR target/81766"}, {"sha": "dd90fbd275abce9e4ca50d971c078c0957634e62", "filename": "gcc/testsuite/gcc.target/i386/mpx/mpx-check.h", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f36b315d1070bfaddbfcf9ee1cb08dc192aaf1c3/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fmpx%2Fmpx-check.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f36b315d1070bfaddbfcf9ee1cb08dc192aaf1c3/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fmpx%2Fmpx-check.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fmpx%2Fmpx-check.h?ref=f36b315d1070bfaddbfcf9ee1cb08dc192aaf1c3", "patch": "@@ -31,10 +31,8 @@ main (int argc, const char **argv)\n {\n   unsigned int eax, ebx, ecx, edx;\n \n-  if (__get_cpuid_max (0, NULL) < 7)\n-    return 0;\n-\n-  __cpuid_count (7, 0, eax, ebx, ecx, edx);\n+  if (!__get_cpuid_count (7, 0, &eax, &ebx, &ecx, &edx))\n+    return NORUNRES;\n \n   /* Run MPX test only if host has MPX support.  */\n   if ((ebx & bit_MPX) && (xgetbv (0) & XSTATE_BNDREGS))"}, {"sha": "bbbb256ae30910010e55a560415b301ced9985b0", "filename": "gcc/testsuite/gcc.target/i386/mpx/va-arg-pack-1-lbv.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f36b315d1070bfaddbfcf9ee1cb08dc192aaf1c3/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fmpx%2Fva-arg-pack-1-lbv.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f36b315d1070bfaddbfcf9ee1cb08dc192aaf1c3/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fmpx%2Fva-arg-pack-1-lbv.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fmpx%2Fva-arg-pack-1-lbv.c?ref=f36b315d1070bfaddbfcf9ee1cb08dc192aaf1c3", "patch": "@@ -28,7 +28,7 @@ foo2 (int i1, int *p1, ...)\n static __attribute__((always_inline)) int\n foo1 (int *p1, ...)\n {\n-  return foo2 (10, p1, __va_arg_pack ());\n+  return foo2 (10, p1, __builtin_va_arg_pack ());\n }\n \n int prebuf[100];"}, {"sha": "4beda02b9515746b612ef81d8ed163450d23a07f", "filename": "gcc/testsuite/gcc.target/i386/mpx/va-arg-pack-1-nov.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f36b315d1070bfaddbfcf9ee1cb08dc192aaf1c3/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fmpx%2Fva-arg-pack-1-nov.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f36b315d1070bfaddbfcf9ee1cb08dc192aaf1c3/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fmpx%2Fva-arg-pack-1-nov.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fmpx%2Fva-arg-pack-1-nov.c?ref=f36b315d1070bfaddbfcf9ee1cb08dc192aaf1c3", "patch": "@@ -25,7 +25,7 @@ foo2 (int i1, int *p1, ...)\n static __attribute__((always_inline)) int\n foo1 (int *p1, ...)\n {\n-  return foo2 (10, p1, __va_arg_pack ());\n+  return foo2 (10, p1, __builtin_va_arg_pack ());\n }\n \n int prebuf[100];"}, {"sha": "4b76384275568d00e986a6354c25faddf0e76012", "filename": "gcc/testsuite/gcc.target/i386/mpx/va-arg-pack-1-ubv.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f36b315d1070bfaddbfcf9ee1cb08dc192aaf1c3/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fmpx%2Fva-arg-pack-1-ubv.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f36b315d1070bfaddbfcf9ee1cb08dc192aaf1c3/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fmpx%2Fva-arg-pack-1-ubv.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fmpx%2Fva-arg-pack-1-ubv.c?ref=f36b315d1070bfaddbfcf9ee1cb08dc192aaf1c3", "patch": "@@ -28,7 +28,7 @@ foo2 (int i1, int *p1, ...)\n static __attribute__((always_inline)) int\n foo1 (int *p1, ...)\n {\n-  return foo2 (10, p1, __va_arg_pack ());\n+  return foo2 (10, p1, __builtin_va_arg_pack ());\n }\n \n int prebuf[100];"}, {"sha": "dab1dc86792a394b445b4f04105aac0fb24c59df", "filename": "gcc/testsuite/gcc.target/i386/mpx/va-arg-pack-2-lbv.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f36b315d1070bfaddbfcf9ee1cb08dc192aaf1c3/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fmpx%2Fva-arg-pack-2-lbv.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f36b315d1070bfaddbfcf9ee1cb08dc192aaf1c3/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fmpx%2Fva-arg-pack-2-lbv.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fmpx%2Fva-arg-pack-2-lbv.c?ref=f36b315d1070bfaddbfcf9ee1cb08dc192aaf1c3", "patch": "@@ -30,7 +30,7 @@ foo2 (int i1, int *p1, ...)\n static __attribute__((always_inline)) int\n foo1 (int *p1, ...)\n {\n-  return foo2 (10, p1, __va_arg_pack ());\n+  return foo2 (10, p1, __builtin_va_arg_pack ());\n }\n \n int prebuf[100];"}, {"sha": "6bf4721f75adfcbfc926832e83cf1d765d4d40b8", "filename": "gcc/testsuite/gcc.target/i386/mpx/va-arg-pack-2-nov.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f36b315d1070bfaddbfcf9ee1cb08dc192aaf1c3/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fmpx%2Fva-arg-pack-2-nov.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f36b315d1070bfaddbfcf9ee1cb08dc192aaf1c3/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fmpx%2Fva-arg-pack-2-nov.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fmpx%2Fva-arg-pack-2-nov.c?ref=f36b315d1070bfaddbfcf9ee1cb08dc192aaf1c3", "patch": "@@ -27,7 +27,7 @@ foo2 (int i1, int *p1, ...)\n static __attribute__((always_inline)) int\n foo1 (int *p1, ...)\n {\n-  return foo2 (10, p1, __va_arg_pack ());\n+  return foo2 (10, p1, __builtin_va_arg_pack ());\n }\n \n int prebuf[100];"}, {"sha": "4af59758fb01eaf654c8dd823e141c36790791a8", "filename": "gcc/testsuite/gcc.target/i386/mpx/va-arg-pack-2-ubv.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f36b315d1070bfaddbfcf9ee1cb08dc192aaf1c3/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fmpx%2Fva-arg-pack-2-ubv.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f36b315d1070bfaddbfcf9ee1cb08dc192aaf1c3/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fmpx%2Fva-arg-pack-2-ubv.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fmpx%2Fva-arg-pack-2-ubv.c?ref=f36b315d1070bfaddbfcf9ee1cb08dc192aaf1c3", "patch": "@@ -30,7 +30,7 @@ foo2 (int i1, int *p1, ...)\n static __attribute__((always_inline)) int\n foo1 (int *p1, ...)\n {\n-  return foo2 (10, p1, __va_arg_pack ());\n+  return foo2 (10, p1, __builtin_va_arg_pack ());\n }\n \n int prebuf[100];"}]}