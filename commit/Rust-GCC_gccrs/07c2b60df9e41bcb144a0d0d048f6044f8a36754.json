{"sha": "07c2b60df9e41bcb144a0d0d048f6044f8a36754", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDdjMmI2MGRmOWU0MWJjYjE0NGEwZDBkMDQ4ZjYwNDRmOGEzNjc1NA==", "commit": {"author": {"name": "Paolo Carlini", "email": "pcarlini@unitus.it", "date": "2003-04-21T21:44:44Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2003-04-21T21:44:44Z"}, "message": "Consistently use _M_in_beg instead of eback(), _M_in_cur instead of gptr(), and so on.\n\n2003-04-21  Paolo Carlini  <pcarlini@unitus.it>\n\n\tConsistently use _M_in_beg instead of eback(), _M_in_cur\n\tinstead of gptr(), and so on.\n\t* include/bits/fstream.tcc (pbackfail, imbue): Here.\n\t* include/bits/sstream.tcc (pbackfail, seekoff, seekpos): Ditto.\n\t* include/bits/streambuf.tcc (sbumpc, sputbackc,\n\t__copy_streambufs): Ditto.\n\t* include/std/std_streambuf.h (sgetc): Ditto.\n\nFrom-SVN: r65909", "tree": {"sha": "712fb1d95e06ab7ade2c9c54c8dae5d8908fb9d4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/712fb1d95e06ab7ade2c9c54c8dae5d8908fb9d4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/07c2b60df9e41bcb144a0d0d048f6044f8a36754", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/07c2b60df9e41bcb144a0d0d048f6044f8a36754", "html_url": "https://github.com/Rust-GCC/gccrs/commit/07c2b60df9e41bcb144a0d0d048f6044f8a36754", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/07c2b60df9e41bcb144a0d0d048f6044f8a36754/comments", "author": null, "committer": null, "parents": [{"sha": "63f60ecb140af7ca96f4971ab2e190a3d3d6e389", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/63f60ecb140af7ca96f4971ab2e190a3d3d6e389", "html_url": "https://github.com/Rust-GCC/gccrs/commit/63f60ecb140af7ca96f4971ab2e190a3d3d6e389"}], "stats": {"total": 48, "additions": 30, "deletions": 18}, "files": [{"sha": "de76c79196d7ac46ab5655765dccefc3ef413b00", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07c2b60df9e41bcb144a0d0d048f6044f8a36754/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07c2b60df9e41bcb144a0d0d048f6044f8a36754/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=07c2b60df9e41bcb144a0d0d048f6044f8a36754", "patch": "@@ -1,3 +1,13 @@\n+2003-04-21  Paolo Carlini  <pcarlini@unitus.it>\n+\n+\tConsistently use _M_in_beg instead of eback(), _M_in_cur\n+\tinstead of gptr(), and so on.\n+\t* include/bits/fstream.tcc (pbackfail, imbue): Here.\n+\t* include/bits/sstream.tcc (pbackfail, seekoff, seekpos): Ditto.\n+\t* include/bits/streambuf.tcc (sbumpc, sputbackc,\n+\t__copy_streambufs): Ditto.\n+\t* include/std/std_streambuf.h (sgetc): Ditto.\n+\n 2003-04-21  Paolo Carlini  <pcarlini@unitus.it>\n \n \t* include/bits/sstream.tcc (pbackfail, overflow):"}, {"sha": "fc8ca7ab3644fdd346e6b0f200cd647a200b5d8c", "filename": "libstdc++-v3/include/bits/fstream.tcc", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07c2b60df9e41bcb144a0d0d048f6044f8a36754/libstdc%2B%2B-v3%2Finclude%2Fbits%2Ffstream.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07c2b60df9e41bcb144a0d0d048f6044f8a36754/libstdc%2B%2B-v3%2Finclude%2Fbits%2Ffstream.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Ffstream.tcc?ref=07c2b60df9e41bcb144a0d0d048f6044f8a36754", "patch": "@@ -189,7 +189,7 @@ namespace std\n \t  if (__testpb)\n \t    {\n \t      const bool __testout = this->_M_mode & ios_base::out;\n-\t      const bool __testeq = traits_type::eq(__c, this->gptr()[-1]);\n+\t      const bool __testeq = traits_type::eq(__c, this->_M_in_cur[-1]);\n \n \t      // Try to put back __c into input sequence in one of three ways.\n \t      // Order these tests done in is unspecified by the standard.\n@@ -520,7 +520,8 @@ namespace std\n     basic_filebuf<_CharT, _Traits>::\n     imbue(const locale& __loc)\n     {\n-      const bool __testbeg = gptr() == eback() && pptr() == pbase();\n+      const bool __testbeg = this->_M_in_cur == this->_M_in_beg\n+\t                     && this->_M_out_cur == this->_M_out_beg;\n \n       if (__testbeg && this->_M_buf_locale != __loc)\n \tthis->_M_buf_locale = __loc;"}, {"sha": "a138d25194070ca5cf0f9ff0da9afb7385d1b17f", "filename": "libstdc++-v3/include/bits/sstream.tcc", "status": "modified", "additions": 10, "deletions": 9, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07c2b60df9e41bcb144a0d0d048f6044f8a36754/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fsstream.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07c2b60df9e41bcb144a0d0d048f6044f8a36754/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fsstream.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fsstream.tcc?ref=07c2b60df9e41bcb144a0d0d048f6044f8a36754", "patch": "@@ -55,7 +55,8 @@ namespace std\n       // Order these tests done in is unspecified by the standard.\n       if (__testpos)\n \t{\n-\t  if (traits_type::eq(traits_type::to_char_type(__c), this->gptr()[-1])\n+\t  if (traits_type::eq(traits_type::to_char_type(__c),\n+\t\t\t      this->_M_in_cur[-1])\n \t      && !__testeof)\n \t    {\n \t      --this->_M_in_cur;\n@@ -139,14 +140,14 @@ namespace std\n \n \t  if (__testin || __testboth)\n \t    {\n-\t      __curi = this->gptr();\n-\t      __endi = this->egptr();\n+\t      __curi = this->_M_in_cur;\n+\t      __endi = this->_M_in_end;\n \t    }\n \t  if (__testout || __testboth)\n \t    {\n-\t      __curo = this->pptr();\n+\t      __curo = this->_M_out_cur;\n \t      // Due to the resolution of DR169, ios_base::end\n-\t      // is this->_M_out_lim, not epptr().\n+\t      // is this->_M_out_lim, not _M_out_end.\n \t      __endo = this->_M_out_lim;\n \t    }\n \n@@ -199,15 +200,15 @@ namespace std\n \t  bool __testposo = false;\n \t  if (__testin)\n \t    {\n-\t      __beg = this->eback();\n-\t      __end = this->egptr();\n+\t      __beg = this->_M_in_beg;\n+\t      __end = this->_M_in_end;\n \t      if (0 <= __pos && __pos <= __end - __beg)\n \t\t__testposi = true;\n \t    }\n \t  if (__testout)\n \t    {\n-\t      __beg = this->pbase();\n-\t      __end = this->epptr();\n+\t      __beg = this->_M_out_beg;\n+\t      __end = this->_M_out_end;\n \t      if (0 <= __pos && __pos <= __end - __beg)\n \t\t__testposo = true;\n \t    }"}, {"sha": "06e2f504704e1df78fc3e1ed2d37b24b7baee673", "filename": "libstdc++-v3/include/bits/streambuf.tcc", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07c2b60df9e41bcb144a0d0d048f6044f8a36754/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstreambuf.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07c2b60df9e41bcb144a0d0d048f6044f8a36754/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstreambuf.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstreambuf.tcc?ref=07c2b60df9e41bcb144a0d0d048f6044f8a36754", "patch": "@@ -51,7 +51,7 @@ namespace std\n       int_type __ret;\n       if (_M_in_cur < _M_in_end)\n \t{\n-\t  char_type __c = *(this->gptr());\n+\t  char_type __c = *this->_M_in_cur;\n \t  _M_in_cur_move(1);\n \t  __ret = traits_type::to_int_type(__c);\n \t}\n@@ -67,12 +67,12 @@ namespace std\n     {\n       int_type __ret;\n       const bool __testpos = _M_in_beg < _M_in_cur;\n-      if (!__testpos || !traits_type::eq(__c, this->gptr()[-1]))\n+      if (!__testpos || !traits_type::eq(__c, this->_M_in_cur[-1]))\n \t__ret = this->pbackfail(traits_type::to_int_type(__c));\n       else \n \t{\n \t  _M_in_cur_move(-1);\n-\t  __ret = traits_type::to_int_type(*this->gptr());\n+\t  __ret = traits_type::to_int_type(*this->_M_in_cur);\n \t}\n       return __ret;\n     }\n@@ -201,10 +201,10 @@ namespace std\n \t{\n \t  while (__in_avail != -1)\n   \t    {\n- \t      if (__in_avail != 0 && __sbin->gptr()\n-\t\t  && __sbin->gptr() + __in_avail <= __sbin->egptr()) \n+ \t      if (__in_avail != 0 && __sbin->_M_in_cur\n+\t\t  && __sbin->_M_in_cur + __in_avail <= __sbin->_M_in_end) \n \t\t{\n-\t\t  __xtrct = __sbout->sputn(__sbin->gptr(), __in_avail);\n+\t\t  __xtrct = __sbout->sputn(__sbin->_M_in_cur, __in_avail);\n \t\t  __ret += __xtrct;\n \t\t  __sbin->_M_in_cur_move(__xtrct);\n \t\t  if (__xtrct != __in_avail)"}, {"sha": "5409b7515c395951f24550d291f4313fdf6f1116", "filename": "libstdc++-v3/include/std/std_streambuf.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07c2b60df9e41bcb144a0d0d048f6044f8a36754/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_streambuf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07c2b60df9e41bcb144a0d0d048f6044f8a36754/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_streambuf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_streambuf.h?ref=07c2b60df9e41bcb144a0d0d048f6044f8a36754", "patch": "@@ -453,7 +453,7 @@ namespace std\n       {\n \tint_type __ret;\n \tif (_M_in_cur < _M_in_end)\n-\t  __ret = traits_type::to_int_type(*(this->gptr()));\n+\t  __ret = traits_type::to_int_type(*this->_M_in_cur);\n \telse \n \t  __ret = this->underflow();\n \treturn __ret;"}]}