{"sha": "6cd1dd26753a93d9916335a6f698857915d273c2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmNkMWRkMjY3NTNhOTNkOTkxNjMzNWE2ZjY5ODg1NzkxNWQyNzNjMg==", "commit": {"author": {"name": "Vladimir Makarov", "email": "vmakarov@redhat.com", "date": "2012-11-01T19:02:40Z"}, "committer": {"name": "Vladimir Makarov", "email": "vmakarov@gcc.gnu.org", "date": "2012-11-01T19:02:40Z"}, "message": "re PR middle-end/55150 (Crash in copy_rtx)\n\n2012-11-01  Vladimir Makarov  <vmakarov@redhat.com>\n\n\tPR middle-end/55150\n\t* lra-constraints.c (lra_constraints): Check only pseudos with\n\tequivalences.  Add insns with equivalence pseudos.\n\n2012-11-01  Vladimir Makarov  <vmakarov@redhat.com>\n\n\tPR middle-end/55150\n\t* gcc.dg/pr55150.c: Rename to gcc.dg/pr55150-1.c.\n\t* gcc.dg/pr55150-2.c: New test.\n\nFrom-SVN: r193065", "tree": {"sha": "425cf64a79a53b2e6a02bc6d55115af879f51789", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/425cf64a79a53b2e6a02bc6d55115af879f51789"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6cd1dd26753a93d9916335a6f698857915d273c2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6cd1dd26753a93d9916335a6f698857915d273c2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6cd1dd26753a93d9916335a6f698857915d273c2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6cd1dd26753a93d9916335a6f698857915d273c2/comments", "author": {"login": "vnmakarov", "id": 9855671, "node_id": "MDQ6VXNlcjk4NTU2NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/9855671?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vnmakarov", "html_url": "https://github.com/vnmakarov", "followers_url": "https://api.github.com/users/vnmakarov/followers", "following_url": "https://api.github.com/users/vnmakarov/following{/other_user}", "gists_url": "https://api.github.com/users/vnmakarov/gists{/gist_id}", "starred_url": "https://api.github.com/users/vnmakarov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vnmakarov/subscriptions", "organizations_url": "https://api.github.com/users/vnmakarov/orgs", "repos_url": "https://api.github.com/users/vnmakarov/repos", "events_url": "https://api.github.com/users/vnmakarov/events{/privacy}", "received_events_url": "https://api.github.com/users/vnmakarov/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "eb1325a42d54328fba8dc5af0346ef9cdafbeef0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eb1325a42d54328fba8dc5af0346ef9cdafbeef0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eb1325a42d54328fba8dc5af0346ef9cdafbeef0"}], "stats": {"total": 82, "additions": 79, "deletions": 3}, "files": [{"sha": "6782cad7832be45ced47ce9ccd8edec98ff99c31", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6cd1dd26753a93d9916335a6f698857915d273c2/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6cd1dd26753a93d9916335a6f698857915d273c2/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6cd1dd26753a93d9916335a6f698857915d273c2", "patch": "@@ -1,3 +1,9 @@\n+2012-11-01  Vladimir Makarov  <vmakarov@redhat.com>\n+\n+\tPR middle-end/55150\n+\t* lra-constraints.c (lra_constraints): Check only pseudos with\n+\tequivalences.  Add insns with equivalence pseudos.\n+\n 2012-11-01  Sharad Singhai  <singhai@google.com>\n \n \tPR other/55164"}, {"sha": "afc49d75bdf9f9192dcac081d92c036111e33223", "filename": "gcc/lra-constraints.c", "status": "modified", "additions": 14, "deletions": 3, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6cd1dd26753a93d9916335a6f698857915d273c2/gcc%2Flra-constraints.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6cd1dd26753a93d9916335a6f698857915d273c2/gcc%2Flra-constraints.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flra-constraints.c?ref=6cd1dd26753a93d9916335a6f698857915d273c2", "patch": "@@ -3244,9 +3244,11 @@ lra_constraints (bool first_p)\n {\n   bool changed_p;\n   int i, hard_regno, new_insns_num;\n-  unsigned int min_len, new_min_len;\n-  rtx set, x, dest_reg;\n+  unsigned int min_len, new_min_len, uid;\n+  rtx set, x, reg, dest_reg;\n   basic_block last_bb;\n+  bitmap_head equiv_insn_bitmap;\n+  bitmap_iterator bi;\n \n   lra_constraint_iter++;\n   if (lra_dump_file != NULL)\n@@ -3261,18 +3263,20 @@ lra_constraints (bool first_p)\n   lra_risky_transformations_p = false;\n   new_insn_uid_start = get_max_uid ();\n   new_regno_start = first_p ? lra_constraint_new_regno_start : max_reg_num ();\n+  bitmap_initialize (&equiv_insn_bitmap, &reg_obstack);\n   for (i = FIRST_PSEUDO_REGISTER; i < new_regno_start; i++)\n     if (lra_reg_info[i].nrefs != 0)\n       {\n \tira_reg_equiv[i].profitable_p = true;\n+\treg = regno_reg_rtx[i];\n \tif ((hard_regno = lra_get_regno_hard_regno (i)) >= 0)\n \t  {\n \t    int j, nregs = hard_regno_nregs[hard_regno][PSEUDO_REGNO_MODE (i)];\n \n \t    for (j = 0; j < nregs; j++)\n \t      df_set_regs_ever_live (hard_regno + j, true);\n \t  }\n-\telse if ((x = get_equiv_substitution (regno_reg_rtx[i])) != NULL_RTX)\n+\telse if ((x = get_equiv_substitution (reg)) != reg)\n \t  {\n \t    bool pseudo_p = contains_reg_p (x, false, false);\n \t    rtx set, insn;\n@@ -3310,8 +3314,15 @@ lra_constraints (bool first_p)\n \t      ira_reg_equiv[i].defined_p = false;\n \t    if (contains_reg_p (x, false, true))\n \t      ira_reg_equiv[i].profitable_p = false;\n+\t    if (get_equiv_substitution (reg) != reg)\n+\t      bitmap_ior_into (&equiv_insn_bitmap, &lra_reg_info[i].insn_bitmap);\n \t  }\n       }\n+  /* We should add all insns containing pseudos which should be\n+     substituted by their equivalences.  */\n+  EXECUTE_IF_SET_IN_BITMAP (&equiv_insn_bitmap, 0, uid, bi)\n+    lra_push_insn_by_uid (uid);\n+  bitmap_clear (&equiv_insn_bitmap);\n   lra_eliminate (false);\n   min_len = lra_insn_stack_length ();\n   new_insns_num = 0;"}, {"sha": "2f63b8e01a4cc76ba9e4e28b41a9db0d4ecbc7fc", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6cd1dd26753a93d9916335a6f698857915d273c2/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6cd1dd26753a93d9916335a6f698857915d273c2/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=6cd1dd26753a93d9916335a6f698857915d273c2", "patch": "@@ -1,3 +1,9 @@\n+2012-11-01  Vladimir Makarov  <vmakarov@redhat.com>\n+\n+\tPR middle-end/55150\n+\t* gcc.dg/pr55150.c: Rename to gcc.dg/pr55150-1.c.\n+\t* gcc.dg/pr55150-2.c: New test.\n+\n 2012-11-01  Sharad Singhai  <singhai@google.com>\n \n \t* testsuite/gcc.dg/plugin/selfassign.c: Add opgtroup_flags initializer."}, {"sha": "b2bf357fdff5f820ac589ec9b4d9ef4d53eee2d4", "filename": "gcc/testsuite/gcc.dg/pr55150-1.c", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6cd1dd26753a93d9916335a6f698857915d273c2/gcc%2Ftestsuite%2Fgcc.dg%2Fpr55150-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6cd1dd26753a93d9916335a6f698857915d273c2/gcc%2Ftestsuite%2Fgcc.dg%2Fpr55150-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr55150-1.c?ref=6cd1dd26753a93d9916335a6f698857915d273c2", "previous_filename": "gcc/testsuite/gcc.dg/pr55150.c"}, {"sha": "48dbb537f1730d68c8efa7ed1656ea3b177cbdda", "filename": "gcc/testsuite/gcc.dg/pr55150-2.c", "status": "added", "additions": 53, "deletions": 0, "changes": 53, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6cd1dd26753a93d9916335a6f698857915d273c2/gcc%2Ftestsuite%2Fgcc.dg%2Fpr55150-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6cd1dd26753a93d9916335a6f698857915d273c2/gcc%2Ftestsuite%2Fgcc.dg%2Fpr55150-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr55150-2.c?ref=6cd1dd26753a93d9916335a6f698857915d273c2", "patch": "@@ -0,0 +1,53 @@\n+/* PR middle-end/55150 */\n+/* { dg-do compile } */\n+/* { dg-options \"-Os -g -fPIC\" } */\n+\n+typedef unsigned char DES_cblock[8];\n+ typedef struct DES_ks {\n+ }\n+ DES_key_schedule;\n+ void DES_ede3_cbcm_encrypt (const unsigned char *in, unsigned char *out, \t\t       long length, DES_key_schedule * ks1, \t\t       DES_key_schedule * ks2, DES_key_schedule * ks3, \t\t       DES_cblock * ivec1, DES_cblock * ivec2, int enc) {\n+   register unsigned long tout0, tout1, xor0, xor1, m0, m1;\n+   register long l = length;\n+   unsigned long tin[2];\n+   unsigned char *iv1, *iv2;\n+   iv1 = &(*ivec1)[0];\n+   iv2 = &(*ivec2)[0];\n+   if (enc)     {\n+       (m0 = ((unsigned long) (*((iv1)++))), m0 |=        ((unsigned long) (*((iv1)++))) << 8L, m0 |=        ((unsigned long) (*((iv1)++))) << 16L, m0 |=        ((unsigned long) (*((iv1)++))) << 24L);\n+       (m1 = ((unsigned long) (*((iv1)++))), m1 |=        ((unsigned long) (*((iv1)++))) << 8L, m1 |=        ((unsigned long) (*((iv1)++))) << 16L, m1 |=        ((unsigned long) (*((iv1)++))) << 24L);\n+       (tout0 = ((unsigned long) (*((iv2)++))), tout0 |=        ((unsigned long) (*((iv2)++))) << 8L, tout0 |=        ((unsigned long) (*((iv2)++))) << 16L, tout0 |=        ((unsigned long) (*((iv2)++))) << 24L);\n+       for (l -= 8;\n+ l >= -7;\n+ l -= 8) \t{\n+ \t  DES_encrypt1 (tin, ks3, 1);\n+ \t  DES_encrypt1 (tin, ks1, 1);\n+ \t}\n+       (*((iv1)++) = (unsigned char) (((m0)) & 0xff), *((iv1)++) =        (unsigned char) (((m0) >> 8L) & 0xff), *((iv1)++) =        (unsigned char) (((m0) >> 16L) & 0xff), *((iv1)++) =        (unsigned char) (((m0) >> 24L) & 0xff));\n+       (*((iv1)++) = (unsigned char) (((m1)) & 0xff), *((iv1)++) =        (unsigned char) (((m1) >> 8L) & 0xff), *((iv1)++) =        (unsigned char) (((m1) >> 16L) & 0xff), *((iv1)++) =        (unsigned char) (((m1) >> 24L) & 0xff));\n+       (*((iv2)++) = (unsigned char) (((tout0)) & 0xff), *((iv2)++) =        (unsigned char) (((tout0) >> 8L) & 0xff), *((iv2)++) =        (unsigned char) (((tout0) >> 16L) & 0xff), *((iv2)++) =        (unsigned char) (((tout0) >> 24L) & 0xff));\n+     }\n+   else     {\n+       (m0 = ((unsigned long) (*((iv1)++))), m0 |=        ((unsigned long) (*((iv1)++))) << 8L, m0 |=        ((unsigned long) (*((iv1)++))) << 16L, m0 |=        ((unsigned long) (*((iv1)++))) << 24L);\n+       (xor1 = ((unsigned long) (*((iv2)++))), xor1 |=        ((unsigned long) (*((iv2)++))) << 8L, xor1 |=        ((unsigned long) (*((iv2)++))) << 16L, xor1 |=        ((unsigned long) (*((iv2)++))) << 24L);\n+       for (l -= 8;\n+ l >= -7;\n+ l -= 8) \t{\n+ \t  DES_encrypt1 (tin, ks3, 1);\n+ \t  if (l < 0) \t    {\n+ \t      {\n+ \t\tswitch (l + 8) \t\t  {\n+ \t\t  case 7: \t\t    *(--(out)) = (unsigned char) (((tout1) >> 16L) & 0xff);\n+ \t\t  case 6: \t\t    *(--(out)) = (unsigned char) (((tout1) >> 8L) & 0xff);\n+ \t\t  case 5: \t\t    *(--(out)) = (unsigned char) (((tout1)) & 0xff);\n+ \t\t  case 4: \t\t    *(--(out)) = (unsigned char) (((tout0) >> 24L) & 0xff);\n+ \t\t  case 1: \t\t    *(--(out)) = (unsigned char) (((tout0)) & 0xff);\n+ \t\t  }\n+ \t      };\n+ \t    }\n+ \t}\n+       (*((iv1)++) = (unsigned char) (((m0)) & 0xff), *((iv1)++) =        (unsigned char) (((m0) >> 8L) & 0xff), *((iv1)++) =        (unsigned char) (((m0) >> 16L) & 0xff), *((iv1)++) =        (unsigned char) (((m0) >> 24L) & 0xff));\n+       (*((iv2)++) = (unsigned char) (((xor0)) & 0xff), *((iv2)++) =        (unsigned char) (((xor0) >> 8L) & 0xff), *((iv2)++) =        (unsigned char) (((xor0) >> 16L) & 0xff), *((iv2)++) =        (unsigned char) (((xor0) >> 24L) & 0xff));\n+       (*((iv2)++) = (unsigned char) (((xor1)) & 0xff), *((iv2)++) =        (unsigned char) (((xor1) >> 8L) & 0xff), *((iv2)++) =        (unsigned char) (((xor1) >> 16L) & 0xff), *((iv2)++) =        (unsigned char) (((xor1) >> 24L) & 0xff));\n+     }\n+ }"}]}