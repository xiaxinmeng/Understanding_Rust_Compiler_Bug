{"sha": "457186f6d55cc813cdb1cdcbfd75457930dacbd2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDU3MTg2ZjZkNTVjYzgxM2NkYjFjZGNiZmQ3NTQ1NzkzMGRhY2JkMg==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "iant@google.com", "date": "2011-03-07T21:47:10Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2011-03-07T21:47:10Z"}, "message": "generic-morestack.c (__splitstack_find): Adjust returned stack pointer to include all registers pushed by __morestack.\n\n\t* generic-morestack.c (__splitstack_find): Adjust returned stack\n\tpointer to include all registers pushed by __morestack.\n\nFrom-SVN: r170757", "tree": {"sha": "81db746c26ee9cb9243c5204593fc2d98b7950f0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/81db746c26ee9cb9243c5204593fc2d98b7950f0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/457186f6d55cc813cdb1cdcbfd75457930dacbd2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/457186f6d55cc813cdb1cdcbfd75457930dacbd2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/457186f6d55cc813cdb1cdcbfd75457930dacbd2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/457186f6d55cc813cdb1cdcbfd75457930dacbd2/comments", "author": null, "committer": null, "parents": [{"sha": "c7e529d3bc34424e0b0686854f2a4db42286ea9c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c7e529d3bc34424e0b0686854f2a4db42286ea9c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c7e529d3bc34424e0b0686854f2a4db42286ea9c"}], "stats": {"total": 29, "additions": 19, "deletions": 10}, "files": [{"sha": "4092218f587aaee041e22abe6b9a5dbda8cbab2e", "filename": "libgcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/457186f6d55cc813cdb1cdcbfd75457930dacbd2/libgcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/457186f6d55cc813cdb1cdcbfd75457930dacbd2/libgcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2FChangeLog?ref=457186f6d55cc813cdb1cdcbfd75457930dacbd2", "patch": "@@ -1,3 +1,8 @@\n+2011-03-07  Ian Lance Taylor  <iant@google.com>\n+\n+\t* generic-morestack.c (__splitstack_find): Adjust returned stack\n+\tpointer to include all registers pushed by __morestack.\n+\n 2011-01-26  Dave Korn  <dave.korn.cygwin@gmail.com>\n \n \tPR target/40125"}, {"sha": "7e29bbcf7481b261dbeedc66f52c4621a22f46ad", "filename": "libgcc/generic-morestack.c", "status": "modified", "additions": 14, "deletions": 10, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/457186f6d55cc813cdb1cdcbfd75457930dacbd2/libgcc%2Fgeneric-morestack.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/457186f6d55cc813cdb1cdcbfd75457930dacbd2/libgcc%2Fgeneric-morestack.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fgeneric-morestack.c?ref=457186f6d55cc813cdb1cdcbfd75457930dacbd2", "patch": "@@ -1,5 +1,5 @@\n /* Library support for -fsplit-stack.  */\n-/* Copyright (C) 2009, 2010 Free Software Foundation, Inc.\n+/* Copyright (C) 2009, 2010, 2011 Free Software Foundation, Inc.\n    Contributed by Ian Lance Taylor <iant@google.com>.\n \n This file is part of GCC.\n@@ -846,20 +846,24 @@ __splitstack_find (void *segment_arg, void *sp, size_t *len,\n          parameters       <- old_stack\n          return in f1\n \t return in f2\n-\t data pushed by __morestack\n+\t registers pushed by __morestack\n \n-     On x86, the data pushed by __morestack includes the saved value\n-     of the ebp/rbp register.  We want our caller to be able to see\n-     that value, which can not be found on any other stack.  So we\n-     adjust accordingly.  This may need to be tweaked for other\n-     targets.  */\n+     The registers pushed by __morestack may not be visible on any\n+     other stack, if we are being called by a signal handler\n+     immediately after the call to __morestack_unblock_signals.  We\n+     want to adjust our return value to include those registers.  This\n+     is target dependent.  */\n \n   nsp = (char *) segment->old_stack;\n-#ifdef STACK_GROWS_DOWNWARD\n-  nsp -= 3 * sizeof (void *);\n+\n+#if defined (__x86_64__)\n+  nsp -= 12 * sizeof (void *);\n+#elif defined (__i386__)\n+  nsp -= 6 * sizeof (void *);\n #else\n-  nsp += 3 * sizeof (void *);\n+#error \"unrecognized target\"\n #endif\n+\n   *next_sp = (void *) nsp;\n \n #ifdef STACK_GROWS_DOWNWARD"}]}