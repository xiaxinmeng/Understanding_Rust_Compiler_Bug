{"sha": "9d0e85af87d9e7fe3bd68d1647b7c47ad299f011", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWQwZTg1YWY4N2Q5ZTdmZTNiZDY4ZDE2NDdiN2M0N2FkMjk5ZjAxMQ==", "commit": {"author": {"name": "Steve Ellcey", "email": "sellcey@cavium.com", "date": "2017-12-14T18:30:38Z"}, "committer": {"name": "Steve Ellcey", "email": "sje@gcc.gnu.org", "date": "2017-12-14T18:30:38Z"}, "message": "Makefile.am (IFUNC_OPTIONS): Change aarch64 option from -march=armv8.1-a to -march=armv8-a+lse.\n\n2017-12-14  Steve Ellcey  <sellcey@cavium.com>\n\n\t* Makefile.am (IFUNC_OPTIONS): Change aarch64\n\toption from -march=armv8.1-a to -march=armv8-a+lse.\n\t* configure.ac (*aarch64*): Check to see if\n\tcompiler understands -march=armv8-a+lse option.\n\t* configure.tgt (*aarch64*): Only set try_ifunc\n\tif compiler understands -march=armv8-a+lse option.\n\t* Makefile.in: Regenerate.\n\t* testsuite/Makefile.in: Regenerate.\n\t* configure: Regenerate.\n\t* aclocal.m4: Regenerate.\n\nFrom-SVN: r255659", "tree": {"sha": "e5a3ca9f6062a7f43dd9730ab98439e6fe3ebc86", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e5a3ca9f6062a7f43dd9730ab98439e6fe3ebc86"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9d0e85af87d9e7fe3bd68d1647b7c47ad299f011", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9d0e85af87d9e7fe3bd68d1647b7c47ad299f011", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9d0e85af87d9e7fe3bd68d1647b7c47ad299f011", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9d0e85af87d9e7fe3bd68d1647b7c47ad299f011/comments", "author": {"login": "sellcey", "id": 25938520, "node_id": "MDQ6VXNlcjI1OTM4NTIw", "avatar_url": "https://avatars.githubusercontent.com/u/25938520?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sellcey", "html_url": "https://github.com/sellcey", "followers_url": "https://api.github.com/users/sellcey/followers", "following_url": "https://api.github.com/users/sellcey/following{/other_user}", "gists_url": "https://api.github.com/users/sellcey/gists{/gist_id}", "starred_url": "https://api.github.com/users/sellcey/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sellcey/subscriptions", "organizations_url": "https://api.github.com/users/sellcey/orgs", "repos_url": "https://api.github.com/users/sellcey/repos", "events_url": "https://api.github.com/users/sellcey/events{/privacy}", "received_events_url": "https://api.github.com/users/sellcey/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "2004617a8c2e67005230ebfcbdd1e4216b411bf1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2004617a8c2e67005230ebfcbdd1e4216b411bf1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2004617a8c2e67005230ebfcbdd1e4216b411bf1"}], "stats": {"total": 99, "additions": 94, "deletions": 5}, "files": [{"sha": "6e823a03eafa436c6050950b818e7165647e4bc6", "filename": "libatomic/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9d0e85af87d9e7fe3bd68d1647b7c47ad299f011/libatomic%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9d0e85af87d9e7fe3bd68d1647b7c47ad299f011/libatomic%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libatomic%2FChangeLog?ref=9d0e85af87d9e7fe3bd68d1647b7c47ad299f011", "patch": "@@ -1,3 +1,16 @@\n+2017-12-14  Steve Ellcey  <sellcey@cavium.com>\n+\n+\t* Makefile.am (IFUNC_OPTIONS): Change aarch64\n+\toption from -march=armv8.1-a to -march=armv8-a+lse.\n+\t* configure.ac (*aarch64*): Check to see if\n+\tcompiler understands -march=armv8-a+lse option.\n+\t* configure.tgt (*aarch64*): Only set try_ifunc\n+\tif compiler understands -march=armv8-a+lse option.\n+\t* Makefile.in: Regenerate.\n+\t* testsuite/Makefile.in: Regenerate.\n+\t* configure: Regenerate.\n+\t* aclocal.m4: Regenerate.\n+\n 2017-12-04  Steve Ellcey  <sellcey@cavium.com>\n \n \t* Makefile.am (ARCH_AARCH64_LINUX): Add IFUNC_OPTIONS and"}, {"sha": "21fd1bec1edcedac5cd4619950c01da366633593", "filename": "libatomic/Makefile.am", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9d0e85af87d9e7fe3bd68d1647b7c47ad299f011/libatomic%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9d0e85af87d9e7fe3bd68d1647b7c47ad299f011/libatomic%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libatomic%2FMakefile.am?ref=9d0e85af87d9e7fe3bd68d1647b7c47ad299f011", "patch": "@@ -123,7 +123,7 @@ libatomic_la_LIBADD = $(foreach s,$(SIZES),$(addsuffix _$(s)_.lo,$(SIZEOBJS)))\n ## On a target-specific basis, include alternates to be selected by IFUNC.\n if HAVE_IFUNC\n if ARCH_AARCH64_LINUX\n-IFUNC_OPTIONS\t     = -march=armv8.1-a\n+IFUNC_OPTIONS\t     = -march=armv8-a+lse\n libatomic_la_LIBADD += $(foreach s,$(SIZES),$(addsuffix _$(s)_1_.lo,$(SIZEOBJS)))\n endif\n if ARCH_ARM_LINUX"}, {"sha": "c8f38be5835cf6d2df28c009b428c70daf06f581", "filename": "libatomic/Makefile.in", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9d0e85af87d9e7fe3bd68d1647b7c47ad299f011/libatomic%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9d0e85af87d9e7fe3bd68d1647b7c47ad299f011/libatomic%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libatomic%2FMakefile.in?ref=9d0e85af87d9e7fe3bd68d1647b7c47ad299f011", "patch": "@@ -73,6 +73,7 @@ am__aclocal_m4_deps = $(top_srcdir)/../config/acx.m4 \\\n \t$(top_srcdir)/../config/multi.m4 \\\n \t$(top_srcdir)/../config/override.m4 \\\n \t$(top_srcdir)/../config/stdint.m4 \\\n+\t$(top_srcdir)/../config/warnings.m4 \\\n \t$(top_srcdir)/../ltoptions.m4 $(top_srcdir)/../ltsugar.m4 \\\n \t$(top_srcdir)/../ltversion.m4 $(top_srcdir)/../lt~obsolete.m4 \\\n \t$(top_srcdir)/acinclude.m4 $(top_srcdir)/../libtool.m4 \\\n@@ -258,6 +259,7 @@ datadir = @datadir@\n datarootdir = @datarootdir@\n docdir = @docdir@\n dvidir = @dvidir@\n+enable_aarch64_lse = @enable_aarch64_lse@\n enable_shared = @enable_shared@\n enable_static = @enable_static@\n exec_prefix = @exec_prefix@\n@@ -348,7 +350,7 @@ M_SRC = $(firstword $(filter %/$(M_FILE), $(all_c_files)))\n libatomic_la_LIBADD = $(foreach s,$(SIZES),$(addsuffix \\\n \t_$(s)_.lo,$(SIZEOBJS))) $(am__append_1) $(am__append_2) \\\n \t$(am__append_3) $(am__append_4)\n-@ARCH_AARCH64_LINUX_TRUE@@HAVE_IFUNC_TRUE@IFUNC_OPTIONS = -march=armv8.1-a\n+@ARCH_AARCH64_LINUX_TRUE@@HAVE_IFUNC_TRUE@IFUNC_OPTIONS = -march=armv8-a+lse\n @ARCH_ARM_LINUX_TRUE@@HAVE_IFUNC_TRUE@IFUNC_OPTIONS = -march=armv7-a+fp -DHAVE_KERNEL64\n @ARCH_I386_TRUE@@HAVE_IFUNC_TRUE@IFUNC_OPTIONS = -march=i586\n @ARCH_X86_64_TRUE@@HAVE_IFUNC_TRUE@IFUNC_OPTIONS = -mcx16"}, {"sha": "5affc51637a25fac51771506eb343329bf5c3283", "filename": "libatomic/aclocal.m4", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9d0e85af87d9e7fe3bd68d1647b7c47ad299f011/libatomic%2Faclocal.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9d0e85af87d9e7fe3bd68d1647b7c47ad299f011/libatomic%2Faclocal.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libatomic%2Faclocal.m4?ref=9d0e85af87d9e7fe3bd68d1647b7c47ad299f011", "patch": "@@ -1017,6 +1017,7 @@ m4_include([../config/lthostflags.m4])\n m4_include([../config/multi.m4])\n m4_include([../config/override.m4])\n m4_include([../config/stdint.m4])\n+m4_include([../config/warnings.m4])\n m4_include([../ltoptions.m4])\n m4_include([../ltsugar.m4])\n m4_include([../ltversion.m4])"}, {"sha": "47a9b985450add84f17272692fca0fb0cb5445e3", "filename": "libatomic/configure", "status": "modified", "additions": 65, "deletions": 2, "changes": 67, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9d0e85af87d9e7fe3bd68d1647b7c47ad299f011/libatomic%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9d0e85af87d9e7fe3bd68d1647b7c47ad299f011/libatomic%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libatomic%2Fconfigure?ref=9d0e85af87d9e7fe3bd68d1647b7c47ad299f011", "patch": "@@ -624,6 +624,7 @@ LIBAT_BUILD_VERSIONED_SHLIB_FALSE\n LIBAT_BUILD_VERSIONED_SHLIB_TRUE\n OPT_LDFLAGS\n SECTION_LDFLAGS\n+enable_aarch64_lse\n libtool_VERSION\n MAINT\n MAINTAINER_MODE_FALSE\n@@ -11120,7 +11121,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 11123 \"configure\"\n+#line 11124 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -11226,7 +11227,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 11229 \"configure\"\n+#line 11230 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -11522,6 +11523,68 @@ target_thread_file=`$CC -v 2>&1 | sed -n 's/^Thread model: //p'`\n { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $target_thread_file\" >&5\n $as_echo \"$target_thread_file\" >&6; }\n \n+case \"$target\" in\n+ *aarch64*)\n+    ac_ext=c\n+ac_cpp='$CPP $CPPFLAGS'\n+ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'\n+ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'\n+ac_compiler_gnu=$ac_cv_c_compiler_gnu\n+\n+enable_aarch64_lse=\n+save_CFLAGS=\"$CFLAGS\"\n+for real_option in -march=armv8-a+lse; do\n+  # Do the check with the no- prefix removed since gcc silently\n+  # accepts any -Wno-* option on purpose\n+  case $real_option in\n+    -Wno-*) option=-W`expr x$real_option : 'x-Wno-\\(.*\\)'` ;;\n+    *) option=$real_option ;;\n+  esac\n+  as_acx_Woption=`$as_echo \"acx_cv_prog_cc_warning_$option\" | $as_tr_sh`\n+\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether $CC supports $option\" >&5\n+$as_echo_n \"checking whether $CC supports $option... \" >&6; }\n+if { as_var=$as_acx_Woption; eval \"test \\\"\\${$as_var+set}\\\" = set\"; }; then :\n+  $as_echo_n \"(cached) \" >&6\n+else\n+  CFLAGS=\"$option\"\n+    cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+\n+int\n+main ()\n+{\n+\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+if ac_fn_c_try_compile \"$LINENO\"; then :\n+  eval \"$as_acx_Woption=yes\"\n+else\n+  eval \"$as_acx_Woption=no\"\n+fi\n+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n+\n+fi\n+eval ac_res=\\$$as_acx_Woption\n+\t       { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_res\" >&5\n+$as_echo \"$ac_res\" >&6; }\n+  if test `eval 'as_val=${'$as_acx_Woption'};$as_echo \"$as_val\"'` = yes; then :\n+  enable_aarch64_lse=\"$enable_aarch64_lse${enable_aarch64_lse:+ }$real_option\"\n+fi\n+  done\n+CFLAGS=\"$save_CFLAGS\"\n+ac_ext=c\n+ac_cpp='$CPP $CPPFLAGS'\n+ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'\n+ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'\n+ac_compiler_gnu=$ac_cv_c_compiler_gnu\n+\n+\n+    ;;\n+esac\n+\n # Get target configury.\n . ${srcdir}/configure.tgt\n if test -n \"$UNSUPPORTED\"; then"}, {"sha": "cee01985a15ff5d633e23cf28b2fa9a4c93a495c", "filename": "libatomic/configure.ac", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9d0e85af87d9e7fe3bd68d1647b7c47ad299f011/libatomic%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9d0e85af87d9e7fe3bd68d1647b7c47ad299f011/libatomic%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libatomic%2Fconfigure.ac?ref=9d0e85af87d9e7fe3bd68d1647b7c47ad299f011", "patch": "@@ -157,6 +157,12 @@ AC_MSG_CHECKING([for thread model used by GCC])\n target_thread_file=`$CC -v 2>&1 | sed -n 's/^Thread model: //p'`\n AC_MSG_RESULT([$target_thread_file])\n \n+case \"$target\" in\n+ *aarch64*)\n+    ACX_PROG_CC_WARNING_OPTS([-march=armv8-a+lse],[enable_aarch64_lse])\n+    ;;\n+esac\n+\n # Get target configury.\n . ${srcdir}/configure.tgt\n if test -n \"$UNSUPPORTED\"; then"}, {"sha": "2f3bcc9626c152fd5a2cde3de7da967e748cdf82", "filename": "libatomic/configure.tgt", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9d0e85af87d9e7fe3bd68d1647b7c47ad299f011/libatomic%2Fconfigure.tgt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9d0e85af87d9e7fe3bd68d1647b7c47ad299f011/libatomic%2Fconfigure.tgt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libatomic%2Fconfigure.tgt?ref=9d0e85af87d9e7fe3bd68d1647b7c47ad299f011", "patch": "@@ -44,7 +44,9 @@ case \"${target_cpu}\" in\n \tARCH=aarch64\n \tcase \"${target}\" in\n \t    aarch64*-*-linux*)\n-\t\ttry_ifunc=yes\n+\t\tif test -n \"$enable_aarch64_lse\"; then\n+\t\t    try_ifunc=yes\n+\t\tfi\n \t\t;;\n \tesac\n \t;;"}, {"sha": "0a7ac4b4dc7d0d57338156bd798356f64d89109a", "filename": "libatomic/testsuite/Makefile.in", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9d0e85af87d9e7fe3bd68d1647b7c47ad299f011/libatomic%2Ftestsuite%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9d0e85af87d9e7fe3bd68d1647b7c47ad299f011/libatomic%2Ftestsuite%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libatomic%2Ftestsuite%2FMakefile.in?ref=9d0e85af87d9e7fe3bd68d1647b7c47ad299f011", "patch": "@@ -61,6 +61,7 @@ am__aclocal_m4_deps = $(top_srcdir)/../config/acx.m4 \\\n \t$(top_srcdir)/../config/multi.m4 \\\n \t$(top_srcdir)/../config/override.m4 \\\n \t$(top_srcdir)/../config/stdint.m4 \\\n+\t$(top_srcdir)/../config/warnings.m4 \\\n \t$(top_srcdir)/../ltoptions.m4 $(top_srcdir)/../ltsugar.m4 \\\n \t$(top_srcdir)/../ltversion.m4 $(top_srcdir)/../lt~obsolete.m4 \\\n \t$(top_srcdir)/acinclude.m4 $(top_srcdir)/../libtool.m4 \\\n@@ -172,6 +173,7 @@ datadir = @datadir@\n datarootdir = @datarootdir@\n docdir = @docdir@\n dvidir = @dvidir@\n+enable_aarch64_lse = @enable_aarch64_lse@\n enable_shared = @enable_shared@\n enable_static = @enable_static@\n exec_prefix = @exec_prefix@"}]}