{"sha": "b73fd26c62b8c663b36f7953c4b35d60c07dbdcf", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjczZmQyNmM2MmI4YzY2M2IzNmY3OTUzYzRiMzVkNjBjMDdkYmRjZg==", "commit": {"author": {"name": "David Edelsohn", "email": "edelsohn@gnu.org", "date": "1996-01-22T18:55:08Z"}, "committer": {"name": "David Edelsohn", "email": "edelsohn@gnu.org", "date": "1996-01-22T18:55:08Z"}, "message": "update alignment\n\nFrom-SVN: r11079", "tree": {"sha": "d7f6c08d66f352ced86131ec453f8541d60f95c5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d7f6c08d66f352ced86131ec453f8541d60f95c5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b73fd26c62b8c663b36f7953c4b35d60c07dbdcf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b73fd26c62b8c663b36f7953c4b35d60c07dbdcf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b73fd26c62b8c663b36f7953c4b35d60c07dbdcf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b73fd26c62b8c663b36f7953c4b35d60c07dbdcf/comments", "author": null, "committer": null, "parents": [{"sha": "753eae35b534442bb2a20be7d7771b298055da6d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/753eae35b534442bb2a20be7d7771b298055da6d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/753eae35b534442bb2a20be7d7771b298055da6d"}], "stats": {"total": 13, "additions": 10, "deletions": 3}, "files": [{"sha": "67a8cbc16cb2307f1837a5fbb1fa46b596aa4a12", "filename": "gcc/config/rs6000/rs6000.h", "status": "modified", "additions": 10, "deletions": 3, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b73fd26c62b8c663b36f7953c4b35d60c07dbdcf/gcc%2Fconfig%2Frs6000%2Frs6000.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b73fd26c62b8c663b36f7953c4b35d60c07dbdcf/gcc%2Fconfig%2Frs6000%2Frs6000.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.h?ref=b73fd26c62b8c663b36f7953c4b35d60c07dbdcf", "patch": "@@ -543,7 +543,10 @@ extern struct rs6000_cpu_select rs6000_select[];\n #define FUNCTION_BOUNDARY 32\n \n /* No data type wants to be aligned rounder than this.  */\n-#define BIGGEST_ALIGNMENT (TARGET_64BIT ? 64 : 32)\n+#define BIGGEST_ALIGNMENT 64\n+\n+/* AIX aligns internal doubles in structures on word boundaries.  */\n+#define BIGGEST_FIELD_ALIGNMENT 32\n \n /* Alignment of field after `int : 0' in a structure.  */\n #define EMPTY_FIELD_BOUNDARY 32\n@@ -2593,10 +2596,14 @@ do {\t\t\t\t\t\t\t\t\t\\\n /* This says how to output an assembler line\n    to define a global common symbol.  */\n \n-#define ASM_OUTPUT_COMMON(FILE, NAME, SIZE, ROUNDED)\t\\\n+#define ASM_OUTPUT_ALIGNED_COMMON(FILE, NAME, SIZE, ALIGNMENT)\t\\\n   do { fputs (\".comm \", (FILE));\t\t\t\\\n        RS6000_OUTPUT_BASENAME ((FILE), (NAME));\t\t\\\n-       fprintf ((FILE), \",%d\\n\", (SIZE)); } while (0)\n+       if ( (SIZE) > 4)\t\t\t\t\t\\\n+         fprintf ((FILE), \",%d,3\\n\", (SIZE));\t\t\\\n+       else\t\t\t\t\t\t\\\n+\t fprintf( (FILE), \",%d\\n\", (SIZE));\t\t\\\n+  } while (0)\n \n /* This says how to output an assembler line\n    to define a local common symbol.  */"}]}