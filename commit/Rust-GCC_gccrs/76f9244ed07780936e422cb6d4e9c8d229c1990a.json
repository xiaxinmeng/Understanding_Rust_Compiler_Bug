{"sha": "76f9244ed07780936e422cb6d4e9c8d229c1990a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzZmOTI0NGVkMDc3ODA5MzZlNDIyY2I2ZDRlOWM4ZDIyOWMxOTkwYQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2016-04-22T16:16:21Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2016-04-22T16:16:21Z"}, "message": "* parser.c (cp_parser_perform_range_for_lookup): Decay the array.\n\nFrom-SVN: r235370", "tree": {"sha": "357da5d82dcc3c51eed36f59c7c9eed17170d8d4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/357da5d82dcc3c51eed36f59c7c9eed17170d8d4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/76f9244ed07780936e422cb6d4e9c8d229c1990a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/76f9244ed07780936e422cb6d4e9c8d229c1990a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/76f9244ed07780936e422cb6d4e9c8d229c1990a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/76f9244ed07780936e422cb6d4e9c8d229c1990a/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e7e12d92e359d0f66834e4b98e7ce3cd9c6d26d7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e7e12d92e359d0f66834e4b98e7ce3cd9c6d26d7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e7e12d92e359d0f66834e4b98e7ce3cd9c6d26d7"}], "stats": {"total": 8, "additions": 6, "deletions": 2}, "files": [{"sha": "3a3373e3806a51975fbe3a166e066ea2fb15b957", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/76f9244ed07780936e422cb6d4e9c8d229c1990a/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/76f9244ed07780936e422cb6d4e9c8d229c1990a/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=76f9244ed07780936e422cb6d4e9c8d229c1990a", "patch": "@@ -1,3 +1,7 @@\n+2016-04-22  Jason Merrill  <jason@redhat.com>\n+\n+\t* parser.c (cp_parser_perform_range_for_lookup): Decay the array.\n+\n 2016-04-21  Patrick Palka  <ppalka@gcc.gnu.org>\n \n \t* name-lookup.c (free_saved_scope): New free list of saved_scope"}, {"sha": "500a9b39a26e6ae8d55b45785742b8099c9e36aa", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/76f9244ed07780936e422cb6d4e9c8d229c1990a/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/76f9244ed07780936e422cb6d4e9c8d229c1990a/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=76f9244ed07780936e422cb6d4e9c8d229c1990a", "patch": "@@ -11413,12 +11413,12 @@ cp_parser_perform_range_for_lookup (tree range, tree *begin, tree *end)\n   if (TREE_CODE (TREE_TYPE (range)) == ARRAY_TYPE)\n     {\n       /* If RANGE is an array, we will use pointer arithmetic.  */\n-      *begin = range;\n+      *begin = decay_conversion (range, tf_warning_or_error);\n       *end = build_binary_op (input_location, PLUS_EXPR,\n \t\t\t      range,\n \t\t\t      array_type_nelts_top (TREE_TYPE (range)),\n \t\t\t      0);\n-      return build_pointer_type (TREE_TYPE (TREE_TYPE (range)));\n+      return TREE_TYPE (*begin);\n     }\n   else\n     {"}]}