{"sha": "d53bed0b2cf5072df636ea3578c46d9d88e906e6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDUzYmVkMGIyY2Y1MDcyZGY2MzZlYTM1NzhjNDZkOWQ4OGU5MDZlNg==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2010-04-19T13:36:54Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2010-04-19T13:36:54Z"}, "message": "re PR tree-optimization/43783 (-O -ftree-pre options compile libbid wrong)\n\n2010-04-19  Richard Guenther  <rguenther@suse.de>\n\n\tPR tree-optimization/43783\n\t* tree-ssa-pre.c (create_component_ref_by_pieces_1): Drop\n\tconstant ARRAY_REF operands two and three if possible.\n\n\t* gcc.c-torture/execute/pr43783.c: New testcase.\n\nFrom-SVN: r158517", "tree": {"sha": "abc95b452bb0ec3c0f5823a4ec430430ab30b999", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/abc95b452bb0ec3c0f5823a4ec430430ab30b999"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d53bed0b2cf5072df636ea3578c46d9d88e906e6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d53bed0b2cf5072df636ea3578c46d9d88e906e6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d53bed0b2cf5072df636ea3578c46d9d88e906e6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d53bed0b2cf5072df636ea3578c46d9d88e906e6/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "90f775a9c7afd62cbd338b973ec9711354440c6c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/90f775a9c7afd62cbd338b973ec9711354440c6c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/90f775a9c7afd62cbd338b973ec9711354440c6c"}], "stats": {"total": 71, "additions": 59, "deletions": 12}, "files": [{"sha": "3b7b3fcf6b32600c1bcc08f5ffb0f7aa85203c7d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d53bed0b2cf5072df636ea3578c46d9d88e906e6/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d53bed0b2cf5072df636ea3578c46d9d88e906e6/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d53bed0b2cf5072df636ea3578c46d9d88e906e6", "patch": "@@ -1,3 +1,9 @@\n+2010-04-19  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/43783\n+\t* tree-ssa-pre.c (create_component_ref_by_pieces_1): Drop\n+\tconstant ARRAY_REF operands two and three if possible.\n+\n 2010-04-19  Uros Bizjak  <ubizjak@gmail.com>\n \n \tPR target/43766"}, {"sha": "d13ba3adfc53d3947f58cc1a8e2ef5a1af4c0097", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d53bed0b2cf5072df636ea3578c46d9d88e906e6/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d53bed0b2cf5072df636ea3578c46d9d88e906e6/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=d53bed0b2cf5072df636ea3578c46d9d88e906e6", "patch": "@@ -1,3 +1,8 @@\n+2010-04-19  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/43783\n+\t* gcc.c-torture/execute/pr43783.c: New testcase.\n+\n 2010-04-19  Uros Bizjak  <ubizjak@gmail.com>\n \n \tPR target/43766"}, {"sha": "3880026c405b97fca132210aaf9e2be5827611d5", "filename": "gcc/testsuite/gcc.c-torture/execute/pr43783.c", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d53bed0b2cf5072df636ea3578c46d9d88e906e6/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr43783.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d53bed0b2cf5072df636ea3578c46d9d88e906e6/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr43783.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr43783.c?ref=d53bed0b2cf5072df636ea3578c46d9d88e906e6", "patch": "@@ -0,0 +1,21 @@\n+typedef __attribute__((aligned(16)))\n+struct {\n+  unsigned long long w[3];\n+} UINT192;\n+\n+UINT192 bid_Kx192[32];\n+\n+extern void abort (void);\n+\n+int main()\n+{\n+  int i = 0;\n+  unsigned long x = 0;\n+  for (i = 0; i < 32; ++i)\n+    bid_Kx192[i].w[1] = i == 1;\n+  for (i = 0; i < 32; ++i)\n+    x += bid_Kx192[1].w[1];\n+  if (x != 32)\n+    abort ();\n+  return 0;\n+}"}, {"sha": "dd9fb96dd5c870e6ba10786077875dc94048898f", "filename": "gcc/tree-ssa-pre.c", "status": "modified", "additions": 27, "deletions": 12, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d53bed0b2cf5072df636ea3578c46d9d88e906e6/gcc%2Ftree-ssa-pre.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d53bed0b2cf5072df636ea3578c46d9d88e906e6/gcc%2Ftree-ssa-pre.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-pre.c?ref=d53bed0b2cf5072df636ea3578c46d9d88e906e6", "patch": "@@ -2779,22 +2779,37 @@ create_component_ref_by_pieces_1 (basic_block block, vn_reference_t ref,\n \t  return NULL_TREE;\n \tif (genop2)\n \t  {\n-\t    op2expr = get_or_alloc_expr_for (genop2);\n-\t    genop2 = find_or_generate_expression (block, op2expr, stmts,\n-\t\t\t\t\t\t  domstmt);\n-\t    if (!genop2)\n-\t      return NULL_TREE;\n+\t    /* Drop zero minimum index.  */\n+\t    if (tree_int_cst_equal (genop2, integer_zero_node))\n+\t      genop2 = NULL_TREE;\n+\t    else\n+\t      {\n+\t\top2expr = get_or_alloc_expr_for (genop2);\n+\t\tgenop2 = find_or_generate_expression (block, op2expr, stmts,\n+\t\t\t\t\t\t      domstmt);\n+\t\tif (!genop2)\n+\t\t  return NULL_TREE;\n+\t      }\n \t  }\n \tif (genop3)\n \t  {\n \t    tree elmt_type = TREE_TYPE (TREE_TYPE (genop0));\n-\t    genop3 = size_binop (EXACT_DIV_EXPR, genop3,\n-\t\t\t\t size_int (TYPE_ALIGN_UNIT (elmt_type)));\n-\t    op3expr = get_or_alloc_expr_for (genop3);\n-\t    genop3 = find_or_generate_expression (block, op3expr, stmts,\n-\t\t\t\t\t\t  domstmt);\n-\t    if (!genop3)\n-\t      return NULL_TREE;\n+\t    /* We can't always put a size in units of the element alignment\n+\t       here as the element alignment may be not visible.  See\n+\t       PR43783.  Simply drop the element size for constant\n+\t       sizes.  */\n+\t    if (tree_int_cst_equal (genop3, TYPE_SIZE_UNIT (elmt_type)))\n+\t      genop3 = NULL_TREE;\n+\t    else\n+\t      {\n+\t\tgenop3 = size_binop (EXACT_DIV_EXPR, genop3,\n+\t\t\t\t     size_int (TYPE_ALIGN_UNIT (elmt_type)));\n+\t\top3expr = get_or_alloc_expr_for (genop3);\n+\t\tgenop3 = find_or_generate_expression (block, op3expr, stmts,\n+\t\t\t\t\t\t      domstmt);\n+\t\tif (!genop3)\n+\t\t  return NULL_TREE;\n+\t      }\n \t  }\n \treturn build4 (currop->opcode, currop->type, genop0, genop1,\n \t\t       genop2, genop3);"}]}