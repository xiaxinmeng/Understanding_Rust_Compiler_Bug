{"sha": "c2f2350e9b99f92cdda476830c1059152077999d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzJmMjM1MGU5Yjk5ZjkyY2RkYTQ3NjgzMGMxMDU5MTUyMDc3OTk5ZA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2016-11-17T22:40:28Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2016-11-17T22:40:28Z"}, "message": "PR c++/78193 - inherited ctor regressions on sparc32.\n\n\t* call.c (build_over_call): Don't set CALL_FROM_THUNK_P here.\n\t(build_call_a): Set it here, and don't insert EMPTY_CLASS_EXPR.\n\t(convert_like_real) [ck_rvalue]: Also pass non-addressable\n\ttypes along directly.\n\nFrom-SVN: r242573", "tree": {"sha": "bb5aa58d8df08bd49849105c2b49aa69731d949a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bb5aa58d8df08bd49849105c2b49aa69731d949a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c2f2350e9b99f92cdda476830c1059152077999d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c2f2350e9b99f92cdda476830c1059152077999d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c2f2350e9b99f92cdda476830c1059152077999d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c2f2350e9b99f92cdda476830c1059152077999d/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e389ba3073f8cfaa6209c27418ad175234c15482", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e389ba3073f8cfaa6209c27418ad175234c15482", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e389ba3073f8cfaa6209c27418ad175234c15482"}], "stats": {"total": 28, "additions": 18, "deletions": 10}, "files": [{"sha": "afc2c16451111e88d4e0ca2edf1d8e406c14c719", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2f2350e9b99f92cdda476830c1059152077999d/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2f2350e9b99f92cdda476830c1059152077999d/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=c2f2350e9b99f92cdda476830c1059152077999d", "patch": "@@ -1,3 +1,11 @@\n+2016-11-17  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/78193 - inherited ctor regressions on sparc32.\n+\t* call.c (build_over_call): Don't set CALL_FROM_THUNK_P here.\n+\t(build_call_a): Set it here, and don't insert EMPTY_CLASS_EXPR.\n+\t(convert_like_real) [ck_rvalue]: Also pass non-addressable\n+\ttypes along directly.\n+\n 2016-11-17  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR c++/55080"}, {"sha": "97003e534270b5f70b768e7b6a8930fffd1b9a15", "filename": "gcc/cp/call.c", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2f2350e9b99f92cdda476830c1059152077999d/gcc%2Fcp%2Fcall.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2f2350e9b99f92cdda476830c1059152077999d/gcc%2Fcp%2Fcall.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcall.c?ref=c2f2350e9b99f92cdda476830c1059152077999d", "patch": "@@ -375,10 +375,18 @@ build_call_a (tree function, int n, tree *argarray)\n \n   TREE_HAS_CONSTRUCTOR (function) = (decl && DECL_CONSTRUCTOR_P (decl));\n \n+  if (current_function_decl && decl\n+      && flag_new_inheriting_ctors\n+      && DECL_INHERITED_CTOR (current_function_decl)\n+      && (DECL_INHERITED_CTOR (current_function_decl)\n+\t  == DECL_CLONED_FUNCTION (decl)))\n+    /* Pass arguments directly to the inherited constructor.  */\n+    CALL_FROM_THUNK_P (function) = true;\n+\n   /* Don't pass empty class objects by value.  This is useful\n      for tags in STL, which are used to control overload resolution.\n      We don't need to handle other cases of copying empty classes.  */\n-  if (! decl || ! DECL_BUILT_IN (decl))\n+  else if (! decl || ! DECL_BUILT_IN (decl))\n     for (i = 0; i < n; i++)\n       {\n \ttree arg = CALL_EXPR_ARG (function, i);\n@@ -6844,8 +6852,7 @@ convert_like_real (conversion *convs, tree expr, tree fn, int argnum,\n \t constructor.  */\n       if (current_function_decl\n \t  && flag_new_inheriting_ctors\n-\t  && DECL_INHERITED_CTOR (current_function_decl)\n-\t  && TREE_ADDRESSABLE (totype))\n+\t  && DECL_INHERITED_CTOR (current_function_decl))\n \treturn expr;\n \n       /* Fall through.  */\n@@ -8094,13 +8101,6 @@ build_over_call (struct z_candidate *cand, int flags, tsubst_flags_t complain)\n       /* build_new_op_1 will clear this when appropriate.  */\n       CALL_EXPR_ORDERED_ARGS (c) = true;\n     }\n-  if (current_function_decl\n-      && flag_new_inheriting_ctors\n-      && DECL_INHERITED_CTOR (current_function_decl)\n-      && cand->num_convs)\n-    /* Don't introduce copies when passing arguments along to the inherited\n-       constructor.  */\n-    CALL_FROM_THUNK_P (call) = true;\n   return call;\n }\n "}]}