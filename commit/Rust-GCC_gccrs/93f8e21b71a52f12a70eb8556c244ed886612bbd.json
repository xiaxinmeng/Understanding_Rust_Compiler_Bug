{"sha": "93f8e21b71a52f12a70eb8556c244ed886612bbd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTNmOGUyMWI3MWE1MmYxMmE3MGViODU1NmMyNDRlZDg4NjYxMmJiZA==", "commit": {"author": {"name": "Tom Tromey", "email": "tromey@redhat.com", "date": "2005-05-25T15:23:56Z"}, "committer": {"name": "Tom Tromey", "email": "tromey@gcc.gnu.org", "date": "2005-05-25T15:23:56Z"}, "message": "re PR libgcj/21703 (hang when rapidly calling String.intern())\n\n\tPR libgcj/21703:\n\t* java/lang/ref/natReference.cc (find_slot): Handle case where\n\ttable has no NULL entries.\n\t* java/lang/natString.cc (_Jv_StringFindSlot): Handle case where\n\ttable has no NULL entries.\n\nFrom-SVN: r100153", "tree": {"sha": "14b238eff9b75fc8a5c871087ee4eece2bb8e3a9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/14b238eff9b75fc8a5c871087ee4eece2bb8e3a9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/93f8e21b71a52f12a70eb8556c244ed886612bbd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/93f8e21b71a52f12a70eb8556c244ed886612bbd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/93f8e21b71a52f12a70eb8556c244ed886612bbd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/93f8e21b71a52f12a70eb8556c244ed886612bbd/comments", "author": null, "committer": null, "parents": [{"sha": "56c0cf75a09e159f97a8bd2e5dcc484cc0db9566", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/56c0cf75a09e159f97a8bd2e5dcc484cc0db9566", "html_url": "https://github.com/Rust-GCC/gccrs/commit/56c0cf75a09e159f97a8bd2e5dcc484cc0db9566"}], "stats": {"total": 28, "additions": 22, "deletions": 6}, "files": [{"sha": "4d1cfb95b9a045874c6f20e53028247723af14bc", "filename": "libjava/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93f8e21b71a52f12a70eb8556c244ed886612bbd/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93f8e21b71a52f12a70eb8556c244ed886612bbd/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=93f8e21b71a52f12a70eb8556c244ed886612bbd", "patch": "@@ -1,3 +1,11 @@\n+2005-05-21  Tom Tromey  <tromey@redhat.com>\n+\n+\tPR libgcj/21703:\n+\t* java/lang/ref/natReference.cc (find_slot): Handle case where\n+\ttable has no NULL entries.\n+\t* java/lang/natString.cc (_Jv_StringFindSlot): Handle case where\n+\ttable has no NULL entries.\n+\n 2005-05-22  Andreas Jaeger  <aj@suse.de>\n \n \t* java/lang/mprec.c (mult, lshift, b2d, d2b): Add parenthesis to"}, {"sha": "a14f5de9d6ecfca08d389bd04b805443b1e78c9f", "filename": "libjava/java/lang/natString.cc", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93f8e21b71a52f12a70eb8556c244ed886612bbd/libjava%2Fjava%2Flang%2FnatString.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93f8e21b71a52f12a70eb8556c244ed886612bbd/libjava%2Fjava%2Flang%2FnatString.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Flang%2FnatString.cc?ref=93f8e21b71a52f12a70eb8556c244ed886612bbd", "patch": "@@ -1,6 +1,6 @@\n // natString.cc - Implementation of java.lang.String native methods.\n \n-/* Copyright (C) 1998, 1999, 2000, 2001, 2002, 2003, 2004  Free Software Foundation\n+/* Copyright (C) 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005  Free Software Foundation\n \n    This file is part of libgcj.\n \n@@ -64,7 +64,7 @@ _Jv_StringFindSlot (jchar* data, jint len, jint hash)\n   int index = start_index;\n   /* step must be non-zero, and relatively prime with strhash_size. */\n   jint step = (hash ^ (hash >> 16)) | 1;\n-  for (;;)\n+  do\n     {\n       jstring* ptr = &strhash[index];\n       jstring value = (jstring) UNMASK_PTR (*ptr);\n@@ -81,8 +81,12 @@ _Jv_StringFindSlot (jchar* data, jint len, jint hash)\n \t       && memcmp(JvGetStringChars(value), data, 2*len) == 0)\n \treturn (ptr);\n       index = (index + step) & (strhash_size - 1);\n-      JvAssert (index != start_index);\n     }\n+  while (index != start_index);\n+  // Note that we can have INDEX == START_INDEX if the table has no\n+  // NULL entries but does have DELETED_STRING entries.\n+  JvAssert (deleted_index >= 0);\n+  return &strhash[deleted_index];\n }\n \n /* Calculate a hash code for the string starting at PTR at given LENGTH."}, {"sha": "5ad5b1074059fe3f35379699027085526fd23501", "filename": "libjava/java/lang/ref/natReference.cc", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93f8e21b71a52f12a70eb8556c244ed886612bbd/libjava%2Fjava%2Flang%2Fref%2FnatReference.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93f8e21b71a52f12a70eb8556c244ed886612bbd/libjava%2Fjava%2Flang%2Fref%2FnatReference.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Flang%2Fref%2FnatReference.cc?ref=93f8e21b71a52f12a70eb8556c244ed886612bbd", "patch": "@@ -1,6 +1,6 @@\n // natReference.cc - Native code for References\n \n-/* Copyright (C) 2001, 2002, 2003  Free Software Foundation\n+/* Copyright (C) 2001, 2002, 2003, 2005  Free Software Foundation\n \n    This file is part of libgcj.\n \n@@ -78,7 +78,7 @@ find_slot (jobject key)\n   int start_index = hcode & (hash_size - 1);\n   int index = start_index;\n   int deleted_index = -1;\n-  for (;;)\n+  do\n     {\n       object_list *ptr = &hash[index];\n       if (ptr->reference == key)\n@@ -96,8 +96,12 @@ find_slot (jobject key)\n \t  JvAssert (ptr->reference == DELETED_REFERENCE);\n \t}\n       index = (index + step) & (hash_size - 1);\n-      JvAssert (index != start_index);\n     }\n+  while (index != start_index);\n+  // Note that we can have INDEX == START_INDEX if the table has no\n+  // NULL entries but does have DELETED entries.\n+  JvAssert (deleted_index >= 0);\n+  return &hash[deleted_index];\n }\n \n static void"}]}