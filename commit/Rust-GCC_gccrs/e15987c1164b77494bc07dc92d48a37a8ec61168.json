{"sha": "e15987c1164b77494bc07dc92d48a37a8ec61168", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTE1OTg3YzExNjRiNzc0OTRiYzA3ZGM5MmQ0OGEzN2E4ZWM2MTE2OA==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2004-08-17T15:42:55Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2004-08-17T15:42:55Z"}, "message": "objc-act.c (build_protocol_initializer): Fix build_int_cst usage.\n\n\t* objc/objc-act.c (build_protocol_initializer): Fix build_int_cst\n\tusage.\n\t(generate_protocol_list, handle_impent): Likewise.\n\nFrom-SVN: r86129", "tree": {"sha": "0a27ce0960e6d28965e1253b785c63010343cedc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0a27ce0960e6d28965e1253b785c63010343cedc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e15987c1164b77494bc07dc92d48a37a8ec61168", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e15987c1164b77494bc07dc92d48a37a8ec61168", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e15987c1164b77494bc07dc92d48a37a8ec61168", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e15987c1164b77494bc07dc92d48a37a8ec61168/comments", "author": null, "committer": null, "parents": [{"sha": "3d79abbdf8a8a92943b15628b72c04c2dec15348", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3d79abbdf8a8a92943b15628b72c04c2dec15348", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3d79abbdf8a8a92943b15628b72c04c2dec15348"}], "stats": {"total": 17, "additions": 10, "deletions": 7}, "files": [{"sha": "dd4cf89d3fc12a610c3ff03c75ac02e91536ee71", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e15987c1164b77494bc07dc92d48a37a8ec61168/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e15987c1164b77494bc07dc92d48a37a8ec61168/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e15987c1164b77494bc07dc92d48a37a8ec61168", "patch": "@@ -1,3 +1,9 @@\n+2004-08-17  Nathan Sidwell  <nathan@codesourcery.com>\n+\n+\t* objc/objc-act.c (build_protocol_initializer): Fix build_int_cst\n+\tusage.\n+\t(generate_protocol_list, handle_impent): Likewise.\n+\n 2004-08-17  Roger Sayle  <roger@eyesopen.com>\n \n \t* regclass.c (init_reg_sets_1): Add ENABLE_CHECKING sanity tests to\n@@ -1829,7 +1835,7 @@\n \t* config/i386/xmmintrin.h: Include <mm_malloc.h>.\n \n 2004-08-03  H.J. Lu  <hongjiu.lu@intel.com>\n-\t    Tanguy Fautr\ufffd  <tfautre@pandora.be>\n+\t    Tanguy Fautr\u00c3  <tfautre@pandora.be>\n \n \t* config/i386/pmm_malloc.h: New file.\n "}, {"sha": "cab25f407f326e1209d7cabf0545487356e6a8b4", "filename": "gcc/objc/objc-act.c", "status": "modified", "additions": 3, "deletions": 6, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e15987c1164b77494bc07dc92d48a37a8ec61168/gcc%2Fobjc%2Fobjc-act.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e15987c1164b77494bc07dc92d48a37a8ec61168/gcc%2Fobjc%2Fobjc-act.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2Fobjc-act.c?ref=e15987c1164b77494bc07dc92d48a37a8ec61168", "patch": "@@ -3912,8 +3912,7 @@ build_protocol_initializer (tree type, tree protocol_name,\n   /* Filling the \"isa\" in with one allows the runtime system to\n      detect that the version change...should remove before final release.  */\n \n-  expr = build_int_cst (NULL_TREE, PROTOCOL_VERSION, 0);\n-  TREE_TYPE (expr) = cast_type;\n+  expr = build_int_cst (cast_type, PROTOCOL_VERSION, 0);\n   initlist = tree_cons (NULL_TREE, expr, initlist);\n   initlist = tree_cons (NULL_TREE, protocol_name, initlist);\n   initlist = tree_cons (NULL_TREE, protocol_list, initlist);\n@@ -4848,8 +4847,7 @@ generate_protocol_list (tree i_or_p)\n   /* Build initializer.  */\n   initlist = tree_cons (NULL_TREE, build_int_cst (NULL_TREE, 0, 0), NULL_TREE);\n \n-  e = build_int_cst (NULL_TREE, size, 0);\n-  TREE_TYPE (e) = cast_type;\n+  e = build_int_cst (cast_type, size, 0);\n   initlist = tree_cons (NULL_TREE, e, initlist);\n \n   for (lproto = plist; lproto; lproto = TREE_CHAIN (lproto))\n@@ -9019,8 +9017,7 @@ handle_impent (struct imp_entry *impent)\n     {\n       tree decl, init;\n \n-      init = build_int_cst (NULL_TREE, 0, 0);\n-      TREE_TYPE (init) = c_common_type_for_size (BITS_PER_WORD, 1);\n+      init = build_int_cst (c_common_type_for_size (BITS_PER_WORD, 1), 0, 0);\n       decl = build_decl (VAR_DECL, get_identifier (string), TREE_TYPE (init));\n       TREE_PUBLIC (decl) = 1;\n       TREE_READONLY (decl) = 1;"}]}