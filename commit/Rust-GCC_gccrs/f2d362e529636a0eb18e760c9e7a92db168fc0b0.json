{"sha": "f2d362e529636a0eb18e760c9e7a92db168fc0b0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjJkMzYyZTUyOTYzNmEwZWIxOGU3NjBjOWU3YTkyZGIxNjhmYzBiMA==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@cs.umass.edu", "date": "2005-01-17T08:10:06Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2005-01-17T08:10:06Z"}, "message": "cvt.c (convert_lvalue): Remove.\n\n\t* cvt.c (convert_lvalue): Remove.\n\t* cp-tree.h: Remove the corresponding prototype.\n\nFrom-SVN: r93755", "tree": {"sha": "70720be92e956290d34847add99c8ab3d0e8e18a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/70720be92e956290d34847add99c8ab3d0e8e18a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f2d362e529636a0eb18e760c9e7a92db168fc0b0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f2d362e529636a0eb18e760c9e7a92db168fc0b0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f2d362e529636a0eb18e760c9e7a92db168fc0b0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f2d362e529636a0eb18e760c9e7a92db168fc0b0/comments", "author": null, "committer": null, "parents": [{"sha": "1ce62c328757640211cef3c14a36c95cc5050d5d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1ce62c328757640211cef3c14a36c95cc5050d5d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1ce62c328757640211cef3c14a36c95cc5050d5d"}], "stats": {"total": 17, "additions": 3, "deletions": 14}, "files": [{"sha": "47b837c4859d098144bebc7749478cd7e31c2948", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f2d362e529636a0eb18e760c9e7a92db168fc0b0/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f2d362e529636a0eb18e760c9e7a92db168fc0b0/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=f2d362e529636a0eb18e760c9e7a92db168fc0b0", "patch": "@@ -3,6 +3,9 @@\n \t* class.c (get_enclosing_class): Remove.\n \t* cp-tree.h: Remove the corresponding prototypes.\n \n+\t* cvt.c (convert_lvalue): Remove.\n+\t* cp-tree.h: Remove the corresponding prototype.\n+\n 2005-01-15  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c++/19263"}, {"sha": "d2a7b55edee18eba22b255c892150af45ef255c3", "filename": "gcc/cp/cp-tree.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f2d362e529636a0eb18e760c9e7a92db168fc0b0/gcc%2Fcp%2Fcp-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f2d362e529636a0eb18e760c9e7a92db168fc0b0/gcc%2Fcp%2Fcp-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.h?ref=f2d362e529636a0eb18e760c9e7a92db168fc0b0", "patch": "@@ -3725,7 +3725,6 @@ extern void determine_key_method                (tree);\n /* in cvt.c */\n extern tree convert_to_reference (tree, tree, int, int, tree);\n extern tree convert_from_reference (tree);\n-extern tree convert_lvalue (tree, tree);\n extern tree force_rvalue (tree);\n extern tree ocp_convert (tree, tree, int, int);\n extern tree cp_convert (tree, tree);"}, {"sha": "262970707e78304d9c9b77d65f2510d4c199ee51", "filename": "gcc/cp/cvt.c", "status": "modified", "additions": 0, "deletions": 13, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f2d362e529636a0eb18e760c9e7a92db168fc0b0/gcc%2Fcp%2Fcvt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f2d362e529636a0eb18e760c9e7a92db168fc0b0/gcc%2Fcp%2Fcvt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcvt.c?ref=f2d362e529636a0eb18e760c9e7a92db168fc0b0", "patch": "@@ -569,19 +569,6 @@ convert_from_reference (tree val)\n   return val;\n }\n \n-/* Implicitly convert the lvalue EXPR to another lvalue of type TOTYPE,\n-   preserving cv-qualification.  */\n-\n-tree\n-convert_lvalue (tree totype, tree expr)\n-{\n-  totype = cp_build_qualified_type (totype, TYPE_QUALS (TREE_TYPE (expr)));\n-  totype = build_reference_type (totype);\n-  expr = convert_to_reference (totype, expr, CONV_IMPLICIT, LOOKUP_NORMAL,\n-\t\t\t       NULL_TREE);\n-  return convert_from_reference (expr);\n-}\n-\n /* Really perform an lvalue-to-rvalue conversion, including copying an\n    argument of class type into a temporary.  */\n "}]}