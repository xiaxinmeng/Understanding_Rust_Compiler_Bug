{"sha": "194ea9ced6f547f5a6922ff9ac1dfb895262f1a2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTk0ZWE5Y2VkNmY1NDdmNWE2OTIyZmY5YWMxZGZiODk1MjYyZjFhMg==", "commit": {"author": {"name": "Michael Koch", "email": "konqueror@gmx.de", "date": "2003-02-11T09:44:57Z"}, "committer": {"name": "Michael Koch", "email": "mkoch@gcc.gnu.org", "date": "2003-02-11T09:44:57Z"}, "message": "2003-02-11  Michael Koch  <konqueror@gmx.de>\n\n\t* gnu/java/nio/natCharBufferImpl.cc\n\t(nio_cast): Removed.\n\t(nio_put_*): Removed.\n\t(nio_get_*): Removed.\n\t* gnu/java/nio/natDoubleBufferImpl.cc\n\t(nio_cast): Removed.\n\t(nio_put_*): Removed.\n\t(nio_get_*): Removed.\n\t* gnu/java/nio/natFloatBufferImpl.cc\n\t(nio_cast): Removed.\n\t(nio_put_*): Removed.\n\t(nio_get_*): Removed.\n\t* gnu/java/nio/natIntBufferImpl.cc\n\t(nio_cast): Removed.\n\t(nio_put_*): Removed.\n\t(nio_get_*): Removed.\n\t* gnu/java/nio/natLongBufferImpl.cc\n\t(nio_cast): Removed.\n\t(nio_put_*): Removed.\n\t(nio_get_*): Removed.\n\t* gnu/java/nio/natShortBufferImpl.cc\n\t(nio_cast): Removed.\n\t(nio_put_*): Removed.\n\t(nio_get_*): Removed.\n\t* gnu/java/nio/SelectorProviderImpl.java\n\t(openDatagramChannel): Throws IOException.\n\t(openPipe): Throws IOException.\n\t(openSelector): Throws IOException.\n\t(openServerSocketChannel): Throws IOException.\n\t(openSocketChannel): Throws IOException.\n\t* gnu/java/nio/ServerSocketChannelImpl.java\n\t(ServerSocketChannelImpl): Throws IOException.\n\t(implCloseSelectableChannel): Throws IOException.\n\t(implConfigureBlocking): Throws IOException.\n\t* java/nio/ByteBuffer.java\n\t(readOnly): Removed.\n\t(hasArray): Use isReadOnly() instead of readOnly.\n\t(array): Use isReadOnly() instead of readOnly.\n\t(arrayOffset): Use isReadOnly() instead of readOnly.\n\t* java/nio/CharBuffer.java\n\t(CharBuffer): Implements Cloneable and CharSequence.\n\nFrom-SVN: r62688", "tree": {"sha": "8cb311dd6e50521ad81865d52907437e75e5cd50", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8cb311dd6e50521ad81865d52907437e75e5cd50"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/194ea9ced6f547f5a6922ff9ac1dfb895262f1a2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/194ea9ced6f547f5a6922ff9ac1dfb895262f1a2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/194ea9ced6f547f5a6922ff9ac1dfb895262f1a2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/194ea9ced6f547f5a6922ff9ac1dfb895262f1a2/comments", "author": null, "committer": null, "parents": [{"sha": "c728da61c689ac1973e194016585a72d73dc027a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c728da61c689ac1973e194016585a72d73dc027a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c728da61c689ac1973e194016585a72d73dc027a"}], "stats": {"total": 675, "additions": 57, "deletions": 618}, "files": [{"sha": "466fd0967f184aee2e96d2cf96330ac3d95ae567", "filename": "libjava/ChangeLog", "status": "modified", "additions": 44, "deletions": 0, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/194ea9ced6f547f5a6922ff9ac1dfb895262f1a2/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/194ea9ced6f547f5a6922ff9ac1dfb895262f1a2/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=194ea9ced6f547f5a6922ff9ac1dfb895262f1a2", "patch": "@@ -1,3 +1,47 @@\n+2003-02-11  Michael Koch  <konqueror@gmx.de>\n+\n+\t* gnu/java/nio/natCharBufferImpl.cc\n+\t(nio_cast): Removed.\n+\t(nio_put_*): Removed.\n+\t(nio_get_*): Removed.\n+\t* gnu/java/nio/natDoubleBufferImpl.cc\n+\t(nio_cast): Removed.\n+\t(nio_put_*): Removed.\n+\t(nio_get_*): Removed.\n+\t* gnu/java/nio/natFloatBufferImpl.cc\n+\t(nio_cast): Removed.\n+\t(nio_put_*): Removed.\n+\t(nio_get_*): Removed.\n+\t* gnu/java/nio/natIntBufferImpl.cc\n+\t(nio_cast): Removed.\n+\t(nio_put_*): Removed.\n+\t(nio_get_*): Removed.\n+\t* gnu/java/nio/natLongBufferImpl.cc\n+\t(nio_cast): Removed.\n+\t(nio_put_*): Removed.\n+\t(nio_get_*): Removed.\n+\t* gnu/java/nio/natShortBufferImpl.cc\n+\t(nio_cast): Removed.\n+\t(nio_put_*): Removed.\n+\t(nio_get_*): Removed.\n+\t* gnu/java/nio/SelectorProviderImpl.java\n+\t(openDatagramChannel): Throws IOException.\n+\t(openPipe): Throws IOException.\n+\t(openSelector): Throws IOException.\n+\t(openServerSocketChannel): Throws IOException.\n+\t(openSocketChannel): Throws IOException.\n+\t* gnu/java/nio/ServerSocketChannelImpl.java\n+\t(ServerSocketChannelImpl): Throws IOException.\n+\t(implCloseSelectableChannel): Throws IOException.\n+\t(implConfigureBlocking): Throws IOException.\n+\t* java/nio/ByteBuffer.java\n+\t(readOnly): Removed.\n+\t(hasArray): Use isReadOnly() instead of readOnly.\n+\t(array): Use isReadOnly() instead of readOnly.\n+\t(arrayOffset): Use isReadOnly() instead of readOnly.\n+\t* java/nio/CharBuffer.java\n+\t(CharBuffer): Implements Cloneable and CharSequence.\n+\n 2003-02-11  Michael Koch  <konqueror@gmx.de>\n \n \t* java/nio/DoubleBuffer.java"}, {"sha": "d58e10a010e40db5874875a7f431d218a2892f2a", "filename": "libjava/gnu/java/nio/SelectorProviderImpl.java", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/194ea9ced6f547f5a6922ff9ac1dfb895262f1a2/libjava%2Fgnu%2Fjava%2Fnio%2FSelectorProviderImpl.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/194ea9ced6f547f5a6922ff9ac1dfb895262f1a2/libjava%2Fgnu%2Fjava%2Fnio%2FSelectorProviderImpl.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fnio%2FSelectorProviderImpl.java?ref=194ea9ced6f547f5a6922ff9ac1dfb895262f1a2", "patch": "@@ -37,6 +37,7 @@\n \n package gnu.java.nio;\n \n+import java.io.IOException;\n import java.nio.channels.DatagramChannel;\n import java.nio.channels.Pipe;\n import java.nio.channels.ServerSocketChannel;\n@@ -51,26 +52,31 @@ public SelectorProviderImpl ()\n   }\n \n   public DatagramChannel openDatagramChannel ()\n+    throws IOException\n   {\n     return new DatagramChannelImpl (this);\n   }\n \n   public Pipe openPipe ()\n+    throws IOException\n   {\n     return new PipeImpl ();\n   }\n     \n   public AbstractSelector openSelector ()\n+    throws IOException\n   {\n     return new SelectorImpl (this);\n   }\n \n   public ServerSocketChannel openServerSocketChannel ()\n+    throws IOException\n   {\n     return new ServerSocketChannelImpl (this);\n   }\n \n   public SocketChannel openSocketChannel ()\n+    throws IOException\n   {\n     return new SocketChannelImpl (this);\n   }"}, {"sha": "d68109326842d34c288a90241cefdeba15e9a025", "filename": "libjava/gnu/java/nio/ServerSocketChannelImpl.java", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/194ea9ced6f547f5a6922ff9ac1dfb895262f1a2/libjava%2Fgnu%2Fjava%2Fnio%2FServerSocketChannelImpl.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/194ea9ced6f547f5a6922ff9ac1dfb895262f1a2/libjava%2Fgnu%2Fjava%2Fnio%2FServerSocketChannelImpl.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fnio%2FServerSocketChannelImpl.java?ref=194ea9ced6f547f5a6922ff9ac1dfb895262f1a2", "patch": "@@ -58,6 +58,7 @@ private static native int SocketAccept (ServerSocketChannelImpl server,\n                                           SocketChannelImpl s);\n \n   protected ServerSocketChannelImpl (SelectorProvider provider)\n+    throws IOException\n   {\n     super (provider);\n     fd = SocketChannelImpl.SocketCreate ();\n@@ -86,14 +87,14 @@ public void finalizer()\n \t    }\n   }\n \n-  protected void implCloseSelectableChannel ()\n+  protected void implCloseSelectableChannel () throws IOException\n   {\n     connected = false;\n     SocketChannelImpl.SocketClose (fd);\n     fd = SocketChannelImpl.SocketCreate ();\n   }\n \n-  protected void implConfigureBlocking (boolean block)\n+  protected void implConfigureBlocking (boolean block) throws IOException\n   {\n     blocking = block;\n   }"}, {"sha": "6f9bf6474d62e7b0b6116521d931db926b1bf0bd", "filename": "libjava/gnu/java/nio/natCharBufferImpl.cc", "status": "modified", "additions": 0, "deletions": 102, "changes": 102, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/194ea9ced6f547f5a6922ff9ac1dfb895262f1a2/libjava%2Fgnu%2Fjava%2Fnio%2FnatCharBufferImpl.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/194ea9ced6f547f5a6922ff9ac1dfb895262f1a2/libjava%2Fgnu%2Fjava%2Fnio%2FnatCharBufferImpl.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fnio%2FnatCharBufferImpl.cc?ref=194ea9ced6f547f5a6922ff9ac1dfb895262f1a2", "patch": "@@ -11,115 +11,13 @@ gnu::java::nio::CharBufferImpl::nio_cast(JArray<jbyte>*)\n   return NULL;\n }\n \n-JArray<jchar>*\n-gnu::java::nio::CharBufferImpl::nio_cast(JArray<jshort>*)\n-{\n-  return NULL;\n-}\n-\n-JArray<jchar>*\n-gnu::java::nio::CharBufferImpl::nio_cast(JArray<jint>*)\n-{\n-  return NULL;\n-}\n-\n-JArray<jchar>*\n-gnu::java::nio::CharBufferImpl::nio_cast(JArray<jlong>*)\n-{\n-  return NULL;\n-}\n-\n-JArray<jchar>*\n-gnu::java::nio::CharBufferImpl::nio_cast(JArray<jchar>*)\n-{\n-  return NULL;\n-}\n-\n-JArray<jchar>*\n-gnu::java::nio::CharBufferImpl::nio_cast(JArray<jfloat>*)\n-{\n-  return NULL;\n-}\n-\n-JArray<jchar>*\n-gnu::java::nio::CharBufferImpl::nio_cast(JArray<jdouble>*)\n-{\n-  return NULL;\n-}\n-\n void\n gnu::java::nio::CharBufferImpl::nio_put_Byte(gnu::java::nio::CharBufferImpl*, jint, jint, jbyte)\n {\n }\n \n-void\n-gnu::java::nio::CharBufferImpl::nio_put_Char(gnu::java::nio::CharBufferImpl*, jint, jint, jchar)\n-{\n-}\n-\n-void\n-gnu::java::nio::CharBufferImpl::nio_put_Short(gnu::java::nio::CharBufferImpl*, jint, jint, jshort)\n-{\n-}\n-\n-void\n-gnu::java::nio::CharBufferImpl::nio_put_Int(gnu::java::nio::CharBufferImpl*, jint, jint, jint)\n-{\n-}\n-\n-void\n-gnu::java::nio::CharBufferImpl::nio_put_Long(gnu::java::nio::CharBufferImpl*, jint, jint, jlong)\n-{\n-}\n-\n-void\n-gnu::java::nio::CharBufferImpl::nio_put_Float(gnu::java::nio::CharBufferImpl*, jint, jint, jfloat)\n-{\n-}\n-\n-void\n-gnu::java::nio::CharBufferImpl::nio_put_Double(gnu::java::nio::CharBufferImpl*, jint, jint, jdouble)\n-{\n-}\n-\n jbyte\n gnu::java::nio::CharBufferImpl::nio_get_Byte(gnu::java::nio::CharBufferImpl*, jint, jint)\n {\n   return 0;\n }\n-\n-jchar\n-gnu::java::nio::CharBufferImpl::nio_get_Char(gnu::java::nio::CharBufferImpl*, jint, jint)\n-{\n-  return ' ';\n-}\n-\n-jshort\n-gnu::java::nio::CharBufferImpl::nio_get_Short(gnu::java::nio::CharBufferImpl*, jint, jint)\n-{\n-  return 0;\n-}\n-\n-jint\n-gnu::java::nio::CharBufferImpl::nio_get_Int(gnu::java::nio::CharBufferImpl*, jint, jint)\n-{\n-  return 0;\n-}\n-\n-jlong\n-gnu::java::nio::CharBufferImpl::nio_get_Long(gnu::java::nio::CharBufferImpl*, jint, jint)\n-{\n-  return 0;\n-}\n-\n-jfloat\n-gnu::java::nio::CharBufferImpl::nio_get_Float(gnu::java::nio::CharBufferImpl*, jint, jint)\n-{\n-  return 0.0;\n-}\n-\n-jdouble\n-gnu::java::nio::CharBufferImpl::nio_get_Double(gnu::java::nio::CharBufferImpl*, jint, jint)\n-{\n-  return 0.0;\n-}"}, {"sha": "c71fd032082c5651e0f1d328bf27541dfaae773a", "filename": "libjava/gnu/java/nio/natDoubleBufferImpl.cc", "status": "modified", "additions": 0, "deletions": 102, "changes": 102, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/194ea9ced6f547f5a6922ff9ac1dfb895262f1a2/libjava%2Fgnu%2Fjava%2Fnio%2FnatDoubleBufferImpl.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/194ea9ced6f547f5a6922ff9ac1dfb895262f1a2/libjava%2Fgnu%2Fjava%2Fnio%2FnatDoubleBufferImpl.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fnio%2FnatDoubleBufferImpl.cc?ref=194ea9ced6f547f5a6922ff9ac1dfb895262f1a2", "patch": "@@ -11,115 +11,13 @@ gnu::java::nio::DoubleBufferImpl::nio_cast(JArray<jbyte>*)\n   return NULL;\n }\n \n-JArray<jdouble>*\n-gnu::java::nio::DoubleBufferImpl::nio_cast(JArray<jshort>*)\n-{\n-  return NULL;\n-}\n-\n-JArray<jdouble>*\n-gnu::java::nio::DoubleBufferImpl::nio_cast(JArray<jint>*)\n-{\n-  return NULL;\n-}\n-\n-JArray<jdouble>*\n-gnu::java::nio::DoubleBufferImpl::nio_cast(JArray<jlong>*)\n-{\n-  return NULL;\n-}\n-\n-JArray<jdouble>*\n-gnu::java::nio::DoubleBufferImpl::nio_cast(JArray<jchar>*)\n-{\n-  return NULL;\n-}\n-\n-JArray<jdouble>*\n-gnu::java::nio::DoubleBufferImpl::nio_cast(JArray<jfloat>*)\n-{\n-  return NULL;\n-}\n-\n-JArray<jdouble>*\n-gnu::java::nio::DoubleBufferImpl::nio_cast(JArray<jdouble>*)\n-{\n-  return NULL;\n-}\n-\n void\n gnu::java::nio::DoubleBufferImpl::nio_put_Byte(gnu::java::nio::DoubleBufferImpl*, jint, jint, jbyte)\n {\n }\n \n-void\n-gnu::java::nio::DoubleBufferImpl::nio_put_Char(gnu::java::nio::DoubleBufferImpl*, jint, jint, jchar)\n-{\n-}\n-\n-void\n-gnu::java::nio::DoubleBufferImpl::nio_put_Short(gnu::java::nio::DoubleBufferImpl*, jint, jint, jshort)\n-{\n-}\n-\n-void\n-gnu::java::nio::DoubleBufferImpl::nio_put_Int(gnu::java::nio::DoubleBufferImpl*, jint, jint, jint)\n-{\n-}\n-\n-void\n-gnu::java::nio::DoubleBufferImpl::nio_put_Long(gnu::java::nio::DoubleBufferImpl*, jint, jint, jlong)\n-{\n-}\n-\n-void\n-gnu::java::nio::DoubleBufferImpl::nio_put_Float(gnu::java::nio::DoubleBufferImpl*, jint, jint, jfloat)\n-{\n-}\n-\n-void\n-gnu::java::nio::DoubleBufferImpl::nio_put_Double(gnu::java::nio::DoubleBufferImpl*, jint, jint, jdouble)\n-{\n-}\n-\n jbyte\n gnu::java::nio::DoubleBufferImpl::nio_get_Byte(gnu::java::nio::DoubleBufferImpl*, jint, jint)\n {\n   return 0;\n }\n-\n-jchar\n-gnu::java::nio::DoubleBufferImpl::nio_get_Char(gnu::java::nio::DoubleBufferImpl*, jint, jint)\n-{\n-  return ' ';\n-}\n-\n-jshort\n-gnu::java::nio::DoubleBufferImpl::nio_get_Short(gnu::java::nio::DoubleBufferImpl*, jint, jint)\n-{\n-  return 0;\n-}\n-\n-jint\n-gnu::java::nio::DoubleBufferImpl::nio_get_Int(gnu::java::nio::DoubleBufferImpl*, jint, jint)\n-{\n-  return 0;\n-}\n-\n-jlong\n-gnu::java::nio::DoubleBufferImpl::nio_get_Long(gnu::java::nio::DoubleBufferImpl*, jint, jint)\n-{\n-  return 0;\n-}\n-\n-jfloat\n-gnu::java::nio::DoubleBufferImpl::nio_get_Float(gnu::java::nio::DoubleBufferImpl*, jint, jint)\n-{\n-  return 0.0;\n-}\n-\n-jdouble\n-gnu::java::nio::DoubleBufferImpl::nio_get_Double(gnu::java::nio::DoubleBufferImpl*, jint, jint)\n-{\n-  return 0.0;\n-}"}, {"sha": "3464c7656c2b2c4f06b94e5f391d4606449b1087", "filename": "libjava/gnu/java/nio/natFloatBufferImpl.cc", "status": "modified", "additions": 0, "deletions": 102, "changes": 102, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/194ea9ced6f547f5a6922ff9ac1dfb895262f1a2/libjava%2Fgnu%2Fjava%2Fnio%2FnatFloatBufferImpl.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/194ea9ced6f547f5a6922ff9ac1dfb895262f1a2/libjava%2Fgnu%2Fjava%2Fnio%2FnatFloatBufferImpl.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fnio%2FnatFloatBufferImpl.cc?ref=194ea9ced6f547f5a6922ff9ac1dfb895262f1a2", "patch": "@@ -11,115 +11,13 @@ gnu::java::nio::FloatBufferImpl::nio_cast(JArray<jbyte>*)\n   return NULL;\n }\n \n-JArray<jfloat>*\n-gnu::java::nio::FloatBufferImpl::nio_cast(JArray<jshort>*)\n-{\n-  return NULL;\n-}\n-\n-JArray<jfloat>*\n-gnu::java::nio::FloatBufferImpl::nio_cast(JArray<jint>*)\n-{\n-  return NULL;\n-}\n-\n-JArray<jfloat>*\n-gnu::java::nio::FloatBufferImpl::nio_cast(JArray<jlong>*)\n-{\n-  return NULL;\n-}\n-\n-JArray<jfloat>*\n-gnu::java::nio::FloatBufferImpl::nio_cast(JArray<jchar>*)\n-{\n-  return NULL;\n-}\n-\n-JArray<jfloat>*\n-gnu::java::nio::FloatBufferImpl::nio_cast(JArray<jfloat>*)\n-{\n-  return NULL;\n-}\n-\n-JArray<jfloat>*\n-gnu::java::nio::FloatBufferImpl::nio_cast(JArray<jdouble>*)\n-{\n-  return NULL;\n-}\n-\n void\n gnu::java::nio::FloatBufferImpl::nio_put_Byte(gnu::java::nio::FloatBufferImpl*, jint, jint, jbyte)\n {\n }\n \n-void\n-gnu::java::nio::FloatBufferImpl::nio_put_Char(gnu::java::nio::FloatBufferImpl*, jint, jint, jchar)\n-{\n-}\n-\n-void\n-gnu::java::nio::FloatBufferImpl::nio_put_Short(gnu::java::nio::FloatBufferImpl*, jint, jint, jshort)\n-{\n-}\n-\n-void\n-gnu::java::nio::FloatBufferImpl::nio_put_Int(gnu::java::nio::FloatBufferImpl*, jint, jint, jint)\n-{\n-}\n-\n-void\n-gnu::java::nio::FloatBufferImpl::nio_put_Long(gnu::java::nio::FloatBufferImpl*, jint, jint, jlong)\n-{\n-}\n-\n-void\n-gnu::java::nio::FloatBufferImpl::nio_put_Float(gnu::java::nio::FloatBufferImpl*, jint, jint, jfloat)\n-{\n-}\n-\n-void\n-gnu::java::nio::FloatBufferImpl::nio_put_Double(gnu::java::nio::FloatBufferImpl*, jint, jint, jdouble)\n-{\n-}\n-\n jbyte\n gnu::java::nio::FloatBufferImpl::nio_get_Byte(gnu::java::nio::FloatBufferImpl*, jint, jint)\n {\n   return 0;\n }\n-\n-jchar\n-gnu::java::nio::FloatBufferImpl::nio_get_Char(gnu::java::nio::FloatBufferImpl*, jint, jint)\n-{\n-  return ' ';\n-}\n-\n-jshort\n-gnu::java::nio::FloatBufferImpl::nio_get_Short(gnu::java::nio::FloatBufferImpl*, jint, jint)\n-{\n-  return 0;\n-}\n-\n-jint\n-gnu::java::nio::FloatBufferImpl::nio_get_Int(gnu::java::nio::FloatBufferImpl*, jint, jint)\n-{\n-  return 0;\n-}\n-\n-jlong\n-gnu::java::nio::FloatBufferImpl::nio_get_Long(gnu::java::nio::FloatBufferImpl*, jint, jint)\n-{\n-  return 0;\n-}\n-\n-jfloat\n-gnu::java::nio::FloatBufferImpl::nio_get_Float(gnu::java::nio::FloatBufferImpl*, jint, jint)\n-{\n-  return 0.0;\n-}\n-\n-jdouble\n-gnu::java::nio::FloatBufferImpl::nio_get_Double(gnu::java::nio::FloatBufferImpl*, jint, jint)\n-{\n-  return 0.0;\n-}"}, {"sha": "399062804eb4c3c758bd896439a5dffc8249254c", "filename": "libjava/gnu/java/nio/natIntBufferImpl.cc", "status": "modified", "additions": 0, "deletions": 102, "changes": 102, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/194ea9ced6f547f5a6922ff9ac1dfb895262f1a2/libjava%2Fgnu%2Fjava%2Fnio%2FnatIntBufferImpl.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/194ea9ced6f547f5a6922ff9ac1dfb895262f1a2/libjava%2Fgnu%2Fjava%2Fnio%2FnatIntBufferImpl.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fnio%2FnatIntBufferImpl.cc?ref=194ea9ced6f547f5a6922ff9ac1dfb895262f1a2", "patch": "@@ -11,115 +11,13 @@ gnu::java::nio::IntBufferImpl::nio_cast(JArray<jbyte>*)\n   return NULL;\n }\n \n-JArray<jint>*\n-gnu::java::nio::IntBufferImpl::nio_cast(JArray<jshort>*)\n-{\n-  return NULL;\n-}\n-\n-JArray<jint>*\n-gnu::java::nio::IntBufferImpl::nio_cast(JArray<jint>*)\n-{\n-  return NULL;\n-}\n-\n-JArray<jint>*\n-gnu::java::nio::IntBufferImpl::nio_cast(JArray<jlong>*)\n-{\n-  return NULL;\n-}\n-\n-JArray<jint>*\n-gnu::java::nio::IntBufferImpl::nio_cast(JArray<jchar>*)\n-{\n-  return NULL;\n-}\n-\n-JArray<jint>*\n-gnu::java::nio::IntBufferImpl::nio_cast(JArray<jfloat>*)\n-{\n-  return NULL;\n-}\n-\n-JArray<jint>*\n-gnu::java::nio::IntBufferImpl::nio_cast(JArray<jdouble>*)\n-{\n-  return NULL;\n-}\n-\n void\n gnu::java::nio::IntBufferImpl::nio_put_Byte(gnu::java::nio::IntBufferImpl*, jint, jint, jbyte)\n {\n }\n \n-void\n-gnu::java::nio::IntBufferImpl::nio_put_Char(gnu::java::nio::IntBufferImpl*, jint, jint, jchar)\n-{\n-}\n-\n-void\n-gnu::java::nio::IntBufferImpl::nio_put_Short(gnu::java::nio::IntBufferImpl*, jint, jint, jshort)\n-{\n-}\n-\n-void\n-gnu::java::nio::IntBufferImpl::nio_put_Int(gnu::java::nio::IntBufferImpl*, jint, jint, jint)\n-{\n-}\n-\n-void\n-gnu::java::nio::IntBufferImpl::nio_put_Long(gnu::java::nio::IntBufferImpl*, jint, jint, jlong)\n-{\n-}\n-\n-void\n-gnu::java::nio::IntBufferImpl::nio_put_Float(gnu::java::nio::IntBufferImpl*, jint, jint, jfloat)\n-{\n-}\n-\n-void\n-gnu::java::nio::IntBufferImpl::nio_put_Double(gnu::java::nio::IntBufferImpl*, jint, jint, jdouble)\n-{\n-}\n-\n jbyte\n gnu::java::nio::IntBufferImpl::nio_get_Byte(gnu::java::nio::IntBufferImpl*, jint, jint)\n {\n   return 0;\n }\n-\n-jchar\n-gnu::java::nio::IntBufferImpl::nio_get_Char(gnu::java::nio::IntBufferImpl*, jint, jint)\n-{\n-  return ' ';\n-}\n-\n-jshort\n-gnu::java::nio::IntBufferImpl::nio_get_Short(gnu::java::nio::IntBufferImpl*, jint, jint)\n-{\n-  return 0;\n-}\n-\n-jint\n-gnu::java::nio::IntBufferImpl::nio_get_Int(gnu::java::nio::IntBufferImpl*, jint, jint)\n-{\n-  return 0;\n-}\n-\n-jlong\n-gnu::java::nio::IntBufferImpl::nio_get_Long(gnu::java::nio::IntBufferImpl*, jint, jint)\n-{\n-  return 0;\n-}\n-\n-jfloat\n-gnu::java::nio::IntBufferImpl::nio_get_Float(gnu::java::nio::IntBufferImpl*, jint, jint)\n-{\n-  return 0.0;\n-}\n-\n-jdouble\n-gnu::java::nio::IntBufferImpl::nio_get_Double(gnu::java::nio::IntBufferImpl*, jint, jint)\n-{\n-  return 0.0;\n-}"}, {"sha": "81181e035d6fda9f53b8873ab2e6b9762c0744d5", "filename": "libjava/gnu/java/nio/natLongBufferImpl.cc", "status": "modified", "additions": 0, "deletions": 102, "changes": 102, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/194ea9ced6f547f5a6922ff9ac1dfb895262f1a2/libjava%2Fgnu%2Fjava%2Fnio%2FnatLongBufferImpl.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/194ea9ced6f547f5a6922ff9ac1dfb895262f1a2/libjava%2Fgnu%2Fjava%2Fnio%2FnatLongBufferImpl.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fnio%2FnatLongBufferImpl.cc?ref=194ea9ced6f547f5a6922ff9ac1dfb895262f1a2", "patch": "@@ -11,115 +11,13 @@ gnu::java::nio::LongBufferImpl::nio_cast(JArray<jbyte>*)\n   return NULL;\n }\n \n-JArray<jlong>*\n-gnu::java::nio::LongBufferImpl::nio_cast(JArray<jshort>*)\n-{\n-  return NULL;\n-}\n-\n-JArray<jlong>*\n-gnu::java::nio::LongBufferImpl::nio_cast(JArray<jint>*)\n-{\n-  return NULL;\n-}\n-\n-JArray<jlong>*\n-gnu::java::nio::LongBufferImpl::nio_cast(JArray<jlong>*)\n-{\n-  return NULL;\n-}\n-\n-JArray<jlong>*\n-gnu::java::nio::LongBufferImpl::nio_cast(JArray<jchar>*)\n-{\n-  return NULL;\n-}\n-\n-JArray<jlong>*\n-gnu::java::nio::LongBufferImpl::nio_cast(JArray<jfloat>*)\n-{\n-  return NULL;\n-}\n-\n-JArray<jlong>*\n-gnu::java::nio::LongBufferImpl::nio_cast(JArray<jdouble>*)\n-{\n-  return NULL;\n-}\n-\n void\n gnu::java::nio::LongBufferImpl::nio_put_Byte(gnu::java::nio::LongBufferImpl*, jint, jint, jbyte)\n {\n }\n \n-void\n-gnu::java::nio::LongBufferImpl::nio_put_Char(gnu::java::nio::LongBufferImpl*, jint, jint, jchar)\n-{\n-}\n-\n-void\n-gnu::java::nio::LongBufferImpl::nio_put_Short(gnu::java::nio::LongBufferImpl*, jint, jint, jshort)\n-{\n-}\n-\n-void\n-gnu::java::nio::LongBufferImpl::nio_put_Int(gnu::java::nio::LongBufferImpl*, jint, jint, jint)\n-{\n-}\n-\n-void\n-gnu::java::nio::LongBufferImpl::nio_put_Long(gnu::java::nio::LongBufferImpl*, jint, jint, jlong)\n-{\n-}\n-\n-void\n-gnu::java::nio::LongBufferImpl::nio_put_Float(gnu::java::nio::LongBufferImpl*, jint, jint, jfloat)\n-{\n-}\n-\n-void\n-gnu::java::nio::LongBufferImpl::nio_put_Double(gnu::java::nio::LongBufferImpl*, jint, jint, jdouble)\n-{\n-}\n-\n jbyte\n gnu::java::nio::LongBufferImpl::nio_get_Byte(gnu::java::nio::LongBufferImpl*, jint, jint)\n {\n   return 0;\n }\n-\n-jchar\n-gnu::java::nio::LongBufferImpl::nio_get_Char(gnu::java::nio::LongBufferImpl*, jint, jint)\n-{\n-  return ' ';\n-}\n-\n-jshort\n-gnu::java::nio::LongBufferImpl::nio_get_Short(gnu::java::nio::LongBufferImpl*, jint, jint)\n-{\n-  return 0;\n-}\n-\n-jint\n-gnu::java::nio::LongBufferImpl::nio_get_Int(gnu::java::nio::LongBufferImpl*, jint, jint)\n-{\n-  return 0;\n-}\n-\n-jlong\n-gnu::java::nio::LongBufferImpl::nio_get_Long(gnu::java::nio::LongBufferImpl*, jint, jint)\n-{\n-  return 0;\n-}\n-\n-jfloat\n-gnu::java::nio::LongBufferImpl::nio_get_Float(gnu::java::nio::LongBufferImpl*, jint, jint)\n-{\n-  return 0.0;\n-}\n-\n-jdouble\n-gnu::java::nio::LongBufferImpl::nio_get_Double(gnu::java::nio::LongBufferImpl*, jint, jint)\n-{\n-  return 0.0;\n-}"}, {"sha": "576573a90480f83c7782625ce010475cc5360e2d", "filename": "libjava/gnu/java/nio/natShortBufferImpl.cc", "status": "modified", "additions": 0, "deletions": 102, "changes": 102, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/194ea9ced6f547f5a6922ff9ac1dfb895262f1a2/libjava%2Fgnu%2Fjava%2Fnio%2FnatShortBufferImpl.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/194ea9ced6f547f5a6922ff9ac1dfb895262f1a2/libjava%2Fgnu%2Fjava%2Fnio%2FnatShortBufferImpl.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fnio%2FnatShortBufferImpl.cc?ref=194ea9ced6f547f5a6922ff9ac1dfb895262f1a2", "patch": "@@ -11,115 +11,13 @@ gnu::java::nio::ShortBufferImpl::nio_cast(JArray<jbyte>*)\n   return NULL;\n }\n \n-JArray<jshort>*\n-gnu::java::nio::ShortBufferImpl::nio_cast(JArray<jshort>*)\n-{\n-  return NULL;\n-}\n-\n-JArray<jshort>*\n-gnu::java::nio::ShortBufferImpl::nio_cast(JArray<jint>*)\n-{\n-  return NULL;\n-}\n-\n-JArray<jshort>*\n-gnu::java::nio::ShortBufferImpl::nio_cast(JArray<jlong>*)\n-{\n-  return NULL;\n-}\n-\n-JArray<jshort>*\n-gnu::java::nio::ShortBufferImpl::nio_cast(JArray<jchar>*)\n-{\n-  return NULL;\n-}\n-\n-JArray<jshort>*\n-gnu::java::nio::ShortBufferImpl::nio_cast(JArray<jfloat>*)\n-{\n-  return NULL;\n-}\n-\n-JArray<jshort>*\n-gnu::java::nio::ShortBufferImpl::nio_cast(JArray<jdouble>*)\n-{\n-  return NULL;\n-}\n-\n void\n gnu::java::nio::ShortBufferImpl::nio_put_Byte(gnu::java::nio::ShortBufferImpl*, jint, jint, jbyte)\n {\n }\n \n-void\n-gnu::java::nio::ShortBufferImpl::nio_put_Char(gnu::java::nio::ShortBufferImpl*, jint, jint, jchar)\n-{\n-}\n-\n-void\n-gnu::java::nio::ShortBufferImpl::nio_put_Short(gnu::java::nio::ShortBufferImpl*, jint, jint, jshort)\n-{\n-}\n-\n-void\n-gnu::java::nio::ShortBufferImpl::nio_put_Int(gnu::java::nio::ShortBufferImpl*, jint, jint, jint)\n-{\n-}\n-\n-void\n-gnu::java::nio::ShortBufferImpl::nio_put_Long(gnu::java::nio::ShortBufferImpl*, jint, jint, jlong)\n-{\n-}\n-\n-void\n-gnu::java::nio::ShortBufferImpl::nio_put_Float(gnu::java::nio::ShortBufferImpl*, jint, jint, jfloat)\n-{\n-}\n-\n-void\n-gnu::java::nio::ShortBufferImpl::nio_put_Double(gnu::java::nio::ShortBufferImpl*, jint, jint, jdouble)\n-{\n-}\n-\n jbyte\n gnu::java::nio::ShortBufferImpl::nio_get_Byte(gnu::java::nio::ShortBufferImpl*, jint, jint)\n {\n   return 0;\n }\n-\n-jchar\n-gnu::java::nio::ShortBufferImpl::nio_get_Char(gnu::java::nio::ShortBufferImpl*, jint, jint)\n-{\n-  return ' ';\n-}\n-\n-jshort\n-gnu::java::nio::ShortBufferImpl::nio_get_Short(gnu::java::nio::ShortBufferImpl*, jint, jint)\n-{\n-  return 0;\n-}\n-\n-jint\n-gnu::java::nio::ShortBufferImpl::nio_get_Int(gnu::java::nio::ShortBufferImpl*, jint, jint)\n-{\n-  return 0;\n-}\n-\n-jlong\n-gnu::java::nio::ShortBufferImpl::nio_get_Long(gnu::java::nio::ShortBufferImpl*, jint, jint)\n-{\n-  return 0;\n-}\n-\n-jfloat\n-gnu::java::nio::ShortBufferImpl::nio_get_Float(gnu::java::nio::ShortBufferImpl*, jint, jint)\n-{\n-  return 0.0;\n-}\n-\n-jdouble\n-gnu::java::nio::ShortBufferImpl::nio_get_Double(gnu::java::nio::ShortBufferImpl*, jint, jint)\n-{\n-  return 0.0;\n-}"}, {"sha": "b46b320cbbd3cc34116f2bec03cef5a264cee90d", "filename": "libjava/java/nio/ByteBuffer.java", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/194ea9ced6f547f5a6922ff9ac1dfb895262f1a2/libjava%2Fjava%2Fnio%2FByteBuffer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/194ea9ced6f547f5a6922ff9ac1dfb895262f1a2/libjava%2Fjava%2Fnio%2FByteBuffer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fnio%2FByteBuffer.java?ref=194ea9ced6f547f5a6922ff9ac1dfb895262f1a2", "patch": "@@ -43,7 +43,6 @@\n public abstract class ByteBuffer extends Buffer implements Comparable\n {\n   int offset;\n-  boolean readOnly;\n   byte[] backing_buffer;\n   \n   /**\n@@ -156,7 +155,7 @@ public final ByteBuffer put (byte[] src)\n   public final boolean hasArray ()\n   {\n     return (backing_buffer != null\n-             && !readOnly);\n+             && !isReadOnly ());\n   }\n \n   /**\n@@ -172,7 +171,7 @@ public final byte[] array ()\n     if (backing_buffer == null)\n       throw new UnsupportedOperationException ();\n \n-    if (readOnly)\n+    if (isReadOnly ())\n       throw new ReadOnlyBufferException ();\n \n     return backing_buffer;\n@@ -192,7 +191,7 @@ public final int arrayOffset ()\n     if (backing_buffer == null)\n       throw new UnsupportedOperationException ();\n \n-    if (readOnly)\n+    if (isReadOnly ())\n       throw new ReadOnlyBufferException ();\n \n     return offset;"}, {"sha": "34aedebbd43f9e5a27c9b7ddf94938f05860ae70", "filename": "libjava/java/nio/CharBuffer.java", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/194ea9ced6f547f5a6922ff9ac1dfb895262f1a2/libjava%2Fjava%2Fnio%2FCharBuffer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/194ea9ced6f547f5a6922ff9ac1dfb895262f1a2/libjava%2Fjava%2Fnio%2FCharBuffer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fnio%2FCharBuffer.java?ref=194ea9ced6f547f5a6922ff9ac1dfb895262f1a2", "patch": "@@ -38,6 +38,7 @@\n package java.nio;\n \n public abstract class CharBuffer extends Buffer\n+  implements Cloneable, CharSequence\n {\n   private ByteOrder endian = ByteOrder.BIG_ENDIAN;\n "}]}