{"sha": "d5656544848558da436c8f33055b2ca2cc3a18ef", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDU2NTY1NDQ4NDg1NThkYTQzNmM4ZjMzMDU1YjJjYTJjYzNhMThlZg==", "commit": {"author": {"name": "Tobias Burnus", "email": "burnus@net-b.de", "date": "2010-11-11T23:07:23Z"}, "committer": {"name": "Tobias Burnus", "email": "burnus@gcc.gnu.org", "date": "2010-11-11T23:07:23Z"}, "message": "re PR fortran/46413 ([OOP] ICE when printing a polymorphic type)\n\n2010-11-11  Tobias Burnus  <burnus@net-b.de>\n\n        PR fortran/46413\n        * resolve.c (resolve_transfer): Reject I/O transfer of\n        polymorphic type.\n\n        PR fortran/46205\n        * resolve.c (resolve_code): Reject nonscalar FORALL masks.\n\n2010-11-11  Tobias Burnus  <burnus@net-b.de>\n\n        PR fortran/46413\n        * gfortran.dg/class_31.f90: New.\n\n        PR fortran/46205\n        * gfortran.dg/forall_14.f90: New.\n\nFrom-SVN: r166631", "tree": {"sha": "125b58d69b7782f92437df2511f9119e7000cc4d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/125b58d69b7782f92437df2511f9119e7000cc4d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d5656544848558da436c8f33055b2ca2cc3a18ef", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d5656544848558da436c8f33055b2ca2cc3a18ef", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d5656544848558da436c8f33055b2ca2cc3a18ef", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d5656544848558da436c8f33055b2ca2cc3a18ef/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "dc09b1077d0acd283afffd5eb09dda34b9f6ba95", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dc09b1077d0acd283afffd5eb09dda34b9f6ba95", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dc09b1077d0acd283afffd5eb09dda34b9f6ba95"}], "stats": {"total": 60, "additions": 58, "deletions": 2}, "files": [{"sha": "d6afdc4a57584119f30330189fa81b2ee3b33b15", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d5656544848558da436c8f33055b2ca2cc3a18ef/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d5656544848558da436c8f33055b2ca2cc3a18ef/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=d5656544848558da436c8f33055b2ca2cc3a18ef", "patch": "@@ -1,3 +1,12 @@\n+2010-11-11  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/46413\n+\t* resolve.c (resolve_transfer): Reject I/O transfer of\n+\tpolymorphic type.\n+\n+\tPR fortran/46205\n+\t* resolve.c (resolve_code): Reject nonscalar FORALL masks.\n+\n 2010-11-11  Janus Weil  <janus@gcc.gnu.org>\n \n \t* resolve.c (resolve_procedure_interface): Copy 'is_bind_c' attribute."}, {"sha": "60a15d8b76a44a7c8b61fd5b6ee96342b760a163", "filename": "gcc/fortran/resolve.c", "status": "modified", "additions": 12, "deletions": 2, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d5656544848558da436c8f33055b2ca2cc3a18ef/gcc%2Ffortran%2Fresolve.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d5656544848558da436c8f33055b2ca2cc3a18ef/gcc%2Ffortran%2Fresolve.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fresolve.c?ref=d5656544848558da436c8f33055b2ca2cc3a18ef", "patch": "@@ -7949,6 +7949,15 @@ resolve_transfer (gfc_code *code)\n     if (ref->type == REF_COMPONENT)\n       ts = &ref->u.c.component->ts;\n \n+  if (ts->type == BT_CLASS)\n+    {\n+      /* FIXME: Test for defined input/output.  */\n+      gfc_error (\"Data transfer element at %L cannot be polymorphic unless \"\n+                \"it is processed by a defined input/output procedure\",\n+                &code->loc);\n+      return;\n+    }\n+\n   if (ts->type == BT_DERIVED)\n     {\n       /* Check that transferred derived type doesn't contain POINTER\n@@ -9099,8 +9108,9 @@ resolve_code (gfc_code *code, gfc_namespace *ns)\n \tcase EXEC_FORALL:\n \t  resolve_forall_iterators (code->ext.forall_iterator);\n \n-\t  if (code->expr1 != NULL && code->expr1->ts.type != BT_LOGICAL)\n-\t    gfc_error (\"FORALL mask clause at %L requires a LOGICAL \"\n+\t  if (code->expr1 != NULL\n+\t      && (code->expr1->ts.type != BT_LOGICAL || code->expr1->rank))\n+\t    gfc_error (\"FORALL mask clause at %L requires a scalar LOGICAL \"\n \t\t       \"expression\", &code->expr1->where);\n \t  break;\n "}, {"sha": "381b9c2375b29c72a09f6b3c14f7bfa5c75799f0", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d5656544848558da436c8f33055b2ca2cc3a18ef/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d5656544848558da436c8f33055b2ca2cc3a18ef/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=d5656544848558da436c8f33055b2ca2cc3a18ef", "patch": "@@ -1,3 +1,11 @@\n+2010-11-11  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/46413\n+\t* gfortran.dg/class_31.f90: New.\n+\n+\tPR fortran/46205\n+\t* gfortran.dg/forall_14.f90: New.\n+\n 2010-11-11  Jakub Jelinek <jakub@redhat.com>\n \t    Tobias Burnus <burnus@net-b.de>\n "}, {"sha": "eddf13f1beae498be3c5fa8b5535ad4ada02dd66", "filename": "gcc/testsuite/gfortran.dg/class_31.f90", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d5656544848558da436c8f33055b2ca2cc3a18ef/gcc%2Ftestsuite%2Fgfortran.dg%2Fclass_31.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d5656544848558da436c8f33055b2ca2cc3a18ef/gcc%2Ftestsuite%2Fgfortran.dg%2Fclass_31.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fclass_31.f90?ref=d5656544848558da436c8f33055b2ca2cc3a18ef", "patch": "@@ -0,0 +1,12 @@\n+! { dg-do compile }\n+!\n+! PR fortran/46413\n+!\n+type t\n+  integer :: ii =5\n+end type t\n+class(t), allocatable :: x\n+allocate (t :: x)\n+\n+print *,x  ! { dg-error \"Data transfer element at .1. cannot be polymorphic\" }\n+end"}, {"sha": "a3fb3921de17a2b684fbbad526123629e4b30d5a", "filename": "gcc/testsuite/gfortran.dg/forall_14.f90", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d5656544848558da436c8f33055b2ca2cc3a18ef/gcc%2Ftestsuite%2Fgfortran.dg%2Fforall_14.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d5656544848558da436c8f33055b2ca2cc3a18ef/gcc%2Ftestsuite%2Fgfortran.dg%2Fforall_14.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fforall_14.f90?ref=d5656544848558da436c8f33055b2ca2cc3a18ef", "patch": "@@ -0,0 +1,17 @@\n+! { dg-do compile }\n+!\n+! PR fortran/46205\n+!\n+! Contributed by Jonathan Stott\n+!\n+\n+program forallBug\n+  logical :: valid(4) = (/ .true., .true., .false., .true. /)\n+  real    :: vec(4)\n+  integer :: j\n+\n+  ! This is an illegal statement.  It should read valid(j), not valid.\n+  forall (j = 1:4, valid) ! { dg-error \"requires a scalar LOGICAL expression\" }\n+     vec(j) = sin(2*3.14159/j)\n+  end forall\n+end program forallBug"}]}