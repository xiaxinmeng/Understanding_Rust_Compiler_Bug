{"sha": "d4fc0fb47f2fbc0910178660cffdf6f0b209fad9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDRmYzBmYjQ3ZjJmYmMwOTEwMTc4NjYwY2ZmZGY2ZjBiMjA5ZmFkOQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2010-06-18T15:32:24Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2010-06-18T15:32:24Z"}, "message": "[multiple changes]\n\n2010-06-18  Javier Miranda  <miranda@adacore.com>\n\n\t* exp_cg.adb (Homonym_Suffix_Length): Minor code reorganization.\n\n2010-06-18  Thomas Quinot  <quinot@adacore.com>\n\n\t* sprint.ads: Minor reformatting.\n\t* output.ads: Update obsolete comment.\n\n2010-06-18  Ed Schonberg  <schonberg@adacore.com>\n\n\t* freeze.adb (Build_And_Analyze_Renamed_Body): if the renamed entity is\n\tan external intrinsic operation (e.g. a GCC numeric function) indicate\n\tthat the renaming entity has the same characteristics, so a call to it\n\tis properly expanded.\n\nFrom-SVN: r160999", "tree": {"sha": "a76140f8cab5505c2a5536cc35b0f095f305d0a5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a76140f8cab5505c2a5536cc35b0f095f305d0a5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d4fc0fb47f2fbc0910178660cffdf6f0b209fad9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d4fc0fb47f2fbc0910178660cffdf6f0b209fad9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d4fc0fb47f2fbc0910178660cffdf6f0b209fad9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d4fc0fb47f2fbc0910178660cffdf6f0b209fad9/comments", "author": null, "committer": null, "parents": [{"sha": "9c41193c1d20b505ca2d5292a24cc585d11c83e2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9c41193c1d20b505ca2d5292a24cc585d11c83e2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9c41193c1d20b505ca2d5292a24cc585d11c83e2"}], "stats": {"total": 98, "additions": 74, "deletions": 24}, "files": [{"sha": "30b6acb8661680dde51ac314f186de36b08aa6f0", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4fc0fb47f2fbc0910178660cffdf6f0b209fad9/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4fc0fb47f2fbc0910178660cffdf6f0b209fad9/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=d4fc0fb47f2fbc0910178660cffdf6f0b209fad9", "patch": "@@ -1,3 +1,19 @@\n+2010-06-18  Javier Miranda  <miranda@adacore.com>\n+\n+\t* exp_cg.adb (Homonym_Suffix_Length): Minor code reorganization.\n+\n+2010-06-18  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* sprint.ads: Minor reformatting.\n+\t* output.ads: Update obsolete comment.\n+\n+2010-06-18  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* freeze.adb (Build_And_Analyze_Renamed_Body): if the renamed entity is\n+\tan external intrinsic operation (e.g. a GCC numeric function) indicate\n+\tthat the renaming entity has the same characteristics, so a call to it\n+\tis properly expanded.\n+\n 2010-06-18  Javier Miranda  <miranda@adacore.com>\n \n \t* exp_cg.adb, exp_cg.ads, exp_disp.adb, gnat1drv.adb: Add initial"}, {"sha": "d207a3c21e16b44124979f2167068d8a26e6817a", "filename": "gcc/ada/exp_cg.adb", "status": "modified", "additions": 10, "deletions": 12, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4fc0fb47f2fbc0910178660cffdf6f0b209fad9/gcc%2Fada%2Fexp_cg.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4fc0fb47f2fbc0910178660cffdf6f0b209fad9/gcc%2Fada%2Fexp_cg.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_cg.adb?ref=d4fc0fb47f2fbc0910178660cffdf6f0b209fad9", "patch": "@@ -31,7 +31,7 @@ with Exp_Disp; use Exp_Disp;\n with Exp_Tss;  use Exp_Tss;\n --  with Interfaces.C;\n --  with Interfaces.C_Streams;\n---  Why are these commented out ???\n+--   Why are these commented out ???\n with Lib;      use Lib;\n with Namet;    use Namet;\n with Opt;      use Opt;\n@@ -161,18 +161,16 @@ package body Exp_CG is\n \n             --  Prefix \"__\" followed by number\n \n-            elsif Nr < 10 then\n-               return Prefix_Length + 1;\n-\n-            elsif Nr < 100 then\n-               return Prefix_Length + 2;\n-\n-            elsif Nr < 1000 then\n-               return Prefix_Length + 3;\n-\n             else\n-               pragma Assert (False);\n-               raise Program_Error;\n+               declare\n+                  Result : Natural := Prefix_Length + 1;\n+               begin\n+                  while Nr > 10 loop\n+                     Result := Result + 1;\n+                     Nr := Nr / 10;\n+                  end loop;\n+                  return Result;\n+               end;\n             end if;\n          end if;\n       end Homonym_Suffix_Length;"}, {"sha": "289730704cd0c7b78dd06a47ad041d32564f9fe1", "filename": "gcc/ada/freeze.adb", "status": "modified", "additions": 42, "deletions": 7, "changes": 49, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4fc0fb47f2fbc0910178660cffdf6f0b209fad9/gcc%2Fada%2Ffreeze.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4fc0fb47f2fbc0910178660cffdf6f0b209fad9/gcc%2Fada%2Ffreeze.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffreeze.adb?ref=d4fc0fb47f2fbc0910178660cffdf6f0b209fad9", "patch": "@@ -203,12 +203,44 @@ package body Freeze is\n       New_S : Entity_Id;\n       After : in out Node_Id)\n    is\n-      Body_Node : constant Node_Id := Build_Renamed_Body (Decl, New_S);\n+      Body_Node :  Node_Id;\n+      Intr      : Entity_Id;\n+      Body_Decl : constant Node_Id := Unit_Declaration_Node (New_S);\n+      Ent       : constant Entity_Id := Defining_Entity (Decl);\n+\n    begin\n-      Insert_After (After, Body_Node);\n-      Mark_Rewrite_Insertion (Body_Node);\n-      Analyze (Body_Node);\n-      After := Body_Node;\n+\n+      --  if the renamed subprogram is intrinsic, there is no need for a\n+      --  wrapper body: we set the alias that will be called and expanded\n+      --  which completes the declaration.\n+      --  Note that it is legal for a renaming_as_body to rename an intrinsic\n+      --  subprogram, as long as the renaming occurs before the new entity\n+      --  is frozen. See RM 8.5.4 (5).\n+\n+      if Nkind (Body_Decl) = N_Subprogram_Renaming_Declaration\n+         and then Is_Entity_Name (Name (Body_Decl))\n+        and then Is_Intrinsic_Subprogram (Entity (Name (Body_Decl)))\n+        and then Present (Interface_Name (Entity (Name (Body_Decl))))\n+      then\n+         Intr := Entity (Name (Body_Decl));\n+         Set_Interface_Name\n+           (Intr, Interface_Name (Entity (Name (Body_Decl))));\n+         if Present (Alias (Intr)) then\n+            Set_Alias (Ent, Alias (Intr));\n+         else\n+            Set_Alias (Ent, Intr);\n+         end if;\n+\n+         Set_Is_Intrinsic_Subprogram (Ent);\n+         Set_Has_Completion (Ent);\n+\n+      else\n+         Body_Node := Build_Renamed_Body (Decl, New_S);\n+         Insert_After (After, Body_Node);\n+         Mark_Rewrite_Insertion (Body_Node);\n+         Analyze (Body_Node);\n+         After := Body_Node;\n+      end if;\n    end Build_And_Analyze_Renamed_Body;\n \n    ------------------------\n@@ -308,8 +340,8 @@ package body Freeze is\n       end if;\n \n       --  For simple renamings, subsequent calls can be expanded directly as\n-      --  called to the renamed entity. The body must be generated in any case\n-      --  for calls they may appear elsewhere.\n+      --  calls to the renamed entity. The body must be generated in any case\n+      --  for calls that may appear elsewhere.\n \n       if (Ekind (Old_S) = E_Function\n            or else Ekind (Old_S) = E_Procedure)\n@@ -1340,6 +1372,9 @@ package body Freeze is\n       --  point at which such functions are constructed (after all types that\n       --  might be used in such expressions have been frozen).\n \n+      --  For subprograms that are renaming_as_body, we create the wrapper\n+      --  bodies as needed.\n+\n       --  We also add finalization chains to access types whose designated\n       --  types are controlled. This is normally done when freezing the type,\n       --  but this misses recursive type definitions where the later members"}, {"sha": "2df0da661e52702bb511a4045af055d3b0c6d0a0", "filename": "gcc/ada/output.ads", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4fc0fb47f2fbc0910178660cffdf6f0b209fad9/gcc%2Fada%2Foutput.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4fc0fb47f2fbc0910178660cffdf6f0b209fad9/gcc%2Fada%2Foutput.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Foutput.ads?ref=d4fc0fb47f2fbc0910178660cffdf6f0b209fad9", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2009, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2010, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -29,9 +29,9 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n---  This package contains low level output routines used by the compiler\n---  for writing error messages and informational output. It is also used\n---  by the debug source file output routines (see Sprintf.Print_Eol).\n+--  This package contains low level output routines used by the compiler for\n+--  writing error messages and informational output. It is also used by the\n+--  debug source file output routines (see Sprint.Print_Debug_Line).\n \n with Hostparm; use Hostparm;\n with Types;    use Types;"}, {"sha": "64fe81ae4c5c7ec7461cd3bca61bf2c065f3f347", "filename": "gcc/ada/sprint.ads", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4fc0fb47f2fbc0910178660cffdf6f0b209fad9/gcc%2Fada%2Fsprint.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4fc0fb47f2fbc0910178660cffdf6f0b209fad9/gcc%2Fada%2Fsprint.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsprint.ads?ref=d4fc0fb47f2fbc0910178660cffdf6f0b209fad9", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2009, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2010, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -32,6 +32,7 @@\n --  tree may either blow up on a debugging check, or list incorrect source.\n \n with Types; use Types;\n+\n package Sprint is\n \n    -----------------------"}]}