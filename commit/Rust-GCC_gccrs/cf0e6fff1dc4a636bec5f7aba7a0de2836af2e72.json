{"sha": "cf0e6fff1dc4a636bec5f7aba7a0de2836af2e72", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2YwZTZmZmYxZGM0YTYzNmJlYzVmN2FiYTdhMGRlMjgzNmFmMmU3Mg==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo.carlini@oracle.com", "date": "2009-05-18T23:16:20Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2009-05-18T23:16:20Z"}, "message": "re PR c++/40192 (Unable to use std::vector with typedef'd array types)\n\n2009-05-18  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR libstdc++/40192\n\t* include/bits/stl_construct.h (struct _Destroy_aux): Add.\n\t(_Destroy(_ForwardIterator, _ForwardIterator)): Use the latter.\n\t* testsuite/23_containers/vector/40192.cc: New.\n\nFrom-SVN: r147680", "tree": {"sha": "ed7a8a192ab8965cf03e0c224efbfe60ad153cd2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ed7a8a192ab8965cf03e0c224efbfe60ad153cd2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cf0e6fff1dc4a636bec5f7aba7a0de2836af2e72", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cf0e6fff1dc4a636bec5f7aba7a0de2836af2e72", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cf0e6fff1dc4a636bec5f7aba7a0de2836af2e72", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cf0e6fff1dc4a636bec5f7aba7a0de2836af2e72/comments", "author": null, "committer": null, "parents": [{"sha": "1bb99877d3353dbb216ee90a61bd9de811387c7d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1bb99877d3353dbb216ee90a61bd9de811387c7d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1bb99877d3353dbb216ee90a61bd9de811387c7d"}], "stats": {"total": 60, "additions": 57, "deletions": 3}, "files": [{"sha": "ab3c32df63cc7a6073ed2e9f5361df5ca0d2fabc", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf0e6fff1dc4a636bec5f7aba7a0de2836af2e72/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf0e6fff1dc4a636bec5f7aba7a0de2836af2e72/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=cf0e6fff1dc4a636bec5f7aba7a0de2836af2e72", "patch": "@@ -1,3 +1,10 @@\n+2009-05-18  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR libstdc++/40192\n+\t* include/bits/stl_construct.h (struct _Destroy_aux): Add.\n+\t(_Destroy(_ForwardIterator, _ForwardIterator)): Use the latter.\n+\t* testsuite/23_containers/vector/40192.cc: New.\n+\n 2009-05-18  Jonathan Wakely  <jwakely.gcc@gmail.com>\n \n \t* include/bits/stl_pair.h (swap): Do not swap rvalues."}, {"sha": "9df37fe19505c86f8709b9e0f2340f6b01f9ab83", "filename": "libstdc++-v3/include/bits/stl_construct.h", "status": "modified", "additions": 22, "deletions": 3, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf0e6fff1dc4a636bec5f7aba7a0de2836af2e72/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_construct.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf0e6fff1dc4a636bec5f7aba7a0de2836af2e72/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_construct.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_construct.h?ref=cf0e6fff1dc4a636bec5f7aba7a0de2836af2e72", "patch": "@@ -82,6 +82,26 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n     _Destroy(_Tp* __pointer)\n     { __pointer->~_Tp(); }\n \n+  template<bool>\n+    struct _Destroy_aux\n+    {\n+      template<typename _ForwardIterator>\n+        static void\n+        __destroy(_ForwardIterator __first, _ForwardIterator __last)\n+\t{\n+\t  for (; __first != __last; ++__first)\n+\t    std::_Destroy(&*__first);\n+\t}\n+    };\n+\n+  template<>\n+    struct _Destroy_aux<true>\n+    {\n+      template<typename _ForwardIterator>\n+        static void\n+        __destroy(_ForwardIterator, _ForwardIterator) { }\n+    };\n+\n   /**\n    * Destroy a range of objects.  If the value_type of the object has\n    * a trivial destructor, the compiler should optimize all of this\n@@ -93,9 +113,8 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n     {\n       typedef typename iterator_traits<_ForwardIterator>::value_type\n                        _Value_type;\n-      if (!__has_trivial_destructor(_Value_type))\n-\tfor (; __first != __last; ++__first)\n-\t  std::_Destroy(&*__first);\n+      std::_Destroy_aux<__has_trivial_destructor(_Value_type)>::\n+\t__destroy(__first, __last);\n     }\n \n   /**"}, {"sha": "eff88d422bd6302cf2a24a739db49a87b725a033", "filename": "libstdc++-v3/testsuite/23_containers/vector/40192.cc", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf0e6fff1dc4a636bec5f7aba7a0de2836af2e72/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2F40192.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf0e6fff1dc4a636bec5f7aba7a0de2836af2e72/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2F40192.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2F40192.cc?ref=cf0e6fff1dc4a636bec5f7aba7a0de2836af2e72", "patch": "@@ -0,0 +1,28 @@\n+// Copyright (C) 2009 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// { dg-do compile }\n+\n+// libstdc++/40192\n+\n+#include <vector>\n+\n+void test01()\n+{\n+  typedef float float4[4];\n+  std::vector<float4> vals;\n+}"}]}