{"sha": "d7d775a019c3a310bf54759560c7392bb03ea669", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDdkNzc1YTAxOWMzYTMxMGJmNTQ3NTk1NjBjNzM5MmJiMDNlYTY2OQ==", "commit": {"author": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1997-06-10T21:39:22Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1997-06-10T21:39:22Z"}, "message": "(emit_group_load): Add case using gen_lowpart.\n\nFrom-SVN: r14224", "tree": {"sha": "faf3e34ff36375f8c8ed9bac8492323950b2ae5d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/faf3e34ff36375f8c8ed9bac8492323950b2ae5d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d7d775a019c3a310bf54759560c7392bb03ea669", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d7d775a019c3a310bf54759560c7392bb03ea669", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d7d775a019c3a310bf54759560c7392bb03ea669", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d7d775a019c3a310bf54759560c7392bb03ea669/comments", "author": null, "committer": null, "parents": [{"sha": "b2e0187668a161b6f98282bf87fda6099ddf6bf1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b2e0187668a161b6f98282bf87fda6099ddf6bf1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b2e0187668a161b6f98282bf87fda6099ddf6bf1"}], "stats": {"total": 3, "additions": 3, "deletions": 0}, "files": [{"sha": "b3ca5395475b0590065c2ae0dcce17c682b9597b", "filename": "gcc/expr.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d7d775a019c3a310bf54759560c7392bb03ea669/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d7d775a019c3a310bf54759560c7392bb03ea669/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=d7d775a019c3a310bf54759560c7392bb03ea669", "patch": "@@ -1813,6 +1813,9 @@ emit_group_load (x, y)\n \t\t   && GET_MODE (target_reg) == word_mode)\n \t    /* This might be a const_double, so we can't just use SUBREG.  */\n \t    source = operand_subword (y, 0, 0, VOIDmode);\n+\t  else if (GET_MODE_SIZE (GET_MODE (target_reg))\n+\t\t   == GET_MODE_SIZE (GET_MODE (y)))\n+\t    source = gen_lowpart (GET_MODE (target_reg), y);\n \t  else\n \t    abort ();\t    \n \t}"}]}