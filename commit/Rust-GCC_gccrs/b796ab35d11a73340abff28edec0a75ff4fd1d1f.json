{"sha": "b796ab35d11a73340abff28edec0a75ff4fd1d1f", "node_id": "C_kwDOANBUbNoAKGI3OTZhYjM1ZDExYTczMzQwYWJmZjI4ZWRlYzBhNzVmZjRmZDFkMWY", "commit": {"author": {"name": "Claudiu Zissulescu", "email": "claziss@synopsys.com", "date": "2021-11-16T10:07:02Z"}, "committer": {"name": "Claudiu Zissulescu", "email": "claziss@synopsys.com", "date": "2021-11-16T10:34:59Z"}, "message": "arc: Update (u)maddhisi4 patterns\n\nThe (u)maddsihi4 patterns are using the ARC's VMAC2H(U)\ninstruction with null destination, however, VMAC2H(U) doesn't\nrewrite the accumulator.  This patch solves the destination issue\nof VMAC2H by replacing it with DMACH(U) instruction.\n\ngcc/\n\n\t* config/arc/arc.md (maddhisi4): Use a single move to accumulator.\n\t(umaddhisi4): Likewise.\n\t(machi): Update pattern.\n\t(umachi): Likewise.\n\ngcc/testsuite/\n\n\t* gcc.target/arc/tmac-4.c: New test.\n\nSigned-off-by: Claudiu Zissulescu <claziss@synopsys.com>", "tree": {"sha": "60899db351d45de4adaa19695f1279286d5c7de2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/60899db351d45de4adaa19695f1279286d5c7de2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b796ab35d11a73340abff28edec0a75ff4fd1d1f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b796ab35d11a73340abff28edec0a75ff4fd1d1f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b796ab35d11a73340abff28edec0a75ff4fd1d1f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b796ab35d11a73340abff28edec0a75ff4fd1d1f/comments", "author": {"login": "claziss", "id": 2761368, "node_id": "MDQ6VXNlcjI3NjEzNjg=", "avatar_url": "https://avatars.githubusercontent.com/u/2761368?v=4", "gravatar_id": "", "url": "https://api.github.com/users/claziss", "html_url": "https://github.com/claziss", "followers_url": "https://api.github.com/users/claziss/followers", "following_url": "https://api.github.com/users/claziss/following{/other_user}", "gists_url": "https://api.github.com/users/claziss/gists{/gist_id}", "starred_url": "https://api.github.com/users/claziss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/claziss/subscriptions", "organizations_url": "https://api.github.com/users/claziss/orgs", "repos_url": "https://api.github.com/users/claziss/repos", "events_url": "https://api.github.com/users/claziss/events{/privacy}", "received_events_url": "https://api.github.com/users/claziss/received_events", "type": "User", "site_admin": false}, "committer": {"login": "claziss", "id": 2761368, "node_id": "MDQ6VXNlcjI3NjEzNjg=", "avatar_url": "https://avatars.githubusercontent.com/u/2761368?v=4", "gravatar_id": "", "url": "https://api.github.com/users/claziss", "html_url": "https://github.com/claziss", "followers_url": "https://api.github.com/users/claziss/followers", "following_url": "https://api.github.com/users/claziss/following{/other_user}", "gists_url": "https://api.github.com/users/claziss/gists{/gist_id}", "starred_url": "https://api.github.com/users/claziss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/claziss/subscriptions", "organizations_url": "https://api.github.com/users/claziss/orgs", "repos_url": "https://api.github.com/users/claziss/repos", "events_url": "https://api.github.com/users/claziss/events{/privacy}", "received_events_url": "https://api.github.com/users/claziss/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "045206450386bcd774db3bde0c696828402361c6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/045206450386bcd774db3bde0c696828402361c6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/045206450386bcd774db3bde0c696828402361c6"}], "stats": {"total": 63, "additions": 46, "deletions": 17}, "files": [{"sha": "74ec38f1526a50a69082ffafd5ae1f76d13dfea2", "filename": "gcc/config/arc/arc.md", "status": "modified", "additions": 17, "deletions": 17, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b796ab35d11a73340abff28edec0a75ff4fd1d1f/gcc%2Fconfig%2Farc%2Farc.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b796ab35d11a73340abff28edec0a75ff4fd1d1f/gcc%2Fconfig%2Farc%2Farc.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farc%2Farc.md?ref=b796ab35d11a73340abff28edec0a75ff4fd1d1f", "patch": "@@ -6023,26 +6023,26 @@ core_3, archs4x, archs4xd, archs4xd_slow\"\n (define_expand \"maddhisi4\"\n   [(match_operand:SI 0 \"register_operand\" \"\")\n    (match_operand:HI 1 \"register_operand\" \"\")\n-   (match_operand:HI 2 \"extend_operand\"   \"\")\n+   (match_operand:HI 2 \"register_operand\" \"\")\n    (match_operand:SI 3 \"register_operand\" \"\")]\n   \"TARGET_PLUS_MACD\"\n   \"{\n-   rtx acc_reg = gen_rtx_REG (SImode, ACC_REG_FIRST);\n+   rtx acc_reg = gen_rtx_REG (SImode, ACCL_REGNO);\n \n    emit_move_insn (acc_reg, operands[3]);\n-   emit_insn (gen_machi (operands[1], operands[2]));\n-   emit_move_insn (operands[0], acc_reg);\n+   emit_insn (gen_machi (operands[0], operands[1], operands[2], acc_reg));\n    DONE;\n   }\")\n \n (define_insn \"machi\"\n-  [(set (reg:SI ARCV2_ACC)\n+  [(set (match_operand:SI 0 \"register_operand\" \"=Ral,r\")\n \t(plus:SI\n-\t (mult:SI (sign_extend:SI (match_operand:HI 0 \"register_operand\" \"%r\"))\n-\t\t  (sign_extend:SI (match_operand:HI 1 \"register_operand\" \"r\")))\n-\t (reg:SI ARCV2_ACC)))]\n+\t (mult:SI (sign_extend:SI (match_operand:HI 1 \"register_operand\" \"%r,r\"))\n+\t\t  (sign_extend:SI (match_operand:HI 2 \"register_operand\" \"r,r\")))\n+\t (match_operand:SI 3 \"accl_operand\" \"\")))\n+   (clobber (reg:DI ARCV2_ACC))]\n   \"TARGET_PLUS_MACD\"\n-  \"vmac2h\\\\t0,%0,%1\"\n+  \"dmach\\\\t%0,%1,%2\"\n   [(set_attr \"length\" \"4\")\n    (set_attr \"type\" \"multi\")\n    (set_attr \"predicable\" \"no\")\n@@ -6056,22 +6056,22 @@ core_3, archs4x, archs4xd, archs4xd_slow\"\n    (match_operand:SI 3 \"register_operand\" \"\")]\n   \"TARGET_PLUS_MACD\"\n   \"{\n-   rtx acc_reg = gen_rtx_REG (SImode, ACC_REG_FIRST);\n+   rtx acc_reg = gen_rtx_REG (SImode, ACCL_REGNO);\n \n    emit_move_insn (acc_reg, operands[3]);\n-   emit_insn (gen_umachi (operands[1], operands[2]));\n-   emit_move_insn (operands[0], acc_reg);\n+   emit_insn (gen_umachi (operands[0], operands[1], operands[2], acc_reg));\n    DONE;\n   }\")\n \n (define_insn \"umachi\"\n-  [(set (reg:SI ARCV2_ACC)\n+  [(set (match_operand:SI 0 \"register_operand\" \"=Ral,r\")\n \t(plus:SI\n-\t (mult:SI (zero_extend:SI (match_operand:HI 0 \"register_operand\" \"%r\"))\n-\t\t  (zero_extend:SI (match_operand:HI 1 \"register_operand\" \"r\")))\n-\t (reg:SI ARCV2_ACC)))]\n+\t (mult:SI (zero_extend:SI (match_operand:HI 1 \"register_operand\" \"%r,r\"))\n+\t\t  (zero_extend:SI (match_operand:HI 2 \"register_operand\" \"r,r\")))\n+\t (match_operand:SI 3 \"accl_operand\" \"\")))\n+   (clobber (reg:DI ARCV2_ACC))]\n   \"TARGET_PLUS_MACD\"\n-  \"vmac2hu\\\\t0,%0,%1\"\n+  \"dmachu\\\\t%0,%1,%2\"\n   [(set_attr \"length\" \"4\")\n    (set_attr \"type\" \"multi\")\n    (set_attr \"predicable\" \"no\")"}, {"sha": "3c6b99327a72bb14159bab3bb7fd30c42015091c", "filename": "gcc/testsuite/gcc.target/arc/tmac-4.c", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b796ab35d11a73340abff28edec0a75ff4fd1d1f/gcc%2Ftestsuite%2Fgcc.target%2Farc%2Ftmac-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b796ab35d11a73340abff28edec0a75ff4fd1d1f/gcc%2Ftestsuite%2Fgcc.target%2Farc%2Ftmac-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farc%2Ftmac-4.c?ref=b796ab35d11a73340abff28edec0a75ff4fd1d1f", "patch": "@@ -0,0 +1,29 @@\n+/* { dg-do compile } */\n+/* { dg-skip-if \"\" { ! { clmcpu } } } */\n+/* { dg-options \"-O3 -mbig-endian -mcpu=hs38\" } */\n+\n+struct a {};\n+struct b {\n+  int c;\n+  int d;\n+};\n+\n+struct {\n+  struct a e;\n+  struct b f[];\n+} g;\n+short h;\n+\n+extern void bar (int *);\n+\n+int foo(void)\n+{\n+  struct b *a;\n+  for (;;)\n+    {\n+      a = &g.f[h];\n+      bar(&a->d);\n+    }\n+}\n+\n+/* { dg-final { scan-assembler \"dmach\" } } */"}]}