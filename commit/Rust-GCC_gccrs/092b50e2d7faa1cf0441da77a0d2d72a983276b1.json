{"sha": "092b50e2d7faa1cf0441da77a0d2d72a983276b1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDkyYjUwZTJkN2ZhYTFjZjA0NDFkYTc3YTBkMmQ3MmE5ODMyNzZiMQ==", "commit": {"author": {"name": "Nathan Bryant", "email": "nbryant@optonline.net", "date": "2004-01-14T22:49:58Z"}, "committer": {"name": "Tom Tromey", "email": "tromey@gcc.gnu.org", "date": "2004-01-14T22:49:58Z"}, "message": "re PR libgcj/12001 (_Jv_FindClass dumps core when Oracle's classes12.zip in $CLASSPATH)\n\n\tPR libgcj/12001:\n\t* gnu/gcj/runtime/VMClassLoader.java (VMClassLoader): Pass empty\n\tarray to superclass.\n\t(init): Changed interface; add URLs here.\n\t(initialize): New static method.\n\t* prims.cc (_Jv_CreateJavaVM): Initialize ClassLoader here...\n\t(_Jv_RunMain): ... not here.\n\nCo-Authored-By: Tom Tromey <tromey@redhat.com>\n\nFrom-SVN: r75889", "tree": {"sha": "ad1e4f95a199b5b83e6350405b779ee01410517f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ad1e4f95a199b5b83e6350405b779ee01410517f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/092b50e2d7faa1cf0441da77a0d2d72a983276b1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/092b50e2d7faa1cf0441da77a0d2d72a983276b1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/092b50e2d7faa1cf0441da77a0d2d72a983276b1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/092b50e2d7faa1cf0441da77a0d2d72a983276b1/comments", "author": {"login": "nbryant42", "id": 63363179, "node_id": "MDQ6VXNlcjYzMzYzMTc5", "avatar_url": "https://avatars.githubusercontent.com/u/63363179?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nbryant42", "html_url": "https://github.com/nbryant42", "followers_url": "https://api.github.com/users/nbryant42/followers", "following_url": "https://api.github.com/users/nbryant42/following{/other_user}", "gists_url": "https://api.github.com/users/nbryant42/gists{/gist_id}", "starred_url": "https://api.github.com/users/nbryant42/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nbryant42/subscriptions", "organizations_url": "https://api.github.com/users/nbryant42/orgs", "repos_url": "https://api.github.com/users/nbryant42/repos", "events_url": "https://api.github.com/users/nbryant42/events{/privacy}", "received_events_url": "https://api.github.com/users/nbryant42/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "84568e14b534a808707d9e0894c6021792ca633d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/84568e14b534a808707d9e0894c6021792ca633d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/84568e14b534a808707d9e0894c6021792ca633d"}], "stats": {"total": 58, "additions": 37, "deletions": 21}, "files": [{"sha": "93a8f8ba4e2e15858e1bcd54a70d6f43c14f0c2f", "filename": "libjava/ChangeLog", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/092b50e2d7faa1cf0441da77a0d2d72a983276b1/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/092b50e2d7faa1cf0441da77a0d2d72a983276b1/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=092b50e2d7faa1cf0441da77a0d2d72a983276b1", "patch": "@@ -1,3 +1,14 @@\n+2004-01-14  Nathan Bryant  <nbryant@optonline.net>\n+\t    Tom Tromey  <tromey@redhat.com>\n+\n+\tPR libgcj/12001:\n+\t* gnu/gcj/runtime/VMClassLoader.java (VMClassLoader): Pass empty\n+\tarray to superclass.\n+\t(init): Changed interface; add URLs here.\n+\t(initialize): New static method.\n+\t* prims.cc (_Jv_CreateJavaVM): Initialize ClassLoader here...\n+\t(_Jv_RunMain): ... not here.\n+\n 2004-01-14  Michael Koch  <konqueror@gmx.de>\n \n \t* java/text/MessageFormat.java:\n@@ -8,7 +19,7 @@\n \n \t* java/awt/EventQueue.java (isDispatchThread): Do check on top of stack.\n \t(push): Make sure push is performed at the top of the thread stack.\n- \n+\n 2004-01-13  Thomas Fitzsimmons  <fitzsim@redhat.com>\n \n \t* gnu/java/awt/peer/gtk/GtkTextAreaPeer.java,"}, {"sha": "3eabd73d4318396e7ff0211580ccd5607ccc03fc", "filename": "libjava/gnu/gcj/runtime/VMClassLoader.java", "status": "modified", "additions": 13, "deletions": 11, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/092b50e2d7faa1cf0441da77a0d2d72a983276b1/libjava%2Fgnu%2Fgcj%2Fruntime%2FVMClassLoader.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/092b50e2d7faa1cf0441da77a0d2d72a983276b1/libjava%2Fgnu%2Fgcj%2Fruntime%2FVMClassLoader.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fgcj%2Fruntime%2FVMClassLoader.java?ref=092b50e2d7faa1cf0441da77a0d2d72a983276b1", "patch": "@@ -1,4 +1,4 @@\n-/* Copyright (C) 1999, 2001, 2002, 2003  Free Software Foundation\n+/* Copyright (C) 1999, 2001, 2002, 2003, 2004  Free Software Foundation\n \n    This file is part of libgcj.\n \n@@ -19,7 +19,7 @@ public final class VMClassLoader extends java.net.URLClassLoader\n {\n   private VMClassLoader ()\n   {\t\n-    super (init());\n+    super (new URL[0]);\n     String p\n       = System.getProperty (\"gnu.gcj.runtime.VMClassLoader.library_control\",\n \t\t\t    \"\");\n@@ -36,22 +36,21 @@ else if (\"full\".equals(p))\n       lib_control = LIB_FULL;\n   }\n \n-  private static URL[] init() \n+  private void init() \n   {\n     StringTokenizer st\n \t= new StringTokenizer (System.getProperty (\"java.class.path\", \".\"),\n \t\t\t       System.getProperty (\"path.separator\", \":\"));\n \n-    java.util.Vector p = new java.util.Vector();\n     while (st.hasMoreElements ()) \n       {  \n \tString e = st.nextToken ();\n \ttry\n \t  {\n \t    if (!e.endsWith (File.separator) && new File (e).isDirectory ())\n-\t      p.addElement (new URL(\"file\", \"\", -1, e + File.separator));\n+\t      addURL(new URL(\"file\", \"\", -1, e + File.separator));\n \t    else\n-\t      p.addElement (new URL(\"file\", \"\", -1, e));\n+\t      addURL(new URL(\"file\", \"\", -1, e));\n \t  } \n \tcatch (java.net.MalformedURLException x)\n \t  {\n@@ -62,16 +61,12 @@ private static URL[] init()\n     // compiled into this executable may be found.\n     try\n       {\n-\tp.addElement (new URL(\"core\", \"\", -1, \"/\"));\n+\taddURL(new URL(\"core\", \"\", -1, \"/\"));\n       }\n     catch (java.net.MalformedURLException x)\n       {\n \t// This should never happen.\n       }\n-\n-    URL[] urls = new URL[p.size()];\n-    p.copyInto (urls);\n-    return urls;\n   }\n \n   /** This is overridden to search the internal hash table, which \n@@ -82,6 +77,13 @@ private static URL[] init()\n   protected native Class findClass(String name) \n     throws java.lang.ClassNotFoundException;\n \n+  // This can be package-private because we only call it from native\n+  // code during startup.\n+  static void initialize ()\n+  {\n+    instance.init();\n+  }\n+\n   // This keeps track of shared libraries we've already tried to load.\n   private HashSet tried_libraries = new HashSet();\n "}, {"sha": "06791d388f393e00eebe07b005ecc4aa61ddc58e", "filename": "libjava/prims.cc", "status": "modified", "additions": 12, "deletions": 9, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/092b50e2d7faa1cf0441da77a0d2d72a983276b1/libjava%2Fprims.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/092b50e2d7faa1cf0441da77a0d2d72a983276b1/libjava%2Fprims.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fprims.cc?ref=092b50e2d7faa1cf0441da77a0d2d72a983276b1", "patch": "@@ -1,6 +1,6 @@\n // prims.cc - Code for core of runtime environment.\n \n-/* Copyright (C) 1998, 1999, 2000, 2001, 2002, 2003  Free Software Foundation\n+/* Copyright (C) 1998, 1999, 2000, 2001, 2002, 2003, 2004  Free Software Foundation\n \n    This file is part of libgcj.\n \n@@ -927,15 +927,24 @@ _Jv_CreateJavaVM (void* /*vm_args*/)\n   _Jv_InitClass (&java::lang::VMThrowable::class$);\n   java::lang::VMThrowable::trace_enabled = 0;\n   \n+  // We have to initialize this fairly early, to avoid circular class\n+  // initialization.  In particular we want to start the\n+  // initialization of ClassLoader before we start the initialization\n+  // of VMClassLoader.\n+  _Jv_InitClass (&java::lang::ClassLoader::class$);\n+  // Once the bootstrap loader is in place, change it into a kind of\n+  // system loader, by having it read the class path.\n+  gnu::gcj::runtime::VMClassLoader::initialize();\n+\n   INIT_SEGV;\n #ifdef HANDLE_FPE\n   INIT_FPE;\n #endif\n   \n   no_memory = new java::lang::OutOfMemoryError;\n-  \n+\n   java::lang::VMThrowable::trace_enabled = 1;\n-  \n+\n #ifdef USE_LTDL\n   LTDL_SET_PRELOADED_SYMBOLS ();\n #endif\n@@ -988,12 +997,6 @@ _Jv_RunMain (jclass klass, const char *name, int argc, const char **argv,\n       arg_vec = JvConvertArgv (argc - 1, argv + 1);\n #endif\n \n-      // We have to initialize this fairly early, to avoid circular\n-      // class initialization.  In particular we want to start the\n-      // initialization of ClassLoader before we start the\n-      // initialization of VMClassLoader.\n-      _Jv_InitClass (&java::lang::ClassLoader::class$);\n-\n       using namespace gnu::gcj::runtime;\n       if (klass)\n \tmain_thread = new FirstThread (klass, arg_vec);"}]}