{"sha": "fcbbf786aeb7f0d5cf8ab138b61944439dfc046b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmNiYmY3ODZhZWI3ZjBkNWNmOGFiMTM4YjYxOTQ0NDM5ZGZjMDQ2Yg==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2021-06-06T15:29:44Z"}, "committer": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2021-06-06T17:05:51Z"}, "message": "docs: Add missing @headitem for tables.\n\ngcc/ChangeLog:\n\n\t* doc/extend.texi: Add missing @headitem.\n\t* doc/invoke.texi: Likewise.\n\t* doc/objc.texi: Likewise.", "tree": {"sha": "818b997fed02d0fa967bdf45dbf279f93e659b36", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/818b997fed02d0fa967bdf45dbf279f93e659b36"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fcbbf786aeb7f0d5cf8ab138b61944439dfc046b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fcbbf786aeb7f0d5cf8ab138b61944439dfc046b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fcbbf786aeb7f0d5cf8ab138b61944439dfc046b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fcbbf786aeb7f0d5cf8ab138b61944439dfc046b/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0bc0e6173f517bea7b80913199a8a7286d5a5347", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0bc0e6173f517bea7b80913199a8a7286d5a5347", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0bc0e6173f517bea7b80913199a8a7286d5a5347"}], "stats": {"total": 20, "additions": 10, "deletions": 10}, "files": [{"sha": "22f9e93073f1649e0556459f46c20cc8394bc65d", "filename": "gcc/doc/extend.texi", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fcbbf786aeb7f0d5cf8ab138b61944439dfc046b/gcc%2Fdoc%2Fextend.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fcbbf786aeb7f0d5cf8ab138b61944439dfc046b/gcc%2Fdoc%2Fextend.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fextend.texi?ref=fcbbf786aeb7f0d5cf8ab138b61944439dfc046b", "patch": "@@ -15419,7 +15419,7 @@ to make this classification clear at a glance, the arguments and return\n values are given the following pseudo types:\n \n @multitable @columnfractions .20 .30 .15 .35\n-@item Pseudo type @tab Real C type @tab Constant? @tab Description\n+@headitem Pseudo type @tab Real C type @tab Constant? @tab Description\n @item @code{uh} @tab @code{unsigned short} @tab No @tab an unsigned halfword\n @item @code{uw1} @tab @code{unsigned int} @tab No @tab an unsigned word\n @item @code{sw1} @tab @code{int} @tab No @tab a signed word\n@@ -15455,7 +15455,7 @@ for more details.\n The functions listed below map directly to FR-V I-type instructions.\n \n @multitable @columnfractions .45 .32 .23\n-@item Function prototype @tab Example usage @tab Assembly output\n+@headitem Function prototype @tab Example usage @tab Assembly output\n @item @code{sw1 __ADDSS (sw1, sw1)}\n @tab @code{@var{c} = __ADDSS (@var{a}, @var{b})}\n @tab @code{ADDSS @var{a},@var{b},@var{c}}\n@@ -15494,7 +15494,7 @@ The functions listed below map directly to FR-V I-type instructions.\n The functions listed below map directly to FR-V M-type instructions.\n \n @multitable @columnfractions .45 .32 .23\n-@item Function prototype @tab Example usage @tab Assembly output\n+@headitem Function prototype @tab Example usage @tab Assembly output\n @item @code{uw1 __MABSHS (sw1)}\n @tab @code{@var{b} = __MABSHS (@var{a})}\n @tab @code{MABSHS @var{a},@var{b}}\n@@ -15886,7 +15886,7 @@ hardware support exists.  @code{a} and @code{b} are @code{v4i8} values,\n and @code{c} and @code{d} are @code{v2q15} values.\n \n @multitable @columnfractions .50 .50\n-@item C code @tab MIPS instruction\n+@headitem C code @tab MIPS instruction\n @item @code{a + b} @tab @code{addu.qb}\n @item @code{c + d} @tab @code{addq.ph}\n @item @code{a - b} @tab @code{subu.qb}\n@@ -15898,7 +15898,7 @@ hardware support exists for the DSP ASE REV 2.  @code{e} and @code{f} are\n @code{v2i16} values.\n \n @multitable @columnfractions .50 .50\n-@item C code @tab MIPS instruction\n+@headitem C code @tab MIPS instruction\n @item @code{e * f} @tab @code{mul.ph}\n @end multitable\n \n@@ -16284,7 +16284,7 @@ support exists.  @code{a}, @code{b} and @code{c} are @code{v2sf}\n values and @code{x} is an integral value.\n \n @multitable @columnfractions .50 .50\n-@item C code @tab MIPS instruction\n+@headitem C code @tab MIPS instruction\n @item @code{a + b} @tab @code{add.ps}\n @item @code{a - b} @tab @code{sub.ps}\n @item @code{-a} @tab @code{neg.ps}"}, {"sha": "04048cd8332b2023200f781fb9dfabffb0dcafbf", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fcbbf786aeb7f0d5cf8ab138b61944439dfc046b/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fcbbf786aeb7f0d5cf8ab138b61944439dfc046b/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=fcbbf786aeb7f0d5cf8ab138b61944439dfc046b", "patch": "@@ -23602,7 +23602,7 @@ and @samp{cpu32}.  The ColdFire @var{cpu}s are given by the table\n below, which also classifies the CPUs into families:\n \n @multitable @columnfractions 0.20 0.80\n-@item @strong{Family} @tab @strong{@samp{-mcpu} arguments}\n+@headitem @strong{Family} @tab @strong{@samp{-mcpu} arguments}\n @item @samp{51} @tab @samp{51} @samp{51ac} @samp{51ag} @samp{51cn} @samp{51em} @samp{51je} @samp{51jf} @samp{51jg} @samp{51jm} @samp{51mm} @samp{51qe} @samp{51qm}\n @item @samp{5206} @tab @samp{5202} @samp{5204} @samp{5206}\n @item @samp{5206e} @tab @samp{5206e}"}, {"sha": "cfd2470bc7af5485abce4e63682d0e6c8dd3d97b", "filename": "gcc/doc/objc.texi", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fcbbf786aeb7f0d5cf8ab138b61944439dfc046b/gcc%2Fdoc%2Fobjc.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fcbbf786aeb7f0d5cf8ab138b61944439dfc046b/gcc%2Fdoc%2Fobjc.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fobjc.texi?ref=fcbbf786aeb7f0d5cf8ab138b61944439dfc046b", "patch": "@@ -382,7 +382,7 @@ compiler on an i386 machine:\n @sp 1\n \n @multitable @columnfractions .60 .40\n-@item Objective-C type\n+@headitem Objective-C type\n @tab Compiler encoding\n @item\n @smallexample\n@@ -416,7 +416,7 @@ Objective-C type specifiers:\n @sp 1\n \n @multitable @columnfractions .25 .75\n-@item Specifier\n+@headitem Specifier\n @tab Encoding\n @item @code{const}\n @tab @code{r}\n@@ -445,7 +445,7 @@ Note how @code{const} interacts with pointers:\n @sp 1\n \n @multitable @columnfractions .25 .75\n-@item Objective-C type\n+@headitem Objective-C type\n @tab Compiler encoding\n @item\n @smallexample"}]}