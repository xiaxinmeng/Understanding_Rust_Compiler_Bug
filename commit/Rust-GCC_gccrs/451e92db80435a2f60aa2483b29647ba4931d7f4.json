{"sha": "451e92db80435a2f60aa2483b29647ba4931d7f4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDUxZTkyZGI4MDQzNWEyZjYwYWEyNDgzYjI5NjQ3YmE0OTMxZDdmNA==", "commit": {"author": {"name": "Benjamin Kosnik", "email": "bkoz@redhat.com", "date": "2005-09-15T18:58:02Z"}, "committer": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2005-09-15T18:58:02Z"}, "message": "re PR libstdc++/21674 (basic_string vs debug_mode)\n\n\n2005-09-15  Benjamin Kosnik  <bkoz@redhat.com>\n\n\tPR libstdc++/21674\n\tPR libstdc++/22205\n\tPR libstdc++/22222\n\t* include/bits/c++config: Set _GLIBCXX_STD regardless of __GXX_WEAK__.\n\tAdd in check for __NO_INLINE__ for warning.\n\t* testsuite/lib/dg-options.exp (dg-require-debug-mode): New.\n\t* testsuite/lib/libstdc++.exp (check_v3_target_debug_mode): New.\n\t* testsuite/21_strings/basic_string/element_access/char/21674.cc:\n\tUse it.\n\t* testsuite/21_strings/basic_string/element_access/wchar_t/21674.cc:\n\tUse it.\n\nFrom-SVN: r104314", "tree": {"sha": "7df88d321fc222ac86b03dc48ebd07c472f24e9b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7df88d321fc222ac86b03dc48ebd07c472f24e9b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/451e92db80435a2f60aa2483b29647ba4931d7f4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/451e92db80435a2f60aa2483b29647ba4931d7f4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/451e92db80435a2f60aa2483b29647ba4931d7f4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/451e92db80435a2f60aa2483b29647ba4931d7f4/comments", "author": null, "committer": null, "parents": [{"sha": "f4ca8e2772e77b39efdb735ccf6dfd1b73389778", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f4ca8e2772e77b39efdb735ccf6dfd1b73389778", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f4ca8e2772e77b39efdb735ccf6dfd1b73389778"}], "stats": {"total": 91, "additions": 84, "deletions": 7}, "files": [{"sha": "ddb1b38d8d5e2dc3f1240f5d761d1617c7dd67aa", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451e92db80435a2f60aa2483b29647ba4931d7f4/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451e92db80435a2f60aa2483b29647ba4931d7f4/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=451e92db80435a2f60aa2483b29647ba4931d7f4", "patch": "@@ -1,3 +1,17 @@\n+2005-09-15  Benjamin Kosnik  <bkoz@redhat.com>\n+\n+\tPR libstdc++/21674\n+\tPR libstdc++/22205\n+\tPR libstdc++/22222\n+\t* include/bits/c++config: Set _GLIBCXX_STD regardless of __GXX_WEAK__.\n+\tAdd in check for __NO_INLINE__ for warning.\n+\t* testsuite/lib/dg-options.exp (dg-require-debug-mode): New.\n+\t* testsuite/lib/libstdc++.exp (check_v3_target_debug_mode): New.\n+\t* testsuite/21_strings/basic_string/element_access/char/21674.cc:\n+\tUse it.\n+\t* testsuite/21_strings/basic_string/element_access/wchar_t/21674.cc:\n+\tUse it.\n+\n 2005-09-15  Paolo Carlini  <pcarlini@suse.de>\n \n \tPR libstdc++/23875"}, {"sha": "75b7236964d603ca9e8b20f9e7ac7dd66820a255", "filename": "libstdc++-v3/include/bits/c++config", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451e92db80435a2f60aa2483b29647ba4931d7f4/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fc%2B%2Bconfig", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451e92db80435a2f60aa2483b29647ba4931d7f4/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fc%2B%2Bconfig", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fc%2B%2Bconfig?ref=451e92db80435a2f60aa2483b29647ba4931d7f4", "patch": "@@ -45,10 +45,8 @@ namespace __gnu_debug\n }\n \n #ifdef _GLIBCXX_DEBUG\n-# if __GXX_WEAK__\n-#  define _GLIBCXX_STD __gnu_norm\n-#  define _GLIBCXX_EXTERN_TEMPLATE 0\n-\n+# define _GLIBCXX_STD __gnu_norm\n+# define _GLIBCXX_EXTERN_TEMPLATE 0\n namespace __gnu_norm \n { \n   using namespace std; \n@@ -57,8 +55,8 @@ namespace std\n {\n   using namespace __gnu_debug_def __attribute__ ((strong));\n }\n-# else\n-#  warning debug mode disabled due to lack of weak symbol support\n+# if __NO_INLINE__ && !__GXX_WEAK__\n+#  warning debug mode without inlining may fail due to lack of weak symbols\n # endif\n #else\n # define _GLIBCXX_STD std"}, {"sha": "3f61fa6ce32211cd710a9bf493baf55136ae7cea", "filename": "libstdc++-v3/testsuite/21_strings/basic_string/element_access/char/21674.cc", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451e92db80435a2f60aa2483b29647ba4931d7f4/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Felement_access%2Fchar%2F21674.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451e92db80435a2f60aa2483b29647ba4931d7f4/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Felement_access%2Fchar%2F21674.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Felement_access%2Fchar%2F21674.cc?ref=451e92db80435a2f60aa2483b29647ba4931d7f4", "patch": "@@ -1,3 +1,4 @@\n+// { dg-require-debug-mode \"\" }\n // { dg-options \"-O0 -D_GLIBCXX_DEBUG\" }\n // { dg-do run { xfail *-*-* } }\n "}, {"sha": "7c27e2b6a4e0f81d1b4a4caa921263300c40a4f6", "filename": "libstdc++-v3/testsuite/21_strings/basic_string/element_access/wchar_t/21674.cc", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451e92db80435a2f60aa2483b29647ba4931d7f4/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Felement_access%2Fwchar_t%2F21674.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451e92db80435a2f60aa2483b29647ba4931d7f4/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Felement_access%2Fwchar_t%2F21674.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Felement_access%2Fwchar_t%2F21674.cc?ref=451e92db80435a2f60aa2483b29647ba4931d7f4", "patch": "@@ -1,3 +1,4 @@\n+// { dg-require-debug-mode \"\" }\n // { dg-options \"-O0 -D_GLIBCXX_DEBUG\" }\n // { dg-do run { xfail *-*-* } }\n "}, {"sha": "e7bbb41bcd1234804be4d131e4a8f80e480d507a", "filename": "libstdc++-v3/testsuite/lib/dg-options.exp", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451e92db80435a2f60aa2483b29647ba4931d7f4/libstdc%2B%2B-v3%2Ftestsuite%2Flib%2Fdg-options.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451e92db80435a2f60aa2483b29647ba4931d7f4/libstdc%2B%2B-v3%2Ftestsuite%2Flib%2Fdg-options.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Flib%2Fdg-options.exp?ref=451e92db80435a2f60aa2483b29647ba4931d7f4", "patch": "@@ -53,3 +53,12 @@ proc dg-require-sharedlib { args } {\n     }\n     return\n }\n+\n+proc dg-require-debug-mode { args } {\n+    if { ![ check_v3_target_debug_mode ] } {\n+\tupvar dg-do-what dg-do-what\n+\tset dg-do-what [list [lindex ${dg-do-what} 0] \"N\" \"P\"]\n+\treturn\n+    }\n+    return\n+}"}, {"sha": "ba7da26ce2127b388dfdb29a77801b16122dbf37", "filename": "libstdc++-v3/testsuite/lib/libstdc++.exp", "status": "modified", "additions": 55, "deletions": 1, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451e92db80435a2f60aa2483b29647ba4931d7f4/libstdc%2B%2B-v3%2Ftestsuite%2Flib%2Flibstdc%2B%2B.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451e92db80435a2f60aa2483b29647ba4931d7f4/libstdc%2B%2B-v3%2Ftestsuite%2Flib%2Flibstdc%2B%2B.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Flib%2Flibstdc%2B%2B.exp?ref=451e92db80435a2f60aa2483b29647ba4931d7f4", "patch": "@@ -338,7 +338,7 @@ proc v3_target_compile { source dest type options } {\n # Build the support objects linked in with the libstdc++ tests.  In\n # addition, set v3-wchar_t, v3-threads, v3-test_objs, and v3-symver\n # appropriately.\n-proc v3-build_support {} {\n+proc v3-build_support { } {\n     global srcdir\n     global v3-wchar_t\n     global v3-threads\n@@ -580,3 +580,57 @@ proc check_v3_target_cxa_atexit { } {\n     }\n     return $et_cxa_atexit\n }\n+\n+proc check_v3_target_debug_mode { } {\n+    global cxxflags\n+    global et_debug_mode\n+\n+    global tool\t\n+\n+    if { ![info exists et_debug_mode_target_name] } {\n+\tset et_debug_mode_target_name \"\"\n+    }\n+\n+    # If the target has changed since we set the cached value, clear it.\n+    set current_target [current_target_name]\n+    if { $current_target != $et_debug_mode_target_name } {\n+\tverbose \"check_v3_target_debug_mode: `$et_debug_mode_target_name'\" 2\n+\tset et_debug_mode_target_name $current_target\n+\tif [info exists et_debug_mode] {\n+\t    verbose \"check_v3_target_debug_mode: removing cached result\" 2\n+\t    unset et_debug_mode\n+\t}\n+    }\n+\n+    if [info exists et_debug_mode] {\n+\tverbose \"check_v3_target_debug_mode: using cached result\" 2\n+    } else {\n+\tset et_debug_mode 0\n+\n+\t# Set up, compile, and execute a C++ test program that depends\n+\t# on correct ordering of static object destructors. This is\n+\t# indicative of the presence and use of __cxa_atexit.\n+\tset src debug_mode[pid].cc\n+\tset exe debug_mode[pid].x\n+\n+\tset f [open $src \"w\"]\n+\tputs $f \"#include <string>\"\n+\tputs $f \"using namespace std;\"\t\n+\tputs $f \"int main()\"\n+\tputs $f \"{ return 0; }\"\n+\tclose $f\n+\n+\tset cxxflags_saved $cxxflags\n+\tset cxxflags \"$cxxflags -Werror -O0 -D_GLIBCXX_DEBUG\"\n+\tset lines [v3_target_compile $src $exe executable \"\"]\n+\tset cxxflags $cxxflags_saved\n+\tfile delete $src\n+\n+\tif [string match \"\" $lines] {\n+\t    # No error message, compilation succeeded.\n+\t    set et_debug_mode 1\n+\t}\n+    }\n+    verbose \"check_v3_target_debug_mode: $et_debug_mode\" 2\n+    return $et_debug_mode\n+}"}]}