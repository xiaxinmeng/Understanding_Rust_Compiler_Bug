{"sha": "71790f398e119c7fed867b0cfce60a7500629dff", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzE3OTBmMzk4ZTExOWM3ZmVkODY3YjBjZmNlNjBhNzUwMDYyOWRmZg==", "commit": {"author": {"name": "Martin Sebor", "email": "msebor@redhat.com", "date": "2021-06-15T18:42:06Z"}, "committer": {"name": "Martin Sebor", "email": "msebor@redhat.com", "date": "2021-06-15T18:46:54Z"}, "message": "Consider size_t mangling as unsigned int and long [PR100876].\n\ngcc/ChangeLog:\n\n\tPR middle-end/100876\n\t* builtins.c: (gimple_call_return_array): Account for size_t\n\tmangling as either unsigned int or unsigned long", "tree": {"sha": "18c755043090782f23ac0204521a31c66e9a683f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/18c755043090782f23ac0204521a31c66e9a683f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/71790f398e119c7fed867b0cfce60a7500629dff", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/71790f398e119c7fed867b0cfce60a7500629dff", "html_url": "https://github.com/Rust-GCC/gccrs/commit/71790f398e119c7fed867b0cfce60a7500629dff", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/71790f398e119c7fed867b0cfce60a7500629dff/comments", "author": {"login": "msebor", "id": 381149, "node_id": "MDQ6VXNlcjM4MTE0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/381149?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msebor", "html_url": "https://github.com/msebor", "followers_url": "https://api.github.com/users/msebor/followers", "following_url": "https://api.github.com/users/msebor/following{/other_user}", "gists_url": "https://api.github.com/users/msebor/gists{/gist_id}", "starred_url": "https://api.github.com/users/msebor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msebor/subscriptions", "organizations_url": "https://api.github.com/users/msebor/orgs", "repos_url": "https://api.github.com/users/msebor/repos", "events_url": "https://api.github.com/users/msebor/events{/privacy}", "received_events_url": "https://api.github.com/users/msebor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "msebor", "id": 381149, "node_id": "MDQ6VXNlcjM4MTE0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/381149?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msebor", "html_url": "https://github.com/msebor", "followers_url": "https://api.github.com/users/msebor/followers", "following_url": "https://api.github.com/users/msebor/following{/other_user}", "gists_url": "https://api.github.com/users/msebor/gists{/gist_id}", "starred_url": "https://api.github.com/users/msebor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msebor/subscriptions", "organizations_url": "https://api.github.com/users/msebor/orgs", "repos_url": "https://api.github.com/users/msebor/repos", "events_url": "https://api.github.com/users/msebor/events{/privacy}", "received_events_url": "https://api.github.com/users/msebor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8b93548778a487f31f21e0c6afe7e0bde9711fc4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8b93548778a487f31f21e0c6afe7e0bde9711fc4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8b93548778a487f31f21e0c6afe7e0bde9711fc4"}], "stats": {"total": 6, "additions": 5, "deletions": 1}, "files": [{"sha": "855ad1eb6bbe50a496b4784d2d0ebc60cdd2c9cb", "filename": "gcc/builtins.c", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/71790f398e119c7fed867b0cfce60a7500629dff/gcc%2Fbuiltins.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/71790f398e119c7fed867b0cfce60a7500629dff/gcc%2Fbuiltins.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbuiltins.c?ref=71790f398e119c7fed867b0cfce60a7500629dff", "patch": "@@ -5183,8 +5183,12 @@ gimple_call_return_array (gimple *stmt, offset_int offrng[2],\n \t  || DECL_IS_REPLACEABLE_OPERATOR_NEW_P (fn))\n \treturn NULL_TREE;\n \n+      /* Check the mangling, keeping in mind that operator new takes\n+\t a size_t which could be unsigned int or unsigned long.  */\n       tree fname = DECL_ASSEMBLER_NAME (fn);\n-      if (!id_equal (fname, \"_ZnwmPv\")       // ordinary form\n+      if (!id_equal (fname, \"_ZnwjPv\")       // ordinary form\n+\t  && !id_equal (fname, \"_ZnwmPv\")    // ordinary form\n+\t  && !id_equal (fname, \"_ZnajPv\")    // array form\n \t  && !id_equal (fname, \"_ZnamPv\"))   // array form\n \treturn NULL_TREE;\n "}]}