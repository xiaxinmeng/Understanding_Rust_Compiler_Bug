{"sha": "4d367579cc4e8a6e04f5169d130873225b08bf1b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGQzNjc1NzljYzRlOGE2ZTA0ZjUxNjlkMTMwODczMjI1YjA4YmYxYg==", "commit": {"author": {"name": "Doug Evans", "email": "dje@gnu.org", "date": "1994-05-15T01:24:39Z"}, "committer": {"name": "Doug Evans", "email": "dje@gnu.org", "date": "1994-05-15T01:24:39Z"}, "message": "(find_cross_jump): Two CALL_INSNs only compare equal if\ntheir CALL_INSN_FUNCTION_USAGEs are the same as well.\n\nFrom-SVN: r7300", "tree": {"sha": "48b0608bea6efc62c0cb4e22ad109f767e753150", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/48b0608bea6efc62c0cb4e22ad109f767e753150"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4d367579cc4e8a6e04f5169d130873225b08bf1b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4d367579cc4e8a6e04f5169d130873225b08bf1b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4d367579cc4e8a6e04f5169d130873225b08bf1b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4d367579cc4e8a6e04f5169d130873225b08bf1b/comments", "author": null, "committer": null, "parents": [{"sha": "5384893b185696a9db093baa9996f535ce929548", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5384893b185696a9db093baa9996f535ce929548", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5384893b185696a9db093baa9996f535ce929548"}], "stats": {"total": 48, "additions": 13, "deletions": 35}, "files": [{"sha": "c2a18371b9bcb39b358a9527fecd3c5a79f5be5c", "filename": "gcc/jump.c", "status": "modified", "additions": 13, "deletions": 35, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d367579cc4e8a6e04f5169d130873225b08bf1b/gcc%2Fjump.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d367579cc4e8a6e04f5169d130873225b08bf1b/gcc%2Fjump.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjump.c?ref=4d367579cc4e8a6e04f5169d130873225b08bf1b", "patch": "@@ -2275,44 +2275,22 @@ find_cross_jump (e1, e2, minimum, f1, f2)\n       p1 = PATTERN (i1);\n       p2 = PATTERN (i2);\n \t\n-#ifdef STACK_REGS\n-      if (GET_CODE (i1) == CALL_INSN)\n-\t{\n-\t  /* Compare register usage information for the stack registers.\n-\t     Two CALL_INSNs are only equal if they receive the same\n-\t     (amount of) stack registers as parameters.  If we don't\n-\t     check this the two CALL_INSNs might be merged leaving\n-\t     reg-stack.c with mismatching numbers of stack registers\n-\t     in the same basic block.  */\n-\n-\t  register rtx link, op;\n-\t  HARD_REG_SET i1_regset, i2_regset;\n-\n-\t  CLEAR_HARD_REG_SET (i1_regset);\n-\t  CLEAR_HARD_REG_SET (i2_regset);\n-\n-\t  for (link = CALL_INSN_FUNCTION_USAGE (i1);\n-\t       link;\n-\t       link = XEXP (link, 1))\n-\t    if (GET_CODE (op = XEXP (link, 0)) == USE\n-\t\t&& STACK_REG_P (SET_DEST (op)))\n-\t      SET_HARD_REG_BIT (i1_regset, REGNO (SET_DEST (op)));\n+      /* If this is a CALL_INSN, compare register usage information.\n+\t If we don't check this on stack register machines, the two\n+\t CALL_INSNs might be merged leaving reg-stack.c with mismatching\n+\t numbers of stack registers in the same basic block.\n+\t If we don't check this on machines with delay slots, a delay slot may\n+\t be filled that clobbers a parameter expected by the subroutine.\n \n-\t  for (link = CALL_INSN_FUNCTION_USAGE (i2);\n-\t       link;\n-\t       link = XEXP (link, 1))\n-\t    if (GET_CODE (op = XEXP (link, 0)) == USE\n-\t\t&& STACK_REG_P (SET_DEST (op)))\n-\t      SET_HARD_REG_BIT (i2_regset, REGNO (SET_DEST (op)));\n+\t ??? We take the simple route for now and assume that if they're\n+\t equal, they were constructed identically.  */\n \n-\t  GO_IF_HARD_REG_EQUAL (i1_regset, i2_regset, usedmatch);\n-\n-\t  lose = 1;\n-\n-\tusedmatch:\n-\t  ;\n-\t}\n+      if (GET_CODE (i1) == CALL_INSN\n+\t  && ! rtx_equal_p (CALL_INSN_FUNCTION_USAGE (i1),\n+\t\t\t    CALL_INSN_FUNCTION_USAGE (i2)))\n+\tlose = 1;\n \n+#ifdef STACK_REGS\n       /* If cross_jump_death_matters is not 0, the insn's mode\n \t indicates whether or not the insn contains any stack-like\n \t regs. */"}]}