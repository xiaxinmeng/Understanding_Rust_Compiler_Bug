{"sha": "ce4609958f8db5cd64ec1c3bec624a36d8b35812", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2U0NjA5OTU4ZjhkYjVjZDY0ZWMxYzNiZWM2MjRhMzZkOGIzNTgxMg==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2019-03-27T14:27:00Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2019-03-27T14:27:00Z"}, "message": "PR c++/86932 - missed SFINAE with empty pack.\n\nThe issue here was that when processing the explicit template args in\nfn_type_unification we added an empty argument pack for the parameter pack,\nso we never tried to do any deduction for it, and therefore never looked at\nits type.  We need that empty pack behavior for partial ordering, but we\ndon't want it here, so let's make it conditional on tf_partial.\n\n\t* pt.c (coerce_template_parms): Don't add an empty pack if\n\ttf_partial.\n\t(fn_type_unification): Pass tf_partial to coerce_template_parms.\n\nFrom-SVN: r269965", "tree": {"sha": "5fb7fdcf62bba0224c98e9af4d7bdbac59ac3b1e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5fb7fdcf62bba0224c98e9af4d7bdbac59ac3b1e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ce4609958f8db5cd64ec1c3bec624a36d8b35812", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ce4609958f8db5cd64ec1c3bec624a36d8b35812", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ce4609958f8db5cd64ec1c3bec624a36d8b35812", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ce4609958f8db5cd64ec1c3bec624a36d8b35812/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "079c81dabf6a5f2fdb054651ec78f74a590a4ad0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/079c81dabf6a5f2fdb054651ec78f74a590a4ad0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/079c81dabf6a5f2fdb054651ec78f74a590a4ad0"}], "stats": {"total": 23, "additions": 22, "deletions": 1}, "files": [{"sha": "bce9b108723d1f591aadf4e51c95446edb8278b4", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce4609958f8db5cd64ec1c3bec624a36d8b35812/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce4609958f8db5cd64ec1c3bec624a36d8b35812/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=ce4609958f8db5cd64ec1c3bec624a36d8b35812", "patch": "@@ -1,5 +1,10 @@\n 2019-03-26  Jason Merrill  <jason@redhat.com>\n \n+\tPR c++/86932 - missed SFINAE with empty pack.\n+\t* pt.c (coerce_template_parms): Don't add an empty pack if\n+\ttf_partial.\n+\t(fn_type_unification): Pass tf_partial to coerce_template_parms.\n+\n \tPR c++/86429 - constexpr variable in lambda.\n \tPR c++/82643\n \tPR c++/87327"}, {"sha": "dc982f3ed55a7babf04066d0bcccc40eb1a3395e", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce4609958f8db5cd64ec1c3bec624a36d8b35812/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce4609958f8db5cd64ec1c3bec624a36d8b35812/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=ce4609958f8db5cd64ec1c3bec624a36d8b35812", "patch": "@@ -8436,6 +8436,7 @@ coerce_template_parms (tree parms,\n \targ = NULL_TREE;\n \n       if (template_parameter_pack_p (TREE_VALUE (parm))\n+\t  && (arg || !(complain & tf_partial))\n \t  && !(arg && ARGUMENT_PACK_P (arg)))\n         {\n \t  /* Some arguments will be placed in the\n@@ -20077,7 +20078,7 @@ fn_type_unification (tree fn,\n \t substitution context.  */\n       explicit_targs\n \t= (coerce_template_parms (tparms, explicit_targs, NULL_TREE,\n-\t\t\t\t  complain,\n+\t\t\t\t  complain|tf_partial,\n \t\t\t\t  /*require_all_args=*/false,\n \t\t\t\t  /*use_default_args=*/false));\n       if (explicit_targs == error_mark_node)"}, {"sha": "66790df77c6d2b06912799bbc18a0ff330ebd1d4", "filename": "gcc/testsuite/g++.dg/cpp0x/sfinae65.C", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce4609958f8db5cd64ec1c3bec624a36d8b35812/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fsfinae65.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce4609958f8db5cd64ec1c3bec624a36d8b35812/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fsfinae65.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fsfinae65.C?ref=ce4609958f8db5cd64ec1c3bec624a36d8b35812", "patch": "@@ -0,0 +1,15 @@\n+// PR c++/86932\n+// { dg-do compile { target c++11 } }\n+\n+template<bool, typename T> struct enable_if { using type = T; };\n+template<typename T> struct enable_if<false, T> { };\n+\n+template<typename> struct is_foo { static constexpr bool value = false; };\n+\n+// { dg-error \"enable_if\" \"\" { target *-*-* } .+1 }\n+template<class U, typename enable_if<is_foo<U>::value, int>::type...> void f() {}\n+\n+int main()\n+{\n+  f<int>();\t\t\t// { dg-error \"no match\" }\n+}"}]}