{"sha": "4430b4899566b604ab3fc71cf33e101bd75840a1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDQzMGI0ODk5NTY2YjYwNGFiM2ZjNzFjZjMzZTEwMWJkNzU4NDBhMQ==", "commit": {"author": {"name": "Joel Brobecker", "email": "brobecke@adacore.com", "date": "2006-02-15T09:35:12Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2006-02-15T09:35:12Z"}, "message": "bindgen.adb (Gen_Main_C): declare the ensure_reference variable as volatile...\n\n2006-02-13  Joel Brobecker  <brobecke@adacore.com>\n\n\t* bindgen.adb (Gen_Main_C): declare the ensure_reference variable as\n\tvolatile, to tell the compiler to preserve this variable at any level\n\tof optimization.\n\t(Gen_Versions_Ada): Temporarily work around codegen bug.\n\nFrom-SVN: r111045", "tree": {"sha": "6ae82d1637be5095a259d16a579b1ae2ecd5b6d2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6ae82d1637be5095a259d16a579b1ae2ecd5b6d2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4430b4899566b604ab3fc71cf33e101bd75840a1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4430b4899566b604ab3fc71cf33e101bd75840a1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4430b4899566b604ab3fc71cf33e101bd75840a1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4430b4899566b604ab3fc71cf33e101bd75840a1/comments", "author": null, "committer": null, "parents": [{"sha": "65aa56ecd6246442ef7e03eb6c2e336a6419b9d1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/65aa56ecd6246442ef7e03eb6c2e336a6419b9d1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/65aa56ecd6246442ef7e03eb6c2e336a6419b9d1"}], "stats": {"total": 59, "additions": 48, "deletions": 11}, "files": [{"sha": "ab0f839c4a85215625d4f9ea4d6df199372548a4", "filename": "gcc/ada/bindgen.adb", "status": "modified", "additions": 48, "deletions": 11, "changes": 59, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4430b4899566b604ab3fc71cf33e101bd75840a1/gcc%2Fada%2Fbindgen.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4430b4899566b604ab3fc71cf33e101bd75840a1/gcc%2Fada%2Fbindgen.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fbindgen.adb?ref=4430b4899566b604ab3fc71cf33e101bd75840a1", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2005, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -347,7 +347,7 @@ package body Bindgen is\n \n    procedure Gen_Adafinal_C is\n    begin\n-      WBI (\"void \" & Ada_Final_Name.all & \" () {\");\n+      WBI (\"void \" & Ada_Final_Name.all & \" (void) {\");\n       WBI (\"   system__standard_library__adafinal ();\");\n       WBI (\"}\");\n       WBI (\"\");\n@@ -523,7 +523,8 @@ package body Bindgen is\n          WBI (\"         Unreserve_All_Interrupts : Integer;\");\n          WBI (\"         Exception_Tracebacks     : Integer;\");\n          WBI (\"         Zero_Cost_Exceptions     : Integer;\");\n-         WBI (\"         Detect_Blocking          : Integer);\");\n+         WBI (\"         Detect_Blocking          : Integer;\");\n+         WBI (\"         Default_Stack_Size       : Integer);\");\n          WBI (\"      pragma Import (C, Set_Globals, \"\"__gnat_set_globals\"\");\");\n \n          --  Import entry point for elaboration time signal handler\n@@ -632,6 +633,12 @@ package body Bindgen is\n             Set_Int (0);\n          end if;\n \n+         Set_String (\",\");\n+         Write_Statement_Buffer;\n+\n+         Set_String (\"         Default_Stack_Size       => \");\n+         Set_Int (Default_Stack_Size);\n+\n          Set_String (\");\");\n          Write_Statement_Buffer;\n \n@@ -876,10 +883,18 @@ package body Bindgen is\n             Set_Int (0);\n          end if;\n \n-         Set_String (\");\");\n+         Set_String (\",\");\n          Tab_To (24);\n          Set_String (\"/* Detect_Blocking            */\");\n          Write_Statement_Buffer;\n+\n+         Set_String (\"      \");\n+         Set_Int    (Default_Stack_Size);\n+         Set_String (\");\");\n+         Tab_To (24);\n+         Set_String (\"/* Default_Stack_Size     */\");\n+         Write_Statement_Buffer;\n+\n          WBI (\"\");\n \n          --  Install elaboration time signal handler\n@@ -1334,10 +1349,15 @@ package body Bindgen is\n       --  The reference stops Ada_Main_Program_Name from being optimized\n       --  away by smart linkers, such as the AiX linker.\n \n+      --  Because this variable is unused, we make this variable \"aliased\"\n+      --  with a pragma Volatile in order to tell the compiler to preserve\n+      --  this variable at any level of optimization.\n+\n       if Bind_Main_Program then\n          WBI\n-           (\"      Ensure_Reference : System.Address := \" &\n+           (\"      Ensure_Reference : aliased System.Address := \" &\n             \"Ada_Main_Program_Name'Address;\");\n+         WBI (\"      pragma Volatile (Ensure_Reference);\");\n          WBI (\"\");\n       end if;\n \n@@ -1471,7 +1491,7 @@ package body Bindgen is\n       --  Case of no command line arguments on target\n \n       else\n-         Write_Statement_Buffer (\" ()\");\n+         Write_Statement_Buffer (\" (void)\");\n       end if;\n \n       WBI (\"{\");\n@@ -1482,8 +1502,13 @@ package body Bindgen is\n       --  place). The reference stops Ada_Main_Program_Name from being\n       --  optimized away by smart linkers, such as the AiX linker.\n \n+      --  Because this variable is unused, we declare this variable as\n+      --  volatile in order to tell the compiler to preserve it at any\n+      --  level of optimization.\n+\n       if Bind_Main_Program then\n-         WBI (\"   char *ensure_reference __attribute__ ((__unused__)) = \" &\n+         WBI (\"   char * volatile ensure_reference \" &\n+              \"__attribute__ ((__unused__)) = \" &\n               \"__gnat_ada_main_program_name;\");\n          WBI (\"\");\n \n@@ -1826,7 +1851,13 @@ package body Bindgen is\n \n          if With_DECGNAT then\n             Name_Len := 0;\n-            Add_Str_To_Name_Buffer (\"-ldecgnat\");\n+\n+            if Opt.Shared_Libgnat then\n+               Add_Str_To_Name_Buffer (Shared_Lib (\"decgnat\"));\n+            else\n+               Add_Str_To_Name_Buffer (\"-ldecgnat\");\n+            end if;\n+\n             Write_Linker_Option;\n          end if;\n \n@@ -2229,7 +2260,7 @@ package body Bindgen is\n       WBI (\"extern void __gnat_set_globals\");\n       WBI (\"  (int, int, char, char, char, char,\");\n       WBI (\"   const char *, const char *,\");\n-      WBI (\"   int, int, int, int, int);\");\n+      WBI (\"   int, int, int, int, int, int);\");\n \n       if Use_Pragma_Linker_Constructor then\n          WBI (\"extern void \" & Ada_Final_Name.all &\n@@ -2361,7 +2392,7 @@ package body Bindgen is\n \n       if Suppress_Standard_Library_On_Target then\n          WBI (\"\");\n-         WBI (\"void __gnat_break_start () {}\");\n+         WBI (\"void __gnat_break_start (void) {}\");\n       end if;\n \n       --  Generate the __gnat_version and __gnat_ada_main_program_name info\n@@ -2507,7 +2538,13 @@ package body Bindgen is\n       end loop;\n \n       WBI (\"\");\n-      Ubuf := \"u00000\";\n+\n+      --  We used to have more complex code: Ubuf := \"u00000\";\n+      --  which was being miscompiled, so use simpler code instead:\n+\n+      for J in Ubuf'First + 1 .. Ubuf'Last loop\n+         Ubuf (J) := '0';\n+      end loop;\n \n       for U in Units.First .. Units.Last loop\n          Increment_Ubuf;"}]}