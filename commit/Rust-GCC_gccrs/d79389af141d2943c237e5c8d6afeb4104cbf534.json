{"sha": "d79389af141d2943c237e5c8d6afeb4104cbf534", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDc5Mzg5YWYxNDFkMjk0M2MyMzdlNWM4ZDZhZmViNDEwNGNiZjUzNA==", "commit": {"author": {"name": "H.J. Lu", "email": "hongjiu.lu@intel.com", "date": "2010-08-12T16:39:37Z"}, "committer": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2010-08-12T16:39:37Z"}, "message": "Turn on -fomit-frame-pointer by default for 32bit Linux/x86.\n\n2010-08-12  H.J. Lu  <hongjiu.lu@intel.com>\n\t    Uros Bizjak  <ubizjak@gmail.com>\n\n\t* config.gcc: Handle --enable-frame-pointer.\n\n\t* configure.ac: Add --enable-frame-pointer.\n\t* configure: Regenerated.\n\n\t* config/i386/i386.c (USE_IX86_FRAME_POINTER): Default to 0.\n\t(override_options): If not configured with --enable-frame-pointer,\n\tenable -fomit-frame-pointer (but not for TARGET_MACHO or when\n\toptimizing for size), -fasynchronous-unwind-tables and\n\t-maccumulate-outgoing-args by default.\n\nCo-Authored-By: Uros Bizjak <ubizjak@gmail.com>\n\nFrom-SVN: r163196", "tree": {"sha": "6e130fcc873dab0799a165c43fa8b39c4b2eb9be", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6e130fcc873dab0799a165c43fa8b39c4b2eb9be"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d79389af141d2943c237e5c8d6afeb4104cbf534", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d79389af141d2943c237e5c8d6afeb4104cbf534", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d79389af141d2943c237e5c8d6afeb4104cbf534", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d79389af141d2943c237e5c8d6afeb4104cbf534/comments", "author": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a8c56818780786dd56e9656ddfa9806da4387e9c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a8c56818780786dd56e9656ddfa9806da4387e9c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a8c56818780786dd56e9656ddfa9806da4387e9c"}], "stats": {"total": 119, "additions": 90, "deletions": 29}, "files": [{"sha": "39b2e75ca820e58edc44351da9087bd19862734d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d79389af141d2943c237e5c8d6afeb4104cbf534/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d79389af141d2943c237e5c8d6afeb4104cbf534/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d79389af141d2943c237e5c8d6afeb4104cbf534", "patch": "@@ -1,3 +1,17 @@\n+2010-08-12  H.J. Lu  <hongjiu.lu@intel.com>\n+\t    Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* config.gcc: Handle --enable-frame-pointer.\n+\n+\t* configure.ac: Add --enable-frame-pointer.\n+\t* configure: Regenerated.\n+\n+\t* config/i386/i386.c (USE_IX86_FRAME_POINTER): Default to 0.\n+\t(override_options): If not configured with --enable-frame-pointer,\n+\tenable -fomit-frame-pointer (but not for TARGET_MACHO or when\n+\toptimizing for size), -fasynchronous-unwind-tables and\n+\t-maccumulate-outgoing-args by default.\n+\n 2010-08-12  Jakub Jelinek  <jakub@redhat.com>\n \n \t* builtins.c (fold_builtin_memory_op): Avoid -Wsign-compare"}, {"sha": "62dd9f650456a676d973fa2f6a46ee4a96a15beb", "filename": "gcc/config.gcc", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d79389af141d2943c237e5c8d6afeb4104cbf534/gcc%2Fconfig.gcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d79389af141d2943c237e5c8d6afeb4104cbf534/gcc%2Fconfig.gcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.gcc?ref=d79389af141d2943c237e5c8d6afeb4104cbf534", "patch": "@@ -406,13 +406,19 @@ i[34567]86-*-*)\n \tif test \"x$enable_cld\" = xyes; then\n \t\ttm_defines=\"${tm_defines} USE_IX86_CLD=1\"\n \tfi\n+\tif test \"x$enable_frame_pointer\" = xyes; then\n+\t\ttm_defines=\"${tm_defines} USE_IX86_FRAME_POINTER=1\"\n+\tfi\n \ttm_file=\"vxworks-dummy.h ${tm_file}\"\n \t;;\n x86_64-*-*)\n \ttm_file=\"i386/biarch64.h ${tm_file}\"\n \tif test \"x$enable_cld\" = xyes; then\n \t\ttm_defines=\"${tm_defines} USE_IX86_CLD=1\"\n \tfi\n+\tif test \"x$enable_frame_pointer\" = xyes; then\n+\t\ttm_defines=\"${tm_defines} USE_IX86_FRAME_POINTER=1\"\n+\tfi\n \ttm_file=\"vxworks-dummy.h ${tm_file}\"\n \t;;\n esac"}, {"sha": "a87175cf96d18e8432cc980d84df34cd7e7e2e02", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 34, "deletions": 27, "changes": 61, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d79389af141d2943c237e5c8d6afeb4104cbf534/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d79389af141d2943c237e5c8d6afeb4104cbf534/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=d79389af141d2943c237e5c8d6afeb4104cbf534", "patch": "@@ -2979,32 +2979,6 @@ override_options (bool main_args_p)\n   if (TARGET_MACHO && TARGET_64BIT)\n     flag_pic = 2;\n \n-  /* Set the default values for switches whose default depends on TARGET_64BIT\n-     in case they weren't overwritten by command line options.  */\n-  if (TARGET_64BIT)\n-    {\n-      if (flag_zee == 2)\n-        flag_zee = 1;\n-      /* Mach-O doesn't support omitting the frame pointer for now.  */\n-      if (flag_omit_frame_pointer == 2)\n-\tflag_omit_frame_pointer = (TARGET_MACHO ? 0 : 1);\n-      if (flag_asynchronous_unwind_tables == 2)\n-\tflag_asynchronous_unwind_tables = 1;\n-      if (flag_pcc_struct_return == 2)\n-\tflag_pcc_struct_return = 0;\n-    }\n-  else\n-    {\n-      if (flag_zee == 2)\n-        flag_zee = 0;\n-      if (flag_omit_frame_pointer == 2)\n-\tflag_omit_frame_pointer = 0;\n-      if (flag_asynchronous_unwind_tables == 2)\n-\tflag_asynchronous_unwind_tables = 0;\n-      if (flag_pcc_struct_return == 2)\n-\tflag_pcc_struct_return = DEFAULT_PCC_STRUCT_RETURN;\n-    }\n-\n   /* Need to check -mtune=generic first.  */\n   if (ix86_tune_string)\n     {\n@@ -3292,6 +3266,38 @@ override_options (bool main_args_p)\n   for (i = 0; i < X86_TUNE_LAST; ++i)\n     ix86_tune_features[i] = !!(initial_ix86_tune_features[i] & ix86_tune_mask);\n \n+#ifndef USE_IX86_FRAME_POINTER\n+#define USE_IX86_FRAME_POINTER 0\n+#endif\n+\n+  /* Set the default values for switches whose default depends on TARGET_64BIT\n+     in case they weren't overwritten by command line options.  */\n+  if (TARGET_64BIT)\n+    {\n+      if (flag_zee == 2)\n+        flag_zee = 1;\n+      /* Mach-O doesn't support omitting the frame pointer for now.  */\n+      if (flag_omit_frame_pointer == 2)\n+\tflag_omit_frame_pointer = (TARGET_MACHO ? 0 : 1);\n+      if (flag_asynchronous_unwind_tables == 2)\n+\tflag_asynchronous_unwind_tables = 1;\n+      if (flag_pcc_struct_return == 2)\n+\tflag_pcc_struct_return = 0;\n+    }\n+  else\n+    {\n+      if (flag_zee == 2)\n+        flag_zee = 0;\n+      /* Mach-O doesn't support omitting the frame pointer for now.  */\n+      if (flag_omit_frame_pointer == 2)\n+\tflag_omit_frame_pointer =\n+\t  (TARGET_MACHO ? 0 : !(USE_IX86_FRAME_POINTER || optimize_size));\n+      if (flag_asynchronous_unwind_tables == 2)\n+\tflag_asynchronous_unwind_tables = !USE_IX86_FRAME_POINTER;\n+      if (flag_pcc_struct_return == 2)\n+\tflag_pcc_struct_return = DEFAULT_PCC_STRUCT_RETURN;\n+    }\n+\n   if (optimize_size)\n     ix86_cost = &ix86_size_cost;\n   else\n@@ -3574,7 +3580,8 @@ override_options (bool main_args_p)\n \t       prefix, suffix, sw);\n     }\n \n-  if ((x86_accumulate_outgoing_args & ix86_tune_mask)\n+  if ((!USE_IX86_FRAME_POINTER\n+       || (x86_accumulate_outgoing_args & ix86_tune_mask))\n       && !(target_flags_explicit & MASK_ACCUMULATE_OUTGOING_ARGS)\n       && !optimize_size)\n     target_flags |= MASK_ACCUMULATE_OUTGOING_ARGS;"}, {"sha": "ad548fc8c0832c0b4cd21892865ac3379b16d3cf", "filename": "gcc/configure", "status": "modified", "additions": 22, "deletions": 2, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d79389af141d2943c237e5c8d6afeb4104cbf534/gcc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d79389af141d2943c237e5c8d6afeb4104cbf534/gcc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure?ref=d79389af141d2943c237e5c8d6afeb4104cbf534", "patch": "@@ -898,6 +898,7 @@ with_system_libunwind\n enable_secureplt\n enable_leading_mingw64_underscores\n enable_cld\n+enable_frame_pointer\n enable_win32_registry\n enable_static\n with_pic\n@@ -1597,6 +1598,7 @@ Optional Features:\n   --enable-leading-mingw64-underscores\n                           Enable leading underscores on 64 bit mingw targets\n   --enable-cld            enable -mcld by default for 32bit x86\n+  --enable-frame-pointer  enable -fno-omit-frame-pointer by default for 32bit x86\n   --disable-win32-registry\n                           disable lookup of installation paths in the\n                           Registry on Windows hosts\n@@ -10708,6 +10710,24 @@ else\n fi\n \n \n+# Check whether --enable-frame-pointer was given.\n+if test \"${enable_frame_pointer+set}\" = set; then :\n+  enableval=$enable_frame_pointer;\n+else\n+\n+case $target_os in\n+linux*)\n+  # Enable -fomit-frame-pointer by default for Linux.\n+  enable_frame_pointer=no\n+  ;;\n+*)\n+  enable_frame_pointer=yes\n+  ;;\n+esac\n+\n+fi\n+\n+\n # Windows32 Registry support for specifying GCC installation paths.\n # Check whether --enable-win32-registry was given.\n if test \"${enable_win32_registry+set}\" = set; then :\n@@ -17109,7 +17129,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 17112 \"configure\"\n+#line 17132 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -17215,7 +17235,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 17218 \"configure\"\n+#line 17238 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H"}, {"sha": "dd0b1984c9fbcc56750c05277e0219cf29b5d4c2", "filename": "gcc/configure.ac", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d79389af141d2943c237e5c8d6afeb4104cbf534/gcc%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d79389af141d2943c237e5c8d6afeb4104cbf534/gcc%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure.ac?ref=d79389af141d2943c237e5c8d6afeb4104cbf534", "patch": "@@ -1580,6 +1580,20 @@ AC_ARG_ENABLE(cld,\n [  --enable-cld            enable -mcld by default for 32bit x86], [],\n [enable_cld=no])\n \n+AC_ARG_ENABLE(frame-pointer,\n+[  --enable-frame-pointer  enable -fno-omit-frame-pointer by default for 32bit x86], [],\n+[\n+case $target_os in\n+linux*)\n+  # Enable -fomit-frame-pointer by default for Linux.\n+  enable_frame_pointer=no\n+  ;;\n+*)\n+  enable_frame_pointer=yes\n+  ;;\n+esac\n+])\n+\n # Windows32 Registry support for specifying GCC installation paths.\n AC_ARG_ENABLE(win32-registry,\n [  --disable-win32-registry"}]}