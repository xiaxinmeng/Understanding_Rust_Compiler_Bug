{"sha": "62c4c81aec34c3874fd55ecff937c969658dd75d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjJjNGM4MWFlYzM0YzM4NzRmZDU1ZWNmZjkzN2M5Njk2NThkZDc1ZA==", "commit": {"author": {"name": "Bernd Edlinger", "email": "bernd.edlinger@hotmail.de", "date": "2015-02-22T19:38:53Z"}, "committer": {"name": "Bernd Edlinger", "email": "edlinger@gcc.gnu.org", "date": "2015-02-22T19:38:53Z"}, "message": "re PR fortran/64980 (ICE in trans-expr.c)\n\n2015-02-22  Bernd Edlinger  <bernd.edlinger@hotmail.de>\n\n        PR fortran/64980\n        PR fortran/61960\n        * trans-expr.c (gfc_apply_interface_mapping_to_expr): Remove mapping\n        for component references to class objects.\n        (gfc_conv_procedure_call): Compare the class by name.\n\ntestsuite:\n2015-02-22  Bernd Edlinger  <bernd.edlinger@hotmail.de>\n\n        PR fortran/64980\n        PR fortran/61960\n        * gfortran.dg/pr61960.f90: New.\n        * gfortran.dg/pr64230.f90: New.\n        * gfortran.dg/pr64980.f03: New.\n\nFrom-SVN: r220899", "tree": {"sha": "6849f84a99ce0ca6a47504ff2f468d039f674569", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6849f84a99ce0ca6a47504ff2f468d039f674569"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/62c4c81aec34c3874fd55ecff937c969658dd75d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/62c4c81aec34c3874fd55ecff937c969658dd75d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/62c4c81aec34c3874fd55ecff937c969658dd75d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/62c4c81aec34c3874fd55ecff937c969658dd75d/comments", "author": {"login": "bernd-edlinger", "id": 17638929, "node_id": "MDQ6VXNlcjE3NjM4OTI5", "avatar_url": "https://avatars.githubusercontent.com/u/17638929?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bernd-edlinger", "html_url": "https://github.com/bernd-edlinger", "followers_url": "https://api.github.com/users/bernd-edlinger/followers", "following_url": "https://api.github.com/users/bernd-edlinger/following{/other_user}", "gists_url": "https://api.github.com/users/bernd-edlinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/bernd-edlinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bernd-edlinger/subscriptions", "organizations_url": "https://api.github.com/users/bernd-edlinger/orgs", "repos_url": "https://api.github.com/users/bernd-edlinger/repos", "events_url": "https://api.github.com/users/bernd-edlinger/events{/privacy}", "received_events_url": "https://api.github.com/users/bernd-edlinger/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "201f1cce71bf59f8b36a73070eda02ced8db3d7e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/201f1cce71bf59f8b36a73070eda02ced8db3d7e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/201f1cce71bf59f8b36a73070eda02ced8db3d7e"}], "stats": {"total": 119, "additions": 111, "deletions": 8}, "files": [{"sha": "d80c59bab292bc4653f35e61c25c58eb5d968f72", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62c4c81aec34c3874fd55ecff937c969658dd75d/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62c4c81aec34c3874fd55ecff937c969658dd75d/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=62c4c81aec34c3874fd55ecff937c969658dd75d", "patch": "@@ -1,3 +1,11 @@\n+2015-02-22  Bernd Edlinger  <bernd.edlinger@hotmail.de>\n+\n+\tPR fortran/64980\n+\tPR fortran/61960\n+\t* trans-expr.c (gfc_apply_interface_mapping_to_expr): Remove mapping\n+\tfor component references to class objects.\n+\t(gfc_conv_procedure_call): Compare the class by name.\n+\n 2015-02-13  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n \n \tPR fortran/64506"}, {"sha": "db04b30671d96a3420d100110f4c781fa81b6939", "filename": "gcc/fortran/trans-expr.c", "status": "modified", "additions": 2, "deletions": 8, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62c4c81aec34c3874fd55ecff937c969658dd75d/gcc%2Ffortran%2Ftrans-expr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62c4c81aec34c3874fd55ecff937c969658dd75d/gcc%2Ffortran%2Ftrans-expr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-expr.c?ref=62c4c81aec34c3874fd55ecff937c969658dd75d", "patch": "@@ -3783,10 +3783,6 @@ gfc_apply_interface_mapping_to_expr (gfc_interface_mapping * mapping,\n \t  expr->symtree = sym->new_sym;\n \telse if (sym->expr)\n \t  gfc_replace_expr (expr, gfc_copy_expr (sym->expr));\n-\t/* Replace base type for polymorphic arguments.  */\n-\tif (expr->ref && expr->ref->type == REF_COMPONENT\n-\t    && sym->expr && sym->expr->ts.type == BT_CLASS)\n-\t  expr->ref->u.c.sym = sym->expr->ts.u.derived;\n       }\n \n       /* ...and to subexpressions in expr->value.  */\n@@ -4541,10 +4537,8 @@ gfc_conv_procedure_call (gfc_se * se, gfc_symbol * sym,\n \t\t\t   && fsym->ts.type == BT_CLASS\n \t\t\t   && !CLASS_DATA (fsym)->as\n \t\t\t   && !CLASS_DATA (e)->as\n-\t\t\t   && (CLASS_DATA (fsym)->attr.class_pointer\n-\t\t\t       != CLASS_DATA (e)->attr.class_pointer\n-\t\t\t       || CLASS_DATA (fsym)->attr.allocatable\n-\t\t\t\t  != CLASS_DATA (e)->attr.allocatable))\n+\t\t\t   && strcmp (fsym->ts.u.derived->name,\n+\t\t\t\t      e->ts.u.derived->name))\n \t\t    {\n \t\t      type = gfc_typenode_for_spec (&fsym->ts);\n \t\t      var = gfc_create_var (type, fsym->name);"}, {"sha": "77c891f60c95cd5eaa7b379ff8f3b6f6b798a67a", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62c4c81aec34c3874fd55ecff937c969658dd75d/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62c4c81aec34c3874fd55ecff937c969658dd75d/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=62c4c81aec34c3874fd55ecff937c969658dd75d", "patch": "@@ -1,3 +1,11 @@\n+2015-02-22  Bernd Edlinger  <bernd.edlinger@hotmail.de>\n+\n+\tPR fortran/64980\n+\tPR fortran/61960\n+\t* gfortran.dg/pr61960.f90: New.\n+\t* gfortran.dg/pr64230.f90: New.\n+\t* gfortran.dg/pr64980.f03: New.\n+\n 2015-02-22  Tom de Vries  <tom@codesourcery.com>\n \n \t* gcc.dg/pr30957-1.c: Make pr30957-1.c pass rather xfail."}, {"sha": "000ff93ce5a1019e5a4cc1d338dc65cc689fc9d3", "filename": "gcc/testsuite/gfortran.dg/pr61960.f90", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62c4c81aec34c3874fd55ecff937c969658dd75d/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr61960.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62c4c81aec34c3874fd55ecff937c969658dd75d/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr61960.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr61960.f90?ref=62c4c81aec34c3874fd55ecff937c969658dd75d", "patch": "@@ -0,0 +1,29 @@\n+! { dg-do compile }\n+\n+module data_func_mod\n+    implicit none\n+    integer, parameter :: sp = 4\n+    type :: data_type\n+        real(kind=sp), pointer, dimension(:, :) :: data => null()\n+        integer :: nr_rows = 0, nr_cols = 0\n+    end type data_type\n+\n+contains\n+\n+    function get_row(this, i) result(row)\n+        implicit none\n+        type(data_type), intent(in) :: this\n+        integer, intent(in) :: i\n+        real(kind=sp), dimension(this%nr_cols) :: row\n+        row = this%data(:, i)\n+    end function get_row\n+\n+    subroutine print_matrix(m, i, fmt_str)\n+        implicit none\n+        class(data_type), intent(in) :: m\n+        integer, intent(in) :: i\n+        character(len=20), intent(in) :: fmt_str\n+        write (unit=6, fmt=fmt_str) get_row(m, i)\n+    end subroutine print_matrix\n+\n+end module data_func_mod"}, {"sha": "afa44e8642aae47343f57b87a56173aefb8d71ff", "filename": "gcc/testsuite/gfortran.dg/pr64230.f90", "status": "added", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62c4c81aec34c3874fd55ecff937c969658dd75d/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr64230.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62c4c81aec34c3874fd55ecff937c969658dd75d/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr64230.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr64230.f90?ref=62c4c81aec34c3874fd55ecff937c969658dd75d", "patch": "@@ -0,0 +1,42 @@\n+! { dg-do run }\n+Module m\n+  Implicit None\n+  Type, Public :: t1\n+    Integer, Allocatable :: i(:)\n+  End Type\n+  Type, Public :: t2\n+    Integer, Allocatable :: i(:)\n+  End Type\n+  Type, Public :: t3\n+    Type (t2) :: t\n+  End Type\n+  Type, Public :: t4\n+  End Type\n+  Type, Public, Extends (t4) :: t5\n+    Type (t1) :: t_c1\n+  End Type\n+  Type, Public, Extends (t4) :: t6\n+    Type (t5) :: t_c2\n+  End Type\n+  Type, Public, Extends (t6) :: t7\n+    Type (t3) :: t_c3\n+  End Type\n+End Module\n+Program main\n+  Use m\n+  Implicit None\n+  Interface\n+    Subroutine s(t)\n+      Use m\n+      Class (t4), Allocatable, Intent (Out) :: t\n+    End Subroutine\n+  End Interface\n+  Class (t4), Allocatable :: t\n+  Call s(t)\n+  Deallocate (t)\n+End Program\n+Subroutine s(t)\n+  Use m\n+  Class (t4), Allocatable, Intent (Out) :: t\n+  Allocate (t7 :: t)\n+End Subroutine"}, {"sha": "85e61289557d556ad84922b346a3802e93f31ce2", "filename": "gcc/testsuite/gfortran.dg/pr64980.f03", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62c4c81aec34c3874fd55ecff937c969658dd75d/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr64980.f03", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62c4c81aec34c3874fd55ecff937c969658dd75d/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr64980.f03", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr64980.f03?ref=62c4c81aec34c3874fd55ecff937c969658dd75d", "patch": "@@ -0,0 +1,22 @@\n+! { dg-do compile }\n+\n+  implicit none\n+\n+  type :: muli_trapezium_t\n+     integer::dim=0\n+  end type\n+\n+  type, extends (muli_trapezium_t) :: muli_trapezium_node_class_t\n+  end type\n+\n+  class(muli_trapezium_node_class_t), pointer :: node\n+  print *,get_d_value_array(node)\n+\n+contains\n+\n+  function get_d_value_array (this) result (subarray)\n+    class(muli_trapezium_t), intent(in) :: this\n+    real, dimension(this%dim) :: subarray\n+  end function\n+\n+end"}]}