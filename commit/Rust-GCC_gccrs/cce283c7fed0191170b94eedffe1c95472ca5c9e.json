{"sha": "cce283c7fed0191170b94eedffe1c95472ca5c9e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2NlMjgzYzdmZWQwMTkxMTcwYjk0ZWVkZmZlMWM5NTQ3MmNhNWM5ZQ==", "commit": {"author": {"name": "Toon Moene", "email": "toon@moene.indiv.nluug.nl", "date": "2006-02-15T21:06:58Z"}, "committer": {"name": "Toon Moene", "email": "toon@gcc.gnu.org", "date": "2006-02-15T21:06:58Z"}, "message": "re PR fortran/26054 (Gratuitous warning about Fortran 2003 features w/o -std=...)\n\n2006-02-15  Toon Moene  <toon@moene.indiv.nluug.nl>\n\n\tPR fortran/26054\n\t* fortran/options.c: Do not warn for Fortran 2003 features\n\tby default.\n\t* testsuite/gfortran.dg/enum_8.f90: Remove check for warning.\n\t* testsuite/gfortran.dg/iomsg_1.f90: Ditto.\n\t* testsuite/gfortran.dg/enum_1.f90: Ditto.\n\t* testsuite/gfortran.dg/enum_9.f90: Ditto.\n\t* testsuite/gfortran.dg/enum_2.f90: Ditto.\n\t* testsuite/gfortran.dg/enum_10.f90: Ditto.\n\t* testsuite/gfortran.dg/enum_3.f90: Ditto.\n\t* testsuite/gfortran.dg/flush_1.f90: Ditto.\n\t* testsuite/gfortran.dg/enum_4.f90: Ditto.\n\t* testsuite/gfortran.dg/array_constructor_1.f90: Ditto.\n\t* testsuite/gfortran.dg/enum_5.f90: Ditto.\n\t* testsuite/gfortran.dg/enum_6.f90: Ditto.\n\t* testsuite/gfortran.dg/enum_7.f90: Ditto.\n\nFrom-SVN: r111117", "tree": {"sha": "67fa65ef38317cfebaf3751035971e43f3d5f10d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/67fa65ef38317cfebaf3751035971e43f3d5f10d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cce283c7fed0191170b94eedffe1c95472ca5c9e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cce283c7fed0191170b94eedffe1c95472ca5c9e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cce283c7fed0191170b94eedffe1c95472ca5c9e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cce283c7fed0191170b94eedffe1c95472ca5c9e/comments", "author": null, "committer": null, "parents": [{"sha": "01ea23f3d250c13a0097cd22e6d36390941c4c97", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/01ea23f3d250c13a0097cd22e6d36390941c4c97", "html_url": "https://github.com/Rust-GCC/gccrs/commit/01ea23f3d250c13a0097cd22e6d36390941c4c97"}], "stats": {"total": 72, "additions": 47, "deletions": 25}, "files": [{"sha": "5a0b387df4c08ffc3218ecc0fa10e379bb87894c", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cce283c7fed0191170b94eedffe1c95472ca5c9e/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cce283c7fed0191170b94eedffe1c95472ca5c9e/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=cce283c7fed0191170b94eedffe1c95472ca5c9e", "patch": "@@ -1,3 +1,8 @@\n+2006-02-15  Toon Moene  <toon@moene.indiv.nluug.nl>\n+\n+\tPR fortran/26054\n+\t* options.c: Do not warn for Fortran 2003 features by default.\n+\n 2006-02-15  Tobias Schl\ufffd\ufffdter  <tobias.schlueter@physik.uni-muenchen.de>\n \n \t* check.c: Update copyright years."}, {"sha": "6a9bec9b3a002618f58c7df543ed16aa1b96a5c4", "filename": "gcc/fortran/options.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cce283c7fed0191170b94eedffe1c95472ca5c9e/gcc%2Ffortran%2Foptions.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cce283c7fed0191170b94eedffe1c95472ca5c9e/gcc%2Ffortran%2Foptions.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Foptions.c?ref=cce283c7fed0191170b94eedffe1c95472ca5c9e", "patch": "@@ -90,7 +90,7 @@ gfc_init_options (unsigned int argc ATTRIBUTE_UNUSED,\n     | GFC_STD_F2003 | GFC_STD_F95 | GFC_STD_F77 | GFC_STD_GNU\n     | GFC_STD_LEGACY;\n   gfc_option.warn_std = GFC_STD_F95_OBS | GFC_STD_F95_DEL\n-    | GFC_STD_F2003 | GFC_STD_LEGACY;\n+    | GFC_STD_LEGACY;\n \n   gfc_option.warn_nonstd_intrinsics = 0;\n "}, {"sha": "21fcc9531114ca75e21586f549fc45a30213e1b9", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cce283c7fed0191170b94eedffe1c95472ca5c9e/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cce283c7fed0191170b94eedffe1c95472ca5c9e/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=cce283c7fed0191170b94eedffe1c95472ca5c9e", "patch": "@@ -1,3 +1,20 @@\n+2006-02-15  Toon Moene  <toon@moene.indiv.nluug.nl>\n+\n+\tPR fortran/26054\n+\t* gfortran.dg/enum_8.f90: Remove check for warning.\n+\t* gfortran.dg/iomsg_1.f90: Ditto.\n+\t* gfortran.dg/enum_1.f90: Ditto.\n+\t* gfortran.dg/enum_9.f90: Ditto.\n+\t* gfortran.dg/enum_2.f90: Ditto.\n+\t* gfortran.dg/enum_10.f90: Ditto.\n+\t* gfortran.dg/enum_3.f90: Ditto.\n+\t* gfortran.dg/flush_1.f90: Ditto.\n+\t* gfortran.dg/enum_4.f90: Ditto.\n+\t* gfortran.dg/array_constructor_1.f90: Ditto.\n+\t* gfortran.dg/enum_5.f90: Ditto.\n+\t* gfortran.dg/enum_6.f90: Ditto.\n+\t* gfortran.dg/enum_7.f90: Ditto.\n+\n 2006-02-15  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR middle-end/26300"}, {"sha": "0ba8ba0d0a44be18adfa1cce5c085916e56f2451", "filename": "gcc/testsuite/gfortran.dg/array_constructor_1.f90", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cce283c7fed0191170b94eedffe1c95472ca5c9e/gcc%2Ftestsuite%2Fgfortran.dg%2Farray_constructor_1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cce283c7fed0191170b94eedffe1c95472ca5c9e/gcc%2Ftestsuite%2Fgfortran.dg%2Farray_constructor_1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Farray_constructor_1.f90?ref=cce283c7fed0191170b94eedffe1c95472ca5c9e", "patch": "@@ -4,12 +4,12 @@ program bracket_array_constructor\n     implicit none\n     integer :: a(4), i\n \n-    a = [ 1, 2, 3, 4 ]  ! { dg-warning \"array constructor\" }\n+    a = [ 1, 2, 3, 4 ]\n     do i = 1, size(a)\n         if (a(i) /= i) call abort()\n     end do\n \n-    a = [ (/ 1, 2, 3, 4 /) ]  ! { dg-warning \"array constructor\" }\n+    a = [ (/ 1, 2, 3, 4 /) ]\n     do i = 1, size(a)\n         if (a(i) /= i) call abort()\n     end do"}, {"sha": "0156cb576f08cbfbeb25c1a1d1a1dd4fd9da3a2a", "filename": "gcc/testsuite/gfortran.dg/enum_1.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cce283c7fed0191170b94eedffe1c95472ca5c9e/gcc%2Ftestsuite%2Fgfortran.dg%2Fenum_1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cce283c7fed0191170b94eedffe1c95472ca5c9e/gcc%2Ftestsuite%2Fgfortran.dg%2Fenum_1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fenum_1.f90?ref=cce283c7fed0191170b94eedffe1c95472ca5c9e", "patch": "@@ -3,7 +3,7 @@\n \n program main\n   implicit none\n-  enum, bind (c)  ! { dg-warning \"New in Fortran 2003\" }\n+  enum, bind (c)\n     enumerator :: red, black\n     enumerator blue\n   end enum"}, {"sha": "dad29a1c5121b0f1a0a5c3495ddcd477440bb4a0", "filename": "gcc/testsuite/gfortran.dg/enum_10.f90", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cce283c7fed0191170b94eedffe1c95472ca5c9e/gcc%2Ftestsuite%2Fgfortran.dg%2Fenum_10.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cce283c7fed0191170b94eedffe1c95472ca5c9e/gcc%2Ftestsuite%2Fgfortran.dg%2Fenum_10.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fenum_10.f90?ref=cce283c7fed0191170b94eedffe1c95472ca5c9e", "patch": "@@ -5,15 +5,15 @@\n ! corresponding C type.\n \n module enum_10\n-enum, bind( c )   ! { dg-warning \"New in Fortran 2003\" }\n+enum, bind( c )\n    enumerator :: one1 = 1, two1, max1 = huge(1_1)\n end enum\n \n-enum, bind( c )   ! { dg-warning \"New in Fortran 2003\" }\n+enum, bind( c )\n    enumerator :: one2 = 1, two2, max2 = huge(1_2)\n end enum\n \n-enum, bind( c )   ! { dg-warning \"New in Fortran 2003\" }\n+enum, bind( c )\n    enumerator :: one4 = 1, two4, max4 = huge(1_4)\n end enum\n end module enum_10"}, {"sha": "6d8a4b22b24791f9bb72de73f8ce02145013f10b", "filename": "gcc/testsuite/gfortran.dg/enum_2.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cce283c7fed0191170b94eedffe1c95472ca5c9e/gcc%2Ftestsuite%2Fgfortran.dg%2Fenum_2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cce283c7fed0191170b94eedffe1c95472ca5c9e/gcc%2Ftestsuite%2Fgfortran.dg%2Fenum_2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fenum_2.f90?ref=cce283c7fed0191170b94eedffe1c95472ca5c9e", "patch": "@@ -3,7 +3,7 @@\n \n program main\n   implicit none\n-  enum, bind (c)  ! { dg-warning \"New in Fortran 2003\" }\n+  enum, bind (c)\n     enumerator :: red, black\n     integer :: x  ! { dg-error \"Unexpected data declaration\" }\n     enumerator blue = 1  ! { dg-error \"Syntax error in ENUMERATOR definition\" }"}, {"sha": "277cabe9a800b96ed1ddd7cd9e798d00fd5cebbf", "filename": "gcc/testsuite/gfortran.dg/enum_3.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cce283c7fed0191170b94eedffe1c95472ca5c9e/gcc%2Ftestsuite%2Fgfortran.dg%2Fenum_3.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cce283c7fed0191170b94eedffe1c95472ca5c9e/gcc%2Ftestsuite%2Fgfortran.dg%2Fenum_3.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fenum_3.f90?ref=cce283c7fed0191170b94eedffe1c95472ca5c9e", "patch": "@@ -3,7 +3,7 @@\n \n program main\n   implicit none\n-  enum, bind (c)  ! { dg-warning \"New in Fortran 2003\" } \n+  enum, bind (c)\n     enumerator :: red, black = 2.2  ! { dg-error \"initialized with integer expression\" }\n     enumerator :: blue = \"x\"  ! { dg-error \"initialized with integer expression\" }\n   end enum  ! { dg-error \"has no ENUMERATORS\" }"}, {"sha": "99acda0c81823788506ccac0486283857d408b04", "filename": "gcc/testsuite/gfortran.dg/enum_4.f90", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cce283c7fed0191170b94eedffe1c95472ca5c9e/gcc%2Ftestsuite%2Fgfortran.dg%2Fenum_4.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cce283c7fed0191170b94eedffe1c95472ca5c9e/gcc%2Ftestsuite%2Fgfortran.dg%2Fenum_4.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fenum_4.f90?ref=cce283c7fed0191170b94eedffe1c95472ca5c9e", "patch": "@@ -3,12 +3,12 @@\n \n program main\n   implicit none\n-  enum, bind (c)  ! { dg-warning \"New in Fortran 2003\" } \n+  enum, bind (c)\n     enumerator :: red, black = 2     \n     enumerator :: blue = 1, red  ! { dg-error \"already\" }\n   end enum\n \n-  enum, bind (c)  ! { dg-warning \"New in Fortran 2003\" } \n+  enum, bind (c)\n     enumerator :: r, b(10) = 2  ! { dg-error \"cannot be array\" }\n     enumerator , save :: g = 1  ! { dg-error \"cannot have attributes\" }  \n   end  ! { dg-error \" END ENUM\" } "}, {"sha": "604e50df44adc2db88d82f9e85707739763fb36f", "filename": "gcc/testsuite/gfortran.dg/enum_5.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cce283c7fed0191170b94eedffe1c95472ca5c9e/gcc%2Ftestsuite%2Fgfortran.dg%2Fenum_5.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cce283c7fed0191170b94eedffe1c95472ca5c9e/gcc%2Ftestsuite%2Fgfortran.dg%2Fenum_5.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fenum_5.f90?ref=cce283c7fed0191170b94eedffe1c95472ca5c9e", "patch": "@@ -5,7 +5,7 @@ program main\n   implicit none\n   integer :: i = 1\n \n-  enum, bind (c)  ! { dg-warning \"New in Fortran 2003\" } \n+  enum, bind (c)\n     enumerator :: red, black = i  ! { dg-error \"is a variable\" }\n     enumerator :: blue = 1  \n   end enum junk  ! { dg-error \"Syntax error\" }"}, {"sha": "a03072755391e69449c57a63c5ae2ff91457dbe1", "filename": "gcc/testsuite/gfortran.dg/enum_6.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cce283c7fed0191170b94eedffe1c95472ca5c9e/gcc%2Ftestsuite%2Fgfortran.dg%2Fenum_6.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cce283c7fed0191170b94eedffe1c95472ca5c9e/gcc%2Ftestsuite%2Fgfortran.dg%2Fenum_6.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fenum_6.f90?ref=cce283c7fed0191170b94eedffe1c95472ca5c9e", "patch": "@@ -5,7 +5,7 @@ program main\n   implicit none\n   integer :: i = 1\n \n-  enum, bind (c)  ! { dg-warning \"New in Fortran 2003\" } \n+  enum, bind (c)\n     enumerator :: sun, mon = 2    \n     i = 2  ! { dg-error \"Unexpected\" }  \n     enumerator :: wed = 1    "}, {"sha": "9971a51184ed155dedd3b3aedee6df259b2df9ad", "filename": "gcc/testsuite/gfortran.dg/enum_7.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cce283c7fed0191170b94eedffe1c95472ca5c9e/gcc%2Ftestsuite%2Fgfortran.dg%2Fenum_7.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cce283c7fed0191170b94eedffe1c95472ca5c9e/gcc%2Ftestsuite%2Fgfortran.dg%2Fenum_7.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fenum_7.f90?ref=cce283c7fed0191170b94eedffe1c95472ca5c9e", "patch": "@@ -4,7 +4,7 @@\n program main\n   implicit none\n \n-  enum, bind (c)  ! { dg-warning \"New in Fortran 2003\" } \n+  enum, bind (c)\n     enumerator :: sun, mon = 2    \n     enum, bind (c)  ! { dg-error \"Unexpected\" }\n       enumerator :: apple, mango"}, {"sha": "cd3c12a27f757d80b77ee578b22eb7ca9893a5a4", "filename": "gcc/testsuite/gfortran.dg/enum_8.f90", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cce283c7fed0191170b94eedffe1c95472ca5c9e/gcc%2Ftestsuite%2Fgfortran.dg%2Fenum_8.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cce283c7fed0191170b94eedffe1c95472ca5c9e/gcc%2Ftestsuite%2Fgfortran.dg%2Fenum_8.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fenum_8.f90?ref=cce283c7fed0191170b94eedffe1c95472ca5c9e", "patch": "@@ -4,11 +4,11 @@\n \n program main\n   implicit none\n-  enum, bind (c)  ! { dg-warning \"New in Fortran 2003\" }\n+  enum, bind (c)\n     enumerator :: pp , qq = 4294967295, rr  ! { dg-error \"not initialized with integer\" }\n   end enum  ! { dg-error \"has no ENUMERATORS\" }\n \n-  enum, bind (c)  ! { dg-warning \"New in Fortran 2003\" }\n+  enum, bind (c)\n     enumerator :: p , q = 4294967299_8, r  ! { dg-error \"Arithmetic overflow\" }\n   end enum  ! { dg-error \"has no ENUMERATORS\" }\n "}, {"sha": "e735cf87772ba17875e1373e15c69bf13686bc55", "filename": "gcc/testsuite/gfortran.dg/enum_9.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cce283c7fed0191170b94eedffe1c95472ca5c9e/gcc%2Ftestsuite%2Fgfortran.dg%2Fenum_9.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cce283c7fed0191170b94eedffe1c95472ca5c9e/gcc%2Ftestsuite%2Fgfortran.dg%2Fenum_9.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fenum_9.f90?ref=cce283c7fed0191170b94eedffe1c95472ca5c9e", "patch": "@@ -4,7 +4,7 @@\n \n program main\n   implicit none\n-  enum, bind (c)  ! { dg-warning \"New in Fortran 2003\" }\n+  enum, bind (c)\n     enumerator :: red, black = 127\n     enumerator blue\n   end enum"}, {"sha": "90875dc651b71a72480a883253ecfb7911dc1966", "filename": "gcc/testsuite/gfortran.dg/flush_1.f90", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cce283c7fed0191170b94eedffe1c95472ca5c9e/gcc%2Ftestsuite%2Fgfortran.dg%2Fflush_1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cce283c7fed0191170b94eedffe1c95472ca5c9e/gcc%2Ftestsuite%2Fgfortran.dg%2Fflush_1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fflush_1.f90?ref=cce283c7fed0191170b94eedffe1c95472ca5c9e", "patch": "@@ -8,17 +8,17 @@ program flush_1\n    open (unit=10, access='SEQUENTIAL', status='SCRATCH')\n \n    write (10, *) 42\n-   flush 10                   ! { dg-warning \"Fortran 2003: FLUSH statement\" }\n+   flush 10\n \n    write (10, *) 42\n-   flush(10)                  ! { dg-warning \"Fortran 2003: FLUSH statement\" }\n+   flush(10)\n \n    write (10, *) 42\n-   flush(unit=10, iostat=ios) ! { dg-warning \"Fortran 2003: FLUSH statement\" }\n+   flush(unit=10, iostat=ios)\n    if (ios /= 0) call abort\n \n    write (10, *) 42\n-   flush (unit=10, err=20)    ! { dg-warning \"Fortran 2003: FLUSH statement\" }\n+   flush (unit=10, err=20)\n    goto 30\n 20 call abort\n 30 continue"}, {"sha": "20c8e8b89620cf5a2e99b2cd69f517f125b97977", "filename": "gcc/testsuite/gfortran.dg/iomsg_1.f90", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cce283c7fed0191170b94eedffe1c95472ca5c9e/gcc%2Ftestsuite%2Fgfortran.dg%2Fiomsg_1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cce283c7fed0191170b94eedffe1c95472ca5c9e/gcc%2Ftestsuite%2Fgfortran.dg%2Fiomsg_1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fiomsg_1.f90?ref=cce283c7fed0191170b94eedffe1c95472ca5c9e", "patch": "@@ -5,24 +5,24 @@ program iomsg_test\n \n   ! Test that iomsg is left unchanged with no error\n   ch = 'asdf'\n-  open(10, status='scratch', iomsg=ch, iostat=i) ! { dg-warning \"Fortran 2003: IOMSG tag\" }\n+  open(10, status='scratch', iomsg=ch, iostat=i)\n   if (ch .ne. 'asdf') call abort\n \n   ! Test iomsg with data transfer statement\n-  read(10,'(I2)', iomsg=ch, end=100) k ! { dg-warning \"Fortran 2003: IOMSG tag\" }\n+  read(10,'(I2)', iomsg=ch, end=100) k\n   call abort\n 100 continue\n   if (ch .ne. 'End of file') call abort\n \n   ! Test iomsg with open\n-  open (-3, err=200, iomsg=ch) ! { dg-warning \"Fortran 2003: IOMSG tag\" }\n+  open (-3, err=200, iomsg=ch)\n \n   call abort\n 200 continue\n   if (ch .ne. 'Bad unit number in OPEN statement') call abort\n \n   ! Test iomsg with close\n-  close(23,status=\"no_idea\", err=500, iomsg=ch) ! { dg-warning \"Fortran 2003: IOMSG tag\" }\n+  close(23,status=\"no_idea\", err=500, iomsg=ch)\n 500 continue\n   if (ch .ne. \"Bad STATUS parameter in CLOSE statement\") call abort\n end program iomsg_test"}]}