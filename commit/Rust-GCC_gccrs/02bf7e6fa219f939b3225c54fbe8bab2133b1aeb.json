{"sha": "02bf7e6fa219f939b3225c54fbe8bab2133b1aeb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDJiZjdlNmZhMjE5ZjkzOWIzMjI1YzU0ZmJlOGJhYjIxMzNiMWFlYg==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2019-11-05T16:12:07Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2019-11-05T16:12:07Z"}, "message": "re PR tree-optimization/92371 (ICE in info_for_reduction, at tree-vect-loop.c:4106)\n\n2019-11-05  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/92371\n\t* tree-vect-loop.c (vectorizable_reduction): Set STMT_VINFO_REDUC_DEF\n\ton the original stmt of live stmts in the chain.\n\t(vectorizable_live_operation): Look at the original stmt when\n\tchecking STMT_VINFO_REDUC_DEF.\n\n\t* gcc.dg/torture/pr92371.c: New testcase.\n\nFrom-SVN: r277850", "tree": {"sha": "f478ba0da318ede08b7f8bdd8b92bcb5c399f550", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f478ba0da318ede08b7f8bdd8b92bcb5c399f550"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/02bf7e6fa219f939b3225c54fbe8bab2133b1aeb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/02bf7e6fa219f939b3225c54fbe8bab2133b1aeb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/02bf7e6fa219f939b3225c54fbe8bab2133b1aeb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/02bf7e6fa219f939b3225c54fbe8bab2133b1aeb/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c6a7be9bdadf67dcc5496222129acadbb2dd0610", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c6a7be9bdadf67dcc5496222129acadbb2dd0610", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c6a7be9bdadf67dcc5496222129acadbb2dd0610"}], "stats": {"total": 40, "additions": 33, "deletions": 7}, "files": [{"sha": "21304fdd30c764ef36b5186043c86ced79ccf470", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/02bf7e6fa219f939b3225c54fbe8bab2133b1aeb/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/02bf7e6fa219f939b3225c54fbe8bab2133b1aeb/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=02bf7e6fa219f939b3225c54fbe8bab2133b1aeb", "patch": "@@ -1,3 +1,11 @@\n+2019-11-05  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/92371\n+\t* tree-vect-loop.c (vectorizable_reduction): Set STMT_VINFO_REDUC_DEF\n+\ton the original stmt of live stmts in the chain.\n+\t(vectorizable_live_operation): Look at the original stmt when\n+\tchecking STMT_VINFO_REDUC_DEF.\n+\n 2019-11-05  Aldy Hernandez  <aldyh@redhat.com>\n \n \t* gimple-fold.c, gimple-loop-versioning.cc,"}, {"sha": "725cfa52f14a6c7f9e3fc4d21fc88343aab7bdda", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/02bf7e6fa219f939b3225c54fbe8bab2133b1aeb/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/02bf7e6fa219f939b3225c54fbe8bab2133b1aeb/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=02bf7e6fa219f939b3225c54fbe8bab2133b1aeb", "patch": "@@ -1,3 +1,8 @@\n+2019-11-05  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/92371\n+\t* gcc.dg/torture/pr92371.c: New testcase.\n+\n 2019-11-05  Martin Liska  <mliska@suse.cz>\n \n \t* c-c++-common/ubsan/ptr-overflow-2.c: Update based on changed"}, {"sha": "0c78d32f471db9847dff95054a856995224490e5", "filename": "gcc/testsuite/gcc.dg/torture/pr92371.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/02bf7e6fa219f939b3225c54fbe8bab2133b1aeb/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr92371.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/02bf7e6fa219f939b3225c54fbe8bab2133b1aeb/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr92371.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr92371.c?ref=02bf7e6fa219f939b3225c54fbe8bab2133b1aeb", "patch": "@@ -0,0 +1,12 @@\n+/* { dg-do compile } */\n+/* { dg-additional-options \"-ftree-vectorize\" } */\n+\n+int a, b;\n+void d()\n+{\n+  int c = sizeof(int);\n+  for (; a; a++)\n+    c *= sizeof(int);\n+  c *= sizeof(int);\n+  b = c;\n+}"}, {"sha": "a63f8d51cc454fcbbd6b223639a105089389d27f", "filename": "gcc/tree-vect-loop.c", "status": "modified", "additions": 8, "deletions": 7, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/02bf7e6fa219f939b3225c54fbe8bab2133b1aeb/gcc%2Ftree-vect-loop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/02bf7e6fa219f939b3225c54fbe8bab2133b1aeb/gcc%2Ftree-vect-loop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-loop.c?ref=02bf7e6fa219f939b3225c54fbe8bab2133b1aeb", "patch": "@@ -5836,21 +5836,22 @@ vectorizable_reduction (stmt_vec_info stmt_info, slp_tree slp_node,\n   while (reduc_def != PHI_RESULT (reduc_def_phi))\n     {\n       stmt_vec_info def = loop_vinfo->lookup_def (reduc_def);\n-      def = vect_stmt_to_vectorize (def);\n-      if (STMT_VINFO_REDUC_IDX (def) == -1)\n+      stmt_vec_info vdef = vect_stmt_to_vectorize (def);\n+      if (STMT_VINFO_REDUC_IDX (vdef) == -1)\n \t{\n \t  if (dump_enabled_p ())\n \t    dump_printf_loc (MSG_MISSED_OPTIMIZATION, vect_location,\n \t\t\t     \"reduction chain broken by patterns.\\n\");\n \t  return false;\n \t}\n-      if (!REDUC_GROUP_FIRST_ELEMENT (def))\n+      if (!REDUC_GROUP_FIRST_ELEMENT (vdef))\n \tonly_slp_reduc_chain = false;\n       /* ???  For epilogue generation live members of the chain need\n-         to point back to the PHI for info_for_reduction to work.  */\n-      if (STMT_VINFO_LIVE_P (def))\n+         to point back to the PHI via their original stmt for\n+\t info_for_reduction to work.  */\n+      if (STMT_VINFO_LIVE_P (vdef))\n \tSTMT_VINFO_REDUC_DEF (def) = phi_info;\n-      reduc_def = gimple_op (def->stmt, 1 + STMT_VINFO_REDUC_IDX (def));\n+      reduc_def = gimple_op (vdef->stmt, 1 + STMT_VINFO_REDUC_IDX (vdef));\n       reduc_chain_length++;\n     }\n \n@@ -7554,7 +7555,7 @@ vectorizable_live_operation (stmt_vec_info stmt_info,\n   /* If a stmt of a reduction is live, vectorize it via\n      vect_create_epilog_for_reduction.  vectorizable_reduction assessed\n      validity so just trigger the transform here.  */\n-  if (STMT_VINFO_REDUC_DEF (stmt_info))\n+  if (STMT_VINFO_REDUC_DEF (vect_orig_stmt (stmt_info)))\n     {\n       if (!vec_stmt_p)\n \treturn true;"}]}