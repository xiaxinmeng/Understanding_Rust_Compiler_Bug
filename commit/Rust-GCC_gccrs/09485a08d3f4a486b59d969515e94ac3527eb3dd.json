{"sha": "09485a08d3f4a486b59d969515e94ac3527eb3dd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDk0ODVhMDhkM2Y0YTQ4NmI1OWQ5Njk1MTVlOTRhYzM1MjdlYjNkZA==", "commit": {"author": {"name": "Sofiane Naci", "email": "sofiane.naci@arm.com", "date": "2013-06-18T12:45:31Z"}, "committer": {"name": "Sofiane Naci", "email": "sofiane@gcc.gnu.org", "date": "2013-06-18T12:45:31Z"}, "message": "arm.md (attribute \"insn\"): Move multiplication and division attributes to...\n\n\t* config/arm/arm.md (attribute \"insn\"): Move multiplication and division\n\tattributes to...\n\t(attribute \"type\"): ... here.  Remove mult.\n\t(attribute \"mul32\"): New attribute.\n\t(attribute \"mul64\"): Add umaal.\n\t(*arm_mulsi3): Update attributes.\n\t(*arm_mulsi3_v6): Likewise.\n\t(*thumb_mulsi3): Likewise.\n\t(*thumb_mulsi3_v6): Likewise.\n\t(*mulsi3_compare0): Likewise.\n\t(*mulsi3_compare0_v6): Likewise.\n\t(*mulsi_compare0_scratch): Likewise.\n\t(*mulsi_compare0_scratch_v6): Likewise.\n\t(*mulsi3addsi): Likewise.\n\t(*mulsi3addsi_v6): Likewise.\n\t(*mulsi3addsi_compare0): Likewise.\n\t(*mulsi3addsi_compare0_v6): Likewise.\n\t(*mulsi3addsi_compare0_scratch): Likewise.\n\t(*mulsi3addsi_compare0_scratch_v6): Likewise.\n\t(*mulsi3subsi): Likewise.\n\t(*mulsidi3adddi): Likewise.\n\t(*mulsi3addsi_v6): Likewise.\n\t(*mulsidi3adddi_v6): Likewise.\n\t(*mulsidi3_nov6): Likewise.\n\t(*mulsidi3_v6): Likewise.\n\t(*umulsidi3_nov6): Likewise.\n\t(*umulsidi3_v6): Likewise.\n\t(*umulsidi3adddi): Likewise.\n\t(*umulsidi3adddi_v6): Likewise.\n\t(*smulsi3_highpart_nov6): Likewise.\n\t(*smulsi3_highpart_v6): Likewise.\n\t(*umulsi3_highpart_nov6): Likewise.\n\t(*umulsi3_highpart_v6): Likewise.\n\t(mulhisi3): Likewise.\n\t(*mulhisi3tb): Likewise.\n\t(*mulhisi3bt): Likewise.\n\t(*mulhisi3tt): Likewise.\n\t(maddhisi4): Likewise.\n\t(*maddhisi4tb): Likewise.\n\t(*maddhisi4tt): Likewise.\n\t(maddhidi4): Likewise.\n\t(*maddhidi4tb): Likewise.\n\t(*maddhidi4tt): Likewise.\n\t(divsi3): Likewise.\n\t(udivsi3): Likewise.\n\t* config/arm/thumb2.md (thumb2_mulsi_short): Update attributes.\n\t(thumb2_mulsi_short_compare0): Likewise.\n\t(thumb2_mulsi_short_compare0_scratch): Likewise.\n\t* config/arm/arm1020e.md (1020mult1): Update attribute change.\n\t(1020mult2): Likewise.\n\t(1020mult3): Likewise.\n\t(1020mult4): Likewise.\n\t(1020mult5): Likewise.\n\t(1020mult6): Likewise.\n\t* config/arm/cortex-a15.md (cortex_a15_mult32): Update attribute change.\n\t(cortex_a15_mult64): Likewise.\n\t(cortex_a15_sdiv): Likewise.\n\t(cortex_a15_udiv): Likewise.\n\t* config/arm/arm1026ejs.md (mult1): Update attribute change.\n\t(mult2): Likewise.\n\t(mult3): Likewise.\n\t(mult4): Likewise.\n\t(mult5): Likewise.\n\t(mult6): Likewise.\n\t* config/arm/marvell-pj4.md (pj4_ir_mul): Update attribute change.\n\t(pj4_ir_div): Likewise.\n\t* config/arm/arm1136jfs.md (11_mult1): Update attribute change.\n\t(11_mult2): Likewise.\n\t(11_mult3): Likewise.\n\t(11_mult4): Likewise.\n\t(11_mult5): Likewise.\n\t(11_mult6): Likewise.\n\t(11_mult7): Likewise.\n\t* config/arm/cortex-a8.md (cortex_a8_mul): Update attribute change.\n\t(cortex_a8_mla): Likewise.\n\t(cortex_a8_mull): Likewise.\n\t(cortex_a8_smulwy): Likewise.\n\t(cortex_a8_smlald): Likewise.\n\t* config/arm/cortex-m4.md (cortex_m4_alu): Update attribute change.\n\t* config/arm/cortex-r4.md (cortex_r4_mul_4): Update attribute change.\n\t(cortex_r4_mul_3): Likewise.\n\t(cortex_r4_mla_4): Likewise.\n\t(cortex_r4_mla_3): Likewise.\n\t(cortex_r4_smlald): Likewise.\n\t(cortex_r4_mull): Likewise.\n\t(cortex_r4_sdiv): Likewise.\n\t(cortex_r4_udiv): Likewise.\n\t* config/arm/cortex-a7.md (cortex_a7_mul): Update attribute change.\n\t(cortex_a7_idiv): Likewise.\n\t* config/arm/arm926ejs.md (9_mult1): Update attribute change.\n\t(9_mult2): Likewise.\n\t(9_mult3): Likewise.\n\t(9_mult4): Likewise.\n\t(9_mult5): Likewise.\n\t(9_mult6): Likewise.\n\t* config/arm/cortex-a53.md (cortex_a53_mul): Update attribute change.\n\t(cortex_a53_sdiv): Likewise.\n\t(cortex_a53_udiv): Likewise.\n\t* config/arm/fa726te.md (726te_mult_op): Update attribute change.\n\t* config/arm/fmp626.md (mp626_mult1): Update attribute change.\n\t(mp626_mult2): Likewise.\n\t(mp626_mult3): Likewise.\n\t(mp626_mult4): Likewise.\n\t* config/arm/fa526.md (526_mult1): Update attribute change.\n\t(526_mult2): Likewise.\n\t* config/arm/arm-generic.md (mult): Update attribute change.\n\t(mult_ldsched_strongarm): Likewise.\n\t(mult_ldsched): Likewise.\n\t(multi_cycle): Likewise.\n\t* config/arm/cortex-a5.md (cortex_a5_mul): Update attribute change.\n\t* config/arm/fa606te.md (606te_mult1): Update attribute change.\n\t(606te_mult2): Likewise.\n\t(606te_mult3): Likewise.\n\t(606te_mult4): Likewise.\n\t* config/arm/cortex-a9.md (cortex_a9_mult16): Update attribute change.\n\t(cortex_a9_mac16): Likewise.\n\t(cortex_a9_multiply): Likewise.\n\t(cortex_a9_mac): Likewise.\n\t(cortex_a9_multiply_long): Likewise.\n\t* config/arm/fa626te.md (626te_mult1): Update attribute change.\n\t(626te_mult2): Likewise.\n\t(626te_mult3): Likewise.\n\t(626te_mult4): Likewise.\n\nFrom-SVN: r200167", "tree": {"sha": "b27b1b1f5c3b3588c78c93fff24490bbf1406235", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b27b1b1f5c3b3588c78c93fff24490bbf1406235"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/09485a08d3f4a486b59d969515e94ac3527eb3dd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/09485a08d3f4a486b59d969515e94ac3527eb3dd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/09485a08d3f4a486b59d969515e94ac3527eb3dd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/09485a08d3f4a486b59d969515e94ac3527eb3dd/comments", "author": null, "committer": null, "parents": [{"sha": "d5ac899c8711ce9b4dae6843fcec103f3f3fa8a2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d5ac899c8711ce9b4dae6843fcec103f3f3fa8a2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d5ac899c8711ce9b4dae6843fcec103f3f3fa8a2"}], "stats": {"total": 445, "additions": 312, "deletions": 133}, "files": [{"sha": "e3284925a88a1684cea45d679e3eff9a015792d9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 126, "deletions": 0, "changes": 126, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/09485a08d3f4a486b59d969515e94ac3527eb3dd/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/09485a08d3f4a486b59d969515e94ac3527eb3dd/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=09485a08d3f4a486b59d969515e94ac3527eb3dd", "patch": "@@ -1,3 +1,129 @@\n+2013-06-18  Sofiane Naci  <sofiane.naci@arm.com>\n+\n+\t* config/arm/arm.md (attribute \"insn\"): Move multiplication and division\n+\tattributes to...\n+\t(attribute \"type\"): ... here.  Remove mult.\n+\t(attribute \"mul32\"): New attribute.\n+\t(attribute \"mul64\"): Add umaal.\n+\t(*arm_mulsi3): Update attributes.\n+\t(*arm_mulsi3_v6): Likewise.\n+\t(*thumb_mulsi3): Likewise.\n+\t(*thumb_mulsi3_v6): Likewise.\n+\t(*mulsi3_compare0): Likewise.\n+\t(*mulsi3_compare0_v6): Likewise.\n+\t(*mulsi_compare0_scratch): Likewise.\n+\t(*mulsi_compare0_scratch_v6): Likewise.\n+\t(*mulsi3addsi): Likewise.\n+\t(*mulsi3addsi_v6): Likewise.\n+\t(*mulsi3addsi_compare0): Likewise.\n+\t(*mulsi3addsi_compare0_v6): Likewise.\n+\t(*mulsi3addsi_compare0_scratch): Likewise.\n+\t(*mulsi3addsi_compare0_scratch_v6): Likewise.\n+\t(*mulsi3subsi): Likewise.\n+\t(*mulsidi3adddi): Likewise.\n+\t(*mulsi3addsi_v6): Likewise.\n+\t(*mulsidi3adddi_v6): Likewise.\n+\t(*mulsidi3_nov6): Likewise.\n+\t(*mulsidi3_v6): Likewise.\n+\t(*umulsidi3_nov6): Likewise.\n+\t(*umulsidi3_v6): Likewise.\n+\t(*umulsidi3adddi): Likewise.\n+\t(*umulsidi3adddi_v6): Likewise.\n+\t(*smulsi3_highpart_nov6): Likewise.\n+\t(*smulsi3_highpart_v6): Likewise.\n+\t(*umulsi3_highpart_nov6): Likewise.\n+\t(*umulsi3_highpart_v6): Likewise.\n+\t(mulhisi3): Likewise.\n+\t(*mulhisi3tb): Likewise.\n+\t(*mulhisi3bt): Likewise.\n+\t(*mulhisi3tt): Likewise.\n+\t(maddhisi4): Likewise.\n+\t(*maddhisi4tb): Likewise.\n+\t(*maddhisi4tt): Likewise.\n+\t(maddhidi4): Likewise.\n+\t(*maddhidi4tb): Likewise.\n+\t(*maddhidi4tt): Likewise.\n+\t(divsi3): Likewise.\n+\t(udivsi3): Likewise.\n+\t* config/arm/thumb2.md (thumb2_mulsi_short): Update attributes.\n+\t(thumb2_mulsi_short_compare0): Likewise.\n+\t(thumb2_mulsi_short_compare0_scratch): Likewise.\n+\t* config/arm/arm1020e.md (1020mult1): Update attribute change.\n+\t(1020mult2): Likewise.\n+\t(1020mult3): Likewise.\n+\t(1020mult4): Likewise.\n+\t(1020mult5): Likewise.\n+\t(1020mult6): Likewise.\n+\t* config/arm/cortex-a15.md (cortex_a15_mult32): Update attribute change.\n+\t(cortex_a15_mult64): Likewise.\n+\t(cortex_a15_sdiv): Likewise.\n+\t(cortex_a15_udiv): Likewise.\n+\t* config/arm/arm1026ejs.md (mult1): Update attribute change.\n+\t(mult2): Likewise.\n+\t(mult3): Likewise.\n+\t(mult4): Likewise.\n+\t(mult5): Likewise.\n+\t(mult6): Likewise.\n+\t* config/arm/marvell-pj4.md (pj4_ir_mul): Update attribute change.\n+\t(pj4_ir_div): Likewise.\n+\t* config/arm/arm1136jfs.md (11_mult1): Update attribute change.\n+\t(11_mult2): Likewise.\n+\t(11_mult3): Likewise.\n+\t(11_mult4): Likewise.\n+\t(11_mult5): Likewise.\n+\t(11_mult6): Likewise.\n+\t(11_mult7): Likewise.\n+\t* config/arm/cortex-a8.md (cortex_a8_mul): Update attribute change.\n+\t(cortex_a8_mla): Likewise.\n+\t(cortex_a8_mull): Likewise.\n+\t(cortex_a8_smulwy): Likewise.\n+\t(cortex_a8_smlald): Likewise.\n+\t* config/arm/cortex-m4.md (cortex_m4_alu): Update attribute change.\n+\t* config/arm/cortex-r4.md (cortex_r4_mul_4): Update attribute change.\n+\t(cortex_r4_mul_3): Likewise.\n+\t(cortex_r4_mla_4): Likewise.\n+\t(cortex_r4_mla_3): Likewise.\n+\t(cortex_r4_smlald): Likewise.\n+\t(cortex_r4_mull): Likewise.\n+\t(cortex_r4_sdiv): Likewise.\n+\t(cortex_r4_udiv): Likewise.\n+\t* config/arm/cortex-a7.md (cortex_a7_mul): Update attribute change.\n+\t(cortex_a7_idiv): Likewise.\n+\t* config/arm/arm926ejs.md (9_mult1): Update attribute change.\n+\t(9_mult2): Likewise.\n+\t(9_mult3): Likewise.\n+\t(9_mult4): Likewise.\n+\t(9_mult5): Likewise.\n+\t(9_mult6): Likewise.\n+\t* config/arm/cortex-a53.md (cortex_a53_mul): Update attribute change.\n+\t(cortex_a53_sdiv): Likewise.\n+\t(cortex_a53_udiv): Likewise.\n+\t* config/arm/fa726te.md (726te_mult_op): Update attribute change.\n+\t* config/arm/fmp626.md (mp626_mult1): Update attribute change.\n+\t(mp626_mult2): Likewise.\n+\t(mp626_mult3): Likewise.\n+\t(mp626_mult4): Likewise.\n+\t* config/arm/fa526.md (526_mult1): Update attribute change.\n+\t(526_mult2): Likewise.\n+\t* config/arm/arm-generic.md (mult): Update attribute change.\n+\t(mult_ldsched_strongarm): Likewise.\n+\t(mult_ldsched): Likewise.\n+\t(multi_cycle): Likewise.\n+\t* config/arm/cortex-a5.md (cortex_a5_mul): Update attribute change.\n+\t* config/arm/fa606te.md (606te_mult1): Update attribute change.\n+\t(606te_mult2): Likewise.\n+\t(606te_mult3): Likewise.\n+\t(606te_mult4): Likewise.\n+\t* config/arm/cortex-a9.md (cortex_a9_mult16): Update attribute change.\n+\t(cortex_a9_mac16): Likewise.\n+\t(cortex_a9_multiply): Likewise.\n+\t(cortex_a9_mac): Likewise.\n+\t(cortex_a9_multiply_long): Likewise.\n+\t* config/arm/fa626te.md (626te_mult1): Update attribute change.\n+\t(626te_mult2): Likewise.\n+\t(626te_mult3): Likewise.\n+\t(626te_mult4): Likewise.\n+\n 2013-06-18  Richard Biener  <rguenther@suse.de>\n \n \tPR lto/57334"}, {"sha": "8a3335055d1365da3113c6763f7aeab3fd450ceb", "filename": "gcc/config/arm/arm-generic.md", "status": "modified", "additions": 11, "deletions": 4, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/09485a08d3f4a486b59d969515e94ac3527eb3dd/gcc%2Fconfig%2Farm%2Farm-generic.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/09485a08d3f4a486b59d969515e94ac3527eb3dd/gcc%2Fconfig%2Farm%2Farm-generic.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm-generic.md?ref=09485a08d3f4a486b59d969515e94ac3527eb3dd", "patch": "@@ -114,29 +114,36 @@\n \n (define_insn_reservation \"mult\" 16\n   (and (eq_attr \"generic_sched\" \"yes\")\n-       (and (eq_attr \"ldsched\" \"no\") (eq_attr \"type\" \"mult\")))\n+       (and (eq_attr \"ldsched\" \"no\")\n+\t    (ior (eq_attr \"mul32\" \"yes\")\n+\t\t (eq_attr \"mul64\" \"yes\"))))\n   \"core*16\")\n \n (define_insn_reservation \"mult_ldsched_strongarm\" 3\n   (and (eq_attr \"generic_sched\" \"yes\")\n        (and (eq_attr \"ldsched\" \"yes\") \n \t    (and (eq_attr \"tune\"\n \t\t  \"strongarm,strongarm110,strongarm1100,strongarm1110\")\n-\t         (eq_attr \"type\" \"mult\"))))\n+\t\t (ior (eq_attr \"mul32\" \"yes\")\n+\t\t      (eq_attr \"mul64\" \"yes\")))))\n   \"core*2\")\n \n (define_insn_reservation \"mult_ldsched\" 4\n   (and (eq_attr \"generic_sched\" \"yes\")\n        (and (eq_attr \"ldsched\" \"yes\") \n \t    (and (eq_attr \"tune\"\n \t\t  \"!strongarm,strongarm110,strongarm1100,strongarm1110\")\n-\t         (eq_attr \"type\" \"mult\"))))\n+\t         (ior (eq_attr \"mul32\" \"yes\")\n+\t\t      (eq_attr \"mul64\" \"yes\")))))\n   \"core*4\")\n \n (define_insn_reservation \"multi_cycle\" 32\n   (and (eq_attr \"generic_sched\" \"yes\")\n        (and (eq_attr \"core_cycles\" \"multi\")\n-            (eq_attr \"type\" \"!mult,load_byte,load1,load2,load3,load4,store1,store2,store3,store4\")))\n+            (and (eq_attr \"type\" \"!load_byte,load1,load2,load3,load4,\\\n+                                  store1,store2,store3,store4\")\n+\t\t (not (ior (eq_attr \"mul32\" \"yes\")\n+\t\t\t   (eq_attr \"mul64\" \"yes\"))))))\n   \"core*32\")\n \n (define_insn_reservation \"single_cycle\" 1"}, {"sha": "048a154e73cc0c913cb63102ef2a2486d040fba9", "filename": "gcc/config/arm/arm.md", "status": "modified", "additions": 87, "deletions": 50, "changes": 137, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/09485a08d3f4a486b59d969515e94ac3527eb3dd/gcc%2Fconfig%2Farm%2Farm.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/09485a08d3f4a486b59d969515e94ac3527eb3dd/gcc%2Fconfig%2Farm%2Farm.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.md?ref=09485a08d3f4a486b59d969515e94ac3527eb3dd", "patch": "@@ -250,7 +250,7 @@\n ;; scheduling information.\n \n (define_attr \"insn\"\n-        \"mov,mvn,smulxy,smlaxy,smlalxy,smulwy,smlawx,mul,muls,mla,mlas,umull,umulls,umlal,umlals,smull,smulls,smlal,smlals,smlawy,smuad,smuadx,smlad,smladx,smusd,smusdx,smlsd,smlsdx,smmul,smmulr,smmla,umaal,smlald,smlsld,clz,mrs,msr,xtab,sdiv,udiv,sat,other\"\n+        \"mov,mvn,clz,mrs,msr,xtab,sat,other\"\n         (const_string \"other\"))\n \n ; TYPE attribute is used to detect floating point instructions which, if\n@@ -274,7 +274,6 @@\n ;\t\tregs, but has a source operand shifted by a constant\n ; alu_shift_reg\tany data instruction that doesn't hit memory or fp\n ;\t\tregs, but has a source operand shifted by a register value\n-; mult\t\ta multiply instruction\n ; block\t\tblockage insn, this blocks all functional units\n ; float\t\ta floating point arithmetic operation (subject to expansion)\n ; fdivd\t\tDFmode floating point division\n@@ -304,7 +303,6 @@\n   simple_alu_shift,\\\n   alu_shift,\\\n   alu_shift_reg,\\\n-  mult,\\\n   block,\\\n   float,\\\n   fdivd,\\\n@@ -348,18 +346,57 @@\n   ffarithd,\\\n   fcmps,\\\n   fcmpd,\\\n-  fcpys\"\n- (if_then_else \n-    (eq_attr \"insn\" \"smulxy,smlaxy,smlalxy,smulwy,smlawx,mul,muls,mla,mlas,\\\n-\t     \t     umull,umulls,umlal,umlals,smull,smulls,smlal,smlals\")\n-    (const_string \"mult\")\n-    (const_string \"alu_reg\")))\n+  fcpys,\\\n+  smulxy,\\\n+  smlaxy,\\\n+  smlalxy,\\\n+  smulwy,\\\n+  smlawx,\\\n+  mul,\\\n+  muls,\\\n+  mla,\\\n+  mlas,\\\n+  umull,\\\n+  umulls,\\\n+  umlal,\\\n+  umlals,\\\n+  smull,\\\n+  smulls,\\\n+  smlal,\\\n+  smlals,\\\n+  smlawy,\\\n+  smuad,\\\n+  smuadx,\\\n+  smlad,\\\n+  smladx,\\\n+  smusd,\\\n+  smusdx,\\\n+  smlsd,\\\n+  smlsdx,\\\n+  smmul,\\\n+  smmulr,\\\n+  smmla,\\\n+  umaal,\\\n+  smlald,\\\n+  smlsld,\\\n+  sdiv,\\\n+  udiv\"\n+  (const_string \"alu_reg\"))\n+\n+; Is this an (integer side) multiply with a 32-bit (or smaller) result?\n+(define_attr \"mul32\" \"no,yes\"\n+  (if_then_else\n+    (eq_attr \"type\"\n+     \"smulxy,smlaxy,smulwy,smlawx,mul,muls,mla,mlas,smlawy,smuad,smuadx,\\\n+      smlad,smladx,smusd,smusdx,smlsd,smlsdx,smmul,smmulr,smmla,smlald,smlsld\")\n+    (const_string \"yes\")\n+    (const_string \"no\")))\n \n ; Is this an (integer side) multiply with a 64-bit result?\n (define_attr \"mul64\" \"no,yes\"\n   (if_then_else\n-    (eq_attr \"insn\"\n-     \"smlalxy,umull,umulls,umlal,umlals,smull,smulls,smlal,smlals\")\n+    (eq_attr \"type\"\n+     \"smlalxy,umull,umulls,umaal,umlal,umlals,smull,smulls,smlal,smlals\")\n     (const_string \"yes\")\n     (const_string \"no\")))\n \n@@ -1484,7 +1521,7 @@\n \t\t (match_operand:SI 1 \"s_register_operand\" \"%0,r\")))]\n   \"TARGET_32BIT && !arm_arch6\"\n   \"mul%?\\\\t%0, %2, %1\"\n-  [(set_attr \"insn\" \"mul\")\n+  [(set_attr \"type\" \"mul\")\n    (set_attr \"predicable\" \"yes\")]\n )\n \n@@ -1494,7 +1531,7 @@\n \t\t (match_operand:SI 2 \"s_register_operand\" \"r\")))]\n   \"TARGET_32BIT && arm_arch6\"\n   \"mul%?\\\\t%0, %1, %2\"\n-  [(set_attr \"insn\" \"mul\")\n+  [(set_attr \"type\" \"mul\")\n    (set_attr \"predicable\" \"yes\")]\n )\n \n@@ -1515,7 +1552,7 @@\n     return \\\"mul\\\\t%0, %2\\\";\n   \"\n   [(set_attr \"length\" \"4,4,2\")\n-   (set_attr \"insn\" \"mul\")]\n+   (set_attr \"type\" \"muls\")]\n )\n \n (define_insn \"*thumb_mulsi3_v6\"\n@@ -1528,7 +1565,7 @@\n    mul\\\\t%0, %1\n    mul\\\\t%0, %1\"\n   [(set_attr \"length\" \"2\")\n-   (set_attr \"insn\" \"mul\")]\n+   (set_attr \"type\" \"muls\")]\n )\n \n (define_insn \"*mulsi3_compare0\"\n@@ -1542,7 +1579,7 @@\n   \"TARGET_ARM && !arm_arch6\"\n   \"mul%.\\\\t%0, %2, %1\"\n   [(set_attr \"conds\" \"set\")\n-   (set_attr \"insn\" \"muls\")]\n+   (set_attr \"type\" \"muls\")]\n )\n \n (define_insn \"*mulsi3_compare0_v6\"\n@@ -1556,7 +1593,7 @@\n   \"TARGET_ARM && arm_arch6 && optimize_size\"\n   \"mul%.\\\\t%0, %2, %1\"\n   [(set_attr \"conds\" \"set\")\n-   (set_attr \"insn\" \"muls\")]\n+   (set_attr \"type\" \"muls\")]\n )\n \n (define_insn \"*mulsi_compare0_scratch\"\n@@ -1569,7 +1606,7 @@\n   \"TARGET_ARM && !arm_arch6\"\n   \"mul%.\\\\t%0, %2, %1\"\n   [(set_attr \"conds\" \"set\")\n-   (set_attr \"insn\" \"muls\")]\n+   (set_attr \"type\" \"muls\")]\n )\n \n (define_insn \"*mulsi_compare0_scratch_v6\"\n@@ -1582,7 +1619,7 @@\n   \"TARGET_ARM && arm_arch6 && optimize_size\"\n   \"mul%.\\\\t%0, %2, %1\"\n   [(set_attr \"conds\" \"set\")\n-   (set_attr \"insn\" \"muls\")]\n+   (set_attr \"type\" \"muls\")]\n )\n \n ;; Unnamed templates to match MLA instruction.\n@@ -1595,7 +1632,7 @@\n \t  (match_operand:SI 3 \"s_register_operand\" \"r,r,0,0\")))]\n   \"TARGET_32BIT && !arm_arch6\"\n   \"mla%?\\\\t%0, %2, %1, %3\"\n-  [(set_attr \"insn\" \"mla\")\n+  [(set_attr \"type\" \"mla\")\n    (set_attr \"predicable\" \"yes\")]\n )\n \n@@ -1607,7 +1644,7 @@\n \t  (match_operand:SI 3 \"s_register_operand\" \"r\")))]\n   \"TARGET_32BIT && arm_arch6\"\n   \"mla%?\\\\t%0, %2, %1, %3\"\n-  [(set_attr \"insn\" \"mla\")\n+  [(set_attr \"type\" \"mla\")\n    (set_attr \"predicable\" \"yes\")]\n )\n \n@@ -1625,7 +1662,7 @@\n   \"TARGET_ARM && arm_arch6\"\n   \"mla%.\\\\t%0, %2, %1, %3\"\n   [(set_attr \"conds\" \"set\")\n-   (set_attr \"insn\" \"mlas\")]\n+   (set_attr \"type\" \"mlas\")]\n )\n \n (define_insn \"*mulsi3addsi_compare0_v6\"\n@@ -1642,7 +1679,7 @@\n   \"TARGET_ARM && arm_arch6 && optimize_size\"\n   \"mla%.\\\\t%0, %2, %1, %3\"\n   [(set_attr \"conds\" \"set\")\n-   (set_attr \"insn\" \"mlas\")]\n+   (set_attr \"type\" \"mlas\")]\n )\n \n (define_insn \"*mulsi3addsi_compare0_scratch\"\n@@ -1657,7 +1694,7 @@\n   \"TARGET_ARM && !arm_arch6\"\n   \"mla%.\\\\t%0, %2, %1, %3\"\n   [(set_attr \"conds\" \"set\")\n-   (set_attr \"insn\" \"mlas\")]\n+   (set_attr \"type\" \"mlas\")]\n )\n \n (define_insn \"*mulsi3addsi_compare0_scratch_v6\"\n@@ -1672,7 +1709,7 @@\n   \"TARGET_ARM && arm_arch6 && optimize_size\"\n   \"mla%.\\\\t%0, %2, %1, %3\"\n   [(set_attr \"conds\" \"set\")\n-   (set_attr \"insn\" \"mlas\")]\n+   (set_attr \"type\" \"mlas\")]\n )\n \n (define_insn \"*mulsi3subsi\"\n@@ -1683,7 +1720,7 @@\n \t\t   (match_operand:SI 1 \"s_register_operand\" \"r\"))))]\n   \"TARGET_32BIT && arm_arch_thumb2\"\n   \"mls%?\\\\t%0, %2, %1, %3\"\n-  [(set_attr \"insn\" \"mla\")\n+  [(set_attr \"type\" \"mla\")\n    (set_attr \"predicable\" \"yes\")]\n )\n \n@@ -1706,7 +1743,7 @@\n \t (match_operand:DI 1 \"s_register_operand\" \"0\")))]\n   \"TARGET_32BIT && arm_arch3m && !arm_arch6\"\n   \"smlal%?\\\\t%Q0, %R0, %3, %2\"\n-  [(set_attr \"insn\" \"smlal\")\n+  [(set_attr \"type\" \"smlal\")\n    (set_attr \"predicable\" \"yes\")]\n )\n \n@@ -1719,7 +1756,7 @@\n \t (match_operand:DI 1 \"s_register_operand\" \"0\")))]\n   \"TARGET_32BIT && arm_arch6\"\n   \"smlal%?\\\\t%Q0, %R0, %3, %2\"\n-  [(set_attr \"insn\" \"smlal\")\n+  [(set_attr \"type\" \"smlal\")\n    (set_attr \"predicable\" \"yes\")]\n )\n \n@@ -1745,7 +1782,7 @@\n \t (sign_extend:DI (match_operand:SI 2 \"s_register_operand\" \"r\"))))]\n   \"TARGET_32BIT && arm_arch3m && !arm_arch6\"\n   \"smull%?\\\\t%Q0, %R0, %1, %2\"\n-  [(set_attr \"insn\" \"smull\")\n+  [(set_attr \"type\" \"smull\")\n    (set_attr \"predicable\" \"yes\")]\n )\n \n@@ -1756,7 +1793,7 @@\n \t (sign_extend:DI (match_operand:SI 2 \"s_register_operand\" \"r\"))))]\n   \"TARGET_32BIT && arm_arch6\"\n   \"smull%?\\\\t%Q0, %R0, %1, %2\"\n-  [(set_attr \"insn\" \"smull\")\n+  [(set_attr \"type\" \"smull\")\n    (set_attr \"predicable\" \"yes\")]\n )\n \n@@ -1776,7 +1813,7 @@\n \t (zero_extend:DI (match_operand:SI 2 \"s_register_operand\" \"r\"))))]\n   \"TARGET_32BIT && arm_arch3m && !arm_arch6\"\n   \"umull%?\\\\t%Q0, %R0, %1, %2\"\n-  [(set_attr \"insn\" \"umull\")\n+  [(set_attr \"type\" \"umull\")\n    (set_attr \"predicable\" \"yes\")]\n )\n \n@@ -1787,7 +1824,7 @@\n \t (zero_extend:DI (match_operand:SI 2 \"s_register_operand\" \"r\"))))]\n   \"TARGET_32BIT && arm_arch6\"\n   \"umull%?\\\\t%Q0, %R0, %1, %2\"\n-  [(set_attr \"insn\" \"umull\")\n+  [(set_attr \"type\" \"umull\")\n    (set_attr \"predicable\" \"yes\")]\n )\n \n@@ -1810,7 +1847,7 @@\n \t (match_operand:DI 1 \"s_register_operand\" \"0\")))]\n   \"TARGET_32BIT && arm_arch3m && !arm_arch6\"\n   \"umlal%?\\\\t%Q0, %R0, %3, %2\"\n-  [(set_attr \"insn\" \"umlal\")\n+  [(set_attr \"type\" \"umlal\")\n    (set_attr \"predicable\" \"yes\")]\n )\n \n@@ -1823,7 +1860,7 @@\n \t (match_operand:DI 1 \"s_register_operand\" \"0\")))]\n   \"TARGET_32BIT && arm_arch6\"\n   \"umlal%?\\\\t%Q0, %R0, %3, %2\"\n-  [(set_attr \"insn\" \"umlal\")\n+  [(set_attr \"type\" \"umlal\")\n    (set_attr \"predicable\" \"yes\")]\n )\n \n@@ -1852,7 +1889,7 @@\n    (clobber (match_scratch:SI 3 \"=&r,&r\"))]\n   \"TARGET_32BIT && arm_arch3m && !arm_arch6\"\n   \"smull%?\\\\t%3, %0, %2, %1\"\n-  [(set_attr \"insn\" \"smull\")\n+  [(set_attr \"type\" \"smull\")\n    (set_attr \"predicable\" \"yes\")]\n )\n \n@@ -1867,7 +1904,7 @@\n    (clobber (match_scratch:SI 3 \"=r\"))]\n   \"TARGET_32BIT && arm_arch6\"\n   \"smull%?\\\\t%3, %0, %2, %1\"\n-  [(set_attr \"insn\" \"smull\")\n+  [(set_attr \"type\" \"smull\")\n    (set_attr \"predicable\" \"yes\")]\n )\n \n@@ -1896,7 +1933,7 @@\n    (clobber (match_scratch:SI 3 \"=&r,&r\"))]\n   \"TARGET_32BIT && arm_arch3m && !arm_arch6\"\n   \"umull%?\\\\t%3, %0, %2, %1\"\n-  [(set_attr \"insn\" \"umull\")\n+  [(set_attr \"type\" \"umull\")\n    (set_attr \"predicable\" \"yes\")]\n )\n \n@@ -1911,7 +1948,7 @@\n    (clobber (match_scratch:SI 3 \"=r\"))]\n   \"TARGET_32BIT && arm_arch6\"\n   \"umull%?\\\\t%3, %0, %2, %1\"\n-  [(set_attr \"insn\" \"umull\")\n+  [(set_attr \"type\" \"umull\")\n    (set_attr \"predicable\" \"yes\")]\n )\n \n@@ -1923,7 +1960,7 @@\n \t\t  (match_operand:HI 2 \"s_register_operand\" \"r\"))))]\n   \"TARGET_DSP_MULTIPLY\"\n   \"smulbb%?\\\\t%0, %1, %2\"\n-  [(set_attr \"insn\" \"smulxy\")\n+  [(set_attr \"type\" \"smulxy\")\n    (set_attr \"predicable\" \"yes\")]\n )\n \n@@ -1936,7 +1973,7 @@\n \t\t  (match_operand:HI 2 \"s_register_operand\" \"r\"))))]\n   \"TARGET_DSP_MULTIPLY\"\n   \"smultb%?\\\\t%0, %1, %2\"\n-  [(set_attr \"insn\" \"smulxy\")\n+  [(set_attr \"type\" \"smulxy\")\n    (set_attr \"predicable\" \"yes\")]\n )\n \n@@ -1949,7 +1986,7 @@\n \t\t  (const_int 16))))]\n   \"TARGET_DSP_MULTIPLY\"\n   \"smulbt%?\\\\t%0, %1, %2\"\n-  [(set_attr \"insn\" \"smulxy\")\n+  [(set_attr \"type\" \"smulxy\")\n    (set_attr \"predicable\" \"yes\")]\n )\n \n@@ -1963,7 +2000,7 @@\n \t\t  (const_int 16))))]\n   \"TARGET_DSP_MULTIPLY\"\n   \"smultt%?\\\\t%0, %1, %2\"\n-  [(set_attr \"insn\" \"smulxy\")\n+  [(set_attr \"type\" \"smulxy\")\n    (set_attr \"predicable\" \"yes\")]\n )\n \n@@ -1976,7 +2013,7 @@\n \t\t (match_operand:SI 3 \"s_register_operand\" \"r\")))]\n   \"TARGET_DSP_MULTIPLY\"\n   \"smlabb%?\\\\t%0, %1, %2, %3\"\n-  [(set_attr \"insn\" \"smlaxy\")\n+  [(set_attr \"type\" \"smlaxy\")\n    (set_attr \"predicable\" \"yes\")]\n )\n \n@@ -1991,7 +2028,7 @@\n \t\t (match_operand:SI 3 \"s_register_operand\" \"r\")))]\n   \"TARGET_DSP_MULTIPLY\"\n   \"smlatb%?\\\\t%0, %1, %2, %3\"\n-  [(set_attr \"insn\" \"smlaxy\")\n+  [(set_attr \"type\" \"smlaxy\")\n    (set_attr \"predicable\" \"yes\")]\n )\n \n@@ -2006,7 +2043,7 @@\n \t\t (match_operand:SI 3 \"s_register_operand\" \"r\")))]\n   \"TARGET_DSP_MULTIPLY\"\n   \"smlatt%?\\\\t%0, %1, %2, %3\"\n-  [(set_attr \"insn\" \"smlaxy\")\n+  [(set_attr \"type\" \"smlaxy\")\n    (set_attr \"predicable\" \"yes\")]\n )\n \n@@ -2020,7 +2057,7 @@\n \t  (match_operand:DI 3 \"s_register_operand\" \"0\")))]\n   \"TARGET_DSP_MULTIPLY\"\n   \"smlalbb%?\\\\t%Q0, %R0, %1, %2\"\n-  [(set_attr \"insn\" \"smlalxy\")\n+  [(set_attr \"type\" \"smlalxy\")\n    (set_attr \"predicable\" \"yes\")])\n \n ;; Note: there is no maddhidi4ibt because this one is canonical form\n@@ -2036,7 +2073,7 @@\n \t  (match_operand:DI 3 \"s_register_operand\" \"0\")))]\n   \"TARGET_DSP_MULTIPLY\"\n   \"smlaltb%?\\\\t%Q0, %R0, %1, %2\"\n-  [(set_attr \"insn\" \"smlalxy\")\n+  [(set_attr \"type\" \"smlalxy\")\n    (set_attr \"predicable\" \"yes\")])\n \n (define_insn \"*maddhidi4tt\"\n@@ -2053,7 +2090,7 @@\n \t  (match_operand:DI 3 \"s_register_operand\" \"0\")))]\n   \"TARGET_DSP_MULTIPLY\"\n   \"smlaltt%?\\\\t%Q0, %R0, %1, %2\"\n-  [(set_attr \"insn\" \"smlalxy\")\n+  [(set_attr \"type\" \"smlalxy\")\n    (set_attr \"predicable\" \"yes\")])\n \n (define_expand \"mulsf3\"\n@@ -4584,7 +4621,7 @@\n   \"TARGET_IDIV\"\n   \"sdiv%?\\t%0, %1, %2\"\n   [(set_attr \"predicable\" \"yes\")\n-   (set_attr \"insn\" \"sdiv\")]\n+   (set_attr \"type\" \"sdiv\")]\n )\n \n (define_insn \"udivsi3\"\n@@ -4594,7 +4631,7 @@\n   \"TARGET_IDIV\"\n   \"udiv%?\\t%0, %1, %2\"\n   [(set_attr \"predicable\" \"yes\")\n-   (set_attr \"insn\" \"udiv\")]\n+   (set_attr \"type\" \"udiv\")]\n )\n \n \f"}, {"sha": "94e8c35f8390a90be42ee22f387fe65dcebedaca", "filename": "gcc/config/arm/arm1020e.md", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/09485a08d3f4a486b59d969515e94ac3527eb3dd/gcc%2Fconfig%2Farm%2Farm1020e.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/09485a08d3f4a486b59d969515e94ac3527eb3dd/gcc%2Fconfig%2Farm%2Farm1020e.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm1020e.md?ref=09485a08d3f4a486b59d969515e94ac3527eb3dd", "patch": "@@ -96,31 +96,31 @@\n ;; until after the memory stage.\n (define_insn_reservation \"1020mult1\" 2\n  (and (eq_attr \"tune\" \"arm1020e,arm1022e\")\n-      (eq_attr \"insn\" \"smulxy,smulwy\"))\n+      (eq_attr \"type\" \"smulxy,smulwy\"))\n  \"1020a_e,1020a_m,1020a_w\")\n \n ;; The \"smlaxy\" and \"smlawx\" instructions require two iterations through\n ;; the execute stage; the result is available immediately following\n ;; the execute stage.\n (define_insn_reservation \"1020mult2\" 2\n  (and (eq_attr \"tune\" \"arm1020e,arm1022e\")\n-      (eq_attr \"insn\" \"smlaxy,smlalxy,smlawx\"))\n+      (eq_attr \"type\" \"smlaxy,smlalxy,smlawx\"))\n  \"1020a_e*2,1020a_m,1020a_w\")\n \n ;; The \"smlalxy\", \"mul\", and \"mla\" instructions require two iterations\n ;; through the execute stage; the result is not available until after\n ;; the memory stage.\n (define_insn_reservation \"1020mult3\" 3\n  (and (eq_attr \"tune\" \"arm1020e,arm1022e\")\n-      (eq_attr \"insn\" \"smlalxy,mul,mla\"))\n+      (eq_attr \"type\" \"smlalxy,mul,mla\"))\n  \"1020a_e*2,1020a_m,1020a_w\")\n \n ;; The \"muls\" and \"mlas\" instructions loop in the execute stage for\n ;; four iterations in order to set the flags.  The value result is\n ;; available after three iterations.\n (define_insn_reservation \"1020mult4\" 3\n  (and (eq_attr \"tune\" \"arm1020e,arm1022e\")\n-      (eq_attr \"insn\" \"muls,mlas\"))\n+      (eq_attr \"type\" \"muls,mlas\"))\n  \"1020a_e*4,1020a_m,1020a_w\")\n \n ;; Long multiply instructions that produce two registers of\n@@ -135,15 +135,15 @@\n ;; available after the memory cycle.\n (define_insn_reservation \"1020mult5\" 4\n  (and (eq_attr \"tune\" \"arm1020e,arm1022e\")\n-      (eq_attr \"insn\" \"umull,umlal,smull,smlal\"))\n+      (eq_attr \"type\" \"umull,umlal,smull,smlal\"))\n  \"1020a_e*3,1020a_m,1020a_w\")\n \n ;; The \"umulls\", \"umlals\", \"smulls\", and \"smlals\" instructions loop in\n ;; the execute stage for five iterations in order to set the flags.\n ;; The value result is available after four iterations.\n (define_insn_reservation \"1020mult6\" 4\n  (and (eq_attr \"tune\" \"arm1020e,arm1022e\")\n-      (eq_attr \"insn\" \"umulls,umlals,smulls,smlals\"))\n+      (eq_attr \"type\" \"umulls,umlals,smulls,smlals\"))\n  \"1020a_e*5,1020a_m,1020a_w\")\n \n ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}, {"sha": "67b985ce68ebbfbe8a27ab31341fdb259d36f90c", "filename": "gcc/config/arm/arm1026ejs.md", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/09485a08d3f4a486b59d969515e94ac3527eb3dd/gcc%2Fconfig%2Farm%2Farm1026ejs.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/09485a08d3f4a486b59d969515e94ac3527eb3dd/gcc%2Fconfig%2Farm%2Farm1026ejs.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm1026ejs.md?ref=09485a08d3f4a486b59d969515e94ac3527eb3dd", "patch": "@@ -96,31 +96,31 @@\n ;; until after the memory stage.\n (define_insn_reservation \"mult1\" 2\n  (and (eq_attr \"tune\" \"arm1026ejs\")\n-      (eq_attr \"insn\" \"smulxy,smulwy\"))\n+      (eq_attr \"type\" \"smulxy,smulwy\"))\n  \"a_e,a_m,a_w\")\n \n ;; The \"smlaxy\" and \"smlawx\" instructions require two iterations through\n ;; the execute stage; the result is available immediately following\n ;; the execute stage.\n (define_insn_reservation \"mult2\" 2\n  (and (eq_attr \"tune\" \"arm1026ejs\")\n-      (eq_attr \"insn\" \"smlaxy,smlalxy,smlawx\"))\n+      (eq_attr \"type\" \"smlaxy,smlalxy,smlawx\"))\n  \"a_e*2,a_m,a_w\")\n \n ;; The \"smlalxy\", \"mul\", and \"mla\" instructions require two iterations\n ;; through the execute stage; the result is not available until after\n ;; the memory stage.\n (define_insn_reservation \"mult3\" 3\n  (and (eq_attr \"tune\" \"arm1026ejs\")\n-      (eq_attr \"insn\" \"smlalxy,mul,mla\"))\n+      (eq_attr \"type\" \"smlalxy,mul,mla\"))\n  \"a_e*2,a_m,a_w\")\n \n ;; The \"muls\" and \"mlas\" instructions loop in the execute stage for\n ;; four iterations in order to set the flags.  The value result is\n ;; available after three iterations.\n (define_insn_reservation \"mult4\" 3\n  (and (eq_attr \"tune\" \"arm1026ejs\")\n-      (eq_attr \"insn\" \"muls,mlas\"))\n+      (eq_attr \"type\" \"muls,mlas\"))\n  \"a_e*4,a_m,a_w\")\n \n ;; Long multiply instructions that produce two registers of\n@@ -135,15 +135,15 @@\n ;; available after the memory cycle.\n (define_insn_reservation \"mult5\" 4\n  (and (eq_attr \"tune\" \"arm1026ejs\")\n-      (eq_attr \"insn\" \"umull,umlal,smull,smlal\"))\n+      (eq_attr \"type\" \"umull,umlal,smull,smlal\"))\n  \"a_e*3,a_m,a_w\")\n \n ;; The \"umulls\", \"umlals\", \"smulls\", and \"smlals\" instructions loop in\n ;; the execute stage for five iterations in order to set the flags.\n ;; The value result is available after four iterations.\n (define_insn_reservation \"mult6\" 4\n  (and (eq_attr \"tune\" \"arm1026ejs\")\n-      (eq_attr \"insn\" \"umulls,umlals,smulls,smlals\"))\n+      (eq_attr \"type\" \"umulls,umlals,smulls,smlals\"))\n  \"a_e*5,a_m,a_w\")\n \n ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}, {"sha": "3030182acca42e21c715334aac670721ddc7d926", "filename": "gcc/config/arm/arm1136jfs.md", "status": "modified", "additions": 8, "deletions": 7, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/09485a08d3f4a486b59d969515e94ac3527eb3dd/gcc%2Fconfig%2Farm%2Farm1136jfs.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/09485a08d3f4a486b59d969515e94ac3527eb3dd/gcc%2Fconfig%2Farm%2Farm1136jfs.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm1136jfs.md?ref=09485a08d3f4a486b59d969515e94ac3527eb3dd", "patch": "@@ -129,13 +129,13 @@\n ;; Multiply and multiply-accumulate results are available after four stages.\n (define_insn_reservation \"11_mult1\" 4\n  (and (eq_attr \"tune\" \"arm1136js,arm1136jfs\")\n-      (eq_attr \"insn\" \"mul,mla\"))\n+      (eq_attr \"type\" \"mul,mla\"))\n  \"e_1*2,e_2,e_3,e_wb\")\n \n ;; The *S variants set the condition flags, which requires three more cycles.\n (define_insn_reservation \"11_mult2\" 4\n  (and (eq_attr \"tune\" \"arm1136js,arm1136jfs\")\n-      (eq_attr \"insn\" \"muls,mlas\"))\n+      (eq_attr \"type\" \"muls,mlas\"))\n  \"e_1*2,e_2,e_3,e_wb\")\n \n (define_bypass 3 \"11_mult1,11_mult2\"\n@@ -160,13 +160,13 @@\n ;; the two multiply-accumulate instructions.\n (define_insn_reservation \"11_mult3\" 5\n  (and (eq_attr \"tune\" \"arm1136js,arm1136jfs\")\n-      (eq_attr \"insn\" \"smull,umull,smlal,umlal\"))\n+      (eq_attr \"type\" \"smull,umull,smlal,umlal\"))\n  \"e_1*3,e_2,e_3,e_wb*2\")\n \n ;; The *S variants set the condition flags, which requires three more cycles.\n (define_insn_reservation \"11_mult4\" 5\n  (and (eq_attr \"tune\" \"arm1136js,arm1136jfs\")\n-      (eq_attr \"insn\" \"smulls,umulls,smlals,umlals\"))\n+      (eq_attr \"type\" \"smulls,umulls,smlals,umlals\"))\n  \"e_1*3,e_2,e_3,e_wb*2\")\n \n (define_bypass 4 \"11_mult3,11_mult4\"\n@@ -190,7 +190,8 @@\n ;; cycles.\n (define_insn_reservation \"11_mult5\" 3\n  (and (eq_attr \"tune\" \"arm1136js,arm1136jfs\")\n-      (eq_attr \"insn\" \"smulxy,smlaxy,smulwy,smlawy,smuad,smuadx,smlad,smladx,smusd,smusdx,smlsd,smlsdx\"))\n+      (eq_attr \"type\" \"smulxy,smlaxy,smulwy,smlawy,smuad,smuadx,smlad,smladx,\\\n+                       smusd,smusdx,smlsd,smlsdx\"))\n  \"e_1,e_2,e_3,e_wb\")\n \n (define_bypass 2 \"11_mult5\"\n@@ -211,14 +212,14 @@\n ;; The same idea, then the 32-bit result is added to a 64-bit quantity.\n (define_insn_reservation \"11_mult6\" 4\n  (and (eq_attr \"tune\" \"arm1136js,arm1136jfs\")\n-      (eq_attr \"insn\" \"smlalxy\"))\n+      (eq_attr \"type\" \"smlalxy\"))\n  \"e_1*2,e_2,e_3,e_wb*2\")\n \n ;; Signed 32x32 multiply, then the most significant 32 bits are extracted\n ;; and are available after the memory stage.\n (define_insn_reservation \"11_mult7\" 4\n  (and (eq_attr \"tune\" \"arm1136js,arm1136jfs\")\n-      (eq_attr \"insn\" \"smmul,smmulr\"))\n+      (eq_attr \"type\" \"smmul,smmulr\"))\n  \"e_1*2,e_2,e_3,e_wb\")\n \n (define_bypass 3 \"11_mult6,11_mult7\""}, {"sha": "4db404e766f3d173758ab2168936657912bcfd35", "filename": "gcc/config/arm/arm926ejs.md", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/09485a08d3f4a486b59d969515e94ac3527eb3dd/gcc%2Fconfig%2Farm%2Farm926ejs.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/09485a08d3f4a486b59d969515e94ac3527eb3dd/gcc%2Fconfig%2Farm%2Farm926ejs.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm926ejs.md?ref=09485a08d3f4a486b59d969515e94ac3527eb3dd", "patch": "@@ -81,32 +81,32 @@\n \n (define_insn_reservation \"9_mult1\" 3\n  (and (eq_attr \"tune\" \"arm926ejs\")\n-      (eq_attr \"insn\" \"smlalxy,mul,mla\"))\n+      (eq_attr \"type\" \"smlalxy,mul,mla\"))\n  \"e*2,m,w\")\n \n (define_insn_reservation \"9_mult2\" 4\n  (and (eq_attr \"tune\" \"arm926ejs\")\n-      (eq_attr \"insn\" \"muls,mlas\"))\n+      (eq_attr \"type\" \"muls,mlas\"))\n  \"e*3,m,w\")\n \n (define_insn_reservation \"9_mult3\" 4\n  (and (eq_attr \"tune\" \"arm926ejs\")\n-      (eq_attr \"insn\" \"umull,umlal,smull,smlal\"))\n+      (eq_attr \"type\" \"umull,umlal,smull,smlal\"))\n  \"e*3,m,w\")\n \n (define_insn_reservation \"9_mult4\" 5\n  (and (eq_attr \"tune\" \"arm926ejs\")\n-      (eq_attr \"insn\" \"umulls,umlals,smulls,smlals\"))\n+      (eq_attr \"type\" \"umulls,umlals,smulls,smlals\"))\n  \"e*4,m,w\")\n \n (define_insn_reservation \"9_mult5\" 2\n  (and (eq_attr \"tune\" \"arm926ejs\")\n-      (eq_attr \"insn\" \"smulxy,smlaxy,smlawx\"))\n+      (eq_attr \"type\" \"smulxy,smlaxy,smlawx\"))\n  \"e,m,w\")\n \n (define_insn_reservation \"9_mult6\" 3\n  (and (eq_attr \"tune\" \"arm926ejs\")\n-      (eq_attr \"insn\" \"smlalxy\"))\n+      (eq_attr \"type\" \"smlalxy\"))\n  \"e*2,m,w\")\n \n ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}, {"sha": "981d055c668d4a55a502f382e850881e4ca13236", "filename": "gcc/config/arm/cortex-a15.md", "status": "modified", "additions": 6, "deletions": 8, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/09485a08d3f4a486b59d969515e94ac3527eb3dd/gcc%2Fconfig%2Farm%2Fcortex-a15.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/09485a08d3f4a486b59d969515e94ac3527eb3dd/gcc%2Fconfig%2Farm%2Fcortex-a15.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fcortex-a15.md?ref=09485a08d3f4a486b59d969515e94ac3527eb3dd", "patch": "@@ -87,28 +87,26 @@\n ;; 32-bit multiplies\n (define_insn_reservation \"cortex_a15_mult32\" 3\n   (and (eq_attr \"tune\" \"cortexa15\")\n-       (and (eq_attr \"type\" \"mult\")\n-\t    (and (eq_attr \"neon_type\" \"none\")\n-\t\t (eq_attr \"mul64\" \"no\"))))\n+       (and (eq_attr \"mul32\" \"yes\")\n+\t    (eq_attr \"neon_type\" \"none\")))\n   \"ca15_issue1,ca15_mx\")\n \n ;; 64-bit multiplies\n (define_insn_reservation \"cortex_a15_mult64\" 4\n   (and (eq_attr \"tune\" \"cortexa15\")\n-       (and (eq_attr \"type\" \"mult\")\n-\t    (and (eq_attr \"neon_type\" \"none\")\n-\t\t (eq_attr \"mul64\" \"yes\"))))\n+       (and (eq_attr \"mul64\" \"yes\")\n+\t    (eq_attr \"neon_type\" \"none\")))\n   \"ca15_issue1,ca15_mx*2\")\n \n ;; Integer divide\n (define_insn_reservation \"cortex_a15_udiv\" 9\n   (and (eq_attr \"tune\" \"cortexa15\")\n-       (eq_attr \"insn\" \"udiv\"))\n+       (eq_attr \"type\" \"udiv\"))\n   \"ca15_issue1,ca15_mx\")\n \n (define_insn_reservation \"cortex_a15_sdiv\" 10\n   (and (eq_attr \"tune\" \"cortexa15\")\n-       (eq_attr \"insn\" \"sdiv\"))\n+       (eq_attr \"type\" \"sdiv\"))\n   \"ca15_issue1,ca15_mx\")\n \n ;; Block all issue pipes for a cycle"}, {"sha": "963d5babd7b561cd0a04232a7432d8637aca2089", "filename": "gcc/config/arm/cortex-a5.md", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/09485a08d3f4a486b59d969515e94ac3527eb3dd/gcc%2Fconfig%2Farm%2Fcortex-a5.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/09485a08d3f4a486b59d969515e94ac3527eb3dd/gcc%2Fconfig%2Farm%2Fcortex-a5.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fcortex-a5.md?ref=09485a08d3f4a486b59d969515e94ac3527eb3dd", "patch": "@@ -80,7 +80,8 @@\n \n (define_insn_reservation \"cortex_a5_mul\" 2\n   (and (eq_attr \"tune\" \"cortexa5\")\n-       (eq_attr \"type\" \"mult\"))\n+       (ior (eq_attr \"mul32\" \"yes\")\n+\t    (eq_attr \"mul64\" \"yes\")))\n   \"cortex_a5_ex1\")\n \n ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}, {"sha": "e67fe55ecd3a791e17708da83edf4555c8d130b4", "filename": "gcc/config/arm/cortex-a53.md", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/09485a08d3f4a486b59d969515e94ac3527eb3dd/gcc%2Fconfig%2Farm%2Fcortex-a53.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/09485a08d3f4a486b59d969515e94ac3527eb3dd/gcc%2Fconfig%2Farm%2Fcortex-a53.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fcortex-a53.md?ref=09485a08d3f4a486b59d969515e94ac3527eb3dd", "patch": "@@ -89,7 +89,8 @@\n \n (define_insn_reservation \"cortex_a53_mul\" 3\n   (and (eq_attr \"tune\" \"cortexa53\")\n-       (eq_attr \"type\" \"mult\"))\n+       (ior (eq_attr \"mul32\" \"yes\")\n+            (eq_attr \"mul64\" \"yes\")))\n   \"cortex_a53_single_issue\")\n \n ;; A multiply with a single-register result or an MLA, followed by an\n@@ -103,12 +104,12 @@\n ;; Punt with a high enough latency for divides.\n (define_insn_reservation \"cortex_a53_udiv\" 8\n   (and (eq_attr \"tune\" \"cortexa53\")\n-       (eq_attr \"insn\" \"udiv\"))\n+       (eq_attr \"type\" \"udiv\"))\n   \"(cortex_a53_slot0+cortex_a53_idiv),cortex_a53_idiv*7\")\n \n (define_insn_reservation \"cortex_a53_sdiv\" 9\n   (and (eq_attr \"tune\" \"cortexa53\")\n-       (eq_attr \"insn\" \"sdiv\"))\n+       (eq_attr \"type\" \"sdiv\"))\n   \"(cortex_a53_slot0+cortex_a53_idiv),cortex_a53_idiv*8\")\n \n "}, {"sha": "960174fb90a80b8e83d01d8957ee50c211f3ac15", "filename": "gcc/config/arm/cortex-a7.md", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/09485a08d3f4a486b59d969515e94ac3527eb3dd/gcc%2Fconfig%2Farm%2Fcortex-a7.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/09485a08d3f4a486b59d969515e94ac3527eb3dd/gcc%2Fconfig%2Farm%2Fcortex-a7.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fcortex-a7.md?ref=09485a08d3f4a486b59d969515e94ac3527eb3dd", "patch": "@@ -127,8 +127,9 @@\n \n (define_insn_reservation \"cortex_a7_mul\" 2\n   (and (eq_attr \"tune\" \"cortexa7\")\n-       (and (eq_attr \"type\" \"mult\")\n-            (eq_attr \"neon_type\" \"none\")))\n+       (and (eq_attr \"neon_type\" \"none\")\n+            (ior (eq_attr \"mul32\" \"yes\")\n+                 (eq_attr \"mul64\" \"yes\"))))\n   \"cortex_a7_both\")\n \n ;; Forward the result of a multiply operation to the accumulator \n@@ -140,7 +141,7 @@\n ;; The latency depends on the operands, so we use an estimate here.\n (define_insn_reservation \"cortex_a7_idiv\" 5\n   (and (eq_attr \"tune\" \"cortexa7\")\n-       (eq_attr \"insn\" \"udiv,sdiv\"))\n+       (eq_attr \"type\" \"udiv,sdiv\"))\n   \"cortex_a7_both*5\")\n \n ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}, {"sha": "8d3e98734ce16d844c64f62234fe2bba9153b6d9", "filename": "gcc/config/arm/cortex-a8.md", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/09485a08d3f4a486b59d969515e94ac3527eb3dd/gcc%2Fconfig%2Farm%2Fcortex-a8.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/09485a08d3f4a486b59d969515e94ac3527eb3dd/gcc%2Fconfig%2Farm%2Fcortex-a8.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fcortex-a8.md?ref=09485a08d3f4a486b59d969515e94ac3527eb3dd", "patch": "@@ -139,30 +139,30 @@\n \n (define_insn_reservation \"cortex_a8_mul\" 6\n   (and (eq_attr \"tune\" \"cortexa8\")\n-       (eq_attr \"insn\" \"mul,smulxy,smmul\"))\n+       (eq_attr \"type\" \"mul,smulxy,smmul\"))\n   \"cortex_a8_multiply_2\")\n \n (define_insn_reservation \"cortex_a8_mla\" 6\n   (and (eq_attr \"tune\" \"cortexa8\")\n-       (eq_attr \"insn\" \"mla,smlaxy,smlawy,smmla,smlad,smlsd\"))\n+       (eq_attr \"type\" \"mla,smlaxy,smlawy,smmla,smlad,smlsd\"))\n   \"cortex_a8_multiply_2\")\n \n (define_insn_reservation \"cortex_a8_mull\" 7\n   (and (eq_attr \"tune\" \"cortexa8\")\n-       (eq_attr \"insn\" \"smull,umull,smlal,umlal,umaal,smlalxy\"))\n+       (eq_attr \"type\" \"smull,umull,smlal,umlal,umaal,smlalxy\"))\n   \"cortex_a8_multiply_3\")\n \n (define_insn_reservation \"cortex_a8_smulwy\" 5\n   (and (eq_attr \"tune\" \"cortexa8\")\n-       (eq_attr \"insn\" \"smulwy,smuad,smusd\"))\n+       (eq_attr \"type\" \"smulwy,smuad,smusd\"))\n   \"cortex_a8_multiply\")\n \n ;; smlald and smlsld are multiply-accumulate instructions but do not\n ;; received bypassed data from other multiplication results; thus, they\n ;; cannot go in cortex_a8_mla above.  (See below for bypass details.)\n (define_insn_reservation \"cortex_a8_smlald\" 6\n   (and (eq_attr \"tune\" \"cortexa8\")\n-       (eq_attr \"insn\" \"smlald,smlsld\"))\n+       (eq_attr \"type\" \"smlald,smlsld\"))\n   \"cortex_a8_multiply_2\")\n \n ;; A multiply with a single-register result or an MLA, followed by an"}, {"sha": "05c114dc366a9c43fc48c83bc62554a58e77e5f8", "filename": "gcc/config/arm/cortex-a9.md", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/09485a08d3f4a486b59d969515e94ac3527eb3dd/gcc%2Fconfig%2Farm%2Fcortex-a9.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/09485a08d3f4a486b59d969515e94ac3527eb3dd/gcc%2Fconfig%2Farm%2Fcortex-a9.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fcortex-a9.md?ref=09485a08d3f4a486b59d969515e94ac3527eb3dd", "patch": "@@ -130,29 +130,29 @@ cortex_a9_p1_e2 + cortex_a9_p0_e1 + cortex_a9_p1_e1\")\n ;; We get 16*16 multiply / mac results in 3 cycles.\n (define_insn_reservation \"cortex_a9_mult16\" 3\n   (and (eq_attr \"tune\" \"cortexa9\")\n-       (eq_attr \"insn\" \"smulxy\"))\n+       (eq_attr \"type\" \"smulxy\"))\n        \"cortex_a9_mult16\")\n \n ;; The 16*16 mac is slightly different that it\n ;; reserves M1 and M2 in the same cycle.\n (define_insn_reservation \"cortex_a9_mac16\" 3\n   (and (eq_attr \"tune\" \"cortexa9\")\n-       (eq_attr \"insn\" \"smlaxy\"))\n+       (eq_attr \"type\" \"smlaxy\"))\n   \"cortex_a9_mac16\")\n \n (define_insn_reservation \"cortex_a9_multiply\" 4\n   (and (eq_attr \"tune\" \"cortexa9\")\n-       (eq_attr \"insn\" \"mul,smmul,smmulr\"))\n+       (eq_attr \"type\" \"mul,smmul,smmulr\"))\n        \"cortex_a9_mult\")\n \n (define_insn_reservation \"cortex_a9_mac\" 4\n   (and (eq_attr \"tune\" \"cortexa9\")\n-       (eq_attr \"insn\" \"mla,smmla\"))\n+       (eq_attr \"type\" \"mla,smmla\"))\n        \"cortex_a9_mac\")\n \n (define_insn_reservation \"cortex_a9_multiply_long\" 5\n   (and (eq_attr \"tune\" \"cortexa9\")\n-       (eq_attr \"insn\" \"smull,umull,smulls,umulls,smlal,smlals,umlal,umlals\"))\n+       (eq_attr \"type\" \"smull,umull,smulls,umulls,smlal,smlals,umlal,umlals\"))\n        \"cortex_a9_mult_long\")\n \n ;; An instruction with a result in E2 can be forwarded"}, {"sha": "dc3a329957271d86bb07ab88430360158c9b5497", "filename": "gcc/config/arm/cortex-m4.md", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/09485a08d3f4a486b59d969515e94ac3527eb3dd/gcc%2Fconfig%2Farm%2Fcortex-m4.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/09485a08d3f4a486b59d969515e94ac3527eb3dd/gcc%2Fconfig%2Farm%2Fcortex-m4.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fcortex-m4.md?ref=09485a08d3f4a486b59d969515e94ac3527eb3dd", "patch": "@@ -31,7 +31,10 @@\n ;; ALU and multiply is one cycle.\n (define_insn_reservation \"cortex_m4_alu\" 1\n   (and (eq_attr \"tune\" \"cortexm4\")\n-       (eq_attr \"type\" \"alu_reg,simple_alu_imm,simple_alu_shift,alu_shift,alu_shift_reg,mult\"))\n+       (ior (eq_attr \"type\" \"alu_reg,simple_alu_imm,simple_alu_shift,\\\n+                             alu_shift,alu_shift_reg\")\n+\t    (ior (eq_attr \"mul32\" \"yes\")\n+\t\t (eq_attr \"mul64\" \"yes\"))))\n   \"cortex_m4_ex\")\n \n ;; Byte, half-word and word load is two cycles."}, {"sha": "6d37079f2b34f4678b12e29beddc603ffde7dd23", "filename": "gcc/config/arm/cortex-r4.md", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/09485a08d3f4a486b59d969515e94ac3527eb3dd/gcc%2Fconfig%2Farm%2Fcortex-r4.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/09485a08d3f4a486b59d969515e94ac3527eb3dd/gcc%2Fconfig%2Farm%2Fcortex-r4.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fcortex-r4.md?ref=09485a08d3f4a486b59d969515e94ac3527eb3dd", "patch": "@@ -128,32 +128,32 @@\n \n (define_insn_reservation \"cortex_r4_mul_4\" 4\n   (and (eq_attr \"tune_cortexr4\" \"yes\")\n-       (eq_attr \"insn\" \"mul,smmul\"))\n+       (eq_attr \"type\" \"mul,smmul\"))\n   \"cortex_r4_mul_2\")\n \n (define_insn_reservation \"cortex_r4_mul_3\" 3\n   (and (eq_attr \"tune_cortexr4\" \"yes\")\n-       (eq_attr \"insn\" \"smulxy,smulwy,smuad,smusd\"))\n+       (eq_attr \"type\" \"smulxy,smulwy,smuad,smusd\"))\n   \"cortex_r4_mul\")\n \n (define_insn_reservation \"cortex_r4_mla_4\" 4\n   (and (eq_attr \"tune_cortexr4\" \"yes\")\n-       (eq_attr \"insn\" \"mla,smmla\"))\n+       (eq_attr \"type\" \"mla,smmla\"))\n   \"cortex_r4_mul_2\")\n \n (define_insn_reservation \"cortex_r4_mla_3\" 3\n   (and (eq_attr \"tune_cortexr4\" \"yes\")\n-       (eq_attr \"insn\" \"smlaxy,smlawy,smlad,smlsd\"))\n+       (eq_attr \"type\" \"smlaxy,smlawy,smlad,smlsd\"))\n   \"cortex_r4_mul\")\n \n (define_insn_reservation \"cortex_r4_smlald\" 3\n   (and (eq_attr \"tune_cortexr4\" \"yes\")\n-       (eq_attr \"insn\" \"smlald,smlsld\"))\n+       (eq_attr \"type\" \"smlald,smlsld\"))\n   \"cortex_r4_mul\")\n \n (define_insn_reservation \"cortex_r4_mull\" 4\n   (and (eq_attr \"tune_cortexr4\" \"yes\")\n-       (eq_attr \"insn\" \"smull,umull,umlal,umaal\"))\n+       (eq_attr \"type\" \"smull,umull,umlal,umaal\"))\n   \"cortex_r4_mul_2\")\n \n ;; A multiply or an MLA with a single-register result, followed by an\n@@ -196,12 +196,12 @@\n ;; This gives a latency of nine for udiv and ten for sdiv.\n (define_insn_reservation \"cortex_r4_udiv\" 9\n   (and (eq_attr \"tune_cortexr4\" \"yes\")\n-       (eq_attr \"insn\" \"udiv\"))\n+       (eq_attr \"type\" \"udiv\"))\n   \"cortex_r4_div_9\")\n \n (define_insn_reservation \"cortex_r4_sdiv\" 10\n   (and (eq_attr \"tune_cortexr4\" \"yes\")\n-       (eq_attr \"insn\" \"sdiv\"))\n+       (eq_attr \"type\" \"sdiv\"))\n   \"cortex_r4_div_10\")\n \n ;; Branches.  We assume correct prediction."}, {"sha": "efc6a1db95946dfd05854548bf86f5bc5e644b2b", "filename": "gcc/config/arm/fa526.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/09485a08d3f4a486b59d969515e94ac3527eb3dd/gcc%2Fconfig%2Farm%2Ffa526.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/09485a08d3f4a486b59d969515e94ac3527eb3dd/gcc%2Fconfig%2Farm%2Ffa526.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Ffa526.md?ref=09485a08d3f4a486b59d969515e94ac3527eb3dd", "patch": "@@ -76,12 +76,12 @@\n \n (define_insn_reservation \"526_mult1\" 2\n  (and (eq_attr \"tune\" \"fa526\")\n-      (eq_attr \"insn\" \"smlalxy,smulxy,smlaxy,smlalxy\"))\n+      (eq_attr \"type\" \"smlalxy,smulxy,smlaxy,smlalxy\"))\n  \"fa526_core\")\n \n (define_insn_reservation \"526_mult2\" 5\n  (and (eq_attr \"tune\" \"fa526\")\n-      (eq_attr \"insn\" \"mul,mla,muls,mlas,umull,umlal,smull,smlal,umulls,\\\n+      (eq_attr \"type\" \"mul,mla,muls,mlas,umull,umlal,smull,smlal,umulls,\\\n                        umlals,smulls,smlals,smlawx\"))\n  \"fa526_core*4\")\n "}, {"sha": "dec26c5c3ac72db6a909634c07de5000187f6dad", "filename": "gcc/config/arm/fa606te.md", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/09485a08d3f4a486b59d969515e94ac3527eb3dd/gcc%2Fconfig%2Farm%2Ffa606te.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/09485a08d3f4a486b59d969515e94ac3527eb3dd/gcc%2Fconfig%2Farm%2Ffa606te.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Ffa606te.md?ref=09485a08d3f4a486b59d969515e94ac3527eb3dd", "patch": "@@ -71,22 +71,22 @@\n \n (define_insn_reservation \"606te_mult1\" 2\n  (and (eq_attr \"tune\" \"fa606te\")\n-      (eq_attr \"insn\" \"smlalxy\"))\n+      (eq_attr \"type\" \"smlalxy\"))\n  \"fa606te_core\")\n \n (define_insn_reservation \"606te_mult2\" 3\n  (and (eq_attr \"tune\" \"fa606te\")\n-      (eq_attr \"insn\" \"smlaxy,smulxy,smulwy,smlawy\"))\n+      (eq_attr \"type\" \"smlaxy,smulxy,smulwy,smlawy\"))\n  \"fa606te_core*2\")\n \n (define_insn_reservation \"606te_mult3\" 4\n  (and (eq_attr \"tune\" \"fa606te\")\n-      (eq_attr \"insn\" \"mul,mla,muls,mlas\"))\n+      (eq_attr \"type\" \"mul,mla,muls,mlas\"))\n  \"fa606te_core*3\")\n \n (define_insn_reservation \"606te_mult4\" 5\n  (and (eq_attr \"tune\" \"fa606te\")\n-      (eq_attr \"insn\" \"umull,umlal,smull,smlal,umulls,umlals,smulls,smlals\"))\n+      (eq_attr \"type\" \"umull,umlal,smull,smlal,umulls,umlals,smulls,smlals\"))\n  \"fa606te_core*4\")\n \n ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}, {"sha": "818ad607b4739ded8e2c8b4152e4efe220dfd561", "filename": "gcc/config/arm/fa626te.md", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/09485a08d3f4a486b59d969515e94ac3527eb3dd/gcc%2Fconfig%2Farm%2Ffa626te.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/09485a08d3f4a486b59d969515e94ac3527eb3dd/gcc%2Fconfig%2Farm%2Ffa626te.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Ffa626te.md?ref=09485a08d3f4a486b59d969515e94ac3527eb3dd", "patch": "@@ -82,22 +82,22 @@\n \n (define_insn_reservation \"626te_mult1\" 2\n  (and (eq_attr \"tune\" \"fa626,fa626te\")\n-      (eq_attr \"insn\" \"smulwy,smlawy,smulxy,smlaxy\"))\n+      (eq_attr \"type\" \"smulwy,smlawy,smulxy,smlaxy\"))\n  \"fa626te_core\")\n \n (define_insn_reservation \"626te_mult2\" 2\n  (and (eq_attr \"tune\" \"fa626,fa626te\")\n-      (eq_attr \"insn\" \"mul,mla\"))\n+      (eq_attr \"type\" \"mul,mla\"))\n  \"fa626te_core\")\n \n (define_insn_reservation \"626te_mult3\" 3\n  (and (eq_attr \"tune\" \"fa626,fa626te\")\n-      (eq_attr \"insn\" \"muls,mlas,smull,smlal,umull,umlal,smlalxy,smlawx\"))\n+      (eq_attr \"type\" \"muls,mlas,smull,smlal,umull,umlal,smlalxy,smlawx\"))\n  \"fa626te_core*2\")\n \n (define_insn_reservation \"626te_mult4\" 4\n  (and (eq_attr \"tune\" \"fa626,fa626te\")\n-      (eq_attr \"insn\" \"smulls,smlals,umulls,umlals\"))\n+      (eq_attr \"type\" \"smulls,smlals,umulls,umlals\"))\n  \"fa626te_core*3\")\n \n ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}, {"sha": "8790b035aa53e2a3135a72bac800112dc17195aa", "filename": "gcc/config/arm/fa726te.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/09485a08d3f4a486b59d969515e94ac3527eb3dd/gcc%2Fconfig%2Farm%2Ffa726te.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/09485a08d3f4a486b59d969515e94ac3527eb3dd/gcc%2Fconfig%2Farm%2Ffa726te.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Ffa726te.md?ref=09485a08d3f4a486b59d969515e94ac3527eb3dd", "patch": "@@ -115,7 +115,7 @@\n \n (define_insn_reservation \"726te_mult_op\" 3\n  (and (eq_attr \"tune\" \"fa726te\")\n-      (eq_attr \"insn\" \"smlalxy,mul,mla,muls,mlas,umull,umlal,smull,smlal,\\\n+      (eq_attr \"type\" \"smlalxy,mul,mla,muls,mlas,umull,umlal,smull,smlal,\\\n                        umulls,umlals,smulls,smlals,smlawx,smulxy,smlaxy\"))\n  \"fa726te_issue+fa726te_mac_pipe\")\n "}, {"sha": "f3b7dadcba232bae07e9981de7f03b7be07706ed", "filename": "gcc/config/arm/fmp626.md", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/09485a08d3f4a486b59d969515e94ac3527eb3dd/gcc%2Fconfig%2Farm%2Ffmp626.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/09485a08d3f4a486b59d969515e94ac3527eb3dd/gcc%2Fconfig%2Farm%2Ffmp626.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Ffmp626.md?ref=09485a08d3f4a486b59d969515e94ac3527eb3dd", "patch": "@@ -77,22 +77,22 @@\n \n (define_insn_reservation \"mp626_mult1\" 2\n  (and (eq_attr \"tune\" \"fmp626\")\n-      (eq_attr \"insn\" \"smulwy,smlawy,smulxy,smlaxy\"))\n+      (eq_attr \"type\" \"smulwy,smlawy,smulxy,smlaxy\"))\n  \"fmp626_core\")\n \n (define_insn_reservation \"mp626_mult2\" 2\n  (and (eq_attr \"tune\" \"fmp626\")\n-      (eq_attr \"insn\" \"mul,mla\"))\n+      (eq_attr \"type\" \"mul,mla\"))\n  \"fmp626_core\")\n \n (define_insn_reservation \"mp626_mult3\" 3\n  (and (eq_attr \"tune\" \"fmp626\")\n-      (eq_attr \"insn\" \"muls,mlas,smull,smlal,umull,umlal,smlalxy,smlawx\"))\n+      (eq_attr \"type\" \"muls,mlas,smull,smlal,umull,umlal,smlalxy,smlawx\"))\n  \"fmp626_core*2\")\n \n (define_insn_reservation \"mp626_mult4\" 4\n  (and (eq_attr \"tune\" \"fmp626\")\n-      (eq_attr \"insn\" \"smulls,smlals,umulls,umlals\"))\n+      (eq_attr \"type\" \"smulls,smlals,umulls,umlals\"))\n  \"fmp626_core*3\")\n \n ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}, {"sha": "4004fa5940968cebe856fc47e6ad9640ace405ff", "filename": "gcc/config/arm/marvell-pj4.md", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/09485a08d3f4a486b59d969515e94ac3527eb3dd/gcc%2Fconfig%2Farm%2Fmarvell-pj4.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/09485a08d3f4a486b59d969515e94ac3527eb3dd/gcc%2Fconfig%2Farm%2Fmarvell-pj4.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fmarvell-pj4.md?ref=09485a08d3f4a486b59d969515e94ac3527eb3dd", "patch": "@@ -95,10 +95,14 @@\n                  \"pj4_ir_mul,pj4_ir_div,pj4_core_to_vfp\")\n \n (define_insn_reservation \"pj4_ir_mul\" 3\n-  (and (eq_attr \"tune\" \"marvell_pj4\") (eq_attr \"type\" \"mult\")) \"pj4_is,pj4_mul,nothing*2,pj4_cp\")\n+  (and (eq_attr \"tune\" \"marvell_pj4\")\n+       (ior (eq_attr \"mul32\" \"yes\")\n+            (eq_attr \"mul64\" \"yes\")))\n+                     \"pj4_is,pj4_mul,nothing*2,pj4_cp\")\n \n (define_insn_reservation \"pj4_ir_div\" 20\n-  (and (eq_attr \"tune\" \"marvell_pj4\") (eq_attr \"insn\" \"udiv,sdiv\")) \"pj4_is,pj4_div*19,pj4_cp\")\n+  (and (eq_attr \"tune\" \"marvell_pj4\") \n+       (eq_attr \"type\" \"udiv,sdiv\")) \"pj4_is,pj4_div*19,pj4_cp\")\n \n ;; Branches and calls.\n "}, {"sha": "4e3ebd7d621ff3b0137fe62e75a9435097d68e89", "filename": "gcc/config/arm/thumb2.md", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/09485a08d3f4a486b59d969515e94ac3527eb3dd/gcc%2Fconfig%2Farm%2Fthumb2.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/09485a08d3f4a486b59d969515e94ac3527eb3dd/gcc%2Fconfig%2Farm%2Fthumb2.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fthumb2.md?ref=09485a08d3f4a486b59d969515e94ac3527eb3dd", "patch": "@@ -1063,7 +1063,7 @@\n   \"mul%!\\\\t%0, %2, %0\"\n   [(set_attr \"predicable\" \"yes\")\n    (set_attr \"length\" \"2\")\n-   (set_attr \"insn\" \"muls\")])\n+   (set_attr \"type\" \"muls\")])\n \n (define_insn \"*thumb2_mulsi_short_compare0\"\n   [(set (reg:CC_NOOV CC_REGNUM)\n@@ -1076,7 +1076,7 @@\n   \"TARGET_THUMB2 && optimize_size\"\n   \"muls\\\\t%0, %2, %0\"\n   [(set_attr \"length\" \"2\")\n-   (set_attr \"insn\" \"muls\")])\n+   (set_attr \"type\" \"muls\")])\n \n (define_insn \"*thumb2_mulsi_short_compare0_scratch\"\n   [(set (reg:CC_NOOV CC_REGNUM)\n@@ -1088,7 +1088,7 @@\n   \"TARGET_THUMB2 && optimize_size\"\n   \"muls\\\\t%0, %2, %0\"\n   [(set_attr \"length\" \"2\")\n-   (set_attr \"insn\" \"muls\")])\n+   (set_attr \"type\" \"muls\")])\n \n (define_insn \"*thumb2_cbz\"\n   [(set (pc) (if_then_else"}]}