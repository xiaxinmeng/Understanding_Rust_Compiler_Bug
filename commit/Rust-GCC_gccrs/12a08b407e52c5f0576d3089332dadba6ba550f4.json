{"sha": "12a08b407e52c5f0576d3089332dadba6ba550f4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTJhMDhiNDA3ZTUyYzVmMDU3NmQzMDg5MzMyZGFkYmE2YmE1NTBmNA==", "commit": {"author": {"name": "Zack Weinberg", "email": "zack@gcc.gnu.org", "date": "2004-01-13T02:43:16Z"}, "committer": {"name": "Zack Weinberg", "email": "zack@gcc.gnu.org", "date": "2004-01-13T02:43:16Z"}, "message": "varray.h (VARRAY_POP): Add checking variant, aborts on underflow.\n\n\t* varray.h (VARRAY_POP): Add checking variant, aborts on underflow.\n\t(VARRAY_TOP): Use VARRAY_CHECK so the access is bounds-checked.\n\t* varray.c: No need to prototype error.\n\t(varray_check_failed): Wrap long string onto two lines.\n\t(varray_underflow): New function.\n\nFrom-SVN: r75786", "tree": {"sha": "9b6873aeaaf57603e96839aaac2b6634121b7cfb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9b6873aeaaf57603e96839aaac2b6634121b7cfb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/12a08b407e52c5f0576d3089332dadba6ba550f4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/12a08b407e52c5f0576d3089332dadba6ba550f4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/12a08b407e52c5f0576d3089332dadba6ba550f4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/12a08b407e52c5f0576d3089332dadba6ba550f4/comments", "author": null, "committer": null, "parents": [{"sha": "e79d56eae8e1a8a6bd1ca5cee92193582ff77b74", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e79d56eae8e1a8a6bd1ca5cee92193582ff77b74", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e79d56eae8e1a8a6bd1ca5cee92193582ff77b74"}], "stats": {"total": 50, "additions": 36, "deletions": 14}, "files": [{"sha": "3bc907ebeaefc0548267946425b99ac82578e9b1", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 3, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/12a08b407e52c5f0576d3089332dadba6ba550f4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/12a08b407e52c5f0576d3089332dadba6ba550f4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=12a08b407e52c5f0576d3089332dadba6ba550f4", "patch": "@@ -1,3 +1,11 @@\n+2004-01-12  Zack Weinberg  <zack@codesourcery.com>\n+\n+\t* varray.h (VARRAY_POP): Add checking variant, aborts on underflow.\n+\t(VARRAY_TOP): Use VARRAY_CHECK so the access is bounds-checked.\n+\t* varray.c: No need to prototype error.\n+\t(varray_check_failed): Wrap long string onto two lines.\n+\t(varray_underflow): New function.\n+\n 2004-01-13  Steven Bosscher  <stevenb@suse.de>\n \n \tPR c++/13376\n@@ -146,12 +154,12 @@\n \tcontraint.\n \t(EXTRA_MEMORY_CONSTRAINT): Tell reload which constraint\n \tare memory contraints.\n-\t* gcc/config/rs6000/rs6000-protos.h (word_offset_memref_operand): \n+\t* gcc/config/rs6000/rs6000-protos.h (word_offset_memref_operand):\n \tNew prototype.\n-\t* gcc/config/rs6000/rs6000.md (*movdf_hardfloat64): \n+\t* gcc/config/rs6000/rs6000.md (*movdf_hardfloat64):\n \tChange 'o' to 'Y' constraint.\n \t(*movdf_softfloat64): Ditto.\n-\t\n+\n 2004-01-12  Bernardo Innocenti  <bernie@develer.com>\n \n \t* gcc/config/m68k/m68k.md: Switch from the \"*...\" syntax to the"}, {"sha": "b748d438e9ada4ebc2114814453fa07481c2f246", "filename": "gcc/varray.c", "status": "modified", "additions": 10, "deletions": 3, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/12a08b407e52c5f0576d3089332dadba6ba550f4/gcc%2Fvarray.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/12a08b407e52c5f0576d3089332dadba6ba550f4/gcc%2Fvarray.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvarray.c?ref=12a08b407e52c5f0576d3089332dadba6ba550f4", "patch": "@@ -118,15 +118,22 @@ varray_clear (varray_type va)\n \n #if defined ENABLE_CHECKING && (GCC_VERSION >= 2007)\n \n-extern void error (const char *, ...)\tATTRIBUTE_PRINTF_1;\n-\n void\n varray_check_failed (varray_type va, size_t n, const char *file, int line,\n \t\t     const char *function)\n {\n-  internal_error (\"virtual array %s[%lu]: element %lu out of bounds in %s, at %s:%d\",\n+  internal_error (\"virtual array %s[%lu]: element %lu out of bounds \"\n+\t\t  \"in %s, at %s:%d\",\n \t\t  va->name, (unsigned long) va->num_elements, (unsigned long) n,\n \t\t  function, trim_filename (file), line);\n }\n \n+void\n+varray_underflow (varray_type va, const char *file, int line,\n+\t\t  const char *function)\n+{\n+  internal_error (\"underflowed virtual array %s in %s, at %s:%d\",\n+\t\t  va->name, function, trim_filename (file), line);\n+}\n+\n #endif"}, {"sha": "9cc6ea5fffe2bb974325c834412bc1595136bff9", "filename": "gcc/varray.h", "status": "modified", "additions": 15, "deletions": 8, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/12a08b407e52c5f0576d3089332dadba6ba550f4/gcc%2Fvarray.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/12a08b407e52c5f0576d3089332dadba6ba550f4/gcc%2Fvarray.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvarray.h?ref=12a08b407e52c5f0576d3089332dadba6ba550f4", "patch": "@@ -227,14 +227,27 @@ extern void varray_clear (varray_type);\n #if defined ENABLE_CHECKING && (GCC_VERSION >= 2007)\n extern void varray_check_failed (varray_type, size_t, const char *, int,\n \t\t\t\t const char *) ATTRIBUTE_NORETURN;\n+extern void varray_underflow (varray_type, const char *, int, const char *)\n+     ATTRIBUTE_NORETURN;\n #define VARRAY_CHECK(VA, N, T) __extension__\t\t\t\\\n (*({ varray_type const _va = (VA);\t\t\t\t\\\n      const size_t _n = (N);\t\t\t\t\t\\\n      if (_n >= _va->num_elements)\t\t\t\t\\\n        varray_check_failed (_va, _n, __FILE__, __LINE__, __FUNCTION__);\t\\\n      &_va->data.T[_n]; }))\n+\n+#define VARRAY_POP(VA) do {\t\t\t\t\t\\\n+  varray_type const _va = (VA);\t\t\t\t\t\\\n+  if (_va->elements_used == 0)\t\t\t\t\t\\\n+    varray_underflow (_va, __FILE__, __LINE__, __FUNCTION__);\t\\\n+  else\t\t\t\t\t\t\t\t\\\n+    _va->elements_used--;\t\t\t\t\t\\\n+} while (0)\n+\n #else\n #define VARRAY_CHECK(VA, N, T) ((VA)->data.T[N])\n+/* Pop the top element of VA.  */\n+#define VARRAY_POP(VA) do { ((VA)->elements_used--); } while (0)\n #endif\n \n /* Push X onto VA.  T is the name of the field in varray_data\n@@ -248,14 +261,6 @@ extern void varray_check_failed (varray_type, size_t, const char *, int,\n     }\t\t\t\t\t\t\t\\\n   while (0)\n \n-/* Pop the top element of VA.  */\n-#define VARRAY_POP(VA) \\\n-  ((VA)->elements_used--)\n-\n-/* Return the top element of VA.  */\n-#define VARRAY_TOP(VA, T) \\\n-  ((VA)->data.T[(VA)->elements_used - 1])\n-\n #define VARRAY_CHAR(VA, N)\t\tVARRAY_CHECK (VA, N, c)\n #define VARRAY_UCHAR(VA, N)\t\tVARRAY_CHECK (VA, N, uc)\n #define VARRAY_SHORT(VA, N)\t\tVARRAY_CHECK (VA, N, s)\n@@ -299,6 +304,8 @@ extern void varray_check_failed (varray_type, size_t, const char *, int,\n #define VARRAY_PUSH_BB(VA, X)\t\tVARRAY_PUSH (VA, bb, X)\n \n /* Return the last element of VA.  */\n+#define VARRAY_TOP(VA, T) VARRAY_CHECK(VA, (VA)->elements_used - 1, T)\n+\n #define VARRAY_TOP_CHAR(VA)\t\tVARRAY_TOP (VA, c)\n #define VARRAY_TOP_UCHAR(VA)\t        VARRAY_TOP (VA, uc)\n #define VARRAY_TOP_SHORT(VA)\t        VARRAY_TOP (VA, s)"}]}