{"sha": "33a63257701c8d94ee375e32ff1837c989d8ded6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzNhNjMyNTc3MDFjOGQ5NGVlMzc1ZTMyZmYxODM3Yzk4OWQ4ZGVkNg==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2021-01-05T15:17:15Z"}, "committer": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2021-01-05T16:40:51Z"}, "message": "tree-optimization/98516 - fix SLP permute opt materialization\n\nWhen materializing on a VEC_PERM node we have to permute the\nincoming vectors, not the outgoing one.\n\n2021-01-05  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/98516\n\t* tree-vect-slp.c (vect_optimize_slp): Permute the incoming\n\tlanes when materializing on a VEC_PERM node.\n\t(vectorizable_slp_permutation): Dump the permute properly.\n\n\t* gcc.dg/vect/bb-slp-pr98516-1.c: New testcase.\n\t* gcc.dg/vect/bb-slp-pr98516-2.c: Likewise.", "tree": {"sha": "7bcc6ecd57ee6bbee583ae126b0892fd66ade9af", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7bcc6ecd57ee6bbee583ae126b0892fd66ade9af"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/33a63257701c8d94ee375e32ff1837c989d8ded6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/33a63257701c8d94ee375e32ff1837c989d8ded6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/33a63257701c8d94ee375e32ff1837c989d8ded6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/33a63257701c8d94ee375e32ff1837c989d8ded6/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "606f2af1973d5c83877d327cb5adef97c4243a73", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/606f2af1973d5c83877d327cb5adef97c4243a73", "html_url": "https://github.com/Rust-GCC/gccrs/commit/606f2af1973d5c83877d327cb5adef97c4243a73"}], "stats": {"total": 75, "additions": 70, "deletions": 5}, "files": [{"sha": "c4c244c6f8af9125f2d002331eafc1d7556f5974", "filename": "gcc/testsuite/gcc.dg/vect/bb-slp-pr98516-1.c", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/33a63257701c8d94ee375e32ff1837c989d8ded6/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fbb-slp-pr98516-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/33a63257701c8d94ee375e32ff1837c989d8ded6/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fbb-slp-pr98516-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fbb-slp-pr98516-1.c?ref=33a63257701c8d94ee375e32ff1837c989d8ded6", "patch": "@@ -0,0 +1,26 @@\n+/* { dg-do run } */\n+\n+double a[4], b[2];\n+\n+void __attribute__((noipa))\n+foo ()\n+{\n+  double a0 = a[0];\n+  double a1 = a[1];\n+  double a2 = a[2];\n+  double a3 = a[3];\n+  b[0] = a1 - a3;\n+  b[1] = a0 + a2;\n+}\n+\n+int main()\n+{\n+  a[0] = 1.;\n+  a[1] = 2.;\n+  a[2] = 3.;\n+  a[3] = 4.;\n+  foo ();\n+  if (b[0] != -2 || b[1] != 4)\n+    __builtin_abort ();\n+  return 0;\n+}"}, {"sha": "f1a9341e224ef3ad0b673537834844a03289a9a4", "filename": "gcc/testsuite/gcc.dg/vect/bb-slp-pr98516-2.c", "status": "added", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/33a63257701c8d94ee375e32ff1837c989d8ded6/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fbb-slp-pr98516-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/33a63257701c8d94ee375e32ff1837c989d8ded6/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fbb-slp-pr98516-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fbb-slp-pr98516-2.c?ref=33a63257701c8d94ee375e32ff1837c989d8ded6", "patch": "@@ -0,0 +1,36 @@\n+/* { dg-do run } */\n+\n+float a[8], b[4];\n+\n+void __attribute__((noipa))\n+foo ()\n+{\n+  float a0 = a[0];\n+  float a1 = a[1];\n+  float a2 = a[2];\n+  float a3 = a[3];\n+  float a4 = a[4];\n+  float a5 = a[5];\n+  float a6 = a[6];\n+  float a7 = a[7];\n+  b[0] = a1 - a5;\n+  b[1] = a0 + a4;\n+  b[2] = a3 - a7;\n+  b[3] = a2 + a6;\n+}\n+\n+int main()\n+{\n+  a[0] = 1.;\n+  a[1] = 2.;\n+  a[2] = 3.;\n+  a[3] = 4.;\n+  a[4] = 5.;\n+  a[5] = 6.;\n+  a[6] = 7.;\n+  a[7] = 8.;\n+  foo ();\n+  if (b[0] != -4 || b[1] != 6 || b[2] != -4 || b[3] != 10)\n+    __builtin_abort ();\n+  return 0;\n+}"}, {"sha": "c9da8457e5ef10294418c34c94e397797b777073", "filename": "gcc/tree-vect-slp.c", "status": "modified", "additions": 8, "deletions": 5, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/33a63257701c8d94ee375e32ff1837c989d8ded6/gcc%2Ftree-vect-slp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/33a63257701c8d94ee375e32ff1837c989d8ded6/gcc%2Ftree-vect-slp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-slp.c?ref=33a63257701c8d94ee375e32ff1837c989d8ded6", "patch": "@@ -3094,15 +3094,18 @@ vect_optimize_slp (vec_info *vinfo)\n \t    ;\n \t  else if (SLP_TREE_LANE_PERMUTATION (node).exists ())\n \t    {\n-\t      /* If the node if already a permute node we just need to apply\n-\t\t the permutation to the permute node itself.  */\n+\t      /* If the node is already a permute node we can apply\n+\t\t the permutation to the lane selection, effectively\n+\t\t materializing it on the incoming vectors.  */\n \t      if (dump_enabled_p ())\n \t\tdump_printf_loc (MSG_NOTE, vect_location,\n \t\t\t\t \"simplifying permute node %p\\n\",\n \t\t\t\t node);\n \n-\t      vect_slp_permute (perms[perm], SLP_TREE_LANE_PERMUTATION (node),\n-\t\t\t\ttrue);\n+\t      for (unsigned k = 0;\n+\t\t   k < SLP_TREE_LANE_PERMUTATION (node).length (); ++k)\n+\t\tSLP_TREE_LANE_PERMUTATION (node)[k].second\n+\t\t  = perms[perm][SLP_TREE_LANE_PERMUTATION (node)[k].second];\n \t    }\n \t  else\n \t    {\n@@ -5554,7 +5557,7 @@ vectorizable_slp_permutation (vec_info *vinfo, gimple_stmt_iterator *gsi,\n \t    dump_printf (MSG_NOTE, \",\");\n \t  dump_printf (MSG_NOTE, \" vops%u[%u][%u]\",\n \t\t       vperm[i].first.first, vperm[i].first.second,\n-\t\t       vperm[i].first.second);\n+\t\t       vperm[i].second);\n \t}\n       dump_printf (MSG_NOTE, \"\\n\");\n     }"}]}