{"sha": "8458320833c8fbfb61d9261c411ce072461b639b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODQ1ODMyMDgzM2M4ZmJmYjYxZDkyNjFjNDExY2UwNzI0NjFiNjM5Yg==", "commit": {"author": {"name": "Mark Mitchell", "email": "mark@codesourcery.com", "date": "2003-09-17T23:42:55Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "2003-09-17T23:42:55Z"}, "message": "re PR c++/12266 (incorrect instantiation of unneeded template during overload resolution)\n\n\tPR c++/12266\n\t* cp-tree.h (tsubst_flags_t): Add tf_conv.\n\t* class.c (standard_conversion): Pass tf_conv to\n\tinstantiate_type.\n\t(resolve_address_of_overloaded_function): Do not call mark_used\n\twhen just checking conversions.\n\n\tPR c++/12266\n\t* g++.dg/overload/template1.C: New test.\n\nFrom-SVN: r71483", "tree": {"sha": "14040f001616060e51ea3ed9d68ba773cbc87412", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/14040f001616060e51ea3ed9d68ba773cbc87412"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8458320833c8fbfb61d9261c411ce072461b639b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8458320833c8fbfb61d9261c411ce072461b639b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8458320833c8fbfb61d9261c411ce072461b639b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8458320833c8fbfb61d9261c411ce072461b639b/comments", "author": null, "committer": null, "parents": [{"sha": "47aa0df47504bd7a24c0e5e3110e927233e4a96d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/47aa0df47504bd7a24c0e5e3110e927233e4a96d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/47aa0df47504bd7a24c0e5e3110e927233e4a96d"}], "stats": {"total": 40, "additions": 37, "deletions": 3}, "files": [{"sha": "7d3ddc36d90069fcea1f59be69f5fde7cd971106", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8458320833c8fbfb61d9261c411ce072461b639b/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8458320833c8fbfb61d9261c411ce072461b639b/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=8458320833c8fbfb61d9261c411ce072461b639b", "patch": "@@ -1,5 +1,12 @@\n 2003-09-17  Mark Mitchell  <mark@codesourcery.com>\n \n+\tPR c++/12266\n+\t* cp-tree.h (tsubst_flags_t): Add tf_conv.\n+\t* class.c (standard_conversion): Pass tf_conv to\n+\tinstantiate_type.\n+\t(resolve_address_of_overloaded_function): Do not call mark_used\n+\twhen just checking conversions.\n+\n \tPR debug/12066\n \t* cp-lang.c (LANG_HOOKS_BUILTIN_TYPE_DECLS): Define.\n \t* cp-tree.h (cxx_builtin_type_decls): Declare."}, {"sha": "4f86cc67c3c8e814f07da5b207ca273020fc1c0b", "filename": "gcc/cp/call.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8458320833c8fbfb61d9261c411ce072461b639b/gcc%2Fcp%2Fcall.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8458320833c8fbfb61d9261c411ce072461b639b/gcc%2Fcp%2Fcall.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcall.c?ref=8458320833c8fbfb61d9261c411ce072461b639b", "patch": "@@ -593,7 +593,7 @@ standard_conversion (tree to, tree from, tree expr)\n   if ((TYPE_PTRFN_P (to) || TYPE_PTRMEMFUNC_P (to))\n       && expr && type_unknown_p (expr))\n     {\n-      expr = instantiate_type (to, expr, tf_none);\n+      expr = instantiate_type (to, expr, tf_conv);\n       if (expr == error_mark_node)\n \treturn NULL_TREE;\n       from = TREE_TYPE (expr);"}, {"sha": "b76e7db4243a444b97c007b691883e23d42c8732", "filename": "gcc/cp/class.c", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8458320833c8fbfb61d9261c411ce072461b639b/gcc%2Fcp%2Fclass.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8458320833c8fbfb61d9261c411ce072461b639b/gcc%2Fcp%2Fclass.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fclass.c?ref=8458320833c8fbfb61d9261c411ce072461b639b", "patch": "@@ -5937,7 +5937,13 @@ cannot resolve overloaded function `%D' based on conversion to type `%T'\",\n           explained = 1;\n         }\n     }\n-  mark_used (fn);\n+\n+  /* If we're doing overload resolution purely for the purpose of\n+     determining conversion sequences, we should not consider the\n+     function used.  If this conversion sequence is selected, the\n+     function will be marked as used at this point.  */\n+  if (!(flags & tf_conv))\n+    mark_used (fn);\n \n   if (TYPE_PTRFN_P (target_type) || TYPE_PTRMEMFUNC_P (target_type))\n     return build_unary_op (ADDR_EXPR, fn, 0);"}, {"sha": "ef38d5565d801b43e0f1864b2873fba27a175c14", "filename": "gcc/cp/cp-tree.h", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8458320833c8fbfb61d9261c411ce072461b639b/gcc%2Fcp%2Fcp-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8458320833c8fbfb61d9261c411ce072461b639b/gcc%2Fcp%2Fcp-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.h?ref=8458320833c8fbfb61d9261c411ce072461b639b", "patch": "@@ -3034,9 +3034,13 @@ typedef enum tsubst_flags_t {\n \t\t\t\t   (lookup_template_class use) */\n   tf_stmt_expr_cmpd = 1 << 6,   /* tsubsting the compound statement of\n \t\t\t\t   a statement expr.  */\n-  tf_stmt_expr_body = 1 << 7    /* tsubsting the statements in the\n+  tf_stmt_expr_body = 1 << 7,   /* tsubsting the statements in the\n \t\t\t       \t   body of the compound statement of a\n \t\t\t       \t   statement expr.  */\n+  tf_conv = 1 << 8              /* We are determining what kind of\n+\t\t\t\t   conversion might be permissible,\n+\t\t\t\t   not actually performing the\n+\t\t\t\t   conversion.  */\n } tsubst_flags_t;\n \n /* The kind of checking we can do looking in a class hierarchy.  */"}, {"sha": "2bd53c546a85d87be7bc1281bcd714af1538f5a6", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8458320833c8fbfb61d9261c411ce072461b639b/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8458320833c8fbfb61d9261c411ce072461b639b/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=8458320833c8fbfb61d9261c411ce072461b639b", "patch": "@@ -1,3 +1,8 @@\n+2003-09-17  Mark Mitchell  <mark@codesourcery.com>\n+\n+\tPR c++/12266\n+\t* g++.dg/overload/template1.C: New test.\n+\n 2003-09-17  Eric Botcazou  <ebotcazou@libertysurf.fr>\n \n \t* g++.dg/opt/cfg3.C: New test."}, {"sha": "5bfad8464f7de340d56be7a490221ae18dd684e5", "filename": "gcc/testsuite/g++.dg/overload/template1.C", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8458320833c8fbfb61d9261c411ce072461b639b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Foverload%2Ftemplate1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8458320833c8fbfb61d9261c411ce072461b639b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Foverload%2Ftemplate1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Foverload%2Ftemplate1.C?ref=8458320833c8fbfb61d9261c411ce072461b639b", "patch": "@@ -0,0 +1,12 @@\n+template<typename T> T Foo (int) {T d;}\n+\n+void Baz (void (*)(int), int);\n+\n+int Foo ();\n+int Baz (int (*)(), float);\n+\n+void Bar ()\n+{\n+  Baz (Foo, 1.0f);\n+  \n+}"}]}