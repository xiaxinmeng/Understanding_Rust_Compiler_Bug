{"sha": "e2faec75889fb1f824b6013a73e90a6783dd1dff", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTJmYWVjNzU4ODlmYjFmODI0YjYwMTNhNzNlOTBhNjc4M2RkMWRmZg==", "commit": {"author": {"name": "J\"orn Rennecke", "email": "amylaar@cygnus.co.uk", "date": "1998-03-04T07:54:28Z"}, "committer": {"name": "Joern Rennecke", "email": "amylaar@gcc.gnu.org", "date": "1998-03-04T07:54:28Z"}, "message": "final.c (shorten_branches): Tag the loop alignment onto the first label after NOTE_INSN_LOOP_BEG even if...\n\n\t* final.c (shorten_branches): Tag the loop alignment onto the\n\tfirst label after NOTE_INSN_LOOP_BEG even if there is an\n\tintervening insn.\n\nFrom-SVN: r18396", "tree": {"sha": "90cccac0ed9e8e7903367b83748fd45301214253", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/90cccac0ed9e8e7903367b83748fd45301214253"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e2faec75889fb1f824b6013a73e90a6783dd1dff", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e2faec75889fb1f824b6013a73e90a6783dd1dff", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e2faec75889fb1f824b6013a73e90a6783dd1dff", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e2faec75889fb1f824b6013a73e90a6783dd1dff/comments", "author": null, "committer": null, "parents": [{"sha": "26024475522b4a9ca6ba751c0cc5657b564d1cbf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/26024475522b4a9ca6ba751c0cc5657b564d1cbf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/26024475522b4a9ca6ba751c0cc5657b564d1cbf"}], "stats": {"total": 23, "additions": 20, "deletions": 3}, "files": [{"sha": "52f74dbd6ccc177a03fe68bcdcbbe19bdd3c60a7", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2faec75889fb1f824b6013a73e90a6783dd1dff/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2faec75889fb1f824b6013a73e90a6783dd1dff/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e2faec75889fb1f824b6013a73e90a6783dd1dff", "patch": "@@ -1,3 +1,9 @@\n+Wed Mar  4 15:51:19 1998  J\"orn Rennecke <amylaar@cygnus.co.uk>\n+\n+\t* final.c (shorten_branches): Tag the loop alignment onto the\n+\tfirst label after NOTE_INSN_LOOP_BEG even if there is an\n+\tintervening insn.\n+\n Tue Mar  3 21:48:35 1998  J\"orn Rennecke <amylaar@cygnus.co.uk>\n \n \t* final.c (insn_current_reference_address):"}, {"sha": "9fb40ac871ed848db436bb086986de95ecc944c0", "filename": "gcc/final.c", "status": "modified", "additions": 14, "deletions": 3, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2faec75889fb1f824b6013a73e90a6783dd1dff/gcc%2Ffinal.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2faec75889fb1f824b6013a73e90a6783dd1dff/gcc%2Ffinal.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffinal.c?ref=e2faec75889fb1f824b6013a73e90a6783dd1dff", "patch": "@@ -982,13 +982,23 @@ shorten_branches (first)\n \n   /* Initialize label_align and set up uid_shuid to be strictly\n      monotonically rising with insn order.  */\n+  /* We use max_log here to keep track of the maximum alignment we want to\n+     impose on the next CODE_LABEL (or the current one if we are processing\n+     the CODE_LABEL itself).  */\n+     \n   for (max_log = 0, insn = get_insns (), i = 1; insn; insn = NEXT_INSN (insn))\n     {\n       int log;\n \n       INSN_SHUID (insn) = i++;\n       if (GET_RTX_CLASS (GET_CODE (insn)) == 'i')\n-\tmax_log = 0;\n+\t{\n+\t  /* reorg might make the first insn of a loop being run once only,\n+             and delete the label in front of it.  Then we want to apply\n+             the loop alignment to the new label created by reorg, which\n+             is separated by the former loop start insn from the\n+\t     NOTE_INSN_LOOP_BEG.  */\n+\t}\n       else if (GET_CODE (insn) == CODE_LABEL)\n \t{\n \t  rtx next;\n@@ -1028,13 +1038,14 @@ shorten_branches (first)\n \t\tbreak;\n \t      }\n \t}\n+      /* Again, we allow NOTE_INSN_LOOP_BEG - INSN - CODE_LABEL\n+\t sequences in order to handle reorg output efficiently.  */\n       else if (GET_CODE (insn) == NOTE\n \t       && NOTE_LINE_NUMBER (insn) == NOTE_INSN_LOOP_BEG)\n \t{\n \t  rtx label;\n \n-\t  for (label = insn; label && GET_RTX_CLASS (GET_CODE (label)) != 'i';\n-\t       label = NEXT_INSN (label))\n+\t  for (label = insn; label; label = NEXT_INSN (label))\n \t    if (GET_CODE (label) == CODE_LABEL)\n \t      {\n \t\tlog = LOOP_ALIGN (insn);"}]}