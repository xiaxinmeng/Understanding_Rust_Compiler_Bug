{"sha": "83afe9ef89a1e6d75c23875f229f13bf5551014e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODNhZmU5ZWY4OWExZTZkNzVjMjM4NzVmMjI5ZjEzYmY1NTUxMDE0ZQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2014-05-12T19:07:55Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2014-05-12T19:07:55Z"}, "message": "call.c (convert_like_real): Use inform for identifying the declaration point.\n\n\t* call.c (convert_like_real): Use inform for identifying the\n\tdeclaration point.\n\nFrom-SVN: r210332", "tree": {"sha": "d37099e5d46df22645e9e23c7b4d4515b6b6684c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d37099e5d46df22645e9e23c7b4d4515b6b6684c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/83afe9ef89a1e6d75c23875f229f13bf5551014e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/83afe9ef89a1e6d75c23875f229f13bf5551014e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/83afe9ef89a1e6d75c23875f229f13bf5551014e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/83afe9ef89a1e6d75c23875f229f13bf5551014e/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "da7316cbac19eb2be839e01a5ebf27d97a8e7452", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/da7316cbac19eb2be839e01a5ebf27d97a8e7452", "html_url": "https://github.com/Rust-GCC/gccrs/commit/da7316cbac19eb2be839e01a5ebf27d97a8e7452"}], "stats": {"total": 33, "additions": 19, "deletions": 14}, "files": [{"sha": "15dc0b6072cd1840235cdf8cf6893ed13ab938e0", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/83afe9ef89a1e6d75c23875f229f13bf5551014e/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/83afe9ef89a1e6d75c23875f229f13bf5551014e/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=83afe9ef89a1e6d75c23875f229f13bf5551014e", "patch": "@@ -1,3 +1,8 @@\n+2014-05-12  Jason Merrill  <jason@redhat.com>\n+\n+\t* call.c (convert_like_real): Use inform for identifying the\n+\tdeclaration point.\n+\n 2014-05-12  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \t* cvt.c (cp_convert_to_pointer): Don't call error_at if"}, {"sha": "f2ceef247812f683305e7dbf45aee9598a613df0", "filename": "gcc/cp/call.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/83afe9ef89a1e6d75c23875f229f13bf5551014e/gcc%2Fcp%2Fcall.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/83afe9ef89a1e6d75c23875f229f13bf5551014e/gcc%2Fcp%2Fcall.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcall.c?ref=83afe9ef89a1e6d75c23875f229f13bf5551014e", "patch": "@@ -6256,8 +6256,8 @@ convert_like_real (conversion *convs, tree expr, tree fn, int argnum,\n \treturn expr;\n       expr = build_temp (expr, totype, flags, &diag_kind, complain);\n       if (diag_kind && fn && complain)\n-\temit_diagnostic (diag_kind, DECL_SOURCE_LOCATION (fn), 0,\n-\t\t\t \"  initializing argument %P of %qD\", argnum, fn);\n+\tinform (DECL_SOURCE_LOCATION (fn),\n+\t\t\"  initializing argument %P of %qD\", argnum, fn);\n       return build_cplus_new (totype, expr, complain);\n \n     case ck_ref_bind:"}, {"sha": "2bc4f7fbb5b79dd7a32a84d39cccbfb49c403c96", "filename": "gcc/testsuite/g++.dg/cpp0x/defaulted20.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/83afe9ef89a1e6d75c23875f229f13bf5551014e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fdefaulted20.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/83afe9ef89a1e6d75c23875f229f13bf5551014e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fdefaulted20.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fdefaulted20.C?ref=83afe9ef89a1e6d75c23875f229f13bf5551014e", "patch": "@@ -10,7 +10,7 @@ struct B {\n   B(B&&) = default;\t// { dg-error \"implicitly deleted|use of deleted\" }\n };\n \n-void g(B);\t\t\t// { dg-error \"argument 1\" }\n+void g(B);\t\t\t// { dg-message \"argument 1\" }\n B&& f();\n \n int main()"}, {"sha": "58c1694bcd90747a4830cfea073d128703c1f9e3", "filename": "gcc/testsuite/g++.dg/overload/arg3.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/83afe9ef89a1e6d75c23875f229f13bf5551014e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Foverload%2Farg3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/83afe9ef89a1e6d75c23875f229f13bf5551014e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Foverload%2Farg3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Foverload%2Farg3.C?ref=83afe9ef89a1e6d75c23875f229f13bf5551014e", "patch": "@@ -14,7 +14,7 @@ struct B : A\n   B(B&);  // { dg-message \"note\" \"\" }\n };\n \n-void foo(B);\t\t\t// { dg-error \"initializing\" }\n+void foo(B);\t\t\t// { dg-message \"initializing\" }\n \n void bar()\n {"}, {"sha": "b634b05c1ec7b1e6990ff15e9368934c44e14238", "filename": "gcc/testsuite/g++.dg/overload/copy1.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/83afe9ef89a1e6d75c23875f229f13bf5551014e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Foverload%2Fcopy1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/83afe9ef89a1e6d75c23875f229f13bf5551014e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Foverload%2Fcopy1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Foverload%2Fcopy1.C?ref=83afe9ef89a1e6d75c23875f229f13bf5551014e", "patch": "@@ -10,7 +10,7 @@ struct B\n \n struct A\n {\n-  A (B);\t\t\t// { dg-error \"initializing\" }\n+  A (B);\t\t\t// { dg-message \"initializing\" }\n };\n \n B"}, {"sha": "29f649f3af27a35eb2bbfa5e2ac9c6f2b032134b", "filename": "gcc/testsuite/g++.dg/overload/volatile1.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/83afe9ef89a1e6d75c23875f229f13bf5551014e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Foverload%2Fvolatile1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/83afe9ef89a1e6d75c23875f229f13bf5551014e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Foverload%2Fvolatile1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Foverload%2Fvolatile1.C?ref=83afe9ef89a1e6d75c23875f229f13bf5551014e", "patch": "@@ -3,7 +3,7 @@\n \n struct A { };\n \n-void f (A);\t\t\t// { dg-error \"argument 1\" }\n+void f (A);\t\t\t// { dg-message \"\" }\n void (*g)(A);\n \n int main()"}, {"sha": "944906c164823b1100c3467a729c16f7c6166faa", "filename": "gcc/testsuite/g++.dg/tc1/dr152.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/83afe9ef89a1e6d75c23875f229f13bf5551014e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftc1%2Fdr152.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/83afe9ef89a1e6d75c23875f229f13bf5551014e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftc1%2Fdr152.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftc1%2Fdr152.C?ref=83afe9ef89a1e6d75c23875f229f13bf5551014e", "patch": "@@ -7,7 +7,7 @@ namespace N1 {\n     X();\t\t\t// { dg-message \"note\" }\n     explicit X(const X&);\n   };\n-  void f(X);\t\t\t// { dg-error \"initializing\" }\n+  void f(X);\t\t\t// { dg-message \"initializing\" }\n   int foo() \n   { \n     X x; \n@@ -24,7 +24,7 @@ namespace N2 {\n   };\n \n   template <class T>\n-  void f(T ) {}\t\t\t// { dg-error \"initializing\" }\n+  void f(T) {}\t\t\t// { dg-message \"initializing\" }\n   \n   template <class T>\n   int foo() "}, {"sha": "871e503ad87e4406fcfaa193b03fd3f8b7e2a31c", "filename": "gcc/testsuite/g++.dg/template/incomplete4.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/83afe9ef89a1e6d75c23875f229f13bf5551014e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fincomplete4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/83afe9ef89a1e6d75c23875f229f13bf5551014e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fincomplete4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fincomplete4.C?ref=83afe9ef89a1e6d75c23875f229f13bf5551014e", "patch": "@@ -5,7 +5,7 @@ class A;\t// { dg-error \"forward declaration\" }\n \n template <typename T> struct X\n {\n-  static int f (T);\t\t// { dg-error \"initializing\" }\n+  static int f (T);\t\t// { dg-message \"initializing\" }\n   static const T &make ();\n };\n "}, {"sha": "b0a178b625746e36dabda6d055428a59663a613a", "filename": "gcc/testsuite/g++.dg/template/incomplete5.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/83afe9ef89a1e6d75c23875f229f13bf5551014e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fincomplete5.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/83afe9ef89a1e6d75c23875f229f13bf5551014e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fincomplete5.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fincomplete5.C?ref=83afe9ef89a1e6d75c23875f229f13bf5551014e", "patch": "@@ -5,7 +5,7 @@ class A;\t// { dg-error \"forward declaration\" }\n \n template <typename T> struct X\n {\n-  static int f (T);\t\t// { dg-error \"initializing\" }\n+  static int f (T);\t\t// { dg-message \"initializing\" }\n   static const T &make ();\n   static const bool value = sizeof (f (make ())) == sizeof (int);\t// { dg-error \"invalid use of incomplete type\" }\n };"}, {"sha": "c307c300892e2139700da4b2dac09d4292e85701", "filename": "gcc/testsuite/g++.dg/warn/incomplete2.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/83afe9ef89a1e6d75c23875f229f13bf5551014e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2Fincomplete2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/83afe9ef89a1e6d75c23875f229f13bf5551014e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2Fincomplete2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2Fincomplete2.C?ref=83afe9ef89a1e6d75c23875f229f13bf5551014e", "patch": "@@ -3,7 +3,7 @@\n \n class A;\t// { dg-error \"forward declaration\" }\n \n-int f (A);\t\t\t// { dg-error \"initializing\" }\n+int f (A);\t\t\t// { dg-message \"initializing\" }\n const A &make ();\n \n int"}, {"sha": "f92e8e1204741235701bd9b4f179bc8f3460ce65", "filename": "gcc/testsuite/g++.old-deja/g++.bob/inherit2.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/83afe9ef89a1e6d75c23875f229f13bf5551014e/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.bob%2Finherit2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/83afe9ef89a1e6d75c23875f229f13bf5551014e/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.bob%2Finherit2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.bob%2Finherit2.C?ref=83afe9ef89a1e6d75c23875f229f13bf5551014e", "patch": "@@ -15,7 +15,7 @@ public:\n   B(void) {}\n };\n \n-void f(B b) {\t\t\t// { dg-error \"initializing\" }\n+void f(B b) {\t\t\t// { dg-message \"initializing\" }\n }\n \n void g() {"}, {"sha": "3e672efbe423468959a60981d322ba1e8054c925", "filename": "gcc/testsuite/g++.old-deja/g++.pt/auto_ptr.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/83afe9ef89a1e6d75c23875f229f13bf5551014e/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fauto_ptr.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/83afe9ef89a1e6d75c23875f229f13bf5551014e/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fauto_ptr.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fauto_ptr.C?ref=83afe9ef89a1e6d75c23875f229f13bf5551014e", "patch": "@@ -44,7 +44,7 @@ struct Derived : Base { Derived() {} };\n \n auto_ptr<Derived> f() { auto_ptr<Derived> null(0); return null; }\n void g(auto_ptr<Derived>) { }\n-void h(auto_ptr<Base>) { }\t// { dg-error \"initializing\" }\n+void h(auto_ptr<Base>) { }\t// { dg-message \"initializing\" }\n \n int main() {\n     auto_ptr<Base> x(f());"}, {"sha": "aecbd60d97012fb891fd7d1b6c2e8b44c0cf98c0", "filename": "gcc/testsuite/g++.old-deja/g++.pt/crash9.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/83afe9ef89a1e6d75c23875f229f13bf5551014e/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fcrash9.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/83afe9ef89a1e6d75c23875f229f13bf5551014e/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fcrash9.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fcrash9.C?ref=83afe9ef89a1e6d75c23875f229f13bf5551014e", "patch": "@@ -1,7 +1,7 @@\n // { dg-do assemble  }\n \n template <class T>\n-void f(T) {}\t\t\t// { dg-error \"initializing\" }\n+void f(T) {}\t\t\t// { dg-message \"initializing\" }\n \n class C;    // { dg-error \"forward declaration\" }\n "}]}