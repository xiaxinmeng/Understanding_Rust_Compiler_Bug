{"sha": "cea526b81c147fe1170f72cbcb3d795e8bd09293", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2VhNTI2YjgxYzE0N2ZlMTE3MGY3MmNiY2IzZDc5NWU4YmQwOTI5Mw==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2015-01-20T04:18:12Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2015-01-20T04:18:12Z"}, "message": "runtime: No special case for 386 complex in FFI support.\n\nAll supported libgo 386 targets now have complex support in\nlibffi.\n\nFrom Uros Bizjak.\n\nFrom-SVN: r219877", "tree": {"sha": "9e23286cabfbef3477b1c28bad1e9482f4b6efb2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9e23286cabfbef3477b1c28bad1e9482f4b6efb2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cea526b81c147fe1170f72cbcb3d795e8bd09293", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cea526b81c147fe1170f72cbcb3d795e8bd09293", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cea526b81c147fe1170f72cbcb3d795e8bd09293", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cea526b81c147fe1170f72cbcb3d795e8bd09293/comments", "author": null, "committer": null, "parents": [{"sha": "fdce7209c23212b50f08604f242e9bbb5281818b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fdce7209c23212b50f08604f242e9bbb5281818b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fdce7209c23212b50f08604f242e9bbb5281818b"}], "stats": {"total": 16, "additions": 1, "deletions": 15}, "files": [{"sha": "aafc7b205e0fb579a0fde75526eea84cc48a4d15", "filename": "libgo/runtime/go-ffi.c", "status": "modified", "additions": 1, "deletions": 15, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cea526b81c147fe1170f72cbcb3d795e8bd09293/libgo%2Fruntime%2Fgo-ffi.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cea526b81c147fe1170f72cbcb3d795e8bd09293/libgo%2Fruntime%2Fgo-ffi.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fruntime%2Fgo-ffi.c?ref=cea526b81c147fe1170f72cbcb3d795e8bd09293", "patch": "@@ -289,21 +289,7 @@ go_func_return_ffi (const struct __go_func_type *func)\n   types = (const struct __go_type_descriptor **) func->__out.__values;\n \n   if (count == 1)\n-    {\n-\n-#if defined (__i386__) && !defined (__x86_64__)\n-      /* FFI does not support complex types.  On 32-bit x86, a\n-\t complex64 will be returned in %eax/%edx.  We normally tell\n-\t FFI that a complex64 is a struct of two floats.  On 32-bit\n-\t x86 a struct of two floats is returned via a hidden first\n-\t pointer parameter.  Fortunately we can make everything work\n-\t by pretending that complex64 is int64.  */\n-      if ((types[0]->__code & GO_CODE_MASK) == GO_COMPLEX64)\n-\treturn &ffi_type_sint64;\n-#endif\n-\n-      return go_type_to_ffi (types[0]);\n-    }\n+    return go_type_to_ffi (types[0]);\n \n   ret = (ffi_type *) __go_alloc (sizeof (ffi_type));\n   ret->type = FFI_TYPE_STRUCT;"}]}