{"sha": "633d9236a135cbeff21d9f51781fa12c88928f8a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjMzZDkyMzZhMTM1Y2JlZmYyMWQ5ZjUxNzgxZmExMmM4ODkyOGY4YQ==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2012-05-22T09:35:32Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2012-05-22T09:35:32Z"}, "message": "re PR middle-end/51071 (ICE in gimple_has_side_effects, at gimple.c:2513)\n\n2012-05-22  Richard Guenther  <rguenther@suse.de>\n\n\tPR middle-end/51071\n\t* gcc.dg/torture/pr51071-2.c: New testcase.\n\nFrom-SVN: r187768", "tree": {"sha": "edd933075bb00936f6f414ee65988cde61a30349", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/edd933075bb00936f6f414ee65988cde61a30349"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/633d9236a135cbeff21d9f51781fa12c88928f8a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/633d9236a135cbeff21d9f51781fa12c88928f8a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/633d9236a135cbeff21d9f51781fa12c88928f8a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/633d9236a135cbeff21d9f51781fa12c88928f8a/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "27eb31c9de20cd2eb1980c49d1dc2e3bc48483f0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/27eb31c9de20cd2eb1980c49d1dc2e3bc48483f0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/27eb31c9de20cd2eb1980c49d1dc2e3bc48483f0"}], "stats": {"total": 43, "additions": 43, "deletions": 0}, "files": [{"sha": "0d21111d5268fe28857aef1f18be6697b2eaff3a", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/633d9236a135cbeff21d9f51781fa12c88928f8a/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/633d9236a135cbeff21d9f51781fa12c88928f8a/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=633d9236a135cbeff21d9f51781fa12c88928f8a", "patch": "@@ -1,3 +1,8 @@\n+2012-05-22  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR middle-end/51071\n+\t* gcc.dg/torture/pr51071-2.c: New testcase.\n+\n 2012-05-22  Paolo Bonzini  <bonzini@gnu.org>\n \n \tPR tree-optimization/53336"}, {"sha": "f66a89f3958af3e81be94477966a1d36cfcd6e96", "filename": "gcc/testsuite/gcc.dg/torture/pr51071-2.c", "status": "added", "additions": 38, "deletions": 0, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/633d9236a135cbeff21d9f51781fa12c88928f8a/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr51071-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/633d9236a135cbeff21d9f51781fa12c88928f8a/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr51071-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr51071-2.c?ref=633d9236a135cbeff21d9f51781fa12c88928f8a", "patch": "@@ -0,0 +1,38 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-fno-delete-null-pointer-checks\" } */\n+\n+extern struct module __this_module;\n+static inline void\n+trace_module_get  (struct module *mod, unsigned long ip) { }\n+struct module;\n+static inline __attribute__((no_instrument_function))\n+int try_module_get(struct module *module)\n+{\n+  int ret = 1;\n+  if (module)\n+    {\n+      if (module_is_live(module))\n+\t{\n+\t  __label__ __here;\n+\t  asm(\"\");\n+\t  __here:\n+\t  trace_module_get(module, (unsigned long)&&__here);\n+\t}\n+      else\n+\tret = 0;\n+    }\n+  return ret;\n+}\n+struct net_device;\n+struct net_device_ops {\n+    int (*ndo_open)(struct net_device *dev);\n+};\n+int t3e3_open(struct net_device *dev)\n+{\n+  int ret = hdlc_open(dev);\n+  if (ret)\n+    return ret;\n+  try_module_get((&__this_module));\n+  return 0;\n+}\n+const struct net_device_ops t3e3_ops = { .ndo_open = t3e3_open };"}]}