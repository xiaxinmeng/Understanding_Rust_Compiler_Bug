{"sha": "a5b62485c35a3c9a8e20ffce49b99f12791238e1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTViNjI0ODVjMzVhM2M5YThlMjBmZmNlNDliOTlmMTI3OTEyMzhlMQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2004-12-08T11:49:44Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2004-12-08T11:49:44Z"}, "message": "g-socket.ads (Get_Host_By_Address, [...]): Clarify documentation of the behaviour of these functions when...\n\n\t* g-socket.ads (Get_Host_By_Address, Get_Host_By_Name): Clarify\n\tdocumentation of the behaviour of these functions when passed an IP\n\taddress that has no record in the system hosts database and no reverse\n\trecord in the DNS.\n\n\t* cstand.adb, a-tags.ads: Fix typos in comment.\n\n\t* exp_ch2.adb, exp_ch3.adb, exp_ch5.adb, exp_ch8.adb,\n\texp_ch9.adb, exp_pakd.adb, interfac.ads, sem_ch6.adb,\n\tsem_ch7.adb, sem_ch10.adb, sem_ch13.adb, sem_ch3.adb,\n\ts-poosiz.ads: Minor reformatting\n\n\t* make.adb: Minor reformatting\n\tAdd some ??? comments asking for more comments\n\n\t* s-poosiz.adb: Minor reformatting\n\tAdd comments on alignment requirement\n\n\t* sinfo.ads: Remove obsolete comment and fix typo.\n\n\t* gnat_ugn.texi: Update the section \"The GNAT Driver and Project\n\tFiles\" with the new tool and package names.\n\tReformatting to suppress most of the warnings for line too long\n\tDocument the new section \"Project Search Path:\" in the output of\n\tgnatls -v.\n\tAdd gnatmetric section\n\n\t* vms_data.ads: Correct GNAT METRIC qualifiers: -I-, -Idir and\n\t-gnatec= are not direct switches of gnatmetric. Changed -eis to -eps\n\tand -eit to -ept. Added qualifier\n\t/ELEMENT_METRICS=CONSTRUCT_NESTING_MAX for new switch -ec.\n\nFrom-SVN: r91896", "tree": {"sha": "356a0ddde24c2878297f41885b557aa46dd9d566", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/356a0ddde24c2878297f41885b557aa46dd9d566"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a5b62485c35a3c9a8e20ffce49b99f12791238e1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a5b62485c35a3c9a8e20ffce49b99f12791238e1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a5b62485c35a3c9a8e20ffce49b99f12791238e1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a5b62485c35a3c9a8e20ffce49b99f12791238e1/comments", "author": null, "committer": null, "parents": [{"sha": "4e8c0836b4fd5d08cc776a07a134796f0b405808", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4e8c0836b4fd5d08cc776a07a134796f0b405808", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4e8c0836b4fd5d08cc776a07a134796f0b405808"}], "stats": {"total": 1523, "additions": 994, "deletions": 529}, "files": [{"sha": "5dc3d1e378d41ecdffbb4f63e9e2e02fae54c1f5", "filename": "gcc/ada/a-tags.ads", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5b62485c35a3c9a8e20ffce49b99f12791238e1/gcc%2Fada%2Fa-tags.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5b62485c35a3c9a8e20ffce49b99f12791238e1/gcc%2Fada%2Fa-tags.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-tags.ads?ref=a5b62485c35a3c9a8e20ffce49b99f12791238e1", "patch": "@@ -60,11 +60,11 @@ private\n    ---------------------------------------------------------------\n \n    --  GNAT's Dispatch Table format is customizable in order to match the\n-   --  format used in another langauge. GNAT supports programs that use\n-   --  two different dispatch table format at the same time: the native\n+   --  format used in another language. GNAT supports programs that use\n+   --  two different dispatch table formats at the same time: the native\n    --  format that supports Ada 95 tagged types and which is described in\n-   --  Ada.Tags and a foreign format for types that are imported from some\n-   --  other language (typically C++) which is described in interfaces.cpp.\n+   --  Ada.Tags, and a foreign format for types that are imported from some\n+   --  other language (typically C++) which is described in Interfaces.CPP.\n    --  The runtime information kept for each tagged type is separated into\n    --  two objects: the Dispatch Table and the Type Specific Data record.\n    --  These two objects are allocated statically using the constants:"}, {"sha": "3962655f52940fbaa6cc2840593dcf79163eff6e", "filename": "gcc/ada/cstand.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5b62485c35a3c9a8e20ffce49b99f12791238e1/gcc%2Fada%2Fcstand.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5b62485c35a3c9a8e20ffce49b99f12791238e1/gcc%2Fada%2Fcstand.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fcstand.adb?ref=a5b62485c35a3c9a8e20ffce49b99f12791238e1", "patch": "@@ -1045,7 +1045,7 @@ package body CStand is\n             Delta_Val := UR_From_Components (UI_From_Int (20), Uint_3, 10);\n \n          --  In standard 64-bit mode, the size is 64-bits and the delta and\n-         --  amll values are set to nanoseconds (1.0**(10.0**(-9))\n+         --  small values are set to nanoseconds (1.0**(10.0**(-9))\n \n          else\n             Dlo := Intval (Type_Low_Bound (Standard_Integer_64));"}, {"sha": "e68e9a67a6e9f3a2f6d7f7091e9aea1d5c1888f9", "filename": "gcc/ada/exp_ch2.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5b62485c35a3c9a8e20ffce49b99f12791238e1/gcc%2Fada%2Fexp_ch2.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5b62485c35a3c9a8e20ffce49b99f12791238e1/gcc%2Fada%2Fexp_ch2.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch2.adb?ref=a5b62485c35a3c9a8e20ffce49b99f12791238e1", "patch": "@@ -661,7 +661,7 @@ package body Exp_Ch2 is\n       Set_Etype  (N, Etype (Prival (E)));\n       Scop := Current_Scope;\n \n-      --  Find entity for protected operation, which must be on scope stack.\n+      --  Find entity for protected operation, which must be on scope stack\n \n       while not Is_Protected_Type (Scope (Scop)) loop\n          Scop := Scope (Scop);"}, {"sha": "27173efe787991570dee4e59ac0dd7d3a94527ac", "filename": "gcc/ada/exp_ch3.adb", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5b62485c35a3c9a8e20ffce49b99f12791238e1/gcc%2Fada%2Fexp_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5b62485c35a3c9a8e20ffce49b99f12791238e1/gcc%2Fada%2Fexp_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch3.adb?ref=a5b62485c35a3c9a8e20ffce49b99f12791238e1", "patch": "@@ -640,7 +640,7 @@ package body Exp_Ch3 is\n       P    : Node_Id;\n \n    begin\n-      --  Nothing to do if there is no task hierarchy.\n+      --  Nothing to do if there is no task hierarchy\n \n       if Restriction_Active (No_Task_Hierarchy) then\n          return;\n@@ -686,7 +686,7 @@ package body Exp_Ch3 is\n          end loop;\n       end if;\n \n-      --  Now define the renaming of the master_id.\n+      --  Now define the renaming of the master_id\n \n       M_Id :=\n         Make_Defining_Identifier (Loc,\n@@ -1310,7 +1310,7 @@ package body Exp_Ch3 is\n       Decl : Node_Id;\n \n    begin\n-      --  Nothing to do if there is no task hierarchy.\n+      --  Nothing to do if there is no task hierarchy\n \n       if Restriction_Active (No_Task_Hierarchy) then\n          return;\n@@ -2663,7 +2663,7 @@ package body Exp_Ch3 is\n                   Expressions => New_List (New_Occurrence_Of (Rnn, Loc))))),\n           End_Label  => Empty);\n \n-      --  Build exit condition.\n+      --  Build exit condition\n \n       declare\n          F_Ass : constant List_Id := New_List;\n@@ -3970,7 +3970,7 @@ package body Exp_Ch3 is\n          end loop;\n       end if;\n \n-      --  Now build an array declaration.\n+      --  Now build an array declaration\n \n       --    typA : array (Natural range 0 .. num - 1) of ctype :=\n       --             (v, v, v, v, v, ....)\n@@ -4081,7 +4081,7 @@ package body Exp_Ch3 is\n \n          if Enumeration_Rep (Ent) = Last_Repval then\n \n-            --  Another special case: for a single literal, Pos is zero.\n+            --  Another special case: for a single literal, Pos is zero\n \n             Pos_Expr := Make_Integer_Literal (Loc, Uint_0);\n \n@@ -4542,7 +4542,7 @@ package body Exp_Ch3 is\n \n          if RACW_Seen then\n \n-            --  If there are RACWs designating this type, make stubs now.\n+            --  If there are RACWs designating this type, make stubs now\n \n             Remote_Types_Tagged_Full_View_Encountered (Def_Id);\n          end if;\n@@ -4574,7 +4574,7 @@ package body Exp_Ch3 is\n             begin\n                if Scope (Old_C) = Base_Type (Def_Id) then\n \n-                  --  The entity is the one in the parent. Create new one.\n+                  --  The entity is the one in the parent. Create new one\n \n                   New_C := New_Copy (Old_C);\n                   Set_Parent (New_C, Parent (Old_C));"}, {"sha": "819b576ca45cfae040c33ae93d90178d40865f39", "filename": "gcc/ada/exp_ch5.adb", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5b62485c35a3c9a8e20ffce49b99f12791238e1/gcc%2Fada%2Fexp_ch5.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5b62485c35a3c9a8e20ffce49b99f12791238e1/gcc%2Fada%2Fexp_ch5.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch5.adb?ref=a5b62485c35a3c9a8e20ffce49b99f12791238e1", "patch": "@@ -387,7 +387,7 @@ package body Exp_Ch5 is\n          --       File.Storage := Contents;\n          --    end Write_All;\n \n-         --  We expand to a loop in either of these two cases.\n+         --  We expand to a loop in either of these two cases\n \n          --  Question for future thought. Another potentially more efficient\n          --  approach would be to create the actual subtype, and then do an\n@@ -1459,7 +1459,7 @@ package body Exp_Ch5 is\n                end if;\n             end loop;\n \n-            --  Now we can insert and analyze the pre-assignment.\n+            --  Now we can insert and analyze the pre-assignment\n \n             --  If the right-hand side requires a transient scope, it has\n             --  already been placed on the stack. However, the declaration is\n@@ -2480,7 +2480,7 @@ package body Exp_Ch5 is\n                            Enumeration_Rep (First_Literal (Btype))),\n                       Right_Opnd => New_Reference_To (New_Id, Loc)));\n             else\n-               --  Use the constructed array Enum_Pos_To_Rep.\n+               --  Use the constructed array Enum_Pos_To_Rep\n \n                Expr :=\n                  Make_Indexed_Component (Loc,\n@@ -2667,7 +2667,7 @@ package body Exp_Ch5 is\n       if No (Exp) then\n          Kind := Ekind (Scope_Id);\n \n-         --  If it is a return from procedures do no extra steps.\n+         --  If it is a return from procedures do no extra steps\n \n          if Kind = E_Procedure or else Kind = E_Generic_Procedure then\n             return;"}, {"sha": "730d464b3a8f55e27c7eab8b6cb685757b6251b0", "filename": "gcc/ada/exp_ch8.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5b62485c35a3c9a8e20ffce49b99f12791238e1/gcc%2Fada%2Fexp_ch8.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5b62485c35a3c9a8e20ffce49b99f12791238e1/gcc%2Fada%2Fexp_ch8.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch8.adb?ref=a5b62485c35a3c9a8e20ffce49b99f12791238e1", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2002 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2004 Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -182,7 +182,7 @@ package body Exp_Ch8 is\n          elsif K = N_Type_Conversion then\n             Evaluate_Name (Expression (Fname));\n \n-         --  For a function call, we evaluate the call.\n+         --  For a function call, we evaluate the call\n \n          elsif K = N_Function_Call then\n             Force_Evaluation (Fname);"}, {"sha": "dbd692dd980debb7cb201fc293ad14a49d328dfe", "filename": "gcc/ada/exp_ch9.adb", "status": "modified", "additions": 71, "deletions": 67, "changes": 138, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5b62485c35a3c9a8e20ffce49b99f12791238e1/gcc%2Fada%2Fexp_ch9.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5b62485c35a3c9a8e20ffce49b99f12791238e1/gcc%2Fada%2Fexp_ch9.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch9.adb?ref=a5b62485c35a3c9a8e20ffce49b99f12791238e1", "patch": "@@ -294,7 +294,7 @@ package body Exp_Ch9 is\n       S    : Node_Id;\n \n       function Actual_Family_Offset (Hi, Lo : Node_Id) return Node_Id;\n-      --  Compute difference between bounds of entry family.\n+      --  Compute difference between bounds of entry family\n \n       --------------------------\n       -- Actual_Family_Offset --\n@@ -358,7 +358,7 @@ package body Exp_Ch9 is\n       --  designated one, to which is added the index expression, if this\n       --  expression denotes a member of a family.\n \n-      --  The following is a place holder for the count of simple entries.\n+      --  The following is a place holder for the count of simple entries\n \n       Num := Make_Integer_Literal (Sloc, 1);\n \n@@ -384,7 +384,7 @@ package body Exp_Ch9 is\n          Expr := Num;\n       end if;\n \n-      --  Now add lengths of preceding entries and entry families.\n+      --  Now add lengths of preceding entries and entry families\n \n       Prev := First_Entity (Ttyp);\n \n@@ -411,7 +411,7 @@ package body Exp_Ch9 is\n                   Right_Opnd =>\n                     Make_Integer_Literal (Sloc, 1)));\n \n-         --  Other components are anonymous types to be ignored.\n+         --  Other components are anonymous types to be ignored\n \n          else\n             null;\n@@ -990,7 +990,7 @@ package body Exp_Ch9 is\n       Siz   : Node_Id := Empty;\n \n       procedure Add_If_Clause (Expr : Node_Id);\n-      --  Add test for range of current entry.\n+      --  Add test for range of current entry\n \n       function Convert_Discriminant_Ref (Bound : Node_Id) return Node_Id;\n       --  If a bound of an entry is given by a discriminant, retrieve the\n@@ -1008,11 +1008,11 @@ package body Exp_Ch9 is\n                        Expression => Make_Integer_Literal (Loc, Index + 1)));\n \n       begin\n-         --  Index for current entry body.\n+         --  Index for current entry body\n \n          Index := Index + 1;\n \n-         --  Compute total length of entry queues so far.\n+         --  Compute total length of entry queues so far\n \n          if No (Siz) then\n             Siz := Expr;\n@@ -1720,7 +1720,7 @@ package body Exp_Ch9 is\n            Parameter_Associations => Uactuals);\n       end if;\n \n-      --  Wrap call in block that will be covered by an at_end handler.\n+      --  Wrap call in block that will be covered by an at_end handler\n \n       if not Exc_Safe then\n          Unprot_Call := Make_Block_Statement (Loc,\n@@ -2029,7 +2029,7 @@ package body Exp_Ch9 is\n             Conctyp := Designated_Type (Conctyp);\n          end if;\n \n-         --  Special case for protected subprogram calls.\n+         --  Special case for protected subprogram calls\n \n          if Is_Protected_Type (Conctyp)\n            and then Is_Subprogram (Entity (Ename))\n@@ -2678,10 +2678,8 @@ package body Exp_Ch9 is\n \n    --    objectV!(name)._Object\n \n-   --  for a protected object.\n-\n-   --  For the case of an access to a concurrent object,\n-   --  there is an extra explicit dereference:\n+   --  for a protected object. For the case of an access to a concurrent\n+   --  object, there is an extra explicit dereference:\n \n    --    taskV!(name.all)._Task_Id\n    --    objectV!(name.all)._Object\n@@ -2872,7 +2870,7 @@ package body Exp_Ch9 is\n       --  designated one, to which is added the index expression, if this\n       --  expression denotes a member of a family.\n \n-      --  The following is a place holder for the count of simple entries.\n+      --  The following is a place holder for the count of simple entries\n \n       Num := Make_Integer_Literal (Sloc, 1);\n \n@@ -2916,7 +2914,7 @@ package body Exp_Ch9 is\n          Expr := Num;\n       end if;\n \n-      --  Now add lengths of preceding entries and entry families.\n+      --  Now add lengths of preceding entries and entry families\n \n       Prev := First_Entity (Ttyp);\n \n@@ -2938,7 +2936,7 @@ package body Exp_Ch9 is\n               Left_Opnd  => Expr,\n               Right_Opnd => Family_Size (Sloc, Hi, Lo, Ttyp));\n \n-         --  Other components are anonymous types to be ignored.\n+         --  Other components are anonymous types to be ignored\n \n          else\n             null;\n@@ -3117,7 +3115,7 @@ package body Exp_Ch9 is\n                pragma Assert (Nkind (Acc_Alt) = N_Accept_Alternative);\n                pragma Assert (Nkind (Sel_Acc) = N_Selective_Accept);\n \n-               --  ??? Consider a single label for select statements.\n+               --  ??? Consider a single label for select statements\n \n                if Present (Handled_Statement_Sequence (N)) then\n                   Prepend (Ldecl2,\n@@ -3262,7 +3260,7 @@ package body Exp_Ch9 is\n       Def1   : Node_Id;\n \n    begin\n-      --  Create access to protected subprogram with full signature.\n+      --  Create access to protected subprogram with full signature\n \n       if Nkind (Type_Definition (N)) = N_Access_Function_Definition then\n          Def1 :=\n@@ -3739,19 +3737,19 @@ package body Exp_Ch9 is\n    -- Expand_N_Asynchronous_Select --\n    ----------------------------------\n \n-   --  This procedure assumes that the trigger statement is an entry\n-   --  call. A delay alternative should already have been expanded\n-   --  into an entry call to the appropriate delay object Wait entry.\n+   --  This procedure assumes that the trigger statement is an entry call. A\n+   --  delay alternative should already have been expanded into an entry call\n+   --  to the appropriate delay object Wait entry.\n \n-   --  If the trigger is a task entry call, the select is implemented\n-   --  with Task_Entry_Call:\n+   --  If the trigger is a task entry call, the select is implemented with\n+   --  a Task_Entry_Call:\n \n    --    declare\n    --       B : Boolean;\n    --       C : Boolean;\n    --       P : parms := (parm, parm, parm);\n \n-   --        --  Clean is added by Exp_Ch7.Expand_Cleanup_Actions.\n+   --        --  Clean is added by Exp_Ch7.Expand_Cleanup_Actions\n \n    --       procedure _clean is\n    --       begin\n@@ -3867,16 +3865,16 @@ package body Exp_Ch9 is\n    --       ...\n    --  end;\n \n-   --  The job is to convert this to the asynchronous form.\n+   --  The job is to convert this to the asynchronous form\n \n-   --  If the trigger is a delay statement, it will have been expanded\n-   --  into a call to one of the GNARL delay procedures. This routine\n-   --  will convert this into a protected entry call on a delay object\n-   --  and then continue processing as for a protected entry call trigger.\n-   --  This requires declaring a Delay_Block object and adding a pointer\n-   --  to this object to the parameter list of the delay procedure to form\n-   --  the parameter list of the entry call. This object is used by\n-   --  the runtime to queue the delay request.\n+   --  If the trigger is a delay statement, it will have been expanded into a\n+   --  call to one of the GNARL delay procedures. This routine will convert\n+   --  this into a protected entry call on a delay object and then continue\n+   --  processing as for a protected entry call trigger. This requires\n+   --  declaring a Delay_Block object and adding a pointer to this object to\n+   --  the parameter list of the delay procedure to form the parameter list of\n+   --  the entry call. This object is used by the runtime to queue the delay\n+   --  request.\n \n    --  For a description of the use of P and the assignments after the\n    --  call, see Expand_N_Entry_Call_Statement.\n@@ -3961,7 +3959,7 @@ package body Exp_Ch9 is\n              Prefix => New_Reference_To (Dblock_Ent, Loc),\n              Attribute_Name => Name_Unchecked_Access));\n \n-         --  Create the inner block to protect the abortable part.\n+         --  Create the inner block to protect the abortable part\n \n          Hdle := New_List (\n            Make_Exception_Handler (Loc,\n@@ -4191,7 +4189,7 @@ package body Exp_Ch9 is\n              Defining_Identifier => Cancel_Param,\n              Object_Definition => New_Reference_To (Standard_Boolean, Loc)));\n \n-         --  Remove and save the call to Call_Simple.\n+         --  Remove and save the call to Call_Simple\n \n          Stmt := First (Stmts);\n \n@@ -4205,7 +4203,7 @@ package body Exp_Ch9 is\n \n          Call := Stmt;\n \n-         --  Create the inner block to protect the abortable part.\n+         --  Create the inner block to protect the abortable part\n \n          Hdle :=  New_List (\n            Make_Exception_Handler (Loc,\n@@ -4556,7 +4554,7 @@ package body Exp_Ch9 is\n       Index_Decl  : List_Id;\n \n    begin\n-      --  Add the renamings for private declarations and discriminants.\n+      --  Add the renamings for private declarations and discriminants\n \n       Add_Discriminal_Declarations\n         (Declarations (N), Defining_Identifier (Dec), Name_uObject, Loc);\n@@ -4882,7 +4880,7 @@ package body Exp_Ch9 is\n \n             when N_Subprogram_Body =>\n \n-               --  Exclude functions created to analyze defaults.\n+               --  Exclude functions created to analyze defaults\n \n                if not Is_Eliminated (Defining_Entity (Op_Body))\n                  and then not Is_Eliminated (Corresponding_Spec (Op_Body))\n@@ -5663,7 +5661,7 @@ package body Exp_Ch9 is\n \n    --        <some more of the statement sequence for entry>\n \n-   --        --  Requeue from an entry body to a task entry.\n+   --        --  Requeue from an entry body to a task entry\n \n    --        Requeue_Protected_To_Task_Entry (\n    --          New._task_id,\n@@ -5681,7 +5679,7 @@ package body Exp_Ch9 is\n    --     end;\n    --  end entE;\n \n-   --  Requeue of a task entry call to a task entry.\n+   --  Requeue of a task entry call to a task entry\n \n    --  Accept_Call (E, Ann);\n    --     <start of statement sequence for accept statement>\n@@ -5695,7 +5693,7 @@ package body Exp_Ch9 is\n    --     when all others =>\n    --        Exceptional_Complete_Rendezvous (Get_GNAT_Exception);\n \n-   --  Requeue of a task entry call to a protected entry.\n+   --  Requeue of a task entry call to a protected entry\n \n    --  Accept_Call (E, Ann);\n    --     <start of statement sequence for accept statement>\n@@ -5933,7 +5931,7 @@ package body Exp_Ch9 is\n       --  statements of an accept or delay alternative.\n \n       function Make_Select_Call (Select_Mode : Entity_Id) return Node_Id;\n-      --  Build call to Selective_Wait runtime routine.\n+      --  Build call to Selective_Wait runtime routine\n \n       procedure Process_Delay_Alternative (Alt : Node_Id; Index : Int);\n       --  Add code to compare value of delay with previous values, and\n@@ -6176,7 +6174,7 @@ package body Exp_Ch9 is\n \n             if No (Alt_Stats) then\n \n-               --  Accept with no body, followed by trailing statements.\n+               --  Accept with no body, followed by trailing statements\n \n                Choices := New_List (\n                  Make_Integer_Literal (Loc, Index));\n@@ -6225,7 +6223,8 @@ package body Exp_Ch9 is\n \n          Adjust_Condition (Condition (Alt));\n \n-         --  Determine the smallest specified delay.\n+         --  Determine the smallest specified delay\n+\n          --  for each delay alternative generate:\n \n          --    if guard-expression then\n@@ -6237,7 +6236,7 @@ package body Exp_Ch9 is\n          --       end if;\n          --    end if;\n \n-         --  The enclosing if-statement is omitted if there is no guard.\n+         --  The enclosing if-statement is omitted if there is no guard\n \n          if Delay_Count = 1\n            or else First_Delay\n@@ -6402,7 +6401,7 @@ package body Exp_Ch9 is\n \n             if No (Condition (Alt)) then\n \n-               --  This guard will always be open.\n+               --  This guard will always be open\n \n                Check_Guard := False;\n             end if;\n@@ -6467,7 +6466,7 @@ package body Exp_Ch9 is\n \n       Append (X, Decls);\n \n-      --  After this follow procedure declarations for each accept body.\n+      --  After this follow procedure declarations for each accept body\n \n       --    procedure Pnn is\n       --    begin\n@@ -6490,7 +6489,7 @@ package body Exp_Ch9 is\n       --  build them unconditionally, and not significantly inefficient,\n       --  since if they are short they will be inlined anyway.\n \n-      --  The procedure declarations have been assembled in Body_List.\n+      --  The procedure declarations have been assembled in Body_List\n \n       --  If delays are present, we must compute the required delay.\n       --  We first generate the declarations:\n@@ -6500,10 +6499,11 @@ package body Exp_Ch9 is\n       --    Delay_Val   : Some_Time_Type.Time;\n \n       --  Delay_Index will be set to the index of the minimum delay, i.e. the\n-      --   active delay that is actually chosen as the basis for the possible\n-      --   delay if an immediate rendez-vous is not possible.\n-      --   In the most common case there is a single delay statement, and this\n-      --   is handled specially.\n+      --  active delay that is actually chosen as the basis for the possible\n+      --  delay if an immediate rendez-vous is not possible.\n+\n+      --  In the most common case there is a single delay statement, and this\n+      --  is handled specially.\n \n       if Delay_Count > 0 then\n \n@@ -6655,17 +6655,17 @@ package body Exp_Ch9 is\n       --    ...\n       --    Exit:\n \n-      --  Generate label for common exit.\n+      --  Generate label for common exit\n \n       End_Lab := Make_And_Declare_Label (Num_Alts + 1);\n \n-      --  First entry is the default case, when no rendezvous is possible.\n+      --  First entry is the default case, when no rendezvous is possible\n \n       Choices := New_List (New_Reference_To (RTE (RE_No_Rendezvous), Loc));\n \n       if Else_Present then\n \n-         --  If no rendezvous is possible, the else part is executed.\n+         --  If no rendezvous is possible, the else part is executed\n \n          Lab := Make_And_Declare_Label (0);\n          Alt_Stats := New_List (\n@@ -6831,7 +6831,7 @@ package body Exp_Ch9 is\n             Insert_After (Parm, New_Reference_To (M, Loc));\n             Insert_After (Parm, New_Reference_To (D, Loc));\n \n-            --  Create a call to RTS.\n+            --  Create a call to RTS\n \n             Rewrite (Select_Call,\n               Make_Procedure_Call_Statement (Loc,\n@@ -7216,7 +7216,7 @@ package body Exp_Ch9 is\n       --  This is done last, since the corresponding record initialization\n       --  procedure will reference the previously created entities.\n \n-      --  Fill in the component declarations. First the _Task_Id field.\n+      --  Fill in the component declarations -- first the _Task_Id field\n \n       Append_To (Cdecls,\n         Make_Component_Declaration (Loc,\n@@ -7590,7 +7590,7 @@ package body Exp_Ch9 is\n \n       B := Make_Defining_Identifier (Loc, Name_uB);\n \n-      --  Create a boolean object used for a return parameter.\n+      --  Create a boolean object used for a return parameter\n \n       Prepend_To (Decls,\n         Make_Object_Declaration (Loc,\n@@ -7635,20 +7635,20 @@ package body Exp_Ch9 is\n \n          Dummy := Remove_Next (Next (Parm));\n \n-         --  In case some garbage is following the Cancel_Param, remove.\n+         --  Remove garbage is following the Cancel_Param if present\n \n          Dummy := Next (Parm);\n \n-         --  Remove the mode of the Protected_Entry_Call call, the\n-         --  Communication_Block of the Protected_Entry_Call call, and add a\n-         --  Duration and a Delay_Mode parameter\n+         --  Remove the mode of the Protected_Entry_Call call, then remove the\n+         --  Communication_Block of the Protected_Entry_Call call, and finally\n+         --  add Duration and a Delay_Mode parameter\n \n          pragma Assert (Present (Parm));\n          Rewrite (Parm, New_Reference_To (D, Loc));\n \n          Rewrite (Dummy, New_Reference_To (M, Loc));\n \n-         --  Add a Boolean flag for successful entry call.\n+         --  Add a Boolean flag for successful entry call\n \n          Append_To (Parms, New_Reference_To (B, Loc));\n \n@@ -8258,7 +8258,7 @@ package body Exp_Ch9 is\n               or else Restriction_Active (No_Entry_Queue) = False\n               or else Number_Entries (Ptyp) > 1\n             then\n-               --  Find index mapping function (clumsy but ok for now).\n+               --  Find index mapping function (clumsy but ok for now)\n \n                while Ekind (P_Arr) /= E_Function loop\n                   Next_Entity (P_Arr);\n@@ -8366,10 +8366,12 @@ package body Exp_Ch9 is\n                Next_Rep_Item (Ritem);\n             end loop;\n \n-            --  Appends the table argument we just built.\n+            --  Append the table argument we just built\n+\n             Append_To (Args, Make_Aggregate (Loc, Table));\n \n-            --  Appends the Install_Handler call to the statements.\n+            --  Append the Install_Handler call to the statements\n+\n             Append_To (L,\n               Make_Procedure_Call_Statement (Loc,\n                 Name => New_Reference_To (RTE (RE_Install_Handlers), Loc),\n@@ -8807,7 +8809,9 @@ package body Exp_Ch9 is\n             return Skip;\n \n          elsif Nkind (N) = N_String_Literal then\n-            --  array type, but bounds are constant.\n+\n+            --  Array type, but bounds are constant\n+\n             return OK;\n \n          elsif Nkind (N) = N_Object_Declaration"}, {"sha": "ca0ce8358e5996de7220806ca0d038df8f827563", "filename": "gcc/ada/exp_pakd.adb", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5b62485c35a3c9a8e20ffce49b99f12791238e1/gcc%2Fada%2Fexp_pakd.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5b62485c35a3c9a8e20ffce49b99f12791238e1/gcc%2Fada%2Fexp_pakd.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_pakd.adb?ref=a5b62485c35a3c9a8e20ffce49b99f12791238e1", "patch": "@@ -1347,7 +1347,7 @@ package body Exp_Pakd is\n \n          --      the \"or ...\" is omitted if rhs is constant and all 0 bits\n \n-         --      rhs is converted to the appropriate type.\n+         --      rhs is converted to the appropriate type\n \n          --      The result is converted back to the array type, since\n          --      otherwise we lose knowledge of the packed nature.\n@@ -1545,7 +1545,7 @@ package body Exp_Pakd is\n \n          --    Set_nn (Arr'address, Subscr, Bits_nn!(Rhs))\n \n-         --  where Subscr is the computed linear subscript.\n+         --  where Subscr is the computed linear subscript\n \n          declare\n             Bits_nn : constant Entity_Id := RTE (Bits_Id (Csiz));\n@@ -1556,7 +1556,7 @@ package body Exp_Pakd is\n          begin\n             if No (Bits_nn) then\n \n-               --  Error, most likely High_Integrity_Mode restriction.\n+               --  Error, most likely High_Integrity_Mode restriction\n \n                return;\n             end if;\n@@ -1774,7 +1774,7 @@ package body Exp_Pakd is\n       --  convert to the base type, since this would be unconstrained, and\n       --  hence not have a corresponding packed array type set.\n \n-      --  Note that both operands must be modular for this code to be used.\n+      --  Note that both operands must be modular for this code to be used\n \n       if Is_Modular_Integer_Type (PAT)\n            and then\n@@ -1916,7 +1916,7 @@ package body Exp_Pakd is\n          return;\n       end if;\n \n-      --  Remaining processing is for the bit-packed case.\n+      --  Remaining processing is for the bit-packed case\n \n       Obj := Relocate_Node (Prefix (N));\n       Convert_To_Actual_Subtype (Obj);\n@@ -1967,7 +1967,7 @@ package body Exp_Pakd is\n \n          --    Component_Type!(Get_nn (Arr'address, Subscr))\n \n-         --  where Subscr is the computed linear subscript.\n+         --  where Subscr is the computed linear subscript\n \n          declare\n             Get_nn : Entity_Id;"}, {"sha": "f56b4cc01c8e9dea7df669d4c74399b8e9ca3c61", "filename": "gcc/ada/g-socket.ads", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5b62485c35a3c9a8e20ffce49b99f12791238e1/gcc%2Fada%2Fg-socket.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5b62485c35a3c9a8e20ffce49b99f12791238e1/gcc%2Fada%2Fg-socket.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-socket.ads?ref=a5b62485c35a3c9a8e20ffce49b99f12791238e1", "patch": "@@ -502,12 +502,16 @@ package GNAT.Sockets is\n    function Get_Host_By_Address\n      (Address : Inet_Addr_Type;\n       Family  : Family_Type := Family_Inet) return Host_Entry_Type;\n-   --  Return host entry structure for the given inet address\n+   --  Return host entry structure for the given Inet address.\n+   --  Note that no result will be returned if there is no mapping of this\n+   --  IP address to a host name in the system tables (host database,\n+   --  DNS or otherwise).\n \n    function Get_Host_By_Name\n      (Name : String) return Host_Entry_Type;\n    --  Return host entry structure for the given host name. Here name\n-   --  is either a host name, or an IP address.\n+   --  is either a host name, or an IP address. If Name is an IP address,\n+   --  this is equivalent to Get_Host_By_Address (Inet_Addr (Name)).\n \n    function Host_Name return String;\n    --  Return the name of the current host"}, {"sha": "989a25f2ee891a9e57d7adf1df411ddfee09f94f", "filename": "gcc/ada/gnat_ugn.texi", "status": "modified", "additions": 514, "deletions": 6, "changes": 520, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5b62485c35a3c9a8e20ffce49b99f12791238e1/gcc%2Fada%2Fgnat_ugn.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5b62485c35a3c9a8e20ffce49b99f12791238e1/gcc%2Fada%2Fgnat_ugn.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_ugn.texi?ref=a5b62485c35a3c9a8e20ffce49b99f12791238e1", "patch": "@@ -176,6 +176,7 @@ Ada Core Technologies, Inc.@*\n * GNAT Project Manager::\n * The Cross-Referencing Tools gnatxref and gnatfind::\n * The GNAT Pretty-Printer gnatpp::\n+* The GNAT Metric Tool gnatmetric::\n * File Name Krunching Using gnatkr::\n * Preprocessing Using gnatprep::\n @ifset vms\n@@ -395,6 +396,10 @@ The GNAT Pretty-Printer gnatpp\n * Switches for gnatpp::\n * Formatting Rules::\n \n+The GNAT Metrics Tool gnatmetric\n+\n+* Switches for gnatmetric::\n+\n File Name Krunching Using gnatkr\n \n * About gnatkr::\n@@ -723,6 +728,11 @@ way to navigate through sources.\n version of an Ada source file with control over casing, indentation,\n comment placement, and other elements of program presentation style.\n \n+@item\n+@ref{The GNAT Metric Tool gnatmetric}, shows how to compute various\n+metrics for an Ada source file, such as the number of types and subprograms,\n+and assorted complexity measures.\n+\n @item\n @ref{File Name Krunching Using gnatkr}, describes the @code{gnatkr}\n file name krunching utility, used to handle shortened\n@@ -11185,11 +11195,17 @@ case insensitive. The following package names are legal:\n @item\n @code{Eliminate}\n @item\n+@code{Pretty_Printer}\n+@item\n+@code{Metrics}\n+@item\n @code{gnatls}\n @item\n @code{gnatstub}\n @item\n @code{IDE}\n+@item\n+@code{Language_Processing}\n @end itemize\n \n @noindent\n@@ -13205,6 +13221,8 @@ are project-aware:\n @command{^gnatls^gnatls^},\n @command{^gnatelim^gnatelim^},\n @command{^gnatpp^gnatpp^},\n+@command{^gnatmetric^gnatmetric^},\n+@command{^gnatstub^gnatstub^},\n and @command{^gnatxref^gnatxref^}. However, none of these tools can be invoked\n directly with a project file switch (@option{^-P^/PROJECT_FILE=^}).\n They must be invoked through the @command{gnat} driver.\n@@ -13245,6 +13263,8 @@ PREP or PREPROCESS to invoke @command{^gnatprep^gnatprep^}\n @item\n PP or PRETTY to invoke @command{^gnatpp^gnatpp^}\n @item\n+METRIC to invoke @command{^gnatmetric^gnatmetric^}\n+@item\n STUB to invoke @command{^gnatstub^gnatstub^}\n @item\n XREF to invoke @command{^gnatxref^gnatxref^}\n@@ -13286,8 +13306,8 @@ files may be specified with their path name preceded by '@@'.\n @end smallexample\n \n @noindent\n-In addition, for command BIND, COMP or COMPILE, FIND, ELIM, LS or LIST, LINK,\n-PP or PRETTY and XREF, the project file related switches\n+In addition, for commands BIND, COMP or COMPILE, FIND, ELIM, LS or LIST, LINK,\n+METRIC, PP or PRETTY, STUB and XREF, the project file related switches\n (@option{^-P^/PROJECT_FILE^},\n @option{^-X^/EXTERNAL_REFERENCE^} and\n @option{^-vP^/MESSAGES_PROJECT_FILE=^x}) may be used in addition to\n@@ -13299,8 +13319,15 @@ specified on the command line, it invokes @command{^gnatpp^gnatpp^} with all\n the immediate sources of the specified project file.\n \n @noindent\n-For each of these commands, there is optionally a corresponding  package\n-in the main project.\n+When GNAT METRIC is used with a project file, but with no source\n+specified on the command line, it invokes @command{^gnatmetric^gnatmetric^}\n+with all the immediate sources of the specified project file and with\n+@option{^-d^/DIRECTORY^} with the parameter pointing to the object directory\n+of the project.\n+\n+@noindent\n+For each of the following commands, there is optionally a corresponding\n+package in the main project.\n \n @itemize @bullet\n @item\n@@ -13322,10 +13349,18 @@ package @code{Gnatls} for command LS or LIST (invoking @code{^gnatls^gnatls^})\n @item\n package @code{Linker} for command LINK (invoking @code{^gnatlink^gnatlink^})\n \n+@item\n+package @code{Metrics} for command METRIC\n+(invoking @code{^gnatmetric^gnatmetric^})\n+\n @item\n package @code{Pretty_Printer} for command PP or PRETTY\n (invoking @code{^gnatpp^gnatpp^})\n \n+@item\n+package @code{Gnatstub} for command STUB\n+(invoking @code{^gnatstub^gnatstub^})\n+\n @item\n package @code{Cross_Reference} for command XREF (invoking\n @code{^gnatxref^gnatxref^})\n@@ -15395,6 +15430,474 @@ end Test;\n @end cartouche\n @end smallexample\n \n+@c *********************************\n+@node The GNAT Metric Tool gnatmetric\n+@chapter The GNAT Metric Tool @command{gnatmetric}\n+@findex gnatmetric\n+@cindex Metric tool\n+\n+@noindent\n+^The @command{gnatmetric} tool^GNAT METRIC^ is an ASIS-based utility\n+for computing various program metrics.\n+It takes an Ada source file as input and generates a file containing the\n+metrics data as output. Various switches control which\n+metrics are computed and output.\n+\n+@command{gnatmetric} generates and uses the ASIS\n+tree for the input source and thus requires the input to be syntactically and\n+semantically legal.\n+If this condition is not met, @command{gnatmetric} will generate\n+an error message; no metric information for this file will be\n+computed and reported.\n+\n+If the compilation unit contained in the input source depends semantically\n+upon units located outside the current directory, you have to provide the\n+source search path when invoking @command{gnatmetric}.\n+If these units are contained in files\n+with names that do not follow the GNAT file naming rules, you have to provide\n+the configuration file describing the corresponding naming scheme; see the\n+description of the @command{gnatmetric} switches below. Another possibility\n+is to use a project file and to\n+call @command{gnatmetric} through the @command{gnat} driver\n+\n+The @command{gnatmetric} command has the form\n+\n+@smallexample\n+$ gnatmetric [@var{switches}] @var{filename} [@var{-cargs gcc_switches}]\n+@end smallexample\n+\n+@noindent\n+where\n+@itemize @bullet\n+@item\n+@var{switches} is an optional sequence of switches specifying\n+the set of metrics to compute and defining the destination for the\n+output information\n+\n+@item\n+@var{filename} is the name (including the extension) of the source file to\n+process; ``wildcards'' or several file names on the same @command{gnatmetric}\n+command are allowed.  The file name may contain path information; in this case\n+it does not have to follow the GNAT file naming rules\n+\n+@item\n+@option{-cargs gcc_switches} is a list of switches that are valid switches for\n+@command{gcc}. They will be passed on to all compiler invocations made by\n+@command{gnatmetric} to generate the ASIS trees. Here you can provide\n+@option{-I} switches to form the source search path,\n+and use the @var{-gnatec} switch to set the configuration file.\n+@end itemize\n+\n+@menu\n+* Switches for gnatmetric::\n+@end menu\n+\n+@node Switches for gnatmetric\n+@section Switches for @command{gnatmetric}\n+\n+@noindent\n+The following subsections describe the various switches accepted by\n+@command{gnatmetric}, organized by category.\n+\n+@menu\n+* Output Files Control::\n+* Disable Metrics For Local Units::\n+* Line Metrics Control::\n+* Syntax Metrics Control::\n+* Complexity Metrics Control::\n+* Other gnatmetric Switches::\n+@end menu\n+\n+@node Output Files Control\n+@subsection Output File Control\n+@cindex Output file control in @command{gnatmetric}\n+\n+@noindent\n+@command{gnatmetric} has two output formats. It can generate the output in\n+textual (human-readable) form, and also as XML. By default only textual\n+output is generated.\n+\n+When generating the output in textual form, @command{gnatmetric} creates\n+for each Ada source file a corresponding text file\n+containing the computed metrics. By default, this file\n+is placed in the same directory as where the source file is located, and\n+its name is obtained\n+by appending the ^@file{.metrix}^@file{$METRIX}^ suffix to the name of the\n+input file.\n+\n+All the output information generated in XML format is placed in a single\n+file. By default this file is placed in the current directory and has the\n+name ^@file{metrix.xml}^@file{METRIX$XML}^.\n+\n+Some of the computed metrics are summed over the units passed to\n+@command{gnatmetric}; for example, the total number of lines of code.\n+By default this information is sent to @file{stdout}, but a file\n+can be specified with the @option{-og} switch.\n+\n+The following switches may be used to control the @command{gnatmetric} output:\n+\n+@table @option\n+@cindex @option{^-x^/XML^} (@command{gnatmetric})\n+@item ^-x^/XML^\n+Generate the XML output\n+\n+@cindex @option{^-nt^/NO_TEXT^} (@command{gnatmetric})\n+@item ^-nt^/NO_TEXT^\n+Do not generate the output in text form (implies @option{^-x^/XML^})\n+\n+@cindex @option{^-d^/DIRECTORY^} (@command{gnatmetric})\n+@item ^-d @var{output_dir}^/DIRECTORY=@var{output_dir}^\n+Put textual files with detailed metrics into @var{output_dir}\n+\n+@cindex @option{^-o^/SUFFIX_DETAILS^} (@command{gnatmetric})\n+@item ^-o @var{file_suffix}^/SUFFIX_DETAILS=@var{file_suffix}^\n+Use @var{file_suffix} to form the name of the file for the detailed metrics.\n+\n+@cindex @option{^-og^/GLOBAL_OUTPUT^} (@command{gnatmetric})\n+@item ^-og @var{file_name}^/GLOBAL_OUTPUT=@var{file_name}^\n+Put global metrics info into @var{file_name}\n+\n+@cindex @option{^-ox^/XML_OUTPUT^} (@command{gnatmetric})\n+@item ^-ox @var{file_name}^/XML_OUTPUT=@var{file_name}^\n+Put the XML output into @var{file_name} (also implies @option{^-x^/XML^})\n+\n+@cindex @option{^-sfn^/SHORT_SOURCE_FILE_NAME^} (@command{gnatmetric})\n+@item ^-sfn^/SHORT_SOURCE_FILE_NAME^\n+Use short source file names in the output\n+\n+@end table\n+\n+@node Disable Metrics For Local Units\n+@subsection Disable Metrics For Local Units\n+@cindex Disable Metrics For Local Units in @command{gnatmetric}\n+\n+@noindent\n+@command{gnatmetric} relies on the GNAT compilation model @minus{}\n+one compilation\n+unit per one source file. It computes some metrics for the whole source\n+file (mostly ``number of lines'' metrics) and it always computes metrics for\n+the top program unit of the corresponding compilation unit.\n+\n+@command{gnatmetric} considers the following constructs as program units to\n+compute metrics for:\n+\n+@itemize @bullet\n+@item\n+a library item or a subunit into a compilation unit;\n+\n+@item\n+all kinds of bodies;\n+\n+@item\n+declarations of tasks and protected types and objects, package and generic\n+\n+@item\n+package declarations;\n+\n+@end itemize\n+\n+@noindent\n+That is, a subprogram declaration, a generic instantiation or a renaming is\n+considered as a program unit only if it is a library item of a compilation\n+unit.\n+\n+@table @option\n+@cindex @option{^-n@var{x}^/SUPPRESS^} (@command{gnatmetric})\n+@item ^-nolocal^/SUPPRESS=LOCAL_DETAILS^\n+Do not compute detailed metrics for local program units\n+\n+@end table\n+\n+@node Line Metrics Control\n+@subsection Line Metrics Control\n+@cindex Line metrics control in @command{gnatmetric}\n+\n+@noindent\n+For any source file containing a legal compilation unit, and for any program\n+unit, @command{gnatmetric} computes the following metrics:\n+\n+@itemize @bullet\n+@item\n+the total number of lines in the file;\n+\n+@item\n+the total number of code lines (i.e., non-blank lines that are not comments)\n+\n+@item\n+the number of comment lines\n+\n+@item\n+the number of code lines containing end-of-line comments;\n+\n+@item\n+the number of empty lines and lines containing only space characters and/or\n+format effectors (blank lines)\n+\n+@end itemize\n+\n+If @command{gnatmetric} is invoked on more than one source file, it sums the\n+values of the line metrics for all the files being processed and then prints\n+out the cumulative results.\n+\n+By default, all the line metrics are computed and reported. You can use the\n+following switches to select the specific line metrics to be computed and\n+reported (if any of these parameters is set, only explicitly specified line\n+metrics are computed)\n+\n+@table @option\n+@cindex @option{^-la^/LINES_ALL^} (@command{gnatmetric})\n+@item ^-la^/LINES_ALL^\n+Compute and print out the number of all lines\n+\n+@cindex @option{^-lcode^/CODE_LINES^} (@command{gnatmetric})\n+@item ^-lcode^/CODE_LINES^\n+Compute and print out the number of code lines\n+\n+@cindex @option{^-lcomm^/COMENT_LINES^} (@command{gnatmetric})\n+@item ^-lcomm^/COMENT_LINES^\n+Compute and print out the number of comment lines\n+\n+@cindex @option{^-leol^/MIXED_CODE_COMMENTS^} (@command{gnatmetric})\n+@item ^-leol^/MIXED_CODE_COMMENTS^\n+Compute and print out the number of code lines containing\n+end-of-line comments\n+\n+@cindex @option{^-lb^/BLANK_LINES^} (@command{gnatmetric})\n+@item ^-lb^/BLANK_LINES^\n+ Compute and print out the number of blank lines\n+\n+@end table\n+\n+@node Syntax Metrics Control\n+@subsection Syntax Metrics Control\n+@cindex Syntax metrics control in @command{gnatmetric}\n+\n+@noindent\n+For any program unit, @command{gnatmetri}c computes the total number of\n+declarations and the total number of statements.  The sum of all the statements\n+and all the declarations is considered as @emph{LSLOC} (Logical Source\n+Lines Of Code)\n+and is reported as a separate metric.\n+\n+For any body and any task, protected, package and generic package declaration a\n+maximal nesting level of nested program units is computed. According to\n+@cite{Ada 95 Language Reference Manual}, 10.1(1), ``A program unit is either a\n+package, a task unit, a protected unit, a\n+protected entry, a generic unit, or an explicitly declared subprogram other\n+than an enumeration literal.''\n+\n+For any program unit @command{gnatmetric} computes the maximal nesting level of\n+composite syntactic constructs.  This corresponds to the notion of the\n+maximum nesting level in the GNAT built-in style checks\n+(see @ref{Style Checking})\n+\n+For any library-level program unit @command{gnatmetric} additionally computes\n+the following metrics:\n+\n+@table @emph\n+@item Public subprograms\n+This metric is computed for non-private compilation units only. It is a number\n+of the subprograms and generic subprograms declared in the given compilation\n+unit that can be called\n+or instantiated outside the unit. Formal generic subprograms and generic\n+instantiations are not counted. Protected subprograms are counted in the same\n+way as non-protected ones.\n+\n+@item All subprograms\n+This metric is computed for all the library level bodies and subunits. The\n+metric is equal to a total number of subprogram bodies in the compilation unit.\n+Neither generic instantiations nor renamings-as-a-body nor body stubs\n+are counted. Any subprogram body is counted, independently of its nesting\n+level and enclosing constructs. Generic bodies and bodies of protected\n+subprograms are counted in the same way as ``usual'' subprogram bodies.\n+\n+@item Public types\n+This metric is computed only for non-private package declarations and\n+generic package declarations. It is the total number of types\n+that can be referenced from outside this compilation unit, plus the\n+number of types from all the visible parts of all the visible generic packages.\n+Generic formal types are not counted.\n+\n+@noindent\n+Along with counting the total number of public types, the following\n+types are counted and reported separately:\n+\n+@itemize @bullet\n+@item\n+abstract types;\n+\n+@item\n+tagged types (abstract, non-abstract, private, non-private). Type\n+extensions are @emph{not} counted as tagged types; the idea is to count\n+possible roots for classes of extendable types;\n+\n+@item\n+private types (including private extensions);\n+\n+@item\n+task types;\n+\n+@item\n+protected types.\n+\n+@end itemize\n+\n+@item All types\n+This metric is computed for any compilation unit. It is equal to the total\n+number of the declarations of different types given in the compilation unit.\n+The private and the corresponding full type declaration are counted as one\n+type declaration. Incomplete type declarations and generic formal types\n+are not counted.\n+No distinction is made among different kinds of types (abstract,\n+private etc.); the total number of types is computed and reported.\n+\n+@end table\n+\n+@noindent\n+By default, all the syntax metrics are computed and reported. You can use the\n+following switches to select specific syntax metrics;\n+if any of these is set, only the explicitly specified metrics are computed.\n+\n+@table @option\n+@cindex @option{^-ed^/DECLARATION_TOTAL^} (@command{gnatmetric})\n+@item ^-ed^/DECLARATION_TOTAL^\n+Compute and print out the total number of declarations\n+\n+@cindex @option{^-es^/STATEMENT_TOTAL^} (@command{gnatmetric})\n+@item ^-es^/STATEMENT_TOTAL^\n+Compute and print out the total number of statements\n+\n+@cindex @option{^-eps^/^} (@command{gnatmetric})\n+@item ^-eps^/INT_SUBPROGRAMS^\n+Compute and print out the number of public subprograms in a\n+compilation unit\n+\n+@cindex @option{^-eas^/SUBPROGRAMS_ALL^} (@command{gnatmetric})\n+@item ^-eas^/SUBPROGRAMS_ALL^\n+Compute and print out the number of all the subprograms in a\n+compilation unit\n+\n+@cindex @option{^-ept^/INT_TYPES^} (@command{gnatmetric})\n+@item ^-ept^/INT_TYPES^\n+Compute and print out the number of public types in a compilation\n+unit\n+\n+@cindex @option{^-eat^/TYPES_ALL^} (@command{gnatmetric})\n+@item ^-eat^/TYPES_ALL^\n+Compute and print out the number of all the types in a compilation\n+unit\n+\n+@cindex @option{^-enu^/PROGRAM_NESTING_MAX^} (@command{gnatmetric})\n+@item ^-enu^/PROGRAM_NESTING_MAX^\n+Compute and print out the maximal program unit nesting level\n+\n+@cindex @option{^-ec^/CONSTRUCT_NESTING_MAX^} (@command{gnatmetric})\n+@item ^-ec^/CONSTRUCT_NESTING_MAX^\n+Compute and print out the maximal construct nesting level\n+\n+@end table\n+\n+@node Complexity Metrics Control\n+@subsection Complexity Metrics Control\n+@cindex Complexity metrics control in @command{gnatmetric}\n+\n+@noindent\n+For a program unit that is an executable body (a subprogram body (including\n+generic bodies), task body, entry body or a package body containing\n+its own statement sequence ) @command{gnatmetric} computes the following\n+complexity metrics:\n+\n+@itemize @bullet\n+@item\n+McCabe cyclomatic complexity;\n+\n+@item\n+McCabe essential complexity;\n+\n+@item\n+maximal loop nesting level\n+\n+@end itemize\n+\n+@noindent\n+The McCabe complexity metrics are defined\n+in @url{www.mccabe.com/pdf/nist235r.pdf}\n+\n+According to McCabe, both control statements and short-circuit control forms\n+should be taken into account when computing cyclomatic complexity. For each\n+body, we compute three metric values:\n+\n+@itemize @bullet\n+@item\n+the complexity introduced by control\n+statements only, without taking into account short-circuit forms,\n+\n+@item\n+the complexity introduced by short-circuit control forms only, and\n+\n+@item\n+the total\n+cyclomatic complexity, which is the sum of these two values.\n+@end itemize\n+\n+@noindent\n+When computing cyclomatic and essential complexity, @command{gnatmetric} skips\n+the code in the exception handlers and in all the nested program units\n+\n+By default, all the complexity metrics are computed and reported.\n+For more finely-grained control you can use\n+the following switches:\n+\n+@table @option\n+@cindex @option{^-n@var{x}^/SUPPRESS^} (@command{gnatmetric})\n+\n+@item ^-nocc^/SUPPRESS=CYCLOMATIC_COMPLEXITY^\n+Do not compute the McCabe Cyclomatic Complexity\n+\n+@item ^noec-^/SUPPRESS=ESSENTIAL_COMPLEXITY^\n+Do not compute the Essential Complexity\n+\n+@item ^-nonl^/SUPPRESS=MAXIMAL_LOOP_NESTING^\n+Do not compute maximal loop nesting level\n+\n+@item ^-ne^/SUPPRESS=EXITS_AS_GOTOS^\n+Do not consider @code{exit} statements as @code{goto}s when\n+computing Essential Complexity\n+\n+@end table\n+\n+@node Other gnatmetric Switches\n+@subsection Other @code{gnatmetric} Switches\n+\n+@noindent\n+Additional @command{gnatmetric} switches are as follows:\n+\n+@table @option\n+@item ^-files @var{filename}^/FILES=@var{filename}^\n+@cindex @option{^-files^/FILES^} (@code{gnatmetric})\n+Take the argument source files from the specified file. This file should be an\n+ordinary textual file containing file names separated by spaces or\n+line breaks. You can use this switch more then once in the same call to\n+@command{gnatmetric}. You also can combine this switch with explicit list of\n+files.\n+\n+@item ^-v^/VERBOSE^\n+@cindex @option{^-v^/VERBOSE^} (@code{gnatmetric})\n+Verbose mode;\n+@command{gnatmetric} generates version information and then\n+a trace of sources being procesed.\n+\n+@item ^-dv^/DEBUG_OUTPUT^\n+@cindex @option{^-dv^/DEBUG_OUTPUT^} (@code{gnatmetric})\n+Debug mode;\n+@command{gnatmetric} generates various messages useful to understand what\n+happens during the metrics computation\n+\n+@item ^-q^/QUIET^\n+@cindex @option{^-q^/QUIET^} (@code{gnatmetric})\n+Quiet mode.\n+@end table\n+\n @c ***********************************\n @node File Name Krunching Using gnatkr\n @chapter File Name Krunching Using @code{gnatkr}\n@@ -16084,7 +16587,7 @@ equivalent @code{gnatmake} flag (see @ref{Switches for gnatmake}).\n \n @item ^-v^/OUTPUT=VERBOSE^\n @cindex @option{^-v^/OUTPUT=VERBOSE^} (@code{gnatls})\n-Verbose mode. Output the complete source and object paths. Do not use\n+Verbose mode. Output the complete source, object and project paths. Do not use\n the default column layout but instead use long format giving as much as\n information possible on each requested units, including special\n characteristics such as:\n@@ -16130,7 +16633,8 @@ object paths are affected by the -I switch.\n @smallexample\n $ gnatls -v -I.. demo1.o\n \n-GNATLS 3.10w (970212) Copyright 1999 Free Software Foundation, Inc.\n+GNATLS 5.03w (20041123-34)\n+Copyright 1997-2004 Free Software Foundation, Inc.\n \n Source Search Path:\n    <Current_Directory>\n@@ -16142,6 +16646,10 @@ Object Search Path:\n    ../\n    /home/comar/local/lib/gcc-lib/mips-sni-sysv4/2.7.2/adalib/\n \n+Project Search Path:\n+   <Current_Directory>\n+   /home/comar/local/lib/gnat/\n+\n ./demo1.o\n    Unit =>\n      Name   => demo1"}, {"sha": "a02ef82c903cdd49cde6b479693d012aaf416d1e", "filename": "gcc/ada/interfac.ads", "status": "modified", "additions": 21, "deletions": 41, "changes": 62, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5b62485c35a3c9a8e20ffce49b99f12791238e1/gcc%2Fada%2Finterfac.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5b62485c35a3c9a8e20ffce49b99f12791238e1/gcc%2Fada%2Finterfac.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Finterfac.ads?ref=a5b62485c35a3c9a8e20ffce49b99f12791238e1", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 2002-2003 Free Software Foundation, Inc.          --\n+--          Copyright (C) 2002-2004 Free Software Foundation, Inc.          --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --\n@@ -69,103 +69,83 @@ pragma Pure (Interfaces);\n \n    function Shift_Left\n      (Value  : Unsigned_8;\n-      Amount : Natural)\n-      return   Unsigned_8;\n+      Amount : Natural) return Unsigned_8;\n \n    function Shift_Right\n      (Value  : Unsigned_8;\n-      Amount : Natural)\n-      return   Unsigned_8;\n+      Amount : Natural) return Unsigned_8;\n \n    function Shift_Right_Arithmetic\n      (Value  : Unsigned_8;\n-      Amount : Natural)\n-      return   Unsigned_8;\n+      Amount : Natural) return Unsigned_8;\n \n    function Rotate_Left\n      (Value  : Unsigned_8;\n-      Amount : Natural)\n-      return   Unsigned_8;\n+      Amount : Natural) return Unsigned_8;\n \n    function Rotate_Right\n      (Value  : Unsigned_8;\n-      Amount : Natural)\n-      return   Unsigned_8;\n+      Amount : Natural) return Unsigned_8;\n \n    function Shift_Left\n      (Value  : Unsigned_16;\n-      Amount : Natural)\n-     return    Unsigned_16;\n+      Amount : Natural) return    Unsigned_16;\n \n    function Shift_Right\n      (Value  : Unsigned_16;\n-      Amount : Natural)\n-      return   Unsigned_16;\n+      Amount : Natural) return Unsigned_16;\n \n    function Shift_Right_Arithmetic\n      (Value  : Unsigned_16;\n-      Amount : Natural)\n-      return   Unsigned_16;\n+      Amount : Natural) return Unsigned_16;\n \n    function Rotate_Left\n      (Value  : Unsigned_16;\n-      Amount : Natural)\n-      return   Unsigned_16;\n+      Amount : Natural) return Unsigned_16;\n \n    function Rotate_Right\n      (Value  : Unsigned_16;\n-      Amount : Natural)\n-      return   Unsigned_16;\n+      Amount : Natural) return Unsigned_16;\n \n    function Shift_Left\n      (Value  : Unsigned_32;\n-      Amount : Natural)\n-     return    Unsigned_32;\n+      Amount : Natural) return Unsigned_32;\n \n    function Shift_Right\n      (Value  : Unsigned_32;\n-      Amount : Natural)\n-      return   Unsigned_32;\n+      Amount : Natural) return Unsigned_32;\n \n    function Shift_Right_Arithmetic\n      (Value  : Unsigned_32;\n-      Amount : Natural)\n-      return   Unsigned_32;\n+      Amount : Natural) return Unsigned_32;\n \n    function Rotate_Left\n      (Value  : Unsigned_32;\n-      Amount : Natural)\n-      return   Unsigned_32;\n+      Amount : Natural) return Unsigned_32;\n \n    function Rotate_Right\n      (Value  : Unsigned_32;\n-      Amount : Natural)\n-      return   Unsigned_32;\n+      Amount : Natural) return Unsigned_32;\n \n    function Shift_Left\n      (Value  : Unsigned_64;\n-      Amount : Natural)\n-     return    Unsigned_64;\n+      Amount : Natural) return Unsigned_64;\n \n    function Shift_Right\n      (Value  : Unsigned_64;\n-      Amount : Natural)\n-      return   Unsigned_64;\n+      Amount : Natural) return Unsigned_64;\n \n    function Shift_Right_Arithmetic\n      (Value  : Unsigned_64;\n-      Amount : Natural)\n-      return   Unsigned_64;\n+      Amount : Natural) return Unsigned_64;\n \n    function Rotate_Left\n      (Value  : Unsigned_64;\n-      Amount : Natural)\n-      return   Unsigned_64;\n+      Amount : Natural) return Unsigned_64;\n \n    function Rotate_Right\n      (Value  : Unsigned_64;\n-      Amount : Natural)\n-      return   Unsigned_64;\n+      Amount : Natural) return Unsigned_64;\n \n    pragma Import (Intrinsic, Shift_Left);\n    pragma Import (Intrinsic, Shift_Right);"}, {"sha": "1daeca67225052087b58dc63712a16255ac718bf", "filename": "gcc/ada/s-poosiz.adb", "status": "modified", "additions": 17, "deletions": 17, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5b62485c35a3c9a8e20ffce49b99f12791238e1/gcc%2Fada%2Fs-poosiz.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5b62485c35a3c9a8e20ffce49b99f12791238e1/gcc%2Fada%2Fs-poosiz.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-poosiz.adb?ref=a5b62485c35a3c9a8e20ffce49b99f12791238e1", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2003 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2004 Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -153,8 +153,15 @@ package body System.Pool_Size is\n    ----------------\n \n    procedure Initialize  (Pool : in out Stack_Bounded_Pool) is\n+\n+      --  Define the appropriate alignment for allocations. This is the\n+      --  maximum of the requested alignment, and the alignment required\n+      --  for Storage_Count values. The latter test is to ensure that we\n+      --  can properly reference the linked list pointers for free lists.\n+\n       Align : constant SSE.Storage_Count :=\n-        SSE.Storage_Count'Max (SSE.Storage_Count'Alignment, Pool.Alignment);\n+                SSE.Storage_Count'Max\n+                  (SSE.Storage_Count'Alignment, Pool.Alignment);\n \n    begin\n       if Pool.Elmt_Size = 0 then\n@@ -165,7 +172,7 @@ package body System.Pool_Size is\n          Pool.First_Empty := 1;\n \n          --  Compute the size to allocate given the size of the element and\n-         --  the possible Alignment clause\n+         --  the possible alignment requirement as defined above.\n \n          Pool.Aligned_Elmt_Size :=\n            SSE.Storage_Count'Max (SC_Size,\n@@ -178,8 +185,7 @@ package body System.Pool_Size is\n    ------------------\n \n    function  Storage_Size\n-     (Pool : Stack_Bounded_Pool)\n-      return SSE.Storage_Count\n+     (Pool : Stack_Bounded_Pool) return SSE.Storage_Count\n    is\n    begin\n       return Pool.Pool_Size;\n@@ -205,20 +211,17 @@ package body System.Pool_Size is\n \n       function Size\n         (Pool  : Stack_Bounded_Pool;\n-         Chunk : SSE.Storage_Count)\n-         return SSE.Storage_Count;\n+         Chunk : SSE.Storage_Count) return SSE.Storage_Count;\n       --  Fetch the field 'size' of a chunk of available storage\n \n       function Next\n         (Pool  : Stack_Bounded_Pool;\n-         Chunk : SSE.Storage_Count)\n-         return  SSE.Storage_Count;\n+         Chunk : SSE.Storage_Count) return SSE.Storage_Count;\n       --  Fetch the field 'next' of a chunk of available storage\n \n       function Chunk_Of\n         (Pool : Stack_Bounded_Pool;\n-         Addr : System.Address)\n-         return SSE.Storage_Count;\n+         Addr : System.Address) return SSE.Storage_Count;\n       --  Give the chunk number in the pool from its Address\n \n       --------------\n@@ -284,8 +287,7 @@ package body System.Pool_Size is\n \n       function Chunk_Of\n         (Pool : Stack_Bounded_Pool;\n-         Addr : System.Address)\n-         return SSE.Storage_Count\n+         Addr : System.Address) return SSE.Storage_Count\n       is\n       begin\n          return 1 + abs (Addr - Pool.The_Pool (1)'Address);\n@@ -339,8 +341,7 @@ package body System.Pool_Size is\n \n       function Next\n         (Pool  : Stack_Bounded_Pool;\n-         Chunk : SSE.Storage_Count)\n-         return  SSE.Storage_Count\n+         Chunk : SSE.Storage_Count) return SSE.Storage_Count\n       is\n       begin\n          pragma Warnings (Off);\n@@ -397,8 +398,7 @@ package body System.Pool_Size is\n \n       function Size\n         (Pool  : Stack_Bounded_Pool;\n-         Chunk : SSE.Storage_Count)\n-         return  SSE.Storage_Count\n+         Chunk : SSE.Storage_Count) return SSE.Storage_Count\n       is\n       begin\n          pragma Warnings (Off);"}, {"sha": "ea70200cff22499e106c284081d8598d0fa1bdf7", "filename": "gcc/ada/s-poosiz.ads", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5b62485c35a3c9a8e20ffce49b99f12791238e1/gcc%2Fada%2Fs-poosiz.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5b62485c35a3c9a8e20ffce49b99f12791238e1/gcc%2Fada%2Fs-poosiz.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-poosiz.ads?ref=a5b62485c35a3c9a8e20ffce49b99f12791238e1", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---        Copyright (C) 1992,1993,1994 Free Software Foundation, Inc.       --\n+--          Copyright (C) 1992-2004 Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -66,8 +66,7 @@ pragma Elaborate_Body;\n       end record;\n \n    function Storage_Size\n-     (Pool : Stack_Bounded_Pool)\n-      return System.Storage_Elements.Storage_Count;\n+     (Pool : Stack_Bounded_Pool) return System.Storage_Elements.Storage_Count;\n \n    procedure Allocate\n      (Pool         : in out Stack_Bounded_Pool;"}, {"sha": "346cbf3eeeee837cfc237b56ddbbef1e416431dd", "filename": "gcc/ada/sem_ch10.adb", "status": "modified", "additions": 28, "deletions": 22, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5b62485c35a3c9a8e20ffce49b99f12791238e1/gcc%2Fada%2Fsem_ch10.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5b62485c35a3c9a8e20ffce49b99f12791238e1/gcc%2Fada%2Fsem_ch10.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch10.adb?ref=a5b62485c35a3c9a8e20ffce49b99f12791238e1", "patch": "@@ -178,7 +178,7 @@ package body Sem_Ch10 is\n    --  analysis (should it appear otherwise in the context).\n \n    procedure Remove_Context_Clauses (N : Node_Id);\n-   --  Subsidiary of previous one. Remove use_ and with_clauses.\n+   --  Subsidiary of previous one. Remove use_ and with_clauses\n \n    procedure Remove_Limited_With_Clause (N : Node_Id);\n    --  Remove from visibility the shadow entities introduced for a package\n@@ -337,7 +337,7 @@ package body Sem_Ch10 is\n             Semantics (Lib_Unit);\n             Check_Unused_Withs (Get_Cunit_Unit_Number (Lib_Unit));\n \n-            --  Verify that the library unit is a package declaration.\n+            --  Verify that the library unit is a package declaration\n \n             if Nkind (Unit (Lib_Unit)) /= N_Package_Declaration\n                  and then\n@@ -476,7 +476,7 @@ package body Sem_Ch10 is\n \n       if Is_Child_Spec (Unit_Node) then\n \n-         --  Set the entities of all parents in the program_unit_name.\n+         --  Set the entities of all parents in the program_unit_name\n \n          Generate_Parent_References (\n            Unit_Node, Get_Parent_Entity (Unit (Parent_Spec (Unit_Node))));\n@@ -864,7 +864,7 @@ package body Sem_Ch10 is\n          Next (Item);\n       end loop;\n \n-      --  Third pass: examine all limited_with clauses.\n+      --  Third pass: examine all limited_with clauses\n \n       Item := First (Context_Items (N));\n \n@@ -878,7 +878,7 @@ package body Sem_Ch10 is\n                             & \" package specification\", Item);\n             end if;\n \n-            --  Skip analyzing with clause if no unit, see above.\n+            --  Skip analyzing with clause if no unit, see above\n \n             if Present (Library_Unit (Item)) then\n                Analyze (Item);\n@@ -905,7 +905,7 @@ package body Sem_Ch10 is\n       Nam  : Entity_Id;\n \n    begin\n-      --  The package declaration must be in the current declarative part.\n+      --  The package declaration must be in the current declarative part\n \n       Check_Stub_Level (N);\n       Nam := Current_Entity_In_Scope (Id);\n@@ -1197,7 +1197,7 @@ package body Sem_Ch10 is\n    begin\n       Check_Stub_Level (N);\n \n-      --  First occurence of name may have been as an incomplete type.\n+      --  First occurence of name may have been as an incomplete type\n \n       if Present (Nam) and then Ekind (Nam) = E_Incomplete_Type then\n          Nam := Full_View (Nam);\n@@ -1484,7 +1484,7 @@ package body Sem_Ch10 is\n    begin\n       if not Is_Empty_List (Context_Items (N)) then\n \n-         --  Save current use clauses.\n+         --  Save current use clauses\n \n          Remove_Scope;\n          Remove_Context (Lib_Unit);\n@@ -1539,7 +1539,7 @@ package body Sem_Ch10 is\n          Re_Install_Use_Clauses;\n          Install_Context (N);\n \n-         --  Restore state of suppress flags for current body.\n+         --  Restore state of suppress flags for current body\n \n          Scope_Suppress := Svg;\n \n@@ -1568,7 +1568,7 @@ package body Sem_Ch10 is\n    begin\n       Check_Stub_Level (N);\n \n-      --  First occurence of name may have been as an incomplete type.\n+      --  First occurence of name may have been as an incomplete type\n \n       if Present (Nam) and then Ekind (Nam) = E_Incomplete_Type then\n          Nam := Full_View (Nam);\n@@ -1831,7 +1831,7 @@ package body Sem_Ch10 is\n         and then Present (System_Extend_Unit)\n         and then Present_System_Aux (N)\n       then\n-         --  If the extension is not present, an error will have been emitted.\n+         --  If the extension is not present, an error will have been emitted\n \n          null;\n       end if;\n@@ -1859,7 +1859,7 @@ package body Sem_Ch10 is\n       Sel  : Node_Id;\n \n       procedure Decorate_Tagged_Type (T : Entity_Id);\n-      --  Set basic attributes of type, including its class_wide type.\n+      --  Set basic attributes of type, including its class_wide type\n \n       function In_Chain (E : Entity_Id) return Boolean;\n       --  Check that the imported type is not already in the homonym chain,\n@@ -1884,7 +1884,7 @@ package body Sem_Ch10 is\n             Set_Current_Entity (T);\n          end if;\n \n-         --  Build bogus class_wide type, if not previously done.\n+         --  Build bogus class_wide type, if not previously done\n \n          if No (Class_Wide_Type (T)) then\n             CW := Make_Defining_Identifier (Loc,  New_Internal_Name ('S'));\n@@ -1999,7 +1999,7 @@ package body Sem_Ch10 is\n \n          if Nkind (Parent (P)) = N_Defining_Program_Unit_Name then\n \n-            --  Make parent packages visible.\n+            --  Make parent packages visible\n \n             declare\n                Parent_Comp : Node_Id;\n@@ -2149,7 +2149,7 @@ package body Sem_Ch10 is\n       Lib_Unit : constant Node_Id := Unit (N);\n \n       procedure Check_Parent_Context (U : Node_Id);\n-      --  Examine context items of parent unit to locate with_type clauses.\n+      --  Examine context items of parent unit to locate with_type clauses\n \n       --------------------------\n       -- Check_Parent_Context --\n@@ -2532,7 +2532,7 @@ package body Sem_Ch10 is\n       Withn  : Node_Id;\n \n       function Build_Ancestor_Name (P : Node_Id) return Node_Id;\n-      --  Build prefix of child unit name. Recurse if needed.\n+      --  Build prefix of child unit name. Recurse if needed\n \n       function Build_Unit_Name return Node_Id;\n       --  If the unit is a child unit, build qualified name with all\n@@ -2657,7 +2657,7 @@ package body Sem_Ch10 is\n          then\n             if Limited_Present (Item) then\n \n-               --  Limited withed units will be installed later.\n+               --  Limited withed units will be installed later\n \n                goto Continue;\n \n@@ -4167,7 +4167,7 @@ package body Sem_Ch10 is\n       Lib_Unit : constant Node_Id := Unit (N);\n \n    begin\n-      --  If this is a child unit, first remove the parent units.\n+      --  If this is a child unit, first remove the parent units\n \n       if Is_Child_Spec (Lib_Unit) then\n          Remove_Parents (Lib_Unit);\n@@ -4394,7 +4394,11 @@ package body Sem_Ch10 is\n       P   : Entity_Id;\n \n       procedure Unchain (E : Entity_Id);\n-      --  Remove entity from visibility list.\n+      --  Remove entity from visibility list\n+\n+      -------------\n+      -- Unchain --\n+      -------------\n \n       procedure Unchain (E : Entity_Id) is\n          Prev : Entity_Id;\n@@ -4424,13 +4428,15 @@ package body Sem_Ch10 is\n          end if;\n       end Unchain;\n \n-      --  Start of Remove_With_Type_Clause\n+   --  Start of processing for Remove_With_Type_Clause\n \n    begin\n       if Nkind (Name) = N_Selected_Component then\n          Typ := Entity (Selector_Name (Name));\n \n-         if No (Typ) then    --  error in declaration.\n+         --  If no Typ, then error in declaration, ignore\n+\n+         if No (Typ) then\n             return;\n          end if;\n       else\n@@ -4456,7 +4462,7 @@ package body Sem_Ch10 is\n \n       Set_From_With_Type (P, False);\n \n-      --  If P is a child unit, remove parents as well.\n+      --  If P is a child unit, remove parents as well\n \n       P := Scope (P);\n "}, {"sha": "117dde2213144a6cbf97129bbe840693f73fa7b1", "filename": "gcc/ada/sem_ch13.adb", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5b62485c35a3c9a8e20ffce49b99f12791238e1/gcc%2Fada%2Fsem_ch13.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5b62485c35a3c9a8e20ffce49b99f12791238e1/gcc%2Fada%2Fsem_ch13.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch13.adb?ref=a5b62485c35a3c9a8e20ffce49b99f12791238e1", "patch": "@@ -83,7 +83,7 @@ package body Sem_Ch13 is\n    --  operational attributes.\n \n    function Address_Aliased_Entity (N : Node_Id) return Entity_Id;\n-   --  If expression N is of the form E'Address, return E.\n+   --  If expression N is of the form E'Address, return E\n \n    procedure Mark_Aliased_Address_As_Volatile (N : Node_Id);\n    --  This is used for processing of an address representation clause. If\n@@ -2131,7 +2131,7 @@ package body Sem_Ch13 is\n                        (\"component clause previously given#\", CC);\n \n                   else\n-                     --  Update Fbit and Lbit to the actual bit number.\n+                     --  Update Fbit and Lbit to the actual bit number\n \n                      Fbit := Fbit + UI_From_Int (SSU) * Posit;\n                      Lbit := Lbit + UI_From_Int (SSU) * Posit;\n@@ -2647,7 +2647,7 @@ package body Sem_Ch13 is\n                   return;\n                end if;\n \n-               --  Otherwise look at the identifier and see if it is OK.\n+               --  Otherwise look at the identifier and see if it is OK\n \n                if Ekind (Ent) = E_Named_Integer\n                     or else\n@@ -3206,7 +3206,7 @@ package body Sem_Ch13 is\n          raise Program_Error;\n       end if;\n \n-      --  Fall through with Hi and Lo set. Deal with biased case.\n+      --  Fall through with Hi and Lo set. Deal with biased case\n \n       if (Biased and then not Is_Fixed_Point_Type (T))\n         or else Has_Biased_Representation (T)"}, {"sha": "a80ec969c4f7009f9b0c8e22cbe0a36c57e06ed1", "filename": "gcc/ada/sem_ch3.adb", "status": "modified", "additions": 274, "deletions": 285, "changes": 559, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5b62485c35a3c9a8e20ffce49b99f12791238e1/gcc%2Fada%2Fsem_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5b62485c35a3c9a8e20ffce49b99f12791238e1/gcc%2Fada%2Fsem_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch3.adb?ref=a5b62485c35a3c9a8e20ffce49b99f12791238e1", "patch": "@@ -401,11 +401,11 @@ package body Sem_Ch3 is\n    --    SI is the N_Subtype_Indication node containing the constraint and\n    --    the unconstrained type to constrain.\n    --\n-   --    Def_Id is the entity for the resulting constrained subtype. A\n-   --    value of Empty for Def_Id indicates that an implicit type must be\n-   --    created, but creation is delayed (and must be done by this procedure)\n-   --    because other subsidiary implicit types must be created first (which\n-   --    is why Def_Id is an in/out parameter).\n+   --    Def_Id is the entity for the resulting constrained subtype. A value\n+   --    of Empty for Def_Id indicates that an implicit type must be created,\n+   --    but creation is delayed (and must be done by this procedure) because\n+   --    other subsidiary implicit types must be created first (which is why\n+   --    Def_Id is an in/out parameter).\n    --\n    --    Related_Nod gives the place where this type has to be inserted\n    --    in the tree\n@@ -452,9 +452,9 @@ package body Sem_Ch3 is\n       Related_Id   : Entity_Id;\n       Suffix       : Character;\n       Suffix_Index : Nat);\n-   --  Process an index constraint in a constrained array declaration.\n-   --  The constraint can be a subtype name, or a range with or without\n-   --  an explicit subtype mark. The index is the corresponding index of the\n+   --  Process an index constraint in a constrained array declaration. The\n+   --  constraint can be a subtype name, or a range with or without an\n+   --  explicit subtype mark. The index is the corresponding index of the\n    --  unconstrained array. The Related_Id and Suffix parameters are used to\n    --  build the associated Implicit type name.\n \n@@ -732,12 +732,12 @@ package body Sem_Ch3 is\n       Set_Is_Access_Constant (Anon_Type, Constant_Present (N));\n \n       --  The context is either a subprogram declaration or an access\n-      --  discriminant, in a private or a full type declaration. In\n-      --  the case of a subprogram, If the designated type is incomplete,\n-      --  the operation will be a primitive operation of the full type, to\n-      --  be updated subsequently. If the type is imported through a limited\n-      --  with clause, it is not a primitive operation of the type (which\n-      --  is declared elsewhere in some other scope).\n+      --  discriminant, in a private or a full type declaration. In the case\n+      --  of a subprogram, If the designated type is incomplete, the operation\n+      --  will be a primitive operation of the full type, to be updated\n+      --  subsequently. If the type is imported through a limited with clause,\n+      --  it is not a primitive operation of the type (which is declared\n+      --  elsewhere in some other scope).\n \n       if Ekind (Desig_Type) = E_Incomplete_Type\n         and then not From_With_Type (Desig_Type)\n@@ -783,10 +783,10 @@ package body Sem_Ch3 is\n          Process_Formals (Formals, Parent (T_Def));\n \n          --  A bit of a kludge here, End_Scope requires that the parent\n-         --  pointer be set to something reasonable, but Itypes don't\n-         --  have parent pointers. So we set it and then unset it ???\n-         --  If and when Itypes have proper parent pointers to their\n-         --  declarations, this kludge can be removed.\n+         --  pointer be set to something reasonable, but Itypes don't have\n+         --  parent pointers. So we set it and then unset it ??? If and when\n+         --  Itypes have proper parent pointers to their declarations, this\n+         --  kludge can be removed.\n \n          Set_Parent (Desig_Type, T_Name);\n          End_Scope;\n@@ -1098,8 +1098,8 @@ package body Sem_Ch3 is\n       Set_Etype (Id, T);\n       Set_Is_Aliased (Id, Aliased_Present (Component_Definition (N)));\n \n-      --  The component declaration may have a per-object constraint, set the\n-      --  appropriate flag in the defining identifier of the subtype.\n+      --  The component declaration may have a per-object constraint, set\n+      --  the appropriate flag in the defining identifier of the subtype.\n \n       if Present (Subtype_Indication (Component_Definition (N))) then\n          declare\n@@ -1226,14 +1226,14 @@ package body Sem_Ch3 is\n          end if;\n \n          --  At the end of a declarative part, freeze remaining entities\n-         --  declared in it. The end of the visible declarations of a\n-         --  package specification is not the end of a declarative part\n-         --  if private declarations are present. The end of a package\n-         --  declaration is a freezing point only if it a library package.\n-         --  A task definition or protected type definition is not a freeze\n-         --  point either. Finally, we do not freeze entities in generic\n-         --  scopes, because there is no code generated for them and freeze\n-         --  nodes will be generated for the instance.\n+         --  declared in it. The end of the visible declarations of package\n+         --  specification is not the end of a declarative part if private\n+         --  declarations are present. The end of a package declaration is a\n+         --  freezing point only if it a library package. A task definition or\n+         --  protected type definition is not a freeze point either. Finally,\n+         --  we do not freeze entities in generic scopes, because there is no\n+         --  code generated for them and freeze nodes will be generated for\n+         --  the instance.\n \n          --  The end of a package instantiation is not a freeze point, but\n          --  for now we make it one, because the generic body is inserted\n@@ -1330,9 +1330,9 @@ package body Sem_Ch3 is\n \n       End_Scope;\n \n-      --  If the type has discriminants, non-trivial subtypes may be\n-      --  be declared before the full view of the type. The full views\n-      --  of those subtypes will be built after the full view of the type.\n+      --  If the type has discriminants, non-trivial subtypes may be be\n+      --  declared before the full view of the type. The full views of those\n+      --  subtypes will be built after the full view of the type.\n \n       Set_Private_Dependents (T, New_Elmt_List);\n       Set_Is_Pure (T, F);\n@@ -1511,12 +1511,12 @@ package body Sem_Ch3 is\n       --  worthile building the corresponding subtype.\n \n       function Count_Tasks (T : Entity_Id) return Uint;\n-      --  This function is called when a library level object of type T\n-      --  is declared. It's function is to count the static number of\n-      --  tasks declared within the type (it is only called if Has_Tasks\n-      --  is set for T). As a side effect, if an array of tasks with\n-      --  non-static bounds or a variant record type is encountered,\n-      --  Check_Restrictions is called indicating the count is unknown.\n+      --  This function is called when a library level object of type is\n+      --  declared. It's function is to count the static number of tasks\n+      --  declared within the type (it is only called if Has_Tasks is set for\n+      --  T). As a side effect, if an array of tasks with non-static bounds or\n+      --  a variant record type is encountered, Check_Restrictions is called\n+      --  indicating the count is unknown.\n \n       ---------------------------\n       -- Build_Default_Subtype --\n@@ -2346,17 +2346,17 @@ package body Sem_Ch3 is\n       --  where the defining identifier has already been entered into the\n       --  scope but the declaration as a whole needs to be analyzed.\n \n-      --  This case in particular happens for derived enumeration types.\n-      --  The derived enumeration type is processed as an inserted enumeration\n+      --  This case in particular happens for derived enumeration types. The\n+      --  derived enumeration type is processed as an inserted enumeration\n       --  type declaration followed by a rewritten subtype declaration. The\n       --  defining identifier, however, is entered into the name scope very\n       --  early in the processing of the original type declaration and\n       --  therefore needs to be avoided here, when the created subtype\n       --  declaration is analyzed. (See Build_Derived_Types)\n \n-      --  This also happens when the full view of a private type is a\n-      --  derived type with constraints. In this case the entity has been\n-      --  introduced in the private declaration.\n+      --  This also happens when the full view of a private type is derived\n+      --  type with constraints. In this case the entity has been introduced\n+      --  in the private declaration.\n \n       if Present (Etype (Id))\n         and then (Is_Private_Type (Etype (Id))\n@@ -2882,9 +2882,9 @@ package body Sem_Ch3 is\n \n       begin\n          --  In the case where the base type is different from the first\n-         --  subtype, we pre-allocate a freeze node, and set the proper\n-         --  link to the first subtype. Freeze_Entity will use this\n-         --  preallocated freeze node when it freezes the entity.\n+         --  subtype, we pre-allocate a freeze node, and set the proper link\n+         --  to the first subtype. Freeze_Entity will use this preallocated\n+         --  freeze node when it freezes the entity.\n \n          if B /= T then\n             Ensure_Freeze_Node (B);\n@@ -3805,10 +3805,9 @@ package body Sem_Ch3 is\n          Insert_Before (N, Type_Decl);\n          Analyze (Type_Decl);\n \n-         --  After the implicit base is analyzed its Etype needs to be\n-         --  changed to reflect the fact that it is derived from the\n-         --  parent type which was ignored during analysis. We also set\n-         --  the size at this point.\n+         --  After the implicit base is analyzed its Etype needs to be changed\n+         --  to reflect the fact that it is derived from the parent type which\n+         --  was ignored during analysis. We also set the size at this point.\n \n          Set_Etype (Implicit_Base, Parent_Type);\n \n@@ -3839,8 +3838,8 @@ package body Sem_Ch3 is\n \n                else\n                   --  Constraint is a Range attribute. Replace with the\n-                  --  explicit mention of the bounds of the prefix, which\n-                  --  must be a subtype.\n+                  --  explicit mention of the bounds of the prefix, which must\n+                  --  be a subtype.\n \n                   Analyze (Prefix (R));\n                   Hi :=\n@@ -3897,17 +3896,16 @@ package body Sem_Ch3 is\n \n          Analyze (N);\n \n-         --  If pragma Discard_Names applies on the first subtype\n-         --  of the parent type, then it must be applied on this\n-         --  subtype as well.\n+         --  If pragma Discard_Names applies on the first subtype of the\n+         --  parent type, then it must be applied on this subtype as well.\n \n          if Einfo.Discard_Names (First_Subtype (Parent_Type)) then\n             Set_Discard_Names (Derived_Type);\n          end if;\n \n-         --  Apply a range check. Since this range expression doesn't\n-         --  have an Etype, we have to specifically pass the Source_Typ\n-         --  parameter. Is this right???\n+         --  Apply a range check. Since this range expression doesn't have an\n+         --  Etype, we have to specifically pass the Source_Typ parameter. Is\n+         --  this right???\n \n          if Nkind (Indic) = N_Subtype_Indication then\n             Apply_Range_Check (Range_Expression (Constraint (Indic)),\n@@ -3943,9 +3941,9 @@ package body Sem_Ch3 is\n \n       Discard_Node (Process_Subtype (Indic, N));\n \n-      --  Introduce an implicit base type for the derived type even if\n-      --  there is no constraint attached to it, since this seems closer\n-      --  to the Ada semantics.\n+      --  Introduce an implicit base type for the derived type even if there\n+      --  is no constraint attached to it, since this seems closer to the Ada\n+      --  semantics.\n \n       Implicit_Base :=\n         Create_Itype (Ekind (Parent_Base), N, Derived_Type, 'B');\n@@ -3975,9 +3973,9 @@ package body Sem_Ch3 is\n          Set_Includes_Infinities (Scalar_Range (Implicit_Base));\n       end if;\n \n-      --  The Derived_Type, which is the entity of the declaration, is\n-      --  a subtype of the implicit base. Its Ekind is a subtype, even\n-      --  in the absence of an explicit constraint.\n+      --  The Derived_Type, which is the entity of the declaration, is a\n+      --  subtype of the implicit base. Its Ekind is a subtype, even in the\n+      --  absence of an explicit constraint.\n \n       Set_Etype (Derived_Type, Implicit_Base);\n \n@@ -3988,9 +3986,9 @@ package body Sem_Ch3 is\n          Set_Ekind (Derived_Type, Subtype_Kind (Ekind (Parent_Type)));\n       end if;\n \n-      --  If we did not have a range constraint, then set the range\n-      --  from the parent type. Otherwise, the call to Process_Subtype\n-      --  has set the bounds.\n+      --  If we did not have a range constraint, then set the range from the\n+      --  parent type. Otherwise, the call to Process_Subtype has set the\n+      --  bounds.\n \n       if No_Constraint\n         or else not Has_Range_Constraint (Indic)\n@@ -4029,11 +4027,11 @@ package body Sem_Ch3 is\n \n       elsif Is_Fixed_Point_Type (Parent_Type) then\n \n-         --  Small of base type and derived type are always copied from\n-         --  the parent base type, since smalls never change. The delta\n-         --  of the base type is also copied from the parent base type.\n-         --  However the delta of the derived type will have been set\n-         --  already if a constraint was present.\n+         --  Small of base type and derived type are always copied from the\n+         --  parent base type, since smalls never change. The delta of the\n+         --  base type is also copied from the parent base type. However the\n+         --  delta of the derived type will have been set already if a\n+         --  constraint was present.\n \n          Set_Small_Value (Derived_Type,  Small_Value (Parent_Base));\n          Set_Small_Value (Implicit_Base, Small_Value (Parent_Base));\n@@ -4075,8 +4073,8 @@ package body Sem_Ch3 is\n       Convert_Scalar_Bounds (N, Parent_Type, Derived_Type, Loc);\n \n       --  The implicit_base should be frozen when the derived type is frozen,\n-      --  but note that it is used in the conversions of the bounds. For\n-      --  fixed types we delay the determination of the bounds until the proper\n+      --  but note that it is used in the conversions of the bounds. For fixed\n+      --  types we delay the determination of the bounds until the proper\n       --  freezing point. For other numeric types this is rejected by GCC, for\n       --  reasons that are currently unclear (???), so we choose to freeze the\n       --  implicit base now. In the case of integers and floating point types\n@@ -4152,10 +4150,9 @@ package body Sem_Ch3 is\n          if Present (Full_View (Parent_Type)) then\n             if not Is_Completion then\n \n-               --  Copy declaration for subsequent analysis, to\n-               --  provide a completion for what is a private\n-               --  declaration. Indicate that the full type is\n-               --  internally generated.\n+               --  Copy declaration for subsequent analysis, to provide a\n+               --  completion for what is a private declaration. Indicate that\n+               --  the full type is internally generated.\n \n                Full_Decl := New_Copy_Tree (N);\n                Full_Der  := New_Copy (Derived_Type);\n@@ -4210,10 +4207,9 @@ package body Sem_Ch3 is\n                Swapped := True;\n             end if;\n \n-            --  Build full view of derived type from full view of\n-            --  parent which is now installed.\n-            --  Subprograms have been derived on the partial view,\n-            --  the completion does not derive them anew.\n+            --  Build full view of derived type from full view of parent which\n+            --  is now installed. Subprograms have been derived on the partial\n+            --  view, the completion does not derive them anew.\n \n             if not Is_Tagged_Type (Parent_Type) then\n                Build_Derived_Record_Type\n@@ -4241,15 +4237,14 @@ package body Sem_Ch3 is\n             Set_Full_View (Derived_Type, Full_Der);\n             Set_Full_View (Der_Base, Base_Type (Full_Der));\n \n-            --  Copy the discriminant list from full view to\n-            --  the partial views (base type and its subtype).\n-            --  Gigi requires that the partial and full views\n-            --  have the same discriminants.\n-            --  ??? Note that since the partial view is pointing\n-            --  to discriminants in the full view, their scope\n-            --  will be that of the full view. This might\n-            --  cause some front end problems and need\n-            --  adjustment?\n+            --  Copy the discriminant list from full view to the partial views\n+            --  (base type and its subtype). Gigi requires that the partial\n+            --  and full views have the same discriminants.\n+\n+            --  Note that since the partial view is pointing to discriminants\n+            --  in the full view, their scope will be that of the full view.\n+            --  This might cause some front end problems and need\n+            --  adjustment???\n \n             Discr := First_Discriminant (Base_Type (Full_Der));\n             Set_First_Entity (Der_Base, Discr);\n@@ -4361,9 +4356,9 @@ package body Sem_Ch3 is\n               (Base_Type (Derived_Type), Finalize_Storage_Only (Parent_Type));\n          end if;\n \n-         --  Construct the implicit full view by deriving from full\n-         --  view of the parent type. In order to get proper visibility,\n-         --  we install the parent scope and its declarations.\n+         --  Construct the implicit full view by deriving from full view of\n+         --  the parent type. In order to get proper visibility, we install\n+         --  the parent scope and its declarations.\n \n          --  ??? if the parent is untagged private and its completion is\n          --  tagged, this mechanism will not work because we cannot derive\n@@ -4389,10 +4384,10 @@ package body Sem_Ch3 is\n                Copy_And_Build;\n                Uninstall_Declarations (Par_Scope);\n \n-            --  If parent scope is open and in another unit, and\n-            --  parent has a completion, then the derivation is taking\n-            --  place in the visible part of a child unit. In that\n-            --  case retrieve the full view of the parent momentarily.\n+            --  If parent scope is open and in another unit, and parent has a\n+            --  completion, then the derivation is taking place in the visible\n+            --  part of a child unit. In that case retrieve the full view of\n+            --  the parent momentarily.\n \n             elsif not In_Same_Source_Unit (N, Parent_Type) then\n                Full_P := Full_View (Parent_Type);\n@@ -4500,8 +4495,8 @@ package body Sem_Ch3 is\n    --  in R and T have the same position in objects of type R and T.\n \n    --  This has two implications. The first is that the entire tree for R's\n-   --  declaration needs to be copied for T in the untagged case, so that\n-   --  T can be viewed as a record type of its own with its own representation\n+   --  declaration needs to be copied for T in the untagged case, so that T\n+   --  can be viewed as a record type of its own with its own representation\n    --  clauses. The second implication is the way we handle discriminants.\n    --  Specifically, in the untagged case we need a way to communicate to Gigi\n    --  what are the real discriminants in the record, while for the semantics\n@@ -4531,10 +4526,10 @@ package body Sem_Ch3 is\n    --  o The discriminants specified by a new KNOWN_DISCRIMINANT_PART, if\n    --    there is one;\n \n-   --  o Otherwise, each discriminant of the parent type (implicitly\n-   --    declared in the same order with the same specifications). In this\n-   --    case, the discriminants are said to be \"inherited\", or if unknown in\n-   --    the parent are also unknown in the derived type.\n+   --  o Otherwise, each discriminant of the parent type (implicitly declared\n+   --    in the same order with the same specifications). In this case, the\n+   --    discriminants are said to be \"inherited\", or if unknown in the parent\n+   --    are also unknown in the derived type.\n \n    --  Furthermore if a KNOWN_DISCRIMINANT_PART is provided, then [3.7(13-18)]:\n \n@@ -4756,6 +4751,7 @@ package body Sem_Ch3 is\n    --  components are inherited in the derived type from the parent type. In\n    --  the absence of discriminants component, inheritance is straightforward\n    --  as components can simply be copied from the parent.\n+\n    --  If the parent has discriminants, inheriting components constrained with\n    --  these discriminants requires caution. Consider the following example:\n \n@@ -4850,19 +4846,18 @@ package body Sem_Ch3 is\n    --  9. IMPLEMENTATION OF TYPE DERIVATION FOR PRIVATE EXTENSIONS\n \n    --  The full view of a private extension is handled exactly as described\n-   --  above. The model chose for the private view of a private extension\n-   --  is the same for what concerns discriminants (ie they receive the same\n+   --  above. The model chose for the private view of a private extension is\n+   --  the same for what concerns discriminants (ie they receive the same\n    --  treatment as in the tagged case). However, the private view of the\n    --  private extension always inherits the components of the parent base,\n-   --  without replacing any discriminant reference. Strictly speaking this\n-   --  is incorrect. However, Gigi never uses this view to generate code so\n-   --  this is a purely semantic issue. In theory, a set of transformations\n-   --  similar to those given in 5. and 6. above could be applied to private\n-   --  views of private extensions to have the same model of component\n-   --  inheritance as for non private extensions. However, this is not done\n-   --  because it would further complicate private type processing.\n-   --  Semantically speaking, this leaves us in an uncomfortable\n-   --  situation. As an example consider:\n+   --  without replacing any discriminant reference. Strictly speaking this is\n+   --  incorrect. However, Gigi never uses this view to generate code so this\n+   --  is a purely semantic issue. In theory, a set of transformations similar\n+   --  to those given in 5. and 6. above could be applied to private views of\n+   --  private extensions to have the same model of component inheritance as\n+   --  for non private extensions. However, this is not done because it would\n+   --  further complicate private type processing. Semantically speaking, this\n+   --  leaves us in an uncomfortable situation. As an example consider:\n \n    --          package Pack is\n    --             type R (D : integer) is tagged record\n@@ -4901,6 +4896,7 @@ package body Sem_Ch3 is\n    --  a private extension such as T, we first mark T as unconstrained, we\n    --  process it, we perform program derivation and just before returning from\n    --  Build_Derived_Record_Type we mark T as constrained.\n+\n    --  ??? Are there are other uncomfortable cases that we will have to\n    --      deal with.\n \n@@ -5100,9 +5096,9 @@ package body Sem_Ch3 is\n          Mark_Rewrite_Insertion (New_Decl);\n          Insert_Before (N, New_Decl);\n \n-         --  Note that this call passes False for the Derive_Subps\n-         --  parameter because subprogram derivation is deferred until\n-         --  after creating the subtype (see below).\n+         --  Note that this call passes False for the Derive_Subps parameter\n+         --  because subprogram derivation is deferred until after creating\n+         --  the subtype (see below).\n \n          Build_Derived_Type\n            (New_Decl, Parent_Base, New_Base,\n@@ -5323,9 +5319,9 @@ package body Sem_Ch3 is\n                   exit;\n                end if;\n \n-               --  If a new discriminant is used in the constraint,\n-               --  then its subtype must be statically compatible\n-               --  with the parent discriminant's subtype (3.7(15)).\n+               --  If a new discriminant is used in the constraint, then its\n+               --  subtype must be statically compatible with the parent\n+               --  discriminant's subtype (3.7(15)).\n \n                if Present (Corresponding_Discriminant (Discrim))\n                  and then\n@@ -5756,9 +5752,9 @@ package body Sem_Ch3 is\n          return;\n       end if;\n \n-      --  Set delayed freeze and then derive subprograms, we need to do\n-      --  this in this order so that derived subprograms inherit the\n-      --  derived freeze if necessary.\n+      --  Set delayed freeze and then derive subprograms, we need to do this\n+      --  in this order so that derived subprograms inherit the derived freeze\n+      --  if necessary.\n \n       Set_Has_Delayed_Freeze (Derived_Type);\n       if Derive_Subps then\n@@ -6400,8 +6396,8 @@ package body Sem_Ch3 is\n       while Present (Elmt) loop\n          Subp := Node (Elmt);\n \n-         --  Special exception, do not complain about failure to\n-         --  override _Input and _Output, since we always provide\n+         --  Special exception, do not complain about failure to override the\n+         --  stream routines _Input and _Output, since we always provide\n          --  automatic overridings for these subprograms.\n \n          if Is_Abstract (Subp)\n@@ -6471,9 +6467,8 @@ package body Sem_Ch3 is\n       C : Entity_Id;\n \n    begin\n-      --  ??? Also need to check components of record extensions,\n-      --  but not components of protected types (which are always\n-      --  limited).\n+      --  ??? Also need to check components of record extensions, but not\n+      --  components of protected types (which are always limited).\n \n       if not Is_Limited_Type (T) then\n          if Ekind (T) = E_Record_Type then\n@@ -6551,9 +6546,9 @@ package body Sem_Ch3 is\n          end if;\n \n          --  If a generated entity has no completion, then either previous\n-         --  semantic errors have disabled the expansion phase, or else\n-         --  we had missing subunits, or else we are compiling without expan-\n-         --  sion, or else something is very wrong.\n+         --  semantic errors have disabled the expansion phase, or else we had\n+         --  missing subunits, or else we are compiling without expan- sion,\n+         --  or else something is very wrong.\n \n          if not Comes_From_Source (E) then\n             pragma Assert\n@@ -6636,7 +6631,7 @@ package body Sem_Ch3 is\n          --  parent:\n \n          --    procedure Parent.Child (...);\n-         --\n+\n          --    with Parent.Child;\n          --    package body Parent is\n \n@@ -6690,10 +6685,9 @@ package body Sem_Ch3 is\n          then\n             Post_Error;\n \n-         --  A single task declared in the current scope is\n-         --  a constant, verify that the body of its anonymous\n-         --  type is in the same scope. If the task is defined\n-         --  elsewhere, this may be a renaming declaration for\n+         --  A single task declared in the current scope is a constant, verify\n+         --  that the body of its anonymous type is in the same scope. If the\n+         --  task is defined elsewhere, this may be a renaming declaration for\n          --  which no completion is needed.\n \n          elsif Ekind (E) = E_Constant\n@@ -6976,10 +6970,10 @@ package body Sem_Ch3 is\n       Set_First_Rep_Item     (Full, First_Rep_Item (Full_Base));\n       Set_Depends_On_Private (Full, Has_Private_Component (Full));\n \n-      --  Freeze the private subtype entity if its parent is delayed,\n-      --  and not already frozen. We skip this processing if the type\n-      --  is an anonymous subtype of a record component, or is the\n-      --  corresponding record of a protected type, since ???\n+      --  Freeze the private subtype entity if its parent is delayed, and not\n+      --  already frozen. We skip this processing if the type is an anonymous\n+      --  subtype of a record component, or is the corresponding record of a\n+      --  protected type, since ???\n \n       if not Is_Type (Scope (Full)) then\n          Set_Has_Delayed_Freeze (Full,\n@@ -7038,10 +7032,10 @@ package body Sem_Ch3 is\n          Set_Cloned_Subtype (Full, Full_Base);\n       end if;\n \n-      --  It is unsafe to share to bounds of a scalar type, because the\n-      --  Itype is elaborated on demand, and if a bound is non-static\n-      --  then different orders of elaboration in different units will\n-      --  lead to different external symbols.\n+      --  It is unsafe to share to bounds of a scalar type, because the Itype\n+      --  is elaborated on demand, and if a bound is non-static then different\n+      --  orders of elaboration in different units will lead to different\n+      --  external symbols.\n \n       if Is_Scalar_Type (Full_Base) then\n          Set_Scalar_Range (Full,\n@@ -7061,9 +7055,9 @@ package body Sem_Ch3 is\n          end if;\n       end if;\n \n-      --  ??? It seems that a lot of fields are missing that should be\n-      --  copied from  Full_Base to Full. Here are some that are introduced\n-      --  in a non-disruptive way but a cleanup is necessary.\n+      --  ??? It seems that a lot of fields are missing that should be copied\n+      --  from Full_Base to Full. Here are some that are introduced in a\n+      --  non-disruptive way but a cleanup is necessary.\n \n       if Is_Tagged_Type (Full_Base) then\n          Set_Is_Tagged_Type (Full);\n@@ -7505,9 +7499,9 @@ package body Sem_Ch3 is\n \n       function Build_Constrained_Array_Type\n         (Old_Type : Entity_Id) return Entity_Id;\n-      --  If Old_Type is an array type, one of whose indices is\n-      --  constrained by a discriminant, build an Itype whose constraint\n-      --  replaces the discriminant with its value in the constraint.\n+      --  If Old_Type is an array type, one of whose indices is constrained\n+      --  by a discriminant, build an Itype whose constraint replaces the\n+      --  discriminant with its value in the constraint.\n \n       function Build_Constrained_Discriminated_Type\n         (Old_Type : Entity_Id) return Entity_Id;\n@@ -7734,8 +7728,8 @@ package body Sem_Ch3 is\n          Btyp        : Entity_Id := Base_Type (T);\n \n       begin\n-         --  The Related_Node better be here or else we won't be able\n-         --  to attach new itypes to a node in the tree.\n+         --  The Related_Node better be here or else we won't be able to\n+         --  attach new itypes to a node in the tree.\n \n          pragma Assert (Present (Related_Node));\n \n@@ -7800,9 +7794,9 @@ package body Sem_Ch3 is\n \n          --  The corresponding_Discriminant mechanism is incomplete, because\n          --  the correspondence between new and old discriminants is not one\n-         --  to one: one new discriminant can constrain several old ones.\n-         --  In that case, scan sequentially the stored_constraint, the list\n-         --  of discriminants of the parents, and the constraints.\n+         --  to one: one new discriminant can constrain several old ones. In\n+         --  that case, scan sequentially the stored_constraint, the list of\n+         --  discriminants of the parents, and the constraints.\n \n          if Is_Derived_Type (Typ)\n            and then Present (Stored_Constraint (Typ))\n@@ -8567,9 +8561,9 @@ package body Sem_Ch3 is\n       Set_First_Entity               (Full, First_Entity            (Priv));\n       Set_Last_Entity                (Full, Last_Entity             (Priv));\n \n-      --  If access types have been recorded for later handling, keep them\n-      --  in the full view so that they get handled when the full view\n-      --  freeze node is expanded.\n+      --  If access types have been recorded for later handling, keep them in\n+      --  the full view so that they get handled when the full view freeze\n+      --  node is expanded.\n \n       if Present (Freeze_Node (Priv))\n         and then Present (Access_Types_To_Process (Freeze_Node (Priv)))\n@@ -8670,8 +8664,8 @@ package body Sem_Ch3 is\n \n       procedure Collect_Fixed_Components (Typ : Entity_Id) is\n       begin\n-      --  Build association list for discriminants, and find components of\n-      --  the variant part selected by the values of the discriminants.\n+      --  Build association list for discriminants, and find components of the\n+      --  variant part selected by the values of the discriminants.\n \n          Old_C := First_Discriminant (Typ);\n          Discr_Val := First_Elmt (Constraints);\n@@ -9086,9 +9080,9 @@ package body Sem_Ch3 is\n          Prev : Entity_Id;\n \n       begin\n-         --  The visible operation that is overriden is a homonym of\n-         --  the parent subprogram. We scan the homonym chain to find\n-         --  the one whose alias is the subprogram we are deriving.\n+         --  The visible operation that is overriden is a homonym of the\n+         --  parent subprogram. We scan the homonym chain to find the one\n+         --  whose alias is the subprogram we are deriving.\n \n          Prev := Homonym (Parent_Subp);\n          while Present (Prev) loop\n@@ -9265,15 +9259,14 @@ package body Sem_Ch3 is\n       --  or if we are in the private part of an instance. This test\n       --  should still be refined ???\n \n-      --  The test for In_Instance_Not_Visible avoids inheriting the\n-      --  derived operation as a non-visible operation in cases where\n-      --  the parent subprogram might not be visible now, but was\n-      --  visible within the original generic, so it would be wrong\n-      --  to make the inherited subprogram non-visible now. (Not\n-      --  clear if this test is fully correct; are there any cases\n-      --  where we should declare the inherited operation as not\n-      --  visible to avoid it being overridden, e.g., when the\n-      --  parent type is a generic actual with private primitives ???)\n+      --  The test for In_Instance_Not_Visible avoids inheriting the derived\n+      --  operation as a non-visible operation in cases where the parent\n+      --  subprogram might not be visible now, but was visible within the\n+      --  original generic, so it would be wrong to make the inherited\n+      --  subprogram non-visible now. (Not clear if this test is fully\n+      --  correct; are there any cases where we should declare the inherited\n+      --  operation as not visible to avoid it being overridden, e.g., when\n+      --  the parent type is a generic actual with private primitives ???)\n \n       --  (they should be treated the same as other private inherited\n       --  subprograms, but it's not clear how to do this cleanly). ???\n@@ -9301,9 +9294,9 @@ package body Sem_Ch3 is\n          New_Formal := New_Copy (Formal);\n \n          --  Normally we do not go copying parents, but in the case of\n-         --  formals, we need to link up to the declaration (which is\n-         --  the parameter specification), and it is fine to link up to\n-         --  the original formal's parameter specification in this case.\n+         --  formals, we need to link up to the declaration (which is the\n+         --  parameter specification), and it is fine to link up to the\n+         --  original formal's parameter specification in this case.\n \n          Set_Parent (New_Formal, Parent (Formal));\n \n@@ -9356,11 +9349,11 @@ package body Sem_Ch3 is\n            (New_Subp, Is_Valued_Procedure (Parent_Subp));\n       end if;\n \n-      --  A derived function with a controlling result is abstract.\n-      --  If the Derived_Type is a nonabstract formal generic derived\n-      --  type, then inherited operations are not abstract: check is\n-      --  done at instantiation time. If the derivation is for a generic\n-      --  actual, the function is not abstract unless the actual is.\n+      --  A derived function with a controlling result is abstract. If the\n+      --  Derived_Type is a nonabstract formal generic derived type, then\n+      --  inherited operations are not abstract: the required check is done at\n+      --  instantiation time. If the derivation is for a generic actual, the\n+      --  function is not abstract unless the actual is.\n \n       if Is_Generic_Type (Derived_Type)\n         and then not Is_Abstract (Derived_Type)\n@@ -9394,12 +9387,11 @@ package body Sem_Ch3 is\n \n       New_Overloaded_Entity (New_Subp, Derived_Type);\n \n-      --  Check for case of a derived subprogram for the instantiation\n-      --  of a formal derived tagged type, if so mark the subprogram as\n-      --  dispatching and inherit the dispatching attributes of the\n-      --  parent subprogram. The derived subprogram is effectively a\n-      --  renaming of the actual subprogram, so it needs to have the\n-      --  same attributes as the actual.\n+      --  Check for case of a derived subprogram for the instantiation of a\n+      --  formal derived tagged type, if so mark the subprogram as dispatching\n+      --  and inherit the dispatching attributes of the parent subprogram. The\n+      --  derived subprogram is effectively renaming of the actual subprogram,\n+      --  so it needs to have the same attributes as the actual.\n \n       if Present (Actual_Subp)\n         and then Is_Dispatching_Operation (Parent_Subp)\n@@ -9411,8 +9403,8 @@ package body Sem_Ch3 is\n          end if;\n       end if;\n \n-      --  Indicate that a derived subprogram does not require a body\n-      --  and that it does not require processing of default expressions.\n+      --  Indicate that a derived subprogram does not require a body and that\n+      --  it does not require processing of default expressions.\n \n       Set_Has_Completion (New_Subp);\n       Set_Default_Expressions_Processed (New_Subp);\n@@ -9457,8 +9449,8 @@ package body Sem_Ch3 is\n          Act_Elmt := No_Elmt;\n       end if;\n \n-      --  Literals are derived earlier in the process of building the\n-      --  derived type, and are skipped here.\n+      --  Literals are derived earlier in the process of building the derived\n+      --  type, and are skipped here.\n \n       Elmt := First_Elmt (Op_List);\n       while Present (Elmt) loop\n@@ -9578,9 +9570,9 @@ package body Sem_Ch3 is\n         or else (Is_Class_Wide_Type (Parent_Type)\n                   and then Etype (Parent_Type) = T)\n       then\n-         --  If Parent_Type is undefined or illegal, make new type into\n-         --  a subtype of Any_Type, and set a few attributes to prevent\n-         --  cascaded errors. If this is a self-definition, emit error now.\n+         --  If Parent_Type is undefined or illegal, make new type into a\n+         --  subtype of Any_Type, and set a few attributes to prevent cascaded\n+         --  errors. If this is a self-definition, emit error now.\n \n          if T = Parent_Type\n            or else T = Etype (Parent_Type)\n@@ -9718,11 +9710,11 @@ package body Sem_Ch3 is\n \n       elsif No (Extension) and then Taggd then\n \n-         --  If this is within a private part (or body) of a generic\n-         --  instantiation then the derivation is allowed (the parent\n-         --  type can only appear tagged in this case if it's a generic\n-         --  actual type, since it would otherwise have been rejected\n-         --  in the analysis of the generic template).\n+         --  If this declaration is within a private part (or body) of a\n+         --  generic instantiation then the derivation is allowed (the parent\n+         --  type can only appear tagged in this case if it's a generic actual\n+         --  type, since it would otherwise have been rejected in the analysis\n+         --  of the generic template).\n \n          if not Is_Generic_Actual_Type (Parent_Type)\n            or else In_Visible_Part (Scope (Parent_Type))\n@@ -9940,8 +9932,8 @@ package body Sem_Ch3 is\n \n          elsif Ekind (Prev) = E_Incomplete_Type then\n \n-            --  Indicate that the incomplete declaration has a matching\n-            --  full declaration. The defining occurrence of the incomplete\n+            --  Indicate that the incomplete declaration has a matching full\n+            --  declaration. The defining occurrence of the incomplete\n             --  declaration remains the visible one, and the procedure\n             --  Get_Full_View dereferences it whenever the type is used.\n \n@@ -10140,10 +10132,10 @@ package body Sem_Ch3 is\n              Subtype_Indication  => Relocate_Node (Obj_Def)));\n \n          --  This subtype may need freezing, and this will not be done\n-         --  automatically if the object declaration is not in a\n-         --  declarative part. Since this is an object declaration, the\n-         --  type cannot always be frozen here. Deferred constants do not\n-         --  freeze their type (which often enough will be private).\n+         --  automatically if the object declaration is not in declarative\n+         --  part. Since this is an object declaration, the type cannot always\n+         --  be frozen here. Deferred constants do not freeze their type\n+         --  (which often enough will be private).\n \n          if Nkind (P) = N_Object_Declaration\n            and then Constant_Present (P)\n@@ -10354,19 +10346,17 @@ package body Sem_Ch3 is\n \n    --       type T0 (Dx, Dy, Dz...)\n \n-   --  There are zero or more levels of derivation, with each\n-   --  derivation either purely inheriting the discriminants, or\n-   --  defining its own.\n+   --  There are zero or more levels of derivation, with each derivation\n+   --  either purely inheriting the discriminants, or defining its own.\n \n    --       type Ti      is new Ti-1\n    --  or\n    --       type Ti (Dw) is new Ti-1(Dw, 1, X+Y)\n    --  or\n    --       subtype Ti is ...\n \n-   --  The subtype issue is avoided by the use of\n-   --    Original_Record_Component, and the fact that derived subtypes\n-   --    also derive the constraints.\n+   --  The subtype issue is avoided by the use of Original_Record_Component,\n+   --  and the fact that derived subtypes also derive the constraints.\n \n    --  This chain leads back from\n \n@@ -10630,10 +10620,10 @@ package body Sem_Ch3 is\n         (Old_C          : Entity_Id;\n          Plain_Discrim  : Boolean := False;\n          Stored_Discrim : Boolean := False);\n-      --  Inherits component Old_C from Parent_Base to the Derived_Base.\n-      --  If Plain_Discrim is True, Old_C is a discriminant.\n-      --  If Stored_Discrim is True, Old_C is a stored discriminant.\n-      --  If they are both false then Old_C is a regular component.\n+      --  Inherits component Old_C from Parent_Base to the Derived_Base. If\n+      --  Plain_Discrim is True, Old_C is a discriminant. If Stored_Discrim is\n+      --  True, Old_C is a stored discriminant. If they are both false then\n+      --  Old_C is a regular component.\n \n       -----------------------\n       -- Inherit_Component --\n@@ -10786,12 +10776,12 @@ package body Sem_Ch3 is\n \n       --  See if we can apply the second transformation for derived types, as\n       --  explained in point 6. in the comments above Build_Derived_Record_Type\n-      --  This is achieved by appending Derived_Base discriminants into\n-      --  Discs, which has the side effect of returning a non empty Discs\n-      --  list to the caller of Inherit_Components, which is what we want.\n-      --  This must be done for private derived types if there are explicit\n-      --  stored discriminants, to ensure that we can retrieve the values of\n-      --  the constraints provided in the ancestors.\n+      --  This is achieved by appending Derived_Base discriminants into Discs,\n+      --  which has the side effect of returning a non empty Discs list to the\n+      --  caller of Inherit_Components, which is what we want. This must be\n+      --  done for private derived types if there are explicit stored\n+      --  discriminants, to ensure that we can retrieve the values of the\n+      --  constraints provided in the ancestors.\n \n       if Inherit_Discr\n         and then Is_Empty_Elmt_List (Discs)\n@@ -10915,9 +10905,9 @@ package body Sem_Ch3 is\n       Type_Scope     : Entity_Id;\n \n       function Is_Local_Type (Typ : Entity_Id) return Boolean;\n-      --  Check whether parent type of inherited component is declared\n-      --  locally, possibly within a nested package or instance. The\n-      --  current scope is the derived record itself.\n+      --  Check whether parent type of inherited component is declared locally,\n+      --  possibly within a nested package or instance. The current scope is\n+      --  the derived record itself.\n \n       -------------------\n       -- Is_Local_Type --\n@@ -10970,9 +10960,9 @@ package body Sem_Ch3 is\n       elsif not Comes_From_Source (Original_Comp) then\n          return True;\n \n-      --  If we are in the body of an instantiation, the component is\n-      --  visible even when the parent type (possibly defined in an\n-      --  enclosing unit or in a parent unit) might not.\n+      --  If we are in the body of an instantiation, the component is visible\n+      --  even when the parent type (possibly defined in an enclosing unit or\n+      --  in a parent unit) might not.\n \n       elsif In_Instance_Body then\n          return True;\n@@ -11035,8 +11025,8 @@ package body Sem_Ch3 is\n       --     private\n       --       type T is new A2 with null record;\n \n-      --  In this case, the full view of T inherits F1 and F2 but the\n-      --  private view inherits only F1\n+      --  In this case, the full view of T inherits F1 and F2 but the private\n+      --  view inherits only F1\n \n       else\n          declare\n@@ -11226,8 +11216,8 @@ package body Sem_Ch3 is\n            and then Is_Type (Entity (Prefix (Low_Bound (I))))\n            and then Is_Discrete_Type (Entity (Prefix (Low_Bound (I))))\n          then\n-            --  The type of the index will be the type of the prefix,\n-            --  as long as the upper bound is 'Last of the same type.\n+            --  The type of the index will be the type of the prefix, as long\n+            --  as the upper bound is 'Last of the same type.\n \n             Def_Id := Entity (Prefix (Low_Bound (I)));\n \n@@ -11349,18 +11339,17 @@ package body Sem_Ch3 is\n          return;\n       end if;\n \n-      --  We will now create the appropriate Itype to describe the\n-      --  range, but first a check. If we originally had a subtype,\n-      --  then we just label the range with this subtype. Not only\n-      --  is there no need to construct a new subtype, but it is wrong\n-      --  to do so for two reasons:\n+      --  We will now create the appropriate Itype to describe the range, but\n+      --  first a check. If we originally had a subtype, then we just label\n+      --  the range with this subtype. Not only is there no need to construct\n+      --  a new subtype, but it is wrong to do so for two reasons:\n \n-      --    1. A legality concern, if we have a subtype, it must not\n-      --       freeze, and the Itype would cause freezing incorrectly\n+      --    1. A legality concern, if we have a subtype, it must not freeze,\n+      --       and the Itype would cause freezing incorrectly\n \n-      --    2. An efficiency concern, if we created an Itype, it would\n-      --       not be recognized as the same type for the purposes of\n-      --       eliminating checks in some circumstances.\n+      --    2. An efficiency concern, if we created an Itype, it would not be\n+      --       recognized as the same type for the purposes of eliminating\n+      --       checks in some circumstances.\n \n       --  We signal this case by setting the subtype entity in Def_Id\n \n@@ -11604,8 +11593,8 @@ package body Sem_Ch3 is\n \n       Set_Delta_Value (Implicit_Base, Delta_Val);\n \n-      --  Compute default small from given delta, which is the largest\n-      --  power of two that does not exceed the given delta value.\n+      --  Compute default small from given delta, which is the largest power\n+      --  of two that does not exceed the given delta value.\n \n       declare\n          Tmp   : Ureal := Ureal_1;\n@@ -11661,11 +11650,11 @@ package body Sem_Ch3 is\n          end;\n       end if;\n \n-      --  The range for both the implicit base and the declared first\n-      --  subtype cannot be set yet, so we use the special routine\n-      --  Set_Fixed_Range to set a temporary range in place. Note that\n-      --  the bounds of the base type will be widened to be symmetrical\n-      --  and to fill the available bits when the type is frozen.\n+      --  The range for both the implicit base and the declared first subtype\n+      --  cannot be set yet, so we use the special routine Set_Fixed_Range to\n+      --  set a temporary range in place. Note that the bounds of the base\n+      --  type will be widened to be symmetrical and to fill the available\n+      --  bits when the type is frozen.\n \n       --  We could do this with all discrete types, and probably should, but\n       --  we absolutely have to do it for fixed-point, since the end-points\n@@ -11704,9 +11693,10 @@ package body Sem_Ch3 is\n    begin\n       if Present (Full_B) then\n \n-         --  The Base_Type is already completed, we can complete the\n-         --  subtype now. We have to create a new entity with the same name,\n-         --  Thus we can't use Create_Itype.\n+         --  The Base_Type is already completed, we can complete the subtype\n+         --  now. We have to create a new entity with the same name, Thus we\n+         --  can't use Create_Itype.\n+\n          --  This is messy, should be fixed ???\n \n          Full := Make_Defining_Identifier (Sloc (Id), Chars (Id));\n@@ -12110,11 +12100,10 @@ package body Sem_Ch3 is\n       end if;\n \n       --  Create a full declaration for all its subtypes recorded in\n-      --  Private_Dependents and swap them similarly to the base type.\n-      --  These are subtypes that have been define before the full\n-      --  declaration of the private type. We also swap the entry in\n-      --  Private_Dependents list so we can properly restore the\n-      --  private view on exit from the scope.\n+      --  Private_Dependents and swap them similarly to the base type. These\n+      --  are subtypes that have been define before the full declaration of\n+      --  the private type. We also swap the entry in Private_Dependents list\n+      --  so we can properly restore the private view on exit from the scope.\n \n       declare\n          Priv_Elmt : Elmt_Id;\n@@ -12191,15 +12180,15 @@ package body Sem_Ch3 is\n             else\n                --  In this case the partial view is untagged, so here we\n                --  locate all of the earlier primitives that need to be\n-               --  treated as dispatching (those that appear between the\n-               --  two views). Note that these additional operations must\n-               --  all be new operations (any earlier operations that\n-               --  override inherited operations of the full view will\n-               --  already have been inserted in the primitives list and\n-               --  marked as dispatching by Check_Operation_From_Private_View.\n-               --  Note that implicit \"/=\" operators are excluded from being\n-               --  added to the primitives list since they shouldn't be\n-               --  treated as dispatching (tagged \"/=\" is handled specially).\n+               --  treated as dispatching (those that appear between the two\n+               --  views). Note that these additional operations must all be\n+               --  new operations (any earlier operations that override\n+               --  inherited operations of the full view will already have\n+               --  been inserted in the primitives list and marked as\n+               --  dispatching by Check_Operation_From_Private_View. Note that\n+               --  implicit \"/=\" operators are excluded from being added to\n+               --  the primitives list since they shouldn't be treated as\n+               --  dispatching (tagged \"/=\" is handled specially).\n \n                Prim := Next_Entity (Full_T);\n                while Present (Prim) and then Prim /= Priv_T loop\n@@ -12406,12 +12395,11 @@ package body Sem_Ch3 is\n             Set_Etype (Hi, T);\n          end if;\n \n-         --  If the bounds of the range have been mistakenly given as\n-         --  string literals (perhaps in place of character literals),\n-         --  then an error has already been reported, but we rewrite\n-         --  the string literal as a bound of the range's type to\n-         --  avoid blowups in later processing that looks at static\n-         --  values.\n+         --  If the bounds of the range have been mistakenly given as string\n+         --  literals (perhaps in place of character literals), then an error\n+         --  has already been reported, but we rewrite the string literal as a\n+         --  bound of the range's type to avoid blowups in later processing\n+         --  that looks at static values.\n \n          if Nkind (Lo) = N_String_Literal then\n             Rewrite (Lo,\n@@ -12443,8 +12431,10 @@ package body Sem_Ch3 is\n          --  not be raised.\n \n          --  ??? The following code should be cleaned up as follows\n+\n          --  1. The Is_Null_Range (Lo, Hi) test should disappear since it\n          --     is done in the call to Range_Check (R, T); below\n+\n          --  2. The use of R_Check_Off should be investigated and possibly\n          --     removed, this would clean up things a bit.\n \n@@ -12680,11 +12670,11 @@ package body Sem_Ch3 is\n             Def_Id := Defining_Identifier (Parent (P));\n \n          --  Implicit case, the Def_Id must be created as an implicit type.\n-         --  The one exception arises in the case of concurrent types,\n-         --  array and access types, where other subsidiary implicit types\n-         --  may be created and must appear before the main implicit type.\n-         --  In these cases we leave Def_Id set to Empty as a signal that\n-         --  Create_Itype has not yet been called to create Def_Id.\n+         --  The one exception arises in the case of concurrent types, array\n+         --  and access types, where other subsidiary implicit types may be\n+         --  created and must appear before the main implicit type. In these\n+         --  cases we leave Def_Id set to Empty as a signal that Create_Itype\n+         --  has not yet been called to create Def_Id.\n \n          else\n             if Is_Array_Type (Subtype_Mark_Id)\n@@ -13064,18 +13054,17 @@ package body Sem_Ch3 is\n    --     A small clause may affect the values of the end-points\n    --     We try to include the end-points if it does not affect the size\n \n-   --  This means that the actual end-points must be established at the\n-   --  point when the type is frozen. Meanwhile, we first narrow the range\n-   --  as permitted (so that it will fit if necessary in a small specified\n-   --  size), and then build a range subtree with these narrowed bounds.\n+   --  This means that the actual end-points must be established at the point\n+   --  when the type is frozen. Meanwhile, we first narrow the range as\n+   --  permitted (so that it will fit if necessary in a small specified size),\n+   --  and then build a range subtree with these narrowed bounds.\n \n-   --  Set_Fixed_Range constructs the range from real literal values, and\n-   --  sets the range as the Scalar_Range of the given fixed-point type\n-   --  entity.\n+   --  Set_Fixed_Range constructs the range from real literal values, and sets\n+   --  the range as the Scalar_Range of the given fixed-point type entity.\n \n-   --  The parent of this range is set to point to the entity so that it\n-   --  is properly hooked into the tree (unlike normal Scalar_Range entries\n-   --  for other scalar types, which are just pointers to the range in the\n+   --  The parent of this range is set to point to the entity so that it is\n+   --  properly hooked into the tree (unlike normal Scalar_Range entries for\n+   --  other scalar types, which are just pointers to the range in the\n    --  original tree, this would otherwise be an orphan).\n \n    --  The tree is left unanalyzed. When the type is frozen, the processing"}, {"sha": "bc069fa406538dc077607d1776461bf312a2f828", "filename": "gcc/ada/sem_ch6.adb", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5b62485c35a3c9a8e20ffce49b99f12791238e1/gcc%2Fada%2Fsem_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5b62485c35a3c9a8e20ffce49b99f12791238e1/gcc%2Fada%2Fsem_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch6.adb?ref=a5b62485c35a3c9a8e20ffce49b99f12791238e1", "patch": "@@ -129,15 +129,6 @@ package body Sem_Ch6 is\n    --  N is the N_Subprogram_Body node for a subprogram. This routine applies\n    --  the alpha ordering rule for N if this ordering requirement applicable.\n \n-   function Is_Non_Overriding_Operation\n-     (Prev_E : Entity_Id;\n-      New_E  : Entity_Id) return Boolean;\n-   --  Enforce the rule given in 12.3(18): a private operation in an instance\n-   --  overrides an inherited operation only if the corresponding operation\n-   --  was overriding in the generic. This can happen for primitive operations\n-   --  of types derived (in the generic unit) from formal private or formal\n-   --  derived types.\n-\n    procedure Check_Returns\n      (HSS  : Node_Id;\n       Mode : Character;\n@@ -172,6 +163,15 @@ package body Sem_Ch6 is\n    --  sufficient: the formals must become the current entities for\n    --  their names.\n \n+   function Is_Non_Overriding_Operation\n+     (Prev_E : Entity_Id;\n+      New_E  : Entity_Id) return Boolean;\n+   --  Enforce the rule given in 12.3(18): a private operation in an instance\n+   --  overrides an inherited operation only if the corresponding operation\n+   --  was overriding in the generic. This can happen for primitive operations\n+   --  of types derived (in the generic unit) from formal private or formal\n+   --  derived types.\n+\n    procedure Make_Inequality_Operator (S : Entity_Id);\n    --  Create the declaration for an inequality operator that is implicitly\n    --  created by a user-defined equality operator that yields a boolean."}, {"sha": "5ffa86396c41654c90826909bf674a14095d758d", "filename": "gcc/ada/sem_ch7.adb", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5b62485c35a3c9a8e20ffce49b99f12791238e1/gcc%2Fada%2Fsem_ch7.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5b62485c35a3c9a8e20ffce49b99f12791238e1/gcc%2Fada%2Fsem_ch7.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch7.adb?ref=a5b62485c35a3c9a8e20ffce49b99f12791238e1", "patch": "@@ -92,7 +92,7 @@ package body Sem_Ch7 is\n    --  is an inner package.\n \n    function Is_Private_Base_Type (E : Entity_Id) return Boolean;\n-   --  True for a private type that is not a subtype.\n+   --  True for a private type that is not a subtype\n \n    function Is_Visible_Dependent (Dep : Entity_Id) return Boolean;\n    --  If the private dependent is a private type whose full view is\n@@ -288,7 +288,7 @@ package body Sem_Ch7 is\n          Append_Entity (Body_Id, Scope (Spec_Id));\n       end if;\n \n-      --  Indicate that we are currently compiling the body of the package.\n+      --  Indicate that we are currently compiling the body of the package\n \n       Set_In_Package_Body (Spec_Id);\n       Set_Has_Completion (Spec_Id);\n@@ -377,7 +377,7 @@ package body Sem_Ch7 is\n \n       End_Package_Scope (Spec_Id);\n \n-      --  All entities declared in body are not visible.\n+      --  All entities declared in body are not visible\n \n       declare\n          E : Entity_Id;\n@@ -877,7 +877,7 @@ package body Sem_Ch7 is\n          Analyze_Declarations (Vis_Decls);\n       end if;\n \n-      --  Verify that incomplete types have received full declarations.\n+      --  Verify that incomplete types have received full declarations\n \n       E := First_Entity (Id);\n       while Present (E) loop\n@@ -1485,7 +1485,7 @@ package body Sem_Ch7 is\n          Next_Entity (Id);\n       end loop;\n \n-      --  Next make other declarations in the private part visible as well.\n+      --  Next make other declarations in the private part visible as well\n \n       Id := First_Private_Entity (P);\n \n@@ -1669,7 +1669,7 @@ package body Sem_Ch7 is\n       --  that need to be available for the partial view also.\n \n       function Type_In_Use (T : Entity_Id) return Boolean;\n-      --  Check whether type or base type appear in an active use_type clause.\n+      --  Check whether type or base type appear in an active use_type clause\n \n       ------------------------------\n       -- Preserve_Full_Attributes --\n@@ -1767,7 +1767,7 @@ package body Sem_Ch7 is\n               In_Use (P) and not Is_Hidden (Id));\n          end if;\n \n-         --  Local entities are not immediately visible outside of the package.\n+         --  Local entities are not immediately visible outside of the package\n \n          Set_Is_Immediately_Visible (Id, False);\n "}, {"sha": "60a22bec549cb32ba382f1d39cbdc480d2269c53", "filename": "gcc/ada/sinfo.ads", "status": "modified", "additions": 6, "deletions": 9, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5b62485c35a3c9a8e20ffce49b99f12791238e1/gcc%2Fada%2Fsinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5b62485c35a3c9a8e20ffce49b99f12791238e1/gcc%2Fada%2Fsinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsinfo.ads?ref=a5b62485c35a3c9a8e20ffce49b99f12791238e1", "patch": "@@ -2159,7 +2159,7 @@ package Sinfo is\n \n       --  INTEGER_TYPE_DEFINITION ::=\n       --    SIGNED_INTEGER_TYPE_DEFINITION\n-      --    MODULAR_TYPE_DEFINITION\n+      --  | MODULAR_TYPE_DEFINITION\n \n       -------------------------------------------\n       -- 3.5.4  Signed Integer Type Definition --\n@@ -2168,17 +2168,17 @@ package Sinfo is\n       --  SIGNED_INTEGER_TYPE_DEFINITION ::=\n       --    range static_SIMPLE_EXPRESSION .. static_SIMPLE_EXPRESSION\n \n-      --  Note: the Low_Bound and High_Bound fields are set to Empty for\n-      --  integer types defined in package Standard.\n+      --  Note: the Low_Bound and High_Bound fields are set to Empty\n+      --  for integer types defined in package Standard.\n \n       --  N_Signed_Integer_Type_Definition\n       --  Sloc points to RANGE\n       --  Low_Bound (Node1)\n       --  High_Bound (Node2)\n \n-      -----------------------------------------\n-      -- 3.5.4  Unsigned Range Specification --\n-      -----------------------------------------\n+      ------------------------------------\n+      -- 3.5.4  Modular Type Definition --\n+      ------------------------------------\n \n       --  MODULAR_TYPE_DEFINITION ::= mod static_EXPRESSION\n \n@@ -2236,9 +2236,6 @@ package Sinfo is\n \n       --  Note: In Ada 83, the EXPRESSION must be a SIMPLE_EXPRESSION\n \n-      --  Note: the Delta_Expression and Real_Range_Specification fields\n-      --  are set to Empty for fixed point types declared in Standard.\n-\n       --  N_Ordinary_Fixed_Point_Definition\n       --  Sloc points to DELTA\n       --  Delta_Expression (Node3)"}, {"sha": "0dbd0f19a3212e9aa3f501c844283e3347fb61c1", "filename": "gcc/ada/vms_data.ads", "status": "modified", "additions": 9, "deletions": 31, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5b62485c35a3c9a8e20ffce49b99f12791238e1/gcc%2Fada%2Fvms_data.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5b62485c35a3c9a8e20ffce49b99f12791238e1/gcc%2Fada%2Fvms_data.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fvms_data.ads?ref=a5b62485c35a3c9a8e20ffce49b99f12791238e1", "patch": "@@ -4051,22 +4051,6 @@ package VMS_Data is\n    -- Switches for GNAT METRIC --\n    ------------------------------\n \n-   S_Metric_Config  : aliased constant S := \"/CONFIGURATION_PRAGMAS_FILE=<\" &\n-                                              \"-gnatec>\";\n-   --        /CONFIGURATION_PRAGMAS_FILE=file\n-   --\n-   --   Specify a configuration pragmas file that need to be taken into account\n-\n-   S_Metric_Current : aliased constant S := \"/CURRENT_DIRECTORY \"           &\n-                                             \"!-I-\";\n-   --        /CURRENT_DIRECTORY (D)\n-   --\n-   --   Look for files in the directory where GNAT METRIC was invoked\n-   --\n-   --        /NOCURRENT_DIRECTORY\n-   --\n-   --   Do not look for files in the directory where GNAT METRIC was invoked\n-\n    S_Metric_Debug    : aliased constant S := \"/DEBUG_OUTPUT \"               &\n                                              \"-dv\";\n    --      /DEBUG_OUTPUT\n@@ -4082,24 +4066,27 @@ package VMS_Data is\n \n    S_Metric_Element : aliased constant S := \"/ELEMENT_METRICS=\"             &\n                                              \"ALL \"                         &\n-                                              \"!-ed,!-es,!-enl,!-eis,\"      &\n-                                              \"!-eas,!-eit,!-eat,!-enu \"    &\n+                                              \"!-ed,!-es,!-enl,!-eps,\"      &\n+                                              \"!-eas,!-ept,!-eat,!-enu,\"    &\n+                                              \"!-ec \"                       &\n                                              \"DECLARATION_TOTAL \"           &\n                                               \"-ed \"                        &\n                                              \"STATEMENT_TOTAL \"             &\n                                               \"-es \"                        &\n                                              \"LOOP_NESTING_MAX \"            &\n                                               \"-enl \"                       &\n                                              \"INT_SUBPROGRAMS \"             &\n-                                              \"-eis \"                       &\n+                                              \"-eps \"                       &\n                                              \"SUBPROGRAMS_ALL \"             &\n                                               \"-eas \"                       &\n                                              \"INT_TYPES \"                   &\n-                                              \"-eit \"                       &\n+                                              \"-ept \"                       &\n                                              \"TYPES_ALL \"                   &\n                                               \"-eat \"                       &\n                                              \"PROGRAM_NESTING_MAX \"         &\n-                                              \"-enu\";\n+                                              \"-enu \"                       &\n+                                             \"CONSTRUCT_NESTING_MAX \"       &\n+                                              \"-ec\";\n    --       /ELEMENT_METRICS=(option, option ...)\n    --\n    --   Specifies the element metrics to be computed (if not set, all the\n@@ -4232,12 +4219,6 @@ package VMS_Data is\n    --   the number of program units left to be processed. This option turns\n    --   this trace off.\n \n-   S_Metric_Search  : aliased constant S := \"/SEARCH=*\"                     &\n-                                             \"-I*\";\n-   --        /SEARCH=(directory, ...)\n-   --\n-   --   When looking for source files also look in the specified directories.\n-\n    S_Metric_Suffix  : aliased constant S := \"/SUFFIX_DETAILS=\" & '\"'        &\n                                              \"-o\" & '\"';\n    --        /SUFFIX_DETAILS=suffix\n@@ -4290,9 +4271,7 @@ package VMS_Data is\n    --   Place the XML output into the specified file\n \n    Metric_Switches : aliased constant Switches :=\n-     (S_Metric_Config   'Access,\n-      S_Metric_Current  'Access,\n-      S_Metric_Debug    'Access,\n+     (S_Metric_Debug    'Access,\n       S_Metric_Direct   'Access,\n       S_Metric_Element  'Access,\n       S_Metric_Ext      'Access,\n@@ -4303,7 +4282,6 @@ package VMS_Data is\n       S_Metric_Mess     'Access,\n       S_Metric_Project  'Access,\n       S_Metric_Quiet    'Access,\n-      S_Metric_Search   'Access,\n       S_Metric_Suffix   'Access,\n       S_Metric_Suppress 'Access,\n       S_Metric_Verbose  'Access,"}]}