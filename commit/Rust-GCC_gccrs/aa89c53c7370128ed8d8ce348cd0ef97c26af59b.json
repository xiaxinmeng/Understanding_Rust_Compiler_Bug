{"sha": "aa89c53c7370128ed8d8ce348cd0ef97c26af59b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWE4OWM1M2M3MzcwMTI4ZWQ4ZDhjZTM0OGNkMGVmOTdjMjZhZjU5Yg==", "commit": {"author": {"name": "Matthias Kretz", "email": "kretz@kde.org", "date": "2021-02-03T15:49:29Z"}, "committer": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2021-02-03T15:49:29Z"}, "message": "libstdc++: Support skip, only, expensive, and xfail markers for simd tests\n\nlibstdc++-v3/ChangeLog:\n\n\t* testsuite/experimental/simd/driver.sh: Implement skip, only,\n\texpensive, and xfail markers. They can select on type, ABI tag\n\tsubset number, target-triplet, and compiler flags.\n\t* testsuite/experimental/simd/generate_makefile.sh: The summary\n\tnow includes lines for unexpected passes and expected failures.\n\tIf the skip or only markers are only conditional on the type, do\n\tnot generate rules for those types.\n\t* testsuite/experimental/simd/tests/abs.cc: Mark test expensive\n\tfor ABI tag subsets 1-9.\n\t* testsuite/experimental/simd/tests/algorithms.cc: Ditto.\n\t* testsuite/experimental/simd/tests/broadcast.cc: Ditto.\n\t* testsuite/experimental/simd/tests/casts.cc: Ditto.\n\t* testsuite/experimental/simd/tests/generator.cc: Ditto.\n\t* testsuite/experimental/simd/tests/integer_operators.cc: Ditto.\n\t* testsuite/experimental/simd/tests/loadstore.cc: Ditto.\n\t* testsuite/experimental/simd/tests/mask_broadcast.cc: Ditto.\n\t* testsuite/experimental/simd/tests/mask_conversions.cc: Ditto.\n\t* testsuite/experimental/simd/tests/mask_implicit_cvt.cc: Ditto.\n\t* testsuite/experimental/simd/tests/mask_loadstore.cc: Ditto.\n\t* testsuite/experimental/simd/tests/mask_operator_cvt.cc: Ditto.\n\t* testsuite/experimental/simd/tests/mask_operators.cc: Ditto.\n\t* testsuite/experimental/simd/tests/mask_reductions.cc: Ditto.\n\t* testsuite/experimental/simd/tests/operator_cvt.cc: Ditto.\n\t* testsuite/experimental/simd/tests/operators.cc: Ditto.\n\t* testsuite/experimental/simd/tests/reductions.cc: Ditto.\n\t* testsuite/experimental/simd/tests/simd.cc: Ditto.\n\t* testsuite/experimental/simd/tests/split_concat.cc: Ditto.\n\t* testsuite/experimental/simd/tests/splits.cc: Ditto.\n\t* testsuite/experimental/simd/tests/where.cc: Ditto.\n\t* testsuite/experimental/simd/tests/fpclassify.cc: Ditto. In\n\taddition replace \"test only floattypes\" marker by unconditional\n\t\"float|double|ldouble\" only marker.\n\t* testsuite/experimental/simd/tests/frexp.cc: Ditto.\n\t* testsuite/experimental/simd/tests/hypot3_fma.cc: Ditto.\n\t* testsuite/experimental/simd/tests/ldexp_scalbn_scalbln_modf.cc:\n\tDitto.\n\t* testsuite/experimental/simd/tests/logarithm.cc: Ditto.\n\t* testsuite/experimental/simd/tests/math_1arg.cc: Ditto.\n\t* testsuite/experimental/simd/tests/math_2arg.cc: Ditto.\n\t* testsuite/experimental/simd/tests/remqo.cc: Ditto.\n\t* testsuite/experimental/simd/tests/trigonometric.cc: Ditto.\n\t* testsuite/experimental/simd/tests/trunc_ceil_floor.cc: Ditto.\n\t* testsuite/experimental/simd/tests/sincos.cc: Ditto. In\n\taddition, xfail on run because the reference data is missing.", "tree": {"sha": "05e73ca0f6c91cd6feadbac2e46eb8a5ff226cbc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/05e73ca0f6c91cd6feadbac2e46eb8a5ff226cbc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/aa89c53c7370128ed8d8ce348cd0ef97c26af59b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aa89c53c7370128ed8d8ce348cd0ef97c26af59b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aa89c53c7370128ed8d8ce348cd0ef97c26af59b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aa89c53c7370128ed8d8ce348cd0ef97c26af59b/comments", "author": {"login": "mattkretz", "id": 3306474, "node_id": "MDQ6VXNlcjMzMDY0NzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3306474?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mattkretz", "html_url": "https://github.com/mattkretz", "followers_url": "https://api.github.com/users/mattkretz/followers", "following_url": "https://api.github.com/users/mattkretz/following{/other_user}", "gists_url": "https://api.github.com/users/mattkretz/gists{/gist_id}", "starred_url": "https://api.github.com/users/mattkretz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mattkretz/subscriptions", "organizations_url": "https://api.github.com/users/mattkretz/orgs", "repos_url": "https://api.github.com/users/mattkretz/repos", "events_url": "https://api.github.com/users/mattkretz/events{/privacy}", "received_events_url": "https://api.github.com/users/mattkretz/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "74f2ae3f1fcd4f7b735cbe2207ac84f4d70f8cd0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/74f2ae3f1fcd4f7b735cbe2207ac84f4d70f8cd0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/74f2ae3f1fcd4f7b735cbe2207ac84f4d70f8cd0"}], "stats": {"total": 291, "additions": 225, "deletions": 66}, "files": [{"sha": "84f3829c2d4ec71351c45fe0f5ff293d892031b0", "filename": "libstdc++-v3/testsuite/experimental/simd/driver.sh", "status": "modified", "additions": 98, "deletions": 16, "changes": 114, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa89c53c7370128ed8d8ce348cd0ef97c26af59b/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fsimd%2Fdriver.sh", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa89c53c7370128ed8d8ce348cd0ef97c26af59b/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fsimd%2Fdriver.sh", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fsimd%2Fdriver.sh?ref=aa89c53c7370128ed8d8ce348cd0ef97c26af59b", "patch": "@@ -138,28 +138,38 @@ if [ -n \"$only\" ]; then\n fi\n \n if [ $abi -eq 0 ]; then\n-  abi=\"\"\n+  abiflag=\"\"\n elif [ $abi -gt 0 -a $abi -lt 10 ]; then\n-  abi=\"-DEXTENDEDTESTS=$((abi-1))\"\n+  abiflag=\"-DEXTENDEDTESTS=$((abi-1))\"\n else\n   echo \"Error: The -a argument must be a value between 0 and 9 (inclusive).\" >&2\n   exit 1\n fi\n \n fail() {\n-  echo \"FAIL: $src $type $abi ($*)\" | tee -a \"$sum\" \"$log\"\n+  echo \"FAIL: $src $type $abiflag ($*)\" | tee -a \"$sum\" \"$log\"\n+}\n+\n+xpass() {\n+  echo \"XPASS: $src $type $abiflag ($*)\" | tee -a \"$sum\" \"$log\"\n+}\n+\n+xfail() {\n+  $quiet || echo \"XFAIL: $src $type $abiflag ($*)\"\n+  echo \"XFAIL: $src $type $abiflag ($*)\" >> \"$sum\"\n+  echo \"XFAIL: $src $type $abiflag ($*)\" >> \"$log\"\n }\n \n pass() {\n-  $quiet || echo \"PASS: $src $type $abi ($*)\"\n-  echo \"PASS: $src $type $abi ($*)\" >> \"$sum\"\n-  echo \"PASS: $src $type $abi ($*)\" >> \"$log\"\n+  $quiet || echo \"PASS: $src $type $abiflag ($*)\"\n+  echo \"PASS: $src $type $abiflag ($*)\" >> \"$sum\"\n+  echo \"PASS: $src $type $abiflag ($*)\" >> \"$log\"\n }\n \n unsupported() {\n-  $quiet || echo \"UNSUPPORTED: $src $type $abi ($*)\"\n-  echo \"UNSUPPORTED: $src $type $abi ($*)\" >> \"$sum\"\n-  echo \"UNSUPPORTED: $src $type $abi ($*)\" >> \"$log\"\n+  $quiet || echo \"UNSUPPORTED: $src $type $abiflag ($*)\"\n+  echo \"UNSUPPORTED: $src $type $abiflag ($*)\" >> \"$sum\"\n+  echo \"UNSUPPORTED: $src $type $abiflag ($*)\" >> \"$log\"\n }\n \n verify_compilation() {\n@@ -173,6 +183,8 @@ verify_compilation() {\n       elif ! $quiet; then\n         grep -i 'warning:' \"$log\" | head -n5\n       fi\n+    elif [ \"$xfail\" = \"compile\" ]; then\n+      xpass \"test for excess errors\"\n     else\n       pass \"test for excess errors\"\n     fi\n@@ -181,7 +193,12 @@ verify_compilation() {\n       fail \"timeout: test for excess errors\"\n     else\n       errors=$(grep -ic 'error:' \"$log\")\n-      fail \"excess errors:\" $errors\n+      if [ \"$xfail\" = \"compile\" ]; then\n+        xfail \"excess errors:\" $errors\n+        exit 0\n+      else\n+        fail \"excess errors:\" $errors\n+      fi\n     fi\n     if $verbose; then\n       cat \"$log\"\n@@ -196,11 +213,18 @@ verify_test() {\n   failed=$1\n   if [ $failed -eq 0 ]; then\n     rm \"$exe\"\n-    pass \"execution test\"\n+    if [ \"$xfail\" = \"run\" ]; then\n+      xpass \"execution test\"\n+    else\n+      pass \"execution test\"\n+    fi\n   else\n     $keep_failed || rm \"$exe\"\n     if [ $failed -eq 124 ]; then\n       fail \"timeout: execution test\"\n+    elif [ \"$xfail\" = \"run\" ]; then\n+      xfail \"execution test\"\n+      exit 0\n     else\n       fail \"execution test\"\n     fi\n@@ -225,16 +249,74 @@ write_log_and_verbose() {\n   fi\n }\n \n+matches() {\n+  eval \"case '$1' in\n+    $2) return 0;; esac\"\n+  return 1\n+}\n+\n+test_selector() {\n+  string=\"$1\"\n+  pat_type=\"${string%% *}\"\n+  if matches \"$shorttype\" \"$pat_type\"; then\n+    string=\"${string#* }\"\n+    pat_abi=\"${string%% *}\"\n+    if matches \"$abi\" \"$pat_abi\"; then\n+      string=\"${string#* }\"\n+      pat_triplet=\"${string%% *}\"\n+      [ -z \"$target_triplet\" ] && target_triplet=$($CXX -dumpmachine)\n+      if matches \"$target_triplet\" \"$pat_triplet\"; then\n+        pat_flags=\"${string#* }\"\n+        if matches \"$CXXFLAGS\" \"$pat_flags\"; then\n+          return 0\n+        fi\n+      fi\n+    fi\n+  fi\n+  return 1\n+}\n+\n rm -f \"$log\" \"$sum\"\n touch \"$log\" \"$sum\"\n \n-if ! $run_expensive && [ -n \"$abi\" ]; then\n-  unsupported \"skip expensive tests\"\n-  exit 0\n+skip=\"$(head -n25 \"$src\" | grep '^//\\s*skip: ')\"\n+if [ -n \"$skip\" ]; then\n+  skip=\"$(echo \"$skip\" | sed -e 's/^.*:\\s*//' -e 's/ \\+/ /g')\"\n+  if test_selector \"$skip\"; then\n+    # silently skip this test\n+    exit 0\n+  fi\n+fi\n+only=\"$(head -n25 \"$src\" | grep '^//\\s*only: ')\"\n+if [ -n \"$only\" ]; then\n+  only=\"$(echo \"$only\" | sed -e 's/^.*:\\s*//' -e 's/ \\+/ /g')\"\n+  if ! test_selector \"$only\"; then\n+    # silently skip this test\n+    exit 0\n+  fi\n+fi\n+if ! $run_expensive; then\n+  expensive=\"$(head -n25 \"$src\" | grep '^//\\s*expensive: ')\"\n+  if [ -n \"$expensive\" ]; then\n+    expensive=\"$(echo \"$expensive\" | sed -e 's/^.*:\\s*//' -e 's/ \\+/ /g')\"\n+    if test_selector \"$expensive\"; then\n+      unsupported \"skip expensive tests\"\n+      exit 0\n+    fi\n+  fi\n+fi\n+xfail=\"$(head -n25 \"$src\" | grep '^//\\s*xfail: ')\"\n+if [ -n \"$xfail\" ]; then\n+  xfail=\"$(echo \"$xfail\" | sed -e 's/^.*:\\s*//' -e 's/ \\+/ /g')\"\n+  if test_selector \"${xfail#* }\"; then\n+    xfail=\"${xfail%% *}\"\n+  else\n+    unset xfail\n+  fi\n fi\n \n-write_log_and_verbose \"$CXX $src $@ -D_GLIBCXX_SIMD_TESTTYPE=$type $abi -o $exe\"\n-timeout $timeout \"$CXX\" \"$src\" \"$@\" \"-D_GLIBCXX_SIMD_TESTTYPE=$type\" $abi -o \"$exe\" >> \"$log\" 2>&1\n+write_log_and_verbose \"$CXX $src $@ -D_GLIBCXX_SIMD_TESTTYPE=$type $abiflag -o $exe\"\n+timeout $timeout \"$CXX\" \"$src\" \"$@\" \"-D_GLIBCXX_SIMD_TESTTYPE=$type\" $abiflag -o \"$exe\" >> \"$log\" 2>&1\n verify_compilation $?\n if [ -n \"$sim\" ]; then\n   write_log_and_verbose \"$sim ./$exe\""}, {"sha": "553bc98f60bb7a368811f37b25ecb8fc5afd4737", "filename": "libstdc++-v3/testsuite/experimental/simd/generate_makefile.sh", "status": "modified", "additions": 83, "deletions": 39, "changes": 122, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa89c53c7370128ed8d8ce348cd0ef97c26af59b/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fsimd%2Fgenerate_makefile.sh", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa89c53c7370128ed8d8ce348cd0ef97c26af59b/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fsimd%2Fgenerate_makefile.sh", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fsimd%2Fgenerate_makefile.sh?ref=aa89c53c7370128ed8d8ce348cd0ef97c26af59b", "patch": "@@ -99,53 +99,97 @@ all: simd_testsuite.sum\n simd_testsuite.sum: simd_testsuite.log\n \t@printf \"\\n\\t\\t=== simd_testsuite \\$(TESTFLAGS) Summary ===\\n\\n\"\\\\\n \t\"# of expected passes:\\t\\t\\$(shell grep -c '^PASS:' \\$@)\\n\"\\\\\n+\t\"# of unexpected passes:\\t\\t\\$(shell grep -c '^XPASS:' \\$@)\\n\"\\\\\n \t\"# of unexpected failures:\\t\\$(shell grep -c '^FAIL:' \\$@)\\n\"\\\\\n+\t\"# of expected failures:\\t\\t\\$(shell grep -c '^XFAIL:' \\$@)\\n\"\\\\\n \t\"# of unsupported tests:\\t\\t\\$(shell grep -c '^UNSUPPORTED:' \\$@)\\n\"\\\\\n \t  | tee -a \\$@\n \n EOF\n \n+matches() {\n+  eval \"case '$1' in\n+    $2) return 0;; esac\"\n+  return 1\n+}\n+\n+cxx_type() {\n+  case \"$1\" in\n+    ldouble) echo \"long double\";;\n+    ullong)  echo \"unsigned long long\";;\n+    ulong)   echo \"unsigned long\";;\n+    llong)   echo \"long long\";;\n+    uint)    echo \"unsigned int\";;\n+    ushort)  echo \"unsigned short\";;\n+    uchar)   echo \"unsigned char\";;\n+    schar)   echo \"signed char\";;\n+    *)       echo \"$1\";;\n+  esac\n+}\n+\n+filter_types() {\n+  only=\"$1\"\n+  skip=\"$2\"\n+  shift 2\n+  if [ -z \"$only\" -a -z \"$skip\" ]; then\n+    for x in \"$@\"; do\n+      cxx_type \"$x\"\n+      echo \"$x\"\n+    done\n+  elif [ -z \"$skip\" ]; then\n+    for x in \"$@\"; do\n+      if matches \"$x\" \"$only\"; then\n+        cxx_type \"$x\"\n+        echo \"$x\"\n+      fi\n+    done\n+  elif [ -z \"$only\" ]; then\n+    for x in \"$@\"; do\n+      matches \"$x\" \"$skip\" && continue\n+      cxx_type \"$x\"\n+      echo \"$x\"\n+    done\n+  else\n+    for x in \"$@\"; do\n+      matches \"$x\" \"$skip\" && continue\n+      if matches \"$x\" \"$only\"; then\n+        cxx_type \"$x\"\n+        echo \"$x\"\n+      fi\n+    done\n+  fi\n+}\n+\n all_types() {\n   src=\"$1\"\n-  cat <<EOF\n-long double\n-ldouble\n-double\n-double\n-float\n-float\n-EOF\n-  ([ -n \"$src\" ] && grep -q \"test only floattypes\" \"$src\") || \\\n-  cat <<EOF\n-long long\n-llong\n-unsigned long long\n-ullong\n-unsigned long\n-ulong\n-long\n-long\n-int\n-int\n-unsigned int\n-uint\n-short\n-short\n-unsigned short\n-ushort\n-char\n-char\n-signed char\n-schar\n-unsigned char\n-uchar\n-char32_t\n-char32_t\n-char16_t\n-char16_t\n-wchar_t\n-wchar_t\n-EOF\n+  only=\n+  skip=\n+  if [ -n \"$src\" ]; then\n+    only=\"$(head -n25 \"$src\"| grep '^//\\s*only: [^ ]* \\* \\* \\*')\"\n+    only=\"${only#*: }\"\n+    only=\"${only%% *}\"\n+    skip=\"$(head -n25 \"$src\"| grep '^//\\s*skip: [^ ]* \\* \\* \\*')\"\n+    skip=\"${skip#*: }\"\n+    skip=\"${skip%% *}\"\n+  fi\n+  filter_types \"$only\" \"$skip\" \\\n+    \"ldouble\" \\\n+    \"double\" \\\n+    \"float\" \\\n+    \"llong\" \\\n+    \"ullong\" \\\n+    \"ulong\" \\\n+    \"long\" \\\n+    \"int\" \\\n+    \"uint\" \\\n+    \"short\" \\\n+    \"ushort\" \\\n+    \"char\" \\\n+    \"schar\" \\\n+    \"uchar\" \\\n+    \"char32_t\" \\\n+    \"char16_t\" \\\n+    \"wchar_t\"\n }\n \n all_tests() {"}, {"sha": "256457787302fe14ff56962a0a890357f989b4fe", "filename": "libstdc++-v3/testsuite/experimental/simd/tests/abs.cc", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa89c53c7370128ed8d8ce348cd0ef97c26af59b/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fsimd%2Ftests%2Fabs.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa89c53c7370128ed8d8ce348cd0ef97c26af59b/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fsimd%2Ftests%2Fabs.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fsimd%2Ftests%2Fabs.cc?ref=aa89c53c7370128ed8d8ce348cd0ef97c26af59b", "patch": "@@ -15,6 +15,7 @@\n // with this library; see the file COPYING3.  If not see\n // <http://www.gnu.org/licenses/>.\n \n+// expensive: * [1-9] * *\n #include \"bits/verify.h\"\n #include \"bits/metahelpers.h\"\n #include <cmath>    // abs & sqrt"}, {"sha": "938f2a5cf9e914fccd50331b796707995aa11816", "filename": "libstdc++-v3/testsuite/experimental/simd/tests/algorithms.cc", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa89c53c7370128ed8d8ce348cd0ef97c26af59b/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fsimd%2Ftests%2Falgorithms.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa89c53c7370128ed8d8ce348cd0ef97c26af59b/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fsimd%2Ftests%2Falgorithms.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fsimd%2Ftests%2Falgorithms.cc?ref=aa89c53c7370128ed8d8ce348cd0ef97c26af59b", "patch": "@@ -15,6 +15,7 @@\n // with this library; see the file COPYING3.  If not see\n // <http://www.gnu.org/licenses/>.\n \n+// expensive: * [1-9] * *\n #include \"bits/verify.h\"\n #include \"bits/metahelpers.h\"\n "}, {"sha": "bba1a27027acef6dbc590993f93ea4881da55430", "filename": "libstdc++-v3/testsuite/experimental/simd/tests/broadcast.cc", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa89c53c7370128ed8d8ce348cd0ef97c26af59b/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fsimd%2Ftests%2Fbroadcast.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa89c53c7370128ed8d8ce348cd0ef97c26af59b/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fsimd%2Ftests%2Fbroadcast.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fsimd%2Ftests%2Fbroadcast.cc?ref=aa89c53c7370128ed8d8ce348cd0ef97c26af59b", "patch": "@@ -15,6 +15,7 @@\n // with this library; see the file COPYING3.  If not see\n // <http://www.gnu.org/licenses/>.\n \n+// expensive: * [1-9] * *\n #include \"bits/verify.h\"\n #include \"bits/metahelpers.h\"\n "}, {"sha": "5e505803c4829566ec9d8905ad4d99e0c3b91204", "filename": "libstdc++-v3/testsuite/experimental/simd/tests/casts.cc", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa89c53c7370128ed8d8ce348cd0ef97c26af59b/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fsimd%2Ftests%2Fcasts.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa89c53c7370128ed8d8ce348cd0ef97c26af59b/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fsimd%2Ftests%2Fcasts.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fsimd%2Ftests%2Fcasts.cc?ref=aa89c53c7370128ed8d8ce348cd0ef97c26af59b", "patch": "@@ -15,6 +15,7 @@\n // with this library; see the file COPYING3.  If not see\n // <http://www.gnu.org/licenses/>.\n \n+// expensive: * [1-9] * *\n #include \"bits/verify.h\"\n #include \"bits/metahelpers.h\"\n #include \"bits/conversions.h\""}, {"sha": "fe8a06174b1b12788c535e178ed032a8d45dda19", "filename": "libstdc++-v3/testsuite/experimental/simd/tests/fpclassify.cc", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa89c53c7370128ed8d8ce348cd0ef97c26af59b/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fsimd%2Ftests%2Ffpclassify.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa89c53c7370128ed8d8ce348cd0ef97c26af59b/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fsimd%2Ftests%2Ffpclassify.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fsimd%2Ftests%2Ffpclassify.cc?ref=aa89c53c7370128ed8d8ce348cd0ef97c26af59b", "patch": "@@ -1,4 +1,3 @@\n-// test only floattypes\n // Copyright (C) 2020-2021 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n@@ -16,6 +15,8 @@\n // with this library; see the file COPYING3.  If not see\n // <http://www.gnu.org/licenses/>.\n \n+// only: float|double|ldouble * * *\n+// expensive: * [1-9] * *\n #include \"bits/verify.h\"\n #include \"bits/metahelpers.h\"\n #include \"bits/test_values.h\""}, {"sha": "918182d222154bc7db824186d3fbd8dc53a859bd", "filename": "libstdc++-v3/testsuite/experimental/simd/tests/frexp.cc", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa89c53c7370128ed8d8ce348cd0ef97c26af59b/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fsimd%2Ftests%2Ffrexp.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa89c53c7370128ed8d8ce348cd0ef97c26af59b/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fsimd%2Ftests%2Ffrexp.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fsimd%2Ftests%2Ffrexp.cc?ref=aa89c53c7370128ed8d8ce348cd0ef97c26af59b", "patch": "@@ -1,4 +1,3 @@\n-// test only floattypes\n // Copyright (C) 2020-2021 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n@@ -16,6 +15,8 @@\n // with this library; see the file COPYING3.  If not see\n // <http://www.gnu.org/licenses/>.\n \n+// only: float|double|ldouble * * *\n+// expensive: * [1-9] * *\n #include \"bits/verify.h\"\n #include \"bits/metahelpers.h\"\n #include \"bits/test_values.h\""}, {"sha": "11aaa49c867d36ba5ca8f66e578dd898a57595cd", "filename": "libstdc++-v3/testsuite/experimental/simd/tests/generator.cc", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa89c53c7370128ed8d8ce348cd0ef97c26af59b/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fsimd%2Ftests%2Fgenerator.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa89c53c7370128ed8d8ce348cd0ef97c26af59b/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fsimd%2Ftests%2Fgenerator.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fsimd%2Ftests%2Fgenerator.cc?ref=aa89c53c7370128ed8d8ce348cd0ef97c26af59b", "patch": "@@ -15,6 +15,7 @@\n // with this library; see the file COPYING3.  If not see\n // <http://www.gnu.org/licenses/>.\n \n+// expensive: * [1-9] * *\n #include \"bits/verify.h\"\n #include \"bits/metahelpers.h\"\n "}, {"sha": "003bd4f9be6947cce5a0e3067c9c00e44f61fd0e", "filename": "libstdc++-v3/testsuite/experimental/simd/tests/hypot3_fma.cc", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa89c53c7370128ed8d8ce348cd0ef97c26af59b/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fsimd%2Ftests%2Fhypot3_fma.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa89c53c7370128ed8d8ce348cd0ef97c26af59b/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fsimd%2Ftests%2Fhypot3_fma.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fsimd%2Ftests%2Fhypot3_fma.cc?ref=aa89c53c7370128ed8d8ce348cd0ef97c26af59b", "patch": "@@ -1,4 +1,3 @@\n-// test only floattypes\n // Copyright (C) 2020-2021 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n@@ -16,6 +15,8 @@\n // with this library; see the file COPYING3.  If not see\n // <http://www.gnu.org/licenses/>.\n \n+// only: float|double|ldouble * * *\n+// expensive: * [1-9] * *\n #include \"bits/verify.h\"\n #include \"bits/metahelpers.h\"\n #include \"bits/test_values.h\""}, {"sha": "7416952ad4235f1839681a220efa03b3068d5b4d", "filename": "libstdc++-v3/testsuite/experimental/simd/tests/integer_operators.cc", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa89c53c7370128ed8d8ce348cd0ef97c26af59b/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fsimd%2Ftests%2Finteger_operators.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa89c53c7370128ed8d8ce348cd0ef97c26af59b/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fsimd%2Ftests%2Finteger_operators.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fsimd%2Ftests%2Finteger_operators.cc?ref=aa89c53c7370128ed8d8ce348cd0ef97c26af59b", "patch": "@@ -15,6 +15,7 @@\n // with this library; see the file COPYING3.  If not see\n // <http://www.gnu.org/licenses/>.\n \n+// expensive: * [1-9] * *\n #include \"bits/verify.h\"\n #include \"bits/make_vec.h\"\n #include \"bits/metahelpers.h\""}, {"sha": "e9719cc67febb1d1a32ad8035128f2aab2974269", "filename": "libstdc++-v3/testsuite/experimental/simd/tests/ldexp_scalbn_scalbln_modf.cc", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa89c53c7370128ed8d8ce348cd0ef97c26af59b/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fsimd%2Ftests%2Fldexp_scalbn_scalbln_modf.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa89c53c7370128ed8d8ce348cd0ef97c26af59b/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fsimd%2Ftests%2Fldexp_scalbn_scalbln_modf.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fsimd%2Ftests%2Fldexp_scalbn_scalbln_modf.cc?ref=aa89c53c7370128ed8d8ce348cd0ef97c26af59b", "patch": "@@ -1,4 +1,3 @@\n-// test only floattypes\n // Copyright (C) 2020-2021 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n@@ -16,6 +15,8 @@\n // with this library; see the file COPYING3.  If not see\n // <http://www.gnu.org/licenses/>.\n \n+// only: float|double|ldouble * * *\n+// expensive: * [1-9] * *\n #include \"bits/verify.h\"\n #include \"bits/metahelpers.h\"\n #include \"bits/test_values.h\""}, {"sha": "2c328368e444f8f890fde6847cd4d8a192266118", "filename": "libstdc++-v3/testsuite/experimental/simd/tests/loadstore.cc", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa89c53c7370128ed8d8ce348cd0ef97c26af59b/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fsimd%2Ftests%2Floadstore.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa89c53c7370128ed8d8ce348cd0ef97c26af59b/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fsimd%2Ftests%2Floadstore.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fsimd%2Ftests%2Floadstore.cc?ref=aa89c53c7370128ed8d8ce348cd0ef97c26af59b", "patch": "@@ -15,6 +15,7 @@\n // with this library; see the file COPYING3.  If not see\n // <http://www.gnu.org/licenses/>.\n \n+// expensive: * [1-9] * *\n #include \"bits/verify.h\"\n #include \"bits/make_vec.h\"\n #include \"bits/conversions.h\""}, {"sha": "b0dc9af6c816337181ae0f02e326d29834d8a3f4", "filename": "libstdc++-v3/testsuite/experimental/simd/tests/logarithm.cc", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa89c53c7370128ed8d8ce348cd0ef97c26af59b/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fsimd%2Ftests%2Flogarithm.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa89c53c7370128ed8d8ce348cd0ef97c26af59b/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fsimd%2Ftests%2Flogarithm.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fsimd%2Ftests%2Flogarithm.cc?ref=aa89c53c7370128ed8d8ce348cd0ef97c26af59b", "patch": "@@ -1,4 +1,3 @@\n-// test only floattypes\n // Copyright (C) 2020-2021 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n@@ -16,6 +15,8 @@\n // with this library; see the file COPYING3.  If not see\n // <http://www.gnu.org/licenses/>.\n \n+// only: float|double|ldouble * * *\n+// expensive: * [1-9] * *\n #include \"bits/verify.h\"\n #include \"bits/metahelpers.h\"\n #include \"bits/mathreference.h\""}, {"sha": "df9d38d9a30af960b344bd09097bd14757fc453d", "filename": "libstdc++-v3/testsuite/experimental/simd/tests/mask_broadcast.cc", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa89c53c7370128ed8d8ce348cd0ef97c26af59b/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fsimd%2Ftests%2Fmask_broadcast.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa89c53c7370128ed8d8ce348cd0ef97c26af59b/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fsimd%2Ftests%2Fmask_broadcast.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fsimd%2Ftests%2Fmask_broadcast.cc?ref=aa89c53c7370128ed8d8ce348cd0ef97c26af59b", "patch": "@@ -15,6 +15,7 @@\n // with this library; see the file COPYING3.  If not see\n // <http://www.gnu.org/licenses/>.\n \n+// expensive: * [1-9] * *\n #include \"bits/verify.h\"\n #include \"bits/metahelpers.h\"\n "}, {"sha": "8a60d5a95c389aaadbf8f98e7b3226cb35ad5950", "filename": "libstdc++-v3/testsuite/experimental/simd/tests/mask_conversions.cc", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa89c53c7370128ed8d8ce348cd0ef97c26af59b/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fsimd%2Ftests%2Fmask_conversions.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa89c53c7370128ed8d8ce348cd0ef97c26af59b/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fsimd%2Ftests%2Fmask_conversions.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fsimd%2Ftests%2Fmask_conversions.cc?ref=aa89c53c7370128ed8d8ce348cd0ef97c26af59b", "patch": "@@ -15,6 +15,7 @@\n // with this library; see the file COPYING3.  If not see\n // <http://www.gnu.org/licenses/>.\n \n+// expensive: * [1-9] * *\n #include \"bits/verify.h\"\n \n namespace stdx = std::experimental;"}, {"sha": "aa9c72acc47b8475a81eb1b50b76e8d9cf96071c", "filename": "libstdc++-v3/testsuite/experimental/simd/tests/mask_implicit_cvt.cc", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa89c53c7370128ed8d8ce348cd0ef97c26af59b/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fsimd%2Ftests%2Fmask_implicit_cvt.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa89c53c7370128ed8d8ce348cd0ef97c26af59b/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fsimd%2Ftests%2Fmask_implicit_cvt.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fsimd%2Ftests%2Fmask_implicit_cvt.cc?ref=aa89c53c7370128ed8d8ce348cd0ef97c26af59b", "patch": "@@ -15,6 +15,7 @@\n // with this library; see the file COPYING3.  If not see\n // <http://www.gnu.org/licenses/>.\n \n+// expensive: * [1-9] * *\n #include \"bits/verify.h\"\n #include \"bits/metahelpers.h\"\n "}, {"sha": "3463fdad3f7723b387c309aecdab7af5b7e33055", "filename": "libstdc++-v3/testsuite/experimental/simd/tests/mask_loadstore.cc", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa89c53c7370128ed8d8ce348cd0ef97c26af59b/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fsimd%2Ftests%2Fmask_loadstore.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa89c53c7370128ed8d8ce348cd0ef97c26af59b/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fsimd%2Ftests%2Fmask_loadstore.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fsimd%2Ftests%2Fmask_loadstore.cc?ref=aa89c53c7370128ed8d8ce348cd0ef97c26af59b", "patch": "@@ -15,6 +15,7 @@\n // with this library; see the file COPYING3.  If not see\n // <http://www.gnu.org/licenses/>.\n \n+// expensive: * [1-9] * *\n #include \"bits/verify.h\"\n \n // simd_mask generator functions"}, {"sha": "cd46d003a025dfa85be659f662a331e9ae99ab6c", "filename": "libstdc++-v3/testsuite/experimental/simd/tests/mask_operator_cvt.cc", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa89c53c7370128ed8d8ce348cd0ef97c26af59b/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fsimd%2Ftests%2Fmask_operator_cvt.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa89c53c7370128ed8d8ce348cd0ef97c26af59b/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fsimd%2Ftests%2Fmask_operator_cvt.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fsimd%2Ftests%2Fmask_operator_cvt.cc?ref=aa89c53c7370128ed8d8ce348cd0ef97c26af59b", "patch": "@@ -15,6 +15,7 @@\n // with this library; see the file COPYING3.  If not see\n // <http://www.gnu.org/licenses/>.\n \n+// expensive: * [1-9] * *\n #include \"bits/verify.h\"\n #include \"bits/metahelpers.h\"\n "}, {"sha": "53e7041eedd017768ccbdb0ab95e7fe106e9ed96", "filename": "libstdc++-v3/testsuite/experimental/simd/tests/mask_operators.cc", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa89c53c7370128ed8d8ce348cd0ef97c26af59b/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fsimd%2Ftests%2Fmask_operators.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa89c53c7370128ed8d8ce348cd0ef97c26af59b/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fsimd%2Ftests%2Fmask_operators.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fsimd%2Ftests%2Fmask_operators.cc?ref=aa89c53c7370128ed8d8ce348cd0ef97c26af59b", "patch": "@@ -15,6 +15,7 @@\n // with this library; see the file COPYING3.  If not see\n // <http://www.gnu.org/licenses/>.\n \n+// expensive: * [1-9] * *\n #include \"bits/verify.h\"\n #include \"bits/metahelpers.h\"\n "}, {"sha": "fb731426aeb4de6a9f9c2bf99880694bf46eeb9b", "filename": "libstdc++-v3/testsuite/experimental/simd/tests/mask_reductions.cc", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa89c53c7370128ed8d8ce348cd0ef97c26af59b/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fsimd%2Ftests%2Fmask_reductions.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa89c53c7370128ed8d8ce348cd0ef97c26af59b/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fsimd%2Ftests%2Fmask_reductions.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fsimd%2Ftests%2Fmask_reductions.cc?ref=aa89c53c7370128ed8d8ce348cd0ef97c26af59b", "patch": "@@ -15,6 +15,7 @@\n // with this library; see the file COPYING3.  If not see\n // <http://www.gnu.org/licenses/>.\n \n+// expensive: * [1-9] * *\n #include \"bits/verify.h\"\n #include \"bits/metahelpers.h\"\n "}, {"sha": "e7f273f1c644bd4b9565ef3cfa01979b28c29505", "filename": "libstdc++-v3/testsuite/experimental/simd/tests/math_1arg.cc", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa89c53c7370128ed8d8ce348cd0ef97c26af59b/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fsimd%2Ftests%2Fmath_1arg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa89c53c7370128ed8d8ce348cd0ef97c26af59b/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fsimd%2Ftests%2Fmath_1arg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fsimd%2Ftests%2Fmath_1arg.cc?ref=aa89c53c7370128ed8d8ce348cd0ef97c26af59b", "patch": "@@ -1,4 +1,3 @@\n-// test only floattypes\n // Copyright (C) 2020-2021 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n@@ -16,6 +15,8 @@\n // with this library; see the file COPYING3.  If not see\n // <http://www.gnu.org/licenses/>.\n \n+// only: float|double|ldouble * * *\n+// expensive: * [1-9] * *\n #include \"bits/verify.h\"\n #include \"bits/test_values.h\"\n "}, {"sha": "44a70de24e0bdd363005a5aa1586374d0bb2af09", "filename": "libstdc++-v3/testsuite/experimental/simd/tests/math_2arg.cc", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa89c53c7370128ed8d8ce348cd0ef97c26af59b/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fsimd%2Ftests%2Fmath_2arg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa89c53c7370128ed8d8ce348cd0ef97c26af59b/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fsimd%2Ftests%2Fmath_2arg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fsimd%2Ftests%2Fmath_2arg.cc?ref=aa89c53c7370128ed8d8ce348cd0ef97c26af59b", "patch": "@@ -1,4 +1,3 @@\n-// test only floattypes\n // Copyright (C) 2020-2021 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n@@ -16,6 +15,8 @@\n // with this library; see the file COPYING3.  If not see\n // <http://www.gnu.org/licenses/>.\n \n+// only: float|double|ldouble * * *\n+// expensive: * [1-9] * *\n #include \"bits/verify.h\"\n #include \"bits/metahelpers.h\"\n #include \"bits/test_values.h\""}, {"sha": "8e7cfc5c25bb3ac2cd4c022765a70ec7a5fcd57f", "filename": "libstdc++-v3/testsuite/experimental/simd/tests/operator_cvt.cc", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa89c53c7370128ed8d8ce348cd0ef97c26af59b/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fsimd%2Ftests%2Foperator_cvt.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa89c53c7370128ed8d8ce348cd0ef97c26af59b/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fsimd%2Ftests%2Foperator_cvt.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fsimd%2Ftests%2Foperator_cvt.cc?ref=aa89c53c7370128ed8d8ce348cd0ef97c26af59b", "patch": "@@ -15,6 +15,7 @@\n // with this library; see the file COPYING3.  If not see\n // <http://www.gnu.org/licenses/>.\n \n+// expensive: * [1-9] * *\n #include \"bits/verify.h\"\n #include \"bits/metahelpers.h\"\n "}, {"sha": "171bae5b05eb3e4a3acdd9f26ed707b98958aafc", "filename": "libstdc++-v3/testsuite/experimental/simd/tests/operators.cc", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa89c53c7370128ed8d8ce348cd0ef97c26af59b/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fsimd%2Ftests%2Foperators.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa89c53c7370128ed8d8ce348cd0ef97c26af59b/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fsimd%2Ftests%2Foperators.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fsimd%2Ftests%2Foperators.cc?ref=aa89c53c7370128ed8d8ce348cd0ef97c26af59b", "patch": "@@ -15,6 +15,7 @@\n // with this library; see the file COPYING3.  If not see\n // <http://www.gnu.org/licenses/>.\n \n+// expensive: * [1-9] * *\n #include \"bits/verify.h\"\n #include \"bits/make_vec.h\"\n #include \"bits/test_values.h\""}, {"sha": "51aad92c8621de829e789e2bc229fdcbb7becd03", "filename": "libstdc++-v3/testsuite/experimental/simd/tests/reductions.cc", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa89c53c7370128ed8d8ce348cd0ef97c26af59b/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fsimd%2Ftests%2Freductions.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa89c53c7370128ed8d8ce348cd0ef97c26af59b/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fsimd%2Ftests%2Freductions.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fsimd%2Ftests%2Freductions.cc?ref=aa89c53c7370128ed8d8ce348cd0ef97c26af59b", "patch": "@@ -15,6 +15,7 @@\n // with this library; see the file COPYING3.  If not see\n // <http://www.gnu.org/licenses/>.\n \n+// expensive: * [1-9] * *\n #include \"bits/verify.h\"\n #include \"bits/metahelpers.h\"\n #include \"bits/test_values.h\""}, {"sha": "15b193d89e195cb70f37b0a007f9e9b91ee2e3da", "filename": "libstdc++-v3/testsuite/experimental/simd/tests/remqo.cc", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa89c53c7370128ed8d8ce348cd0ef97c26af59b/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fsimd%2Ftests%2Fremqo.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa89c53c7370128ed8d8ce348cd0ef97c26af59b/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fsimd%2Ftests%2Fremqo.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fsimd%2Ftests%2Fremqo.cc?ref=aa89c53c7370128ed8d8ce348cd0ef97c26af59b", "patch": "@@ -1,4 +1,3 @@\n-// test only floattypes\n // Copyright (C) 2020-2021 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n@@ -16,6 +15,8 @@\n // with this library; see the file COPYING3.  If not see\n // <http://www.gnu.org/licenses/>.\n \n+// only: float|double|ldouble * * *\n+// expensive: * [1-9] * *\n #include \"bits/verify.h\"\n #include \"bits/metahelpers.h\"\n #include \"bits/test_values.h\""}, {"sha": "e360dc05313bb421f997cb0b8b3096feba62edef", "filename": "libstdc++-v3/testsuite/experimental/simd/tests/simd.cc", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa89c53c7370128ed8d8ce348cd0ef97c26af59b/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fsimd%2Ftests%2Fsimd.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa89c53c7370128ed8d8ce348cd0ef97c26af59b/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fsimd%2Ftests%2Fsimd.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fsimd%2Ftests%2Fsimd.cc?ref=aa89c53c7370128ed8d8ce348cd0ef97c26af59b", "patch": "@@ -15,6 +15,7 @@\n // with this library; see the file COPYING3.  If not see\n // <http://www.gnu.org/licenses/>.\n \n+// expensive: * [1-9] * *\n #include \"bits/verify.h\"\n \n template <typename V>"}, {"sha": "7eee79d51745bcbc3f7c399c24d32cb0ad0e8362", "filename": "libstdc++-v3/testsuite/experimental/simd/tests/sincos.cc", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa89c53c7370128ed8d8ce348cd0ef97c26af59b/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fsimd%2Ftests%2Fsincos.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa89c53c7370128ed8d8ce348cd0ef97c26af59b/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fsimd%2Ftests%2Fsincos.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fsimd%2Ftests%2Fsincos.cc?ref=aa89c53c7370128ed8d8ce348cd0ef97c26af59b", "patch": "@@ -1,4 +1,3 @@\n-// test only floattypes\n // Copyright (C) 2020-2021 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n@@ -16,6 +15,9 @@\n // with this library; see the file COPYING3.  If not see\n // <http://www.gnu.org/licenses/>.\n \n+// only: float|double|ldouble * * *\n+// xfail: run * * * *\n+// expensive: * [1-9] * *\n #include \"bits/verify.h\"\n #include \"bits/metahelpers.h\"\n #include \"bits/mathreference.h\""}, {"sha": "7c3584e5fd51a7f11a374a2aef93b4fa8595ec73", "filename": "libstdc++-v3/testsuite/experimental/simd/tests/split_concat.cc", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa89c53c7370128ed8d8ce348cd0ef97c26af59b/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fsimd%2Ftests%2Fsplit_concat.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa89c53c7370128ed8d8ce348cd0ef97c26af59b/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fsimd%2Ftests%2Fsplit_concat.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fsimd%2Ftests%2Fsplit_concat.cc?ref=aa89c53c7370128ed8d8ce348cd0ef97c26af59b", "patch": "@@ -15,6 +15,7 @@\n // with this library; see the file COPYING3.  If not see\n // <http://www.gnu.org/licenses/>.\n \n+// expensive: * [1-9] * *\n #include \"bits/verify.h\"\n #include \"bits/metahelpers.h\"\n #include \"bits/conversions.h\""}, {"sha": "3ed9f8679d6734ffa5279fc700132cb850f1e9d5", "filename": "libstdc++-v3/testsuite/experimental/simd/tests/splits.cc", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa89c53c7370128ed8d8ce348cd0ef97c26af59b/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fsimd%2Ftests%2Fsplits.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa89c53c7370128ed8d8ce348cd0ef97c26af59b/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fsimd%2Ftests%2Fsplits.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fsimd%2Ftests%2Fsplits.cc?ref=aa89c53c7370128ed8d8ce348cd0ef97c26af59b", "patch": "@@ -15,6 +15,7 @@\n // with this library; see the file COPYING3.  If not see\n // <http://www.gnu.org/licenses/>.\n \n+// expensive: * [1-9] * *\n #include \"bits/verify.h\"\n \n template <typename V>"}, {"sha": "32f8ce939fb87c370f37fb5214908adad1d0f156", "filename": "libstdc++-v3/testsuite/experimental/simd/tests/trigonometric.cc", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa89c53c7370128ed8d8ce348cd0ef97c26af59b/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fsimd%2Ftests%2Ftrigonometric.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa89c53c7370128ed8d8ce348cd0ef97c26af59b/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fsimd%2Ftests%2Ftrigonometric.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fsimd%2Ftests%2Ftrigonometric.cc?ref=aa89c53c7370128ed8d8ce348cd0ef97c26af59b", "patch": "@@ -1,4 +1,3 @@\n-// test only floattypes\n // Copyright (C) 2020-2021 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n@@ -16,6 +15,8 @@\n // with this library; see the file COPYING3.  If not see\n // <http://www.gnu.org/licenses/>.\n \n+// only: float|double|ldouble * * *\n+// expensive: * [1-9] * *\n #include \"bits/verify.h\"\n #include \"bits/metahelpers.h\"\n #include \"bits/test_values.h\""}, {"sha": "0687662fae6bfd8b6f19b880b3438a2e10ff7fe2", "filename": "libstdc++-v3/testsuite/experimental/simd/tests/trunc_ceil_floor.cc", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa89c53c7370128ed8d8ce348cd0ef97c26af59b/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fsimd%2Ftests%2Ftrunc_ceil_floor.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa89c53c7370128ed8d8ce348cd0ef97c26af59b/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fsimd%2Ftests%2Ftrunc_ceil_floor.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fsimd%2Ftests%2Ftrunc_ceil_floor.cc?ref=aa89c53c7370128ed8d8ce348cd0ef97c26af59b", "patch": "@@ -1,4 +1,3 @@\n-// test only floattypes\n // Copyright (C) 2020-2021 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n@@ -16,6 +15,8 @@\n // with this library; see the file COPYING3.  If not see\n // <http://www.gnu.org/licenses/>.\n \n+// only: float|double|ldouble * * *\n+// expensive: * [1-9] * *\n #include \"bits/test_values.h\"\n #include \"bits/verify.h\"\n "}, {"sha": "e955d2febc9a825c886833b5d89491284695f821", "filename": "libstdc++-v3/testsuite/experimental/simd/tests/where.cc", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa89c53c7370128ed8d8ce348cd0ef97c26af59b/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fsimd%2Ftests%2Fwhere.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa89c53c7370128ed8d8ce348cd0ef97c26af59b/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fsimd%2Ftests%2Fwhere.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fsimd%2Ftests%2Fwhere.cc?ref=aa89c53c7370128ed8d8ce348cd0ef97c26af59b", "patch": "@@ -15,6 +15,7 @@\n // with this library; see the file COPYING3.  If not see\n // <http://www.gnu.org/licenses/>.\n \n+// expensive: * [1-9] * *\n #include \"bits/verify.h\"\n #include \"bits/make_vec.h\"\n #include \"bits/metahelpers.h\""}]}