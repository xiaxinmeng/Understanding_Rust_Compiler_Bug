{"sha": "75874af96ca806332efbb658d150b4d4050c98f7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzU4NzRhZjk2Y2E4MDYzMzJlZmJiNjU4ZDE1MGI0ZDQwNTBjOThmNw==", "commit": {"author": {"name": "Kaveh R. Ghazi", "email": "ghazi@caip.rutgers.edu", "date": "2000-02-06T04:48:20Z"}, "committer": {"name": "Kaveh Ghazi", "email": "ghazi@gcc.gnu.org", "date": "2000-02-06T04:48:20Z"}, "message": "* longlong.h [sparc] (udiv_qrnnd): Avoid stringifying macro arg.\n\nFrom-SVN: r31814", "tree": {"sha": "ea733eab595b05259abdeb131bb0c67730254d4e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ea733eab595b05259abdeb131bb0c67730254d4e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/75874af96ca806332efbb658d150b4d4050c98f7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/75874af96ca806332efbb658d150b4d4050c98f7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/75874af96ca806332efbb658d150b4d4050c98f7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/75874af96ca806332efbb658d150b4d4050c98f7/comments", "author": null, "committer": null, "parents": [{"sha": "5ca1627b6d3e939fafa64ffacb78db70a2a9e82f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5ca1627b6d3e939fafa64ffacb78db70a2a9e82f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5ca1627b6d3e939fafa64ffacb78db70a2a9e82f"}], "stats": {"total": 28, "additions": 16, "deletions": 12}, "files": [{"sha": "cd8d98a395da6a75e6869a69aae04485e7485528", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/75874af96ca806332efbb658d150b4d4050c98f7/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/75874af96ca806332efbb658d150b4d4050c98f7/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=75874af96ca806332efbb658d150b4d4050c98f7", "patch": "@@ -1,3 +1,7 @@\n+2000-02-05  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n+\n+\t* longlong.h [sparc] (udiv_qrnnd): Avoid stringifying macro arg.\n+\n 2000-02-05  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n \t* Makefile.in (c-common.o): Depend on $(EXPR_H)."}, {"sha": "467175023a2ddf89b0534152491fe74112ef892c", "filename": "gcc/longlong.h", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/75874af96ca806332efbb658d150b4d4050c98f7/gcc%2Flonglong.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/75874af96ca806332efbb658d150b4d4050c98f7/gcc%2Flonglong.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flonglong.h?ref=75874af96ca806332efbb658d150b4d4050c98f7", "patch": "@@ -1024,13 +1024,13 @@ UDItype __umulsidi3 (USItype, USItype);\n \t     \"=r\" ((USItype) (w0))\t\t\t\t\t\\\n \t   : \"r\" ((USItype) (u)),\t\t\t\t\t\\\n \t     \"r\" ((USItype) (v)))\n-#define udiv_qrnnd(q, r, n1, n0, d) \\\n+#define udiv_qrnnd(__q, __r, __n1, __n0, __d) \\\n   __asm__ (\"mov %2,%%y;nop;nop;nop;udiv %3,%4,%0;umul %0,%4,%1;sub %3,%1,%1\"\\\n-\t   : \"=&r\" ((USItype) (q)),\t\t\t\t\t\\\n-\t     \"=&r\" ((USItype) (r))\t\t\t\t\t\\\n-\t   : \"r\" ((USItype) (n1)),\t\t\t\t\t\\\n-\t     \"r\" ((USItype) (n0)),\t\t\t\t\t\\\n-\t     \"r\" ((USItype) (d)))\n+\t   : \"=&r\" ((USItype) (__q)),\t\t\t\t\t\\\n+\t     \"=&r\" ((USItype) (__r))\t\t\t\t\t\\\n+\t   : \"r\" ((USItype) (__n1)),\t\t\t\t\t\\\n+\t     \"r\" ((USItype) (__n0)),\t\t\t\t\t\\\n+\t     \"r\" ((USItype) (__d)))\n #else\n #if defined (__sparclite__)\n /* This has hardware multiply but not divide.  It also has two additional\n@@ -1149,7 +1149,7 @@ UDItype __umulsidi3 (USItype, USItype);\n #define UMUL_TIME 39\t\t/* 39 instructions */\n /* It's quite necessary to add this much assembler for the sparc.\n    The default udiv_qrnnd (in C) is more than 10 times slower!  */\n-#define udiv_qrnnd(q, r, n1, n0, d) \\\n+#define udiv_qrnnd(__q, __r, __n1, __n0, __d) \\\n   __asm__ (\"! Inlined udiv_qrnnd\n \tmov\t32,%%g1\n \tsubcc\t%1,%2,%%g0\n@@ -1174,11 +1174,11 @@ UDItype __umulsidi3 (USItype, USItype);\n \tsub\t%1,%2,%1\n 3:\txnor\t%0,0,%0\n \t! End of inline udiv_qrnnd\"\t\t\t\t\t\\\n-\t   : \"=&r\" ((USItype) (q)),\t\t\t\t\t\\\n-\t     \"=&r\" ((USItype) (r))\t\t\t\t\t\\\n-\t   : \"r\" ((USItype) (d)),\t\t\t\t\t\\\n-\t     \"1\" ((USItype) (n1)),\t\t\t\t\t\\\n-\t     \"0\" ((USItype) (n0)) : \"g1\" __AND_CLOBBER_CC)\n+\t   : \"=&r\" ((USItype) (__q)),\t\t\t\t\t\\\n+\t     \"=&r\" ((USItype) (__r))\t\t\t\t\t\\\n+\t   : \"r\" ((USItype) (__d)),\t\t\t\t\t\\\n+\t     \"1\" ((USItype) (__n1)),\t\t\t\t\t\\\n+\t     \"0\" ((USItype) (__n0)) : \"g1\" __AND_CLOBBER_CC)\n #define UDIV_TIME (3+7*32)\t/* 7 instructions/iteration. 32 iterations. */\n #endif /* __sparclite__ */\n #endif /* __sparc_v8__ */"}]}