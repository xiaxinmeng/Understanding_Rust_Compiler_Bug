{"sha": "017849d9d88f021770a90f12fffec9aa2425ed27", "node_id": "C_kwDOANBUbNoAKDAxNzg0OWQ5ZDg4ZjAyMTc3MGE5MGYxMmZmZmVjOWFhMjQyNWVkMjc", "commit": {"author": {"name": "Xi Ruoyao", "email": "xry111@xry111.site", "date": "2023-02-13T10:38:53Z"}, "committer": {"name": "Lulu Cheng", "email": "chenglulu@loongson.cn", "date": "2023-02-18T07:29:31Z"}, "message": "LoongArch: Fix multiarch tuple canonization\n\nMultiarch tuple will be coded in file or directory names in\nmultiarch-aware distros, so one ABI should have only one multiarch\ntuple.  For example, \"--target=loongarch64-linux-gnu --with-abi=lp64s\"\nand \"--target=loongarch64-linux-gnusf\" should both set multiarch tuple\nto \"loongarch64-linux-gnusf\".  Before this commit,\n\"--target=loongarch64-linux-gnu --with-abi=lp64s --disable-multilib\"\nwill produce wrong result (loongarch64-linux-gnu).\n\nA recent LoongArch psABI revision mandates \"loongarch64-linux-gnu\" to be\nused for -mabi=lp64d (instead of \"loongarch64-linux-gnuf64\") for some\nnon-technical reason [1].  Note that we cannot make\n\"loongarch64-linux-gnuf64\" an alias for \"loongarch64-linux-gnu\" because\nto implement such an alias, we must create thousands of symlinks in the\ndistro and doing so would be completely unpractical.  This commit also\naligns GCC with the revision.\n\nTested by building cross compilers with --enable-multiarch and multiple\ncombinations of --target=loongarch64-linux-gnu*, --with-abi=lp64{s,f,d},\nand --{enable,disable}-multilib; and run \"xgcc --print-multiarch\" then\nmanually verify the result with eyesight.\n\n[1]: https://github.com/loongson/LoongArch-Documentation/pull/80\n\ngcc/ChangeLog:\n\n\t* config.gcc (triplet_abi): Set its value based on $with_abi,\n\tinstead of $target.\n\t(la_canonical_triplet): Set it after $triplet_abi is set\n\tcorrectly.\n\t* config/loongarch/t-linux (MULTILIB_OSDIRNAMES): Make the\n\tmultiarch tuple for lp64d \"loongarch64-linux-gnu\" (without\n\t\"f64\" suffix).", "tree": {"sha": "79ce114bc4e7a2f54e0e34bd31241d9601e6730d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/79ce114bc4e7a2f54e0e34bd31241d9601e6730d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/017849d9d88f021770a90f12fffec9aa2425ed27", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/017849d9d88f021770a90f12fffec9aa2425ed27", "html_url": "https://github.com/Rust-GCC/gccrs/commit/017849d9d88f021770a90f12fffec9aa2425ed27", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/017849d9d88f021770a90f12fffec9aa2425ed27/comments", "author": {"login": "xry111", "id": 8733039, "node_id": "MDQ6VXNlcjg3MzMwMzk=", "avatar_url": "https://avatars.githubusercontent.com/u/8733039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xry111", "html_url": "https://github.com/xry111", "followers_url": "https://api.github.com/users/xry111/followers", "following_url": "https://api.github.com/users/xry111/following{/other_user}", "gists_url": "https://api.github.com/users/xry111/gists{/gist_id}", "starred_url": "https://api.github.com/users/xry111/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xry111/subscriptions", "organizations_url": "https://api.github.com/users/xry111/orgs", "repos_url": "https://api.github.com/users/xry111/repos", "events_url": "https://api.github.com/users/xry111/events{/privacy}", "received_events_url": "https://api.github.com/users/xry111/received_events", "type": "User", "site_admin": false}, "committer": {"login": "chenglulu326", "id": 88083425, "node_id": "MDQ6VXNlcjg4MDgzNDI1", "avatar_url": "https://avatars.githubusercontent.com/u/88083425?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chenglulu326", "html_url": "https://github.com/chenglulu326", "followers_url": "https://api.github.com/users/chenglulu326/followers", "following_url": "https://api.github.com/users/chenglulu326/following{/other_user}", "gists_url": "https://api.github.com/users/chenglulu326/gists{/gist_id}", "starred_url": "https://api.github.com/users/chenglulu326/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chenglulu326/subscriptions", "organizations_url": "https://api.github.com/users/chenglulu326/orgs", "repos_url": "https://api.github.com/users/chenglulu326/repos", "events_url": "https://api.github.com/users/chenglulu326/events{/privacy}", "received_events_url": "https://api.github.com/users/chenglulu326/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a7d8c40484c31a74a2c2bb17d835d60ba7dd8d29", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a7d8c40484c31a74a2c2bb17d835d60ba7dd8d29", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a7d8c40484c31a74a2c2bb17d835d60ba7dd8d29"}], "stats": {"total": 16, "additions": 8, "deletions": 8}, "files": [{"sha": "c070e6ecd2e648544c67d099333f4bc9bd006d07", "filename": "gcc/config.gcc", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/017849d9d88f021770a90f12fffec9aa2425ed27/gcc%2Fconfig.gcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/017849d9d88f021770a90f12fffec9aa2425ed27/gcc%2Fconfig.gcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.gcc?ref=017849d9d88f021770a90f12fffec9aa2425ed27", "patch": "@@ -4889,20 +4889,16 @@ case \"${target}\" in\n \t\tcase ${target} in\n \t\tloongarch64-*-*-*f64)\n \t\t\tabi_pattern=\"lp64d\"\n-\t\t\ttriplet_abi=\"f64\"\n \t\t\t;;\n \t\tloongarch64-*-*-*f32)\n \t\t\tabi_pattern=\"lp64f\"\n-\t\t\ttriplet_abi=\"f32\"\n \t\t\t;;\n \t\tloongarch64-*-*-*sf)\n \t\t\tabi_pattern=\"lp64s\"\n-\t\t\ttriplet_abi=\"sf\"\n \t\t\t;;\n \t\tloongarch64-*-*-*)\n \t\t\tabi_pattern=\"lp64[dfs]\"\n \t\t\tabi_default=\"lp64d\"\n-\t\t\ttriplet_abi=\"\"\n \t\t\t;;\n \t\t*)\n \t\t\techo \"Unsupported target ${target}.\" 1>&2\n@@ -4923,9 +4919,6 @@ case \"${target}\" in\n \t\t\t  ;;\n \t\tesac\n \n-\t\tla_canonical_triplet=\"loongarch64-${triplet_os}${triplet_abi}\"\n-\n-\n \t\t# Perform initial sanity checks on --with-* options.\n \t\tcase ${with_arch} in\n \t\t\"\" | loongarch64 | la464) ;; # OK, append here.\n@@ -4996,6 +4989,13 @@ case \"${target}\" in\n \t\t\t;;\n \t\tesac\n \n+\t\tcase ${with_abi} in\n+\t\t  \"lp64d\") triplet_abi=\"\";;\n+\t\t  \"lp64f\") triplet_abi=\"f32\";;\n+\t\t  \"lp64s\") triplet_abi=\"sf\";;\n+\t\tesac\n+\t\tla_canonical_triplet=\"loongarch64-${triplet_os}${triplet_abi}\"\n+\n \t\t# Set default value for with_abiext (internal)\n \t\tcase ${with_abiext} in\n \t\t\"\")"}, {"sha": "e40da179203a0435eb4b91a64e43d5c47e5d5681", "filename": "gcc/config/loongarch/t-linux", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/017849d9d88f021770a90f12fffec9aa2425ed27/gcc%2Fconfig%2Floongarch%2Ft-linux", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/017849d9d88f021770a90f12fffec9aa2425ed27/gcc%2Fconfig%2Floongarch%2Ft-linux", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Floongarch%2Ft-linux?ref=017849d9d88f021770a90f12fffec9aa2425ed27", "patch": "@@ -40,7 +40,7 @@ ifeq ($(filter LA_DISABLE_MULTILIB,$(tm_defines)),)\n \n     MULTILIB_OSDIRNAMES = \\\n       mabi.lp64d=../lib64$\\\n-      $(call if_multiarch,:loongarch64-linux-gnuf64)\n+      $(call if_multiarch,:loongarch64-linux-gnu)\n \n     MULTILIB_OSDIRNAMES += \\\n       mabi.lp64f=../lib64/f32$\\"}]}