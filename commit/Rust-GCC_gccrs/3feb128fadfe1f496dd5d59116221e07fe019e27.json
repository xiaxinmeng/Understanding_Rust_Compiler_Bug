{"sha": "3feb128fadfe1f496dd5d59116221e07fe019e27", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2ZlYjEyOGZhZGZlMWY0OTZkZDVkNTkxMTYyMjFlMDdmZTAxOWUyNw==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2008-12-21T21:01:48Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2008-12-21T21:01:48Z"}, "message": "re PR c++/38597 ([c++0x] ICE when auto return type function given as argument to function template)\n\n        PR c++/38597\n        * name-lookup.c (arg_assoc_type): Handle DECLTYPE_TYPE.\n\nFrom-SVN: r142868", "tree": {"sha": "452b7f06a7e2bab59e876c65d66faf1091f632ee", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/452b7f06a7e2bab59e876c65d66faf1091f632ee"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3feb128fadfe1f496dd5d59116221e07fe019e27", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3feb128fadfe1f496dd5d59116221e07fe019e27", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3feb128fadfe1f496dd5d59116221e07fe019e27", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3feb128fadfe1f496dd5d59116221e07fe019e27/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "aad9c4f437c243137f532b7b63e9aeef0821a0e2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aad9c4f437c243137f532b7b63e9aeef0821a0e2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aad9c4f437c243137f532b7b63e9aeef0821a0e2"}], "stats": {"total": 30, "additions": 26, "deletions": 4}, "files": [{"sha": "94e1a7cd2c10f7afec1f881c3c7c56f059c490dc", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3feb128fadfe1f496dd5d59116221e07fe019e27/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3feb128fadfe1f496dd5d59116221e07fe019e27/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=3feb128fadfe1f496dd5d59116221e07fe019e27", "patch": "@@ -1,3 +1,8 @@\n+2008-12-21  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/38597\n+\t* name-lookup.c (arg_assoc_type): Handle DECLTYPE_TYPE.\n+\n 2008-12-20  Jakub Jelinek  <jakub@redhat.com>\n \t    Manuel L\u00f3pez-Ib\u00e1\u00f1ez  <manu@gcc.gnu.org>\n "}, {"sha": "a7b466217ebd0aaf7e32d07636681d67f8f05f0d", "filename": "gcc/cp/mangle.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3feb128fadfe1f496dd5d59116221e07fe019e27/gcc%2Fcp%2Fmangle.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3feb128fadfe1f496dd5d59116221e07fe019e27/gcc%2Fcp%2Fmangle.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fmangle.c?ref=3feb128fadfe1f496dd5d59116221e07fe019e27", "patch": "@@ -2348,12 +2348,12 @@ write_expression (tree expr)\n \n \tcase CAST_EXPR:\n \t  write_type (TREE_TYPE (expr));\n+\t  /* There is no way to mangle a zero-operand cast like\n+\t     \"T()\".  */\n \t  if (!TREE_OPERAND (expr, 0))\n-\t    /* \"T()\" is mangled as \"T(void)\".  */\n-\t    write_char ('v');\n+\t    sorry (\"zero-operand casts cannot be mangled due to a defect \"\n+\t\t   \"in the C++ ABI\");\n \t  else if (list_length (TREE_OPERAND (expr, 0)) > 1)\n-\t    /* FIXME the above hack for T() needs to be replaced with\n-\t       something more general.  */\n \t    sorry (\"mangling function-style cast with more than one argument\");\n \t  else\n \t    write_expression (TREE_VALUE (TREE_OPERAND (expr, 0)));"}, {"sha": "4c06afdafacf295bb63c0818908ba2fd7ed28618", "filename": "gcc/cp/name-lookup.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3feb128fadfe1f496dd5d59116221e07fe019e27/gcc%2Fcp%2Fname-lookup.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3feb128fadfe1f496dd5d59116221e07fe019e27/gcc%2Fcp%2Fname-lookup.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fname-lookup.c?ref=3feb128fadfe1f496dd5d59116221e07fe019e27", "patch": "@@ -4701,6 +4701,7 @@ arg_assoc_type (struct arg_lookup *k, tree type)\n     case VECTOR_TYPE:\n     case BOOLEAN_TYPE:\n     case FIXED_POINT_TYPE:\n+    case DECLTYPE_TYPE:\n       return false;\n     case RECORD_TYPE:\n       if (TYPE_PTRMEMFUNC_P (type))"}, {"sha": "88d4c38b89f763d426d4176b599dd4edbe3a3e64", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3feb128fadfe1f496dd5d59116221e07fe019e27/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3feb128fadfe1f496dd5d59116221e07fe019e27/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=3feb128fadfe1f496dd5d59116221e07fe019e27", "patch": "@@ -1,3 +1,8 @@\n+2008-12-21  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/38597\n+\t* g++.dg/cpp0x/auto13.C: New test.\n+\n 2008-12-20  Jakub Jelinek  <jakub@redhat.com>\n \t    Manuel L\u00f3pez-Ib\u00e1\u00f1ez  <manu@gcc.gnu.org>\n "}, {"sha": "dc7e35aabaa4afecaf293be3869659c46fa879a3", "filename": "gcc/testsuite/g++.dg/cpp0x/auto13.C", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3feb128fadfe1f496dd5d59116221e07fe019e27/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fauto13.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3feb128fadfe1f496dd5d59116221e07fe019e27/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fauto13.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fauto13.C?ref=3feb128fadfe1f496dd5d59116221e07fe019e27", "patch": "@@ -0,0 +1,11 @@\n+// PR c++/38597\n+// { dg-options \"-std=c++0x\" }\n+\n+template<class T, class U>\n+auto f(T,U) -> decltype(T() + U())\n+{ return T() + U(); }\n+\n+template<class T> void g(T){}\n+\n+int main() { g(f); }\t\t// { dg-error \"no matching function\" }\n+"}]}