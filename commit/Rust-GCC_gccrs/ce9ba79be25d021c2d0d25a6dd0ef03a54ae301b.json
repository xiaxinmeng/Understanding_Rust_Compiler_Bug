{"sha": "ce9ba79be25d021c2d0d25a6dd0ef03a54ae301b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2U5YmE3OWJlMjVkMDIxYzJkMGQyNWE2ZGQwZWYwM2E1NGFlMzAxYg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2009-04-08T20:00:48Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2009-04-08T20:00:48Z"}, "message": "dwarf2out.c (class_scope_p): New static inline.\n\n\t* dwarf2out.c (class_scope_p): New static inline.\n\t(class_or_namespace_scope_p): Use it.\n\t(gen_variable_die): Use DW_TAG_member tag for static data member\n\tdeclarations instead of DW_TAG_variable.\n\n\t* g++.dg/debug/dwarf2/static-data-member1.C: New test.\n\nFrom-SVN: r145770", "tree": {"sha": "51b6c54d2dfb926b1eeba7f599c2666e878d16f3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/51b6c54d2dfb926b1eeba7f599c2666e878d16f3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ce9ba79be25d021c2d0d25a6dd0ef03a54ae301b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ce9ba79be25d021c2d0d25a6dd0ef03a54ae301b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ce9ba79be25d021c2d0d25a6dd0ef03a54ae301b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ce9ba79be25d021c2d0d25a6dd0ef03a54ae301b/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d27f0ddc1ef8c08cacbda578966f9fa2a52e996e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d27f0ddc1ef8c08cacbda578966f9fa2a52e996e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d27f0ddc1ef8c08cacbda578966f9fa2a52e996e"}], "stats": {"total": 50, "additions": 44, "deletions": 6}, "files": [{"sha": "5c09748214366ac442dc185190b423926594ec0f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce9ba79be25d021c2d0d25a6dd0ef03a54ae301b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce9ba79be25d021c2d0d25a6dd0ef03a54ae301b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ce9ba79be25d021c2d0d25a6dd0ef03a54ae301b", "patch": "@@ -1,3 +1,10 @@\n+2009-04-08  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* dwarf2out.c (class_scope_p): New static inline.\n+\t(class_or_namespace_scope_p): Use it.\n+\t(gen_variable_die): Use DW_TAG_member tag for static data member\n+\tdeclarations instead of DW_TAG_variable.\n+\n 2009-04-08  Richard Guenther  <rguenther@suse.de>\n \n \t* tree-ssa-sccvn.c (valueize_refs): Do not continue to"}, {"sha": "7d82c47679a101738c36f77524485efe875eb709", "filename": "gcc/dwarf2out.c", "status": "modified", "additions": 21, "deletions": 6, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce9ba79be25d021c2d0d25a6dd0ef03a54ae301b/gcc%2Fdwarf2out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce9ba79be25d021c2d0d25a6dd0ef03a54ae301b/gcc%2Fdwarf2out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2out.c?ref=ce9ba79be25d021c2d0d25a6dd0ef03a54ae301b", "patch": "@@ -5136,6 +5136,7 @@ static void push_decl_scope (tree);\n static void pop_decl_scope (void);\n static dw_die_ref scope_die_for (tree, dw_die_ref);\n static inline int local_scope_p (dw_die_ref);\n+static inline int class_scope_p (dw_die_ref);\n static inline int class_or_namespace_scope_p (dw_die_ref);\n static void add_type_attribute (dw_die_ref, tree, int, int, dw_die_ref);\n static void add_calling_convention_attribute (dw_die_ref, tree);\n@@ -12679,18 +12680,26 @@ local_scope_p (dw_die_ref context_die)\n   return 0;\n }\n \n-/* Returns nonzero if CONTEXT_DIE is a class or namespace, for deciding\n-   whether or not to treat a DIE in this context as a declaration.  */\n+/* Returns nonzero if CONTEXT_DIE is a class.  */\n \n static inline int\n-class_or_namespace_scope_p (dw_die_ref context_die)\n+class_scope_p (dw_die_ref context_die)\n {\n   return (context_die\n \t  && (context_die->die_tag == DW_TAG_structure_type\n \t      || context_die->die_tag == DW_TAG_class_type\n \t      || context_die->die_tag == DW_TAG_interface_type\n-\t      || context_die->die_tag == DW_TAG_union_type\n-\t      || context_die->die_tag == DW_TAG_namespace));\n+\t      || context_die->die_tag == DW_TAG_union_type));\n+}\n+\n+/* Returns nonzero if CONTEXT_DIE is a class or namespace, for deciding\n+   whether or not to treat a DIE in this context as a declaration.  */\n+\n+static inline int\n+class_or_namespace_scope_p (dw_die_ref context_die)\n+{\n+  return (class_scope_p (context_die)\n+\t  || (context_die && context_die->die_tag == DW_TAG_namespace));\n }\n \n /* Many forms of DIEs require a \"type description\" attribute.  This\n@@ -13993,7 +14002,13 @@ gen_variable_die (tree decl, tree origin, dw_die_ref context_die)\n       && old_die->die_parent == context_die)\n     return;\n \n-  var_die = new_die (DW_TAG_variable, context_die, decl);\n+  /* For static data members, the declaration in the class is supposed\n+     to have DW_TAG_member tag; the specification should still be\n+     DW_TAG_variable referencing the DW_TAG_member DIE.  */\n+  if (declaration && class_scope_p (context_die))\n+    var_die = new_die (DW_TAG_member, context_die, decl);\n+  else\n+    var_die = new_die (DW_TAG_variable, context_die, decl);\n \n   origin_die = NULL;\n   if (origin != NULL)"}, {"sha": "d843ba297861c7f03e4d71fd795e4f346434f365", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce9ba79be25d021c2d0d25a6dd0ef03a54ae301b/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce9ba79be25d021c2d0d25a6dd0ef03a54ae301b/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=ce9ba79be25d021c2d0d25a6dd0ef03a54ae301b", "patch": "@@ -1,3 +1,7 @@\n+2009-04-08  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* g++.dg/debug/dwarf2/static-data-member1.C: New test.\n+\n 2009-04-08  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/25185"}, {"sha": "dce279ed43e5bf2c78da258d0888d19b3df8d59c", "filename": "gcc/testsuite/g++.dg/debug/dwarf2/static-data-member1.C", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce9ba79be25d021c2d0d25a6dd0ef03a54ae301b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdebug%2Fdwarf2%2Fstatic-data-member1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce9ba79be25d021c2d0d25a6dd0ef03a54ae301b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdebug%2Fdwarf2%2Fstatic-data-member1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdebug%2Fdwarf2%2Fstatic-data-member1.C?ref=ce9ba79be25d021c2d0d25a6dd0ef03a54ae301b", "patch": "@@ -0,0 +1,12 @@\n+// { dg-do compile }\n+// { dg-options \"-g -dA -fno-merge-debug-strings\" }\n+\n+struct A\n+{\n+  static int staticdatamember;\n+};\n+\n+int A::staticdatamember = 6;\n+\n+// { dg-final { scan-assembler \"DW_TAG_member\\[^\\n\\r\\]*\\[\\n\\r\\]*\\[^\\n\\r\\]*staticdatamember\\[^\\n\\r\\]*DW_AT_name\" } }\n+// { dg-final { scan-assembler \"DW_TAG_variable\\[^\\n\\r\\]*\\[\\n\\r\\]*\\[^\\n\\r\\]*DW_AT_specification\" } }"}]}