{"sha": "bd1eb5e0926d817f30e3ac3d77e6047050832438", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmQxZWI1ZTA5MjZkODE3ZjMwZTNhYzNkNzdlNjA0NzA1MDgzMjQzOA==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2015-04-28T12:07:34Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2015-04-28T12:07:34Z"}, "message": "type_traits (void_t): Add.\n\n\t* include/std/type_traits (void_t): Add.\n\t* testsuite/20_util/void_t/1.cc: New.\n\nFrom-SVN: r222522", "tree": {"sha": "dd9f52ae38525003368a15ba8e5e7dcb37385e62", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dd9f52ae38525003368a15ba8e5e7dcb37385e62"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bd1eb5e0926d817f30e3ac3d77e6047050832438", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bd1eb5e0926d817f30e3ac3d77e6047050832438", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bd1eb5e0926d817f30e3ac3d77e6047050832438", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bd1eb5e0926d817f30e3ac3d77e6047050832438/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6b241bd157b04fc2653ee11708f4bc5e8f4f8fba", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6b241bd157b04fc2653ee11708f4bc5e8f4f8fba", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6b241bd157b04fc2653ee11708f4bc5e8f4f8fba"}], "stats": {"total": 56, "additions": 56, "deletions": 0}, "files": [{"sha": "7dfb96e40f8ac74852a93099c36ee14d07d1b06e", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bd1eb5e0926d817f30e3ac3d77e6047050832438/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bd1eb5e0926d817f30e3ac3d77e6047050832438/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=bd1eb5e0926d817f30e3ac3d77e6047050832438", "patch": "@@ -1,3 +1,8 @@\n+2015-04-28  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* include/std/type_traits (void_t): Add.\n+\t* testsuite/20_util/void_t/1.cc: New.\n+\n 2015-04-28  Tim Shen  <timshen@google.com>\n \n \t* include/bits/regex.tcc: Handle regex_constants::__polynomial."}, {"sha": "3ed1a7b5a0abaaac5c511d6266bee03920350276", "filename": "libstdc++-v3/include/std/type_traits", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bd1eb5e0926d817f30e3ac3d77e6047050832438/libstdc%2B%2B-v3%2Finclude%2Fstd%2Ftype_traits", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bd1eb5e0926d817f30e3ac3d77e6047050832438/libstdc%2B%2B-v3%2Finclude%2Fstd%2Ftype_traits", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Ftype_traits?ref=bd1eb5e0926d817f30e3ac3d77e6047050832438", "patch": "@@ -2406,6 +2406,12 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n   template<typename...> using __void_t = void;\n \n+#if __cplusplus > 201402L || !defined(__STRICT_ANSI__) // c++1z or gnu++11\n+#define __cpp_lib_void_t 201411\n+  /// A metafunction that always yields void, used for detecting valid types.\n+  template<typename...> using void_t = void;\n+#endif\n+\n   /// @} group metaprogramming\n \n   /**"}, {"sha": "fe5c507580c8bbe5e4f161f0569684728c41d7d0", "filename": "libstdc++-v3/testsuite/20_util/void_t/1.cc", "status": "added", "additions": 45, "deletions": 0, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bd1eb5e0926d817f30e3ac3d77e6047050832438/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fvoid_t%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bd1eb5e0926d817f30e3ac3d77e6047050832438/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fvoid_t%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fvoid_t%2F1.cc?ref=bd1eb5e0926d817f30e3ac3d77e6047050832438", "patch": "@@ -0,0 +1,45 @@\n+// Copyright (C) 2015 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// { dg-options \"-std=gnu++1z\" }\n+// { dg-do compile }\n+\n+#include <type_traits>\n+\n+#ifndef __cpp_lib_void_t\n+# error \"Feature-test macro for void_t missing\"\n+#elif __cpp_lib_void_t != 201411\n+# error \"Feature-test macro for void_t has wrong value\"\n+#endif\n+\n+static_assert( std::is_same<std::void_t<int, long, double>, void>::value,\n+               \"void_t is a synonym for void\" );\n+\n+struct X { };\n+X operator+(const X& x) { return x; }\n+\n+template<typename T, typename U = std::void_t<>>\n+struct has_unary_plus\n+: std::false_type\n+{ };\n+\n+template<typename T>\n+struct has_unary_plus<T, std::void_t<decltype(+std::declval<X>())>>\n+: std::true_type\n+{ };\n+\n+static_assert( has_unary_plus<X>::value, \"void_t detects valid expressions\" );"}]}