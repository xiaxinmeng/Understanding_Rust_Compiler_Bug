{"sha": "cdb07de7c67cf0d04607ee8e85a659d8bf7594f6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2RiMDdkZTdjNjdjZjBkMDQ2MDdlZThlODVhNjU5ZDhiZjc1OTRmNg==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2017-10-31T11:57:43Z"}, "committer": {"name": "Martin Liska", "email": "marxin@gcc.gnu.org", "date": "2017-10-31T11:57:43Z"}, "message": "GCOV: add support for lines with an unexecuted lines.\n\n2017-10-31  Martin Liska  <mliska@suse.cz>\n\n\t* doc/gcov.texi: Document that.\n\t* gcov.c (add_line_counts): Mark lines with a non-executed\n\tstatement.\n\t(output_line_beginning): Handle such lines.\n\t(output_lines): Pass new argument.\n\t(output_intermediate_file): Print it in intermediate format.\n2017-10-31  Martin Liska  <mliska@suse.cz>\n\n\t* g++.dg/gcov/ternary.C: New test.\n\t* g++.dg/gcov/gcov-threads-1.C (main): Update expected line\n\tcount.\n\t* lib/gcov.exp: Support new format for intermediate file format.\n\nFrom-SVN: r254259", "tree": {"sha": "2834b8b25186936729ec0a78931fe0cb902c62a0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2834b8b25186936729ec0a78931fe0cb902c62a0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cdb07de7c67cf0d04607ee8e85a659d8bf7594f6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cdb07de7c67cf0d04607ee8e85a659d8bf7594f6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cdb07de7c67cf0d04607ee8e85a659d8bf7594f6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cdb07de7c67cf0d04607ee8e85a659d8bf7594f6/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "28f4a4a85f3b95f7ccf7585eaa5cbd50cbe1677d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/28f4a4a85f3b95f7ccf7585eaa5cbd50cbe1677d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/28f4a4a85f3b95f7ccf7585eaa5cbd50cbe1677d"}], "stats": {"total": 97, "additions": 62, "deletions": 35}, "files": [{"sha": "0b26806fe3b532611ebc6add02a479b1b2275f3c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cdb07de7c67cf0d04607ee8e85a659d8bf7594f6/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cdb07de7c67cf0d04607ee8e85a659d8bf7594f6/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=cdb07de7c67cf0d04607ee8e85a659d8bf7594f6", "patch": "@@ -1,3 +1,12 @@\n+2017-10-31  Martin Liska  <mliska@suse.cz>\n+\n+\t* doc/gcov.texi: Document that.\n+\t* gcov.c (add_line_counts): Mark lines with a non-executed\n+\tstatement.\n+\t(output_line_beginning): Handle such lines.\n+\t(output_lines): Pass new argument.\n+\t(output_intermediate_file): Print it in intermediate format.\n+\n 2017-10-31  Martin Liska  <mliska@suse.cz>\n \n \t* color-macros.h: New file."}, {"sha": "e186ac6e1ea627dce732c79ff7096dd905cbdfc9", "filename": "gcc/doc/gcov.texi", "status": "modified", "additions": 8, "deletions": 5, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cdb07de7c67cf0d04607ee8e85a659d8bf7594f6/gcc%2Fdoc%2Fgcov.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cdb07de7c67cf0d04607ee8e85a659d8bf7594f6/gcc%2Fdoc%2Fgcov.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fgcov.texi?ref=cdb07de7c67cf0d04607ee8e85a659d8bf7594f6", "patch": "@@ -189,7 +189,7 @@ one entry per line\n @smallexample\n file:@var{source_file_name}\n function:@var{line_number},@var{execution_count},@var{function_name}\n-lcount:@var{line number},@var{execution_count}\n+lcount:@var{line number},@var{execution_count},@var{has_unexecuted_block}\n branch:@var{line_number},@var{branch_coverage_type}\n \n Where the @var{branch_coverage_type} is\n@@ -208,11 +208,11 @@ Here is a sample when @option{-i} is used in conjunction with @option{-b} option\n file:array.cc\n function:11,1,_Z3sumRKSt6vectorIPiSaIS0_EE\n function:22,1,main\n-lcount:11,1\n-lcount:12,1\n-lcount:14,1\n+lcount:11,1,0\n+lcount:12,1,0\n+lcount:14,1,0\n branch:14,taken\n-lcount:26,1\n+lcount:26,1,0\n branch:28,nottaken\n @end smallexample\n \n@@ -336,6 +336,9 @@ non-exceptional paths or only exceptional paths such as C++ exception\n handlers, respectively. Given @samp{-a} option, unexecuted blocks are\n marked @samp{$$$$$} or @samp{%%%%%}, depending on whether a basic block\n is reachable via non-exceptional or exceptional paths.\n+Executed basic blocks having a statement with zero @var{execution_count}\n+end with @samp{*} character and are colored with magenta color with @option{-k}\n+option.\n \n Note that GCC can completely remove the bodies of functions that are\n not needed -- for instance if they are inlined everywhere.  Such functions"}, {"sha": "f9334f96eb3b1dd35347814add9b3780ecf0d1c4", "filename": "gcc/gcov.c", "status": "modified", "additions": 23, "deletions": 27, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cdb07de7c67cf0d04607ee8e85a659d8bf7594f6/gcc%2Fgcov.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cdb07de7c67cf0d04607ee8e85a659d8bf7594f6/gcc%2Fgcov.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcov.c?ref=cdb07de7c67cf0d04607ee8e85a659d8bf7594f6", "patch": "@@ -256,6 +256,7 @@ typedef struct line_info\n \t\t\t      Used in all-blocks mode.  */\n   unsigned exists : 1;\n   unsigned unexceptional : 1;\n+  unsigned has_unexecuted_block : 1;\n } line_t;\n \n bool\n@@ -850,28 +851,7 @@ process_args (int argc, char **argv)\n /* Output the result in intermediate format used by 'lcov'.\n \n The intermediate format contains a single file named 'foo.cc.gcov',\n-with no source code included. A sample output is\n-\n-file:foo.cc\n-function:5,1,_Z3foov\n-function:13,1,main\n-function:19,1,_GLOBAL__sub_I__Z3foov\n-function:19,1,_Z41__static_initialization_and_destruction_0ii\n-lcount:5,1\n-lcount:7,9\n-lcount:9,8\n-lcount:11,1\n-file:/.../iostream\n-lcount:74,1\n-file:/.../basic_ios.h\n-file:/.../ostream\n-file:/.../ios_base.h\n-function:157,0,_ZStorSt12_Ios_IostateS_\n-lcount:157,0\n-file:/.../char_traits.h\n-function:258,0,_ZNSt11char_traitsIcE6lengthEPKc\n-lcount:258,0\n-...\n+with no source code included.\n \n The default gcov outputs multiple files: 'foo.cc.gcov',\n 'iostream.gcov', 'ios_base.h.gcov', etc. with source code\n@@ -901,8 +881,8 @@ output_intermediate_file (FILE *gcov_file, source_t *src)\n     {\n       arc_t *arc;\n       if (line->exists)\n-\tfprintf (gcov_file, \"lcount:%u,%s\\n\", line_num,\n-\t\t format_gcov (line->count, 0, -1));\n+\tfprintf (gcov_file, \"lcount:%u,%s,%d\\n\", line_num,\n+\t\t format_gcov (line->count, 0, -1), line->has_unexecuted_block);\n       if (flag_branches)\n \tfor (arc = line->branches; arc; arc = arc->line_next)\n           {\n@@ -2289,7 +2269,11 @@ add_line_counts (coverage_t *coverage, function_t *fn)\n \t\t}\n \t      line->exists = 1;\n \t      if (!block->exceptional)\n-\t\tline->unexceptional = 1;\n+\t\t{\n+\t\t  line->unexceptional = 1;\n+\t\t  if (block->count == 0)\n+\t\t    line->has_unexecuted_block = 1;\n+\t\t}\n \t      line->count += block->count;\n \t    }\n \t}\n@@ -2496,6 +2480,7 @@ pad_count_string (string &s)\n \n static void\n output_line_beginning (FILE *f, bool exists, bool unexceptional,\n+\t\t       bool has_unexecuted_block,\n \t\t       gcov_type count, unsigned line_num,\n \t\t       const char *exceptional_string,\n \t\t       const char *unexceptional_string)\n@@ -2506,6 +2491,17 @@ output_line_beginning (FILE *f, bool exists, bool unexceptional,\n       if (count > 0)\n \t{\n \t  s = format_gcov (count, 0, -1);\n+\t  if (has_unexecuted_block)\n+\t    {\n+\t      if (flag_use_colors)\n+\t\t{\n+\t\t  pad_count_string (s);\n+\t\t  s = SGR_SEQ (COLOR_BG_MAGENTA COLOR_SEPARATOR COLOR_FG_WHITE);\n+\t\t  s += SGR_RESET;\n+\t\t}\n+\t      else\n+\t\ts += \"*\";\n+\t    }\n \t  pad_count_string (s);\n \t}\n       else\n@@ -2610,7 +2606,7 @@ output_lines (FILE *gcov_file, const source_t *src)\n \t There are 16 spaces of indentation added before the source\n \t line so that tabs won't be messed up.  */\n       output_line_beginning (gcov_file, line->exists, line->unexceptional,\n-\t\t\t     line->count, line_num,\n+\t\t\t     line->has_unexecuted_block, line->count, line_num,\n \t\t\t     \"=====\", \"#####\");\n       fprintf (gcov_file, \":%s\\n\", retval ? retval : \"/*EOF*/\");\n \n@@ -2626,7 +2622,7 @@ output_lines (FILE *gcov_file, const source_t *src)\n \t      if (!block->is_call_return)\n \t\t{\n \t\t  output_line_beginning (gcov_file, line->exists,\n-\t\t\t\t\t block->exceptional,\n+\t\t\t\t\t block->exceptional, false,\n \t\t\t\t\t block->count, line_num,\n \t\t\t\t\t \"%%%%%\", \"$$$$$\");\n \t\t  fprintf (gcov_file, \"-block %2d\", ix++);"}, {"sha": "a1adb14087f12633a69a10c2259e522d71fa9ed5", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cdb07de7c67cf0d04607ee8e85a659d8bf7594f6/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cdb07de7c67cf0d04607ee8e85a659d8bf7594f6/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=cdb07de7c67cf0d04607ee8e85a659d8bf7594f6", "patch": "@@ -1,3 +1,10 @@\n+2017-10-31  Martin Liska  <mliska@suse.cz>\n+\n+\t* g++.dg/gcov/ternary.C: New test.\n+\t* g++.dg/gcov/gcov-threads-1.C (main): Update expected line\n+\tcount.\n+\t* lib/gcov.exp: Support new format for intermediate file format.\n+\n 2017-11-01  Julia Koval  <julia.koval@intel.com>\n \n \t* gcc.target/i386/avx-1.c: Handle new intrinsics."}, {"sha": "cc912f9ddf4b6b50055fb382796839611ad0570d", "filename": "gcc/testsuite/g++.dg/gcov/gcov-threads-1.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cdb07de7c67cf0d04607ee8e85a659d8bf7594f6/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgcov%2Fgcov-threads-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cdb07de7c67cf0d04607ee8e85a659d8bf7594f6/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgcov%2Fgcov-threads-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgcov%2Fgcov-threads-1.C?ref=cdb07de7c67cf0d04607ee8e85a659d8bf7594f6", "patch": "@@ -31,14 +31,14 @@ int main(int argc, char **argv) {\n   {\n     ids[i] = i;\n     int r = pthread_create (&t[i], NULL, ContentionNoDeadlock_thread, &ids[i]);\n-    assert (r == 0);\t\t\t\t/* count(5) */\n+    assert (r == 0);\t\t\t\t/* count(5*) */\n   }\n \n   int ret;\n   for (int i = 0; i < NR; i++)\n     {\n       int r = pthread_join (t[i], (void**)&ret);\n-      assert (r == 0);\t\t\t\t/* count(5) */\n+      assert (r == 0);\t\t\t\t/* count(5*) */\n     }\n \n   return 0;\t\t\t\t\t/* count(1) */"}, {"sha": "d055928c2952fb28166f9c9da3455df4ba11804e", "filename": "gcc/testsuite/g++.dg/gcov/ternary.C", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cdb07de7c67cf0d04607ee8e85a659d8bf7594f6/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgcov%2Fternary.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cdb07de7c67cf0d04607ee8e85a659d8bf7594f6/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgcov%2Fternary.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgcov%2Fternary.C?ref=cdb07de7c67cf0d04607ee8e85a659d8bf7594f6", "patch": "@@ -0,0 +1,12 @@\n+// { dg-options \"-fprofile-arcs -ftest-coverage\" }\n+// { dg-do run { target native } }\n+\n+int b, c, d, e;\n+\n+int main()\n+{\n+  int a = b < 1 ? (c < 3 ? d : c) : e;\t/* count(1*) */\n+  return a;\n+}\n+\n+// { dg-final { run-gcov remove-gcda ternary.C } }"}, {"sha": "18adc71351a7e1ce467d64190b60901aa972b313", "filename": "gcc/testsuite/lib/gcov.exp", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cdb07de7c67cf0d04607ee8e85a659d8bf7594f6/gcc%2Ftestsuite%2Flib%2Fgcov.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cdb07de7c67cf0d04607ee8e85a659d8bf7594f6/gcc%2Ftestsuite%2Flib%2Fgcov.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Fgcov.exp?ref=cdb07de7c67cf0d04607ee8e85a659d8bf7594f6", "patch": "@@ -108,7 +108,7 @@ proc verify-intermediate { testname testcase file } {\n \tif [regexp \"^function:(\\[0-9\\]+),(\\[0-9\\]+),.*\" $line] {\n \t    incr function\n \t}\n-\tif [regexp \"^lcount:(\\[0-9\\]+),(\\[0-9\\]+)\" $line] {\n+\tif [regexp \"^lcount:(\\[0-9\\]+),(\\[0-9\\]+),(\\[01\\])\" $line] {\n \t    incr lcount\n \t}\n \tif [regexp \"^branch:(\\[0-9\\]+),(taken|nottaken|notexec)\" $line] {"}]}