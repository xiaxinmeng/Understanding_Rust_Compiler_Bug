{"sha": "0da83a168fdca32fec2d6bf8280670d05514c4c4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGRhODNhMTY4ZmRjYTMyZmVjMmQ2YmY4MjgwNjcwZDA1NTE0YzRjNA==", "commit": {"author": {"name": "Iain Buclaw", "email": "ibuclaw@gdcproject.org", "date": "2019-03-26T15:18:19Z"}, "committer": {"name": "Iain Buclaw", "email": "ibuclaw@gcc.gnu.org", "date": "2019-03-26T15:18:19Z"}, "message": "libphobos: Backport extern(C) bindings from druntime 2.085.\n\nMerges upstream druntime b9564bef.\n\nReviewed-on: https://github.com/dlang/druntime/pull/2512\n\nlibphobos/ChangeLog:\n\n2019-03-26  Iain Buclaw  <ibuclaw@gdcproject.org>\n\n\t* libdruntime/Makefile.am (DRUNTIME_DSOURCES_DARWIN): Add\n\tcore/sys/darwin/crt_externs.d.\n\t(DRUNTIME_DSOURCES_FREEBSD): Add core/sys/freebsd/unistd.d.\n\t(DRUNTIME_DSOURCES_POSIX): Add core/sys/posix/spawn.d.\n\t* libdruntime/Makefile.in: Regenerate.\n\nFrom-SVN: r269948", "tree": {"sha": "57c3c9d7e0fc6e4777cfac433e58f92fb08d90fa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/57c3c9d7e0fc6e4777cfac433e58f92fb08d90fa"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0da83a168fdca32fec2d6bf8280670d05514c4c4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0da83a168fdca32fec2d6bf8280670d05514c4c4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0da83a168fdca32fec2d6bf8280670d05514c4c4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0da83a168fdca32fec2d6bf8280670d05514c4c4/comments", "author": {"login": "ibuclaw", "id": 397929, "node_id": "MDQ6VXNlcjM5NzkyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/397929?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ibuclaw", "html_url": "https://github.com/ibuclaw", "followers_url": "https://api.github.com/users/ibuclaw/followers", "following_url": "https://api.github.com/users/ibuclaw/following{/other_user}", "gists_url": "https://api.github.com/users/ibuclaw/gists{/gist_id}", "starred_url": "https://api.github.com/users/ibuclaw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ibuclaw/subscriptions", "organizations_url": "https://api.github.com/users/ibuclaw/orgs", "repos_url": "https://api.github.com/users/ibuclaw/repos", "events_url": "https://api.github.com/users/ibuclaw/events{/privacy}", "received_events_url": "https://api.github.com/users/ibuclaw/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "da97b98ad341457aa46afc5c20d4ec95af5c1f91", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/da97b98ad341457aa46afc5c20d4ec95af5c1f91", "html_url": "https://github.com/Rust-GCC/gccrs/commit/da97b98ad341457aa46afc5c20d4ec95af5c1f91"}], "stats": {"total": 2559, "additions": 1553, "deletions": 1006}, "files": [{"sha": "1b968177e4013735f6f637b417f2be8729c379b0", "filename": "libphobos/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0da83a168fdca32fec2d6bf8280670d05514c4c4/libphobos%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0da83a168fdca32fec2d6bf8280670d05514c4c4/libphobos%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2FChangeLog?ref=0da83a168fdca32fec2d6bf8280670d05514c4c4", "patch": "@@ -1,3 +1,11 @@\n+2019-03-26  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* libdruntime/Makefile.am (DRUNTIME_DSOURCES_DARWIN): Add\n+\tcore/sys/darwin/crt_externs.d.\n+\t(DRUNTIME_DSOURCES_FREEBSD): Add core/sys/freebsd/unistd.d.\n+\t(DRUNTIME_DSOURCES_POSIX): Add core/sys/posix/spawn.d.\n+\t* libdruntime/Makefile.in: Regenerate.\n+\n 2019-03-23  Johannes Pfau  <johannespfau@gmail.com>\n \n \t* configure.ac: Update autotool version comment."}, {"sha": "ed756fa6c1855d29853d56365c720a3de4da9684", "filename": "libphobos/libdruntime/MERGE", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0da83a168fdca32fec2d6bf8280670d05514c4c4/libphobos%2Flibdruntime%2FMERGE", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0da83a168fdca32fec2d6bf8280670d05514c4c4/libphobos%2Flibdruntime%2FMERGE", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2FMERGE?ref=0da83a168fdca32fec2d6bf8280670d05514c4c4", "patch": "@@ -1,4 +1,4 @@\n-bbfb58e8a921cabdd0002a40bf63fe35ed7c77e8\n+b9564bef1147c797842e6c1a804f2c3565c64ac1\n \n The first line of this file holds the git revision number of the last\n merge done from the dlang/druntime repository."}, {"sha": "53d03b1e82ab648b237e0fdd2673a6f34118edf9", "filename": "libphobos/libdruntime/Makefile.am", "status": "modified", "additions": 22, "deletions": 21, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0da83a168fdca32fec2d6bf8280670d05514c4c4/libphobos%2Flibdruntime%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0da83a168fdca32fec2d6bf8280670d05514c4c4/libphobos%2Flibdruntime%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2FMakefile.am?ref=0da83a168fdca32fec2d6bf8280670d05514c4c4", "patch": "@@ -220,14 +220,14 @@ DRUNTIME_DSOURCES_GCSTUB = gcstub/gc.d\n DRUNTIME_DSOURCES_BIONIC = core/sys/bionic/fcntl.d \\\n \tcore/sys/bionic/unistd.d\n \n-DRUNTIME_DSOURCES_DARWIN = core/sys/darwin/dlfcn.d \\\n-\tcore/sys/darwin/execinfo.d core/sys/darwin/mach/dyld.d \\\n-\tcore/sys/darwin/mach/getsect.d core/sys/darwin/mach/kern_return.d \\\n-\tcore/sys/darwin/mach/loader.d core/sys/darwin/mach/port.d \\\n-\tcore/sys/darwin/mach/semaphore.d core/sys/darwin/mach/thread_act.d \\\n-\tcore/sys/darwin/netinet/in_.d core/sys/darwin/pthread.d \\\n-\tcore/sys/darwin/sys/cdefs.d core/sys/darwin/sys/event.d \\\n-\tcore/sys/darwin/sys/mman.d\n+DRUNTIME_DSOURCES_DARWIN = core/sys/darwin/crt_externs.d \\\n+\tcore/sys/darwin/dlfcn.d core/sys/darwin/execinfo.d \\\n+\tcore/sys/darwin/mach/dyld.d core/sys/darwin/mach/getsect.d \\\n+\tcore/sys/darwin/mach/kern_return.d core/sys/darwin/mach/loader.d \\\n+\tcore/sys/darwin/mach/port.d core/sys/darwin/mach/semaphore.d \\\n+\tcore/sys/darwin/mach/thread_act.d core/sys/darwin/netinet/in_.d \\\n+\tcore/sys/darwin/pthread.d core/sys/darwin/sys/cdefs.d \\\n+\tcore/sys/darwin/sys/event.d core/sys/darwin/sys/mman.d\n \n DRUNTIME_DSOURCES_DRAGONFLYBSD = core/sys/dragonflybsd/dlfcn.d \\\n \tcore/sys/dragonflybsd/execinfo.d core/sys/dragonflybsd/netinet/in_.d \\\n@@ -247,7 +247,7 @@ DRUNTIME_DSOURCES_FREEBSD = core/sys/freebsd/dlfcn.d \\\n \tcore/sys/freebsd/sys/elf64.d core/sys/freebsd/sys/elf_common.d \\\n \tcore/sys/freebsd/sys/event.d core/sys/freebsd/sys/link_elf.d \\\n \tcore/sys/freebsd/sys/mman.d core/sys/freebsd/sys/mount.d \\\n-\tcore/sys/freebsd/time.d\n+\tcore/sys/freebsd/time.d core/sys/freebsd/unistd.d\n \n DRUNTIME_DSOURCES_LINUX = core/sys/linux/config.d \\\n \tcore/sys/linux/dlfcn.d core/sys/linux/elf.d core/sys/linux/epoll.d \\\n@@ -282,18 +282,19 @@ DRUNTIME_DSOURCES_POSIX = core/sys/posix/aio.d \\\n \tcore/sys/posix/netinet/in_.d core/sys/posix/netinet/tcp.d \\\n \tcore/sys/posix/poll.d core/sys/posix/pthread.d core/sys/posix/pwd.d \\\n \tcore/sys/posix/sched.d core/sys/posix/semaphore.d \\\n-\tcore/sys/posix/setjmp.d core/sys/posix/signal.d core/sys/posix/stdio.d \\\n-\tcore/sys/posix/stdlib.d core/sys/posix/sys/filio.d \\\n-\tcore/sys/posix/sys/ioccom.d core/sys/posix/sys/ioctl.d \\\n-\tcore/sys/posix/sys/ipc.d core/sys/posix/sys/mman.d \\\n-\tcore/sys/posix/sys/msg.d core/sys/posix/sys/resource.d \\\n-\tcore/sys/posix/sys/select.d core/sys/posix/sys/shm.d \\\n-\tcore/sys/posix/sys/socket.d core/sys/posix/sys/stat.d \\\n-\tcore/sys/posix/sys/statvfs.d core/sys/posix/sys/time.d \\\n-\tcore/sys/posix/sys/ttycom.d core/sys/posix/sys/types.d \\\n-\tcore/sys/posix/sys/uio.d core/sys/posix/sys/un.d \\\n-\tcore/sys/posix/sys/utsname.d core/sys/posix/sys/wait.d \\\n-\tcore/sys/posix/syslog.d core/sys/posix/termios.d core/sys/posix/time.d \\\n+\tcore/sys/posix/setjmp.d core/sys/posix/signal.d core/sys/posix/spawn.d \\\n+\tcore/sys/posix/stdio.d core/sys/posix/stdlib.d \\\n+\tcore/sys/posix/sys/filio.d core/sys/posix/sys/ioccom.d \\\n+\tcore/sys/posix/sys/ioctl.d core/sys/posix/sys/ipc.d \\\n+\tcore/sys/posix/sys/mman.d core/sys/posix/sys/msg.d \\\n+\tcore/sys/posix/sys/resource.d core/sys/posix/sys/select.d \\\n+\tcore/sys/posix/sys/shm.d core/sys/posix/sys/socket.d \\\n+\tcore/sys/posix/sys/stat.d core/sys/posix/sys/statvfs.d \\\n+\tcore/sys/posix/sys/time.d core/sys/posix/sys/ttycom.d \\\n+\tcore/sys/posix/sys/types.d core/sys/posix/sys/uio.d \\\n+\tcore/sys/posix/sys/un.d core/sys/posix/sys/utsname.d \\\n+\tcore/sys/posix/sys/wait.d core/sys/posix/syslog.d \\\n+\tcore/sys/posix/termios.d core/sys/posix/time.d \\\n \tcore/sys/posix/ucontext.d core/sys/posix/unistd.d \\\n \tcore/sys/posix/utime.d\n "}, {"sha": "100312ebf2df51930843001cff375ad404e411c0", "filename": "libphobos/libdruntime/Makefile.in", "status": "modified", "additions": 70, "deletions": 63, "changes": 133, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0da83a168fdca32fec2d6bf8280670d05514c4c4/libphobos%2Flibdruntime%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0da83a168fdca32fec2d6bf8280670d05514c4c4/libphobos%2Flibdruntime%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2FMakefile.in?ref=0da83a168fdca32fec2d6bf8280670d05514c4c4", "patch": "@@ -247,22 +247,23 @@ am__objects_6 = core/sys/posix/aio.lo core/sys/posix/arpa/inet.lo \\\n \tcore/sys/posix/pthread.lo core/sys/posix/pwd.lo \\\n \tcore/sys/posix/sched.lo core/sys/posix/semaphore.lo \\\n \tcore/sys/posix/setjmp.lo core/sys/posix/signal.lo \\\n-\tcore/sys/posix/stdio.lo core/sys/posix/stdlib.lo \\\n-\tcore/sys/posix/sys/filio.lo core/sys/posix/sys/ioccom.lo \\\n-\tcore/sys/posix/sys/ioctl.lo core/sys/posix/sys/ipc.lo \\\n-\tcore/sys/posix/sys/mman.lo core/sys/posix/sys/msg.lo \\\n-\tcore/sys/posix/sys/resource.lo core/sys/posix/sys/select.lo \\\n-\tcore/sys/posix/sys/shm.lo core/sys/posix/sys/socket.lo \\\n-\tcore/sys/posix/sys/stat.lo core/sys/posix/sys/statvfs.lo \\\n-\tcore/sys/posix/sys/time.lo core/sys/posix/sys/ttycom.lo \\\n-\tcore/sys/posix/sys/types.lo core/sys/posix/sys/uio.lo \\\n-\tcore/sys/posix/sys/un.lo core/sys/posix/sys/utsname.lo \\\n-\tcore/sys/posix/sys/wait.lo core/sys/posix/syslog.lo \\\n-\tcore/sys/posix/termios.lo core/sys/posix/time.lo \\\n-\tcore/sys/posix/ucontext.lo core/sys/posix/unistd.lo \\\n-\tcore/sys/posix/utime.lo\n+\tcore/sys/posix/spawn.lo core/sys/posix/stdio.lo \\\n+\tcore/sys/posix/stdlib.lo core/sys/posix/sys/filio.lo \\\n+\tcore/sys/posix/sys/ioccom.lo core/sys/posix/sys/ioctl.lo \\\n+\tcore/sys/posix/sys/ipc.lo core/sys/posix/sys/mman.lo \\\n+\tcore/sys/posix/sys/msg.lo core/sys/posix/sys/resource.lo \\\n+\tcore/sys/posix/sys/select.lo core/sys/posix/sys/shm.lo \\\n+\tcore/sys/posix/sys/socket.lo core/sys/posix/sys/stat.lo \\\n+\tcore/sys/posix/sys/statvfs.lo core/sys/posix/sys/time.lo \\\n+\tcore/sys/posix/sys/ttycom.lo core/sys/posix/sys/types.lo \\\n+\tcore/sys/posix/sys/uio.lo core/sys/posix/sys/un.lo \\\n+\tcore/sys/posix/sys/utsname.lo core/sys/posix/sys/wait.lo \\\n+\tcore/sys/posix/syslog.lo core/sys/posix/termios.lo \\\n+\tcore/sys/posix/time.lo core/sys/posix/ucontext.lo \\\n+\tcore/sys/posix/unistd.lo core/sys/posix/utime.lo\n @DRUNTIME_OS_UNIX_TRUE@am__objects_7 = $(am__objects_6)\n-am__objects_8 = core/sys/darwin/dlfcn.lo core/sys/darwin/execinfo.lo \\\n+am__objects_8 = core/sys/darwin/crt_externs.lo \\\n+\tcore/sys/darwin/dlfcn.lo core/sys/darwin/execinfo.lo \\\n \tcore/sys/darwin/mach/dyld.lo core/sys/darwin/mach/getsect.lo \\\n \tcore/sys/darwin/mach/kern_return.lo \\\n \tcore/sys/darwin/mach/loader.lo core/sys/darwin/mach/port.lo \\\n@@ -299,7 +300,7 @@ am__objects_14 = core/sys/freebsd/dlfcn.lo \\\n \tcore/sys/freebsd/sys/elf_common.lo \\\n \tcore/sys/freebsd/sys/event.lo core/sys/freebsd/sys/link_elf.lo \\\n \tcore/sys/freebsd/sys/mman.lo core/sys/freebsd/sys/mount.lo \\\n-\tcore/sys/freebsd/time.lo\n+\tcore/sys/freebsd/time.lo core/sys/freebsd/unistd.lo\n @DRUNTIME_OS_FREEBSD_TRUE@am__objects_15 = $(am__objects_14)\n am__objects_16 = core/sys/netbsd/dlfcn.lo core/sys/netbsd/execinfo.lo \\\n \tcore/sys/netbsd/sys/elf.lo core/sys/netbsd/sys/elf32.lo \\\n@@ -509,11 +510,11 @@ am__DEPENDENCIES_7 = core/sys/posix/aio.t.lo \\\n \tcore/sys/posix/pthread.t.lo core/sys/posix/pwd.t.lo \\\n \tcore/sys/posix/sched.t.lo core/sys/posix/semaphore.t.lo \\\n \tcore/sys/posix/setjmp.t.lo core/sys/posix/signal.t.lo \\\n-\tcore/sys/posix/stdio.t.lo core/sys/posix/stdlib.t.lo \\\n-\tcore/sys/posix/sys/filio.t.lo core/sys/posix/sys/ioccom.t.lo \\\n-\tcore/sys/posix/sys/ioctl.t.lo core/sys/posix/sys/ipc.t.lo \\\n-\tcore/sys/posix/sys/mman.t.lo core/sys/posix/sys/msg.t.lo \\\n-\tcore/sys/posix/sys/resource.t.lo \\\n+\tcore/sys/posix/spawn.t.lo core/sys/posix/stdio.t.lo \\\n+\tcore/sys/posix/stdlib.t.lo core/sys/posix/sys/filio.t.lo \\\n+\tcore/sys/posix/sys/ioccom.t.lo core/sys/posix/sys/ioctl.t.lo \\\n+\tcore/sys/posix/sys/ipc.t.lo core/sys/posix/sys/mman.t.lo \\\n+\tcore/sys/posix/sys/msg.t.lo core/sys/posix/sys/resource.t.lo \\\n \tcore/sys/posix/sys/select.t.lo core/sys/posix/sys/shm.t.lo \\\n \tcore/sys/posix/sys/socket.t.lo core/sys/posix/sys/stat.t.lo \\\n \tcore/sys/posix/sys/statvfs.t.lo core/sys/posix/sys/time.t.lo \\\n@@ -524,8 +525,9 @@ am__DEPENDENCIES_7 = core/sys/posix/aio.t.lo \\\n \tcore/sys/posix/time.t.lo core/sys/posix/ucontext.t.lo \\\n \tcore/sys/posix/unistd.t.lo core/sys/posix/utime.t.lo\n @DRUNTIME_OS_UNIX_TRUE@am__DEPENDENCIES_8 = $(am__DEPENDENCIES_7)\n-am__DEPENDENCIES_9 = core/sys/darwin/dlfcn.t.lo \\\n-\tcore/sys/darwin/execinfo.t.lo core/sys/darwin/mach/dyld.t.lo \\\n+am__DEPENDENCIES_9 = core/sys/darwin/crt_externs.t.lo \\\n+\tcore/sys/darwin/dlfcn.t.lo core/sys/darwin/execinfo.t.lo \\\n+\tcore/sys/darwin/mach/dyld.t.lo \\\n \tcore/sys/darwin/mach/getsect.t.lo \\\n \tcore/sys/darwin/mach/kern_return.t.lo \\\n \tcore/sys/darwin/mach/loader.t.lo \\\n@@ -570,7 +572,7 @@ am__DEPENDENCIES_15 = core/sys/freebsd/dlfcn.t.lo \\\n \tcore/sys/freebsd/sys/event.t.lo \\\n \tcore/sys/freebsd/sys/link_elf.t.lo \\\n \tcore/sys/freebsd/sys/mman.t.lo core/sys/freebsd/sys/mount.t.lo \\\n-\tcore/sys/freebsd/time.t.lo\n+\tcore/sys/freebsd/time.t.lo core/sys/freebsd/unistd.t.lo\n @DRUNTIME_OS_FREEBSD_TRUE@am__DEPENDENCIES_16 =  \\\n @DRUNTIME_OS_FREEBSD_TRUE@\t$(am__DEPENDENCIES_15)\n am__DEPENDENCIES_17 = core/sys/netbsd/dlfcn.t.lo \\\n@@ -801,24 +803,25 @@ am__DEPENDENCIES_35 = core/sys/posix/aio.t.o \\\n \tcore/sys/posix/poll.t.o core/sys/posix/pthread.t.o \\\n \tcore/sys/posix/pwd.t.o core/sys/posix/sched.t.o \\\n \tcore/sys/posix/semaphore.t.o core/sys/posix/setjmp.t.o \\\n-\tcore/sys/posix/signal.t.o core/sys/posix/stdio.t.o \\\n-\tcore/sys/posix/stdlib.t.o core/sys/posix/sys/filio.t.o \\\n-\tcore/sys/posix/sys/ioccom.t.o core/sys/posix/sys/ioctl.t.o \\\n-\tcore/sys/posix/sys/ipc.t.o core/sys/posix/sys/mman.t.o \\\n-\tcore/sys/posix/sys/msg.t.o core/sys/posix/sys/resource.t.o \\\n-\tcore/sys/posix/sys/select.t.o core/sys/posix/sys/shm.t.o \\\n-\tcore/sys/posix/sys/socket.t.o core/sys/posix/sys/stat.t.o \\\n-\tcore/sys/posix/sys/statvfs.t.o core/sys/posix/sys/time.t.o \\\n-\tcore/sys/posix/sys/ttycom.t.o core/sys/posix/sys/types.t.o \\\n-\tcore/sys/posix/sys/uio.t.o core/sys/posix/sys/un.t.o \\\n-\tcore/sys/posix/sys/utsname.t.o core/sys/posix/sys/wait.t.o \\\n-\tcore/sys/posix/syslog.t.o core/sys/posix/termios.t.o \\\n-\tcore/sys/posix/time.t.o core/sys/posix/ucontext.t.o \\\n-\tcore/sys/posix/unistd.t.o core/sys/posix/utime.t.o\n+\tcore/sys/posix/signal.t.o core/sys/posix/spawn.t.o \\\n+\tcore/sys/posix/stdio.t.o core/sys/posix/stdlib.t.o \\\n+\tcore/sys/posix/sys/filio.t.o core/sys/posix/sys/ioccom.t.o \\\n+\tcore/sys/posix/sys/ioctl.t.o core/sys/posix/sys/ipc.t.o \\\n+\tcore/sys/posix/sys/mman.t.o core/sys/posix/sys/msg.t.o \\\n+\tcore/sys/posix/sys/resource.t.o core/sys/posix/sys/select.t.o \\\n+\tcore/sys/posix/sys/shm.t.o core/sys/posix/sys/socket.t.o \\\n+\tcore/sys/posix/sys/stat.t.o core/sys/posix/sys/statvfs.t.o \\\n+\tcore/sys/posix/sys/time.t.o core/sys/posix/sys/ttycom.t.o \\\n+\tcore/sys/posix/sys/types.t.o core/sys/posix/sys/uio.t.o \\\n+\tcore/sys/posix/sys/un.t.o core/sys/posix/sys/utsname.t.o \\\n+\tcore/sys/posix/sys/wait.t.o core/sys/posix/syslog.t.o \\\n+\tcore/sys/posix/termios.t.o core/sys/posix/time.t.o \\\n+\tcore/sys/posix/ucontext.t.o core/sys/posix/unistd.t.o \\\n+\tcore/sys/posix/utime.t.o\n @DRUNTIME_OS_UNIX_TRUE@am__DEPENDENCIES_36 = $(am__DEPENDENCIES_35)\n-am__DEPENDENCIES_37 = core/sys/darwin/dlfcn.t.o \\\n-\tcore/sys/darwin/execinfo.t.o core/sys/darwin/mach/dyld.t.o \\\n-\tcore/sys/darwin/mach/getsect.t.o \\\n+am__DEPENDENCIES_37 = core/sys/darwin/crt_externs.t.o \\\n+\tcore/sys/darwin/dlfcn.t.o core/sys/darwin/execinfo.t.o \\\n+\tcore/sys/darwin/mach/dyld.t.o core/sys/darwin/mach/getsect.t.o \\\n \tcore/sys/darwin/mach/kern_return.t.o \\\n \tcore/sys/darwin/mach/loader.t.o core/sys/darwin/mach/port.t.o \\\n \tcore/sys/darwin/mach/semaphore.t.o \\\n@@ -859,7 +862,7 @@ am__DEPENDENCIES_43 = core/sys/freebsd/dlfcn.t.o \\\n \tcore/sys/freebsd/sys/event.t.o \\\n \tcore/sys/freebsd/sys/link_elf.t.o \\\n \tcore/sys/freebsd/sys/mman.t.o core/sys/freebsd/sys/mount.t.o \\\n-\tcore/sys/freebsd/time.t.o\n+\tcore/sys/freebsd/time.t.o core/sys/freebsd/unistd.t.o\n @DRUNTIME_OS_FREEBSD_TRUE@am__DEPENDENCIES_44 =  \\\n @DRUNTIME_OS_FREEBSD_TRUE@\t$(am__DEPENDENCIES_43)\n am__DEPENDENCIES_45 = core/sys/netbsd/dlfcn.t.o \\\n@@ -1390,14 +1393,14 @@ DRUNTIME_DSOURCES_GCSTUB = gcstub/gc.d\n DRUNTIME_DSOURCES_BIONIC = core/sys/bionic/fcntl.d \\\n \tcore/sys/bionic/unistd.d\n \n-DRUNTIME_DSOURCES_DARWIN = core/sys/darwin/dlfcn.d \\\n-\tcore/sys/darwin/execinfo.d core/sys/darwin/mach/dyld.d \\\n-\tcore/sys/darwin/mach/getsect.d core/sys/darwin/mach/kern_return.d \\\n-\tcore/sys/darwin/mach/loader.d core/sys/darwin/mach/port.d \\\n-\tcore/sys/darwin/mach/semaphore.d core/sys/darwin/mach/thread_act.d \\\n-\tcore/sys/darwin/netinet/in_.d core/sys/darwin/pthread.d \\\n-\tcore/sys/darwin/sys/cdefs.d core/sys/darwin/sys/event.d \\\n-\tcore/sys/darwin/sys/mman.d\n+DRUNTIME_DSOURCES_DARWIN = core/sys/darwin/crt_externs.d \\\n+\tcore/sys/darwin/dlfcn.d core/sys/darwin/execinfo.d \\\n+\tcore/sys/darwin/mach/dyld.d core/sys/darwin/mach/getsect.d \\\n+\tcore/sys/darwin/mach/kern_return.d core/sys/darwin/mach/loader.d \\\n+\tcore/sys/darwin/mach/port.d core/sys/darwin/mach/semaphore.d \\\n+\tcore/sys/darwin/mach/thread_act.d core/sys/darwin/netinet/in_.d \\\n+\tcore/sys/darwin/pthread.d core/sys/darwin/sys/cdefs.d \\\n+\tcore/sys/darwin/sys/event.d core/sys/darwin/sys/mman.d\n \n DRUNTIME_DSOURCES_DRAGONFLYBSD = core/sys/dragonflybsd/dlfcn.d \\\n \tcore/sys/dragonflybsd/execinfo.d core/sys/dragonflybsd/netinet/in_.d \\\n@@ -1417,7 +1420,7 @@ DRUNTIME_DSOURCES_FREEBSD = core/sys/freebsd/dlfcn.d \\\n \tcore/sys/freebsd/sys/elf64.d core/sys/freebsd/sys/elf_common.d \\\n \tcore/sys/freebsd/sys/event.d core/sys/freebsd/sys/link_elf.d \\\n \tcore/sys/freebsd/sys/mman.d core/sys/freebsd/sys/mount.d \\\n-\tcore/sys/freebsd/time.d\n+\tcore/sys/freebsd/time.d core/sys/freebsd/unistd.d\n \n DRUNTIME_DSOURCES_LINUX = core/sys/linux/config.d \\\n \tcore/sys/linux/dlfcn.d core/sys/linux/elf.d core/sys/linux/epoll.d \\\n@@ -1451,18 +1454,19 @@ DRUNTIME_DSOURCES_POSIX = core/sys/posix/aio.d \\\n \tcore/sys/posix/netinet/in_.d core/sys/posix/netinet/tcp.d \\\n \tcore/sys/posix/poll.d core/sys/posix/pthread.d core/sys/posix/pwd.d \\\n \tcore/sys/posix/sched.d core/sys/posix/semaphore.d \\\n-\tcore/sys/posix/setjmp.d core/sys/posix/signal.d core/sys/posix/stdio.d \\\n-\tcore/sys/posix/stdlib.d core/sys/posix/sys/filio.d \\\n-\tcore/sys/posix/sys/ioccom.d core/sys/posix/sys/ioctl.d \\\n-\tcore/sys/posix/sys/ipc.d core/sys/posix/sys/mman.d \\\n-\tcore/sys/posix/sys/msg.d core/sys/posix/sys/resource.d \\\n-\tcore/sys/posix/sys/select.d core/sys/posix/sys/shm.d \\\n-\tcore/sys/posix/sys/socket.d core/sys/posix/sys/stat.d \\\n-\tcore/sys/posix/sys/statvfs.d core/sys/posix/sys/time.d \\\n-\tcore/sys/posix/sys/ttycom.d core/sys/posix/sys/types.d \\\n-\tcore/sys/posix/sys/uio.d core/sys/posix/sys/un.d \\\n-\tcore/sys/posix/sys/utsname.d core/sys/posix/sys/wait.d \\\n-\tcore/sys/posix/syslog.d core/sys/posix/termios.d core/sys/posix/time.d \\\n+\tcore/sys/posix/setjmp.d core/sys/posix/signal.d core/sys/posix/spawn.d \\\n+\tcore/sys/posix/stdio.d core/sys/posix/stdlib.d \\\n+\tcore/sys/posix/sys/filio.d core/sys/posix/sys/ioccom.d \\\n+\tcore/sys/posix/sys/ioctl.d core/sys/posix/sys/ipc.d \\\n+\tcore/sys/posix/sys/mman.d core/sys/posix/sys/msg.d \\\n+\tcore/sys/posix/sys/resource.d core/sys/posix/sys/select.d \\\n+\tcore/sys/posix/sys/shm.d core/sys/posix/sys/socket.d \\\n+\tcore/sys/posix/sys/stat.d core/sys/posix/sys/statvfs.d \\\n+\tcore/sys/posix/sys/time.d core/sys/posix/sys/ttycom.d \\\n+\tcore/sys/posix/sys/types.d core/sys/posix/sys/uio.d \\\n+\tcore/sys/posix/sys/un.d core/sys/posix/sys/utsname.d \\\n+\tcore/sys/posix/sys/wait.d core/sys/posix/syslog.d \\\n+\tcore/sys/posix/termios.d core/sys/posix/time.d \\\n \tcore/sys/posix/ucontext.d core/sys/posix/unistd.d \\\n \tcore/sys/posix/utime.d\n \n@@ -1859,6 +1863,7 @@ core/sys/posix/sched.lo: core/sys/posix/$(am__dirstamp)\n core/sys/posix/semaphore.lo: core/sys/posix/$(am__dirstamp)\n core/sys/posix/setjmp.lo: core/sys/posix/$(am__dirstamp)\n core/sys/posix/signal.lo: core/sys/posix/$(am__dirstamp)\n+core/sys/posix/spawn.lo: core/sys/posix/$(am__dirstamp)\n core/sys/posix/stdio.lo: core/sys/posix/$(am__dirstamp)\n core/sys/posix/stdlib.lo: core/sys/posix/$(am__dirstamp)\n core/sys/posix/sys/$(am__dirstamp):\n@@ -1892,6 +1897,7 @@ core/sys/posix/utime.lo: core/sys/posix/$(am__dirstamp)\n core/sys/darwin/$(am__dirstamp):\n \t@$(MKDIR_P) core/sys/darwin\n \t@: > core/sys/darwin/$(am__dirstamp)\n+core/sys/darwin/crt_externs.lo: core/sys/darwin/$(am__dirstamp)\n core/sys/darwin/dlfcn.lo: core/sys/darwin/$(am__dirstamp)\n core/sys/darwin/execinfo.lo: core/sys/darwin/$(am__dirstamp)\n core/sys/darwin/mach/$(am__dirstamp):\n@@ -1989,6 +1995,7 @@ core/sys/freebsd/sys/link_elf.lo:  \\\n core/sys/freebsd/sys/mman.lo: core/sys/freebsd/sys/$(am__dirstamp)\n core/sys/freebsd/sys/mount.lo: core/sys/freebsd/sys/$(am__dirstamp)\n core/sys/freebsd/time.lo: core/sys/freebsd/$(am__dirstamp)\n+core/sys/freebsd/unistd.lo: core/sys/freebsd/$(am__dirstamp)\n core/sys/netbsd/$(am__dirstamp):\n \t@$(MKDIR_P) core/sys/netbsd\n \t@: > core/sys/netbsd/$(am__dirstamp)"}, {"sha": "06c2b5d94b67dc22bc069093d14ab2736eab9016", "filename": "libphobos/libdruntime/core/stdc/errno.d", "status": "modified", "additions": 26, "deletions": 2, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0da83a168fdca32fec2d6bf8280670d05514c4c4/libphobos%2Flibdruntime%2Fcore%2Fstdc%2Ferrno.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0da83a168fdca32fec2d6bf8280670d05514c4c4/libphobos%2Flibdruntime%2Fcore%2Fstdc%2Ferrno.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2Fcore%2Fstdc%2Ferrno.d?ref=0da83a168fdca32fec2d6bf8280670d05514c4c4", "patch": "@@ -75,6 +75,24 @@ else version (CRuntime_Musl)\n         alias errno = __errno_location;\n     }\n }\n+else version (OpenBSD)\n+{\n+    // https://github.com/openbsd/src/blob/master/include/errno.h\n+    extern (C)\n+    {\n+        ref int __errno();\n+        alias errno = __errno;\n+    }\n+}\n+else version (NetBSD)\n+{\n+    // https://github.com/NetBSD/src/blob/trunk/include/errno.h\n+    extern (C)\n+    {\n+        ref int __errno();\n+        alias errno = __errno;\n+    }\n+}\n else version (FreeBSD)\n {\n     extern (C)\n@@ -85,8 +103,14 @@ else version (FreeBSD)\n }\n else version (DragonFlyBSD)\n {\n-    pragma(mangle, \"errno\") extern int __errno;\n-    ref int errno() { return __errno;}\n+    extern (C)\n+    {\n+        pragma(mangle, \"errno\") int __errno;\n+        ref int __error() {\n+            return __errno;\n+        }\n+        alias errno = __error;\n+    }\n }\n else version (CRuntime_Bionic)\n {"}, {"sha": "a1a52141e24631eba0729735a5dbd9c7fc11851b", "filename": "libphobos/libdruntime/core/stdc/fenv.d", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0da83a168fdca32fec2d6bf8280670d05514c4c4/libphobos%2Flibdruntime%2Fcore%2Fstdc%2Ffenv.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0da83a168fdca32fec2d6bf8280670d05514c4c4/libphobos%2Flibdruntime%2Fcore%2Fstdc%2Ffenv.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2Fcore%2Fstdc%2Ffenv.d?ref=0da83a168fdca32fec2d6bf8280670d05514c4c4", "patch": "@@ -330,6 +330,24 @@ else version (CRuntime_Bionic)\n \n         alias uint fexcept_t;\n     }\n+    else version (X86_64)\n+    {\n+        struct fenv_t\n+        {\n+            struct _x87\n+            {\n+                uint    __control;\n+                uint    __status;\n+                uint    __tag;\n+                uint[4] __others;\n+            }\n+            _x87 __x87;\n+\n+            uint __mxcsr;\n+        }\n+\n+        alias uint fexcept_t;\n+    }\n     else\n     {\n         static assert(false, \"Architecture not supported.\");"}, {"sha": "e708a51763c7cad77948c3fcbce1f31f7d5ceed4", "filename": "libphobos/libdruntime/core/stdc/stdio.d", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0da83a168fdca32fec2d6bf8280670d05514c4c4/libphobos%2Flibdruntime%2Fcore%2Fstdc%2Fstdio.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0da83a168fdca32fec2d6bf8280670d05514c4c4/libphobos%2Flibdruntime%2Fcore%2Fstdc%2Fstdio.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2Fcore%2Fstdc%2Fstdio.d?ref=0da83a168fdca32fec2d6bf8280670d05514c4c4", "patch": "@@ -429,7 +429,7 @@ else version (CRuntime_Glibc)\n         int     _old_offset;\n         ushort  _cur_column;\n         byte    _vtable_offset;\n-        char[1] _shortbuf;\n+        char[1] _shortbuf = 0;\n         void*   _lock;\n     }\n \n@@ -442,7 +442,7 @@ else version (CRuntime_Musl)\n {\n     union fpos_t\n     {\n-        char[16] __opaque;\n+        char[16] __opaque = 0;\n         double __align;\n     }\n     struct _IO_FILE;\n@@ -572,7 +572,7 @@ else version (NetBSD)\n \n         int     function(void *)    _flush;\n         /* Formerly used by fgetln/fgetwln; kept for binary compatibility */\n-        char[__sbuf.sizeof - _flush.sizeof]    _lb_unused;\n+        char[__sbuf.sizeof - _flush.sizeof]    _lb_unused = void;\n \n \n         int             _blksize;\n@@ -672,8 +672,8 @@ else version (Solaris)\n             char* _ptr;\n             int _cnt;\n             char* _base;\n-            char _flag;\n-            char _magic;\n+            char _flag = 0;\n+            char _magic = 0;\n             ushort __flags; // __orientation:2\n                             // __ionolock:1\n                             // __seekable:1\n@@ -756,7 +756,7 @@ else version (CRuntime_UClibc)\n     struct __STDIO_FILE_STRUCT\n     {\n         ushort __modeflags;\n-        char[2] __ungot_width;\n+        char[2] __ungot_width = 0;\n         int __filedes;\n         char* __bufstart;\n         char* __bufend;\n@@ -767,7 +767,7 @@ else version (CRuntime_UClibc)\n         __STDIO_FILE_STRUCT* __nextopen;\n         void *__cookie;\n         _IO_cookie_io_functions_t __gcs;\n-        wchar_t[2] __ungot;\n+        wchar_t[2] __ungot = 0;\n         mbstate_t __state;\n         void *__unused;\n         int __user_locking;"}, {"sha": "1cf8678f4cc3c0d1691b7b8c73f6fc15af69bc78", "filename": "libphobos/libdruntime/core/stdc/wchar_.d", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0da83a168fdca32fec2d6bf8280670d05514c4c4/libphobos%2Flibdruntime%2Fcore%2Fstdc%2Fwchar_.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0da83a168fdca32fec2d6bf8280670d05514c4c4/libphobos%2Flibdruntime%2Fcore%2Fstdc%2Fwchar_.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2Fcore%2Fstdc%2Fwchar_.d?ref=0da83a168fdca32fec2d6bf8280670d05514c4c4", "patch": "@@ -37,7 +37,7 @@ version (CRuntime_Glibc)\n         int __count;\n         union ___value\n         {\n-            wint_t __wch;\n+            wint_t __wch = 0;\n             char[4] __wchb;\n         }\n         ___value __value;\n@@ -72,7 +72,7 @@ else version (OpenBSD)\n     ///\n     union __mbstate_t\n     {\n-        char[128] __mbstate8;\n+        char[128] __mbstate8 = 0;\n         int64_t   __mbstateL;\n     }\n \n@@ -114,8 +114,8 @@ else version (CRuntime_UClibc)\n     ///\n     struct mbstate_t\n     {\n-        wchar_t __mask;\n-        wchar_t __wc;\n+        wchar_t __mask = 0;\n+        wchar_t __wc = 0;\n     }\n }\n else"}, {"sha": "798f8412a0218974bd536534f7dd9e1a6299b7db", "filename": "libphobos/libdruntime/core/sync/mutex.d", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0da83a168fdca32fec2d6bf8280670d05514c4c4/libphobos%2Flibdruntime%2Fcore%2Fsync%2Fmutex.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0da83a168fdca32fec2d6bf8280670d05514c4c4/libphobos%2Flibdruntime%2Fcore%2Fsync%2Fmutex.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2Fcore%2Fsync%2Fmutex.d?ref=0da83a168fdca32fec2d6bf8280670d05514c4c4", "patch": "@@ -374,9 +374,10 @@ unittest\n     // by checking that locking is not possible. This assumes\n     // that the underlying implementation is well behaved\n     // and makes the object non-lockable upon destruction.\n-    // For example, Bionic doesn't appear to do so, so this test is\n-    // not run on Android.\n+    // The Bionic and Musl C runtimes and DragonFly don't appear to do so, so skip this test.\n     version (CRuntime_Bionic) {} else\n+    version (CRuntime_Musl) {} else\n+    version (DragonFlyBSD) {} else\n     assert(!mtx.tryLock_nothrow());\n \n     free(cast(void*) mtx);"}, {"sha": "ec0788d7de499dae372df43f5e30b31ca84ad170", "filename": "libphobos/libdruntime/core/sys/darwin/crt_externs.d", "status": "added", "additions": 101, "deletions": 0, "changes": 101, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0da83a168fdca32fec2d6bf8280670d05514c4c4/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fdarwin%2Fcrt_externs.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0da83a168fdca32fec2d6bf8280670d05514c4c4/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fdarwin%2Fcrt_externs.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fdarwin%2Fcrt_externs.d?ref=0da83a168fdca32fec2d6bf8280670d05514c4c4", "patch": "@@ -0,0 +1,101 @@\n+/**\n+ * D header file for $(LINK2 https://opensource.apple.com/source/Libc/Libc-1244.30.3/include/crt_externs.h.auto.html, libc/crt_externs.h).\n+ *\n+ * Copyright: Copyright (c) 2018 D Language Foundation\n+ * License:   $(HTTP www.boost.org/LICENSE_1_0.txt, Boost License 1.0).\n+ * Authors:   Jacob Carlborg\n+ * Source:    $(DRUNTIMESRC core/sys/darwin/_crt_externs.d)\n+ */\n+module core.sys.darwin.crt_externs;\n+\n+version (CoreDoc)\n+{\n+    /**\n+     * In reality this will be $(REF mach_header, core, sys, darwin, mach, loader)\n+     * on 32-bit platforms and $(REF mach_header_64, core, sys, darwin, mach, loader)\n+     * 64-bit platforms.\n+     */\n+    struct MachHeader;\n+\n+    /**\n+     * Returns the program arguments.\n+     *\n+     * These are the same arguments passed to the C main function:\n+     *\n+     * ___\n+     * extern (C) void main (char** argv, int argc, char** envp) {}\n+     * ___\n+     *\n+     * Same as the above `argv`.\n+     *\n+     * Return: the program arguments as a pointer to an array of null terminated C\n+     *  strings\n+     */\n+    char*** _NSGetArgv();\n+\n+    /**\n+     * Returns the number of program arguments.\n+     *\n+     * These are the same arguments passed to the C main function:\n+     *\n+     * ___\n+     * extern (C) void main (char** argv, int argc, char** envp) {}\n+     * ___\n+     *\n+     * Same as the above `argc`.\n+     *\n+     * Return: a pointer to the number of program arguments\n+     */\n+    int* _NSGetArgc();\n+\n+    /**\n+     * Returns the program environment variables.\n+     *\n+     * These are the same arguments passed as an array to the C main function:\n+     *\n+     * ___\n+     * extern (C) void main (char** argv, int argc, char** envp) {}\n+     * ___\n+     *\n+     * Same as the above `envp`.\n+     *\n+     * Return: the program environment variables as a pointer to an array of null\n+     *  terminated C strings\n+     */\n+    char*** _NSGetEnviron();\n+\n+    /**\n+     * Returns the full path to the current executable as a pointer to a null\n+     * terminated C string.\n+     */\n+    char** _NSGetProgname();\n+\n+    /// Returns the Mach-O header of the current executable.\n+    MachHeader* _NSGetMachExecuteHeader();\n+}\n+\n+else version (OSX)\n+    version = Darwin;\n+else version (iOS)\n+    version = Darwin;\n+else version (TVOS)\n+    version = Darwin;\n+else version (WatchOS)\n+    version = Darwin;\n+\n+version (Darwin):\n+extern(C):\n+nothrow:\n+@nogc:\n+\n+import core.sys.darwin.mach.loader : mach_header, mach_header_64;\n+\n+char*** _NSGetArgv();\n+int* _NSGetArgc();\n+char*** _NSGetEnviron();\n+char** _NSGetProgname();\n+\n+version (D_LP64)\n+    mach_header_64* _NSGetMachExecuteHeader();\n+else\n+    mach_header* _NSGetMachExecuteHeader();"}, {"sha": "cf89747d0f2a2efa852a11a52b23ca67e514d3f5", "filename": "libphobos/libdruntime/core/sys/darwin/mach/getsect.d", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0da83a168fdca32fec2d6bf8280670d05514c4c4/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fdarwin%2Fmach%2Fgetsect.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0da83a168fdca32fec2d6bf8280670d05514c4c4/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fdarwin%2Fmach%2Fgetsect.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fdarwin%2Fmach%2Fgetsect.d?ref=0da83a168fdca32fec2d6bf8280670d05514c4c4", "patch": "@@ -320,7 +320,7 @@ version (CoreDdoc)\n      * Params:\n      *  mhp = the mach header to get the section from\n      *  segname = the name of the segment\n-     *  sectname = the name of the section\n+     *  section = the name of the section\n      *  fSwap = ?\n      *\n      * Returns: a pointer to the section structure or `null` if it doesn't exist"}, {"sha": "0330e55477f1cb505b64cb50f8fdf42f6c5be210", "filename": "libphobos/libdruntime/core/sys/darwin/mach/loader.d", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0da83a168fdca32fec2d6bf8280670d05514c4c4/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fdarwin%2Fmach%2Floader.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0da83a168fdca32fec2d6bf8280670d05514c4c4/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fdarwin%2Fmach%2Floader.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fdarwin%2Fmach%2Floader.d?ref=0da83a168fdca32fec2d6bf8280670d05514c4c4", "patch": "@@ -144,7 +144,7 @@ version (CoreDdoc)\n         uint cmdsize;\n \n         /// The name of this segment.\n-        char[16] segname;\n+        char[16] segname = 0;\n \n         /// Memory address of this segment.\n         uint vmaddr;\n@@ -181,7 +181,7 @@ version (CoreDdoc)\n         uint cmdsize;\n \n         /// The name of this segment.\n-        char[16] segname;\n+        char[16] segname = 0;\n \n         /// Memory address of this segment.\n         long vmaddr;\n@@ -212,10 +212,10 @@ version (CoreDdoc)\n     struct section\n     {\n         /// The name of this this section.\n-        char[16] sectname;\n+        char[16] sectname = 0;\n \n         /// The name of the segment this section belongs to.\n-        char[16] segname;\n+        char[16] segname = 0;\n \n         /// The memory address of this section.\n         uint addr;\n@@ -249,10 +249,10 @@ version (CoreDdoc)\n     struct section_64\n     {\n         /// The name of this this section.\n-        char[16] sectname;\n+        char[16] sectname = 0;\n \n         /// The name of the segment this section belongs to.\n-        char[16] segname;\n+        char[16] segname = 0;\n \n         /// The memory address of this section.\n         ulong addr;\n@@ -351,7 +351,7 @@ struct segment_command\n {\n     uint cmd;\n     uint cmdsize;\n-    char[16] segname;\n+    char[16] segname = 0;\n     uint vmaddr;\n     uint vmsize;\n     uint fileoff;\n@@ -366,7 +366,7 @@ struct segment_command_64\n {\n     uint cmd;\n     uint cmdsize;\n-    char[16] segname;\n+    char[16] segname = 0;\n     long vmaddr;\n     long vmsize;\n     long fileoff;\n@@ -379,8 +379,8 @@ struct segment_command_64\n \n struct section\n {\n-    char[16] sectname;\n-    char[16] segname;\n+    char[16] sectname = 0;\n+    char[16] segname = 0;\n     uint     addr;\n     uint     size;\n     uint     offset;\n@@ -394,8 +394,8 @@ struct section\n \n struct section_64\n {\n-    char[16] sectname;\n-    char[16] segname;\n+    char[16] sectname = 0;\n+    char[16] segname = 0;\n     ulong    addr;\n     ulong    size;\n     uint     offset;"}, {"sha": "0653d3a4b59eed64cd8660c51bccf11795e760a4", "filename": "libphobos/libdruntime/core/sys/darwin/netinet/in_.d", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0da83a168fdca32fec2d6bf8280670d05514c4c4/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fdarwin%2Fnetinet%2Fin_.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0da83a168fdca32fec2d6bf8280670d05514c4c4/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fdarwin%2Fnetinet%2Fin_.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fdarwin%2Fnetinet%2Fin_.d?ref=0da83a168fdca32fec2d6bf8280670d05514c4c4", "patch": "@@ -224,7 +224,7 @@ static if (_DARWIN_C_SOURCE)\n     struct ip_opts\n     {\n         in_addr  ip_dst;\n-        char[40] ip_opts;\n+        char[40] ip_opts = 0;\n     };\n \n     enum IP_OPTIONS         = 1;"}, {"sha": "2c35d0b59a3f6e0582a08c6dd7d93d9551397d18", "filename": "libphobos/libdruntime/core/sys/dragonflybsd/sys/elf32.d", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0da83a168fdca32fec2d6bf8280670d05514c4c4/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fdragonflybsd%2Fsys%2Felf32.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0da83a168fdca32fec2d6bf8280670d05514c4c4/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fdragonflybsd%2Fsys%2Felf32.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fdragonflybsd%2Fsys%2Felf32.d?ref=0da83a168fdca32fec2d6bf8280670d05514c4c4", "patch": "@@ -25,7 +25,7 @@ alias Elf32_Sword Elf32_Ssize;\n \n struct Elf32_Ehdr\n {\n-    char[EI_NIDENT] e_ident;\n+    char[EI_NIDENT] e_ident = 0;\n     Elf32_Half    e_type;\n     Elf32_Half    e_machine;\n     Elf32_Word    e_version;"}, {"sha": "94b7e42b5cd8f200b9cc996cceea2c8c1f6c2807", "filename": "libphobos/libdruntime/core/sys/dragonflybsd/sys/elf64.d", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0da83a168fdca32fec2d6bf8280670d05514c4c4/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fdragonflybsd%2Fsys%2Felf64.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0da83a168fdca32fec2d6bf8280670d05514c4c4/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fdragonflybsd%2Fsys%2Felf64.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fdragonflybsd%2Fsys%2Felf64.d?ref=0da83a168fdca32fec2d6bf8280670d05514c4c4", "patch": "@@ -27,7 +27,7 @@ alias Elf64_Sxword Elf64_Ssize;\n \n struct Elf64_Ehdr\n {\n-    char[EI_NIDENT] e_ident;\n+    char[EI_NIDENT] e_ident = 0;\n     Elf64_Half    e_type;\n     Elf64_Half    e_machine;\n     Elf64_Word    e_version;"}, {"sha": "02b6fda910e6dbd23400196b527d643ba9de20de", "filename": "libphobos/libdruntime/core/sys/freebsd/pthread_np.d", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0da83a168fdca32fec2d6bf8280670d05514c4c4/libphobos%2Flibdruntime%2Fcore%2Fsys%2Ffreebsd%2Fpthread_np.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0da83a168fdca32fec2d6bf8280670d05514c4c4/libphobos%2Flibdruntime%2Fcore%2Fsys%2Ffreebsd%2Fpthread_np.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2Fcore%2Fsys%2Ffreebsd%2Fpthread_np.d?ref=0da83a168fdca32fec2d6bf8280670d05514c4c4", "patch": "@@ -3,7 +3,7 @@\n  *\n  * Authors:   Martin Nowak\n  */\n-module core.sys.freebsd.pthread;\n+module core.sys.freebsd.pthread_np;\n \n version (FreeBSD):\n extern (C) nothrow @nogc:"}, {"sha": "61455223b71a3a71b617d076da0338821b589460", "filename": "libphobos/libdruntime/core/sys/freebsd/sys/elf32.d", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0da83a168fdca32fec2d6bf8280670d05514c4c4/libphobos%2Flibdruntime%2Fcore%2Fsys%2Ffreebsd%2Fsys%2Felf32.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0da83a168fdca32fec2d6bf8280670d05514c4c4/libphobos%2Flibdruntime%2Fcore%2Fsys%2Ffreebsd%2Fsys%2Felf32.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2Fcore%2Fsys%2Ffreebsd%2Fsys%2Felf32.d?ref=0da83a168fdca32fec2d6bf8280670d05514c4c4", "patch": "@@ -25,7 +25,7 @@ alias Elf32_Sword Elf32_Ssize;\n \n struct Elf32_Ehdr\n {\n-    char[EI_NIDENT] e_ident;\n+    char[EI_NIDENT] e_ident = 0;\n     Elf32_Half    e_type;\n     Elf32_Half    e_machine;\n     Elf32_Word    e_version;"}, {"sha": "29c6e3c01b7e648e16d1d180ceb15bce85000307", "filename": "libphobos/libdruntime/core/sys/freebsd/sys/elf64.d", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0da83a168fdca32fec2d6bf8280670d05514c4c4/libphobos%2Flibdruntime%2Fcore%2Fsys%2Ffreebsd%2Fsys%2Felf64.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0da83a168fdca32fec2d6bf8280670d05514c4c4/libphobos%2Flibdruntime%2Fcore%2Fsys%2Ffreebsd%2Fsys%2Felf64.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2Fcore%2Fsys%2Ffreebsd%2Fsys%2Felf64.d?ref=0da83a168fdca32fec2d6bf8280670d05514c4c4", "patch": "@@ -27,7 +27,7 @@ alias Elf64_Sxword Elf64_Ssize;\n \n struct Elf64_Ehdr\n {\n-    char[EI_NIDENT] e_ident;\n+    char[EI_NIDENT] e_ident = 0;\n     Elf64_Half    e_type;\n     Elf64_Half    e_machine;\n     Elf64_Word    e_version;"}, {"sha": "66c69a4fd81e5e7aa43fcfd5e5cc64c1e2214741", "filename": "libphobos/libdruntime/core/sys/freebsd/sys/mount.d", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0da83a168fdca32fec2d6bf8280670d05514c4c4/libphobos%2Flibdruntime%2Fcore%2Fsys%2Ffreebsd%2Fsys%2Fmount.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0da83a168fdca32fec2d6bf8280670d05514c4c4/libphobos%2Flibdruntime%2Fcore%2Fsys%2Ffreebsd%2Fsys%2Fmount.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2Fcore%2Fsys%2Ffreebsd%2Fsys%2Fmount.d?ref=0da83a168fdca32fec2d6bf8280670d05514c4c4", "patch": "@@ -28,7 +28,7 @@ struct fid\n {\n     ushort         fid_len;\n     ushort         fid_data0;\n-    char[MAXFIDSZ] fid_data;\n+    char[MAXFIDSZ] fid_data = 0;\n }\n \n enum MFSNAMELEN = 16;\n@@ -55,10 +55,10 @@ struct statfs_t\n     uint f_namemax;\n     uid_t f_owner;\n     fsid_t f_fsid;\n-    char[80] f_charspare;\n-    char[MFSNAMELEN] f_fstypename;\n-    char[MNAMELEN] f_mntfromname;\n-    char[MNAMELEN] f_mntonname;\n+    char[80] f_charspare = 0;\n+    char[MFSNAMELEN] f_fstypename = 0;\n+    char[MNAMELEN] f_mntfromname = 0;\n+    char[MNAMELEN] f_mntonname = 0;\n }\n \n \n@@ -207,7 +207,7 @@ struct nfs_public\n struct vfsconf\n {\n     uint vfc_version;\n-    char[MFSNAMELEN] vfc_name;\n+    char[MFSNAMELEN] vfc_name = 0;\n     vfsops* vfc_vfsops;\n     int vfc_typenum;\n     int vfc_refcount;\n@@ -219,7 +219,7 @@ struct vfsconf\n struct xvfsconf\n {\n     vfsops* vfc_vfsops;\n-    char[MFSNAMELEN] vfc_name;\n+    char[MFSNAMELEN] vfc_name = 0;\n     int vfc_typenum;\n     int vfc_refcount;\n     int vfc_flags;\n@@ -230,7 +230,7 @@ struct xvfsconf\n struct ovfsconf\n {\n     void* vfc_vfsops;\n-    char[32] vfc_name;\n+    char[32] vfc_name = 0;\n     int vfc_index;\n     int vfc_refcount;\n     int vfc_flags;\n@@ -252,7 +252,7 @@ struct vfsidctl\n {\n     int vc_vers;\n     fsid_t vc_fsid;\n-    char[MFSNAMELEN] vc_fstypename;\n+    char[MFSNAMELEN] vc_fstypename = 0;\n     fsctlop_t vc_op;\n     void* vc_ptr;\n     size_t vc_len;"}, {"sha": "493cda1c8c9f2834fe3e4052349ae3c3047e3dc5", "filename": "libphobos/libdruntime/core/sys/freebsd/unistd.d", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0da83a168fdca32fec2d6bf8280670d05514c4c4/libphobos%2Flibdruntime%2Fcore%2Fsys%2Ffreebsd%2Funistd.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0da83a168fdca32fec2d6bf8280670d05514c4c4/libphobos%2Flibdruntime%2Fcore%2Fsys%2Ffreebsd%2Funistd.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2Fcore%2Fsys%2Ffreebsd%2Funistd.d?ref=0da83a168fdca32fec2d6bf8280670d05514c4c4", "patch": "@@ -0,0 +1,19 @@\n+//Written in the D programming language\n+\n+/++\n+    D header file for FreeBSD's extensions to POSIX's unistd.h.\n+\n+    Copyright: Copyright 2018\n+    License:   $(HTTP www.boost.org/LICENSE_1_0.txt, Boost License 1.0).\n+    Authors:   $(HTTP jmdavisprog.com, Jonathan M Davis)\n+ +/\n+module core.sys.freebsd.unistd;\n+\n+public import core.sys.posix.unistd;\n+\n+version (FreeBSD):\n+extern(C):\n+@nogc:\n+nothrow:\n+\n+int getosreldate() pure @trusted;"}, {"sha": "ab07ac941085710215a11b6caf7653bf470b71d8", "filename": "libphobos/libdruntime/core/sys/linux/elf.d", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0da83a168fdca32fec2d6bf8280670d05514c4c4/libphobos%2Flibdruntime%2Fcore%2Fsys%2Flinux%2Felf.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0da83a168fdca32fec2d6bf8280670d05514c4c4/libphobos%2Flibdruntime%2Fcore%2Fsys%2Flinux%2Felf.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2Fcore%2Fsys%2Flinux%2Felf.d?ref=0da83a168fdca32fec2d6bf8280670d05514c4c4", "patch": "@@ -42,7 +42,7 @@ enum EI_NIDENT = 16;\n \n struct Elf32_Ehdr\n {\n-    char[EI_NIDENT] e_ident;\n+    char[EI_NIDENT] e_ident = 0;\n     Elf32_Half    e_type;\n     Elf32_Half    e_machine;\n     Elf32_Word    e_version;\n@@ -60,7 +60,7 @@ struct Elf32_Ehdr\n \n struct Elf64_Ehdr\n {\n-    char[EI_NIDENT] e_ident;\n+    char[EI_NIDENT] e_ident = 0;\n     Elf64_Half    e_type;\n     Elf64_Half    e_machine;\n     Elf64_Word    e_version;"}, {"sha": "4798967c79d4aa94d25f9ef84790c630b6e20ab2", "filename": "libphobos/libdruntime/core/sys/linux/epoll.d", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0da83a168fdca32fec2d6bf8280670d05514c4c4/libphobos%2Flibdruntime%2Fcore%2Fsys%2Flinux%2Fepoll.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0da83a168fdca32fec2d6bf8280670d05514c4c4/libphobos%2Flibdruntime%2Fcore%2Fsys%2Flinux%2Fepoll.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2Fcore%2Fsys%2Flinux%2Fepoll.d?ref=0da83a168fdca32fec2d6bf8280670d05514c4c4", "patch": "@@ -50,6 +50,7 @@ enum\n     EPOLLERR    = 0x008,\n     EPOLLHUP    = 0x010,\n     EPOLLRDHUP  = 0x2000, // since Linux 2.6.17\n+    EPOLLEXCLUSIVE = 1u << 28, // since Linux 4.5\n     EPOLLONESHOT = 1u << 30,\n     EPOLLET     = 1u << 31\n }"}, {"sha": "47102e11eb878c8bcf29ac9294ab09f39092914c", "filename": "libphobos/libdruntime/core/sys/linux/netinet/in_.d", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0da83a168fdca32fec2d6bf8280670d05514c4c4/libphobos%2Flibdruntime%2Fcore%2Fsys%2Flinux%2Fnetinet%2Fin_.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0da83a168fdca32fec2d6bf8280670d05514c4c4/libphobos%2Flibdruntime%2Fcore%2Fsys%2Flinux%2Fnetinet%2Fin_.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2Fcore%2Fsys%2Flinux%2Fnetinet%2Fin_.d?ref=0da83a168fdca32fec2d6bf8280670d05514c4c4", "patch": "@@ -312,7 +312,7 @@ version (linux_libc)\n         struct ip_opts\n         {\n             in_addr ip_dst;\n-            char[40] ip_opts;\n+            char[40] ip_opts = 0;\n         };\n \n         struct ip_mreqn"}, {"sha": "b53fa0454000daa4d201680180246e72f786a76e", "filename": "libphobos/libdruntime/core/sys/linux/sched.d", "status": "modified", "additions": 26, "deletions": 1, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0da83a168fdca32fec2d6bf8280670d05514c4c4/libphobos%2Flibdruntime%2Fcore%2Fsys%2Flinux%2Fsched.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0da83a168fdca32fec2d6bf8280670d05514c4c4/libphobos%2Flibdruntime%2Fcore%2Fsys%2Flinux%2Fsched.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2Fcore%2Fsys%2Flinux%2Fsched.d?ref=0da83a168fdca32fec2d6bf8280670d05514c4c4", "patch": "@@ -14,6 +14,7 @@\n \n module core.sys.linux.sched;\n \n+import core.bitop : popcnt;\n import core.sys.posix.sched;\n import core.sys.posix.config;\n import core.sys.posix.sys.types;\n@@ -56,6 +57,21 @@ private // helpers\n \n         return 0;\n     }\n+\n+    bool __CPU_ISSET_S(size_t cpu, size_t setsize, cpu_set_t* cpusetp) pure\n+    {\n+        if (cpu < 8 * setsize)\n+            return (cpusetp.__bits[__CPUELT(cpu)] & __CPUMASK(cpu)) != 0;\n+        return false;\n+    }\n+\n+    int __CPU_COUNT_S(size_t setsize, cpu_set_t* cpusetp) pure\n+    {\n+        int s = 0;\n+        foreach (i; cpusetp.__bits[0 .. (setsize / cpu_mask.sizeof)])\n+            s += popcnt(i);\n+        return s;\n+    }\n }\n \n /// Type for array elements in 'cpu_set_t'.\n@@ -74,7 +90,16 @@ cpu_mask CPU_SET(size_t cpu, cpu_set_t* cpusetp) pure\n      return __CPU_SET_S(cpu, cpu_set_t.sizeof, cpusetp);\n }\n \n+bool CPU_ISSET(size_t cpu, cpu_set_t* cpusetp) pure\n+{\n+    return __CPU_ISSET_S(cpu, cpu_set_t.sizeof, cpusetp);\n+}\n+\n+int CPU_COUNT(cpu_set_t* cpusetp) pure\n+{\n+    return __CPU_COUNT_S(cpu_set_t.sizeof, cpusetp);\n+}\n+\n /* Functions */\n int sched_setaffinity(pid_t pid, size_t cpusetsize, cpu_set_t *mask);\n int sched_getaffinity(pid_t pid, size_t cpusetsize, cpu_set_t *mask);\n-"}, {"sha": "0954b3f02579e1c86a41cadccbd2a537e9ecbbfa", "filename": "libphobos/libdruntime/core/sys/linux/sys/eventfd.d", "status": "modified", "additions": 22, "deletions": 1, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0da83a168fdca32fec2d6bf8280670d05514c4c4/libphobos%2Flibdruntime%2Fcore%2Fsys%2Flinux%2Fsys%2Feventfd.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0da83a168fdca32fec2d6bf8280670d05514c4c4/libphobos%2Flibdruntime%2Fcore%2Fsys%2Flinux%2Fsys%2Feventfd.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2Fcore%2Fsys%2Flinux%2Fsys%2Feventfd.d?ref=0da83a168fdca32fec2d6bf8280670d05514c4c4", "patch": "@@ -43,7 +43,28 @@ int eventfd_read (int fd, eventfd_t* value);\n /* Increment event counter.  */\n int eventfd_write (int fd, eventfd_t value);\n \n-version (X86_Any)\n+version (CRuntime_UClibc)\n+{\n+    version (MIPS_Any)\n+    {\n+        enum EFD_SEMAPHORE = 1;\n+        enum EFD_CLOEXEC = 0x80000; // octal!02000000\n+        enum EFD_NONBLOCK = 0x80; // octal!00000200\n+    }\n+    else version (SPARC_Any)\n+    {\n+        enum EFD_SEMAPHORE = 1;\n+        enum EFD_CLOEXEC = 0x400000;\n+        enum EFD_NONBLOCK = 0x004000;\n+    }\n+    else\n+    {\n+        enum EFD_SEMAPHORE = 1;\n+        enum EFD_CLOEXEC = 0x80000; // octal!02000000\n+        enum EFD_NONBLOCK = 0x800; // octal!00004000\n+    }\n+}\n+else version (X86_Any)\n {\n     enum EFD_SEMAPHORE = 1;\n     enum EFD_CLOEXEC = 0x80000; // octal!2000000"}, {"sha": "b22b97f9f3c996ca4fc8a88517f5557d33537cde", "filename": "libphobos/libdruntime/core/sys/netbsd/sys/elf32.d", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0da83a168fdca32fec2d6bf8280670d05514c4c4/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fnetbsd%2Fsys%2Felf32.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0da83a168fdca32fec2d6bf8280670d05514c4c4/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fnetbsd%2Fsys%2Felf32.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fnetbsd%2Fsys%2Felf32.d?ref=0da83a168fdca32fec2d6bf8280670d05514c4c4", "patch": "@@ -25,7 +25,7 @@ alias Elf32_Sword Elf32_Ssize;\n \n struct Elf32_Ehdr\n {\n-    char[EI_NIDENT] e_ident;\n+    char[EI_NIDENT] e_ident = 0;\n     Elf32_Half    e_type;\n     Elf32_Half    e_machine;\n     Elf32_Word    e_version;"}, {"sha": "f78d066ef6928e3b06d3cde5f844ab62224bdcad", "filename": "libphobos/libdruntime/core/sys/netbsd/sys/elf64.d", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0da83a168fdca32fec2d6bf8280670d05514c4c4/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fnetbsd%2Fsys%2Felf64.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0da83a168fdca32fec2d6bf8280670d05514c4c4/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fnetbsd%2Fsys%2Felf64.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fnetbsd%2Fsys%2Felf64.d?ref=0da83a168fdca32fec2d6bf8280670d05514c4c4", "patch": "@@ -27,7 +27,7 @@ alias Elf64_Sxword Elf64_Ssize;\n \n struct Elf64_Ehdr\n {\n-    char[EI_NIDENT] e_ident;\n+    char[EI_NIDENT] e_ident = 0;\n     Elf64_Half    e_type;\n     Elf64_Half    e_machine;\n     Elf64_Word    e_version;"}, {"sha": "47458160f2efcc472971c0dfb72481cd3058c30d", "filename": "libphobos/libdruntime/core/sys/posix/aio.d", "status": "modified", "additions": 47, "deletions": 0, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0da83a168fdca32fec2d6bf8280670d05514c4c4/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fposix%2Faio.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0da83a168fdca32fec2d6bf8280670d05514c4c4/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fposix%2Faio.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fposix%2Faio.d?ref=0da83a168fdca32fec2d6bf8280670d05514c4c4", "patch": "@@ -72,6 +72,27 @@ version (CRuntime_Glibc)\n         }\n     }\n }\n+else version (CRuntime_Musl)\n+{\n+    // https://git.musl-libc.org/cgit/musl/tree/include/aio.h\n+    struct aiocb\n+    {\n+        int aio_fildes;\n+        int aio_lio_opcode;\n+        int aio_reqprio;\n+        void* aio_buf;   //volatile\n+        size_t aio_nbytes;\n+        sigevent aio_sigevent;\n+        void* __td;\n+        int[2] __lock;\n+        int __err;   //volatile\n+        ssize_t __ret;\n+        off_t aio_offset;\n+        void* __next;\n+        void* __prev;\n+        ubyte[32-2*(void*).sizeof] __dummy4;\n+    }\n+}\n else version (Darwin)\n {\n     struct aiocb\n@@ -180,6 +201,15 @@ version (CRuntime_Glibc)\n         AIO_ALLDONE\n     }\n }\n+else version (CRuntime_Musl)\n+{\n+    enum\n+    {\n+        AIO_CANCELED,\n+        AIO_NOTCANCELED,\n+        AIO_ALLDONE\n+    }\n+}\n else version (Darwin)\n {\n     enum\n@@ -218,6 +248,15 @@ version (CRuntime_Glibc)\n         LIO_NOP\n     }\n }\n+else version (CRuntime_Musl)\n+{\n+    enum\n+    {\n+        LIO_READ,\n+        LIO_WRITE,\n+        LIO_NOP\n+    }\n+}\n else version (Darwin)\n {\n     enum\n@@ -255,6 +294,14 @@ version (CRuntime_Glibc)\n         LIO_NOWAIT\n     }\n }\n+else version (CRuntime_Musl)\n+{\n+    enum\n+    {\n+        LIO_WAIT,\n+        LIO_NOWAIT\n+    }\n+}\n else version (Darwin)\n {\n     enum"}, {"sha": "61de95802c1f5b262a7bc43dd294d15d66a3aac0", "filename": "libphobos/libdruntime/core/sys/posix/config.d", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0da83a168fdca32fec2d6bf8280670d05514c4c4/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fposix%2Fconfig.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0da83a168fdca32fec2d6bf8280670d05514c4c4/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fposix%2Fconfig.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fposix%2Fconfig.d?ref=0da83a168fdca32fec2d6bf8280670d05514c4c4", "patch": "@@ -107,6 +107,10 @@ else version (CRuntime_UClibc)\n     else\n         enum __WORDSIZE=32;\n }\n+else version (CRuntime_Bionic)\n+{\n+    enum __USE_GNU           = false;\n+}\n else version (Solaris)\n {\n     enum _FILE_OFFSET_BITS = 64;"}, {"sha": "95246fc44719794d73450f39929343c932da94b4", "filename": "libphobos/libdruntime/core/sys/posix/dirent.d", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0da83a168fdca32fec2d6bf8280670d05514c4c4/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fposix%2Fdirent.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0da83a168fdca32fec2d6bf8280670d05514c4c4/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fposix%2Fdirent.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fposix%2Fdirent.d?ref=0da83a168fdca32fec2d6bf8280670d05514c4c4", "patch": "@@ -72,7 +72,7 @@ version (CRuntime_Glibc)\n         off_t       d_off;\n         ushort      d_reclen;\n         ubyte       d_type;\n-        char[256]   d_name;\n+        char[256]   d_name = 0;\n     }\n \n     struct DIR\n@@ -116,7 +116,7 @@ else version (Darwin)\n         ushort      d_reclen;\n         ushort      d_namlen;\n         ubyte       d_type;\n-        char[1024]  d_name;\n+        char[1024]  d_name = 0;\n     }\n \n     struct DIR\n@@ -156,7 +156,7 @@ else version (FreeBSD)\n         ushort    d_reclen;\n         ubyte     d_type;\n         ubyte     d_namlen;\n-        char[256] d_name;\n+        char[256] d_name = 0;\n     }\n \n     alias void* DIR;\n@@ -184,7 +184,7 @@ else version (NetBSD)\n         ushort    d_reclen;\n         ushort    d_namlen;\n         ubyte     d_type;\n-        char[512] d_name;\n+        char[512] d_name = 0;\n     }\n \n     alias void* DIR;\n@@ -215,7 +215,7 @@ else version (OpenBSD)\n         ubyte     d_type;\n         ubyte     d_namlen;\n         ubyte[4]  __d_padding;\n-        char[256] d_name;\n+        char[256] d_name = 0;\n     }\n \n     alias void* DIR;\n@@ -245,7 +245,7 @@ else version (DragonFlyBSD)\n         ubyte     d_type;         /* file type, see blow */\n         ubyte     d_unused1;      /* padding, reserved */\n         uint      d_unused2;      /* reserved */\n-        char[256] d_name;         /* name, NUL-terminated */\n+        char[256] d_name = 0;     /* name, NUL-terminated */\n     }\n \n     alias void* DIR;\n@@ -259,7 +259,7 @@ else version (Solaris)\n         ino_t d_ino;\n         off_t d_off;\n         ushort d_reclen;\n-        char[1] d_name;\n+        char[1] d_name = 0;\n     }\n \n     struct DIR\n@@ -309,7 +309,7 @@ else version (CRuntime_Bionic)\n         long        d_off;\n         ushort      d_reclen;\n         ubyte       d_type;\n-        char[256]   d_name;\n+        char[256]   d_name = 0;\n     }\n \n     struct DIR\n@@ -339,7 +339,7 @@ else version (CRuntime_Musl)\n         off_t       d_off;\n         ushort      d_reclen;\n         ubyte       d_type;\n-        char[256]   d_name;\n+        char[256]   d_name = 0;\n     }\n \n     struct DIR\n@@ -387,7 +387,7 @@ else version (CRuntime_UClibc)\n         }\n         ushort      d_reclen;\n         ubyte       d_type;\n-        char[256]   d_name;\n+        char[256]   d_name = 0;\n     }\n \n     struct DIR"}, {"sha": "4b06600d9fa9046582feaf0aaf806b534cb5b993", "filename": "libphobos/libdruntime/core/sys/posix/fcntl.d", "status": "modified", "additions": 9, "deletions": 30, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0da83a168fdca32fec2d6bf8280670d05514c4c4/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fposix%2Ffcntl.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0da83a168fdca32fec2d6bf8280670d05514c4c4/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fposix%2Ffcntl.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fposix%2Ffcntl.d?ref=0da83a168fdca32fec2d6bf8280670d05514c4c4", "patch": "@@ -734,42 +734,21 @@ else version (CRuntime_Bionic)\n     enum F_WRLCK        = 1;\n     enum F_UNLCK        = 2;\n \n-    version (X86)\n-    {\n-        enum O_CREAT        = 0x40;     // octal     0100\n-        enum O_EXCL         = 0x80;     // octal     0200\n-        enum O_NOCTTY       = 0x100;    // octal     0400\n-        enum O_TRUNC        = 0x200;    // octal    01000\n+    enum O_CREAT        = 0x40;     // octal     0100\n+    enum O_EXCL         = 0x80;     // octal     0200\n+    enum O_NOCTTY       = 0x100;    // octal     0400\n+    enum O_TRUNC        = 0x200;    // octal    01000\n \n-        enum O_APPEND       = 0x400;    // octal    02000\n-        enum O_NONBLOCK     = 0x800;    // octal    04000\n-        enum O_SYNC         = 0x1000;   // octal   010000\n-    }\n-    else version (ARM)\n-    {\n-        enum O_CREAT        = 0x40;     // octal     0100\n-        enum O_EXCL         = 0x80;     // octal     0200\n-        enum O_NOCTTY       = 0x100;    // octal     0400\n-        enum O_TRUNC        = 0x200;    // octal    01000\n+    enum O_APPEND       = 0x400;    // octal    02000\n+    enum O_NONBLOCK     = 0x800;    // octal    04000\n \n-        enum O_APPEND       = 0x400;    // octal    02000\n-        enum O_NONBLOCK     = 0x800;    // octal    04000\n-        enum O_SYNC         = 0x1000;   // octal   010000\n-    }\n-    else version (AArch64)\n+    version (D_LP64)\n     {\n-        enum O_CREAT        = 0x40;     // octal     0100\n-        enum O_EXCL         = 0x80;     // octal     0200\n-        enum O_NOCTTY       = 0x100;    // octal     0400\n-        enum O_TRUNC        = 0x200;    // octal    01000\n-\n-        enum O_APPEND       = 0x400;    // octal    02000\n-        enum O_NONBLOCK     = 0x800;    // octal    04000\n-        enum O_SYNC         = 0x101000; // octal 04010000\n+        enum O_SYNC     = 0x101000; // octal 04010000\n     }\n     else\n     {\n-        static assert(false, \"Architecture not supported.\");\n+        enum O_SYNC     = 0x1000;   // octal   010000\n     }\n \n     enum O_ACCMODE      = 0x3;"}, {"sha": "8b636683e3d02136d8e1aaee201596edd3e48096", "filename": "libphobos/libdruntime/core/sys/posix/setjmp.d", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0da83a168fdca32fec2d6bf8280670d05514c4c4/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fposix%2Fsetjmp.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0da83a168fdca32fec2d6bf8280670d05514c4c4/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fposix%2Fsetjmp.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fposix%2Fsetjmp.d?ref=0da83a168fdca32fec2d6bf8280670d05514c4c4", "patch": "@@ -297,6 +297,10 @@ else version (CRuntime_Bionic)\n     {\n         enum _JBLEN = 32;\n     }\n+    else version (X86_64)\n+    {\n+        enum _JBLEN = 11;\n+    }\n     else\n     {\n         static assert(false, \"Architecture not supported.\");"}, {"sha": "e795a215b4ebc2af6a5e554b6834812eeffee73d", "filename": "libphobos/libdruntime/core/sys/posix/signal.d", "status": "modified", "additions": 35, "deletions": 112, "changes": 147, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0da83a168fdca32fec2d6bf8280670d05514c4c4/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fposix%2Fsignal.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0da83a168fdca32fec2d6bf8280670d05514c4c4/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fposix%2Fsignal.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fposix%2Fsignal.d?ref=0da83a168fdca32fec2d6bf8280670d05514c4c4", "patch": "@@ -743,22 +743,22 @@ else version (CRuntime_UClibc)\n }\n else version (CRuntime_Bionic)\n {\n-    version (X86)\n+    version (D_LP64)\n     {\n         struct sigaction_t\n         {\n+            int            sa_flags;\n             union\n             {\n                 sigfn_t    sa_handler;\n                 sigactfn_t sa_sigaction;\n             }\n \n             sigset_t        sa_mask;\n-            int             sa_flags;\n             void function() sa_restorer;\n         }\n     }\n-    else version (ARM)\n+    else\n     {\n         struct sigaction_t\n         {\n@@ -773,25 +773,6 @@ else version (CRuntime_Bionic)\n             void function() sa_restorer;\n         }\n     }\n-    else version (AArch64)\n-    {\n-        struct sigaction_t\n-        {\n-            int            sa_flags;\n-            union\n-            {\n-                sigfn_t    sa_handler;\n-                sigactfn_t sa_sigaction;\n-            }\n-\n-            sigset_t        sa_mask;\n-            void function() sa_restorer;\n-        }\n-    }\n-    else\n-    {\n-        static assert(false, \"Architecture not supported.\");\n-    }\n }\n else version (Darwin)\n {\n@@ -1437,8 +1418,8 @@ else version (Solaris)\n                 caddr_t __faddr;\n                 timestruc_t __tstamp;\n                 short __syscall;\n-                char __nsysarg;\n-                char __fault;\n+                char __nsysarg = 0;\n+                char __fault = 0;\n                 c_long[8] __sysarg;\n                 int[10] __mstate;\n             }\n@@ -1475,19 +1456,24 @@ else version (CRuntime_Bionic)\n \n     version (X86)\n     {\n-        alias c_ulong sigset_t;\n+        alias uint sigset_t;\n         enum int LONG_BIT = 32;\n     }\n     else version (ARM)\n     {\n-        alias c_ulong sigset_t;\n+        alias uint sigset_t;\n         enum int LONG_BIT = 32;\n     }\n     else version (AArch64)\n     {\n         struct sigset_t { ulong[1] sig; }\n         enum int LONG_BIT = 64;\n     }\n+    else version (X86_64)\n+    {\n+        alias ulong sigset_t;\n+        enum int LONG_BIT = 64;\n+    }\n     else\n     {\n         static assert(false, \"Architecture not supported.\");\n@@ -1614,7 +1600,7 @@ else version (CRuntime_Musl)\n     struct siginfo_t {\n         int si_signo, si_errno, si_code;\n         union __si_fields_t {\n-            char[128 - 2*int.sizeof - long.sizeof] __pad;\n+            char[128 - 2*int.sizeof - long.sizeof] __pad = 0;\n             struct __si_common_t {\n                 union __first_t {\n                     struct __piduid_t {\n@@ -2943,93 +2929,30 @@ else version (Solaris)\n }\n else version (CRuntime_Bionic)\n {\n-    version (X86)\n-    {\n-        enum SIGPOLL   = 29;\n-        enum SIGPROF   = 27;\n-        enum SIGSYS    = 31;\n-        enum SIGTRAP   = 5;\n-        enum SIGVTALRM = 26;\n-        enum SIGXCPU   = 24;\n-        enum SIGXFSZ   = 25;\n-\n-        enum SA_ONSTACK     = 0x08000000;\n-        enum SA_RESETHAND   = 0x80000000;\n-        enum SA_RESTART     = 0x10000000;\n-        enum SA_SIGINFO     = 4;\n-        enum SA_NOCLDWAIT   = 2;\n-        enum SA_NODEFER     = 0x40000000;\n-        enum SS_ONSTACK     = 1;\n-        enum SS_DISABLE     = 2;\n-        enum MINSIGSTKSZ    = 2048;\n-        enum SIGSTKSZ       = 8192;\n-\n-        struct stack_t\n-        {\n-            void*   ss_sp;\n-            int     ss_flags;\n-            size_t  ss_size;\n-        }\n-    }\n-    else version (ARM)\n-    {\n-        enum SIGPOLL   = 29;\n-        enum SIGPROF   = 27;\n-        enum SIGSYS    = 31;\n-        enum SIGTRAP   = 5;\n-        enum SIGVTALRM = 26;\n-        enum SIGXCPU   = 24;\n-        enum SIGXFSZ   = 25;\n-\n-        enum SA_ONSTACK     = 0x08000000;\n-        enum SA_RESETHAND   = 0x80000000;\n-        enum SA_RESTART     = 0x10000000;\n-        enum SA_SIGINFO     = 4;\n-        enum SA_NOCLDWAIT   = 2;\n-        enum SA_NODEFER     = 0x40000000;\n-        enum SS_ONSTACK     = 1;\n-        enum SS_DISABLE     = 2;\n-        enum MINSIGSTKSZ    = 2048;\n-        enum SIGSTKSZ       = 8192;\n+    enum SIGPOLL   = 29;\n+    enum SIGPROF   = 27;\n+    enum SIGSYS    = 31;\n+    enum SIGTRAP   = 5;\n+    enum SIGVTALRM = 26;\n+    enum SIGXCPU   = 24;\n+    enum SIGXFSZ   = 25;\n \n-        struct stack_t\n-        {\n-            void*   ss_sp;\n-            int     ss_flags;\n-            size_t  ss_size;\n-        }\n-    }\n-    else version (AArch64)\n-    {\n-        enum SIGPOLL   = 29;\n-        enum SIGPROF   = 27;\n-        enum SIGSYS    = 31;\n-        enum SIGTRAP   = 5;\n-        enum SIGVTALRM = 26;\n-        enum SIGXCPU   = 24;\n-        enum SIGXFSZ   = 25;\n-\n-        enum SA_ONSTACK     = 0x08000000;\n-        enum SA_RESETHAND   = 0x80000000;\n-        enum SA_RESTART     = 0x10000000;\n-        enum SA_SIGINFO     = 4;\n-        enum SA_NOCLDWAIT   = 2;\n-        enum SA_NODEFER     = 0x40000000;\n-        enum SS_ONSTACK     = 1;\n-        enum SS_DISABLE     = 2;\n-        enum MINSIGSTKSZ    = 2048;\n-        enum SIGSTKSZ       = 8192;\n+    enum SA_ONSTACK     = 0x08000000;\n+    enum SA_RESETHAND   = 0x80000000;\n+    enum SA_RESTART     = 0x10000000;\n+    enum SA_SIGINFO     = 4;\n+    enum SA_NOCLDWAIT   = 2;\n+    enum SA_NODEFER     = 0x40000000;\n+    enum SS_ONSTACK     = 1;\n+    enum SS_DISABLE     = 2;\n+    enum MINSIGSTKSZ    = 2048;\n+    enum SIGSTKSZ       = 8192;\n \n-        struct stack_t\n-        {\n-            void*   ss_sp;\n-            int     ss_flags;\n-            size_t  ss_size;\n-        }\n-    }\n-    else\n+    struct stack_t\n     {\n-        static assert(false, \"Architecture not supported.\");\n+        void*   ss_sp;\n+        int     ss_flags;\n+        size_t  ss_size;\n     }\n \n     enum\n@@ -3560,7 +3483,7 @@ else version (CRuntime_Musl)\n         int sigev_notify;\n         void function(sigval) sigev_notify_function;\n         pthread_attr_t *sigev_notify_attributes;\n-        char[56 - 3 * long.sizeof] __pad;\n+        char[56 - 3 * long.sizeof] __pad = void;\n     }\n }\n else version (CRuntime_UClibc)"}, {"sha": "f5e6c6dbe71c0cdf4bc09e434ed06f4d9200550d", "filename": "libphobos/libdruntime/core/sys/posix/spawn.d", "status": "added", "additions": 371, "deletions": 0, "changes": 371, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0da83a168fdca32fec2d6bf8280670d05514c4c4/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fposix%2Fspawn.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0da83a168fdca32fec2d6bf8280670d05514c4c4/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fposix%2Fspawn.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fposix%2Fspawn.d?ref=0da83a168fdca32fec2d6bf8280670d05514c4c4", "patch": "@@ -0,0 +1,371 @@\n+/**\n+ * D header file for spawn.h.\n+ *\n+ * Copyright: Copyright (C) 2018 by The D Language Foundation, All Rights Reserved\n+ * Authors:   Petar Kirov\n+ * License:   $(LINK2 https://www.boost.org/LICENSE_1_0.txt, Boost License 1.0)\n+ * Source:    $(LINK2 https://github.com/dlang/druntime/blob/master/src/core/sys/posix/spawn.d, _spawn.d)\n+ * Standards: The Open Group Base Specifications Issue 6, IEEE Std 1003.1, 2004 Edition\n+ */\n+module core.sys.posix.spawn;\n+\n+/*\n+Based on the following system headers:\n+\n+Glibc: https://sourceware.org/git/?p=glibc.git;a=blob;f=posix/spawn.h;hb=HEAD\n+\n+Bionic libc: https://android.googlesource.com/platform/bionic.git/+/master/libc/include/spawn.h\n+\n+Musl libc: https://git.musl-libc.org/cgit/musl/tree/include/spawn.h\n+\n+uClibc: https://git.uclibc.org/uClibc/tree/include/spawn.h\n+\n+Darwin XNU:\n+https://opensource.apple.com/source/xnu/xnu-4570.71.2/libsyscall/wrappers/spawn/spawn.h.auto.html\n+https://opensource.apple.com/source/xnu/xnu-4570.71.2/bsd/sys/spawn.h.auto.html\n+https://github.com/opensource-apple/xnu (GitHub mirror)\n+\n+FreeBSD: https://github.com/freebsd/freebsd/blob/master/include/spawn.h\n+\n+NetBSD: https://github.com/NetBSD/src/blob/trunk/sys/sys/spawn.h\n+\n+OpenBSD: https://github.com/openbsd/src/blob/master/include/spawn.h\n+\n+DragonFlyBSD: https://github.com/DragonFlyBSD/DragonFlyBSD/blob/master/include/spawn.h\n+\n+Solaris: https://github.com/illumos/illumos-gate/blob/master/usr/src/head/spawn.h\n+*/\n+\n+version (OSX) // macOS and iOS only as this API is prohibited on WatchOS and TVOS\n+    version = Darwin;\n+else version (iOS)\n+    version = Darwin;\n+\n+version (Posix):\n+public import core.sys.posix.sys.types : mode_t, pid_t;\n+public import core.sys.posix.signal : sigset_t;\n+public import core.sys.posix.sched : sched_param;\n+\n+extern(C):\n+@nogc:\n+nothrow:\n+\n+int posix_spawn_file_actions_addclose(posix_spawn_file_actions_t*, int);\n+int posix_spawn_file_actions_adddup2(posix_spawn_file_actions_t*, int, int);\n+int posix_spawn_file_actions_addopen(posix_spawn_file_actions_t*, int, const char*, int, mode_t);\n+int posix_spawn_file_actions_destroy(posix_spawn_file_actions_t*);\n+int posix_spawn_file_actions_init(posix_spawn_file_actions_t*);\n+int posix_spawnattr_destroy(posix_spawnattr_t*);\n+int posix_spawnattr_getflags(const posix_spawnattr_t*, short*);\n+int posix_spawnattr_getpgroup(const posix_spawnattr_t*, pid_t*);\n+\n+version (Darwin)\n+{ } // Not supported\n+else\n+{\n+    int posix_spawnattr_getschedparam(const posix_spawnattr_t*, sched_param*);\n+    int posix_spawnattr_getschedpolicy(const posix_spawnattr_t*, int*);\n+    int posix_spawnattr_setschedparam(posix_spawnattr_t*, const sched_param*);\n+    int posix_spawnattr_setschedpolicy(posix_spawnattr_t*, int);\n+}\n+\n+int posix_spawnattr_getsigdefault(const posix_spawnattr_t*, sigset_t*);\n+int posix_spawnattr_getsigmask(const posix_spawnattr_t*, sigset_t*);\n+int posix_spawnattr_init(posix_spawnattr_t*);\n+int posix_spawnattr_setflags(posix_spawnattr_t*, short);\n+int posix_spawnattr_setpgroup(posix_spawnattr_t*, pid_t);\n+int posix_spawnattr_setsigdefault(posix_spawnattr_t*, const sigset_t*);\n+int posix_spawnattr_setsigmask(posix_spawnattr_t*, const sigset_t*);\n+int posix_spawn(pid_t*pid, const char* path,\n+                const posix_spawn_file_actions_t* file_actions,\n+                const posix_spawnattr_t* attrp,\n+                const char** argv, const char** envp);\n+int posix_spawnp(pid_t* pid, const char* file,\n+                 const posix_spawn_file_actions_t* file_actions,\n+                 const posix_spawnattr_t* attrp,\n+                 const char** argv, const char** envp);\n+\n+version (linux)\n+{\n+    version (CRuntime_Glibc)\n+    {\n+        // Source: https://sourceware.org/git/?p=glibc.git;a=blob;f=posix/spawn.h;hb=HEAD\n+        enum\n+        {\n+            POSIX_SPAWN_RESETIDS = 0x01,\n+            POSIX_SPAWN_SETPGROUP = 0x02,\n+            POSIX_SPAWN_SETSIGDEF = 0x04,\n+            POSIX_SPAWN_SETSIGMASK = 0x08,\n+            POSIX_SPAWN_SETSCHEDPARAM = 0x10,\n+            POSIX_SPAWN_SETSCHEDULER = 0x20\n+        }\n+        import core.sys.posix.config : __USE_GNU;\n+        static if (__USE_GNU)\n+        {\n+            enum\n+            {\n+                POSIX_SPAWN_USEVFORK = 0x40,\n+                POSIX_SPAWN_SETSID = 0x80\n+            }\n+        }\n+        struct posix_spawnattr_t\n+        {\n+            short __flags;\n+            pid_t __pgrp;\n+            sigset_t __sd;\n+            sigset_t __ss;\n+            sched_param __sp;\n+            int __policy;\n+            int[16] __pad;\n+        }\n+        struct __spawn_action;\n+        struct posix_spawn_file_actions_t\n+        {\n+            int __allocated;\n+            int __used;\n+            __spawn_action* __actions;\n+            int[16] __pad;\n+        }\n+    }\n+    else version (CRuntime_Bionic)\n+    {\n+        // Source: https://android.googlesource.com/platform/bionic.git/+/master/libc/include/spawn.h\n+        enum\n+        {\n+            POSIX_SPAWN_RESETIDS = 1,\n+            POSIX_SPAWN_SETPGROUP = 2,\n+            POSIX_SPAWN_SETSIGDEF = 4,\n+            POSIX_SPAWN_SETSIGMASK = 8,\n+            POSIX_SPAWN_SETSCHEDPARAM = 16,\n+            POSIX_SPAWN_SETSCHEDULER = 32\n+        }\n+        import core.sys.posix.config : __USE_GNU;\n+        static if (__USE_GNU)\n+        {\n+            enum\n+            {\n+                POSIX_SPAWN_USEVFORK = 64,\n+                POSIX_SPAWN_SETSID = 128\n+            }\n+        }\n+        alias posix_spawnattr_t = __posix_spawnattr*;\n+        alias posix_spawn_file_actions_t = __posix_spawn_file_actions*;\n+        struct __posix_spawnattr;\n+        struct __posix_spawn_file_actions;\n+    }\n+    else version (CRuntime_Musl)\n+    {\n+        // Source: https://git.musl-libc.org/cgit/musl/tree/include/spawn.h\n+        enum\n+        {\n+            POSIX_SPAWN_RESETIDS = 1,\n+            POSIX_SPAWN_SETPGROUP = 2,\n+            POSIX_SPAWN_SETSIGDEF = 4,\n+            POSIX_SPAWN_SETSIGMASK = 8,\n+            POSIX_SPAWN_SETSCHEDPARAM = 16,\n+            POSIX_SPAWN_SETSCHEDULER = 32,\n+            POSIX_SPAWN_USEVFORK = 64,\n+            POSIX_SPAWN_SETSID = 128\n+        }\n+        struct posix_spawnattr_t\n+        {\n+            int __flags;\n+            pid_t __pgrp;\n+            sigset_t __def, __mask;\n+            int __prio, __pol;\n+            void* __fn;\n+            char[64 - (void*).sizeof] __pad = void;\n+        }\n+        struct posix_spawn_file_actions_t\n+        {\n+            int[2] __pad0;\n+            void* __actions;\n+            int[16] __pad;\n+        }\n+    }\n+    else version (CRuntime_UClibc)\n+    {\n+        // Source: https://git.uclibc.org/uClibc/tree/include/spawn.h\n+        enum\n+        {\n+            POSIX_SPAWN_RESETIDS = 0x01,\n+            POSIX_SPAWN_SETPGROUP = 0x02,\n+            POSIX_SPAWN_SETSIGDEF = 0x04,\n+            POSIX_SPAWN_SETSIGMASK = 0x08,\n+            POSIX_SPAWN_SETSCHEDPARAM = 0x10,\n+            POSIX_SPAWN_SETSCHEDULER = 0x20\n+        }\n+        import core.sys.posix.config : __USE_GNU;\n+        static if (__USE_GNU)\n+        {\n+            enum\n+            {\n+                POSIX_SPAWN_USEVFORK = 0x40,\n+            }\n+        }\n+        struct posix_spawnattr_t\n+        {\n+            short __flags;\n+            pid_t __pgrp;\n+            sigset_t __sd;\n+            sigset_t __ss;\n+            sched_param __sp;\n+            int __policy;\n+            int[16] __pad;\n+        }\n+        struct __spawn_action;\n+        struct posix_spawn_file_actions_t\n+        {\n+            int __allocated;\n+            int __used;\n+            __spawn_action* __actions;\n+            int[16] __pad;\n+        }\n+    }\n+    else\n+        static assert(0, \"Unsupported Linux libc\");\n+}\n+else version (Darwin)\n+{\n+    // Sources:\n+    // https://opensource.apple.com/source/xnu/xnu-4570.71.2/libsyscall/wrappers/spawn/spawn.h.auto.html\n+    // https://opensource.apple.com/source/xnu/xnu-4570.71.2/bsd/sys/spawn.h.auto.html\n+    enum\n+    {\n+        POSIX_SPAWN_RESETIDS = 0x01,\n+        POSIX_SPAWN_SETPGROUP = 0x02,\n+        POSIX_SPAWN_SETSIGDEF = 0x04,\n+        POSIX_SPAWN_SETSIGMASK = 0x08,\n+        // POSIX_SPAWN_SETSCHEDPARAM = 0x10,  // not supported\n+        // POSIX_SPAWN_SETSCHEDULER = 0x20,   // ditto\n+        POSIX_SPAWN_SETEXEC = 0x40,\n+        POSIX_SPAWN_START_SUSPENDED = 0x80\n+    }\n+    alias posix_spawnattr_t = void*;\n+    alias posix_spawn_file_actions_t = void*;\n+}\n+else version (FreeBSD)\n+{\n+    // Source: https://github.com/freebsd/freebsd/blob/master/include/spawn.h\n+    enum\n+    {\n+        POSIX_SPAWN_RESETIDS = 0x01,\n+        POSIX_SPAWN_SETPGROUP = 0x02,\n+        POSIX_SPAWN_SETSCHEDPARAM = 0x04,\n+        POSIX_SPAWN_SETSCHEDULER = 0x08,\n+        POSIX_SPAWN_SETSIGDEF = 0x10,\n+        POSIX_SPAWN_SETSIGMASK = 0x20\n+    }\n+    alias posix_spawnattr_t =  void*;\n+    alias posix_spawn_file_actions_t =  void*;\n+}\n+else version (NetBSD)\n+{\n+    // Source: https://github.com/NetBSD/src/blob/trunk/sys/sys/spawn.h\n+    enum\n+    {\n+        POSIX_SPAWN_RESETIDS = 0x01,\n+        POSIX_SPAWN_SETPGROUP = 0x02,\n+        POSIX_SPAWN_SETSCHEDPARAM = 0x04,\n+        POSIX_SPAWN_SETSCHEDULER = 0x08,\n+        POSIX_SPAWN_SETSIGDEF = 0x10,\n+        POSIX_SPAWN_SETSIGMASK = 0x20,\n+        POSIX_SPAWN_RETURNERROR = 0x40 // NetBSD specific\n+    }\n+    struct posix_spawnattr\n+    {\n+        short sa_flags;\n+        pid_t sa_pgroup;\n+        sched_param sa_schedparam;\n+        int sa_schedpolicy;\n+        sigset_t sa_sigdefault;\n+        sigset_t sa_sigmask;\n+    }\n+    struct posix_spawn_file_actions_entry_t;\n+    struct posix_spawn_file_actions\n+    {\n+        uint size;\n+        uint len;\n+        posix_spawn_file_actions_entry_t* fae;\n+    }\n+}\n+else version (OpenBSD)\n+{\n+    // Source: https://github.com/openbsd/src/blob/master/include/spawn.h\n+    enum\n+    {\n+        POSIX_SPAWN_RESETIDS = 0x01,\n+        POSIX_SPAWN_SETPGROUP = 0x02,\n+        POSIX_SPAWN_SETSCHEDPARAM = 0x04,\n+        POSIX_SPAWN_SETSCHEDULER = 0x08,\n+        POSIX_SPAWN_SETSIGDEF = 0x10,\n+        POSIX_SPAWN_SETSIGMASK = 0x20\n+    }\n+    alias posix_spawnattr_t = __posix_spawnattr*;\n+    alias posix_spawn_file_actions_t = __posix_spawn_file_actions*;\n+    struct __posix_spawnattr;\n+    struct __posix_spawn_file_actions;\n+}\n+else version (DragonFlyBSD)\n+{\n+    // Source: https://github.com/DragonFlyBSD/DragonFlyBSD/blob/master/include/spawn.h\n+    enum\n+    {\n+        POSIX_SPAWN_RESETIDS = 0x01,\n+        POSIX_SPAWN_SETPGROUP = 0x02,\n+        POSIX_SPAWN_SETSCHEDPARAM = 0x04,\n+        POSIX_SPAWN_SETSCHEDULER = 0x08,\n+        POSIX_SPAWN_SETSIGDEF = 0x10,\n+        POSIX_SPAWN_SETSIGMASK = 0x20\n+    }\n+    alias posix_spawnattr_t = __posix_spawnattr*;\n+    alias posix_spawn_file_actions_t = __posix_spawn_file_actions*;\n+    struct __posix_spawnattr;\n+    struct __posix_spawn_file_actions;\n+}\n+else version (Solaris)\n+{\n+    // Source: https://github.com/illumos/illumos-gate/blob/master/usr/src/head/spawn.h\n+    enum\n+    {\n+        POSIX_SPAWN_RESETIDS = 0x01,\n+        POSIX_SPAWN_SETPGROUP = 0x02,\n+        POSIX_SPAWN_SETSIGDEF = 0x04,\n+        POSIX_SPAWN_SETSIGMASK = 0x08,\n+        POSIX_SPAWN_SETSCHEDPARAM = 0x10,\n+        POSIX_SPAWN_SETSCHEDULER = 0x20,\n+    }\n+    version (none)\n+    {\n+        // Non-portable Solaris extensions.\n+        enum\n+        {\n+            POSIX_SPAWN_SETSIGIGN_NP = 0x0800,\n+            POSIX_SPAWN_NOSIGCHLD_NP = 0x1000,\n+            POSIX_SPAWN_WAITPID_NP = 0x2000,\n+            POSIX_SPAWN_NOEXECERR_NP = 0x4000,\n+        }\n+    }\n+    struct posix_spawnattr_t\n+    {\n+        void* __spawn_attrp;\n+    }\n+    struct posix_spawn_file_actions_t\n+    {\n+        void* __file_attrp;\n+    }\n+    version (none)\n+    {\n+        // Non-portable Solaris extensions.\n+        alias boolean_t = int;\n+        int posix_spawn_file_actions_addclosefrom_np(posix_spawn_file_actions_t* file_actions,\n+                                                     int lowfiledes);\n+        int posix_spawn_pipe_np(pid_t* pidp, int* fdp, const char* cmd, boolean_t write,\n+                                posix_spawn_file_actions_t* fact,\n+                                posix_spawnattr_t* attr);\n+        int posix_spawnattr_getsigignore_np(const posix_spawnattr_t* attr, sigset_t* sigignore);\n+        int posix_spawnattr_setsigignore_np(posix_spawnattr_t* attr, const sigset_t* sigignore);\n+    }\n+}\n+else\n+    static assert(0, \"Unsupported OS\");"}, {"sha": "095c81ba41c25c062b858e443734839aa0ffcd02", "filename": "libphobos/libdruntime/core/sys/posix/sys/ipc.d", "status": "modified", "additions": 8, "deletions": 24, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0da83a168fdca32fec2d6bf8280670d05514c4c4/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fposix%2Fsys%2Fipc.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0da83a168fdca32fec2d6bf8280670d05514c4c4/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fposix%2Fsys%2Fipc.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fposix%2Fsys%2Fipc.d?ref=0da83a168fdca32fec2d6bf8280670d05514c4c4", "patch": "@@ -176,21 +176,22 @@ else version (DragonFlyBSD)\n }\n else version (CRuntime_Bionic)\n {\n-    // All except ftok are from the linux kernel headers.\n-    version (X86)\n+    // All except ftok are from the linux kernel headers. Latest Bionic headers\n+    // don't use this legacy definition anymore, consider updating.\n+    version (D_LP64)\n     {\n         struct ipc_perm\n         {\n             key_t   key;\n-            ushort  uid;\n-            ushort  gid;\n-            ushort  cuid;\n-            ushort  cgid;\n+            uint    uid;\n+            uint    gid;\n+            uint    cuid;\n+            uint    cgid;\n             mode_t  mode;\n             ushort  seq;\n         }\n     }\n-    else version (ARM)\n+    else\n     {\n         struct ipc_perm\n         {\n@@ -203,23 +204,6 @@ else version (CRuntime_Bionic)\n             ushort  seq;\n         }\n     }\n-    else version (AArch64)\n-    {\n-        struct ipc_perm\n-        {\n-            key_t   key;\n-            uint    uid;\n-            uint    gid;\n-            uint    cuid;\n-            uint    cgid;\n-            mode_t  mode;\n-            ushort  seq;\n-        }\n-    }\n-    else\n-    {\n-        static assert(false, \"Architecture not supported.\");\n-    }\n \n     enum IPC_CREAT      = 0x0200; // 01000\n     enum IPC_EXCL       = 0x0400; // 02000"}, {"sha": "c0bee5528928a75e5031cf3649ac623a24bad1c2", "filename": "libphobos/libdruntime/core/sys/posix/sys/mman.d", "status": "modified", "additions": 1, "deletions": 17, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0da83a168fdca32fec2d6bf8280670d05514c4c4/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fposix%2Fsys%2Fmman.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0da83a168fdca32fec2d6bf8280670d05514c4c4/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fposix%2Fsys%2Fmman.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fposix%2Fsys%2Fmman.d?ref=0da83a168fdca32fec2d6bf8280670d05514c4c4", "patch": "@@ -458,23 +458,7 @@ else version (CRuntime_Bionic)\n     enum MAP_SHARED     = 0x0001;\n     enum MAP_PRIVATE    = 0x0002;\n     enum MAP_FIXED      = 0x0010;\n-\n-    version (X86)\n-    {\n-        enum MAP_ANON       = 0x0020;\n-    }\n-    else version (ARM)\n-    {\n-        enum MAP_ANON       = 0x0020;\n-    }\n-    else version (AArch64)\n-    {\n-        enum MAP_ANON       = 0x0020;\n-    }\n-    else\n-    {\n-        static assert(false, \"Architecture not supported.\");\n-    }\n+    enum MAP_ANON       = 0x0020;\n \n     enum MAP_FAILED     = cast(void*)-1;\n "}, {"sha": "208e5c2dd47f85dc13c6ae81e642471559b87a9d", "filename": "libphobos/libdruntime/core/sys/posix/sys/msg.d", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0da83a168fdca32fec2d6bf8280670d05514c4c4/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fposix%2Fsys%2Fmsg.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0da83a168fdca32fec2d6bf8280670d05514c4c4/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fposix%2Fsys%2Fmsg.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fposix%2Fsys%2Fmsg.d?ref=0da83a168fdca32fec2d6bf8280670d05514c4c4", "patch": "@@ -196,7 +196,7 @@ else\n struct msgbuf\n {\n     c_long mtype;\n-    char[1] mtext;\n+    char[1] mtext = 0;\n }\n \n int msgctl(int msqid, int cmd, msqid_ds* __buf);"}, {"sha": "87491fa699bdcb87909e9d2c69b328e7f2a82219", "filename": "libphobos/libdruntime/core/sys/posix/sys/resource.d", "status": "modified", "additions": 32, "deletions": 4, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0da83a168fdca32fec2d6bf8280670d05514c4c4/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fposix%2Fsys%2Fresource.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0da83a168fdca32fec2d6bf8280670d05514c4c4/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fposix%2Fsys%2Fresource.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fposix%2Fsys%2Fresource.d?ref=0da83a168fdca32fec2d6bf8280670d05514c4c4", "patch": "@@ -466,6 +466,38 @@ else version (CRuntime_Bionic)\n else version (CRuntime_Musl)\n {\n     alias ulong rlim_t;\n+\n+    int getrlimit(int, rlimit*);\n+    int setrlimit(int, in rlimit*);\n+    alias getrlimit getrlimit64;\n+    alias setrlimit setrlimit64;\n+    enum\n+    {\n+        RUSAGE_SELF = 0,\n+        RUSAGE_CHILDREN = -1,\n+        RUSAGE_THREAD = 1\n+    }\n+    struct rusage\n+    {\n+        timeval ru_utime;\n+        timeval ru_stime;\n+        c_long ru_maxrss;\n+        c_long ru_ixrss;\n+        c_long ru_idrss;\n+        c_long ru_isrss;\n+        c_long ru_minflt;\n+        c_long ru_majflt;\n+        c_long ru_nswap;\n+        c_long ru_inblock;\n+        c_long ru_oublock;\n+        c_long ru_msgsnd;\n+        c_long ru_msgrcv;\n+        c_long ru_nsignals;\n+        c_long ru_nvcsw;\n+        c_long ru_nivcsw;\n+        c_long[16] __reserved;\n+    }\n+\n     enum\n     {\n         RLIMIT_CPU    = 0,\n@@ -476,10 +508,6 @@ else version (CRuntime_Musl)\n         RLIMIT_NOFILE = 7,\n         RLIMIT_AS     = 9,\n     }\n-    int getrlimit(int, rlimit*);\n-    int setrlimit(int, in rlimit*);\n-    alias getrlimit getrlimit64;\n-    alias setrlimit setrlimit64;\n }\n else version (CRuntime_UClibc)\n {"}, {"sha": "d1ebad7318ae0689ff8a4186f182a8e473504f62", "filename": "libphobos/libdruntime/core/sys/posix/sys/socket.d", "status": "modified", "additions": 29, "deletions": 108, "changes": 137, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0da83a168fdca32fec2d6bf8280670d05514c4c4/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fposix%2Fsys%2Fsocket.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0da83a168fdca32fec2d6bf8280670d05514c4c4/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fposix%2Fsys%2Fsocket.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fposix%2Fsys%2Fsocket.d?ref=0da83a168fdca32fec2d6bf8280670d05514c4c4", "patch": "@@ -1430,7 +1430,7 @@ else version (Solaris)\n     struct sockaddr\n     {\n         sa_family_t sa_family;\n-        char[14] sa_data;\n+        char[14] sa_data = 0;\n     }\n \n     alias double sockaddr_maxalign_t;\n@@ -1446,9 +1446,9 @@ else version (Solaris)\n     struct sockaddr_storage\n     {\n          sa_family_t ss_family;\n-         char[_SS_PAD1SIZE] _ss_pad1;\n+         char[_SS_PAD1SIZE] _ss_pad1 = void;\n          sockaddr_maxalign_t _ss_align;\n-         char[_SS_PAD2SIZE] _ss_pad2;\n+         char[_SS_PAD2SIZE] _ss_pad2 = void;\n     }\n \n     struct msghdr\n@@ -1644,117 +1644,38 @@ else version (CRuntime_Bionic)\n         int             cmsg_type;\n     }\n \n-    version (X86)\n-    {\n-        alias uint __kernel_size_t;\n-\n-        enum\n-        {\n-            SOCK_DGRAM      = 2,\n-            SOCK_SEQPACKET  = 5,\n-            SOCK_STREAM     = 1\n-        }\n+    alias size_t __kernel_size_t;\n \n-        enum\n-        {\n-            SOL_SOCKET      = 1\n-        }\n-\n-        enum\n-        {\n-            SO_ACCEPTCONN   = 30,\n-            SO_BROADCAST    = 6,\n-            SO_DEBUG        = 1,\n-            SO_DONTROUTE    = 5,\n-            SO_ERROR        = 4,\n-            SO_KEEPALIVE    = 9,\n-            SO_LINGER       = 13,\n-            SO_OOBINLINE    = 10,\n-            SO_RCVBUF       = 8,\n-            SO_RCVLOWAT     = 18,\n-            SO_RCVTIMEO     = 20,\n-            SO_REUSEADDR    = 2,\n-            SO_SNDBUF       = 7,\n-            SO_SNDLOWAT     = 19,\n-            SO_SNDTIMEO     = 21,\n-            SO_TYPE         = 3\n-        }\n-    }\n-    else version (ARM)\n+    enum\n     {\n-        alias uint __kernel_size_t;\n-\n-        enum\n-        {\n-            SOCK_DGRAM      = 2,\n-            SOCK_SEQPACKET  = 5,\n-            SOCK_STREAM     = 1\n-        }\n-\n-        enum\n-        {\n-            SOL_SOCKET      = 1\n-        }\n-\n-        enum\n-        {\n-            SO_ACCEPTCONN   = 30,\n-            SO_BROADCAST    = 6,\n-            SO_DEBUG        = 1,\n-            SO_DONTROUTE    = 5,\n-            SO_ERROR        = 4,\n-            SO_KEEPALIVE    = 9,\n-            SO_LINGER       = 13,\n-            SO_OOBINLINE    = 10,\n-            SO_RCVBUF       = 8,\n-            SO_RCVLOWAT     = 18,\n-            SO_RCVTIMEO     = 20,\n-            SO_REUSEADDR    = 2,\n-            SO_SNDBUF       = 7,\n-            SO_SNDLOWAT     = 19,\n-            SO_SNDTIMEO     = 21,\n-            SO_TYPE         = 3\n-        }\n+        SOCK_DGRAM      = 2,\n+        SOCK_SEQPACKET  = 5,\n+        SOCK_STREAM     = 1\n     }\n-    else version (AArch64)\n-    {\n-        alias ulong __kernel_size_t;\n-\n-        enum\n-        {\n-            SOCK_DGRAM      = 2,\n-            SOCK_SEQPACKET  = 5,\n-            SOCK_STREAM     = 1\n-        }\n \n-        enum\n-        {\n-            SOL_SOCKET      = 1\n-        }\n-\n-        enum\n-        {\n-            SO_ACCEPTCONN   = 30,\n-            SO_BROADCAST    = 6,\n-            SO_DEBUG        = 1,\n-            SO_DONTROUTE    = 5,\n-            SO_ERROR        = 4,\n-            SO_KEEPALIVE    = 9,\n-            SO_LINGER       = 13,\n-            SO_OOBINLINE    = 10,\n-            SO_RCVBUF       = 8,\n-            SO_RCVLOWAT     = 18,\n-            SO_RCVTIMEO     = 20,\n-            SO_REUSEADDR    = 2,\n-            SO_SNDBUF       = 7,\n-            SO_SNDLOWAT     = 19,\n-            SO_SNDTIMEO     = 21,\n-            SO_TYPE         = 3\n-        }\n+    enum\n+    {\n+        SOL_SOCKET      = 1\n     }\n-    else\n+\n+    enum\n     {\n-        static assert(false, \"Architecture not supported.\");\n+        SO_ACCEPTCONN   = 30,\n+        SO_BROADCAST    = 6,\n+        SO_DEBUG        = 1,\n+        SO_DONTROUTE    = 5,\n+        SO_ERROR        = 4,\n+        SO_KEEPALIVE    = 9,\n+        SO_LINGER       = 13,\n+        SO_OOBINLINE    = 10,\n+        SO_RCVBUF       = 8,\n+        SO_RCVLOWAT     = 18,\n+        SO_RCVTIMEO     = 20,\n+        SO_REUSEADDR    = 2,\n+        SO_SNDBUF       = 7,\n+        SO_SNDLOWAT     = 19,\n+        SO_SNDTIMEO     = 21,\n+        SO_TYPE         = 3\n     }\n \n     enum"}, {"sha": "53858e713bb6917820816e582e8e1d23dfb7fe73", "filename": "libphobos/libdruntime/core/sys/posix/sys/stat.d", "status": "modified", "additions": 108, "deletions": 25, "changes": 133, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0da83a168fdca32fec2d6bf8280670d05514c4c4/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fposix%2Fsys%2Fstat.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0da83a168fdca32fec2d6bf8280670d05514c4c4/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fposix%2Fsys%2Fstat.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fposix%2Fsys%2Fstat.d?ref=0da83a168fdca32fec2d6bf8280670d05514c4c4", "patch": "@@ -453,26 +453,84 @@ version (CRuntime_Glibc)\n     }\n     else version (RISCV_Any)\n     {\n+        private\n+        {\n+            alias __dev_t = ulong;\n+            alias __ino_t = c_ulong;\n+            alias __ino64_t = ulong;\n+            alias __mode_t = uint;\n+            alias __nlink_t = uint;\n+            alias __uid_t = uint;\n+            alias __gid_t = uint;\n+            alias __off_t = c_long;\n+            alias __off64_t = long;\n+            alias __blksize_t = int;\n+            alias __blkcnt_t = c_long;\n+            alias __blkcnt64_t = long;\n+            alias __timespec = timespec;\n+            alias __time_t = time_t;\n+        }\n         struct stat_t\n         {\n-            dev_t       st_dev;\n-            ino_t       st_ino;\n-            mode_t      st_mode;\n-            nlink_t     st_nlink;\n-            uid_t       st_uid;\n-            gid_t       st_gid;\n-            dev_t       st_rdev;\n-            dev_t       __pad1;\n-            off_t       st_size;\n-            blksize_t   st_blksize;\n-            int         __pad2;\n-            time_t      st_atime;\n-            c_ulong     st_atime_nsec;\n-            time_t      st_mtime;\n-            c_ulong     st_mtime_nsec;\n-            time_t      st_ctime;\n-            c_ulong     st_ctime_nsec;\n-            int[2]      __reserved;\n+            __dev_t st_dev;\n+\n+            static if (__USE_FILE_OFFSET64)\n+            {\n+                __ino64_t st_ino;\n+            }\n+            else\n+            {\n+                __ino_t st_ino;\n+            }\n+            __mode_t st_mode;\n+            __nlink_t st_nlink;\n+            __uid_t st_uid;\n+            __gid_t st_gid;\n+            __dev_t st_rdev;\n+            __dev_t __pad1;\n+\n+            static if (__USE_FILE_OFFSET64)\n+            {\n+                __off64_t st_size;\n+            }\n+            else\n+            {\n+                __off_t st_size;\n+            }\n+            __blksize_t st_blksize;\n+            int __pad2;\n+\n+            static if (__USE_FILE_OFFSET64)\n+            {\n+                __blkcnt64_t st_blocks;\n+            }\n+            else\n+            {\n+                __blkcnt_t st_blocks;\n+            }\n+\n+            static if (__USE_MISC)\n+            {\n+                __timespec st_atim;\n+                __timespec st_mtim;\n+                __timespec st_ctim;\n+                extern(D)\n+                {\n+                    @property ref time_t st_atime() { return st_atim.tv_sec; }\n+                    @property ref time_t st_mtime() { return st_mtim.tv_sec; }\n+                    @property ref time_t st_ctime() { return st_ctim.tv_sec; }\n+                }\n+            }\n+            else\n+            {\n+                __time_t st_atime;\n+                c_ulong st_atimensec;\n+                __time_t st_mtime;\n+                c_ulong st_mtimensec;\n+                __time_t st_ctime;\n+                c_ulong st_ctimensec;\n+            }\n+            int[2] __unused;\n         }\n     }\n     else version (ARM)\n@@ -1161,7 +1219,7 @@ else version (Solaris)\n             }\n             blksize_t st_blksize;\n             blkcnt_t st_blocks;\n-            char[_ST_FSTYPSZ] st_fstype;\n+            char[_ST_FSTYPSZ] st_fstype = 0;\n         }\n \n         static if (__USE_LARGEFILE64) alias stat_t stat64_t;\n@@ -1198,7 +1256,7 @@ else version (Solaris)\n             }\n             blksize_t st_blksize;\n             blkcnt_t st_blocks;\n-            char[_ST_FSTYPSZ] st_fstype;\n+            char[_ST_FSTYPSZ] st_fstype = 0;\n             c_long[8] st_pad4;\n         }\n \n@@ -1232,7 +1290,7 @@ else version (Solaris)\n             }\n             blksize_t st_blksize;\n             blkcnt64_t st_blocks;\n-            char[_ST_FSTYPSZ] st_fstype;\n+            char[_ST_FSTYPSZ] st_fstype = 0;\n             c_long[8] st_pad4;\n         }\n \n@@ -1361,6 +1419,31 @@ else version (CRuntime_Bionic)\n             uint        __unused5;\n         }\n     }\n+    else version (X86_64)\n+    {\n+        struct stat_t\n+        {\n+            ulong       st_dev;\n+            ulong       st_ino;\n+            ulong       st_nlink;\n+            uint        st_mode;\n+            uid_t       st_uid;\n+            gid_t       st_gid;\n+            uint        __pad0;\n+\n+            ulong       st_rdev;\n+            long        st_size;\n+            long        st_blksize;\n+            long        st_blocks;\n+            long        st_atime;\n+            ulong       st_atime_nsec;\n+            long        st_mtime;\n+            ulong       st_mtime_nsec;\n+            long        st_ctime;\n+            ulong       st_ctime_nsec;\n+            long[3]     __pad3;\n+        }\n+    }\n     else\n     {\n         static assert(false, \"Architecture not supported.\");\n@@ -1445,11 +1528,11 @@ else version (CRuntime_Musl)\n         timespec st_atim;\n         timespec st_mtim;\n         timespec st_ctim;\n-        extern(D) @safe @property\n+        extern(D) @safe @property inout pure nothrow\n         {\n-            ref time_t st_atime() return { return st_atim.tv_sec; }\n-            ref time_t st_mtime() return { return st_mtim.tv_sec; }\n-            ref time_t st_ctime() return { return st_ctim.tv_sec; }\n+            ref inout(time_t) st_atime() return { return st_atim.tv_sec; }\n+            ref inout(time_t) st_mtime() return { return st_mtim.tv_sec; }\n+            ref inout(time_t) st_ctime() return { return st_ctim.tv_sec; }\n         }\n         long[3] __unused;\n     }"}, {"sha": "9828c7b76e7373a1f251b39bc11e9e6a720d44c0", "filename": "libphobos/libdruntime/core/sys/posix/sys/statvfs.d", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0da83a168fdca32fec2d6bf8280670d05514c4c4/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fposix%2Fsys%2Fstatvfs.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0da83a168fdca32fec2d6bf8280670d05514c4c4/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fposix%2Fsys%2Fstatvfs.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fposix%2Fsys%2Fstatvfs.d?ref=0da83a168fdca32fec2d6bf8280670d05514c4c4", "patch": "@@ -119,9 +119,9 @@ else version (NetBSD)\n         c_ulong f_namemax;\n         int f_owner;\n         int[4] f_spare;\n-        char[_VFS_NAMELEN] f_fstypename;\n-        char[_VFS_MNAMELEN] f_mntonname;\n-        char[_VFS_MNAMELEN] f_mntfromname;\n+        char[_VFS_NAMELEN] f_fstypename = 0;\n+        char[_VFS_MNAMELEN] f_mntonname = 0;\n+        char[_VFS_MNAMELEN] f_mntfromname = 0;\n     }\n \n     enum FFlag"}, {"sha": "060b56f88c8043855cb56fc5cd994884bce6d482", "filename": "libphobos/libdruntime/core/sys/posix/sys/types.d", "status": "modified", "additions": 4, "deletions": 23, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0da83a168fdca32fec2d6bf8280670d05514c4c4/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fposix%2Fsys%2Ftypes.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0da83a168fdca32fec2d6bf8280670d05514c4c4/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fposix%2Fsys%2Ftypes.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fposix%2Fsys%2Ftypes.d?ref=0da83a168fdca32fec2d6bf8280670d05514c4c4", "patch": "@@ -247,34 +247,15 @@ else version (CRuntime_Bionic)\n     alias c_long    time_t;\n     alias uint      uid_t;\n \n-    version (X86)\n-    {\n-        alias ushort    mode_t;\n-        alias ushort    nlink_t;\n-    }\n-    else version (X86_64)\n-    {\n-        alias ushort    mode_t;\n-        alias uint      nlink_t;\n-    }\n-    else version (ARM)\n-    {\n-        alias ushort    mode_t;\n-        alias ushort    nlink_t;\n-    }\n-    else version (AArch64)\n-    {\n-        alias uint      mode_t;\n-        alias uint      nlink_t;\n-    }\n-    else version (MIPS32)\n+    version (D_LP64)\n     {\n         alias uint      mode_t;\n         alias uint      nlink_t;\n     }\n     else\n     {\n-        static assert(false, \"Architecture not supported.\");\n+        alias ushort    mode_t;\n+        alias ushort    nlink_t;\n     }\n }\n else version (CRuntime_UClibc)\n@@ -1068,7 +1049,7 @@ else version (CRuntime_Bionic)\n         size_t  guard_size;\n         int     sched_policy;\n         int     sched_priority;\n-        version (D_LP64) char[16] __reserved;\n+        version (D_LP64) char[16] __reserved = 0;\n     }\n \n     struct pthread_cond_t"}, {"sha": "8a5dd0564d400c94ab148f27c3a4d28b76fd1481", "filename": "libphobos/libdruntime/core/sys/posix/sys/utsname.d", "status": "modified", "additions": 49, "deletions": 49, "changes": 98, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0da83a168fdca32fec2d6bf8280670d05514c4c4/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fposix%2Fsys%2Futsname.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0da83a168fdca32fec2d6bf8280670d05514c4c4/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fposix%2Fsys%2Futsname.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fposix%2Fsys%2Futsname.d?ref=0da83a168fdca32fec2d6bf8280670d05514c4c4", "patch": "@@ -23,15 +23,15 @@ version (CRuntime_Glibc)\n \n     struct utsname\n     {\n-        char[utsNameLength] sysname;\n-        char[utsNameLength] nodename;\n-        char[utsNameLength] release;\n-        char[utsNameLength] version_;\n+        char[utsNameLength] sysname = 0;\n+        char[utsNameLength] nodename = 0;\n+        char[utsNameLength] release = 0;\n+        char[utsNameLength] version_ = 0;\n         // TODO Deprecate after version_ has been in an official release.\n         alias update = version_;\n-        char[utsNameLength] machine;\n+        char[utsNameLength] machine = 0;\n \n-        char[utsNameLength] __domainname;\n+        char[utsNameLength] __domainname = 0;\n     }\n \n     int uname(utsname* __name);\n@@ -42,13 +42,13 @@ else version (Darwin)\n \n     struct utsname\n     {\n-        char[utsNameLength] sysname;\n-        char[utsNameLength] nodename;\n-        char[utsNameLength] release;\n-        char[utsNameLength] version_;\n+        char[utsNameLength] sysname = 0;\n+        char[utsNameLength] nodename = 0;\n+        char[utsNameLength] release = 0;\n+        char[utsNameLength] version_ = 0;\n         // TODO Deprecate after version_ has been in an official release.\n         alias update = version_;\n-        char[utsNameLength] machine;\n+        char[utsNameLength] machine = 0;\n     }\n \n     int uname(utsname* __name);\n@@ -60,13 +60,13 @@ else version (FreeBSD)\n \n     struct utsname\n     {\n-        char[SYS_NMLN] sysname;\n-        char[SYS_NMLN] nodename;\n-        char[SYS_NMLN] release;\n-        char[SYS_NMLN] version_;\n+        char[SYS_NMLN] sysname = 0;\n+        char[SYS_NMLN] nodename = 0;\n+        char[SYS_NMLN] release = 0;\n+        char[SYS_NMLN] version_ = 0;\n         // TODO Deprecate after version_ has been in an official release.\n         alias update = version_;\n-        char[SYS_NMLN] machine;\n+        char[SYS_NMLN] machine = 0;\n     }\n \n     int __xuname(int, void*);\n@@ -78,13 +78,13 @@ else version (NetBSD)\n \n     struct utsname\n     {\n-        char[utsNameLength] sysname;\n-        char[utsNameLength] nodename;\n-        char[utsNameLength] release;\n-        char[utsNameLength] version_;\n+        char[utsNameLength] sysname = 0;\n+        char[utsNameLength] nodename = 0;\n+        char[utsNameLength] release = 0;\n+        char[utsNameLength] version_ = 0;\n         // TODO Deprecate after version_ has been in an official release.\n         alias update = version_;\n-        char[utsNameLength] machine;\n+        char[utsNameLength] machine = 0;\n     }\n \n     int uname(utsname* __name);\n@@ -95,13 +95,13 @@ else version (DragonFlyBSD)\n \n     struct utsname\n     {\n-        char[utsNameLength] sysname;\n-        char[utsNameLength] nodename;\n-        char[utsNameLength] release;\n-        char[utsNameLength] version_;\n+        char[utsNameLength] sysname = 0;\n+        char[utsNameLength] nodename = 0;\n+        char[utsNameLength] release = 0;\n+        char[utsNameLength] version_ = 0;\n         // TODO Deprecate after version_ has been in an official release.\n         alias update = version_;\n-        char[utsNameLength] machine;\n+        char[utsNameLength] machine = 0;\n     }\n \n     int uname(utsname* __name);\n@@ -112,12 +112,12 @@ else version (Solaris)\n \n     struct utsname\n     {\n-        char[SYS_NMLN] sysname;\n-        char[SYS_NMLN] nodename;\n-        char[SYS_NMLN] release;\n+        char[SYS_NMLN] sysname = 0;\n+        char[SYS_NMLN] nodename = 0;\n+        char[SYS_NMLN] release = 0;\n         // The field name is version but version is a keyword in D.\n-        char[SYS_NMLN] _version;\n-        char[SYS_NMLN] machine;\n+        char[SYS_NMLN] _version = 0;\n+        char[SYS_NMLN] machine = 0;\n     }\n \n     int uname(utsname* __name);\n@@ -128,13 +128,13 @@ else version (CRuntime_Bionic)\n \n     struct utsname\n     {\n-        char[SYS_NMLN] sysname;\n-        char[SYS_NMLN] nodename;\n-        char[SYS_NMLN] release;\n+        char[SYS_NMLN] sysname = 0;\n+        char[SYS_NMLN] nodename = 0;\n+        char[SYS_NMLN] release = 0;\n         // The field name is version but version is a keyword in D.\n-        char[SYS_NMLN] _version;\n-        char[SYS_NMLN] machine;\n-        char[SYS_NMLN] domainname;\n+        char[SYS_NMLN] _version = 0;\n+        char[SYS_NMLN] machine = 0;\n+        char[SYS_NMLN] domainname = 0;\n     }\n \n     int uname(utsname*);\n@@ -145,12 +145,12 @@ else version (CRuntime_Musl)\n \n     struct utsname\n     {\n-        char[SYS_NMLN] sysname;\n-        char[SYS_NMLN] nodename;\n-        char[SYS_NMLN] release;\n-        char[SYS_NMLN] _version;\n-        char[SYS_NMLN] machine;\n-        char[SYS_NMLN] domainname;\n+        char[SYS_NMLN] sysname = 0;\n+        char[SYS_NMLN] nodename = 0;\n+        char[SYS_NMLN] release = 0;\n+        char[SYS_NMLN] _version = 0;\n+        char[SYS_NMLN] machine = 0;\n+        char[SYS_NMLN] domainname = 0;\n     }\n \n     int uname(utsname*);\n@@ -161,12 +161,12 @@ else version (CRuntime_UClibc)\n \n     struct utsname\n     {\n-        char[utsNameLength] sysname;\n-        char[utsNameLength] nodename;\n-        char[utsNameLength] release;\n-        char[utsNameLength] version_;\n-        char[utsNameLength] machine;\n-        char[utsNameLength] domainname;\n+        char[utsNameLength] sysname = 0;\n+        char[utsNameLength] nodename = 0;\n+        char[utsNameLength] release = 0;\n+        char[utsNameLength] version_ = 0;\n+        char[utsNameLength] machine = 0;\n+        char[utsNameLength] domainname = 0;\n     }\n \n     int uname(utsname*);"}, {"sha": "52b168649173b9273c70554d431596d046c8f755", "filename": "libphobos/libdruntime/core/sys/posix/ucontext.d", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0da83a168fdca32fec2d6bf8280670d05514c4c4/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fposix%2Fucontext.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0da83a168fdca32fec2d6bf8280670d05514c4c4/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fposix%2Fucontext.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fposix%2Fucontext.d?ref=0da83a168fdca32fec2d6bf8280670d05514c4c4", "patch": "@@ -431,7 +431,7 @@ version (CRuntime_Glibc)\n                 mcontext_t*  uc_regs;\n             }\n             sigset_t    uc_sigmask;\n-            char[mcontext_t.sizeof + 12] uc_reg_space;\n+            char[mcontext_t.sizeof + 12] uc_reg_space = 0;\n         }\n     }\n     else version (PPC64)\n@@ -632,7 +632,7 @@ version (CRuntime_Glibc)\n             ucontext_t* uc_link;\n             stack_t     uc_stack;\n             sigset_t    uc_sigmask;\n-            char[1024 / 8 - sigset_t.sizeof] __reserved;\n+            char[1024 / 8 - sigset_t.sizeof] __reserved = 0;\n             mcontext_t  uc_mcontext;\n         }\n     }"}, {"sha": "7da26317d356f52766c84cc1e6cbeb9049d87f69", "filename": "libphobos/libdruntime/core/sys/solaris/sys/elf.d", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0da83a168fdca32fec2d6bf8280670d05514c4c4/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fsolaris%2Fsys%2Felf.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0da83a168fdca32fec2d6bf8280670d05514c4c4/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fsolaris%2Fsys%2Felf.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fsolaris%2Fsys%2Felf.d?ref=0da83a168fdca32fec2d6bf8280670d05514c4c4", "patch": "@@ -29,7 +29,7 @@ enum EI_NIDENT = 16;\n \n struct Elf32_Ehdr\n {\n-    char[EI_NIDENT] e_ident;\n+    char[EI_NIDENT] e_ident = 0;\n     Elf32_Half    e_type;\n     Elf32_Half    e_machine;\n     Elf32_Word    e_version;\n@@ -47,7 +47,7 @@ struct Elf32_Ehdr\n \n struct Elf64_Ehdr\n {\n-    char[EI_NIDENT] e_ident;\n+    char[EI_NIDENT] e_ident = 0;\n     Elf64_Half    e_type;\n     Elf64_Half    e_machine;\n     Elf64_Word    e_version;"}, {"sha": "bfbf3ee2abc7f4c47f6e58cba89f4df22118e42c", "filename": "libphobos/libdruntime/core/sys/solaris/sys/priocntl.d", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0da83a168fdca32fec2d6bf8280670d05514c4c4/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fsolaris%2Fsys%2Fpriocntl.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0da83a168fdca32fec2d6bf8280670d05514c4c4/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fsolaris%2Fsys%2Fpriocntl.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fsolaris%2Fsys%2Fpriocntl.d?ref=0da83a168fdca32fec2d6bf8280670d05514c4c4", "patch": "@@ -59,7 +59,7 @@ enum PC_SETPRIO      = 1;\n struct pcinfo_t\n {\n     id_t                pc_cid;     // class id\n-    char[PC_CLNMSZ]     pc_clname;  // class name\n+    char[PC_CLNMSZ]     pc_clname=0;// class name\n     int[PC_CLINFOSZ]    pc_clinfo;  // class information\n }\n "}, {"sha": "762a4dbed0c90144934e0eca83e08a4f5c4e5fd8", "filename": "libphobos/libdruntime/core/sys/windows/aclapi.d", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0da83a168fdca32fec2d6bf8280670d05514c4c4/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fwindows%2Faclapi.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0da83a168fdca32fec2d6bf8280670d05514c4c4/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fwindows%2Faclapi.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fwindows%2Faclapi.d?ref=0da83a168fdca32fec2d6bf8280670d05514c4c4", "patch": "@@ -13,7 +13,7 @@ version (Windows):\n version (ANSI) {} else version = Unicode;\n pragma(lib, \"advapi32\");\n \n-import core.sys.windows.windows, core.sys.windows.accctrl;\n+import core.sys.windows.accctrl, core.sys.windows.basetyps, core.sys.windows.w32api, core.sys.windows.winnt;\n \n extern (Windows) {\n     VOID BuildExplicitAccessWithNameA(PEXPLICIT_ACCESS_A, LPSTR, DWORD,"}, {"sha": "34aeccc946bb7574832a9906779b7d4ba36f1e0a", "filename": "libphobos/libdruntime/core/sys/windows/com.d", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0da83a168fdca32fec2d6bf8280670d05514c4c4/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fwindows%2Fcom.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0da83a168fdca32fec2d6bf8280670d05514c4c4/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fwindows%2Fcom.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fwindows%2Fcom.d?ref=0da83a168fdca32fec2d6bf8280670d05514c4c4", "patch": "@@ -4,7 +4,7 @@ version (Windows):\n pragma(lib,\"uuid\");\n \n import core.atomic;\n-import core.sys.windows.windows;\n+import core.sys.windows.windef /+: HRESULT, LONG, ULONG+/;\n //import std.string;\n \n public import core.sys.windows.basetyps : GUID, IID, CLSID;"}, {"sha": "e6ef421a54899229aa697b6b645f50201258b9a0", "filename": "libphobos/libdruntime/core/sys/windows/comcat.d", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0da83a168fdca32fec2d6bf8280670d05514c4c4/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fwindows%2Fcomcat.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0da83a168fdca32fec2d6bf8280670d05514c4c4/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fwindows%2Fcomcat.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fwindows%2Fcomcat.d?ref=0da83a168fdca32fec2d6bf8280670d05514c4c4", "patch": "@@ -10,7 +10,7 @@\n module core.sys.windows.comcat;\n version (Windows):\n \n-import core.sys.windows.windows, core.sys.windows.ole2;\n+import core.sys.windows.ole2;\n private import core.sys.windows.basetyps, core.sys.windows.cguid, core.sys.windows.objbase, core.sys.windows.unknwn,\n   core.sys.windows.windef, core.sys.windows.wtypes;\n \n@@ -31,7 +31,7 @@ alias IsEqualGUID IsEqualCATID;\n struct CATEGORYINFO {\n     CATID        catid;\n     LCID         lcid;\n-    OLECHAR[128] szDescription;\n+    OLECHAR[128] szDescription = 0;\n }\n alias CATEGORYINFO* LPCATEGORYINFO;\n "}, {"sha": "bedf36567e1017458befc30d5cfe5c1c5180fb26", "filename": "libphobos/libdruntime/core/sys/windows/commctrl.d", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0da83a168fdca32fec2d6bf8280670d05514c4c4/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fwindows%2Fcommctrl.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0da83a168fdca32fec2d6bf8280670d05514c4c4/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fwindows%2Fcommctrl.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fwindows%2Fcommctrl.d?ref=0da83a168fdca32fec2d6bf8280670d05514c4c4", "patch": "@@ -2185,7 +2185,7 @@ static if (_WIN32_IE >= 0x400) {\n }\n \n enum {\n-    DTM_FIRST         = 0x10000,\n+    DTM_FIRST         = 0x1000,\n     DTM_GETSYSTEMTIME = 0x1001,\n     DTM_SETSYSTEMTIME = 0x1002,\n     DTM_GETRANGE      = 0x1003,\n@@ -2832,14 +2832,14 @@ static if (_WIN32_IE >= 0x400) {\n     struct NMCBEDRAGBEGINW {\n         NMHDR hdr;\n         int   iItemid;\n-        WCHAR[CBEMAXSTRLEN] szText;\n+        WCHAR[CBEMAXSTRLEN] szText = 0;\n     }\n     alias NMCBEDRAGBEGINW* LPNMCBEDRAGBEGINW, PNMCBEDRAGBEGINW;\n \n     struct NMCBEDRAGBEGINA {\n         NMHDR hdr;\n         int   iItemid;\n-        char[CBEMAXSTRLEN] szText;\n+        char[CBEMAXSTRLEN] szText = 0;\n     }\n     alias NMCBEDRAGBEGINA* LPNMCBEDRAGBEGINA, PNMCBEDRAGBEGINA;\n \n@@ -2964,7 +2964,7 @@ struct NMCBEENDEDITW {\n     NMHDR hdr;\n     BOOL  fChanged;\n     int   iNewSelection;\n-    WCHAR[CBEMAXSTRLEN] szText;\n+    WCHAR[CBEMAXSTRLEN] szText = 0;\n     int   iWhy;\n }\n alias NMCBEENDEDITW* LPNMCBEENDEDITW, PNMCBEENDEDITW;\n@@ -2973,7 +2973,7 @@ struct NMCBEENDEDITA {\n     NMHDR hdr;\n     BOOL  fChanged;\n     int   iNewSelection;\n-    char[CBEMAXSTRLEN] szText;\n+    char[CBEMAXSTRLEN] szText = 0;\n     int   iWhy;\n }\n alias NMCBEENDEDITA* LPNMCBEENDEDITA, PNMCBEENDEDITA;\n@@ -3545,7 +3545,7 @@ static if (_WIN32_IE >= 0x300) {\n     struct NMTTDISPINFOA {\n         NMHDR     hdr;\n         LPSTR     lpszText;\n-        char[80]  szText;\n+        char[80]  szText = 0;\n         HINSTANCE hinst;\n         UINT      uFlags;\n         LPARAM    lParam;\n@@ -3554,7 +3554,7 @@ static if (_WIN32_IE >= 0x300) {\n     struct NMTTDISPINFOW {\n         NMHDR     hdr;\n         LPWSTR    lpszText;\n-        WCHAR[80] szText;\n+        WCHAR[80] szText = 0;\n         HINSTANCE hinst;\n         UINT      uFlags;\n         LPARAM    lParam;\n@@ -3563,15 +3563,15 @@ static if (_WIN32_IE >= 0x300) {\n     struct NMTTDISPINFOA {\n         NMHDR     hdr;\n         LPSTR     lpszText;\n-        char[80]  szText;\n+        char[80]  szText = 0;\n         HINSTANCE hinst;\n         UINT      uFlags;\n     }\n \n     struct NMTTDISPINFOW {\n         NMHDR     hdr;\n         LPWSTR    lpszText;\n-        WCHAR[80] szText;\n+        WCHAR[80] szText = 0;\n         HINSTANCE hinst;\n         UINT      uFlags;\n     }\n@@ -4919,8 +4919,8 @@ static if (_WIN32_WINNT >= 0x501) {\n         int  iLink;\n         UINT state;\n         UINT stateMask;\n-        WCHAR[MAX_LINKID_TEXT]  szID;\n-        WCHAR[L_MAX_URL_LENGTH] szUrl;\n+        WCHAR[MAX_LINKID_TEXT]  szID = 0;\n+        WCHAR[L_MAX_URL_LENGTH] szUrl = 0;\n     }\n     alias LITEM* PLITEM;\n "}, {"sha": "823a76bd386edf4c86ea9f7408290b6f9feb99a9", "filename": "libphobos/libdruntime/core/sys/windows/cpl.d", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0da83a168fdca32fec2d6bf8280670d05514c4c4/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fwindows%2Fcpl.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0da83a168fdca32fec2d6bf8280670d05514c4c4/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fwindows%2Fcpl.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fwindows%2Fcpl.d?ref=0da83a168fdca32fec2d6bf8280670d05514c4c4", "patch": "@@ -54,9 +54,9 @@ align(1):\n     DWORD     dwHelpContext;\n     LONG_PTR  lData;\n     HICON     hIcon;\n-    CHAR[32]  szName;\n-    CHAR[64]  szInfo;\n-    CHAR[128] szHelpFile;\n+    CHAR[32]  szName = 0;\n+    CHAR[64]  szInfo = 0;\n+    CHAR[128] szHelpFile = 0;\n }\n alias NEWCPLINFOA* LPNEWCPLINFOA;\n \n@@ -68,9 +68,9 @@ align(1):\n     DWORD      dwHelpContext;\n     LONG_PTR   lData;\n     HICON      hIcon;\n-    WCHAR[32]  szName;\n-    WCHAR[64]  szInfo;\n-    WCHAR[128] szHelpFile;\n+    WCHAR[32]  szName = 0;\n+    WCHAR[64]  szInfo = 0;\n+    WCHAR[128] szHelpFile = 0;\n }\n alias NEWCPLINFOW* LPNEWCPLINFOW;\n "}, {"sha": "3f5284f8854aa06b16c6987ccc3ee857a82d022d", "filename": "libphobos/libdruntime/core/sys/windows/custcntl.d", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0da83a168fdca32fec2d6bf8280670d05514c4c4/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fwindows%2Fcustcntl.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0da83a168fdca32fec2d6bf8280670d05514c4c4/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fwindows%2Fcustcntl.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fwindows%2Fcustcntl.d?ref=0da83a168fdca32fec2d6bf8280670d05514c4c4", "patch": "@@ -25,7 +25,7 @@ enum size_t\n struct CCSTYLEA {\n     DWORD           flStyle;\n     DWORD           flExtStyle;\n-    CHAR[CCHCCTEXT] szText;\n+    CHAR[CCHCCTEXT] szText = 0;\n     LANGID          lgid;\n     WORD            wReserved1;\n }\n@@ -34,7 +34,7 @@ alias CCSTYLEA* LPCCSTYLEA;\n struct CCSTYLEW {\n     DWORD            flStyle;\n     DWORD            flExtStyle;\n-    WCHAR[CCHCCTEXT] szText;\n+    WCHAR[CCHCCTEXT] szText = 0;\n     LANGID           lgid;\n     WORD             wReserved1;\n }\n@@ -55,15 +55,15 @@ struct CCSTYLEFLAGW {\n alias CCSTYLEFLAGW* LPCCSTYLEFLAGW;\n \n struct CCINFOA {\n-    CHAR[CCHCCCLASS]  szClass;\n+    CHAR[CCHCCCLASS]  szClass = 0;\n     DWORD             flOptions;\n-    CHAR[CCHCCDESC]   szDesc;\n+    CHAR[CCHCCDESC]   szDesc = 0;\n     UINT              cxDefault;\n     UINT              cyDefault;\n     DWORD             flStyleDefault;\n     DWORD             flExtStyleDefault;\n     DWORD             flCtrlTypeMask;\n-    CHAR[CCHCCTEXT]   szTextDefault;\n+    CHAR[CCHCCTEXT]   szTextDefault = 0;\n     INT               cStyleFlags;\n     LPCCSTYLEFLAGA    aStyleFlags;\n     LPFNCCSTYLEA      lpfnStyle;\n@@ -74,15 +74,15 @@ struct CCINFOA {\n alias CCINFOA* LPCCINFOA;\n \n struct CCINFOW {\n-    WCHAR[CCHCCCLASS] szClass;\n+    WCHAR[CCHCCCLASS] szClass = 0;\n     DWORD             flOptions;\n-    WCHAR[CCHCCDESC]  szDesc;\n+    WCHAR[CCHCCDESC]  szDesc = 0;\n     UINT              cxDefault;\n     UINT              cyDefault;\n     DWORD             flStyleDefault;\n     DWORD             flExtStyleDefault;\n     DWORD             flCtrlTypeMask;\n-    WCHAR[CCHCCTEXT]  szTextDefault;\n+    WCHAR[CCHCCTEXT]  szTextDefault = 0;\n     INT               cStyleFlags;\n     LPCCSTYLEFLAGW    aStyleFlags;\n     LPFNCCSTYLEW      lpfnStyle;"}, {"sha": "44c195714375f634ac4e621a365cbafc5f59a50a", "filename": "libphobos/libdruntime/core/sys/windows/dbghelp.d", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0da83a168fdca32fec2d6bf8280670d05514c4c4/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fwindows%2Fdbghelp.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0da83a168fdca32fec2d6bf8280670d05514c4c4/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fwindows%2Fdbghelp.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fwindows%2Fdbghelp.d?ref=0da83a168fdca32fec2d6bf8280670d05514c4c4", "patch": "@@ -12,7 +12,8 @@\n module core.sys.windows.dbghelp;\n version (Windows):\n \n-import core.sys.windows.windows;\n+import core.sys.windows.winbase /+: FreeLibrary, GetProcAddress, LoadLibraryA+/;\n+import core.sys.windows.windef;\n \n public import core.sys.windows.dbghelp_types;\n "}, {"sha": "f75f98bc88245ffd4c838e7d5d3b3209cdc2c1cc", "filename": "libphobos/libdruntime/core/sys/windows/dbghelp_types.d", "status": "modified", "additions": 14, "deletions": 13, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0da83a168fdca32fec2d6bf8280670d05514c4c4/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fwindows%2Fdbghelp_types.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0da83a168fdca32fec2d6bf8280670d05514c4c4/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fwindows%2Fdbghelp_types.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fwindows%2Fdbghelp_types.d?ref=0da83a168fdca32fec2d6bf8280670d05514c4c4", "patch": "@@ -14,7 +14,8 @@ version (Windows):\n \n version (ANSI) {} else version = Unicode;\n \n-import core.sys.windows.windows;\n+import core.sys.windows.windef;\n+import core.sys.windows.imagehlp /+: ADDRESS_MODE+/;\n \n public import core.sys.windows.winnt : TCHAR;\n \n@@ -123,15 +124,15 @@ struct IMAGEHLP_MODULEA64\n     DWORD      CheckSum;\n     DWORD      NumSyms;\n     SYM_TYPE   SymType;\n-    CHAR[32]   ModuleName;\n-    CHAR[256]  ImageName;\n-    CHAR[256]  LoadedImageName;\n+    CHAR[32]   ModuleName = 0;\n+    CHAR[256]  ImageName = 0;\n+    CHAR[256]  LoadedImageName = 0;\n     // new elements: 07-Jun-2002\n     version (none)\n     {\n-        CHAR[256]  LoadedPdbName;\n+        CHAR[256]  LoadedPdbName = 0;\n         DWORD      CVSig;\n-        CHAR[MAX_PATH*3] CVData;\n+        CHAR[MAX_PATH*3] CVData = 0;\n         DWORD      PdbSig;\n         GUID       PdbSig70;\n         DWORD      PdbAge;\n@@ -157,15 +158,15 @@ struct IMAGEHLP_MODULEW64\n     DWORD      CheckSum;\n     DWORD      NumSyms;\n     SYM_TYPE   SymType;\n-    WCHAR[32]  ModuleName;\n-    WCHAR[256] ImageName;\n-    WCHAR[256] LoadedImageName;\n+    WCHAR[32]  ModuleName = 0;\n+    WCHAR[256] ImageName = 0;\n+    WCHAR[256] LoadedImageName = 0;\n     // new elements: 07-Jun-2002\n     version (none)\n     {\n-        WCHAR[256] LoadedPdbName;\n+        WCHAR[256] LoadedPdbName = 0;\n         DWORD      CVSig;\n-        WCHAR[MAX_PATH*3] CVData;\n+        WCHAR[MAX_PATH*3] CVData = 0;\n         DWORD      PdbSig;\n         GUID       PdbSig70;\n         DWORD      PdbAge;\n@@ -190,7 +191,7 @@ struct IMAGEHLP_SYMBOLA64\n     DWORD    Size;\n     DWORD    Flags;\n     DWORD    MaxNameLength;\n-    CHAR[1] Name;\n+    CHAR[1] Name = 0;\n }\n struct IMAGEHLP_SYMBOLW64\n {\n@@ -199,7 +200,7 @@ struct IMAGEHLP_SYMBOLW64\n     DWORD    Size;\n     DWORD    Flags;\n     DWORD    MaxNameLength;\n-    WCHAR[1] Name;\n+    WCHAR[1] Name = 0;\n }\n \n "}, {"sha": "c43f789a333a98414748551f6dfd416f95c8463c", "filename": "libphobos/libdruntime/core/sys/windows/dbt.d", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0da83a168fdca32fec2d6bf8280670d05514c4c4/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fwindows%2Fdbt.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0da83a168fdca32fec2d6bf8280670d05514c4c4/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fwindows%2Fdbt.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fwindows%2Fdbt.d?ref=0da83a168fdca32fec2d6bf8280670d05514c4c4", "patch": "@@ -112,7 +112,7 @@ struct DEV_BROADCAST_PORT_A {\n     DWORD dbcp_size = DEV_BROADCAST_PORT_A.sizeof;\n     DWORD dbcp_devicetype;\n     DWORD dbcp_reserved;\n-    char  _dbcp_name;\n+    char  _dbcp_name = 0;\n     char* dbcp_name() return { return &_dbcp_name; }\n }\n alias DEV_BROADCAST_PORT_A* PDEV_BROADCAST_PORT_A;\n@@ -121,14 +121,14 @@ struct DEV_BROADCAST_PORT_W {\n     DWORD  dbcp_size = DEV_BROADCAST_PORT_W.sizeof;\n     DWORD  dbcp_devicetype;\n     DWORD  dbcp_reserved;\n-    WCHAR  _dbcp_name;\n+    WCHAR  _dbcp_name = 0;\n     WCHAR* dbcp_name() return { return &_dbcp_name; }\n }\n alias DEV_BROADCAST_PORT_W* PDEV_BROADCAST_PORT_W;\n \n struct DEV_BROADCAST_USERDEFINED {\n     DEV_BROADCAST_HDR dbud_dbh;\n-    char  _dbud_szName;\n+    char  _dbud_szName = 0;\n     char* dbud_szName() return { return &_dbud_szName; }\n }\n \n@@ -164,7 +164,7 @@ alias DEV_BROADCAST_PORT* PDEV_BROADCAST_PORT;\n         DWORD  dbcc_devicetype;\n         DWORD  dbcc_reserved;\n         GUID   dbcc_classguid;\n-        WCHAR  _dbcc_name;\n+        WCHAR  _dbcc_name = 0;\n         WCHAR* dbcc_name() return { return &_dbcc_name; }\n     }\n     alias DEV_BROADCAST_DEVICEINTERFACE_W* PDEV_BROADCAST_DEVICEINTERFACE_W;"}, {"sha": "a0cce304d9560b6ded0228faebac175c7736acf8", "filename": "libphobos/libdruntime/core/sys/windows/ddeml.d", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0da83a168fdca32fec2d6bf8280670d05514c4c4/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fwindows%2Fddeml.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0da83a168fdca32fec2d6bf8280670d05514c4c4/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fwindows%2Fddeml.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fwindows%2Fddeml.d?ref=0da83a168fdca32fec2d6bf8280670d05514c4c4", "patch": "@@ -249,7 +249,7 @@ struct MONHSZSTRUCT {\n     DWORD    dwTime;\n     HSZ      hsz;\n     HANDLE   hTask;\n-    TCHAR[1] _str;\n+    TCHAR[1] _str = 0;\n \n     TCHAR* str() return { return _str.ptr; }\n }"}, {"sha": "3d6a15c834cfc6403797a4328c4ba25cc975b554", "filename": "libphobos/libdruntime/core/sys/windows/dll.d", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0da83a168fdca32fec2d6bf8280670d05514c4c4/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fwindows%2Fdll.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0da83a168fdca32fec2d6bf8280670d05514c4c4/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fwindows%2Fdll.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fwindows%2Fdll.d?ref=0da83a168fdca32fec2d6bf8280670d05514c4c4", "patch": "@@ -15,7 +15,8 @@\n module core.sys.windows.dll;\n version (Windows):\n \n-import core.sys.windows.windows;\n+import core.sys.windows.winbase;\n+import core.sys.windows.winnt;\n import core.stdc.string;\n import core.runtime;\n \n@@ -486,12 +487,12 @@ bool dll_thread_detach( bool detach_thread = true, bool exitTls = true )\n /// ---\n mixin template SimpleDllMain()\n {\n-    import core.sys.windows.windows : HINSTANCE;\n+    import core.sys.windows.windef : HINSTANCE;\n \n     extern(Windows)\n     bool DllMain(HINSTANCE hInstance, uint ulReason, void* reserved)\n     {\n-        import core.sys.windows.windows;\n+        import core.sys.windows.winnt;\n         import core.sys.windows.dll :\n             dll_process_attach, dll_process_detach,\n             dll_thread_attach, dll_thread_detach;"}, {"sha": "0be79d755584f61dcde6927ff639ecaf91a926a7", "filename": "libphobos/libdruntime/core/sys/windows/docobj.d", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0da83a168fdca32fec2d6bf8280670d05514c4c4/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fwindows%2Fdocobj.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0da83a168fdca32fec2d6bf8280670d05514c4c4/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fwindows%2Fdocobj.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fwindows%2Fdocobj.d?ref=0da83a168fdca32fec2d6bf8280670d05514c4c4", "patch": "@@ -73,7 +73,7 @@ struct OLECMDTEXT {\n     DWORD cmdtextf;\n     ULONG cwActual;\n     ULONG cwBuf;\n-    wchar[1] rgwz;\n+    wchar[1] rgwz = 0;\n }\n \n struct OLECMD {"}, {"sha": "546523407f29cbeefefcc9d6268eeb30d8dbb214", "filename": "libphobos/libdruntime/core/sys/windows/httpext.d", "status": "modified", "additions": 13, "deletions": 11, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0da83a168fdca32fec2d6bf8280670d05514c4c4/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fwindows%2Fhttpext.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0da83a168fdca32fec2d6bf8280670d05514c4c4/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fwindows%2Fhttpext.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fwindows%2Fhttpext.d?ref=0da83a168fdca32fec2d6bf8280670d05514c4c4", "patch": "@@ -19,7 +19,9 @@ version (Windows):\n        MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n */\n \n-private import core.sys.windows.windows;\n+private import core.sys.windows.basetsd /+: DECLARE_HANDLE, HANDLE+/;\n+private import core.sys.windows.windef /+: BOOL, CHAR, DWORD, LPBYTE, LPDWORD+/;\n+private import core.sys.windows.winnt /+: LPCSTR, LPSTR, LPVOID, PVOID, VOID+/;\n \n enum {\n     HSE_VERSION_MAJOR               = 2,\n@@ -49,7 +51,7 @@ mixin DECLARE_HANDLE!(\"HCONN\");\n \n struct HSE_VERSION_INFO {\n     DWORD dwExtensionVersion;\n-    CHAR[HSE_MAX_EXT_DLL_NAME_LEN] lpszExtensionDesc;\n+    CHAR[HSE_MAX_EXT_DLL_NAME_LEN] lpszExtensionDesc = 0;\n }\n alias HSE_VERSION_INFO* LPHSE_VERSION_INFO;\n \n@@ -58,7 +60,7 @@ struct EXTENSION_CONTROL_BLOCK {\n     DWORD  dwVersion;\n     HCONN  ConnID;\n     DWORD  dwHttpStatusCode;\n-    CHAR[HSE_LOG_BUFFER_LEN] lpszLogData;\n+    CHAR[HSE_LOG_BUFFER_LEN] lpszLogData = 0;\n     LPSTR  lpszMethod;\n     LPSTR  lpszQueryString;\n     LPSTR  lpszPathInfo;\n@@ -67,16 +69,16 @@ struct EXTENSION_CONTROL_BLOCK {\n     DWORD  cbAvailable;\n     LPBYTE lpbData;\n     LPSTR  lpszContentType;\n-    extern(Pascal) BOOL function(HCONN, LPSTR, LPVOID, LPDWORD)\n-      GetServerVariable;\n-    extern(Pascal) BOOL function(HCONN, LPVOID, LPDWORD, DWORD) WriteClient;\n-    extern(Pascal) BOOL function(HCONN, LPVOID, LPDWORD) ReadClient;\n-    extern(Pascal) BOOL function(HCONN, DWORD, LPVOID, LPDWORD, LPDWORD)\n-      ServerSupportFunction;\n+    extern (Windows) {\n+        BOOL function(HCONN, LPSTR, LPVOID, LPDWORD) GetServerVariable;\n+        BOOL function(HCONN, LPVOID, LPDWORD, DWORD) WriteClient;\n+        BOOL function(HCONN, LPVOID, LPDWORD) ReadClient;\n+        BOOL function(HCONN, DWORD, LPVOID, LPDWORD, LPDWORD) ServerSupportFunction;\n+    }\n }\n alias EXTENSION_CONTROL_BLOCK* LPEXTENSION_CONTROL_BLOCK;\n \n-extern (Pascal) {\n+extern (Windows) {\n     alias BOOL function(HSE_VERSION_INFO*) PFN_GETEXTENSIONVERSION;\n     alias DWORD function(EXTENSION_CONTROL_BLOCK*) PFN_HTTPEXTENSIONPROC;\n     alias BOOL function(DWORD) PFN_TERMINATEEXTENSION;\n@@ -107,7 +109,7 @@ struct HSE_SEND_HEADER_EX_INFO {\n }\n alias HSE_SEND_HEADER_EX_INFO* LPHSE_SEND_HEADER_EX_INF;\n \n-extern (Pascal) {\n+extern (Windows) {\n     BOOL GetExtensionVersion(HSE_VERSION_INFO*);\n     DWORD HttpExtensionProc(EXTENSION_CONTROL_BLOCK*);\n     BOOL TerminateExtension(DWORD);"}, {"sha": "b77ef76104736fbb3ef3d4b1235cb4064cf6f59f", "filename": "libphobos/libdruntime/core/sys/windows/imagehlp.d", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0da83a168fdca32fec2d6bf8280670d05514c4c4/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fwindows%2Fimagehlp.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0da83a168fdca32fec2d6bf8280670d05514c4c4/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fwindows%2Fimagehlp.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fwindows%2Fimagehlp.d?ref=0da83a168fdca32fec2d6bf8280670d05514c4c4", "patch": "@@ -230,7 +230,7 @@ struct IMAGEHLP_SYMBOL {\n     DWORD   Size;\n     DWORD   Flags;\n     DWORD   MaxNameLength;\n-    CHAR[1] Name;\n+    CHAR[1] Name = 0;\n }\n alias IMAGEHLP_SYMBOL* PIMAGEHLP_SYMBOL;\n \n@@ -242,9 +242,9 @@ struct IMAGEHLP_MODULE {\n     DWORD     CheckSum;\n     DWORD     NumSyms;\n     SYM_TYPE  SymType;\n-    CHAR[32]  ModuleName;\n-    CHAR[256] ImageName;\n-    CHAR[256] LoadedImageName;\n+    CHAR[32]  ModuleName = 0;\n+    CHAR[256] ImageName = 0;\n+    CHAR[256] LoadedImageName = 0;\n }\n alias IMAGEHLP_MODULE* PIMAGEHLP_MODULE;\n \n@@ -262,7 +262,7 @@ struct IMAGEHLP_DEFERRED_SYMBOL_LOAD {\n     DWORD          BaseOfImage;\n     DWORD          CheckSum;\n     DWORD          TimeDateStamp;\n-    CHAR[MAX_PATH] FileName;\n+    CHAR[MAX_PATH] FileName = 0;\n     BOOLEAN        Reparse;\n }\n alias IMAGEHLP_DEFERRED_SYMBOL_LOAD* PIMAGEHLP_DEFERRED_SYMBOL_LOAD;"}, {"sha": "5a55d04b38abd6c8d42692263a1390ebf27c8499", "filename": "libphobos/libdruntime/core/sys/windows/imm.d", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0da83a168fdca32fec2d6bf8280670d05514c4c4/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fwindows%2Fimm.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0da83a168fdca32fec2d6bf8280670d05514c4c4/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fwindows%2Fimm.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fwindows%2Fimm.d?ref=0da83a168fdca32fec2d6bf8280670d05514c4c4", "patch": "@@ -320,13 +320,13 @@ alias REGISTERWORDW* PREGISTERWORDW, LPREGISTERWORDW;\n \n struct STYLEBUFA{\n     DWORD dwStyle;\n-    CHAR[STYLE_DESCRIPTION_SIZE] szDescription;\n+    CHAR[STYLE_DESCRIPTION_SIZE] szDescription = 0;\n }\n alias STYLEBUFA* PSTYLEBUFA, LPSTYLEBUFA;\n \n struct STYLEBUFW{\n     DWORD dwStyle;\n-    WCHAR[STYLE_DESCRIPTION_SIZE] szDescription;\n+    WCHAR[STYLE_DESCRIPTION_SIZE] szDescription = 0;\n }\n alias STYLEBUFW* PSTYLEBUFW, LPSTYLEBUFW;\n \n@@ -338,7 +338,7 @@ struct IMEMENUITEMINFOA{\n     HBITMAP hbmpChecked;\n     HBITMAP hbmpUnchecked;\n     DWORD dwItemData;\n-    CHAR[IMEMENUITEM_STRING_SIZE] szString;\n+    CHAR[IMEMENUITEM_STRING_SIZE] szString = 0;\n     HBITMAP hbmpItem;\n }\n alias IMEMENUITEMINFOA* PIMEMENUITEMINFOA, LPIMEMENUITEMINFOA;\n@@ -351,7 +351,7 @@ struct IMEMENUITEMINFOW{\n     HBITMAP hbmpChecked;\n     HBITMAP hbmpUnchecked;\n     DWORD dwItemData;\n-    WCHAR[IMEMENUITEM_STRING_SIZE] szString;\n+    WCHAR[IMEMENUITEM_STRING_SIZE] szString = 0;\n     HBITMAP hbmpItem;\n }\n alias IMEMENUITEMINFOW* PIMEMENUITEMINFOW, LPIMEMENUITEMINFOW;"}, {"sha": "c9fcbd33a9ca8c6d260e73766f97fda17c5ff48d", "filename": "libphobos/libdruntime/core/sys/windows/ipexport.d", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0da83a168fdca32fec2d6bf8280670d05514c4c4/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fwindows%2Fipexport.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0da83a168fdca32fec2d6bf8280670d05514c4c4/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fwindows%2Fipexport.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fwindows%2Fipexport.d?ref=0da83a168fdca32fec2d6bf8280670d05514c4c4", "patch": "@@ -87,7 +87,7 @@ alias ICMP_ECHO_REPLY* PICMP_ECHO_REPLY;\n \n struct IP_ADAPTER_INDEX_MAP {\n     ULONG                   Index;\n-    WCHAR[MAX_ADAPTER_NAME] Name;\n+    WCHAR[MAX_ADAPTER_NAME] Name = 0;\n }\n alias IP_ADAPTER_INDEX_MAP* PIP_ADAPTER_INDEX_MAP;\n "}, {"sha": "4365723a50e7c72617aa5f4aea9c71e02a0603f4", "filename": "libphobos/libdruntime/core/sys/windows/iprtrmib.d", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0da83a168fdca32fec2d6bf8280670d05514c4c4/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fwindows%2Fiprtrmib.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0da83a168fdca32fec2d6bf8280670d05514c4c4/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fwindows%2Fiprtrmib.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fwindows%2Fiprtrmib.d?ref=0da83a168fdca32fec2d6bf8280670d05514c4c4", "patch": "@@ -145,7 +145,7 @@ struct MIB_ICMP {\n alias MIB_ICMP* PMIB_ICMP;\n \n struct MIB_IFROW {\n-    WCHAR[MAX_INTERFACE_NAME_LEN] wszName;\n+    WCHAR[MAX_INTERFACE_NAME_LEN] wszName = 0;\n     DWORD dwIndex;\n     DWORD dwType;\n     DWORD dwMtu;"}, {"sha": "ada3e9cca583b110a97687a10c09245f54a8a9e0", "filename": "libphobos/libdruntime/core/sys/windows/iptypes.d", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0da83a168fdca32fec2d6bf8280670d05514c4c4/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fwindows%2Fiptypes.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0da83a168fdca32fec2d6bf8280670d05514c4c4/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fwindows%2Fiptypes.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fwindows%2Fiptypes.d?ref=0da83a168fdca32fec2d6bf8280670d05514c4c4", "patch": "@@ -39,7 +39,7 @@ enum : UINT {\n }\n \n struct IP_ADDRESS_STRING {\n-    char[16] String;\n+    char[16] String = 0;\n }\n alias IP_ADDRESS_STRING IP_MASK_STRING;\n alias IP_ADDRESS_STRING* PIP_ADDRESS_STRING, PIP_MASK_STRING;\n@@ -55,10 +55,10 @@ alias IP_ADDR_STRING* PIP_ADDR_STRING;\n struct IP_ADAPTER_INFO {\n     IP_ADAPTER_INFO* Next;\n     DWORD ComboIndex;\n-    char[MAX_ADAPTER_NAME_LENGTH+4]        AdapterName;\n-    char[MAX_ADAPTER_DESCRIPTION_LENGTH+4] Description;\n+    char[MAX_ADAPTER_NAME_LENGTH+4]        AdapterName = 0;\n+    char[MAX_ADAPTER_DESCRIPTION_LENGTH+4] Description = 0;\n     UINT             AddressLength;\n-    BYTE[MAX_ADAPTER_ADDRESS_LENGTH]       Address;\n+    BYTE[MAX_ADAPTER_ADDRESS_LENGTH]       Address = 0;\n     DWORD            Index;\n     UINT             Type;\n     UINT             DhcpEnabled;\n@@ -83,12 +83,12 @@ struct IP_PER_ADAPTER_INFO {\n alias IP_PER_ADAPTER_INFO* PIP_PER_ADAPTER_INFO;\n \n struct FIXED_INFO {\n-    char[MAX_HOSTNAME_LEN+4]    HostName;\n-    char[MAX_DOMAIN_NAME_LEN+4] DomainName;\n+    char[MAX_HOSTNAME_LEN+4]    HostName = 0;\n+    char[MAX_DOMAIN_NAME_LEN+4] DomainName = 0;\n     PIP_ADDR_STRING             CurrentDnsServer;\n     IP_ADDR_STRING              DnsServerList;\n     UINT                        NodeType;\n-    char[MAX_SCOPE_ID_LEN+4]    ScopeId;\n+    char[MAX_SCOPE_ID_LEN+4]    ScopeId = 0;\n     UINT                        EnableRouting;\n     UINT                        EnableProxy;\n     UINT                        EnableDns;"}, {"sha": "53acff035b5a173e8ab5626f1d86e0a507cac6ad", "filename": "libphobos/libdruntime/core/sys/windows/lmalert.d", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0da83a168fdca32fec2d6bf8280670d05514c4c4/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fwindows%2Flmalert.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0da83a168fdca32fec2d6bf8280670d05514c4c4/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fwindows%2Flmalert.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fwindows%2Flmalert.d?ref=0da83a168fdca32fec2d6bf8280670d05514c4c4", "patch": "@@ -46,8 +46,8 @@ alias ADMIN_OTHER_INFO* PADMIN_OTHER_INFO, LPADMIN_OTHER_INFO;\n \n struct STD_ALERT{\n     DWORD alrt_timestamp;\n-    TCHAR[EVLEN+1] alrt_eventname;\n-    TCHAR[SNLEN+1] alrt_servicename;\n+    TCHAR[EVLEN+1] alrt_eventname = 0;\n+    TCHAR[SNLEN+1] alrt_servicename = 0;\n }\n alias STD_ALERT* PSTD_ALERT, LPSTD_ALERT;\n "}, {"sha": "2f8f03b8ab0ab688e892828b5bcf121d148bbfb1", "filename": "libphobos/libdruntime/core/sys/windows/mapi.d", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0da83a168fdca32fec2d6bf8280670d05514c4c4/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fwindows%2Fmapi.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0da83a168fdca32fec2d6bf8280670d05514c4c4/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fwindows%2Fmapi.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fwindows%2Fmapi.d?ref=0da83a168fdca32fec2d6bf8280670d05514c4c4", "patch": "@@ -124,7 +124,7 @@ struct MapiMessage {\n }\n alias MapiMessage* lpMapiMessage;\n \n-extern (Pascal) {\n+extern (Windows) {\n     ULONG MAPILogon(ULONG_PTR, LPSTR, LPSTR, FLAGS, ULONG, LPLHANDLE);\n     ULONG MAPISendMail(LHANDLE, ULONG_PTR, lpMapiMessage, FLAGS, ULONG);\n     ULONG MAPISendDocuments(ULONG_PTR, LPSTR, LPSTR, LPSTR, ULONG);"}, {"sha": "ceb4c3d513a3f4ac7dbcac28c14dee00c793f594", "filename": "libphobos/libdruntime/core/sys/windows/mmsystem.d", "status": "modified", "additions": 30, "deletions": 30, "changes": 60, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0da83a168fdca32fec2d6bf8280670d05514c4c4/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fwindows%2Fmmsystem.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0da83a168fdca32fec2d6bf8280670d05514c4c4/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fwindows%2Fmmsystem.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fwindows%2Fmmsystem.d?ref=0da83a168fdca32fec2d6bf8280670d05514c4c4", "patch": "@@ -1106,7 +1106,7 @@ struct WAVEOUTCAPSA {\n     WORD wMid;\n     WORD wPid;\n     MMVERSION vDriverVersion;\n-    CHAR[MAXPNAMELEN] szPname;\n+    CHAR[MAXPNAMELEN] szPname = 0;\n     DWORD dwFormats;\n     WORD wChannels;\n     WORD wReserved1;\n@@ -1118,7 +1118,7 @@ struct WAVEOUTCAPSW {\n     WORD wMid;\n     WORD wPid;\n     MMVERSION vDriverVersion;\n-    WCHAR[MAXPNAMELEN] szPname;\n+    WCHAR[MAXPNAMELEN] szPname = 0;\n     DWORD dwFormats;\n     WORD wChannels;\n     WORD wReserved1;\n@@ -1130,7 +1130,7 @@ struct WAVEINCAPSA {\n     WORD wMid;\n     WORD wPid;\n     MMVERSION vDriverVersion;\n-    CHAR[MAXPNAMELEN] szPname;\n+    CHAR[MAXPNAMELEN] szPname = 0;\n     DWORD dwFormats;\n     WORD wChannels;\n     WORD wReserved1;\n@@ -1141,7 +1141,7 @@ struct WAVEINCAPSW {\n     WORD wMid;\n     WORD wPid;\n     MMVERSION vDriverVersion;\n-    WCHAR[MAXPNAMELEN] szPname;\n+    WCHAR[MAXPNAMELEN] szPname = 0;\n     DWORD dwFormats;\n     WORD wChannels;\n     WORD wReserved1;\n@@ -1194,7 +1194,7 @@ struct MIDIOUTCAPSA {\n     WORD wMid;\n     WORD wPid;\n     MMVERSION vDriverVersion;\n-    CHAR[MAXPNAMELEN] szPname;\n+    CHAR[MAXPNAMELEN] szPname = 0;\n     WORD wTechnology;\n     WORD wVoices;\n     WORD wNotes;\n@@ -1207,7 +1207,7 @@ struct MIDIOUTCAPSW {\n     WORD wMid;\n     WORD wPid;\n     MMVERSION vDriverVersion;\n-    WCHAR[MAXPNAMELEN] szPname;\n+    WCHAR[MAXPNAMELEN] szPname = 0;\n     WORD wTechnology;\n     WORD wVoices;\n     WORD wNotes;\n@@ -1220,7 +1220,7 @@ struct MIDIINCAPSA {\n     WORD wMid;\n     WORD wPid;\n     MMVERSION vDriverVersion;\n-    CHAR[MAXPNAMELEN] szPname;\n+    CHAR[MAXPNAMELEN] szPname = 0;\n     DWORD dwSupport;\n }\n alias MIDIINCAPSA* PMIDIINCAPSA, LPMIDIINCAPSA;\n@@ -1229,7 +1229,7 @@ struct MIDIINCAPSW {\n     WORD wMid;\n     WORD wPid;\n     MMVERSION vDriverVersion;\n-    WCHAR[MAXPNAMELEN] szPname;\n+    WCHAR[MAXPNAMELEN] szPname = 0;\n     DWORD dwSupport;\n }\n alias MIDIINCAPSW* PMIDIINCAPSW, LPMIDIINCAPSW;\n@@ -1277,7 +1277,7 @@ struct AUXCAPSA {\n     WORD wMid;\n     WORD wPid;\n     MMVERSION vDriverVersion;\n-    CHAR[MAXPNAMELEN] szPname;\n+    CHAR[MAXPNAMELEN] szPname = 0;\n     WORD wTechnology;\n     WORD wReserved1;\n     DWORD dwSupport;\n@@ -1288,7 +1288,7 @@ struct AUXCAPSW {\n     WORD wMid;\n     WORD wPid;\n     MMVERSION vDriverVersion;\n-    WCHAR[MAXPNAMELEN] szPname;\n+    WCHAR[MAXPNAMELEN] szPname = 0;\n     WORD wTechnology;\n     WORD wReserved1;\n     DWORD dwSupport;\n@@ -1305,7 +1305,7 @@ struct MIXERCAPSA {\n     WORD wMid;\n     WORD wPid;\n     MMVERSION vDriverVersion;\n-    CHAR[MAXPNAMELEN] szPname;\n+    CHAR[MAXPNAMELEN] szPname = 0;\n     DWORD fdwSupport;\n     DWORD cDestinations;\n }\n@@ -1315,7 +1315,7 @@ struct MIXERCAPSW {\n     WORD wMid;\n     WORD wPid;\n     MMVERSION vDriverVersion;\n-    WCHAR[MAXPNAMELEN] szPname;\n+    WCHAR[MAXPNAMELEN] szPname = 0;\n     DWORD fdwSupport;\n     DWORD cDestinations;\n }\n@@ -1333,15 +1333,15 @@ align(1):\n     DWORD cChannels;\n     DWORD cConnections;\n     DWORD cControls;\n-    CHAR[MIXER_SHORT_NAME_CHARS] szShortName;\n-    CHAR[MIXER_LONG_NAME_CHARS] szName;\n+    CHAR[MIXER_SHORT_NAME_CHARS] szShortName = 0;\n+    CHAR[MIXER_LONG_NAME_CHARS] szName = 0;\n     struct _Target {\n         DWORD dwType;\n         DWORD dwDeviceID;\n         WORD wMid;\n         WORD wPid;\n         MMVERSION vDriverVersion;\n-        CHAR[MAXPNAMELEN] szPname;\n+        CHAR[MAXPNAMELEN] szPname = 0;\n     }\n     _Target Target;\n }\n@@ -1359,15 +1359,15 @@ align(1):\n     DWORD cChannels;\n     DWORD cConnections;\n     DWORD cControls;\n-    WCHAR[MIXER_SHORT_NAME_CHARS] szShortName;\n-    WCHAR[MIXER_LONG_NAME_CHARS] szName;\n+    WCHAR[MIXER_SHORT_NAME_CHARS] szShortName = 0;\n+    WCHAR[MIXER_LONG_NAME_CHARS] szName = 0;\n     struct _Target {\n         DWORD dwType;\n         DWORD dwDeviceID;\n         WORD wMid;\n         WORD wPid;\n         MMVERSION vDriverVersion;\n-        WCHAR[MAXPNAMELEN] szPname;\n+        WCHAR[MAXPNAMELEN] szPname = 0;\n     }\n     _Target Target;\n }\n@@ -1379,8 +1379,8 @@ struct MIXERCONTROLA {\n     DWORD dwControlType;\n     DWORD fdwControl;\n     DWORD cMultipleItems;\n-    CHAR[MIXER_SHORT_NAME_CHARS] szShortName;\n-    CHAR[MIXER_LONG_NAME_CHARS] szName;\n+    CHAR[MIXER_SHORT_NAME_CHARS] szShortName = 0;\n+    CHAR[MIXER_LONG_NAME_CHARS] szName = 0;\n     union _Bounds {\n         struct {\n             LONG lMinimum;\n@@ -1408,8 +1408,8 @@ struct MIXERCONTROLW {\n     DWORD dwControlType;\n     DWORD fdwControl;\n     DWORD cMultipleItems;\n-    WCHAR[MIXER_SHORT_NAME_CHARS] szShortName;\n-    WCHAR[MIXER_LONG_NAME_CHARS] szName;\n+    WCHAR[MIXER_SHORT_NAME_CHARS] szShortName = 0;\n+    WCHAR[MIXER_LONG_NAME_CHARS] szName = 0;\n     union _Bounds {\n         struct {\n             LONG lMinimum;\n@@ -1477,14 +1477,14 @@ alias MIXERCONTROLDETAILS* PMIXERCONTROLDETAILS, LPMIXERCONTROLDETAILS;\n struct MIXERCONTROLDETAILS_LISTTEXTA {\n     DWORD dwParam1;\n     DWORD dwParam2;\n-    CHAR[MIXER_LONG_NAME_CHARS] szName;\n+    CHAR[MIXER_LONG_NAME_CHARS] szName = 0;\n }\n alias MIXERCONTROLDETAILS_LISTTEXTA* PMIXERCONTROLDETAILS_LISTTEXTA, LPMIXERCONTROLDETAILS_LISTTEXTA;\n \n struct MIXERCONTROLDETAILS_LISTTEXTW {\n     DWORD dwParam1;\n     DWORD dwParam2;\n-    WCHAR[MIXER_LONG_NAME_CHARS] szName;\n+    WCHAR[MIXER_LONG_NAME_CHARS] szName = 0;\n }\n alias MIXERCONTROLDETAILS_LISTTEXTW* PMIXERCONTROLDETAILS_LISTTEXTW, LPMIXERCONTROLDETAILS_LISTTEXTW;\n \n@@ -1514,7 +1514,7 @@ alias TIMECAPS* PTIMECAPS, LPTIMECAPS;\n struct JOYCAPSA {\n     WORD wMid;\n     WORD wPid;\n-    CHAR[MAXPNAMELEN] szPname;\n+    CHAR[MAXPNAMELEN] szPname = 0;\n     UINT wXmin;\n     UINT wXmax;\n     UINT wYmin;\n@@ -1534,15 +1534,15 @@ struct JOYCAPSA {\n     UINT wMaxAxes;\n     UINT wNumAxes;\n     UINT wMaxButtons;\n-    CHAR[MAXPNAMELEN] szRegKey;\n-    CHAR[MAX_JOYSTICKOEMVXDNAME] szOEMVxD;\n+    CHAR[MAXPNAMELEN] szRegKey = 0;\n+    CHAR[MAX_JOYSTICKOEMVXDNAME] szOEMVxD = 0;\n }\n alias JOYCAPSA* PJOYCAPSA, LPJOYCAPSA;\n \n struct JOYCAPSW {\n     WORD wMid;\n     WORD wPid;\n-    WCHAR[MAXPNAMELEN] szPname;\n+    WCHAR[MAXPNAMELEN] szPname = 0;\n     UINT wXmin;\n     UINT wXmax;\n     UINT wYmin;\n@@ -1562,8 +1562,8 @@ struct JOYCAPSW {\n     UINT wMaxAxes;\n     UINT wNumAxes;\n     UINT wMaxButtons;\n-    WCHAR[MAXPNAMELEN] szRegKey;\n-    WCHAR[MAX_JOYSTICKOEMVXDNAME] szOEMVxD;\n+    WCHAR[MAXPNAMELEN] szRegKey = 0;\n+    WCHAR[MAX_JOYSTICKOEMVXDNAME] szOEMVxD = 0;\n }\n alias JOYCAPSW* PJOYCAPSW, LPJOYCAPSW;\n "}, {"sha": "c6bf8af248eefb0ce1de8fa929ddc2968a3c2040", "filename": "libphobos/libdruntime/core/sys/windows/msacm.d", "status": "modified", "additions": 14, "deletions": 14, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0da83a168fdca32fec2d6bf8280670d05514c4c4/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fwindows%2Fmsacm.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0da83a168fdca32fec2d6bf8280670d05514c4c4/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fwindows%2Fmsacm.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fwindows%2Fmsacm.d?ref=0da83a168fdca32fec2d6bf8280670d05514c4c4", "patch": "@@ -38,7 +38,7 @@ struct ACMFORMATDETAILSA {\n     DWORD          fdwSupport;\n     LPWAVEFORMATEX pwfx;\n     DWORD          cbwfx;\n-    char[ACMFORMATDETAILS_FORMAT_CHARS] szFormat;\n+    char[ACMFORMATDETAILS_FORMAT_CHARS] szFormat = 0;\n }\n alias ACMFORMATDETAILSA* LPACMFORMATDETAILSA;\n \n@@ -49,7 +49,7 @@ struct ACMFORMATDETAILSW {\n     DWORD          fdwSupport;\n     LPWAVEFORMATEX pwfx;\n     DWORD          cbwfx;\n-    WCHAR[ACMFORMATDETAILS_FORMAT_CHARS] szFormat;\n+    WCHAR[ACMFORMATDETAILS_FORMAT_CHARS] szFormat = 0;\n }\n alias ACMFORMATDETAILSW* LPACMFORMATDETAILSW;\n \n@@ -60,7 +60,7 @@ struct ACMFORMATTAGDETAILSA {\n     DWORD cbFormatSize;\n     DWORD fdwSupport;\n     DWORD cStandardFormats;\n-    char[ACMFORMATTAGDETAILS_FORMATTAG_CHARS] szFormatTag;\n+    char[ACMFORMATTAGDETAILS_FORMATTAG_CHARS] szFormatTag = 0;\n }\n alias ACMFORMATTAGDETAILSA* LPACMFORMATTAGDETAILSA;\n \n@@ -71,7 +71,7 @@ struct ACMFORMATTAGDETAILSW {\n     DWORD cbFormatSize;\n     DWORD fdwSupport;\n     DWORD cStandardFormats;\n-    WCHAR[ACMFORMATTAGDETAILS_FORMATTAG_CHARS] szFormatTag;\n+    WCHAR[ACMFORMATTAGDETAILS_FORMATTAG_CHARS] szFormatTag = 0;\n }\n alias ACMFORMATTAGDETAILSW* LPACMFORMATTAGDETAILSW;\n \n@@ -88,11 +88,11 @@ align(1):\n     DWORD  cFormatTags;\n     DWORD  cFilterTags;\n     HICON  hicon;\n-    char[ACMDRIVERDETAILS_SHORTNAME_CHARS] szShortName;\n-    char[ACMDRIVERDETAILS_LONGNAME_CHARS]  szLongName;\n-    char[ACMDRIVERDETAILS_COPYRIGHT_CHARS] szCopyright;\n-    char[ACMDRIVERDETAILS_LICENSING_CHARS] szLicensing;\n-    char[ACMDRIVERDETAILS_FEATURES_CHARS]  szFeatures;\n+    char[ACMDRIVERDETAILS_SHORTNAME_CHARS] szShortName = 0;\n+    char[ACMDRIVERDETAILS_LONGNAME_CHARS]  szLongName = 0;\n+    char[ACMDRIVERDETAILS_COPYRIGHT_CHARS] szCopyright = 0;\n+    char[ACMDRIVERDETAILS_LICENSING_CHARS] szLicensing = 0;\n+    char[ACMDRIVERDETAILS_FEATURES_CHARS]  szFeatures = 0;\n }\n alias ACMDRIVERDETAILSA* LPACMDRIVERDETAILSA;\n \n@@ -109,11 +109,11 @@ align(1):\n     DWORD  cFormatTags;\n     DWORD  cFilterTags;\n     HICON  hicon;\n-    WCHAR[ACMDRIVERDETAILS_SHORTNAME_CHARS] szShortName;\n-    WCHAR[ACMDRIVERDETAILS_LONGNAME_CHARS]  szLongName;\n-    WCHAR[ACMDRIVERDETAILS_COPYRIGHT_CHARS] szCopyright;\n-    WCHAR[ACMDRIVERDETAILS_LICENSING_CHARS] szLicensing;\n-    WCHAR[ACMDRIVERDETAILS_FEATURES_CHARS]  szFeatures;\n+    WCHAR[ACMDRIVERDETAILS_SHORTNAME_CHARS] szShortName = 0;\n+    WCHAR[ACMDRIVERDETAILS_LONGNAME_CHARS]  szLongName = 0;\n+    WCHAR[ACMDRIVERDETAILS_COPYRIGHT_CHARS] szCopyright = 0;\n+    WCHAR[ACMDRIVERDETAILS_LICENSING_CHARS] szLicensing = 0;\n+    WCHAR[ACMDRIVERDETAILS_FEATURES_CHARS]  szFeatures = 0;\n }\n alias ACMDRIVERDETAILSW* LPACMDRIVERDETAILSW;\n "}, {"sha": "7b3367705b15087ce9d88ddb04af2a7fe4049f64", "filename": "libphobos/libdruntime/core/sys/windows/objidl.d", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0da83a168fdca32fec2d6bf8280670d05514c4c4/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fwindows%2Fobjidl.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0da83a168fdca32fec2d6bf8280670d05514c4c4/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fwindows%2Fobjidl.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fwindows%2Fobjidl.d?ref=0da83a168fdca32fec2d6bf8280670d05514c4c4", "patch": "@@ -249,7 +249,7 @@ enum MKREDUCE {\n struct RemSNB {\n     uint ulCntStr;\n     uint ulCntChar;\n-    OLECHAR[1] rgString;\n+    OLECHAR[1] rgString = 0;\n }\n \n enum ADVF {\n@@ -391,7 +391,7 @@ struct PROPVARIANT {\n     WORD wReserved2;\n     WORD wReserved3;\n     union {\n-        CHAR cVal;\n+        CHAR cVal = 0;\n         UCHAR bVal;\n         short iVal;\n         USHORT uiVal;"}, {"sha": "732d302ac0271f2846be9611ae967e4f9cc5a2d4", "filename": "libphobos/libdruntime/core/sys/windows/oledlg.d", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0da83a168fdca32fec2d6bf8280670d05514c4c4/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fwindows%2Foledlg.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0da83a168fdca32fec2d6bf8280670d05514c4c4/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fwindows%2Foledlg.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fwindows%2Foledlg.d?ref=0da83a168fdca32fec2d6bf8280670d05514c4c4", "patch": "@@ -11,8 +11,7 @@ version (Windows):\n \n version (ANSI) {} else version = Unicode;\n \n-import core.sys.windows.commdlg, core.sys.windows.dlgs, core.sys.windows.ole2, core.sys.windows.prsht, core.sys.windows.shellapi,\n-  core.sys.windows.windows;\n+import core.sys.windows.commdlg, core.sys.windows.dlgs, core.sys.windows.ole2, core.sys.windows.prsht, core.sys.windows.shellapi;\n private import core.sys.windows.winbase, core.sys.windows.objidl, core.sys.windows.objfwd, core.sys.windows.winnt;\n \n // FIXME: remove inherited methods from interface definitions\n@@ -546,7 +545,7 @@ struct OLEUICHANGEICONW {\n     HRSRC hResource;\n     HGLOBAL hMetaPict;\n     CLSID clsid;\n-    WCHAR[MAX_PATH] szIconExe;\n+    WCHAR[MAX_PATH] szIconExe = 0;\n     int cchIconExe;\n }\n alias OLEUICHANGEICONW* POLEUICHANGEICONW, LPOLEUICHANGEICONW;\n@@ -563,7 +562,7 @@ struct OLEUICHANGEICONA {\n     HRSRC hResource;\n     HGLOBAL hMetaPict;\n     CLSID clsid;\n-    CHAR[MAX_PATH] szIconExe;\n+    CHAR[MAX_PATH] szIconExe = 0;\n     int cchIconExe;\n }\n alias OLEUICHANGEICONA* POLEUICHANGEICONA, LPOLEUICHANGEICONA;"}, {"sha": "479aa3ba0bf234738f4be97d88d78b598386d6bd", "filename": "libphobos/libdruntime/core/sys/windows/ras.d", "status": "modified", "additions": 90, "deletions": 90, "changes": 180, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0da83a168fdca32fec2d6bf8280670d05514c4c4/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fwindows%2Fras.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0da83a168fdca32fec2d6bf8280670d05514c4c4/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fwindows%2Fras.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fwindows%2Fras.d?ref=0da83a168fdca32fec2d6bf8280670d05514c4c4", "patch": "@@ -231,12 +231,12 @@ align(4):\n     DWORD dwSize;\n     HRASCONN hrasconn;\n     align {\n-    WCHAR[RAS_MaxEntryName + 1] szEntryName;\n-    WCHAR[RAS_MaxDeviceType + 1] szDeviceType;\n-    WCHAR[RAS_MaxDeviceName + 1] szDeviceName;\n+    WCHAR[RAS_MaxEntryName + 1] szEntryName = 0;\n+    WCHAR[RAS_MaxDeviceType + 1] szDeviceType = 0;\n+    WCHAR[RAS_MaxDeviceName + 1] szDeviceName = 0;\n     }\n     //static if (_WIN32_WINNT >= 0x401) {\n-        WCHAR[MAX_PATH] szPhonebook;\n+        WCHAR[MAX_PATH] szPhonebook = 0;\n         DWORD dwSubEntry;\n     //}\n     //static if (_WIN32_WINNT >= 0x500) {\n@@ -254,12 +254,12 @@ align(4):\n     DWORD dwSize;\n     HRASCONN hrasconn;\n     align {\n-    CHAR[RAS_MaxEntryName + 1] szEntryName;\n-    CHAR[RAS_MaxDeviceType + 1] szDeviceType;\n-    CHAR[RAS_MaxDeviceName + 1] szDeviceName;\n+    CHAR[RAS_MaxEntryName + 1] szEntryName = 0;\n+    CHAR[RAS_MaxDeviceType + 1] szDeviceType = 0;\n+    CHAR[RAS_MaxDeviceName + 1] szDeviceName = 0;\n     }\n     //static if (_WIN32_WINNT >= 0x401) {\n-        CHAR[MAX_PATH] szPhonebook;\n+        CHAR[MAX_PATH] szPhonebook = 0;\n         DWORD dwSubEntry;\n     //}\n     //static if (_WIN32_WINNT >= 0x500) {\n@@ -276,10 +276,10 @@ struct RASCONNSTATUSW {\n     DWORD dwSize;\n     RASCONNSTATE rasconnstate;\n     DWORD dwError;\n-    WCHAR[RAS_MaxDeviceType + 1] szDeviceType;\n-    WCHAR[RAS_MaxDeviceName + 1] szDeviceName;\n+    WCHAR[RAS_MaxDeviceType + 1] szDeviceType = 0;\n+    WCHAR[RAS_MaxDeviceName + 1] szDeviceName = 0;\n     static if (_WIN32_WINNT >= 0x401) {\n-        WCHAR[RAS_MaxPhoneNumber + 1] szPhoneNumber;\n+        WCHAR[RAS_MaxPhoneNumber + 1] szPhoneNumber = 0;\n     }\n }\n alias RASCONNSTATUSW* LPRASCONNSTATUSW;\n@@ -288,10 +288,10 @@ struct RASCONNSTATUSA {\n     DWORD dwSize;\n     RASCONNSTATE rasconnstate;\n     DWORD dwError;\n-    CHAR[RAS_MaxDeviceType + 1] szDeviceType;\n-    CHAR[RAS_MaxDeviceName + 1] szDeviceName;\n+    CHAR[RAS_MaxDeviceType + 1] szDeviceType = 0;\n+    CHAR[RAS_MaxDeviceName + 1] szDeviceName = 0;\n     static if (_WIN32_WINNT >= 0x401) {\n-        CHAR[RAS_MaxPhoneNumber + 1] szPhoneNumber;\n+        CHAR[RAS_MaxPhoneNumber + 1] szPhoneNumber = 0;\n     }\n }\n alias RASCONNSTATUSA* LPRASCONNSTATUSA;\n@@ -300,12 +300,12 @@ struct RASDIALPARAMSW {\n align(4):\n     DWORD dwSize;\n align {\n-    WCHAR[RAS_MaxEntryName + 1] szEntryName;\n-    WCHAR[RAS_MaxPhoneNumber + 1] szPhoneNumber;\n-    WCHAR[RAS_MaxCallbackNumber + 1] szCallbackNumber;\n-    WCHAR[UNLEN + 1] szUserName;\n-    WCHAR[PWLEN + 1] szPassword;\n-    WCHAR[DNLEN + 1] szDomain;\n+    WCHAR[RAS_MaxEntryName + 1] szEntryName = 0;\n+    WCHAR[RAS_MaxPhoneNumber + 1] szPhoneNumber = 0;\n+    WCHAR[RAS_MaxCallbackNumber + 1] szCallbackNumber = 0;\n+    WCHAR[UNLEN + 1] szUserName = 0;\n+    WCHAR[PWLEN + 1] szPassword = 0;\n+    WCHAR[DNLEN + 1] szDomain = 0;\n }\n     static if (_WIN32_WINNT >= 0x401) {\n         DWORD dwSubEntry;\n@@ -318,12 +318,12 @@ struct RASDIALPARAMSA{\n align(4):\n     DWORD dwSize;\n align {\n-    CHAR[RAS_MaxEntryName + 1] szEntryName;\n-    CHAR[RAS_MaxPhoneNumber + 1] szPhoneNumber;\n-    CHAR[RAS_MaxCallbackNumber + 1] szCallbackNumber;\n-    CHAR[UNLEN + 1] szUserName;\n-    CHAR[PWLEN + 1] szPassword;\n-    CHAR[DNLEN + 1] szDomain;\n+    CHAR[RAS_MaxEntryName + 1] szEntryName = 0;\n+    CHAR[RAS_MaxPhoneNumber + 1] szPhoneNumber = 0;\n+    CHAR[RAS_MaxCallbackNumber + 1] szCallbackNumber = 0;\n+    CHAR[UNLEN + 1] szUserName = 0;\n+    CHAR[PWLEN + 1] szPassword = 0;\n+    CHAR[DNLEN + 1] szDomain = 0;\n }\n     static if (_WIN32_WINNT >= 0x401) {\n         DWORD dwSubEntry;\n@@ -355,36 +355,36 @@ alias RASDIALEXTENSIONS* LPRASDIALEXTENSIONS;\n \n struct RASENTRYNAMEW {\n     DWORD dwSize;\n-    WCHAR[RAS_MaxEntryName + 1] szEntryName;\n+    WCHAR[RAS_MaxEntryName + 1] szEntryName = 0;\n     //static if (_WIN32_WINNT >= 0x500) {\n         DWORD dwFlags;\n-        WCHAR[MAX_PATH + 1] szPhonebookPath;\n+        WCHAR[MAX_PATH + 1] szPhonebookPath = 0;\n     //}\n }\n alias RASENTRYNAMEW* LPRASENTRYNAMEW;\n \n struct RASENTRYNAMEA{\n     DWORD dwSize;\n-    CHAR[RAS_MaxEntryName + 1] szEntryName;\n+    CHAR[RAS_MaxEntryName + 1] szEntryName = 0;\n     //static if (_WIN32_WINNT >= 0x500) {\n         DWORD dwFlags;\n-        CHAR[MAX_PATH + 1] szPhonebookPath;\n+        CHAR[MAX_PATH + 1] szPhonebookPath = 0;\n     //}\n }\n alias RASENTRYNAMEA* LPRASENTRYNAMEA;\n \n struct RASAMBW{\n     DWORD dwSize;\n     DWORD dwError;\n-    WCHAR[NETBIOS_NAME_LEN + 1] szNetBiosError;\n+    WCHAR[NETBIOS_NAME_LEN + 1] szNetBiosError = 0;\n     BYTE bLana;\n }\n alias RASAMBW* LPRASAMBW;\n \n struct RASAMBA{\n     DWORD dwSize;\n     DWORD dwError;\n-    CHAR[NETBIOS_NAME_LEN + 1] szNetBiosError;\n+    CHAR[NETBIOS_NAME_LEN + 1] szNetBiosError = 0;\n     BYTE bLana;\n }\n alias RASAMBA* LPRASAMBA;\n@@ -393,8 +393,8 @@ struct RASPPPNBFW{\n     DWORD dwSize;\n     DWORD dwError;\n     DWORD dwNetBiosError;\n-    WCHAR[NETBIOS_NAME_LEN + 1] szNetBiosError;\n-    WCHAR[NETBIOS_NAME_LEN + 1] szWorkstationName;\n+    WCHAR[NETBIOS_NAME_LEN + 1] szNetBiosError = 0;\n+    WCHAR[NETBIOS_NAME_LEN + 1] szWorkstationName = 0;\n     BYTE bLana;\n }\n alias RASPPPNBFW* LPRASPPPNBFW;\n@@ -403,32 +403,32 @@ struct RASPPPNBFA{\n     DWORD dwSize;\n     DWORD dwError;\n     DWORD dwNetBiosError;\n-    CHAR[NETBIOS_NAME_LEN + 1] szNetBiosError;\n-    CHAR[NETBIOS_NAME_LEN + 1] szWorkstationName;\n+    CHAR[NETBIOS_NAME_LEN + 1] szNetBiosError = 0;\n+    CHAR[NETBIOS_NAME_LEN + 1] szWorkstationName = 0;\n     BYTE bLana;\n }\n alias RASPPPNBFA* LPRASPPPNBFA;\n \n struct RASPPPIPXW {\n     DWORD dwSize;\n     DWORD dwError;\n-    WCHAR[RAS_MaxIpxAddress + 1] szIpxAddress;\n+    WCHAR[RAS_MaxIpxAddress + 1] szIpxAddress = 0;\n }\n alias RASPPPIPXW* LPRASPPPIPXW;\n \n struct RASPPPIPXA {\n     DWORD dwSize;\n     DWORD dwError;\n-    CHAR[RAS_MaxIpxAddress + 1] szIpxAddress;\n+    CHAR[RAS_MaxIpxAddress + 1] szIpxAddress = 0;\n }\n alias RASPPPIPXA* LPRASPPPIPXA;\n \n struct RASPPPIPW{\n     DWORD dwSize;\n     DWORD dwError;\n-    WCHAR[RAS_MaxIpAddress + 1] szIpAddress;\n+    WCHAR[RAS_MaxIpAddress + 1] szIpAddress = 0;\n     //#ifndef WINNT35COMPATIBLE\n-    WCHAR[RAS_MaxIpAddress + 1] szServerIpAddress;\n+    WCHAR[RAS_MaxIpAddress + 1] szServerIpAddress = 0;\n     //#endif\n     //static if (_WIN32_WINNT >= 0x500) {\n         DWORD dwOptions;\n@@ -440,9 +440,9 @@ alias RASPPPIPW* LPRASPPPIPW;\n struct RASPPPIPA{\n     DWORD dwSize;\n     DWORD dwError;\n-    CHAR[RAS_MaxIpAddress + 1] szIpAddress;\n+    CHAR[RAS_MaxIpAddress + 1] szIpAddress = 0;\n     //#ifndef WINNT35COMPATIBLE\n-    CHAR[RAS_MaxIpAddress + 1] szServerIpAddress;\n+    CHAR[RAS_MaxIpAddress + 1] szServerIpAddress = 0;\n     //#endif\n     //static if (_WIN32_WINNT >= 0x500) {\n         DWORD dwOptions;\n@@ -465,7 +465,7 @@ struct RASPPPLCPW{\n         BOOL fMultilink;\n         DWORD dwTerminateReason;\n         DWORD dwServerTerminateReason;\n-        WCHAR[RAS_MaxReplyMessage] szReplyMessage;\n+        WCHAR[RAS_MaxReplyMessage] szReplyMessage = 0;\n         DWORD dwOptions;\n         DWORD dwServerOptions;\n     //}\n@@ -486,7 +486,7 @@ struct RASPPPLCPA{\n         BOOL fMultilink;\n         DWORD dwTerminateReason;\n         DWORD dwServerTerminateReason;\n-        CHAR[RAS_MaxReplyMessage] szReplyMessage;\n+        CHAR[RAS_MaxReplyMessage] szReplyMessage = 0;\n         DWORD dwOptions;\n         DWORD dwServerOptions;\n     //}\n@@ -496,28 +496,28 @@ alias RASPPPLCPA* LPRASPPPLCPA;\n struct RASSLIPW{\n     DWORD dwSize;\n     DWORD dwError;\n-    WCHAR[RAS_MaxIpAddress + 1] szIpAddress;\n+    WCHAR[RAS_MaxIpAddress + 1] szIpAddress = 0;\n }\n alias RASSLIPW* LPRASSLIPW;\n \n struct RASSLIPA{\n     DWORD dwSize;\n     DWORD dwError;\n-    CHAR[RAS_MaxIpAddress + 1] szIpAddress;\n+    CHAR[RAS_MaxIpAddress + 1] szIpAddress = 0;\n }\n alias RASSLIPA* LPRASSLIPA;\n \n struct RASDEVINFOW{\n     DWORD dwSize;\n-    WCHAR[RAS_MaxDeviceType + 1] szDeviceType;\n-    WCHAR[RAS_MaxDeviceName + 1] szDeviceName;\n+    WCHAR[RAS_MaxDeviceType + 1] szDeviceType = 0;\n+    WCHAR[RAS_MaxDeviceName + 1] szDeviceName = 0;\n }\n alias RASDEVINFOW* LPRASDEVINFOW;\n \n struct RASDEVINFOA{\n     DWORD dwSize;\n-    CHAR[RAS_MaxDeviceType + 1] szDeviceType;\n-    CHAR[RAS_MaxDeviceName + 1] szDeviceName;\n+    CHAR[RAS_MaxDeviceType + 1] szDeviceType = 0;\n+    CHAR[RAS_MaxDeviceName + 1] szDeviceName = 0;\n }\n alias RASDEVINFOA* LPRASDEVINFOA;\n \n@@ -545,8 +545,8 @@ struct RASENTRYW {\n     DWORD dwfOptions;\n     DWORD dwCountryID;\n     DWORD dwCountryCode;\n-    WCHAR[RAS_MaxAreaCode + 1] szAreaCode;\n-    WCHAR[RAS_MaxPhoneNumber + 1] szLocalPhoneNumber;\n+    WCHAR[RAS_MaxAreaCode + 1] szAreaCode = 0;\n+    WCHAR[RAS_MaxPhoneNumber + 1] szLocalPhoneNumber = 0;\n     DWORD dwAlternateOffset;\n     RASIPADDR ipaddr;\n     RASIPADDR ipaddrDns;\n@@ -556,15 +556,15 @@ struct RASENTRYW {\n     DWORD dwFrameSize;\n     DWORD dwfNetProtocols;\n     DWORD dwFramingProtocol;\n-    WCHAR[MAX_PATH] szScript;\n-    WCHAR[MAX_PATH] szAutodialDll;\n-    WCHAR[MAX_PATH] szAutodialFunc;\n-    WCHAR[RAS_MaxDeviceType + 1] szDeviceType;\n-    WCHAR[RAS_MaxDeviceName + 1] szDeviceName;\n-    WCHAR[RAS_MaxPadType + 1] szX25PadType;\n-    WCHAR[RAS_MaxX25Address + 1] szX25Address;\n-    WCHAR[RAS_MaxFacilities + 1] szX25Facilities;\n-    WCHAR[RAS_MaxUserData + 1] szX25UserData;\n+    WCHAR[MAX_PATH] szScript = 0;\n+    WCHAR[MAX_PATH] szAutodialDll = 0;\n+    WCHAR[MAX_PATH] szAutodialFunc = 0;\n+    WCHAR[RAS_MaxDeviceType + 1] szDeviceType = 0;\n+    WCHAR[RAS_MaxDeviceName + 1] szDeviceName = 0;\n+    WCHAR[RAS_MaxPadType + 1] szX25PadType = 0;\n+    WCHAR[RAS_MaxX25Address + 1] szX25Address = 0;\n+    WCHAR[RAS_MaxFacilities + 1] szX25Facilities = 0;\n+    WCHAR[RAS_MaxUserData + 1] szX25UserData = 0;\n     DWORD dwChannels;\n     DWORD dwReserved1;\n     DWORD dwReserved2;\n@@ -582,7 +582,7 @@ struct RASENTRYW {\n         DWORD dwEncryptionType;\n         DWORD dwCustomAuthKey;\n         GUID guidId;\n-        WCHAR[MAX_PATH] szCustomDialDll;\n+        WCHAR[MAX_PATH] szCustomDialDll = 0;\n         DWORD dwVpnStrategy;\n     //}\n }\n@@ -593,8 +593,8 @@ struct RASENTRYA {\n     DWORD dwfOptions;\n     DWORD dwCountryID;\n     DWORD dwCountryCode;\n-    CHAR[RAS_MaxAreaCode + 1] szAreaCode;\n-    CHAR[RAS_MaxPhoneNumber + 1] szLocalPhoneNumber;\n+    CHAR[RAS_MaxAreaCode + 1] szAreaCode = 0;\n+    CHAR[RAS_MaxPhoneNumber + 1] szLocalPhoneNumber = 0;\n     DWORD dwAlternateOffset;\n     RASIPADDR ipaddr;\n     RASIPADDR ipaddrDns;\n@@ -604,15 +604,15 @@ struct RASENTRYA {\n     DWORD dwFrameSize;\n     DWORD dwfNetProtocols;\n     DWORD dwFramingProtocol;\n-    CHAR[MAX_PATH] szScript;\n-    CHAR[MAX_PATH] szAutodialDll;\n-    CHAR[MAX_PATH] szAutodialFunc;\n-    CHAR[RAS_MaxDeviceType + 1] szDeviceType;\n-    CHAR[RAS_MaxDeviceName + 1] szDeviceName;\n-    CHAR[RAS_MaxPadType + 1] szX25PadType;\n-    CHAR[RAS_MaxX25Address + 1] szX25Address;\n-    CHAR[RAS_MaxFacilities + 1] szX25Facilities;\n-    CHAR[RAS_MaxUserData + 1] szX25UserData;\n+    CHAR[MAX_PATH] szScript = 0;\n+    CHAR[MAX_PATH] szAutodialDll = 0;\n+    CHAR[MAX_PATH] szAutodialFunc = 0;\n+    CHAR[RAS_MaxDeviceType + 1] szDeviceType = 0;\n+    CHAR[RAS_MaxDeviceName + 1] szDeviceName = 0;\n+    CHAR[RAS_MaxPadType + 1] szX25PadType = 0;\n+    CHAR[RAS_MaxX25Address + 1] szX25Address = 0;\n+    CHAR[RAS_MaxFacilities + 1] szX25Facilities = 0;\n+    CHAR[RAS_MaxUserData + 1] szX25UserData = 0;\n     DWORD dwChannels;\n     DWORD dwReserved1;\n     DWORD dwReserved2;\n@@ -630,7 +630,7 @@ struct RASENTRYA {\n         DWORD dwEncryptionType;\n         DWORD dwCustomAuthKey;\n         GUID guidId;\n-        CHAR[MAX_PATH] szCustomDialDll;\n+        CHAR[MAX_PATH] szCustomDialDll = 0;\n         DWORD dwVpnStrategy;\n     //}\n }\n@@ -651,54 +651,54 @@ alias RASENTRYA* LPRASENTRYA;\n     struct RASSUBENTRYW{\n         DWORD dwSize;\n         DWORD dwfFlags;\n-        WCHAR[RAS_MaxDeviceType + 1] szDeviceType;\n-        WCHAR[RAS_MaxDeviceName + 1] szDeviceName;\n-        WCHAR[RAS_MaxPhoneNumber + 1] szLocalPhoneNumber;\n+        WCHAR[RAS_MaxDeviceType + 1] szDeviceType = 0;\n+        WCHAR[RAS_MaxDeviceName + 1] szDeviceName = 0;\n+        WCHAR[RAS_MaxPhoneNumber + 1] szLocalPhoneNumber = 0;\n         DWORD dwAlternateOffset;\n     }\n     alias RASSUBENTRYW* LPRASSUBENTRYW;\n \n     struct RASSUBENTRYA{\n         DWORD dwSize;\n         DWORD dwfFlags;\n-        CHAR[RAS_MaxDeviceType + 1] szDeviceType;\n-        CHAR[RAS_MaxDeviceName + 1] szDeviceName;\n-        CHAR[RAS_MaxPhoneNumber + 1] szLocalPhoneNumber;\n+        CHAR[RAS_MaxDeviceType + 1] szDeviceType = 0;\n+        CHAR[RAS_MaxDeviceName + 1] szDeviceName = 0;\n+        CHAR[RAS_MaxPhoneNumber + 1] szLocalPhoneNumber = 0;\n         DWORD dwAlternateOffset;\n     }\n     alias RASSUBENTRYA* LPRASSUBENTRYA;\n \n     struct RASCREDENTIALSW{\n         DWORD dwSize;\n         DWORD dwMask;\n-        WCHAR[UNLEN + 1] szUserName;\n-        WCHAR[PWLEN + 1] szPassword;\n-        WCHAR[DNLEN + 1] szDomain;\n+        WCHAR[UNLEN + 1] szUserName = 0;\n+        WCHAR[PWLEN + 1] szPassword = 0;\n+        WCHAR[DNLEN + 1] szDomain = 0;\n     }\n     alias RASCREDENTIALSW* LPRASCREDENTIALSW;\n \n     struct RASCREDENTIALSA{\n         DWORD dwSize;\n         DWORD dwMask;\n-        CHAR[UNLEN + 1] szUserName;\n-        CHAR[PWLEN + 1] szPassword;\n-        CHAR[DNLEN + 1] szDomain;\n+        CHAR[UNLEN + 1] szUserName = 0;\n+        CHAR[PWLEN + 1] szPassword = 0;\n+        CHAR[DNLEN + 1] szDomain = 0;\n     }\n     alias RASCREDENTIALSA* LPRASCREDENTIALSA;\n \n     struct RASAUTODIALENTRYW{\n         DWORD dwSize;\n         DWORD dwFlags;\n         DWORD dwDialingLocation;\n-        WCHAR[RAS_MaxEntryName + 1] szEntry;\n+        WCHAR[RAS_MaxEntryName + 1] szEntry = 0;\n     }\n     alias RASAUTODIALENTRYW* LPRASAUTODIALENTRYW;\n \n     struct RASAUTODIALENTRYA{\n         DWORD dwSize;\n         DWORD dwFlags;\n         DWORD dwDialingLocation;\n-        CHAR[RAS_MaxEntryName + 1] szEntry;\n+        CHAR[RAS_MaxEntryName + 1] szEntry = 0;\n     }\n     alias RASAUTODIALENTRYA* LPRASAUTODIALENTRYA;\n //}\n@@ -715,14 +715,14 @@ alias RASENTRYA* LPRASENTRYA;\n     alias RASPPPCCP* LPRASPPPCCP;\n \n     struct RASEAPUSERIDENTITYW{\n-        WCHAR[UNLEN + 1] szUserName;\n+        WCHAR[UNLEN + 1] szUserName = 0;\n         DWORD dwSizeofEapInfo;\n         BYTE[1] pbEapInfo;\n     }\n     alias RASEAPUSERIDENTITYW* LPRASEAPUSERIDENTITYW;\n \n     struct RASEAPUSERIDENTITYA{\n-        CHAR[UNLEN + 1] szUserName;\n+        CHAR[UNLEN + 1] szUserName = 0;\n         DWORD dwSizeofEapInfo;\n         BYTE[1] pbEapInfo;\n     }"}, {"sha": "77346cb3318dafed2dd33674aa282bf8b1dd1225", "filename": "libphobos/libdruntime/core/sys/windows/rasdlg.d", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0da83a168fdca32fec2d6bf8280670d05514c4c4/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fwindows%2Frasdlg.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0da83a168fdca32fec2d6bf8280670d05514c4c4/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fwindows%2Frasdlg.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fwindows%2Frasdlg.d?ref=0da83a168fdca32fec2d6bf8280670d05514c4c4", "patch": "@@ -44,7 +44,7 @@ align(4):\n     DWORD     dwFlags;\n     LONG      xDlg;\n     LONG      yDlg;\n-    CHAR[RAS_MaxEntryName + 1] szEntry;\n+    CHAR[RAS_MaxEntryName + 1] szEntry = 0;\n     DWORD     dwError;\n     ULONG_PTR reserved;\n     ULONG_PTR reserved2;\n@@ -58,7 +58,7 @@ align(4):\n     DWORD     dwFlags;\n     LONG      xDlg;\n     LONG      yDlg;\n-    WCHAR[RAS_MaxEntryName + 1] szEntry;\n+    WCHAR[RAS_MaxEntryName + 1] szEntry = 0;\n     DWORD     dwError;\n     ULONG_PTR reserved;\n     ULONG_PTR reserved2;\n@@ -120,19 +120,19 @@ struct RASNOUSERA\n     DWORD           dwSize = RASNOUSERA.sizeof;\n     DWORD           dwFlags;\n     DWORD           dwTimeoutMs;\n-    CHAR[UNLEN + 1] szUserName;\n-    CHAR[PWLEN + 1] szPassword;\n-    CHAR[DNLEN + 1] szDomain;\n+    CHAR[UNLEN + 1] szUserName = 0;\n+    CHAR[PWLEN + 1] szPassword = 0;\n+    CHAR[DNLEN + 1] szDomain = 0;\n }\n alias RASNOUSERA* LPRASNOUSERA;\n \n struct RASNOUSERW {\n     DWORD            dwSize = RASNOUSERW.sizeof;\n     DWORD            dwFlags;\n     DWORD            dwTimeoutMs;\n-    WCHAR[UNLEN + 1] szUserName;\n-    WCHAR[PWLEN + 1] szPassword;\n-    WCHAR[DNLEN + 1] szDomain;\n+    WCHAR[UNLEN + 1] szUserName = 0;\n+    WCHAR[PWLEN + 1] szPassword = 0;\n+    WCHAR[DNLEN + 1] szDomain = 0;\n }\n alias RASNOUSERW* LPRASNOUSERW;\n "}, {"sha": "b70dc07d14601cfd217c88d94f3b158db1eabaf4", "filename": "libphobos/libdruntime/core/sys/windows/rassapi.d", "status": "modified", "additions": 14, "deletions": 14, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0da83a168fdca32fec2d6bf8280670d05514c4c4/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fwindows%2Frassapi.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0da83a168fdca32fec2d6bf8280670d05514c4c4/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fwindows%2Frassapi.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fwindows%2Frassapi.d?ref=0da83a168fdca32fec2d6bf8280670d05514c4c4", "patch": "@@ -90,53 +90,53 @@ union RAS_PARAMS_VALUE {\n }\n \n struct RAS_PARAMETERS {\n-    CHAR[RASSAPI_MAX_PARAM_KEY_SIZE] P_Key;\n+    CHAR[RASSAPI_MAX_PARAM_KEY_SIZE] P_Key = 0;\n     RAS_PARAMS_FORMAT                P_Type;\n     BYTE                             P_Attributes;\n     RAS_PARAMS_VALUE                 P_Value;\n }\n \n struct RAS_USER_0 {\n     BYTE                                    bfPrivilege;\n-    WCHAR[RASSAPI_MAX_PHONENUMBER_SIZE + 1] szPhoneNumber;\n+    WCHAR[RASSAPI_MAX_PHONENUMBER_SIZE + 1] szPhoneNumber = 0;\n }\n alias RAS_USER_0* PRAS_USER_0;\n \n struct RAS_PORT_0 {\n-    WCHAR[RASSAPI_MAX_PORT_NAME]       wszPortName;\n-    WCHAR[RASSAPI_MAX_DEVICETYPE_NAME] wszDeviceType;\n-    WCHAR[RASSAPI_MAX_DEVICE_NAME]     wszDeviceName;\n-    WCHAR[RASSAPI_MAX_MEDIA_NAME]      wszMediaName;\n+    WCHAR[RASSAPI_MAX_PORT_NAME]       wszPortName = 0;\n+    WCHAR[RASSAPI_MAX_DEVICETYPE_NAME] wszDeviceType = 0;\n+    WCHAR[RASSAPI_MAX_DEVICE_NAME]     wszDeviceName = 0;\n+    WCHAR[RASSAPI_MAX_MEDIA_NAME]      wszMediaName = 0;\n     DWORD                              reserved;\n     DWORD                              Flags;\n-    WCHAR[UNLEN + 1]                   wszUserName;\n-    WCHAR[NETBIOS_NAME_LEN]            wszComputer;\n+    WCHAR[UNLEN + 1]                   wszUserName = 0;\n+    WCHAR[NETBIOS_NAME_LEN]            wszComputer = 0;\n     DWORD                              dwStartSessionTime; // seconds from 1/1/1970\n-    WCHAR[DNLEN + 1]                   wszLogonDomain;\n+    WCHAR[DNLEN + 1]                   wszLogonDomain = 0;\n     BOOL                               fAdvancedServer;\n }\n alias RAS_PORT_0* PRAS_PORT_0;\n \n struct RAS_PPP_NBFCP_RESULT {\n     DWORD dwError;\n     DWORD dwNetBiosError;\n-    CHAR[NETBIOS_NAME_LEN + 1]  szName;\n-    WCHAR[NETBIOS_NAME_LEN + 1] wszWksta;\n+    CHAR[NETBIOS_NAME_LEN + 1]  szName = 0;\n+    WCHAR[NETBIOS_NAME_LEN + 1] wszWksta = 0;\n }\n \n struct RAS_PPP_IPCP_RESULT {\n     DWORD dwError;\n-    WCHAR[RAS_IPADDRESSLEN + 1] wszAddress;\n+    WCHAR[RAS_IPADDRESSLEN + 1] wszAddress = 0;\n }\n \n struct RAS_PPP_IPXCP_RESULT {\n     DWORD dwError;\n-    WCHAR[RAS_IPXADDRESSLEN + 1] wszAddress;\n+    WCHAR[RAS_IPXADDRESSLEN + 1] wszAddress = 0;\n }\n \n struct RAS_PPP_ATCP_RESULT {\n     DWORD dwError;\n-    WCHAR[RAS_ATADDRESSLEN + 1] wszAddress;\n+    WCHAR[RAS_ATADDRESSLEN + 1] wszAddress = 0;\n }\n \n struct RAS_PPP_PROJECTION_RESULT {"}, {"sha": "a05c3b8deaf00ed9aad7d72e6b2fcb0d1ff288f0", "filename": "libphobos/libdruntime/core/sys/windows/richedit.d", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0da83a168fdca32fec2d6bf8280670d05514c4c4/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fwindows%2Frichedit.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0da83a168fdca32fec2d6bf8280670d05514c4c4/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fwindows%2Frichedit.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fwindows%2Frichedit.d?ref=0da83a168fdca32fec2d6bf8280670d05514c4c4", "patch": "@@ -318,7 +318,7 @@ struct CHARFORMATA {\n     COLORREF crTextColor;\n     BYTE bCharSet;\n     BYTE bPitchAndFamily;\n-    char[LF_FACESIZE] szFaceName;\n+    char[LF_FACESIZE] szFaceName = 0;\n }\n struct CHARFORMATW {\n     UINT cbSize = this.sizeof;\n@@ -329,7 +329,7 @@ struct CHARFORMATW {\n     COLORREF crTextColor;\n     BYTE bCharSet;\n     BYTE bPitchAndFamily;\n-    WCHAR[LF_FACESIZE] szFaceName;\n+    WCHAR[LF_FACESIZE] szFaceName = 0;\n }\n \n struct CHARFORMAT2A {\n@@ -341,7 +341,7 @@ struct CHARFORMAT2A {\n     COLORREF crTextColor;\n     BYTE bCharSet;\n     BYTE bPitchAndFamily;\n-    char[LF_FACESIZE] szFaceName;\n+    char[LF_FACESIZE] szFaceName = 0;\n     WORD wWeight;\n     SHORT sSpacing;\n     COLORREF crBackColor;\n@@ -363,7 +363,7 @@ struct CHARFORMAT2W {\n     COLORREF crTextColor;\n     BYTE bCharSet;\n     BYTE bPitchAndFamily;\n-    WCHAR[LF_FACESIZE] szFaceName;\n+    WCHAR[LF_FACESIZE] szFaceName = 0;\n     WORD wWeight;\n     SHORT sSpacing;\n     COLORREF crBackColor;"}, {"sha": "8df96b1635397c2775419e89244d12ce76316bbc", "filename": "libphobos/libdruntime/core/sys/windows/setupapi.d", "status": "modified", "additions": 48, "deletions": 48, "changes": 96, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0da83a168fdca32fec2d6bf8280670d05514c4c4/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fwindows%2Fsetupapi.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0da83a168fdca32fec2d6bf8280670d05514c4c4/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fwindows%2Fsetupapi.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fwindows%2Fsetupapi.d?ref=0da83a168fdca32fec2d6bf8280670d05514c4c4", "patch": "@@ -904,15 +904,15 @@ alias SP_ALTPLATFORM_INFO* PSP_ALTPLATFORM_INFO;\n \n struct SP_ORIGINAL_FILE_INFO_A {\n     DWORD cbSize = SP_ORIGINAL_FILE_INFO_A.sizeof;\n-    CHAR[MAX_PATH] OriginalInfName;\n-    CHAR[MAX_PATH] OriginalCatalogName;\n+    CHAR[MAX_PATH] OriginalInfName = 0;\n+    CHAR[MAX_PATH] OriginalCatalogName = 0;\n }\n alias SP_ORIGINAL_FILE_INFO_A* PSP_ORIGINAL_FILE_INFO_A;\n \n struct SP_ORIGINAL_FILE_INFO_W {\n     DWORD cbSize = SP_ORIGINAL_FILE_INFO_W.sizeof;\n-    WCHAR[MAX_PATH] OriginalInfName;\n-    WCHAR[MAX_PATH] OriginalCatalogName;\n+    WCHAR[MAX_PATH] OriginalInfName = 0;\n+    WCHAR[MAX_PATH] OriginalCatalogName = 0;\n }\n alias SP_ORIGINAL_FILE_INFO_W* PSP_ORIGINAL_FILE_INFO_W;\n \n@@ -977,7 +977,7 @@ mixin AlignedStr!(_alignVal, \"FILE_IN_CABINET_INFO_A\", q{\n     WORD  DosDate;\n     WORD  DosTime;\n     WORD  DosAttribs;\n-    CHAR[MAX_PATH] FullTargetName;\n+    CHAR[MAX_PATH] FullTargetName = 0;\n });\n alias FILE_IN_CABINET_INFO_A* PFILE_IN_CABINET_INFO_A;\n \n@@ -988,7 +988,7 @@ mixin AlignedStr!(_alignVal, \"FILE_IN_CABINET_INFO_W\", q{\n     WORD   DosDate;\n     WORD   DosTime;\n     WORD   DosAttribs;\n-    WCHAR[MAX_PATH] FullTargetName;\n+    WCHAR[MAX_PATH] FullTargetName = 0;\n });\n alias FILE_IN_CABINET_INFO_W* PFILE_IN_CABINET_INFO_W;\n \n@@ -1044,14 +1044,14 @@ deprecated alias SP_DEVICE_INTERFACE_DATA* PSP_INTERFACE_DEVICE_DATA;\n \n mixin AlignedStr!(_alignVal, \"SP_DEVICE_INTERFACE_DETAIL_DATA_A\", q{\n     DWORD cbSize = SP_DEVICE_INTERFACE_DETAIL_DATA_A.sizeof;\n-    CHAR[1] _DevicePath;\n+    CHAR[1] _DevicePath = 0;\n     CHAR* DevicePath() return { return _DevicePath.ptr; }\n });\n alias SP_DEVICE_INTERFACE_DETAIL_DATA_A* PSP_DEVICE_INTERFACE_DETAIL_DATA_A;\n \n mixin AlignedStr!(_alignVal, \"SP_DEVICE_INTERFACE_DETAIL_DATA_W\", q{\n     DWORD  cbSize = SP_DEVICE_INTERFACE_DETAIL_DATA_W.sizeof;\n-    WCHAR[1] _DevicePath;\n+    WCHAR[1] _DevicePath = 0;\n     WCHAR* DevicePath() return { return _DevicePath.ptr; }\n });\n alias SP_DEVICE_INTERFACE_DETAIL_DATA_W* PSP_DEVICE_INTERFACE_DETAIL_DATA_W;\n@@ -1065,15 +1065,15 @@ mixin AlignedStr!(_alignVal, \"SP_DEVINFO_LIST_DETAIL_DATA_A\", q{\n     DWORD  cbSize = SP_DEVINFO_LIST_DETAIL_DATA_A.sizeof;\n     GUID   ClassGuid;\n     HANDLE RemoteMachineHandle;\n-    CHAR[SP_MAX_MACHINENAME_LENGTH] RemoteMachineName;\n+    CHAR[SP_MAX_MACHINENAME_LENGTH] RemoteMachineName = 0;\n });\n alias SP_DEVINFO_LIST_DETAIL_DATA_A* PSP_DEVINFO_LIST_DETAIL_DATA_A;\n \n mixin AlignedStr!(_alignVal, \"SP_DEVINFO_LIST_DETAIL_DATA_W\", q{\n     DWORD  cbSize = SP_DEVINFO_LIST_DETAIL_DATA_W.sizeof;\n     GUID   ClassGuid;\n     HANDLE RemoteMachineHandle;\n-    WCHAR[SP_MAX_MACHINENAME_LENGTH] RemoteMachineName;\n+    WCHAR[SP_MAX_MACHINENAME_LENGTH] RemoteMachineName = 0;\n });\n alias SP_DEVINFO_LIST_DETAIL_DATA_W* PSP_DEVINFO_LIST_DETAIL_DATA_W;\n \n@@ -1090,7 +1090,7 @@ struct SP_DEVINSTALL_PARAMS_A {\n     HSPFILEQ            FileQueue;\n     ULONG_PTR           ClassInstallReserved;\n     DWORD               Reserved;\n-    CHAR[MAX_PATH]      DriverPath;\n+    CHAR[MAX_PATH]      DriverPath = 0;\n }\n alias SP_DEVINSTALL_PARAMS_A* PSP_DEVINSTALL_PARAMS_A;\n \n@@ -1104,7 +1104,7 @@ struct SP_DEVINSTALL_PARAMS_W {\n     HSPFILEQ            FileQueue;\n     ULONG_PTR           ClassInstallReserved;\n     DWORD               Reserved;\n-    WCHAR[MAX_PATH]     DriverPath;\n+    WCHAR[MAX_PATH]     DriverPath = 0;\n }\n alias SP_DEVINSTALL_PARAMS_W* PSP_DEVINSTALL_PARAMS_W;\n \n@@ -1151,20 +1151,20 @@ alias SP_UNREMOVEDEVICE_PARAMS* PSP_UNREMOVEDEVICE_PARAMS;\n \n struct SP_SELECTDEVICE_PARAMS_A {\n     SP_CLASSINSTALL_HEADER    ClassInstallHeader;\n-    CHAR[MAX_TITLE_LEN]       Title;\n-    CHAR[MAX_INSTRUCTION_LEN] Instructions;\n-    CHAR[MAX_LABEL_LEN]       ListLabel;\n-    CHAR[MAX_SUBTITLE_LEN]    SubTitle;\n+    CHAR[MAX_TITLE_LEN]       Title = 0;\n+    CHAR[MAX_INSTRUCTION_LEN] Instructions = 0;\n+    CHAR[MAX_LABEL_LEN]       ListLabel = 0;\n+    CHAR[MAX_SUBTITLE_LEN]    SubTitle = 0;\n     BYTE[2]                   Reserved;\n }\n alias SP_SELECTDEVICE_PARAMS_A* PSP_SELECTDEVICE_PARAMS_A;\n \n struct SP_SELECTDEVICE_PARAMS_W {\n     SP_CLASSINSTALL_HEADER     ClassInstallHeader;\n-    WCHAR[MAX_TITLE_LEN]       Title;\n-    WCHAR[MAX_INSTRUCTION_LEN] Instructions;\n-    WCHAR[MAX_LABEL_LEN]       ListLabel;\n-    WCHAR[MAX_SUBTITLE_LEN]    SubTitle;\n+    WCHAR[MAX_TITLE_LEN]       Title = 0;\n+    WCHAR[MAX_INSTRUCTION_LEN] Instructions = 0;\n+    WCHAR[MAX_LABEL_LEN]       ListLabel = 0;\n+    WCHAR[MAX_SUBTITLE_LEN]    SubTitle = 0;\n }\n alias SP_SELECTDEVICE_PARAMS_W* PSP_SELECTDEVICE_PARAMS_W;\n \n@@ -1202,37 +1202,37 @@ alias SP_NEWDEVICEWIZARD_DATA* PSP_ADDPROPERTYPAGE_DATA;\n \n struct SP_TROUBLESHOOTER_PARAMS_A {\n     SP_CLASSINSTALL_HEADER ClassInstallHeader;\n-    CHAR[MAX_PATH]         ChmFile;\n-    CHAR[MAX_PATH]         HtmlTroubleShooter;\n+    CHAR[MAX_PATH]         ChmFile = 0;\n+    CHAR[MAX_PATH]         HtmlTroubleShooter = 0;\n }\n alias SP_TROUBLESHOOTER_PARAMS_A* PSP_TROUBLESHOOTER_PARAMS_A;\n \n struct SP_TROUBLESHOOTER_PARAMS_W {\n     SP_CLASSINSTALL_HEADER ClassInstallHeader;\n-    WCHAR[MAX_PATH]        ChmFile;\n-    WCHAR[MAX_PATH]        HtmlTroubleShooter;\n+    WCHAR[MAX_PATH]        ChmFile = 0;\n+    WCHAR[MAX_PATH]        HtmlTroubleShooter = 0;\n }\n alias SP_TROUBLESHOOTER_PARAMS_W* PSP_TROUBLESHOOTER_PARAMS_W;\n \n struct SP_POWERMESSAGEWAKE_PARAMS_A {\n     SP_CLASSINSTALL_HEADER ClassInstallHeader;\n-    CHAR[LINE_LEN*2]       PowerMessageWake;\n+    CHAR[LINE_LEN*2]       PowerMessageWake = 0;\n }\n alias SP_POWERMESSAGEWAKE_PARAMS_A* PSP_POWERMESSAGEWAKE_PARAMS_A;\n \n struct SP_POWERMESSAGEWAKE_PARAMS_W {\n     SP_CLASSINSTALL_HEADER ClassInstallHeader;\n-    WCHAR[LINE_LEN*2]      PowerMessageWake;\n+    WCHAR[LINE_LEN*2]      PowerMessageWake = 0;\n }\n alias SP_POWERMESSAGEWAKE_PARAMS_W* PSP_POWERMESSAGEWAKE_PARAMS_W;\n \n mixin AlignedStr!(_alignVal, \"SP_DRVINFO_DATA_V2_A\", q{\n     DWORD          cbSize = SP_DRVINFO_DATA_V2_A.sizeof;\n     DWORD          DriverType;\n     ULONG_PTR      Reserved;\n-    CHAR[LINE_LEN] Description;\n-    CHAR[LINE_LEN] MfgName;\n-    CHAR[LINE_LEN] ProviderName;\n+    CHAR[LINE_LEN] Description = 0;\n+    CHAR[LINE_LEN] MfgName = 0;\n+    CHAR[LINE_LEN] ProviderName = 0;\n     FILETIME       DriverDate;\n     DWORDLONG      DriverVersion;\n });\n@@ -1242,9 +1242,9 @@ mixin AlignedStr!(_alignVal, \"SP_DRVINFO_DATA_V2_W\", q{\n     DWORD           cbSize = SP_DRVINFO_DATA_V2_A.sizeof;\n     DWORD           DriverType;\n     ULONG_PTR       Reserved;\n-    WCHAR[LINE_LEN] Description;\n-    WCHAR[LINE_LEN] MfgName;\n-    WCHAR[LINE_LEN] ProviderName;\n+    WCHAR[LINE_LEN] Description = 0;\n+    WCHAR[LINE_LEN] MfgName = 0;\n+    WCHAR[LINE_LEN] ProviderName = 0;\n     FILETIME        DriverDate;\n     DWORDLONG       DriverVersion;\n });\n@@ -1254,19 +1254,19 @@ struct SP_DRVINFO_DATA_V1_A {\n     DWORD          cbSize = SP_DRVINFO_DATA_V1_A.sizeof;\n     DWORD          DriverType;\n     ULONG_PTR      Reserved;\n-    CHAR[LINE_LEN] Description;\n-    CHAR[LINE_LEN] MfgName;\n-    CHAR[LINE_LEN] ProviderName;\n+    CHAR[LINE_LEN] Description = 0;\n+    CHAR[LINE_LEN] MfgName = 0;\n+    CHAR[LINE_LEN] ProviderName = 0;\n }\n alias SP_DRVINFO_DATA_V1_A* PSP_DRVINFO_DATA_V1_A;\n \n struct SP_DRVINFO_DATA_V1_W {\n     DWORD           cbSize = SP_DRVINFO_DATA_V1_W.sizeof;\n     DWORD           DriverType;\n     ULONG_PTR       Reserved;\n-    WCHAR[LINE_LEN] Description;\n-    WCHAR[LINE_LEN] MfgName;\n-    WCHAR[LINE_LEN] ProviderName;\n+    WCHAR[LINE_LEN] Description = 0;\n+    WCHAR[LINE_LEN] MfgName = 0;\n+    WCHAR[LINE_LEN] ProviderName = 0;\n }\n alias SP_DRVINFO_DATA_V1_W* PSP_DRVINFO_DATA_V1_W;\n \n@@ -1304,10 +1304,10 @@ mixin AlignedStr!(_alignVal, \"SP_DRVINFO_DETAIL_DATA_A\", q{\n     DWORD          CompatIDsOffset;\n     DWORD          CompatIDsLength;\n     ULONG_PTR      Reserved;\n-    CHAR[LINE_LEN] SectionName;\n-    CHAR[MAX_PATH] InfFileName;\n-    CHAR[LINE_LEN] DrvDescription;\n-    CHAR[1]        _HardwareID;\n+    CHAR[LINE_LEN] SectionName = 0;\n+    CHAR[MAX_PATH] InfFileName = 0;\n+    CHAR[LINE_LEN] DrvDescription = 0;\n+    CHAR[1]        _HardwareID = 0;\n     CHAR*          HardwareID() return { return _HardwareID.ptr; }\n });\n alias SP_DRVINFO_DETAIL_DATA_A* PSP_DRVINFO_DETAIL_DATA_A;\n@@ -1318,10 +1318,10 @@ mixin AlignedStr!(_alignVal, \"SP_DRVINFO_DETAIL_DATA_W\", q{\n     DWORD           CompatIDsOffset;\n     DWORD           CompatIDsLength;\n     ULONG_PTR       Reserved;\n-    WCHAR[LINE_LEN] SectionName;\n-    WCHAR[MAX_PATH] InfFileName;\n-    WCHAR[LINE_LEN] DrvDescription;\n-    WCHAR[1]        _HardwareID;\n+    WCHAR[LINE_LEN] SectionName = 0;\n+    WCHAR[MAX_PATH] InfFileName = 0;\n+    WCHAR[LINE_LEN] DrvDescription = 0;\n+    WCHAR[1]        _HardwareID = 0;\n     WCHAR*          HardwareID() return { return _HardwareID.ptr; }\n });\n alias SP_DRVINFO_DETAIL_DATA_W* PSP_DRVINFO_DETAIL_DATA_W;\n@@ -1359,14 +1359,14 @@ alias SP_PROPSHEETPAGE_REQUEST* PSP_PROPSHEETPAGE_REQUEST;\n \n struct SP_BACKUP_QUEUE_PARAMS_A {\n     DWORD cbSize = SP_BACKUP_QUEUE_PARAMS_A.sizeof;\n-    CHAR[MAX_PATH] FullInfPath;\n+    CHAR[MAX_PATH] FullInfPath = 0;\n     INT FilenameOffset;\n }\n alias SP_BACKUP_QUEUE_PARAMS_A* PSP_BACKUP_QUEUE_PARAMS_A;\n \n struct SP_BACKUP_QUEUE_PARAMS_W {\n     DWORD cbSize = SP_BACKUP_QUEUE_PARAMS_W.sizeof;\n-    WCHAR[MAX_PATH] FullInfPath;\n+    WCHAR[MAX_PATH] FullInfPath = 0;\n     INT FilenameOffset;\n }\n alias SP_BACKUP_QUEUE_PARAMS_W* PSP_BACKUP_QUEUE_PARAMS_W;"}, {"sha": "26c6f78c40403bda42874ebf65577f407caa664e", "filename": "libphobos/libdruntime/core/sys/windows/shellapi.d", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0da83a168fdca32fec2d6bf8280670d05514c4c4/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fwindows%2Fshellapi.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0da83a168fdca32fec2d6bf8280670d05514c4c4/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fwindows%2Fshellapi.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fwindows%2Fshellapi.d?ref=0da83a168fdca32fec2d6bf8280670d05514c4c4", "patch": "@@ -210,18 +210,18 @@ struct NOTIFYICONDATAA {\n     UINT  uCallbackMessage;\n     HICON hIcon;\n     static if (_WIN32_IE >= 0x500) {\n-        CHAR[128] szTip;\n+        CHAR[128] szTip = 0;\n         DWORD     dwState;\n         DWORD     dwStateMask;\n-        CHAR[256] szInfo;\n+        CHAR[256] szInfo = 0;\n         union {\n             UINT  uTimeout;\n             UINT  uVersion;\n         }\n-        CHAR[64]  szInfoTitle;\n+        CHAR[64]  szInfoTitle = 0;\n         DWORD     dwInfoFlags;\n     } else {\n-        CHAR[64]  szTip;\n+        CHAR[64]  szTip = 0;\n     }\n     static if (_WIN32_IE >= 0x600) {\n         GUID      guidItem;\n@@ -237,18 +237,18 @@ struct NOTIFYICONDATAW {\n     UINT  uCallbackMessage;\n     HICON hIcon;\n     static if (_WIN32_IE >= 0x500) {\n-        WCHAR[128] szTip;\n+        WCHAR[128] szTip = 0;\n         DWORD      dwState;\n         DWORD      dwStateMask;\n-        WCHAR[256] szInfo;\n+        WCHAR[256] szInfo = 0;\n         union {\n             UINT   uTimeout;\n             UINT   uVersion;\n         }\n-        WCHAR[64]  szInfoTitle;\n+        WCHAR[64]  szInfoTitle = 0;\n         DWORD      dwInfoFlags;\n     } else {\n-        WCHAR[64]  szTip;\n+        WCHAR[64]  szTip = 0;\n     }\n     static if (_WIN32_IE >= 0x600) {\n         GUID guidItem;\n@@ -332,16 +332,16 @@ struct SHFILEINFOA {\n     HICON          hIcon;\n     int            iIcon;\n     DWORD          dwAttributes;\n-    CHAR[MAX_PATH] szDisplayName;\n-    CHAR[80]       szTypeName;\n+    CHAR[MAX_PATH] szDisplayName = 0;\n+    CHAR[80]       szTypeName = 0;\n }\n \n struct SHFILEINFOW {\n     HICON           hIcon;\n     int             iIcon;\n     DWORD           dwAttributes;\n-    WCHAR[MAX_PATH] szDisplayName;\n-    WCHAR[80]       szTypeName;\n+    WCHAR[MAX_PATH] szDisplayName = 0;\n+    WCHAR[80]       szTypeName = 0;\n }\n \n align(1) struct SHQUERYRBINFO {"}, {"sha": "ff7f8985c359624259d595175123e39e5ce1b95c", "filename": "libphobos/libdruntime/core/sys/windows/shlobj.d", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0da83a168fdca32fec2d6bf8280670d05514c4c4/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fwindows%2Fshlobj.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0da83a168fdca32fec2d6bf8280670d05514c4c4/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fwindows%2Fshlobj.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fwindows%2Fshlobj.d?ref=0da83a168fdca32fec2d6bf8280670d05514c4c4", "patch": "@@ -507,7 +507,7 @@ struct FILEDESCRIPTORA {\n     FILETIME ftLastWriteTime;\n     DWORD nFileSizeHigh;\n     DWORD nFileSizeLow;\n-    CHAR[MAX_PATH] cFileName;\n+    CHAR[MAX_PATH] cFileName = 0;\n }\n alias FILEDESCRIPTORA* LPFILEDESCRIPTORA;\n \n@@ -522,7 +522,7 @@ struct FILEDESCRIPTORW {\n     FILETIME ftLastWriteTime;\n     DWORD nFileSizeHigh;\n     DWORD nFileSizeLow;\n-    WCHAR[MAX_PATH] cFileName;\n+    WCHAR[MAX_PATH] cFileName = 0;\n }\n alias FILEDESCRIPTORW* LPFILEDESCRIPTORW;\n \n@@ -594,7 +594,7 @@ struct FVSHOWINFO {\n     DWORD dwFlags;\n     RECT rect;\n     LPUNKNOWN punkRel;\n-    OLECHAR[MAX_PATH] strNewFile;\n+    OLECHAR[MAX_PATH] strNewFile = 0;\n }\n alias FVSHOWINFO* LPFVSHOWINFO;\n \n@@ -632,8 +632,8 @@ static if (_WIN32_IE >= 0x500) {\n     struct EXTRASEARCH\n      {\n         GUID guidSearch;\n-        WCHAR[80] wszFriendlyName;\n-        WCHAR[2084] wszUrl;\n+        WCHAR[80] wszFriendlyName = 0;\n+        WCHAR[2084] wszUrl = 0;\n     }\n     alias EXTRASEARCH* LPEXTRASEARCH;\n \n@@ -656,8 +656,8 @@ static if (_WIN32_IE >= 0x500) {\n     struct PERSIST_FOLDER_TARGET_INFO\n      {\n         LPITEMIDLIST pidlTargetFolder;\n-        WCHAR[MAX_PATH] szTargetParsingName;\n-        WCHAR[MAX_PATH] szNetworkProvider;\n+        WCHAR[MAX_PATH] szTargetParsingName = 0;\n+        WCHAR[MAX_PATH] szNetworkProvider = 0;\n         DWORD dwAttributes;\n         int csidl;\n     }\n@@ -699,7 +699,7 @@ static if (_WIN32_IE >= 0x500) {\n         struct SHCOLUMNINIT {\n             ULONG dwFlags;\n             ULONG dwReserved;\n-            WCHAR[MAX_PATH] wszFolder;\n+            WCHAR[MAX_PATH] wszFolder = 0;\n         }\n         alias SHCOLUMNINIT*        LPSHCOLUMNINIT;\n         alias const(SHCOLUMNINIT)* LPCSHCOLUMNINIT;\n@@ -708,8 +708,8 @@ static if (_WIN32_IE >= 0x500) {\n             ULONG dwFlags;\n             DWORD dwFileAttributes;\n             ULONG dwReserved;\n-            WCHAR *pwszExt;\n-            WCHAR[MAX_PATH] wszFile;\n+            WCHAR *pwszExt = 0;\n+            WCHAR[MAX_PATH] wszFile = 0;\n         }\n         alias SHCOLUMNDATA*        LPSHCOLUMNDATA;\n         alias const(SHCOLUMNDATA)* LPCSHCOLUMNDATA;\n@@ -725,8 +725,8 @@ enum MAX_COLUMN_DESC_LEN = 128;\n         DWORD fmt;\n         UINT cChars;\n         DWORD csFlags;\n-        WCHAR[MAX_COLUMN_NAME_LEN] wszTitle;\n-        WCHAR[MAX_COLUMN_DESC_LEN] wszDescription;\n+        WCHAR[MAX_COLUMN_NAME_LEN] wszTitle = 0;\n+        WCHAR[MAX_COLUMN_DESC_LEN] wszDescription = 0;\n     }\n     alias SHCOLUMNINFO*        LPSHCOLUMNINFO;\n     alias const(SHCOLUMNINFO)* LPCSHCOLUMNINFO;"}, {"sha": "4f550184d0acc4af69f8fd62ccd3794b0778dea7", "filename": "libphobos/libdruntime/core/sys/windows/snmp.d", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0da83a168fdca32fec2d6bf8280670d05514c4c4/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fwindows%2Fsnmp.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0da83a168fdca32fec2d6bf8280670d05514c4c4/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fwindows%2Fsnmp.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fwindows%2Fsnmp.d?ref=0da83a168fdca32fec2d6bf8280670d05514c4c4", "patch": "@@ -10,7 +10,9 @@\n module core.sys.windows.snmp;\n version (Windows):\n \n-private import core.sys.windows.windows;\n+private import core.sys.windows.basetsd /+: HANDLE+/;\n+private import core.sys.windows.windef /+: BOOL, BYTE, DWORD, INT, LONG, UINT, ULONG+/;\n+private import core.sys.windows.winnt /+: LPSTR, LPVOID, ULARGE_INTEGER, VOID+/;\n \n // These are not documented on MSDN\n enum {"}, {"sha": "d354ffecfe3e3e8a9a04cc5d6b2964c062999531", "filename": "libphobos/libdruntime/core/sys/windows/stacktrace.d", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0da83a168fdca32fec2d6bf8280670d05514c4c4/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fwindows%2Fstacktrace.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0da83a168fdca32fec2d6bf8280670d05514c4c4/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fwindows%2Fstacktrace.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fwindows%2Fstacktrace.d?ref=0da83a168fdca32fec2d6bf8280670d05514c4c4", "patch": "@@ -17,7 +17,9 @@ import core.runtime;\n import core.stdc.stdlib;\n import core.stdc.string;\n import core.sys.windows.dbghelp;\n-import core.sys.windows.windows;\n+import core.sys.windows.imagehlp /+: ADDRESS_MODE+/;\n+import core.sys.windows.winbase;\n+import core.sys.windows.windef;\n \n //debug=PRINTF;\n debug(PRINTF) import core.stdc.stdio;\n@@ -243,7 +245,7 @@ private:\n         {\n         align(1):\n             IMAGEHLP_SYMBOLA64 _base;\n-            TCHAR[1024] _buf;\n+            TCHAR[1024] _buf = void;\n         }\n         BufSymbol bufSymbol=void;\n         IMAGEHLP_SYMBOLA64* symbol = &bufSymbol._base;\n@@ -358,7 +360,7 @@ private string generateSearchPath()\n                                            \"SYSTEMROOT\"];\n \n     string path;\n-    char[2048] temp;\n+    char[2048] temp = void;\n     DWORD len;\n \n     foreach ( e; defaultPathList )"}, {"sha": "9d39a90619a8f0a38c903ed8b3c92200809f0116", "filename": "libphobos/libdruntime/core/sys/windows/subauth.d", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0da83a168fdca32fec2d6bf8280670d05514c4c4/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fwindows%2Fsubauth.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0da83a168fdca32fec2d6bf8280670d05514c4c4/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fwindows%2Fsubauth.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fwindows%2Fsubauth.d?ref=0da83a168fdca32fec2d6bf8280670d05514c4c4", "patch": "@@ -131,12 +131,12 @@ enum USER_SESSION_KEY_LENGTH = CYPHER_BLOCK_LENGTH * 2;\n enum CLEAR_BLOCK_LENGTH = 8;\n \n struct CYPHER_BLOCK {\n-    CHAR[CYPHER_BLOCK_LENGTH] data;\n+    CHAR[CYPHER_BLOCK_LENGTH] data = 0;\n }\n alias CYPHER_BLOCK* PCYPHER_BLOCK;\n \n struct CLEAR_BLOCK {\n-    CHAR[CLEAR_BLOCK_LENGTH] data;\n+    CHAR[CLEAR_BLOCK_LENGTH] data = 0;\n }\n alias CLEAR_BLOCK* PCLEAR_BLOCK;\n "}, {"sha": "4e887b7be4e44c820bb8fdcacf8015334cbc102f", "filename": "libphobos/libdruntime/core/sys/windows/threadaux.d", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0da83a168fdca32fec2d6bf8280670d05514c4c4/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fwindows%2Fthreadaux.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0da83a168fdca32fec2d6bf8280670d05514c4c4/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fwindows%2Fthreadaux.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fwindows%2Fthreadaux.d?ref=0da83a168fdca32fec2d6bf8280670d05514c4c4", "patch": "@@ -15,7 +15,10 @@\n module core.sys.windows.threadaux;\n version (Windows):\n \n-import core.sys.windows.windows;\n+import core.sys.windows.basetsd/+ : HANDLE+/;\n+import core.sys.windows.winbase/+ : CloseHandle, GetCurrentThreadId, GetCurrentProcessId,\n+    GetModuleHandleA, GetProcAddress+/;\n+import core.sys.windows.windef/+ : BOOL, DWORD, FALSE, HRESULT+/;\n import core.stdc.stdlib;\n \n public import core.thread;"}, {"sha": "3a3959f8deb9e238ea1503052c6b012e8cf99d70", "filename": "libphobos/libdruntime/core/sys/windows/tlhelp32.d", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0da83a168fdca32fec2d6bf8280670d05514c4c4/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fwindows%2Ftlhelp32.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0da83a168fdca32fec2d6bf8280670d05514c4c4/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fwindows%2Ftlhelp32.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fwindows%2Ftlhelp32.d?ref=0da83a168fdca32fec2d6bf8280670d05514c4c4", "patch": "@@ -69,7 +69,7 @@ struct PROCESSENTRY32W {\n     DWORD th32ParentProcessID;\n     LONG pcPriClassBase;\n     DWORD dwFlags;\n-    WCHAR[MAX_PATH] szExeFile;\n+    WCHAR[MAX_PATH] szExeFile = 0;\n }\n alias PROCESSENTRY32W* PPROCESSENTRY32W;\n alias PROCESSENTRY32W* LPPROCESSENTRY32W;\n@@ -95,8 +95,8 @@ struct MODULEENTRY32W {\n     BYTE *modBaseAddr;\n     DWORD modBaseSize;\n     HMODULE hModule;\n-    WCHAR[MAX_MODULE_NAME32 + 1] szModule;\n-    WCHAR[MAX_PATH] szExePath;\n+    WCHAR[MAX_MODULE_NAME32 + 1] szModule = 0;\n+    WCHAR[MAX_PATH] szExePath = 0;\n }\n alias MODULEENTRY32W* PMODULEENTRY32W;\n alias MODULEENTRY32W* LPMODULEENTRY32W;\n@@ -120,7 +120,7 @@ version (Unicode) {\n         DWORD th32ParentProcessID;\n         LONG pcPriClassBase;\n         DWORD dwFlags;\n-        CHAR[MAX_PATH] szExeFile;\n+        CHAR[MAX_PATH] szExeFile = 0;\n     }\n     alias PROCESSENTRY32* PPROCESSENTRY32;\n     alias PROCESSENTRY32* LPPROCESSENTRY32;\n@@ -134,8 +134,8 @@ version (Unicode) {\n         BYTE *modBaseAddr;\n         DWORD modBaseSize;\n         HMODULE hModule;\n-        char[MAX_MODULE_NAME32 + 1] szModule;\n-        char[MAX_PATH] szExePath;\n+        char[MAX_MODULE_NAME32 + 1] szModule = 0;\n+        char[MAX_PATH] szExePath = 0;\n     }\n     alias MODULEENTRY32* PMODULEENTRY32;\n     alias MODULEENTRY32* LPMODULEENTRY32;"}, {"sha": "4d168b38a869375ae745f8ce6ea3626bf312a4ea", "filename": "libphobos/libdruntime/core/sys/windows/vfw.d", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0da83a168fdca32fec2d6bf8280670d05514c4c4/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fwindows%2Fvfw.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0da83a168fdca32fec2d6bf8280670d05514c4c4/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fwindows%2Fvfw.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fwindows%2Fvfw.d?ref=0da83a168fdca32fec2d6bf8280670d05514c4c4", "patch": "@@ -189,9 +189,9 @@ struct ICINFO {\n     DWORD   dwFlags;\n     DWORD   dwVersion;\n     DWORD   dwVersionICM;\n-    WCHAR[16]   szName;\n-    WCHAR[128]  szDescription;\n-    WCHAR[128]  szDriver;\n+    WCHAR[16]   szName = 0;\n+    WCHAR[128]  szDescription = 0;\n+    WCHAR[128]  szDriver = 0;\n }\n \n enum {\n@@ -890,7 +890,7 @@ struct AVISTREAMINFOW {\n     RECT    rcFrame;\n     DWORD   dwEditCount;\n     DWORD   dwFormatChangeCount;\n-    WCHAR[64]   szName;\n+    WCHAR[64]   szName = 0;\n }\n alias AVISTREAMINFOW* LPAVISTREAMINFOW;\n \n@@ -912,7 +912,7 @@ struct AVISTREAMINFOA {\n     RECT    rcFrame;\n     DWORD   dwEditCount;\n     DWORD   dwFormatChangeCount;\n-    char[64]    szName;\n+    char[64]    szName = 0;\n }\n alias AVISTREAMINFOA* LPAVISTREAMINFOA;\n \n@@ -939,7 +939,7 @@ struct AVIFILEINFOW {\n     DWORD   dwRate;\n     DWORD   dwLength;\n     DWORD   dwEditCount;\n-    WCHAR[64]   szFileType;\n+    WCHAR[64]   szFileType = 0;\n }\n alias AVIFILEINFOW* LPAVIFILEINFOW;\n \n@@ -955,7 +955,7 @@ struct AVIFILEINFOA {\n     DWORD   dwRate;\n     DWORD   dwLength;\n     DWORD   dwEditCount;\n-    char[64]    szFileType;\n+    char[64]    szFileType = 0;\n }\n alias AVIFILEINFOA* LPAVIFILEINFOA;\n "}, {"sha": "280c4684b33e1a90ee6603cb8c07fc0a36d10794", "filename": "libphobos/libdruntime/core/sys/windows/winbase.d", "status": "modified", "additions": 19, "deletions": 19, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0da83a168fdca32fec2d6bf8280670d05514c4c4/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fwindows%2Fwinbase.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0da83a168fdca32fec2d6bf8280670d05514c4c4/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fwindows%2Fwinbase.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fwindows%2Fwinbase.d?ref=0da83a168fdca32fec2d6bf8280670d05514c4c4", "patch": "@@ -149,7 +149,7 @@ struct COMMPROP {\n     DWORD dwCurrentRxQueue;\n     DWORD dwProvSpec1;\n     DWORD dwProvSpec2;\n-    WCHAR _wcProvChar;\n+    WCHAR _wcProvChar = 0;\n \n     WCHAR* wcProvChar() return { return &_wcProvChar; }\n }\n@@ -968,11 +968,11 @@ struct DCB {\n     BYTE ByteSize;\n     BYTE Parity;\n     BYTE StopBits;\n-    char XonChar;\n-    char XoffChar;\n-    char ErrorChar;\n-    char EofChar;\n-    char EvtChar;\n+    char XonChar = 0;\n+    char XoffChar = 0;\n+    char ErrorChar = 0;\n+    char EofChar = 0;\n+    char EvtChar = 0;\n     WORD wReserved1;\n }\n alias DCB* LPDCB;\n@@ -985,7 +985,7 @@ struct COMMCONFIG {\n     DWORD dwProviderSubType;\n     DWORD dwProviderOffset;\n     DWORD dwProviderSize;\n-    WCHAR _wcProviderData;\n+    WCHAR _wcProviderData = 0;\n \n     WCHAR* wcProviderData() return { return &_wcProviderData; }\n }\n@@ -1247,9 +1247,9 @@ struct WIN32_FIND_DATAA {\n     DWORD          dwReserved0;\n     DWORD          dwReserved1;\n // #endif\n-    CHAR[MAX_PATH] cFileName;\n+    CHAR[MAX_PATH] cFileName = 0;\n // #ifndef _WIN32_WCE\n-    CHAR[14]       cAlternateFileName;\n+    CHAR[14]       cAlternateFileName = 0;\n // #endif\n }\n alias WIN32_FIND_DATAA* PWIN32_FIND_DATAA, LPWIN32_FIND_DATAA;\n@@ -1267,9 +1267,9 @@ struct WIN32_FIND_DATAW {\n     DWORD           dwReserved0;\n     DWORD           dwReserved1;\n // #endif\n-    WCHAR[MAX_PATH] cFileName;\n+    WCHAR[MAX_PATH] cFileName = 0;\n // #ifndef _WIN32_WCE\n-    WCHAR[14]       cAlternateFileName;\n+    WCHAR[14]       cAlternateFileName = 0;\n // #endif\n }\n alias WIN32_FIND_DATAW* PWIN32_FIND_DATAW, LPWIN32_FIND_DATAW;\n@@ -1279,7 +1279,7 @@ struct WIN32_STREAM_ID {\n     DWORD         dwStreamAttributes;\n     LARGE_INTEGER Size;\n     DWORD         dwStreamNameSize;\n-    WCHAR         _cStreamName;\n+    WCHAR         _cStreamName = 0;\n \n     WCHAR* cStreamName() return { return &_cStreamName; }\n }\n@@ -1304,15 +1304,15 @@ enum ACL_INFORMATION_CLASS {\n \n struct HW_PROFILE_INFOA {\n     DWORD dwDockInfo;\n-    CHAR[HW_PROFILE_GUIDLEN] szHwProfileGuid;\n-    CHAR[MAX_PROFILE_LEN]    szHwProfileName;\n+    CHAR[HW_PROFILE_GUIDLEN] szHwProfileGuid = 0;\n+    CHAR[MAX_PROFILE_LEN]    szHwProfileName = 0;\n }\n alias HW_PROFILE_INFOA* LPHW_PROFILE_INFOA;\n \n struct HW_PROFILE_INFOW {\n     DWORD dwDockInfo;\n-    WCHAR[HW_PROFILE_GUIDLEN] szHwProfileGuid;\n-    WCHAR[MAX_PROFILE_LEN]    szHwProfileName;\n+    WCHAR[HW_PROFILE_GUIDLEN] szHwProfileGuid = 0;\n+    WCHAR[MAX_PROFILE_LEN]    szHwProfileName = 0;\n }\n alias HW_PROFILE_INFOW* LPHW_PROFILE_INFOW;\n \n@@ -1358,10 +1358,10 @@ static if (_WIN32_WINNT >= 0x500) {\n \n struct TIME_ZONE_INFORMATION {\n     LONG       Bias;\n-    WCHAR[32]  StandardName;\n+    WCHAR[32]  StandardName = 0;\n     SYSTEMTIME StandardDate;\n     LONG       StandardBias;\n-    WCHAR[32]  DaylightName;\n+    WCHAR[32]  DaylightName = 0;\n     SYSTEMTIME DaylightDate;\n     LONG       DaylightBias;\n }\n@@ -1492,7 +1492,7 @@ struct OFSTRUCT {\n     WORD      nErrCode;\n     WORD      Reserved1;\n     WORD      Reserved2;\n-    CHAR[128] szPathName; // const OFS_MAXPATHNAME = 128;\n+    CHAR[128] szPathName = 0; // const OFS_MAXPATHNAME = 128;\n }\n alias OFSTRUCT* LPOFSTRUCT, POFSTRUCT;\n "}, {"sha": "6b06c14b166ae4eeb5de3058d428a66934b4d38c", "filename": "libphobos/libdruntime/core/sys/windows/wincon.d", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0da83a168fdca32fec2d6bf8280670d05514c4c4/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fwindows%2Fwincon.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0da83a168fdca32fec2d6bf8280670d05514c4c4/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fwindows%2Fwincon.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fwindows%2Fwincon.d?ref=0da83a168fdca32fec2d6bf8280670d05514c4c4", "patch": "@@ -107,7 +107,7 @@ enum {\n \n struct CHAR_INFO {\n     union _Char {\n-        WCHAR UnicodeChar;\n+        WCHAR UnicodeChar = 0;\n         CHAR AsciiChar;\n     }\n     union {\n@@ -162,11 +162,11 @@ struct KEY_EVENT_RECORD {\n     WORD  wVirtualKeyCode;\n     WORD  wVirtualScanCode;\n     union _uChar {\n-        WCHAR UnicodeChar;\n+        WCHAR UnicodeChar = 0;\n         CHAR  AsciiChar;\n     }\n     union {\n-        WCHAR UnicodeChar;\n+        WCHAR UnicodeChar = 0;\n         CHAR  AsciiChar;\n         _uChar uChar;\n     }"}, {"sha": "0651ea803cfb6f17f082e96cc20b598714aeb339", "filename": "libphobos/libdruntime/core/sys/windows/wincrypt.d", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0da83a168fdca32fec2d6bf8280670d05514c4c4/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fwindows%2Fwincrypt.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0da83a168fdca32fec2d6bf8280670d05514c4c4/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fwindows%2Fwincrypt.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fwindows%2Fwincrypt.d?ref=0da83a168fdca32fec2d6bf8280670d05514c4c4", "patch": "@@ -795,7 +795,7 @@ struct PROV_ENUMALGS {\n     ALG_ID   aiAlgid;\n     DWORD    dwBitLen;\n     DWORD    dwNameLen;\n-    CHAR[20] szName;\n+    CHAR[20] szName = 0;\n }\n \n struct PUBLICKEYSTRUC {"}, {"sha": "e495b2be84ffe849e0f69418de1813bc6f8fb22e", "filename": "libphobos/libdruntime/core/sys/windows/wingdi.d", "status": "modified", "additions": 32, "deletions": 32, "changes": 64, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0da83a168fdca32fec2d6bf8280670d05514c4c4/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fwindows%2Fwingdi.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0da83a168fdca32fec2d6bf8280670d05514c4c4/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fwindows%2Fwingdi.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fwindows%2Fwingdi.d?ref=0da83a168fdca32fec2d6bf8280670d05514c4c4", "patch": "@@ -2217,7 +2217,7 @@ struct DEVMODEA {\n alias DEVMODEA* PDEVMODEA, NPDEVMODEA, LPDEVMODEA;\n \n struct DEVMODEW {\n-    WCHAR[CCHDEVICENAME]   dmDeviceName;\n+    WCHAR[CCHDEVICENAME]   dmDeviceName = 0;\n     WORD   dmSpecVersion;\n     WORD   dmDriverVersion;\n     WORD   dmSize;\n@@ -2246,7 +2246,7 @@ struct DEVMODEW {\n     short  dmYResolution;\n     short  dmTTOption;\n     short  dmCollate;\n-    WCHAR[CCHFORMNAME]  dmFormName;\n+    WCHAR[CCHFORMNAME]  dmFormName = 0;\n     WORD   dmLogPixels;\n     DWORD  dmBitsPerPel;\n     DWORD  dmPelsWidth;\n@@ -2344,7 +2344,7 @@ struct LOGFONTA {\n     BYTE lfClipPrecision;\n     BYTE lfQuality;\n     BYTE lfPitchAndFamily;\n-    CHAR[LF_FACESIZE] lfFaceName;\n+    CHAR[LF_FACESIZE] lfFaceName = 0;\n }\n alias LOGFONTA* PLOGFONTA, NPLOGFONTA, LPLOGFONTA;\n \n@@ -2362,7 +2362,7 @@ struct LOGFONTW {\n     BYTE lfClipPrecision;\n     BYTE lfQuality;\n     BYTE lfPitchAndFamily;\n-    WCHAR[LF_FACESIZE] lfFaceName;\n+    WCHAR[LF_FACESIZE] lfFaceName = 0;\n }\n alias LOGFONTW* PLOGFONTW, NPLOGFONTW, LPLOGFONTW;\n \n@@ -2382,8 +2382,8 @@ alias EXTLOGFONTA* PEXTLOGFONTA, NPEXTLOGFONTA, LPEXTLOGFONTA;\n \n struct EXTLOGFONTW {\n     LOGFONTW               elfLogFont;\n-    WCHAR[LF_FULLFACESIZE] elfFullName;\n-    WCHAR[LF_FACESIZE]     elfStyle;\n+    WCHAR[LF_FULLFACESIZE] elfFullName = 0;\n+    WCHAR[LF_FACESIZE]     elfStyle = 0;\n     DWORD                  elfVersion;\n     DWORD                  elfStyleSize;\n     DWORD                  elfMatch;\n@@ -2497,7 +2497,7 @@ struct LOGCOLORSPACEA {\n     DWORD lcsGammaRed;\n     DWORD lcsGammaGreen;\n     DWORD lcsGammaBlue;\n-    CHAR[MAX_PATH] lcsFilename;\n+    CHAR[MAX_PATH] lcsFilename = 0;\n }\n alias LOGCOLORSPACEA* LPLOGCOLORSPACEA;\n \n@@ -2511,7 +2511,7 @@ struct LOGCOLORSPACEW {\n     DWORD lcsGammaRed;\n     DWORD lcsGammaGreen;\n     DWORD lcsGammaBlue;\n-    WCHAR[MAX_PATH] lcsFilename;\n+    WCHAR[MAX_PATH] lcsFilename = 0;\n }\n alias LOGCOLORSPACEW* LPLOGCOLORSPACEW;\n \n@@ -3376,10 +3376,10 @@ struct TEXTMETRICW {\n     LONG tmOverhang;\n     LONG tmDigitizedAspectX;\n     LONG tmDigitizedAspectY;\n-    WCHAR tmFirstChar;\n-    WCHAR tmLastChar;\n-    WCHAR tmDefaultChar;\n-    WCHAR tmBreakChar;\n+    WCHAR tmFirstChar = 0;\n+    WCHAR tmLastChar = 0;\n+    WCHAR tmDefaultChar = 0;\n+    WCHAR tmBreakChar = 0;\n     BYTE tmItalic;\n     BYTE tmUnderlined;\n     BYTE tmStruckOut;\n@@ -3399,7 +3399,7 @@ alias RGNDATAHEADER* PRGNDATAHEADER;\n \n struct RGNDATA {\n     RGNDATAHEADER rdh;\n-    char[1] Buffer;\n+    char[1] Buffer = 0;\n }\n alias RGNDATA* PRGNDATA, NPRGNDATA, LPRGNDATA;\n \n@@ -3442,7 +3442,7 @@ alias GLYPHMETRICS* LPGLYPHMETRICS;\n \n static if (_WIN32_WINNT >= 0x500) {\n     struct WCRANGE {\n-        WCHAR  wcLow;\n+        WCHAR  wcLow = 0;\n         USHORT cGlyphs;\n     }\n     alias WCRANGE* PWCRANGE, LPWCRANGE;\n@@ -3668,10 +3668,10 @@ struct NEWTEXTMETRICW {\n     LONG tmOverhang;\n     LONG tmDigitizedAspectX;\n     LONG tmDigitizedAspectY;\n-    WCHAR tmFirstChar;\n-    WCHAR tmLastChar;\n-    WCHAR tmDefaultChar;\n-    WCHAR tmBreakChar;\n+    WCHAR tmFirstChar = 0;\n+    WCHAR tmLastChar = 0;\n+    WCHAR tmDefaultChar = 0;\n+    WCHAR tmBreakChar = 0;\n     BYTE tmItalic;\n     BYTE tmUnderlined;\n     BYTE tmStruckOut;\n@@ -3713,8 +3713,8 @@ alias ENUMLOGFONTA* LPENUMLOGFONTA;\n \n struct ENUMLOGFONTW {\n     LOGFONTW elfLogFont;\n-    WCHAR[LF_FULLFACESIZE] elfFullName;\n-    WCHAR[LF_FACESIZE] elfStyle;\n+    WCHAR[LF_FULLFACESIZE] elfFullName = 0;\n+    WCHAR[LF_FACESIZE] elfStyle = 0;\n }\n alias ENUMLOGFONTW* LPENUMLOGFONTW;\n \n@@ -3728,9 +3728,9 @@ alias ENUMLOGFONTEXA* LPENUMLOGFONTEXA;\n \n struct ENUMLOGFONTEXW {\n     LOGFONTW elfLogFont;\n-    WCHAR[LF_FULLFACESIZE] elfFullName;\n-    WCHAR[LF_FACESIZE] elfStyle;\n-    WCHAR[LF_FACESIZE] elfScript;\n+    WCHAR[LF_FULLFACESIZE] elfFullName = 0;\n+    WCHAR[LF_FACESIZE] elfStyle = 0;\n+    WCHAR[LF_FACESIZE] elfScript = 0;\n }\n alias ENUMLOGFONTEXW* LPENUMLOGFONTEXW;\n \n@@ -3830,7 +3830,7 @@ enum MM_MAX_AXES_NAMELEN = 16;\n     struct AXISINFOW {\n         LONG axMinValue;\n         LONG axMaxValue;\n-        WCHAR[MM_MAX_AXES_NAMELEN] axAxisName;\n+        WCHAR[MM_MAX_AXES_NAMELEN] axAxisName = 0;\n     }\n     alias AXISINFOW* PAXISINFOW, LPAXISINFOW;\n \n@@ -3930,21 +3930,21 @@ alias GRADIENT_RECT* PGRADIENT_RECT, LPGRADIENT_RECT;\n \n struct DISPLAY_DEVICEA {\n     DWORD cb;\n-    CHAR[32] DeviceName;\n-    CHAR[128] DeviceString;\n+    CHAR[32] DeviceName = 0;\n+    CHAR[128] DeviceString = 0;\n     DWORD StateFlags;\n-    CHAR[128] DeviceID;\n-    CHAR[128] DeviceKey;\n+    CHAR[128] DeviceID = 0;\n+    CHAR[128] DeviceKey = 0;\n }\n alias DISPLAY_DEVICEA* PDISPLAY_DEVICEA, LPDISPLAY_DEVICEA;\n \n struct DISPLAY_DEVICEW {\n     DWORD cb;\n-    WCHAR[32] DeviceName;\n-    WCHAR[128] DeviceString;\n+    WCHAR[32] DeviceName = 0;\n+    WCHAR[128] DeviceString = 0;\n     DWORD StateFlags;\n-    WCHAR[128] DeviceID;\n-    WCHAR[128] DeviceKey;\n+    WCHAR[128] DeviceID = 0;\n+    WCHAR[128] DeviceKey = 0;\n }\n alias DISPLAY_DEVICEW* PDISPLAY_DEVICEW, LPDISPLAY_DEVICEW;\n "}, {"sha": "231c31a0e068aeeea513ac31a19079cb2b004455", "filename": "libphobos/libdruntime/core/sys/windows/wininet.d", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0da83a168fdca32fec2d6bf8280670d05514c4c4/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fwindows%2Fwininet.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0da83a168fdca32fec2d6bf8280670d05514c4c4/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fwindows%2Fwininet.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fwindows%2Fwininet.d?ref=0da83a168fdca32fec2d6bf8280670d05514c4c4", "patch": "@@ -15,7 +15,7 @@ pragma(lib, \"wininet\");\n \n // FIXME: check types and grouping of constants\n \n-import core.sys.windows.windows;\n+import core.sys.windows.winbase, core.sys.windows.windef;\n \n enum {\n     INTERNET_INVALID_PORT_NUMBER =    0,\n@@ -729,22 +729,22 @@ enum INTERNET_INVALID_STATUS_CALLBACK\n   = cast(INTERNET_STATUS_CALLBACK) -1;\n \n struct GOPHER_FIND_DATAA {\n-    CHAR[MAX_GOPHER_DISPLAY_TEXT+1] DisplayString;\n+    CHAR[MAX_GOPHER_DISPLAY_TEXT+1] DisplayString = 0;\n     DWORD    GopherType;\n     DWORD    SizeLow;\n     DWORD    SizeHigh;\n     FILETIME LastModificationTime;\n-    CHAR[MAX_GOPHER_LOCATOR_LENGTH+1] Locator;\n+    CHAR[MAX_GOPHER_LOCATOR_LENGTH+1] Locator = 0;\n }\n alias GOPHER_FIND_DATAA* LPGOPHER_FIND_DATAA;\n \n struct GOPHER_FIND_DATAW {\n-    WCHAR[MAX_GOPHER_DISPLAY_TEXT+1] DisplayString;\n+    WCHAR[MAX_GOPHER_DISPLAY_TEXT+1] DisplayString = 0;\n     DWORD    GopherType;\n     DWORD    SizeLow;\n     DWORD    SizeHigh;\n     FILETIME LastModificationTime;\n-    WCHAR[MAX_GOPHER_LOCATOR_LENGTH+1] Locator;\n+    WCHAR[MAX_GOPHER_LOCATOR_LENGTH+1] Locator = 0;\n }\n alias GOPHER_FIND_DATAW* LPGOPHER_FIND_DATAW;\n \n@@ -953,7 +953,7 @@ struct INTERNET_CACHE_GROUP_INFOA {\n     DWORD dwDiskUsage;\n     DWORD dwDiskQuota;\n     DWORD[GROUP_OWNER_STORAGE_SIZE] dwOwnerStorage;\n-    CHAR[GROUPNAME_MAX_LENGTH]      szGroupName;\n+    CHAR[GROUPNAME_MAX_LENGTH]      szGroupName = 0;\n }\n alias INTERNET_CACHE_GROUP_INFOA* LPINTERNET_CACHE_GROUP_INFOA;\n \n@@ -964,7 +964,7 @@ struct INTERNET_CACHE_GROUP_INFOW {\n     DWORD dwDiskUsage;\n     DWORD dwDiskQuota;\n     DWORD[GROUP_OWNER_STORAGE_SIZE] dwOwnerStorage;\n-    WCHAR[GROUPNAME_MAX_LENGTH]     szGroupName;\n+    WCHAR[GROUPNAME_MAX_LENGTH]     szGroupName = 0;\n }\n alias INTERNET_CACHE_GROUP_INFOW* LPINTERNET_CACHE_GROUP_INFOW;\n "}, {"sha": "cd41a3f70aebd99fdd9dd05b4551310bf561f009", "filename": "libphobos/libdruntime/core/sys/windows/winioctl.d", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0da83a168fdca32fec2d6bf8280670d05514c4c4/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fwindows%2Fwinioctl.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0da83a168fdca32fec2d6bf8280670d05514c4c4/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fwindows%2Fwinioctl.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fwindows%2Fwinioctl.d?ref=0da83a168fdca32fec2d6bf8280670d05514c4c4", "patch": "@@ -563,7 +563,7 @@ struct PARTITION_INFORMATION_GPT {\n     GUID      PartitionType;\n     GUID      PartitionId;\n     DWORD64   Attributes;\n-    WCHAR[36] Name;\n+    WCHAR[36] Name = 0;\n }\n \n struct PARTITION_INFORMATION_EX {"}, {"sha": "1f952b681aabf51602edfd82c857d2009e81804b", "filename": "libphobos/libdruntime/core/sys/windows/winnetwk.d", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0da83a168fdca32fec2d6bf8280670d05514c4c4/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fwindows%2Fwinnetwk.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0da83a168fdca32fec2d6bf8280670d05514c4c4/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fwindows%2Fwinnetwk.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fwindows%2Fwinnetwk.d?ref=0da83a168fdca32fec2d6bf8280670d05514c4c4", "patch": "@@ -295,7 +295,7 @@ struct NETINFOSTRUCT {\n }\n alias NETINFOSTRUCT* LPNETINFOSTRUCT;\n \n-extern (Pascal) {\n+extern (Windows) {\n     alias UINT function(LPCSTR, LPSTR, UINT) PFNGETPROFILEPATHA;\n     alias UINT function(LPCWSTR, LPWSTR, UINT) PFNGETPROFILEPATHW;\n     alias UINT function(LPCSTR, LPCSTR, DWORD) PFNRECONCILEPROFILEA;"}, {"sha": "5f1c15005e1dafd156c5dd3ba6b74db50f65cfcc", "filename": "libphobos/libdruntime/core/sys/windows/winnls.d", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0da83a168fdca32fec2d6bf8280670d05514c4c4/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fwindows%2Fwinnls.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0da83a168fdca32fec2d6bf8280670d05514c4c4/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fwindows%2Fwinnls.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fwindows%2Fwinnls.d?ref=0da83a168fdca32fec2d6bf8280670d05514c4c4", "patch": "@@ -557,19 +557,19 @@ struct CPINFOEXA {\n     UINT                  MaxCharSize;\n     BYTE[MAX_DEFAULTCHAR] DefaultChar;\n     BYTE[MAX_LEADBYTES]   LeadByte;\n-    WCHAR                 UnicodeDefaultChar;\n+    WCHAR                 UnicodeDefaultChar = 0;\n     UINT                  CodePage;\n-    CHAR[MAX_PATH]        CodePageName;\n+    CHAR[MAX_PATH]        CodePageName = 0;\n }\n alias CPINFOEXA* LPCPINFOEXA;\n \n struct CPINFOEXW {\n     UINT                  MaxCharSize;\n     BYTE[MAX_DEFAULTCHAR] DefaultChar;\n     BYTE[MAX_LEADBYTES]   LeadByte;\n-    WCHAR                 UnicodeDefaultChar;\n+    WCHAR                 UnicodeDefaultChar = 0;\n     UINT                  CodePage;\n-    WCHAR[MAX_PATH]       CodePageName;\n+    WCHAR[MAX_PATH]       CodePageName = 0;\n }\n alias CPINFOEXW* LPCPINFOEXW;\n "}, {"sha": "abb65f87a4d744db3de880dc6b86a3500aa519dc", "filename": "libphobos/libdruntime/core/sys/windows/winnt.d", "status": "modified", "additions": 13, "deletions": 13, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0da83a168fdca32fec2d6bf8280670d05514c4c4/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fwindows%2Fwinnt.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0da83a168fdca32fec2d6bf8280670d05514c4c4/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fwindows%2Fwinnt.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fwindows%2Fwinnt.d?ref=0da83a168fdca32fec2d6bf8280670d05514c4c4", "patch": "@@ -2364,7 +2364,7 @@ struct SID_AND_ATTRIBUTES {\n alias SID_AND_ATTRIBUTES* PSID_AND_ATTRIBUTES;\n \n struct TOKEN_SOURCE {\n-    CHAR[TOKEN_SOURCE_LENGTH] SourceName;\n+    CHAR[TOKEN_SOURCE_LENGTH] SourceName = 0;\n     LUID SourceIdentifier;\n }\n alias TOKEN_SOURCE* PTOKEN_SOURCE;\n@@ -2505,8 +2505,8 @@ alias IO_COUNTERS* PIO_COUNTERS;\n struct FILE_NOTIFY_INFORMATION {\n     DWORD NextEntryOffset;\n     DWORD Action;\n-    DWORD FileNameLength;\n-    WCHAR _FileName;\n+    DWORD FileNameLength = 0;\n+    WCHAR _FileName = 0;\n \n     WCHAR* FileName() return { return &_FileName; }\n }\n@@ -2708,7 +2708,7 @@ struct OSVERSIONINFOA {\n     DWORD     dwMinorVersion;\n     DWORD     dwBuildNumber;\n     DWORD     dwPlatformId;\n-    CHAR[128] szCSDVersion;\n+    CHAR[128] szCSDVersion = 0;\n }\n alias OSVERSIONINFOA* POSVERSIONINFOA, LPOSVERSIONINFOA;\n \n@@ -2718,7 +2718,7 @@ struct OSVERSIONINFOW {\n     DWORD      dwMinorVersion;\n     DWORD      dwBuildNumber;\n     DWORD      dwPlatformId;\n-    WCHAR[128] szCSDVersion;\n+    WCHAR[128] szCSDVersion = 0;\n }\n alias OSVERSIONINFOW* POSVERSIONINFOW, LPOSVERSIONINFOW;\n \n@@ -2728,7 +2728,7 @@ struct OSVERSIONINFOEXA {\n     DWORD     dwMinorVersion;\n     DWORD     dwBuildNumber;\n     DWORD     dwPlatformId;\n-    CHAR[128] szCSDVersion;\n+    CHAR[128] szCSDVersion = 0;\n     WORD      wServicePackMajor;\n     WORD      wServicePackMinor;\n     WORD      wSuiteMask;\n@@ -2743,7 +2743,7 @@ struct OSVERSIONINFOEXW {\n     DWORD      dwMinorVersion;\n     DWORD      dwBuildNumber;\n     DWORD      dwPlatformId;\n-    WCHAR[128] szCSDVersion;\n+    WCHAR[128] szCSDVersion = 0;\n     WORD       wServicePackMajor;\n     WORD       wServicePackMinor;\n     WORD       wSuiteMask;\n@@ -2938,8 +2938,8 @@ alias IMAGE_DOS_HEADER* PIMAGE_DOS_HEADER;\n \n struct IMAGE_OS2_HEADER {\n     WORD ne_magic;\n-    CHAR ne_ver;\n-    CHAR ne_rev;\n+    CHAR ne_ver = 0;\n+    CHAR ne_rev = 0;\n     WORD ne_enttab;\n     WORD ne_cbenttab;\n     LONG ne_crc;\n@@ -3263,15 +3263,15 @@ alias IMAGE_RESOURCE_DIRECTORY_ENTRY* PIMAGE_RESOURCE_DIRECTORY_ENTRY;\n \n struct IMAGE_RESOURCE_DIRECTORY_STRING {\n     WORD Length;\n-    CHAR _NameString;\n+    CHAR _NameString = 0;\n \n     CHAR* NameString() return { return &_NameString; }\n }\n alias IMAGE_RESOURCE_DIRECTORY_STRING* PIMAGE_RESOURCE_DIRECTORY_STRING;\n \n struct IMAGE_RESOURCE_DIR_STRING_U {\n     WORD  Length;\n-    WCHAR _NameString;\n+    WCHAR _NameString = 0;\n \n     WCHAR* NameString() return { return &_NameString; }\n }\n@@ -3527,7 +3527,7 @@ struct REPARSE_DATA_BUFFER {\n             WORD  PrintNameLength;\n             // ??? This is in MinGW, but absent in MSDN docs\n             ULONG Flags;\n-            WCHAR _PathBuffer;\n+            WCHAR _PathBuffer = 0;\n \n             WCHAR* PathBuffer() return { return &_PathBuffer; }\n         }\n@@ -3537,7 +3537,7 @@ struct REPARSE_DATA_BUFFER {\n             WORD  SubstituteNameLength;\n             WORD  PrintNameOffset;\n             WORD  PrintNameLength;\n-            WCHAR _PathBuffer;\n+            WCHAR _PathBuffer = 0;\n \n             WCHAR* PathBuffer() return { return &_PathBuffer; }\n         }"}, {"sha": "24a6c2c3810ddc6a04df8fd0a00fb50c773c87d8", "filename": "libphobos/libdruntime/core/sys/windows/winperf.d", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0da83a168fdca32fec2d6bf8280670d05514c4c4/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fwindows%2Fwinperf.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0da83a168fdca32fec2d6bf8280670d05514c4c4/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fwindows%2Fwinperf.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fwindows%2Fwinperf.d?ref=0da83a168fdca32fec2d6bf8280670d05514c4c4", "patch": "@@ -82,7 +82,7 @@ enum PERF_RAW_BASE=(PERF_SIZE_DWORD|PERF_TYPE_COUNTER|PERF_COUNTER_BASE|PERF_DIS\n enum PERF_ELAPSED_TIME=(PERF_SIZE_LARGE|PERF_TYPE_COUNTER|PERF_COUNTER_ELAPSED|PERF_OBJECT_TIMER|PERF_DISPLAY_SECONDS);\n \n struct PERF_DATA_BLOCK {\n-    WCHAR[4] Signature;\n+    WCHAR[4] Signature = 0;\n     DWORD LittleEndian;\n     DWORD Version;\n     DWORD Revision;"}, {"sha": "04e9881d7d96e4110ca4f367e743ce81f521dcf9", "filename": "libphobos/libdruntime/core/sys/windows/winsock2.d", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0da83a168fdca32fec2d6bf8280670d05514c4c4/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fwindows%2Fwinsock2.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0da83a168fdca32fec2d6bf8280670d05514c4c4/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fwindows%2Fwinsock2.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fwindows%2Fwinsock2.d?ref=0da83a168fdca32fec2d6bf8280670d05514c4c4", "patch": "@@ -25,8 +25,8 @@ struct WSADATA\n {\n     ushort wVersion;\n     ushort wHighVersion;\n-    char[WSADESCRIPTION_LEN + 1] szDescription;\n-    char[WSASYS_STATUS_LEN + 1] szSystemStatus;\n+    char[WSADESCRIPTION_LEN + 1] szDescription = 0;\n+    char[WSASYS_STATUS_LEN + 1] szSystemStatus = 0;\n     ushort iMaxSockets;\n     ushort iMaxUdpDg;\n     char* lpVendorInfo;\n@@ -643,9 +643,9 @@ alias SOCKADDR* PSOCKADDR, LPSOCKADDR;\n struct sockaddr_storage\n {\n     short     ss_family;\n-    char[6]   __ss_pad1;\n+    char[6]   __ss_pad1 = void;\n     long      __ss_align;\n-    char[112] __ss_pad2;\n+    char[112] __ss_pad2 = void;\n }\n alias sockaddr_storage SOCKADDR_STORAGE;\n alias SOCKADDR_STORAGE* PSOCKADDR_STORAGE;"}, {"sha": "11f0a28c42ff50a5a36ec854402b2650dadd7e81", "filename": "libphobos/libdruntime/core/sys/windows/winuser.d", "status": "modified", "additions": 10, "deletions": 9, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0da83a168fdca32fec2d6bf8280670d05514c4c4/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fwindows%2Fwinuser.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0da83a168fdca32fec2d6bf8280670d05514c4c4/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fwindows%2Fwinuser.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fwindows%2Fwinuser.d?ref=0da83a168fdca32fec2d6bf8280670d05514c4c4", "patch": "@@ -440,6 +440,7 @@ enum WS_EX_MDICHILD = 64;\n enum WS_EX_NOACTIVATE = 0x8000000;  // w2k\n enum WS_EX_NOINHERITLAYOUT = 0x100000;  // w2k\n enum WS_EX_NOPARENTNOTIFY = 4;\n+enum WS_EX_NOREDIRECTIONBITMAP = 0x00200000; // w8, s2012\n enum WS_EX_OVERLAPPEDWINDOW = 0x300;\n enum WS_EX_PALETTEWINDOW = 0x188;\n enum WS_EX_RIGHT = 0x1000;\n@@ -2865,7 +2866,7 @@ struct MENUITEMTEMPLATEHEADER {\n struct MENUITEMTEMPLATE {\n     WORD mtOption;\n     WORD mtID;\n-    WCHAR[1] mtString;\n+    WCHAR[1] mtString = 0;\n }\n \n alias void MENUTEMPLATE, MENUTEMPLATEA, MENUTEMPLATEW;\n@@ -3194,15 +3195,15 @@ alias DWORD HELPPOLY;\n \n struct MULTIKEYHELPA {\n     DWORD mkSize;\n-    CHAR mkKeylist;\n-    CHAR[1] szKeyphrase;\n+    CHAR mkKeylist = 0;\n+    CHAR[1] szKeyphrase = 0;\n }\n alias MULTIKEYHELPA* PMULTIKEYHELPA, LPMULTIKEYHELPA;\n \n struct MULTIKEYHELPW {\n     DWORD mkSize;\n-    WCHAR mkKeylist;\n-    WCHAR[1] szKeyphrase;\n+    WCHAR mkKeylist = 0;\n+    WCHAR[1] szKeyphrase = 0;\n }\n alias MULTIKEYHELPW* PMULTIKEYHELPW, LPMULTIKEYHELPW;\n \n@@ -3213,7 +3214,7 @@ struct HELPWININFOA {\n     int dx;\n     int dy;\n     int wMax;\n-    CHAR[2] rgchMember;\n+    CHAR[2] rgchMember = 0;\n }\n alias HELPWININFOA* PHELPWININFOA, LPHELPWININFOA;\n \n@@ -3224,7 +3225,7 @@ struct HELPWININFOW {\n     int dx;\n     int dy;\n     int wMax;\n-    WCHAR[2] rgchMember;\n+    WCHAR[2] rgchMember = 0;\n }\n alias HELPWININFOW* PHELPWININFOW, LPHELPWININFOW;\n \n@@ -3344,7 +3345,7 @@ struct MONITORINFOEXA {\n     RECT  rcMonitor;\n     RECT  rcWork;\n     DWORD dwFlags;\n-    CHAR[CCHDEVICENAME] szDevice;\n+    CHAR[CCHDEVICENAME] szDevice = 0;\n }\n alias MONITORINFOEXA* LPMONITORINFOEXA;\n \n@@ -3353,7 +3354,7 @@ struct MONITORINFOEXW {\n     RECT  rcMonitor;\n     RECT  rcWork;\n     DWORD dwFlags;\n-    WCHAR[CCHDEVICENAME] szDevice;\n+    WCHAR[CCHDEVICENAME] szDevice = 0;\n }\n alias MONITORINFOEXW* LPMONITORINFOEXW;\n "}, {"sha": "538dc629adb04aaf671598bf754145394ec368c5", "filename": "libphobos/libdruntime/core/sys/windows/wtsapi32.d", "status": "modified", "additions": 20, "deletions": 20, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0da83a168fdca32fec2d6bf8280670d05514c4c4/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fwindows%2Fwtsapi32.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0da83a168fdca32fec2d6bf8280670d05514c4c4/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fwindows%2Fwtsapi32.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fwindows%2Fwtsapi32.d?ref=0da83a168fdca32fec2d6bf8280670d05514c4c4", "patch": "@@ -273,48 +273,48 @@ enum {\n \n static if (_WIN32_WINNT >= 0x600) {\n     struct WTSCLIENTW {\n-        WCHAR[CLIENTNAME_LENGTH + 1]      ClientName;\n-        WCHAR[DOMAIN_LENGTH + 1]          Domain;\n-        WCHAR[USERNAME_LENGTH + 1]        UserName;\n-        WCHAR[MAX_PATH + 1]               WorkDirectory;\n-        WCHAR[MAX_PATH + 1]               InitialProgram;\n+        WCHAR[CLIENTNAME_LENGTH + 1]      ClientName = 0;\n+        WCHAR[DOMAIN_LENGTH + 1]          Domain = 0;\n+        WCHAR[USERNAME_LENGTH + 1]        UserName = 0;\n+        WCHAR[MAX_PATH + 1]               WorkDirectory = 0;\n+        WCHAR[MAX_PATH + 1]               InitialProgram = 0;\n         BYTE                              EncryptionLevel;\n         ULONG                             ClientAddressFamily;\n         USHORT[CLIENTADDRESS_LENGTH + 1]  ClientAddress;\n         USHORT                            HRes;\n         USHORT                            VRes;\n         USHORT                            ColorDepth;\n-        WCHAR[MAX_PATH + 1]               ClientDirectory;\n+        WCHAR[MAX_PATH + 1]               ClientDirectory = 0;\n         ULONG                             ClientBuildNumber;\n         ULONG                             ClientHardwareId;\n         USHORT                            ClientProductId;\n         USHORT                            OutBufCountHost;\n         USHORT                            OutBufCountClient;\n         USHORT                            OutBufLength;\n-        WCHAR[MAX_PATH + 1]               DeviceId;\n+        WCHAR[MAX_PATH + 1]               DeviceId = 0;\n     }\n     alias WTSCLIENTW* PWTSCLIENTW;\n \n     struct WTSCLIENTA {\n-        CHAR[CLIENTNAME_LENGTH + 1]       ClientName;\n-        CHAR[DOMAIN_LENGTH + 1 ]          Domain;\n-        CHAR[USERNAME_LENGTH + 1]         UserName;\n-        CHAR[MAX_PATH + 1]                WorkDirectory;\n-        CHAR[MAX_PATH + 1]                InitialProgram;\n+        CHAR[CLIENTNAME_LENGTH + 1]       ClientName = 0;\n+        CHAR[DOMAIN_LENGTH + 1 ]          Domain = 0;\n+        CHAR[USERNAME_LENGTH + 1]         UserName = 0;\n+        CHAR[MAX_PATH + 1]                WorkDirectory = 0;\n+        CHAR[MAX_PATH + 1]                InitialProgram = 0;\n         BYTE                              EncryptionLevel;\n         ULONG                             ClientAddressFamily;\n         USHORT[CLIENTADDRESS_LENGTH + 1]  ClientAddress;\n         USHORT                            HRes;\n         USHORT                            VRes;\n         USHORT                            ColorDepth;\n-        CHAR[MAX_PATH + 1]                ClientDirectory;\n+        CHAR[MAX_PATH + 1]                ClientDirectory = 0;\n         ULONG                             ClientBuildNumber;\n         ULONG                             ClientHardwareId;\n         USHORT                            ClientProductId;\n         USHORT                            OutBufCountHost;\n         USHORT                            OutBufCountClient;\n         USHORT                            OutBufLength;\n-        CHAR[MAX_PATH + 1]                DeviceId;\n+        CHAR[MAX_PATH + 1]                DeviceId = 0;\n     }\n     alias WTSCLIENTA* PWTSCLIENTA;\n \n@@ -335,9 +335,9 @@ static if (_WIN32_WINNT >= 0x600) {\n         DWORD                        OutgoingFrames;\n         DWORD                        IncomingCompressedBytes;\n         DWORD                        OutgoingCompressedBytes;\n-        WCHAR[WINSTATIONNAME_LENGTH] WinStationName;\n-        WCHAR[DOMAIN_LENGTH]         Domain;\n-        WCHAR[USERNAME_LENGTH+1]     UserName;\n+        WCHAR[WINSTATIONNAME_LENGTH] WinStationName = 0;\n+        WCHAR[DOMAIN_LENGTH]         Domain = 0;\n+        WCHAR[USERNAME_LENGTH+1]     UserName = 0;\n         LARGE_INTEGER                ConnectTime;\n         LARGE_INTEGER                DisconnectTime;\n         LARGE_INTEGER                LastInputTime;\n@@ -355,9 +355,9 @@ static if (_WIN32_WINNT >= 0x600) {\n         DWORD                       OutgoingFrames;\n         DWORD                       IncomingCompressedBytes;\n         DWORD                       OutgoingCompressedBytes;\n-        CHAR[WINSTATIONNAME_LENGTH] WinStationName;\n-        CHAR[DOMAIN_LENGTH]         Domain;\n-        CHAR[USERNAME_LENGTH+1]     UserName;\n+        CHAR[WINSTATIONNAME_LENGTH] WinStationName = 0;\n+        CHAR[DOMAIN_LENGTH]         Domain = 0;\n+        CHAR[USERNAME_LENGTH+1]     UserName = 0;\n         LARGE_INTEGER               ConnectTime;\n         LARGE_INTEGER               DisconnectTime;\n         LARGE_INTEGER               LastInputTime;"}, {"sha": "f5aa3d7531e428614cb04b10fdf9ec3c67a28b94", "filename": "libphobos/libdruntime/rt/util/container/array.d", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0da83a168fdca32fec2d6bf8280670d05514c4c4/libphobos%2Flibdruntime%2Frt%2Futil%2Fcontainer%2Farray.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0da83a168fdca32fec2d6bf8280670d05514c4c4/libphobos%2Flibdruntime%2Frt%2Futil%2Fcontainer%2Farray.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2Frt%2Futil%2Fcontainer%2Farray.d?ref=0da83a168fdca32fec2d6bf8280670d05514c4c4", "patch": "@@ -191,7 +191,7 @@ unittest\n \n unittest\n {\n-    alias RC = common.RC;\n+    alias RC = common.RC!();\n     Array!RC ary;\n \n     size_t cnt;"}, {"sha": "9e6c0138a4f0a292b1b547d2937ee7f24632ad75", "filename": "libphobos/libdruntime/rt/util/container/common.d", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0da83a168fdca32fec2d6bf8280670d05514c4c4/libphobos%2Flibdruntime%2Frt%2Futil%2Fcontainer%2Fcommon.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0da83a168fdca32fec2d6bf8280670d05514c4c4/libphobos%2Flibdruntime%2Frt%2Futil%2Fcontainer%2Fcommon.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2Frt%2Futil%2Fcontainer%2Fcommon.d?ref=0da83a168fdca32fec2d6bf8280670d05514c4c4", "patch": "@@ -56,7 +56,7 @@ void initialize(T)(ref T t) if (!is(T == struct))\n     t = T.init;\n }\n \n-version (unittest) struct RC\n+version (unittest) struct RC()\n {\n nothrow:\n     this(size_t* cnt) { ++*(_cnt = cnt); }"}, {"sha": "fd9f0f7ac8e2841ba5ce5fe54a7ad829b85a47c6", "filename": "libphobos/libdruntime/rt/util/container/hashtab.d", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0da83a168fdca32fec2d6bf8280670d05514c4c4/libphobos%2Flibdruntime%2Frt%2Futil%2Fcontainer%2Fhashtab.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0da83a168fdca32fec2d6bf8280670d05514c4c4/libphobos%2Flibdruntime%2Frt%2Futil%2Fcontainer%2Fhashtab.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2Frt%2Futil%2Fcontainer%2Fhashtab.d?ref=0da83a168fdca32fec2d6bf8280670d05514c4c4", "patch": "@@ -290,7 +290,7 @@ unittest\n \n unittest\n {\n-    alias RC = common.RC;\n+    alias RC = common.RC!();\n     HashTab!(size_t, RC) tab;\n \n     size_t cnt;"}]}