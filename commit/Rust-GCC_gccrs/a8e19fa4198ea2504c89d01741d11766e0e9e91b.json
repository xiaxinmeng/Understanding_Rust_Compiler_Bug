{"sha": "a8e19fa4198ea2504c89d01741d11766e0e9e91b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YThlMTlmYTQxOThlYTI1MDRjODlkMDE3NDFkMTE3NjZlMGU5ZTkxYg==", "commit": {"author": {"name": "Joern Rennecke", "email": "joern.rennecke@embecosm.com", "date": "2021-05-17T09:57:23Z"}, "committer": {"name": "Joern Rennecke", "email": "joern.rennecke@embecosm.com", "date": "2021-05-17T10:20:03Z"}, "message": "Avoid outputting corrupt string constructor when host/target chars mismatch.\n\n\t* c-common.c (braced_list_to_string): Return CTOR unchanged\n\tif host and target character sizes don't match.", "tree": {"sha": "1f08cd31e634ba2ef134ad384bc2a8e57d9e9bef", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1f08cd31e634ba2ef134ad384bc2a8e57d9e9bef"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a8e19fa4198ea2504c89d01741d11766e0e9e91b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a8e19fa4198ea2504c89d01741d11766e0e9e91b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a8e19fa4198ea2504c89d01741d11766e0e9e91b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a8e19fa4198ea2504c89d01741d11766e0e9e91b/comments", "author": {"login": "amylaar", "id": 1663475, "node_id": "MDQ6VXNlcjE2NjM0NzU=", "avatar_url": "https://avatars.githubusercontent.com/u/1663475?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amylaar", "html_url": "https://github.com/amylaar", "followers_url": "https://api.github.com/users/amylaar/followers", "following_url": "https://api.github.com/users/amylaar/following{/other_user}", "gists_url": "https://api.github.com/users/amylaar/gists{/gist_id}", "starred_url": "https://api.github.com/users/amylaar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amylaar/subscriptions", "organizations_url": "https://api.github.com/users/amylaar/orgs", "repos_url": "https://api.github.com/users/amylaar/repos", "events_url": "https://api.github.com/users/amylaar/events{/privacy}", "received_events_url": "https://api.github.com/users/amylaar/received_events", "type": "User", "site_admin": false}, "committer": {"login": "amylaar", "id": 1663475, "node_id": "MDQ6VXNlcjE2NjM0NzU=", "avatar_url": "https://avatars.githubusercontent.com/u/1663475?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amylaar", "html_url": "https://github.com/amylaar", "followers_url": "https://api.github.com/users/amylaar/followers", "following_url": "https://api.github.com/users/amylaar/following{/other_user}", "gists_url": "https://api.github.com/users/amylaar/gists{/gist_id}", "starred_url": "https://api.github.com/users/amylaar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amylaar/subscriptions", "organizations_url": "https://api.github.com/users/amylaar/orgs", "repos_url": "https://api.github.com/users/amylaar/repos", "events_url": "https://api.github.com/users/amylaar/events{/privacy}", "received_events_url": "https://api.github.com/users/amylaar/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3cbcb5d0cfcd1713867ded483cb81148e2ccf0fc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3cbcb5d0cfcd1713867ded483cb81148e2ccf0fc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3cbcb5d0cfcd1713867ded483cb81148e2ccf0fc"}], "stats": {"total": 6, "additions": 6, "deletions": 0}, "files": [{"sha": "b7daa2e2654ab56f8f087e03be8f29e0c1ad131a", "filename": "gcc/c-family/c-common.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a8e19fa4198ea2504c89d01741d11766e0e9e91b/gcc%2Fc-family%2Fc-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a8e19fa4198ea2504c89d01741d11766e0e9e91b/gcc%2Fc-family%2Fc-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-common.c?ref=a8e19fa4198ea2504c89d01741d11766e0e9e91b", "patch": "@@ -9059,6 +9059,12 @@ braced_list_to_string (tree type, tree ctor, bool member)\n   if (!member && !tree_fits_uhwi_p (typesize))\n     return ctor;\n \n+  /* If the target char size differes from the host char size, we'd risk\n+     loosing data and getting object sizes wrong by converting to\n+     host chars.  */\n+  if (TYPE_PRECISION (char_type_node) != CHAR_BIT)\n+    return ctor;\n+\n   /* If the array has an explicit bound, use it to constrain the size\n      of the string.  If it doesn't, be sure to create a string that's\n      as long as implied by the index of the last zero specified via"}]}