{"sha": "2b4044d8c271d22407d6d34caf625380daaa14b4", "node_id": "C_kwDOANBUbNoAKDJiNDA0NGQ4YzI3MWQyMjQwN2Q2ZDM0Y2FmNjI1MzgwZGFhYTE0YjQ", "commit": {"author": {"name": "Richard Sandiford", "email": "richard.sandiford@arm.com", "date": "2022-02-03T10:44:01Z"}, "committer": {"name": "Richard Sandiford", "email": "richard.sandiford@arm.com", "date": "2022-02-03T10:44:01Z"}, "message": "aarch64: Adjust tests after fix for PR102659\n\nAfter the fix for PR102659, the vectoriser can no longer group\nconditional accesses of the form:\n\n  for (int i = 0; i < n; ++i)\n    if (...)\n      ...a[i * 2] + a[i * 2 + 1]...;\n\non LP64 targets.  It has to treat them as two independent\ngathers instead.\n\nThis was causing failures in the sve mask_struct*.c tests.\nThe tests weren't really testing that int iterators could\nbe used, so this patch switches to pointer-sized iterators\ninstead.\n\ngcc/testsuite/\n\t* gcc.target/aarch64/sve/mask_struct_load_1.c: Use intptr_t\n\titerators instead of int iterators.\n\t* gcc.target/aarch64/sve/mask_struct_load_2.c: Likewise.\n\t* gcc.target/aarch64/sve/mask_struct_load_3.c: Likewise.\n\t* gcc.target/aarch64/sve/mask_struct_load_4.c: Likewise.\n\t* gcc.target/aarch64/sve/mask_struct_load_5.c: Likewise.\n\t* gcc.target/aarch64/sve/mask_struct_load_6.c: Likewise.\n\t* gcc.target/aarch64/sve/mask_struct_load_7.c: Likewise.\n\t* gcc.target/aarch64/sve/mask_struct_load_8.c: Likewise.\n\t* gcc.target/aarch64/sve/mask_struct_store_1.c: Likewise.\n\t* gcc.target/aarch64/sve/mask_struct_store_2.c: Likewise.\n\t* gcc.target/aarch64/sve/mask_struct_store_3.c: Likewise.\n\t* gcc.target/aarch64/sve/mask_struct_store_4.c: Likewise.", "tree": {"sha": "221a78afb5e4c9a5254dc8ef6db2fdf686dc9bda", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/221a78afb5e4c9a5254dc8ef6db2fdf686dc9bda"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2b4044d8c271d22407d6d34caf625380daaa14b4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2b4044d8c271d22407d6d34caf625380daaa14b4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2b4044d8c271d22407d6d34caf625380daaa14b4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2b4044d8c271d22407d6d34caf625380daaa14b4/comments", "author": {"login": "rsandifo-arm", "id": 28043039, "node_id": "MDQ6VXNlcjI4MDQzMDM5", "avatar_url": "https://avatars.githubusercontent.com/u/28043039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo-arm", "html_url": "https://github.com/rsandifo-arm", "followers_url": "https://api.github.com/users/rsandifo-arm/followers", "following_url": "https://api.github.com/users/rsandifo-arm/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo-arm/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo-arm/orgs", "repos_url": "https://api.github.com/users/rsandifo-arm/repos", "events_url": "https://api.github.com/users/rsandifo-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo-arm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rsandifo-arm", "id": 28043039, "node_id": "MDQ6VXNlcjI4MDQzMDM5", "avatar_url": "https://avatars.githubusercontent.com/u/28043039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo-arm", "html_url": "https://github.com/rsandifo-arm", "followers_url": "https://api.github.com/users/rsandifo-arm/followers", "following_url": "https://api.github.com/users/rsandifo-arm/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo-arm/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo-arm/orgs", "repos_url": "https://api.github.com/users/rsandifo-arm/repos", "events_url": "https://api.github.com/users/rsandifo-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo-arm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7e4f89a23e32604f71f8f6756c8856bf07bf7ac2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7e4f89a23e32604f71f8f6756c8856bf07bf7ac2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7e4f89a23e32604f71f8f6756c8856bf07bf7ac2"}], "stats": {"total": 50, "additions": 25, "deletions": 25}, "files": [{"sha": "450fbb887e39f5f8f33b43769f1c5197f249f48f", "filename": "gcc/testsuite/gcc.target/aarch64/sve/mask_struct_load_1.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b4044d8c271d22407d6d34caf625380daaa14b4/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Fmask_struct_load_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b4044d8c271d22407d6d34caf625380daaa14b4/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Fmask_struct_load_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Fmask_struct_load_1.c?ref=2b4044d8c271d22407d6d34caf625380daaa14b4", "patch": "@@ -6,9 +6,9 @@\n #define TEST_LOOP(NAME, OUTTYPE, INTYPE, MASKTYPE)\t\t\\\n   void __attribute__ ((noinline, noclone))\t\t\t\\\n   NAME##_2 (OUTTYPE *__restrict dest, INTYPE *__restrict src,\t\\\n-\t    MASKTYPE *__restrict cond, int n)\t\t\t\\\n+\t    MASKTYPE *__restrict cond, intptr_t n)\t\t\\\n   {\t\t\t\t\t\t\t\t\\\n-    for (int i = 0; i < n; ++i)\t\t\t\t\t\\\n+    for (intptr_t i = 0; i < n; ++i)\t\t\t\t\\\n       if (cond[i])\t\t\t\t\t\t\\\n \tdest[i] = src[i * 2] + src[i * 2 + 1];\t\t\t\\\n   }"}, {"sha": "499abd7c99a1c5cd3d255eacd86b2a74f8b9673e", "filename": "gcc/testsuite/gcc.target/aarch64/sve/mask_struct_load_2.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b4044d8c271d22407d6d34caf625380daaa14b4/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Fmask_struct_load_2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b4044d8c271d22407d6d34caf625380daaa14b4/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Fmask_struct_load_2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Fmask_struct_load_2.c?ref=2b4044d8c271d22407d6d34caf625380daaa14b4", "patch": "@@ -6,9 +6,9 @@\n #define TEST_LOOP(NAME, OUTTYPE, INTYPE, MASKTYPE)\t\t\\\n   void __attribute__ ((noinline, noclone))\t\t\t\\\n   NAME##_3 (OUTTYPE *__restrict dest, INTYPE *__restrict src,\t\\\n-\t    MASKTYPE *__restrict cond, int n)\t\t\t\\\n+\t    MASKTYPE *__restrict cond, intptr_t n)\t\t\\\n   {\t\t\t\t\t\t\t\t\\\n-    for (int i = 0; i < n; ++i)\t\t\t\t\t\\\n+    for (intptr_t i = 0; i < n; ++i)\t\t\t\t\\\n       if (cond[i])\t\t\t\t\t\t\\\n \tdest[i] = (src[i * 3]\t\t\t\t\t\\\n \t\t   + src[i * 3 + 1]\t\t\t\t\\"}, {"sha": "a5ce0716322dabe4ac5161bef2144fe066e1b9c4", "filename": "gcc/testsuite/gcc.target/aarch64/sve/mask_struct_load_3.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b4044d8c271d22407d6d34caf625380daaa14b4/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Fmask_struct_load_3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b4044d8c271d22407d6d34caf625380daaa14b4/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Fmask_struct_load_3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Fmask_struct_load_3.c?ref=2b4044d8c271d22407d6d34caf625380daaa14b4", "patch": "@@ -6,9 +6,9 @@\n #define TEST_LOOP(NAME, OUTTYPE, INTYPE, MASKTYPE)\t\t\\\n   void __attribute__ ((noinline, noclone))\t\t\t\\\n   NAME##_4 (OUTTYPE *__restrict dest, INTYPE *__restrict src,\t\\\n-\t    MASKTYPE *__restrict cond, int n)\t\t\t\\\n+\t    MASKTYPE *__restrict cond, intptr_t n)\t\t\\\n   {\t\t\t\t\t\t\t\t\\\n-    for (int i = 0; i < n; ++i)\t\t\t\t\t\\\n+    for (intptr_t i = 0; i < n; ++i)\t\t\t\t\\\n       if (cond[i])\t\t\t\t\t\t\\\n \tdest[i] = (src[i * 4]\t\t\t\t\t\\\n \t\t   + src[i * 4 + 1]\t\t\t\t\\"}, {"sha": "bdfea964f88a1dd456302756086237b823bd405c", "filename": "gcc/testsuite/gcc.target/aarch64/sve/mask_struct_load_4.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b4044d8c271d22407d6d34caf625380daaa14b4/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Fmask_struct_load_4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b4044d8c271d22407d6d34caf625380daaa14b4/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Fmask_struct_load_4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Fmask_struct_load_4.c?ref=2b4044d8c271d22407d6d34caf625380daaa14b4", "patch": "@@ -6,9 +6,9 @@\n #define TEST_LOOP(NAME, OUTTYPE, INTYPE, MASKTYPE)\t\t\\\n   void __attribute__ ((noinline, noclone))\t\t\t\\\n   NAME##_3 (OUTTYPE *__restrict dest, INTYPE *__restrict src,\t\\\n-\t    MASKTYPE *__restrict cond, int n)\t\t\t\\\n+\t    MASKTYPE *__restrict cond, intptr_t n)\t\t\\\n   {\t\t\t\t\t\t\t\t\\\n-    for (int i = 0; i < n; ++i)\t\t\t\t\t\\\n+    for (intptr_t i = 0; i < n; ++i)\t\t\t\t\\\n       if (cond[i])\t\t\t\t\t\t\\\n \tdest[i] = src[i * 3] + src[i * 3 + 2];\t\t\t\\\n   }"}, {"sha": "299955a8a93d948d0d10ad22bb8ffa44e2eae486", "filename": "gcc/testsuite/gcc.target/aarch64/sve/mask_struct_load_5.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b4044d8c271d22407d6d34caf625380daaa14b4/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Fmask_struct_load_5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b4044d8c271d22407d6d34caf625380daaa14b4/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Fmask_struct_load_5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Fmask_struct_load_5.c?ref=2b4044d8c271d22407d6d34caf625380daaa14b4", "patch": "@@ -6,9 +6,9 @@\n #define TEST_LOOP(NAME, OUTTYPE, INTYPE, MASKTYPE)\t\t\\\n   void __attribute__ ((noinline, noclone))\t\t\t\\\n   NAME##_4 (OUTTYPE *__restrict dest, INTYPE *__restrict src,\t\\\n-\t    MASKTYPE *__restrict cond, int n)\t\t\t\\\n+\t    MASKTYPE *__restrict cond, intptr_t n)\t\t\\\n   {\t\t\t\t\t\t\t\t\\\n-    for (int i = 0; i < n; ++i)\t\t\t\t\t\\\n+    for (intptr_t i = 0; i < n; ++i)\t\t\t\t\\\n       if (cond[i])\t\t\t\t\t\t\\\n \tdest[i] = src[i * 4] + src[i * 4 + 3];\t\t\t\\\n   }"}, {"sha": "999c7b52422db2f2befe798e174645f0220f1307", "filename": "gcc/testsuite/gcc.target/aarch64/sve/mask_struct_load_6.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b4044d8c271d22407d6d34caf625380daaa14b4/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Fmask_struct_load_6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b4044d8c271d22407d6d34caf625380daaa14b4/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Fmask_struct_load_6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Fmask_struct_load_6.c?ref=2b4044d8c271d22407d6d34caf625380daaa14b4", "patch": "@@ -6,9 +6,9 @@\n #define TEST_LOOP(NAME, OUTTYPE, INTYPE, MASKTYPE)\t\t\\\n   void __attribute__ ((noinline, noclone))\t\t\t\\\n   NAME##_2 (OUTTYPE *__restrict dest, INTYPE *__restrict src,\t\\\n-\t    MASKTYPE *__restrict cond, int n)\t\t\t\\\n+\t    MASKTYPE *__restrict cond, intptr_t n)\t\t\\\n   {\t\t\t\t\t\t\t\t\\\n-    for (int i = 0; i < n; ++i)\t\t\t\t\t\\\n+    for (intptr_t i = 0; i < n; ++i)\t\t\t\t\\\n       if (cond[i])\t\t\t\t\t\t\\\n \tdest[i] = src[i * 2];\t\t\t\t\t\\\n   }"}, {"sha": "57d71ed460a7087a1deb0c407f8c86362e0eef77", "filename": "gcc/testsuite/gcc.target/aarch64/sve/mask_struct_load_7.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b4044d8c271d22407d6d34caf625380daaa14b4/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Fmask_struct_load_7.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b4044d8c271d22407d6d34caf625380daaa14b4/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Fmask_struct_load_7.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Fmask_struct_load_7.c?ref=2b4044d8c271d22407d6d34caf625380daaa14b4", "patch": "@@ -6,9 +6,9 @@\n #define TEST_LOOP(NAME, OUTTYPE, INTYPE, MASKTYPE)\t\t\\\n   void __attribute__ ((noinline, noclone))\t\t\t\\\n   NAME##_3 (OUTTYPE *__restrict dest, INTYPE *__restrict src,\t\\\n-\t    MASKTYPE *__restrict cond, int n)\t\t\t\\\n+\t    MASKTYPE *__restrict cond, intptr_t n)\t\t\\\n   {\t\t\t\t\t\t\t\t\\\n-    for (int i = 0; i < n; ++i)\t\t\t\t\t\\\n+    for (intptr_t i = 0; i < n; ++i)\t\t\t\t\\\n       if (cond[i])\t\t\t\t\t\t\\\n \tdest[i] = src[i * 3] + src[i * 3 + 1];\t\t\t\\\n   }"}, {"sha": "1ead3ba695e6724d4ac692c2a3003cd356874ad8", "filename": "gcc/testsuite/gcc.target/aarch64/sve/mask_struct_load_8.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b4044d8c271d22407d6d34caf625380daaa14b4/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Fmask_struct_load_8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b4044d8c271d22407d6d34caf625380daaa14b4/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Fmask_struct_load_8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Fmask_struct_load_8.c?ref=2b4044d8c271d22407d6d34caf625380daaa14b4", "patch": "@@ -6,9 +6,9 @@\n #define TEST_LOOP(NAME, OUTTYPE, INTYPE, MASKTYPE)\t\t\\\n   void __attribute__ ((noinline, noclone))\t\t\t\\\n   NAME##_4 (OUTTYPE *__restrict dest, INTYPE *__restrict src,\t\\\n-\t    MASKTYPE *__restrict cond, int n)\t\t\t\\\n+\t    MASKTYPE *__restrict cond, intptr_t n)\t\t\\\n   {\t\t\t\t\t\t\t\t\\\n-    for (int i = 0; i < n; ++i)\t\t\t\t\t\\\n+    for (intptr_t i = 0; i < n; ++i)\t\t\t\t\\\n       if (cond[i])\t\t\t\t\t\t\\\n \tdest[i] = src[i * 4] + src[i * 4 + 2];\t\t\t\\\n   }"}, {"sha": "39fae68a5d02ad713ae9fa662f1ef08a8463fd78", "filename": "gcc/testsuite/gcc.target/aarch64/sve/mask_struct_store_1.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b4044d8c271d22407d6d34caf625380daaa14b4/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Fmask_struct_store_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b4044d8c271d22407d6d34caf625380daaa14b4/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Fmask_struct_store_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Fmask_struct_store_1.c?ref=2b4044d8c271d22407d6d34caf625380daaa14b4", "patch": "@@ -6,9 +6,9 @@\n #define TEST_LOOP(NAME, OUTTYPE, INTYPE, MASKTYPE)\t\t\\\n   void __attribute__ ((noinline, noclone))\t\t\t\\\n   NAME##_2 (OUTTYPE *__restrict dest, INTYPE *__restrict src,\t\\\n-\t    MASKTYPE *__restrict cond, INTYPE bias, int n)\t\\\n+\t    MASKTYPE *__restrict cond, INTYPE bias, intptr_t n)\t\\\n   {\t\t\t\t\t\t\t\t\\\n-    for (int i = 0; i < n; ++i)\t\t\t\t\t\\\n+    for (intptr_t i = 0; i < n; ++i)\t\t\t\t\\\n       {\t\t\t\t\t\t\t\t\\\n \tINTYPE value = src[i] + bias;\t\t\t\t\\\n \tif (cond[i])\t\t\t\t\t\t\\"}, {"sha": "0fe9b9934029a32281d53a5e1628a54054823b1d", "filename": "gcc/testsuite/gcc.target/aarch64/sve/mask_struct_store_2.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b4044d8c271d22407d6d34caf625380daaa14b4/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Fmask_struct_store_2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b4044d8c271d22407d6d34caf625380daaa14b4/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Fmask_struct_store_2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Fmask_struct_store_2.c?ref=2b4044d8c271d22407d6d34caf625380daaa14b4", "patch": "@@ -6,9 +6,9 @@\n #define TEST_LOOP(NAME, OUTTYPE, INTYPE, MASKTYPE)\t\t\\\n   void __attribute__ ((noinline, noclone))\t\t\t\\\n   NAME##_3 (OUTTYPE *__restrict dest, INTYPE *__restrict src,\t\\\n-\t    MASKTYPE *__restrict cond, INTYPE bias, int n)\t\\\n+\t    MASKTYPE *__restrict cond, INTYPE bias, intptr_t n)\t\\\n   {\t\t\t\t\t\t\t\t\\\n-    for (int i = 0; i < n; ++i)\t\t\t\t\t\\\n+    for (intptr_t i = 0; i < n; ++i)\t\t\t\t\\\n       {\t\t\t\t\t\t\t\t\\\n \tINTYPE value = src[i] + bias;\t\t\t\t\\\n \tif (cond[i])\t\t\t\t\t\t\\"}, {"sha": "a9430870eee20457a5c75a9b6b379c98b9d4eed1", "filename": "gcc/testsuite/gcc.target/aarch64/sve/mask_struct_store_3.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b4044d8c271d22407d6d34caf625380daaa14b4/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Fmask_struct_store_3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b4044d8c271d22407d6d34caf625380daaa14b4/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Fmask_struct_store_3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Fmask_struct_store_3.c?ref=2b4044d8c271d22407d6d34caf625380daaa14b4", "patch": "@@ -6,9 +6,9 @@\n #define TEST_LOOP(NAME, OUTTYPE, INTYPE, MASKTYPE)\t\t\\\n   void __attribute__ ((noinline, noclone))\t\t\t\\\n   NAME##_4 (OUTTYPE *__restrict dest, INTYPE *__restrict src,\t\\\n-\t    MASKTYPE *__restrict cond, INTYPE bias, int n)\t\\\n+\t    MASKTYPE *__restrict cond, INTYPE bias, intptr_t n)\t\\\n   {\t\t\t\t\t\t\t\t\\\n-    for (int i = 0; i < n; ++i)\t\t\t\t\t\\\n+    for (intptr_t i = 0; i < n; ++i)\t\t\t\t\\\n       {\t\t\t\t\t\t\t\t\\\n \tINTYPE value = src[i] + bias;\t\t\t\t\\\n \tif (cond[i])\t\t\t\t\t\t\\"}, {"sha": "d3f0216406dee1fa9d91b66833883922a43dd42e", "filename": "gcc/testsuite/gcc.target/aarch64/sve/mask_struct_store_4.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b4044d8c271d22407d6d34caf625380daaa14b4/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Fmask_struct_store_4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b4044d8c271d22407d6d34caf625380daaa14b4/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Fmask_struct_store_4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Fmask_struct_store_4.c?ref=2b4044d8c271d22407d6d34caf625380daaa14b4", "patch": "@@ -6,15 +6,15 @@\n #define TEST_LOOP(NAME, OUTTYPE, INTYPE, MASKTYPE)\t\t\\\n   void __attribute__ ((noinline, noclone))\t\t\t\\\n   NAME##_2 (OUTTYPE *__restrict dest, INTYPE *__restrict src,\t\\\n-\t    MASKTYPE *__restrict cond, int n)\t\t\t\\\n+\t    MASKTYPE *__restrict cond, intptr_t n)\t\t\\\n   {\t\t\t\t\t\t\t\t\\\n-    for (int i = 0; i < n; ++i)\t\t\t\t\t\\\n+    for (intptr_t i = 0; i < n; ++i)\t\t\t\t\\\n       {\t\t\t\t\t\t\t\t\\\n \tif (cond[i] < 8)\t\t\t\t\t\\\n \t  dest[i * 2] = src[i];\t\t\t\t\t\\\n \tif (cond[i] > 2)\t\t\t\t\t\\\n \t  dest[i * 2 + 1] = src[i];\t\t\t\t\\\n-\t}\t\t\t\t\t\t\t\\\n+      }\t\t\t\t\t\t\t\t\\\n   }\n \n #define TEST2(NAME, OUTTYPE, INTYPE) \\"}]}