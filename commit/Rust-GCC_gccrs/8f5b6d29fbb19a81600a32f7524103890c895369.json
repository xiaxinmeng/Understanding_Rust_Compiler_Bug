{"sha": "8f5b6d29fbb19a81600a32f7524103890c895369", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGY1YjZkMjlmYmIxOWE4MTYwMGEzMmY3NTI0MTAzODkwYzg5NTM2OQ==", "commit": {"author": {"name": "Steven Bosscher", "email": "steven@gcc.gnu.org", "date": "2003-07-24T08:58:42Z"}, "committer": {"name": "Steven Bosscher", "email": "steven@gcc.gnu.org", "date": "2003-07-24T08:58:42Z"}, "message": "re PR c/10602 (ICE in c-typeck.c (tree check failure))\n\n\tPR c/10602\n\t* c-typeck.c (type_lists_compatible_p): Do not compare\n\targuments if one of them is an error_mark_node.\n\n\t* gcc.dg/noncompile/incomplete-2.c: New test.\n\nFrom-SVN: r69735", "tree": {"sha": "7c9f32a2255ffadbd8832a8a8b3084c2bb4fc7d6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7c9f32a2255ffadbd8832a8a8b3084c2bb4fc7d6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8f5b6d29fbb19a81600a32f7524103890c895369", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8f5b6d29fbb19a81600a32f7524103890c895369", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8f5b6d29fbb19a81600a32f7524103890c895369", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8f5b6d29fbb19a81600a32f7524103890c895369/comments", "author": null, "committer": null, "parents": [{"sha": "acd0b319f1a5718d5a17378734ac957c7ab2f2ee", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/acd0b319f1a5718d5a17378734ac957c7ab2f2ee", "html_url": "https://github.com/Rust-GCC/gccrs/commit/acd0b319f1a5718d5a17378734ac957c7ab2f2ee"}], "stats": {"total": 27, "additions": 27, "deletions": 0}, "files": [{"sha": "335ee18055c17e2515c2413da61cd0a41628d1a5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f5b6d29fbb19a81600a32f7524103890c895369/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f5b6d29fbb19a81600a32f7524103890c895369/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8f5b6d29fbb19a81600a32f7524103890c895369", "patch": "@@ -1,3 +1,9 @@\n+2003-07-24  Steven Bosscher  <steven@gcc.gnu.org>\n+\n+\tPR c/10602\n+\t* c-typeck.c (type_lists_compatible_p): Do not compare\n+\targuments if one of them is an error_mark_node\n+\n 2003-07-24  Alan Modra  <amodra@bigpond.net.au>\n \n \t* config/rs6000/rs6000.c (rs6000_emit_prologue): Save fp regs inline"}, {"sha": "922cda89cf092a16ae60c198e69352103ed90967", "filename": "gcc/c-typeck.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f5b6d29fbb19a81600a32f7524103890c895369/gcc%2Fc-typeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f5b6d29fbb19a81600a32f7524103890c895369/gcc%2Fc-typeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-typeck.c?ref=8f5b6d29fbb19a81600a32f7524103890c895369", "patch": "@@ -860,6 +860,10 @@ type_lists_compatible_p (tree args1, tree args2, int flags)\n \t  if (c_type_promotes_to (TREE_VALUE (args1)) != TREE_VALUE (args1))\n \t    return 0;\n \t}\n+      /* If one of the lists has an error marker, ignore this arg.  */\n+      else if (TREE_CODE (TREE_VALUE (args1)) == ERROR_MARK\n+\t       || TREE_CODE (TREE_VALUE (args2)) == ERROR_MARK)\n+\t;\n       else if (! (newval = comptypes (TYPE_MAIN_VARIANT (TREE_VALUE (args1)),\n \t\t\t\t      TYPE_MAIN_VARIANT (TREE_VALUE (args2)),\n \t\t\t\t      flags)))"}, {"sha": "4881e5ae45b26627d0840bd6282519430e54e4ed", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f5b6d29fbb19a81600a32f7524103890c895369/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f5b6d29fbb19a81600a32f7524103890c895369/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=8f5b6d29fbb19a81600a32f7524103890c895369", "patch": "@@ -1,3 +1,8 @@\n+2003-07-23  Steven Bosscher <steven@gcc.gnu.org>\n+\n+\tPR c/10602\n+\t* gcc.dg/noncompile/incomplete-2.c: New test.\n+\n 2003-07-23  Mark Mitchell  <mark@codesourcery.com>\n \n \tPR c++/11645"}, {"sha": "19864b9b35360b951c029dbd4d90712615a9097f", "filename": "gcc/testsuite/gcc.dg/noncompile/incomplete-2.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f5b6d29fbb19a81600a32f7524103890c895369/gcc%2Ftestsuite%2Fgcc.dg%2Fnoncompile%2Fincomplete-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f5b6d29fbb19a81600a32f7524103890c895369/gcc%2Ftestsuite%2Fgcc.dg%2Fnoncompile%2Fincomplete-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fnoncompile%2Fincomplete-2.c?ref=8f5b6d29fbb19a81600a32f7524103890c895369", "patch": "@@ -0,0 +1,12 @@\n+/* Origin: <steven@gcc.gnu.org>\n+   Make sure we do not ICE when the type in the function\n+   argument list is incomplete (Bug 10602).  */\n+/* { dg-options \"-w\" } */\n+\n+int g95_type_for_mode (enum machine_mode);\n+\n+int\n+g95_type_for_mode (enum machine_mode mode)\n+{ /* { dg-error \"has incomplete type\" } */\n+  return 0;\n+}"}]}