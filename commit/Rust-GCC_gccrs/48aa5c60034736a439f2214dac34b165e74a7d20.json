{"sha": "48aa5c60034736a439f2214dac34b165e74a7d20", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDhhYTVjNjAwMzQ3MzZhNDM5ZjIyMTRkYWMzNGIxNjVlNzRhN2QyMA==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2021-06-08T07:42:18Z"}, "committer": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2021-06-08T07:42:18Z"}, "message": "Fix \"tailing\" typo.\n\ngcc/fortran/ChangeLog:\n\n\t* intrinsic.texi: Fix typo.\n\t* trans-expr.c (gfc_trans_pointer_assignment): Likewise.\n\ngcc/ChangeLog:\n\n\t* genautomata.c (create_automata): Fix typo.\n\nlibgfortran/ChangeLog:\n\n\t* intrinsics/chmod.c (chmod_internal): Fix typo.\n\t* io/transfer.c (read_sf): Likewise.\n\nlibquadmath/ChangeLog:\n\n\t* libquadmath.texi: Fix typo.\n\ngcc/testsuite/ChangeLog:\n\n\t* gcc.dg/format/strfmon-1.c: Fix typo.\n\t* gfortran.dg/char4-subscript.f90: Likewise.", "tree": {"sha": "0caed86d380ea66f38b7da5fb709a87fb51f6ab1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0caed86d380ea66f38b7da5fb709a87fb51f6ab1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/48aa5c60034736a439f2214dac34b165e74a7d20", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/48aa5c60034736a439f2214dac34b165e74a7d20", "html_url": "https://github.com/Rust-GCC/gccrs/commit/48aa5c60034736a439f2214dac34b165e74a7d20", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/48aa5c60034736a439f2214dac34b165e74a7d20/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4db34072d5336d13b66f7185ec6454aa7d36f3c7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4db34072d5336d13b66f7185ec6454aa7d36f3c7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4db34072d5336d13b66f7185ec6454aa7d36f3c7"}], "stats": {"total": 16, "additions": 8, "deletions": 8}, "files": [{"sha": "260dbaae76bace2fd9271cbf7134114878c6abab", "filename": "gcc/fortran/intrinsic.texi", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48aa5c60034736a439f2214dac34b165e74a7d20/gcc%2Ffortran%2Fintrinsic.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48aa5c60034736a439f2214dac34b165e74a7d20/gcc%2Ffortran%2Fintrinsic.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fintrinsic.texi?ref=48aa5c60034736a439f2214dac34b165e74a7d20", "patch": "@@ -502,7 +502,7 @@ Inquiry function\n @item @emph{Arguments}:\n @multitable @columnfractions .15 .70\n @item @var{NAME} @tab Scalar @code{CHARACTER} of default kind with the\n-file name. Tailing blank are ignored unless the character @code{achar(0)}\n+file name. Trailing blank are ignored unless the character @code{achar(0)}\n is present, then all characters up to and excluding @code{achar(0)} are\n used as file name.\n @item @var{MODE} @tab Scalar @code{CHARACTER} of default kind with the"}, {"sha": "de406ad2e8f2b850e812963975bdb51c5f9ea51e", "filename": "gcc/fortran/trans-expr.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48aa5c60034736a439f2214dac34b165e74a7d20/gcc%2Ffortran%2Ftrans-expr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48aa5c60034736a439f2214dac34b165e74a7d20/gcc%2Ffortran%2Ftrans-expr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-expr.c?ref=48aa5c60034736a439f2214dac34b165e74a7d20", "patch": "@@ -9513,7 +9513,7 @@ gfc_trans_pointer_assignment (gfc_expr * expr1, gfc_expr * expr2)\n     {\n       gfc_add_data_component (expr2);\n       /* The following is required as gfc_add_data_component doesn't\n-\t update ts.type if there is a tailing REF_ARRAY.  */\n+\t update ts.type if there is a trailing REF_ARRAY.  */\n       expr2->ts.type = BT_DERIVED;\n     }\n "}, {"sha": "6bbfc684afa0fad8688e23d3b5006f8057545d4e", "filename": "gcc/genautomata.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48aa5c60034736a439f2214dac34b165e74a7d20/gcc%2Fgenautomata.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48aa5c60034736a439f2214dac34b165e74a7d20/gcc%2Fgenautomata.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgenautomata.c?ref=48aa5c60034736a439f2214dac34b165e74a7d20", "patch": "@@ -6787,7 +6787,7 @@ create_automata (void)\n    finish_regexp_representation calls.  */\n \n /* This recursive function forms string representation of regexp\n-   (without tailing '\\0').  */\n+   (without trailing '\\0').  */\n static void\n form_regexp (regexp_t regexp)\n {"}, {"sha": "a790db53c9da719f489fd5826736631b0989e825", "filename": "gcc/testsuite/gcc.dg/format/strfmon-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48aa5c60034736a439f2214dac34b165e74a7d20/gcc%2Ftestsuite%2Fgcc.dg%2Fformat%2Fstrfmon-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48aa5c60034736a439f2214dac34b165e74a7d20/gcc%2Ftestsuite%2Fgcc.dg%2Fformat%2Fstrfmon-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fformat%2Fstrfmon-1.c?ref=48aa5c60034736a439f2214dac34b165e74a7d20", "patch": "@@ -57,7 +57,7 @@ foo (char *s, size_t m, double d, long double ld)\n   strfmon (s, m, \"%n%n\", d); /* { dg-warning \"matching\" \"too few args\" } */\n   strfmon (s, m, \"\"); /* { dg-warning \"zero-length\" \"empty\" } */\n   strfmon (s, m, NULL); /* { dg-warning \"null\" \"null format string\" } */\n-  strfmon (s, m, \"%\"); /* { dg-warning \"trailing\" \"tailing %\" } */\n+  strfmon (s, m, \"%\"); /* { dg-warning \"trailing\" \"trailing %\" } */\n   strfmon (s, m, \"%n\\0\", d); /* { dg-warning \"embedded\" \"embedded NUL\" } */\n   strfmon (s, m, \"%^^n\", d); /* { dg-warning \"repeated\" \"repeated flag\" } */\n }"}, {"sha": "b4e2d11d6c5fc55f88fa4b99bcf1878cc3c2612b", "filename": "gcc/testsuite/gfortran.dg/char4-subscript.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48aa5c60034736a439f2214dac34b165e74a7d20/gcc%2Ftestsuite%2Fgfortran.dg%2Fchar4-subscript.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48aa5c60034736a439f2214dac34b165e74a7d20/gcc%2Ftestsuite%2Fgfortran.dg%2Fchar4-subscript.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fchar4-subscript.f90?ref=48aa5c60034736a439f2214dac34b165e74a7d20", "patch": "@@ -22,7 +22,7 @@\n deallocate(var%str2)\n end\n \n-! Note: the last '\\x00' is regarded as string terminator, hence, the tailing \\0 byte is not in the dump\n+! Note: the last '\\x00' is regarded as string terminator, hence, the trailing \\0 byte is not in the dump\n \n ! { dg-final { scan-tree-dump {  \\(\\*var\\.str2\\)\\[1\\]{lb: 1 sz: 4} = \"(d\\\\x00\\\\x00|\\\\x00\\\\x00\\\\x00d)\"\\[1\\]{lb: 1 sz: 4};} \"original\" } }\n ! { dg-final { scan-tree-dump {  __builtin_memmove \\(\\(void \\*\\) &\\(\\*var.str2\\)\\[2\\]{lb: 1 sz: 4}, \\(void \\*\\) &\"(e\\\\x00\\\\x00\\\\x00f\\\\x00\\\\x00|\\\\x00\\\\x00\\\\x00e\\\\x00\\\\x00\\\\x00f)\"\\[1\\]{lb: 1 sz: 4}, 8\\);} \"original\" } }"}, {"sha": "f4057cb7d063f5776ebce06a237701c81b4a9660", "filename": "libgfortran/intrinsics/chmod.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48aa5c60034736a439f2214dac34b165e74a7d20/libgfortran%2Fintrinsics%2Fchmod.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48aa5c60034736a439f2214dac34b165e74a7d20/libgfortran%2Fintrinsics%2Fchmod.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fintrinsics%2Fchmod.c?ref=48aa5c60034736a439f2214dac34b165e74a7d20", "patch": "@@ -271,7 +271,7 @@ chmod_internal (char *file, char *mode, gfc_charlen_type mode_len)\n \t      part = 3;\n \t      break;\n \n-\t    /* Tailing blanks are valid in Fortran.  */\n+\t    /* Trailing blanks are valid in Fortran.  */\n \t    case ' ':\n \t      for (i++; i < mode_len; i++)\n \t\tif (mode[i] != ' ')"}, {"sha": "e44b2df6058b7afa49086c38c7bf9b277ba86b07", "filename": "libgfortran/io/transfer.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48aa5c60034736a439f2214dac34b165e74a7d20/libgfortran%2Fio%2Ftransfer.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48aa5c60034736a439f2214dac34b165e74a7d20/libgfortran%2Fio%2Ftransfer.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fio%2Ftransfer.c?ref=48aa5c60034736a439f2214dac34b165e74a7d20", "patch": "@@ -491,7 +491,7 @@ read_sf (st_parameter_dt *dtp, size_t *length)\n \n    If the read is short, then it is because the current record does not\n    have enough data to satisfy the read request and the file was\n-   opened with PAD=YES.  The caller must assume tailing spaces for\n+   opened with PAD=YES.  The caller must assume trailing spaces for\n    short reads.  */\n \n void *"}, {"sha": "261655950e4b7a50fe379810b6eff0ab04321d96", "filename": "libquadmath/libquadmath.texi", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48aa5c60034736a439f2214dac34b165e74a7d20/libquadmath%2Flibquadmath.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48aa5c60034736a439f2214dac34b165e74a7d20/libquadmath%2Flibquadmath.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libquadmath%2Flibquadmath.texi?ref=48aa5c60034736a439f2214dac34b165e74a7d20", "patch": "@@ -309,7 +309,7 @@ the format.\n @item @emph{Arguments}:\n @multitable @columnfractions .15 .70\n @item @var{s}    @tab output string\n-@item @var{size} @tab byte size of the string, including tailing NUL\n+@item @var{size} @tab byte size of the string, including trailing NUL\n @item @var{format} @tab conversion specifier string\n @end multitable\n "}]}