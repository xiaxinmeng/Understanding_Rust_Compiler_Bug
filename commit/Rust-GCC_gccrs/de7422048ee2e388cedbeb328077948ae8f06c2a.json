{"sha": "de7422048ee2e388cedbeb328077948ae8f06c2a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGU3NDIyMDQ4ZWUyZTM4OGNlZGJlYjMyODA3Nzk0OGFlOGYwNmMyYQ==", "commit": {"author": {"name": "John Marino", "email": "gnugcc@marino.st", "date": "2017-07-19T15:55:11Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2017-07-19T15:55:11Z"}, "message": "Fix Unwind support on DragonFly BSD after sigtramp move\n\n2017-07-19  John Marino  <gnugcc@marino.st>\n\n\t* config/i386/dragonfly-unwind.h: Handle sigtramp relocation.\n\nFrom-SVN: r250354", "tree": {"sha": "bd6989b07b46ec381f344b4b3cc82b35b3ef56b7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bd6989b07b46ec381f344b4b3cc82b35b3ef56b7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/de7422048ee2e388cedbeb328077948ae8f06c2a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/de7422048ee2e388cedbeb328077948ae8f06c2a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/de7422048ee2e388cedbeb328077948ae8f06c2a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/de7422048ee2e388cedbeb328077948ae8f06c2a/comments", "author": null, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e020783cd60ae60a361cd18f1a3763f65f30b0b8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e020783cd60ae60a361cd18f1a3763f65f30b0b8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e020783cd60ae60a361cd18f1a3763f65f30b0b8"}], "stats": {"total": 63, "additions": 46, "deletions": 17}, "files": [{"sha": "db33eea13781649e62436091ec62cb0b3e6e7518", "filename": "libgcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de7422048ee2e388cedbeb328077948ae8f06c2a/libgcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de7422048ee2e388cedbeb328077948ae8f06c2a/libgcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2FChangeLog?ref=de7422048ee2e388cedbeb328077948ae8f06c2a", "patch": "@@ -1,3 +1,7 @@\n+2017-07-19  John Marino  <gnugcc@marino.st>\n+\n+\t* config/i386/dragonfly-unwind.h: Handle sigtramp relocation.\n+\n 2017-07-12  Michael Meissner  <meissner@linux.vnet.ibm.com>\n \n \tPR target/81193"}, {"sha": "ca1f46e92dbf819f046432118ccf5dc6b8df09f0", "filename": "libgcc/config/i386/dragonfly-unwind.h", "status": "modified", "additions": 42, "deletions": 17, "changes": 59, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de7422048ee2e388cedbeb328077948ae8f06c2a/libgcc%2Fconfig%2Fi386%2Fdragonfly-unwind.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de7422048ee2e388cedbeb328077948ae8f06c2a/libgcc%2Fconfig%2Fi386%2Fdragonfly-unwind.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fi386%2Fdragonfly-unwind.h?ref=de7422048ee2e388cedbeb328077948ae8f06c2a", "patch": "@@ -28,9 +28,13 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n \n #include <sys/types.h>\n #include <sys/sysctl.h>\n+#include <sys/param.h>\n #include <signal.h>\n #include <sys/ucontext.h>\n #include <machine/sigframe.h>\n+#if __DragonFly_version > 400800\n+#include <sys/kinfo.h>\n+#endif\n \n \n #define REG_NAME(reg)\tsf_uc.uc_mcontext.mc_## reg\n@@ -39,34 +43,55 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n #define MD_FALLBACK_FRAME_STATE_FOR x86_64_dragonfly_fallback_frame_state\n \n \n-static void\n-x86_64_sigtramp_range (unsigned char **start, unsigned char **end)\n+static int\n+x86_64_outside_sigtramp_range (unsigned char *pc)\n {\n-  unsigned long ps_strings;\n-  int mib[2];\n-  size_t len;\n-\n-  mib[0] = CTL_KERN;\n-  mib[1] = KERN_PS_STRINGS;\n-  len = sizeof (ps_strings);\n-  sysctl (mib, 2, &ps_strings, &len, NULL, 0);\n-\n-  *start = (unsigned char *)ps_strings - 32;\n-  *end   = (unsigned char *)ps_strings;\n+  static int sigtramp_range_determined = 0;\n+  static unsigned char *sigtramp_start, *sigtramp_end;\n+\n+  if (sigtramp_range_determined == 0)\n+    {\n+#if __DragonFly_version > 400800\n+      struct kinfo_sigtramp kst = {0};\n+      size_t len = sizeof (kst);\n+      int mib[3] = { CTL_KERN, KERN_PROC, KERN_PROC_SIGTRAMP };\n+\n+      sigtramp_range_determined = 1;\n+      if (sysctl (mib, 3, &kst, &len, NULL, 0) == 0)\n+      {\n+        sigtramp_range_determined = 2;\n+        sigtramp_start = kst.ksigtramp_start;\n+        sigtramp_end   = kst.ksigtramp_end;\n+      }\n+#else\n+      unsigned long ps_strings;\n+      size_t len = sizeof (ps_strings);\n+      int mib[2] = { CTL_KERN, KERN_PS_STRINGS };\n+\n+      sigtramp_range_determined = 1;\n+      if (sysctl (mib, 2, &ps_strings, &len, NULL, 0) == 0)\n+      {\n+        sigtramp_range_determined = 2;\n+        sigtramp_start = (unsigned char *)ps_strings - 32;\n+        sigtramp_end   = (unsigned char *)ps_strings;\n+      }\n+#endif\n+    }\n+  if (sigtramp_range_determined < 2)  /* sysctl failed if < 2 */\n+    return 1;\n+\n+  return (pc < sigtramp_start || pc >= sigtramp_end );\n }\n \n \n static _Unwind_Reason_Code\n x86_64_dragonfly_fallback_frame_state\n (struct _Unwind_Context *context, _Unwind_FrameState *fs)\n {\n-  unsigned char *pc = context->ra;\n-  unsigned char *sigtramp_start, *sigtramp_end;\n   struct sigframe *sf;\n   long new_cfa;\n \n-  x86_64_sigtramp_range(&sigtramp_start, &sigtramp_end);\n-  if (pc >= sigtramp_end || pc < sigtramp_start)\n+  if (x86_64_outside_sigtramp_range(context->ra))\n     return _URC_END_OF_STACK;\n \n   sf = (struct sigframe *) context->cfa;"}]}