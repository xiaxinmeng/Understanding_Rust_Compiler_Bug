{"sha": "2897f1d41141d67398e0647d9713d690c4368959", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Mjg5N2YxZDQxMTQxZDY3Mzk4ZTA2NDdkOTcxM2Q2OTBjNDM2ODk1OQ==", "commit": {"author": {"name": "H.J. Lu", "email": "hongjiu.lu@intel.com", "date": "2004-04-08T05:04:26Z"}, "committer": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2004-04-08T05:04:26Z"}, "message": "ia64.c (ia64_encode_section_info): Don't prod global register variables.\n\n2004-04-07  H.J. Lu  <hongjiu.lu@intel.com>\n\n\t* config/ia64/ia64.c (ia64_encode_section_info): Don't prod\n\tglobal register variables.\n\nFrom-SVN: r80501", "tree": {"sha": "9fab7485fa340cd6039e9d323b83b25648020cad", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9fab7485fa340cd6039e9d323b83b25648020cad"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2897f1d41141d67398e0647d9713d690c4368959", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2897f1d41141d67398e0647d9713d690c4368959", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2897f1d41141d67398e0647d9713d690c4368959", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2897f1d41141d67398e0647d9713d690c4368959/comments", "author": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "acc18e7a4879aa3ccfba45eb8a4bedac560cd236", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/acc18e7a4879aa3ccfba45eb8a4bedac560cd236", "html_url": "https://github.com/Rust-GCC/gccrs/commit/acc18e7a4879aa3ccfba45eb8a4bedac560cd236"}], "stats": {"total": 8, "additions": 8, "deletions": 0}, "files": [{"sha": "434bbaa7e5176ee07a3995a2d81ef22b5153b7ea", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2897f1d41141d67398e0647d9713d690c4368959/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2897f1d41141d67398e0647d9713d690c4368959/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2897f1d41141d67398e0647d9713d690c4368959", "patch": "@@ -1,3 +1,8 @@\n+2004-04-07  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\t* config/ia64/ia64.c (ia64_encode_section_info): Don't prod\n+\tglobal register variables.\n+\n 2004-04-07  Joseph S. Myers  <jsm@polyomino.org.uk>\n \n \t* fixinc/inclhack.def (rpc_xdr_lvalue_cast_a,"}, {"sha": "92cc4fd24e983e7db83aa827a1047ba9d7d8493b", "filename": "gcc/config/ia64/ia64.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2897f1d41141d67398e0647d9713d690c4368959/gcc%2Fconfig%2Fia64%2Fia64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2897f1d41141d67398e0647d9713d690c4368959/gcc%2Fconfig%2Fia64%2Fia64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fia64%2Fia64.c?ref=2897f1d41141d67398e0647d9713d690c4368959", "patch": "@@ -1116,7 +1116,10 @@ ia64_encode_section_info (tree decl, rtx rtl, int first)\n {\n   default_encode_section_info (decl, rtl, first);\n \n+  /* Careful not to prod global register variables.  */\n   if (TREE_CODE (decl) == VAR_DECL\n+      && GET_CODE (DECL_RTL (decl)) == MEM\n+      && GET_CODE (XEXP (DECL_RTL (decl), 0)) == SYMBOL_REF\n       && (TREE_STATIC (decl) || DECL_EXTERNAL (decl)))\n     ia64_encode_addr_area (decl, XEXP (rtl, 0));\n }"}]}