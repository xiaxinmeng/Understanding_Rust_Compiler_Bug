{"sha": "c9a1acdcc6d6f779290d32a637a31e43f4738d05", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzlhMWFjZGNjNmQ2Zjc3OTI5MGQzMmE2MzdhMzFlNDNmNDczOGQwNQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-04-22T10:42:35Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-04-22T10:42:35Z"}, "message": "[multiple changes]\n\n2009-04-22  Robert Dewar  <dewar@adacore.com>\n\n\t* sem_aggr.adb: Minor reformatting.\n\n\t* sem_type.adb: Minor reformatting\n\n2009-04-22  Vincent Celier  <celier@adacore.com>\n\n\t* prj-attr.adb: New single project level attribute\n\tSeparate_Run_Path_Options.\n\n\t* prj-nmsc.adb (Process_Project_Level_Simple_Attributes): Process\n\tattribute Seperate_Run_Path_Options.\n\n\t* prj.ads: (Project_Configuration): New Boolean component\n\tSeparate_Run_Path_Options, defaulted to False.\n\n\t* snames.ads-tmpl: New standard name Seperate_Run_Path_Options\n\nFrom-SVN: r146563", "tree": {"sha": "ccd45d7c5ef76c1c0961900474477b7912a2b275", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ccd45d7c5ef76c1c0961900474477b7912a2b275"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c9a1acdcc6d6f779290d32a637a31e43f4738d05", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c9a1acdcc6d6f779290d32a637a31e43f4738d05", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c9a1acdcc6d6f779290d32a637a31e43f4738d05", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c9a1acdcc6d6f779290d32a637a31e43f4738d05/comments", "author": null, "committer": null, "parents": [{"sha": "6d2a112099a7d69ea9a4f0d0468882289583bb48", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6d2a112099a7d69ea9a4f0d0468882289583bb48", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6d2a112099a7d69ea9a4f0d0468882289583bb48"}], "stats": {"total": 168, "additions": 102, "deletions": 66}, "files": [{"sha": "bae8bef47fc51d5f7e0a77f35ad8e4251ffacac9", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9a1acdcc6d6f779290d32a637a31e43f4738d05/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9a1acdcc6d6f779290d32a637a31e43f4738d05/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=c9a1acdcc6d6f779290d32a637a31e43f4738d05", "patch": "@@ -1,5 +1,20 @@\n+2009-04-22  Vincent Celier  <celier@adacore.com>\n+\n+\t* prj-attr.adb: New single project level attribute\n+\tSeparate_Run_Path_Options.\n+\n+\t* prj-nmsc.adb (Process_Project_Level_Simple_Attributes): Process\n+\tattribute Seperate_Run_Path_Options.\n+\n+\t* prj.ads: (Project_Configuration): New Boolean component\n+\tSeparate_Run_Path_Options, defaulted to False.\n+\n+\t* snames.ads-tmpl: New standard name Seperate_Run_Path_Options\n+\n 2009-04-22  Robert Dewar  <dewar@adacore.com>\n \n+\t* sem_type.adb: Minor reformatting\n+\n \t* mlib.adb: Minor reformatting\n \n \t* sem_aggr.adb: Minor reformatting. Defend against junk aggregate from"}, {"sha": "7d0ddead26012707ae05b722911acf4889e3854c", "filename": "gcc/ada/prj-attr.adb", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9a1acdcc6d6f779290d32a637a31e43f4738d05/gcc%2Fada%2Fprj-attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9a1acdcc6d6f779290d32a637a31e43f4738d05/gcc%2Fada%2Fprj-attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-attr.adb?ref=c9a1acdcc6d6f779290d32a637a31e43f4738d05", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2001-2008, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2001-2009, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -112,6 +112,7 @@ package body Prj.Attr is\n \n    \"SVdefault_language#\" &\n    \"LVrun_path_option#\" &\n+   \"SVseparate_run_path_options#\" &\n    \"Satoolchain_version#\" &\n    \"Satoolchain_description#\" &\n    \"Saobject_generated#\" &"}, {"sha": "f0058c2183995d5d78094be77e0936f07ec0a250", "filename": "gcc/ada/prj-nmsc.adb", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9a1acdcc6d6f779290d32a637a31e43f4738d05/gcc%2Fada%2Fprj-nmsc.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9a1acdcc6d6f779290d32a637a31e43f4738d05/gcc%2Fada%2Fprj-nmsc.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-nmsc.adb?ref=c9a1acdcc6d6f779290d32a637a31e43f4738d05", "patch": "@@ -2155,6 +2155,24 @@ package body Prj.Nmsc is\n                           In_Tree   => In_Tree);\n                   end if;\n \n+               elsif Attribute.Name = Name_Separate_Run_Path_Options then\n+                  declare\n+                     pragma Unsuppress (All_Checks);\n+                  begin\n+                     Data.Config.Separate_Run_Path_Options :=\n+                       Boolean'Value (Get_Name_String\n+                                        (Attribute.Value.Value));\n+                  exception\n+                     when Constraint_Error =>\n+                        Error_Msg\n+                          (Project,\n+                           In_Tree,\n+                           \"invalid value \"\"\" &\n+                           Get_Name_String (Attribute.Value.Value) &\n+                           \"\"\" for Separate_Run_Path_Options\",\n+                           Attribute.Value.Location);\n+                  end;\n+\n                elsif Attribute.Name = Name_Library_Support then\n                   declare\n                      pragma Unsuppress (All_Checks);"}, {"sha": "ff1393216ffbcfbf692693400c1a75ed864ed1ad", "filename": "gcc/ada/prj.ads", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9a1acdcc6d6f779290d32a637a31e43f4738d05/gcc%2Fada%2Fprj.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9a1acdcc6d6f779290d32a637a31e43f4738d05/gcc%2Fada%2Fprj.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj.ads?ref=c9a1acdcc6d6f779290d32a637a31e43f4738d05", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 2001-2008, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2001-2009, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -1004,6 +1004,10 @@ package Prj is\n       --  The option to use when linking to specify the path where to look for\n       --  libraries.\n \n+      Separate_Run_Path_Options     : Boolean := False;\n+      --  True if each directory needs to be specified in a separate run path\n+      --  option.\n+\n       Executable_Suffix             : Name_Id         := No_Name;\n       --  The suffix of executables, when specified in the configuration or in\n       --  package Builder of the main project. When this is not specified, the\n@@ -1111,6 +1115,7 @@ package Prj is\n    Default_Project_Config : constant Project_Configuration :=\n                               (Target                        => No_Name,\n                                Run_Path_Option               => No_Name_List,\n+                               Separate_Run_Path_Options     => False,\n                                Executable_Suffix             => No_Name,\n                                Linker                        => No_Path,\n                                Map_File_Option               => No_Name,"}, {"sha": "86c74cf6535fd93c4d97f63cc780fb61b75789b2", "filename": "gcc/ada/sem_aggr.adb", "status": "modified", "additions": 43, "deletions": 46, "changes": 89, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9a1acdcc6d6f779290d32a637a31e43f4738d05/gcc%2Fada%2Fsem_aggr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9a1acdcc6d6f779290d32a637a31e43f4738d05/gcc%2Fada%2Fsem_aggr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_aggr.adb?ref=c9a1acdcc6d6f779290d32a637a31e43f4738d05", "patch": "@@ -134,40 +134,38 @@ package body Sem_Aggr is\n    --  The algorithm of Resolve_Record_Aggregate proceeds as follows:\n    --\n    --  1. Make sure that the record type against which the record aggregate\n-   --     has to be resolved is not abstract. Furthermore if the type is\n-   --     a null aggregate make sure the input aggregate N is also null.\n+   --     has to be resolved is not abstract. Furthermore if the type is a\n+   --     null aggregate make sure the input aggregate N is also null.\n    --\n    --  2. Verify that the structure of the aggregate is that of a record\n    --     aggregate. Specifically, look for component associations and ensure\n    --     that each choice list only has identifiers or the N_Others_Choice\n    --     node. Also make sure that if present, the N_Others_Choice occurs\n    --     last and by itself.\n    --\n-   --  3. If Typ contains discriminants, the values for each discriminant\n-   --     is looked for. If the record type Typ has variants, we check\n-   --     that the expressions corresponding to each discriminant ruling\n-   --     the (possibly nested) variant parts of Typ, are static. This\n-   --     allows us to determine the variant parts to which the rest of\n-   --     the aggregate must conform. The names of discriminants with their\n-   --     values are saved in a new association list, New_Assoc_List which\n-   --     is later augmented with the names and values of the remaining\n-   --     components in the record type.\n+   --  3. If Typ contains discriminants, the values for each discriminant is\n+   --     looked for. If the record type Typ has variants, we check that the\n+   --     expressions corresponding to each discriminant ruling the (possibly\n+   --     nested) variant parts of Typ, are static. This allows us to determine\n+   --     the variant parts to which the rest of the aggregate must conform.\n+   --     The names of discriminants with their values are saved in a new\n+   --     association list, New_Assoc_List which is later augmented with the\n+   --     names and values of the remaining components in the record type.\n    --\n    --     During this phase we also make sure that every discriminant is\n-   --     assigned exactly one value. Note that when several values\n-   --     for a given discriminant are found, semantic processing continues\n-   --     looking for further errors. In this case it's the first\n-   --     discriminant value found which we will be recorded.\n+   --     assigned exactly one value. Note that when several values for a given\n+   --     discriminant are found, semantic processing continues looking for\n+   --     further errors. In this case it's the first discriminant value found\n+   --     which we will be recorded.\n    --\n    --     IMPORTANT NOTE: For derived tagged types this procedure expects\n    --     First_Discriminant and Next_Discriminant to give the correct list\n    --     of discriminants, in the correct order.\n    --\n-   --  4. After all the discriminant values have been gathered, we can\n-   --     set the Etype of the record aggregate. If Typ contains no\n-   --     discriminants this is straightforward: the Etype of N is just\n-   --     Typ, otherwise a new implicit constrained subtype of Typ is\n-   --     built to be the Etype of N.\n+   --  4. After all the discriminant values have been gathered, we can set the\n+   --     Etype of the record aggregate. If Typ contains no discriminants this\n+   --     is straightforward: the Etype of N is just Typ, otherwise a new\n+   --     implicit constrained subtype of Typ is built to be the Etype of N.\n    --\n    --  5. Gather the remaining record components according to the discriminant\n    --     values. This involves recursively traversing the record type\n@@ -176,41 +174,40 @@ package body Sem_Aggr is\n    --     derived tagged types since we need to retrieve the record structure\n    --     of all the ancestors of Typ.\n    --\n-   --  6. After gathering the record components we look for their values\n-   --     in the record aggregate and emit appropriate error messages\n-   --     should we not find such values or should they be duplicated.\n+   --  6. After gathering the record components we look for their values in the\n+   --     record aggregate and emit appropriate error messages should we not\n+   --     find such values or should they be duplicated.\n    --\n-   --  7. We then make sure no illegal component names appear in the\n-   --     record aggregate and make sure that the type of the record\n-   --     components appearing in a same choice list is the same.\n-   --     Finally we ensure that the others choice, if present, is\n-   --     used to provide the value of at least a record component.\n+   --  7. We then make sure no illegal component names appear in the record\n+   --     aggregate and make sure that the type of the record components\n+   --     appearing in a same choice list is the same. Finally we ensure that\n+   --     the others choice, if present, is used to provide the value of at\n+   --     least a record component.\n    --\n-   --  8. The original aggregate node is replaced with the new named\n-   --     aggregate built in steps 3 through 6, as explained earlier.\n+   --  8. The original aggregate node is replaced with the new named aggregate\n+   --     built in steps 3 through 6, as explained earlier.\n    --\n-   --  Given the complexity of record aggregate resolution, the primary\n-   --  goal of this routine is clarity and simplicity rather than execution\n-   --  and storage efficiency. If there are only positional components in the\n-   --  aggregate the running time is linear. If there are associations\n-   --  the running time is still linear as long as the order of the\n-   --  associations is not too far off the order of the components in the\n-   --  record type. If this is not the case the running time is at worst\n-   --  quadratic in the size of the association list.\n+   --  Given the complexity of record aggregate resolution, the primary goal of\n+   --  this routine is clarity and simplicity rather than execution and storage\n+   --  efficiency. If there are only positional components in the aggregate the\n+   --  running time is linear. If there are associations the running time is\n+   --  still linear as long as the order of the associations is not too far off\n+   --  the order of the components in the record type. If this is not the case\n+   --  the running time is at worst quadratic in the size of the association\n+   --  list.\n \n    procedure Check_Misspelled_Component\n      (Elements  : Elist_Id;\n       Component : Node_Id);\n-   --  Give possible misspelling diagnostic if Component is likely to be\n-   --  a misspelling of one of the components of the Assoc_List.\n-   --  This is called by Resolve_Aggr_Expr after producing\n-   --  an invalid component error message.\n+   --  Give possible misspelling diagnostic if Component is likely to be a\n+   --  misspelling of one of the components of the Assoc_List. This is called\n+   --  by Resolve_Aggr_Expr after producing an invalid component error message.\n \n    procedure Check_Static_Discriminated_Subtype (T : Entity_Id; V : Node_Id);\n-   --  An optimization: determine whether a discriminated subtype has a\n-   --  static constraint, and contains array components whose length is also\n-   --  static, either because they are constrained by the discriminant, or\n-   --  because the original component bounds are static.\n+   --  An optimization: determine whether a discriminated subtype has a static\n+   --  constraint, and contains array components whose length is also static,\n+   --  either because they are constrained by the discriminant, or because the\n+   --  original component bounds are static.\n \n    -----------------------------------------------------\n    -- Subprograms used for ARRAY AGGREGATE Processing --"}, {"sha": "0cbce2148104e4204cef4da3323bcbcb77da6304", "filename": "gcc/ada/sem_type.adb", "status": "modified", "additions": 16, "deletions": 17, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9a1acdcc6d6f779290d32a637a31e43f4738d05/gcc%2Fada%2Fsem_type.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9a1acdcc6d6f779290d32a637a31e43f4738d05/gcc%2Fada%2Fsem_type.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_type.adb?ref=c9a1acdcc6d6f779290d32a637a31e43f4738d05", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2008, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2009, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -57,12 +57,12 @@ package body Sem_Type is\n    --  The following data structures establish a mapping between nodes and\n    --  their interpretations. An overloaded node has an entry in Interp_Map,\n    --  which in turn contains a pointer into the All_Interp array. The\n-   --  interpretations of a given node are contiguous in All_Interp. Each\n-   --  set of interpretations is terminated with the marker No_Interp.\n-   --  In order to speed up the retrieval of the interpretations of an\n-   --  overloaded node, the Interp_Map table is accessed by means of a simple\n-   --  hashing scheme, and the entries in Interp_Map are chained. The heads\n-   --  of clash lists are stored in array Headers.\n+   --  interpretations of a given node are contiguous in All_Interp. Each set\n+   --  of interpretations is terminated with the marker No_Interp. In order to\n+   --  speed up the retrieval of the interpretations of an overloaded node, the\n+   --  Interp_Map table is accessed by means of a simple hashing scheme, and\n+   --  the entries in Interp_Map are chained. The heads of clash lists are\n+   --  stored in array Headers.\n \n    --              Headers        Interp_Map          All_Interp\n \n@@ -132,16 +132,15 @@ package body Sem_Type is\n    -- Operator Overloading --\n    --------------------------\n \n-   --  The visibility of operators is handled differently from that of\n-   --  other entities. We do not introduce explicit versions of primitive\n-   --  operators for each type definition. As a result, there is only one\n-   --  entity corresponding to predefined addition on all numeric types, etc.\n-   --  The back-end resolves predefined operators according to their type.\n-   --  The visibility of primitive operations then reduces to the visibility\n-   --  of the resulting type:  (a + b) is a legal interpretation of some\n-   --  primitive operator + if the type of the result (which must also be\n-   --  the type of a and b) is directly visible (i.e. either immediately\n-   --  visible or use-visible.)\n+   --  The visibility of operators is handled differently from that of other\n+   --  entities. We do not introduce explicit versions of primitive operators\n+   --  for each type definition. As a result, there is only one entity\n+   --  corresponding to predefined addition on all numeric types, etc. The\n+   --  back-end resolves predefined operators according to their type. The\n+   --  visibility of primitive operations then reduces to the visibility of the\n+   --  resulting type: (a + b) is a legal interpretation of some primitive\n+   --  operator + if the type of the result (which must also be the type of a\n+   --  and b) is directly visible (either immediately visible or use-visible).\n \n    --  User-defined operators are treated like other functions, but the\n    --  visibility of these user-defined operations must be special-cased"}, {"sha": "60a91a39b4387bef7974c7dd0a492200af6e152e", "filename": "gcc/ada/snames.ads-tmpl", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9a1acdcc6d6f779290d32a637a31e43f4738d05/gcc%2Fada%2Fsnames.ads-tmpl", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9a1acdcc6d6f779290d32a637a31e43f4738d05/gcc%2Fada%2Fsnames.ads-tmpl", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsnames.ads-tmpl?ref=c9a1acdcc6d6f779290d32a637a31e43f4738d05", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                             T e m p l a t e                              --\n --                                                                          --\n---          Copyright (C) 1992-2008, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2009, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -1116,6 +1116,7 @@ package Snames is\n    Name_Roots                            : constant Name_Id := N + $; --  GPR\n    Name_Required_Switches                : constant Name_Id := N + $;\n    Name_Run_Path_Option                  : constant Name_Id := N + $;\n+   Name_Separate_Run_Path_Options        : constant Name_Id := N + $;\n    Name_Shared_Library_Minimum_Switches  : constant Name_Id := N + $;\n    Name_Shared_Library_Prefix            : constant Name_Id := N + $;\n    Name_Shared_Library_Suffix            : constant Name_Id := N + $;"}]}