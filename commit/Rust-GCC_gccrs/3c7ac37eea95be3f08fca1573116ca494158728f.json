{"sha": "3c7ac37eea95be3f08fca1573116ca494158728f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2M3YWMzN2VlYTk1YmUzZjA4ZmNhMTU3MzExNmNhNDk0MTU4NzI4Zg==", "commit": {"author": {"name": "Tobias Burnus", "email": "burnus@net-b.de", "date": "2010-09-06T18:16:50Z"}, "committer": {"name": "Tobias Burnus", "email": "burnus@gcc.gnu.org", "date": "2010-09-06T18:16:50Z"}, "message": "re PR fortran/45560 (debugging: Add EXPR pretty printer (gfc_debug_expr))\n\n2010-09-06  Tobias Burnus  <burnus@net-b.de>\n\n        PR fortran/45560\n        * dump-parse-tree.c (gfc_debug_expr): New function.\n\nFrom-SVN: r163928", "tree": {"sha": "250058453a71cb6ae52936c1503f47e673bf9022", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/250058453a71cb6ae52936c1503f47e673bf9022"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3c7ac37eea95be3f08fca1573116ca494158728f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3c7ac37eea95be3f08fca1573116ca494158728f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3c7ac37eea95be3f08fca1573116ca494158728f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3c7ac37eea95be3f08fca1573116ca494158728f/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a7529ed6083185de406eb63a7a5e4f78da9862ab", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a7529ed6083185de406eb63a7a5e4f78da9862ab", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a7529ed6083185de406eb63a7a5e4f78da9862ab"}], "stats": {"total": 19, "additions": 19, "deletions": 0}, "files": [{"sha": "2d97608e498b5a1a4d52d47b504c114eac84bea9", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c7ac37eea95be3f08fca1573116ca494158728f/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c7ac37eea95be3f08fca1573116ca494158728f/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=3c7ac37eea95be3f08fca1573116ca494158728f", "patch": "@@ -1,3 +1,8 @@\n+2010-09-06  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/45560\n+\t* dump-parse-tree.c (gfc_debug_expr): New function.\n+\n 2010-09-06  Tobias Burnus  <burnus@net-b.de>\n \n \tPR fortran/38282"}, {"sha": "3595518dc89566a3e97f5c6019bc7ab3589ef09a", "filename": "gcc/fortran/dump-parse-tree.c", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c7ac37eea95be3f08fca1573116ca494158728f/gcc%2Ffortran%2Fdump-parse-tree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c7ac37eea95be3f08fca1573116ca494158728f/gcc%2Ffortran%2Fdump-parse-tree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fdump-parse-tree.c?ref=3c7ac37eea95be3f08fca1573116ca494158728f", "patch": "@@ -49,6 +49,20 @@ static void show_code_node (int, gfc_code *);\n static void show_namespace (gfc_namespace *ns);\n \n \n+/* Allow dumping of an expression in the debugger.  */\n+void gfc_debug_expr (gfc_expr *);\n+\n+void\n+gfc_debug_expr (gfc_expr *e)\n+{\n+  FILE *tmp = dumpfile;\n+  dumpfile = stdout;\n+  show_expr (e);\n+  fputc ('\\n', dumpfile);\n+  dumpfile = tmp;\n+}\n+\n+\n /* Do indentation for a specific level.  */\n \n static inline void"}]}