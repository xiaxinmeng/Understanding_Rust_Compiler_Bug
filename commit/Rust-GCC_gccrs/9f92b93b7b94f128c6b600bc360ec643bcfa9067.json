{"sha": "9f92b93b7b94f128c6b600bc360ec643bcfa9067", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWY5MmI5M2I3Yjk0ZjEyOGM2YjYwMGJjMzYwZWM2NDNiY2ZhOTA2Nw==", "commit": {"author": {"name": "Jan Kratochvil", "email": "jan.kratochvil@redhat.com", "date": "2017-01-31T01:01:32Z"}, "committer": {"name": "Alexandre Oliva", "email": "aoliva@gcc.gnu.org", "date": "2017-01-31T01:01:32Z"}, "message": "libcc1: return absolute filename from make search_dir\n\nfor  libcc1/ChangeLog\n\n\t* findcomp.cc: Include system.h.\n\t(search_dir): Return absolute filename.\n\nFrom-SVN: r245050", "tree": {"sha": "2146d46489d4367ebaf24cfb5882484cc073ac48", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2146d46489d4367ebaf24cfb5882484cc073ac48"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9f92b93b7b94f128c6b600bc360ec643bcfa9067", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9f92b93b7b94f128c6b600bc360ec643bcfa9067", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9f92b93b7b94f128c6b600bc360ec643bcfa9067", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9f92b93b7b94f128c6b600bc360ec643bcfa9067/comments", "author": {"login": "jankratochvil", "id": 1223939, "node_id": "MDQ6VXNlcjEyMjM5Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1223939?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jankratochvil", "html_url": "https://github.com/jankratochvil", "followers_url": "https://api.github.com/users/jankratochvil/followers", "following_url": "https://api.github.com/users/jankratochvil/following{/other_user}", "gists_url": "https://api.github.com/users/jankratochvil/gists{/gist_id}", "starred_url": "https://api.github.com/users/jankratochvil/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jankratochvil/subscriptions", "organizations_url": "https://api.github.com/users/jankratochvil/orgs", "repos_url": "https://api.github.com/users/jankratochvil/repos", "events_url": "https://api.github.com/users/jankratochvil/events{/privacy}", "received_events_url": "https://api.github.com/users/jankratochvil/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "5d1b2443237a407785f84be09909f93abdcfec48", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5d1b2443237a407785f84be09909f93abdcfec48", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5d1b2443237a407785f84be09909f93abdcfec48"}], "stats": {"total": 6, "additions": 5, "deletions": 1}, "files": [{"sha": "9a943148a3be3eacca016c5a671b0da1b99e4d4d", "filename": "libcc1/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f92b93b7b94f128c6b600bc360ec643bcfa9067/libcc1%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f92b93b7b94f128c6b600bc360ec643bcfa9067/libcc1%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcc1%2FChangeLog?ref=9f92b93b7b94f128c6b600bc360ec643bcfa9067", "patch": "@@ -1,5 +1,8 @@\n 2017-01-30  Jan Kratochvil <jan.kratochvil@redhat.com>\n \n+\t* findcomp.cc: Include system.h.\n+\t(search_dir): Return absolute filename.\n+\n \t* libcc1.cc (libcc1): Add class compiler with field compilerp,\n \tclass compiler_triplet_regexp and class\n \tcompiler_driver_filename."}, {"sha": "1fdec12dc12244b286e4f9b60ffc608eeaa2bd42", "filename": "libcc1/findcomp.cc", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f92b93b7b94f128c6b600bc360ec643bcfa9067/libcc1%2Ffindcomp.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f92b93b7b94f128c6b600bc360ec643bcfa9067/libcc1%2Ffindcomp.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcc1%2Ffindcomp.cc?ref=9f92b93b7b94f128c6b600bc360ec643bcfa9067", "patch": "@@ -25,6 +25,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"libiberty.h\"\n #include \"xregex.h\"\n #include \"findcomp.hh\"\n+#include \"system.h\"\n \n class scanner\n {\n@@ -68,7 +69,7 @@ search_dir (const regex_t &regexp, const std::string &dir, std::string *result)\n     {\n       if (regexec (&regexp, filename, 0, NULL, 0) == 0)\n \t{\n-\t  *result = filename;\n+\t  *result = dir + DIR_SEPARATOR + filename;\n \t  return true;\n \t}\n     }"}]}