{"sha": "0e6017f5b4f13906dd2c09b25403ffa94a80181f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGU2MDE3ZjViNGYxMzkwNmRkMmMwOWIyNTQwM2ZmYTk0YTgwMTgxZg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2021-08-11T08:23:34Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2021-08-11T08:23:34Z"}, "message": "sanitizer: Cherry-pick realpath fix\n\ntsan in some cases starts ignoring interceptors and only calls the\nintercepted functions.  But for realpath the behavior for NULL second argument\nwas only handled in the interceptor and intercepted function was the one\nfound by dlsym which is often one that doesn't handle NULL as second argument.\n\nFixed by using dlvsym with \"GLIBC_2.3\" if possible for intercepted function\nand don't emulate behavior in the wrapper.\n\n2021-08-11  Jakub Jelinek  <jakub@redhat.com>\n\n\t* sanitizer_common/sanitizer_common_interceptors.inc: Cherry-pick\n\tllvm-project revision faef0d042f523357fe5590e7cb6a8391cf0351a8.", "tree": {"sha": "a07b36bfa3f2b5f40efa235ed6f6de93ee507578", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a07b36bfa3f2b5f40efa235ed6f6de93ee507578"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0e6017f5b4f13906dd2c09b25403ffa94a80181f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0e6017f5b4f13906dd2c09b25403ffa94a80181f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0e6017f5b4f13906dd2c09b25403ffa94a80181f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0e6017f5b4f13906dd2c09b25403ffa94a80181f/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a45918f8a7444a40eb397a037683ba5900a2db74", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a45918f8a7444a40eb397a037683ba5900a2db74", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a45918f8a7444a40eb397a037683ba5900a2db74"}], "stats": {"total": 12, "additions": 1, "deletions": 11}, "files": [{"sha": "5ac6cf45fd2ab5c8161d9f4b8a3cabef7aad1cec", "filename": "libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc", "status": "modified", "additions": 1, "deletions": 11, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0e6017f5b4f13906dd2c09b25403ffa94a80181f/libsanitizer%2Fsanitizer_common%2Fsanitizer_common_interceptors.inc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0e6017f5b4f13906dd2c09b25403ffa94a80181f/libsanitizer%2Fsanitizer_common%2Fsanitizer_common_interceptors.inc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libsanitizer%2Fsanitizer_common%2Fsanitizer_common_interceptors.inc?ref=0e6017f5b4f13906dd2c09b25403ffa94a80181f", "patch": "@@ -3664,21 +3664,11 @@ INTERCEPTOR(char *, realpath, const char *path, char *resolved_path) {\n   void *ctx;\n   COMMON_INTERCEPTOR_ENTER(ctx, realpath, path, resolved_path);\n   if (path) COMMON_INTERCEPTOR_READ_RANGE(ctx, path, REAL(strlen)(path) + 1);\n-\n-  // Workaround a bug in glibc where dlsym(RTLD_NEXT, ...) returns the oldest\n-  // version of a versioned symbol. For realpath(), this gives us something\n-  // (called __old_realpath) that does not handle NULL in the second argument.\n-  // Handle it as part of the interceptor.\n-  char *allocated_path = nullptr;\n-  if (!resolved_path)\n-    allocated_path = resolved_path = (char *)WRAP(malloc)(path_max + 1);\n-\n   char *res = REAL(realpath)(path, resolved_path);\n-  if (allocated_path && !res) WRAP(free)(allocated_path);\n   if (res) COMMON_INTERCEPTOR_WRITE_RANGE(ctx, res, REAL(strlen)(res) + 1);\n   return res;\n }\n-#define INIT_REALPATH COMMON_INTERCEPT_FUNCTION(realpath);\n+#define INIT_REALPATH COMMON_INTERCEPT_FUNCTION_GLIBC_VER_MIN(realpath, \"GLIBC_2.3\");\n #else\n #define INIT_REALPATH\n #endif"}]}