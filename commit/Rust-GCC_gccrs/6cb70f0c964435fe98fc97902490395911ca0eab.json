{"sha": "6cb70f0c964435fe98fc97902490395911ca0eab", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmNiNzBmMGM5NjQ0MzVmZTk4ZmM5NzkwMjQ5MDM5NTkxMWNhMGVhYg==", "commit": {"author": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1994-11-19T23:38:04Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1994-11-19T23:38:04Z"}, "message": "(build_binary_op): Can shorten shift only if shift count\nis less than size in bits of arg0.\n\nFrom-SVN: r8528", "tree": {"sha": "ac009253615bd81195376eac76ee434d73dfd886", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ac009253615bd81195376eac76ee434d73dfd886"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6cb70f0c964435fe98fc97902490395911ca0eab", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6cb70f0c964435fe98fc97902490395911ca0eab", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6cb70f0c964435fe98fc97902490395911ca0eab", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6cb70f0c964435fe98fc97902490395911ca0eab/comments", "author": null, "committer": null, "parents": [{"sha": "03f3609810ce73d30c5ace972765dffc2f33124e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/03f3609810ce73d30c5ace972765dffc2f33124e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/03f3609810ce73d30c5ace972765dffc2f33124e"}], "stats": {"total": 4, "additions": 4, "deletions": 0}, "files": [{"sha": "d31e18619013669b68a2f5bb335f6218eb6f2cab", "filename": "gcc/c-typeck.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6cb70f0c964435fe98fc97902490395911ca0eab/gcc%2Fc-typeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6cb70f0c964435fe98fc97902490395911ca0eab/gcc%2Fc-typeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-typeck.c?ref=6cb70f0c964435fe98fc97902490395911ca0eab", "patch": "@@ -2391,6 +2391,10 @@ build_binary_op (code, orig_op0, orig_op1, convert_p)\n \t    unsigned_arg = TREE_UNSIGNED (TREE_TYPE (op0));\n \n \t  if (TYPE_PRECISION (TREE_TYPE (arg0)) < TYPE_PRECISION (result_type)\n+\t      /* We can shorten only if the shift count is less than the\n+\t\t number of bits in the smaller type size.  */\n+\t      && TREE_INT_CST_HIGH (op1) == 0\n+\t      && TYPE_PRECISION (TREE_TYPE (arg0)) > TREE_INT_CST_LOW (op1)\n \t      /* If arg is sign-extended and then unsigned-shifted,\n \t\t we can simulate this with a signed shift in arg's type\n \t\t only if the extended result is at least twice as wide"}]}