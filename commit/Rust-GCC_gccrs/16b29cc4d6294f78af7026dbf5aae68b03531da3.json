{"sha": "16b29cc4d6294f78af7026dbf5aae68b03531da3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTZiMjljYzRkNjI5NGY3OGFmNzAyNmRiZjVhYWU2OGIwMzUzMWRhMw==", "commit": {"author": {"name": "Joseph Myers", "email": "joseph@codesourcery.com", "date": "2009-05-15T12:13:02Z"}, "committer": {"name": "Joseph Myers", "email": "jsm28@gcc.gnu.org", "date": "2009-05-15T12:13:02Z"}, "message": "tree-ssa-forwprop.c (forward_propagate_addr_expr_1): Also recurse on an invariant address if a conversion from a pointer type to a...\n\n\t* tree-ssa-forwprop.c (forward_propagate_addr_expr_1): Also\n\trecurse on an invariant address if a conversion from a pointer\n\ttype to a wider integer type is involved.\n\ntestsuite:\n\t* gcc.c-torture/compile/ptr-conv-1.c: New test.\n\nFrom-SVN: r147570", "tree": {"sha": "3515881bf8eb12526689a646dc2ac11b970093fe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3515881bf8eb12526689a646dc2ac11b970093fe"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/16b29cc4d6294f78af7026dbf5aae68b03531da3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/16b29cc4d6294f78af7026dbf5aae68b03531da3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/16b29cc4d6294f78af7026dbf5aae68b03531da3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/16b29cc4d6294f78af7026dbf5aae68b03531da3/comments", "author": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "934432b66c473da1d248bb5f61dc8549bf14db81", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/934432b66c473da1d248bb5f61dc8549bf14db81", "html_url": "https://github.com/Rust-GCC/gccrs/commit/934432b66c473da1d248bb5f61dc8549bf14db81"}], "stats": {"total": 27, "additions": 26, "deletions": 1}, "files": [{"sha": "ac138cab0d4ac23ca03b61eab67824b77f9a7dc2", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16b29cc4d6294f78af7026dbf5aae68b03531da3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16b29cc4d6294f78af7026dbf5aae68b03531da3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=16b29cc4d6294f78af7026dbf5aae68b03531da3", "patch": "@@ -1,3 +1,9 @@\n+2009-05-15  Joseph Myers  <joseph@codesourcery.com>\n+\n+\t* tree-ssa-forwprop.c (forward_propagate_addr_expr_1): Also\n+\trecurse on an invariant address if a conversion from a pointer\n+\ttype to a wider integer type is involved.\n+\n 2009-05-15  Jan Hubicka  <jh@suse.cz>\n \n \t* cgraph.c (dump_cgraph_node): Dump size/time/benefit."}, {"sha": "b8ab7d472eb04eb622a1fb159dfa6bf50063fcf6", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16b29cc4d6294f78af7026dbf5aae68b03531da3/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16b29cc4d6294f78af7026dbf5aae68b03531da3/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=16b29cc4d6294f78af7026dbf5aae68b03531da3", "patch": "@@ -1,3 +1,7 @@\n+2009-05-15  Joseph Myers  <joseph@codesourcery.com>\n+\n+\t* gcc.c-torture/compile/ptr-conv-1.c: New test.\n+\n 2009-05-14  Ian Lance Taylor  <iant@google.com>\n \n \t* gcc.dg/Wcxx-compat-9.c: New testcase."}, {"sha": "11dc8ce89574e141153e9392786effea96ee176f", "filename": "gcc/testsuite/gcc.c-torture/compile/ptr-conv-1.c", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16b29cc4d6294f78af7026dbf5aae68b03531da3/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fptr-conv-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16b29cc4d6294f78af7026dbf5aae68b03531da3/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fptr-conv-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fptr-conv-1.c?ref=16b29cc4d6294f78af7026dbf5aae68b03531da3", "patch": "@@ -0,0 +1,11 @@\n+/* The intermediate conversion to __PTRDIFF_TYPE__ could be lost,\n+   resulting in an \"invalid types in nop conversion\" ICE.  */\n+long long a;\n+void\n+f (void)\n+{\n+  int c = 1;\n+  volatile int *p = &c;\n+  a = (long long) (__PTRDIFF_TYPE__) p;\n+  *p;\n+}"}, {"sha": "ef78703c8eeb56f926ae1843d71f42d94de97ed6", "filename": "gcc/tree-ssa-forwprop.c", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16b29cc4d6294f78af7026dbf5aae68b03531da3/gcc%2Ftree-ssa-forwprop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16b29cc4d6294f78af7026dbf5aae68b03531da3/gcc%2Ftree-ssa-forwprop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-forwprop.c?ref=16b29cc4d6294f78af7026dbf5aae68b03531da3", "patch": "@@ -739,7 +739,11 @@ forward_propagate_addr_expr_1 (tree name, tree def_rhs,\n \t address which we cannot do in a single statement.  */\n       if (!single_use_p\n \t  || (!useless_type_conversion_p (TREE_TYPE (lhs), TREE_TYPE (def_rhs))\n-\t      && !is_gimple_min_invariant (def_rhs)))\n+\t      && (!is_gimple_min_invariant (def_rhs)\n+\t\t  || (INTEGRAL_TYPE_P (TREE_TYPE (lhs))\n+\t\t      && POINTER_TYPE_P (TREE_TYPE (def_rhs))\n+\t\t      && (TYPE_PRECISION (TREE_TYPE (lhs))\n+\t\t\t  > TYPE_PRECISION (TREE_TYPE (def_rhs)))))))\n \treturn forward_propagate_addr_expr (lhs, def_rhs);\n \n       gimple_assign_set_rhs1 (use_stmt, unshare_expr (def_rhs));"}]}