{"sha": "9d430eb5b13add7ea10524d8842bd01721b8f433", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWQ0MzBlYjViMTNhZGQ3ZWExMDUyNGQ4ODQyYmQwMTcyMWI4ZjQzMw==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2001-12-29T19:18:32Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2001-12-29T19:18:32Z"}, "message": "os_defines.h: Don't define __glibcpp_long_bits.\n\n        * config/os/hpux/bits/os_defines.h: Don't define __glibcpp_long_bits.\n        * config/os/hpux/bits/cpu_limits.h: New file.\n        * configure.target (CPULIMITSH): Use it.\n\nFrom-SVN: r48379", "tree": {"sha": "2f3038e8e40739a6aa12e7f16601756153766ccd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2f3038e8e40739a6aa12e7f16601756153766ccd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9d430eb5b13add7ea10524d8842bd01721b8f433", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9d430eb5b13add7ea10524d8842bd01721b8f433", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9d430eb5b13add7ea10524d8842bd01721b8f433", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9d430eb5b13add7ea10524d8842bd01721b8f433/comments", "author": null, "committer": null, "parents": [{"sha": "c8af9937722b69d8bf7b85d9f743a4d0f73240ee", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c8af9937722b69d8bf7b85d9f743a4d0f73240ee", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c8af9937722b69d8bf7b85d9f743a4d0f73240ee"}], "stats": {"total": 174, "additions": 107, "deletions": 67}, "files": [{"sha": "1560e1c84a035be050f472353c70abab23ffb8d0", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 69, "deletions": 63, "changes": 132, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9d430eb5b13add7ea10524d8842bd01721b8f433/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9d430eb5b13add7ea10524d8842bd01721b8f433/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=9d430eb5b13add7ea10524d8842bd01721b8f433", "patch": "@@ -1,3 +1,9 @@\n+2001-12-29  Richard Henderson  <rth@redhat.com>\n+\n+\t* config/os/hpux/bits/os_defines.h: Don't define __glibcpp_long_bits.\n+\t* config/os/hpux/bits/cpu_limits.h: New file.\n+\t* configure.target (CPULIMITSH): Use it.\n+\n 2001-12-28  Richard Henderson  <rth@redhat.com>\n \n \t* config/cpu/ia64/bits/cpu_limits.h: New file.\n@@ -26,7 +32,7 @@\n \t* testsuite/ext/headers.cc:  Include <ext/algorithm>.\n \n 2001-12-28  Paolo Carlini  <pcarlini@unitus.it>\n-            Nathan Myers  <ncm@cantrip.org>\n+\t    Nathan Myers  <ncm@cantrip.org>\n \n \t* include/bits/basic_string.h (insert(__pos, __s, __n)):\n \tOptimize by avoiding temporaries and working in-place when possible.\n@@ -89,7 +95,7 @@\n 2001-12-22  Jeffrey A Law  <law@redhat.com>\n \n \t* config/os/hpux/bits/os_defines.h: Update to avoid #defines\n-        for strtoll and strtoull.\n+\tfor strtoll and strtoull.\n \n 2001-12-21  Jeffrey A Law  <law@redhat.com>\n \t\n@@ -160,7 +166,7 @@\n \t* configure: Rebuild.\n \t\n 2001-12-18  Paolo Carlini  <pcarlini@unitus.it>\n-            Nathan Myers  <ncm@cantrip.org>\n+\t    Nathan Myers  <ncm@cantrip.org>\n \t\n \t* include/bits/basic_string.h (assign(__str, __pos, __n)):\n \tCall assign(__s, __n).\n@@ -195,7 +201,7 @@\n \t* testsuite/21_strings/assign.cc (test01): Add tests.\n \n 2001-12-15  Paolo Carlini  <pcarlini@unitus.it>\n-            Nathan Myers  <ncm@cantrip.org>\n+\t    Nathan Myers  <ncm@cantrip.org>\n \n \t* include/bits/basic_string.h\n \t(assign(__str, __pos, __n), assign(__s, __n)):  Optimize\n@@ -254,15 +260,15 @@\n \t* testsuite/22_locale/facet.cc: Fix spelling.\n \t\n \tNamed locale support for ctype<wchar_t>.\n-        * acinclude.m4 (GLIBCPP_ENABLE_CLOCALE): Add variable\n-        ctype_members_* bits.\n-        * aclocal.m4: Regenerate.\n-        * configure: Regenerate.\n-        * src/Makefile.am (sources): Add ctype.cc.\n-        * src/Makefile.in: Regenerate.\n-        * config/locale/ctype_members_generic.cc: New file.\n-        * config/locale/ctype_members_gnu.cc: New file.\n-        * src/locale.cc: Remove ctype<wchart_t> definitions.\n+\t* acinclude.m4 (GLIBCPP_ENABLE_CLOCALE): Add variable\n+\tctype_members_* bits.\n+\t* aclocal.m4: Regenerate.\n+\t* configure: Regenerate.\n+\t* src/Makefile.am (sources): Add ctype.cc.\n+\t* src/Makefile.in: Regenerate.\n+\t* config/locale/ctype_members_generic.cc: New file.\n+\t* config/locale/ctype_members_gnu.cc: New file.\n+\t* src/locale.cc: Remove ctype<wchart_t> definitions.\n \n 2001-12-13  Roger Sayle <roger@eyesopen.com>\n \n@@ -329,8 +335,8 @@\n \tXFAIL for non-gnu locale models.\n \n 2001-12-12  Philip Martin  <philip@codematters.co.uk>\n-            Ross Smith     <r-smith@ihug.co.nz>\n-            Paolo Carlini  <pcarlini@unitus.it>\n+\t    Ross Smith     <r-smith@ihug.co.nz>\n+\t    Paolo Carlini  <pcarlini@unitus.it>\n \n \tlibstdc++/5045\n \t* include/bits/std_limits.h (defines, numeric_limits<bool>::digits10):\n@@ -371,7 +377,7 @@\n \t* include/bits/basic_string.h:  Fix typos.\n \n 2001-12-10  Paolo Carlini  <pcarlini@unitus.it>\n-            Nathan Myers  <ncm@cantrip.org>\n+\t    Nathan Myers  <ncm@cantrip.org>\n \n \t* include/bits/basic_string.tcc (_M_replace_safe):  New function.\n \t(_M_replace(input_iterator_tag), append members):  Use it.\n@@ -421,7 +427,7 @@\n \t* include/bits/basic_string.tcc (_M_mutate, _M_clone): Implement\n \texponential growth policy to meet linear amortized time\n \trequirements of the standard.\n-        (_S_create): Adjust comment.\n+\t(_S_create): Adjust comment.\n \n 2001-12-06  Benjamin Kosnik  <bkoz@redhat.com>\n \n@@ -486,12 +492,12 @@\n \n 2001-12-04  Paolo Carlini <pcarlini@unitus.it>\n \n-        libstdc++/4402\n-        * testsuite/27_io/ostream_inserter_arith.cc (test02): Add testcase\n+\tlibstdc++/4402\n+\t* testsuite/27_io/ostream_inserter_arith.cc (test02): Add testcase\n \tfrom the PR.\n-        * include/bits/locale_facets.tcc (num_put::_M_convert_float):\n-        Deal properly with long ios_base::fixed floats.\n-        (num_put::_M_widen_float): use\n+\t* include/bits/locale_facets.tcc (num_put::_M_convert_float):\n+\tDeal properly with long ios_base::fixed floats.\n+\t(num_put::_M_widen_float): use\n \t__len in __builtin_alloca call.\n \n 2001-12-04  Benjamin Kosnik  <bkoz@redhat.com>\n@@ -533,10 +539,10 @@\n \n 2001-12-03  Steve Ellcey  <sje@cup.hp.com>\n \n-        * libstdc++-v3/configure.in: Add support for hpux cross compiles,\n-        combine common linux/hpux/generic cross compile support to reduce\n-        redundent lines.\n-        * libstdc++-v3/configure: Regenerate.\n+\t* libstdc++-v3/configure.in: Add support for hpux cross compiles,\n+\tcombine common linux/hpux/generic cross compile support to reduce\n+\tredundent lines.\n+\t* libstdc++-v3/configure: Regenerate.\n \n 2001-12-03  Loren J. Rittle  <ljrittle@acm.org>\n \n@@ -782,10 +788,10 @@\n \n 2001-11-22  Stephen M. Webb  <stephen@bregmasoft.com>\n \n-        * testsuite/23_containers/list_capacity.cc: New file.\n-        * testsuite/23_containers/list_ctor.cc: New file.\n-        * testsuite/23_containers/list_modifiers.cc: New file.\n-        * testsuite/23_containers/list_operators.cc: New file.\n+\t* testsuite/23_containers/list_capacity.cc: New file.\n+\t* testsuite/23_containers/list_ctor.cc: New file.\n+\t* testsuite/23_containers/list_modifiers.cc: New file.\n+\t* testsuite/23_containers/list_operators.cc: New file.\n \n 2001-11-22  Stephen M. Webb  <stephen@bregmasoft.com>\n \n@@ -1212,46 +1218,46 @@\n \n 2001-10-19  Brendan Kehoe  <brendan@zen.org>\n \n-        * include/bits/std_complex.h: Default initialize second argument\n+\t* include/bits/std_complex.h: Default initialize second argument\n \tof polar to 0, as specified in Library DR #79\n \n 2001-10-19  Brendan Kehoe  <brendan@zen.org>\n \n-        * include/bits/stl_raw_storage_iter.h (operator=): Fix to call\n+\t* include/bits/stl_raw_storage_iter.h (operator=): Fix to call\n \t_Construct instead of construct.\n \n 2001-10-19  Brendan Kehoe  <brendan@zen.org>\n \n-        * include/bits/basic_string.tcc (find_first_not_of): Take out check for\n-        __n being non-zero, since the standard does not mandate that.\n-        e.g., a search for \"\" in \"\" should yield position 0, not npos.\n-        (find_last_not_of): Likewise.\n+\t* include/bits/basic_string.tcc (find_first_not_of): Take out check for\n+\t__n being non-zero, since the standard does not mandate that.\n+\te.g., a search for \"\" in \"\" should yield position 0, not npos.\n+\t(find_last_not_of): Likewise.\n \n 2001-10-19  Brendan Kehoe  <brendan@zen.org>\n \n-        * include/bits/stl_bvector.h (vector<bool>::_M_range_check): Fix\n+\t* include/bits/stl_bvector.h (vector<bool>::_M_range_check): Fix\n \tto throw out_of_range, not range_error, thus sayeth $23.1.1.13.\n \n 2001-10-19  Brendan Kehoe  <brendan@zen.org>\n \n-        * include/bits/stl_iterator.h (reverse_iterator::current): Rename\n-        member from _M_current, and change all uses; thus sayeth $24.4.1.1.\n+\t* include/bits/stl_iterator.h (reverse_iterator::current): Rename\n+\tmember from _M_current, and change all uses; thus sayeth $24.4.1.1.\n \n 2001-10-19  Brendan Kehoe  <brendan@zen.org>\n \n-        * include/bits/stl_algo.h (partial_sort): Add missing `>' on the\n-        template parameter _ValueType.\n+\t* include/bits/stl_algo.h (partial_sort): Add missing `>' on the\n+\ttemplate parameter _ValueType.\n \n 2001-10-19  Brendan Kehoe  <brendan@zen.org>\n \n \t* include/bits/std_limits.h: Clean up extra semicolons.\n-        * include/bits/locale_facets.h: Likewise.\n-        * include/bits/type_traits.h: Likewise.\n+\t* include/bits/locale_facets.h: Likewise.\n+\t* include/bits/type_traits.h: Likewise.\n \n 2001-10-19  Brendan Kehoe  <brendan@zen.org>\n \n-        * include/bits/localefwd.h (locale::combine): Add const for lib DR 14.\n-        * include/bits/locale_facets.tcc (locale::combine): Likewise.\n+\t* include/bits/localefwd.h (locale::combine): Add const for lib DR 14.\n+\t* include/bits/locale_facets.tcc (locale::combine): Likewise.\n \n 2001-10-19  Benjamin Kosnik  <bkoz@redhat.com>\n \n@@ -1817,7 +1823,7 @@\n \t* include/bits/std_sstream.h (basic_ostringstream): Fix ctor.\n \n 2001-08-24  Sylvain Pion <Sylvain.Pion@sophia.inria.fr>\n-            Phil Edwards  <pme@sources.redhat.com>\n+\t    Phil Edwards  <pme@sources.redhat.com>\n \n \tPR libstdc++/3349\n \t* include/bits/stl_tree.h (insert_unique):  Revert last change.\n@@ -2318,7 +2324,7 @@\n \n 2001-07-31  Loren J. Rittle  <ljrittle@acm.org>\n \n-        * src/gen-num-limits.cc:  Use __LONG_LONG_MAX__.\n+\t* src/gen-num-limits.cc:  Use __LONG_LONG_MAX__.\n \n 2001-07-30  Benjamin Kosnik  <bkoz@redhat.com>\n \n@@ -2361,7 +2367,7 @@\n \t* testsuite/25_algorithms/unique.cc: New file.\n \n 2001-07-19  Phil Edwards  <pme@sources.redhat.com>\n-            Mark Mitchell <mark@codesourcery.com>\n+\t    Mark Mitchell <mark@codesourcery.com>\n \n \tMerge from cp-parser-branch.\n \t* include/bits/basic_string.h:  Qualify symbols with 'template'.\n@@ -2376,7 +2382,7 @@\n \t* src/locale.cc:  Likewise.\n \n 2001-07-19  Gabriel Dos Reis  <gdr@merlin.codesourcery.com>\n-            Bert De Knuydt <Bert.Deknuydt@esat.kuleuven.ac.be>\n+\t    Bert De Knuydt <Bert.Deknuydt@esat.kuleuven.ac.be>\n \n \t* src/gen-num-limits.cc (set_signals_handler): New function.\n \tFactor out signals setting.  Set signal handler for SIGILL.\n@@ -2388,7 +2394,7 @@\n \t* docs/html/faq/index.txt:  Regenerated.\n \n 2001-07-18  Stephen M. Webb  <stephen@bregmasoft..com>\n-            Roman Sulzhyk  <roman_sulzhyk@yahoo.com>\n+\t    Roman Sulzhyk  <roman_sulzhyk@yahoo.com>\n \n \tlibstdc++/3599\n \t* include/bits/ostream.tcc (ostream::put): Fixed error condition check.\n@@ -2479,8 +2485,8 @@\n \t* include/bits/std_iosfwd.h:  Cosmetic spacing.\n \n 2001-07-13  Stephen M. Webb  <stephen@bregmasoft.com>\n-            Loren J. Rittle  <ljrittle@acm.org>\n-            Phil Edwards  <pme@sources.redhat.com>\n+\t    Loren J. Rittle  <ljrittle@acm.org>\n+\t    Phil Edwards  <pme@sources.redhat.com>\n \n \t* include/Makefile.am:  New file encapsulating header generation rules.\n \t* Makefile.am (SUBDIRS):  Prepend 'include' directory.\n@@ -2818,7 +2824,7 @@\n \t(istream_iterator::operator*): Same.\n \n 2001-06-26  Benjamin Kosnik  <bkoz@redhat.com>\n-            Alexandre Petit-Bianco  <apbianco@redhat.com>\n+\t    Alexandre Petit-Bianco  <apbianco@redhat.com>\n \n \t* testsuite/21_strings/element_access.cc (test01): Chill Out Cafe\n \tis on 41st, not 14th.\n@@ -2849,7 +2855,7 @@\n \titerator_traits members.  Can't imagine why that used to work.\n \n 2001-06-25  Phil Edwards  <pme@sources.redhat.com>\n-            Kurt Garloff <garloff@suse.de>\n+\t    Kurt Garloff <garloff@suse.de>\n \n \tPR libstdc++/3377\n \t* src/cmath.cc:  New [version of an old] file; instantiate\n@@ -3160,7 +3166,7 @@\n \t* testsuite/20_util/binders.cc: New test.\n \n 2001-06-11  Matthias Klose  <doko@debian.org>\n-            Phil Edwards  <pme@sources.redhat.com>\n+\t    Phil Edwards  <pme@sources.redhat.com>\n \n \t* docs/doxygen/run_doxygen (find_doxygen):  Tweak version check.\n \t(main script):  Echo more information.\n@@ -3339,7 +3345,7 @@\n \t* testsuite/22_locale/ctype.cc: Add test.\n \n 2001-06-04  Kenny Simpson <theonetruekenny@yahoo.com>\n-            Phil Edwards  <pme@sources.redhat.com>\n+\t    Phil Edwards  <pme@sources.redhat.com>\n \n \tPR libstdc++/3035 and PR libstdc++/3036\n \t* include/bits/stl_pair.h:  Fix pair ctor and make_pair according\n@@ -3353,7 +3359,7 @@\n \t* include/bits/stl_set.h:  Likewise.\n \n 2001-06-04  Brendan Kehoe  <brendan@zen.org>\n-            Phil Edwards  <pme@sources.redhat.com>\n+\t    Phil Edwards  <pme@sources.redhat.com>\n \n \tPR libstdc++/3018\n \t* include/bits/std_bitset.h (bitset::test):  Fix __pos >= _Nb\n@@ -3522,8 +3528,8 @@\n \t* configure: Same.\n \n 2001-05-24  Rainer Orth  <ro@TechFak.Uni-Bielefeld.DE>\n-            Phil Edwards  <pme@sources.redhat.com>\n-            Alexandre Oliva  <aoliva@redhat.com>\n+\t    Phil Edwards  <pme@sources.redhat.com>\n+\t    Alexandre Oliva  <aoliva@redhat.com>\n \n \t* acinclude.m4 (GLIBCPP_EXPORT_INSTALL_INFO): Set glibcpp_srcdir\n \tin an amd-safe manner. Revert glibcpp_prefixdir.\n@@ -4087,7 +4093,7 @@\n \t* include/backward/backward_warning.h: Re-enable.\n \n 2001-04-06  Benjamin Kosnik  <bkoz@redhat.com>\n-            Alexandre Oliva  <aoliva@redhat.com>\n+\t    Alexandre Oliva  <aoliva@redhat.com>\n \n \t* tests_flags.in (CROSS_LIB_PATH): Add as -B flag.\n \n@@ -4641,7 +4647,7 @@\n \t* testsuite/27_io/istream_manip.cc (test01): Fix.\n \n 2001-03-06  Nathan Myers  <ncm@cantrip.org>\n-            Benjamin Kosnik  <bkoz@redhat.com>\n+\t    Benjamin Kosnik  <bkoz@redhat.com>\n \n \t* include/c_std/bits/std_cerrno.h: Don't define errno in std::.\n \t* testsuite/17_intro/header_cerrno.cc (test01): New file.\n@@ -5235,7 +5241,7 @@\n \tdejagnu/dg.exp.\n \n 2001-02-13  Dirk Mueller <dmuell@gmx.net>\n-            Phil Edwards  <pme@sources.redhat.com>\n+\t    Phil Edwards  <pme@sources.redhat.com>\n \n \t* include/backward/function.h:  Do not use rel_ops for older\n \t  headers either.\n@@ -5369,7 +5375,7 @@\n \t(_S_copy_streambufs): Likewise.\n \n 2001-02-06  Hyman Rosen  <Hyman.Rosen@kbcfp.com>\n-            Phil Edwards  <pme@sources.redhat.com>\n+\t    Phil Edwards  <pme@sources.redhat.com>\n \n \t* include/bits/std_istream.h (op>> signed,unsigned char):  Must\n \t  use reinterpret_cast, not static_cast."}, {"sha": "1c2829546bb1d004e8a1925d3d2828eced080c1f", "filename": "libstdc++-v3/config/os/hpux/bits/cpu_limits.h", "status": "added", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9d430eb5b13add7ea10524d8842bd01721b8f433/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fhpux%2Fbits%2Fcpu_limits.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9d430eb5b13add7ea10524d8842bd01721b8f433/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fhpux%2Fbits%2Fcpu_limits.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fhpux%2Fbits%2Fcpu_limits.h?ref=9d430eb5b13add7ea10524d8842bd01721b8f433", "patch": "@@ -0,0 +1,35 @@\n+// Copyright (C) 2001 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+#ifndef _GLIBCPP_CPU_LIMITS\n+#define _GLIBCPP_CPU_LIMITS 1\n+\n+#ifdef __LP64__\n+#define __glibcpp_long_bits 64\n+#endif\n+\n+#endif"}, {"sha": "a548125a7e604f54821ee1628f9dc94899d3d4b7", "filename": "libstdc++-v3/config/os/hpux/bits/os_defines.h", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9d430eb5b13add7ea10524d8842bd01721b8f433/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fhpux%2Fbits%2Fos_defines.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9d430eb5b13add7ea10524d8842bd01721b8f433/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fhpux%2Fbits%2Fos_defines.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fhpux%2Fbits%2Fos_defines.h?ref=9d430eb5b13add7ea10524d8842bd01721b8f433", "patch": "@@ -39,10 +39,6 @@\n \n #define __glibcpp_wchar_t_is_signed false\n \n-#ifdef __LP64__\n-#define __glibcpp_long_bits 64\n-#endif\n-\n /* HP-UX, for reasons unknown choose to use a different name for\n    the string to [unsigned] long long conversion routines.\n "}, {"sha": "71487991c59ffc10f20c7d0efb896ae6a47c314e", "filename": "libstdc++-v3/configure.target", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9d430eb5b13add7ea10524d8842bd01721b8f433/libstdc%2B%2B-v3%2Fconfigure.target", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9d430eb5b13add7ea10524d8842bd01721b8f433/libstdc%2B%2B-v3%2Fconfigure.target", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfigure.target?ref=9d430eb5b13add7ea10524d8842bd01721b8f433", "patch": "@@ -138,6 +138,9 @@ esac\n # cpu_limits.h can be found.\n # THIS TABLE IS SORTED.  KEEP IT THAT WAY.\n case \"${target}\" in\n+   *-*-hpux*)\n+     CPULIMITSH=config/os/hpux\n+     ;;\n    alpha*-*-*osf5*)\n      CPULIMITSH=config/os/osf/osf5.0\n      ;;"}]}