{"sha": "950ab3f1419619d6e4bec7d2f029b9aff00813e9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTUwYWIzZjE0MTk2MTlkNmU0YmVjN2QyZjAyOWI5YWZmMDA4MTNlOQ==", "commit": {"author": {"name": "Paul Thomas", "email": "pault@gcc.gnu.org", "date": "2018-02-10T18:16:14Z"}, "committer": {"name": "Paul Thomas", "email": "pault@gcc.gnu.org", "date": "2018-02-10T18:16:14Z"}, "message": "re PR fortran/84141 (Internal error: type_name(): Bad type)\n\n2018-02-10  Paul Thomas  <pault@gcc.gnu.org>\n\n\tPR fortran/84141\n\tPR fortran/84155\n\t* trans-array.c (gfc_array_init_size): Revert the change made\n\tin revision 257356 setting the dtype.\n\t* trans-types.c (gfc_get_dtype): Do not use the cached dtype.\n\tCall gfc_get_dtype_rank_type every time.\n\n\tPR fortran/56691\n\t* trans-array.c (gfc_conv_expr_descriptor): If the source array\n\tis a descriptor type, use its offset, removing the condition\n\tthat is be a class expression.\n\n2018-02-10  Paul Thomas  <pault@gcc.gnu.org>\n\n\tPR fortran/56691\n\t* gfortran.dg/type_to_class_4.f03: New test.\n\nFrom-SVN: r257550", "tree": {"sha": "531e08057236b9dcd8588408505cd0d56269cc6c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/531e08057236b9dcd8588408505cd0d56269cc6c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/950ab3f1419619d6e4bec7d2f029b9aff00813e9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/950ab3f1419619d6e4bec7d2f029b9aff00813e9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/950ab3f1419619d6e4bec7d2f029b9aff00813e9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/950ab3f1419619d6e4bec7d2f029b9aff00813e9/comments", "author": null, "committer": null, "parents": [{"sha": "cb2e8560f9d446c60610934b8d28b810f8396189", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cb2e8560f9d446c60610934b8d28b810f8396189", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cb2e8560f9d446c60610934b8d28b810f8396189"}], "stats": {"total": 67, "additions": 59, "deletions": 8}, "files": [{"sha": "b0bd14f1839d6deac3f464ee9756239167fa709d", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/950ab3f1419619d6e4bec7d2f029b9aff00813e9/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/950ab3f1419619d6e4bec7d2f029b9aff00813e9/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=950ab3f1419619d6e4bec7d2f029b9aff00813e9", "patch": "@@ -1,3 +1,17 @@\n+2018-02-10  Paul Thomas  <pault@gcc.gnu.org>\n+\n+\tPR fortran/84141\n+\tPR fortran/84155\n+\t* trans-array.c (gfc_array_init_size): Revert the change made\n+\tin revision 257356 setting the dtype.\n+\t* trans-types.c (gfc_get_dtype): Do not use the cached dtype.\n+\tCall gfc_get_dtype_rank_type every time.\n+\n+\tPR fortran/56691\n+\t* trans-array.c (gfc_conv_expr_descriptor): If the source array\n+\tis a descriptor type, use its offset, removing the condition\n+\tthat is be a class expression.\n+\n 2018-02-07  Steven G. Kargl  <kargl@gcc.gnu.org>\n \n \tPR fortran/82994"}, {"sha": "d8b4381251e9f38165ba785603ee22087facae43", "filename": "gcc/fortran/trans-array.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/950ab3f1419619d6e4bec7d2f029b9aff00813e9/gcc%2Ffortran%2Ftrans-array.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/950ab3f1419619d6e4bec7d2f029b9aff00813e9/gcc%2Ffortran%2Ftrans-array.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-array.c?ref=950ab3f1419619d6e4bec7d2f029b9aff00813e9", "patch": "@@ -5354,8 +5354,8 @@ gfc_array_init_size (tree descriptor, int rank, int corank, tree * poffset,\n     }\n   else\n     {\n-      tmp = gfc_get_dtype_rank_type (rank, gfc_get_element_type (type));\n-      gfc_add_modify (pblock, gfc_conv_descriptor_dtype (descriptor), tmp);\n+      tmp = gfc_conv_descriptor_dtype (descriptor);\n+      gfc_add_modify (pblock, tmp, gfc_get_dtype (type));\n     }\n \n   or_expr = logical_false_node;\n@@ -7529,9 +7529,9 @@ gfc_conv_expr_descriptor (gfc_se *se, gfc_expr *expr)\n \t      : base;\n \t  gfc_conv_descriptor_offset_set (&loop.pre, parm, tmp);\n \t}\n-      else if (IS_CLASS_ARRAY (expr) && !se->data_not_needed\n-\t       && (!rank_remap || se->use_offset)\n-\t       && GFC_DESCRIPTOR_TYPE_P (TREE_TYPE (desc)))\n+      else if (GFC_DESCRIPTOR_TYPE_P (TREE_TYPE (desc))\n+\t       && !se->data_not_needed\n+\t       && (!rank_remap || se->use_offset))\n \t{\n \t  gfc_conv_descriptor_offset_set (&loop.pre, parm,\n \t\t\t\t\t gfc_conv_descriptor_offset_get (desc));"}, {"sha": "697b7354e1bd3ded76384d37bed52340fa11890a", "filename": "gcc/fortran/trans-types.c", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/950ab3f1419619d6e4bec7d2f029b9aff00813e9/gcc%2Ffortran%2Ftrans-types.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/950ab3f1419619d6e4bec7d2f029b9aff00813e9/gcc%2Ffortran%2Ftrans-types.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-types.c?ref=950ab3f1419619d6e4bec7d2f029b9aff00813e9", "patch": "@@ -1593,9 +1593,6 @@ gfc_get_dtype (tree type)\n \n   gcc_assert (GFC_DESCRIPTOR_TYPE_P (type) || GFC_ARRAY_TYPE_P (type));\n \n-  if (GFC_TYPE_ARRAY_DTYPE (type))\n-    return GFC_TYPE_ARRAY_DTYPE (type);\n-\n   rank = GFC_TYPE_ARRAY_RANK (type);\n   etype = gfc_get_element_type (type);\n   dtype = gfc_get_dtype_rank_type (rank, etype);"}, {"sha": "a14db69e416d8775232df4091c3774155d3420a4", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/950ab3f1419619d6e4bec7d2f029b9aff00813e9/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/950ab3f1419619d6e4bec7d2f029b9aff00813e9/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=950ab3f1419619d6e4bec7d2f029b9aff00813e9", "patch": "@@ -1,3 +1,8 @@\n+2018-02-10  Paul Thomas  <pault@gcc.gnu.org>\n+\n+\tPR fortran/56691\n+\t* gfortran.dg/type_to_class_4.f03: New test.\n+\n 2018-02-10  Alan Modra  <amodra@gmail.com>\n \n \tPR target/84300"}, {"sha": "196e4481de48a7cf865ce01c3363baea332acc13", "filename": "gcc/testsuite/gfortran.dg/type_to_class_4.f03", "status": "added", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/950ab3f1419619d6e4bec7d2f029b9aff00813e9/gcc%2Ftestsuite%2Fgfortran.dg%2Ftype_to_class_4.f03", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/950ab3f1419619d6e4bec7d2f029b9aff00813e9/gcc%2Ftestsuite%2Fgfortran.dg%2Ftype_to_class_4.f03", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Ftype_to_class_4.f03?ref=950ab3f1419619d6e4bec7d2f029b9aff00813e9", "patch": "@@ -0,0 +1,35 @@\n+! { dg-do run }\n+!\n+! Test the fix for PR56691 comment #7 (and comment #0).\n+!\n+! Reduced from the original of Marco Restelli  <mrestelli@gmail.com>\n+! by Janus Weil  <janus@gcc.gnu.org>\n+!\n+module m2\n+  implicit none\n+  type :: t_stv\n+    real :: f1\n+  end type\n+contains\n+  subroutine lcb(y)\n+    class(t_stv), intent(in) :: y(:)\n+    integer :: k\n+    do k=1,size(y)\n+      if (int(y(k)%f1) .ne. k) call abort\n+    enddo\n+  end subroutine\n+end module\n+\n+program test\n+ use m2\n+ implicit none\n+\n+ type(t_stv), allocatable :: work(:)\n+\n+  allocate(work(4))\n+  work(:)%f1 = (/ 1.,2.,3.,4./)\n+\n+  call lcb(work)\n+  call lcb(work(:4)) ! Indexing used to be offset by 1.\n+\n+end program"}]}