{"sha": "cb45715664703f952fea3294ce1c9d66eaeed693", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2I0NTcxNTY2NDcwM2Y5NTJmZWEzMjk0Y2UxYzlkNjZlYWVlZDY5Mw==", "commit": {"author": {"name": "Benjamin Kosnik", "email": "bkoz@redhat.com", "date": "2008-04-23T23:28:45Z"}, "committer": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2008-04-23T23:28:45Z"}, "message": "os_defines.h: Use _GLIBCXX_BEGIN_NAMESPACE, _GLIBCXX_BEGIN_EXTERN_C, etc.\n\n2008-04-23  Benjamin Kosnik  <bkoz@redhat.com>\n\n\t* config/os/hpux/os_defines.h: Use _GLIBCXX_BEGIN_NAMESPACE,\n\t_GLIBCXX_BEGIN_EXTERN_C, etc.\n\nFrom-SVN: r134607", "tree": {"sha": "3fc93ba233dcb621b870b9e7c3e3aeb561a62601", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3fc93ba233dcb621b870b9e7c3e3aeb561a62601"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cb45715664703f952fea3294ce1c9d66eaeed693", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cb45715664703f952fea3294ce1c9d66eaeed693", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cb45715664703f952fea3294ce1c9d66eaeed693", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cb45715664703f952fea3294ce1c9d66eaeed693/comments", "author": null, "committer": null, "parents": [{"sha": "10a9ad3b821a7fa43b3ca72ab9a3911bbaa8bd19", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/10a9ad3b821a7fa43b3ca72ab9a3911bbaa8bd19", "html_url": "https://github.com/Rust-GCC/gccrs/commit/10a9ad3b821a7fa43b3ca72ab9a3911bbaa8bd19"}], "stats": {"total": 68, "additions": 46, "deletions": 22}, "files": [{"sha": "14b75c934685cfa29db570630e8bd7b300ae5da4", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 19, "deletions": 14, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb45715664703f952fea3294ce1c9d66eaeed693/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb45715664703f952fea3294ce1c9d66eaeed693/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=cb45715664703f952fea3294ce1c9d66eaeed693", "patch": "@@ -1,3 +1,8 @@\n+2008-04-23  Benjamin Kosnik  <bkoz@redhat.com>\n+\n+\t* config/os/hpux/os_defines.h: Use _GLIBCXX_BEGIN_NAMESPACE,\n+\t_GLIBCXX_BEGIN_EXTERN_C, etc.\n+\n 2008-04-23  Johannes Singler  <singler@ira.uka.de>\n \n         * include/parallel/quicksort.h: Reformat,\n@@ -89,11 +94,11 @@\n 2008-04-14  Benjamin Kosnik  <bkoz@redhat.com>\n \n \t* include/bits/c++config: Guard _LDBL_ macros with __cplusplus.\n-\t\n+\n 2008-04-10  Benjamin Kosnik  <bkoz@redhat.com>\n \n \t* doc/html/*: Regenerate.\n-\t\n+\n 2008-04-10  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n \n \t* doc/xml/manual/bitmap_allocator.xml: Improve wording a bit.\n@@ -125,7 +130,7 @@\n \n \t* doc/xml/manual/parallel_mode.xml: Remove map/set bulk\n \tinsertors. Correct omp_set_num_threads example.\n-\t\n+\n 2008-04-10  Benjamin Kosnik  <bkoz@redhat.com>\n \n \t* include/c_global/cstdatomic: C++ types only, format, doxygen markup.\n@@ -135,7 +140,7 @@\n \t* include/Makefile.am (cstdatomic, stdatomic.h): Add.\n \t* src/Makefile.am (atomic.c): Add.\n \t* acinclude.m4 (GLIBCXX_CHECK_STANDARD_LAYOUT): New.\n-\t* configure.ac: Call it.\t\n+\t* configure.ac: Call it.\n \t* include/Makefile.in: Regenerate.\n \t* src/Makefile.in: Same.\n \t* Makefile.in: Same.\n@@ -147,21 +152,21 @@\n \t* libsupc++/Makefile.in: Same.\n \t* config.h.in: Same.\n \t* configure: Same.\n-\t\n+\n \t* config/abi/pre/gnu.ver: Add atomics exports.\n \n \t* include/ext/typelist.h (apply_generator): New.\n \t* include/bits/c++config (_GLIBCXX_BEGIN_EXTERN_C): New.\n \t(_GLIBCXX_END_EXTERN_C): New.\n \tDeal with _GLIBCXX_BEGIN_NAMESPACE, _GLIBCXX_END_NAMESPACE when\n-\tcompiling as C.\t\n+\tcompiling as C.\n \t* testsuite/lib/libstdc++.exp (v3_target_compile_as_c): Add -L\n \tflag for libstdc++.\n \t* testsuite/util/testsuite_common_types.h (integral_types): New\n \ttypelist.\n \t(atomics, atomics_tl): Same.\n \t(assignable, default_constructible, copy_constructible,\n-\texplicit_value_constructible): New.\t\n+\texplicit_value_constructible): New.\n \t* testsuite/17_intro/headers/c++200x/all.cc: Test new headers.\n \t* testsuite/29_atomics: New.\n \t* testsuite/29_atomics/atomic_address: Same.\n@@ -178,7 +183,7 @@\n \t* testsuite/29_atomics/atomic_flag/cons/default.cc: Same.\n \t* testsuite/29_atomics/atomic_flag/cons/aggregate.cc: Same.\n \t* testsuite/29_atomics/atomic_flag/requirements: Same.\n-\t* testsuite/29_atomics/atomic_flag/requirements/standard_layout.cc: \n+\t* testsuite/29_atomics/atomic_flag/requirements/standard_layout.cc:\n \tSame.\n \t* testsuite/29_atomics/atomic_flag/\n \tatomic_global_fence_compatibility.cc: Same.\n@@ -207,7 +212,7 @@\n \t* testsuite/29_atomics/atomic/requirements/explicit_instantiation: Same.\n \t* testsuite/29_atomics/atomic/requirements/explicit_instantiation/\n \t1.cc: Same.\n-\t\n+\n 2008-04-10  Lawrence Crowl  <crowl@google.com>\n \n \t* include/c_global/cstdatomic: New.\n@@ -217,13 +222,13 @@\n 2008-04-10  Benjamin Kosnik  <bkoz@redhat.com>\n \n \t* include/std/tuple: Consistency check for include guard, doxygen\n-\tfile markup.\t\n+\tfile markup.\n \t* include/std/date_time: Same.\n \t* include/std/type_traits: Same.\n \t* include/std/regex: Same.\n \t* include/std/array: Same.\n-\t* include/std/system_error: Same, add error_code ctor.\t\n-\n+\t* include/std/system_error: Same, add error_code ctor.\n+\t\n 2008-04-07  Johannes Singler  <singler@ira.uka.de>\n \n \t* include/parallel/multiway_merge.h: Moved decisions to\n@@ -345,7 +350,7 @@\n \t* config/abi/compatibility.h: Adjust file name.\n \n \t* testsuite/19_diagnostics/error_category/cons/copy_neg.cc: Adjust\n-\tline numbers.\t\n+\tline numbers.\n \t* testsuite/20_util/make_signed/requirements/typedefs_neg.cc: Same.\n \t* testsuite/20_util/make_unsigned/requirements/typedefs_neg.cc: Same.\n \n@@ -363,7 +368,7 @@\n \t* testsuite/util/testsuite_abi.cc: Add support for not counting\n \tGLIBCXX_LDBL_* compat symbols missing if no long double compat\n \tsymbols under test.\n-\t\n+\n 2008-03-20  Paolo Carlini  <pcarlini@suse.de>\n \n \tPR libstdc++/35637"}, {"sha": "f02fac2351dfa13a162c0f2c21da62cc3dda93fa", "filename": "libstdc++-v3/config.h.in", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb45715664703f952fea3294ce1c9d66eaeed693/libstdc%2B%2B-v3%2Fconfig.h.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb45715664703f952fea3294ce1c9d66eaeed693/libstdc%2B%2B-v3%2Fconfig.h.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig.h.in?ref=cb45715664703f952fea3294ce1c9d66eaeed693", "patch": "@@ -719,6 +719,21 @@\n /* Define to the version of this package. */\n #undef PACKAGE_VERSION\n \n+/* The size of a `char', as computed by sizeof. */\n+#undef SIZEOF_CHAR\n+\n+/* The size of a `int', as computed by sizeof. */\n+#undef SIZEOF_INT\n+\n+/* The size of a `long', as computed by sizeof. */\n+#undef SIZEOF_LONG\n+\n+/* The size of a `short', as computed by sizeof. */\n+#undef SIZEOF_SHORT\n+\n+/* The size of a `void *', as computed by sizeof. */\n+#undef SIZEOF_VOID_P\n+\n /* Define to 1 if you have the ANSI C header files. */\n #undef STDC_HEADERS\n "}, {"sha": "515f42182b0357c8434fdd045de9de1475dfee5e", "filename": "libstdc++-v3/config/os/hpux/os_defines.h", "status": "modified", "additions": 12, "deletions": 8, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb45715664703f952fea3294ce1c9d66eaeed693/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fhpux%2Fos_defines.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb45715664703f952fea3294ce1c9d66eaeed693/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fhpux%2Fos_defines.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fhpux%2Fos_defines.h?ref=cb45715664703f952fea3294ce1c9d66eaeed693", "patch": "@@ -1,6 +1,6 @@\n // Specific definitions for HPUX  -*- C++ -*-\n \n-// Copyright (C) 2000, 2002, 2004, 2005 Free Software Foundation, Inc.\n+// Copyright (C) 2000, 2002, 2004, 2005, 2008 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -61,20 +61,24 @@\n \n    We also force _GLIBCXX_USE_LONG_LONG here so that we don't have\n    to bastardize configure to deal with this sillyness.  */\n-namespace std \n-{\n+\n+_GLIBCXX_BEGIN_NAMESPACE(std)\n+_GLIBCXX_BEGIN_EXTERN_C\n+\n #ifndef __LP64__\n-  __extension__ extern \"C\" long long strtoll (const char *, char **, int)\n+  __extension__ long long strtoll (const char *, char **, int)\n     __asm  (\"__strtoll\");\n-  __extension__ extern \"C\" unsigned long long strtoull (const char *, char **, int)\n+  __extension__ unsigned long long strtoull (const char *, char **, int)\n     __asm  (\"__strtoull\");\n #else\n-  __extension__ extern \"C\" long long strtoll (const char *, char **, int)\n+  __extension__ long long strtoll (const char *, char **, int)\n     __asm  (\"strtol\");\n-  __extension__ extern \"C\" unsigned long long strtoull (const char *, char **, int)\n+  __extension__ unsigned long long strtoull (const char *, char **, int)\n     __asm  (\"strtoul\");\n #endif\n-}\n+\n+_GLIBCXX_END_EXTERN_C\n+_GLIBCXX_END_NAMESPACE\n \n #define _GLIBCXX_USE_LONG_LONG 1\n "}]}