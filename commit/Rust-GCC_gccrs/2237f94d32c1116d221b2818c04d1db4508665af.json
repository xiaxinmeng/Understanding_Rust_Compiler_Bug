{"sha": "2237f94d32c1116d221b2818c04d1db4508665af", "node_id": "C_kwDOANBUbNoAKDIyMzdmOTRkMzJjMTExNmQyMjFiMjgxOGMwNGQxZGI0NTA4NjY1YWY", "commit": {"author": {"name": "Steve Baird", "email": "baird@adacore.com", "date": "2022-07-26T00:19:29Z"}, "committer": {"name": "Marc Poulhi\u00e8s", "email": "poulhies@adacore.com", "date": "2022-09-05T07:21:05Z"}, "message": "[Ada] Bad Default_Initial_Condition check for a not-default-initialized object\n\nNo Default_Initial_Condition check should be generated for an object\ndeclaration that has an explicit initial value. Previously this was\nimplemented by testing the Has_Init_Expression flag, but this only works\nif the object declaration was created by the parser (since only the\nparser sets that attribute, at least currently).\n\ngcc/ada/\n\n\t* exp_ch3.adb\n\t(Expand_N_Object_Declaration): In deciding whether to emit a DIC\n\tcheck, we were previously testing the Has_Init_Expression flag.\n\tContinue to test that flag as before, but add a test for the\n\tsyntactic presence of an initial value in the object declaration.\n\tThis new test would not supersede the old test in the case where\n\tan explicit initial value has been eliminated as part of some tree\n\ttransformation.", "tree": {"sha": "614e35b9bf5b2ee535786e3d380700718aaf997f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/614e35b9bf5b2ee535786e3d380700718aaf997f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2237f94d32c1116d221b2818c04d1db4508665af", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2237f94d32c1116d221b2818c04d1db4508665af", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2237f94d32c1116d221b2818c04d1db4508665af", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2237f94d32c1116d221b2818c04d1db4508665af/comments", "author": {"login": "swbaird", "id": 50751052, "node_id": "MDQ6VXNlcjUwNzUxMDUy", "avatar_url": "https://avatars.githubusercontent.com/u/50751052?v=4", "gravatar_id": "", "url": "https://api.github.com/users/swbaird", "html_url": "https://github.com/swbaird", "followers_url": "https://api.github.com/users/swbaird/followers", "following_url": "https://api.github.com/users/swbaird/following{/other_user}", "gists_url": "https://api.github.com/users/swbaird/gists{/gist_id}", "starred_url": "https://api.github.com/users/swbaird/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/swbaird/subscriptions", "organizations_url": "https://api.github.com/users/swbaird/orgs", "repos_url": "https://api.github.com/users/swbaird/repos", "events_url": "https://api.github.com/users/swbaird/events{/privacy}", "received_events_url": "https://api.github.com/users/swbaird/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dkm", "id": 87603, "node_id": "MDQ6VXNlcjg3NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/87603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dkm", "html_url": "https://github.com/dkm", "followers_url": "https://api.github.com/users/dkm/followers", "following_url": "https://api.github.com/users/dkm/following{/other_user}", "gists_url": "https://api.github.com/users/dkm/gists{/gist_id}", "starred_url": "https://api.github.com/users/dkm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dkm/subscriptions", "organizations_url": "https://api.github.com/users/dkm/orgs", "repos_url": "https://api.github.com/users/dkm/repos", "events_url": "https://api.github.com/users/dkm/events{/privacy}", "received_events_url": "https://api.github.com/users/dkm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "645d1208bf948aed1d6030ca2e9d1510e7459a95", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/645d1208bf948aed1d6030ca2e9d1510e7459a95", "html_url": "https://github.com/Rust-GCC/gccrs/commit/645d1208bf948aed1d6030ca2e9d1510e7459a95"}], "stats": {"total": 1, "additions": 1, "deletions": 0}, "files": [{"sha": "0d826913f756d26b451dc3fb2b15f17999f410c7", "filename": "gcc/ada/exp_ch3.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2237f94d32c1116d221b2818c04d1db4508665af/gcc%2Fada%2Fexp_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2237f94d32c1116d221b2818c04d1db4508665af/gcc%2Fada%2Fexp_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch3.adb?ref=2237f94d32c1116d221b2818c04d1db4508665af", "patch": "@@ -7850,6 +7850,7 @@ package body Exp_Ch3 is\n         and then Present (DIC_Procedure (Typ))\n         and then not Has_Null_Body (DIC_Procedure (Typ))\n         and then not Has_Init_Expression (N)\n+        and then No (Expr)\n         and then not Is_Imported (Def_Id)\n       then\n          declare"}]}