{"sha": "118c8424411e7a9a250bdf7ea7ac1975ffe31477", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTE4Yzg0MjQ0MTFlN2E5YTI1MGJkZjdlYTdhYzE5NzVmZmUzMTQ3Nw==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2016-10-12T16:13:06Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2016-10-12T16:13:06Z"}, "message": "testsuite_hooks.h: Rewrite VERIFY in terms of __builtin_printf and __builtin_abort.\n\n2016-10-12  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\t* testsuite/util/testsuite_hooks.h: Rewrite VERIFY in terms of\n\t__builtin_printf and __builtin_abort.\n\t* testsuite/lib/libstdc++.exp: Remove _GLIBCXX_ASSERT use.\n\t* scripts/testsuite_flags.in: Likewise.\n\t* testsuite/22_locale/time_get/get/char/1.cc: Likewise.\n\t* testsuite/22_locale/time_get/get/char/2.cc: Likewise.\n\t* testsuite/22_locale/time_get/get/wchar_t/1.cc: Likewise.\n\t* testsuite/22_locale/time_get/get/wchar_t/2.cc: Likewise.\n\t* testsuite/27_io/basic_filebuf/close/char/4879.cc: Likewise, adjust.\n\t* testsuite/27_io/basic_filebuf/close/char/9964.cc: Likewise.\n\t* testsuite/27_io/basic_filebuf/imbue/char/13171-2.cc: Likewise.\n\t* testsuite/27_io/basic_filebuf/imbue/wchar_t/14975-2.cc: Likewise.\n\t* testsuite/27_io/basic_filebuf/seekoff/char/26777.cc: Likewise.\n\t* testsuite/27_io/basic_filebuf/underflow/char/10097.cc: Likewise.\n\t* testsuite/27_io/basic_ostream/inserters_arithmetic/char/1.cc:\n\tLikewise.\n\t* testsuite/27_io/basic_ostream/inserters_arithmetic/char/hexfloat.cc:\n\tLikewise.\n\t* testsuite/27_io/basic_ostream/inserters_arithmetic/wchar_t/1.cc:\n\tLikewise.\n\t* testsuite/27_io/objects/char/7.cc: Likewise.\n\t* testsuite/27_io/objects/char/9661-1.cc: Likewise.\n\t* testsuite/27_io/objects/wchar_t/7.cc: Likewise.\n\t* testsuite/27_io/objects/wchar_t/9661-1.cc: Likewise.\n\t* testsuite/18_support/50594.cc: Remove 'test' variable, adjust.\n\t* testsuite/18_support/bad_alloc/what.cc: Likewise.\n\t* testsuite/18_support/bad_cast/what.cc: Likewise.\n\t* testsuite/18_support/bad_exception/what.cc: Likewise.\n\t* testsuite/18_support/bad_typeid/what.cc: Likewise.\n\t* testsuite/18_support/exception/38732.cc: Likewise.\n\t* testsuite/18_support/exception/what.cc: Likewise.\n\t* testsuite/18_support/exception_ptr/64241.cc: Likewise.\n\t* testsuite/18_support/exception_ptr/current_exception.cc: Likewise.\n\t* testsuite/18_support/exception_ptr/lifespan.cc: Likewise.\n\t* testsuite/18_support/exception_ptr/make_exception_ptr.cc: Likewise.\n\t* testsuite/18_support/exception_ptr/rethrow_exception.cc: Likewise.\n\t* testsuite/18_support/nested_exception/cons.cc: Likewise.\n\t* testsuite/18_support/nested_exception/nested_ptr.cc: Likewise.\n\t* testsuite/18_support/nested_exception/rethrow_if_nested.cc: Likewise.\n\t* testsuite/18_support/nested_exception/rethrow_nested.cc: Likewise.\n\t* testsuite/18_support/nested_exception/throw_with_nested.cc: Likewise.\n\t* testsuite/18_support/numeric_limits/char16_32_t.cc: Likewise.\n\t* testsuite/18_support/numeric_limits/digits10.cc: Likewise.\n\t* testsuite/18_support/numeric_limits/dr559.cc: Likewise.\n\t* testsuite/18_support/numeric_limits/epsilon.cc: Likewise.\n\t* testsuite/18_support/numeric_limits/is_iec559.cc: Likewise.\n\t* testsuite/18_support/numeric_limits/is_signed.cc: Likewise.\n\t* testsuite/18_support/numeric_limits/lowest.cc: Likewise.\n\t* testsuite/18_support/numeric_limits/max_digits10.cc: Likewise.\n\t* testsuite/18_support/numeric_limits/min_max.cc: Likewise.\n\t* testsuite/18_support/numeric_limits/specialization_default_values.cc:\n\tLikewise.\n\t* testsuite/18_support/type_info/hash_code.cc: Likewise.\n\t* testsuite/19_diagnostics/error_category/cons/copy_neg.cc: Likewise.\n\t* testsuite/19_diagnostics/error_category/cons/default.cc: Likewise.\n\t* testsuite/19_diagnostics/error_category/operators/equal.cc: Likewise.\n\t* testsuite/19_diagnostics/error_category/operators/\n\tnot_equal.cc: Likewise.\n\t* testsuite/19_diagnostics/error_code/cons/1.cc: Likewise.\n\t* testsuite/19_diagnostics/error_code/cons/39882.cc: Likewise.\n\t* testsuite/19_diagnostics/error_code/modifiers/39882.cc: Likewise.\n\t* testsuite/19_diagnostics/error_code/operators/bool.cc: Likewise.\n\t* testsuite/19_diagnostics/error_code/operators/equal.cc: Likewise.\n\t* testsuite/19_diagnostics/error_code/operators/not_equal.cc: Likewise.\n\t* testsuite/19_diagnostics/error_condition/cons/1.cc: Likewise.\n\t* testsuite/19_diagnostics/error_condition/cons/39881.cc: Likewise.\n\t* testsuite/19_diagnostics/error_condition/modifiers/39881.cc: \n\tLikewise.\n\t* testsuite/19_diagnostics/error_condition/operators/bool.cc: Likewise.\n\t* testsuite/19_diagnostics/error_condition/operators/equal.cc:\n\tLikewise.\n\t* testsuite/19_diagnostics/error_condition/operators/not_equal.cc:\n\tLikewise.\n\t* testsuite/19_diagnostics/logic_error/what-1.cc: Likewise.\n\t* testsuite/19_diagnostics/logic_error/what-2.cc: Likewise.\n\t* testsuite/19_diagnostics/logic_error/what-3.cc: Likewise.\n\t* testsuite/19_diagnostics/logic_error/what-big.cc: Likewise.\n\t* testsuite/19_diagnostics/runtime_error/what-1.cc: Likewise.\n\t* testsuite/19_diagnostics/runtime_error/what-2.cc: Likewise.\n\t* testsuite/19_diagnostics/runtime_error/what-3.cc: Likewise.\n\t* testsuite/19_diagnostics/runtime_error/what-big.cc: Likewise.\n\t* testsuite/19_diagnostics/system_error/cons-1.cc: Likewise.\n\t* testsuite/19_diagnostics/system_error/what-1.cc: Likewise.\n\t* testsuite/19_diagnostics/system_error/what-2.cc: Likewise.\n\t* testsuite/19_diagnostics/system_error/what-3.cc: Likewise.\n\t* testsuite/19_diagnostics/system_error/what-4.cc: Likewise.\n\t* testsuite/19_diagnostics/system_error/what-big.cc: Likewise.\n\t* testsuite/20_util/addressof/1.cc: Likewise.\n\t* testsuite/20_util/align/1.cc: Likewise.\n\t* testsuite/20_util/align/2.cc: Likewise.\n\t* testsuite/20_util/allocator/1.cc: Likewise.\n\t* testsuite/20_util/allocator/10378.cc: Likewise.\n\t* testsuite/20_util/allocator/8230.cc: Likewise.\n\t* testsuite/20_util/allocator_traits/members/allocate_hint.cc:\n\tLikewise.\n\t* testsuite/20_util/allocator_traits/members/construct.cc: Likewise.\n\t* testsuite/20_util/allocator_traits/members/destroy.cc: Likewise.\n\t* testsuite/20_util/allocator_traits/members/max_size.cc: Likewise.\n\t* testsuite/20_util/any/assign/exception.cc: Likewise.\n\t* testsuite/20_util/auto_ptr/1.cc: Likewise.\n\t* testsuite/20_util/auto_ptr/2.cc: Likewise.\n\t* testsuite/20_util/auto_ptr/3.cc: Likewise.\n\t* testsuite/20_util/auto_ptr/4.cc: Likewise.\n\t* testsuite/20_util/auto_ptr/5.cc: Likewise.\n\t* testsuite/20_util/auto_ptr/6.cc: Likewise.\n\t* testsuite/20_util/auto_ptr/7.cc: Likewise.\n\t* testsuite/20_util/bind/all_bound.cc: Likewise.\n\t* testsuite/20_util/bind/conv_result.cc: Likewise.\n\t* testsuite/20_util/bind/cv_quals.cc: Likewise.\n\t* testsuite/20_util/bind/cv_quals_2.cc\n\t* testsuite/20_util/bind/nested.cc: Likewise.\n\t* testsuite/20_util/bind/placeholders.cc: Likewise.\n\t* testsuite/20_util/bind/ref.cc: Likewise.\n\t* testsuite/20_util/bind/ref2.cc: Likewise.\n\t* testsuite/20_util/common_type/requirements/typedefs-1.cc: Likewise.\n\t* testsuite/20_util/duration/arithmetic/1.cc: Likewise.\n\t* testsuite/20_util/duration/arithmetic/2.cc: Likewise.\n\t* testsuite/20_util/duration/arithmetic/58850.cc: Likewise.\n\t* testsuite/20_util/duration/arithmetic/dr2020.cc: Likewise.\n\t* testsuite/20_util/duration/arithmetic/dr934-2.cc: Likewise.\n\t* testsuite/20_util/duration/comparison_operators/1.cc: Likewise.\n\t* testsuite/20_util/duration/cons/1.cc: Likewise.\n\t* testsuite/20_util/duration/cons/2.cc: Likewise.\n\t* testsuite/20_util/enable_if/requirements/typedefs.cc: Likewise.\n\t* testsuite/20_util/enable_if/requirements/typedefs_neg.cc: Likewise.\n\t* testsuite/20_util/enable_shared_from_this/members/assign.cc:\n\tLikewise.\n\t* testsuite/20_util/exchange/1.cc: Likewise.\n\t* testsuite/20_util/forward/a.cc: Likewise.\n\t* testsuite/20_util/forward/b.cc: Likewise.\n\t* testsuite/20_util/forward/d.cc: Likewise.\n\t* testsuite/20_util/function/1.cc: Likewise.\n\t* testsuite/20_util/function/2.cc: Likewise.\n\t* testsuite/20_util/function/3.cc: Likewise.\n\t* testsuite/20_util/function/4.cc: Likewise.\n\t* testsuite/20_util/function/43397.cc: Likewise.\n\t* testsuite/20_util/function/5.cc: Likewise.\n\t* testsuite/20_util/function/6.cc: Likewise.\n\t* testsuite/20_util/function/7.cc: Likewise.\n\t* testsuite/20_util/function/8.cc: Likewise.\n\t* testsuite/20_util/function/9.cc: Likewise.\n\t* testsuite/20_util/function/assign/move.cc: Likewise.\n\t* testsuite/20_util/function/cons/move.cc: Likewise.\n\t* testsuite/20_util/function_objects/dr660.cc: Likewise.\n\t* testsuite/20_util/hash/chi2_q_bit_flip_set.cc: Likewise.\n\t* testsuite/20_util/hash/chi2_q_bit_string_set.cc: Likewise.\n\t* testsuite/20_util/hash/chi2_q_document_words.cc: Likewise.\n\t* testsuite/20_util/hash/chi2_q_numeric_pattern_set.cc: Likewise.\n\t* testsuite/20_util/hash/chi2_q_uniform_random.cc: Likewise.\n\t* testsuite/20_util/hash/operators/size_t.cc: Likewise.\n\t* testsuite/20_util/hash/quality.cc: Likewise.\n\t* testsuite/20_util/integral_constant/static_definition.cc: Likewise.\n\t* testsuite/20_util/integral_constant/true_false_value.cc: Likewise.\n\t* testsuite/20_util/is_function/24808.cc: Likewise.\n\t* testsuite/20_util/is_object/24808.cc: Likewise.\n\t* testsuite/20_util/move_if_noexcept/1.cc: Likewise.\n\t* testsuite/20_util/move_if_noexcept/constexpr.cc: Likewise.\n\t* testsuite/20_util/owner_less/cmp.cc: Likewise.\n\t* testsuite/20_util/pair/1.cc: Likewise.\n\t* testsuite/20_util/pair/2.cc: Likewise.\n\t* testsuite/20_util/pair/3.cc: Likewise.\n\t* testsuite/20_util/pair/4.cc: Likewise.\n\t* testsuite/20_util/pair/make_pair/constexpr.cc: Likewise.\n\t* testsuite/20_util/pair/moveable.cc: Likewise.\n\t* testsuite/20_util/pair/piecewise.cc: Likewise.\n\t* testsuite/20_util/pair/swap.cc: Likewise.\n\t* testsuite/20_util/ratio/comparisons/comp1.cc: Likewise.\n\t* testsuite/20_util/ratio/comparisons/comp2.cc: Likewise.\n\t* testsuite/20_util/ratio/comparisons/comp3.cc: Likewise.\n\t* testsuite/20_util/ratio/cons/cons1.cc: Likewise.\n\t* testsuite/20_util/ratio/operations/45866.cc: Likewise.\n\t* testsuite/20_util/ratio/operations/47913.cc: Likewise.\n\t* testsuite/20_util/ratio/operations/ops1.cc: Likewise.\n\t* testsuite/20_util/ratio/operations/ops2.cc: Likewise.\n\t* testsuite/20_util/ratio/operations/ops3.cc: Likewise.\n\t* testsuite/20_util/reference_wrapper/invoke.cc: Likewise.\n\t* testsuite/20_util/scoped_allocator/1.cc: Likewise.\n\t* testsuite/20_util/scoped_allocator/2.cc: Likewise.\n\t* testsuite/20_util/shared_ptr/assign/assign.cc: Likewise.\n\t* testsuite/20_util/shared_ptr/assign/auto_ptr.cc: Likewise.\n\t* testsuite/20_util/shared_ptr/assign/auto_ptr_neg.cc: Likewise.\n\t* testsuite/20_util/shared_ptr/assign/move.cc: Likewise.\n\t* testsuite/20_util/shared_ptr/assign/shared_ptr.cc: Likewise.\n\t* testsuite/20_util/shared_ptr/assign/unique_ptr_lvalue_neg.cc:\n\tLikewise.\n\t* testsuite/20_util/shared_ptr/comparison/cmp.cc: Likewise.\n\t* testsuite/20_util/shared_ptr/comparison/less.cc: Likewise.\n\t* testsuite/20_util/shared_ptr/cons/alias.cc: Likewise.\n\t* testsuite/20_util/shared_ptr/cons/alloc.cc: Likewise.\n\t* testsuite/20_util/shared_ptr/cons/auto_ptr.cc: Likewise.\n\t* testsuite/20_util/shared_ptr/cons/copy.cc: Likewise.\n\t* testsuite/20_util/shared_ptr/cons/default.cc: Likewise.\n\t* testsuite/20_util/shared_ptr/cons/move.cc: Likewise.\n\t* testsuite/20_util/shared_ptr/cons/nullptr.cc: Likewise.\n\t* testsuite/20_util/shared_ptr/cons/pointer.cc: Likewise.\n\t* testsuite/20_util/shared_ptr/cons/unique_ptr.cc: Likewise.\n\t* testsuite/20_util/shared_ptr/cons/unique_ptr_array.cc: Likewise.\n\t* testsuite/20_util/shared_ptr/cons/unique_ptr_deleter.cc: Likewise.\n\t* testsuite/20_util/shared_ptr/cons/unique_ptr_deleter_ref_1.cc:\n\tLikewise.\n\t* testsuite/20_util/shared_ptr/cons/unique_ptr_deleter_ref_2.cc:\n\tLikewise.\n\t* testsuite/20_util/shared_ptr/cons/unique_ptr_neg.cc: Likewise.\n\t* testsuite/20_util/shared_ptr/cons/weak_ptr.cc: Likewise.\n\t* testsuite/20_util/shared_ptr/creation/alloc.cc: Likewise.\n\t* testsuite/20_util/shared_ptr/creation/dr402.cc: Likewise.\n\t* testsuite/20_util/shared_ptr/creation/dr925.cc: Likewise.\n\t* testsuite/20_util/shared_ptr/creation/make.cc: Likewise.\n\t* testsuite/20_util/shared_ptr/dest/dest.cc: Likewise.\n\t* testsuite/20_util/shared_ptr/hash/1.cc: Likewise.\n\t* testsuite/20_util/shared_ptr/misc/24595.cc: Likewise.\n\t* testsuite/20_util/shared_ptr/misc/42019.cc: Likewise.\n\t* testsuite/20_util/shared_ptr/misc/io.cc: Likewise.\n\t* testsuite/20_util/shared_ptr/misc/swap.cc: Likewise.\n\t* testsuite/20_util/shared_ptr/modifiers/reset.cc: Likewise.\n\t* testsuite/20_util/shared_ptr/modifiers/reset_alloc.cc: Likewise.\n\t* testsuite/20_util/shared_ptr/modifiers/reset_neg.cc: Likewise.\n\t* testsuite/20_util/shared_ptr/modifiers/swap.cc: Likewise.\n\t* testsuite/20_util/shared_ptr/modifiers/swap_neg.cc: Likewise.\n\t* testsuite/20_util/shared_ptr/observers/bool_conv.cc: Likewise.\n\t* testsuite/20_util/shared_ptr/observers/get.cc: Likewise.\n\t* testsuite/20_util/shared_ptr/observers/owner_before.cc: Likewise.\n\t* testsuite/20_util/shared_ptr/observers/unique.cc: Likewise.\n\t* testsuite/20_util/shared_ptr/observers/use_count.cc: Likewise.\n\t* testsuite/20_util/shared_ptr/thread/default_weaktoshared.cc:\n\tLikewise.\n\t* testsuite/20_util/shared_ptr/thread/mutex_weaktoshared.cc: Likewise.\n\t* testsuite/20_util/specialized_algorithms/uninitialized_copy/\n\tmove_iterators/1.cc: Likewise.\n\t* testsuite/20_util/specialized_algorithms/uninitialized_copy_n/\n\tmove_iterators/1.cc: Likewise.\n\t* testsuite/20_util/temporary_buffer.cc: Likewise.\n\t* testsuite/20_util/time_point/1.cc: Likewise.\n\t* testsuite/20_util/time_point/2.cc: Likewise.\n\t* testsuite/20_util/time_point/3.cc: Likewise.\n\t* testsuite/20_util/time_point/nonmember/constexpr.cc: Likewise.\n\t* testsuite/20_util/tuple/48476.cc: Likewise.\n\t* testsuite/20_util/tuple/comparison_operators/comparisons.cc:\n\tLikewise.\n\t* testsuite/20_util/tuple/cons/allocators.cc: Likewise.\n\t* testsuite/20_util/tuple/cons/assignment.cc: Likewise.\n\t* testsuite/20_util/tuple/cons/big_tuples.cc: Likewise.\n\t* testsuite/20_util/tuple/cons/constructor.cc: Likewise.\n\t* testsuite/20_util/tuple/creation_functions/23978.cc: Likewise.\n\t* testsuite/20_util/tuple/creation_functions/48476.cc: Likewise.\n\t* testsuite/20_util/tuple/creation_functions/constexpr.cc: Likewise.\n\t* testsuite/20_util/tuple/creation_functions/forward_as_tuple.cc:\n\tLikewise.\n\t* testsuite/20_util/tuple/creation_functions/make_tuple.cc: Likewise.\n\t* testsuite/20_util/tuple/creation_functions/tie.cc: Likewise.\n\t* testsuite/20_util/tuple/creation_functions/tie2.cc: Likewise.\n\t* testsuite/20_util/tuple/cv_tuple_size.cc: Likewise.\n\t* testsuite/20_util/tuple/element_access/get.cc: Likewise.\n\t* testsuite/20_util/tuple/element_access/get_by_type.cc: Likewise.\n\t* testsuite/20_util/tuple/moveable.cc: Likewise.\n\t* testsuite/20_util/tuple/swap.cc: Likewise.\n\t* testsuite/20_util/tuple/tuple_size.cc: Likewise.\n\t* testsuite/20_util/typeindex/comparison_operators.cc: Likewise.\n\t* testsuite/20_util/typeindex/hash.cc: Likewise.\n\t* testsuite/20_util/typeindex/hash_code.cc: Likewise.\n\t* testsuite/20_util/typeindex/name.cc: Likewise.\n\t* testsuite/20_util/unique_ptr/assign/48635.cc: Likewise.\n\t* testsuite/20_util/unique_ptr/assign/move.cc: Likewise.\n\t* testsuite/20_util/unique_ptr/assign/move_array.cc: Likewise.\n\t* testsuite/20_util/unique_ptr/assign/nullptr.cc: Likewise.\n\t* testsuite/20_util/unique_ptr/cons/auto_ptr.cc: Likewise.\n\t* testsuite/20_util/unique_ptr/cons/nullptr.cc: Likewise.\n\t* testsuite/20_util/unique_ptr/cons/pointer.cc: Likewise.\n\t* testsuite/20_util/unique_ptr/cons/pointer_array.cc: Likewise.\n\t* testsuite/20_util/unique_ptr/cons/ptr_deleter.cc: Likewise.\n\t* testsuite/20_util/unique_ptr/creation/array.cc: Likewise.\n\t* testsuite/20_util/unique_ptr/creation/single.cc: Likewise.\n\t* testsuite/20_util/unique_ptr/hash/1.cc: Likewise.\n\t* testsuite/20_util/unique_ptr/modifiers/43183.cc: Likewise.\n\t* testsuite/20_util/unique_ptr/specialized_algorithms/\n\tcomparisons.cc: Likewise.\n\t* testsuite/20_util/unique_ptr/specialized_algorithms/\n\tcomparisons_array.cc: Likewise.\n\t* testsuite/20_util/unique_ptr/specialized_algorithms/swap.cc:\n\tLikewise.\n\t* testsuite/20_util/uses_allocator/construction.cc: Likewise.\n\t* testsuite/20_util/uses_allocator/value.cc: Likewise.\n\t* testsuite/20_util/variant/run.cc: Likewise.\n\t* testsuite/20_util/weak_ptr/observers/owner_before.cc: Likewise.\n\t* testsuite/21_strings/basic_string/allocator/char/copy.cc: Likewise.\n\t* testsuite/21_strings/basic_string/allocator/char/copy_assign.cc:\n\tLikewise.\n\t* testsuite/21_strings/basic_string/allocator/char/move.cc: Likewise.\n\t* testsuite/21_strings/basic_string/allocator/char/move_assign.cc:\n\tLikewise.\n\t* testsuite/21_strings/basic_string/allocator/char/swap.cc: Likewise.\n\t* testsuite/21_strings/basic_string/allocator/wchar_t/copy.cc:\n\tLikewise.\n\t* testsuite/21_strings/basic_string/allocator/wchar_t/copy_assign.cc:\n\tLikewise.\n\t* testsuite/21_strings/basic_string/allocator/wchar_t/move.cc:\n\tLikewise.\n\t* testsuite/21_strings/basic_string/allocator/wchar_t/move_assign.cc:\n\tLikewise.\n\t* testsuite/21_strings/basic_string/allocator/wchar_t/swap.cc:\n\tLikewise.\n\t* testsuite/21_strings/basic_string/capacity/1.cc: Likewise.\n\t* testsuite/21_strings/basic_string/capacity/char/1.cc: Likewise.\n\t* testsuite/21_strings/basic_string/capacity/char/18654.cc: Likewise.\n\t* testsuite/21_strings/basic_string/capacity/char/2.cc: Likewise.\n\t* testsuite/21_strings/basic_string/capacity/char/shrink_to_fit.cc:\n\tLikewise.\n\t* testsuite/21_strings/basic_string/capacity/wchar_t/1.cc: Likewise.\n\t* testsuite/21_strings/basic_string/capacity/wchar_t/18654.cc:\n\tLikewise.\n\t* testsuite/21_strings/basic_string/capacity/wchar_t/2.cc: Likewise.\n\t* testsuite/21_strings/basic_string/capacity/wchar_t/shrink_to_fit.cc:\n\tLikewise.\n\t* testsuite/21_strings/basic_string/cons/char/1.cc: Likewise.\n\t* testsuite/21_strings/basic_string/cons/char/2.cc: Likewise.\n\t* testsuite/21_strings/basic_string/cons/char/3.cc: Likewise.\n\t* testsuite/21_strings/basic_string/cons/char/4.cc: Likewise.\n\t* testsuite/21_strings/basic_string/cons/char/42261.cc: Likewise.\n\t* testsuite/21_strings/basic_string/cons/char/5.cc: Likewise.\n\t* testsuite/21_strings/basic_string/cons/char/6.cc: Likewise.\n\t* testsuite/21_strings/basic_string/cons/char/7.cc: Likewise.\n\t* testsuite/21_strings/basic_string/cons/char/8.cc: Likewise.\n\t* testsuite/21_strings/basic_string/cons/char/moveable.cc: Likewise.\n\t* testsuite/21_strings/basic_string/cons/char/moveable2.cc: Likewise.\n\t* testsuite/21_strings/basic_string/cons/wchar_t/1.cc: Likewise.\n\t* testsuite/21_strings/basic_string/cons/wchar_t/2.cc: Likewise.\n\t* testsuite/21_strings/basic_string/cons/wchar_t/3.cc: Likewise.\n\t* testsuite/21_strings/basic_string/cons/wchar_t/4.cc: Likewise.\n\t* testsuite/21_strings/basic_string/cons/wchar_t/42261.cc: Likewise.\n\t* testsuite/21_strings/basic_string/cons/wchar_t/5.cc: Likewise.\n\t* testsuite/21_strings/basic_string/cons/wchar_t/6.cc: Likewise.\n\t* testsuite/21_strings/basic_string/cons/wchar_t/7.cc: Likewise.\n\t* testsuite/21_strings/basic_string/cons/wchar_t/8.cc: Likewise.\n\t* testsuite/21_strings/basic_string/cons/wchar_t/moveable.cc: Likewise.\n\t* testsuite/21_strings/basic_string/cons/wchar_t/moveable2.cc:\n\tLikewise.\n\t* testsuite/21_strings/basic_string/element_access/char/1.cc: Likewise.\n\t* testsuite/21_strings/basic_string/element_access/char/2.cc: Likewise.\n\t* testsuite/21_strings/basic_string/element_access/char/3.cc: Likewise.\n\t* testsuite/21_strings/basic_string/element_access/char/4.cc: Likewise.\n\t* testsuite/21_strings/basic_string/element_access/char/58163.cc:\n\tLikewise.\n\t* testsuite/21_strings/basic_string/element_access/char/empty.cc:\n\tLikewise.\n\t* testsuite/21_strings/basic_string/element_access/char/front_back.cc:\n\tLikewise.\n\t* testsuite/21_strings/basic_string/element_access/wchar_t/1.cc:\n\tLikewise.\n\t* testsuite/21_strings/basic_string/element_access/wchar_t/2.cc:\n\tLikewise.\n\t* testsuite/21_strings/basic_string/element_access/wchar_t/3.cc:\n\tLikewise.\n\t* testsuite/21_strings/basic_string/element_access/wchar_t/4.cc:\n\tLikewise.\n\t* testsuite/21_strings/basic_string/element_access/wchar_t/58163.cc:\n\tLikewise.\n\t* testsuite/21_strings/basic_string/element_access/wchar_t/empty.cc:\n\tLikewise.\n\t* testsuite/21_strings/basic_string/element_access/wchar_t/\n\tfront_back.cc: Likewise.\n\t* testsuite/21_strings/basic_string/init-list.cc: Likewise.\n\t* testsuite/21_strings/basic_string/inserters_extractors/char/1.cc:\n\tLikewise.\n\t* testsuite/21_strings/basic_string/inserters_extractors/char/10.cc:\n\tLikewise.\n\t* testsuite/21_strings/basic_string/inserters_extractors/char/11.cc:\n\tLikewise.\n\t* testsuite/21_strings/basic_string/inserters_extractors/char/\n\t28277.cc: Likewise.\n\t* testsuite/21_strings/basic_string/inserters_extractors/char/4.cc:\n\tLikewise.\n\t* testsuite/21_strings/basic_string/inserters_extractors/char/5.cc:\n\tLikewise.\n\t* testsuite/21_strings/basic_string/inserters_extractors/char/6.cc:\n\tLikewise.\n\t* testsuite/21_strings/basic_string/inserters_extractors/char/7.cc:\n\tLikewise.\n\t* testsuite/21_strings/basic_string/inserters_extractors/char/8.cc:\n\tLikewise.\n\t* testsuite/21_strings/basic_string/inserters_extractors/char/9.cc:\n\tLikewise.\n\t* testsuite/21_strings/basic_string/inserters_extractors/pod/\n\t10081-in.cc: Likewise.\n\t* testsuite/21_strings/basic_string/inserters_extractors/pod/\n\t10081-out.cc: Likewise.\n\t* testsuite/21_strings/basic_string/inserters_extractors/wchar_t/1.cc:\n\tLikewise.\n\t* testsuite/21_strings/basic_string/inserters_extractors/wchar_t/\n\t10.cc: Likewise.\n\t* testsuite/21_strings/basic_string/inserters_extractors/wchar_t/\n\t11.cc: Likewise.\n\t* testsuite/21_strings/basic_string/inserters_extractors/wchar_t/\n\t28277.cc: Likewise.\n\t* testsuite/21_strings/basic_string/inserters_extractors/wchar_t/4.cc:\n\tLikewise.\n\t* testsuite/21_strings/basic_string/inserters_extractors/wchar_t/5.cc:\n\tLikewise.\n\t* testsuite/21_strings/basic_string/inserters_extractors/wchar_t/6.cc:\n\tLikewise.\n\t* testsuite/21_strings/basic_string/inserters_extractors/wchar_t/7.cc:\n\tLikewise.\n\t* testsuite/21_strings/basic_string/inserters_extractors/wchar_t/8.cc:\n\tLikewise.\n\t* testsuite/21_strings/basic_string/inserters_extractors/wchar_t/9.cc:\n\tLikewise.\n\t* testsuite/21_strings/basic_string/modifiers/append/char/1.cc:\n\tLikewise.\n\t* testsuite/21_strings/basic_string/modifiers/append/char/2.cc:\n\tLikewise.\n\t* testsuite/21_strings/basic_string/modifiers/append/char/3.cc:\n\tLikewise.\n\t* testsuite/21_strings/basic_string/modifiers/append/char/4.cc:\n\tLikewise.\n\t* testsuite/21_strings/basic_string/modifiers/append/wchar_t/1.cc:\n\tLikewise.\n\t* testsuite/21_strings/basic_string/modifiers/append/wchar_t/2.cc:\n\tLikewise.\n\t* testsuite/21_strings/basic_string/modifiers/append/wchar_t/3.cc:\n\tLikewise.\n\t* testsuite/21_strings/basic_string/modifiers/append/wchar_t/4.cc:\n\tLikewise.\n\t* testsuite/21_strings/basic_string/modifiers/assign/char/1.cc:\n\tLikewise.\n\t* testsuite/21_strings/basic_string/modifiers/assign/char/2.cc:\n\tLikewise.\n\t* testsuite/21_strings/basic_string/modifiers/assign/char/3.cc:\n\tLikewise.\n\t* testsuite/21_strings/basic_string/modifiers/assign/char/4.cc:\n\tLikewise.\n\t* testsuite/21_strings/basic_string/modifiers/assign/char/\n\tmove_assign.cc: Likewise.\n\t* testsuite/21_strings/basic_string/modifiers/assign/wchar_t/1.cc:\n\tLikewise.\n\t* testsuite/21_strings/basic_string/modifiers/assign/wchar_t/2.cc:\n\tLikewise.\n\t* testsuite/21_strings/basic_string/modifiers/assign/wchar_t/3.cc:\n\tLikewise.\n\t* testsuite/21_strings/basic_string/modifiers/assign/wchar_t/4.cc:\n\tLikewise.\n\t* testsuite/21_strings/basic_string/modifiers/assign/wchar_t/\n\tmove_assign.cc: Likewise.\n\t* testsuite/21_strings/basic_string/modifiers/insert/char/1.cc:\n\tLikewise.\n\t* testsuite/21_strings/basic_string/modifiers/insert/char/2.cc:\n\tLikewise.\n\t* testsuite/21_strings/basic_string/modifiers/insert/char/3.cc:\n\tLikewise.\n\t* testsuite/21_strings/basic_string/modifiers/insert/wchar_t/1.cc:\n\tLikewise.\n\t* testsuite/21_strings/basic_string/modifiers/insert/wchar_t/2.cc:\n\tLikewise.\n\t* testsuite/21_strings/basic_string/modifiers/insert/wchar_t/3.cc:\n\tLikewise.\n\t* testsuite/21_strings/basic_string/modifiers/pop_back/char/1.cc:\n\tLikewise.\n\t* testsuite/21_strings/basic_string/modifiers/pop_back/wchar_t/1.cc:\n\tLikewise.\n\t* testsuite/21_strings/basic_string/modifiers/replace/char/1.cc:\n\tLikewise.\n\t* testsuite/21_strings/basic_string/modifiers/replace/char/2.cc:\n\tLikewise.\n\t* testsuite/21_strings/basic_string/modifiers/replace/char/3.cc:\n\tLikewise.\n\t* testsuite/21_strings/basic_string/modifiers/replace/char/4.cc:\n\tLikewise.\n\t* testsuite/21_strings/basic_string/modifiers/replace/char/5.cc:\n\tLikewise.\n\t* testsuite/21_strings/basic_string/modifiers/replace/char/6.cc:\n\tLikewise.\n\t* testsuite/21_strings/basic_string/modifiers/replace/char/7.cc:\n\tLikewise.\n\t* testsuite/21_strings/basic_string/modifiers/replace/wchar_t/1.cc:\n\tLikewise.\n\t* testsuite/21_strings/basic_string/modifiers/replace/wchar_t/2.cc:\n\tLikewise.\n\t* testsuite/21_strings/basic_string/modifiers/replace/wchar_t/3.cc:\n\tLikewise.\n\t* testsuite/21_strings/basic_string/modifiers/replace/wchar_t/4.cc:\n\tLikewise.\n\t* testsuite/21_strings/basic_string/modifiers/replace/wchar_t/5.cc:\n\tLikewise.\n\t* testsuite/21_strings/basic_string/modifiers/replace/wchar_t/6.cc:\n\tLikewise.\n\t* testsuite/21_strings/basic_string/modifiers/replace/wchar_t/7.cc:\n\tLikewise.\n\t* testsuite/21_strings/basic_string/numeric_conversions/char/dr1261.cc:\n\tLikewise.\n\t* testsuite/21_strings/basic_string/numeric_conversions/char/stod.cc:\n\tLikewise.\n\t* testsuite/21_strings/basic_string/numeric_conversions/char/stof.cc:\n\tLikewise.\n\t* testsuite/21_strings/basic_string/numeric_conversions/char/stoi.cc:\n\tLikewise.\n\t* testsuite/21_strings/basic_string/numeric_conversions/char/stol.cc:\n\tLikewise.\n\t* testsuite/21_strings/basic_string/numeric_conversions/char/stold.cc:\n\tLikewise.\n\t* testsuite/21_strings/basic_string/numeric_conversions/char/stoll.cc:\n\tLikewise.\n\t* testsuite/21_strings/basic_string/numeric_conversions/char/stoul.cc:\n\tLikewise.\n\t* testsuite/21_strings/basic_string/numeric_conversions/char/\n\tstoull.cc: Likewise.\n\t* testsuite/21_strings/basic_string/numeric_conversions/char/\n\tto_string.cc: Likewise.\n\t* testsuite/21_strings/basic_string/numeric_conversions/wchar_t/\n\tdr1261.cc: Likewise.\n\t* testsuite/21_strings/basic_string/numeric_conversions/wchar_t/\n\tstod.cc: Likewise.\n\t* testsuite/21_strings/basic_string/numeric_conversions/wchar_t/\n\tstof.cc: Likewise.\n\t* testsuite/21_strings/basic_string/numeric_conversions/wchar_t/\n\tstoi.cc: Likewise.\n\t* testsuite/21_strings/basic_string/numeric_conversions/wchar_t/\n\tstol.cc: Likewise.\n\t* testsuite/21_strings/basic_string/numeric_conversions/wchar_t/\n\tstold.cc: Likewise.\n\t* testsuite/21_strings/basic_string/numeric_conversions/wchar_t/\n\tstoll.cc: Likewise.\n\t* testsuite/21_strings/basic_string/numeric_conversions/wchar_t/\n\tstoul.cc: Likewise.\n\t* testsuite/21_strings/basic_string/numeric_conversions/wchar_t/\n\tstoull.cc: Likewise.\n\t* testsuite/21_strings/basic_string/numeric_conversions/wchar_t/\n\tto_wstring.cc: Likewise.\n\t* testsuite/21_strings/basic_string/operations/compare/char/1.cc:\n\tLikewise.\n\t* testsuite/21_strings/basic_string/operations/compare/char/13650.cc:\n\tLikewise.\n\t* testsuite/21_strings/basic_string/operations/compare/char/2.cc:\n\tLikewise.\n\t* testsuite/21_strings/basic_string/operations/compare/wchar_t/1.cc:\n\tLikewise.\n\t* testsuite/21_strings/basic_string/operations/compare/wchar_t/\n\t13650.cc: Likewise.\n\t* testsuite/21_strings/basic_string/operations/compare/wchar_t/2.cc:\n\tLikewise.\n\t* testsuite/21_strings/basic_string/operations/data/char/1.cc:\n\tLikewise.\n\t* testsuite/21_strings/basic_string/operations/data/wchar_t/1.cc:\n\tLikewise.\n\t* testsuite/21_strings/basic_string/operations/find/char/1.cc:\n\tLikewise.\n\t* testsuite/21_strings/basic_string/operations/find/char/2.cc:\n\tLikewise.\n\t* testsuite/21_strings/basic_string/operations/find/char/3.cc:\n\tLikewise.\n\t* testsuite/21_strings/basic_string/operations/find/char/4.cc:\n\tLikewise.\n\t* testsuite/21_strings/basic_string/operations/find/char/5.cc:\n\tLikewise.\n\t* testsuite/21_strings/basic_string/operations/find/wchar_t/1.cc:\n\tLikewise.\n\t* testsuite/21_strings/basic_string/operations/find/wchar_t/2.cc:\n\tLikewise.\n\t* testsuite/21_strings/basic_string/operations/find/wchar_t/3.cc:\n\tLikewise.\n\t* testsuite/21_strings/basic_string/operations/find/wchar_t/4.cc:\n\tLikewise.\n\t* testsuite/21_strings/basic_string/operations/find/wchar_t/5.cc:\n\tLikewise.\n\t* testsuite/21_strings/basic_string/operations/rfind/char/1.cc:\n\tLikewise.\n\t* testsuite/21_strings/basic_string/operations/rfind/char/2.cc:\n\tLikewise.\n\t* testsuite/21_strings/basic_string/operations/rfind/char/3.cc:\n\tLikewise.\n\t* testsuite/21_strings/basic_string/operations/rfind/wchar_t/1.cc:\n\tLikewise.\n\t* testsuite/21_strings/basic_string/operations/rfind/wchar_t/2.cc:\n\tLikewise.\n\t* testsuite/21_strings/basic_string/operations/rfind/wchar_t/3.cc:\n\tLikewise.\n\t* testsuite/21_strings/basic_string/operations/substr/char/1.cc:\n\tLikewise.\n\t* testsuite/21_strings/basic_string/operations/substr/wchar_t/\n\t1.cc: Likewise.\n\t* testsuite/21_strings/basic_string/operators/char/1.cc: Likewise.\n\t* testsuite/21_strings/basic_string/operators/char/2.cc: Likewise.\n\t* testsuite/21_strings/basic_string/operators/char/3.cc: Likewise.\n\t* testsuite/21_strings/basic_string/operators/char/4.cc: Likewise.\n\t* testsuite/21_strings/basic_string/operators/char/5.cc: Likewise.\n\t* testsuite/21_strings/basic_string/operators/wchar_t/1.cc: Likewise.\n\t* testsuite/21_strings/basic_string/operators/wchar_t/2.cc: Likewise.\n\t* testsuite/21_strings/basic_string/operators/wchar_t/3.cc: Likewise.\n\t* testsuite/21_strings/basic_string/operators/wchar_t/4.cc: Likewise.\n\t* testsuite/21_strings/basic_string/operators/wchar_t/5.cc: Likewise.\n\t* testsuite/21_strings/basic_string_view/capacity/1.cc: Likewise.\n\t* testsuite/21_strings/basic_string_view/cons/char/1.cc: Likewise.\n\t* testsuite/21_strings/basic_string_view/cons/char/2.cc: Likewise.\n\t* testsuite/21_strings/basic_string_view/cons/char/3.cc: Likewise.\n\t* testsuite/21_strings/basic_string_view/cons/wchar_t/1.cc: Likewise.\n\t* testsuite/21_strings/basic_string_view/cons/wchar_t/2.cc: Likewise.\n\t* testsuite/21_strings/basic_string_view/cons/wchar_t/3.cc: Likewise.\n\t* testsuite/21_strings/basic_string_view/element_access/char/\n\t1.cc: Likewise.\n\t* testsuite/21_strings/basic_string_view/element_access/char/\n\tempty.cc: Likewise.\n\t* testsuite/21_strings/basic_string_view/element_access/char/\n\tfront_back.cc: Likewise.\n\t* testsuite/21_strings/basic_string_view/element_access/wchar_t/\n\t1.cc: Likewise.\n\t* testsuite/21_strings/basic_string_view/element_access/wchar_t/\n\tempty.cc: Likewise.\n\t* testsuite/21_strings/basic_string_view/element_access/wchar_t/\n\tfront_back.cc: Likewise.\n\t* testsuite/21_strings/basic_string_view/inserters/char/1.cc: Likewise.\n\t* testsuite/21_strings/basic_string_view/inserters/char/2.cc: Likewise.\n\t* testsuite/21_strings/basic_string_view/inserters/char/3.cc: Likewise.\n\t* testsuite/21_strings/basic_string_view/inserters/pod/10081-out.cc:\n\tLikewise.\n\t* testsuite/21_strings/basic_string_view/inserters/wchar_t/1.cc:\n\tLikewise.\n\t* testsuite/21_strings/basic_string_view/inserters/wchar_t/2.cc:\n\tLikewise.\n\t* testsuite/21_strings/basic_string_view/inserters/wchar_t/3.cc:\n\tLikewise.\n\t* testsuite/21_strings/basic_string_view/modifiers/remove_prefix/\n\tchar/1.cc: Likewise.\n\t* testsuite/21_strings/basic_string_view/modifiers/remove_prefix/\n\twchar_t/1.cc: Likewise.\n\t* testsuite/21_strings/basic_string_view/modifiers/remove_suffix/\n\tchar/1.cc: Likewise.\n\t* testsuite/21_strings/basic_string_view/modifiers/remove_suffix/\n\twchar_t/1.cc: Likewise.\n\t* testsuite/21_strings/basic_string_view/operations/compare/char/\n\t1.cc: Likewise.\n\t* testsuite/21_strings/basic_string_view/operations/compare/char/\n\t13650.cc: Likewise.\n\t* testsuite/21_strings/basic_string_view/operations/compare/wchar_t/\n\t1.cc: Likewise.\n\t* testsuite/21_strings/basic_string_view/operations/compare/wchar_t/\n\t13650.cc: Likewise.\n\t* testsuite/21_strings/basic_string_view/operations/copy/char/1.cc:\n\tLikewise.\n\t* testsuite/21_strings/basic_string_view/operations/copy/wchar_t/1.cc:\n\tLikewise.\n\t* testsuite/21_strings/basic_string_view/operations/data/char/1.cc:\n\tLikewise.\n\t* testsuite/21_strings/basic_string_view/operations/data/wchar_t/1.cc:\n\tLikewise.\n\t* testsuite/21_strings/basic_string_view/operations/find/char/1.cc:\n\tLikewise.\n\t* testsuite/21_strings/basic_string_view/operations/find/char/2.cc:\n\tLikewise.\n\t* testsuite/21_strings/basic_string_view/operations/find/char/3.cc:\n\tLikewise.\n\t* testsuite/21_strings/basic_string_view/operations/find/char/4.cc:\n\tLikewise.\n\t* testsuite/21_strings/basic_string_view/operations/find/wchar_t/\n\t1.cc: Likewise.\n\t* testsuite/21_strings/basic_string_view/operations/find/wchar_t/\n\t2.cc: Likewise.\n\t* testsuite/21_strings/basic_string_view/operations/find/wchar_t/\n\t3.cc: Likewise.\n\t* testsuite/21_strings/basic_string_view/operations/find/wchar_t/\n\t4.cc: Likewise.\n\t* testsuite/21_strings/basic_string_view/operations/rfind/char/\n\t1.cc: Likewise.\n\t* testsuite/21_strings/basic_string_view/operations/rfind/char/\n\t2.cc: Likewise.\n\t* testsuite/21_strings/basic_string_view/operations/rfind/char/\n\t3.cc: Likewise.\n\t* testsuite/21_strings/basic_string_view/operations/rfind/wchar_t/\n\t1.cc: Likewise.\n\t* testsuite/21_strings/basic_string_view/operations/rfind/wchar_t/\n\t2.cc: Likewise.\n\t* testsuite/21_strings/basic_string_view/operations/rfind/wchar_t/\n\t3.cc: Likewise.\n\t* testsuite/21_strings/basic_string_view/operations/string_conversion/\n\t1.cc: Likewise.\n\t* testsuite/21_strings/basic_string_view/operations/substr/char/\n\t1.cc: Likewise.\n\t* testsuite/21_strings/basic_string_view/operations/substr/wchar_t/\n\t1.cc: Likewise.\n\t* testsuite/21_strings/basic_string_view/operators/char/2.cc:\n\tLikewise.\n\t* testsuite/21_strings/basic_string_view/operators/wchar_t/2.cc:\n\tLikewise.\n\t* testsuite/21_strings/c_strings/char/1.cc: Likewise.\n\t* testsuite/21_strings/c_strings/wchar_t/1.cc: Likewise.\n\t* testsuite/21_strings/char_traits/requirements/char/1.cc: Likewise.\n\t* testsuite/21_strings/char_traits/requirements/char/57704.cc:\n\tLikewise.\n\t* testsuite/21_strings/char_traits/requirements/short/1.cc: Likewise.\n\t* testsuite/21_strings/char_traits/requirements/wchar_t/1.cc: Likewise.\n\n\t* doc/xml/manual/test.xml: Fix typo.\n\nFrom-SVN: r241069", "tree": {"sha": "fa542b24c6a94bf4e6c405490d4ee11aa7a8a204", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fa542b24c6a94bf4e6c405490d4ee11aa7a8a204"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/118c8424411e7a9a250bdf7ea7ac1975ffe31477", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/118c8424411e7a9a250bdf7ea7ac1975ffe31477", "html_url": "https://github.com/Rust-GCC/gccrs/commit/118c8424411e7a9a250bdf7ea7ac1975ffe31477", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/118c8424411e7a9a250bdf7ea7ac1975ffe31477/comments", "author": null, "committer": null, "parents": [{"sha": "543f217b7aea9a8cdc3b669c5ce7d56a1e944257", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/543f217b7aea9a8cdc3b669c5ce7d56a1e944257", "html_url": "https://github.com/Rust-GCC/gccrs/commit/543f217b7aea9a8cdc3b669c5ce7d56a1e944257"}], "stats": {"total": 1361, "additions": 174, "deletions": 1187}, "files": [{"sha": "a1781e52ddf667f082f3a1461b284300bff29f6b", "filename": "libstdc++-v3/doc/xml/manual/test.xml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Ftest.xml", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Ftest.xml", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Ftest.xml?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -564,7 +564,7 @@ cat 27_io/objects/char/3_xin.in | a.out</programlisting>\n       <command>make</command>, or via options for the DejaGnu test framework\n       (described below). The latter approach uses the\n       <option>--target_board</option> option that was shown earlier.\n-      For example, to run the tests with <option>-O1 -D_GLIBCXX_ASSERT</option>\n+      For example, to run the tests with <option>-O1 -D_GLIBCXX_ASSERTIONS</option>\n       you could use:\n <programlisting>    make RUNTESTFLAGS=--target_board=unix/-O1/-D_GLIBCXX_ASSERTIONS</programlisting>\n     </para>"}, {"sha": "cf7f0f7411e5e3ae421ed7e2353080f143d9150e", "filename": "libstdc++-v3/scripts/testsuite_flags.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Fscripts%2Ftestsuite_flags.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Fscripts%2Ftestsuite_flags.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fscripts%2Ftestsuite_flags.in?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -56,7 +56,7 @@ case ${query} in\n       echo ${CC}\n       ;;\n     --cxxflags)\n-      CXXFLAGS_default=\"-D_GLIBCXX_ASSERT -fmessage-length=0 -fno-show-column\"\n+      CXXFLAGS_default=\"-fmessage-length=0 -fno-show-column\"\n       CXXFLAGS_config=\"@SECTION_FLAGS@ @EXTRA_CXX_FLAGS@\"\n       echo ${CXXFLAGS_default} ${CXXFLAGS_config} \n       ;;"}, {"sha": "88c87ee8ad527f5d8ea69f5f0ee2629d9038b538", "filename": "libstdc++-v3/testsuite/18_support/50594.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F18_support%2F50594.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F18_support%2F50594.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F18_support%2F50594.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -56,8 +56,6 @@ void operator delete(void* p)\n // libstdc++/50594\n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   {\n     std::string s = \"Hello World, this is not a small string.\";\n   }"}, {"sha": "c12852bf0b8797895faf591f8e23422535357f15", "filename": "libstdc++-v3/testsuite/18_support/bad_alloc/what.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F18_support%2Fbad_alloc%2Fwhat.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F18_support%2Fbad_alloc%2Fwhat.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F18_support%2Fbad_alloc%2Fwhat.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -26,7 +26,6 @@\n // libstdc++/14493\n void test01() \n {\n-  bool test __attribute__((unused)) = true;\n   using namespace std;\n \n   bad_alloc ba;"}, {"sha": "b960660955caef28eb1a5a9a78837ccf90558ce1", "filename": "libstdc++-v3/testsuite/18_support/bad_cast/what.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F18_support%2Fbad_cast%2Fwhat.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F18_support%2Fbad_cast%2Fwhat.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F18_support%2Fbad_cast%2Fwhat.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -26,7 +26,6 @@\n // libstdc++/14493\n void test01() \n {\n-  bool test __attribute__((unused)) = true;\n   using namespace std;\n \n   bad_cast bc;"}, {"sha": "28df237a743a0fb46ca5ac9ce2380d7025305bb8", "filename": "libstdc++-v3/testsuite/18_support/bad_exception/what.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F18_support%2Fbad_exception%2Fwhat.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F18_support%2Fbad_exception%2Fwhat.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F18_support%2Fbad_exception%2Fwhat.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -26,7 +26,6 @@\n // libstdc++/14493\n void test01() \n {\n-  bool test __attribute__((unused)) = true;\n   using namespace std;\n \n   bad_exception be;"}, {"sha": "633175b2440877c91538393aad88062abae36dae", "filename": "libstdc++-v3/testsuite/18_support/bad_typeid/what.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F18_support%2Fbad_typeid%2Fwhat.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F18_support%2Fbad_typeid%2Fwhat.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F18_support%2Fbad_typeid%2Fwhat.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -26,7 +26,6 @@\n // libstdc++/14493\n void test01() \n {\n-  bool test __attribute__((unused)) = true;\n   using namespace std;\n \n   bad_typeid bt;"}, {"sha": "926c47d04dd475963a39712db46ef70b4e766642", "filename": "libstdc++-v3/testsuite/18_support/exception/38732.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F18_support%2Fexception%2F38732.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F18_support%2Fexception%2F38732.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F18_support%2Fexception%2F38732.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -61,7 +61,6 @@ extern \"C\" __cxa_eh_globals *__cxa_get_globals () throw();\n // PR libstdc++/38732\n void test01 ()\n {\n-  bool test __attribute__((unused)) = true;\n   try {\n     throw 0;\n   } catch(...) {"}, {"sha": "334923de1ae500723db033ecaadcff1ce0ecbce1", "filename": "libstdc++-v3/testsuite/18_support/exception/what.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F18_support%2Fexception%2Fwhat.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F18_support%2Fexception%2Fwhat.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F18_support%2Fexception%2Fwhat.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -26,7 +26,6 @@\n // libstdc++/14493\n void test01() \n {\n-  bool test __attribute__((unused)) = true;\n   using namespace std;\n \n   exception e;"}, {"sha": "c1e9a05943f7a74f57fb15e8b0d2d3640a35311b", "filename": "libstdc++-v3/testsuite/18_support/exception_ptr/64241.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F18_support%2Fexception_ptr%2F64241.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F18_support%2Fexception_ptr%2F64241.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F18_support%2Fexception_ptr%2F64241.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -25,7 +25,7 @@\n void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n+  bool test = true;\n   {\n     // Put some non-zero bytes on the stack\n     void* p __attribute__((unused)) = &test;"}, {"sha": "79459ebab60afbe2d7fe133b1ea3e162be0b644d", "filename": "libstdc++-v3/testsuite/18_support/exception_ptr/current_exception.cc", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F18_support%2Fexception_ptr%2Fcurrent_exception.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F18_support%2Fexception_ptr%2Fcurrent_exception.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F18_support%2Fexception_ptr%2Fcurrent_exception.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -27,7 +27,6 @@\n \n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n   using namespace std;\n \n   exception_ptr ep = current_exception();\n@@ -36,7 +35,6 @@ void test01()\n \n void test02()\n {\n-  bool test __attribute__((unused)) = true;\n   using namespace std;\n \n   try {\n@@ -49,7 +47,6 @@ void test02()\n \n void test03()\n {\n-  bool test __attribute__((unused)) = true;\n   using namespace std;\n \n   try {\n@@ -62,7 +59,6 @@ void test03()\n \n void test04()\n {\n-  bool test __attribute__((unused)) = true;\n   using namespace std;\n \n   try {"}, {"sha": "ada652e7436079f585ecc40f84ab07c400625d82", "filename": "libstdc++-v3/testsuite/18_support/exception_ptr/lifespan.cc", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F18_support%2Fexception_ptr%2Flifespan.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F18_support%2Fexception_ptr%2Flifespan.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F18_support%2Fexception_ptr%2Flifespan.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -39,7 +39,6 @@ class destructing\n \n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n   using namespace std;\n \n   may_destruct = false;\n@@ -56,7 +55,6 @@ void test01()\n \n void test02()\n {\n-  bool test __attribute__((unused)) = true;\n   using namespace std;\n \n   may_destruct = false;\n@@ -71,7 +69,6 @@ void test02()\n \n void test03()\n {\n-  bool test __attribute__((unused)) = true;\n   using namespace std;\n \n   may_destruct = false;\n@@ -89,7 +86,6 @@ void test03()\n \n void test04()\n {\n-  bool test __attribute__((unused)) = true;\n   using namespace std;\n \n   may_destruct = false;\n@@ -119,7 +115,6 @@ void test05_helper()\n \n void test05()\n {\n-  bool test __attribute__((unused)) = true;\n   using namespace std;\n \n   may_destruct = false;\n@@ -145,7 +140,6 @@ void test06_helper()\n \n void test06()\n {\n-  bool test __attribute__((unused)) = true;\n   using namespace std;\n \n   may_destruct = false;\n@@ -165,7 +159,6 @@ std::exception_ptr gep;\n \n void test99()\n {\n-  bool test __attribute__((unused)) = true;\n   using namespace std;\n \n   may_destruct = false;"}, {"sha": "b9ded3589f0fab184184c4c9ab08aa7ab6366671", "filename": "libstdc++-v3/testsuite/18_support/exception_ptr/make_exception_ptr.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F18_support%2Fexception_ptr%2Fmake_exception_ptr.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F18_support%2Fexception_ptr%2Fmake_exception_ptr.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F18_support%2Fexception_ptr%2Fmake_exception_ptr.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -23,8 +23,6 @@\n \n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::exception_ptr p = std::make_exception_ptr(0);\n \n   VERIFY( !(p == 0) );"}, {"sha": "567af32e947244f832aeb312b308bebd9d02d0ae", "filename": "libstdc++-v3/testsuite/18_support/exception_ptr/rethrow_exception.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F18_support%2Fexception_ptr%2Frethrow_exception.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F18_support%2Fexception_ptr%2Frethrow_exception.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F18_support%2Fexception_ptr%2Frethrow_exception.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -40,7 +40,6 @@ void test01()\n \n void test02()\n {\n-  bool test __attribute__((unused)) = true;\n   using namespace std;\n \n   try {"}, {"sha": "af6f90c56f691c52fbdcc12c440dc18d6a2c3f98", "filename": "libstdc++-v3/testsuite/18_support/nested_exception/cons.cc", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F18_support%2Fnested_exception%2Fcons.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F18_support%2Fnested_exception%2Fcons.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F18_support%2Fnested_exception%2Fcons.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -23,17 +23,13 @@\n \n void test01() \n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::nested_exception e;\n \n   VERIFY( e.nested_ptr() == 0 );\n }\n \n void test02() \n {\n-  bool test __attribute__((unused)) = true;\n-\n   try\n   {\n     throw 42;"}, {"sha": "467d371846f82c852be922c3d4a4b7a2b592f714", "filename": "libstdc++-v3/testsuite/18_support/nested_exception/nested_ptr.cc", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F18_support%2Fnested_exception%2Fnested_ptr.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F18_support%2Fnested_exception%2Fnested_ptr.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F18_support%2Fnested_exception%2Fnested_ptr.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -23,8 +23,6 @@\n \n void test01() \n {\n-  bool test __attribute__((unused)) = true;\n-\n   try\n   {\n     throw std::nested_exception();\n@@ -37,8 +35,6 @@ void test01()\n \n void test02() \n {\n-  bool test __attribute__((unused)) = true;\n-\n   try\n   {\n     throw 42;"}, {"sha": "b0420846a2b29dd443a64ad1617e71f4658387d5", "filename": "libstdc++-v3/testsuite/18_support/nested_exception/rethrow_if_nested.cc", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F18_support%2Fnested_exception%2Frethrow_if_nested.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F18_support%2Fnested_exception%2Frethrow_if_nested.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F18_support%2Fnested_exception%2Frethrow_if_nested.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -30,7 +30,7 @@ struct derived2 : base, std::nested_exception { };\n \n void test01() \n {\n-  bool test __attribute__((unused)) = false;\n+  bool test = false;\n \n   try\n   {\n@@ -55,7 +55,7 @@ void test01()\n \n void test02() \n {\n-  bool test __attribute__((unused)) = false;\n+  bool test = false;\n \n   try\n   {\n@@ -72,7 +72,7 @@ void test02()\n \n void test03() \n {\n-  bool test __attribute__((unused)) = false;\n+  bool test = false;\n \n   try\n   {"}, {"sha": "fd374e530e028ce1108d70e480fa4e92fe44afde", "filename": "libstdc++-v3/testsuite/18_support/nested_exception/rethrow_nested.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F18_support%2Fnested_exception%2Frethrow_nested.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F18_support%2Fnested_exception%2Frethrow_nested.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F18_support%2Fnested_exception%2Frethrow_nested.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -23,7 +23,7 @@\n \n void test01() \n {\n-  bool test __attribute__((unused)) = false;\n+  bool test = false;\n \n   try\n   {"}, {"sha": "f768b1e516602b37f9d9333f54e12c2427150492", "filename": "libstdc++-v3/testsuite/18_support/nested_exception/throw_with_nested.cc", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F18_support%2Fnested_exception%2Fthrow_with_nested.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F18_support%2Fnested_exception%2Fthrow_with_nested.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F18_support%2Fnested_exception%2Fthrow_with_nested.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -30,7 +30,7 @@ struct uninheritable final { };\n \n void test01() \n {\n-  bool test __attribute__((unused)) = false;\n+  bool test = false;\n \n   try\n   {\n@@ -53,7 +53,7 @@ void test01()\n \n void test02() \n {\n-  bool test __attribute__((unused)) = false;\n+  bool test = false;\n \n   try\n   {\n@@ -76,7 +76,7 @@ void test02()\n \n void test03()\n {\n-  bool test __attribute__((unused)) = false;\n+  bool test = false;\n \n   try\n   {"}, {"sha": "9e3aadb6f5388e143f116bb25882c76d7b2f5998", "filename": "libstdc++-v3/testsuite/18_support/numeric_limits/char16_32_t.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F18_support%2Fnumeric_limits%2Fchar16_32_t.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F18_support%2Fnumeric_limits%2Fchar16_32_t.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F18_support%2Fnumeric_limits%2Fchar16_32_t.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -31,8 +31,6 @@ template<typename T, typename R>\n   void\n   do_test()\n   {\n-    bool test __attribute__((unused)) = true;\n-\n     typedef std::numeric_limits<T> char_type;\n     typedef std::numeric_limits<R> impl_type;\n "}, {"sha": "aa2ec00f6ad173638a9fbdb254333a9ca12d0e82", "filename": "libstdc++-v3/testsuite/18_support/numeric_limits/digits10.cc", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F18_support%2Fnumeric_limits%2Fdigits10.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F18_support%2Fnumeric_limits%2Fdigits10.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F18_support%2Fnumeric_limits%2Fdigits10.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -28,10 +28,8 @@\n #include <testsuite_hooks.h>\n \n // libstdc++/5045\n-bool test03()\n+void test03()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   VERIFY( std::numeric_limits<bool>::digits10 == 0 );\n   if (__CHAR_BIT__ == 8)\n     {\n@@ -53,7 +51,6 @@ bool test03()\n       VERIFY( std::numeric_limits<signed long long>::digits10 == 18 );\n       VERIFY( std::numeric_limits<unsigned long long>::digits10 == 19 );\n     }\n-  return test;\n }\n \n int main()"}, {"sha": "35ec411cfd0fa17f20333bf1a76c5645f7f08ddc", "filename": "libstdc++-v3/testsuite/18_support/numeric_limits/dr559.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F18_support%2Fnumeric_limits%2Fdr559.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F18_support%2Fnumeric_limits%2Fdr559.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F18_support%2Fnumeric_limits%2Fdr559.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -26,7 +26,6 @@\n template<typename T>\n   void do_test_aux()\n   {\n-    bool test __attribute__((unused)) = true;\n     typedef std::numeric_limits<T> cv_limits;\n     typedef std::numeric_limits<typename std::remove_cv<T>::type> limits;\n "}, {"sha": "c999fee8b0113e658fac72b95884f5ceca08c553", "filename": "libstdc++-v3/testsuite/18_support/numeric_limits/epsilon.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F18_support%2Fnumeric_limits%2Fepsilon.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F18_support%2Fnumeric_limits%2Fepsilon.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F18_support%2Fnumeric_limits%2Fepsilon.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -30,7 +30,6 @@\n template<typename T>\n void test_epsilon()\n {\n-  bool test __attribute__((unused)) = true;\n   T epsilon = std::numeric_limits<T>::epsilon();\n   T one = 1;\n "}, {"sha": "f6f5b675e3f4caa1c2e7ccdf8ae8f687a0d0db95", "filename": "libstdc++-v3/testsuite/18_support/numeric_limits/is_iec559.cc", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F18_support%2Fnumeric_limits%2Fis_iec559.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F18_support%2Fnumeric_limits%2Fis_iec559.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F18_support%2Fnumeric_limits%2Fis_iec559.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -52,10 +52,8 @@ test_is_iec559()\n }\n \n // libstdc++/8949\n-bool test04()\n+void test04()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   VERIFY( !std::numeric_limits<short>::is_iec559 );\n   VERIFY( !std::numeric_limits<unsigned short>::is_iec559 );\n   VERIFY( !std::numeric_limits<int>::is_iec559 );\n@@ -64,7 +62,6 @@ bool test04()\n   VERIFY( !std::numeric_limits<unsigned long>::is_iec559 );\n   VERIFY( !std::numeric_limits<long long>::is_iec559 );\n   VERIFY( !std::numeric_limits<unsigned long long>::is_iec559 );\n-  return test;\n }\n \n int main()"}, {"sha": "88face421c41ce14a829f8a6ee15ac67039a05b2", "filename": "libstdc++-v3/testsuite/18_support/numeric_limits/is_signed.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F18_support%2Fnumeric_limits%2Fis_signed.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F18_support%2Fnumeric_limits%2Fis_signed.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F18_support%2Fnumeric_limits%2Fis_signed.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -35,7 +35,6 @@\n \n void test_sign()\n {\n-  bool test __attribute__((unused)) = true;\n   VERIFY( std::numeric_limits<char>::is_signed == char_is_signed );\n   VERIFY( std::numeric_limits<signed char>::is_signed == true );\n   VERIFY( std::numeric_limits<unsigned char>::is_signed == false );"}, {"sha": "9001f31ac34f8b8a1c43dbf44d8db0d27f1cce28", "filename": "libstdc++-v3/testsuite/18_support/numeric_limits/lowest.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F18_support%2Fnumeric_limits%2Flowest.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F18_support%2Fnumeric_limits%2Flowest.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F18_support%2Fnumeric_limits%2Flowest.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -30,7 +30,6 @@ template<typename T>\n   void\n   do_test(std::true_type)\n   {\n-    bool test __attribute__((unused)) = true;\n     T limits_min = std::numeric_limits<T>::min();\n     VERIFY( std::numeric_limits<T>::lowest() == limits_min );\n   }\n@@ -39,7 +38,6 @@ template<typename T>\n   void\n   do_test(std::false_type)\n   {\n-    bool test __attribute__((unused)) = true;\n     T limits_max = std::numeric_limits<T>::max();\n     VERIFY( std::numeric_limits<T>::lowest() == -limits_max );\n   }"}, {"sha": "f6a511435089b260c17dc11f2d1b9661eca6edc9", "filename": "libstdc++-v3/testsuite/18_support/numeric_limits/max_digits10.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F18_support%2Fnumeric_limits%2Fmax_digits10.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F18_support%2Fnumeric_limits%2Fmax_digits10.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F18_support%2Fnumeric_limits%2Fmax_digits10.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -29,8 +29,6 @@\n void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   VERIFY( std::numeric_limits<bool>::max_digits10 == 0 );\n   VERIFY( std::numeric_limits<char>::max_digits10 == 0 );\n   VERIFY( std::numeric_limits<signed char>::max_digits10 == 0 );"}, {"sha": "2cdddedba5cc83e015eed1b0d7ef30dbf721cc50", "filename": "libstdc++-v3/testsuite/18_support/numeric_limits/min_max.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F18_support%2Fnumeric_limits%2Fmin_max.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F18_support%2Fnumeric_limits%2Fmin_max.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F18_support%2Fnumeric_limits%2Fmin_max.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -61,7 +61,6 @@ DEFINE_EXTREMA(long double, LDBL_MIN, LDBL_MAX);\n template<typename T>\n void test_extrema()\n {\n-  bool test __attribute__((unused)) = true;\n   T limits_min = std::numeric_limits<T>::min();\n   T limits_max = std::numeric_limits<T>::max();\n   T extrema_min = extrema<T>::min;"}, {"sha": "04ba194f4c1e1139247837cd8815f6d60b51a046", "filename": "libstdc++-v3/testsuite/18_support/numeric_limits/specialization_default_values.cc", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F18_support%2Fnumeric_limits%2Fspecialization_default_values.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F18_support%2Fnumeric_limits%2Fspecialization_default_values.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F18_support%2Fnumeric_limits%2Fspecialization_default_values.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -43,9 +43,8 @@ struct B\n };\n \n \n-bool test01()\n+void test01()\n {\n-  bool test __attribute__((unused)) = true;\n   std::numeric_limits< A<B> > obj;\n \n   VERIFY( !obj.is_specialized );\n@@ -78,7 +77,6 @@ bool test01()\n   VERIFY( !obj.traps );\n   VERIFY( !obj.tinyness_before );\n   VERIFY( obj.round_style == std::round_toward_zero );\n-  return test;\n }\n \n // test linkage of the generic bits"}, {"sha": "4bf3d2456bcd0e6d64a230eca3fadb8c2eade006", "filename": "libstdc++-v3/testsuite/18_support/type_info/hash_code.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F18_support%2Ftype_info%2Fhash_code.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F18_support%2Ftype_info%2Fhash_code.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F18_support%2Ftype_info%2Fhash_code.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -24,7 +24,6 @@\n \n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n   using namespace std;\n \n   class Abraca { };"}, {"sha": "c7b98ba88b36b457c9700fa8d34280617b58ca76", "filename": "libstdc++-v3/testsuite/19_diagnostics/error_category/cons/copy_neg.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F19_diagnostics%2Ferror_category%2Fcons%2Fcopy_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F19_diagnostics%2Ferror_category%2Fcons%2Fcopy_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F19_diagnostics%2Ferror_category%2Fcons%2Fcopy_neg.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -23,8 +23,6 @@\n \n int main()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   __gnu_test::test_category c1;\n   __gnu_test::test_category c2(c1); // { dg-error \"deleted\" }\n "}, {"sha": "d801a9662bf648c39b0b30ba7c1ada5a0b2e9c33", "filename": "libstdc++-v3/testsuite/19_diagnostics/error_category/cons/default.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F19_diagnostics%2Ferror_category%2Fcons%2Fdefault.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F19_diagnostics%2Ferror_category%2Fcons%2Fdefault.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F19_diagnostics%2Ferror_category%2Fcons%2Fdefault.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -23,8 +23,6 @@\n \n int main()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   // 1\n   __gnu_test::test_category c1;\n   __gnu_test::test_derived_category c2;"}, {"sha": "134c46a832e7e550ad9bd395ae90a8d85e538d79", "filename": "libstdc++-v3/testsuite/19_diagnostics/error_category/operators/equal.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F19_diagnostics%2Ferror_category%2Foperators%2Fequal.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F19_diagnostics%2Ferror_category%2Foperators%2Fequal.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F19_diagnostics%2Ferror_category%2Foperators%2Fequal.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -24,8 +24,6 @@\n \n int main()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   __gnu_test::test_category c1;\n   __gnu_test::test_derived_category c2;\n   VERIFY( c1 == c1 );"}, {"sha": "5c412e13e4be52b4d73fa7f5bca29038efc13b8d", "filename": "libstdc++-v3/testsuite/19_diagnostics/error_category/operators/not_equal.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F19_diagnostics%2Ferror_category%2Foperators%2Fnot_equal.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F19_diagnostics%2Ferror_category%2Foperators%2Fnot_equal.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F19_diagnostics%2Ferror_category%2Foperators%2Fnot_equal.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -23,8 +23,6 @@\n \n int main()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   __gnu_test::test_category c1;\n   __gnu_test::test_derived_category c2;\n   VERIFY( !(c1 != c1) );"}, {"sha": "ecddfb6f9a42de372a29d42a59d6d4e8223619b6", "filename": "libstdc++-v3/testsuite/19_diagnostics/error_code/cons/1.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F19_diagnostics%2Ferror_code%2Fcons%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F19_diagnostics%2Ferror_code%2Fcons%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F19_diagnostics%2Ferror_code%2Fcons%2F1.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -24,8 +24,6 @@\n \n int main()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   // 1\n   std::error_code e1;\n   VERIFY( e1.value() == 0 );"}, {"sha": "f441c213d353b2db55d3ce07d81c00346b3b10eb", "filename": "libstdc++-v3/testsuite/19_diagnostics/error_code/cons/39882.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F19_diagnostics%2Ferror_code%2Fcons%2F39882.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F19_diagnostics%2Ferror_code%2Fcons%2F39882.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F19_diagnostics%2Ferror_code%2Fcons%2F39882.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -47,8 +47,6 @@ namespace std\n // libstdc++/39882\n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::error_code ec1(my_err);\n   VERIFY( ec1 == make_error_code(my_err) );\n }"}, {"sha": "878aa216d683ea10dcbf004bf6bd109f6dab07f3", "filename": "libstdc++-v3/testsuite/19_diagnostics/error_code/modifiers/39882.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F19_diagnostics%2Ferror_code%2Fmodifiers%2F39882.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F19_diagnostics%2Ferror_code%2Fmodifiers%2F39882.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F19_diagnostics%2Ferror_code%2Fmodifiers%2F39882.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -47,8 +47,6 @@ namespace std\n // libstdc++/39882\n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::error_code ec2;\n   ec2 = my_err;\n   VERIFY( ec2 == make_error_code(my_err) );"}, {"sha": "a8949d8ec48df87294ecad1b69316574da565443", "filename": "libstdc++-v3/testsuite/19_diagnostics/error_code/operators/bool.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F19_diagnostics%2Ferror_code%2Foperators%2Fbool.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F19_diagnostics%2Ferror_code%2Foperators%2Fbool.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F19_diagnostics%2Ferror_code%2Foperators%2Fbool.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -25,8 +25,6 @@\n // unspecified bool operator positive tests\n int main()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   // 1\n   std::error_code e1;\n   if (static_cast<bool>(e1))"}, {"sha": "193a7ce45453cfa1d1360b74b337a55e5625ae8f", "filename": "libstdc++-v3/testsuite/19_diagnostics/error_code/operators/equal.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F19_diagnostics%2Ferror_code%2Foperators%2Fequal.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F19_diagnostics%2Ferror_code%2Foperators%2Fequal.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F19_diagnostics%2Ferror_code%2Foperators%2Fequal.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -25,8 +25,6 @@\n // unspecified bool operator positive tests\n int main()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::error_code e1;\n   std::error_code e2(std::make_error_code(std::errc::operation_not_supported));\n "}, {"sha": "544d126ba6f996ee2eef81117fc625435a4dc4f5", "filename": "libstdc++-v3/testsuite/19_diagnostics/error_code/operators/not_equal.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F19_diagnostics%2Ferror_code%2Foperators%2Fnot_equal.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F19_diagnostics%2Ferror_code%2Foperators%2Fnot_equal.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F19_diagnostics%2Ferror_code%2Foperators%2Fnot_equal.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -25,8 +25,6 @@\n // unspecified bool operator positive tests\n int main()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::error_code e1;\n   std::error_code e2(std::make_error_code(std::errc::operation_not_supported));\n "}, {"sha": "51cfcae93a384f0b455989cdffb1ebe92cf58d6e", "filename": "libstdc++-v3/testsuite/19_diagnostics/error_condition/cons/1.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F19_diagnostics%2Ferror_condition%2Fcons%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F19_diagnostics%2Ferror_condition%2Fcons%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F19_diagnostics%2Ferror_condition%2Fcons%2F1.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -23,8 +23,6 @@\n \n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   // 1\n   std::error_condition e1;\n   VERIFY( e1.value() == 0 );"}, {"sha": "6198cde32a85be8bca917ac4e63315d8c7cb5caf", "filename": "libstdc++-v3/testsuite/19_diagnostics/error_condition/cons/39881.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F19_diagnostics%2Ferror_condition%2Fcons%2F39881.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F19_diagnostics%2Ferror_condition%2Fcons%2F39881.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F19_diagnostics%2Ferror_condition%2Fcons%2F39881.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -47,8 +47,6 @@ namespace std\n // libstdc++/39881\n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::error_condition ec1(my_err);\n   VERIFY( ec1 == make_error_condition(my_err) );\n }"}, {"sha": "7c144064ad631283d2c13662b0622ccdf98e8d64", "filename": "libstdc++-v3/testsuite/19_diagnostics/error_condition/modifiers/39881.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F19_diagnostics%2Ferror_condition%2Fmodifiers%2F39881.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F19_diagnostics%2Ferror_condition%2Fmodifiers%2F39881.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F19_diagnostics%2Ferror_condition%2Fmodifiers%2F39881.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -47,8 +47,6 @@ namespace std\n // libstdc++/39881\n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::error_condition ec2;\n   ec2 = my_err;\n   VERIFY( ec2 == make_error_condition(my_err) );"}, {"sha": "e5ed5c5df1b6d89a95cad382c582d943104aff8f", "filename": "libstdc++-v3/testsuite/19_diagnostics/error_condition/operators/bool.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F19_diagnostics%2Ferror_condition%2Foperators%2Fbool.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F19_diagnostics%2Ferror_condition%2Foperators%2Fbool.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F19_diagnostics%2Ferror_condition%2Foperators%2Fbool.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -24,8 +24,6 @@\n // unspecified bool operator positive tests\n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   // 1\n   std::error_condition e1;\n   if (static_cast<bool>(e1))"}, {"sha": "3a4bcdd6c030a632aff39bbc4c2b1b5a6025b2e6", "filename": "libstdc++-v3/testsuite/19_diagnostics/error_condition/operators/equal.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F19_diagnostics%2Ferror_condition%2Foperators%2Fequal.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F19_diagnostics%2Ferror_condition%2Foperators%2Fequal.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F19_diagnostics%2Ferror_condition%2Foperators%2Fequal.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -24,8 +24,6 @@\n // unspecified bool operator positive tests\n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::error_condition e1;\n   std::error_condition e2(std::errc::operation_not_supported);\n "}, {"sha": "6c060310451d5fddf4c62f94a6724a44ef6b8689", "filename": "libstdc++-v3/testsuite/19_diagnostics/error_condition/operators/not_equal.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F19_diagnostics%2Ferror_condition%2Foperators%2Fnot_equal.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F19_diagnostics%2Ferror_condition%2Foperators%2Fnot_equal.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F19_diagnostics%2Ferror_condition%2Foperators%2Fnot_equal.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -24,8 +24,6 @@\n // unspecified bool operator positive tests\n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::error_condition e1;\n   std::error_condition e2(std::errc::operation_not_supported);\n "}, {"sha": "c2ef01eac251ec74343be9791c3fb944f997400d", "filename": "libstdc++-v3/testsuite/19_diagnostics/logic_error/what-1.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F19_diagnostics%2Flogic_error%2Fwhat-1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F19_diagnostics%2Flogic_error%2Fwhat-1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F19_diagnostics%2Flogic_error%2Fwhat-1.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -27,7 +27,6 @@\n // libstdc++/1972\n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n   std::string s(\"lack of sunlight, no water error\");\n \n   // 1\n@@ -42,7 +41,6 @@ void test01()\n \n void test02()\n {\n-  bool test __attribute__((unused)) = true;\n   std::string s(\"lack of sunlight error\");\n   std::domain_error x(s);\n   "}, {"sha": "dab91a7f588db0ebaf7aecb138e76318fb158a41", "filename": "libstdc++-v3/testsuite/19_diagnostics/logic_error/what-2.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F19_diagnostics%2Flogic_error%2Fwhat-2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F19_diagnostics%2Flogic_error%2Fwhat-2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F19_diagnostics%2Flogic_error%2Fwhat-2.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -33,7 +33,6 @@ class fuzzy_logic : public std::logic_error\n \n void test03()\n {\n-  bool test __attribute__((unused)) = true;\n   try\n     { throw fuzzy_logic(); }\n   catch(const fuzzy_logic& obj)"}, {"sha": "9bbc8cf1e79a5aedba52f484e571bdc50a3b56a3", "filename": "libstdc++-v3/testsuite/19_diagnostics/logic_error/what-3.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F19_diagnostics%2Flogic_error%2Fwhat-3.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F19_diagnostics%2Flogic_error%2Fwhat-3.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F19_diagnostics%2Flogic_error%2Fwhat-3.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -38,7 +38,6 @@ void allocate_on_stack(void)\n \n void test04()\n {\n-  bool test __attribute__((unused)) = true;\n   const std::string s(\"CA ISO emergency once again:immediate power down\");\n   const char* strlit1 = \"wish I lived in Palo Alto\";\n   const char* strlit2 = \"...or Santa Barbara\";"}, {"sha": "85aca9a028644e79ff8285445b0646b5d0077acd", "filename": "libstdc++-v3/testsuite/19_diagnostics/logic_error/what-big.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F19_diagnostics%2Flogic_error%2Fwhat-big.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F19_diagnostics%2Flogic_error%2Fwhat-big.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F19_diagnostics%2Flogic_error%2Fwhat-big.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -27,7 +27,6 @@ void test01()\n {\n   typedef std::logic_error test_type;\n \n-  bool test __attribute__((unused)) = true;\n   const std::string xxx(10000, 'x');\n   test_type t(xxx);\n   VERIFY( std::strcmp(t.what(), xxx.c_str()) == 0 );"}, {"sha": "c3b08ab63213ab06db633b4b1db62626eda2b5bc", "filename": "libstdc++-v3/testsuite/19_diagnostics/runtime_error/what-1.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F19_diagnostics%2Fruntime_error%2Fwhat-1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F19_diagnostics%2Fruntime_error%2Fwhat-1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F19_diagnostics%2Fruntime_error%2Fwhat-1.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -27,7 +27,6 @@\n // libstdc++/1972\n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n   std::string s(\"lack of sunlight, no water error\");\n \n   // 1\n@@ -42,7 +41,6 @@ void test01()\n \n void test02()\n {\n-  bool test __attribute__((unused)) = true;\n   std::string s(\"lack of sunlight error\");\n   std::range_error x(s);\n   "}, {"sha": "27cf7d927d4ee1443ef6007c07303675be5ed1a2", "filename": "libstdc++-v3/testsuite/19_diagnostics/runtime_error/what-2.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F19_diagnostics%2Fruntime_error%2Fwhat-2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F19_diagnostics%2Fruntime_error%2Fwhat-2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F19_diagnostics%2Fruntime_error%2Fwhat-2.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -33,7 +33,6 @@ class fuzzy_logic : public std::runtime_error\n \n void test03()\n {\n-  bool test __attribute__((unused)) = true;\n   try\n     { throw fuzzy_logic(); }\n   catch(const fuzzy_logic& obj)"}, {"sha": "70a8b5dce82a0d697cddfb330df34d9a225c791c", "filename": "libstdc++-v3/testsuite/19_diagnostics/runtime_error/what-3.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F19_diagnostics%2Fruntime_error%2Fwhat-3.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F19_diagnostics%2Fruntime_error%2Fwhat-3.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F19_diagnostics%2Fruntime_error%2Fwhat-3.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -40,7 +40,6 @@ void allocate_on_stack(void)\n \n void test04()\n {\n-  bool test __attribute__((unused)) = true;\n   const std::string s(\"CA ISO emergency once again:immediate power down\");\n   const char* strlit1 = \"wish I lived in Palo Alto\";\n   const char* strlit2 = \"...or Santa Barbara\";"}, {"sha": "76089a68f5c4586dd18f93b1534df3d886245a45", "filename": "libstdc++-v3/testsuite/19_diagnostics/runtime_error/what-big.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F19_diagnostics%2Fruntime_error%2Fwhat-big.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F19_diagnostics%2Fruntime_error%2Fwhat-big.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F19_diagnostics%2Fruntime_error%2Fwhat-big.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -27,7 +27,6 @@ void test01()\n {\n   typedef std::runtime_error test_type;\n \n-  bool test __attribute__((unused)) = true;\n   const std::string xxx(10000, 'x');\n   test_type t(xxx);\n   VERIFY( std::strcmp(t.what(), xxx.c_str()) == 0 );"}, {"sha": "adbece7f88d7e130dfdbb32fb468a796dd3af613", "filename": "libstdc++-v3/testsuite/19_diagnostics/system_error/cons-1.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F19_diagnostics%2Fsystem_error%2Fcons-1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F19_diagnostics%2Fsystem_error%2Fcons-1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F19_diagnostics%2Fsystem_error%2Fcons-1.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -24,7 +24,6 @@\n \n int main()\n {\n-  bool test __attribute__((unused)) = true;\n   const std::string s(\"too late: boulangerie out of pain au raisin\");\n   const std::error_code\n     e(std::make_error_code(std::errc::operation_not_supported));"}, {"sha": "6a83ef354b427b10b8804a520b38f99d3d9e2bf6", "filename": "libstdc++-v3/testsuite/19_diagnostics/system_error/what-1.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F19_diagnostics%2Fsystem_error%2Fwhat-1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F19_diagnostics%2Fsystem_error%2Fwhat-1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F19_diagnostics%2Fsystem_error%2Fwhat-1.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -28,7 +28,6 @@ using namespace std;\n // libstdc++/1972\n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n   string s(\"lack of sunlight, no water error\");\n \n   // 1\n@@ -43,7 +42,6 @@ void test01()\n \n void test02()\n {\n-  bool test __attribute__((unused)) = true;\n   string s(\"lack of sunlight error\");\n   system_error x(error_code(), s);\n   "}, {"sha": "f6865b9cef993bb333b9437b8dd035dfd11e2486", "filename": "libstdc++-v3/testsuite/19_diagnostics/system_error/what-2.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F19_diagnostics%2Fsystem_error%2Fwhat-2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F19_diagnostics%2Fsystem_error%2Fwhat-2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F19_diagnostics%2Fsystem_error%2Fwhat-2.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -32,7 +32,6 @@ class fuzzy_logic : public std::system_error\n \n void test03()\n {\n-  bool test __attribute__((unused)) = true;\n   try\n     { throw fuzzy_logic(); }\n   catch(const fuzzy_logic& obj)"}, {"sha": "eedac88e734769be890b9f828f26fd8c09d881c1", "filename": "libstdc++-v3/testsuite/19_diagnostics/system_error/what-3.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F19_diagnostics%2Fsystem_error%2Fwhat-3.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F19_diagnostics%2Fsystem_error%2Fwhat-3.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F19_diagnostics%2Fsystem_error%2Fwhat-3.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -37,7 +37,6 @@ void allocate_on_stack(void)\n \n void test04()\n {\n-  bool test __attribute__((unused)) = true;\n   const std::string s(\"CA ISO emergency once again:immediate power down\");\n   const char* strlit1 = \"wish I lived in Palo Alto\";\n   const char* strlit2 = \"...or Santa Barbara\";"}, {"sha": "fbd19e3fb26df2416d9f6ebaa72b7e08c1b439cb", "filename": "libstdc++-v3/testsuite/19_diagnostics/system_error/what-4.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F19_diagnostics%2Fsystem_error%2Fwhat-4.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F19_diagnostics%2Fsystem_error%2Fwhat-4.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F19_diagnostics%2Fsystem_error%2Fwhat-4.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -26,7 +26,6 @@\n // Make sure each invocation of what() doesn't grow the message.\n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n   std::string s(\"after nine thirty, this request cannot be met\");\n \n   std::system_error obj ="}, {"sha": "ba970768bcd9f4abce2e79a5a6269e253e4568f1", "filename": "libstdc++-v3/testsuite/19_diagnostics/system_error/what-big.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F19_diagnostics%2Fsystem_error%2Fwhat-big.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F19_diagnostics%2Fsystem_error%2Fwhat-big.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F19_diagnostics%2Fsystem_error%2Fwhat-big.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -26,7 +26,6 @@ void test01()\n {\n   typedef std::system_error test_type;\n \n-  bool test __attribute__((unused)) = true;\n   const std::string xxx(10000, 'x');\n   test_type t(std::error_code(), xxx);\n   VERIFY( std::string(t.what()).find(xxx) != std::string::npos );"}, {"sha": "333a3f77a1b1b8ab558a279586fd4535e74e6a17", "filename": "libstdc++-v3/testsuite/20_util/addressof/1.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Faddressof%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Faddressof%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Faddressof%2F1.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -27,7 +27,6 @@ void f1(int) { }\n \n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n   using namespace __gnu_test;\n   \n   OverloadedAddress* ao1 = new OverloadedAddress();"}, {"sha": "39b2c70bf1b1d1266fefec993b433ae66705e399", "filename": "libstdc++-v3/testsuite/20_util/align/1.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Falign%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Falign%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Falign%2F1.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -30,8 +30,6 @@\n void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   size_t space = 100;\n   void* ptr = new char[space];\n   char* const orig_ptr = static_cast<char*>(ptr);"}, {"sha": "2308048ad109630a9016374e82091a0365bb2029", "filename": "libstdc++-v3/testsuite/20_util/align/2.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Falign%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Falign%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Falign%2F2.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -27,8 +27,6 @@\n void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   int i = 0;\n   void* ptr = &i;\n   auto space = sizeof(i);"}, {"sha": "6905c86bd2d1d837ad6c6c2fcfe5ddbbad126bf9", "filename": "libstdc++-v3/testsuite/20_util/allocator/1.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fallocator%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fallocator%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fallocator%2F1.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -44,7 +44,6 @@ void operator delete(void *v) throw()\n \n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n   std::allocator<gnu> obj;\n \n   // NB: These should work for various size allocation and"}, {"sha": "a8384799ae0d3e9d013e26841d959dcab39a1340", "filename": "libstdc++-v3/testsuite/20_util/allocator/10378.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fallocator%2F10378.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fallocator%2F10378.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fallocator%2F10378.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -32,7 +32,6 @@ class Bob\n void test01()\n {\n   using namespace std;\n-  bool test __attribute__((unused)) = true;\n \n   list<Bob> uniset;\n   uniset.push_back(Bob());"}, {"sha": "d99c7b858dfa6cc431d677ec5a1ee48fca8184e5", "filename": "libstdc++-v3/testsuite/20_util/allocator/8230.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fallocator%2F8230.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fallocator%2F8230.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fallocator%2F8230.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -26,7 +26,7 @@\n // libstdc++/8230\n void test02()\n {\n-  bool test __attribute__((unused)) = true;\n+  bool test = true;\n   try \n     {\n       std::allocator<int> alloc;"}, {"sha": "ceb524cb4b6c2570e9aaf9a39c7a2d3900601b9b", "filename": "libstdc++-v3/testsuite/20_util/allocator_traits/members/allocate_hint.cc", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fallocator_traits%2Fmembers%2Fallocate_hint.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fallocator_traits%2Fmembers%2Fallocate_hint.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fallocator_traits%2Fmembers%2Fallocate_hint.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -46,8 +46,6 @@ struct hintable_allocator\n \n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   typedef std::allocator_traits<hintable_allocator<X>> traits_type;\n   traits_type::allocator_type a;\n   traits_type::const_void_pointer v;\n@@ -74,8 +72,6 @@ struct unhintable_allocator\n \n void test02()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   typedef std::allocator_traits<unhintable_allocator<X>> traits_type;\n   traits_type::allocator_type a;\n   traits_type::const_void_pointer v;"}, {"sha": "7b1adb98cbcf2105a0fdf2f95a6214f7de4126c0", "filename": "libstdc++-v3/testsuite/20_util/allocator_traits/members/construct.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fallocator_traits%2Fmembers%2Fconstruct.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fallocator_traits%2Fmembers%2Fconstruct.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fallocator_traits%2Fmembers%2Fconstruct.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -52,8 +52,6 @@ struct fake_allocator\n \n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   typedef std::allocator_traits<fake_allocator<X>> traits_type;\n   traits_type::allocator_type a;\n   X* p = traits_type::allocate(a, 1);"}, {"sha": "0ce84046e8d7d040ce5b970e855bf5d1e117575c", "filename": "libstdc++-v3/testsuite/20_util/allocator_traits/members/destroy.cc", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fallocator_traits%2Fmembers%2Fdestroy.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fallocator_traits%2Fmembers%2Fdestroy.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fallocator_traits%2Fmembers%2Fdestroy.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -53,8 +53,6 @@ struct allocator_without_destroy\n \n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   typedef std::allocator_traits<allocator_with_destroy<X>> traits_type;\n   traits_type::allocator_type a;\n   X* p = 0;\n@@ -65,8 +63,6 @@ void test01()\n \n void test02()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   typedef std::allocator_traits<allocator_without_destroy<X>> traits_type;\n   traits_type::allocator_type a;\n   char buf[sizeof(X)];"}, {"sha": "745acca355066668e81db518f43d45004805ed28", "filename": "libstdc++-v3/testsuite/20_util/allocator_traits/members/max_size.cc", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fallocator_traits%2Fmembers%2Fmax_size.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fallocator_traits%2Fmembers%2Fmax_size.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fallocator_traits%2Fmembers%2Fmax_size.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -42,8 +42,6 @@ struct unsized_allocator\n \n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   typedef std::allocator_traits<maxsize_allocator<X>> traits_type;\n   traits_type::allocator_type a;\n   auto size = a.max_size();\n@@ -52,8 +50,6 @@ void test01()\n \n void test02()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   typedef std::allocator_traits<unsized_allocator<X>> traits_type;\n   traits_type::allocator_type a;\n   auto size = std::numeric_limits<traits_type::size_type>::max();\n@@ -62,8 +58,6 @@ void test02()\n \n void test03()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   typedef std::allocator_traits<unsized_allocator<int>> traits_type;\n   traits_type::allocator_type a;\n   auto size = std::numeric_limits<traits_type::size_type>::max();"}, {"sha": "31a87a2b439773273248c19416455800f6172ade", "filename": "libstdc++-v3/testsuite/20_util/any/assign/exception.cc", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fany%2Fassign%2Fexception.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fany%2Fassign%2Fexception.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fany%2Fassign%2Fexception.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -57,8 +57,8 @@ int main()\n         a1 = a2;\n     } catch (...) {\n         auto x = std::any_cast<Good>(a1);\n-        assert(del_count == 0);\n-        assert(a1.has_value());\n+        VERIFY( del_count == 0 );\n+        VERIFY( a1.has_value() );\n         std::any_cast<Good>(a1);\n     }\n     std::any a3 = Good();\n@@ -70,8 +70,8 @@ int main()\n         a3 = a4;\n     } catch (...) {\n         auto x = std::any_cast<Good>(a1);\n-        assert(del_count == 0);\n-        assert(a1.has_value());\n+        VERIFY( del_count == 0 );\n+        VERIFY( a1.has_value() );\n         std::any_cast<Good>(a1);\n     }\n }"}, {"sha": "55a25e94de45ce3cf52e18c903083a41bc24a8d8", "filename": "libstdc++-v3/testsuite/20_util/auto_ptr/1.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fauto_ptr%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fauto_ptr%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fauto_ptr%2F1.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -62,7 +62,6 @@ int\n test01()\n {\n   reset_count_struct __attribute__((unused)) reset;\n-  bool test __attribute__((unused)) = true;\n \n   std::auto_ptr<A> A_default;\n   VERIFY( A_default.get() == 0 );"}, {"sha": "47b24bbef177cdea11a192851e9757f460ef4d5f", "filename": "libstdc++-v3/testsuite/20_util/auto_ptr/2.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fauto_ptr%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fauto_ptr%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fauto_ptr%2F2.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -59,7 +59,6 @@ int\n test02()\n {\n   reset_count_struct __attribute__((unused)) reset;\n-  bool test __attribute__((unused)) = true;\n \n   std::auto_ptr<A> A_from_A(new A);\n   std::auto_ptr<B> B_from_B(new B);"}, {"sha": "82c87b838cfb828b2f317565be6320dc8e362344", "filename": "libstdc++-v3/testsuite/20_util/auto_ptr/3.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fauto_ptr%2F3.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fauto_ptr%2F3.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fauto_ptr%2F3.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -59,7 +59,6 @@ int\n test03()\n {\n   reset_count_struct __attribute__((unused)) reset;\n-  bool test __attribute__((unused)) = true;\n \n   std::auto_ptr<A> A_from_ptr_A;\n   std::auto_ptr<A> A_from_ptr_B;"}, {"sha": "279665f1688acb504226f5b772b0e5ce4fa94817", "filename": "libstdc++-v3/testsuite/20_util/auto_ptr/4.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fauto_ptr%2F4.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fauto_ptr%2F4.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fauto_ptr%2F4.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -60,7 +60,6 @@ int\n test04()\n {\n   reset_count_struct __attribute__((unused)) reset;\n-  bool test __attribute__((unused)) = true;\n \n   {/*lifetine scope*/\n     std::auto_ptr<A> A_from_A(new A);"}, {"sha": "16e28ca90e049536e2ad888e70fe527253cb2e60", "filename": "libstdc++-v3/testsuite/20_util/auto_ptr/5.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fauto_ptr%2F5.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fauto_ptr%2F5.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fauto_ptr%2F5.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -68,7 +68,6 @@ class pimpl\n int \n test05()\n {\n-  bool test __attribute__((unused)) = true;\n   reset_count_struct __attribute__((unused)) reset;\n \n   pimpl<A>();"}, {"sha": "02545c72b32ded3408ed535814670f50e6d79ec9", "filename": "libstdc++-v3/testsuite/20_util/auto_ptr/6.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fauto_ptr%2F6.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fauto_ptr%2F6.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fauto_ptr%2F6.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -61,7 +61,6 @@ int\n test06()\n {\n   reset_count_struct __attribute__((unused)) reset;\n-  bool test __attribute__((unused)) = true;\n \n   std::auto_ptr<A> A_from_A(new A);\n   std::auto_ptr<A> A_from_A_ptr(A_from_A.release());"}, {"sha": "1e8319f29ffc331cfa4aebb17a7c54402348ff1c", "filename": "libstdc++-v3/testsuite/20_util/auto_ptr/7.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fauto_ptr%2F7.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fauto_ptr%2F7.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fauto_ptr%2F7.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -70,7 +70,6 @@ static void drain(std::auto_ptr<T>)\n int\n test07()\n {\n-  bool test __attribute__((unused)) = true;\n   reset_count_struct __attribute__((unused)) reset;\n \n   drain(source<A>());"}, {"sha": "cf70f39c474c00870ea139dfdffc4cd9df87e427", "filename": "libstdc++-v3/testsuite/20_util/bind/all_bound.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fbind%2Fall_bound.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fbind%2Fall_bound.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fbind%2Fall_bound.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -24,8 +24,6 @@\n // Operations on empty function<> objects\n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   VERIFY( std::bind(std::plus<int>(), 3, 5)() == 8 );\n   VERIFY( std::bind(std::minus<int>(), 3, 5)() == -2 );\n   VERIFY( std::bind<int>(std::plus<int>(), 3, 5)() == 8 );"}, {"sha": "1d6d91ab766c1324a8e44342f5f3637488a5c095", "filename": "libstdc++-v3/testsuite/20_util/bind/conv_result.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fbind%2Fconv_result.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fbind%2Fconv_result.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fbind%2Fconv_result.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -30,7 +30,6 @@ struct X\n \n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n   using std::bind;\n   using std::ref;\n   ::X x = { true };"}, {"sha": "ebf654fd26868319f00cc4f98e518e278002fab3", "filename": "libstdc++-v3/testsuite/20_util/bind/cv_quals.cc", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fbind%2Fcv_quals.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fbind%2Fcv_quals.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fbind%2Fcv_quals.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -42,8 +42,6 @@ using std::placeholders::_2;\n \n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   auto b0 = std::bind(X());\n   VERIFY( b0() == 0 );\n \n@@ -59,8 +57,6 @@ void test01()\n \n void test02()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   auto b0 = std::bind<int>(X());\n   VERIFY( b0() == 0 );\n \n@@ -76,8 +72,6 @@ void test02()\n \n void test03()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   auto b0 = std::bind(X(), 0, _1, _2);\n   VERIFY( b0(0, 0) == 0 );\n \n@@ -93,8 +87,6 @@ void test03()\n \n void test04()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   auto b0 = std::bind<int>(X(), 0, _1, _2);\n   VERIFY( b0(0, 0) == 0 );\n "}, {"sha": "9252285bb2ad9b99c05ce7c33b31f6006175a134", "filename": "libstdc++-v3/testsuite/20_util/bind/cv_quals_2.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fbind%2Fcv_quals_2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fbind%2Fcv_quals_2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fbind%2Fcv_quals_2.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -30,8 +30,6 @@ struct X\n \n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   const auto b0 = std::bind(X());\n   VERIFY( b0() == 0 );\n "}, {"sha": "823978e3d271ec092798b0d89cd40c249888446d", "filename": "libstdc++-v3/testsuite/20_util/bind/nested.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fbind%2Fnested.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fbind%2Fnested.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fbind%2Fnested.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -24,7 +24,6 @@\n // Operations on empty function<> objects\n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n   using namespace std::placeholders;\n \n   int five = 5;"}, {"sha": "0ddaa01d264cadab560c343c7a6d81093a2d9a61", "filename": "libstdc++-v3/testsuite/20_util/bind/placeholders.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fbind%2Fplaceholders.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fbind%2Fplaceholders.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fbind%2Fplaceholders.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -24,7 +24,6 @@\n // Operations on empty function<> objects\n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n   using namespace std::placeholders;\n \n   int five = 5;"}, {"sha": "a0c7e60d50f72babbe02501e2f606aa83d2cecf3", "filename": "libstdc++-v3/testsuite/20_util/bind/ref.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fbind%2Fref.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fbind%2Fref.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fbind%2Fref.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -37,7 +37,6 @@ struct X\n // Operations on empty function<> objects\n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n   using std::bind;\n   using std::ref;\n   ::X x;"}, {"sha": "d9ba387a293b1503fdaab1a4bd8f73c3b34496e0", "filename": "libstdc++-v3/testsuite/20_util/bind/ref2.cc", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fbind%2Fref2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fbind%2Fref2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fbind%2Fref2.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -28,8 +28,6 @@ int inc(int& i) { return ++i; }\n \n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   int counter = 0;\n   std::bind(&inc, _1)(counter);\n   VERIFY(counter == 1 );\n@@ -47,8 +45,6 @@ struct Inc\n \n void test02()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   int counter = 0;\n   std::bind(Inc(), _1)(counter);\n   VERIFY(counter == 1 );"}, {"sha": "163426dd88dccacf4ccb80004d2d2bd7b4f62c95", "filename": "libstdc++-v3/testsuite/20_util/common_type/requirements/typedefs-1.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fcommon_type%2Frequirements%2Ftypedefs-1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fcommon_type%2Frequirements%2Ftypedefs-1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fcommon_type%2Frequirements%2Ftypedefs-1.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -66,7 +66,6 @@ struct B : A { };\n \n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n   using std::common_type;\n   using std::is_same;\n \n@@ -98,7 +97,6 @@ void test01()\n \n void test02()\n {\n-  bool test __attribute__((unused)) = true;\n   using std::common_type;\n   using std::is_same;\n   "}, {"sha": "3f642b9dcab592b1083b21d5cb0163c05b011512", "filename": "libstdc++-v3/testsuite/20_util/duration/arithmetic/1.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fduration%2Farithmetic%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fduration%2Farithmetic%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fduration%2Farithmetic%2F1.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -27,7 +27,6 @@\n void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n   using namespace std::chrono;\n   \n   duration<int> d0(3);\n@@ -59,7 +58,6 @@ test01()\n void\n test02()\n {\n-  bool test __attribute__((unused)) = true;\n   using namespace std::chrono;\n   \n   duration<int> d7(3);"}, {"sha": "d3282eaaee1f703ea317e6b60df9cb0d36f03728", "filename": "libstdc++-v3/testsuite/20_util/duration/arithmetic/2.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fduration%2Farithmetic%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fduration%2Farithmetic%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fduration%2Farithmetic%2F2.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -27,7 +27,6 @@\n void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n   using namespace std::chrono;\n   \n   duration<int> d0(12);"}, {"sha": "489125814c3682338b76f58956e9f73bd5baa6c3", "filename": "libstdc++-v3/testsuite/20_util/duration/arithmetic/58850.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fduration%2Farithmetic%2F58850.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fduration%2Farithmetic%2F58850.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fduration%2Farithmetic%2F58850.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -23,7 +23,6 @@\n \n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n   using namespace std::chrono;\n \n   typedef duration<std::int64_t, std::ratio<36 * 24 * 36525>> Years;"}, {"sha": "e9bc53cf06e94a96e4493c13c9133b49ec29895b", "filename": "libstdc++-v3/testsuite/20_util/duration/arithmetic/dr2020.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fduration%2Farithmetic%2Fdr2020.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fduration%2Farithmetic%2Fdr2020.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fduration%2Farithmetic%2Fdr2020.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -26,7 +26,6 @@\n // DR 2020\n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n   using namespace std::chrono;\n \n   constexpr duration<int> d0(12);"}, {"sha": "e059c9632d08c98fe99333d5e1108b112273db31", "filename": "libstdc++-v3/testsuite/20_util/duration/arithmetic/dr934-2.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fduration%2Farithmetic%2Fdr934-2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fduration%2Farithmetic%2Fdr934-2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fduration%2Farithmetic%2Fdr934-2.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -25,7 +25,6 @@\n void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n   using namespace std::chrono;\n \n   const duration<int> d0(17);"}, {"sha": "8a44e6ba8cede54b0e616df42a0a17fe2c61e54e", "filename": "libstdc++-v3/testsuite/20_util/duration/comparison_operators/1.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fduration%2Fcomparison_operators%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fduration%2Fcomparison_operators%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fduration%2Fcomparison_operators%2F1.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -27,7 +27,6 @@\n void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n   using namespace std::chrono;\n   \n   duration<int> d0(12);"}, {"sha": "d880ec208e5355fd58ae29b3490aa565c82b60eb", "filename": "libstdc++-v3/testsuite/20_util/duration/cons/1.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fduration%2Fcons%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fduration%2Fcons%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fduration%2Fcons%2F1.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -106,7 +106,6 @@ typedef type_emulator<double> dbl_emulator;\n void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n   using std::chrono::duration;\n   \n   int r = 3;"}, {"sha": "ead01bb99b955a067e44493d74cc5d742b47fcde", "filename": "libstdc++-v3/testsuite/20_util/duration/cons/2.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fduration%2Fcons%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fduration%2Fcons%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fduration%2Fcons%2F2.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -87,7 +87,6 @@ typedef type_emulator<double> dbl_emulator;\n void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n   using namespace std::chrono;\n   \n   duration<int> d0(3);"}, {"sha": "b23cc34cd816f2c1fa7176b0380248fc9b890ff8", "filename": "libstdc++-v3/testsuite/20_util/enable_if/requirements/typedefs.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fenable_if%2Frequirements%2Ftypedefs.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fenable_if%2Frequirements%2Ftypedefs.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fenable_if%2Frequirements%2Ftypedefs.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -23,7 +23,6 @@\n \n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n   using std::enable_if;\n \n   // Positive tests."}, {"sha": "7ff151a4193067b806e0213a4a7639cc94ee20b9", "filename": "libstdc++-v3/testsuite/20_util/enable_if/requirements/typedefs_neg.cc", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fenable_if%2Frequirements%2Ftypedefs_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fenable_if%2Frequirements%2Ftypedefs_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fenable_if%2Frequirements%2Ftypedefs_neg.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -24,11 +24,10 @@\n \n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n   using std::enable_if;\n \n   // Negative  tests.\n   typedef enable_if<false, int>::type     test2_type;\n }\n \n-// { dg-error \"does not name a type\" \"\" { target *-*-* } 31 }\n+// { dg-error \"does not name a type\" \"\" { target *-*-* } 30 }"}, {"sha": "58c0442d600440e9be907cd1887e6e4120b59f03", "filename": "libstdc++-v3/testsuite/20_util/enable_shared_from_this/members/assign.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fenable_shared_from_this%2Fmembers%2Fassign.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fenable_shared_from_this%2Fmembers%2Fassign.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fenable_shared_from_this%2Fmembers%2Fassign.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -24,7 +24,6 @@ struct X : public std::enable_shared_from_this<X> { };\n \n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n   auto x1 = std::make_shared<X>(), x2 = std::make_shared<X>();\n   *x1 = *x2;\n   VERIFY( x1->shared_from_this() != x2->shared_from_this() );"}, {"sha": "42396117587a631f7e86c96d7a03fd31c2ea3eb4", "filename": "libstdc++-v3/testsuite/20_util/exchange/1.cc", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fexchange%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fexchange%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fexchange%2F1.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -41,8 +41,6 @@ test01()\n void\n test02()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   struct DefaultConstructible\n   {\n     DefaultConstructible(int i = 0) : value(i) { }\n@@ -63,8 +61,6 @@ double f(double) { return 0; }\n void\n test03()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   int (*fp)(int);\n   std::exchange(fp, &f);\n   VERIFY( fp != nullptr );"}, {"sha": "6ecf7fbfc22d90280365254784a6005e71089568", "filename": "libstdc++-v3/testsuite/20_util/forward/a.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fforward%2Fa.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fforward%2Fa.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fforward%2Fa.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -45,7 +45,6 @@ class A\n \n   void test() const\n   {\n-    bool test __attribute__((unused)) = true;\n     VERIFY( data_ == 3 );\n   }\n };"}, {"sha": "6b00c583f4cd3f29044fcbb047d88ead84e5d40f", "filename": "libstdc++-v3/testsuite/20_util/forward/b.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fforward%2Fb.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fforward%2Fb.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fforward%2Fb.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -45,7 +45,6 @@ class A\n \n   void test() const\n   {\n-    bool test __attribute__((unused)) = true;\n     VERIFY( data_ == 3 );\n   }\n };"}, {"sha": "3e23ccfee8a3cb34ff4fea60ddae344dabfa0be9", "filename": "libstdc++-v3/testsuite/20_util/forward/d.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fforward%2Fd.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fforward%2Fd.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fforward%2Fd.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -45,7 +45,6 @@ class A\n \n   void test() const\n   {\n-    bool test __attribute__((unused)) = true;\n     VERIFY( data_ == 3 );\n   }\n };"}, {"sha": "a3442ec3979a9037865b3dfa121f505459d4a669", "filename": "libstdc++-v3/testsuite/20_util/function/1.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ffunction%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ffunction%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ffunction%2F1.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -24,8 +24,6 @@\n \n using namespace __gnu_test;\n \n-bool test __attribute__((unused)) = true;\n-\n // Operations on empty function<> objects\n void test01()\n {"}, {"sha": "b5dd40e050cbc6fbe8f2846ba12188315c59cd06", "filename": "libstdc++-v3/testsuite/20_util/function/2.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ffunction%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ffunction%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ffunction%2F2.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -25,8 +25,6 @@\n \n using namespace __gnu_test;\n \n-bool test __attribute__((unused)) = true;\n-\n // Put function pointers into function<> wrappers\n void test02()\n {"}, {"sha": "a4d62aa3b1fb9b352f04bafe6e0141071f5ef218", "filename": "libstdc++-v3/testsuite/20_util/function/3.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ffunction%2F3.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ffunction%2F3.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ffunction%2F3.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -25,8 +25,6 @@\n \n using namespace __gnu_test;\n \n-bool test __attribute__((unused)) = true;\n-\n // Put nearly-matching function pointers into function<> wrappers\n void test03()\n {"}, {"sha": "00f471616d32f67272c1647312c7c94076b85b77", "filename": "libstdc++-v3/testsuite/20_util/function/4.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ffunction%2F4.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ffunction%2F4.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ffunction%2F4.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -25,8 +25,6 @@\n \n using namespace __gnu_test;\n \n-bool test __attribute__((unused)) = true;\n-\n // Put function objects into function<> wrappers\n void test04()\n {"}, {"sha": "aae172b9401ed2c6e2dca75c29634b1ae24d6625", "filename": "libstdc++-v3/testsuite/20_util/function/43397.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ffunction%2F43397.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ffunction%2F43397.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ffunction%2F43397.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -36,8 +36,6 @@ struct Foo\n \n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   using std::function;\n   using std::ref;\n "}, {"sha": "9d599dcfca26a1c702ae81d77debb9e6c2d2e84c", "filename": "libstdc++-v3/testsuite/20_util/function/5.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ffunction%2F5.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ffunction%2F5.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ffunction%2F5.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -25,8 +25,6 @@\n \n using namespace __gnu_test;\n \n-bool test __attribute__((unused)) = true;\n-\n // Put member pointers into function<> wrappers\n void test05()\n {"}, {"sha": "180fbff3efdb95851cc889f52ac015ff06fc3067", "filename": "libstdc++-v3/testsuite/20_util/function/6.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ffunction%2F6.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ffunction%2F6.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ffunction%2F6.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -24,8 +24,6 @@\n \n using namespace __gnu_test;\n \n-bool test __attribute__((unused)) = true;\n-\n struct secret {};\n \n struct noncopyable_function_object_type"}, {"sha": "097438ca02fea62619f7f235e31685714376d7d2", "filename": "libstdc++-v3/testsuite/20_util/function/7.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ffunction%2F7.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ffunction%2F7.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ffunction%2F7.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -25,8 +25,6 @@\n \n using namespace __gnu_test;\n \n-bool test __attribute__((unused)) = true;\n-\n // Put reference_wrappers to function pointers into function<> wrappers\n void test07()\n {"}, {"sha": "7b8bcc0107b1fbc6cb2be55f73f8f2a51b966004", "filename": "libstdc++-v3/testsuite/20_util/function/8.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ffunction%2F8.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ffunction%2F8.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ffunction%2F8.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -25,8 +25,6 @@\n \n using namespace __gnu_test;\n \n-bool test __attribute__((unused)) = true;\n-\n // Put reference_wrappers to member pointers\n void test08()\n {"}, {"sha": "88c4a041b67034e32f78e9f969b97af830193b8d", "filename": "libstdc++-v3/testsuite/20_util/function/9.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ffunction%2F9.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ffunction%2F9.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ffunction%2F9.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -25,8 +25,6 @@\n \n using namespace __gnu_test;\n \n-bool test __attribute__((unused)) = true;\n-\n // Put function objects into a void-returning function<> wrapper\n void test09()\n {"}, {"sha": "7caf8edff103e64d6762d601f242299501860478", "filename": "libstdc++-v3/testsuite/20_util/function/assign/move.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ffunction%2Fassign%2Fmove.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ffunction%2Fassign%2Fmove.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ffunction%2Fassign%2Fmove.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -25,8 +25,6 @@ struct { int operator()() { return 2; } } f2;\n \n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   typedef std::function<int()> function;\n \n   function fo(f1);"}, {"sha": "f88a04118c416205cb018240ac244aa2e67ef655", "filename": "libstdc++-v3/testsuite/20_util/function/cons/move.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ffunction%2Fcons%2Fmove.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ffunction%2Fcons%2Fmove.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ffunction%2Fcons%2Fmove.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -25,8 +25,6 @@ struct { int operator()() { return 2; } } f2;\n \n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   typedef std::function<int()> function;\n \n   function fo(f1);"}, {"sha": "592cec124242c3b3909371631dd000048df262c0", "filename": "libstdc++-v3/testsuite/20_util/function_objects/dr660.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ffunction_objects%2Fdr660.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ffunction_objects%2Fdr660.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ffunction_objects%2Fdr660.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -23,8 +23,6 @@\n // DR 660. Missing Bitwise Operations.\n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   for (int i1 = 0; i1 < 1000; ++i1)\n     for (int i2 = 0; i2 < 1000; ++i2)\n       {"}, {"sha": "58762aa7b62db25e069ae7a553db5b46cb8f3317", "filename": "libstdc++-v3/testsuite/20_util/hash/chi2_q_bit_flip_set.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fhash%2Fchi2_q_bit_flip_set.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fhash%2Fchi2_q_bit_flip_set.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fhash%2Fchi2_q_bit_flip_set.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -27,7 +27,6 @@\n void\n test_bit_flip_set()\n {\n-  bool test __attribute__((unused)) = true;\n   const unsigned long N = SAMPLES;\n   const unsigned long k = N/100;\n   const unsigned int len = 67;"}, {"sha": "7cc5b7cc543023e95d94079ae525fe56dc218df6", "filename": "libstdc++-v3/testsuite/20_util/hash/chi2_q_bit_string_set.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fhash%2Fchi2_q_bit_string_set.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fhash%2Fchi2_q_bit_string_set.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fhash%2Fchi2_q_bit_string_set.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -27,7 +27,6 @@\n void\n test_bit_string_set()\n {\n-  bool test __attribute__((unused)) = true;\n   const unsigned long N = SAMPLES;\n   const unsigned long k = N/100;\n   std::vector<std::string> set;"}, {"sha": "56cca2d142e868238370b1afb5038feb0f4a3b8c", "filename": "libstdc++-v3/testsuite/20_util/hash/chi2_q_document_words.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fhash%2Fchi2_q_document_words.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fhash%2Fchi2_q_document_words.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fhash%2Fchi2_q_document_words.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -25,7 +25,6 @@\n void\n test_document_words()\n {\n-  bool test __attribute__((unused)) = true;\n   const std::string f_name = \"thirty_years_among_the_dead_preproc.txt\";\n   std::ifstream in(f_name);\n   VERIFY( in.is_open() );"}, {"sha": "697ddec2ed64d5151136a7f880613f556ff747a3", "filename": "libstdc++-v3/testsuite/20_util/hash/chi2_q_numeric_pattern_set.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fhash%2Fchi2_q_numeric_pattern_set.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fhash%2Fchi2_q_numeric_pattern_set.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fhash%2Fchi2_q_numeric_pattern_set.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -27,7 +27,6 @@\n void\n test_numeric_pattern_set()\n {\n-  bool test __attribute__((unused)) = true;\n   const unsigned long N = SAMPLES;\n   const unsigned long k = N/100;\n   std::vector<std::string> set;"}, {"sha": "959070abe029066ae56e3ca130642e5b7902f8e4", "filename": "libstdc++-v3/testsuite/20_util/hash/chi2_q_uniform_random.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fhash%2Fchi2_q_uniform_random.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fhash%2Fchi2_q_uniform_random.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fhash%2Fchi2_q_uniform_random.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -26,7 +26,6 @@\n void\n test_uniform_random()\n {\n-  bool test __attribute__((unused)) = true;\n   std::srand(137);\n   std::unordered_set<std::string> set;\n   std::string s;"}, {"sha": "06b8a7387ffbc2261d23f9aaf5680a3f8514b7bf", "filename": "libstdc++-v3/testsuite/20_util/hash/operators/size_t.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fhash%2Foperators%2Fsize_t.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fhash%2Foperators%2Fsize_t.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fhash%2Foperators%2Fsize_t.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -26,8 +26,6 @@ template<typename T>\n   void\n   do_test()\n   {\n-    bool test __attribute__((unused)) = true;\n-\n     typedef T \t\t\t\tvalue_type;\n     typedef std::hash<value_type> \thash_type;\n     using std::size_t;"}, {"sha": "014788ccc52deabb96bfb589c26754957c3218a5", "filename": "libstdc++-v3/testsuite/20_util/hash/quality.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fhash%2Fquality.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fhash%2Fquality.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fhash%2Fquality.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -59,7 +59,6 @@ random_strings(unsigned int n, unsigned int len)\n double\n score_from_varying_position(string s, unsigned int index)\n {\n-  bool test __attribute__((unused)) = true;\n   unsigned int bits_in_hash_code = sizeof(size_t) * 8;\n \n   // We'll iterate through all 256 vals for s[index], leaving the rest\n@@ -146,7 +145,6 @@ quality_test(unsigned int num_strings, unsigned int string_size)\n void\n quality_test()\n {\n-  bool test __attribute__((unused)) = true;\n   srand(137);\n   double sum_of_scores = 0;\n   for (unsigned int i = 0; i < num_quality_tests; i++)"}, {"sha": "f3fa280c0a8a0fbe9499f1e071a1135e78e52f66", "filename": "libstdc++-v3/testsuite/20_util/integral_constant/static_definition.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fintegral_constant%2Fstatic_definition.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fintegral_constant%2Fstatic_definition.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fintegral_constant%2Fstatic_definition.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -22,7 +22,6 @@\n \n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n   const bool* p = &std::integral_constant<bool, true>::value;\n   VERIFY( p );\n }"}, {"sha": "bf9e324ac6df0c597d034adfacded713a4604fef", "filename": "libstdc++-v3/testsuite/20_util/integral_constant/true_false_value.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fintegral_constant%2Ftrue_false_value.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fintegral_constant%2Ftrue_false_value.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fintegral_constant%2Ftrue_false_value.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -22,7 +22,6 @@\n \n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n   using std::true_type;\n   using std::false_type;\n "}, {"sha": "066b7001d02731ba7ec5927f04f54791d2a9679a", "filename": "libstdc++-v3/testsuite/20_util/is_function/24808.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fis_function%2F24808.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fis_function%2F24808.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fis_function%2F24808.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -24,7 +24,6 @@\n // libstdc++/24808\n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n   using std::is_function;\n   using namespace __gnu_test;\n "}, {"sha": "77bb69e28b75de9e598be9d8fa578fa7aeddbdd3", "filename": "libstdc++-v3/testsuite/20_util/is_object/24808.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fis_object%2F24808.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fis_object%2F24808.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fis_object%2F24808.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -24,7 +24,6 @@\n // libstdc++/24808\n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n   using std::is_object;\n   using namespace __gnu_test;\n "}, {"sha": "7da691901cc7e428813f961719b2f48468594b19", "filename": "libstdc++-v3/testsuite/20_util/move_if_noexcept/1.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fmove_if_noexcept%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fmove_if_noexcept%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fmove_if_noexcept%2F1.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -93,8 +93,6 @@ struct except_move_no_copy\n void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   noexcept_move_copy nemc1;\n   auto nemc2 __attribute__((unused)) = std::move_if_noexcept(nemc1);\n   VERIFY( nemc1 == false );"}, {"sha": "a9a9ebf80fbc917fc0818f972f3c2a7ff7b6a9ac", "filename": "libstdc++-v3/testsuite/20_util/move_if_noexcept/constexpr.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fmove_if_noexcept%2Fconstexpr.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fmove_if_noexcept%2Fconstexpr.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fmove_if_noexcept%2Fconstexpr.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -28,8 +28,6 @@ struct simple\n void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   constexpr simple s { 5 };\n   constexpr auto s2  __attribute__((unused)) = std::move_if_noexcept(s);\n }"}, {"sha": "8fdc4ad337222cc5049a23a9d90bc84b1b449c00", "filename": "libstdc++-v3/testsuite/20_util/owner_less/cmp.cc", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fowner_less%2Fcmp.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fowner_less%2Fcmp.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fowner_less%2Fcmp.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -32,8 +32,6 @@ struct B { A a[2]; };\n int\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   // test empty shared_ptrs compare equivalent\n   std::owner_less<std::shared_ptr<A>> less;\n   std::owner_less<std::weak_ptr<A>> wless;\n@@ -51,8 +49,6 @@ test01()\n int\n test02()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::owner_less<std::shared_ptr<A>> less;\n   std::owner_less<std::weak_ptr<A>> wless;\n \n@@ -84,8 +80,6 @@ test02()\n int\n test03()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::owner_less<std::shared_ptr<A>> less;\n   std::owner_less<std::weak_ptr<A>> wless;\n \n@@ -108,8 +102,6 @@ test03()\n int\n test04()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::owner_less<std::shared_ptr<A>> less;\n \n   std::shared_ptr<A> a[3];"}, {"sha": "caae3eac41862a8d8ff4573fc0fac6e7ca9b4e7c", "filename": "libstdc++-v3/testsuite/20_util/pair/1.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fpair%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fpair%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fpair%2F1.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -45,8 +45,6 @@ template<typename T>\n // heterogeneous\n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::pair<bool, long> p_bl_1(true, 433);\n   std::pair<bool, long> p_bl_2 = std::make_pair(true, 433);\n   VERIFY( p_bl_1 == p_bl_2 );"}, {"sha": "dac378eebba0a07ff321ed34ba9a381bdd6c5f54", "filename": "libstdc++-v3/testsuite/20_util/pair/2.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fpair%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fpair%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fpair%2F2.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -44,8 +44,6 @@ template<typename T>\n // homogeneous\n void test02()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::pair<bool, bool> p_bb_1(true, false);\n   std::pair<bool, bool> p_bb_2 = std::make_pair(true, false);\n   VERIFY( p_bb_1 == p_bb_2 );"}, {"sha": "7cfc474c9b2c11d04c523045f20301eccb865aab", "filename": "libstdc++-v3/testsuite/20_util/pair/3.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fpair%2F3.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fpair%2F3.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fpair%2F3.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -45,8 +45,6 @@ template<typename T>\n // const\n void test03()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   const std::pair<bool, long> p_bl_1(true, 433);\n   const std::pair<bool, long> p_bl_2 = std::make_pair(true, 433);\n   VERIFY( p_bl_1 == p_bl_2 );"}, {"sha": "0e1fbcd2e8893b160cda3d260afa0361db5df775", "filename": "libstdc++-v3/testsuite/20_util/pair/4.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fpair%2F4.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fpair%2F4.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fpair%2F4.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -44,7 +44,6 @@ template<typename T>\n // const&\n void test04()\n {\n-  bool test __attribute__((unused)) = true;\n   const gnu_obj& obj1 = gnu_obj(5);\n   const std::pair<const char*, gnu_obj> p_sg_1(\"enlightenment\", obj1);\n   const std::pair<const char*, gnu_obj> p_sg_2 = "}, {"sha": "1195db7eeb213ff8d589b2ed2d28ebac1f3a2ac4", "filename": "libstdc++-v3/testsuite/20_util/pair/make_pair/constexpr.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fpair%2Fmake_pair%2Fconstexpr.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fpair%2Fmake_pair%2Fconstexpr.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fpair%2Fmake_pair%2Fconstexpr.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -27,7 +27,6 @@\n void\n test1()\n {\n-  bool test __attribute__((unused)) = true;\n   typedef std::pair<int, float> pair_type;\n   constexpr pair_type p1 __attribute__((unused)) = std::make_pair(22, 22.222);\n }"}, {"sha": "9c26f2785679598d3b368cbf2cead2b57e80e610", "filename": "libstdc++-v3/testsuite/20_util/pair/moveable.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fpair%2Fmoveable.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fpair%2Fmoveable.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fpair%2Fmoveable.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -26,8 +26,6 @@\n #include <utility>\n #include <testsuite_hooks.h>\n \n-bool test __attribute__((unused)) = true;\n-\n void\n test1()\n {"}, {"sha": "854b6dea207fcfe73ac3be4f1724aea84cf49b8f", "filename": "libstdc++-v3/testsuite/20_util/pair/piecewise.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fpair%2Fpiecewise.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fpair%2Fpiecewise.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fpair%2Fpiecewise.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -67,8 +67,6 @@ struct type_two\n \n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::pair<type_one, type_zero> pp0(std::piecewise_construct,\n \t\t\t\t     std::forward_as_tuple(-3),\n \t\t\t\t     std::forward_as_tuple());"}, {"sha": "024fff1825f7b03a78206ab4a4e248786ea65166", "filename": "libstdc++-v3/testsuite/20_util/pair/swap.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fpair%2Fswap.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fpair%2Fswap.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fpair%2Fswap.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -24,7 +24,6 @@\n \n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n   typedef __gnu_test::uneq_allocator<double> ua_type;\n   ua_type one(1), two(2);\n "}, {"sha": "74dcf35cab96f2a0cfeaa37134ea4f88fe1b4a11", "filename": "libstdc++-v3/testsuite/20_util/ratio/comparisons/comp1.cc", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fratio%2Fcomparisons%2Fcomp1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fratio%2Fcomparisons%2Fcomp1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fratio%2Fcomparisons%2Fcomp1.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -24,8 +24,6 @@\n void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n- \n   VERIFY(( std::ratio_equal<std::ratio<2,6>, std::ratio<1,3>>::value == 1 ));\n   VERIFY(( std::ratio_equal<std::ratio<2,6>, std::ratio<1,4>>::value == 0 ));\n   \n@@ -38,8 +36,6 @@ test01()\n void\n test02()\n {\n-  bool test __attribute__((unused)) = true;\n- \n   VERIFY( (std::ratio_less<std::ratio<1,4>, std::ratio<1,3>>::value == 1) );\n   VERIFY( (std::ratio_less<std::ratio<-1,3>, std::ratio<1,3>>::value == 1) );\n   "}, {"sha": "bed70cbc6a65b4532e6dc79f0e85364e1aa24467", "filename": "libstdc++-v3/testsuite/20_util/ratio/comparisons/comp2.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fratio%2Fcomparisons%2Fcomp2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fratio%2Fcomparisons%2Fcomp2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fratio%2Fcomparisons%2Fcomp2.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -26,8 +26,6 @@ static const std::intmax_t M = INTMAX_MAX;\n void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n- \n   // No overflow with same denominator\n   VERIFY( (std::ratio_less<std::ratio<M - 2, M>,\n            std::ratio<M - 1, M>>::value == 1) );"}, {"sha": "8c6cd980667ad7d7165bfdad33b50279b86ab479", "filename": "libstdc++-v3/testsuite/20_util/ratio/comparisons/comp3.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fratio%2Fcomparisons%2Fcomp3.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fratio%2Fcomparisons%2Fcomp3.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fratio%2Fcomparisons%2Fcomp3.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -26,8 +26,6 @@\n void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   VERIFY( (std::ratio_less<std::ratio<59, 29131>,\n \t                   std::ratio<59, 29129>>::value == 1) );\n   VERIFY( (std::ratio_less<std::ratio<4733, 13>,"}, {"sha": "9ef1c3858c793cad231d9b5f1c6a67cfcfdc8e13", "filename": "libstdc++-v3/testsuite/20_util/ratio/cons/cons1.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fratio%2Fcons%2Fcons1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fratio%2Fcons%2Fcons1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fratio%2Fcons%2Fcons1.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -26,8 +26,6 @@\n void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::ratio<1,3> r0;\n   std::ratio<2,6> r1;  \n   std::ratio<2,-6> r2;"}, {"sha": "c8bf8401636580254e5b6a003766a1f309f7cf6b", "filename": "libstdc++-v3/testsuite/20_util/ratio/operations/45866.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fratio%2Foperations%2F45866.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fratio%2Foperations%2F45866.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fratio%2Foperations%2F45866.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -26,8 +26,6 @@\n // libstdc++/45866\n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   typedef std::ratio<1, 4>::type r_type1;\n   typedef std::ratio<3, 2>::type r_type2;\n "}, {"sha": "8c5254cfecc2929ccf46fd93408bff01731faf79", "filename": "libstdc++-v3/testsuite/20_util/ratio/operations/47913.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fratio%2Foperations%2F47913.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fratio%2Foperations%2F47913.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fratio%2Foperations%2F47913.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -25,7 +25,6 @@\n // libstdc++/47913\n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n   using namespace std;\n \n   const intmax_t m1 = (intmax_t)1 << (4 * sizeof(intmax_t) - 1);"}, {"sha": "32072fe8359afb684c9f87c569146981075e54a5", "filename": "libstdc++-v3/testsuite/20_util/ratio/operations/ops1.cc", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fratio%2Foperations%2Fops1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fratio%2Foperations%2Fops1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fratio%2Foperations%2Fops1.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -26,8 +26,6 @@\n void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::ratio_add<std::ratio<3,8>, std::ratio<5,12>>::type r;\n \n   VERIFY( r.num == 19 );\n@@ -37,7 +35,6 @@ test01()\n void\n test02()\n {  \n-  bool test __attribute__((unused)) = true;\n   std::ratio_subtract<std::ratio<3,8>, std::ratio<5,12>>::type r;\n \n   VERIFY( r.num == -1 );\n@@ -47,7 +44,6 @@ test02()\n void\n test03()\n {\n-  bool test __attribute__((unused)) = true;\n   std::ratio_multiply<std::ratio<3,8>, std::ratio<5,12>>::type r;\n \n   VERIFY( r.num == 5 );\n@@ -57,7 +53,6 @@ test03()\n void\n test04()\n {\n-  bool test __attribute__((unused)) = true;\n   std::ratio_divide<std::ratio<3,8>, std::ratio<5,12>>::type r;\n \n   VERIFY( r.num == 9 );"}, {"sha": "8172c77a00daabe920260c365eeb88c5cdb4eaa9", "filename": "libstdc++-v3/testsuite/20_util/ratio/operations/ops2.cc", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fratio%2Foperations%2Fops2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fratio%2Foperations%2Fops2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fratio%2Foperations%2Fops2.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -31,8 +31,6 @@ typedef std::ratio<INTMAX_MAX, 2> max_over_two;\n void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::ratio_add<one_over_max, one_over_max>::type r1;\n \n   VERIFY( r1.num == two_over_max::num);\n@@ -48,9 +46,7 @@ test01()\n \n void\n test02()\n-{  \n-  bool test __attribute__((unused)) = true;\n-  \n+{\n   std::ratio_subtract<one_over_max, one_over_max>::type r1;\n \n   VERIFY( r1.num == 0);"}, {"sha": "39ba67aa058aa1ebb104657c9454ab19ae4877d1", "filename": "libstdc++-v3/testsuite/20_util/ratio/operations/ops3.cc", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fratio%2Foperations%2Fops3.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fratio%2Foperations%2Fops3.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fratio%2Foperations%2Fops3.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -26,8 +26,6 @@\n void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::ratio_multiply<\n     std::ratio<2, INTMAX_MAX>,\n     std::ratio<INTMAX_MAX, 2>>::type r1;\n@@ -45,9 +43,7 @@ test01()\n \n void\n test02()\n-{  \n-  bool test __attribute__((unused)) = true;\n-  \n+{\n   std::ratio_divide<\n     std::ratio<INTMAX_MAX, 2>,\n     std::ratio<INTMAX_MAX, 2>>::type r1;"}, {"sha": "b4a1eec7efd48fb3d66a1eee5bba65b83b8542c8", "filename": "libstdc++-v3/testsuite/20_util/reference_wrapper/invoke.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Freference_wrapper%2Finvoke.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Freference_wrapper%2Finvoke.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Freference_wrapper%2Finvoke.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -24,8 +24,6 @@\n \n using namespace __gnu_test;\n \n-bool test __attribute__((unused)) = true;\n-\n struct X\n {\n   typedef int result_type;"}, {"sha": "f380f99652df2c55e110b453b02f7d1c798c45c7", "filename": "libstdc++-v3/testsuite/20_util/scoped_allocator/1.cc", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fscoped_allocator%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fscoped_allocator%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fscoped_allocator%2F1.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -44,8 +44,6 @@ struct Element\n \n void test01()\n {\n-  bool test __attribute((unused)) = false;\n-\n   typedef std::scoped_allocator_adaptor<Element::allocator_type> alloc1_type;\n \n   typedef std::vector<Element, alloc1_type> EltVec;\n@@ -59,8 +57,6 @@ void test01()\n \n void test02()\n {\n-  bool test __attribute((unused)) = false;\n-\n   typedef std::scoped_allocator_adaptor<Element::allocator_type> inner_alloc_type;\n \n   typedef std::vector<Element, inner_alloc_type> EltVec;"}, {"sha": "0ef5d7efacb28faf08aaf1104d3e4c130b917d12", "filename": "libstdc++-v3/testsuite/20_util/scoped_allocator/2.cc", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fscoped_allocator%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fscoped_allocator%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fscoped_allocator%2F2.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -120,8 +120,6 @@ template<typename A, typename B>\n   void\n   test_def()\n   {\n-    bool test __attribute((unused)) = false;\n-\n     typedef std::pair<A, B> test_type;\n     typedef uneq_allocator<test_type> alloc_type;\n     typedef scoped_allocator_adaptor<alloc_type, alloc_type> alloc_adaptor;\n@@ -167,8 +165,6 @@ template<typename A, typename B>\n   void\n   test_copying()\n   {\n-    bool test __attribute((unused)) = false;\n-\n     typedef std::pair<A, B> test_type;\n     typedef uneq_allocator<test_type> alloc_type;\n     typedef scoped_allocator_adaptor<alloc_type, alloc_type> alloc_adaptor;\n@@ -218,8 +214,6 @@ template<typename A, typename B>\n   void\n   test_moving()\n   {\n-    bool test __attribute((unused)) = false;\n-\n     typedef std::pair<A, B> test_type;\n     typedef uneq_allocator<test_type> alloc_type;\n     typedef scoped_allocator_adaptor<alloc_type, alloc_type> alloc_adaptor;"}, {"sha": "7eaa33712af62572686e675d29bc5efead1ae735", "filename": "libstdc++-v3/testsuite/20_util/shared_ptr/assign/assign.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fshared_ptr%2Fassign%2Fassign.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fshared_ptr%2Fassign%2Fassign.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fshared_ptr%2Fassign%2Fassign.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -49,7 +49,6 @@ void\n test01()\n {\n   reset_count_struct __attribute__((unused)) reset;\n-  bool test __attribute__((unused)) = true;\n \n   std::shared_ptr<A> a;\n "}, {"sha": "105fe1103ab6b007ec83285b023ca4d342d79dfd", "filename": "libstdc++-v3/testsuite/20_util/shared_ptr/assign/auto_ptr.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fshared_ptr%2Fassign%2Fauto_ptr.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fshared_ptr%2Fassign%2Fauto_ptr.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fshared_ptr%2Fassign%2Fauto_ptr.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -63,7 +63,6 @@ int\n test01()\n {\n   reset_count_struct __attribute__((unused)) reset;\n-  bool test __attribute__((unused)) = true;\n \n   std::shared_ptr<A> a(new A);\n   std::auto_ptr<B> b(new B);"}, {"sha": "56d818ec10a76aad0624f9544504b4e20d578c10", "filename": "libstdc++-v3/testsuite/20_util/shared_ptr/assign/auto_ptr_neg.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fshared_ptr%2Fassign%2Fauto_ptr_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fshared_ptr%2Fassign%2Fauto_ptr_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fshared_ptr%2Fassign%2Fauto_ptr_neg.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -32,8 +32,6 @@ struct B { };\n int\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::shared_ptr<A> a;\n   std::auto_ptr<B> b;\n   a = std::move(b);                      // { dg-error \"here\" }"}, {"sha": "cef25707da77c212724df3061aa10530e6da5646", "filename": "libstdc++-v3/testsuite/20_util/shared_ptr/assign/move.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fshared_ptr%2Fassign%2Fmove.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fshared_ptr%2Fassign%2Fmove.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fshared_ptr%2Fassign%2Fmove.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -62,7 +62,6 @@ void\n test01()\n {\n   reset_count_struct __attribute__((unused)) reset;\n-  bool test __attribute__((unused)) = true;\n \n   std::shared_ptr<A> a1;\n   std::shared_ptr<A> a2(new A);\n@@ -86,7 +85,6 @@ void\n test02()\n {\n   reset_count_struct __attribute__((unused)) reset;\n-  bool test __attribute__((unused)) = true;\n \n   std::shared_ptr<A> a;\n   std::shared_ptr<B> b(new B);"}, {"sha": "5d63029140bc35a2a02806bff7b79b636f9796c6", "filename": "libstdc++-v3/testsuite/20_util/shared_ptr/assign/shared_ptr.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fshared_ptr%2Fassign%2Fshared_ptr.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fshared_ptr%2Fassign%2Fshared_ptr.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fshared_ptr%2Fassign%2Fshared_ptr.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -62,7 +62,6 @@ void\n test01()\n {\n   reset_count_struct __attribute__((unused)) reset;\n-  bool test __attribute__((unused)) = true;\n \n   std::shared_ptr<A> a;\n "}, {"sha": "46e3bf5a0f40d1789136c90ba854de828523ebed", "filename": "libstdc++-v3/testsuite/20_util/shared_ptr/assign/unique_ptr_lvalue_neg.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fshared_ptr%2Fassign%2Funique_ptr_lvalue_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fshared_ptr%2Fassign%2Funique_ptr_lvalue_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fshared_ptr%2Fassign%2Funique_ptr_lvalue_neg.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -30,8 +30,6 @@ struct A { };\n int\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::shared_ptr<A> a;\n   std::unique_ptr<A> u;\n   a = u; // { dg-error \"\" }"}, {"sha": "2eaef29d5278453b80eee47697bade38b73ee5c0", "filename": "libstdc++-v3/testsuite/20_util/shared_ptr/comparison/cmp.cc", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fshared_ptr%2Fcomparison%2Fcmp.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fshared_ptr%2Fcomparison%2Fcmp.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fshared_ptr%2Fcomparison%2Fcmp.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -36,8 +36,6 @@ struct B : A\n int\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   // test empty shared_ptrs compare equivalent\n   std::shared_ptr<A> p1;\n   std::shared_ptr<B> p2;\n@@ -52,8 +50,6 @@ test01()\n int\n test02()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::shared_ptr<A> A_default;\n \n   std::shared_ptr<A> A_from_A(new A);"}, {"sha": "6c55d74967cdb692dd7aaed675a40a94372dc8d4", "filename": "libstdc++-v3/testsuite/20_util/shared_ptr/comparison/less.cc", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fshared_ptr%2Fcomparison%2Fless.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fshared_ptr%2Fcomparison%2Fless.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fshared_ptr%2Fcomparison%2Fless.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -41,8 +41,6 @@ namespace std\n int\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::less<std::shared_ptr<A>> less;\n   // test empty shared_ptrs compare equivalent\n   std::shared_ptr<A> p1;\n@@ -57,8 +55,6 @@ test01()\n int\n test02()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::less<std::shared_ptr<A>> less;\n \n   std::shared_ptr<A> empty;\n@@ -81,8 +77,6 @@ test02()\n int\n test03()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::less<std::shared_ptr<A>> less;\n \n   A a;"}, {"sha": "482a5bb262efc0e49baf6eefde493300b566549e", "filename": "libstdc++-v3/testsuite/20_util/shared_ptr/cons/alias.cc", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fshared_ptr%2Fcons%2Falias.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fshared_ptr%2Fcons%2Falias.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fshared_ptr%2Fcons%2Falias.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -44,7 +44,7 @@ void deletefunc(A* p) { delete p; }\n \n int test01()\n {\n-  bool test __attribute__((unused)) = true;\n+  bool test = true;\n \n   std::shared_ptr<A> a;\n   std::shared_ptr<bool> b1(a, &test);\n@@ -62,8 +62,6 @@ int test01()\n int\n test02()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::shared_ptr<A> a(new A);\n   std::shared_ptr<int> i1(a, &a->i);\n   VERIFY( i1.use_count() == 2 );\n@@ -78,8 +76,6 @@ test02()\n int\n test03()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::shared_ptr<B> b(new B);\n   std::shared_ptr<A> a1(b, b.get());\n   std::shared_ptr<A> a2(b, &b->a);"}, {"sha": "7c480b69dc540a10e1ce31a900d4394aac97b7d0", "filename": "libstdc++-v3/testsuite/20_util/shared_ptr/cons/alloc.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fshared_ptr%2Fcons%2Falloc.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fshared_ptr%2Fcons%2Falloc.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fshared_ptr%2Fcons%2Falloc.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -41,7 +41,6 @@ long D::delete_count = 0;\n int\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n   tracker_allocator_counter::reset();\n \n   std::shared_ptr<A> p1(new A, deletefunc, tracker_allocator<A>());\n@@ -68,7 +67,6 @@ test01()\n int\n test02()\n {\n-  bool test __attribute__((unused)) = true;\n   tracker_allocator_counter::reset();\n \n   std::shared_ptr<A> p1(new A, deletefunc, tracker_allocator<A>());"}, {"sha": "7a99490bcacc92729b2d6af7df21752313249c67", "filename": "libstdc++-v3/testsuite/20_util/shared_ptr/cons/auto_ptr.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fshared_ptr%2Fcons%2Fauto_ptr.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fshared_ptr%2Fcons%2Fauto_ptr.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fshared_ptr%2Fcons%2Fauto_ptr.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -31,8 +31,6 @@ struct A { };\n int\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::auto_ptr<A> a(new A);\n   std::shared_ptr<A> a2(std::move(a));\n   VERIFY( a.get() == 0 );"}, {"sha": "09d181103555a0b237d2fc35911407c01805aaf0", "filename": "libstdc++-v3/testsuite/20_util/shared_ptr/cons/copy.cc", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fshared_ptr%2Fcons%2Fcopy.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fshared_ptr%2Fcons%2Fcopy.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fshared_ptr%2Fcons%2Fcopy.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -61,7 +61,6 @@ struct reset_count_struct\n int test01()\n {\n   reset_count_struct __attribute__((unused)) reset;\n-  bool test __attribute__((unused)) = true;\n \n   std::shared_ptr<A> a1;\n   std::shared_ptr<A> a2(a1);\n@@ -78,7 +77,6 @@ int\n test02()\n {\n   reset_count_struct __attribute__((unused)) reset;\n-  bool test __attribute__((unused)) = true;\n \n   std::shared_ptr<A> a1(new A);\n   std::shared_ptr<A> a2(a1);\n@@ -95,7 +93,6 @@ int\n test03()\n {\n   reset_count_struct __attribute__((unused)) reset;\n-  bool test __attribute__((unused)) = true;\n \n   std::shared_ptr<B> b(new B);\n   std::shared_ptr<A> a(b);\n@@ -112,7 +109,6 @@ int\n test04()\n {\n   reset_count_struct __attribute__((unused)) reset;\n-  bool test __attribute__((unused)) = true;\n \n   std::shared_ptr<B> b(new B, &deleter);\n   std::shared_ptr<A> a(b);"}, {"sha": "262674e6082e355fab7a2664b49539a9032ff140", "filename": "libstdc++-v3/testsuite/20_util/shared_ptr/cons/default.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fshared_ptr%2Fcons%2Fdefault.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fshared_ptr%2Fcons%2Fdefault.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fshared_ptr%2Fcons%2Fdefault.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -30,8 +30,6 @@ struct A { };\n int\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::shared_ptr<A> a;\n   VERIFY( a.get() == 0 );\n "}, {"sha": "26786d601700555685788d39354b29b1e76103da", "filename": "libstdc++-v3/testsuite/20_util/shared_ptr/cons/move.cc", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fshared_ptr%2Fcons%2Fmove.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fshared_ptr%2Fcons%2Fmove.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fshared_ptr%2Fcons%2Fmove.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -68,7 +68,6 @@ struct reset_count_struct\n int test01()\n {\n   reset_count_struct __attribute__((unused)) reset;\n-  bool test __attribute__((unused)) = true;\n \n   std::shared_ptr<A> a1;\n   std::shared_ptr<A> a2(std::move(a1));\n@@ -86,7 +85,6 @@ int\n test02()\n {\n   reset_count_struct __attribute__((unused)) reset;\n-  bool test __attribute__((unused)) = true;\n \n   std::shared_ptr<A> a1(new A);\n   std::shared_ptr<A> a2(std::move(a1));\n@@ -102,7 +100,6 @@ int\n test03()\n {\n   reset_count_struct __attribute__((unused)) reset;\n-  bool test __attribute__((unused)) = true;\n \n   std::shared_ptr<B> b(new B);\n   std::shared_ptr<A> a(std::move(b));\n@@ -120,7 +117,6 @@ int\n test04()\n {\n   reset_count_struct __attribute__((unused)) reset;\n-  bool test __attribute__((unused)) = true;\n \n   std::shared_ptr<B> b(new B, D());\n   std::shared_ptr<A> a(std::move(b));\n@@ -142,7 +138,6 @@ int\n test05()\n {\n   reset_count_struct __attribute__((unused)) reset;\n-  bool test __attribute__((unused)) = true;\n \n   std::shared_ptr<A> a(std::move(std::shared_ptr<A>(new A)));\n   VERIFY( a.use_count() == 1 );"}, {"sha": "593fc48f6c83750fc3badb3978e65d8a913b6b1c", "filename": "libstdc++-v3/testsuite/20_util/shared_ptr/cons/nullptr.cc", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fshared_ptr%2Fcons%2Fnullptr.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fshared_ptr%2Fcons%2Fnullptr.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fshared_ptr%2Fcons%2Fnullptr.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -39,8 +39,6 @@ struct deleter\n void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::shared_ptr<int> p = nullptr;\n   VERIFY( p.get() == nullptr );\n   VERIFY( p.use_count() == 0 );\n@@ -50,8 +48,6 @@ test01()\n void\n test02()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   deleter d;\n   std::shared_ptr<int> p(nullptr, std::ref(d));\n   VERIFY( p.get() == nullptr );\n@@ -66,8 +62,6 @@ test02()\n void\n test03()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   deleter d;\n   __gnu_test::tracker_allocator<int> a;\n   std::shared_ptr<int> p(nullptr, std::ref(d), a);"}, {"sha": "c8d11bd422a7eca114b1493cb499842265cf8e88", "filename": "libstdc++-v3/testsuite/20_util/shared_ptr/cons/pointer.cc", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fshared_ptr%2Fcons%2Fpointer.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fshared_ptr%2Fcons%2Fpointer.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fshared_ptr%2Fcons%2Fpointer.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -33,8 +33,6 @@ struct B : A { };\n int\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   A * const a = 0;\n   std::shared_ptr<A> p(a);\n   VERIFY( p.get() == 0 );\n@@ -46,8 +44,6 @@ test01()\n int\n test02()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   A * const a = new A;\n   std::shared_ptr<A> p(a);\n   VERIFY( p.get() == a );\n@@ -60,8 +56,6 @@ test02()\n int\n test03()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   B * const b = new B;\n   std::shared_ptr<A> p(b);\n   VERIFY( p.get() == b );"}, {"sha": "18e66162754d7f2a7ff5bcde274992e63d81ecbf", "filename": "libstdc++-v3/testsuite/20_util/shared_ptr/cons/unique_ptr.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fshared_ptr%2Fcons%2Funique_ptr.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fshared_ptr%2Fcons%2Funique_ptr.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fshared_ptr%2Fcons%2Funique_ptr.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -30,8 +30,6 @@ struct A { };\n int\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::unique_ptr<A> up(new A);\n   std::shared_ptr<A> sp(std::move(up));\n   VERIFY( up.get() == 0 );"}, {"sha": "72eed477c8fa17242892f14a2a1f4e82ca2bb131", "filename": "libstdc++-v3/testsuite/20_util/shared_ptr/cons/unique_ptr_array.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fshared_ptr%2Fcons%2Funique_ptr_array.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fshared_ptr%2Fcons%2Funique_ptr_array.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fshared_ptr%2Fcons%2Funique_ptr_array.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -35,8 +35,6 @@ struct A : std::enable_shared_from_this<A>\n int\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::unique_ptr<A[]> up(new A[2]);\n   std::shared_ptr<A> sp(std::move(up));\n   VERIFY( up.get() == 0 );"}, {"sha": "d773d23f7af1d7aa522054cbae925790b8eef2fb", "filename": "libstdc++-v3/testsuite/20_util/shared_ptr/cons/unique_ptr_deleter.cc", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fshared_ptr%2Fcons%2Funique_ptr_deleter.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fshared_ptr%2Fcons%2Funique_ptr_deleter.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fshared_ptr%2Fcons%2Funique_ptr_deleter.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -37,8 +37,6 @@ int D::count = 0;\n void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::unique_ptr<A, D> up(new A, D());\n   {\n       std::shared_ptr<A> sp(std::move(up));\n@@ -52,8 +50,6 @@ test01()\n void\n test02()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   D::count = 0;\n   std::unique_ptr<A, D> up;\n   {"}, {"sha": "702daeb42958f6bea422f7c161b773b58c2158d5", "filename": "libstdc++-v3/testsuite/20_util/shared_ptr/cons/unique_ptr_deleter_ref_1.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fshared_ptr%2Fcons%2Funique_ptr_deleter_ref_1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fshared_ptr%2Fcons%2Funique_ptr_deleter_ref_1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fshared_ptr%2Fcons%2Funique_ptr_deleter_ref_1.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -37,8 +37,6 @@ struct D {\n int\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   D d = D();\n   std::unique_ptr<A, D&> up(new A, d);\n   {"}, {"sha": "f29a4b766a7981361634a2855972af2aeef3357f", "filename": "libstdc++-v3/testsuite/20_util/shared_ptr/cons/unique_ptr_deleter_ref_2.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fshared_ptr%2Fcons%2Funique_ptr_deleter_ref_2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fshared_ptr%2Fcons%2Funique_ptr_deleter_ref_2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fshared_ptr%2Fcons%2Funique_ptr_deleter_ref_2.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -39,8 +39,6 @@ struct D {\n int\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   D d;\n   std::unique_ptr<A, D&> p1(new A, d);\n "}, {"sha": "5a28de6d098fb6d77a01167a6bdc5e636c4c2591", "filename": "libstdc++-v3/testsuite/20_util/shared_ptr/cons/unique_ptr_neg.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fshared_ptr%2Fcons%2Funique_ptr_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fshared_ptr%2Fcons%2Funique_ptr_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fshared_ptr%2Fcons%2Funique_ptr_neg.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -30,8 +30,6 @@ struct A { };\n int\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::unique_ptr<A> a;\n   std::shared_ptr<A> p(a); // { dg-error \"\" }\n "}, {"sha": "c0cc05f5f5802d835201ae287d95d3b321a36bdf", "filename": "libstdc++-v3/testsuite/20_util/shared_ptr/cons/weak_ptr.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fshared_ptr%2Fcons%2Fweak_ptr.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fshared_ptr%2Fcons%2Fweak_ptr.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fshared_ptr%2Fcons%2Fweak_ptr.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -30,8 +30,6 @@ struct A { };\n int\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   A * const a = new A;\n   std::shared_ptr<A> a1(a);\n   std::weak_ptr<A> wa(a1);"}, {"sha": "d7d4763048ae9b0dfdbdba10a29f73e937799b33", "filename": "libstdc++-v3/testsuite/20_util/shared_ptr/creation/alloc.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fshared_ptr%2Fcreation%2Falloc.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fshared_ptr%2Fcreation%2Falloc.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fshared_ptr%2Fcreation%2Falloc.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -56,7 +56,6 @@ struct reset_count_struct\n void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n   reset_count_struct __attribute__((unused)) reset;\n \n   {\n@@ -74,7 +73,6 @@ test01()\n void\n test02()\n {\n-  bool test __attribute__((unused)) = true;\n   reset_count_struct __attribute__((unused)) reset;\n \n   std::shared_ptr<A> p1;"}, {"sha": "425bd2764961531835b1d47b07a427a5ff7b3c67", "filename": "libstdc++-v3/testsuite/20_util/shared_ptr/creation/dr402.cc", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fshared_ptr%2Fcreation%2Fdr402.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fshared_ptr%2Fcreation%2Fdr402.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fshared_ptr%2Fcreation%2Fdr402.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -21,21 +21,18 @@\n \n #include <memory>\n #include <new>\n-#include <testsuite_hooks.h>\n \n struct A\n {\n-    void* operator new(size_t n) { return new char[sizeof(A)]; }\n-    void operator delete(void* p, size_t) { delete (char*)p; }\n+  void* operator new(size_t n) { return new char[sizeof(A)]; }\n+  void operator delete(void* p, size_t) { delete (char*)p; }\n };\n \n // 20.6.6.2.6 shared_ptr creation [util.smartptr.shared.create]\n \n void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::shared_ptr<A> p = std::make_shared<A>();\n }\n "}, {"sha": "75302ca5fb044c954583d330a79f15f74c7e230f", "filename": "libstdc++-v3/testsuite/20_util/shared_ptr/creation/dr925.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fshared_ptr%2Fcreation%2Fdr925.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fshared_ptr%2Fcreation%2Fdr925.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fshared_ptr%2Fcreation%2Fdr925.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -42,8 +42,6 @@ create_auto_ptr()\n void \n process(std::shared_ptr<A> a)\n {\n-  bool test __attribute__((unused)) = true;\n-\n   VERIFY( a.get() != 0 );\n   VERIFY( a.use_count() == 1 );\n }"}, {"sha": "79259ce32305f679972ddb9a0508227abf7b44b6", "filename": "libstdc++-v3/testsuite/20_util/shared_ptr/creation/make.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fshared_ptr%2Fcreation%2Fmake.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fshared_ptr%2Fcreation%2Fmake.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fshared_ptr%2Fcreation%2Fmake.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -51,7 +51,6 @@ struct reset_count_struct\n void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n   reset_count_struct __attribute__((unused)) reset;\n \n   {\n@@ -66,7 +65,6 @@ test01()\n void\n test02()\n {\n-  bool test __attribute__((unused)) = true;\n   reset_count_struct __attribute__((unused)) reset;\n \n   std::shared_ptr<A> p1;"}, {"sha": "9a2ef65b93b75f1aeba29e3c1e5a4548b71d9213", "filename": "libstdc++-v3/testsuite/20_util/shared_ptr/dest/dest.cc", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fshared_ptr%2Fdest%2Fdest.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fshared_ptr%2Fdest%2Fdest.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fshared_ptr%2Fdest%2Fdest.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -69,7 +69,6 @@ int\n test01()\n {\n   reset_count_struct __attribute__((unused)) reset;\n-  bool test __attribute__((unused)) = true;\n \n   {\n     std::shared_ptr<A> a;\n@@ -88,7 +87,6 @@ int\n test02()\n {\n   reset_count_struct __attribute__((unused)) reset;\n-  bool test __attribute__((unused)) = true;\n \n   std::shared_ptr<A> a;\n   {\n@@ -108,7 +106,6 @@ int\n test03()\n {\n   reset_count_struct __attribute__((unused)) reset;\n-  bool test __attribute__((unused)) = true;\n \n   {\n     std::shared_ptr<A> a1(new B);"}, {"sha": "66b3d651fdc67e559343e76647b3ea6e5061c738", "filename": "libstdc++-v3/testsuite/20_util/shared_ptr/hash/1.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fshared_ptr%2Fhash%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fshared_ptr%2Fhash%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fshared_ptr%2Fhash%2F1.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -24,8 +24,6 @@\n \n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   struct T { };\n \n   std::shared_ptr<T>                s0(new T);"}, {"sha": "174014074d0ee4d8afbfd6839de86a215e11cc4f", "filename": "libstdc++-v3/testsuite/20_util/shared_ptr/misc/24595.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fshared_ptr%2Fmisc%2F24595.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fshared_ptr%2Fmisc%2F24595.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fshared_ptr%2Fmisc%2F24595.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -27,8 +27,6 @@ using std::get_deleter;\n // libstdc++/24595\n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::shared_ptr<int> sp;\n   VERIFY( !get_deleter<void(*)(int*)>(sp) );\n }"}, {"sha": "e6633d1a2853d01471bd9f8c943389cd440ecbea", "filename": "libstdc++-v3/testsuite/20_util/shared_ptr/misc/42019.cc", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fshared_ptr%2Fmisc%2F42019.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fshared_ptr%2Fmisc%2F42019.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fshared_ptr%2Fmisc%2F42019.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -34,17 +34,13 @@ struct B {\n \n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::shared_ptr<A> spA = std::make_shared<A>();\n \n   VERIFY( spA.get() != 0 );\n }\n \n void test02()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::shared_ptr<B> spB = std::make_shared<B>(99);\n \n   VERIFY( spB->i == 99 );"}, {"sha": "7e2e4db13467cf64657c627b62983d8cbd9264e2", "filename": "libstdc++-v3/testsuite/20_util/shared_ptr/misc/io.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fshared_ptr%2Fmisc%2Fio.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fshared_ptr%2Fmisc%2Fio.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fshared_ptr%2Fmisc%2Fio.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -31,8 +31,6 @@ struct A { };\n int\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::shared_ptr<A> p(new A);\n   std::ostringstream buf;\n   buf << p;"}, {"sha": "de26276aea28f8e7456fe2a05ab1ca8f3cae040c", "filename": "libstdc++-v3/testsuite/20_util/shared_ptr/misc/swap.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fshared_ptr%2Fmisc%2Fswap.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fshared_ptr%2Fmisc%2Fswap.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fshared_ptr%2Fmisc%2Fswap.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -30,8 +30,6 @@ struct A { };\n int\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   A * const a1 = new A;\n   A * const a2 = new A;\n   std::shared_ptr<A> p1(a1);"}, {"sha": "d80314ec319ea541cc29f918196f475cda0186e1", "filename": "libstdc++-v3/testsuite/20_util/shared_ptr/modifiers/reset.cc", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fshared_ptr%2Fmodifiers%2Freset.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fshared_ptr%2Fmodifiers%2Freset.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fshared_ptr%2Fmodifiers%2Freset.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -37,8 +37,6 @@ long D::delete_count = 0;\n int\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   A * const a = new A;\n   std::shared_ptr<A> p1(a);\n   std::shared_ptr<A> p2(p1);\n@@ -52,8 +50,6 @@ test01()\n int\n test02()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   A * const a = new A;\n   B * const b = new B;\n   std::shared_ptr<A> p1(a);\n@@ -68,8 +64,6 @@ test02()\n int\n test03()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   {\n     std::shared_ptr<A> p1;\n     p1.reset(new B, D());"}, {"sha": "46aefceffe6f82537b1139e5540befddcc410c19", "filename": "libstdc++-v3/testsuite/20_util/shared_ptr/modifiers/reset_alloc.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fshared_ptr%2Fmodifiers%2Freset_alloc.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fshared_ptr%2Fmodifiers%2Freset_alloc.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fshared_ptr%2Fmodifiers%2Freset_alloc.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -41,7 +41,6 @@ long D::delete_count = 0;\n int\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n   tracker_allocator_counter::reset();\n \n   {"}, {"sha": "0b31282ef66fdfc48543d6ae8699257d9082b962", "filename": "libstdc++-v3/testsuite/20_util/shared_ptr/modifiers/reset_neg.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fshared_ptr%2Fmodifiers%2Freset_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fshared_ptr%2Fmodifiers%2Freset_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fshared_ptr%2Fmodifiers%2Freset_neg.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -30,8 +30,6 @@ struct A { };\n int\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   const std::shared_ptr<A> p1(new A);\n   p1.reset();     // { dg-error \"\" }\n "}, {"sha": "f84a3da8cd640c2fc4e23f2bf0608ccb06e5dbe2", "filename": "libstdc++-v3/testsuite/20_util/shared_ptr/modifiers/swap.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fshared_ptr%2Fmodifiers%2Fswap.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fshared_ptr%2Fmodifiers%2Fswap.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fshared_ptr%2Fmodifiers%2Fswap.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -30,8 +30,6 @@ struct A { };\n int\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   A * const a1 = new A;\n   A * const a2 = new A;\n   std::shared_ptr<A> p1(a1);"}, {"sha": "935582f6f19141958984202f4baaf87038adc711", "filename": "libstdc++-v3/testsuite/20_util/shared_ptr/modifiers/swap_neg.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fshared_ptr%2Fmodifiers%2Fswap_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fshared_ptr%2Fmodifiers%2Fswap_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fshared_ptr%2Fmodifiers%2Fswap_neg.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -30,8 +30,6 @@ struct A { };\n int\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   const std::shared_ptr<A> p1(new A);\n   std::shared_ptr<A> p2(new A);\n   p1.swap(p2);   // { dg-error \"discards qualifiers\" }"}, {"sha": "d6e52b9964a7dd2099f05ce99b1e828d8c008698", "filename": "libstdc++-v3/testsuite/20_util/shared_ptr/observers/bool_conv.cc", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fshared_ptr%2Fobservers%2Fbool_conv.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fshared_ptr%2Fobservers%2Fbool_conv.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fshared_ptr%2Fobservers%2Fbool_conv.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -30,8 +30,6 @@ struct A { };\n void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   const std::shared_ptr<A> p1;\n   VERIFY( static_cast<bool>(p1) == false );\n   const std::shared_ptr<A> p2(p1);\n@@ -41,8 +39,6 @@ test01()\n void\n test02()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::shared_ptr<A> p1(new A);\n   VERIFY( static_cast<bool>(p1) );\n   std::shared_ptr<A> p2(p1);\n@@ -55,8 +51,6 @@ test02()\n void\n test03()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::shared_ptr<A> p1(new A);\n   std::shared_ptr<A> p2(p1);\n   p2.reset(new A);"}, {"sha": "966614e500e919d99221249db0b476aa10fe416a", "filename": "libstdc++-v3/testsuite/20_util/shared_ptr/observers/get.cc", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fshared_ptr%2Fobservers%2Fget.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fshared_ptr%2Fobservers%2Fget.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fshared_ptr%2Fobservers%2Fget.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -34,8 +34,6 @@ struct A\n void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   A * const a = new A;\n   const std::shared_ptr<A> p(a);\n   VERIFY( p.get() == a );\n@@ -45,8 +43,6 @@ test01()\n void\n test02()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   A * const a = new A;\n   const std::shared_ptr<A> p(a);\n   VERIFY( &*p == a );\n@@ -56,8 +52,6 @@ test02()\n void\n test03()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   A * const a = new A;\n   const std::shared_ptr<A> p(a);\n   VERIFY( &p->i == &a->i );\n@@ -66,8 +60,6 @@ test03()\n void\n test04()\n {\n-  bool test __attribute__((unused)) = true;\n-\n #if !(defined _GLIBCXX_DEBUG && defined _GLIBCXX_DEBUG_PEDANTIC)\n   std::shared_ptr<int> p;\n   auto np = p.operator->();"}, {"sha": "eb88ae0e1bb0a0cf20b38be32415fac461c67bb0", "filename": "libstdc++-v3/testsuite/20_util/shared_ptr/observers/owner_before.cc", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fshared_ptr%2Fobservers%2Fowner_before.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fshared_ptr%2Fobservers%2Fowner_before.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fshared_ptr%2Fobservers%2Fowner_before.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -37,8 +37,6 @@ struct B : A\n void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   // test empty shared_ptrs compare equivalent\n   std::shared_ptr<A> p1;\n   std::shared_ptr<B> p2;\n@@ -50,8 +48,6 @@ test01()\n void\n test02()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::shared_ptr<A> a0;\n \n   std::shared_ptr<A> a1(new A);\n@@ -77,8 +73,6 @@ test02()\n void\n test03()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::shared_ptr<A> p1(new A());\n   std::shared_ptr<int> p2(p1, &p1->i);\n   VERIFY( !p1.owner_before(p2) && !p2.owner_before(p1) );"}, {"sha": "a12ee3caa41fa3d851f71480ab7a3221281627dd", "filename": "libstdc++-v3/testsuite/20_util/shared_ptr/observers/unique.cc", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fshared_ptr%2Fobservers%2Funique.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fshared_ptr%2Fobservers%2Funique.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fshared_ptr%2Fobservers%2Funique.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -30,8 +30,6 @@ struct A { };\n void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   const std::shared_ptr<A> p1;\n   VERIFY( !p1.unique() );\n   const std::shared_ptr<A> p2(p1);\n@@ -41,8 +39,6 @@ test01()\n void\n test02()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::shared_ptr<A> p1(new A);\n   VERIFY( p1.unique() );\n   std::shared_ptr<A> p2(p1);\n@@ -55,8 +51,6 @@ test02()\n void\n test03()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::shared_ptr<A> p1(new A);\n   std::shared_ptr<A> p2(p1);\n   p2.reset(new A);"}, {"sha": "c022a5a11bc7e760a69830c39c8b5449dd54e8ce", "filename": "libstdc++-v3/testsuite/20_util/shared_ptr/observers/use_count.cc", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fshared_ptr%2Fobservers%2Fuse_count.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fshared_ptr%2Fobservers%2Fuse_count.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fshared_ptr%2Fobservers%2Fuse_count.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -31,8 +31,6 @@ struct B : A { };\n void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   const std::shared_ptr<A> p1;\n   VERIFY( p1.use_count() == 0 );\n   const std::shared_ptr<A> p2(p1);\n@@ -42,8 +40,6 @@ test01()\n void\n test02()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::shared_ptr<A> p1(new A);\n   std::shared_ptr<A> p2(p1);\n   p1.reset();\n@@ -54,8 +50,6 @@ test02()\n void\n test03()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::shared_ptr<A> p1(new A);\n   std::shared_ptr<A> p2(p1);\n   p2.reset(new B);"}, {"sha": "5014898b2b9fc8598837ab3cceecfbb13ac37d78", "filename": "libstdc++-v3/testsuite/20_util/shared_ptr/thread/default_weaktoshared.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fshared_ptr%2Fthread%2Fdefault_weaktoshared.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fshared_ptr%2Fthread%2Fdefault_weaktoshared.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fshared_ptr%2Fthread%2Fdefault_weaktoshared.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -124,7 +124,6 @@ void thread_hammer(wp_vector_t& weak_pool)\n void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n   sp_vector_t obj_pool(POOL_SIZE);\n   \n   for(auto& obj : obj_pool)"}, {"sha": "eaa72c42a73e26bbae2d5c13d75f88e91d4a98d7", "filename": "libstdc++-v3/testsuite/20_util/shared_ptr/thread/mutex_weaktoshared.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fshared_ptr%2Fthread%2Fmutex_weaktoshared.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fshared_ptr%2Fthread%2Fmutex_weaktoshared.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fshared_ptr%2Fthread%2Fmutex_weaktoshared.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -126,7 +126,6 @@ void thread_hammer(wp_vector_t& weak_pool)\n void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n   sp_vector_t obj_pool(POOL_SIZE);\n   \n   for(auto& obj : obj_pool)"}, {"sha": "610f1fa785090bcb6ef140e7392eb7a9674372ff", "filename": "libstdc++-v3/testsuite/20_util/specialized_algorithms/uninitialized_copy/move_iterators/1.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fspecialized_algorithms%2Funinitialized_copy%2Fmove_iterators%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fspecialized_algorithms%2Funinitialized_copy%2Fmove_iterators%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fspecialized_algorithms%2Funinitialized_copy%2Fmove_iterators%2F1.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -36,8 +36,6 @@ typedef test_container<rvalstruct, forward_iterator_wrapper> container_out;\n \n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   int inarray[] = { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9 };\n   const int size = sizeof(inarray) / sizeof(int);\n "}, {"sha": "7d7a343669cc15470e19ef0575f3aa046d9d3b7c", "filename": "libstdc++-v3/testsuite/20_util/specialized_algorithms/uninitialized_copy_n/move_iterators/1.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fspecialized_algorithms%2Funinitialized_copy_n%2Fmove_iterators%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fspecialized_algorithms%2Funinitialized_copy_n%2Fmove_iterators%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fspecialized_algorithms%2Funinitialized_copy_n%2Fmove_iterators%2F1.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -38,8 +38,6 @@ typedef test_container<rvalstruct, forward_iterator_wrapper> container_out;\n \n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   int inarray[] = { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9 };\n   const int size = sizeof(inarray) / sizeof(int);\n "}, {"sha": "a9e4a9d56d006ba16605807da8fb6ba567b2449a", "filename": "libstdc++-v3/testsuite/20_util/temporary_buffer.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ftemporary_buffer.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ftemporary_buffer.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ftemporary_buffer.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -26,8 +26,6 @@ struct junk { char j[12]; };\n \n int main(void)\n {\n-  bool test __attribute__((unused)) = true;\n-\n   typedef std::pair<junk*, std::ptrdiff_t> pair_type;\n   pair_type results = std::get_temporary_buffer<junk>(5);\n "}, {"sha": "b358818942c1bba31c5b1ff01f088a4c239d1cc3", "filename": "libstdc++-v3/testsuite/20_util/time_point/1.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ftime_point%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ftime_point%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ftime_point%2F1.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -27,7 +27,6 @@\n void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n   using namespace std::chrono;\n   \n   time_point<system_clock> t1;"}, {"sha": "7704b9f71e7e832667c13f93e2e1d558e72eda55", "filename": "libstdc++-v3/testsuite/20_util/time_point/2.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ftime_point%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ftime_point%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ftime_point%2F2.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -27,7 +27,6 @@\n void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n   using namespace std::chrono;\n   \n   time_point<system_clock> t1, t2;\n@@ -42,7 +41,6 @@ test01()\n void\n test02()\n {\n-  bool test __attribute__((unused)) = true;\n   using namespace std::chrono;\n   \n   time_point<system_clock> t1;"}, {"sha": "87270167be8ae7e6682badd079aacbe3bfe8cb8d", "filename": "libstdc++-v3/testsuite/20_util/time_point/3.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ftime_point%2F3.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ftime_point%2F3.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ftime_point%2F3.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -27,7 +27,6 @@\n void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n   using namespace std::chrono;\n   \n   time_point<system_clock> t1(seconds(1));"}, {"sha": "f4803ca4d68e61a0d76393b34fd46b2b6402f1f1", "filename": "libstdc++-v3/testsuite/20_util/time_point/nonmember/constexpr.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ftime_point%2Fnonmember%2Fconstexpr.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ftime_point%2Fnonmember%2Fconstexpr.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ftime_point%2Fnonmember%2Fconstexpr.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -22,7 +22,6 @@\n \n int main()\n {\n-  bool test __attribute__((unused)) = true;\n   using namespace std::chrono;\n   \n   typedef time_point<system_clock> time_type;"}, {"sha": "394e2166e71a1556bdc966f62002095c1d695e14", "filename": "libstdc++-v3/testsuite/20_util/tuple/48476.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ftuple%2F48476.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ftuple%2F48476.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ftuple%2F48476.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -29,8 +29,6 @@ template<typename T>\n // libstdc++/48476\n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::shared_ptr<int> p(new int()), q, r;\n   \n   std::tuple<std::shared_ptr<int>&, int>  t0(p, 23), t1(q, 0);"}, {"sha": "129e01a1f801291d6bfdd1a3a4cfaccb1f7a6cdf", "filename": "libstdc++-v3/testsuite/20_util/tuple/comparison_operators/comparisons.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ftuple%2Fcomparison_operators%2Fcomparisons.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ftuple%2Fcomparison_operators%2Fcomparisons.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ftuple%2Fcomparison_operators%2Fcomparisons.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -24,8 +24,6 @@\n \n using namespace std;\n \n-bool test __attribute__((unused)) = true;\n-\n #define TEST1(x) VERIFY( x == x && !(x != x) && x <= x && !(x < x) )\n \n int"}, {"sha": "45e677261abe26b70d55777e0350d3a4f83aaea9", "filename": "libstdc++-v3/testsuite/20_util/tuple/cons/allocators.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ftuple%2Fcons%2Fallocators.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ftuple%2Fcons%2Fallocators.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ftuple%2Fcons%2Fallocators.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -102,7 +102,6 @@ struct UsesWithoutTag\n \n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n   using std::allocator_arg;\n   using std::tuple;\n   using std::make_tuple;\n@@ -164,7 +163,6 @@ void test01()\n \n void test02()\n {\n-  bool test __attribute__((unused)) = true;\n   using std::allocator_arg;\n   using std::tuple;\n   using std::make_tuple;"}, {"sha": "9a8eb61e25fd0abfde96e1bf9bd4ef75d7e2fb58", "filename": "libstdc++-v3/testsuite/20_util/tuple/cons/assignment.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ftuple%2Fcons%2Fassignment.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ftuple%2Fcons%2Fassignment.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ftuple%2Fcons%2Fassignment.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -27,8 +27,6 @@ using namespace std;\n int\n main()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   tuple<> ta;\n   tuple<> tb;\n   ta = tb;"}, {"sha": "13833e74aa12373ab6559710e4cd94fbdf47ec7e", "filename": "libstdc++-v3/testsuite/20_util/tuple/cons/big_tuples.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ftuple%2Fcons%2Fbig_tuples.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ftuple%2Fcons%2Fbig_tuples.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ftuple%2Fcons%2Fbig_tuples.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -32,8 +32,6 @@ struct foo\n void\n test_constructors()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   int x1=0,x2=0;\n   const int &z1=x1;\n "}, {"sha": "dd64ef5f44fc95b0ce8a84a4c1c506ae18454060", "filename": "libstdc++-v3/testsuite/20_util/tuple/cons/constructor.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ftuple%2Fcons%2Fconstructor.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ftuple%2Fcons%2Fconstructor.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ftuple%2Fcons%2Fconstructor.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -28,8 +28,6 @@ using namespace std;\n int\n main()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   int x1=0,x2=0;\n   const int &z1=x1;\n "}, {"sha": "98f2faebb4f35a9779d309185a7a5a565d848d95", "filename": "libstdc++-v3/testsuite/20_util/tuple/creation_functions/23978.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ftuple%2Fcreation_functions%2F23978.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ftuple%2Fcreation_functions%2F23978.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ftuple%2Fcreation_functions%2F23978.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -28,8 +28,6 @@ using namespace std;\n // libstdc++/23978\n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   pair<int, int> p(1, 2);\n   int x = 0;\n   int y = 0;"}, {"sha": "4238b4efef7482ac50012a32f35d19aaf2be4dd3", "filename": "libstdc++-v3/testsuite/20_util/tuple/creation_functions/48476.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ftuple%2Fcreation_functions%2F48476.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ftuple%2Fcreation_functions%2F48476.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ftuple%2Fcreation_functions%2F48476.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -29,8 +29,6 @@ template<typename... Args1, typename... Args2>\n   void\n   check_tuple_cat(std::tuple<Args1...> t1, std::tuple<Args2...> t2)\n   {\n-    bool test __attribute__((unused)) = true;\n-\n     typedef std::tuple<Args1..., Args2...> concatenated;\n   \n     auto cat1 = std::tuple_cat(     t1,       t2 );"}, {"sha": "86b5abb7e9111eb719d301b7ddd24334b7dc6e6c", "filename": "libstdc++-v3/testsuite/20_util/tuple/creation_functions/constexpr.cc", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ftuple%2Fcreation_functions%2Fconstexpr.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ftuple%2Fcreation_functions%2Fconstexpr.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ftuple%2Fcreation_functions%2Fconstexpr.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -24,9 +24,6 @@\n \n #include <tuple>\n \n-bool test __attribute__((unused)) = true;\n-\n-\n // make_tuple\n void\n test_make_tuple()"}, {"sha": "b106741efc0ee5ed1f23a627da3b97de99ab7596", "filename": "libstdc++-v3/testsuite/20_util/tuple/creation_functions/forward_as_tuple.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ftuple%2Fcreation_functions%2Fforward_as_tuple.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ftuple%2Fcreation_functions%2Fforward_as_tuple.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ftuple%2Fcreation_functions%2Fforward_as_tuple.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -28,8 +28,6 @@\n void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::forward_as_tuple();\n \n   VERIFY( std::get<0>(std::forward_as_tuple(-1)) == -1 );"}, {"sha": "ad7f6eff3abd5745877dad2ea752c0cacb715f41", "filename": "libstdc++-v3/testsuite/20_util/tuple/creation_functions/make_tuple.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ftuple%2Fcreation_functions%2Fmake_tuple.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ftuple%2Fcreation_functions%2Fmake_tuple.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ftuple%2Fcreation_functions%2Fmake_tuple.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -28,8 +28,6 @@ using namespace std;\n int\n main()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   int i=0;\n   make_tuple(1,2,4.0);\n   make_tuple(ref(i)) = tuple<int>(1);"}, {"sha": "3a60f2cf8297d30a9017f06e7854e3658ebdd9ce", "filename": "libstdc++-v3/testsuite/20_util/tuple/creation_functions/tie.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ftuple%2Fcreation_functions%2Ftie.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ftuple%2Fcreation_functions%2Ftie.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ftuple%2Fcreation_functions%2Ftie.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -27,8 +27,6 @@ using namespace std;\n int\n main()\n {\n-  bool test __attribute__((unused)) = true; \n-\n   int x1 = 0;\n   int x2 = 0;\n   int y1 = 0;"}, {"sha": "97c58108ec9bc9a93a12e83b4bd0fb6cd7525abc", "filename": "libstdc++-v3/testsuite/20_util/tuple/creation_functions/tie2.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ftuple%2Fcreation_functions%2Ftie2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ftuple%2Fcreation_functions%2Ftie2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ftuple%2Fcreation_functions%2Ftie2.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -26,7 +26,6 @@\n int\n main()\n {\n-  bool test __attribute__((unused)) = true; \n   using namespace std;\n \n   int i;"}, {"sha": "df5e0e993d361aa0e7e233b62dfd632e9ab30611", "filename": "libstdc++-v3/testsuite/20_util/tuple/cv_tuple_size.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ftuple%2Fcv_tuple_size.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ftuple%2Fcv_tuple_size.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ftuple%2Fcv_tuple_size.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -25,7 +25,6 @@\n void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n   using namespace std;\n \n   VERIFY( tuple_size<const tuple<> >::value == 0 );"}, {"sha": "0b2b3d6e22f5a3442d51a5ef442e624820c2d39c", "filename": "libstdc++-v3/testsuite/20_util/tuple/element_access/get.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ftuple%2Felement_access%2Fget.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ftuple%2Felement_access%2Fget.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ftuple%2Felement_access%2Fget.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -27,8 +27,6 @@ using namespace std;\n int\n main()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   int j=1;\n   const int k=2;\n   tuple<int,int &,const int&> a(0,j,k);"}, {"sha": "e02e9f56329b16ee211900836c5a43ee7362138f", "filename": "libstdc++-v3/testsuite/20_util/tuple/element_access/get_by_type.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ftuple%2Felement_access%2Fget_by_type.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ftuple%2Felement_access%2Fget_by_type.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ftuple%2Felement_access%2Fget_by_type.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -27,8 +27,6 @@ using namespace std;\n int\n main()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   int j=1;\n   const int k=2;\n   tuple<int,int &,const int&> a(0,j,k);"}, {"sha": "ed88361d6d0908e1795be338b2fbc05bca87784e", "filename": "libstdc++-v3/testsuite/20_util/tuple/moveable.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ftuple%2Fmoveable.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ftuple%2Fmoveable.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ftuple%2Fmoveable.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -28,8 +28,6 @@\n \n int main()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::tuple<int, double> a(1, 2.0), b;\n   b = std::move(a);\n   VERIFY( std::get<0>(b) == 1 && std::get<1>(b) == 2.0 );"}, {"sha": "6e260c412ba78a92f30b8ce59c90b392674c0050", "filename": "libstdc++-v3/testsuite/20_util/tuple/swap.cc", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ftuple%2Fswap.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ftuple%2Fswap.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ftuple%2Fswap.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -56,8 +56,6 @@ make_move_only (int i)\n \n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::tuple<> t1, t2;\n   std::swap(t1, t2);\n \n@@ -66,8 +64,6 @@ void test01()\n \n void test02()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::tuple<int> t1(1), t2(2);\n   std::swap(t1, t2);\n   \n@@ -76,8 +72,6 @@ void test02()\n \n void test03()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::tuple<int, float> t1(1, 1.0f), t2(2, 2.0f);\n   std::swap(t1, t2);\n \n@@ -87,8 +81,6 @@ void test03()\n \n void test04()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::tuple<int, float, MoveOnly> \n     t1(1, 1.0f, make_move_only(1)), \n     t2(2, 2.0f, make_move_only(2));"}, {"sha": "14b623d2be42de6b5bdc45313d35ed2723d3cf91", "filename": "libstdc++-v3/testsuite/20_util/tuple/tuple_size.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ftuple%2Ftuple_size.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ftuple%2Ftuple_size.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ftuple%2Ftuple_size.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -27,8 +27,6 @@ using namespace std;\n int\n main()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   static_assert(tuple_size<tuple<>>::value == 0, \"\");\n   static_assert(tuple_size<tuple<int>>::value == 1, \"\");\n   static_assert(tuple_size<tuple<void>>::value == 1, \"\");"}, {"sha": "bef65ff8e0053cb04e854ae5e64cedead94ceea0", "filename": "libstdc++-v3/testsuite/20_util/typeindex/comparison_operators.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ftypeindex%2Fcomparison_operators.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ftypeindex%2Fcomparison_operators.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ftypeindex%2Fcomparison_operators.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -50,7 +50,6 @@\n \n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n   using namespace std;\n \n   class Abraca { };"}, {"sha": "56a38a1da49f25025035fb5732dcd4bd6f96cbac", "filename": "libstdc++-v3/testsuite/20_util/typeindex/hash.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ftypeindex%2Fhash.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ftypeindex%2Fhash.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ftypeindex%2Fhash.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -24,7 +24,6 @@\n \n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n   using namespace std;\n \n   class Abraca { };"}, {"sha": "1f9f9e559379d5ad85ca903cbd9d94d90f8305cb", "filename": "libstdc++-v3/testsuite/20_util/typeindex/hash_code.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ftypeindex%2Fhash_code.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ftypeindex%2Fhash_code.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ftypeindex%2Fhash_code.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -24,7 +24,6 @@\n \n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n   using namespace std;\n \n   class Abraca { };"}, {"sha": "db80b3d7287e17a626906cf39f82570079982ed9", "filename": "libstdc++-v3/testsuite/20_util/typeindex/name.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ftypeindex%2Fname.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ftypeindex%2Fname.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ftypeindex%2Fname.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -24,7 +24,6 @@\n \n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n   using namespace std;\n \n   class Abraca { };"}, {"sha": "935848ccbbf353cf5365670cb41d1676fee0a462", "filename": "libstdc++-v3/testsuite/20_util/unique_ptr/assign/48635.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Funique_ptr%2Fassign%2F48635.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Funique_ptr%2Fassign%2F48635.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Funique_ptr%2Fassign%2F48635.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -29,15 +29,13 @@ struct Deleter\n   Deleter&\n   operator=(const Deleter&)\n   {\n-    bool test __attribute__((unused)) = true;\n     VERIFY( true );\n     return *this;\n   }\n \n   Deleter&\n   operator=(Deleter&&)\n   {\n-    bool test __attribute__((unused)) = true;\n     VERIFY( false );\n     return *this;\n   }"}, {"sha": "0edd5f3286ae3e44b3ee19710c9db93819da9a53", "filename": "libstdc++-v3/testsuite/20_util/unique_ptr/assign/move.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Funique_ptr%2Fassign%2Fmove.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Funique_ptr%2Fassign%2Fmove.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Funique_ptr%2Fassign%2Fmove.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -28,8 +28,6 @@ struct D : public B {};\n void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   D *d = new D;\n   std::unique_ptr<D> p1(d);\n   std::unique_ptr<D> p2(new D);"}, {"sha": "5c06bc08827d14a8fed116642df77b13d6e3e6f8", "filename": "libstdc++-v3/testsuite/20_util/unique_ptr/assign/move_array.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Funique_ptr%2Fassign%2Fmove_array.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Funique_ptr%2Fassign%2Fmove_array.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Funique_ptr%2Fassign%2Fmove_array.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -28,8 +28,6 @@ struct D : public B {};\n void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   D *d = new D[3];\n   std::unique_ptr<D[]> p1(d);\n   std::unique_ptr<D[]> p2;"}, {"sha": "5825f96b4449ce6c1a369fc3dcb76a337cb341e5", "filename": "libstdc++-v3/testsuite/20_util/unique_ptr/assign/nullptr.cc", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Funique_ptr%2Fassign%2Fnullptr.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Funique_ptr%2Fassign%2Fnullptr.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Funique_ptr%2Fassign%2Fnullptr.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -27,8 +27,6 @@ struct A { };\n void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::unique_ptr<A> p(new A);\n   p = nullptr;\n \n@@ -38,8 +36,6 @@ test01()\n void\n test02()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::unique_ptr<A[]> p(new A[2]);\n   p = nullptr;\n "}, {"sha": "605f8ba28e1557664a86d7ba1061cf5f1180502a", "filename": "libstdc++-v3/testsuite/20_util/unique_ptr/cons/auto_ptr.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Funique_ptr%2Fcons%2Fauto_ptr.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Funique_ptr%2Fcons%2Fauto_ptr.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Funique_ptr%2Fcons%2Fauto_ptr.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -31,8 +31,6 @@ struct A { };\n void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::auto_ptr<A> a(new A);\n   std::unique_ptr<A> a2(std::move(a));\n   VERIFY( a.get() == nullptr );"}, {"sha": "4b80746d4338a42f08d0827ed94bc4e1aca75f77", "filename": "libstdc++-v3/testsuite/20_util/unique_ptr/cons/nullptr.cc", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Funique_ptr%2Fcons%2Fnullptr.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Funique_ptr%2Fcons%2Fnullptr.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Funique_ptr%2Fcons%2Fnullptr.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -27,8 +27,6 @@ struct A { };\n void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::unique_ptr<A> p = nullptr;\n \n   VERIFY( p.get() == nullptr );\n@@ -37,8 +35,6 @@ test01()\n void\n test02()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::unique_ptr<A[]> p = nullptr;\n \n   VERIFY( p.get() == nullptr );"}, {"sha": "91135ae52603c2de4465882baecfe1417ff560cf", "filename": "libstdc++-v3/testsuite/20_util/unique_ptr/cons/pointer.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Funique_ptr%2Fcons%2Fpointer.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Funique_ptr%2Fcons%2Fpointer.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Funique_ptr%2Fcons%2Fpointer.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -61,7 +61,6 @@ void\n test01()\n {\n   reset_count_struct __attribute__((unused)) reset;\n-  bool test __attribute__((unused)) = true;\n \n   std::unique_ptr<A> A_default;\n   VERIFY( A_default.get() == 0 );\n@@ -89,7 +88,6 @@ void\n test02()\n {\n   reset_count_struct __attribute__((unused)) reset;\n-  bool test __attribute__((unused)) = true;\n \n   A * const A_default = 0;\n   std::unique_ptr<A> p1(A_default);"}, {"sha": "5305e7723579d467d65e4c7be84491c6dea6ba39", "filename": "libstdc++-v3/testsuite/20_util/unique_ptr/cons/pointer_array.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Funique_ptr%2Fcons%2Fpointer_array.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Funique_ptr%2Fcons%2Fpointer_array.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Funique_ptr%2Fcons%2Fpointer_array.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -60,7 +60,6 @@ void\n test01()\n {\n   reset_count_struct __attribute__((unused)) reset;\n-  bool test __attribute__((unused)) = true;\n \n   std::unique_ptr<A[]> A_default;\n   VERIFY( A_default.get() == 0 );"}, {"sha": "2b3373edb081d3c6b25676ae06ca2f4b5d883d63", "filename": "libstdc++-v3/testsuite/20_util/unique_ptr/cons/ptr_deleter.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Funique_ptr%2Fcons%2Fptr_deleter.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Funique_ptr%2Fcons%2Fptr_deleter.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Funique_ptr%2Fcons%2Fptr_deleter.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -30,7 +30,6 @@ void vdel(int* p) { ++count; delete[] p; }\n void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n   count = 0;\n   {\n     std::unique_ptr<int, void(*)(int*)> p(nullptr, del);\n@@ -45,7 +44,6 @@ test01()\n void\n test02()\n {\n-  bool test __attribute__((unused)) = true;\n   count = 0;\n   {\n     std::unique_ptr<int[], void(*)(int*)> p(nullptr, vdel);"}, {"sha": "b47261ede9e712d673c72c8ee5cb5986e190a2a2", "filename": "libstdc++-v3/testsuite/20_util/unique_ptr/creation/array.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Funique_ptr%2Fcreation%2Farray.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Funique_ptr%2Fcreation%2Farray.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Funique_ptr%2Fcreation%2Farray.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -32,8 +32,6 @@ struct A\n void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::unique_ptr<A[]> a = std::make_unique<A[]>(3);\n   VERIFY( a != nullptr );\n   VERIFY( a[0].b && a[1].b && a[2].b );"}, {"sha": "dc7d66707117804411be9ef489faf6e2b42e0dab", "filename": "libstdc++-v3/testsuite/20_util/unique_ptr/creation/single.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Funique_ptr%2Fcreation%2Fsingle.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Funique_ptr%2Fcreation%2Fsingle.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Funique_ptr%2Fcreation%2Fsingle.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -32,8 +32,6 @@ struct A\n void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   int i = 0;\n   double d = 0;\n   char c = 0;"}, {"sha": "6fc4fdc809d3275f3abd1ad4b0c25db173bd3da7", "filename": "libstdc++-v3/testsuite/20_util/unique_ptr/hash/1.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Funique_ptr%2Fhash%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Funique_ptr%2Fhash%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Funique_ptr%2Fhash%2F1.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -24,8 +24,6 @@\n \n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   struct T { };\n \n   std::unique_ptr<T>                                 u0(new T);"}, {"sha": "1461efab523ee61a0fe7b4e7c22f575f794a1eaf", "filename": "libstdc++-v3/testsuite/20_util/unique_ptr/modifiers/43183.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Funique_ptr%2Fmodifiers%2F43183.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Funique_ptr%2Fmodifiers%2F43183.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Funique_ptr%2Fmodifiers%2F43183.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -36,8 +36,6 @@ int D::count = 0;\n \n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::unique_ptr<int, D> up;\n   up.reset();\n   VERIFY( D::count == 0 );"}, {"sha": "74cbc8735b7ac114756c72f76d2d420552da345b", "filename": "libstdc++-v3/testsuite/20_util/unique_ptr/specialized_algorithms/comparisons.cc", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Funique_ptr%2Fspecialized_algorithms%2Fcomparisons.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Funique_ptr%2Fspecialized_algorithms%2Fcomparisons.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Funique_ptr%2Fspecialized_algorithms%2Fcomparisons.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -36,8 +36,6 @@ struct B : A\n void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::unique_ptr<A> p1;\n   std::unique_ptr<A> p2;\n \n@@ -49,8 +47,6 @@ test01()\n void\n test02()\n {\n-  bool test __attribute__((unused)) = true;\n-  \n   std::unique_ptr<A> p1;\n   std::unique_ptr<A> p2(new A);\n "}, {"sha": "c5c4400c9df814f0337737638cc89ee6463392a8", "filename": "libstdc++-v3/testsuite/20_util/unique_ptr/specialized_algorithms/comparisons_array.cc", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Funique_ptr%2Fspecialized_algorithms%2Fcomparisons_array.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Funique_ptr%2Fspecialized_algorithms%2Fcomparisons_array.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Funique_ptr%2Fspecialized_algorithms%2Fcomparisons_array.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -36,8 +36,6 @@ struct B : A\n void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::unique_ptr<A[]> p1;\n   std::unique_ptr<A[]> p2;\n \n@@ -49,8 +47,6 @@ test01()\n void\n test02()\n {\n-  bool test __attribute__((unused)) = true;\n-  \n   std::unique_ptr<A[]> p1;\n   std::unique_ptr<A[]> p2(new A[3]);\n "}, {"sha": "521b34c59224256e213cec8c02e547110df31575", "filename": "libstdc++-v3/testsuite/20_util/unique_ptr/specialized_algorithms/swap.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Funique_ptr%2Fspecialized_algorithms%2Fswap.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Funique_ptr%2Fspecialized_algorithms%2Fswap.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Funique_ptr%2Fspecialized_algorithms%2Fswap.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -27,8 +27,6 @@ struct A {};\n void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n- \n   std::unique_ptr<A> p1;\n   std::unique_ptr<A> p2(new A);\n   std::unique_ptr<A> p3;"}, {"sha": "9ac4589765e9428eb959753809bc3219094a25f7", "filename": "libstdc++-v3/testsuite/20_util/uses_allocator/construction.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fuses_allocator%2Fconstruction.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fuses_allocator%2Fconstruction.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fuses_allocator%2Fconstruction.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -91,8 +91,6 @@ template<typename TestType, typename... T>\n template<typename... T>\n   void test(T... args)\n   {\n-    bool test __attribute__((unused)) = true;\n-\n     VERIFY( test2<CannotUse>(args...) );\n     VERIFY( test2<DoesNotUse>(args...) );\n     VERIFY( test2<UsesWithTag>(args...) );"}, {"sha": "46fc72f904c98a186420d72f3905e8e0f6397503", "filename": "libstdc++-v3/testsuite/20_util/uses_allocator/value.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fuses_allocator%2Fvalue.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fuses_allocator%2Fvalue.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fuses_allocator%2Fvalue.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -38,7 +38,6 @@ struct UD { typedef MyDerivedAlloc  allocator_type; };\n \n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n   using std::uses_allocator;\n   using namespace __gnu_test;\n "}, {"sha": "3a952221d4e5bc5f2be2fb391bf8664ba9e0e295", "filename": "libstdc++-v3/testsuite/20_util/variant/run.cc", "status": "modified", "additions": 0, "deletions": 36, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fvariant%2Frun.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fvariant%2Frun.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fvariant%2Frun.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -51,16 +51,12 @@ struct AlwaysThrow\n \n void default_ctor()\n {\n-  bool test [[gnu::unused]] = true;\n-\n   variant<monostate, string> v;\n   VERIFY(holds_alternative<monostate>(v));\n }\n \n void copy_ctor()\n {\n-  bool test [[gnu::unused]] = true;\n-\n   variant<monostate, string> v(\"a\");\n   VERIFY(holds_alternative<string>(v));\n   variant<monostate, string> u(v);\n@@ -70,8 +66,6 @@ void copy_ctor()\n \n void move_ctor()\n {\n-  bool test [[gnu::unused]] = true;\n-\n   variant<monostate, string> v(\"a\");\n   VERIFY(holds_alternative<string>(v));\n   variant<monostate, string> u(std::move(v));\n@@ -82,17 +76,13 @@ void move_ctor()\n \n void arbitrary_ctor()\n {\n-  bool test [[gnu::unused]] = true;\n-\n   variant<int, string> v(\"a\");\n   VERIFY(holds_alternative<string>(v));\n   VERIFY(get<1>(v) == \"a\");\n }\n \n void copy_assign()\n {\n-  bool test [[gnu::unused]] = true;\n-\n   variant<monostate, string> v(\"a\");\n   VERIFY(holds_alternative<string>(v));\n   variant<monostate, string> u;\n@@ -103,8 +93,6 @@ void copy_assign()\n \n void move_assign()\n {\n-  bool test [[gnu::unused]] = true;\n-\n   variant<monostate, string> v(\"a\");\n   VERIFY(holds_alternative<string>(v));\n   variant<monostate, string> u;\n@@ -116,8 +104,6 @@ void move_assign()\n \n void arbitrary_assign()\n {\n-  bool test [[gnu::unused]] = true;\n-\n   variant<int, string> v;\n   v = \"a\";\n \n@@ -127,8 +113,6 @@ void arbitrary_assign()\n \n void dtor()\n {\n-  bool test [[gnu::unused]] = true;\n-\n   struct A {\n       A(int& called) : called(called) {}\n       ~A() {\n@@ -150,8 +134,6 @@ void dtor()\n \n void in_place_index_ctor()\n {\n-  bool test [[gnu::unused]] = true;\n-\n   {\n     variant<int, string> v(in_place<1>, \"a\");\n     VERIFY(holds_alternative<string>(v));\n@@ -166,8 +148,6 @@ void in_place_index_ctor()\n \n void in_place_type_ctor()\n {\n-  bool test [[gnu::unused]] = true;\n-\n   {\n     variant<int, string> v(in_place<string>, \"a\");\n     VERIFY(holds_alternative<string>(v));\n@@ -206,8 +186,6 @@ namespace std\n \n void uses_allocator_ctor()\n {\n-  bool test [[gnu::unused]] = true;\n-\n   std::allocator<char> a;\n   variant<UsesAllocatable> v(std::allocator_arg, a);\n   VERIFY(get<0>(v).d == 0);\n@@ -226,8 +204,6 @@ void uses_allocator_ctor()\n \n void emplace()\n {\n-  bool test [[gnu::unused]] = true;\n-\n   variant<int, string> v;\n   v.emplace<0>(1);\n   VERIFY(get<0>(v) == 1);\n@@ -252,8 +228,6 @@ void emplace()\n \n void test_get()\n {\n-  bool test [[gnu::unused]] = true;\n-\n   VERIFY(get<1>(variant<int, string>(\"a\")) == \"a\");\n   VERIFY(get<string>(variant<int, string>(\"a\")) == \"a\");\n   {\n@@ -286,8 +260,6 @@ void test_get()\n \n void test_relational()\n {\n-  bool test [[gnu::unused]] = true;\n-\n   VERIFY((variant<int, string>(2) < variant<int, string>(3)));\n   VERIFY((variant<int, string>(3) == variant<int, string>(3)));\n   VERIFY((variant<int, string>(3) > variant<int, string>(2)));\n@@ -303,8 +275,6 @@ void test_relational()\n \n void test_swap()\n {\n-  bool test [[gnu::unused]] = true;\n-\n   variant<int, string> a(\"a\"), b(\"b\");\n   a.swap(b);\n   VERIFY(get<1>(a) == \"b\");\n@@ -316,8 +286,6 @@ void test_swap()\n \n void test_visit()\n {\n-  bool test [[gnu::unused]] = true;\n-\n   {\n     struct Visitor\n     {\n@@ -383,8 +351,6 @@ void test_visit()\n \n void test_hash()\n {\n-  bool test [[gnu::unused]] = true;\n-\n   unordered_set<variant<int, string>> s;\n   VERIFY(s.emplace(3).second);\n   VERIFY(s.emplace(\"asdf\").second);\n@@ -419,8 +385,6 @@ void test_hash()\n \n void test_valueless_by_exception()\n {\n-  bool test [[gnu::unused]] = true;\n-\n   {\n     AlwaysThrow a;\n     bool caught = false;"}, {"sha": "fd1f1625357a1499df6e3a6d1532983be5828b98", "filename": "libstdc++-v3/testsuite/20_util/weak_ptr/observers/owner_before.cc", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fweak_ptr%2Fobservers%2Fowner_before.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fweak_ptr%2Fobservers%2Fowner_before.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fweak_ptr%2Fobservers%2Fowner_before.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -30,8 +30,6 @@ struct B { };\n int\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   // test empty weak_ptrs compare equivalent\n   std::weak_ptr<A> p1;\n   std::weak_ptr<B> p2;\n@@ -47,8 +45,6 @@ test01()\n int\n test02()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::shared_ptr<A> a0;\n   std::weak_ptr<A> w0(a0);\n "}, {"sha": "6871acdda9d9f631fcb9e486ccf85feedaf21da2", "filename": "libstdc++-v3/testsuite/21_strings/basic_string/allocator/char/copy.cc", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fallocator%2Fchar%2Fcopy.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fallocator%2Fchar%2Fcopy.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fallocator%2Fchar%2Fcopy.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -30,7 +30,6 @@ using __gnu_test::propagating_allocator;\n \n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n   typedef propagating_allocator<C, false> alloc_type;\n   typedef std::basic_string<C, traits, alloc_type> test_type;\n   test_type v1(alloc_type(1));\n@@ -48,7 +47,6 @@ void test01()\n \n void test02()\n {\n-  bool test __attribute__((unused)) = true;\n   typedef propagating_allocator<C, true> alloc_type;\n   typedef std::basic_string<C, traits, alloc_type> test_type;\n   test_type v1(alloc_type(1));\n@@ -66,7 +64,6 @@ void test02()\n \n void test03()\n {\n-  bool test __attribute__((unused)) = true;\n   typedef propagating_allocator<C, true> alloc_type;\n   typedef std::basic_string<C, traits, alloc_type> test_type;\n   test_type v1(alloc_type(1));"}, {"sha": "5ab737aa90f6eab041c16787c8ed419da81dd691", "filename": "libstdc++-v3/testsuite/21_strings/basic_string/allocator/char/copy_assign.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fallocator%2Fchar%2Fcopy_assign.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fallocator%2Fchar%2Fcopy_assign.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fallocator%2Fchar%2Fcopy_assign.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -30,7 +30,6 @@ using __gnu_test::propagating_allocator;\n \n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n   typedef propagating_allocator<C, false> alloc_type;\n   typedef std::basic_string<C, traits, alloc_type> test_type;\n   test_type v1(alloc_type(1));\n@@ -66,7 +65,6 @@ void test01()\n \n void test02()\n {\n-  bool test __attribute__((unused)) = true;\n   typedef propagating_allocator<C, true> alloc_type;\n   typedef std::basic_string<C, traits, alloc_type> test_type;\n   test_type v1(alloc_type(1));"}, {"sha": "a4291f9dbb91e5b9a3be7dfa601fdf039c6f916e", "filename": "libstdc++-v3/testsuite/21_strings/basic_string/allocator/char/move.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fallocator%2Fchar%2Fmove.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fallocator%2Fchar%2Fmove.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fallocator%2Fchar%2Fmove.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -30,7 +30,6 @@ using __gnu_test::uneq_allocator;\n \n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n   typedef uneq_allocator<C> alloc_type;\n   typedef std::basic_string<C, traits, alloc_type> test_type;\n   test_type v1(alloc_type(1));\n@@ -42,7 +41,6 @@ void test01()\n \n void test02()\n {\n-  bool test __attribute__((unused)) = true;\n   typedef uneq_allocator<C> alloc_type;\n   typedef std::basic_string<C, traits, alloc_type> test_type;\n   test_type v1(alloc_type(1));"}, {"sha": "9d08f9d90fa58febf67ef129920986ac8d79ec0b", "filename": "libstdc++-v3/testsuite/21_strings/basic_string/allocator/char/move_assign.cc", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fallocator%2Fchar%2Fmove_assign.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fallocator%2Fchar%2Fmove_assign.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fallocator%2Fchar%2Fmove_assign.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -30,7 +30,6 @@ using __gnu_test::propagating_allocator;\n \n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n   typedef propagating_allocator<C, false> alloc_type;\n   typedef std::basic_string<C, traits, alloc_type> test_type;\n \n@@ -69,7 +68,6 @@ void test01()\n \n void test02()\n {\n-  bool test __attribute__((unused)) = true;\n   typedef propagating_allocator<C, true> alloc_type;\n   typedef std::basic_string<C, traits, alloc_type> test_type;\n \n@@ -108,7 +106,6 @@ void test02()\n \n void test03()\n {\n-  bool test __attribute__((unused)) = true;\n   typedef propagating_allocator<C, false> alloc_type;\n   typedef std::basic_string<C, traits, alloc_type> test_type;\n "}, {"sha": "fcee8ec60508f6ffbdbe1d4fc47d4ae13a722804", "filename": "libstdc++-v3/testsuite/21_strings/basic_string/allocator/char/swap.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fallocator%2Fchar%2Fswap.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fallocator%2Fchar%2Fswap.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fallocator%2Fchar%2Fswap.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -47,7 +47,6 @@ operator!=(const propagating_allocator<C, false>&,\n \n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n   typedef propagating_allocator<C, false> alloc_type;\n   typedef std::basic_string<C, traits, alloc_type> test_type;\n   test_type v1(alloc_type(1));\n@@ -63,7 +62,6 @@ void test01()\n \n void test02()\n {\n-  bool test __attribute__((unused)) = true;\n   typedef propagating_allocator<C, true> alloc_type;\n   typedef std::basic_string<C, traits, alloc_type> test_type;\n   test_type v1(alloc_type(1));"}, {"sha": "6bb3086bb7a43898a908405f400a6ded30ed7d48", "filename": "libstdc++-v3/testsuite/21_strings/basic_string/allocator/wchar_t/copy.cc", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fallocator%2Fwchar_t%2Fcopy.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fallocator%2Fwchar_t%2Fcopy.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fallocator%2Fwchar_t%2Fcopy.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -30,7 +30,6 @@ using __gnu_test::propagating_allocator;\n \n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n   typedef propagating_allocator<C, false> alloc_type;\n   typedef std::basic_string<C, traits, alloc_type> test_type;\n   test_type v1(alloc_type(1));\n@@ -48,7 +47,6 @@ void test01()\n \n void test02()\n {\n-  bool test __attribute__((unused)) = true;\n   typedef propagating_allocator<C, true> alloc_type;\n   typedef std::basic_string<C, traits, alloc_type> test_type;\n   test_type v1(alloc_type(1));\n@@ -66,7 +64,6 @@ void test02()\n \n void test03()\n {\n-  bool test __attribute__((unused)) = true;\n   typedef propagating_allocator<C, true> alloc_type;\n   typedef std::basic_string<C, traits, alloc_type> test_type;\n   test_type v1(alloc_type(1));"}, {"sha": "7b7372a25eeda66095e421ace7214d01ac113ac2", "filename": "libstdc++-v3/testsuite/21_strings/basic_string/allocator/wchar_t/copy_assign.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fallocator%2Fwchar_t%2Fcopy_assign.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fallocator%2Fwchar_t%2Fcopy_assign.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fallocator%2Fwchar_t%2Fcopy_assign.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -30,7 +30,6 @@ using __gnu_test::propagating_allocator;\n \n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n   typedef propagating_allocator<C, false> alloc_type;\n   typedef std::basic_string<C, traits, alloc_type> test_type;\n   test_type v1(alloc_type(1));\n@@ -66,7 +65,6 @@ void test01()\n \n void test02()\n {\n-  bool test __attribute__((unused)) = true;\n   typedef propagating_allocator<C, true> alloc_type;\n   typedef std::basic_string<C, traits, alloc_type> test_type;\n   test_type v1(alloc_type(1));"}, {"sha": "376a64abd6d8503e57fd4a231c9ca06a16a2309c", "filename": "libstdc++-v3/testsuite/21_strings/basic_string/allocator/wchar_t/move.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fallocator%2Fwchar_t%2Fmove.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fallocator%2Fwchar_t%2Fmove.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fallocator%2Fwchar_t%2Fmove.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -30,7 +30,6 @@ using __gnu_test::uneq_allocator;\n \n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n   typedef uneq_allocator<C> alloc_type;\n   typedef std::basic_string<C, traits, alloc_type> test_type;\n   test_type v1(alloc_type(1));\n@@ -42,7 +41,6 @@ void test01()\n \n void test02()\n {\n-  bool test __attribute__((unused)) = true;\n   typedef uneq_allocator<C> alloc_type;\n   typedef std::basic_string<C, traits, alloc_type> test_type;\n   test_type v1(alloc_type(1));"}, {"sha": "a8be7777a877deff31d665b0456f85ee55e07cce", "filename": "libstdc++-v3/testsuite/21_strings/basic_string/allocator/wchar_t/move_assign.cc", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fallocator%2Fwchar_t%2Fmove_assign.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fallocator%2Fwchar_t%2Fmove_assign.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fallocator%2Fwchar_t%2Fmove_assign.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -30,7 +30,6 @@ using __gnu_test::propagating_allocator;\n \n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n   typedef propagating_allocator<C, false> alloc_type;\n   typedef std::basic_string<C, traits, alloc_type> test_type;\n \n@@ -69,7 +68,6 @@ void test01()\n \n void test02()\n {\n-  bool test __attribute__((unused)) = true;\n   typedef propagating_allocator<C, true> alloc_type;\n   typedef std::basic_string<C, traits, alloc_type> test_type;\n \n@@ -108,7 +106,6 @@ void test02()\n \n void test03()\n {\n-  bool test __attribute__((unused)) = true;\n   typedef propagating_allocator<C, false> alloc_type;\n   typedef std::basic_string<C, traits, alloc_type> test_type;\n "}, {"sha": "24c1669b528060c64628979c4214400459dd2b1f", "filename": "libstdc++-v3/testsuite/21_strings/basic_string/allocator/wchar_t/swap.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fallocator%2Fwchar_t%2Fswap.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fallocator%2Fwchar_t%2Fswap.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fallocator%2Fwchar_t%2Fswap.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -47,7 +47,6 @@ operator!=(const propagating_allocator<C, false>&,\n \n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n   typedef propagating_allocator<C, false> alloc_type;\n   typedef std::basic_string<C, traits, alloc_type> test_type;\n   test_type v1(alloc_type(1));\n@@ -63,7 +62,6 @@ void test01()\n \n void test02()\n {\n-  bool test __attribute__((unused)) = true;\n   typedef propagating_allocator<C, true> alloc_type;\n   typedef std::basic_string<C, traits, alloc_type> test_type;\n   test_type v1(alloc_type(1));"}, {"sha": "2aad99caf4c3fbf658891fca64824a8013de5f6f", "filename": "libstdc++-v3/testsuite/21_strings/basic_string/capacity/1.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fcapacity%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fcapacity%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fcapacity%2F1.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -125,8 +125,6 @@ namespace std\n \n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   // non POD types : resize, capacity, reserve\n   std::basic_string< A<B> > str02;\n   typedef std::basic_string< A<B> >::size_type size_type_o;"}, {"sha": "a22d4a3427f4ddd905341e922d4341ee18ef5f33", "filename": "libstdc++-v3/testsuite/21_strings/basic_string/capacity/char/1.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fcapacity%2Fchar%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fcapacity%2Fchar%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fcapacity%2Fchar%2F1.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -25,7 +25,6 @@\n void test01()\n {\n   // POD types : resize, capacity, reserve\n-  bool test __attribute__((unused)) = true;\n   std::string str01;\n   typedef std::string::size_type size_type_s;\n "}, {"sha": "7558534076839322a6903519f5b3a2ea93ec88d0", "filename": "libstdc++-v3/testsuite/21_strings/basic_string/capacity/char/18654.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fcapacity%2Fchar%2F18654.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fcapacity%2Fchar%2F18654.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fcapacity%2Fchar%2F18654.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -32,7 +32,6 @@\n void test01()\n {\n   using namespace std;\n-  bool test __attribute__((unused)) = true;\n \n   typedef string::size_type size_type;\n "}, {"sha": "95d9a6744464a68ff985e9eaca0fa511c5c1d3ab", "filename": "libstdc++-v3/testsuite/21_strings/basic_string/capacity/char/2.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fcapacity%2Fchar%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fcapacity%2Fchar%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fcapacity%2Fchar%2F2.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -26,8 +26,6 @@\n // http://gcc.gnu.org/ml/libstdc++/2001-11/msg00150.html\n void test02()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::string str01 = \"twelve chars\";\n   // str01 becomes shared\n   std::string str02 = str01;"}, {"sha": "609ea4c2ec522db9ab5024d50571c78e6bd77a0f", "filename": "libstdc++-v3/testsuite/21_strings/basic_string/capacity/char/shrink_to_fit.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fcapacity%2Fchar%2Fshrink_to_fit.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fcapacity%2Fchar%2Fshrink_to_fit.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fcapacity%2Fchar%2Fshrink_to_fit.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -25,8 +25,6 @@\n // libstdc++/42573\n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::string s(100, 'a');\n   s.push_back('b');\n   s.push_back('b');"}, {"sha": "7542855f5f88e56c0a43d92634e8b0d963c2c04f", "filename": "libstdc++-v3/testsuite/21_strings/basic_string/capacity/wchar_t/1.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fcapacity%2Fwchar_t%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fcapacity%2Fwchar_t%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fcapacity%2Fwchar_t%2F1.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -25,7 +25,6 @@\n void test01()\n {\n   // POD types : resize, capacity, reserve\n-  bool test __attribute__((unused)) = true;\n   std::wstring str01;\n   typedef std::wstring::size_type size_type_s;\n "}, {"sha": "d249f22b7549aeef8d9ec82fded964914817235c", "filename": "libstdc++-v3/testsuite/21_strings/basic_string/capacity/wchar_t/18654.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fcapacity%2Fwchar_t%2F18654.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fcapacity%2Fwchar_t%2F18654.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fcapacity%2Fwchar_t%2F18654.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -32,7 +32,6 @@\n void test01()\n {\n   using namespace std;\n-  bool test __attribute__((unused)) = true;\n \n   typedef wstring::size_type size_type;\n "}, {"sha": "9207e5b17a6e6dfaf4cf4198d65b1e6a33719477", "filename": "libstdc++-v3/testsuite/21_strings/basic_string/capacity/wchar_t/2.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fcapacity%2Fwchar_t%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fcapacity%2Fwchar_t%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fcapacity%2Fwchar_t%2F2.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -26,8 +26,6 @@\n // http://gcc.gnu.org/ml/libstdc++/2001-11/msg00150.html\n void test02()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::wstring str01 = L\"twelve chars\";\n   // str01 becomes shared\n   std::wstring str02 = str01;"}, {"sha": "fa2840010513664ab0819eb128592efdbeca68a9", "filename": "libstdc++-v3/testsuite/21_strings/basic_string/capacity/wchar_t/shrink_to_fit.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fcapacity%2Fwchar_t%2Fshrink_to_fit.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fcapacity%2Fwchar_t%2Fshrink_to_fit.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fcapacity%2Fwchar_t%2Fshrink_to_fit.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -25,8 +25,6 @@\n // libstdc++/42573\n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::wstring s(100, L'a');\n   s.push_back(L'b');\n   s.push_back(L'b');"}, {"sha": "9d04df61c495558a42f12fb5dc8feeb8481664a2", "filename": "libstdc++-v3/testsuite/21_strings/basic_string/cons/char/1.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fcons%2Fchar%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fcons%2Fchar%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fcons%2Fchar%2F1.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -26,7 +26,6 @@\n \n void test01(void)\n {\n-  bool test __attribute__((unused)) = true;\n   typedef std::string::size_type csize_type;\n   typedef std::string::iterator citerator;\n   csize_type npos = std::string::npos;"}, {"sha": "b2ae7a071a873341713df8dbc3e0bc357617d85a", "filename": "libstdc++-v3/testsuite/21_strings/basic_string/cons/char/2.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fcons%2Fchar%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fcons%2Fchar%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fcons%2Fchar%2F2.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -24,8 +24,6 @@\n \n void test02()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   // template<typename _InputIter>\n   //   basic_string(_InputIter begin, _InputIter end, const allocator& a)\n   // where _InputIter is integral [21.3.1 para 15]"}, {"sha": "dfb9f21ab496299efa644ced20e5442dd4f3e3a0", "filename": "libstdc++-v3/testsuite/21_strings/basic_string/cons/char/3.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fcons%2Fchar%2F3.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fcons%2Fchar%2F3.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fcons%2Fchar%2F3.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -26,7 +26,6 @@\n \n void test03()\n {\n-  bool test __attribute__((unused)) = true;\n   const char* with_nulls = \"This contains \\0 a zero byte.\";\n \n   // These are tests to see how basic_string handles data with NUL"}, {"sha": "b25ebeab3812d42f123ac0c4638c40f8862d156b", "filename": "libstdc++-v3/testsuite/21_strings/basic_string/cons/char/4.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fcons%2Fchar%2F4.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fcons%2Fchar%2F4.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fcons%2Fchar%2F4.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -25,8 +25,6 @@\n // http://gcc.gnu.org/ml/libstdc++/2002-06/msg00025.html\n void test04()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::string str01(\"portofino\");\n \n   std::string::reverse_iterator i1 = str01.rbegin();"}, {"sha": "6edcd8a7deb74d451bee3b56ca3413cf2d28ecae", "filename": "libstdc++-v3/testsuite/21_strings/basic_string/cons/char/42261.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fcons%2Fchar%2F42261.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fcons%2Fchar%2F42261.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fcons%2Fchar%2F42261.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -21,7 +21,6 @@\n // libstdc++/42261\n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n   using namespace std;\n \n   const string s(string::size_type(6), string::size_type('f'));"}, {"sha": "2262d219333765a5f04217bae04ae4c11f1717f7", "filename": "libstdc++-v3/testsuite/21_strings/basic_string/cons/char/5.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fcons%2Fchar%2F5.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fcons%2Fchar%2F5.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fcons%2Fchar%2F5.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -26,8 +26,6 @@\n // libstdc++/8347\n void test05()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::vector<char> empty;\n   std::string empty2(empty.begin(), empty.end());\n "}, {"sha": "9c0932c317e4332a39cb7f274d142436b0ba4b5e", "filename": "libstdc++-v3/testsuite/21_strings/basic_string/cons/char/6.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fcons%2Fchar%2F6.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fcons%2Fchar%2F6.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fcons%2Fchar%2F6.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -36,8 +36,6 @@ string data(long len)\n \n void test01(int iter)\n {\n-  bool test __attribute__((unused)) = true;\n-\n   for (long i = 0, j = 1; i < iter; ++i, j *= 3)\n     {\n       istringstream isstr(data(j));"}, {"sha": "a7f575f217ebbef277d0d57444d6cf7124c3c4c5", "filename": "libstdc++-v3/testsuite/21_strings/basic_string/cons/char/7.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fcons%2Fchar%2F7.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fcons%2Fchar%2F7.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fcons%2Fchar%2F7.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -24,8 +24,6 @@\n \n void test02()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::string_view s(\"foo\");\n   std::string s2(s);\n   "}, {"sha": "64475d087798e925ffe16caf372885165e326ef3", "filename": "libstdc++-v3/testsuite/21_strings/basic_string/cons/char/8.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fcons%2Fchar%2F8.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fcons%2Fchar%2F8.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fcons%2Fchar%2F8.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -30,8 +30,6 @@ construct(Args&&... args)\n void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   using string = std::string;\n   using list = std::initializer_list<string::value_type>;\n "}, {"sha": "e3ed5e840e8236f8f81fdcaf8e1e28ac16b3ba01", "filename": "libstdc++-v3/testsuite/21_strings/basic_string/cons/char/moveable.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fcons%2Fchar%2Fmoveable.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fcons%2Fchar%2Fmoveable.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fcons%2Fchar%2Fmoveable.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -28,8 +28,6 @@\n \n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::string a, b;\n   a.push_back('1');\n   b = std::move(a);"}, {"sha": "84442ebe7a4b27828657d09047e7f4bb76532144", "filename": "libstdc++-v3/testsuite/21_strings/basic_string/cons/char/moveable2.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fcons%2Fchar%2Fmoveable2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fcons%2Fchar%2Fmoveable2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fcons%2Fchar%2Fmoveable2.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -37,8 +37,6 @@ class tstring : public std::basic_string<char>\n \n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   tstring a, b;\n   a.push_back('1');\n   b = std::move(a);"}, {"sha": "8b10a0ebae212c89e955d440b0972d92f54c8be8", "filename": "libstdc++-v3/testsuite/21_strings/basic_string/cons/wchar_t/1.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fcons%2Fwchar_t%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fcons%2Fwchar_t%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fcons%2Fwchar_t%2F1.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -26,7 +26,6 @@\n \n void test01(void)\n {\n-  bool test __attribute__((unused)) = true;\n   typedef std::wstring::size_type csize_type;\n   typedef std::wstring::iterator citerator;\n   csize_type npos = std::wstring::npos;"}, {"sha": "1772022b22c8fb81d93eefd05d420d8243f70276", "filename": "libstdc++-v3/testsuite/21_strings/basic_string/cons/wchar_t/2.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fcons%2Fwchar_t%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fcons%2Fwchar_t%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fcons%2Fwchar_t%2F2.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -24,8 +24,6 @@\n \n void test02()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   // template<typename _InputIter>\n   //   basic_string(_InputIter begin, _InputIter end, const allocator& a)\n   // where _InputIter is integral [21.3.1 para 15]"}, {"sha": "6d2c2edfb5be98d6fa7b7af6d02c3e57e230edeb", "filename": "libstdc++-v3/testsuite/21_strings/basic_string/cons/wchar_t/3.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fcons%2Fwchar_t%2F3.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fcons%2Fwchar_t%2F3.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fcons%2Fwchar_t%2F3.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -26,7 +26,6 @@\n \n void test03()\n {\n-  bool test __attribute__((unused)) = true;\n   const wchar_t* with_nulls = L\"This contains \\0 a zero byte.\";\n \n   // These are tests to see how basic_string handles data with NUL"}, {"sha": "40a481d93743008dba46aacc468b68649f021691", "filename": "libstdc++-v3/testsuite/21_strings/basic_string/cons/wchar_t/4.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fcons%2Fwchar_t%2F4.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fcons%2Fwchar_t%2F4.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fcons%2Fwchar_t%2F4.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -25,8 +25,6 @@\n // http://gcc.gnu.org/ml/libstdc++/2002-06/msg00025.html\n void test04()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::wstring str01(L\"portofino\");\n \n   std::wstring::reverse_iterator i1 = str01.rbegin();"}, {"sha": "ca214739b6fb017ddc0271e51a6671d9c8ae5eab", "filename": "libstdc++-v3/testsuite/21_strings/basic_string/cons/wchar_t/42261.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fcons%2Fwchar_t%2F42261.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fcons%2Fwchar_t%2F42261.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fcons%2Fwchar_t%2F42261.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -21,7 +21,6 @@\n // libstdc++/42261\n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n   using namespace std;\n \n   const wstring s(wstring::size_type(6), wstring::size_type(L'f'));"}, {"sha": "7dfd76e80575b3a66b3a00597c1716c35cfb0225", "filename": "libstdc++-v3/testsuite/21_strings/basic_string/cons/wchar_t/5.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fcons%2Fwchar_t%2F5.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fcons%2Fwchar_t%2F5.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fcons%2Fwchar_t%2F5.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -26,8 +26,6 @@\n // libstdc++/8347\n void test05()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::vector<wchar_t> empty;\n   std::wstring empty2(empty.begin(), empty.end());\n "}, {"sha": "4c37360d299b0f6bb91aa16414cd885f18066d9b", "filename": "libstdc++-v3/testsuite/21_strings/basic_string/cons/wchar_t/6.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fcons%2Fwchar_t%2F6.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fcons%2Fwchar_t%2F6.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fcons%2Fwchar_t%2F6.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -42,8 +42,6 @@ wstring data(long len)\n \n void test01(int iter)\n {\n-  bool test __attribute__((unused)) = true;\n-\n   for (long i = 0, j = 1; i < iter; ++i, j *= 3)\n     {\n       wistringstream isstr(data(j));"}, {"sha": "33ce39ecaa465b6b018394b9729e53abae9a77bd", "filename": "libstdc++-v3/testsuite/21_strings/basic_string/cons/wchar_t/7.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fcons%2Fwchar_t%2F7.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fcons%2Fwchar_t%2F7.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fcons%2Fwchar_t%2F7.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -24,8 +24,6 @@\n \n void test02()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::wstring_view s(L\"foo\");\n   std::wstring s2(s);\n   "}, {"sha": "146ba2d31b08165781ce659a08ff3f06d0055edd", "filename": "libstdc++-v3/testsuite/21_strings/basic_string/cons/wchar_t/8.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fcons%2Fwchar_t%2F8.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fcons%2Fwchar_t%2F8.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fcons%2Fwchar_t%2F8.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -30,8 +30,6 @@ construct(Args&&... args)\n void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   using string = std::wstring;\n   using list = std::initializer_list<string::value_type>;\n "}, {"sha": "2f2ca4c8f878892e1d9c97093e6d1e1e6e21e973", "filename": "libstdc++-v3/testsuite/21_strings/basic_string/cons/wchar_t/moveable.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fcons%2Fwchar_t%2Fmoveable.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fcons%2Fwchar_t%2Fmoveable.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fcons%2Fwchar_t%2Fmoveable.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -28,8 +28,6 @@\n \n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::wstring a, b;\n   a.push_back(L'1');\n   b = std::move(a);"}, {"sha": "cfd39305621b410fa60321bade7768ab5f2fa4b1", "filename": "libstdc++-v3/testsuite/21_strings/basic_string/cons/wchar_t/moveable2.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fcons%2Fwchar_t%2Fmoveable2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fcons%2Fwchar_t%2Fmoveable2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fcons%2Fwchar_t%2Fmoveable2.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -37,8 +37,6 @@ class twstring : public std::basic_string<wchar_t>\n \n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   twstring a, b;\n   a.push_back(L'1');\n   b = std::move(a);"}, {"sha": "0d4149487d4519c98248531035a8504120d12029", "filename": "libstdc++-v3/testsuite/21_strings/basic_string/element_access/char/1.cc", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Felement_access%2Fchar%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Felement_access%2Fchar%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Felement_access%2Fchar%2F1.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -23,9 +23,8 @@\n #include <stdexcept>\n #include <testsuite_hooks.h>\n \n-bool test01(void)\n+void test01(void)\n {\n-  bool test __attribute__((unused)) = true;\n   typedef std::string::size_type csize_type;\n   typedef std::string::const_reference cref;\n   typedef std::string::reference ref;\n@@ -78,7 +77,6 @@ bool test01(void)\n   catch(...) {\n     VERIFY( false );\n   }\n-  return test;\n }\n \n int main()"}, {"sha": "c6436161397aa6f69ba73d46d1352822c2f7be55", "filename": "libstdc++-v3/testsuite/21_strings/basic_string/element_access/char/2.cc", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Felement_access%2Fchar%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Felement_access%2Fchar%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Felement_access%2Fchar%2F2.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -26,9 +26,8 @@\n // Do a quick sanity check on known problems with element access and\n // ref-counted strings. These should all pass, regardless of the\n // underlying string implementation, of course.\n-bool test01(void)\n+void test01(void)\n {\n-  bool test __attribute__((unused)) = true;\n   typedef std::string::size_type csize_type;\n   typedef std::string::iterator siterator;\n   typedef std::string::reverse_iterator sriterator;\n@@ -100,7 +99,6 @@ bool test01(void)\n   VERIFY( str03[0] == 'x' );\n \n   // need to also test for const begin/const end\n-  return test;\n }\n \n int main()"}, {"sha": "1347607a5dcb0fd2b7b1fac03f9c74f586100c94", "filename": "libstdc++-v3/testsuite/21_strings/basic_string/element_access/char/3.cc", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Felement_access%2Fchar%2F3.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Felement_access%2Fchar%2F3.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Felement_access%2Fchar%2F3.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -25,9 +25,8 @@\n \n // Do another sanity check, this time for member functions that return\n // iterators, namely insert and erase.\n-bool test02(void)\n+void test02(void)\n {\n-  bool test __attribute__((unused)) = true;\n   typedef std::string::size_type csize_type;\n   typedef std::string::iterator siterator;\n   typedef std::string::reverse_iterator sriterator;\n@@ -73,7 +72,6 @@ bool test02(void)\n   std::string str13 = str12;\n   *p2 = 'e';\n   VERIFY( str12 != str13 );\n-  return test;\n }\n \n int main()"}, {"sha": "dc8f50fe5202e4c240066027a24aa3ba036b61ac", "filename": "libstdc++-v3/testsuite/21_strings/basic_string/element_access/char/4.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Felement_access%2Fchar%2F4.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Felement_access%2Fchar%2F4.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Felement_access%2Fchar%2F4.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -25,7 +25,6 @@\n // http://gcc.gnu.org/ml/libstdc++/2004-01/msg00184.html\n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n   using namespace std;\n \n   for (int i = 0; i < 2000; ++i)"}, {"sha": "c2ea0fa77443971a22c4d0baa38c47e45e85d47d", "filename": "libstdc++-v3/testsuite/21_strings/basic_string/element_access/char/58163.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Felement_access%2Fchar%2F58163.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Felement_access%2Fchar%2F58163.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Felement_access%2Fchar%2F58163.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -24,8 +24,6 @@\n // PR c++/58163\n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   const std::string cs;\n         std::string  s;\n "}, {"sha": "bedc4d366b8649b389c3c12a5c53fdf8cc43c9dd", "filename": "libstdc++-v3/testsuite/21_strings/basic_string/element_access/char/empty.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Felement_access%2Fchar%2Fempty.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Felement_access%2Fchar%2Fempty.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Felement_access%2Fchar%2Fempty.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -22,8 +22,6 @@\n // as per 21.3.4\n int main()\n {\n-  bool test __attribute__((unused)) = true;\n-  \n   {\n     std::string empty;\n     char c = empty[0];"}, {"sha": "8761cb22b66d54cf6e17da5a4f5dbf3e598bb9b1", "filename": "libstdc++-v3/testsuite/21_strings/basic_string/element_access/char/front_back.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Felement_access%2Fchar%2Ffront_back.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Felement_access%2Fchar%2Ffront_back.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Felement_access%2Fchar%2Ffront_back.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -25,8 +25,6 @@\n \n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::string str(\"ramifications\");\n   const std::string cstr(\"melodien\");\n "}, {"sha": "bdaef8547e0bc7b121d0ab04b0fb6078d5f16f6f", "filename": "libstdc++-v3/testsuite/21_strings/basic_string/element_access/wchar_t/1.cc", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Felement_access%2Fwchar_t%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Felement_access%2Fwchar_t%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Felement_access%2Fwchar_t%2F1.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -23,9 +23,8 @@\n #include <stdexcept>\n #include <testsuite_hooks.h>\n \n-bool test01(void)\n+void test01(void)\n {\n-  bool test __attribute__((unused)) = true;\n   typedef std::wstring::size_type csize_type;\n   typedef std::wstring::const_reference cref;\n   typedef std::wstring::reference ref;\n@@ -78,7 +77,6 @@ bool test01(void)\n   catch(...) {\n     VERIFY( false );\n   }\n-  return test;\n }\n \n int main()"}, {"sha": "2f93dbf641910933cc8cf33f564b2d9934d1daf5", "filename": "libstdc++-v3/testsuite/21_strings/basic_string/element_access/wchar_t/2.cc", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Felement_access%2Fwchar_t%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Felement_access%2Fwchar_t%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Felement_access%2Fwchar_t%2F2.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -26,9 +26,8 @@\n // Do a quick sanity check on known problems with element access and\n // ref-counted strings. These should all pass, regardless of the\n // underlying string implementation, of course.\n-bool test01(void)\n+void test01(void)\n {\n-  bool test __attribute__((unused)) = true;\n   typedef std::wstring::size_type csize_type;\n   typedef std::wstring::iterator siterator;\n   typedef std::wstring::reverse_iterator sriterator;\n@@ -100,8 +99,6 @@ bool test01(void)\n   VERIFY( str03[0] == L'x' );\n \n   // need to also test for const begin/const end\n-  VERIFY(test);\n-  return test;\n }\n \n int main()"}, {"sha": "5a1e4fdffa117dfe74a7164c5a70e8ff63cae427", "filename": "libstdc++-v3/testsuite/21_strings/basic_string/element_access/wchar_t/3.cc", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Felement_access%2Fwchar_t%2F3.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Felement_access%2Fwchar_t%2F3.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Felement_access%2Fwchar_t%2F3.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -25,9 +25,8 @@\n \n // Do another sanity check, this time for member functions that return\n // iterators, namely insert and erase.\n-bool test02(void)\n+void test02(void)\n {\n-  bool test __attribute__((unused)) = true;\n   typedef std::wstring::size_type csize_type;\n   typedef std::wstring::iterator siterator;\n   typedef std::wstring::reverse_iterator sriterator;\n@@ -73,7 +72,6 @@ bool test02(void)\n   std::wstring str13 = str12;\n   *p2 = L'e';\n   VERIFY( str12 != str13 );\n-  return test;\n }\n \n int main()"}, {"sha": "f4a9b92eb1fecb3d770a6d9899203df2684bfffb", "filename": "libstdc++-v3/testsuite/21_strings/basic_string/element_access/wchar_t/4.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Felement_access%2Fwchar_t%2F4.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Felement_access%2Fwchar_t%2F4.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Felement_access%2Fwchar_t%2F4.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -25,7 +25,6 @@\n // http://gcc.gnu.org/ml/libstdc++/2004-01/msg00184.html\n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n   using namespace std;\n \n   for (int i = 0; i < 2000; ++i)"}, {"sha": "749fd49771db6844695f28f156f8dc19dffdffd2", "filename": "libstdc++-v3/testsuite/21_strings/basic_string/element_access/wchar_t/58163.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Felement_access%2Fwchar_t%2F58163.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Felement_access%2Fwchar_t%2F58163.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Felement_access%2Fwchar_t%2F58163.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -24,8 +24,6 @@\n // PR c++/58163\n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   const std::wstring cs;\n         std::wstring  s;\n "}, {"sha": "11b8d32c5191d64e7c2ab95a3b606d29eb2c7f88", "filename": "libstdc++-v3/testsuite/21_strings/basic_string/element_access/wchar_t/empty.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Felement_access%2Fwchar_t%2Fempty.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Felement_access%2Fwchar_t%2Fempty.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Felement_access%2Fwchar_t%2Fempty.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -22,8 +22,6 @@\n // as per 21.3.4\n int main()\n {\n-  bool test __attribute__((unused)) = true;\n-  \n   {\n     std::wstring empty;\n     wchar_t c = empty[0];"}, {"sha": "d73dc952a09e22072852723fa429ba6aedc32769", "filename": "libstdc++-v3/testsuite/21_strings/basic_string/element_access/wchar_t/front_back.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Felement_access%2Fwchar_t%2Ffront_back.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Felement_access%2Fwchar_t%2Ffront_back.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Felement_access%2Fwchar_t%2Ffront_back.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -25,8 +25,6 @@\n \n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::wstring str(L\"ramifications\");\n   const std::wstring cstr(L\"melodien\");\n "}, {"sha": "1295d3cf37f49b64cd9b3558b2d86cf04b551af3", "filename": "libstdc++-v3/testsuite/21_strings/basic_string/init-list.cc", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Finit-list.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118c8424411e7a9a250bdf7ea7ac1975ffe31477/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Finit-list.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Finit-list.cc?ref=118c8424411e7a9a250bdf7ea7ac1975ffe31477", "patch": "@@ -23,10 +23,8 @@\n \n using namespace std;\n \n-int test01(void)\n+void test01(void)\n {\n-  bool test = true;\n-\n   string s1 = { 'a', 'b', 'c' };\n   VERIFY(s1 == \"abc\");\n \n@@ -60,8 +58,6 @@ int test01(void)\n   i2 = i1+6;\n   s1.replace(i1, i2, { 'y', 'z' });\n   VERIFY(s1 == \"mnyzo\");\n-\n-  return test;\n }\n \n int main()"}]}