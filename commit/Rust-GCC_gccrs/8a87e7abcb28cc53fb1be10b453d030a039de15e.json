{"sha": "8a87e7abcb28cc53fb1be10b453d030a039de15e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGE4N2U3YWJjYjI4Y2M1M2ZiMWJlMTBiNDUzZDAzMGEwMzlkZTE1ZQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2011-03-30T12:36:18Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2011-03-30T12:36:18Z"}, "message": "re PR c/48305 (ice at -O0: verify_gimple failed)\n\n\tPR c/48305\n\t* fold-const.c (fold_binary_loc) <case EQ_EXPR, NE_EXPR>: Make sure\n\targ10/arg11 in (X ^ Y) == (Z ^ W) are always fold converted to\n\tmatching arg00/arg01 types.\n\n\t* gcc.c-torture/compile/pr48305.c: New test.\n\nFrom-SVN: r171723", "tree": {"sha": "e7880e3c3edf324e2b6001c06571ddb2f5245a1c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e7880e3c3edf324e2b6001c06571ddb2f5245a1c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8a87e7abcb28cc53fb1be10b453d030a039de15e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8a87e7abcb28cc53fb1be10b453d030a039de15e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8a87e7abcb28cc53fb1be10b453d030a039de15e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8a87e7abcb28cc53fb1be10b453d030a039de15e/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "12486e033e1e90f999a8d88fa5756828c22db662", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/12486e033e1e90f999a8d88fa5756828c22db662", "html_url": "https://github.com/Rust-GCC/gccrs/commit/12486e033e1e90f999a8d88fa5756828c22db662"}], "stats": {"total": 35, "additions": 31, "deletions": 4}, "files": [{"sha": "9458d99393e4c6db6478f51be460a5a605cd60c6", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a87e7abcb28cc53fb1be10b453d030a039de15e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a87e7abcb28cc53fb1be10b453d030a039de15e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8a87e7abcb28cc53fb1be10b453d030a039de15e", "patch": "@@ -1,3 +1,10 @@\n+2011-03-30  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c/48305\n+\t* fold-const.c (fold_binary_loc) <case EQ_EXPR, NE_EXPR>: Make sure\n+\targ10/arg11 in (X ^ Y) == (Z ^ W) are always fold converted to\n+\tmatching arg00/arg01 types.\n+\n 2011-03-30  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* cfglayout.c (insn_locators_alloc): Initialize curr_location and"}, {"sha": "0c0420d043c379feabb32ccef8db2233543330fe", "filename": "gcc/fold-const.c", "status": "modified", "additions": 12, "deletions": 4, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a87e7abcb28cc53fb1be10b453d030a039de15e/gcc%2Ffold-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a87e7abcb28cc53fb1be10b453d030a039de15e/gcc%2Ffold-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const.c?ref=8a87e7abcb28cc53fb1be10b453d030a039de15e", "patch": "@@ -12606,13 +12606,21 @@ fold_binary_loc (location_t loc,\n \t     operand_equal_p guarantees no side-effects so we don't need\n \t     to use omit_one_operand on Z.  */\n \t  if (operand_equal_p (arg01, arg11, 0))\n-\t    return fold_build2_loc (loc, code, type, arg00, arg10);\n+\t    return fold_build2_loc (loc, code, type, arg00,\n+\t\t\t\t    fold_convert_loc (loc, TREE_TYPE (arg00),\n+\t\t\t\t\t\t      arg10));\n \t  if (operand_equal_p (arg01, arg10, 0))\n-\t    return fold_build2_loc (loc, code, type, arg00, arg11);\n+\t    return fold_build2_loc (loc, code, type, arg00,\n+\t\t\t\t    fold_convert_loc (loc, TREE_TYPE (arg00),\n+\t\t\t\t\t\t      arg11));\n \t  if (operand_equal_p (arg00, arg11, 0))\n-\t    return fold_build2_loc (loc, code, type, arg01, arg10);\n+\t    return fold_build2_loc (loc, code, type, arg01,\n+\t\t\t\t    fold_convert_loc (loc, TREE_TYPE (arg01),\n+\t\t\t\t\t\t      arg10));\n \t  if (operand_equal_p (arg00, arg10, 0))\n-\t    return fold_build2_loc (loc, code, type, arg01, arg11);\n+\t    return fold_build2_loc (loc, code, type, arg01,\n+\t\t\t\t    fold_convert_loc (loc, TREE_TYPE (arg01),\n+\t\t\t\t\t\t      arg11));\n \n \t  /* Optimize (X ^ C1) op (Y ^ C2) as (X ^ (C1 ^ C2)) op Y.  */\n \t  if (TREE_CODE (arg01) == INTEGER_CST"}, {"sha": "52fbcaaec650aaff2b2dabd5763168cffd35b7cf", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a87e7abcb28cc53fb1be10b453d030a039de15e/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a87e7abcb28cc53fb1be10b453d030a039de15e/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=8a87e7abcb28cc53fb1be10b453d030a039de15e", "patch": "@@ -1,3 +1,8 @@\n+2011-03-30  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c/48305\n+\t* gcc.c-torture/compile/pr48305.c: New test.\n+\n 2011-03-29  Jason Merrill  <jason@redhat.com>\n \n \t* g++.dg/cpp0x/regress/value-dep1.C: New."}, {"sha": "aaec71c52a319456b3478143e26d273255fe4f13", "filename": "gcc/testsuite/gcc.c-torture/compile/pr48305.c", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a87e7abcb28cc53fb1be10b453d030a039de15e/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr48305.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a87e7abcb28cc53fb1be10b453d030a039de15e/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr48305.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr48305.c?ref=8a87e7abcb28cc53fb1be10b453d030a039de15e", "patch": "@@ -0,0 +1,7 @@\n+/* PR c/48305 */\n+\n+int\n+foo (int x)\n+{\n+  return (x ^ 1) == (x ^ 1U);\n+}"}]}