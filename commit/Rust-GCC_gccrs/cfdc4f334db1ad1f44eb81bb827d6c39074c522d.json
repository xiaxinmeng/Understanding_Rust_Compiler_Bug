{"sha": "cfdc4f334db1ad1f44eb81bb827d6c39074c522d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2ZkYzRmMzM0ZGIxYWQxZjQ0ZWI4MWJiODI3ZDZjMzkwNzRjNTIyZA==", "commit": {"author": {"name": "Marc Glisse", "email": "marc.glisse@inria.fr", "date": "2015-04-14T08:49:16Z"}, "committer": {"name": "Marc Glisse", "email": "glisse@gcc.gnu.org", "date": "2015-04-14T08:49:16Z"}, "message": "re PR other/63387 (Optimize pairs of isnan() calls into a single isunordered())\n\n2015-04-14  Marc Glisse  <marc.glisse@inria.fr>\n\n\tPR tree-optimization/63387\ngcc/\n\t* match.pd ((x unord x) | (y unord y) -> (x unord y),\n\t(x unord x) | (x unord y) -> (x unord y)): New simplifications.\ngcc/testsuite/\n\t* gcc.dg/pr63387.c: New testcase.\n\nFrom-SVN: r222077", "tree": {"sha": "303b6ee944e7bb83cf7f5c1426ae476c4d0d8585", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/303b6ee944e7bb83cf7f5c1426ae476c4d0d8585"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cfdc4f334db1ad1f44eb81bb827d6c39074c522d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cfdc4f334db1ad1f44eb81bb827d6c39074c522d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cfdc4f334db1ad1f44eb81bb827d6c39074c522d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cfdc4f334db1ad1f44eb81bb827d6c39074c522d/comments", "author": {"login": "mglisse", "id": 10097863, "node_id": "MDQ6VXNlcjEwMDk3ODYz", "avatar_url": "https://avatars.githubusercontent.com/u/10097863?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mglisse", "html_url": "https://github.com/mglisse", "followers_url": "https://api.github.com/users/mglisse/followers", "following_url": "https://api.github.com/users/mglisse/following{/other_user}", "gists_url": "https://api.github.com/users/mglisse/gists{/gist_id}", "starred_url": "https://api.github.com/users/mglisse/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mglisse/subscriptions", "organizations_url": "https://api.github.com/users/mglisse/orgs", "repos_url": "https://api.github.com/users/mglisse/repos", "events_url": "https://api.github.com/users/mglisse/events{/privacy}", "received_events_url": "https://api.github.com/users/mglisse/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "55d2ee5737e56cec20646bc378cb7e7ad2ecb02d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/55d2ee5737e56cec20646bc378cb7e7ad2ecb02d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/55d2ee5737e56cec20646bc378cb7e7ad2ecb02d"}], "stats": {"total": 46, "additions": 46, "deletions": 0}, "files": [{"sha": "f44fd64533a4521679276d2c2dcf89973bd776c3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cfdc4f334db1ad1f44eb81bb827d6c39074c522d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cfdc4f334db1ad1f44eb81bb827d6c39074c522d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=cfdc4f334db1ad1f44eb81bb827d6c39074c522d", "patch": "@@ -1,3 +1,9 @@\n+2015-04-14  Marc Glisse  <marc.glisse@inria.fr>\n+\n+\tPR tree-optimization/63387\n+\t* match.pd ((x unord x) | (y unord y) -> (x unord y),\n+\t(x unord x) | (x unord y) -> (x unord y)): New simplifications.\n+\n 2015-04-14  Uros Bizjak  <ubizjak@gmail.com>\n \n \t* config/i386/predicates.md (any_QIreg_operand): Rename from"}, {"sha": "fc374de4121b98d990c336f1348f4b743157bfb6", "filename": "gcc/match.pd", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cfdc4f334db1ad1f44eb81bb827d6c39074c522d/gcc%2Fmatch.pd", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cfdc4f334db1ad1f44eb81bb827d6c39074c522d/gcc%2Fmatch.pd", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmatch.pd?ref=cfdc4f334db1ad1f44eb81bb827d6c39074c522d", "patch": "@@ -932,6 +932,15 @@ along with GCC; see the file COPYING3.  If not see\n    (if (ic == ncmp)\n     (ncmp @0 @1)))))\n \n+/* Unordered tests if either argument is a NaN.  */\n+(simplify\n+ (bit_ior (unordered @0 @0) (unordered @1 @1))\n+ (if ((GIMPLE && types_compatible_p (TREE_TYPE (@0), TREE_TYPE (@1)))\n+      || (GENERIC && TREE_TYPE (@0) == TREE_TYPE (@1)))\n+  (unordered @0 @1)))\n+(simplify\n+ (bit_ior:c (unordered @0 @0) (unordered:c@2 @0 @1))\n+ @2)\n \n /* Simplification of math builtins.  */\n "}, {"sha": "aec780ba1325414442bfc5c3c521b865980aeb4f", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cfdc4f334db1ad1f44eb81bb827d6c39074c522d/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cfdc4f334db1ad1f44eb81bb827d6c39074c522d/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=cfdc4f334db1ad1f44eb81bb827d6c39074c522d", "patch": "@@ -1,3 +1,8 @@\n+2015-04-14  Marc Glisse  <marc.glisse@inria.fr>\n+\n+\tPR tree-optimization/63387\n+\t* gcc.dg/pr63387.c: New testcase.\n+\n 2015-04-12  Jan Hubicka  <hubicka@ucw.cz>\n \n \t* g++.dg/tree-ssa/nonzero-3.C: New testcase."}, {"sha": "1814fe08c9d05358b9db7bbdd41adcd436289aab", "filename": "gcc/testsuite/gcc.dg/pr63387.c", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cfdc4f334db1ad1f44eb81bb827d6c39074c522d/gcc%2Ftestsuite%2Fgcc.dg%2Fpr63387.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cfdc4f334db1ad1f44eb81bb827d6c39074c522d/gcc%2Ftestsuite%2Fgcc.dg%2Fpr63387.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr63387.c?ref=cfdc4f334db1ad1f44eb81bb827d6c39074c522d", "patch": "@@ -0,0 +1,26 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O -fdump-tree-optimized\" } */\n+\n+int f(double aaa, double bbb){\n+  int xa = __builtin_isunordered(aaa, aaa);\n+  int xb = __builtin_isunordered(bbb, bbb);\n+  return xa | xb;\n+}\n+\n+int g(double aaa, double bbb){\n+  int xa = __builtin_isunordered(aaa, bbb);\n+  int xb = __builtin_isunordered(bbb, bbb);\n+  return xa | xb;\n+}\n+\n+int h(double ccc, float ddd){\n+  int xc = __builtin_isunordered(ccc, ccc);\n+  int xd = __builtin_isunordered(ddd, ddd);\n+  return xc | xd;\n+}\n+\n+/* { dg-final { scan-tree-dump-not \"aaa\\[^\\n\\r\\]* unord aaa\" \"optimized\" } } */\n+/* { dg-final { scan-tree-dump-not \"bbb\\[^\\n\\r\\]* unord bbb\" \"optimized\" } } */\n+/* { dg-final { scan-tree-dump-times \"aaa\\[^\\n\\r\\]* unord bbb\" 2 \"optimized\" } } */\n+/* { dg-final { scan-tree-dump-not \"ccc\\[^\\n\\r\\]* unord ddd\" \"optimized\" } } */\n+/* { dg-final { cleanup-tree-dump \"optimized\" } } */"}]}