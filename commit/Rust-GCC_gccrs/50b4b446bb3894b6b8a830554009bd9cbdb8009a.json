{"sha": "50b4b446bb3894b6b8a830554009bd9cbdb8009a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTBiNGI0NDZiYjM4OTRiNmI4YTgzMDU1NDAwOWJkOWNiZGI4MDA5YQ==", "commit": {"author": {"name": "Tom de Vries", "email": "tom@codesourcery.com", "date": "2015-09-22T08:15:32Z"}, "committer": {"name": "Tom de Vries", "email": "vries@gcc.gnu.org", "date": "2015-09-22T08:15:32Z"}, "message": "Handle single restrict pointer in struct in create_variable_info_for_1\n\n2015-09-22  Tom de Vries  <tom@codesourcery.com>\n\n\tPR tree-optimization/67666\n\t* tree-ssa-structalias.c (create_variable_info_for_1): Handle struct\n\twith single field non-conservative.\n\n\t* g++.dg/pr67666.C: New test.\n\nFrom-SVN: r227996", "tree": {"sha": "2f80601647400b0089de32d9372be9b6f3038dc4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2f80601647400b0089de32d9372be9b6f3038dc4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/50b4b446bb3894b6b8a830554009bd9cbdb8009a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/50b4b446bb3894b6b8a830554009bd9cbdb8009a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/50b4b446bb3894b6b8a830554009bd9cbdb8009a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/50b4b446bb3894b6b8a830554009bd9cbdb8009a/comments", "author": null, "committer": null, "parents": [{"sha": "6bb4c3e2d8a978c590c01df7807c4e0819b33b85", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6bb4c3e2d8a978c590c01df7807c4e0819b33b85", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6bb4c3e2d8a978c590c01df7807c4e0819b33b85"}], "stats": {"total": 53, "additions": 44, "deletions": 9}, "files": [{"sha": "3dd8a1d6d8a68792a18924b46537fbaa90083b3d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/50b4b446bb3894b6b8a830554009bd9cbdb8009a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/50b4b446bb3894b6b8a830554009bd9cbdb8009a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=50b4b446bb3894b6b8a830554009bd9cbdb8009a", "patch": "@@ -1,3 +1,9 @@\n+2015-09-22  Tom de Vries  <tom@codesourcery.com>\n+\n+\tPR tree-optimization/67666\n+\t* tree-ssa-structalias.c (create_variable_info_for_1): Handle struct\n+\twith single field non-conservative.\n+\n 2015-09-21  David S. Miller  <davem@davemloft.net>\n \n \tPR/67622"}, {"sha": "0f5d39c3586bbe3f8150f8469ade01dff62ba49a", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/50b4b446bb3894b6b8a830554009bd9cbdb8009a/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/50b4b446bb3894b6b8a830554009bd9cbdb8009a/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=50b4b446bb3894b6b8a830554009bd9cbdb8009a", "patch": "@@ -1,3 +1,8 @@\n+2015-09-22  Tom de Vries  <tom@codesourcery.com>\n+\n+\tPR tree-optimization/67666\n+\t* g++.dg/pr67666.C: New test.\n+\n 2015-09-21  Steven G. Kargl  <kargl@gcc.gnu.org>\n \n \tPR fortran/67615"}, {"sha": "ad162f4bb10f0796a3333fee8a5b2e27e930aab2", "filename": "gcc/testsuite/g++.dg/pr67666.C", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/50b4b446bb3894b6b8a830554009bd9cbdb8009a/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fpr67666.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/50b4b446bb3894b6b8a830554009bd9cbdb8009a/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fpr67666.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fpr67666.C?ref=50b4b446bb3894b6b8a830554009bd9cbdb8009a", "patch": "@@ -0,0 +1,17 @@\n+// { dg-do compile }\n+// { dg-options \"-O2 -fdump-tree-ealias-all\" }\n+\n+struct ps\n+{\n+  int *__restrict__ p;\n+};\n+\n+void\n+f (struct ps &__restrict__ ps1)\n+{\n+  *(ps1.p) = 1;\n+}\n+\n+// { dg-final { scan-tree-dump-times \"clique 1 base 1\" 1 \"ealias\" } }\n+// { dg-final { scan-tree-dump-times \"clique 1 base 2\" 1 \"ealias\" } }\n+// { dg-final { scan-tree-dump-times \"(?n)clique .* base .*\" 2 \"ealias\" } }"}, {"sha": "66772cdfd5f38857a31e26d95a62b0eafe025878", "filename": "gcc/tree-ssa-structalias.c", "status": "modified", "additions": 16, "deletions": 9, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/50b4b446bb3894b6b8a830554009bd9cbdb8009a/gcc%2Ftree-ssa-structalias.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/50b4b446bb3894b6b8a830554009bd9cbdb8009a/gcc%2Ftree-ssa-structalias.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-structalias.c?ref=50b4b446bb3894b6b8a830554009bd9cbdb8009a", "patch": "@@ -5675,7 +5675,7 @@ create_variable_info_for_1 (tree decl, const char *name)\n \n   /* If we didn't end up collecting sub-variables create a full\n      variable for the decl.  */\n-  if (fieldstack.length () <= 1\n+  if (fieldstack.length () == 0\n       || fieldstack.length () > MAX_FIELDS_FOR_FIELD_SENSITIVE)\n     {\n       vi = new_var_info (decl, name);\n@@ -5694,19 +5694,26 @@ create_variable_info_for_1 (tree decl, const char *name)\n        fieldstack.iterate (i, &fo);\n        ++i, newvi = vi_next (newvi))\n     {\n-      const char *newname = \"NULL\";\n+      const char *newname = NULL;\n       char *tempname;\n \n       if (dump_file)\n \t{\n-\t  tempname\n-\t    = xasprintf (\"%s.\" HOST_WIDE_INT_PRINT_DEC\n-\t\t\t \"+\" HOST_WIDE_INT_PRINT_DEC, name,\n-\t\t\t fo->offset, fo->size);\n-\t  newname = ggc_strdup (tempname);\n-\t  free (tempname);\n+\t  if (fieldstack.length () != 1)\n+\t    {\n+\t      tempname\n+\t\t= xasprintf (\"%s.\" HOST_WIDE_INT_PRINT_DEC\n+\t\t\t     \"+\" HOST_WIDE_INT_PRINT_DEC, name,\n+\t\t\t     fo->offset, fo->size);\n+\t      newname = ggc_strdup (tempname);\n+\t      free (tempname);\n+\t    }\n \t}\n-      newvi->name = newname;\n+      else\n+\tnewname = \"NULL\";\n+\n+      if (newname)\n+\t  newvi->name = newname;\n       newvi->offset = fo->offset;\n       newvi->size = fo->size;\n       newvi->fullsize = vi->fullsize;"}]}