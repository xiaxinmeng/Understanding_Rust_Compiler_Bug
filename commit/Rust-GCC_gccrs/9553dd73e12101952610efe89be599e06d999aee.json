{"sha": "9553dd73e12101952610efe89be599e06d999aee", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTU1M2RkNzNlMTIxMDE5NTI2MTBlZmU4OWJlNTk5ZTA2ZDk5OWFlZQ==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@acm.org", "date": "2016-04-01T12:57:52Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2016-04-01T12:57:52Z"}, "message": "* tree.def (TRY_CATCH_EXPR): Correct documentation.\n\nFrom-SVN: r234671", "tree": {"sha": "889232ea4bc2fc5bd4de52aad5dcf75ce250c9f6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/889232ea4bc2fc5bd4de52aad5dcf75ce250c9f6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9553dd73e12101952610efe89be599e06d999aee", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9553dd73e12101952610efe89be599e06d999aee", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9553dd73e12101952610efe89be599e06d999aee", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9553dd73e12101952610efe89be599e06d999aee/comments", "author": {"login": "urnathan", "id": 13103001, "node_id": "MDQ6VXNlcjEzMTAzMDAx", "avatar_url": "https://avatars.githubusercontent.com/u/13103001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/urnathan", "html_url": "https://github.com/urnathan", "followers_url": "https://api.github.com/users/urnathan/followers", "following_url": "https://api.github.com/users/urnathan/following{/other_user}", "gists_url": "https://api.github.com/users/urnathan/gists{/gist_id}", "starred_url": "https://api.github.com/users/urnathan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/urnathan/subscriptions", "organizations_url": "https://api.github.com/users/urnathan/orgs", "repos_url": "https://api.github.com/users/urnathan/repos", "events_url": "https://api.github.com/users/urnathan/events{/privacy}", "received_events_url": "https://api.github.com/users/urnathan/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "73b9085d707cb18d66c0365fafa569039b7fa444", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/73b9085d707cb18d66c0365fafa569039b7fa444", "html_url": "https://github.com/Rust-GCC/gccrs/commit/73b9085d707cb18d66c0365fafa569039b7fa444"}], "stats": {"total": 10, "additions": 7, "deletions": 3}, "files": [{"sha": "93db5c6cf0b8c8f7f28fe8bf8b4a28e02378919f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9553dd73e12101952610efe89be599e06d999aee/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9553dd73e12101952610efe89be599e06d999aee/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9553dd73e12101952610efe89be599e06d999aee", "patch": "@@ -1,3 +1,7 @@\n+2016-04-01  Nathan Sidwell  <nathan@acm.org>\n+\n+\t* tree.def (TRY_CATCH_EXPR): Correct documentation.\n+\n 2016-03-31  Vladimir Makarov  <vmakarov@redhat.com>\n \n \tPR rtl-optimization/70461"}, {"sha": "44130d7c77fb01dcfbb6ced88b9e2e4ca6044338", "filename": "gcc/tree.def", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9553dd73e12101952610efe89be599e06d999aee/gcc%2Ftree.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9553dd73e12101952610efe89be599e06d999aee/gcc%2Ftree.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.def?ref=9553dd73e12101952610efe89be599e06d999aee", "patch": "@@ -870,10 +870,10 @@ DEFTREECODE (POSTINCREMENT_EXPR, \"postincrement_expr\", tcc_expression, 2)\n /* Used to implement `va_arg'.  */\n DEFTREECODE (VA_ARG_EXPR, \"va_arg_expr\", tcc_expression, 1)\n \n-/* Evaluate operand 1.  If and only if an exception is thrown during\n-   the evaluation of operand 1, evaluate operand 2.\n+/* Evaluate operand 0.  If and only if an exception is thrown during\n+   the evaluation of operand 0, evaluate operand 1.\n \n-   This differs from TRY_FINALLY_EXPR in that operand 2 is not evaluated\n+   This differs from TRY_FINALLY_EXPR in that operand 1 is not evaluated\n    on a normal or jump exit, only on an exception.  */\n DEFTREECODE (TRY_CATCH_EXPR, \"try_catch_expr\", tcc_statement, 2)\n "}]}