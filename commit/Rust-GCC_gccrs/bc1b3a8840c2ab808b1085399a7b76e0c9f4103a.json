{"sha": "bc1b3a8840c2ab808b1085399a7b76e0c9f4103a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmMxYjNhODg0MGMyYWI4MDhiMTA4NTM5OWE3Yjc2ZTBjOWY0MTAzYQ==", "commit": {"author": {"name": "Joseph Myers", "email": "joseph@codesourcery.com", "date": "2014-10-29T12:59:16Z"}, "committer": {"name": "Joseph Myers", "email": "jsm28@gcc.gnu.org", "date": "2014-10-29T12:59:16Z"}, "message": "Optimize powerpc*-*-linux* e500 hardfp/soft-fp use.\n\nContinuing the cleanups of libgcc soft-fp configuration for\npowerpc*-*-linux* in preparation for implementing\nTARGET_ATOMIC_ASSIGN_EXPAND_FENV for soft-float and e500, this patch\noptimizes the choice of which functions to build for the e500 cases.\n\nFor e500v2, use of hardfp is generally right, except that calls to\n__unordsf2 and __unorddf2 are actually generated by GCC from\n__builtin_isunordered and so they need to be implemented with soft-fp\nto avoid recursively calling themselves.  For e500v1, hardfp is right\nfor SFmode (except for __unordsf2) but soft-fp for DFmode (and when\nusing soft-fp, as usual it's best for the conversions between DFmode\nand integers all to come directly from soft-fp rather than some coming\nfrom libgcc2.c).  Thus, new variables hardfp_exclusions and\nsoftfp_extras are added that configurations using t-hardfp and\nt-softfp can use to achieve the desired effect of selectively mixing\nthe two sources of functions.\n\nTested with no regressions for crosses to powerpc-linux-gnuspe (both\ne500v1 and e500v2); also checked that the same set of symbols and\nversions is exported from shared libgcc before and after the patch.\n\n\t* config/t-hardfp (hardfp_exclusions): Document new variable for\n\tuser to define.\n\t(hardfp_func_list): Exclude functions from $(hardfp_exclusions).\n\t* config/t-softfp (softfp_extras): Document new variable for user\n\tto define.\n\t(softfp_func_list): Add functions from $(softfp_extras).\n\t* config/rs6000/t-e500v1-fp, config/rs6000/t-e500v2-fp: New files.\n\t* config.host (powerpc*-*-linux*): For e500v1, use\n\trs6000/t-e500v1-fp and t-hardfp; do not use t-softfp-sfdf and\n\tt-softfp-excl.  For e500v2, use t-hardfp-sfdf, rs6000/t-e500v2-fp\n\tand t-hardfp; do not use t-softfp-sfdf and t-softfp-excl.\n\nFrom-SVN: r216835", "tree": {"sha": "91b9b1fdd164936c1a8965d6660a54367fea74d0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/91b9b1fdd164936c1a8965d6660a54367fea74d0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bc1b3a8840c2ab808b1085399a7b76e0c9f4103a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bc1b3a8840c2ab808b1085399a7b76e0c9f4103a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bc1b3a8840c2ab808b1085399a7b76e0c9f4103a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bc1b3a8840c2ab808b1085399a7b76e0c9f4103a/comments", "author": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ef4bddc299eae13cc25e50eebc523a4963e0a5f7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ef4bddc299eae13cc25e50eebc523a4963e0a5f7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ef4bddc299eae13cc25e50eebc523a4963e0a5f7"}], "stats": {"total": 95, "additions": 92, "deletions": 3}, "files": [{"sha": "eb834601ace3f531176407f0081aa976999e787a", "filename": "libgcc/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bc1b3a8840c2ab808b1085399a7b76e0c9f4103a/libgcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bc1b3a8840c2ab808b1085399a7b76e0c9f4103a/libgcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2FChangeLog?ref=bc1b3a8840c2ab808b1085399a7b76e0c9f4103a", "patch": "@@ -1,3 +1,17 @@\n+2014-10-29  Joseph Myers  <joseph@codesourcery.com>\n+\n+\t* config/t-hardfp (hardfp_exclusions): Document new variable for\n+\tuser to define.\n+\t(hardfp_func_list): Exclude functions from $(hardfp_exclusions).\n+\t* config/t-softfp (softfp_extras): Document new variable for user\n+\tto define.\n+\t(softfp_func_list): Add functions from $(softfp_extras).\n+\t* config/rs6000/t-e500v1-fp, config/rs6000/t-e500v2-fp: New files.\n+\t* config.host (powerpc*-*-linux*): For e500v1, use\n+\trs6000/t-e500v1-fp and t-hardfp; do not use t-softfp-sfdf and\n+\tt-softfp-excl.  For e500v2, use t-hardfp-sfdf, rs6000/t-e500v2-fp\n+\tand t-hardfp; do not use t-softfp-sfdf and t-softfp-excl.\n+\n 2014-10-26  John David Anglin  <danglin@gcc.gnu.org>\n \n \t* config/pa/linux-unwind.h (pa32_read_access_ok): New function."}, {"sha": "6d0fccdab2d84a66a9e73560d0a43a62bf514489", "filename": "libgcc/config.host", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bc1b3a8840c2ab808b1085399a7b76e0c9f4103a/libgcc%2Fconfig.host", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bc1b3a8840c2ab808b1085399a7b76e0c9f4103a/libgcc%2Fconfig.host", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig.host?ref=bc1b3a8840c2ab808b1085399a7b76e0c9f4103a", "patch": "@@ -1000,8 +1000,11 @@ powerpc*-*-linux*)\n \tsoft)\n \t\ttmake_file=\"${tmake_file} t-softfp-sfdf t-softfp\"\n \t\t;;\n-\te500v1|e500v2)\n-\t\ttmake_file=\"${tmake_file} t-softfp-sfdf t-softfp-excl t-softfp\"\n+\te500v1)\n+\t\ttmake_file=\"${tmake_file} rs6000/t-e500v1-fp t-softfp t-hardfp\"\n+\t\t;;\n+\te500v2)\n+\t\ttmake_file=\"${tmake_file} t-hardfp-sfdf rs6000/t-e500v2-fp t-softfp t-hardfp\"\n \t\t;;\n \t*)\n \t\techo \"Unknown ppc_fp_type $ppc_fp_type\" 1>&2"}, {"sha": "c1f7a0c47bda0fcc360f23a4153dcbe2be676707", "filename": "libgcc/config/rs6000/t-e500v1-fp", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bc1b3a8840c2ab808b1085399a7b76e0c9f4103a/libgcc%2Fconfig%2Frs6000%2Ft-e500v1-fp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bc1b3a8840c2ab808b1085399a7b76e0c9f4103a/libgcc%2Fconfig%2Frs6000%2Ft-e500v1-fp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Frs6000%2Ft-e500v1-fp?ref=bc1b3a8840c2ab808b1085399a7b76e0c9f4103a", "patch": "@@ -0,0 +1,32 @@\n+# Copyright (C) 2014 Free Software Foundation, Inc.\n+\n+# This file is part of GCC.\n+\n+# GCC is free software; you can redistribute it and/or modify\n+# it under the terms of the GNU General Public License as published by\n+# the Free Software Foundation; either version 3, or (at your option)\n+# any later version.\n+\n+# GCC is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+# GNU General Public License for more details.\n+\n+# You should have received a copy of the GNU General Public License\n+# along with GCC; see the file COPYING3.  If not see\n+# <http://www.gnu.org/licenses/>.\n+\n+# Use hardfp.c for SFmode (except __unordsf2), soft-fp for DFmode.\n+# For SFmode, libgcc2.c functions are used where applicable; for\n+# DFmode, they are excluded.\n+hardfp_float_modes := sf\n+hardfp_int_modes := si\n+hardfp_extensions :=\n+hardfp_truncations :=\n+hardfp_exclusions := unordsf2\n+softfp_float_modes := df\n+softfp_int_modes := si di\n+softfp_extensions := sfdf\n+softfp_truncations := dfsf\n+softfp_exclude_libgcc2 := n\n+softfp_extras := unordsf2"}, {"sha": "636b28f0cc8c4a404ef9d4044f99bf4798e3b217", "filename": "libgcc/config/rs6000/t-e500v2-fp", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bc1b3a8840c2ab808b1085399a7b76e0c9f4103a/libgcc%2Fconfig%2Frs6000%2Ft-e500v2-fp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bc1b3a8840c2ab808b1085399a7b76e0c9f4103a/libgcc%2Fconfig%2Frs6000%2Ft-e500v2-fp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Frs6000%2Ft-e500v2-fp?ref=bc1b3a8840c2ab808b1085399a7b76e0c9f4103a", "patch": "@@ -0,0 +1,26 @@\n+# Copyright (C) 2014 Free Software Foundation, Inc.\n+\n+# This file is part of GCC.\n+\n+# GCC is free software; you can redistribute it and/or modify\n+# it under the terms of the GNU General Public License as published by\n+# the Free Software Foundation; either version 3, or (at your option)\n+# any later version.\n+\n+# GCC is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+# GNU General Public License for more details.\n+\n+# You should have received a copy of the GNU General Public License\n+# along with GCC; see the file COPYING3.  If not see\n+# <http://www.gnu.org/licenses/>.\n+\n+# All operations except __unordsf2 and __unorddf2 can come from hardfp.c.\n+hardfp_exclusions := unordsf2 unorddf2\n+softfp_float_modes :=\n+softfp_int_modes :=\n+softfp_extensions :=\n+softfp_truncations :=\n+softfp_exclude_libgcc2 := n\n+softfp_extras := unordsf2 unorddf2"}, {"sha": "019a6ab665f1f15ee48aaf50d9c47aa7b86abf06", "filename": "libgcc/config/t-hardfp", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bc1b3a8840c2ab808b1085399a7b76e0c9f4103a/libgcc%2Fconfig%2Ft-hardfp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bc1b3a8840c2ab808b1085399a7b76e0c9f4103a/libgcc%2Fconfig%2Ft-hardfp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Ft-hardfp?ref=bc1b3a8840c2ab808b1085399a7b76e0c9f4103a", "patch": "@@ -32,6 +32,13 @@\n #                    e.g. sfdf\n # hardfp_truncations: a list of truncations between hardware floating-point\n #                     modes, e.g. dfsf\n+#\n+# If some functions that would otherwise be defined should not be\n+# defined by this file (typically because the target would compile\n+# certain operations into a call to the libgcc function, which thus\n+# needs to be defined elsewhere to use software floating point), also\n+# define hardfp_exclusions to be a list of those functions,\n+# e.g. unorddf2.\n \n # Functions parameterized by a floating-point mode M.\n hardfp_func_bases := addM3 subM3 negM2 mulM3 divM3\n@@ -50,6 +57,8 @@ hardfp_func_list += $(foreach pair, $(hardfp_extensions), \\\n hardfp_func_list += $(foreach pair, $(hardfp_truncations), \\\n \t\t    \t      $(subst M,$(pair),truncM2))\n \n+hardfp_func_list := $(filter-out $(hardfp_exclusions),$(hardfp_func_list))\n+\n # Regexp for matching a floating-point mode.\n hardfp_mode_regexp := $(shell echo $(hardfp_float_modes) | sed 's/ /\\\\|/g')\n "}, {"sha": "43e0b4d578db96df3acb78c83e788fd7602ff40e", "filename": "libgcc/config/t-softfp", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bc1b3a8840c2ab808b1085399a7b76e0c9f4103a/libgcc%2Fconfig%2Ft-softfp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bc1b3a8840c2ab808b1085399a7b76e0c9f4103a/libgcc%2Fconfig%2Ft-softfp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Ft-softfp?ref=bc1b3a8840c2ab808b1085399a7b76e0c9f4103a", "patch": "@@ -31,6 +31,10 @@\n # is a soft-float mode; for example, sftf where sf is hard-float and\n # tf is soft-float.\n #\n+# If some additional functions should be built that are not implied by\n+# the above settings, also define softfp_extras as a list of those\n+# functions, e.g. unorddf2.\n+#\n # If the libgcc2.c functions should not be replaced, also define:\n #\n # softfp_exclude_libgcc2 := y\n@@ -61,7 +65,8 @@ softfp_func_list := \\\n               $(foreach i,$(softfp_int_modes), \\\n                           $(softfp_floatint_funcs))) \\\n   $(foreach e,$(softfp_extensions),extend$(e)2) \\\n-  $(foreach t,$(softfp_truncations),trunc$(t)2)\n+  $(foreach t,$(softfp_truncations),trunc$(t)2) \\\n+  $(softfp_extras)\n \n ifeq ($(softfp_exclude_libgcc2),y)\n # This list is taken from mklibgcc.in and doesn't presently allow for"}]}