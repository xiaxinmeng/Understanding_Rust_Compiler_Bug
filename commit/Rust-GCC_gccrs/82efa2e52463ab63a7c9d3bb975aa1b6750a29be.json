{"sha": "82efa2e52463ab63a7c9d3bb975aa1b6750a29be", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODJlZmEyZTUyNDYzYWI2M2E3YzlkM2JiOTc1YWExYjY3NTBhMjliZQ==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@hxi.com", "date": "2001-07-23T22:41:10Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2001-07-23T22:41:10Z"}, "message": "* reload.c: Fix comment typos.\n\nFrom-SVN: r44284", "tree": {"sha": "4cabf18b40aeec19a5f95458b2cb4bfc7ebe5cde", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4cabf18b40aeec19a5f95458b2cb4bfc7ebe5cde"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/82efa2e52463ab63a7c9d3bb975aa1b6750a29be", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/82efa2e52463ab63a7c9d3bb975aa1b6750a29be", "html_url": "https://github.com/Rust-GCC/gccrs/commit/82efa2e52463ab63a7c9d3bb975aa1b6750a29be", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/82efa2e52463ab63a7c9d3bb975aa1b6750a29be/comments", "author": null, "committer": null, "parents": [{"sha": "ba412630aefc6423cb7c80fd28356df3abad2e11", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ba412630aefc6423cb7c80fd28356df3abad2e11", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ba412630aefc6423cb7c80fd28356df3abad2e11"}], "stats": {"total": 8, "additions": 5, "deletions": 3}, "files": [{"sha": "b66c8ca601adef0e52a65652cff6b4567bcbc7f3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/82efa2e52463ab63a7c9d3bb975aa1b6750a29be/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/82efa2e52463ab63a7c9d3bb975aa1b6750a29be/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=82efa2e52463ab63a7c9d3bb975aa1b6750a29be", "patch": "@@ -9,6 +9,8 @@\n \tthe existing movqi pattern.\n \t(movhi_push): Likewise.\n \n+\t* reload.c: Fix comment typos.\n+\n Mon Jul 23 23:34:07 CEST 2001  Jan Hubicka  <jh@suse.cz>\n \n \t* gcse.c (cprop_insn): Update call of cprop_cc0_jump."}, {"sha": "9e5f9f3ea2ab6dd75c53feb03df233dc05605ff9", "filename": "gcc/reload.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/82efa2e52463ab63a7c9d3bb975aa1b6750a29be/gcc%2Freload.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/82efa2e52463ab63a7c9d3bb975aa1b6750a29be/gcc%2Freload.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freload.c?ref=82efa2e52463ab63a7c9d3bb975aa1b6750a29be", "patch": "@@ -2776,7 +2776,7 @@ find_reloads (insn, replace, ind_levels, live_known, reload_reg_p)\n \t  register char *p = constraints[i];\n \t  register int win = 0;\n \t  int did_match = 0;\n-\t  /* 0 => this operand can be reloaded somehow for this alternative */\n+\t  /* 0 => this operand can be reloaded somehow for this alternative.  */\n \t  int badop = 1;\n \t  /* 0 => this operand can be reloaded if the alternative allows regs.  */\n \t  int winreg = 0;\n@@ -3187,7 +3187,7 @@ find_reloads (insn, replace, ind_levels, live_known, reload_reg_p)\n \t\t\t|| (REGNO (operand) >= FIRST_PSEUDO_REGISTER\n \t\t\t    && reg_renumber[REGNO (operand)] < 0)))\n \t\t  win = 1;\n-\t\t/* Drop through into 'r' case */\n+\t\t/* Drop through into 'r' case.  */\n \n \t      case 'r':\n \t\tthis_alternative[i]\n@@ -4536,7 +4536,7 @@ find_reloads_address (mode, memrefloc, ad, loc, opnum, type, ind_levels, insn)\n       regno = REGNO (ad);\n \n       /* If the register is equivalent to an invariant expression, substitute\n-\t the invariant, and eliminate any eliminable register references. */\n+\t the invariant, and eliminate any eliminable register references.  */\n       tem = reg_equiv_constant[regno];\n       if (tem != 0\n \t  && (tem = eliminate_regs (tem, mode, insn))"}]}