{"sha": "3f5f659208192192b83af727ab2f0103c16c1c44", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2Y1ZjY1OTIwODE5MjE5MmI4M2FmNzI3YWIyZjAxMDNjMTZjMWM0NA==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2012-03-12T10:43:17Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2012-03-12T10:43:17Z"}, "message": "tree-sra.c (create_access_replacement): Only rename the replacement if we can rewrite it into SSA form.\n\n2012-03-12  Richard Guenther  <rguenther@suse.de>\n\n        * tree-sra.c (create_access_replacement): Only rename the\n        replacement if we can rewrite it into SSA form.  Properly\n        mark register typed replacements that we cannot rewrite\n        with TREE_ADDRESSABLE.\n\t* tree-cfg.c (verify_expr): Fix BIT_FIELD_REF verification\n\tfor aggregate or BLKmode results.\n\nFrom-SVN: r185221", "tree": {"sha": "c4db522d46c717e3c63a6d84f7549bb941bf12d1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c4db522d46c717e3c63a6d84f7549bb941bf12d1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3f5f659208192192b83af727ab2f0103c16c1c44", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3f5f659208192192b83af727ab2f0103c16c1c44", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3f5f659208192192b83af727ab2f0103c16c1c44", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3f5f659208192192b83af727ab2f0103c16c1c44/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "01c1f20dc516ba119bb6162119533914165d6451", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/01c1f20dc516ba119bb6162119533914165d6451", "html_url": "https://github.com/Rust-GCC/gccrs/commit/01c1f20dc516ba119bb6162119533914165d6451"}], "stats": {"total": 39, "additions": 28, "deletions": 11}, "files": [{"sha": "b35706a8faccf2974d6ea755ba38e8355e1dc8ed", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f5f659208192192b83af727ab2f0103c16c1c44/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f5f659208192192b83af727ab2f0103c16c1c44/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3f5f659208192192b83af727ab2f0103c16c1c44", "patch": "@@ -1,3 +1,12 @@\n+2012-03-12  Richard Guenther  <rguenther@suse.de>\n+\n+        * tree-sra.c (create_access_replacement): Only rename the\n+        replacement if we can rewrite it into SSA form.  Properly\n+        mark register typed replacements that we cannot rewrite\n+        with TREE_ADDRESSABLE.\n+\t* tree-cfg.c (verify_expr): Fix BIT_FIELD_REF verification\n+\tfor aggregate or BLKmode results.\n+\n 2012-03-12  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR tree-optimization/52533"}, {"sha": "eb7b62a72c504999d208dba4f94062daf61eef6a", "filename": "gcc/tree-cfg.c", "status": "modified", "additions": 8, "deletions": 6, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f5f659208192192b83af727ab2f0103c16c1c44/gcc%2Ftree-cfg.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f5f659208192192b83af727ab2f0103c16c1c44/gcc%2Ftree-cfg.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-cfg.c?ref=3f5f659208192192b83af727ab2f0103c16c1c44", "patch": "@@ -2790,17 +2790,19 @@ verify_expr (tree *tp, int *walk_subtrees, void *data ATTRIBUTE_UNUSED)\n \t\t  error (\"invalid position or size operand to BIT_FIELD_REF\");\n \t\t  return t;\n \t\t}\n-\t      else if (INTEGRAL_TYPE_P (TREE_TYPE (t))\n-\t\t       && (TYPE_PRECISION (TREE_TYPE (t))\n-\t\t\t   != TREE_INT_CST_LOW (TREE_OPERAND (t, 1))))\n+\t      if (INTEGRAL_TYPE_P (TREE_TYPE (t))\n+\t\t  && (TYPE_PRECISION (TREE_TYPE (t))\n+\t\t      != TREE_INT_CST_LOW (TREE_OPERAND (t, 1))))\n \t\t{\n \t\t  error (\"integral result type precision does not match \"\n \t\t\t \"field size of BIT_FIELD_REF\");\n \t\t  return t;\n \t\t}\n-\t      if (!INTEGRAL_TYPE_P (TREE_TYPE (t))\n-\t\t  && (GET_MODE_PRECISION (TYPE_MODE (TREE_TYPE (t)))\n-\t\t      != TREE_INT_CST_LOW (TREE_OPERAND (t, 1))))\n+\t      else if (!INTEGRAL_TYPE_P (TREE_TYPE (t))\n+\t\t       && !AGGREGATE_TYPE_P (TREE_TYPE (t))\n+\t\t       && TYPE_MODE (TREE_TYPE (t)) != BLKmode\n+\t\t       && (GET_MODE_PRECISION (TYPE_MODE (TREE_TYPE (t)))\n+\t\t\t   != TREE_INT_CST_LOW (TREE_OPERAND (t, 1))))\n \t\t{\n \t\t  error (\"mode precision of non-integral result does not \"\n \t\t\t \"match field size of BIT_FIELD_REF\");"}, {"sha": "65267a92f831d5a795808b37b4b532518543e8de", "filename": "gcc/tree-sra.c", "status": "modified", "additions": 11, "deletions": 5, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f5f659208192192b83af727ab2f0103c16c1c44/gcc%2Ftree-sra.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f5f659208192192b83af727ab2f0103c16c1c44/gcc%2Ftree-sra.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-sra.c?ref=3f5f659208192192b83af727ab2f0103c16c1c44", "patch": "@@ -1924,13 +1924,19 @@ create_access_replacement (struct access *access, bool rename)\n \n   repl = create_tmp_var (access->type, \"SR\");\n   add_referenced_var (repl);\n-  if (rename)\n+  if (!access->grp_partial_lhs\n+      && rename)\n     mark_sym_for_renaming (repl);\n \n-  if (!access->grp_partial_lhs\n-      && (TREE_CODE (access->type) == COMPLEX_TYPE\n-\t  || TREE_CODE (access->type) == VECTOR_TYPE))\n-    DECL_GIMPLE_REG_P (repl) = 1;\n+  if (TREE_CODE (access->type) == COMPLEX_TYPE\n+      || TREE_CODE (access->type) == VECTOR_TYPE)\n+    {\n+      if (!access->grp_partial_lhs)\n+\tDECL_GIMPLE_REG_P (repl) = 1;\n+    }\n+  else if (access->grp_partial_lhs\n+\t   && is_gimple_reg_type (access->type))\n+    TREE_ADDRESSABLE (repl) = 1;\n \n   DECL_SOURCE_LOCATION (repl) = DECL_SOURCE_LOCATION (access->base);\n   DECL_ARTIFICIAL (repl) = 1;"}]}