{"sha": "a76d8c3c769a470eef858c8f758ff3ad8fb9e586", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTc2ZDhjM2M3NjlhNDcwZWVmODU4YzhmNzU4ZmYzYWQ4ZmI5ZTU4Ng==", "commit": {"author": {"name": "Kai Tietz", "email": "kai.tietz@onevision.com", "date": "2011-01-07T14:12:43Z"}, "committer": {"name": "Kai Tietz", "email": "ktietz@gcc.gnu.org", "date": "2011-01-07T14:12:43Z"}, "message": "dllexport-MI1.C: Adjust test.\n\n2011-01-07  Kai Tietz  <kai.tietz@onevision.com>\n\n        * g++.dg/ext/dllexport-MI1.C: Adjust test.\n        * g++.dg/ext/dllimport-MI1.C: Likewise.\n        * g++.dg/ext/dllimport1.C: Add test for x86_64-*-mingw*.\n        * g++.dg/ext/dllimport10.C: Likewise.\n        * g++.dg/ext/dllimport11.C: Likewise.\n        * g++.dg/ext/dllimport12.C: Likewise.\n        * g++.dg/ext/dllimport13.C: Likewise.\n        * g++.dg/ext/dllimport2.C: Likewise.\n        * g++.dg/ext/dllimport3.C: Likewise.\n        * g++.dg/ext/dllimport4.C: Likewise.\n        * g++.dg/ext/dllimport5.C: Likewise.\n        * g++.dg/ext/dllimport6.C: Likewise.\n        * g++.dg/ext/dllimport8.C: Likewise.\n        * g++.dg/ext/dllimport9.C: Likewise.\n        * g++.dg/ext/selectany2.C: Enable test for x86_64-*-mingw*\n        targets, too. Additionally enable test for i?86-*-mingw*.\n        * g++.dg/ext/selectany1.C: Likewise.\n        Remove guard variable check.\n\nFrom-SVN: r168572", "tree": {"sha": "47642bd5b511d481ac114ca78e2aac102da362c1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/47642bd5b511d481ac114ca78e2aac102da362c1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a76d8c3c769a470eef858c8f758ff3ad8fb9e586", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a76d8c3c769a470eef858c8f758ff3ad8fb9e586", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a76d8c3c769a470eef858c8f758ff3ad8fb9e586", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a76d8c3c769a470eef858c8f758ff3ad8fb9e586/comments", "author": null, "committer": null, "parents": [{"sha": "14d11d4097091e8abaa63866f8cc0903f581c82a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/14d11d4097091e8abaa63866f8cc0903f581c82a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/14d11d4097091e8abaa63866f8cc0903f581c82a"}], "stats": {"total": 74, "additions": 47, "deletions": 27}, "files": [{"sha": "c95b4db20238d69793591fc84c9c3b3733801363", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a76d8c3c769a470eef858c8f758ff3ad8fb9e586/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a76d8c3c769a470eef858c8f758ff3ad8fb9e586/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=a76d8c3c769a470eef858c8f758ff3ad8fb9e586", "patch": "@@ -1,3 +1,24 @@\n+2011-01-07  Kai Tietz  <kai.tietz@onevision.com>\n+\n+\t* g++.dg/ext/dllexport-MI1.C: Adjust test.\n+\t* g++.dg/ext/dllimport-MI1.C: Likewise.\n+\t* g++.dg/ext/dllimport1.C: Add test for x86_64-*-mingw*.\n+\t* g++.dg/ext/dllimport10.C: Likewise.\n+\t* g++.dg/ext/dllimport11.C: Likewise.\n+\t* g++.dg/ext/dllimport12.C: Likewise.\n+\t* g++.dg/ext/dllimport13.C: Likewise.\n+\t* g++.dg/ext/dllimport2.C: Likewise.\n+\t* g++.dg/ext/dllimport3.C: Likewise.\n+\t* g++.dg/ext/dllimport4.C: Likewise.\n+\t* g++.dg/ext/dllimport5.C: Likewise.\n+\t* g++.dg/ext/dllimport6.C: Likewise.\n+\t* g++.dg/ext/dllimport8.C: Likewise.\n+\t* g++.dg/ext/dllimport9.C: Likewise.\n+\t* g++.dg/ext/selectany2.C: Enable test for x86_64-*-mingw*\n+\ttargets, too. Additionally enable test for i?86-*-mingw*.\n+\t* g++.dg/ext/selectany1.C: Likewise.\n+\tRemove guard variable check.\n+\n 2011-01-07  Janus Weil  <janus@gcc.gnu.org>\n \n \tPR fortran/47189"}, {"sha": "08e65ec960886ce8237ad3a49ab3428714affef1", "filename": "gcc/testsuite/g++.dg/ext/dllexport-MI1.C", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a76d8c3c769a470eef858c8f758ff3ad8fb9e586/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fdllexport-MI1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a76d8c3c769a470eef858c8f758ff3ad8fb9e586/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fdllexport-MI1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fdllexport-MI1.C?ref=a76d8c3c769a470eef858c8f758ff3ad8fb9e586", "patch": "@@ -33,12 +33,12 @@ DLL_IMPEXP MI1 dllMI1Copy =  dllMI1;\n \n // and MI thunks,\n \n-// { dg-final { scan-assembler \"-export:\\[\\\\\\\\\\\"\\]*_ZThn4_NK3MI12vfEv\" } }\n-// { dg-final { scan-assembler \"-export:\\[\\\\\\\\\\\"\\]*_ZTv0_n12_NK2D12vfEv\" } }\n+// { dg-final { scan-assembler \"-export:\\[\\\\\\\\\\\"\\]*_ZThn._NK3MI12vfEv\" } }\n+// { dg-final { scan-assembler \"-export:\\[\\\\\\\\\\\"\\]*_ZTv0_n.._NK2D12vfEv\" } }\n \n // and a vtable data variable.\n \n-// { dg-final { scan-assembler \"-export:\\[\\\\\\\\\\\"\\]*_ZTV2D1\\[\\\\\\\"\\]*,data\" } }\n+// { dg-final { scan-assembler \"-export:\\[\\\\\\\\\\\"\\]*_ZTV2D1\\[\\\\\\\\\\\"\\]*,data\" } }\n \n // an explicit copy ctor\n // { dg-final { scan-assembler \"-export:\\[\\\\\\\\\\\"\\]*_ZN2D2C2ERKS_\" } }"}, {"sha": "3f2d05683f6611eb64a404236965ca9d88134cb5", "filename": "gcc/testsuite/g++.dg/ext/dllimport-MI1.C", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a76d8c3c769a470eef858c8f758ff3ad8fb9e586/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fdllimport-MI1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a76d8c3c769a470eef858c8f758ff3ad8fb9e586/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fdllimport-MI1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fdllimport-MI1.C?ref=a76d8c3c769a470eef858c8f758ff3ad8fb9e586", "patch": "@@ -1,4 +1,4 @@\n-// { dg-do compile { target i?86-*-cygwin* i?86-*-mingw*} }\n+// { dg-do compile { target i?86-*-cygwin* i?86-*-mingw* x86_64-*-mingw* } }\n //  Test handling of MI thunks in dllimported classes.\n \n // To build the dll and client app:\n@@ -49,5 +49,5 @@ int main ()\n \n // Scan for import of explicit copy ctor for D2, but no import\n // of compiler generated copy ctor for D1. \n-// { dg-final { scan-assembler  \"__imp___ZN2D2C2ERKS_\" } }\n-// { dg-final { scan-assembler-not \"__imp___ZN2D1C2ERKS_\" } }\n+// { dg-final { scan-assembler  \"__imp\\[_\\]*__ZN2D2C2ERKS_\" } }\n+// { dg-final { scan-assembler-not \"__imp\\[_\\]*__ZN2D1C2ERKS_\" } }"}, {"sha": "d7ddfe8a24ee4635d5284454a7bd1cd212fd86e5", "filename": "gcc/testsuite/g++.dg/ext/dllimport1.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a76d8c3c769a470eef858c8f758ff3ad8fb9e586/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fdllimport1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a76d8c3c769a470eef858c8f758ff3ad8fb9e586/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fdllimport1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fdllimport1.C?ref=a76d8c3c769a470eef858c8f758ff3ad8fb9e586", "patch": "@@ -1,5 +1,5 @@\n //  PR c++/7910\n-// { dg-do compile { target i?86-*-cygwin* i?86-*-mingw*} }\n+// { dg-do compile { target i?86-*-cygwin* i?86-*-mingw* x86_64-*-mingw* } }\n // { dg-options { -Wall -W } }\n \n class __attribute__((dllimport)) Foo\n@@ -28,4 +28,4 @@ Bar::~Bar()\n void Bar::dummy_bar_func()\n {}\n \n-// { dg-final { scan-assembler-not \"__imp___ZN3Foo14dummy_foo_fun\" } }\n+// { dg-final { scan-assembler-not \"__imp\\[_\\]*__ZN3Foo14dummy_foo_fun\" } }"}, {"sha": "80833766163678d0f84bc57b9fc8f09a64d055ff", "filename": "gcc/testsuite/g++.dg/ext/dllimport10.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a76d8c3c769a470eef858c8f758ff3ad8fb9e586/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fdllimport10.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a76d8c3c769a470eef858c8f758ff3ad8fb9e586/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fdllimport10.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fdllimport10.C?ref=a76d8c3c769a470eef858c8f758ff3ad8fb9e586", "patch": "@@ -1,7 +1,7 @@\n // PR c++/5287, c++/11021\n // Inherit a virtual method from a dllimport'd base class.\n \n-// { dg-do compile { target i?86-*-cygwin* i?86-*-mingw*} }\n+// { dg-do compile { target i?86-*-cygwin* i?86-*-mingw* x86_64-*-mingw* } }\n \n struct __attribute__((dllimport)) A\n {"}, {"sha": "6d822be2292a275dffb60f2324c3301da0cf4313", "filename": "gcc/testsuite/g++.dg/ext/dllimport11.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a76d8c3c769a470eef858c8f758ff3ad8fb9e586/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fdllimport11.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a76d8c3c769a470eef858c8f758ff3ad8fb9e586/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fdllimport11.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fdllimport11.C?ref=a76d8c3c769a470eef858c8f758ff3ad8fb9e586", "patch": "@@ -1,6 +1,6 @@\n // PR target/23589\n // Template member functions do not get dllimport status of class.\n-// { dg-do compile { target i?86-*-cygwin* i?86-*-mingw*} }\n+// { dg-do compile { target i?86-*-cygwin* i?86-*-mingw* x86_64-*-mingw* } }\n \n struct __attribute__((dllimport)) Foo\n {"}, {"sha": "ede546f200002aa44c1480ad1809cb3776007bb9", "filename": "gcc/testsuite/g++.dg/ext/dllimport12.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a76d8c3c769a470eef858c8f758ff3ad8fb9e586/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fdllimport12.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a76d8c3c769a470eef858c8f758ff3ad8fb9e586/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fdllimport12.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fdllimport12.C?ref=a76d8c3c769a470eef858c8f758ff3ad8fb9e586", "patch": "@@ -1,7 +1,7 @@\n // PR target/27650\n // Don't use dllimport semantics on virtual methods when initializing\n // vtables\n-// { dg-do compile { target i?86-*-cygwin* i?86-*-mingw*} }\n+// { dg-do compile { target i?86-*-cygwin* i?86-*-mingw* x86_64-*-mingw* } }\n \n // Use import lib thunk for vtable entry of explicitly virtual method,\n struct base"}, {"sha": "fa1ffbfdb52d7f9be1f5207f5289b75e749161ee", "filename": "gcc/testsuite/g++.dg/ext/dllimport13.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a76d8c3c769a470eef858c8f758ff3ad8fb9e586/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fdllimport13.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a76d8c3c769a470eef858c8f758ff3ad8fb9e586/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fdllimport13.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fdllimport13.C?ref=a76d8c3c769a470eef858c8f758ff3ad8fb9e586", "patch": "@@ -1,7 +1,7 @@\n //  PR c++/34749\n //  Ensure dllimport is handled correctly for friends\n \n-// { dg-do compile { target i?86-*-cygwin* i?86-*-mingw*} }\n+// { dg-do compile { target i?86-*-cygwin* i?86-*-mingw* x86_64-*-mingw* } }\n \n int  __declspec (dllimport) bar();\n int  __declspec (dllimport) baz();"}, {"sha": "d0de2551a53b378aa63e82018d81a8a368b9b79f", "filename": "gcc/testsuite/g++.dg/ext/dllimport2.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a76d8c3c769a470eef858c8f758ff3ad8fb9e586/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fdllimport2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a76d8c3c769a470eef858c8f758ff3ad8fb9e586/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fdllimport2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fdllimport2.C?ref=a76d8c3c769a470eef858c8f758ff3ad8fb9e586", "patch": "@@ -1,4 +1,4 @@\n-// { dg-do compile { target i?86-*-cygwin* i?86-*-mingw*} }\n+// { dg-do compile { target i?86-*-cygwin* i?86-*-mingw* x86_64-*-mingw* } }\n // PR c++/9738  Dllimport attribute is overriden by later definition/redeclaration\n \n void __attribute__((dllimport)) Bar(void);"}, {"sha": "6538232f7d371f1c493771522c94a6ef95db8b88", "filename": "gcc/testsuite/g++.dg/ext/dllimport3.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a76d8c3c769a470eef858c8f758ff3ad8fb9e586/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fdllimport3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a76d8c3c769a470eef858c8f758ff3ad8fb9e586/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fdllimport3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fdllimport3.C?ref=a76d8c3c769a470eef858c8f758ff3ad8fb9e586", "patch": "@@ -1,4 +1,4 @@\n-// { dg-do compile { target i?86-*-cygwin* i?86-*-mingw*} }\n+// { dg-do compile { target i?86-*-cygwin* i?86-*-mingw* x86_64-*-mingw* } }\n \n // PR 10148  Dllimport attribute of object is overriden by later\n // redefinition without attribute."}, {"sha": "4d4074cbbd3628ecf763fee1ef4cc749abfa0be5", "filename": "gcc/testsuite/g++.dg/ext/dllimport4.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a76d8c3c769a470eef858c8f758ff3ad8fb9e586/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fdllimport4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a76d8c3c769a470eef858c8f758ff3ad8fb9e586/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fdllimport4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fdllimport4.C?ref=a76d8c3c769a470eef858c8f758ff3ad8fb9e586", "patch": "@@ -1,5 +1,5 @@\n //  Report error if dllimport attribute in definition itself.\n-// { dg-do compile { target i?86-*-cygwin* i?86-*-mingw*} }\n+// { dg-do compile { target i?86-*-cygwin* i?86-*-mingw* x86_64-*-mingw* } }\n \n __attribute__((dllimport))  void bar () { }\t// { dg-error \"definition\" }\n "}, {"sha": "5f1adb1ace2c3a7dc195e9281378ab4e42047e33", "filename": "gcc/testsuite/g++.dg/ext/dllimport5.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a76d8c3c769a470eef858c8f758ff3ad8fb9e586/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fdllimport5.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a76d8c3c769a470eef858c8f758ff3ad8fb9e586/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fdllimport5.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fdllimport5.C?ref=a76d8c3c769a470eef858c8f758ff3ad8fb9e586", "patch": "@@ -1,4 +1,4 @@\n-// { dg-do compile { target i?86-*-cygwin* i?86-*-mingw*} }\n+// { dg-do compile { target i?86-*-cygwin* i?86-*-mingw* x86_64-*-mingw* } }\n //  Report error if static symbol definition has dllimport attribute.\n \n __attribute__((dllimport))"}, {"sha": "52b0476c6d0555d2b34ab0ec19c8c732af628447", "filename": "gcc/testsuite/g++.dg/ext/dllimport6.C", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a76d8c3c769a470eef858c8f758ff3ad8fb9e586/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fdllimport6.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a76d8c3c769a470eef858c8f758ff3ad8fb9e586/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fdllimport6.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fdllimport6.C?ref=a76d8c3c769a470eef858c8f758ff3ad8fb9e586", "patch": "@@ -1,4 +1,4 @@\n-// { dg-do compile { target i?86-*-cygwin* i?86-*-mingw*} }\n+// { dg-do compile { target i?86-*-cygwin* i?86-*-mingw* x86_64-*-mingw* } }\n //  Mark class static members as dllimport.\n \n struct Baz\n@@ -25,6 +25,6 @@ int foo()\n   return (a + b + c + *baz);\n }\n \n-// { dg-final { scan-assembler __imp___ZN3Bar3twoE } }\n-// { dg-final { scan-assembler __imp___ZN3Bar5threeE } }\n-// { dg-final { scan-assembler __imp___ZN3Bar8null_bazE } }\n+// { dg-final { scan-assembler __imp\\[_\\]*__ZN3Bar3twoE } }\n+// { dg-final { scan-assembler __imp\\[_\\]*__ZN3Bar5threeE } }\n+// { dg-final { scan-assembler __imp\\[_\\]*__ZN3Bar8null_bazE } }"}, {"sha": "af605a368242a5e3790725ea85ca6d3a9794db5d", "filename": "gcc/testsuite/g++.dg/ext/dllimport8.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a76d8c3c769a470eef858c8f758ff3ad8fb9e586/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fdllimport8.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a76d8c3c769a470eef858c8f758ff3ad8fb9e586/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fdllimport8.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fdllimport8.C?ref=a76d8c3c769a470eef858c8f758ff3ad8fb9e586", "patch": "@@ -2,7 +2,7 @@\n //  Ignore  dllimport of static members if marked inlined.\n //  or if definition follows  declaration in dllimported class.\n \n-// { dg-do compile { target i?86-*-cygwin* i?86-*-mingw*} }\n+// { dg-do compile { target i?86-*-cygwin* i?86-*-mingw* x86_64-*-mingw* } }\n // { dg-options { -Wall -W } }\n \n struct  __attribute__((dllimport)) Foo\n@@ -26,4 +26,4 @@ void testfoo()\n   Foo::static_func2();\n }\n \n-// { dg-final { scan-assembler-not \"__imp__\" } }\n+// { dg-final { scan-assembler-not \"__imp_\" } }"}, {"sha": "da57ef4bdcc8e08bd48e7d98b79f351fdc3fe824", "filename": "gcc/testsuite/g++.dg/ext/dllimport9.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a76d8c3c769a470eef858c8f758ff3ad8fb9e586/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fdllimport9.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a76d8c3c769a470eef858c8f758ff3ad8fb9e586/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fdllimport9.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fdllimport9.C?ref=a76d8c3c769a470eef858c8f758ff3ad8fb9e586", "patch": "@@ -1,5 +1,5 @@\n //  Handle dllimport attribute for functions declared inline.\n-// { dg-do compile { target i?86-*-cygwin* i?86-*-mingw*} }\n+// { dg-do compile { target i?86-*-cygwin* i?86-*-mingw* x86_64-*-mingw* } }\n // { dg-options { -W } }\n \n inline __attribute__((dllimport)) void bar() { }\t// { dg-warning \"inline\" }\n@@ -20,4 +20,4 @@ void use_inlines()\n   aBlah.out_blah ();\n }\n \n-// { dg-final { scan-assembler-not \"__imp__\" } }\n+// { dg-final { scan-assembler-not \"__imp_\" } }"}, {"sha": "e80fe4fd10c02ac4da8e695d36eff2fdae9db70d", "filename": "gcc/testsuite/g++.dg/ext/selectany1.C", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a76d8c3c769a470eef858c8f758ff3ad8fb9e586/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fselectany1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a76d8c3c769a470eef858c8f758ff3ad8fb9e586/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fselectany1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fselectany1.C?ref=a76d8c3c769a470eef858c8f758ff3ad8fb9e586", "patch": "@@ -1,11 +1,10 @@\n // { dg-do compile { target i?86-pc-cygwin } }\n-// { dg-do compile { target i?86-pc-mingw* } }\n+// { dg-do compile { target i?86-*-mingw* x86_64-*-mingw* } }\n \n // Check that selectany attribute puts symbols into link-once sections.\n \n // { dg-final { scan-assembler \"\\.section\\t\\.data\\\\\\$foo\\[^\\n\\]*\\n\\t\\.linkonce discard\" } }\n // { dg-final { scan-assembler \"\\.section\\t\\.data\\\\\\$x\\[^\\n\\]*\\n\\t\\.linkonce discard\" } }\n-// { dg-final { scan-assembler-dem \"\\nguard variable for x:\" } }\n \n __declspec (selectany) int foo = 1;\n "}, {"sha": "278b32d2f4bab7efdffc97146ebc9a06c910ec0d", "filename": "gcc/testsuite/g++.dg/ext/selectany2.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a76d8c3c769a470eef858c8f758ff3ad8fb9e586/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fselectany2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a76d8c3c769a470eef858c8f758ff3ad8fb9e586/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fselectany2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fselectany2.C?ref=a76d8c3c769a470eef858c8f758ff3ad8fb9e586", "patch": "@@ -1,5 +1,5 @@\n // { dg-do compile { target i?86-pc-cygwin } }\n-// { dg-do compile { target i?86-pc-mingw* } }\n+// { dg-do compile { target i?86-*-mingw* x86_64-*-mingw* } }\n \n // Check for errors with invalid usage of selectany attribute.\n "}]}