{"sha": "0b82a5a253f65400591264036266a6de4c2db6df", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGI4MmE1YTI1M2Y2NTQwMDU5MTI2NDAzNjI2NmE2ZGU0YzJkYjZkZg==", "commit": {"author": {"name": "Wilco Dijkstra", "email": "wdijkstr@arm.com", "date": "2014-12-18T13:46:22Z"}, "committer": {"name": "Jiong Wang", "email": "jiwang@gcc.gnu.org", "date": "2014-12-18T13:46:22Z"}, "message": "[AArch64] Generalize code alignment\n\n2014-12-18  Wilco Dijkstra  <wilco.dijkstra@arm.com>\n\n\t* config/aarch64/aarch64-protos.h (tune-params): Add code alignment\n\ttuning parameters.\n\t* gcc/config/aarch64/aarch64.c (generic_tunings): Add code alignment\n\ttuning parameters.\n\t(cortexa53_tunings): Likewise.\n\t(cortexa57_tunings): Likewise.\n\t(thunderx_tunings): Likewise.\n\t(aarch64_override_options): Use new alignment tunings.\n\nFrom-SVN: r218865", "tree": {"sha": "a460ef8e877d3132ded140b5a67017ec1cdafcb5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a460ef8e877d3132ded140b5a67017ec1cdafcb5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0b82a5a253f65400591264036266a6de4c2db6df", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0b82a5a253f65400591264036266a6de4c2db6df", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0b82a5a253f65400591264036266a6de4c2db6df", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0b82a5a253f65400591264036266a6de4c2db6df/comments", "author": null, "committer": null, "parents": [{"sha": "09cb9532c4c56979b1d9b105e5608ba22b66c5ac", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/09cb9532c4c56979b1d9b105e5608ba22b66c5ac", "html_url": "https://github.com/Rust-GCC/gccrs/commit/09cb9532c4c56979b1d9b105e5608ba22b66c5ac"}], "stats": {"total": 37, "additions": 29, "deletions": 8}, "files": [{"sha": "6bb5ec2f35f65bcfbbf64f70c2a2107f26f89cce", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0b82a5a253f65400591264036266a6de4c2db6df/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0b82a5a253f65400591264036266a6de4c2db6df/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0b82a5a253f65400591264036266a6de4c2db6df", "patch": "@@ -1,3 +1,14 @@\n+2014-12-18  Wilco Dijkstra  <wilco.dijkstra@arm.com>\n+\n+\t* config/aarch64/aarch64-protos.h (tune-params): Add code alignment\n+\ttuning parameters.\n+\t* gcc/config/aarch64/aarch64.c (generic_tunings): Add code alignment\n+\ttuning parameters.\n+\t(cortexa53_tunings): Likewise.\n+\t(cortexa57_tunings): Likewise.\n+\t(thunderx_tunings): Likewise.\n+\t(aarch64_override_options): Use new alignment tunings.\n+\n 2014-12-18  Martin Liska  <mliska@suse.cz>\n \n \tPR tree-optimization/64330"}, {"sha": "f22573bae15d99b4277182099cf45c1458ddb5e4", "filename": "gcc/config/aarch64/aarch64-protos.h", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0b82a5a253f65400591264036266a6de4c2db6df/gcc%2Fconfig%2Faarch64%2Faarch64-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0b82a5a253f65400591264036266a6de4c2db6df/gcc%2Fconfig%2Faarch64%2Faarch64-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64-protos.h?ref=0b82a5a253f65400591264036266a6de4c2db6df", "patch": "@@ -170,8 +170,10 @@ struct tune_params\n   const struct cpu_vector_cost *const vec_costs;\n   const int memmov_cost;\n   const int issue_rate;\n-  const int align;\n   const unsigned int fuseable_ops;\n+  const int function_align;\n+  const int jump_align;\n+  const int loop_align;\n   const int int_reassoc_width;\n   const int fp_reassoc_width;\n   const int vec_reassoc_width;"}, {"sha": "cca53f2faa837951b3a24b90bea336e056a3702b", "filename": "gcc/config/aarch64/aarch64.c", "status": "modified", "additions": 15, "deletions": 7, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0b82a5a253f65400591264036266a6de4c2db6df/gcc%2Fconfig%2Faarch64%2Faarch64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0b82a5a253f65400591264036266a6de4c2db6df/gcc%2Fconfig%2Faarch64%2Faarch64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64.c?ref=0b82a5a253f65400591264036266a6de4c2db6df", "patch": "@@ -323,8 +323,10 @@ static const struct tune_params generic_tunings =\n   &generic_vector_cost,\n   NAMED_PARAM (memmov_cost, 4),\n   NAMED_PARAM (issue_rate, 2),\n-  NAMED_PARAM (align, 4),\n   NAMED_PARAM (fuseable_ops, AARCH64_FUSE_NOTHING),\n+  8,\t/* function_align.  */\n+  8,\t/* jump_align.  */\n+  4,\t/* loop_align.  */\n   2,\t/* int_reassoc_width.  */\n   4,\t/* fp_reassoc_width.  */\n   1\t/* vec_reassoc_width.  */\n@@ -338,9 +340,11 @@ static const struct tune_params cortexa53_tunings =\n   &generic_vector_cost,\n   NAMED_PARAM (memmov_cost, 4),\n   NAMED_PARAM (issue_rate, 2),\n-  NAMED_PARAM (align, 8),\n   NAMED_PARAM (fuseable_ops, (AARCH64_FUSE_MOV_MOVK | AARCH64_FUSE_ADRP_ADD\n                              | AARCH64_FUSE_MOVK_MOVK | AARCH64_FUSE_ADRP_LDR)),\n+  8,\t/* function_align.  */\n+  8,\t/* jump_align.  */\n+  4,\t/* loop_align.  */\n   2,\t/* int_reassoc_width.  */\n   4,\t/* fp_reassoc_width.  */\n   1\t/* vec_reassoc_width.  */\n@@ -354,8 +358,10 @@ static const struct tune_params cortexa57_tunings =\n   &cortexa57_vector_cost,\n   NAMED_PARAM (memmov_cost, 4),\n   NAMED_PARAM (issue_rate, 3),\n-  NAMED_PARAM (align, 8),\n   NAMED_PARAM (fuseable_ops, (AARCH64_FUSE_MOV_MOVK | AARCH64_FUSE_ADRP_ADD | AARCH64_FUSE_MOVK_MOVK)),\n+  16,\t/* function_align.  */\n+  8,\t/* jump_align.  */\n+  4,\t/* loop_align.  */\n   2,\t/* int_reassoc_width.  */\n   4,\t/* fp_reassoc_width.  */\n   1\t/* vec_reassoc_width.  */\n@@ -369,8 +375,10 @@ static const struct tune_params thunderx_tunings =\n   &generic_vector_cost,\n   NAMED_PARAM (memmov_cost, 6),\n   NAMED_PARAM (issue_rate, 2),\n-  NAMED_PARAM (align, 8),\n   NAMED_PARAM (fuseable_ops, AARCH64_FUSE_CMP_BRANCH),\n+  8,\t/* function_align.  */\n+  8,\t/* jump_align.  */\n+  8,\t/* loop_align.  */\n   2,\t/* int_reassoc_width.  */\n   4,\t/* fp_reassoc_width.  */\n   1\t/* vec_reassoc_width.  */\n@@ -6771,11 +6779,11 @@ aarch64_override_options (void)\n   if (!optimize_size)\n     {\n       if (align_loops <= 0)\n-\talign_loops = aarch64_tune_params->align;\n+\talign_loops = aarch64_tune_params->loop_align;\n       if (align_jumps <= 0)\n-\talign_jumps = aarch64_tune_params->align;\n+\talign_jumps = aarch64_tune_params->jump_align;\n       if (align_functions <= 0)\n-\talign_functions = aarch64_tune_params->align;\n+\talign_functions = aarch64_tune_params->function_align;\n     }\n \n   aarch64_override_options_after_change ();"}]}