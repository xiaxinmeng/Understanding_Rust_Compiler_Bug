{"sha": "f62dbf031d8413a25ad1c4fdd1849a1d924eb9be", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjYyZGJmMDMxZDg0MTNhMjVhZDFjNGZkZDE4NDlhMWQ5MjRlYjliZQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@yorick.cygnus.com", "date": "1997-08-19T22:49:24Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "1997-08-19T22:49:24Z"}, "message": "merge\n\nFrom-SVN: r14853", "tree": {"sha": "d837384650f645bdbea1d618e3715c805a44af4d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d837384650f645bdbea1d618e3715c805a44af4d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f62dbf031d8413a25ad1c4fdd1849a1d924eb9be", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f62dbf031d8413a25ad1c4fdd1849a1d924eb9be", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f62dbf031d8413a25ad1c4fdd1849a1d924eb9be", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f62dbf031d8413a25ad1c4fdd1849a1d924eb9be/comments", "author": null, "committer": null, "parents": [{"sha": "da20811c09fa4146938034c32311a290c59c394d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/da20811c09fa4146938034c32311a290c59c394d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/da20811c09fa4146938034c32311a290c59c394d"}], "stats": {"total": 94, "additions": 82, "deletions": 12}, "files": [{"sha": "78e52d5deb4a5f9b4fcfeff0c6178a77b132dc20", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f62dbf031d8413a25ad1c4fdd1849a1d924eb9be/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f62dbf031d8413a25ad1c4fdd1849a1d924eb9be/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=f62dbf031d8413a25ad1c4fdd1849a1d924eb9be", "patch": "@@ -1,3 +1,16 @@\n+Tue Aug 19 02:26:07 1997  Jason Merrill  <jason@yorick.cygnus.com>\n+\n+\t* call.c (is_subseq): New fn.\n+\t(compare_ics): Use it.\n+\n+\t* repo.c (finish_repo): Don't crash on no args.\n+\n+\t* parse.y (named_complex_class_head_sans_basetype): Handle\n+ \texplicit global scope.\n+\t* decl2.c (handle_class_head): New fn.\n+\n+\t* pt.c (unify): Add CONST_DECL case.\n+\n Thu Aug 14 10:05:13 1997  Brendan Kehoe  <brendan@lisa.cygnus.com>\n \n \t* rtti.c (permanent_obstack): Fix decl to not be a pointer."}, {"sha": "7180adc40e9fe743d5dcc7f5f9c48680098d1385", "filename": "gcc/cp/call.c", "status": "modified", "additions": 33, "deletions": 1, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f62dbf031d8413a25ad1c4fdd1849a1d924eb9be/gcc%2Fcp%2Fcall.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f62dbf031d8413a25ad1c4fdd1849a1d924eb9be/gcc%2Fcp%2Fcall.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcall.c?ref=f62dbf031d8413a25ad1c4fdd1849a1d924eb9be", "patch": "@@ -5452,6 +5452,31 @@ compare_qual (ics1, ics2)\n   return 0;\n }\n \n+/* Determine whether standard conversion sequence ICS1 is a proper\n+   subsequence of ICS2.  We assume that a conversion of the same code\n+   between the same types indicates a subsequence.  */\n+\n+static int\n+is_subseq (ics1, ics2)\n+     tree ics1, ics2;\n+{\n+  for (;;)\n+    {\n+      ics2 = TREE_OPERAND (ics2, 0));\n+\n+      if (TREE_CODE (ics2) == TREE_CODE (ics1)\n+\t  && comptypes (TREE_TYPE (ics2), TREE_TYPE (ics1), 1)\n+\t  && comptypes (TREE_TYPE (TREE_OPERAND (ics2, 0)),\n+\t\t\tTREE_TYPE (TREE_OPERAND (ics1, 0)), 1))\n+\treturn 1;\n+\n+      if (TREE_CODE (ics2) == USER_CONV\n+\t  || TREE_CODE (ics2) == AMBIG_CONV\n+\t  || TREE_CODE (ics2) == IDENTITY_CONV)\n+\treturn 0;\n+    }\n+}\n+\n /* Compare two implicit conversion sequences according to the rules set out in\n    [over.ics.rank].  Return values:\n \n@@ -5549,7 +5574,14 @@ compare_ics (ics1, ics2)\n #endif\n \n   if (TREE_CODE (main1) != TREE_CODE (main2))\n-    return 0;\n+    {\n+      /* ...if S1  is  a  proper  subsequence  of  S2  */\n+      if (is_subseq (main1, main2))\n+\treturn 1;\n+      if (is_subseq (main2, main1))\n+\treturn -1;\n+      return 0;\n+    }\n \n   if (TREE_CODE (main1) == PTR_CONV || TREE_CODE (main1) == PMEM_CONV\n       || TREE_CODE (main1) == REF_BIND || TREE_CODE (main1) == BASE_CONV)"}, {"sha": "0bfd43de33bb38b2de34fa7210101b01aa537837", "filename": "gcc/cp/decl2.c", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f62dbf031d8413a25ad1c4fdd1849a1d924eb9be/gcc%2Fcp%2Fdecl2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f62dbf031d8413a25ad1c4fdd1849a1d924eb9be/gcc%2Fcp%2Fdecl2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl2.c?ref=f62dbf031d8413a25ad1c4fdd1849a1d924eb9be", "patch": "@@ -3710,3 +3710,22 @@ mark_used (decl)\n   if (DECL_LANG_SPECIFIC (decl) && DECL_TEMPLATE_INFO (decl))\n     instantiate_decl (decl);\n }\n+\n+/* Helper function for named_class_head_sans_basetype nonterminal.  */\n+\n+tree\n+handle_class_head (aggr, scope, id)\n+     tree aggr, scope, id;\n+{\n+  if (TREE_CODE (id) == TYPE_DECL)\n+    return id;\n+\n+  if (scope)\n+    cp_error (\"`%T' does not have a nested type named `%D'\", scope, id);\n+  else\n+    cp_error (\"no file-scope type named `%D'\", id);\n+\n+  id = xref_tag\n+    (aggr, make_anon_name (), NULL_TREE, 1);\n+  return TYPE_MAIN_DECL (id);\n+}"}, {"sha": "3b40336460848163cd117722721f4e1dfedb6296", "filename": "gcc/cp/parse.y", "status": "modified", "additions": 11, "deletions": 10, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f62dbf031d8413a25ad1c4fdd1849a1d924eb9be/gcc%2Fcp%2Fparse.y", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f62dbf031d8413a25ad1c4fdd1849a1d924eb9be/gcc%2Fcp%2Fparse.y", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparse.y?ref=f62dbf031d8413a25ad1c4fdd1849a1d924eb9be", "patch": "@@ -2280,16 +2280,17 @@ named_complex_class_head_sans_basetype:\n \t  aggr nested_name_specifier identifier\n \t\t{\n \t\t  current_aggr = $1;\n-\t\t  if (TREE_CODE ($3) == TYPE_DECL)\n-\t\t    $$ = $3;\n-\t\t  else\n-\t\t    {\n-\t\t      cp_error (\"`%T' does not have a nested type named `%D'\",\n-\t\t\t\t$2, $3);\n-\t\t      $$ = xref_tag\n-\t\t\t(current_aggr, make_anon_name (), NULL_TREE, 1);\n-\t\t      $$ = TYPE_MAIN_DECL ($$);\n-\t\t    }\n+\t\t  $$ = handle_class_head ($1, $2, $3);\n+\t\t}\n+\t| aggr global_scope nested_name_specifier identifier\n+\t\t{\n+\t\t  current_aggr = $1;\n+\t\t  $$ = handle_class_head ($1, $3, $4);\n+\t\t}\n+\t| aggr global_scope identifier\n+\t\t{\n+\t\t  current_aggr = $1;\n+\t\t  $$ = handle_class_head ($1, NULL_TREE, $3);\n \t\t}\n \t| aggr template_type\n \t\t{ current_aggr = $$; $$ = $2; }"}, {"sha": "799b774a05195224a96805101208df50cac2e7e8", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f62dbf031d8413a25ad1c4fdd1849a1d924eb9be/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f62dbf031d8413a25ad1c4fdd1849a1d924eb9be/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=f62dbf031d8413a25ad1c4fdd1849a1d924eb9be", "patch": "@@ -2945,6 +2945,11 @@ unify (tparms, targs, ntparms, parm, arg, nsubsts, strict)\n       return unify (tparms, targs, ntparms, TREE_TYPE (parm),\n \t\t    TREE_TYPE (arg), nsubsts, strict);\n \n+    case CONST_DECL:\n+      if (arg != decl_constant_value (parm))\n+\treturn 1;\n+      return 0;\n+\n     default:\n       sorry (\"use of `%s' in template type unification\",\n \t     tree_code_name [(int) TREE_CODE (parm)]);"}, {"sha": "b979da78b2c396e425433578cd9ea7b83f47c81f", "filename": "gcc/cp/repo.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f62dbf031d8413a25ad1c4fdd1849a1d924eb9be/gcc%2Fcp%2Frepo.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f62dbf031d8413a25ad1c4fdd1849a1d924eb9be/gcc%2Fcp%2Frepo.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Frepo.c?ref=f62dbf031d8413a25ad1c4fdd1849a1d924eb9be", "patch": "@@ -420,7 +420,7 @@ finish_repo ()\n     if (strcmp (old_main, main_input_filename) != 0\n \t|| strcmp (old_dir, dir) != 0\n \t|| (args == NULL) != (old_args == NULL)\n-\t|| strcmp (old_args, args) != 0)\n+\t|| (args && strcmp (old_args, args) != 0))\n       repo_changed = 1;\n \n   if (! repo_changed || errorcount || sorrycount)"}]}