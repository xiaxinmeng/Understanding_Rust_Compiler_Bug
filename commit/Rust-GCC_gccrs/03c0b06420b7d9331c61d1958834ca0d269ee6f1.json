{"sha": "03c0b06420b7d9331c61d1958834ca0d269ee6f1", "node_id": "C_kwDOANBUbNoAKDAzYzBiMDY0MjBiN2Q5MzMxYzYxZDE5NTg4MzRjYTBkMjY5ZWU2ZjE", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2022-07-22T09:39:58Z"}, "committer": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2022-07-22T09:41:15Z"}, "message": "mklog: fill-up subject prefix only for a single PR\n\ncontrib/ChangeLog:\n\n\t* mklog.py: Use component: [PR xyz] only when one PR is used.", "tree": {"sha": "407b67a59e249b8375e29a09cc3c2a605b40568a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/407b67a59e249b8375e29a09cc3c2a605b40568a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/03c0b06420b7d9331c61d1958834ca0d269ee6f1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/03c0b06420b7d9331c61d1958834ca0d269ee6f1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/03c0b06420b7d9331c61d1958834ca0d269ee6f1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/03c0b06420b7d9331c61d1958834ca0d269ee6f1/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d85e5aeb7665ea941ff0ef7c11bfe1d39986b48a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d85e5aeb7665ea941ff0ef7c11bfe1d39986b48a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d85e5aeb7665ea941ff0ef7c11bfe1d39986b48a"}], "stats": {"total": 21, "additions": 9, "deletions": 12}, "files": [{"sha": "8693767a7f61de1a6a6c6923813470957ec63e03", "filename": "contrib/mklog.py", "status": "modified", "additions": 9, "deletions": 12, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/03c0b06420b7d9331c61d1958834ca0d269ee6f1/contrib%2Fmklog.py", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/03c0b06420b7d9331c61d1958834ca0d269ee6f1/contrib%2Fmklog.py", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fmklog.py?ref=03c0b06420b7d9331c61d1958834ca0d269ee6f1", "patch": "@@ -73,8 +73,6 @@\n script_folder = os.path.realpath(__file__)\n root = os.path.dirname(os.path.dirname(script_folder))\n \n-firstpr = ''\n-\n \n def find_changelog(path):\n     folder = os.path.split(path)[0]\n@@ -157,12 +155,13 @@ def get_rel_path_if_prefixed(path, folder):\n \n def generate_changelog(data, no_functions=False, fill_pr_titles=False,\n                        additional_prs=None):\n+    global prs\n+    prs = []\n+\n     changelogs = {}\n     changelog_list = []\n-    prs = []\n     out = ''\n     diff = PatchSet(data)\n-    global firstpr\n \n     if additional_prs:\n         for apr in additional_prs:\n@@ -212,9 +211,6 @@ def generate_changelog(data, no_functions=False, fill_pr_titles=False,\n                 if pr not in this_file_prs and pr2 not in prs:\n                     prs.append(pr2)\n \n-    if prs:\n-        firstpr = prs[0]\n-\n     if fill_pr_titles:\n         out += get_pr_titles(prs)\n \n@@ -372,11 +368,12 @@ def skip_line_in_changelog(line):\n             end = lines[len(start):]\n             with open(args.changelog, 'w') as f:\n                 if not start or not start[0]:\n-                    # initial commit subject line 'component: [PRnnnnn]'\n-                    m = prnum_regex.match(firstpr)\n-                    if m:\n-                        title = f'{m.group(\"comp\")}: [PR{m.group(\"num\")}]'\n-                        start.insert(0, title)\n+                    if len(prs) == 1:\n+                        # initial commit subject line 'component: [PRnnnnn]'\n+                        m = prnum_regex.match(prs[0])\n+                        if m:\n+                            title = f'{m.group(\"comp\")}: [PR{m.group(\"num\")}]'\n+                            start.insert(0, title)\n                 if start:\n                     # append empty line\n                     if start[-1] != '':"}]}