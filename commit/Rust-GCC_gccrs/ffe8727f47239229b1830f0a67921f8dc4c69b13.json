{"sha": "ffe8727f47239229b1830f0a67921f8dc4c69b13", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmZlODcyN2Y0NzIzOTIyOWIxODMwZjBhNjc5MjFmOGRjNGM2OWIxMw==", "commit": {"author": {"name": "Vladimir Makarov", "email": "vmakarov@redhat.com", "date": "2011-11-23T18:51:17Z"}, "committer": {"name": "Vladimir Makarov", "email": "vmakarov@gcc.gnu.org", "date": "2011-11-23T18:51:17Z"}, "message": "re PR rtl-optimization/48455 (Huge code size regression for all ARM configurations)\n\n2011-11-23  Vladimir Makarov  <vmakarov@redhat.com>\n\n\tPR rtl-optimization/48455\n\t* doc/invoke.texi (-fira-region): Document default values.\n\n\t* flags-types.h (enum ira_region): Add new value\n\tIRA_REGION_AUTODETECT.\n\n\t* common.opt (fira-region): Set up initial value to\n\tIRA_REGION_AUTODETECT.\n\n\t* toplev.c (process_options): Set up flag_ira_region depending on\n\t-O options.\n\n\t* ira.c (ira.c): Remove optimize guard for ira_build.\n\nFrom-SVN: r181675", "tree": {"sha": "417f4807f2ac303fb2e45ded4d924d1d329be5e0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/417f4807f2ac303fb2e45ded4d924d1d329be5e0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ffe8727f47239229b1830f0a67921f8dc4c69b13", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ffe8727f47239229b1830f0a67921f8dc4c69b13", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ffe8727f47239229b1830f0a67921f8dc4c69b13", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ffe8727f47239229b1830f0a67921f8dc4c69b13/comments", "author": {"login": "vnmakarov", "id": 9855671, "node_id": "MDQ6VXNlcjk4NTU2NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/9855671?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vnmakarov", "html_url": "https://github.com/vnmakarov", "followers_url": "https://api.github.com/users/vnmakarov/followers", "following_url": "https://api.github.com/users/vnmakarov/following{/other_user}", "gists_url": "https://api.github.com/users/vnmakarov/gists{/gist_id}", "starred_url": "https://api.github.com/users/vnmakarov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vnmakarov/subscriptions", "organizations_url": "https://api.github.com/users/vnmakarov/orgs", "repos_url": "https://api.github.com/users/vnmakarov/repos", "events_url": "https://api.github.com/users/vnmakarov/events{/privacy}", "received_events_url": "https://api.github.com/users/vnmakarov/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "810fb8f1d6cadce0899872c310ebbae829d673dd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/810fb8f1d6cadce0899872c310ebbae829d673dd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/810fb8f1d6cadce0899872c310ebbae829d673dd"}], "stats": {"total": 51, "additions": 39, "deletions": 12}, "files": [{"sha": "96a74f05e36611c1e313b1bbd6d74029fa6d72c4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ffe8727f47239229b1830f0a67921f8dc4c69b13/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ffe8727f47239229b1830f0a67921f8dc4c69b13/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ffe8727f47239229b1830f0a67921f8dc4c69b13", "patch": "@@ -1,3 +1,19 @@\n+2011-11-23  Vladimir Makarov  <vmakarov@redhat.com>\n+\n+\tPR rtl-optimization/48455\n+\t* doc/invoke.texi (-fira-region): Document default values.\n+\n+\t* flags-types.h (enum ira_region): Add new value\n+\tIRA_REGION_AUTODETECT.\n+\n+\t* common.opt (fira-region): Set up initial value to\n+\tIRA_REGION_AUTODETECT.\n+\n+\t* toplev.c (process_options): Set up flag_ira_region depending on\n+\t-O options.\n+\n+\t* ira.c (ira.c): Remove optimize guard for ira_build.\n+\n 2011-11-23  Chung-Lin Tang  <cltang@codesourcery.com>\n \n \tPR rtl-optimization/50496"}, {"sha": "55d3f2d44d12f6328c00ae6b2e9470bb1bbd546a", "filename": "gcc/common.opt", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ffe8727f47239229b1830f0a67921f8dc4c69b13/gcc%2Fcommon.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ffe8727f47239229b1830f0a67921f8dc4c69b13/gcc%2Fcommon.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcommon.opt?ref=ffe8727f47239229b1830f0a67921f8dc4c69b13", "patch": "@@ -1337,7 +1337,7 @@ EnumValue\n Enum(ira_algorithm) String(priority) Value(IRA_ALGORITHM_PRIORITY)\n \n fira-region=\n-Common Joined RejectNegative Enum(ira_region) Var(flag_ira_region) Init(IRA_REGION_MIXED)\n+Common Joined RejectNegative Enum(ira_region) Var(flag_ira_region) Init(IRA_REGION_AUTODETECT)\n -fira-region=[one|all|mixed] Set regions for IRA\n \n Enum"}, {"sha": "4e6edb9414e9dfdd4ae8fc2edd322e1c59a09337", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 10, "deletions": 7, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ffe8727f47239229b1830f0a67921f8dc4c69b13/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ffe8727f47239229b1830f0a67921f8dc4c69b13/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=ffe8727f47239229b1830f0a67921f8dc4c69b13", "patch": "@@ -6731,13 +6731,16 @@ rule generates a better code.\n Use specified regions for the integrated register allocator.  The\n @var{region} argument should be one of @code{all}, @code{mixed}, or\n @code{one}.  The first value means using all loops as register\n-allocation regions, the second value which is the default means using\n-all loops except for loops with small register pressure as the\n-regions, and third one means using all function as a single region.\n-The first value can give best result for machines with small size and\n-irregular register set, the third one results in faster and generates\n-decent code and the smallest size code, and the default value usually\n-give the best results in most cases and for most architectures.\n+allocation regions, the second value which is enabled by default when\n+compiling with optimization for speed (@option{-O}, @option{-O2},\n+@dots{}) means using all loops except for loops with small register\n+pressure as the regions, and third one which is enabled by default for\n+@option{-Os} or @option{-O0} means using all function as a single\n+region.  The first value can give best result for machines with small\n+size and irregular register set, the third one results in faster and\n+generates decent code and the smallest size code, and the second value\n+usually give the best results in most cases and for most\n+architectures.\n \n @item -fira-loop-pressure\n @opindex fira-loop-pressure"}, {"sha": "f757423e56a57df51507beabcbfcd07ddf059d48", "filename": "gcc/flag-types.h", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ffe8727f47239229b1830f0a67921f8dc4c69b13/gcc%2Fflag-types.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ffe8727f47239229b1830f0a67921f8dc4c69b13/gcc%2Fflag-types.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fflag-types.h?ref=ffe8727f47239229b1830f0a67921f8dc4c69b13", "patch": "@@ -118,7 +118,11 @@ enum ira_region\n {\n   IRA_REGION_ONE,\n   IRA_REGION_ALL,\n-  IRA_REGION_MIXED\n+  IRA_REGION_MIXED,\n+  /* This value means that there were no options -fira-region on the\n+     command line and that we should choose a value depending on the\n+     used -O option.  */\n+  IRA_REGION_AUTODETECT\n };\n \n /* The options for excess precision.  */"}, {"sha": "e3d3fe3038598a18d4bbe082cf9c23b3c212c86d", "filename": "gcc/ira.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ffe8727f47239229b1830f0a67921f8dc4c69b13/gcc%2Fira.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ffe8727f47239229b1830f0a67921f8dc4c69b13/gcc%2Fira.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fira.c?ref=ffe8727f47239229b1830f0a67921f8dc4c69b13", "patch": "@@ -3621,9 +3621,8 @@ ira (FILE *f)\n \n   if (internal_flag_ira_verbose > 0 && ira_dump_file != NULL)\n     fprintf (ira_dump_file, \"Building IRA IR\\n\");\n-  loops_p = ira_build (optimize\n-\t\t       && (flag_ira_region == IRA_REGION_ALL\n-\t\t\t   || flag_ira_region == IRA_REGION_MIXED));\n+  loops_p = ira_build (flag_ira_region == IRA_REGION_ALL\n+\t\t       || flag_ira_region == IRA_REGION_MIXED);\n \n   ira_assert (ira_conflicts_p || !loops_p);\n "}, {"sha": "9be910970b428be6ad7d467b0f01c2d4f4701f9f", "filename": "gcc/toplev.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ffe8727f47239229b1830f0a67921f8dc4c69b13/gcc%2Ftoplev.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ffe8727f47239229b1830f0a67921f8dc4c69b13/gcc%2Ftoplev.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftoplev.c?ref=ffe8727f47239229b1830f0a67921f8dc4c69b13", "patch": "@@ -1333,6 +1333,11 @@ process_options (void)\n \t   \"and -ftree-loop-linear)\");\n #endif\n \n+  /* One region RA really helps to decrease the code size.  */\n+  if (flag_ira_region == IRA_REGION_AUTODETECT)\n+    flag_ira_region\n+      = optimize_size || !optimize ? IRA_REGION_ONE : IRA_REGION_MIXED;\n+\n   /* Unrolling all loops implies that standard loop unrolling must also\n      be done.  */\n   if (flag_unroll_all_loops)"}]}