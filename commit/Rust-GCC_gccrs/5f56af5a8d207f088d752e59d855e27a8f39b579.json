{"sha": "5f56af5a8d207f088d752e59d855e27a8f39b579", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWY1NmFmNWE4ZDIwN2YwODhkNzUyZTU5ZDg1NWUyN2E4ZjM5YjU3OQ==", "commit": {"author": {"name": "Mark Mitchell", "email": "mark@markmitchell.com", "date": "1999-02-26T12:15:37Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "1999-02-26T12:15:37Z"}, "message": "typeck.c (decay_conversion): Don't confuse constant array variables with their intiailizers.\n\n\t* typeck.c (decay_conversion): Don't confuse constant array\n\tvariables with their intiailizers.\n\nFrom-SVN: r25459", "tree": {"sha": "c074f48d1b17289aa9732bf7361a00bee2f585b9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c074f48d1b17289aa9732bf7361a00bee2f585b9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5f56af5a8d207f088d752e59d855e27a8f39b579", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5f56af5a8d207f088d752e59d855e27a8f39b579", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5f56af5a8d207f088d752e59d855e27a8f39b579", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5f56af5a8d207f088d752e59d855e27a8f39b579/comments", "author": null, "committer": null, "parents": [{"sha": "2b0a63a35b58c529363c6ed6db01f26d9cfa737f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2b0a63a35b58c529363c6ed6db01f26d9cfa737f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2b0a63a35b58c529363c6ed6db01f26d9cfa737f"}], "stats": {"total": 47, "additions": 37, "deletions": 10}, "files": [{"sha": "34e8ef82b8e3b90262d8fe2a41db8ce19310feed", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f56af5a8d207f088d752e59d855e27a8f39b579/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f56af5a8d207f088d752e59d855e27a8f39b579/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=5f56af5a8d207f088d752e59d855e27a8f39b579", "patch": "@@ -1,5 +1,8 @@\n 1999-02-26  Mark Mitchell  <mark@markmitchell.com>\n \n+\t* typeck.c (decay_conversion): Don't confuse constant array\n+\tvariables with their intiailizers.\n+\n \t* decl.c (duplicate_decls): Copy DECL_TEMPLATE_INSTANTIATED when\n \tmerging decls.\n \t* pt.c (regenerate_decl_from_template): Tweak for clarity."}, {"sha": "9a99097e32117da78f824d4954300bffc13c0fd8", "filename": "gcc/cp/typeck.c", "status": "modified", "additions": 14, "deletions": 10, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f56af5a8d207f088d752e59d855e27a8f39b579/gcc%2Fcp%2Ftypeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f56af5a8d207f088d752e59d855e27a8f39b579/gcc%2Fcp%2Ftypeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck.c?ref=5f56af5a8d207f088d752e59d855e27a8f39b579", "patch": "@@ -1589,12 +1589,11 @@ c_alignof (type)\n   return t;\n }\n \f\n-/* Perform default promotions for C data used in expressions.\n-   Arrays and functions are converted to pointers;\n-   enumeral types or short or char, to int.\n-   In addition, manifest constants symbols are replaced by their values.\n+/* Perform the array-to-pointer and function-to-pointer conversions\n+   for EXP.  \n \n-   C++: this will automatically bash references to their target type.  */\n+   In addition, references are converted to rvalues and manifest\n+   constants are replaced by their values.  */\n \n tree\n decay_conversion (exp)\n@@ -1628,8 +1627,15 @@ decay_conversion (exp)\n   /* Constants can be used directly unless they're not loadable.  */\n   if (TREE_CODE (exp) == CONST_DECL)\n     exp = DECL_INITIAL (exp);\n-  /* Replace a nonvolatile const static variable with its value.  */\n-  else if (TREE_READONLY_DECL_P (exp))\n+  /* Replace a nonvolatile const static variable with its value.  We\n+     don't do this for arrays, though; we want the address of the\n+     first element of the array, not the address of the first element\n+     of its initializing constant.  We *do* replace variables that the\n+     user isn't really supposed to know about; this is a hack to deal\n+     with __PRETTY_FUNCTION__ and the like.  */\n+  else if (TREE_READONLY_DECL_P (exp)\n+\t   && (code != ARRAY_TYPE \n+\t       || (TREE_CODE (exp) == VAR_DECL && DECL_IGNORED_P (exp))))\n     {\n       exp = decl_constant_value (exp);\n       type = TREE_TYPE (exp);\n@@ -1649,9 +1655,7 @@ decay_conversion (exp)\n       return build_unary_op (ADDR_EXPR, exp, 0);\n     }\n   if (code == FUNCTION_TYPE || is_overloaded_fn (exp))\n-    {\n-      return build_unary_op (ADDR_EXPR, exp, 0);\n-    }\n+    return build_unary_op (ADDR_EXPR, exp, 0);\n   if (code == ARRAY_TYPE)\n     {\n       register tree adr;"}, {"sha": "425e9bf817ce0fb355867ea315072d419172a5a1", "filename": "gcc/testsuite/g++.old-deja/g++.other/string1.C", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f56af5a8d207f088d752e59d855e27a8f39b579/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fstring1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f56af5a8d207f088d752e59d855e27a8f39b579/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fstring1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fstring1.C?ref=5f56af5a8d207f088d752e59d855e27a8f39b579", "patch": "@@ -0,0 +1,20 @@\n+// Build don't link:\n+// Origin: mrs@wrs.com (Mike Stump)\n+\n+class Wrapper {\n+public:\n+  static const char msgPtr[];\n+  static const char *JunkFunc() {\n+    return &msgPtr[0];\n+  }\n+};\n+ \n+const char Wrapper::msgPtr[] = \"Hello world.\";\n+ \n+int main() {\n+  const char *p1 = &Wrapper::msgPtr[0];\n+  const char *p2 = Wrapper::JunkFunc();\n+ \n+  if (p1 != p2)\n+    return 1;\n+}"}]}