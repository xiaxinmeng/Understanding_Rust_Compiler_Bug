{"sha": "c461d26383f5e7999b3e02c965d8289f2c22f7fe", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzQ2MWQyNjM4M2Y1ZTc5OTliM2UwMmM5NjVkODI4OWYyYzIyZjdmZQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2016-02-18T17:15:25Z"}, "committer": {"name": "Martin Liska", "email": "marxin@gcc.gnu.org", "date": "2016-02-18T17:15:25Z"}, "message": "Do not emit red stack zones for a fn with no_sanitize_address\n\n\tPR sanitizer/69863\n\t* cfgexpand.c (asan_sanitize_stack_p): New function.\n\t(partition_stack_vars): Use the function.\n\t(expand_stack_vars): Likewise.\n\t(defer_stack_allocation): Likewise.\n\t(expand_used_vars): Likewise.\n\nCo-Authored-By: Martin Liska <mliska@suse.cz>\n\nFrom-SVN: r233524", "tree": {"sha": "850f770e9e817020c41bdbcda53aebf68370100d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/850f770e9e817020c41bdbcda53aebf68370100d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c461d26383f5e7999b3e02c965d8289f2c22f7fe", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c461d26383f5e7999b3e02c965d8289f2c22f7fe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c461d26383f5e7999b3e02c965d8289f2c22f7fe", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c461d26383f5e7999b3e02c965d8289f2c22f7fe/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f003579e9cdd2f28f7a5b0985d541c2f375bbf11", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f003579e9cdd2f28f7a5b0985d541c2f375bbf11", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f003579e9cdd2f28f7a5b0985d541c2f375bbf11"}], "stats": {"total": 30, "additions": 26, "deletions": 4}, "files": [{"sha": "029e8efa7c08821db8cf4d964d7d600a31caf92f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c461d26383f5e7999b3e02c965d8289f2c22f7fe/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c461d26383f5e7999b3e02c965d8289f2c22f7fe/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c461d26383f5e7999b3e02c965d8289f2c22f7fe", "patch": "@@ -1,3 +1,13 @@\n+2016-02-18  Jakub Jelinek  <jakub@redhat.com>\n+\t    Martin Liska  <mliska@suse.cz>\n+\n+\tPR sanitizer/69863\n+\t* cfgexpand.c (asan_sanitize_stack_p): New function.\n+\t(partition_stack_vars): Use the function.\n+\t(expand_stack_vars): Likewise.\n+\t(defer_stack_allocation): Likewise.\n+\t(expand_used_vars): Likewise.\n+\n 2016-02-18  Richard Biener  <rguenther@suse.de>\n \n \tPR middle-end/69553"}, {"sha": "1341c14ce2b6b1cbfe5619bd54449bde43e1084d", "filename": "gcc/cfgexpand.c", "status": "modified", "additions": 16, "deletions": 4, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c461d26383f5e7999b3e02c965d8289f2c22f7fe/gcc%2Fcfgexpand.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c461d26383f5e7999b3e02c965d8289f2c22f7fe/gcc%2Fcfgexpand.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfgexpand.c?ref=c461d26383f5e7999b3e02c965d8289f2c22f7fe", "patch": "@@ -868,6 +868,18 @@ union_stack_vars (size_t a, size_t b)\n     }\n }\n \n+/* Return true if the current function should have its stack frame\n+   protected by address sanitizer.  */\n+\n+static inline bool\n+asan_sanitize_stack_p (void)\n+{\n+  return ((flag_sanitize & SANITIZE_ADDRESS)\n+\t  && ASAN_STACK\n+\t  && !lookup_attribute (\"no_sanitize_address\",\n+\t\t\t\tDECL_ATTRIBUTES (current_function_decl)));\n+}\n+\n /* A subroutine of expand_used_vars.  Binpack the variables into\n    partitions constrained by the interference graph.  The overall\n    algorithm used is as follows:\n@@ -929,7 +941,7 @@ partition_stack_vars (void)\n \t     sizes, as the shorter vars wouldn't be adequately protected.\n \t     Don't do that for \"large\" (unsupported) alignment objects,\n \t     those aren't protected anyway.  */\n-\t  if ((flag_sanitize & SANITIZE_ADDRESS) && ASAN_STACK && isize != jsize\n+\t  if (asan_sanitize_stack_p () && isize != jsize\n \t      && ialign * BITS_PER_UNIT <= MAX_SUPPORTED_STACK_ALIGNMENT)\n \t    break;\n \n@@ -1120,7 +1132,7 @@ expand_stack_vars (bool (*pred) (size_t), struct stack_vars_data *data)\n       if (alignb * BITS_PER_UNIT <= MAX_SUPPORTED_STACK_ALIGNMENT)\n \t{\n \t  base = virtual_stack_vars_rtx;\n-\t  if ((flag_sanitize & SANITIZE_ADDRESS) && ASAN_STACK && pred)\n+\t  if (asan_sanitize_stack_p () && pred)\n \t    {\n \t      HOST_WIDE_INT prev_offset\n \t\t= align_base (frame_offset,\n@@ -1491,7 +1503,7 @@ defer_stack_allocation (tree var, bool toplevel)\n   /* If stack protection is enabled, *all* stack variables must be deferred,\n      so that we can re-order the strings to the top of the frame.\n      Similarly for Address Sanitizer.  */\n-  if (flag_stack_protect || ((flag_sanitize & SANITIZE_ADDRESS) && ASAN_STACK))\n+  if (flag_stack_protect || asan_sanitize_stack_p ())\n     return true;\n \n   unsigned int align = TREE_CODE (var) == SSA_NAME\n@@ -2191,7 +2203,7 @@ expand_used_vars (void)\n \t    expand_stack_vars (stack_protect_decl_phase_2, &data);\n \t}\n \n-      if ((flag_sanitize & SANITIZE_ADDRESS) && ASAN_STACK)\n+      if (asan_sanitize_stack_p ())\n \t/* Phase 3, any partitions that need asan protection\n \t   in addition to phase 1 and 2.  */\n \texpand_stack_vars (asan_decl_phase_3, &data);"}]}