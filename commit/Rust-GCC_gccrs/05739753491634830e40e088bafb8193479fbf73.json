{"sha": "05739753491634830e40e088bafb8193479fbf73", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDU3Mzk3NTM0OTE2MzQ4MzBlNDBlMDg4YmFmYjgxOTM0NzlmYmY3Mw==", "commit": {"author": {"name": "Volker Reichelt", "email": "reichelt@igpm.rwth-aachen.de", "date": "2003-01-24T15:57:41Z"}, "committer": {"name": "Volker Reichelt", "email": "reichelt@gcc.gnu.org", "date": "2003-01-24T15:57:41Z"}, "message": "bugreport.texi: Use @command instead of @code for commands.\n\n\t* doc/bugreport.texi: Use @command instead of @code for commands.\n\t* doc/collect2.texi: Likewise.\n\t* doc/headerdirs.texi: Likewise.\n\t* doc/invoke.texi: Likewise.\n\t* doc/standards.texi: Likewise.\n\t* doc/tm.texi: Likewise.\n\t* doc/trouble.texi: Likewise.\n\nFrom-SVN: r61701", "tree": {"sha": "70f0e4d4de12e17fa1d5553b9d4c52fa4ffebcbc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/70f0e4d4de12e17fa1d5553b9d4c52fa4ffebcbc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/05739753491634830e40e088bafb8193479fbf73", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/05739753491634830e40e088bafb8193479fbf73", "html_url": "https://github.com/Rust-GCC/gccrs/commit/05739753491634830e40e088bafb8193479fbf73", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/05739753491634830e40e088bafb8193479fbf73/comments", "author": null, "committer": null, "parents": [{"sha": "06bea5aa22da3dbda70f4b4670b484884aadb163", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/06bea5aa22da3dbda70f4b4670b484884aadb163", "html_url": "https://github.com/Rust-GCC/gccrs/commit/06bea5aa22da3dbda70f4b4670b484884aadb163"}], "stats": {"total": 56, "additions": 33, "deletions": 23}, "files": [{"sha": "422f6d44d99cf79839fdf33c6fc74faaf2674e95", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/05739753491634830e40e088bafb8193479fbf73/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/05739753491634830e40e088bafb8193479fbf73/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=05739753491634830e40e088bafb8193479fbf73", "patch": "@@ -1,3 +1,13 @@\n+2003-01-24  Volker Reichelt  <reichelt@igpm.rwth-aachen.de>\n+\n+\t* doc/bugreport.texi: Use @command instead of @code for commands.\n+\t* doc/collect2.texi: Likewise.\n+\t* doc/headerdirs.texi: Likewise.\n+\t* doc/invoke.texi: Likewise.\n+\t* doc/standards.texi: Likewise.\n+\t* doc/tm.texi: Likewise.\n+\t* doc/trouble.texi: Likewise.\n+\n 2003-01-24  Nick Clifton  <nickc@redhat.com>\n \n \t* config/arm/arm.c (use_return_insn): Do not use a single return"}, {"sha": "b7c1fb0fbca233c2e23f941be228fee6e74f9b83", "filename": "gcc/doc/bugreport.texi", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/05739753491634830e40e088bafb8193479fbf73/gcc%2Fdoc%2Fbugreport.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/05739753491634830e40e088bafb8193479fbf73/gcc%2Fdoc%2Fbugreport.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fbugreport.texi?ref=05739753491634830e40e088bafb8193479fbf73", "patch": "@@ -376,9 +376,9 @@ we should be able to reproduce the crash ourselves.\n \n To simplify creation of bug reports, and to allow better tracking of\n reports, we use the GNATS bug tracking system.  Part of that system is\n-the @code{gccbug} script.  This is a Unix shell script, so you need a\n+the @command{gccbug} script.  This is a Unix shell script, so you need a\n shell to run it.  It is normally installed in the same directory where\n-@code{gcc} is installed.\n+@command{gcc} is installed.\n \n The gccbug script is derived from send-pr, @pxref{using\n send-pr,,Creating new Problem Reports,send-pr,Reporting Problems}.  When"}, {"sha": "a3d43b280d122264c796f9b46047331f41576046", "filename": "gcc/doc/collect2.texi", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/05739753491634830e40e088bafb8193479fbf73/gcc%2Fdoc%2Fcollect2.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/05739753491634830e40e088bafb8193479fbf73/gcc%2Fdoc%2Fcollect2.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fcollect2.texi?ref=05739753491634830e40e088bafb8193479fbf73", "patch": "@@ -52,7 +52,7 @@ if specified.\n @end itemize\n \n ``The compiler's search directories'' means all the directories where\n-@code{gcc} searches for passes of the compiler.  This includes\n+@command{gcc} searches for passes of the compiler.  This includes\n directories that you specify with @option{-B}.\n \n Cross-compilers search a little differently:"}, {"sha": "beac0ddde2281b501091ee12864e8f9fe4bc3ada", "filename": "gcc/doc/headerdirs.texi", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/05739753491634830e40e088bafb8193479fbf73/gcc%2Fdoc%2Fheaderdirs.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/05739753491634830e40e088bafb8193479fbf73/gcc%2Fdoc%2Fheaderdirs.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fheaderdirs.texi?ref=05739753491634830e40e088bafb8193479fbf73", "patch": "@@ -15,7 +15,7 @@ are already suitable for ISO C and GNU CC, nothing special need be\n done).\n \n @code{GPLUSPLUS_INCLUDE_DIR} means the same thing for native and cross.  It\n-is where @code{g++} looks first for header files.  The C++ library\n+is where @command{g++} looks first for header files.  The C++ library\n installs only target independent header files in that directory.\n \n @code{LOCAL_INCLUDE_DIR} is used only by native compilers.  GNU CC"}, {"sha": "56440fb29534cd0f3b6338cb22c4f833fedc1b22", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 14, "deletions": 14, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/05739753491634830e40e088bafb8193479fbf73/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/05739753491634830e40e088bafb8193479fbf73/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=05739753491634830e40e088bafb8193479fbf73", "patch": "@@ -3002,19 +3002,19 @@ Compress DWARF2 debugging information by eliminating duplicated\n information about each symbol.  This option only makes sense when\n generating DWARF2 debugging information with @option{-gdwarf-2}.\n \n-@cindex @code{prof}\n+@cindex @command{prof}\n @item -p\n @opindex p\n Generate extra code to write profile information suitable for the\n-analysis program @code{prof}.  You must use this option when compiling\n+analysis program @command{prof}.  You must use this option when compiling\n the source files you want data about, and you must also use it when\n linking.\n \n-@cindex @code{gprof}\n+@cindex @command{gprof}\n @item -pg\n @opindex pg\n Generate extra code to write profile information suitable for the\n-analysis program @code{gprof}.  You must use this option when compiling\n+analysis program @command{gprof}.  You must use this option when compiling\n the source files you want data about, and you must also use it when\n linking.\n \n@@ -3054,7 +3054,7 @@ optimization and code generation options plus\n @option{-fbranch-probabilities} (@pxref{Optimize Options,,Options that\n Control Optimization}).\n \n-The other use of @option{-fprofile-arcs} is for use with @code{gcov},\n+The other use of @option{-fprofile-arcs} is for use with @command{gcov},\n when it is used with the @option{-ftest-coverage} option.\n \n With @option{-fprofile-arcs}, for each function of your program GCC\n@@ -3074,11 +3074,11 @@ Create data files for the @command{gcov} code-coverage utility\n \n @table @gcctabopt\n @item @var{auxname}.bb\n-A mapping from basic blocks to line numbers, which @code{gcov} uses to\n+A mapping from basic blocks to line numbers, which @command{gcov} uses to\n associate basic block execution counts with line numbers.\n \n @item @var{auxname}.bbg\n-A list of all arcs in the program flow graph.  This allows @code{gcov}\n+A list of all arcs in the program flow graph.  This allows @command{gcov}\n to reconstruct the program flow graph, so that it can compute all basic\n block and arc execution counts from the information in the\n @file{@var{auxname}.da} file.\n@@ -3967,7 +3967,7 @@ as well as AIX may have these optimizations in the future.\n Only use these options when there are significant benefits from doing\n so.  When you specify these options, the assembler and linker will\n create larger object and executable files and will also be slower.\n-You will not be able to use @code{gprof} on all systems if you\n+You will not be able to use @command{gprof} on all systems if you\n specify this option and you may have problems with debugging if\n you specify both this option and @option{-g}.\n \n@@ -11174,16 +11174,16 @@ prototype information about standard system functions.  This option\n applies only to @code{protoize}.\n \n @item -c @var{compilation-options}\n-Use  @var{compilation-options} as the options when running @code{gcc} to\n+Use @var{compilation-options} as the options when running @command{gcc} to\n produce the @samp{.X} files.  The special option @option{-aux-info} is\n-always passed in addition, to tell @code{gcc} to write a @samp{.X} file.\n+always passed in addition, to tell @command{gcc} to write a @samp{.X} file.\n \n Note that the compilation options must be given as a single argument to\n @code{protoize} or @code{unprotoize}.  If you want to specify several\n-@code{gcc} options, you must quote the entire set of compilation options\n+@command{gcc} options, you must quote the entire set of compilation options\n to make them a single word in the shell.\n \n-There are certain @code{gcc} arguments that you cannot use, because they\n+There are certain @command{gcc} arguments that you cannot use, because they\n would produce the wrong kind of output.  These include @option{-g},\n @option{-O}, @option{-c}, @option{-S}, and @option{-o} If you include these in\n the @var{compilation-options}, they are ignored.\n@@ -11236,12 +11236,12 @@ Use the program @var{program} as the compiler.  Normally, the name\n Work quietly.  Most warnings are suppressed.\n \n @item -v\n-Print the version number, just like @option{-v} for @code{gcc}.\n+Print the version number, just like @option{-v} for @command{gcc}.\n @end table\n \n If you need special compiler options to compile one of your program's\n source files, then you should generate that file's @samp{.X} file\n-specially, by running @code{gcc} on that source file with the\n+specially, by running @command{gcc} on that source file with the\n appropriate options and the option @option{-aux-info}.  Then run\n @code{protoize} on the entire set of files.  @code{protoize} will use\n the existing @samp{.X} file because it is newer than the source file."}, {"sha": "098c925f7514450b5724bbe8392a5917c2bac793", "filename": "gcc/doc/standards.texi", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/05739753491634830e40e088bafb8193479fbf73/gcc%2Fdoc%2Fstandards.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/05739753491634830e40e088bafb8193479fbf73/gcc%2Fdoc%2Fstandards.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fstandards.texi?ref=05739753491634830e40e088bafb8193479fbf73", "patch": "@@ -189,4 +189,4 @@ conformance and compatibility of the Ada compiler.\n Fortran}, for details of the Fortran language supported by GCC@.\n \n @xref{Compatibility,,Compatibility with the Java Platform, gcj, GNU gcj},\n-for details of compatibility between @code{gcj} and the Java Platform.\n+for details of compatibility between @command{gcj} and the Java Platform."}, {"sha": "24efe145d854d45b63b0ac1e7134dec69fcf28dd", "filename": "gcc/doc/tm.texi", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/05739753491634830e40e088bafb8193479fbf73/gcc%2Fdoc%2Ftm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/05739753491634830e40e088bafb8193479fbf73/gcc%2Fdoc%2Ftm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Ftm.texi?ref=05739753491634830e40e088bafb8193479fbf73", "patch": "@@ -404,7 +404,7 @@ the target makefile fragment or if none of the options listed in\n \n @findex RELATIVE_PREFIX_NOT_LINKDIR\n @item RELATIVE_PREFIX_NOT_LINKDIR\n-Define this macro to tell @code{gcc} that it should only translate\n+Define this macro to tell @command{gcc} that it should only translate\n a @option{-B} prefix into a @option{-L} linker option if the prefix\n indicates an absolute file name.\n \n@@ -7038,7 +7038,7 @@ When arbitrary sections are available, there are two variants, depending\n upon how the code in @file{crtstuff.c} is called.  On systems that\n support a @dfn{.init} section which is executed at program startup,\n parts of @file{crtstuff.c} are compiled into that section.  The\n-program is linked by the @code{gcc} driver like this:\n+program is linked by the @command{gcc} driver like this:\n \n @example\n ld -o @var{output_file} crti.o crtbegin.o @dots{} -lgcc crtend.o crtn.o"}, {"sha": "4a8f0c32fd12e1a55e25a4c86659b47f0f93eb28", "filename": "gcc/doc/trouble.texi", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/05739753491634830e40e088bafb8193479fbf73/gcc%2Fdoc%2Ftrouble.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/05739753491634830e40e088bafb8193479fbf73/gcc%2Fdoc%2Ftrouble.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Ftrouble.texi?ref=05739753491634830e40e088bafb8193479fbf73", "patch": "@@ -886,9 +886,9 @@ int Foo::bar = 0;\n @end example\n \n Other C++ compilers may not correctly implement the standard behavior.\n-As a result, when you switch to @code{g++} from one of these compilers,\n+As a result, when you switch to @command{g++} from one of these compilers,\n you may discover that a program that appeared to work correctly in fact\n-does not conform to the standard: @code{g++} reports as undefined\n+does not conform to the standard: @command{g++} reports as undefined\n symbols any static data members that lack definitions.\n \n @node Temporaries"}]}