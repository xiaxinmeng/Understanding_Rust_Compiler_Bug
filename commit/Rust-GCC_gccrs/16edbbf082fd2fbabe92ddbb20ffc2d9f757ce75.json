{"sha": "16edbbf082fd2fbabe92ddbb20ffc2d9f757ce75", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTZlZGJiZjA4MmZkMmZiYWJlOTJkZGJiMjBmZmMyZDlmNzU3Y2U3NQ==", "commit": {"author": {"name": "Zack Weinberg", "email": "zack@codesourcery.com", "date": "2004-02-19T17:21:14Z"}, "committer": {"name": "Zack Weinberg", "email": "zack@gcc.gnu.org", "date": "2004-02-19T17:21:14Z"}, "message": "sdbout.c (preinit_symbols, [...]): New statics.\n\n\t* sdbout.c (preinit_symbols, sdbout_initialized): New statics.\n\t(sdbout_symbol): If called before sdbout_init, queue DECL for\n\tlater and return.\n\t(sdbout_init): Set sdbout_initialized true, process decls\n\tqueued earlier by sdbout_symbol.\n\t(sdbout_finish): Use size_t for index variable.\n\nFrom-SVN: r78109", "tree": {"sha": "7cefc1b666ecb878267cad1f2635c359a3e678a1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7cefc1b666ecb878267cad1f2635c359a3e678a1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/16edbbf082fd2fbabe92ddbb20ffc2d9f757ce75", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/16edbbf082fd2fbabe92ddbb20ffc2d9f757ce75", "html_url": "https://github.com/Rust-GCC/gccrs/commit/16edbbf082fd2fbabe92ddbb20ffc2d9f757ce75", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/16edbbf082fd2fbabe92ddbb20ffc2d9f757ce75/comments", "author": null, "committer": null, "parents": [{"sha": "f46e5baad61a5604120e22c7dfa3b77180f2e7ef", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f46e5baad61a5604120e22c7dfa3b77180f2e7ef", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f46e5baad61a5604120e22c7dfa3b77180f2e7ef"}], "stats": {"total": 40, "additions": 37, "deletions": 3}, "files": [{"sha": "7641ecefba99059cb1acc2396f402e9655068446", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 2, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16edbbf082fd2fbabe92ddbb20ffc2d9f757ce75/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16edbbf082fd2fbabe92ddbb20ffc2d9f757ce75/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=16edbbf082fd2fbabe92ddbb20ffc2d9f757ce75", "patch": "@@ -1,5 +1,14 @@\n+2004-02-19  Zack Weinberg  <zack@codesourcery.com>\n+\n+\t* sdbout.c (preinit_symbols, sdbout_initialized): New statics.\n+\t(sdbout_symbol): If called before sdbout_init, queue DECL for\n+\tlater and return.\n+\t(sdbout_init): Set sdbout_initialized true, process decls\n+\tqueued earlier by sdbout_symbol.\n+\t(sdbout_finish): Use size_t for index variable.\n+\n 2004-02-19  Jeff Law  <law@redhat.com>\n- \n+\n \t* fold-const.c (invert_truthvalue): Do not call invert_tree_comparison\n \tfor unordered comparison codes.\n \n@@ -102,7 +111,7 @@\n \tdefined.  Instead use REAL_LIBGCC_SPEC, unmodifed, as the libgcc\n \tspec string.\n \t* doc/tm.texi (REAL_LIBGCC_SPEC): Document.\n-\t\n+\n 2004-02-18  Zack Weinberg  <zack@codesourcery.com>\n \n \t* dwarf2out.c (loclabel_num): Move outside #ifdef"}, {"sha": "7f6a398edcc93607ad9345606787434457db1736", "filename": "gcc/sdbout.c", "status": "modified", "additions": 26, "deletions": 1, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16edbbf082fd2fbabe92ddbb20ffc2d9f757ce75/gcc%2Fsdbout.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16edbbf082fd2fbabe92ddbb20ffc2d9f757ce75/gcc%2Fsdbout.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsdbout.c?ref=16edbbf082fd2fbabe92ddbb20ffc2d9f757ce75", "patch": "@@ -64,6 +64,13 @@ static GTY(()) int unnamed_struct_number;\n \n static GTY(()) varray_type deferred_global_decls;\n \n+/* The C front end may call sdbout_symbol before sdbout_init runs.\n+   We save all such decls in this list and output them when we get\n+   to sdbout_init.  */\n+\n+static GTY(()) tree preinit_symbols;\n+static GTY(()) bool sdbout_initialized;\n+\n #ifdef SDB_DEBUGGING_INFO\n \n #include \"rtl.h\"\n@@ -699,6 +706,14 @@ sdbout_symbol (tree decl, int local)\n   int regno = -1;\n   const char *name;\n \n+  /* If we are called before sdbout_init is run, just save the symbol\n+     for later.  */\n+  if (!sdbout_initialized)\n+    {\n+      preinit_symbols = tree_cons (0, decl, preinit_symbols);\n+      return;\n+    }\n+\n   sdbout_one_type (type);\n \n   switch (TREE_CODE (decl))\n@@ -1460,7 +1475,7 @@ sdbout_global_decl (tree decl)\n static void\n sdbout_finish (const char *main_filename ATTRIBUTE_UNUSED)\n {\n-  int i;\n+  size_t i;\n \n   for (i = 0; i < VARRAY_ACTIVE_SIZE (deferred_global_decls); i++)\n     sdbout_symbol (VARRAY_TREE (deferred_global_decls, i), 0);\n@@ -1663,13 +1678,23 @@ sdbout_end_source_file (unsigned int line ATTRIBUTE_UNUSED)\n static void\n sdbout_init (const char *input_file_name ATTRIBUTE_UNUSED)\n {\n+  tree t;\n+\n #ifdef MIPS_DEBUGGING_INFO\n   current_file = xmalloc (sizeof *current_file);\n   current_file->next = NULL;\n   current_file->name = input_file_name;\n #endif\n \n   VARRAY_TREE_INIT (deferred_global_decls, 12, \"deferred_global_decls\");\n+\n+  /* Emit debug information which was queued by sdbout_symbol before\n+     we got here.  */\n+  sdbout_initialized = true;\n+\n+  for (t = nreverse (preinit_symbols); t; t = TREE_CHAIN (t))\n+    sdbout_symbol (TREE_VALUE (t), 0);\n+  preinit_symbols = 0;\n }\n \n #else  /* SDB_DEBUGGING_INFO */"}]}