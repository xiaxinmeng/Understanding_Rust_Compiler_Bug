{"sha": "644f6fd80a917eba98498079a9e6e2758198d6cb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjQ0ZjZmZDgwYTkxN2ViYTk4NDk4MDc5YTllNmUyNzU4MTk4ZDZjYg==", "commit": {"author": {"name": "Kyrylo Tkachov", "email": "kyrylo.tkachov@arm.com", "date": "2015-03-12T13:40:50Z"}, "committer": {"name": "Kyrylo Tkachov", "email": "ktkachov@gcc.gnu.org", "date": "2015-03-12T13:40:50Z"}, "message": "[simplify-rtx] PR 65235: Calculate element size correctly when simplifying (vec_select (vec_concat (const_int) (...)) [...])\n\n\tPR rtl-optimization 65235\n\t* simplify-rtx.c (simplify_binary_operation_1, VEC_SELECT case):\n\tWhen first element of vec_concat is const_int, calculate its size\n\tusing second element.\n\n\tPR rtl-optimization 65235\n\t* gcc.target/aarch64/pr65235_1.c: New test.\n\nFrom-SVN: r221387", "tree": {"sha": "ba93d162074f6056498beb393eae670a323c4152", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ba93d162074f6056498beb393eae670a323c4152"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/644f6fd80a917eba98498079a9e6e2758198d6cb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/644f6fd80a917eba98498079a9e6e2758198d6cb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/644f6fd80a917eba98498079a9e6e2758198d6cb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/644f6fd80a917eba98498079a9e6e2758198d6cb/comments", "author": {"login": "ktkachov-arm", "id": 74917949, "node_id": "MDQ6VXNlcjc0OTE3OTQ5", "avatar_url": "https://avatars.githubusercontent.com/u/74917949?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ktkachov-arm", "html_url": "https://github.com/ktkachov-arm", "followers_url": "https://api.github.com/users/ktkachov-arm/followers", "following_url": "https://api.github.com/users/ktkachov-arm/following{/other_user}", "gists_url": "https://api.github.com/users/ktkachov-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/ktkachov-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ktkachov-arm/subscriptions", "organizations_url": "https://api.github.com/users/ktkachov-arm/orgs", "repos_url": "https://api.github.com/users/ktkachov-arm/repos", "events_url": "https://api.github.com/users/ktkachov-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/ktkachov-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "6899585abf17b4e39856cfad454b8cb21424838f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6899585abf17b4e39856cfad454b8cb21424838f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6899585abf17b4e39856cfad454b8cb21424838f"}], "stats": {"total": 58, "additions": 57, "deletions": 1}, "files": [{"sha": "3fb408a605f28acb4a11e81144a94b8c51bf1256", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/644f6fd80a917eba98498079a9e6e2758198d6cb/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/644f6fd80a917eba98498079a9e6e2758198d6cb/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=644f6fd80a917eba98498079a9e6e2758198d6cb", "patch": "@@ -1,3 +1,10 @@\n+2015-03-12  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n+\n+\tPR rtl-optimization 65235\n+\t* simplify-rtx.c (simplify_binary_operation_1, VEC_SELECT case):\n+\tWhen first element of vec_concat is const_int, calculate its size\n+\tusing second element.\n+\n 2015-03-12  Richard Biener  <rguenther@suse.de>\n \n \tPR middle-end/65270"}, {"sha": "5d1749829bdc883a1d61ae7a72c5e028d70918c2", "filename": "gcc/simplify-rtx.c", "status": "modified", "additions": 15, "deletions": 1, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/644f6fd80a917eba98498079a9e6e2758198d6cb/gcc%2Fsimplify-rtx.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/644f6fd80a917eba98498079a9e6e2758198d6cb/gcc%2Fsimplify-rtx.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsimplify-rtx.c?ref=644f6fd80a917eba98498079a9e6e2758198d6cb", "patch": "@@ -3555,7 +3555,21 @@ simplify_binary_operation_1 (enum rtx_code code, machine_mode mode,\n \t  while (GET_MODE (vec) != mode\n \t\t && GET_CODE (vec) == VEC_CONCAT)\n \t    {\n-\t      HOST_WIDE_INT vec_size = GET_MODE_SIZE (GET_MODE (XEXP (vec, 0)));\n+\t      HOST_WIDE_INT vec_size;\n+\n+\t      if (CONST_INT_P (XEXP (vec, 0)))\n+\t        {\n+\t          /* vec_concat of two const_ints doesn't make sense with\n+\t             respect to modes.  */\n+\t          if (CONST_INT_P (XEXP (vec, 1)))\n+\t            return 0;\n+\n+\t          vec_size = GET_MODE_SIZE (GET_MODE (trueop0))\n+\t                     - GET_MODE_SIZE (GET_MODE (XEXP (vec, 1)));\n+\t        }\n+\t      else\n+\t        vec_size = GET_MODE_SIZE (GET_MODE (XEXP (vec, 0)));\n+\n \t      if (offset < vec_size)\n \t\tvec = XEXP (vec, 0);\n \t      else"}, {"sha": "24318b388b7369f976f4fb29bf0b6c81b22ff55c", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/644f6fd80a917eba98498079a9e6e2758198d6cb/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/644f6fd80a917eba98498079a9e6e2758198d6cb/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=644f6fd80a917eba98498079a9e6e2758198d6cb", "patch": "@@ -1,3 +1,8 @@\n+2015-03-12  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n+\n+\tPR rtl-optimization 65235\n+\t* gcc.target/aarch64/pr65235_1.c: New test.\n+\n 2015-03-12  Dominik Vogt  <vogt@linux.vnet.ibm.com>\n \n \t* gcc.target/s390/hotpatch-21.c: New test for hotpatch alignment."}, {"sha": "ca12cd59c41a7b0af4478f6c6b3613cce52ea8b1", "filename": "gcc/testsuite/gcc.target/aarch64/pr65235_1.c", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/644f6fd80a917eba98498079a9e6e2758198d6cb/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fpr65235_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/644f6fd80a917eba98498079a9e6e2758198d6cb/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fpr65235_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fpr65235_1.c?ref=644f6fd80a917eba98498079a9e6e2758198d6cb", "patch": "@@ -0,0 +1,30 @@\n+/* { dg-do run } */\n+/* { dg-options \"-O2\" } */\n+\n+#include \"arm_neon.h\"\n+\n+int\n+main (int argc, char** argv)\n+{\n+  int64x1_t val1;\n+  int64x1_t val2;\n+  int64x1_t val3;\n+  uint64x1_t val13;\n+  uint64x2_t val14;\n+  uint64_t got;\n+  uint64_t exp;\n+  val1 = vcreate_s64(UINT64_C(0xffffffff80008000));\n+  val2 = vcreate_s64(UINT64_C(0x0000f38d00000000));\n+  val3 = vcreate_s64(UINT64_C(0xffff7fff0000809b));\n+  /* Expect: \"val13\" = 8000000000001553.  */\n+  val13 = vcreate_u64 (UINT64_C(0x8000000000001553));\n+  /* Expect: \"val14\" = 0010 0000 0000 0002 0000 0000 0000 0000.  */\n+  val14 = vcombine_u64(vcgt_s64(vqrshl_s64(val1, val2),\n+\t\t\t\tvshr_n_s64(val3, 18)),\n+\t\t       vshr_n_u64(val13, 11));\n+  /* Should be 0000000000000000.  */\n+  got = vgetq_lane_u64(val14, 0);\n+  exp = 0;\n+  if(exp != got)\n+    __builtin_abort ();\n+}"}]}