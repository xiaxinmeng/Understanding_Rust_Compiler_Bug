{"sha": "560f3f8a1cc71fc771fb9c888761eb1384d239fd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTYwZjNmOGExY2M3MWZjNzcxZmI5Yzg4ODc2MWViMTM4NGQyMzlmZA==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-09-27T22:32:07Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-09-27T22:32:07Z"}, "message": "(expand_fix): Call emit_library_call_value.\n\nFrom-SVN: r8149", "tree": {"sha": "d1f9bff776dd54b5149c1491d0e0e37d5a07d57a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d1f9bff776dd54b5149c1491d0e0e37d5a07d57a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/560f3f8a1cc71fc771fb9c888761eb1384d239fd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/560f3f8a1cc71fc771fb9c888761eb1384d239fd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/560f3f8a1cc71fc771fb9c888761eb1384d239fd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/560f3f8a1cc71fc771fb9c888761eb1384d239fd/comments", "author": null, "committer": null, "parents": [{"sha": "627c097fdc146c6d6b468e595b56b2c01bcb1da7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/627c097fdc146c6d6b468e595b56b2c01bcb1da7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/627c097fdc146c6d6b468e595b56b2c01bcb1da7"}], "stats": {"total": 9, "additions": 6, "deletions": 3}, "files": [{"sha": "5c9c28b27a18bcf2333099745716b421f9c1efea", "filename": "gcc/optabs.c", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/560f3f8a1cc71fc771fb9c888761eb1384d239fd/gcc%2Foptabs.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/560f3f8a1cc71fc771fb9c888761eb1384d239fd/gcc%2Foptabs.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Foptabs.c?ref=560f3f8a1cc71fc771fb9c888761eb1384d239fd", "patch": "@@ -3280,7 +3280,7 @@ expand_float (to, from, unsignedp)\n     }\n #endif\n \n-  /* No hardware instruction available; call a library rotine to convert from\n+  /* No hardware instruction available; call a library routine to convert from\n      SImode, DImode, or TImode into SFmode, DFmode, XFmode, or TFmode.  */\n     {\n       rtx libfcn;\n@@ -3564,6 +3564,7 @@ expand_fix (to, from, unsignedp)\n   if (libfcn)\n     {\n       rtx insns;\n+      rtx value;\n \n       to = protect_from_queue (to, 1);\n       from = protect_from_queue (from, 0);\n@@ -3573,11 +3574,13 @@ expand_fix (to, from, unsignedp)\n \n       start_sequence ();\n \n-      emit_library_call (libfcn, 1, GET_MODE (to), 1, from, GET_MODE (from));\n+      value = emit_library_call_value (libfcn, NULL_RTX, 1, GET_MODE (to),\n+\n+\t\t\t\t       1, from, GET_MODE (from));\n       insns = get_insns ();\n       end_sequence ();\n \n-      emit_libcall_block (insns, target, hard_libcall_value (GET_MODE (to)),\n+      emit_libcall_block (insns, target, value,\n \t\t\t  gen_rtx (unsignedp ? FIX : UNSIGNED_FIX,\n \t\t\t\t   GET_MODE (to), from));\n     }"}]}