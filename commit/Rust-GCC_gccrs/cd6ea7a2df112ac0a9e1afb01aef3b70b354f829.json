{"sha": "cd6ea7a2df112ac0a9e1afb01aef3b70b354f829", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2Q2ZWE3YTJkZjExMmFjMGE5ZTFhZmIwMWFlZjNiNzBiMzU0ZjgyOQ==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2009-09-01T14:37:52Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2009-09-01T14:37:52Z"}, "message": "Force block enders to be simulated once.\n\nFrom-SVN: r151273", "tree": {"sha": "0d26fd11397c9b6e1e2da0ef0abcefda20d1f05a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0d26fd11397c9b6e1e2da0ef0abcefda20d1f05a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cd6ea7a2df112ac0a9e1afb01aef3b70b354f829", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cd6ea7a2df112ac0a9e1afb01aef3b70b354f829", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cd6ea7a2df112ac0a9e1afb01aef3b70b354f829", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cd6ea7a2df112ac0a9e1afb01aef3b70b354f829/comments", "author": null, "committer": null, "parents": [{"sha": "fd58da50fd14dff9640caf4b3a760d880d270f45", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fd58da50fd14dff9640caf4b3a760d880d270f45", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fd58da50fd14dff9640caf4b3a760d880d270f45"}], "stats": {"total": 32, "additions": 26, "deletions": 6}, "files": [{"sha": "2ea5c85097177dddf48523c9810ce21b4ca9c45e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6ea7a2df112ac0a9e1afb01aef3b70b354f829/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6ea7a2df112ac0a9e1afb01aef3b70b354f829/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=cd6ea7a2df112ac0a9e1afb01aef3b70b354f829", "patch": "@@ -1,3 +1,10 @@\n+2009-09-01  Richard Henderson  <rth@redhat.com>\n+\n+\t* tree-ssa-ccp.c (ccp_initialize): Make sure to simulate \n+\tstmt_ends_pp_p statements at least once.\n+\t* tree-vrp.c (vrp_initialize): Likewise.\n+\t(vrp_visit_stmt): Be prepared for non-interesting stmts.\n+\n 2009-09-01  Dodji Seketeli  <dodji@redhat.com>\n \n \tPR bootstrap/41205"}, {"sha": "949c4b5ce7766ec9fd4c4a27275bbe0b428424cb", "filename": "gcc/tree-ssa-ccp.c", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6ea7a2df112ac0a9e1afb01aef3b70b354f829/gcc%2Ftree-ssa-ccp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6ea7a2df112ac0a9e1afb01aef3b70b354f829/gcc%2Ftree-ssa-ccp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-ccp.c?ref=cd6ea7a2df112ac0a9e1afb01aef3b70b354f829", "patch": "@@ -650,7 +650,15 @@ ccp_initialize (void)\n       for (i = gsi_start_bb (bb); !gsi_end_p (i); gsi_next (&i))\n         {\n \t  gimple stmt = gsi_stmt (i);\n-\t  bool is_varying = surely_varying_stmt_p (stmt);\n+\t  bool is_varying;\n+\n+\t  /* If the statement is a control insn, then we do not\n+\t     want to avoid simulating the statement once.  Failure\n+\t     to do so means that those edges will never get added.  */\n+\t  if (stmt_ends_bb_p (stmt))\n+\t    is_varying = false;\n+\t  else\n+\t    is_varying = surely_varying_stmt_p (stmt);\n \n \t  if (is_varying)\n \t    {"}, {"sha": "237245e761c96f5d900ff8ceda9e8982324b776b", "filename": "gcc/tree-vrp.c", "status": "modified", "additions": 10, "deletions": 5, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6ea7a2df112ac0a9e1afb01aef3b70b354f829/gcc%2Ftree-vrp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6ea7a2df112ac0a9e1afb01aef3b70b354f829/gcc%2Ftree-vrp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vrp.c?ref=cd6ea7a2df112ac0a9e1afb01aef3b70b354f829", "patch": "@@ -5317,7 +5317,12 @@ vrp_initialize (void)\n         {\n \t  gimple stmt = gsi_stmt (si);\n \n-\t  if (!stmt_interesting_for_vrp (stmt))\n+ \t  /* If the statement is a control insn, then we do not\n+ \t     want to avoid simulating the statement once.  Failure\n+ \t     to do so means that those edges will never get added.  */\n+\t  if (stmt_ends_bb_p (stmt))\n+\t    prop_set_simulate_again (stmt, true);\n+\t  else if (!stmt_interesting_for_vrp (stmt))\n \t    {\n \t      ssa_op_iter i;\n \t      tree def;\n@@ -5326,9 +5331,7 @@ vrp_initialize (void)\n \t      prop_set_simulate_again (stmt, false);\n \t    }\n \t  else\n-\t    {\n-\t      prop_set_simulate_again (stmt, true);\n-\t    }\n+\t    prop_set_simulate_again (stmt, true);\n \t}\n     }\n }\n@@ -6087,7 +6090,9 @@ vrp_visit_stmt (gimple stmt, edge *taken_edge_p, tree *output_p)\n       fprintf (dump_file, \"\\n\");\n     }\n \n-  if (is_gimple_assign (stmt) || is_gimple_call (stmt))\n+  if (!stmt_interesting_for_vrp (stmt))\n+    gcc_assert (stmt_ends_bb_p (stmt));\n+  else if (is_gimple_assign (stmt) || is_gimple_call (stmt))\n     {\n       /* In general, assignments with virtual operands are not useful\n \t for deriving ranges, with the obvious exception of calls to"}]}