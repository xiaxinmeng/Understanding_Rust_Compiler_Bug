{"sha": "5eace9bc1954837d315fda86bb22c44a7443a27a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWVhY2U5YmMxOTU0ODM3ZDMxNWZkYTg2YmIyMmM0NGE3NDQzYTI3YQ==", "commit": {"author": {"name": "Thomas Quinot", "email": "quinot@adacore.com", "date": "2008-05-20T12:51:40Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2008-05-20T12:51:40Z"}, "message": "uintp.adb, urealp.adb: Replace calls to Increment_Last + Set with Append.\n\n2008-05-20  Thomas Quinot  <quinot@adacore.com>\n\n\t* uintp.adb, urealp.adb: Replace calls to Increment_Last + Set with\n\tAppend.\n\nFrom-SVN: r135646", "tree": {"sha": "521dc8c092e8a5f6d483da84733d2a0c2f6aeef7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/521dc8c092e8a5f6d483da84733d2a0c2f6aeef7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5eace9bc1954837d315fda86bb22c44a7443a27a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5eace9bc1954837d315fda86bb22c44a7443a27a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5eace9bc1954837d315fda86bb22c44a7443a27a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5eace9bc1954837d315fda86bb22c44a7443a27a/comments", "author": null, "committer": null, "parents": [{"sha": "fe38726a457105dbf0b9aab49c46b35f99bd6f48", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fe38726a457105dbf0b9aab49c46b35f99bd6f48", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fe38726a457105dbf0b9aab49c46b35f99bd6f48"}], "stats": {"total": 41, "additions": 14, "deletions": 27}, "files": [{"sha": "416d5d88681b9e3d10c3ef1025581e8e4e792cfd", "filename": "gcc/ada/uintp.adb", "status": "modified", "additions": 12, "deletions": 24, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5eace9bc1954837d315fda86bb22c44a7443a27a/gcc%2Fada%2Fuintp.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5eace9bc1954837d315fda86bb22c44a7443a27a/gcc%2Fada%2Fuintp.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fuintp.adb?ref=5eace9bc1954837d315fda86bb22c44a7443a27a", "patch": "@@ -683,14 +683,11 @@ package body Uintp is\n          begin\n             Release (M);\n \n-            Uints.Increment_Last;\n+            Uints.Append ((Length => UE_Len, Loc => Udigits.Last + 1));\n             UI := Uints.Last;\n \n-            Uints.Table (UI) := (UE_Len, Udigits.Last + 1);\n-\n             for J in 1 .. UE_Len loop\n-               Udigits.Increment_Last;\n-               Udigits.Table (Udigits.Last) := UD (J);\n+               Udigits.Append (UD (J));\n             end loop;\n          end;\n       end if;\n@@ -721,24 +718,18 @@ package body Uintp is\n          begin\n             Release (M);\n \n-            Uints.Increment_Last;\n+            Uints.Append ((Length => UE1_Len, Loc => Udigits.Last + 1));\n             UI1 := Uints.Last;\n \n-            Uints.Table (UI1) := (UE1_Len, Udigits.Last + 1);\n-\n             for J in 1 .. UE1_Len loop\n-               Udigits.Increment_Last;\n-               Udigits.Table (Udigits.Last) := UD1 (J);\n+               Udigits.Append (UD1 (J));\n             end loop;\n \n-            Uints.Increment_Last;\n+            Uints.Append ((Length => UE2_Len, Loc => Udigits.Last + 1));\n             UI2 := Uints.Last;\n \n-            Uints.Table (UI2) := (UE2_Len, Udigits.Last + 1);\n-\n             for J in 1 .. UE2_Len loop\n-               Udigits.Increment_Last;\n-               Udigits.Table (Udigits.Last) := UD2 (J);\n+               Udigits.Append (UD2 (J));\n             end loop;\n          end;\n       end if;\n@@ -2745,21 +2736,18 @@ package body Uintp is\n             --  the count and digits. The index of the new table entry will be\n             --  returned as the result.\n \n-            Uints.Increment_Last;\n-            Uints.Table (Uints.Last).Length := Size;\n-            Uints.Table (Uints.Last).Loc    := Udigits.Last + 1;\n-\n-            Udigits.Increment_Last;\n+            Uints.Append ((Length => Size, Loc => Udigits.Last + 1));\n \n             if Negative then\n-               Udigits.Table (Udigits.Last) := -In_Vec (J);\n+               Val := -In_Vec (J);\n             else\n-               Udigits.Table (Udigits.Last) := +In_Vec (J);\n+               Val := +In_Vec (J);\n             end if;\n \n+            Udigits.Append (Val);\n+\n             for K in 2 .. Size loop\n-               Udigits.Increment_Last;\n-               Udigits.Table (Udigits.Last) := In_Vec (J + K - 1);\n+               Udigits.Append (In_Vec (J + K - 1));\n             end loop;\n \n             return Uints.Last;"}, {"sha": "17dd9178e2c3511ac66e3e968567f5746e073eba", "filename": "gcc/ada/urealp.adb", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5eace9bc1954837d315fda86bb22c44a7443a27a/gcc%2Fada%2Furealp.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5eace9bc1954837d315fda86bb22c44a7443a27a/gcc%2Fada%2Furealp.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Furealp.adb?ref=5eace9bc1954837d315fda86bb22c44a7443a27a", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2007, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2008, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -441,8 +441,7 @@ package body Urealp is\n \n    function Store_Ureal (Val : Ureal_Entry) return Ureal is\n    begin\n-      Ureals.Increment_Last;\n-      Ureals.Table (Ureals.Last) := Val;\n+      Ureals.Append (Val);\n \n       --  Normalize representation of signed values\n "}]}