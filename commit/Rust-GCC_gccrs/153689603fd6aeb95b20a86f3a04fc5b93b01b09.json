{"sha": "153689603fd6aeb95b20a86f3a04fc5b93b01b09", "node_id": "C_kwDOANBUbNoAKDE1MzY4OTYwM2ZkNmFlYjk1YjIwYTg2ZjNhMDRmYzViOTNiMDFiMDk", "commit": {"author": {"name": "Tom de Vries", "email": "tdevries@suse.de", "date": "2022-06-27T08:46:58Z"}, "committer": {"name": "Tom de Vries", "email": "tdevries@suse.de", "date": "2022-06-27T08:52:23Z"}, "message": "[gdb/build] Fix gdbserver build with -fsanitize=thread\n\nWhen building gdbserver with -fsanitize=thread (added to CFLAGS/CXXFLAGS) we\nrun into:\n...\nld: ../libiberty/libiberty.a(safe-ctype.o): warning: relocation against \\\n  `__tsan_init' in read-only section `.text'\nld: ../libiberty/libiberty.a(safe-ctype.o): relocation R_X86_64_PC32 \\\n  against symbol `__tsan_init' can not be used when making a shared object; \\\n  recompile with -fPIC\nld: final link failed: bad value\ncollect2: error: ld returned 1 exit status\nmake[1]: *** [libinproctrace.so] Error 1\n...\nwhich looks similar to what is described in commit 78e49486944 (\"[gdb/build]\nFix gdbserver build with -fsanitize=address\").\n\nThe gdbserver component builds a shared library libinproctrace.so, which uses\nlibiberty and therefore requires the pic variant.  The gdbserver Makefile is\nsetup to use this variant, if available, but it's not there.\n\nFix this by listing gdbserver in the toplevel configure alongside libcc1, as a\ncomponent that needs the libiberty pic variant, setting:\n...\nextra_host_libiberty_configure_flags=--enable-shared\n...\n\nTested on x86_64-linux.\n\nChangeLog:\n\n2022-06-27  Tom de Vries  <tdevries@suse.de>\n\n\t* configure.ac: Build libiberty pic variant for gdbserver.\n\t* configure: Regenerate.", "tree": {"sha": "dad5a797c9a636246a2c65db49ac8e04faf90d8b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dad5a797c9a636246a2c65db49ac8e04faf90d8b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/153689603fd6aeb95b20a86f3a04fc5b93b01b09", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/153689603fd6aeb95b20a86f3a04fc5b93b01b09", "html_url": "https://github.com/Rust-GCC/gccrs/commit/153689603fd6aeb95b20a86f3a04fc5b93b01b09", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/153689603fd6aeb95b20a86f3a04fc5b93b01b09/comments", "author": {"login": "vries", "id": 4057235, "node_id": "MDQ6VXNlcjQwNTcyMzU=", "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vries", "html_url": "https://github.com/vries", "followers_url": "https://api.github.com/users/vries/followers", "following_url": "https://api.github.com/users/vries/following{/other_user}", "gists_url": "https://api.github.com/users/vries/gists{/gist_id}", "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vries/subscriptions", "organizations_url": "https://api.github.com/users/vries/orgs", "repos_url": "https://api.github.com/users/vries/repos", "events_url": "https://api.github.com/users/vries/events{/privacy}", "received_events_url": "https://api.github.com/users/vries/received_events", "type": "User", "site_admin": false}, "committer": {"login": "vries", "id": 4057235, "node_id": "MDQ6VXNlcjQwNTcyMzU=", "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vries", "html_url": "https://github.com/vries", "followers_url": "https://api.github.com/users/vries/followers", "following_url": "https://api.github.com/users/vries/following{/other_user}", "gists_url": "https://api.github.com/users/vries/gists{/gist_id}", "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vries/subscriptions", "organizations_url": "https://api.github.com/users/vries/orgs", "repos_url": "https://api.github.com/users/vries/repos", "events_url": "https://api.github.com/users/vries/events{/privacy}", "received_events_url": "https://api.github.com/users/vries/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2669cae081c852bc8bde1647d671aa66930cc556", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2669cae081c852bc8bde1647d671aa66930cc556", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2669cae081c852bc8bde1647d671aa66930cc556"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "65d7078dbe7e59f6b5836607b6ce962e1eebe44a", "filename": "configure", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/153689603fd6aeb95b20a86f3a04fc5b93b01b09/configure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/153689603fd6aeb95b20a86f3a04fc5b93b01b09/configure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/configure?ref=153689603fd6aeb95b20a86f3a04fc5b93b01b09", "patch": "@@ -9199,7 +9199,7 @@ fi\n extra_host_libiberty_configure_flags=\n extra_host_zlib_configure_flags=\n case \" $configdirs \" in\n-  *\" lto-plugin \"* | *\" libcc1 \"*)\n+  *\" lto-plugin \"* | *\" libcc1 \"* | *\" gdbserver \"*)\n     # When these are to be built as shared libraries, the same applies to\n     # libiberty.\n     extra_host_libiberty_configure_flags=--enable-shared"}, {"sha": "371def9b42122953255ca8a10c8ce93e590abf81", "filename": "configure.ac", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/153689603fd6aeb95b20a86f3a04fc5b93b01b09/configure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/153689603fd6aeb95b20a86f3a04fc5b93b01b09/configure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/configure.ac?ref=153689603fd6aeb95b20a86f3a04fc5b93b01b09", "patch": "@@ -2454,7 +2454,7 @@ fi\n extra_host_libiberty_configure_flags=\n extra_host_zlib_configure_flags=\n case \" $configdirs \" in\n-  *\" lto-plugin \"* | *\" libcc1 \"*)\n+  *\" lto-plugin \"* | *\" libcc1 \"* | *\" gdbserver \"*)\n     # When these are to be built as shared libraries, the same applies to\n     # libiberty.\n     extra_host_libiberty_configure_flags=--enable-shared"}]}