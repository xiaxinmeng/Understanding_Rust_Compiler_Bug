{"sha": "4046760603306f262092ca9bbf62bdf3e3f9c0e7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDA0Njc2MDYwMzMwNmYyNjIwOTJjYTliYmY2MmJkZjNlM2Y5YzBlNw==", "commit": {"author": {"name": "Per Bothner", "email": "per@bothner.com", "date": "2001-08-28T22:16:11Z"}, "committer": {"name": "Per Bothner", "email": "bothner@gcc.gnu.org", "date": "2001-08-28T22:16:11Z"}, "message": "BigInteger.java (init(int,Random)): New method.\n\n\n\t* java/math/BigInteger.java (init(int,Random)):  New method.\n\tMove body of constructor <init>(int,Random)) here.\n\tRe-write it to avoid constructing unneeded temporaries.\n\t(<init>(int,int,Random)):  Use new init method to avoid constructing\n\textra temporary BigIntegers.\n\nFrom-SVN: r45240", "tree": {"sha": "9006eb39ecab92e379bbc4ea2f566084f034734f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9006eb39ecab92e379bbc4ea2f566084f034734f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4046760603306f262092ca9bbf62bdf3e3f9c0e7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4046760603306f262092ca9bbf62bdf3e3f9c0e7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4046760603306f262092ca9bbf62bdf3e3f9c0e7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4046760603306f262092ca9bbf62bdf3e3f9c0e7/comments", "author": {"login": "PerBothner", "id": 10293361, "node_id": "MDQ6VXNlcjEwMjkzMzYx", "avatar_url": "https://avatars.githubusercontent.com/u/10293361?v=4", "gravatar_id": "", "url": "https://api.github.com/users/PerBothner", "html_url": "https://github.com/PerBothner", "followers_url": "https://api.github.com/users/PerBothner/followers", "following_url": "https://api.github.com/users/PerBothner/following{/other_user}", "gists_url": "https://api.github.com/users/PerBothner/gists{/gist_id}", "starred_url": "https://api.github.com/users/PerBothner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/PerBothner/subscriptions", "organizations_url": "https://api.github.com/users/PerBothner/orgs", "repos_url": "https://api.github.com/users/PerBothner/repos", "events_url": "https://api.github.com/users/PerBothner/events{/privacy}", "received_events_url": "https://api.github.com/users/PerBothner/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "967603efc9e5f6772e57ae5d1375e6cb79e17a34", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/967603efc9e5f6772e57ae5d1375e6cb79e17a34", "html_url": "https://github.com/Rust-GCC/gccrs/commit/967603efc9e5f6772e57ae5d1375e6cb79e17a34"}], "stats": {"total": 48, "additions": 35, "deletions": 13}, "files": [{"sha": "8fe5f923cbda513a3e0a1207821293928e52deb0", "filename": "libjava/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4046760603306f262092ca9bbf62bdf3e3f9c0e7/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4046760603306f262092ca9bbf62bdf3e3f9c0e7/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=4046760603306f262092ca9bbf62bdf3e3f9c0e7", "patch": "@@ -1,3 +1,11 @@\n+2001-08-28  Per Bothner  <per@bothner.com>\n+\n+\t* java/math/BigInteger.java (init(int,Random)):  New method.\n+\tMove body of constructor <init>(int,Random)) here.\n+\tRe-write it to avoid constructing unneeded temporaries.\n+\t(<init>(int,int,Random)):  Use new init method to avoid constructing\n+\textra temporary BigIntegers.\n+\t\n 2001-08-27  Tom Tromey  <tromey@redhat.com>\n \n \t* java/rmi/activation/Activatable.java,"}, {"sha": "f4a03f9012388c9f233755633c9168ff6c39a2ce", "filename": "libjava/java/math/BigInteger.java", "status": "modified", "additions": 27, "deletions": 13, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4046760603306f262092ca9bbf62bdf3e3f9c0e7/libjava%2Fjava%2Fmath%2FBigInteger.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4046760603306f262092ca9bbf62bdf3e3f9c0e7/libjava%2Fjava%2Fmath%2FBigInteger.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fmath%2FBigInteger.java?ref=4046760603306f262092ca9bbf62bdf3e3f9c0e7", "patch": "@@ -144,20 +144,36 @@ public BigInteger(int signum, byte[] magnitude)\n \n   public BigInteger(int numBits, Random rnd)\n   {\n-    this(1, randBytes(numBits, rnd));\n+    if (numBits < 0)\n+      throw new IllegalArgumentException();\n+\n+    init(numBits, rnd);\n   }\n \n-  private static byte[] randBytes(int numBits, Random rnd)\n+  private void init(int numBits, Random rnd)\n   {\n-    if (numBits < 0)\n-      throw new IllegalArgumentException();\n+    int highbits = numBits & 31;\n+    if (highbits > 0)\n+      highbits = rnd.nextInt() >>> (32 - highbits);\n+    int nwords = numBits / 32;\n \n-    int extra = numBits % 8;\n-    byte[] b = new byte[numBits / 8 + (extra > 0 ? 1 : 0)];\n-    rnd.nextBytes(b);\n-    if (extra > 0)\n-      b[0] &= ~((~0) << (8 - extra));\n-    return b;\n+    while (highbits == 0 && nwords > 0)\n+      {\n+\thighbits = rnd.nextInt();\n+\t--nwords;\n+      }\n+    if (nwords == 0 && highbits >= 0)\n+      {\n+\tival = highbits;\n+      }\n+    else\n+      {\n+\tival = highbits < 0 ? nwords + 2 : nwords + 1;\n+\twords = new int[ival];\n+\twords[nwords] = highbits;\n+\twhile (--nwords >= 0)\n+\t  words[nwords] = rnd.nextInt();\n+      }\n   }\n \n   public BigInteger(int bitLength, int certainty, Random rnd)\n@@ -170,9 +186,7 @@ public BigInteger(int bitLength, int certainty, Random rnd)\n \tif (isProbablePrime(certainty))\n \t  return;\n \n-\tBigInteger next = new BigInteger(bitLength, rnd);\n-\tthis.ival = next.ival;\n-\tthis.words = next.words;\n+\tinit(bitLength, rnd);\n       }\n   }\n "}]}