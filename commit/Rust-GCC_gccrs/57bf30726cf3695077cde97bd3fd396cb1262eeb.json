{"sha": "57bf30726cf3695077cde97bd3fd396cb1262eeb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTdiZjMwNzI2Y2YzNjk1MDc3Y2RlOTdiZDNmZDM5NmNiMTI2MmVlYg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2016-01-08T06:45:18Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2016-01-08T06:45:18Z"}, "message": "re PR fortran/69128 (OpenMP workshare problem with SUM())\n\n\tPR fortran/69128\n\t* trans.h (OMPWS_SCALARIZER_BODY): Define.\n\t(OMPWS_NOWAIT): Renumber.\n\t* trans-stmt.c (gfc_trans_where_3): Only set OMPWS_SCALARIZER_WS\n\tif OMPWS_SCALARIZER_BODY is not set already, and set also\n\tOMPWS_SCALARIZER_BODY until the final loop creation.\n\t* trans-expr.c (gfc_trans_assignment_1): Likewise.\n\t* trans-openmp.c (gfc_trans_omp_workshare): Also clear\n\tOMPWS_SCALARIZER_BODY.\n\t* trans-array.c (gfc_trans_scalarized_loop_end): Don't create\n\tOMP_FOR if OMPWS_SCALARIZER_BODY is set.\n\n\t* gfortran.dg/gomp/pr69128.f90: New test.\n\nFrom-SVN: r232151", "tree": {"sha": "e9a3324b824366e319e9512c7ab45e0a701976ad", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e9a3324b824366e319e9512c7ab45e0a701976ad"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/57bf30726cf3695077cde97bd3fd396cb1262eeb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/57bf30726cf3695077cde97bd3fd396cb1262eeb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/57bf30726cf3695077cde97bd3fd396cb1262eeb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/57bf30726cf3695077cde97bd3fd396cb1262eeb/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "53290e072ae4d8e5d61f82d651b6fba309fed6f1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/53290e072ae4d8e5d61f82d651b6fba309fed6f1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/53290e072ae4d8e5d61f82d651b6fba309fed6f1"}], "stats": {"total": 73, "additions": 66, "deletions": 7}, "files": [{"sha": "485a4ae5a1dee17df04c71891b70414391c54d1a", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57bf30726cf3695077cde97bd3fd396cb1262eeb/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57bf30726cf3695077cde97bd3fd396cb1262eeb/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=57bf30726cf3695077cde97bd3fd396cb1262eeb", "patch": "@@ -1,3 +1,17 @@\n+2016-01-08  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR fortran/69128\n+\t* trans.h (OMPWS_SCALARIZER_BODY): Define.\n+\t(OMPWS_NOWAIT): Renumber.\n+\t* trans-stmt.c (gfc_trans_where_3): Only set OMPWS_SCALARIZER_WS\n+\tif OMPWS_SCALARIZER_BODY is not set already, and set also\n+\tOMPWS_SCALARIZER_BODY until the final loop creation.\n+\t* trans-expr.c (gfc_trans_assignment_1): Likewise.\n+\t* trans-openmp.c (gfc_trans_omp_workshare): Also clear\n+\tOMPWS_SCALARIZER_BODY.\n+\t* trans-array.c (gfc_trans_scalarized_loop_end): Don't create\n+\tOMP_FOR if OMPWS_SCALARIZER_BODY is set.\n+\n 2016-01-04  Jakub Jelinek  <jakub@redhat.com>\n \n \tUpdate copyright years."}, {"sha": "1c3768eaa6402dffb7a4633b0d23ee69073ead1f", "filename": "gcc/fortran/trans-array.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57bf30726cf3695077cde97bd3fd396cb1262eeb/gcc%2Ffortran%2Ftrans-array.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57bf30726cf3695077cde97bd3fd396cb1262eeb/gcc%2Ffortran%2Ftrans-array.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-array.c?ref=57bf30726cf3695077cde97bd3fd396cb1262eeb", "patch": "@@ -3601,7 +3601,8 @@ gfc_trans_scalarized_loop_end (gfc_loopinfo * loop, int n,\n   tree init;\n   tree incr;\n \n-  if ((ompws_flags & (OMPWS_WORKSHARE_FLAG | OMPWS_SCALARIZER_WS))\n+  if ((ompws_flags & (OMPWS_WORKSHARE_FLAG | OMPWS_SCALARIZER_WS\n+\t\t      | OMPWS_SCALARIZER_BODY))\n       == (OMPWS_WORKSHARE_FLAG | OMPWS_SCALARIZER_WS)\n       && n == loop->dimen - 1)\n     {"}, {"sha": "1a6b7344877cfc29e6398788965e0571dacb2dfb", "filename": "gcc/fortran/trans-expr.c", "status": "modified", "additions": 11, "deletions": 2, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57bf30726cf3695077cde97bd3fd396cb1262eeb/gcc%2Ffortran%2Ftrans-expr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57bf30726cf3695077cde97bd3fd396cb1262eeb/gcc%2Ffortran%2Ftrans-expr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-expr.c?ref=57bf30726cf3695077cde97bd3fd396cb1262eeb", "patch": "@@ -9160,6 +9160,7 @@ gfc_trans_assignment_1 (gfc_expr * expr1, gfc_expr * expr2, bool init_flag,\n   bool scalar_to_array;\n   tree string_length;\n   int n;\n+  bool maybe_workshare = false;\n \n   /* Assignment of the form lhs = rhs.  */\n   gfc_start_block (&block);\n@@ -9234,8 +9235,13 @@ gfc_trans_assignment_1 (gfc_expr * expr1, gfc_expr * expr2, bool init_flag,\n \t}\n \n       /* Allow the scalarizer to workshare array assignments.  */\n-      if ((ompws_flags & OMPWS_WORKSHARE_FLAG) && loop.temp_ss == NULL)\n-\tompws_flags |= OMPWS_SCALARIZER_WS;\n+      if ((ompws_flags & (OMPWS_WORKSHARE_FLAG | OMPWS_SCALARIZER_BODY))\n+\t  == OMPWS_WORKSHARE_FLAG\n+\t  && loop.temp_ss == NULL)\n+\t{\n+\t  maybe_workshare = true;\n+\t  ompws_flags |= OMPWS_SCALARIZER_WS | OMPWS_SCALARIZER_BODY;\n+\t}\n \n       /* Start the scalarized loop body.  */\n       gfc_start_scalarized_body (&loop, &body);\n@@ -9384,6 +9390,9 @@ gfc_trans_assignment_1 (gfc_expr * expr1, gfc_expr * expr2, bool init_flag,\n \t    gfc_add_expr_to_block (&loop.code[expr1->rank - 1], tmp);\n \t}\n \n+      if (maybe_workshare)\n+\tompws_flags &= ~OMPWS_SCALARIZER_BODY;\n+\n       /* Generate the copying loops.  */\n       gfc_trans_scalarizing_loops (&loop, &body);\n "}, {"sha": "5990202c68c31252941801fc54ac3863634fa984", "filename": "gcc/fortran/trans-openmp.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57bf30726cf3695077cde97bd3fd396cb1262eeb/gcc%2Ffortran%2Ftrans-openmp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57bf30726cf3695077cde97bd3fd396cb1262eeb/gcc%2Ffortran%2Ftrans-openmp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-openmp.c?ref=57bf30726cf3695077cde97bd3fd396cb1262eeb", "patch": "@@ -4297,7 +4297,7 @@ gfc_trans_omp_workshare (gfc_code *code, gfc_omp_clauses *clauses)\n \n       /* By default, every gfc_code is a single unit of work.  */\n       ompws_flags |= OMPWS_CURR_SINGLEUNIT;\n-      ompws_flags &= ~OMPWS_SCALARIZER_WS;\n+      ompws_flags &= ~(OMPWS_SCALARIZER_WS | OMPWS_SCALARIZER_BODY);\n \n       switch (code->op)\n \t{"}, {"sha": "70a61cc5c86446186a08817e9e38f9e009d2f6b6", "filename": "gcc/fortran/trans-stmt.c", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57bf30726cf3695077cde97bd3fd396cb1262eeb/gcc%2Ffortran%2Ftrans-stmt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57bf30726cf3695077cde97bd3fd396cb1262eeb/gcc%2Ffortran%2Ftrans-stmt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-stmt.c?ref=57bf30726cf3695077cde97bd3fd396cb1262eeb", "patch": "@@ -5057,10 +5057,15 @@ gfc_trans_where_3 (gfc_code * cblock, gfc_code * eblock)\n   gfc_loopinfo loop;\n   gfc_ss *edss = 0;\n   gfc_ss *esss = 0;\n+  bool maybe_workshare = false;\n \n   /* Allow the scalarizer to workshare simple where loops.  */\n-  if (ompws_flags & OMPWS_WORKSHARE_FLAG)\n-    ompws_flags |= OMPWS_SCALARIZER_WS;\n+  if ((ompws_flags & (OMPWS_WORKSHARE_FLAG | OMPWS_SCALARIZER_BODY))\n+      == OMPWS_WORKSHARE_FLAG)\n+    {\n+      maybe_workshare = true;\n+      ompws_flags |= OMPWS_SCALARIZER_WS | OMPWS_SCALARIZER_BODY;\n+    }\n \n   cond = cblock->expr1;\n   tdst = cblock->next->expr1;\n@@ -5160,6 +5165,8 @@ gfc_trans_where_3 (gfc_code * cblock, gfc_code * eblock)\n   gfc_add_expr_to_block (&body, tmp);\n   gfc_add_block_to_block (&body, &cse.post);\n \n+  if (maybe_workshare)\n+    ompws_flags &= ~OMPWS_SCALARIZER_BODY;\n   gfc_trans_scalarizing_loops (&loop, &body);\n   gfc_add_block_to_block (&block, &loop.pre);\n   gfc_add_block_to_block (&block, &loop.post);"}, {"sha": "3026e3bbd2dae51adb080dde869a8c18362063a6", "filename": "gcc/fortran/trans.h", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57bf30726cf3695077cde97bd3fd396cb1262eeb/gcc%2Ffortran%2Ftrans.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57bf30726cf3695077cde97bd3fd396cb1262eeb/gcc%2Ffortran%2Ftrans.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans.h?ref=57bf30726cf3695077cde97bd3fd396cb1262eeb", "patch": "@@ -1039,7 +1039,9 @@ extern const char gfc_msg_wrong_return[];\n \t\t\t\t\t   construct is not workshared.  */\n #define OMPWS_SCALARIZER_WS\t4\t/* Set if scalarizer should attempt\n \t\t\t\t\t   to create parallel loops.  */\n-#define OMPWS_NOWAIT\t\t8\t/* Use NOWAIT on OMP_FOR.  */\n+#define OMPWS_SCALARIZER_BODY\t8\t/* Set if handling body of potential\n+\t\t\t\t\t   parallel loop.  */\n+#define OMPWS_NOWAIT\t\t16\t/* Use NOWAIT on OMP_FOR.  */\n extern int ompws_flags;\n \n #endif /* GFC_TRANS_H */"}, {"sha": "b7f25ebc66a907824d09152f9720514172789829", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57bf30726cf3695077cde97bd3fd396cb1262eeb/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57bf30726cf3695077cde97bd3fd396cb1262eeb/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=57bf30726cf3695077cde97bd3fd396cb1262eeb", "patch": "@@ -1,5 +1,8 @@\n 2016-01-08  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR fortran/69128\n+\t* gfortran.dg/gomp/pr69128.f90: New test.\n+\n \tPR c++/69145\n \t* g++.dg/ext/pr69145-1.C: New test.\n \t* g++.dg/ext/pr69145-2-very-long-filename.cc: New file."}, {"sha": "248c404ad4190959530cf65378528d9c15a80e86", "filename": "gcc/testsuite/gfortran.dg/gomp/pr69128.f90", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57bf30726cf3695077cde97bd3fd396cb1262eeb/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fpr69128.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57bf30726cf3695077cde97bd3fd396cb1262eeb/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fpr69128.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fpr69128.f90?ref=57bf30726cf3695077cde97bd3fd396cb1262eeb", "patch": "@@ -0,0 +1,23 @@\n+! PR fortran/69128\n+! { dg-do compile }\n+\n+program test\n+  implicit none\n+  interface\n+    subroutine use(b, c)\n+      real, allocatable :: b(:), c(:)\n+    end subroutine\n+  end interface\n+  real, allocatable :: a(:,:), b(:), c(:)\n+  integer :: dim1, dim2, i,j\n+  dim1=10000\n+  dim2=500\n+  allocate(a(dim1,dim2),b(dim1),c(dim1))\n+  call random_number(a)\n+\n+!$omp parallel workshare\n+  b(:) = maxval(a(:,:), dim=2)\n+  c(:) = sum(a(:,:), dim=2)\n+!$omp end parallel workshare\n+  call use(b, c)\n+end program"}]}