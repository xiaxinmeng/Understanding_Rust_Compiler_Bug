{"sha": "1c85591cabcde20a01a2ecb90d857625a5681ae4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWM4NTU5MWNhYmNkZTIwYTAxYTJlY2I5MGQ4NTc2MjVhNTY4MWFlNA==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2015-01-07T10:12:03Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2015-01-07T10:12:03Z"}, "message": "[multiple changes]\n\n2015-01-07  Robert Dewar  <dewar@adacore.com>\n\n\t* a-reatim.adb, make.adb, exp_pakd.adb, i-cpoint.adb, sem_ch8.adb,\n\texp_ch3.adb: Minor reformatting.\n\n2015-01-07  Doug Rupp  <rupp@adacore.com>\n\n\t* s-linux.ads (clockid_t): New subtype.\n\t* s-osinte-linux.ads (pragma Linker Options): Add -lrt.\n\t(clockid_t): New subtype.\n\t(clock_getres): Import system call.\n\t* s-taprop-linux.adb (System.OS_Constants): With and rename.\n\t(RT_Resolution): Remove\n\thardcoded value and call clock_getres.\n\t* s-linux-sparc.ads, s-linux-mipsel.ads, s-linux-hppa.ads,\n\ts-linux-alpha.ads, s-linux-x32.ads (clockid_t): Add new subtype.\n\n2015-01-07  Robert Dewar  <dewar@adacore.com>\n\n\t* sem_warn.adb (Check_One_Unit): Guard against context item\n\twith no Entity field.\n\nFrom-SVN: r219289", "tree": {"sha": "23660b48f112efe646ffdfa4c8864aa92bdcbc03", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/23660b48f112efe646ffdfa4c8864aa92bdcbc03"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1c85591cabcde20a01a2ecb90d857625a5681ae4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1c85591cabcde20a01a2ecb90d857625a5681ae4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1c85591cabcde20a01a2ecb90d857625a5681ae4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1c85591cabcde20a01a2ecb90d857625a5681ae4/comments", "author": null, "committer": null, "parents": [{"sha": "b6e5a1ec2c33cd98e0f3ca4818993a3a00ef05eb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b6e5a1ec2c33cd98e0f3ca4818993a3a00ef05eb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b6e5a1ec2c33cd98e0f3ca4818993a3a00ef05eb"}], "stats": {"total": 101, "additions": 77, "deletions": 24}, "files": [{"sha": "ed5e35202ee13513c3ae2d96fa35ef24b2c1351f", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1c85591cabcde20a01a2ecb90d857625a5681ae4/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1c85591cabcde20a01a2ecb90d857625a5681ae4/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=1c85591cabcde20a01a2ecb90d857625a5681ae4", "patch": "@@ -1,3 +1,25 @@\n+2015-01-07  Robert Dewar  <dewar@adacore.com>\n+\n+\t* a-reatim.adb, make.adb, exp_pakd.adb, i-cpoint.adb, sem_ch8.adb,\n+\texp_ch3.adb: Minor reformatting.\n+\n+2015-01-07  Doug Rupp  <rupp@adacore.com>\n+\n+\t* s-linux.ads (clockid_t): New subtype.\n+\t* s-osinte-linux.ads (pragma Linker Options): Add -lrt.\n+\t(clockid_t): New subtype.\n+\t(clock_getres): Import system call.\n+\t* s-taprop-linux.adb (System.OS_Constants): With and rename.\n+\t(RT_Resolution): Remove\n+\thardcoded value and call clock_getres.\n+\t* s-linux-sparc.ads, s-linux-mipsel.ads, s-linux-hppa.ads,\n+\ts-linux-alpha.ads, s-linux-x32.ads (clockid_t): Add new subtype.\n+\n+2015-01-07  Robert Dewar  <dewar@adacore.com>\n+\n+\t* sem_warn.adb (Check_One_Unit): Guard against context item\n+\twith no Entity field.\n+\n 2015-01-07  Vincent Celier  <celier@adacore.com>\n \n \t* clean.adb (Gnatclean): Warn that 'gnatclean -P' is obsolete."}, {"sha": "4597dc3b5a7407480589f4e2363eb2798795edc6", "filename": "gcc/ada/a-reatim.adb", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1c85591cabcde20a01a2ecb90d857625a5681ae4/gcc%2Fada%2Fa-reatim.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1c85591cabcde20a01a2ecb90d857625a5681ae4/gcc%2Fada%2Fa-reatim.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-reatim.adb?ref=1c85591cabcde20a01a2ecb90d857625a5681ae4", "patch": "@@ -222,18 +222,16 @@ package body Ada.Real_Time is\n       --  the intermediate result Time (SC) we take advantage of the different\n       --  signs in SC and TS (when that is the case).\n \n-      --  If signs of SC and TS are different then we avoid converting SC to\n-      --  Time (as we do in the else part). The reason for that is that SC\n+      --  If the signs of SC and TS are different then we avoid converting SC\n+      --  to Time (as we do in the else part). The reason for that is that SC\n       --  converted to Time may overflow the range of Time, while the addition\n       --  of SC plus TS does not overflow (because of their different signs).\n       --  The approach is to add and remove the greatest value of time\n       --  (greatest absolute value) to both SC and TS. SC and TS have different\n       --  signs, so we add the positive constant to the negative value, and the\n       --  negative constant to the positive value, to prevent overflows.\n \n-      if (SC > 0 and then TS < 0.0)\n-        or else (SC < 0 and then TS > 0.0)\n-      then\n+      if (SC > 0 and then TS < 0.0) or else (SC < 0 and then TS > 0.0) then\n          declare\n             Closest_Boundary : constant Seconds_Count :=\n               (if TS >= 0.0 then"}, {"sha": "3ee51ef8662323040753efa07d133242bc47d4ac", "filename": "gcc/ada/exp_ch3.adb", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1c85591cabcde20a01a2ecb90d857625a5681ae4/gcc%2Fada%2Fexp_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1c85591cabcde20a01a2ecb90d857625a5681ae4/gcc%2Fada%2Fexp_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch3.adb?ref=1c85591cabcde20a01a2ecb90d857625a5681ae4", "patch": "@@ -2395,14 +2395,16 @@ package body Exp_Ch3 is\n                      declare\n                         Parent_IP : constant Name_Id :=\n                                       Make_Init_Proc_Name (Etype (Rec_Ent));\n-                        Stmt      : Node_Id := First (Stmts);\n-                        IP_Call   : Node_Id := Empty;\n+                        Stmt      : Node_Id;\n+                        IP_Call   : Node_Id;\n                         IP_Stmts  : List_Id;\n \n                      begin\n                         --  Look for a call to the parent IP at the beginning\n                         --  of Stmts associated with the record extension\n \n+                        Stmt := First (Stmts);\n+                        IP_Call := Empty;\n                         while Present (Stmt) loop\n                            if Nkind (Stmt) = N_Procedure_Call_Statement\n                              and then Chars (Name (Stmt)) = Parent_IP"}, {"sha": "d0836118851176582265a3485bca5eba69d517a1", "filename": "gcc/ada/exp_pakd.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1c85591cabcde20a01a2ecb90d857625a5681ae4/gcc%2Fada%2Fexp_pakd.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1c85591cabcde20a01a2ecb90d857625a5681ae4/gcc%2Fada%2Fexp_pakd.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_pakd.adb?ref=1c85591cabcde20a01a2ecb90d857625a5681ae4", "patch": "@@ -765,9 +765,9 @@ package body Exp_Pakd is\n       elsif not Is_Constrained (Typ) then\n \n          --  When generating standard DWARF, the ___XP suffix will be stripped\n-         --  by the back-end, but generate it anyway to ease compiler\n-         --  debugging: this will help to distinguish implementation types from\n-         --  original packed arrays.\n+         --  by the back-end but generate it anyway to ease compiler debugging.\n+         --  This will help to distinguish implementation types from original\n+         --  packed arrays.\n \n          PAT :=\n            Make_Defining_Identifier (Loc,"}, {"sha": "8da412bdea7baf685bad9da55be6f67198c24ed0", "filename": "gcc/ada/i-cpoint.adb", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1c85591cabcde20a01a2ecb90d857625a5681ae4/gcc%2Fada%2Fi-cpoint.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1c85591cabcde20a01a2ecb90d857625a5681ae4/gcc%2Fada%2Fi-cpoint.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fi-cpoint.adb?ref=1c85591cabcde20a01a2ecb90d857625a5681ae4", "patch": "@@ -145,12 +145,14 @@ package body Interfaces.C.Pointers is\n    is\n       L : ptrdiff_t;\n       S : Pointer := Source;\n+\n    begin\n       if Source = null or Target = null then\n          raise Dereference_Error;\n       end if;\n \n       --  Compute array length (including the terminator)\n+\n       L := 1;\n       while S.all /= Terminator and then L < Limit loop\n          L := L + 1;"}, {"sha": "8fc4763e71c0b54e6adaf5f19144f73c6c2d8dd4", "filename": "gcc/ada/make.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1c85591cabcde20a01a2ecb90d857625a5681ae4/gcc%2Fada%2Fmake.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1c85591cabcde20a01a2ecb90d857625a5681ae4/gcc%2Fada%2Fmake.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmake.adb?ref=1c85591cabcde20a01a2ecb90d857625a5681ae4", "patch": "@@ -6490,8 +6490,8 @@ package body Make is\n \n       if Project_File_Name /= null then\n          Write_Line\n-           (\"warning: gnatmake -P is obsolete and will not be available \" &\n-            \"in the next release. Use gprbuild instead.\");\n+           (\"warning: gnatmake -P is obsolete and will not be available \"\n+            & \"in the next release; use gprbuild instead\");\n       end if;\n \n       --  If --subdirs= is specified, but not -P, this is equivalent to -D,"}, {"sha": "23ca44aad7cd10800b1af922832707457038a0a9", "filename": "gcc/ada/s-linux-alpha.ads", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1c85591cabcde20a01a2ecb90d857625a5681ae4/gcc%2Fada%2Fs-linux-alpha.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1c85591cabcde20a01a2ecb90d857625a5681ae4/gcc%2Fada%2Fs-linux-alpha.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-linux-alpha.ads?ref=1c85591cabcde20a01a2ecb90d857625a5681ae4", "patch": "@@ -47,6 +47,7 @@ package System.Linux is\n    subtype long        is Interfaces.C.long;\n    subtype suseconds_t is Interfaces.C.long;\n    subtype time_t      is Interfaces.C.long;\n+   subtype clockid_t   is Interfaces.C.int;\n \n    type timespec is record\n       tv_sec  : time_t;"}, {"sha": "d72c96ebcaf9ce4c2d37f8bd8b7a96097ac13a28", "filename": "gcc/ada/s-linux-hppa.ads", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1c85591cabcde20a01a2ecb90d857625a5681ae4/gcc%2Fada%2Fs-linux-hppa.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1c85591cabcde20a01a2ecb90d857625a5681ae4/gcc%2Fada%2Fs-linux-hppa.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-linux-hppa.ads?ref=1c85591cabcde20a01a2ecb90d857625a5681ae4", "patch": "@@ -47,6 +47,7 @@ package System.Linux is\n    subtype long        is Interfaces.C.long;\n    subtype suseconds_t is Interfaces.C.long;\n    subtype time_t      is Interfaces.C.long;\n+   subtype clockid_t   is Interfaces.C.int;\n \n    type timespec is record\n       tv_sec  : time_t;"}, {"sha": "17a3375cccedb390e0dd0e4f31c9ed529ea68a12", "filename": "gcc/ada/s-linux-mipsel.ads", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1c85591cabcde20a01a2ecb90d857625a5681ae4/gcc%2Fada%2Fs-linux-mipsel.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1c85591cabcde20a01a2ecb90d857625a5681ae4/gcc%2Fada%2Fs-linux-mipsel.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-linux-mipsel.ads?ref=1c85591cabcde20a01a2ecb90d857625a5681ae4", "patch": "@@ -46,6 +46,7 @@ package System.Linux is\n    subtype long        is Interfaces.C.long;\n    subtype suseconds_t is Interfaces.C.long;\n    subtype time_t      is Interfaces.C.long;\n+   subtype clockid_t   is Interfaces.C.int;\n \n    type timespec is record\n       tv_sec  : time_t;"}, {"sha": "96c67145fe1f3d07933dc3e2a2c97e61e117e2b4", "filename": "gcc/ada/s-linux-sparc.ads", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1c85591cabcde20a01a2ecb90d857625a5681ae4/gcc%2Fada%2Fs-linux-sparc.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1c85591cabcde20a01a2ecb90d857625a5681ae4/gcc%2Fada%2Fs-linux-sparc.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-linux-sparc.ads?ref=1c85591cabcde20a01a2ecb90d857625a5681ae4", "patch": "@@ -47,6 +47,7 @@ package System.Linux is\n    subtype long        is Interfaces.C.long;\n    subtype suseconds_t is Interfaces.C.long;\n    subtype time_t      is Interfaces.C.long;\n+   subtype clockid_t   is Interfaces.C.int;\n \n    type timespec is record\n       tv_sec  : time_t;"}, {"sha": "6fb453c2b4badd85812ecfe358fa244bfe5f686e", "filename": "gcc/ada/s-linux-x32.ads", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1c85591cabcde20a01a2ecb90d857625a5681ae4/gcc%2Fada%2Fs-linux-x32.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1c85591cabcde20a01a2ecb90d857625a5681ae4/gcc%2Fada%2Fs-linux-x32.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-linux-x32.ads?ref=1c85591cabcde20a01a2ecb90d857625a5681ae4", "patch": "@@ -36,14 +36,17 @@\n --  PLEASE DO NOT add any with-clauses to this package or remove the pragma\n --  Preelaborate. This package is designed to be a bottom-level (leaf) package\n \n+with Interfaces.C;\n+\n package System.Linux is\n    pragma Preelaborate;\n \n    ----------\n    -- Time --\n    ----------\n \n-   type time_t is new Long_Long_Integer;\n+   type time_t       is new Long_Long_Integer;\n+   subtype clockid_t is Interfaces.C.int;\n \n    type timespec is record\n       tv_sec  : time_t;"}, {"sha": "3b48284644132b69f907f50b4207ec4e44f258f4", "filename": "gcc/ada/s-linux.ads", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1c85591cabcde20a01a2ecb90d857625a5681ae4/gcc%2Fada%2Fs-linux.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1c85591cabcde20a01a2ecb90d857625a5681ae4/gcc%2Fada%2Fs-linux.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-linux.ads?ref=1c85591cabcde20a01a2ecb90d857625a5681ae4", "patch": "@@ -47,6 +47,7 @@ package System.Linux is\n    subtype long        is Interfaces.C.long;\n    subtype suseconds_t is Interfaces.C.long;\n    subtype time_t      is Interfaces.C.long;\n+   subtype clockid_t   is Interfaces.C.int;\n \n    type timespec is record\n       tv_sec  : time_t;"}, {"sha": "c71bebc8d8a669312c2337c5af14e28ed6cd6a6b", "filename": "gcc/ada/s-osinte-linux.ads", "status": "modified", "additions": 11, "deletions": 3, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1c85591cabcde20a01a2ecb90d857625a5681ae4/gcc%2Fada%2Fs-osinte-linux.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1c85591cabcde20a01a2ecb90d857625a5681ae4/gcc%2Fada%2Fs-osinte-linux.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-osinte-linux.ads?ref=1c85591cabcde20a01a2ecb90d857625a5681ae4", "patch": "@@ -47,6 +47,8 @@ package System.OS_Interface is\n    pragma Preelaborate;\n \n    pragma Linker_Options (\"-lpthread\");\n+   pragma Linker_Options (\"-lrt\");\n+   --  Needed for clock_getres with glibc versions prior to 2.17\n \n    subtype int            is Interfaces.C.int;\n    subtype char           is Interfaces.C.char;\n@@ -217,9 +219,15 @@ package System.OS_Interface is\n    -- Time --\n    ----------\n \n-   subtype time_t   is System.Linux.time_t;\n-   subtype timespec is System.Linux.timespec;\n-   subtype timeval  is System.Linux.timeval;\n+   subtype time_t    is System.Linux.time_t;\n+   subtype timespec  is System.Linux.timespec;\n+   subtype timeval   is System.Linux.timeval;\n+   subtype clockid_t is System.Linux.clockid_t;\n+\n+   function clock_getres\n+     (clock_id : clockid_t;\n+      res      : access timespec) return int;\n+   pragma Import (C, clock_getres, \"clock_getres\");\n \n    function To_Duration (TS : timespec) return Duration;\n    pragma Inline (To_Duration);"}, {"sha": "bf5e99295028dc067a751f5517fba69243e82c6c", "filename": "gcc/ada/s-taprop-linux.adb", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1c85591cabcde20a01a2ecb90d857625a5681ae4/gcc%2Fada%2Fs-taprop-linux.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1c85591cabcde20a01a2ecb90d857625a5681ae4/gcc%2Fada%2Fs-taprop-linux.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-taprop-linux.adb?ref=1c85591cabcde20a01a2ecb90d857625a5681ae4", "patch": "@@ -44,6 +44,7 @@ with Interfaces.C.Extensions;\n with System.Task_Info;\n with System.Tasking.Debug;\n with System.Interrupt_Management;\n+with System.OS_Constants;\n with System.OS_Primitives;\n with System.Stack_Checking.Operations;\n with System.Multiprocessors;\n@@ -56,6 +57,7 @@ with System.Soft_Links;\n \n package body System.Task_Primitives.Operations is\n \n+   package OSC renames System.OS_Constants;\n    package SSL renames System.Soft_Links;\n    package SC renames System.Stack_Checking.Operations;\n \n@@ -658,8 +660,13 @@ package body System.Task_Primitives.Operations is\n    -------------------\n \n    function RT_Resolution return Duration is\n+      TS     : aliased timespec;\n+      Result : int;\n    begin\n-      return 10#1.0#E-6;\n+      Result := clock_getres (OSC.CLOCK_REALTIME, TS'Unchecked_Access);\n+      pragma Assert (Result = 0);\n+\n+      return To_Duration (TS);\n    end RT_Resolution;\n \n    ------------"}, {"sha": "bd015886bcc830ee14df1f3d13cd42f592a09fa0", "filename": "gcc/ada/sem_ch8.adb", "status": "modified", "additions": 6, "deletions": 7, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1c85591cabcde20a01a2ecb90d857625a5681ae4/gcc%2Fada%2Fsem_ch8.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1c85591cabcde20a01a2ecb90d857625a5681ae4/gcc%2Fada%2Fsem_ch8.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch8.adb?ref=1c85591cabcde20a01a2ecb90d857625a5681ae4", "patch": "@@ -2710,16 +2710,15 @@ package body Sem_Ch8 is\n          --  Check whether the renaming is for a defaulted actual subprogram\n          --  with a class-wide actual.\n \n-         --  The class-wide wrapper is not needed when we are in\n-         --  GNATprove_Mode and there is an external axiomatization on the\n-         --  package.\n+         --  The class-wide wrapper is not needed in GNATprove_Mode and there\n+         --  is an external axiomatization on the package.\n \n          if CW_Actual\n             and then Box_Present (Inst_Node)\n-            and then not (GNATprove_Mode\n-                          and then\n-                          Present (Containing_Package_With_Ext_Axioms\n-                                     (Formal_Spec)))\n+            and then not\n+             (GNATprove_Mode\n+               and then\n+                 Present (Containing_Package_With_Ext_Axioms (Formal_Spec)))\n          then\n             Build_Class_Wide_Wrapper (New_S, Old_S);\n "}, {"sha": "484509602c0cd377afa4d5e0098e3ed162fed2ca", "filename": "gcc/ada/sem_warn.adb", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1c85591cabcde20a01a2ecb90d857625a5681ae4/gcc%2Fada%2Fsem_warn.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1c85591cabcde20a01a2ecb90d857625a5681ae4/gcc%2Fada%2Fsem_warn.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_warn.adb?ref=1c85591cabcde20a01a2ecb90d857625a5681ae4", "patch": "@@ -2350,6 +2350,13 @@ package body Sem_Warn is\n             if Nkind (Item) = N_With_Clause\n               and then not Implicit_With (Item)\n               and then In_Extended_Main_Source_Unit (Item)\n+\n+              --  Guard for no entity present. Not clear under what conditions\n+              --  this happens, but it does occur, and since this is only a\n+              --  warning, we just suppress the warning in this case.\n+\n+              and then Nkind (Name (Item)) in N_Has_Entity\n+              and then Present (Entity (Name (Item)))\n             then\n                Lunit := Entity (Name (Item));\n "}]}