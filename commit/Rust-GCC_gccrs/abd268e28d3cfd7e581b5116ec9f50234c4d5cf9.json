{"sha": "abd268e28d3cfd7e581b5116ec9f50234c4d5cf9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWJkMjY4ZTI4ZDNjZmQ3ZTU4MWI1MTE2ZWM5ZjUwMjM0YzRkNWNmOQ==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1997-03-15T12:11:34Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1997-03-15T12:11:34Z"}, "message": "(eliminate_regs): Add STORING arg.\n\nFrom-SVN: r13703", "tree": {"sha": "82325a8b4096900cf71963396a0f25a8844c10a1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/82325a8b4096900cf71963396a0f25a8844c10a1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/abd268e28d3cfd7e581b5116ec9f50234c4d5cf9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/abd268e28d3cfd7e581b5116ec9f50234c4d5cf9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/abd268e28d3cfd7e581b5116ec9f50234c4d5cf9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/abd268e28d3cfd7e581b5116ec9f50234c4d5cf9/comments", "author": null, "committer": null, "parents": [{"sha": "9663100ef18187016b5d783dba36b69b7fc3aa42", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9663100ef18187016b5d783dba36b69b7fc3aa42", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9663100ef18187016b5d783dba36b69b7fc3aa42"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "98c6dd415a43dee77be78f1e6aabee50289f0aff", "filename": "gcc/reload.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/abd268e28d3cfd7e581b5116ec9f50234c4d5cf9/gcc%2Freload.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/abd268e28d3cfd7e581b5116ec9f50234c4d5cf9/gcc%2Freload.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freload.h?ref=abd268e28d3cfd7e581b5116ec9f50234c4d5cf9", "patch": "@@ -220,7 +220,7 @@ extern void mark_home_live PROTO((int));\n \n /* Scan X and replace any eliminable registers (such as fp) with a\n    replacement (such as sp), plus an offset.  */\n-extern rtx eliminate_regs PROTO((rtx, enum machine_mode, rtx));\n+extern rtx eliminate_regs PROTO((rtx, enum machine_mode, rtx, int));\n \n /* Emit code to perform a reload from IN (which may be a reload register) to\n    OUT (which may also be a reload register).  IN or OUT is from operand"}]}