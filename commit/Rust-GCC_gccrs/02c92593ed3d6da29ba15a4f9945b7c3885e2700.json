{"sha": "02c92593ed3d6da29ba15a4f9945b7c3885e2700", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDJjOTI1OTNlZDNkNmRhMjliYTE1YTRmOTk0NWI3YzM4ODVlMjcwMA==", "commit": {"author": {"name": "Steven G. Kargl", "email": "kargls@comcast.net", "date": "2005-11-12T19:16:40Z"}, "committer": {"name": "Steven G. Kargl", "email": "kargl@gcc.gnu.org", "date": "2005-11-12T19:16:40Z"}, "message": "re PR libfortran/24787 ([libfortran] SCAN is broken)\n\nPR libfortran/24787\n* intrinsics/string_intrinsics.c (string_scan): Off by one; Fix\n  typos in nearby comment.\n\n* gfortran.dg/scan_1.f90: New test.\n\nFrom-SVN: r106828", "tree": {"sha": "8239450c8992785e8453dad9df487fe0211c246b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8239450c8992785e8453dad9df487fe0211c246b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/02c92593ed3d6da29ba15a4f9945b7c3885e2700", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/02c92593ed3d6da29ba15a4f9945b7c3885e2700", "html_url": "https://github.com/Rust-GCC/gccrs/commit/02c92593ed3d6da29ba15a4f9945b7c3885e2700", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/02c92593ed3d6da29ba15a4f9945b7c3885e2700/comments", "author": null, "committer": null, "parents": [{"sha": "230dedb3272fa440ac35dcfb607c56221b1f18fa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/230dedb3272fa440ac35dcfb607c56221b1f18fa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/230dedb3272fa440ac35dcfb607c56221b1f18fa"}], "stats": {"total": 87, "additions": 62, "deletions": 25}, "files": [{"sha": "9545e764afba70209e2dc62baf27b5ce69f31353", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/02c92593ed3d6da29ba15a4f9945b7c3885e2700/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/02c92593ed3d6da29ba15a4f9945b7c3885e2700/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=02c92593ed3d6da29ba15a4f9945b7c3885e2700", "patch": "@@ -1,3 +1,8 @@\n+2005-11-12  Steven G. Kargl  <kargls@comcast.net>\n+\n+\tPR libgfortran/24787\n+\t* gfortran.dg/scan_1.f90: New test.\n+\n 2005-11-12  Jan Hubicka  <jh@suse.cz>\n \n \t* gcc.target/i386/minmax-1.c: New."}, {"sha": "ceaa9eb6262994d5d30fa1abf89131cfa7f41ed4", "filename": "gcc/testsuite/gfortran.dg/scan_1.f90", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/02c92593ed3d6da29ba15a4f9945b7c3885e2700/gcc%2Ftestsuite%2Fgfortran.dg%2Fscan_1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/02c92593ed3d6da29ba15a4f9945b7c3885e2700/gcc%2Ftestsuite%2Fgfortran.dg%2Fscan_1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fscan_1.f90?ref=02c92593ed3d6da29ba15a4f9945b7c3885e2700", "patch": "@@ -0,0 +1,31 @@\n+program b\n+   integer w\n+   character(len=2) s, t\n+   s = 'xi'\n+\n+   w = scan(s, 'iI')\n+   if (w /= 2) call abort\n+   w = scan(s, 'xX', .true.)\n+   if (w /= 1) call abort\n+   w = scan(s, 'ab')\n+   if (w /= 0) call abort\n+   w = scan(s, 'ab', .true.)\n+   if (w /= 0) call abort\n+\n+   s = 'xi'\n+   t = 'iI'\n+   w = scan(s, t)\n+   if (w /= 2) call abort\n+   t = 'xX'\n+   w = scan(s, t, .true.)\n+   if (w /= 1) call abort\n+   t = 'ab'\n+   w = scan(s, t)\n+   if (w /= 0) call abort\n+   w = scan(s, t, .true.)\n+   if (w /= 0) call abort\n+\n+end program b\n+   \n+\n+   "}, {"sha": "793d440d2696a48da635fc2e221a6b5e4ebb1ac7", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/02c92593ed3d6da29ba15a4f9945b7c3885e2700/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/02c92593ed3d6da29ba15a4f9945b7c3885e2700/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=02c92593ed3d6da29ba15a4f9945b7c3885e2700", "patch": "@@ -1,3 +1,9 @@\n+2005-11-12  Steven G. Kargl  <kargls@comcast.net>\n+\n+\tPR libgfortran/24787\n+\t*  intrinsics/string_intrinsics.c (string_scan): Off by one; Fix typos\n+\tin nearby comment.\n+\n 2005-11-10  Andreas Jaeger  <aj@suse.de>\n \n \t* libgfortran.h: Add proper defines where needed."}, {"sha": "eed41d71c8a088f3cca0432f9822dfeca596f80e", "filename": "libgfortran/intrinsics/string_intrinsics.c", "status": "modified", "additions": 20, "deletions": 25, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/02c92593ed3d6da29ba15a4f9945b7c3885e2700/libgfortran%2Fintrinsics%2Fstring_intrinsics.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/02c92593ed3d6da29ba15a4f9945b7c3885e2700/libgfortran%2Fintrinsics%2Fstring_intrinsics.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fintrinsics%2Fstring_intrinsics.c?ref=02c92593ed3d6da29ba15a4f9945b7c3885e2700", "patch": "@@ -1,5 +1,5 @@\n /* String intrinsics helper functions.\n-   Copyright 2002 Free Software Foundation, Inc.\n+   Copyright 2002, 2005 Free Software Foundation, Inc.\n    Contributed by Paul Brook <paul@nowt.org>\n \n This file is part of the GNU Fortran 95 runtime library (libgfortran).\n@@ -89,12 +89,10 @@ copy_string (GFC_INTEGER_4 destlen, char * dest,\n     {\n       /* This will truncate if too long.  */\n       memmove (dest, src, destlen);\n-      /*memcpy (dest, src, destlen);*/\n     }\n   else\n     {\n       memmove (dest, src, srclen);\n-      /*memcpy (dest, src, srclen);*/\n       /* Pad with spaces.  */\n       memset (&dest[srclen], ' ', destlen - srclen);\n     }\n@@ -304,44 +302,41 @@ GFC_INTEGER_4\n string_scan (GFC_INTEGER_4 slen, const char * str, GFC_INTEGER_4 setlen,\n              const char * set, GFC_LOGICAL_4 back)\n {\n-  int start;\n-  int last;\n-  int i;\n-  int delta;\n+  int i, j;\n \n   if (slen == 0 || setlen == 0)\n     return 0;\n \n   if (back)\n     {\n-      last =  0;\n-      start = slen - 1;\n-      delta = -1;\n+      for (i = slen - 1; i >= 0; i--)\n+\t{\n+\t  for (j = 0; j < setlen; j++)\n+\t    {\n+\t      if (str[i] == set[j])\n+\t\treturn (i + 1);\n+\t    }\n+\t}\n     }\n   else\n     {\n-      last = slen - 1;\n-      start = 0;\n-      delta = 1;\n-    }\n-\n-  i = 0;\n-  for (; start != last; start += delta)\n-    {\n-      for (i = 0; i < setlen; i++)\n-        {\n-          if (str[start] == set[i])\n-            return (start + 1);\n-        }\n+      for (i = 0; i < slen; i++)\n+\t{\n+\t  for (j = 0; j < setlen; j++)\n+\t    {\n+\t      if (str[i] == set[j])\n+\t\treturn (i + 1);\n+\t    }\n+\t}\n     }\n \n   return 0;\n }\n \n \n /* Verify that a set of characters contains all the characters in a\n-   string by indentifying the position of the first character in a\n-   characters that dose not appear in a given set of characters.  */\n+   string by identifying the position of the first character in a\n+   characters that does not appear in a given set of characters.  */\n \n GFC_INTEGER_4\n string_verify (GFC_INTEGER_4 slen, const char * str, GFC_INTEGER_4 setlen,"}]}