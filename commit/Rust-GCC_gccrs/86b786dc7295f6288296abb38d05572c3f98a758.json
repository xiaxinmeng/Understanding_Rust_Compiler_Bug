{"sha": "86b786dc7295f6288296abb38d05572c3f98a758", "node_id": "C_kwDOANBUbNoAKDg2Yjc4NmRjNzI5NWY2Mjg4Mjk2YWJiMzhkMDU1NzJjM2Y5OGE3NTg", "commit": {"author": {"name": "Piotr Trojanek", "email": "trojanek@adacore.com", "date": "2022-09-26T10:51:41Z"}, "committer": {"name": "Marc Poulhi\u00e8s", "email": "poulhies@adacore.com", "date": "2022-10-06T09:22:47Z"}, "message": "ada: Fix spurious warning on unreferenced refinement constituents\n\nListing an object as a state refinement constituent shouldn't be\nconsidered to be a reference, at least from the point of view of the\nmachinery for detecting objects that are never referenced or written\nwithout being referenced.\n\nThis patch fixes a spurious warning that rarely occurred in practice but\nwas annoyingly emitted for minimal reproducers for issues related to\nstate abstractions.\n\nNote: there are other pragmas that should be similarly recognized (e.g.\nDepends, Global and their refined variants), but recognizing them\nefficiently probably requires a dedicated utility routine (i.e. to avoid\ntraversal of the parent chain for every kind of pragma).\n\ngcc/ada/\n\n\t* sem_prag.adb\n\t(Sig_Pragma): Change flag for pragma Refined_State to mean \"not\n\tsignificant\"; this is primarily for documentation, because the\n\texact value of the flag is not really taken into account for\n\tRefined_State.\n\t(Is_Non_Significant_Pragma_Reference): Add special handling for\n\tpragma Refined_State.", "tree": {"sha": "ac105994611f5e12d49c7e168edc1381f64cd28f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ac105994611f5e12d49c7e168edc1381f64cd28f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/86b786dc7295f6288296abb38d05572c3f98a758", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/86b786dc7295f6288296abb38d05572c3f98a758", "html_url": "https://github.com/Rust-GCC/gccrs/commit/86b786dc7295f6288296abb38d05572c3f98a758", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/86b786dc7295f6288296abb38d05572c3f98a758/comments", "author": {"login": "ptroja", "id": 161602, "node_id": "MDQ6VXNlcjE2MTYwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/161602?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ptroja", "html_url": "https://github.com/ptroja", "followers_url": "https://api.github.com/users/ptroja/followers", "following_url": "https://api.github.com/users/ptroja/following{/other_user}", "gists_url": "https://api.github.com/users/ptroja/gists{/gist_id}", "starred_url": "https://api.github.com/users/ptroja/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ptroja/subscriptions", "organizations_url": "https://api.github.com/users/ptroja/orgs", "repos_url": "https://api.github.com/users/ptroja/repos", "events_url": "https://api.github.com/users/ptroja/events{/privacy}", "received_events_url": "https://api.github.com/users/ptroja/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dkm", "id": 87603, "node_id": "MDQ6VXNlcjg3NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/87603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dkm", "html_url": "https://github.com/dkm", "followers_url": "https://api.github.com/users/dkm/followers", "following_url": "https://api.github.com/users/dkm/following{/other_user}", "gists_url": "https://api.github.com/users/dkm/gists{/gist_id}", "starred_url": "https://api.github.com/users/dkm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dkm/subscriptions", "organizations_url": "https://api.github.com/users/dkm/orgs", "repos_url": "https://api.github.com/users/dkm/repos", "events_url": "https://api.github.com/users/dkm/events{/privacy}", "received_events_url": "https://api.github.com/users/dkm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ed7278d98e4727a7def30ab91fcef4658e34baa4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ed7278d98e4727a7def30ab91fcef4658e34baa4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ed7278d98e4727a7def30ab91fcef4658e34baa4"}], "stats": {"total": 11, "additions": 10, "deletions": 1}, "files": [{"sha": "0c3dd81526376ab1079c5f4a83679f1c6b5e0718", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/86b786dc7295f6288296abb38d05572c3f98a758/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/86b786dc7295f6288296abb38d05572c3f98a758/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=86b786dc7295f6288296abb38d05572c3f98a758", "patch": "@@ -31608,7 +31608,7 @@ package body Sem_Prag is\n       Pragma_Refined_Depends                => -1,\n       Pragma_Refined_Global                 => -1,\n       Pragma_Refined_Post                   => -1,\n-      Pragma_Refined_State                  => -1,\n+      Pragma_Refined_State                  =>  0,\n       Pragma_Relative_Deadline              =>  0,\n       Pragma_Remote_Access_Type             => -1,\n       Pragma_Remote_Call_Interface          => -1,\n@@ -31713,6 +31713,15 @@ package body Sem_Prag is\n       P := Parent (N);\n \n       if Nkind (P) /= N_Pragma_Argument_Association then\n+\n+         --  References within pragma Refined_State are not significant. They\n+         --  can't be recognized using pragma argument number, because they\n+         --  appear inside refinement clauses that rely on aggregate syntax.\n+\n+         if In_Pragma_Expression (N, Name_Refined_State) then\n+            return True;\n+         end if;\n+\n          return False;\n \n       else"}]}