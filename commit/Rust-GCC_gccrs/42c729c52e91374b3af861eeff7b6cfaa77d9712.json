{"sha": "42c729c52e91374b3af861eeff7b6cfaa77d9712", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDJjNzI5YzUyZTkxMzc0YjNhZjg2MWVlZmY3YjZjZmFhNzdkOTcxMg==", "commit": {"author": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2016-03-15T21:10:11Z"}, "committer": {"name": "Marek Polacek", "email": "mpolacek@gcc.gnu.org", "date": "2016-03-15T21:10:11Z"}, "message": "re PR c++/70209 (ICE in strip_typedefs, at cp/tree.c:1377)\n\n\tPR c++/70209\n\t* tree.c (strip_typedefs): Call strip_typedefs again on the\n\tDECL_ORIGINAL_TYPE result.\n\n\t* g++.dg/ext/attribute-may-alias-4.C: New test.\n\nFrom-SVN: r234234", "tree": {"sha": "d4e064b7be595d7220f92d6a75b5b31084b35e93", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d4e064b7be595d7220f92d6a75b5b31084b35e93"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/42c729c52e91374b3af861eeff7b6cfaa77d9712", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/42c729c52e91374b3af861eeff7b6cfaa77d9712", "html_url": "https://github.com/Rust-GCC/gccrs/commit/42c729c52e91374b3af861eeff7b6cfaa77d9712", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/42c729c52e91374b3af861eeff7b6cfaa77d9712/comments", "author": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d1ccf407dad8237e32c2d5a2d121dbd9c53483c7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d1ccf407dad8237e32c2d5a2d121dbd9c53483c7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d1ccf407dad8237e32c2d5a2d121dbd9c53483c7"}], "stats": {"total": 37, "additions": 34, "deletions": 3}, "files": [{"sha": "4499284e65cb196c68ed978edb0774307d272d84", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/42c729c52e91374b3af861eeff7b6cfaa77d9712/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/42c729c52e91374b3af861eeff7b6cfaa77d9712/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=42c729c52e91374b3af861eeff7b6cfaa77d9712", "patch": "@@ -1,3 +1,9 @@\n+2016-03-15  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c++/70209\n+\t* tree.c (strip_typedefs): Call strip_typedefs again on the\n+\tDECL_ORIGINAL_TYPE result.\n+\n 2016-03-15  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/70095"}, {"sha": "f7849522781c4134087b904adef9acdaab43d63d", "filename": "gcc/cp/tree.c", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/42c729c52e91374b3af861eeff7b6cfaa77d9712/gcc%2Fcp%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/42c729c52e91374b3af861eeff7b6cfaa77d9712/gcc%2Fcp%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftree.c?ref=42c729c52e91374b3af861eeff7b6cfaa77d9712", "patch": "@@ -1460,9 +1460,12 @@ strip_typedefs (tree t, bool *remove_attributes)\n   if (!result)\n     {\n       if (typedef_variant_p (t))\n-\t/* Explicitly get the underlying type, as TYPE_MAIN_VARIANT doesn't\n-\t   strip typedefs with attributes.  */\n-\tresult = TYPE_MAIN_VARIANT (DECL_ORIGINAL_TYPE (TYPE_NAME (t)));\n+\t{\n+\t  /* Explicitly get the underlying type, as TYPE_MAIN_VARIANT doesn't\n+\t     strip typedefs with attributes.  */\n+\t  result = TYPE_MAIN_VARIANT (DECL_ORIGINAL_TYPE (TYPE_NAME (t)));\n+\t  result = strip_typedefs (result);\n+\t}\n       else\n \tresult = TYPE_MAIN_VARIANT (t);\n     }"}, {"sha": "3eb5710fd86ad4523f32a3bd6d813d02fe47f553", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/42c729c52e91374b3af861eeff7b6cfaa77d9712/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/42c729c52e91374b3af861eeff7b6cfaa77d9712/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=42c729c52e91374b3af861eeff7b6cfaa77d9712", "patch": "@@ -1,3 +1,8 @@\n+2016-03-15  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c++/70209\n+\t* g++.dg/ext/attribute-may-alias-4.C: New test.\n+\n 2016-03-15  Alexander Monakov  <amonakov@ispras.ru>\n \n \t* g++.dg/pr63384.C: Add -w to dg-options.  Remove '-toggle' in"}, {"sha": "a459d49e9ee660d1073d2dc5d083a1707d5b2c04", "filename": "gcc/testsuite/g++.dg/ext/attribute-may-alias-4.C", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/42c729c52e91374b3af861eeff7b6cfaa77d9712/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fattribute-may-alias-4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/42c729c52e91374b3af861eeff7b6cfaa77d9712/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fattribute-may-alias-4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fattribute-may-alias-4.C?ref=42c729c52e91374b3af861eeff7b6cfaa77d9712", "patch": "@@ -0,0 +1,17 @@\n+// PR c++/70209\n+\n+struct V {\n+  typedef float F;\n+  template <typename S> void m_fn1(S);\n+};\n+\n+template <typename> struct A {\n+  typedef V::F Ta __attribute__((__may_alias__));\n+  Ta *m_data;\n+  void m_fn2(V &);\n+};\n+\n+template <>\n+void A<int>::m_fn2(V &p) {\n+  p.m_fn1(m_data);\n+}"}]}