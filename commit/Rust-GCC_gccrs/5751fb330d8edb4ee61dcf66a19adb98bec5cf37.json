{"sha": "5751fb330d8edb4ee61dcf66a19adb98bec5cf37", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTc1MWZiMzMwZDhlZGI0ZWU2MWRjZjY2YTE5YWRiOThiZWM1Y2YzNw==", "commit": {"author": {"name": "Nick Clifton", "email": "nickc@redhat.com", "date": "2015-04-14T16:12:34Z"}, "committer": {"name": "Nick Clifton", "email": "nickc@gcc.gnu.org", "date": "2015-04-14T16:12:34Z"}, "message": "expr.c (expand_assignment): Force an address offset computation into a register before changing its mode.\n\n\t* expr.c (expand_assignment): Force an address offset computation\n\tinto a register before changing its mode.\n\t(expand_expr_real_1): Likewise.\n\nFrom-SVN: r222098", "tree": {"sha": "53436624eab879ce27cfe6fc7c6f19abf6c43bb0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/53436624eab879ce27cfe6fc7c6f19abf6c43bb0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5751fb330d8edb4ee61dcf66a19adb98bec5cf37", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5751fb330d8edb4ee61dcf66a19adb98bec5cf37", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5751fb330d8edb4ee61dcf66a19adb98bec5cf37", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5751fb330d8edb4ee61dcf66a19adb98bec5cf37/comments", "author": {"login": "nickclifton", "id": 31441682, "node_id": "MDQ6VXNlcjMxNDQxNjgy", "avatar_url": "https://avatars.githubusercontent.com/u/31441682?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nickclifton", "html_url": "https://github.com/nickclifton", "followers_url": "https://api.github.com/users/nickclifton/followers", "following_url": "https://api.github.com/users/nickclifton/following{/other_user}", "gists_url": "https://api.github.com/users/nickclifton/gists{/gist_id}", "starred_url": "https://api.github.com/users/nickclifton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nickclifton/subscriptions", "organizations_url": "https://api.github.com/users/nickclifton/orgs", "repos_url": "https://api.github.com/users/nickclifton/repos", "events_url": "https://api.github.com/users/nickclifton/events{/privacy}", "received_events_url": "https://api.github.com/users/nickclifton/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "fb899e32c16088cad1a19a3e8df615ecfd1332db", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fb899e32c16088cad1a19a3e8df615ecfd1332db", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fb899e32c16088cad1a19a3e8df615ecfd1332db"}], "stats": {"total": 22, "additions": 20, "deletions": 2}, "files": [{"sha": "cf7f686de7f9ace0d16d2385df2cd81ae1510f62", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5751fb330d8edb4ee61dcf66a19adb98bec5cf37/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5751fb330d8edb4ee61dcf66a19adb98bec5cf37/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5751fb330d8edb4ee61dcf66a19adb98bec5cf37", "patch": "@@ -1,3 +1,9 @@\n+2015-04-14  Nick Clifton  <nickc@redhat.com>\n+\n+\t* expr.c (expand_assignment): Force an address offset computation\n+\tinto a register before changing its mode.\n+\t(expand_expr_real_1): Likewise.\n+\n 2015-04-14  Alan Lawrence  <alan.lawrence@arm.com>\n \n \t* config/aarch64/arm_neon.h (vst1_lane_f32, vst1_lane_f64,"}, {"sha": "530a944da46152d07da226389ff78086937efcfa", "filename": "gcc/expr.c", "status": "modified", "additions": 14, "deletions": 2, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5751fb330d8edb4ee61dcf66a19adb98bec5cf37/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5751fb330d8edb4ee61dcf66a19adb98bec5cf37/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=5751fb330d8edb4ee61dcf66a19adb98bec5cf37", "patch": "@@ -4879,7 +4879,13 @@ expand_assignment (tree to, tree from, bool nontemporal)\n \t  offset_rtx = expand_expr (offset, NULL_RTX, VOIDmode, EXPAND_SUM);\n \t  address_mode = get_address_mode (to_rtx);\n \t  if (GET_MODE (offset_rtx) != address_mode)\n-\t    offset_rtx = convert_to_mode (address_mode, offset_rtx, 0);\n+\t    {\n+\t\t/* We cannot be sure that the RTL in offset_rtx is valid outside\n+\t\t   of a memory address context, so force it into a register\n+\t\t   before attempting to convert it to the desired mode.  */\n+\t      offset_rtx = force_operand (offset_rtx, NULL_RTX);\n+\t      offset_rtx = convert_to_mode (address_mode, offset_rtx, 0);\n+\t    }\n \n \t  /* If we have an expression in OFFSET_RTX and a non-zero\n \t     byte offset in BITPOS, adding the byte offset before the\n@@ -10258,7 +10264,13 @@ expand_expr_real_1 (tree exp, rtx target, machine_mode tmode,\n \n \t    address_mode = get_address_mode (op0);\n \t    if (GET_MODE (offset_rtx) != address_mode)\n-\t      offset_rtx = convert_to_mode (address_mode, offset_rtx, 0);\n+\t      {\n+\t\t/* We cannot be sure that the RTL in offset_rtx is valid outside\n+\t\t   of a memory address context, so force it into a register\n+\t\t   before attempting to convert it to the desired mode.  */\n+\t\toffset_rtx = force_operand (offset_rtx, NULL_RTX);\n+\t\toffset_rtx = convert_to_mode (address_mode, offset_rtx, 0);\n+\t      }\n \n \t    /* See the comment in expand_assignment for the rationale.  */\n \t    if (mode1 != VOIDmode"}]}