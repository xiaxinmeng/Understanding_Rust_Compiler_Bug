{"sha": "fd5d57946036c967dae292330fa0aa856a58fb4b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmQ1ZDU3OTQ2MDM2Yzk2N2RhZTI5MjMzMGZhMGFhODU2YTU4ZmI0Yg==", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2021-04-29T14:43:33Z"}, "committer": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2021-04-29T14:46:08Z"}, "message": "i386: Mark x86 masked load builtins pure [PR100312]\n\nMark x86 AVX and AVX2 masked load builtins pure to enable dead code\nelimination and more appropriate alias analysis.\n\n2021-04-29  Uro\u0161 Bizjak  <ubizjak@gmail.com>\n\t    Richard Biener  <rguenther@suse.de>\ngcc/\n\tPR target/100312\n\t* config/i386/i386-builtin.def (IX86_BUILTIN_MASKLOADPD)\n\t(IX86_BUILTIN_MASKLOADPS, IX86_BUILTIN_MASKLOADPD256)\n\t(IX86_BUILTIN_MASKLOADPS256, IX86_BUILTIN_MASKLOADD)\n\t(IX86_BUILTIN_MASKLOADQ, IX86_BUILTIN_MASKLOADD256)\n\t(IX86_BUILTIN_MASKLOADQ256): Move from SPECIAL_ARGS\n\tto PURE_ARGS category.\n\t* config/i386/i386-builtins.c (ix86_init_mmx_sse_builtins):\n\tHandle PURE_ARGS category.\n\t* config/i386/i386-expand.c (ix86_expand_builtin): Ditto.", "tree": {"sha": "421efafeb6a7fd64dcfc0987c50d8d11728f5c5b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/421efafeb6a7fd64dcfc0987c50d8d11728f5c5b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fd5d57946036c967dae292330fa0aa856a58fb4b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fd5d57946036c967dae292330fa0aa856a58fb4b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fd5d57946036c967dae292330fa0aa856a58fb4b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fd5d57946036c967dae292330fa0aa856a58fb4b/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9ec469f504f4bc4c3cdfa4a3f9e164c26e4881af", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9ec469f504f4bc4c3cdfa4a3f9e164c26e4881af", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9ec469f504f4bc4c3cdfa4a3f9e164c26e4881af"}], "stats": {"total": 55, "additions": 44, "deletions": 11}, "files": [{"sha": "80c2a2c02948199a8037da55ff289e7d98adfca8", "filename": "gcc/config/i386/i386-builtin.def", "status": "modified", "additions": 16, "deletions": 9, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fd5d57946036c967dae292330fa0aa856a58fb4b/gcc%2Fconfig%2Fi386%2Fi386-builtin.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fd5d57946036c967dae292330fa0aa856a58fb4b/gcc%2Fconfig%2Fi386%2Fi386-builtin.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386-builtin.def?ref=fd5d57946036c967dae292330fa0aa856a58fb4b", "patch": "@@ -187,21 +187,13 @@ BDESC (OPTION_MASK_ISA_AVX, 0, CODE_FOR_avx_movntv4di, \"__builtin_ia32_movntdq25\n BDESC (OPTION_MASK_ISA_AVX, 0, CODE_FOR_avx_movntv4df, \"__builtin_ia32_movntpd256\", IX86_BUILTIN_MOVNTPD256, UNKNOWN, (int) VOID_FTYPE_PDOUBLE_V4DF)\n BDESC (OPTION_MASK_ISA_AVX, 0, CODE_FOR_avx_movntv8sf, \"__builtin_ia32_movntps256\", IX86_BUILTIN_MOVNTPS256, UNKNOWN, (int) VOID_FTYPE_PFLOAT_V8SF)\n \n-BDESC (OPTION_MASK_ISA_AVX, 0, CODE_FOR_avx_maskloadpd, \"__builtin_ia32_maskloadpd\", IX86_BUILTIN_MASKLOADPD, UNKNOWN, (int) V2DF_FTYPE_PCV2DF_V2DI)\n-BDESC (OPTION_MASK_ISA_AVX, 0, CODE_FOR_avx_maskloadps, \"__builtin_ia32_maskloadps\", IX86_BUILTIN_MASKLOADPS, UNKNOWN, (int) V4SF_FTYPE_PCV4SF_V4SI)\n-BDESC (OPTION_MASK_ISA_AVX, 0, CODE_FOR_avx_maskloadpd256, \"__builtin_ia32_maskloadpd256\", IX86_BUILTIN_MASKLOADPD256, UNKNOWN, (int) V4DF_FTYPE_PCV4DF_V4DI)\n-BDESC (OPTION_MASK_ISA_AVX, 0, CODE_FOR_avx_maskloadps256, \"__builtin_ia32_maskloadps256\", IX86_BUILTIN_MASKLOADPS256, UNKNOWN, (int) V8SF_FTYPE_PCV8SF_V8SI)\n BDESC (OPTION_MASK_ISA_AVX, 0, CODE_FOR_avx_maskstorepd, \"__builtin_ia32_maskstorepd\", IX86_BUILTIN_MASKSTOREPD, UNKNOWN, (int) VOID_FTYPE_PV2DF_V2DI_V2DF)\n BDESC (OPTION_MASK_ISA_AVX, 0, CODE_FOR_avx_maskstoreps, \"__builtin_ia32_maskstoreps\", IX86_BUILTIN_MASKSTOREPS, UNKNOWN, (int) VOID_FTYPE_PV4SF_V4SI_V4SF)\n BDESC (OPTION_MASK_ISA_AVX, 0, CODE_FOR_avx_maskstorepd256, \"__builtin_ia32_maskstorepd256\", IX86_BUILTIN_MASKSTOREPD256, UNKNOWN, (int) VOID_FTYPE_PV4DF_V4DI_V4DF)\n BDESC (OPTION_MASK_ISA_AVX, 0, CODE_FOR_avx_maskstoreps256, \"__builtin_ia32_maskstoreps256\", IX86_BUILTIN_MASKSTOREPS256, UNKNOWN, (int) VOID_FTYPE_PV8SF_V8SI_V8SF)\n \n /* AVX2 */\n BDESC (OPTION_MASK_ISA_AVX2, 0, CODE_FOR_avx2_movntdqa, \"__builtin_ia32_movntdqa256\", IX86_BUILTIN_MOVNTDQA256, UNKNOWN, (int) V4DI_FTYPE_PV4DI)\n-BDESC (OPTION_MASK_ISA_AVX2, 0, CODE_FOR_avx2_maskloadd, \"__builtin_ia32_maskloadd\", IX86_BUILTIN_MASKLOADD, UNKNOWN, (int) V4SI_FTYPE_PCV4SI_V4SI)\n-BDESC (OPTION_MASK_ISA_AVX2, 0, CODE_FOR_avx2_maskloadq, \"__builtin_ia32_maskloadq\", IX86_BUILTIN_MASKLOADQ, UNKNOWN, (int) V2DI_FTYPE_PCV2DI_V2DI)\n-BDESC (OPTION_MASK_ISA_AVX2, 0, CODE_FOR_avx2_maskloadd256, \"__builtin_ia32_maskloadd256\", IX86_BUILTIN_MASKLOADD256, UNKNOWN, (int) V8SI_FTYPE_PCV8SI_V8SI)\n-BDESC (OPTION_MASK_ISA_AVX2, 0, CODE_FOR_avx2_maskloadq256, \"__builtin_ia32_maskloadq256\", IX86_BUILTIN_MASKLOADQ256, UNKNOWN, (int) V4DI_FTYPE_PCV4DI_V4DI)\n BDESC (OPTION_MASK_ISA_AVX2, 0, CODE_FOR_avx2_maskstored, \"__builtin_ia32_maskstored\", IX86_BUILTIN_MASKSTORED, UNKNOWN, (int) VOID_FTYPE_PV4SI_V4SI_V4SI)\n BDESC (OPTION_MASK_ISA_AVX2, 0, CODE_FOR_avx2_maskstoreq, \"__builtin_ia32_maskstoreq\", IX86_BUILTIN_MASKSTOREQ, UNKNOWN, (int) VOID_FTYPE_PV2DI_V2DI_V2DI)\n BDESC (OPTION_MASK_ISA_AVX2, 0, CODE_FOR_avx2_maskstored256, \"__builtin_ia32_maskstored256\", IX86_BUILTIN_MASKSTORED256, UNKNOWN, (int) VOID_FTYPE_PV8SI_V8SI_V8SI)\n@@ -473,7 +465,22 @@ BDESC (0, OPTION_MASK_ISA2_WIDEKL, CODE_FOR_nothing, \"__builtin_ia32_aesdecwide2\n BDESC (0, OPTION_MASK_ISA2_WIDEKL, CODE_FOR_nothing, \"__builtin_ia32_aesencwide128kl_u8\", IX86_BUILTIN_AESENCWIDE128KLU8, UNKNOWN, (int) UINT8_FTYPE_PV2DI_PCV2DI_PCVOID)\n BDESC (0, OPTION_MASK_ISA2_WIDEKL, CODE_FOR_nothing, \"__builtin_ia32_aesencwide256kl_u8\", IX86_BUILTIN_AESENCWIDE256KLU8, UNKNOWN, (int) UINT8_FTYPE_PV2DI_PCV2DI_PCVOID)\n \n-BDESC_END (SPECIAL_ARGS, ARGS)\n+BDESC_END (SPECIAL_ARGS, PURE_ARGS)\n+\n+/* AVX */\n+BDESC_FIRST (pure_args, PURE_ARGS,\n+       OPTION_MASK_ISA_AVX, 0, CODE_FOR_avx_maskloadpd, \"__builtin_ia32_maskloadpd\", IX86_BUILTIN_MASKLOADPD, UNKNOWN, (int) V2DF_FTYPE_PCV2DF_V2DI)\n+BDESC (OPTION_MASK_ISA_AVX, 0, CODE_FOR_avx_maskloadps, \"__builtin_ia32_maskloadps\", IX86_BUILTIN_MASKLOADPS, UNKNOWN, (int) V4SF_FTYPE_PCV4SF_V4SI)\n+BDESC (OPTION_MASK_ISA_AVX, 0, CODE_FOR_avx_maskloadpd256, \"__builtin_ia32_maskloadpd256\", IX86_BUILTIN_MASKLOADPD256, UNKNOWN, (int) V4DF_FTYPE_PCV4DF_V4DI)\n+BDESC (OPTION_MASK_ISA_AVX, 0, CODE_FOR_avx_maskloadps256, \"__builtin_ia32_maskloadps256\", IX86_BUILTIN_MASKLOADPS256, UNKNOWN, (int) V8SF_FTYPE_PCV8SF_V8SI)\n+\n+/* AVX2 */\n+BDESC (OPTION_MASK_ISA_AVX2, 0, CODE_FOR_avx2_maskloadd, \"__builtin_ia32_maskloadd\", IX86_BUILTIN_MASKLOADD, UNKNOWN, (int) V4SI_FTYPE_PCV4SI_V4SI)\n+BDESC (OPTION_MASK_ISA_AVX2, 0, CODE_FOR_avx2_maskloadq, \"__builtin_ia32_maskloadq\", IX86_BUILTIN_MASKLOADQ, UNKNOWN, (int) V2DI_FTYPE_PCV2DI_V2DI)\n+BDESC (OPTION_MASK_ISA_AVX2, 0, CODE_FOR_avx2_maskloadd256, \"__builtin_ia32_maskloadd256\", IX86_BUILTIN_MASKLOADD256, UNKNOWN, (int) V8SI_FTYPE_PCV8SI_V8SI)\n+BDESC (OPTION_MASK_ISA_AVX2, 0, CODE_FOR_avx2_maskloadq256, \"__builtin_ia32_maskloadq256\", IX86_BUILTIN_MASKLOADQ256, UNKNOWN, (int) V4DI_FTYPE_PCV4DI_V4DI)\n+\n+BDESC_END (PURE_ARGS, ARGS)\n \n /* Builtins with variable number of arguments.  */\n BDESC_FIRST (args, ARGS,"}, {"sha": "b66911082abe0e8184aa6e758dd73a4ea5457037", "filename": "gcc/config/i386/i386-builtins.c", "status": "modified", "additions": 20, "deletions": 2, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fd5d57946036c967dae292330fa0aa856a58fb4b/gcc%2Fconfig%2Fi386%2Fi386-builtins.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fd5d57946036c967dae292330fa0aa856a58fb4b/gcc%2Fconfig%2Fi386%2Fi386-builtins.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386-builtins.c?ref=fd5d57946036c967dae292330fa0aa856a58fb4b", "patch": "@@ -108,8 +108,10 @@ BDESC_VERIFYS (IX86_BUILTIN__BDESC_PCMPISTR_FIRST,\n \t       IX86_BUILTIN__BDESC_PCMPESTR_LAST, 1);\n BDESC_VERIFYS (IX86_BUILTIN__BDESC_SPECIAL_ARGS_FIRST,\n \t       IX86_BUILTIN__BDESC_PCMPISTR_LAST, 1);\n-BDESC_VERIFYS (IX86_BUILTIN__BDESC_ARGS_FIRST,\n+BDESC_VERIFYS (IX86_BUILTIN__BDESC_PURE_ARGS_FIRST,\n \t       IX86_BUILTIN__BDESC_SPECIAL_ARGS_LAST, 1);\n+BDESC_VERIFYS (IX86_BUILTIN__BDESC_ARGS_FIRST,\n+\t       IX86_BUILTIN__BDESC_PURE_ARGS_LAST, 1);\n BDESC_VERIFYS (IX86_BUILTIN__BDESC_ROUND_ARGS_FIRST,\n \t       IX86_BUILTIN__BDESC_ARGS_LAST, 1);\n BDESC_VERIFYS (IX86_BUILTIN__BDESC_MULTI_ARG_FIRST,\n@@ -527,7 +529,23 @@ ix86_init_mmx_sse_builtins (void)\n \t\t IX86_BUILTIN__BDESC_SPECIAL_ARGS_FIRST,\n \t\t ARRAY_SIZE (bdesc_special_args) - 1);\n \n-  /* Add all builtins with variable number of operands.  */\n+  /* Add all pure builtins with variable number of operands.  */\n+  for (i = 0, d = bdesc_pure_args;\n+       i < ARRAY_SIZE (bdesc_pure_args);\n+       i++, d++)\n+    {\n+      BDESC_VERIFY (d->code, IX86_BUILTIN__BDESC_PURE_ARGS_FIRST, i);\n+      if (d->name == 0)\n+\tcontinue;\n+\n+      ftype = (enum ix86_builtin_func_type) d->flag;\n+      def_builtin_pure (d->mask, d->mask2, d->name, ftype, d->code);\n+    }\n+  BDESC_VERIFYS (IX86_BUILTIN__BDESC_PURE_ARGS_LAST,\n+\t\t IX86_BUILTIN__BDESC_PURE_ARGS_FIRST,\n+\t\t ARRAY_SIZE (bdesc_pure_args) - 1);\n+\n+  /* Add all const builtins with variable number of operands.  */\n   for (i = 0, d = bdesc_args;\n        i < ARRAY_SIZE (bdesc_args);\n        i++, d++)"}, {"sha": "76990628150d33fea321d6c5fdf1bf38a4fdb8a9", "filename": "gcc/config/i386/i386-expand.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fd5d57946036c967dae292330fa0aa856a58fb4b/gcc%2Fconfig%2Fi386%2Fi386-expand.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fd5d57946036c967dae292330fa0aa856a58fb4b/gcc%2Fconfig%2Fi386%2Fi386-expand.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386-expand.c?ref=fd5d57946036c967dae292330fa0aa856a58fb4b", "patch": "@@ -13240,6 +13240,14 @@ ix86_expand_builtin (tree exp, rtx target, rtx subtarget,\n \t\t\t\t\t       target);\n     }\n \n+  if (fcode >= IX86_BUILTIN__BDESC_PURE_ARGS_FIRST\n+      && fcode <= IX86_BUILTIN__BDESC_PURE_ARGS_LAST)\n+    {\n+      i = fcode - IX86_BUILTIN__BDESC_PURE_ARGS_FIRST;\n+      return ix86_expand_special_args_builtin (bdesc_pure_args + i, exp,\n+\t\t\t\t\t       target);\n+    }\n+\n   if (fcode >= IX86_BUILTIN__BDESC_ARGS_FIRST\n       && fcode <= IX86_BUILTIN__BDESC_ARGS_LAST)\n     {"}]}