{"sha": "7d903840966cbd9360b26507ced43c07a0868976", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2Q5MDM4NDA5NjZjYmQ5MzYwYjI2NTA3Y2VkNDNjMDdhMDg2ODk3Ng==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2008-04-08T07:02:32Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2008-04-08T07:02:32Z"}, "message": "* makeutl.adb (Path_Or_File_Name): New function\n\nFrom-SVN: r134071", "tree": {"sha": "6027c7be9ec83e412bc4c7ca376ecafac718f219", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6027c7be9ec83e412bc4c7ca376ecafac718f219"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7d903840966cbd9360b26507ced43c07a0868976", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7d903840966cbd9360b26507ced43c07a0868976", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7d903840966cbd9360b26507ced43c07a0868976", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7d903840966cbd9360b26507ced43c07a0868976/comments", "author": null, "committer": null, "parents": [{"sha": "fbfc8ef033ca65cf960fbfe045b49fea24a4b81e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fbfc8ef033ca65cf960fbfe045b49fea24a4b81e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fbfc8ef033ca65cf960fbfe045b49fea24a4b81e"}], "stats": {"total": 36, "additions": 32, "deletions": 4}, "files": [{"sha": "63b975c36f683fcdcb823ae75ac02f0a7b552491", "filename": "gcc/ada/makeutl.adb", "status": "modified", "additions": 32, "deletions": 4, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d903840966cbd9360b26507ced43c07a0868976/gcc%2Fada%2Fmakeutl.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d903840966cbd9360b26507ced43c07a0868976/gcc%2Fada%2Fmakeutl.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmakeutl.adb?ref=7d903840966cbd9360b26507ced43c07a0868976", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2004-2007, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2004-2008, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -23,14 +23,18 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n-with Ada.Command_Line;  use Ada.Command_Line;\n+with Debug;\n with Osint;    use Osint;\n with Output;   use Output;\n with Prj.Ext;\n with Prj.Util;\n with Snames;   use Snames;\n with Table;\n \n+with Ada.Command_Line;  use Ada.Command_Line;\n+\n+with GNAT.Directory_Operations; use GNAT.Directory_Operations;\n+\n with System.Case_Util; use System.Case_Util;\n with System.HTable;\n \n@@ -41,7 +45,7 @@ package body Makeutl is\n       Index : Int;\n    end record;\n    --  Identify either a mono-unit source (when Index = 0) or a specific unit\n-   --  in a multi-unit source.\n+   --  (index = 1's origin index of unit) in a multi-unit source.\n \n    --  There follow many global undocumented declarations, comments needed ???\n \n@@ -271,7 +275,17 @@ package body Makeutl is\n \n       if N /= No_Name then\n          Write_Str (\"\"\"\");\n-         Write_Name (N);\n+\n+         declare\n+            Name : constant String := Get_Name_String (N);\n+         begin\n+            if Debug.Debug_Flag_F and then Is_Absolute_Path (Name) then\n+               Write_Str (File_Name (Name));\n+            else\n+               Write_Str (Name);\n+            end if;\n+         end;\n+\n          Write_Str (\"\"\" \");\n       end if;\n \n@@ -545,6 +559,20 @@ package body Makeutl is\n       Marks.Set (K => (File => Source_File, Index => Index), E => True);\n    end Mark;\n \n+   -----------------------\n+   -- Path_Or_File_Name --\n+   -----------------------\n+\n+   function Path_Or_File_Name (Path : Path_Name_Type) return String is\n+      Path_Name : constant String := Get_Name_String (Path);\n+   begin\n+      if Debug.Debug_Flag_F then\n+         return File_Name (Path_Name);\n+      else\n+         return Path_Name;\n+      end if;\n+   end Path_Or_File_Name;\n+\n    ---------------------------\n    -- Test_If_Relative_Path --\n    ---------------------------"}]}