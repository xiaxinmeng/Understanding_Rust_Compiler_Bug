{"sha": "365c6a0bb8fcaf03a90766cc5865a7d6b651bf81", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzY1YzZhMGJiOGZjYWYwM2E5MDc2NmNjNTg2NWE3ZDZiNjUxYmY4MQ==", "commit": {"author": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1994-04-11T17:35:46Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1994-04-11T17:35:46Z"}, "message": "(MASK_EMBEDDED_DATA, TARGET_EMBEDDED_DATA): New macros.\n\n(TARGET_SWITCHED): Add new option -membedded-data.\n(SELECT_RTX_SECTION, SELECT_SECTION): Call function in mips.c.\n\nFrom-SVN: r7030", "tree": {"sha": "e1d855f5af57730c81e96f5c4ea6b277e6a33d3d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e1d855f5af57730c81e96f5c4ea6b277e6a33d3d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/365c6a0bb8fcaf03a90766cc5865a7d6b651bf81", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/365c6a0bb8fcaf03a90766cc5865a7d6b651bf81", "html_url": "https://github.com/Rust-GCC/gccrs/commit/365c6a0bb8fcaf03a90766cc5865a7d6b651bf81", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/365c6a0bb8fcaf03a90766cc5865a7d6b651bf81/comments", "author": null, "committer": null, "parents": [{"sha": "cce7aea77b5d60f2d23d321f51472c2185d69ed6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cce7aea77b5d60f2d23d321f51472c2185d69ed6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cce7aea77b5d60f2d23d321f51472c2185d69ed6"}], "stats": {"total": 55, "additions": 13, "deletions": 42}, "files": [{"sha": "76b28bd27cad82006bdc618ecbdedd4d16706ae1", "filename": "gcc/config/mips/mips.h", "status": "modified", "additions": 13, "deletions": 42, "changes": 55, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/365c6a0bb8fcaf03a90766cc5865a7d6b651bf81/gcc%2Fconfig%2Fmips%2Fmips.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/365c6a0bb8fcaf03a90766cc5865a7d6b651bf81/gcc%2Fconfig%2Fmips%2Fmips.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.h?ref=365c6a0bb8fcaf03a90766cc5865a7d6b651bf81", "patch": "@@ -255,11 +255,11 @@ extern char\t       *mktemp ();\n #define MASK_LONG_CALLS\t0x00001000\t/* Always call through a register */\n #define MASK_64BIT\t0x00002000\t/* Use 64 bit GP registers and insns */\n #define MASK_EMBEDDED_PIC 0x00004000\t/* Generate embedded PIC code */\n-#define MASK_UNUSED1\t0x00008000\n-#define MASK_UNUSED2\t0x00010000\n+#define MASK_EMBEDDED_DATA 0x00008000\t/* Reduce RAM usage, not fast code */\n+#define MASK_UNUSED4\t0x00010000\n #define MASK_UNUSED3\t0x00020000\n-#define MASK_UNUSED4\t0x00040000\n-#define MASK_UNUSED5\t0x00080000\n+#define MASK_UNUSED2\t0x00040000\n+#define MASK_UNUSED1\t0x00080000\n \n \t\t\t\t\t/* Dummy switches used only in spec's*/\n #define MASK_MIPS_TFILE\t0x00000000\t/* flag for mips-tfile usage */\n@@ -331,6 +331,11 @@ extern char\t       *mktemp ();\n \t\t\t\t\t   requires gas.  */\n #define TARGET_EMBEDDED_PIC\t(target_flags & MASK_EMBEDDED_PIC)\n \n+\t\t\t\t\t/* for embedded systems, optimize for\n+\t\t\t\t\t   reduced RAM space instead of for\n+\t\t\t\t\t   fastest code.  */\n+#define TARGET_EMBEDDED_DATA\t(target_flags & MASK_EMBEDDED_DATA)\n+\n /* Macro to define tables used to set the flags.\n    This is a list in braces of pairs in braces,\n    each pair being { \"NAME\", VALUE }\n@@ -370,6 +375,8 @@ extern char\t       *mktemp ();\n   {\"no-long-calls\",\t -MASK_LONG_CALLS},\t\t\t\t\\\n   {\"embedded-pic\",\t  MASK_EMBEDDED_PIC},\t\t\t\t\\\n   {\"no-embedded-pic\",\t -MASK_EMBEDDED_PIC},\t\t\t\t\\\n+  {\"embedded-data\",\t  MASK_EMBEDDED_DATA},\t\t\t\t\\\n+  {\"no-embedded-data\",\t -MASK_EMBEDDED_DATA},\t\t\t\t\\\n   {\"debug\",\t\t  MASK_DEBUG},\t\t\t\t\t\\\n   {\"debuga\",\t\t  MASK_DEBUG_A},\t\t\t\t\\\n   {\"debugb\",\t\t  MASK_DEBUG_B},\t\t\t\t\\\n@@ -3568,45 +3575,9 @@ rdata_section ()\t\t\t\t\t\t\t\\\n /* Given a decl node or constant node, choose the section to output it in\n    and select that section.  */\n \n-#define SELECT_RTX_SECTION(MODE,RTX)\t\t\t\t\t\\\n-{\t\t\t\t\t\t\t\t\t\\\n-  if (GET_MODE_SIZE (MODE) <= mips_section_threshold\t\t\t\\\n-      && mips_section_threshold > 0)\t\t\t\t\t\\\n-    sdata_section ();\t\t\t\t\t\t\t\\\n-  else\t\t\t\t\t\t\t\t\t\\\n-    rdata_section ();\t\t\t\t\t\t\t\\\n-}\t\t\t\t\t\t\t\t\t\\\n+#define SELECT_RTX_SECTION(MODE,RTX)\tmips_select_rtx_section (MODE, RTX)\n \n-#define SELECT_SECTION(DECL, RELOC)\t\t\t\t\t\\\n-{\t\t\t\t\t\t\t\t\t\\\n-  int size = int_size_in_bytes (TREE_TYPE (DECL));\t\t\t\\\n-\t\t\t\t\t\t\t\t\t\\\n-  if (size > 0 && size <= mips_section_threshold)\t\t\t\\\n-    sdata_section ();\t\t\t\t\t\t\t\\\n-\t\t\t\t\t\t\t\t\t\\\n-  else if (RELOC)\t\t\t\t\t\t\t\\\n-    data_section ();\t\t\t\t\t\t\t\\\n-\t\t\t\t\t\t\t\t\t\\\n-  else if (TREE_CODE (DECL) == STRING_CST)\t\t\t\t\\\n-    {\t\t\t\t\t\t\t\t\t\\\n-      if (flag_writable_strings)\t\t\t\t\t\\\n-\tdata_section ();\t\t\t\t\t\t\\\n-      else\t\t\t\t\t\t\t\t\\\n-\trdata_section ();\t\t\t\t\t\t\\\n-    }\t\t\t\t\t\t\t\t\t\\\n-\t\t\t\t\t\t\t\t\t\\\n-  else if (TREE_CODE (DECL) != VAR_DECL)\t\t\t\t\\\n-    rdata_section ();\t\t\t\t\t\t\t\\\n-\t\t\t\t\t\t\t\t\t\\\n-  else if (!TREE_READONLY (DECL) || TREE_SIDE_EFFECTS (DECL)\t\t\\\n-\t   || !DECL_INITIAL (DECL)\t\t\t\t\t\\\n-\t   || (DECL_INITIAL (DECL) != error_mark_node\t\t\t\\\n-\t       && !TREE_CONSTANT (DECL_INITIAL (DECL))))\t\t\\\n-    data_section ();\t\t\t\t\t\t\t\\\n-\t\t\t\t\t\t\t\t\t\\\n-  else\t\t\t\t\t\t\t\t\t\\\n-    rdata_section ();\t\t\t\t\t\t\t\\\n-}\n+#define SELECT_SECTION(DECL, RELOC)\tmips_select_section (DECL, RELOC)\n \n \f\n /* Store in OUTPUT a string (made with alloca) containing"}]}