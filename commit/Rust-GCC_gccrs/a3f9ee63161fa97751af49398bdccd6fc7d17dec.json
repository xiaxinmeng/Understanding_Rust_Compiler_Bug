{"sha": "a3f9ee63161fa97751af49398bdccd6fc7d17dec", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTNmOWVlNjMxNjFmYTk3NzUxYWY0OTM5OGJkY2NkNmZjN2QxN2RlYw==", "commit": {"author": {"name": "Joseph Myers", "email": "joseph@codesourcery.com", "date": "2005-12-05T21:48:17Z"}, "committer": {"name": "Joseph Myers", "email": "jsm28@gcc.gnu.org", "date": "2005-12-05T21:48:17Z"}, "message": "libgcc.texi (__floatunsisf, [...]): Document.\n\n\t* doc/libgcc.texi (__floatunsisf, __floatunsidf, __floatunsitf,\n\t__floatunsixf, __floatundisf, __floatundidf, __floatunditf,\n\t__floatundixf, __floatuntisf, __floatuntidf, __floatuntitf,\n\t__floatuntixf, __powisf2, __powidf2, __powixf2, __mulsc3,\n\t__muldc3, __multc3, __mulxc3, __divsc3, __divdc3, __divtc3,\n\t__divxc3): Document.\n\nFrom-SVN: r108077", "tree": {"sha": "202bd0bdf788c566520f4b2f7300a1fadd38419f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/202bd0bdf788c566520f4b2f7300a1fadd38419f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a3f9ee63161fa97751af49398bdccd6fc7d17dec", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a3f9ee63161fa97751af49398bdccd6fc7d17dec", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a3f9ee63161fa97751af49398bdccd6fc7d17dec", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a3f9ee63161fa97751af49398bdccd6fc7d17dec/comments", "author": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0f9bc2d6bfeb5c89d6f22fa8a1feb5b6e8a2a928", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0f9bc2d6bfeb5c89d6f22fa8a1feb5b6e8a2a928", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0f9bc2d6bfeb5c89d6f22fa8a1feb5b6e8a2a928"}], "stats": {"total": 58, "additions": 57, "deletions": 1}, "files": [{"sha": "f9c5b17373dabb4623066fd77dc94a6c01360065", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a3f9ee63161fa97751af49398bdccd6fc7d17dec/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a3f9ee63161fa97751af49398bdccd6fc7d17dec/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a3f9ee63161fa97751af49398bdccd6fc7d17dec", "patch": "@@ -1,3 +1,12 @@\n+2005-12-05  Joseph S. Myers  <joseph@codesourcery.com>\n+\n+\t* doc/libgcc.texi (__floatunsisf, __floatunsidf, __floatunsitf,\n+\t__floatunsixf, __floatundisf, __floatundidf, __floatunditf,\n+\t__floatundixf, __floatuntisf, __floatuntidf, __floatuntitf,\n+\t__floatuntixf, __powisf2, __powidf2, __powixf2, __mulsc3,\n+\t__muldc3, __multc3, __mulxc3, __divsc3, __divdc3, __divtc3,\n+\t__divxc3): Document.\n+\n 2005-12-05  Geoffrey Keating  <geoffk@apple.com>\n \n \t* config/arm/arm.c (arm_cxx_determine_class_data_visibility): Preserve"}, {"sha": "c97bd8b7497739b3bbf4fcf9a4438e45af4defaa", "filename": "gcc/doc/libgcc.texi", "status": "modified", "additions": 48, "deletions": 1, "changes": 49, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a3f9ee63161fa97751af49398bdccd6fc7d17dec/gcc%2Fdoc%2Flibgcc.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a3f9ee63161fa97751af49398bdccd6fc7d17dec/gcc%2Fdoc%2Flibgcc.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Flibgcc.texi?ref=a3f9ee63161fa97751af49398bdccd6fc7d17dec", "patch": "@@ -1,4 +1,4 @@\n-@c Copyright (C) 2003, 2004 Free Software Foundation, Inc.\n+@c Copyright (C) 2003, 2004, 2005 Free Software Foundation, Inc.\n @c This is part of the GCC manual.\n @c For copying conditions, see the file gcc.texi.\n @c Contributed by Aldy Hernandez <aldy@quesejoda.com>\n@@ -356,6 +356,27 @@ These functions convert @var{i}, a signed long, to floating point.\n These functions convert @var{i}, a signed long long, to floating point.\n @end deftypefn\n \n+@deftypefn {Runtime Function} float __floatunsisf (unsigned int @var{i})\n+@deftypefnx {Runtime Function} double __floatunsidf (unsigned int @var{i})\n+@deftypefnx {Runtime Function} {long double} __floatunsitf (unsigned int @var{i})\n+@deftypefnx {Runtime Function} {long double} __floatunsixf (unsigned int @var{i})\n+These functions convert @var{i}, an unsigned integer, to floating point.\n+@end deftypefn\n+\n+@deftypefn {Runtime Function} float __floatundisf (unsigned long @var{i})\n+@deftypefnx {Runtime Function} double __floatundidf (unsigned long @var{i})\n+@deftypefnx {Runtime Function} {long double} __floatunditf (unsigned long @var{i})\n+@deftypefnx {Runtime Function} {long double} __floatundixf (unsigned long @var{i})\n+These functions convert @var{i}, an unsigned long, to floating point.\n+@end deftypefn\n+\n+@deftypefn {Runtime Function} float __floatuntisf (unsigned long long @var{i})\n+@deftypefnx {Runtime Function} double __floatuntidf (unsigned long long @var{i})\n+@deftypefnx {Runtime Function} {long double} __floatuntitf (unsigned long long @var{i})\n+@deftypefnx {Runtime Function} {long double} __floatuntixf (unsigned long long @var{i})\n+These functions convert @var{i}, an unsigned long long, to floating point.\n+@end deftypefn\n+\n @subsection Comparison functions\n \n There are two sets of basic comparison functions.\n@@ -438,6 +459,32 @@ These functions return a value greater than zero if neither argument\n is NaN, and @var{a} is strictly greater than @var{b}.\n @end deftypefn\n \n+@subsection Other floating-point functions\n+\n+@deftypefn {Runtime Function} float __powisf2 (float @var{a}, int @var{b})\n+@deftypefnx {Runtime Function} double __powidf2 (double @var{a}, int @var{b})\n+@deftypefnx {Runtime Function} {long double} __powitf2 (long double @var{a}, int @var{b})\n+@deftypefnx {Runtime Function} {long double} __powixf2 (long double @var{a}, int @var{b})\n+These functions convert raise @var{a} to the power @var{b}.\n+@end deftypefn\n+\n+@deftypefn {Runtime Function} {complex float} __mulsc3 (float @var{a}, float @var{b}, float @var{c}, float @var{d})\n+@deftypefnx {Runtime Function} {complex double} __muldc3 (double @var{a}, double @var{b}, double @var{c}, double @var{d})\n+@deftypefnx {Runtime Function} {complex long double} __multc3 (long double @var{a}, long double @var{b}, long double @var{c}, long double @var{d})\n+@deftypefnx {Runtime Function} {complex long double} __mulxc3 (long double @var{a}, long double @var{b}, long double @var{c}, long double @var{d})\n+These functions return the product of @math{@var{a} + i@var{b}} and\n+@math{@var{c} + i@var{d}}, following the rules of C99 Annex G@.\n+@end deftypefn\n+\n+@deftypefn {Runtime Function} {complex float} __divsc3 (float @var{a}, float @var{b}, float @var{c}, float @var{d})\n+@deftypefnx {Runtime Function} {complex double} __divdc3 (double @var{a}, double @var{b}, double @var{c}, double @var{d})\n+@deftypefnx {Runtime Function} {complex long double} __divtc3 (long double @var{a}, long double @var{b}, long double @var{c}, long double @var{d})\n+@deftypefnx {Runtime Function} {complex long double} __divxc3 (long double @var{a}, long double @var{b}, long double @var{c}, long double @var{d})\n+These functions return the quotient of @math{@var{a} + i@var{b}} and\n+@math{@var{c} + i@var{d}} (i.e., @math{(@var{a} + i@var{b}) / (@var{c}\n++ i@var{d})}), following the rules of C99 Annex G@.\n+@end deftypefn\n+\n @node Exception handling routines\n @section Language-independent routines for exception handling\n "}]}