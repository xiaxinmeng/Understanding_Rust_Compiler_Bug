{"sha": "1948dcab167efef1d00117d71c440aff0319dbda", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTk0OGRjYWIxNjdlZmVmMWQwMDExN2Q3MWM0NDBhZmYwMzE5ZGJkYQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@adacore.com", "date": "2020-05-09T17:37:13Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2020-07-07T09:26:53Z"}, "message": "[Ada] Spurious elaboration warnings with -gnatc and null procedures\n\ngcc/ada/\n\n\t* sem_elab.adb (Is_Guaranteed_ABE): Take into account null\n\tprocedures.", "tree": {"sha": "d0ff22c096f3c334f13efe550a32ae934afd3736", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d0ff22c096f3c334f13efe550a32ae934afd3736"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1948dcab167efef1d00117d71c440aff0319dbda", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1948dcab167efef1d00117d71c440aff0319dbda", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1948dcab167efef1d00117d71c440aff0319dbda", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1948dcab167efef1d00117d71c440aff0319dbda/comments", "author": {"login": "ArnaudCharlet", "id": 30291825, "node_id": "MDQ6VXNlcjMwMjkxODI1", "avatar_url": "https://avatars.githubusercontent.com/u/30291825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ArnaudCharlet", "html_url": "https://github.com/ArnaudCharlet", "followers_url": "https://api.github.com/users/ArnaudCharlet/followers", "following_url": "https://api.github.com/users/ArnaudCharlet/following{/other_user}", "gists_url": "https://api.github.com/users/ArnaudCharlet/gists{/gist_id}", "starred_url": "https://api.github.com/users/ArnaudCharlet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ArnaudCharlet/subscriptions", "organizations_url": "https://api.github.com/users/ArnaudCharlet/orgs", "repos_url": "https://api.github.com/users/ArnaudCharlet/repos", "events_url": "https://api.github.com/users/ArnaudCharlet/events{/privacy}", "received_events_url": "https://api.github.com/users/ArnaudCharlet/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "62226c35545bcda44ae97630658d1ad8129ab0c6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/62226c35545bcda44ae97630658d1ad8129ab0c6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/62226c35545bcda44ae97630658d1ad8129ab0c6"}], "stats": {"total": 19, "additions": 14, "deletions": 5}, "files": [{"sha": "e17e927eec4170855201d5dd8ce65d0c2dcd70db", "filename": "gcc/ada/sem_elab.adb", "status": "modified", "additions": 14, "deletions": 5, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1948dcab167efef1d00117d71c440aff0319dbda/gcc%2Fada%2Fsem_elab.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1948dcab167efef1d00117d71c440aff0319dbda/gcc%2Fada%2Fsem_elab.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_elab.adb?ref=1948dcab167efef1d00117d71c440aff0319dbda", "patch": "@@ -9246,6 +9246,7 @@ package body Sem_Elab is\n          Target_Decl : Node_Id;\n          Target_Body : Node_Id) return Boolean\n       is\n+         Spec : Node_Id;\n       begin\n          --  Avoid cascaded errors if there were previous serious infractions.\n          --  As a result the scenario will not be treated as a guaranteed ABE.\n@@ -9266,12 +9267,20 @@ package body Sem_Elab is\n                return Earlier_In_Extended_Unit (N, Target_Body);\n \n             --  Otherwise the body has not been encountered yet. The scenario\n-            --  is a guaranteed ABE since the body will appear later. It is\n-            --  assumed that the caller has already ensured that the scenario\n-            --  is ABE-safe because optional bodies are not considered here.\n+            --  is a guaranteed ABE since the body will appear later, unless\n+            --  this is a null specification, which can occur if expansion is\n+            --  disabled (e.g. -gnatc or GNATprove mode). It is assumed that\n+            --  the caller has already ensured that the scenario is ABE-safe\n+            --  because optional bodies are not considered here.\n \n             else\n-               return True;\n+               Spec := Specification (Target_Decl);\n+\n+               if Nkind (Spec) /= N_Procedure_Specification\n+                 or else not Null_Present (Spec)\n+               then\n+                  return True;\n+               end if;\n             end if;\n          end if;\n \n@@ -9574,7 +9583,7 @@ package body Sem_Elab is\n                Error_Msg_N (\"\\Program_Error will be raised at run time\", Call);\n             end if;\n \n-            --  Mark the call as a guarnateed ABE\n+            --  Mark the call as a guaranteed ABE\n \n             Set_Is_Known_Guaranteed_ABE (Call);\n "}]}