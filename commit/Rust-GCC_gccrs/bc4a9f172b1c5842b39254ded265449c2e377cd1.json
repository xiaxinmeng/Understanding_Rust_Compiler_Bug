{"sha": "bc4a9f172b1c5842b39254ded265449c2e377cd1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmM0YTlmMTcyYjFjNTg0MmIzOTI1NGRlZDI2NTQ0OWMyZTM3N2NkMQ==", "commit": {"author": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1995-05-05T18:55:27Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1995-05-05T18:55:27Z"}, "message": "pa.c (emit_move_sequence): Force problematical constants into memory during the reload pass when...\n\n\t* pa.c (emit_move_sequence): Force problematical constants\n\tinto memory during the reload pass when generating PIC.\n\nFrom-SVN: r9581", "tree": {"sha": "d9f3292ad97bf61530565b08619996e7f7711238", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d9f3292ad97bf61530565b08619996e7f7711238"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bc4a9f172b1c5842b39254ded265449c2e377cd1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bc4a9f172b1c5842b39254ded265449c2e377cd1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bc4a9f172b1c5842b39254ded265449c2e377cd1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bc4a9f172b1c5842b39254ded265449c2e377cd1/comments", "author": null, "committer": null, "parents": [{"sha": "ddcf4abcac77d72fa6ba16f07d276511968292bc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ddcf4abcac77d72fa6ba16f07d276511968292bc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ddcf4abcac77d72fa6ba16f07d276511968292bc"}], "stats": {"total": 15, "additions": 15, "deletions": 0}, "files": [{"sha": "70722cc089fe5013dc7fa2db170f1d453ec8cb73", "filename": "gcc/config/pa/pa.c", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bc4a9f172b1c5842b39254ded265449c2e377cd1/gcc%2Fconfig%2Fpa%2Fpa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bc4a9f172b1c5842b39254ded265449c2e377cd1/gcc%2Fconfig%2Fpa%2Fpa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa.c?ref=bc4a9f172b1c5842b39254ded265449c2e377cd1", "patch": "@@ -976,6 +976,21 @@ emit_move_sequence (operands, mode, scratch_reg)\n \t\t  operands[1] = force_const_mem (mode, operand1);\n \t\t  emit_move_sequence (operands, mode, temp);\n \t\t}\n+\t      /* Likewise for (const (plus (symbol) (const_int)) when generating\n+\t\t pic code during or after reload and const_int will not fit\n+\t\t in 14 bits.  */\n+\t      else if (GET_CODE (operand1) == CONST\n+\t\t       && GET_CODE (XEXP (operand1, 0)) == PLUS\n+\t\t       && GET_CODE (XEXP (XEXP (operand1, 0), 1)) == CONST_INT\n+\t\t       && !INT_14_BITS (XEXP (XEXP (operand1, 0), 1))\n+\t\t       && (reload_completed || reload_in_progress)\n+\t\t       && flag_pic)\n+\t\t{\n+\t\t  operands[1] = force_const_mem (mode, operand1);\n+\t\t  operands[1] = legitimize_pic_address (XEXP (operands[1], 0),\n+\t\t\t\t\t\t\tmode, temp);\n+\t\t  emit_move_sequence (operands, mode, temp);\n+\t\t}\n \t      else\n \t\t{\n \t\t  operands[1] = legitimize_pic_address (operand1, mode, temp);"}]}