{"sha": "24a9cea6ef313d062e04919a86feb649e6f157f7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjRhOWNlYTZlZjMxM2QwNjJlMDQ5MTlhODZmZWI2NDllNmYxNTdmNw==", "commit": {"author": {"name": "Tobias Burnus", "email": "burnus@net-b.de", "date": "2012-11-25T19:59:07Z"}, "committer": {"name": "Tobias Burnus", "email": "burnus@gcc.gnu.org", "date": "2012-11-25T19:59:07Z"}, "message": "re PR libquadmath/55462 (FAIL: gfortran.dg/quad_2.f90  -O*  execution test after revision 193770)\n\n2012-11-25  Tobias Burnus  <burnus@net-b.de>\n\n        PR libquadmath/55462\n        * strtod/strtod_l.c (round_and_return): Use HAVE_FENV_H\n        instead of nonexisting HAVE_GET_ROUNDING_MODE.\n\nFrom-SVN: r193796", "tree": {"sha": "2a35ce4f765dbdf2224b38acad28a92811887f7a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2a35ce4f765dbdf2224b38acad28a92811887f7a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/24a9cea6ef313d062e04919a86feb649e6f157f7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/24a9cea6ef313d062e04919a86feb649e6f157f7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/24a9cea6ef313d062e04919a86feb649e6f157f7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/24a9cea6ef313d062e04919a86feb649e6f157f7/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "305a35dafbd7b88c152022a91e25f0e0e2bc79fe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/305a35dafbd7b88c152022a91e25f0e0e2bc79fe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/305a35dafbd7b88c152022a91e25f0e0e2bc79fe"}], "stats": {"total": 10, "additions": 8, "deletions": 2}, "files": [{"sha": "8b052dcf3903a8bd9f7ce4ba9b685563d3daf7d4", "filename": "libquadmath/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/24a9cea6ef313d062e04919a86feb649e6f157f7/libquadmath%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/24a9cea6ef313d062e04919a86feb649e6f157f7/libquadmath%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libquadmath%2FChangeLog?ref=24a9cea6ef313d062e04919a86feb649e6f157f7", "patch": "@@ -1,3 +1,9 @@\n+2012-11-25  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR libquadmath/55462\n+\t* strtod/strtod_l.c (round_and_return): Use HAVE_FENV_H\n+\tinstead of nonexisting HAVE_GET_ROUNDING_MODE.\n+\n 2012-11-23  H.J. Lu  <hongjiu.lu@intel.com>\n \n \tPR bootstrap/55455"}, {"sha": "cd0c1f2da252da0deee315ea7b5d6d13c9453b6b", "filename": "libquadmath/strtod/strtod_l.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/24a9cea6ef313d062e04919a86feb649e6f157f7/libquadmath%2Fstrtod%2Fstrtod_l.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/24a9cea6ef313d062e04919a86feb649e6f157f7/libquadmath%2Fstrtod%2Fstrtod_l.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libquadmath%2Fstrtod%2Fstrtod_l.c?ref=24a9cea6ef313d062e04919a86feb649e6f157f7", "patch": "@@ -223,7 +223,7 @@ round_and_return (mp_limb_t *retval, intmax_t exponent, int negative,\n \t}\n       else if (shift > 0)\n \t{\n-#ifdef HAVE_GET_ROUNDING_MODE\n+#ifdef HAVE_FENV_H\n \t  if (TININESS_AFTER_ROUNDING && shift == 1)\n \t    {\n \t      /* Whether the result counts as tiny depends on whether,\n@@ -279,7 +279,7 @@ round_and_return (mp_limb_t *retval, intmax_t exponent, int negative,\n   if (exponent > MAX_EXP)\n     goto overflow;\n \n-#ifdef HAVE_GET_ROUNDING_MODE\n+#ifdef HAVE_FENV_H\n   if (round_away (negative,\n \t\t  (retval[0] & 1) != 0,\n \t\t  (round_limb & (((mp_limb_t) 1) << round_bit)) != 0,"}]}