{"sha": "545d3e65ad4b45dc1ad7991a18e99b755ce9cbbf", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTQ1ZDNlNjVhZDRiNDVkYzFhZDc5OTFhMThlOTliNzU1Y2U5Y2JiZg==", "commit": {"author": {"name": "Robert Dewar", "email": "dewar@adacore.com", "date": "2014-01-23T16:53:34Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-01-23T16:53:34Z"}, "message": "gnatlink.adb (Gnatlink): Check for suspicious executable file names on windows.\n\n2014-01-23  Robert Dewar  <dewar@adacore.com>\n\n\t* gnatlink.adb (Gnatlink): Check for suspicious executable file\n\tnames on windows.\n\n2014-01-23  Robert Dewar  <dewar@adacore.com>\n\n\t* a-ngelfu.ads: Remove bad uses of AND which should be AND THEN.\n\t* sem_res.adb (Check_No_Direct_Boolean_Operators): Don't give\n\tstyle errors in instances.\n\t* g-dynhta.ads (Static_HTable): Comment updates.\n\nFrom-SVN: r206986", "tree": {"sha": "ee1276de4640da1389cf2fb9ba60a54b8ca98ad4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ee1276de4640da1389cf2fb9ba60a54b8ca98ad4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/545d3e65ad4b45dc1ad7991a18e99b755ce9cbbf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/545d3e65ad4b45dc1ad7991a18e99b755ce9cbbf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/545d3e65ad4b45dc1ad7991a18e99b755ce9cbbf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/545d3e65ad4b45dc1ad7991a18e99b755ce9cbbf/comments", "author": null, "committer": null, "parents": [{"sha": "cc55f9bee5f0fc2f705ee27fd95c1339185b077a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cc55f9bee5f0fc2f705ee27fd95c1339185b077a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cc55f9bee5f0fc2f705ee27fd95c1339185b077a"}], "stats": {"total": 100, "additions": 82, "deletions": 18}, "files": [{"sha": "ee7e846f5411aaa54fd2623f276e62452486a7e5", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/545d3e65ad4b45dc1ad7991a18e99b755ce9cbbf/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/545d3e65ad4b45dc1ad7991a18e99b755ce9cbbf/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=545d3e65ad4b45dc1ad7991a18e99b755ce9cbbf", "patch": "@@ -1,3 +1,15 @@\n+2014-01-23  Robert Dewar  <dewar@adacore.com>\n+\n+\t* gnatlink.adb (Gnatlink): Check for suspicious executable file\n+\tnames on windows.\n+\n+2014-01-23  Robert Dewar  <dewar@adacore.com>\n+\n+\t* a-ngelfu.ads: Remove bad uses of AND which should be AND THEN.\n+\t* sem_res.adb (Check_No_Direct_Boolean_Operators): Don't give\n+\tstyle errors in instances.\n+\t* g-dynhta.ads (Static_HTable): Comment updates.\n+\n 2014-01-23  Vincent Celier  <celier@adacore.com>\n \n \t* prj-conf.adb (Get_Or_Create_Configuration_File): Do not attempt"}, {"sha": "0d5510157118c7ba44ac108d9f6d618aedd9d807", "filename": "gcc/ada/a-ngelfu.ads", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/545d3e65ad4b45dc1ad7991a18e99b755ce9cbbf/gcc%2Fada%2Fa-ngelfu.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/545d3e65ad4b45dc1ad7991a18e99b755ce9cbbf/gcc%2Fada%2Fa-ngelfu.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-ngelfu.ads?ref=545d3e65ad4b45dc1ad7991a18e99b755ce9cbbf", "patch": "@@ -103,27 +103,27 @@ package Ada.Numerics.Generic_Elementary_Functions is\n      (Y : Float_Type'Base;\n       X : Float_Type'Base := 1.0) return Float_Type'Base\n    with\n-     Post => (if X > 0.0 and Y = 0.0 then Arctan'Result = 0.0);\n+     Post => (if X > 0.0 and then Y = 0.0 then Arctan'Result = 0.0);\n \n    function Arctan\n      (Y     : Float_Type'Base;\n       X     : Float_Type'Base := 1.0;\n       Cycle : Float_Type'Base) return Float_Type'Base\n    with\n-     Post => (if X > 0.0 and Y = 0.0 then Arctan'Result = 0.0);\n+     Post => (if X > 0.0 and then Y = 0.0 then Arctan'Result = 0.0);\n \n    function Arccot\n      (X   : Float_Type'Base;\n       Y   : Float_Type'Base := 1.0) return Float_Type'Base\n    with\n-     Post => (if X > 0.0 and Y = 0.0 then Arccot'Result = 0.0);\n+     Post => (if X > 0.0 and then Y = 0.0 then Arccot'Result = 0.0);\n \n    function Arccot\n      (X     : Float_Type'Base;\n       Y     : Float_Type'Base := 1.0;\n       Cycle : Float_Type'Base) return Float_Type'Base\n    with\n-     Post => (if X > 0.0 and Y = 0.0 then Arccot'Result = 0.0);\n+     Post => (if X > 0.0 and then Y = 0.0 then Arccot'Result = 0.0);\n \n    function Sinh (X : Float_Type'Base) return Float_Type'Base with\n      Post => (if X = 0.0 then Sinh'Result = 0.0);"}, {"sha": "13692446f9603d91a553204180d4fe853609b27d", "filename": "gcc/ada/g-dynhta.ads", "status": "modified", "additions": 6, "deletions": 9, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/545d3e65ad4b45dc1ad7991a18e99b755ce9cbbf/gcc%2Fada%2Fg-dynhta.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/545d3e65ad4b45dc1ad7991a18e99b755ce9cbbf/gcc%2Fada%2Fg-dynhta.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-dynhta.ads?ref=545d3e65ad4b45dc1ad7991a18e99b755ce9cbbf", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---                     Copyright (C) 1995-2010, AdaCore                     --\n+--                     Copyright (C) 1995-2013, AdaCore                     --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -54,12 +54,11 @@ package GNAT.Dynamic_HTables is\n    -------------------\n \n    --  A low-level Hash-Table abstraction, not as easy to instantiate as\n-   --  Simple_HTable but designed to allow complete control over the\n-   --  allocation of necessary data structures. Particularly useful when\n-   --  dynamic allocation is not desired. The model is that each Element\n-   --  contains its own Key that can be retrieved by Get_Key. Furthermore,\n-   --  Element provides a link that can be used by the HTable for linking\n-   --  elements with same hash codes:\n+   --  Simple_HTable. This mirrors the interface of GNAT.HTable.Static_HTable,\n+   --  but does require dynamic allocation (since we allow multiple instances\n+   --  of the table. The model is that each Element contains its own Key that\n+   --  can be retrieved by Get_Key. Furthermore, Element provides a link that\n+   --  can be used by the HTable for linking elements with same hash codes:\n \n    --       Element\n \n@@ -133,11 +132,9 @@ package GNAT.Dynamic_HTables is\n       --  elements of the Htable will be traversed.\n \n    private\n-\n       type Instance_Data;\n       type Instance is access all Instance_Data;\n       Nil : constant Instance := null;\n-\n    end Static_HTable;\n \n    -------------------"}, {"sha": "1746bcd85339727c5c9d3d1d223790ffc91ce7bc", "filename": "gcc/ada/gnatlink.adb", "status": "modified", "additions": 55, "deletions": 4, "changes": 59, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/545d3e65ad4b45dc1ad7991a18e99b755ce9cbbf/gcc%2Fada%2Fgnatlink.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/545d3e65ad4b45dc1ad7991a18e99b755ce9cbbf/gcc%2Fada%2Fgnatlink.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnatlink.adb?ref=545d3e65ad4b45dc1ad7991a18e99b755ce9cbbf", "patch": "@@ -294,8 +294,9 @@ procedure Gnatlink is\n       for J in Units.Table'First .. Units.Last loop\n          Sfile := Units.Table (J).Sfile;\n          if Sfile = Efile then\n-            Exit_With_Error (\"executable name \"\"\" & File_Name & \"\"\" matches \"\n-              & \"source file name \"\"\" & Get_Name_String (Sfile) & \"\"\"\");\n+            Exit_With_Error\n+              (\"executable name \"\"\" & File_Name & \"\"\" matches \"\n+               & \"source file name \"\"\" & Get_Name_String (Sfile) & \"\"\"\");\n          end if;\n       end loop;\n \n@@ -1779,15 +1780,65 @@ begin\n    --  on Unix. On non-Unix systems executables have a suffix, so the warning\n    --  will not appear. However, do not warn in the case of a cross compiler.\n \n-   --  Assume this is a cross tool if the executable name is not gnatlink\n+   --  Assume this is a cross tool if the executable name is not gnatlink.\n+   --  Note that the executable name is also gnatlink on windows, but in that\n+   --  case the output file name will be test.exe rather than test.\n \n    if Base_Command_Name.all = \"gnatlink\"\n      and then Output_File_Name.all = \"test\"\n    then\n       Error_Msg (\"warning: executable name \"\"\" & Output_File_Name.all\n-                   & \"\"\" may conflict with shell command\");\n+                 & \"\"\" may conflict with shell command\");\n    end if;\n \n+   --  Special warnings for worrisome file names on windows\n+\n+   --  Windows-7 will not allow an executable file whose name contains any\n+   --  of the substrings \"install\", \"setup\", or \"update\" to load without\n+   --  special administration privileges. This rather incredible behavior\n+   --  is Microsoft's idea of a useful security precaution.\n+\n+   Bad_File_Names_On_Windows : declare\n+      FN : String := Output_File_Name.all;\n+\n+      procedure Check_File_Name (S : String);\n+      --  Warn if file name has the substring S\n+\n+      procedure Check_File_Name (S : String) is\n+      begin\n+         for J in 1 .. FN'Length - (S'Length - 1) loop\n+            if FN (J .. J + (S'Length - 1)) = S then\n+               Error_Msg\n+                 (\"warning: possible problem with executable name \"\"\"\n+                  & Output_File_Name.all & '\"');\n+               Error_Msg\n+                 (\"file name contains substring \"\"\" & S & '\"');\n+               Error_Msg\n+                 (\"admin privileges may be required on Windows 7 \"\n+                  & \"to load this file\");\n+            end if;\n+         end loop;\n+      end Check_File_Name;\n+\n+   --  Start of processing for Bad_File_Names_On_Windows\n+\n+   begin\n+      for J in FN'Range loop\n+            FN (J) := Csets.Fold_Lower (FN (J));\n+      end loop;\n+\n+      --  For now we detect windows by an output executable name ending with\n+      --  the suffix .exe (excluding VMS which might use that same name).\n+\n+      if FN'Length > 5\n+        and then FN (FN'Last - 3 .. FN'Last) = \".exe\"\n+      then\n+         Check_File_Name (\"install\");\n+         Check_File_Name (\"setup\");\n+         Check_File_Name (\"update\");\n+      end if;\n+   end Bad_File_Names_On_Windows;\n+\n    --  If -M switch was specified, add the switches to create the map file\n \n    if Create_Map_File then"}, {"sha": "730836437f7b2560775765a2be3fcfd3103bcaba", "filename": "gcc/ada/sem_res.adb", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/545d3e65ad4b45dc1ad7991a18e99b755ce9cbbf/gcc%2Fada%2Fsem_res.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/545d3e65ad4b45dc1ad7991a18e99b755ce9cbbf/gcc%2Fada%2Fsem_res.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_res.adb?ref=545d3e65ad4b45dc1ad7991a18e99b755ce9cbbf", "patch": "@@ -976,8 +976,12 @@ package body Sem_Res is\n          end if;\n       end if;\n \n+      --  Do style check (but skip if in instance, error is on template)\n+\n       if Style_Check then\n-         Check_Boolean_Operator (N);\n+         if not In_Instance then\n+            Check_Boolean_Operator (N);\n+         end if;\n       end if;\n    end Check_No_Direct_Boolean_Operators;\n "}]}