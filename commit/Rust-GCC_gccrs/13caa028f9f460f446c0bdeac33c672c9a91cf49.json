{"sha": "13caa028f9f460f446c0bdeac33c672c9a91cf49", "node_id": "C_kwDOANBUbNoAKDEzY2FhMDI4ZjlmNDYwZjQ0NmMwYmRlYWMzM2M2NzJjOWE5MWNmNDk", "commit": {"author": {"name": "Joseph Myers", "email": "joseph@codesourcery.com", "date": "2022-02-11T23:23:48Z"}, "committer": {"name": "Joseph Myers", "email": "joseph@codesourcery.com", "date": "2022-02-11T23:23:48Z"}, "message": "Regenerate .pot files.\n\ngcc/po/\n\t* gcc.pot: Regenerate.\n\nlibcpp/po/\n\t* cpplib.pot: Regenerate.", "tree": {"sha": "fdb74784d180583ae7f547c8eb208d9e28e18819", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fdb74784d180583ae7f547c8eb208d9e28e18819"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/13caa028f9f460f446c0bdeac33c672c9a91cf49", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/13caa028f9f460f446c0bdeac33c672c9a91cf49", "html_url": "https://github.com/Rust-GCC/gccrs/commit/13caa028f9f460f446c0bdeac33c672c9a91cf49", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/13caa028f9f460f446c0bdeac33c672c9a91cf49/comments", "author": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "becc9a12a515a2d0bbe56555185102dd42ec4ef3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/becc9a12a515a2d0bbe56555185102dd42ec4ef3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/becc9a12a515a2d0bbe56555185102dd42ec4ef3"}], "stats": {"total": 53130, "additions": 28107, "deletions": 25023}, "files": [{"sha": "38744f786afb4f5f8cff5e77fdc9b11ecef1f0f0", "filename": "gcc/po/gcc.pot", "status": "modified", "additions": 27756, "deletions": 24754, "changes": 52510, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/13caa028f9f460f446c0bdeac33c672c9a91cf49/gcc%2Fpo%2Fgcc.pot", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/13caa028f9f460f446c0bdeac33c672c9a91cf49/gcc%2Fpo%2Fgcc.pot", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpo%2Fgcc.pot?ref=13caa028f9f460f446c0bdeac33c672c9a91cf49"}, {"sha": "7363759c0e8ae2de4c3539678323801ef28e8954", "filename": "libcpp/po/cpplib.pot", "status": "modified", "additions": 351, "deletions": 269, "changes": 620, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/13caa028f9f460f446c0bdeac33c672c9a91cf49/libcpp%2Fpo%2Fcpplib.pot", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/13caa028f9f460f446c0bdeac33c672c9a91cf49/libcpp%2Fpo%2Fcpplib.pot", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2Fpo%2Fcpplib.pot?ref=13caa028f9f460f446c0bdeac33c672c9a91cf49", "patch": "@@ -8,7 +8,7 @@ msgid \"\"\n msgstr \"\"\n \"Project-Id-Version: PACKAGE VERSION\\n\"\n \"Report-Msgid-Bugs-To: https://gcc.gnu.org/bugs/\\n\"\n-\"POT-Creation-Date: 2021-07-26 15:25+0000\\n\"\n+\"POT-Creation-Date: 2022-02-11 23:02+0000\\n\"\n \"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\\n\"\n \"Last-Translator: FULL NAME <EMAIL@ADDRESS>\\n\"\n \"Language-Team: LANGUAGE <LL@li.org>\\n\"\n@@ -17,1066 +17,1148 @@ msgstr \"\"\n \"Content-Type: text/plain; charset=CHARSET\\n\"\n \"Content-Transfer-Encoding: 8bit\\n\"\n \n-#: charset.c:677\n+#: charset.cc:683\n #, c-format\n msgid \"conversion from %s to %s not supported by iconv\"\n msgstr \"\"\n \n-#: charset.c:680\n+#: charset.cc:686\n msgid \"iconv_open\"\n msgstr \"\"\n \n-#: charset.c:688\n+#: charset.cc:696\n #, c-format\n msgid \"no iconv implementation, cannot convert from %s to %s\"\n msgstr \"\"\n \n-#: charset.c:784\n+#: charset.cc:794\n #, c-format\n msgid \"character 0x%lx is not in the basic source character set\\n\"\n msgstr \"\"\n \n-#: charset.c:801\n-#: charset.c:1771\n+#: charset.cc:811\n+#: charset.cc:1800\n msgid \"converting to execution character set\"\n msgstr \"\"\n \n-#: charset.c:807\n+#: charset.cc:817\n #, c-format\n msgid \"character 0x%lx is not unibyte in execution character set\"\n msgstr \"\"\n \n-#: charset.c:1057\n+#: charset.cc:1087\n msgid \"universal character names are only valid in C++ and C99\"\n msgstr \"\"\n \n-#: charset.c:1061\n+#: charset.cc:1091\n msgid \"C99's universal character names are incompatible with C90\"\n msgstr \"\"\n \n-#: charset.c:1064\n+#: charset.cc:1094\n #, c-format\n msgid \"the meaning of '\\\\%c' is different in traditional C\"\n msgstr \"\"\n \n-#: charset.c:1073\n+#: charset.cc:1103\n msgid \"In _cpp_valid_ucn but not a UCN\"\n msgstr \"\"\n \n-#: charset.c:1106\n+#: charset.cc:1136\n #, c-format\n msgid \"incomplete universal character name %.*s\"\n msgstr \"\"\n \n-#: charset.c:1121\n+#: charset.cc:1151\n #, c-format\n msgid \"%.*s is not a valid universal character\"\n msgstr \"\"\n \n-#: charset.c:1131\n-#: lex.c:1335\n+#: charset.cc:1161\n+#: lex.cc:1876\n msgid \"'$' in identifier or number\"\n msgstr \"\"\n \n-#: charset.c:1141\n+#: charset.cc:1171\n #, c-format\n msgid \"universal character %.*s is not valid in an identifier\"\n msgstr \"\"\n \n-#: charset.c:1145\n+#: charset.cc:1175\n #, c-format\n msgid \"universal character %.*s is not valid at the start of an identifier\"\n msgstr \"\"\n \n-#: charset.c:1152\n+#: charset.cc:1182\n #, c-format\n msgid \"%.*s is outside the UCS codespace\"\n msgstr \"\"\n \n-#: charset.c:1197\n-#: charset.c:2116\n+#: charset.cc:1227\n+#: charset.cc:2145\n msgid \"converting UCN to source character set\"\n msgstr \"\"\n \n-#: charset.c:1204\n+#: charset.cc:1234\n msgid \"converting UCN to execution character set\"\n msgstr \"\"\n \n-#: charset.c:1268\n+#: charset.cc:1298\n #, c-format\n msgid \"extended character %.*s is not valid in an identifier\"\n msgstr \"\"\n \n-#: charset.c:1285\n+#: charset.cc:1315\n #, c-format\n msgid \"extended character %.*s is not valid at the start of an identifier\"\n msgstr \"\"\n \n-#: charset.c:1371\n+#: charset.cc:1401\n msgid \"the meaning of '\\\\x' is different in traditional C\"\n msgstr \"\"\n \n-#: charset.c:1396\n+#: charset.cc:1426\n msgid \"\\\\x used with no following hex digits\"\n msgstr \"\"\n \n-#: charset.c:1403\n+#: charset.cc:1433\n msgid \"hex escape sequence out of range\"\n msgstr \"\"\n \n-#: charset.c:1455\n+#: charset.cc:1483\n msgid \"octal escape sequence out of range\"\n msgstr \"\"\n \n-#: charset.c:1537\n+#: charset.cc:1564\n msgid \"the meaning of '\\\\a' is different in traditional C\"\n msgstr \"\"\n \n-#: charset.c:1544\n+#: charset.cc:1571\n #, c-format\n msgid \"non-ISO-standard escape sequence, '\\\\%c'\"\n msgstr \"\"\n \n-#: charset.c:1552\n+#: charset.cc:1579\n #, c-format\n msgid \"unknown escape sequence: '\\\\%c'\"\n msgstr \"\"\n \n-#: charset.c:1560\n+#: charset.cc:1589\n #, c-format\n msgid \"unknown escape sequence: '\\\\%s'\"\n msgstr \"\"\n \n-#: charset.c:1568\n+#: charset.cc:1597\n msgid \"converting escape sequence to execution character set\"\n msgstr \"\"\n \n-#: charset.c:1708\n+#: charset.cc:1737\n msgid \"missing open quote\"\n msgstr \"\"\n \n-#: charset.c:1926\n-#: charset.c:2005\n+#: charset.cc:1955\n+#: charset.cc:2034\n msgid \"character constant too long for its type\"\n msgstr \"\"\n \n-#: charset.c:1929\n+#: charset.cc:1958\n msgid \"multi-character character constant\"\n msgstr \"\"\n \n-#: charset.c:2045\n+#: charset.cc:2074\n msgid \"empty character constant\"\n msgstr \"\"\n \n-#: charset.c:2163\n+#: charset.cc:2230\n #, c-format\n msgid \"failure to convert %s to %s\"\n msgstr \"\"\n \n-#: directives.c:237\n-#: directives.c:280\n+#: directives.cc:237\n+#: directives.cc:280\n #, c-format\n msgid \"extra tokens at end of #%s directive\"\n msgstr \"\"\n \n-#: directives.c:387\n+#: directives.cc:387\n #, c-format\n msgid \"#%s is a GCC extension\"\n msgstr \"\"\n \n-#: directives.c:392\n+#: directives.cc:392\n #, c-format\n msgid \"#%s is a deprecated GCC extension\"\n msgstr \"\"\n \n-#: directives.c:405\n+#: directives.cc:405\n msgid \"suggest not using #elif in traditional C\"\n msgstr \"\"\n \n-#: directives.c:408\n+#: directives.cc:408\n #, c-format\n msgid \"traditional C ignores #%s with the # indented\"\n msgstr \"\"\n \n-#: directives.c:412\n+#: directives.cc:412\n #, c-format\n msgid \"suggest hiding #%s from traditional C with an indented #\"\n msgstr \"\"\n \n-#: directives.c:438\n+#: directives.cc:438\n msgid \"embedding a directive within macro arguments is not portable\"\n msgstr \"\"\n \n-#: directives.c:462\n+#: directives.cc:466\n msgid \"style of line directive is a GCC extension\"\n msgstr \"\"\n \n-#: directives.c:543\n+#: directives.cc:541\n+#, c-format\n+msgid \"invalid preprocessing directive #%s; did you mean #%s?\"\n+msgstr \"\"\n+\n+#: directives.cc:547\n #, c-format\n msgid \"invalid preprocessing directive #%s\"\n msgstr \"\"\n \n-#: directives.c:613\n+#: directives.cc:617\n #, c-format\n msgid \"\\\"%s\\\" cannot be used as a macro name\"\n msgstr \"\"\n \n-#: directives.c:620\n+#: directives.cc:624\n #, c-format\n msgid \"\\\"%s\\\" cannot be used as a macro name as it is an operator in C++\"\n msgstr \"\"\n \n-#: directives.c:623\n+#: directives.cc:627\n #, c-format\n msgid \"no macro name given in #%s directive\"\n msgstr \"\"\n \n-#: directives.c:626\n+#: directives.cc:630\n msgid \"macro names must be identifiers\"\n msgstr \"\"\n \n-#: directives.c:675\n-#: directives.c:680\n+#: directives.cc:679\n+#: directives.cc:684\n #, c-format\n msgid \"undefining \\\"%s\\\"\"\n msgstr \"\"\n \n-#: directives.c:737\n+#: directives.cc:741\n msgid \"missing terminating > character\"\n msgstr \"\"\n \n-#: directives.c:796\n+#: directives.cc:800\n #, c-format\n msgid \"#%s expects \\\"FILENAME\\\" or <FILENAME>\"\n msgstr \"\"\n \n-#: directives.c:842\n+#: directives.cc:846\n #, c-format\n msgid \"empty filename in #%s\"\n msgstr \"\"\n \n-#: directives.c:851\n+#: directives.cc:855\n #, c-format\n msgid \"\"\n \"#include nested depth %u exceeds maximum of %u (use -fmax-include-\"\n \"depth=DEPTH to increase the maximum)\"\n msgstr \"\"\n \n-#: directives.c:896\n+#: directives.cc:900\n msgid \"#include_next in primary source file\"\n msgstr \"\"\n \n-#: directives.c:922\n+#: directives.cc:926\n #, c-format\n msgid \"invalid flag \\\"%s\\\" in line directive\"\n msgstr \"\"\n \n-#: directives.c:989\n+#: directives.cc:993\n msgid \"unexpected end of file after #line\"\n msgstr \"\"\n \n-#: directives.c:992\n+#: directives.cc:996\n #, c-format\n msgid \"\\\"%s\\\" after #line is not a positive integer\"\n msgstr \"\"\n \n-#: directives.c:998\n-#: directives.c:1000\n+#: directives.cc:1002\n+#: directives.cc:1004\n msgid \"line number out of range\"\n msgstr \"\"\n \n-#: directives.c:1013\n-#: directives.c:1094\n+#: directives.cc:1017\n+#: directives.cc:1098\n #, c-format\n msgid \"\\\"%s\\\" is not a valid filename\"\n msgstr \"\"\n \n-#: directives.c:1054\n+#: directives.cc:1058\n #, c-format\n msgid \"\\\"%s\\\" after # is not a positive integer\"\n msgstr \"\"\n \n-#: directives.c:1121\n+#: directives.cc:1125\n #, c-format\n msgid \"file \\\"%s\\\" linemarker ignored due to incorrect nesting\"\n msgstr \"\"\n \n-#: directives.c:1199\n-#: directives.c:1201\n-#: directives.c:1203\n-#: directives.c:1791\n+#: directives.cc:1203\n+#: directives.cc:1205\n+#: directives.cc:1207\n+#: directives.cc:1795\n #, c-format\n msgid \"%s\"\n msgstr \"\"\n \n-#: directives.c:1227\n+#: directives.cc:1231\n #, c-format\n msgid \"invalid #%s directive\"\n msgstr \"\"\n \n-#: directives.c:1290\n+#: directives.cc:1294\n #, c-format\n msgid \"registering pragmas in namespace \\\"%s\\\" with mismatched name expansion\"\n msgstr \"\"\n \n-#: directives.c:1299\n+#: directives.cc:1303\n #, c-format\n msgid \"registering pragma \\\"%s\\\" with name expansion and no namespace\"\n msgstr \"\"\n \n-#: directives.c:1317\n+#: directives.cc:1321\n #, c-format\n msgid \"registering \\\"%s\\\" as both a pragma and a pragma namespace\"\n msgstr \"\"\n \n-#: directives.c:1320\n+#: directives.cc:1324\n #, c-format\n msgid \"#pragma %s %s is already registered\"\n msgstr \"\"\n \n-#: directives.c:1323\n+#: directives.cc:1327\n #, c-format\n msgid \"#pragma %s is already registered\"\n msgstr \"\"\n \n-#: directives.c:1353\n+#: directives.cc:1357\n msgid \"registering pragma with NULL handler\"\n msgstr \"\"\n \n-#: directives.c:1570\n+#: directives.cc:1574\n msgid \"#pragma once in main file\"\n msgstr \"\"\n \n-#: directives.c:1593\n+#: directives.cc:1597\n msgid \"invalid #pragma push_macro directive\"\n msgstr \"\"\n \n-#: directives.c:1650\n+#: directives.cc:1654\n msgid \"invalid #pragma pop_macro directive\"\n msgstr \"\"\n \n-#: directives.c:1705\n+#: directives.cc:1709\n msgid \"invalid #pragma GCC poison directive\"\n msgstr \"\"\n \n-#: directives.c:1714\n+#: directives.cc:1718\n #, c-format\n msgid \"poisoning existing macro \\\"%s\\\"\"\n msgstr \"\"\n \n-#: directives.c:1733\n+#: directives.cc:1737\n msgid \"#pragma system_header ignored outside include file\"\n msgstr \"\"\n \n-#: directives.c:1758\n+#: directives.cc:1762\n #, c-format\n msgid \"cannot find source file %s\"\n msgstr \"\"\n \n-#: directives.c:1762\n+#: directives.cc:1766\n #, c-format\n msgid \"current file is older than %s\"\n msgstr \"\"\n \n-#: directives.c:1786\n+#: directives.cc:1790\n #, c-format\n msgid \"invalid \\\"#pragma GCC %s\\\" directive\"\n msgstr \"\"\n \n-#: directives.c:1987\n+#: directives.cc:1992\n msgid \"_Pragma takes a parenthesized string literal\"\n msgstr \"\"\n \n-#: directives.c:2070\n+#: directives.cc:2075\n msgid \"#else without #if\"\n msgstr \"\"\n \n-#: directives.c:2075\n+#: directives.cc:2080\n msgid \"#else after #else\"\n msgstr \"\"\n \n-#: directives.c:2077\n-#: directives.c:2111\n+#: directives.cc:2082\n+#: directives.cc:2116\n msgid \"the conditional began here\"\n msgstr \"\"\n \n-#: directives.c:2103\n+#: directives.cc:2108\n #, c-format\n msgid \"#%s without #if\"\n msgstr \"\"\n \n-#: directives.c:2108\n+#: directives.cc:2113\n #, c-format\n msgid \"#%s after #else\"\n msgstr \"\"\n \n-#: directives.c:2175\n+#: directives.cc:2136\n+#: directives.cc:2175\n+#, c-format\n+msgid \"#%s before C++23 is a GCC extension\"\n+msgstr \"\"\n+\n+#: directives.cc:2140\n+#: directives.cc:2179\n+#, c-format\n+msgid \"#%s before C2X is a GCC extension\"\n+msgstr \"\"\n+\n+#: directives.cc:2215\n msgid \"#endif without #if\"\n msgstr \"\"\n \n-#: directives.c:2251\n+#: directives.cc:2291\n msgid \"missing '(' after predicate\"\n msgstr \"\"\n \n-#: directives.c:2269\n+#: directives.cc:2309\n msgid \"missing ')' to complete answer\"\n msgstr \"\"\n \n-#: directives.c:2281\n+#: directives.cc:2321\n msgid \"predicate's answer is empty\"\n msgstr \"\"\n \n-#: directives.c:2311\n+#: directives.cc:2351\n msgid \"assertion without predicate\"\n msgstr \"\"\n \n-#: directives.c:2314\n+#: directives.cc:2354\n msgid \"predicate must be an identifier\"\n msgstr \"\"\n \n-#: directives.c:2396\n+#: directives.cc:2436\n #, c-format\n msgid \"\\\"%s\\\" re-asserted\"\n msgstr \"\"\n \n-#: directives.c:2714\n+#: directives.cc:2754\n #, c-format\n msgid \"unterminated #%s\"\n msgstr \"\"\n \n-#: errors.c:291\n+#: errors.cc:335\n+#: errors.cc:350\n #, c-format\n msgid \"%s: %s\"\n msgstr \"\"\n \n-#: errors.c:304\n+#: errors.cc:348\n msgid \"stdout\"\n msgstr \"\"\n \n-#: expr.c:632\n-#: expr.c:749\n+#: expr.cc:632\n+#: expr.cc:749\n msgid \"fixed-point constants are a GCC extension\"\n msgstr \"\"\n \n-#: expr.c:657\n+#: expr.cc:657\n msgid \"invalid prefix \\\"0b\\\" for floating constant\"\n msgstr \"\"\n \n-#: expr.c:670\n+#: expr.cc:670\n msgid \"use of C++17 hexadecimal floating constant\"\n msgstr \"\"\n \n-#: expr.c:673\n+#: expr.cc:673\n msgid \"use of C99 hexadecimal floating constant\"\n msgstr \"\"\n \n-#: expr.c:717\n+#: expr.cc:717\n #, c-format\n msgid \"invalid suffix \\\"%.*s\\\" on floating constant\"\n msgstr \"\"\n \n-#: expr.c:728\n-#: expr.c:795\n+#: expr.cc:728\n+#: expr.cc:795\n #, c-format\n msgid \"traditional C rejects the \\\"%.*s\\\" suffix\"\n msgstr \"\"\n \n-#: expr.c:736\n+#: expr.cc:736\n msgid \"suffix for double constant is a GCC extension\"\n msgstr \"\"\n \n-#: expr.c:742\n+#: expr.cc:742\n #, c-format\n msgid \"invalid suffix \\\"%.*s\\\" with hexadecimal floating constant\"\n msgstr \"\"\n \n-#: expr.c:755\n-#: expr.c:759\n+#: expr.cc:755\n+#: expr.cc:759\n msgid \"decimal float constants are a C2X feature\"\n msgstr \"\"\n \n-#: expr.c:778\n+#: expr.cc:778\n #, c-format\n msgid \"invalid suffix \\\"%.*s\\\" on integer constant\"\n msgstr \"\"\n \n-#: expr.c:803\n+#: expr.cc:803\n msgid \"use of C++11 long long integer constant\"\n msgstr \"\"\n \n-#: expr.c:804\n+#: expr.cc:804\n msgid \"use of C99 long long integer constant\"\n msgstr \"\"\n \n-#: expr.c:818\n+#: expr.cc:818\n msgid \"use of C++23 %<size_t%> integer constant\"\n msgstr \"\"\n \n-#: expr.c:819\n+#: expr.cc:819\n msgid \"use of C++23 %<make_signed_t<size_t>%> integer constant\"\n msgstr \"\"\n \n-#: expr.c:830\n+#: expr.cc:830\n msgid \"imaginary constants are a GCC extension\"\n msgstr \"\"\n \n-#: expr.c:837\n+#: expr.cc:837\n msgid \"binary constants are a C++14 feature or GCC extension\"\n msgstr \"\"\n \n-#: expr.c:839\n+#: expr.cc:839\n msgid \"binary constants are a C2X feature or GCC extension\"\n msgstr \"\"\n \n-#: expr.c:844\n+#: expr.cc:844\n msgid \"binary constants are a C2X feature\"\n msgstr \"\"\n \n-#: expr.c:940\n+#: expr.cc:940\n msgid \"integer constant is too large for its type\"\n msgstr \"\"\n \n-#: expr.c:971\n+#: expr.cc:971\n msgid \"integer constant is so large that it is unsigned\"\n msgstr \"\"\n \n-#: expr.c:1066\n+#: expr.cc:1066\n msgid \"missing ')' after \\\"defined\\\"\"\n msgstr \"\"\n \n-#: expr.c:1073\n+#: expr.cc:1073\n msgid \"operator \\\"defined\\\" requires an identifier\"\n msgstr \"\"\n \n-#: expr.c:1081\n+#: expr.cc:1081\n #, c-format\n msgid \"(\\\"%s\\\" is an alternative token for \\\"%s\\\" in C++)\"\n msgstr \"\"\n \n-#: expr.c:1094\n+#: expr.cc:1094\n msgid \"this use of \\\"defined\\\" may not be portable\"\n msgstr \"\"\n \n-#: expr.c:1139\n+#: expr.cc:1139\n msgid \"user-defined literal in preprocessor expression\"\n msgstr \"\"\n \n-#: expr.c:1144\n+#: expr.cc:1144\n msgid \"floating constant in preprocessor expression\"\n msgstr \"\"\n \n-#: expr.c:1150\n+#: expr.cc:1150\n msgid \"imaginary number in preprocessor expression\"\n msgstr \"\"\n \n-#: expr.c:1199\n+#: expr.cc:1199\n #, c-format\n msgid \"\\\"%s\\\" is not defined, evaluates to 0\"\n msgstr \"\"\n \n-#: expr.c:1212\n+#: expr.cc:1212\n msgid \"assertions are a GCC extension\"\n msgstr \"\"\n \n-#: expr.c:1215\n+#: expr.cc:1215\n msgid \"assertions are a deprecated extension\"\n msgstr \"\"\n \n-#: expr.c:1461\n+#: expr.cc:1461\n #, c-format\n msgid \"unbalanced stack in %s\"\n msgstr \"\"\n \n-#: expr.c:1481\n+#: expr.cc:1481\n #, c-format\n msgid \"impossible operator '%u'\"\n msgstr \"\"\n \n-#: expr.c:1582\n+#: expr.cc:1582\n msgid \"missing ')' in expression\"\n msgstr \"\"\n \n-#: expr.c:1611\n+#: expr.cc:1611\n msgid \"'?' without following ':'\"\n msgstr \"\"\n \n-#: expr.c:1621\n+#: expr.cc:1621\n msgid \"integer overflow in preprocessor expression\"\n msgstr \"\"\n \n-#: expr.c:1626\n+#: expr.cc:1626\n msgid \"missing '(' in expression\"\n msgstr \"\"\n \n-#: expr.c:1658\n+#: expr.cc:1658\n #, c-format\n msgid \"the left operand of \\\"%s\\\" changes sign when promoted\"\n msgstr \"\"\n \n-#: expr.c:1663\n+#: expr.cc:1663\n #, c-format\n msgid \"the right operand of \\\"%s\\\" changes sign when promoted\"\n msgstr \"\"\n \n-#: expr.c:1922\n+#: expr.cc:1922\n msgid \"traditional C rejects the unary plus operator\"\n msgstr \"\"\n \n-#: expr.c:2020\n+#: expr.cc:2020\n msgid \"comma operator in operand of #if\"\n msgstr \"\"\n \n-#: expr.c:2156\n+#: expr.cc:2156\n msgid \"division by zero in #if\"\n msgstr \"\"\n \n-#: files.c:571\n+#: files.cc:516\n+msgid \"NULL directory in find_file\"\n+msgstr \"\"\n+\n+#: files.cc:570\n msgid \"one or more PCH files were found, but they were invalid\"\n msgstr \"\"\n \n-#: files.c:575\n+#: files.cc:574\n msgid \"use -Winvalid-pch for more information\"\n msgstr \"\"\n \n-#: files.c:1055\n+#: files.cc:688\n+#, c-format\n+msgid \"%s is a block device\"\n+msgstr \"\"\n+\n+#: files.cc:707\n+#, c-format\n+msgid \"%s is too large\"\n+msgstr \"\"\n+\n+#: files.cc:748\n+#, c-format\n+msgid \"%s is shorter than expected\"\n+msgstr \"\"\n+\n+#: files.cc:1060\n #, c-format\n msgid \"no include path in which to search for %s\"\n msgstr \"\"\n \n-#: files.c:1573\n+#: files.cc:1578\n msgid \"Multiple include guards may be useful for:\\n\"\n msgstr \"\"\n \n-#: init.c:617\n+#: init.cc:618\n msgid \"cppchar_t must be an unsigned type\"\n msgstr \"\"\n \n-#: init.c:621\n+#: init.cc:622\n #, c-format\n msgid \"\"\n \"preprocessor arithmetic has maximum precision of %lu bits; target requires \"\n \"%lu bits\"\n msgstr \"\"\n \n-#: init.c:628\n+#: init.cc:629\n msgid \"CPP arithmetic must be at least as precise as a target int\"\n msgstr \"\"\n \n-#: init.c:631\n+#: init.cc:632\n msgid \"target char is less than 8 bits wide\"\n msgstr \"\"\n \n-#: init.c:635\n+#: init.cc:636\n msgid \"target wchar_t is narrower than target char\"\n msgstr \"\"\n \n-#: init.c:639\n+#: init.cc:640\n msgid \"target int is narrower than target char\"\n msgstr \"\"\n \n-#: init.c:644\n+#: init.cc:645\n msgid \"CPP half-integer narrower than CPP character\"\n msgstr \"\"\n \n-#: init.c:648\n+#: init.cc:649\n #, c-format\n msgid \"\"\n \"CPP on this host cannot handle wide character constants over %lu bits, but \"\n \"the target requires %lu bits\"\n msgstr \"\"\n \n-#: lex.c:1126\n+#: lex.cc:1126\n msgid \"backslash and newline separated by space\"\n msgstr \"\"\n \n-#: lex.c:1131\n+#: lex.cc:1131\n msgid \"backslash-newline at end of file\"\n msgstr \"\"\n \n-#: lex.c:1147\n+#: lex.cc:1147\n #, c-format\n msgid \"trigraph ??%c converted to %c\"\n msgstr \"\"\n \n-#: lex.c:1155\n+#: lex.cc:1155\n #, c-format\n msgid \"trigraph ??%c ignored, use -trigraphs to enable\"\n msgstr \"\"\n \n-#: lex.c:1204\n+#: lex.cc:1536\n+msgid \"end of bidirectional context\"\n+msgstr \"\"\n+\n+#: lex.cc:1577\n+msgid \"unpaired UTF-8 bidirectional control characters detected\"\n+msgstr \"\"\n+\n+#: lex.cc:1581\n+msgid \"unpaired UTF-8 bidirectional control character detected\"\n+msgstr \"\"\n+\n+#: lex.cc:1619\n+#, c-format\n+msgid \"UTF-8 vs UCN mismatch when closing a context by \\\"%s\\\"\"\n+msgstr \"\"\n+\n+#: lex.cc:1628\n+#, c-format\n+msgid \"\\\"%s\\\" is closing an unopened context\"\n+msgstr \"\"\n+\n+#: lex.cc:1632\n+#, c-format\n+msgid \"found problematic Unicode character \\\"%s\\\"\"\n+msgstr \"\"\n+\n+#: lex.cc:1682\n msgid \"\\\"/*\\\" within comment\"\n msgstr \"\"\n \n-#: lex.c:1262\n+#: lex.cc:1772\n #, c-format\n msgid \"%s in preprocessing directive\"\n msgstr \"\"\n \n-#: lex.c:1271\n+#: lex.cc:1784\n msgid \"null character(s) ignored\"\n msgstr \"\"\n \n-#: lex.c:1308\n+#: lex.cc:1844\n #, c-format\n msgid \"`%.*s' is not in NFKC\"\n msgstr \"\"\n \n-#: lex.c:1311\n+#: lex.cc:1847\n+#: lex.cc:1850\n #, c-format\n msgid \"`%.*s' is not in NFC\"\n msgstr \"\"\n \n-#: lex.c:1375\n+#: lex.cc:1932\n msgid \"__VA_OPT__ is not available until C++20\"\n msgstr \"\"\n \n-#: lex.c:1382\n+#: lex.cc:1939\n msgid \"__VA_OPT__ can only appear in the expansion of a C++20 variadic macro\"\n msgstr \"\"\n \n-#: lex.c:1413\n-#: lex.c:1506\n+#: lex.cc:1970\n+#: lex.cc:2066\n #, c-format\n msgid \"attempt to use poisoned \\\"%s\\\"\"\n msgstr \"\"\n \n-#: lex.c:1423\n-#: lex.c:1516\n+#: lex.cc:1980\n+#: lex.cc:2076\n msgid \"__VA_ARGS__ can only appear in the expansion of a C++11 variadic macro\"\n msgstr \"\"\n \n-#: lex.c:1427\n-#: lex.c:1520\n+#: lex.cc:1984\n+#: lex.cc:2080\n msgid \"__VA_ARGS__ can only appear in the expansion of a C99 variadic macro\"\n msgstr \"\"\n \n-#: lex.c:1437\n-#: lex.c:1532\n+#: lex.cc:1994\n+#: lex.cc:2092\n #, c-format\n msgid \"identifier \\\"%s\\\" is a special operator name in C++\"\n msgstr \"\"\n \n-#: lex.c:1572\n+#: lex.cc:2132\n msgid \"adjacent digit separators\"\n msgstr \"\"\n \n-#: lex.c:1889\n+#: lex.cc:2450\n msgid \"raw string delimiter longer than 16 characters\"\n msgstr \"\"\n \n-#: lex.c:1893\n+#: lex.cc:2454\n msgid \"invalid new-line in raw string delimiter\"\n msgstr \"\"\n \n-#: lex.c:1897\n-#: lex.c:4652\n+#: lex.cc:2458\n+#: lex.cc:5257\n #, c-format\n msgid \"invalid character '%c' in raw string delimiter\"\n msgstr \"\"\n \n-#: lex.c:1936\n-#: lex.c:1959\n+#: lex.cc:2497\n+#: lex.cc:2520\n msgid \"unterminated raw string\"\n msgstr \"\"\n \n-#: lex.c:1981\n-#: lex.c:2110\n+#: lex.cc:2552\n+#: lex.cc:2701\n msgid \"\"\n \"invalid suffix on literal; C++11 requires a space between literal and string \"\n \"macro\"\n msgstr \"\"\n \n-#: lex.c:2093\n+#: lex.cc:2684\n msgid \"null character(s) preserved in literal\"\n msgstr \"\"\n \n-#: lex.c:2096\n+#: lex.cc:2687\n #, c-format\n msgid \"missing terminating %c character\"\n msgstr \"\"\n \n-#: lex.c:2128\n+#: lex.cc:2719\n msgid \"C++11 requires a space between string literal and macro\"\n msgstr \"\"\n \n-#: lex.c:2721\n+#: lex.cc:3312\n msgid \"module control-line cannot be in included file\"\n msgstr \"\"\n \n-#: lex.c:2735\n+#: lex.cc:3326\n #, c-format\n msgid \"module control-line \\\"%s\\\" cannot be an object-like macro\"\n msgstr \"\"\n \n-#: lex.c:3109\n-#: lex.c:4485\n-#: traditional.c:174\n+#: lex.cc:3714\n+#: lex.cc:5090\n+#: traditional.cc:174\n msgid \"unterminated comment\"\n msgstr \"\"\n \n-#: lex.c:3123\n-#: lex.c:3157\n+#: lex.cc:3728\n+#: lex.cc:3762\n msgid \"C++ style comments are not allowed in ISO C90\"\n msgstr \"\"\n \n-#: lex.c:3125\n-#: lex.c:3136\n-#: lex.c:3160\n+#: lex.cc:3730\n+#: lex.cc:3741\n+#: lex.cc:3765\n msgid \"(this will be reported only once per input file)\"\n msgstr \"\"\n \n-#: lex.c:3134\n+#: lex.cc:3739\n msgid \"C++ style comments are incompatible with C90\"\n msgstr \"\"\n \n-#: lex.c:3166\n+#: lex.cc:3771\n msgid \"multi-line comment\"\n msgstr \"\"\n \n-#: lex.c:3560\n+#: lex.cc:4165\n #, c-format\n msgid \"unspellable token %s\"\n msgstr \"\"\n \n-#: lex.c:4640\n+#: lex.cc:5245\n #, c-format\n msgid \"raw string delimiter longer than %d characters\"\n msgstr \"\"\n \n-#: lex.c:4710\n+#: lex.cc:5315\n msgid \"unterminated literal\"\n msgstr \"\"\n \n-#: macro.c:94\n+#: macro.cc:94\n msgid \"'##' cannot appear at either end of __VA_OPT__\"\n msgstr \"\"\n \n-#: macro.c:386\n+#: macro.cc:144\n+msgid \"__VA_OPT__ may not appear in a __VA_OPT__\"\n+msgstr \"\"\n+\n+#: macro.cc:157\n+msgid \"__VA_OPT__ must be followed by an open parenthesis\"\n+msgstr \"\"\n+\n+#: macro.cc:235\n+msgid \"unterminated __VA_OPT__\"\n+msgstr \"\"\n+\n+#: macro.cc:397\n #, c-format\n msgid \"\\\"%s\\\" used outside of preprocessing directive\"\n msgstr \"\"\n \n-#: macro.c:396\n+#: macro.cc:407\n #, c-format\n msgid \"missing '(' before \\\"%s\\\" operand\"\n msgstr \"\"\n \n-#: macro.c:411\n+#: macro.cc:422\n #, c-format\n msgid \"operator \\\"%s\\\" requires a header-name\"\n msgstr \"\"\n \n-#: macro.c:428\n+#: macro.cc:439\n #, c-format\n msgid \"missing ')' after \\\"%s\\\" operand\"\n msgstr \"\"\n \n-#: macro.c:448\n+#: macro.cc:459\n #, c-format\n msgid \"macro \\\"%s\\\" is not used\"\n msgstr \"\"\n \n-#: macro.c:487\n-#: macro.c:784\n+#: macro.cc:498\n+#: macro.cc:797\n #, c-format\n msgid \"invalid built-in macro \\\"%s\\\"\"\n msgstr \"\"\n \n-#: macro.c:494\n-#: macro.c:602\n+#: macro.cc:505\n+#: macro.cc:613\n #, c-format\n msgid \"macro \\\"%s\\\" might prevent reproducible builds\"\n msgstr \"\"\n \n-#: macro.c:525\n+#: macro.cc:536\n msgid \"could not determine file timestamp\"\n msgstr \"\"\n \n-#: macro.c:616\n+#: macro.cc:627\n msgid \"could not determine date and time\"\n msgstr \"\"\n \n-#: macro.c:648\n+#: macro.cc:659\n msgid \"__COUNTER__ expanded inside directive with -fdirectives-only\"\n msgstr \"\"\n \n-#: macro.c:903\n+#: macro.cc:916\n msgid \"invalid string literal, ignoring final '\\\\'\"\n msgstr \"\"\n \n-#: macro.c:965\n+#: macro.cc:980\n #, c-format\n-msgid \"pasting \\\"%s\\\" and \\\"%s\\\" does not give a valid preprocessing token\"\n+msgid \"pasting \\\"%.*s\\\" and \\\"%.*s\\\" does not give a valid preprocessing token\"\n msgstr \"\"\n \n-#: macro.c:1091\n+#: macro.cc:1112\n msgid \"\"\n \"ISO C++11 requires at least one argument for the \\\"...\\\" in a variadic macro\"\n msgstr \"\"\n \n-#: macro.c:1095\n+#: macro.cc:1116\n msgid \"\"\n \"ISO C99 requires at least one argument for the \\\"...\\\" in a variadic macro\"\n msgstr \"\"\n \n-#: macro.c:1102\n+#: macro.cc:1123\n #, c-format\n msgid \"macro \\\"%s\\\" requires %u arguments, but only %u given\"\n msgstr \"\"\n \n-#: macro.c:1107\n+#: macro.cc:1128\n #, c-format\n msgid \"macro \\\"%s\\\" passed %u arguments, but takes just %u\"\n msgstr \"\"\n \n-#: macro.c:1305\n-#: traditional.c:822\n+#: macro.cc:1132\n+#, c-format\n+msgid \"macro \\\"%s\\\" defined here\"\n+msgstr \"\"\n+\n+#: macro.cc:1326\n+#: traditional.cc:822\n #, c-format\n msgid \"unterminated argument list invoking macro \\\"%s\\\"\"\n msgstr \"\"\n \n-#: macro.c:1448\n+#: macro.cc:1472\n #, c-format\n msgid \"function-like macro \\\"%s\\\" must be used with arguments in traditional C\"\n msgstr \"\"\n \n-#: macro.c:2226\n+#: macro.cc:2307\n #, c-format\n msgid \"\"\n \"invoking macro %s argument %d: empty macro arguments are undefined in ISO C+\"\n \"+98\"\n msgstr \"\"\n \n-#: macro.c:2234\n-#: macro.c:2243\n+#: macro.cc:2315\n+#: macro.cc:2324\n #, c-format\n msgid \"\"\n \"invoking macro %s argument %d: empty macro arguments are undefined in ISO C90\"\n msgstr \"\"\n \n-#: macro.c:3285\n+#: macro.cc:3375\n #, c-format\n msgid \"duplicate macro parameter \\\"%s\\\"\"\n msgstr \"\"\n \n-#: macro.c:3367\n+#: macro.cc:3457\n #, c-format\n msgid \"expected parameter name, found \\\"%s\\\"\"\n msgstr \"\"\n \n-#: macro.c:3368\n+#: macro.cc:3458\n #, c-format\n msgid \"expected ',' or ')', found \\\"%s\\\"\"\n msgstr \"\"\n \n-#: macro.c:3369\n+#: macro.cc:3459\n msgid \"expected parameter name before end of line\"\n msgstr \"\"\n \n-#: macro.c:3370\n+#: macro.cc:3460\n msgid \"expected ')' before end of line\"\n msgstr \"\"\n \n-#: macro.c:3371\n+#: macro.cc:3461\n msgid \"expected ')' after \\\"...\\\"\"\n msgstr \"\"\n \n-#: macro.c:3428\n+#: macro.cc:3518\n msgid \"anonymous variadic macros were introduced in C++11\"\n msgstr \"\"\n \n-#: macro.c:3429\n-#: macro.c:3433\n+#: macro.cc:3519\n+#: macro.cc:3523\n msgid \"anonymous variadic macros were introduced in C99\"\n msgstr \"\"\n \n-#: macro.c:3439\n+#: macro.cc:3529\n msgid \"ISO C++ does not permit named variadic macros\"\n msgstr \"\"\n \n-#: macro.c:3440\n+#: macro.cc:3530\n msgid \"ISO C does not permit named variadic macros\"\n msgstr \"\"\n \n-#: macro.c:3486\n+#: macro.cc:3576\n msgid \"'##' cannot appear at either end of a macro expansion\"\n msgstr \"\"\n \n-#: macro.c:3524\n+#: macro.cc:3614\n msgid \"ISO C++11 requires whitespace after the macro name\"\n msgstr \"\"\n \n-#: macro.c:3525\n+#: macro.cc:3615\n msgid \"ISO C99 requires whitespace after the macro name\"\n msgstr \"\"\n \n-#: macro.c:3549\n+#: macro.cc:3639\n msgid \"missing whitespace after the macro name\"\n msgstr \"\"\n \n-#: macro.c:3599\n+#: macro.cc:3692\n msgid \"'#' is not followed by a macro parameter\"\n msgstr \"\"\n \n-#: macro.c:3755\n+#: macro.cc:3848\n #, c-format\n msgid \"\\\"%s\\\" redefined\"\n msgstr \"\"\n \n-#: macro.c:3760\n+#: macro.cc:3853\n msgid \"this is the location of the previous definition\"\n msgstr \"\"\n \n-#: macro.c:3897\n+#: macro.cc:3990\n #, c-format\n msgid \"macro argument \\\"%s\\\" would be stringified in traditional C\"\n msgstr \"\"\n \n-#: pch.c:90\n-#: pch.c:342\n-#: pch.c:356\n-#: pch.c:374\n-#: pch.c:380\n-#: pch.c:389\n-#: pch.c:396\n+#: pch.cc:90\n+#: pch.cc:342\n+#: pch.cc:356\n+#: pch.cc:374\n+#: pch.cc:380\n+#: pch.cc:389\n+#: pch.cc:396\n msgid \"while writing precompiled header\"\n msgstr \"\"\n \n-#: pch.c:616\n+#: pch.cc:616\n #, c-format\n msgid \"%s: not used because `%.*s' is poisoned\"\n msgstr \"\"\n \n-#: pch.c:638\n+#: pch.cc:638\n #, c-format\n msgid \"%s: not used because `%.*s' not defined\"\n msgstr \"\"\n \n-#: pch.c:650\n+#: pch.cc:650\n #, c-format\n msgid \"%s: not used because `%.*s' defined as `%s' not `%.*s'\"\n msgstr \"\"\n \n-#: pch.c:691\n+#: pch.cc:691\n #, c-format\n msgid \"%s: not used because `%s' is defined\"\n msgstr \"\"\n \n-#: pch.c:711\n+#: pch.cc:711\n #, c-format\n msgid \"%s: not used because `__COUNTER__' is invalid\"\n msgstr \"\"\n \n-#: pch.c:720\n-#: pch.c:876\n+#: pch.cc:720\n+#: pch.cc:876\n msgid \"while reading precompiled header\"\n msgstr \"\"\n \n-#: traditional.c:891\n+#: traditional.cc:891\n #, c-format\n msgid \"detected recursion whilst expanding macro \\\"%s\\\"\"\n msgstr \"\"\n \n-#: traditional.c:1114\n+#: traditional.cc:1114\n msgid \"syntax error in macro parameter list\"\n msgstr \"\""}]}