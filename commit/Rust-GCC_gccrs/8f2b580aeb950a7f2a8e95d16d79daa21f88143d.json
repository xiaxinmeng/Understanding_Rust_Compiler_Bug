{"sha": "8f2b580aeb950a7f2a8e95d16d79daa21f88143d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGYyYjU4MGFlYjk1MGE3ZjJhOGU5NWQxNmQ3OWRhYTIxZjg4MTQzZA==", "commit": {"author": {"name": "Marc Glisse", "email": "marc.glisse@inria.fr", "date": "2012-10-05T16:20:44Z"}, "committer": {"name": "Marc Glisse", "email": "glisse@gcc.gnu.org", "date": "2012-10-05T16:20:44Z"}, "message": "re PR target/54686 (std::abs (long long) resorts to std::abs (double) if llabs is absent)\n\n2012-10-05  Marc Glisse  <marc.glisse@inria.fr>\n\n\tPR libstdc++/54686\n\t* include/c_std/cstdlib (abs(long long)): Define with\n\t__builtin_llabs when we have long long.\n\t(abs(long)): Use __builtin_labs.\n\t(abs(__int128)): Define when we have __int128.\n\t* testsuite/26_numerics/headers/cstdlib/54686.c: New file.\n\nFrom-SVN: r192132", "tree": {"sha": "1b31d51135c9ba258548f10c45d869ba38f82fe6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1b31d51135c9ba258548f10c45d869ba38f82fe6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8f2b580aeb950a7f2a8e95d16d79daa21f88143d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8f2b580aeb950a7f2a8e95d16d79daa21f88143d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8f2b580aeb950a7f2a8e95d16d79daa21f88143d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8f2b580aeb950a7f2a8e95d16d79daa21f88143d/comments", "author": {"login": "mglisse", "id": 10097863, "node_id": "MDQ6VXNlcjEwMDk3ODYz", "avatar_url": "https://avatars.githubusercontent.com/u/10097863?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mglisse", "html_url": "https://github.com/mglisse", "followers_url": "https://api.github.com/users/mglisse/followers", "following_url": "https://api.github.com/users/mglisse/following{/other_user}", "gists_url": "https://api.github.com/users/mglisse/gists{/gist_id}", "starred_url": "https://api.github.com/users/mglisse/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mglisse/subscriptions", "organizations_url": "https://api.github.com/users/mglisse/orgs", "repos_url": "https://api.github.com/users/mglisse/repos", "events_url": "https://api.github.com/users/mglisse/events{/privacy}", "received_events_url": "https://api.github.com/users/mglisse/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "92e2cbfa6a145ce26711689d21233f89d8c5a3dd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/92e2cbfa6a145ce26711689d21233f89d8c5a3dd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/92e2cbfa6a145ce26711689d21233f89d8c5a3dd"}], "stats": {"total": 57, "additions": 52, "deletions": 5}, "files": [{"sha": "6ae10a8eb11ee9507e2c31689186fd33bfc535d6", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f2b580aeb950a7f2a8e95d16d79daa21f88143d/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f2b580aeb950a7f2a8e95d16d79daa21f88143d/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=8f2b580aeb950a7f2a8e95d16d79daa21f88143d", "patch": "@@ -1,3 +1,12 @@\n+2012-10-05  Marc Glisse  <marc.glisse@inria.fr>\n+\n+\tPR libstdc++/54686\n+\t* include/c_std/cstdlib (abs(long long)): Define with\n+\t__builtin_llabs when we have long long.\n+\t(abs(long)): Use __builtin_labs.\n+\t(abs(__int128)): Define when we have __int128.\n+\t* testsuite/26_numerics/headers/cstdlib/54686.c: New file.\n+\n 2012-10-03  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR libstdc++/53248"}, {"sha": "345920b76c28a6f9c5e6ebdeabc6aee96b157d7e", "filename": "libstdc++-v3/include/c_std/cstdlib", "status": "modified", "additions": 11, "deletions": 5, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f2b580aeb950a7f2a8e95d16d79daa21f88143d/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fcstdlib", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f2b580aeb950a7f2a8e95d16d79daa21f88143d/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fcstdlib", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fcstdlib?ref=8f2b580aeb950a7f2a8e95d16d79daa21f88143d", "patch": "@@ -135,7 +135,17 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n #endif // _GLIBCXX_USE_WCHAR_T\n \n   inline long\n-  abs(long __i) { return labs(__i); }\n+  abs(long __i) { return __builtin_labs(__i); }\n+\n+#ifdef _GLIBCXX_USE_LONG_LONG\n+  inline long long\n+  abs(long long __x) { return __builtin_llabs (__x); }\n+#endif\n+\n+#if !defined(__STRICT_ANSI__) && defined(_GLIBCXX_USE_INT128)\n+  inline __int128\n+  abs(__int128 __x) { return __x >= 0 ? __x : -__x; }\n+#endif\n \n   inline ldiv_t\n   div(long __i, long __j) { return ldiv(__i, __j); }\n@@ -168,9 +178,6 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n   using ::_Exit;\n #endif\n \n-  inline long long\n-  abs(long long __x) { return __x >= 0 ? __x : -__x; }\n-\n #if !_GLIBCXX_USE_C99_LONG_LONG_DYNAMIC\n   using ::llabs;\n \n@@ -205,7 +212,6 @@ namespace std\n   using ::__gnu_cxx::lldiv_t;\n #endif\n   using ::__gnu_cxx::_Exit;\n-  using ::__gnu_cxx::abs;\n #if !_GLIBCXX_USE_C99_LONG_LONG_DYNAMIC\n   using ::__gnu_cxx::llabs;\n   using ::__gnu_cxx::div;"}, {"sha": "fd723c89e7c4a0e36f89a9e633f565f346cc2e29", "filename": "libstdc++-v3/testsuite/26_numerics/headers/cstdlib/54686.c", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f2b580aeb950a7f2a8e95d16d79daa21f88143d/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fheaders%2Fcstdlib%2F54686.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f2b580aeb950a7f2a8e95d16d79daa21f88143d/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fheaders%2Fcstdlib%2F54686.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fheaders%2Fcstdlib%2F54686.c?ref=8f2b580aeb950a7f2a8e95d16d79daa21f88143d", "patch": "@@ -0,0 +1,32 @@\n+// { dg-do compile }\n+// { dg-options \"-std=c++11\" }\n+\n+// Copyright (C) 2012 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+//\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+//\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+#include <cmath>\n+#include <cstdlib>\n+#include <type_traits>\n+#include <utility>\n+\n+#ifdef _GLIBCXX_USE_LONG_LONG\n+void test01()\n+{\n+  static_assert (std::is_same<decltype (std::abs (std::declval<long long> ())),\n+\t\t\t      long long>::value, \"Missing abs(long long)\");\n+}\n+#endif"}]}