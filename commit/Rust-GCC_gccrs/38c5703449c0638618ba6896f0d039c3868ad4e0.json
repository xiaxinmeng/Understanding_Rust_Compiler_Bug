{"sha": "38c5703449c0638618ba6896f0d039c3868ad4e0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzhjNTcwMzQ0OWMwNjM4NjE4YmE2ODk2ZjBkMDM5YzM4NjhhZDRlMA==", "commit": {"author": {"name": "Andrea Corallo", "email": "andrea.corallo@arm.com", "date": "2021-02-03T14:21:54Z"}, "committer": {"name": "Andrea Corallo", "email": "andrea.corallo@arm.com", "date": "2021-02-11T15:20:59Z"}, "message": "arm: Low overhead loop handle long range branches [PR98931]\n\ngcc/\n\tPR target/98931\n\t* config/arm/thumb2.md (*doloop_end_internal): Generate\n\talternative sequence to handle long range branches.\n\ngcc/testsuite/\n\tPR target/98931\n\t* gcc.target/arm/pr98931.c: New testcase.", "tree": {"sha": "848c1145e85db131379e114b139a4ee3b648912d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/848c1145e85db131379e114b139a4ee3b648912d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/38c5703449c0638618ba6896f0d039c3868ad4e0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/38c5703449c0638618ba6896f0d039c3868ad4e0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/38c5703449c0638618ba6896f0d039c3868ad4e0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/38c5703449c0638618ba6896f0d039c3868ad4e0/comments", "author": {"login": "AndreaCorallo", "id": 6765576, "node_id": "MDQ6VXNlcjY3NjU1NzY=", "avatar_url": "https://avatars.githubusercontent.com/u/6765576?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AndreaCorallo", "html_url": "https://github.com/AndreaCorallo", "followers_url": "https://api.github.com/users/AndreaCorallo/followers", "following_url": "https://api.github.com/users/AndreaCorallo/following{/other_user}", "gists_url": "https://api.github.com/users/AndreaCorallo/gists{/gist_id}", "starred_url": "https://api.github.com/users/AndreaCorallo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AndreaCorallo/subscriptions", "organizations_url": "https://api.github.com/users/AndreaCorallo/orgs", "repos_url": "https://api.github.com/users/AndreaCorallo/repos", "events_url": "https://api.github.com/users/AndreaCorallo/events{/privacy}", "received_events_url": "https://api.github.com/users/AndreaCorallo/received_events", "type": "User", "site_admin": false}, "committer": {"login": "AndreaCorallo", "id": 6765576, "node_id": "MDQ6VXNlcjY3NjU1NzY=", "avatar_url": "https://avatars.githubusercontent.com/u/6765576?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AndreaCorallo", "html_url": "https://github.com/AndreaCorallo", "followers_url": "https://api.github.com/users/AndreaCorallo/followers", "following_url": "https://api.github.com/users/AndreaCorallo/following{/other_user}", "gists_url": "https://api.github.com/users/AndreaCorallo/gists{/gist_id}", "starred_url": "https://api.github.com/users/AndreaCorallo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AndreaCorallo/subscriptions", "organizations_url": "https://api.github.com/users/AndreaCorallo/orgs", "repos_url": "https://api.github.com/users/AndreaCorallo/repos", "events_url": "https://api.github.com/users/AndreaCorallo/events{/privacy}", "received_events_url": "https://api.github.com/users/AndreaCorallo/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4af29981ab57ad7ef4467e371e4145cce9c16eaa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4af29981ab57ad7ef4467e371e4145cce9c16eaa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4af29981ab57ad7ef4467e371e4145cce9c16eaa"}], "stats": {"total": 45, "additions": 37, "deletions": 8}, "files": [{"sha": "d7fd96c270eba40f906687b297af20cfdd317bab", "filename": "gcc/config/arm/thumb2.md", "status": "modified", "additions": 20, "deletions": 8, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/38c5703449c0638618ba6896f0d039c3868ad4e0/gcc%2Fconfig%2Farm%2Fthumb2.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/38c5703449c0638618ba6896f0d039c3868ad4e0/gcc%2Fconfig%2Farm%2Fthumb2.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fthumb2.md?ref=38c5703449c0638618ba6896f0d039c3868ad4e0", "patch": "@@ -1711,15 +1711,27 @@\n \n ;; Originally expanded by 'doloop_end'.\n (define_insn \"*doloop_end_internal\"\n-  [(parallel [(set (pc)\n-                   (if_then_else\n-                       (ne (reg:SI LR_REGNUM) (const_int 1))\n-                     (label_ref (match_operand 0 \"\" \"\"))\n-                     (pc)))\n-              (set (reg:SI LR_REGNUM)\n-                   (plus:SI (reg:SI LR_REGNUM) (const_int -1)))])]\n+  [(set (pc)\n+        (if_then_else\n+            (ne (reg:SI LR_REGNUM) (const_int 1))\n+          (label_ref (match_operand 0 \"\" \"\"))\n+          (pc)))\n+   (set (reg:SI LR_REGNUM)\n+        (plus:SI (reg:SI LR_REGNUM) (const_int -1)))\n+   (clobber (reg:CC CC_REGNUM))]\n   \"TARGET_32BIT && TARGET_HAVE_LOB\"\n-  \"le\\t%|lr, %l0\")\n+  {\n+    if (get_attr_length (insn) == 4)\n+      return \"le\\t%|lr, %l0\";\n+    else\n+      return \"subs\\t%|lr, #1;bne\\t%l0\";\n+  }\n+  [(set (attr \"length\")\n+        (if_then_else\n+            (ltu (minus (pc) (match_dup 0)) (const_int 1024))\n+\t    (const_int 4)\n+\t    (const_int 6)))\n+   (set_attr \"type\" \"branch\")])\n \n (define_expand \"doloop_begin\"\n   [(match_operand 0 \"\" \"\")"}, {"sha": "313876a3912e8e5b5a330537c9704b0512e6c6fd", "filename": "gcc/testsuite/gcc.target/arm/pr98931.c", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/38c5703449c0638618ba6896f0d039c3868ad4e0/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fpr98931.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/38c5703449c0638618ba6896f0d039c3868ad4e0/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fpr98931.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fpr98931.c?ref=38c5703449c0638618ba6896f0d039c3868ad4e0", "patch": "@@ -0,0 +1,17 @@\n+/* { dg-do assemble } */\n+/* { dg-skip-if \"avoid conflicting multilib options\" { *-*-* } { \"-marm\" \"-mcpu=*\" } } */\n+/* { dg-options \"-march=armv8.1-m.main -O3 --param=max-completely-peeled-insns=1300 --save-temps\" } */\n+\n+extern long long a[][20][26][26][22];\n+\n+void\n+foo ()\n+{\n+  for (short d = 0; d + 1; d++)\n+    for (unsigned e = 0; e < 25; e += 4)\n+      for (unsigned f = 0; f < 25; f += 4)\n+        for (int g = 0; g < 21; g += 4)\n+          a[4][d][e][f][g] = 0;\n+}\n+\n+/* { dg-final { scan-assembler-not {le\\slr,\\s\\S*} } } */"}]}