{"sha": "8227896cf6130902ab124b04aceeae588545a5ae", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODIyNzg5NmNmNjEzMDkwMmFiMTI0YjA0YWNlZWFlNTg4NTQ1YTVhZQ==", "commit": {"author": {"name": "Tom Wood", "email": "wood@gnu.org", "date": "1992-10-15T11:39:38Z"}, "committer": {"name": "Tom Wood", "email": "wood@gnu.org", "date": "1992-10-15T11:39:38Z"}, "message": "(simple_operand_p): Don't regard global or static variables as simple.\n\n(simple_operand_p): Don't regard global or static\n\tvariables as simple.\n\t(fold_truthop): Only require the RHS to be simple.\n\nFrom-SVN: r2473", "tree": {"sha": "add1f5d6b65775c123656ad4445570d2393fd237", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/add1f5d6b65775c123656ad4445570d2393fd237"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8227896cf6130902ab124b04aceeae588545a5ae", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8227896cf6130902ab124b04aceeae588545a5ae", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8227896cf6130902ab124b04aceeae588545a5ae", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8227896cf6130902ab124b04aceeae588545a5ae/comments", "author": null, "committer": null, "parents": [{"sha": "d15d0264a9edd630fc9500f027864309d9c2141e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d15d0264a9edd630fc9500f027864309d9c2141e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d15d0264a9edd630fc9500f027864309d9c2141e"}], "stats": {"total": 16, "additions": 11, "deletions": 5}, "files": [{"sha": "35bd93894323e7f8e4106efcda674f3caed678bf", "filename": "gcc/fold-const.c", "status": "modified", "additions": 11, "deletions": 5, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8227896cf6130902ab124b04aceeae588545a5ae/gcc%2Ffold-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8227896cf6130902ab124b04aceeae588545a5ae/gcc%2Ffold-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const.c?ref=8227896cf6130902ab124b04aceeae588545a5ae", "patch": "@@ -2424,7 +2424,15 @@ simple_operand_p (exp)\n \t  || (TREE_CODE_CLASS (TREE_CODE (exp)) == 'd'\n \t      && ! TREE_ADDRESSABLE (exp)\n \t      && ! TREE_THIS_VOLATILE (exp)\n-\t      && ! DECL_NONLOCAL (exp)));\n+\t      && ! DECL_NONLOCAL (exp)\n+\t      /* Don't regard global variables as simple.  They may be\n+\t\t allocated in ways unknown to the compiler (shared memory,\n+\t\t #pragma weak, etc).  */\n+\t      && ! TREE_PUBLIC (exp)\n+\t      && ! DECL_EXTERNAL (exp)\n+\t      /* Loading a static variable is unduly expensive, but global\n+\t\t registers aren't expensive.  */\n+\t      && (! TREE_STATIC (exp) || DECL_REGISTER (exp))));\n }\n \f\n /* Subroutine for fold_truthop: try to optimize a range test.\n@@ -2657,7 +2665,7 @@ fold_truthop (code, truth_type, lhs, rhs)\n       return result;\n     }\n \n-  /* If the RHS can be evaluated unconditionally and all operands are\n+  /* If the RHS can be evaluated unconditionally and its operands are\n      simple, it wins to evaluate the RHS unconditionally on machines\n      with expensive branches.  In this case, this isn't a comparison\n      that can be merged.  */\n@@ -2668,9 +2676,7 @@ fold_truthop (code, truth_type, lhs, rhs)\n   if (BRANCH_COST >= 2\n       && TREE_CODE (TREE_TYPE (rhs)) == INTEGER_TYPE\n       && simple_operand_p (rl_arg)\n-      && simple_operand_p (ll_arg)\n-      && simple_operand_p (rr_arg)\n-      && simple_operand_p (lr_arg))\n+      && simple_operand_p (rr_arg))\n     return build (code, truth_type, lhs, rhs);\n \n   /* See if the comparisons can be merged.  Then get all the parameters for"}]}