{"sha": "4de3afd97262723a676861080ba9c6d93d104dca", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGRlM2FmZDk3MjYyNzIzYTY3Njg2MTA4MGJhOWM2ZDkzZDEwNGRjYQ==", "commit": {"author": {"name": "Marc Glisse", "email": "marc.glisse@inria.fr", "date": "2014-04-11T19:23:49Z"}, "committer": {"name": "Marc Glisse", "email": "glisse@gcc.gnu.org", "date": "2014-04-11T19:23:49Z"}, "message": "re PR libstdc++/59434 ([lwg/2106] move_iterator is broken for input iterators with an rvalue as reference type)\n\n2014-04-11  Marc Glisse  <marc.glisse@inria.fr>\n\n\tPR libstdc++/59434\n\t* include/bits/stl_iterator.h (move_iterator::reference,\n\tmove_iterator::operator*): Implement LWG 2106.\n\t* testsuite/24_iterators/move_iterator/dr2106.cc: New file.\n\nFrom-SVN: r209323", "tree": {"sha": "0118e4dad175f402207a2fd5dfbb1b0f0baca2f9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0118e4dad175f402207a2fd5dfbb1b0f0baca2f9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4de3afd97262723a676861080ba9c6d93d104dca", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4de3afd97262723a676861080ba9c6d93d104dca", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4de3afd97262723a676861080ba9c6d93d104dca", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4de3afd97262723a676861080ba9c6d93d104dca/comments", "author": {"login": "mglisse", "id": 10097863, "node_id": "MDQ6VXNlcjEwMDk3ODYz", "avatar_url": "https://avatars.githubusercontent.com/u/10097863?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mglisse", "html_url": "https://github.com/mglisse", "followers_url": "https://api.github.com/users/mglisse/followers", "following_url": "https://api.github.com/users/mglisse/following{/other_user}", "gists_url": "https://api.github.com/users/mglisse/gists{/gist_id}", "starred_url": "https://api.github.com/users/mglisse/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mglisse/subscriptions", "organizations_url": "https://api.github.com/users/mglisse/orgs", "repos_url": "https://api.github.com/users/mglisse/repos", "events_url": "https://api.github.com/users/mglisse/events{/privacy}", "received_events_url": "https://api.github.com/users/mglisse/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "bbe281da97b49f4335b6d9570852c9ab0203b1f3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bbe281da97b49f4335b6d9570852c9ab0203b1f3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bbe281da97b49f4335b6d9570852c9ab0203b1f3"}], "stats": {"total": 49, "additions": 47, "deletions": 2}, "files": [{"sha": "1d0e19a4e51d3d4a3c84ccfe47a3677bd3a364c2", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4de3afd97262723a676861080ba9c6d93d104dca/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4de3afd97262723a676861080ba9c6d93d104dca/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=4de3afd97262723a676861080ba9c6d93d104dca", "patch": "@@ -1,3 +1,10 @@\n+2014-04-11  Marc Glisse  <marc.glisse@inria.fr>\n+\n+\tPR libstdc++/59434\n+\t* include/bits/stl_iterator.h (move_iterator::reference,\n+\tmove_iterator::operator*): Implement LWG 2106.\n+\t* testsuite/24_iterators/move_iterator/dr2106.cc: New file.\n+\n 2014-04-11  Marc Glisse  <marc.glisse@inria.fr>\n \n \t* include/std/complex (__complex_exp, pow): Specify the template"}, {"sha": "16f992c74904094c88f779f7b19bc8c20cac5037", "filename": "libstdc++-v3/include/bits/stl_iterator.h", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4de3afd97262723a676861080ba9c6d93d104dca/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_iterator.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4de3afd97262723a676861080ba9c6d93d104dca/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_iterator.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_iterator.h?ref=4de3afd97262723a676861080ba9c6d93d104dca", "patch": "@@ -965,6 +965,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       _Iterator _M_current;\n \n       typedef iterator_traits<_Iterator>\t\t__traits_type;\n+      typedef typename __traits_type::reference\t\t__base_ref;\n \n     public:\n       typedef _Iterator\t\t\t\t\titerator_type;\n@@ -973,7 +974,11 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       typedef typename __traits_type::difference_type\tdifference_type;\n       // NB: DR 680.\n       typedef _Iterator\t\t\t\t\tpointer;\n-      typedef value_type&&\t\t\t\treference;\n+      // _GLIBCXX_RESOLVE_LIB_DEFECTS\n+      // 2106. move_iterator wrapping iterators returning prvalues\n+      typedef typename conditional<is_reference<__base_ref>::value,\n+\t\t\t typename remove_reference<__base_ref>::type&&,\n+\t\t\t __base_ref>::type\t\treference;\n \n       move_iterator()\n       : _M_current() { }\n@@ -992,7 +997,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n       reference\n       operator*() const\n-      { return std::move(*_M_current); }\n+      { return static_cast<reference>(*_M_current); }\n \n       pointer\n       operator->() const"}, {"sha": "fc155620288d95b62fb09843c16629534d585ebc", "filename": "libstdc++-v3/testsuite/24_iterators/move_iterator/dr2106.cc", "status": "added", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4de3afd97262723a676861080ba9c6d93d104dca/libstdc%2B%2B-v3%2Ftestsuite%2F24_iterators%2Fmove_iterator%2Fdr2106.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4de3afd97262723a676861080ba9c6d93d104dca/libstdc%2B%2B-v3%2Ftestsuite%2F24_iterators%2Fmove_iterator%2Fdr2106.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F24_iterators%2Fmove_iterator%2Fdr2106.cc?ref=4de3afd97262723a676861080ba9c6d93d104dca", "patch": "@@ -0,0 +1,33 @@\n+// { dg-options \"-std=gnu++11\" }\n+// { dg-do compile }\n+\n+// Copyright (C) 2014 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+#include <iterator>\n+#include <type_traits>\n+#include <vector>\n+\n+typedef std::vector<bool>\tVec;\n+typedef Vec::reference\t\tRef;\n+typedef Vec::const_reference\tCRef;\n+typedef Vec::iterator\t\tIt;\n+typedef Vec::const_iterator\tCIt;\n+typedef std::move_iterator<It>\tMIt;\n+typedef std::move_iterator<CIt>\tMCIt;\n+static_assert(std::is_same<MIt::reference, Ref>::value,\"\");\n+static_assert(std::is_same<MCIt::reference, CRef>::value,\"\");"}]}