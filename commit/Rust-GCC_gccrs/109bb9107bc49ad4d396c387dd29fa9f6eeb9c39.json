{"sha": "109bb9107bc49ad4d396c387dd29fa9f6eeb9c39", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTA5YmI5MTA3YmM0OWFkNGQzOTZjMzg3ZGQyOWZhOWY2ZWViOWMzOQ==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2017-09-19T11:57:39Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2017-09-19T11:57:39Z"}, "message": "re PR tree-optimization/82244 (-O2: ICE: tree check: expected ssa_name, have integer_cst in replace_uses_by, at tree-cfg.c:1904)\n\n2017-09-19  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/82244\n\t* tree-vrp.c (remove_range_assertions): Do not propagate\n\ta constant to abnormals but replace the assert with a copy.\n\n\t* gcc.dg/torture/pr82244.c: New testcase.\n\nFrom-SVN: r252973", "tree": {"sha": "f82639aeed94496688ffd3da48cb39012e5ba13e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f82639aeed94496688ffd3da48cb39012e5ba13e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/109bb9107bc49ad4d396c387dd29fa9f6eeb9c39", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/109bb9107bc49ad4d396c387dd29fa9f6eeb9c39", "html_url": "https://github.com/Rust-GCC/gccrs/commit/109bb9107bc49ad4d396c387dd29fa9f6eeb9c39", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/109bb9107bc49ad4d396c387dd29fa9f6eeb9c39/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ffaea1170332667a1533a354dfcedc6d0de4aa5e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ffaea1170332667a1533a354dfcedc6d0de4aa5e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ffaea1170332667a1533a354dfcedc6d0de4aa5e"}], "stats": {"total": 50, "additions": 50, "deletions": 0}, "files": [{"sha": "98806a35f5993c892d08c3a6baf08b7f7830e8bb", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/109bb9107bc49ad4d396c387dd29fa9f6eeb9c39/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/109bb9107bc49ad4d396c387dd29fa9f6eeb9c39/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=109bb9107bc49ad4d396c387dd29fa9f6eeb9c39", "patch": "@@ -1,3 +1,9 @@\n+2017-09-19  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/82244\n+\t* tree-vrp.c (remove_range_assertions): Do not propagate\n+\ta constant to abnormals but replace the assert with a copy.\n+\n 2017-09-19  Alexander Monakov  <amonakov@ispras.ru>\n \n \tPR rtl-optimization/57878"}, {"sha": "a9e49e23bd815df4f0f7c0f00bafa8bcf28fa579", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/109bb9107bc49ad4d396c387dd29fa9f6eeb9c39/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/109bb9107bc49ad4d396c387dd29fa9f6eeb9c39/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=109bb9107bc49ad4d396c387dd29fa9f6eeb9c39", "patch": "@@ -1,3 +1,8 @@\n+2017-09-19  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/82244\n+\t* gcc.dg/torture/pr82244.c: New testcase.\n+\n 2017-09-19  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/69728"}, {"sha": "3b385f97658c4f23bfdc89484b910c6da374d876", "filename": "gcc/testsuite/gcc.dg/torture/pr82244.c", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/109bb9107bc49ad4d396c387dd29fa9f6eeb9c39/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr82244.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/109bb9107bc49ad4d396c387dd29fa9f6eeb9c39/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr82244.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr82244.c?ref=109bb9107bc49ad4d396c387dd29fa9f6eeb9c39", "patch": "@@ -0,0 +1,31 @@\n+/* { dg-do compile } */\n+\n+typedef struct a {\n+  struct a *b;\n+} a;\n+\n+extern int d(void);\n+extern int g(void);\n+extern int h(void);\n+extern int _setjmp(void *);\n+\n+int c(void)\n+{\n+  1 ? d() : 0;\n+\n+  a *e;\n+  while (e) {\n+      e = (e == (a *) c) ? 0 : e->b;\n+      while (e) {\n+\t  int f = 0;\n+\t  g();\n+\t  if (_setjmp(0)) {\n+\t      if (f & 6) {\n+\t\t  ;\n+\t      } else if (f & 2) {\n+\t\t  h();\n+\t      }\n+\t  }\n+      }\n+  }\n+}"}, {"sha": "221a07b6b3fc6ae3cc737d4fc0c811d614e9a705", "filename": "gcc/tree-vrp.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/109bb9107bc49ad4d396c387dd29fa9f6eeb9c39/gcc%2Ftree-vrp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/109bb9107bc49ad4d396c387dd29fa9f6eeb9c39/gcc%2Ftree-vrp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vrp.c?ref=109bb9107bc49ad4d396c387dd29fa9f6eeb9c39", "patch": "@@ -7039,6 +7039,14 @@ remove_range_assertions (void)\n \t\t  FOR_EACH_IMM_USE_ON_STMT (use_p, iter)\n \t\t    SET_USE (use_p, var);\n \t      }\n+\t    /* But do not propagate constants as that is invalid.  */\n+\t    else if (SSA_NAME_OCCURS_IN_ABNORMAL_PHI (lhs))\n+\t      {\n+\t\tgassign *ass = gimple_build_assign (lhs, var);\n+\t\tgsi_replace (&si, ass, true);\n+\t\tgsi_next (&si);\n+\t\tcontinue;\n+\t      }\n \t    else\n \t      replace_uses_by (lhs, var);\n "}]}