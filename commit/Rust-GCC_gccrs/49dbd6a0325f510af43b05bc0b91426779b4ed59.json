{"sha": "49dbd6a0325f510af43b05bc0b91426779b4ed59", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDlkYmQ2YTAzMjVmNTEwYWY0M2IwNWJjMGI5MTQyNjc3OWI0ZWQ1OQ==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2019-07-12T10:15:39Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2019-07-12T10:15:39Z"}, "message": "re PR rtl-optimization/91136 (incorrect move of instruction to delay slot causes application crash in exception handling)\n\n\tPR rtl-optimization/91136\n\t* df-core.c (ACCESSING REFS): Fix typos in comment.\n\t* resource.c (mark_target_live_reg): Add artificial defs that occur at\n\tthe beginning of the block to the initial set of live registers.\n\nFrom-SVN: r273436", "tree": {"sha": "219431365adbc550268ee861300f0c8b2fa5556b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/219431365adbc550268ee861300f0c8b2fa5556b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/49dbd6a0325f510af43b05bc0b91426779b4ed59", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/49dbd6a0325f510af43b05bc0b91426779b4ed59", "html_url": "https://github.com/Rust-GCC/gccrs/commit/49dbd6a0325f510af43b05bc0b91426779b4ed59", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/49dbd6a0325f510af43b05bc0b91426779b4ed59/comments", "author": null, "committer": null, "parents": [{"sha": "831e688af50c5f77a2daa3cd3bfd0f27d54d5d72", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/831e688af50c5f77a2daa3cd3bfd0f27d54d5d72", "html_url": "https://github.com/Rust-GCC/gccrs/commit/831e688af50c5f77a2daa3cd3bfd0f27d54d5d72"}], "stats": {"total": 17, "additions": 14, "deletions": 3}, "files": [{"sha": "7f01af33edbbb18bcd9889bf3240fe735d0f7ccc", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/49dbd6a0325f510af43b05bc0b91426779b4ed59/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/49dbd6a0325f510af43b05bc0b91426779b4ed59/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=49dbd6a0325f510af43b05bc0b91426779b4ed59", "patch": "@@ -1,3 +1,10 @@\n+2019-07-12  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\tPR rtl-optimization/91136\n+\t* df-core.c (ACCESSING REFS): Fix typos in comment.\n+\t* resource.c (mark_target_live_reg): Add artificial defs that occur at\n+\tthe beginning of the block to the initial set of live registers.\n+\n 2019-07-12  Richard Biener  <rguenther@suse.de>\n \n \t* fold-const.h (get_array_ctor_element_at_index): Adjust."}, {"sha": "be19aba0f1e1188c53c2c3770a2e913bcebe4d84", "filename": "gcc/df-core.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/49dbd6a0325f510af43b05bc0b91426779b4ed59/gcc%2Fdf-core.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/49dbd6a0325f510af43b05bc0b91426779b4ed59/gcc%2Fdf-core.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdf-core.c?ref=49dbd6a0325f510af43b05bc0b91426779b4ed59", "patch": "@@ -298,12 +298,12 @@ There are 4 ways to obtain access to refs:\n \n    Artificial defs and uses occur both at the beginning and ends of blocks.\n \n-     For blocks that area at the destination of eh edges, the\n+     For blocks that are at the destination of eh edges, the\n      artificial uses and defs occur at the beginning.  The defs relate\n      to the registers specified in EH_RETURN_DATA_REGNO and the uses\n-     relate to the registers specified in ED_USES.  Logically these\n+     relate to the registers specified in EH_USES.  Logically these\n      defs and uses should really occur along the eh edge, but there is\n-     no convenient way to do this.  Artificial edges that occur at the\n+     no convenient way to do this.  Artificial defs that occur at the\n      beginning of the block have the DF_REF_AT_TOP flag set.\n \n      Artificial uses occur at the end of all blocks.  These arise from"}, {"sha": "c4bcfd7dc71cb84ec1fd40369ad2196294150895", "filename": "gcc/resource.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/49dbd6a0325f510af43b05bc0b91426779b4ed59/gcc%2Fresource.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/49dbd6a0325f510af43b05bc0b91426779b4ed59/gcc%2Fresource.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fresource.c?ref=49dbd6a0325f510af43b05bc0b91426779b4ed59", "patch": "@@ -987,9 +987,13 @@ mark_target_live_regs (rtx_insn *insns, rtx target_maybe_return, struct resource\n     {\n       regset regs_live = DF_LR_IN (BASIC_BLOCK_FOR_FN (cfun, b));\n       rtx_insn *start_insn, *stop_insn;\n+      df_ref def;\n \n       /* Compute hard regs live at start of block.  */\n       REG_SET_TO_HARD_REG_SET (current_live_regs, regs_live);\n+      FOR_EACH_ARTIFICIAL_DEF (def, b)\n+\tif (DF_REF_FLAGS (def) & DF_REF_AT_TOP)\n+\t  SET_HARD_REG_BIT (current_live_regs, DF_REF_REGNO (def));\n \n       /* Get starting and ending insn, handling the case where each might\n \t be a SEQUENCE.  */"}]}