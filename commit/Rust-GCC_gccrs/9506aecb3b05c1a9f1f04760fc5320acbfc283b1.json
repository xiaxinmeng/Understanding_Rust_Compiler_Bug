{"sha": "9506aecb3b05c1a9f1f04760fc5320acbfc283b1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTUwNmFlY2IzYjA1YzFhOWYxZjA0NzYwZmM1MzIwYWNiZmMyODNiMQ==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2012-10-15T10:48:17Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2012-10-15T10:48:17Z"}, "message": "expr.c (expand_expr_real_1): Do not unnecessarily copy the object in the MEM_P case.\n\n\t* expr.c (expand_expr_real_1) <VIEW_CONVERT_EXPR>: Do not unnecessarily\n\tcopy the object in the MEM_P case.\n\nFrom-SVN: r192452", "tree": {"sha": "cf71a31c094d976a5684e5387e5079bfd0807bb6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cf71a31c094d976a5684e5387e5079bfd0807bb6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9506aecb3b05c1a9f1f04760fc5320acbfc283b1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9506aecb3b05c1a9f1f04760fc5320acbfc283b1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9506aecb3b05c1a9f1f04760fc5320acbfc283b1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9506aecb3b05c1a9f1f04760fc5320acbfc283b1/comments", "author": null, "committer": null, "parents": [{"sha": "0127aae46a182abeadf7419088ad85c9ba5bffc8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0127aae46a182abeadf7419088ad85c9ba5bffc8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0127aae46a182abeadf7419088ad85c9ba5bffc8"}], "stats": {"total": 56, "additions": 52, "deletions": 4}, "files": [{"sha": "2c7af2a0735af68a1027855eb1dddecd2c1756ef", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9506aecb3b05c1a9f1f04760fc5320acbfc283b1/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9506aecb3b05c1a9f1f04760fc5320acbfc283b1/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9506aecb3b05c1a9f1f04760fc5320acbfc283b1", "patch": "@@ -1,3 +1,8 @@\n+2012-10-15  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* expr.c (expand_expr_real_1) <VIEW_CONVERT_EXPR>: Do not unnecessarily\n+\tcopy the object in the MEM_P case.\n+\n 2012-10-15  Richard Guenther  <rguenther@suse.de>\n \n \t* tree-streamer-out.c (streamer_pack_tree_bitfields): Back\n@@ -37,7 +42,6 @@\n \t(build_insn_chain): Use df_get_live_out instead of DF_LR_OUT.\n \t(do_reload): Remove the DF_LIVE problem for -O1.\n \n-\n 2012-10-14  Steven Bosscher  <steven@gcc.gnu.org>\n \n \tPR rtl-optimization/54919"}, {"sha": "7cf812d3e3ab3db0f2e25234941611c1b46bd51e", "filename": "gcc/expr.c", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9506aecb3b05c1a9f1f04760fc5320acbfc283b1/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9506aecb3b05c1a9f1f04760fc5320acbfc283b1/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=9506aecb3b05c1a9f1f04760fc5320acbfc283b1", "patch": "@@ -10270,10 +10270,15 @@ expand_expr_real_1 (tree exp, rtx target, enum machine_mode tmode,\n \t{\n \t  enum insn_code icode;\n \n-\t  op0 = copy_rtx (op0);\n-\n \t  if (TYPE_ALIGN_OK (type))\n-\t    set_mem_align (op0, MAX (MEM_ALIGN (op0), TYPE_ALIGN (type)));\n+\t    {\n+\t      /* ??? Copying the MEM without substantially changing it might\n+\t\t run afoul of the code handling volatile memory references in\n+\t\t store_expr, which assumes that TARGET is returned unmodified\n+\t\t if it has been used.  */\n+\t      op0 = copy_rtx (op0);\n+\t      set_mem_align (op0, MAX (MEM_ALIGN (op0), TYPE_ALIGN (type)));\n+\t    }\n \t  else if (mode != BLKmode\n \t\t   && MEM_ALIGN (op0) < GET_MODE_ALIGNMENT (mode)\n \t\t   /* If the target does have special handling for unaligned"}, {"sha": "23f8c2e0dd4cd3276af5426d154fc41482be8827", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9506aecb3b05c1a9f1f04760fc5320acbfc283b1/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9506aecb3b05c1a9f1f04760fc5320acbfc283b1/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=9506aecb3b05c1a9f1f04760fc5320acbfc283b1", "patch": "@@ -1,3 +1,7 @@\n+2012-10-15  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gnat.dg/unchecked_convert9.ad[sb]: New test.\n+\n 2012-10-13  Jason Merrill  <jason@redhat.com>\n \n \t* g++.dg/tls/thread_local7g.C: Require tls_native."}, {"sha": "133f3b94c6a0c2080e3e3e640dad3832f1ea9d18", "filename": "gcc/testsuite/gnat.dg/unchecked_convert9.adb", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9506aecb3b05c1a9f1f04760fc5320acbfc283b1/gcc%2Ftestsuite%2Fgnat.dg%2Funchecked_convert9.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9506aecb3b05c1a9f1f04760fc5320acbfc283b1/gcc%2Ftestsuite%2Fgnat.dg%2Funchecked_convert9.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Funchecked_convert9.adb?ref=9506aecb3b05c1a9f1f04760fc5320acbfc283b1", "patch": "@@ -0,0 +1,15 @@\n+-- { dg-do compile }\n+-- { dg-options \"-O -fdump-rtl-final\" }\n+\n+package body Unchecked_Convert9 is\n+\n+   procedure Proc is\n+     L : Unsigned_32 := 16#55557777#;\n+   begin\n+     Var := Conv (L);\n+   end;\n+\n+end Unchecked_Convert9;\n+\n+-- { dg-final { scan-rtl-dump-times \"set \\\\(mem/v\" 1 \"final\" } }\n+-- { dg-final { cleanup-rtl-dump \"final\" } }"}, {"sha": "d4595f52a0258777d35f79f3879ac449d7678d08", "filename": "gcc/testsuite/gnat.dg/unchecked_convert9.ads", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9506aecb3b05c1a9f1f04760fc5320acbfc283b1/gcc%2Ftestsuite%2Fgnat.dg%2Funchecked_convert9.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9506aecb3b05c1a9f1f04760fc5320acbfc283b1/gcc%2Ftestsuite%2Fgnat.dg%2Funchecked_convert9.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Funchecked_convert9.ads?ref=9506aecb3b05c1a9f1f04760fc5320acbfc283b1", "patch": "@@ -0,0 +1,20 @@\n+with System;\n+with Ada.Unchecked_Conversion;\n+with Interfaces; use Interfaces;\n+\n+package Unchecked_Convert9 is\n+\n+   type R is record\n+     H : Unsigned_16;\n+     L : Unsigned_16;\n+   end record;\n+\n+   Var : R;\n+   pragma Volatile (Var);\n+\n+   function Conv is new\n+     Ada.Unchecked_Conversion (Source => Unsigned_32, Target => R);\n+\n+   procedure Proc;\n+\n+end Unchecked_Convert9;"}]}