{"sha": "c9552bff091dae74d992b04fde8050e892761dae", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Yzk1NTJiZmYwOTFkYWU3NGQ5OTJiMDRmZGU4MDUwZTg5Mjc2MWRhZQ==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2011-10-19T10:27:50Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2011-10-19T10:27:50Z"}, "message": "cgraphunit.c (handle_alias_pairs): Also handle wekref with destination declared.\n\n\n\t* cgraphunit.c (handle_alias_pairs): Also handle wekref with destination\n\tdeclared.\n\t(output_weakrefs): New function.\n\t* varpool.c (varpool_create_variable_alias): Handle external aliases.\n\nFrom-SVN: r180181", "tree": {"sha": "4656b89b69afb0c42224eaeeaa3e0c4e8a753185", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4656b89b69afb0c42224eaeeaa3e0c4e8a753185"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c9552bff091dae74d992b04fde8050e892761dae", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c9552bff091dae74d992b04fde8050e892761dae", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c9552bff091dae74d992b04fde8050e892761dae", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c9552bff091dae74d992b04fde8050e892761dae/comments", "author": null, "committer": null, "parents": [{"sha": "091751993553dae197bfda9230f15d9cb9dd86df", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/091751993553dae197bfda9230f15d9cb9dd86df", "html_url": "https://github.com/Rust-GCC/gccrs/commit/091751993553dae197bfda9230f15d9cb9dd86df"}], "stats": {"total": 43, "additions": 37, "deletions": 6}, "files": [{"sha": "edaa4b7685c51024034bca3bbbd6934d9361bb51", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9552bff091dae74d992b04fde8050e892761dae/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9552bff091dae74d992b04fde8050e892761dae/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c9552bff091dae74d992b04fde8050e892761dae", "patch": "@@ -1,3 +1,10 @@\n+2011-10-19  Jan Hubicka  <jh@suse.cz>\n+\n+\t* cgraphunit.c (handle_alias_pairs): Also handle wekref with destination\n+\tdeclared.\n+\t(output_weakrefs): New function.\n+\t* varpool.c (varpool_create_variable_alias): Handle external aliases.\n+\n 2011-10-19  Jakub Jelinek  <jakub@redhat.com>\n \n \t* dwarf2out.c (loc_descriptor): For SUBREG pass SUBREG_REG's mode as"}, {"sha": "26c69aecd44e9c4ed18f5ddbc0b288effb207496", "filename": "gcc/cgraphunit.c", "status": "modified", "additions": 26, "deletions": 4, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9552bff091dae74d992b04fde8050e892761dae/gcc%2Fcgraphunit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9552bff091dae74d992b04fde8050e892761dae/gcc%2Fcgraphunit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcgraphunit.c?ref=c9552bff091dae74d992b04fde8050e892761dae", "patch": "@@ -1219,7 +1219,6 @@ handle_alias_pairs (void)\n   for (i = 0; VEC_iterate (alias_pair, alias_pairs, i, p);)\n     {\n       if (TREE_CODE (p->decl) == FUNCTION_DECL\n-\t   && !lookup_attribute (\"weakref\", DECL_ATTRIBUTES (p->decl))\n \t  && (target_node = cgraph_node_for_asm (p->target)) != NULL)\n \t{\n \t  src_node = cgraph_get_node (p->decl);\n@@ -1231,12 +1230,12 @@ handle_alias_pairs (void)\n \t     However for weakref we insist on EXTERNAL flag being set.\n \t     See gcc.dg/attr-alias-5.c  */\n \t  if (DECL_EXTERNAL (p->decl))\n-\t    DECL_EXTERNAL (p->decl) = 0;\n+\t    DECL_EXTERNAL (p->decl) = lookup_attribute (\"weakref\",\n+\t\t\t\t\t\t\tDECL_ATTRIBUTES (p->decl)) != NULL;\n \t  cgraph_create_function_alias (p->decl, target_node->decl);\n \t  VEC_unordered_remove (alias_pair, alias_pairs, i);\n \t}\n       else if (TREE_CODE (p->decl) == VAR_DECL\n-\t       && !lookup_attribute (\"weakref\", DECL_ATTRIBUTES (p->decl))\n \t       && (target_vnode = varpool_node_for_asm (p->target)) != NULL)\n \t{\n \t  /* Normally EXTERNAL flag is used to mark external inlines,\n@@ -1245,7 +1244,8 @@ handle_alias_pairs (void)\n \t     However for weakref we insist on EXTERNAL flag being set.\n \t     See gcc.dg/attr-alias-5.c  */\n \t  if (DECL_EXTERNAL (p->decl))\n-\t    DECL_EXTERNAL (p->decl) = 0;\n+\t    DECL_EXTERNAL (p->decl) = lookup_attribute (\"weakref\",\n+\t\t\t\t\t\t\tDECL_ATTRIBUTES (p->decl)) != NULL;\n \t  varpool_create_variable_alias (p->decl, target_vnode->decl);\n \t  VEC_unordered_remove (alias_pair, alias_pairs, i);\n \t}\n@@ -2064,6 +2064,26 @@ ipa_passes (void)\n   bitmap_obstack_release (NULL);\n }\n \n+/* Weakrefs may be associated to external decls and thus not output\n+   at expansion time.  Emit all neccesary aliases.  */\n+\n+void\n+output_weakrefs (void)\n+{\n+  struct cgraph_node *node;\n+  struct varpool_node *vnode;\n+  for (node = cgraph_nodes; node; node = node->next)\n+    if (node->alias && node->thunk.alias && DECL_EXTERNAL (node->decl)\n+        && !TREE_ASM_WRITTEN (node->decl))\n+      assemble_alias (node->decl,\n+\t\t      DECL_ASSEMBLER_NAME (node->thunk.alias));\n+  for (vnode = varpool_nodes; vnode; vnode = vnode->next)\n+    if (vnode->alias && vnode->alias_of && DECL_EXTERNAL (vnode->decl)\n+        && !TREE_ASM_WRITTEN (vnode->decl))\n+      assemble_alias (vnode->decl,\n+\t\t      DECL_ASSEMBLER_NAME (vnode->alias_of));\n+}\n+\n \n /* Perform simple optimizations based on callgraph.  */\n \n@@ -2150,6 +2170,8 @@ cgraph_optimize (void)\n \n       varpool_assemble_pending_decls ();\n     }\n+\n+  output_weakrefs ();\n   cgraph_process_new_functions ();\n   cgraph_state = CGRAPH_STATE_FINISHED;\n "}, {"sha": "e342a9109d9cdb0684f15efaa50aa0a9b37e226e", "filename": "gcc/varpool.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9552bff091dae74d992b04fde8050e892761dae/gcc%2Fvarpool.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9552bff091dae74d992b04fde8050e892761dae/gcc%2Fvarpool.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvarpool.c?ref=c9552bff091dae74d992b04fde8050e892761dae", "patch": "@@ -703,9 +703,11 @@ varpool_create_variable_alias (tree alias, tree decl)\n   gcc_assert (TREE_CODE (alias) == VAR_DECL);\n   alias_node = varpool_node (alias);\n   alias_node->alias = 1;\n-  alias_node->finalized = 1;\n+  if (!DECL_EXTERNAL (alias))\n+    alias_node->finalized = 1;\n   alias_node->alias_of = decl;\n-  if (decide_is_variable_needed (alias_node, alias)\n+  if ((!DECL_EXTERNAL (alias)\n+       && decide_is_variable_needed (alias_node, alias))\n       || alias_node->needed)\n     varpool_mark_needed_node (alias_node);\n   return alias_node;"}]}