{"sha": "e8e3054e505a153e52aa3d8888bfc91610c006f7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZThlMzA1NGU1MDVhMTUzZTUyYWEzZDg4ODhiZmM5MTYxMGMwMDZmNw==", "commit": {"author": {"name": "Jan Hubicka", "email": "hubicka@ucw.cz", "date": "2018-01-02T09:31:47Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2018-01-02T09:31:47Z"}, "message": "re PR target/81616 (Update -mtune=generic for the current Intel and AMD processors)\n\n\n\tPR target/81616\n\t* x86-tune-costs.h (generic_cost): Reduce cost of FDIV 20->17,\n\tcost of sqrt 20->14, DIVSS 18->13, DIVSD 32->17, SQRtSS 30->14\n\tand SQRTsD 58->18, cond_not_taken_branch_cost. 2->1. Increase\n\tcond_taken_branch_cost 3->4.\n\nFrom-SVN: r256070", "tree": {"sha": "a418c46327a33dd1655e0e6232af87e8107c9035", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a418c46327a33dd1655e0e6232af87e8107c9035"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e8e3054e505a153e52aa3d8888bfc91610c006f7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e8e3054e505a153e52aa3d8888bfc91610c006f7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e8e3054e505a153e52aa3d8888bfc91610c006f7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e8e3054e505a153e52aa3d8888bfc91610c006f7/comments", "author": null, "committer": null, "parents": [{"sha": "c1177db4fa8c12395a52bb11bb50df86cd371727", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c1177db4fa8c12395a52bb11bb50df86cd371727", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c1177db4fa8c12395a52bb11bb50df86cd371727"}], "stats": {"total": 24, "additions": 16, "deletions": 8}, "files": [{"sha": "57e31cb85eef7fed370ac21ec05c6187546d03ee", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8e3054e505a153e52aa3d8888bfc91610c006f7/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8e3054e505a153e52aa3d8888bfc91610c006f7/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e8e3054e505a153e52aa3d8888bfc91610c006f7", "patch": "@@ -1,3 +1,11 @@\n+2018-01-02  Jan Hubicka  <hubicka@ucw.cz>\n+\n+\tPR target/81616\n+\t* x86-tune-costs.h (generic_cost): Reduce cost of FDIV 20->17,\n+\tcost of sqrt 20->14, DIVSS 18->13, DIVSD 32->17, SQRtSS 30->14\n+\tand SQRTsD 58->18, cond_not_taken_branch_cost. 2->1. Increase\n+\tcond_taken_branch_cost 3->4.\n+\n 2018-01-01  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR tree-optimization/83581"}, {"sha": "eff7f7f6bbfc2e32e6905108d97a847291cf6c0b", "filename": "gcc/config/i386/x86-tune-costs.h", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8e3054e505a153e52aa3d8888bfc91610c006f7/gcc%2Fconfig%2Fi386%2Fx86-tune-costs.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8e3054e505a153e52aa3d8888bfc91610c006f7/gcc%2Fconfig%2Fi386%2Fx86-tune-costs.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fx86-tune-costs.h?ref=e8e3054e505a153e52aa3d8888bfc91610c006f7", "patch": "@@ -2293,26 +2293,26 @@ struct processor_costs generic_cost = {\n   3,\t\t\t\t\t/* Branch cost */\n   COSTS_N_INSNS (3),\t\t\t/* cost of FADD and FSUB insns.  */\n   COSTS_N_INSNS (5),\t\t\t/* cost of FMUL instruction.  */\n-  COSTS_N_INSNS (20),\t\t\t/* cost of FDIV instruction.  */\n+  COSTS_N_INSNS (17),\t\t\t/* cost of FDIV instruction.  */\n   COSTS_N_INSNS (1),\t\t\t/* cost of FABS instruction.  */\n   COSTS_N_INSNS (1),\t\t\t/* cost of FCHS instruction.  */\n-  COSTS_N_INSNS (20),\t\t\t/* cost of FSQRT instruction.  */\n+  COSTS_N_INSNS (14),\t\t\t/* cost of FSQRT instruction.  */\n \n   COSTS_N_INSNS (1),\t\t\t/* cost of cheap SSE instruction.  */\n   COSTS_N_INSNS (3),\t\t\t/* cost of ADDSS/SD SUBSS/SD insns.  */\n   COSTS_N_INSNS (4),\t\t\t/* cost of MULSS instruction.  */\n   COSTS_N_INSNS (5),\t\t\t/* cost of MULSD instruction.  */\n   COSTS_N_INSNS (5),\t\t\t/* cost of FMA SS instruction.  */\n   COSTS_N_INSNS (5),\t\t\t/* cost of FMA SD instruction.  */\n-  COSTS_N_INSNS (18),\t\t\t/* cost of DIVSS instruction.  */\n-  COSTS_N_INSNS (32),\t\t\t/* cost of DIVSD instruction.  */\n-  COSTS_N_INSNS (30),\t\t\t/* cost of SQRTSS instruction.  */\n-  COSTS_N_INSNS (58),\t\t\t/* cost of SQRTSD instruction.  */\n+  COSTS_N_INSNS (13),\t\t\t/* cost of DIVSS instruction.  */\n+  COSTS_N_INSNS (17),\t\t\t/* cost of DIVSD instruction.  */\n+  COSTS_N_INSNS (14),\t\t\t/* cost of SQRTSS instruction.  */\n+  COSTS_N_INSNS (18),\t\t\t/* cost of SQRTSD instruction.  */\n   1, 4, 3, 3,\t\t\t\t/* reassoc int, fp, vec_int, vec_fp.  */\n   generic_memcpy,\n   generic_memset,\n-  COSTS_N_INSNS (3),\t\t\t/* cond_taken_branch_cost.  */\n-  COSTS_N_INSNS (1),\t\t\t/* cond_not_taken_branch_cost.  */\n+  COSTS_N_INSNS (4),\t\t\t/* cond_taken_branch_cost.  */\n+  COSTS_N_INSNS (2),\t\t\t/* cond_not_taken_branch_cost.  */\n };\n \n /* core_cost should produce code tuned for Core familly of CPUs.  */"}]}