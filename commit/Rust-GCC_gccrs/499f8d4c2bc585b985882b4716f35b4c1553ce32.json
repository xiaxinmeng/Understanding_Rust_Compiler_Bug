{"sha": "499f8d4c2bc585b985882b4716f35b4c1553ce32", "node_id": "C_kwDOANBUbNoAKDQ5OWY4ZDRjMmJjNTg1Yjk4NTg4MmI0NzE2ZjM1YjRjMTU1M2NlMzI", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2022-02-09T19:45:31Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2022-02-09T19:46:10Z"}, "message": "c: Fix up __builtin_assoc_barrier handling in the C FE [PR104427]\n\nThe following testcase ICEs, because when creating PAREN_EXPR for\n__builtin_assoc_barrier the FE doesn't do the usual tweaks for\nEXCESS_PRECISION_EXPR or C_MAYBE_CONST_EXPR.  I believe that the\ndeclared effect of the builtin is just association barrier, so\ne.g. excess precision should be still handled like if it wasn't\nthere.\n\nThe following patch uses build_unary_op to handle those.\n\n2022-02-09  Jakub Jelinek  <jakub@redhat.com>\n\n\tPR c/104427\n\t* c-parser.cc (c_parser_postfix_expression)\n\t<case RID_BUILTIN_ASSOC_BARRIER>: Use parser_build_unary_op\n\tinstead of build1_loc to build PAREN_EXPR.\n\t* c-typeck.cc (build_unary_op): Handle PAREN_EXPR.\n\t* c-fold.cc (c_fully_fold_internal): Likewise.\n\n\t* gcc.dg/pr104427.c: New test.", "tree": {"sha": "0ccfe39e85279e622704fc53b6b2d72b86cd1554", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0ccfe39e85279e622704fc53b6b2d72b86cd1554"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/499f8d4c2bc585b985882b4716f35b4c1553ce32", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/499f8d4c2bc585b985882b4716f35b4c1553ce32", "html_url": "https://github.com/Rust-GCC/gccrs/commit/499f8d4c2bc585b985882b4716f35b4c1553ce32", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/499f8d4c2bc585b985882b4716f35b4c1553ce32/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2f9ab267e725ddf2b6b44113e4fc4fb8b2a6adfb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2f9ab267e725ddf2b6b44113e4fc4fb8b2a6adfb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2f9ab267e725ddf2b6b44113e4fc4fb8b2a6adfb"}], "stats": {"total": 21, "additions": 19, "deletions": 2}, "files": [{"sha": "76ea25b3d7febeda3b1b65b4656a0e43f9d7ad60", "filename": "gcc/c/c-fold.cc", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/499f8d4c2bc585b985882b4716f35b4c1553ce32/gcc%2Fc%2Fc-fold.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/499f8d4c2bc585b985882b4716f35b4c1553ce32/gcc%2Fc%2Fc-fold.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2Fc-fold.cc?ref=499f8d4c2bc585b985882b4716f35b4c1553ce32", "patch": "@@ -465,6 +465,7 @@ c_fully_fold_internal (tree expr, bool in_init, bool *maybe_const_operands,\n     case BIT_NOT_EXPR:\n     case TRUTH_NOT_EXPR:\n     case CONJ_EXPR:\n+    case PAREN_EXPR:\n     unary:\n       /* Unary operations.  */\n       orig_op0 = op0 = TREE_OPERAND (expr, 0);"}, {"sha": "7e81c33de1154a6dd41383bd9b09f9c4acdf5fff", "filename": "gcc/c/c-parser.cc", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/499f8d4c2bc585b985882b4716f35b4c1553ce32/gcc%2Fc%2Fc-parser.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/499f8d4c2bc585b985882b4716f35b4c1553ce32/gcc%2Fc%2Fc-parser.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2Fc-parser.cc?ref=499f8d4c2bc585b985882b4716f35b4c1553ce32", "patch": "@@ -10128,8 +10128,7 @@ c_parser_postfix_expression (c_parser *parser)\n \t    mark_exp_read (e1.value);\n \t    location_t end_loc = c_parser_peek_token (parser)->get_finish ();\n \t    parens.skip_until_found_close (parser);\n-\t    expr.value = build1_loc (loc, PAREN_EXPR, TREE_TYPE (e1.value),\n-\t\t\t\t     e1.value);\n+\t    expr = parser_build_unary_op (loc, PAREN_EXPR, e1);\n \t    set_c_expr_source_range (&expr, start_loc, end_loc);\n \t  }\n \t  break;"}, {"sha": "39094cc6f5075fb5a78b2c49190c9a7965a96347", "filename": "gcc/c/c-typeck.cc", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/499f8d4c2bc585b985882b4716f35b4c1553ce32/gcc%2Fc%2Fc-typeck.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/499f8d4c2bc585b985882b4716f35b4c1553ce32/gcc%2Fc%2Fc-typeck.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2Fc-typeck.cc?ref=499f8d4c2bc585b985882b4716f35b4c1553ce32", "patch": "@@ -4921,6 +4921,10 @@ build_unary_op (location_t location, enum tree_code code, tree xarg,\n       ret = val;\n       goto return_build_unary_op;\n \n+    case PAREN_EXPR:\n+      ret = build1 (code, TREE_TYPE (arg), arg);\n+      goto return_build_unary_op;\n+\n     default:\n       gcc_unreachable ();\n     }"}, {"sha": "397cb13b669699aa75c4f0f4e5c780bbfeb21313", "filename": "gcc/testsuite/gcc.dg/pr104427.c", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/499f8d4c2bc585b985882b4716f35b4c1553ce32/gcc%2Ftestsuite%2Fgcc.dg%2Fpr104427.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/499f8d4c2bc585b985882b4716f35b4c1553ce32/gcc%2Ftestsuite%2Fgcc.dg%2Fpr104427.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr104427.c?ref=499f8d4c2bc585b985882b4716f35b4c1553ce32", "patch": "@@ -0,0 +1,13 @@\n+/* PR c/104427 */\n+/* { dg-do compile } */\n+/* { dg-options \"\" } */\n+/* { dg-add-options float16 } */\n+/* { dg-require-effective-target float16 } */\n+\n+_Float16 x, y;\n+\n+int\n+foo ()\n+{\n+  return __builtin_assoc_barrier (x + y) - y;\n+}"}]}