{"sha": "1d4af1e827fad674218523d2e91c6aed1f5729c4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWQ0YWYxZTgyN2ZhZDY3NDIxODUyM2QyZTkxYzZhZWQxZjU3MjljNA==", "commit": {"author": {"name": "Sebastian Pop", "email": "sebastian.pop@amd.com", "date": "2008-01-16T02:44:04Z"}, "committer": {"name": "Sebastian Pop", "email": "spop@gcc.gnu.org", "date": "2008-01-16T02:44:04Z"}, "message": "tree-parloops.c (loop_has_blocks_with_irreducible_flag): New.\n\n2008-01-12  Sebastian Pop  <sebastian.pop@amd.com>\n\n\t* tree-parloops.c (loop_has_blocks_with_irreducible_flag): New.\n\t(parallelize_loops): Don't parallelize irreducible components.\n\nFrom-SVN: r131561", "tree": {"sha": "fcbdd6bf910f9bbcdd7e090cf671cb1963ae6c39", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fcbdd6bf910f9bbcdd7e090cf671cb1963ae6c39"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1d4af1e827fad674218523d2e91c6aed1f5729c4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1d4af1e827fad674218523d2e91c6aed1f5729c4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1d4af1e827fad674218523d2e91c6aed1f5729c4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1d4af1e827fad674218523d2e91c6aed1f5729c4/comments", "author": null, "committer": {"login": "sebpop", "id": 568397, "node_id": "MDQ6VXNlcjU2ODM5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/568397?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sebpop", "html_url": "https://github.com/sebpop", "followers_url": "https://api.github.com/users/sebpop/followers", "following_url": "https://api.github.com/users/sebpop/following{/other_user}", "gists_url": "https://api.github.com/users/sebpop/gists{/gist_id}", "starred_url": "https://api.github.com/users/sebpop/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sebpop/subscriptions", "organizations_url": "https://api.github.com/users/sebpop/orgs", "repos_url": "https://api.github.com/users/sebpop/repos", "events_url": "https://api.github.com/users/sebpop/events{/privacy}", "received_events_url": "https://api.github.com/users/sebpop/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8c87e2452fbb98d147135995ca3a05ab851e2789", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8c87e2452fbb98d147135995ca3a05ab851e2789", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8c87e2452fbb98d147135995ca3a05ab851e2789"}], "stats": {"total": 26, "additions": 26, "deletions": 0}, "files": [{"sha": "b8c9e965d300476c1ffd19e2adb6a07e0bce5ca7", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d4af1e827fad674218523d2e91c6aed1f5729c4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d4af1e827fad674218523d2e91c6aed1f5729c4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1d4af1e827fad674218523d2e91c6aed1f5729c4", "patch": "@@ -1,3 +1,8 @@\n+2008-01-12  Sebastian Pop  <sebastian.pop@amd.com>\n+\n+\t* tree-parloops.c (loop_has_blocks_with_irreducible_flag): New.\n+\t(parallelize_loops): Don't parallelize irreducible components.\n+\n 2008-01-14  Manuel Lopez-Ibanez  <manu@gcc.gnu.org>\n \n \tPR c++/24924"}, {"sha": "3b3176c5520f273856a7f06dddee22c14aee8865", "filename": "gcc/tree-parloops.c", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d4af1e827fad674218523d2e91c6aed1f5729c4/gcc%2Ftree-parloops.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d4af1e827fad674218523d2e91c6aed1f5729c4/gcc%2Ftree-parloops.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-parloops.c?ref=1d4af1e827fad674218523d2e91c6aed1f5729c4", "patch": "@@ -431,6 +431,26 @@ loop_parallel_p (struct loop *loop, htab_t reduction_list, struct tree_niter_des\n   return ret;\n }\n \n+/* Return true when LOOP contains basic blocks marked with the\n+   BB_IRREDUCIBLE_LOOP flag.  */\n+\n+static inline bool\n+loop_has_blocks_with_irreducible_flag (struct loop *loop)\n+{\n+  unsigned i;\n+  basic_block *bbs = get_loop_body_in_dom_order (loop);\n+  bool res = true;\n+\n+  for (i = 0; i < loop->num_nodes; i++)\n+    if (bbs[i]->flags & BB_IRREDUCIBLE_LOOP)\n+      goto end;\n+\n+  res = false;\n+ end:\n+  free (bbs);\n+  return res;\n+}\n+\n /* Assigns the address of OBJ in TYPE to an ssa name, and returns this name.\n    The assignment statement is placed before LOOP.  DECL_ADDRESS maps decls\n    to their addresses that can be reused.  The address of OBJ is known to\n@@ -1741,6 +1761,7 @@ parallelize_loops (void)\n \t  || expected_loop_iterations (loop) <= n_threads\n \t  /* And of course, the loop must be parallelizable.  */\n \t  || !can_duplicate_loop_p (loop)\n+\t  || loop_has_blocks_with_irreducible_flag (loop)\n \t  || !loop_parallel_p (loop, reduction_list, &niter_desc))\n \tcontinue;\n "}]}