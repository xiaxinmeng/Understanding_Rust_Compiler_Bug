{"sha": "cbc9503d788ea852d7821d1baf6711ee619492ee", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2JjOTUwM2Q3ODhlYTg1MmQ3ODIxZDFiYWY2NzExZWU2MTk0OTJlZQ==", "commit": {"author": {"name": "Richard Sandiford", "email": "rsandifo@nildram.co.uk", "date": "2007-10-07T18:40:02Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2007-10-07T18:40:02Z"}, "message": "simplify-rtx.c (simplify_binary_operation_1): Canonicalize truncated shift counts.\n\ngcc/\n\t* simplify-rtx.c (simplify_binary_operation_1): Canonicalize\n\ttruncated shift counts.\n\nFrom-SVN: r129072", "tree": {"sha": "d068862ccb803da23231118cfebcfb111014f4bc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d068862ccb803da23231118cfebcfb111014f4bc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cbc9503d788ea852d7821d1baf6711ee619492ee", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cbc9503d788ea852d7821d1baf6711ee619492ee", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cbc9503d788ea852d7821d1baf6711ee619492ee", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cbc9503d788ea852d7821d1baf6711ee619492ee/comments", "author": null, "committer": null, "parents": [{"sha": "ed540c0ab930daf080cfea8a07fd18b07c503842", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ed540c0ab930daf080cfea8a07fd18b07c503842", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ed540c0ab930daf080cfea8a07fd18b07c503842"}], "stats": {"total": 16, "additions": 14, "deletions": 2}, "files": [{"sha": "7562e40d616de917862def85e7199d07a30b4e71", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cbc9503d788ea852d7821d1baf6711ee619492ee/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cbc9503d788ea852d7821d1baf6711ee619492ee/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=cbc9503d788ea852d7821d1baf6711ee619492ee", "patch": "@@ -1,3 +1,8 @@\n+2007-10-07  Richard Sandiford  <rsandifo@nildram.co.uk>\n+\n+\t* simplify-rtx.c (simplify_binary_operation_1): Canonicalize\n+\ttruncated shift counts.\n+\n 2007-10-07  Kazu Hirata  <kazu@codesourcery.com>\n \n \t* config/m68k/m68k.c, config/m68k/m68k.md: Use the assembly"}, {"sha": "0371339d5405ceebf2cf77c0ae07124a4bed6e32", "filename": "gcc/simplify-rtx.c", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cbc9503d788ea852d7821d1baf6711ee619492ee/gcc%2Fsimplify-rtx.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cbc9503d788ea852d7821d1baf6711ee619492ee/gcc%2Fsimplify-rtx.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsimplify-rtx.c?ref=cbc9503d788ea852d7821d1baf6711ee619492ee", "patch": "@@ -2562,6 +2562,13 @@ simplify_binary_operation_1 (enum rtx_code code, enum machine_mode mode,\n \t  && (unsigned HOST_WIDE_INT) INTVAL (trueop0) == GET_MODE_MASK (mode)\n \t  && ! side_effects_p (op1))\n \treturn op0;\n+    canonicalize_shift:\n+      if (SHIFT_COUNT_TRUNCATED && GET_CODE (op1) == CONST_INT)\n+\t{\n+\t  val = INTVAL (op1) & (GET_MODE_BITSIZE (mode) - 1);\n+\t  if (val != INTVAL (op1))\n+\t    return simplify_gen_binary (code, mode, op0, GEN_INT (val));\n+\t}\n       break;\n \n     case ASHIFT:\n@@ -2571,7 +2578,7 @@ simplify_binary_operation_1 (enum rtx_code code, enum machine_mode mode,\n \treturn op0;\n       if (trueop0 == CONST0_RTX (mode) && ! side_effects_p (op1))\n \treturn op0;\n-      break;\n+      goto canonicalize_shift;\n \n     case LSHIFTRT:\n       if (trueop1 == CONST0_RTX (mode))\n@@ -2593,7 +2600,7 @@ simplify_binary_operation_1 (enum rtx_code code, enum machine_mode mode,\n \t    return simplify_gen_relational (EQ, mode, imode,\n \t\t\t\t\t    XEXP (op0, 0), const0_rtx);\n \t}\n-      break;\n+      goto canonicalize_shift;\n \n     case SMIN:\n       if (width <= HOST_BITS_PER_WIDE_INT"}]}