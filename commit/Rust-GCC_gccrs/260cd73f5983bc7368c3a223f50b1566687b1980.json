{"sha": "260cd73f5983bc7368c3a223f50b1566687b1980", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjYwY2Q3M2Y1OTgzYmM3MzY4YzNhMjIzZjUwYjE1NjY2ODdiMTk4MA==", "commit": {"author": {"name": "Volker Reichelt", "email": "reichelt@igpm.rwth-aachen.de", "date": "2005-11-25T12:43:38Z"}, "committer": {"name": "Volker Reichelt", "email": "reichelt@gcc.gnu.org", "date": "2005-11-25T12:43:38Z"}, "message": "pt.c (template_class_depth_real): Remove.\n\n\t* pt.c (template_class_depth_real): Remove. Move functionality to ...\n\t(template_class_depth): ... here, replacing count_specializations\n\twith 0.  Adjust comment.\n\nFrom-SVN: r107498", "tree": {"sha": "b8d397281b6e6d3f5e706c6330cbf5ffd9c0e46b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b8d397281b6e6d3f5e706c6330cbf5ffd9c0e46b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/260cd73f5983bc7368c3a223f50b1566687b1980", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/260cd73f5983bc7368c3a223f50b1566687b1980", "html_url": "https://github.com/Rust-GCC/gccrs/commit/260cd73f5983bc7368c3a223f50b1566687b1980", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/260cd73f5983bc7368c3a223f50b1566687b1980/comments", "author": null, "committer": null, "parents": [{"sha": "3f231c29370df4a5b2ff441d8df1c0b8f5e87804", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3f231c29370df4a5b2ff441d8df1c0b8f5e87804", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3f231c29370df4a5b2ff441d8df1c0b8f5e87804"}], "stats": {"total": 32, "additions": 11, "deletions": 21}, "files": [{"sha": "f3fbb462a71c0b4078039adda998c9f9c95fe4c0", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/260cd73f5983bc7368c3a223f50b1566687b1980/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/260cd73f5983bc7368c3a223f50b1566687b1980/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=260cd73f5983bc7368c3a223f50b1566687b1980", "patch": "@@ -1,3 +1,9 @@\n+2005-11-25  Volker Reichelt  <reichelt@igpm.rwth-aachen.de>\n+\n+\t* pt.c (template_class_depth_real): Remove. Move functionality to ...\n+\t(template_class_depth): ... here, replacing count_specializations\n+\twith 0.  Adjust comment.\n+\n 2005-11-24  Richard Guenther  <rguenther@suse.de>\n \tDirk Mueller <dmueller@suse.de>\n "}, {"sha": "dba4c44c5c4ae9f98fc50d6a96294f7a6930e279", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 5, "deletions": 21, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/260cd73f5983bc7368c3a223f50b1566687b1980/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/260cd73f5983bc7368c3a223f50b1566687b1980/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=260cd73f5983bc7368c3a223f50b1566687b1980", "patch": "@@ -137,7 +137,6 @@ static tree tsubst_template_parms (tree, tree, tsubst_flags_t);\n static void regenerate_decl_from_template (tree, tree);\n static tree most_specialized (tree, tree, tree);\n static tree most_specialized_class (tree, tree);\n-static int template_class_depth_real (tree, int);\n static tree tsubst_aggr_type (tree, tree, tsubst_flags_t, tree, int);\n static tree tsubst_arg_types (tree, tree, tsubst_flags_t, tree);\n static tree tsubst_function_type (tree, tree, tsubst_flags_t, tree);\n@@ -266,15 +265,14 @@ finish_member_template_decl (tree decl)\n \n    A<T>::B<U> has depth two, while A<T> has depth one.\n    Both A<T>::B<int> and A<int>::B<U> have depth one, if\n-   COUNT_SPECIALIZATIONS is 0 or if they are instantiations, not\n-   specializations.\n+   they are instantiations, not specializations.\n \n    This function is guaranteed to return 0 if passed NULL_TREE so\n    that, for example, `template_class_depth (current_class_type)' is\n    always safe.  */\n \n-static int\n-template_class_depth_real (tree type, int count_specializations)\n+int\n+template_class_depth (tree type)\n {\n   int depth;\n \n@@ -287,35 +285,21 @@ template_class_depth_real (tree type, int count_specializations)\n \t{\n \t  if (CLASSTYPE_TEMPLATE_INFO (type)\n \t      && PRIMARY_TEMPLATE_P (CLASSTYPE_TI_TEMPLATE (type))\n-\t      && ((count_specializations\n-\t\t   && CLASSTYPE_TEMPLATE_SPECIALIZATION (type))\n-\t\t  || uses_template_parms (CLASSTYPE_TI_ARGS (type))))\n+\t      && uses_template_parms (CLASSTYPE_TI_ARGS (type)))\n \t    ++depth;\n \t}\n       else\n \t{\n \t  if (DECL_TEMPLATE_INFO (type)\n \t      && PRIMARY_TEMPLATE_P (DECL_TI_TEMPLATE (type))\n-\t      && ((count_specializations\n-\t\t   && DECL_TEMPLATE_SPECIALIZATION (type))\n-\t\t  || uses_template_parms (DECL_TI_ARGS (type))))\n+\t      && uses_template_parms (DECL_TI_ARGS (type)))\n \t    ++depth;\n \t}\n     }\n \n   return depth;\n }\n \n-/* Returns the template nesting level of the indicated class TYPE.\n-   Like template_class_depth_real, but instantiations do not count in\n-   the depth.  */\n-\n-int\n-template_class_depth (tree type)\n-{\n-  return template_class_depth_real (type, /*count_specializations=*/0);\n-}\n-\n /* Returns 1 if processing DECL as part of do_pending_inlines\n    needs us to push template parms.  */\n "}]}