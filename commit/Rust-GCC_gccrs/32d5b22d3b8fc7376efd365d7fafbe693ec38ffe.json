{"sha": "32d5b22d3b8fc7376efd365d7fafbe693ec38ffe", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzJkNWIyMmQzYjhmYzczNzZlZmQzNjVkN2ZhZmJlNjkzZWMzOGZmZQ==", "commit": {"author": {"name": "H.J. Lu", "email": "hongjiu.lu@intel.com", "date": "2009-04-03T22:31:18Z"}, "committer": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2009-04-03T22:31:18Z"}, "message": "pr39607.C: New.\n\n2009-04-03  H.J. Lu  <hongjiu.lu@intel.com>\n\n\t* g++.dg/opt/pr39607.C: New.\n\nFrom-SVN: r145523", "tree": {"sha": "970a9429fe8ee0bbca1bfe5e982590179518153d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/970a9429fe8ee0bbca1bfe5e982590179518153d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/32d5b22d3b8fc7376efd365d7fafbe693ec38ffe", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/32d5b22d3b8fc7376efd365d7fafbe693ec38ffe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/32d5b22d3b8fc7376efd365d7fafbe693ec38ffe", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/32d5b22d3b8fc7376efd365d7fafbe693ec38ffe/comments", "author": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b844e5d85a9455cfbc67119ff0bb52dc4527461e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b844e5d85a9455cfbc67119ff0bb52dc4527461e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b844e5d85a9455cfbc67119ff0bb52dc4527461e"}], "stats": {"total": 69, "additions": 69, "deletions": 0}, "files": [{"sha": "792f2e80a96cf63187558d6ff3eb67db3551c4ef", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/32d5b22d3b8fc7376efd365d7fafbe693ec38ffe/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/32d5b22d3b8fc7376efd365d7fafbe693ec38ffe/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=32d5b22d3b8fc7376efd365d7fafbe693ec38ffe", "patch": "@@ -1,3 +1,7 @@\n+2009-04-03  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\t* g++.dg/opt/pr39607.C: New.\n+\n 2009-04-03  Tobias Burnus  <burnus@net-b.de>\n \n \tPR fortran/39594"}, {"sha": "c39260dc5eab4ff392a641ca53df38e4b4fafdc8", "filename": "gcc/testsuite/g++.dg/opt/pr39607.C", "status": "added", "additions": 65, "deletions": 0, "changes": 65, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/32d5b22d3b8fc7376efd365d7fafbe693ec38ffe/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fpr39607.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/32d5b22d3b8fc7376efd365d7fafbe693ec38ffe/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fpr39607.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fpr39607.C?ref=32d5b22d3b8fc7376efd365d7fafbe693ec38ffe", "patch": "@@ -0,0 +1,65 @@\n+// PR rtl-optimization/39607\n+// { dg-do compile }\n+// { dg-options \"-O2\" }\n+\n+void abcErrorMessage(int error);\n+enum AbcSurfType {\n+    SURF_U,\n+    SURF_V\n+};\n+class AbcVec2d\n+{\n+public:\n+    double x;\n+    double y;\n+};\n+class AbcIval1d\n+{\n+protected:\n+    double m_dMin;\n+    double m_dMax;\n+public:\n+    AbcIval1d();\n+    AbcIval1d(double dMin, double dMax);\n+    double GetMax() const { return m_dMax; }\n+    double GetMin() const { return m_dMin; }\n+};\n+inline AbcIval1d::AbcIval1d(double dMin, double dMax)\n+{\n+    if (dMin > dMax) {\n+        abcErrorMessage(1);\n+    }\n+    else {\n+        m_dMin = dMin;\n+        m_dMax = dMax;\n+    }\n+}\n+class AbcIval2d\n+{\n+protected:\n+    AbcVec2d m_vMin;\n+    AbcVec2d m_vMax;\n+public:\n+    AbcVec2d GetMax() const { return m_vMax; }\n+    AbcVec2d GetMin() const { return m_vMin; }\n+};\n+class AbcCone\n+{\n+protected:\n+    int m_uv;    \t\n+public:\n+    AbcIval2d GetNaturalUVDomain() const;\n+    AbcIval1d GetLinearParamIval(AbcSurfType * pSurfParam) const;\n+};\n+AbcIval1d AbcCone::GetLinearParamIval(AbcSurfType * pSurfParam) const\n+{\n+    AbcIval1d sIval;\n+    AbcIval2d sUVDomain = GetNaturalUVDomain();\n+    if (m_uv) {    \n+        sIval = AbcIval1d(sUVDomain.GetMin().x,sUVDomain.GetMax().x);\n+    }\n+    else { \n+        sIval = AbcIval1d(sUVDomain.GetMin().y,sUVDomain.GetMax().y);\n+    }\n+    return sIval;\n+}"}]}