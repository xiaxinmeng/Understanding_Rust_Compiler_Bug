{"sha": "b38b42d2050443cd7addb3cf7ba44a9c0c46258f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjM4YjQyZDIwNTA0NDNjZDdhZGRiM2NmN2JhNDRhOWMwYzQ2MjU4Zg==", "commit": {"author": {"name": "Dave Love", "email": "fx@gcc.gnu.org", "date": "1998-05-14T09:00:31Z"}, "committer": {"name": "Dave Love", "email": "fx@gcc.gnu.org", "date": "1998-05-14T09:00:31Z"}, "message": "Call abort where appropriate.\n\nFrom-SVN: r19742", "tree": {"sha": "91025d403530d00ed00b02949ff4cb92850be896", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/91025d403530d00ed00b02949ff4cb92850be896"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b38b42d2050443cd7addb3cf7ba44a9c0c46258f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b38b42d2050443cd7addb3cf7ba44a9c0c46258f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b38b42d2050443cd7addb3cf7ba44a9c0c46258f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b38b42d2050443cd7addb3cf7ba44a9c0c46258f/comments", "author": null, "committer": null, "parents": [{"sha": "1a057f3bc0014aefc8c0c4fc100093ddeec01bea", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1a057f3bc0014aefc8c0c4fc100093ddeec01bea", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1a057f3bc0014aefc8c0c4fc100093ddeec01bea"}], "stats": {"total": 72, "additions": 36, "deletions": 36}, "files": [{"sha": "61fd263620b64ba408b5ce5929d0deaa14c65fd0", "filename": "gcc/testsuite/g77.f-torture/execute/cabs.f", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b38b42d2050443cd7addb3cf7ba44a9c0c46258f/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2Fcabs.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b38b42d2050443cd7addb3cf7ba44a9c0c46258f/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2Fcabs.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2Fcabs.f?ref=b38b42d2050443cd7addb3cf7ba44a9c0c46258f", "patch": "@@ -6,9 +6,9 @@ program cabs_1\n \n       z0 = cmplx(3.,4.)\n       r0 = cabs(z0)\n-      if (r0 .ne. 5.) call exit(1)\n+      if (r0 .ne. 5.) call abort\n \n       z1 = dcmplx(3.d0,4.d0)\n       r1 = zabs(z1)\n-      if (r1 .ne. 5.d0) call exit(1)\n+      if (r1 .ne. 5.d0) call abort\n       end"}, {"sha": "bccef7f4090b287775b27bc35b9e617f0cf6e23d", "filename": "gcc/testsuite/g77.f-torture/execute/claus.f", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b38b42d2050443cd7addb3cf7ba44a9c0c46258f/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2Fclaus.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b38b42d2050443cd7addb3cf7ba44a9c0c46258f/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2Fclaus.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2Fclaus.f?ref=b38b42d2050443cd7addb3cf7ba44a9c0c46258f", "patch": "@@ -6,8 +6,8 @@ PROGRAM TEST\n         k=1\n         n=2\n         ind=k-n+2\n-\tif (ind /= 1) call exit(1)\n-\tif (ab(ind) /= 1) call exit(1)\n-\tif (k-n+2 /= 1) call exit(1)\n-\tif (ab(k-n+2) /= 1) call exit(1)\n+\tif (ind /= 1) call abort\n+\tif (ab(ind) /= 1) call abort\n+\tif (k-n+2 /= 1) call abort\n+\tif (ab(k-n+2) /= 1) call abort\n         END"}, {"sha": "77da6359f7207c1e90c0df77242fc089df2fb1bd", "filename": "gcc/testsuite/g77.f-torture/execute/complex_1.f", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b38b42d2050443cd7addb3cf7ba44a9c0c46258f/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2Fcomplex_1.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b38b42d2050443cd7addb3cf7ba44a9c0c46258f/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2Fcomplex_1.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2Fcomplex_1.f?ref=b38b42d2050443cd7addb3cf7ba44a9c0c46258f", "patch": "@@ -3,16 +3,16 @@ program complex_1\n \n       z0 = cmplx(0.,.5)\n       z1 = 1./z0\n-      if (z1 .ne. cmplx(0.,-2)) call exit(1)\n+      if (z1 .ne. cmplx(0.,-2)) call abort\n \n       z0 = 10.*z0\n-      if (z0 .ne. cmplx(0.,5.)) call exit(1)\n+      if (z0 .ne. cmplx(0.,5.)) call abort\n \n       z2 = cmplx(1.,2.)\n       z1 = z0/z2\n-      if (z1 .ne. cmplx(2.,1.)) call exit(1)\n+      if (z1 .ne. cmplx(2.,1.)) call abort\n \n       z1 = z0*z2\n-      if (z1 .ne. cmplx(-10.,5.)) call exit(1)\n+      if (z1 .ne. cmplx(-10.,5.)) call abort\n       end\n "}, {"sha": "fc9386b5c921da5d9c4c035ccdc0bb89e9ea5c47", "filename": "gcc/testsuite/g77.f-torture/execute/cpp.F", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b38b42d2050443cd7addb3cf7ba44a9c0c46258f/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2Fcpp.F", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b38b42d2050443cd7addb3cf7ba44a9c0c46258f/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2Fcpp.F", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2Fcpp.F?ref=b38b42d2050443cd7addb3cf7ba44a9c0c46258f", "patch": "@@ -1,5 +1,5 @@\n !  Some versions of cpp will delete \"//'World' as a C++ comment.\n       character*40    title\n       title = 'Hello '//'World'\n-      if (title .ne. 'Hello World') stop 1\n+      if (title .ne. 'Hello World') call abort\n       end"}, {"sha": "a46f03aabef0c89f4457e106d8e013ea4f6e6701", "filename": "gcc/testsuite/g77.f-torture/execute/dcomplex.f", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b38b42d2050443cd7addb3cf7ba44a9c0c46258f/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2Fdcomplex.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b38b42d2050443cd7addb3cf7ba44a9c0c46258f/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2Fdcomplex.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2Fdcomplex.f?ref=b38b42d2050443cd7addb3cf7ba44a9c0c46258f", "patch": "@@ -3,16 +3,16 @@ program foo\n \n       z0 = dcmplx(0.,.5)\n       z1 = 1./z0\n-      if (z1 .ne. dcmplx(0.,-2)) call exit(1)\n+      if (z1 .ne. dcmplx(0.,-2)) call abort\n \n       z0 = 10.*z0\n-      if (z0 .ne. dcmplx(0.,5.)) call exit(1)\n+      if (z0 .ne. dcmplx(0.,5.)) call abort\n \n       z2 = cmplx(1.,2.)\n       z1 = z0/z2\n-      if (z1 .ne. dcmplx(2.,1.)) call exit(1)\n+      if (z1 .ne. dcmplx(2.,1.)) call abort\n \n       z1 = z0*z2\n-      if (z1 .ne. dcmplx(-10.,5.)) call exit(1)\n+      if (z1 .ne. dcmplx(-10.,5.)) call abort\n       end\n "}, {"sha": "c69608786b9f308febd6bc5bbfc8ecfd68d7d201", "filename": "gcc/testsuite/g77.f-torture/execute/dnrm2.f", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b38b42d2050443cd7addb3cf7ba44a9c0c46258f/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2Fdnrm2.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b38b42d2050443cd7addb3cf7ba44a9c0c46258f/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2Fdnrm2.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2Fdnrm2.f?ref=b38b42d2050443cd7addb3cf7ba44a9c0c46258f", "patch": "@@ -19,7 +19,7 @@\n       do i=1,100\n          a(i)=0.D0\n       enddo\n-      if (dnrm2(100,a,1) .ne. 0.0) call exit(1)\n+      if (dnrm2(100,a,1) .ne. 0.0) call abort\n       end\n \n       double precision function dnrm2 ( n, dx, incx)"}, {"sha": "7bb1a281e227e866b6887e30a3e893cb14158355", "filename": "gcc/testsuite/g77.f-torture/execute/erfc.f", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b38b42d2050443cd7addb3cf7ba44a9c0c46258f/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2Ferfc.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b38b42d2050443cd7addb3cf7ba44a9c0c46258f/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2Ferfc.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2Ferfc.f?ref=b38b42d2050443cd7addb3cf7ba44a9c0c46258f", "patch": "@@ -3,27 +3,27 @@\n \t\treal*8 x1, y1\n \t\tx=0.\n \t\ty = erfc(x)\n-\t\tif (y .ne. 1.) call exit(1)\n+\t\tif (y .ne. 1.) call abort\n \n \t\tx=1.1\n \t\ty = erfc(x)\n-\t\tif (abs(y - .1197949) .ge. 1.e-6) call exit(1)\n+\t\tif (abs(y - .1197949) .ge. 1.e-6) call abort\n \n \t\tx=10\n \t\ty = erfc(x)\n-\t\tif (y .gt. 1.5e-44) call exit(1)\n+\t\tif (y .gt. 1.5e-44) call abort\n \n \t\tx1=0.\n \t\ty1 = erfc(x1)\n-\t\tif (y1 .ne. 1.) call exit(1)\n+\t\tif (y1 .ne. 1.) call abort\n \n \t\tx1=1.1d0\n \t\ty1 = erfc(x1)\n-\t\tif (abs(y1 - .1197949d0) .ge. 1.d-6) call exit(1)\n+\t\tif (abs(y1 - .1197949d0) .ge. 1.d-6) call abort\n \n \t\tx1=10\n \t\ty1 = erfc(x1)\n-\t\tif (y1 .gt. 1.5d-44) call exit(1)\n+\t\tif (y1 .gt. 1.5d-44) call abort\n \t\tend\n c=================================================\n !output:"}, {"sha": "de388f181b09cb85ed7f717fd2d55f5bb96dde81", "filename": "gcc/testsuite/g77.f-torture/execute/exp.f", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b38b42d2050443cd7addb3cf7ba44a9c0c46258f/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2Fexp.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b38b42d2050443cd7addb3cf7ba44a9c0c46258f/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2Fexp.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2Fexp.f?ref=b38b42d2050443cd7addb3cf7ba44a9c0c46258f", "patch": "@@ -1,3 +1,3 @@\n       a = 2**-2*1.\n-      if (a .ne. .25) call exit(1)\n+      if (a .ne. .25) call abort\n       end"}, {"sha": "74e42750d55f3f72075236ca28d8ba5563ba4e73", "filename": "gcc/testsuite/g77.f-torture/execute/le.f", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b38b42d2050443cd7addb3cf7ba44a9c0c46258f/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2Fle.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b38b42d2050443cd7addb3cf7ba44a9c0c46258f/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2Fle.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2Fle.f?ref=b38b42d2050443cd7addb3cf7ba44a9c0c46258f", "patch": "@@ -8,22 +8,22 @@ program fool\n       n = 5\n \n       t = (n > foo)\n-      if (t .neqv. .true.) call exit(1)\n+      if (t .neqv. .true.) call abort\n       t = (n >= foo)\n-      if (t .neqv. .true.) call exit(1)\n+      if (t .neqv. .true.) call abort\n       t = (n < foo)\n-      if (t .neqv. .false.) call exit(1)\n+      if (t .neqv. .false.) call abort\n       t = (n <= 5)\n-      if (t .neqv. .true.) call exit(1)\n+      if (t .neqv. .true.) call abort\n       t = (n >= 5 )\n-      if (t .neqv. .true.) call exit(1)\n+      if (t .neqv. .true.) call abort\n       t = (n == 5)\n-      if (t .neqv. .true.) call exit(1)\n+      if (t .neqv. .true.) call abort\n       t = (n /= 5)\n-      if (t .neqv. .false.) call exit(1)\n+      if (t .neqv. .false.) call abort\n       t = (n /= foo)\n-      if (t .neqv. .true.) call exit(1)\n+      if (t .neqv. .true.) call abort\n       t = (n == foo)\n-      if (t .neqv. .false.) call exit(1)\n+      if (t .neqv. .false.) call abort\n \n       end"}, {"sha": "89ae273891cd7d9ddbc6630603dae438329d0356", "filename": "gcc/testsuite/g77.f-torture/execute/short.f", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b38b42d2050443cd7addb3cf7ba44a9c0c46258f/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2Fshort.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b38b42d2050443cd7addb3cf7ba44a9c0c46258f/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2Fshort.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2Fshort.f?ref=b38b42d2050443cd7addb3cf7ba44a9c0c46258f", "patch": "@@ -46,11 +46,11 @@ subroutine printout\n   270       continue\n \n       do k=0,N\n-\tif (yzin1(k) .ne. yzin2(k)) call exit(1)\n+\tif (yzin1(k) .ne. yzin2(k)) call abort\n       enddo\n-      if (yzin1(0) .ne. -1371.) call exit(1)\n-      if (yzin1(1) .ne. -685.5) call exit(1)\n-      if (yzin1(2) .ne. 0.) call exit(1)\n+      if (yzin1(0) .ne. -1371.) call abort\n+      if (yzin1(1) .ne. -685.5) call abort\n+      if (yzin1(2) .ne. 0.) call abort\n \n       return\n       end"}]}