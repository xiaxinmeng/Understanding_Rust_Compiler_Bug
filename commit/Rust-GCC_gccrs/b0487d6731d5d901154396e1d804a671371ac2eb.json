{"sha": "b0487d6731d5d901154396e1d804a671371ac2eb", "node_id": "C_kwDOANBUbNoAKGIwNDg3ZDY3MzFkNWQ5MDExNTQzOTZlMWQ4MDRhNjcxMzcxYWMyZWI", "commit": {"author": {"name": "Owen Avery", "email": "powerboat9.gamer@gmail.com", "date": "2023-02-05T01:24:32Z"}, "committer": {"name": "Philip Herron", "email": "philip.herron@embecosm.com", "date": "2023-04-13T11:50:47Z"}, "message": "Move method as_string into HIR::ExprStmt from deriving classes\n\ngcc/rust/ChangeLog:\n\n\t* hir/tree/rust-hir.cc\n\t(ExprStmt::as_string): Add method.\n\t(ExprStmtWithBlock::as_string): Remove method.\n\t(ExprStmtWithoutBlock::as_string): Remove method.\n\t* hir/tree/rust-hir-stmt.h\n\t(ExprStmt::as_string): Add method.\n\t(ExprStmtWithBlock::as_string): Remove method.\n\t(ExprStmtWithoutBlock::as_string): Remove method.\n\nSigned-off-by: Owen Avery <powerboat9.gamer@gmail.com>", "tree": {"sha": "42a3972abb87daeef24352586c256c326b951466", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/42a3972abb87daeef24352586c256c326b951466"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b0487d6731d5d901154396e1d804a671371ac2eb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b0487d6731d5d901154396e1d804a671371ac2eb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b0487d6731d5d901154396e1d804a671371ac2eb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b0487d6731d5d901154396e1d804a671371ac2eb/comments", "author": {"login": "powerboat9", "id": 7397652, "node_id": "MDQ6VXNlcjczOTc2NTI=", "avatar_url": "https://avatars.githubusercontent.com/u/7397652?v=4", "gravatar_id": "", "url": "https://api.github.com/users/powerboat9", "html_url": "https://github.com/powerboat9", "followers_url": "https://api.github.com/users/powerboat9/followers", "following_url": "https://api.github.com/users/powerboat9/following{/other_user}", "gists_url": "https://api.github.com/users/powerboat9/gists{/gist_id}", "starred_url": "https://api.github.com/users/powerboat9/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/powerboat9/subscriptions", "organizations_url": "https://api.github.com/users/powerboat9/orgs", "repos_url": "https://api.github.com/users/powerboat9/repos", "events_url": "https://api.github.com/users/powerboat9/events{/privacy}", "received_events_url": "https://api.github.com/users/powerboat9/received_events", "type": "User", "site_admin": false}, "committer": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0a00ea70db1e99060b59e521e438fdfd4e1d98ec", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0a00ea70db1e99060b59e521e438fdfd4e1d98ec", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0a00ea70db1e99060b59e521e438fdfd4e1d98ec"}], "stats": {"total": 30, "additions": 4, "deletions": 26}, "files": [{"sha": "3e7697c8e21a4a2c5644febb13bbe03cb599b4c4", "filename": "gcc/rust/hir/tree/rust-hir-stmt.h", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b0487d6731d5d901154396e1d804a671371ac2eb/gcc%2Frust%2Fhir%2Ftree%2Frust-hir-stmt.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b0487d6731d5d901154396e1d804a671371ac2eb/gcc%2Frust%2Fhir%2Ftree%2Frust-hir-stmt.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fhir%2Ftree%2Frust-hir-stmt.h?ref=b0487d6731d5d901154396e1d804a671371ac2eb", "patch": "@@ -162,6 +162,8 @@ class ExprStmt : public Stmt\n   Location locus;\n \n public:\n+  std::string as_string () const override;\n+\n   Location get_locus () const override final { return locus; }\n \n   bool is_item () const override final { return false; }\n@@ -199,8 +201,6 @@ class ExprStmtWithoutBlock : public ExprStmt\n {\n \n public:\n-  std::string as_string () const override;\n-\n   ExprStmtWithoutBlock (Analysis::NodeMapping mappings,\n \t\t\tstd::unique_ptr<Expr> expr, Location locus)\n     : ExprStmt (std::move (mappings), std::move (expr), locus)\n@@ -224,8 +224,6 @@ class ExprStmtWithBlock : public ExprStmt\n   bool must_be_unit;\n \n public:\n-  std::string as_string () const override;\n-\n   ExprStmtWithBlock (Analysis::NodeMapping mappings,\n \t\t     std::unique_ptr<ExprWithBlock> expr, Location locus,\n \t\t     bool must_be_unit)"}, {"sha": "47c62dfb481f57b9f0add747bfc95308c63ab2f3", "filename": "gcc/rust/hir/tree/rust-hir.cc", "status": "modified", "additions": 2, "deletions": 22, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b0487d6731d5d901154396e1d804a671371ac2eb/gcc%2Frust%2Fhir%2Ftree%2Frust-hir.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b0487d6731d5d901154396e1d804a671371ac2eb/gcc%2Frust%2Fhir%2Ftree%2Frust-hir.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fhir%2Ftree%2Frust-hir.cc?ref=b0487d6731d5d901154396e1d804a671371ac2eb", "patch": "@@ -1075,9 +1075,9 @@ PathInExpression::as_string () const\n }\n \n std::string\n-ExprStmtWithBlock::as_string () const\n+ExprStmt::as_string () const\n {\n-  std::string str = indent_spaces (enter) + \"ExprStmtWithBlock: \\n\";\n+  std::string str = indent_spaces (enter) + \"ExprStmt:\\n\";\n \n   if (expr == nullptr)\n     {\n@@ -1941,26 +1941,6 @@ TupleExpr::as_string () const\n   return str;\n }\n \n-std::string\n-ExprStmtWithoutBlock::as_string () const\n-{\n-  std::string str (\"ExprStmtWithoutBlock:\\n\");\n-  indent_spaces (enter);\n-  str += indent_spaces (stay);\n-\n-  if (expr == nullptr)\n-    {\n-      str += \"none (this shouldn't happen and is probably an error)\";\n-    }\n-  else\n-    {\n-      str += expr->as_string ();\n-    }\n-  indent_spaces (out);\n-\n-  return str;\n-}\n-\n std::string\n FunctionParam::as_string () const\n {"}]}