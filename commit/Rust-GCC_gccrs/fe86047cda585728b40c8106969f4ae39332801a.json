{"sha": "fe86047cda585728b40c8106969f4ae39332801a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmU4NjA0N2NkYTU4NTcyOGI0MGM4MTA2OTY5ZjRhZTM5MzMyODAxYQ==", "commit": {"author": {"name": "Ulrich Weigand", "email": "uweigand@de.ibm.com", "date": "2003-03-21T15:48:31Z"}, "committer": {"name": "Ulrich Weigand", "email": "uweigand@gcc.gnu.org", "date": "2003-03-21T15:48:31Z"}, "message": "s390.h: Do not include fixdfdi.h on s390x.\n\n\t* config/s390/s390.h: Do not include fixdfdi.h on s390x.\n\t(TARGET_64BIT): Define as compile-time constant when IN_LIBGCC2.\n\t(MIN_UNITS_PER_WORD): Do not define when IN_LIBGCC2.\n\nFrom-SVN: r64669", "tree": {"sha": "813ff95691e7ec1d7ff69bd19ce80150b729d9ea", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/813ff95691e7ec1d7ff69bd19ce80150b729d9ea"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fe86047cda585728b40c8106969f4ae39332801a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fe86047cda585728b40c8106969f4ae39332801a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fe86047cda585728b40c8106969f4ae39332801a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fe86047cda585728b40c8106969f4ae39332801a/comments", "author": null, "committer": null, "parents": [{"sha": "f3146d75a925306d35d582c3c927d06ce93aa03d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f3146d75a925306d35d582c3c927d06ce93aa03d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f3146d75a925306d35d582c3c927d06ce93aa03d"}], "stats": {"total": 21, "additions": 20, "deletions": 1}, "files": [{"sha": "874cad12ba65fec9f693559a0eb96fc92aefd65f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe86047cda585728b40c8106969f4ae39332801a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe86047cda585728b40c8106969f4ae39332801a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=fe86047cda585728b40c8106969f4ae39332801a", "patch": "@@ -1,3 +1,9 @@\n+2003-03-21  Ulrich Weigand  <uweigand@de.ibm.com>\n+\n+\t* config/s390/s390.h: Do not include fixdfdi.h on s390x.\n+\t(TARGET_64BIT): Define as compile-time constant when IN_LIBGCC2.\n+\t(MIN_UNITS_PER_WORD): Do not define when IN_LIBGCC2.\n+\n 2003-03-21  Volker Reichelt  <reichelt@igpm.rwth-aachen.de>\n \n \tPR doc-bug/9813"}, {"sha": "15dc45c96b31429c9926afabd9fc905457af912a", "filename": "gcc/config/s390/s390.h", "status": "modified", "additions": 14, "deletions": 1, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe86047cda585728b40c8106969f4ae39332801a/gcc%2Fconfig%2Fs390%2Fs390.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe86047cda585728b40c8106969f4ae39332801a/gcc%2Fconfig%2Fs390%2Fs390.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390.h?ref=fe86047cda585728b40c8106969f4ae39332801a", "patch": "@@ -24,7 +24,7 @@ Boston, MA 02111-1307, USA.  */\n \n /* Override the __fixdfdi etc. routines when building libgcc2.\n    ??? This should be done in a cleaner way ...  */\n-#ifdef IN_LIBGCC2\n+#if defined (IN_LIBGCC2) && !defined (__s390x__)\n #include <s390/fixdfdi.h>\n #endif\n \n@@ -134,6 +134,17 @@ extern int target_flags;\n #define CAN_DEBUG_WITHOUT_FP\n \n \n+/* In libgcc2, determine target settings as compile-time constants.  */\n+#ifdef IN_LIBGCC2\n+#undef TARGET_64BIT\n+#ifdef __s390x__\n+#define TARGET_64BIT 1\n+#else\n+#define TARGET_64BIT 0\n+#endif\n+#endif\n+\n+\n /* Target machine storage layout.  */\n \n /* Everything is big-endian.  */\n@@ -143,7 +154,9 @@ extern int target_flags;\n \n /* Width of a word, in units (bytes).  */\n #define UNITS_PER_WORD (TARGET_64BIT ? 8 : 4)\n+#ifndef IN_LIBGCC2\n #define MIN_UNITS_PER_WORD 4\n+#endif\n #define MAX_BITS_PER_WORD 64\n \n /* Function arguments and return values are promoted to word size.  */"}]}