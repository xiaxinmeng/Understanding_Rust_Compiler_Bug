{"sha": "ee4336ea817d3e6f91c0d2b33dc92bc8227538a8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWU0MzM2ZWE4MTdkM2U2ZjkxYzBkMmIzM2RjOTJiYzgyMjc1MzhhOA==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2003-06-13T06:13:51Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2003-06-13T06:13:51Z"}, "message": "re PR target/11089 (ICE: instantiate_virtual_regs_lossage while using sse built-ins)\n\n        PR target/11089\n        * config/i386/i386.md (sse_movaps): Use an expander to force\n        one operand to be a register.\n        (sse_movups): Likewise.\n\nFrom-SVN: r67883", "tree": {"sha": "a40660f816598b8d59edc408c92ca342718b3775", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a40660f816598b8d59edc408c92ca342718b3775"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ee4336ea817d3e6f91c0d2b33dc92bc8227538a8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ee4336ea817d3e6f91c0d2b33dc92bc8227538a8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ee4336ea817d3e6f91c0d2b33dc92bc8227538a8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ee4336ea817d3e6f91c0d2b33dc92bc8227538a8/comments", "author": null, "committer": null, "parents": [{"sha": "c37514ff623f1d8ea7cf9fa5a5af15ab70e4902b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c37514ff623f1d8ea7cf9fa5a5af15ab70e4902b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c37514ff623f1d8ea7cf9fa5a5af15ab70e4902b"}], "stats": {"total": 69, "additions": 66, "deletions": 3}, "files": [{"sha": "5396c79ce1ff4fcd85aea9cb889f411a64bc4ecc", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee4336ea817d3e6f91c0d2b33dc92bc8227538a8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee4336ea817d3e6f91c0d2b33dc92bc8227538a8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ee4336ea817d3e6f91c0d2b33dc92bc8227538a8", "patch": "@@ -1,3 +1,10 @@\n+2003-06-12  Richard Henderson  <rth@redhat.com>\n+\n+\tPR target/11089\n+\t* config/i386/i386.md (sse_movaps): Use an expander to force\n+\tone operand to be a register.\n+\t(sse_movups): Likewise.\n+\n 2003-06-13  Doug Evans  <dje@sebabeach.org>\n \n \tRemove some build warnings."}, {"sha": "faf0e5a5b98b0ea9c38861c8c6f2c9b6e1c4d488", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 32, "deletions": 3, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee4336ea817d3e6f91c0d2b33dc92bc8227538a8/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee4336ea817d3e6f91c0d2b33dc92bc8227538a8/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=ee4336ea817d3e6f91c0d2b33dc92bc8227538a8", "patch": "@@ -19530,7 +19530,22 @@\n \n ;; These two patterns are useful for specifying exactly whether to use\n ;; movaps or movups\n-(define_insn \"sse_movaps\"\n+(define_expand \"sse_movaps\"\n+  [(set (match_operand:V4SF 0 \"nonimmediate_operand\" \"\")\n+\t(unspec:V4SF [(match_operand:V4SF 1 \"nonimmediate_operand\" \"\")]\n+\t\t     UNSPEC_MOVA))]\n+  \"TARGET_SSE\"\n+{\n+  if (GET_CODE (operands[0]) == MEM && GET_CODE (operands[1]) == MEM)\n+    {\n+      rtx tmp = gen_reg_rtx (V4SFmode);\n+      emit_insn (gen_sse_movaps (tmp, operands[1]));\n+      emit_move_insn (operands[0], tmp);\n+      DONE;\n+    }\n+})\n+\n+(define_insn \"*sse_movaps_1\"\n   [(set (match_operand:V4SF 0 \"nonimmediate_operand\" \"=x,m\")\n \t(unspec:V4SF [(match_operand:V4SF 1 \"nonimmediate_operand\" \"xm,x\")]\n \t\t     UNSPEC_MOVA))]\n@@ -19540,7 +19555,22 @@\n   [(set_attr \"type\" \"ssemov,ssemov\")\n    (set_attr \"mode\" \"V4SF\")])\n \n-(define_insn \"sse_movups\"\n+(define_expand \"sse_movups\"\n+  [(set (match_operand:V4SF 0 \"nonimmediate_operand\" \"\")\n+\t(unspec:V4SF [(match_operand:V4SF 1 \"nonimmediate_operand\" \"\")]\n+\t\t     UNSPEC_MOVU))]\n+  \"TARGET_SSE\"\n+{\n+  if (GET_CODE (operands[0]) == MEM && GET_CODE (operands[1]) == MEM)\n+    {\n+      rtx tmp = gen_reg_rtx (V4SFmode);\n+      emit_insn (gen_sse_movups (tmp, operands[1]));\n+      emit_move_insn (operands[0], tmp);\n+      DONE;\n+    }\n+})\n+\n+(define_insn \"*sse_movups_1\"\n   [(set (match_operand:V4SF 0 \"nonimmediate_operand\" \"=x,m\")\n \t(unspec:V4SF [(match_operand:V4SF 1 \"nonimmediate_operand\" \"xm,x\")]\n \t\t     UNSPEC_MOVU))]\n@@ -19550,7 +19580,6 @@\n   [(set_attr \"type\" \"ssecvt,ssecvt\")\n    (set_attr \"mode\" \"V4SF\")])\n \n-\n ;; SSE Strange Moves.\n \n (define_insn \"sse_movmskps\""}, {"sha": "c94e7f8607ff7411e615f45a079afc3526597987", "filename": "gcc/testsuite/gcc.dg/i386-sse-4.c", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee4336ea817d3e6f91c0d2b33dc92bc8227538a8/gcc%2Ftestsuite%2Fgcc.dg%2Fi386-sse-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee4336ea817d3e6f91c0d2b33dc92bc8227538a8/gcc%2Ftestsuite%2Fgcc.dg%2Fi386-sse-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fi386-sse-4.c?ref=ee4336ea817d3e6f91c0d2b33dc92bc8227538a8", "patch": "@@ -0,0 +1,27 @@\n+/* { dg-do compile { target i?86-*-* x86_64-*-* } } */\n+/* { dg-options \"-O0 -msse\" } */\n+\n+typedef void __vr __attribute__ ((__mode__ (__V4SF__)));\n+\n+struct vector\n+{\n+  union\n+  {\n+    __vr v;\n+    float f[4];\n+  };\n+};\n+\n+void\n+doit ()\n+{\n+  float f[4];\n+  struct vector v;\n+\n+  f[0] = 0;\n+  f[1] = 1;\n+  f[2] = 2;\n+  f[3] = 3;\n+\n+  v.v = __builtin_ia32_loadups (f);\n+}"}]}