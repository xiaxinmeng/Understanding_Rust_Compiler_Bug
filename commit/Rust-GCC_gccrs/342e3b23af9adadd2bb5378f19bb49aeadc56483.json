{"sha": "342e3b23af9adadd2bb5378f19bb49aeadc56483", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzQyZTNiMjNhZjlhZGFkZDJiYjUzNzhmMTliYjQ5YWVhZGM1NjQ4Mw==", "commit": {"author": {"name": "Mark Wielaard", "email": "mark@gcc.gnu.org", "date": "2005-02-15T22:38:59Z"}, "committer": {"name": "Mark Wielaard", "email": "mark@gcc.gnu.org", "date": "2005-02-15T22:38:59Z"}, "message": "[multiple changes]\n\n2005-02-15  Mark Wielaard  <mark@klomp.org>\n\n       * java/util/jar/Attributes.java (Name.CLASS_PATH): Document that\n       file path elements are separated by spaces.\n\n2005-02-15  Mark Wielaard  <mark@klomp.org>\n\n       * java/util/jar/Attributes.java (Attributes.Name): Add documentation\n       to describe attributes without a constant field value in this class.\n\n2005-02-15  Michael Koch  <konqueror@gmx.de>\n\n       * java/util/jar/Attributes.java\n       (CREATED_BY, JAVA_BEAN, MAGIC): Removed.\n\nFrom-SVN: r95078", "tree": {"sha": "c6fb854231c39eb989dbcf38be40dbd7abd867bf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c6fb854231c39eb989dbcf38be40dbd7abd867bf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/342e3b23af9adadd2bb5378f19bb49aeadc56483", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/342e3b23af9adadd2bb5378f19bb49aeadc56483", "html_url": "https://github.com/Rust-GCC/gccrs/commit/342e3b23af9adadd2bb5378f19bb49aeadc56483", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/342e3b23af9adadd2bb5378f19bb49aeadc56483/comments", "author": null, "committer": null, "parents": [{"sha": "339fe5364355c6c3efada04c425db9ca778e08de", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/339fe5364355c6c3efada04c425db9ca778e08de", "html_url": "https://github.com/Rust-GCC/gccrs/commit/339fe5364355c6c3efada04c425db9ca778e08de"}], "stats": {"total": 67, "additions": 43, "deletions": 24}, "files": [{"sha": "249641f64b5daa20c0d3fa581e93b6baa9528638", "filename": "libjava/ChangeLog", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/342e3b23af9adadd2bb5378f19bb49aeadc56483/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/342e3b23af9adadd2bb5378f19bb49aeadc56483/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=342e3b23af9adadd2bb5378f19bb49aeadc56483", "patch": "@@ -1,3 +1,18 @@\n+2005-02-15  Mark Wielaard  <mark@klomp.org>\n+\n+\t* java/util/jar/Attributes.java (Name.CLASS_PATH): Document that\n+\tfile path elements are separated by spaces.\n+\n+2005-02-15  Mark Wielaard  <mark@klomp.org>\n+\n+\t* java/util/jar/Attributes.java (Attributes.Name): Add documentation\n+\tto describe attributes without a constant field value in this class.\n+\n+2005-02-15  Michael Koch  <konqueror@gmx.de>\n+\n+\t* java/util/jar/Attributes.java\n+\t(CREATED_BY, JAVA_BEAN, MAGIC): Removed.\n+\n 2005-02-15  Mark Wielaard  <mark@klomp.org>\n \n \t* java/net/URLClassLoader.java (JarURLLoader.JarURLLoader): Just use"}, {"sha": "b8961411b6e1645cf879c160e8578cda5d08cc68", "filename": "libjava/java/util/jar/Attributes.java", "status": "modified", "additions": 28, "deletions": 24, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/342e3b23af9adadd2bb5378f19bb49aeadc56483/libjava%2Fjava%2Futil%2Fjar%2FAttributes.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/342e3b23af9adadd2bb5378f19bb49aeadc56483/libjava%2Fjava%2Futil%2Fjar%2FAttributes.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Futil%2Fjar%2FAttributes.java?ref=342e3b23af9adadd2bb5378f19bb49aeadc56483", "patch": "@@ -1,5 +1,5 @@\n /* Attributes.java -- Represents attribute name/value pairs from a Manifest\n-   Copyright (C) 2000, 2002 Free Software Foundation, Inc.\n+   Copyright (C) 2000, 2002, 2005 Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -98,36 +98,42 @@ public class Attributes implements Cloneable, Map\n    * converted to lowercase. But you can get the original case sensitive\n    * string with the <code>toString()</code> method.</p>\n    *\n+   * <p>Most important attributes have a constant defined in this\n+   * class. Some other attributes used in Manifest files are:\n+   * <ul>\n+   * <li> \"Created-By\" - General main attribute, tool and version\n+   * that created this Manifest file.</li>\n+   * <li> \"Java-Bean\" - Bean objects attribute, whether the entry is a Bean.\n+   * Value is either \"true\" or \"false\".</li>\n+   * <li> \"Magic\" - Signing attribute, application specific signing attribute.\n+   * Must be understood by the manifest parser when present to validate the\n+   * jar (entry).</li>\n+   * </ul>\n+   *\n    * @since 1.2\n    * @author Mark Wielaard (mark@klomp.org)\n    */\n   public static class Name\n   {\n-\n-    // Fields\n-\n     // General Main Attributes\n \n     /**\n      * General main attribute -\n      * the version of this Manifest file.\n      */\n     public static final Name MANIFEST_VERSION = new Name(\"Manifest-Version\");\n-    /**\n-     * General main attribute -\n-     * tool and version that created this Manifest file.\n-     */\n-    public static final Name CREATED_BY = new Name(\"Created-By\");\n+    \n     /**\n      * General main attribute -\n      * the version of the jar file signature.\n      */\n     public static final Name SIGNATURE_VERSION\n       = new Name(\"Signature-Version\");\n+    \n     /**\n      * General main attribute -\n-     * (relative) URLs of the libraries/classpaths that the Classes in\n-     * this jar file depend on.\n+     * (relative) file paths of the libraries/classpaths that the Classes in\n+     * this jar file depend on. Paths are separated by spaces.\n      */\n     public static final Name CLASS_PATH = new Name(\"Class-Path\");\n \n@@ -164,62 +170,72 @@ public class Attributes implements Cloneable, Map\n      * the name if the extension library contained in the jar.\n      */\n     public static final Name EXTENSION_NAME = new Name(\"Extension-Name\");\n+    \n     /**\n      * Extension identification attribute -\n      * synonym for <code>EXTENSTION_NAME</code>.\n      */\n     public static final Name EXTENSION_INSTALLATION = EXTENSION_NAME;\n \n     // Package versioning and sealing attributes\n+    \n     /**\n      * Package versioning -\n      * name of extension library contained in this jar.\n      */\n     public static final Name IMPLEMENTATION_TITLE\n       = new Name(\"Implementation-Title\");\n+    \n     /**\n      * Package versioning -\n      * version of the extension library contained in this jar.\n      */\n     public static final Name IMPLEMENTATION_VERSION\n       = new Name(\"Implementation-Version\");\n+    \n     /**\n      * Package versioning -\n      * name of extension library creator contained in this jar.\n      */\n     public static final Name IMPLEMENTATION_VENDOR\n       = new Name(\"Implementation-Vendor\");\n+    \n     /**\n      * Package versioning -\n      * unique id of extension library creator.\n      */\n     public static final Name IMPLEMENTATION_VENDOR_ID\n       = new Name(\"Implementation-Vendor-Id\");\n+    \n     /**\n      * Package versioning -\n      * location where this implementation can be downloaded.\n      */\n     public static final Name IMPLEMENTATION_URL\n       = new Name(\"Implementation-URL\");\n+    \n     /**\n      * Package versioning -\n      * title of the specification contained in this jar.\n      */\n     public static final Name SPECIFICATION_TITLE\n       = new Name(\"Specification-Title\");\n+\n     /**\n      * Package versioning -\n      * version of the specification contained in this jar.\n      */\n     public static final Name SPECIFICATION_VERSION\n       = new Name(\"Specification-Version\");\n+\n     /**\n      * Package versioning -\n      * organisation that maintains the specification contains in this\n      * jar.\n      */\n     public static final Name SPECIFICATION_VENDOR\n       = new Name(\"Specification-Vendor\");\n+\n     /**\n      * Package sealing -\n      * whether (all) package(s) is(/are) sealed. Value is either \"true\"\n@@ -233,21 +249,9 @@ public class Attributes implements Cloneable, Map\n      */\n     public static final Name CONTENT_TYPE = new Name(\"Content-Type\");\n \n-    /**\n-     * Bean objects attribute -\n-     * whether the entry is a Java Bean. Value is either \"true\" or \"false\".\n-     */\n-    public static final Name JAVA_BEAN = new Name(\"Java-Bean\");\n-\n-    /**\n-     * Signing attribute -\n-     * application specific signing attribute. Must be understood by\n-     * the manifest parser when present to validate the jar (entry).\n-     */\n-    public static final Name MAGIC = new Name(\"Magic\");\n-\n     /** The (lowercase) String representation of this Name */\n     private final String name;\n+\n     /** The original String given to the constructor */\n     private final String origName;\n "}]}