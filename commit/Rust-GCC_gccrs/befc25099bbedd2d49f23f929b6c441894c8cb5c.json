{"sha": "befc25099bbedd2d49f23f929b6c441894c8cb5c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmVmYzI1MDk5YmJlZGQyZDQ5ZjIzZjkyOWI2YzQ0MTg5NGM4Y2I1Yw==", "commit": {"author": {"name": "Kaz Kojima", "email": "kkojima@gcc.gnu.org", "date": "2008-11-10T23:10:10Z"}, "committer": {"name": "Kaz Kojima", "email": "kkojima@gcc.gnu.org", "date": "2008-11-10T23:10:10Z"}, "message": "re PR rtl-optimization/37514 (Wrong code generated for 20021120-1.c with -O3 -fomit-frame-pointer on sh4)\n\n\tPR rtl-optimization/37514\n\t* config/sh/sh.h (OPTIMIZATION_OPTIONS): Set\n\tflag_ira_share_spill_slots to 2 if it's already non-zero.\n\t(OVERRIDE_OPTIONS): Clear flag_ira_share_spill_slots if\n        flag_ira_share_spill_slots is 2.\n\t* gcc.target/sh/pr37514.c: New test.\n\nFrom-SVN: r141752", "tree": {"sha": "292694d71a3f5f7fd4b1552de056e460c88e7e39", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/292694d71a3f5f7fd4b1552de056e460c88e7e39"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/befc25099bbedd2d49f23f929b6c441894c8cb5c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/befc25099bbedd2d49f23f929b6c441894c8cb5c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/befc25099bbedd2d49f23f929b6c441894c8cb5c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/befc25099bbedd2d49f23f929b6c441894c8cb5c/comments", "author": null, "committer": null, "parents": [{"sha": "3fe8e64bc222e8149cb623fb47d25e74124e98ab", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3fe8e64bc222e8149cb623fb47d25e74124e98ab", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3fe8e64bc222e8149cb623fb47d25e74124e98ab"}], "stats": {"total": 86, "additions": 86, "deletions": 0}, "files": [{"sha": "18d73af753919dfcb0ed25d06072b709f5b1926b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/befc25099bbedd2d49f23f929b6c441894c8cb5c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/befc25099bbedd2d49f23f929b6c441894c8cb5c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=befc25099bbedd2d49f23f929b6c441894c8cb5c", "patch": "@@ -1,3 +1,11 @@\n+2008-11-10  Kaz Kojima  <kkojima@gcc.gnu.org>\n+\n+\tPR rtl-optimization/37514\n+\t* config/sh/sh.h (OPTIMIZATION_OPTIONS): Set\n+\tflag_ira_share_spill_slots to 2 if it's already non-zero.\n+\t(OVERRIDE_OPTIONS): Clear flag_ira_share_spill_slots if\n+        flag_ira_share_spill_slots is 2.\n+\n 2008-11-10  Kevin Buettner  <kevinb@redhat.com>\n \n \t* config/m32c/prologue.md (prologue_enter_16): Set FB to SP - 2."}, {"sha": "0ec9ac910d2b1c1b012927e6366c28b4db427a7f", "filename": "gcc/config/sh/sh.h", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/befc25099bbedd2d49f23f929b6c441894c8cb5c/gcc%2Fconfig%2Fsh%2Fsh.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/befc25099bbedd2d49f23f929b6c441894c8cb5c/gcc%2Fconfig%2Fsh%2Fsh.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh.h?ref=befc25099bbedd2d49f23f929b6c441894c8cb5c", "patch": "@@ -496,6 +496,9 @@ do {\t\t\t\t\t\t\t\t\t\\\n      the user explicitly requested this to be on or off.  */\t\t\\\n   if (flag_schedule_insns > 0)\t\t\t\t\t\t\\\n     flag_schedule_insns = 2;\t\t\t\t\t\t\\\n+  /* Likewise for flag_ira_share_spill_slots.  */\t\t\t\\\n+  if (flag_ira_share_spill_slots > 0)\t\t\t\t\t\\\n+    flag_ira_share_spill_slots = 2;\t\t\t\t\t\\\n \t\t\t\t\t\t\t\t\t\\\n   set_param_value (\"simultaneous-prefetches\", 2);\t\t\t\\\n } while (0)\n@@ -730,6 +733,12 @@ do {\t\t\t\t\t\t\t\t\t\\\n \t}\t\t\t\t\t\t\t\t\\\n     }\t\t\t\t\t\t\t\t\t\\\n \t\t\t\t\t\t\t\t\t\\\n+  /* FIXME.  Currently -fira-share-spill-slots causes a wrong code\t\\\n+     problem PR 37514, though the compiler generates lengthy codes\t\\\n+     in some cases without it.  */\t\t\t\t\t\\\n+  if (flag_ira_share_spill_slots == 2)\t\t\t\t\t\\\n+    flag_ira_share_spill_slots = 0;\t\t\t\t\t\\\n+\t\t\t\t\t\t\t\t\t\\\n   if (align_loops == 0)\t\t\t\t\t\t\t\\\n     align_loops =  1 << (TARGET_SH5 ? 3 : 2);\t\t\t\t\\\n   if (align_jumps == 0)\t\t\t\t\t\t\t\\"}, {"sha": "393e9e9c68863c8f1964b3bc4baece03c6f24289", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/befc25099bbedd2d49f23f929b6c441894c8cb5c/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/befc25099bbedd2d49f23f929b6c441894c8cb5c/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=befc25099bbedd2d49f23f929b6c441894c8cb5c", "patch": "@@ -1,3 +1,7 @@\n+2008-11-10  Kaz Kojima  <kkojima@gcc.gnu.org>\n+\n+\t* gcc.target/sh/pr37514.c: New test.\n+\n 2008-11-10  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* g++.dg/other/anon5.C: Skip on Solaris."}, {"sha": "fa68ebeed4c841f312365150c2790404d3c158ac", "filename": "gcc/testsuite/gcc.target/sh/pr37514.c", "status": "added", "additions": 65, "deletions": 0, "changes": 65, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/befc25099bbedd2d49f23f929b6c441894c8cb5c/gcc%2Ftestsuite%2Fgcc.target%2Fsh%2Fpr37514.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/befc25099bbedd2d49f23f929b6c441894c8cb5c/gcc%2Ftestsuite%2Fgcc.target%2Fsh%2Fpr37514.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fsh%2Fpr37514.c?ref=befc25099bbedd2d49f23f929b6c441894c8cb5c", "patch": "@@ -0,0 +1,65 @@\n+/* This is essentially gcc.c-torture/execute/20021120-1.c run with\n+   -O3 -fomit-frame-pointer -fira-share-spill-slots.  */\n+/* { dg-do run { target \"sh*-*-*\" } } */\n+/* { dg-options \"-O3 -fomit-frame-pointer -fira-share-spill-slots\" } */\n+\n+/* Macros to emit \"L Nxx R\" for each octal number xx between 000 and 037.  */\n+#define OP1(L, N, R, I, J) L N##I##J R\n+#define OP2(L, N, R, I) \\\n+    OP1(L, N, R, 0, I), OP1(L, N, R, 1, I), \\\n+    OP1(L, N, R, 2, I), OP1(L, N, R, 3, I)\n+#define OP(L, N, R) \\\n+    OP2(L, N, R, 0), OP2(L, N, R, 1), OP2(L, N, R, 2), OP2(L, N, R, 3), \\\n+    OP2(L, N, R, 4), OP2(L, N, R, 5), OP2(L, N, R, 6), OP2(L, N, R, 7)\n+\n+/* Declare 32 unique variables with prefix N.  */\n+#define DECLARE(N) OP (, N,)\n+\n+/* Copy 32 variables with prefix N from the array at ADDR.\n+   Leave ADDR pointing to the end of the array.  */\n+#define COPYIN(N, ADDR) OP (, N, = *(ADDR++))\n+\n+/* Likewise, but copy the other way.  */\n+#define COPYOUT(N, ADDR) OP (*(ADDR++) =, N,)\n+\n+/* Add the contents of the array at ADDR to 32 variables with prefix N.\n+   Leave ADDR pointing to the end of the array.  */\n+#define ADD(N, ADDR) OP (, N, += *(ADDR++))\n+\n+volatile double gd[32];\n+volatile float gf[32];\n+\n+extern void abort (void);\n+\n+static void foo (int n)\n+{\n+  double DECLARE(d);\n+  float DECLARE(f);\n+  volatile double *pd;\n+  volatile float *pf;\n+  int i;\n+\n+  pd = gd; COPYIN (d, pd);\n+  for (i = 0; i < n; i++)\n+    {\n+      pf = gf; COPYIN (f, pf);\n+      pd = gd; ADD (d, pd);\n+      pd = gd; ADD (d, pd);\n+      pd = gd; ADD (d, pd);\n+      pf = gf; COPYOUT (f, pf);\n+    }\n+  pd = gd; COPYOUT (d, pd);\n+}\n+\n+int main ()\n+{\n+  int i;\n+\n+  for (i = 0; i < 32; i++)\n+    gd[i] = i, gf[i] = i;\n+  foo (1);\n+  for (i = 0; i < 32; i++)\n+    if (gd[i] != i * 4 || gf[i] != i)\n+      abort ();\n+  return 0;\n+}"}]}