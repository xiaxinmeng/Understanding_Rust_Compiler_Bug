{"sha": "b55f342bdd8bec16b727a5889c589dd85c5ca3c3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjU1ZjM0MmJkZDhiZWMxNmI3MjdhNTg4OWM1ODlkZDg1YzVjYTNjMw==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2018-05-25T12:36:03Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2018-05-25T12:36:03Z"}, "message": "re PR target/85832 ([AVX512] possible shorter code when comparing with vector of zeros)\n\n\tPR target/85832\n\t* config/i386/sse.md (<avx512>_eq<mode>3<mask_scalar_merge_name>_1):\n\tAdd (=Yk,v,C) variant using vptestm insn.  Use TARGET_AVX512BW\n\tin test instead of TARGET_AVX512F for VI12_AVX512VL iterator.\n\n\t* gcc.target/i386/avx512f-pr85832.c: New test.\n\t* gcc.target/i386/avx512vl-pr85832.c: New test.\n\t* gcc.target/i386/avx512bw-pr85832.c: New test.\n\t* gcc.target/i386/avx512vlbw-pr85832.c: New test.\n\nFrom-SVN: r260756", "tree": {"sha": "b8c50ed8706218048b0b1b202e265706550cc1ef", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b8c50ed8706218048b0b1b202e265706550cc1ef"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b55f342bdd8bec16b727a5889c589dd85c5ca3c3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b55f342bdd8bec16b727a5889c589dd85c5ca3c3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b55f342bdd8bec16b727a5889c589dd85c5ca3c3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b55f342bdd8bec16b727a5889c589dd85c5ca3c3/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "8e846c6670b85cd69a5760a604d8f9ce0dbc3730", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8e846c6670b85cd69a5760a604d8f9ce0dbc3730", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8e846c6670b85cd69a5760a604d8f9ce0dbc3730"}], "stats": {"total": 137, "additions": 128, "deletions": 9}, "files": [{"sha": "adaa0b4d9bcf81d6e93da604ab00fec1fa53c578", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b55f342bdd8bec16b727a5889c589dd85c5ca3c3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b55f342bdd8bec16b727a5889c589dd85c5ca3c3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b55f342bdd8bec16b727a5889c589dd85c5ca3c3", "patch": "@@ -1,3 +1,10 @@\n+2018-05-25  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/85832\n+\t* config/i386/sse.md (<avx512>_eq<mode>3<mask_scalar_merge_name>_1):\n+\tAdd (=Yk,v,C) variant using vptestm insn.  Use TARGET_AVX512BW\n+\tin test instead of TARGET_AVX512F for VI12_AVX512VL iterator.\n+\n 2018-05-25  Richard Biener  <rguenther@suse.de>\n \n \t* tree-vect-data-refs.c (vect_find_stmt_data_reference): New"}, {"sha": "a11180ff4abb83c78010392fb0192333346ede35", "filename": "gcc/config/i386/sse.md", "status": "modified", "additions": 13, "deletions": 9, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b55f342bdd8bec16b727a5889c589dd85c5ca3c3/gcc%2Fconfig%2Fi386%2Fsse.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b55f342bdd8bec16b727a5889c589dd85c5ca3c3/gcc%2Fconfig%2Fi386%2Fsse.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsse.md?ref=b55f342bdd8bec16b727a5889c589dd85c5ca3c3", "patch": "@@ -11207,26 +11207,30 @@\n   \"ix86_fixup_binary_operands_no_copy (EQ, <MODE>mode, operands);\")\n \n (define_insn \"<avx512>_eq<mode>3<mask_scalar_merge_name>_1\"\n-  [(set (match_operand:<avx512fmaskmode> 0 \"register_operand\" \"=Yk\")\n+  [(set (match_operand:<avx512fmaskmode> 0 \"register_operand\" \"=Yk,Yk\")\n \t(unspec:<avx512fmaskmode>\n-\t  [(match_operand:VI12_AVX512VL 1 \"nonimmediate_operand\" \"%v\")\n-\t   (match_operand:VI12_AVX512VL 2 \"nonimmediate_operand\" \"vm\")]\n+\t  [(match_operand:VI12_AVX512VL 1 \"vector_move_operand\" \"%v,v\")\n+\t   (match_operand:VI12_AVX512VL 2 \"vector_move_operand\" \"vm,C\")]\n \t  UNSPEC_MASKED_EQ))]\n-  \"TARGET_AVX512F && !(MEM_P (operands[1]) && MEM_P (operands[2]))\"\n-  \"vpcmpeq<ssemodesuffix>\\t{%2, %1, %0<mask_scalar_merge_operand3>|%0<mask_scalar_merge_operand3>, %1, %2}\"\n+  \"TARGET_AVX512BW && !(MEM_P (operands[1]) && MEM_P (operands[2]))\"\n+  \"@\n+   vpcmpeq<ssemodesuffix>\\t{%2, %1, %0<mask_scalar_merge_operand3>|%0<mask_scalar_merge_operand3>, %1, %2}\n+   vptestm<ssemodesuffix>\\t{%1, %1, %0<mask_scalar_merge_operand3>|%0<mask_scalar_merge_operand3>, %1, %1}\"\n   [(set_attr \"type\" \"ssecmp\")\n    (set_attr \"prefix_extra\" \"1\")\n    (set_attr \"prefix\" \"evex\")\n    (set_attr \"mode\" \"<sseinsnmode>\")])\n \n (define_insn \"<avx512>_eq<mode>3<mask_scalar_merge_name>_1\"\n-  [(set (match_operand:<avx512fmaskmode> 0 \"register_operand\" \"=Yk\")\n+  [(set (match_operand:<avx512fmaskmode> 0 \"register_operand\" \"=Yk,Yk\")\n \t(unspec:<avx512fmaskmode>\n-\t  [(match_operand:VI48_AVX512VL 1 \"nonimmediate_operand\" \"%v\")\n-\t   (match_operand:VI48_AVX512VL 2 \"nonimmediate_operand\" \"vm\")]\n+\t  [(match_operand:VI48_AVX512VL 1 \"vector_move_operand\" \"%v,v\")\n+\t   (match_operand:VI48_AVX512VL 2 \"vector_move_operand\" \"vm,C\")]\n \t  UNSPEC_MASKED_EQ))]\n   \"TARGET_AVX512F && !(MEM_P (operands[1]) && MEM_P (operands[2]))\"\n-  \"vpcmpeq<ssemodesuffix>\\t{%2, %1, %0<mask_scalar_merge_operand3>|%0<mask_scalar_merge_operand3>, %1, %2}\"\n+  \"@\n+   vpcmpeq<ssemodesuffix>\\t{%2, %1, %0<mask_scalar_merge_operand3>|%0<mask_scalar_merge_operand3>, %1, %2}\n+   vptestm<ssemodesuffix>\\t{%1, %1, %0<mask_scalar_merge_operand3>|%0<mask_scalar_merge_operand3>, %1, %1}\"\n   [(set_attr \"type\" \"ssecmp\")\n    (set_attr \"prefix_extra\" \"1\")\n    (set_attr \"prefix\" \"evex\")"}, {"sha": "62862e5b3f79d2112f1084d83040c710493fb9c9", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b55f342bdd8bec16b727a5889c589dd85c5ca3c3/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b55f342bdd8bec16b727a5889c589dd85c5ca3c3/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=b55f342bdd8bec16b727a5889c589dd85c5ca3c3", "patch": "@@ -1,3 +1,11 @@\n+2018-05-25  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/85832\n+\t* gcc.target/i386/avx512f-pr85832.c: New test.\n+\t* gcc.target/i386/avx512vl-pr85832.c: New test.\n+\t* gcc.target/i386/avx512bw-pr85832.c: New test.\n+\t* gcc.target/i386/avx512vlbw-pr85832.c: New test.\n+\n 2018-05-25  Bin Cheng  <bin.cheng@arm.com>\n \n \tPR tree-optimization/85720"}, {"sha": "40e4a2a47e9603c706cb500dcc506355ae6106fd", "filename": "gcc/testsuite/gcc.target/i386/avx512bw-pr85832.c", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b55f342bdd8bec16b727a5889c589dd85c5ca3c3/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512bw-pr85832.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b55f342bdd8bec16b727a5889c589dd85c5ca3c3/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512bw-pr85832.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512bw-pr85832.c?ref=b55f342bdd8bec16b727a5889c589dd85c5ca3c3", "patch": "@@ -0,0 +1,19 @@\n+/* PR target/85832 */\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -mavx512bw -mno-avx512vl -masm=att\" } */\n+/* { dg-final { scan-assembler-times {\\mvptestmb\\M} 1 } } */\n+/* { dg-final { scan-assembler-times {\\mvptestmw\\M} 1 } } */\n+\n+#include <x86intrin.h>\n+\n+int\n+f1 (__m512i x)\n+{\n+  return _mm512_cmpeq_epi8_mask (x, _mm512_setzero_si512 ());\n+}\n+\n+int\n+f2 (__m512i x)\n+{\n+  return _mm512_cmpeq_epi16_mask (x, _mm512_setzero_si512 ());\n+}"}, {"sha": "98b71405ee0689d72d6535cc303fb39301751bac", "filename": "gcc/testsuite/gcc.target/i386/avx512f-pr85832.c", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b55f342bdd8bec16b727a5889c589dd85c5ca3c3/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-pr85832.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b55f342bdd8bec16b727a5889c589dd85c5ca3c3/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-pr85832.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-pr85832.c?ref=b55f342bdd8bec16b727a5889c589dd85c5ca3c3", "patch": "@@ -0,0 +1,19 @@\n+/* PR target/85832 */\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -mavx512f -mno-avx512vl -mno-avx512bw -masm=att\" } */\n+/* { dg-final { scan-assembler-times {\\mvptestmd\\M} 1 } } */\n+/* { dg-final { scan-assembler-times {\\mvptestmq\\M} 1 } } */\n+\n+#include <x86intrin.h>\n+\n+int\n+f1 (__m512i x)\n+{\n+  return _mm512_cmpeq_epi32_mask (x, _mm512_setzero_si512 ());\n+}\n+\n+int\n+f2 (__m512i x)\n+{\n+  return _mm512_cmpeq_epi64_mask (x, _mm512_setzero_si512 ());\n+}"}, {"sha": "6eb7178124bb6094e71ff7057c67cd4b05287704", "filename": "gcc/testsuite/gcc.target/i386/avx512vl-pr85832.c", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b55f342bdd8bec16b727a5889c589dd85c5ca3c3/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512vl-pr85832.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b55f342bdd8bec16b727a5889c589dd85c5ca3c3/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512vl-pr85832.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512vl-pr85832.c?ref=b55f342bdd8bec16b727a5889c589dd85c5ca3c3", "patch": "@@ -0,0 +1,31 @@\n+/* PR target/85832 */\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -mavx512vl -mno-avx512bw -masm=att\" } */\n+/* { dg-final { scan-assembler-times {\\mvptestmd\\M} 2 } } */\n+/* { dg-final { scan-assembler-times {\\mvptestmq\\M} 2 } } */\n+\n+#include <x86intrin.h>\n+\n+int\n+f1 (__m256i x)\n+{\n+  return _mm256_cmpeq_epi32_mask (x, _mm256_setzero_si256 ());\n+}\n+\n+int\n+f2 (__m256i x)\n+{\n+  return _mm256_cmpeq_epi64_mask (x, _mm256_setzero_si256 ());\n+}\n+\n+int\n+f3 (__m128i x)\n+{\n+  return _mm_cmpeq_epi32_mask (x, _mm_setzero_si128 ());\n+}\n+\n+int\n+f4 (__m128i x)\n+{\n+  return _mm_cmpeq_epi64_mask (x, _mm_setzero_si128 ());\n+}"}, {"sha": "6fbdf5aec7176c4af299da42a954522545908b09", "filename": "gcc/testsuite/gcc.target/i386/avx512vlbw-pr85832.c", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b55f342bdd8bec16b727a5889c589dd85c5ca3c3/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512vlbw-pr85832.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b55f342bdd8bec16b727a5889c589dd85c5ca3c3/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512vlbw-pr85832.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512vlbw-pr85832.c?ref=b55f342bdd8bec16b727a5889c589dd85c5ca3c3", "patch": "@@ -0,0 +1,31 @@\n+/* PR target/85832 */\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -mavx512vl -mavx512bw -masm=att\" } */\n+/* { dg-final { scan-assembler-times {\\mvptestmb\\M} 2 } } */\n+/* { dg-final { scan-assembler-times {\\mvptestmw\\M} 2 } } */\n+\n+#include <x86intrin.h>\n+\n+int\n+f1 (__m256i x)\n+{\n+  return _mm256_cmpeq_epi8_mask (x, _mm256_setzero_si256 ());\n+}\n+\n+int\n+f2 (__m256i x)\n+{\n+  return _mm256_cmpeq_epi16_mask (x, _mm256_setzero_si256 ());\n+}\n+\n+int\n+f3 (__m128i x)\n+{\n+  return _mm_cmpeq_epi8_mask (x, _mm_setzero_si128 ());\n+}\n+\n+int\n+f4 (__m128i x)\n+{\n+  return _mm_cmpeq_epi16_mask (x, _mm_setzero_si128 ());\n+}"}]}