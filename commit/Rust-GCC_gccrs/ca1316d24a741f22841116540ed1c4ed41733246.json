{"sha": "ca1316d24a741f22841116540ed1c4ed41733246", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2ExMzE2ZDI0YTc0MWYyMjg0MTExNjU0MGVkMWM0ZWQ0MTczMzI0Ng==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2010-07-09T10:05:27Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2010-07-09T10:05:27Z"}, "message": "re PR fortran/44882 (Bogus types in references with mismatched commons)\n\n2010-07-09  Richard Guenther  <rguenther@suse.de>\n\n\tPR tree-optimization/44882\n\t* tree-vect-stmts.c (vectorizable_store): Do not assert alias\n\tsets do conflict.\n\t(vectorizable_load): Likewise.\n\n\t* gfortran.dg/pr44882.f90: New testcase.\n\nFrom-SVN: r161990", "tree": {"sha": "505c4c21f4354e1851738eb222850c3a045f8c41", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/505c4c21f4354e1851738eb222850c3a045f8c41"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ca1316d24a741f22841116540ed1c4ed41733246", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ca1316d24a741f22841116540ed1c4ed41733246", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ca1316d24a741f22841116540ed1c4ed41733246", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ca1316d24a741f22841116540ed1c4ed41733246/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "2dd0f799c452e2f44ad8c54a8624a4d4eb1b9eac", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2dd0f799c452e2f44ad8c54a8624a4d4eb1b9eac", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2dd0f799c452e2f44ad8c54a8624a4d4eb1b9eac"}], "stats": {"total": 35, "additions": 26, "deletions": 9}, "files": [{"sha": "4666f4cbed0158eea7ee49089ab6d4f08b8628d2", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca1316d24a741f22841116540ed1c4ed41733246/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca1316d24a741f22841116540ed1c4ed41733246/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ca1316d24a741f22841116540ed1c4ed41733246", "patch": "@@ -1,3 +1,10 @@\n+2010-07-09  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/44882\n+\t* tree-vect-stmts.c (vectorizable_store): Do not assert alias\n+\tsets do conflict.\n+\t(vectorizable_load): Likewise.\n+\n 2010-07-09  Bernd Schmidt  <bernds@codesourcery.com>\n \n \tPR target/40657"}, {"sha": "6a42b4e56601983929af54283255b30e13ccbe84", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca1316d24a741f22841116540ed1c4ed41733246/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca1316d24a741f22841116540ed1c4ed41733246/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=ca1316d24a741f22841116540ed1c4ed41733246", "patch": "@@ -1,3 +1,8 @@\n+2010-07-09  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/44882\n+\t* gfortran.dg/pr44882.f90: New testcase.\n+\n 2010-07-09  Bernd Schmidt  <bernds@codesourcery.com>\n \n \tPR target/40657"}, {"sha": "ac22459dc08a7e2505d4d219ab76e945fb4fdad4", "filename": "gcc/testsuite/gfortran.dg/pr44882.f90", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca1316d24a741f22841116540ed1c4ed41733246/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr44882.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca1316d24a741f22841116540ed1c4ed41733246/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr44882.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr44882.f90?ref=ca1316d24a741f22841116540ed1c4ed41733246", "patch": "@@ -0,0 +1,14 @@\n+! { dg-do compile }\n+! { dg-options \"-O3 -ffast-math -funroll-loops -w\" }\n+\n+      SUBROUTINE TRUDGE(KDIR)\n+! There is a type mismatch here for TRUPAR which caused an ICE\n+      COMMON /TRUPAR/ DR(10),V(10,10)\n+      DO 110 I=1,NDIR\n+  110 DR(I)=V(I,JDIR)\n+      END\n+      SUBROUTINE TRUSRC(LEAVE)\n+      IMPLICIT DOUBLE PRECISION (A-H,O-Z)\n+      COMMON /TRUPAR/ DX(10),V(10,10)\n+      END\n+"}, {"sha": "e0ae55904daaf06f53f241f2acdde113e68cbea1", "filename": "gcc/tree-vect-stmts.c", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca1316d24a741f22841116540ed1c4ed41733246/gcc%2Ftree-vect-stmts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca1316d24a741f22841116540ed1c4ed41733246/gcc%2Ftree-vect-stmts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-stmts.c?ref=ca1316d24a741f22841116540ed1c4ed41733246", "patch": "@@ -3372,11 +3372,6 @@ vectorizable_store (gimple stmt, gimple_stmt_iterator *gsi, gimple *vec_stmt,\n             data_ref = build2 (MISALIGNED_INDIRECT_REF, vectype, dataref_ptr, tmis);\n            }\n \n-\t  /* If accesses through a pointer to vectype do not alias the original\n-\t     memory reference we have a problem.  This should never happen.  */\n-\t  gcc_assert (alias_sets_conflict_p (get_alias_set (data_ref),\n-\t\t      get_alias_set (gimple_assign_lhs (stmt))));\n-\n \t  /* Arguments are ready. Create the new vector stmt.  */\n \t  new_stmt = gimple_build_assign (data_ref, vec_oprnd);\n \t  vect_finish_stmt_generation (stmt, new_stmt, gsi);\n@@ -3822,10 +3817,6 @@ vectorizable_load (gimple stmt, gimple_stmt_iterator *gsi, gimple *vec_stmt,\n \t    default:\n \t      gcc_unreachable ();\n \t    }\n-\t  /* If accesses through a pointer to vectype do not alias the original\n-\t     memory reference we have a problem.  This should never happen. */\n-\t  gcc_assert (alias_sets_conflict_p (get_alias_set (data_ref),\n-\t\t      get_alias_set (gimple_assign_rhs1 (stmt))));\n \t  vec_dest = vect_create_destination_var (scalar_dest, vectype);\n \t  new_stmt = gimple_build_assign (vec_dest, data_ref);\n \t  new_temp = make_ssa_name (vec_dest, new_stmt);"}]}