{"sha": "6a1cb33a404025cb4d97876dd47e55c6800c6942", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmExY2IzM2E0MDQwMjVjYjRkOTc4NzZkZDQ3ZTU1YzY4MDBjNjk0Mg==", "commit": {"author": {"name": "Bob Duff", "email": "duff@adacore.com", "date": "2007-12-13T10:23:29Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2007-12-13T10:23:29Z"}, "message": "clean.adb (Usage): Add line for -aP\n\n2007-12-06  Bob Duff  <duff@adacore.com>\n\n\t* clean.adb (Usage): Add line for -aP\n\t(Check_Version_And_Help): Change Check_Version_And_Help to be generic,\n\twith a parameter \"procedure Usage\", instead of passing a pointer to a\n\tprocedure. This is to eliminate trampolines (since the Usage procedure\n\tis often nested in a main procedure, and it would be inconvenient to\n\tunnest it).\n\n\t* g-comlin.adb (For_Each_Simple_Switch): Change For_Each_Simple_Switch\n\tto be generic, with a parameter \"procedure Callback (...)\", instead of\n\tpassing a pointer to a procedure. This is to eliminate trampolines\n\t(since the Callback procedure is usually nested).\n\n\t* gnatfind.adb, switch.adb, switch.ads, gnatlink.adb, gnatls.adb, \n\tgnatname.adb, gnatxref.adb, gnatchop.adb, gprep.adb, gnatbind.adb\n\t(Check_Version_And_Help): Change Check_Version_And_Help to be generic.\n\n\t* g-pehage.adb (Compute_Edges_And_Vertices, Build_Identical_Key_Sets):\n\tUse the generic Heap_Sort_G instead of Heap_Sort_A.\n\nFrom-SVN: r130824", "tree": {"sha": "740c5aba3c0949b0af4ce8a5af9213a4c4837b5f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/740c5aba3c0949b0af4ce8a5af9213a4c4837b5f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6a1cb33a404025cb4d97876dd47e55c6800c6942", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6a1cb33a404025cb4d97876dd47e55c6800c6942", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6a1cb33a404025cb4d97876dd47e55c6800c6942", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6a1cb33a404025cb4d97876dd47e55c6800c6942/comments", "author": {"login": "bobduff", "id": 29099567, "node_id": "MDQ6VXNlcjI5MDk5NTY3", "avatar_url": "https://avatars.githubusercontent.com/u/29099567?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bobduff", "html_url": "https://github.com/bobduff", "followers_url": "https://api.github.com/users/bobduff/followers", "following_url": "https://api.github.com/users/bobduff/following{/other_user}", "gists_url": "https://api.github.com/users/bobduff/gists{/gist_id}", "starred_url": "https://api.github.com/users/bobduff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bobduff/subscriptions", "organizations_url": "https://api.github.com/users/bobduff/orgs", "repos_url": "https://api.github.com/users/bobduff/repos", "events_url": "https://api.github.com/users/bobduff/events{/privacy}", "received_events_url": "https://api.github.com/users/bobduff/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "16a55e63a98590ef71a37ff61c828c6b16bd75fb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/16a55e63a98590ef71a37ff61c828c6b16bd75fb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/16a55e63a98590ef71a37ff61c828c6b16bd75fb"}], "stats": {"total": 189, "additions": 117, "deletions": 72}, "files": [{"sha": "bbe84edf61ba75a8761b730ee71c335c4c931589", "filename": "gcc/ada/clean.adb", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a1cb33a404025cb4d97876dd47e55c6800c6942/gcc%2Fada%2Fclean.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a1cb33a404025cb4d97876dd47e55c6800c6942/gcc%2Fada%2Fclean.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fclean.adb?ref=6a1cb33a404025cb4d97876dd47e55c6800c6942", "patch": "@@ -1637,10 +1637,12 @@ package body Clean is\n       Source_Index : Int := 0;\n       Index        : Positive;\n \n+      procedure Check_Version_And_Help is new Check_Version_And_Help_G (Usage);\n+\n    begin\n       --  First, check for --version and --help\n \n-      Check_Version_And_Help (\"GNATCLEAN\", \"2003\", Usage'Access);\n+      Check_Version_And_Help (\"GNATCLEAN\", \"2003\");\n \n       Index := 1;\n       while Index <= Last loop\n@@ -1970,6 +1972,9 @@ package body Clean is\n                    \"for GNAT Project Files\");\n          New_Line;\n \n+         Put_Line (\"  -aPdir   Add directory dir to project search path\");\n+         New_Line;\n+\n          Put_Line (\"  -aOdir   Specify ALI/object files search path\");\n          Put_Line (\"  -Idir    Like -aOdir\");\n          Put_Line (\"  -I-      Don't look for source/library files \" &"}, {"sha": "d661978bd591fc305646537f9c90843b7a5163ad", "filename": "gcc/ada/g-comlin.adb", "status": "modified", "additions": 25, "deletions": 21, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a1cb33a404025cb4d97876dd47e55c6800c6942/gcc%2Fada%2Fg-comlin.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a1cb33a404025cb4d97876dd47e55c6800c6942/gcc%2Fada%2Fg-comlin.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-comlin.adb?ref=6a1cb33a404025cb4d97876dd47e55c6800c6942", "patch": "@@ -114,11 +114,11 @@ package body GNAT.Command_Line is\n    function Args_From_Expanded (Args : Boolean_Chars) return String;\n    --  Return the string made of all characters with True in Args\n \n-   type Callback_Procedure is access procedure (Simple_Switch : String);\n+   generic\n+      with procedure Callback (Simple_Switch : String);\n    procedure For_Each_Simple_Switch\n-     (Cmd      : Command_Line;\n-      Switch   : String;\n-      Callback : Callback_Procedure);\n+     (Cmd    : Command_Line;\n+      Switch : String);\n    --  Breaks Switch into as simple switches as possible (expanding aliases and\n    --  ungrouping common prefixes when possible), and call Callback for each of\n    --  these.\n@@ -1185,9 +1185,8 @@ package body GNAT.Command_Line is\n    ----------------------------\n \n    procedure For_Each_Simple_Switch\n-     (Cmd      : Command_Line;\n-      Switch   : String;\n-      Callback : Callback_Procedure)\n+     (Cmd    : Command_Line;\n+      Switch : String)\n    is\n    begin\n       --  Are we adding a switch that can in fact be expanded through aliases ?\n@@ -1204,7 +1203,7 @@ package body GNAT.Command_Line is\n          for A in Cmd.Config.Aliases'Range loop\n             if Cmd.Config.Aliases (A).all = Switch then\n                For_Each_Simple_Switch\n-                 (Cmd, Cmd.Config.Expansions (A).all, Callback);\n+                 (Cmd, Cmd.Config.Expansions (A).all);\n                return;\n             end if;\n          end loop;\n@@ -1227,7 +1226,7 @@ package body GNAT.Command_Line is\n                           .. Switch'Last\n                loop\n                   For_Each_Simple_Switch\n-                    (Cmd, Cmd.Config.Prefixes (P).all & Switch (S), Callback);\n+                    (Cmd, Cmd.Config.Prefixes (P).all & Switch (S));\n                end loop;\n                return;\n             end if;\n@@ -1291,11 +1290,13 @@ package body GNAT.Command_Line is\n          end if;\n       end Add_Simple_Switch;\n \n+      procedure Add_Simple_Switches is\n+         new For_Each_Simple_Switch (Add_Simple_Switch);\n+\n    --  Start of processing for Add_Switch\n \n    begin\n-      For_Each_Simple_Switch\n-        (Cmd, Switch, Add_Simple_Switch'Unrestricted_Access);\n+      Add_Simple_Switches (Cmd, Switch);\n       Free (Cmd.Coalesce);\n    end Add_Switch;\n \n@@ -1381,11 +1382,13 @@ package body GNAT.Command_Line is\n          end if;\n       end Remove_Simple_Switch;\n \n+      procedure Remove_Simple_Switches is\n+         new For_Each_Simple_Switch (Remove_Simple_Switch);\n+\n    --  Start of processing for Remove_Switch\n \n    begin\n-      For_Each_Simple_Switch\n-        (Cmd, Switch, Remove_Simple_Switch'Unrestricted_Access);\n+      Remove_Simple_Switches (Cmd, Switch);\n       Free (Cmd.Coalesce);\n    end Remove_Switch;\n \n@@ -1440,11 +1443,13 @@ package body GNAT.Command_Line is\n          end if;\n       end Remove_Simple_Switch;\n \n+      procedure Remove_Simple_Switches is\n+         new For_Each_Simple_Switch (Remove_Simple_Switch);\n+\n    --  Start of processing for Remove_Switch\n \n    begin\n-      For_Each_Simple_Switch\n-        (Cmd, Switch, Remove_Simple_Switch'Unrestricted_Access);\n+      Remove_Simple_Switches (Cmd, Switch);\n       Free (Cmd.Coalesce);\n    end Remove_Switch;\n \n@@ -1566,6 +1571,9 @@ package body GNAT.Command_Line is\n          end loop;\n       end Remove_Cb;\n \n+      procedure Check_All is new For_Each_Simple_Switch (Check_Cb);\n+      procedure Remove_All is new For_Each_Simple_Switch (Remove_Cb);\n+\n    --  Start of processing for Alias_Switches\n \n    begin\n@@ -1582,15 +1590,11 @@ package body GNAT.Command_Line is\n          --  then check whether the expanded command line has all of them.\n \n          Found := True;\n-         For_Each_Simple_Switch\n-           (Cmd, Cmd.Config.Expansions (A).all,\n-            Check_Cb'Unrestricted_Access);\n+         Check_All (Cmd, Cmd.Config.Expansions (A).all);\n \n          if Found then\n             First := Integer'Last;\n-            For_Each_Simple_Switch\n-              (Cmd, Cmd.Config.Expansions (A).all,\n-               Remove_Cb'Unrestricted_Access);\n+            Remove_All (Cmd, Cmd.Config.Expansions (A).all);\n             Result (First) := new String'(Cmd.Config.Aliases (A).all);\n          end if;\n       end loop;"}, {"sha": "6d9670f69f8ce19991cb4ca94989e641d0c514bc", "filename": "gcc/ada/g-pehage.adb", "status": "modified", "additions": 10, "deletions": 12, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a1cb33a404025cb4d97876dd47e55c6800c6942/gcc%2Fada%2Fg-pehage.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a1cb33a404025cb4d97876dd47e55c6800c6942/gcc%2Fada%2Fg-pehage.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-pehage.adb?ref=6a1cb33a404025cb4d97876dd47e55c6800c6942", "patch": "@@ -34,7 +34,7 @@\n with Ada.Exceptions;    use Ada.Exceptions;\n with Ada.IO_Exceptions; use Ada.IO_Exceptions;\n \n-with GNAT.Heap_Sort_A; use GNAT.Heap_Sort_A;\n+with GNAT.Heap_Sort_G;\n with GNAT.OS_Lib;      use GNAT.OS_Lib;\n with GNAT.Table;\n \n@@ -696,7 +696,7 @@ package body GNAT.Perfect_Hash_Generators is\n \n       procedure Move (From : Natural; To : Natural);\n       function Lt (L, R : Natural) return Boolean;\n-      --  Subprograms needed for GNAT.Heap_Sort_A\n+      --  Subprograms needed for GNAT.Heap_Sort_G\n \n       --------\n       -- Lt --\n@@ -718,11 +718,13 @@ package body GNAT.Perfect_Hash_Generators is\n          Set_Edges (To, Get_Edges (From));\n       end Move;\n \n+      package Sorting is new GNAT.Heap_Sort_G (Move, Lt);\n+\n    --  Start of processing for Compute_Edges_And_Vertices\n \n    begin\n       --  We store edges from 1 to 2 * NK and leave zero alone in order to use\n-      --  GNAT.Heap_Sort_A.\n+      --  GNAT.Heap_Sort_G.\n \n       Edges_Len := 2 * NK + 1;\n \n@@ -780,10 +782,7 @@ package body GNAT.Perfect_Hash_Generators is\n          --  is sorted by X and then Y. To compute the neighbor list, sort the\n          --  edges.\n \n-         Sort\n-           (Edges_Len - 1,\n-            Move'Unrestricted_Access,\n-            Lt'Unrestricted_Access);\n+         Sorting.Sort (Edges_Len - 1);\n \n          if Verbose then\n             Put_Edges      (Output, \"Sorted Edge Table\");\n@@ -1976,7 +1975,7 @@ package body GNAT.Perfect_Hash_Generators is\n \n          function Lt (L, R : Natural) return Boolean;\n          procedure Move (From : Natural; To : Natural);\n-         --  Subprograms needed by GNAT.Heap_Sort_A\n+         --  Subprograms needed by GNAT.Heap_Sort_G\n \n          --------\n          -- Lt --\n@@ -2024,6 +2023,8 @@ package body GNAT.Perfect_Hash_Generators is\n             WT.Table (Target) := WT.Table (Source);\n          end Move;\n \n+         package Sorting is new GNAT.Heap_Sort_G (Move, Lt);\n+\n       --  Start of processing for Build_Identical_Key_Sets\n \n       begin\n@@ -2041,10 +2042,7 @@ package body GNAT.Perfect_Hash_Generators is\n \n             else\n                Offset := Reduced (S (J).First) - 1;\n-               Sort\n-                 (S (J).Last - S (J).First + 1,\n-                  Move'Unrestricted_Access,\n-                  Lt'Unrestricted_Access);\n+               Sorting.Sort (S (J).Last - S (J).First + 1);\n \n                F := S (J).First;\n                L := F;"}, {"sha": "b8bb524f2ec4ce5e1019cdf2c6f6b22cac448415", "filename": "gcc/ada/gnatbind.adb", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a1cb33a404025cb4d97876dd47e55c6800c6942/gcc%2Fada%2Fgnatbind.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a1cb33a404025cb4d97876dd47e55c6800c6942/gcc%2Fada%2Fgnatbind.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnatbind.adb?ref=6a1cb33a404025cb4d97876dd47e55c6800c6942", "patch": "@@ -403,6 +403,9 @@ procedure Gnatbind is\n       end if;\n    end Scan_Bind_Arg;\n \n+   procedure Check_Version_And_Help is\n+      new Check_Version_And_Help_G (Bindusg.Display);\n+\n --  Start of processing for Gnatbind\n \n begin\n@@ -429,7 +432,7 @@ begin\n \n    --  First, scan to detect --version and/or --help\n \n-   Check_Version_And_Help (\"GNATBIND\", \"1995\", Bindusg.Display'Access);\n+   Check_Version_And_Help (\"GNATBIND\", \"1995\");\n \n    --  Use low level argument routines to avoid dragging in the secondary stack\n "}, {"sha": "8a72c4e3bb67ab30155dd9df92e7f521ca5b2126", "filename": "gcc/ada/gnatchop.adb", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a1cb33a404025cb4d97876dd47e55c6800c6942/gcc%2Fada%2Fgnatchop.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a1cb33a404025cb4d97876dd47e55c6800c6942/gcc%2Fada%2Fgnatchop.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnatchop.adb?ref=6a1cb33a404025cb4d97876dd47e55c6800c6942", "patch": "@@ -1724,6 +1724,8 @@ procedure Gnatchop is\n       end;\n    end Write_Unit;\n \n+      procedure Check_Version_And_Help is new Check_Version_And_Help_G (Usage);\n+\n --  Start of processing for gnatchop\n \n begin\n@@ -1763,7 +1765,7 @@ begin\n \n    --  First, scan to detect --version and/or --help\n \n-   Check_Version_And_Help (\"GNATCHOP\", \"1998\", Usage'Unrestricted_Access);\n+   Check_Version_And_Help (\"GNATCHOP\", \"1998\");\n \n    if not Scan_Arguments then\n       Set_Exit_Status (Failure);"}, {"sha": "21ba0cbc3ba58aaa9320bd1b5e14c794fb404857", "filename": "gcc/ada/gnatfind.adb", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a1cb33a404025cb4d97876dd47e55c6800c6942/gcc%2Fada%2Fgnatfind.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a1cb33a404025cb4d97876dd47e55c6800c6942/gcc%2Fada%2Fgnatfind.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnatfind.adb?ref=6a1cb33a404025cb4d97876dd47e55c6800c6942", "patch": "@@ -78,10 +78,15 @@ procedure Gnatfind is\n    --------------------\n \n    procedure Parse_Cmd_Line is\n+\n+      procedure Check_Version_And_Help is new Check_Version_And_Help_G (Usage);\n+\n+      --  Start of processing for Parse_Cmd_Line\n+\n    begin\n       --  First check for --version or --help\n \n-      Check_Version_And_Help (\"GNATFIND\", \"1998\", Usage'Unrestricted_Access);\n+      Check_Version_And_Help (\"GNATFIND\", \"1998\");\n \n       --  Now scan the other switches\n "}, {"sha": "a6d4b305e170d52bdf79285a1194bd7b2cafa3e2", "filename": "gcc/ada/gnatlink.adb", "status": "modified", "additions": 11, "deletions": 2, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a1cb33a404025cb4d97876dd47e55c6800c6942/gcc%2Fada%2Fgnatlink.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a1cb33a404025cb4d97876dd47e55c6800c6942/gcc%2Fada%2Fgnatlink.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnatlink.adb?ref=6a1cb33a404025cb4d97876dd47e55c6800c6942", "patch": "@@ -292,10 +292,14 @@ procedure Gnatlink is\n       --  Set to true if the next argument is to be added into the list of\n       --  linker's argument without parsing it.\n \n+      procedure Check_Version_And_Help is new Check_Version_And_Help_G (Usage);\n+\n+      --  Start of processing for Process_Args\n+\n    begin\n       --  First, check for --version and --help\n \n-      Check_Version_And_Help (\"GNATLINK\", \"1995\", Usage'Unrestricted_Access);\n+      Check_Version_And_Help (\"GNATLINK\", \"1995\");\n \n       --  Loop through arguments of gnatlink command\n \n@@ -1765,7 +1769,12 @@ begin\n               Binder_Options.Table (J);\n          end loop;\n \n-         Args (Args'Last) := Binder_Body_Src_File;\n+         --  Use the full path of the binder generated source, so that it is\n+         --  guaranteed that the debugger will find this source, even with\n+         --  STABS.\n+\n+         Args (Args'Last) :=\n+           new String'(Normalize_Pathname (Binder_Body_Src_File.all));\n \n          if Verbose_Mode then\n             Write_Str (Base_Name (Gcc_Path.all));"}, {"sha": "22aaed31d6280facd62c580fd1cd565dcf8e68f6", "filename": "gcc/ada/gnatls.adb", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a1cb33a404025cb4d97876dd47e55c6800c6942/gcc%2Fada%2Fgnatls.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a1cb33a404025cb4d97876dd47e55c6800c6942/gcc%2Fada%2Fgnatls.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnatls.adb?ref=6a1cb33a404025cb4d97876dd47e55c6800c6942", "patch": "@@ -1519,6 +1519,8 @@ procedure Gnatls is\n       end loop;\n    end Usage;\n \n+   procedure Check_Version_And_Help is new Check_Version_And_Help_G (Usage);\n+\n --  Start of processing for Gnatls\n \n begin\n@@ -1530,7 +1532,7 @@ begin\n \n    --  First check for --version or --help\n \n-   Check_Version_And_Help (\"GNATLS\", \"1997\", Usage'Unrestricted_Access);\n+   Check_Version_And_Help (\"GNATLS\", \"1997\");\n \n    --  Loop to scan out arguments\n "}, {"sha": "06ef1f27e98948f77c6352d3f0c4c3bcd142df5e", "filename": "gcc/ada/gnatname.adb", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a1cb33a404025cb4d97876dd47e55c6800c6942/gcc%2Fada%2Fgnatname.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a1cb33a404025cb4d97876dd47e55c6800c6942/gcc%2Fada%2Fgnatname.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnatname.adb?ref=6a1cb33a404025cb4d97876dd47e55c6800c6942", "patch": "@@ -177,10 +177,15 @@ procedure Gnatname is\n    ---------------\n \n    procedure Scan_Args is\n+\n+      procedure Check_Version_And_Help is new Check_Version_And_Help_G (Usage);\n+\n+      --  Start of processing for Scan_Args\n+\n    begin\n       --  First check for --version or --help\n \n-      Check_Version_And_Help (\"GNATNAME\", \"2001\", Usage'Unrestricted_Access);\n+      Check_Version_And_Help (\"GNATNAME\", \"2001\");\n \n       --  Now scan the other switches\n "}, {"sha": "af61ef7c0bb0f923d73f2b595ad5e3586e5a5679", "filename": "gcc/ada/gnatxref.adb", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a1cb33a404025cb4d97876dd47e55c6800c6942/gcc%2Fada%2Fgnatxref.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a1cb33a404025cb4d97876dd47e55c6800c6942/gcc%2Fada%2Fgnatxref.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnatxref.adb?ref=6a1cb33a404025cb4d97876dd47e55c6800c6942", "patch": "@@ -66,10 +66,15 @@ procedure Gnatxref is\n    --------------------\n \n    procedure Parse_Cmd_Line is\n+\n+      procedure Check_Version_And_Help is new Check_Version_And_Help_G (Usage);\n+\n+      --  Start of processing for Parse_Cmd_Line\n+\n    begin\n       --  First check for --version or --help\n \n-      Check_Version_And_Help (\"GNATXREF\", \"1998\", Usage'Unrestricted_Access);\n+      Check_Version_And_Help (\"GNATXREF\", \"1998\");\n \n       loop\n          case"}, {"sha": "1aed7ef701feb058cb90190af1af543c2b319293", "filename": "gcc/ada/gprep.adb", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a1cb33a404025cb4d97876dd47e55c6800c6942/gcc%2Fada%2Fgprep.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a1cb33a404025cb4d97876dd47e55c6800c6942/gcc%2Fada%2Fgprep.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgprep.adb?ref=6a1cb33a404025cb4d97876dd47e55c6800c6942", "patch": "@@ -699,10 +699,14 @@ package body GPrep is\n    procedure Scan_Command_Line is\n       Switch : Character;\n \n+      procedure Check_Version_And_Help is new Check_Version_And_Help_G (Usage);\n+\n+      --  Start of processing for Scan_Command_Line\n+\n    begin\n       --  First check for --version or --help\n \n-      Check_Version_And_Help (\"GNATPREP\", \"1996\", Usage'Access);\n+      Check_Version_And_Help (\"GNATPREP\", \"1996\");\n \n       --  Now scan the other switches\n "}, {"sha": "bf32e64ac5a1a3c2c940ac145835a6b2dba9c62d", "filename": "gcc/ada/switch.adb", "status": "modified", "additions": 6, "deletions": 7, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a1cb33a404025cb4d97876dd47e55c6800c6942/gcc%2Fada%2Fswitch.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a1cb33a404025cb4d97876dd47e55c6800c6942/gcc%2Fada%2Fswitch.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fswitch.adb?ref=6a1cb33a404025cb4d97876dd47e55c6800c6942", "patch": "@@ -42,14 +42,13 @@ package body Switch is\n       Osint.Fail (\"invalid switch: \", Switch);\n    end Bad_Switch;\n \n-   ----------------------------\n-   -- Check_Version_And_Help --\n-   ----------------------------\n+   ------------------------------\n+   -- Check_Version_And_Help_G --\n+   ------------------------------\n \n-   procedure Check_Version_And_Help\n+   procedure Check_Version_And_Help_G\n      (Tool_Name      : String;\n       Initial_Year   : String;\n-      Usage          : Procedure_Ptr;\n       Version_String : String := Gnatvsn.Gnat_Version_String)\n    is\n       Version_Switch_Present : Boolean := False;\n@@ -92,12 +91,12 @@ package body Switch is\n \n       if Help_Switch_Present then\n          Set_Standard_Output;\n-         Usage.all;\n+         Usage;\n          Write_Eol;\n          Write_Line (\"Report bugs to report@adacore.com\");\n          Exit_Program (E_Success);\n       end if;\n-   end Check_Version_And_Help;\n+   end Check_Version_And_Help_G;\n \n    ---------------------\n    -- Display_Version --"}, {"sha": "e4ccc93f40a5a6eac0cc4915e5fb8114767f4d63", "filename": "gcc/ada/switch.ads", "status": "modified", "additions": 26, "deletions": 22, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a1cb33a404025cb4d97876dd47e55c6800c6942/gcc%2Fada%2Fswitch.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a1cb33a404025cb4d97876dd47e55c6800c6942/gcc%2Fada%2Fswitch.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fswitch.ads?ref=6a1cb33a404025cb4d97876dd47e55c6800c6942", "patch": "@@ -23,16 +23,20 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n---  This package together with a child package appropriate to the client\n---  tool scans switches. Note that the body of the appropraite Usage package\n---  must be coordinated with the switches that are recognized by this package.\n---  These Usage packages also act as the official documentation for the\n---  switches that are recognized. In addition, package Debug documents\n---  the otherwise undocumented debug switches that are also recognized.\n+--  This package together with a child package appropriate to the client tool\n+--  scans switches. Note that the body of the appropraite Usage package must be\n+--  coordinated with the switches that are recognized by this package. These\n+--  Usage packages also act as the official documentation for the switches\n+--  that are recognized. In addition, package Debug documents the otherwise\n+--  undocumented debug switches that are also recognized.\n \n with Gnatvsn;\n with Types; use Types;\n \n+------------\n+-- Switch --\n+------------\n+\n package Switch is\n \n    --  Common switches for GNU tools\n@@ -44,15 +48,15 @@ package Switch is\n    -- Subprograms --\n    -----------------\n \n-   type Procedure_Ptr is access procedure;\n-\n-   procedure Check_Version_And_Help\n+   generic\n+      with procedure Usage;\n+      --  Print tool-specific part of --help message\n+   procedure Check_Version_And_Help_G\n      (Tool_Name      : String;\n       Initial_Year   : String;\n-      Usage          : Procedure_Ptr;\n       Version_String : String := Gnatvsn.Gnat_Version_String);\n-   --  Check if switches --version or --help is used. If one of this switch\n-   --  is used, issue the proper messages and end the process.\n+   --  Check if switches --version or --help is used. If one of this switch is\n+   --  used, issue the proper messages and end the process.\n \n    procedure Display_Version\n      (Tool_Name      : String;\n@@ -61,12 +65,12 @@ package Switch is\n    --  Display version of a tool when switch --version is used\n \n    function Is_Switch (Switch_Chars : String) return Boolean;\n-   --  Returns True iff Switch_Chars is at least two characters long,\n-   --  and the first character is an hyphen ('-').\n+   --  Returns True iff Switch_Chars is at least two characters long, and the\n+   --  first character is an hyphen ('-').\n \n    function Is_Front_End_Switch (Switch_Chars : String) return Boolean;\n-   --  Returns True iff Switch_Chars represents a front-end switch,\n-   --  ie. it starts with -I, -gnat or -?RTS.\n+   --  Returns True iff Switch_Chars represents a front-end switch, i.e. it\n+   --  starts with -I, -gnat or -?RTS.\n \n private\n \n@@ -83,19 +87,19 @@ private\n       Ptr          : in out Integer;\n       Result       : out Nat;\n       Switch       : Character);\n-   --  Scan natural integer parameter for switch. On entry, Ptr points\n-   --  just past the switch character, on exit it points past the last\n-   --  digit of the integer value.\n+   --  Scan natural integer parameter for switch. On entry, Ptr points just\n+   --  past the switch character, on exit it points past the last digit of the\n+   --  integer value.\n \n    procedure Scan_Pos\n      (Switch_Chars : String;\n       Max          : Integer;\n       Ptr          : in out Integer;\n       Result       : out Pos;\n       Switch       : Character);\n-   --  Scan positive integer parameter for switch. On entry, Ptr points\n-   --  just past the switch character, on exit it points past the last\n-   --  digit of the integer value.\n+   --  Scan positive integer parameter for switch. On entry, Ptr points just\n+   --  past the switch character, on exit it points past the last digit of the\n+   --  integer value.\n \n    procedure Bad_Switch (Switch : Character);\n    procedure Bad_Switch (Switch : String);"}]}