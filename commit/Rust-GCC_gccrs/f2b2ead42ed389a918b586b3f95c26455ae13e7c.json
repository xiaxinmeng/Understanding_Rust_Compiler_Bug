{"sha": "f2b2ead42ed389a918b586b3f95c26455ae13e7c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjJiMmVhZDQyZWQzODlhOTE4YjU4NmIzZjk1YzI2NDU1YWUxM2U3Yw==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2012-12-04T09:09:56Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2012-12-04T09:09:56Z"}, "message": "compiler: Give error for constant inverted slice range.\n\nFrom-SVN: r194124", "tree": {"sha": "54799044fac4141cc62e6e4093ac13f9aeeb36fd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/54799044fac4141cc62e6e4093ac13f9aeeb36fd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f2b2ead42ed389a918b586b3f95c26455ae13e7c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f2b2ead42ed389a918b586b3f95c26455ae13e7c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f2b2ead42ed389a918b586b3f95c26455ae13e7c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f2b2ead42ed389a918b586b3f95c26455ae13e7c/comments", "author": null, "committer": null, "parents": [{"sha": "44bd7f65250cd0814b346679ef801ae0722e0483", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/44bd7f65250cd0814b346679ef801ae0722e0483", "html_url": "https://github.com/Rust-GCC/gccrs/commit/44bd7f65250cd0814b346679ef801ae0722e0483"}], "stats": {"total": 14, "additions": 12, "deletions": 2}, "files": [{"sha": "7a5fcf27c95fcd707befa94bc5ada7ba7cf27d55", "filename": "gcc/go/gofrontend/expressions.cc", "status": "modified", "additions": 12, "deletions": 2, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f2b2ead42ed389a918b586b3f95c26455ae13e7c/gcc%2Fgo%2Fgofrontend%2Fexpressions.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f2b2ead42ed389a918b586b3f95c26455ae13e7c/gcc%2Fgo%2Fgofrontend%2Fexpressions.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2Fexpressions.cc?ref=f2b2ead42ed389a918b586b3f95c26455ae13e7c", "patch": "@@ -9770,8 +9770,10 @@ Array_index_expression::do_check_types(Gogo*)\n \t\t     && lvalnc.to_int(&lval));\n   Numeric_constant inc;\n   mpz_t ival;\n+  bool ival_valid = false;\n   if (this->start_->numeric_constant_value(&inc) && inc.to_int(&ival))\n     {\n+      ival_valid = true;\n       if (mpz_sgn(ival) < 0\n \t  || mpz_sizeinbase(ival, 2) >= int_bits\n \t  || (lval_valid\n@@ -9782,7 +9784,6 @@ Array_index_expression::do_check_types(Gogo*)\n \t  error_at(this->start_->location(), \"array index out of bounds\");\n \t  this->set_is_error();\n \t}\n-      mpz_clear(ival);\n     }\n   if (this->end_ != NULL && !this->end_->is_nil_expression())\n     {\n@@ -9797,9 +9798,13 @@ Array_index_expression::do_check_types(Gogo*)\n \t      error_at(this->end_->location(), \"array index out of bounds\");\n \t      this->set_is_error();\n \t    }\n+\t  else if (ival_valid && mpz_cmp(ival, eval) > 0)\n+\t    this->report_error(_(\"inverted slice range\"));\n \t  mpz_clear(eval);\n \t}\n     }\n+  if (ival_valid)\n+    mpz_clear(ival);\n   if (lval_valid)\n     mpz_clear(lval);\n \n@@ -10180,15 +10185,16 @@ String_index_expression::do_check_types(Gogo*)\n \n   Numeric_constant inc;\n   mpz_t ival;\n+  bool ival_valid = false;\n   if (this->start_->numeric_constant_value(&inc) && inc.to_int(&ival))\n     {\n+      ival_valid = true;\n       if (mpz_sgn(ival) < 0\n \t  || (sval_valid && mpz_cmp_ui(ival, sval.length()) >= 0))\n \t{\n \t  error_at(this->start_->location(), \"string index out of bounds\");\n \t  this->set_is_error();\n \t}\n-      mpz_clear(ival);\n     }\n   if (this->end_ != NULL && !this->end_->is_nil_expression())\n     {\n@@ -10202,9 +10208,13 @@ String_index_expression::do_check_types(Gogo*)\n \t      error_at(this->end_->location(), \"string index out of bounds\");\n \t      this->set_is_error();\n \t    }\n+\t  else if (ival_valid && mpz_cmp(ival, eval) > 0)\n+\t    this->report_error(_(\"inverted slice range\"));\n \t  mpz_clear(eval);\n \t}\n     }\n+  if (ival_valid)\n+    mpz_clear(ival);\n }\n \n // Get a tree for a string index."}]}