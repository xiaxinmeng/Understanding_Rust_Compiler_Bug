{"sha": "f56fe8ff928a65703716552651debc774ada548a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjU2ZmU4ZmY5MjhhNjU3MDM3MTY1NTI2NTFkZWJjNzc0YWRhNTQ4YQ==", "commit": {"author": {"name": "Paolo Carlini", "email": "pcarlini@suse.de", "date": "2007-02-18T11:32:44Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2007-02-18T11:32:44Z"}, "message": "PR libstdc++/28080 (partial)\n\n2007-02-18  Paolo Carlini  <pcarlini@suse.de>\n\n\tPR libstdc++/28080 (partial)\n\t* include/bits/stl_algobase.h: Do not include <climits>, use\n\tstd::numeric_limits.\n\t* include/bits/stl_bvector.h: Use __CHAR_BIT__.\n\t* config/locale/gnu/codecvt_members.cc: Include <climits>.\n\t* config/locale/generic/codecvt_members.cc: Likewise.\n\t* include/std/string: Do not include <algorithm>; do not include\n\t<memory>, include <bits/allocator.h> instead.\n\t* include/ext/vstring_fwd.h: Likewise.\n\t* include/ext/vstring_util.h: Do not include <algorithm>.\n\t* include/tr1/hashtable_policy.h: Include <algorithm>.\n\t* testsuite/21_strings/basic_string/replace/char/1.cc: Likewise.\n\t* testsuite/21_strings/basic_string/replace/wchar_t/1.cc: Likewise.\n\t* testsuite/23_containers/bitset/cons/1.cc: Likewise.\n\t* testsuite/util/testsuite_character.h: Likewise.\n\n\t* config/locale/gnu/codecvt_members.cc: Also include <cstdlib>,\n\tfor MB_CUR_MAX.\n\t* config/locale/generic/codecvt_members.cc: Likewise.\n\nFrom-SVN: r122089", "tree": {"sha": "ae765230a6c1227289c5fa802007c59c83caac56", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ae765230a6c1227289c5fa802007c59c83caac56"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f56fe8ff928a65703716552651debc774ada548a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f56fe8ff928a65703716552651debc774ada548a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f56fe8ff928a65703716552651debc774ada548a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f56fe8ff928a65703716552651debc774ada548a/comments", "author": null, "committer": null, "parents": [{"sha": "27a9b99d0819b323949c2f066ef56ce693bc4a42", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/27a9b99d0819b323949c2f066ef56ce693bc4a42", "html_url": "https://github.com/Rust-GCC/gccrs/commit/27a9b99d0819b323949c2f066ef56ce693bc4a42"}], "stats": {"total": 97, "additions": 66, "deletions": 31}, "files": [{"sha": "eb1a05b3161c773eb0b2b337ca8f3b42e31cc6dc", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f56fe8ff928a65703716552651debc774ada548a/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f56fe8ff928a65703716552651debc774ada548a/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=f56fe8ff928a65703716552651debc774ada548a", "patch": "@@ -1,3 +1,25 @@\n+2007-02-18  Paolo Carlini  <pcarlini@suse.de>\n+\n+\tPR libstdc++/28080 (partial)\n+\t* include/bits/stl_algobase.h: Do not include <climits>, use\n+\tstd::numeric_limits.\n+\t* include/bits/stl_bvector.h: Use __CHAR_BIT__.\n+\t* config/locale/gnu/codecvt_members.cc: Include <climits>.\n+\t* config/locale/generic/codecvt_members.cc: Likewise.\n+\t* include/std/string: Do not include <algorithm>; do not include\n+\t<memory>, include <bits/allocator.h> instead.\n+\t* include/ext/vstring_fwd.h: Likewise.\n+\t* include/ext/vstring_util.h: Do not include <algorithm>.\n+\t* include/tr1/hashtable_policy.h: Include <algorithm>.\n+\t* testsuite/21_strings/basic_string/replace/char/1.cc: Likewise.\n+\t* testsuite/21_strings/basic_string/replace/wchar_t/1.cc: Likewise.\n+\t* testsuite/23_containers/bitset/cons/1.cc: Likewise.\n+\t* testsuite/util/testsuite_character.h: Likewise.\n+\n+\t* config/locale/gnu/codecvt_members.cc: Also include <cstdlib>,\n+\tfor MB_CUR_MAX.\n+\t* config/locale/generic/codecvt_members.cc: Likewise.\n+\n 2007-02-16  Paolo Carlini  <pcarlini@suse.de>\n \n \tRevert."}, {"sha": "7b03b5b60ba4f4ae86ac1f6d8dd1d85f83667039", "filename": "libstdc++-v3/config/locale/generic/codecvt_members.cc", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f56fe8ff928a65703716552651debc774ada548a/libstdc%2B%2B-v3%2Fconfig%2Flocale%2Fgeneric%2Fcodecvt_members.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f56fe8ff928a65703716552651debc774ada548a/libstdc%2B%2B-v3%2Fconfig%2Flocale%2Fgeneric%2Fcodecvt_members.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Flocale%2Fgeneric%2Fcodecvt_members.cc?ref=f56fe8ff928a65703716552651debc774ada548a", "patch": "@@ -1,6 +1,7 @@\n // std::codecvt implementation details, generic version -*- C++ -*-\n \n-// Copyright (C) 2002, 2005 Free Software Foundation, Inc.\n+// Copyright (C) 2002, 2003, 2004, 2005, 2006, 2007\n+// Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -34,6 +35,8 @@\n // Written by Benjamin Kosnik <bkoz@redhat.com>\n \n #include <locale>\n+#include <cstdlib>  // For MB_CUR_MAX\n+#include <climits>  // For MB_LEN_MAX\n \n _GLIBCXX_BEGIN_NAMESPACE(std)\n "}, {"sha": "949927dd03d5821cf41ac0641592da722a468b44", "filename": "libstdc++-v3/config/locale/gnu/codecvt_members.cc", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f56fe8ff928a65703716552651debc774ada548a/libstdc%2B%2B-v3%2Fconfig%2Flocale%2Fgnu%2Fcodecvt_members.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f56fe8ff928a65703716552651debc774ada548a/libstdc%2B%2B-v3%2Fconfig%2Flocale%2Fgnu%2Fcodecvt_members.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Flocale%2Fgnu%2Fcodecvt_members.cc?ref=f56fe8ff928a65703716552651debc774ada548a", "patch": "@@ -1,6 +1,7 @@\n // std::codecvt implementation details, GNU version -*- C++ -*-\n \n-// Copyright (C) 2002, 2003, 2005, 2006 Free Software Foundation, Inc.\n+// Copyright (C) 2002, 2003, 2004, 2005, 2006, 2007\n+// Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -34,6 +35,8 @@\n // Written by Benjamin Kosnik <bkoz@redhat.com>\n \n #include <locale>\n+#include <cstdlib>  // For MB_CUR_MAX\n+#include <climits>  // For MB_LEN_MAX\n #include <bits/c++locale_internal.h>\n \n _GLIBCXX_BEGIN_NAMESPACE(std)"}, {"sha": "35a8a0383d8f20b8d6535eb2962b34151f3c846c", "filename": "libstdc++-v3/include/bits/stl_algobase.h", "status": "modified", "additions": 15, "deletions": 15, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f56fe8ff928a65703716552651debc774ada548a/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_algobase.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f56fe8ff928a65703716552651debc774ada548a/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_algobase.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_algobase.h?ref=f56fe8ff928a65703716552651debc774ada548a", "patch": "@@ -65,13 +65,13 @@\n #include <bits/c++config.h>\n #include <cstring>\n #include <cwchar>\n-#include <climits>\n #include <cstdlib>\n #include <cstddef>\n #include <iosfwd>\n #include <bits/stl_pair.h>\n #include <bits/cpp_type_traits.h>\n #include <ext/type_traits.h>\n+#include <limits>\n #include <bits/stl_iterator_base_types.h>\n #include <bits/stl_iterator_base_funcs.h>\n #include <bits/stl_iterator.h>\n@@ -318,8 +318,8 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n \n   // Helpers for streambuf iterators (either istream or ostream).\n   template<typename _CharT>\n-  typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value, \n-\t\t\t\t  ostreambuf_iterator<_CharT> >::__type\n+    typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value, \n+\t\t\t\t    ostreambuf_iterator<_CharT> >::__type\n     __copy_aux(_CharT*, _CharT*, ostreambuf_iterator<_CharT>);\n \n   template<typename _CharT>\n@@ -328,7 +328,8 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n     __copy_aux(const _CharT*, const _CharT*, ostreambuf_iterator<_CharT>);\n \n   template<typename _CharT>\n-  typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value, _CharT*>::__type\n+    typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value,\n+\t\t\t\t    _CharT*>::__type\n     __copy_aux(istreambuf_iterator<_CharT>, istreambuf_iterator<_CharT>,\n \t       _CharT*);\n \n@@ -979,17 +980,16 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n     __glibcxx_requires_valid_range(__first1, __last1);\n     __glibcxx_requires_valid_range(__first2, __last2);\n \n-#if CHAR_MAX == SCHAR_MAX\n-    return std::lexicographical_compare((const signed char*) __first1,\n-\t\t\t\t\t(const signed char*) __last1,\n-\t\t\t\t\t(const signed char*) __first2,\n-\t\t\t\t\t(const signed char*) __last2);\n-#else /* CHAR_MAX == SCHAR_MAX */\n-    return std::lexicographical_compare((const unsigned char*) __first1,\n-\t\t\t\t\t(const unsigned char*) __last1,\n-\t\t\t\t\t(const unsigned char*) __first2,\n-\t\t\t\t\t(const unsigned char*) __last2);\n-#endif /* CHAR_MAX == SCHAR_MAX */\n+    if (std::numeric_limits<char>::is_signed)\n+      return std::lexicographical_compare((const signed char*) __first1,\n+\t\t\t\t\t  (const signed char*) __last1,\n+\t\t\t\t\t  (const signed char*) __first2,\n+\t\t\t\t\t  (const signed char*) __last2);\n+    else\n+      return std::lexicographical_compare((const unsigned char*) __first1,\n+\t\t\t\t\t  (const unsigned char*) __last1,\n+\t\t\t\t\t  (const unsigned char*) __first2,\n+\t\t\t\t\t  (const unsigned char*) __last2);\n   }\n \n _GLIBCXX_END_NAMESPACE"}, {"sha": "de72dac353c486a2892ed751d078968bb2d47363", "filename": "libstdc++-v3/include/bits/stl_bvector.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f56fe8ff928a65703716552651debc774ada548a/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_bvector.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f56fe8ff928a65703716552651debc774ada548a/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_bvector.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_bvector.h?ref=f56fe8ff928a65703716552651debc774ada548a", "patch": "@@ -1,6 +1,6 @@\n // vector<bool> specialization -*- C++ -*-\n \n-// Copyright (C) 2001, 2002, 2003, 2004, 2005, 2006\n+// Copyright (C) 2001, 2002, 2003, 2004, 2005, 2006, 2007\n // Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n@@ -65,7 +65,7 @@\n _GLIBCXX_BEGIN_NESTED_NAMESPACE(std, _GLIBCXX_STD)\n \n   typedef unsigned long _Bit_type;\n-  enum { _S_word_bit = int(CHAR_BIT * sizeof(_Bit_type)) };\n+  enum { _S_word_bit = int(__CHAR_BIT__ * sizeof(_Bit_type)) };\n \n   struct _Bit_reference\n   {"}, {"sha": "bc11d6038151d6a48e2f6f4822334b1804a2a2a4", "filename": "libstdc++-v3/include/ext/vstring_fwd.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f56fe8ff928a65703716552651debc774ada548a/libstdc%2B%2B-v3%2Finclude%2Fext%2Fvstring_fwd.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f56fe8ff928a65703716552651debc774ada548a/libstdc%2B%2B-v3%2Finclude%2Fext%2Fvstring_fwd.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Fvstring_fwd.h?ref=f56fe8ff928a65703716552651debc774ada548a", "patch": "@@ -1,6 +1,6 @@\n // Versatile string forward -*- C++ -*-\n \n-// Copyright (C) 2005 Free Software Foundation, Inc.\n+// Copyright (C) 2005, 2006, 2007 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -40,7 +40,7 @@\n \n #include <bits/c++config.h>\n #include <bits/char_traits.h>\n-#include <memory> \t// For allocator.\n+#include <bits/allocator.h>\n \n _GLIBCXX_BEGIN_NAMESPACE(__gnu_cxx)\n "}, {"sha": "fee06e3f371296c969d9f25e2f43594ffb38f37e", "filename": "libstdc++-v3/include/ext/vstring_util.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f56fe8ff928a65703716552651debc774ada548a/libstdc%2B%2B-v3%2Finclude%2Fext%2Fvstring_util.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f56fe8ff928a65703716552651debc774ada548a/libstdc%2B%2B-v3%2Finclude%2Fext%2Fvstring_util.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Fvstring_util.h?ref=f56fe8ff928a65703716552651debc774ada548a", "patch": "@@ -43,7 +43,6 @@\n #include <bits/stl_function.h>  // For less\n #include <bits/functexcept.h>\n #include <locale>\n-#include <algorithm> // For std::distance, srd::search.\n \n _GLIBCXX_BEGIN_NAMESPACE(__gnu_cxx)\n "}, {"sha": "0899cfe5a10e26938dfe855f45bac77b22f0e0b1", "filename": "libstdc++-v3/include/std/string", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f56fe8ff928a65703716552651debc774ada548a/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstring", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f56fe8ff928a65703716552651debc774ada548a/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstring", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstring?ref=f56fe8ff928a65703716552651debc774ada548a", "patch": "@@ -1,6 +1,7 @@\n // Components for manipulating sequences of characters -*- C++ -*-\n \n-// Copyright (C) 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2005\n+// Copyright (C) 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004,\n+// 2005, 2006, 2007\n // Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n@@ -43,16 +44,15 @@\n \n #include <bits/c++config.h>\n #include <bits/stringfwd.h>\n-#include <bits/char_traits.h>\n-#include <memory> \t// For allocator.\n+#include <bits/char_traits.h>  // NB: In turn includes stl_algobase.h\n+#include <bits/allocator.h>\n #include <bits/cpp_type_traits.h>\n #include <iosfwd> \t// For operators >>, <<, and getline decls.\n #include <bits/stl_iterator.h>\n #include <bits/stl_function.h>  // For less\n #include <bits/basic_string.h>\n \n #ifndef _GLIBCXX_EXPORT_TEMPLATE\n-# include <algorithm> // for find_if\n # include <bits/basic_string.tcc> \n #endif\n "}, {"sha": "568d2ff02bde5e257c9381ab3490cb8b9e4f98e4", "filename": "libstdc++-v3/include/tr1/hashtable_policy.h", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f56fe8ff928a65703716552651debc774ada548a/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Fhashtable_policy.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f56fe8ff928a65703716552651debc774ada548a/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Fhashtable_policy.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Fhashtable_policy.h?ref=f56fe8ff928a65703716552651debc774ada548a", "patch": "@@ -1,6 +1,6 @@\n // Internal policy header for TR1 unordered_set and unordered_map -*- C++ -*-\n \n-// Copyright (C) 2005, 2006 Free Software Foundation, Inc.\n+// Copyright (C) 2005, 2006, 2007 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -35,6 +35,7 @@\n #define _TR1_HASHTABLE_POLICY_H 1\n \n #include <functional> // _Identity, _Select1st\n+#include <algorithm> // lower_bound\n #include <tr1/utility>\n #include <ext/type_traits.h>\n "}, {"sha": "d8630ac46d323ae946810750cdb03af0e156df1f", "filename": "libstdc++-v3/testsuite/21_strings/basic_string/replace/char/1.cc", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f56fe8ff928a65703716552651debc774ada548a/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Freplace%2Fchar%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f56fe8ff928a65703716552651debc774ada548a/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Freplace%2Fchar%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Freplace%2Fchar%2F1.cc?ref=f56fe8ff928a65703716552651debc774ada548a", "patch": "@@ -1,6 +1,7 @@\n // 1999-06-10 bkoz\n \n-// Copyright (C) 1994, 1999, 2001, 2002, 2003 Free Software Foundation, Inc.\n+// Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,\n+// 2003, 2004, 2005, 2006, 2007 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -21,6 +22,7 @@\n // 21.3.5.6 basic_string::replace\n \n #include <string>\n+#include <algorithm> // for std::find\n #include <testsuite_hooks.h>\n \n bool test01(void)"}, {"sha": "d98c578ef39b615631077a93e52eaf89ce8b7592", "filename": "libstdc++-v3/testsuite/21_strings/basic_string/replace/wchar_t/1.cc", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f56fe8ff928a65703716552651debc774ada548a/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Freplace%2Fwchar_t%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f56fe8ff928a65703716552651debc774ada548a/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Freplace%2Fwchar_t%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Freplace%2Fwchar_t%2F1.cc?ref=f56fe8ff928a65703716552651debc774ada548a", "patch": "@@ -1,6 +1,7 @@\n // 1999-06-10 bkoz\n \n-// Copyright (C) 1994, 1999, 2001, 2002, 2003 Free Software Foundation, Inc.\n+// Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,\n+// 2003, 2004, 2005, 2006, 2007 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -21,6 +22,7 @@\n // 21.3.5.6 basic_string::replace\n \n #include <string>\n+#include <algorithm> // for std::find\n #include <testsuite_hooks.h>\n \n bool test01(void)"}, {"sha": "79aea91615f27e0c16b9c46b5ef01ea0a7e14d3a", "filename": "libstdc++-v3/testsuite/23_containers/bitset/cons/1.cc", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f56fe8ff928a65703716552651debc774ada548a/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fbitset%2Fcons%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f56fe8ff928a65703716552651debc774ada548a/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fbitset%2Fcons%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fbitset%2Fcons%2F1.cc?ref=f56fe8ff928a65703716552651debc774ada548a", "patch": "@@ -1,6 +1,7 @@\n // 1999-06-08 bkoz\n \n-// Copyright (C) 1999, 2000, 2002, 2003 Free Software Foundation, Inc.\n+// Copyright (C) 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007\n+// Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -22,6 +23,7 @@\n \n #include <string>\n #include <bitset>\n+#include <algorithm> // std::reverse\n #include <stdexcept>\n #include <testsuite_hooks.h>\n "}, {"sha": "547775bd8864155eb8573a61d05e8c87cc495da8", "filename": "libstdc++-v3/testsuite/util/testsuite_character.h", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f56fe8ff928a65703716552651debc774ada548a/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Ftestsuite_character.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f56fe8ff928a65703716552651debc774ada548a/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Ftestsuite_character.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Ftestsuite_character.h?ref=f56fe8ff928a65703716552651debc774ada548a", "patch": "@@ -3,7 +3,7 @@\n // Testing character type and state type with char_traits and codecvt\n // specializations for the C++ library testsuite.\n //\n-// Copyright (C) 2003, 2005 Free Software Foundation, Inc.\n+// Copyright (C) 2003, 2004, 2005, 2006, 2007 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -36,6 +36,7 @@\n #include <climits>\n #include <string> // for char_traits\n #include <locale> // for codecvt\n+#include <algorithm> // for transform\n #include <ext/pod_char_traits.h>\n \n namespace __gnu_test"}]}