{"sha": "2ef6611e8caf18c9d869ea0ea6cf8712ef61caeb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmVmNjYxMWU4Y2FmMThjOWQ4NjllYTBlYTZjZjg3MTJlZjYxY2FlYg==", "commit": {"author": {"name": "Oleg Endo", "email": "olegendo@gcc.gnu.org", "date": "2012-04-07T12:01:01Z"}, "committer": {"name": "Oleg Endo", "email": "olegendo@gcc.gnu.org", "date": "2012-04-07T12:01:01Z"}, "message": "sh-protos.h (prepare_move_operands): Return void instead of int.\n\n\t* config/sh/sh-protos.h (prepare_move_operands): Return void\n\tinstead of int.\n\t* config/sh/sh.c (prepare_move_operands): Likewise.\n\t* config/sh/sh.md: Remove return value checks of prepare_move_operands.\n\nFrom-SVN: r186211", "tree": {"sha": "3a4581105e5cc4f2223aa41e7796af8527d9fbf6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3a4581105e5cc4f2223aa41e7796af8527d9fbf6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2ef6611e8caf18c9d869ea0ea6cf8712ef61caeb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2ef6611e8caf18c9d869ea0ea6cf8712ef61caeb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2ef6611e8caf18c9d869ea0ea6cf8712ef61caeb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2ef6611e8caf18c9d869ea0ea6cf8712ef61caeb/comments", "author": null, "committer": null, "parents": [{"sha": "df4f5d5f726288fec5a68e33ae92060630ec6391", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/df4f5d5f726288fec5a68e33ae92060630ec6391", "html_url": "https://github.com/Rust-GCC/gccrs/commit/df4f5d5f726288fec5a68e33ae92060630ec6391"}], "stats": {"total": 52, "additions": 22, "deletions": 30}, "files": [{"sha": "0e08e69c0364821e2973c58bc853adf6e6d1d48b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ef6611e8caf18c9d869ea0ea6cf8712ef61caeb/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ef6611e8caf18c9d869ea0ea6cf8712ef61caeb/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2ef6611e8caf18c9d869ea0ea6cf8712ef61caeb", "patch": "@@ -1,3 +1,10 @@\n+2012-04-07  Oleg Endo  <olegendo@gcc.gnu.org>\n+\n+\t* config/sh/sh-protos.h (prepare_move_operands): Return void\n+\tinstead of int.\n+\t* config/sh/sh.c (prepare_move_operands): Likewise.\n+\t* config/sh/sh.md: Remove return value checks of prepare_move_operands.\n+\n 2012-04-07  Oleg Endo  <olegendo@gcc.gnu.org>\n \n \t* config/sh/sh-protos.h (fp_int_operand, symbol_ref_operand,"}, {"sha": "814374950c146d545c11e3707987a4652c0709dd", "filename": "gcc/config/sh/sh-protos.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ef6611e8caf18c9d869ea0ea6cf8712ef61caeb/gcc%2Fconfig%2Fsh%2Fsh-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ef6611e8caf18c9d869ea0ea6cf8712ef61caeb/gcc%2Fconfig%2Fsh%2Fsh-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh-protos.h?ref=2ef6611e8caf18c9d869ea0ea6cf8712ef61caeb", "patch": "@@ -64,7 +64,7 @@ extern void emit_sf_insn (rtx);\n extern void emit_df_insn (rtx);\n extern void output_pic_addr_const (FILE *, rtx);\n extern bool expand_block_move (rtx *);\n-extern int prepare_move_operands (rtx[], enum machine_mode mode);\n+extern void prepare_move_operands (rtx[], enum machine_mode mode);\n extern enum rtx_code prepare_cbranch_operands (rtx *, enum machine_mode mode,\n \t\t\t\t\t       enum rtx_code comparison);\n extern void expand_cbranchsi4 (rtx *operands, enum rtx_code comparison, int);"}, {"sha": "443f8002626adce3a20da75d996653a07f4bbedb", "filename": "gcc/config/sh/sh.c", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ef6611e8caf18c9d869ea0ea6cf8712ef61caeb/gcc%2Fconfig%2Fsh%2Fsh.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ef6611e8caf18c9d869ea0ea6cf8712ef61caeb/gcc%2Fconfig%2Fsh%2Fsh.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh.c?ref=2ef6611e8caf18c9d869ea0ea6cf8712ef61caeb", "patch": "@@ -1601,7 +1601,7 @@ expand_block_move (rtx *operands)\n /* Prepare operands for a move define_expand; specifically, one of the\n    operands must be in a register.  */\n \n-int\n+void\n prepare_move_operands (rtx operands[], enum machine_mode mode)\n {\n   if ((mode == SImode || mode == DImode)\n@@ -1763,8 +1763,6 @@ prepare_move_operands (rtx operands[], enum machine_mode mode)\n \t  operands[1] = op1;\n \t}\n     }\n-\n-  return 0;\n }\n \n enum rtx_code"}, {"sha": "28f5fd97cf7d01b807b2ea9e3c4c9b58578b2a04", "filename": "gcc/config/sh/sh.md", "status": "modified", "additions": 13, "deletions": 26, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ef6611e8caf18c9d869ea0ea6cf8712ef61caeb/gcc%2Fconfig%2Fsh%2Fsh.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ef6611e8caf18c9d869ea0ea6cf8712ef61caeb/gcc%2Fconfig%2Fsh%2Fsh.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh.md?ref=2ef6611e8caf18c9d869ea0ea6cf8712ef61caeb", "patch": "@@ -5337,8 +5337,7 @@ label:\n \t(match_operand:SI 1 \"general_movsrc_operand\" \"\"))]\n   \"\"\n {\n-  if (prepare_move_operands (operands, SImode))\n-    DONE;\n+  prepare_move_operands (operands, SImode);\n })\n \n (define_expand \"ic_invalidate_line\"\n@@ -5447,8 +5446,7 @@ label:\n \t(match_operand:QI 1 \"general_operand\" \"\"))]\n   \"\"\n {\n-  if (prepare_move_operands (operands, QImode))\n-    DONE;\n+  prepare_move_operands (operands, QImode);\n })\n \n ;; If movqi_reg_reg is specified as an alternative of movqi, movqi will be\n@@ -5614,8 +5612,7 @@ label:\n \t(match_operand:HI 1 \"general_movsrc_operand\"  \"\"))]\n   \"\"\n {\n-  if (prepare_move_operands (operands, HImode))\n-    DONE;\n+  prepare_move_operands (operands, HImode);\n })\n \n (define_expand \"reload_inhi\"\n@@ -5982,8 +5979,7 @@ label:\n \t(match_operand:DI 1 \"general_movsrc_operand\" \"\"))]\n   \"\"\n {\n-  if (prepare_move_operands (operands, DImode))\n-    DONE;\n+  prepare_move_operands (operands, DImode);\n })\n \n (define_insn \"movdf_media\"\n@@ -6571,8 +6567,7 @@ label:\n \t(match_operand:DF 1 \"general_movsrc_operand\" \"\"))]\n   \"\"\n {\n-  if (prepare_move_operands (operands, DFmode))\n-    DONE;\n+  prepare_move_operands (operands, DFmode);\n   if (TARGET_SHMEDIA)\n     {\n       if (TARGET_SHMEDIA_FPU)\n@@ -6618,8 +6613,7 @@ label:\n \t(match_operand:V2SF 1 \"nonimmediate_operand\" \"\"))]\n   \"TARGET_SHMEDIA_FPU\"\n {\n-  if (prepare_move_operands (operands, V2SFmode))\n-    DONE;\n+  prepare_move_operands (operands, V2SFmode);\n })\n \n (define_expand \"addv2sf3\"\n@@ -6700,8 +6694,7 @@ label:\n \t(match_operand:V4SF 1 \"general_operand\" \"\"))]\n   \"TARGET_SHMEDIA_FPU\"\n {\n-  if (prepare_move_operands (operands, V4SFmode))\n-    DONE;\n+  prepare_move_operands (operands, V4SFmode);\n })\n \n (define_insn_and_split \"*movv16sf_i\"\n@@ -6748,8 +6741,7 @@ label:\n \t(match_operand:V16SF 1 \"nonimmediate_operand\" \"f,m,f\"))]\n   \"TARGET_SHMEDIA_FPU\"\n {\n-  if (prepare_move_operands (operands, V16SFmode))\n-    DONE;\n+  prepare_move_operands (operands, V16SFmode);\n })\n \n (define_insn \"movsf_media\"\n@@ -6921,8 +6913,7 @@ label:\n         (match_operand:SF 1 \"general_movsrc_operand\" \"\"))]\n   \"\"\n {\n-  if (prepare_move_operands (operands, SFmode))\n-    DONE;\n+  prepare_move_operands (operands, SFmode);\n   if (TARGET_SHMEDIA)\n     {\n       if (TARGET_SHMEDIA_FPU)\n@@ -11774,8 +11765,7 @@ label:\n \t(match_operand:V8QI 1 \"general_movsrc_operand\" \"\"))]\n   \"TARGET_SHMEDIA\"\n {\n-  if (prepare_move_operands (operands, V8QImode))\n-    DONE;\n+  prepare_move_operands (operands, V8QImode);\n })\n \n (define_insn \"movv8qi_i\"\n@@ -11867,8 +11857,7 @@ label:\n \t(match_operand:V2HI 1 \"general_movsrc_operand\" \"\"))]\n   \"TARGET_SHMEDIA\"\n {\n-  if (prepare_move_operands (operands, V2HImode))\n-    DONE;\n+  prepare_move_operands (operands, V2HImode);\n })\n \n (define_insn \"movv2hi_i\"\n@@ -11895,8 +11884,7 @@ label:\n \t(match_operand:V4HI 1 \"general_movsrc_operand\" \"\"))]\n   \"TARGET_SHMEDIA\"\n {\n-  if (prepare_move_operands (operands, V4HImode))\n-    DONE;\n+  prepare_move_operands (operands, V4HImode);\n })\n \n (define_insn \"movv4hi_i\"\n@@ -11920,8 +11908,7 @@ label:\n \t(match_operand:V2SI 1 \"general_movsrc_operand\" \"\"))]\n   \"TARGET_SHMEDIA\"\n {\n-  if (prepare_move_operands (operands, V2SImode))\n-  DONE;\n+  prepare_move_operands (operands, V2SImode);\n })\n \n (define_insn \"movv2si_i\""}]}