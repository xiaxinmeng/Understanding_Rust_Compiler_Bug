{"sha": "a4c9bc1594bef333dc17be8d37625356e8b8c476", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTRjOWJjMTU5NGJlZjMzM2RjMTdiZThkMzc2MjUzNTZlOGI4YzQ3Ng==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2010-05-31T11:01:32Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2010-05-31T11:01:32Z"}, "message": "tree-ssa-structalias.c (find_func_aliases): Handle BUILT_IN_RETURN.\n\n2010-05-31  Richard Guenther  <rguenther@suse.de>\n\n\t* tree-ssa-structalias.c (find_func_aliases): Handle\n\tBUILT_IN_RETURN.\n\nFrom-SVN: r160067", "tree": {"sha": "711d4b253a8788575f9ceb2e718e1baf693159a1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/711d4b253a8788575f9ceb2e718e1baf693159a1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a4c9bc1594bef333dc17be8d37625356e8b8c476", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a4c9bc1594bef333dc17be8d37625356e8b8c476", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a4c9bc1594bef333dc17be8d37625356e8b8c476", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a4c9bc1594bef333dc17be8d37625356e8b8c476/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "178b70cce7b8540651b7f7fdf3f934b46a7ed6ea", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/178b70cce7b8540651b7f7fdf3f934b46a7ed6ea", "html_url": "https://github.com/Rust-GCC/gccrs/commit/178b70cce7b8540651b7f7fdf3f934b46a7ed6ea"}], "stats": {"total": 25, "additions": 25, "deletions": 0}, "files": [{"sha": "48206e579fcc4bd62b6cc3f97f750e70968e9531", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4c9bc1594bef333dc17be8d37625356e8b8c476/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4c9bc1594bef333dc17be8d37625356e8b8c476/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a4c9bc1594bef333dc17be8d37625356e8b8c476", "patch": "@@ -1,3 +1,8 @@\n+2010-05-31  Richard Guenther  <rguenther@suse.de>\n+\n+\t* tree-ssa-structalias.c (find_func_aliases): Handle\n+\tBUILT_IN_RETURN.\n+\n 2010-05-30  Jan Hubicka  <jh@suse.cz>\n \n \t* predict.c (maybe_hot_edge_p): Calls to functions called once is cold."}, {"sha": "d70b36c3498f9f0dbf9eddaec42969b693b0c422", "filename": "gcc/tree-ssa-structalias.c", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4c9bc1594bef333dc17be8d37625356e8b8c476/gcc%2Ftree-ssa-structalias.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4c9bc1594bef333dc17be8d37625356e8b8c476/gcc%2Ftree-ssa-structalias.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-structalias.c?ref=a4c9bc1594bef333dc17be8d37625356e8b8c476", "patch": "@@ -4241,6 +4241,26 @@ find_func_aliases (gimple origt)\n \t  /* va_end doesn't have any effect that matters.  */\n \t  case BUILT_IN_VA_END:\n \t    return;\n+\t  /* Alternate return.  Simply give up for now.  */\n+\t  case BUILT_IN_RETURN:\n+\t    {\n+\t      fi = NULL;\n+\t      if (!in_ipa_mode\n+\t\t  || !(fi = get_vi_for_tree (cfun->decl)))\n+\t\tmake_constraint_from (get_varinfo (escaped_id), anything_id);\n+\t      else if (in_ipa_mode\n+\t\t       && fi != NULL)\n+\t\t{\n+\t\t  struct constraint_expr lhs, rhs;\n+\t\t  lhs = get_function_part_constraint (fi, fi_result);\n+\t\t  rhs.var = anything_id;\n+\t\t  rhs.offset = 0;\n+\t\t  rhs.type = SCALAR;\n+\t\t  get_constraint_for (gimple_return_retval (t), &rhsc);\n+\t\t  process_constraint (new_constraint (lhs, rhs));\n+\t\t}\n+\t      return;\n+\t    }\n \t  /* printf-style functions may have hooks to set pointers to\n \t     point to somewhere into the generated string.  Leave them\n \t     for a later excercise...  */"}]}