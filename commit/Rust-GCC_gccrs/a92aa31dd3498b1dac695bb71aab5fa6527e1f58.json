{"sha": "a92aa31dd3498b1dac695bb71aab5fa6527e1f58", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTkyYWEzMWRkMzQ5OGIxZGFjNjk1YmI3MWFhYjVmYTY1MjdlMWY1OA==", "commit": {"author": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2011-10-27T19:07:27Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2011-10-27T19:07:27Z"}, "message": "re PR target/50875 (O3 and -mavx lead to internal compiler error: in find_reloads)\n\n\tPR target/50875\n\t* config/i386/sse.md (*avx2_unpcklpd256): Remove extra insn\n\tconstraints.  Change alternative 1 to \"x,m,1\".\n\ntestsuitee/ChangeLog:\n\n\tPR target/50875\n\t* gfortran.dg/pr50875.f90: New test.\n\nFrom-SVN: r180576", "tree": {"sha": "c23c1d0b4ea662baac27e949bfc287905d59f0be", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c23c1d0b4ea662baac27e949bfc287905d59f0be"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a92aa31dd3498b1dac695bb71aab5fa6527e1f58", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a92aa31dd3498b1dac695bb71aab5fa6527e1f58", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a92aa31dd3498b1dac695bb71aab5fa6527e1f58", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a92aa31dd3498b1dac695bb71aab5fa6527e1f58/comments", "author": null, "committer": null, "parents": [{"sha": "16fe2c09f7ebf82bfc602f7b1268656ff78b6cdc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/16fe2c09f7ebf82bfc602f7b1268656ff78b6cdc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/16fe2c09f7ebf82bfc602f7b1268656ff78b6cdc"}], "stats": {"total": 97, "additions": 73, "deletions": 24}, "files": [{"sha": "13ba1f1c75a4c8f7e47ae589e39173ab7dcc0df7", "filename": "gcc/ChangeLog", "status": "modified", "additions": 21, "deletions": 15, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a92aa31dd3498b1dac695bb71aab5fa6527e1f58/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a92aa31dd3498b1dac695bb71aab5fa6527e1f58/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a92aa31dd3498b1dac695bb71aab5fa6527e1f58", "patch": "@@ -1,3 +1,9 @@\n+2011-10-27  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\tPR target/50875\n+\t* config/i386/sse.md (*avx2_unpcklpd256): Remove extra insn\n+\tconstraints.  Change alternative 1 to \"x,m,1\".\n+\n 2011-10-27  Jakub Jelinek  <jakub@redhat.com>\n \n \t* Makefile.in (build/gencheck.o): Depend on tree.def and\n@@ -18,8 +24,7 @@\n 2011-10-27  Ian Lance Taylor  <iant@google.com>\n \n \t* cppdefault.c: Undef NATIVE_SYSTEM_HEADER_DIR if\n-\tCROSS_DIRECTORY_STRUCTURE is defined and TARGET_SYSTEM_ROOT is\n-\tnot.\n+\tCROSS_DIRECTORY_STRUCTURE is defined and TARGET_SYSTEM_ROOT is not.\n \t(cpp_include_defaults): Only use NATIVE_SYSTEM_HEADER_DIR if it is\n \tdefined.\n \n@@ -270,8 +275,8 @@\n \n 2011-10-25  Dodji Seketeli  <dodji@redhat.com>\n \n-\t* input.c (expand_location): Rewrite using\n-\tlinemap_resolve_location and linemap_expand_location.  Add a comment.\n+\t* input.c (expand_location): Rewrite using linemap_resolve_location\n+\tand linemap_expand_location.  Add a comment.\n \n 2011-10-25  Jakub Jelinek  <jakub@redhat.com>\n \n@@ -472,7 +477,7 @@\n \t(*mov<VM32:mode>_insn_vis3): New insn.\n \t(*mov<VM64:mode>_insn_sp64_vis3): New insn.\n \t(*mov<VM64:mode>_insn_sp32_vis3): New insn.\n-\t(VM64 reg<-->reg split): New spliiter for 32-bit.\n+\t(VM64 reg<-->reg split): New splitter for 32-bit.\n \n \t* config/sparc/sparc.c (sparc_split_regreg_legitimate): New function.\n \t* config/sparc/sparc-protos.h (sparc_split_regreg_legitimate):\n@@ -550,22 +555,23 @@\n 2011-10-23  Tom de Vries  <tom@codesourcery.com>\n \n \tPR tree-optimization/50763\n-\t* tree-ssa-tail-merge.c (same_succ_flush_bb): New function, factored out\n-\tof ...\n+\t* tree-ssa-tail-merge.c (same_succ_flush_bb): New function, factored\n+\tout of ...\n \t(same_succ_flush_bbs): Use same_succ_flush_bb.\n \t(purge_bbs): Remove argument.  Remove calls to same_succ_flush_bbs,\n \trelease_last_vdef and delete_basic_block.\n \t(unlink_virtual_phi): New function.\n \t(update_vuses): Add and use vuse1_phi_args argument.  Set var to\n-\tSSA_NAME_VAR of vuse1 or vuse2, and use var.  Handle case that def_stmt2\n-\tis NULL.  Use phi result as phi arg in case vuse1 or vuse2 is NULL_TREE.\n-\tReplace uses of vuse1 if vuse2 is NULL_TREE.  Fix code to limit\n-\treplacement of uses.  Propagate phi argument for phis with a single\n-\targument.\n+\tSSA_NAME_VAR of vuse1 or vuse2, and use var.  Handle case that\n+\tdef_stmt2 is NULL.  Use phi result as phi arg in case vuse1 or vuse2\n+\tis NULL_TREE.  Replace uses of vuse1 if vuse2 is NULL_TREE.  Fix code\n+\tto limit replacement of uses.  Propagate phi argument for phis with a\n+\tsingle argument.\n \t(replace_block_by): Update vops if phi_vuse1 or phi_vuse2 is NULL_TREE.\n-\tSet vuse1_phi_args if vuse1 is a phi defined in bb1.  Add vuse1_phi_args\n-\tas argument to call to update_vuses.  Call release_last_vdef,\n-\tsame_succ_flush_bb, delete_basic_block.  Update CDI_DOMINATORS info.\n+\tSet vuse1_phi_args if vuse1 is a phi defined in bb1.  Add\n+\tvuse1_phi_args as argument to call to update_vuses.  Call\n+\trelease_last_vdef, same_succ_flush_bb, delete_basic_block.  Update\n+\tCDI_DOMINATORS info.\n \t(tail_merge_optimize): Remove argument in call to purge_bbs.  Remove\n \tcall to free_dominance_info.  Only call calculate_dominance_info once.\n "}, {"sha": "c4366ba4ba04dc1cdb3a4f9b30ec14feea9de92f", "filename": "gcc/config/i386/sse.md", "status": "modified", "additions": 5, "deletions": 6, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a92aa31dd3498b1dac695bb71aab5fa6527e1f58/gcc%2Fconfig%2Fi386%2Fsse.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a92aa31dd3498b1dac695bb71aab5fa6527e1f58/gcc%2Fconfig%2Fi386%2Fsse.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsse.md?ref=a92aa31dd3498b1dac695bb71aab5fa6527e1f58", "patch": "@@ -4231,15 +4231,14 @@\n   [(set (match_operand:V4DF 0 \"register_operand\"         \"=x,x\")\n \t(vec_select:V4DF\n \t  (vec_concat:V8DF\n-\t    (match_operand:V4DF 1 \"nonimmediate_operand\" \"xm,x\")\n-\t    (match_operand:V4DF 2 \"nonimmediate_operand\" \" 1,xm\"))\n+\t    (match_operand:V4DF 1 \"nonimmediate_operand\" \" x,m\")\n+\t    (match_operand:V4DF 2 \"nonimmediate_operand\" \"xm,1\"))\n \t  (parallel [(const_int 0) (const_int 4)\n \t\t     (const_int 2) (const_int 6)])))]\n-  \"TARGET_AVX\n-   && (!MEM_P (operands[1]) || rtx_equal_p (operands[1], operands[2]))\"\n+  \"TARGET_AVX\"\n   \"@\n-   vmovddup\\t{%1, %0|%0, %1}\n-   vunpcklpd\\t{%2, %1, %0|%0, %1, %2}\"\n+   vunpcklpd\\t{%2, %1, %0|%0, %1, %2}\n+   vmovddup\\t{%1, %0|%0, %1}\"\n   [(set_attr \"type\" \"sselog\")\n    (set_attr \"prefix\" \"vex\")\n    (set_attr \"mode\" \"V4DF\")])"}, {"sha": "b273f36e6e43faa0da17fbf628388c6d0a615cf8", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a92aa31dd3498b1dac695bb71aab5fa6527e1f58/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a92aa31dd3498b1dac695bb71aab5fa6527e1f58/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=a92aa31dd3498b1dac695bb71aab5fa6527e1f58", "patch": "@@ -1,3 +1,9 @@\n+2011-10-27  Uros Bizjak  <ubizjak@gmail.com>\n+\t    Steven G. Kargl  <kargl@gcc.gnu.org>\n+\n+\tPR target/50875\n+\t* gfortran.dg/pr50875.f90: New test.\n+\n 2011-10-26  David S. Miller  <davem@davemloft.net>\n \n \t* gcc.target/sparc/fmaf-1.c: New test.\n@@ -7,8 +13,7 @@\n \n 2011-10-26  Joseph Myers  <joseph@codesourcery.com>\n \n-\t* gcc.dg/tls/thr-cse-1.c: For i?86-*-mingw*, check for multiple\n-\tcalls.\n+\t* gcc.dg/tls/thr-cse-1.c: For i?86-*-mingw*, check for multiple calls.\n \n 2011-10-26  Joseph Myers  <joseph@codesourcery.com>\n \n@@ -311,7 +316,7 @@\n 2011-10-20  Richard Henderson  <rth@redhat.com>\n \n \t* gcc.target/i386/vperm-v2df.c, gcc.target/i386/vperm-v2di.c,\n-\tgcc.target/i386/vperm-v4sf-1.c, gcc.target/i386/vperm-v4sf-2.c, \n+\tgcc.target/i386/vperm-v4sf-1.c, gcc.target/i386/vperm-v4sf-2.c,\n \tgcc.target/i386/vperm-v4si-1.c, gcc.target/i386/vperm-v4si-2.c:\n \tUse __builtin_shuffle.\n "}, {"sha": "6b4476c14e4b28bb72ff5be5a87b035eabe55020", "filename": "gcc/testsuite/gfortran.dg/pr50875.f90", "status": "added", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a92aa31dd3498b1dac695bb71aab5fa6527e1f58/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr50875.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a92aa31dd3498b1dac695bb71aab5fa6527e1f58/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr50875.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr50875.f90?ref=a92aa31dd3498b1dac695bb71aab5fa6527e1f58", "patch": "@@ -0,0 +1,39 @@\n+! { dg-do compile { target { i?86-*-* x86_64-*-* } } }\n+! { dg-options \"-O3 -mavx\" }\n+!\n+! PR fortran/50875.f90\n+\n+module test\n+\n+  implicit none\n+\n+  integer, parameter :: dp=kind(1.d0)\n+\n+  integer :: P = 2\n+\n+  real(kind=dp), allocatable :: real_array_A(:),real_array_B(:,:)\n+  complex(kind=dp), allocatable :: cmplx_array_A(:) \n+\n+contains\n+\n+  subroutine routine_A\n+\n+    integer :: i\n+\n+    allocate(cmplx_array_A(P),real_array_B(P,P),real_array_A(P))\n+\n+    real_array_A = 1\n+    real_array_B = 1\n+\n+    do i = 1, p\n+       cmplx_array_A = cmplx(real_array_B(:,i),0.0_dp,dp)\n+       cmplx_array_A = cmplx_array_A * exp(cmplx(0.0_dp,real_array_A+1))\n+    end do\n+\n+    deallocate(cmplx_array_A,real_array_B,real_array_A)\n+\n+  end subroutine routine_A\n+\n+end module test\n+\n+! { dg-final { cleanup-modules \"test\" } }"}]}