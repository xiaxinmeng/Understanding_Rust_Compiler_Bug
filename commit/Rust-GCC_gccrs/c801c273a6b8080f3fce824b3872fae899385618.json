{"sha": "c801c273a6b8080f3fce824b3872fae899385618", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzgwMWMyNzNhNmI4MDgwZjNmY2U4MjRiMzg3MmZhZTg5OTM4NTYxOA==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2008-09-22T04:24:28Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2008-09-22T04:24:28Z"}, "message": "ipa-cp.c (ipcp_estimate_growth): Check recursive calls.\n\n\n\t* ipa-cp.c (ipcp_estimate_growth): Check recursive calls.\n\t(ipcp_insert_stage): Update dead_nodes bitmap.\n\nFrom-SVN: r140542", "tree": {"sha": "db55463ff43b7c026dcc445a28880d63e8b77f03", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/db55463ff43b7c026dcc445a28880d63e8b77f03"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c801c273a6b8080f3fce824b3872fae899385618", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c801c273a6b8080f3fce824b3872fae899385618", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c801c273a6b8080f3fce824b3872fae899385618", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c801c273a6b8080f3fce824b3872fae899385618/comments", "author": null, "committer": null, "parents": [{"sha": "d59e481e05edcb9eecebcd278ae174e0fdf03984", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d59e481e05edcb9eecebcd278ae174e0fdf03984", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d59e481e05edcb9eecebcd278ae174e0fdf03984"}], "stats": {"total": 16, "additions": 14, "deletions": 2}, "files": [{"sha": "9f67a4c0e91a1e4c3e114a61fc633ebe85f96d2a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c801c273a6b8080f3fce824b3872fae899385618/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c801c273a6b8080f3fce824b3872fae899385618/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c801c273a6b8080f3fce824b3872fae899385618", "patch": "@@ -1,3 +1,8 @@\n+2008-09-21  Jan Hubicka  <jh@suse.cz>\n+\n+\t* ipa-cp.c (ipcp_estimate_growth): Check recursive calls.\n+\t(ipcp_insert_stage): Update dead_nodes bitmap.\n+\n 2008-09-22  Danny Smith  <dannysmith@users.sourceforge.net>\n \n \tPR target/37528\t"}, {"sha": "46981972f163a993a0ad7ed935956e40776a4760", "filename": "gcc/ipa-cp.c", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c801c273a6b8080f3fce824b3872fae899385618/gcc%2Fipa-cp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c801c273a6b8080f3fce824b3872fae899385618/gcc%2Fipa-cp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-cp.c?ref=c801c273a6b8080f3fce824b3872fae899385618", "patch": "@@ -1051,7 +1051,7 @@ ipcp_estimate_growth (struct cgraph_node *node)\n   int growth;\n \n   for (cs = node->callers; cs != NULL; cs = cs->next_caller)\n-    if (!ipcp_need_redirect_p (cs))\n+    if (cs->caller == node || !ipcp_need_redirect_p (cs))\n       redirectable_node_callers++;\n     else\n       need_original = true;\n@@ -1159,7 +1159,6 @@ ipcp_insert_stage (void)\n   int i;\n   VEC (cgraph_edge_p, heap) * redirect_callers;\n   varray_type replace_trees;\n-  struct cgraph_edge *cs;\n   int node_callers, count;\n   tree parm_tree;\n   struct ipa_replace_map *replace_param;\n@@ -1209,6 +1208,7 @@ ipcp_insert_stage (void)\n       struct ipa_node_params *info;\n       int growth = 0;\n       bitmap args_to_skip;\n+      struct cgraph_edge *cs;\n \n       node = (struct cgraph_node *)fibheap_extract_min (heap);\n       node->aux = NULL;\n@@ -1230,6 +1230,13 @@ ipcp_insert_stage (void)\n \n       new_insns += growth;\n \n+      /* Look if original function becomes dead after clonning.  */\n+      for (cs = node->callers; cs != NULL; cs = cs->next_caller)\n+\tif (cs->caller == node || ipcp_need_redirect_p (cs))\n+\t  break;\n+      if (!cs && !node->needed)\n+\tbitmap_set_bit (dead_nodes, node->uid);\n+\n       info = IPA_NODE_REF (node);\n       count = ipa_get_param_count (info);\n "}]}