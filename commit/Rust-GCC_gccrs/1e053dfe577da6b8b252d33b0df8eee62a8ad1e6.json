{"sha": "1e053dfe577da6b8b252d33b0df8eee62a8ad1e6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWUwNTNkZmU1NzdkYTZiOGIyNTJkMzNiMGRmOGVlZTYyYThhZDFlNg==", "commit": {"author": {"name": "Manuel L\u00f3pez-Ib\u00e1\u00f1ez", "email": "manu@gcc.gnu.org", "date": "2008-08-28T19:34:36Z"}, "committer": {"name": "Manuel L\u00f3pez-Ib\u00e1\u00f1ez", "email": "manu@gcc.gnu.org", "date": "2008-08-28T19:34:36Z"}, "message": "re PR c/30949 (\"incompatible pointer type\" warning does not point to declaration)\n\n2008-08-28  Manuel Lopez-Ibanez  <manu@gcc.gnu.org>\n\n\tPR c/30949\n\t* c-typeck.c (convert_for_assignment): Give a note describing what\n\twas passed and what was expected.\ntestsuite/\n\t* gcc.dg/pr30949.c: New.\n\t* gcc.dg/transparent-union-1.c: Update.\n\t* gcc.dg/cleanup-1.c: Update.\n\t* gcc.dg/assign-warn-2.c: Update.\n\t* gcc.dg/conv-2.c: Update.\n\t* gcc.dg/Wpointer-sign-pedantic.c: Update.\n\t* gcc.dg/Wpointer-sign-Wall.c: Update.\n\t* gcc.dg/assign-warn-1.c: Update.\n\t* gcc.dg/dfp/composite-type.c: Update.\n\t* gcc.dg/noncompile/20020213-1.c: Update.\n\nFrom-SVN: r139729", "tree": {"sha": "63b0322b8155dda59f3357e394cb4dd3af952625", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/63b0322b8155dda59f3357e394cb4dd3af952625"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1e053dfe577da6b8b252d33b0df8eee62a8ad1e6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1e053dfe577da6b8b252d33b0df8eee62a8ad1e6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1e053dfe577da6b8b252d33b0df8eee62a8ad1e6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1e053dfe577da6b8b252d33b0df8eee62a8ad1e6/comments", "author": null, "committer": null, "parents": [{"sha": "31cb596a6b572773d25e7196ff19e126a52ca1e4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/31cb596a6b572773d25e7196ff19e126a52ca1e4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/31cb596a6b572773d25e7196ff19e126a52ca1e4"}], "stats": {"total": 108, "additions": 80, "deletions": 28}, "files": [{"sha": "2fe77890a0ea71433c70c2e0d51602eef6ddc773", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e053dfe577da6b8b252d33b0df8eee62a8ad1e6/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e053dfe577da6b8b252d33b0df8eee62a8ad1e6/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1e053dfe577da6b8b252d33b0df8eee62a8ad1e6", "patch": "@@ -1,3 +1,9 @@\n+2008-08-28  Manuel Lopez-Ibanez  <manu@gcc.gnu.org>\n+\n+\tPR c/30949\n+\t* c-typeck.c (convert_for_assignment): Give a note describing what\n+\twas passed and what was expected.\n+\n 2008-08-28  Joey Ye  <joey.ye@intel.com>\n \n \t* doc/extend.texi: Document AVX built-in functions."}, {"sha": "85a94443a6e92f21d23eecece7d9cc690a798289", "filename": "gcc/c-typeck.c", "status": "modified", "additions": 25, "deletions": 22, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e053dfe577da6b8b252d33b0df8eee62a8ad1e6/gcc%2Fc-typeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e053dfe577da6b8b252d33b0df8eee62a8ad1e6/gcc%2Fc-typeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-typeck.c?ref=1e053dfe577da6b8b252d33b0df8eee62a8ad1e6", "patch": "@@ -3952,28 +3952,31 @@ convert_for_assignment (tree type, tree rhs, enum impl_conv errtype,\n   /* This macro is used to emit diagnostics to ensure that all format\n      strings are complete sentences, visible to gettext and checked at\n      compile time.  */\n-#define WARN_FOR_ASSIGNMENT(LOCATION, OPT, AR, AS, IN, RE)\t\\\n-  do {\t\t\t\t\t\t\\\n-    switch (errtype)\t\t\t\t\\\n-      {\t\t\t\t\t\t\\\n-      case ic_argpass:\t\t\t\t\\\n-\tpedwarn (LOCATION, OPT, AR, parmnum, rname);\t\\\n-\tbreak;\t\t\t\t\t\\\n-      case ic_argpass_nonproto:\t\t\t\\\n-\twarning (OPT, AR, parmnum, rname);\t\\\n-\tbreak;\t\t\t\t\t\\\n-      case ic_assign:\t\t\t\t\\\n-\tpedwarn (LOCATION, OPT, AS);\t\t\t\\\n-\tbreak;\t\t\t\t\t\\\n-      case ic_init:\t\t\t\t\\\n-\tpedwarn (LOCATION, OPT, IN);\t\t\t\\\n-\tbreak;\t\t\t\t\t\\\n-      case ic_return:\t\t\t\t\\\n-\tpedwarn (LOCATION, OPT, RE);\t\t\t\\\n-\tbreak;\t\t\t\t\t\\\n-      default:\t\t\t\t\t\\\n-\tgcc_unreachable ();\t\t\t\\\n-      }\t\t\t\t\t\t\\\n+#define WARN_FOR_ASSIGNMENT(LOCATION, OPT, AR, AS, IN, RE)               \\\n+  do {                                                                   \\\n+    switch (errtype)                                                     \\\n+      {                                                                  \\\n+      case ic_argpass:                                                   \\\n+        if (pedwarn (LOCATION, OPT, AR, parmnum, rname))                 \\\n+          inform (fundecl ? DECL_SOURCE_LOCATION (fundecl) : LOCATION,   \\\n+                  \"expected %qT but argument is of type %qT\",            \\\n+                  type, rhstype);                                        \\\n+        break;                                                           \\\n+      case ic_argpass_nonproto:                                          \\\n+        warning (OPT, AR, parmnum, rname);                               \\\n+        break;                                                           \\\n+      case ic_assign:                                                    \\\n+        pedwarn (LOCATION, OPT, AS);                                     \\\n+        break;                                                           \\\n+      case ic_init:                                                      \\\n+        pedwarn (LOCATION, OPT, IN);                                     \\\n+        break;                                                           \\\n+      case ic_return:                                                    \\\n+        pedwarn (LOCATION, OPT, RE);                                     \\\n+        break;                                                           \\\n+      default:                                                           \\\n+        gcc_unreachable ();                                              \\\n+      }                                                                  \\\n   } while (0)\n \n   STRIP_TYPE_NOPS (rhs);"}, {"sha": "30b43234013e128ea7406f3808197f4655d06ce1", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e053dfe577da6b8b252d33b0df8eee62a8ad1e6/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e053dfe577da6b8b252d33b0df8eee62a8ad1e6/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=1e053dfe577da6b8b252d33b0df8eee62a8ad1e6", "patch": "@@ -1,3 +1,17 @@\n+2008-08-28  Manuel Lopez-Ibanez  <manu@gcc.gnu.org>\n+\n+\tPR c/30949\n+\t* gcc.dg/pr30949.c: New.\n+\t* gcc.dg/transparent-union-1.c: Update.\n+\t* gcc.dg/cleanup-1.c: Update.\n+\t* gcc.dg/assign-warn-2.c: Update.\n+\t* gcc.dg/conv-2.c: Update.\n+\t* gcc.dg/Wpointer-sign-pedantic.c: Update.\n+\t* gcc.dg/Wpointer-sign-Wall.c: Update.\n+\t* gcc.dg/assign-warn-1.c: Update.\n+\t* gcc.dg/dfp/composite-type.c: Update.\n+\t* gcc.dg/noncompile/20020213-1.c: Update.\n+\t\n 2008-08-28  Daniel Kraft  <d@domob.eu>\n \n \t* gfortran.dg/typebound_call_1.f03: New test."}, {"sha": "302d50e5cf18ced18d6f87045d6dc56ea721cd12", "filename": "gcc/testsuite/gcc.dg/Wpointer-sign-Wall.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e053dfe577da6b8b252d33b0df8eee62a8ad1e6/gcc%2Ftestsuite%2Fgcc.dg%2FWpointer-sign-Wall.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e053dfe577da6b8b252d33b0df8eee62a8ad1e6/gcc%2Ftestsuite%2Fgcc.dg%2FWpointer-sign-Wall.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2FWpointer-sign-Wall.c?ref=1e053dfe577da6b8b252d33b0df8eee62a8ad1e6", "patch": "@@ -2,7 +2,8 @@\n \n /* { dg-options \"-Wall\" } */\n \n-void foo(unsigned long* ulp);\n+void foo(unsigned long* ulp); /* { dg-message \"note: expected '\\[^\\n'\\]*' but argument is of type '\\[^\\n'\\]*'\" \"note: expected\" { target *-*-* } 5 } */\n+\n \n void bar(long* lp) {\n   foo(lp); /* { dg-warning \"differ in signedness\" } */"}, {"sha": "8b92110988d9c0c4944abe22d33aa644ea5d55f0", "filename": "gcc/testsuite/gcc.dg/Wpointer-sign-pedantic.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e053dfe577da6b8b252d33b0df8eee62a8ad1e6/gcc%2Ftestsuite%2Fgcc.dg%2FWpointer-sign-pedantic.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e053dfe577da6b8b252d33b0df8eee62a8ad1e6/gcc%2Ftestsuite%2Fgcc.dg%2FWpointer-sign-pedantic.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2FWpointer-sign-pedantic.c?ref=1e053dfe577da6b8b252d33b0df8eee62a8ad1e6", "patch": "@@ -2,7 +2,7 @@\n \n /* { dg-options \"-pedantic\" } */\n \n-void foo(unsigned long* ulp);\n+void foo(unsigned long* ulp);/* { dg-message \"note: expected '\\[^'\\n\\]*' but argument is of type '\\[^'\\n\\]*'\" \"note: expected\" { target *-*-* } 5 } */\n \n void bar(long* lp) {\n   foo(lp); /* { dg-warning \"differ in signedness\" } */"}, {"sha": "4c603829d59586fa74e4289bed4479cddbd5000c", "filename": "gcc/testsuite/gcc.dg/assign-warn-1.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e053dfe577da6b8b252d33b0df8eee62a8ad1e6/gcc%2Ftestsuite%2Fgcc.dg%2Fassign-warn-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e053dfe577da6b8b252d33b0df8eee62a8ad1e6/gcc%2Ftestsuite%2Fgcc.dg%2Fassign-warn-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fassign-warn-1.c?ref=1e053dfe577da6b8b252d33b0df8eee62a8ad1e6", "patch": "@@ -121,3 +121,6 @@ TESTARP(istrb, int, struct s); /* { dg-error \"incompatible type for argument 1 o\n TESTASS(istrc, int, struct s); /* { dg-error \"incompatible types in assignment\" } */\n TESTINI(istrd, int, struct s); /* { dg-error \"incompatible types in initialization\" } */\n TESTRET(istre, int, struct s); /* { dg-error \"incompatible types in return\" } */\n+\n+/* Match all extra informative notes.  */\n+/* { dg-message \"note: expected '\\[^\\n'\\]*' but argument is of type '\\[^\\n'\\]*'\" \"note: expected\" { target *-*-* } 0 } */"}, {"sha": "4656961f6c45b1f0fe608d89bbd9df5311d5b927", "filename": "gcc/testsuite/gcc.dg/assign-warn-2.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e053dfe577da6b8b252d33b0df8eee62a8ad1e6/gcc%2Ftestsuite%2Fgcc.dg%2Fassign-warn-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e053dfe577da6b8b252d33b0df8eee62a8ad1e6/gcc%2Ftestsuite%2Fgcc.dg%2Fassign-warn-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fassign-warn-2.c?ref=1e053dfe577da6b8b252d33b0df8eee62a8ad1e6", "patch": "@@ -122,3 +122,4 @@ TESTARP(istrb, int, struct s); /* { dg-error \"incompatible type for argument 1 o\n TESTASS(istrc, int, struct s); /* { dg-error \"incompatible types in assignment\" } */\n TESTINI(istrd, int, struct s); /* { dg-error \"incompatible types in initialization\" } */\n TESTRET(istre, int, struct s); /* { dg-error \"incompatible types in return\" } */\n+/* { dg-message \"note: expected '\\[^'\\n\\]*' but argument is of type '\\[^'\\n\\]*'\" \"note: expected\" { target *-*-* } 0 } */"}, {"sha": "dd571635baf8bd0ec79a2fb2fc200cd74bb9f510", "filename": "gcc/testsuite/gcc.dg/cleanup-1.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e053dfe577da6b8b252d33b0df8eee62a8ad1e6/gcc%2Ftestsuite%2Fgcc.dg%2Fcleanup-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e053dfe577da6b8b252d33b0df8eee62a8ad1e6/gcc%2Ftestsuite%2Fgcc.dg%2Fcleanup-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcleanup-1.c?ref=1e053dfe577da6b8b252d33b0df8eee62a8ad1e6", "patch": "@@ -10,10 +10,10 @@ static void f2() { }\n static void f3(void) { }\n static void f4(void *x U) { }\n static void f5(int *x U) { }\n-static void f6(double *x U) { }\n+static void f6(double *x U) { } /* { dg-message \"note: expected '\\[^\\n'\\]*' but argument is of type '\\[^\\n'\\]*'\" \"note: expected\" } */\n static void f7(const int *x U) { }\n static void f8(const int *x U, int y U) { }\n-static void f9(int x U) { }\n+static void f9(int x U) { } /* { dg-message \"note: expected '\\[^\\n'\\]*' but argument is of type '\\[^\\n'\\]*'\" \"note: expected\" } */\n \n void test(void)\n {"}, {"sha": "388dee3d7463eeb949c3515cdc6a5ba926c0aa85", "filename": "gcc/testsuite/gcc.dg/conv-2.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e053dfe577da6b8b252d33b0df8eee62a8ad1e6/gcc%2Ftestsuite%2Fgcc.dg%2Fconv-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e053dfe577da6b8b252d33b0df8eee62a8ad1e6/gcc%2Ftestsuite%2Fgcc.dg%2Fconv-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fconv-2.c?ref=1e053dfe577da6b8b252d33b0df8eee62a8ad1e6", "patch": "@@ -1,8 +1,8 @@\n /* { dg-do compile } */\n /* { dg-options \"-Wpointer-sign\" } */\n \n-void f1(long *);\n-void f2(unsigned long *);\n+void f1(long *); /* { dg-message \"note: expected '\\[^\\n'\\]*' but argument is of type '\\[^\\n'\\]*'\" \"note: expected\" } */\n+void f2(unsigned long *); /* { dg-message \"note: expected '\\[^\\n'\\]*' but argument is of type '\\[^\\n'\\]*'\" \"note: expected\" } */\n \n int main()\n {"}, {"sha": "b2e7632e62adaf96125486f49411db5c50663087", "filename": "gcc/testsuite/gcc.dg/dfp/composite-type.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e053dfe577da6b8b252d33b0df8eee62a8ad1e6/gcc%2Ftestsuite%2Fgcc.dg%2Fdfp%2Fcomposite-type.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e053dfe577da6b8b252d33b0df8eee62a8ad1e6/gcc%2Ftestsuite%2Fgcc.dg%2Fdfp%2Fcomposite-type.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fdfp%2Fcomposite-type.c?ref=1e053dfe577da6b8b252d33b0df8eee62a8ad1e6", "patch": "@@ -33,8 +33,16 @@ do \\\n } while(0)\n  \n DECIMAL_COMPOSITE_DECL(32);  /* { dg-error \"incompatible types in assignment\" } */\n+/* { dg-message \"note: expected '\\[^'\\n\\]*' but argument is of type '\\[^'\\n\\]*'\" \"note: expected\" { target *-*-* } 35 } */\n+\n+\n DECIMAL_COMPOSITE_DECL(64);  /* { dg-error \"incompatible types in assignment\" } */\n+/* { dg-message \"note: expected '\\[^'\\n\\]*' but argument is of type '\\[^'\\n\\]*'\" \"note: expected\" { target *-*-* } 39 } */\n+\n+\n DECIMAL_COMPOSITE_DECL(128); /* { dg-error \"incompatible types in assignment\" } */\n+/* { dg-message \"note: expected '\\[^'\\n\\]*' but argument is of type '\\[^'\\n\\]*'\" \"note: expected\" { target *-*-* } 43 } */\n+\n \n int main()\n {"}, {"sha": "41480f0794da53e9cee61e25b7fb8f4665876f42", "filename": "gcc/testsuite/gcc.dg/noncompile/20020213-1.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e053dfe577da6b8b252d33b0df8eee62a8ad1e6/gcc%2Ftestsuite%2Fgcc.dg%2Fnoncompile%2F20020213-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e053dfe577da6b8b252d33b0df8eee62a8ad1e6/gcc%2Ftestsuite%2Fgcc.dg%2Fnoncompile%2F20020213-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fnoncompile%2F20020213-1.c?ref=1e053dfe577da6b8b252d33b0df8eee62a8ad1e6", "patch": "@@ -25,7 +25,10 @@ int main ()\n }\n \n /* { dg-warning \"passing argument 2 of\" \"2nd incompatible\" { target *-*-* } 15 } */\n+/* { dg-message \"note: expected '\\[^'\\n\\]*' but argument is of type '\\[^'\\n\\]*'\" \"note: expected\" { target *-*-* } 5 } */\n /* { dg-warning \"passing argument 1 of\" \"1st incompatible\" { target *-*-* } 16 } */\n /* { dg-warning \"passing argument 2 of\" \"2nd incompatible\" { target *-*-* } 16 } */\n /* { dg-warning \"passing argument 1 of\" \"1st incompatible\" { target *-*-* } 18 } */\n+/* { dg-message \"note: expected '\\[^'\\n\\]*' but argument is of type '\\[^'\\n\\]*'\" \"note: expected\" { target *-*-* } 6 } */\n /* { dg-warning \"passing argument 1 of\" \"1st incompatible\" { target *-*-* } 20 } */\n+/* { dg-message \"note: expected '\\[^'\\n\\]*' but argument is of type '\\[^'\\n\\]*'\" \"note: expected\" { target *-*-* } 7 } */"}, {"sha": "a3f6a14132cb1533423a0f250c19247601aae853", "filename": "gcc/testsuite/gcc.dg/pr30949.c", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e053dfe577da6b8b252d33b0df8eee62a8ad1e6/gcc%2Ftestsuite%2Fgcc.dg%2Fpr30949.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e053dfe577da6b8b252d33b0df8eee62a8ad1e6/gcc%2Ftestsuite%2Fgcc.dg%2Fpr30949.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr30949.c?ref=1e053dfe577da6b8b252d33b0df8eee62a8ad1e6", "patch": "@@ -0,0 +1,11 @@\n+/* PR30949 */\n+/* { dg-do compile } */\n+/* { dg-options \"-pedantic-errors\" } */\n+\n+int func (int x);\n+void recv (int (* funcptr) (double x)); /* { dg-message \"note: expected 'int .\\\\\\*..double.' but argument is of type 'int .\\\\\\*..int.'\" } */\n+void call (void)\n+{\n+  recv (func); /* { dg-error \"passing argument 1 of 'recv' from incompatible pointer type\" } */\n+}\n+"}, {"sha": "2360912e3c5f670f8c612ab5b236ade59efee244", "filename": "gcc/testsuite/gcc.dg/transparent-union-1.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e053dfe577da6b8b252d33b0df8eee62a8ad1e6/gcc%2Ftestsuite%2Fgcc.dg%2Ftransparent-union-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e053dfe577da6b8b252d33b0df8eee62a8ad1e6/gcc%2Ftestsuite%2Fgcc.dg%2Ftransparent-union-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftransparent-union-1.c?ref=1e053dfe577da6b8b252d33b0df8eee62a8ad1e6", "patch": "@@ -81,3 +81,5 @@ main (void)\n   f13 (&l);\n   return 0;\n }\n+\n+/* { dg-message \"note: expected '\\[^\\n'\\]*' but argument is of type '\\[^\\n'\\]*'\" \"note: expected\" { target *-*-* } 0 } */"}]}