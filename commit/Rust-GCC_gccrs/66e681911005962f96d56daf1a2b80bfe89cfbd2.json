{"sha": "66e681911005962f96d56daf1a2b80bfe89cfbd2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjZlNjgxOTExMDA1OTYyZjk2ZDU2ZGFmMWEyYjgwYmZlODljZmJkMg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2008-11-12T08:18:45Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2008-11-12T08:18:45Z"}, "message": "re PR c++/35334 (Broken diagnostic for complex cast)\n\n\tPR c++/35334\n\t* c-pretty-print.c (pp_c_complex_expr): New function.\n\t(pp_c_postfix_expression) <case COMPLEX_EXPR>: Call it.\n\n\t* error.c (dump_expr): Handle COMPLEX_EXPR.\n\n\t* gcc.dg/pr35334.c: New test.\n\t* g++.dg/other/error29.C: New test.\n\nFrom-SVN: r141783", "tree": {"sha": "001e057e0e70c8a90aafba8c44da9fd2ef973064", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/001e057e0e70c8a90aafba8c44da9fd2ef973064"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/66e681911005962f96d56daf1a2b80bfe89cfbd2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/66e681911005962f96d56daf1a2b80bfe89cfbd2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/66e681911005962f96d56daf1a2b80bfe89cfbd2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/66e681911005962f96d56daf1a2b80bfe89cfbd2/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "8ebec1a5dd8a729cf24ad3cc708d9193392e8451", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8ebec1a5dd8a729cf24ad3cc708d9193392e8451", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8ebec1a5dd8a729cf24ad3cc708d9193392e8451"}], "stats": {"total": 104, "additions": 103, "deletions": 1}, "files": [{"sha": "b8c38c1f5e69e9e1ce24db7c15bc340bc1c36aea", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/66e681911005962f96d56daf1a2b80bfe89cfbd2/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/66e681911005962f96d56daf1a2b80bfe89cfbd2/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=66e681911005962f96d56daf1a2b80bfe89cfbd2", "patch": "@@ -1,5 +1,9 @@\n 2008-11-12  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR c++/35334\n+\t* c-pretty-print.c (pp_c_complex_expr): New function.\n+\t(pp_c_postfix_expression) <case COMPLEX_EXPR>: Call it.\n+\n \tPR target/35366\n \t* expr.c (expand_expr_addr_expr_1): If EXP needs bigger alignment\n \tthan INNER and INNER is a constant, forcibly align INNER as much"}, {"sha": "9ee2738ca82ac2acb75579abdcd5913bebb5290c", "filename": "gcc/c-pretty-print.c", "status": "modified", "additions": 44, "deletions": 1, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/66e681911005962f96d56daf1a2b80bfe89cfbd2/gcc%2Fc-pretty-print.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/66e681911005962f96d56daf1a2b80bfe89cfbd2/gcc%2Fc-pretty-print.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-pretty-print.c?ref=66e681911005962f96d56daf1a2b80bfe89cfbd2", "patch": "@@ -975,6 +975,46 @@ pp_c_compound_literal (c_pretty_printer *pp, tree e)\n     }\n }\n \n+/* Pretty-print a COMPLEX_EXPR expression.  */\n+\n+static void\n+pp_c_complex_expr (c_pretty_printer *pp, tree e)\n+{\n+  /* Handle a few common special cases, otherwise fallback\n+     to printing it as compound literal.  */\n+  tree type = TREE_TYPE (e);\n+  tree realexpr = TREE_OPERAND (e, 0);\n+  tree imagexpr = TREE_OPERAND (e, 1);\n+\n+  /* Cast of an COMPLEX_TYPE expression to a different COMPLEX_TYPE.  */\n+  if (TREE_CODE (realexpr) == NOP_EXPR\n+      && TREE_CODE (imagexpr) == NOP_EXPR\n+      && TREE_TYPE (realexpr) == TREE_TYPE (type)\n+      && TREE_TYPE (imagexpr) == TREE_TYPE (type)\n+      && TREE_CODE (TREE_OPERAND (realexpr, 0)) == REALPART_EXPR\n+      && TREE_CODE (TREE_OPERAND (imagexpr, 0)) == IMAGPART_EXPR\n+      && TREE_OPERAND (TREE_OPERAND (realexpr, 0), 0)\n+\t == TREE_OPERAND (TREE_OPERAND (imagexpr, 0), 0))\n+    {\n+      pp_c_type_cast (pp, type);\n+      pp_expression (pp, TREE_OPERAND (TREE_OPERAND (realexpr, 0), 0));\n+      return;\n+    }\n+\n+  /* Cast of an scalar expression to COMPLEX_TYPE.  */\n+  if ((integer_zerop (imagexpr) || real_zerop (imagexpr))\n+      && TREE_TYPE (realexpr) == TREE_TYPE (type))\n+    {\n+      pp_c_type_cast (pp, type);\n+      if (TREE_CODE (realexpr) == NOP_EXPR)\n+\trealexpr = TREE_OPERAND (realexpr, 0);\n+      pp_expression (pp, realexpr);\n+      return;\n+    }\n+\n+  pp_c_compound_literal (pp, e);\n+}\n+\n /* constant:\n       integer-constant\n       floating-constant\n@@ -1406,10 +1446,13 @@ pp_c_postfix_expression (c_pretty_printer *pp, tree e)\n \n     case COMPLEX_CST:\n     case VECTOR_CST:\n-    case COMPLEX_EXPR:\n       pp_c_compound_literal (pp, e);\n       break;\n \n+    case COMPLEX_EXPR:\n+      pp_c_complex_expr (pp, e);\n+      break;\n+\n     case COMPOUND_LITERAL_EXPR:\n       e = DECL_INITIAL (COMPOUND_LITERAL_EXPR_DECL (e));\n       /* Fall through.  */"}, {"sha": "8cfdf61255e5c80935f90df8a42c26664f972d36", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/66e681911005962f96d56daf1a2b80bfe89cfbd2/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/66e681911005962f96d56daf1a2b80bfe89cfbd2/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=66e681911005962f96d56daf1a2b80bfe89cfbd2", "patch": "@@ -1,3 +1,8 @@\n+2008-11-12  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/35334\n+\t* error.c (dump_expr): Handle COMPLEX_EXPR.\n+\n 2008-11-10  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c++/38021"}, {"sha": "3aa9b595fa7ce2416966e74640f2f7a1c1464703", "filename": "gcc/cp/error.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/66e681911005962f96d56daf1a2b80bfe89cfbd2/gcc%2Fcp%2Ferror.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/66e681911005962f96d56daf1a2b80bfe89cfbd2/gcc%2Fcp%2Ferror.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ferror.c?ref=66e681911005962f96d56daf1a2b80bfe89cfbd2", "patch": "@@ -2068,6 +2068,7 @@ dump_expr (tree t, int flags)\n     case UNGE_EXPR:\n     case UNEQ_EXPR:\n     case LTGT_EXPR:\n+    case COMPLEX_EXPR:\n       pp_expression (cxx_pp, t);\n       break;\n "}, {"sha": "922525fea728e25187f5f0e9b63b18696c4c0ea3", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/66e681911005962f96d56daf1a2b80bfe89cfbd2/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/66e681911005962f96d56daf1a2b80bfe89cfbd2/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=66e681911005962f96d56daf1a2b80bfe89cfbd2", "patch": "@@ -1,3 +1,9 @@\n+2008-11-12  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/35334\n+\t* gcc.dg/pr35334.c: New test.\n+\t* g++.dg/other/error29.C: New test.\n+\n 2008-11-12  Tobias Burnus  <burnus@net-b.de>\n \n \tPR fortran/38065"}, {"sha": "a46405875e7f30525a18a6dcce11fa1d45465974", "filename": "gcc/testsuite/g++.dg/other/error29.C", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/66e681911005962f96d56daf1a2b80bfe89cfbd2/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Ferror29.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/66e681911005962f96d56daf1a2b80bfe89cfbd2/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Ferror29.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Ferror29.C?ref=66e681911005962f96d56daf1a2b80bfe89cfbd2", "patch": "@@ -0,0 +1,21 @@\n+// PR c++/35334\n+// { dg-do compile }\n+// { dg-bogus \"not supported by\" \"\" { target *-*-* } 0 }\n+\n+__complex__ unsigned int i;\n+int j;\n+char k;\n+__complex__ double l;\n+double m;\n+float n;\n+\n+void\n+foo ()\n+{\n+  ((__complex__ int)i)();\t\t// { dg-error \"cannot be used as a function\" }\n+  ((__complex__ int)j)();\t\t// { dg-error \"cannot be used as a function\" }\n+  ((__complex__ int)k)();\t\t// { dg-error \"cannot be used as a function\" }\n+  ((__complex__ long double)l)();\t// { dg-error \"cannot be used as a function\" }\n+  ((__complex__ long double)m)();\t// { dg-error \"cannot be used as a function\" }\n+  ((__complex__ long double)n)();\t// { dg-error \"cannot be used as a function\" }\n+}"}, {"sha": "d4c642e3471a8332983e6718b4fb6c63f28778b9", "filename": "gcc/testsuite/gcc.dg/pr35334.c", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/66e681911005962f96d56daf1a2b80bfe89cfbd2/gcc%2Ftestsuite%2Fgcc.dg%2Fpr35334.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/66e681911005962f96d56daf1a2b80bfe89cfbd2/gcc%2Ftestsuite%2Fgcc.dg%2Fpr35334.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr35334.c?ref=66e681911005962f96d56daf1a2b80bfe89cfbd2", "patch": "@@ -0,0 +1,22 @@\n+/* PR c++/35334 */\n+/* { dg-do compile } */\n+/* { dg-options \"-std=gnu99\" } */\n+/* { dg-bogus \"not supported by\" \"\" { target *-*-* } 0 } */\n+\n+__complex__ unsigned int i;\n+int j;\n+char k;\n+__complex__ double l;\n+double m;\n+float n;\n+\n+void\n+foo ()\n+{\n+  ((__complex__ int)i)();\t\t/* { dg-error \"is not a function\" } */\n+  ((__complex__ int)j)();\t\t/* { dg-error \"is not a function\" } */\n+  ((__complex__ int)k)();\t\t/* { dg-error \"is not a function\" } */\n+  ((__complex__ long double)l)();\t/* { dg-error \"is not a function\" } */\n+  ((__complex__ long double)m)();\t/* { dg-error \"is not a function\" } */\n+  ((__complex__ long double)n)();\t/* { dg-error \"is not a function\" } */\n+}"}]}