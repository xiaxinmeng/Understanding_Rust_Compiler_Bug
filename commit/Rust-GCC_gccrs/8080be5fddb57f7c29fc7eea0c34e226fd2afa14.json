{"sha": "8080be5fddb57f7c29fc7eea0c34e226fd2afa14", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODA4MGJlNWZkZGI1N2Y3YzI5ZmM3ZWVhMGMzNGUyMjZmZDJhZmExNA==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-05-27T20:42:08Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-05-27T20:42:08Z"}, "message": "(try_combine): Don't make complemented NOT for constant out of range.\n\nFrom-SVN: r7370", "tree": {"sha": "801a4b0a37a0ab345abd41298e5e5a4698d6508c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/801a4b0a37a0ab345abd41298e5e5a4698d6508c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8080be5fddb57f7c29fc7eea0c34e226fd2afa14", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8080be5fddb57f7c29fc7eea0c34e226fd2afa14", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8080be5fddb57f7c29fc7eea0c34e226fd2afa14", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8080be5fddb57f7c29fc7eea0c34e226fd2afa14/comments", "author": null, "committer": null, "parents": [{"sha": "d46f42a50a60cd92500b440fc9b862f3b8932dc7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d46f42a50a60cd92500b440fc9b862f3b8932dc7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d46f42a50a60cd92500b440fc9b862f3b8932dc7"}], "stats": {"total": 26, "additions": 0, "deletions": 26}, "files": [{"sha": "e65496be6d1b574e9591f949cc7ba0917f6a2244", "filename": "gcc/combine.c", "status": "modified", "additions": 0, "deletions": 26, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8080be5fddb57f7c29fc7eea0c34e226fd2afa14/gcc%2Fcombine.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8080be5fddb57f7c29fc7eea0c34e226fd2afa14/gcc%2Fcombine.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcombine.c?ref=8080be5fddb57f7c29fc7eea0c34e226fd2afa14", "patch": "@@ -1704,32 +1704,6 @@ try_combine (i3, i2, i1)\n       insn_code_number = recog_for_combine (&newpat, i3, &new_i3_notes);\n     }\n \n-  /* See if this is an XOR.  If so, perhaps the problem is that the\n-     constant is out of range.  Replace it with a complemented XOR with\n-     a complemented constant; it might be in range.  */\n-\n-  else if (insn_code_number < 0 && GET_CODE (newpat) == SET\n-\t   && GET_CODE (SET_SRC (newpat)) == XOR\n-\t   && GET_CODE (XEXP (SET_SRC (newpat), 1)) == CONST_INT\n-\t   && ((temp = simplify_unary_operation (NOT,\n-\t\t\t\t\t\t GET_MODE (SET_SRC (newpat)),\n-\t\t\t\t\t\t XEXP (SET_SRC (newpat), 1),\n-\t\t\t\t\t\t GET_MODE (SET_SRC (newpat))))\n-\t       != 0))\n-    {\n-      enum machine_mode i_mode = GET_MODE (SET_SRC (newpat));\n-      rtx pat\n-\t= gen_rtx_combine (SET, VOIDmode, SET_DEST (newpat),\n-\t\t\t   gen_unary (NOT, i_mode,\n-\t\t\t\t      gen_binary (XOR, i_mode,\n-\t\t\t\t\t\t  XEXP (SET_SRC (newpat), 0),\n-\t\t\t\t\t\t  temp)));\n-\n-      insn_code_number = recog_for_combine (&pat, i3, &new_i3_notes);\n-      if (insn_code_number >= 0)\n-\tnewpat = pat;\n-    }\n-\t\t\t\t\t\t\t\n   /* If we were combining three insns and the result is a simple SET\n      with no ASM_OPERANDS that wasn't recognized, try to split it into two\n      insns.  There are two ways to do this.  It can be split using a "}]}