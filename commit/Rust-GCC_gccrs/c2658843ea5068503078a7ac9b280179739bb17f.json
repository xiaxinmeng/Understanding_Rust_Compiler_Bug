{"sha": "c2658843ea5068503078a7ac9b280179739bb17f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzI2NTg4NDNlYTUwNjg1MDMwNzhhN2FjOWIyODAxNzk3MzliYjE3Zg==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2013-04-12T12:48:12Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2013-04-12T12:48:12Z"}, "message": "[multiple changes]\n\n2013-04-12  Bob Duff  <duff@adacore.com>\n\n\t* par-ch7.adb (P_Package): Initialize Sloc in the newly-pushed scope\n\tstack entry.\n\n2013-04-12  Robert Dewar  <dewar@adacore.com>\n\n\t* switch-c.adb: Minor fix to wording of error message for\n\t-gnatet/eT.\n\n2013-04-12  Robert Dewar  <dewar@adacore.com>\n\n\t* impunit.adb: Add s-multip and s-mudido to list of impl defined\n\tsystem units.\n\t* gnat_rm.texi: Add documentation for\n\tSystem.Multiprocessors[.Dispatching_Domains].\n\n2013-04-12  Ben Brosgol  <brosgol@adacore.com>\n\n\t* gnat_ugn.texi: Completion of menu cleanups.\n\n2013-04-12  Arnaud Charlet  <charlet@adacore.com>\n\n\t* sem_prag.adb (Diagnose_Multiple_Pragmas): Relax the rules\n\tin Relaxed_RM_Semantics.\n\n2013-04-12  Arnaud Charlet  <charlet@adacore.com>\n\n\t* set_targ.adb (elab code): Add support for non gcc back-ends\n\twhere save_argv is null.\n\nFrom-SVN: r197899", "tree": {"sha": "f41d84652ea4871dbda37d882f5bfdb2c3d6c1da", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f41d84652ea4871dbda37d882f5bfdb2c3d6c1da"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c2658843ea5068503078a7ac9b280179739bb17f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c2658843ea5068503078a7ac9b280179739bb17f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c2658843ea5068503078a7ac9b280179739bb17f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c2658843ea5068503078a7ac9b280179739bb17f/comments", "author": null, "committer": null, "parents": [{"sha": "340772c0beef5ec63cff058453020d22c57b5465", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/340772c0beef5ec63cff058453020d22c57b5465", "html_url": "https://github.com/Rust-GCC/gccrs/commit/340772c0beef5ec63cff058453020d22c57b5465"}], "stats": {"total": 346, "additions": 192, "deletions": 154}, "files": [{"sha": "309e82836ca305f1441ad6b2c1087978173ace28", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2658843ea5068503078a7ac9b280179739bb17f/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2658843ea5068503078a7ac9b280179739bb17f/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=c2658843ea5068503078a7ac9b280179739bb17f", "patch": "@@ -1,3 +1,34 @@\n+2013-04-12  Bob Duff  <duff@adacore.com>\n+\n+\t* par-ch7.adb (P_Package): Initialize Sloc in the newly-pushed scope\n+\tstack entry.\n+\n+2013-04-12  Robert Dewar  <dewar@adacore.com>\n+\n+\t* switch-c.adb: Minor fix to wording of error message for\n+\t-gnatet/eT.\n+\n+2013-04-12  Robert Dewar  <dewar@adacore.com>\n+\n+\t* impunit.adb: Add s-multip and s-mudido to list of impl defined\n+\tsystem units.\n+\t* gnat_rm.texi: Add documentation for\n+\tSystem.Multiprocessors[.Dispatching_Domains].\n+\n+2013-04-12  Ben Brosgol  <brosgol@adacore.com>\n+\n+\t* gnat_ugn.texi: Completion of menu cleanups.\n+\n+2013-04-12  Arnaud Charlet  <charlet@adacore.com>\n+\n+\t* sem_prag.adb (Diagnose_Multiple_Pragmas): Relax the rules\n+\tin Relaxed_RM_Semantics.\n+\n+2013-04-12  Arnaud Charlet  <charlet@adacore.com>\n+\n+\t* set_targ.adb (elab code): Add support for non gcc back-ends\n+\twhere save_argv is null.\n+\n 2013-04-12  Robert Dewar  <dewar@adacore.com>\n \n \t* gnat1drv.adb (Gnat1drv): Test Target_Dependent_Info_Write_Name."}, {"sha": "abdfcce052c097447813d36152a16460b3f6ab48", "filename": "gcc/ada/gnat_rm.texi", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2658843ea5068503078a7ac9b280179739bb17f/gcc%2Fada%2Fgnat_rm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2658843ea5068503078a7ac9b280179739bb17f/gcc%2Fada%2Fgnat_rm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_rm.texi?ref=c2658843ea5068503078a7ac9b280179739bb17f", "patch": "@@ -548,6 +548,8 @@ The GNAT Library\n * System.Address_Image (s-addima.ads)::\n * System.Assertions (s-assert.ads)::\n * System.Memory (s-memory.ads)::\n+* System.Multiprocessors (s-multip.ads)::\n+* System.Multiprocessors.Dispatching_Domains (s-mudido.ads)::\n * System.Partition_Interface (s-parint.ads)::\n * System.Pool_Global (s-pooglo.ads)::\n * System.Pool_Local (s-pooloc.ads)::\n@@ -15508,6 +15510,8 @@ of GNAT, and will generate a warning message.\n * System.Address_Image (s-addima.ads)::\n * System.Assertions (s-assert.ads)::\n * System.Memory (s-memory.ads)::\n+* System.Multiprocessors (s-multip.ads)::\n+* System.Multiprocessors.Dispatching_Domains (s-mudido.ads)::\n * System.Partition_Interface (s-parint.ads)::\n * System.Pool_Global (s-pooglo.ads)::\n * System.Pool_Local (s-pooloc.ads)::\n@@ -16970,6 +16974,22 @@ allocation mechanisms for the default pool, and in addition, direct\n calls to this unit may be made for low level allocation uses (for\n example see the body of @code{GNAT.Tables}).\n \n+@node System.Multiprocessors (s-multip.ads)\n+@section @code{System.Multiprocessors} (@file{s-multip.ads})\n+@cindex @code{System.Multiprocessors} (@file{s-multip.ads})\n+@cindex Multiprocessor interface\n+This is an Ada 2012 unit defined in the Ada 2012 Reference Manual, but\n+in GNAT we also make it available in Ada 95 and Ada 2005 (where it is\n+technically an implementation-defined addition).\n+\n+@node System.Multiprocessors.Dispatching_Domains (s-mudido.ads)\n+@section @code{System.Multiprocessors.Dispatching_Domains} (@file{s-mudido.ads})\n+@cindex @code{System.Multiprocessors.Dispatching_Domains} (@file{s-mudido.ads})\n+@cindex Multiprocessor interface\n+This is an Ada 2012 unit defined in the Ada 2012 Reference Manual, but\n+in GNAT we also make it available in Ada 95 and Ada 2005 (where it is\n+technically an implementation-defined addition).\n+\n @node System.Partition_Interface (s-parint.ads)\n @section @code{System.Partition_Interface} (@file{s-parint.ads})\n @cindex @code{System.Partition_Interface} (@file{s-parint.ads})"}, {"sha": "8d46f70bde88b7560259b9378f812db63f22bbe2", "filename": "gcc/ada/gnat_ugn.texi", "status": "modified", "additions": 97, "deletions": 136, "changes": 233, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2658843ea5068503078a7ac9b280179739bb17f/gcc%2Fada%2Fgnat_ugn.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2658843ea5068503078a7ac9b280179739bb17f/gcc%2Fada%2Fgnat_ugn.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_ugn.texi?ref=c2658843ea5068503078a7ac9b280179739bb17f", "patch": "@@ -169,32 +169,32 @@ AdaCore@*\n * About This Guide::\n * Getting Started with GNAT::\n * The GNAT Compilation Model::\n-* Compiling With gcc::\n-* Binding With gnatbind::\n-* Linking With gnatlink::\n+* Compiling with gcc::\n+* Binding with gnatbind::\n+* Linking with gnatlink::\n * The GNAT Make Program gnatmake::\n * Improving Performance::\n-* Renaming Files Using gnatchop::\n+* Renaming Files with gnatchop::\n * Configuration Pragmas::\n-* Handling Arbitrary File Naming Conventions Using gnatname::\n+* Handling Arbitrary File Naming Conventions with gnatname::\n * GNAT Project Manager::\n * Tools Supporting Project Files::\n * The Cross-Referencing Tools gnatxref and gnatfind::\n * The GNAT Pretty-Printer gnatpp::\n-* The GNAT Metric Tool gnatmetric::\n-* File Name Krunching Using gnatkr::\n-* Preprocessing Using gnatprep::\n+* The GNAT Metrics Tool gnatmetric::\n+* File Name Krunching with gnatkr::\n+* Preprocessing with gnatprep::\n * The GNAT Library Browser gnatls::\n-* Cleaning Up Using gnatclean::\n+* Cleaning Up with gnatclean::\n @ifclear vms\n * GNAT and Libraries::\n * Using the GNU make Utility::\n @end ifclear\n * Memory Management Issues::\n * Stack Related Facilities::\n-* Verifying Properties Using gnatcheck::\n-* Creating Sample Bodies Using gnatstub::\n-* Creating Unit Tests Using gnattest::\n+* Verifying Properties with gnatcheck::\n+* Creating Sample Bodies with gnatstub::\n+* Creating Unit Tests with gnattest::\n * Performing Dimensionality Analysis in GNAT::\n * Generating Ada Bindings for C and C++ headers::\n * Other Utility Programs::\n@@ -257,21 +257,21 @@ The GNAT Compilation Model\n * Placement of temporary files::\n @end ifset\n \n-Compiling With gcc\n+Compiling with gcc\n * Compiling Programs::\n * Switches for gcc::\n * Search Paths and the Run-Time Library (RTL)::\n * Order of Compilation Issues::\n * Examples::\n \n-Binding With gnatbind\n+Binding with gnatbind\n * Running gnatbind::\n * Switches for gnatbind::\n * Command-Line Access::\n * Search Paths for gnatbind::\n * Examples of gnatbind Usage::\n \n-Linking With gnatlink\n+Linking with gnatlink\n * Running gnatlink::\n * Switches for gnatlink::\n \n@@ -289,7 +289,7 @@ Improving Performance\n * Reducing Size of Ada Executables with gnatelim::\n * Reducing Size of Executables with unused subprogram/data elimination::\n \n-Renaming Files Using gnatchop\n+Renaming Files with gnatchop\n * Handling Files with Multiple Units::\n * Operating gnatchop in Compilation Mode::\n * Command Line for gnatchop::\n@@ -300,7 +300,7 @@ Configuration Pragmas\n * Handling of Configuration Pragmas::\n * The Configuration Pragmas Files::\n \n-Handling Arbitrary File Naming Conventions Using gnatname\n+Handling Arbitrary File Naming Conventions with gnatname\n * Arbitrary File Naming Conventions::\n * Running gnatname::\n * Switches for gnatname::\n@@ -318,11 +318,8 @@ GNAT Project Manager\n * Project File Reference::\n \n Tools Supporting Project Files\n-* Switches Related to Project Files::\n-* Switches and Project Files::\n-* Specifying Configuration Pragmas::\n-* Project Files and Main Subprograms::\n-* Library Project Files::\n+* gnatmake and Project Files::\n+* The GNAT Driver and Project Files::\n \n The Cross-Referencing Tools gnatxref and gnatfind\n * Switches for gnatxref::\n@@ -339,13 +336,13 @@ The GNAT Pretty-Printer gnatpp\n The GNAT Metrics Tool gnatmetric\n * Switches for gnatmetric::\n \n-File Name Krunching Using gnatkr\n+File Name Krunching with gnatkr\n * About gnatkr::\n * Using gnatkr::\n * Krunching Method::\n * Examples of gnatkr Usage::\n \n-Preprocessing Using gnatprep\n+Preprocessing with gnatprep\n * Preprocessing Symbols::\n * Using gnatprep::\n * Switches for gnatprep::\n@@ -357,7 +354,7 @@ The GNAT Library Browser gnatls\n * Switches for gnatls::\n * Examples of gnatls Usage::\n \n-Cleaning Up Using gnatclean\n+Cleaning Up with gnatclean\n * Running gnatclean::\n * Switches for gnatclean::\n @c * Examples of gnatclean Usage::\n@@ -388,13 +385,13 @@ Stack Related Facilities\n * Static Stack Usage Analysis::\n * Dynamic Stack Usage Analysis::\n \n-Verifying Properties Using gnatcheck\n+Verifying Properties with gnatcheck\n \n-Creating Sample Bodies Using gnatstub\n+Creating Sample Bodies with gnatstub\n * Running gnatstub::\n * Switches for gnatstub::\n \n-Creating Unit Tests Using gnattest\n+Creating Unit Tests with gnattest\n * Running gnattest::\n * Switches for gnattest::\n * Project Attributes for gnattest::\n@@ -431,8 +428,8 @@ Other Utility Programs\n \n @ifclear vms\n Code Coverage and Profiling\n-* Code Coverage of Ada Programs using gcov::\n-* Profiling an Ada Program using gprof::\n+* Code Coverage of Ada Programs with gcov::\n+* Profiling an Ada Program with gprof::\n @end ifclear\n \n Running and Debugging Ada Programs\n@@ -445,7 +442,7 @@ Running and Debugging Ada Programs\n * Ada Exceptions::\n * Ada Tasks::\n * Debugging Generic Units::\n-* Remote Debugging using gdbserver::\n+* Remote Debugging with gdbserver::\n * GNAT Abnormal Termination or Failure to Terminate::\n * Naming Conventions for GNAT Source Files::\n * Getting Internal Debugging Information::\n@@ -469,36 +466,6 @@ Compatibility with HP Ada\n * Input-Output::\n * Implementation Limits::\n * Tools and Utilities::\n-\n-Language-Related Features\n-* Integer Types and Representations::\n-* Floating-Point Types and Representations::\n-* Pragmas Float_Representation and Long_Float::\n-* Fixed-Point Types and Representations::\n-* Record and Array Component Alignment::\n-* Address Clauses::\n-* Other Representation Clauses::\n-\n-Tasking and Task-Related Features\n-* Implementation of Tasks in HP Ada for OpenVMS Alpha Systems::\n-* Assigning Task IDs::\n-* Task IDs and Delays::\n-* Task-Related Pragmas::\n-* Scheduling and Task Priority::\n-* The Task Stack::\n-* External Interrupts::\n-\n-Pragmas and Pragma-Related Features\n-* Restrictions on the Pragma INLINE::\n-* Restrictions on the Pragma INTERFACE::\n-* Restrictions on the Pragma SYSTEM_NAME::\n-\n-Library of Predefined Units\n-* Changes to DECLIB::\n-\n-Bindings\n-* Shared Libraries and Options Files::\n-* Interfaces to C::\n @end ifset\n \n Platform-Specific Information for the Run-Time Libraries\n@@ -554,13 +521,13 @@ Compatibility and Porting Guide\n * Compatibility with Ada 83::\n * Compatibility between Ada 95 and Ada 2005::\n * Implementation-dependent characteristics::\n+* Compatibility with Other Ada Systems::\n+* Representation Clauses::\n @ifclear vms\n @c This brief section is only in the non-VMS version\n @c The complete chapter on HP Ada issues is in the VMS version\n * Compatibility with HP Ada 83::\n @end ifclear\n-* Compatibility with Other Ada Systems::\n-* Representation Clauses::\n @ifset vms\n * Transitioning to 64-Bit GNAT for OpenVMS::\n @end ifset\n@@ -578,6 +545,7 @@ Microsoft Windows Topics\n * Introduction to Dynamic Link Libraries (DLLs)::\n * Using DLLs with GNAT::\n * Building DLLs with GNAT::\n+* Building DLLs with gnatdll::\n * GNAT and Windows Resources::\n * Debugging a DLL::\n * Setting Stack Size from gnatlink::\n@@ -650,16 +618,16 @@ and running Ada programs with the GNAT Ada programming environment.\n by GNAT.\n \n @item\n-@ref{Compiling With gcc}, describes how to compile\n+@ref{Compiling with gcc}, describes how to compile\n Ada programs with @command{gcc}, the Ada compiler.\n \n @item\n-@ref{Binding With gnatbind}, describes how to\n+@ref{Binding with gnatbind}, describes how to\n perform binding of Ada programs with @code{gnatbind}, the GNAT binding\n utility.\n \n @item\n-@ref{Linking With gnatlink},\n+@ref{Linking with gnatlink},\n describes @command{gnatlink}, a\n program that provides for linking using the GNAT run-time library to\n construct a program. @command{gnatlink} can also incorporate foreign language\n@@ -679,7 +647,7 @@ also describes the @command{gnatelim} tool and unused subprogram/data\n elimination.\n \n @item\n-@ref{Renaming Files Using gnatchop}, describes\n+@ref{Renaming Files with gnatchop}, describes\n @code{gnatchop}, a utility that allows you to preprocess a file that\n contains Ada source code, and split it into one or more new files, one\n for each compilation unit.\n@@ -689,7 +657,7 @@ for each compilation unit.\n handled by GNAT.\n \n @item\n-@ref{Handling Arbitrary File Naming Conventions Using gnatname},\n+@ref{Handling Arbitrary File Naming Conventions with gnatname},\n shows how to override the default GNAT file naming conventions,\n either for an individual unit or globally.\n \n@@ -708,17 +676,17 @@ version of an Ada source file with control over casing, indentation,\n comment placement, and other elements of program presentation style.\n \n @item\n-@ref{The GNAT Metric Tool gnatmetric}, shows how to compute various\n+@ref{The GNAT Metrics Tool gnatmetric}, shows how to compute various\n metrics for an Ada source file, such as the number of types and subprograms,\n and assorted complexity measures.\n \n @item\n-@ref{File Name Krunching Using gnatkr}, describes the @code{gnatkr}\n+@ref{File Name Krunching with gnatkr}, describes the @code{gnatkr}\n file name krunching utility, used to handle shortened\n file names on operating systems with a limit on the length of names.\n \n @item\n-@ref{Preprocessing Using gnatprep}, describes @code{gnatprep}, a\n+@ref{Preprocessing with gnatprep}, describes @code{gnatprep}, a\n preprocessor utility that allows a single source file to be used to\n generate multiple or parameterized source files by means of macro\n substitution.\n@@ -729,7 +697,7 @@ utility that displays information about compiled units, including dependences\n on the corresponding sources files, and consistency of compilations.\n \n @item\n-@ref{Cleaning Up Using gnatclean}, describes @code{gnatclean}, a utility\n+@ref{Cleaning Up with gnatclean}, describes @code{gnatclean}, a utility\n to delete files that are produced by the compiler, binder and linker.\n \n @ifclear vms\n@@ -757,15 +725,15 @@ allocation and deallocation and helps detect ``memory leaks''.\n stack checking and analysis.\n \n @item\n-@ref{Verifying Properties Using gnatcheck}, discusses @code{gnatcheck},\n+@ref{Verifying Properties with gnatcheck}, discusses @code{gnatcheck},\n a utility that checks Ada code against a set of rules.\n \n @item\n-@ref{Creating Sample Bodies Using gnatstub}, discusses @code{gnatstub},\n+@ref{Creating Sample Bodies with gnatstub}, discusses @code{gnatstub},\n a utility that generates empty but compilable bodies for library units.\n \n @item\n-@ref{Creating Unit Tests Using gnattest}, discusses @code{gnattest},\n+@ref{Creating Unit Tests with gnattest}, discusses @code{gnattest},\n a utility that generates unit testing templates for library units.\n \n @item\n@@ -1056,7 +1024,7 @@ Alternatively, if you want to rename your files according to this default\n convention, which is probably more convenient if you will be using GNAT\n for all your compilations, then the @code{gnatchop} utility\n can be used to generate correctly-named source files\n-(@pxref{Renaming Files Using gnatchop}).\n+(@pxref{Renaming Files with gnatchop}).\n \n You can compile the program using the following command (@code{$} is used\n as the command prompt in the examples in this document):\n@@ -1993,7 +1961,7 @@ can specify the exact file names that you want used, as described\n in the next section. Finally, if your Ada programs are migrating from a\n compiler with a different naming convention, you can use the gnatchop\n utility to produce source files that follow the GNAT naming conventions.\n-(For details @pxref{Renaming Files Using gnatchop}.)\n+(For details @pxref{Renaming Files with gnatchop}.)\n \n Note: in the case of @code{Windows NT/XP} or @code{OpenVMS} operating\n systems, case is not significant. So for example on @code{Windows XP}\n@@ -3725,8 +3693,8 @@ GNAT uses the current directory for temporary files.\n @end ifset\n \n @c *************************\n-@node Compiling With gcc\n-@chapter Compiling With @command{gcc}\n+@node Compiling with gcc\n+@chapter Compiling with @command{gcc}\n \n @noindent\n This chapter discusses how to compile Ada programs using the @command{gcc}\n@@ -7015,7 +6983,7 @@ on subprogram calls and generic instantiations.\n Note that @option{-gnatE} is not necessary for safety, because in the\n default mode, GNAT ensures statically that the checks would not fail.\n For full details of the effect and use of this switch,\n-@xref{Compiling With gcc}.\n+@xref{Compiling with gcc}.\n \n @item -fstack-check\n @cindex @option{-fstack-check} (@command{gcc})\n@@ -7084,7 +7052,7 @@ Normally, GNAT allows only a single unit in a source file. However, this\n restriction does not apply in syntax-check-only mode, and it is possible\n to check a file containing multiple compilation units concatenated\n together. This is primarily used by the @code{gnatchop} utility\n-(@pxref{Renaming Files Using gnatchop}).\n+(@pxref{Renaming Files with gnatchop}).\n @end table\n \n @node Using gcc for Semantic Checking\n@@ -7859,7 +7827,7 @@ preprocessing.\n \n @noindent\n The actual preprocessing function is described in details in section\n-@ref{Preprocessing Using gnatprep}. This section only describes how integrated\n+@ref{Preprocessing with gnatprep}. This section only describes how integrated\n preprocessing is triggered and parameterized.\n \n @table @code\n@@ -8207,8 +8175,8 @@ Compile the subunit in file @file{abc-def.adb} in semantic-checking-only\n mode.\n @end table\n \n-@node Binding With gnatbind\n-@chapter Binding With @code{gnatbind}\n+@node Binding with gnatbind\n+@chapter Binding with @code{gnatbind}\n @findex gnatbind\n \n @menu\n@@ -9203,8 +9171,8 @@ since gnatlink will not be able to find the generated file.\n @end table\n \n @c ------------------------------------\n-@node Linking With gnatlink\n-@chapter Linking With @command{gnatlink}\n+@node Linking with gnatlink\n+@chapter Linking with @command{gnatlink}\n @c ------------------------------------\n @findex gnatlink\n \n@@ -11560,8 +11528,8 @@ It can be observed that the procedure @code{Unused} and the object\n appropriate options.\n \n @c ********************************\n-@node Renaming Files Using gnatchop\n-@chapter Renaming Files Using @code{gnatchop}\n+@node Renaming Files with gnatchop\n+@chapter Renaming Files with @code{gnatchop}\n @findex gnatchop\n \n @noindent\n@@ -11918,6 +11886,11 @@ unit will be skipped.\n @cindex Configuration pragmas\n @cindex Pragmas, configuration\n \n+@menu\n+* Handling of Configuration Pragmas::\n+* The Configuration Pragmas Files::\n+@end menu\n+\n @noindent\n Configuration pragmas include those pragmas described as\n such in the Ada Reference Manual, as well as\n@@ -11994,14 +11967,8 @@ recognized by GNAT:\n    Validity_Checks\n    Warnings\n    Wide_Character_Encoding\n-\n @end smallexample\n \n-@menu\n-* Handling of Configuration Pragmas::\n-* The Configuration Pragmas Files::\n-@end menu\n-\n @node Handling of Configuration Pragmas\n @section Handling of Configuration Pragmas\n \n@@ -12090,8 +12057,8 @@ predefined package SYSTEM all the additional types and subprograms that are\n defined in HP Ada. See @ref{Compatibility with HP Ada} for details.\n @end ifset\n \n-@node Handling Arbitrary File Naming Conventions Using gnatname\n-@chapter Handling Arbitrary File Naming Conventions Using @code{gnatname}\n+@node Handling Arbitrary File Naming Conventions with gnatname\n+@chapter Handling Arbitrary File Naming Conventions with @code{gnatname}\n @cindex Arbitrary File Naming Conventions\n \n @menu\n@@ -13967,6 +13934,11 @@ point to any character in the middle of the identifier.\n @findex gnatpp\n @cindex Pretty-Printer\n \n+@menu\n+* Switches for gnatpp::\n+* Formatting Rules::\n+@end menu\n+\n @noindent\n ^The @command{gnatpp} tool^GNAT PRETTY^ is an ASIS-based utility\n for source reformatting / pretty-printing.\n@@ -14027,11 +13999,6 @@ use the @option{-gnat05} switch if sources should be compiled in\n Ada 2005 mode  etc.\n @end itemize\n \n-@menu\n-* Switches for gnatpp::\n-* Formatting Rules::\n-@end menu\n-\n @node Switches for gnatpp\n @section Switches for @command{gnatpp}\n \n@@ -15137,8 +15104,8 @@ end Test;\n @end smallexample\n \n @c *********************************\n-@node The GNAT Metric Tool gnatmetric\n-@chapter The GNAT Metric Tool @command{gnatmetric}\n+@node The GNAT Metrics Tool gnatmetric\n+@chapter The GNAT Metrics Tool @command{gnatmetric}\n @findex gnatmetric\n @cindex Metric tool\n \n@@ -15149,6 +15116,10 @@ It takes an Ada source file as input and generates a file containing the\n metrics data as output. Various switches control which\n metrics are computed and output.\n \n+@menu\n+* Switches for gnatmetric::\n+@end menu\n+\n @command{gnatmetric} generates and uses the ASIS\n tree for the input source and thus requires the input to be syntactically and\n semantically legal.\n@@ -15201,10 +15172,6 @@ use the @option{-gnat05} switch if sources should be compiled in\n Ada 2005 mode etc.\n @end itemize\n \n-@menu\n-* Switches for gnatmetric::\n-@end menu\n-\n @node Switches for gnatmetric\n @section Switches for @command{gnatmetric}\n \n@@ -16076,8 +16043,8 @@ the @option{-U} option followed by the name of the main unit:\n \n \n @c ***********************************\n-@node File Name Krunching Using gnatkr\n-@chapter File Name Krunching Using @code{gnatkr}\n+@node File Name Krunching with gnatkr\n+@chapter File Name Krunching with @code{gnatkr}\n @findex gnatkr\n \n @noindent\n@@ -16292,8 +16259,8 @@ $ gnatkr very_long_unit_name.ads/count=6 --> vlunna.ads\n $ gnatkr very_long_unit_name.ads/count=0 --> very_long_unit_name.ads\n @end smallexample\n \n-@node Preprocessing Using gnatprep\n-@chapter Preprocessing Using @code{gnatprep}\n+@node Preprocessing with gnatprep\n+@chapter Preprocessing with @code{gnatprep}\n @findex gnatprep\n \n @noindent\n@@ -16889,8 +16856,8 @@ GNU:[LIB.OPENVMS7_1.2_8_1.ADALIB]unchconv.ads\n @end smallexample\n @end ifset\n \n-@node Cleaning Up Using gnatclean\n-@chapter Cleaning Up Using @code{gnatclean}\n+@node Cleaning Up with gnatclean\n+@chapter Cleaning Up with @code{gnatclean}\n @findex gnatclean\n @cindex Cleaning tool\n \n@@ -18743,8 +18710,8 @@ stack usage reports at run-time. See its body for the details.\n @c *********************************\n @c *            GNATCHECK          *\n @c *********************************\n-@node Verifying Properties Using gnatcheck\n-@chapter Verifying Properties Using @command{gnatcheck}\n+@node Verifying Properties with gnatcheck\n+@chapter Verifying Properties with @command{gnatcheck}\n @findex gnatcheck\n @cindex @command{gnatcheck}\n \n@@ -18765,8 +18732,8 @@ For full details, refer to @cite{GNATcheck Reference Manual} document.\n \n \n @c *********************************\n-@node Creating Sample Bodies Using gnatstub\n-@chapter Creating Sample Bodies Using @command{gnatstub}\n+@node Creating Sample Bodies with gnatstub\n+@chapter Creating Sample Bodies with @command{gnatstub}\n @findex gnatstub\n \n @noindent\n@@ -18974,8 +18941,8 @@ Verbose mode: generate version information.\n @end table\n \n @c *********************************\n-@node Creating Unit Tests Using gnattest\n-@chapter Creating Unit Tests Using @command{gnattest}\n+@node Creating Unit Tests with gnattest\n+@chapter Creating Unit Tests with @command{gnattest}\n @findex gnattest\n \n @noindent\n@@ -20269,12 +20236,12 @@ This chapter describes how to use @code{gcov} - coverage testing tool - and\n @code{gprof} - profiler tool - on your Ada programs.\n \n @menu\n-* Code Coverage of Ada Programs using gcov::\n-* Profiling an Ada Program using gprof::\n+* Code Coverage of Ada Programs with gcov::\n+* Profiling an Ada Program with gprof::\n @end menu\n \n-@node Code Coverage of Ada Programs using gcov\n-@section Code Coverage of Ada Programs using gcov\n+@node Code Coverage of Ada Programs with gcov\n+@section Code Coverage of Ada Programs with gcov\n @cindex gcov\n @cindex -fprofile-arcs\n @cindex -ftest-coverage\n@@ -20361,8 +20328,8 @@ text file, and provide this file to gcov as a parameter,  preceded by a @@\n Note that on AIX compiling a static library with @code{-fprofile-arcs} is\n not supported as there can be unresolved symbols during the final link.\n \n-@node Profiling an Ada Program using gprof\n-@section Profiling an Ada Program using gprof\n+@node Profiling an Ada Program with gprof\n+@section Profiling an Ada Program with gprof\n @cindex gprof\n @cindex -pg\n @cindex Profiling\n@@ -20587,7 +20554,7 @@ the incorrect user program.\n * Ada Exceptions::\n * Ada Tasks::\n * Debugging Generic Units::\n-* Remote Debugging using gdbserver::\n+* Remote Debugging with gdbserver::\n * GNAT Abnormal Termination or Failure to Terminate::\n * Naming Conventions for GNAT Source Files::\n * Getting Internal Debugging Information::\n@@ -21045,9 +21012,9 @@ When the breakpoint occurs, you can step through the code of the\n instance in the normal manner and examine the values of local variables, as for\n other units.\n \n-@node Remote Debugging using gdbserver\n-@section Remote Debugging using gdbserver\n-@cindex Remote Debugging using gdbserver\n+@node Remote Debugging with gdbserver\n+@section Remote Debugging with gdbserver\n+@cindex Remote Debugging with gdbserver\n \n @noindent\n On platforms where gdbserver is supported, it is possible to use this tool\n@@ -27238,7 +27205,7 @@ The preprocessor may be used in two separate modes. It can be used quite\n separately from the compiler, to generate a separate output source file\n that is then fed to the compiler as a separate step. This is the\n @code{gnatprep} utility, whose use is fully described in\n-@ref{Preprocessing Using gnatprep}.\n+@ref{Preprocessing with gnatprep}.\n @cindex @code{gnatprep}\n \n The preprocessing language allows such constructs as\n@@ -29656,12 +29623,6 @@ end API;\n @end group\n @end smallexample\n \n-@noindent\n-Note that a variable is\n-@strong{always imported with a DLL convention}. A function\n-can have @code{C} or @code{Stdcall} convention.\n-(@pxref{Windows Calling Conventions}).\n-\n @node Creating an Import Library\n @subsection Creating an Import Library\n @cindex Import library"}, {"sha": "bb62264c66b168115cf239ec7ce37c1b0188a0cf", "filename": "gcc/ada/impunit.adb", "status": "modified", "additions": 9, "deletions": 4, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2658843ea5068503078a7ac9b280179739bb17f/gcc%2Fada%2Fimpunit.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2658843ea5068503078a7ac9b280179739bb17f/gcc%2Fada%2Fimpunit.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fimpunit.adb?ref=c2658843ea5068503078a7ac9b280179739bb17f", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---           Copyright (C) 2000-2012, Free Software Foundation, Inc.        --\n+--           Copyright (C) 2000-2013, Free Software Foundation, Inc.        --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -380,7 +380,14 @@ package body Impunit is\n     (\"s-ststop\", F),  -- System.Strings.Stream_Ops\n     (\"s-tasinf\", F),  -- System.Task_Info\n     (\"s-wchcnv\", F),  -- System.Wch_Cnv\n-    (\"s-wchcon\", F)); -- System.Wch_Con\n+    (\"s-wchcon\", F),  -- System.Wch_Con\n+\n+   --  The following are strictly speaking Ada 2012 units, but we are allowed\n+   --  to add children to system, so we consider them to be implementation\n+   --  defined additions to System in earlier versions of Ada.\n+\n+    (\"s-multip\", T),  -- System.Multiprocessors\n+    (\"s-mudido\", T)); -- System.Multiprocessors.Dispatching_Domains\n \n    --------------------\n    -- Ada 2005 Units --\n@@ -544,8 +551,6 @@ package body Impunit is\n    --  The following units should be used only in Ada 2012 mode\n \n    Non_Imp_File_Names_12 : constant File_List := (\n-    (\"s-multip\", T),  -- System.Multiprocessors\n-    (\"s-mudido\", T),  -- System.Multiprocessors.Dispatching_Domains\n     (\"s-stposu\", T),  -- System.Storage_Pools.Subpools\n     (\"a-cobove\", T),  -- Ada.Containers.Bounded_Vectors\n     (\"a-cbdlli\", T),  -- Ada.Containers.Bounded_Doubly_Linked_Lists"}, {"sha": "d52a13d6c5b2fd10cd2136076ff1899ad3c203a6", "filename": "gcc/ada/par-ch7.adb", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2658843ea5068503078a7ac9b280179739bb17f/gcc%2Fada%2Fpar-ch7.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2658843ea5068503078a7ac9b280179739bb17f/gcc%2Fada%2Fpar-ch7.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-ch7.adb?ref=c2658843ea5068503078a7ac9b280179739bb17f", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2011, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2013, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -138,6 +138,7 @@ package body Ch7 is\n          end if;\n \n          T_Body;\n+         Scope.Table (Scope.Last).Sloc := Token_Ptr;\n          Name_Node := P_Defining_Program_Unit_Name;\n          Scope.Table (Scope.Last).Labl := Name_Node;\n          TF_Is;\n@@ -182,6 +183,7 @@ package body Ch7 is\n       --  Cases other than Package_Body\n \n       else\n+         Scope.Table (Scope.Last).Sloc := Token_Ptr;\n          Name_Node := P_Defining_Program_Unit_Name;\n          Scope.Table (Scope.Last).Labl := Name_Node;\n "}, {"sha": "b3b117576ddbb56d3410e10909c0faca1c514df4", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2658843ea5068503078a7ac9b280179739bb17f/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2658843ea5068503078a7ac9b280179739bb17f/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=c2658843ea5068503078a7ac9b280179739bb17f", "patch": "@@ -3456,8 +3456,12 @@ package body Sem_Prag is\n             end if;\n \n             --  Give message if needed if we fall through those tests\n+            --  except on Relaxed_RM_Semantics where we let go: either this\n+            --  is a case accepted/ignored by other Ada compilers (e.g.\n+            --  a mix of Convention and Import), or another error will be\n+            --  generated later (e.g. using both Import and Export).\n \n-            if Err then\n+            if Err and not Relaxed_RM_Semantics then\n                Error_Pragma_Arg\n                  (\"at most one Convention/Export/Import pragma is allowed\",\n                   Arg2);"}, {"sha": "db08f0d4e7bc6ed7b9f334b8888a0b7b1bfb8aa2", "filename": "gcc/ada/set_targ.adb", "status": "modified", "additions": 25, "deletions": 8, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2658843ea5068503078a7ac9b280179739bb17f/gcc%2Fada%2Fset_targ.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2658843ea5068503078a7ac9b280179739bb17f/gcc%2Fada%2Fset_targ.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fset_targ.adb?ref=c2658843ea5068503078a7ac9b280179739bb17f", "patch": "@@ -487,18 +487,26 @@ begin\n       pragma Import (C, save_argv);\n       --  Saved value of argv (argument pointers), imported from misc.c\n \n-      function Len_Arg (Arg : Pos) return Nat;\n-      --  Determine length of argument number Arg on original gnat1 command\n-      --  line.\n+      gnat_argc : Nat;\n+      gnat_argv : Arg_Array_Ptr;\n+      pragma Import (C, gnat_argc);\n+      pragma Import (C, gnat_argv);\n+      --  If save_argv is not set, default to gnat_argc/argv\n+\n+      argc : Nat;\n+      argv : Arg_Array_Ptr;\n+\n+      function Len_Arg (Arg : Big_String_Ptr) return Nat;\n+      --  Determine length of argument Arg (a nul terminated C string).\n \n       -------------\n       -- Len_Arg --\n       -------------\n \n-      function Len_Arg (Arg : Pos) return Nat is\n+      function Len_Arg (Arg : Big_String_Ptr) return Nat is\n       begin\n          for J in 1 .. Nat'Last loop\n-            if save_argv (Arg).all (Natural (J)) = ASCII.NUL then\n+            if Arg (Natural (J)) = ASCII.NUL then\n                return J - 1;\n             end if;\n          end loop;\n@@ -507,12 +515,21 @@ begin\n       end Len_Arg;\n \n    begin\n+      if save_argv /= null then\n+         argv := save_argv;\n+         argc := save_argc;\n+      else\n+         --  Case of a non gcc compiler, e.g. gnat2why or gnat2scil\n+         argv := gnat_argv;\n+         argc := gnat_argc;\n+      end if;\n+\n       --  Loop through arguments looking for -gnateT, also look for -gnatd.b\n \n-      for Arg in 1 .. save_argc - 1 loop\n+      for Arg in 1 .. argc - 1 loop\n          declare\n-            Argv_Ptr : constant Big_String_Ptr := save_argv (Arg);\n-            Argv_Len : constant Nat            := Len_Arg (Arg);\n+            Argv_Ptr : constant Big_String_Ptr := argv (Arg);\n+            Argv_Len : constant Nat            := Len_Arg (Argv_Ptr);\n \n          begin\n             if Argv_Len > 8"}, {"sha": "9ab79c77e6419cef8b186caf86166372a9f0da43", "filename": "gcc/ada/switch-c.adb", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2658843ea5068503078a7ac9b280179739bb17f/gcc%2Fada%2Fswitch-c.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2658843ea5068503078a7ac9b280179739bb17f/gcc%2Fada%2Fswitch-c.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fswitch-c.adb?ref=c2658843ea5068503078a7ac9b280179739bb17f", "patch": "@@ -652,8 +652,7 @@ package body Switch.C is\n                   when 't' =>\n                      if not First_Switch then\n                         Osint.Fail\n-                          (\"-gnatet must be first if combined with \"\n-                           & \"other switches\");\n+                          (\"-gnatet must not be combined with other switches\");\n                      end if;\n \n                      --  Check for '='\n@@ -674,8 +673,7 @@ package body Switch.C is\n                   when 'T' =>\n                      if not First_Switch then\n                         Osint.Fail\n-                          (\"-gnateT must be first if combined with \"\n-                           & \"other switches\");\n+                          (\"-gnateT must not be combined with other switches\");\n                      end if;\n \n                      --  Check for '='"}]}