{"sha": "cc95bca72f6e7f54c4adb6d332f881c277746366", "node_id": "C_kwDOANBUbNoAKGNjOTViY2E3MmY2ZTdmNTRjNGFkYjZkMzMyZjg4MWMyNzc3NDYzNjY", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2022-08-31T12:12:48Z"}, "committer": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2022-08-31T12:12:48Z"}, "message": "fix -Winconsistent-missing-override clang warning\n\nFixes:\ngcc/value-range.h:357:16: warning: 'set_nonnegative' overrides\na member function but is not marked 'override' [-Winconsistent-missing-override]\n\ngcc/ChangeLog:\n\n\t* value-range.h: Add override.", "tree": {"sha": "620e49f32293639fdf310fd17ef8bf9e729085a5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/620e49f32293639fdf310fd17ef8bf9e729085a5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cc95bca72f6e7f54c4adb6d332f881c277746366", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cc95bca72f6e7f54c4adb6d332f881c277746366", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cc95bca72f6e7f54c4adb6d332f881c277746366", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cc95bca72f6e7f54c4adb6d332f881c277746366/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "40f347881ade08fe9c0f8b527f8b54bd53aed195", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/40f347881ade08fe9c0f8b527f8b54bd53aed195", "html_url": "https://github.com/Rust-GCC/gccrs/commit/40f347881ade08fe9c0f8b527f8b54bd53aed195"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "b25dd30d88a349d3e3d889b54ba31733496ea742", "filename": "gcc/value-range.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc95bca72f6e7f54c4adb6d332f881c277746366/gcc%2Fvalue-range.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc95bca72f6e7f54c4adb6d332f881c277746366/gcc%2Fvalue-range.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvalue-range.h?ref=cc95bca72f6e7f54c4adb6d332f881c277746366", "patch": "@@ -354,7 +354,7 @@ class frange : public vrange\n   virtual bool nonzero_p () const;\n   virtual void set_nonzero (tree type);\n   virtual void set_zero (tree type);\n-  virtual void set_nonnegative (tree type);\n+  virtual void set_nonnegative (tree type) override;\n   frange& operator= (const frange &);\n   bool operator== (const frange &) const;\n   bool operator!= (const frange &r) const { return !(*this == r); }"}]}