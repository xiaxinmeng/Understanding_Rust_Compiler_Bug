{"sha": "6f15f6985a2525e69ed95c24797ccc4e04e47e13", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmYxNWY2OTg1YTI1MjVlNjllZDk1YzI0Nzk3Y2NjNGUwNGU0N2UxMw==", "commit": {"author": {"name": "Turly O'Connor", "email": "turly@gcc.gnu.org", "date": "2001-12-07T17:35:03Z"}, "committer": {"name": "Turly O'Connor", "email": "turly@gcc.gnu.org", "date": "2001-12-07T17:35:03Z"}, "message": "* darwin-tramp.asm: New file, implements __trampoline_setup.\n\nFrom-SVN: r47760", "tree": {"sha": "555fc2a0b59d80961a60132af9b9521bd621bc96", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/555fc2a0b59d80961a60132af9b9521bd621bc96"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6f15f6985a2525e69ed95c24797ccc4e04e47e13", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6f15f6985a2525e69ed95c24797ccc4e04e47e13", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6f15f6985a2525e69ed95c24797ccc4e04e47e13", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6f15f6985a2525e69ed95c24797ccc4e04e47e13/comments", "author": null, "committer": null, "parents": [{"sha": "4dabc42de3e9ac00ea4ac45acc69641ca8cc82de", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4dabc42de3e9ac00ea4ac45acc69641ca8cc82de", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4dabc42de3e9ac00ea4ac45acc69641ca8cc82de"}], "stats": {"total": 131, "additions": 131, "deletions": 0}, "files": [{"sha": "9715e1132c920bca0cfa70ca4b73abf0de208498", "filename": "gcc/config/rs6000/darwin-tramp.asm", "status": "added", "additions": 131, "deletions": 0, "changes": 131, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f15f6985a2525e69ed95c24797ccc4e04e47e13/gcc%2Fconfig%2Frs6000%2Fdarwin-tramp.asm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f15f6985a2525e69ed95c24797ccc4e04e47e13/gcc%2Fconfig%2Frs6000%2Fdarwin-tramp.asm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fdarwin-tramp.asm?ref=6f15f6985a2525e69ed95c24797ccc4e04e47e13", "patch": "@@ -0,0 +1,131 @@\n+/*  Special support for trampolines\n+ *\n+ *   Copyright (C) 1996, 1997, 2000 Free Software Foundation, Inc.\n+ *   Written By Michael Meissner\n+ * \n+ * This file is free software; you can redistribute it and/or modify it\n+ * under the terms of the GNU General Public License as published by the\n+ * Free Software Foundation; either version 2, or (at your option) any\n+ * later version.\n+ * \n+ * In addition to the permissions in the GNU General Public License, the\n+ * Free Software Foundation gives you unlimited permission to link the\n+ * compiled version of this file with other programs, and to distribute\n+ * those programs without any restriction coming from the use of this\n+ * file.  (The General Public License restrictions do apply in other\n+ * respects; for example, they cover modification of the file, and\n+ * distribution when not linked into another program.)\n+ * \n+ * This file is distributed in the hope that it will be useful, but\n+ * WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * General Public License for more details.\n+ * \n+ * You should have received a copy of the GNU General Public License\n+ * along with this program; see the file COPYING.  If not, write to\n+ * the Free Software Foundation, 59 Temple Place - Suite 330,\n+ * Boston, MA 02111-1307, USA.\n+ * \n+ *  As a special exception, if you link this library with files\n+ *  compiled with GCC to produce an executable, this does not cause the\n+ *  resulting executable to be covered by the GNU General Public License.\n+ *  This exception does not however invalidate any other reasons why the\n+ *  executable file might be covered by the GNU General Public License.\n+ */ \n+\n+/* Set up trampolines. */\n+\n+.text\n+\t.align\t2\n+Ltrampoline_initial:\n+\tmflr\tr0\n+\tbl\t1f\n+Lfunc = .-Ltrampoline_initial\n+\t.long\t0\t\t/* will be replaced with function address */\n+Lchain = .-Ltrampoline_initial\n+\t.long\t0\t\t/* will be replaced with static chain */\n+1:\tmflr\tr11\n+\tlwz\tr12,0(r11)\t/* function address */\n+\tmtlr\tr0\n+\tmtctr\tr12\n+\tlwz\tr11,4(r11)\t/* static chain */\n+\tbctr\n+\n+trampoline_size = .-Ltrampoline_initial\n+\n+/* R3 = stack address to store trampoline */\n+/* R4 = length of trampoline area */\n+/* R5 = function address */\n+/* R6 = static chain */\n+\n+\t.globl ___trampoline_setup\n+___trampoline_setup:\n+\tmflr\tr0\t\t/* save return address */\n+        bcl 20,31,LCF0\t\t/* load up __trampoline_initial into r7 */\n+LCF0:\n+        mflr\tr11\n+        addi\tr7,r11,ha16(LTRAMP-LCF0)\n+\tlwz\tr7,lo16(LTRAMP-LCF0)(r7)\n+\tsubi\tr7,r7,4\n+\tli\tr8,trampoline_size\t/* verify trampoline big enough */\n+\tcmpw\tcr1,r8,r4\n+\tsrwi\tr4,r4,2\t\t/* # words to move */\n+\taddi\tr9,r3,-4\t/* adjust pointer for lwzu */\n+\tmtctr\tr4\n+\tblt\tcr1,Labort\n+\n+\tmtlr\tr0\n+\n+\t/* Copy the instructions to the stack */\n+Lmove:\n+\tlwzu\tr10,4(r7)\n+\tstwu\tr10,4(r9)\n+\tbdnz\tLmove\n+\n+\t/* Store correct function and static chain */\n+\tstw\tr5,Lfunc(r3)\n+\tstw\tr6,Lchain(r3)\n+\n+\t/* Now flush both caches */\n+\tmtctr\tr4\n+Lcache:\n+\ticbi\t0,r3\n+\tdcbf\t0,r3\n+\taddi\tr3,r3,4\n+\tbdnz\tLcache\n+\n+\t/* Finally synchronize things & return */\n+\tsync\n+\tisync\n+\tblr\n+\n+Labort:\n+#ifdef __DYNAMIC__\n+\tbl\tL_abort$stub\n+.data\n+.picsymbol_stub\n+L_abort$stub:\n+        .indirect_symbol _abort\n+        mflr r0\n+        bcl 20,31,L0$_abort\n+L0$_abort:\n+        mflr r11\n+        addis r11,r11,ha16(L_abort$lazy_ptr-L0$_abort)\n+        mtlr r0\n+        lwz r12,lo16(L_abort$lazy_ptr-L0$_abort)(r11)\n+        mtctr r12\n+        addi r11,r11,lo16(L_abort$lazy_ptr-L0$_abort)\n+        bctr\n+.data\n+.lazy_symbol_pointer\n+L_abort$lazy_ptr:\n+        .indirect_symbol _abort\n+        .long dyld_stub_binding_helper\n+#else\n+\tbl\t_abort\n+#endif\n+.data\n+\t.align 2\n+LTRAMP:\n+\t.long Ltrampoline_initial\n+"}]}