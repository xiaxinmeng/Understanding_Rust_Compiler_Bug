{"sha": "9ec36da574f8272705a3ead59bbd289f23793429", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWVjMzZkYTU3NGY4MjcyNzA1YTNlYWQ1OWJiZDI4OWYyMzc5MzQyOQ==", "commit": {"author": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1998-06-29T21:40:49Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1998-06-29T21:40:49Z"}, "message": "* Merge from gcc2 June 9, 1998 snapshot.  See ChangeLog.13 for\n        details.\n\nFrom-SVN: r20808", "tree": {"sha": "1ec056a51ca5f7af70d48889aab8bbf9c1f9d9aa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1ec056a51ca5f7af70d48889aab8bbf9c1f9d9aa"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9ec36da574f8272705a3ead59bbd289f23793429", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9ec36da574f8272705a3ead59bbd289f23793429", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9ec36da574f8272705a3ead59bbd289f23793429", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9ec36da574f8272705a3ead59bbd289f23793429/comments", "author": null, "committer": null, "parents": [{"sha": "ad2c71b764c066471608c85695392c7fb49c7bc7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ad2c71b764c066471608c85695392c7fb49c7bc7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ad2c71b764c066471608c85695392c7fb49c7bc7"}], "stats": {"total": 2984, "additions": 2498, "deletions": 486}, "files": [{"sha": "3e71a3b7017659084b00350afaeaae9c74c873b0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ec36da574f8272705a3ead59bbd289f23793429/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ec36da574f8272705a3ead59bbd289f23793429/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9ec36da574f8272705a3ead59bbd289f23793429", "patch": "@@ -1,5 +1,8 @@\n Mon Jun 29 22:12:06 1998  Jeffrey A Law  (law@cygnus.com)\n \n+\t* Merge from gcc2 June 9, 1998 snapshot.  See ChangeLog.13 for\n+\tdetails.\n+\n \t* pa.c, pa.h, pa.md: Convert to gen_rtx_FOO.\n \n Mon Jun 29 20:12:41 1998  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>"}, {"sha": "5a9c6cfec7522584f4c82378afe0d573d374ca94", "filename": "gcc/ChangeLog.13", "status": "added", "additions": 1503, "deletions": 0, "changes": 1503, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ec36da574f8272705a3ead59bbd289f23793429/gcc%2FChangeLog.13", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ec36da574f8272705a3ead59bbd289f23793429/gcc%2FChangeLog.13", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog.13?ref=9ec36da574f8272705a3ead59bbd289f23793429", "patch": "@@ -0,0 +1,1503 @@\n+Tue Jun  9 07:24:01 1998  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n+\n+\t* regmove.c ({next,prev}_insn_for_regmove): Properly handle end of\n+ \tfunction.\n+\n+Mon Jun  8 15:26:49 1998  Juha Sarlin <juha@c3l.tyreso.se>\n+\n+\t* h8300.c (get_shift_alg): Add special cases for shifts of 8 and 24.\n+\n+Mon Jun  8 14:40:02 1998  John Wehle  (john@feith.com)\n+\n+\t* i386.md (movsf_push, movsf_mem): Remove.\n+\t(movsf_push): Rename from movsf_push_nomove and move in front of\n+\tmovsf; allow memory operands during and after reload.\n+\t(movsf_push_memory): New pattern.\n+\t(movsf): Don't bother checking for push_operand.  If TARGET_MOVE and\n+\tboth operands refer to memory then force operand[1] into a register.\n+\t(movsf_normal): Change to unnamed pattern.\n+\tLikewise for movdf, movxf, and friends.\n+\n+Mon Jun  8 13:18:04 1998  Martin v. Loewis  <loewis@informatik.hu-berlin.de>\n+\n+\t* Makefile.in (TREE_H): Add tree-check.h.\n+\t(tree-check.h, s-check, gencheck): New targets.\n+\t(STAGESTUFF): Add s-check.\n+\t* gencheck.c: New file.\n+\t* tree.c (tree_check, tree_class_check, expr_check): New functions.\n+\t* tree.h (TREE_CHECK, TREE_CLASS_CHECK): Define.\n+\t(TYPE_CHECK, DECL_CHECK): Define.\n+\tModify all access macros to use generated checking macros.\n+\t* acconfig.h (ENABLE_CHECKING): Undefine.\n+\t* configure.in (--enable-checking): New option.\n+\n+Mon Jun  8 12:13:25 1998  Richard Kenner  <kenner@vlsi1.ultra.nyu.ed>\n+\n+\t* regmove.c: Remove include for varargs or stdarg.\n+\n+Mon Jun  8 07:49:41 1998  Andris Pavenis   <pavenis@lanet.lv>\n+\n+\t* gcc.c (link_command_spec): Support LINK_COMMAND_SPEC.\n+\n+Sun Jun  7 18:00:28 1998  Andreas Schwab  <schwab@issan.informatik.uni-dortmund.de>\n+\n+\t* fold-const.c (fold, case EQ_EXPR): When folding VAR++ == CONST\n+\tor VAR-- == CONST construct a proper mask if VAR is a bitfield.\n+\tCope with CONST being out of range for the bitfield.\n+\n+Sun Jun  7 17:19:35 1998  Tom Quiggle  <quiggle@sgi.com>\n+\n+\t* mips/iris6.h (DWARF2_FRAME_INFO): Define.\n+\t* dwarf2out.c (dwarf2out_do_frame): Do something if DWARF2_FRAME_INFO.\n+\n+Sun Jun  7 15:29:04 1998  Andreas Schwab  <schwab@issan.informatik.uni-dortmund.de>\n+\n+\t* regmove.c: New file.\n+\t* Makefile.in (OBJS): Add regmove.o.\n+\t(regmove.o): New rules.\n+\t(mostlyclean): Remove regmove dumps.\n+\t* toplev.c (regmove_{dump,dump_file,time}, flag_regmove): New vars.\n+\t(f_options): Add -foptimize-register-move.\n+\t(compile_file): Run regmove pass after combine pass and do its dump.\n+\t(main): Enable regmove dump when -dN or -da.\n+\t(fatal_insn): Flush regmove dump file.\n+\t* flags.h (flag_regmove): Declare.\n+\t* flow.c (find_use_as_address): Export.\n+\t* rtl.h (find_use_as_address): Declare.\n+\t* local-alloc.c (optimize_reg_copy_{1,2}): Removed, all calls deleted.\n+\t* reload1.c (count_occurrences): Export.\n+\t* reload.h (count_occurrences): Declare.\n+\n+Sun Jun  7 09:30:31 1998  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n+\n+\t* Makefile.in (uninstall): Uninstall gcov.\n+\n+\t* alpha.h (ASM_COMMENT_START): Define.\n+\n+\t* alpha.h (EXTRA_CONSTRAINT, case 'S'): New case.\n+\t* alpha.md ({ashl,ashr,lshr}di3): Use 'S' for constraint.\n+\n+\t* i386.md (cmpxf): Add missing extend pattern from SFmode and fix\n+\toperand numbers in one extend pattern from DFmode.\n+\n+\t* pa.md ({pre,post}_{ld,st}wm and similar): When operand is being\n+\tincremented, use '+', not '=', for constraint.\n+\n+\t* reload.c (find_reloads): Give preference to pseudo that was the\n+ \treloaded output of previous insn.\n+\n+\t* emit-rtl.c (init_emit_once): Provide default for DOUBLE_TYPE_SIZE.\n+\n+\t* expr.c (init_expr_once): Free all RTL we generate here.\n+\t* expmed.c (init_expmed): Allocate all RTX in memory we'll free.\n+\n+\t* genemit.c (main): Generate #include \"reload.h\".\n+\n+\t* expr.c (expand_expr, case INDIRECT_EXPR): A dereference of\n+\ta REFERENCE_TYPE is always considered in a structure.  Likewise for\n+\ta dereference of a NOP_EXPR whose input is a pointer to aggregate.\n+\n+Sat Jun  6 17:25:14 1998  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n+\n+\t* mips.md (reload_{in,out}di): Allow other operand to be invalid\n+\tMEM and get any reload replacement before using address.\n+\n+Tue May 26 18:52:23 1998  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n+\n+\t* reload1.c (reload): Get MEM_IN_STRUCT_P and RTX_UNCHANGING_P\n+\tfrom reg_equiv_memory_loc; set the latter when changing REG to MEM.\n+\t(alter_reg): Don't set RTX_UNCHANGING_P for shared slots.\n+\n+Mon May 25 12:07:12 1998  Hans-Peter Nilsson  <hp@axis.se>\n+\n+\t* cplus-dem.c (MBUF_SIZE): Bumped from 512 to 32767.\n+\n+Sun May 24 21:50:12 1998  Alan Modra <alan@spri.levels.unisa.edu.au>\n+\n+\t* i386/linux{,-aout,oldld}.h (ASM_COMMENT_START): Define.\n+\n+Sun May 24 11:58:37 1998  Andreas Schwab  <schwab@issan.informatik.uni-dortmund.de>\n+\n+\t* m68k.md (adddi3, subdi3): Properly negate the DImode constant.\n+\n+Sun May 24 11:30:08 1998  Torbjorn Granlund  <tege@matematik.su.se>\n+\n+\t* m68k/lb1sf68.asm (__addsf3): Fix typo in exg on coldfire.\n+\n+Sun May 24 09:38:17 1998  John Wehle  (john@feith.com)\n+\n+\t* i386.md (movsi): Remove redundant integer push patterns.\n+\tDon't check for TARGET_PUSH_MEMORY when pushing constants or registers.\n+\n+Sun May 24 08:59:27 1998  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n+\n+\t* fold-const.c (fold, case EQ_EXPR): Split COMPLEX_TYPE operands\n+\tif either is COMPLEX_CST in addition to COMPLEX_EXPR.\n+\n+\t* expr.c (do_jump, case EQ_EXPR, case NE_EXPR): Check for COMPLEX\n+\tbefore testing for operand 1 being zero.\n+\n+\t* genattrtab.c (optimize): Define.\n+\n+\t* configure.lang: Fix substitution of target_alias.\n+\n+Sat May 23 22:31:17 1998  Michael P. Hayes  <michaelh@ongaonga.chch.cri.nz>\n+\n+\t* emit_rtl.c (double_mode): New variable.  \n+\t(init_emit_once): Set and use it.\n+\t* real.c (ereal_atof, real_value_truncate): Handle double_mode not\n+\tbeing DFmode for C4x.\n+\t\n+Sat May 23 22:19:55 1998  Mike Stump  <mrs@wrs.com>\n+\n+\t* expr.c (expand_builtin_setjmp): Handle BUILTIN_SETJMP_FRAME_VALUE.\n+\t* i960.h (SETUP_FRAME_ADDRESSES, BUILTIN_SETJMP_FRAME_VALUE): Define.\n+\t* i960.md (ret, flush_register_windows): Define.\n+\t(nonlocal_goto): Likewise.  Nested function nonlocal gotos don't\n+\twork yet.\n+\n+Sat May 23 18:45:59 1998  Andreas Schwab  <schwab@issan.informatik.uni-dortmund.de>\n+\n+\t* m68k/t-linux: Remove stuff already included in config/t-linux.\n+\n+Sat May 23 18:35:07 1998  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n+\n+\t* final.c: Select <stab.h> and \"gstab.h\" with NO_STAB_H.\n+\n+\t* gcc.c (default_compilers): Remove \".ada\" extension.\n+\n+\t* combine.c (rtx_equal_for_field_assignment): Remove code that\n+\tchecks get_last_value.\n+\n+\t* Makefile.in (uninstall): Delete info files.\n+\n+Sat May 23 18:28:27 1998  Herman A.J. ten Brugge <Haj.Ten.Brugge@net.HCC.nl>\n+\n+\t* c-decl.c (start_decl): Use new macro SET_DEFAULT_DECL_ATTRIBUTES.\n+\t* c-lex.c (check_newline): Put last read character back on input\n+\tstream.\n+\n+Sat May 23 18:13:53 1998  David Edelsohn  <edelsohn@mhpcc.edu>\n+\n+\t* rs6000.md (floatsidf2_loadaddr): rs6000_fpmem_offset will be\n+\tnegative in a stackless frame.\n+\t* rs6000.c (rs6000_stack_info): Don't include fixed-size link area\n+\tin stackless frame size.  Support 64-bit stackless frame size.\n+\tCombine fpmem offset calculations and don't add total_size to\n+\toffset if not pushing a stack frame.\n+\n+\t* tree.c (get_inner_array_type): New function.\n+\t* tree.h (get_inner_array_type): Likewise.\n+\n+Wed May 20 15:42:22 1998  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n+\n+\t* expmed.c (expand_divmod): Save last divison constant and\n+\tif rem is same as div, don't adjust rem cost.\n+\n+Thu May 14 14:11:37 1998  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n+\n+\t* alpha/vxworks.h: New file.\n+\t* configure.in (alpha*-*-vxworks*): New target.\n+\n+\t* alpha.c (tree.h): Include earlier.\n+\t(alpha_initialize_trampoline): New function.\n+\t* alpha.h (INITIALIZE_TRAMPOLINE): Call it.\n+\t* alpha/linux.h (INITIALIZE_TRAMPOLINE): Don't redefine.\n+\n+Thu May 14 13:35:53 1998  Cyrille Comar  <comar@gnat.com>\n+\n+\t* Makefile.in (STAGESTUFF): Add s-under.\n+\n+Wed May 13 17:38:35 1998  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n+\n+\t* combine.c (simplify_comparison, case AND): Don't commute AND\n+\twith SUBREG if constant is whole mode and don't do if lowpart\n+\tand not WORD_REGISTER_OPERATIONS.\n+\n+\t* expmed.c (expand_mult): Use 0 as add_target if should preserve\n+\tsubexpressions.\n+\n+Mon May 11 17:26:06 1998  Paul Eggert  <eggert@twinsun.com>\n+\n+\t* dwarf2out.c: Undo most recent change.\n+\n+Sun May 10 17:09:20 1998  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n+\n+\t* fold-const.c (fold_range_test, fold): If need to make SAVE_EXPR\n+\tto do optimization, suppress if contains_placeholder_p.\n+\n+Thu May  7 18:14:31  Paul Eggert  <eggert@twinsun.com>\n+\n+\t* dwarf2out.c: Don't assume `.section \".text\"' causes assembler to\n+\ttreat .text as label for start of section; instead, output\n+\t`.section \".text\"; .LLtext0:' and use .LLtext0 in label contexts.\n+\t(ABBREV_LABEL, DEBUG_INFO_LABEL, DEBUG_LINE_LABEL, TEXT_LABEL): New.\n+\t(abbrev_label, debug_info_label, debug_line_label, text_label): New.\n+\t(dwarf2out_init): Initialize the vars.  Output defn for text_label.\n+\t(dwarf2out_finish): Output defns for the other 3 vars.\n+\t(dw_val_node): Rename val_section to val_section_label, as it's\n+\tnow a label, not a section.\n+\t(add_AT_section_offset): Arg is now a label, not a section.\n+\t(print_die): In label contexts, output section label, not section.\n+\t(output_die, output_compilation_unit_header): Likewise.\n+\t(output_{pubnames,aranges,line_info}, dwarf2out_finish): Likewise.\n+\n+\t* fixinc.wrap: Renamed from fixinc.math.  Put wrapper around\n+\tcurses.h if it contains `typedef char bool;'.\n+\n+\t* configure.in (arm-*-netbsd*): Rename fixinc.math to fixinc.wrap.\n+\t(i[34567]86-*-freebsdelf*, i[34567]86-*-freebsd*): Likewise.\n+\t(i[34567]86-*-netbsd*, i[34567]86-*-solaris2*): Likewise.\n+\t(m68k-*-netbsd*, mips-dec-netbsd*, ns32k-pc532-netbsd*): Likewise.\n+\t(powerpcle-*-solaris2*, sparc-*-netbsd*, sparc-*-solaris2*): Likewise.\n+\t(vax-*-netbsd*): Likewie.\n+\n+Wed May  6 06:44:28 1998  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n+\n+\t* combine.c (simplify_rtx, case TRUNCATE): Reflect that it sign-extends\n+\tinstead of zero-extending.\n+\n+Sat May  2 20:39:22 1998  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n+\n+\t* fold-const.c (fold): When commutting COND_EXPR and binary operation,\n+\tavoid quadratic behavior if have nested COND_EXPRs.\n+\n+Tue Apr 28 17:30:05 1998  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n+\n+\t* mips.h (HOST_WIDE_INT): Define if not already.\n+\t(compute_frame_size, mips_debugger_offset): Return HOST_WIDE_INT.\n+\t(DEBUGGER_{AUTO,ARG}_OFFSET): Cast second arg to HOST_WIDE_INT.\n+\t* mips.c (mips_debugger_offset): Now returns HOST_WIDE_INT.\n+\tLikewise for internal variable frame_size.\n+\n+\t* final.c (alter_subreg): Make new SUBREG if reload replacement\n+\tscheduled inside it.\n+\n+\t* dwarf2out.c (add_bound_info, case SAVE_EXPR): Pass \n+\tSAVE_EXPR_RTL address through fix_lexical_addr.\n+\n+Mon Apr 27 18:57:18 1998  Jim Wilson  <wilson@cygnus.com>\n+\n+\t* mips/sni-svr4.h (CPP_PREDEFINES): Add -Dsinix and -DSNI.\n+\n+Mon Apr 20 14:48:29 1998  Michael Meissner  <meissner@cygnus.com>\n+\n+\t* rs6000.md (mov{sf,df} define_splits): When splitting move of\n+\tconstant to int reg, don't split  insns that do simple AND and OR\n+\toperations; just split each word and let normal movsi define split\n+\thandle it further.\n+\n+Sun Apr 19 20:21:19 1998  Michael P. Hayes  <michaelh@ongaonga.chch.cri.nz>\n+\n+\t* real.h (C4X_FLOAT_FORMAT): New macro.\n+\t* real.c (c4xtoe, etoc4x, toc4x): New functions.\n+\n+Sun Apr 19 20:17:32 1998  Niklas Hallqvist  <niklas@petra.appli.se>\n+\n+\t* m68k.c (notice_update_cc): Use modified_in_p to check for update.\n+\n+Sun Apr 19 18:48:07 1998  K. Richard Pixley  <rich@kyoto.noir.com>\n+\n+\t* fixincludes: Discard empty C++ comments.\n+\tSpecial case more files with C++ comments nested in C comments.\n+\n+Sun Apr 19 18:30:11 1998  Andreas Schwab  <schwab@issan.informatik.uni-dortmund.de>\n+\n+\t* m68k.md ({add,sub}di3): Optimize for constant operand.\n+\n+Sun Apr 19 18:27:11 1998  Alan Modra <alan@spri.levels.unisa.edu.au>\n+\n+\t* i386.c (output_387_binary_op): Swap operands when popping if result\n+\tis st(0).\n+\n+Sun Apr 19 17:58:01 1998  Peter Jeremy  <peter.jeremy@alcatel.com.au>\n+\n+\t* expr.c (do_jump_by_parts_equality_rtx): Now public.\n+\t* expmed.c (do_cmp_and_jump): New function.\n+\t(expand_divmod): Use do_cmp_and_jmp instead of emit_cmp_insn and\n+\temit_jump_insn.\n+\n+Sun Apr 19 07:48:37 1998  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n+\n+\t* c-typeck.c (build_c_cast): Check underlying type when seeing\n+\tif discarding const or volatile.\n+\n+\t* c-decl.c (pushdecl): Avoid duplicate warning about implicit redecl.\n+\n+\t* configure.in (stab.h): Check for it.\n+\t(i386-*-vsta): Include xm-i386.h too.\n+\t* dbxout.c (stab.h): Include based on autoconf results.\n+\t* vax/xm-vms.h (NO_STAB_H): Deleted.\n+\t* alpha/xm-vms.h, xm-mips.h, i386/xm-mingw32.h, i386/go32.h: Likewise.\n+\t* i386/xm-cygwin32.h: Likewise.\n+\t* i386/xm-vsta.h (NO_STAB_H): Likewise.\n+\t(i386/xm-i386.h): No longer include.\n+\n+\t* mips.c: Cleanups and reformatting throughout.\n+\t({expand,output}_block_move): Use HOST_WIDE_INT for sizes.\n+\t(mips_debugger_offset, compute_frame_size): Likewise.\n+\t(save_restore_insns, mips_expand_{pro,epi}logue): Likewise.\n+\t(siginfo): Deleted.\n+\t(override_options): Don't set up to call it; don't call setvbuf.\n+\n+Mon Apr 13 06:40:17 1998  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n+\n+\t* configure.in (sparc-*-vxsim*): Include xm-siglist.h and\n+\tdefine USG and POSIX.\n+\n+Sun Apr 12 21:59:27 1998  Jeffrey A. Law  <law@cygnus.com>\n+\n+\t* calls.c (expand_call): Fix typo in STRICT_ARGUMENT_NAMING.\n+\n+Sun Apr 12 21:42:23 1998  D. Karthikeyan  <karthik@cdotd.ernet.in>\n+\n+\t* m68k.h (TARGET_SWITCHES): Add missing comma.\n+\n+Sun Apr 12 21:33:33 1998  Eric Valette  <valette@crf.canon.fr>\n+\n+\t* configure.in (i[34567]86-*-rtemself*): New configuration.\n+\t* i386/rtemself.h: New file.\n+\n+Sun Apr 12 21:08:28 1998  Jim Wilson  <wilson@cygnus.com>\n+\n+\t* loop.c (loop_optimize): Reset max_uid_for_loop after\n+\tfind_and_verify_loops call.\n+\t(strength_reduce): In auto_inc_opt code, verify v->insn has valid\n+\tINSN_LUID.\n+\n+Sun Apr 12 20:54:59 1998  Richard Earnshaw (rearnsha@arm.com)\n+\n+\t* configure.in (sparc-*-solaris2*): Add xm-siglist.h to xm_file.\n+\tAdd USG and POSIX to xm_defines.\n+\n+Sun Apr 12 20:47:37 1998  Pat Rankin  <rankin@eql.caltech.edu>\n+\n+\t* cccp.c (eprint_string): New function.\n+\t(do_elif, do_else, verror): Use it instead of fwrite(,,,stderr).\n+\t(error_from_errno, vwarning): Likewise.\n+\t({verror,vwarning,pedwarn}_with_line): Likewise.\n+\t(pedwarn_with_file_and_line, print_containing_files): Likewise.\n+\n+Sun Apr 12 20:40:44 1998  Richard Henderson  <rth@dot.cygnus.com>\n+\n+\t* configure.in (alpha*-*-linux-gnu*): Add alpha/t-crtbe.\n+\tAdd crt{begin,end}.o in extra_parts and delete crt{begin,end}S.o.o\n+\t* alpha/t-crtbe, alpha/crt{begin,end}.asm: New files.\n+\t\n+\t* alpha.h (PRINT_OPERAND_PUNCT_VALID_P): Accept '(' for s/sv/svi.\n+\t* alpha.c (print_operand): Handle it.\n+\t* alpha.md (fix_trunc[ds]fdi2): Use it.  Add earlyclobber pattern\n+\tfor ALPHA_TP_INSN.\n+\n+Sun Apr 12 13:09:46 1998  Scott Christley  <scottc@net-community.com>\n+\n+\t* objc/encoding.c (objc_sizeof_type, _C_VOID): New case.\n+\n+Sun Apr 12 13:04:55 1998  Nikolay Yatsenko  (nikolay@osf.org)\n+\n+\t* configure.in (i[34567]86-*-osf1*): New entry.\n+\t* i386/osf1-c[in].asm: New files for OSF/1.\n+\t* i386/osf1elf{,gdb}.h, i386/[xt]-osf1elf, i386/xm-osf1elf.h: Likewise.\n+\n+Sun Apr 12 10:03:51 1998  Noel Cragg  <noel@red-bean.com>\n+\n+\t* fixincludes: Remove specification of parameters when renaming\n+\tfunctions in Alpha DEC Unix include files.\n+\n+Sun Apr 12 07:33:46 1998  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n+\n+\t* mips.c (large_int): Use HOST_WIDE_INT, not int.\n+\t(print_operand): Use HOST_WIDE_INT_PRINT_* macros.\n+\n+\t* toplev.c (main): Sort order of handling of -d letters.\n+\tUse `F' instead of `D' for addressof_dump.\n+\n+\t* libgcc2.c (_eh_compat): Deleted.\n+\t* Makefile.in (LIB2FUNCS): Delete _eh_compat.\n+\n+\t* configure.in (alpha*-*-linux-gnu*): Don't include alpha/xm-linux.h.\n+\n+\t* c-common.c (check_format_info): Properly test for nested pointers.\n+\n+\t* pa.md (casesi0): Add missing mode for operand 0.\n+\n+\t* function.c (purge_addressof_1, case MEM): If BLKmode, put ADDRESSOF\n+\tinto stack.\n+\n+\t* c-parse.in (label): Give warning if pedantic and label not integral.\n+\n+\t* c-decl.c (grokdeclarator): Don't warn about return type if in\n+\tsystem header.\n+\n+\t* reload.c (reload_nongroup): New variable.\n+\t(push{_secondary,}_reload): Initialize it.\n+\t(find_reloads): Compute it.\n+\t(debug_reload): Print it.\n+\t* reload.h (reload_nongroup): Declare.\n+\t* reload1.c (reload): Use reload_nongroup instead of local computation.\n+\tCheck caller_save_spill_class against any nongroup reloads.\n+\t(reloads_conflict): No longer static.\n+\n+Sun Apr 12 05:52:18 1998  John David Anglin  <dave@hiauly1.hia.nrc.ca>\n+\n+\t* vax.md (call patterns): Operand 1 is always a CONST_INT.\n+\n+Sat Apr 11 16:01:11 1998  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n+\n+\t* convert.c (convert_to_{pointer,integer,real,complex}): Use switch.\n+\tAdd missing integer-like types.\n+\tSimplify return of zero in error case.\n+\t(convert_to_pointer): Remove dubious abort.\n+\t(convert_to_integer, case POINTER_TYPE): Make recursive call.\n+\t(convert_to_integer, case COND_EXPR): Always convert arms.\n+\t* tree.c (type_precision): Deleted.\n+\n+\t* cccp.c (do_warning): Give pedantic warning if -pedantic and not\n+\tin system file.\n+\t* cpplib.c (do_warning): Likewise.\n+\n+\t* function.c (target_temp_slot_level): Define here.\n+\t(push_temp_slots_for_target, {get,set}_target_temp_slot_level): New.\n+\t* stmt.c (target_temp_slot_level): Don't define here.\n+\t* expr.h (temp_slot_level): New declaration.\n+\n+Fri Apr 10 16:35:48 1998  Paul Eggert  <eggert@twinsun.com>\n+\n+\t* c-common.c (decl_attributes): Support strftime format checking.\n+\t(record_function_format, {check,init_function}_format_info): Likewise.\n+\t(enum format_type): New type.\n+\t(record_function_format): Now static; takes value of type\n+\tenum format_type instead of int.\n+\t(time_char_table): New constant.\n+\t(struct function_format_info): format_type member renamed from is_scan.\n+\t(check_format_info): Use `warning' rather than sprintf followed by\n+\t`warning', to avoid mishandling `%' in warnings.\n+\tChange a `pedwarn' to `warning'.\n+\t* c-tree.h (record_function_format): Remove decl.\n+\n+Thu Apr  2 17:34:27 1998  Manfred Hollstein  <manfred@s-direktnet.de>\n+\n+\t* regclass.c (memory_move_secondary_cost): Protect uses of\n+\tSECONDARY_{INPUT,OUTPUT}_RELOAD_CLASS with #ifdef tests.\n+\n+Thu Apr  2 07:06:57 1998  Andreas Schwab  <schwab@issan.informatik.uni-dortmund.de>\n+\n+\t* m68k.c (standard_68881_constant_p): Don't use fmovecr on 68060.\n+\n+Thu Apr  2 06:19:25 1998  Ken Raeburn  <raeburn@cygnus.com>\n+\n+\t* Makefile.in (version.c): Put \"cvs log\" output in build directory.\n+\n+\t* reload.h (MEMORY_MOVE_COST): Define here if not already defined.\n+\t(memory_move_secondary_cost): Declare.\n+\t* regclass.c (MEMORY_MOVE_COST): Don't define default here.\n+\t(memory_move_secondary_cost) [HAVE_SECONDARY_RELOADS]: New function.\n+\t(regclass, record_reg_classes, copy_cost, record_address_regs):\n+\tPass register class and direction of move to MEMORY_MOVE_COST.\n+\t(top_of_stack) [HAVE_SECONDARY_RELOADS]: New static array.\n+\t(init_regs) [HAVE_SECONDARY_RELOADS]: Initialize it.\n+\t* reload1.c (MEMORY_MOVE_COST): Don't define default here.\n+\t(emit_reload_insns, reload_cse_simplify_set): Pass register class\n+\tand direction of move to MEMORY_MOVE_COST.\n+\t* 1750a.h (MEMORY_MOVE_COST): Add extra ignored arguments.\n+\t* a29k.h, alpha.h, arc.h, arm.h, dsp16xx.h, i386.h, m32r.h: Likewise.\n+\t* m88k.h, rs6000.h: Likewise.\n+\t* mips.h (MEMORY_MOVE_COST): Likewise.\n+\tAdd memory_move_secondary_cost result to cpu-specific cost.\n+\n+Mon Mar 30 13:56:30 1998  Jim Wilson  <wilson@cygnus.com>\n+\n+\t* mips/ultrix.h (SUBTARGET_CPP_SPEC): Define.\n+\n+Wed Mar 25 16:09:01 1998  Michael Meissner  <meissner@cygnus.com>\n+\n+\t* rs6000.h (FUNCTION_ARG_PADDING): Cast result to be enum direction.\n+\t(function_arg_padding): Declare.\n+\n+\t* rs6000.c: Include stdlib.h if we have it.\n+\t(function_arg_padding): Change return type to int, cast enum's to int.\n+\n+\t(From Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>)\n+\t* rs6000.c (rs6000_override_options): Change type of `i', `j' and\n+\t`ptt_size' from int to size_t.\n+\t(rs6000_file_start): Likewise for `i'.\n+\t(rs6000_replace_regno): Add default case in enumeration switch.\n+\t(output_epilog): Remove unused variable `i'.\n+\t(rs6000_longcall_ref): Remove unused variables `len', `p', `reg[12]'.\n+ \n+\t* rs6000.h (ADDITIONAL_REGISTER_NAMES): Add missing braces around\n+\tinitializer.\n+\t(get_issue_rate, non_logical_cint_operand): Add prototype.\n+\t(rs6000_output_load_toc_table): Likewise.\n+ \n+\t* rs6000.md (udivmodsi4): Add explicit braces to avoid ambiguous\n+\t`else'.\n+ \n+Wed Mar 25 02:39:01 1998  Paul Eggert  <eggert@twinsun.com>\n+\n+\t* configure.in (i[34567]86-*-solaris2*, powerpcle-*-solaris2*,\n+\tsparc-*-solaris2*): Use fixinc.svr4 if Solaris 2.0 through 2.4.\n+\n+Mon Mar 23 07:27:19 1998  Philippe De Muyter  <phdm@macqel.be>\n+\n+\t* m68k.md (ashldi_const): Allow shift count in range ]32,63].\n+\t(ashldi3): Allow constant shift count in range ]32,63].\n+\t(ashrdi_const, ashrid3, lshrdi_const, lshrdi3): Likewise.\n+\n+\t* m68k.md (zero_extend[qh]idi2, iordi_zext): New patterns.\n+\t(zero_extendsidi2): Avoid useless copy.\n+\t(iorsi_zexthi_ashl16): Avoid \"0\" constraint for operand 2.\n+\t(iorsi_zext): New name for old unnamed pattern; indentation fixes.\n+\n+Mon Mar 23 07:12:05 1998  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n+\n+\t* final.c (only_leaf_regs_used): If pic_offset_table_rtx used,\n+\tmake sure it is a permitted register.\n+\n+Sun Mar 22 06:57:04 1998  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n+\n+\t* expmed.c (extract_bit_field): Don't confuse SUBREG_WORD with\n+\tendian adjustment in SUBREG case.\n+\tDon't abort if can't make SUBREG needed for extv/extzv.\n+\n+Sat Mar 21 08:02:17 1998  Richard Gorton  <gorton@amt.tay1.dec.com>\n+\n+        * alpha.md (zero_extendqi[hsd]i2): Use \"and\", not \"zapnot\".\n+\n+Sat Mar 21 07:47:04 1998  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n+\n+\t* unroll.c (verify_addresses): Use validate_replace_rtx.\n+\t(find_splittable_givs): If invalid address, show nothing same_insn.\n+\n+Fri Mar 20 10:24:12 1998  Philippe De Muyter  <phdm@macqel.be>\n+\n+\t* fold-const.c (fold, case CONVERT_EXPR): Replace sign-extension of\n+\ta zero-extended value by a single zero-extension.\n+\n+Thu Mar 19 14:59:32 1998  Andrew Pochinsky  <avp@ctp.mit.edu>\n+\n+\t* sparc.h (ASM_OUTPUT_LOOP_ALIGN): Fix error in last change.\n+\n+Thu Mar 19 14:48:35 1998  Michael Meissner  <meissner@cygnus.com>\n+\n+\t* gcc.c (default_arg): Don't wander off the end of allocated memory.\n+\n+\t* rs6000/sysv4.h (RELATIVE_PREFIX_NOT_LINKDIR): Undef for System V\n+\tand EABI.\n+\n+Thu Mar 19 06:17:59 1998  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n+\n+\t* Makefile.in (toplev.o): Depend on Makefile.\n+\n+Wed Mar 18 17:40:09 1998  Michael P. Hayes  <michaelh@ongaonga.chch.cri.nz>\n+\n+\t* expr.c (convert_move): Add [QH]Imode/P[QH]Imode conversions.\n+\t* machmode.def (PQImode, PHImode): New modes.\n+\n+Wed Mar 18 17:11:18 1998  Andreas Schwab  <schwab@issan.informatik.uni-dortmund.de>\n+\n+\t* m68k.md (movsf+1): Optimize moving a CONST_DOUBLE zero.\n+\n+Wed Mar 18 17:07:54 1998  Ken Raeburn  <raeburn@cygnus.com>\n+\n+\t* regclass.c (init_reg_sets): Delete init of reg-move cost tables.\n+\t(init_reg_sets_1): Put it here.\n+\n+Wed Mar 18 16:43:11 1998  Jim Wilson  <wilson@cygnus.com>\n+\n+\t* i960.md (tablejump): Handle flag_pic.\n+\n+\t* profile.c (branch_prob): If see computed goto, call fatal.\n+\n+\t* calls.c (expand_call): Fix typos in n_named_args computation.\n+\n+Wed Mar 18 05:54:25 1998  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n+\n+\t* fold-const.c (operand_equal_for_comparison_p): See if equal\n+\twhen nop conversions are removed.\n+\n+\t* expr.c (expand_expr, case COND_EXPR): If have conditional move,\n+\tdon't use ORIGINAL_TARGET unless REG.\n+\n+\t* function.c (fixup_var_refs_insns): Also delete insn storing pseudo\n+\tback into arg list.\n+\n+\t* combine.c (gen_binary): Don't make AND that does nothing.\n+\t(simplify_comparison, case AND): Commute AND and SUBREG.\n+\t* i386.h (CONST_CONSTS, case CONST_INT): One-byte integers are cost 0.\n+\n+Mon Mar 16 15:57:17 1998  Geoffrey Keating  <geoffk@ozemail.com.au>\n+\n+\t* rs6000.c (small_data_operand): Ensure any address referenced\n+\trelative to small data area is inside SDA.\n+\n+Sun Mar 15 16:01:19 1998  Andrew Pochinsky  <avp@ctp.mit.edu>\n+\n+\t* sparc.h (ASM_OUTPUT_LOOP_ALIGN): Write nop's.\n+\n+Sun Mar 15 15:53:39 1998  Philippe De Muyter  <phdm@macqel.be>\n+\n+\t* libgcc2.c (exit): Don't call __bb_exit_func if HAVE_ATEXIT.\n+\n+Sun Mar 15 15:44:41 1998  Paul Eggert  <eggert@twinsun.com>\n+\n+\t* cccp.c: Fix bugs relating to NUL in input file name,\n+\te.g. with `#line 2 \"x\\0y\"'.\n+\t(PRINTF_PROTO_4): New macro.\n+\t(struct {file_buf,definition,if_stack}): New member nominal_fname_len.\n+\t(main, expand_to_temp_buffer): Store length of input file names.\n+\t(finclude, create_definition, do_line, conditional_skip): Likewise.\n+\t(skip_if_group, macroexpand): Likewise.\n+\t(make_{definition,undef,assertion}): Likewise.\n+\t(special_symbol, do_include): Use stored length of input file names.\n+\t(do_define, do_elif, do_else, output_line_directive, verror): Likewise.\n+\t(error_from_errno, vwarning, verror_with_line): Likewise.\n+\t(vwarning_with_line, pedwarn_with_file_and_line): Likewise.\n+\t(print_containing_files): Likewise.\n+\t(do_line): Fix off-by-1 problem: 1 too many bytes were being allocated.\n+\t(quote_string, pedwarn_with_file_and_line): New arg specifies length.\n+\tAll callers changed.\n+\n+Sun Mar 15 15:38:16 1998  Andreas Schwab  <schwab@issan.informatik.uni-dortmund.de>\n+\n+\t* c-typeck.c: Collect pending initializers in AVL tree instead of list.\n+\t(add_pending_init, pending_init_member): New functions.\n+\t(output_init_element): Use them.\n+\t(output_pending_init_elements): Rewritten to exploit AVL order.\n+\n+Sun Mar 15 05:10:49 1998  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n+\n+\t* gnu.h (GNU_CPP_PREDEFINES): Deleted; not valid in traditional C.\n+\t* {i386,mips}/gnu.h (CPP_PREDEFINES): Don't call GNU_CPP_PREDEFINES.\n+\n+\t* flow.c (insn_dead_p): A CLOBBER of a dead pseudo is dead.\n+\n+\t* alpha.h (REG_ALLOC_ORDER): Put $f1 after other nonsaved.\n+\n+\t* sparc.c (sparc_type_code): Fix error in previous change.\n+\n+Sat Mar 14 05:45:21 1998  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n+\n+\t* i386/xm-aix.h, i386/xm-osf.h (i386/xm-i386.h): Don't include.\n+\t(USG): Don't define.\n+\t* i386/xm-isc.h (i386/xm-sysv3.h): Don't include.\n+\t* i386/xm-sco.h (i386/xm-sysv3.h): Likewise.\n+\t(BROKEN_LDEXP, SMALL_ARG_MAX, NO_SYS_SIGLIST): Don't define.\n+\t* m68k/xm-3b1.h (m68k/xm-m68k.h): Don't include.\n+\t(USG): Don't define.\n+\t* m68k/xm-atari.h (m68k/xm-m68kv.h): Don't include.\n+\t(HAVE_VPRINTF, FULL_PROTOTYPES): Don't define.\n+\t* m68k/xm-crds.h (m68k/xm-m68k.h): Don't include.\n+\t(USE_C_ALLOCA, unos, USG): Don't define.\n+\t* m68k/xm-mot3300.h (m68k/xm-m68k.h): Don't include.\n+\t(USE_C_ALLOCA, NO_SYS_SIGLIST): Don't define.\n+\t* m68k/xm-plexus.h (m68k/xm-m68k.h): Don't include.\n+\t(USE_C_ALLOCA, USG): Don't define.\n+\t* m88k/xm-sysv3.h (m88k/xm-m88k.h): Don't include.\n+\t* m68k/xm-next.h (m68k/xm-m68k.h): Don't include.\n+\t* ns32k/xm-pc532-min.h (ns32k/xm-ns32k.h): Don't include.\n+\t(USG): Don't define.\n+\t* rs6000/xm-mach.h: Don't include xm-rs6000.h.\n+\t* rs6000/xm-cygwin32.h (rs6000/xm-rs6000.h): Don't include.\n+\t(NO_STAB_H): Don't define.\n+\t* sparc/xm-linux.h (xm-linux.h): Don't include.\n+\t* sparc/xm-sol2.h (sparc/xm-sysv4.h): Don't include.\n+\t* a29k/xm-unix.h, alpha/xm-linux.h, arm/xm-linux.h: Deleted.\n+\t* arm/xm-netbsd.h, i386/xm-bsd386.h, i386/xm-gnu.h: Deleted.\n+\t* i386/xm-linux.h, i386/xm-sun.h, i386/xm-sysv3.h: Deleted.\n+\t* i386/xm-winnt.h,  m68k/xm-altos3068.h, m68k/xm-amix.h: Deleted.\n+\t* m68k/xm-amix.h, m68k/xm-hp320.h, m68k/xm-linux.h: Deleted.\n+\t* m68k/xm-m68kv.h, mips/xm-iris5.h, ns32k/xm-genix.h: Deleted.\n+\t* sparc/xm-pbd.h, vax/xm-vaxv.h, xm-svr3.h, xm-linux.h: Deleted.\n+\t* configure.in: Reflect above changes.\n+\n+\t* xm-siglist.h, xm-alloca.h: New files.\n+\t* i386/xm-sysv4.h (i386/xm-i386.h, xm-svr4.h): Don't include.\n+\t(USE_C_ALLOCA, SMALL_ARG_MAX): Don't define.\n+\t* i386/xm-sco5.h (i386/xm-sysv3.h): Don't include.\n+\t(SYS_SIGLIST_DECLARED, USE_C_ALLOCA): Don't define.\n+\t* rs6000/xm-sysv4.h, sparc/xm-sysv4.h: Don't include xm-svr4.h.\n+\t* xm-svr4.h, i386/xm-dgux.h, mips/xm-news.h, mips/xm-sysv4.h: Deleted.\n+\t* configure.in: Reflect above changes.\n+\n+\t* configure.in ({,host_,build_}xm_defines): New variables.\n+\tSet to USG instead of including xm-usg.h.\n+\tWrite #define lines in config.h files from xm_defines vars.\n+\t* xm-usg.h: Deleted.\n+\n+Fri Mar 13 07:10:59 1998  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n+\n+\t* calls.c (expand_call): Fix typo in previous change.\n+\n+\t* sparc.c (sparc_type_code): Avoid infinite loop when have\n+\tpointer to array of same pointer.\n+\t(sparc_type_code, case REAL_TYPE): Process subtypes here too.\n+\n+\t* mips/bsd-4.h, mips/iris3.h, mips/news{4,5}.h: Don't include mips.h.\n+\t* mips/news5.h, mips/osfrose.h, mips/svr{3,4}-4.h: Likewise.\n+\t* mips/ultrix.h: Likewise.\n+\t* mips/cross64.h: Don't include iris6.h.\n+\t* mips/ecoff.h: Don't include mips.h or gofast.h.\n+\t* mips/elforion.h: Don't include elf64.h.\n+\t* mips/iris4.h: Don't include iris3.h.\n+\t* mips/iris4loser.h: Don't include iris4.h.\n+\t* mips/iris5gas.h: Don't include iris5.h.\n+\t* mips/elflorion.h, mips/nws3250v4.h, mips/xm-iris{3,4}.h: Deleted.\n+\t* mips/xm-nws3250v4.h, mips/xm-sysv.h: Deleted.\n+\t* mips/rtems64.h: Don't include elflorion.h.\n+\t* mips/sni-gas.h: Don't include sni-svr4.h.\n+\t* mips/svr4-t.h: Don't include svr4-5.h.\n+\t* mips/dec-osf1.h: Also include mips.h.\n+\t* mips/ecoffl.h, mips/elf.h: Also include mips.h and gofast.h.\n+\t* mips/iris5.h: Also include iris3.h and mips.h.\n+\t* xm-usg.h: New file.\n+\t* mips/xm-iris5.h: Don't include xm-mips.h; don't define USG.\n+\t* mips/xm-news.h, mips/xm-sysv4.h: Don't include xm-sysv.h.\n+\t* configure.in: Reflect above changes.\n+\n+Thu Mar 12 07:18:48 1998  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n+\n+\t* expr.h (STRICT_ARGUMENT_NAMING): Provide default value of 0.\n+\t* calls.c (expand_call): Use value of STRICT_ARGUMENT_NAMING.\n+\t* function.c (assign_parm): Likewise.\n+\t* mips/abi64.h (STRICT_ARGUMENT_NAMING): Return 0 for ABI_32.\n+\t* sparc.h (STRICT_ARGUMENT_NAMING): Only nonzero for V9.\n+\n+\t* calls.c (expand_call, expand_library_call{,_value}, store_one_arg):\n+\tRework handling of REG_PARM_STACK_SPACE to treat return value of\n+\tzero as if macro not defined; add new arg to emit_push_insn.\n+\t* expr.c (emit_push_insn): New arg, REG_PARM_STACK_SPACE.\n+\t* expr.h (emit_push_insn): Likewise.\n+\t* mips/abi64.h (REG_PARM_STACK_SPACE): Define.\n+\n+Wed Mar 11 06:58:13 1998  Andreas Schwab  <schwab@issan.informatik.uni-dortmund.de>\n+\n+\t* m68k.h (CONST_OK_FOR_LETTER_P, case 'M'): Correct range check.\n+\n+Wed Mar 11 06:15:52 1998  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n+\n+\t* expr.c (emit_push_insn): Use loop to find movstr patterns\n+\tinstead of explicit tests.\n+\n+\t* Makefile.in (extraclean): Don't delete install1.texi.\n+\n+Tue Mar 10 14:27:51 1998  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n+\n+\t* combine.c (make_field_assignment): Don't get confused if OTHER\n+\thas VOIDmode and don't do anything if DEST is wider than a host word.\n+\n+\t* vax.c (check_float_value): Cast bcopy args to char *.\n+\n+Tue Mar 10 13:56:12 1998  Jim Wilson  <wilson@cygnus.com>\n+\n+\t* mips/abi64.h (LONG_MAX_SPEC): Check MIPS_ABI_DEFAULT and\n+\tTARGET_DEFAULT and define __LONG_MAX__ appropriately.\n+\tAdd support for -mabi=X, -mlong64, and -mgp{32,64} options.\n+\t* mips.c (mips_abi): Change type to int.\n+\t* mips.h (enum mips_abi_type): Delete.\n+\t(ABI_32, ABI_N32, ABI_64, ABI_EABI): Define as constants.\n+\t(mips_abi): Change type to int.\n+\n+Mon Mar  2 08:06:58 1998  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n+\n+\t* Version 2.8.1 released.\n+\n+\t* Makefile.in (mostlyclean): Remove duplicate deletion of temp\n+ \tfiles.  Delete more stamp files and [df]p-bit.c\n+\t(clean): Don't delete stamp files here.\n+\t(VERSION_DEP): New variable.\n+\t(distdir-finish): Pass a value of null for it.\n+\t(version.c): Use it.\n+\tAvoid broken pipe with cvs log.\n+\n+\t* objc/Make-lang.in (objc/runtime-info.h): Rename emptyfile to\n+ \ttmp-runtime and delete at end.\n+\n+Sun Mar  1 05:50:25 1998  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n+\n+\t* tree.c (build_reference_type): Handle obstacks like\n+ \tbuild_pointer_type.\n+\n+\t* Makefile.in (tmp-gcc.xtar): Renamed from gcc.xtar.\n+\t(gcc.xtar.gz): Deleted; merged with `dist'.\n+\t(diff): Create gcc-$(oldversion)-$(version).diff.\n+\t(distdir): Depend on distdir-cvs.\n+\t(distdir-cvs): New rule.\n+\t(distdir-start): Depend on version.c and TAGS.\n+\t(TAGS): Use tmp-tags instead of temp.\n+\t(dist): Create gcc-$(version).tar.gz.\n+\n+\t* varasm.c (compare_constant_1): Fix typo in previous change.\n+\n+\t* objc/Make-lang.in (objc-distdir): Properly rebuild objc-parse.c.\n+\n+Sat Feb 28 16:58:08 1998  Tristan Gingold  <gingold@rossini.enst.fr>\n+\n+\t* stmt.c (expand_decl): If -fcheck-memory-usage, put vars in memory.\n+\t* expr.c (get_memory_usage_from_modifier): Convert\n+\tEXPAND_{CONST_ADDRESS, INITIALIZER} to MEMORY_USE_DONT.\n+  \n+Sat Feb 28 08:13:43 1998  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n+\n+\t* i860/fx2800.h (DATA_ALIGNMENT): Use POINTER_TYPE_P.\n+\t* m68k/a-ux.h (FUNCTION_VALUE): Likewise.\n+\t* expr.c (get_pointer_alignment, compare, do_store_flag): Likewise.\n+ \t(expand_builtin): Likewise.\n+\t* fold-const.c (force_fit_type, fold_convert, fold): Likewise.\n+\t* function.c (assign_parms): Likewise.\n+\t* integrate.c (expand_inline_function): Likewise.\n+\t* sdbout.c (sdbout_field_types): Likewise.\n+\t* tree.c (integer_pow2p, tree_log2, valid_machine_attribute): Likewise.\n+\t* stmt.c (expand_decl): Likewise.\n+\t({,bc_}expand_decl_init): Also test for REFERENCE_TYPE.\n+\n+\t* configure.in (version_dep): New variable; if srcdir is CVS working\n+\tdirectory, set to ChangeLog.\n+\t(version): Supply default if no version.c.\n+\t* Makefile.in (version.c): New rule.\n+\n+\t* gcc.c (snapshot_warning): New function.\n+\t(main): Call it for snapshots.\n+\n+\t* dwarf2out.c (expand_builtin_dwarf_reg_size): If reg_raw_mode\n+\tnot valid for reg, use last size.  Also refine range assertion.\n+\n+Sat Feb 28 05:04:47 1998  Michael P. Hayes  <michaelh@ongaonga.chch.cri.nz>\n+\n+\t* enquire.c (cprop): Don't perform exhaustive search for char_min\n+\tand char_max when bits_per_byte > 16.\n+\n+Thu Feb 26 15:12:03 1998  Christopher Taylor <cit@ckshq.com>\n+\n+\t* fixincludes: Avoid using '0-~' in egrep.\n+\n+Thu Feb 26 08:04:05 1998  Tristan Gingold  <gingold@messiaen.enst.fr>\n+\n+\t* function.c (assign_parms): Call 'chkr_set_right' when DECL_RTL\n+\tis stack_parm.\n+\t* expr.c (get_memory_usage_from_modifier): Convert\n+\tEXPAND_{SUM, CONST_ADDRESS, INITIALIZER} to MEMORY_USE_RO.\n+\n+Thu Feb 26 07:33:53 1998  Paul Eggert  <eggert@twinsun.com>\n+\n+\t* c-lex.c (yylex): Don't munge errno before using it.\n+\t* cccp.c (error_from_errno, perror_with_name): Likewise.\n+\t* cpplib.c (cpp_error_from_errno): Likewise.\n+\t* gcc.c (pfatal_pexecute): Likewise.\n+\t* protoize.c (safe_write, find_file, process_aux_info_file): Likewise.\n+\t(rename_c_file, edit_file): Likewise.\n+\n+\t* c-lex.c (yylex): Remove unused variable exceeds_double.\n+\n+Thu Feb 26 07:05:14 1998  Michael P. Hayes  <michaelh@ongaonga.chch.cri.nz>\n+\n+\t* reorg.c (fill_slots_from_thread): Don't steal delay list from target\n+\tif condition code of jump conflicts with opposite_needed.\n+\n+Thu Feb 26 06:45:23 1998  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n+\n+\t* Makefile.in (distdir-start): Don't copy CVS subdirectory of config.\n+\n+\t* varasm.c ({compare,record}_constant_1, case CONSTRUCTOR):\n+\tHandle the case when we have TREE_PURPOSE values.\n+\n+Thu Feb 26 05:59:01 1998  Philippe De Muyter  <phdm@macqel.be>\n+\n+\t* fixincludes (sys/limits.h): Fix a nested comment problem with\n+\tHUGE_VAL definition on sysV68 R3V7.1.\n+\n+Wed Feb 25 21:09:38 1998  Philippe De Muyter  <phdm@macqel.be>\n+\n+\t* toplev.c (TICKS_PER_SECOND): Renamed from CLOCKS_PER_SECOND.\n+\n+Wed Feb 25 20:50:08 1998  Michael P. Hayes  <michaelh@ongaonga.chch.cri.nz>\n+\n+\t* reorg.c (fill_slots_from_thread): Mark resources referenced in\n+\topposite_needed thread.  Return delay_list even when cannot get\n+\tany more delay insns from end of subroutine.\n+\n+Wed Feb 25 19:50:01 1998  Mikael Pettersson <Mikael.Pettersson@sophia.inria.fr>\n+\n+\t* gcc.c (lookup_compiler): Remove redundant test.\n+\n+Wed Feb 25 07:24:22 1998  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n+\n+\t* vax.md (call insns): Second operand to CALL rtl is SImode.\n+\n+\t* configure.in (i[34567]86-*-mingw32): Support msv and crt suffix.\n+\t* i386/crtdll.h: New file.\n+\n+\t* sparc.c (pic_setup_code): If -O0, write USE of pic_offset_table_rtx.\n+\n+\t* expr.c (safe_from_p): Add new arg, TOP_P; all callers changed.\n+\n+Sat Feb 21 07:02:39 1998  Jim Wilson  <wilson@cygnus.com>\n+\n+\t* mips/iris5.h (DWARF2_UNWIND_INFO): Define to 0.\n+\t* mips/iris5gas.h (DWARF2_UNWIND_INFO): Define to 1.\n+\n+Fri Feb 20 08:27:46 1998  Paul Eggert  <eggert@twinsun.com>\n+\n+\t* sparc/sol2-sld.h: New file.\n+\t* configure.in (sparc-*-solaris2*): Use it when using system linker.\n+\t* toplev.c (main): Don't default to DWARF2_DEBUG with -ggdb \n+\tif LINKER_DOES_NOT_WORK_WITH_DWARF2 is defined.\n+\n+Fri Feb 20 08:21:49 1998  H.J. Lu  (hjl@gnu.org)\n+\n+\t* alpha/elf.h (STARTFILE_SPEC, ENDFILE_SPEC): Support shared library.\n+\t(LIB_SPEC, DEFAULT_VTABLE_THUNKS): Defined #ifndef USE_GNULIBC_1.\n+\t* sparc/linux.h (DEFAULT_VTABLE_THUNKS): Likewise.\n+\t(LIB_SPEC): Add -lc for -shared #ifndef USE_GNULIBC_1.\n+\t* linux.h (LIB_SPEC): Likewise.\n+\t* sparc/linux64.h (LIB_SPEC): Likewise; also updated for glibc 2.\n+\t(LIBGCC_SPEC): Removed.\n+\t(CPP_SUBTARGET_SPEC): Add %{pthread:-D_REENTRANT}.\n+\n+Fri Feb 20 05:22:12 1998  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n+\n+\t* Makefile.in (distdir-start): Add dependence on bi-parser.[ch].\n+\n+Thu Feb 19 18:07:11 1998  Jim Wilson  <wilson@cygnus.com>\n+\n+\t* m68k.h (TARGET_SWITCHES): For 68000, 68302, subtract MASK_68881.\n+\tFor 68303, 68332, cpu32, subtract MASK_68040_ONLY.\n+\n+Wed Feb 18 09:37:29 1998  Paul Eggert  <eggert@twinsun.com>\n+\n+\t* fixincludes (stdlib.h): Do not double-wrap the size_t typedef.\n+\n+Wed Feb 18 07:32:11 1998  Jim Wilson  <wilson@cygnus.com>\n+\n+\t* i960.c (emit_move_sequence): Handle unaligned stores to pseudos.\n+\t* i960.md (store_unaligned_[dt]i_reg): Handle register dest.\n+\t(store_unaligned_ti_reg): Likewise.\n+\n+\t* m68k.h (MACHINE_STATE_{SAVE,RESTORE} [MOTOROLA]): Add %# and %/;\n+\tadd : to make them into extended asms.\n+\n+Wed Feb 18 07:08:05 1998  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n+\n+\t* reg-stack.c (compare_for_stack_reg): Only handle FP conditional\n+\tmove as next insn specially.\n+\n+\t* reload.c (find_reloads): Always convert address reload for\n+\tnon-reloaded operand to RELOAD_FOR_OPERAND_ADDRESS.\n+\n+\t* emit-rtl.c (hard-reg-set.h): Include.\n+\t(get_lowpart_common): Don't make new REG for hard reg in a \n+\tclass that cannot change size.\n+\t* Makefile.in (emit-rtl.o): Depend on hard-reg-set.h.\n+\n+Sat Feb 14 09:59:00 1998  Richard Earnshaw (rearnsha@arm.com)\n+\n+\t* arm.md (movsfcc): Also validate operands[3] for hard float.\n+\t(movdfcc): Only accept fpu_add_operand for operands[3].8\n+\n+Sat Feb 14 09:32:34 1998  Jim Wilson  <wilson@cygnus.com>\n+\n+\t* dwarf2out.c (expand_builtin_dwarf_reg_size): New variable mode.\n+\tConvert CCmode to word_mode before calling GET_MODE_SIZE.\n+\n+Sat Feb 14 09:27:42 1998  David Edelsohn  <edelsohn@mhpcc.edu>\n+\n+\t* rs6000.h (MY_ISCOFF): Check for U803XTOCMAGIC.\n+\n+Sat Feb 14 08:29:43 1998  Arvind Sankar  <arvind@cse.iitb.ernet.in>\n+\n+\t* t-svr4 (TARGET_LIBGCC_CFLAGS): New definition.\n+\n+Sat Feb 14 07:45:16 1998  Ken Rose (rose@acm.org)\n+\n+        * reorg.c (fill_slots_from_thread): New parameter, delay_list.\n+\tAll callers changed.\n+\n+Sat Feb 14 07:14:02 1998  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n+\n+\t* reload.c (debug_reload): Properly output insn codes.\n+\n+\t* pa.c (emit_move_sequence): If in reload, call find_replacement.\n+\n+\t* gansidecl.h (bcopy, bzero, {,r}index): Don't define if IN_LIBGCC2.\n+\n+\t* combine.c (distribute_notes, case REG_DEAD): When seeing if place\n+\tto put new note sets register, use reg_bitfield_target_p, as in\n+\toriginal code.\n+\n+\t* gcc.c (process_command): If file is for linker, set lang to \"*\".\n+\t(lookup_compiler): Return 0 for language of \"*\".\n+\n+\t* sched.c (attach_deaths, case SUBREG): Fix error in last change.\n+\n+\t* i386.md (mov[sdx]fcc): Disable for now.\n+\t(mov[sd]fcc_1): Add earlyclobber for output on last alternative.\n+\n+Sat Feb 14 06:42:50 1998  Jason Merrill  <jason@yorick.cygnus.com>\n+\n+\t* except.c (get_dynamic_handler_chain): Only make call once per func.\n+\t(expand_fixup_region_{start,end}): New functions.\n+\t(expand_eh_region_start_tree): Store cleanup into finalization here.\n+\t* stmt.c (expand_cleanups): Use new functions to protect fixups.\n+\n+\t* except.c (get_dynamic_handler_chain): Build up a FUNCTION_DECL.\n+\t* optabs.c (init_optabs): Don't init get_dynamic_handler_chain_libfunc.\n+\t* expr.h (get_dynamic_handler_chain_libfunc): Deleted.\n+\n+Sat Feb 14 06:34:41 1998  Peter Lawrence  <Peter.Lawrence@Eng.Sun.COM>\n+\n+\t* optabs.c (emit_conditional_move): Don't reverse condition for FP.\n+\n+Fri Feb 13 07:22:04 1998  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n+\n+\t* Makefile.in (mostlyclean): Only use s-* convention for stamp\n+\tfiles in main dir.\n+\n+\t* configure.in: Add support for i786 (Pentium II); same as i686.\n+\n+Thu Feb 12 20:16:35 1998  Michael Meissner  <meissner@cygnus.com>\n+\n+\t* rs6000.md: Replace gen_rtx (CONST_INT,...) with GEN_INT.\n+\n+Thu Feb 12 10:08:14 1998  John Hassey  <hassey@dg-rtp.dg.com>\n+\n+\t* configure.in (i[3456]86-dg-dgux*): Don't need fixincludes.\n+\n+Thu Feb 12 07:27:39 1998  Mumit Khan <khan@xraylith.wisc.edu>\n+\t\n+\t* i386/cygwin32.h (NO_IMPLICIT_EXTERN_C): Define.\n+\tabout system headers.\n+\t(LIB_SPEC): Add -ladvapi32 -lshell32.\n+\n+Thu Feb 12 07:19:31 1998  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n+\n+\t* expr.c (expand_assignment): Fix typo in checking OFFSET.\n+\n+\t* gbl-ctors.h (atexit): Don't define unless needed.\n+\n+\t* combine.c (distribute_notes): Completely check for note operand being\n+\tonly partially set on potential note target; adjust what notes\n+\twe make in that case.\n+\n+\t* i386/xm-go32.h (HAVE_{BCOPY,BZERO,INDEX,RINDEX}): Deleted.\n+\n+Wed Feb 11 08:53:27 1998  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n+\n+\t* calls.c (emit_call_1): Size args now HOST_WIDE_INT.\n+\t(expand_call): struct_value_size now HOST_WIDE_INT.\n+\n+Tue Feb 10 09:04:39 1998  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n+\n+\t* integrate.c (initialize_for_inline): Ensure DECL_INCOMING_RTL\n+\tis always copied.\n+\n+Tue Feb 10 06:10:49 1998  Paul Eggert  <eggert@twinsun.com>\n+\n+\t* cccp.c (rescan): Fix bug with macro name appearing\n+\timmediately after L'x'.\n+\n+Mon Feb  9 20:45:32 1998  Andreas Schwab  <schwab@issan.informatik.uni-dortmund.de>\n+\n+\t* c-common.c (format_char_info): Add new field zlen.\n+\t(print_char_table): Remove entry for 'Z' as a format character.\n+\tInitialize zlen field as appropriate.\n+\t(scan_char_table): Set zlen field to NULL in each entry.\n+\t(check_format_info): Recognize 'Z' as a length modifier, with a\n+\twarning in pedantic mode.\n+\tAvoid infinite loop when a repeated flag character is detected.\n+\n+Mon Feb  9 09:24:04 1998  Paul Eggert  <eggert@twinsun.com>\n+\n+\t* c-parse.in (primary): Minor wording fix in diagnostic.\n+\n+Mon Feb  9 07:50:19 1998  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n+\n+\t* c-decl.c (grokdeclarator): Remove warning on inline of varargs.\n+\n+\t* reload.c (find_reloads): Check for const_to_mem case before\n+\tchecking for invalid reload; use force_const_mem if no_input_reloads.\n+\n+\t* function.c (push_function_context_to): Call init_emit last.\n+\n+\t* protoize.c (my_link): Define as -1 in mingw32.\n+\t(link): Remove declaration.\n+\n+\t* rs6000.c (setup_incoming_varargs): Always set rs6000_sysv_varargs_p.\n+\n+\t* integrate.c (expand_inline_function): Clear label_map with bzero.\n+\n+\t* unroll.c (copy_loop_body, case JUMP_INSN): Correct error in last\n+\tchange: call single_set on COPY, not INSN.\n+\n+Sun Feb  8 08:07:37 1998  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n+\n+\t* msdos/top.sed, winnt/config-nt.sed: Change version number to 2.8.1.\n+\n+\t* configure.in (i[3456]86-*-sco3.2v5*): Use cpio for headers.\n+\n+Sat Feb  7 07:32:46 1998  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n+\n+\t* i386/mingw32.h (LIBGCC_SPEC, STARTFILE_SPEC, MATH_LIBRARY):\n+\tUse msvcrt, not crtdll.\n+\n+Fri Feb  6 20:32:06 1998  Geert Bosch  <bosch@gnat.com>\n+\n+\t* i386/xm-os2.h (EMX, USG, BSTRING, HAVE_{PUTENV,VPRINTF,STRERROR}):\n+\tDefine ifdef __EMX__.\n+\t(strcasecmp): Define to be stricmp if __EMX__.\n+\t(spawnv{,p}): Don't define if EMX.\n+\t(OBJECT_SUFFIX): Don't define if EMX.\n+\t(MKTEMP_EACH_FILE): Define.\n+\n+Fri Feb  6 16:37:29 1998  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n+\n+\t* objc/Make-lang.in (objc.stage1): Depend on stage1-start.\n+\t(objc.stage2, objc.stage3, objc.stage4): Likewise for the\n+\trespective stageN-start targets. \n+\t(objc/sendmsg.o): Depend on objc/runtime-info.h.\n+\n+Fri Feb  6 16:27:09 1998  Bernd Schmidt  <crux@Pool.Informatik.RWTH-Aachen.DE>\n+\n+\t* stmt.c (expand_asm_operands): Properly treat asm statement\n+\tstatements with no operands as volatile.\n+\n+Fri Feb  6 16:03:25 1998  Greg McGary  <gkm@gnu.org>\n+\n+\t* c-decl.c (pushdecl): Set DECL_ORIGINAL_TYPE once only.\n+\n+Fri Feb  6 15:57:36 1998  Mumit Khan <khan@xraylith.wisc.edu>\n+\n+\t* i386/cygwin32.h (STRIP_NAME_ENCODING): New macro.\n+\n+Fri Feb  6 15:50:42 1998  Paul Eggert  <eggert@twinsun.com>\n+\n+\t* libgcc2.c (__floatdi[xtds]f): Round properly even when rounding\n+\tlarge negative integer to plus or minus infinity.\n+\n+Fri Feb  6 15:45:16 1998  Philippe De Muyter  <phdm@macqel.be>\n+\n+\t* sdbout.c (plain_type_1): Return T_DOUBLE, not T_VOID, for\n+\tlong double #ifndef EXTENDED_SDB_BASIC_TYPES.\n+\n+Fri Feb  6 15:23:49 1998  John David Anglin  <dave@hiauly1.hia.nrc.ca>\n+\n+\t* vax/ultrix.h (HAVE_ATEXIT): Define.\n+\t* x-vax: File deleted.\n+\n+Fri Feb  6 14:34:19 1998  Douglas Rupp <rupp@gnat.com>\n+\n+\t* gcc.c (process_command, case \"-dumpversion\"): Print spec_version.\n+\n+Fri Feb  6 11:01:13 1998  Josh Littlefield  <josh@american.com>\n+\n+\t* i386/gmon-sol2.c (internal_mcount): Do set-up when program starts\n+\tand install hook to do clean-up when it exits.\n+\t* i386/sol2-c1.asm (_mcount): Make a weak instead of global symbol.\n+\t* i386/sol2dbg.h (ASM_SPEC): Support Solaris bundled assembler's -V\n+\targument; pass -s argument to assembler.\n+\t\n+Fri Feb  6 09:13:21 1998  Jim Wilson  (wilson@cygnus.com)\n+\n+\t* function.c (assign_parms): New variable named_arg, with value\n+\tdepending on STRICT_ARGUMENT_NAMING.  Use instead of ! last_named.\n+\n+\t* crtstuff.c (__frame_dummy): New function for irix6.\n+\t(__do_global_ctors): Call __frame_dummy for irix6.\n+\t* mips/iris6.h (LINK_SPEC): Hide __frame_dummy too.\n+\n+Fri Feb  6 09:08:21 1998  Mike Stump  <mrs@wrs.com>\n+\n+\t* rtlanal.c (dead_or_set_regno_p): Ignore REG_DEAD notes after reload.\n+\t* genattrtab.c (reload_completed): Define.\n+\n+\t* configure.in (i960-wrs-vxworks): Same as i960-wrs-vxworks5*.\n+\n+Fri Feb  6 08:47:38 1998  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n+\n+\t* Makefile.in (diff): Add INSTALL, configure, and config.in;\n+\tremove objc-*.\n+\t* objc/config-lang.in (diff_excludes): Add objc-parse.[cy].\n+\n+\t* i386/xm-mingw32.h (link): Delete macro.\n+\n+\t* alpha.c (output_prolog): Write out frame sizes as longs and\n+\tprint too large sizes as zero.\n+\n+\t* function.c (combine_temp_slots): No need to allocate and free rtx.\n+\tDon't do anything if too many slots in the list.\n+\t(put_var_into_stack): Don't use ADDRESSOF if not optimizing.\n+\n+\t* function.c (purge_addressof_1): Force into mem if VOLATILE reference.\n+\n+\t* calls.c (expand_call): Show VAR_DECL made for structure return\n+\taddress is used; remove bogus set of MEM_IN_STRUCT_P.\n+\t* expr.c (expand_expr, case SAVE_EXPR, case TARGET_EXPR): Show used.\n+\t(expand_builtin, case BUILT_IN_LONGJMP): Show __dummy used.\n+\t* function.c (put_reg_into_stack): New arg USED_P; all callers changed.\n+\n+\t* expr.c (expand_expr, case SAVE_EXPR): assign_temp with KEEP of 3.\n+\t* function.c (var_temp_slot_level): New variable.\n+\t(push_function_context_to, pop_function_context_from): Save/restore\n+\tit and target_temp_slot_level.\n+\t(assign_stack_temp): Implement KEEP of 3.\n+\t(push_temp_slots_for_block): New function.\n+\t(init_temp_slots): Initialize var_temp_slot_level.\n+\t* function.h (struct function, fields {var,target}_temp_slot_level):\n+\tNew fields.\n+\t* stmt.c (expand_start_bindings): Call push_temp_slots_for_block.\n+\n+\t* function.c (struct temp_slot): SIZE, BASE_OFF_SET, and FULL_SIZE\n+\tnow HOST_WIDE_INT.\n+\t(assign_{,outer_}stack_local, assign_{,stack_}temp): Size arg is\n+\tnow HOST_WIDE_INT.\n+\t(assign_stack_temp): Do size computations in HOST_WIDE_INT.\n+\t(fixup_var_refs_1, optimize_bit_field, instantiate_decls): Likewise.\n+\t(instantiate_virtual_regs_1, fix_lexical_address): Likewise.\n+\t* rtl.h (assign_stack_{local,temp}): Size arg is HOST_WIDE_INT.\n+\t(assign_temp): Likewise.\n+\t* expr.h (struct args_size): Field CONSTANT is now HOST_WIDE_INT.\n+\n+\t* sched.c (attach_deaths, case REG): Don't check for REG_UNUSED.\n+\t(attach_deaths, case SUBREG, STRICT_LOW_PART, {ZERO,SIGN}_EXTRACT):\n+\tDon't pass set_p of 1 if partial assignment.\n+\n+\t* tree.h (size_in_bytes): Returns HOST_WIDE_INT.\n+\t* tree.c (size_in_bytes): Likewise.\n+\tTighen up logic some to avoid returning a bogus value instead of -1.\n+\n+\t* expr.c (get_inner_reference, case ARRAY_EXPR): Make WITH_RECORD_EXPR\n+\tjust for index.\n+\t(expand_expr, case PLACEHOLDER_EXPR): Refine search again; look\n+\tat each expression and look for pointer to type.\n+\n+\t* expr.c (safe_from_p, case ADDR_EXPR): If TREE_STATIC, no trampoline.\n+\t(expand_expr, case ADDR_EXPR): Likewise.\n+\n+\t* expr.c (emit_block_move): Use conservative range for movstr mode.\n+\n+\t* configure.in: See if \"cp -p\" works if \"ln -s\" doesn't; else \"cp\".\n+\n+\t* combine.c (try_combine.c): Pass elim_i2 and elim_i1 to\n+\tdistribute_notes for i3dest_killed REG_DEAD note.\n+\n+\t* configure.in (mips-dec-netbsd*): Remove bogus setting of prefix.\n+\n+\t* c-decl.c (duplicate_decls): Set DECL_IGNORED_P in newdecl if\n+\tdifferent bindings levels.\n+\n+\t* configure.in: Test ln -s by symlinking gcc.c.\n+\n+\t* configure.in (i[3456]86-dg-dgux): Add wildcard for version.\n+\n+\t* crtstuff.c (__do_global_ctors_aux): Switch back to text section\n+\tin proper place.\n+\n+\t* rtlanal.c (rtx_varies_p, case REG): pic_offset_table_rtx is fixed.\n+\t* genattrtab.c (pic_offset_table_rtx): Define (dummy).\n+\t* cse.c (set_nonvarying_address_components): Understand PIC refs.\n+\n+\t* loop.c (strength_reduce): When placing increment for auto-inc\n+\tcase, do comparison in loop order.\n+\n+\t* i860.c (output_delayed_branch): Add missing arg to recog.\n+\t(output_delay_insn): Add missing arg to constrain_operands.\n+\n+\t* configure.in: Truncate target after finished comparing it with host.\n+\n+\t* i386.h (MAX_FIXED_MODE_SIZE): Delete.\n+\n+\t* c-parse.in (expr_no_comma): Clarify undefined error.\n+\n+\t* prefix.c (get_key_value): Don't default to PREFIX here.\n+\t(translate_name): Remove bogus addition of \"$\" if getenv fails;\n+\tclean up application of default value of PREFIX.\n+\n+\t* fold-const.c (fold_convert): Call force_fit_type even if input\n+\talready overflows.\n+\n+Fri Feb  6 07:45:01 1998  Robert Hoehne <robert.hoehne@gmx.net>\n+\n+\t* i386/xm-go32.h (HAVE_{BCOPY,BZERO,BCMP,RINDEX,INDEX}): Define.\n+\n+        * gcc.c (main): Treat paths starting with '$' or DOS drives\n+\tas absolute in standard_startfile_prefix.\n+\n+Thu Feb  5 21:07:12 1998  John David Anglin  <dave@hiauly1.hia.nrc.ca>\n+\n+\t* cpplib.c (IS_INCLUDE_DIRECTIVE_TYPE): Add casts from enum to int.\n+\t* cccp.c (IS_INCLUDE_DIRECTIVE_TYPE, handle_directive): Likewise.\n+\n+Thu Feb  5 19:00:44 1998  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n+\n+\t* expr.c (expand_expr, case CONSTRUCTOR): Correct shift count\n+\twhen making signed bit field; use EXPAND_NORMAL, not 0.\n+\n+Thu Feb  5 17:42:43 1998  Manfred Hollstein  <manfred@s-direktnet.de>\n+\n+\t* libgcc2.c (__clear_insn_cache): On sysV68 enable the memctl\n+\tstuff only if MCT_TEXT is #define'd.\n+\n+Thu Feb  5 17:32:01 1998  Robert Hoehne  <robert.hoehne@gmx.net>\n+\n+\t* Makefile.in: Changed most stamp-* to s-*.\n+\n+Tue Feb  3 19:45:50 1998  James Hawtin <oolon@ankh.org>\n+\n+\t* i386/sol2.h (STARTFILE_SPEC, LIB_SPEC): Update -pg files.\n+\t* configure.in (i[3456]86-*-solaris2*): Add gcrt1.o and gmon.o\n+\tto extra_parts.\n+\n+Tue Feb  3 17:28:48 1998  Christopher C Chimelis <chris@classnet.med.miami.edu>\n+\n+\t* configure.in (alpha*-*-linux-gnu*): Add extra_parts for crtstuff.\n+\n+Tue Feb  3 17:18:19 1998  Richard Earnshaw  <rearnsha@arm.com>\n+\n+\t* arm.c (find_barrier): Fix one-too-many bug if fail to find barrier.\n+\n+\t* arm.c (arm_reload_in_hi): Handle cases where the MEM is too \n+\tcomplex for a simple offset.\n+\n+Tue Feb  3 16:14:21 1998  Robert Hoehne  <robert.hoehne@gmx.net>\n+\n+\t* i386/xm-go32.h (EXECUTABLE_SUFFIX): Define.\n+\n+\t* configure.in (i[3456]86-pc-msdosdjgpp*): New entry.\n+\n+Tue Feb  3 07:33:58 1998  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n+\n+\t* explow.c (probe_stack_range): Properly check for small\n+\tnumber of probes.\n+\n+\t* gcc.c (process_command, case 'V'): Validate arg.\n+\n+\t* configure.in (sbrk): Add check for needed declaration.\n+\t* acconfig.h (NEED_DECLARATION_SBRK): New entry.\n+\t* toplev.c (sbrk): Update declaration conditional.\n+\t* mips-tfile.c (sbrk, free): Likewise.\n+\n+\t* sparc/sysv4.h (DBX_REGISTER_NUMBER): Remove abort.\n+\n+\t* mips.c (mips_expand_prologue): Pass reg 25 to gen_loadgp.\n+\t* mips.md (loadgp): Add second operand for register number to add.\n+\t(builtin_setjmp_receiver): Pass new label and reg 31 to loadgp.\n+\n+\t* toplev.c: Include insn-codes.h, insn-config.h, and recog.h.\n+ \t(compile_file): Try to emit nop to separate gcc_compiled symbol.\n+\t* Makefile.in (toplev.o): Depends on insn-{codes,config}.h, recog.h.\n+\n+Tue Feb  3 06:58:46 1998  Mark Mitchell  <mmitchell@usa.net>\n+\n+\t* integrate.c (get_label_from_map): New function.\n+\t(expand_inline_function): Use it.\n+\tInitialize label_map to NULL_RTX instead of gen_label_rtx.\n+\t(copy_rtx_and_substitute): Use get_label_from_map.\n+\t* integrate.h (get_label_from_map): New function.\n+\t(set_label_from_map): New macro.\n+\t* unroll.c (unroll_loop, copy_loop_body): Use them.\n+\t\n+Mon Feb  2 16:33:01 1998  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n+\n+\t* i386.md (mov{si,hi,sf,df,xf}cc{,_1}): Remove cases with branches.\n+\n+\t* rs6000/x-aix31 (INSTALL): Deleted.\n+\t* mips/x-dec-osf1, mips/x-osfrose, i386/x-osfrose: Likewise.\n+\t* arm/x-riscix: Likewise.\n+\n+\t* c-typeck.c (signed_or_unsigned_type): Properly handle pointer types.\n+\n+Mon Feb  2 15:33:58 1998  Michael P. Hayes  <michaelh@ongaonga.chch.cri.nz>\n+\n+\t* unroll.c (copy_loop_body):  Use single_set instead of\n+\tPATTERN to detect increment of an iv inside a PARALLEL.\n+\n+Fri Jan 16 20:29:50 1998  Paul Eggert  <eggert@twinsun.com>\n+\n+\t* toplev.c (<unistd.h>): New include.\n+\t(get_run_time): Prefer CLK_TCK (if available) to HZ, and\n+\tprefer sysconf (_SC_CLK_TCK) (if available) to CLK_TCK.\n+\t* configure.in (sysconf): Call AC_CHECK_FUNCS.\n+\n+Wed Jan 14 20:10:51 1998  Paul Eggert  <eggert@twinsun.com>\n+\n+\t* cccp.c: (rescan): Don't report line 0 as the possible real start\n+\tof an unterminated string constant.\n+\tDon't mishandle backslash-newlines that in are the output of\n+\ta macro expansion.  Properly skip // style comments between a function\n+\tmacro name and '(', as well as backslash-newlines in comments there.\n+\t(handle_directive): Handle / \\ newline * between # and directive name.\n+\tIn #include directives, \\ does not escape \".\n+\t(do_include): For `#include \"file', do not bother expanding into temp\n+\tbuffer.  When error encountered when expanding, do not try result.\n+\t(skip_if_group): When skipping an include directive, use include\n+\ttokenization, not normal tokenization.  Backslash-newline is still\n+\tspecial when skipping.  Handle * \\ newline / correctly in comments\n+\twhen skipping.\n+\t(skip_quoted_string): After \\ newline, set *backslash_newlines_p\n+\teven if count_newlines is 0.\n+\t(macroexpand): Newline space is not a special marker inside a string.\n+\t(macroexpand, macarg): Do not generate \\ddd for control characters\n+\twhen stringifying; the C Standard does not allow this.\n+\t(macarg1): New arg MACRO.  All callers changed.\n+\tDo not treat /*, //, or backslash-newline specially when processing\n+\tthe output of a macro.\n+\t(discard_comments): Don't go past limit if looking for end of comment.\n+\tDiscard backslash-newline properly when discarding comments.\n+\t(change_newlines): \\\" does not end a string.\n+\t(make_definition): Do not treat backslash-newline specially, as it\n+\thas already been removed before we get here.\n+\t\n+\t* profile.c (output_func_start_profiler): Don't fflush output\n+\tif -quiet.\n+\t* toplev.c (rest_of_compilation): Likewise.\n+\n+\t* i386/x-sco5 (CC): Remove trailing white space.\n+\t* x-convex (CCLIBFLAGS): Likewise.\n+\t* arm/t-semi (LIBGCC2_CFLAGS): Likewise.\n+\n+Wed Jan  7 18:02:42 1998  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n+\n+\t* Version 2.8.0 released.\n+\n+Wed Jan  7 17:54:41 1998  J. Kean Johnston  <jkj@sco.com>\n+\n+\t* i386/sco5.h ({END,START}FILE_SPEC): Link with correct crtbegin.o\n+\tand crtend.o when using -static.\n+\n+Wed Jan  7 17:49:14 1998  Jan Christiaan van Winkel <Jan.Christiaan.van.Winkel@ATComputing.nl>\n+\n+\t* cppexp.c (gansidecl.h): Include.\n+\n+Wed Jan  7 17:45:07 1998  Tristan Gingold  <gingold@puccini.enst.fr>\n+\n+\t* expr.c (get_push_address): Use copy_to_reg instead of force_operand.\n+\t(emit_push_insn): Avoid null pointer deference if aggregate has no\n+\ttypes.\n+\t(expand_expr): Avoid finite but useless recursion.\n+\t(expand_builtin): Fix typo in calling function.\n+\t* function.c (assign_parms): Avoid useless call to chkr_set_right.\n+\n+Wed Jan  7 17:31:13 1998  Christian Iseli  <Christian.Iseli@lslsun.epfl.ch>\n+\n+\t* combine.c (force_to_mode): Return if operand is a CLOBBER.\n+\n+Wed Jan  7 17:23:24 1998  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n+\n+\t* x-rs6000 (INSTALL): Remove.\n+\n+\t* jump.c (jump_optimize): Don't use a hard reg as an operand\n+\tof a conditional move if small register classes.\n+\n+Wed Jan  7 17:09:28 1998  Jim Wilson  <wilson@cygnus.com>\n+\n+\t* cse.c (max_insn_uid): New variable.\n+\t(cse_around_loop): Use it.\n+\t(cse_main): Set it.\n+\n+See ChangeLog.11 for earlier changes.\n+\f\n+Use a consistent time stamp format in ChangeLog entries.\n+Not everyone has Emacs 20 yet, so stick with Emacs 19 format for now.\n+\n+Local Variables:\n+add-log-time-format: current-time-string\n+End:"}, {"sha": "d455bb8dcdc638b30f275b2f48f936df7b0d6a98", "filename": "gcc/Makefile.in", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ec36da574f8272705a3ead59bbd289f23793429/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ec36da574f8272705a3ead59bbd289f23793429/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=9ec36da574f8272705a3ead59bbd289f23793429", "patch": "@@ -654,9 +654,8 @@ CCCP=@cpp_main@\n # Files to be copied away after each stage in building.\n STAGESTUFF = *$(objext) insn-flags.h insn-config.h insn-codes.h \\\n  insn-output.c insn-recog.c insn-emit.c insn-extract.c insn-peep.c \\\n- insn-attr.h insn-attrtab.c insn-opinit.c genrtl.c genrtl.h tree-check.h \\\n- s-flags s-config s-codes s-mlib \\\n- s-output s-recog s-emit s-extract s-peep \\\n+ s-flags s-config s-codes s-mlib s-under\\\n+ s-output s-recog s-emit s-extract s-peep s-check \\\n  s-attr s-attrtab s-opinit s-crt s-crtS s-crt0 \\\n  genemit$(build_exeext) genoutput$(build_exeext) genrecog$(build_exeext) \\\n  genextract$(build_exeext) genflags$(build_exeext) gencodes$(build_exeext) \\\n@@ -1560,7 +1559,7 @@ s-codes : $(md_file) gencodes $(srcdir)/move-if-change\n \ttouch s-codes\n \n insn-emit.o : insn-emit.c $(CONFIG_H) $(RTL_H) $(EXPR_H) real.h output.h \\\n-  insn-config.h insn-flags.h insn-codes.h system.h\n+  insn-config.h insn-flags.h insn-codes.h system.h reload.h\n \t$(CC) $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) -c insn-emit.c\n \n insn-emit.c: s-emit ; @true\n@@ -2500,11 +2499,13 @@ uninstall: lang.uninstall\n \t-rm -rf $(bindir)/$(GCC_CROSS_NAME)$(exeext)\n \t-rm -rf $(bindir)/protoize$(exeext)\n \t-rm -rf $(bindir)/unprotoize$(exeext)\n+\t-rm -rf $(bindir)/gcov$(exeext)\n \t-rm -rf $(mandir)/$(GCC_INSTALL_NAME)$(manext)\n \t-rm -rf $(mandir)/$(GCC_CROSS_NAME)$(manext)\n \t-rm -rf $(mandir)/cccp$(manext)\n \t-rm -rf $(mandir)/protoize$(manext)\n \t-rm -rf $(mandir)/unprotoize$(manext)\n+\t-rm -f $(infodir)/cpp.info* $(infodir)/gcc.info*\n #\f\n # These targets are for the dejagnu testsuites. The file site.exp \n # contains global variables that all the testsuites will use."}, {"sha": "16e4ae5e470e2a57369b397ba233c29222d79f52", "filename": "gcc/acconfig.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ec36da574f8272705a3ead59bbd289f23793429/gcc%2Facconfig.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ec36da574f8272705a3ead59bbd289f23793429/gcc%2Facconfig.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Facconfig.h?ref=9ec36da574f8272705a3ead59bbd289f23793429", "patch": "@@ -64,4 +64,7 @@\n \n /* Whether getwd must be declared even if <unistd.h> is included.  */\n #undef NEED_DECLARATION_GETWD\n+\n+/* Define if you want expensive run-time checks. */\n+#undef ENABLE_CHECKING\n @TOP@"}, {"sha": "bd4e7a219b2273004a2e7c1ca9111c66967a1668", "filename": "gcc/c-decl.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ec36da574f8272705a3ead59bbd289f23793429/gcc%2Fc-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ec36da574f8272705a3ead59bbd289f23793429/gcc%2Fc-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-decl.c?ref=9ec36da574f8272705a3ead59bbd289f23793429", "patch": "@@ -3798,6 +3798,10 @@ start_decl (declarator, declspecs, initialized, attributes, prefix_attributes)\n   if (! flag_no_common || ! TREE_PUBLIC (decl))\n     DECL_COMMON (decl) = 1;\n \n+#ifdef SET_DEFAULT_DECL_ATTRIBUTES\n+  SET_DEFAULT_DECL_ATTRIBUTES (decl, attributes);\n+#endif\n+\n   /* Set attributes here so if duplicate decl, will have proper attributes.  */\n   decl_attributes (decl, attributes, prefix_attributes);\n "}, {"sha": "c33ade528225c362fe293e8b225299bc0930004d", "filename": "gcc/c-lex.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ec36da574f8272705a3ead59bbd289f23793429/gcc%2Fc-lex.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ec36da574f8272705a3ead59bbd289f23793429/gcc%2Fc-lex.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-lex.c?ref=9ec36da574f8272705a3ead59bbd289f23793429", "patch": "@@ -544,6 +544,11 @@ check_newline ()\n \t      token = yylex ();\n \t      if (token != IDENTIFIER)\n \t\tgoto skipline;\n+\t      if (nextchar >= 0)\n+\t\tc = nextchar, nextchar = -1;\n+\t      else\n+\t\tc = GETC ();\n+\t      ungetc (c, finput);\n \t      if (HANDLE_PRAGMA (finput, yylval.ttype))\n \t\t{\n \t\t  c = GETC ();"}, {"sha": "ea6bcb848b31920384f129ae7989258c713fa8a0", "filename": "gcc/combine.c", "status": "modified", "additions": 17, "deletions": 21, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ec36da574f8272705a3ead59bbd289f23793429/gcc%2Fcombine.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ec36da574f8272705a3ead59bbd289f23793429/gcc%2Fcombine.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcombine.c?ref=9ec36da574f8272705a3ead59bbd289f23793429", "patch": "@@ -3771,9 +3771,8 @@ simplify_rtx (x, op0_mode, last, in_dest)\n \n       /* If we know that the value is already truncated, we can\n          replace the TRUNCATE with a SUBREG.  */\n-      if (GET_MODE_BITSIZE (GET_MODE (XEXP (x, 0))) <= HOST_BITS_PER_WIDE_INT\n-\t  && (nonzero_bits (XEXP (x, 0), GET_MODE (XEXP (x, 0)))\n-\t      &~ GET_MODE_MASK (mode)) == 0)\n+      if (num_sign_bit_copies (XEXP (x, 0), GET_MODE (XEXP (x, 0)))\n+\t  >= GET_MODE_BITSIZE (mode) + 1)\n \treturn gen_lowpart_for_combine (mode, XEXP (x, 0));\n \n       /* A truncate of a comparison can be replaced with a subreg if\n@@ -4702,7 +4701,7 @@ simplify_set (x)\n      we only care about the low bits of the result.\n \n      However, on machines without WORD_REGISTER_OPERATIONS defined, we cannot\n-     perform a narrower operation that requested since the high-order bits will\n+     perform a narrower operation than requested since the high-order bits will\n      be undefined.  On machine where it is defined, this transformation is safe\n      as long as M1 and M2 have the same number of words.  */\n  \n@@ -6953,8 +6952,6 @@ rtx_equal_for_field_assignment_p (x, y)\n      rtx x;\n      rtx y;\n {\n-  rtx last_x, last_y;\n-\n   if (x == y || rtx_equal_p (x, y))\n     return 1;\n \n@@ -6976,19 +6973,12 @@ rtx_equal_for_field_assignment_p (x, y)\n \t\t      gen_lowpart_for_combine (GET_MODE (SUBREG_REG (x)), y)))\n     return 1;\n \n-  last_x = get_last_value (x);\n-  last_y = get_last_value (y);\n-\n-  return ((last_x != 0\n-\t   && GET_CODE (last_x) != CLOBBER\n-\t   && rtx_equal_for_field_assignment_p (last_x, y))\n-\t  || (last_y != 0\n-\t      && GET_CODE (last_y) != CLOBBER\n-\t      && rtx_equal_for_field_assignment_p (x, last_y))\n-\t  || (last_x != 0 && last_y != 0\n-\t      && GET_CODE (last_x) != CLOBBER\n-\t      && GET_CODE (last_y) != CLOBBER\n-\t      && rtx_equal_for_field_assignment_p (last_x, last_y)));\n+  /* We used to see if get_last_value of X and Y were the same but that's\n+     not correct.  In one direction, we'll cause the assignment to have\n+     the wrong destination and in the case, we'll import a register into this\n+     insn that might have already have been dead.   So fail if none of the\n+     above cases are true.  */\n+  return 0;\n }\n \f\n /* See if X, a SET operation, can be rewritten as a bit-field assignment.\n@@ -10160,14 +10150,20 @@ simplify_comparison (code, pop0, pop1)\n \t  if (GET_CODE (XEXP (op0, 0)) == SUBREG\n \t      && ((mode_width\n \t\t   >= GET_MODE_BITSIZE (GET_MODE (SUBREG_REG (XEXP (op0, 0)))))\n-\t\t  || subreg_lowpart_p (XEXP (op0, 0)))\n+#ifdef WORD_REGISTER_OPERATIONS\n+\t\t  || subreg_lowpart_p (XEXP (op0, 0))\n+#endif\n+\t\t  )\n \t      && GET_CODE (XEXP (op0, 1)) == CONST_INT\n \t      && mode_width <= HOST_BITS_PER_WIDE_INT\n \t      && (GET_MODE_BITSIZE (GET_MODE (SUBREG_REG (XEXP (op0, 0))))\n \t\t  <= HOST_BITS_PER_WIDE_INT)\n \t      && (INTVAL (XEXP (op0, 1)) & ~ mask) == 0\n \t      && 0 == (~ GET_MODE_MASK (GET_MODE (SUBREG_REG (XEXP (op0, 0))))\n-\t\t       & INTVAL (XEXP (op0, 1))))\n+\t\t       & INTVAL (XEXP (op0, 1)))\n+\t      && INTVAL (XEXP (op0, 1)) != mask\n+\t      && (INTVAL (XEXP (op0, 1))\n+\t\t  != GET_MODE_MASK (GET_MODE (SUBREG_REG (XEXP (op0, 0))))))\n \t\t       \n \t    {\n \t      op0"}, {"sha": "5bcb1fb3abe31ddd2eb86b082959e4b328f8ce64", "filename": "gcc/config/alpha/alpha.c", "status": "modified", "additions": 45, "deletions": 0, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ec36da574f8272705a3ead59bbd289f23793429/gcc%2Fconfig%2Falpha%2Falpha.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ec36da574f8272705a3ead59bbd289f23793429/gcc%2Fconfig%2Falpha%2Falpha.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Falpha.c?ref=9ec36da574f8272705a3ead59bbd289f23793429", "patch": "@@ -2808,6 +2808,51 @@ print_operand (file, x, code)\n     }\n }\n \f\n+/* Emit RTL insns to initialize the variable parts of a trampoline at\n+   TRAMP. FNADDR is an RTX for the address of the function's pure\n+   code.  CXT is an RTX for the static chain value for the function.\n+   We assume here that a function will be called many more times than\n+   its address is taken (e.g., it might be passed to qsort), so we\n+   take the trouble to initialize the \"hint\" field in the JMP insn.\n+   Note that the hint field is PC (new) + 4 * bits 13:0.  */\n+\n+void\n+alpha_initialize_trampoline (tramp, fnaddr, cxt)\n+     rtx tramp;\n+     rtx fnaddr;\n+     rtx cxt;\n+{\n+  rtx temp, temp1, addr;\n+\n+  /* Store function address and CXT.  */\n+  addr = memory_address (Pmode, plus_constant (tramp, 16));\n+  emit_move_insn (gen_rtx (MEM, Pmode, addr), fnaddr);\n+  addr = memory_address (Pmode, plus_constant (tramp, 24));\n+  emit_move_insn (gen_rtx (MEM, Pmode, addr), cxt);\n+\n+  /* Compute hint value.  */\n+  temp = force_operand (plus_constant (tramp, 12), NULL_RTX);\n+  temp = expand_binop (DImode, sub_optab, fnaddr, temp, temp, 1, OPTAB_WIDEN);\n+  temp = expand_shift (RSHIFT_EXPR, Pmode, temp,\n+\t\t       build_int_2 (2, 0), NULL_RTX, 1);\n+  temp = expand_and (gen_lowpart (SImode, temp), GEN_INT (0x3fff), 0);\n+\n+  /* Merge in the hint.  */\n+  addr = memory_address (SImode, plus_constant (tramp, 8));\n+  temp1 = force_reg (SImode, gen_rtx (MEM, SImode, addr));\n+  temp1 = expand_and (temp1, GEN_INT (0xffffc000), NULL_RTX);\n+  temp1 = expand_binop (SImode, ior_optab, temp1, temp, temp1, 1, OPTAB_WIDEN);\n+  emit_move_insn (gen_rtx (MEM, SImode, addr), temp1);\n+\n+#ifdef TRANSFER_FROM_TRAMPOLINE\n+  emit_library_call (gen_rtx (SYMBOL_REF, Pmode, \"__enable_execute_stack\"),\n+\t\t     0, VOIDmode, 1, addr, Pmode);\n+#endif\n+\n+  emit_insn (gen_rtx (UNSPEC_VOLATILE, VOIDmode,\n+\t\t      gen_rtvec (1, const0_rtx), 0));\n+}\n+\f\n /* Do what is necessary for `va_start'.  The argument is ignored;\n    We look at the current function to determine if stdarg or varargs\n    is used and fill in an initial va_list.  A pointer to this constructor"}, {"sha": "d7bb2d168871781e5968103121fe25b7153a6160", "filename": "gcc/config/alpha/alpha.h", "status": "modified", "additions": 11, "deletions": 35, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ec36da574f8272705a3ead59bbd289f23793429/gcc%2Fconfig%2Falpha%2Falpha.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ec36da574f8272705a3ead59bbd289f23793429/gcc%2Fconfig%2Falpha%2Falpha.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Falpha.h?ref=9ec36da574f8272705a3ead59bbd289f23793429", "patch": "@@ -676,12 +676,17 @@ enum reg_class { NO_REGS, GENERAL_REGS, FLOAT_REGS, ALL_REGS,\n \n    For the Alpha, `Q' means that this is a memory operand but not a\n    reference to an unaligned location.\n+\n    `R' is a SYMBOL_REF that has SYMBOL_REF_FLAG set or is the current\n-   function.  */\n+   function.\n+\n+   'S' is a 6-bit constant (valid for a shift insn).  */\n \n #define EXTRA_CONSTRAINT(OP, C)\t\t\t\t\\\n-  ((C) == 'Q' ? GET_CODE (OP) == MEM && GET_CODE (XEXP (OP, 0)) != AND \\\n-   : (C) == 'R' ? current_file_function_operand (OP, Pmode)\t\\\n+  ((C) == 'Q' ? GET_CODE (OP) == MEM && GET_CODE (XEXP (OP, 0)) != AND\t\\\n+   : (C) == 'R' ? current_file_function_operand (OP, Pmode)\t\t\\\n+   : (C) == 'S' ? (GET_CODE (OP) == CONST_INT\t\t\t\t\\\n+\t\t   && (unsigned HOST_WIDE_INT) INTVAL (OP) < 64)\t\\\n    : 0)\n \n /* Given an rtx X being reloaded into a reg required to be\n@@ -1202,38 +1207,8 @@ extern void output_end_prologue ();\n    to initialize the \"hint\" field in the JMP insn.  Note that the hint\n    field is PC (new) + 4 * bits 13:0.  */\n \n-#define INITIALIZE_TRAMPOLINE(TRAMP, FNADDR, CXT)\t\t\t\\\n-{\t\t\t\t\t\t\t\t\t\\\n-  rtx _temp, _temp1, _addr;\t\t\t\t\t\t\\\n-\t\t\t\t\t\t\t\t\t\\\n-  _addr = memory_address (Pmode, plus_constant ((TRAMP), 16));\t\t\\\n-  emit_move_insn (gen_rtx (MEM, Pmode, _addr), (FNADDR));\t\t\\\n-  _addr = memory_address (Pmode, plus_constant ((TRAMP), 24));\t\t\\\n-  emit_move_insn (gen_rtx (MEM, Pmode, _addr), (CXT));\t\t\t\\\n-\t\t\t\t\t\t\t\t\t\\\n-  _temp = force_operand (plus_constant ((TRAMP), 12), NULL_RTX);\t\\\n-  _temp = expand_binop (DImode, sub_optab, (FNADDR), _temp, _temp, 1,\t\\\n-\t\t\tOPTAB_WIDEN);\t\t\t\t\t\\\n-  _temp = expand_shift (RSHIFT_EXPR, Pmode, _temp,\t\t\t\\\n-\t\t\tbuild_int_2 (2, 0), NULL_RTX, 1);\t\t\\\n-  _temp = expand_and (gen_lowpart (SImode, _temp),\t\t\t\\\n-\t\t      GEN_INT (0x3fff), 0); \t\t\t\t\\\n-\t\t\t\t\t\t\t\t\t\\\n-  _addr = memory_address (SImode, plus_constant ((TRAMP), 8));\t\t\\\n-  _temp1 = force_reg (SImode, gen_rtx (MEM, SImode, _addr));\t\t\\\n-  _temp1 = expand_and (_temp1, GEN_INT (0xffffc000), NULL_RTX);\t\t\\\n-  _temp1 = expand_binop (SImode, ior_optab, _temp1, _temp, _temp1, 1,\t\\\n-\t\t\t OPTAB_WIDEN);\t\t\t\t\t\\\n-\t\t\t\t\t\t\t\t\t\\\n-  emit_move_insn (gen_rtx (MEM, SImode, _addr), _temp1);\t\t\\\n-\t\t\t\t\t\t\t\t\t\\\n-  emit_library_call (gen_rtx (SYMBOL_REF, Pmode,\t\t\t\\\n-\t\t\t      \"__enable_execute_stack\"),\t\t\\\n-\t\t     0, VOIDmode, 1,_addr, Pmode);\t\t\t\\\n-\t\t\t\t\t\t\t\t\t\\\n-  emit_insn (gen_rtx (UNSPEC_VOLATILE, VOIDmode,\t\t\t\\\n-\t\t      gen_rtvec (1, const0_rtx), 0));\t\t\t\\\n-}\n+#define INITIALIZE_TRAMPOLINE(TRAMP, FNADDR, CXT) \\\n+  alpha_initialize_trampoline (TRAMP, FNADDR, CXT)\n \n /* Attempt to turn on access permissions for the stack.  */\n \n@@ -2127,6 +2102,7 @@ do {\t\t\t\t\t\t\t\t\t\\\n     }\t\t\t\t\t\t\t\t\t\\\n } while (0)\n \f\n+\n /* Define results of standard character escape sequences.  */\n #define TARGET_BELL 007\n #define TARGET_BS 010"}, {"sha": "a8e5c8eb34da9cf01ae93290506e5c8c173c10b1", "filename": "gcc/config/alpha/alpha.md", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ec36da574f8272705a3ead59bbd289f23793429/gcc%2Fconfig%2Falpha%2Falpha.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ec36da574f8272705a3ead59bbd289f23793429/gcc%2Fconfig%2Falpha%2Falpha.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Falpha.md?ref=9ec36da574f8272705a3ead59bbd289f23793429", "patch": "@@ -1177,7 +1177,7 @@\n (define_insn \"ashldi3\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=r,r\")\n \t(ashift:DI (match_operand:DI 1 \"reg_or_0_operand\" \"rJ,rJ\")\n-\t\t   (match_operand:DI 2 \"reg_or_6bit_operand\" \"P,rI\")))]\n+\t\t   (match_operand:DI 2 \"reg_or_6bit_operand\" \"P,rS\")))]\n   \"\"\n   \"*\n {\n@@ -1218,15 +1218,15 @@\n (define_insn \"lshrdi3\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=r\")\n \t(lshiftrt:DI (match_operand:DI 1 \"reg_or_0_operand\" \"rJ\")\n-\t\t     (match_operand:DI 2 \"reg_or_6bit_operand\" \"rI\")))]\n+\t\t     (match_operand:DI 2 \"reg_or_6bit_operand\" \"rS\")))]\n   \"\"\n   \"srl %r1,%2,%0\"\n   [(set_attr \"type\" \"shift\")])\n \n (define_insn \"ashrdi3\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=r\")\n \t(ashiftrt:DI (match_operand:DI 1 \"reg_or_0_operand\" \"rJ\")\n-\t\t     (match_operand:DI 2 \"reg_or_6bit_operand\" \"rI\")))]\n+\t\t     (match_operand:DI 2 \"reg_or_6bit_operand\" \"rS\")))]\n   \"\"\n   \"sra %r1,%2,%0\"\n   [(set_attr \"type\" \"shift\")])"}, {"sha": "aa43450fe98d0d25c098b51ade928d248f071b3a", "filename": "gcc/config/alpha/linux.h", "status": "modified", "additions": 5, "deletions": 29, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ec36da574f8272705a3ead59bbd289f23793429/gcc%2Fconfig%2Falpha%2Flinux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ec36da574f8272705a3ead59bbd289f23793429/gcc%2Fconfig%2Falpha%2Flinux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Flinux.h?ref=9ec36da574f8272705a3ead59bbd289f23793429", "patch": "@@ -1,7 +1,7 @@\n-/* Definitions of target machine for GNU compiler,\n-   for Alpha Linux-based GNU systems.\n-   Copyright (C) 1996, 1997 Free Software Foundation, Inc.\n-   Contributed by Richard Henderson.\n+/* Definitions of target machine for GNU compiler, for Alpha Linux-based GNU\n+   systems using ECOFF.\n+   Copyright (C) 1996, 1997, 1998 Free Software Foundation, Inc.\n+   Contributed by Bob Manson.\n \n This file is part of GNU CC.\n \n@@ -44,28 +44,4 @@ the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n #undef TARGET_CAN_FAULT_IN_PROLOGUE\n #define TARGET_CAN_FAULT_IN_PROLOGUE 1\n \n-/* Emit RTL insns to initialize the variable parts of a trampoline.\n-   FNADDR is an RTX for the address of the function's pure code.\n-   CXT is an RTX for the static chain value for the function. \n-\n-   This differs from the standard version in that:\n-\n-   We do not initialize the \"hint\" field because it only has an 8k\n-   range and so the target is in range of something on the stack. \n-   Omitting the hint saves a bogus branch-prediction cache line load.\n-\n-   GNU/Linux always has an executable stack -- no need for a system call. */\n-\n-#undef INITIALIZE_TRAMPOLINE\n-#define INITIALIZE_TRAMPOLINE(TRAMP, FNADDR, CXT)                       \\\n-{                                                                       \\\n-  rtx _addr;                                             \t\t\\\n-                                                                        \\\n-  _addr = memory_address (Pmode, plus_constant ((TRAMP), 16));          \\\n-  emit_move_insn (gen_rtx (MEM, Pmode, _addr), (FNADDR));               \\\n-  _addr = memory_address (Pmode, plus_constant ((TRAMP), 24));          \\\n-  emit_move_insn (gen_rtx (MEM, Pmode, _addr), (CXT));                  \\\n-                                                                        \\\n-  emit_insn (gen_rtx (UNSPEC_VOLATILE, VOIDmode,                        \\\n-                      gen_rtvec (1, const0_rtx), 0));                   \\\n-}\n+#undef ASM_FINAL_SPEC"}, {"sha": "e2f46e7c965a323e9777f925afb4dad84c2fa77a", "filename": "gcc/config/arc/arc.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ec36da574f8272705a3ead59bbd289f23793429/gcc%2Fconfig%2Farc%2Farc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ec36da574f8272705a3ead59bbd289f23793429/gcc%2Fconfig%2Farc%2Farc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farc%2Farc.c?ref=9ec36da574f8272705a3ead59bbd289f23793429", "patch": "@@ -1910,7 +1910,7 @@ arc_final_prescan_insn (insn, opvec, noperands)\n   record_cc_ref (insn);\n \n   /* Allow -mdebug-ccfsm to turn this off so we can see how well it does.\n-     We can't do this in macro FINAL_PRESCAN_INSN because it's called from\n+     We can't do this in macro FINAL_PRESCAN_INSN because its called from\n      final_scan_insn which has `optimize' as a local.  */\n   if (optimize < 2 || TARGET_NO_COND_EXEC)\n     return;"}, {"sha": "61ca39f53111e93c42506eade8740172aa28c576", "filename": "gcc/config/arc/arc.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ec36da574f8272705a3ead59bbd289f23793429/gcc%2Fconfig%2Farc%2Farc.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ec36da574f8272705a3ead59bbd289f23793429/gcc%2Fconfig%2Farc%2Farc.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farc%2Farc.h?ref=9ec36da574f8272705a3ead59bbd289f23793429", "patch": "@@ -1583,7 +1583,7 @@ do { if ((LOG) != 0) fprintf (FILE, \"\\t.align %d\\n\", 1 << (LOG)); } while (0)\n    After generation of rtl, the compiler makes no further distinction\n    between pointers and any other objects of this machine mode.  */\n /* ??? The arc doesn't have full 32 bit pointers, but making this PSImode has\n-   it's own problems (you have to add extendpsisi2 and trucnsipsi2 but how does\n+   its own problems (you have to add extendpsisi2 and trucnsipsi2 but how does\n    one do it without getting excess code?).  Try to avoid it.  */\n #define Pmode SImode\n "}, {"sha": "b01db107849b9933df038fd36b4d57b32ef4729e", "filename": "gcc/config/dsp16xx/dsp16xx.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ec36da574f8272705a3ead59bbd289f23793429/gcc%2Fconfig%2Fdsp16xx%2Fdsp16xx.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ec36da574f8272705a3ead59bbd289f23793429/gcc%2Fconfig%2Fdsp16xx%2Fdsp16xx.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fdsp16xx%2Fdsp16xx.h?ref=9ec36da574f8272705a3ead59bbd289f23793429", "patch": "@@ -138,7 +138,7 @@ extern char *output_block_move();\n /* Tell gcc where to look for the startfile */\n #define STANDARD_STARTFILE_PREFIX   \"/d1600/lib\"\n \n-/* Tell gcc where to look for it's executables */\n+/* Tell gcc where to look for its executables */\n #define STANDARD_EXEC_PREFIX  \"/d1600/bin\"\n \n /* Command line options to the AT&T assembler */"}, {"sha": "560a20bb5992875e423530417f10e6c7e1b254c3", "filename": "gcc/config/h8300/h8300.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ec36da574f8272705a3ead59bbd289f23793429/gcc%2Fconfig%2Fh8300%2Fh8300.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ec36da574f8272705a3ead59bbd289f23793429/gcc%2Fconfig%2Fh8300%2Fh8300.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fh8300%2Fh8300.c?ref=9ec36da574f8272705a3ead59bbd289f23793429", "patch": "@@ -3037,7 +3037,7 @@ output_simode_bld (bild, log2, operands)\n   return \"\";\n }\n \n-/* Given INSN and it's current length LENGTH, return the adjustment\n+/* Given INSN and its current length LENGTH, return the adjustment\n    (in bytes) to correctly compute INSN's length.\n \n    We use this to get the lengths of various memory references correct.  */"}, {"sha": "423a249dafebd1694f408cce02d1259b7599bf1e", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 12, "deletions": 2, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ec36da574f8272705a3ead59bbd289f23793429/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ec36da574f8272705a3ead59bbd289f23793429/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=9ec36da574f8272705a3ead59bbd289f23793429", "patch": "@@ -439,8 +439,8 @@\n   [(set (cc0)\n \t(match_operator 2 \"VOIDmode_compare_op\"\n \t\t\t[(float_extend:XF\n-\t\t\t  (match_operand:DF 1 \"nonimmediate_operand\" \"fm\"))\n-\t\t\t (match_operand:XF 0 \"register_operand\" \"f\")]))\n+\t\t\t  (match_operand:DF 0 \"nonimmediate_operand\" \"fm\"))\n+\t\t\t (match_operand:XF 1 \"register_operand\" \"f\")]))\n    (clobber (match_scratch:HI 3 \"=a\"))]\n   \"TARGET_80387\"\n   \"* return output_float_compare (insn, operands);\")\n@@ -455,6 +455,16 @@\n   \"TARGET_80387\"\n   \"* return output_float_compare (insn, operands);\")\n \n+(define_insn \"\"\n+  [(set (cc0)\n+\t(match_operator 2 \"VOIDmode_compare_op\"\n+\t\t\t[(float_extend:XF\n+\t\t\t  (match_operand:SF 0 \"nonimmediate_operand\" \"fm\"))\n+\t\t\t (match_operand:XF 1 \"register_operand\" \"f\")]))\n+   (clobber (match_scratch:HI 3 \"=a\"))]\n+  \"TARGET_80387\"\n+  \"* return output_float_compare (insn, operands);\")\n+\n (define_insn \"\"\n   [(set (cc0)\n \t(compare:CCFPEQ (match_operand:XF 0 \"register_operand\" \"f\")"}, {"sha": "98cf55e78300cc6ffdb320d1df93e770a01e18e7", "filename": "gcc/config/i386/linux-aout.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ec36da574f8272705a3ead59bbd289f23793429/gcc%2Fconfig%2Fi386%2Flinux-aout.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ec36da574f8272705a3ead59bbd289f23793429/gcc%2Fconfig%2Fi386%2Flinux-aout.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Flinux-aout.h?ref=9ec36da574f8272705a3ead59bbd289f23793429", "patch": "@@ -1,5 +1,5 @@\n /* Definitions for Intel 386 running Linux-based GNU systems using a.out.\n-   Copyright (C) 1992, 1994, 1995, 1997 Free Software Foundation, Inc.\n+   Copyright (C) 1992, 1994, 1995, 1997, 1998 Free Software Foundation, Inc.\n    Contributed by H.J. Lu (hjl@nynexst.com)\n \n This file is part of GNU CC."}, {"sha": "a67fd0f8535ab7c6dc86d047a28c356dadb8cd1a", "filename": "gcc/config/i386/linux-oldld.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ec36da574f8272705a3ead59bbd289f23793429/gcc%2Fconfig%2Fi386%2Flinux-oldld.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ec36da574f8272705a3ead59bbd289f23793429/gcc%2Fconfig%2Fi386%2Flinux-oldld.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Flinux-oldld.h?ref=9ec36da574f8272705a3ead59bbd289f23793429", "patch": "@@ -1,6 +1,6 @@\n /* Definitions for Intel 386 running Linux-based GNU systems with pre-BFD\n    a.out linkers.\n-   Copyright (C) 1995, 1997 Free Software Foundation, Inc.\n+   Copyright (C) 1995, 1997, 1998 Free Software Foundation, Inc.\n    Contributed by Michael Meissner (meissner@cygnus.com)\n \n This file is part of GNU CC."}, {"sha": "e435f803172a0d00264c82c7692644b070e21253", "filename": "gcc/config/i386/linux.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ec36da574f8272705a3ead59bbd289f23793429/gcc%2Fconfig%2Fi386%2Flinux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ec36da574f8272705a3ead59bbd289f23793429/gcc%2Fconfig%2Fi386%2Flinux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Flinux.h?ref=9ec36da574f8272705a3ead59bbd289f23793429", "patch": "@@ -1,5 +1,5 @@\n-/* Definitions for Intel 386 running Linux with ELF format\n-   Copyright (C) 1994, 1995, 1996, 1997 Free Software Foundation, Inc.\n+/* Definitions for Intel 386 running Linux-based GNU systems with ELF format.\n+   Copyright (C) 1994, 1995, 1996, 1997, 1998 Free Software Foundation, Inc.\n    Contributed by Eric Youngdale.\n    Modified for stabs-in-ELF by H.J. Lu.\n "}, {"sha": "1503bdfcdd76f195200648a5ffc47a1e66bb4de5", "filename": "gcc/config/m32r/m32r.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ec36da574f8272705a3ead59bbd289f23793429/gcc%2Fconfig%2Fm32r%2Fm32r.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ec36da574f8272705a3ead59bbd289f23793429/gcc%2Fconfig%2Fm32r%2Fm32r.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm32r%2Fm32r.h?ref=9ec36da574f8272705a3ead59bbd289f23793429", "patch": "@@ -1910,7 +1910,7 @@ do {\t\t\t\t\t\t\t\t\t\\\n    After generation of rtl, the compiler makes no further distinction\n    between pointers and any other objects of this machine mode.  */\n /* ??? The M32R doesn't have full 32 bit pointers, but making this PSImode has\n-   it's own problems (you have to add extendpsisi2 and truncsipsi2).\n+   its own problems (you have to add extendpsisi2 and truncsipsi2).\n    Try to avoid it.  */\n #define Pmode SImode\n "}, {"sha": "9e33ccb4b2f0c10e69e1508e313fed2315cb5c1f", "filename": "gcc/config/m68k/lb1sf68.asm", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ec36da574f8272705a3ead59bbd289f23793429/gcc%2Fconfig%2Fm68k%2Flb1sf68.asm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ec36da574f8272705a3ead59bbd289f23793429/gcc%2Fconfig%2Fm68k%2Flb1sf68.asm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Flb1sf68.asm?ref=9ec36da574f8272705a3ead59bbd289f23793429", "patch": "@@ -1,5 +1,5 @@\n /* libgcc1 routines for 68000 w/o floating-point hardware.\n-   Copyright (C) 1994, 1996, 1997 Free Software Foundation, Inc.\n+   Copyright (C) 1994, 1996, 1997, 1998 Free Software Foundation, Inc.\n \n This file is part of GNU CC.\n "}, {"sha": "b74ae45064dbf399f79d29f01b3012788387fdf4", "filename": "gcc/config/m88k/m88k.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ec36da574f8272705a3ead59bbd289f23793429/gcc%2Fconfig%2Fm88k%2Fm88k.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ec36da574f8272705a3ead59bbd289f23793429/gcc%2Fconfig%2Fm88k%2Fm88k.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm88k%2Fm88k.h?ref=9ec36da574f8272705a3ead59bbd289f23793429", "patch": "@@ -2079,7 +2079,7 @@ do {\t\t\t\t\t\t\t\t\t \\\n   sprintf (LABEL, TARGET_SVR4 ? \"*.%s%d\" : \"*@%s%d\", PREFIX, NUM)\n \n /* Internal macro to get a single precision floating point value into\n-   an int, so we can print it's value in hex.  */\n+   an int, so we can print its value in hex.  */\n #define FLOAT_TO_INT_INTERNAL( FVALUE, IVALUE )\t\t\t\t\\\n   { union {\t\t\t\t\t\t\t\t\\\n       REAL_VALUE_TYPE d;\t\t\t\t\t\t\\"}, {"sha": "118ebe366da79fefe22d55c689367681d8a8cbf9", "filename": "gcc/config/m88k/m88k.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ec36da574f8272705a3ead59bbd289f23793429/gcc%2Fconfig%2Fm88k%2Fm88k.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ec36da574f8272705a3ead59bbd289f23793429/gcc%2Fconfig%2Fm88k%2Fm88k.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm88k%2Fm88k.md?ref=9ec36da574f8272705a3ead59bbd289f23793429", "patch": "@@ -1125,7 +1125,7 @@\n ;; The comparison operations store the comparison into a register and\n ;; record that register.  The following Bxx or Sxx insn uses that\n ;; register as an input.  To facilitate use of bcnd instead of cmp/bb1,\n-;; cmpsi records it's operands and produces no code when any operand\n+;; cmpsi records its operands and produces no code when any operand\n ;; is constant.  In this case, the Bxx insns use gen_bcnd and the\n ;; Sxx insns use gen_test to ensure a cmp has been emitted.\n ;;\n@@ -3972,7 +3972,7 @@\n ;; This insn is used for some loop tests, typically loops reversed when\n ;; strength reduction is used.  It is actually created when the instruction\n ;; combination phase combines the special loop test.  Since this insn\n-;; is both a jump insn and has an output, it must deal with it's own\n+;; is both a jump insn and has an output, it must deal with its own\n ;; reloads, hence the `m' constraints.  The `!' constraints direct reload\n ;; to not choose the register alternatives in the event a reload is needed.\n "}, {"sha": "2eda40ab9780ef4d38e26483040cd8aa81f279d5", "filename": "gcc/config/mips/iris6.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ec36da574f8272705a3ead59bbd289f23793429/gcc%2Fconfig%2Fmips%2Firis6.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ec36da574f8272705a3ead59bbd289f23793429/gcc%2Fconfig%2Fmips%2Firis6.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Firis6.h?ref=9ec36da574f8272705a3ead59bbd289f23793429", "patch": "@@ -96,6 +96,9 @@ Boston, MA 02111-1307, USA.  */\n #undef PREFERRED_DEBUGGING_TYPE\n #define PREFERRED_DEBUGGING_TYPE DWARF2_DEBUG\n \n+/* Force the generation of dwarf .debug_frame sections even if not\n+   compiling -g.  This guarantees that we can unwind the stack. */\n+#define DWARF2_FRAME_INFO 1\n /* The size in bytes of a DWARF field indicating an offset or length\n    relative to a debug info section, specified to be 4 bytes in the DWARF-2\n    specification.  The SGI/MIPS ABI defines it to be the same as PTR_SIZE.  */"}, {"sha": "52b8c8e25ea299b96ebfaa0c7ea253634de47fe9", "filename": "gcc/config/mips/mips.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ec36da574f8272705a3ead59bbd289f23793429/gcc%2Fconfig%2Fmips%2Fmips.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ec36da574f8272705a3ead59bbd289f23793429/gcc%2Fconfig%2Fmips%2Fmips.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.h?ref=9ec36da574f8272705a3ead59bbd289f23793429", "patch": "@@ -3992,7 +3992,7 @@ while (0)\n #define ASM_OUTPUT_SOURCE_LINE(STREAM, LINE)\t\t\t\t\\\n   mips_output_lineno (STREAM, LINE)\n \n-/* The MIPS implementation uses some labels for it's own purpose.  The\n+/* The MIPS implementation uses some labels for its own purpose.  The\n    following lists what labels are created, and are all formed by the\n    pattern $L[a-z].*.  The machine independent portion of GCC creates\n    labels matching:  $L[A-Z][0-9]+ and $L[0-9]+."}, {"sha": "fae82e54fab183d238e3bdb73d088907e337dbde", "filename": "gcc/config/mips/mips.md", "status": "modified", "additions": 10, "deletions": 6, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ec36da574f8272705a3ead59bbd289f23793429/gcc%2Fconfig%2Fmips%2Fmips.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ec36da574f8272705a3ead59bbd289f23793429/gcc%2Fconfig%2Fmips%2Fmips.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.md?ref=9ec36da574f8272705a3ead59bbd289f23793429", "patch": "@@ -4626,7 +4626,7 @@ move\\\\t%0,%z4\\\\n\\\\\n \n (define_expand \"reload_indi\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=b\")\n-\t(match_operand:DI 1 \"movdi_operand\" \"b\"))\n+\t(match_operand:DI 1 \"\" \"b\"))\n    (clobber (match_operand:TI 2 \"register_operand\" \"=&d\"))]\n   \"TARGET_64BIT\"\n   \"\n@@ -4641,10 +4641,12 @@ move\\\\t%0,%z4\\\\n\\\\\n       if (GET_CODE (operands[1]) == MEM)\n \t{\n \t  rtx memword, offword, hiword, loword;\n+\t  rtx addr = find_replacement (&XEXP (operands[1], 0));\n+\t  rtx op1 = change_address (operands[1], VOIDmode, addr);\n \n \t  scratch = gen_rtx (REG, SImode, REGNO (scratch));\n-\t  memword = change_address (operands[1], SImode, NULL_RTX);\n-\t  offword = change_address (adj_offsettable_operand (operands[1], 4),\n+\t  memword = change_address (op1, SImode, NULL_RTX);\n+\t  offword = change_address (adj_offsettable_operand (op1, 4),\n \t\t\t\t    SImode, NULL_RTX);\n \t  if (BYTES_BIG_ENDIAN)\n \t    {\n@@ -4693,7 +4695,7 @@ move\\\\t%0,%z4\\\\n\\\\\n ;; use a TImode scratch reg.\n \n (define_expand \"reload_outdi\"\n-  [(set (match_operand:DI 0 \"general_operand\" \"=b\")\n+  [(set (match_operand:DI 0 \"\" \"=b\")\n \t(match_operand:DI 1 \"se_register_operand\" \"b\"))\n    (clobber (match_operand:TI 2 \"register_operand\" \"=&d\"))]\n   \"TARGET_64BIT\"\n@@ -4715,10 +4717,12 @@ move\\\\t%0,%z4\\\\n\\\\\n       if (GET_CODE (operands[0]) == MEM)\n \t{\n \t  rtx scratch, memword, offword, hiword, loword;\n+\t  rtx addr = find_replacement (&XEXP (operands[0], 0));\n+\t  rtx op0 = change_address (operands[0], VOIDmode, addr);\n \n \t  scratch = gen_rtx (REG, SImode, REGNO (operands[2]));\n-\t  memword = change_address (operands[0], SImode, NULL_RTX);\n-\t  offword = change_address (adj_offsettable_operand (operands[0], 4),\n+\t  memword = change_address (op0, SImode, NULL_RTX);\n+\t  offword = change_address (adj_offsettable_operand (op0, 4),\n \t\t\t\t    SImode, NULL_RTX);\n \t  if (BYTES_BIG_ENDIAN)\n \t    {"}, {"sha": "8c2fb1f784b6427272e4947ce271878bc0756602", "filename": "gcc/config/ns32k/ns32k.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ec36da574f8272705a3ead59bbd289f23793429/gcc%2Fconfig%2Fns32k%2Fns32k.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ec36da574f8272705a3ead59bbd289f23793429/gcc%2Fconfig%2Fns32k%2Fns32k.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fns32k%2Fns32k.c?ref=9ec36da574f8272705a3ead59bbd289f23793429", "patch": "@@ -495,7 +495,7 @@ print_operand (file, x, code)\n \t  u.i[0] = CONST_DOUBLE_LOW (x); u.i[1] = CONST_DOUBLE_HIGH (x);\n \t  PUT_IMMEDIATE_PREFIX(file);\n #ifdef SEQUENT_ASM\n-\t  /* Sequent likes it's floating point constants as integers */\n+\t  /* Sequent likes its floating point constants as integers */\n \t  fprintf (file, \"0Dx%08x%08x\", u.i[1], u.i[0]);\n #else\n #ifdef ENCORE_ASM"}, {"sha": "77bae75405be7bc96ec03bcf3dc39ab301bacfc6", "filename": "gcc/config/sparc/sparc.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ec36da574f8272705a3ead59bbd289f23793429/gcc%2Fconfig%2Fsparc%2Fsparc.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ec36da574f8272705a3ead59bbd289f23793429/gcc%2Fconfig%2Fsparc%2Fsparc.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsparc.h?ref=9ec36da574f8272705a3ead59bbd289f23793429", "patch": "@@ -1390,7 +1390,7 @@ extern char leaf_reg_remap[];\n    : gen_rtx_MEM (MODE, gen_rtx_PLUS (Pmode, frame_pointer_rtx,\t\\\n \t\t\t\t  GEN_INT (STARTING_FRAME_OFFSET))))\n \n-/* Get_secondary_mem widens it's argument to BITS_PER_WORD which loses on v9\n+/* Get_secondary_mem widens its argument to BITS_PER_WORD which loses on v9\n    because the movsi and movsf patterns don't handle r/f moves.\n    For v8 we copy the default definition.  */\n #define SECONDARY_MEMORY_NEEDED_MODE(MODE) \\"}, {"sha": "ff77c99a4a4c7eee1c8e168ebe59215809613072", "filename": "gcc/config/sparc/sparc.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ec36da574f8272705a3ead59bbd289f23793429/gcc%2Fconfig%2Fsparc%2Fsparc.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ec36da574f8272705a3ead59bbd289f23793429/gcc%2Fconfig%2Fsparc%2Fsparc.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsparc.md?ref=9ec36da574f8272705a3ead59bbd289f23793429", "patch": "@@ -5614,7 +5614,7 @@ if (! TARGET_ARCH64)\n   if (GET_CODE (XEXP (operands[0], 0)) == LABEL_REF)\n     {\n       /* This is really a PIC sequence.  We want to represent\n-\t it as a funny jump so it's delay slots can be filled. \n+\t it as a funny jump so its delay slots can be filled. \n \n \t ??? But if this really *is* a CALL, will not it clobber the\n \t call-clobbered registers?  We lose this if it is a JUMP_INSN."}, {"sha": "8508761fa19eb0708eef2c5b83537c2a994e77e1", "filename": "gcc/configure", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ec36da574f8272705a3ead59bbd289f23793429/gcc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ec36da574f8272705a3ead59bbd289f23793429/gcc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure?ref=9ec36da574f8272705a3ead59bbd289f23793429", "patch": "@@ -2261,6 +2261,14 @@ for machine in $build $host $target; do\n \t\t    ;;\n \t\tesac\n \t\t;;\n+ \talpha*-*-vxworks*)\n+\t\ttm_file=\"${tm_file} dbx.h alpha/vxworks.h\"\n+\t\tif  x$gas != xyes \n+\t\tthen\n+\t\t\textra_passes=\"mips-tfile mips-tdump\"\n+\t\tfi\n+\t\tuse_collect2=yes\n+\t\t;;\n \talpha*-*-winnt*)\n \t\ttm_file=\"${tm_file} alpha/win-nt.h\"\n \t\txm_file=\"${xm_file} config/winnt/xm-winnt.h alpha/xm-winnt.h\"\n@@ -5139,7 +5147,7 @@ fi\n \n # Figure out what assembler alignment features are present.\n echo $ac_n \"checking assembler alignment features\"\"... $ac_c\" 1>&6\n-echo \"configure:5143: checking assembler alignment features\" >&5\n+echo \"configure:5151: checking assembler alignment features\" >&5\n gcc_cv_as=\n gcc_cv_as_alignment_features=\n if [ -x as$host_exeext ]; then"}, {"sha": "f13e94221b4d7184272c988c2920a54dc22b1a6d", "filename": "gcc/configure.in", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ec36da574f8272705a3ead59bbd289f23793429/gcc%2Fconfigure.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ec36da574f8272705a3ead59bbd289f23793429/gcc%2Fconfigure.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure.in?ref=9ec36da574f8272705a3ead59bbd289f23793429", "patch": "@@ -417,6 +417,14 @@ for machine in $build $host $target; do\n \t\t    ;;\n \t\tesac\n \t\t;;\n+ \talpha*-*-vxworks*)\n+\t\ttm_file=\"${tm_file} dbx.h alpha/vxworks.h\"\n+\t\tif [ x$gas != xyes ]\n+\t\tthen\n+\t\t\textra_passes=\"mips-tfile mips-tdump\"\n+\t\tfi\n+\t\tuse_collect2=yes\n+\t\t;;\n \talpha*-*-winnt*)\n \t\ttm_file=\"${tm_file} alpha/win-nt.h\"\n \t\txm_file=\"${xm_file} config/winnt/xm-winnt.h alpha/xm-winnt.h\""}, {"sha": "d96b6d8d53147579d1a96ee885cd317a7bbc39cf", "filename": "gcc/configure.lang", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ec36da574f8272705a3ead59bbd289f23793429/gcc%2Fconfigure.lang", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ec36da574f8272705a3ead59bbd289f23793429/gcc%2Fconfigure.lang", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure.lang?ref=9ec36da574f8272705a3ead59bbd289f23793429", "patch": "@@ -3,7 +3,7 @@\n # subdirectories which conform to the old GCC configure mechanism\n # for such subdirectories.\n \n-# Copyright (C) 1997 Free Software Foundation, Inc.\n+# Copyright (C) 1997, 1998 Free Software Foundation, Inc.\n \n #This file is part of GNU CC.\n "}, {"sha": "b05c948481bb0e2241efa3f7a81e69454df53ec2", "filename": "gcc/cplus-dem.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ec36da574f8272705a3ead59bbd289f23793429/gcc%2Fcplus-dem.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ec36da574f8272705a3ead59bbd289f23793429/gcc%2Fcplus-dem.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcplus-dem.c?ref=9ec36da574f8272705a3ead59bbd289f23793429", "patch": "@@ -1,5 +1,5 @@\n /* Demangler for GNU C++ \n-   Copyright 1989, 1991, 1994, 1995, 1996, 1997 Free Software Foundation, Inc.\n+   Copyright 1989, 91, 94, 95, 96, 97, 1998 Free Software Foundation, Inc.\n    Written by James Clark (jjc@jclark.uucp)\n    Rewritten by Fred Fish (fnf@cygnus.com) for ARM and Lucid demangling\n    \n@@ -3128,8 +3128,8 @@ forget_types (work)\n      foo__FiR3fooT1T2T1T2\n      __ct__3fooFiR3fooT1T2T1T2\n \n-   Note that g++ bases it's type numbers starting at zero and counts all\n-   previously seen types, while lucid/ARM bases it's type numbers starting\n+   Note that g++ bases its type numbers starting at zero and counts all\n+   previously seen types, while lucid/ARM bases its type numbers starting\n    at one and only considers types after it has seen the 'F' character\n    indicating the start of the function args.  For lucid/ARM style, we\n    account for this difference by discarding any previously seen types when"}, {"sha": "868b7de33985204fafd573f79e309216bcd27661", "filename": "gcc/cse.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ec36da574f8272705a3ead59bbd289f23793429/gcc%2Fcse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ec36da574f8272705a3ead59bbd289f23793429/gcc%2Fcse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcse.c?ref=9ec36da574f8272705a3ead59bbd289f23793429", "patch": "@@ -1541,7 +1541,7 @@ invalidate (x, full_mode)\n       register unsigned hash = HASH (x, GET_MODE (x));\n \n       /* Remove REGNO from any quantity list it might be on and indicate\n-\t that it's value might have changed.  If it is a pseudo, remove its\n+\t that its value might have changed.  If it is a pseudo, remove its\n \t entry from the hash table.\n \n \t For a hard register, we do the first two actions above for any"}, {"sha": "5ab3736006b693105e96f7f3d1576fc67822fe03", "filename": "gcc/dbxout.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ec36da574f8272705a3ead59bbd289f23793429/gcc%2Fdbxout.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ec36da574f8272705a3ead59bbd289f23793429/gcc%2Fdbxout.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdbxout.c?ref=9ec36da574f8272705a3ead59bbd289f23793429", "patch": "@@ -1960,7 +1960,7 @@ dbxout_symbol_location (decl, type, suffix, home)\n   /* Don't mention a variable at all\n      if it was completely optimized into nothingness.\n      \n-     If the decl was from an inline function, then it's rtl\n+     If the decl was from an inline function, then its rtl\n      is not identically the rtl that was used in this\n      particular compilation.  */\n   if (GET_CODE (home) == REG)"}, {"sha": "61b16ca3fee8e7269709c6fe14001e4dd72b19e1", "filename": "gcc/dwarf2out.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ec36da574f8272705a3ead59bbd289f23793429/gcc%2Fdwarf2out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ec36da574f8272705a3ead59bbd289f23793429/gcc%2Fdwarf2out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2out.c?ref=9ec36da574f8272705a3ead59bbd289f23793429", "patch": "@@ -59,6 +59,9 @@ int\n dwarf2out_do_frame ()\n {\n   return (write_symbols == DWARF2_DEBUG\n+#ifdef DWARF2_FRAME_INFO\n+          || DWARF2_FRAME_INFO\n+#endif\n #ifdef DWARF2_UNWIND_INFO\n \t  || (flag_exceptions && ! exceptions_via_longjmp)\n #endif\n@@ -9188,7 +9191,7 @@ gen_block_die (stmt, context_die, depth)\n }\n \n /* Generate all of the decls declared within a given scope and (recursively)\n-   all of it's sub-blocks.  */\n+   all of its sub-blocks.  */\n \n static void\n decls_for_scope (stmt, context_die, depth)"}, {"sha": "2ca007a2003a5a7b94490777a608dee56ccd9870", "filename": "gcc/emit-rtl.c", "status": "modified", "additions": 19, "deletions": 4, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ec36da574f8272705a3ead59bbd289f23793429/gcc%2Femit-rtl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ec36da574f8272705a3ead59bbd289f23793429/gcc%2Femit-rtl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Femit-rtl.c?ref=9ec36da574f8272705a3ead59bbd289f23793429", "patch": "@@ -59,6 +59,7 @@ Boston, MA 02111-1307, USA.  */\n \n enum machine_mode byte_mode;\t/* Mode whose width is BITS_PER_UNIT.  */\n enum machine_mode word_mode;\t/* Mode whose width is BITS_PER_WORD.  */\n+enum machine_mode double_mode;\t/* Mode whose width is DOUBLE_TYPE_SIZE.  */\n enum machine_mode ptr_mode;\t/* Mode whose width is POINTER_SIZE.  */\n \n /* This is reset to LAST_VIRTUAL_REGISTER + 1 at the start of each function.\n@@ -3385,6 +3386,7 @@ init_emit_once (line_numbers)\n {\n   int i;\n   enum machine_mode mode;\n+  enum machine_mode double_mode;\n \n   no_line_numbers = ! line_numbers;\n \n@@ -3394,6 +3396,7 @@ init_emit_once (line_numbers)\n \n   byte_mode = VOIDmode;\n   word_mode = VOIDmode;\n+  double_mode = VOIDmode;\n \n   for (mode = GET_CLASS_NARROWEST_MODE (MODE_INT); mode != VOIDmode;\n        mode = GET_MODE_WIDER_MODE (mode))\n@@ -3407,6 +3410,18 @@ init_emit_once (line_numbers)\n \tword_mode = mode;\n     }\n \n+#ifndef DOUBLE_TYPE_SIZE\n+#define DOUBLE_TYPE_SIZE (BITS_PER_WORD * 2)\n+#endif\n+\n+  for (mode = GET_CLASS_NARROWEST_MODE (MODE_FLOAT); mode != VOIDmode;\n+       mode = GET_MODE_WIDER_MODE (mode))\n+    {\n+      if (GET_MODE_BITSIZE (mode) == DOUBLE_TYPE_SIZE\n+\t  && double_mode == VOIDmode)\n+\tdouble_mode = mode;\n+    }\n+\n   ptr_mode = mode_for_size (POINTER_SIZE, GET_MODE_CLASS (Pmode), 0);\n \n   /* Create the unique rtx's for certain rtx codes and operand values.  */\n@@ -3424,10 +3439,10 @@ init_emit_once (line_numbers)\n   else\n     const_true_rtx = gen_rtx_CONST_INT (VOIDmode, STORE_FLAG_VALUE);\n \n-  dconst0 = REAL_VALUE_ATOF (\"0\", DFmode);\n-  dconst1 = REAL_VALUE_ATOF (\"1\", DFmode);\n-  dconst2 = REAL_VALUE_ATOF (\"2\", DFmode);\n-  dconstm1 = REAL_VALUE_ATOF (\"-1\", DFmode);\n+  dconst0 = REAL_VALUE_ATOF (\"0\", double_mode);\n+  dconst1 = REAL_VALUE_ATOF (\"1\", double_mode);\n+  dconst2 = REAL_VALUE_ATOF (\"2\", double_mode);\n+  dconstm1 = REAL_VALUE_ATOF (\"-1\", double_mode);\n \n   for (i = 0; i <= 2; i++)\n     {"}, {"sha": "2f656c281f1f543eb124d0025be204509a3d96e2", "filename": "gcc/expmed.c", "status": "modified", "additions": 13, "deletions": 3, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ec36da574f8272705a3ead59bbd289f23793429/gcc%2Fexpmed.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ec36da574f8272705a3ead59bbd289f23793429/gcc%2Fexpmed.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpmed.c?ref=9ec36da574f8272705a3ead59bbd289f23793429", "patch": "@@ -93,9 +93,10 @@ init_expmed ()\n   /* Since we are on the permanent obstack, we must be sure we save this\n      spot AFTER we call start_sequence, since it will reuse the rtl it\n      makes.  */\n-\n   free_point = (char *) oballoc (0);\n \n+  reg = gen_rtx (REG, word_mode, 10000);\n+\n   zero_cost = rtx_cost (const0_rtx, 0);\n   add_cost = rtx_cost (gen_rtx_PLUS (word_mode, reg, reg), SET);\n \n@@ -2277,7 +2278,8 @@ expand_mult (mode, op0, op1, target, unsignedp)\n \t      rtx shift_subtarget = preserve ? 0 : accum;\n \t      rtx add_target\n \t\t= (opno == alg.ops - 1 && target != 0 && variant != add_variant\n-\t\t  ? target : 0);\n+\t\t   && ! preserve)\n+\t\t  ? target : 0;\n \t      rtx accum_target = preserve ? 0 : accum;\n \t      \n \t      switch (alg.op[opno])\n@@ -2746,6 +2748,7 @@ expand_divmod (rem_flag, code, mode, op0, op1, target, unsignedp)\n   optab optab1, optab2;\n   int op1_is_constant, op1_is_pow2;\n   int max_cost, extra_cost;\n+  static HOST_WIDE_INT last_div_const = 0;\n \n   op1_is_constant = GET_CODE (op1) == CONST_INT;\n   op1_is_pow2 = (op1_is_constant\n@@ -2855,8 +2858,15 @@ expand_divmod (rem_flag, code, mode, op0, op1, target, unsignedp)\n   size = GET_MODE_BITSIZE (mode);\n #endif\n \n+  /* Only deduct something for a REM if the last divide done was\n+     for a different constant.   Then set the constant of the last\n+     divide.  */\n   max_cost = div_cost[(int) compute_mode]\n-    - (rem_flag ? mul_cost[(int) compute_mode] + add_cost : 0);\n+    - (rem_flag && ! (last_div_const != 0 && op1_is_constant\n+\t\t      && INTVAL (op1) == last_div_const)\n+       ? mul_cost[(int) compute_mode] + add_cost : 0);\n+\n+  last_div_const = ! rem_flag && op1_is_constant ? INTVAL (op1) : 0;\n \n   /* Now convert to the best mode to use.  */\n   if (compute_mode != mode)"}, {"sha": "666d1ccc403148bf5654673b6de4a6632edc316f", "filename": "gcc/expr.c", "status": "modified", "additions": 46, "deletions": 18, "changes": 64, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ec36da574f8272705a3ead59bbd289f23793429/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ec36da574f8272705a3ead59bbd289f23793429/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=9ec36da574f8272705a3ead59bbd289f23793429", "patch": "@@ -239,13 +239,22 @@ init_expr_once ()\n {\n   rtx insn, pat;\n   enum machine_mode mode;\n+  rtx mem, mem1;\n+  char *free_point;\n+\n+  start_sequence ();\n+\n+  /* Since we are on the permanent obstack, we must be sure we save this\n+     spot AFTER we call start_sequence, since it will reuse the rtl it\n+     makes.  */\n+  free_point = (char *) oballoc (0);\n+\n   /* Try indexing by frame ptr and try by stack ptr.\n      It is known that on the Convex the stack ptr isn't a valid index.\n      With luck, one or the other is valid on any machine.  */\n-  rtx mem = gen_rtx_MEM (VOIDmode, stack_pointer_rtx);\n-  rtx mem1 = gen_rtx_MEM (VOIDmode, frame_pointer_rtx);\n+  mem = gen_rtx_MEM (VOIDmode, stack_pointer_rtx);\n+  mem1 = gen_rtx_MEM (VOIDmode, frame_pointer_rtx);\n \n-  start_sequence ();\n   insn = emit_insn (gen_rtx_SET (0, NULL_RTX, NULL_RTX));\n   pat = PATTERN (insn);\n \n@@ -296,6 +305,7 @@ init_expr_once ()\n     }\n \n   end_sequence ();\n+  obfree (free_point);\n }\n       \n /* This is run at the start of compiling a function.  */\n@@ -5715,13 +5725,26 @@ expand_expr (exp, target, tmode, modifier)\n \ttemp = gen_rtx_MEM (mode, op0);\n \t/* If address was computed by addition,\n \t   mark this as an element of an aggregate.  */\n-\tif (TREE_CODE (TREE_OPERAND (exp, 0)) == PLUS_EXPR\n-\t    || (TREE_CODE (TREE_OPERAND (exp, 0)) == SAVE_EXPR\n-\t\t&& TREE_CODE (TREE_OPERAND (TREE_OPERAND (exp, 0), 0)) == PLUS_EXPR)\n+\tif (TREE_CODE (exp1) == PLUS_EXPR\n+\t    || (TREE_CODE (exp1) == SAVE_EXPR\n+\t\t&& TREE_CODE (TREE_OPERAND (exp1, 0)) == PLUS_EXPR)\n \t    || AGGREGATE_TYPE_P (TREE_TYPE (exp))\n+\t    /* If the pointer is actually a REFERENCE_TYPE, this could\n+\t       be pointing into some aggregate too.  */\n+\t    || TREE_CODE (TREE_TYPE (exp1)) == REFERENCE_TYPE\n \t    || (TREE_CODE (exp1) == ADDR_EXPR\n \t\t&& (exp2 = TREE_OPERAND (exp1, 0))\n-\t\t&& AGGREGATE_TYPE_P (TREE_TYPE (exp2))))\n+\t\t&& AGGREGATE_TYPE_P (TREE_TYPE (exp2)))\n+\t    /* This may have been an array reference to the first element\n+\t       that was optimized away from being an addition.  */\n+\t    || (TREE_CODE (exp1) == NOP_EXPR\n+\t\t&& ((TREE_CODE (TREE_TYPE (TREE_OPERAND (exp1, 0)))\n+\t\t     == REFERENCE_TYPE)\n+\t\t    || ((TREE_CODE (TREE_TYPE (TREE_OPERAND (exp1, 0)))\n+\t\t\t == POINTER_TYPE)\n+\t\t\t&& (AGGREGATE_TYPE_P\n+\t\t\t    (TREE_TYPE (TREE_TYPE\n+\t\t\t\t\t(TREE_OPERAND (exp1, 0)))))))))\n \t  MEM_IN_STRUCT_P (temp) = 1;\n \tMEM_VOLATILE_P (temp) = TREE_THIS_VOLATILE (exp) | flag_volatile;\n \tMEM_ALIAS_SET (temp) = get_alias_set (exp);\n@@ -7916,13 +7939,14 @@ expand_builtin_setjmp (buf_addr, target, first_label, next_label)\n \n   emit_queue ();\n \n+  /* We store the frame pointer and the address of lab1 in the buffer\n+     and use the rest of it for the stack save area, which is\n+     machine-dependent.  */\n+\n #ifndef BUILTIN_SETJMP_FRAME_VALUE\n #define BUILTIN_SETJMP_FRAME_VALUE virtual_stack_vars_rtx\n #endif\n \n-  /* We store the frame pointer and the address of lab1 in the buffer\n-     and use the rest of it for the stack save area, which is\n-     machine-dependent.  */\n   emit_move_insn (gen_rtx_MEM (Pmode, buf_addr),\n \t\t  BUILTIN_SETJMP_FRAME_VALUE);\n   emit_move_insn (validize_mem\n@@ -10148,10 +10172,8 @@ do_jump (exp, if_false_label, if_true_label)\n       {\n \ttree inner_type = TREE_TYPE (TREE_OPERAND (exp, 0));\n \n-\tif (integer_zerop (TREE_OPERAND (exp, 1)))\n-\t  do_jump (TREE_OPERAND (exp, 0), if_true_label, if_false_label);\n-\telse if (GET_MODE_CLASS (TYPE_MODE (inner_type)) == MODE_COMPLEX_FLOAT\n-\t\t || GET_MODE_CLASS (TYPE_MODE (inner_type)) == MODE_COMPLEX_INT)\n+\tif (GET_MODE_CLASS (TYPE_MODE (inner_type)) == MODE_COMPLEX_FLOAT\n+\t    || GET_MODE_CLASS (TYPE_MODE (inner_type)) == MODE_COMPLEX_INT)\n \t  {\n \t    tree exp0 = save_expr (TREE_OPERAND (exp, 0));\n \t    tree exp1 = save_expr (TREE_OPERAND (exp, 1));\n@@ -10174,6 +10196,10 @@ do_jump (exp, if_false_label, if_true_label)\n \t\t\t\t\t\t  exp1)))))),\n \t       if_false_label, if_true_label);\n \t  }\n+\n+\telse if (integer_zerop (TREE_OPERAND (exp, 1)))\n+\t  do_jump (TREE_OPERAND (exp, 0), if_true_label, if_false_label);\n+\n \telse if (GET_MODE_CLASS (TYPE_MODE (inner_type)) == MODE_INT\n \t\t && !can_compare_p (TYPE_MODE (inner_type)))\n \t  do_jump_by_parts_equality (exp, if_false_label, if_true_label);\n@@ -10186,10 +10212,8 @@ do_jump (exp, if_false_label, if_true_label)\n       {\n \ttree inner_type = TREE_TYPE (TREE_OPERAND (exp, 0));\n \n-\tif (integer_zerop (TREE_OPERAND (exp, 1)))\n-\t  do_jump (TREE_OPERAND (exp, 0), if_false_label, if_true_label);\n-\telse if (GET_MODE_CLASS (TYPE_MODE (inner_type)) == MODE_COMPLEX_FLOAT\n-\t\t || GET_MODE_CLASS (TYPE_MODE (inner_type)) == MODE_COMPLEX_INT)\n+\tif (GET_MODE_CLASS (TYPE_MODE (inner_type)) == MODE_COMPLEX_FLOAT\n+\t    || GET_MODE_CLASS (TYPE_MODE (inner_type)) == MODE_COMPLEX_INT)\n \t  {\n \t    tree exp0 = save_expr (TREE_OPERAND (exp, 0));\n \t    tree exp1 = save_expr (TREE_OPERAND (exp, 1));\n@@ -10212,6 +10236,10 @@ do_jump (exp, if_false_label, if_true_label)\n \t\t\t\t\t\t  exp1)))))),\n \t       if_false_label, if_true_label);\n \t  }\n+\n+\telse if (integer_zerop (TREE_OPERAND (exp, 1)))\n+\t  do_jump (TREE_OPERAND (exp, 0), if_false_label, if_true_label);\n+\n \telse if (GET_MODE_CLASS (TYPE_MODE (inner_type)) == MODE_INT\n \t\t && !can_compare_p (TYPE_MODE (inner_type)))\n \t  do_jump_by_parts_equality (exp, if_true_label, if_false_label);"}, {"sha": "4b05fc70c46ca9fcff18f6f39e43fb6a0693bd97", "filename": "gcc/final.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ec36da574f8272705a3ead59bbd289f23793429/gcc%2Ffinal.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ec36da574f8272705a3ead59bbd289f23793429/gcc%2Ffinal.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffinal.c?ref=9ec36da574f8272705a3ead59bbd289f23793429", "patch": "@@ -76,8 +76,9 @@ Boston, MA 02111-1307, USA.  */\n #if defined (USG) || !defined (HAVE_STAB_H)\n #include \"gstab.h\"  /* If doing DBX on sysV, use our own stab.h.  */\n #else\n-#include <stab.h>  /* On BSD, use the system's stab.h.  */\n-#endif /* not USG */\n+#include <stab.h>\n+#endif\n+\n #endif /* DBX_DEBUGGING_INFO || XCOFF_DEBUGGING_INFO */\n \n #ifdef XCOFF_DEBUGGING_INFO"}, {"sha": "37c1bd96a91bbb2aab435303b91b707bb6a69b38", "filename": "gcc/flags.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ec36da574f8272705a3ead59bbd289f23793429/gcc%2Fflags.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ec36da574f8272705a3ead59bbd289f23793429/gcc%2Fflags.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fflags.h?ref=9ec36da574f8272705a3ead59bbd289f23793429", "patch": "@@ -1,5 +1,5 @@\n /* Compilation switch flag definitions for GNU CC.\n-   Copyright (C) 1987, 88, 94-97, 1998 Free Software Foundation, Inc.\n+   Copyright (C) 1987, 88, 94, 95, 96, 97, 1998 Free Software Foundation, Inc.\n \n This file is part of GNU CC.\n "}, {"sha": "eb6c2a0079ad084959132ecc8f2632db7bf0a920", "filename": "gcc/flow.c", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ec36da574f8272705a3ead59bbd289f23793429/gcc%2Fflow.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ec36da574f8272705a3ead59bbd289f23793429/gcc%2Fflow.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fflow.c?ref=9ec36da574f8272705a3ead59bbd289f23793429", "patch": "@@ -2381,7 +2381,7 @@ find_auto_inc (needed, x, insn)\n \t    {\n \t      /* We have *p followed sometime later by q = p+size.\n \t\t Both p and q must be live afterward,\n-\t\t and q is not used between INSN and it's assignment.\n+\t\t and q is not used between INSN and its assignment.\n \t\t Change it to q = p, ...*q..., q = q+size.\n \t\t Then fall into the usual case.  */\n \t      rtx insns, temp;\n@@ -3132,6 +3132,7 @@ print_rtl_with_bb (outf, rtx_first)\n      FILE *outf;\n      rtx rtx_first;\n {\n+  extern int flag_dump_unnumbered;\n   register rtx tmp_rtx;\n \n   if (rtx_first == 0)\n@@ -3196,7 +3197,9 @@ print_rtl_with_bb (outf, rtx_first)\n \t  if ((bb = end[INSN_UID (tmp_rtx)]) >= 0)\n \t    fprintf (outf, \";; End of basic block %d\\n\", bb);\n \n-\t  putc ('\\n', outf);\n+\t  if (! flag_dump_unnumbered\n+\t      || GET_CODE (tmp_rtx) != NOTE || NOTE_LINE_NUMBER (tmp_rtx) < 0)\n+\t    putc ('\\n', outf);\n \t}\n     }\n }"}, {"sha": "8849608795a8c0a06c0965fbe4ef550ec7edd9e5", "filename": "gcc/fold-const.c", "status": "modified", "additions": 19, "deletions": 10, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ec36da574f8272705a3ead59bbd289f23793429/gcc%2Ffold-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ec36da574f8272705a3ead59bbd289f23793429/gcc%2Ffold-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const.c?ref=9ec36da574f8272705a3ead59bbd289f23793429", "patch": "@@ -3293,14 +3293,16 @@ fold_range_test (exp)\n \t   && operand_equal_p (lhs, rhs, 0))\n     {\n       /* If simple enough, just rewrite.  Otherwise, make a SAVE_EXPR\n-\t unless we are at top level, in which case we can't do this.  */\n+\t unless we are at top level or LHS contains a PLACEHOLDER_EXPR, in\n+\t which cases we can't do this.  */\n       if (simple_operand_p (lhs))\n \treturn build (TREE_CODE (exp) == TRUTH_ANDIF_EXPR\n \t\t      ? TRUTH_AND_EXPR : TRUTH_OR_EXPR,\n \t\t      TREE_TYPE (exp), TREE_OPERAND (exp, 0),\n \t\t      TREE_OPERAND (exp, 1));\n \n-      else if (current_function_decl != 0)\n+      else if (current_function_decl != 0\n+\t       && ! contains_placeholder_p (lhs))\n \t{\n \t  tree common = save_expr (lhs);\n \n@@ -3997,7 +3999,9 @@ fold (expr)\n       else if ((TREE_CODE (arg1) == COND_EXPR\n \t\t|| (TREE_CODE_CLASS (TREE_CODE (arg1)) == '<'\n \t\t    && TREE_CODE_CLASS (code) != '<'))\n-\t       && (! TREE_SIDE_EFFECTS (arg0) || current_function_decl != 0))\n+\t       && (! TREE_SIDE_EFFECTS (arg0)\n+\t\t   || (current_function_decl != 0\n+\t\t       && ! contains_placeholder_p (arg0))))\n \t{\n \t  tree test, true_value, false_value;\n \t  tree lhs = 0, rhs = 0;\n@@ -4068,7 +4072,9 @@ fold (expr)\n       else if ((TREE_CODE (arg0) == COND_EXPR\n \t\t|| (TREE_CODE_CLASS (TREE_CODE (arg0)) == '<'\n \t\t    && TREE_CODE_CLASS (code) != '<'))\n-\t       && (! TREE_SIDE_EFFECTS (arg1) || current_function_decl != 0))\n+\t       && (! TREE_SIDE_EFFECTS (arg1)\n+\t\t   || (current_function_decl != 0\n+\t\t       && ! contains_placeholder_p (arg1))))\n \t{\n \t  tree test, true_value, false_value;\n \t  tree lhs = 0, rhs = 0;\n@@ -4633,7 +4639,8 @@ fold (expr)\n \t  if (real_onep (arg1))\n \t    return non_lvalue (convert (type, arg0));\n \t  /* x*2 is x+x */\n-\t  if (! wins && real_twop (arg1) && current_function_decl != 0)\n+\t  if (! wins && real_twop (arg1) && current_function_decl != 0\n+\t      && ! contains_placeholder_p (arg0))\n \t    {\n \t      tree arg = save_expr (arg0);\n \t      return build (PLUS_EXPR, type, arg, arg);\n@@ -5656,14 +5663,16 @@ fold (expr)\n \t  return t1 ? t1 : t;\n \t}\n \n-      /* If this is a comparison of complex values and either or both\n-\t sizes are a COMPLEX_EXPR, it is best to split up the comparisons\n-\t and join them with a TRUTH_ANDIF_EXPR or TRUTH_ORIF_EXPR.  This\n-\t may prevent needless evaluations.  */\n+      /* If this is a comparison of complex values and either or both sides\n+\t are a COMPLEX_EXPR or COMPLEX_CST, it is best to split up the\n+\t comparisons and join them with a TRUTH_ANDIF_EXPR or TRUTH_ORIF_EXPR.\n+\t This may prevent needless evaluations.  */\n       if ((code == EQ_EXPR || code == NE_EXPR)\n \t  && TREE_CODE (TREE_TYPE (arg0)) == COMPLEX_TYPE\n \t  && (TREE_CODE (arg0) == COMPLEX_EXPR\n-\t      || TREE_CODE (arg1) == COMPLEX_EXPR))\n+\t      || TREE_CODE (arg1) == COMPLEX_EXPR\n+\t      || TREE_CODE (arg0) == COMPLEX_CST\n+\t      || TREE_CODE (arg1) == COMPLEX_CST))\n \t{\n \t  tree subtype = TREE_TYPE (TREE_TYPE (arg0));\n \t  tree real0, imag0, real1, imag1;"}, {"sha": "9150ebc2bac4ef41d371ba125612ecd99d77db64", "filename": "gcc/function.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ec36da574f8272705a3ead59bbd289f23793429/gcc%2Ffunction.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ec36da574f8272705a3ead59bbd289f23793429/gcc%2Ffunction.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffunction.c?ref=9ec36da574f8272705a3ead59bbd289f23793429", "patch": "@@ -1375,7 +1375,7 @@ put_var_into_stack (decl)\n \n   context = decl_function_context (decl);\n \n-  /* Get the current rtl used for this object and it's original mode.  */\n+  /* Get the current rtl used for this object and its original mode.  */\n   reg = TREE_CODE (decl) == SAVE_EXPR ? SAVE_EXPR_RTL (decl) : DECL_RTL (decl);\n \n   /* No need to do anything if decl has no rtx yet\n@@ -4835,7 +4835,7 @@ setjmp_protect (block)\n \t    || (GET_CODE (DECL_RTL (decl)) == MEM\n \t\t&& GET_CODE (XEXP (DECL_RTL (decl), 0)) == ADDRESSOF))\n \t/* If this variable came from an inline function, it must be\n-\t   that it's life doesn't overlap the setjmp.  If there was a\n+\t   that its life doesn't overlap the setjmp.  If there was a\n \t   setjmp in the function, it would already be in memory.  We\n \t   must exclude such variable because their DECL_RTL might be\n \t   set to strange things such as virtual_stack_vars_rtx.  */"}, {"sha": "8661aa2b62462039312e8876483f59ae78f4403b", "filename": "gcc/gcc.1", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ec36da574f8272705a3ead59bbd289f23793429/gcc%2Fgcc.1", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ec36da574f8272705a3ead59bbd289f23793429/gcc%2Fgcc.1", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc.1?ref=9ec36da574f8272705a3ead59bbd289f23793429", "patch": "@@ -3547,7 +3547,7 @@ be compiled with the same\n value.\n .TP\n .B \\-nocpp\n-Tell the MIPS assembler to not run it's preprocessor over user\n+Tell the MIPS assembler to not run its preprocessor over user\n assembler files (with a `\\|\\c\n .B .s\\c\n \\&\\|' suffix) when assembling them."}, {"sha": "7117d60381405dd1375aa2b72ccdc543fc377c8b", "filename": "gcc/gcc.c", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ec36da574f8272705a3ead59bbd289f23793429/gcc%2Fgcc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ec36da574f8272705a3ead59bbd289f23793429/gcc%2Fgcc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc.c?ref=9ec36da574f8272705a3ead59bbd289f23793429", "patch": "@@ -321,7 +321,7 @@ or with constant text in a single argument.\n         This allows config.h to specify part of the spec for running as.\n  %A\tprocess ASM_FINAL_SPEC as a spec.  A capital A is actually\n \tused here.  This can be used to run a post-processor after the\n-\tassembler has done it's job.\n+\tassembler has done its job.\n  %D\tDump out a -L option for each directory in startfile_prefixes.\n \tIf multilib_dir is set, extra entries are generated with it affixed.\n  %l     process LINK_SPEC as a spec.\n@@ -749,6 +749,12 @@ static int n_default_compilers\n /* We want %{T*} after %{L*} and %D so that it can be used to specify linker\n    scripts which exist in user specified directories, or in standard\n    directories.  */\n+#ifdef LINK_COMMAND_SPEC\n+/* Provide option to override link_command_spec from machine specific\n+   configuration files.  */\n+static char *link_command_spec = \n+\tLINK_COMMAND_SPEC;\n+#else\n #ifdef LINK_LIBGCC_SPECIAL\n /* Don't generate -L options.  */\n static char *link_command_spec = \"\\\n@@ -774,6 +780,7 @@ static char *link_command_spec = \"\\\n \t\t\t%{T*}\\\n \t\t\t\\n }}}}}}\";\n #endif\n+#endif\n \n /* A vector of options to give to the linker.\n    These options are accumulated by %x,"}, {"sha": "686bf5c749a2aa1c67be280bc773cb77337017d8", "filename": "gcc/genattrtab.c", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ec36da574f8272705a3ead59bbd289f23793429/gcc%2Fgenattrtab.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ec36da574f8272705a3ead59bbd289f23793429/gcc%2Fgenattrtab.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgenattrtab.c?ref=9ec36da574f8272705a3ead59bbd289f23793429", "patch": "@@ -341,7 +341,9 @@ static char *alternative_name;\n \n int reload_completed = 0;\n \n-/* Similarly since PRESERVE_DEATH_INFO_REGNO_P might reference \"optimize\".  */\n+/* Some machines test `optimize' in macros called from rtlanal.c, so we need\n+   to define it here.  */\n+\n int optimize = 0;\n \n /* Simplify an expression.  Only call the routine if there is something to\n@@ -2125,7 +2127,7 @@ expand_units ()\n \t  if (unit->needs_range_function)\n \t    {\n \t      /* Compute the blockage range function and make an attribute\n-\t\t for writing it's value.  */\n+\t\t for writing its value.  */\n \t      newexp = operate_exp (RANGE_OP, min_blockage, max_blockage);\n \t      newexp = simplify_knowing (newexp, unit->condexp);\n \n@@ -4404,8 +4406,7 @@ gen_unit (def)\n   unit->condexp = insert_right_side (IOR, unit->condexp, op->condexp, -2, -2);\n }\n \f\n-/* Given a piece of RTX, print a C expression to test it's truth value.\n-\n+/* Given a piece of RTX, print a C expression to test its truth value.\n    We use AND and IOR both for logical and bit-wise operations, so \n    interpret them as logical unless they are inside a comparison expression.\n    The first bit of FLAGS will be non-zero in that case."}, {"sha": "f7548ceda0ce8366b41c7b988ec46563317dba44", "filename": "gcc/gencheck.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ec36da574f8272705a3ead59bbd289f23793429/gcc%2Fgencheck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ec36da574f8272705a3ead59bbd289f23793429/gcc%2Fgencheck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgencheck.c?ref=9ec36da574f8272705a3ead59bbd289f23793429", "patch": "@@ -38,10 +38,12 @@ int main (argc, argv)\n      char *argv[];\n {\n   int i;\n+\n   switch (argc)\n     {\n     case 1:\n       break;\n+\n     default:\n       usage ();\n       exit (1);"}, {"sha": "e4341b8601b6ee116844ef0f39e46bfa5d335f21", "filename": "gcc/genemit.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ec36da574f8272705a3ead59bbd289f23793429/gcc%2Fgenemit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ec36da574f8272705a3ead59bbd289f23793429/gcc%2Fgenemit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgenemit.c?ref=9ec36da574f8272705a3ead59bbd289f23793429", "patch": "@@ -778,6 +778,7 @@ from the machine description file `md'.  */\\n\\n\");\n   printf (\"#include \\\"insn-config.h\\\"\\n\\n\");\n   printf (\"#include \\\"insn-flags.h\\\"\\n\\n\");\n   printf (\"#include \\\"insn-codes.h\\\"\\n\\n\");\n+  printf (\"#include \\\"reload.h\\\"\\n\");\n   printf (\"extern char *insn_operand_constraint[][MAX_RECOG_OPERANDS];\\n\\n\");\n   printf (\"extern rtx recog_operand[];\\n\");\n   printf (\"#define operands emit_operand\\n\\n\");"}, {"sha": "920727114151683d8663aa49a7e3e5a76ad1ce40", "filename": "gcc/getopt.c", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ec36da574f8272705a3ead59bbd289f23793429/gcc%2Fgetopt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ec36da574f8272705a3ead59bbd289f23793429/gcc%2Fgetopt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgetopt.c?ref=9ec36da574f8272705a3ead59bbd289f23793429", "patch": "@@ -201,15 +201,18 @@ static char *posixly_correct;\n # define my_index\tstrchr\n #else\n \n+# if HAVE_STRING_H\n+#  include <string.h>\n+# else\n+#  include <strings.h>\n+# endif\n+\n /* Avoid depending on library functions or files\n    whose names are inconsistent.  */\n \n #ifndef getenv\n extern char *getenv ();\n #endif\n-#ifndef strncmp\n-extern int strncmp ();\n-#endif\n \n static char *\n my_index (str, chr)"}, {"sha": "d5b6d1c19004df4f23bea00864b798a58f6a76bf", "filename": "gcc/install.texi", "status": "modified", "additions": 15, "deletions": 7, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ec36da574f8272705a3ead59bbd289f23793429/gcc%2Finstall.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ec36da574f8272705a3ead59bbd289f23793429/gcc%2Finstall.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Finstall.texi?ref=9ec36da574f8272705a3ead59bbd289f23793429", "patch": "@@ -199,6 +199,14 @@ threads implementation available, in which case threads can be enabled\n with this option by supplying a suitable @var{type}, probably\n @samp{posix}.  The possibilities for @var{type} are @samp{single},\n @samp{posix}, @samp{win32}, @samp{solaris}, @samp{irix} and @samp{mach}.\n+\n+@cindex Internal Compiler Checking\n+@item --enable-checking\n+When you specify this option, the compiler is built to perform checking\n+of tree node types when referencing fields of that node.  This does not\n+change the generated code, but adds error checking within the compiler.\n+This will slow down the compiler and may only work properly if you\n+are building the compiler with GNU C.\n @end table\n \n The @file{configure} script searches subdirectories of the source\n@@ -946,7 +954,9 @@ highly recommend using GAS for all HP-PA configurations.\n You should be using GAS-2.6 (or later) along with GDB-4.16 (or later).  These\n can be retrieved from all the traditional GNU ftp archive sites.\n \n-GAS will need to be installed into a directory before @code{/bin},\n+On some versions of HP-UX, you will need to install GNU @file{sed}.\n+\n+You will need to be install GAS into a directory before @code{/bin},\n @code{/usr/bin}, and @code{/usr/ccs/bin} in your search path.  You\n should install GAS before you build GNU CC.\n \n@@ -1013,10 +1023,8 @@ GNU binutils version 2.2 or later.\n Go to the Berkeley universe before compiling.\n \n @item i386-sequent-ptx1*\n-Sequent DYNIX/ptx 1.x.\n-\n-@item i386-sequent-ptx2*\n-Sequent DYNIX/ptx 2.x.\n+@itemx i386-sequent-ptx2*\n+You must install GNU @file{sed} before running @file{configure}.\n \n @item i386-sun-sunos4\n You may find that you need another version of GNU CC to begin\n@@ -1219,8 +1227,8 @@ PHCO_4484 from HP.\n In addition, if you wish to use gas @samp{--with-gnu-as} you must use\n gas version 2.1 or later, and you must use the GNU linker version 2.1 or\n later.  Earlier versions of gas relied upon a program which converted the\n-gas output into the native HP/UX format, but that program has not been\n-kept up to date.  gdb does not understand that native HP/UX format, so\n+gas output into the native HP-UX format, but that program has not been\n+kept up to date.  gdb does not understand that native HP-UX format, so\n you must use gas if you wish to use gdb.\n \n @item m68k-sun"}, {"sha": "112072d37c0580d6ed66018d411f5c2303da8aab", "filename": "gcc/invoke.texi", "status": "modified", "additions": 13, "deletions": 8, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ec36da574f8272705a3ead59bbd289f23793429/gcc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ec36da574f8272705a3ead59bbd289f23793429/gcc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Finvoke.texi?ref=9ec36da574f8272705a3ead59bbd289f23793429", "patch": "@@ -145,7 +145,7 @@ in the following sections.\n @item Optimization Options\n @xref{Optimize Options,,Options that Control Optimization}.\n @smallexample\n--fbranch-probabilities\n+-fbranch-probabilities  -foptimize-register-moves\n -fcaller-saves  -fcse-follow-jumps  -fcse-skip-blocks\n -fdelayed-branch   -fexpensive-optimizations\n -ffast-math  -ffloat-store  -fforce-addr  -fforce-mem\n@@ -2312,6 +2312,17 @@ This pass also performs global constant and copy propagation.\n @item -fexpensive-optimizations\n Perform a number of minor optimizations that are relatively expensive.\n \n+@item -foptimize-register-moves\n+@item -fregmove\n+Attempt to reassign register numbers in move instructions and as\n+operands of other simple instructions in order to maximize the amount of\n+register tying.  This is especially helpfu on machines with two-operand\n+instructions.  GNU CC enables this optimization by default with @samp{-O2}\n+or higher.\n+\n+Note @code{-fregmove} and @code{-foptimize-register-moves} are the same\n+optimization.\n+\n @item -fdelayed-branch\n If supported for the target machine, attempt to reorder instructions\n to exploit instruction slots available after delayed branch\n@@ -2413,12 +2424,6 @@ branch is mostly to take, the @samp{REG_BR_PROB} values are used to\n exactly determine which path is taken more often.\n @end ifset\n \n-@item -fregmove\n-Some machines only support 2 operands per instruction.  On such\n-machines, GNU CC might have to do extra copies.  The @samp{-fregmove}\n-option overrides the default for the machine to do the copy before\n-register allocation.\n-\n @item -fstrict-aliasing\n Allows the compiler to assume the strictest aliasing rules applicable to\n the language being compiled.  For C (and C++), this activates\n@@ -4865,7 +4870,7 @@ All modules should be compiled with the same @samp{-G @var{num}}\n value.\n \n @item -nocpp\n-Tell the MIPS assembler to not run it's preprocessor over user\n+Tell the MIPS assembler to not run its preprocessor over user\n assembler files (with a @samp{.s} suffix) when assembling them.\n @end table\n "}, {"sha": "38068172a3a873022f9b85b4d6a7793757e1385a", "filename": "gcc/mips-tfile.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ec36da574f8272705a3ead59bbd289f23793429/gcc%2Fmips-tfile.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ec36da574f8272705a3ead59bbd289f23793429/gcc%2Fmips-tfile.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmips-tfile.c?ref=9ec36da574f8272705a3ead59bbd289f23793429", "patch": "@@ -937,7 +937,7 @@ enum alloc_type {\n    grow linearly, and which are written in the object file as sequential\n    pages.  On systems with a BSD malloc that define USE_MALLOC, the\n    MAX_CLUSTER_PAGES should be 1 less than a power of two, since malloc\n-   adds it's overhead, and rounds up to the next power of 2.  Pages are\n+   adds its overhead, and rounds up to the next power of 2.  Pages are\n    linked together via a linked list.\n \n    If PAGE_SIZE is > 4096, the string length in the shash_t structure\n@@ -5113,7 +5113,7 @@ out_of_bounds (indx, max, str, prog_line)\n \n \f\n /* Allocate a cluster of pages.  USE_MALLOC says that malloc does not\n-   like sbrk's behind it's back (or sbrk isn't available).  If we use\n+   like sbrk's behind its back (or sbrk isn't available).  If we use\n    sbrk, we assume it gives us zeroed pages.  */\n \n #ifndef MALLOC_CHECK"}, {"sha": "9eb000b5b391af0a6bb430421c1e830439458f75", "filename": "gcc/objc/objc-api.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ec36da574f8272705a3ead59bbd289f23793429/gcc%2Fobjc%2Fobjc-api.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ec36da574f8272705a3ead59bbd289f23793429/gcc%2Fobjc%2Fobjc-api.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2Fobjc-api.h?ref=9ec36da574f8272705a3ead59bbd289f23793429", "patch": "@@ -301,7 +301,7 @@ struct objc_protocol_list {\n \n /*\n ** The class number of this class.  This must be the same for both the \n-** class and it's meta class object\n+** class and its meta class object\n */\n #define CLS_GETNUMBER(cls) (__CLS_INFO(cls) >> (HOST_BITS_PER_LONG/2))\n #define CLS_SETNUMBER(cls, num) \\"}, {"sha": "245b8b9eaf7945a43b4581f465ee7dd7c16a6a96", "filename": "gcc/objc/sendmsg.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ec36da574f8272705a3ead59bbd289f23793429/gcc%2Fobjc%2Fsendmsg.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ec36da574f8272705a3ead59bbd289f23793429/gcc%2Fobjc%2Fsendmsg.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2Fsendmsg.c?ref=9ec36da574f8272705a3ead59bbd289f23793429", "patch": "@@ -1,5 +1,5 @@\n /* GNU Objective C Runtime message lookup \n-   Copyright (C) 1993, 1995, 1996, 1997 Free Software Foundation, Inc.\n+   Copyright (C) 1993, 1995, 1996, 1997, 1998 Free Software Foundation, Inc.\n    Contributed by Kresten Krab Thorup\n \n This file is part of GNU CC.\n@@ -343,7 +343,7 @@ __objc_install_dispatch_table_for_class (Class class)\n {\n   Class super;\n \n-  /* If the class has not yet had it's class links resolved, we must \n+  /* If the class has not yet had its class links resolved, we must \n      re-compute all class links */\n   if(!CLS_ISRESOLV(class))\n     __objc_resolve_class_links();"}, {"sha": "ef25e7e6ebe7f7023b9530a8e952e3845b994807", "filename": "gcc/print-rtl.c", "status": "modified", "additions": 23, "deletions": 5, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ec36da574f8272705a3ead59bbd289f23793429/gcc%2Fprint-rtl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ec36da574f8272705a3ead59bbd289f23793429/gcc%2Fprint-rtl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fprint-rtl.c?ref=9ec36da574f8272705a3ead59bbd289f23793429", "patch": "@@ -53,6 +53,7 @@ static int indent;\n \n extern char **insn_name_ptr;\n \n+int flag_dump_unnumbered = 0;\n /* Print IN_RTX onto OUTFILE.  This is the recursive part of printing.  */\n \n static void\n@@ -205,6 +206,9 @@ print_rtx (in_rtx)\n \t      fputc (' ', outfile);\n \t      DEBUG_PRINT_REG (in_rtx, 0, outfile);\n \t    }\n+\t  else if (flag_dump_unnumbered\n+\t\t   && (is_insn || GET_CODE (in_rtx) == NOTE))\n+\t    fprintf (outfile, \"#\");\n \t  else\n \t    fprintf (outfile, \" %d\", value);\n \t}\n@@ -227,7 +231,12 @@ print_rtx (in_rtx)\n \n       case 'u':\n \tif (XEXP (in_rtx, i) != NULL)\n-\t  fprintf (outfile, \" %d\", INSN_UID (XEXP (in_rtx, i)));\n+\t  {\n+\t    if (flag_dump_unnumbered)\n+\t      fprintf (outfile, \"#\");\n+\t    else\n+\t      fprintf (outfile, \" %d\", INSN_UID (XEXP (in_rtx, i)));\n+\t  }\n \telse\n \t  fprintf (outfile, \" 0\");\n \tsawclose = 0;\n@@ -381,8 +390,13 @@ print_rtl (outf, rtx_first)\n       case BARRIER:\n \tfor (tmp_rtx = rtx_first; NULL != tmp_rtx; tmp_rtx = NEXT_INSN (tmp_rtx))\n \t  {\n-\t    print_rtx (tmp_rtx);\n-\t    fprintf (outfile, \"\\n\");\n+\t    if (! flag_dump_unnumbered\n+\t\t|| GET_CODE (tmp_rtx) != NOTE\n+\t\t|| NOTE_LINE_NUMBER (tmp_rtx) < 0)\n+\t      {\n+\t\tprint_rtx (tmp_rtx);\n+\t\tfprintf (outfile, \"\\n\");\n+\t      }\n \t  }\n \tbreak;\n \n@@ -400,6 +414,10 @@ print_rtl_single (outf, x)\n {\n   outfile = outf;\n   sawclose = 0;\n-  print_rtx (x);\n-  putc ('\\n', outf);\n+  if (! flag_dump_unnumbered\n+      || GET_CODE (x) != NOTE || NOTE_LINE_NUMBER (x) < 0)\n+    {\n+      print_rtx (x);\n+      putc ('\\n', outf);\n+    }\n }"}, {"sha": "48908e520c34984971d43aabb1302559b92dd8d1", "filename": "gcc/protoize.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ec36da574f8272705a3ead59bbd289f23793429/gcc%2Fprotoize.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ec36da574f8272705a3ead59bbd289f23793429/gcc%2Fprotoize.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fprotoize.c?ref=9ec36da574f8272705a3ead59bbd289f23793429", "patch": "@@ -1917,7 +1917,7 @@ save_def_or_dec (l, is_syscalls)\n         }\n \n       /* Handle a special case.  If we have a function definition marked as\n-         being in \"old\" style, and if it's formal names list is empty, then\n+         being in \"old\" style, and if its formal names list is empty, then\n          it may actually have the string \"void\" in its real formals list\n          in the original source code.  Just to make sure, we will get setup\n          to convert such things anyway.\n@@ -2767,7 +2767,7 @@ connect_defs_and_decs (hp)\n \n      Also, for each item which is only a function declaration, but which\n      nonetheless has its own prototype already (obviously supplied by the user)\n-     declare the item as it's own definition.\n+     declare the item as its own definition.\n \n      Note that when/if there are multiple user-supplied prototypes already\n      present for multiple declarations of any given function, these multiple"}, {"sha": "ed854e02625a74b1d95e79e2ecee4be2f7977ace", "filename": "gcc/real.c", "status": "modified", "additions": 26, "deletions": 2, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ec36da574f8272705a3ead59bbd289f23793429/gcc%2Freal.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ec36da574f8272705a3ead59bbd289f23793429/gcc%2Freal.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freal.c?ref=9ec36da574f8272705a3ead59bbd289f23793429", "patch": "@@ -51,7 +51,7 @@ XFmode and TFmode transcendental functions, can be obtained by ftp from\n netlib.att.com: netlib/cephes.   */\n \f\n /* Type of computer arithmetic.\n-   Only one of DEC, IBM, IEEE, or UNK should get defined.\n+   Only one of DEC, IBM, IEEE, C4X, or UNK should get defined.\n \n    `IEEE', when REAL_WORDS_BIG_ENDIAN is non-zero, refers generically\n    to big-endian IEEE floating-point data structure.  This definition\n@@ -76,6 +76,11 @@ netlib.att.com: netlib/cephes.   */\n    no type wider than DFmode.  The IBM conversions were contributed by\n    frank@atom.ansto.gov.au (Frank Crawford).\n \n+   `C4X' refers specifically to the floating point format used on\n+   Texas Instruments TMS320C3x and TMS320C4x digital signal\n+   processors.  This supports QFmode (32-bit float, double) and HFmode\n+   (40-bit long double) where BITS_PER_BYTE is 32.\n+\n    If LONG_DOUBLE_TYPE_SIZE = 64 (the default, unless tm.h defines it)\n    then `long double' and `double' are both implemented, but they\n    both mean DFmode.  In this case, the software floating-point\n@@ -686,7 +691,16 @@ ereal_atof (s, t)\n \n   switch (t)\n     {\n+#ifdef C4X\n+    case QFmode:\n     case HFmode:\n+      asctoe53 (s, tem);\n+      e53toe (tem, e);\n+      break;\n+#else\n+    case HFmode:\n+#endif\n+\n     case SFmode:\n       asctoe24 (s, tem);\n       e24toe (tem, e);\n@@ -1045,11 +1059,21 @@ real_value_truncate (mode, arg)\n       break;\n \n     case SFmode:\n+#ifndef C4X\n     case HFmode:\n+#endif\n       etoe24 (e, t);\n       e24toe (t, t);\n       break;\n \n+#ifdef C4X\n+    case HFmode:\n+    case QFmode:\n+      etoe53 (e, t);\n+      e53toe (t, t);\n+      break;\n+#endif\n+\n     case SImode:\n       r = etrunci (arg);\n       return (r);\n@@ -3714,7 +3738,7 @@ toe53 (x, y)\n \n #else /* it's neither DEC nor IBM */\n #ifdef C4X\n-/* Convert e-type X to C4X-format double E.  */\n+/* Convert e-type X to C4X-format long double E.  */\n \n static void \n etoe53 (x, e)"}, {"sha": "b9238cd325014e033006af143059c1a81de8017c", "filename": "gcc/regclass.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ec36da574f8272705a3ead59bbd289f23793429/gcc%2Fregclass.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ec36da574f8272705a3ead59bbd289f23793429/gcc%2Fregclass.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fregclass.c?ref=9ec36da574f8272705a3ead59bbd289f23793429", "patch": "@@ -439,7 +439,7 @@ init_regs ()\n        memory_move_secondary_cost.  */\n     int i;\n     for (i = 0; i < MAX_MACHINE_MODE; i++)\n-      top_of_stack[i] = gen_rtx (MEM, i, stack_pointer_rtx);\n+      top_of_stack[i] = gen_rtx_MEM (i, stack_pointer_rtx);\n   }\n #endif\n }"}, {"sha": "6431f15609337dbb7add78512ba68a1438db26d6", "filename": "gcc/reload.c", "status": "modified", "additions": 39, "deletions": 14, "changes": 53, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ec36da574f8272705a3ead59bbd289f23793429/gcc%2Freload.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ec36da574f8272705a3ead59bbd289f23793429/gcc%2Freload.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freload.c?ref=9ec36da574f8272705a3ead59bbd289f23793429", "patch": "@@ -2344,6 +2344,9 @@ find_reloads (insn, replace, ind_levels, live_known, reload_reg_p)\n   rtx set = single_set (insn);\n   int goal_earlyclobber, this_earlyclobber;\n   enum machine_mode operand_mode[MAX_RECOG_OPERANDS];\n+  /* Cache the last regno for the last pseudo we did an output reload\n+     for in case the next insn uses it.  */\n+  static int last_output_reload_regno = -1;\n \n   this_insn = insn;\n   this_insn_is_asm = 0;\t\t/* Tentative.  */\n@@ -3219,6 +3222,15 @@ find_reloads (insn, replace, ind_levels, live_known, reload_reg_p)\n \t\t  && this_alternative_matches[i] < 0)\n \t\tbad = 1;\n \n+\t      /* If this is a pseudo-register that is set in the previous\n+\t\t insns, there's a good chance that it will already be in a\n+\t\t spill register and we can use that spill register.  So\n+\t\t make this case cheaper.  */\n+\t      if (GET_CODE (operand) == REG\n+\t\t  && REGNO (operand) >= FIRST_PSEUDO_REGISTER\n+\t\t  && REGNO (operand) == last_output_reload_regno)\n+\t\treject--;\n+\n \t      /* If this is a constant that is reloaded into the desired\n \t\t class by copying it to memory first, count that as another\n \t\t reload.  This is consistent with other code and is\n@@ -3615,6 +3627,7 @@ find_reloads (insn, replace, ind_levels, live_known, reload_reg_p)\n \treload_earlyclobbers[n_earlyclobbers++] = recog_operand[i];\n \n   /* Now record reloads for all the operands that need them.  */\n+  last_output_reload_regno = -1;\n   for (i = 0; i < noperands; i++)\n     if (! goal_alternative_win[i])\n       {\n@@ -3661,20 +3674,27 @@ find_reloads (insn, replace, ind_levels, live_known, reload_reg_p)\n \t      }\n \t  }\n \telse if (goal_alternative_matched[i] == -1)\n-\t  operand_reloadnum[i]\n-\t    = push_reload (modified[i] != RELOAD_WRITE ? recog_operand[i] : 0,\n-\t\t\t   modified[i] != RELOAD_READ ? recog_operand[i] : 0,\n-\t\t\t   (modified[i] != RELOAD_WRITE\n-\t\t\t    ? recog_operand_loc[i] : 0),\n-\t\t\t   modified[i] != RELOAD_READ ? recog_operand_loc[i] : 0,\n-\t\t\t   (enum reg_class) goal_alternative[i],\n-\t\t\t   (modified[i] == RELOAD_WRITE\n-\t\t\t    ? VOIDmode : operand_mode[i]),\n-\t\t\t   (modified[i] == RELOAD_READ\n-\t\t\t    ? VOIDmode : operand_mode[i]),\n-\t\t\t   (insn_code_number < 0 ? 0\n-\t\t\t    : insn_operand_strict_low[insn_code_number][i]),\n-\t\t\t   0, i, operand_type[i]);\n+\t  {\n+\t    operand_reloadnum[i]\n+\t      = push_reload ((modified[i] != RELOAD_WRITE\n+\t\t\t      ? recog_operand[i] : 0),\n+\t\t\t     modified[i] != RELOAD_READ ? recog_operand[i] : 0,\n+\t\t\t     (modified[i] != RELOAD_WRITE\n+\t\t\t      ? recog_operand_loc[i] : 0),\n+\t\t\t     (modified[i] != RELOAD_READ\n+\t\t\t      ? recog_operand_loc[i] : 0),\n+\t\t\t     (enum reg_class) goal_alternative[i],\n+\t\t\t     (modified[i] == RELOAD_WRITE\n+\t\t\t      ? VOIDmode : operand_mode[i]),\n+\t\t\t     (modified[i] == RELOAD_READ\n+\t\t\t      ? VOIDmode : operand_mode[i]),\n+\t\t\t     (insn_code_number < 0 ? 0\n+\t\t\t      : insn_operand_strict_low[insn_code_number][i]),\n+\t\t\t     0, i, operand_type[i]);\n+\t    if (modified[i] != RELOAD_READ\n+\t\t&& GET_CODE (recog_operand[i]) == REG)\n+\t      last_output_reload_regno = REGNO (recog_operand[i]);\n+\t  }\n \t/* In a matching pair of operands, one must be input only\n \t   and the other must be output only.\n \t   Pass the input operand as IN and the other as OUT.  */\n@@ -3691,6 +3711,9 @@ find_reloads (insn, replace, ind_levels, live_known, reload_reg_p)\n \t\t\t     operand_mode[goal_alternative_matched[i]],\n \t\t\t     0, 0, i, RELOAD_OTHER);\n \t    operand_reloadnum[goal_alternative_matched[i]] = output_reloadnum;\n+\t    if (GET_CODE (recog_operand[goal_alternative_matched[i]]) == REG)\n+\t      last_output_reload_regno\n+\t\t= REGNO (recog_operand[goal_alternative_matched[i]]);\n \t  }\n \telse if (modified[i] == RELOAD_WRITE\n \t\t && modified[goal_alternative_matched[i]] == RELOAD_READ)\n@@ -3705,6 +3728,8 @@ find_reloads (insn, replace, ind_levels, live_known, reload_reg_p)\n \t\t\t     operand_mode[i],\n \t\t\t     0, 0, i, RELOAD_OTHER);\n \t    operand_reloadnum[i] = output_reloadnum;\n+\t    if (GET_CODE (recog_operand[i]) == REG)\n+\t      last_output_reload_regno = REGNO (recog_operand[i]);\n \t  }\n \telse if (insn_code_number >= 0)\n \t  abort ();"}, {"sha": "825b8715da3ac8599fc05e05c0c6de9fde30bd60", "filename": "gcc/reload1.c", "status": "modified", "additions": 19, "deletions": 4, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ec36da574f8272705a3ead59bbd289f23793429/gcc%2Freload1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ec36da574f8272705a3ead59bbd289f23793429/gcc%2Freload1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freload1.c?ref=9ec36da574f8272705a3ead59bbd289f23793429", "patch": "@@ -2080,20 +2080,28 @@ reload (first, global, dumpfile)\n     {\n       rtx addr = 0;\n       int in_struct = 0;\n-      if (reg_equiv_mem[i])\n+      int is_readonly = 0;\n+\n+      if (reg_equiv_memory_loc[i])\n \t{\n-\t  addr = XEXP (reg_equiv_mem[i], 0);\n-\t  in_struct = MEM_IN_STRUCT_P (reg_equiv_mem[i]);\n+\t  in_struct = MEM_IN_STRUCT_P (reg_equiv_memory_loc[i]);\n+\t  is_readonly = RTX_UNCHANGING_P (reg_equiv_memory_loc[i]);\n \t}\n+\n+      if (reg_equiv_mem[i])\n+\taddr = XEXP (reg_equiv_mem[i], 0);\n+\n       if (reg_equiv_address[i])\n \taddr = reg_equiv_address[i];\n+\n       if (addr)\n \t{\n \t  if (reg_renumber[i] < 0)\n \t    {\n \t      rtx reg = regno_reg_rtx[i];\n \t      XEXP (reg, 0) = addr;\n \t      REG_USERVAR_P (reg) = 0;\n+\t      RTX_UNCHANGING_P (reg) = is_readonly;\n \t      MEM_IN_STRUCT_P (reg) = in_struct;\n \t      /* We have no alias information about this newly created\n \t\t MEM.  */\n@@ -2565,7 +2573,14 @@ alter_reg (i, from_reg)\n \t{\n \t  x = gen_rtx_MEM (GET_MODE (regno_reg_rtx[i]),\n \t\t       plus_constant (XEXP (x, 0), adjust));\n-\t  RTX_UNCHANGING_P (x) = RTX_UNCHANGING_P (regno_reg_rtx[i]);\n+\n+\t  /* If this was shared among registers, must ensure we never\n+\t     set it readonly since that can cause scheduling\n+\t     problems.  Note we would only have in this adjustment\n+\t     case in any event, since the code above doesn't set it.  */\n+\n+\t  if (from_reg == -1)\n+\t    RTX_UNCHANGING_P (x) = RTX_UNCHANGING_P (regno_reg_rtx[i]);\n \t}\n \n       /* Save the stack slot for later.   */"}, {"sha": "69c43238cb51e088fbb02cdce288c48fc0a3b9a2", "filename": "gcc/reorg.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ec36da574f8272705a3ead59bbd289f23793429/gcc%2Freorg.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ec36da574f8272705a3ead59bbd289f23793429/gcc%2Freorg.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freorg.c?ref=9ec36da574f8272705a3ead59bbd289f23793429", "patch": "@@ -579,7 +579,7 @@ mark_set_resources (x, res, in_dest, include_delayed_effects)\n \t    SET_HARD_REG_SET (res->regs);\n \t}\n \n-      /* ... and also what it's RTL says it modifies, if anything.  */\n+      /* ... and also what its RTL says it modifies, if anything.  */\n \n     case JUMP_INSN:\n     case INSN:\n@@ -983,7 +983,7 @@ add_to_delay_list (insn, delay_list)\n      rtx delay_list;\n {\n   /* If we have an empty list, just make a new list element.  If\n-     INSN has it's block number recorded, clear it since we may\n+     INSN has its block number recorded, clear it since we may\n      be moving the insn to a new block.  */\n \n   if (delay_list == 0)"}, {"sha": "a7eaaf8244d11d0a88df806d3a3ce14c698cdc5f", "filename": "gcc/rtl.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ec36da574f8272705a3ead59bbd289f23793429/gcc%2Frtl.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ec36da574f8272705a3ead59bbd289f23793429/gcc%2Frtl.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frtl.h?ref=9ec36da574f8272705a3ead59bbd289f23793429", "patch": "@@ -955,10 +955,8 @@ extern int side_effects_p\tPROTO((rtx));\n extern int volatile_refs_p\tPROTO((rtx));\n extern int volatile_insn_p\tPROTO((rtx));\n extern void remove_note\t\tPROTO((rtx, rtx));\n-extern void note_stores\t\tPROTO((rtx, void (*) (rtx, rtx)));\n extern int refers_to_regno_p\tPROTO((int, int, rtx, rtx *));\n extern int reg_overlap_mentioned_p PROTO((rtx, rtx));\n-extern rtx find_use_as_address\tPROTO((rtx, rtx, HOST_WIDE_INT));\n \n /* Functions in rtlanal.c */\n \n@@ -980,6 +978,8 @@ extern rtx single_set\t\t\tPROTO((rtx));\n extern rtx find_last_value\t\tPROTO((rtx, rtx *, rtx));\n extern int refers_to_regno_p\t\tPROTO((int, int, rtx, rtx *));\n extern int reg_overlap_mentioned_p\tPROTO((rtx, rtx));\n+extern rtx find_use_as_address\t\tPROTO((rtx, rtx, HOST_WIDE_INT));\n+extern void note_stores\t\t\tPROTO((rtx, void (*)()));\n extern rtx reg_set_last\t\t\tPROTO((rtx, rtx));\n extern int rtx_equal_p\t\t\tPROTO((rtx, rtx));\n extern int dead_or_set_p\t\tPROTO((rtx, rtx));"}, {"sha": "4327aa3ecc232dd70495083d113e64a35f2666ad", "filename": "gcc/texinfo.tex", "status": "modified", "additions": 483, "deletions": 224, "changes": 707, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ec36da574f8272705a3ead59bbd289f23793429/gcc%2Ftexinfo.tex", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ec36da574f8272705a3ead59bbd289f23793429/gcc%2Ftexinfo.tex", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftexinfo.tex?ref=9ec36da574f8272705a3ead59bbd289f23793429", "patch": "@@ -25,21 +25,19 @@\n %\n % Please try the latest version of texinfo.tex before submitting bug\n % reports; you can get the latest version from:\n-% /home/gd/gnu/doc/texinfo.tex on the GNU machines.\n-% ftp://ftp.gnu.org/pub/gnu/texinfo.tex\n-% (and all GNU mirrors)\n-% ftp://tug.org/tex/texinfo.tex\n-% ftp://ctan.org/macros/texinfo/texinfo.tex\n-% (and all CTAN mirrors, finger ctan@tug.org for a list).\n+%   ftp://ftp.gnu.org/pub/gnu/texinfo.tex\n+%   /home/gd/gnu/doc/texinfo.tex on the GNU machines.\n+%   (and all GNU mirrors, see ftp://ftp.gnu.org/pub/gnu/README.mirrors)\n+%   ftp://tug.org/tex/texinfo.tex\n+%   ftp://ctan.org/macros/texinfo/texinfo.tex\n+%   (and all CTAN mirrors, finger ctan@tug.org for a list).\n+% The texinfo.tex in the texinfo distribution itself could well be out\n+% of date, so if that's what you're using, please check.\n % \n % Send bug reports to bug-texinfo@gnu.org.\n % Please include a precise test case in each bug report,\n % including a complete document with which we can reproduce the problem.\n % \n-% Texinfo macros (with @macro) are *not* supported by texinfo.tex.  You\n-% have to run makeinfo -E to expand macros first; the texi2dvi script\n-% does this.\n-% \n % To process a Texinfo manual with TeX, it's most reliable to use the\n % texi2dvi shell script that comes with the distribution.  For simple\n % manuals, you can get away with:\n@@ -147,15 +145,10 @@\n % Dimensions to add cropmarks at corners.\n % Added by P. A. MacKay, 12 Nov. 1986\n %\n-\\newdimen\\cornerlong \\newdimen\\cornerthick\n-\\newdimen\\topandbottommargin\n-\\newdimen\\outerhsize \\newdimen\\outervsize\n-\\cornerlong=1pc\\cornerthick=.3pt        % These set size of cropmarks\n-\\outerhsize=7in\n-%\\outervsize=9.5in\n-% Alternative @smallbook page size is 9.25in\n-\\outervsize=9.25in\n-\\topandbottommargin=.75in\n+\\newdimen\\outerhsize \\newdimen\\outervsize % set by the paper size routines\n+\\newdimen\\cornerlong  \\cornerlong=1pc\n+\\newdimen\\cornerthick \\cornerthick=.3pt\n+\\newdimen\\topandbottommargin \\topandbottommargin=.75in\n \n % Main output routine.\n \\chardef\\PAGE = 255\n@@ -791,13 +784,6 @@\n \\def\\menu{\\doignore{menu}}\n \\def\\direntry{\\doignore{direntry}}\n \n-% Also ignore @macro ... @end macro.  The user must run texi2dvi,\n-% which runs makeinfo to do macro expansion.  Ignore @unmacro, too.\n-\\def\\macro{\\doignore{macro}}\n-\\def\\macrocsname{macro}\n-\\let\\unmacro = \\comment\n-\n-\n % @dircategory CATEGORY  -- specify a category of the dir file\n % which this file should belong to.  Ignore this in TeX.\n \\let\\dircategory = \\comment\n@@ -828,13 +814,7 @@\n   %   @c @end ifinfo\n   % and the @end ifinfo will be properly ignored.\n   % (We've just changed @ to catcode 12.)\n-  % \n-  % But we can't do this if #1 is `macro', since that actually contains a c.\n-  % Happily, none of the other conditionals have the letter `c' in their names!\n-  \\def\\temp{#1}%\n-  \\ifx\\temp\\macrocsname \\else\n-    \\catcode`\\c = 14\n-  \\fi\n+  \\catcode`\\c = 14\n   %\n   % And now expand that command.\n   \\doignoretext\n@@ -965,13 +945,24 @@\n \\def\\value{\\begingroup\n   \\catcode`\\-=12 \\catcode`\\_=12 % Allow - and _ in VAR.\n   \\valuexxx}\n-\\def\\valuexxx#1{%\n+\\def\\valuexxx#1{\\expandablevalue{#1}\\endgroup}\n+\n+% We have this subroutine so that we can handle at least some @value's\n+% properly in indexes (we \\let\\value to this in \\indexdummies).  Ones\n+% whose names contain - or _ still won't work, but we can't do anything\n+% about that.  The command has to be fully expandable, since the result\n+% winds up in the index file.  This means that if the variable's value\n+% contains other Texinfo commands, it's almost certain it will fail\n+% (although perhaps we could fix that with sufficient work to do a\n+% one-level expansion on the result, instead of complete).\n+% \n+\\def\\expandablevalue#1{%\n   \\expandafter\\ifx\\csname SET#1\\endcsname\\relax\n-    {\\{No value for ``#1''\\}}%\n+    {[No value for ``#1'']v}%\n   \\else\n     \\csname SET#1\\endcsname\n   \\fi\n-\\endgroup}\n+}\n \n % @ifset VAR ... @end ifset reads the `...' iff VAR has been defined\n % with @set.\n@@ -1079,12 +1070,21 @@\n % @refill is a no-op.\n \\let\\refill=\\relax\n \n+% If working on a large document in chapters, it is convenient to\n+% be able to disable indexing, cross-referencing, and contents, for test runs.\n+% This is done with @novalidate (before @setfilename).\n+%\n+\\newif\\iflinks \\linkstrue % by default we want the aux files.\n+\\let\\novalidate = \\linksfalse\n+\n % @setfilename is done at the beginning of every texinfo file.\n % So open here the files we need to have open while reading the input.\n % This makes it possible to make a .fmt file for texinfo.\n \\def\\setfilename{%\n-   \\readauxfile\n-   \\opencontents\n+   \\iflinks \n+     \\readauxfile\n+     \\opencontents\n+   \\fi % \\openindices needs to do some work in any case.\n    \\openindices\n    \\fixbackslash  % Turn off hack to swallow `\\input texinfo'.\n    \\global\\let\\setfilename=\\comment % Ignore extra @setfilename cmds.\n@@ -1100,30 +1100,25 @@\n    \\comment % Ignore the actual filename.\n }\n \n+% Called from \\setfilename.\n+% \n+\\def\\openindices{%\n+  \\newindex{cp}%\n+  \\newcodeindex{fn}%\n+  \\newcodeindex{vr}%\n+  \\newcodeindex{tp}%\n+  \\newcodeindex{ky}%\n+  \\newcodeindex{pg}%\n+}\n+\n % @bye.\n \\outer\\def\\bye{\\pagealignmacro\\tracingstats=1\\ptexend}\n \n-% \\def\\macro#1{\\begingroup\\ignoresections\\catcode`\\#=6\\def\\macrotemp{#1}\\parsearg\\macroxxx}\n-% \\def\\macroxxx#1#2 \\end macro{%\n-% \\expandafter\\gdef\\macrotemp#1{#2}%\n-% \\endgroup}\n-\n-%\\def\\linemacro#1{\\begingroup\\ignoresections\\catcode`\\#=6\\def\\macrotemp{#1}\\parsearg\\linemacroxxx}\n-%\\def\\linemacroxxx#1#2 \\end linemacro{%\n-%\\let\\parsearg=\\relax\n-%\\edef\\macrotempx{\\csname M\\butfirst\\expandafter\\string\\macrotemp\\endcsname}%\n-%\\expandafter\\xdef\\macrotemp{\\parsearg\\macrotempx}%\n-%\\expandafter\\gdef\\macrotempx#1{#2}%\n-%\\endgroup}\n-\n-%\\def\\butfirst#1{}\n-\n \n \\message{fonts,}\n-\n % Font-change commands.\n \n-% Texinfo supports the sans serif font style, which plain TeX does not.\n+% Texinfo sort of supports the sans serif font style, which plain TeX does not.\n % So we set up a \\sf analogous to plain's \\rm, etc.\n \\newfam\\sffam\n \\def\\sf{\\fam=\\sffam \\tensf}\n@@ -1898,7 +1893,7 @@\n \\def\\itemize{\\parsearg\\itemizezzz}\n \n \\def\\itemizezzz #1{%\n-  \\begingroup % ended by the @end itemsize\n+  \\begingroup % ended by the @end itemize\n   \\itemizey {#1}{\\Eitemize}\n }\n \n@@ -2264,12 +2259,14 @@\n % the file that accumulates this index.  The file's extension is foo.\n % The name of an index should be no more than 2 characters long\n % for the sake of vms.\n-\n-\\def\\newindex #1{\n-\\expandafter\\newwrite \\csname#1indfile\\endcsname% Define number for output file\n-\\openout \\csname#1indfile\\endcsname \\jobname.#1 % Open the file\n-\\expandafter\\xdef\\csname#1index\\endcsname{%     % Define \\xxxindex\n-\\noexpand\\doindex {#1}}\n+%\n+\\def\\newindex#1{%\n+  \\iflinks\n+    \\expandafter\\newwrite \\csname#1indfile\\endcsname\n+    \\openout \\csname#1indfile\\endcsname \\jobname.#1 % Open the file\n+  \\fi\n+  \\expandafter\\xdef\\csname#1index\\endcsname{%     % Define @#1index\n+    \\noexpand\\doindex{#1}}\n }\n \n % @defindex foo  ==  \\newindex{foo}\n@@ -2278,11 +2275,13 @@\n \n % Define @defcodeindex, like @defindex except put all entries in @code.\n \n-\\def\\newcodeindex #1{\n-\\expandafter\\newwrite \\csname#1indfile\\endcsname% Define number for output file\n-\\openout \\csname#1indfile\\endcsname \\jobname.#1 % Open the file\n-\\expandafter\\xdef\\csname#1index\\endcsname{%     % Define \\xxxindex\n-\\noexpand\\docodeindex {#1}}\n+\\def\\newcodeindex#1{%\n+  \\iflinks\n+    \\expandafter\\newwrite \\csname#1indfile\\endcsname\n+    \\openout \\csname#1indfile\\endcsname \\jobname.#1\n+  \\fi\n+  \\expandafter\\xdef\\csname#1index\\endcsname{%\n+    \\noexpand\\docodeindex{#1}}\n }\n \n \\def\\defcodeindex{\\parsearg\\newcodeindex}\n@@ -2369,7 +2368,6 @@\n \\def\\gtr{\\realbackslash gtr}%\n \\def\\less{\\realbackslash less}%\n \\def\\hat{\\realbackslash hat}%\n-%\\def\\char{\\realbackslash char}%\n \\def\\TeX{\\realbackslash TeX}%\n \\def\\dots{\\realbackslash dots }%\n \\def\\result{\\realbackslash result}%\n@@ -2396,7 +2394,12 @@\n \\def\\kbd##1{\\realbackslash kbd {##1}}%\n \\def\\dfn##1{\\realbackslash dfn {##1}}%\n \\def\\emph##1{\\realbackslash emph {##1}}%\n-\\def\\value##1{\\realbackslash value {##1}}%\n+%\n+% Handle some cases of @value -- where the variable name does not\n+% contain - or _, and the value does not contain any\n+% (non-fully-expandable) commands.\n+\\let\\value = \\expandablevalue\n+%\n \\unsepspaces\n }\n \n@@ -2469,14 +2472,24 @@\n % so we do not become unable to do a definition.\n \n {\\catcode`\\@=0 \\catcode`\\\\=\\other\n-@gdef@realbackslash{\\}}\n+ @gdef@realbackslash{\\}}\n \n \\let\\indexbackslash=0  %overridden during \\printindex.\n+\\let\\SETmarginindex=\\relax % put index entries in margin (undocumented)?\n+\n+% For \\ifx comparisons.\n+\\def\\emptymacro{\\empty}\n \n-\\let\\SETmarginindex=\\relax %initialize!\n-% workhorse for all \\fooindexes\n-% #1 is name of index, #2 is stuff to put there\n-\\def\\doind #1#2{%\n+% Most index entries go through here, but \\dosubind is the general case.\n+% \n+\\def\\doind#1#2{\\dosubind{#1}{#2}\\empty}\n+\n+% Workhorse for all \\fooindexes.\n+% #1 is name of index, #2 is stuff to put there, #3 is subentry --\n+% \\empty if called from \\doind, as we usually are.  The main exception\n+% is with defuns, which call us directly.\n+% \n+\\def\\dosubind#1#2#3{%\n   % Put the index entry in the margin if desired.\n   \\ifx\\SETmarginindex\\relax\\else\n     \\insert\\margin{\\hbox{\\vrule height8pt depth3pt width0pt #2}}%\n@@ -2487,13 +2500,22 @@\n       \\indexdummies % Must do this here, since \\bf, etc expand at this stage\n       \\escapechar=`\\\\\n       {%\n-        \\let\\folio=0% We will expand all macros now EXCEPT \\folio.\n+        \\let\\folio = 0% We will expand all macros now EXCEPT \\folio.\n         \\def\\rawbackslashxx{\\indexbackslash}% \\indexbackslash isn't defined now\n         % so it will be output as is; and it will print as backslash.\n         %\n+        \\def\\thirdarg{#3}%\n+        %\n+        % If third arg is present, precede it with space in sort key.\n+        \\ifx\\thirdarg\\emptymacro\n+          \\let\\subentry = \\empty\n+        \\else\n+          \\def\\subentry{ #3}%\n+        \\fi\n+        %\n         % First process the index-string with all font commands turned off\n         % to get the string to sort by.\n-        {\\indexnofonts \\xdef\\indexsorttmp{#2}}%\n+        {\\indexnofonts \\xdef\\indexsorttmp{#2\\subentry}}%\n         %\n         % Now produce the complete index entry, with both the sort key and the\n         % original text, including any font commands.\n@@ -2502,33 +2524,35 @@\n           \\write\\csname#1indfile\\endcsname{%\n             \\realbackslash entry{\\indexsorttmp}{\\folio}{\\the\\toks0}}%\n         }%\n-        \\temp\n+        %\n+        % If third (subentry) arg is present, add it to the index string.\n+        \\ifx\\thirdarg\\emptymacro \\else\n+          \\toks0 = {#3}%\n+          \\edef\\temp{\\temp{\\the\\toks0}}%\n+        \\fi\n+        %\n+        % If a skip is the last thing on the list now, preserve it\n+        % by backing up by \\lastskip, doing the \\write, then inserting\n+        % the skip again.  Otherwise, the whatsit generated by the\n+        % \\write will make \\lastskip zero.  The result is that sequences\n+        % like this:\n+        % @end defun\n+        % @tindex whatever\n+        % @defun ...\n+        % will have extra space inserted, because the \\medbreak in the\n+        % start of the @defun won't see the skip inserted by the @end of\n+        % the previous defun.\n+        \\iflinks\n+          \\skip0 = \\lastskip \\ifdim\\lastskip = 0pt \\else \\vskip-\\lastskip \\fi\n+          \\temp\n+          \\ifdim\\skip0 = 0pt \\else \\vskip\\skip0 \\fi\n+        \\fi\n       }%\n     }%\n     \\penalty\\count255\n   }%\n }\n \n-\\def\\dosubind #1#2#3{%\n-{\\count10=\\lastpenalty %\n-{\\indexdummies % Must do this here, since \\bf, etc expand at this stage\n-\\escapechar=`\\\\%\n-{\\let\\folio=0%\n-\\def\\rawbackslashxx{\\indexbackslash}%\n-%\n-% Now process the index-string once, with all font commands turned off,\n-% to get the string to sort the index by.\n-{\\indexnofonts\n-\\xdef\\temp1{#2 #3}%\n-}%\n-% Now produce the complete index entry.  We process the index-string again,\n-% this time with font commands expanded, to get what to print in the index.\n-\\edef\\temp{%\n-\\write \\csname#1indfile\\endcsname{%\n-\\realbackslash entry {\\temp1}{\\folio}{#2}{#3}}}%\n-\\temp }%\n-}\\penalty\\count10}}\n-\n % The index entry written in the file actually looks like\n %  \\entry {sortstring}{page}{topic}\n % or\n@@ -2952,7 +2976,7 @@\n \\toks0 = {#1}%\n \\edef\\temp{{\\realbackslash chapentry{\\the\\toks0}{\\the\\chapno}{\\noexpand\\folio}}}%\n \\escapechar=`\\\\%\n-\\write \\contentsfile \\temp  %\n+\\iflinks \\write\\contentsfile\\temp \\fi\n \\donoderef %\n \\global\\let\\section = \\numberedsec\n \\global\\let\\subsection = \\numberedsubsec\n@@ -2973,7 +2997,7 @@\n \\edef\\temp{{\\realbackslash chapentry{\\the\\toks0}%\n   {\\putwordAppendix{} \\appendixletter}{\\noexpand\\folio}}}%\n \\escapechar=`\\\\%\n-\\write \\contentsfile \\temp  %\n+\\iflinks \\write\\contentsfile\\temp \\fi\n \\appendixnoderef %\n \\global\\let\\section = \\appendixsec\n \\global\\let\\subsection = \\appendixsubsec\n@@ -3008,7 +3032,7 @@\n \\toks0 = {#1}%\n \\edef\\temp{{\\realbackslash unnumbchapentry{\\the\\toks0}{\\noexpand\\folio}}}%\n \\escapechar=`\\\\%\n-\\write \\contentsfile \\temp  %\n+\\iflinks \\write\\contentsfile\\temp \\fi\n \\unnumbnoderef %\n \\global\\let\\section = \\unnumberedsec\n \\global\\let\\subsection = \\unnumberedsubsec\n@@ -3025,7 +3049,7 @@\n \\edef\\temp{{\\realbackslash secentry %\n {\\the\\toks0}{\\the\\chapno}{\\the\\secno}{\\noexpand\\folio}}}%\n \\escapechar=`\\\\%\n-\\write \\contentsfile \\temp %\n+\\iflinks \\write\\contentsfile\\temp \\fi\n \\donoderef %\n \\penalty 10000 %\n }}\n@@ -3041,7 +3065,7 @@\n \\edef\\temp{{\\realbackslash secentry %\n {\\the\\toks0}{\\appendixletter}{\\the\\secno}{\\noexpand\\folio}}}%\n \\escapechar=`\\\\%\n-\\write \\contentsfile \\temp %\n+\\iflinks \\write\\contentsfile\\temp \\fi\n \\appendixnoderef %\n \\penalty 10000 %\n }}\n@@ -3054,7 +3078,7 @@\n \\toks0 = {#1}%\n \\edef\\temp{{\\realbackslash unnumbsecentry{\\the\\toks0}{\\noexpand\\folio}}}%\n \\escapechar=`\\\\%\n-\\write \\contentsfile \\temp %\n+\\iflinks \\write\\contentsfile\\temp \\fi\n \\unnumbnoderef %\n \\penalty 10000 %\n }}\n@@ -3069,7 +3093,7 @@\n \\edef\\temp{{\\realbackslash subsecentry %\n {\\the\\toks0}{\\the\\chapno}{\\the\\secno}{\\the\\subsecno}{\\noexpand\\folio}}}%\n \\escapechar=`\\\\%\n-\\write \\contentsfile \\temp %\n+\\iflinks \\write\\contentsfile\\temp \\fi\n \\donoderef %\n \\penalty 10000 %\n }}\n@@ -3084,7 +3108,7 @@\n \\edef\\temp{{\\realbackslash subsecentry %\n {\\the\\toks0}{\\appendixletter}{\\the\\secno}{\\the\\subsecno}{\\noexpand\\folio}}}%\n \\escapechar=`\\\\%\n-\\write \\contentsfile \\temp %\n+\\iflinks \\write\\contentsfile\\temp \\fi\n \\appendixnoderef %\n \\penalty 10000 %\n }}\n@@ -3097,7 +3121,7 @@\n \\toks0 = {#1}%\n \\edef\\temp{{\\realbackslash unnumbsubsecentry{\\the\\toks0}{\\noexpand\\folio}}}%\n \\escapechar=`\\\\%\n-\\write \\contentsfile \\temp %\n+\\iflinks \\write\\contentsfile\\temp \\fi\n \\unnumbnoderef %\n \\penalty 10000 %\n }}\n@@ -3114,7 +3138,7 @@\n   {\\the\\chapno}{\\the\\secno}{\\the\\subsecno}{\\the\\subsubsecno}\n   {\\noexpand\\folio}}}%\n \\escapechar=`\\\\%\n-\\write \\contentsfile \\temp %\n+\\iflinks \\write\\contentsfile\\temp \\fi\n \\donoderef %\n \\penalty 10000 %\n }}\n@@ -3131,7 +3155,7 @@\n   {\\appendixletter}\n   {\\the\\secno}{\\the\\subsecno}{\\the\\subsubsecno}{\\noexpand\\folio}}}%\n \\escapechar=`\\\\%\n-\\write \\contentsfile \\temp %\n+\\iflinks \\write\\contentsfile\\temp \\fi\n \\appendixnoderef %\n \\penalty 10000 %\n }}\n@@ -3144,7 +3168,7 @@\n \\toks0 = {#1}%\n \\edef\\temp{{\\realbackslash unnumbsubsubsecentry{\\the\\toks0}{\\noexpand\\folio}}}%\n \\escapechar=`\\\\%\n-\\write \\contentsfile \\temp %\n+\\iflinks \\write\\contentsfile\\temp \\fi\n \\unnumbnoderef %\n \\penalty 10000 %\n }}\n@@ -3944,13 +3968,18 @@\n \\begingroup\\obeylines\\activeparens\\spacesplit{#3{#4}}}\n \n % @deftypemethod has an extra argument that nothing else does.  Sigh.\n+% #1 is the \\E... control sequence to end the definition (which we define).\n+% #2 is the \\...x control sequence for consecutive fns (which we define).\n+% #3 is the control sequence to call to resume processing.\n+% #4, delimited by the space, is the class name.\n+% #5 is the method's return type.\n % \n \\def\\deftypemethparsebody#1#2#3#4 #5 {\\begingroup\\inENV %\n \\medbreak %\n % Define the end token that this defining construct specifies\n % so that it will exit this group.\n \\def#1{\\endgraf\\endgroup\\medbreak}%\n-\\def#2##1 {\\begingroup\\obeylines\\activeparens\\spacesplit{#3{##1}}}%\n+\\def#2##1 ##2 {\\begingroup\\obeylines\\activeparens\\spacesplit{#3{##1}{##2}}}%\n \\parindent=0in\n \\advance\\leftskip by \\defbodyindent \\advance \\rightskip by \\defbodyindent\n \\exdentamount=\\defbodyindent\n@@ -4173,7 +4202,7 @@\n \\def\\defspecx #1 {\\errmessage{@defspecx in invalid context}}\n \\def\\deftypefnx #1 {\\errmessage{@deftypefnx in invalid context}}\n \\def\\deftypemethodx #1 {\\errmessage{@deftypemethodx in invalid context}}\n-\\def\\deftypeunx #1 {\\errmessage{@deftypeunx in invalid context}}\n+\\def\\deftypefunx #1 {\\errmessage{@deftypeunx in invalid context}}\n \n % @defmethod, and so on\n \n@@ -4329,7 +4358,220 @@\n \\def\\deftpx #1 {\\errmessage{@deftpx in invalid context}}\n \n \n-\\message{cross reference,}\n+\\message{macros,}\n+% @macro.\n+\n+% To do this right we need a feature of e-TeX, \\scantokens, \n+% which we arrange to emulate with a temporary file in ordinary TeX.\n+\\ifx\\eTeXversion\\undefined\n+ \\newwrite\\macscribble\n+ \\def\\scantokens#1{%\n+%   \\toks0={#1}%\n+   \\immediate\\openout\\macscribble=\\jobname.tmp\n+   \\immediate\\write\\macscribble{#1}%\\the\\toks0}%\n+   \\immediate\\closeout\\macscribble\n+   \\input \\jobname.tmp\n+}\n+\\fi\n+\n+\\newcount\\paramno   % Count of parameters\n+\\newtoks\\macname    % Macro name\n+\\newif\\ifrecursive  % Is it recursive?\n+\n+% Utility: does \\let #1 = #2, except with \\csnames.\n+\\def\\cslet#1#2{%\n+\\expandafter\\expandafter\n+\\expandafter\\let\n+\\expandafter\\expandafter\n+\\csname#1\\endcsname\n+\\csname#2\\endcsname}\n+\n+% Macro bodies are absorbed as an argument in a context where\n+% all characters are catcode 10, 11 or 12, except \\ which is active\n+% (as in normal texinfo). It is necessary to change the definition of \\.\n+\n+\\def\\macrobodyctxt{%\n+  \\catcode`\\~=12\n+  \\catcode`\\^=12\n+  \\catcode`\\_=12\n+  \\catcode`\\|=12\n+  \\catcode`\\<=12\n+  \\catcode`\\>=12\n+  \\catcode`\\+=12\n+  \\catcode`\\{=12\n+  \\catcode`\\}=12\n+  \\catcode`\\@=12\n+  \\catcode`\\^^M=10\n+  \\usembodybackslash}\n+\n+% \\mbodybackslash is the definition of \\ in @macro bodies.\n+% It maps \\foo\\ => \\csname macarg.foo\\endcsname => #N \n+% where N is the macro parameter number.\n+% We define \\csname macarg.\\endcsname to be \\realbackslash, so\n+% \\\\ in macro replacement text gets you a backslash.\n+\n+{\\catcode`@=0 \\catcode`\\\\=\\active\n+ @gdef@usembodybackslash{@let\\=@mbodybackslash}\n+ @gdef@mbodybackslash#1\\{@csname macarg.#1@endcsname}\n+}\n+\\expandafter\\def\\csname macarg.\\endcsname{\\realbackslash}\n+\n+% The catcode games are necessary because @macro may or may not\n+% have a brace-surrounded list of arguments, and we need to do\n+% different stuff in each case.  Making {, } \\other is the only \n+% way to prevent their being deleted by the tokenizer.\n+\\def\\macro{\\recursivefalse\n+  \\bgroup\\catcode`\\{=\\other\\catcode`\\}=\\other\\parsearg\\macroxxx}\n+\\def\\rmacro{\\recursivetrue\n+  \\bgroup\\catcode`\\{=\\other\\catcode`\\}=\\other\\parsearg\\macroxxx}\n+\n+\\def\\macroxxx#1{\\egroup   % started in \\macro\n+  \\getargs{#1}%           now \\macname is the macname and \\toks0 the arglist\n+  \\edef\\temp{\\the\\toks0}%\n+  \\ifx\\temp\\empty       % no arguments\n+     \\paramno=0%\n+  \\else\n+     \\expandafter\\parsemargdef \\the\\toks0;% \n+  \\fi\n+  \\expandafter\\ifx \\csname macsave.\\the\\macname\\endcsname \\relax\n+     \\cslet{macsave.\\the\\macname}{\\the\\macname}%\n+  \\else\n+     \\message{Warning: redefining \\the\\macname}%\n+  \\fi\n+  \\begingroup \\macrobodyctxt\n+  \\ifrecursive \\expandafter\\parsermacbody\n+  \\else \\expandafter\\parsemacbody \n+  \\fi}\n+\n+\\def\\unmacro{\\parsearg\\unmacroxxx}\n+\\def\\unmacroxxx#1{\n+  \\expandafter\\ifx \\csname macsave.\\the\\macname\\endcsname \\relax\n+    \\errmessage{Macro \\the\\macname\\ not defined.}%\n+  \\else\n+    \\cslet{#1}{macsave.#1}%\n+    \\expandafter\\let \\csname macsave.\\the\\macname\\endcsname \\undefined\n+  \\fi\n+}\n+\n+% Parse the optional {params} list.  Set up \\paramno and \\paramlist\n+% so \\defmacro knows what to do.  Define \\macarg.blah for each blah\n+% in the params list, to be ##N where N is the position in that list.\n+% That gets used by \\mbodybackslash (above).\n+\n+% This code has to take great care with `macro parameter char #'.  The\n+% eight hashes in a row on the macarg.#1 line collapse to four in the\n+% definition of \\macarg.blah, to two when \\parsemacbody expands the\n+% macro replacement text, and to one when \\defmacro writes the macro\n+% definiton.  The games with \\twohash are to postpone expansion till\n+% the very end, when \\parsemargdefyyy crunches \\paramlist into\n+% something that can be splatted into a \\expandafter\\def\\blah line (in\n+% \\defmacro).\n+\\def\\parsemargdef#1;{\\paramno=0\\def\\paramlist{}\\parsemargdefxxx#1,;,}\n+\\def\\parsemargdefxxx#1,{%\n+  \\let\\twohash\\relax\n+  \\if#1;\\let\\next=\\parsemargdefyyy\n+  \\else \\let\\next=\\parsemargdefxxx\n+    \\advance\\paramno by 1%\n+    \\expandafter\\edef\\csname macarg.#1\\endcsname{########\\the\\paramno}%\n+    \\edef\\paramlist{\\paramlist\\twohash\\twohash\\the\\paramno,}%\n+  \\fi\\next}\n+\\def\\parsemargdefyyy{\\let\\twohash##\\relax \\edef\\paramlist{\\paramlist}}\n+\n+% These two commands read recursive and nonrecursive macro bodies.\n+% (They're different since rec and nonrec macros end differently.)\n+\n+\\long\\def\\parsemacbody#1@end macro%\n+{\\xdef\\temp{#1} \\endgroup\\defmacro}%\n+\\long\\def\\parsermacbody#1@end macro%\n+{\\xdef\\temp{#1} \\endgroup\\defmacro}%\n+\n+\n+% This defines the macro itself. There are six cases: recursive and\n+% nonrecursive macros of zero, one, and many arguments.\n+% Much magic with \\expandafter here.\n+\\def\\defmacro{%\n+  \\ifrecursive\n+    \\ifcase\\paramno\n+    % 0\n+      \\expandafter\\edef\\csname\\the\\macname\\endcsname{%\n+        \\noexpand\\scantokens{\\temp}}%\n+    \\or % 1\n+      \\expandafter\\edef\\csname\\the\\macname\\endcsname{%\n+         \\noexpand\\braceorline\\csname\\the\\macname xxx\\endcsname}%\n+      \\expandafter\\edef\\csname\\the\\macname xxx\\endcsname##1{%\n+         \\noexpand\\scantokens{\\temp}}%\n+    \\else % many\n+      \\expandafter\\edef\\csname\\the\\macname\\endcsname##1{%\n+          \\csname\\the\\macname xxx\\endcsname ##1,}%\n+      \\expandafter\\expandafter\n+      \\expandafter\\edef\n+      \\expandafter\\expandafter\n+        \\csname\\the\\macname xxx\\endcsname \n+          \\paramlist{\\noexpand\\scantokens{\\temp}}%\n+    \\fi\n+  \\else\n+    \\ifcase\\paramno\n+    % 0\n+      \\expandafter\\edef\\csname\\the\\macname\\endcsname{%\n+        \\noexpand\\norecurse{\\the\\macname}%\n+        \\noexpand\\scantokens{\\temp}\\egroup}%\n+    \\or % 1\n+      \\expandafter\\edef\\csname\\the\\macname\\endcsname{%\n+         \\noexpand\\braceorline\\csname\\the\\macname xxx\\endcsname}%\n+      \\expandafter\\edef\\csname\\the\\macname xxx\\endcsname##1{%\n+        \\noexpand\\norecurse{\\the\\macname}\n+        \\noexpand\\scantokens{\\temp}\\egroup}%\n+    \\else % many\n+      \\expandafter\\edef\\csname\\the\\macname\\endcsname##1{%\n+          \\csname\\the\\macname xxx\\endcsname ##1,}%\n+      \\expandafter\\expandafter\n+      \\expandafter\\edef\n+      \\expandafter\\expandafter\n+      \\csname\\the\\macname xxx\\endcsname\n+      \\paramlist{%\n+          \\noexpand\\norecurse{\\the\\macname}\n+          \\noexpand\\scantokens{\\temp}\\egroup}%\n+    \\fi\n+  \\fi}\n+\n+\\def\\norecurse#1{\\bgroup\\cslet{#1}{macsave.#1}}\n+\n+% \\braceorline decides whether the next nonwhitespace character is a\n+% {.  If so it reads up to the closing }, if not, it reads the whole\n+% line.  Whatever was read is then fed to the next control sequence\n+% as an argument (by \\parsebrace or \\parsearg)\n+\\def\\braceorline#1{\\let\\next=#1\\futurelet\\nchar\\braceorlinexxx}\n+\\def\\braceorlinexxx{%\n+  \\ifx\\nchar\\bgroup\\else\n+    \\expandafter\\parsearg \n+  \\fi \\next}\n+\n+% We need {} to be \\other inside these commands. [] are temporary\n+% grouping symbols.\n+\\begingroup\n+\\catcode`\\{=\\other \\catcode`\\}=\\other\n+\\catcode`\\[=1  \\catcode`\\]=2\n+\n+% @macro can be called with or without a brace-surrounded macro\n+% argument list.  These three sequences extract the macro name and arg\n+% list in hopefully all cases.  Note that anything on the line after the\n+% first pair of braces will be thrown out (Makeinfo puts it into the\n+% macro body).\n+\\gdef\\getargs#1[\\getargsxxx|#1 {}|]\n+\\gdef\\getargsxxx|#1 {#2}#3|[%\n+  \\toks0=[#2]%\n+  \\edef\\tmp[\\the\\toks0]%\n+  \\ifx\\tmp\\empty\n+     \\getargsnospaces|#1{}|%\n+  \\else\n+     \\macname=[#1]%\n+  \\fi]\n+\\gdef\\getargsnospaces|#1{#2}#3|[\\macname=[#1]\\toks0=[#2]]\n+\n+\\endgroup\n+\n+\n+\\message{cross references,}\n \\newwrite\\auxfile\n \n \\newif\\ifhavexrefs    % True if xref values are known.\n@@ -4422,7 +4664,9 @@\n   {\\let\\folio=0\n    \\normalturnoffactive\n    \\edef\\next{\\write\\auxfile{\\internalsetq{#1}{#2}}}%\n-   \\next\n+   \\iflinks\n+     \\next\n+   \\fi\n   }%\n }\n \n@@ -4476,12 +4720,14 @@\n   \\expandafter\\ifx\\csname X#1\\endcsname\\relax\n     % If not defined, say something at least.\n     \\angleleft un\\-de\\-fined\\angleright\n-    \\ifhavexrefs\n-      \\message{\\linenumber Undefined cross reference `#1'.}%\n-    \\else\n-      \\ifwarnedxrefs\\else\n-        \\global\\warnedxrefstrue\n-        \\message{Cross reference values unknown; you must run TeX again.}%\n+    \\iflinks\n+      \\ifhavexrefs\n+        \\message{\\linenumber Undefined cross reference `#1'.}%\n+      \\else\n+        \\ifwarnedxrefs\\else\n+          \\global\\warnedxrefstrue\n+          \\message{Cross reference values unknown; you must run TeX again.}%\n+        \\fi\n       \\fi\n     \\fi\n   \\else\n@@ -4724,7 +4970,9 @@\n \\openin 1 = epsf.tex\n \\ifeof 1 \\else\n   \\closein 1\n-  \\def\\epsfannounce{\\toks0 = }% do not bother showing banner\n+  % Do not bother showing banner with post-v2.7 epsf.tex (available in\n+  % doc/epsf.tex until it shows up on ctan).\n+  \\def\\epsfannounce{\\toks0 = }%\n   \\input epsf.tex\n \\fi\n %\n@@ -4754,39 +5002,26 @@\n   % \\epsfbox itself resets \\epsf?size at each figure.\n   \\setbox0 = \\hbox{\\ignorespaces #2}\\ifdim\\wd0 > 0pt \\epsfxsize=#2\\relax \\fi\n   \\setbox0 = \\hbox{\\ignorespaces #3}\\ifdim\\wd0 > 0pt \\epsfysize=#3\\relax \\fi\n-  \\epsfbox{#1.eps}%\n+  % If the image is by itself, center it.\n+  \\ifvmode\n+    \\centerline{\\epsfbox{#1.eps}}%\n+  \\else\n+    \\epsfbox{#1.eps}%\n+  \\fi\n }\n \n-% End of control word definitions.\n-\n-\n-\\message{and turning on texinfo input format.}\n-\n-\\def\\openindices{%\n-   \\newindex{cp}%\n-   \\newcodeindex{fn}%\n-   \\newcodeindex{vr}%\n-   \\newcodeindex{tp}%\n-   \\newcodeindex{ky}%\n-   \\newcodeindex{pg}%\n-}\n \n-% Set some numeric style parameters, for 8.5 x 11 format.\n+\\message{paper sizes,}\n+% And other related parameters.\n \n-\\hsize = 6in\n-\\hoffset = .25in\n \\newdimen\\defaultparindent \\defaultparindent = 15pt\n-\\parindent = \\defaultparindent\n-\\parskip 3pt plus 2pt minus 1pt\n-\\setleading{13.2pt}\n-\\advance\\topskip by 1.2cm\n \n \\chapheadingskip = 15pt plus 4pt minus 2pt\n \\secheadingskip = 12pt plus 3pt minus 2pt\n \\subsecheadingskip = 9pt plus 2pt minus 2pt\n \n % Prevent underfull vbox error messages.\n-\\vbadness=10000\n+\\vbadness = 10000\n \n % Following George Bush, just get rid of widows and orphans.\n \\widowpenalty=10000\n@@ -4795,101 +5030,125 @@\n % Use TeX 3.0's \\emergencystretch to help line breaking, but if we're\n % using an old version of TeX, don't do anything.  We want the amount of\n % stretch added to depend on the line length, hence the dependence on\n-% \\hsize.  This makes it come to about 9pt for the 8.5x11 format.\n+% \\hsize.  This makes it come to about 9pt for the 8.5x11 format.  We\n+% call this whenever the paper size is set.\n %\n-\\ifx\\emergencystretch\\thisisundefined\n-  % Allow us to assign to \\emergencystretch anyway.\n-  \\def\\emergencystretch{\\dimen0}%\n-\\else\n-  \\emergencystretch = \\hsize\n-  \\divide\\emergencystretch by 45\n-\\fi\n+\\def\\setemergencystretch{%\n+  \\ifx\\emergencystretch\\thisisundefined\n+    % Allow us to assign to \\emergencystretch anyway.\n+    \\def\\emergencystretch{\\dimen0}%\n+  \\else\n+    \\emergencystretch = \\hsize\n+    \\divide\\emergencystretch by 45\n+  \\fi\n+}\n \n-% Use @smallbook to reset parameters for 7x9.5 format  (or else 7x9.25)\n-\\def\\smallbook{\n-  \\global\\chapheadingskip = 15pt plus 4pt minus 2pt\n-  \\global\\secheadingskip = 12pt plus 3pt minus 2pt\n-  \\global\\subsecheadingskip = 9pt plus 2pt minus 2pt\n+% Parameters in order: 1) textheight; 2) textwidth; 3) voffset;\n+% 4) hoffset; 5) binding offset; 6) topskip.  Then whoever calls us can\n+% set \\parskip and call \\setleading for \\baselineskip.\n+%\n+\\def\\internalpagesizes#1#2#3#4#5#6{%\n+  \\voffset = #3\\relax\n+  \\topskip = #6\\relax\n+  \\splittopskip = \\topskip\n   %\n-  \\global\\lispnarrowing = 0.3in\n-  \\setleading{12pt}\n-  \\advance\\topskip by -1cm\n-  \\global\\parskip 2pt plus 1pt\n-  \\global\\hsize = 5in\n-  \\global\\vsize=7.5in\n-  \\global\\tolerance=700\n-  \\global\\hfuzz=1pt\n-  \\global\\contentsrightmargin=0pt\n-  \\global\\deftypemargin=0pt\n-  \\global\\defbodyindent=.5cm\n+  \\vsize = #1\\relax\n+  \\advance\\vsize by \\topskip\n+  \\outervsize = \\vsize\n+  \\advance\\outervsize by 0.6in\n+  \\pageheight = \\vsize\n   %\n-  \\global\\pagewidth=\\hsize\n-  \\global\\pageheight=\\vsize\n+  \\hsize = #2\\relax\n+  \\outerhsize = \\hsize\n+  \\advance\\outerhsize by 0.5in\n+  \\pagewidth = \\hsize\n   %\n-  \\global\\let\\smalllisp=\\smalllispx\n-  \\global\\let\\smallexample=\\smalllispx\n-  \\global\\def\\Esmallexample{\\Esmalllisp}\n+  \\normaloffset = #4\\relax\n+  \\bindingoffset = #5\\relax\n+  %\n+  \\parindent = \\defaultparindent\n+  \\setemergencystretch\n }\n \n-% Use @afourpaper to print on European A4 paper.\n-\\def\\afourpaper{\n-\\global\\tolerance=700\n-\\global\\hfuzz=1pt\n-\\setleading{12pt}\n-\\global\\parskip 15pt plus 1pt\n-\n-\\global\\vsize= 53\\baselineskip\n-\\advance\\vsize by \\topskip\n-%\\global\\hsize=   5.85in     % A4 wide 10pt\n-\\global\\hsize=  6.5in\n-\\global\\outerhsize=\\hsize\n-\\global\\advance\\outerhsize by 0.5in\n-\\global\\outervsize=\\vsize\n-\\global\\advance\\outervsize by 0.6in\n-\n-\\global\\pagewidth=\\hsize\n-\\global\\pageheight=\\vsize\n-}\n+% @letterpaper (the default).\n+\\def\\letterpaper{{\\globaldefs = 1\n+  \\parskip = 3pt plus 2pt minus 1pt\n+  \\setleading{13.2pt}%\n+  %\n+  % If page is nothing but text, make it come out even.\n+  \\internalpagesizes{46\\baselineskip}{6in}{\\voffset}{.25in}{\\bindingoffset}{36pt}%\n+}}\n+\n+% Use @smallbook to reset parameters for 7x9.5 (or so) format.\n+\\def\\smallbook{{\\globaldefs = 1\n+  \\parskip = 2pt plus 1pt\n+  \\setleading{12pt}%\n+  %\n+  \\internalpagesizes{7.5in}{5.in}{\\voffset}{.25in}{\\bindingoffset}{16pt}%\n+  %\n+  \\lispnarrowing = 0.3in\n+  \\tolerance = 700\n+  \\hfuzz = 1pt\n+  \\contentsrightmargin = 0pt\n+  \\deftypemargin = 0pt\n+  \\defbodyindent = .5cm\n+  %\n+  \\let\\smalllisp = \\smalllispx\n+  \\let\\smallexample = \\smalllispx\n+  \\def\\Esmallexample{\\Esmalllisp}%\n+}}\n \n-\\bindingoffset=0pt\n-\\normaloffset=\\hoffset\n-\\pagewidth=\\hsize\n-\\pageheight=\\vsize\n-\n-% Allow control of the text dimensions.  Parameters in order: textheight;\n-% textwidth; voffset; hoffset; binding offset; topskip.\n-% All require a dimension;\n-% header is additional; added length extends the bottom of the page.\n-\n-\\def\\changepagesizes#1#2#3#4#5#6{\n- \\global\\vsize= #1\n- \\global\\topskip= #6\n- \\advance\\vsize by \\topskip\n- \\global\\voffset= #3\n- \\global\\hsize= #2\n- \\global\\outerhsize=\\hsize\n- \\global\\advance\\outerhsize by 0.5in\n- \\global\\outervsize=\\vsize\n- \\global\\advance\\outervsize by 0.6in\n- \\global\\pagewidth=\\hsize\n- \\global\\pageheight=\\vsize\n- \\global\\normaloffset= #4\n- \\global\\bindingoffset= #5}\n+% Use @afourpaper to print on European A4 paper.\n+\\def\\afourpaper{{\\globaldefs = 1\n+  \\setleading{12pt}%\n+  \\parskip = 3pt plus 2pt minus 1pt\n+  %\n+  \\internalpagesizes{53\\baselineskip}{6.5in}{\\voffset}{.25in}{\\bindingoffset}{44pt}%\n+  %\n+  \\tolerance = 700\n+  \\hfuzz = 1pt\n+}}\n \n % A specific text layout, 24x15cm overall, intended for A4 paper.  Top margin\n % 29mm, hence bottom margin 28mm, nominal side margin 3cm.\n-\\def\\afourlatex\n-        {\\global\\tolerance=700\n-        \\global\\hfuzz=1pt\n-        \\setleading{12pt}\n-        \\global\\parskip 15pt plus 1pt\n-        \\advance\\baselineskip by 1.6pt\n-        \\changepagesizes{237mm}{150mm}{3.6mm}{3.6mm}{3mm}{7mm}\n-        }\n+\\def\\afourlatex{{\\globaldefs = 1\n+  \\setleading{13.6pt}%\n+  %\n+  \\afourpaper\n+  \\internalpagesizes{237mm}{150mm}{3.6mm}{3.6mm}{3mm}{7mm}%\n+  %\n+  \\globaldefs = 0\n+}}\n \n % Use @afourwide to print on European A4 paper in wide format.\n-\\def\\afourwide{\\afourpaper\n-\\changepagesizes{9.5in}{6.5in}{\\hoffset}{\\normaloffset}{\\bindingoffset}{7mm}}\n+\\def\\afourwide{%\n+  \\afourpaper\n+  \\internalpagesizes{9.5in}{6.5in}{\\hoffset}{\\normaloffset}{\\bindingoffset}{7mm}%\n+  %\n+  \\globaldefs = 0\n+}\n+\n+% @pagesizes TEXTHEIGHT[,TEXTWIDTH]\n+% Perhaps we should allow setting the margins, \\topskip, \\parskip,\n+% and/or leading, also. Or perhaps we should compute them somehow.\n+% \n+\\def\\pagesizes{\\parsearg\\pagesizesxxx}\n+\\def\\pagesizesxxx#1{\\pagesizesyyy #1,,\\finish}\n+\\def\\pagesizesyyy#1,#2,#3\\finish{{%\n+  \\setbox0 = \\hbox{\\ignorespaces #2}\\ifdim\\wd0 > 0pt \\hsize=#2\\relax \\fi\n+  \\globaldefs = 1\n+  %\n+  \\parskip = 3pt plus 2pt minus 1pt\n+  \\setleading{13.2pt}%\n+  %\n+  \\internalpagesizes{#1}{\\hsize}{\\voffset}{\\normaloffset}{\\bindingoffset}{44pt}%\n+}}\n+\n+% Set default to letter.\n+% \n+\\letterpaper\n+\n+\\message{and turning on texinfo input format.}\n \n % Define macros to output various characters with catcode for normal text.\n \\catcode`\\\"=\\other"}, {"sha": "0637a1adf8093c50ac89fc588bc49bcc473bc90b", "filename": "gcc/tm.texi", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ec36da574f8272705a3ead59bbd289f23793429/gcc%2Ftm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ec36da574f8272705a3ead59bbd289f23793429/gcc%2Ftm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftm.texi?ref=9ec36da574f8272705a3ead59bbd289f23793429", "patch": "@@ -283,6 +283,15 @@ the argument @samp{-lgcc} to tell the linker to do the search.\n This macro is similar to @code{LINK_LIBGCC_SPECIAL}, except that it does\n not affect @samp{-L} options.\n \n+@findex LINK_COMMAND_SPEC\n+@item LINK_COMMAND_SPEC\n+A C string constant giving the complete command line need to execute the\n+linker.  When you do this, you will need to update your port each time a\n+change is made to the link command line within @file{gcc.c}.  Therefore,\n+define this macro only if you need to completely redefine the command\n+line for invoking the linker and there is no other way to accomplish\n+the effect you need.\n+\n @findex MULTILIB_DEFAULTS\n @item MULTILIB_DEFAULTS\n Define this macro as a C expression for the initializer of an array of\n@@ -6723,6 +6732,13 @@ define @code{INCOMING_RETURN_ADDR_RTX} and either set\n prologue, or call @code{dwarf2out_def_cfa} and @code{dwarf2out_reg_save}\n as appropriate from @code{FUNCTION_PROLOGUE} if you don't.\n \n+@findex DWARF2_FRAME_INFO\n+@item DWARF2_FRAME_INFO\n+Define this macro to a nonzero value if GNU CC should always output\n+Dwarf 2 frame information.  If @code{DWARF2_UNWIND_INFO}\n+(@pxref{Exception Region Output} is nonzero, GNU CC will output this\n+information not matter how you define @code{DWARF2_FRAME_INFO}.\n+\n @findex LINKER_DOES_NOT_WORK_WITH_DWARF2\n @item LINKER_DOES_NOT_WORK_WITH_DWARF2\n Define this macro if the linker does not work with Dwarf version 2.\n@@ -7316,6 +7332,11 @@ of @var{olddecl}.  Examples of when this is needed are when one attribute\n overrides another, or when an attribute is nullified by a subsequent\n definition.\n \n+@findex SET_DEFAULT_DECL_ATTRIBUTES\n+@item SET_DEFAULT_DECL_ATTRIBUTES (@var{decl}, @var{attributes})\n+If defined, a C statement that assigns default attributes to\n+newly defined @var{decl}.\n+\n @findex DOLLARS_IN_IDENTIFIERS\n @item DOLLARS_IN_IDENTIFIERS\n Define this macro to control use of the character @samp{$} in identifier"}, {"sha": "353d418c05567d7a01e5033486114f299e434f04", "filename": "gcc/toplev.c", "status": "modified", "additions": 15, "deletions": 8, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ec36da574f8272705a3ead59bbd289f23793429/gcc%2Ftoplev.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ec36da574f8272705a3ead59bbd289f23793429/gcc%2Ftoplev.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftoplev.c?ref=9ec36da574f8272705a3ead59bbd289f23793429", "patch": "@@ -495,6 +495,11 @@ int flag_move_all_movables = 0;\n \n int flag_reduce_all_givs = 0;\n \n+/* Nonzero to perform full register move optimization passes.  This is the\n+   default for -O2.  */\n+\n+int flag_regmove = 0;\n+\n /* Nonzero for -fwritable-strings:\n    store string constants in data segment and don't uniquize them.  */\n \n@@ -701,8 +706,6 @@ int flag_check_memory_usage = 0;\n    -fcheck-memory-usage.  */\n int flag_prefix_function_name = 0;\n \n-int flag_regmove = 0;\n-\n /* 0 if pointer arguments may alias each other.  True in C.\n    1 if pointer arguments may not alias each other but may alias\n    global variables.\n@@ -717,6 +720,8 @@ int flag_argument_noalias = 0;\n    if alias analysis (in general) is enabled.  */\n int flag_strict_aliasing = 0;\n \n+extern int flag_dump_unnumbered;\n+\n /* Table of language-independent -f options.\n    STRING is the option name.  VARIABLE is the address of the variable.\n    ON_VALUE is the value to store in VARIABLE\n@@ -783,14 +788,16 @@ struct { char *string; int *variable; int on_value;} f_options[] =\n   {\"verbose-asm\", &flag_verbose_asm, 1},\n   {\"gnu-linker\", &flag_gnu_linker, 1},\n   {\"regmove\", &flag_regmove, 1},\n+  {\"optimize-register-move\", &flag_regmove, 1},\n   {\"pack-struct\", &flag_pack_struct, 1},\n   {\"stack-check\", &flag_stack_check, 1},\n   {\"argument-alias\", &flag_argument_noalias, 0},\n   {\"argument-noalias\", &flag_argument_noalias, 1},\n   {\"argument-noalias-global\", &flag_argument_noalias, 2},\n   {\"strict-aliasing\", &flag_strict_aliasing, 1},\n   {\"check-memory-usage\", &flag_check_memory_usage, 1},\n-  {\"prefix-function-name\", &flag_prefix_function_name, 1}\n+  {\"prefix-function-name\", &flag_prefix_function_name, 1},\n+  {\"dump-unnumbered\", &flag_dump_unnumbered, 1}\n };\n \n /* Table of language-specific options.  */\n@@ -3517,11 +3524,6 @@ rest_of_compilation (decl)\n \t       failure = reload (insns, 0, rtl_dump_file);\n \t   });\n \n-  if (global_reg_dump)\n-    {\n-      TIMEVAR (dump_time, dump_global_regs (rtl_dump_file));\n-      close_dump_file (print_rtl_with_bb, insns);\n-    }\n \n   if (failure)\n     goto exit_rest_of_compilation;\n@@ -3539,6 +3541,11 @@ rest_of_compilation (decl)\n \n   thread_prologue_and_epilogue_insns (insns);\n \n+  if (global_reg_dump)\n+    {\n+      TIMEVAR (dump_time, dump_global_regs (rtl_dump_file));\n+      close_dump_file (print_rtl_with_bb, insns);\n+    }\n   if (optimize > 0 && flag_schedule_insns_after_reload)\n     {\n       if (sched2_dump)"}, {"sha": "6fcae3f94b6eeda32bf70bea8521fde4b6752bd6", "filename": "gcc/tree.c", "status": "modified", "additions": 26, "deletions": 24, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ec36da574f8272705a3ead59bbd289f23793429/gcc%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ec36da574f8272705a3ead59bbd289f23793429/gcc%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.c?ref=9ec36da574f8272705a3ead59bbd289f23793429", "patch": "@@ -4950,9 +4950,15 @@ get_set_constructor_bytes (init, buffer, wd_size)\n     }\n   return non_const_bits;\n }\n-\n+\f\n #ifdef ENABLE_CHECKING\n-/* Complain if the tree code does not match the expected one.  */\n+\n+/* Complain if the tree code does not match the expected one.\n+   NODE is the tree node in question, CODE is the expected tree code,\n+   and FILE and LINE are the filename and line number, respectively,\n+   of the line on which the check was done.  If NONFATAL is nonzero,\n+   don't abort if the reference is invalid; instead, return 0.\n+   If the reference is valid, return NODE.  */\n \n tree\n tree_check (node, code, file, line, nofatal)\n@@ -4962,19 +4968,17 @@ tree_check (node, code, file, line, nofatal)\n      int line;\n      int nofatal;\n {\n-  if (TREE_CODE (node) != code)\n-    {\n-      if (nofatal)\n-\treturn 0;\n-      else\n-\tfatal (\"%s:%d: Expect %s, have %s\\n\", file, line,\n-\t       tree_code_name[code], tree_code_name[TREE_CODE (node)]);\n-    }\n-\n-  return node;\n+  if (TREE_CODE (node) == code)\n+    return node;\n+  else if (nofatal)\n+    return 0;\n+  else\n+    fatal (\"%s:%d: Expect %s, have %s\\n\", file, line,\n+\t   tree_code_name[code], tree_code_name[TREE_CODE (node)]);\n }\n \n-/* Complain if the class of the tree node does not match.  */\n+/* Similar to above, except that we check for a class of tree\n+   code, given in CL.  */\n \n tree\n tree_class_check (node, cl, file, line, nofatal)\n@@ -4984,18 +4988,16 @@ tree_class_check (node, cl, file, line, nofatal)\n      int line;\n      int nofatal;\n {\n-  if (TREE_CODE_CLASS (TREE_CODE (node)) != cl)\n-    {\n-      if (nofatal)\n-\treturn 0;\n-      else\n-\tfatal (\"%s:%d: Expect '%c', have '%s'\\n\", file, line,\n-\t       cl, tree_code_name[TREE_CODE (node)]);\n-    }\n-\n-  return node;\n+  if (TREE_CODE_CLASS (TREE_CODE (node)) == cl)\n+    return node;\n+  else if (nofatal)\n+    return 0;\n+  else\n+    fatal (\"%s:%d: Expect '%c', have '%s'\\n\", file, line,\n+\t   cl, tree_code_name[TREE_CODE (node)]);\n }\n-/* Complain if the node is not an expression. */\n+\n+/* Likewise, but complain if the tree node is not an expression.  */\n \n tree\n expr_check (node, ignored, file, line, nofatal)"}, {"sha": "6a88bee3ede8b168c0cc23a4dc239d2775ac88ef", "filename": "gcc/tree.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ec36da574f8272705a3ead59bbd289f23793429/gcc%2Ftree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ec36da574f8272705a3ead59bbd289f23793429/gcc%2Ftree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.h?ref=9ec36da574f8272705a3ead59bbd289f23793429", "patch": "@@ -1610,7 +1610,7 @@ extern tree save_expr\t\t\tPROTO((tree));\n extern int first_rtl_op\t\t\tPROTO((enum tree_code));\n \n /* unsave_expr (EXP) returns an expression equivalent to EXP but it\n-   can be used multiple times and will evaluate EXP, in it's entirety\n+   can be used multiple times and will evaluate EXP, in its entirety\n    each time.  */\n \n extern tree unsave_expr\t\t\tPROTO((tree));"}, {"sha": "1b4f8606d51cf0a342a11ad2c133b5ceb89ac544", "filename": "gcc/version.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ec36da574f8272705a3ead59bbd289f23793429/gcc%2Fversion.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ec36da574f8272705a3ead59bbd289f23793429/gcc%2Fversion.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fversion.c?ref=9ec36da574f8272705a3ead59bbd289f23793429", "patch": "@@ -1 +1 @@\n-char *version_string = \"egcs-2.91.43 19980629 (gcc2 ss-980502 experimental)\";\n+char *version_string = \"egcs-2.91.45 19980628 (gcc2 ss-980609 experimental)\";"}]}