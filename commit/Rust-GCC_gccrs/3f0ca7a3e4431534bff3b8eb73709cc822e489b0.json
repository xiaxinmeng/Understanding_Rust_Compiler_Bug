{"sha": "3f0ca7a3e4431534bff3b8eb73709cc822e489b0", "node_id": "C_kwDOANBUbNoAKDNmMGNhN2EzZTQ0MzE1MzRiZmYzYjhlYjczNzA5Y2M4MjJlNDg5YjA", "commit": {"author": {"name": "Stam Markianos-Wright", "email": "stam.markianos-wright@arm.com", "date": "2023-04-04T12:06:41Z"}, "committer": {"name": "Stam Markianos-Wright", "email": "stam.markianos-wright@arm.com", "date": "2023-04-04T12:09:38Z"}, "message": "arm: Fix vcreate definition\n\nFrom the initial merge of the MVE backend, the vcreate\nintrinsic has had the vector lanes mixed up, compared\nto the intended (as per the ACLE) definition. This is\nalso a discrepancy with clang:\nhttps://godbolt.org/z/4n93e5aqj\n\nThis patches simply switches the operands around and\nmakes the tests more specific on the input registers\n(I do not touch the output Q regs as they vary based\non softfp/hardfp or the input registers when the input\nis a constant, since, in that case, a single register\nis loaded with a constant and then the same register is\nused twice as \"vmov q0[2], q0[0], r2, r2\" and the reg\nnum might not always be guaranteed).\n\ngcc/ChangeLog:\n\n\t* config/arm/mve.md (mve_vcvtq_n_to_f_<supf><mode>): Swap operands.\n\t(mve_vcreateq_f<mode>): Swap operands.\n\ngcc/testsuite/ChangeLog:\n\n\t* gcc.target/arm/mve/intrinsics/vcreateq_f16.c: Tighten test.\n\t* gcc.target/arm/mve/intrinsics/vcreateq_f32.c: Tighten test.\n\t* gcc.target/arm/mve/intrinsics/vcreateq_s16.c: Tighten test.\n\t* gcc.target/arm/mve/intrinsics/vcreateq_s32.c: Tighten test.\n\t* gcc.target/arm/mve/intrinsics/vcreateq_s64.c: Tighten test.\n\t* gcc.target/arm/mve/intrinsics/vcreateq_s8.c: Tighten test.\n\t* gcc.target/arm/mve/intrinsics/vcreateq_u16.c: Tighten test.\n\t* gcc.target/arm/mve/intrinsics/vcreateq_u32.c: Tighten test.\n\t* gcc.target/arm/mve/intrinsics/vcreateq_u64.c: Tighten test.\n\t* gcc.target/arm/mve/intrinsics/vcreateq_u8.c: Tighten test.", "tree": {"sha": "c2342a30ec164cbca6dd4cdd52381b228721988d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c2342a30ec164cbca6dd4cdd52381b228721988d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3f0ca7a3e4431534bff3b8eb73709cc822e489b0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3f0ca7a3e4431534bff3b8eb73709cc822e489b0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3f0ca7a3e4431534bff3b8eb73709cc822e489b0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3f0ca7a3e4431534bff3b8eb73709cc822e489b0/comments", "author": {"login": "Stammark", "id": 30555766, "node_id": "MDQ6VXNlcjMwNTU1NzY2", "avatar_url": "https://avatars.githubusercontent.com/u/30555766?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Stammark", "html_url": "https://github.com/Stammark", "followers_url": "https://api.github.com/users/Stammark/followers", "following_url": "https://api.github.com/users/Stammark/following{/other_user}", "gists_url": "https://api.github.com/users/Stammark/gists{/gist_id}", "starred_url": "https://api.github.com/users/Stammark/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Stammark/subscriptions", "organizations_url": "https://api.github.com/users/Stammark/orgs", "repos_url": "https://api.github.com/users/Stammark/repos", "events_url": "https://api.github.com/users/Stammark/events{/privacy}", "received_events_url": "https://api.github.com/users/Stammark/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Stammark", "id": 30555766, "node_id": "MDQ6VXNlcjMwNTU1NzY2", "avatar_url": "https://avatars.githubusercontent.com/u/30555766?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Stammark", "html_url": "https://github.com/Stammark", "followers_url": "https://api.github.com/users/Stammark/followers", "following_url": "https://api.github.com/users/Stammark/following{/other_user}", "gists_url": "https://api.github.com/users/Stammark/gists{/gist_id}", "starred_url": "https://api.github.com/users/Stammark/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Stammark/subscriptions", "organizations_url": "https://api.github.com/users/Stammark/orgs", "repos_url": "https://api.github.com/users/Stammark/repos", "events_url": "https://api.github.com/users/Stammark/events{/privacy}", "received_events_url": "https://api.github.com/users/Stammark/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "688d126b69215db29774c249b052e52d765782b3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/688d126b69215db29774c249b052e52d765782b3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/688d126b69215db29774c249b052e52d765782b3"}], "stats": {"total": 64, "additions": 32, "deletions": 32}, "files": [{"sha": "35eab6c94bfceb04a8760b494eb8f1133e640a59", "filename": "gcc/config/arm/mve.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f0ca7a3e4431534bff3b8eb73709cc822e489b0/gcc%2Fconfig%2Farm%2Fmve.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f0ca7a3e4431534bff3b8eb73709cc822e489b0/gcc%2Fconfig%2Farm%2Fmve.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fmve.md?ref=3f0ca7a3e4431534bff3b8eb73709cc822e489b0", "patch": "@@ -723,7 +723,7 @@\n \t VCREATEQ_F))\n   ]\n   \"TARGET_HAVE_MVE && TARGET_HAVE_MVE_FLOAT\"\n-  \"vmov %q0[2], %q0[0], %Q2, %Q1\\;vmov %q0[3], %q0[1], %R2, %R1\"\n+  \"vmov %q0[2], %q0[0], %Q1, %Q2\\;vmov %q0[3], %q0[1], %R1, %R2\"\n   [(set_attr \"type\" \"mve_move\")\n    (set_attr \"length\"\"8\")])\n \n@@ -738,7 +738,7 @@\n \t VCREATEQ))\n   ]\n   \"TARGET_HAVE_MVE\"\n-  \"vmov %q0[2], %q0[0], %Q2, %Q1\\;vmov %q0[3], %q0[1], %R2, %R1\"\n+  \"vmov %q0[2], %q0[0], %Q1, %Q2\\;vmov %q0[3], %q0[1], %R1, %R2\"\n   [(set_attr \"type\" \"mve_move\")\n    (set_attr \"length\"\"8\")])\n "}, {"sha": "8d6764d893834bb751ba79476f67ef5111ee1775", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vcreateq_f16.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f0ca7a3e4431534bff3b8eb73709cc822e489b0/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcreateq_f16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f0ca7a3e4431534bff3b8eb73709cc822e489b0/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcreateq_f16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcreateq_f16.c?ref=3f0ca7a3e4431534bff3b8eb73709cc822e489b0", "patch": "@@ -12,8 +12,8 @@ extern \"C\" {\n /*\n **foo:\n **\t...\n-**\tvmov q[0-9+]\\[2\\], q[0-9+]\\[0\\], r[0-9+], r[0-9+]\n-**\tvmov q[0-9+]\\[3\\], q[0-9+]\\[1\\], r[0-9+], r[0-9+]\n+**\tvmov q[0-9+]\\[2\\], q[0-9+]\\[0\\], r0, r2\n+**\tvmov q[0-9+]\\[3\\], q[0-9+]\\[1\\], r1, r3\n **\t...\n */\n float16x8_t\n@@ -39,4 +39,4 @@ foo1 ()\n }\n #endif\n \n-/* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file\n+/* { dg-final { scan-assembler-not \"__ARM_undef\" } } */"}, {"sha": "6ab05ced809ec38eb5b72123120a0c822cf3e351", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vcreateq_f32.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f0ca7a3e4431534bff3b8eb73709cc822e489b0/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcreateq_f32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f0ca7a3e4431534bff3b8eb73709cc822e489b0/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcreateq_f32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcreateq_f32.c?ref=3f0ca7a3e4431534bff3b8eb73709cc822e489b0", "patch": "@@ -12,8 +12,8 @@ extern \"C\" {\n /*\n **foo:\n **\t...\n-**\tvmov q[0-9+]\\[2\\], q[0-9+]\\[0\\], r[0-9+], r[0-9+]\n-**\tvmov q[0-9+]\\[3\\], q[0-9+]\\[1\\], r[0-9+], r[0-9+]\n+**\tvmov q[0-9+]\\[2\\], q[0-9+]\\[0\\], r0, r2\n+**\tvmov q[0-9+]\\[3\\], q[0-9+]\\[1\\], r1, r3\n **\t...\n */\n float32x4_t\n@@ -39,4 +39,4 @@ foo1 ()\n }\n #endif\n \n-/* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file\n+/* { dg-final { scan-assembler-not \"__ARM_undef\" } } */"}, {"sha": "290637595a4a26c019abcb6e85f1741d72ade93f", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vcreateq_s16.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f0ca7a3e4431534bff3b8eb73709cc822e489b0/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcreateq_s16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f0ca7a3e4431534bff3b8eb73709cc822e489b0/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcreateq_s16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcreateq_s16.c?ref=3f0ca7a3e4431534bff3b8eb73709cc822e489b0", "patch": "@@ -12,8 +12,8 @@ extern \"C\" {\n /*\n **foo:\n **\t...\n-**\tvmov q[0-9+]\\[2\\], q[0-9+]\\[0\\], r[0-9+], r[0-9+]\n-**\tvmov q[0-9+]\\[3\\], q[0-9+]\\[1\\], r[0-9+], r[0-9+]\n+**\tvmov q[0-9+]\\[2\\], q[0-9+]\\[0\\], r0, r2\n+**\tvmov q[0-9+]\\[3\\], q[0-9+]\\[1\\], r1, r3\n **\t...\n */\n int16x8_t\n@@ -39,4 +39,4 @@ foo1 ()\n }\n #endif\n \n-/* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file\n+/* { dg-final { scan-assembler-not \"__ARM_undef\" } } */"}, {"sha": "4aeead1175eae97ca579bd076fe77600735d47a5", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vcreateq_s32.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f0ca7a3e4431534bff3b8eb73709cc822e489b0/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcreateq_s32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f0ca7a3e4431534bff3b8eb73709cc822e489b0/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcreateq_s32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcreateq_s32.c?ref=3f0ca7a3e4431534bff3b8eb73709cc822e489b0", "patch": "@@ -12,8 +12,8 @@ extern \"C\" {\n /*\n **foo:\n **\t...\n-**\tvmov q[0-9+]\\[2\\], q[0-9+]\\[0\\], r[0-9+], r[0-9+]\n-**\tvmov q[0-9+]\\[3\\], q[0-9+]\\[1\\], r[0-9+], r[0-9+]\n+**\tvmov q[0-9+]\\[2\\], q[0-9+]\\[0\\], r0, r2\n+**\tvmov q[0-9+]\\[3\\], q[0-9+]\\[1\\], r1, r3\n **\t...\n */\n int32x4_t\n@@ -39,4 +39,4 @@ foo1 ()\n }\n #endif\n \n-/* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file\n+/* { dg-final { scan-assembler-not \"__ARM_undef\" } } */"}, {"sha": "9f6df427a8fb51c04ac1a10590e6ca70b31aea4c", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vcreateq_s64.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f0ca7a3e4431534bff3b8eb73709cc822e489b0/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcreateq_s64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f0ca7a3e4431534bff3b8eb73709cc822e489b0/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcreateq_s64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcreateq_s64.c?ref=3f0ca7a3e4431534bff3b8eb73709cc822e489b0", "patch": "@@ -12,8 +12,8 @@ extern \"C\" {\n /*\n **foo:\n **\t...\n-**\tvmov q[0-9+]\\[2\\], q[0-9+]\\[0\\], r[0-9+], r[0-9+]\n-**\tvmov q[0-9+]\\[3\\], q[0-9+]\\[1\\], r[0-9+], r[0-9+]\n+**\tvmov q[0-9+]\\[2\\], q[0-9+]\\[0\\], r0, r2\n+**\tvmov q[0-9+]\\[3\\], q[0-9+]\\[1\\], r1, r3\n **\t...\n */\n int64x2_t\n@@ -39,4 +39,4 @@ foo1 ()\n }\n #endif\n \n-/* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file\n+/* { dg-final { scan-assembler-not \"__ARM_undef\" } } */"}, {"sha": "196c147fb65010fbcb5ab5bd7f00cf056807b11a", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vcreateq_s8.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f0ca7a3e4431534bff3b8eb73709cc822e489b0/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcreateq_s8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f0ca7a3e4431534bff3b8eb73709cc822e489b0/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcreateq_s8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcreateq_s8.c?ref=3f0ca7a3e4431534bff3b8eb73709cc822e489b0", "patch": "@@ -12,8 +12,8 @@ extern \"C\" {\n /*\n **foo:\n **\t...\n-**\tvmov q[0-9+]\\[2\\], q[0-9+]\\[0\\], r[0-9+], r[0-9+]\n-**\tvmov q[0-9+]\\[3\\], q[0-9+]\\[1\\], r[0-9+], r[0-9+]\n+**\tvmov q[0-9+]\\[2\\], q[0-9+]\\[0\\], r0, r2\n+**\tvmov q[0-9+]\\[3\\], q[0-9+]\\[1\\], r1, r3\n **\t...\n */\n int8x16_t\n@@ -39,4 +39,4 @@ foo1 ()\n }\n #endif\n \n-/* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file\n+/* { dg-final { scan-assembler-not \"__ARM_undef\" } } */"}, {"sha": "20b18e2ac15f2765d4ce20e7363f0b5822a5121a", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vcreateq_u16.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f0ca7a3e4431534bff3b8eb73709cc822e489b0/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcreateq_u16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f0ca7a3e4431534bff3b8eb73709cc822e489b0/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcreateq_u16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcreateq_u16.c?ref=3f0ca7a3e4431534bff3b8eb73709cc822e489b0", "patch": "@@ -12,8 +12,8 @@ extern \"C\" {\n /*\n **foo:\n **\t...\n-**\tvmov q[0-9+]\\[2\\], q[0-9+]\\[0\\], r[0-9+], r[0-9+]\n-**\tvmov q[0-9+]\\[3\\], q[0-9+]\\[1\\], r[0-9+], r[0-9+]\n+**\tvmov q[0-9+]\\[2\\], q[0-9+]\\[0\\], r0, r2\n+**\tvmov q[0-9+]\\[3\\], q[0-9+]\\[1\\], r1, r3\n **\t...\n */\n uint16x8_t\n@@ -39,4 +39,4 @@ foo1 ()\n }\n #endif\n \n-/* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file\n+/* { dg-final { scan-assembler-not \"__ARM_undef\" } } */"}, {"sha": "febfd3bd7828c2fa5598407741d9dc27e248772c", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vcreateq_u32.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f0ca7a3e4431534bff3b8eb73709cc822e489b0/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcreateq_u32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f0ca7a3e4431534bff3b8eb73709cc822e489b0/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcreateq_u32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcreateq_u32.c?ref=3f0ca7a3e4431534bff3b8eb73709cc822e489b0", "patch": "@@ -12,8 +12,8 @@ extern \"C\" {\n /*\n **foo:\n **\t...\n-**\tvmov q[0-9+]\\[2\\], q[0-9+]\\[0\\], r[0-9+], r[0-9+]\n-**\tvmov q[0-9+]\\[3\\], q[0-9+]\\[1\\], r[0-9+], r[0-9+]\n+**\tvmov q[0-9+]\\[2\\], q[0-9+]\\[0\\], r0, r2\n+**\tvmov q[0-9+]\\[3\\], q[0-9+]\\[1\\], r1, r3\n **\t...\n */\n uint32x4_t\n@@ -39,4 +39,4 @@ foo1 ()\n }\n #endif\n \n-/* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file\n+/* { dg-final { scan-assembler-not \"__ARM_undef\" } } */"}, {"sha": "5a49b346bf4fcd8bb59d0702190c8dd576b261e2", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vcreateq_u64.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f0ca7a3e4431534bff3b8eb73709cc822e489b0/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcreateq_u64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f0ca7a3e4431534bff3b8eb73709cc822e489b0/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcreateq_u64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcreateq_u64.c?ref=3f0ca7a3e4431534bff3b8eb73709cc822e489b0", "patch": "@@ -12,8 +12,8 @@ extern \"C\" {\n /*\n **foo:\n **\t...\n-**\tvmov q[0-9+]\\[2\\], q[0-9+]\\[0\\], r[0-9+], r[0-9+]\n-**\tvmov q[0-9+]\\[3\\], q[0-9+]\\[1\\], r[0-9+], r[0-9+]\n+**\tvmov q[0-9+]\\[2\\], q[0-9+]\\[0\\], r0, r2\n+**\tvmov q[0-9+]\\[3\\], q[0-9+]\\[1\\], r1, r3\n **\t...\n */\n uint64x2_t\n@@ -39,4 +39,4 @@ foo1 ()\n }\n #endif\n \n-/* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file\n+/* { dg-final { scan-assembler-not \"__ARM_undef\" } } */"}, {"sha": "c0ac5e512254f6cb8642063a38b2571a18af8663", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vcreateq_u8.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f0ca7a3e4431534bff3b8eb73709cc822e489b0/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcreateq_u8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f0ca7a3e4431534bff3b8eb73709cc822e489b0/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcreateq_u8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcreateq_u8.c?ref=3f0ca7a3e4431534bff3b8eb73709cc822e489b0", "patch": "@@ -12,8 +12,8 @@ extern \"C\" {\n /*\n **foo:\n **\t...\n-**\tvmov q[0-9+]\\[2\\], q[0-9+]\\[0\\], r[0-9+], r[0-9+]\n-**\tvmov q[0-9+]\\[3\\], q[0-9+]\\[1\\], r[0-9+], r[0-9+]\n+**\tvmov q[0-9+]\\[2\\], q[0-9+]\\[0\\], r0, r2\n+**\tvmov q[0-9+]\\[3\\], q[0-9+]\\[1\\], r1, r3\n **\t...\n */\n uint8x16_t\n@@ -39,4 +39,4 @@ foo1 ()\n }\n #endif\n \n-/* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file\n+/* { dg-final { scan-assembler-not \"__ARM_undef\" } } */"}]}