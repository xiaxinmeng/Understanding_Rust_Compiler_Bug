{"sha": "be245ac0a0e683280ace5512fff65d06ef6087bf", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmUyNDVhYzBhMGU2ODMyODBhY2U1NTEyZmZmNjVkMDZlZjYwODdiZg==", "commit": {"author": {"name": "Kaveh R. Ghazi", "email": "ghazi@caip.rutgers.edu", "date": "1999-08-25T13:59:28Z"}, "committer": {"name": "Kaveh Ghazi", "email": "ghazi@gcc.gnu.org", "date": "1999-08-25T13:59:28Z"}, "message": "gjavah.c (print_name, [...]): Add static prototype.\n\n\t* gjavah.c (print_name, print_base_classname, utf8_cmp,\n\tcxx_keyword_subst, generate_access, name_is_method_p,\n\tget_field_name, print_field_name, super_class_name, print_include,\n\tdecode_signature_piece, print_class_decls, usage, help,\n\tjava_no_argument, version, add_namelet, print_namelet): Add static\n\tprototype.\n\t(print_base_classname, utf8_cmp, cxx_keyword_subst,\n\tname_is_method_p): Constify a char*.\n\t(get_field_name): Likewise.  Prefer xstrdup over malloc/strcpy.\n\tProvide a final else clause in an if-else-if.\n\t(print_field_info): Add missing final arg in function call to\n\t`print_field_name'.\n\t(print_method_info, decompile_method, decode_signature_piece,\n\tprint_c_decl, print_full_cxx_name, print_stub,\n\tprint_mangled_classname, super_class_name, print_include,\n\tadd_namelet, add_class_decl, print_class_decls, process_file,\n\thelp): Constify a char*.\n\n\t* jcf-write.c (jcf_handler, push_constant1, push_constant2,\n\tpush_int_const, find_constant_wide, find_constant_index,\n\tpush_long_const, field_op, maybe_wide, emit_dup, emit_pop,\n\temit_iinc, emit_load_or_store, emit_load, emit_store, emit_unop,\n\temit_binop, emit_reloc, emit_switch_reloc, emit_case_reloc,\n\temit_if, emit_goto, emit_jsr, call_cleanups,\n\tmake_class_file_name): Add static prototypes.\n\t(generate_bytecode_return, generate_bytecode_insns): Pass a\n\tNULL_PTR, not a NULL_TREE.\n\n\t* jv-scan.c: Include \"jcf.h\".\n\t(main): Declare using DEFUN macro.\n\n\t* jvspec.c (find_spec_file, lang_specific_pre_link,\n\tlang_specific_driver): Add prototypes.\n\t(find_spec_file): Constify a char*.\n\n\t* keyword.gperf (hash, java_keyword): Add prototypes.\n\n\t* lang.c (lang_print_error): Add static prototype.\n\t(lang_init): Prefer memcpy over bcopy to avoid casts.\n\n\t* lex.c (yylex): Add static prototype.\n\n\t* parse-scan.y: Include \"lex.c\" earlier.\n\n\t* parse.h: Remove redundant declaration for `yylex'.\n\n\t* parse.y (java_decl_equiv, binop_compound_p, search_loop,\n\tlabeled_block_contains_loop_p): Add static prototypes.\n\t(not_accessible_p): Make static to match prototype.\n\n\t* verify.c (start_pc_cmp): Don't needlessly cast away const.\n\nFrom-SVN: r28862", "tree": {"sha": "f6fd109497decb5c5599a47168e73511e912c666", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f6fd109497decb5c5599a47168e73511e912c666"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/be245ac0a0e683280ace5512fff65d06ef6087bf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/be245ac0a0e683280ace5512fff65d06ef6087bf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/be245ac0a0e683280ace5512fff65d06ef6087bf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/be245ac0a0e683280ace5512fff65d06ef6087bf/comments", "author": null, "committer": null, "parents": [{"sha": "ffee6d93875b9e1cb9c35440dfd0e19d48fe3b8d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ffee6d93875b9e1cb9c35440dfd0e19d48fe3b8d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ffee6d93875b9e1cb9c35440dfd0e19d48fe3b8d"}], "stats": {"total": 1334, "additions": 739, "deletions": 595}, "files": [{"sha": "a752ff54acd3793cc99e25da2befb53da41b292a", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 54, "deletions": 0, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be245ac0a0e683280ace5512fff65d06ef6087bf/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be245ac0a0e683280ace5512fff65d06ef6087bf/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=be245ac0a0e683280ace5512fff65d06ef6087bf", "patch": "@@ -1,3 +1,57 @@\n+1999-08-25  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n+\n+\t* gjavah.c (print_name, print_base_classname, utf8_cmp,\n+\tcxx_keyword_subst, generate_access, name_is_method_p,\n+\tget_field_name, print_field_name, super_class_name, print_include,\n+\tdecode_signature_piece, print_class_decls, usage, help,\n+\tjava_no_argument, version, add_namelet, print_namelet): Add static\n+\tprototype.\n+\t(print_base_classname, utf8_cmp, cxx_keyword_subst,\n+\tname_is_method_p): Constify a char*.\n+\t(get_field_name): Likewise.  Prefer xstrdup over malloc/strcpy.\n+\tProvide a final else clause in an if-else-if.\n+\t(print_field_info): Add missing final arg in function call to\n+\t`print_field_name'.\n+\t(print_method_info, decompile_method, decode_signature_piece,\n+\tprint_c_decl, print_full_cxx_name, print_stub,\n+\tprint_mangled_classname, super_class_name, print_include,\n+\tadd_namelet, add_class_decl, print_class_decls, process_file,\n+\thelp): Constify a char*.\n+\n+\t* jcf-write.c (jcf_handler, push_constant1, push_constant2,\n+\tpush_int_const, find_constant_wide, find_constant_index,\n+\tpush_long_const, field_op, maybe_wide, emit_dup, emit_pop,\n+\temit_iinc, emit_load_or_store, emit_load, emit_store, emit_unop,\n+\temit_binop, emit_reloc, emit_switch_reloc, emit_case_reloc,\n+\temit_if, emit_goto, emit_jsr, call_cleanups,\n+\tmake_class_file_name): Add static prototypes.\n+\t(generate_bytecode_return, generate_bytecode_insns): Pass a\n+\tNULL_PTR, not a NULL_TREE.\n+\n+\t* jv-scan.c: Include \"jcf.h\".\n+\t(main): Declare using DEFUN macro.\n+\n+\t* jvspec.c (find_spec_file, lang_specific_pre_link,\n+\tlang_specific_driver): Add prototypes.\n+\t(find_spec_file): Constify a char*.\n+\n+\t* keyword.gperf (hash, java_keyword): Add prototypes.\n+\n+\t* lang.c (lang_print_error): Add static prototype.\n+\t(lang_init): Prefer memcpy over bcopy to avoid casts.\n+\n+\t* lex.c (yylex): Add static prototype.\n+\n+\t* parse-scan.y: Include \"lex.c\" earlier.\n+\n+\t* parse.h: Remove redundant declaration for `yylex'.\n+\n+\t* parse.y (java_decl_equiv, binop_compound_p, search_loop,\n+\tlabeled_block_contains_loop_p): Add static prototypes.\n+\t(not_accessible_p): Make static to match prototype.\n+\n+\t* verify.c (start_pc_cmp): Don't needlessly cast away const.\n+\n Sun Aug 22 11:07:41 1999  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n \n \t* parse.y (check_method_redefinition): Changed leading comment."}, {"sha": "7f0d223d8a87c6e1a5b1d1273746fc5695878acb", "filename": "gcc/java/gjavah.c", "status": "modified", "additions": 70, "deletions": 45, "changes": 115, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be245ac0a0e683280ace5512fff65d06ef6087bf/gcc%2Fjava%2Fgjavah.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be245ac0a0e683280ace5512fff65d06ef6087bf/gcc%2Fjava%2Fgjavah.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fgjavah.c?ref=be245ac0a0e683280ace5512fff65d06ef6087bf", "patch": "@@ -119,6 +119,23 @@ static void add_class_decl PROTO ((FILE*, JCF*, JCF_u2));\n \n static int java_float_finite PROTO ((jfloat));\n static int java_double_finite PROTO ((jdouble));\n+static void print_name PROTO ((FILE *, JCF *, int));\n+static void print_base_classname PROTO ((FILE *, JCF *, int));\n+static int utf8_cmp PROTO ((const unsigned char *, int, const char *));\n+static const char *cxx_keyword_subst PROTO ((const unsigned char *, int));\n+static void generate_access PROTO ((FILE *, JCF_u2));\n+static int name_is_method_p PROTO ((const unsigned char *, int));\n+static char *get_field_name PROTO ((JCF *, int, JCF_u2));\n+static void print_field_name PROTO ((FILE *, JCF *, int, JCF_u2));\n+static const unsigned char *super_class_name PROTO ((JCF *, int *));\n+static void print_include PROTO ((FILE *, const unsigned char *, int));\n+static const unsigned char *decode_signature_piece\n+  PROTO ((FILE *, const unsigned char *, const unsigned char *, int *));\n+static void print_class_decls PROTO ((FILE *, JCF *, int));\n+static void usage PROTO ((void)) ATTRIBUTE_NORETURN;\n+static void help PROTO ((void)) ATTRIBUTE_NORETURN;\n+static void java_no_argument PROTO ((const char *)) ATTRIBUTE_NORETURN;\n+static void version PROTO ((void)) ATTRIBUTE_NORETURN;\n \n JCF_u2 current_field_name;\n JCF_u2 current_field_value;\n@@ -209,7 +226,7 @@ java_double_finite (d)\n   return (u.i & D_NAN_MASK) != D_NAN_MASK;\n }\n \n-void\n+static void\n DEFUN(print_name, (stream, jcf, name_index),\n       FILE* stream AND JCF* jcf AND int name_index)\n {\n@@ -231,7 +248,7 @@ print_base_classname (stream, jcf, index)\n {\n   int name_index = JPOOL_USHORT1 (jcf, index);\n   int len;\n-  unsigned char *s, *p, *limit;\n+  const unsigned char *s, *p, *limit;\n \n   s = JPOOL_UTF_DATA (jcf, name_index);\n   len = JPOOL_UTF_LENGTH (jcf, name_index);\n@@ -258,11 +275,11 @@ print_base_classname (stream, jcf, index)\n \n static int\n utf8_cmp (str, length, name)\n-     unsigned char *str;\n+     const unsigned char *str;\n      int length;\n-     char *name;\n+     const char *name;\n {\n-  unsigned char *limit = str + length;\n+  const unsigned char *limit = str + length;\n   int i;\n \n   for (i = 0; name[i]; ++i)\n@@ -280,9 +297,9 @@ utf8_cmp (str, length, name)\n    Otherwise, return NULL.  FIXME: for now, we only handle those\n    keywords we know to be a problem for libgcj.  */\n \n-static char *\n+static const char *\n cxx_keyword_subst (str, length)\n-     unsigned char *str;\n+     const unsigned char *str;\n      int length;\n {\n   if (! utf8_cmp (str, length, \"delete\"))\n@@ -329,7 +346,7 @@ generate_access (stream, flags)\n /* See if NAME is already the name of a method.  */\n static int\n name_is_method_p (name, length)\n-     unsigned char *name;\n+     const unsigned char *name;\n      int length;\n {\n   struct method_name *p;\n@@ -352,6 +369,8 @@ get_field_name (jcf, name_index, flags)\n   unsigned char *name = JPOOL_UTF_DATA (jcf, name_index);\n   int length = JPOOL_UTF_LENGTH (jcf, name_index);\n   char *override;\n+  const char *tmpconstptr;\n+\n \n   if (name_is_method_p (name, length))\n     {\n@@ -370,14 +389,14 @@ get_field_name (jcf, name_index, flags)\n       memcpy (override, name, length);\n       strcpy (override + length, \"__\");\n     }\n-  else if ((override = cxx_keyword_subst (name, length)) != NULL)\n+  else if ((tmpconstptr = cxx_keyword_subst (name, length)) != NULL)\n     {\n       /* Must malloc OVERRIDE.  */\n-      char *o2 = (char *) malloc (strlen (override) + 1);\n-      strcpy (o2, override);\n-      override = o2;\n+      override = xstrdup (tmpconstptr);\n     }\n-\n+  else\n+    override = NULL;\n+  \n   return override;\n }\n \n@@ -431,7 +450,7 @@ DEFUN(print_field_info, (stream, jcf, name_index, sig_index, flags),\n \t\tjint num;\n \t\tint most_negative = 0;\n \t\tfputs (\"  static const jint \", out);\n-\t\tprint_field_name (out, jcf, name_index);\n+\t\tprint_field_name (out, jcf, name_index, 0);\n \t\tfputs (\" = \", out);\n \t\tnum = JPOOL_INT (jcf, current_field_value);\n \t\t/* We single out the most negative number to print\n@@ -450,7 +469,7 @@ DEFUN(print_field_info, (stream, jcf, name_index, sig_index, flags),\n \t\tjlong num;\n \t\tint most_negative = 0;\n \t\tfputs (\"  static const jlong \", out);\n-\t\tprint_field_name (out, jcf, name_index);\n+\t\tprint_field_name (out, jcf, name_index, 0);\n \t\tfputs (\" = \", out);\n \t\tnum = JPOOL_LONG (jcf, current_field_value);\n \t\t/* We single out the most negative number to print\n@@ -468,7 +487,7 @@ DEFUN(print_field_info, (stream, jcf, name_index, sig_index, flags),\n \t      {\n \t\tjfloat fnum = JPOOL_FLOAT (jcf, current_field_value);\n \t\tfputs (\"  static const jfloat \", out);\n-\t\tprint_field_name (out, jcf, name_index);\n+\t\tprint_field_name (out, jcf, name_index, 0);\n \t\tif (! java_float_finite (fnum))\n \t\t  fputs (\";\\n\", out);\n \t\telse\n@@ -479,7 +498,7 @@ DEFUN(print_field_info, (stream, jcf, name_index, sig_index, flags),\n \t      {\n \t\tjdouble dnum = JPOOL_DOUBLE (jcf, current_field_value);\n \t\tfputs (\"  static const jdouble \", out);\n-\t\tprint_field_name (out, jcf, name_index);\n+\t\tprint_field_name (out, jcf, name_index, 0);\n \t\tif (! java_double_finite (dnum))\n \t\t  fputs (\";\\n\", out);\n \t\telse\n@@ -515,7 +534,7 @@ DEFUN(print_method_info, (stream, jcf, name_index, sig_index, flags),\n       FILE *stream AND JCF* jcf\n       AND int name_index AND int sig_index AND JCF_u2 flags)\n {\n-  unsigned char *str;\n+  const unsigned char *str;\n   int length, is_init = 0;\n   const char *override = NULL;\n \n@@ -613,7 +632,7 @@ decompile_method (out, jcf, code_len)\n      JCF *jcf;\n      int code_len;\n {\n-  unsigned char *codes = jcf->read_ptr;\n+  const unsigned char *codes = jcf->read_ptr;\n   int index;\n   uint16 name_and_type, name;\n \n@@ -669,10 +688,10 @@ decompile_method (out, jcf, code_len)\n \n /* Print one piece of a signature.  Returns pointer to next parseable\n    character on success, NULL on error.  */\n-static unsigned char *\n+static const unsigned char *\n decode_signature_piece (stream, signature, limit, need_space)\n      FILE *stream;\n-     unsigned char *signature, *limit;\n+     const unsigned char *signature, *limit;\n      int *need_space;\n {\n   const char *ctype;\n@@ -778,12 +797,12 @@ DEFUN(print_c_decl, (stream, jcf, name_index, signature_index, is_init,\n   else\n     {\n       int length = JPOOL_UTF_LENGTH (jcf, signature_index);\n-      unsigned char *str0 = JPOOL_UTF_DATA (jcf, signature_index);\n-      register  unsigned char *str = str0;\n-      unsigned char *limit = str + length;\n+      const unsigned char *str0 = JPOOL_UTF_DATA (jcf, signature_index);\n+      register const  unsigned char *str = str0;\n+      const unsigned char *limit = str + length;\n       int need_space = 0;\n       int is_method = str[0] == '(';\n-      unsigned char *next;\n+      const unsigned char *next;\n \n       /* If printing a method, skip to the return signature and print\n \t that first.  However, there is no return value if this is a\n@@ -827,12 +846,12 @@ DEFUN(print_full_cxx_name, (stream, jcf, name_index, signature_index, is_init, n\n       AND const char *name_override)\n {\n   int length = JPOOL_UTF_LENGTH (jcf, signature_index);\n-  unsigned char *str0 = JPOOL_UTF_DATA (jcf, signature_index);\n-  register  unsigned char *str = str0;\n-  unsigned char *limit = str + length;\n+  const unsigned char *str0 = JPOOL_UTF_DATA (jcf, signature_index);\n+  register const unsigned char *str = str0;\n+  const unsigned char *limit = str + length;\n   int need_space = 0;\n   int is_method = str[0] == '(';\n-  unsigned char *next;\n+  const unsigned char *next;\n \n   if (name_override)\n     fputs (name_override, stream);\n@@ -885,12 +904,12 @@ DEFUN(print_stub, (stream, jcf, name_index, signature_index, is_init,\n   else\n     {\n       int length = JPOOL_UTF_LENGTH (jcf, signature_index);\n-      unsigned char *str0 = JPOOL_UTF_DATA (jcf, signature_index);\n-      register  unsigned char *str = str0;\n-      unsigned char *limit = str + length;\n+      const unsigned char *str0 = JPOOL_UTF_DATA (jcf, signature_index);\n+      register const unsigned char *str = str0;\n+      const unsigned char *limit = str + length;\n       int need_space = 0;\n       int is_method = str[0] == '(';\n-      unsigned char *next;\n+      const unsigned char *next;\n \n       /* If printing a method, skip to the return signature and print\n \t that first.  However, there is no return value if this is a\n@@ -932,7 +951,7 @@ DEFUN(print_stub, (stream, jcf, name_index, signature_index, is_init,\n     }\n }\n \n-void\n+static void\n DEFUN(print_mangled_classname, (stream, jcf, prefix, index),\n       FILE *stream AND JCF *jcf AND const char *prefix AND int index)\n {\n@@ -956,7 +975,7 @@ print_cxx_classname (stream, prefix, jcf, index)\n {\n   int name_index = JPOOL_USHORT1 (jcf, index);\n   int len, c;\n-  unsigned char *s, *p, *limit;\n+  const unsigned char *s, *p, *limit;\n \n   s = JPOOL_UTF_DATA (jcf, name_index);\n   len = JPOOL_UTF_LENGTH (jcf, name_index);\n@@ -985,14 +1004,15 @@ int written_class_count = 0;\n \n /* Return name of superclass.  If LEN is not NULL, fill it with length\n    of name.  */\n-static unsigned char *\n+static const unsigned char *\n super_class_name (derived_jcf, len)\n      JCF *derived_jcf;\n      int *len;\n {\n   int supername_index = JPOOL_USHORT1 (derived_jcf, derived_jcf->super_class);\n   int supername_length = JPOOL_UTF_LENGTH (derived_jcf, supername_index);\n-  unsigned char *supername = JPOOL_UTF_DATA (derived_jcf, supername_index);\n+  const unsigned char *supername =\n+    JPOOL_UTF_DATA (derived_jcf, supername_index);\n \n   if (len)\n     *len = supername_length;\n@@ -1017,7 +1037,7 @@ static struct include *all_includes = NULL;\n static void\n print_include (out, utf8, len)\n      FILE *out;\n-     unsigned char *utf8;\n+     const unsigned char *utf8;\n      int len;\n {\n   struct include *incl;\n@@ -1063,6 +1083,10 @@ struct namelet\n   struct namelet *next;\n };\n \n+static void add_namelet PROTO ((const unsigned char *,\n+\t\t\t\tconst unsigned char *, struct namelet *));\n+static void print_namelet PROTO ((FILE *, struct namelet *, int));\n+\n /* The special root namelet.  */\n static struct namelet root =\n {\n@@ -1077,10 +1101,10 @@ static struct namelet root =\n    recursively.  */\n static void\n add_namelet (name, name_limit, parent)\n-     unsigned char *name, *name_limit;\n+     const unsigned char *name, *name_limit;\n      struct namelet *parent;\n {\n-  unsigned char *p;\n+  const unsigned char *p;\n   struct namelet *n = NULL, *np;\n \n   /* We want to skip the standard namespaces that we assume the\n@@ -1192,13 +1216,13 @@ add_class_decl (out, jcf, signature)\n      JCF *jcf;\n      JCF_u2 signature;\n {\n-  unsigned char *s = JPOOL_UTF_DATA (jcf, signature);\n+  const unsigned char *s = JPOOL_UTF_DATA (jcf, signature);\n   int len = JPOOL_UTF_LENGTH (jcf, signature);\n   int i;\n   /* Name of class we are processing.  */\n   int name_index = JPOOL_USHORT1 (jcf, jcf->this_class);\n   int tlen = JPOOL_UTF_LENGTH (jcf, name_index);\n-  char *tname = JPOOL_UTF_DATA (jcf, name_index);\n+  const char *tname = JPOOL_UTF_DATA (jcf, name_index);\n \n   for (i = 0; i < len; ++i)\n     {\n@@ -1253,7 +1277,7 @@ print_class_decls (out, jcf, self)\n      that should be declared.  */\n   int name_index = JPOOL_USHORT1 (jcf, self);\n   int len;\n-  unsigned char *s;\n+  const unsigned char *s;\n \n   s = JPOOL_UTF_DATA (jcf, name_index);\n   len = JPOOL_UTF_LENGTH (jcf, name_index);\n@@ -1341,7 +1365,8 @@ DEFUN(process_file, (jcf, out),\n \t  if (jcf->super_class)\n \t    {\n \t      int super_length;\n-\t      unsigned char *supername = super_class_name (jcf, &super_length);\n+\t      const unsigned char *supername =\n+\t\tsuper_class_name (jcf, &super_length);\n \t      \n \t      fputs (\"\\n\", out);\n \t      print_include (out, supername, super_length);\n@@ -1473,7 +1498,7 @@ help ()\n \n static void\n java_no_argument (opt)\n-     char *opt;\n+     const char *opt;\n {\n   fprintf (stderr, \"gcjh: no argument given for option `%s'\\n\", opt);\n   exit (1);"}, {"sha": "44b4d13954ba358f4816f1a85f32283dd72fd376", "filename": "gcc/java/jcf-write.c", "status": "modified", "additions": 36, "deletions": 4, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be245ac0a0e683280ace5512fff65d06ef6087bf/gcc%2Fjava%2Fjcf-write.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be245ac0a0e683280ace5512fff65d06ef6087bf/gcc%2Fjava%2Fjcf-write.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fjcf-write.c?ref=be245ac0a0e683280ace5512fff65d06ef6087bf", "patch": "@@ -299,7 +299,39 @@ static void init_jcf_state PROTO ((struct jcf_partial *, struct obstack *));\n static void init_jcf_method PROTO ((struct jcf_partial *, tree));\n static void release_jcf_state PROTO ((struct jcf_partial *));\n static struct chunk * generate_classfile PROTO ((tree, struct jcf_partial *));\n-\n+static struct jcf_handler *alloc_handler PROTO ((struct jcf_block *,\n+\t\t\t\t\t\t struct jcf_block *,\n+\t\t\t\t\t\t struct jcf_partial *));\n+static void push_constant1 PROTO ((int, struct jcf_partial *));\n+static void push_constant2 PROTO ((int, struct jcf_partial *));\n+static void push_int_const PROTO ((HOST_WIDE_INT, struct jcf_partial *));\n+static int find_constant_wide PROTO ((HOST_WIDE_INT, HOST_WIDE_INT,\n+\t\t\t\t      struct jcf_partial *));\n+static int find_constant_index PROTO ((tree, struct jcf_partial *));\n+static void push_long_const PROTO ((HOST_WIDE_INT, HOST_WIDE_INT,\n+\t\t\t\t    struct jcf_partial *));\n+static void field_op PROTO ((tree, int, struct jcf_partial *));\n+static void maybe_wide PROTO ((int, int, struct jcf_partial *));\n+static void emit_dup PROTO ((int, int, struct jcf_partial *));\n+static void emit_pop PROTO ((int, struct jcf_partial *));\n+static void emit_iinc PROTO ((tree, int, struct jcf_partial *));\n+static void emit_load_or_store PROTO ((tree, int, struct jcf_partial *));\n+static void emit_load PROTO ((tree, struct jcf_partial *));\n+static void emit_store PROTO ((tree, struct jcf_partial *));\n+static void emit_unop PROTO ((enum java_opcode, tree, struct jcf_partial *));\n+static void emit_binop PROTO ((enum java_opcode, tree, struct jcf_partial *));\n+static void emit_reloc PROTO ((HOST_WIDE_INT, int, struct jcf_block *,\n+\t\t\t       struct jcf_partial *));\n+static void emit_switch_reloc PROTO ((struct jcf_block *,\n+\t\t\t\t      struct jcf_partial *));\n+static void emit_case_reloc PROTO ((struct jcf_relocation *,\n+\t\t\t\t    struct jcf_partial *));\n+static void emit_if PROTO ((struct jcf_block *, int, int,\n+\t\t\t    struct jcf_partial *));\n+static void emit_goto PROTO ((struct jcf_block *, struct jcf_partial *));\n+static void emit_jsr PROTO ((struct jcf_block *, struct jcf_partial *));\n+static void call_cleanups PROTO ((struct jcf_block *, struct jcf_partial *));\n+static char *make_class_file_name PROTO ((tree));\n \n /* Utility macros for appending (big-endian) data to a buffer.\n    We assume a local variable 'ptr' points into where we want to\n@@ -1334,7 +1366,7 @@ generate_bytecode_return (exp, state)\n   if (returns_void)\n     {\n       op = OPCODE_return;\n-      call_cleanups (NULL_TREE, state);\n+      call_cleanups (NULL_PTR, state);\n     }\n   else\n     {\n@@ -1348,7 +1380,7 @@ generate_bytecode_return (exp, state)\n \t      localvar_alloc (state->return_value_decl, state);\n \t    }\n \t  emit_store (state->return_value_decl, state);\n-\t  call_cleanups (NULL_TREE, state);\n+\t  call_cleanups (NULL_PTR, state);\n \t  emit_load (state->return_value_decl, state);\n \t  /* If we call localvar_free (state->return_value_decl, state),\n \t     then we risk the save decl erroneously re-used in the\n@@ -2264,7 +2296,7 @@ generate_bytecode_insns (exp, target, state)\n \n \t/* Handle exceptions. */\n \tlocalvar_alloc (return_link, state);\n-\thandler = alloc_handler (start_label, NULL_TREE, state);\n+\thandler = alloc_handler (start_label, NULL_PTR, state);\n \thandler->end_label = handler->handler_label;\n \thandler->type = NULL_TREE;\n \tlocalvar_alloc (exception_decl, state);"}, {"sha": "36ab39642bb7f0bd3e7920dbb65aab08ed43a09d", "filename": "gcc/java/jv-scan.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be245ac0a0e683280ace5512fff65d06ef6087bf/gcc%2Fjava%2Fjv-scan.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be245ac0a0e683280ace5512fff65d06ef6087bf/gcc%2Fjava%2Fjv-scan.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fjv-scan.c?ref=be245ac0a0e683280ace5512fff65d06ef6087bf", "patch": "@@ -29,6 +29,7 @@ void warning VPROTO((const char *s, ...)) ATTRIBUTE_PRINTF_1;\n void gcc_obstack_init PROTO ((struct obstack *obstack));\n \n #define JC1_LITE\n+#include \"jcf.h\"\n #include \"parse.h\"\n \n /* Current input file and output file IO streams.  */\n@@ -47,9 +48,8 @@ int flag_list_filename = 0;\n \n /* jc1-lite main entry point */\n int\n-main (argc, argv)\n-  int argc;\n-  char **argv;\n+DEFUN (main, (argc, argv),\n+       int argc AND char **argv)\n {\n   int i = 1;\n   const char *output_file = NULL;"}, {"sha": "9600bc2ba75f2e7a3707c71148dc2e57d16a0494", "filename": "gcc/java/jvspec.c", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be245ac0a0e683280ace5512fff65d06ef6087bf/gcc%2Fjava%2Fjvspec.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be245ac0a0e683280ace5512fff65d06ef6087bf/gcc%2Fjava%2Fjvspec.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fjvspec.c?ref=be245ac0a0e683280ace5512fff65d06ef6087bf", "patch": "@@ -41,7 +41,11 @@ The Free Software Foundation is independent of Sun Microsystems, Inc.  */\n /* True if this arg is a .class input file name. */\n #define CLASS_FILE_ARG\t(1<<4)\n \n+static char *find_spec_file\tPROTO ((const char *));\n extern int do_spec\t\tPROTO((char *));\n+extern int lang_specific_pre_link PROTO((void));\n+extern void lang_specific_driver PROTO ((void (*) (const char *, ...),\n+\t\t\t\t\t int *, char ***, int *));\n extern char *input_filename;\n extern size_t input_filename_length;\n \n@@ -68,7 +72,7 @@ char jvgenmain_spec[] =\n    not.  */\n static char *\n find_spec_file (dir)\n-     char *dir;\n+     const char *dir;\n {\n   char *spec;\n   int x;\n@@ -89,7 +93,7 @@ find_spec_file (dir)\n \n void\n lang_specific_driver (fn, in_argc, in_argv, in_added_libraries)\n-     void (*fn)();\n+     void (*fn) PROTO ((const char *, ...));\n      int *in_argc;\n      char ***in_argv;\n      int *in_added_libraries;"}, {"sha": "c8492a2f4acd47a58294535b1dd8a27187affbb6", "filename": "gcc/java/keyword.gperf", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be245ac0a0e683280ace5512fff65d06ef6087bf/gcc%2Fjava%2Fkeyword.gperf", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be245ac0a0e683280ace5512fff65d06ef6087bf/gcc%2Fjava%2Fkeyword.gperf", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fkeyword.gperf?ref=be245ac0a0e683280ace5512fff65d06ef6087bf", "patch": "@@ -26,6 +26,14 @@ The Free Software Foundation is independent of Sun Microsystems, Inc.  */\n \n %}\n struct java_keyword { const char *name; int token; };\n+#ifdef __GNUC__\n+__inline\n+#endif\n+static unsigned int hash\t\tPARAMS ((const char *, unsigned int));\n+#ifdef __GNUC__\n+__inline\n+#endif\n+struct java_keyword *java_keyword\tPARAMS ((const char *, unsigned int));\n %%\n abstract, ABSTRACT_TK\n default, DEFAULT_TK"}, {"sha": "051f8b3ed3f9ea9f57f654ecd7645a5c969d1c67", "filename": "gcc/java/keyword.h", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be245ac0a0e683280ace5512fff65d06ef6087bf/gcc%2Fjava%2Fkeyword.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be245ac0a0e683280ace5512fff65d06ef6087bf/gcc%2Fjava%2Fkeyword.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fkeyword.h?ref=be245ac0a0e683280ace5512fff65d06ef6087bf", "patch": "@@ -26,6 +26,14 @@ of Sun Microsystems, Inc. in the United States and other countries.\n The Free Software Foundation is independent of Sun Microsystems, Inc.  */\n \n struct java_keyword { const char *name; int token; };\n+#ifdef __GNUC__\n+__inline\n+#endif\n+static unsigned int hash\t\tPARAMS ((const char *, unsigned int));\n+#ifdef __GNUC__\n+__inline\n+#endif\n+struct java_keyword *java_keyword\tPARAMS ((const char *, unsigned int));\n \n #define TOTAL_KEYWORDS 50\n #define MIN_WORD_LENGTH 2"}, {"sha": "c04410cfa1a6fc3b3bd1b1cdbdf2ddb3a5dc56b1", "filename": "gcc/java/lang.c", "status": "modified", "additions": 13, "deletions": 12, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be245ac0a0e683280ace5512fff65d06ef6087bf/gcc%2Fjava%2Flang.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be245ac0a0e683280ace5512fff65d06ef6087bf/gcc%2Fjava%2Flang.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Flang.c?ref=be245ac0a0e683280ace5512fff65d06ef6087bf", "patch": "@@ -39,6 +39,7 @@ The Free Software Foundation is independent of Sun Microsystems, Inc.  */\n static void put_decl_string PROTO ((const char *, int));\n static void put_decl_node PROTO ((tree));\n static void java_dummy_print PROTO ((const char *));\n+static void lang_print_error PROTO ((const char *));\n \n #ifndef OBJECT_SUFFIX\n # define OBJECT_SUFFIX \".o\"\n@@ -453,7 +454,7 @@ lang_printable_name (decl, v)\n /* Print on stderr the current class and method context.  This function\n    is the value of the hook print_error_function, called from toplev.c. */\n \n-void\n+static void\n lang_print_error (file)\n      const char *file;\n {\n@@ -507,17 +508,17 @@ lang_init ()\n \n   /* Append to Gcc tree node definition arrays */\n \n-  bcopy (java_tree_code_type,\n-\t tree_code_type + (int) LAST_AND_UNUSED_TREE_CODE,\n-\t (int)LAST_JAVA_TREE_CODE - (int)LAST_AND_UNUSED_TREE_CODE);\n-  bcopy ((char *)java_tree_code_length,\n-\t (char *)(tree_code_length + (int) LAST_AND_UNUSED_TREE_CODE),\n-\t (LAST_JAVA_TREE_CODE - \n-\t  (int)LAST_AND_UNUSED_TREE_CODE) * sizeof (int));\n-  bcopy ((char *)java_tree_code_name,\n-\t (char *)(tree_code_name + (int) LAST_AND_UNUSED_TREE_CODE),\n-\t (LAST_JAVA_TREE_CODE - \n-\t  (int)LAST_AND_UNUSED_TREE_CODE) * sizeof (char *));\n+  memcpy (tree_code_type + (int) LAST_AND_UNUSED_TREE_CODE,\n+\t  java_tree_code_type,\n+\t  (int)LAST_JAVA_TREE_CODE - (int)LAST_AND_UNUSED_TREE_CODE);\n+  memcpy (tree_code_length + (int) LAST_AND_UNUSED_TREE_CODE,\n+\t  java_tree_code_length,\n+\t  (LAST_JAVA_TREE_CODE - \n+\t   (int)LAST_AND_UNUSED_TREE_CODE) * sizeof (int));\n+  memcpy (tree_code_name + (int) LAST_AND_UNUSED_TREE_CODE,\n+\t  java_tree_code_name,\n+\t  (LAST_JAVA_TREE_CODE - \n+\t   (int)LAST_AND_UNUSED_TREE_CODE) * sizeof (char *));\n \n   using_eh_for_cleanups ();\n }"}, {"sha": "ebb1f0b02b8906a8196d281bbfe49f91f808dcd9", "filename": "gcc/java/lex.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be245ac0a0e683280ace5512fff65d06ef6087bf/gcc%2Fjava%2Flex.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be245ac0a0e683280ace5512fff65d06ef6087bf/gcc%2Fjava%2Flex.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Flex.c?ref=be245ac0a0e683280ace5512fff65d06ef6087bf", "patch": "@@ -517,7 +517,9 @@ java_parse_escape_sequence ()\n     }\n }\n \n-int\n+static int yylex\t\tPARAMS ((YYSTYPE *));\n+\n+static int\n #ifdef JC1_LITE\n yylex (java_lval)\n #else"}, {"sha": "8ade4994a83bb67e7cbbbc5958a1e9c95b11f8e5", "filename": "gcc/java/parse-scan.c", "status": "modified", "additions": 90, "deletions": 89, "changes": 179, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be245ac0a0e683280ace5512fff65d06ef6087bf/gcc%2Fjava%2Fparse-scan.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be245ac0a0e683280ace5512fff65d06ef6087bf/gcc%2Fjava%2Fparse-scan.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fparse-scan.c?ref=be245ac0a0e683280ace5512fff65d06ef6087bf", "patch": "@@ -182,6 +182,9 @@ typedef union {\n   struct method_declarator *declarator;\n   int value;\t\t\t/* For modifiers */\n } YYSTYPE;\n+#line 106 \"./parse-scan.y\"\n+\n+#include \"lex.c\"\n #ifndef YYDEBUG\n #define YYDEBUG 1\n #endif\n@@ -401,41 +404,41 @@ static const short yyrhs[] = {   123,\n \n #if YYDEBUG != 0\n static const short yyrline[] = { 0,\n-   171,   176,   178,   179,   180,   181,   182,   186,   188,   191,\n-   197,   202,   209,   211,   214,   218,   222,   226,   228,   235,\n-   245,   247,   250,   254,   263,   268,   269,   270,   271,   272,\n-   273,   274,   275,   278,   280,   283,   285,   288,   293,   295,\n-   298,   302,   306,   308,   309,   315,   324,   335,   342,   342,\n-   345,   347,   348,   351,   352,   355,   358,   362,   364,   367,\n-   369,   372,   374,   375,   376,   379,   381,   382,   383,   387,\n-   390,   394,   397,   400,   402,   405,   408,   412,   414,   418,\n-   422,   425,   426,   428,   435,   442,   448,   451,   453,   461,\n-   477,   493,   494,   497,   500,   504,   506,   507,   511,   513,\n-   516,   526,   528,   531,   533,   539,   542,   546,   548,   549,\n-   550,   554,   556,   559,   561,   565,   567,   572,   575,   577,\n-   579,   583,   585,   588,   590,   593,   595,   598,   600,   601,\n-   602,   605,   609,   614,   616,   617,   618,   621,   623,   627,\n-   629,   632,   634,   637,   639,   640,   643,   647,   650,   654,\n-   656,   657,   658,   659,   660,   663,   665,   666,   667,   668,\n-   671,   673,   674,   675,   676,   677,   678,   679,   680,   681,\n-   682,   685,   689,   694,   698,   704,   708,   710,   711,   712,\n-   713,   714,   715,   718,   722,   726,   730,   734,   736,   737,\n-   738,   741,   743,   746,   751,   753,   756,   758,   761,   765,\n-   769,   773,   777,   781,   783,   786,   788,   791,   795,   798,\n-   799,   800,   803,   804,   807,   809,   812,   814,   817,   819,\n-   822,   824,   827,   831,   833,   836,   841,   843,   844,   847,\n-   849,   852,   856,   861,   863,   866,   868,   869,   870,   871,\n-   872,   873,   877,   879,   881,   885,   889,   891,   895,   896,\n-   900,   901,   902,   903,   906,   909,   912,   914,   915,   918,\n-   920,   921,   922,   925,   926,   929,   931,   934,   938,   940,\n-   943,   945,   948,   951,   953,   954,   955,   956,   959,   962,\n-   965,   967,   969,   970,   973,   977,   981,   983,   984,   985,\n-   986,   989,   993,   997,   999,  1000,  1001,  1004,  1006,  1007,\n-  1008,  1011,  1013,  1014,  1015,  1018,  1020,  1021,  1024,  1026,\n-  1027,  1028,  1031,  1033,  1034,  1035,  1036,  1037,  1040,  1042,\n-  1043,  1046,  1048,  1051,  1053,  1056,  1058,  1061,  1063,  1066,\n-  1068,  1071,  1073,  1076,  1078,  1081,  1085,  1088,  1089,  1092,\n-  1094,  1097,  1101\n+   175,   180,   182,   183,   184,   185,   186,   190,   192,   195,\n+   201,   206,   213,   215,   218,   222,   226,   230,   232,   239,\n+   249,   251,   254,   258,   267,   272,   273,   274,   275,   276,\n+   277,   278,   279,   282,   284,   287,   289,   292,   297,   299,\n+   302,   306,   310,   312,   313,   319,   328,   339,   346,   346,\n+   349,   351,   352,   355,   356,   359,   362,   366,   368,   371,\n+   373,   376,   378,   379,   380,   383,   385,   386,   387,   391,\n+   394,   398,   401,   404,   406,   409,   412,   416,   418,   422,\n+   426,   429,   430,   432,   439,   446,   452,   455,   457,   465,\n+   481,   497,   498,   501,   504,   508,   510,   511,   515,   517,\n+   520,   530,   532,   535,   537,   543,   546,   550,   552,   553,\n+   554,   558,   560,   563,   565,   569,   571,   576,   579,   581,\n+   583,   587,   589,   592,   594,   597,   599,   602,   604,   605,\n+   606,   609,   613,   618,   620,   621,   622,   625,   627,   631,\n+   633,   636,   638,   641,   643,   644,   647,   651,   654,   658,\n+   660,   661,   662,   663,   664,   667,   669,   670,   671,   672,\n+   675,   677,   678,   679,   680,   681,   682,   683,   684,   685,\n+   686,   689,   693,   698,   702,   708,   712,   714,   715,   716,\n+   717,   718,   719,   722,   726,   730,   734,   738,   740,   741,\n+   742,   745,   747,   750,   755,   757,   760,   762,   765,   769,\n+   773,   777,   781,   785,   787,   790,   792,   795,   799,   802,\n+   803,   804,   807,   808,   811,   813,   816,   818,   821,   823,\n+   826,   828,   831,   835,   837,   840,   845,   847,   848,   851,\n+   853,   856,   860,   865,   867,   870,   872,   873,   874,   875,\n+   876,   877,   881,   883,   885,   889,   893,   895,   899,   900,\n+   904,   905,   906,   907,   910,   913,   916,   918,   919,   922,\n+   924,   925,   926,   929,   930,   933,   935,   938,   942,   944,\n+   947,   949,   952,   955,   957,   958,   959,   960,   963,   966,\n+   969,   971,   973,   974,   977,   981,   985,   987,   988,   989,\n+   990,   993,   997,  1001,  1003,  1004,  1005,  1008,  1010,  1011,\n+  1012,  1015,  1017,  1018,  1019,  1022,  1024,  1025,  1028,  1030,\n+  1031,  1032,  1035,  1037,  1038,  1039,  1040,  1041,  1044,  1046,\n+  1047,  1050,  1052,  1055,  1057,  1060,  1062,  1065,  1067,  1070,\n+  1072,  1075,  1077,  1080,  1082,  1085,  1089,  1092,  1093,  1096,\n+  1098,  1101,  1105\n };\n #endif\n \n@@ -1873,28 +1876,28 @@ yyparse(YYPARSE_PARAM_ARG)\n   switch (yyn) {\n \n case 10:\n-#line 193 \"./parse-scan.y\"\n+#line 197 \"./parse-scan.y\"\n {\n \t\t  /* use preset global here. FIXME */\n \t\t  yyval.node = xstrdup (\"int\");\n \t\t;\n     break;}\n case 11:\n-#line 198 \"./parse-scan.y\"\n+#line 202 \"./parse-scan.y\"\n {\n \t\t  /* use preset global here. FIXME */\n \t\t  yyval.node = xstrdup (\"double\");\n \t\t;\n     break;}\n case 12:\n-#line 203 \"./parse-scan.y\"\n+#line 207 \"./parse-scan.y\"\n {\n \t\t  /* use preset global here. FIXME */\n \t\t  yyval.node = xstrdup (\"boolean\");\n \t\t;\n     break;}\n case 19:\n-#line 229 \"./parse-scan.y\"\n+#line 233 \"./parse-scan.y\"\n {\n \t\t  char *n = xmalloc (strlen (yyvsp[-2].node)+2);\n \t\t  n [0] = '[';\n@@ -1903,7 +1906,7 @@ case 19:\n \t\t;\n     break;}\n case 20:\n-#line 236 \"./parse-scan.y\"\n+#line 240 \"./parse-scan.y\"\n {\t\n \t\t  char *n = xmalloc (strlen (yyvsp[-2].node)+2);\n \t\t  n [0] = '[';\n@@ -1912,19 +1915,19 @@ case 20:\n \t\t;\n     break;}\n case 24:\n-#line 256 \"./parse-scan.y\"\n+#line 260 \"./parse-scan.y\"\n { \n \t\t  char *n = xmalloc (strlen (yyvsp[-2].node)+strlen (yyvsp[0].node)+2);\n \t\t  sprintf (n, \"%s.%s\", yyvsp[-2].node, yyvsp[0].node);\n \t\t  yyval.node = n;\n \t\t;\n     break;}\n case 38:\n-#line 290 \"./parse-scan.y\"\n+#line 294 \"./parse-scan.y\"\n { package_name = yyvsp[-1].node; ;\n     break;}\n case 46:\n-#line 317 \"./parse-scan.y\"\n+#line 321 \"./parse-scan.y\"\n { \n \t\t  if (yyvsp[0].value == PUBLIC_TK)\n \t\t    modifier_value++;\n@@ -1934,7 +1937,7 @@ case 46:\n \t\t;\n     break;}\n case 47:\n-#line 325 \"./parse-scan.y\"\n+#line 329 \"./parse-scan.y\"\n { \n \t\t  if (yyvsp[0].value == PUBLIC_TK)\n \t\t    modifier_value++;\n@@ -1944,81 +1947,81 @@ case 47:\n \t\t;\n     break;}\n case 48:\n-#line 337 \"./parse-scan.y\"\n+#line 341 \"./parse-scan.y\"\n { \n \t\t  report_class_declaration(yyvsp[-2].node);\n \t\t  modifier_value = 0;\n                 ;\n     break;}\n case 50:\n-#line 343 \"./parse-scan.y\"\n+#line 347 \"./parse-scan.y\"\n { report_class_declaration(yyvsp[-2].node); ;\n     break;}\n case 56:\n-#line 357 \"./parse-scan.y\"\n+#line 361 \"./parse-scan.y\"\n { USE_ABSORBER; ;\n     break;}\n case 57:\n-#line 359 \"./parse-scan.y\"\n+#line 363 \"./parse-scan.y\"\n { USE_ABSORBER; ;\n     break;}\n case 70:\n-#line 389 \"./parse-scan.y\"\n+#line 393 \"./parse-scan.y\"\n { USE_ABSORBER; ;\n     break;}\n case 71:\n-#line 391 \"./parse-scan.y\"\n+#line 395 \"./parse-scan.y\"\n { modifier_value = 0; ;\n     break;}\n case 76:\n-#line 407 \"./parse-scan.y\"\n+#line 411 \"./parse-scan.y\"\n { bracket_count = 0; USE_ABSORBER; ;\n     break;}\n case 77:\n-#line 409 \"./parse-scan.y\"\n+#line 413 \"./parse-scan.y\"\n { ++bracket_count; ;\n     break;}\n case 81:\n-#line 424 \"./parse-scan.y\"\n+#line 428 \"./parse-scan.y\"\n { USE_ABSORBER; ;\n     break;}\n case 83:\n-#line 427 \"./parse-scan.y\"\n+#line 431 \"./parse-scan.y\"\n { modifier_value = 0; ;\n     break;}\n case 84:\n-#line 429 \"./parse-scan.y\"\n+#line 433 \"./parse-scan.y\"\n { \n                   report_main_declaration (yyvsp[-1].declarator);\n \t\t  modifier_value = 0;\n \t\t;\n     break;}\n case 85:\n-#line 437 \"./parse-scan.y\"\n+#line 441 \"./parse-scan.y\"\n { \n \t\t  struct method_declarator *d;\n \t\t  NEW_METHOD_DECLARATOR (d, yyvsp[-2].node, NULL);\n \t\t  yyval.declarator = d;\n \t\t;\n     break;}\n case 86:\n-#line 443 \"./parse-scan.y\"\n+#line 447 \"./parse-scan.y\"\n { \n \t\t  struct method_declarator *d;\n \t\t  NEW_METHOD_DECLARATOR (d, yyvsp[-3].node, yyvsp[-1].node);\n \t\t  yyval.declarator = d;\n \t\t;\n     break;}\n case 89:\n-#line 454 \"./parse-scan.y\"\n+#line 458 \"./parse-scan.y\"\n {\n \t\t  char *n = xmalloc (strlen (yyvsp[-2].node)+strlen(yyvsp[0].node)+2);\n \t\t  sprintf (n, \"%s,%s\", yyvsp[-2].node, yyvsp[0].node);\n \t\t  yyval.node = n;\n \t\t;\n     break;}\n case 90:\n-#line 463 \"./parse-scan.y\"\n+#line 467 \"./parse-scan.y\"\n { \n \t\t  USE_ABSORBER;\n \t\t  if (bracket_count)\n@@ -2035,7 +2038,7 @@ case 90:\n \t\t;\n     break;}\n case 91:\n-#line 478 \"./parse-scan.y\"\n+#line 482 \"./parse-scan.y\"\n {\n \t\t  if (bracket_count)\n \t\t    {\n@@ -2051,107 +2054,107 @@ case 91:\n \t\t;\n     break;}\n case 94:\n-#line 499 \"./parse-scan.y\"\n+#line 503 \"./parse-scan.y\"\n { USE_ABSORBER; ;\n     break;}\n case 95:\n-#line 501 \"./parse-scan.y\"\n+#line 505 \"./parse-scan.y\"\n { USE_ABSORBER; ;\n     break;}\n case 101:\n-#line 518 \"./parse-scan.y\"\n+#line 522 \"./parse-scan.y\"\n { USE_ABSORBER; ;\n     break;}\n case 103:\n-#line 529 \"./parse-scan.y\"\n+#line 533 \"./parse-scan.y\"\n { modifier_value = 0; ;\n     break;}\n case 105:\n-#line 534 \"./parse-scan.y\"\n+#line 538 \"./parse-scan.y\"\n { modifier_value = 0; ;\n     break;}\n case 106:\n-#line 541 \"./parse-scan.y\"\n+#line 545 \"./parse-scan.y\"\n { USE_ABSORBER; ;\n     break;}\n case 107:\n-#line 543 \"./parse-scan.y\"\n+#line 547 \"./parse-scan.y\"\n { USE_ABSORBER; ;\n     break;}\n case 114:\n-#line 560 \"./parse-scan.y\"\n+#line 564 \"./parse-scan.y\"\n { USE_ABSORBER; ;\n     break;}\n case 115:\n-#line 562 \"./parse-scan.y\"\n+#line 566 \"./parse-scan.y\"\n { USE_ABSORBER; ;\n     break;}\n case 118:\n-#line 574 \"./parse-scan.y\"\n+#line 578 \"./parse-scan.y\"\n { report_class_declaration (yyvsp[-1].node); modifier_value = 0; ;\n     break;}\n case 119:\n-#line 576 \"./parse-scan.y\"\n+#line 580 \"./parse-scan.y\"\n { report_class_declaration (yyvsp[-1].node); modifier_value = 0; ;\n     break;}\n case 120:\n-#line 578 \"./parse-scan.y\"\n+#line 582 \"./parse-scan.y\"\n { report_class_declaration (yyvsp[-2].node); modifier_value = 0; ;\n     break;}\n case 121:\n-#line 580 \"./parse-scan.y\"\n+#line 584 \"./parse-scan.y\"\n { report_class_declaration (yyvsp[-2].node); modifier_value = 0; ;\n     break;}\n case 148:\n-#line 649 \"./parse-scan.y\"\n+#line 653 \"./parse-scan.y\"\n { USE_ABSORBER; ;\n     break;}\n case 149:\n-#line 651 \"./parse-scan.y\"\n+#line 655 \"./parse-scan.y\"\n { modifier_value = 0; ;\n     break;}\n case 173:\n-#line 691 \"./parse-scan.y\"\n+#line 695 \"./parse-scan.y\"\n { USE_ABSORBER; ;\n     break;}\n case 226:\n-#line 838 \"./parse-scan.y\"\n+#line 842 \"./parse-scan.y\"\n { USE_ABSORBER; ;\n     break;}\n case 243:\n-#line 878 \"./parse-scan.y\"\n+#line 882 \"./parse-scan.y\"\n { USE_ABSORBER; ;\n     break;}\n case 244:\n-#line 880 \"./parse-scan.y\"\n+#line 884 \"./parse-scan.y\"\n { USE_ABSORBER; ;\n     break;}\n case 246:\n-#line 886 \"./parse-scan.y\"\n+#line 890 \"./parse-scan.y\"\n { USE_ABSORBER; ;\n     break;}\n case 255:\n-#line 908 \"./parse-scan.y\"\n+#line 912 \"./parse-scan.y\"\n { USE_ABSORBER; ;\n     break;}\n case 273:\n-#line 950 \"./parse-scan.y\"\n+#line 954 \"./parse-scan.y\"\n { USE_ABSORBER; ;\n     break;}\n case 274:\n-#line 952 \"./parse-scan.y\"\n+#line 956 \"./parse-scan.y\"\n { USE_ABSORBER; ;\n     break;}\n case 279:\n-#line 961 \"./parse-scan.y\"\n+#line 965 \"./parse-scan.y\"\n { USE_ABSORBER; ;\n     break;}\n case 282:\n-#line 968 \"./parse-scan.y\"\n+#line 972 \"./parse-scan.y\"\n { USE_ABSORBER; ;\n     break;}\n case 337:\n-#line 1087 \"./parse-scan.y\"\n+#line 1091 \"./parse-scan.y\"\n { USE_ABSORBER; ;\n     break;}\n }\n@@ -2352,11 +2355,9 @@ case 337:\n   yystate = yyn;\n   goto yynewstate;\n }\n-#line 1105 \"./parse-scan.y\"\n+#line 1109 \"./parse-scan.y\"\n \n \f\n-#include \"lex.c\"\n-\n /* Create a new parser context */\n \n void"}, {"sha": "61ab8d15a19a7c7b550b18eb633ec27d009ad719", "filename": "gcc/java/parse-scan.y", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be245ac0a0e683280ace5512fff65d06ef6087bf/gcc%2Fjava%2Fparse-scan.y", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be245ac0a0e683280ace5512fff65d06ef6087bf/gcc%2Fjava%2Fparse-scan.y", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fparse-scan.y?ref=be245ac0a0e683280ace5512fff65d06ef6087bf", "patch": "@@ -103,6 +103,10 @@ static void report_main_declaration PROTO ((struct method_declarator *));\n   int value;\t\t\t/* For modifiers */\n }\n \n+%{\n+#include \"lex.c\"\n+%}\n+\n %pure_parser\n \n /* Things defined here have to match the order of what's in the\n@@ -1104,8 +1108,6 @@ constant_expression:\n \n %%\n \f\n-#include \"lex.c\"\n-\n /* Create a new parser context */\n \n void"}, {"sha": "34b1da4dc6440d008d6cff05ef88627d6e3d3933", "filename": "gcc/java/parse.c", "status": "modified", "additions": 436, "deletions": 433, "changes": 869, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be245ac0a0e683280ace5512fff65d06ef6087bf/gcc%2Fjava%2Fparse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be245ac0a0e683280ace5512fff65d06ef6087bf/gcc%2Fjava%2Fparse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fparse.c?ref=be245ac0a0e683280ace5512fff65d06ef6087bf", "patch": "@@ -334,6 +334,10 @@ static char * operator_string PROTO ((tree));\n static tree do_merge_string_cste PROTO ((tree, const char *, int, int));\n static tree merge_string_cste PROTO ((tree, tree, int));\n static tree java_refold PROTO ((tree));\n+static int java_decl_equiv PROTO ((tree, tree));\n+static int binop_compound_p PROTO ((enum tree_code));\n+static tree search_loop PROTO ((tree));\n+static int labeled_block_contains_loop_p PROTO ((tree, tree));\n \n /* Number of error found so far. */\n int java_error_count; \n@@ -395,7 +399,7 @@ static tree java_lang_cloneable = NULL_TREE;\n static tree current_static_block = NULL_TREE;\n \n \n-#line 323 \"./parse.y\"\n+#line 327 \"./parse.y\"\n typedef union {\n   tree node;\n   int sub_token;\n@@ -405,7 +409,7 @@ typedef union {\n   } operator;\n   int value;\n } YYSTYPE;\n-#line 333 \"./parse.y\"\n+#line 337 \"./parse.y\"\n \n #include \"lex.c\"\n #ifndef YYDEBUG\n@@ -703,57 +707,57 @@ static const short yyrhs[] = {   123,\n \n #if YYDEBUG != 0\n static const short yyrline[] = { 0,\n-   477,   483,   485,   486,   487,   488,   489,   493,   495,   498,\n-   500,   501,   504,   506,   509,   513,   517,   521,   527,   529,\n-   531,   533,   538,   540,   543,   547,   552,   557,   559,   560,\n-   561,   562,   563,   564,   565,   568,   573,   579,   581,   584,\n-   587,   589,   593,   595,   598,   625,   627,   631,   644,   646,\n-   650,   657,   662,   664,   674,   679,   694,   698,   701,   704,\n-   707,   709,   711,   716,   720,   722,   724,   726,   730,   732,\n-   734,   741,   747,   752,   756,   765,   775,   777,   780,   782,\n-   783,   784,   788,   790,   792,   793,   795,   800,   803,   813,\n-   816,   818,   822,   825,   832,   838,   846,   848,   850,   852,\n-   854,   858,   860,   864,   871,   872,   876,   879,   881,   883,\n-   885,   887,   889,   891,   893,   900,   903,   905,   914,   916,\n-   920,   925,   930,   934,   939,   944,   946,   953,   955,   957,\n-   961,   964,   966,   970,   972,   973,   978,   984,   991,   999,\n-  1006,  1009,  1012,  1016,  1019,  1023,  1032,  1034,  1036,  1040,\n-  1042,  1045,  1052,  1060,  1062,  1066,  1073,  1083,  1087,  1090,\n-  1093,  1096,  1099,  1102,  1105,  1108,  1110,  1114,  1120,  1125,\n-  1127,  1131,  1134,  1138,  1140,  1143,  1145,  1146,  1148,  1152,\n-  1156,  1162,  1167,  1170,  1172,  1176,  1182,  1186,  1191,  1200,\n-  1204,  1209,  1221,  1223,  1226,  1228,  1230,  1234,  1238,  1241,\n-  1245,  1247,  1248,  1249,  1250,  1251,  1255,  1257,  1258,  1259,\n-  1260,  1264,  1266,  1267,  1268,  1269,  1270,  1271,  1272,  1273,\n-  1274,  1275,  1278,  1283,  1294,  1297,  1301,  1308,  1318,  1324,\n-  1330,  1336,  1338,  1344,  1346,  1352,  1354,  1356,  1358,  1360,\n-  1364,  1366,  1367,  1368,  1369,  1370,  1371,  1374,  1380,  1382,\n-  1384,  1388,  1393,  1398,  1404,  1414,  1420,  1422,  1424,  1431,\n-  1434,  1436,  1438,  1442,  1444,  1447,  1451,  1453,  1456,  1463,\n-  1469,  1471,  1473,  1477,  1485,  1488,  1490,  1492,  1496,  1501,\n-  1510,  1515,  1518,  1525,  1527,  1529,  1533,  1536,  1545,  1552,\n-  1554,  1558,  1571,  1573,  1579,  1585,  1589,  1591,  1595,  1598,\n-  1600,  1604,  1607,  1609,  1611,  1615,  1618,  1620,  1622,  1626,\n-  1629,  1631,  1633,  1637,  1643,  1645,  1649,  1656,  1658,  1660,\n-  1662,  1666,  1674,  1677,  1679,  1684,  1688,  1690,  1697,  1705,\n-  1722,  1724,  1726,  1730,  1733,  1738,  1740,  1743,  1745,  1747,\n-  1749,  1750,  1751,  1752,  1756,  1758,  1760,  1765,  1767,  1769,\n-  1771,  1773,  1777,  1780,  1785,  1787,  1792,  1793,  1794,  1795,\n-  1796,  1798,  1800,  1802,  1804,  1806,  1810,  1812,  1815,  1821,\n-  1826,  1830,  1833,  1835,  1837,  1841,  1843,  1845,  1847,  1851,\n-  1854,  1858,  1864,  1866,  1874,  1901,  1903,  1907,  1912,  1919,\n-  1923,  1926,  1928,  1939,  1950,  1955,  1964,  1966,  1970,  1973,\n-  1975,  1980,  1985,  1990,  1997,  1999,  2000,  2001,  2004,  2009,\n-  2014,  2016,  2017,  2019,  2021,  2022,  2024,  2028,  2031,  2035,\n-  2038,  2042,  2044,  2046,  2048,  2049,  2051,  2055,  2064,  2066,\n-  2068,  2081,  2083,  2089,  2091,  2093,  2097,  2099,  2104,  2109,\n-  2114,  2116,  2118,  2122,  2124,  2129,  2134,  2136,  2140,  2142,\n-  2147,  2152,  2157,  2159,  2161,  2165,  2167,  2172,  2177,  2182,\n-  2187,  2189,  2191,  2193,  2195,  2197,  2201,  2203,  2208,  2213,\n-  2215,  2219,  2221,  2226,  2230,  2232,  2237,  2241,  2243,  2248,\n-  2252,  2254,  2259,  2263,  2265,  2270,  2274,  2276,  2281,  2287,\n-  2289,  2293,  2295,  2298,  2301,  2309,  2311,  2312,  2315,  2317,\n-  2320,  2324\n+   481,   487,   489,   490,   491,   492,   493,   497,   499,   502,\n+   504,   505,   508,   510,   513,   517,   521,   525,   531,   533,\n+   535,   537,   542,   544,   547,   551,   556,   561,   563,   564,\n+   565,   566,   567,   568,   569,   572,   577,   583,   585,   588,\n+   591,   593,   597,   599,   602,   629,   631,   635,   648,   650,\n+   654,   661,   666,   668,   678,   683,   698,   702,   705,   708,\n+   711,   713,   715,   720,   724,   726,   728,   730,   734,   736,\n+   738,   745,   751,   756,   760,   769,   779,   781,   784,   786,\n+   787,   788,   792,   794,   796,   797,   799,   804,   807,   817,\n+   820,   822,   826,   829,   836,   842,   850,   852,   854,   856,\n+   858,   862,   864,   868,   875,   876,   880,   883,   885,   887,\n+   889,   891,   893,   895,   897,   904,   907,   909,   918,   920,\n+   924,   929,   934,   938,   943,   948,   950,   957,   959,   961,\n+   965,   968,   970,   974,   976,   977,   982,   988,   995,  1003,\n+  1010,  1013,  1016,  1020,  1023,  1027,  1036,  1038,  1040,  1044,\n+  1046,  1049,  1056,  1064,  1066,  1070,  1077,  1087,  1091,  1094,\n+  1097,  1100,  1103,  1106,  1109,  1112,  1114,  1118,  1124,  1129,\n+  1131,  1135,  1138,  1142,  1144,  1147,  1149,  1150,  1152,  1156,\n+  1160,  1166,  1171,  1174,  1176,  1180,  1186,  1190,  1195,  1204,\n+  1208,  1213,  1225,  1227,  1230,  1232,  1234,  1238,  1242,  1245,\n+  1249,  1251,  1252,  1253,  1254,  1255,  1259,  1261,  1262,  1263,\n+  1264,  1268,  1270,  1271,  1272,  1273,  1274,  1275,  1276,  1277,\n+  1278,  1279,  1282,  1287,  1298,  1301,  1305,  1312,  1322,  1328,\n+  1334,  1340,  1342,  1348,  1350,  1356,  1358,  1360,  1362,  1364,\n+  1368,  1370,  1371,  1372,  1373,  1374,  1375,  1378,  1384,  1386,\n+  1388,  1392,  1397,  1402,  1408,  1418,  1424,  1426,  1428,  1435,\n+  1438,  1440,  1442,  1446,  1448,  1451,  1455,  1457,  1460,  1467,\n+  1473,  1475,  1477,  1481,  1489,  1492,  1494,  1496,  1500,  1505,\n+  1514,  1519,  1522,  1529,  1531,  1533,  1537,  1540,  1549,  1556,\n+  1558,  1562,  1575,  1577,  1583,  1589,  1593,  1595,  1599,  1602,\n+  1604,  1608,  1611,  1613,  1615,  1619,  1622,  1624,  1626,  1630,\n+  1633,  1635,  1637,  1641,  1647,  1649,  1653,  1660,  1662,  1664,\n+  1666,  1670,  1678,  1681,  1683,  1688,  1692,  1694,  1701,  1709,\n+  1726,  1728,  1730,  1734,  1737,  1742,  1744,  1747,  1749,  1751,\n+  1753,  1754,  1755,  1756,  1760,  1762,  1764,  1769,  1771,  1773,\n+  1775,  1777,  1781,  1784,  1789,  1791,  1796,  1797,  1798,  1799,\n+  1800,  1802,  1804,  1806,  1808,  1810,  1814,  1816,  1819,  1825,\n+  1830,  1834,  1837,  1839,  1841,  1845,  1847,  1849,  1851,  1855,\n+  1858,  1862,  1868,  1870,  1878,  1905,  1907,  1911,  1916,  1923,\n+  1927,  1930,  1932,  1943,  1954,  1959,  1968,  1970,  1974,  1977,\n+  1979,  1984,  1989,  1994,  2001,  2003,  2004,  2005,  2008,  2013,\n+  2018,  2020,  2021,  2023,  2025,  2026,  2028,  2032,  2035,  2039,\n+  2042,  2046,  2048,  2050,  2052,  2053,  2055,  2059,  2068,  2070,\n+  2072,  2085,  2087,  2093,  2095,  2097,  2101,  2103,  2108,  2113,\n+  2118,  2120,  2122,  2126,  2128,  2133,  2138,  2140,  2144,  2146,\n+  2151,  2156,  2161,  2163,  2165,  2169,  2171,  2176,  2181,  2186,\n+  2191,  2193,  2195,  2197,  2199,  2201,  2205,  2207,  2212,  2217,\n+  2219,  2223,  2225,  2230,  2234,  2236,  2241,  2245,  2247,  2252,\n+  2256,  2258,  2263,  2267,  2269,  2274,  2278,  2280,  2285,  2291,\n+  2293,  2297,  2299,  2302,  2305,  2313,  2315,  2316,  2319,  2321,\n+  2324,  2328\n };\n #endif\n \n@@ -2231,7 +2235,7 @@ static const short yycheck[] = {     3,\n #define YYPURE 1\n \n /* -*-C-*-  Note some compilers choke on comments on `#line' lines.  */\n-#line 3 \"/usr/share/misc/bison.simple\"\n+#line 3 \"/usr/local/gnu/share/bison.simple\"\n \n /* Skeleton output parser for bison,\n    Copyright (C) 1984, 1989, 1990 Free Software Foundation, Inc.\n@@ -2248,7 +2252,7 @@ static const short yycheck[] = {     3,\n \n    You should have received a copy of the GNU General Public License\n    along with this program; if not, write to the Free Software\n-   Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.  */\n+   Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.  */\n \n /* As a special exception, when this file is copied by Bison into a\n    Bison output file, you may use that output file without restriction.\n@@ -2382,10 +2386,8 @@ int yydebug;\t\t\t/*  nonzero means print parse trace\t*/\n \n /* Prevent warning if -Wstrict-prototypes.  */\n #ifdef __GNUC__\n-#ifndef YYPARSE_PARAM\n int yyparse (void);\n #endif\n-#endif\n \f\n #if __GNUC__ > 1\t\t/* GNU C and GNU C++ define this.  */\n #define __yy_memcpy(TO,FROM,COUNT)\t__builtin_memcpy(TO,FROM,COUNT)\n@@ -2426,7 +2428,7 @@ __yy_memcpy (char *to, char *from, int count)\n #endif\n #endif\n \f\n-#line 196 \"/usr/share/misc/bison.simple\"\n+#line 196 \"/usr/local/gnu/share/bison.simple\"\n \n /* The user can define YYPARSE_PARAM as the name of an argument to be passed\n    into yyparse.  The argument should have type void *.\n@@ -2731,66 +2733,66 @@ yyparse(YYPARSE_PARAM_ARG)\n   switch (yyn) {\n \n case 1:\n-#line 479 \"./parse.y\"\n+#line 483 \"./parse.y\"\n {;\n     break;}\n case 18:\n-#line 523 \"./parse.y\"\n+#line 527 \"./parse.y\"\n { \n \t\t  yyval.node = build_java_array_type (yyvsp[-2].node, -1);\n \t\t  CLASS_LOADED_P (yyval.node) = 1;\n \t\t;\n     break;}\n case 19:\n-#line 528 \"./parse.y\"\n+#line 532 \"./parse.y\"\n { yyval.node = build_unresolved_array_type (yyvsp[-2].node); ;\n     break;}\n case 20:\n-#line 530 \"./parse.y\"\n+#line 534 \"./parse.y\"\n { yyval.node = build_unresolved_array_type (yyvsp[-2].node); ;\n     break;}\n case 21:\n-#line 532 \"./parse.y\"\n+#line 536 \"./parse.y\"\n {RULE (\"']' expected\"); RECOVER;;\n     break;}\n case 22:\n-#line 534 \"./parse.y\"\n+#line 538 \"./parse.y\"\n {RULE (\"']' expected\"); RECOVER;;\n     break;}\n case 26:\n-#line 549 \"./parse.y\"\n+#line 553 \"./parse.y\"\n { yyval.node = make_qualified_name (yyvsp[-2].node, yyvsp[0].node, yyvsp[-1].operator.location); ;\n     break;}\n case 28:\n-#line 558 \"./parse.y\"\n+#line 562 \"./parse.y\"\n {yyval.node = NULL;;\n     break;}\n case 36:\n-#line 570 \"./parse.y\"\n+#line 574 \"./parse.y\"\n {\n \t\t  yyval.node = NULL;\n \t\t;\n     break;}\n case 37:\n-#line 574 \"./parse.y\"\n+#line 578 \"./parse.y\"\n {\n \t\t  yyval.node = NULL;\n \t\t;\n     break;}\n case 40:\n-#line 586 \"./parse.y\"\n+#line 590 \"./parse.y\"\n { ctxp->package = EXPR_WFL_NODE (yyvsp[-1].node); ;\n     break;}\n case 41:\n-#line 588 \"./parse.y\"\n+#line 592 \"./parse.y\"\n {yyerror (\"Missing name\"); RECOVER;;\n     break;}\n case 42:\n-#line 590 \"./parse.y\"\n+#line 594 \"./parse.y\"\n {yyerror (\"';' expected\"); RECOVER;;\n     break;}\n case 45:\n-#line 600 \"./parse.y\"\n+#line 604 \"./parse.y\"\n {\n \t\t  tree name = EXPR_WFL_NODE (yyvsp[-1].node), node, last_name;\n \t\t  int   i = IDENTIFIER_LENGTH (name)-1;\n@@ -2818,15 +2820,15 @@ case 45:\n \t\t;\n     break;}\n case 46:\n-#line 626 \"./parse.y\"\n+#line 630 \"./parse.y\"\n {yyerror (\"Missing name\"); RECOVER;;\n     break;}\n case 47:\n-#line 628 \"./parse.y\"\n+#line 632 \"./parse.y\"\n {yyerror (\"';' expected\"); RECOVER;;\n     break;}\n case 48:\n-#line 633 \"./parse.y\"\n+#line 637 \"./parse.y\"\n {\n \t\t  tree name = EXPR_WFL_NODE (yyvsp[-3].node);\n \t\t  /* Don't import java.lang.* twice. */\n@@ -2840,47 +2842,47 @@ case 48:\n \t\t;\n     break;}\n case 49:\n-#line 645 \"./parse.y\"\n+#line 649 \"./parse.y\"\n {yyerror (\"'*' expected\"); RECOVER;;\n     break;}\n case 50:\n-#line 647 \"./parse.y\"\n+#line 651 \"./parse.y\"\n {yyerror (\"';' expected\"); RECOVER;;\n     break;}\n case 51:\n-#line 652 \"./parse.y\"\n+#line 656 \"./parse.y\"\n {\n \t\t  maybe_generate_finit ();\n \t\t  maybe_generate_clinit ();\n \t\t  yyval.node = yyvsp[0].node;\n \t\t;\n     break;}\n case 52:\n-#line 658 \"./parse.y\"\n+#line 662 \"./parse.y\"\n {\n \t\t  maybe_generate_clinit ();\n \t\t  yyval.node = yyvsp[0].node;\n \t\t;\n     break;}\n case 53:\n-#line 663 \"./parse.y\"\n+#line 667 \"./parse.y\"\n { yyval.node = NULL; ;\n     break;}\n case 54:\n-#line 665 \"./parse.y\"\n+#line 669 \"./parse.y\"\n {\n \t\t  YYERROR_NOW;\n \t\t  yyerror (\"Class or interface declaration expected\");\n \t\t;\n     break;}\n case 55:\n-#line 676 \"./parse.y\"\n+#line 680 \"./parse.y\"\n {\n \t\t  yyval.value = (1 << yyvsp[0].value);\n \t\t;\n     break;}\n case 56:\n-#line 680 \"./parse.y\"\n+#line 684 \"./parse.y\"\n {\n \t\t  int acc = (1 << yyvsp[0].value);\n \t\t  if (yyval.value & acc)\n@@ -2894,95 +2896,95 @@ case 56:\n \t\t;\n     break;}\n case 57:\n-#line 696 \"./parse.y\"\n+#line 700 \"./parse.y\"\n { create_class (yyvsp[-4].value, yyvsp[-2].node, yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 58:\n-#line 698 \"./parse.y\"\n+#line 702 \"./parse.y\"\n { \n \t\t  yyval.node = yyvsp[0].node;\n \t\t;\n     break;}\n case 59:\n-#line 702 \"./parse.y\"\n+#line 706 \"./parse.y\"\n { create_class (0, yyvsp[-2].node, yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 60:\n-#line 704 \"./parse.y\"\n+#line 708 \"./parse.y\"\n { \t\n \t\t  yyval.node = yyvsp[0].node;\n \t\t;\n     break;}\n case 61:\n-#line 708 \"./parse.y\"\n+#line 712 \"./parse.y\"\n {yyerror (\"Missing class name\"); RECOVER;;\n     break;}\n case 62:\n-#line 710 \"./parse.y\"\n+#line 714 \"./parse.y\"\n {yyerror (\"Missing class name\"); RECOVER;;\n     break;}\n case 63:\n-#line 712 \"./parse.y\"\n+#line 716 \"./parse.y\"\n {\n \t\t  if (!ctxp->class_err) yyerror (\"'{' expected\"); \n \t\t  DRECOVER(class1);\n \t\t;\n     break;}\n case 64:\n-#line 717 \"./parse.y\"\n+#line 721 \"./parse.y\"\n {if (!ctxp->class_err) yyerror (\"'{' expected\"); RECOVER;;\n     break;}\n case 65:\n-#line 721 \"./parse.y\"\n+#line 725 \"./parse.y\"\n { yyval.node = NULL; ;\n     break;}\n case 66:\n-#line 723 \"./parse.y\"\n+#line 727 \"./parse.y\"\n { yyval.node = yyvsp[0].node; ;\n     break;}\n case 67:\n-#line 725 \"./parse.y\"\n+#line 729 \"./parse.y\"\n {yyerror (\"'{' expected\"); ctxp->class_err=1;;\n     break;}\n case 68:\n-#line 727 \"./parse.y\"\n+#line 731 \"./parse.y\"\n {yyerror (\"Missing super class name\"); ctxp->class_err=1;;\n     break;}\n case 69:\n-#line 731 \"./parse.y\"\n+#line 735 \"./parse.y\"\n { yyval.node = NULL_TREE; ;\n     break;}\n case 70:\n-#line 733 \"./parse.y\"\n+#line 737 \"./parse.y\"\n { yyval.node = yyvsp[0].node; ;\n     break;}\n case 71:\n-#line 735 \"./parse.y\"\n+#line 739 \"./parse.y\"\n {\n \t\t  ctxp->class_err=1;\n \t\t  yyerror (\"Missing interface name\"); \n \t\t;\n     break;}\n case 72:\n-#line 743 \"./parse.y\"\n+#line 747 \"./parse.y\"\n { \n \t\t  ctxp->interface_number = 1;\n \t\t  yyval.node = build_tree_list (yyvsp[0].node, NULL_TREE);\n \t\t;\n     break;}\n case 73:\n-#line 748 \"./parse.y\"\n+#line 752 \"./parse.y\"\n { \n \t\t  ctxp->interface_number++;\n \t\t  yyval.node = chainon (yyvsp[-2].node, build_tree_list (yyvsp[0].node, NULL_TREE));\n \t\t;\n     break;}\n case 74:\n-#line 753 \"./parse.y\"\n+#line 757 \"./parse.y\"\n {yyerror (\"Missing interface name\"); RECOVER;;\n     break;}\n case 75:\n-#line 758 \"./parse.y\"\n+#line 762 \"./parse.y\"\n { \n \t\t  /* Store the location of the `}' when doing xrefs */\n \t\t  if (flag_emit_xref)\n@@ -2992,7 +2994,7 @@ case 75:\n \t\t;\n     break;}\n case 76:\n-#line 766 \"./parse.y\"\n+#line 770 \"./parse.y\"\n { \n \t\t  /* Store the location of the `}' when doing xrefs */\n \t\t  if (flag_emit_xref)\n@@ -3002,27 +3004,27 @@ case 76:\n \t\t;\n     break;}\n case 82:\n-#line 785 \"./parse.y\"\n+#line 789 \"./parse.y\"\n { yyval.node = parse_jdk1_1_error (\"instance initializer\"); ;\n     break;}\n case 84:\n-#line 791 \"./parse.y\"\n+#line 795 \"./parse.y\"\n { yyval.node = yyvsp[-1].node; ;\n     break;}\n case 86:\n-#line 794 \"./parse.y\"\n+#line 798 \"./parse.y\"\n { yyval.node = parse_jdk1_1_error (\"inner classe declaration\"); ;\n     break;}\n case 87:\n-#line 796 \"./parse.y\"\n+#line 800 \"./parse.y\"\n { yyval.node = parse_jdk1_1_error (\"inner interface declaration\"); ;\n     break;}\n case 88:\n-#line 802 \"./parse.y\"\n+#line 806 \"./parse.y\"\n { register_fields (0, yyvsp[-2].node, yyvsp[-1].node); ;\n     break;}\n case 89:\n-#line 804 \"./parse.y\"\n+#line 808 \"./parse.y\"\n {\n \t\t  check_modifiers \n \t\t    (\"Illegal modifier `%s' for field declaration\",\n@@ -3032,19 +3034,19 @@ case 89:\n \t\t;\n     break;}\n case 91:\n-#line 817 \"./parse.y\"\n+#line 821 \"./parse.y\"\n { yyval.node = chainon (yyvsp[-2].node, yyvsp[0].node); ;\n     break;}\n case 92:\n-#line 819 \"./parse.y\"\n+#line 823 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 93:\n-#line 824 \"./parse.y\"\n+#line 828 \"./parse.y\"\n { yyval.node = build_tree_list (yyvsp[0].node, NULL_TREE); ;\n     break;}\n case 94:\n-#line 826 \"./parse.y\"\n+#line 830 \"./parse.y\"\n { \n \t\t  if (java_error_count)\n \t\t    yyvsp[0].node = NULL_TREE;\n@@ -3053,101 +3055,101 @@ case 94:\n \t\t;\n     break;}\n case 95:\n-#line 833 \"./parse.y\"\n+#line 837 \"./parse.y\"\n {\n \t\t  yyerror (\"Missing variable initializer\");\n \t\t  yyval.node = build_tree_list (yyvsp[-2].node, NULL_TREE);\n \t\t  RECOVER;\n \t\t;\n     break;}\n case 96:\n-#line 839 \"./parse.y\"\n+#line 843 \"./parse.y\"\n {\n \t\t  yyerror (\"';' expected\");\n \t\t  yyval.node = build_tree_list (yyvsp[-3].node, NULL_TREE);\n \t\t  RECOVER;\n \t\t;\n     break;}\n case 98:\n-#line 849 \"./parse.y\"\n+#line 853 \"./parse.y\"\n { yyval.node = build_unresolved_array_type (yyvsp[-2].node); ;\n     break;}\n case 99:\n-#line 851 \"./parse.y\"\n+#line 855 \"./parse.y\"\n {yyerror (\"Invalid declaration\"); DRECOVER(vdi);;\n     break;}\n case 100:\n-#line 853 \"./parse.y\"\n+#line 857 \"./parse.y\"\n {yyerror (\"']' expected\"); DRECOVER(vdi);;\n     break;}\n case 101:\n-#line 855 \"./parse.y\"\n+#line 859 \"./parse.y\"\n {yyerror (\"Unbalanced ']'\"); DRECOVER(vdi);;\n     break;}\n case 104:\n-#line 866 \"./parse.y\"\n+#line 870 \"./parse.y\"\n {\n \t\t  current_function_decl = yyvsp[0].node;\n \t\t  source_start_java_method (current_function_decl);\n \t\t;\n     break;}\n case 105:\n-#line 871 \"./parse.y\"\n+#line 875 \"./parse.y\"\n { finish_method_declaration (yyvsp[0].node); ;\n     break;}\n case 106:\n-#line 873 \"./parse.y\"\n+#line 877 \"./parse.y\"\n {YYNOT_TWICE yyerror (\"'{' expected\"); RECOVER;;\n     break;}\n case 107:\n-#line 878 \"./parse.y\"\n+#line 882 \"./parse.y\"\n { yyval.node = method_header (0, yyvsp[-2].node, yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 108:\n-#line 880 \"./parse.y\"\n+#line 884 \"./parse.y\"\n { yyval.node = method_header (0, void_type_node, yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 109:\n-#line 882 \"./parse.y\"\n+#line 886 \"./parse.y\"\n { yyval.node = method_header (yyvsp[-3].value, yyvsp[-2].node, yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 110:\n-#line 884 \"./parse.y\"\n+#line 888 \"./parse.y\"\n { yyval.node = method_header (yyvsp[-3].value, void_type_node, yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 111:\n-#line 886 \"./parse.y\"\n+#line 890 \"./parse.y\"\n {RECOVER;;\n     break;}\n case 112:\n-#line 888 \"./parse.y\"\n+#line 892 \"./parse.y\"\n {RECOVER;;\n     break;}\n case 113:\n-#line 890 \"./parse.y\"\n+#line 894 \"./parse.y\"\n {yyerror (\"Identifier expected\"); RECOVER;;\n     break;}\n case 114:\n-#line 892 \"./parse.y\"\n+#line 896 \"./parse.y\"\n {yyerror (\"Identifier expected\"); RECOVER;;\n     break;}\n case 115:\n-#line 894 \"./parse.y\"\n+#line 898 \"./parse.y\"\n {\n \t\t  yyerror (\"Invalid method declaration, return type required\");\n \t\t  RECOVER;\n \t\t;\n     break;}\n case 116:\n-#line 902 \"./parse.y\"\n+#line 906 \"./parse.y\"\n { yyval.node = method_declarator (yyvsp[-2].node, NULL_TREE); ;\n     break;}\n case 117:\n-#line 904 \"./parse.y\"\n+#line 908 \"./parse.y\"\n { yyval.node = method_declarator (yyvsp[-3].node, yyvsp[-1].node); ;\n     break;}\n case 118:\n-#line 906 \"./parse.y\"\n+#line 910 \"./parse.y\"\n {\n \t\t  EXPR_WFL_LINECOL (wfl_operator) = yyvsp[-1].operator.location;\n \t\t  TREE_PURPOSE (yyvsp[-2].node) = \n@@ -3158,316 +3160,316 @@ case 118:\n \t\t;\n     break;}\n case 119:\n-#line 915 \"./parse.y\"\n+#line 919 \"./parse.y\"\n {yyerror (\"')' expected\"); DRECOVER(method_declarator);;\n     break;}\n case 120:\n-#line 917 \"./parse.y\"\n+#line 921 \"./parse.y\"\n {yyerror (\"']' expected\"); RECOVER;;\n     break;}\n case 121:\n-#line 922 \"./parse.y\"\n+#line 926 \"./parse.y\"\n {\n \t\t  ctxp->formal_parameter_number = 1;\n \t\t;\n     break;}\n case 122:\n-#line 926 \"./parse.y\"\n+#line 930 \"./parse.y\"\n {\n \t\t  ctxp->formal_parameter_number += 1;\n \t\t  yyval.node = chainon (yyvsp[-2].node, yyvsp[0].node);\n \t\t;\n     break;}\n case 123:\n-#line 931 \"./parse.y\"\n+#line 935 \"./parse.y\"\n {yyerror (\"Missing formal parameter term\"); RECOVER;;\n     break;}\n case 124:\n-#line 936 \"./parse.y\"\n+#line 940 \"./parse.y\"\n {\n \t\t  yyval.node = build_tree_list (yyvsp[0].node, yyvsp[-1].node);\n \t\t;\n     break;}\n case 125:\n-#line 940 \"./parse.y\"\n+#line 944 \"./parse.y\"\n { \n \t\t  parse_jdk1_1_error (\"final parameters\");\n \t\t  yyval.node = build_tree_list (yyvsp[0].node, yyvsp[-1].node);\n \t\t;\n     break;}\n case 126:\n-#line 945 \"./parse.y\"\n+#line 949 \"./parse.y\"\n {yyerror (\"Missing identifier\"); RECOVER;;\n     break;}\n case 127:\n-#line 947 \"./parse.y\"\n+#line 951 \"./parse.y\"\n {\n \t\t  SOURCE_FRONTEND_DEBUG ((\"Modifiers: %d\", yyvsp[-2].value));\n \t\t  yyerror (\"Missing identifier\"); RECOVER;\n \t\t;\n     break;}\n case 128:\n-#line 954 \"./parse.y\"\n+#line 958 \"./parse.y\"\n { yyval.node = NULL_TREE; ;\n     break;}\n case 129:\n-#line 956 \"./parse.y\"\n+#line 960 \"./parse.y\"\n { yyval.node = yyvsp[0].node; ;\n     break;}\n case 130:\n-#line 958 \"./parse.y\"\n+#line 962 \"./parse.y\"\n {yyerror (\"Missing class type term\"); RECOVER;;\n     break;}\n case 131:\n-#line 963 \"./parse.y\"\n+#line 967 \"./parse.y\"\n { yyval.node = build_tree_list (yyvsp[0].node, yyvsp[0].node); ;\n     break;}\n case 132:\n-#line 965 \"./parse.y\"\n+#line 969 \"./parse.y\"\n { yyval.node = tree_cons (yyvsp[0].node, yyvsp[0].node, yyvsp[-2].node); ;\n     break;}\n case 133:\n-#line 967 \"./parse.y\"\n+#line 971 \"./parse.y\"\n {yyerror (\"Missing class type term\"); RECOVER;;\n     break;}\n case 136:\n-#line 974 \"./parse.y\"\n+#line 978 \"./parse.y\"\n { yyval.node = NULL_TREE; ;\n     break;}\n case 137:\n-#line 980 \"./parse.y\"\n+#line 984 \"./parse.y\"\n {\n \t\t  TREE_CHAIN (yyvsp[0].node) = ctxp->static_initialized;\n \t\t  ctxp->static_initialized = yyvsp[0].node;\n \t\t;\n     break;}\n case 138:\n-#line 985 \"./parse.y\"\n+#line 989 \"./parse.y\"\n {\n \t\t  TREE_CHAIN (yyvsp[-1].node) = ctxp->static_initialized;\n \t\t  ctxp->static_initialized = yyvsp[-1].node;\n \t\t;\n     break;}\n case 139:\n-#line 993 \"./parse.y\"\n+#line 997 \"./parse.y\"\n {\n \t\t  SOURCE_FRONTEND_DEBUG ((\"Modifiers: %d\", yyvsp[0].value));\n \t\t;\n     break;}\n case 140:\n-#line 1001 \"./parse.y\"\n+#line 1005 \"./parse.y\"\n {\n \t\t  current_function_decl = yyvsp[0].node;\n \t\t  source_start_java_method (current_function_decl);\n \t\t;\n     break;}\n case 141:\n-#line 1006 \"./parse.y\"\n+#line 1010 \"./parse.y\"\n { finish_method_declaration (yyvsp[0].node); ;\n     break;}\n case 142:\n-#line 1011 \"./parse.y\"\n+#line 1015 \"./parse.y\"\n { yyval.node = method_header (0, NULL_TREE, yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 143:\n-#line 1013 \"./parse.y\"\n+#line 1017 \"./parse.y\"\n { yyval.node = method_header (yyvsp[-2].value, NULL_TREE, yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 144:\n-#line 1018 \"./parse.y\"\n+#line 1022 \"./parse.y\"\n { yyval.node = method_declarator (yyvsp[-2].node, NULL_TREE); ;\n     break;}\n case 145:\n-#line 1020 \"./parse.y\"\n+#line 1024 \"./parse.y\"\n { yyval.node = method_declarator (yyvsp[-3].node, yyvsp[-1].node); ;\n     break;}\n case 146:\n-#line 1028 \"./parse.y\"\n+#line 1032 \"./parse.y\"\n { \n \t\t  BLOCK_EXPR_BODY (yyvsp[0].node) = empty_stmt_node;\n \t\t  yyval.node = yyvsp[0].node;\n \t\t;\n     break;}\n case 147:\n-#line 1033 \"./parse.y\"\n+#line 1037 \"./parse.y\"\n { yyval.node = yyvsp[0].node; ;\n     break;}\n case 148:\n-#line 1035 \"./parse.y\"\n+#line 1039 \"./parse.y\"\n { yyval.node = yyvsp[0].node; ;\n     break;}\n case 149:\n-#line 1037 \"./parse.y\"\n+#line 1041 \"./parse.y\"\n { yyval.node = yyvsp[0].node; ;\n     break;}\n case 152:\n-#line 1047 \"./parse.y\"\n+#line 1051 \"./parse.y\"\n { \n \t\t  yyval.node = build_method_invocation (yyvsp[-3].node, NULL_TREE); \n \t\t  yyval.node = build_debugable_stmt (EXPR_WFL_LINECOL (yyvsp[-3].node), yyval.node);\n \t\t  yyval.node = java_method_add_stmt (current_function_decl, yyval.node);\n \t\t;\n     break;}\n case 153:\n-#line 1053 \"./parse.y\"\n+#line 1057 \"./parse.y\"\n { \n \t\t  yyval.node = build_method_invocation (yyvsp[-4].node, yyvsp[-2].node); \n \t\t  yyval.node = build_debugable_stmt (EXPR_WFL_LINECOL (yyvsp[-4].node), yyval.node);\n \t\t  yyval.node = java_method_add_stmt (current_function_decl, yyval.node);\n \t\t;\n     break;}\n case 154:\n-#line 1061 \"./parse.y\"\n+#line 1065 \"./parse.y\"\n {yyval.node = parse_jdk1_1_error (\"explicit constructor invocation\"); ;\n     break;}\n case 155:\n-#line 1063 \"./parse.y\"\n+#line 1067 \"./parse.y\"\n {yyval.node = parse_jdk1_1_error (\"explicit constructor invocation\"); ;\n     break;}\n case 156:\n-#line 1068 \"./parse.y\"\n+#line 1072 \"./parse.y\"\n {\n \t\t  tree wfl = build_wfl_node (this_identifier_node);\n \t\t  EXPR_WFL_LINECOL (wfl) = yyvsp[0].operator.location;\n \t\t  yyval.node = wfl;\n \t\t;\n     break;}\n case 157:\n-#line 1074 \"./parse.y\"\n+#line 1078 \"./parse.y\"\n {\n \t\t  tree wfl = build_wfl_node (super_identifier_node);\n \t\t  EXPR_WFL_LINECOL (wfl) = yyvsp[0].operator.location;\n \t\t  yyval.node = wfl;\n \t\t;\n     break;}\n case 158:\n-#line 1085 \"./parse.y\"\n+#line 1089 \"./parse.y\"\n { create_interface (0, yyvsp[0].node, NULL_TREE); ;\n     break;}\n case 159:\n-#line 1087 \"./parse.y\"\n+#line 1091 \"./parse.y\"\n {\n \t\t  yyval.node = yyvsp[0].node;\n \t\t;\n     break;}\n case 160:\n-#line 1091 \"./parse.y\"\n+#line 1095 \"./parse.y\"\n { create_interface (yyvsp[-2].value, yyvsp[0].node, NULL_TREE); ;\n     break;}\n case 161:\n-#line 1093 \"./parse.y\"\n+#line 1097 \"./parse.y\"\n {\n \t\t  yyval.node = yyvsp[0].node;\n \t\t;\n     break;}\n case 162:\n-#line 1097 \"./parse.y\"\n+#line 1101 \"./parse.y\"\n { create_interface (0, yyvsp[-1].node, yyvsp[0].node);\t;\n     break;}\n case 163:\n-#line 1099 \"./parse.y\"\n+#line 1103 \"./parse.y\"\n {\n \t\t  yyval.node = yyvsp[0].node;\n \t\t;\n     break;}\n case 164:\n-#line 1103 \"./parse.y\"\n+#line 1107 \"./parse.y\"\n { create_interface (yyvsp[-3].value, yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 165:\n-#line 1105 \"./parse.y\"\n+#line 1109 \"./parse.y\"\n {\n \t\t  yyval.node = yyvsp[0].node;\n \t\t;\n     break;}\n case 166:\n-#line 1109 \"./parse.y\"\n+#line 1113 \"./parse.y\"\n {yyerror (\"'{' expected\"); RECOVER;;\n     break;}\n case 167:\n-#line 1111 \"./parse.y\"\n+#line 1115 \"./parse.y\"\n {yyerror (\"'{' expected\"); RECOVER;;\n     break;}\n case 168:\n-#line 1116 \"./parse.y\"\n+#line 1120 \"./parse.y\"\n { \n \t\t  ctxp->interface_number = 1;\n \t\t  yyval.node = build_tree_list (yyvsp[0].node, NULL_TREE);\n \t\t;\n     break;}\n case 169:\n-#line 1121 \"./parse.y\"\n+#line 1125 \"./parse.y\"\n { \n \t\t  ctxp->interface_number++;\n \t\t  yyval.node = chainon (yyvsp[-2].node, build_tree_list (yyvsp[0].node, NULL_TREE));\n \t\t;\n     break;}\n case 170:\n-#line 1126 \"./parse.y\"\n+#line 1130 \"./parse.y\"\n {yyerror (\"Invalid interface type\"); RECOVER;;\n     break;}\n case 171:\n-#line 1128 \"./parse.y\"\n+#line 1132 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 172:\n-#line 1133 \"./parse.y\"\n+#line 1137 \"./parse.y\"\n { yyval.node = NULL_TREE; ;\n     break;}\n case 173:\n-#line 1135 \"./parse.y\"\n+#line 1139 \"./parse.y\"\n { yyval.node = NULL_TREE; ;\n     break;}\n case 178:\n-#line 1147 \"./parse.y\"\n+#line 1151 \"./parse.y\"\n { yyval.node = parse_jdk1_1_error (\"inner class declaration\"); ;\n     break;}\n case 179:\n-#line 1149 \"./parse.y\"\n+#line 1153 \"./parse.y\"\n { yyval.node = parse_jdk1_1_error (\"inner interface declaration\"); ;\n     break;}\n case 181:\n-#line 1158 \"./parse.y\"\n+#line 1162 \"./parse.y\"\n { \n \t\t  check_abstract_method_header (yyvsp[-1].node);\n \t\t  current_function_decl = NULL_TREE; /* FIXME ? */\n \t\t;\n     break;}\n case 182:\n-#line 1163 \"./parse.y\"\n+#line 1167 \"./parse.y\"\n {yyerror (\"';' expected\"); RECOVER;;\n     break;}\n case 183:\n-#line 1169 \"./parse.y\"\n+#line 1173 \"./parse.y\"\n { yyval.node = build_new_array_init (yyvsp[-1].operator.location, NULL_TREE); ;\n     break;}\n case 184:\n-#line 1171 \"./parse.y\"\n+#line 1175 \"./parse.y\"\n { yyval.node = build_new_array_init (yyvsp[-2].operator.location, yyvsp[-1].node); ;\n     break;}\n case 185:\n-#line 1173 \"./parse.y\"\n+#line 1177 \"./parse.y\"\n { yyval.node = build_new_array_init (yyvsp[-3].operator.location, yyvsp[-2].node); ;\n     break;}\n case 186:\n-#line 1178 \"./parse.y\"\n+#line 1182 \"./parse.y\"\n { \n \t\t  yyval.node = tree_cons (maybe_build_array_element_wfl (yyvsp[0].node), \n \t\t\t\t  yyvsp[0].node, NULL_TREE);\n \t\t;\n     break;}\n case 187:\n-#line 1183 \"./parse.y\"\n+#line 1187 \"./parse.y\"\n {\n \t\t  yyval.node = tree_cons (maybe_build_array_element_wfl (yyvsp[0].node), yyvsp[0].node, yyvsp[-2].node);\n \t\t;\n     break;}\n case 188:\n-#line 1187 \"./parse.y\"\n+#line 1191 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 189:\n-#line 1193 \"./parse.y\"\n+#line 1197 \"./parse.y\"\n { \n \t\t  /* Store the location of the `}' when doing xrefs */\n \t\t  if (current_function_decl && flag_emit_xref)\n@@ -3477,15 +3479,15 @@ case 189:\n \t\t;\n     break;}\n case 190:\n-#line 1201 \"./parse.y\"\n+#line 1205 \"./parse.y\"\n { yyval.node = yyvsp[0].node; ;\n     break;}\n case 191:\n-#line 1206 \"./parse.y\"\n+#line 1210 \"./parse.y\"\n { enter_block (); ;\n     break;}\n case 192:\n-#line 1211 \"./parse.y\"\n+#line 1215 \"./parse.y\"\n { \n \t\t  maybe_absorb_scoping_blocks ();\n \t\t  /* Store the location of the `}' when doing xrefs */\n@@ -3496,35 +3498,35 @@ case 192:\n \t\t;\n     break;}\n case 196:\n-#line 1229 \"./parse.y\"\n+#line 1233 \"./parse.y\"\n { java_method_add_stmt (current_function_decl, yyvsp[0].node); ;\n     break;}\n case 197:\n-#line 1231 \"./parse.y\"\n+#line 1235 \"./parse.y\"\n { parse_jdk1_1_error (\"inner class declaration\"); ;\n     break;}\n case 199:\n-#line 1240 \"./parse.y\"\n+#line 1244 \"./parse.y\"\n { declare_local_variables (0, yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 200:\n-#line 1242 \"./parse.y\"\n+#line 1246 \"./parse.y\"\n { declare_local_variables (yyvsp[-2].value, yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 206:\n-#line 1252 \"./parse.y\"\n+#line 1256 \"./parse.y\"\n { yyval.node = exit_block (); ;\n     break;}\n case 211:\n-#line 1261 \"./parse.y\"\n+#line 1265 \"./parse.y\"\n { yyval.node = exit_block (); ;\n     break;}\n case 223:\n-#line 1280 \"./parse.y\"\n+#line 1284 \"./parse.y\"\n { yyval.node = empty_stmt_node; ;\n     break;}\n case 224:\n-#line 1285 \"./parse.y\"\n+#line 1289 \"./parse.y\"\n {\n \t\t  yyval.node = build_labeled_block (EXPR_WFL_LINECOL (yyvsp[-1].node), \n \t\t\t\t\t    EXPR_WFL_NODE (yyvsp[-1].node));\n@@ -3534,19 +3536,19 @@ case 224:\n \t\t;\n     break;}\n case 225:\n-#line 1296 \"./parse.y\"\n+#line 1300 \"./parse.y\"\n { yyval.node = finish_labeled_statement (yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 226:\n-#line 1298 \"./parse.y\"\n+#line 1302 \"./parse.y\"\n {yyerror (\"':' expected\"); RECOVER;;\n     break;}\n case 227:\n-#line 1303 \"./parse.y\"\n+#line 1307 \"./parse.y\"\n { yyval.node = finish_labeled_statement (yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 228:\n-#line 1310 \"./parse.y\"\n+#line 1314 \"./parse.y\"\n {\n \t\t  /* We have a statement. Generate a WFL around it so\n \t\t     we can debug it */\n@@ -3557,108 +3559,108 @@ case 228:\n \t\t;\n     break;}\n case 229:\n-#line 1319 \"./parse.y\"\n+#line 1323 \"./parse.y\"\n {\n \t\t  if (ctxp->prevent_ese != lineno)\n \t\t    yyerror (\"Invalid expression statement\");\n \t\t  DRECOVER (expr_stmt);\n \t\t;\n     break;}\n case 230:\n-#line 1325 \"./parse.y\"\n+#line 1329 \"./parse.y\"\n {\n \t\t  if (ctxp->prevent_ese != lineno)\n \t\t    yyerror (\"Invalid expression statement\");\n \t\t  DRECOVER (expr_stmt);\n \t\t;\n     break;}\n case 231:\n-#line 1331 \"./parse.y\"\n+#line 1335 \"./parse.y\"\n {\n \t\t  if (ctxp->prevent_ese != lineno)\n \t\t    yyerror (\"Invalid expression statement\");\n \t\t  DRECOVER (expr_stmt);\n \t\t;\n     break;}\n case 232:\n-#line 1337 \"./parse.y\"\n+#line 1341 \"./parse.y\"\n {yyerror (\"')' expected\"); RECOVER;;\n     break;}\n case 233:\n-#line 1339 \"./parse.y\"\n+#line 1343 \"./parse.y\"\n {\n \t\t  yyerror (\"Constructor invocation must be first \"\n \t\t\t   \"thing in a constructor\"); \n \t\t  RECOVER;\n \t\t;\n     break;}\n case 234:\n-#line 1345 \"./parse.y\"\n+#line 1349 \"./parse.y\"\n {yyerror (\"')' expected\"); RECOVER;;\n     break;}\n case 235:\n-#line 1347 \"./parse.y\"\n+#line 1351 \"./parse.y\"\n {\n \t\t  yyerror (\"Constructor invocation must be first \"\n \t\t\t   \"thing in a constructor\"); \n \t\t  RECOVER;\n \t\t;\n     break;}\n case 236:\n-#line 1353 \"./parse.y\"\n+#line 1357 \"./parse.y\"\n {yyerror (\"'(' expected\"); RECOVER;;\n     break;}\n case 237:\n-#line 1355 \"./parse.y\"\n+#line 1359 \"./parse.y\"\n {yyerror (\"')' expected\"); RECOVER;;\n     break;}\n case 238:\n-#line 1357 \"./parse.y\"\n+#line 1361 \"./parse.y\"\n {yyerror (\"')' expected\"); RECOVER;;\n     break;}\n case 239:\n-#line 1359 \"./parse.y\"\n+#line 1363 \"./parse.y\"\n {yyerror (\"';' expected\"); RECOVER;;\n     break;}\n case 240:\n-#line 1361 \"./parse.y\"\n+#line 1365 \"./parse.y\"\n {yyerror (\"';' expected\"); RECOVER;;\n     break;}\n case 248:\n-#line 1376 \"./parse.y\"\n+#line 1380 \"./parse.y\"\n { \n \t\t  yyval.node = build_if_else_statement (yyvsp[-3].operator.location, yyvsp[-2].node, \n \t\t\t\t\t\tyyvsp[0].node, NULL_TREE);\n \t\t;\n     break;}\n case 249:\n-#line 1381 \"./parse.y\"\n+#line 1385 \"./parse.y\"\n {yyerror (\"'(' expected\"); RECOVER;;\n     break;}\n case 250:\n-#line 1383 \"./parse.y\"\n+#line 1387 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 251:\n-#line 1385 \"./parse.y\"\n+#line 1389 \"./parse.y\"\n {yyerror (\"')' expected\"); RECOVER;;\n     break;}\n case 252:\n-#line 1390 \"./parse.y\"\n+#line 1394 \"./parse.y\"\n { yyval.node = build_if_else_statement (yyvsp[-5].operator.location, yyvsp[-4].node, yyvsp[-2].node, yyvsp[0].node); ;\n     break;}\n case 253:\n-#line 1395 \"./parse.y\"\n+#line 1399 \"./parse.y\"\n { yyval.node = build_if_else_statement (yyvsp[-5].operator.location, yyvsp[-4].node, yyvsp[-2].node, yyvsp[0].node); ;\n     break;}\n case 254:\n-#line 1400 \"./parse.y\"\n+#line 1404 \"./parse.y\"\n {\n \t\t  enter_block ();\n \t\t;\n     break;}\n case 255:\n-#line 1404 \"./parse.y\"\n+#line 1408 \"./parse.y\"\n { \n \t\t  /* Make into \"proper list\" of COMPOUND_EXPRs.\n \t\t     I.e. make the last statment also have its own\n@@ -3669,112 +3671,112 @@ case 255:\n \t\t;\n     break;}\n case 256:\n-#line 1416 \"./parse.y\"\n+#line 1420 \"./parse.y\"\n { \n \t\t  yyval.node = build (SWITCH_EXPR, NULL_TREE, yyvsp[-1].node, NULL_TREE);\n \t\t  EXPR_WFL_LINECOL (yyval.node) = yyvsp[-2].operator.location;\n \t\t;\n     break;}\n case 257:\n-#line 1421 \"./parse.y\"\n+#line 1425 \"./parse.y\"\n {yyerror (\"'(' expected\"); RECOVER;;\n     break;}\n case 258:\n-#line 1423 \"./parse.y\"\n+#line 1427 \"./parse.y\"\n {yyerror (\"Missing term or ')'\"); DRECOVER(switch_statement);;\n     break;}\n case 259:\n-#line 1425 \"./parse.y\"\n+#line 1429 \"./parse.y\"\n {yyerror (\"'{' expected\"); RECOVER;;\n     break;}\n case 260:\n-#line 1433 \"./parse.y\"\n+#line 1437 \"./parse.y\"\n { yyval.node = NULL_TREE; ;\n     break;}\n case 261:\n-#line 1435 \"./parse.y\"\n+#line 1439 \"./parse.y\"\n { yyval.node = NULL_TREE; ;\n     break;}\n case 262:\n-#line 1437 \"./parse.y\"\n+#line 1441 \"./parse.y\"\n { yyval.node = NULL_TREE; ;\n     break;}\n case 263:\n-#line 1439 \"./parse.y\"\n+#line 1443 \"./parse.y\"\n { yyval.node = NULL_TREE; ;\n     break;}\n case 269:\n-#line 1458 \"./parse.y\"\n+#line 1462 \"./parse.y\"\n { \n \t\t  tree lab = build1 (CASE_EXPR, NULL_TREE, yyvsp[-1].node);\n \t\t  EXPR_WFL_LINECOL (lab) = yyvsp[-2].operator.location;\n \t\t  java_method_add_stmt (current_function_decl, lab);\n \t\t;\n     break;}\n case 270:\n-#line 1464 \"./parse.y\"\n+#line 1468 \"./parse.y\"\n { \n \t\t  tree lab = build1 (DEFAULT_EXPR, NULL_TREE, NULL_TREE);\n \t\t  EXPR_WFL_LINECOL (lab) = yyvsp[-1].operator.location;\n \t\t  java_method_add_stmt (current_function_decl, lab);\n \t\t;\n     break;}\n case 271:\n-#line 1470 \"./parse.y\"\n+#line 1474 \"./parse.y\"\n {yyerror (\"Missing or invalid constant expression\"); RECOVER;;\n     break;}\n case 272:\n-#line 1472 \"./parse.y\"\n+#line 1476 \"./parse.y\"\n {yyerror (\"':' expected\"); RECOVER;;\n     break;}\n case 273:\n-#line 1474 \"./parse.y\"\n+#line 1478 \"./parse.y\"\n {yyerror (\"':' expected\"); RECOVER;;\n     break;}\n case 274:\n-#line 1479 \"./parse.y\"\n+#line 1483 \"./parse.y\"\n { \n \t\t  tree body = build_loop_body (yyvsp[-2].operator.location, yyvsp[-1].node, 0);\n \t\t  yyval.node = build_new_loop (body);\n \t\t;\n     break;}\n case 275:\n-#line 1487 \"./parse.y\"\n+#line 1491 \"./parse.y\"\n { yyval.node = finish_loop_body (0, NULL_TREE, yyvsp[0].node, 0); ;\n     break;}\n case 276:\n-#line 1489 \"./parse.y\"\n+#line 1493 \"./parse.y\"\n {YYERROR_NOW; yyerror (\"'(' expected\"); RECOVER;;\n     break;}\n case 277:\n-#line 1491 \"./parse.y\"\n+#line 1495 \"./parse.y\"\n {yyerror (\"Missing term and ')' expected\"); RECOVER;;\n     break;}\n case 278:\n-#line 1493 \"./parse.y\"\n+#line 1497 \"./parse.y\"\n {yyerror (\"')' expected\"); RECOVER;;\n     break;}\n case 279:\n-#line 1498 \"./parse.y\"\n+#line 1502 \"./parse.y\"\n { yyval.node = finish_loop_body (0, NULL_TREE, yyvsp[0].node, 0); ;\n     break;}\n case 280:\n-#line 1503 \"./parse.y\"\n+#line 1507 \"./parse.y\"\n { \n \t\t  tree body = build_loop_body (0, NULL_TREE, 1);\n \t\t  yyval.node = build_new_loop (body);\n \t\t;\n     break;}\n case 281:\n-#line 1512 \"./parse.y\"\n+#line 1516 \"./parse.y\"\n { yyval.node = finish_loop_body (yyvsp[-3].operator.location, yyvsp[-2].node, yyvsp[-5].node, 1); ;\n     break;}\n case 282:\n-#line 1517 \"./parse.y\"\n+#line 1521 \"./parse.y\"\n { yyval.node = finish_for_loop (EXPR_WFL_LINECOL (yyvsp[-4].node), yyvsp[-4].node, yyvsp[-2].node, yyvsp[0].node); ;\n     break;}\n case 283:\n-#line 1519 \"./parse.y\"\n+#line 1523 \"./parse.y\"\n { \n \t\t  yyval.node = finish_for_loop (0, NULL_TREE, yyvsp[-2].node, yyvsp[0].node);\n \t\t  /* We have not condition, so we get rid of the EXIT_EXPR */\n@@ -3783,23 +3785,23 @@ case 283:\n \t\t;\n     break;}\n case 284:\n-#line 1526 \"./parse.y\"\n+#line 1530 \"./parse.y\"\n {yyerror (\"Invalid control expression\"); RECOVER;;\n     break;}\n case 285:\n-#line 1528 \"./parse.y\"\n+#line 1532 \"./parse.y\"\n {yyerror (\"Invalid update expression\"); RECOVER;;\n     break;}\n case 286:\n-#line 1530 \"./parse.y\"\n+#line 1534 \"./parse.y\"\n {yyerror (\"Invalid update expression\"); RECOVER;;\n     break;}\n case 287:\n-#line 1535 \"./parse.y\"\n+#line 1539 \"./parse.y\"\n { yyval.node = finish_for_loop (EXPR_WFL_LINECOL (yyvsp[-4].node), yyvsp[-4].node, yyvsp[-2].node, yyvsp[0].node);;\n     break;}\n case 288:\n-#line 1537 \"./parse.y\"\n+#line 1541 \"./parse.y\"\n { \n \t\t  yyval.node = finish_for_loop (0, NULL_TREE, yyvsp[-2].node, yyvsp[0].node);\n \t\t  /* We have not condition, so we get rid of the EXIT_EXPR */\n@@ -3808,23 +3810,23 @@ case 288:\n \t\t;\n     break;}\n case 289:\n-#line 1547 \"./parse.y\"\n+#line 1551 \"./parse.y\"\n { \n \t\t  /* This scope defined for local variable that may be\n                      defined within the scope of the for loop */\n \t\t  enter_block (); \n \t\t;\n     break;}\n case 290:\n-#line 1553 \"./parse.y\"\n+#line 1557 \"./parse.y\"\n {yyerror (\"'(' expected\"); DRECOVER(for_1);;\n     break;}\n case 291:\n-#line 1555 \"./parse.y\"\n+#line 1559 \"./parse.y\"\n {yyerror (\"Invalid init statement\"); RECOVER;;\n     break;}\n case 292:\n-#line 1560 \"./parse.y\"\n+#line 1564 \"./parse.y\"\n { \n \t\t  /* We now declare the loop body. The loop is\n                      declared as a for loop. */\n@@ -3837,179 +3839,179 @@ case 292:\n \t\t;\n     break;}\n case 293:\n-#line 1572 \"./parse.y\"\n+#line 1576 \"./parse.y\"\n { yyval.node = empty_stmt_node; ;\n     break;}\n case 294:\n-#line 1574 \"./parse.y\"\n+#line 1578 \"./parse.y\"\n { \n \t\t  /* Init statement recorded within the previously\n                      defined block scope */\n \t\t  yyval.node = java_method_add_stmt (current_function_decl, yyvsp[0].node);\n \t\t;\n     break;}\n case 295:\n-#line 1580 \"./parse.y\"\n+#line 1584 \"./parse.y\"\n { \n \t\t  /* Local variable are recorded within the previously\n \t\t     defined block scope */\n \t\t  yyval.node = NULL_TREE;\n \t\t;\n     break;}\n case 296:\n-#line 1586 \"./parse.y\"\n+#line 1590 \"./parse.y\"\n {yyerror (\"';' expected\"); DRECOVER(for_init_1);;\n     break;}\n case 297:\n-#line 1590 \"./parse.y\"\n+#line 1594 \"./parse.y\"\n {yyval.node = empty_stmt_node;;\n     break;}\n case 298:\n-#line 1592 \"./parse.y\"\n+#line 1596 \"./parse.y\"\n { yyval.node = build_debugable_stmt (BUILD_LOCATION (), yyvsp[0].node); ;\n     break;}\n case 299:\n-#line 1597 \"./parse.y\"\n+#line 1601 \"./parse.y\"\n { yyval.node = add_stmt_to_compound (NULL_TREE, NULL_TREE, yyvsp[0].node); ;\n     break;}\n case 300:\n-#line 1599 \"./parse.y\"\n+#line 1603 \"./parse.y\"\n { yyval.node = add_stmt_to_compound (yyvsp[-2].node, NULL_TREE, yyvsp[0].node); ;\n     break;}\n case 301:\n-#line 1601 \"./parse.y\"\n+#line 1605 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 302:\n-#line 1606 \"./parse.y\"\n+#line 1610 \"./parse.y\"\n { yyval.node = build_bc_statement (yyvsp[-1].operator.location, 1, NULL_TREE); ;\n     break;}\n case 303:\n-#line 1608 \"./parse.y\"\n+#line 1612 \"./parse.y\"\n { yyval.node = build_bc_statement (yyvsp[-2].operator.location, 1, yyvsp[-1].node); ;\n     break;}\n case 304:\n-#line 1610 \"./parse.y\"\n+#line 1614 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 305:\n-#line 1612 \"./parse.y\"\n+#line 1616 \"./parse.y\"\n {yyerror (\"';' expected\"); RECOVER;;\n     break;}\n case 306:\n-#line 1617 \"./parse.y\"\n+#line 1621 \"./parse.y\"\n { yyval.node = build_bc_statement (yyvsp[-1].operator.location, 0, NULL_TREE); ;\n     break;}\n case 307:\n-#line 1619 \"./parse.y\"\n+#line 1623 \"./parse.y\"\n { yyval.node = build_bc_statement (yyvsp[-2].operator.location, 0, yyvsp[-1].node); ;\n     break;}\n case 308:\n-#line 1621 \"./parse.y\"\n+#line 1625 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 309:\n-#line 1623 \"./parse.y\"\n+#line 1627 \"./parse.y\"\n {yyerror (\"';' expected\"); RECOVER;;\n     break;}\n case 310:\n-#line 1628 \"./parse.y\"\n+#line 1632 \"./parse.y\"\n { yyval.node = build_return (yyvsp[-1].operator.location, NULL_TREE); ;\n     break;}\n case 311:\n-#line 1630 \"./parse.y\"\n+#line 1634 \"./parse.y\"\n { yyval.node = build_return (yyvsp[-2].operator.location, yyvsp[-1].node); ;\n     break;}\n case 312:\n-#line 1632 \"./parse.y\"\n+#line 1636 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 313:\n-#line 1634 \"./parse.y\"\n+#line 1638 \"./parse.y\"\n {yyerror (\"';' expected\"); RECOVER;;\n     break;}\n case 314:\n-#line 1639 \"./parse.y\"\n+#line 1643 \"./parse.y\"\n { \n \t\t  yyval.node = build1 (THROW_EXPR, NULL_TREE, yyvsp[-1].node);\n \t\t  EXPR_WFL_LINECOL (yyval.node) = yyvsp[-2].operator.location;\n \t\t;\n     break;}\n case 315:\n-#line 1644 \"./parse.y\"\n+#line 1648 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 316:\n-#line 1646 \"./parse.y\"\n+#line 1650 \"./parse.y\"\n {yyerror (\"';' expected\"); RECOVER;;\n     break;}\n case 317:\n-#line 1651 \"./parse.y\"\n+#line 1655 \"./parse.y\"\n { \n \t\t  yyval.node = build (SYNCHRONIZED_EXPR, NULL_TREE, yyvsp[-2].node, yyvsp[0].node);\n \t\t  EXPR_WFL_LINECOL (yyval.node) = \n \t\t    EXPR_WFL_LINECOL (MODIFIER_WFL (SYNCHRONIZED_TK));\n \t\t;\n     break;}\n case 318:\n-#line 1657 \"./parse.y\"\n+#line 1661 \"./parse.y\"\n {yyerror (\"'{' expected\"); RECOVER;;\n     break;}\n case 319:\n-#line 1659 \"./parse.y\"\n+#line 1663 \"./parse.y\"\n {yyerror (\"'(' expected\"); RECOVER;;\n     break;}\n case 320:\n-#line 1661 \"./parse.y\"\n+#line 1665 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 321:\n-#line 1663 \"./parse.y\"\n+#line 1667 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 322:\n-#line 1668 \"./parse.y\"\n+#line 1672 \"./parse.y\"\n {\n \t\t  if ((1 << yyvsp[0].value) != ACC_SYNCHRONIZED)\n \t\t    fatal (\"synchronized was '%d' - yyparse\", (1 << yyvsp[0].value));\n \t\t;\n     break;}\n case 323:\n-#line 1676 \"./parse.y\"\n+#line 1680 \"./parse.y\"\n { yyval.node = build_try_statement (yyvsp[-2].operator.location, yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 324:\n-#line 1678 \"./parse.y\"\n+#line 1682 \"./parse.y\"\n { yyval.node = build_try_finally_statement (yyvsp[-2].operator.location, yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 325:\n-#line 1680 \"./parse.y\"\n+#line 1684 \"./parse.y\"\n { yyval.node = build_try_finally_statement \n \t\t    (yyvsp[-3].operator.location, build_try_statement (yyvsp[-3].operator.location,\n \t\t\t\t\t\t       yyvsp[-2].node, yyvsp[-1].node), yyvsp[0].node);\n \t\t;\n     break;}\n case 326:\n-#line 1685 \"./parse.y\"\n+#line 1689 \"./parse.y\"\n {yyerror (\"'{' expected\"); DRECOVER (try_statement);;\n     break;}\n case 328:\n-#line 1691 \"./parse.y\"\n+#line 1695 \"./parse.y\"\n { \n \t\t  TREE_CHAIN (yyvsp[0].node) = yyvsp[-1].node;\n \t\t  yyval.node = yyvsp[0].node;\n \t\t;\n     break;}\n case 329:\n-#line 1699 \"./parse.y\"\n+#line 1703 \"./parse.y\"\n { \n \t\t  java_method_add_stmt (current_function_decl, yyvsp[0].node);\n \t\t  exit_block ();\n \t\t  yyval.node = yyvsp[-1].node;\n \t\t;\n     break;}\n case 330:\n-#line 1707 \"./parse.y\"\n+#line 1711 \"./parse.y\"\n { \n \t\t  /* We add a block to define a scope for\n \t\t     formal_parameter (CCBP). The formal parameter is\n@@ -4027,184 +4029,184 @@ case 330:\n \t\t;\n     break;}\n case 331:\n-#line 1723 \"./parse.y\"\n+#line 1727 \"./parse.y\"\n {yyerror (\"'(' expected\"); RECOVER;;\n     break;}\n case 332:\n-#line 1725 \"./parse.y\"\n+#line 1729 \"./parse.y\"\n {yyerror (\"Missing term or ')' expected\"); DRECOVER (2);;\n     break;}\n case 333:\n-#line 1727 \"./parse.y\"\n+#line 1731 \"./parse.y\"\n {yyerror (\"')' expected\"); DRECOVER (1);;\n     break;}\n case 334:\n-#line 1732 \"./parse.y\"\n+#line 1736 \"./parse.y\"\n { yyval.node = yyvsp[0].node; ;\n     break;}\n case 335:\n-#line 1734 \"./parse.y\"\n+#line 1738 \"./parse.y\"\n {yyerror (\"'{' expected\"); RECOVER; ;\n     break;}\n case 339:\n-#line 1746 \"./parse.y\"\n+#line 1750 \"./parse.y\"\n { yyval.node = build_this (yyvsp[0].operator.location); ;\n     break;}\n case 340:\n-#line 1748 \"./parse.y\"\n+#line 1752 \"./parse.y\"\n {yyval.node = yyvsp[-1].node;;\n     break;}\n case 345:\n-#line 1757 \"./parse.y\"\n+#line 1761 \"./parse.y\"\n { yyval.node = parse_jdk1_1_error (\"named class literals\"); ;\n     break;}\n case 346:\n-#line 1759 \"./parse.y\"\n+#line 1763 \"./parse.y\"\n { yyval.node = build_class_ref (yyvsp[-2].node); ;\n     break;}\n case 347:\n-#line 1761 \"./parse.y\"\n+#line 1765 \"./parse.y\"\n { yyval.node = build_class_ref (void_type_node); ;\n     break;}\n case 348:\n-#line 1766 \"./parse.y\"\n+#line 1770 \"./parse.y\"\n { yyval.node = parse_jdk1_1_error (\"class literals\"); ;\n     break;}\n case 349:\n-#line 1768 \"./parse.y\"\n+#line 1772 \"./parse.y\"\n {yyerror (\"')' expected\"); RECOVER;;\n     break;}\n case 350:\n-#line 1770 \"./parse.y\"\n+#line 1774 \"./parse.y\"\n {yyerror (\"'class' or 'this' expected\" ); RECOVER;;\n     break;}\n case 351:\n-#line 1772 \"./parse.y\"\n+#line 1776 \"./parse.y\"\n {yyerror (\"'class' expected\" ); RECOVER;;\n     break;}\n case 352:\n-#line 1774 \"./parse.y\"\n+#line 1778 \"./parse.y\"\n {yyerror (\"'class' expected\" ); RECOVER;;\n     break;}\n case 353:\n-#line 1779 \"./parse.y\"\n+#line 1783 \"./parse.y\"\n { yyval.node = build_new_invocation (yyvsp[-3].node, yyvsp[-1].node); ;\n     break;}\n case 354:\n-#line 1781 \"./parse.y\"\n+#line 1785 \"./parse.y\"\n { yyval.node = build_new_invocation (yyvsp[-2].node, NULL_TREE); ;\n     break;}\n case 355:\n-#line 1786 \"./parse.y\"\n+#line 1790 \"./parse.y\"\n { yyval.node = parse_jdk1_1_error (\"inner class instance creation\"); ;\n     break;}\n case 356:\n-#line 1788 \"./parse.y\"\n+#line 1792 \"./parse.y\"\n { yyval.node = parse_jdk1_1_error (\"inner class instance creation\"); ;\n     break;}\n case 361:\n-#line 1797 \"./parse.y\"\n+#line 1801 \"./parse.y\"\n {yyerror (\"'(' expected\"); DRECOVER(new_1);;\n     break;}\n case 362:\n-#line 1799 \"./parse.y\"\n+#line 1803 \"./parse.y\"\n {yyerror (\"'(' expected\"); RECOVER;;\n     break;}\n case 363:\n-#line 1801 \"./parse.y\"\n+#line 1805 \"./parse.y\"\n {yyerror (\"')' or term expected\"); RECOVER;;\n     break;}\n case 364:\n-#line 1803 \"./parse.y\"\n+#line 1807 \"./parse.y\"\n {yyerror (\"')' expected\"); RECOVER;;\n     break;}\n case 365:\n-#line 1805 \"./parse.y\"\n+#line 1809 \"./parse.y\"\n {YYERROR_NOW; yyerror (\"Identifier expected\"); RECOVER;;\n     break;}\n case 366:\n-#line 1807 \"./parse.y\"\n+#line 1811 \"./parse.y\"\n {yyerror (\"'(' expected\"); RECOVER;;\n     break;}\n case 369:\n-#line 1817 \"./parse.y\"\n+#line 1821 \"./parse.y\"\n { \n \t\t  yyval.node = tree_cons (NULL_TREE, yyvsp[0].node, NULL_TREE);\n \t\t  ctxp->formal_parameter_number = 1; \n \t\t;\n     break;}\n case 370:\n-#line 1822 \"./parse.y\"\n+#line 1826 \"./parse.y\"\n {\n \t\t  ctxp->formal_parameter_number += 1;\n \t\t  yyval.node = tree_cons (NULL_TREE, yyvsp[0].node, yyvsp[-2].node);\n \t\t;\n     break;}\n case 371:\n-#line 1827 \"./parse.y\"\n+#line 1831 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 372:\n-#line 1832 \"./parse.y\"\n+#line 1836 \"./parse.y\"\n { yyval.node = build_newarray_node (yyvsp[-1].node, yyvsp[0].node, 0); ;\n     break;}\n case 373:\n-#line 1834 \"./parse.y\"\n+#line 1838 \"./parse.y\"\n { yyval.node = build_newarray_node (yyvsp[-1].node, yyvsp[0].node, 0); ;\n     break;}\n case 374:\n-#line 1836 \"./parse.y\"\n+#line 1840 \"./parse.y\"\n { yyval.node = build_newarray_node (yyvsp[-2].node, yyvsp[-1].node, CURRENT_OSB (ctxp));;\n     break;}\n case 375:\n-#line 1838 \"./parse.y\"\n+#line 1842 \"./parse.y\"\n { yyval.node = build_newarray_node (yyvsp[-2].node, yyvsp[-1].node, CURRENT_OSB (ctxp));;\n     break;}\n case 376:\n-#line 1842 \"./parse.y\"\n+#line 1846 \"./parse.y\"\n { yyval.node = parse_jdk1_1_error (\"anonymous array\"); ;\n     break;}\n case 377:\n-#line 1844 \"./parse.y\"\n+#line 1848 \"./parse.y\"\n { yyval.node = parse_jdk1_1_error (\"anonymous array\"); ;\n     break;}\n case 378:\n-#line 1846 \"./parse.y\"\n+#line 1850 \"./parse.y\"\n {yyerror (\"'[' expected\"); DRECOVER (\"]\");;\n     break;}\n case 379:\n-#line 1848 \"./parse.y\"\n+#line 1852 \"./parse.y\"\n {yyerror (\"']' expected\"); RECOVER;;\n     break;}\n case 380:\n-#line 1853 \"./parse.y\"\n+#line 1857 \"./parse.y\"\n { yyval.node = build_tree_list (NULL_TREE, yyvsp[0].node); ;\n     break;}\n case 381:\n-#line 1855 \"./parse.y\"\n+#line 1859 \"./parse.y\"\n { yyval.node = tree_cons (NULL_TREE, yyvsp[0].node, yyval.node); ;\n     break;}\n case 382:\n-#line 1860 \"./parse.y\"\n+#line 1864 \"./parse.y\"\n { \n \t\t  EXPR_WFL_LINECOL (yyvsp[-1].node) = yyvsp[-2].operator.location;\n \t\t  yyval.node = yyvsp[-1].node;\n \t\t;\n     break;}\n case 383:\n-#line 1865 \"./parse.y\"\n+#line 1869 \"./parse.y\"\n {yyerror (\"']' expected\"); RECOVER;;\n     break;}\n case 384:\n-#line 1867 \"./parse.y\"\n+#line 1871 \"./parse.y\"\n {\n \t\t  yyerror (\"Missing term\");\n \t\t  yyerror (\"']' expected\");\n \t\t  RECOVER;\n \t\t;\n     break;}\n case 385:\n-#line 1876 \"./parse.y\"\n+#line 1880 \"./parse.y\"\n { \n \t\t  int allocate = 0;\n \t\t  /* If not initialized, allocate memory for the osb\n@@ -4232,19 +4234,19 @@ case 385:\n \t\t;\n     break;}\n case 386:\n-#line 1902 \"./parse.y\"\n+#line 1906 \"./parse.y\"\n { CURRENT_OSB (ctxp)++; ;\n     break;}\n case 387:\n-#line 1904 \"./parse.y\"\n+#line 1908 \"./parse.y\"\n { yyerror (\"']' expected\"); RECOVER;;\n     break;}\n case 388:\n-#line 1909 \"./parse.y\"\n+#line 1913 \"./parse.y\"\n { yyval.node = make_qualified_primary (yyvsp[-2].node, yyvsp[0].node, yyvsp[-1].operator.location); ;\n     break;}\n case 389:\n-#line 1913 \"./parse.y\"\n+#line 1917 \"./parse.y\"\n {\n \t\t  tree super_wfl = \n \t\t    build_wfl_node (super_identifier_node);\n@@ -4253,19 +4255,19 @@ case 389:\n \t\t;\n     break;}\n case 390:\n-#line 1920 \"./parse.y\"\n+#line 1924 \"./parse.y\"\n {yyerror (\"Field expected\"); DRECOVER (super_field_acces);;\n     break;}\n case 391:\n-#line 1925 \"./parse.y\"\n+#line 1929 \"./parse.y\"\n { yyval.node = build_method_invocation (yyvsp[-2].node, NULL_TREE); ;\n     break;}\n case 392:\n-#line 1927 \"./parse.y\"\n+#line 1931 \"./parse.y\"\n { yyval.node = build_method_invocation (yyvsp[-3].node, yyvsp[-1].node); ;\n     break;}\n case 393:\n-#line 1929 \"./parse.y\"\n+#line 1933 \"./parse.y\"\n { \n \t\t  if (TREE_CODE (yyvsp[-4].node) == THIS_EXPR)\n \t\t    yyval.node = build_this_super_qualified_invocation \n@@ -4278,7 +4280,7 @@ case 393:\n \t\t;\n     break;}\n case 394:\n-#line 1940 \"./parse.y\"\n+#line 1944 \"./parse.y\"\n { \n \t\t  if (TREE_CODE (yyvsp[-5].node) == THIS_EXPR)\n \t\t    yyval.node = build_this_super_qualified_invocation \n@@ -4291,121 +4293,121 @@ case 394:\n \t\t;\n     break;}\n case 395:\n-#line 1951 \"./parse.y\"\n+#line 1955 \"./parse.y\"\n { \n \t\t  yyval.node = build_this_super_qualified_invocation \n \t\t    (0, yyvsp[-2].node, NULL_TREE, yyvsp[-4].operator.location, yyvsp[-3].operator.location);\n \t\t;\n     break;}\n case 396:\n-#line 1956 \"./parse.y\"\n+#line 1960 \"./parse.y\"\n {\n \t\t  yyval.node = build_this_super_qualified_invocation \n \t\t    (0, yyvsp[-3].node, yyvsp[-1].node, yyvsp[-5].operator.location, yyvsp[-4].operator.location);\n \t\t;\n     break;}\n case 397:\n-#line 1965 \"./parse.y\"\n+#line 1969 \"./parse.y\"\n { yyerror (\"'(' expected\"); DRECOVER (method_invocation); ;\n     break;}\n case 398:\n-#line 1967 \"./parse.y\"\n+#line 1971 \"./parse.y\"\n { yyerror (\"'(' expected\"); DRECOVER (method_invocation); ;\n     break;}\n case 399:\n-#line 1972 \"./parse.y\"\n+#line 1976 \"./parse.y\"\n { yyval.node = build_array_ref (yyvsp[-2].operator.location, yyvsp[-3].node, yyvsp[-1].node); ;\n     break;}\n case 400:\n-#line 1974 \"./parse.y\"\n+#line 1978 \"./parse.y\"\n { yyval.node = build_array_ref (yyvsp[-2].operator.location, yyvsp[-3].node, yyvsp[-1].node); ;\n     break;}\n case 401:\n-#line 1976 \"./parse.y\"\n+#line 1980 \"./parse.y\"\n {\n \t\t  yyerror (\"Missing term and ']' expected\");\n \t\t  DRECOVER(array_access);\n \t\t;\n     break;}\n case 402:\n-#line 1981 \"./parse.y\"\n+#line 1985 \"./parse.y\"\n {\n \t\t  yyerror (\"']' expected\");\n \t\t  DRECOVER(array_access);\n \t\t;\n     break;}\n case 403:\n-#line 1986 \"./parse.y\"\n+#line 1990 \"./parse.y\"\n {\n \t\t  yyerror (\"Missing term and ']' expected\");\n \t\t  DRECOVER(array_access);\n \t\t;\n     break;}\n case 404:\n-#line 1991 \"./parse.y\"\n+#line 1995 \"./parse.y\"\n {\n \t\t  yyerror (\"']' expected\");\n \t\t  DRECOVER(array_access);\n \t\t;\n     break;}\n case 409:\n-#line 2006 \"./parse.y\"\n+#line 2010 \"./parse.y\"\n { yyval.node = build_incdec (yyvsp[0].operator.token, yyvsp[0].operator.location, yyvsp[-1].node, 1); ;\n     break;}\n case 410:\n-#line 2011 \"./parse.y\"\n+#line 2015 \"./parse.y\"\n { yyval.node = build_incdec (yyvsp[0].operator.token, yyvsp[0].operator.location, yyvsp[-1].node, 1); ;\n     break;}\n case 413:\n-#line 2018 \"./parse.y\"\n+#line 2022 \"./parse.y\"\n {yyval.node = build_unaryop (yyvsp[-1].operator.token, yyvsp[-1].operator.location, yyvsp[0].node); ;\n     break;}\n case 414:\n-#line 2020 \"./parse.y\"\n+#line 2024 \"./parse.y\"\n {yyval.node = build_unaryop (yyvsp[-1].operator.token, yyvsp[-1].operator.location, yyvsp[0].node); ;\n     break;}\n case 416:\n-#line 2023 \"./parse.y\"\n+#line 2027 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;\n     break;}\n case 417:\n-#line 2025 \"./parse.y\"\n+#line 2029 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;\n     break;}\n case 418:\n-#line 2030 \"./parse.y\"\n+#line 2034 \"./parse.y\"\n {yyval.node = build_incdec (yyvsp[-1].operator.token, yyvsp[-1].operator.location, yyvsp[0].node, 0); ;\n     break;}\n case 419:\n-#line 2032 \"./parse.y\"\n+#line 2036 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;\n     break;}\n case 420:\n-#line 2037 \"./parse.y\"\n+#line 2041 \"./parse.y\"\n {yyval.node = build_incdec (yyvsp[-1].operator.token, yyvsp[-1].operator.location, yyvsp[0].node, 0); ;\n     break;}\n case 421:\n-#line 2039 \"./parse.y\"\n+#line 2043 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;\n     break;}\n case 423:\n-#line 2045 \"./parse.y\"\n+#line 2049 \"./parse.y\"\n {yyval.node = build_unaryop (yyvsp[-1].operator.token, yyvsp[-1].operator.location, yyvsp[0].node); ;\n     break;}\n case 424:\n-#line 2047 \"./parse.y\"\n+#line 2051 \"./parse.y\"\n {yyval.node = build_unaryop (yyvsp[-1].operator.token, yyvsp[-1].operator.location, yyvsp[0].node); ;\n     break;}\n case 426:\n-#line 2050 \"./parse.y\"\n+#line 2054 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;\n     break;}\n case 427:\n-#line 2052 \"./parse.y\"\n+#line 2056 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;\n     break;}\n case 428:\n-#line 2057 \"./parse.y\"\n+#line 2061 \"./parse.y\"\n { \n \t\t  tree type = yyvsp[-3].node;\n \t\t  while (CURRENT_OSB (ctxp)--)\n@@ -4415,15 +4417,15 @@ case 428:\n \t\t;\n     break;}\n case 429:\n-#line 2065 \"./parse.y\"\n+#line 2069 \"./parse.y\"\n { yyval.node = build_cast (yyvsp[-3].operator.location, yyvsp[-2].node, yyvsp[0].node); ;\n     break;}\n case 430:\n-#line 2067 \"./parse.y\"\n+#line 2071 \"./parse.y\"\n { yyval.node = build_cast (yyvsp[-3].operator.location, yyvsp[-2].node, yyvsp[0].node); ;\n     break;}\n case 431:\n-#line 2069 \"./parse.y\"\n+#line 2073 \"./parse.y\"\n { \n \t\t  const char *ptr;\n \t\t  while (CURRENT_OSB (ctxp)--)\n@@ -4438,275 +4440,275 @@ case 431:\n \t\t;\n     break;}\n case 432:\n-#line 2082 \"./parse.y\"\n+#line 2086 \"./parse.y\"\n {yyerror (\"']' expected, invalid type expression\");;\n     break;}\n case 433:\n-#line 2084 \"./parse.y\"\n+#line 2088 \"./parse.y\"\n {\n \t          if (ctxp->prevent_ese != lineno)\n \t\t    yyerror (\"Invalid type expression\"); RECOVER;\n \t\t  RECOVER;\n \t\t;\n     break;}\n case 434:\n-#line 2090 \"./parse.y\"\n+#line 2094 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 435:\n-#line 2092 \"./parse.y\"\n+#line 2096 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 436:\n-#line 2094 \"./parse.y\"\n+#line 2098 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 438:\n-#line 2100 \"./parse.y\"\n+#line 2104 \"./parse.y\"\n { \n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), \n \t\t\t\t    yyvsp[-1].operator.location, yyvsp[-2].node, yyvsp[0].node);\n \t\t;\n     break;}\n case 439:\n-#line 2105 \"./parse.y\"\n+#line 2109 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 440:\n-#line 2110 \"./parse.y\"\n+#line 2114 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 441:\n-#line 2115 \"./parse.y\"\n+#line 2119 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 442:\n-#line 2117 \"./parse.y\"\n+#line 2121 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 443:\n-#line 2119 \"./parse.y\"\n+#line 2123 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 445:\n-#line 2125 \"./parse.y\"\n+#line 2129 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 446:\n-#line 2130 \"./parse.y\"\n+#line 2134 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 447:\n-#line 2135 \"./parse.y\"\n+#line 2139 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 448:\n-#line 2137 \"./parse.y\"\n+#line 2141 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 450:\n-#line 2143 \"./parse.y\"\n+#line 2147 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 451:\n-#line 2148 \"./parse.y\"\n+#line 2152 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 452:\n-#line 2153 \"./parse.y\"\n+#line 2157 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 453:\n-#line 2158 \"./parse.y\"\n+#line 2162 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 454:\n-#line 2160 \"./parse.y\"\n+#line 2164 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 455:\n-#line 2162 \"./parse.y\"\n+#line 2166 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 457:\n-#line 2168 \"./parse.y\"\n+#line 2172 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 458:\n-#line 2173 \"./parse.y\"\n+#line 2177 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 459:\n-#line 2178 \"./parse.y\"\n+#line 2182 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 460:\n-#line 2183 \"./parse.y\"\n+#line 2187 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 461:\n-#line 2188 \"./parse.y\"\n+#line 2192 \"./parse.y\"\n { yyval.node = build_binop (INSTANCEOF_EXPR, yyvsp[-1].operator.location, yyvsp[-2].node, yyvsp[0].node); ;\n     break;}\n case 462:\n-#line 2190 \"./parse.y\"\n+#line 2194 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 463:\n-#line 2192 \"./parse.y\"\n+#line 2196 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 464:\n-#line 2194 \"./parse.y\"\n+#line 2198 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 465:\n-#line 2196 \"./parse.y\"\n+#line 2200 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 466:\n-#line 2198 \"./parse.y\"\n+#line 2202 \"./parse.y\"\n {yyerror (\"Invalid reference type\"); RECOVER;;\n     break;}\n case 468:\n-#line 2204 \"./parse.y\"\n+#line 2208 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 469:\n-#line 2209 \"./parse.y\"\n+#line 2213 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 470:\n-#line 2214 \"./parse.y\"\n+#line 2218 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 471:\n-#line 2216 \"./parse.y\"\n+#line 2220 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 473:\n-#line 2222 \"./parse.y\"\n+#line 2226 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 474:\n-#line 2227 \"./parse.y\"\n+#line 2231 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 476:\n-#line 2233 \"./parse.y\"\n+#line 2237 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 477:\n-#line 2238 \"./parse.y\"\n+#line 2242 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 479:\n-#line 2244 \"./parse.y\"\n+#line 2248 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 480:\n-#line 2249 \"./parse.y\"\n+#line 2253 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 482:\n-#line 2255 \"./parse.y\"\n+#line 2259 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 483:\n-#line 2260 \"./parse.y\"\n+#line 2264 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 485:\n-#line 2266 \"./parse.y\"\n+#line 2270 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 486:\n-#line 2271 \"./parse.y\"\n+#line 2275 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 488:\n-#line 2277 \"./parse.y\"\n+#line 2281 \"./parse.y\"\n {\n \t\t  yyval.node = build (CONDITIONAL_EXPR, NULL_TREE, yyvsp[-4].node, yyvsp[-2].node, yyvsp[0].node);\n \t\t  EXPR_WFL_LINECOL (yyval.node) = yyvsp[-3].operator.location;\n \t\t;\n     break;}\n case 489:\n-#line 2282 \"./parse.y\"\n+#line 2286 \"./parse.y\"\n {\n \t\t  YYERROR_NOW;\n \t\t  yyerror (\"Missing term\");\n \t\t  DRECOVER (1);\n \t\t;\n     break;}\n case 490:\n-#line 2288 \"./parse.y\"\n+#line 2292 \"./parse.y\"\n {yyerror (\"Missing term\"); DRECOVER (2);;\n     break;}\n case 491:\n-#line 2290 \"./parse.y\"\n+#line 2294 \"./parse.y\"\n {yyerror (\"Missing term\"); DRECOVER (3);;\n     break;}\n case 494:\n-#line 2300 \"./parse.y\"\n+#line 2304 \"./parse.y\"\n { yyval.node = build_assignment (yyvsp[-1].operator.token, yyvsp[-1].operator.location, yyvsp[-2].node, yyvsp[0].node); ;\n     break;}\n case 495:\n-#line 2302 \"./parse.y\"\n+#line 2306 \"./parse.y\"\n {\n \t\t  if (ctxp->prevent_ese != lineno)\n \t\t    yyerror (\"Missing term\");\n@@ -4715,7 +4717,7 @@ case 495:\n     break;}\n }\n    /* the action file gets copied in in place of this dollarsign */\n-#line 498 \"/usr/share/misc/bison.simple\"\n+#line 498 \"/usr/local/gnu/share/bison.simple\"\n \f\n   yyvsp -= yylen;\n   yyssp -= yylen;\n@@ -4911,7 +4913,7 @@ case 495:\n   yystate = yyn;\n   goto yynewstate;\n }\n-#line 2328 \"./parse.y\"\n+#line 2332 \"./parse.y\"\n \n \f\n \n@@ -9514,7 +9516,8 @@ resolve_qualified_expression_name (wfl, found_decl, where_found, type_found)\n /* 6.6 Qualified name and access control. Returns 1 if MEMBER (a decl)\n    can't be accessed from REFERENCE (a record type). */\n \n-int not_accessible_p (reference, member, from_super)\n+static int\n+not_accessible_p (reference, member, from_super)\n      tree reference, member;\n      int from_super;\n {"}, {"sha": "cf292192b1fc472094e1ce1214d11fcff805eb5d", "filename": "gcc/java/parse.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be245ac0a0e683280ace5512fff65d06ef6087bf/gcc%2Fjava%2Fparse.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be245ac0a0e683280ace5512fff65d06ef6087bf/gcc%2Fjava%2Fparse.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fparse.h?ref=be245ac0a0e683280ace5512fff65d06ef6087bf", "patch": "@@ -673,7 +673,6 @@ extern void java_parser_context_save_global PROTO ((void));\n extern void java_parser_context_restore_global PROTO ((void));\n int yyparse PROTO ((void));\n extern int java_parse PROTO ((void));\n-int yylex ();\n void yyerror PROTO ((const char *));\n extern void java_expand_classes PROTO ((void));\n #endif"}, {"sha": "a758f759d7c665fa00a9332119424724d0d28b34", "filename": "gcc/java/parse.y", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be245ac0a0e683280ace5512fff65d06ef6087bf/gcc%2Fjava%2Fparse.y", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be245ac0a0e683280ace5512fff65d06ef6087bf/gcc%2Fjava%2Fparse.y", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fparse.y?ref=be245ac0a0e683280ace5512fff65d06ef6087bf", "patch": "@@ -258,6 +258,10 @@ static char * operator_string PROTO ((tree));\n static tree do_merge_string_cste PROTO ((tree, const char *, int, int));\n static tree merge_string_cste PROTO ((tree, tree, int));\n static tree java_refold PROTO ((tree));\n+static int java_decl_equiv PROTO ((tree, tree));\n+static int binop_compound_p PROTO ((enum tree_code));\n+static tree search_loop PROTO ((tree));\n+static int labeled_block_contains_loop_p PROTO ((tree, tree));\n \n /* Number of error found so far. */\n int java_error_count; \n@@ -6927,7 +6931,8 @@ resolve_qualified_expression_name (wfl, found_decl, where_found, type_found)\n /* 6.6 Qualified name and access control. Returns 1 if MEMBER (a decl)\n    can't be accessed from REFERENCE (a record type). */\n \n-int not_accessible_p (reference, member, from_super)\n+static int\n+not_accessible_p (reference, member, from_super)\n      tree reference, member;\n      int from_super;\n {"}, {"sha": "d665a16418a0ba2787da930ab059d28a46111ee8", "filename": "gcc/java/verify.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be245ac0a0e683280ace5512fff65d06ef6087bf/gcc%2Fjava%2Fverify.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be245ac0a0e683280ace5512fff65d06ef6087bf/gcc%2Fjava%2Fverify.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fverify.c?ref=be245ac0a0e683280ace5512fff65d06ef6087bf", "patch": "@@ -316,8 +316,8 @@ start_pc_cmp (xp, yp)\n      const PTR xp;\n      const PTR yp;\n {\n-  struct pc_index *x = (struct pc_index *) xp;\n-  struct pc_index *y = (struct pc_index *) yp;\n+  const struct pc_index *x = (const struct pc_index *) xp;\n+  const struct pc_index *y = (const struct pc_index *) yp;\n   return x->start_pc - y->start_pc;\n }\n "}]}