{"sha": "e9329eb5869ee50d448ddd40489314e47363c02a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTkzMjllYjU4NjllZTUwZDQ0OGRkZDQwNDg5MzE0ZTQ3MzYzYzAyYQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2015-04-11T17:32:54Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2015-04-11T17:32:54Z"}, "message": "re PR middle-end/65735 (ICE (in duplicate_thread_path, at tree-ssa-threadupdate.c))\n\n\tPR tree-optimization/65735\n\t* tree-ssa-threadedge.c (fsm_find_control_statement_thread_paths):\n\tRemove visited_phis argument, add visited_bbs, avoid recursing into the\n\tsame bb rather than just into the same phi node.\n\t(thread_through_normal_block): Adjust caller.\n\n\t* gcc.c-torture/compile/pr65735.c: New test.\n\nFrom-SVN: r222011", "tree": {"sha": "d0aea9c90c9f68ddc9d3b8158f8c669005edd1b5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d0aea9c90c9f68ddc9d3b8158f8c669005edd1b5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e9329eb5869ee50d448ddd40489314e47363c02a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e9329eb5869ee50d448ddd40489314e47363c02a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e9329eb5869ee50d448ddd40489314e47363c02a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e9329eb5869ee50d448ddd40489314e47363c02a/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "bc7e7ed3e350ea14c1c4e6432c8c1fb19b3c0668", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bc7e7ed3e350ea14c1c4e6432c8c1fb19b3c0668", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bc7e7ed3e350ea14c1c4e6432c8c1fb19b3c0668"}], "stats": {"total": 46, "additions": 40, "deletions": 6}, "files": [{"sha": "ce59ef8087b61274ba6a97e2f20cc60dd32f0ff3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9329eb5869ee50d448ddd40489314e47363c02a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9329eb5869ee50d448ddd40489314e47363c02a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e9329eb5869ee50d448ddd40489314e47363c02a", "patch": "@@ -1,3 +1,11 @@\n+2015-04-11  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/65735\n+\t* tree-ssa-threadedge.c (fsm_find_control_statement_thread_paths):\n+\tRemove visited_phis argument, add visited_bbs, avoid recursing into the\n+\tsame bb rather than just into the same phi node.\n+\t(thread_through_normal_block): Adjust caller.\n+\n 2015-04-11  Gerald Pfeifer  <gerald@pfeifer.com>\n \n \t* doc/contrib.texi (Contributors): Add Ira Rosen."}, {"sha": "75c3b44cf26c72bc0a1c9e3b4954d20d0f1af56e", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9329eb5869ee50d448ddd40489314e47363c02a/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9329eb5869ee50d448ddd40489314e47363c02a/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=e9329eb5869ee50d448ddd40489314e47363c02a", "patch": "@@ -1,3 +1,8 @@\n+2015-04-11  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/65735\n+\t* gcc.c-torture/compile/pr65735.c: New test.\n+\n 2015-04-11  H.J. Lu  <hongjiu.lu@intel.com>\n \n \tPR middle-end/65554"}, {"sha": "c30de8ea3989844200b96b5bf01dc0594f24de94", "filename": "gcc/testsuite/gcc.c-torture/compile/pr65735.c", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9329eb5869ee50d448ddd40489314e47363c02a/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr65735.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9329eb5869ee50d448ddd40489314e47363c02a/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr65735.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr65735.c?ref=e9329eb5869ee50d448ddd40489314e47363c02a", "patch": "@@ -0,0 +1,21 @@\n+/* PR tree-optimization/65735 */\n+\n+int foo (void);\n+\n+void\n+bar (int a, int b, int c)\n+{\n+  while (!a)\n+    {\n+      c = foo ();\n+      if (c == 7)\n+\tc = b;\n+      switch (c)\n+\t{\n+\tcase 1:\n+\t  a = b++;\n+\t  if (b)\n+\t    b = 1;\n+\t}\n+    }\n+}"}, {"sha": "90c1e2af94ac12d251c3a88d4a48a552a2121a47", "filename": "gcc/tree-ssa-threadedge.c", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9329eb5869ee50d448ddd40489314e47363c02a/gcc%2Ftree-ssa-threadedge.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9329eb5869ee50d448ddd40489314e47363c02a/gcc%2Ftree-ssa-threadedge.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-threadedge.c?ref=e9329eb5869ee50d448ddd40489314e47363c02a", "patch": "@@ -1015,7 +1015,7 @@ static int max_threaded_paths;\n \n static void\n fsm_find_control_statement_thread_paths (tree expr,\n-\t\t\t\t\t hash_set<gimple> *visited_phis,\n+\t\t\t\t\t hash_set<basic_block> *visited_bbs,\n \t\t\t\t\t vec<basic_block, va_gc> *&path,\n \t\t\t\t\t bool seen_loop_phi)\n {\n@@ -1034,7 +1034,7 @@ fsm_find_control_statement_thread_paths (tree expr,\n     return;\n \n   /* Avoid infinite recursion.  */\n-  if (visited_phis->add (def_stmt))\n+  if (visited_bbs->add (var_bb))\n     return;\n \n   gphi *phi = as_a <gphi *> (def_stmt);\n@@ -1109,7 +1109,7 @@ fsm_find_control_statement_thread_paths (tree expr,\n \t{\n \t  vec_safe_push (path, bbi);\n \t  /* Recursively follow SSA_NAMEs looking for a constant definition.  */\n-\t  fsm_find_control_statement_thread_paths (arg, visited_phis, path,\n+\t  fsm_find_control_statement_thread_paths (arg, visited_bbs, path,\n \t\t\t\t\t\t   seen_loop_phi);\n \n \t  path->pop ();\n@@ -1391,13 +1391,13 @@ thread_through_normal_block (edge e,\n       vec<basic_block, va_gc> *bb_path;\n       vec_alloc (bb_path, n_basic_blocks_for_fn (cfun));\n       vec_safe_push (bb_path, e->dest);\n-      hash_set<gimple> *visited_phis = new hash_set<gimple>;\n+      hash_set<basic_block> *visited_bbs = new hash_set<basic_block>;\n \n       max_threaded_paths = PARAM_VALUE (PARAM_MAX_FSM_THREAD_PATHS);\n-      fsm_find_control_statement_thread_paths (cond, visited_phis, bb_path,\n+      fsm_find_control_statement_thread_paths (cond, visited_bbs, bb_path,\n \t\t\t\t\t       false);\n \n-      delete visited_phis;\n+      delete visited_bbs;\n       vec_free (bb_path);\n     }\n   return 0;"}]}