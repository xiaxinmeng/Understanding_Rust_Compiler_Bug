{"sha": "419ba5b941e67a85b7085fee91a20e4a93887af6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDE5YmE1Yjk0MWU2N2E4NWI3MDg1ZmVlOTFhMjBlNGE5Mzg4N2FmNg==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2019-05-21T07:00:45Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2019-05-21T07:00:45Z"}, "message": "c-ada-spec.h (enum cpp_operation): Add IS_ASSIGNMENT_OPERATOR.\n\nc-family/\n\t* c-ada-spec.h (enum cpp_operation): Add IS_ASSIGNMENT_OPERATOR.\n\t* c-ada-spec.c (print_assignment_operator): New function.\n\t(dump_ada_declaration) <FUNCTION_DECL>: Call it do dump explicit copy\n\tassignment operators declared as methods and filter out the others.\ncp/\n\t* decl2.c (cpp_check) <IS_ASSIGNMENT_OPERATOR>: New case.\n\nFrom-SVN: r271457", "tree": {"sha": "d30a1288d57e6cdbaf961ba63a2c17cd50d768d2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d30a1288d57e6cdbaf961ba63a2c17cd50d768d2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/419ba5b941e67a85b7085fee91a20e4a93887af6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/419ba5b941e67a85b7085fee91a20e4a93887af6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/419ba5b941e67a85b7085fee91a20e4a93887af6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/419ba5b941e67a85b7085fee91a20e4a93887af6/comments", "author": null, "committer": null, "parents": [{"sha": "eaa6a39d4288fef9c322e8fe6c45e621b22cdf3f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eaa6a39d4288fef9c322e8fe6c45e621b22cdf3f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eaa6a39d4288fef9c322e8fe6c45e621b22cdf3f"}], "stats": {"total": 40, "additions": 38, "deletions": 2}, "files": [{"sha": "e2a75de1f632d84ea676571937cf94d9e705a5fc", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/419ba5b941e67a85b7085fee91a20e4a93887af6/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/419ba5b941e67a85b7085fee91a20e4a93887af6/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=419ba5b941e67a85b7085fee91a20e4a93887af6", "patch": "@@ -1,7 +1,7 @@\n 2019-05-16  Martin Sebor  <msebor@redhat.com>\n \n-        * gcc-interface/trans.c (check_inlining_for_nested_subprog): Quote\n-        reserved names.\n+\t* gcc-interface/trans.c (check_inlining_for_nested_subprog): Quote\n+\treserved names.\n \n 2019-05-08  Arnaud Charlet  <charlet@adacore.com>\n "}, {"sha": "71cb361b8d6cb09922c7f81a2998720740c9b96a", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/419ba5b941e67a85b7085fee91a20e4a93887af6/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/419ba5b941e67a85b7085fee91a20e4a93887af6/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=419ba5b941e67a85b7085fee91a20e4a93887af6", "patch": "@@ -1,3 +1,10 @@\n+2019-05-21  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* c-ada-spec.h (enum cpp_operation): Add IS_ASSIGNMENT_OPERATOR.\n+\t* c-ada-spec.c (print_assignment_operator): New function.\n+\t(dump_ada_declaration) <FUNCTION_DECL>: Call it do dump explicit copy\n+\tassignment operators declared as methods and filter out the others.\n+\n 2019-05-17  Thomas Schwinge  <thomas@codesourcery.com>\n \n \tPR c/89433"}, {"sha": "dc3a044fd90b4ff45d93ab50629c6c473cb0bd41", "filename": "gcc/c-family/c-ada-spec.c", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/419ba5b941e67a85b7085fee91a20e4a93887af6/gcc%2Fc-family%2Fc-ada-spec.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/419ba5b941e67a85b7085fee91a20e4a93887af6/gcc%2Fc-family%2Fc-ada-spec.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-ada-spec.c?ref=419ba5b941e67a85b7085fee91a20e4a93887af6", "patch": "@@ -2681,6 +2681,17 @@ print_destructor (pretty_printer *buffer, tree t, tree type)\n   pp_ada_tree_identifier (buffer, decl_name, t, false);\n }\n \n+/* Dump in BUFFER assignment operator spec corresponding to T.  */\n+\n+static void\n+print_assignment_operator (pretty_printer *buffer, tree t, tree type)\n+{\n+  tree decl_name = DECL_NAME (TYPE_NAME (type));\n+\n+  pp_string (buffer, \"Assign_\");\n+  pp_ada_tree_identifier (buffer, decl_name, t, false);\n+}\n+\n /* Return the name of type T.  */\n \n static const char *\n@@ -2920,6 +2931,7 @@ dump_ada_declaration (pretty_printer *buffer, tree t, tree type, int spc)\n       bool is_method = TREE_CODE (TREE_TYPE (t)) == METHOD_TYPE;\n       tree decl_name = DECL_NAME (t);\n       bool is_abstract = false;\n+      bool is_assignment_operator = false;\n       bool is_constructor = false;\n       bool is_destructor = false;\n       bool is_copy_constructor = false;\n@@ -2931,6 +2943,7 @@ dump_ada_declaration (pretty_printer *buffer, tree t, tree type, int spc)\n       if (cpp_check)\n \t{\n \t  is_abstract = cpp_check (t, IS_ABSTRACT);\n+\t  is_assignment_operator = cpp_check (t, IS_ASSIGNMENT_OPERATOR);\n \t  is_constructor = cpp_check (t, IS_CONSTRUCTOR);\n \t  is_destructor = cpp_check (t, IS_DESTRUCTOR);\n \t  is_copy_constructor = cpp_check (t, IS_COPY_CONSTRUCTOR);\n@@ -2955,6 +2968,13 @@ dump_ada_declaration (pretty_printer *buffer, tree t, tree type, int spc)\n \t    return 0;\n \t}\n \n+      else if (is_assignment_operator)\n+\t{\n+\t  /* ??? Skip implicit or non-method assignment operators for now.  */\n+\t  if (DECL_ARTIFICIAL (t) || !is_method)\n+\t    return 0;\n+\t}\n+\n       /* If this function has an entry in the vtable, we cannot omit it.  */\n       else if (!DECL_VINDEX (t) && *IDENTIFIER_POINTER (decl_name) == '_')\n \t{\n@@ -2977,6 +2997,8 @@ dump_ada_declaration (pretty_printer *buffer, tree t, tree type, int spc)\n \tprint_constructor (buffer, t, type);\n       else if (is_destructor)\n \tprint_destructor (buffer, t, type);\n+      else if (is_assignment_operator)\n+\tprint_assignment_operator (buffer, t, type);\n       else\n \tdump_ada_decl_name (buffer, t, false);\n "}, {"sha": "f9ea1bcc698f7a4f3a5ac87e7fe173fc07845454", "filename": "gcc/c-family/c-ada-spec.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/419ba5b941e67a85b7085fee91a20e4a93887af6/gcc%2Fc-family%2Fc-ada-spec.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/419ba5b941e67a85b7085fee91a20e4a93887af6/gcc%2Fc-family%2Fc-ada-spec.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-ada-spec.h?ref=419ba5b941e67a85b7085fee91a20e4a93887af6", "patch": "@@ -27,6 +27,7 @@ along with GCC; see the file COPYING3.  If not see\n enum cpp_operation {\n   HAS_DEPENDENT_TEMPLATE_ARGS,\n   IS_ABSTRACT,\n+  IS_ASSIGNMENT_OPERATOR,\n   IS_CONSTRUCTOR,\n   IS_DESTRUCTOR,\n   IS_COPY_CONSTRUCTOR,"}, {"sha": "f895f139ca7857d437d3b71881d7e44f9ce6f5e0", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/419ba5b941e67a85b7085fee91a20e4a93887af6/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/419ba5b941e67a85b7085fee91a20e4a93887af6/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=419ba5b941e67a85b7085fee91a20e4a93887af6", "patch": "@@ -1,3 +1,7 @@\n+2019-05-21  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* decl2.c (cpp_check) <IS_ASSIGNMENT_OPERATOR>: New case.\n+\n 2019-05-20  Marek Polacek  <polacek@redhat.com>\n \n \tCWG 2094 - volatile scalars are trivially copyable."}, {"sha": "338db4ab6de114a07d898d1b91ab53148c35c7d2", "filename": "gcc/cp/decl2.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/419ba5b941e67a85b7085fee91a20e4a93887af6/gcc%2Fcp%2Fdecl2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/419ba5b941e67a85b7085fee91a20e4a93887af6/gcc%2Fcp%2Fdecl2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl2.c?ref=419ba5b941e67a85b7085fee91a20e4a93887af6", "patch": "@@ -4249,6 +4249,8 @@ cpp_check (tree t, cpp_operation op)\n \t}\n       case IS_ABSTRACT:\n \treturn DECL_PURE_VIRTUAL_P (t);\n+      case IS_ASSIGNMENT_OPERATOR:\n+\treturn DECL_ASSIGNMENT_OPERATOR_P (t);\n       case IS_CONSTRUCTOR:\n \treturn DECL_CONSTRUCTOR_P (t);\n       case IS_DESTRUCTOR:"}]}