{"sha": "345f13fecf607a6f0eabe77734139cc25b6aa56b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzQ1ZjEzZmVjZjYwN2E2ZjBlYWJlNzc3MzQxMzljYzI1YjZhYTU2Yg==", "commit": {"author": {"name": "Jan Beulich", "email": "jbeulich@novell.com", "date": "2006-01-10T07:18:15Z"}, "committer": {"name": "Jan Beulich", "email": "jbeulich@gcc.gnu.org", "date": "2006-01-10T07:18:15Z"}, "message": "netware.h (TARGET_SUBTARGET_DEFAULT): Include MASK_ALIGN_DOUBLE.\n\ngcc/\n2006-01-10  Jan Beulich  <jbeulich@novell.com>\n\n\t* config/i386/netware.h (TARGET_SUBTARGET_DEFAULT): Include\n\tMASK_ALIGN_DOUBLE.\n\t* config/i386/nwld.h (LINK_SPEC): Add --extensions:GNU option.\n\t* config/i386/t-nwld (SHLIB_LINK): Insert spaces between expr\n\targuments.\n\ngcc/testsuite/\n2006-01-10  Jan Beulich  <jbeulich@novell.com>\n\n\t* lib/target-supports.exp (check_visibility_available): Simplify test\n\tfor *-*-netware*.\n\t(check_profiling_available): Fail for *-*-netware*.\n\t* g++.old-deja/g++.law/profile1.C: Remove dg-bogus for *-*-netware*.\n\t* gcc.dg/20021014-1.c: Likewise.\n\t* gcc.dg/nest.c: Likewise.\n\nFrom-SVN: r109536", "tree": {"sha": "fa1595bec79eaecce5a8cb9ad505bf25f1a0edef", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fa1595bec79eaecce5a8cb9ad505bf25f1a0edef"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/345f13fecf607a6f0eabe77734139cc25b6aa56b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/345f13fecf607a6f0eabe77734139cc25b6aa56b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/345f13fecf607a6f0eabe77734139cc25b6aa56b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/345f13fecf607a6f0eabe77734139cc25b6aa56b/comments", "author": null, "committer": null, "parents": [{"sha": "eeab437d0562a90afe71a6204f1d03d6586e3559", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eeab437d0562a90afe71a6204f1d03d6586e3559", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eeab437d0562a90afe71a6204f1d03d6586e3559"}], "stats": {"total": 36, "additions": 28, "deletions": 8}, "files": [{"sha": "a12ae46fdb9f7a1bd206538394487e1dc4cafb49", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/345f13fecf607a6f0eabe77734139cc25b6aa56b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/345f13fecf607a6f0eabe77734139cc25b6aa56b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=345f13fecf607a6f0eabe77734139cc25b6aa56b", "patch": "@@ -1,3 +1,11 @@\n+2006-01-10  Jan Beulich  <jbeulich@novell.com>\n+\n+\t* config/i386/netware.h (TARGET_SUBTARGET_DEFAULT): Include\n+\tMASK_ALIGN_DOUBLE.\n+\t* config/i386/nwld.h (LINK_SPEC): Add --extensions:GNU option.\n+\t* config/i386/t-nwld (SHLIB_LINK): Insert spaces between expr\n+\targuments.\n+\n 2006-01-10  Ben Elliston  <bje@au.ibm.com>\n \n \t* config/rs6000/predicates.md (easy_fp_constant): Discount decimal"}, {"sha": "3630765c7aa3c4a56a19e0cd3be79b084d9141b7", "filename": "gcc/config/i386/netware.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/345f13fecf607a6f0eabe77734139cc25b6aa56b/gcc%2Fconfig%2Fi386%2Fnetware.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/345f13fecf607a6f0eabe77734139cc25b6aa56b/gcc%2Fconfig%2Fi386%2Fnetware.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fnetware.h?ref=345f13fecf607a6f0eabe77734139cc25b6aa56b", "patch": "@@ -71,7 +71,7 @@ Boston, MA 02110-1301, USA.  */\n    returns float values in the 387, and uses MSVC bit field layout. */\n #undef TARGET_SUBTARGET_DEFAULT\n #define TARGET_SUBTARGET_DEFAULT (MASK_80387 | MASK_IEEE_FP | \\\n-\tMASK_FLOAT_RETURNS | MASK_MS_BITFIELD_LAYOUT)\n+\tMASK_FLOAT_RETURNS | MASK_ALIGN_DOUBLE | MASK_MS_BITFIELD_LAYOUT)\n \n #undef MATH_LIBRARY\n #define MATH_LIBRARY \"\""}, {"sha": "fe132afbf8401085f0b1a47a3b78e671d0fcb108", "filename": "gcc/config/i386/nwld.h", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/345f13fecf607a6f0eabe77734139cc25b6aa56b/gcc%2Fconfig%2Fi386%2Fnwld.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/345f13fecf607a6f0eabe77734139cc25b6aa56b/gcc%2Fconfig%2Fi386%2Fnwld.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fnwld.h?ref=345f13fecf607a6f0eabe77734139cc25b6aa56b", "patch": "@@ -31,7 +31,8 @@ Boston, MA 02110-1301, USA.  */\n #define LINKER_NAME \"nwld\"\n \n #undef  LINK_SPEC\n-#define LINK_SPEC \"--format nlm %{static:%{!nostdlib:%{!nodefaultlib:%eStatic linking is not supported.\\n}}}\"\n+#define LINK_SPEC \"--format:NLM --extensions:GNU\" \\\n+\t\" %{static:%{!nostdlib:%{!nodefaultlib:%eStatic linking is not supported.\\n}}}\"\n \n #undef  LINK_GCC_C_SEQUENCE_SPEC\n #define LINK_GCC_C_SEQUENCE_SPEC \"%L %G\""}, {"sha": "6f6905541ecc674f6d2abbfe37fd44cd5c0cc722", "filename": "gcc/config/i386/t-nwld", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/345f13fecf607a6f0eabe77734139cc25b6aa56b/gcc%2Fconfig%2Fi386%2Ft-nwld", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/345f13fecf607a6f0eabe77734139cc25b6aa56b/gcc%2Fconfig%2Fi386%2Ft-nwld", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Ft-nwld?ref=345f13fecf607a6f0eabe77734139cc25b6aa56b", "patch": "@@ -40,7 +40,7 @@ SHLIB_LINK = set -e; \\\n \techo \"name $(SHLIB_NAME)\" >>@shlib_base_name@.def; \\\n \techo \"version $(version)\" | sed \"s!\\.!,!g\" >>@shlib_base_name@.def; \\\n \ttouch libgcc/build; \\\n-\techo \"build $$$$(expr $$$$(<libgcc/build)+0)\" >>@shlib_base_name@.def; \\\n+\techo \"build $$$$(expr $$$$(<libgcc/build) + 0)\" >>@shlib_base_name@.def; \\\n \techo \"export @$(SHLIB_MAP)\" >>@shlib_base_name@.def; \\\n \tif mpkxdc -n -p @shlib_base_name@.xdc; \\\n \t\tthen echo \"xdcdata @shlib_base_name@.xdc\" >>@shlib_base_name@.def; \\\n@@ -51,7 +51,7 @@ SHLIB_LINK = set -e; \\\n \t\t-Wl,--Map,--map-info,full,--strip-all,--def-file,@shlib_base_name@.def; \\\n \trm -f @shlib_base_name@.imp; $(LN_S) $(SHLIB_MAP) @shlib_base_name@.imp; \\\n \trm -f libgcc.imp; $(LN_S) @shlib_base_name@.imp libgcc.imp; \\\n-\texpr $$$$(<libgcc/build)+1 >libgcc/build\n+\texpr $$$$(<libgcc/build) + 1 >libgcc/build\n \n # $(slibdir) double quoted to protect it from expansion while building\n # libgcc.mk.  We want this delayed until actual install time."}, {"sha": "1fa45223f151fba9a33bd68c2a90441ea42a43ab", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/345f13fecf607a6f0eabe77734139cc25b6aa56b/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/345f13fecf607a6f0eabe77734139cc25b6aa56b/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=345f13fecf607a6f0eabe77734139cc25b6aa56b", "patch": "@@ -1,3 +1,12 @@\n+2006-01-10  Jan Beulich  <jbeulich@novell.com>\n+\n+\t* lib/target-supports.exp (check_visibility_available): Simplify test\n+\tfor *-*-netware*.\n+\t(check_profiling_available): Fail for *-*-netware*.\n+\t* g++.old-deja/g++.law/profile1.C: Remove dg-bogus for *-*-netware*.\n+\t* gcc.dg/20021014-1.c: Likewise.\n+\t* gcc.dg/nest.c: Likewise.\n+\n 2006-01-09  Andrew Pinski  <pinskia@physics.uc.edu>\n \n \tfortran/24936"}, {"sha": "7f17a15de9fd8b36d2a8165df69df3283dbea7a1", "filename": "gcc/testsuite/g++.old-deja/g++.law/profile1.C", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/345f13fecf607a6f0eabe77734139cc25b6aa56b/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Fprofile1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/345f13fecf607a6f0eabe77734139cc25b6aa56b/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Fprofile1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Fprofile1.C?ref=345f13fecf607a6f0eabe77734139cc25b6aa56b", "patch": "@@ -2,7 +2,6 @@\n // { dg-require-profiling \"-pg\" }\n // { dg-options \"-pg\" }\n // { dg-options \"-pg -static\" { target hppa*-*-hpux* } }\n-// { dg-bogus \"\\[Uu\\]nresolved symbol ._mcount\" \"Profiling unsupported\" { xfail *-*-netware* } 0 }\n // GROUPS passed profiling\n #include <stdio.h>\n main()"}, {"sha": "dd8614c9f093da1cb7d033d5462688146ef9965e", "filename": "gcc/testsuite/gcc.dg/20021014-1.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/345f13fecf607a6f0eabe77734139cc25b6aa56b/gcc%2Ftestsuite%2Fgcc.dg%2F20021014-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/345f13fecf607a6f0eabe77734139cc25b6aa56b/gcc%2Ftestsuite%2Fgcc.dg%2F20021014-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2F20021014-1.c?ref=345f13fecf607a6f0eabe77734139cc25b6aa56b", "patch": "@@ -4,7 +4,6 @@\n /* { dg-options \"-O2 -p -static\" { target hppa*-*-hpux* } } */\n /* { dg-error \"profiler\" \"No profiler support\" { target xstormy16-*-* } 0 } */\n /* { dg-error \"\" \"consider using `-pg' instead of `-p' with gprof(1)\" { target *-*-freebsd* } 0 } */\n-/* { dg-bogus \"\\[Uu\\]nresolved symbol ._mcount\" \"Profiling unsupported\" { xfail *-*-netware* } 0 } */\n \n extern void abort (void);\n extern void exit (int);"}, {"sha": "7178bd820459c632c81994bacb87f7702592c4e5", "filename": "gcc/testsuite/gcc.dg/nest.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/345f13fecf607a6f0eabe77734139cc25b6aa56b/gcc%2Ftestsuite%2Fgcc.dg%2Fnest.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/345f13fecf607a6f0eabe77734139cc25b6aa56b/gcc%2Ftestsuite%2Fgcc.dg%2Fnest.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fnest.c?ref=345f13fecf607a6f0eabe77734139cc25b6aa56b", "patch": "@@ -4,7 +4,6 @@\n /* { dg-options \"-O2 -pg\" } */\n /* { dg-options \"-O2 -pg -static\" { target hppa*-*-hpux* } } */\n /* { dg-error \"profiler\" \"No profiler support\" { target xstormy16-*-* } 0 } */\n-/* { dg-bogus \"\\[Uu\\]nresolved symbol ._mcount\" \"Profiling unsupported\" { xfail *-*-netware* } 0 } */\n \n extern void abort (void);\n "}, {"sha": "78ceb540853069a3efc453cc6690509dbb3d6fa6", "filename": "gcc/testsuite/lib/target-supports.exp", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/345f13fecf607a6f0eabe77734139cc25b6aa56b/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/345f13fecf607a6f0eabe77734139cc25b6aa56b/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp?ref=345f13fecf607a6f0eabe77734139cc25b6aa56b", "patch": "@@ -131,7 +131,7 @@ proc check_visibility_available { what_kind } {\n     global target_triplet\n \n     # On NetWare, support makes no sense.\n-    if { [string match \"*-*-netware*\" $target_triplet] } {\n+    if { [istarget *-*-netware*] } {\n         return 0\n     }\n \n@@ -279,6 +279,11 @@ proc check_profiling_available { test_what } {\n \treturn 0\n     }\n \n+    # At present, there is no profiling support on NetWare.\n+    if { [istarget *-*-netware*] } {\n+\treturn 0\n+    }\n+\n     # Now examine the cache variable.\n     if {![info exists profiling_available_saved]} {\n \t# Some targets don't have any implementation of __bb_init_func or are"}]}