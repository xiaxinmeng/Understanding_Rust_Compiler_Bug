{"sha": "946f9306f214a4e4e3c41f02aa3cc814e04d022d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTQ2ZjkzMDZmMjE0YTRlNGUzYzQxZjAyYWEzY2M4MTRlMDRkMDIyZA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2013-06-12T06:43:05Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2013-06-12T06:43:05Z"}, "message": "re PR target/56564 (movdqa on possibly-8-byte-aligned struct with -O3)\n\n\tPR target/56564\n\t* varasm.c (decl_binds_to_current_def_p): Call binds_local_p\n\ttarget hook even for !TREE_PUBLIC decls.  If no resolution info\n\tis available, return false for common and external decls.\n\nFrom-SVN: r199984", "tree": {"sha": "c806eb7d0ba1820a5a6649401babc1d807a5a876", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c806eb7d0ba1820a5a6649401babc1d807a5a876"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/946f9306f214a4e4e3c41f02aa3cc814e04d022d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/946f9306f214a4e4e3c41f02aa3cc814e04d022d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/946f9306f214a4e4e3c41f02aa3cc814e04d022d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/946f9306f214a4e4e3c41f02aa3cc814e04d022d/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a7fca6f045a40bb74cbb90993d8befbbee4e29f6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a7fca6f045a40bb74cbb90993d8befbbee4e29f6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a7fca6f045a40bb74cbb90993d8befbbee4e29f6"}], "stats": {"total": 26, "additions": 21, "deletions": 5}, "files": [{"sha": "5de46a0ca450a468da9b4780949c1ee80e816df1", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/946f9306f214a4e4e3c41f02aa3cc814e04d022d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/946f9306f214a4e4e3c41f02aa3cc814e04d022d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=946f9306f214a4e4e3c41f02aa3cc814e04d022d", "patch": "@@ -1,10 +1,16 @@\n+2013-06-12  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/56564\n+\t* varasm.c (decl_binds_to_current_def_p): Call binds_local_p\n+\ttarget hook even for !TREE_PUBLIC decls.  If no resolution info\n+\tis available, return false for common and external decls.\n+\n 2013-06-12  Kaushik Phatak  <kaushik.phatak@kpitcummins.com>\n \n \t* config/rl78/constraints.md (U): New constraint.\n \t* config/rl78/rl78.md (*mulqi3_rl78,*mulhi3_rl78,*mulhi3_g13): Add\n \tvalloc attribute.\n \n-\n 2013-06-11  Michael Meissner  <meissner@linux.vnet.ibm.com>\n \n \tPR target/57589"}, {"sha": "d817067adf7b918ff65aa9e35398f3bb91d4f0ce", "filename": "gcc/varasm.c", "status": "modified", "additions": 14, "deletions": 4, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/946f9306f214a4e4e3c41f02aa3cc814e04d022d/gcc%2Fvarasm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/946f9306f214a4e4e3c41f02aa3cc814e04d022d/gcc%2Fvarasm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvarasm.c?ref=946f9306f214a4e4e3c41f02aa3cc814e04d022d", "patch": "@@ -6781,10 +6781,10 @@ bool\n decl_binds_to_current_def_p (tree decl)\n {\n   gcc_assert (DECL_P (decl));\n-  if (!TREE_PUBLIC (decl))\n-    return true;\n   if (!targetm.binds_local_p (decl))\n     return false;\n+  if (!TREE_PUBLIC (decl))\n+    return true;\n   /* When resolution is available, just use it.  */\n   if (TREE_CODE (decl) == VAR_DECL\n       && (TREE_STATIC (decl) || DECL_EXTERNAL (decl)))\n@@ -6802,10 +6802,20 @@ decl_binds_to_current_def_p (tree decl)\n \treturn resolution_to_local_definition_p (node->symbol.resolution);\n     }\n   /* Otherwise we have to assume the worst for DECL_WEAK (hidden weaks\n-     binds locally but still can be overwritten).\n+     binds locally but still can be overwritten), DECL_COMMON (can be merged\n+     with a non-common definition somewhere in the same module) or\n+     DECL_EXTERNAL.\n      This rely on fact that binds_local_p behave as decl_replaceable_p\n      for all other declaration types.  */\n-  return !DECL_WEAK (decl);\n+  if (DECL_WEAK (decl))\n+    return false;\n+  if (DECL_COMMON (decl)\n+      && (DECL_INITIAL (decl) == NULL\n+\t  || DECL_INITIAL (decl) == error_mark_node))\n+    return false;\n+  if (DECL_EXTERNAL (decl))\n+    return false;\n+  return true;\n }\n \n /* A replaceable function or variable is one which may be replaced"}]}