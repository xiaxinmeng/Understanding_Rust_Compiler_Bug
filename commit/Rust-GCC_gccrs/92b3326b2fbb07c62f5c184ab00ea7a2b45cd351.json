{"sha": "92b3326b2fbb07c62f5c184ab00ea7a2b45cd351", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTJiMzMyNmIyZmJiMDdjNjJmNWMxODRhYjAwZWE3YTJiNDVjZDM1MQ==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2014-04-25T07:47:22Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2014-04-25T07:47:22Z"}, "message": "re PR ipa/60912 (wrong code with -O -fno-inline -fipa-pta)\n\n2014-04-25  Richard Biener  <rguenther@suse.de>\n\n\tPR ipa/60912\n\t* tree-ssa-structalias.c (ipa_pta_execute): Compute direct\n\tcall stmt use/clobber sets during stmt walk instead of\n\twalking the possibly incomplete set of caller edges.\n\n\t* g++.dg/opt/pr60912.C: New testcase.\n\nFrom-SVN: r209780", "tree": {"sha": "17fdb88866fc3a9022b2420d63ba362e3059cbc5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/17fdb88866fc3a9022b2420d63ba362e3059cbc5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/92b3326b2fbb07c62f5c184ab00ea7a2b45cd351", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/92b3326b2fbb07c62f5c184ab00ea7a2b45cd351", "html_url": "https://github.com/Rust-GCC/gccrs/commit/92b3326b2fbb07c62f5c184ab00ea7a2b45cd351", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/92b3326b2fbb07c62f5c184ab00ea7a2b45cd351/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "78422fb13c3f57b962d4c6cff7a9493ea3b12c14", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/78422fb13c3f57b962d4c6cff7a9493ea3b12c14", "html_url": "https://github.com/Rust-GCC/gccrs/commit/78422fb13c3f57b962d4c6cff7a9493ea3b12c14"}], "stats": {"total": 71, "additions": 46, "deletions": 25}, "files": [{"sha": "1e413baaa046ab8204b29edba89ab0b59a9a38d1", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92b3326b2fbb07c62f5c184ab00ea7a2b45cd351/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92b3326b2fbb07c62f5c184ab00ea7a2b45cd351/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=92b3326b2fbb07c62f5c184ab00ea7a2b45cd351", "patch": "@@ -1,3 +1,10 @@\n+2014-04-25  Richard Biener  <rguenther@suse.de>\n+\n+\tPR ipa/60912\n+\t* tree-ssa-structalias.c (ipa_pta_execute): Compute direct\n+\tcall stmt use/clobber sets during stmt walk instead of\n+\twalking the possibly incomplete set of caller edges.\n+\n 2014-04-25  Richard Biener  <rguenther@suse.de>\n \n \tPR ipa/60911"}, {"sha": "d11d70b3f16f56f7a6e9b21c217b02fda3cbeee8", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92b3326b2fbb07c62f5c184ab00ea7a2b45cd351/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92b3326b2fbb07c62f5c184ab00ea7a2b45cd351/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=92b3326b2fbb07c62f5c184ab00ea7a2b45cd351", "patch": "@@ -1,3 +1,8 @@\n+2014-04-25  Richard Biener  <rguenther@suse.de>\n+\n+\tPR ipa/60912\n+\t* g++.dg/opt/pr60912.C: New testcase.\n+\n 2014-04-25  Richard Biener  <rguenther@suse.de>\n \n \tPR ipa/60911"}, {"sha": "ad51ba72570ea427ead70405b594c093eeb8fc5a", "filename": "gcc/testsuite/g++.dg/opt/pr60912.C", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92b3326b2fbb07c62f5c184ab00ea7a2b45cd351/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fpr60912.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92b3326b2fbb07c62f5c184ab00ea7a2b45cd351/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fpr60912.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fpr60912.C?ref=92b3326b2fbb07c62f5c184ab00ea7a2b45cd351", "patch": "@@ -0,0 +1,18 @@\n+// { dg-do run }\n+// { dg-options \"-O -fno-inline -fipa-pta\" }\n+\n+struct IFoo\n+{\n+  virtual void Foo () = 0;\n+};\n+\n+struct Bar:IFoo\n+{\n+  void Foo () {}\n+};\n+\n+int main ()\n+{\n+  (new Bar ())->Foo ();\n+  return 0;\n+}"}, {"sha": "c4f5f496cd38f45c73d87b7223f6e17168df5684", "filename": "gcc/tree-ssa-structalias.c", "status": "modified", "additions": 16, "deletions": 25, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92b3326b2fbb07c62f5c184ab00ea7a2b45cd351/gcc%2Ftree-ssa-structalias.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92b3326b2fbb07c62f5c184ab00ea7a2b45cd351/gcc%2Ftree-ssa-structalias.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-structalias.c?ref=92b3326b2fbb07c62f5c184ab00ea7a2b45cd351", "patch": "@@ -7244,10 +7244,7 @@ ipa_pta_execute (void)\n       tree ptr;\n       struct function *fn;\n       unsigned i;\n-      varinfo_t fi;\n       basic_block bb;\n-      struct pt_solution uses, clobbers;\n-      struct cgraph_edge *e;\n \n       /* Nodes without a body are not interesting.  */\n       if (!cgraph_function_with_gimple_body_p (node) || node->clone_of)\n@@ -7263,21 +7260,6 @@ ipa_pta_execute (void)\n \t    find_what_p_points_to (ptr);\n \t}\n \n-      /* Compute the call-use and call-clobber sets for all direct calls.  */\n-      fi = lookup_vi_for_tree (node->decl);\n-      gcc_assert (fi->is_fn_info);\n-      clobbers\n-\t= find_what_var_points_to (first_vi_for_offset (fi, fi_clobbers));\n-      uses = find_what_var_points_to (first_vi_for_offset (fi, fi_uses));\n-      for (e = node->callers; e; e = e->next_caller)\n-\t{\n-\t  if (!e->call_stmt)\n-\t    continue;\n-\n-\t  *gimple_call_clobber_set (e->call_stmt) = clobbers;\n-\t  *gimple_call_use_set (e->call_stmt) = uses;\n-\t}\n-\n       /* Compute the call-use and call-clobber sets for indirect calls\n \t and calls to external functions.  */\n       FOR_EACH_BB_FN (bb, fn)\n@@ -7288,17 +7270,27 @@ ipa_pta_execute (void)\n \t    {\n \t      gimple stmt = gsi_stmt (gsi);\n \t      struct pt_solution *pt;\n-\t      varinfo_t vi;\n+\t      varinfo_t vi, fi;\n \t      tree decl;\n \n \t      if (!is_gimple_call (stmt))\n \t\tcontinue;\n \n-\t      /* Handle direct calls to external functions.  */\n+\t      /* Handle direct calls to functions with body.  */\n \t      decl = gimple_call_fndecl (stmt);\n \t      if (decl\n-\t\t  && (!(fi = lookup_vi_for_tree (decl))\n-\t\t      || !fi->is_fn_info))\n+\t\t  && (fi = lookup_vi_for_tree (decl))\n+\t\t  && fi->is_fn_info)\n+\t\t{\n+\t\t  *gimple_call_clobber_set (stmt)\n+\t\t     = find_what_var_points_to\n+\t\t         (first_vi_for_offset (fi, fi_clobbers));\n+\t\t  *gimple_call_use_set (stmt)\n+\t\t     = find_what_var_points_to\n+\t\t         (first_vi_for_offset (fi, fi_uses));\n+\t\t}\n+\t      /* Handle direct calls to external functions.  */\n+\t      else if (decl)\n \t\t{\n \t\t  pt = gimple_call_use_set (stmt);\n \t\t  if (gimple_call_flags (stmt) & ECF_CONST)\n@@ -7342,10 +7334,9 @@ ipa_pta_execute (void)\n \t\t      pt->nonlocal = 1;\n \t\t    }\n \t\t}\n-\n \t      /* Handle indirect calls.  */\n-\t      if (!decl\n-\t\t  && (fi = get_fi_for_callee (stmt)))\n+\t      else if (!decl\n+\t\t       && (fi = get_fi_for_callee (stmt)))\n \t\t{\n \t\t  /* We need to accumulate all clobbers/uses of all possible\n \t\t     callees.  */"}]}