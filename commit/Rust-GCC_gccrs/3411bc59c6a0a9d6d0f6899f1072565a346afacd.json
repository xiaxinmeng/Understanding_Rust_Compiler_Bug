{"sha": "3411bc59c6a0a9d6d0f6899f1072565a346afacd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzQxMWJjNTljNmEwYTlkNmQwZjY4OTlmMTA3MjU2NWEzNDZhZmFjZA==", "commit": {"author": {"name": "Xinliang David Li", "email": "davidxl@google.com", "date": "2011-04-09T16:29:08Z"}, "committer": {"name": "Xinliang David Li", "email": "davidxl@gcc.gnu.org", "date": "2011-04-09T16:29:08Z"}, "message": "Fix PR48484\n\nFrom-SVN: r172229", "tree": {"sha": "199c37c18d53eaf3b70b9c0156e24d433e1be901", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/199c37c18d53eaf3b70b9c0156e24d433e1be901"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3411bc59c6a0a9d6d0f6899f1072565a346afacd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3411bc59c6a0a9d6d0f6899f1072565a346afacd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3411bc59c6a0a9d6d0f6899f1072565a346afacd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3411bc59c6a0a9d6d0f6899f1072565a346afacd/comments", "author": {"login": "vns-mn", "id": 57157229, "node_id": "MDQ6VXNlcjU3MTU3MjI5", "avatar_url": "https://avatars.githubusercontent.com/u/57157229?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vns-mn", "html_url": "https://github.com/vns-mn", "followers_url": "https://api.github.com/users/vns-mn/followers", "following_url": "https://api.github.com/users/vns-mn/following{/other_user}", "gists_url": "https://api.github.com/users/vns-mn/gists{/gist_id}", "starred_url": "https://api.github.com/users/vns-mn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vns-mn/subscriptions", "organizations_url": "https://api.github.com/users/vns-mn/orgs", "repos_url": "https://api.github.com/users/vns-mn/repos", "events_url": "https://api.github.com/users/vns-mn/events{/privacy}", "received_events_url": "https://api.github.com/users/vns-mn/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b365495ab5fbdf842db5b909b88dea4e2d778a87", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b365495ab5fbdf842db5b909b88dea4e2d778a87", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b365495ab5fbdf842db5b909b88dea4e2d778a87"}], "stats": {"total": 115, "additions": 112, "deletions": 3}, "files": [{"sha": "ea76776a23eac3d2976d85fa53713d281da2a45d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3411bc59c6a0a9d6d0f6899f1072565a346afacd/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3411bc59c6a0a9d6d0f6899f1072565a346afacd/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3411bc59c6a0a9d6d0f6899f1072565a346afacd", "patch": "@@ -1,3 +1,9 @@\n+2011-04-09  Xinliang David Li  <davidxl@google.com>\n+\n+\tPR tree-optimization/PR48484\n+\t* tree-ssa-uninit.c (convert_control_dep_chain_into_preds): Set\n+\thas_valid_pred lazily\n+\n 2011-04-09  Duncan Sands  <baldrick@free.fr>\n \n \t* tree.c (array_type_nelts): Bail out if TYPE_MAX_VALUE not set."}, {"sha": "3f17f39a0a18a11a6cacca613e69c838a0a323fc", "filename": "gcc/testsuite/g++.dg/pr48484.C", "status": "added", "additions": 105, "deletions": 0, "changes": 105, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3411bc59c6a0a9d6d0f6899f1072565a346afacd/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fpr48484.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3411bc59c6a0a9d6d0f6899f1072565a346afacd/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fpr48484.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fpr48484.C?ref=3411bc59c6a0a9d6d0f6899f1072565a346afacd", "patch": "@@ -0,0 +1,105 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O -finline-functions -finline-small-functions -Wuninitialized\" }  */\n+\n+\n+struct SQObjectPtr\n+{\n+  int _type;\n+  SQObjectPtr operator = (long);\n+};\n+struct SQObjectPtrVec\n+{\n+  SQObjectPtr fff (unsigned);\n+  SQObjectPtr *_vals;\n+};\n+\n+struct SQInstruction\n+{\n+  int _arg1;\n+  unsigned op;\n+  unsigned _arg0;\n+  unsigned _arg2;\n+};\n+struct SQVM\n+{\n+  struct CallInfo\n+  {\n+    SQInstruction *_ip;\n+  };\n+    bool\n+    Execute (SQObjectPtr &, long, long, long, SQObjectPtr &, unsigned, int);\n+    bool\n+    FOREACH_OP\n+    (SQObjectPtr\n+     &, SQObjectPtr &, SQObjectPtr &, SQObjectPtr &, long, int, int &);\n+  SQObjectPtrVec _stack;\n+  CallInfo *ci;\n+  long _nnativecalls;\n+  bool ShouldSuspend ();\n+};\n+struct AutoDec\n+{\n+  AutoDec (long *);\n+   ~AutoDec ();\n+};\n+bool\n+  SQVM::FOREACH_OP\n+  (SQObjectPtr\n+   &\n+   o1,\n+   SQObjectPtr & o2, SQObjectPtr &, SQObjectPtr & o4, long, int, int &jump)\n+{\n+  long\n+    nrefidx = 0;\n+  switch (o1._type)\n+    {\n+    case 0x02000000:\n+      o4 = nrefidx;\n+      jump = 1;\n+      return true;\n+    case 0x00000080:\n+      {\n+\tlong\n+\t  idx = 10;\n+\to2 = idx;\n+\tjump = 0;\n+      }\n+    }\n+}\n+\n+bool\n+  SQVM::Execute\n+  (SQObjectPtr &, long, long, long, SQObjectPtr &, unsigned, int)\n+{\n+  AutoDec\n+  ad (&_nnativecalls);\n+  for (;;)\n+    {\n+      if (ShouldSuspend ())\n+\treturn true;\n+      SQInstruction\n+\t_i_ = *ci->_ip;\n+      switch (_i_.op)\n+\t{\n+\tcase 0:\n+\t  {\n+\t    int\n+\t      tojump;\n+\n+\t    FOREACH_OP\n+\t      (_stack._vals\n+\t       [_i_._arg0],\n+\t       _stack._vals\n+\t       [_i_._arg2],\n+\t       _stack._vals\n+\t       [_i_._arg2],\n+\t       _stack._vals[_i_._arg2], _i_._arg2, _i_._arg1, tojump);\n+\n+\t    ci += tojump;  /* { dg-warning \"uninitialized\" \"warning\" }  */\n+\t  }\n+\tcase 1:\n+\t  _stack.fff (_i_._arg1);\n+\t}\n+    }\n+\n+}"}, {"sha": "479ffce5ed79833a9fafcc3fb3d7bfd35db8e71c", "filename": "gcc/tree-ssa-uninit.c", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3411bc59c6a0a9d6d0f6899f1072565a346afacd/gcc%2Ftree-ssa-uninit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3411bc59c6a0a9d6d0f6899f1072565a346afacd/gcc%2Ftree-ssa-uninit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-uninit.c?ref=3411bc59c6a0a9d6d0f6899f1072565a346afacd", "patch": "@@ -349,9 +349,6 @@ convert_control_dep_chain_into_preds (VEC(edge, heap) **dep_chains,\n   if (num_chains == 0 || num_chains >= MAX_NUM_CHAINS)\n     return false;\n \n-  /* Now convert CD chains into predicates  */\n-  has_valid_pred = true;\n-\n   /* Now convert the control dep chain into a set\n      of predicates.  */\n   *preds = XCNEWVEC (VEC(use_pred_info_t, heap) *,\n@@ -412,6 +409,7 @@ convert_control_dep_chain_into_preds (VEC(edge, heap) **dep_chains,\n           one_pred->cond = cond_stmt;\n           one_pred->invert = !!(e->flags & EDGE_FALSE_VALUE);\n           VEC_safe_push (use_pred_info_t, heap, (*preds)[i], one_pred);\n+\t  has_valid_pred = true;\n         }\n \n       if (!has_valid_pred)"}]}