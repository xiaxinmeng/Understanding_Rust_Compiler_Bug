{"sha": "6578a6bfec1ae4a6a077055ebf0024e0079b80f7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjU3OGE2YmZlYzFhZTRhNmEwNzcwNTVlYmYwMDI0ZTAwNzliODBmNw==", "commit": {"author": {"name": "Hristian Kirtchev", "email": "kirtchev@adacore.com", "date": "2019-07-01T13:37:42Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2019-07-01T13:37:42Z"}, "message": "[Ada] Minor reformatting\n\n2019-07-01  Hristian Kirtchev  <kirtchev@adacore.com>\n\ngcc/ada/\n\n\t* checks.adb, exp_ch9.adb, exp_unst.adb, sem_ch4.adb,\n\tsem_prag.adb, sem_spark.adb: Minor reformatting.\n\nFrom-SVN: r272882", "tree": {"sha": "dc63a53ef62bc739531f2bda3e3bfad239700e4e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dc63a53ef62bc739531f2bda3e3bfad239700e4e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6578a6bfec1ae4a6a077055ebf0024e0079b80f7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6578a6bfec1ae4a6a077055ebf0024e0079b80f7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6578a6bfec1ae4a6a077055ebf0024e0079b80f7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6578a6bfec1ae4a6a077055ebf0024e0079b80f7/comments", "author": {"login": "kirtchev-adacore", "id": 60669983, "node_id": "MDQ6VXNlcjYwNjY5OTgz", "avatar_url": "https://avatars.githubusercontent.com/u/60669983?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kirtchev-adacore", "html_url": "https://github.com/kirtchev-adacore", "followers_url": "https://api.github.com/users/kirtchev-adacore/followers", "following_url": "https://api.github.com/users/kirtchev-adacore/following{/other_user}", "gists_url": "https://api.github.com/users/kirtchev-adacore/gists{/gist_id}", "starred_url": "https://api.github.com/users/kirtchev-adacore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kirtchev-adacore/subscriptions", "organizations_url": "https://api.github.com/users/kirtchev-adacore/orgs", "repos_url": "https://api.github.com/users/kirtchev-adacore/repos", "events_url": "https://api.github.com/users/kirtchev-adacore/events{/privacy}", "received_events_url": "https://api.github.com/users/kirtchev-adacore/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "7029d96f5a2e98500707ca9110e5ca569e062d13", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7029d96f5a2e98500707ca9110e5ca569e062d13", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7029d96f5a2e98500707ca9110e5ca569e062d13"}], "stats": {"total": 39, "additions": 22, "deletions": 17}, "files": [{"sha": "51ff642cdd8ebf74cafa7012e5e77a90b47526a3", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6578a6bfec1ae4a6a077055ebf0024e0079b80f7/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6578a6bfec1ae4a6a077055ebf0024e0079b80f7/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=6578a6bfec1ae4a6a077055ebf0024e0079b80f7", "patch": "@@ -1,3 +1,8 @@\n+2019-07-01  Hristian Kirtchev  <kirtchev@adacore.com>\n+\n+\t* checks.adb, exp_ch9.adb, exp_unst.adb, sem_ch4.adb,\n+\tsem_prag.adb, sem_spark.adb: Minor reformatting.\n+\n 2019-07-01  Ed Schonberg  <schonberg@adacore.com>\n \n \t* sem_attr.adb (Analyze_Attribute, case Enum_Rep): Allow prefix"}, {"sha": "33fb27eeec528047cb6a699a8aeb2dd0a5991db3", "filename": "gcc/ada/checks.adb", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6578a6bfec1ae4a6a077055ebf0024e0079b80f7/gcc%2Fada%2Fchecks.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6578a6bfec1ae4a6a077055ebf0024e0079b80f7/gcc%2Fada%2Fchecks.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fchecks.adb?ref=6578a6bfec1ae4a6a077055ebf0024e0079b80f7", "patch": "@@ -7429,15 +7429,15 @@ package body Checks is\n          return;\n       end if;\n \n-      --  Entities declared in Lock_free protected types must be treated\n-      --  as volatile, and we must inhibit validity checks to prevent\n-      --  improper constant folding.\n+      --  Entities declared in Lock_free protected types must be treated as\n+      --  volatile, and we must inhibit validity checks to prevent improper\n+      --  constant folding.\n \n       if Is_Entity_Name (Expr)\n         and then Is_Subprogram (Scope (Entity (Expr)))\n         and then Present (Protected_Subprogram (Scope (Entity (Expr))))\n         and then Uses_Lock_Free\n-           (Scope (Protected_Subprogram (Scope (Entity (Expr)))))\n+                   (Scope (Protected_Subprogram (Scope (Entity (Expr)))))\n       then\n          return;\n       end if;"}, {"sha": "0f83d57fdd849bd42bd58eba6df20e2b98ee9779", "filename": "gcc/ada/exp_ch9.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6578a6bfec1ae4a6a077055ebf0024e0079b80f7/gcc%2Fada%2Fexp_ch9.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6578a6bfec1ae4a6a077055ebf0024e0079b80f7/gcc%2Fada%2Fexp_ch9.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch9.adb?ref=6578a6bfec1ae4a6a077055ebf0024e0079b80f7", "patch": "@@ -8950,6 +8950,7 @@ package body Exp_Ch9 is\n             Set_Is_Inlined (Protected_Body_Subprogram (Subp));\n             Set_Is_Inlined (Subp, False);\n          end if;\n+\n          if Has_Pragma_No_Inline (Subp) then\n             Set_Has_Pragma_No_Inline (Protected_Body_Subprogram (Subp));\n          end if;"}, {"sha": "b81b1b97a2d4f64fe34a6a8effe125fe8bcd7037", "filename": "gcc/ada/exp_unst.adb", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6578a6bfec1ae4a6a077055ebf0024e0079b80f7/gcc%2Fada%2Fexp_unst.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6578a6bfec1ae4a6a077055ebf0024e0079b80f7/gcc%2Fada%2Fexp_unst.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_unst.adb?ref=6578a6bfec1ae4a6a077055ebf0024e0079b80f7", "patch": "@@ -463,9 +463,9 @@ package body Exp_Unst is\n             Callee : Entity_Id;\n \n             procedure Check_Static_Type\n-              (T  : Entity_Id;\n-               N  : Node_Id;\n-               DT : in out Boolean;\n+              (T                : Entity_Id;\n+               N                : Node_Id;\n+               DT               : in out Boolean;\n                Check_Designated : Boolean := False);\n             --  Given a type T, checks if it is a static type defined as a type\n             --  with no dynamic bounds in sight. If so, the only action is to\n@@ -497,9 +497,9 @@ package body Exp_Unst is\n             -----------------------\n \n             procedure Check_Static_Type\n-              (T  : Entity_Id;\n-               N  : Node_Id;\n-               DT : in out Boolean;\n+              (T                : Entity_Id;\n+               N                : Node_Id;\n+               DT               : in out Boolean;\n                Check_Designated : Boolean := False)\n             is\n                procedure Note_Uplevel_Bound (N : Node_Id; Ref : Node_Id);\n@@ -702,7 +702,7 @@ package body Exp_Unst is\n                      Set_Is_Static_Type (T);\n                   end if;\n \n-               --  For access types, check designated type when required.\n+               --  For access types, check designated type when required\n \n                elsif Is_Access_Type (T) and then Check_Designated then\n                   Check_Static_Type (Directly_Designated_Type (T), N, DT);"}, {"sha": "3328f96cfadd28714fa5c235fae738953b152745", "filename": "gcc/ada/sem_ch4.adb", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6578a6bfec1ae4a6a077055ebf0024e0079b80f7/gcc%2Fada%2Fsem_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6578a6bfec1ae4a6a077055ebf0024e0079b80f7/gcc%2Fada%2Fsem_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch4.adb?ref=6578a6bfec1ae4a6a077055ebf0024e0079b80f7", "patch": "@@ -7402,15 +7402,15 @@ package body Sem_Ch4 is\n                              and then Is_Fixed_Point_Type (Etype (L))\n                              and then Is_Integer_Type (Etype (R))\n                            then\n-                              Error_Msg_N (\"\\convert right operand to \"\n-                                           & \"`Integer`\", N);\n+                              Error_Msg_N\n+                                (\"\\convert right operand to `Integer`\", N);\n \n                            elsif Nkind (N) = N_Op_Multiply\n                              and then Is_Fixed_Point_Type (Etype (R))\n                              and then Is_Integer_Type (Etype (L))\n                            then\n-                              Error_Msg_N (\"\\convert left operand to \"\n-                                           & \"`Integer`\", N);\n+                              Error_Msg_N\n+                                (\"\\convert left operand to `Integer`\", N);\n                            end if;\n \n                         --  For concatenation operators it is more difficult to"}, {"sha": "5e7f743aff96c7953a0b0ec4f967fd59362b9a55", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6578a6bfec1ae4a6a077055ebf0024e0079b80f7/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6578a6bfec1ae4a6a077055ebf0024e0079b80f7/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=6578a6bfec1ae4a6a077055ebf0024e0079b80f7", "patch": "@@ -25608,7 +25608,7 @@ package body Sem_Prag is\n                Ent := Underlying_Type (Ent);\n             end if;\n \n-            --  The pragma applies to entities with addresses.\n+            --  The pragma applies to entities with addresses\n \n             if Is_Type (Ent) then\n                Error_Pragma (\"pragma applies to objects and subprograms\");"}, {"sha": "0040dde325e736a276d441d709357100ab919b90", "filename": "gcc/ada/sem_spark.adb", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6578a6bfec1ae4a6a077055ebf0024e0079b80f7/gcc%2Fada%2Fsem_spark.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6578a6bfec1ae4a6a077055ebf0024e0079b80f7/gcc%2Fada%2Fsem_spark.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_spark.adb?ref=6578a6bfec1ae4a6a077055ebf0024e0079b80f7", "patch": "@@ -47,7 +47,6 @@ package body Sem_SPARK is\n    ---------------------------------------------------\n \n    package Permissions is\n-\n       Elaboration_Context_Max : constant := 1009;\n       --  The hash range\n "}]}