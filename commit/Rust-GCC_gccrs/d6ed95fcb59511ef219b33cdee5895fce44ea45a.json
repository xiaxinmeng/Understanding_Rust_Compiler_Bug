{"sha": "d6ed95fcb59511ef219b33cdee5895fce44ea45a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDZlZDk1ZmNiNTk1MTFlZjIxOWIzM2NkZWU1ODk1ZmNlNDRlYTQ1YQ==", "commit": {"author": {"name": "Trevor Saunders", "email": "tbsaunde+gcc@tbsaunde.org", "date": "2015-05-05T03:41:53Z"}, "committer": {"name": "Trevor Saunders", "email": "tbsaunde@gcc.gnu.org", "date": "2015-05-05T03:41:53Z"}, "message": "Improve the test in bitfields.m4\n\nUsing a named bitfield with a width more than 0 means we won't hit\nweirdness caused by the bitfield not really needing to exist.  Changing\nint to long long means we won't have trouble with some arch where size\nof int is 1 or 2.\n\nlibobjc/ChangeLog:\n\n2015-05-04  Trevor Saunders  <tbsaunde+gcc@tbsaunde.org>\n\n\t* configure: Regenerate.\n\nconfig/ChangeLog:\n\n2015-05-04  Trevor Saunders  <tbsaunde+gcc@tbsaunde.org>\n\n\t* bitfields.m4: Change int to long long, and use bitfields of\n\twidth 1 instead of 0.\n\nFrom-SVN: r222794", "tree": {"sha": "ccc4d5e0cfe5965a5e89e5eb7f6616cfdb85f63e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ccc4d5e0cfe5965a5e89e5eb7f6616cfdb85f63e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d6ed95fcb59511ef219b33cdee5895fce44ea45a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d6ed95fcb59511ef219b33cdee5895fce44ea45a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d6ed95fcb59511ef219b33cdee5895fce44ea45a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d6ed95fcb59511ef219b33cdee5895fce44ea45a/comments", "author": null, "committer": null, "parents": [{"sha": "f6341d8d09dad4a8e2b3176c65e60aed3e1213e4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f6341d8d09dad4a8e2b3176c65e60aed3e1213e4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f6341d8d09dad4a8e2b3176c65e60aed3e1213e4"}], "stats": {"total": 23, "additions": 15, "deletions": 8}, "files": [{"sha": "d62ae4ce6c876d554002fb11267ac86a35202cab", "filename": "config/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6ed95fcb59511ef219b33cdee5895fce44ea45a/config%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6ed95fcb59511ef219b33cdee5895fce44ea45a/config%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/config%2FChangeLog?ref=d6ed95fcb59511ef219b33cdee5895fce44ea45a", "patch": "@@ -1,3 +1,8 @@\n+2015-05-04  Trevor Saunders  <tbsaunde+gcc@tbsaunde.org>\n+\n+\t* bitfields.m4: Change int to long long, and use bitfields of\n+\twidth 1 instead of 0.\n+\n 2015-05-01  Trevor Saunders  <tbsaunde+gcc@tbsaunde.org>\n \n \t* bitfields.m4: New file."}, {"sha": "8185cd302a9c6a9047431f52dd769ad77e1135cd", "filename": "config/bitfields.m4", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6ed95fcb59511ef219b33cdee5895fce44ea45a/config%2Fbitfields.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6ed95fcb59511ef219b33cdee5895fce44ea45a/config%2Fbitfields.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/config%2Fbitfields.m4?ref=d6ed95fcb59511ef219b33cdee5895fce44ea45a", "patch": "@@ -13,10 +13,9 @@ AC_DEFUN([gt_BITFIELD_TYPE_MATTERS],\n   AC_CACHE_CHECK([if the type of bitfields matters], gt_cv_bitfield_type_matters,\n   [\n     AC_TRY_COMPILE(\n-      [struct foo1 { char x; char :0; char y; };\n-struct foo2 { char x; int :0; char y; };\n-int foo1test[ sizeof (struct foo1) == 2 ? 1 : -1 ];\n-int foo2test[ sizeof (struct foo2) == 5 ? 1 : -1]; ],\n+      [struct foo1 { char x; char y:1; char z; };\n+struct foo2 { char x; long long int y:1; char z; };\n+int foo1test[ sizeof (struct foo1) < sizeof (struct foo2) ? 1 : -1 ]; ],\n       [], gt_cv_bitfield_type_matters=yes, gt_cv_bitfield_type_matters=no)\n   ])\n   if test $gt_cv_bitfield_type_matters = yes; then"}, {"sha": "d70808417ef797429d8172bacc2d25617120a852", "filename": "libobjc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6ed95fcb59511ef219b33cdee5895fce44ea45a/libobjc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6ed95fcb59511ef219b33cdee5895fce44ea45a/libobjc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libobjc%2FChangeLog?ref=d6ed95fcb59511ef219b33cdee5895fce44ea45a", "patch": "@@ -1,3 +1,7 @@\n+2015-05-04  Trevor Saunders  <tbsaunde+gcc@tbsaunde.org>\n+\n+\t* configure: Regenerate.\n+\n 2015-05-01  Trevor Saunders  <tbsaunde+gcc@tbsaunde.org>\n \n \t* acinclude.m4: Include bitfields.m4."}, {"sha": "2f71735f2552ed013cab1bd85e5709fa1d95f1ad", "filename": "libobjc/configure", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6ed95fcb59511ef219b33cdee5895fce44ea45a/libobjc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6ed95fcb59511ef219b33cdee5895fce44ea45a/libobjc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libobjc%2Fconfigure?ref=d6ed95fcb59511ef219b33cdee5895fce44ea45a", "patch": "@@ -11539,10 +11539,9 @@ else\n \n     cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n /* end confdefs.h.  */\n-struct foo1 { char x; char :0; char y; };\n-struct foo2 { char x; int :0; char y; };\n-int foo1test[ sizeof (struct foo1) == 2 ? 1 : -1 ];\n-int foo2test[ sizeof (struct foo2) == 5 ? 1 : -1];\n+struct foo1 { char x; char y:1; char z; };\n+struct foo2 { char x; long long int y:1; char z; };\n+int foo1test[ sizeof (struct foo1) < sizeof (struct foo2) ? 1 : -1 ];\n int\n main ()\n {"}]}