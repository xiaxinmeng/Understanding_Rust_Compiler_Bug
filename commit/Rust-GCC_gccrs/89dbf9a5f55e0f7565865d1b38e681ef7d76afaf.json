{"sha": "89dbf9a5f55e0f7565865d1b38e681ef7d76afaf", "node_id": "C_kwDOANBUbNoAKDg5ZGJmOWE1ZjU1ZTBmNzU2NTg2NWQxYjM4ZTY4MWVmN2Q3NmFmYWY", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2022-04-28T10:33:59Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2022-04-28T10:33:59Z"}, "message": "i386: Fix up ix86_gimplify_va_arg [PR105331]\n\nOn the following testcase we emit a bogus\n'va_arg_tmp.5' may be used uninitialized\nwarning.  The reason is that when gimplifying the addr = &temp;\nstatement, the va_arg_tmp temporary var for which we emit ADDR_EXPR\nis not TREE_ADDRESSABLE, prepare_gimple_addressable emits some extra\ncode to initialize the newly addressable var from its previous value,\nbut it is a new variable which hasn't been initialized yet and will\nbe later, so we end up initializing it with uninitialized SSA_NAME:\n  va_arg_tmp.6 = va_arg_tmp.5_14(D);\n  addr.2_16 = &va_arg_tmp.6;\n  _17 = MEM[(double *)sse_addr.4_13];\n  MEM[(double * {ref-all})addr.2_16] = _17;\nand with -O1 we actually don't DSE it before the warning is emitted.\nIf we make the temp TREE_ADDRESSABLE before the gimplification, then\nthis prepare_gimple_addressable path isn't taken and we effectively\nomit the first statement above and so the bogus warning is gone.\n\nI went through other backends and didn't find another instance of this\nproblem.\n\n2022-04-28  Jakub Jelinek  <jakub@redhat.com>\n\n\tPR target/105331\n\t* config/i386/i386.cc (ix86_gimplify_va_arg): Mark va_arg_tmp\n\ttemporary TREE_ADDRESSABLE before trying to gimplify ADDR_EXPR\n\tof it.\n\n\t* gcc.dg/pr105331.c: New test.", "tree": {"sha": "e54771b4494e2b4a7f0eedb788597b67b1c14be2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e54771b4494e2b4a7f0eedb788597b67b1c14be2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/89dbf9a5f55e0f7565865d1b38e681ef7d76afaf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/89dbf9a5f55e0f7565865d1b38e681ef7d76afaf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/89dbf9a5f55e0f7565865d1b38e681ef7d76afaf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/89dbf9a5f55e0f7565865d1b38e681ef7d76afaf/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8094526109034c6c6af44de47612e97319b2c7c5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8094526109034c6c6af44de47612e97319b2c7c5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8094526109034c6c6af44de47612e97319b2c7c5"}], "stats": {"total": 12, "additions": 12, "deletions": 0}, "files": [{"sha": "b16df5b183e14a448878fadea45fccf529d8f5f5", "filename": "gcc/config/i386/i386.cc", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/89dbf9a5f55e0f7565865d1b38e681ef7d76afaf/gcc%2Fconfig%2Fi386%2Fi386.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/89dbf9a5f55e0f7565865d1b38e681ef7d76afaf/gcc%2Fconfig%2Fi386%2Fi386.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.cc?ref=89dbf9a5f55e0f7565865d1b38e681ef7d76afaf", "patch": "@@ -4891,6 +4891,7 @@ ix86_gimplify_va_arg (tree valist, tree type, gimple_seq *pre_p,\n \t{\n \t  int i, prev_size = 0;\n \t  tree temp = create_tmp_var (type, \"va_arg_tmp\");\n+\t  TREE_ADDRESSABLE (temp) = 1;\n \n \t  /* addr = &temp; */\n \t  t = build1 (ADDR_EXPR, build_pointer_type (type), temp);"}, {"sha": "06cf6d6d90194555e19e273a23cb561ab53b4297", "filename": "gcc/testsuite/gcc.dg/pr105331.c", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/89dbf9a5f55e0f7565865d1b38e681ef7d76afaf/gcc%2Ftestsuite%2Fgcc.dg%2Fpr105331.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/89dbf9a5f55e0f7565865d1b38e681ef7d76afaf/gcc%2Ftestsuite%2Fgcc.dg%2Fpr105331.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr105331.c?ref=89dbf9a5f55e0f7565865d1b38e681ef7d76afaf", "patch": "@@ -0,0 +1,11 @@\n+/* PR target/105331 */\n+/* { dg-do compile } */\n+/* { dg-options \"-O -Wuninitialized\" } */\n+\n+#include <stdarg.h>\n+\n+int\n+foo (va_list *va)\n+{\n+  return va_arg (*va, double _Complex);\t/* { dg-bogus \"may be used uninitialized\" } */\n+}"}]}