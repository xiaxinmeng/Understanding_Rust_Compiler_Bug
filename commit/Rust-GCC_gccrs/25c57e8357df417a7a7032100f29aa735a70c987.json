{"sha": "25c57e8357df417a7a7032100f29aa735a70c987", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjVjNTdlODM1N2RmNDE3YTdhNzAzMjEwMGYyOWFhNzM1YTcwYzk4Nw==", "commit": {"author": {"name": "Tobias Grosser", "email": "grosser@fim.uni-passau.de", "date": "2010-08-11T20:23:19Z"}, "committer": {"name": "Sebastian Pop", "email": "spop@gcc.gnu.org", "date": "2010-08-11T20:23:19Z"}, "message": "Add analysis pass to build the refined program structure tree.\n\nThe hash table utility functions are copied and adapted from code\nAntoniu contributed.\n\n2010-05-27  Tobias Grosser  <grosser@fim.uni-passau.de>\n\t    Antoniu Pop  <antoniu.pop@gmail.com>\n\n\t* Makefile.in (OBJS-common): Add refined-regions.o.\n\t(refined-regions.o): New.\n\t(graphite-scop-detection.o): Use refined-regions.h.\n\t* graphite-scop-detection.c: Include refined-regions.h\n\t(build_scops): Also build the refined region tree.\n\t* refined-regions.c: New. Adds an algorithm to detect refined\n\tregions.\n\t(print_refined_region): New.\n\t(debug_refined_region): New.\n\t(refined_region_contains_bb_p): New.\n\t(refined_region_contains_region_p): New.\n\t(is_common_df): New.\n\t(struct find_regions_global_data): New.\n\t(is_region): New.\n\t(typedef struct bb_bb_def): New.\n\t(new_bb_bb_def): New.\n\t(bb_bb_map_hash): New.\n\t(eq_bb_bb_map): New.\n\t(find_new_bb): New.\n\t(bb_reg_def): New.\n\t(new_bb_reg_def): New.\n\t(bb_reg_map_hash): New.\n\t(eq_bb_reg_map): New.\n\t(find_new_region): New.\n\t(insert_new_reg): New.\n\t(insert_new_bb): New.\n\t(insert_shortcut): New.\n\t(get_next_postdom): New.\n\t(create_region): New.\n\t(find_regions_with_entry): New.\n\t(find_regions_adc): New.\n\t(find_regions): New.\n\t(get_topmost_parent): New.\n\t(build_regions_tree): New.\n\t(calculate_region_tree): New.\n\t(free_region_tree): New.\n\t* refined-regions.h: New.\n\t(struct refined_region): New.\n\t(calculate_region_tree): New.\n\t(free_region_tree): New.\n\t(refined_region_contains_bb_p): New.\n\t(refined_region_contains_region_p): New.\n\t(print_refined_region): New.\n\t(debug_refined_region): New.\n\nFrom-SVN: r163108", "tree": {"sha": "a614a4b16421b5be88250527b6f2efcf3db85549", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a614a4b16421b5be88250527b6f2efcf3db85549"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/25c57e8357df417a7a7032100f29aa735a70c987", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/25c57e8357df417a7a7032100f29aa735a70c987", "html_url": "https://github.com/Rust-GCC/gccrs/commit/25c57e8357df417a7a7032100f29aa735a70c987", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/25c57e8357df417a7a7032100f29aa735a70c987/comments", "author": {"login": "tobiasgrosser", "id": 521960, "node_id": "MDQ6VXNlcjUyMTk2MA==", "avatar_url": "https://avatars.githubusercontent.com/u/521960?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tobiasgrosser", "html_url": "https://github.com/tobiasgrosser", "followers_url": "https://api.github.com/users/tobiasgrosser/followers", "following_url": "https://api.github.com/users/tobiasgrosser/following{/other_user}", "gists_url": "https://api.github.com/users/tobiasgrosser/gists{/gist_id}", "starred_url": "https://api.github.com/users/tobiasgrosser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tobiasgrosser/subscriptions", "organizations_url": "https://api.github.com/users/tobiasgrosser/orgs", "repos_url": "https://api.github.com/users/tobiasgrosser/repos", "events_url": "https://api.github.com/users/tobiasgrosser/events{/privacy}", "received_events_url": "https://api.github.com/users/tobiasgrosser/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sebpop", "id": 568397, "node_id": "MDQ6VXNlcjU2ODM5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/568397?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sebpop", "html_url": "https://github.com/sebpop", "followers_url": "https://api.github.com/users/sebpop/followers", "following_url": "https://api.github.com/users/sebpop/following{/other_user}", "gists_url": "https://api.github.com/users/sebpop/gists{/gist_id}", "starred_url": "https://api.github.com/users/sebpop/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sebpop/subscriptions", "organizations_url": "https://api.github.com/users/sebpop/orgs", "repos_url": "https://api.github.com/users/sebpop/repos", "events_url": "https://api.github.com/users/sebpop/events{/privacy}", "received_events_url": "https://api.github.com/users/sebpop/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8c131b3b215b9f33e4a46ed19471aeb4d1c6c0d6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8c131b3b215b9f33e4a46ed19471aeb4d1c6c0d6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8c131b3b215b9f33e4a46ed19471aeb4d1c6c0d6"}], "stats": {"total": 48, "additions": 48, "deletions": 0}, "files": [{"sha": "5fe83221be6f224a650d939e6a2ff3b3485509ae", "filename": "gcc/ChangeLog.graphite", "status": "modified", "additions": 48, "deletions": 0, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/25c57e8357df417a7a7032100f29aa735a70c987/gcc%2FChangeLog.graphite", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/25c57e8357df417a7a7032100f29aa735a70c987/gcc%2FChangeLog.graphite", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog.graphite?ref=25c57e8357df417a7a7032100f29aa735a70c987", "patch": "@@ -1,3 +1,51 @@\n+2010-05-27  Tobias Grosser  <grosser@fim.uni-passau.de>\n+\t    Antoniu Pop  <antoniu.pop@gmail.com>\n+\n+\t* Makefile.in (OBJS-common): Add refined-regions.o.\n+\t(refined-regions.o): New.\n+\t(graphite-scop-detection.o): Use refined-regions.h.\n+\t* graphite-scop-detection.c: Include refined-regions.h\n+\t(build_scops): Also build the refined region tree.\n+\t* refined-regions.c: New. Adds an algorithm to detect refined\n+\tregions.\n+\t(print_refined_region): New.\n+\t(debug_refined_region): New.\n+\t(refined_region_contains_bb_p): New.\n+\t(refined_region_contains_region_p): New.\n+\t(is_common_df): New.\n+\t(struct find_regions_global_data): New.\n+\t(is_region): New.\n+\t(typedef struct bb_bb_def): New.\n+\t(new_bb_bb_def): New.\n+\t(bb_bb_map_hash): New.\n+\t(eq_bb_bb_map): New.\n+\t(find_new_bb): New.\n+\t(bb_reg_def): New.\n+\t(new_bb_reg_def): New.\n+\t(bb_reg_map_hash): New.\n+\t(eq_bb_reg_map): New.\n+\t(find_new_region): New.\n+\t(insert_new_reg): New.\n+\t(insert_new_bb): New.\n+\t(insert_shortcut): New.\n+\t(get_next_postdom): New.\n+\t(create_region): New.\n+\t(find_regions_with_entry): New.\n+\t(find_regions_adc): New.\n+\t(find_regions): New.\n+\t(get_topmost_parent): New.\n+\t(build_regions_tree): New.\n+\t(calculate_region_tree): New.\n+\t(free_region_tree): New.\n+\t* refined-regions.h: New.\n+\t(struct refined_region): New.\n+\t(calculate_region_tree): New.\n+\t(free_region_tree): New.\n+\t(refined_region_contains_bb_p): New.\n+\t(refined_region_contains_region_p): New.\n+\t(print_refined_region): New.\n+\t(debug_refined_region): New.\n+\n 2010-05-26  Sebastian Pop  <sebastian.pop@amd.com>\n \n \t* graphite-clast-to-gimple.c (graphite_create_new_loop_guard): Use"}]}