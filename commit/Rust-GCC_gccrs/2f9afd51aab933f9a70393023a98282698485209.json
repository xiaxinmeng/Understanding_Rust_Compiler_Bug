{"sha": "2f9afd51aab933f9a70393023a98282698485209", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmY5YWZkNTFhYWI5MzNmOWE3MDM5MzAyM2E5ODI4MjY5ODQ4NTIwOQ==", "commit": {"author": {"name": "Kriang Lerdsuwanakij", "email": "lerdsuwa@users.sourceforge.net", "date": "2003-12-29T10:16:32Z"}, "committer": {"name": "Kriang Lerdsuwanakij", "email": "lerdsuwa@gcc.gnu.org", "date": "2003-12-29T10:16:32Z"}, "message": "re PR c++/12403 (ICE in push_template_decl_real on member function template specialization)\n\n\tPR c++/12403\n\t* parser.c (cp_parser_template_declaration_after_export): Set up\n\ttemplate specialization scope in case of explicit specialization.\n\n\t* g++.dg/parse/explicit1.C: New test.\n\t* g++.old-deja/g++.pt/explicit71.C: Adjust expected error.\n\nFrom-SVN: r75199", "tree": {"sha": "6da062115f5475970431106ff0525aaa4ca98272", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6da062115f5475970431106ff0525aaa4ca98272"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2f9afd51aab933f9a70393023a98282698485209", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2f9afd51aab933f9a70393023a98282698485209", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2f9afd51aab933f9a70393023a98282698485209", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2f9afd51aab933f9a70393023a98282698485209/comments", "author": null, "committer": null, "parents": [{"sha": "24a4a0338aa591091fbbaaf39de0e31529600bbd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/24a4a0338aa591091fbbaaf39de0e31529600bbd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/24a4a0338aa591091fbbaaf39de0e31529600bbd"}], "stats": {"total": 37, "additions": 32, "deletions": 5}, "files": [{"sha": "1cceeb84435da6a709dbb5eda292c71271d101ae", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f9afd51aab933f9a70393023a98282698485209/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f9afd51aab933f9a70393023a98282698485209/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=2f9afd51aab933f9a70393023a98282698485209", "patch": "@@ -1,3 +1,9 @@\n+2003-12-29  Kriang Lerdsuwanakij  <lerdsuwa@users.sourceforge.net>\n+\n+\tPR c++/12403\n+\t* parser.c (cp_parser_template_declaration_after_export): Set up\n+\ttemplate specialization scope in case of explicit specialization.\n+\n 2003-12-28  Mark Mitchell  <mark@codesourcery.com>\n \n \tPR c++/13081"}, {"sha": "46907ecb5bbf7c7a922d6b7b862ad366e3132631", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f9afd51aab933f9a70393023a98282698485209/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f9afd51aab933f9a70393023a98282698485209/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=2f9afd51aab933f9a70393023a98282698485209", "patch": "@@ -13961,19 +13961,23 @@ cp_parser_template_declaration_after_export (cp_parser* parser, bool member_p)\n   if (!cp_parser_require (parser, CPP_LESS, \"`<'\"))\n     return;\n       \n-  /* Parse the template parameters.  */\n-  begin_template_parm_list ();\n   /* If the next token is `>', then we have an invalid\n      specialization.  Rather than complain about an invalid template\n      parameter, issue an error message here.  */\n   if (cp_lexer_next_token_is (parser->lexer, CPP_GREATER))\n     {\n       cp_parser_error (parser, \"invalid explicit specialization\");\n+      begin_specialization ();\n       parameter_list = NULL_TREE;\n     }\n   else\n-    parameter_list = cp_parser_template_parameter_list (parser);\n-  parameter_list = end_template_parm_list (parameter_list);\n+    {\n+      /* Parse the template parameters.  */\n+      begin_template_parm_list ();\n+      parameter_list = cp_parser_template_parameter_list (parser);\n+      parameter_list = end_template_parm_list (parameter_list);\n+    }\n+\n   /* Look for the `>'.  */\n   cp_parser_skip_until_found (parser, CPP_GREATER, \"`>'\");\n   /* We just processed one more parameter list.  */"}, {"sha": "14faa0dc2151ad76f2221c3c4c5347e765875fdd", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f9afd51aab933f9a70393023a98282698485209/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f9afd51aab933f9a70393023a98282698485209/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=2f9afd51aab933f9a70393023a98282698485209", "patch": "@@ -1,3 +1,9 @@\n+2003-12-29  Kriang Lerdsuwanakij  <lerdsuwa@users.sourceforge.net>\n+\n+\tPR c++/12403\n+\t* g++.dg/parse/explicit1.C: New test.\n+\t* g++.old-deja/g++.pt/explicit71.C: Adjust expected error.\n+\n 2003-12-28  Mark Mitchell  <mark@codesourcery.com>\n \n \tPR c++/13081"}, {"sha": "ced2adc3dc091006a786e87ee014d4269d9d99b7", "filename": "gcc/testsuite/g++.dg/parse/explicit1.C", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f9afd51aab933f9a70393023a98282698485209/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fexplicit1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f9afd51aab933f9a70393023a98282698485209/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fexplicit1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fexplicit1.C?ref=2f9afd51aab933f9a70393023a98282698485209", "patch": "@@ -0,0 +1,11 @@\n+// { dg-do compile }\n+\n+// Origin: stefaandr@hotmail.com\n+\n+// PR c++/12403: ICE when explicit specialization is not in\n+// namespace scope.\n+\n+struct foo { \n+        template<typename T> void bar (T &t) {}\n+        template<> void bar<double>(double &t) {} // { dg-error \"explicit|non-namespace|member\" }\n+};"}, {"sha": "03b879433b5890f2d4c704efb030f7616907b494", "filename": "gcc/testsuite/g++.old-deja/g++.pt/explicit71.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f9afd51aab933f9a70393023a98282698485209/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fexplicit71.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f9afd51aab933f9a70393023a98282698485209/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fexplicit71.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fexplicit71.C?ref=2f9afd51aab933f9a70393023a98282698485209", "patch": "@@ -12,4 +12,4 @@ class bug {\n };\n template <class X> \n template <>\t\t\t// { dg-error \"\" } invalid specialization\n-class bug<X>::a<char> {};\t\n+class bug<X>::a<char> {};\t// { dg-error \"\" }"}]}