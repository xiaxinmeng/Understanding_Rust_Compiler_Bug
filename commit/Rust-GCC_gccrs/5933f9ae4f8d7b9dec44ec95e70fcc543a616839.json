{"sha": "5933f9ae4f8d7b9dec44ec95e70fcc543a616839", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTkzM2Y5YWU0ZjhkN2I5ZGVjNDRlYzk1ZTcwZmNjNTQzYTYxNjgzOQ==", "commit": {"author": {"name": "Dominique d'Humieres", "email": "dominiq@lps.ens.fr", "date": "2014-06-10T11:42:38Z"}, "committer": {"name": "Dominique d'Humieres", "email": "dominiq@gcc.gnu.org", "date": "2014-06-10T11:42:38Z"}, "message": "re PR fortran/41936 (Memory leakage with allocatables and user-defined operators)\n\n2014-06-10  Dominique d'Humieres <dominiq@lps.ens.fr>\n\t    Mikael Morin <mikael@gcc.gnu.org>\n\n\tPR fortran/41936\ngcc/fortran/\n\t* trans-expr.c (gfc_conv_expr_reference): Deallocate array\n\tcomponents.\n\ngcc/testsuite/\n\t* gfortran.dg/class_array_15.f03: Check memory leaks.\n\n\nCo-Authored-By: Mikael Morin <mikael@gcc.gnu.org>\n\nFrom-SVN: r211405", "tree": {"sha": "2441a277b636ff7fa134f35b5860ed41ba4af0ec", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2441a277b636ff7fa134f35b5860ed41ba4af0ec"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5933f9ae4f8d7b9dec44ec95e70fcc543a616839", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5933f9ae4f8d7b9dec44ec95e70fcc543a616839", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5933f9ae4f8d7b9dec44ec95e70fcc543a616839", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5933f9ae4f8d7b9dec44ec95e70fcc543a616839/comments", "author": {"login": "DominiquedHumieres", "id": 18394944, "node_id": "MDQ6VXNlcjE4Mzk0OTQ0", "avatar_url": "https://avatars.githubusercontent.com/u/18394944?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DominiquedHumieres", "html_url": "https://github.com/DominiquedHumieres", "followers_url": "https://api.github.com/users/DominiquedHumieres/followers", "following_url": "https://api.github.com/users/DominiquedHumieres/following{/other_user}", "gists_url": "https://api.github.com/users/DominiquedHumieres/gists{/gist_id}", "starred_url": "https://api.github.com/users/DominiquedHumieres/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DominiquedHumieres/subscriptions", "organizations_url": "https://api.github.com/users/DominiquedHumieres/orgs", "repos_url": "https://api.github.com/users/DominiquedHumieres/repos", "events_url": "https://api.github.com/users/DominiquedHumieres/events{/privacy}", "received_events_url": "https://api.github.com/users/DominiquedHumieres/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "5625721fbbf403e891fd6988bdf62fa0ad24c6be", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5625721fbbf403e891fd6988bdf62fa0ad24c6be", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5625721fbbf403e891fd6988bdf62fa0ad24c6be"}], "stats": {"total": 30, "additions": 30, "deletions": 0}, "files": [{"sha": "bdc102b4b54041ec55a9f6c19f7fecb071d68593", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5933f9ae4f8d7b9dec44ec95e70fcc543a616839/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5933f9ae4f8d7b9dec44ec95e70fcc543a616839/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=5933f9ae4f8d7b9dec44ec95e70fcc543a616839", "patch": "@@ -1,3 +1,10 @@\n+2014-06-10  Dominique d'Humieres <dominiq@lps.ens.fr>\n+\t    Mikael Morin <mikael@gcc.gnu.org>\n+\n+\tPR fortran/41936\n+\t* trans-expr.c (gfc_conv_expr_reference): Deallocate array\n+\tcomponents.\n+\n 2014-06-10  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR fortran/60928"}, {"sha": "5338b0901a03f1b3aff3e0c61055c56e0675fb51", "filename": "gcc/fortran/trans-expr.c", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5933f9ae4f8d7b9dec44ec95e70fcc543a616839/gcc%2Ffortran%2Ftrans-expr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5933f9ae4f8d7b9dec44ec95e70fcc543a616839/gcc%2Ffortran%2Ftrans-expr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-expr.c?ref=5933f9ae4f8d7b9dec44ec95e70fcc543a616839", "patch": "@@ -6506,6 +6506,20 @@ gfc_conv_expr_reference (gfc_se * se, gfc_expr * expr)\n \n   /* Take the address of that value.  */\n   se->expr = gfc_build_addr_expr (NULL_TREE, var);\n+  if (expr->ts.type == BT_DERIVED && expr->rank\n+      && !gfc_is_finalizable (expr->ts.u.derived, NULL)\n+      && expr->ts.u.derived->attr.alloc_comp\n+      && expr->expr_type != EXPR_VARIABLE)\n+    {\n+      tree tmp;\n+\n+      tmp = build_fold_indirect_ref_loc (input_location, se->expr);\n+      tmp = gfc_deallocate_alloc_comp (expr->ts.u.derived, tmp, expr->rank);\n+      \n+      /* The components shall be deallocated before\n+         their containing entity.  */\n+      gfc_prepend_expr_to_block (&se->post, tmp);\n+    }\n }\n \n "}, {"sha": "175bbeb6fc403db8c2b38d3a58ce8fa0648efa7b", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5933f9ae4f8d7b9dec44ec95e70fcc543a616839/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5933f9ae4f8d7b9dec44ec95e70fcc543a616839/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=5933f9ae4f8d7b9dec44ec95e70fcc543a616839", "patch": "@@ -1,3 +1,9 @@\n+2014-06-10  Dominique d'Humieres <dominiq@lps.ens.fr>\n+\t    Mikael Morin <mikael@gcc.gnu.org>\n+\n+\tPR fortran/41936\n+\t* gfortran.dg/class_array_15.f03: Check memory leaks.\n+\n 2014-06-10  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/57186"}, {"sha": "d3a123259fcaeffb5b2d04c10730ab637dad9fa9", "filename": "gcc/testsuite/gfortran.dg/class_array_15.f03", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5933f9ae4f8d7b9dec44ec95e70fcc543a616839/gcc%2Ftestsuite%2Fgfortran.dg%2Fclass_array_15.f03", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5933f9ae4f8d7b9dec44ec95e70fcc543a616839/gcc%2Ftestsuite%2Fgfortran.dg%2Fclass_array_15.f03", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fclass_array_15.f03?ref=5933f9ae4f8d7b9dec44ec95e70fcc543a616839", "patch": "@@ -1,4 +1,5 @@\n ! { dg-do run }\n+! { dg-options \"-fdump-tree-original\" }\n !\n ! Tests the fixes for three bugs with the same underlying cause.  All are regressions\n ! that come about because class array elements end up with a different tree type\n@@ -114,3 +115,5 @@ subroutine pr54992  ! This test remains as the original.\n   bh => bhGet(b,instance=2)\n   if (loc (b) .ne. loc(bh%hostNode)) call abort\n end\n+! { dg-final { scan-tree-dump-times \"builtin_free\" 12 \"original\" } }\n+! { dg-final { cleanup-tree-dump \"original\" } }"}]}