{"sha": "d7baf647899d1919a313fd27ed6271bea77a1cc2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDdiYWY2NDc4OTlkMTkxOWEzMTNmZDI3ZWQ2MjcxYmVhNzdhMWNjMg==", "commit": {"author": {"name": "Mikael Morin", "email": "mikael.morin@sfr.fr", "date": "2011-10-07T20:26:11Z"}, "committer": {"name": "Mikael Morin", "email": "mikael@gcc.gnu.org", "date": "2011-10-07T20:26:11Z"}, "message": "trans-array.c (gfc_walk_variable_expr): Remove scalar coarray handling.\n\n\t* trans-array.c (gfc_walk_variable_expr): Remove scalar coarray\n\thandling.  Don't reset array ref's corank and codimensions' types\n\tin the full array ref case.  Update loop upper limit.\n\tRemove DIMEN_THIS_IMAGE case.  Remove unnecessary conditions.\n\nFrom-SVN: r179691", "tree": {"sha": "efac8b31e6f6c7744e9653f42bfac4a5a35aebb4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/efac8b31e6f6c7744e9653f42bfac4a5a35aebb4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d7baf647899d1919a313fd27ed6271bea77a1cc2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d7baf647899d1919a313fd27ed6271bea77a1cc2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d7baf647899d1919a313fd27ed6271bea77a1cc2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d7baf647899d1919a313fd27ed6271bea77a1cc2/comments", "author": null, "committer": null, "parents": [{"sha": "677e2daebff2bde08d013511f34db6a56ab5f774", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/677e2daebff2bde08d013511f34db6a56ab5f774", "html_url": "https://github.com/Rust-GCC/gccrs/commit/677e2daebff2bde08d013511f34db6a56ab5f774"}], "stats": {"total": 32, "additions": 10, "deletions": 22}, "files": [{"sha": "6a0b284d10fc28848b89bc804f0b7cf013c93f52", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d7baf647899d1919a313fd27ed6271bea77a1cc2/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d7baf647899d1919a313fd27ed6271bea77a1cc2/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=d7baf647899d1919a313fd27ed6271bea77a1cc2", "patch": "@@ -1,3 +1,10 @@\n+2011-10-07  Mikael Morin  <mikael.morin@sfr.fr>\n+\n+\t* trans-array.c (gfc_walk_variable_expr): Remove scalar coarray\n+\thandling.  Don't reset array ref's corank and codimensions' types\n+\tin the full array ref case.  Update loop upper limit.\n+\tRemove DIMEN_THIS_IMAGE case.  Remove unnecessary conditions.\n+\n 2011-10-07  Mikael Morin  <mikael.morin@sfr.fr>\n \n \t* trans.h (gfc_ss_info): Remove codimen field."}, {"sha": "87d5200813b6ff7ce100c785e784ef4c8630a56c", "filename": "gcc/fortran/trans-array.c", "status": "modified", "additions": 3, "deletions": 22, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d7baf647899d1919a313fd27ed6271bea77a1cc2/gcc%2Ffortran%2Ftrans-array.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d7baf647899d1919a313fd27ed6271bea77a1cc2/gcc%2Ffortran%2Ftrans-array.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-array.c?ref=d7baf647899d1919a313fd27ed6271bea77a1cc2", "patch": "@@ -7612,12 +7612,6 @@ gfc_walk_variable_expr (gfc_ss * ss, gfc_expr * expr)\n \n       ar = &ref->u.ar;\n \n-      if (ar->as->rank == 0 && ref->next != NULL)\n-\t{\n-\t  /* Scalar coarray.  */\n-\t  continue;\n-\t}\n-\n       switch (ar->type)\n \t{\n \tcase AR_ELEMENT:\n@@ -7632,7 +7626,6 @@ gfc_walk_variable_expr (gfc_ss * ss, gfc_expr * expr)\n \t  /* Make sure array is the same as array(:,:), this way\n \t     we don't need to special case all the time.  */\n \t  ar->dimen = ar->as->rank;\n-\t  ar->codimen = 0;\n \t  for (n = 0; n < ar->dimen; n++)\n \t    {\n \t      ar->dimen_type[n] = DIMEN_RANGE;\n@@ -7641,14 +7634,6 @@ gfc_walk_variable_expr (gfc_ss * ss, gfc_expr * expr)\n \t      gcc_assert (ar->end[n] == NULL);\n \t      gcc_assert (ar->stride[n] == NULL);\n \t    }\n-\t  for (n = ar->dimen; n < ar->dimen + ar->as->corank; n++)\n-\t    {\n-\t      newss->data.info.dim[n] = n;\n-\t      ar->dimen_type[n] = DIMEN_RANGE;\n-\n-\t      gcc_assert (ar->start[n] == NULL);\n-\t      gcc_assert (ar->end[n] == NULL);\n-\t    }\n \t  ss = newss;\n \t  break;\n \n@@ -7657,14 +7642,12 @@ gfc_walk_variable_expr (gfc_ss * ss, gfc_expr * expr)\n \t  newss->data.info.ref = ref;\n \n \t  /* We add SS chains for all the subscripts in the section.  */\n-\t  for (n = 0; n < ar->dimen + ar->codimen; n++)\n+\t  for (n = 0; n < ar->dimen; n++)\n \t    {\n \t      gfc_ss *indexss;\n \n \t      switch (ar->dimen_type[n])\n \t\t{\n-\t        case DIMEN_THIS_IMAGE:\n-\t\t  continue;\n \t\tcase DIMEN_ELEMENT:\n \t\t  /* Add SS for elemental (scalar) subscripts.  */\n \t\t  gcc_assert (ar->start[n]);\n@@ -7677,8 +7660,7 @@ gfc_walk_variable_expr (gfc_ss * ss, gfc_expr * expr)\n                   /* We don't add anything for sections, just remember this\n                      dimension for later.  */\n \t\t  newss->data.info.dim[newss->data.info.dimen] = n;\n-\t\t  if (n < ar->dimen)\n-\t\t    newss->data.info.dimen++;\n+\t\t  newss->data.info.dimen++;\n \t\t  break;\n \n \t\tcase DIMEN_VECTOR:\n@@ -7689,8 +7671,7 @@ gfc_walk_variable_expr (gfc_ss * ss, gfc_expr * expr)\n \t\t  indexss->loop_chain = gfc_ss_terminator;\n \t\t  newss->data.info.subscript[n] = indexss;\n \t\t  newss->data.info.dim[newss->data.info.dimen] = n;\n-\t\t  if (n < ar->dimen)\n-\t\t    newss->data.info.dimen++;\n+\t\t  newss->data.info.dimen++;\n \t\t  break;\n \n \t\tdefault:"}]}