{"sha": "4f647d52ec4534ff30bdb0729217ffd8ee899010", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGY2NDdkNTJlYzQ1MzRmZjMwYmRiMDcyOTIxN2ZmZDhlZTg5OTAxMA==", "commit": {"author": {"name": "Alexandre Petit-Bianco", "email": "apbianco@redhat.com", "date": "2002-03-02T17:58:05Z"}, "committer": {"name": "Alexandre Petit-Bianco", "email": "apbianco@gcc.gnu.org", "date": "2002-03-02T17:58:05Z"}, "message": "Fix for PR java/5758, java/5632:\n\n2002-02-28  Alexandre Petit-Bianco  <apbianco@redhat.com>\n\n\tFix for PR java/5758, java/5632:\n\t* jcf-parse.c (load_class): Renamed local variable, consider `.' an\n\tinner-class separator too.\n\t* parse.y (do_resolve_class): New local `decl_result.'\n\tProgressively build a name for what can have been loaded.\n\nFrom-SVN: r50228", "tree": {"sha": "fb4b01019fd8d7005ba7344b0bc91da071cdedb9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fb4b01019fd8d7005ba7344b0bc91da071cdedb9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4f647d52ec4534ff30bdb0729217ffd8ee899010", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4f647d52ec4534ff30bdb0729217ffd8ee899010", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4f647d52ec4534ff30bdb0729217ffd8ee899010", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4f647d52ec4534ff30bdb0729217ffd8ee899010/comments", "author": null, "committer": null, "parents": [{"sha": "86855e8c182e8ca97b9fa622b41bb697b9aee5da", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/86855e8c182e8ca97b9fa622b41bb697b9aee5da", "html_url": "https://github.com/Rust-GCC/gccrs/commit/86855e8c182e8ca97b9fa622b41bb697b9aee5da"}], "stats": {"total": 50, "additions": 41, "deletions": 9}, "files": [{"sha": "57ad8d4ce771d2f3678327f14a8022ca445b83bc", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f647d52ec4534ff30bdb0729217ffd8ee899010/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f647d52ec4534ff30bdb0729217ffd8ee899010/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=4f647d52ec4534ff30bdb0729217ffd8ee899010", "patch": "@@ -2,6 +2,14 @@\n \n \t* expr.c (build_java_arraystore_check): Fix formatting.\n \n+2002-02-28  Alexandre Petit-Bianco  <apbianco@redhat.com>\n+\n+\tFix for PR java/5758, java/5632:\n+\t* jcf-parse.c (load_class): Renamed local variable, consider `.' an\n+\tinner-class separator too.\n+\t* parse.y (do_resolve_class): New local `decl_result.'\n+\tProgressively build a name for what can have been loaded.\n+\n 2002-02-28  Bryce McKinlay  <bryce@waitaki.otago.ac.nz>\n \n \t* expr.c (java_array_data_offset): Removed function."}, {"sha": "484f79ce7a809005aed054059151b27251d6a776", "filename": "gcc/java/jcf-parse.c", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f647d52ec4534ff30bdb0729217ffd8ee899010/gcc%2Fjava%2Fjcf-parse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f647d52ec4534ff30bdb0729217ffd8ee899010/gcc%2Fjava%2Fjcf-parse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fjcf-parse.c?ref=4f647d52ec4534ff30bdb0729217ffd8ee899010", "patch": "@@ -669,20 +669,20 @@ load_class (class_or_name, verbose)\n   saved = name;\n   while (1)\n     {\n-      char *dollar;\n+      char *separator;\n \n       if ((class_loaded = read_class (name)))\n \tbreak;\n \n       /* We failed loading name. Now consider that we might be looking\n-\t for a inner class but it's only available in source for in\n-\t its enclosing context. */\n-      if ((dollar = strrchr (IDENTIFIER_POINTER (name), '$')))\n+\t for a inner class. */\n+      if ((separator = strrchr (IDENTIFIER_POINTER (name), '$'))\n+\t  || (separator = strrchr (IDENTIFIER_POINTER (name), '.')))\n \t{\n-\t  int c = *dollar;\n-\t  *dollar = '\\0';\n+\t  int c = *separator;\n+\t  *separator = '\\0';\n \t  name = get_identifier (IDENTIFIER_POINTER (name));\n-\t  *dollar = c;\n+\t  *separator = c;\n \t}\n       /* Otherwise, we failed, we bail. */\n       else"}, {"sha": "0b5be0921eaba8f50395b9b695bd22cae54f6f1d", "filename": "gcc/java/parse.y", "status": "modified", "additions": 26, "deletions": 2, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f647d52ec4534ff30bdb0729217ffd8ee899010/gcc%2Fjava%2Fparse.y", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f647d52ec4534ff30bdb0729217ffd8ee899010/gcc%2Fjava%2Fparse.y", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fparse.y?ref=4f647d52ec4534ff30bdb0729217ffd8ee899010", "patch": "@@ -5745,6 +5745,7 @@ do_resolve_class (enclosing, class_type, decl, cl)\n {\n   tree new_class_decl = NULL_TREE, super = NULL_TREE;\n   tree saved_enclosing_type = enclosing ? TREE_TYPE (enclosing) : NULL_TREE;\n+  tree decl_result;\n   struct hash_table _ht, *circularity_hash = &_ht;\n \n   /* This hash table is used to register the classes we're going\n@@ -5841,9 +5842,32 @@ do_resolve_class (enclosing, class_type, decl, cl)\n       if (check_pkg_class_access (TYPE_NAME (class_type), cl, true))\n         return NULL_TREE;\n     }\n-  \n+\n   /* 6- Last call for a resolution */\n-  return IDENTIFIER_CLASS_VALUE (TYPE_NAME (class_type));\n+  decl_result = IDENTIFIER_CLASS_VALUE (TYPE_NAME (class_type));\n+\n+  /* The final lookup might have registered a.b.c into a.b$c If we\n+     failed at the first lookup, progressively change the name if\n+     applicable and use the matching DECL instead. */\n+  if (!decl_result && QUALIFIED_P (TYPE_NAME (class_type)))\n+    {\n+      tree name = TYPE_NAME (class_type);\n+      char *separator;\n+      do {\n+\n+       /* Reach the last '.', and if applicable, replace it by a `$' and\n+          see if this exists as a type. */\n+       if ((separator = strrchr (IDENTIFIER_POINTER (name), '.')))\n+         {\n+           int c = *separator;\n+           *separator = '$';\n+           name = get_identifier (IDENTIFIER_POINTER (name));\n+           *separator = c;\n+           decl_result = IDENTIFIER_CLASS_VALUE (name);\n+         }\n+      } while (!decl_result && separator);\n+    }\n+  return decl_result;\n }\n \n static tree"}]}