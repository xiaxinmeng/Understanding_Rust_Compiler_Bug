{"sha": "40de31cfe4e8959e5f92c82aa34550693897d29c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDBkZTMxY2ZlNGU4OTU5ZTVmOTJjODJhYTM0NTUwNjkzODk3ZDI5Yw==", "commit": {"author": {"name": "Manuel L\u00f3pez-Ib\u00e1\u00f1ez", "email": "manu@gcc.gnu.org", "date": "2015-05-16T12:30:04Z"}, "committer": {"name": "Manuel L\u00f3pez-Ib\u00e1\u00f1ez", "email": "manu@gcc.gnu.org", "date": "2015-05-16T12:30:04Z"}, "message": "re PR fortran/44054 (Handle -Werror, -Werror=, -fdiagnostics-show-option, !GCC$ diagnostic (pragmas) and color)\n\ngcc/fortran/ChangeLog:\n\n2015-05-16  Manuel L\u00f3pez-Ib\u00e1\u00f1ez  <manu@gcc.gnu.org>\n\n\tPR fortran/44054\n\n\tReplace all calls to gfc_notify_std_1 with gfc_notify_std and\n\tgfc_warning_1 with gfc_warning.\n\t* decl.c (gfc_verify_c_interop_param): Here.\n\t* resolve.c (resolve_branch): Here.\n\t(resolve_fl_derived): Here.\n\t* dependency.c (gfc_check_argument_var_dependency):\n\t* scanner.c (preprocessor_line): Use gfc_warning_now_at. Fix line\n\tcounter and locations before and after warning.\n\t* gfortran.h (gfc_warning_1, gfc_warning_now_1, gfc_notify_std_1):\n\tDelete.\n\t(gfc_warning_now_at): Declare.\n\t* error.c (gfc_warning_1): Delete.\n\t(gfc_notify_std_1): Delete.\n\t(gfc_warning_now_1): Delete.\n\t(gfc_format_decoder): Handle two locations.\n\t(gfc_diagnostic_build_prefix): Rename as\n\tgfc_diagnostic_build_kind_prefix.\n\t(gfc_diagnostic_build_locus_prefix): Take an expanded_location\n\tinstead of diagnostic_info.\n\t(gfc_diagnostic_build_locus_prefix): Add overload that takes two\n\texpanded_location.\n\t(gfc_diagnostic_starter): Handle two locations.\n\t(gfc_warning_now_at): New.\n\t(gfc_diagnostics_init): Initialize caret_chars array.\n\t(gfc_diagnostics_finish): Reset caret_chars array to default.\n\ngcc/cp/ChangeLog:\n\n2015-05-16  Manuel L\u00f3pez-Ib\u00e1\u00f1ez  <manu@gcc.gnu.org>\n\n\tPR fortran/44054\n\t* error.c (cp_diagnostic_starter): Use diagnostic_location\n\tfunction.\n\t(cp_print_error_function): Likewise.\n\t(cp_printer): Replace locus pointer with accessor function.\n\ngcc/c/ChangeLog:\n\n2015-05-16  Manuel L\u00f3pez-Ib\u00e1\u00f1ez  <manu@gcc.gnu.org>\n\n\tPR fortran/44054\n\t* c-objc-common.c (c_tree_printer): Replace locus pointer with\n\taccessor function.\n\ngcc/ChangeLog:\n\n2015-05-16  Manuel L\u00f3pez-Ib\u00e1\u00f1ez  <manu@gcc.gnu.org>\n\n\tPR fortran/44054\n\t* tree-pretty-print.c (percent_K_format): Replace locus pointer\n\twith accessor function.\n\t* tree-diagnostic.c (diagnostic_report_current_function): Use\n\tdiagnostic_location function.\n\t(maybe_unwind_expanded_macro_loc): Likewise.\n\t(virt_loc_aware_diagnostic_finalizer): Likewise.\n\t(default_tree_printer): Replace locus pointer with accessor function.\n\t* diagnostic.c (diagnostic_initialize): Initialize caret_chars array.\n\t(diagnostic_set_info_translated): Initialize second location.\n\t(diagnostic_build_prefix): Use CARET_LINE_MARGIN.\n\t(diagnostic_show_locus): Handle two locations. Call\n\tdiagnostic_print_caret_line.\n\t(diagnostic_print_caret_line): New.\n\t(default_diagnostic_starter): Use diagnostic_location function.\n\t(diagnostic_report_diagnostic): Use diagnostic_location function.\n\t(verbatim): Do not set text.locus.\n\t* diagnostic.h (struct diagnostic_info): Remove location field.\n\t(struct diagnostic_context): Make caret_chars an array of two.\n\t(diagnostic_location): New inline.\n\t(diagnostic_expand_location): Handle two locations.\n\t(diagnostic_same_line): New inline.\n\t(diagnostic_print_caret_line): Declare.\n\t(CARET_LINE_MARGIN): New constant.\n\t* pretty-print.c (pp_printf): Do not set text.locus.\n\t(pp_verbatim): Do not set text.locus.\n\t* pretty-print.h (MAX_LOCATIONS_PER_MESSAGE): New constant.\n\t(struct text_info): Replace locus pointer with locations\n\tarray. Add accessor functions.\n\ngcc/testsuite/ChangeLog:\n\n2015-05-16  Manuel L\u00f3pez-Ib\u00e1\u00f1ez  <manu@gcc.gnu.org>\n\n\tPR fortran/44054\n\t* lib/gfortran-dg.exp: Update regex to handle two locations for\n\tthe same diagnostic without caret.\n\t* gfortran.dg/badline.f: Test also that line numbers are correct\n\tbefore and after \"left but not entered\" warning.\n\nFrom-SVN: r223236", "tree": {"sha": "d5fb030b786fbff87791b001e5569a9bc1e25370", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d5fb030b786fbff87791b001e5569a9bc1e25370"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/40de31cfe4e8959e5f92c82aa34550693897d29c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/40de31cfe4e8959e5f92c82aa34550693897d29c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/40de31cfe4e8959e5f92c82aa34550693897d29c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/40de31cfe4e8959e5f92c82aa34550693897d29c/comments", "author": null, "committer": null, "parents": [{"sha": "26c666565d347bd91fb86466d68ed578ac798ea6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/26c666565d347bd91fb86466d68ed578ac798ea6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/26c666565d347bd91fb86466d68ed578ac798ea6"}], "stats": {"total": 84, "additions": 84, "deletions": 0}, "files": [{"sha": "1f2a4ab686bae34868ab46c7e4f2dd1217d10645", "filename": "gcc/ChangeLog", "status": "modified", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40de31cfe4e8959e5f92c82aa34550693897d29c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40de31cfe4e8959e5f92c82aa34550693897d29c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=40de31cfe4e8959e5f92c82aa34550693897d29c", "patch": "@@ -1,3 +1,35 @@\n+2015-05-16  Manuel L\u00f3pez-Ib\u00e1\u00f1ez  <manu@gcc.gnu.org>\n+\n+\tPR fortran/44054\n+\t* tree-pretty-print.c (percent_K_format): Replace locus pointer\n+\twith accessor function.\n+\t* tree-diagnostic.c (diagnostic_report_current_function): Use\n+\tdiagnostic_location function.\n+\t(maybe_unwind_expanded_macro_loc): Likewise.\n+\t(virt_loc_aware_diagnostic_finalizer): Likewise.\n+\t(default_tree_printer): Replace locus pointer with accessor function.\n+\t* diagnostic.c (diagnostic_initialize): Initialize caret_chars array.\n+\t(diagnostic_set_info_translated): Initialize second location.\n+\t(diagnostic_build_prefix): Use CARET_LINE_MARGIN.\n+\t(diagnostic_show_locus): Handle two locations. Call\n+\tdiagnostic_print_caret_line.\n+\t(diagnostic_print_caret_line): New.\n+\t(default_diagnostic_starter): Use diagnostic_location function.\n+\t(diagnostic_report_diagnostic): Use diagnostic_location function.\n+\t(verbatim): Do not set text.locus.\n+\t* diagnostic.h (struct diagnostic_info): Remove location field.\n+\t(struct diagnostic_context): Make caret_chars an array of two.\n+\t(diagnostic_location): New inline.\n+\t(diagnostic_expand_location): Handle two locations.\n+\t(diagnostic_same_line): New inline.\n+\t(diagnostic_print_caret_line): Declare.\n+\t(CARET_LINE_MARGIN): New constant.\n+\t* pretty-print.c (pp_printf): Do not set text.locus.\n+\t(pp_verbatim): Do not set text.locus.\n+\t* pretty-print.h (MAX_LOCATIONS_PER_MESSAGE): New constant.\n+\t(struct text_info): Replace locus pointer with locations\n+\tarray. Add accessor functions.\n+\n 2015-05-16  Kugan Vivekanandarajah  <kuganv@linaro.org>\n \t    Zhenqiang Chen  <zhenqiang.chen@linaro.org>\n "}, {"sha": "6ef290f79333f7a0970d552aec50a505dab09812", "filename": "gcc/c/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40de31cfe4e8959e5f92c82aa34550693897d29c/gcc%2Fc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40de31cfe4e8959e5f92c82aa34550693897d29c/gcc%2Fc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2FChangeLog?ref=40de31cfe4e8959e5f92c82aa34550693897d29c", "patch": "@@ -1,3 +1,9 @@\n+2015-05-16  Manuel L\u00f3pez-Ib\u00e1\u00f1ez  <manu@gcc.gnu.org>\n+\n+\tPR fortran/44054\n+\t* c-objc-common.c (c_tree_printer): Replace locus pointer with\n+\taccessor function.\n+\n 2015-05-14  Marek Polacek  <polacek@redhat.com>\n \n \tPR c/66066"}, {"sha": "210b177046327488b55d7c9b15f207f528de29ec", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40de31cfe4e8959e5f92c82aa34550693897d29c/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40de31cfe4e8959e5f92c82aa34550693897d29c/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=40de31cfe4e8959e5f92c82aa34550693897d29c", "patch": "@@ -1,3 +1,11 @@\n+2015-05-16  Manuel L\u00f3pez-Ib\u00e1\u00f1ez  <manu@gcc.gnu.org>\n+\n+\tPR fortran/44054\n+\t* error.c (cp_diagnostic_starter): Use diagnostic_location\n+\tfunction.\n+\t(cp_print_error_function): Likewise.\n+\t(cp_printer): Replace locus pointer with accessor function.\n+\n 2015-05-12  David Malcolm  <dmalcolm@redhat.com>\n \n \t* parser.c (cp_parser_selection_statement): Add location and"}, {"sha": "7cff4760cac3426280f967818f37e105bbe6188d", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40de31cfe4e8959e5f92c82aa34550693897d29c/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40de31cfe4e8959e5f92c82aa34550693897d29c/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=40de31cfe4e8959e5f92c82aa34550693897d29c", "patch": "@@ -1,3 +1,33 @@\n+2015-05-16  Manuel L\u00f3pez-Ib\u00e1\u00f1ez  <manu@gcc.gnu.org>\n+\n+\tPR fortran/44054\n+\n+\tReplace all calls to gfc_notify_std_1 with gfc_notify_std and\n+\tgfc_warning_1 with gfc_warning.\n+\t* decl.c (gfc_verify_c_interop_param): Here.\n+\t* resolve.c (resolve_branch): Here.\n+\t(resolve_fl_derived): Here.\n+\t* dependency.c (gfc_check_argument_var_dependency):\n+\t* scanner.c (preprocessor_line): Use gfc_warning_now_at. Fix line\n+\tcounter and locations before and after warning.\n+\t* gfortran.h (gfc_warning_1, gfc_warning_now_1, gfc_notify_std_1):\n+\tDelete.\n+\t(gfc_warning_now_at): Declare.\n+\t* error.c (gfc_warning_1): Delete.\n+\t(gfc_notify_std_1): Delete.\n+\t(gfc_warning_now_1): Delete.\n+\t(gfc_format_decoder): Handle two locations.\n+\t(gfc_diagnostic_build_prefix): Rename as\n+\tgfc_diagnostic_build_kind_prefix.\n+\t(gfc_diagnostic_build_locus_prefix): Take an expanded_location\n+\tinstead of diagnostic_info.\n+\t(gfc_diagnostic_build_locus_prefix): Add overload that takes two\n+\texpanded_location.\n+\t(gfc_diagnostic_starter): Handle two locations.\n+\t(gfc_warning_now_at): New.\n+\t(gfc_diagnostics_init): Initialize caret_chars array.\n+\t(gfc_diagnostics_finish): Reset caret_chars array to default.\n+\n 2015-05-16  Mikael Morin  <mikael@gcc.gnu.org\n \t    Paul Thomas  <pault@gcc.gnu.org>\n "}, {"sha": "7260828346d5d7ec2ccafd7b963376e69cff94f2", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40de31cfe4e8959e5f92c82aa34550693897d29c/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40de31cfe4e8959e5f92c82aa34550693897d29c/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=40de31cfe4e8959e5f92c82aa34550693897d29c", "patch": "@@ -1,3 +1,11 @@\n+2015-05-16  Manuel L\u00f3pez-Ib\u00e1\u00f1ez  <manu@gcc.gnu.org>\n+\n+\tPR fortran/44054\n+\t* lib/gfortran-dg.exp: Update regex to handle two locations for\n+\tthe same diagnostic without caret.\n+\t* gfortran.dg/badline.f: Test also that line numbers are correct\n+\tbefore and after \"left but not entered\" warning.\n+\n 2015-05-16  Kugan Vivekanandarajah  <kuganv@linaro.org>\n \t    Zhenqiang Chen  <zhenqiang.chen@linaro.org>\n "}]}