{"sha": "7e47198b802ed52fb8bb314b75ddf3cd84b2d9f4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2U0NzE5OGI4MDJlZDUyZmI4YmIzMTRiNzVkZGYzY2Q4NGIyZDlmNA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2019-05-29T07:51:43Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2019-05-29T07:51:43Z"}, "message": "gimplify.c (struct gimplify_omp_ctx): Add clauses member.\n\n\t* gimplify.c (struct gimplify_omp_ctx): Add clauses member.\n\t(gimplify_scan_omp_clauses): Initialize ctx->clauses.\n\t(gimplify_adjust_omp_clauses_1): Transform lastprivate conditional\n\texplicit clause on combined parallel into implicit shared clause.\n\t(gimplify_adjust_omp_clauses): Move lastprivate conditional clause\n\tand firstprivate if the decl has one too from combined parallel to\n\tthe worksharing construct.\ngcc/testsuite/\n\t* c-c++-common/gomp/lastprivate-conditional-2.c (foo): Don't expect\n\tsorry on lastprivate conditional on parallel for.\n\t* c-c++-common/gomp/lastprivate-conditional-3.c (foo): Add tests for\n\tlastprivate conditional warnings on parallel for constructs.\n\t* c-c++-common/gomp/lastprivate-conditional-4.c: New test.\nlibgomp/\n\t* testsuite/libgomp.c-c++-common/lastprivate_conditional_4.c: Rename\n\tto ...\n\t* testsuite/libgomp.c-c++-common/lastprivate-conditional-4.c: ... this.\n\t* testsuite/libgomp.c-c++-common/lastprivate-conditional-5.c: New test.\n\t* testsuite/libgomp.c-c++-common/lastprivate-conditional-6.c: New test.\n\nFrom-SVN: r271733", "tree": {"sha": "e9533c1c58c656e54720467040cf9dc16c2c2968", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e9533c1c58c656e54720467040cf9dc16c2c2968"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7e47198b802ed52fb8bb314b75ddf3cd84b2d9f4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7e47198b802ed52fb8bb314b75ddf3cd84b2d9f4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7e47198b802ed52fb8bb314b75ddf3cd84b2d9f4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7e47198b802ed52fb8bb314b75ddf3cd84b2d9f4/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "357a352fe3a3a96b1a8c321f36a010e3798abdeb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/357a352fe3a3a96b1a8c321f36a010e3798abdeb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/357a352fe3a3a96b1a8c321f36a010e3798abdeb"}], "stats": {"total": 414, "additions": 411, "deletions": 3}, "files": [{"sha": "f008e7805de0a6120aefd19747c8ec232cd207c3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e47198b802ed52fb8bb314b75ddf3cd84b2d9f4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e47198b802ed52fb8bb314b75ddf3cd84b2d9f4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7e47198b802ed52fb8bb314b75ddf3cd84b2d9f4", "patch": "@@ -1,3 +1,13 @@\n+2019-05-29  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* gimplify.c (struct gimplify_omp_ctx): Add clauses member.\n+\t(gimplify_scan_omp_clauses): Initialize ctx->clauses.\n+\t(gimplify_adjust_omp_clauses_1): Transform lastprivate conditional\n+\texplicit clause on combined parallel into implicit shared clause.\n+\t(gimplify_adjust_omp_clauses): Move lastprivate conditional clause\n+\tand firstprivate if the decl has one too from combined parallel to\n+\tthe worksharing construct.\n+\n 2019-05-28  Bill Schmidt  <wschmidt@linux.ibm.com>\n \t    Michael Meissner  <meissner@linux.ibm.com>\n "}, {"sha": "539cc402af17ea8e465612a2fcd90f2f0d02278a", "filename": "gcc/gimplify.c", "status": "modified", "additions": 43, "deletions": 2, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e47198b802ed52fb8bb314b75ddf3cd84b2d9f4/gcc%2Fgimplify.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e47198b802ed52fb8bb314b75ddf3cd84b2d9f4/gcc%2Fgimplify.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimplify.c?ref=7e47198b802ed52fb8bb314b75ddf3cd84b2d9f4", "patch": "@@ -205,6 +205,7 @@ struct gimplify_omp_ctx\n   struct gimplify_omp_ctx *outer_context;\n   splay_tree variables;\n   hash_set<tree> *privatized_types;\n+  tree clauses;\n   /* Iteration variables in an OMP_FOR.  */\n   vec<tree> loop_iter_var;\n   location_t location;\n@@ -8054,7 +8055,7 @@ gimplify_scan_omp_clauses (tree *list_p, gimple_seq *pre_p,\n   struct gimplify_omp_ctx *ctx, *outer_ctx;\n   tree c;\n   hash_map<tree, tree> *struct_map_to_clause = NULL;\n-  tree *prev_list_p = NULL;\n+  tree *prev_list_p = NULL, *orig_list_p = list_p;\n   int handled_depend_iterators = -1;\n   int nowait = -1;\n \n@@ -8143,7 +8144,9 @@ gimplify_scan_omp_clauses (tree *list_p, gimple_seq *pre_p,\n \t    }\n \t  if (OMP_CLAUSE_LASTPRIVATE_CONDITIONAL (c))\n \t    {\n-\t      if (code == OMP_FOR || code == OMP_SECTIONS)\n+\t      if (code == OMP_FOR\n+\t\t  || code == OMP_SECTIONS\n+\t\t  || region_type == ORT_COMBINED_PARALLEL)\n \t\tflags |= GOVD_LASTPRIVATE_CONDITIONAL;\n \t      else\n \t\t{\n@@ -9312,6 +9315,7 @@ gimplify_scan_omp_clauses (tree *list_p, gimple_seq *pre_p,\n \tlist_p = &OMP_CLAUSE_CHAIN (c);\n     }\n \n+  ctx->clauses = *orig_list_p;\n   gimplify_omp_ctxp = ctx;\n   if (struct_map_to_clause)\n     delete struct_map_to_clause;\n@@ -9455,6 +9459,9 @@ gimplify_adjust_omp_clauses_1 (splay_tree_node n, void *data)\n   tree clause;\n   bool private_debug;\n \n+  if (gimplify_omp_ctxp->region_type == ORT_COMBINED_PARALLEL\n+      && (flags & GOVD_LASTPRIVATE_CONDITIONAL) != 0)\n+    flags = GOVD_SHARED | GOVD_SEEN | GOVD_WRITTEN;\n   if (flags & (GOVD_EXPLICIT | GOVD_LOCAL))\n     return 0;\n   if ((flags & GOVD_SEEN) == 0)\n@@ -9697,6 +9704,34 @@ gimplify_adjust_omp_clauses (gimple_seq *pre_p, gimple_seq body, tree *list_p,\n \t\t\t   omp_find_stores_op, &wi);\n \t}\n     }\n+\n+  if (ctx->region_type == ORT_WORKSHARE\n+      && ctx->outer_context\n+      && ctx->outer_context->region_type == ORT_COMBINED_PARALLEL)\n+    {\n+      for (c = ctx->outer_context->clauses; c; c = OMP_CLAUSE_CHAIN (c))\n+\tif (OMP_CLAUSE_CODE (c) == OMP_CLAUSE_LASTPRIVATE\n+\t    && OMP_CLAUSE_LASTPRIVATE_CONDITIONAL (c))\n+\t  {\n+\t    decl = OMP_CLAUSE_DECL (c);\n+\t    splay_tree_node n\n+\t      = splay_tree_lookup (ctx->outer_context->variables,\n+\t\t\t\t   (splay_tree_key) decl);\n+\t    gcc_checking_assert (!splay_tree_lookup (ctx->variables,\n+\t\t\t\t\t\t     (splay_tree_key) decl));\n+\t    omp_add_variable (ctx, decl, n->value);\n+\t    tree c2 = copy_node (c);\n+\t    OMP_CLAUSE_CHAIN (c2) = *list_p;\n+\t    *list_p = c2;\n+\t    if ((n->value & GOVD_FIRSTPRIVATE) == 0)\n+\t      continue;\n+\t    c2 = build_omp_clause (OMP_CLAUSE_LOCATION (c),\n+\t\t\t\t   OMP_CLAUSE_FIRSTPRIVATE);\n+\t    OMP_CLAUSE_DECL (c2) = decl;\n+\t    OMP_CLAUSE_CHAIN (c2) = *list_p;\n+\t    *list_p = c2;\n+\t  }\n+    }\n   while ((c = *list_p) != NULL)\n     {\n       splay_tree_node n;\n@@ -9723,6 +9758,10 @@ gimplify_adjust_omp_clauses (gimple_seq *pre_p, gimple_seq body, tree *list_p,\n \t  decl = OMP_CLAUSE_DECL (c);\n \t  n = splay_tree_lookup (ctx->variables, (splay_tree_key) decl);\n \t  remove = !(n->value & GOVD_SEEN);\n+\t  if ((n->value & GOVD_LASTPRIVATE_CONDITIONAL) != 0\n+\t      && code == OMP_PARALLEL\n+\t      && OMP_CLAUSE_CODE (c) == OMP_CLAUSE_FIRSTPRIVATE)\n+\t    remove = true;\n \t  if (! remove)\n \t    {\n \t      bool shared = OMP_CLAUSE_CODE (c) == OMP_CLAUSE_SHARED;\n@@ -9771,6 +9810,8 @@ gimplify_adjust_omp_clauses (gimple_seq *pre_p, gimple_seq body, tree *list_p,\n \t      && DECL_P (decl)\n \t      && omp_shared_to_firstprivate_optimizable_decl_p (decl))\n \t    omp_mark_stores (gimplify_omp_ctxp->outer_context, decl);\n+\t  if (OMP_CLAUSE_LASTPRIVATE_CONDITIONAL (c) && code == OMP_PARALLEL)\n+\t    remove = true;\n \t  break;\n \n \tcase OMP_CLAUSE_ALIGNED:"}, {"sha": "aec79b1e6b9191d1a32fee8de1304c4052878410", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e47198b802ed52fb8bb314b75ddf3cd84b2d9f4/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e47198b802ed52fb8bb314b75ddf3cd84b2d9f4/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=7e47198b802ed52fb8bb314b75ddf3cd84b2d9f4", "patch": "@@ -1,5 +1,11 @@\n 2019-05-29  Jakub Jelinek  <jakub@redhat.com>\n \n+\t* c-c++-common/gomp/lastprivate-conditional-2.c (foo): Don't expect\n+\tsorry on lastprivate conditional on parallel for.\n+\t* c-c++-common/gomp/lastprivate-conditional-3.c (foo): Add tests for\n+\tlastprivate conditional warnings on parallel for constructs.\n+\t* c-c++-common/gomp/lastprivate-conditional-4.c: New test.\n+\n \tPR c/90628\n \t* c-c++-common/builtin-arith-overflow-3.c: New test.\n "}, {"sha": "549ab4846632019c7ac58696763ba658a2772d45", "filename": "gcc/testsuite/c-c++-common/gomp/lastprivate-conditional-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e47198b802ed52fb8bb314b75ddf3cd84b2d9f4/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgomp%2Flastprivate-conditional-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e47198b802ed52fb8bb314b75ddf3cd84b2d9f4/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgomp%2Flastprivate-conditional-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgomp%2Flastprivate-conditional-2.c?ref=7e47198b802ed52fb8bb314b75ddf3cd84b2d9f4", "patch": "@@ -17,7 +17,7 @@ foo (int *p)\n   for (i = 0; i < 32; i++)\n     if (p[i])\n       c = i;\n-  #pragma omp parallel for lastprivate (conditional: d) /* { dg-message \"not supported yet\" } */\n+  #pragma omp parallel for lastprivate (conditional: d)\n   for (i = 0; i < 32; i++)\n     if (p[i])\n       d = i;"}, {"sha": "dc9b003753c3c33743db63d13a3b4694c83837e8", "filename": "gcc/testsuite/c-c++-common/gomp/lastprivate-conditional-3.c", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e47198b802ed52fb8bb314b75ddf3cd84b2d9f4/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgomp%2Flastprivate-conditional-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e47198b802ed52fb8bb314b75ddf3cd84b2d9f4/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgomp%2Flastprivate-conditional-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgomp%2Flastprivate-conditional-3.c?ref=7e47198b802ed52fb8bb314b75ddf3cd84b2d9f4", "patch": "@@ -23,4 +23,22 @@ foo (int *p)\n \tfor (k = 0; k < 2; ++k)\n \t  ;\n   }\n+  #pragma omp parallel for lastprivate (conditional: i)\t/* { dg-warning \"conditional 'lastprivate' on loop iterator 'i' ignored\" } */\n+  for (i = 0; i < 32; i++)\n+    ;\n+  #pragma omp parallel for collapse (3) lastprivate (conditional: i)\t/* { dg-warning \"conditional 'lastprivate' on loop iterator 'i' ignored\" } */\n+  for (i = 0; i < 32; i++)\n+    for (j = 0; j < 32; ++j)\n+      for (k = 0; k < 2; ++k)\n+\t;\n+  #pragma omp parallel for collapse (3) lastprivate (conditional: j)\t/* { dg-warning \"conditional 'lastprivate' on loop iterator 'j' ignored\" } */\n+  for (i = 0; i < 32; i++)\n+    for (j = 0; j < 32; ++j)\n+      for (k = 0; k < 2; ++k)\n+\t;\n+  #pragma omp parallel for collapse (3) lastprivate (conditional: k)\t/* { dg-warning \"conditional 'lastprivate' on loop iterator 'k' ignored\" } */\n+  for (i = 0; i < 32; i++)\n+    for (j = 0; j < 32; ++j)\n+      for (k = 0; k < 2; ++k)\n+\t;\n }"}, {"sha": "d87c7982b2693c4c72c38e950eee1aae609c2aed", "filename": "gcc/testsuite/c-c++-common/gomp/lastprivate-conditional-4.c", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e47198b802ed52fb8bb314b75ddf3cd84b2d9f4/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgomp%2Flastprivate-conditional-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e47198b802ed52fb8bb314b75ddf3cd84b2d9f4/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgomp%2Flastprivate-conditional-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgomp%2Flastprivate-conditional-4.c?ref=7e47198b802ed52fb8bb314b75ddf3cd84b2d9f4", "patch": "@@ -0,0 +1,23 @@\n+int x = 6, w = 8;\n+int bar (int);\n+\n+void\n+foo ()\n+{\n+  int y = 5, i;\n+  #pragma omp teams num_teams(1) firstprivate (x) shared (y) shared (w)\n+  {\n+    int z = 7;\n+    #pragma omp parallel for firstprivate (x, y, z, w) lastprivate (conditional: x, y, z, w)\n+    for (i = 0; i < 64; i++)\n+      if (bar (i))\n+\t{\n+\t  x = i;\n+\t  y = i + 1;\n+\t  z = i + 2;\n+\t  w = i + 3;\n+\t}\n+    bar (y);\n+    bar (z);\n+  }\n+}"}, {"sha": "b9bf097319c839b62ab7c998c917f5938c759a71", "filename": "libgomp/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e47198b802ed52fb8bb314b75ddf3cd84b2d9f4/libgomp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e47198b802ed52fb8bb314b75ddf3cd84b2d9f4/libgomp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2FChangeLog?ref=7e47198b802ed52fb8bb314b75ddf3cd84b2d9f4", "patch": "@@ -1,3 +1,11 @@\n+2019-05-29  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* testsuite/libgomp.c-c++-common/lastprivate_conditional_4.c: Rename\n+\tto ...\n+\t* testsuite/libgomp.c-c++-common/lastprivate-conditional-4.c: ... this.\n+\t* testsuite/libgomp.c-c++-common/lastprivate-conditional-5.c: New test.\n+\t* testsuite/libgomp.c-c++-common/lastprivate-conditional-6.c: New test.\n+\n 2019-05-27  Jakub Jelinek  <jakub@redhat.com>\n \n \t* testsuite/libgomp.c-c++-common/lastprivate_conditional_4.c: New test."}, {"sha": "bc102a10cd1465e2a61db83995077f8f6a8bdd61", "filename": "libgomp/testsuite/libgomp.c-c++-common/lastprivate-conditional-4.c", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e47198b802ed52fb8bb314b75ddf3cd84b2d9f4/libgomp%2Ftestsuite%2Flibgomp.c-c%2B%2B-common%2Flastprivate-conditional-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e47198b802ed52fb8bb314b75ddf3cd84b2d9f4/libgomp%2Ftestsuite%2Flibgomp.c-c%2B%2B-common%2Flastprivate-conditional-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.c-c%2B%2B-common%2Flastprivate-conditional-4.c?ref=7e47198b802ed52fb8bb314b75ddf3cd84b2d9f4", "previous_filename": "libgomp/testsuite/libgomp.c-c++-common/lastprivate_conditional_4.c"}, {"sha": "de6b9a87c1f343f238f56dce1e9d731f49e0faae", "filename": "libgomp/testsuite/libgomp.c-c++-common/lastprivate-conditional-5.c", "status": "added", "additions": 143, "deletions": 0, "changes": 143, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e47198b802ed52fb8bb314b75ddf3cd84b2d9f4/libgomp%2Ftestsuite%2Flibgomp.c-c%2B%2B-common%2Flastprivate-conditional-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e47198b802ed52fb8bb314b75ddf3cd84b2d9f4/libgomp%2Ftestsuite%2Flibgomp.c-c%2B%2B-common%2Flastprivate-conditional-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.c-c%2B%2B-common%2Flastprivate-conditional-5.c?ref=7e47198b802ed52fb8bb314b75ddf3cd84b2d9f4", "patch": "@@ -0,0 +1,143 @@\n+/* { dg-do run } */\n+/* { dg-require-effective-target tls_runtime } */\n+/* { dg-additional-options \"-std=gnu99\" {target c } } */\n+\n+#include <omp.h>\n+#include <stdlib.h>\n+\n+int r, s, u, v, r2, s2, u2, v2, r3, s3, u3, v3;\n+long long w, w2, w3, p, p2, p3;\n+int *x, *x2, *x3;\n+short y, y2, y3;\n+int z;\n+int thr1, thr2;\n+#pragma omp threadprivate (thr1, thr2)\n+\n+void\n+foo (int *a, long long int b, long long int c)\n+{\n+  int i;\n+  long long j;\n+  #pragma omp parallel for lastprivate (conditional: u, x)\n+  for (i = 15; i < 64; i++)\n+    {\n+      if ((a[i] % 5) == 3)\n+\tu = i;\n+      if ((a[i] % 7) == 2)\n+\tx = &a[i];\n+    }\n+  #pragma omp parallel for lastprivate (conditional: v) reduction (+:r, s) schedule (nonmonotonic: static)\n+  for (i = -3; i < 119; i += 2)\n+    {\n+      ++s;\n+      if ((a[i + 4] % 11) == 9)\n+\tv = i;\n+      else\n+\t++r;\n+    }\n+  #pragma omp parallel for schedule (monotonic: static) lastprivate (conditional: w)\n+  for (j = b; j < b + 115 * c; j += (b & 3) + 7)\n+    if ((a[j] % 13) == 5)\n+      w = j * 2;\n+  #pragma omp parallel for schedule (auto) lastprivate (conditional: p) collapse(3)\n+  for (i = -5; i < (int) (b + 5); i += 2)\n+    for (j = b + 12 + c; j > b; --j)\n+      for (int k = 0; k < 5; k += c)\n+\tif (((((i + 5) * 13 + (13 - j)) * 5 + k) % 17) == 6)\n+\t  p = i * 10000 + j * 100 + k;\n+\n+  #pragma omp parallel for schedule (nonmonotonic: static, 2) lastprivate (conditional: u2, x2)\n+  for (i = 15; i < 64; i++)\n+    {\n+      if ((a[i] % 5) == 3)\n+\tu2 = i;\n+      if ((a[i] % 7) == 2)\n+\tx2 = &a[i];\n+    }\n+  #pragma omp parallel for schedule (static, 3) lastprivate (conditional: v2) reduction (+:r2, s2)\n+  for (i = -3; i < 119; i += 2)\n+    {\n+      ++s2;\n+      if ((a[i + 4] % 11) == 9)\n+\tv2 = i;\n+      else\n+\t++r2;\n+    }\n+  #pragma omp parallel for lastprivate (conditional: w2) schedule (static, 1)\n+  for (j = b; j < b + 115 * c; j += (b & 3) + 7)\n+    if ((a[j] % 13) == 5)\n+      w2 = j * 2;\n+  #pragma omp parallel for schedule (static, 3) collapse (3) lastprivate (conditional: p2)\n+  for (i = -5; i < (int) (b + 5); i += 2)\n+    for (j = b + 12 + c; j > b; --j)\n+      for (int k = 0; k < 5; k += c)\n+\tif (((((i + 5) * 13 + (13 - j)) * 5 + k) % 17) == 6)\n+\t  p2 = i * 10000 + j * 100 + k;\n+\n+  #pragma omp parallel for lastprivate (conditional: u3, x3) schedule (runtime)\n+  for (i = 15; i < 64; i++)\n+    {\n+      if ((a[i] % 5) == 3)\n+\tu3 = i;\n+      if ((a[i] % 7) == 2)\n+\tx3 = &a[i];\n+    }\n+  #pragma omp parallel for lastprivate (conditional: v3) reduction (+:r3, s3) schedule (nonmonotonic: dynamic)\n+  for (i = -3; i < 119; i += 2)\n+    {\n+      ++s3;\n+      if ((a[i + 4] % 11) == 9)\n+\tv3 = i;\n+      else\n+\t++r3;\n+    }\n+  #pragma omp parallel for schedule (monotonic: guided, 3) lastprivate (conditional: w3)\n+  for (j = b; j < b + 115 * c; j += (b & 3) + 7)\n+    if ((a[j] % 13) == 5)\n+      w3 = j * 2;\n+  #pragma omp parallel for schedule (dynamic, 4) lastprivate (conditional: p3) collapse(3)\n+  for (i = -5; i < (int) (b + 5); i += 2)\n+    for (j = b + 12 + c; j > b; --j)\n+      for (int k = 0; k < 5; k += c)\n+\tif (((((i + 5) * 13 + (13 - j)) * 5 + k) % 17) == 6)\n+\t  p3 = i * 10000 + j * 100 + k;\n+\n+  /* Nasty testcase, verify that even a no-op assignment is accounted\n+     for in lastprivate(conditional:).  */\n+  #pragma omp parallel for schedule (monotonic: static, 2) firstprivate (z) \\\n+\t\t\t   lastprivate (conditional: z)\n+  for (int k = -2000; k < 8000; ++k)\n+    {\n+      if (k < 3000 && (k & 3) == 1)\n+\t{\n+\t  z = k;\n+\t  thr1 = k;\n+\t}\n+      else if (k == 7931)\n+\t{\n+\t  z = z;\n+\t  thr2 = 1;\n+\t}\n+    }\n+\n+  if (thr2 && z != thr1)\n+    abort ();\n+}\n+\n+int\n+main ()\n+{\n+  int a[128], i;\n+  volatile int j = 0;\n+  for (i = 0; i < 128; i++)\n+    a[i] = i;\n+  w = 1234;\n+  foo (a, j, j + 1);\n+  if (u != 63 || v != 115 || w != 140 || x != &a[58] || r != 55 || s != 61 || p != 30104)\n+    abort ();\n+  if (u2 != 63 || v2 != 115 || w2 != 140 || x2 != &a[58] || r2 != 55 || s2 != 61 || p2 != 30104)\n+    abort ();\n+  if (u3 != 63 || v3 != 115 || w3 != 140 || x3 != &a[58] || r3 != 55 || s3 != 61 || p3 != 30104)\n+    abort ();\n+  return 0;\n+}"}, {"sha": "d21379358590af59d525d5429c29ec2e53d7ef71", "filename": "libgomp/testsuite/libgomp.c-c++-common/lastprivate-conditional-6.c", "status": "added", "additions": 159, "deletions": 0, "changes": 159, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e47198b802ed52fb8bb314b75ddf3cd84b2d9f4/libgomp%2Ftestsuite%2Flibgomp.c-c%2B%2B-common%2Flastprivate-conditional-6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e47198b802ed52fb8bb314b75ddf3cd84b2d9f4/libgomp%2Ftestsuite%2Flibgomp.c-c%2B%2B-common%2Flastprivate-conditional-6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.c-c%2B%2B-common%2Flastprivate-conditional-6.c?ref=7e47198b802ed52fb8bb314b75ddf3cd84b2d9f4", "patch": "@@ -0,0 +1,159 @@\n+#include <stdlib.h>\n+\n+int x;\n+long long y;\n+int r, s, t;\n+\n+void\n+foo (const char *a)\n+{\n+  #pragma omp parallel sections lastprivate (conditional: x, y)\n+  {\n+    if (a[0])\n+      x = a[0];\n+    #pragma omp section\n+    {\n+      if (a[1])\n+\tx = a[1];\n+      if (a[2])\n+\ty = a[2];\n+    }\n+    #pragma omp section\n+    if (a[3])\n+      y = a[3];\n+    #pragma omp section\n+    if (a[4])\n+      x = a[4];\n+    #pragma omp section\n+    {\n+      if (a[5])\n+\tx = a[5];\n+      if (a[6])\n+\ty = a[6];\n+    }\n+  }\n+}\n+\n+void\n+bar (const char *a)\n+{\n+  #pragma omp parallel sections lastprivate (conditional: x, y) reduction (task, +: t)\n+  {\n+    if (a[0])\n+      x = a[0];\n+    #pragma omp section\n+    {\n+      if (a[1])\n+\tx = a[1];\n+      if (a[2])\n+\ty = a[2];\n+      #pragma omp task in_reduction (+: t)\n+      t++;\n+    }\n+    #pragma omp section\n+    if (a[3])\n+      y = a[3];\n+    #pragma omp section\n+    if (a[4])\n+      x = a[4];\n+    #pragma omp section\n+    {\n+      #pragma omp task in_reduction (+: t)\n+      ++t;\n+      if (a[5])\n+\tx = a[5];\n+      if (a[6])\n+\ty = a[6];\n+    }\n+  }\n+}\n+\n+void\n+baz (const char *a)\n+{\n+  #pragma omp parallel sections lastprivate (conditional: x, y) reduction (+: r, s)\n+  {\n+    if (a[0])\n+      x = a[0];\n+    #pragma omp section\n+    {\n+      if (a[1])\n+\tx = a[1];\n+      ++r;\n+      ++s;\n+      if (a[2])\n+\ty = a[2];\n+    }\n+    #pragma omp section\n+    if (a[3])\n+      y = a[3];\n+    #pragma omp section\n+    {\n+      ++s;\n+      if (a[4])\n+\tx = a[4];\n+    }\n+    #pragma omp section\n+    {\n+      if (a[5])\n+\tx = a[5];\n+      if (a[6])\n+\ty = a[6];\n+      ++s;\n+    }\n+  }\n+}\n+\n+int\n+main ()\n+{\n+  foo (\"\\0\\1\\2\\3\\0\\5\");\n+  if (x != 5 || y != 3)\n+    abort ();\n+\n+  foo (\"\\6\\0\\0\\0\\0\\0\\7\");\n+  if (x != 6 || y != 7)\n+    abort ();\n+\n+  foo (\"\\7\\6\\5\\4\\3\\2\\1\");\n+  if (x != 2 || y != 1)\n+    abort ();\n+\n+  foo (\"\\0\\0\\4\\3\\0\\7\");\n+  if (x != 7 || y != 3)\n+    abort ();\n+\n+  bar (\"\\0\\1\\2\\4\\0\\5\");\n+  if (x != 5 || y != 4 || t != 2)\n+    abort ();\n+\n+  bar (\"\\6\\0\\0\\0\\0\\0\\7\");\n+  if (x != 6 || y != 7 || t != 4)\n+    abort ();\n+\n+  bar (\"\\7\\6\\5\\4\\3\\2\\1\");\n+  if (x != 2 || y != 1 || t != 6)\n+    abort ();\n+\n+  bar (\"\\0\\0\\4\\3\\0\\7\");\n+  if (x != 7 || y != 3 || t != 8)\n+    abort ();\n+\n+  baz (\"\\0\\1\\2\\4\\0\\5\");\n+  if (x != 5 || y != 4 || r != 1 || s != 3)\n+    abort ();\n+\n+  baz (\"\\6\\0\\0\\0\\0\\0\\7\");\n+  if (x != 6 || y != 7 || r != 2 || s != 6)\n+    abort ();\n+\n+  baz (\"\\7\\6\\5\\4\\3\\2\\1\");\n+  if (x != 2 || y != 1 || r != 3 || s != 9)\n+    abort ();\n+\n+  baz (\"\\0\\0\\4\\3\\0\\7\");\n+  if (x != 7 || y != 3 || r != 4 || s != 12)\n+    abort ();\n+\n+  return 0;\n+}"}]}