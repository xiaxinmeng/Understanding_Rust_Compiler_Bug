{"sha": "1300342b4520747b7d92af3cf07b0e96267ed100", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTMwMDM0MmI0NTIwNzQ3YjdkOTJhZjNjZjA3YjBlOTYyNjdlZDEwMA==", "commit": {"author": {"name": "Richard Sandiford", "email": "rdsandiford@googlemail.com", "date": "2008-11-11T23:24:05Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2008-11-11T23:24:05Z"}, "message": "cse.c (fold_rtx): Remove redundant gen_rtx_CONST.\n\ngcc/\n\t* cse.c (fold_rtx): Remove redundant gen_rtx_CONST.\n\nFrom-SVN: r141775", "tree": {"sha": "38ac169b3596562fdc6d9f6cf21db58786279300", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/38ac169b3596562fdc6d9f6cf21db58786279300"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1300342b4520747b7d92af3cf07b0e96267ed100", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1300342b4520747b7d92af3cf07b0e96267ed100", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1300342b4520747b7d92af3cf07b0e96267ed100", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1300342b4520747b7d92af3cf07b0e96267ed100/comments", "author": {"login": "rsandifo", "id": 4235983, "node_id": "MDQ6VXNlcjQyMzU5ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/4235983?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo", "html_url": "https://github.com/rsandifo", "followers_url": "https://api.github.com/users/rsandifo/followers", "following_url": "https://api.github.com/users/rsandifo/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo/orgs", "repos_url": "https://api.github.com/users/rsandifo/repos", "events_url": "https://api.github.com/users/rsandifo/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "2f1e2391d8d60d887cfffe7d7b619ea2eff82f66", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2f1e2391d8d60d887cfffe7d7b619ea2eff82f66", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2f1e2391d8d60d887cfffe7d7b619ea2eff82f66"}], "stats": {"total": 22, "additions": 4, "deletions": 18}, "files": [{"sha": "755b33b9a652804a36526f3734e5cd226486e77b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1300342b4520747b7d92af3cf07b0e96267ed100/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1300342b4520747b7d92af3cf07b0e96267ed100/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1300342b4520747b7d92af3cf07b0e96267ed100", "patch": "@@ -1,3 +1,7 @@\n+2008-11-11  Richard Sandiford  <rdsandiford@googlemail.com>\n+\n+\t* cse.c (fold_rtx): Remove redundant gen_rtx_CONST.\n+\n 2008-11-11  Richard Sandiford  <rdsandiford@googlemail.com>\n \n \tPR rtl-optimization/37363"}, {"sha": "e6ff6308c2a4c1bb68af4ad08080ece77241887f", "filename": "gcc/cse.c", "status": "modified", "additions": 0, "deletions": 18, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1300342b4520747b7d92af3cf07b0e96267ed100/gcc%2Fcse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1300342b4520747b7d92af3cf07b0e96267ed100/gcc%2Fcse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcse.c?ref=1300342b4520747b7d92af3cf07b0e96267ed100", "patch": "@@ -3171,33 +3171,15 @@ fold_rtx (rtx x, rtx insn)\n     {\n     case RTX_UNARY:\n       {\n-\tint is_const = 0;\n-\n \t/* We can't simplify extension ops unless we know the\n \t   original mode.  */\n \tif ((code == ZERO_EXTEND || code == SIGN_EXTEND)\n \t    && mode_arg0 == VOIDmode)\n \t  break;\n \n-\t/* If we had a CONST, strip it off and put it back later if we\n-\t   fold.  */\n-\tif (const_arg0 != 0 && GET_CODE (const_arg0) == CONST)\n-\t  is_const = 1, const_arg0 = XEXP (const_arg0, 0);\n-\n \tnew_rtx = simplify_unary_operation (code, mode,\n \t\t\t\t\tconst_arg0 ? const_arg0 : folded_arg0,\n \t\t\t\t\tmode_arg0);\n-\t/* NEG of PLUS could be converted into MINUS, but that causes\n-\t   expressions of the form\n-\t   (CONST (MINUS (CONST_INT) (SYMBOL_REF)))\n-\t   which many ports mistakenly treat as LEGITIMATE_CONSTANT_P.\n-\t   FIXME: those ports should be fixed.  */\n-\tif (new_rtx != 0 && is_const\n-\t    && GET_CODE (new_rtx) == PLUS\n-\t    && (GET_CODE (XEXP (new_rtx, 0)) == SYMBOL_REF\n-\t\t|| GET_CODE (XEXP (new_rtx, 0)) == LABEL_REF)\n-\t    && GET_CODE (XEXP (new_rtx, 1)) == CONST_INT)\n-\t  new_rtx = gen_rtx_CONST (mode, new_rtx);\n       }\n       break;\n "}]}