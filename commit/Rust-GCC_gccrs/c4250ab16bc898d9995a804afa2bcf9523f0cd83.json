{"sha": "c4250ab16bc898d9995a804afa2bcf9523f0cd83", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzQyNTBhYjE2YmM4OThkOTk5NWE4MDRhZmEyYmNmOTUyM2YwY2Q4Mw==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2012-07-23T08:32:33Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2012-07-23T08:32:33Z"}, "message": "[multiple changes]\n\n2012-07-23  Arnaud Charlet  <charlet@adacore.com>\n\n\t* s-tasinf-linux.ads: Fix typo.\n\n2012-07-23  Thomas Quinot  <quinot@adacore.com>\n\n\t* exp_ch7.adb, switch-m.adb, exp_ch3.adb, freeze.adb: Minor reformatting\n\n2012-07-23  Ed Schonberg  <schonberg@adacore.com>\n\n\t* exp_ch5.adb (Expand_Iterator_Loop_Over_Array): If original\n\tloop carries an identifier, preserve it when rewriting it as a\n\tstandard loop to validate exit statements that may reference\n\tthat name in the body of the loop.\n\n2012-07-23  Thomas Quinot  <quinot@adacore.com>\n\n\t* exp_ch9.adb: Minor code cleanup.\n\nFrom-SVN: r189776", "tree": {"sha": "a445be755ef56a77e82320063c6bd730ba5cc5d7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a445be755ef56a77e82320063c6bd730ba5cc5d7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c4250ab16bc898d9995a804afa2bcf9523f0cd83", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c4250ab16bc898d9995a804afa2bcf9523f0cd83", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c4250ab16bc898d9995a804afa2bcf9523f0cd83", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c4250ab16bc898d9995a804afa2bcf9523f0cd83/comments", "author": null, "committer": null, "parents": [{"sha": "d7a44b14423c7751db39957227377d5909fde72e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d7a44b14423c7751db39957227377d5909fde72e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d7a44b14423c7751db39957227377d5909fde72e"}], "stats": {"total": 57, "additions": 43, "deletions": 14}, "files": [{"sha": "8846000716946609b2f083d32142a1af493cef53", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c4250ab16bc898d9995a804afa2bcf9523f0cd83/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c4250ab16bc898d9995a804afa2bcf9523f0cd83/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=c4250ab16bc898d9995a804afa2bcf9523f0cd83", "patch": "@@ -1,3 +1,22 @@\n+2012-07-23  Arnaud Charlet  <charlet@adacore.com>\n+\n+\t* s-tasinf-linux.ads: Fix typo.\n+\n+2012-07-23  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* exp_ch7.adb, switch-m.adb, exp_ch3.adb, freeze.adb: Minor reformatting\n+\n+2012-07-23  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* exp_ch5.adb (Expand_Iterator_Loop_Over_Array): If original\n+\tloop carries an identifier, preserve it when rewriting it as a\n+\tstandard loop to validate exit statements that may reference\n+\tthat name in the body of the loop.\n+\n+2012-07-23  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* exp_ch9.adb: Minor code cleanup.\n+\n 2012-07-23  Ed Schonberg  <schonberg@adacore.com>\n \n \t* sem_ch4.adb (Analyze_Selected_Component): When checking for"}, {"sha": "066b37d1775940ce33116eba4fbe7e7b210f10f8", "filename": "gcc/ada/exp_ch3.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c4250ab16bc898d9995a804afa2bcf9523f0cd83/gcc%2Fada%2Fexp_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c4250ab16bc898d9995a804afa2bcf9523f0cd83/gcc%2Fada%2Fexp_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch3.adb?ref=c4250ab16bc898d9995a804afa2bcf9523f0cd83", "patch": "@@ -635,7 +635,7 @@ package body Exp_Ch3 is\n       --  but it properly belongs with the array type declaration. However, if\n       --  the freeze node is for a subtype of a type declared in another unit\n       --  it seems preferable to use the freeze node as the source location of\n-      --  of the init.proc. In any case this is preferable for gcov usage, and\n+      --  of the init proc. In any case this is preferable for gcov usage, and\n       --  the Sloc is not otherwise used by the compiler.\n \n       if In_Open_Scopes (Scope (A_Type)) then"}, {"sha": "a1aaa37363e2ab3150517d2db15a1ff03bbf153f", "filename": "gcc/ada/exp_ch5.adb", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c4250ab16bc898d9995a804afa2bcf9523f0cd83/gcc%2Fada%2Fexp_ch5.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c4250ab16bc898d9995a804afa2bcf9523f0cd83/gcc%2Fada%2Fexp_ch5.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch5.adb?ref=c4250ab16bc898d9995a804afa2bcf9523f0cd83", "patch": "@@ -3204,6 +3204,13 @@ package body Exp_Ch5 is\n              Statements => Stats,\n              End_Label  => Empty);\n \n+         --  If present, preserve identifier of loop, which can be used in\n+         --  an exit statement in the body.\n+\n+         if Present (Identifier (N)) then\n+            Set_Identifier (New_Loop, Relocate_Node (Identifier (N)));\n+         end if;\n+\n          --  Create the declarations for Iterator and cursor and insert them\n          --  before the source loop. Given that the domain of iteration is\n          --  already an entity, the iterator is just a renaming of that\n@@ -3380,6 +3387,13 @@ package body Exp_Ch5 is\n          end loop;\n       end if;\n \n+      --  If original loop has a name, preserve it so it can be recognized by\n+      --  an exit statement in the body of the rewritten loop.\n+\n+      if Present (Identifier (N)) then\n+         Set_Identifier (Core_Loop, Relocate_Node (Identifier (N)));\n+      end if;\n+\n       Rewrite (N, Core_Loop);\n       Analyze (N);\n    end Expand_Iterator_Loop_Over_Array;"}, {"sha": "17ad11cc1731ff0b49a4e01e2212d34d80bf20b2", "filename": "gcc/ada/exp_ch7.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c4250ab16bc898d9995a804afa2bcf9523f0cd83/gcc%2Fada%2Fexp_ch7.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c4250ab16bc898d9995a804afa2bcf9523f0cd83/gcc%2Fada%2Fexp_ch7.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch7.adb?ref=c4250ab16bc898d9995a804afa2bcf9523f0cd83", "patch": "@@ -4565,7 +4565,7 @@ package body Exp_Ch7 is\n                          Build_Exception_Handler (Fin_Data))));\n \n                --  The single raise statement must be inserted after all the\n-               --  finalization blocks. And we put everything into a wrapper\n+               --  finalization blocks, and we put everything into a wrapper\n                --  block to clearly expose the construct to the back-end.\n \n                if Present (Prev_Fin) then"}, {"sha": "a8bca192a82d62116074af71a8f9c3b352372476", "filename": "gcc/ada/exp_ch9.adb", "status": "modified", "additions": 3, "deletions": 7, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c4250ab16bc898d9995a804afa2bcf9523f0cd83/gcc%2Fada%2Fexp_ch9.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c4250ab16bc898d9995a804afa2bcf9523f0cd83/gcc%2Fada%2Fexp_ch9.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch9.adb?ref=c4250ab16bc898d9995a804afa2bcf9523f0cd83", "patch": "@@ -10307,12 +10307,10 @@ package body Exp_Ch9 is\n          Proc  : Node_Id)\n       is\n          Astmt     : constant Node_Id := Accept_Statement (Alt);\n-         Choices   : List_Id;\n          Alt_Stats : List_Id;\n \n       begin\n          Adjust_Condition (Condition (Alt));\n-         Choices := New_List (Make_Integer_Literal (Loc, Index));\n \n          --  Accept with body\n \n@@ -10354,7 +10352,7 @@ package body Exp_Ch9 is\n \n          Append_To (Alt_List,\n            Make_Case_Statement_Alternative (Loc,\n-             Discrete_Choices => Choices,\n+             Discrete_Choices => New_List (Make_Integer_Literal (Loc, Index)),\n              Statements       => Alt_Stats));\n       end Process_Accept_Alternative;\n \n@@ -10364,7 +10362,6 @@ package body Exp_Ch9 is\n \n       procedure Process_Delay_Alternative (Alt : Node_Id; Index : Int) is\n          Dloc      : constant Source_Ptr := Sloc (Delay_Statement (Alt));\n-         Choices   : List_Id;\n          Cond      : Node_Id;\n          Delay_Alt : List_Id;\n \n@@ -10478,11 +10475,10 @@ package body Exp_Ch9 is\n                Append_List (Statements (Alt), Delay_Alt_List);\n \n             else\n-               Choices := New_List (Make_Integer_Literal (Loc, Index));\n-\n                Append_To (Delay_Alt_List,\n                  Make_Case_Statement_Alternative (Loc,\n-                   Discrete_Choices => Choices,\n+                   Discrete_Choices => New_List (\n+                                         Make_Integer_Literal (Loc, Index)),\n                    Statements       => Statements (Alt)));\n             end if;\n "}, {"sha": "14856432ca96ce91537c49e469838f7dd69d7f4f", "filename": "gcc/ada/freeze.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c4250ab16bc898d9995a804afa2bcf9523f0cd83/gcc%2Fada%2Ffreeze.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c4250ab16bc898d9995a804afa2bcf9523f0cd83/gcc%2Fada%2Ffreeze.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffreeze.adb?ref=c4250ab16bc898d9995a804afa2bcf9523f0cd83", "patch": "@@ -3027,9 +3027,9 @@ package body Freeze is\n                   end if;\n                end;\n \n-               --  Pre/Post conditions are implemented through a subprogram in\n+               --  Pre/post conditions are implemented through a subprogram in\n                --  the corresponding body, and therefore are not checked on an\n-               --  imported subprogram for which the body is not available.\n+               --  imported subprogram, for which the body is not available.\n \n                --  Could consider generating a wrapper to take care of this???\n "}, {"sha": "b789dd1cf602e7495fadee09ce95c447f4ade9b2", "filename": "gcc/ada/s-tasinf-linux.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c4250ab16bc898d9995a804afa2bcf9523f0cd83/gcc%2Fada%2Fs-tasinf-linux.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c4250ab16bc898d9995a804afa2bcf9523f0cd83/gcc%2Fada%2Fs-tasinf-linux.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-tasinf-linux.ads?ref=c4250ab16bc898d9995a804afa2bcf9523f0cd83", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---            Copyright (C) 2007-2009, Free Software Foundation, Inc.       --\n+--            Copyright (C) 2007-2012, Free Software Foundation, Inc.       --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -48,7 +48,7 @@ package System.Task_Info is\n    pragma Elaborate_Body;\n    --  To ensure that a body is allowed\n \n-   --  Windows provides a way to define the ideal processor to use for a given\n+   --  Linux provides a way to define the ideal processor to use for a given\n    --  thread. The ideal processor is not necessarily the one that will be used\n    --  by the OS but the OS will always try to schedule this thread to the\n    --  specified processor if it is available."}, {"sha": "d082c905f866bad7924726b9e5ad8ad52edc8f54", "filename": "gcc/ada/switch-m.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c4250ab16bc898d9995a804afa2bcf9523f0cd83/gcc%2Fada%2Fswitch-m.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c4250ab16bc898d9995a804afa2bcf9523f0cd83/gcc%2Fada%2Fswitch-m.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fswitch-m.adb?ref=c4250ab16bc898d9995a804afa2bcf9523f0cd83", "patch": "@@ -423,7 +423,7 @@ package body Switch.M is\n                         return;\n                      end if;\n \n-                  --  -gnatn may be -gnatn, -gnatn1 or -gnat2\n+                  --  -gnatn may be -gnatn, -gnatn1, or -gnatn2\n \n                   when 'n' =>\n                      Last_Stored := First_Stored;"}]}