{"sha": "851dff042a238f9ba566468ac6934f878a9e5ac5", "node_id": "C_kwDOANBUbNoAKDg1MWRmZjA0MmEyMzhmOWJhNTY2NDY4YWM2OTM0Zjg3OGE5ZTVhYzU", "commit": {"author": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2021-11-06T00:16:24Z"}, "committer": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2021-11-06T00:16:24Z"}, "message": "Daily bump.", "tree": {"sha": "80eeef78a55ac6eff938f482c561a7fb0e7c8069", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/80eeef78a55ac6eff938f482c561a7fb0e7c8069"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/851dff042a238f9ba566468ac6934f878a9e5ac5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/851dff042a238f9ba566468ac6934f878a9e5ac5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/851dff042a238f9ba566468ac6934f878a9e5ac5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/851dff042a238f9ba566468ac6934f878a9e5ac5/comments", "author": null, "committer": null, "parents": [{"sha": "bcf3728abe8488882922005166d3065fc5fdfea1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bcf3728abe8488882922005166d3065fc5fdfea1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bcf3728abe8488882922005166d3065fc5fdfea1"}], "stats": {"total": 306, "additions": 305, "deletions": 1}, "files": [{"sha": "a0e50c9b1d97c51112a409d852dddd638741ad64", "filename": "contrib/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/851dff042a238f9ba566468ac6934f878a9e5ac5/contrib%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/851dff042a238f9ba566468ac6934f878a9e5ac5/contrib%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2FChangeLog?ref=851dff042a238f9ba566468ac6934f878a9e5ac5", "patch": "@@ -1,3 +1,7 @@\n+2021-11-05  Bernhard Reutner-Fischer  <aldot@gcc.gnu.org>\n+\n+\t* testsuite-management/validate_failures.py: 2to3\n+\n 2021-11-04  Martin Liska  <mliska@suse.cz>\n \n \t* gcc-changelog/git_check_commit.py: Add -v option."}, {"sha": "cff950cbdf6279c82a9048cb41669b371a097d5f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 150, "deletions": 0, "changes": 150, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/851dff042a238f9ba566468ac6934f878a9e5ac5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/851dff042a238f9ba566468ac6934f878a9e5ac5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=851dff042a238f9ba566468ac6934f878a9e5ac5", "patch": "@@ -1,3 +1,153 @@\n+2021-11-05  Jan Hubicka  <hubicka@ucw.cz>\n+\n+\tPR ipa/103073\n+\t* ipa-modref-tree.h (modref_tree::insert): Do nothing for\n+\tparadoxical and zero sized accesses.\n+\n+2021-11-05  Jan Hubicka  <hubicka@ucw.cz>\n+\n+\tPR ipa/103082\n+\t* ipa-modref-tree.h (struct modref_access_node): Avoid left shift\n+\tof negative value\n+\n+2021-11-05  Iain Sandoe  <iain@sandoe.co.uk>\n+\n+\t* config/darwin.h (ASM_GENERATE_INTERNAL_LABEL): Add LTRAMP\n+\tto the list of symbol prefixes that must be made linker-\n+\tvisible.\n+\n+2021-11-05  Iain Sandoe  <iain@sandoe.co.uk>\n+\n+\t* config.host: Add support for aarch64-*-darwin.\n+\t* config/aarch64/host-aarch64-darwin.c: New file.\n+\t* config/aarch64/x-darwin: New file.\n+\n+2021-11-05  Andrew MacLeod  <amacleod@redhat.com>\n+\n+\tPR tree-optimization/103093\n+\t* gimple-range-gori.cc (range_def_chain::get_imports): Remove assert.\n+\n+2021-11-05  Andrew MacLeod  <amacleod@redhat.com>\n+\n+\tPR tree-optimization/102943\n+\t* gimple-range-cache.cc (class update_list): New.\n+\t(update_list::add): Replace add_to_update.\n+\t(update_list::pop): New.\n+\t(ranger_cache::ranger_cache): Adjust.\n+\t(ranger_cache::~ranger_cache): Adjust.\n+\t(ranger_cache::add_to_update): Delete.\n+\t(ranger_cache::propagate_cache): Adjust to new class.\n+\t(ranger_cache::propagate_updated_value): Ditto.\n+\t(ranger_cache::fill_block_cache): Ditto.\n+\t* gimple-range-cache.h (class ranger_cache): Adjust to update class.\n+\n+2021-11-05  Richard Biener  <rguenther@suse.de>\n+\n+\t* tree-vect-loop.c (vect_analyze_loop): Remove obsolete\n+\tcomment and expand on another one.  Combine nested if.\n+\n+2021-11-05  John David Anglin  <danglin@gcc.gnu.org>\n+\n+\tPR libgomp/96661\n+\t* config/pa/pa-modes.def: Add OImode integer type.\n+\t* config/pa/pa.c (pa_scalar_mode_supported_p): Allow TImode\n+\tfor TARGET_64BIT.\n+\t* config/pa/pa.h (MIN_UNITS_PER_WORD) Define to MIN_UNITS_PER_WORD\n+\tto UNITS_PER_WORD if IN_LIBGCC2.\n+\t* config/pa/pa.md (addti3, addvti3, subti3, subvti3, negti2,\n+\tnegvti2, ashlti3, shrpd_internal): New patterns.\n+\tChange some multi instruction types to multi.\n+\n+2021-11-05  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR bootstrap/100246\n+\t* config/i386/i386.h\n+\t(stringop_algs::stringop_strategy::stringop_strategy): Make the ctor\n+\tconstexpr.\n+\n+2021-11-05  Wilco Dijkstra  <wdijkstr@arm.com>\n+\n+\tPR target/103085\n+\t* config/aarch64/aarch64.c (aarch64_mov_operand_p): Strip the salt\n+\tfirst.\n+\t* config/aarch64/constraints.md: Support const in Usw.\n+\n+2021-11-05  John David Anglin  <danglin@gcc.gnu.org>\n+\n+\t* config/pa/pa.h (PREFERRED_DEBUGGING_TYPE): Define to DWARF2_DEBUG.\n+\t* config/pa/pa64-hpux.h (PREFERRED_DEBUGGING_TYPE): Remove define.\n+\n+2021-11-05  Richard Biener  <rguenther@suse.de>\n+\n+\t* tree-vectorizer.h (vec_info_shared::n_stmts): Add.\n+\t(LOOP_VINFO_N_STMTS): Likewise.\n+\t(vec_info_for_bb): Remove unused function.\n+\t* tree-vectorizer.c (vec_info_shared::vec_info_shared):\n+\tInitialize n_stmts member.\n+\t* tree-vect-loop.c: Remove INCLUDE_FUNCTIONAL.\n+\t(vect_create_loop_vinfo): Do not set loop->aux.\n+\t(vect_analyze_loop_2): Do not get n_stmts as argument,\n+\tinstead use LOOP_VINFO_N_STMTS.  Set LOOP_VINFO_VECTORIZABLE_P\n+\there.\n+\t(vect_analyze_loop_1): Remove callback, get the mode iterator\n+\tand autodetected_vector_mode as argument, advancing the\n+\titerator and initializing autodetected_vector_mode here.\n+\t(vect_analyze_loop): Split analysis loop into two, first\n+\tprocessing main loops only and then epilogues.\n+\n+2021-11-05  Martin Jambor  <mjambor@suse.cz>\n+\n+\t* ipa-prop.c (compute_complex_assign_jump_func): Remove\n+\tunnecessary check for RECORD_TYPE.\n+\n+2021-11-05  Gerald Pfeifer  <gerald@pfeifer.com>\n+\n+\t* doc/install.texi2html: Do not generate old.html any longer.\n+\n+2021-11-05  Martin Liska  <mliska@suse.cz>\n+\n+\tPR debug/102955\n+\t* opts.c (finish_options): Reset flag_gtoggle when it is used.\n+\n+2021-11-05  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR debug/103046\n+\t* dwarf2out.c (add_const_value_attribute): Add MODE argument, use it\n+\tin CONST_WIDE_INT handling.  Adjust recursive calls.\n+\t(add_location_or_const_value_attribute): Pass DECL_MODE (decl) to\n+\tnew add_const_value_attribute argument.\n+\t(tree_add_const_value_attribute): Pass TYPE_MODE (type) to new\n+\tadd_const_value_attribute argument.\n+\n+2021-11-05  Rasmus Villemoes  <rasmus.villemoes@prevas.dk>\n+\n+\t* config/vx-common.h: Test value of TARGET_VXWORKS7 rather\n+\tthan definedness.\n+\n+2021-11-05  Richard Biener  <rguenther@suse.de>\n+\n+\t* tree-vectorizer.h (struct vect_loop_form_info): New.\n+\t(vect_analyze_loop_form): Adjust.\n+\t(vect_create_loop_vinfo): New.\n+\t* tree-parloops.c (gather_scalar_reductions): Adjust for\n+\tvect_analyze_loop_form API change.\n+\t* tree-vect-loop.c: Include <functional>.\n+\t(vect_analyze_loop_form_1): Rename to vect_analyze_loop_form,\n+\ttake struct vect_loop_form_info as output parameter and adjust.\n+\t(vect_analyze_loop_form): Rename to vect_create_loop_vinfo and\n+\tsplit out call to the original vect_analyze_loop_form_1.\n+\t(vect_reanalyze_as_main_loop): Rename to...\n+\t(vect_analyze_loop_1): ... this, factor out the call to\n+\tvect_analyze_loop_form and generalize to be able to use it twice ...\n+\t(vect_analyze_loop): ... here.  Perform vect_analyze_loop_form\n+\tonce only and here.\n+\n+2021-11-05  Xionghu Luo  <luoxhu@linux.ibm.com>\n+\n+\tPR target/102991\n+\t* config/rs6000/fusion.md: Regenerate.\n+\t* config/rs6000/genfusion.pl: Fix incorrect clobber constraint.\n+\n 2021-11-04  Andreas Krebbel  <krebbel@linux.ibm.com>\n \n \t* config/s390/s390.h (STACK_CHECK_MOVING_SP): New macro"}, {"sha": "6394793959f7cb10c26c43acf6c1224bd11c7832", "filename": "gcc/DATESTAMP", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/851dff042a238f9ba566468ac6934f878a9e5ac5/gcc%2FDATESTAMP", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/851dff042a238f9ba566468ac6934f878a9e5ac5/gcc%2FDATESTAMP", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FDATESTAMP?ref=851dff042a238f9ba566468ac6934f878a9e5ac5", "patch": "@@ -1 +1 @@\n-20211105\n+20211106"}, {"sha": "f7e70dbbd70786a60fff2c5fba2e092b1b3bf24e", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/851dff042a238f9ba566468ac6934f878a9e5ac5/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/851dff042a238f9ba566468ac6934f878a9e5ac5/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=851dff042a238f9ba566468ac6934f878a9e5ac5", "patch": "@@ -1,3 +1,10 @@\n+2021-11-05  Iain Sandoe  <iain@sandoe.co.uk>\n+\n+\t* gcc-interface/Make-lang.in: Use iOS signal trampoline code\n+\tfor hosted Ada tools.\n+\t* sigtramp-ios.c: Wrap the declarations in extern \"C\" when\n+\tthe code is built by a C++ compiler.\n+\n 2021-10-30  Alexandre Oliva  <oliva@adacore.com>\n \n \t* doc/gnat_rm/security_hardening_features.rst: Mention"}, {"sha": "5efbad7c4a93799d8ec675173e6de9720d21add6", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/851dff042a238f9ba566468ac6934f878a9e5ac5/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/851dff042a238f9ba566468ac6934f878a9e5ac5/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=851dff042a238f9ba566468ac6934f878a9e5ac5", "patch": "@@ -1,3 +1,42 @@\n+2021-11-05  Harald Anlauf  <anlauf@gmx.de>\n+\n+\tPR fortran/102817\n+\t* expr.c (simplify_parameter_variable): Copy shape of referenced\n+\tsubobject when simplifying.\n+\n+2021-11-05  Harald Anlauf  <anlauf@gmx.de>\n+\n+\tPR fortran/69419\n+\t* match.c (gfc_match_common): Check array spec of a symbol in a\n+\tCOMMON object list and reject it if it is a coarray.\n+\n+2021-11-05  Bernhard Reutner-Fischer  <aldot@gcc.gnu.org>\n+\n+\tPR fortran/100972\n+\t* decl.c (gfc_match_implicit_none): Fix typo in warning.\n+\t* resolve.c (resolve_unknown_f): Reject external procedures\n+\twithout explicit EXTERNAL attribute whe IMPLICIT none (external)\n+\tis in effect.\n+\n+2021-11-05  Bernhard Reutner-Fischer  <aldot@gcc.gnu.org>\n+\n+\t* decl.c (gfc_insert_kind_parameter_exprs): Make static.\n+\t* expr.c (gfc_build_init_expr): Make static\n+\t(gfc_build_default_init_expr): Move below its static helper.\n+\t* gfortran.h (gfc_insert_kind_parameter_exprs, gfc_add_saved_common,\n+\tgfc_add_common, gfc_use_derived_tree, gfc_free_charlen,\n+\tgfc_get_ultimate_derived_super_type,\n+\tgfc_resolve_oacc_parallel_loop_blocks, gfc_build_init_expr,\n+\tgfc_iso_c_sub_interface): Delete.\n+\t* symbol.c (gfc_new_charlen, gfc_get_derived_super_type): Make\n+\tstatic.\n+\n+2021-11-05  Sandra Loosemore  <sandra@codesourcery.com>\n+\n+\tPR fortran/35276\n+\t* gfortran.texi (Mixed-Language Programming): Talk about C++,\n+\tand how to link.\n+\n 2021-11-04  Sandra Loosemore  <sandra@codesourcery.com>\n \n \t* gfortran.texi (Projects): Add bullet for helping with"}, {"sha": "6345023c702e2c5a0aedd4f5295e2e2eee58c1f6", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 47, "deletions": 0, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/851dff042a238f9ba566468ac6934f878a9e5ac5/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/851dff042a238f9ba566468ac6934f878a9e5ac5/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=851dff042a238f9ba566468ac6934f878a9e5ac5", "patch": "@@ -1,3 +1,50 @@\n+2021-11-05  Harald Anlauf  <anlauf@gmx.de>\n+\n+\tPR fortran/102817\n+\t* gfortran.dg/pr102817.f90: New test.\n+\n+2021-11-05  Jan Hubicka  <hubicka@ucw.cz>\n+\n+\tPR ipa/103073\n+\t* g++.dg/torture/pr103073.C: New test.\n+\t* gcc.dg/tree-ssa/modref-11.c: New test.\n+\n+2021-11-05  Harald Anlauf  <anlauf@gmx.de>\n+\n+\tPR fortran/69419\n+\t* gfortran.dg/pr69419.f90: New test.\n+\n+2021-11-05  Bernhard Reutner-Fischer  <aldot@gcc.gnu.org>\n+\n+\tPR fortran/100972\n+\t* gfortran.dg/implicit_14.f90: Adjust error.\n+\t* gfortran.dg/external_implicit_none_3.f08: New test.\n+\n+2021-11-05  Iain Sandoe  <iain@sandoe.co.uk>\n+\n+\t* gcc.dg/vect/tsvc/tsvc.h: Do not try to include malloc.h\n+\ton Darwin also use posix_memalign ().\n+\n+2021-11-05  Andrew MacLeod  <amacleod@redhat.com>\n+\n+\t* gcc.dg/pr103093.c: New.\n+\n+2021-11-05  Wilco Dijkstra  <wdijkstr@arm.com>\n+\n+\tPR target/103085\n+\tPR target/103085\n+\t* gcc.target/aarch64/pr103085.c: New test\n+\n+2021-11-05  Martin Liska  <mliska@suse.cz>\n+\n+\tPR gcov-profile/102945\n+\t* gcc.dg/gcov-info-to-gcda.c: Filter supported targets.\n+\n+2021-11-05  Martin Liska  <mliska@suse.cz>\n+\n+\tPR debug/102955\n+\t* g++.dg/pr102955.C: New test.\n+\n 2021-11-04  Jonathan Wakely  <jwakely@redhat.com>\n \n \t* g++.dg/cpp0x/lambda/lambda-eh2.C: Add dg-warning for new"}, {"sha": "0f69b44638f6c8ceb5030f10b2c5e17b82a883a1", "filename": "include/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/851dff042a238f9ba566468ac6934f878a9e5ac5/include%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/851dff042a238f9ba566468ac6934f878a9e5ac5/include%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/include%2FChangeLog?ref=851dff042a238f9ba566468ac6934f878a9e5ac5", "patch": "@@ -1,3 +1,8 @@\n+2021-11-05  Gerald Pfeifer  <gerald@pfeifer.com>\n+\t    Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* md5.h (USE_SYSTEM_MD5): Introduce.\n+\n 2021-09-27  Vincent Lefevre  <vincent@vinc17.net>\n \n \t* floatformat.h: Update pathname for IBM long double description."}, {"sha": "9201460e4e2f0ed648a0cfb6624be1c8862f5656", "filename": "libgcc/ChangeLog", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/851dff042a238f9ba566468ac6934f878a9e5ac5/libgcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/851dff042a238f9ba566468ac6934f878a9e5ac5/libgcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2FChangeLog?ref=851dff042a238f9ba566468ac6934f878a9e5ac5", "patch": "@@ -1,3 +1,18 @@\n+2021-11-05  Iain Sandoe  <iain@sandoe.co.uk>\n+\n+\t* config/darwin10-unwind-find-enc-func.c: Include libgcc_tm.h.\n+\t* config/i386/darwin-lib.h: Declare Darwin10 crt function.\n+\n+2021-11-05  John David Anglin  <danglin@gcc.gnu.org>\n+\n+\tPR libgomp/96661\n+\t* config.host (hppa*64*-*-linux*): Revise tmake_file.\n+\t(hppa*64*-*-hpux11*): Likewise.\n+\t* config/pa/sfp-exceptions.c: New.\n+\t* config/pa/sfp-machine.h: New.\n+\t* config/pa/t-dimode: New.\n+\t* config/pa/t-softfp-sfdftf: New.\n+\n 2021-10-27  John David Anglin  <danglin@gcc.gnu.org>\n \n \t* config.host (hppa*64*-*-linux*): Don't add pa/t-linux to"}, {"sha": "c6f116410f7e8d227a10244be3313aa92457af15", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/851dff042a238f9ba566468ac6934f878a9e5ac5/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/851dff042a238f9ba566468ac6934f878a9e5ac5/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=851dff042a238f9ba566468ac6934f878a9e5ac5", "patch": "@@ -1,3 +1,40 @@\n+2021-11-05  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* include/bits/range_access.h (begin(valarray), end(valarray)):\n+\tAdd noexcept.\n+\n+2021-11-05  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* include/std/tuple (tuple_size_v): Fix pack expansion.\n+\n+2021-11-05  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* src/c++11/random.cc (__x86_rdrand, __x86_rdseed): Add\n+\t[[unlikely]] attribute.\n+\n+2021-11-05  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* src/c++11/random.cc [__powerpc__] (USE_DARN): Define.\n+\t(__ppc_darn): New function to use POWER9 DARN instruction.\n+\t(Which): Add 'darn' enumerator.\n+\t(which_source): Check for __ppc_darn.\n+\t(random_device::_M_init): Support \"darn\" and \"hw\" tokens.\n+\t(random_device::_M_getentropy): Add darn to switch.\n+\t* testsuite/26_numerics/random/random_device/cons/token.cc:\n+\tCheck \"darn\" token.\n+\t* testsuite/26_numerics/random/random_device/entropy.cc:\n+\tLikewise.\n+\n+2021-11-05  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* testsuite/lib/gdb-test.exp: Add target selector support to the\n+\tdg-final directives.\n+\t* testsuite/libstdc++-prettyprinters/80276.cc: Add xfail for\n+\tC++20.\n+\t* testsuite/libstdc++-prettyprinters/libfundts.cc: Likewise.\n+\t* testsuite/libstdc++-prettyprinters/prettyprinters.exp: Tweak\n+\tcomment.\n+\n 2021-11-04  Jonathan Wakely  <jwakely@redhat.com>\n \n \tPR libstdc++/103086"}]}