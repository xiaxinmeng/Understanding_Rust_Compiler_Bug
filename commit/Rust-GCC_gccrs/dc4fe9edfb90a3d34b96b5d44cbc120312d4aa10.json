{"sha": "dc4fe9edfb90a3d34b96b5d44cbc120312d4aa10", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGM0ZmU5ZWRmYjkwYTNkMzRiOTZiNWQ0NGNiYzEyMDMxMmQ0YWExMA==", "commit": {"author": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2013-12-14T13:31:04Z"}, "committer": {"name": "Marek Polacek", "email": "mpolacek@gcc.gnu.org", "date": "2013-12-14T13:31:04Z"}, "message": "More tests for ubsan.\n\nFrom-SVN: r205985", "tree": {"sha": "2c2e1f4eb46204e55c42540ed4337dd9c1b9e2b0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2c2e1f4eb46204e55c42540ed4337dd9c1b9e2b0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dc4fe9edfb90a3d34b96b5d44cbc120312d4aa10", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dc4fe9edfb90a3d34b96b5d44cbc120312d4aa10", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dc4fe9edfb90a3d34b96b5d44cbc120312d4aa10", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dc4fe9edfb90a3d34b96b5d44cbc120312d4aa10/comments", "author": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "7ddf4d5acea6123be6f3040e7306b5ea2cb2d651", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7ddf4d5acea6123be6f3040e7306b5ea2cb2d651", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7ddf4d5acea6123be6f3040e7306b5ea2cb2d651"}], "stats": {"total": 276, "additions": 276, "deletions": 0}, "files": [{"sha": "09d2291179ef139042504fd67ad7ab764f059a53", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dc4fe9edfb90a3d34b96b5d44cbc120312d4aa10/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dc4fe9edfb90a3d34b96b5d44cbc120312d4aa10/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=dc4fe9edfb90a3d34b96b5d44cbc120312d4aa10", "patch": "@@ -1,3 +1,8 @@\n+2013-12-14  Marek Polacek  <polacek@redhat.com>\n+\n+\t* c-c++-common/ubsan/overflow-1.c: New test.\n+\t* c-c++-common/ubsan/overflow-2.c: New test.\n+\n 2013-12-14  Marek Polacek  <polacek@redhat.com>\n \n \tPR sanitizer/59503"}, {"sha": "e8965d2f0257eb3357f183d74ecf441d1f752621", "filename": "gcc/testsuite/c-c++-common/ubsan/overflow-1.c", "status": "added", "additions": 263, "deletions": 0, "changes": 263, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dc4fe9edfb90a3d34b96b5d44cbc120312d4aa10/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Foverflow-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dc4fe9edfb90a3d34b96b5d44cbc120312d4aa10/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Foverflow-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Foverflow-1.c?ref=dc4fe9edfb90a3d34b96b5d44cbc120312d4aa10", "patch": "@@ -0,0 +1,263 @@\n+/* { dg-do run } */\n+/* { dg-options \"-fsanitize=signed-integer-overflow\" } */\n+/* { dg-skip-if \"\" { *-*-* } { \"-flto\" } { \"\" } } */\n+\n+#ifndef ASM1\n+# define ASM1(a) /* Nothing */\n+#endif\n+#ifndef ASM2\n+# define ASM2(a, b) /* Nothing */\n+#endif\n+\n+#define CHECK(A, B) ({ if ((A) != (B)) __builtin_abort (); })\n+\n+#define FN1(T1, T2, OP)\t\t\t\t\\\n+  ({\t\t\t\t\t\t\\\n+    T1 a = 14;\t\t\t\t\t\\\n+    T2 b = 9;\t\t\t\t\t\\\n+    ASM2 (a, b);\t\t\t\t\\\n+    a OP b;\t\t\t\t\t\\\n+  })\n+\n+#define FN2(T, OP)\t\t\t\t\\\n+  ({\t\t\t\t\t\t\\\n+    T a = 14;\t\t\t\t\t\\\n+    ASM1 (a);\t\t\t\t\t\\\n+    a OP 7;\t\t\t\t\t\\\n+  })\n+\n+#define FN3(T1, T2, OP)\t\t\t\t\\\n+  ({\t\t\t\t\t\t\\\n+    T1 a = 4;\t\t\t\t\t\\\n+    T2 b = 1;\t\t\t\t\t\\\n+    ASM2 (a, b);\t\t\t\t\\\n+    ~a OP b;\t\t\t\t\t\\\n+  })\n+\n+#define FN4(T1, T2, OP)\t\t\t\t\\\n+  ({\t\t\t\t\t\t\\\n+    T1 a = 4;\t\t\t\t\t\\\n+    T2 b = 1;\t\t\t\t\t\\\n+    ASM2 (a, b);\t\t\t\t\\\n+    a OP ~b;\t\t\t\t\t\\\n+  })\n+\n+#define FN5(T)\t\t\t\t\t\\\n+  ({\t\t\t\t\t\t\\\n+    T a = 77;\t\t\t\t\t\\\n+    ASM1 (a);\t\t\t\t\t\\\n+    -a;\t\t\t\t\t\t\\\n+  })\n+\n+int\n+main (void)\n+{\n+  CHECK (FN1 (char, char, +), 23);\n+  CHECK (FN1 (char, char, -), 5);\n+  CHECK (FN1 (char, char, *), 126);\n+  CHECK (FN1 (unsigned char, unsigned char, +), 23);\n+  CHECK (FN1 (unsigned char, unsigned char, -), 5);\n+  CHECK (FN1 (unsigned char, unsigned char, *), 126);\n+  CHECK (FN1 (short, short, +), 23);\n+  CHECK (FN1 (short, short, -), 5);\n+  CHECK (FN1 (short, short, *), 126);\n+  CHECK (FN1 (unsigned short, unsigned short, +), 23);\n+  CHECK (FN1 (unsigned short, unsigned short, -), 5);\n+  CHECK (FN1 (unsigned short, unsigned short, *), 126);\n+  CHECK (FN1 (int, int, +), 23);\n+  CHECK (FN1 (int, int, -), 5);\n+  CHECK (FN1 (int, int, *), 126);\n+  CHECK (FN1 (unsigned int, unsigned int, +), 23);\n+  CHECK (FN1 (unsigned int, unsigned int, -), 5);\n+  CHECK (FN1 (unsigned int, unsigned int, *), 126);\n+  CHECK (FN1 (long int, long int, +), 23);\n+  CHECK (FN1 (long int, long int, -), 5);\n+  CHECK (FN1 (long int, long int, *), 126);\n+  CHECK (FN1 (unsigned long int, unsigned long int, +), 23);\n+  CHECK (FN1 (unsigned long int, unsigned long int, -), 5);\n+  CHECK (FN1 (unsigned long int, unsigned long int, *), 126);\n+  CHECK (FN1 (long long int, long int, +), 23);\n+  CHECK (FN1 (long long int, long int, -), 5);\n+  CHECK (FN1 (long long int, long int, *), 126);\n+  CHECK (FN1 (unsigned long long int, unsigned long long int, +), 23);\n+  CHECK (FN1 (unsigned long long int, unsigned long long int, -), 5);\n+  CHECK (FN1 (unsigned long long int, unsigned long long int, *), 126);\n+  CHECK (FN1 (int, unsigned char, +), 23);\n+  CHECK (FN1 (int, unsigned char, -), 5);\n+  CHECK (FN1 (int, unsigned char, *), 126);\n+  CHECK (FN1 (unsigned char, int, +), 23);\n+  CHECK (FN1 (unsigned char, int, -), 5);\n+  CHECK (FN1 (unsigned char, int, *), 126);\n+  CHECK (FN1 (int, long int, +), 23);\n+  CHECK (FN1 (int, long int, -), 5);\n+  CHECK (FN1 (int, long int, *), 126);\n+  CHECK (FN1 (long int, int, +), 23);\n+  CHECK (FN1 (long int, int, -), 5);\n+  CHECK (FN1 (long int, int, *), 126);\n+  CHECK (FN1 (unsigned int, int, +), 23);\n+  CHECK (FN1 (unsigned int, int, -), 5);\n+  CHECK (FN1 (unsigned int, int, *), 126);\n+  CHECK (FN1 (int, unsigned int, +), 23);\n+  CHECK (FN1 (int, unsigned int, -), 5);\n+  CHECK (FN1 (int, unsigned int, *), 126);\n+  CHECK (FN1 (unsigned long int, int, +), 23);\n+  CHECK (FN1 (unsigned long int, int, -), 5);\n+  CHECK (FN1 (unsigned long int, int, *), 126);\n+  CHECK (FN1 (int, unsigned long int, +), 23);\n+  CHECK (FN1 (int, unsigned long int, -), 5);\n+  CHECK (FN1 (int, unsigned long int, *), 126);\n+\n+  CHECK (FN2 (char, +), 21);\n+  CHECK (FN2 (char, -), 7);\n+  CHECK (FN2 (char, *), 98);\n+  CHECK (FN2 (unsigned char, +), 21);\n+  CHECK (FN2 (unsigned char, -), 7);\n+  CHECK (FN2 (unsigned char, *), 98);\n+  CHECK (FN2 (short, +), 21);\n+  CHECK (FN2 (short, -), 7);\n+  CHECK (FN2 (short, *), 98);\n+  CHECK (FN2 (unsigned short, +), 21);\n+  CHECK (FN2 (unsigned short, -), 7);\n+  CHECK (FN2 (unsigned short, *), 98);\n+  CHECK (FN2 (int, +), 21);\n+  CHECK (FN2 (int, -), 7);\n+  CHECK (FN2 (int, *), 98);\n+  CHECK (FN2 (unsigned int, +), 21);\n+  CHECK (FN2 (unsigned int, -), 7);\n+  CHECK (FN2 (unsigned int, *), 98);\n+  CHECK (FN2 (long int, +), 21);\n+  CHECK (FN2 (long int, -), 7);\n+  CHECK (FN2 (long int, *), 98);\n+  CHECK (FN2 (unsigned long int, +), 21);\n+  CHECK (FN2 (unsigned long int, -), 7);\n+  CHECK (FN2 (unsigned long int, *), 98);\n+  CHECK (FN2 (long long int, +), 21);\n+  CHECK (FN2 (long long int, -), 7);\n+  CHECK (FN2 (long long int, *), 98);\n+  CHECK (FN2 (unsigned long long int, +), 21);\n+  CHECK (FN2 (unsigned long long int, -), 7);\n+  CHECK (FN2 (unsigned long long int, *), 98);\n+\n+  CHECK (FN3 (char, char, +), -4);\n+  CHECK (FN3 (char, char, -), -6);\n+  CHECK (FN3 (char, char, *), -5);\n+  CHECK (FN3 (unsigned char, unsigned char, +), -4);\n+  CHECK (FN3 (unsigned char, unsigned char, -), -6);\n+  CHECK (FN3 (unsigned char, unsigned char, *), -5);\n+  CHECK (FN3 (short, short, +), -4);\n+  CHECK (FN3 (short, short, -), -6);\n+  CHECK (FN3 (short, short, *), -5);\n+  CHECK (FN3 (unsigned short, unsigned short, +), -4);\n+  CHECK (FN3 (unsigned short, unsigned short, -), -6);\n+  CHECK (FN3 (unsigned short, unsigned short, *), -5);\n+  CHECK (FN3 (int, int, +), -4);\n+  CHECK (FN3 (int, int, -), -6);\n+  CHECK (FN3 (int, int, *), -5);\n+  CHECK (FN3 (unsigned int, unsigned int, +), -4);\n+  CHECK (FN3 (unsigned int, unsigned int, -), -6);\n+  CHECK (FN3 (unsigned int, unsigned int, *), -5);\n+  CHECK (FN3 (long int, long int, +), -4);\n+  CHECK (FN3 (long int, long int, -), -6);\n+  CHECK (FN3 (long int, long int, *), -5);\n+  CHECK (FN3 (unsigned long int, unsigned long int, +), -4);\n+  CHECK (FN3 (unsigned long int, unsigned long int, -), -6);\n+  CHECK (FN3 (unsigned long int, unsigned long int, *), -5);\n+  CHECK (FN3 (long long int, long int, +), -4);\n+  CHECK (FN3 (long long int, long int, -), -6);\n+  CHECK (FN3 (long long int, long int, *), -5);\n+  CHECK (FN3 (unsigned long long int, unsigned long long int, +), -4);\n+  CHECK (FN3 (unsigned long long int, unsigned long long int, -), -6);\n+  CHECK (FN3 (unsigned long long int, unsigned long long int, *), -5);\n+  CHECK (FN3 (int, unsigned char, +), -4);\n+  CHECK (FN3 (int, unsigned char, -), -6);\n+  CHECK (FN3 (int, unsigned char, *), -5);\n+  CHECK (FN3 (unsigned char, int, +), -4);\n+  CHECK (FN3 (unsigned char, int, -), -6);\n+  CHECK (FN3 (unsigned char, int, *), -5);\n+  CHECK (FN3 (int, long int, +), -4);\n+  CHECK (FN3 (int, long int, -), -6);\n+  CHECK (FN3 (int, long int, *), -5);\n+  CHECK (FN3 (long int, int, +), -4);\n+  CHECK (FN3 (long int, int, -), -6);\n+  CHECK (FN3 (long int, int, *), -5);\n+  CHECK (FN3 (unsigned int, int, +), -4);\n+  CHECK (FN3 (unsigned int, int, -), -6);\n+  CHECK (FN3 (unsigned int, int, *), -5);\n+  CHECK (FN3 (int, unsigned int, +), -4);\n+  CHECK (FN3 (int, unsigned int, -), -6);\n+  CHECK (FN3 (int, unsigned int, *), -5);\n+  CHECK (FN3 (unsigned long int, int, +), -4);\n+  CHECK (FN3 (unsigned long int, int, -), -6);\n+  CHECK (FN3 (unsigned long int, int, *), -5);\n+  CHECK (FN3 (int, unsigned long int, +), -4);\n+  CHECK (FN3 (int, unsigned long int, -), -6);\n+  CHECK (FN3 (int, unsigned long int, *), -5);\n+\n+  CHECK (FN4 (char, char, +), 2);\n+  CHECK (FN4 (char, char, -), 6);\n+  CHECK (FN4 (char, char, *), -8);\n+  CHECK (FN4 (unsigned char, unsigned char, +), 2);\n+  CHECK (FN4 (unsigned char, unsigned char, -), 6);\n+  CHECK (FN4 (unsigned char, unsigned char, *), -8);\n+  CHECK (FN4 (short, short, +), 2);\n+  CHECK (FN4 (short, short, -), 6);\n+  CHECK (FN4 (short, short, *), -8);\n+  CHECK (FN4 (unsigned short, unsigned short, +), 2);\n+  CHECK (FN4 (unsigned short, unsigned short, -), 6);\n+  CHECK (FN4 (unsigned short, unsigned short, *), -8);\n+  CHECK (FN4 (int, int, +), 2);\n+  CHECK (FN4 (int, int, -), 6);\n+  CHECK (FN4 (int, int, *), -8);\n+  CHECK (FN4 (unsigned int, unsigned int, +), 2);\n+  CHECK (FN4 (unsigned int, unsigned int, -), 6);\n+  CHECK (FN4 (unsigned int, unsigned int, *), -8);\n+  CHECK (FN4 (long int, long int, +), 2);\n+  CHECK (FN4 (long int, long int, -), 6);\n+  CHECK (FN4 (long int, long int, *), -8);\n+  CHECK (FN4 (unsigned long int, unsigned long int, +), 2);\n+  CHECK (FN4 (unsigned long int, unsigned long int, -), 6);\n+  CHECK (FN4 (unsigned long int, unsigned long int, *), -8);\n+  CHECK (FN4 (long long int, long int, +), 2);\n+  CHECK (FN4 (long long int, long int, -), 6);\n+  CHECK (FN4 (long long int, long int, *), -8);\n+  CHECK (FN4 (unsigned long long int, unsigned long long int, +), 2);\n+  CHECK (FN4 (unsigned long long int, unsigned long long int, -), 6);\n+  CHECK (FN4 (unsigned long long int, unsigned long long int, *), -8);\n+  CHECK (FN4 (int, unsigned char, +), 2);\n+  CHECK (FN4 (int, unsigned char, -), 6);\n+  CHECK (FN4 (int, unsigned char, *), -8);\n+  CHECK (FN4 (unsigned char, int, +), 2);\n+  CHECK (FN4 (unsigned char, int, -), 6);\n+  CHECK (FN4 (unsigned char, int, *), -8);\n+  CHECK (FN4 (int, long int, +), 2);\n+  CHECK (FN4 (int, long int, -), 6);\n+  CHECK (FN4 (int, long int, *), -8);\n+  CHECK (FN4 (long int, int, +), 2);\n+  CHECK (FN4 (long int, int, -), 6);\n+  CHECK (FN4 (long int, int, *), -8);\n+  CHECK (FN4 (unsigned int, int, +), 2);\n+  CHECK (FN4 (unsigned int, int, -), 6);\n+  CHECK (FN4 (unsigned int, int, *), -8);\n+  CHECK (FN4 (int, unsigned int, +), 2);\n+  CHECK (FN4 (int, unsigned int, -), 6);\n+  CHECK (FN4 (int, unsigned int, *), -8);\n+  CHECK (FN4 (unsigned long int, int, +), 2);\n+  CHECK (FN4 (unsigned long int, int, -), 6);\n+  CHECK (FN4 (unsigned long int, int, *), -8);\n+  CHECK (FN4 (int, unsigned long int, +), 2);\n+  CHECK (FN4 (int, unsigned long int, -), 6);\n+  CHECK (FN4 (int, unsigned long int, *), -8);\n+\n+  CHECK (FN5 (char), -77);\n+  CHECK (FN5 (unsigned char), -77);\n+  CHECK (FN5 (short), -77);\n+  CHECK (FN5 (unsigned short), -77);\n+  CHECK (FN5 (int), -77);\n+  CHECK (FN5 (unsigned int), -77);\n+  CHECK (FN5 (long int), -77);\n+  CHECK (FN5 (unsigned long int), -77);\n+  CHECK (FN5 (long long int), -77);\n+  CHECK (FN5 (unsigned long long int), -77);\n+\n+  return 0;\n+}"}, {"sha": "bd4139f8dff4b6670e4c9c1c182d6ba44e0b1c64", "filename": "gcc/testsuite/c-c++-common/ubsan/overflow-2.c", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dc4fe9edfb90a3d34b96b5d44cbc120312d4aa10/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Foverflow-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dc4fe9edfb90a3d34b96b5d44cbc120312d4aa10/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Foverflow-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Foverflow-2.c?ref=dc4fe9edfb90a3d34b96b5d44cbc120312d4aa10", "patch": "@@ -0,0 +1,8 @@\n+/* { dg-do run } */\n+/* { dg-options \"-fsanitize=signed-integer-overflow\" } */\n+/* { dg-skip-if \"\" { *-*-* } { \"-flto\" } { \"\" } } */\n+\n+#define ASM1(a) asm volatile (\"\" : \"+g\" (a))\n+#define ASM2(a, b) asm volatile (\"\" : \"+g\" (a), \"+g\" (b))\n+\n+#include \"overflow-1.c\""}]}