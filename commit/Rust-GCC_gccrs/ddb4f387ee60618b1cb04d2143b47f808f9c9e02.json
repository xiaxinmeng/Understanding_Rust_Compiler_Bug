{"sha": "ddb4f387ee60618b1cb04d2143b47f808f9c9e02", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGRiNGYzODdlZTYwNjE4YjFjYjA0ZDIxNDNiNDdmODA4ZjljOWUwMg==", "commit": {"author": {"name": "Richard Earnshaw", "email": "rearnsha@arm.com", "date": "2007-06-13T19:31:58Z"}, "committer": {"name": "Richard Earnshaw", "email": "rearnsha@gcc.gnu.org", "date": "2007-06-13T19:31:58Z"}, "message": "eh_arm.cc (__cxa_type_match): Handle foreign exceptions.\n\n\t* libsupc++/eh_arm.cc (__cxa_type_match): Handle foreign\n\texceptions.\n\t* libsubpc++/eh_personality.cc: Don't try to set up foreign or\n\tforced unwind types here when using the ARM EABI unwinder.\n\nFrom-SVN: r125683", "tree": {"sha": "192108f6e223cc6ce0e5ddafcb6dd72d42e86d70", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/192108f6e223cc6ce0e5ddafcb6dd72d42e86d70"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ddb4f387ee60618b1cb04d2143b47f808f9c9e02", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ddb4f387ee60618b1cb04d2143b47f808f9c9e02", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ddb4f387ee60618b1cb04d2143b47f808f9c9e02", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ddb4f387ee60618b1cb04d2143b47f808f9c9e02/comments", "author": null, "committer": null, "parents": [{"sha": "29dc9e20114a1b70e01fe6fec5d329c06b75718d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/29dc9e20114a1b70e01fe6fec5d329c06b75718d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/29dc9e20114a1b70e01fe6fec5d329c06b75718d"}], "stats": {"total": 29, "additions": 22, "deletions": 7}, "files": [{"sha": "2e4bdd7b7e3841c7054a9f4bd79faef87d7cc41d", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ddb4f387ee60618b1cb04d2143b47f808f9c9e02/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ddb4f387ee60618b1cb04d2143b47f808f9c9e02/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=ddb4f387ee60618b1cb04d2143b47f808f9c9e02", "patch": "@@ -1,3 +1,10 @@\n+2007-06-13  Richard Earnshaw  <rearnsha@arm.com>\n+\n+\t* libsupc++/eh_arm.cc (__cxa_type_match): Handle foreign\n+\texceptions.\n+\t* libsubpc++/eh_personality.cc: Don't try to set up foreign or\n+\tforced unwind types here when using the ARM EABI unwinder.\n+\n 2007-06-13  Paolo Carlini  <pcarlini@suse.de>\n \n \t* include/c_global/cmath: Tweak includes."}, {"sha": "e1e4851604b5bf66bcbccce7064250f8493aa1e9", "filename": "libstdc++-v3/libsupc++/eh_arm.cc", "status": "modified", "additions": 9, "deletions": 4, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ddb4f387ee60618b1cb04d2143b47f808f9c9e02/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Feh_arm.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ddb4f387ee60618b1cb04d2143b47f808f9c9e02/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Feh_arm.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Feh_arm.cc?ref=ddb4f387ee60618b1cb04d2143b47f808f9c9e02", "patch": "@@ -46,11 +46,16 @@ __cxa_type_match(_Unwind_Exception* ue_header,\n \t\t bool is_reference __attribute__((__unused__)),\n \t\t void** thrown_ptr_p)\n {\n-  if (!__is_gxx_exception_class(ue_header->exception_class))\n-    return ctm_failed;\n-\n+  bool foreign_exception = !__is_gxx_exception_class(ue_header->exception_class);\n   __cxa_exception* xh = __get_exception_header_from_ue(ue_header);\n-  const std::type_info* throw_type = xh->exceptionType;\n+  const std::type_info* throw_type;\n+\n+  // XXX What to do with forced unwind?\n+  if (foreign_exception)\n+    throw_type = &typeid(abi::__foreign_exception);\n+  else\n+    throw_type = xh->exceptionType;\n+\n   void* thrown_ptr = *thrown_ptr_p;\n \n   // Pointer types need to adjust the actual pointer, not"}, {"sha": "f1cda0c1bbf2a05c4013c14d84beefb6d5bd7f53", "filename": "libstdc++-v3/libsupc++/eh_personality.cc", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ddb4f387ee60618b1cb04d2143b47f808f9c9e02/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Feh_personality.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ddb4f387ee60618b1cb04d2143b47f808f9c9e02/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Feh_personality.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Feh_personality.cc?ref=ddb4f387ee60618b1cb04d2143b47f808f9c9e02", "patch": "@@ -542,6 +542,12 @@ PERSONALITY_FUNCTION (int version,\n       bool saw_cleanup = false;\n       bool saw_handler = false;\n \n+#ifdef __ARM_EABI_UNWINDER__\n+      throw_type = ue_header;\n+      if ((actions & _UA_FORCE_UNWIND)\n+\t  || foreign_exception)\n+\tthrown_ptr = 0;\n+#else\n       // During forced unwinding, match a magic exception type.\n       if (actions & _UA_FORCE_UNWIND)\n \t{\n@@ -556,9 +562,6 @@ PERSONALITY_FUNCTION (int version,\n \t  thrown_ptr = 0;\n \t}\n       else\n-#ifdef __ARM_EABI_UNWINDER__\n-\tthrow_type = ue_header;\n-#else\n \tthrow_type = xh->exceptionType;\n #endif\n "}]}