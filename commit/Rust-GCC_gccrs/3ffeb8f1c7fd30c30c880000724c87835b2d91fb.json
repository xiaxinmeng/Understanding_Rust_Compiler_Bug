{"sha": "3ffeb8f1c7fd30c30c880000724c87835b2d91fb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2ZmZWI4ZjFjN2ZkMzBjMzBjODgwMDAwNzI0Yzg3ODM1YjJkOTFmYg==", "commit": {"author": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1995-04-25T22:25:28Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1995-04-25T22:25:28Z"}, "message": "(expand_return): When returning BLKmode structure in\nregisters, copy it to a psuedo-reg instead of to hard registers.\n\nFrom-SVN: r9452", "tree": {"sha": "40ccb96c146fbf08810df9759941b59007f620c1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/40ccb96c146fbf08810df9759941b59007f620c1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3ffeb8f1c7fd30c30c880000724c87835b2d91fb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3ffeb8f1c7fd30c30c880000724c87835b2d91fb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3ffeb8f1c7fd30c30c880000724c87835b2d91fb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3ffeb8f1c7fd30c30c880000724c87835b2d91fb/comments", "author": null, "committer": null, "parents": [{"sha": "91887f0bf6ef3df96750e4d35f08a609c8dc7434", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/91887f0bf6ef3df96750e4d35f08a609c8dc7434", "html_url": "https://github.com/Rust-GCC/gccrs/commit/91887f0bf6ef3df96750e4d35f08a609c8dc7434"}], "stats": {"total": 34, "additions": 18, "deletions": 16}, "files": [{"sha": "ac8683b8c852e4aaf0c7b06ae85989a13e6c369d", "filename": "gcc/stmt.c", "status": "modified", "additions": 18, "deletions": 16, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ffeb8f1c7fd30c30c880000724c87835b2d91fb/gcc%2Fstmt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ffeb8f1c7fd30c30c880000724c87835b2d91fb/gcc%2Fstmt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fstmt.c?ref=3ffeb8f1c7fd30c30c880000724c87835b2d91fb", "patch": "@@ -2680,7 +2680,8 @@ expand_return (retval)\n      copying a BLKmode value into registers.  We could put this code in a\n      more general area (for use by everyone instead of just function\n      call/return), but until this feature is generally usable it is kept here\n-     (and in expand_call).  */\n+     (and in expand_call).  The value must go into a pseudo in case there\n+     are cleanups that will clobber the real return register.  */\n \n   if (retval_rhs != 0\n       && TYPE_MODE (TREE_TYPE (retval_rhs)) == BLKmode\n@@ -2691,7 +2692,7 @@ expand_return (retval)\n       int bytes = int_size_in_bytes (TREE_TYPE (retval_rhs));\n       int n_regs = (bytes + UNITS_PER_WORD - 1) / UNITS_PER_WORD;\n       rtx *result_pseudos = (rtx *) alloca (sizeof (rtx) * n_regs);\n-      rtx result_reg = DECL_RTL (DECL_RESULT (current_function_decl));\n+      rtx result_reg;\n       rtx result_val = expand_expr (retval_rhs, NULL_RTX, VOIDmode, 0);\n       enum machine_mode tmpmode;\n \n@@ -2733,31 +2734,32 @@ expand_return (retval)\n \t    }\n \t}\n \n-      /* Now that the value is in pseudos, copy it to the result reg(s).  */\n-      emit_queue ();\n-      free_temp_slots ();\n-      for (i = 0; i < n_regs; i++)\n-\temit_move_insn (gen_rtx (REG, word_mode, REGNO (result_reg) + i),\n-\t\t\tresult_pseudos[i]);\n-\n       /* Find the smallest integer mode large enough to hold the\n \t entire structure and use that mode instead of BLKmode\n \t on the USE insn for the return register.   */\n       bytes = int_size_in_bytes (TREE_TYPE (retval_rhs));\n       for (tmpmode = GET_CLASS_NARROWEST_MODE (MODE_INT);\n \t   tmpmode != MAX_MACHINE_MODE;\n \t   tmpmode = GET_MODE_WIDER_MODE (tmpmode))\n-      {\n-\t/* Have we found a large enough mode?  */\n-\tif (GET_MODE_SIZE (tmpmode) >= bytes)\n-\t  break;\n-      }\n+\t{\n+\t  /* Have we found a large enough mode?  */\n+\t  if (GET_MODE_SIZE (tmpmode) >= bytes)\n+\t    break;\n+\t}\n \n       /* No suitable mode found.  */\n       if (tmpmode == MAX_MACHINE_MODE)\n-      abort ();\n+\tabort ();\n+\n+      result_reg = gen_reg_rtx (tmpmode);\n+      PUT_MODE (DECL_RTL (DECL_RESULT (current_function_decl)), tmpmode);\n \n-      PUT_MODE (result_reg, tmpmode);\n+      /* Now that the value is in pseudos, copy it to the result reg(s).  */\n+      emit_queue ();\n+      free_temp_slots ();\n+      for (i = 0; i < n_regs; i++)\n+\temit_move_insn (gen_rtx (REG, word_mode, REGNO (result_reg) + i),\n+\t\t\tresult_pseudos[i]);\n \n       expand_value_return (result_reg);\n     }"}]}