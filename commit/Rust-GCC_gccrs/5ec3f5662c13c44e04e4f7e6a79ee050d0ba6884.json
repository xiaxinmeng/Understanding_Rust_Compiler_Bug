{"sha": "5ec3f5662c13c44e04e4f7e6a79ee050d0ba6884", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWVjM2Y1NjYyYzEzYzQ0ZTA0ZTRmN2U2YTc5ZWUwNTBkMGJhNjg4NA==", "commit": {"author": {"name": "Benjamin Kosnik", "email": "bkoz@redhat.com", "date": "2003-12-10T04:52:37Z"}, "committer": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2003-12-10T04:52:37Z"}, "message": "linker-map.gnu: Remove private ios_base members from export list.\n\n\n 2003-12-09  Benjamin Kosnik  <bkoz@redhat.com>\n\n        * config/linker-map.gnu: Remove private ios_base members from\n        export list.\n\n        * config/cpu/alpha/atomicity.h: Consistently format.\n        * config/cpu/cris/atomicity.h: Same.\n        * config/cpu/generic/atomicity.h: Same.\n        * config/cpu/hppa/atomicity.h: Same.\n        * config/cpu/i386/atomicity.h: Same.\n        * config/cpu/i486/atomicity.h: Same.\n        * config/cpu/ia64/atomicity.h: Same.\n        * config/cpu/m68k/atomicity.h: Same.\n        * config/cpu/mips/atomicity.h: Same.\n        * config/cpu/powerpc/atomicity.h: Same.\n        * config/cpu/s390/atomicity.h: Same.\n        * config/cpu/sparc/atomicity.h: Same.\n\nFrom-SVN: r74486", "tree": {"sha": "3a32a8f34a6555cc48b4d2053b49057123441b01", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3a32a8f34a6555cc48b4d2053b49057123441b01"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5ec3f5662c13c44e04e4f7e6a79ee050d0ba6884", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5ec3f5662c13c44e04e4f7e6a79ee050d0ba6884", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5ec3f5662c13c44e04e4f7e6a79ee050d0ba6884", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5ec3f5662c13c44e04e4f7e6a79ee050d0ba6884/comments", "author": null, "committer": null, "parents": [{"sha": "a15bf80337bccc31a5cf8a353c602e5d00b26358", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a15bf80337bccc31a5cf8a353c602e5d00b26358", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a15bf80337bccc31a5cf8a353c602e5d00b26358"}], "stats": {"total": 159, "additions": 94, "deletions": 65}, "files": [{"sha": "9087092f4d4dc797124c24174ecf950cddbb5bba", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5ec3f5662c13c44e04e4f7e6a79ee050d0ba6884/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5ec3f5662c13c44e04e4f7e6a79ee050d0ba6884/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=5ec3f5662c13c44e04e4f7e6a79ee050d0ba6884", "patch": "@@ -1,3 +1,21 @@\n+2003-12-09  Benjamin Kosnik  <bkoz@redhat.com>\n+\t\n+\t* config/linker-map.gnu: Remove private ios_base members from\n+\texport list.\n+\n+\t* config/cpu/alpha/atomicity.h: Consistently format.\n+\t* config/cpu/cris/atomicity.h: Same.\n+\t* config/cpu/generic/atomicity.h: Same.\n+\t* config/cpu/hppa/atomicity.h: Same.\n+\t* config/cpu/i386/atomicity.h: Same.\n+\t* config/cpu/i486/atomicity.h: Same.\n+\t* config/cpu/ia64/atomicity.h: Same.\n+\t* config/cpu/m68k/atomicity.h: Same.\n+\t* config/cpu/mips/atomicity.h: Same.\n+\t* config/cpu/powerpc/atomicity.h: Same.\n+\t* config/cpu/s390/atomicity.h: Same.\n+\t* config/cpu/sparc/atomicity.h: Same.\n+\t\n 2003-12-09  Benjamin Kosnik  <bkoz@redhat.com>\n \n \tPR libstdc++/13296"}, {"sha": "cb071cdae97143fd24896c543c0fbc3d43eb55c3", "filename": "libstdc++-v3/config/cpu/alpha/atomicity.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5ec3f5662c13c44e04e4f7e6a79ee050d0ba6884/libstdc%2B%2B-v3%2Fconfig%2Fcpu%2Falpha%2Fatomicity.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5ec3f5662c13c44e04e4f7e6a79ee050d0ba6884/libstdc%2B%2B-v3%2Fconfig%2Fcpu%2Falpha%2Fatomicity.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fcpu%2Falpha%2Fatomicity.h?ref=5ec3f5662c13c44e04e4f7e6a79ee050d0ba6884", "patch": "@@ -1,6 +1,6 @@\n // Low-level functions for atomic operations: Alpha version  -*- C++ -*-\n \n-// Copyright (C) 1999, 2000, 2001 Free Software Foundation, Inc.\n+// Copyright (C) 1999, 2000, 2001, 2003 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -39,7 +39,7 @@ typedef int _Atomic_word;\n \n static inline _Atomic_word\n __attribute__ ((__unused__))\n-__exchange_and_add (volatile _Atomic_word* __mem, int __val)\n+__exchange_and_add(volatile _Atomic_word* __mem, int __val)\n {\n   register int __result, __tmp;\n \n@@ -58,7 +58,7 @@ __exchange_and_add (volatile _Atomic_word* __mem, int __val)\n \n static inline void\n __attribute__ ((__unused__))\n-__atomic_add (volatile _Atomic_word* __mem, int __val)\n+__atomic_add(volatile _Atomic_word* __mem, int __val)\n {\n   register _Atomic_word __result;\n "}, {"sha": "f254c769b1820ac889c911fd9fa508ee7575966d", "filename": "libstdc++-v3/config/cpu/cris/atomicity.h", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5ec3f5662c13c44e04e4f7e6a79ee050d0ba6884/libstdc%2B%2B-v3%2Fconfig%2Fcpu%2Fcris%2Fatomicity.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5ec3f5662c13c44e04e4f7e6a79ee050d0ba6884/libstdc%2B%2B-v3%2Fconfig%2Fcpu%2Fcris%2Fatomicity.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fcpu%2Fcris%2Fatomicity.h?ref=5ec3f5662c13c44e04e4f7e6a79ee050d0ba6884", "patch": "@@ -1,6 +1,6 @@\n // Low-level functions for atomic operations: CRIS version  -*- C++ -*-\n \n-// Copyright (C) 2001 Free Software Foundation, Inc.\n+// Copyright (C) 2001, 2003 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -35,7 +35,7 @@ typedef int _Atomic_word __attribute__ ((__aligned__ (4)));\n \n static inline _Atomic_word\n __attribute__ ((__unused__))\n-__exchange_and_add (_Atomic_word* __mem, int __val)\n+__exchange_and_add(_Atomic_word* __mem, int __val)\n {\n   int __tmp;\n   _Atomic_word __result;\n@@ -71,9 +71,9 @@ __exchange_and_add (_Atomic_word* __mem, int __val)\n \n static inline void\n __attribute__ ((__unused__))\n-__atomic_add (_Atomic_word* __mem, int __val)\n+__atomic_add(_Atomic_word* __mem, int __val)\n {\n-  __exchange_and_add (__mem, __val);\n+  __exchange_and_add(__mem, __val);\n }\n \n #endif /* atomicity.h */"}, {"sha": "1bee9ea6b0c6730fc94072c8a692dfdd635a6841", "filename": "libstdc++-v3/config/cpu/generic/atomicity.h", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5ec3f5662c13c44e04e4f7e6a79ee050d0ba6884/libstdc%2B%2B-v3%2Fconfig%2Fcpu%2Fgeneric%2Fatomicity.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5ec3f5662c13c44e04e4f7e6a79ee050d0ba6884/libstdc%2B%2B-v3%2Fconfig%2Fcpu%2Fgeneric%2Fatomicity.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fcpu%2Fgeneric%2Fatomicity.h?ref=5ec3f5662c13c44e04e4f7e6a79ee050d0ba6884", "patch": "@@ -48,30 +48,30 @@ namespace __gnu_cxx\n \n static inline _Atomic_word\n __attribute__ ((__unused__))\n-__exchange_and_add (volatile _Atomic_word* __mem, int __val)\n+__exchange_and_add(volatile _Atomic_word* __mem, int __val)\n {\n #ifndef __GTHREAD_MUTEX_INIT\n-  __gthread_once (&__gnu_cxx::_Atomic_add_mutex_once,\n-                  __gnu_cxx::__gthread_atomic_add_mutex_once);\n+  __gthread_once(&__gnu_cxx::_Atomic_add_mutex_once,\n+\t\t __gnu_cxx::__gthread_atomic_add_mutex_once);\n #endif\n \n   _Atomic_word __result;\n \n-  __gthread_mutex_lock (&__gnu_cxx::_Atomic_add_mutex);\n+  __gthread_mutex_lock(&__gnu_cxx::_Atomic_add_mutex);\n \n   __result = *__mem;\n   *__mem += __val;\n \n-  __gthread_mutex_unlock (&__gnu_cxx::_Atomic_add_mutex);\n+  __gthread_mutex_unlock(&__gnu_cxx::_Atomic_add_mutex);\n   return __result;\n }\n \n \n static inline void\n __attribute__ ((__unused__))\n-__atomic_add (volatile _Atomic_word* __mem, int __val)\n+__atomic_add(volatile _Atomic_word* __mem, int __val)\n {\n-  (void) __exchange_and_add (__mem, __val);\n+  (void) __exchange_and_add(__mem, __val);\n }\n \n #endif /* atomicity.h */"}, {"sha": "b07414246af05abbd15085427a2bc47cd96bba3e", "filename": "libstdc++-v3/config/cpu/hppa/atomicity.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5ec3f5662c13c44e04e4f7e6a79ee050d0ba6884/libstdc%2B%2B-v3%2Fconfig%2Fcpu%2Fhppa%2Fatomicity.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5ec3f5662c13c44e04e4f7e6a79ee050d0ba6884/libstdc%2B%2B-v3%2Fconfig%2Fcpu%2Fhppa%2Fatomicity.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fcpu%2Fhppa%2Fatomicity.h?ref=5ec3f5662c13c44e04e4f7e6a79ee050d0ba6884", "patch": "@@ -42,7 +42,7 @@ template volatile int __Atomicity_lock<0>::_S_atomicity_lock;\n \n static inline int\n __attribute__ ((__unused__))\n-__exchange_and_add (volatile _Atomic_word* __mem, int __val)\n+__exchange_and_add(volatile _Atomic_word* __mem, int __val)\n {\n   _Atomic_word result;\n   int tmp;\n@@ -67,7 +67,7 @@ __exchange_and_add (volatile _Atomic_word* __mem, int __val)\n \n static inline void\n __attribute__ ((__unused__))\n-__atomic_add (_Atomic_word* __mem, int __val)\n+__atomic_add(_Atomic_word* __mem, int __val)\n {\n   int tmp;\n   volatile int& lock = __Atomicity_lock<0>::_S_atomicity_lock;"}, {"sha": "70d38fe326992a66cd8457204a3529096279b342", "filename": "libstdc++-v3/config/cpu/i386/atomicity.h", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5ec3f5662c13c44e04e4f7e6a79ee050d0ba6884/libstdc%2B%2B-v3%2Fconfig%2Fcpu%2Fi386%2Fatomicity.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5ec3f5662c13c44e04e4f7e6a79ee050d0ba6884/libstdc%2B%2B-v3%2Fconfig%2Fcpu%2Fi386%2Fatomicity.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fcpu%2Fi386%2Fatomicity.h?ref=5ec3f5662c13c44e04e4f7e6a79ee050d0ba6884", "patch": "@@ -32,20 +32,20 @@\n \n typedef int _Atomic_word;\n \n-template <int __inst>\n-struct __Atomicity_lock\n-{\n-  static volatile _Atomic_word _S_atomicity_lock;\n-};\n+template<int __inst>\n+  struct __Atomicity_lock\n+  {\n+    static volatile _Atomic_word _S_atomicity_lock;\n+  };\n \n-template <int __inst>\n+template<int __inst>\n volatile _Atomic_word __Atomicity_lock<__inst>::_S_atomicity_lock = 0;\n \n template volatile _Atomic_word __Atomicity_lock<0>::_S_atomicity_lock;\n \n static inline _Atomic_word \n __attribute__ ((__unused__))\n-__exchange_and_add (volatile _Atomic_word *__mem, int __val)\n+__exchange_and_add(volatile _Atomic_word* __mem, int __val)\n {\n   register _Atomic_word __result, __tmp = 1;\n \n@@ -67,9 +67,9 @@ __exchange_and_add (volatile _Atomic_word *__mem, int __val)\n \n static inline void\n __attribute__ ((__unused__))\n-__atomic_add (volatile _Atomic_word* __mem, int __val)\n+__atomic_add(volatile _Atomic_word* __mem, int __val)\n {\n-  __exchange_and_add (__mem, __val);\n+  __exchange_and_add(__mem, __val);\n }\n \n #endif /* atomicity.h */"}, {"sha": "eab0f3da26442571fc8d397caf1775afc7d30df7", "filename": "libstdc++-v3/config/cpu/i486/atomicity.h", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5ec3f5662c13c44e04e4f7e6a79ee050d0ba6884/libstdc%2B%2B-v3%2Fconfig%2Fcpu%2Fi486%2Fatomicity.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5ec3f5662c13c44e04e4f7e6a79ee050d0ba6884/libstdc%2B%2B-v3%2Fconfig%2Fcpu%2Fi486%2Fatomicity.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fcpu%2Fi486%2Fatomicity.h?ref=5ec3f5662c13c44e04e4f7e6a79ee050d0ba6884", "patch": "@@ -34,7 +34,7 @@ typedef int _Atomic_word;\n \n static inline _Atomic_word \n __attribute__ ((__unused__))\n-__exchange_and_add (volatile _Atomic_word *__mem, int __val)\n+__exchange_and_add(volatile _Atomic_word* __mem, int __val)\n {\n   register _Atomic_word __result;\n   __asm__ __volatile__ (\"lock; xadd{l} {%0,%1|%1,%0}\"\n@@ -46,12 +46,10 @@ __exchange_and_add (volatile _Atomic_word *__mem, int __val)\n \n static inline void\n __attribute__ ((__unused__))\n-__atomic_add (volatile _Atomic_word* __mem, int __val)\n+__atomic_add(volatile _Atomic_word* __mem, int __val)\n {\n   __asm__ __volatile__ (\"lock; add{l} {%1,%0|%0,%1}\"\n \t\t\t: \"+m\" (*__mem) : \"ir\" (__val) : \"memory\");\n }\n \n #endif /* atomicity.h */\n-\n-"}, {"sha": "4408d06718d9b87663a98a323968f252978533d8", "filename": "libstdc++-v3/config/cpu/ia64/atomicity.h", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5ec3f5662c13c44e04e4f7e6a79ee050d0ba6884/libstdc%2B%2B-v3%2Fconfig%2Fcpu%2Fia64%2Fatomicity.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5ec3f5662c13c44e04e4f7e6a79ee050d0ba6884/libstdc%2B%2B-v3%2Fconfig%2Fcpu%2Fia64%2Fatomicity.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fcpu%2Fia64%2Fatomicity.h?ref=5ec3f5662c13c44e04e4f7e6a79ee050d0ba6884", "patch": "@@ -1,6 +1,6 @@\n // Low-level functions for atomic operations: IA64 version  -*- C++ -*-\n \n-// Copyright (C) 2000, 2001 Free Software Foundation, Inc.\n+// Copyright (C) 2000, 2001, 2003 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -36,16 +36,16 @@ typedef int _Atomic_word;\n \n static inline _Atomic_word \n __attribute__ ((__unused__))\n-__exchange_and_add (volatile _Atomic_word *__mem, int __val)\n+__exchange_and_add(volatile _Atomic_word* __mem, int __val)\n {\n-  return __sync_fetch_and_add (__mem, __val);\n+  return __sync_fetch_and_add(__mem, __val);\n }\n \n static inline void\n __attribute__ ((__unused__))\n-__atomic_add (volatile _Atomic_word* __mem, int __val)\n+__atomic_add(volatile _Atomic_word* __mem, int __val)\n {\n-  __sync_fetch_and_add (__mem, __val);\n+  __sync_fetch_and_add(__mem, __val);\n }\n \n #endif /* atomicity.h */"}, {"sha": "0c7b189237b6dd2be3b49cb4119cdd445433067f", "filename": "libstdc++-v3/config/cpu/m68k/atomicity.h", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5ec3f5662c13c44e04e4f7e6a79ee050d0ba6884/libstdc%2B%2B-v3%2Fconfig%2Fcpu%2Fm68k%2Fatomicity.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5ec3f5662c13c44e04e4f7e6a79ee050d0ba6884/libstdc%2B%2B-v3%2Fconfig%2Fcpu%2Fm68k%2Fatomicity.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fcpu%2Fm68k%2Fatomicity.h?ref=5ec3f5662c13c44e04e4f7e6a79ee050d0ba6884", "patch": "@@ -39,7 +39,7 @@ typedef int _Atomic_word;\n \n static inline _Atomic_word \n __attribute__ ((__unused__))\n-__exchange_and_add (volatile _Atomic_word *__mem, int __val)\n+__exchange_and_add(volatile _Atomic_word* __mem, int __val)\n {\n   register _Atomic_word __result = *__mem;\n   register _Atomic_word __temp;\n@@ -60,7 +60,7 @@ __exchange_and_add (volatile _Atomic_word *__mem, int __val)\n    */\n static inline _Atomic_word\n __attribute__ ((__unused__))\n-__exchange_and_add (volatile _Atomic_word *__mem, int __val)\n+__exchange_and_add(volatile _Atomic_word* __mem, int __val)\n {\n   _Atomic_word __result;\n   short __level, __tmpsr;\n@@ -77,20 +77,20 @@ __exchange_and_add (volatile _Atomic_word *__mem, int __val)\n \n #else\n \n-template <int __inst>\n-struct __Atomicity_lock\n-{\n-  static volatile unsigned char _S_atomicity_lock;\n-};\n+template<int __inst>\n+  struct __Atomicity_lock\n+  {\n+    static volatile unsigned char _S_atomicity_lock;\n+  };\n \n-template <int __inst>\n+template<int __inst>\n volatile unsigned char __Atomicity_lock<__inst>::_S_atomicity_lock = 0;\n \n template volatile unsigned char __Atomicity_lock<0>::_S_atomicity_lock;\n \n static inline _Atomic_word \n __attribute__ ((__unused__))\n-__exchange_and_add (volatile _Atomic_word *__mem, int __val)\n+__exchange_and_add(volatile _Atomic_word* __mem, int __val)\n {\n   _Atomic_word __result;\n \n@@ -130,11 +130,11 @@ __exchange_and_add (volatile _Atomic_word *__mem, int __val)\n \n static inline void\n __attribute__ ((__unused__))\n-__atomic_add (volatile _Atomic_word* __mem, int __val)\n+__atomic_add(volatile _Atomic_word* __mem, int __val)\n {\n   // Careful: using add.l with a memory destination is not\n   // architecturally guaranteed to be atomic.\n-  (void) __exchange_and_add (__mem, __val);\n+  (void) __exchange_and_add(__mem, __val);\n }\n \n #endif /* !_GLIBCXX_ATOMICITY_H */"}, {"sha": "919bba7a3ccd10420551fafc2e6d4643d3c303ea", "filename": "libstdc++-v3/config/cpu/mips/atomicity.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5ec3f5662c13c44e04e4f7e6a79ee050d0ba6884/libstdc%2B%2B-v3%2Fconfig%2Fcpu%2Fmips%2Fatomicity.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5ec3f5662c13c44e04e4f7e6a79ee050d0ba6884/libstdc%2B%2B-v3%2Fconfig%2Fcpu%2Fmips%2Fatomicity.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fcpu%2Fmips%2Fatomicity.h?ref=5ec3f5662c13c44e04e4f7e6a79ee050d0ba6884", "patch": "@@ -34,7 +34,7 @@ typedef int _Atomic_word;\n \n static inline int\n __attribute__ ((__unused__))\n-__exchange_and_add (volatile _Atomic_word *__mem, int __val)\n+__exchange_and_add(volatile _Atomic_word* __mem, int __val)\n {\n   int __result, __tmp;\n \n@@ -60,7 +60,7 @@ __exchange_and_add (volatile _Atomic_word *__mem, int __val)\n \n static inline void\n __attribute__ ((__unused__))\n-__atomic_add (volatile _Atomic_word *__mem, int __val)\n+__atomic_add(volatile _Atomic_word* __mem, int __val)\n {\n   int __result;\n "}, {"sha": "518fd62ac9629eb61eac4212dd39810a18bcb08e", "filename": "libstdc++-v3/config/cpu/powerpc/atomicity.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5ec3f5662c13c44e04e4f7e6a79ee050d0ba6884/libstdc%2B%2B-v3%2Fconfig%2Fcpu%2Fpowerpc%2Fatomicity.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5ec3f5662c13c44e04e4f7e6a79ee050d0ba6884/libstdc%2B%2B-v3%2Fconfig%2Fcpu%2Fpowerpc%2Fatomicity.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fcpu%2Fpowerpc%2Fatomicity.h?ref=5ec3f5662c13c44e04e4f7e6a79ee050d0ba6884", "patch": "@@ -1,6 +1,6 @@\n // Low-level functions for atomic operations: PowerPC version  -*- C++ -*-\n \n-// Copyright (C) 1999, 2000, 2001 Free Software Foundation, Inc.\n+// Copyright (C) 1999, 2000, 2001, 2003 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -40,7 +40,7 @@ typedef int _Atomic_word;\n \n static inline _Atomic_word\n __attribute__ ((__unused__))\n-__exchange_and_add (volatile _Atomic_word* __mem, int __val)\n+__exchange_and_add(volatile _Atomic_word* __mem, int __val)\n {\n   _Atomic_word __tmp, __res;\n   __asm__ __volatile__ (\n@@ -59,7 +59,7 @@ __exchange_and_add (volatile _Atomic_word* __mem, int __val)\n \n static inline void\n __attribute__ ((__unused__))\n-__atomic_add (volatile _Atomic_word *__mem, int __val)\n+__atomic_add(volatile _Atomic_word* __mem, int __val)\n {\n   _Atomic_word __tmp;\n   __asm__ __volatile__ ("}, {"sha": "5c5254c5b8e5e81f4c64a2b6b3bde6bb6131848f", "filename": "libstdc++-v3/config/cpu/s390/atomicity.h", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5ec3f5662c13c44e04e4f7e6a79ee050d0ba6884/libstdc%2B%2B-v3%2Fconfig%2Fcpu%2Fs390%2Fatomicity.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5ec3f5662c13c44e04e4f7e6a79ee050d0ba6884/libstdc%2B%2B-v3%2Fconfig%2Fcpu%2Fs390%2Fatomicity.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fcpu%2Fs390%2Fatomicity.h?ref=5ec3f5662c13c44e04e4f7e6a79ee050d0ba6884", "patch": "@@ -1,6 +1,6 @@\n // Low-level functions for atomic operations: S/390 version  -*- C++ -*-\n \n-// Copyright (C) 2001 Free Software Foundation, Inc.\n+// Copyright (C) 2001, 2003 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -34,7 +34,7 @@ typedef int _Atomic_word;\n \n static inline _Atomic_word \n __attribute__ ((__unused__))\n-__exchange_and_add (volatile _Atomic_word *__mem, int __val)\n+__exchange_and_add(volatile _Atomic_word* __mem, int __val)\n {\n   register _Atomic_word __old_val, __new_val;\n \n@@ -50,9 +50,9 @@ __exchange_and_add (volatile _Atomic_word *__mem, int __val)\n \n static inline void\n __attribute__ ((__unused__))\n-__atomic_add (volatile _Atomic_word *__mem, int __val)\n+__atomic_add(volatile _Atomic_word* __mem, int __val)\n {\n-  __exchange_and_add (__mem, __val);\n+  __exchange_and_add(__mem, __val);\n }\n \n #endif /* atomicity.h */"}, {"sha": "1caf344ebac7bd9c9c680a317a6f69f2aa91b2fa", "filename": "libstdc++-v3/config/cpu/sparc/atomicity.h", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5ec3f5662c13c44e04e4f7e6a79ee050d0ba6884/libstdc%2B%2B-v3%2Fconfig%2Fcpu%2Fsparc%2Fatomicity.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5ec3f5662c13c44e04e4f7e6a79ee050d0ba6884/libstdc%2B%2B-v3%2Fconfig%2Fcpu%2Fsparc%2Fatomicity.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fcpu%2Fsparc%2Fatomicity.h?ref=5ec3f5662c13c44e04e4f7e6a79ee050d0ba6884", "patch": "@@ -36,7 +36,7 @@ typedef long _Atomic_word;\n \n static inline _Atomic_word\n __attribute__ ((__unused__))\n-__exchange_and_add (volatile _Atomic_word *__mem, int __val)\n+__exchange_and_add(volatile _Atomic_word* __mem, int __val)\n {\n   _Atomic_word __tmp1, __tmp2;\n   _Atomic_word __val_extended = __val;\n@@ -55,7 +55,7 @@ __exchange_and_add (volatile _Atomic_word *__mem, int __val)\n \n static inline void\n __attribute__ ((__unused__))\n-__atomic_add (volatile _Atomic_word* __mem, int __val)\n+__atomic_add(volatile _Atomic_word* __mem, int __val)\n {\n   _Atomic_word __tmp1, __tmp2;\n   _Atomic_word __val_extended = __val;\n@@ -75,20 +75,20 @@ __atomic_add (volatile _Atomic_word* __mem, int __val)\n \n typedef int _Atomic_word;\n \n-template <int __inst>\n-struct __Atomicity_lock\n-{\n-  static unsigned char _S_atomicity_lock;\n-};\n+template<int __inst>\n+  struct __Atomicity_lock\n+  {\n+    static unsigned char _S_atomicity_lock;\n+  };\n \n-template <int __inst>\n+template<int __inst>\n unsigned char __Atomicity_lock<__inst>::_S_atomicity_lock = 0;\n \n template unsigned char __Atomicity_lock<0>::_S_atomicity_lock;\n \n static int\n __attribute__ ((__unused__))\n-__exchange_and_add (volatile _Atomic_word* __mem, int __val)\n+__exchange_and_add(volatile _Atomic_word* __mem, int __val)\n {\n   _Atomic_word __result, __tmp;\n \n@@ -110,7 +110,7 @@ __exchange_and_add (volatile _Atomic_word* __mem, int __val)\n \n static void\n __attribute__ ((__unused__))\n-__atomic_add (volatile _Atomic_word* __mem, int __val)\n+__atomic_add(volatile _Atomic_word* __mem, int __val)\n {\n   _Atomic_word __tmp;\n "}, {"sha": "2ae6742227f658bdb67e034050bd14db0830de1a", "filename": "libstdc++-v3/config/linker-map.gnu", "status": "modified", "additions": 14, "deletions": 1, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5ec3f5662c13c44e04e4f7e6a79ee050d0ba6884/libstdc%2B%2B-v3%2Fconfig%2Flinker-map.gnu", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5ec3f5662c13c44e04e4f7e6a79ee050d0ba6884/libstdc%2B%2B-v3%2Fconfig%2Flinker-map.gnu", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Flinker-map.gnu?ref=5ec3f5662c13c44e04e4f7e6a79ee050d0ba6884", "patch": "@@ -27,7 +27,16 @@ GLIBCXX_3.4 {\n     # Names inside the 'extern' block are demangled names.\n     extern \"C++\"\n     {\n-      std::[A-Za-k]*;\n+      std::[A-Za-h]*;\n+      std::i[a-n]*;\n+      std::ios_base::[A-Ha-z]*;\n+      std::ios_base::_M_grow_words*;\n+      std::ios_base::_M_init*;\n+      std::ios_base::Init::[A-Za-z]*;\n+      std::ios_base::Init::_S_initialized*;\n+      std::ios_base::[J-Za-z]*;\n+      std::i[p-z]*;\n+      std::[A-Zj-k]*;\n       std::length_error*;\n       std::logic_error*;\n       std::locale::[A-Za-e]*;\n@@ -96,6 +105,10 @@ GLIBCXX_3.4 {\n     _ZNSt6locale5_ImplC*;\n     _ZNSt6locale5_ImplD*;\n \n+    # std::ios_base, std::ios_base::Init destructors\n+    _ZNSt8ios_baseD*;\n+    _ZNSt8ios_base4InitD*;\n+\n     # bool has_facet \n     _ZSt9has_facet*;\n "}]}