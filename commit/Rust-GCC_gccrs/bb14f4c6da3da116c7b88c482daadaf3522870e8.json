{"sha": "bb14f4c6da3da116c7b88c482daadaf3522870e8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmIxNGY0YzZkYTNkYTExNmM3Yjg4YzQ4MmRhYWRhZjM1MjI4NzBlOA==", "commit": {"author": {"name": "Mark Wielaard", "email": "mark@klomp.org", "date": "2018-05-16T18:20:08Z"}, "committer": {"name": "Mark Wielaard", "email": "mark@gcc.gnu.org", "date": "2018-05-16T18:20:08Z"}, "message": "DWARF: Add header for .debug_str_offsets table for dwarf_version 5.\n\nDWARF5 defines a small header for .debug_str_offsets.  Since we only use\nit for split dwarf .dwo files we don't need to keep track of the actual\nindex offset in an attribute.\n\ngcc/ChangeLog\n\n\t* dwarf2out.c (count_index_strings): New function.\n\t(output_indirect_strings): Call count_index_strings and generate\n\theader for dwarf_version >= 5.\n\nFrom-SVN: r260298", "tree": {"sha": "3bb789d93570fae93640b2818905fbb60acf8e72", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3bb789d93570fae93640b2818905fbb60acf8e72"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bb14f4c6da3da116c7b88c482daadaf3522870e8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bb14f4c6da3da116c7b88c482daadaf3522870e8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bb14f4c6da3da116c7b88c482daadaf3522870e8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bb14f4c6da3da116c7b88c482daadaf3522870e8/comments", "author": null, "committer": null, "parents": [{"sha": "c0134358c5a8a9a92b10d08f2c43f5876d9a0d07", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c0134358c5a8a9a92b10d08f2c43f5876d9a0d07", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c0134358c5a8a9a92b10d08f2c43f5876d9a0d07"}], "stats": {"total": 46, "additions": 46, "deletions": 0}, "files": [{"sha": "cf9cbcc06f107fe816cb00770456b7d50aba2b92", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb14f4c6da3da116c7b88c482daadaf3522870e8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb14f4c6da3da116c7b88c482daadaf3522870e8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=bb14f4c6da3da116c7b88c482daadaf3522870e8", "patch": "@@ -1,3 +1,9 @@\n+2018-05-16  Mark Wielaard  <mark@klomp.org>\n+\n+\t* dwarf2out.c (count_index_strings): New function.\n+\t(output_indirect_strings): Call count_index_strings and generate\n+\theader for dwarf_version >= 5.\n+\n 2018-05-16  Mark Wielaard  <mark@klomp.org>\n \n \t* dwarf2out.c (dwarf_FORM): New function."}, {"sha": "c05bfe43c443f4a6caf77299342378313f21ad5f", "filename": "gcc/dwarf2out.c", "status": "modified", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb14f4c6da3da116c7b88c482daadaf3522870e8/gcc%2Fdwarf2out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb14f4c6da3da116c7b88c482daadaf3522870e8/gcc%2Fdwarf2out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2out.c?ref=bb14f4c6da3da116c7b88c482daadaf3522870e8", "patch": "@@ -28772,6 +28772,19 @@ output_index_string (indirect_string_node **h, unsigned int *cur_idx)\n   return 1;\n }\n \n+/* A helper function for output_indirect_strings.  Counts the number\n+   of index strings offsets.  Must match the logic of the functions\n+   output_index_string[_offsets] above.  */\n+int\n+count_index_strings (indirect_string_node **h, unsigned int *last_idx)\n+{\n+  struct indirect_string_node *node = *h;\n+\n+  if (node->form == dwarf_FORM (DW_FORM_strx) && node->refcount > 0)\n+    *last_idx += 1;\n+  return 1;\n+}\n+\n /* A helper function for dwarf2out_finish called through\n    htab_traverse.  Emit one queued .debug_str string.  */\n \n@@ -28809,6 +28822,33 @@ output_indirect_strings (void)\n \t\t\t\t\t  output_indirect_string> (DW_FORM_strp);\n \n       switch_to_section (debug_str_offsets_section);\n+      /* For DWARF5 the .debug_str_offsets[.dwo] section needs a unit\n+\t header.  Note that we don't need to generate a label to the\n+\t actual index table following the header here, because this is\n+\t for the split dwarf case only.  In an .dwo file there is only\n+\t one string offsets table (and one debug info section).  But\n+\t if we would start using string offset tables for the main (or\n+\t skeleton) unit, then we have to add a DW_AT_str_offsets_base\n+\t pointing to the actual index after the header.  Split dwarf\n+\t units will never have a string offsets base attribute.  When\n+\t a split unit is moved into a .dwp file the string offsets can\n+\t be found through the .debug_cu_index section table.  */\n+      if (dwarf_version >= 5)\n+\t{\n+\t  unsigned int last_idx = 0;\n+\t  unsigned long str_offsets_length;\n+\n+\t  debug_str_hash->traverse_noresize\n+\t    <unsigned int *, count_index_strings> (&last_idx);\n+\t  str_offsets_length = last_idx * DWARF_OFFSET_SIZE + 4;\n+\t  if (DWARF_INITIAL_LENGTH_SIZE - DWARF_OFFSET_SIZE == 4)\n+\t    dw2_asm_output_data (4, 0xffffffff,\n+\t\t\t\t \"Escape value for 64-bit DWARF extension\");\n+\t  dw2_asm_output_data (DWARF_OFFSET_SIZE, str_offsets_length,\n+\t\t\t       \"Length of string offsets unit\");\n+\t  dw2_asm_output_data (2, 5, \"DWARF string offsets version\");\n+\t  dw2_asm_output_data (2, 0, \"Header zero padding\");\n+\t}\n       debug_str_hash->traverse_noresize\n \t<unsigned int *, output_index_string_offset> (&offset);\n       switch_to_section (debug_str_dwo_section);"}]}