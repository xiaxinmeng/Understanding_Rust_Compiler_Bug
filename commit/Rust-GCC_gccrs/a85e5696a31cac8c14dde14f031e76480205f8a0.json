{"sha": "a85e5696a31cac8c14dde14f031e76480205f8a0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTg1ZTU2OTZhMzFjYWM4YzE0ZGRlMTRmMDMxZTc2NDgwMjA1ZjhhMA==", "commit": {"author": {"name": "Sandra Loosemore", "email": "sandra@codesourcery.com", "date": "2020-09-19T14:32:35Z"}, "committer": {"name": "Sandra Loosemore", "email": "sandra@codesourcery.com", "date": "2020-09-19T20:54:16Z"}, "message": "Work around bootstrap failure in Fortran front end.\n\nSwitching the C++ front end to lower loops the same was as the C front\nend triggered this error when bootstrapping the Fortran front end:\n\n/path/to/gcc/fortran/interface.c:3546:12: error: '*new_arg' may be used uninitialized [-Werror=maybe-uninitialized]\n 3546 |   new_arg[i]->next = NULL;\n      |   ~~~~~~~~~^\n\nWork around this by adding an assertion, which seems appropriate for\ndocumentation and good coding practices anyway.\n\n2020-08-12  Sandra Loosemore  <sandra@codesourcery.com>\n\n\tgcc/fortran/\n\t* interface.c (gfc_compare_actual_formal): Add assertion after\n\tmain processing loop to silence maybe-uninitialized error.", "tree": {"sha": "641ac163c58884fdc6ac9520a06a505a5a03930b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/641ac163c58884fdc6ac9520a06a505a5a03930b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a85e5696a31cac8c14dde14f031e76480205f8a0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a85e5696a31cac8c14dde14f031e76480205f8a0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a85e5696a31cac8c14dde14f031e76480205f8a0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a85e5696a31cac8c14dde14f031e76480205f8a0/comments", "author": {"login": "SandraLoosemore", "id": 104087111, "node_id": "U_kgDOBjQ-Rw", "avatar_url": "https://avatars.githubusercontent.com/u/104087111?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SandraLoosemore", "html_url": "https://github.com/SandraLoosemore", "followers_url": "https://api.github.com/users/SandraLoosemore/followers", "following_url": "https://api.github.com/users/SandraLoosemore/following{/other_user}", "gists_url": "https://api.github.com/users/SandraLoosemore/gists{/gist_id}", "starred_url": "https://api.github.com/users/SandraLoosemore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SandraLoosemore/subscriptions", "organizations_url": "https://api.github.com/users/SandraLoosemore/orgs", "repos_url": "https://api.github.com/users/SandraLoosemore/repos", "events_url": "https://api.github.com/users/SandraLoosemore/events{/privacy}", "received_events_url": "https://api.github.com/users/SandraLoosemore/received_events", "type": "User", "site_admin": false}, "committer": {"login": "SandraLoosemore", "id": 104087111, "node_id": "U_kgDOBjQ-Rw", "avatar_url": "https://avatars.githubusercontent.com/u/104087111?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SandraLoosemore", "html_url": "https://github.com/SandraLoosemore", "followers_url": "https://api.github.com/users/SandraLoosemore/followers", "following_url": "https://api.github.com/users/SandraLoosemore/following{/other_user}", "gists_url": "https://api.github.com/users/SandraLoosemore/gists{/gist_id}", "starred_url": "https://api.github.com/users/SandraLoosemore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SandraLoosemore/subscriptions", "organizations_url": "https://api.github.com/users/SandraLoosemore/orgs", "repos_url": "https://api.github.com/users/SandraLoosemore/repos", "events_url": "https://api.github.com/users/SandraLoosemore/events{/privacy}", "received_events_url": "https://api.github.com/users/SandraLoosemore/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "83e037364e0d6dd74d595751e8bc8c461b4cb8fa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/83e037364e0d6dd74d595751e8bc8c461b4cb8fa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/83e037364e0d6dd74d595751e8bc8c461b4cb8fa"}], "stats": {"total": 4, "additions": 4, "deletions": 0}, "files": [{"sha": "e2cc76f0024f18c4211071b0d33fdd1ad3787cf7", "filename": "gcc/fortran/interface.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a85e5696a31cac8c14dde14f031e76480205f8a0/gcc%2Ffortran%2Finterface.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a85e5696a31cac8c14dde14f031e76480205f8a0/gcc%2Ffortran%2Finterface.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Finterface.c?ref=a85e5696a31cac8c14dde14f031e76480205f8a0", "patch": "@@ -3530,6 +3530,10 @@ gfc_compare_actual_formal (gfc_actual_arglist **ap, gfc_formal_arglist *formal,\n \t}\n     }\n \n+  /* We should have handled the cases where the formal arglist is null\n+     already.  */\n+  gcc_assert (n > 0);\n+\n   /* The argument lists are compatible.  We now relink a new actual\n      argument list with null arguments in the right places.  The head\n      of the list remains the head.  */"}]}