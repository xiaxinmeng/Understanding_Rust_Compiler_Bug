{"sha": "901ebcdf97fefd24e464f98593bfa6dc741d4525", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTAxZWJjZGY5N2ZlZmQyNGU0NjRmOTg1OTNiZmE2ZGM3NDFkNDUyNQ==", "commit": {"author": {"name": "Peter Collingbourne", "email": "peter@pcc.me.uk", "date": "2011-08-18T14:47:32Z"}, "committer": {"name": "Tom Tromey", "email": "tromey@gcc.gnu.org", "date": "2011-08-18T14:47:32Z"}, "message": "2011-08-18  Peter Collingbourne  <peter@pcc.me.uk>\n\n\t* expr.c (expand_invoke) Use the type of the method rewrite\n\ttarget.\n\nFrom-SVN: r177862", "tree": {"sha": "74db74b8da18fcf4eb30ccddeb91e657e10dfb54", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/74db74b8da18fcf4eb30ccddeb91e657e10dfb54"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/901ebcdf97fefd24e464f98593bfa6dc741d4525", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/901ebcdf97fefd24e464f98593bfa6dc741d4525", "html_url": "https://github.com/Rust-GCC/gccrs/commit/901ebcdf97fefd24e464f98593bfa6dc741d4525", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/901ebcdf97fefd24e464f98593bfa6dc741d4525/comments", "author": {"login": "pcc", "id": 425024, "node_id": "MDQ6VXNlcjQyNTAyNA==", "avatar_url": "https://avatars.githubusercontent.com/u/425024?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcc", "html_url": "https://github.com/pcc", "followers_url": "https://api.github.com/users/pcc/followers", "following_url": "https://api.github.com/users/pcc/following{/other_user}", "gists_url": "https://api.github.com/users/pcc/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcc/subscriptions", "organizations_url": "https://api.github.com/users/pcc/orgs", "repos_url": "https://api.github.com/users/pcc/repos", "events_url": "https://api.github.com/users/pcc/events{/privacy}", "received_events_url": "https://api.github.com/users/pcc/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f44157f84be4cc82697697136464ed7711595aa5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f44157f84be4cc82697697136464ed7711595aa5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f44157f84be4cc82697697136464ed7711595aa5"}], "stats": {"total": 9, "additions": 7, "deletions": 2}, "files": [{"sha": "8e390110a9c609ff2044a021942a857f0561165a", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/901ebcdf97fefd24e464f98593bfa6dc741d4525/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/901ebcdf97fefd24e464f98593bfa6dc741d4525/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=901ebcdf97fefd24e464f98593bfa6dc741d4525", "patch": "@@ -1,3 +1,8 @@\n+2011-08-18  Peter Collingbourne  <peter@pcc.me.uk>\n+\n+\t* expr.c (expand_invoke) Use the type of the method rewrite\n+\ttarget.\n+\n 2011-08-10  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n \n \t* jcf-dump.c (print_constant): Cast first frexp arg."}, {"sha": "ec2d9b65d0a78af9e008b8979af942e99d74391b", "filename": "gcc/java/expr.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/901ebcdf97fefd24e464f98593bfa6dc741d4525/gcc%2Fjava%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/901ebcdf97fefd24e464f98593bfa6dc741d4525/gcc%2Fjava%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fexpr.c?ref=901ebcdf97fefd24e464f98593bfa6dc741d4525", "patch": "@@ -2544,12 +2544,12 @@ expand_invoke (int opcode, int method_ref_index, int nargs ATTRIBUTE_UNUSED)\n       return;\n     }\n \n-  method_type = TREE_TYPE (method);\n-  arg_list = pop_arguments (method_type);\n+  arg_list = pop_arguments (TREE_TYPE (method));\n   flush_quick_stack ();\n \n   maybe_rewrite_invocation (&method, &arg_list, &method_signature,\n \t\t\t    &special);\n+  method_type = TREE_TYPE (method);\n \n   func = NULL_TREE;\n   if (opcode == OPCODE_invokestatic)"}]}