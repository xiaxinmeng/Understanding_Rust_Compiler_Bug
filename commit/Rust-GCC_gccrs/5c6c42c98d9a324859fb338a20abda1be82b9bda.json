{"sha": "5c6c42c98d9a324859fb338a20abda1be82b9bda", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWM2YzQyYzk4ZDlhMzI0ODU5ZmIzMzhhMjBhYmRhMWJlODJiOWJkYQ==", "commit": {"author": {"name": "Sebastian Pop", "email": "sebastian.pop@amd.com", "date": "2009-11-25T05:09:36Z"}, "committer": {"name": "Sebastian Pop", "email": "spop@gcc.gnu.org", "date": "2009-11-25T05:09:36Z"}, "message": "graphite-blocking.c (lst_do_strip_mine): Avoid strip mining the root of the LST.\n\n2009-10-15  Sebastian Pop  <sebastian.pop@amd.com>\n\n\t* graphite-blocking.c (lst_do_strip_mine): Avoid strip mining the\n\troot of the LST.\n\t* graphite-interchange.c (lst_do_interchange): Avoid interchanging\n\tthe root of the LST.\n\t* graphite-poly.c (scop_to_lst): Fix LST sequence in an outermost\n\tfake loop.\n\t(print_lst): Print the root of LST in a different format.\n\t* graphite-poly.h (lst_depth): Adjust to include the root of the LST.\n\nFrom-SVN: r154593", "tree": {"sha": "3eeff7406c772b94df31eb9b98f5ad05912452c3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3eeff7406c772b94df31eb9b98f5ad05912452c3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5c6c42c98d9a324859fb338a20abda1be82b9bda", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5c6c42c98d9a324859fb338a20abda1be82b9bda", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5c6c42c98d9a324859fb338a20abda1be82b9bda", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5c6c42c98d9a324859fb338a20abda1be82b9bda/comments", "author": null, "committer": {"login": "sebpop", "id": 568397, "node_id": "MDQ6VXNlcjU2ODM5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/568397?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sebpop", "html_url": "https://github.com/sebpop", "followers_url": "https://api.github.com/users/sebpop/followers", "following_url": "https://api.github.com/users/sebpop/following{/other_user}", "gists_url": "https://api.github.com/users/sebpop/gists{/gist_id}", "starred_url": "https://api.github.com/users/sebpop/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sebpop/subscriptions", "organizations_url": "https://api.github.com/users/sebpop/orgs", "repos_url": "https://api.github.com/users/sebpop/repos", "events_url": "https://api.github.com/users/sebpop/events{/privacy}", "received_events_url": "https://api.github.com/users/sebpop/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f58be90efba79bec87e9bc526fa57106c532d9e0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f58be90efba79bec87e9bc526fa57106c532d9e0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f58be90efba79bec87e9bc526fa57106c532d9e0"}], "stats": {"total": 57, "additions": 47, "deletions": 10}, "files": [{"sha": "535cd0cc2501a4b8fd04bf865f1ddc6223cce53d", "filename": "gcc/ChangeLog.graphite", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c6c42c98d9a324859fb338a20abda1be82b9bda/gcc%2FChangeLog.graphite", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c6c42c98d9a324859fb338a20abda1be82b9bda/gcc%2FChangeLog.graphite", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog.graphite?ref=5c6c42c98d9a324859fb338a20abda1be82b9bda", "patch": "@@ -1,3 +1,14 @@\n+2009-10-15  Sebastian Pop  <sebastian.pop@amd.com>\n+\n+\t* graphite-blocking.c (lst_do_strip_mine): Avoid strip mining the\n+\troot of the LST.\n+\t* graphite-interchange.c (lst_do_interchange): Avoid interchanging\n+\tthe root of the LST.\n+\t* graphite-poly.c (scop_to_lst): Fix LST sequence in an outermost\n+\tfake loop.\n+\t(print_lst): Print the root of LST in a different format.\n+\t* graphite-poly.h (lst_depth): Adjust to include the root of the LST.\n+\n 2009-10-15  Sebastian Pop  <sebastian.pop@amd.com>\n \n \t* graphite-poly.c (print_scop): Fix pretty printing of a SCoP."}, {"sha": "e44ad8a921cceee6919186cd41ea0474ae51752a", "filename": "gcc/graphite-blocking.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c6c42c98d9a324859fb338a20abda1be82b9bda/gcc%2Fgraphite-blocking.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c6c42c98d9a324859fb338a20abda1be82b9bda/gcc%2Fgraphite-blocking.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite-blocking.c?ref=5c6c42c98d9a324859fb338a20abda1be82b9bda", "patch": "@@ -242,8 +242,9 @@ lst_do_strip_mine (lst_p lst)\n   for (i = 0; VEC_iterate (lst_p, LST_SEQ (lst), i, l); i++)\n     res |= lst_do_strip_mine (l);\n \n-  if (pbb_strip_mine_profitable_p (LST_PBB (lst_find_first_pbb (lst)),\n-\t\t\t\t   lst_depth (lst), stride))\n+  if (lst_depth (lst) >= 0\n+      && pbb_strip_mine_profitable_p (LST_PBB (lst_find_first_pbb (lst)),\n+\t\t\t\t      lst_depth (lst), stride))\n     {\n       res |= lst_do_strip_mine_loop (lst, lst_depth (lst));\n       lst_add_loop_under_loop (lst);"}, {"sha": "b42a13394262980edbdf72e5c17fd675d2176939", "filename": "gcc/graphite-interchange.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c6c42c98d9a324859fb338a20abda1be82b9bda/gcc%2Fgraphite-interchange.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c6c42c98d9a324859fb338a20abda1be82b9bda/gcc%2Fgraphite-interchange.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite-interchange.c?ref=5c6c42c98d9a324859fb338a20abda1be82b9bda", "patch": "@@ -539,8 +539,9 @@ lst_do_interchange (scop_p scop, lst_p lst)\n       lst_p l;\n       bool res = false;\n \n-      for (i = 0; VEC_iterate (lst_p, LST_SEQ (lst), i, l); i++)\n-\tres |= lst_try_interchange (scop, lst, l);\n+      if (lst_depth (lst) >= 0)\n+\tfor (i = 0; VEC_iterate (lst_p, LST_SEQ (lst), i, l); i++)\n+\t  res |= lst_try_interchange (scop, lst, l);\n \n       for (i = 0; VEC_iterate (lst_p, LST_SEQ (lst), i, l); i++)\n \tres |= lst_do_interchange (scop, l);"}, {"sha": "17d88815b4dcc357a233432759be035756234614", "filename": "gcc/graphite-poly.c", "status": "modified", "additions": 24, "deletions": 6, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c6c42c98d9a324859fb338a20abda1be82b9bda/gcc%2Fgraphite-poly.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c6c42c98d9a324859fb338a20abda1be82b9bda/gcc%2Fgraphite-poly.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite-poly.c?ref=5c6c42c98d9a324859fb338a20abda1be82b9bda", "patch": "@@ -869,12 +869,27 @@ loop_to_lst (loop_p loop, VEC (poly_bb_p, heap) *bbs, int *i)\n void\n scop_to_lst (scop_p scop)\n {\n-  poly_bb_p pbb = VEC_index (poly_bb_p, SCOP_BBS (scop), 0);\n-  loop_p loop = outermost_loop_in_sese (SCOP_REGION (scop), GBB_BB (PBB_BLACK_BOX (pbb)));\n-  int i = 0;\n+  lst_p res;\n+  int i, n = VEC_length (poly_bb_p, SCOP_BBS (scop));\n+  VEC (lst_p, heap) *seq = VEC_alloc (lst_p, heap, 5);\n+  sese region = SCOP_REGION (scop);\n+\n+  for (i = 0; i < n; i++)\n+    {\n+      poly_bb_p pbb = VEC_index (poly_bb_p, SCOP_BBS (scop), i);\n+      loop_p loop = outermost_loop_in_sese (region, GBB_BB (PBB_BLACK_BOX (pbb)));\n+\n+      if (loop_in_sese_p (loop, region))\n+\tres = loop_to_lst (loop, SCOP_BBS (scop), &i);\n+      else\n+\tres = new_lst_stmt (pbb);\n+\n+      VEC_safe_push (lst_p, heap, seq, res);\n+    }\n \n-  SCOP_ORIGINAL_SCHEDULE (scop) = loop_to_lst (loop, SCOP_BBS (scop), &i);\n-  SCOP_TRANSFORMED_SCHEDULE (scop) = copy_lst (SCOP_ORIGINAL_SCHEDULE (scop));\n+  res = new_lst_loop (seq);\n+  SCOP_ORIGINAL_SCHEDULE (scop) = res;\n+  SCOP_TRANSFORMED_SCHEDULE (scop) = copy_lst (res);\n }\n \n /* Print LST to FILE with INDENT spaces of indentation.  */\n@@ -892,7 +907,10 @@ print_lst (FILE *file, lst_p lst, int indent)\n       int i;\n       lst_p l;\n \n-      fprintf (file, \"%d (loop\", lst_dewey_number (lst));\n+      if (LST_LOOP_FATHER (lst))\n+\tfprintf (file, \"%d (loop\", lst_dewey_number (lst));\n+      else\n+\tfprintf (file, \"(root\");\n \n       for (i = 0; VEC_iterate (lst_p, LST_SEQ (lst), i, l); i++)\n \tprint_lst (file, l, indent + 2);"}, {"sha": "8165d35fb49c5a106c58101c6255904c9c5aedcd", "filename": "gcc/graphite-poly.h", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c6c42c98d9a324859fb338a20abda1be82b9bda/gcc%2Fgraphite-poly.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c6c42c98d9a324859fb338a20abda1be82b9bda/gcc%2Fgraphite-poly.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite-poly.h?ref=5c6c42c98d9a324859fb338a20abda1be82b9bda", "patch": "@@ -714,6 +714,12 @@ static inline int\n lst_depth (lst_p lst)\n {\n   if (!lst)\n+    return -2;\n+\n+  /* The depth of the outermost \"fake\" loop is -1.  This outermost\n+     loop does not have a loop father and it is just a container, as\n+     in the loop representation of GCC.  */\n+  if (!LST_LOOP_FATHER (lst))\n     return -1;\n \n   return lst_depth (LST_LOOP_FATHER (lst)) + 1;"}]}