{"sha": "a624d5fe08ca0e8bf755a33b4849ff03d511958e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTYyNGQ1ZmUwOGNhMGU4YmY3NTVhMzNiNDg0OWZmMDNkNTExOTU4ZQ==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo.carlini@oracle.com", "date": "2013-08-30T15:39:01Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2013-08-30T15:39:01Z"}, "message": "re PR c++/51424 ([C++11] G++ should diagnose self-delegating constructors)\n\n/cp\n2013-08-30  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR c++/51424\n\t* cp-tree.h (LOOKUP_DELEGATING_CONS): Add.\n\t* init.c (perform_target_ctor): Use it.\n\t* call.c (build_special_member_call): Diagnose self-delegating\n\tconstructors.\n\n/testsuite\n2013-08-30  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR c++/51424\n\t* g++.dg/cpp0x/dc8.C: New.\n\t* g++.dg/template/meminit1.C: Adjust.\n\nFrom-SVN: r202110", "tree": {"sha": "5fc09f4993648c27925c4b8d44f6a5721dd0baec", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5fc09f4993648c27925c4b8d44f6a5721dd0baec"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a624d5fe08ca0e8bf755a33b4849ff03d511958e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a624d5fe08ca0e8bf755a33b4849ff03d511958e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a624d5fe08ca0e8bf755a33b4849ff03d511958e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a624d5fe08ca0e8bf755a33b4849ff03d511958e/comments", "author": null, "committer": null, "parents": [{"sha": "8f0e4d72f2905596ecb212e8824a0a0e1489bab8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8f0e4d72f2905596ecb212e8824a0a0e1489bab8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8f0e4d72f2905596ecb212e8824a0a0e1489bab8"}], "stats": {"total": 97, "additions": 94, "deletions": 3}, "files": [{"sha": "e52dfa7c2c4ee4683e3d20aa346bced513148b87", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a624d5fe08ca0e8bf755a33b4849ff03d511958e/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a624d5fe08ca0e8bf755a33b4849ff03d511958e/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=a624d5fe08ca0e8bf755a33b4849ff03d511958e", "patch": "@@ -1,3 +1,11 @@\n+2013-08-30  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR c++/51424\n+\t* cp-tree.h (LOOKUP_DELEGATING_CONS): Add.\n+\t* init.c (perform_target_ctor): Use it.\n+\t* call.c (build_special_member_call): Diagnose self-delegating\n+\tconstructors.\n+\n 2013-08-30  Gabriel Dos Reis  <gdr@integrable-solutions.net>\n \n \t* cxx-pretty-print.h (cxx_pretty_printer::declaration): Declare as"}, {"sha": "3ed73b803740ce16990eb3b62a0baaff68cd5709", "filename": "gcc/cp/call.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a624d5fe08ca0e8bf755a33b4849ff03d511958e/gcc%2Fcp%2Fcall.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a624d5fe08ca0e8bf755a33b4849ff03d511958e/gcc%2Fcp%2Fcall.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcall.c?ref=a624d5fe08ca0e8bf755a33b4849ff03d511958e", "patch": "@@ -7442,6 +7442,14 @@ build_special_member_call (tree instance, tree name, vec<tree, va_gc> **args,\n   if (allocated != NULL)\n     release_tree_vector (allocated);\n \n+  if ((complain & tf_error)\n+      && (flags & LOOKUP_DELEGATING_CONS)\n+      && name == complete_ctor_identifier \n+      && TREE_CODE (ret) == CALL_EXPR\n+      && (DECL_ABSTRACT_ORIGIN (TREE_OPERAND (CALL_EXPR_FN (ret), 0))\n+\t  == current_function_decl))\n+    error (\"constructor delegates to itself\");\n+\n   return ret;\n }\n "}, {"sha": "3e4f188b93fb3a9d6ea7858cdc1f134936ad6da4", "filename": "gcc/cp/cp-tree.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a624d5fe08ca0e8bf755a33b4849ff03d511958e/gcc%2Fcp%2Fcp-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a624d5fe08ca0e8bf755a33b4849ff03d511958e/gcc%2Fcp%2Fcp-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.h?ref=a624d5fe08ca0e8bf755a33b4849ff03d511958e", "patch": "@@ -4509,6 +4509,8 @@ enum overload_flags { NO_SPECIAL = 0, DTOR_FLAG, TYPENAME_FLAG };\n #define LOOKUP_NO_RVAL_BIND (LOOKUP_EXPLICIT_TMPL_ARGS << 1)\n /* Used by case_conversion to disregard non-integral conversions.  */\n #define LOOKUP_NO_NON_INTEGRAL (LOOKUP_NO_RVAL_BIND << 1)\n+/* Used for delegating constructors in order to diagnose self-delegation.  */\n+#define LOOKUP_DELEGATING_CONS (LOOKUP_NO_NON_INTEGRAL << 1)\n \n #define LOOKUP_NAMESPACES_ONLY(F)  \\\n   (((F) & LOOKUP_PREFER_NAMESPACES) && !((F) & LOOKUP_PREFER_TYPES))"}, {"sha": "f261f99b82b5d3a7edaa9b7429f27263d7aaa7ca", "filename": "gcc/cp/init.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a624d5fe08ca0e8bf755a33b4849ff03d511958e/gcc%2Fcp%2Finit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a624d5fe08ca0e8bf755a33b4849ff03d511958e/gcc%2Fcp%2Finit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Finit.c?ref=a624d5fe08ca0e8bf755a33b4849ff03d511958e", "patch": "@@ -500,8 +500,9 @@ perform_target_ctor (tree init)\n   tree decl = current_class_ref;\n   tree type = current_class_type;\n \n-  finish_expr_stmt (build_aggr_init (decl, init, LOOKUP_NORMAL,\n-                                     tf_warning_or_error));\n+  finish_expr_stmt (build_aggr_init (decl, init,\n+\t\t\t\t     LOOKUP_NORMAL|LOOKUP_DELEGATING_CONS,\n+\t\t\t\t     tf_warning_or_error));\n   if (TYPE_HAS_NONTRIVIAL_DESTRUCTOR (type))\n     {\n       tree expr = build_delete (type, decl, sfk_complete_destructor,"}, {"sha": "f8a1f4964d24dacb6ab40f26f3122bc94ee340f6", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a624d5fe08ca0e8bf755a33b4849ff03d511958e/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a624d5fe08ca0e8bf755a33b4849ff03d511958e/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=a624d5fe08ca0e8bf755a33b4849ff03d511958e", "patch": "@@ -1,3 +1,9 @@\n+2013-08-30  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR c++/51424\n+\t* g++.dg/cpp0x/dc8.C: New.\n+\t* g++.dg/template/meminit1.C: Adjust.\n+\n 2013-08-30  Teresa Johnson  <tejohnson@google.com>\n \n \t* gcc.dg/inline-dump.c: Delete inadvertant commit."}, {"sha": "e483f3e4eeb124b3c5fedffab193e7611b9aef0d", "filename": "gcc/testsuite/g++.dg/cpp0x/dc8.C", "status": "added", "additions": 66, "deletions": 0, "changes": 66, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a624d5fe08ca0e8bf755a33b4849ff03d511958e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fdc8.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a624d5fe08ca0e8bf755a33b4849ff03d511958e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fdc8.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fdc8.C?ref=a624d5fe08ca0e8bf755a33b4849ff03d511958e", "patch": "@@ -0,0 +1,66 @@\n+// PR c++/51424\n+// { dg-do compile { target c++11 } }\n+\n+template <class T >\n+struct S\n+{\n+  S() : S() {}          // { dg-error \"delegates to itself\" }\n+  S(int x) : S(x) {}    // { dg-error \"delegates to itself\" }\n+};\n+\n+struct B1\n+{\n+  B1() : B1() {}        // { dg-error \"delegates to itself\" }\n+  B1(int y) : B1(y) {}  // { dg-error \"delegates to itself\" }\n+};\n+\n+struct V1 : virtual B1\n+{\n+  V1() : B1() {}\n+  V1(int x) : B1(x) {}\n+};\n+\n+struct B2\n+{\n+  B2() : B2() {}        // { dg-error \"delegates to itself\" }\n+  B2(int y) : B2(y) {}  // { dg-error \"delegates to itself\" }\n+};\n+\n+struct V2 : virtual B2\n+{\n+  V2() : V2() {}        // { dg-error \"delegates to itself\" }\n+  V2(int x) : V2(x) {}  // { dg-error \"delegates to itself\" }\n+};\n+\n+struct B3\n+{\n+  B3() {}\n+  B3(int y) {}\n+};\n+\n+struct V3 : virtual B3\n+{\n+  V3() : V3() {}        // { dg-error \"delegates to itself\" }\n+  V3(int x) : V3(x) {}  // { dg-error \"delegates to itself\" }\n+};\n+\n+struct CE1\n+{\n+  constexpr CE1() : CE1() {}        // { dg-error \"delegates to itself\" }\n+  constexpr CE1(int x) : CE1(x) {}  // { dg-error \"delegates to itself\" }\n+};\n+\n+struct CEB2\n+{\n+  constexpr CEB2() : CEB2() {}        // { dg-error \"delegates to itself\" }\n+  constexpr CEB2(int x) : CEB2(x) {}  // { dg-error \"delegates to itself\" }\n+};\n+\n+struct CE2 : CEB2\n+{\n+  constexpr CE2() : CEB2() {}\n+  constexpr CE2(int x) : CEB2(x) {}\n+};\n+\n+S<int> s1;\n+S<int> s2(1);"}, {"sha": "1dc96c472ad5810f7ded9816a0542f647f7e9cd1", "filename": "gcc/testsuite/g++.dg/template/meminit1.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a624d5fe08ca0e8bf755a33b4849ff03d511958e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fmeminit1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a624d5fe08ca0e8bf755a33b4849ff03d511958e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fmeminit1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fmeminit1.C?ref=a624d5fe08ca0e8bf755a33b4849ff03d511958e", "patch": "@@ -3,6 +3,6 @@ template <class T >\n struct S\n {\n   S() : S() {} // { dg-message \"delegating constructors\" }\n-};\n+}; // { dg-error \"delegates to itself\" \"\" { target *-*-* } 5 }\n \n S<int> s;"}]}