{"sha": "7a76df7f955128bb5c70d67bf428b8996ad48d42", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2E3NmRmN2Y5NTUxMjhiYjVjNzBkNjdiZjQyOGI4OTk2YWQ0OGQ0Mg==", "commit": {"author": {"name": "Jeff Law", "email": "law@redhat.com", "date": "2014-02-27T19:28:40Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "2014-02-27T19:28:40Z"}, "message": "re PR rtl-optimization/52714 (ICE in fixup_reorder_chain, at cfglayout.c:880)\n\n\tPR rtl-optimization/52714\n\t* combine.c (try_combine): When splitting an unrecognized PARALLEL\n\tinto two independent simple sets, if I3 is a jump, ensure the\n\tpattern we place into I3 is a (set (pc) ...)\n\n\tPR rtl-optimization/52714\n\t* gcc.c-torture/compile/pr52714.c: New test.\n\nFrom-SVN: r208204", "tree": {"sha": "930d8b6251525e36998b1ad6eca6ae6a0a95fc3f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/930d8b6251525e36998b1ad6eca6ae6a0a95fc3f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7a76df7f955128bb5c70d67bf428b8996ad48d42", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7a76df7f955128bb5c70d67bf428b8996ad48d42", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7a76df7f955128bb5c70d67bf428b8996ad48d42", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7a76df7f955128bb5c70d67bf428b8996ad48d42/comments", "author": null, "committer": null, "parents": [{"sha": "728acca06e395451f2aa26ffbadb8b90af24c90b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/728acca06e395451f2aa26ffbadb8b90af24c90b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/728acca06e395451f2aa26ffbadb8b90af24c90b"}], "stats": {"total": 43, "additions": 43, "deletions": 0}, "files": [{"sha": "16c499b05d626327bc113a4580adce5147dda44a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a76df7f955128bb5c70d67bf428b8996ad48d42/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a76df7f955128bb5c70d67bf428b8996ad48d42/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7a76df7f955128bb5c70d67bf428b8996ad48d42", "patch": "@@ -1,3 +1,10 @@\n+2014-02-27  Jeff Law  <law@redhat.com>\n+\n+\tPR rtl-optimization/52714\n+\t* combine.c (try_combine): When splitting an unrecognized PARALLEL\n+\tinto two independent simple sets, if I3 is a jump, ensure the\n+\tpattern we place into I3 is a (set (pc) ...)\n+\n 2014-02-27  Mikael Pettersson  <mikpe@it.uu.se>\n \t    Jeff Law  <law@redhat.com>\n "}, {"sha": "fc473b63fccc9d454feb462f697804f54cccc87c", "filename": "gcc/combine.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a76df7f955128bb5c70d67bf428b8996ad48d42/gcc%2Fcombine.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a76df7f955128bb5c70d67bf428b8996ad48d42/gcc%2Fcombine.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcombine.c?ref=7a76df7f955128bb5c70d67bf428b8996ad48d42", "patch": "@@ -3712,6 +3712,9 @@ try_combine (rtx i3, rtx i2, rtx i1, rtx i0, int *new_direct_jump_p,\n #ifdef HAVE_cc0\n \t  && !reg_referenced_p (cc0_rtx, set0)\n #endif\n+\t  /* If I3 is a jump, ensure that set0 is a jump so that\n+\t     we do not create invalid RTL.  */\n+\t  && (!JUMP_P (i3) || SET_DEST (set0) == pc_rtx)\n \t )\n \t{\n \t  newi2pat = set1;\n@@ -3726,6 +3729,9 @@ try_combine (rtx i3, rtx i2, rtx i1, rtx i0, int *new_direct_jump_p,\n #ifdef HAVE_cc0\n \t       && !reg_referenced_p (cc0_rtx, set1)\n #endif\n+\t       /* If I3 is a jump, ensure that set1 is a jump so that\n+\t\t  we do not create invalid RTL.  */\n+\t       && (!JUMP_P (i3) || SET_DEST (set1) == pc_rtx)\n \t      )\n \t{\n \t  newi2pat = set0;"}, {"sha": "b95bcfd02f916f575805984c551aa3099f7af9cc", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a76df7f955128bb5c70d67bf428b8996ad48d42/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a76df7f955128bb5c70d67bf428b8996ad48d42/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=7a76df7f955128bb5c70d67bf428b8996ad48d42", "patch": "@@ -1,3 +1,8 @@\n+2014-02-27  Jeff Law  <law@redhat.com>\n+\n+\tPR rtl-optimization/52714\n+\t* gcc.c-torture/compile/pr52714.c: New test.\n+\n 2014-02-27  Mikael Pettersson  <mikpe@it.uu.se>\n             Jeff Law  <law@redhat.com>\n "}, {"sha": "03d49908912b2b72dfa92a2ced56ace38825ea7a", "filename": "gcc/testsuite/gcc.c-torture/compile/pr52714.c", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a76df7f955128bb5c70d67bf428b8996ad48d42/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr52714.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a76df7f955128bb5c70d67bf428b8996ad48d42/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr52714.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr52714.c?ref=7a76df7f955128bb5c70d67bf428b8996ad48d42", "patch": "@@ -0,0 +1,25 @@\n+\n+int __re_compile_fastmap(unsigned char *p)\n+{\n+    unsigned char **stack;\n+    unsigned size;\n+    unsigned avail;\n+\n+    stack = __builtin_alloca(5 * sizeof(unsigned char*));\n+    if (stack == 0)\n+\treturn -2;\n+    size = 5;\n+    avail = 0;\n+\n+    for (;;) {\n+\tswitch (*p++) {\n+\tcase 0:\n+\t    if (avail == size)\n+\t\treturn -2;\n+\t    stack[avail++] = p;\n+\t}\n+    }\n+\n+    return 0;\n+}\n+"}]}