{"sha": "7f2868229492f93dae49d720198794120c7b7247", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2YyODY4MjI5NDkyZjkzZGFlNDlkNzIwMTk4Nzk0MTIwYzdiNzI0Nw==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-05-13T13:57:34Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-05-13T13:57:34Z"}, "message": "(ASM_OUTPUT_FLOAT_OPERAND): Output as hex, unless CODE is 'f'.\n\nFrom-SVN: r4437", "tree": {"sha": "d5cd3e72ac4256e4526025e110f52addd48cb8da", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d5cd3e72ac4256e4526025e110f52addd48cb8da"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7f2868229492f93dae49d720198794120c7b7247", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7f2868229492f93dae49d720198794120c7b7247", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7f2868229492f93dae49d720198794120c7b7247", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7f2868229492f93dae49d720198794120c7b7247/comments", "author": null, "committer": null, "parents": [{"sha": "bc6c7882a7b661769d3d44c79e21cc2bc09658b8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bc6c7882a7b661769d3d44c79e21cc2bc09658b8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bc6c7882a7b661769d3d44c79e21cc2bc09658b8"}], "stats": {"total": 124, "additions": 77, "deletions": 47}, "files": [{"sha": "845bf7c1b93886c05d655c971a287dd1328bc1a5", "filename": "gcc/config/m68k/next.h", "status": "modified", "additions": 23, "deletions": 13, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7f2868229492f93dae49d720198794120c7b7247/gcc%2Fconfig%2Fm68k%2Fnext.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7f2868229492f93dae49d720198794120c7b7247/gcc%2Fconfig%2Fm68k%2Fnext.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fnext.h?ref=7f2868229492f93dae49d720198794120c7b7247", "patch": "@@ -102,19 +102,29 @@ the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n     fprintf (FILE, \"#0%c%x\", (CODE) == 'f' ? 'b' : 'x', hex);\t\t\\\n   } while (0)\n #else\n-#define ASM_OUTPUT_FLOAT_OPERAND(CODE,FILE,VALUE)\t\t\t\\\n-  do{ if (REAL_VALUE_ISINF (VALUE))\t\t\t\t\t\\\n-        {\t\t\t\t\t\t\t\t\\\n-          if (REAL_VALUE_NEGATIVE (VALUE))\t\t\t\t\\\n-            fprintf (FILE, \"#0r-99e999\");\t\t\t\t\\\n-          else\t\t\t\t\t\t\t\t\\\n-            fprintf (FILE, \"#0r99e999\");\t\t\t\t\\\n-        }\t\t\t\t\t\t\t\t\\\n-      else\t\t\t\t\t\t\t\t\\\n-        { char dstr[30];\t\t\t\t\t\t\\\n-          REAL_VALUE_TO_DECIMAL ((VALUE), \"%.9g\", dstr);\t\t\\\n-          fprintf (FILE, \"#0r%s\", dstr);\t\t\t\t\\\n-        }\t\t\t\t\t\t\t\t\\\n+#define ASM_OUTPUT_FLOAT_OPERAND(CODE,FILE,VALUE)\t\t\\\n+  do{ \t\t\t\t\t\t\t\t\\\n+      if (CODE != 'f')\t\t\t\t\t\t\\\n+        {\t\t\t\t\t\t\t\\\n+          long l;\t\t\t\t\t\t\\\n+          REAL_VALUE_TO_TARGET_SINGLE (VALUE, l);\t\t\\\n+          if (sizeof (int) == sizeof (long))\t\t\t\\\n+            asm_fprintf ((FILE), \"%I0x%x\", l);\t\t\t\\\n+          else\t\t\t\t\t\t\t\\\n+            asm_fprintf ((FILE), \"%I0x%lx\", l);\t\t\t\\\n+        }\t\t\t\t\t\t\t\\\n+      else if (REAL_VALUE_ISINF (VALUE))\t\t\t\\\n+        {\t\t\t\t\t\t\t\\\n+          if (REAL_VALUE_NEGATIVE (VALUE))\t\t\t\\\n+            fprintf (FILE, \"#0r-99e999\");\t\t\t\\\n+          else\t\t\t\t\t\t\t\\\n+            fprintf (FILE, \"#0r99e999\");\t\t\t\\\n+        }\t\t\t\t\t\t\t\\\n+      else\t\t\t\t\t\t\t\\\n+        { char dstr[30];\t\t\t\t\t\\\n+          REAL_VALUE_TO_DECIMAL ((VALUE), \"%.9g\", dstr);\t\\\n+          fprintf (FILE, \"#0r%s\", dstr);\t\t\t\\\n+        }\t\t\t\t\t\t\t\\\n     } while (0)\n #endif\n "}, {"sha": "6ae0ca8bc2a64816f35d99e39475795e5b75ee21", "filename": "gcc/config/m68k/sun2o4.h", "status": "modified", "additions": 27, "deletions": 17, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7f2868229492f93dae49d720198794120c7b7247/gcc%2Fconfig%2Fm68k%2Fsun2o4.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7f2868229492f93dae49d720198794120c7b7247/gcc%2Fconfig%2Fm68k%2Fsun2o4.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fsun2o4.h?ref=7f2868229492f93dae49d720198794120c7b7247", "patch": "@@ -138,23 +138,33 @@ the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n     } while (0)\n \n #undef ASM_OUTPUT_FLOAT_OPERAND\n-#define ASM_OUTPUT_FLOAT_OPERAND(CODE,FILE,VALUE)\t\t\t\\\n- do { if (REAL_VALUE_ISINF (VALUE))\t\t\t\t\t\\\n-        {\t\t\t\t\t\t\t\t\\\n-          if (REAL_VALUE_NEGATIVE (VALUE))\t\t\t\t\\\n-            fprintf (FILE, \"#0r-99e999\");\t\t\t\t\\\n-          else\t\t\t\t\t\t\t\t\\\n-            fprintf (FILE, \"#0r99e999\");\t\t\t\t\\\n-        }\t\t\t\t\t\t\t\t\\\n-      else if (REAL_VALUE_MINUS_ZERO (VALUE))\t\t\t\t\\\n-        {\t\t\t\t\t\t\t\t\\\n-          fprintf (FILE, \"#0r-0.0\");\t\t\t\t\t\\\n-        }\t\t\t\t\t\t\t\t\\\n-      else\t\t\t\t\t\t\t\t\\\n-        { char dstr[30];\t\t\t\t\t\t\\\n-          REAL_VALUE_TO_DECIMAL ((VALUE), \"%.9g\", dstr);\t\t\\\n-          fprintf (FILE, \"#0r%s\", dstr);\t\t\t\t\\\n-        }\t\t\t\t\t\t\t\t\\\n+#define ASM_OUTPUT_FLOAT_OPERAND(CODE,FILE,VALUE)\t\t\\\n+ do { \t\t\t\t\t\t\t\t\\\n+      if (CODE != 'f')\t\t\t\t\t\t\\\n+        {\t\t\t\t\t\t\t\\\n+          long l;\t\t\t\t\t\t\\\n+          REAL_VALUE_TO_TARGET_SINGLE (VALUE, l);\t\t\\\n+          if (sizeof (int) == sizeof (long))\t\t\t\\\n+            asm_fprintf ((FILE), \"%I0x%x\", l);\t\t\t\\\n+          else\t\t\t\t\t\t\t\\\n+            asm_fprintf ((FILE), \"%I0x%lx\", l);\t\t\t\\\n+        }\t\t\t\t\t\t\t\\\n+      else if (REAL_VALUE_ISINF (VALUE))\t\t\t\\\n+        {\t\t\t\t\t\t\t\\\n+          if (REAL_VALUE_NEGATIVE (VALUE))\t\t\t\\\n+            fprintf (FILE, \"#0r-99e999\");\t\t\t\\\n+          else\t\t\t\t\t\t\t\\\n+            fprintf (FILE, \"#0r99e999\");\t\t\t\\\n+        }\t\t\t\t\t\t\t\\\n+      else if (REAL_VALUE_MINUS_ZERO (VALUE))\t\t\t\\\n+        {\t\t\t\t\t\t\t\\\n+          fprintf (FILE, \"#0r-0.0\");\t\t\t\t\\\n+        }\t\t\t\t\t\t\t\\\n+      else\t\t\t\t\t\t\t\\\n+        { char dstr[30];\t\t\t\t\t\\\n+          REAL_VALUE_TO_DECIMAL ((VALUE), \"%.9g\", dstr);\t\\\n+          fprintf (FILE, \"#0r%s\", dstr);\t\t\t\\\n+        }\t\t\t\t\t\t\t\\\n     } while (0)\n \n #undef ASM_OUTPUT_DOUBLE_OPERAND"}, {"sha": "9ab1bcc2b24ba6b03ab3eec8fa536f36170bfc02", "filename": "gcc/config/m68k/sun3.h", "status": "modified", "additions": 27, "deletions": 17, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7f2868229492f93dae49d720198794120c7b7247/gcc%2Fconfig%2Fm68k%2Fsun3.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7f2868229492f93dae49d720198794120c7b7247/gcc%2Fconfig%2Fm68k%2Fsun3.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fsun3.h?ref=7f2868229492f93dae49d720198794120c7b7247", "patch": "@@ -224,23 +224,33 @@ the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n    There's no way to output a NaN's fraction, so we lose it.  */\n   \n #undef ASM_OUTPUT_FLOAT_OPERAND\n-#define ASM_OUTPUT_FLOAT_OPERAND(CODE,FILE,VALUE)\t\t\t\\\n- do { if (REAL_VALUE_ISINF (VALUE))\t\t\t\t\t\\\n-        {\t\t\t\t\t\t\t\t\\\n-          if (REAL_VALUE_NEGATIVE (VALUE))\t\t\t\t\\\n-            asm_fprintf (FILE, \"%I0r-99e999\");\t\t\t\t\\\n-          else\t\t\t\t\t\t\t\t\\\n-            asm_fprintf (FILE, \"%I0r99e999\");\t\t\t\t\\\n-        }\t\t\t\t\t\t\t\t\\\n-      else if (REAL_VALUE_MINUS_ZERO (VALUE))\t\t\t\t\\\n-        {\t\t\t\t\t\t\t\t\\\n-          asm_fprintf (FILE, \"%I0r-0.0\");\t\t\t\t\\\n-        }\t\t\t\t\t\t\t\t\\\n-      else\t\t\t\t\t\t\t\t\\\n-        { char dstr[30];\t\t\t\t\t\t\\\n-          REAL_VALUE_TO_DECIMAL ((VALUE), \"%.9g\", dstr);\t\t\\\n-          asm_fprintf (FILE, \"%I0r%s\", dstr);\t\t\t\t\\\n-        }\t\t\t\t\t\t\t\t\\\n+#define ASM_OUTPUT_FLOAT_OPERAND(CODE,FILE,VALUE)\t\t\\\n+ do { \t\t\t\t\t\t\t\t\\\n+      if (CODE != 'f')\t\t\t\t\t\t\\\n+        {\t\t\t\t\t\t\t\\\n+          long l;\t\t\t\t\t\t\\\n+          REAL_VALUE_TO_TARGET_SINGLE (VALUE, l);\t\t\\\n+          if (sizeof (int) == sizeof (long))\t\t\t\\\n+            asm_fprintf ((FILE), \"%I0x%x\", l);\t\t\t\\\n+          else\t\t\t\t\t\t\t\\\n+            asm_fprintf ((FILE), \"%I0x%lx\", l);\t\t\t\\\n+        }\t\t\t\t\t\t\t\\\n+      else if (REAL_VALUE_ISINF (VALUE))\t\t\t\\\n+        {\t\t\t\t\t\t\t\\\n+          if (REAL_VALUE_NEGATIVE (VALUE))\t\t\t\\\n+            asm_fprintf (FILE, \"%I0r-99e999\");\t\t\t\\\n+          else\t\t\t\t\t\t\t\\\n+            asm_fprintf (FILE, \"%I0r99e999\");\t\t\t\\\n+        }\t\t\t\t\t\t\t\\\n+      else if (REAL_VALUE_MINUS_ZERO (VALUE))\t\t\t\\\n+        {\t\t\t\t\t\t\t\\\n+          asm_fprintf (FILE, \"%I0r-0.0\");\t\t\t\\\n+        }\t\t\t\t\t\t\t\\\n+      else\t\t\t\t\t\t\t\\\n+        { char dstr[30];\t\t\t\t\t\\\n+          REAL_VALUE_TO_DECIMAL ((VALUE), \"%.9g\", dstr);\t\\\n+          asm_fprintf (FILE, \"%I0r%s\", dstr);\t\t\t\\\n+        }\t\t\t\t\t\t\t\\\n     } while (0)\n \n #undef ASM_OUTPUT_DOUBLE_OPERAND"}]}