{"sha": "4e29671cb258f486e498a0697f88861ff351de50", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGUyOTY3MWNiMjU4ZjQ4NmU0OThhMDY5N2Y4ODg2MWZmMzUxZGU1MA==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2019-04-29T13:54:58Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2019-04-29T13:54:58Z"}, "message": "tree-ssa.c (insert_debug_temp_for_var_def): For {CLOBBER} rhs issue a reset.\n\n2019-04-29  Richard Biener  <rguenther@suse.de>\n\n\t* tree-ssa.c (insert_debug_temp_for_var_def): For {CLOBBER}\n\trhs issue a reset.\n\nFrom-SVN: r270652", "tree": {"sha": "078d367f4be70c58b70243ab816cb2cfe9e5c8f3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/078d367f4be70c58b70243ab816cb2cfe9e5c8f3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4e29671cb258f486e498a0697f88861ff351de50", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4e29671cb258f486e498a0697f88861ff351de50", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4e29671cb258f486e498a0697f88861ff351de50", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4e29671cb258f486e498a0697f88861ff351de50/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f373ad68cfc35cc70ef909eb435669ae00693ca0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f373ad68cfc35cc70ef909eb435669ae00693ca0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f373ad68cfc35cc70ef909eb435669ae00693ca0"}], "stats": {"total": 10, "additions": 10, "deletions": 0}, "files": [{"sha": "b1c68bbf81f10560d274dfa49e9db9ee78317908", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e29671cb258f486e498a0697f88861ff351de50/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e29671cb258f486e498a0697f88861ff351de50/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4e29671cb258f486e498a0697f88861ff351de50", "patch": "@@ -1,3 +1,8 @@\n+2019-04-29  Richard Biener  <rguenther@suse.de>\n+\n+\t* tree-ssa.c (insert_debug_temp_for_var_def): For {CLOBBER}\n+\trhs issue a reset.\n+\n 2019-04-27  Iain Buclaw  <ibuclaw@gdcproject.org>\n \n \t* config/netbsd-d.c: Include memmodel.h.  Remove unused tree.h,"}, {"sha": "489f6dc1501c855f039bc53133bad8c5fca8e1e7", "filename": "gcc/tree-ssa.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e29671cb258f486e498a0697f88861ff351de50/gcc%2Ftree-ssa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e29671cb258f486e498a0697f88861ff351de50/gcc%2Ftree-ssa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa.c?ref=4e29671cb258f486e498a0697f88861ff351de50", "patch": "@@ -358,6 +358,11 @@ insert_debug_temp_for_var_def (gimple_stmt_iterator *gsi, tree var)\n       else if (value == error_mark_node)\n \tvalue = NULL;\n     }\n+  else if (gimple_clobber_p (def_stmt))\n+    /* We can end up here when rewriting a decl into SSA and coming\n+       along a clobber for the original decl.  Turn that into\n+       # DEBUG decl => NULL  */\n+    value = NULL;\n   else if (is_gimple_assign (def_stmt))\n     {\n       bool no_value = false;"}]}