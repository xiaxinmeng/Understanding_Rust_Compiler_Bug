{"sha": "b86703a050c61d0dc81410de707b078a27ce4732", "node_id": "C_kwDOANBUbNoAKGI4NjcwM2EwNTBjNjFkMGRjODE0MTBkZTcwN2IwNzhhMjdjZTQ3MzI", "commit": {"author": {"name": "Xianmiao Qu", "email": "cooper.qu@linux.alibaba.com", "date": "2022-11-01T07:49:03Z"}, "committer": {"name": "Xianmiao Qu", "email": "cooper.qu@linux.alibaba.com", "date": "2023-01-10T11:52:24Z"}, "message": "C-SKY: Skip other CPUs if the testcases are only for ck801.\n\nRefine some testcases for ck801, if the testcase is only for\nck801, add the filename prefix \"ck801-\", and add dg-skip-if\nto skip other CPUs.\n\ngcc/testsuite/\n\t* gcc.target/csky/and3a.c: Rename to ...\n\t* gcc.target/csky/ck801-and.c: ... this.\n\t* gcc.target/csky/constpool-3.c: Rename to ...\n\t* gcc.target/csky/constpool-2.c: ... this, Rename to ...\n\t* gcc.target/csky/constpool-1.c: ... this, Rename to ...\n\t* gcc.target/csky/ck801-constpool.c: ... this, and skip\n\tif the CPU is not ck801.\n\t* gcc.target/csky/ck801-branch.c: Skip if the CPU is not ck801.", "tree": {"sha": "faa604df3fa9943d98789a45963c98c991c3d0b6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/faa604df3fa9943d98789a45963c98c991c3d0b6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b86703a050c61d0dc81410de707b078a27ce4732", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b86703a050c61d0dc81410de707b078a27ce4732", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b86703a050c61d0dc81410de707b078a27ce4732", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b86703a050c61d0dc81410de707b078a27ce4732/comments", "author": {"login": "Cooper-Qu", "id": 68842787, "node_id": "MDQ6VXNlcjY4ODQyNzg3", "avatar_url": "https://avatars.githubusercontent.com/u/68842787?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Cooper-Qu", "html_url": "https://github.com/Cooper-Qu", "followers_url": "https://api.github.com/users/Cooper-Qu/followers", "following_url": "https://api.github.com/users/Cooper-Qu/following{/other_user}", "gists_url": "https://api.github.com/users/Cooper-Qu/gists{/gist_id}", "starred_url": "https://api.github.com/users/Cooper-Qu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Cooper-Qu/subscriptions", "organizations_url": "https://api.github.com/users/Cooper-Qu/orgs", "repos_url": "https://api.github.com/users/Cooper-Qu/repos", "events_url": "https://api.github.com/users/Cooper-Qu/events{/privacy}", "received_events_url": "https://api.github.com/users/Cooper-Qu/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Cooper-Qu", "id": 68842787, "node_id": "MDQ6VXNlcjY4ODQyNzg3", "avatar_url": "https://avatars.githubusercontent.com/u/68842787?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Cooper-Qu", "html_url": "https://github.com/Cooper-Qu", "followers_url": "https://api.github.com/users/Cooper-Qu/followers", "following_url": "https://api.github.com/users/Cooper-Qu/following{/other_user}", "gists_url": "https://api.github.com/users/Cooper-Qu/gists{/gist_id}", "starred_url": "https://api.github.com/users/Cooper-Qu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Cooper-Qu/subscriptions", "organizations_url": "https://api.github.com/users/Cooper-Qu/orgs", "repos_url": "https://api.github.com/users/Cooper-Qu/repos", "events_url": "https://api.github.com/users/Cooper-Qu/events{/privacy}", "received_events_url": "https://api.github.com/users/Cooper-Qu/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "288b18bf0739a83609e720e8d263181c4ec4d86c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/288b18bf0739a83609e720e8d263181c4ec4d86c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/288b18bf0739a83609e720e8d263181c4ec4d86c"}], "stats": {"total": 53, "additions": 28, "deletions": 25}, "files": [{"sha": "7c79879278da9a75ad3afbc4b91ac54e13c106e8", "filename": "gcc/testsuite/gcc.target/csky/ck801-and.c", "status": "renamed", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b86703a050c61d0dc81410de707b078a27ce4732/gcc%2Ftestsuite%2Fgcc.target%2Fcsky%2Fck801-and.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b86703a050c61d0dc81410de707b078a27ce4732/gcc%2Ftestsuite%2Fgcc.target%2Fcsky%2Fck801-and.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fcsky%2Fck801-and.c?ref=b86703a050c61d0dc81410de707b078a27ce4732", "patch": "@@ -1,5 +1,6 @@\n /* { dg-do compile } */\n-/* { dg-csky-options \"-mcpu=ck801 -O1\" } */\n+/* { dg-skip-if  \"test is specific to ck801\"  { csky-*-* }  { \"*\" }  { \"-mcpu=ck801\" }  }  */\n+/* { dg-csky-options \"-O1\" } */\n \n /* Test special code generation patterns for bit operators.  */\n ", "previous_filename": "gcc/testsuite/gcc.target/csky/and3a.c"}, {"sha": "e4dafb37e8945de0e414e41c1bea3f23e56c3c1e", "filename": "gcc/testsuite/gcc.target/csky/ck801-branch.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b86703a050c61d0dc81410de707b078a27ce4732/gcc%2Ftestsuite%2Fgcc.target%2Fcsky%2Fck801-branch.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b86703a050c61d0dc81410de707b078a27ce4732/gcc%2Ftestsuite%2Fgcc.target%2Fcsky%2Fck801-branch.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fcsky%2Fck801-branch.c?ref=b86703a050c61d0dc81410de707b078a27ce4732", "patch": "@@ -1,5 +1,6 @@\n /* { dg-do compile } */\n-/* { dg-csky-options \"-mcpu=ck801 -O1 -fno-reorder-blocks\" } */\n+/* { dg-skip-if  \"test is specific to ck801\"  { csky-*-* }  { \"*\" }  { \"-mcpu=ck801\" }  }  */\n+/* { dg-csky-options \"-O1 -fno-reorder-blocks\" } */\n \n /* Test branch generation on CK801, which cannot rely on assembler\n    branch relaxation because long branches clobber lr.  */"}, {"sha": "5c92f39d0ab9024ee726e6c206f32dd0b7d831a9", "filename": "gcc/testsuite/gcc.target/csky/ck801-constpool.c", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b86703a050c61d0dc81410de707b078a27ce4732/gcc%2Ftestsuite%2Fgcc.target%2Fcsky%2Fck801-constpool.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b86703a050c61d0dc81410de707b078a27ce4732/gcc%2Ftestsuite%2Fgcc.target%2Fcsky%2Fck801-constpool.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fcsky%2Fck801-constpool.c?ref=b86703a050c61d0dc81410de707b078a27ce4732", "patch": "@@ -0,0 +1,17 @@\n+/* { dg-do compile } */\n+/* { dg-skip-if  \"test is specific to ck801\"  { csky-*-* }  { \"*\" }  { \"-mcpu=ck801\" }  }  */\n+/* { dg-csky-options \"-O1\" } */\n+\n+/* Make sure that constant pools are emitted by the compiler for ck801.\n+   If this is deferred to the assembler, the compiler will compute\n+   incorrect branch offsets.  */\n+\n+void f (unsigned int *u, long long int *l, float *f, double *d)\n+{\n+  *u = 0xdeadbeef;\n+  *l = 0xcafef00dc0ffeeULL;\n+  *f = 3.14159F;\n+  *d = 2.718281828459;\n+}\n+\n+/* { dg-final { scan-assembler-times \"\\\\.long\" 6 } } */"}, {"sha": "d654420bc3f35973fed3943dd22056aca3f8c1a2", "filename": "gcc/testsuite/gcc.target/csky/constpool-1.c", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b86703a050c61d0dc81410de707b078a27ce4732/gcc%2Ftestsuite%2Fgcc.target%2Fcsky%2Fconstpool-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b86703a050c61d0dc81410de707b078a27ce4732/gcc%2Ftestsuite%2Fgcc.target%2Fcsky%2Fconstpool-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fcsky%2Fconstpool-1.c?ref=b86703a050c61d0dc81410de707b078a27ce4732", "patch": "@@ -1,9 +1,8 @@\n /* { dg-do compile } */\n-/* { dg-csky-options \"-mcpu=ck801 -O1\" } */\n+/* { dg-csky-options \"-mcpu=ck810f -O1 -mconstpool\" } */\n \n-/* Make sure that constant pools are emitted by the compiler for ck801.\n-   If this is deferred to the assembler, the compiler will compute\n-   incorrect branch offsets.  */\n+/* Make sure that constant pools are emitted by the compiler when\n+   -mconstpool is provided.  */\n \n void f (unsigned int *u, long long int *l, float *f, double *d)\n {"}, {"sha": "e3a6e095f5b9d01b066c0997d63e1bcc1243b4a2", "filename": "gcc/testsuite/gcc.target/csky/constpool-2.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b86703a050c61d0dc81410de707b078a27ce4732/gcc%2Ftestsuite%2Fgcc.target%2Fcsky%2Fconstpool-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b86703a050c61d0dc81410de707b078a27ce4732/gcc%2Ftestsuite%2Fgcc.target%2Fcsky%2Fconstpool-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fcsky%2Fconstpool-2.c?ref=b86703a050c61d0dc81410de707b078a27ce4732", "patch": "@@ -1,8 +1,8 @@\n /* { dg-do compile } */\n-/* { dg-csky-options \"-mcpu=ck810f -O1 -mconstpool\" } */\n+/* { dg-csky-options \"-mcpu=ck810f -O1 -mno-constpool\" } */\n \n-/* Make sure that constant pools are emitted by the compiler when\n-   -mconstpool is provided.  */\n+/* Make sure that constant pools are not emitted by the compiler when\n+   -mno-constpool is provided.  */\n \n void f (unsigned int *u, long long int *l, float *f, double *d)\n {\n@@ -12,4 +12,4 @@ void f (unsigned int *u, long long int *l, float *f, double *d)\n   *d = 2.718281828459;\n }\n \n-/* { dg-final { scan-assembler-times \"\\\\.long\" 6 } } */\n+/* { dg-final { scan-assembler-not \"\\\\.long\" } } */"}, {"sha": "e3a6e095f5b9d01b066c0997d63e1bcc1243b4a2", "filename": "gcc/testsuite/gcc.target/csky/constpool-3.c", "status": "removed", "additions": 0, "deletions": 15, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/288b18bf0739a83609e720e8d263181c4ec4d86c/gcc%2Ftestsuite%2Fgcc.target%2Fcsky%2Fconstpool-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/288b18bf0739a83609e720e8d263181c4ec4d86c/gcc%2Ftestsuite%2Fgcc.target%2Fcsky%2Fconstpool-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fcsky%2Fconstpool-3.c?ref=288b18bf0739a83609e720e8d263181c4ec4d86c", "patch": "@@ -1,15 +0,0 @@\n-/* { dg-do compile } */\n-/* { dg-csky-options \"-mcpu=ck810f -O1 -mno-constpool\" } */\n-\n-/* Make sure that constant pools are not emitted by the compiler when\n-   -mno-constpool is provided.  */\n-\n-void f (unsigned int *u, long long int *l, float *f, double *d)\n-{\n-  *u = 0xdeadbeef;\n-  *l = 0xcafef00dc0ffeeULL;\n-  *f = 3.14159F;\n-  *d = 2.718281828459;\n-}\n-\n-/* { dg-final { scan-assembler-not \"\\\\.long\" } } */"}]}