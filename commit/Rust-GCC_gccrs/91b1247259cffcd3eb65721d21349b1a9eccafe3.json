{"sha": "91b1247259cffcd3eb65721d21349b1a9eccafe3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTFiMTI0NzI1OWNmZmNkM2ViNjU3MjFkMjEzNDliMWE5ZWNjYWZlMw==", "commit": {"author": {"name": "Andreas Jaeger", "email": "aj@suse.de", "date": "2002-06-01T14:11:45Z"}, "committer": {"name": "Andreas Jaeger", "email": "aj@gcc.gnu.org", "date": "2002-06-01T14:11:45Z"}, "message": "cppexp.c (cpp_classify_number): Cast precission to int for correct printf format.\n\n\t* cppexp.c (cpp_classify_number): Cast precission to int for\n\tcorrect printf format.\n\nFrom-SVN: r54147", "tree": {"sha": "7b2a5756cab68093b4f735bc55819005c0fe4479", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7b2a5756cab68093b4f735bc55819005c0fe4479"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/91b1247259cffcd3eb65721d21349b1a9eccafe3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/91b1247259cffcd3eb65721d21349b1a9eccafe3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/91b1247259cffcd3eb65721d21349b1a9eccafe3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/91b1247259cffcd3eb65721d21349b1a9eccafe3/comments", "author": {"login": "ajaeger", "id": 16867, "node_id": "MDQ6VXNlcjE2ODY3", "avatar_url": "https://avatars.githubusercontent.com/u/16867?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ajaeger", "html_url": "https://github.com/ajaeger", "followers_url": "https://api.github.com/users/ajaeger/followers", "following_url": "https://api.github.com/users/ajaeger/following{/other_user}", "gists_url": "https://api.github.com/users/ajaeger/gists{/gist_id}", "starred_url": "https://api.github.com/users/ajaeger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ajaeger/subscriptions", "organizations_url": "https://api.github.com/users/ajaeger/orgs", "repos_url": "https://api.github.com/users/ajaeger/repos", "events_url": "https://api.github.com/users/ajaeger/events{/privacy}", "received_events_url": "https://api.github.com/users/ajaeger/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "01e9ae86327636d3a3309b19b88b261d8eabe6af", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/01e9ae86327636d3a3309b19b88b261d8eabe6af", "html_url": "https://github.com/Rust-GCC/gccrs/commit/01e9ae86327636d3a3309b19b88b261d8eabe6af"}], "stats": {"total": 19, "additions": 12, "deletions": 7}, "files": [{"sha": "753ea40e102f952cfbd56b9fb7ca95b97b143556", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91b1247259cffcd3eb65721d21349b1a9eccafe3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91b1247259cffcd3eb65721d21349b1a9eccafe3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=91b1247259cffcd3eb65721d21349b1a9eccafe3", "patch": "@@ -1,3 +1,8 @@\n+2002-06-01  Andreas Jaeger  <aj@suse.de>\n+\n+\t* cppexp.c (cpp_classify_number): Cast precission to int for\n+\tcorrect printf format.\n+\n 2002-06-01  Marek Michalkiewicz  <marekm@amelek.gda.pl>\n \n \t* config/avr/avr.c (avr_mcu_types): Remove devices that were once\n@@ -54,10 +59,10 @@ Sat Jun  1 11:23:22 CEST 2002  Zdenek Dvorak  <rakdver@atrey.karlin.mff.cuni.cz>\n \tinfrastructure.\n \n 2002-06-01  Alan Lehotsky  <apl@alum.mit.edu>\n-\t\n+\n \t* except.c (nothrow_function_p): Walk epilogue delay list\n \tchecking the insn, not the chain for potential throws.\n-\t\n+\n 2002-05-31  Zack Weinberg  <zack@codesourcery.com>\n \n \t* Makefile.in (INSTALL_CPP, UNINSTALL_CPP): Remove.\n@@ -186,7 +191,7 @@ Sat Jun  1 11:23:22 CEST 2002  Zdenek Dvorak  <rakdver@atrey.karlin.mff.cuni.cz>\n \t(UNLIKELY_EXECUTED_TEXT_SECTION_NAME): Define.\n \n 2002-05-31  Alan Lehotsky <apl@alum.mit.edu>\n-\t\n+\n \t* varasm.c (mark_constant_pool): Walk epilogue delay list\n \tchecking the insn, not the chain for potential constants.\n "}, {"sha": "1153768dedd7e21f39e7197cfc60616d00169f86", "filename": "gcc/cppexp.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91b1247259cffcd3eb65721d21349b1a9eccafe3/gcc%2Fcppexp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91b1247259cffcd3eb65721d21349b1a9eccafe3/gcc%2Fcppexp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcppexp.c?ref=91b1247259cffcd3eb65721d21349b1a9eccafe3", "patch": "@@ -244,7 +244,7 @@ cpp_classify_number (pfile, token)\n \t{\n \t  cpp_error (pfile, DL_ERROR,\n \t\t     \"invalid suffix \\\"%.*s\\\" on floating constant\",\n-\t\t     limit - str, str);\n+\t\t     (int) (limit - str), str);\n \t  return CPP_N_INVALID;\n \t}\n \n@@ -254,7 +254,7 @@ cpp_classify_number (pfile, token)\n \t  && ! cpp_sys_macro_p (pfile))\n \tcpp_error (pfile, DL_WARNING,\n \t\t   \"traditional C rejects the \\\"%.*s\\\" suffix\",\n-\t\t   limit - str, str);\n+\t\t   (int) (limit - str), str);\n \n       result |= CPP_N_FLOATING;\n     }\n@@ -265,7 +265,7 @@ cpp_classify_number (pfile, token)\n \t{\n \t  cpp_error (pfile, DL_ERROR,\n \t\t     \"invalid suffix \\\"%.*s\\\" on integer constant\",\n-\t\t     limit - str, str);\n+\t\t     (int) (limit - str), str);\n \t  return CPP_N_INVALID;\n \t}\n \n@@ -275,7 +275,7 @@ cpp_classify_number (pfile, token)\n \t  && ! cpp_sys_macro_p (pfile))\n \tcpp_error (pfile, DL_WARNING,\n \t\t   \"traditional C rejects the \\\"%.*s\\\" suffix\",\n-\t\t   limit - str, str);\n+\t\t   (int) (limit - str), str);\n \n       if ((result & CPP_N_WIDTH) == CPP_N_LARGE\n \t  && ! CPP_OPTION (pfile, c99)"}]}