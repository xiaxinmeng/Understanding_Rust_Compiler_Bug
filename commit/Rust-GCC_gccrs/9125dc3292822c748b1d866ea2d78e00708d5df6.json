{"sha": "9125dc3292822c748b1d866ea2d78e00708d5df6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTEyNWRjMzI5MjgyMmM3NDhiMWQ4NjZlYTJkNzhlMDA3MDhkNWRmNg==", "commit": {"author": {"name": "Iain Buclaw", "email": "ibuclaw@gdcproject.org", "date": "2019-04-25T15:31:35Z"}, "committer": {"name": "Iain Buclaw", "email": "ibuclaw@gcc.gnu.org", "date": "2019-04-25T15:31:35Z"}, "message": "libphobos: Fix segfault in runtime caused by unexpected GC of TLS data.\n\nlibphobos/ChangeLog:\n\n2019-04-25  Iain Buclaw  <ibuclaw@gdcproject.org>\n\n\tPR d/90250\n\t* libdruntime/gcc/sections/elf_shared.d (initTLSRanges): Populate\n\t_tlsRanges in every startup thread.\n\t* testsuite/libphobos.thread/thread.exp: Load libphobos-dg.exp.\n\t* testsuite/libphobos.thread/tlsgc_sections.d: New test.\n\nFrom-SVN: r270576", "tree": {"sha": "3168084ac2a7b9b2987f6195e7252b929f3123c6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3168084ac2a7b9b2987f6195e7252b929f3123c6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9125dc3292822c748b1d866ea2d78e00708d5df6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9125dc3292822c748b1d866ea2d78e00708d5df6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9125dc3292822c748b1d866ea2d78e00708d5df6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9125dc3292822c748b1d866ea2d78e00708d5df6/comments", "author": {"login": "ibuclaw", "id": 397929, "node_id": "MDQ6VXNlcjM5NzkyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/397929?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ibuclaw", "html_url": "https://github.com/ibuclaw", "followers_url": "https://api.github.com/users/ibuclaw/followers", "following_url": "https://api.github.com/users/ibuclaw/following{/other_user}", "gists_url": "https://api.github.com/users/ibuclaw/gists{/gist_id}", "starred_url": "https://api.github.com/users/ibuclaw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ibuclaw/subscriptions", "organizations_url": "https://api.github.com/users/ibuclaw/orgs", "repos_url": "https://api.github.com/users/ibuclaw/repos", "events_url": "https://api.github.com/users/ibuclaw/events{/privacy}", "received_events_url": "https://api.github.com/users/ibuclaw/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "aeec4861c41eb5afa5b0700103e6cc404047cc6d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aeec4861c41eb5afa5b0700103e6cc404047cc6d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aeec4861c41eb5afa5b0700103e6cc404047cc6d"}], "stats": {"total": 57, "additions": 56, "deletions": 1}, "files": [{"sha": "0d937e02bfce9eb4ac9cecfd857ed3411988de56", "filename": "libphobos/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9125dc3292822c748b1d866ea2d78e00708d5df6/libphobos%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9125dc3292822c748b1d866ea2d78e00708d5df6/libphobos%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2FChangeLog?ref=9125dc3292822c748b1d866ea2d78e00708d5df6", "patch": "@@ -1,3 +1,11 @@\n+2019-04-25  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\tPR d/90250\n+\t* libdruntime/gcc/sections/elf_shared.d (initTLSRanges): Populate\n+\t_tlsRanges in every startup thread.\n+\t* testsuite/libphobos.thread/thread.exp: Load libphobos-dg.exp.\n+\t* testsuite/libphobos.thread/tlsgc_sections.d: New test.\n+\n 2019-04-25  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n \n \t* m4/druntime/cpu.m4 (DRUNTIME_CPU_SOURCES): Quote brackets."}, {"sha": "1eafecdd32276134b12dab91918cdf2f0784f522", "filename": "libphobos/libdruntime/gcc/sections/elf_shared.d", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9125dc3292822c748b1d866ea2d78e00708d5df6/libphobos%2Flibdruntime%2Fgcc%2Fsections%2Felf_shared.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9125dc3292822c748b1d866ea2d78e00708d5df6/libphobos%2Flibdruntime%2Fgcc%2Fsections%2Felf_shared.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2Fgcc%2Fsections%2Felf_shared.d?ref=9125dc3292822c748b1d866ea2d78e00708d5df6", "patch": "@@ -308,7 +308,13 @@ else\n      */\n     Array!(void[])* initTLSRanges() nothrow @nogc\n     {\n-        return &_tlsRanges();\n+        auto rngs = &_tlsRanges();\n+        if (rngs.empty)\n+        {\n+            foreach (ref pdso; _loadedDSOs)\n+                rngs.insertBack(pdso.tlsRange());\n+        }\n+        return rngs;\n     }\n \n     void finiTLSRanges(Array!(void[])* rngs) nothrow @nogc"}, {"sha": "3e760d3e3701e81cf4f85b51e6f1fb4ab5e34dc5", "filename": "libphobos/testsuite/libphobos.thread/thread.exp", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9125dc3292822c748b1d866ea2d78e00708d5df6/libphobos%2Ftestsuite%2Flibphobos.thread%2Fthread.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9125dc3292822c748b1d866ea2d78e00708d5df6/libphobos%2Ftestsuite%2Flibphobos.thread%2Fthread.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Ftestsuite%2Flibphobos.thread%2Fthread.exp?ref=9125dc3292822c748b1d866ea2d78e00708d5df6", "patch": "@@ -14,6 +14,8 @@\n # along with GCC; see the file COPYING3.  If not see\n # <http://www.gnu.org/licenses/>.\n \n+load_lib libphobos-dg.exp\n+\n # Initialize dg.\n dg-init\n "}, {"sha": "1421d926a38eac1ea22ae5a6196e0f398bdbdc06", "filename": "libphobos/testsuite/libphobos.thread/tlsgc_sections.d", "status": "added", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9125dc3292822c748b1d866ea2d78e00708d5df6/libphobos%2Ftestsuite%2Flibphobos.thread%2Ftlsgc_sections.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9125dc3292822c748b1d866ea2d78e00708d5df6/libphobos%2Ftestsuite%2Flibphobos.thread%2Ftlsgc_sections.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Ftestsuite%2Flibphobos.thread%2Ftlsgc_sections.d?ref=9125dc3292822c748b1d866ea2d78e00708d5df6", "patch": "@@ -0,0 +1,39 @@\n+final class Class\n+{\n+    // This gets triggered although the instance always stays referenced.\n+    ~this()\n+    {\n+        import core.stdc.stdlib;\n+        abort();\n+    }\n+}\n+\n+Class obj;\n+\n+static this()\n+{\n+    obj = new Class;\n+}\n+\n+static ~this()\n+{\n+    // Free without destruction to avoid triggering abort()\n+    import core.memory;\n+    GC.free(cast(void*)obj);\n+}\n+\n+void doit()\n+{\n+    foreach (i; 0 .. 10_000)\n+        new ubyte[](100_000);\n+}\n+\n+void main()\n+{\n+    import core.thread;\n+    auto t = new Thread(&doit);\n+    t.start();\n+\n+    // This triggers the GC that frees the still referenced Class instance.\n+    doit();\n+}"}]}