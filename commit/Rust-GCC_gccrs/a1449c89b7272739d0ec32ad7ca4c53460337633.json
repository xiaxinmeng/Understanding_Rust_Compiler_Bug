{"sha": "a1449c89b7272739d0ec32ad7ca4c53460337633", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTE0NDljODliNzI3MjczOWQwZWMzMmFkN2NhNGM1MzQ2MDMzNzYzMw==", "commit": {"author": {"name": "Dmitriy Anisimkov", "email": "anisimko@adacore.com", "date": "2019-12-12T10:01:41Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2019-12-12T10:01:41Z"}, "message": "[Ada] Improve end of command line arguments detection\n\n2019-12-12  Dmitriy Anisimkov  <anisimko@adacore.com>\n\ngcc/ada/\n\n\t* libgnat/g-comlin.ads (Get_Argument): New routine similar to\n\toriginal Get_Argument but with one more out parameter\n\tEnd_Of_Arguments.\n\t(Get_Arguments): Comment improved.\n\t* libgnat/g-comlin.adb (Get_Argument): Implementation taken from\n\toriginal Get_Argument and improved.\n\t(Get_Argument): Calls new routine Get_Argument with additional\n\tparameter.\n\nFrom-SVN: r279277", "tree": {"sha": "5defd9ca4435649cdeebdd8cfdf67bf5d1dd3dd0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5defd9ca4435649cdeebdd8cfdf67bf5d1dd3dd0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a1449c89b7272739d0ec32ad7ca4c53460337633", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a1449c89b7272739d0ec32ad7ca4c53460337633", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a1449c89b7272739d0ec32ad7ca4c53460337633", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a1449c89b7272739d0ec32ad7ca4c53460337633/comments", "author": {"login": "anisimkov", "id": 15864134, "node_id": "MDQ6VXNlcjE1ODY0MTM0", "avatar_url": "https://avatars.githubusercontent.com/u/15864134?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anisimkov", "html_url": "https://github.com/anisimkov", "followers_url": "https://api.github.com/users/anisimkov/followers", "following_url": "https://api.github.com/users/anisimkov/following{/other_user}", "gists_url": "https://api.github.com/users/anisimkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/anisimkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anisimkov/subscriptions", "organizations_url": "https://api.github.com/users/anisimkov/orgs", "repos_url": "https://api.github.com/users/anisimkov/repos", "events_url": "https://api.github.com/users/anisimkov/events{/privacy}", "received_events_url": "https://api.github.com/users/anisimkov/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c38d4670d72427a12035a93cc3c6174f17825443", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c38d4670d72427a12035a93cc3c6174f17825443", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c38d4670d72427a12035a93cc3c6174f17825443"}], "stats": {"total": 55, "additions": 46, "deletions": 9}, "files": [{"sha": "8756dd7c7b794a0c6706393fb4c81fc095dd44fd", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1449c89b7272739d0ec32ad7ca4c53460337633/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1449c89b7272739d0ec32ad7ca4c53460337633/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=a1449c89b7272739d0ec32ad7ca4c53460337633", "patch": "@@ -1,3 +1,14 @@\n+2019-12-12  Dmitriy Anisimkov  <anisimko@adacore.com>\n+\n+\t* libgnat/g-comlin.ads (Get_Argument): New routine similar to\n+\toriginal Get_Argument but with one more out parameter\n+\tEnd_Of_Arguments.\n+\t(Get_Arguments): Comment improved.\n+\t* libgnat/g-comlin.adb (Get_Argument): Implementation taken from\n+\toriginal Get_Argument and improved.\n+\t(Get_Argument): Calls new routine Get_Argument with additional\n+\tparameter.\n+\n 2019-12-03  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gcc-interface/utils.c (potential_alignment_gap): Delete."}, {"sha": "ec057a9d94ff67f7ae256d744e3109a8b6a5a551", "filename": "gcc/ada/libgnat/g-comlin.adb", "status": "modified", "additions": 22, "deletions": 7, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1449c89b7272739d0ec32ad7ca4c53460337633/gcc%2Fada%2Flibgnat%2Fg-comlin.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1449c89b7272739d0ec32ad7ca4c53460337633/gcc%2Fada%2Flibgnat%2Fg-comlin.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fg-comlin.adb?ref=a1449c89b7272739d0ec32ad7ca4c53460337633", "patch": "@@ -385,10 +385,25 @@ package body GNAT.Command_Line is\n    ------------------\n \n    function Get_Argument\n-     (Do_Expansion : Boolean    := False;\n+     (Do_Expansion : Boolean := False;\n       Parser       : Opt_Parser := Command_Line_Parser) return String\n    is\n+      End_Of_Args : Boolean;\n    begin\n+      return Get_Argument (Do_Expansion, Parser, End_Of_Args);\n+   end Get_Argument;\n+\n+   ------------------\n+   -- Get_Argument --\n+   ------------------\n+\n+   function Get_Argument\n+     (Do_Expansion     : Boolean    := False;\n+      Parser           : Opt_Parser := Command_Line_Parser;\n+      End_Of_Arguments : out Boolean) return String is\n+   begin\n+      End_Of_Arguments := False;\n+\n       if Parser.In_Expansion then\n          declare\n             S : constant String := Expansion (Parser.Expansion_It);\n@@ -415,6 +430,7 @@ package body GNAT.Command_Line is\n             end loop;\n \n          else\n+            End_Of_Arguments := True;\n             return String'(1 .. 0 => ' ');\n          end if;\n \n@@ -436,9 +452,11 @@ package body GNAT.Command_Line is\n       end loop;\n \n       if Parser.Current_Argument > Parser.Arg_Count then\n+         End_Of_Arguments := True;\n          return String'(1 .. 0 => ' ');\n+\n       elsif Parser.Section (Parser.Current_Argument) = 0 then\n-         return Get_Argument (Do_Expansion);\n+         return Get_Argument (Do_Expansion, Parser, End_Of_Arguments);\n       end if;\n \n       Parser.Current_Argument := Parser.Current_Argument + 1;\n@@ -451,13 +469,10 @@ package body GNAT.Command_Line is\n                       Argument (Parser, Parser.Current_Argument - 1);\n          begin\n             for Index in Arg'Range loop\n-               if Arg (Index) = '*'\n-                 or else Arg (Index) = '?'\n-                 or else Arg (Index) = '['\n-               then\n+               if Arg (Index) in '*' | '?' | '[' then\n                   Parser.In_Expansion := True;\n                   Start_Expansion (Parser.Expansion_It, Arg);\n-                  return Get_Argument (Do_Expansion, Parser);\n+                  return Get_Argument (Do_Expansion, Parser, End_Of_Arguments);\n                end if;\n             end loop;\n          end;"}, {"sha": "34feee7b96ef4b2bbbe08e2d9b19f3697a9dc9b1", "filename": "gcc/ada/libgnat/g-comlin.ads", "status": "modified", "additions": 13, "deletions": 2, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1449c89b7272739d0ec32ad7ca4c53460337633/gcc%2Fada%2Flibgnat%2Fg-comlin.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1449c89b7272739d0ec32ad7ca4c53460337633/gcc%2Fada%2Flibgnat%2Fg-comlin.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fg-comlin.ads?ref=a1449c89b7272739d0ec32ad7ca4c53460337633", "patch": "@@ -462,8 +462,9 @@ package GNAT.Command_Line is\n    function Get_Argument\n      (Do_Expansion : Boolean := False;\n       Parser       : Opt_Parser := Command_Line_Parser) return String;\n-   --  Returns the next element on the command line that is not a switch.  This\n-   --  function should not be called before Getopt has returned ASCII.NUL.\n+   --  Returns the next element on the command line that is not a switch. This\n+   --  function should be called either after Getopt has returned ASCII.NUL or\n+   --  after Getopt procedure call.\n    --\n    --  If Do_Expansion is True, then the parameter on the command line will\n    --  be considered as a filename with wildcards, and will be expanded. The\n@@ -472,6 +473,16 @@ package GNAT.Command_Line is\n    --  When there are no more arguments on the command line, this function\n    --  returns an empty string.\n \n+   function Get_Argument\n+     (Do_Expansion     : Boolean    := False;\n+      Parser           : Opt_Parser := Command_Line_Parser;\n+      End_Of_Arguments : out Boolean) return String;\n+   --  The same as above but able to distinguish empty element in argument list\n+   --  from end of arguments.\n+   --  End_Of_Arguments is True if the end of the command line has been reached\n+   --  (i.e. all available arguments have been returned by previous calls to\n+   --  Get_Argument).\n+\n    function Parameter\n      (Parser : Opt_Parser := Command_Line_Parser) return String;\n    --  Returns parameter associated with the last switch returned by Getopt."}]}