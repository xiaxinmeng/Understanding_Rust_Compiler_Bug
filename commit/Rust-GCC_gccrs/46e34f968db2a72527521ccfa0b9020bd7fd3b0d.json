{"sha": "46e34f968db2a72527521ccfa0b9020bd7fd3b0d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDZlMzRmOTY4ZGIyYTcyNTI3NTIxY2NmYTBiOTAyMGJkN2ZkM2IwZA==", "commit": {"author": {"name": "Ziemowit Laski", "email": "zlaski@apple.com", "date": "2004-08-12T01:53:01Z"}, "committer": {"name": "Ziemowit Laski", "email": "zlaski@gcc.gnu.org", "date": "2004-08-12T01:53:01Z"}, "message": "(This patch is part of merge of objc-improvements-branch into mainline.)\n\n[gcc/ChangeLog]\n2004-08-12  Ziemowit Laski  <zlaski@apple.com>\n\n        (This patch is part of merge of objc-improvements-branch\n        into mainline.)\n\n        * doc/frontends.texi: Mention Objective-C++ in addition to\n        Objective-C.\n        * doc/install.texi: Add 'obj-c++' to list of configurable\n        languages.\n        * doc/invoke.texi: Rename Objective-C option headings to\n        indicate they also apply to Objective-C++.  List file\n        extensions for Objective-C++ sources.  Mention that\n        ObjC and ObjC++ compilations may also use C and C++ options,\n        respectively.  Point users to doc/standards.texi for\n        further info on ObjC and ObjC++.\n        * doc/sourcebuild.texi: Mention the objcp/ directory and\n        the Objective-C++ sources it contains.\n        * doc/standards.texi: Update link to Apple ObjC site;\n        add link to gcc readings.html WWW doc.\n\nFrom-SVN: r85842", "tree": {"sha": "da309a6fc0ad80cf1a4233e8a72bfe75c605a083", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/da309a6fc0ad80cf1a4233e8a72bfe75c605a083"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/46e34f968db2a72527521ccfa0b9020bd7fd3b0d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/46e34f968db2a72527521ccfa0b9020bd7fd3b0d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/46e34f968db2a72527521ccfa0b9020bd7fd3b0d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/46e34f968db2a72527521ccfa0b9020bd7fd3b0d/comments", "author": null, "committer": null, "parents": [{"sha": "539599c198f2f5e445744221058af9d8a7f96a02", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/539599c198f2f5e445744221058af9d8a7f96a02", "html_url": "https://github.com/Rust-GCC/gccrs/commit/539599c198f2f5e445744221058af9d8a7f96a02"}], "stats": {"total": 141, "additions": 95, "deletions": 46}, "files": [{"sha": "2a85e9c37bfc015efa15c2a0d5e58ec1ab1a4721", "filename": "gcc/ChangeLog", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/46e34f968db2a72527521ccfa0b9020bd7fd3b0d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/46e34f968db2a72527521ccfa0b9020bd7fd3b0d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=46e34f968db2a72527521ccfa0b9020bd7fd3b0d", "patch": "@@ -1,3 +1,23 @@\n+2004-08-12  Ziemowit Laski  <zlaski@apple.com>\n+\n+\t(This patch is part of merge of objc-improvements-branch\n+\tinto mainline.)\n+\n+\t* doc/frontends.texi: Mention Objective-C++ in addition to\n+\tObjective-C.\n+\t* doc/install.texi: Add 'obj-c++' to list of configurable\n+\tlanguages.\n+\t* doc/invoke.texi: Rename Objective-C option headings to\n+\tindicate they also apply to Objective-C++.  List file\n+\textensions for Objective-C++ sources.  Mention that\n+\tObjC and ObjC++ compilations may also use C and C++ options,\n+\trespectively.  Point users to doc/standards.texi for\n+\tfurther info on ObjC and ObjC++.\n+\t* doc/sourcebuild.texi: Mention the objcp/ directory and\n+\tthe Objective-C++ sources it contains.\n+\t* doc/standards.texi: Update link to Apple ObjC site;\n+\tadd link to gcc readings.html WWW doc.\n+\n 2004-08-12  Alan Modra  <amodra@bigpond.net.au>\n \n \t* config/rs6000/rs6000.c (function_arg_padding): Revert 2004-07-28"}, {"sha": "457a5e140ed82257448452bfb5ebcf9b1e33b2fe", "filename": "gcc/doc/frontends.texi", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/46e34f968db2a72527521ccfa0b9020bd7fd3b0d/gcc%2Fdoc%2Ffrontends.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/46e34f968db2a72527521ccfa0b9020bd7fd3b0d/gcc%2Fdoc%2Ffrontends.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Ffrontends.texi?ref=46e34f968db2a72527521ccfa0b9020bd7fd3b0d", "patch": "@@ -13,10 +13,12 @@\n @cindex Fortran\n @cindex Java\n @cindex Objective-C\n+@cindex Objective-C++\n @cindex treelang\n GCC stands for ``GNU Compiler Collection''.  GCC is an integrated\n distribution of compilers for several major programming languages.  These\n-languages currently include C, C++, Objective-C, Java, Fortran, and Ada.\n+languages currently include C, C++, Objective-C, Objective-C++, Java,\n+Fortran, and Ada.\n \n The abbreviation @dfn{GCC} has multiple meanings in common use.  The\n current official meaning is ``GNU Compiler Collection'', which refers\n@@ -57,5 +59,5 @@ have been implemented as ``preprocessors'' which emit another high\n level language such as C@.  None of the compilers included in GCC are\n implemented this way; they all generate machine code directly.  This\n sort of preprocessor should not be confused with the @dfn{C\n-preprocessor}, which is an integral feature of the C, C++, and\n-Objective-C languages.\n+preprocessor}, which is an integral feature of the C, C++, Objective-C\n+and Objective-C++ languages."}, {"sha": "a6bf5e986c7783f82e8c32c2ccfef31bcbfb0cc9", "filename": "gcc/doc/install.texi", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/46e34f968db2a72527521ccfa0b9020bd7fd3b0d/gcc%2Fdoc%2Finstall.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/46e34f968db2a72527521ccfa0b9020bd7fd3b0d/gcc%2Fdoc%2Finstall.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finstall.texi?ref=46e34f968db2a72527521ccfa0b9020bd7fd3b0d", "patch": "@@ -1038,7 +1038,7 @@ grep language= */config-lang.in\n @end smallexample\n Currently, you can use any of the following:\n @code{ada}, @code{c}, @code{c++}, @code{f77}, @code{f95}, @code{java},\n-@code{objc}.\n+@code{objc}, @code{obj-c++}.\n Building the Ada compiler has special requirements, see below.@*\n If you do not pass this flag, all languages available in the @file{gcc}\n sub-tree will be configured.  Re-defining @code{LANGUAGES} when calling"}, {"sha": "bc76689bc5661ce0ac3967593d0c211c6a5c160e", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 52, "deletions": 30, "changes": 82, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/46e34f968db2a72527521ccfa0b9020bd7fd3b0d/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/46e34f968db2a72527521ccfa0b9020bd7fd3b0d/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=46e34f968db2a72527521ccfa0b9020bd7fd3b0d", "patch": "@@ -121,7 +121,8 @@ only one of these two forms, whichever one is not the default.\n * Invoking G++::\tCompiling C++ programs.\n * C Dialect Options::   Controlling the variant of C language compiled.\n * C++ Dialect Options:: Variations on C++.\n-* Objective-C Dialect Options:: Variations on Objective-C.\n+* Objective-C and Objective-C++ Dialect Options:: Variations on Objective-C\n+                        and Objective-C++.\n * Language Independent Options:: Controlling how diagnostics should be\n                         formatted.\n * Warning Options::     How picky should the compiler be?\n@@ -190,8 +191,9 @@ in the following sections.\n -Woverloaded-virtual  -Wno-pmf-conversions @gol\n -Wsign-promo  -Wsynth}\n \n-@item Objective-C Language Options\n-@xref{Objective-C Dialect Options,,Options Controlling Objective-C Dialect}.\n+@item Objective-C and Objective-C++ Language Options\n+@xref{Objective-C and Objective-C++ Dialect Options,,Options Controlling\n+Objective-C and Objective-C++ Dialects}.\n @gccoptlist{\n -fconstant-string-class=@var{class-name} @gol\n -fgnu-runtime  -fnext-runtime @gol\n@@ -710,7 +712,8 @@ See S/390 and zSeries Options.\n                         or preprocessed source.\n * C Dialect Options::   Controlling the variant of C language compiled.\n * C++ Dialect Options:: Variations on C++.\n-* Objective-C Dialect Options:: Variations on Objective-C.\n+* Objective-C and Objective-C++ Dialect Options:: Variations on Objective-C\n+                        and Objective-C++.\n * Language Independent Options:: Controlling how diagnostics should be\n                         formatted.\n * Warning Options::     How picky should the compiler be?\n@@ -752,14 +755,24 @@ C source code which should not be preprocessed.\n C++ source code which should not be preprocessed.\n \n @item @var{file}.m\n-Objective-C source code.  Note that you must link with the library\n-@file{libobjc.a} to make an Objective-C program work.\n+Objective-C source code.  Note that you must link with the @file{libobjc}\n+library to make an Objective-C program work.\n \n @item @var{file}.mi\n Objective-C source code which should not be preprocessed.\n \n+@item @var{file}.mm\n+@itemx @var{file}.M\n+Objective-C++ source code.  Note that you must link with the @file{libobjc}\n+library to make an Objective-C++ program work.  Note that @samp{.M} refers\n+to a literal capital M@.\n+\n+@item @var{file}.mii\n+Objective-C++ source code which should not be preprocessed.\n+\n @item @var{file}.h\n-C or C++ header file to be turned into a precompiled header.\n+C, C++, Objective-C or Objective-C++ header file to be turned into a\n+precompiled header.\n \n @item @var{file}.cc\n @itemx @var{file}.cp\n@@ -838,9 +851,10 @@ Specify explicitly the @var{language} for the following input files\n name suffix).  This option applies to all following input files until\n the next @option{-x} option.  Possible values for @var{language} are:\n @smallexample\n-c  c-header  cpp-output\n+c  c-header  c-cpp-output\n c++  c++-header  c++-cpp-output\n-objective-c  objective-c-header  objc-cpp-output\n+objective-c  objective-c-header  objective-c-cpp-output\n+objective-c++ objective-c++-header objective-c++-cpp-output\n assembler  assembler-with-cpp\n ada\n f77  f77-cpp-input  ratfor\n@@ -1011,7 +1025,8 @@ explanations of options that are meaningful only for C++ programs.\n @cindex options, dialect\n \n The following options control the dialect of C (or languages derived\n-from C, such as C++ and Objective-C) that the compiler accepts:\n+from C, such as C++, Objective-C and Objective-C++) that the compiler\n+accepts:\n \n @table @gcctabopt\n @cindex ANSI support\n@@ -1767,31 +1782,37 @@ In this example, G++ will synthesize a default @samp{A& operator =\n (const A&);}, while cfront will use the user-defined @samp{operator =}.\n @end table\n \n-@node Objective-C Dialect Options\n-@section Options Controlling Objective-C Dialect\n+@node Objective-C and Objective-C++ Dialect Options\n+@section Options Controlling Objective-C and Objective-C++ Dialects\n \n-@cindex compiler options, Objective-C\n-@cindex Objective-C options, command line\n-@cindex options, Objective-C\n-(NOTE: This manual does not describe the Objective-C language itself.  See\n-@w{@uref{http://gcc.gnu.org/readings.html}} for references.)\n+@cindex compiler options, Objective-C and Objective-C++\n+@cindex Objective-C and Objective-C++ options, command line\n+@cindex options, Objective-C and Objective-C++\n+(NOTE: This manual does not describe the Objective-C and Objective-C++\n+languages themselves.  See @xref{Standards,,Language Standards\n+Supported by GCC}, for references.)\n \n This section describes the command-line options that are only meaningful\n-for Objective-C programs, but you can also use most of the GNU compiler\n-options regardless of what language your program is in.  For example,\n-you might compile a file @code{some_class.m} like this:\n+for Objective-C and Objective-C++ programs, but you can also use most of\n+the language-independent GNU compiler options.\n+For example, you might compile a file @code{some_class.m} like this:\n \n @smallexample\n gcc -g -fgnu-runtime -O -c some_class.m\n @end smallexample\n \n @noindent\n In this example, @option{-fgnu-runtime} is an option meant only for\n-Objective-C programs; you can use the other options with any language\n-supported by GCC@.\n+Objective-C and Objective-C++ programs; you can use the other options with\n+any language supported by GCC@.\n+\n+Note that since Objective-C is an extension of the C language, Objective-C\n+compilations may also use options specific to the C front-end (e.g., \n+@option{-Wtraditional}).  Similarly, Objective-C++ compilations may use\n+C++-specific options (e.g., @option{-Wabi}).\n \n Here is a list of options that are @emph{only} for compiling Objective-C\n-programs:\n+and Objective-C++ programs:\n \n @table @gcctabopt\n @item -fconstant-string-class=@var{class-name}\n@@ -1820,8 +1841,8 @@ used.\n @opindex fno-nil-receivers\n Assume that all Objective-C message dispatches (e.g.,\n @code{[receiver message:arg]}) in this translation unit ensure that the receiver\n-is not @code{nil}.  This allows for more efficient entry points in the runtime to be\n-used.  Currently, this option is only available in conjunction with\n+is not @code{nil}.  This allows for more efficient entry points in the runtime\n+to be used.  Currently, this option is only available in conjunction with\n the NeXT runtime on Mac OS X 10.3 and later.\n \n @item -fobjc-exceptions\n@@ -2045,7 +2066,8 @@ two forms, whichever is not the default.\n \n The following options control the amount and kinds of warnings produced\n by GCC; for further, language-specific options also refer to\n-@ref{C++ Dialect Options} and @ref{Objective-C Dialect Options}.\n+@ref{C++ Dialect Options} and @ref{Objective-C and Objective-C++ Dialect\n+Options}.\n \n @table @gcctabopt\n @cindex syntax checking\n@@ -2210,7 +2232,7 @@ requiring a non-null value by the @code{nonnull} function attribute.\n @option{-Wnonnull} is included in @option{-Wall} and @option{-Wformat}.  It\n can be disabled with the @option{-Wno-nonnull} option.\n \n-@item -Winit-self @r{(C, C++, and Objective-C only)}\n+@item -Winit-self @r{(C, C++, Objective-C and Objective-C++ only)}\n @opindex Winit-self\n Warn about uninitialized variables which are initialized with themselves.\n Note this option can only be used with the @option{-Wuninitialized} option,\n@@ -2260,7 +2282,7 @@ int a[2][2] = @{ 0, 1, 2, 3 @};\n int b[2][2] = @{ @{ 0, 1 @}, @{ 2, 3 @} @};\n @end smallexample\n \n-@item -Wmissing-include-dirs @r{(C, C++, and Objective-C only)}\n+@item -Wmissing-include-dirs @r{(C, C++, Objective-C and Objective-C++ only)}\n @opindex Wmissing-include-dirs\n Warn if a user-supplied include directory does not exist.\n \n@@ -2554,7 +2576,7 @@ warnings about constructions that some users consider questionable, and\n that are easy to avoid (or modify to prevent the warning), even in\n conjunction with macros.  This also enables some language-specific\n warnings described in @ref{C++ Dialect Options} and\n-@ref{Objective-C Dialect Options}.\n+@ref{Objective-C and Objective-C++ Dialect Options}.\n @end table\n \n The following @option{-W@dots{}} options are not implied by @option{-Wall}.\n@@ -5491,7 +5513,7 @@ and searches several directories.\n @item -lobjc\n @opindex lobjc\n You need this special case of the @option{-l} option in order to\n-link an Objective-C program.\n+link an Objective-C or Objective-C++ program.\n \n @item -nostartfiles\n @opindex nostartfiles"}, {"sha": "2d2ef7658b7500e762d5b49769df4f4e7329f0a9", "filename": "gcc/doc/sourcebuild.texi", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/46e34f968db2a72527521ccfa0b9020bd7fd3b0d/gcc%2Fdoc%2Fsourcebuild.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/46e34f968db2a72527521ccfa0b9020bd7fd3b0d/gcc%2Fdoc%2Fsourcebuild.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fsourcebuild.texi?ref=46e34f968db2a72527521ccfa0b9020bd7fd3b0d", "patch": "@@ -79,7 +79,7 @@ The @code{libmudflap} library, used for instrumenting pointer and array\n dereferencing operations.\n \n @item libobjc\n-The Objective-C runtime library.\n+The Objective-C and Objective-C++ runtime library.\n \n @item libstdc++-v3\n The C++ runtime library.\n@@ -128,11 +128,11 @@ The @file{gcc} directory contains the following subdirectories:\n @item @var{language}\n Subdirectories for various languages.  Directories containing a file\n @file{config-lang.in} are language subdirectories.  The contents of\n-the subdirectories @file{cp} (for C++) and @file{objc} (for\n-Objective-C) are documented in this manual (@pxref{Passes, , Passes\n-and Files of the Compiler}); those for other languages are not.\n-@xref{Front End, , Anatomy of a Language Front End}, for details of\n-the files in these directories.\n+the subdirectories @file{cp} (for C++), @file{objc} (for Objective-C)\n+and @file{objcp} (for Objective-C++) are documented in this manual\n+(@pxref{Passes, , Passes and Files of the Compiler}); those for other\n+languages are not. @xref{Front End, , Anatomy of a Language Front End},\n+for details of the files in these directories.\n \n @item config\n Configuration files for supported architectures and operating"}, {"sha": "686d6fd2a91fee58edb898dc36f80d6db3c8d467", "filename": "gcc/doc/standards.texi", "status": "modified", "additions": 11, "deletions": 6, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/46e34f968db2a72527521ccfa0b9020bd7fd3b0d/gcc%2Fdoc%2Fstandards.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/46e34f968db2a72527521ccfa0b9020bd7fd3b0d/gcc%2Fdoc%2Fstandards.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fstandards.texi?ref=46e34f968db2a72527521ccfa0b9020bd7fd3b0d", "patch": "@@ -156,20 +156,25 @@ information concerning the history of C that is available online, see\n \n @c FIXME: details of C++ standard.\n \n-There is no formal written standard for Objective-C@.  The most\n+@cindex Objective-C\n+@cindex Objective-C++\n+\n+There is no formal written standard for Objective-C or Objective-C++@.  The most\n authoritative manual is ``Object-Oriented Programming and the\n-Objective-C Language'', available at a number of web sites\n+Objective-C Language'', available at a number of web sites:\n \n @itemize\n @item\n-@uref{http://developer.apple.com/techpubs/macosx/Cocoa/ObjectiveC/}\n-is a recent version\n+@uref{http://developer.apple.com/documentation/Cocoa/Conceptual/ObjectiveC/}\n+is a recent (and periodically updated) version;\n @item\n @uref{http://www.toodarkpark.org/computers/objc/}\n-is an older example\n+is an older example;\n @item\n @uref{http://www.gnustep.org}\n-has additional useful information\n+and\n+@uref{http://gcc.gnu.org/readings.html}\n+have additional useful information.\n @end itemize\n \n @cindex treelang"}]}