{"sha": "60de6385e1b6b764dca5e467fa2c17e8822777f1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjBkZTYzODVlMWI2Yjc2NGRjYTVlNDY3ZmEyYzE3ZTg4MjI3NzdmMQ==", "commit": {"author": {"name": "Stan Shebs", "email": "shebs@apple.com", "date": "2001-04-30T18:17:13Z"}, "committer": {"name": "Stan Shebs", "email": "shebs@gcc.gnu.org", "date": "2001-04-30T18:17:13Z"}, "message": "* invoke.texi: Add a section documenting Objective-C options.\n\nFrom-SVN: r41692", "tree": {"sha": "30ab26ac683e616e86e0a9690489e89d9e2007a6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/30ab26ac683e616e86e0a9690489e89d9e2007a6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/60de6385e1b6b764dca5e467fa2c17e8822777f1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/60de6385e1b6b764dca5e467fa2c17e8822777f1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/60de6385e1b6b764dca5e467fa2c17e8822777f1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/60de6385e1b6b764dca5e467fa2c17e8822777f1/comments", "author": null, "committer": null, "parents": [{"sha": "2458d950f4711dacfd0c517675bd7b0624d8e30d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2458d950f4711dacfd0c517675bd7b0624d8e30d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2458d950f4711dacfd0c517675bd7b0624d8e30d"}], "stats": {"total": 66, "additions": 66, "deletions": 0}, "files": [{"sha": "a5f274b05fccc28c70946dc4124d44e2aaf697b4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/60de6385e1b6b764dca5e467fa2c17e8822777f1/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/60de6385e1b6b764dca5e467fa2c17e8822777f1/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=60de6385e1b6b764dca5e467fa2c17e8822777f1", "patch": "@@ -1,3 +1,7 @@\n+2001-04-30  Stan Shebs  <shebs@apple.com>\n+\n+\t* invoke.texi: Add a section documenting Objective-C options.\n+\n 2001-04-27  Andrew Haley  <aph@cambridge.redhat.com>\n \n \t* emit-rtl.c (try_split):  Copy EH notes to sequence."}, {"sha": "2db022b856aa283e73e1c12713c7f2363eb8af54", "filename": "gcc/invoke.texi", "status": "modified", "additions": 62, "deletions": 0, "changes": 62, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/60de6385e1b6b764dca5e467fa2c17e8822777f1/gcc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/60de6385e1b6b764dca5e467fa2c17e8822777f1/gcc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Finvoke.texi?ref=60de6385e1b6b764dca5e467fa2c17e8822777f1", "patch": "@@ -115,6 +115,7 @@ only one of these two forms, whichever one is not the default.\n * Invoking G++::\tCompiling C++ programs.\n * C Dialect Options::   Controlling the variant of C language compiled.\n * C++ Dialect Options:: Variations on C++.\n+* Objective-C Dialect Options:: Variations on Objective-C.\n * Language Independent Options:: Controlling how diagnostics should be\n                         formatted.\n * Warning Options::     How picky should the compiler be?\n@@ -184,6 +185,13 @@ in the following sections.\n -Woverloaded-virtual  -Wno-pmf-conversions @gol\n -Wsign-promo  -Wsynth}\n \n+@item Objective-C Language Options\n+@xref{Objective-C Dialect Options,,Options Controlling Objective-C Dialect}.\n+@gccoptlist{\n+-fconstant-string-class=@var{class name} @gol\n+-fgnu-runtime  -fnext-runtime  -gen-decls\n+-Wno-protocol  -Wselector}\n+\n @item Language Independent Options\n @xref{Language Independent Options,,Options to Control Diagnostic Messages Formatting}.\n @gccoptlist{\n@@ -596,6 +604,7 @@ in the following sections.\n                         or preprocessed source.\n * C Dialect Options::   Controlling the variant of C language compiled.\n * C++ Dialect Options:: Variations on C++.\n+* Objective-C Dialect Options:: Variations on Objective-C.\n * Language Independent Options:: Controlling how diagnostics should be\n                         formatted.\n * Warning Options::     How picky should the compiler be?\n@@ -1541,6 +1550,59 @@ In this example, g++ will synthesize a default @samp{A& operator =\n (const A&);}, while cfront will use the user-defined @samp{operator =}.\n @end table\n \n+@node Objective-C Dialect Options\n+@section Options Controlling Objective-C Dialect\n+\n+@cindex compiler options, Objective-C\n+@cindex Objective-C options, command line\n+@cindex options, Objective-C\n+This section describes the command-line options that are only meaningful\n+for Objective-C programs; but you can also use most of the GNU compiler\n+options regardless of what language your program is in.  For example,\n+you might compile a file @code{some_class.m} like this:\n+\n+@example\n+gcc -g -fgnu-runtime -O -c some_class.m\n+@end example\n+\n+@noindent\n+In this example, only @samp{-fgnu-runtime} is an option meant only for\n+Objective-C programs; you can use the other options with any language\n+supported by GCC.\n+\n+Here is a list of options that are @emph{only} for compiling Objective-C\n+programs:\n+\n+@table @gcctabopt\n+@item -fconstant-string-class=@var{class name}\n+Use @var{class name} as the name of the class to instantiate for each\n+literal string specified with the syntax @code{@@\"...\"}.  The default\n+class name is @code{NXConstantString}.\n+\n+@item -fgnu-runtime\n+Generate object code compatible with the standard GNU Objective-C\n+runtime.  This is the default for most types of systems.\n+\n+@item -fnext-runtime\n+Generate output compatible with the NeXT runtime.  This is the default\n+for NeXT-based systems, including Darwin and Mac OS X.\n+\n+@item -gen-decls\n+Dump interface declarations for all classes seen in the source file to a\n+file named @file{@var{sourcename}.decl}.\n+\n+@item -Wno-protocol\n+Do not warn if methods required by a protocol are not implemented\n+in the class adopting it.\n+\n+@item -Wselector\n+Warn if a selector has multiple methods of different types defined.\n+\n+@c not documented because only avail via -Wp\n+@c @item -print-objc-runtime-info\n+\n+@end table\n+\n @node Language Independent Options\n @section Options to Control Diagnostic Messages Formatting\n @cindex options to control diagnostics formatting"}]}