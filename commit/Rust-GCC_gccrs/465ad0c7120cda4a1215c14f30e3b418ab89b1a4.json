{"sha": "465ad0c7120cda4a1215c14f30e3b418ab89b1a4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDY1YWQwYzcxMjBjZGE0YTEyMTVjMTRmMzBlM2I0MThhYjg5YjFhNA==", "commit": {"author": {"name": "Benjamin Kosnik", "email": "bkoz@redhat.com", "date": "2003-09-25T16:37:24Z"}, "committer": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2003-09-25T16:37:24Z"}, "message": "ctype_members.cc (ctype<wchar_t>::do_is): Fix.\n\n\n2003-09-25  Benjamin Kosnik  <bkoz@redhat.com>\n\n\t* config/locale/gnu/ctype_members.cc (ctype<wchar_t>::do_is): Fix.\n\t* config/locale/generic/ctype_members.cc: Same.\n\t* testsuite/22_locale/ctype/is/char/1.cc: Initialize mask.\n\t* testsuite/22_locale/ctype/is/wchar_t/1.cc: Same.\n\n\t* config/os/generic/ctype_inline.h: Update.\n\nFrom-SVN: r71780", "tree": {"sha": "2fac0f31f5522326e93dba0228ecf56f4a5cf306", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2fac0f31f5522326e93dba0228ecf56f4a5cf306"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/465ad0c7120cda4a1215c14f30e3b418ab89b1a4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/465ad0c7120cda4a1215c14f30e3b418ab89b1a4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/465ad0c7120cda4a1215c14f30e3b418ab89b1a4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/465ad0c7120cda4a1215c14f30e3b418ab89b1a4/comments", "author": null, "committer": null, "parents": [{"sha": "6cbaf0385b0bc1ccb27362a569ad668460c2ed2d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6cbaf0385b0bc1ccb27362a569ad668460c2ed2d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6cbaf0385b0bc1ccb27362a569ad668460c2ed2d"}], "stats": {"total": 135, "additions": 100, "deletions": 35}, "files": [{"sha": "cd6d447813f6a12efd4f99c8381410f4d53fcb8a", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/465ad0c7120cda4a1215c14f30e3b418ab89b1a4/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/465ad0c7120cda4a1215c14f30e3b418ab89b1a4/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=465ad0c7120cda4a1215c14f30e3b418ab89b1a4", "patch": "@@ -1,3 +1,12 @@\n+2003-09-25  Benjamin Kosnik  <bkoz@redhat.com>\n+\n+\t* config/locale/gnu/ctype_members.cc (ctype<wchar_t>::do_is): Fix.\n+\t* config/locale/generic/ctype_members.cc: Same.\n+\t* testsuite/22_locale/ctype/is/char/1.cc: Initialize mask.\n+\t* testsuite/22_locale/ctype/is/wchar_t/1.cc: Same.\n+\n+\t* config/os/generic/ctype_inline.h: Update.\n+\t\n 2003-09-25  Ulrich Weigand  <uweigand@de.ibm.com>\n \n \t* src/Makefile.am (version_dep): New variable."}, {"sha": "c20b98ba24d26616f7b8b9300849e5c6f9aaa1be", "filename": "libstdc++-v3/config/locale/generic/c_locale.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/465ad0c7120cda4a1215c14f30e3b418ab89b1a4/libstdc%2B%2B-v3%2Fconfig%2Flocale%2Fgeneric%2Fc_locale.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/465ad0c7120cda4a1215c14f30e3b418ab89b1a4/libstdc%2B%2B-v3%2Fconfig%2Flocale%2Fgeneric%2Fc_locale.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Flocale%2Fgeneric%2Fc_locale.h?ref=465ad0c7120cda4a1215c14f30e3b418ab89b1a4", "patch": "@@ -56,7 +56,7 @@ namespace std\n   template<typename _Tv>\n     int\n     __convert_from_v(char* __out, \n-\t\t     const int __size __attribute__ ((__unused__)),\n+\t\t     const int __size __attribute__((__unused__)),\n \t\t     const char* __fmt,\n \t\t     _Tv __v, const __c_locale&, int __prec = -1)\n     {"}, {"sha": "814672a4a1ee3d4ca1e75f2aa8ed8d36cf9d49cc", "filename": "libstdc++-v3/config/locale/generic/ctype_members.cc", "status": "modified", "additions": 30, "deletions": 6, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/465ad0c7120cda4a1215c14f30e3b418ab89b1a4/libstdc%2B%2B-v3%2Fconfig%2Flocale%2Fgeneric%2Fctype_members.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/465ad0c7120cda4a1215c14f30e3b418ab89b1a4/libstdc%2B%2B-v3%2Fconfig%2Flocale%2Fgeneric%2Fctype_members.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Flocale%2Fgeneric%2Fctype_members.cc?ref=465ad0c7120cda4a1215c14f30e3b418ab89b1a4", "patch": "@@ -1,6 +1,6 @@\n // std::ctype implementation details, generic version -*- C++ -*-\n \n-// Copyright (C) 2001, 2002 Free Software Foundation, Inc.\n+// Copyright (C) 2001, 2002, 2003 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -126,15 +126,39 @@ namespace std\n   bool\n   ctype<wchar_t>::\n   do_is(mask __m, char_type __c) const\n-  { return static_cast<bool>(iswctype(__c, _M_convert_to_wmask(__m))); }\n+  { \n+    bool __ret = true;\n+    bool __match_any = false;\n+    const size_t __bitmasksize = 10; \n+    for (size_t __bitcur = 0; __bitcur <= __bitmasksize; ++__bitcur)\n+      {\n+\tmask __bit = static_cast<mask>(1 << __bitcur);\n+\tif (__m & __bit)\n+\t  {\n+\t    __match_any = true;\n+\t    __ret &= iswctype(__c, _M_convert_to_wmask(__bit));\n+\t  }\n+      }\n+    return __ret & __match_any;    \n+  }\n   \n   const wchar_t* \n   ctype<wchar_t>::\n-  do_is(const wchar_t* __lo, const wchar_t* __hi, mask* __m) const\n+  do_is(const wchar_t* __lo, const wchar_t* __hi, mask* __vec) const\n   {\n-    while (__lo < __hi && !this->do_is(*__m, *__lo))\n-      ++__lo;\n-    return __lo;\n+    for (;__lo < __hi; ++__vec, ++__lo)\n+      {\n+\tconst size_t __bitmasksize = 10; \n+\tmask __m = 0;\n+\tfor (size_t __bitcur = 0; __bitcur <= __bitmasksize; ++__bitcur)\n+\t  { \n+\t    mask __bit = static_cast<mask>(1 << __bitcur);\n+\t    if (iswctype(*__lo, _M_convert_to_wmask(__bit)))\n+\t      __m |= __bit;\n+\t  }\n+\t*__vec = __m;\n+      }\n+    return __hi;\n   }\n   \n   const wchar_t* "}, {"sha": "7ab4f196cb80fd2edd181e2a9bf78831806c24a9", "filename": "libstdc++-v3/config/locale/gnu/ctype_members.cc", "status": "modified", "additions": 35, "deletions": 8, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/465ad0c7120cda4a1215c14f30e3b418ab89b1a4/libstdc%2B%2B-v3%2Fconfig%2Flocale%2Fgnu%2Fctype_members.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/465ad0c7120cda4a1215c14f30e3b418ab89b1a4/libstdc%2B%2B-v3%2Fconfig%2Flocale%2Fgnu%2Fctype_members.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Flocale%2Fgnu%2Fctype_members.cc?ref=465ad0c7120cda4a1215c14f30e3b418ab89b1a4", "patch": "@@ -1,6 +1,6 @@\n // std::ctype implementation details, GNU version -*- C++ -*-\n \n-// Copyright (C) 2001, 2002 Free Software Foundation, Inc.\n+// Copyright (C) 2001, 2002, 2003 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -129,19 +129,46 @@ namespace std\n \n   bool\n   ctype<wchar_t>::\n-  do_is(mask __m, char_type __c) const\n+  do_is(mask __m, wchar_t __c) const\n   { \n-    return static_cast<bool>(__iswctype_l(__c, _M_convert_to_wmask(__m), \n-\t\t\t\t\t  _M_c_locale_ctype)); \n+    // Highest bitmask in ctype_base == 10, but extra in \"C\"\n+    // library for blank.\n+    bool __ret = true;\n+    bool __match_any = false;\n+    const size_t __bitmasksize = 11; \n+    for (size_t __bitcur = 0; __bitcur <= __bitmasksize; ++__bitcur)\n+      {\n+\tmask __bit = static_cast<mask>(_ISbit(__bitcur));\n+\tif (__m & __bit)\n+\t  {\n+\t    __match_any = true;\n+\t    __ret &= __iswctype_l(__c, _M_convert_to_wmask(__bit), \n+\t\t\t\t  _M_c_locale_ctype); \n+\t  }\n+      }\n+    return __ret & __match_any;    \n   }\n   \n   const wchar_t* \n   ctype<wchar_t>::\n-  do_is(const wchar_t* __lo, const wchar_t* __hi, mask* __m) const\n+  do_is(const wchar_t* __lo, const wchar_t* __hi, mask* __vec) const\n   {\n-    while (__lo < __hi && !this->do_is(*__m, *__lo))\n-      ++__lo;\n-    return __lo;\n+    for (;__lo < __hi; ++__vec, ++__lo)\n+      {\n+\t// Highest bitmask in ctype_base == 10, but extra in \"C\"\n+\t// library for blank.\n+\tconst size_t __bitmasksize = 11; \n+\tmask __m = 0;\n+\tfor (size_t __bitcur = 0; __bitcur <= __bitmasksize; ++__bitcur)\n+\t  { \n+\t    mask __bit = static_cast<mask>(_ISbit(__bitcur));\n+\t    if (__iswctype_l(*__lo, _M_convert_to_wmask(__bit), \n+\t\t\t     _M_c_locale_ctype))\n+\t      __m |= __bit;\n+\t  }\n+\t*__vec = __m;\n+      }\n+    return __hi;\n   }\n   \n   const wchar_t* "}, {"sha": "0da0c7ccfb58621c00f7c8ffc03097d3acf0c0e8", "filename": "libstdc++-v3/config/os/generic/ctype_inline.h", "status": "modified", "additions": 9, "deletions": 7, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/465ad0c7120cda4a1215c14f30e3b418ab89b1a4/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fgeneric%2Fctype_inline.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/465ad0c7120cda4a1215c14f30e3b418ab89b1a4/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fgeneric%2Fctype_inline.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fgeneric%2Fctype_inline.h?ref=465ad0c7120cda4a1215c14f30e3b418ab89b1a4", "patch": "@@ -50,13 +50,15 @@\n     else\n       {\n \tbool __ret = true;\n-\tconst int __bitmasksize = 11; \n-\tint __bitcur = 0; // Lowest bitmask in ctype_base == 0\n-\tfor (;__ret && __bitcur < __bitmasksize; ++__bitcur)\n+\tbool __any_match = false;\n+\tconst size_t __bitmasksize = 10; \n+\tsize_t __bitcur = 0; // Lowest bitmask in ctype_base == 0\n+\tfor (;__ret && __bitcur <= __bitmasksize; ++__bitcur)\n \t  {\n \t    mask __bit = static_cast<mask>(1 << __bitcur);\n \t    if (__m & __bit)\n \t      {\n+\t\t__any_match = true;\n \t\tbool __testis;\n \t\tswitch (__bit)\n \t\t  {\n@@ -100,7 +102,7 @@\n \t\t__ret &= __testis;\n \t      }\n \t  }\n-\treturn __ret;\n+\treturn __ret & __any_match;\n       }\n   }\n    \n@@ -114,13 +116,13 @@\n     else\n       {\n \t// Highest bitmask in ctype_base == 10.\n-\tconst int __bitmasksize = 11; \n+\tconst size_t __bitmasksize = 10; \n \tfor (;__low < __high; ++__vec, ++__low)\n \t  {\n \t    mask __m = 0;\n \t    // Lowest bitmask in ctype_base == 0\n-\t    int __i = 0; \n-\t    for (;__i < __bitmasksize; ++__i)\n+\t    size_t __i = 0; \n+\t    for (;__i <= __bitmasksize; ++__i)\n \t      {\n \t\tmask __bit = static_cast<mask>(1 << __i);\n \t\tif (this->is(__bit, *__low))"}, {"sha": "4900665eb5554fe62a9f65b2217d973492d86676", "filename": "libstdc++-v3/testsuite/22_locale/ctype/is/char/1.cc", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/465ad0c7120cda4a1215c14f30e3b418ab89b1a4/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fctype%2Fis%2Fchar%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/465ad0c7120cda4a1215c14f30e3b418ab89b1a4/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fctype%2Fis%2Fchar%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fctype%2Fis%2Fchar%2F1.cc?ref=465ad0c7120cda4a1215c14f30e3b418ab89b1a4", "patch": "@@ -97,19 +97,17 @@ void test01()\n   const char_type* cc2 = NULL;\n \n   cc0 = strlit00;\n-  m01[0] = m00;\n-  m01[1] = m00;\n-  m01[2] = m00;\n+  for (std::size_t i = 0; i < 3; ++i)\n+    m01[i] = m00;\n   cc1 = gctype.is(cc0, cc0, m01);\n   VERIFY( cc1 == strlit00 );\n   VERIFY( m01[0] == m00 );\n   VERIFY( m01[1] == m00 );\n   VERIFY( m01[2] == m00 );\n \n   cc0 = strlit00;\n-  m01[0] = m00;\n-  m01[1] = m00;\n-  m01[2] = m00;\n+  for (std::size_t i = 0; i < 3; ++i)\n+    m01[i] = m00;\n   cc2 = gctype.is(cc0, cc0 + 3, m01);\n   VERIFY( cc2 == strlit00 + 3);\n   VERIFY( m01[0] != m00 );\n@@ -120,6 +118,8 @@ void test01()\n   VERIFY( gctype.is(m01[2], cc0[2]) );\n \n   cc0 = strlit01;\n+  for (std::size_t i = 0; i < 13; ++i)\n+    m02[i] = m00;\n   cc1 = gctype.is(cc0, cc0 + 13, m02);\n   VERIFY( cc1 == strlit01 + 13);\n   VERIFY( m02[6] != m00 );"}, {"sha": "48cd849d6229161486db4df219b87dc869c34585", "filename": "libstdc++-v3/testsuite/22_locale/ctype/is/wchar_t/1.cc", "status": "modified", "additions": 10, "deletions": 7, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/465ad0c7120cda4a1215c14f30e3b418ab89b1a4/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fctype%2Fis%2Fwchar_t%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/465ad0c7120cda4a1215c14f30e3b418ab89b1a4/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fctype%2Fis%2Fwchar_t%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fctype%2Fis%2Fwchar_t%2F1.cc?ref=465ad0c7120cda4a1215c14f30e3b418ab89b1a4", "patch": "@@ -94,30 +94,34 @@ void test01()\n   std::ctype_base::mask m02[13];\n   const char_type* cc0 = strlit00;\n   const char_type* cc1 = NULL;\n+  const char_type* cc2 = NULL;\n \n   cc0 = strlit00;\n-  m01[0] = m00;\n-  m01[1] = m00;\n-  m01[2] = m00;\n+  for (std::size_t i = 0; i < 3; ++i)\n+    m01[i] = m00;\n   cc1 = gctype.is(cc0, cc0, m01);\n   VERIFY( cc1 == strlit00 );\n   VERIFY( m01[0] == m00 );\n   VERIFY( m01[1] == m00 );\n   VERIFY( m01[2] == m00 );\n \n-#if 0\n+  cc0 = strlit00;\n+  for (std::size_t i = 0; i < 3; ++i)\n+    m01[i] = m00;\n+  cc2 = gctype.is(cc0, cc0 + 3, m01);\n+  VERIFY( cc2 == strlit00 + 3);\n   VERIFY( m01[0] != m00 );\n   VERIFY( m01[1] != m00 );\n   VERIFY( m01[2] != m00 );\n   VERIFY( gctype.is(m01[0], cc0[0]) );\n   VERIFY( gctype.is(m01[1], cc0[1]) );\n   VERIFY( gctype.is(m01[2], cc0[2]) );\n-#endif\n \n   cc0 = strlit01;\n+  for (std::size_t i = 0; i < 13; ++i)\n+    m02[i] = m00;\n   cc1 = gctype.is(cc0, cc0 + 13, m02);\n   VERIFY( cc1 == strlit01 + 13);\n-#if 0\n   VERIFY( m02[6] != m00 );\n   VERIFY( m02[7] != m00 );\n   VERIFY( m02[8] != m00 );\n@@ -131,7 +135,6 @@ void test01()\n   VERIFY( gctype.is(m02[6], cc0[6]) );\n   VERIFY( gctype.is(m02[7], cc0[7]) );\n   VERIFY( gctype.is(m02[8], cc0[8]) );\n-#endif\n }\n \n int main() "}]}