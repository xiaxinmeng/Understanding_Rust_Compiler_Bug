{"sha": "16b2cafd0088500dc098121ed6d1aa622f1dc8a5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTZiMmNhZmQwMDg4NTAwZGMwOTgxMjFlZDZkMWFhNjIyZjFkYzhhNQ==", "commit": {"author": {"name": "Maxim Kuvyrkov", "email": "maxim.kuvyrkov@linaro.org", "date": "2017-06-16T09:30:52Z"}, "committer": {"name": "Maxim Kuvyrkov", "email": "mkuvyrkov@gcc.gnu.org", "date": "2017-06-16T09:30:52Z"}, "message": "Enable -fprefetch-loop-arrays at given optimization level.\n\n\t* config/aarch64/aarch64.c (aarch64_override_options_internal):\n\tSet flag_prefetch_loop_arrays according to tuning data.\n\nChange-Id: Id41411e671e0a55dc7268e0ad0a4e8ff1421c90a\n\nFrom-SVN: r249241", "tree": {"sha": "66c928fe285012cb89034dfe86d525108ff01ac2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/66c928fe285012cb89034dfe86d525108ff01ac2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/16b2cafd0088500dc098121ed6d1aa622f1dc8a5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/16b2cafd0088500dc098121ed6d1aa622f1dc8a5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/16b2cafd0088500dc098121ed6d1aa622f1dc8a5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/16b2cafd0088500dc098121ed6d1aa622f1dc8a5/comments", "author": {"login": "maxim-kuvyrkov", "id": 12545699, "node_id": "MDQ6VXNlcjEyNTQ1Njk5", "avatar_url": "https://avatars.githubusercontent.com/u/12545699?v=4", "gravatar_id": "", "url": "https://api.github.com/users/maxim-kuvyrkov", "html_url": "https://github.com/maxim-kuvyrkov", "followers_url": "https://api.github.com/users/maxim-kuvyrkov/followers", "following_url": "https://api.github.com/users/maxim-kuvyrkov/following{/other_user}", "gists_url": "https://api.github.com/users/maxim-kuvyrkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/maxim-kuvyrkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/maxim-kuvyrkov/subscriptions", "organizations_url": "https://api.github.com/users/maxim-kuvyrkov/orgs", "repos_url": "https://api.github.com/users/maxim-kuvyrkov/repos", "events_url": "https://api.github.com/users/maxim-kuvyrkov/events{/privacy}", "received_events_url": "https://api.github.com/users/maxim-kuvyrkov/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "9d2c6e2eb72324b10160ce1117a8ab600be94bad", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9d2c6e2eb72324b10160ce1117a8ab600be94bad", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9d2c6e2eb72324b10160ce1117a8ab600be94bad"}], "stats": {"total": 27, "additions": 23, "deletions": 4}, "files": [{"sha": "0ed2ac1373cc1da932f23cd1cd0018e59d0ae057", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16b2cafd0088500dc098121ed6d1aa622f1dc8a5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16b2cafd0088500dc098121ed6d1aa622f1dc8a5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=16b2cafd0088500dc098121ed6d1aa622f1dc8a5", "patch": "@@ -1,3 +1,8 @@\n+2017-06-16  Maxim Kuvyrkov  <maxim.kuvyrkov@linaro.org>\n+\n+        * config/aarch64/aarch64.c (aarch64_override_options_internal):\n+        Set flag_prefetch_loop_arrays according to tuning data.\n+\n 2017-06-16  Maxim Kuvyrkov  <maxim.kuvyrkov@linaro.org>\n \n         * config/aarch64/aarch64-protos.h (struct cpu_prefetch_tune):"}, {"sha": "bfe44a75e12fe1213c1baafb56f8333a30466bc5", "filename": "gcc/config/aarch64/aarch64-protos.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16b2cafd0088500dc098121ed6d1aa622f1dc8a5/gcc%2Fconfig%2Faarch64%2Faarch64-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16b2cafd0088500dc098121ed6d1aa622f1dc8a5/gcc%2Fconfig%2Faarch64%2Faarch64-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64-protos.h?ref=16b2cafd0088500dc098121ed6d1aa622f1dc8a5", "patch": "@@ -210,6 +210,7 @@ struct cpu_prefetch_tune\n   const int l1_cache_size;\n   const int l1_cache_line_size;\n   const int l2_cache_size;\n+  const int default_opt_level;\n };\n \n struct tune_params"}, {"sha": "324a0f1fea5bee8bf2255c94f51b5697c1a5af64", "filename": "gcc/config/aarch64/aarch64.c", "status": "modified", "additions": 17, "deletions": 4, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16b2cafd0088500dc098121ed6d1aa622f1dc8a5/gcc%2Fconfig%2Faarch64%2Faarch64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16b2cafd0088500dc098121ed6d1aa622f1dc8a5/gcc%2Fconfig%2Faarch64%2Faarch64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64.c?ref=16b2cafd0088500dc098121ed6d1aa622f1dc8a5", "patch": "@@ -532,31 +532,35 @@ static const cpu_prefetch_tune generic_prefetch_tune =\n   0,\t\t\t/* num_slots  */\n   -1,\t\t\t/* l1_cache_size  */\n   -1,\t\t\t/* l1_cache_line_size  */\n-  -1\t\t\t/* l2_cache_size  */\n+  -1,\t\t\t/* l2_cache_size  */\n+  -1\t\t\t/* default_opt_level  */\n };\n \n static const cpu_prefetch_tune exynosm1_prefetch_tune =\n {\n   0,\t\t\t/* num_slots  */\n   -1,\t\t\t/* l1_cache_size  */\n   64,\t\t\t/* l1_cache_line_size  */\n-  -1\t\t\t/* l2_cache_size  */\n+  -1,\t\t\t/* l2_cache_size  */\n+  -1\t\t\t/* default_opt_level  */\n };\n \n static const cpu_prefetch_tune qdf24xx_prefetch_tune =\n {\n   0,\t\t\t/* num_slots  */\n   -1,\t\t\t/* l1_cache_size  */\n   64,\t\t\t/* l1_cache_line_size  */\n-  -1\t\t\t/* l2_cache_size  */\n+  -1,\t\t\t/* l2_cache_size  */\n+  -1\t\t\t/* default_opt_level  */\n };\n \n static const cpu_prefetch_tune thunderx2t99_prefetch_tune =\n {\n   0,\t\t\t/* num_slots  */\n   -1,\t\t\t/* l1_cache_size  */\n   64,\t\t\t/* l1_cache_line_size  */\n-  -1\t\t\t/* l2_cache_size  */\n+  -1,\t\t\t/* l2_cache_size  */\n+  -1\t\t\t/* default_opt_level  */\n };\n \n static const struct tune_params generic_tunings =\n@@ -8806,6 +8810,15 @@ aarch64_override_options_internal (struct gcc_options *opts)\n \t\t\t   opts->x_param_values,\n \t\t\t   global_options_set.x_param_values);\n \n+  /* Enable sw prefetching at specified optimization level for\n+     CPUS that have prefetch.  Lower optimization level threshold by 1\n+     when profiling is enabled.  */\n+  if (opts->x_flag_prefetch_loop_arrays < 0\n+      && !opts->x_optimize_size\n+      && aarch64_tune_params.prefetch->default_opt_level >= 0\n+      && opts->x_optimize >= aarch64_tune_params.prefetch->default_opt_level)\n+    opts->x_flag_prefetch_loop_arrays = 1;\n+\n   aarch64_override_options_after_change_1 (opts);\n }\n "}]}