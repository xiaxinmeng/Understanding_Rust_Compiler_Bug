{"sha": "68f674e990c0035f008ff0cc67f711ef7912e4f8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjhmNjc0ZTk5MGMwMDM1ZjAwOGZmMGNjNjdmNzExZWY3OTEyZTRmOA==", "commit": {"author": {"name": "Joseph Myers", "email": "joseph@codesourcery.com", "date": "2004-11-13T20:41:01Z"}, "committer": {"name": "Joseph Myers", "email": "jsm28@gcc.gnu.org", "date": "2004-11-13T20:41:01Z"}, "message": "inclhack.def (hpux_maxint, [...]): Remove.\n\n\t* inclhack.def (hpux_maxint, limits_ifndefs, math_huge_val_ifndef,\n\tsvr4__p, undefine_null): Remove.\n\t* fixincl.x: Regenerate.\n\t* tests/base/AvailabilityMacros.h, tests/base/com_err.h: New.\n\t* tests/base/sys/param.h: Remove.\n\t* tests/base/curses.h, tests/base/math.h, tests/base/testing.h,\n\ttests/base/sys/limits.h: Update.\n\nFrom-SVN: r90594", "tree": {"sha": "8989be336bf542c9a1656dcc23bd99e062dfb81f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8989be336bf542c9a1656dcc23bd99e062dfb81f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/68f674e990c0035f008ff0cc67f711ef7912e4f8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/68f674e990c0035f008ff0cc67f711ef7912e4f8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/68f674e990c0035f008ff0cc67f711ef7912e4f8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/68f674e990c0035f008ff0cc67f711ef7912e4f8/comments", "author": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ae8cacc6fd362fd423deea96b7c70a2dd902520b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ae8cacc6fd362fd423deea96b7c70a2dd902520b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ae8cacc6fd362fd423deea96b7c70a2dd902520b"}], "stats": {"total": 428, "additions": 34, "deletions": 394}, "files": [{"sha": "6f17a1d9ce4c129479e8ca751f491352e656fe97", "filename": "fixincludes/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68f674e990c0035f008ff0cc67f711ef7912e4f8/fixincludes%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68f674e990c0035f008ff0cc67f711ef7912e4f8/fixincludes%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2FChangeLog?ref=68f674e990c0035f008ff0cc67f711ef7912e4f8", "patch": "@@ -1,3 +1,13 @@\n+2004-11-13  Joseph S. Myers  <joseph@codesourcery.com>\n+\n+\t* inclhack.def (hpux_maxint, limits_ifndefs, math_huge_val_ifndef,\n+\tsvr4__p, undefine_null): Remove.\n+\t* fixincl.x: Regenerate.\n+\t* tests/base/AvailabilityMacros.h, tests/base/com_err.h: New.\n+\t* tests/base/sys/param.h: Remove.\n+\t* tests/base/curses.h, tests/base/math.h, tests/base/testing.h,\n+\ttests/base/sys/limits.h: Update.\n+\n 2004-11-12  Mike Stump  <mrs@apple.com>\n \n \t* Makefile.in (html): Add html generation support."}, {"sha": "3700290c2c07588528eaa407922d6f15738d44d2", "filename": "fixincludes/fixincl.x", "status": "modified", "additions": 5, "deletions": 251, "changes": 256, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68f674e990c0035f008ff0cc67f711ef7912e4f8/fixincludes%2Ffixincl.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68f674e990c0035f008ff0cc67f711ef7912e4f8/fixincludes%2Ffixincl.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2Ffixincl.x?ref=68f674e990c0035f008ff0cc67f711ef7912e4f8", "patch": "@@ -2,11 +2,11 @@\n  * \n  * DO NOT EDIT THIS FILE   (fixincl.x)\n  * \n- * It has been AutoGen-ed  Friday November 12, 2004 at 10:24:50 PM UTC\n+ * It has been AutoGen-ed  Saturday November 13, 2004 at 08:30:08 PM UTC\n  * From the definitions    inclhack.def\n  * and the template file   fixincl\n  */\n-/* DO NOT CVS-MERGE THIS FILE, EITHER Fri Nov 12 22:24:50 UTC 2004\n+/* DO NOT CVS-MERGE THIS FILE, EITHER Sat Nov 13 20:30:09 UTC 2004\n  *\n  * You must regenerate it.  Use the ./genfixes script.\n  *\n@@ -15,7 +15,7 @@\n  * certain ANSI-incompatible system header files which are fixed to work\n  * correctly with ANSI C and placed in a directory that GNU C will search.\n  *\n- * This file contains 181 fixup descriptions.\n+ * This file contains 176 fixup descriptions.\n  *\n  * See README for more information.\n  *\n@@ -2645,58 +2645,6 @@ static const char* apzHpux_Long_DoublePatch[] = { \"sed\",\n     \"-e\", \"s/long_double/long double/g\",\n     (char*)NULL };\n \n-/* * * * * * * * * * * * * * * * * * * * * * * * * *\n- *\n- *  Description of Hpux_Maxint fix\n- */\n-tSCC zHpux_MaxintName[] =\n-     \"hpux_maxint\";\n-\n-/*\n- *  File name selection pattern\n- */\n-tSCC zHpux_MaxintList[] =\n-  \"|sys/param.h|values.h|\";\n-/*\n- *  Machine/OS name selection pattern\n- */\n-#define apzHpux_MaxintMachs (const char**)NULL\n-\n-/*\n- *  content selection pattern - do fix if pattern found\n- */\n-tSCC zHpux_MaxintSelect0[] =\n-       \"^#[ \\t]*define[ \\t]+MAXINT[ \\t]\";\n-\n-/*\n- *  content bypass pattern - skip fix if pattern found\n- */\n-tSCC zHpux_MaxintBypass0[] =\n-       \"^#[ \\t]*ifndef[ \\t]+MAXINT\";\n-\n-/*\n- *  perform the 'test' shell command - do fix on success\n- */\n-tSCC zHpux_MaxintTest0[] =\n-       \"-n \\\"`egrep '#[ \\t]*define[ \\t]+MAXINT[ \\t]' sys/param.h`\\\"\";\n-\n-#define    HPUX_MAXINT_TEST_CT  3\n-static tTestDesc aHpux_MaxintTests[] = {\n-  { TT_TEST,     zHpux_MaxintTest0,   0 /* unused */ },\n-  { TT_NEGREP,   zHpux_MaxintBypass0, (regex_t*)NULL },\n-  { TT_EGREP,    zHpux_MaxintSelect0, (regex_t*)NULL }, };\n-\n-/*\n- *  Fix Command Arguments for Hpux_Maxint\n- */\n-static const char* apzHpux_MaxintPatch[] = {\n-    \"format\",\n-    \"#ifndef MAXINT\\n\\\n-%0\\n\\\n-#endif\",\n-    \"^#[ \\t]*define[ \\t]+MAXINT[ \\t].*\",\n-    (char*)NULL };\n-\n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n  *\n  *  Description of Hpux_Systime fix\n@@ -3375,50 +3323,6 @@ extern [a-z_]+ mem.*(\\n\\\n #endif\",\n     (char*)NULL };\n \n-/* * * * * * * * * * * * * * * * * * * * * * * * * *\n- *\n- *  Description of Limits_Ifndefs fix\n- */\n-tSCC zLimits_IfndefsName[] =\n-     \"limits_ifndefs\";\n-\n-/*\n- *  File name selection pattern\n- */\n-tSCC zLimits_IfndefsList[] =\n-  \"|sys/limits.h|limits.h|\";\n-/*\n- *  Machine/OS name selection pattern\n- */\n-#define apzLimits_IfndefsMachs (const char**)NULL\n-\n-/*\n- *  content selection pattern - do fix if pattern found\n- */\n-tSCC zLimits_IfndefsSelect0[] =\n-       \"^[ \\t]*#[ \\t]*define[ \\t]+((FLT|DBL)_(MIN|MAX|DIG))[ \\t].*\";\n-\n-/*\n- *  content bypass pattern - skip fix if pattern found\n- */\n-tSCC zLimits_IfndefsBypass0[] =\n-       \"ifndef[ \\t]+FLT_(MIN|MAX)\";\n-\n-#define    LIMITS_IFNDEFS_TEST_CT  2\n-static tTestDesc aLimits_IfndefsTests[] = {\n-  { TT_NEGREP,   zLimits_IfndefsBypass0, (regex_t*)NULL },\n-  { TT_EGREP,    zLimits_IfndefsSelect0, (regex_t*)NULL }, };\n-\n-/*\n- *  Fix Command Arguments for Limits_Ifndefs\n- */\n-static const char* apzLimits_IfndefsPatch[] = {\n-    \"format\",\n-    \"#ifndef %1\\n\\\n-%0\\n\\\n-#endif\",\n-    (char*)NULL };\n-\n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n  *\n  *  Description of Linux_Ia64_Ucontext fix\n@@ -3703,44 +3607,6 @@ static const char* apzMath_Huge_Val_From_Dbl_MaxPatch[] = { \"sh\", \"-c\",\n \\tfi\",\n     (char*)NULL };\n \n-/* * * * * * * * * * * * * * * * * * * * * * * * * *\n- *\n- *  Description of Math_Huge_Val_Ifndef fix\n- */\n-tSCC zMath_Huge_Val_IfndefName[] =\n-     \"math_huge_val_ifndef\";\n-\n-/*\n- *  File name selection pattern\n- */\n-tSCC zMath_Huge_Val_IfndefList[] =\n-  \"|math.h|math/math.h|\";\n-/*\n- *  Machine/OS name selection pattern\n- */\n-#define apzMath_Huge_Val_IfndefMachs (const char**)NULL\n-\n-/*\n- *  content selection pattern - do fix if pattern found\n- */\n-tSCC zMath_Huge_Val_IfndefSelect0[] =\n-       \"define[ \\t]+HUGE_VAL\";\n-\n-#define    MATH_HUGE_VAL_IFNDEF_TEST_CT  1\n-static tTestDesc aMath_Huge_Val_IfndefTests[] = {\n-  { TT_EGREP,    zMath_Huge_Val_IfndefSelect0, (regex_t*)NULL }, };\n-\n-/*\n- *  Fix Command Arguments for Math_Huge_Val_Ifndef\n- */\n-static const char* apzMath_Huge_Val_IfndefPatch[] = {\n-    \"format\",\n-    \"#ifndef HUGE_VAL\\n\\\n-%0\\n\\\n-#endif\",\n-    \"^[ \\t]*#[ \\t]*define[ \\t]+HUGE_VAL[ \\t].*\",\n-    (char*)NULL };\n-\n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n  *\n  *  Description of Nested_Auth_Des fix\n@@ -5503,43 +5369,6 @@ static const char* apzSunos_StrlenPatch[] = {\n     \"__SIZE_TYPE__ strlen();%1\",\n     (char*)NULL };\n \n-/* * * * * * * * * * * * * * * * * * * * * * * * * *\n- *\n- *  Description of Svr4__P fix\n- */\n-tSCC zSvr4__PName[] =\n-     \"svr4__p\";\n-\n-/*\n- *  File name selection pattern\n- */\n-tSCC zSvr4__PList[] =\n-  \"|math.h|floatingpoint.h|\";\n-/*\n- *  Machine/OS name selection pattern\n- */\n-#define apzSvr4__PMachs (const char**)NULL\n-\n-/*\n- *  content selection pattern - do fix if pattern found\n- */\n-tSCC zSvr4__PSelect0[] =\n-       \"^#define[ \\t]+__P.*\";\n-\n-#define    SVR4__P_TEST_CT  1\n-static tTestDesc aSvr4__PTests[] = {\n-  { TT_EGREP,    zSvr4__PSelect0, (regex_t*)NULL }, };\n-\n-/*\n- *  Fix Command Arguments for Svr4__P\n- */\n-static const char* apzSvr4__PPatch[] = {\n-    \"format\",\n-    \"#ifndef __P\\n\\\n-%0\\n\\\n-#endif\",\n-    (char*)NULL };\n-\n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n  *\n  *  Description of Svr4_Disable_Opt fix\n@@ -6595,51 +6424,6 @@ static const char* apzUltrix_UnistdPatch[] = { \"sed\",\n \\tvfork(),\\n\",\n     (char*)NULL };\n \n-/* * * * * * * * * * * * * * * * * * * * * * * * * *\n- *\n- *  Description of Undefine_Null fix\n- */\n-tSCC zUndefine_NullName[] =\n-     \"undefine_null\";\n-\n-/*\n- *  File name selection pattern\n- */\n-#define zUndefine_NullList (char*)NULL\n-/*\n- *  Machine/OS name selection pattern\n- */\n-#define apzUndefine_NullMachs (const char**)NULL\n-\n-/*\n- *  content selection pattern - do fix if pattern found\n- */\n-tSCC zUndefine_NullSelect0[] =\n-       \"^#[ \\t]*define[ \\t]+NULL[ \\t]\";\n-\n-/*\n- *  content bypass pattern - skip fix if pattern found\n- */\n-tSCC zUndefine_NullBypass0[] =\n-       \"#[ \\t]*(ifn|un)def[ \\t]+NULL($|[ \\t\\r])\";\n-\n-#define    UNDEFINE_NULL_TEST_CT  2\n-static tTestDesc aUndefine_NullTests[] = {\n-  { TT_NEGREP,   zUndefine_NullBypass0, (regex_t*)NULL },\n-  { TT_EGREP,    zUndefine_NullSelect0, (regex_t*)NULL }, };\n-\n-/*\n- *  Fix Command Arguments for Undefine_Null\n- */\n-static const char* apzUndefine_NullPatch[] = {\n-    \"format\",\n-    \"#ifndef NULL\\n\\\n-#define NULL%1\\n\\\n-#endif\\n\",\n-    \"^#[ \\t]*define[ \\t]+NULL([^\\r\\n\\\n-]+)[\\r]*\\n\",\n-    (char*)NULL };\n-\n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n  *\n  *  Description of Unicosmk_Restrict fix\n@@ -7247,9 +7031,9 @@ static const char* apzX11_SprintfPatch[] = {\n  *\n  *  List of all fixes\n  */\n-#define REGEX_COUNT          213\n+#define REGEX_COUNT          205\n #define MACH_LIST_SIZE_LIMIT 261\n-#define FIX_COUNT            181\n+#define FIX_COUNT            176\n \n /*\n  *  Enumerate the fixes\n@@ -7318,7 +7102,6 @@ typedef enum {\n     HPUX8_BOGUS_INLINES_FIXIDX,\n     HPUX_CTYPE_MACROS_FIXIDX,\n     HPUX_LONG_DOUBLE_FIXIDX,\n-    HPUX_MAXINT_FIXIDX,\n     HPUX_SYSTIME_FIXIDX,\n     INT_ABORT_FREE_AND_EXIT_FIXIDX,\n     IO_QUOTES_DEF_FIXIDX,\n@@ -7337,15 +7120,13 @@ typedef enum {\n     KANDR_CONCAT_FIXIDX,\n     LIBC1_G_VA_LIST_FIXIDX,\n     LIBC1_IFDEFD_MEMX_FIXIDX,\n-    LIMITS_IFNDEFS_FIXIDX,\n     LINUX_IA64_UCONTEXT_FIXIDX,\n     LYNXOS_NO_WARNING_IN_SYS_TIME_H_FIXIDX,\n     LYNXOS_MISSING_PUTENV_FIXIDX,\n     MACHINE_ANSI_H_VA_LIST_FIXIDX,\n     MACHINE_NAME_FIXIDX,\n     MATH_EXCEPTION_FIXIDX,\n     MATH_HUGE_VAL_FROM_DBL_MAX_FIXIDX,\n-    MATH_HUGE_VAL_IFNDEF_FIXIDX,\n     NESTED_AUTH_DES_FIXIDX,\n     NESTED_MOTOROLA_FIXIDX,\n     NESTED_SYS_LIMITS_FIXIDX,\n@@ -7391,7 +7172,6 @@ typedef enum {\n     SUN_RUSERS_SEMI_FIXIDX,\n     SUN_SIGNAL_FIXIDX,\n     SUNOS_STRLEN_FIXIDX,\n-    SVR4__P_FIXIDX,\n     SVR4_DISABLE_OPT_FIXIDX,\n     SVR4_GETCWD_FIXIDX,\n     SVR4_KRNL_FIXIDX,\n@@ -7420,7 +7200,6 @@ typedef enum {\n     ULTRIX_STRINGS2_FIXIDX,\n     ULTRIX_SYS_TIME_FIXIDX,\n     ULTRIX_UNISTD_FIXIDX,\n-    UNDEFINE_NULL_FIXIDX,\n     UNICOSMK_RESTRICT_FIXIDX,\n     UW7_BYTEORDER_FIX_FIXIDX,\n     VA_I960_MACRO_FIXIDX,\n@@ -7754,11 +7533,6 @@ tFixDesc fixDescList[ FIX_COUNT ] = {\n      HPUX_LONG_DOUBLE_TEST_CT, FD_MACH_ONLY,\n      aHpux_Long_DoubleTests,   apzHpux_Long_DoublePatch, 0 },\n \n-  {  zHpux_MaxintName,    zHpux_MaxintList,\n-     apzHpux_MaxintMachs,\n-     HPUX_MAXINT_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n-     aHpux_MaxintTests,   apzHpux_MaxintPatch, 0 },\n-\n   {  zHpux_SystimeName,    zHpux_SystimeList,\n      apzHpux_SystimeMachs,\n      HPUX_SYSTIME_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n@@ -7849,11 +7623,6 @@ tFixDesc fixDescList[ FIX_COUNT ] = {\n      LIBC1_IFDEFD_MEMX_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n      aLibc1_Ifdefd_MemxTests,   apzLibc1_Ifdefd_MemxPatch, 0 },\n \n-  {  zLimits_IfndefsName,    zLimits_IfndefsList,\n-     apzLimits_IfndefsMachs,\n-     LIMITS_IFNDEFS_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n-     aLimits_IfndefsTests,   apzLimits_IfndefsPatch, 0 },\n-\n   {  zLinux_Ia64_UcontextName,    zLinux_Ia64_UcontextList,\n      apzLinux_Ia64_UcontextMachs,\n      LINUX_IA64_UCONTEXT_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n@@ -7889,11 +7658,6 @@ tFixDesc fixDescList[ FIX_COUNT ] = {\n      MATH_HUGE_VAL_FROM_DBL_MAX_TEST_CT, FD_MACH_ONLY | FD_SHELL_SCRIPT,\n      aMath_Huge_Val_From_Dbl_MaxTests,   apzMath_Huge_Val_From_Dbl_MaxPatch, 0 },\n \n-  {  zMath_Huge_Val_IfndefName,    zMath_Huge_Val_IfndefList,\n-     apzMath_Huge_Val_IfndefMachs,\n-     MATH_HUGE_VAL_IFNDEF_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n-     aMath_Huge_Val_IfndefTests,   apzMath_Huge_Val_IfndefPatch, 0 },\n-\n   {  zNested_Auth_DesName,    zNested_Auth_DesList,\n      apzNested_Auth_DesMachs,\n      NESTED_AUTH_DES_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n@@ -8119,11 +7883,6 @@ tFixDesc fixDescList[ FIX_COUNT ] = {\n      SUNOS_STRLEN_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n      aSunos_StrlenTests,   apzSunos_StrlenPatch, 0 },\n \n-  {  zSvr4__PName,    zSvr4__PList,\n-     apzSvr4__PMachs,\n-     SVR4__P_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n-     aSvr4__PTests,   apzSvr4__PPatch, 0 },\n-\n   {  zSvr4_Disable_OptName,    zSvr4_Disable_OptList,\n      apzSvr4_Disable_OptMachs,\n      SVR4_DISABLE_OPT_TEST_CT, FD_MACH_ONLY,\n@@ -8264,11 +8023,6 @@ tFixDesc fixDescList[ FIX_COUNT ] = {\n      ULTRIX_UNISTD_TEST_CT, FD_MACH_ONLY,\n      aUltrix_UnistdTests,   apzUltrix_UnistdPatch, 0 },\n \n-  {  zUndefine_NullName,    zUndefine_NullList,\n-     apzUndefine_NullMachs,\n-     UNDEFINE_NULL_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n-     aUndefine_NullTests,   apzUndefine_NullPatch, 0 },\n-\n   {  zUnicosmk_RestrictName,    zUnicosmk_RestrictList,\n      apzUnicosmk_RestrictMachs,\n      UNICOSMK_RESTRICT_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,"}, {"sha": "828ee06eca618eb378ef3c26ab458a68227c3be3", "filename": "fixincludes/inclhack.def", "status": "modified", "additions": 0, "deletions": 101, "changes": 101, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68f674e990c0035f008ff0cc67f711ef7912e4f8/fixincludes%2Finclhack.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68f674e990c0035f008ff0cc67f711ef7912e4f8/fixincludes%2Finclhack.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2Finclhack.def?ref=68f674e990c0035f008ff0cc67f711ef7912e4f8", "patch": "@@ -1480,26 +1480,6 @@ fix = {\n };\n \n \n-/*\n- *  HPUX 10.x sys/param.h defines MAXINT which clashes with values.h\n- */\n-fix = {\n-    hackname  = hpux_maxint;\n-    files     = sys/param.h;\n-    files     = values.h;\n-    select    = \"^#[ \\t]*define[ \\t]+MAXINT[ \\t]\";\n-    bypass    = \"^#[ \\t]*ifndef[ \\t]+MAXINT\";\n-    test =\n-    \"-n \\\"`egrep '#[ \\t]*define[ \\t]+MAXINT[ \\t]' sys/param.h`\\\"\";\n-\n-    c_fix     = format;\n-    c_fix_arg = \"#ifndef MAXINT\\n%0\\n#endif\";\n-    c_fix_arg = \"^#[ \\t]*define[ \\t]+MAXINT[ \\t].*\";\n-\n-    test_text = '#define MAXINT 0x7FFFFFFF';\n-};\n-\n-\n /*\n  *  Fix hpux10.20 <sys/time.h> to avoid invalid forward decl\n  */\n@@ -1863,34 +1843,6 @@ fix = {\n };\n \n \n-/*\n- *  In limits.h, put #ifndefs around things that are supposed to be defined\n- *  in float.h to avoid redefinition errors if float.h is included first.\n- *  On HP/UX this patch does not work, because on HP/UX limits.h uses\n- *  multi line comments and the inserted #endif winds up inside the\n- *  comment.  Fortunately, HP/UX already uses #ifndefs in limits.h; if\n- *  we find a #ifndef FLT_MIN we assume that all the required #ifndefs\n- *  are there, and we do not add them ourselves.\n- *\n- *  QNX Software Systems also guards the defines, but doesn't define\n- *  FLT_MIN.  Therefore, bypass the fix for *either* guarded FLT_MIN\n- *  or guarded FLT_MAX.\n- */\n-fix = {\n-    hackname = limits_ifndefs;\n-    files  = \"sys/limits.h\";\n-    files  = \"limits.h\";\n-    select = \"^[ \\t]*#[ \\t]*define[ \\t]+\"\n-             \"((FLT|DBL)_(MIN|MAX|DIG))[ \\t].*\";\n-    bypass = \"ifndef[ \\t]+FLT_(MIN|MAX)\";\n-\n-    c_fix     = format;\n-    c_fix_arg = \"#ifndef %1\\n%0\\n#endif\";\n-    /* Second arg is select expression */\n-    test_text = \" #\\tdefine\\tDBL_DIG \\t 0  /* somthin' */\";\n-};\n-\n-\n /* The /usr/include/sys/ucontext.h on ia64-*linux-gnu systems defines\n  * an _SC_GR0_OFFSET macro using an idiom that isn't a compile time\n  * constant on recent versions of g++.\n@@ -2059,23 +2011,6 @@ fix = {\n };\n \n \n-/*\n- * In any case, put #ifndef .. #endif around #define HUGE_VAL in math.h.\n- */\n-fix = {\n-    hackname = math_huge_val_ifndef;\n-    files    = math.h;\n-    files    = math/math.h;\n-    select   = \"define[ \\t]+HUGE_VAL\";\n-\n-    c_fix     = format;\n-    c_fix_arg = \"#ifndef HUGE_VAL\\n%0\\n#endif\";\n-    c_fix_arg = \"^[ \\t]*#[ \\t]*define[ \\t]+HUGE_VAL[ \\t].*\";\n-\n-    test_text = \"# define\\tHUGE_VAL 3.4e+40\";\n-};\n-\n-\n /*\n  *  nested comment\n  */\n@@ -3036,23 +2971,6 @@ fix = {\n };\n \n \n-/*\n- *  Solaris math.h and floatingpoint.h define __P without protection,\n- *  which conflicts with the fixproto definition.  The fixproto\n- *  definition and the Solaris definition are used the same way.\n- */\n-fix = {\n-    hackname = svr4__p;\n-    files    = math.h;\n-    files    = floatingpoint.h;\n-    select   = \"^#define[ \\t]+__P.*\";\n-    c_fix     = format;\n-    c_fix_arg = \"#ifndef __P\\n%0\\n#endif\";\n-\n-    test_text = \"#define __P(a) a\";\n-};\n-\n-\n /*\n  *  Disable apparent native compiler optimization cruft in SVR4.2 <string.h>\n  *  that is visible to any ANSI compiler using this include.  Simply\n@@ -3907,25 +3825,6 @@ fix = {\n };\n \n \n-/*\n- *  Fix multiple defines for NULL.  Sometimes, we stumble into \\r\\n\n- *  terminated lines, so accommodate these.  Test both ways.\n- *  Don't bother to reproduce the \\r\\n termination, as GCC has to\n- *  recognize \\n termination anyway.\n- */\n-fix = {\n-    hackname  = undefine_null;\n-    select    = \"^#[ \\t]*define[ \\t]+NULL[ \\t]\";\n-    bypass    = \"#[ \\t]*(ifn|un)def[ \\t]+NULL($|[ \\t\\r])\";\n-\n-    c_fix     = format;\n-    c_fix_arg = \"#ifndef NULL\\n#define NULL%1\\n#endif\\n\";\n-    c_fix_arg = \"^#[ \\t]*define[ \\t]+NULL([^\\r\\n]+)[\\r]*\\n\";\n-\n-    test_text = \"#define NULL 0UL\\r\\n\"\n-                \"#define NULL\\t((void*)0)\\n\";\n-};\n-\n /*\n  * On Cray Unicos/Mk some standard headers use the C99 keyword \"restrict\"\n  * which must be replaced by __restrict__ for GCC."}, {"sha": "81a0da0f7ca55256b339d430766e2f0697e94e1b", "filename": "fixincludes/tests/base/AvailabilityMacros.h", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68f674e990c0035f008ff0cc67f711ef7912e4f8/fixincludes%2Ftests%2Fbase%2FAvailabilityMacros.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68f674e990c0035f008ff0cc67f711ef7912e4f8/fixincludes%2Ftests%2Fbase%2FAvailabilityMacros.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2Ftests%2Fbase%2FAvailabilityMacros.h?ref=68f674e990c0035f008ff0cc67f711ef7912e4f8", "patch": "@@ -0,0 +1,15 @@\n+/*  DO NOT EDIT THIS FILE.\n+\n+    It has been auto-edited by fixincludes from:\n+\n+\t\"fixinc/tests/inc/AvailabilityMacros.h\"\n+\n+    This had to be done to correct non-standard usages in the\n+    original, manufacturer supplied header file.  */\n+\n+\n+\n+#if defined( DARWIN_GCC4_BREAKAGE_CHECK )\n+#if defined(__GNUC__) && ((__GNUC__ >= 4) || (__GNUC__ == 3 && __GNUC_MINOR__ >= 1))\n+\n+#endif  /* DARWIN_GCC4_BREAKAGE_CHECK */"}, {"sha": "6017d2a6c9a26f83fe795b30c9ee140c04d23d8f", "filename": "fixincludes/tests/base/com_err.h", "status": "renamed", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68f674e990c0035f008ff0cc67f711ef7912e4f8/fixincludes%2Ftests%2Fbase%2Fcom_err.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68f674e990c0035f008ff0cc67f711ef7912e4f8/fixincludes%2Ftests%2Fbase%2Fcom_err.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2Ftests%2Fbase%2Fcom_err.h?ref=68f674e990c0035f008ff0cc67f711ef7912e4f8", "patch": "@@ -2,15 +2,13 @@\n \n     It has been auto-edited by fixincludes from:\n \n-\t\"fixinc/tests/inc/sys/param.h\"\n+\t\"fixinc/tests/inc/com_err.h\"\n \n     This had to be done to correct non-standard usages in the\n     original, manufacturer supplied header file.  */\n \n \n \n-#if defined( HPUX_MAXINT_CHECK )\n-#ifndef MAXINT\n-#define MAXINT 0x7FFFFFFF\n-#endif\n-#endif  /* HPUX_MAXINT_CHECK */\n+#if defined( STDIO_DUMMY_VA_LIST_CLIENTS_CHECK )\n+extern void mumble( __gnuc_va_list);\n+#endif  /* STDIO_DUMMY_VA_LIST_CLIENTS_CHECK */", "previous_filename": "fixincludes/tests/base/sys/param.h"}, {"sha": "e05f8912d725786415def205ea3ba0bb734b6889", "filename": "fixincludes/tests/base/curses.h", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68f674e990c0035f008ff0cc67f711ef7912e4f8/fixincludes%2Ftests%2Fbase%2Fcurses.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68f674e990c0035f008ff0cc67f711ef7912e4f8/fixincludes%2Ftests%2Fbase%2Fcurses.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2Ftests%2Fbase%2Fcurses.h?ref=68f674e990c0035f008ff0cc67f711ef7912e4f8", "patch": "@@ -31,7 +31,5 @@ struct term;\n \n \n #if defined( VOID_NULL_CHECK )\n-#ifndef NULL\n #define NULL 0  /* typed NULL */\n-#endif\n #endif  /* VOID_NULL_CHECK */"}, {"sha": "945cc04e11e0668b1227b93372f1016ad3c7f31f", "filename": "fixincludes/tests/base/math.h", "status": "modified", "additions": 0, "deletions": 16, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68f674e990c0035f008ff0cc67f711ef7912e4f8/fixincludes%2Ftests%2Fbase%2Fmath.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68f674e990c0035f008ff0cc67f711ef7912e4f8/fixincludes%2Ftests%2Fbase%2Fmath.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2Ftests%2Fbase%2Fmath.h?ref=68f674e990c0035f008ff0cc67f711ef7912e4f8", "patch": "@@ -68,19 +68,10 @@ typedef struct exception t_math_exception;\n \n #if defined( MATH_HUGE_VAL_FROM_DBL_MAX_CHECK )\n \n-#ifndef HUGE_VAL\n #define HUGE_VAL 3.1415e+9 /* really big */\n-#endif\n #endif  /* MATH_HUGE_VAL_FROM_DBL_MAX_CHECK */\n \n \n-#if defined( MATH_HUGE_VAL_IFNDEF_CHECK )\n-#ifndef HUGE_VAL\n-# define\tHUGE_VAL 3.4e+40\n-#endif\n-#endif  /* MATH_HUGE_VAL_IFNDEF_CHECK */\n-\n-\n #if defined( RS6000_DOUBLE_CHECK )\n #ifndef __cplusplus\n extern int class();\n@@ -105,13 +96,6 @@ int foo;\n #endif  /* STRICT_ANSI_NOT_CTD_CHECK */\n \n \n-#if defined( SVR4__P_CHECK )\n-#ifndef __P\n-#define __P(a) a\n-#endif\n-#endif  /* SVR4__P_CHECK */\n-\n-\n #if defined( ULTRIX_ATOF_PARAM_CHECK )\n extern double atof(const char *__nptr);\n "}, {"sha": "0ef2ff5ad5e42422aaa1dd18478c925bb03074c4", "filename": "fixincludes/tests/base/sys/limits.h", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68f674e990c0035f008ff0cc67f711ef7912e4f8/fixincludes%2Ftests%2Fbase%2Fsys%2Flimits.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68f674e990c0035f008ff0cc67f711ef7912e4f8/fixincludes%2Ftests%2Fbase%2Fsys%2Flimits.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2Ftests%2Fbase%2Fsys%2Flimits.h?ref=68f674e990c0035f008ff0cc67f711ef7912e4f8", "patch": "@@ -9,13 +9,6 @@\n \n \n \n-#if defined( LIMITS_IFNDEFS_CHECK )\n-#ifndef DBL_DIG\n- #\tdefine\tDBL_DIG \t 0  /* somthin' */\n-#endif\n-#endif  /* LIMITS_IFNDEFS_CHECK */\n-\n-\n #if defined( NESTED_MOTOROLA_CHECK )\n #undef PIPE_BUF /* max # bytes atomic in write to a */\n \t\t/* PIPE */"}, {"sha": "88b931e8d0df54a24aecad7f968f004213f78a9b", "filename": "fixincludes/tests/base/testing.h", "status": "modified", "additions": 0, "deletions": 11, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68f674e990c0035f008ff0cc67f711ef7912e4f8/fixincludes%2Ftests%2Fbase%2Ftesting.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68f674e990c0035f008ff0cc67f711ef7912e4f8/fixincludes%2Ftests%2Fbase%2Ftesting.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2Ftests%2Fbase%2Ftesting.h?ref=68f674e990c0035f008ff0cc67f711ef7912e4f8", "patch": "@@ -129,17 +129,6 @@ extern size_t\n #endif  /* SYSV68_STRING_CHECK */\n \n \n-#if defined( UNDEFINE_NULL_CHECK )\n-#ifndef NULL\n-#define NULL 0UL\n-#endif\n-#ifndef NULL\n-#define NULL\t((void*)0)\n-#endif\n-\n-#endif  /* UNDEFINE_NULL_CHECK */\n-\n-\n #if defined( WINDISS_VALIST_CHECK )\n #include <stdarg.h>\n #endif  /* WINDISS_VALIST_CHECK */"}]}