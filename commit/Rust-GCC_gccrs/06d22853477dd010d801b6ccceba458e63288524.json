{"sha": "06d22853477dd010d801b6ccceba458e63288524", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDZkMjI4NTM0NzdkZDAxMGQ4MDFiNmNjY2ViYTQ1OGU2MzI4ODUyNA==", "commit": {"author": {"name": "DJ Delorie", "email": "dj@redhat.com", "date": "2003-05-09T00:00:44Z"}, "committer": {"name": "DJ Delorie", "email": "dj@gcc.gnu.org", "date": "2003-05-09T00:00:44Z"}, "message": "stormy16.c (xstormy16_expand_builtin_va_arg): Fix to handle arguments for which MUST_PASS_IN_STACK is true (e.g....\n\n* config/stormy16/stormy16.c (xstormy16_expand_builtin_va_arg): Fix\nto handle arguments for which MUST_PASS_IN_STACK is true (e.g.,\nvariable-sized types).\n(xstormy16_function_arg): New.  Pass them that way too.\n* config/stormy16/stormy16-protos.h (xstormy16_function_arg): New.\n* config/stormy16/stormy16.h (FUNCTION_ARG): Call it.\n\nFrom-SVN: r66619", "tree": {"sha": "162256d5b68437f9aea7c4844dbcec0b7cccc899", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/162256d5b68437f9aea7c4844dbcec0b7cccc899"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/06d22853477dd010d801b6ccceba458e63288524", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/06d22853477dd010d801b6ccceba458e63288524", "html_url": "https://github.com/Rust-GCC/gccrs/commit/06d22853477dd010d801b6ccceba458e63288524", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/06d22853477dd010d801b6ccceba458e63288524/comments", "author": null, "committer": null, "parents": [{"sha": "001db0e0799bbbe3fde805f8c8fdef9dff542d94", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/001db0e0799bbbe3fde805f8c8fdef9dff542d94", "html_url": "https://github.com/Rust-GCC/gccrs/commit/001db0e0799bbbe3fde805f8c8fdef9dff542d94"}], "stats": {"total": 66, "additions": 47, "deletions": 19}, "files": [{"sha": "7e5a078adec63ed62794772e944eb62c9a867b78", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06d22853477dd010d801b6ccceba458e63288524/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06d22853477dd010d801b6ccceba458e63288524/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=06d22853477dd010d801b6ccceba458e63288524", "patch": "@@ -1,3 +1,12 @@\n+2003-05-08  DJ Delorie  <dj@redhat.com>\n+\n+\t* config/stormy16/stormy16.c (xstormy16_expand_builtin_va_arg): Fix\n+\tto handle arguments for which MUST_PASS_IN_STACK is true (e.g.,\n+\tvariable-sized types).\n+\t(xstormy16_function_arg): New.  Pass them that way too.\n+\t* config/stormy16/stormy16-protos.h (xstormy16_function_arg): New.\n+\t* config/stormy16/stormy16.h (FUNCTION_ARG): Call it.\n+\n 2003-05-08  Aldy Hernandez  <aldyh@redhat.com>\n \n         * mklibgcc.in: Use mkinstalldirs when installing multilib"}, {"sha": "77ad20afb4e725c15ae868e9af4e369f9cc015fe", "filename": "gcc/config/stormy16/stormy16-protos.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06d22853477dd010d801b6ccceba458e63288524/gcc%2Fconfig%2Fstormy16%2Fstormy16-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06d22853477dd010d801b6ccceba458e63288524/gcc%2Fconfig%2Fstormy16%2Fstormy16-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fstormy16%2Fstormy16-protos.h?ref=06d22853477dd010d801b6ccceba458e63288524", "patch": "@@ -35,6 +35,8 @@ extern void\txstormy16_function_profiler PARAMS ((void));\n #  if defined (HAVE_MACHINE_MODES)\n extern CUMULATIVE_ARGS xstormy16_function_arg_advance \n   PARAMS ((CUMULATIVE_ARGS, enum machine_mode, tree, int));\n+extern rtx xstormy16_function_arg\n+  PARAMS ((CUMULATIVE_ARGS, enum machine_mode, tree, int));\n #  endif\n extern void    xstormy16_setup_incoming_varargs \n   PARAMS ((CUMULATIVE_ARGS, int, tree, int *));"}, {"sha": "2979dd063accb4d0e8dc4b02fcfa5a2063cdac82", "filename": "gcc/config/stormy16/stormy16.c", "status": "modified", "additions": 34, "deletions": 15, "changes": 49, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06d22853477dd010d801b6ccceba458e63288524/gcc%2Fconfig%2Fstormy16%2Fstormy16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06d22853477dd010d801b6ccceba458e63288524/gcc%2Fconfig%2Fstormy16%2Fstormy16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fstormy16%2Fstormy16.c?ref=06d22853477dd010d801b6ccceba458e63288524", "patch": "@@ -1260,6 +1260,21 @@ xstormy16_function_arg_advance (cum, mode, type, named)\n   return cum;\n }\n \n+rtx\n+xstormy16_function_arg (cum, mode, type, named)\n+     CUMULATIVE_ARGS cum;\n+     enum machine_mode mode;\n+     tree type;\n+     int named ATTRIBUTE_UNUSED;\n+{\n+  if (mode == VOIDmode)\n+    return const0_rtx;\n+  if (MUST_PASS_IN_STACK (mode, type)\n+      || cum + XSTORMY16_WORD_SIZE (type, mode) > NUM_ARGUMENT_REGISTERS)\n+    return 0;\n+  return gen_rtx_REG (mode, cum + 2);\n+}\n+\n /* Do any needed setup for a variadic function.  CUM has not been updated\n    for the last named argument which has type TYPE and mode MODE.  */\n void\n@@ -1354,7 +1369,7 @@ xstormy16_expand_builtin_va_arg (valist, type)\n   rtx count_rtx, addr_rtx, r;\n   rtx lab_gotaddr, lab_fromstack;\n   tree t;\n-  int size, size_of_reg_args;\n+  int size, size_of_reg_args, must_stack;\n   tree size_tree, count_plus_size;\n   rtx count_plus_size_rtx;\n   \n@@ -1364,7 +1379,7 @@ xstormy16_expand_builtin_va_arg (valist, type)\n   base = build (COMPONENT_REF, TREE_TYPE (f_base), valist, f_base);\n   count = build (COMPONENT_REF, TREE_TYPE (f_count), valist, f_count);\n \n-  size = PUSH_ROUNDING (int_size_in_bytes (type));\n+  must_stack = MUST_PASS_IN_STACK (TYPE_MODE (type), type);\n   size_tree = round_up (size_in_bytes (type), UNITS_PER_WORD);\n   \n   size_of_reg_args = NUM_ARGUMENT_REGISTERS * UNITS_PER_WORD;\n@@ -1374,24 +1389,28 @@ xstormy16_expand_builtin_va_arg (valist, type)\n   lab_fromstack = gen_label_rtx ();\n   addr_rtx = gen_reg_rtx (Pmode);\n \n-  count_plus_size = build (PLUS_EXPR, TREE_TYPE (count), count, size_tree);\n-  count_plus_size_rtx = expand_expr (count_plus_size, NULL_RTX, HImode, EXPAND_NORMAL);\n-  emit_cmp_and_jump_insns (count_plus_size_rtx, GEN_INT (size_of_reg_args),\n-\t\t\t   GTU, const1_rtx, HImode, 1, lab_fromstack);\n+  if (!must_stack)\n+    {\n+      count_plus_size = build (PLUS_EXPR, TREE_TYPE (count), count, size_tree);\n+      count_plus_size_rtx = expand_expr (count_plus_size, NULL_RTX, HImode, EXPAND_NORMAL);\n+      emit_cmp_and_jump_insns (count_plus_size_rtx, GEN_INT (size_of_reg_args),\n+\t\t\t       GTU, const1_rtx, HImode, 1, lab_fromstack);\n   \n-  t = build (PLUS_EXPR, ptr_type_node, base, count);\n-  r = expand_expr (t, addr_rtx, Pmode, EXPAND_NORMAL);\n-  if (r != addr_rtx)\n-    emit_move_insn (addr_rtx, r);\n-\n-  emit_jump_insn (gen_jump (lab_gotaddr));\n-  emit_barrier ();\n-  emit_label (lab_fromstack);\n+      t = build (PLUS_EXPR, ptr_type_node, base, count);\n+      r = expand_expr (t, addr_rtx, Pmode, EXPAND_NORMAL);\n+      if (r != addr_rtx)\n+\temit_move_insn (addr_rtx, r);\n+\n+      emit_jump_insn (gen_jump (lab_gotaddr));\n+      emit_barrier ();\n+      emit_label (lab_fromstack);\n+    }\n   \n   /* Arguments larger than a word might need to skip over some\n      registers, since arguments are either passed entirely in\n      registers or entirely on the stack.  */\n-  if (size > 2 || size < 0)\n+  size = PUSH_ROUNDING (int_size_in_bytes (type));\n+  if (size > 2 || size < 0 || must_stack)\n     {\n       rtx lab_notransition = gen_label_rtx ();\n       emit_cmp_and_jump_insns (count_rtx, GEN_INT (NUM_ARGUMENT_REGISTERS "}, {"sha": "a0a78cdd377308b37659dd3a3c1a1bd50daf3af7", "filename": "gcc/config/stormy16/stormy16.h", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06d22853477dd010d801b6ccceba458e63288524/gcc%2Fconfig%2Fstormy16%2Fstormy16.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06d22853477dd010d801b6ccceba458e63288524/gcc%2Fconfig%2Fstormy16%2Fstormy16.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fstormy16%2Fstormy16.h?ref=06d22853477dd010d801b6ccceba458e63288524", "patch": "@@ -1245,10 +1245,8 @@ enum reg_class\n    returns nonzero for such an argument, the compiler will abort.  If\n    `REG_PARM_STACK_SPACE' is defined, the argument will be computed in the\n    stack and then loaded into a register.  */\n-#define FUNCTION_ARG(CUM, MODE, TYPE, NAMED)\t\t\t\t  \\\n-  ((MODE) == VOIDmode ? const0_rtx\t\t\t\t\t  \\\n-   : (CUM) + XSTORMY16_WORD_SIZE (TYPE, MODE) > NUM_ARGUMENT_REGISTERS ? 0 \\\n-   : gen_rtx_REG (MODE, (CUM) + 2))\n+#define FUNCTION_ARG(CUM, MODE, TYPE, NAMED) \\\n+\txstormy16_function_arg (CUM, MODE, TYPE, NAMED)\n \n /* Define this macro if the target machine has \"register windows\", so that the\n    register in which a function sees an arguments is not necessarily the same"}]}