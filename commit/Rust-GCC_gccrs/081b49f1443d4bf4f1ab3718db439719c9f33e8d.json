{"sha": "081b49f1443d4bf4f1ab3718db439719c9f33e8d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDgxYjQ5ZjE0NDNkNGJmNGYxYWIzNzE4ZGI0Mzk3MTljOWYzM2U4ZA==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2000-10-25T23:58:53Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2000-10-25T23:58:53Z"}, "message": "* reload.c (find_reloads_address_part): Kill rtx obstack hackery.\n\nFrom-SVN: r37062", "tree": {"sha": "47675c6a612eb3389b5c4fe2b2b99cddbb7c0493", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/47675c6a612eb3389b5c4fe2b2b99cddbb7c0493"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/081b49f1443d4bf4f1ab3718db439719c9f33e8d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/081b49f1443d4bf4f1ab3718db439719c9f33e8d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/081b49f1443d4bf4f1ab3718db439719c9f33e8d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/081b49f1443d4bf4f1ab3718db439719c9f33e8d/comments", "author": null, "committer": null, "parents": [{"sha": "d4f1c1faff4405a94368214cb84694f9bb250c0c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d4f1c1faff4405a94368214cb84694f9bb250c0c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d4f1c1faff4405a94368214cb84694f9bb250c0c"}], "stats": {"total": 24, "additions": 6, "deletions": 18}, "files": [{"sha": "03aa3176d48994641181c8402556dd5a2dd23ef6", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/081b49f1443d4bf4f1ab3718db439719c9f33e8d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/081b49f1443d4bf4f1ab3718db439719c9f33e8d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=081b49f1443d4bf4f1ab3718db439719c9f33e8d", "patch": "@@ -1,3 +1,7 @@\n+2000-10-25  Richard Henderson  <rth@redhat.com>\n+\n+\t* reload.c (find_reloads_address_part): Kill rtx obstack hackery.\n+\n 2000-10-25  Richard Henderson  <rth@redhat.com>\n \n \t* simplify-rtx.c (simplify_relational_operation): Sign extend"}, {"sha": "dbf1052e0e2034b56be7d6cacd7bf2096d1d47ab", "filename": "gcc/reload.c", "status": "modified", "additions": 2, "deletions": 18, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/081b49f1443d4bf4f1ab3718db439719c9f33e8d/gcc%2Freload.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/081b49f1443d4bf4f1ab3718db439719c9f33e8d/gcc%2Freload.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freload.c?ref=081b49f1443d4bf4f1ab3718db439719c9f33e8d", "patch": "@@ -5525,18 +5525,7 @@ find_reloads_address_part (x, loc, class, mode, opnum, type, ind_levels)\n     {\n       rtx tem;\n \n-      /* If this is a CONST_INT, it could have been created by a\n-\t plus_constant call in eliminate_regs, which means it may be\n-\t on the reload_obstack.  reload_obstack will be freed later, so\n-\t we can't allow such RTL to be put in the constant pool.  There\n-\t is code in force_const_mem to check for this case, but it doesn't\n-\t work because we have already popped off the reload_obstack, so\n-\t rtl_obstack == saveable_obstack is true at this point.  */\n-      if (GET_CODE (x) == CONST_INT)\n-\ttem = x = force_const_mem (mode, GEN_INT (INTVAL (x)));\n-      else\n-\ttem = x = force_const_mem (mode, x);\n-\n+      tem = x = force_const_mem (mode, x);\n       find_reloads_address (mode, &tem, XEXP (tem, 0), &XEXP (tem, 0),\n \t\t\t    opnum, type, ind_levels, 0);\n     }\n@@ -5548,12 +5537,7 @@ find_reloads_address_part (x, loc, class, mode, opnum, type, ind_levels)\n     {\n       rtx tem;\n \n-      /* See comment above.  */\n-      if (GET_CODE (XEXP (x, 1)) == CONST_INT)\n-\ttem = force_const_mem (GET_MODE (x), GEN_INT (INTVAL (XEXP (x, 1))));\n-      else\n-\ttem = force_const_mem (GET_MODE (x), XEXP (x, 1));\n-\n+      tem = force_const_mem (GET_MODE (x), XEXP (x, 1));\n       x = gen_rtx_PLUS (GET_MODE (x), XEXP (x, 0), tem);\n       find_reloads_address (mode, &tem, XEXP (tem, 0), &XEXP (tem, 0),\n \t\t\t    opnum, type, ind_levels, 0);"}]}