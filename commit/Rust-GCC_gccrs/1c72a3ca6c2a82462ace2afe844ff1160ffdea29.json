{"sha": "1c72a3ca6c2a82462ace2afe844ff1160ffdea29", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWM3MmEzY2E2YzJhODI0NjJhY2UyYWZlODQ0ZmYxMTYwZmZkZWEyOQ==", "commit": {"author": {"name": "James Greenhalgh", "email": "james.greenhalgh@arm.com", "date": "2015-11-17T10:41:17Z"}, "committer": {"name": "James Greenhalgh", "email": "jgreenhalgh@gcc.gnu.org", "date": "2015-11-17T10:41:17Z"}, "message": "[Patch AArch64] Add support for Cortex-A35\n\ngcc/\n\n\t* config/aarch64/aarch64-cores.def (cortex-a35): New.\n\t* config/aarch64/aarch64.c (cortexa35_tunings): New.\n\t* config/aarch64/aarch64-tune.md: Regenerate.\n\t* doc/invoke.texi (-mcpu): Add Cortex-A35\n\nFrom-SVN: r230458", "tree": {"sha": "ba4eee71030e75eb87b9e548eec6e07360ec8aa3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ba4eee71030e75eb87b9e548eec6e07360ec8aa3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1c72a3ca6c2a82462ace2afe844ff1160ffdea29", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1c72a3ca6c2a82462ace2afe844ff1160ffdea29", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1c72a3ca6c2a82462ace2afe844ff1160ffdea29", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1c72a3ca6c2a82462ace2afe844ff1160ffdea29/comments", "author": {"login": "jgreenhalgh-arm", "id": 6104025, "node_id": "MDQ6VXNlcjYxMDQwMjU=", "avatar_url": "https://avatars.githubusercontent.com/u/6104025?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jgreenhalgh-arm", "html_url": "https://github.com/jgreenhalgh-arm", "followers_url": "https://api.github.com/users/jgreenhalgh-arm/followers", "following_url": "https://api.github.com/users/jgreenhalgh-arm/following{/other_user}", "gists_url": "https://api.github.com/users/jgreenhalgh-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/jgreenhalgh-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jgreenhalgh-arm/subscriptions", "organizations_url": "https://api.github.com/users/jgreenhalgh-arm/orgs", "repos_url": "https://api.github.com/users/jgreenhalgh-arm/repos", "events_url": "https://api.github.com/users/jgreenhalgh-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/jgreenhalgh-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "697676457cb055edfd2420328b70a43b8a4c4a1a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/697676457cb055edfd2420328b70a43b8a4c4a1a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/697676457cb055edfd2420328b70a43b8a4c4a1a"}], "stats": {"total": 40, "additions": 37, "deletions": 3}, "files": [{"sha": "7616daeb01900296562d3aba915e01102984ac02", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1c72a3ca6c2a82462ace2afe844ff1160ffdea29/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1c72a3ca6c2a82462ace2afe844ff1160ffdea29/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1c72a3ca6c2a82462ace2afe844ff1160ffdea29", "patch": "@@ -1,3 +1,10 @@\n+2015-11-17  James Greenhalgh  <james.greenhalgh@arm.com>\n+\n+\t* config/aarch64/aarch64-cores.def (cortex-a35): New.\n+\t* config/aarch64/aarch64.c (cortexa35_tunings): New.\n+\t* config/aarch64/aarch64-tune.md: Regenerate.\n+\t* doc/invoke.texi (-mcpu): Add Cortex-A35\n+\n 2015-11-17  Venkataramanan Kumar  <Venkataramanan.Kumar@amd.com>\n \n \t* tree-if-conv.c: Include varasm.h"}, {"sha": "f8fab28d9120ca854f0d8f77dcf17487cb8855df", "filename": "gcc/config/aarch64/aarch64-cores.def", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1c72a3ca6c2a82462ace2afe844ff1160ffdea29/gcc%2Fconfig%2Faarch64%2Faarch64-cores.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1c72a3ca6c2a82462ace2afe844ff1160ffdea29/gcc%2Fconfig%2Faarch64%2Faarch64-cores.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64-cores.def?ref=1c72a3ca6c2a82462ace2afe844ff1160ffdea29", "patch": "@@ -40,6 +40,7 @@\n \n /* V8 Architecture Processors.  */\n \n+AARCH64_CORE(\"cortex-a35\",  cortexa35, cortexa53, 8A,  AARCH64_FL_FOR_ARCH8 | AARCH64_FL_CRC, cortexa35, \"0x41\", \"0xd04\")\n AARCH64_CORE(\"cortex-a53\",  cortexa53, cortexa53, 8A,  AARCH64_FL_FOR_ARCH8 | AARCH64_FL_CRC, cortexa53, \"0x41\", \"0xd03\")\n AARCH64_CORE(\"cortex-a57\",  cortexa57, cortexa57, 8A,  AARCH64_FL_FOR_ARCH8 | AARCH64_FL_CRC, cortexa57, \"0x41\", \"0xd07\")\n AARCH64_CORE(\"cortex-a72\",  cortexa72, cortexa57, 8A,  AARCH64_FL_FOR_ARCH8 | AARCH64_FL_CRC, cortexa72, \"0x41\", \"0xd08\")"}, {"sha": "cbc6f4879edb2f3842a50dfafe206313d49e9cf8", "filename": "gcc/config/aarch64/aarch64-tune.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1c72a3ca6c2a82462ace2afe844ff1160ffdea29/gcc%2Fconfig%2Faarch64%2Faarch64-tune.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1c72a3ca6c2a82462ace2afe844ff1160ffdea29/gcc%2Fconfig%2Faarch64%2Faarch64-tune.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64-tune.md?ref=1c72a3ca6c2a82462ace2afe844ff1160ffdea29", "patch": "@@ -1,5 +1,5 @@\n ;; -*- buffer-read-only: t -*-\n ;; Generated automatically by gentune.sh from aarch64-cores.def\n (define_attr \"tune\"\n-\t\"cortexa53,cortexa57,cortexa72,exynosm1,qdf24xx,thunderx,xgene1,cortexa57cortexa53,cortexa72cortexa53\"\n+\t\"cortexa35,cortexa53,cortexa57,cortexa72,exynosm1,qdf24xx,thunderx,xgene1,cortexa57cortexa53,cortexa72cortexa53\"\n \t(const (symbol_ref \"((enum attr_tune) aarch64_tune)\")))"}, {"sha": "54b9b4210fae4cc7ff00378bc55328ec112e9125", "filename": "gcc/config/aarch64/aarch64.c", "status": "modified", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1c72a3ca6c2a82462ace2afe844ff1160ffdea29/gcc%2Fconfig%2Faarch64%2Faarch64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1c72a3ca6c2a82462ace2afe844ff1160ffdea29/gcc%2Fconfig%2Faarch64%2Faarch64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64.c?ref=1c72a3ca6c2a82462ace2afe844ff1160ffdea29", "patch": "@@ -369,6 +369,31 @@ static const struct tune_params generic_tunings =\n   (AARCH64_EXTRA_TUNE_NONE)\t/* tune_flags.  */\n };\n \n+static const struct tune_params cortexa35_tunings =\n+{\n+  &cortexa53_extra_costs,\n+  &generic_addrcost_table,\n+  &cortexa53_regmove_cost,\n+  &generic_vector_cost,\n+  &generic_branch_cost,\n+  4, /* memmov_cost  */\n+  1, /* issue_rate  */\n+  (AARCH64_FUSE_MOV_MOVK | AARCH64_FUSE_ADRP_ADD\n+   | AARCH64_FUSE_MOVK_MOVK | AARCH64_FUSE_ADRP_LDR), /* fusible_ops  */\n+  8,\t/* function_align.  */\n+  8,\t/* jump_align.  */\n+  4,\t/* loop_align.  */\n+  2,\t/* int_reassoc_width.  */\n+  4,\t/* fp_reassoc_width.  */\n+  1,\t/* vec_reassoc_width.  */\n+  2,\t/* min_div_recip_mul_sf.  */\n+  2,\t/* min_div_recip_mul_df.  */\n+  0,\t/* max_case_values.  */\n+  0,\t/* cache_line_size.  */\n+  tune_params::AUTOPREFETCHER_WEAK,\t/* autoprefetcher_model.  */\n+  (AARCH64_EXTRA_TUNE_NONE)\t/* tune_flags.  */\n+};\n+\n static const struct tune_params cortexa53_tunings =\n {\n   &cortexa53_extra_costs,"}, {"sha": "73b758240f32d36076b7339b9f449d36d8c2cb0b", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1c72a3ca6c2a82462ace2afe844ff1160ffdea29/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1c72a3ca6c2a82462ace2afe844ff1160ffdea29/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=1c72a3ca6c2a82462ace2afe844ff1160ffdea29", "patch": "@@ -12590,8 +12590,9 @@ processors implementing the target architecture.\n @opindex mtune\n Specify the name of the target processor for which GCC should tune the\n performance of the code.  Permissible values for this option are:\n-@samp{generic}, @samp{cortex-a53}, @samp{cortex-a57}, @samp{cortex-a72},\n-@samp{exynos-m1}, @samp{qdf24xx}, @samp{thunderx}, @samp{xgene1}.\n+@samp{generic}, @samp{cortex-a35}, @samp{cortex-a53}, @samp{cortex-a57},\n+@samp{cortex-a72}, @samp{exynos-m1}, @samp{qdf24xx}, @samp{thunderx},\n+@samp{xgene1}.\n \n Additionally, this option can specify that GCC should tune the performance\n of the code for a big.LITTLE system.  Permissible values for this"}]}