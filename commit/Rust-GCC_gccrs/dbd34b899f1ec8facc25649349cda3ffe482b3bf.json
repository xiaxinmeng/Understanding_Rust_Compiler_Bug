{"sha": "dbd34b899f1ec8facc25649349cda3ffe482b3bf", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGJkMzRiODk5ZjFlYzhmYWNjMjU2NDkzNDljZGEzZmZlNDgyYjNiZg==", "commit": {"author": {"name": "Iain Sandoe", "email": "iains@gcc.gnu.org", "date": "2010-06-09T09:27:04Z"}, "committer": {"name": "Iain Sandoe", "email": "iains@gcc.gnu.org", "date": "2010-06-09T09:27:04Z"}, "message": "re PR bootstrap/43170 (gcc 4.5 20100218 bootstrap compare fails on os x 10.6)\n\n\nconfig:\n\tPR bootstrap/43170\n\t* tls.m4 (GCC_CHECK_TLS): Add volatile qualifier to the test \n\treferences.  Move the main () test reference ahead of \n\tpthread_create().  Add a comment to explain the requirements\n\tof the test.\nlibgomp:\n\tPR bootstrap/43170\n\t* configure: Regenerate.\nlibjava:\n\tPR bootstrap/43170\n\t* configure: Regenerate.\nlibmudflap:\n\tPR bootstrap/43170\n\t* configure: Regenerate.\nlibstdc++-v3:\n\tPR bootstrap/43170\n\t* configure: Regenerate.\n\nFrom-SVN: r160457", "tree": {"sha": "307696aa3f195e924bc7c2146bbcf51ca3871cf7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/307696aa3f195e924bc7c2146bbcf51ca3871cf7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dbd34b899f1ec8facc25649349cda3ffe482b3bf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dbd34b899f1ec8facc25649349cda3ffe482b3bf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dbd34b899f1ec8facc25649349cda3ffe482b3bf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dbd34b899f1ec8facc25649349cda3ffe482b3bf/comments", "author": {"login": "iains", "id": 4039407, "node_id": "MDQ6VXNlcjQwMzk0MDc=", "avatar_url": "https://avatars.githubusercontent.com/u/4039407?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iains", "html_url": "https://github.com/iains", "followers_url": "https://api.github.com/users/iains/followers", "following_url": "https://api.github.com/users/iains/following{/other_user}", "gists_url": "https://api.github.com/users/iains/gists{/gist_id}", "starred_url": "https://api.github.com/users/iains/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iains/subscriptions", "organizations_url": "https://api.github.com/users/iains/orgs", "repos_url": "https://api.github.com/users/iains/repos", "events_url": "https://api.github.com/users/iains/events{/privacy}", "received_events_url": "https://api.github.com/users/iains/received_events", "type": "User", "site_admin": false}, "committer": {"login": "iains", "id": 4039407, "node_id": "MDQ6VXNlcjQwMzk0MDc=", "avatar_url": "https://avatars.githubusercontent.com/u/4039407?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iains", "html_url": "https://github.com/iains", "followers_url": "https://api.github.com/users/iains/followers", "following_url": "https://api.github.com/users/iains/following{/other_user}", "gists_url": "https://api.github.com/users/iains/gists{/gist_id}", "starred_url": "https://api.github.com/users/iains/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iains/subscriptions", "organizations_url": "https://api.github.com/users/iains/orgs", "repos_url": "https://api.github.com/users/iains/repos", "events_url": "https://api.github.com/users/iains/events{/privacy}", "received_events_url": "https://api.github.com/users/iains/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fa9d7d3b70bae40150022c469b6b50c001474e11", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fa9d7d3b70bae40150022c469b6b50c001474e11", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fa9d7d3b70bae40150022c469b6b50c001474e11"}], "stats": {"total": 75, "additions": 54, "deletions": 21}, "files": [{"sha": "27f49c2ee6a0a7fcfa09306a4bf6aebb0f328eeb", "filename": "config/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbd34b899f1ec8facc25649349cda3ffe482b3bf/config%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbd34b899f1ec8facc25649349cda3ffe482b3bf/config%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/config%2FChangeLog?ref=dbd34b899f1ec8facc25649349cda3ffe482b3bf", "patch": "@@ -1,3 +1,11 @@\n+2010-06-09  Iain Sandoe  <iains@gcc.gnu.org>\n+\n+\tPR bootstrap/43170\n+\t* tls.m4 (GCC_CHECK_TLS): Add volatile qualifier to the test \n+\treferences.  Move the main () test reference ahead of \n+\tpthread_create().  Add a comment to explain the requirements\n+\tof the test.\n+\n 2010-06-03  Joern Rennecke <joern.rennecke@embecosm.com>\n \t    Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n "}, {"sha": "4e170c8d6aec3194bc1124b7726ae478b0fcdbff", "filename": "config/tls.m4", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbd34b899f1ec8facc25649349cda3ffe482b3bf/config%2Ftls.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbd34b899f1ec8facc25649349cda3ffe482b3bf/config%2Ftls.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/config%2Ftls.m4?ref=dbd34b899f1ec8facc25649349cda3ffe482b3bf", "patch": "@@ -38,11 +38,16 @@ AC_DEFUN([GCC_CHECK_TLS], [\n \tCFLAGS=\"$chktls_save_CFLAGS\"\n \tif test \"X$thread_CFLAGS\" != Xfailed; then\n \t  CFLAGS=\"$thread_CFLAGS $chktls_save_CFLAGS\"\n+ \t  dnl Test for an old glibc bug that violated the __thread property.\n+\t  dnl Use volatile to ensure the compiler won't optimize away pointer\n+\t  dnl accesses it might otherwise assume to be redundant, or reorder \n+\t  dnl them and reuse storage, which might lead to them pointing to\n+\t  dnl the same location.\n \t  AC_RUN_IFELSE(\n \t    [AC_LANG_PROGRAM(\n \t       [#include <pthread.h>\n \t\t__thread int a;\n-\t\tstatic int *a_in_other_thread;\n+\t\tstatic int *volatile a_in_other_thread;\n \t\tstatic void *\n \t\tthread_func (void *arg)\n \t\t{\n@@ -51,11 +56,11 @@ AC_DEFUN([GCC_CHECK_TLS], [\n \t\t}],\n \t       [pthread_t thread;\n \t\tvoid *thread_retval;\n-\t\tint *a_in_main_thread;\n+\t\tint *volatile a_in_main_thread;\n+\t\ta_in_main_thread = &a;\n \t\tif (pthread_create (&thread, (pthread_attr_t *)0,\n \t\t\t\t    thread_func, (void *)0))\n \t\t  return 0;\n-\t\ta_in_main_thread = &a;\n \t\tif (pthread_join (thread, &thread_retval))\n \t\t  return 0;\n \t\treturn (a_in_other_thread == a_in_main_thread);])],"}, {"sha": "c2dfeb147eb915dfd89c416151fc61ac7cc3e633", "filename": "libgomp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbd34b899f1ec8facc25649349cda3ffe482b3bf/libgomp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbd34b899f1ec8facc25649349cda3ffe482b3bf/libgomp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2FChangeLog?ref=dbd34b899f1ec8facc25649349cda3ffe482b3bf", "patch": "@@ -1,3 +1,8 @@\n+2010-06-09  Iain Sandoe  <iains@gcc.gnu.org>\n+\n+\tPR bootstrap/43170\n+\t* configure: Regenerate.\n+\n 2010-05-04  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n \n \tPR other/43620"}, {"sha": "e9b3a656291ec280520a5f8c5c73b4fbb9a83285", "filename": "libgomp/configure", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbd34b899f1ec8facc25649349cda3ffe482b3bf/libgomp%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbd34b899f1ec8facc25649349cda3ffe482b3bf/libgomp%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Fconfigure?ref=dbd34b899f1ec8facc25649349cda3ffe482b3bf", "patch": "@@ -15380,7 +15380,7 @@ else\n /* end confdefs.h.  */\n #include <pthread.h>\n \t\t__thread int a;\n-\t\tstatic int *a_in_other_thread;\n+\t\tstatic int *volatile a_in_other_thread;\n \t\tstatic void *\n \t\tthread_func (void *arg)\n \t\t{\n@@ -15392,11 +15392,11 @@ main ()\n {\n pthread_t thread;\n \t\tvoid *thread_retval;\n-\t\tint *a_in_main_thread;\n+\t\tint *volatile a_in_main_thread;\n+\t\ta_in_main_thread = &a;\n \t\tif (pthread_create (&thread, (pthread_attr_t *)0,\n \t\t\t\t    thread_func, (void *)0))\n \t\t  return 0;\n-\t\ta_in_main_thread = &a;\n \t\tif (pthread_join (thread, &thread_retval))\n \t\t  return 0;\n \t\treturn (a_in_other_thread == a_in_main_thread);"}, {"sha": "55d384b146cc63fd4c333904f40b6b65a7a13b08", "filename": "libjava/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbd34b899f1ec8facc25649349cda3ffe482b3bf/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbd34b899f1ec8facc25649349cda3ffe482b3bf/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=dbd34b899f1ec8facc25649349cda3ffe482b3bf", "patch": "@@ -1,3 +1,8 @@\n+2010-06-09  Iain Sandoe  <iains@gcc.gnu.org>\n+\n+\tPR bootstrap/43170\n+\t* configure: Regenerate.\n+\n 2010-06-03  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n \n \t* configure: Regenerate."}, {"sha": "c20480912da8d23d15cc9da0a7a9f4519fbd394f", "filename": "libjava/configure", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbd34b899f1ec8facc25649349cda3ffe482b3bf/libjava%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbd34b899f1ec8facc25649349cda3ffe482b3bf/libjava%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fconfigure?ref=dbd34b899f1ec8facc25649349cda3ffe482b3bf", "patch": "@@ -24390,7 +24390,7 @@ else\n /* end confdefs.h.  */\n #include <pthread.h>\n \t\t__thread int a;\n-\t\tstatic int *a_in_other_thread;\n+\t\tstatic int *volatile a_in_other_thread;\n \t\tstatic void *\n \t\tthread_func (void *arg)\n \t\t{\n@@ -24402,11 +24402,11 @@ main ()\n {\n pthread_t thread;\n \t\tvoid *thread_retval;\n-\t\tint *a_in_main_thread;\n+\t\tint *volatile a_in_main_thread;\n+\t\ta_in_main_thread = &a;\n \t\tif (pthread_create (&thread, (pthread_attr_t *)0,\n \t\t\t\t    thread_func, (void *)0))\n \t\t  return 0;\n-\t\ta_in_main_thread = &a;\n \t\tif (pthread_join (thread, &thread_retval))\n \t\t  return 0;\n \t\treturn (a_in_other_thread == a_in_main_thread);"}, {"sha": "aa88a7326eb80a5c73adb33b0bfb6ef6c4cbfb42", "filename": "libmudflap/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbd34b899f1ec8facc25649349cda3ffe482b3bf/libmudflap%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbd34b899f1ec8facc25649349cda3ffe482b3bf/libmudflap%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libmudflap%2FChangeLog?ref=dbd34b899f1ec8facc25649349cda3ffe482b3bf", "patch": "@@ -1,3 +1,8 @@\n+2010-06-09  Iain Sandoe  <iains@gcc.gnu.org>\n+\n+\tPR bootstrap/43170\n+\t* configure: Regenerate.\n+\n 2010-05-16  Uros Bizjak  <ubizjak@gmail.com>\n \n \t* testsuite/libmudflap.c/pass46-frag.c (dg-options): Remove -Wall."}, {"sha": "03aec3f37294d17f6c298b5bab768ca1d06792db", "filename": "libmudflap/configure", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbd34b899f1ec8facc25649349cda3ffe482b3bf/libmudflap%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbd34b899f1ec8facc25649349cda3ffe482b3bf/libmudflap%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libmudflap%2Fconfigure?ref=dbd34b899f1ec8facc25649349cda3ffe482b3bf", "patch": "@@ -11479,7 +11479,7 @@ else\n /* end confdefs.h.  */\n #include <pthread.h>\n \t\t__thread int a;\n-\t\tstatic int *a_in_other_thread;\n+\t\tstatic int *volatile a_in_other_thread;\n \t\tstatic void *\n \t\tthread_func (void *arg)\n \t\t{\n@@ -11491,11 +11491,11 @@ main ()\n {\n pthread_t thread;\n \t\tvoid *thread_retval;\n-\t\tint *a_in_main_thread;\n+\t\tint *volatile a_in_main_thread;\n+\t\ta_in_main_thread = &a;\n \t\tif (pthread_create (&thread, (pthread_attr_t *)0,\n \t\t\t\t    thread_func, (void *)0))\n \t\t  return 0;\n-\t\ta_in_main_thread = &a;\n \t\tif (pthread_join (thread, &thread_retval))\n \t\t  return 0;\n \t\treturn (a_in_other_thread == a_in_main_thread);"}, {"sha": "43d13543169a6df30c35fc369d0787cd9050bdc2", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbd34b899f1ec8facc25649349cda3ffe482b3bf/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbd34b899f1ec8facc25649349cda3ffe482b3bf/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=dbd34b899f1ec8facc25649349cda3ffe482b3bf", "patch": "@@ -1,3 +1,8 @@\n+2010-06-09  Iain Sandoe  <iains@gcc.gnu.org>\n+\n+\tPR bootstrap/43170\n+\t* configure: Regenerate.\n+\n 2010-06-09  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR libstdc++/44413"}, {"sha": "06504044fa0bdd1983a5526886c193188ee09b58", "filename": "libstdc++-v3/configure", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbd34b899f1ec8facc25649349cda3ffe482b3bf/libstdc%2B%2B-v3%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbd34b899f1ec8facc25649349cda3ffe482b3bf/libstdc%2B%2B-v3%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfigure?ref=dbd34b899f1ec8facc25649349cda3ffe482b3bf", "patch": "@@ -25548,7 +25548,7 @@ else\n /* end confdefs.h.  */\n #include <pthread.h>\n \t\t__thread int a;\n-\t\tstatic int *a_in_other_thread;\n+\t\tstatic int *volatile a_in_other_thread;\n \t\tstatic void *\n \t\tthread_func (void *arg)\n \t\t{\n@@ -25560,11 +25560,11 @@ main ()\n {\n pthread_t thread;\n \t\tvoid *thread_retval;\n-\t\tint *a_in_main_thread;\n+\t\tint *volatile a_in_main_thread;\n+\t\ta_in_main_thread = &a;\n \t\tif (pthread_create (&thread, (pthread_attr_t *)0,\n \t\t\t\t    thread_func, (void *)0))\n \t\t  return 0;\n-\t\ta_in_main_thread = &a;\n \t\tif (pthread_join (thread, &thread_retval))\n \t\t  return 0;\n \t\treturn (a_in_other_thread == a_in_main_thread);\n@@ -44486,7 +44486,7 @@ else\n /* end confdefs.h.  */\n #include <pthread.h>\n \t\t__thread int a;\n-\t\tstatic int *a_in_other_thread;\n+\t\tstatic int *volatile a_in_other_thread;\n \t\tstatic void *\n \t\tthread_func (void *arg)\n \t\t{\n@@ -44498,11 +44498,11 @@ main ()\n {\n pthread_t thread;\n \t\tvoid *thread_retval;\n-\t\tint *a_in_main_thread;\n+\t\tint *volatile a_in_main_thread;\n+\t\ta_in_main_thread = &a;\n \t\tif (pthread_create (&thread, (pthread_attr_t *)0,\n \t\t\t\t    thread_func, (void *)0))\n \t\t  return 0;\n-\t\ta_in_main_thread = &a;\n \t\tif (pthread_join (thread, &thread_retval))\n \t\t  return 0;\n \t\treturn (a_in_other_thread == a_in_main_thread);\n@@ -50571,7 +50571,7 @@ else\n /* end confdefs.h.  */\n #include <pthread.h>\n \t\t__thread int a;\n-\t\tstatic int *a_in_other_thread;\n+\t\tstatic int *volatile a_in_other_thread;\n \t\tstatic void *\n \t\tthread_func (void *arg)\n \t\t{\n@@ -50583,11 +50583,11 @@ main ()\n {\n pthread_t thread;\n \t\tvoid *thread_retval;\n-\t\tint *a_in_main_thread;\n+\t\tint *volatile a_in_main_thread;\n+\t\ta_in_main_thread = &a;\n \t\tif (pthread_create (&thread, (pthread_attr_t *)0,\n \t\t\t\t    thread_func, (void *)0))\n \t\t  return 0;\n-\t\ta_in_main_thread = &a;\n \t\tif (pthread_join (thread, &thread_retval))\n \t\t  return 0;\n \t\treturn (a_in_other_thread == a_in_main_thread);"}]}