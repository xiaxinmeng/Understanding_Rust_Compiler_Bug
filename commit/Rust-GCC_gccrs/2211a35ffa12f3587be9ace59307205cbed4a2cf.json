{"sha": "2211a35ffa12f3587be9ace59307205cbed4a2cf", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjIxMWEzNWZmYTEyZjM1ODdiZTlhY2U1OTMwNzIwNWNiZWQ0YTJjZg==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-10-17T08:32:25Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-10-17T08:32:25Z"}, "message": "[multiple changes]\n\n2014-10-17  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_ch12.adb: Refine previous change.\n\n2014-10-17  Robert Dewar  <dewar@adacore.com>\n\n\t* prj-conf.adb: Revert previous change.\n\nFrom-SVN: r216369", "tree": {"sha": "fe73fc84f15475150f463a6e8ae08d15131089a2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fe73fc84f15475150f463a6e8ae08d15131089a2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2211a35ffa12f3587be9ace59307205cbed4a2cf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2211a35ffa12f3587be9ace59307205cbed4a2cf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2211a35ffa12f3587be9ace59307205cbed4a2cf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2211a35ffa12f3587be9ace59307205cbed4a2cf/comments", "author": null, "committer": null, "parents": [{"sha": "469fba4ae8a7ebfb93fedc446197787087222c6a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/469fba4ae8a7ebfb93fedc446197787087222c6a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/469fba4ae8a7ebfb93fedc446197787087222c6a"}], "stats": {"total": 71, "additions": 34, "deletions": 37}, "files": [{"sha": "2661f95196c774281e9c36ad79df76a0a478432a", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2211a35ffa12f3587be9ace59307205cbed4a2cf/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2211a35ffa12f3587be9ace59307205cbed4a2cf/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=2211a35ffa12f3587be9ace59307205cbed4a2cf", "patch": "@@ -1,3 +1,7 @@\n+2014-10-17  Robert Dewar  <dewar@adacore.com>\n+\n+\t* prj-conf.adb: Revert previous change.\n+\n 2014-10-17  Robert Dewar  <dewar@adacore.com>\n \n \t* lib-writ.ads, s-valdec.ads: Minor reformatting."}, {"sha": "095c2d1c0204890657fdf68559a6c517bf9903a3", "filename": "gcc/ada/prj-conf.adb", "status": "modified", "additions": 29, "deletions": 36, "changes": 65, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2211a35ffa12f3587be9ace59307205cbed4a2cf/gcc%2Fada%2Fprj-conf.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2211a35ffa12f3587be9ace59307205cbed4a2cf/gcc%2Fada%2Fprj-conf.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-conf.adb?ref=2211a35ffa12f3587be9ace59307205cbed4a2cf", "patch": "@@ -172,7 +172,7 @@ package body Prj.Conf is\n    begin\n       if Config_File = Empty_Node then\n \n-         --  Create a dummy config file if none was found\n+         --  Create a dummy config file is none was found\n \n          Name_Len := Auto_Cgpr'Length;\n          Name_Buffer (1 .. Name_Len) := Auto_Cgpr;\n@@ -587,7 +587,7 @@ package body Prj.Conf is\n           or else\n             (Tgt_Name /= No_Name\n               and then (Length_Of_Name (Tgt_Name) = 0\n-                         or else Target = Get_Name_String (Tgt_Name)));\n+                          or else Target = Get_Name_String (Tgt_Name)));\n \n       if not OK then\n          if Autoconf_Specified then\n@@ -931,8 +931,7 @@ package body Prj.Conf is\n \n          declare\n             Obj_Dir         : constant String := Name_Buffer (1 .. Name_Len);\n-            Config_Switches : Argument_List_Access :=\n-                                new Argument_List'(1 .. 0 => null);\n+            Config_Switches : Argument_List_Access;\n             Db_Switches     : Argument_List_Access;\n             Args            : Argument_List (1 .. 5);\n             Arg_Last        : Positive;\n@@ -980,13 +979,10 @@ package body Prj.Conf is\n                end case;\n             end if;\n \n-            --  If not in Codepeer mode, get the config switches. This should\n-            --  be done only now, as some runtimes may have been found if the\n-            --  Builder switches.\n+            --  Get the config switches. This should be done only now, as some\n+            --  runtimes may have been found if the Builder switches.\n \n-            if not CodePeer_Mode then\n-               Config_Switches := Get_Config_Switches;\n-            end if;\n+            Config_Switches := Get_Config_Switches;\n \n             --  Get eventual --db switches\n \n@@ -1086,11 +1082,12 @@ package body Prj.Conf is\n                Write_Eol;\n \n             elsif not Quiet_Output then\n-\n                --  Display no message if we are creating auto.cgpr, unless in\n-               --  verbose mode.\n+               --  verbose mode\n \n-               if Config_File_Name'Length > 0 or else Verbose_Mode then\n+               if Config_File_Name'Length > 0\n+                 or else Verbose_Mode\n+               then\n                   Write_Str (\"creating \");\n                   Write_Str (Simple_Name (Args (3).all));\n                   Write_Eol;\n@@ -1303,7 +1300,8 @@ package body Prj.Conf is\n                Config_Command : constant String :=\n                                   \"--config=\" & Get_Name_String (Name);\n \n-               Runtime_Name : constant String := Runtime_Name_For (Name);\n+               Runtime_Name   : constant String :=\n+                                  Runtime_Name_For (Name);\n \n             begin\n                if Variable = Nil_Variable_Value\n@@ -1323,14 +1321,14 @@ package body Prj.Conf is\n                      if Is_Absolute_Path (Compiler_Command) then\n                         Result (Count) :=\n                           new String'\n-                            (Config_Command & \",,\" & Runtime_Name & \",\"\n-                             & Containing_Directory (Compiler_Command) & \",\"\n-                             & Simple_Name (Compiler_Command));\n+                            (Config_Command & \",,\" & Runtime_Name & \",\" &\n+                             Containing_Directory (Compiler_Command) & \",\" &\n+                             Simple_Name (Compiler_Command));\n                      else\n                         Result (Count) :=\n                           new String'\n-                            (Config_Command & \",,\" & Runtime_Name & \",,\"\n-                             & Compiler_Command);\n+                            (Config_Command & \",,\" & Runtime_Name & \",,\" &\n+                             Compiler_Command);\n                      end if;\n                   end;\n                end if;\n@@ -1352,14 +1350,20 @@ package body Prj.Conf is\n \n       begin\n          Variable :=\n-           Value_Of (Name_Source_Dirs, Project.Decl.Attributes, Shared);\n+           Value_Of\n+             (Name_Source_Dirs,\n+              Project.Decl.Attributes,\n+              Shared);\n \n          if Variable = Nil_Variable_Value\n            or else Variable.Default\n            or else Variable.Values /= Nil_String\n          then\n             Variable :=\n-              Value_Of (Name_Source_Files, Project.Decl.Attributes, Shared);\n+              Value_Of\n+                (Name_Source_Files,\n+                 Project.Decl.Attributes,\n+                 Shared);\n             return Variable = Nil_Variable_Value\n               or else Variable.Default\n               or else Variable.Values /= Nil_String;\n@@ -1369,13 +1373,9 @@ package body Prj.Conf is\n          end if;\n       end Might_Have_Sources;\n \n-      --  Local Variables\n-\n       Success             : Boolean;\n       Config_Project_Node : Project_Node_Id := Empty_Node;\n \n-   --  Start of processing for Get_Or_Create_Configuration_File\n-\n    begin\n       pragma Assert (Prj.Env.Is_Initialized (Env.Project_Path));\n \n@@ -1472,7 +1472,9 @@ package body Prj.Conf is\n             On_New_Tree_Loaded     => null);\n       end if;\n \n-      if Config_Project_Node = Empty_Node or else Config = No_Project then\n+      if Config_Project_Node = Empty_Node\n+        or else Config = No_Project\n+      then\n          Raise_Invalid_Config\n            (\"processing of configuration project \"\"\"\n             & Config_File_Path.all & \"\"\" failed\");\n@@ -1592,16 +1594,6 @@ package body Prj.Conf is\n       Main_Project := No_Project;\n       Automatically_Generated := False;\n \n-      --  Need a comment here saying why CodePeer mode is different ???\n-\n-      if CodePeer_Mode or else Target_Name = \"\" then\n-         Opt.Target_Value  := new String'(Normalized_Hostname);\n-         Opt.Target_Origin := Default;\n-      else\n-         Opt.Target_Value  := new String'(Target_Name);\n-         Opt.Target_Origin := Specified;\n-      end if;\n-\n       Prj.Part.Parse\n         (In_Tree           => Project_Node_Tree,\n          Project           => User_Project_Node,\n@@ -1614,6 +1606,7 @@ package body Prj.Conf is\n          Implicit_Project  => Implicit_Project);\n \n       if User_Project_Node = Empty_Node then\n+         User_Project_Node := Empty_Node;\n          return;\n       end if;\n "}, {"sha": "c9738cc66c4001f2ccef893d76374de627ed824b", "filename": "gcc/ada/sem_ch12.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2211a35ffa12f3587be9ace59307205cbed4a2cf/gcc%2Fada%2Fsem_ch12.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2211a35ffa12f3587be9ace59307205cbed4a2cf/gcc%2Fada%2Fsem_ch12.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch12.adb?ref=2211a35ffa12f3587be9ace59307205cbed4a2cf", "patch": "@@ -1077,7 +1077,7 @@ package body Sem_Ch12 is\n                    Prefix         =>\n                      Make_Identifier (Loc, Chars (Etype (Etype (F)))));\n             else\n-               Parm_Type := Make_Identifier (Loc, Chars (Etype (F)));\n+               Parm_Type := New_Occurrence_Of (Etype (F), Loc);\n             end if;\n \n             Append_To (Profile,"}]}