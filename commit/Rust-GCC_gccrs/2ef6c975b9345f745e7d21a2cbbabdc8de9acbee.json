{"sha": "2ef6c975b9345f745e7d21a2cbbabdc8de9acbee", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmVmNmM5NzViOTM0NWY3NDVlN2QyMWEyY2JiYWJkYzhkZTlhY2JlZQ==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2003-03-24T18:20:12Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2003-03-24T18:20:12Z"}, "message": "re PR c++/10026 (ICE on incomplete type)\n\ncp:\n\tPR c++/10026\n\t* decl2.c (arg_assoc_type) [ERROR_MARK]: Don't die.\ntestsuite:\n\tPR c++/10026\n\t* g++.dg/lookup/koenig1.C: New test.\n\n\tPR C++/10199\n\t* g++.dg/lookup/template2.C: New test.\n\nFrom-SVN: r64809", "tree": {"sha": "9428069c2d293eff9d76d9d9ce3a2754b4f311bf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9428069c2d293eff9d76d9d9ce3a2754b4f311bf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2ef6c975b9345f745e7d21a2cbbabdc8de9acbee", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2ef6c975b9345f745e7d21a2cbbabdc8de9acbee", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2ef6c975b9345f745e7d21a2cbbabdc8de9acbee", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2ef6c975b9345f745e7d21a2cbbabdc8de9acbee/comments", "author": null, "committer": null, "parents": [{"sha": "f89283915de8e381764e7283ac11a1680ede0869", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f89283915de8e381764e7283ac11a1680ede0869", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f89283915de8e381764e7283ac11a1680ede0869"}], "stats": {"total": 70, "additions": 65, "deletions": 5}, "files": [{"sha": "5ffb1440a5f477dd22301c2aa9a9d07349750075", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 11, "deletions": 5, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ef6c975b9345f745e7d21a2cbbabdc8de9acbee/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ef6c975b9345f745e7d21a2cbbabdc8de9acbee/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=2ef6c975b9345f745e7d21a2cbbabdc8de9acbee", "patch": "@@ -1,7 +1,13 @@\n+2003-03-24  Nathan Sidwell  <nathan@codesourcery.com>\n+\n+\tPR c++/10026\n+\t* decl2.c (arg_assoc_type) [ERROR_MARK]: Don't die.\n+\n 2003-03-23  Mark Mitchell  <mark@codesourcery.com>\n \n \tPR c++/7086\n-\t* typeck.c (cxx_mark_addressable): Likewise.\n+\t* typeck.c (cxx_mark_addressable):  Adjust call to\n+\tgen_mem_addressof or put_var_into_stack.\n \n 2003-03-22  Nathan Sidwell  <nathan@codesourcery.com>\n \n@@ -647,10 +653,10 @@\n \n 2003-02-26  Devang Patel  <dpatel@apple.com>\n \n-\t* decl.c (finish_enum): Merge two 'for' loops. Copy value node if required.\n-\tPostpone enum setting for template decls.\n-\t(build_enumerator): Delay copying value node until finish_enum (). Remove\n-\t#if 0'ed code.\n+\t* decl.c (finish_enum): Merge two 'for' loops. Copy value node if\n+\trequired.  Postpone enum setting for template decls.\n+\t(build_enumerator): Delay copying value node until finish_enum\n+\t(). Remove #if 0'ed code.\n \t* pt.c (tsubst_enum): Set TREE_TYPE and copy value node.\n \t(tsubst_copy): Add check for enum type.\n "}, {"sha": "9f5e27eec903c09e7c13b2924c5a4579a2a7b1a0", "filename": "gcc/cp/decl2.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ef6c975b9345f745e7d21a2cbbabdc8de9acbee/gcc%2Fcp%2Fdecl2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ef6c975b9345f745e7d21a2cbbabdc8de9acbee/gcc%2Fcp%2Fdecl2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl2.c?ref=2ef6c975b9345f745e7d21a2cbbabdc8de9acbee", "patch": "@@ -3986,6 +3986,8 @@ arg_assoc_type (struct arg_lookup *k, tree type)\n {\n   switch (TREE_CODE (type))\n     {\n+    case ERROR_MARK:\n+      return false;\n     case VOID_TYPE:\n     case INTEGER_TYPE:\n     case REAL_TYPE:"}, {"sha": "a402ba0619391304b0d23d7fbf7de950ae691043", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ef6c975b9345f745e7d21a2cbbabdc8de9acbee/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ef6c975b9345f745e7d21a2cbbabdc8de9acbee/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=2ef6c975b9345f745e7d21a2cbbabdc8de9acbee", "patch": "@@ -1,3 +1,11 @@\n+2003-03-24  Nathan Sidwell  <nathan@codesourcery.com>\n+\n+\tPR c++/10026\n+\t* g++.dg/lookup/koenig1.C: New test.\n+\n+\tPR C++/10199\n+\t* g++.dg/lookup/template2.C: New test.\n+\n 2003-03-24  Jakub Jelinek  <jakub@redhat.com>\n \n \t* g++.dg/opt/rtti1.C: New test."}, {"sha": "697a322e3fb65ca3917fa680aaf795286a2fa257", "filename": "gcc/testsuite/g++.dg/lookup/koenig1.C", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ef6c975b9345f745e7d21a2cbbabdc8de9acbee/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Fkoenig1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ef6c975b9345f745e7d21a2cbbabdc8de9acbee/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Fkoenig1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Fkoenig1.C?ref=2ef6c975b9345f745e7d21a2cbbabdc8de9acbee", "patch": "@@ -0,0 +1,13 @@\n+// { dg-do compile }\n+\n+// Copyright (C) 2003 Free Software Foundation, Inc.\n+// Contributed by Nathan Sidwell 24 Mar 2003 <nathan@codesourcery.com>\n+\n+// PR 10026. We ICE'd\n+\n+class X;\n+\n+void foo() {\n+  X x(1); // { dg-error \"incomplete type\" \"\" }\n+  bar(x); // { dg-error \"undeclared\" \"\" }\n+}"}, {"sha": "0e8921261e89515477ddf5ddea5735301293c332", "filename": "gcc/testsuite/g++.dg/lookup/template2.C", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ef6c975b9345f745e7d21a2cbbabdc8de9acbee/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Ftemplate2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ef6c975b9345f745e7d21a2cbbabdc8de9acbee/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Ftemplate2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Ftemplate2.C?ref=2ef6c975b9345f745e7d21a2cbbabdc8de9acbee", "patch": "@@ -0,0 +1,31 @@\n+// { dg-do compile }\n+\n+// Copyright (C) 2003 Free Software Foundation, Inc.\n+// Contributed by Nathan Sidwell 24 Mar 2003 <nathan@codesourcery.com>\n+\n+// PR 10199. Lookup problems\n+\n+class X {\n+public:\n+  template<int d>\n+  int bar ();\n+};\n+\n+template<int x>\n+int fooo ();\n+\n+template<class T>\n+void bar (T& g)\n+{\n+  int kk = fooo<17>();  // OK\n+  X x;\n+  int k = x.bar<17>();  // Not OK\n+}\n+\n+int main ()\n+{\n+  X x;\n+  int k=x.bar<17>();    // OK\n+  int n;\n+  bar(n);\n+}"}]}