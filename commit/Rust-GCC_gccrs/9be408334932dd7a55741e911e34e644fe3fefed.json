{"sha": "9be408334932dd7a55741e911e34e644fe3fefed", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWJlNDA4MzM0OTMyZGQ3YTU1NzQxZTkxMWUzNGU2NDRmZTNmZWZlZA==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2002-04-12T07:52:05Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2002-04-12T07:52:05Z"}, "message": "re PR bootstrap/4191 (GCC does not build for d30v-elf - needs tweaking for crtstuff.c changes)\n\n        PR bootstrap/4191\n        * config/d30v/d30v.h (INIT_SECTION_ASM_OP): Don't undef.\n\n        * flow.c (mark_used_reg): Manage reg_cond_dead properly for\n        modes spanning multiple hard regs.\n\n        * recog.c (peephole2_optimize): Rebuild jump labels as needed.\n\nFrom-SVN: r52205", "tree": {"sha": "30d336ac36e5d65e0f68d3dc7b5ef3da92af21cd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/30d336ac36e5d65e0f68d3dc7b5ef3da92af21cd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9be408334932dd7a55741e911e34e644fe3fefed", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9be408334932dd7a55741e911e34e644fe3fefed", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9be408334932dd7a55741e911e34e644fe3fefed", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9be408334932dd7a55741e911e34e644fe3fefed/comments", "author": null, "committer": null, "parents": [{"sha": "c58c6b73f4b6809371be28bd5c166ca3f67f132c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c58c6b73f4b6809371be28bd5c166ca3f67f132c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c58c6b73f4b6809371be28bd5c166ca3f67f132c"}], "stats": {"total": 66, "additions": 46, "deletions": 20}, "files": [{"sha": "5d8aecb3c385de30abecbcce0d25bc9fc4652259", "filename": "gcc/ChangeLog", "status": "modified", "additions": 20, "deletions": 10, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9be408334932dd7a55741e911e34e644fe3fefed/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9be408334932dd7a55741e911e34e644fe3fefed/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9be408334932dd7a55741e911e34e644fe3fefed", "patch": "@@ -1,3 +1,13 @@\n+2002-04-12  Richard Henderson  <rth@redhat.com>\n+\n+\tPR bootstrap/4191\n+\t* config/d30v/d30v.h (INIT_SECTION_ASM_OP): Don't undef.\n+\n+\t* flow.c (mark_used_reg): Manage reg_cond_dead properly for\n+\tmodes spanning multiple hard regs.\n+    \n+\t* recog.c (peephole2_optimize): Rebuild jump labels as needed.\n+\n 2002-04-11  John David Anglin  <dave@hiauly1.hia.nrc.ca>\n \n \t* pa.c (pa_output_function_prologue): Don't accumulate the total\n@@ -85,7 +95,7 @@\n \t* config/alpha/openbsd.h: Do not directly include alpha/alpha.h.\n \t* config/alpha/vms.h: Likewise.\n \n-2002-04-11  Richard Sandiford  <rsand\n+2002-04-11  Richard Sandiford  <rsandifo@redhat.com>\n \n \t* doc/extend.texi: Remove old claim that typedefs cannot have\n \tan alignment attribute.\n@@ -800,7 +810,7 @@ objc:\n \t* protoize.c: Match include directory usage with cppdefault.c.\n \n 2002-04-03  Jeffrey A Law  (law@redhat.com)\n-            Hans-Peter Nilsson  <hp@bitrange.com>\n+\t    Hans-Peter Nilsson  <hp@bitrange.com>\n \n \t* combine.c (simplify_comparison): Avoid narrowing a comparison\n \twith a paradoxical subreg when doing so would drop signficant bits.\n@@ -878,7 +888,7 @@ Tue Apr  2 06:47:40 2002  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n 2002-04-01  Vladimir Makarov  <vmakarov@redhat.com>\n \n \t* config/pa/pa-pro-end.h (ASM_OUTPUT_ALIGNED_COMMON,\n-        ASM_OUTPUT_ALIGNED_LOCAL): Redefine them.\n+\tASM_OUTPUT_ALIGNED_LOCAL): Redefine them.\n \n 2002-04-01  Neil Booth  <neil@daikokuya.demon.co.uk>\n \n@@ -899,8 +909,8 @@ objc:\n \n 2002-04-01  Bob Wilson  <bob.wilson@acm.org>\n \n-        * config/xtensa/xtensa.c (xtensa_va_arg): Fix compiler warning\n-        in previous change.\n+\t* config/xtensa/xtensa.c (xtensa_va_arg): Fix compiler warning\n+\tin previous change.\n \n 2002-04-01  Bob Wilson  <bob.wilson@acm.org>\n \n@@ -1053,7 +1063,7 @@ Sun Mar 31 14:43:24 2002  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n \n \t* libgcc2.c (__bb_exit_func): Make static.\n \n-        * config/alpha/alpha.md (trap): New.\n+\t* config/alpha/alpha.md (trap): New.\n \n 2002-03-31  Richard Henderson  <rth@redhat.com>\n \n@@ -1081,11 +1091,11 @@ Sun Mar 31 14:43:24 2002  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n \t* config/sparc/linux64.h (HANDLE_PRAGMA_PACK_PUSH_POP): Likewise.\n \n 2002-03-30  Roger Sayle <roger@eyesopen.com>\n-            Richard Henderson  <rth@redhat.com>\n+\t    Richard Henderson  <rth@redhat.com>\n \n-        * regmove.c (combine_stack_adjustments_for_block): Avoid\n-        emitting a stack adjustment of zero bytes.  Let delete_insn\n-        update bb->head.\n+\t* regmove.c (combine_stack_adjustments_for_block): Avoid\n+\temitting a stack adjustment of zero bytes.  Let delete_insn\n+\tupdate bb->head.\n \n 2002-03-30  Richard Henderson  <rth@redhat.com>\n "}, {"sha": "41eceb575e131d62777f0d3b74ecbed15066be77", "filename": "gcc/config/d30v/d30v.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9be408334932dd7a55741e911e34e644fe3fefed/gcc%2Fconfig%2Fd30v%2Fd30v.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9be408334932dd7a55741e911e34e644fe3fefed/gcc%2Fconfig%2Fd30v%2Fd30v.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fd30v%2Fd30v.h?ref=9be408334932dd7a55741e911e34e644fe3fefed", "patch": "@@ -3357,7 +3357,6 @@ do {\t\t\t\t\t\t\t\t\t\\\n \n    Defined in svr4.h.  */\n /* #define INIT_SECTION_ASM_OP */\n-#undef INIT_SECTION_ASM_OP\n \n /* If defined, `main' will not call `__main' as described above.  This macro\n    should be defined for systems that control the contents of the init section"}, {"sha": "627c28550fe90cbf3c82c2378f743c81c6606520", "filename": "gcc/flow.c", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9be408334932dd7a55741e911e34e644fe3fefed/gcc%2Fflow.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9be408334932dd7a55741e911e34e644fe3fefed/gcc%2Fflow.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fflow.c?ref=9be408334932dd7a55741e911e34e644fe3fefed", "patch": "@@ -3610,6 +3610,10 @@ mark_used_reg (pbi, reg, cond, insn)\n   /* Mark the register as being live.  */\n   for (i = regno_first; i <= regno_last; ++i)\n     {\n+#ifdef HAVE_conditional_execution\n+      int this_was_live = REGNO_REG_SET_P (pbi->reg_live, i);\n+#endif\n+\n       SET_REGNO_REG_SET (pbi->reg_live, i);\n \n #ifdef HAVE_conditional_execution\n@@ -3621,7 +3625,7 @@ mark_used_reg (pbi, reg, cond, insn)\n \t  struct reg_cond_life_info *rcli;\n \t  rtx ncond;\n \n-\t  if (some_was_live)\n+\t  if (this_was_live)\n \t    {\n \t      node = splay_tree_lookup (pbi->reg_cond_dead, i);\n \t      if (node == NULL)\n@@ -3663,7 +3667,7 @@ mark_used_reg (pbi, reg, cond, insn)\n \t      SET_REGNO_REG_SET (pbi->reg_cond_reg, REGNO (XEXP (cond, 0)));\n \t    }\n \t}\n-      else if (some_was_live)\n+      else if (this_was_live)\n \t{\n \t  /* The register may have been conditionally live previously, but\n \t     is now unconditionally live.  Remove it from the conditionally"}, {"sha": "7987d20ea88c7dea082995628f172f87162986dc", "filename": "gcc/recog.c", "status": "modified", "additions": 20, "deletions": 7, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9be408334932dd7a55741e911e34e644fe3fefed/gcc%2Frecog.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9be408334932dd7a55741e911e34e644fe3fefed/gcc%2Frecog.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frecog.c?ref=9be408334932dd7a55741e911e34e644fe3fefed", "patch": "@@ -3003,6 +3003,7 @@ peephole2_optimize (dump_file)\n   bool changed;\n #endif\n   bool do_cleanup_cfg = false;\n+  bool do_rebuild_jump_labels = false;\n \n   /* Initialize the regsets we're going to use.  */\n   for (i = 0; i < MAX_INSNS_PER_PEEP2 + 1; ++i)\n@@ -3045,7 +3046,7 @@ peephole2_optimize (dump_file)\n \t  prev = PREV_INSN (insn);\n \t  if (INSN_P (insn))\n \t    {\n-\t      rtx try, before_try;\n+\t      rtx try, before_try, x;\n \t      int match_len;\n \t      rtx note;\n \n@@ -3139,7 +3140,6 @@ peephole2_optimize (dump_file)\n \t\t  /* Re-insert the EH_REGION notes.  */\n \t\t  if (note)\n \t\t    {\n-\t\t      rtx x;\n \t\t      edge eh_edge;\n \n \t\t      for (eh_edge = bb->succ; eh_edge\n@@ -3209,25 +3209,35 @@ peephole2_optimize (dump_file)\n \t\t  COPY_REG_SET (live, peep2_insn_data[i].live_before);\n \n \t\t  /* Update life information for the new sequence.  */\n+\t\t  x = try;\n \t\t  do\n \t\t    {\n-\t\t      if (INSN_P (try))\n+\t\t      if (INSN_P (x))\n \t\t\t{\n \t\t\t  if (--i < 0)\n \t\t\t    i = MAX_INSNS_PER_PEEP2;\n-\t\t\t  peep2_insn_data[i].insn = try;\n-\t\t\t  propagate_one_insn (pbi, try);\n+\t\t\t  peep2_insn_data[i].insn = x;\n+\t\t\t  propagate_one_insn (pbi, x);\n \t\t\t  COPY_REG_SET (peep2_insn_data[i].live_before, live);\n \t\t\t}\n-\t\t      try = PREV_INSN (try);\n+\t\t      x = PREV_INSN (x);\n \t\t    }\n-\t\t  while (try != prev);\n+\t\t  while (x != prev);\n \n \t\t  /* ??? Should verify that LIVE now matches what we\n \t\t     had before the new sequence.  */\n \n \t\t  peep2_current = i;\n #endif\n+\n+\t\t  /* If we generated a jump instruction, it won't have\n+\t\t     JUMP_LABEL set.  Recompute after we're done.  */\n+\t\t  for (x = try; x != before_try; x = PREV_INSN (x))\n+\t\t    if (GET_CODE (x) == JUMP_INSN)\n+\t\t      {\n+\t\t        do_rebuild_jump_labels = true;\n+\t\t\tbreak;\n+\t\t      }\n \t\t}\n \t    }\n \n@@ -3242,6 +3252,9 @@ peephole2_optimize (dump_file)\n     FREE_REG_SET (peep2_insn_data[i].live_before);\n   FREE_REG_SET (live);\n \n+  if (do_rebuild_jump_labels)\n+    rebuild_jump_labels (get_insns ());\n+\n   /* If we eliminated EH edges, we may be able to merge blocks.  Further,\n      we've changed global life since exception handlers are no longer\n      reachable.  */"}]}