{"sha": "b96257b6df86d010bb9b2487c09364699b0bbcea", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Yjk2MjU3YjZkZjg2ZDAxMGJiOWIyNDg3YzA5MzY0Njk5YjBiYmNlYQ==", "commit": {"author": {"name": "Mike Stump", "email": "mrs@gcc.gnu.org", "date": "1997-06-12T19:23:12Z"}, "committer": {"name": "Mike Stump", "email": "mrs@gcc.gnu.org", "date": "1997-06-12T19:23:12Z"}, "message": "tree.c (unsave_expr_now): Avoid recursing into the parts of the tree that are RTL.\n\n\t* tree.c (unsave_expr_now): Avoid recursing into the parts of\n \tthe tree that are RTL.\n\nFrom-SVN: r14230", "tree": {"sha": "0516ac989f6b21d40215438522c2a925909a8ca7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0516ac989f6b21d40215438522c2a925909a8ca7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b96257b6df86d010bb9b2487c09364699b0bbcea", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b96257b6df86d010bb9b2487c09364699b0bbcea", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b96257b6df86d010bb9b2487c09364699b0bbcea", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b96257b6df86d010bb9b2487c09364699b0bbcea/comments", "author": null, "committer": null, "parents": [{"sha": "f5546425e91646b6997ed7ceb397f84db9b26271", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f5546425e91646b6997ed7ceb397f84db9b26271", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f5546425e91646b6997ed7ceb397f84db9b26271"}], "stats": {"total": 16, "additions": 15, "deletions": 1}, "files": [{"sha": "4bdfa0053d6c65fb9d33c60f76fb01595d492c98", "filename": "gcc/tree.c", "status": "modified", "additions": 15, "deletions": 1, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b96257b6df86d010bb9b2487c09364699b0bbcea/gcc%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b96257b6df86d010bb9b2487c09364699b0bbcea/gcc%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.c?ref=b96257b6df86d010bb9b2487c09364699b0bbcea", "patch": "@@ -2316,15 +2316,18 @@ unsave_expr_now (expr)\n {\n   enum tree_code code;\n   register int i;\n+  int first_rtl;\n \n   if (expr == NULL_TREE)\n     return expr;\n \n   code = TREE_CODE (expr);\n+  first_rtl = tree_code_length [(int) code];\n   switch (code)\n     {\n     case SAVE_EXPR:\n       SAVE_EXPR_RTL (expr) = 0;\n+      first_rtl = 2;\n       break;\n \n     case TARGET_EXPR:\n@@ -2336,6 +2339,7 @@ unsave_expr_now (expr)\n       /* I don't yet know how to emit a sequence multiple times.  */\n       if (RTL_EXPR_SEQUENCE (expr) != 0)\n \tabort ();\n+      first_rtl = 0;\n       break;\n \n     case CALL_EXPR:\n@@ -2350,6 +2354,16 @@ unsave_expr_now (expr)\n \t      exp = TREE_CHAIN (exp);\n \t    }\n \t}\n+      first_rtl = 2;\n+      break;\n+\n+    case WITH_CLEANUP_EXPR:\n+      /* Should be defined to be 2.  */\n+      first_rtl = 1;\n+      break;\n+\n+    case METHOD_CALL_EXPR:\n+      first_rtl = 3;\n       break;\n     }\n \n@@ -2368,7 +2382,7 @@ unsave_expr_now (expr)\n     case '<':  /* a comparison expression */\n     case '2':  /* a binary arithmetic expression */\n     case '1':  /* a unary arithmetic expression */\n-      for (i = tree_code_length[(int) code] - 1; i >= 0; i--)\n+      for (i = first_rtl - 1; i >= 0; i--)\n \tunsave_expr_now (TREE_OPERAND (expr, i));\n       return expr;\n "}]}