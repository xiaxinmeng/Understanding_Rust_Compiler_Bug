{"sha": "efc3536f46d9c96daf1f12b587edc583445c3902", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWZjMzUzNmY0NmQ5Yzk2ZGFmMWYxMmI1ODdlZGM1ODM0NDVjMzkwMg==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2016-03-31T08:49:09Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2016-03-31T08:49:09Z"}, "message": "re PR c++/70430 (Incorrect result for logical \"and\" operation with mixed vector and scalar)\n\n2016-03-31  Richard Biener  <rguenther@suse.de>\n\n\tPR c++/70430\n\t* typeck.c (cp_build_binary_op): Fix operand order of vector\n\tconditional in truth op handling.\n\n\t* g++.dg/ext/vector30.C: New testcase.\n\nFrom-SVN: r234611", "tree": {"sha": "809367d602e54509895a49dd738cec6ce2c7c8fb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/809367d602e54509895a49dd738cec6ce2c7c8fb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/efc3536f46d9c96daf1f12b587edc583445c3902", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/efc3536f46d9c96daf1f12b587edc583445c3902", "html_url": "https://github.com/Rust-GCC/gccrs/commit/efc3536f46d9c96daf1f12b587edc583445c3902", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/efc3536f46d9c96daf1f12b587edc583445c3902/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "4a4932eefd08070d9ef5d5fa79c9d343e876fd01", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4a4932eefd08070d9ef5d5fa79c9d343e876fd01", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4a4932eefd08070d9ef5d5fa79c9d343e876fd01"}], "stats": {"total": 28, "additions": 27, "deletions": 1}, "files": [{"sha": "96f02210aa91c42aaa96dbe6fcb8dc6211eca532", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/efc3536f46d9c96daf1f12b587edc583445c3902/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/efc3536f46d9c96daf1f12b587edc583445c3902/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=efc3536f46d9c96daf1f12b587edc583445c3902", "patch": "@@ -1,3 +1,9 @@\n+2016-03-31  Richard Biener  <rguenther@suse.de>\n+\n+\tPR c++/70430\n+\t* typeck.c (cp_build_binary_op): Fix operand order of vector\n+\tconditional in truth op handling.\n+\n 2016-03-29  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/70353"}, {"sha": "9e61090f57bfa23f80fcddacd026a4efef5f0d4f", "filename": "gcc/cp/typeck.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/efc3536f46d9c96daf1f12b587edc583445c3902/gcc%2Fcp%2Ftypeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/efc3536f46d9c96daf1f12b587edc583445c3902/gcc%2Fcp%2Ftypeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck.c?ref=efc3536f46d9c96daf1f12b587edc583445c3902", "patch": "@@ -4364,7 +4364,7 @@ cp_build_binary_op (location_t location,\n \t    {\n \t      tree m1 = build_all_ones_cst (TREE_TYPE (op0));\n \t      tree z = build_zero_cst (TREE_TYPE (op0));\n-\t      op1 = build_conditional_expr (location, op1, z, m1, complain);\n+\t      op1 = build_conditional_expr (location, op1, m1, z, complain);\n \t    }\n \t  else if (!COMPARISON_CLASS_P (op1))\n \t    op1 = cp_build_binary_op (EXPR_LOCATION (op1), NE_EXPR, op1,"}, {"sha": "7df13570e3dcbc42d8a97cef5facd512b215a1ca", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/efc3536f46d9c96daf1f12b587edc583445c3902/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/efc3536f46d9c96daf1f12b587edc583445c3902/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=efc3536f46d9c96daf1f12b587edc583445c3902", "patch": "@@ -1,3 +1,8 @@\n+2016-03-31  Richard Biener  <rguenther@suse.de>\n+\n+\tPR c++/70430\n+\t* g++.dg/ext/vector30.C: New testcase.\n+\n 2016-03-30  Dominique d'Humieres  <dominiq@lps.ens.fr>\n \t    Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n "}, {"sha": "68326e3db5b8ec476afde4ff716cfc27345cada7", "filename": "gcc/testsuite/g++.dg/ext/vector30.C", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/efc3536f46d9c96daf1f12b587edc583445c3902/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fvector30.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/efc3536f46d9c96daf1f12b587edc583445c3902/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fvector30.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fvector30.C?ref=efc3536f46d9c96daf1f12b587edc583445c3902", "patch": "@@ -0,0 +1,15 @@\n+// PR c++/70430\n+// { dg-do run }\n+extern \"C\" void abort (void);\n+typedef int v4si __attribute__ ((vector_size (16)));\n+int main()\n+{\n+  v4si b = {1,0,-1,2}, c;\n+  c = b && 1;\n+  if (c[0] != -1 || c[1] != 0 || c[2] != -1 || c[3] != -1)\n+    abort ();\n+  c = b && 0;\n+  if (c[0] != 0 || c[1] != 0 || c[2] != 0 || c[3] != 0)\n+    abort ();\n+  return 0;\n+}"}]}