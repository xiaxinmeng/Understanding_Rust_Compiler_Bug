{"sha": "a9835599fdb56f33da23e4514a9e21d8c2d51d71", "node_id": "C_kwDOANBUbNoAKGE5ODM1NTk5ZmRiNTZmMzNkYTIzZTQ1MTRhOWUyMWQ4YzJkNTFkNzE", "commit": {"author": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2023-03-14T00:17:05Z"}, "committer": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2023-03-14T00:17:05Z"}, "message": "Daily bump.", "tree": {"sha": "3ad62be959c45e1eb3528de6b8585888ac637ba5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3ad62be959c45e1eb3528de6b8585888ac637ba5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a9835599fdb56f33da23e4514a9e21d8c2d51d71", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a9835599fdb56f33da23e4514a9e21d8c2d51d71", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a9835599fdb56f33da23e4514a9e21d8c2d51d71", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a9835599fdb56f33da23e4514a9e21d8c2d51d71/comments", "author": null, "committer": null, "parents": [{"sha": "370298f493020eeff48bc2e56463c1097ed67b1d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/370298f493020eeff48bc2e56463c1097ed67b1d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/370298f493020eeff48bc2e56463c1097ed67b1d"}], "stats": {"total": 6413, "additions": 6412, "deletions": 1}, "files": [{"sha": "c9c7a6f2e3163ebe06560132a04b6f6d04fab83b", "filename": "contrib/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9835599fdb56f33da23e4514a9e21d8c2d51d71/contrib%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9835599fdb56f33da23e4514a9e21d8c2d51d71/contrib%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2FChangeLog?ref=a9835599fdb56f33da23e4514a9e21d8c2d51d71", "patch": "@@ -1,3 +1,12 @@\n+2023-03-13  Lewis Hyatt  <lhyatt@gmail.com>\n+\n+\t* unicode/DerivedCoreProperties.txt: Update to Unicode 15.\n+\t* unicode/DerivedNormalizationProps.txt: Likewise.\n+\t* unicode/EastAsianWidth.txt: Likwise.\n+\t* unicode/PropList.txt: Likewise.\n+\t* unicode/README: Likewise.\n+\t* unicode/UnicodeData.txt: Likewise.\n+\n 2023-02-22  Thomas Schwinge  <thomas@codesourcery.com>\n \n \t* config-list.mk (LIST): Clarify i686-symbolics-gnu to i686-gnu."}, {"sha": "8a0e911974d0b37d726a15430f1f26d756c3a633", "filename": "gcc/ChangeLog", "status": "modified", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9835599fdb56f33da23e4514a9e21d8c2d51d71/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9835599fdb56f33da23e4514a9e21d8c2d51d71/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a9835599fdb56f33da23e4514a9e21d8c2d51d71", "patch": "@@ -1,3 +1,43 @@\n+2023-03-13  Max Filippov  <jcmvbkbc@gmail.com>\n+\n+\t* config/xtensa/linux.h (TARGET_ASM_FILE_END): New macro.\n+\n+2023-03-13  Sean Bright  <sean@seanbright.com>\n+\n+\t* doc/invoke.texi (Warning Options): Remove errant 'See'\n+\tbefore @xref.\n+\n+2023-03-13  Takayuki 'January June' Suwa  <jjsuwa_sys3175@yahoo.co.jp>\n+\n+\t* config/xtensa/xtensa.h (REG_OK_STRICT, REG_OK_FOR_INDEX_P,\n+\tREG_OK_FOR_BASE_P): Remove.\n+\n+2023-03-13  Ju-Zhe Zhong  <juzhe.zhong@rivai.ai>\n+\n+\t* config/riscv/vector-iterators.md (=vd,vr): Fine tune.\n+\t(=vd,vd,vr,vr): Ditto.\n+\t* config/riscv/vector.md: Ditto.\n+\n+2023-03-13  Ju-Zhe Zhong  <juzhe.zhong@rivai.ai>\n+\n+\t* config/riscv/riscv-vector-builtins.cc\n+\t(function_expander::use_compare_insn): Add operand predicate check.\n+\n+2023-03-13  Ju-Zhe Zhong  <juzhe.zhong@rivai.ai>\n+\n+\t* config/riscv/vector.md: Fine tune RA constraints.\n+\n+2023-03-13  Tobias Burnus  <tobias@codesourcery.com>\n+\n+\t* config/gcn/mkoffload.cc (main): Pass -save-temps on for the\n+\thsaco assemble/link.\n+\n+2023-03-13  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/109046\n+\t* tree-ssa-forwprop.cc (pass_forwprop::execute): Combine\n+\tpiecewise complex loads.\n+\n 2023-03-12  Jakub Jelinek  <jakub@redhat.com>\n \n \t* config/aarch64/aarch64.h (aarch64_bf16_type_node): Remove."}, {"sha": "975096e7c1c10384277fda55913a284d2baf73a7", "filename": "gcc/DATESTAMP", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9835599fdb56f33da23e4514a9e21d8c2d51d71/gcc%2FDATESTAMP", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9835599fdb56f33da23e4514a9e21d8c2d51d71/gcc%2FDATESTAMP", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FDATESTAMP?ref=a9835599fdb56f33da23e4514a9e21d8c2d51d71", "patch": "@@ -1 +1 @@\n-20230313\n+20230314"}, {"sha": "83d955dd96481d2cbf839acfcf28f4e7a86c25f2", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9835599fdb56f33da23e4514a9e21d8c2d51d71/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9835599fdb56f33da23e4514a9e21d8c2d51d71/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=a9835599fdb56f33da23e4514a9e21d8c2d51d71", "patch": "@@ -1,3 +1,14 @@\n+2023-03-13  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/107128\n+\t* parser.cc (cp_parser_set_decl_spec_type): Use\n+\tredefined_builtin_type for extended_float_type_p.\n+\n+2023-03-13  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c++/107532\n+\t* call.cc (reference_like_class_p): Check for std::span.\n+\n 2023-03-10  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c++/107558"}, {"sha": "bd1a4c96cd40210781fe340e070acf5bb017066e", "filename": "gcc/d/ChangeLog", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9835599fdb56f33da23e4514a9e21d8c2d51d71/gcc%2Fd%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9835599fdb56f33da23e4514a9e21d8c2d51d71/gcc%2Fd%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2FChangeLog?ref=a9835599fdb56f33da23e4514a9e21d8c2d51d71", "patch": "@@ -1,3 +1,19 @@\n+2023-03-13  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* decl.cc (finish_thunk): Unset DECL_EXTERNAL on thunk.\n+\t(make_thunk): Set DECL_EXTERNAL on thunk, don't call build_decl_tree.\n+\t(finish_function): Call finish_thunk on forward referenced thunks.\n+\n+2023-03-13  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* decl.cc (get_fndecl_result): New function.\n+\t(get_fndecl_arguments): New function.\n+\t(DeclVisitor::visit (FuncDeclaration *)): Adjust to call\n+\tget_fndecl_arguments.\n+\t(make_thunk): Adjust to call get_fndecl_arguments and\n+\tget_fndecl_result.\n+\t(start_function): Adjust to call get_fndecl_result.\n+\n 2023-03-03  Iain Buclaw  <ibuclaw@gdcproject.org>\n \n \tPR d/108763"}, {"sha": "c051ed5939c2b22277bb4269fe556c78de81403a", "filename": "gcc/m2/ChangeLog", "status": "modified", "additions": 109, "deletions": 0, "changes": 109, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9835599fdb56f33da23e4514a9e21d8c2d51d71/gcc%2Fm2%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9835599fdb56f33da23e4514a9e21d8c2d51d71/gcc%2Fm2%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2FChangeLog?ref=a9835599fdb56f33da23e4514a9e21d8c2d51d71", "patch": "@@ -1,3 +1,112 @@\n+2023-03-13  Gaius Mulley  <gaiusmod2@gmail.com>\n+\n+\tPR modula2/109103\n+\t* gm2-compiler/M2ALU.def (PushString): New parameter issueError.\n+\t* gm2-compiler/M2ALU.mod (PushString): New parameter issueError.\n+\t* gm2-compiler/SymbolTable.mod (PushString): New parameter issueError.\n+\t* gm2-gcc/m2decl.cc (m2decl_DetermineSizeOfConstant): Pass\n+\tlocation to interpret_m2_integer.\n+\t(m2decl_BuildConstLiteralNumber): New parameter issueError.\n+\t* gm2-gcc/m2expr.cc (m2expr_IsTrue): Replace int with bool.\n+\t(m2expr_IsFalse): Replace int with bool.\n+\t(m2expr_AreConstantsEqual): Replace int with bool.\n+\t(m2expr_BuildBinaryForeachWordDo): Call m2linemap_internal_error_at.\n+\t(append_digit): Ditto.\n+\t(m2expr_interpret_integer): Add location parameter.\n+\t(append_m2_digit): Call m2linemap_internal_error_at.\n+\t(m2expr_interpret_m2_integer): Add location parameter.\n+\t(m2expr_GetSizeOf): Replace sizeof with SIZE in error message.\n+\t* gm2-gcc/m2expr.h (m2expr_AreRealOrComplexConstantsEqual):\n+\tReplace int with bool.\n+\t(m2expr_AreConstantsEqual): Ditto.\n+\t(m2expr_IsFalse): Ditto.\n+\t(m2expr_IsTrue): Ditto.\n+\t(m2expr_interpret_integer): Add location parameter.\n+\t(m2expr_interpret_m2_integer): Add location parameter.\n+\t* gm2-gcc/m2linemap.cc (mformat_value): New function.\n+\t(expand_format): New function.\n+\t(expand_message): New function.\n+\t(gm2_internal_error_at): New function.\n+\t(m2linemap_internal_error_at): New function.\n+\t* gm2-gcc/m2linemap.h (m2linemap_internal_error_at): New function.\n+\t* gm2-gcc/m2options.h (M2Options_SetISO): Replace int with bool.\n+\t(M2Options_SetPIM): Ditto.\n+\t(M2Options_SetPIM2): Ditto.\n+\t(M2Options_SetPIM3): Ditto.\n+\t(M2Options_SetPIM4): Ditto.\n+\t(M2Options_SetFloatValueCheck): Ditto.\n+\t(M2Options_SetWholeValueCheck): Ditto.\n+\t(M2Options_GetISO): Ditto.\n+\t(M2Options_GetPIM): Ditto.\n+\t(M2Options_GetPIM2): Ditto.\n+\t(M2Options_GetPIM3): Ditto.\n+\t(M2Options_GetPIM4): Ditto.\n+\t(M2Options_GetPositiveModFloor): Ditto.\n+\t(M2Options_GetFloatValueCheck): Ditto.\n+\t(M2Options_GetWholeValueCheck): Ditto.\n+\t(M2Options_Setc): Ditto.\n+\t(M2Options_Getc): Ditto.\n+\t(M2Options_SetPPOnly): Ditto.\n+\t(M2Options_GetPPOnly): Ditto.\n+\t(M2Options_SetUselist): Ditto.\n+\t(M2Options_SetAutoInit): Ditto.\n+\t(M2Options_SetPositiveModFloor): Ditto.\n+\t(M2Options_SetNilCheck): Ditto.\n+\t(M2Options_SetWholeDiv): Ditto.\n+\t(M2Options_SetIndex): Ditto.\n+\t(M2Options_SetRange): Ditto.\n+\t(M2Options_SetReturnCheck): Ditto.\n+\t(M2Options_SetCaseCheck): Ditto.\n+\t(M2Options_SetCheckAll): Ditto.\n+\t(M2Options_SetExceptions): Ditto.\n+\t(M2Options_SetStyle): Ditto.\n+\t(M2Options_SetPedantic): Ditto.\n+\t(M2Options_SetPedanticParamNames): Ditto.\n+\t(M2Options_SetPedanticCast): Ditto.\n+\t(M2Options_SetExtendedOpaque): Ditto.\n+\t(M2Options_SetVerboseUnbounded): Ditto.\n+\t(M2Options_SetXCode): Ditto.\n+\t(M2Options_SetCompilerDebugging): Ditto.\n+\t(M2Options_SetQuadDebugging): Ditto.\n+\t(M2Options_SetDebugTraceQuad): Ditto.\n+\t(M2Options_SetDebugTraceAPI): Ditto.\n+\t(M2Options_SetSources): Ditto.\n+\t(M2Options_SetUnboundedByReference): Ditto.\n+\t(M2Options_SetDumpSystemExports): Ditto.\n+\t(M2Options_SetOptimizing): Ditto.\n+\t(M2Options_SetQuiet): Ditto.\n+\t(M2Options_SetCC1Quiet): Ditto.\n+\t(M2Options_SetCpp): Ditto.\n+\t(M2Options_SetSwig): Ditto.\n+\t(M2Options_SetWholeProgram): Ditto.\n+\t(M2Options_SetDebugFunctionLineNumbers): Ditto.\n+\t(M2Options_SetGenerateStatementNote): Ditto.\n+\t(M2Options_GetCpp): Ditto.\n+\t(M2Options_GetM2g): Ditto.\n+\t(M2Options_SetM2g): Ditto.\n+\t(M2Options_SetLowerCaseKeywords): Ditto.\n+\t(M2Options_SetVerbose): Ditto.\n+\t(M2Options_SetUnusedVariableChecking): Ditto.\n+\t(M2Options_SetUnusedParameterChecking): Ditto.\n+\t(M2Options_SetStrictTypeChecking): Ditto.\n+\t(M2Options_SetWall): Ditto.\n+\t(M2Options_SetSaveTemps): Ditto.\n+\t(M2Options_GetSaveTemps): Ditto.\n+\t(M2Options_SetScaffoldStatic): Ditto.\n+\t(M2Options_SetScaffoldDynamic): Ditto.\n+\t(M2Options_SetScaffoldMain): Ditto.\n+\t(M2Options_SetGenModuleList): Ditto.\n+\t(M2Options_SetShared): Ditto.\n+\t* gm2-libs-ch/M2LINK.c: Ditto.\n+\t* gm2-libs-ch/m2rts.h (M2RTS_RequestDependant): Replace\n+\tconst char * with const void *.\n+\t(M2RTS_RegisterModule): Ditto.\n+\t(M2RTS_ConstructModules): Ditto.\n+\t* gm2-gcc/m2decl.def (DetermineSizeOfConstant): New parameter\n+\tissueError.\n+\t* gm2-gcc/m2decl.h (DetermineSizeOfConstant): New parameter\n+\tissueError.\n+\n 2023-03-12  Gaius Mulley  <gaiusmod2@gmail.com>\n \n \tPR modula2/109089"}, {"sha": "dd278c91bf11395e47a377673bb48b07dd90b030", "filename": "gcc/po/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9835599fdb56f33da23e4514a9e21d8c2d51d71/gcc%2Fpo%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9835599fdb56f33da23e4514a9e21d8c2d51d71/gcc%2Fpo%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpo%2FChangeLog?ref=a9835599fdb56f33da23e4514a9e21d8c2d51d71", "patch": "@@ -1,3 +1,11 @@\n+2023-03-13  Joseph Myers  <joseph@codesourcery.com>\n+\n+\t* sv.po: Update.\n+\n+2023-03-13  Joseph Myers  <joseph@codesourcery.com>\n+\n+\t* de.po: Update.\n+\n 2023-03-06  Joseph Myers  <joseph@codesourcery.com>\n \n \t* fr.po, sv.po: Update."}, {"sha": "538954e55a30a8f58a5d00fd501f70839a0455cc", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6179, "deletions": 0, "changes": 6179, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9835599fdb56f33da23e4514a9e21d8c2d51d71/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9835599fdb56f33da23e4514a9e21d8c2d51d71/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=a9835599fdb56f33da23e4514a9e21d8c2d51d71"}, {"sha": "0d5bc9ed00381ac33eec6c612dc5e894b7885f70", "filename": "libcpp/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9835599fdb56f33da23e4514a9e21d8c2d51d71/libcpp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9835599fdb56f33da23e4514a9e21d8c2d51d71/libcpp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2FChangeLog?ref=a9835599fdb56f33da23e4514a9e21d8c2d51d71", "patch": "@@ -1,3 +1,13 @@\n+2023-03-13  Lewis Hyatt  <lhyatt@gmail.com>\n+\n+\tPR preprocessor/67046\n+\t* directives.cc (_cpp_do__Pragma): Increment pfile->keep_tokens to\n+\tensure the returned string token is valid.\n+\n+2023-03-13  Lewis Hyatt  <lhyatt@gmail.com>\n+\n+\t* generated_cpp_wcwidth.h: Regenerated for Unicode 15.\n+\n 2022-12-07  Joseph Myers  <joseph@codesourcery.com>\n \n \t* init.cc (lang_defaults): Enable va_opt for STDC2X."}, {"sha": "22e9bbd4bdd9527d8a0f7b629cbd09ade2498dd0", "filename": "libgcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9835599fdb56f33da23e4514a9e21d8c2d51d71/libgcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9835599fdb56f33da23e4514a9e21d8c2d51d71/libgcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2FChangeLog?ref=a9835599fdb56f33da23e4514a9e21d8c2d51d71", "patch": "@@ -1,3 +1,10 @@\n+2023-03-13  Max Filippov  <jcmvbkbc@gmail.com>\n+\n+\t* config/xtensa/crti.S: Add .note.GNU-stack section on linux.\n+\t* config/xtensa/crtn.S: Likewise.\n+\t* config/xtensa/lib1funcs.S: Likewise.\n+\t* config/xtensa/lib2funcs.S: Likewise.\n+\n 2023-03-12  Jakub Jelinek  <jakub@redhat.com>\n \n \t* config/aarch64/t-softfp (softfp_extensions): Add bfsf."}, {"sha": "f2718af2daa7ad365cc42705c4be28ea440f161b", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9835599fdb56f33da23e4514a9e21d8c2d51d71/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9835599fdb56f33da23e4514a9e21d8c2d51d71/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=a9835599fdb56f33da23e4514a9e21d8c2d51d71", "patch": "@@ -1,3 +1,25 @@\n+2023-03-13  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* config/abi/post/aarch64-linux-gnu/baseline_symbols.txt: Update.\n+\t* config/abi/post/powerpc64-linux-gnu/baseline_symbols.txt: Update.\n+\n+2023-03-13  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* doc/Makefile.am: Add comment referring to documentation.\n+\t* doc/Makefile.in: Regenerate.\n+\n+2023-03-13  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* doc/html/*: Regenerate.\n+\n+2023-03-13  Jonny Grant  <jg@jguk.org>\n+\n+\t* doc/xml/faq.xml: Update copyright year.\n+\n+2023-03-13  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* include/bits/allocator.h: Fix typo in comment.\n+\n 2023-03-12  Jakub Jelinek  <jakub@redhat.com>\n \n \t* config/abi/pre/gnu.ver (CXXABI_1.3.14): Also export __bf16 tinfos"}]}