{"sha": "15b16eb559254f90edec90b418d8b5276049d6fe", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTViMTZlYjU1OTI1NGY5MGVkZWM5MGI0MThkOGI1Mjc2MDQ5ZDZmZQ==", "commit": {"author": {"name": "Ralf Wildenhues", "email": "Ralf.Wildenhues@gmx.de", "date": "2007-01-31T20:05:50Z"}, "committer": {"name": "DJ Delorie", "email": "dj@gcc.gnu.org", "date": "2007-01-31T20:05:50Z"}, "message": "hex.c: Fix typo.\n\n* hex.c: Fix typo.\n* choose-temp.c: Likewise.\n* functions.texi: Regenerate.\n\nFrom-SVN: r121435", "tree": {"sha": "ded2510d9098fc64d9256a027ce42d7c382c12d6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ded2510d9098fc64d9256a027ce42d7c382c12d6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/15b16eb559254f90edec90b418d8b5276049d6fe", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/15b16eb559254f90edec90b418d8b5276049d6fe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/15b16eb559254f90edec90b418d8b5276049d6fe", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/15b16eb559254f90edec90b418d8b5276049d6fe/comments", "author": null, "committer": null, "parents": [{"sha": "5df332522584230825435e6a168c11b7e9883699", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5df332522584230825435e6a168c11b7e9883699", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5df332522584230825435e6a168c11b7e9883699"}], "stats": {"total": 14, "additions": 10, "deletions": 4}, "files": [{"sha": "8056887b2928b66ec499dbc0906735511a7c5d3a", "filename": "libiberty/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15b16eb559254f90edec90b418d8b5276049d6fe/libiberty%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15b16eb559254f90edec90b418d8b5276049d6fe/libiberty%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2FChangeLog?ref=15b16eb559254f90edec90b418d8b5276049d6fe", "patch": "@@ -1,3 +1,9 @@\n+2007-01-31  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n+\n+\t* hex.c: Fix typo.\n+\t* choose-temp.c: Likewise.\n+\t* functions.texi: Regenerate.\n+\n 2007-01-31  Vladimir Prus  <vladimir@codesourcery.com>\n \n \t* pex-common.h (struct pex_obj): New fields"}, {"sha": "b1c2e5b66ba5f76af7816a7ef929c0480c942ba8", "filename": "libiberty/choose-temp.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15b16eb559254f90edec90b418d8b5276049d6fe/libiberty%2Fchoose-temp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15b16eb559254f90edec90b418d8b5276049d6fe/libiberty%2Fchoose-temp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Fchoose-temp.c?ref=15b16eb559254f90edec90b418d8b5276049d6fe", "patch": "@@ -46,7 +46,7 @@ find one.  The current directory is chosen if all else fails so the\n program is exited if a temporary directory can't be found (@code{mktemp}\n fails).  The buffer for the result is obtained with @code{xmalloc}.\n \n-This function is provided for backwards compatability only.  Its use is\n+This function is provided for backwards compatibility only.  Its use is\n not recommended.\n \n @end deftypefn"}, {"sha": "9f49ff484d60813ed770e83b56ca4f6bc79f4080", "filename": "libiberty/functions.texi", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15b16eb559254f90edec90b418d8b5276049d6fe/libiberty%2Ffunctions.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15b16eb559254f90edec90b418d8b5276049d6fe/libiberty%2Ffunctions.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Ffunctions.texi?ref=15b16eb559254f90edec90b418d8b5276049d6fe", "patch": "@@ -153,7 +153,7 @@ find one.  The current directory is chosen if all else fails so the\n program is exited if a temporary directory can't be found (@code{mktemp}\n fails).  The buffer for the result is obtained with @code{xmalloc}.\n \n-This function is provided for backwards compatability only.  Its use is\n+This function is provided for backwards compatibility only.  Its use is\n not recommended.\n \n @end deftypefn\n@@ -420,7 +420,7 @@ or zero if it is not.  Note that the value you pass will be cast to\n @deftypefn Extension {unsigned int} hex_value (int @var{c})\n \n Returns the numeric equivalent of the given character when interpreted\n-as a hexidecimal digit.  The result is undefined if you pass an\n+as a hexadecimal digit.  The result is undefined if you pass an\n invalid hex digit.  Note that the value you pass will be cast to\n @code{unsigned char} within the macro.\n "}, {"sha": "5eeafdbd15860f55457ac635cda89237db6e3652", "filename": "libiberty/hex.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15b16eb559254f90edec90b418d8b5276049d6fe/libiberty%2Fhex.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15b16eb559254f90edec90b418d8b5276049d6fe/libiberty%2Fhex.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Fhex.c?ref=15b16eb559254f90edec90b418d8b5276049d6fe", "patch": "@@ -50,7 +50,7 @@ or zero if it is not.  Note that the value you pass will be cast to\n @deftypefn Extension {unsigned int} hex_value (int @var{c})\n \n Returns the numeric equivalent of the given character when interpreted\n-as a hexidecimal digit.  The result is undefined if you pass an\n+as a hexadecimal digit.  The result is undefined if you pass an\n invalid hex digit.  Note that the value you pass will be cast to\n @code{unsigned char} within the macro.\n "}]}