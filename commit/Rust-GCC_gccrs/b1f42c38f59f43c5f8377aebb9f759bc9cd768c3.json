{"sha": "b1f42c38f59f43c5f8377aebb9f759bc9cd768c3", "node_id": "C_kwDOANBUbNoAKGIxZjQyYzM4ZjU5ZjQzYzVmODM3N2FlYmI5Zjc1OWJjOWNkNzY4YzM", "commit": {"author": {"name": "Philip Herron", "email": "philip.herron@embecosm.com", "date": "2022-03-30T13:50:18Z"}, "committer": {"name": "Philip Herron", "email": "philip.herron@embecosm.com", "date": "2022-04-09T21:26:42Z"}, "message": "Add helper as_string for DefIds", "tree": {"sha": "9b78792c8725b6e336fdf5b4ff34846cae17ceb3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9b78792c8725b6e336fdf5b4ff34846cae17ceb3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b1f42c38f59f43c5f8377aebb9f759bc9cd768c3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b1f42c38f59f43c5f8377aebb9f759bc9cd768c3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b1f42c38f59f43c5f8377aebb9f759bc9cd768c3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b1f42c38f59f43c5f8377aebb9f759bc9cd768c3/comments", "author": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "committer": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e43a5c5373b341d217d2f5403f31f5174b8c4e2f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e43a5c5373b341d217d2f5403f31f5174b8c4e2f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e43a5c5373b341d217d2f5403f31f5174b8c4e2f"}], "stats": {"total": 8, "additions": 8, "deletions": 0}, "files": [{"sha": "b4380f17c3e494f2410b0614dc174aa84dc186d6", "filename": "gcc/rust/util/rust-mapping-common.h", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b1f42c38f59f43c5f8377aebb9f759bc9cd768c3/gcc%2Frust%2Futil%2Frust-mapping-common.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b1f42c38f59f43c5f8377aebb9f759bc9cd768c3/gcc%2Frust%2Futil%2Frust-mapping-common.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Futil%2Frust-mapping-common.h?ref=b1f42c38f59f43c5f8377aebb9f759bc9cd768c3", "patch": "@@ -50,6 +50,14 @@ struct DefId\n     return ((uint64_t) this->crateNum << 32 | this->localDefId)\n \t   < ((uint64_t) other.crateNum << 32 | other.localDefId);\n   }\n+\n+  std::string as_string () const\n+  {\n+    std::string buf;\n+    buf += std::to_string (crateNum);\n+    buf += std::to_string (localDefId);\n+    return buf;\n+  }\n };\n \n #define UNKNOWN_CREATENUM ((uint32_t) (0))"}]}