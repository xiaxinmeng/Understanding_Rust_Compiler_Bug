{"sha": "73564433f519ba0db6f1222e829518f16028c0e2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzM1NjQ0MzNmNTE5YmEwZGI2ZjEyMjJlODI5NTE4ZjE2MDI4YzBlMg==", "commit": {"author": {"name": "Ilya Leoshkevich", "email": "iii@linux.ibm.com", "date": "2020-12-03T01:01:16Z"}, "committer": {"name": "Ilya Leoshkevich", "email": "iii@linux.ibm.com", "date": "2020-12-03T09:48:20Z"}, "message": "Fix division by 0 in printf_strlen_execute when dumping\n\ngcc/ChangeLog:\n\n2020-12-03  Ilya Leoshkevich  <iii@linux.ibm.com>\n\n\t* tree-ssa-strlen.c (printf_strlen_execute): Avoid division by\n\t0.", "tree": {"sha": "ea56a89c0844343ac0e990180714051b314d264d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ea56a89c0844343ac0e990180714051b314d264d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/73564433f519ba0db6f1222e829518f16028c0e2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/73564433f519ba0db6f1222e829518f16028c0e2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/73564433f519ba0db6f1222e829518f16028c0e2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/73564433f519ba0db6f1222e829518f16028c0e2/comments", "author": {"login": "iii-i", "id": 45998171, "node_id": "MDQ6VXNlcjQ1OTk4MTcx", "avatar_url": "https://avatars.githubusercontent.com/u/45998171?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iii-i", "html_url": "https://github.com/iii-i", "followers_url": "https://api.github.com/users/iii-i/followers", "following_url": "https://api.github.com/users/iii-i/following{/other_user}", "gists_url": "https://api.github.com/users/iii-i/gists{/gist_id}", "starred_url": "https://api.github.com/users/iii-i/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iii-i/subscriptions", "organizations_url": "https://api.github.com/users/iii-i/orgs", "repos_url": "https://api.github.com/users/iii-i/repos", "events_url": "https://api.github.com/users/iii-i/events{/privacy}", "received_events_url": "https://api.github.com/users/iii-i/received_events", "type": "User", "site_admin": false}, "committer": {"login": "iii-i", "id": 45998171, "node_id": "MDQ6VXNlcjQ1OTk4MTcx", "avatar_url": "https://avatars.githubusercontent.com/u/45998171?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iii-i", "html_url": "https://github.com/iii-i", "followers_url": "https://api.github.com/users/iii-i/followers", "following_url": "https://api.github.com/users/iii-i/following{/other_user}", "gists_url": "https://api.github.com/users/iii-i/gists{/gist_id}", "starred_url": "https://api.github.com/users/iii-i/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iii-i/subscriptions", "organizations_url": "https://api.github.com/users/iii-i/orgs", "repos_url": "https://api.github.com/users/iii-i/repos", "events_url": "https://api.github.com/users/iii-i/events{/privacy}", "received_events_url": "https://api.github.com/users/iii-i/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b20cd0c743b8823d8ac4437bf893ce691fb820e8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b20cd0c743b8823d8ac4437bf893ce691fb820e8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b20cd0c743b8823d8ac4437bf893ce691fb820e8"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "522b2d45b3a198556a59fe9a1b05978dfe17278a", "filename": "gcc/tree-ssa-strlen.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73564433f519ba0db6f1222e829518f16028c0e2/gcc%2Ftree-ssa-strlen.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73564433f519ba0db6f1222e829518f16028c0e2/gcc%2Ftree-ssa-strlen.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-strlen.c?ref=73564433f519ba0db6f1222e829518f16028c0e2", "patch": "@@ -5684,7 +5684,7 @@ printf_strlen_execute (function *fun, bool warn_only)\n \t       \"  failures:          %u\\n\"\n \t       \"  max_depth:         %u\\n\",\n \t       nidxs,\n-\t       (nused * 100) / nidxs,\n+\t       nidxs == 0 ? 0 : (nused * 100) / nidxs,\n \t       walker.ptr_qry.var_cache->access_refs.length (),\n \t       walker.ptr_qry.hits, walker.ptr_qry.misses,\n \t       walker.ptr_qry.failures, walker.ptr_qry.max_depth);"}]}