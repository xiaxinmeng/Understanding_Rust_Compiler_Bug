{"sha": "a241f8ca212b7f27a986e495c15d6890d0dbb44e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTI0MWY4Y2EyMTJiN2YyN2E5ODZlNDk1YzE1ZDY4OTBkMGRiYjQ0ZQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2016-07-14T18:30:38Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2016-07-14T18:30:38Z"}, "message": "re PR tree-optimization/71872 (ICE in inchash::add_expr, at tree.c:7782 - OEP_ADDRESS_OF asserted for ADDR_EXPR applied to constant)\n\n\tPR tree-optimization/71872\n\t* tree-data-ref.c (get_references_in_stmt): Ignore references\n\twith is_gimple_constant get_base_address.\n\n\t* gcc.c-torture/compile/pr71872.c: New test.\n\nFrom-SVN: r238351", "tree": {"sha": "70c8b241e003ffacf8da6bef436a08f5cde8f461", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/70c8b241e003ffacf8da6bef436a08f5cde8f461"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a241f8ca212b7f27a986e495c15d6890d0dbb44e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a241f8ca212b7f27a986e495c15d6890d0dbb44e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a241f8ca212b7f27a986e495c15d6890d0dbb44e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a241f8ca212b7f27a986e495c15d6890d0dbb44e/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d62b809c11f21a96648cc15a8f3d922cc15137c4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d62b809c11f21a96648cc15a8f3d922cc15137c4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d62b809c11f21a96648cc15a8f3d922cc15137c4"}], "stats": {"total": 29, "additions": 28, "deletions": 1}, "files": [{"sha": "8da237861a182eb0c0eca1580f7bd09f9c15c887", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a241f8ca212b7f27a986e495c15d6890d0dbb44e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a241f8ca212b7f27a986e495c15d6890d0dbb44e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a241f8ca212b7f27a986e495c15d6890d0dbb44e", "patch": "@@ -1,3 +1,9 @@\n+2016-07-14  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/71872\n+\t* tree-data-ref.c (get_references_in_stmt): Ignore references\n+\twith is_gimple_constant get_base_address.\n+\n 2016-07-14  Thomas Preud'homme  <thomas.preudhomme@arm.com>\n \n \t* config/arm/arm.h (TARGET_HAVE_LDACQ): Enable for ARMv8-M Mainline."}, {"sha": "6b0c7b8a1b524d28118baf14e23c3cccd936fd56", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a241f8ca212b7f27a986e495c15d6890d0dbb44e/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a241f8ca212b7f27a986e495c15d6890d0dbb44e/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=a241f8ca212b7f27a986e495c15d6890d0dbb44e", "patch": "@@ -1,3 +1,8 @@\n+2016-07-14  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/71872\n+\t* gcc.c-torture/compile/pr71872.c: New test.\n+\n 2016-07-14  Thomas Preud'homme  <thomas.preudhomme@arm.com>\n \n \t* gcc.target/arm/atomic-comp-swap-release-acquire.c: Rename into ..."}, {"sha": "6db80db89f307a0bb2833c6f58cb3b7144987736", "filename": "gcc/testsuite/gcc.c-torture/compile/pr71872.c", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a241f8ca212b7f27a986e495c15d6890d0dbb44e/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr71872.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a241f8ca212b7f27a986e495c15d6890d0dbb44e/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr71872.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr71872.c?ref=a241f8ca212b7f27a986e495c15d6890d0dbb44e", "patch": "@@ -0,0 +1,15 @@\n+/* PR tree-optimization/71872 */\n+\n+struct __attribute__((may_alias)) S { int a; };\n+\n+void\n+foo (int *x, struct S *y)\n+{\n+  int i;\n+  for (i = 0; i < 16; i++)\n+    {\n+      int a = 0;\n+      if (*x)\n+        *(struct S *) y = *(struct S *) &a;\n+    }\n+}"}, {"sha": "081ee60319320612b8d1fa606a1c4c8804784e49", "filename": "gcc/tree-data-ref.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a241f8ca212b7f27a986e495c15d6890d0dbb44e/gcc%2Ftree-data-ref.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a241f8ca212b7f27a986e495c15d6890d0dbb44e/gcc%2Ftree-data-ref.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-data-ref.c?ref=a241f8ca212b7f27a986e495c15d6890d0dbb44e", "patch": "@@ -3868,7 +3868,8 @@ get_references_in_stmt (gimple *stmt, vec<data_ref_loc, va_heap> *references)\n       if (DECL_P (op1)\n \t  || (REFERENCE_CLASS_P (op1)\n \t      && (base = get_base_address (op1))\n-\t      && TREE_CODE (base) != SSA_NAME))\n+\t      && TREE_CODE (base) != SSA_NAME\n+\t      && !is_gimple_min_invariant (base)))\n \t{\n \t  ref.ref = op1;\n \t  ref.is_read = true;"}]}