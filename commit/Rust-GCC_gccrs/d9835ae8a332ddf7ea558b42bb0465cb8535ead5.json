{"sha": "d9835ae8a332ddf7ea558b42bb0465cb8535ead5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDk4MzVhZThhMzMyZGRmN2VhNTU4YjQyYmIwNDY1Y2I4NTM1ZWFkNQ==", "commit": {"author": {"name": "Mark Mitchell", "email": "mark@codesourcery.com", "date": "2001-05-13T19:37:13Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "2001-05-13T19:37:13Z"}, "message": "Makefile.in (STAMP): New macro.\n\n\t* Makefile.in (STAMP): New macro.\n\tReplace all uses of `touch' with $(STAMP).\n\t* fixinc/Makefile.in: Likewise.\n\n\t* Make-lang.in: Replace all uses of `touch' with $(STAMP).\n\n\t* Makefile.in.in (STAMP): New macro.\n\tReplace all uses of `touch' with $(STAMP).\n\nFrom-SVN: r42041", "tree": {"sha": "8e25ff575a9283cf732c748a28db2feece429035", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8e25ff575a9283cf732c748a28db2feece429035"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d9835ae8a332ddf7ea558b42bb0465cb8535ead5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d9835ae8a332ddf7ea558b42bb0465cb8535ead5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d9835ae8a332ddf7ea558b42bb0465cb8535ead5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d9835ae8a332ddf7ea558b42bb0465cb8535ead5/comments", "author": null, "committer": null, "parents": [{"sha": "64f0ba0a3ed11b35b819fe92b7d9e835d20ea3f3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/64f0ba0a3ed11b35b819fe92b7d9e835d20ea3f3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/64f0ba0a3ed11b35b819fe92b7d9e835d20ea3f3"}], "stats": {"total": 136, "additions": 84, "deletions": 52}, "files": [{"sha": "5f11b1091a5cde2d96b5fc9aadfd66e7e0a8f695", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d9835ae8a332ddf7ea558b42bb0465cb8535ead5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d9835ae8a332ddf7ea558b42bb0465cb8535ead5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d9835ae8a332ddf7ea558b42bb0465cb8535ead5", "patch": "@@ -1,3 +1,9 @@\n+2001-05-13  Mark Mitchell  <mark@codesourcery.com>\n+\n+\t* Makefile.in (STAMP): New macro.\n+\tReplace all uses of `touch' with $(STAMP).\n+\t* fixinc/Makefile.in: Likewise.\n+\n Sun May 13 07:26:34 2001  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n \n \t* configure.in: ldopen is never in -lexc, so don't test for it."}, {"sha": "e7637f867d6ddb403575faf520ae322a6087f60b", "filename": "gcc/Makefile.in", "status": "modified", "additions": 44, "deletions": 39, "changes": 83, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d9835ae8a332ddf7ea558b42bb0465cb8535ead5/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d9835ae8a332ddf7ea558b42bb0465cb8535ead5/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=d9835ae8a332ddf7ea558b42bb0465cb8535ead5", "patch": "@@ -138,6 +138,11 @@ MAKEOVERRIDES =\n # In stage2 and beyond, we force this to \"-o $@\" since we know we're using gcc.\n OUTPUT_OPTION = @OUTPUT_OPTION@\n \n+# Some versions of `touch' (such as the version on Solaris 2.8) \n+# do not correctly set the timestamp due to buggy versions of `utime'\n+# in the kernel.  So, we use `echo' instead. \n+STAMP = echo timestamp >\n+\n # This is where we get zlib from.  zlibdir is -L../zlib and zlibinc is\n # -I../zlib, unless we were configured with --with-system-zlib, in which\n # case both are empty.\n@@ -1100,7 +1105,7 @@ s-mlib: $(srcdir)/genmultilib Makefile\n \t  \"`test @enable_multilib@ = yes && echo $(MULTILIB_EXCLUSIONS)`\" \\\n \t\t> tmp-mlib.h\n \t$(SHELL) $(srcdir)/move-if-change tmp-mlib.h multilib.h\n-\ttouch s-mlib\n+\t$(STAMP) s-mlib\n \n # Build multiple copies of libgcc.a, one for each target switch.\n stmp-multilib: $(LIBGCC_DEPS)\n@@ -1120,7 +1125,7 @@ stmp-multilib: $(LIBGCC_DEPS)\n \t  LIB1ASMSRC='$(LIB1ASMSRC)' \\\n \t  MAKEOVERRIDES= \\\n \t  -f libgcc.mk all\n-\ttouch stmp-multilib\n+\t$(STAMP) stmp-multilib\n \n # Compile two additional files that are linked with every program\n # linked using GCC on systems using COFF or ELF, for the sake of C++\n@@ -1166,7 +1171,7 @@ s-crt0:\t$(CRT0_S) $(MCRT0_S) $(GCC_PASSES) $(CONFIG_H)\n \t  -o crt0.o -c $(CRT0_S)\n \t$(GCC_FOR_TARGET) $(GCC_CFLAGS) $(CRT0STUFF_T_CFLAGS) \\\n \t  -o mcrt0.o -c $(MCRT0_S)\n-\ttouch s-crt0\n+\t$(STAMP) s-crt0\n #\f\n # Compiling object files from source files.\n \n@@ -1267,7 +1272,7 @@ s-under: $(GCC_PASSES)\n \tfi\n \t$(SHELL) $(srcdir)/move-if-change tmp-under.c underscore.c\n \t-rm -f tmp-dum.c tmp-dum.s\n-\ttouch s-under\n+\t$(STAMP) s-under\n \n # A file used by all variants of C.\n \n@@ -1313,7 +1318,7 @@ tree-check.h: s-check ; @true\n s-check : gencheck$(build_exeext) $(srcdir)/move-if-change\n \t./gencheck$(build_exeext) > tmp-check.h\n \t$(SHELL) $(srcdir)/move-if-change tmp-check.h tree-check.h\n-\ttouch s-check\n+\t$(STAMP) s-check\n \n gencheck$(build_exeext) : gencheck.o $(HOST_LIBDEPS)\n \t$(HOST_CC) $(HOST_CFLAGS) $(HOST_LDFLAGS) -o $@ \\\n@@ -1621,19 +1626,19 @@ insn-config.h: s-config ; @true\n s-config : $(md_file) genconfig$(build_exeext) $(srcdir)/move-if-change\n \t./genconfig$(build_exeext) $(md_file) > tmp-config.h\n \t$(SHELL) $(srcdir)/move-if-change tmp-config.h insn-config.h\n-\ttouch s-config\n+\t$(STAMP) s-config\n \n insn-flags.h: s-flags ; @true\n s-flags : $(md_file) genflags$(build_exeext) $(srcdir)/move-if-change\n \t./genflags$(build_exeext) $(md_file) > tmp-flags.h\n \t$(SHELL) $(srcdir)/move-if-change tmp-flags.h insn-flags.h\n-\ttouch s-flags\n+\t$(STAMP) s-flags\n \n insn-codes.h: s-codes ; @true\n s-codes : $(md_file) gencodes$(build_exeext) $(srcdir)/move-if-change\n \t./gencodes$(build_exeext) $(md_file) > tmp-codes.h\n \t$(SHELL) $(srcdir)/move-if-change tmp-codes.h insn-codes.h\n-\ttouch s-codes\n+\t$(STAMP) s-codes\n \n insn-emit.o : insn-emit.c $(CONFIG_H) $(RTL_H) $(EXPR_H) real.h output.h \\\n   insn-config.h $(SYSTEM_H) reload.h $(RECOG_H) toplev.h \\\n@@ -1644,7 +1649,7 @@ insn-emit.c: s-emit ; @true\n s-emit : $(md_file) genemit$(build_exeext) $(srcdir)/move-if-change\n \t./genemit$(build_exeext) $(md_file) > tmp-emit.c\n \t$(SHELL) $(srcdir)/move-if-change tmp-emit.c insn-emit.c\n-\ttouch s-emit\n+\t$(STAMP) s-emit\n \n insn-recog.o : insn-recog.c $(CONFIG_H) $(RTL_H) insn-config.h $(RECOG_H) \\\n   real.h output.h flags.h $(SYSTEM_H) function.h hard-reg-set.h resource.h \\\n@@ -1655,7 +1660,7 @@ insn-recog.c: s-recog ; @true\n s-recog : $(md_file) genrecog$(build_exeext) $(srcdir)/move-if-change\n \t./genrecog$(build_exeext) $(md_file) > tmp-recog.c\n \t$(SHELL) $(srcdir)/move-if-change tmp-recog.c insn-recog.c\n-\ttouch s-recog\n+\t$(STAMP) s-recog\n \n insn-opinit.o : insn-opinit.c $(CONFIG_H) $(RTL_H) \\\n   insn-config.h flags.h $(RECOG_H) $(EXPR_H) reload.h $(SYSTEM_H)\n@@ -1665,7 +1670,7 @@ insn-opinit.c: s-opinit ; @true\n s-opinit : $(md_file) genopinit$(build_exeext) $(srcdir)/move-if-change\n \t./genopinit$(build_exeext) $(md_file) > tmp-opinit.c\n \t$(SHELL) $(srcdir)/move-if-change tmp-opinit.c insn-opinit.c\n-\ttouch s-opinit\n+\t$(STAMP) s-opinit\n \n insn-extract.o : insn-extract.c $(CONFIG_H) $(RTL_H) $(SYSTEM_H) toplev.h \\\n   insn-config.h $(RECOG_H)\n@@ -1675,7 +1680,7 @@ insn-extract.c: s-extract ; @true\n s-extract : $(md_file) genextract$(build_exeext) $(srcdir)/move-if-change\n \t./genextract$(build_exeext) $(md_file) > tmp-extract.c\n \t$(SHELL) $(srcdir)/move-if-change tmp-extract.c insn-extract.c\n-\ttouch s-extract\n+\t$(STAMP) s-extract\n \n insn-peep.o : insn-peep.c $(CONFIG_H) $(RTL_H) $(REGS_H) output.h real.h \\\n \t$(SYSTEM_H) insn-config.h $(RECOG_H) except.h function.h $(TM_P_H)\n@@ -1685,7 +1690,7 @@ insn-peep.c: s-peep ; @true\n s-peep : $(md_file) genpeep$(build_exeext) $(srcdir)/move-if-change\n \t./genpeep$(build_exeext) $(md_file) > tmp-peep.c\n \t$(SHELL) $(srcdir)/move-if-change tmp-peep.c insn-peep.c\n-\ttouch s-peep\n+\t$(STAMP) s-peep\n \n insn-attrtab.o : insn-attrtab.c $(CONFIG_H) $(RTL_H) $(REGS_H) real.h \\\n     output.h $(INSN_ATTR_H) insn-config.h $(SYSTEM_H) toplev.h $(RECOG_H) \\\n@@ -1696,13 +1701,13 @@ insn-attr.h: s-attr ; @true\n s-attr : $(md_file) genattr$(build_exeext) $(srcdir)/move-if-change\n \t./genattr$(build_exeext) $(md_file) > tmp-attr.h\n \t$(SHELL) $(srcdir)/move-if-change tmp-attr.h insn-attr.h\n-\ttouch s-attr\n+\t$(STAMP) s-attr\n \n insn-attrtab.c: s-attrtab ; @true\n s-attrtab : $(md_file) genattrtab$(build_exeext) $(srcdir)/move-if-change\n \t./genattrtab$(build_exeext) $(md_file) > tmp-attrtab.c\n \t$(SHELL) $(srcdir)/move-if-change tmp-attrtab.c insn-attrtab.c\n-\ttouch s-attrtab\n+\t$(STAMP) s-attrtab\n \n insn-output.o : insn-output.c $(CONFIG_H) $(RTL_H) $(GGC_H) $(REGS_H) real.h \\\n     conditions.h hard-reg-set.h insn-config.h $(INSN_ATTR_H) $(EXPR_H) \\\n@@ -1714,7 +1719,7 @@ insn-output.c: s-output ; @true\n s-output : $(md_file) genoutput$(build_exeext) $(srcdir)/move-if-change\n \t./genoutput$(build_exeext) $(md_file) > tmp-output.c\n \t$(SHELL) $(srcdir)/move-if-change tmp-output.c insn-output.c\n-\ttouch s-output\n+\t$(STAMP) s-output\n \n genrtl.o : genrtl.c $(CONFIG_H) $(RTL_H) $(SYSTEM_H) $(GGC_H)\n genrtl.c genrtl.h : s-genrtl\n@@ -1725,7 +1730,7 @@ s-genrtl: gengenrtl$(build_exeext) $(srcdir)/move-if-change $(RTL_BASE_H)\n \t$(SHELL) $(srcdir)/move-if-change tmp-genrtl.h genrtl.h\n \t./gengenrtl$(build_exeext) >tmp-genrtl.c\n \t$(SHELL) $(srcdir)/move-if-change tmp-genrtl.c genrtl.c\n-\ttouch s-genrtl\n+\t$(STAMP) s-genrtl\n #\f\n # Compile the programs that generate insn-* from the machine description.\n # They are compiled with $(HOST_CC), and associated libraries,\n@@ -1893,7 +1898,7 @@ $(HOST_PREFIX_1)errors.o: errors.c $(HCONFIG_H) $(SYSTEM_H)\n # This satisfies the dependency that we get if you cross-compile a compiler\n # that does not need to compile doprint or whatever.\n $(HOST_PREFIX_1):\n-\ttouch $(HOST_PREFIX_1)\n+\t$(STAMP) $(HOST_PREFIX_1)\n \n $(HOST_PREFIX_1)ggc-none.o: ggc-none.c $(HCONFIG_H) $(SYSTEM_H)\n \trm -f $(HOST_PREFIX)ggc-none.c\n@@ -2077,7 +2082,7 @@ stmp-int-hdrs: $(STMP_FIXINC) $(USER_H) xlimits.h\n \tfor file in .. $(USER_H); do \\\n \t  if [ X$$file != X.. ]; then \\\n \t    realfile=`echo $$file | sed -e 's|.*/\\([^/]*\\)$$|\\1|'`; \\\n-\t    touch include/$$realfile; \\\n+\t    $(STAMP) include/$$realfile; \\\n \t    rm -f include/$$realfile; \\\n \t    cp $$file include; \\\n \t    chmod a+r include/$$realfile; \\\n@@ -2095,7 +2100,7 @@ stmp-int-hdrs: $(STMP_FIXINC) $(USER_H) xlimits.h\n \trm -f include/README\n \tcp $(srcdir)/README-fixinc include/README\n \tchmod a+r include/README\n-\ttouch $@\n+\t$(STAMP) $@\n \n # fixinc.sh depends on this, not on specs directly.\n # The idea is to make sure specs gets built, but not rerun fixinc.sh\n@@ -2104,7 +2109,7 @@ specs.ready: specs\n \t-if [ -f specs.ready ] ; then \\\n \t\ttrue; \\\n \telse \\\n-\t\ttouch specs.ready; \\\n+\t\t$(STAMP) specs.ready; \\\n \tfi\n \n FIXINCSRCDIR=$(srcdir)/fixinc\n@@ -2147,7 +2152,7 @@ stmp-fixinc: fixinc.sh gsyslimits.h\n \t  if [ -d $(libdir)/gcc-lib/$(target_alias) ] ; then true ; else mkdir $(libdir)/gcc-lib/$(target_alias) ; fi; \\\n \t  if [ -d $(libdir)/gcc-lib/$(target_alias)/$(version) ] ; then true ; else mkdir $(libdir)/gcc-lib/$(target_alias)/$(version) ; fi; \\\n \telse true; fi\n-\ttouch stmp-fixinc\n+\t$(STAMP) stmp-fixinc\n \n # Files related to the fixproto script.\n # gen-protos and fix-header are compiled with HOST_CC, but they are only\n@@ -2162,7 +2167,7 @@ deduced.h: $(GCC_PASSES) $(srcdir)/scan-types.sh stmp-int-hdrs\n \t  $(SHELL) $(srcdir)/scan-types.sh \"$(srcdir)\" >tmp-deduced.h; \\\n \t  mv tmp-deduced.h deduced.h; \\\n \telse \\\n-\t  touch deduced.h; \\\n+\t  $(STAMP) deduced.h; \\\n \tfi\n \n GEN_PROTOS_OBJS = gen-protos.o scan.o\n@@ -2208,7 +2213,7 @@ fixhdr.ready: fix-header$(build_exeext)\n \t-if [ -f fixhdr.ready ] ; then \\\n \t\ttrue; \\\n \telse \\\n-\t\ttouch fixhdr.ready; \\\n+\t\t$(STAMP) fixhdr.ready; \\\n \tfi\n \n # stmp-int-headers is to make sure fixincludes has already finished.\n@@ -2225,9 +2230,9 @@ stmp-fixproto: fixhdr.ready fixproto stmp-int-hdrs\n \t    $(SHELL) ${srcdir}/fixproto include include $(SYSTEM_HEADER_DIR); \\\n \t    if [ $$? -eq 0 ] ; then true ; else exit 1 ; fi ; \\\n \t  else true; fi; \\\n-\t  touch include/fixed; \\\n+\t  $(STAMP) include/fixed; \\\n \tfi\n-\ttouch stmp-fixproto\n+\t$(STAMP) stmp-fixproto\n #\f\n # Remake the info files.\n \n@@ -2270,23 +2275,23 @@ cpp.dvi: $(srcdir)/cpp.texi\n generated-manpages: $(srcdir)/gcov.1 $(srcdir)/cpp.1 $(srcdir)/gcc.1\n \n $(srcdir)/gcov.1: $(srcdir)/gcov.texi\n-\ttouch $(srcdir)/gcov.1\n+\t$(STAMP) $(srcdir)/gcov.1\n \t-$(TEXI2POD) < $(srcdir)/gcov.texi > gcov.pod\n \t-($(POD2MAN) gcov.pod > $(srcdir)/gcov.1.T$$$$ && \\\n \t\tmv -f $(srcdir)/gcov.1.T$$$$ $(srcdir)/gcov.1) || \\\n \t\t(rm -f $(srcdir)/gcov.1.T$$$$ && exit 1)\n \t-rm -f gcov.pod\n \n $(srcdir)/cpp.1: $(srcdir)/cpp.texi\n-\ttouch $(srcdir)/cpp.1\n+\t$(STAMP) $(srcdir)/cpp.1\n \t-$(TEXI2POD) < $(srcdir)/cpp.texi > cpp.pod\n \t-($(POD2MAN) cpp.pod > $(srcdir)/cpp.1.T$$$$ && \\\n \t\tmv -f $(srcdir)/cpp.1.T$$$$ $(srcdir)/cpp.1) || \\\n \t\t(rm -f $(srcdir)/cpp.1.T$$$$ && exit 1)\n \t-rm -f cpp.pod\n \n $(srcdir)/gcc.1: $(srcdir)/invoke.texi\n-\ttouch $(srcdir)/gcc.1\n+\t$(STAMP) $(srcdir)/gcc.1\n \t-$(TEXI2POD) < $(srcdir)/invoke.texi > gcc.pod\n \t-($(POD2MAN) gcc.pod > $(srcdir)/gcc.1.T$$$$ && \\\n \t\tmv -f $(srcdir)/gcc.1.T$$$$ $(srcdir)/gcc.1) || \\\n@@ -2759,7 +2764,7 @@ target_subdir = @target_subdir@\n site.exp: ./config.status Makefile\n \t@echo \"Making a new config file...\"\n \t-@rm -f ./tmp?\n-\t@touch site.exp\n+\t@$(STAMP) site.exp\n \t-@mv site.exp site.bak\n \t@echo \"## these variables are automatically generated by make ##\" > ./tmp0\n \t@echo \"# Do not edit here. If you wish to override these values\" >> ./tmp0\n@@ -2924,54 +2929,54 @@ stage1_build:\n \t$(MAKE) CC=\"$(CC)\" libdir=$(libdir) LANGUAGES=\"$(BOOT_LANGUAGES)\" \\\n \t\tCFLAGS=\"$(STAGE1_CFLAGS)\" MAKEINFO=\"$(MAKEINFO)\" \\\n \t\tMAKEINFOFLAGS=\"$(MAKEINFOFLAGS)\"\n-\ttouch stage1_build\n+\t$(STAMP) stage1_build\n \techo stage1_build > stage_last\n \n stage1_copy: stage1_build\n \t$(MAKE) stage1\n-\ttouch stage1_copy\n+\t$(STAMP) stage1_copy\n \techo stage2_build > stage_last\n \n stage2_build: stage1_copy\n \t$(MAKE) CC=\"stage1/xgcc$(exeext) -Bstage1/ -B$(build_tooldir)/bin/\" \\\n \t\t STAGE_PREFIX=stage1/ \\\n \t\t $(STAGE2_FLAGS_TO_PASS)\n-\ttouch stage2_build\n+\t$(STAMP) stage2_build\n \techo stage2_build > stage_last\n \n stage2_copy: stage2_build\n \t$(MAKE) stage2\n-\ttouch stage2_copy\n+\t$(STAMP) stage2_copy\n \techo stage3_build > stage_last\n \n stage3_build: stage2_copy\n \t$(MAKE) CC=\"stage2/xgcc$(exeext) -Bstage2/ -B$(build_tooldir)/bin/\" \\\n \t\t STAGE_PREFIX=stage2/ \\\n \t\t $(STAGE2_FLAGS_TO_PASS)\n-\ttouch stage3_build\n+\t$(STAMP) stage3_build\n \techo stage3_build > stage_last\n \n # For bootstrap4:\n stage3_copy: stage3_build\n \t$(MAKE) stage3\n-\ttouch stage3_copy\n+\t$(STAMP) stage3_copy\n \techo stage4_build > stage_last\n \n stage4_build: stage3_copy\n \t$(MAKE) CC=\"stage3/xgcc$(exeext) -Bstage3/ -B$(build_tooldir)/bin/\" \\\n \t\t STAGE_PREFIX=stage3/ \\\n \t\t $(STAGE2_FLAGS_TO_PASS)\n-\ttouch stage4_build\n+\t$(STAMP) stage4_build\n \techo stage4_build > stage_last\n \n # Additional steps for *-lean targets:\n clean_s1: stage1_copy\n \t-(cd stage1 && rm -f $(VOL_FILES))\n-\ttouch clean_s1\n+\t$(STAMP) clean_s1\n \n clean_s2: stage2_copy\n \t-rm -rf stage1\n-\ttouch clean_s2\n+\t$(STAMP) clean_s2\n \n # The various entry points for bootstrapping.\n "}, {"sha": "4d1fe8fb12b407633136804130062e826cd9b63f", "filename": "gcc/f/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d9835ae8a332ddf7ea558b42bb0465cb8535ead5/gcc%2Ff%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d9835ae8a332ddf7ea558b42bb0465cb8535ead5/gcc%2Ff%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2FChangeLog?ref=d9835ae8a332ddf7ea558b42bb0465cb8535ead5", "patch": "@@ -1,3 +1,7 @@\n+Sun May 13 12:25:06 2001  Mark Mitchell  <mark@codesourcery.com>\n+\n+\t* Make-lang.in: Replace all uses of `touch' with $(STAMP).\n+\n Wed May  2 10:20:08 2001  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n \t* com.c: NULL_PTR -> NULL."}, {"sha": "aea2821a4c29be8edabad186ec58b29f295dd7ef", "filename": "gcc/f/Make-lang.in", "status": "modified", "additions": 15, "deletions": 9, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d9835ae8a332ddf7ea558b42bb0465cb8535ead5/gcc%2Ff%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d9835ae8a332ddf7ea558b42bb0465cb8535ead5/gcc%2Ff%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2FMake-lang.in?ref=d9835ae8a332ddf7ea558b42bb0465cb8535ead5", "patch": "@@ -43,6 +43,12 @@ G77_INSTALL_NAME = `t='$(program_transform_name)'; echo g77 | sed $$t`\n \n # Actual name to use when installing a cross-compiler.\n G77_CROSS_NAME = `t='$(program_transform_cross_name)'; echo g77 | sed $$t`\n+\n+# Some versions of `touch' (such as the version on Solaris 2.8) \n+# do not correctly set the timestamp due to buggy versions of `utime'\n+# in the kernel.  So, we use `echo' instead. \n+STAMP = echo timestamp >\n+\n #\f\n # Define the names for selecting f77 in LANGUAGES.\n # Note that it would be nice to move the dependency on g77\n@@ -62,7 +68,7 @@ F77 f77: f771$(exeext)\n g77spec.o: $(srcdir)/f/g77spec.c $(srcdir)/f/version.h $(SYSTEM_H) $(GCC_H) \\\n \t$(CONFIG_H)\n \tcase \"$(LANGUAGES)\" in \\\n-\t  *[fF]77*) touch lang-f77;; \\\n+\t  *[fF]77*) $(STAMP) lang-f77;; \\\n \t  *) rm -f lang-f77;; \\\n \tesac\n \tif [ -f lang-f77 ]; then \\\n@@ -72,7 +78,7 @@ g77spec.o: $(srcdir)/f/g77spec.c $(srcdir)/f/version.h $(SYSTEM_H) $(GCC_H) \\\n \n g77version.o: $(srcdir)/f/version.c\n \tcase \"$(LANGUAGES)\" in \\\n-\t  *[fF]77*) touch lang-f77;; \\\n+\t  *[fF]77*) $(STAMP) lang-f77;; \\\n \t  *) rm -f lang-f77;; \\\n \tesac\n \tif [ -f lang-f77 ]; then \\\n@@ -114,7 +120,7 @@ f771$(exeext): $(F77_OBJS) $(BACKEND) $(LIBDEPS)\n f/stamp-str: f/str-1t.h f/str-1t.j f/str-2t.h f/str-2t.j \\\n  f/str-fo.h f/str-fo.j f/str-io.h f/str-io.j f/str-nq.h  f/str-nq.j \\\n  f/str-op.h f/str-op.j f/str-ot.h f/str-ot.j\n-\ttouch f/stamp-str\n+\t$(STAMP) f/stamp-str\n \n f/str-1t.h f/str-1t.j: f/fini$(build_exeext) f/str-1t.fin\n \t./f/fini$(build_exeext) $(srcdir)/f/str-1t.fin f/str-1t.j f/str-1t.h\n@@ -168,7 +174,7 @@ $(srcdir)/f/g77.info: $(srcdir)/f/g77.texi $(srcdir)/f/bugs.texi \\\n \t    $(srcdir)/f/g77install.texi $(srcdir)/f/news.texi \\\n \t    $(srcdir)/f/intdoc.texi $(srcdir)/f/root.texi\n \tcase \"$(LANGUAGES)\" in \\\n-\t  *[fF]77*) touch lang-f77;; \\\n+\t  *[fF]77*) $(STAMP) lang-f77;; \\\n \t  *) rm -f lang-f77;; \\\n \tesac\n \tif [ -f lang-f77 ] && [ x$(BUILD_INFO) = xinfo ]; then \\\n@@ -181,7 +187,7 @@ f/g77.dvi: $(srcdir)/f/g77.texi $(srcdir)/f/bugs.texi \\\n \t    $(srcdir)/f/g77install.texi $(srcdir)/f/news.texi \\\n \t    $(srcdir)/f/intdoc.texi $(srcdir)/f/root.texi\n \tcase \"$(LANGUAGES)\" in \\\n-\t  *[fF]77*) touch lang-f77;; \\\n+\t  *[fF]77*) $(STAMP) lang-f77;; \\\n \t  *) rm -f lang-f77;; \\\n \tesac\n # `tex2dvi' was used below, but the Texinfo 3.12 one won't work properly\n@@ -264,7 +270,7 @@ f77.install-normal:\n # run, since we use libsubdir to store our `flag' file, lang-f77.\n f77.install-common: installdirs\n \tcase \"$(LANGUAGES)\" in \\\n-\t  *[fF]77*) touch $(libsubdir)/lang-f77.com;; \\\n+\t  *[fF]77*) $(STAMP) $(libsubdir)/lang-f77.com;; \\\n \t  *) rm -f $(libsubdir)/lang-f77.com;; \\\n \tesac\n \t-if [ -f $(libsubdir)/lang-f77.com -a -f f771$(exeext) ] ; then \\\n@@ -295,7 +301,7 @@ f77.install-common: installdirs\n # run, since we use libsubdir to store our `flag' file, lang-f77.\n f77.install-info: f77.info installdirs\n \tcase \"$(LANGUAGES)\" in \\\n-\t  *[fF]77*) touch $(libsubdir)/lang-f77.info;; \\\n+\t  *[fF]77*) $(STAMP) $(libsubdir)/lang-f77.info;; \\\n \t  *) rm -f $(libsubdir)/lang-f77.info;; \\\n \tesac\n \tif [ -f $(libsubdir)/lang-f77.info -a -f $(srcdir)/f/g77.info ] ; then \\\n@@ -318,7 +324,7 @@ f77.install-info: f77.info installdirs\n # run, since we use libsubdir to store our `flag' file, lang-f77.\n f77.install-man: $(srcdir)/f/g77.1 installdirs\n \tcase \"$(LANGUAGES)\" in \\\n-\t  *[fF]77*) touch $(libsubdir)/lang-f77.man;; \\\n+\t  *[fF]77*) $(STAMP) $(libsubdir)/lang-f77.man;; \\\n \t  *) rm -f $(libsubdir)/lang-f77.man;; \\\n \tesac\n \t-if [ -f $(libsubdir)/lang-f77.man -a -f f771$(exeext) ] ; then \\\n@@ -338,7 +344,7 @@ f77.install-man: $(srcdir)/f/g77.1 installdirs\n # run, since we use libsubdir to store our `flag' file, lang-f77.\n f77.uninstall: installdirs\n \tcase \"$(LANGUAGES)\" in \\\n-\t  *[fF]77*) touch $(libsubdir)/lang-f77.un;; \\\n+\t  *[fF]77*) $(STAMP) $(libsubdir)/lang-f77.un;; \\\n \t  *) rm -f $(libsubdir)/lang-f77.un;; \\\n \tesac\n \t@if [ -f $(libsubdir)/lang-f77.un ] ; then \\"}, {"sha": "eb0fc20a7a406a9e06aa859250cd85c371fd3d1e", "filename": "gcc/fixinc/Makefile.in", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d9835ae8a332ddf7ea558b42bb0465cb8535ead5/gcc%2Ffixinc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d9835ae8a332ddf7ea558b42bb0465cb8535ead5/gcc%2Ffixinc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffixinc%2FMakefile.in?ref=d9835ae8a332ddf7ea558b42bb0465cb8535ead5", "patch": "@@ -1,6 +1,6 @@\n # Makefile for GNU compilers.\n #\n-#   Copyright (C) 1998, 1999, 2000 Free Software Foundation, Inc.\n+#   Copyright (C) 1998, 1999, 2000, 2001 Free Software Foundation, Inc.\n \n #This file is part of GNU CC.\n \n@@ -24,6 +24,11 @@\n \n SHELL=/bin/sh\n \n+# Some versions of `touch' (such as the version on Solaris 2.8) \n+# do not correctly set the timestamp due to buggy versions of `utime'\n+# in the kernel.  So, we use `echo' instead. \n+STAMP = echo timestamp >\n+\n FL_LIST = $(CFLAGS) $(CPPFLAGS) $(WARN_CFLAGS)\n FIXINC_DEFS = -DIN_GCC -DHAVE_CONFIG_H $(FL_LIST) $(INCLUDES)\n \n@@ -80,11 +85,11 @@ twoprocess : test-stamp $(AF)\n \n full-stamp : $(ALLOBJ) $(LIBERTY)\n \t$(CC) $(FIXINC_DEFS) $(LDFLAGS) -o $(FI) $(ALLOBJ) $(LIBERTY)\n-\ttouch $@\n+\t$(STAMP) $@\n \n test-stamp : $(TESTOBJ) $(LIBERTY)\n \t$(CC) $(FIXINC_DEFS) $(LDFLAGS) -o $(FI) $(TESTOBJ) $(LIBERTY)\n-\ttouch $@\n+\t$(STAMP) $@\n \n $(AF): $(FIXOBJ) $(LIBERTY)\n \t$(CC) $(FIXINC_DEFS) $(LDFLAGS) -o $@ $(FIXOBJ) $(LIBERTY)"}, {"sha": "375bc5193d9d1a29ad8bcf8e0836a7a7b12d0004", "filename": "gcc/po/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d9835ae8a332ddf7ea558b42bb0465cb8535ead5/gcc%2Fpo%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d9835ae8a332ddf7ea558b42bb0465cb8535ead5/gcc%2Fpo%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpo%2FChangeLog?ref=d9835ae8a332ddf7ea558b42bb0465cb8535ead5", "patch": "@@ -1,3 +1,8 @@\n+2001-05-13  Mark Mitchell  <mark@codesourcery.com>\n+\n+\t* Makefile.in.in (STAMP): New macro.\n+\tReplace all uses of `touch' with $(STAMP).\n+\n 2001-05-11  Zack Weinberg  <zackw@stanford.edu>\n \n \t* POTFILES.in: Remove assert.h."}, {"sha": "ed8da5d13859f6995c6d615d019f262bd501079b", "filename": "gcc/po/Makefile.in.in", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d9835ae8a332ddf7ea558b42bb0465cb8535ead5/gcc%2Fpo%2FMakefile.in.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d9835ae8a332ddf7ea558b42bb0465cb8535ead5/gcc%2Fpo%2FMakefile.in.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpo%2FMakefile.in.in?ref=d9835ae8a332ddf7ea558b42bb0465cb8535ead5", "patch": "@@ -10,6 +10,7 @@ PACKAGE = @PACKAGE@\n VERSION = @VERSION@\n \n SHELL = /bin/sh\n+STAMP = echo timestamp >\n @SET_MAKE@\n \n srcdir = @srcdir@\n@@ -83,7 +84,7 @@ all-yes: $(CATALOGS) @MAINT@ $(srcdir)/cat-id-tbl.c\n all-no:\n \n stamp-check-po: $(POTFILES)\n-\ttouch stamp-check-po\n+\t$(STAMP) stamp-check-po\n \n check-po: stamp-check-po\n "}]}