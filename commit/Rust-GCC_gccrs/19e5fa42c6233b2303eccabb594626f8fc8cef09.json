{"sha": "19e5fa42c6233b2303eccabb594626f8fc8cef09", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTllNWZhNDJjNjIzM2IyMzAzZWNjYWJiNTk0NjI2ZjhmYzhjZWYwOQ==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2011-11-02T20:03:27Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2011-11-02T20:03:27Z"}, "message": "re PR target/50945 (ICE on floating-point move with -msoft-float)\n\n\tPR target/50945\n\t* config/sparc/sparc.md (movsf_insn): Reindent constraints.\n\t(movdf_insn_sp32): Likewise.  Remove redundant G constraint.\n\t(movdf_insn_sp64): Likewise.\n\t(DFmode splitter): Do not test TARGET_FPU.\n\t(movtf_insn_sp32): Reindent constraints.\n\t(movtf_insn_sp32_no_fpu): Likewise.\n\t(movtf_insn_sp64): Likewise.\n\t(movtf_insn_sp64_hq): Likewise.\n\t(movtf_insn_sp64_no_fpu): Likewise.\n\nFrom-SVN: r180791", "tree": {"sha": "2990b6f6fafa777fbe9b13e208dfa0fc7f5fe904", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2990b6f6fafa777fbe9b13e208dfa0fc7f5fe904"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/19e5fa42c6233b2303eccabb594626f8fc8cef09", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/19e5fa42c6233b2303eccabb594626f8fc8cef09", "html_url": "https://github.com/Rust-GCC/gccrs/commit/19e5fa42c6233b2303eccabb594626f8fc8cef09", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/19e5fa42c6233b2303eccabb594626f8fc8cef09/comments", "author": null, "committer": null, "parents": [{"sha": "7f9876b26c0f3d6db42e626b85df853c75f40e68", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7f9876b26c0f3d6db42e626b85df853c75f40e68", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7f9876b26c0f3d6db42e626b85df853c75f40e68"}], "stats": {"total": 69, "additions": 51, "deletions": 18}, "files": [{"sha": "a3c6d539d6f68aa18270c945118163b5437e3de0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/19e5fa42c6233b2303eccabb594626f8fc8cef09/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/19e5fa42c6233b2303eccabb594626f8fc8cef09/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=19e5fa42c6233b2303eccabb594626f8fc8cef09", "patch": "@@ -1,3 +1,16 @@\n+2011-11-02  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\tPR target/50945\n+\t* config/sparc/sparc.md (movsf_insn): Reindent constraints.\n+\t(movdf_insn_sp32): Likewise.  Remove redundant G constraint.\n+\t(movdf_insn_sp64): Likewise.\n+\t(DFmode splitter): Do not test TARGET_FPU.\n+\t(movtf_insn_sp32): Reindent constraints.\n+\t(movtf_insn_sp32_no_fpu): Likewise.\n+\t(movtf_insn_sp64): Likewise.\n+\t(movtf_insn_sp64_hq): Likewise.\n+\t(movtf_insn_sp64_no_fpu): Likewise.\n+\n 2011-11-02  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR c++/50956"}, {"sha": "76be31af3f411f270464b24f229ab67cbf04132c", "filename": "gcc/config/sparc/sparc.md", "status": "modified", "additions": 17, "deletions": 18, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/19e5fa42c6233b2303eccabb594626f8fc8cef09/gcc%2Fconfig%2Fsparc%2Fsparc.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/19e5fa42c6233b2303eccabb594626f8fc8cef09/gcc%2Fconfig%2Fsparc%2Fsparc.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsparc.md?ref=19e5fa42c6233b2303eccabb594626f8fc8cef09", "patch": "@@ -2041,8 +2041,8 @@\n })\n \n (define_insn \"*movsf_insn\"\n-  [(set (match_operand:SF 0 \"nonimmediate_operand\" \"=d,d,f, *r,*r,*r,*r, f, f,*r, m,   m\")\n-\t(match_operand:SF 1 \"input_operand\"         \"G,C,f,*rR, Q, S, f,*r, m, m, f,*rG\"))]\n+  [(set (match_operand:SF 0 \"nonimmediate_operand\" \"=d,d,f, *r,*r,*r,*r, f,f,*r,m,  m\")\n+\t(match_operand:SF 1 \"input_operand\"         \"G,C,f,*rR, Q, S, f,*r,m, m,f,*rG\"))]\n   \"(register_operand (operands[0], SFmode)\n     || register_or_zero_or_all_ones_operand (operands[1], SFmode))\"\n {\n@@ -2138,8 +2138,8 @@\n })\n \n (define_insn \"*movdf_insn_sp32\"\n-  [(set (match_operand:DF 0 \"nonimmediate_operand\" \"=b,b,e,e,*r, f,  e,T,W,U,T,  f,   *r,  o,o\")\n-        (match_operand:DF 1 \"input_operand\"         \"G,C,e,e, f,*r,W#F,G,e,T,U,o#F,*roGF,*rG,f\"))]\n+  [(set (match_operand:DF 0 \"nonimmediate_operand\" \"=b,b,e,e,*r, f,  e,T,W,U,T,  f,  *r,  o,o\")\n+\t(match_operand:DF 1 \"input_operand\"         \"G,C,e,e, f,*r,W#F,G,e,T,U,o#F,*roF,*rG,f\"))]\n   \"! TARGET_ARCH64\n    && (register_operand (operands[0], DFmode)\n        || register_or_zero_or_all_ones_operand (operands[1], DFmode))\"\n@@ -2166,7 +2166,7 @@\n \n (define_insn \"*movdf_insn_sp64\"\n   [(set (match_operand:DF 0 \"nonimmediate_operand\" \"=b,b,e,*r, e,  e,W, *r,*r,  m,*r\")\n-        (match_operand:DF 1 \"input_operand\"         \"G,C,e, e,*r,W#F,e,*rG, m,*rG, F\"))]\n+\t(match_operand:DF 1 \"input_operand\"         \"G,C,e, e,*r,W#F,e,*rG, m,*rG, F\"))]\n   \"TARGET_ARCH64\n    && (register_operand (operands[0], DFmode)\n        || register_or_zero_or_all_ones_operand (operands[1], DFmode))\"\n@@ -2191,9 +2191,8 @@\n (define_split\n   [(set (match_operand:DF 0 \"register_operand\" \"\")\n         (match_operand:DF 1 \"const_double_operand\" \"\"))]\n-  \"TARGET_FPU\n-   && (GET_CODE (operands[0]) == REG\n-       && SPARC_INT_REG_P (REGNO (operands[0])))\n+  \"REG_P (operands[0])\n+   && SPARC_INT_REG_P (REGNO (operands[0]))\n    && ! const_zero_operand (operands[1], GET_MODE (operands[0]))\n    && reload_completed\"\n   [(clobber (const_int 0))]\n@@ -2378,8 +2377,8 @@\n })\n \n (define_insn \"*movtf_insn_sp32\"\n-  [(set (match_operand:TF 0 \"nonimmediate_operand\" \"=b,e,o,U,r\")\n-\t(match_operand:TF 1 \"input_operand\"    \"G,oe,GeUr,o,roG\"))]\n+  [(set (match_operand:TF 0 \"nonimmediate_operand\" \"=b, e,   o,U,  r\")\n+\t(match_operand:TF 1 \"input_operand\"        \" G,oe,GeUr,o,roG\"))]\n   \"TARGET_FPU\n    && ! TARGET_ARCH64\n    && (register_operand (operands[0], TFmode)\n@@ -2392,8 +2391,8 @@\n ;; when -mno-fpu.\n \n (define_insn \"*movtf_insn_sp32_no_fpu\"\n-  [(set (match_operand:TF 0 \"nonimmediate_operand\" \"=o,U,o,r,o\")\n-\t(match_operand:TF 1 \"input_operand\"    \"G,o,U,roG,r\"))]\n+  [(set (match_operand:TF 0 \"nonimmediate_operand\" \"=o,U,o,  r,o\")\n+\t(match_operand:TF 1 \"input_operand\"        \" G,o,U,roG,r\"))]\n   \"! TARGET_FPU\n    && ! TARGET_ARCH64\n    && (register_operand (operands[0], TFmode)\n@@ -2402,8 +2401,8 @@\n   [(set_attr \"length\" \"4\")])\n \n (define_insn \"*movtf_insn_sp64\"\n-  [(set (match_operand:TF 0 \"nonimmediate_operand\" \"=b,e,o,r\")\n-        (match_operand:TF 1 \"input_operand\"    \"G,oe,Ger,roG\"))]\n+  [(set (match_operand:TF 0 \"nonimmediate_operand\" \"=b, e,  o,  r\")\n+\t(match_operand:TF 1 \"input_operand\"         \"G,oe,Ger,roG\"))]\n   \"TARGET_FPU\n    && TARGET_ARCH64\n    && ! TARGET_HARD_QUAD\n@@ -2413,8 +2412,8 @@\n   [(set_attr \"length\" \"2\")])\n \n (define_insn \"*movtf_insn_sp64_hq\"\n-  [(set (match_operand:TF 0 \"nonimmediate_operand\" \"=b,e,e,m,o,r\")\n-        (match_operand:TF 1 \"input_operand\"    \"G,e,m,e,rG,roG\"))]\n+  [(set (match_operand:TF 0 \"nonimmediate_operand\" \"=b,e,e,m, o,  r\")\n+\t(match_operand:TF 1 \"input_operand\"         \"G,e,m,e,rG,roG\"))]\n   \"TARGET_FPU\n    && TARGET_ARCH64\n    && TARGET_HARD_QUAD\n@@ -2431,8 +2430,8 @@\n    (set_attr \"length\" \"2,*,*,*,2,2\")])\n \n (define_insn \"*movtf_insn_sp64_no_fpu\"\n-  [(set (match_operand:TF 0 \"nonimmediate_operand\" \"=r,o\")\n-        (match_operand:TF 1 \"input_operand\"    \"orG,rG\"))]\n+  [(set (match_operand:TF 0 \"nonimmediate_operand\" \"=  r, o\")\n+\t(match_operand:TF 1 \"input_operand\"         \"orG,rG\"))]\n   \"! TARGET_FPU\n    && TARGET_ARCH64\n    && (register_operand (operands[0], TFmode)"}, {"sha": "92b5bef129b3599f08aa89764926495dc5ba0dd6", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/19e5fa42c6233b2303eccabb594626f8fc8cef09/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/19e5fa42c6233b2303eccabb594626f8fc8cef09/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=19e5fa42c6233b2303eccabb594626f8fc8cef09", "patch": "@@ -1,3 +1,7 @@\n+2011-11-02  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gcc.target/sparc/20111102-1.c: New test.\n+\n 2011-11-02  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR c++/50956"}, {"sha": "d33f103e377cf7483de02db9ec1aaca459b3021d", "filename": "gcc/testsuite/gcc.target/sparc/20111102-1.c", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/19e5fa42c6233b2303eccabb594626f8fc8cef09/gcc%2Ftestsuite%2Fgcc.target%2Fsparc%2F20111102-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/19e5fa42c6233b2303eccabb594626f8fc8cef09/gcc%2Ftestsuite%2Fgcc.target%2Fsparc%2F20111102-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fsparc%2F20111102-1.c?ref=19e5fa42c6233b2303eccabb594626f8fc8cef09", "patch": "@@ -0,0 +1,17 @@\n+/* PR target/50945 */\n+/* { dg-do compile } */\n+/* { dg-options \"-O -msoft-float\" } */\n+\n+double\n+__powidf2 (double x, int m)\n+{\n+  unsigned int n = m < 0 ? -m : m;\n+  double y = n % 2 ? x : 1;\n+  while (n >>= 1)\n+    {\n+      x = x * x;\n+      if (n % 2)\n+\ty = y * x;\n+    }\n+  return m < 0 ? 1/y : y;\n+}"}]}