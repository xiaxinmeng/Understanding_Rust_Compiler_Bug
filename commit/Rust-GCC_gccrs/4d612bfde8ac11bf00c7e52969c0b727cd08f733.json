{"sha": "4d612bfde8ac11bf00c7e52969c0b727cd08f733", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGQ2MTJiZmRlOGFjMTFiZjAwYzdlNTI5NjljMGI3MjdjZDA4ZjczMw==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2017-10-10T18:03:22Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2017-10-10T18:03:22Z"}, "message": "Check non-dependent conversion in return from template fn.\n\n\t* typeck.c (check_return_expr): Check non-dependent conversion in\n\ttemplates.\n\t* constraint.cc (check_function_concept): Don't complain about an\n\tempty concept if seen_error.\n\nFrom-SVN: r253599", "tree": {"sha": "af5aa8f43021030eed870a1424ecc1f95d43b121", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/af5aa8f43021030eed870a1424ecc1f95d43b121"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4d612bfde8ac11bf00c7e52969c0b727cd08f733", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4d612bfde8ac11bf00c7e52969c0b727cd08f733", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4d612bfde8ac11bf00c7e52969c0b727cd08f733", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4d612bfde8ac11bf00c7e52969c0b727cd08f733/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "3652a4d24398b66ac96f2e08e9f36a9b791be79a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3652a4d24398b66ac96f2e08e9f36a9b791be79a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3652a4d24398b66ac96f2e08e9f36a9b791be79a"}], "stats": {"total": 38, "additions": 30, "deletions": 8}, "files": [{"sha": "fe0315c88e0dc6fc88c10a9d8af38bc76b9d6adc", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d612bfde8ac11bf00c7e52969c0b727cd08f733/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d612bfde8ac11bf00c7e52969c0b727cd08f733/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=4d612bfde8ac11bf00c7e52969c0b727cd08f733", "patch": "@@ -1,3 +1,10 @@\n+2017-10-10  Jason Merrill  <jason@redhat.com>\n+\n+\t* typeck.c (check_return_expr): Check non-dependent conversion in\n+\ttemplates.\n+\t* constraint.cc (check_function_concept): Don't complain about an\n+\tempty concept if seen_error.\n+\n 2017-10-10  Richard Sandiford  <richard.sandiford@linaro.org>\n \n \t* cvt.c (ignore_overflows): Use wi::to_wide when"}, {"sha": "8b49455a526349bc01b511a6b9d2dd2770754565", "filename": "gcc/cp/constraint.cc", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d612bfde8ac11bf00c7e52969c0b727cd08f733/gcc%2Fcp%2Fconstraint.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d612bfde8ac11bf00c7e52969c0b727cd08f733/gcc%2Fcp%2Fconstraint.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fconstraint.cc?ref=4d612bfde8ac11bf00c7e52969c0b727cd08f733", "patch": "@@ -2504,7 +2504,12 @@ check_function_concept (tree fn)\n     {\n       location_t loc = DECL_SOURCE_LOCATION (fn);\n       if (TREE_CODE (body) == STATEMENT_LIST && !STATEMENT_LIST_HEAD (body))\n-        error_at (loc, \"definition of concept %qD is empty\", fn);\n+\t{\n+\t  if (seen_error ())\n+\t    /* The definition was probably erroneous, not empty.  */;\n+\t  else\n+\t    error_at (loc, \"definition of concept %qD is empty\", fn);\n+\t}\n       else\n         error_at (loc, \"definition of concept %qD has multiple statements\", fn);\n     }"}, {"sha": "01647d04bc8b8ce3f6e9cc7631767f350f9c731e", "filename": "gcc/cp/typeck.c", "status": "modified", "additions": 14, "deletions": 4, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d612bfde8ac11bf00c7e52969c0b727cd08f733/gcc%2Fcp%2Ftypeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d612bfde8ac11bf00c7e52969c0b727cd08f733/gcc%2Fcp%2Ftypeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck.c?ref=4d612bfde8ac11bf00c7e52969c0b727cd08f733", "patch": "@@ -8957,10 +8957,14 @@ check_return_expr (tree retval, bool *no_warning)\n       if (check_for_bare_parameter_packs (retval))\n \treturn error_mark_node;\n \n-      if (WILDCARD_TYPE_P (TREE_TYPE (DECL_RESULT (current_function_decl)))\n+      /* If one of the types might be void, we can't tell whether we're\n+\t returning a value.  */\n+      if ((WILDCARD_TYPE_P (TREE_TYPE (DECL_RESULT (current_function_decl)))\n+\t   && !current_function_auto_return_pattern)\n \t  || (retval != NULL_TREE\n-\t      && type_dependent_expression_p (retval)))\n-        return retval;\n+\t      && (TREE_TYPE (retval) == NULL_TREE\n+\t\t  || WILDCARD_TYPE_P (TREE_TYPE (retval)))))\n+\tgoto dependent;\n     }\n \n   functype = TREE_TYPE (TREE_TYPE (current_function_decl));\n@@ -9098,8 +9102,10 @@ check_return_expr (tree retval, bool *no_warning)\n \twarning (OPT_Weffc__, \"%<operator=%> should return a reference to %<*this%>\");\n     }\n \n-  if (processing_template_decl)\n+  if (dependent_type_p (functype)\n+      || type_dependent_expression_p (retval))\n     {\n+    dependent:\n       /* We should not have changed the return value.  */\n       gcc_assert (retval == saved_retval);\n       return retval;\n@@ -9126,6 +9132,7 @@ check_return_expr (tree retval, bool *no_warning)\n \n   named_return_value_okay_p = \n     (retval != NULL_TREE\n+     && !processing_template_decl\n      /* Must be a local, automatic variable.  */\n      && VAR_P (retval)\n      && DECL_CONTEXT (retval) == current_function_decl\n@@ -9222,6 +9229,9 @@ check_return_expr (tree retval, bool *no_warning)\n \t\t\t build_zero_cst (TREE_TYPE (retval)));\n     }\n \n+  if (processing_template_decl)\n+    return saved_retval;\n+\n   /* Actually copy the value returned into the appropriate location.  */\n   if (retval && retval != result)\n     retval = build2 (INIT_EXPR, TREE_TYPE (result), result, retval);"}, {"sha": "50fa3b4daddf112dc6945067e03be634a80ea31a", "filename": "gcc/testsuite/g++.dg/concepts/req6.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d612bfde8ac11bf00c7e52969c0b727cd08f733/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Freq6.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d612bfde8ac11bf00c7e52969c0b727cd08f733/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Freq6.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Freq6.C?ref=4d612bfde8ac11bf00c7e52969c0b727cd08f733", "patch": "@@ -4,7 +4,7 @@ struct X { };\n int operator==(X, X) { return 0; }\n \n template<typename T>\n-  concept bool C1() { return X(); }\n+  concept bool C1() { return X(); } // { dg-error \"bool\" }\n \n template<C1 T>\n   void h(T) { } // OK until used."}, {"sha": "e5b3f25b5303b15e65bf08e00234dc50d473365d", "filename": "gcc/testsuite/g++.old-deja/g++.pt/crash3.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d612bfde8ac11bf00c7e52969c0b727cd08f733/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fcrash3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d612bfde8ac11bf00c7e52969c0b727cd08f733/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fcrash3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fcrash3.C?ref=4d612bfde8ac11bf00c7e52969c0b727cd08f733", "patch": "@@ -6,11 +6,11 @@ public:\n     CVector<int> f() const\n     {\n        CVector<int> v();\n-       return v;\n+       return v;\t\t// { dg-error \"convert\" }\n     }\n     CVector<long> g() const\n     {\n        CVector<long> v();\n-       return v;\n+       return v;\t\t// { dg-error \"convert\" }\n     }\n };"}]}